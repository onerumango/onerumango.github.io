{"version":3,"sources":["webpack:///src/app/shared/core-form/core-form.module.ts","webpack:///src/app/views/others/newchequedeposit/newchequedeposit.component.ts","webpack:///src/app/views/others/newchequedeposit/newchequedeposit.component.html","webpack:///src/app/views/others/cheque-withdrawal/cheque-withdrawal.component.ts","webpack:///src/app/views/others/cheque-withdrawal/cheque-withdrawal.component.html","webpack:///src/app/shared/core-form/details-information/details-information.component.ts","webpack:///src/app/shared/core-form/details-information/details-information.component.html","webpack:///src/app/views/others/loan-payment/loan-payment.component.ts","webpack:///src/app/views/others/loan-payment/loan-payment.component.html","webpack:///src/app/views/others/forex-service/forex-service.component.ts","webpack:///src/app/views/others/forex-service/forex-service.component.html","webpack:///src/app/views/others/cheq-d/cheq-d.component.ts","webpack:///src/app/views/others/cheq-d/cheq-d.component.html","webpack:///src/app/shared/core-form/footer/footer.component.ts","webpack:///src/app/shared/core-form/footer/footer.component.html","webpack:///src/app/views/others/capture-cheque-details/capture-cheque-details.component.ts","webpack:///src/app/views/others/capture-cheque-details/capture-cheque-details.component.html","webpack:///src/app/views/others/forex-transaction/forex-transaction.component.ts","webpack:///src/app/views/others/forex-transaction/forex-transaction.component.html","webpack:///src/app/shared/core-form/account-information-form/account-information-form.component.ts","webpack:///src/app/shared/core-form/account-information-form/account-information-form.component.html","webpack:///src/app/shared/core-form/transaction-information-form/transaction-information-form.component.ts","webpack:///src/app/shared/core-form/transaction-information-form/transaction-information-form.component.html","webpack:///src/app/views/others/newcashwithdrawal/newcashwithdrawal.component.ts","webpack:///src/app/views/others/newcashwithdrawal/newcashwithdrawal.component.html","webpack:///src/app/shared/models/tokenObjects.ts","webpack:///src/app/views/others/others.module.ts","webpack:///src/app/views/others/cd-service/cd-service.component.ts","webpack:///src/app/views/others/cd-service/cd-service.component.html","webpack:///src/app/shared/core-form/header/header.component.ts","webpack:///src/app/shared/core-form/header/header.component.html","webpack:///src/app/views/others/cw-service/cw-service.component.ts","webpack:///src/app/views/others/cw-service/cw-service.component.html","webpack:///src/app/views/others/select-service/select-service.component.ts","webpack:///src/app/views/others/select-service/select-service.component.html","webpack:///src/app/views/others/cash-deposit/cash-deposit.component.ts","webpack:///src/app/views/others/cash-deposit/cash-deposit.component.html","webpack:///src/app/views/others/utility-billpayment/utility-billpayment.component.ts","webpack:///src/app/views/others/utility-billpayment/utility-billpayment.component.html","webpack:///src/app/shared/core-form/denomination-info/denomination-info.component.ts","webpack:///src/app/shared/core-form/denomination-info/denomination-info.component.html","webpack:///src/app/shared/directives/onlynumber.directive.ts","webpack:///src/app/views/others/scan-your-cheque/scan-your-cheque.component.ts","webpack:///src/app/views/others/scan-your-cheque/scan-your-cheque.component.html","webpack:///src/app/views/others/cheque-withdrawal1/cheque-withdrawal1.component.ts","webpack:///src/app/views/others/cheque-withdrawal1/cheque-withdrawal1.component.html","webpack:///src/app/views/others/newcashdeposit/newcashdeposit.component.ts","webpack:///src/app/views/others/newcashdeposit/newcashdeposit.component.html","webpack:///src/app/views/others/cheque-deposit/cheque-deposit.component.ts","webpack:///src/app/views/others/cheque-deposit/cheque-deposit.component.html","webpack:///src/app/views/others/others.routing.ts","webpack:///src/app/views/others/deposit-topup/deposit-topup.component.ts","webpack:///src/app/views/others/deposit-topup/deposit-topup.component.html","webpack:///src/app/views/others/ocr-scan-page/ocr-scan-page.component.ts","webpack:///src/app/views/others/ocr-scan-page/ocr-scan-page.component.html","webpack:///src/app/views/others/app-blank/app-blank.component.ts","webpack:///src/app/views/others/app-blank/app-blank.component.html","webpack:///src/app/views/others/kiosk-homepage/kiosk-homepage.component.ts","webpack:///src/app/views/others/kiosk-homepage/kiosk-homepage.component.html","webpack:///src/app/views/others/cheq-w/cheq-w.component.ts","webpack:///src/app/views/others/cheq-w/cheq-w.component.html","webpack:///src/app/shared/core-form/form/form.component.ts","webpack:///src/app/shared/core-form/form/form.component.html","webpack:///src/app/views/others/otp-verify/otp-verify.component.ts","webpack:///src/app/views/others/otp-verify/otp-verify.component.html","webpack:///src/app/views/others/cash-withdrawal/cash-withdrawal.component.ts","webpack:///src/app/views/others/cash-withdrawal/cash-withdrawal.component.html"],"names":["components","CoreFormModule","declarations","imports","exports","chequedepositForm","value","NewchequedepositComponent","router","formBuilder","dialogService","apiService","dialog","cdr","ls","snack","changeDef","titleName","accType","customerName","productCode","tokenOrigin","denomCodeArray","key","defaultValue","name","alpha2Code","alpha3Code","numericCode","callingCode","accounttypeArray","idList","tokenObjects","isedit","enableContinue","currencyImage","ifQRvariable","accountNoList","showAccountNum","showAccoutType","oTpModel","accountDropdown","flag1","hideDetails","phoneNumber","localStorage","getItem","appointmentId","transBranch","custValidation","custNameFromLogin","qrData","JSON","parse","console","log","group","transactionId","required","chequeNumber","customerId","accountType","totalAmount","accountNumber","holderName","accountCurrency","transactionCurrency","totalChargeAmount","totalTransactionAmount","transactionAmount","min","accountBalance","createdBy","createdTime","modifiedBy","modifiedTime","recordStatus","authStatus","version","accountBranch","transactionBranch","gettingallTansactionDetails","accountId","controls","setValue","getChargeDetails","accountBal","customerID","toLowerCase","getAccountBranch","getCountrynameValues","gettransactionBranch","data","cashWithdrawlData","accNum","reset","fetchByaccNum","subscribe","res","userName","accHolderName","accBalance","custmerID","curr","currency","custAmountBal","fetchByaccDeatilsoncustId","resp","phonenum","setItem","formData","type","cdForm","chequedepositValues","chequedepositype","chequedepositform","source","source_key","source_value","amount","transamountwithoutcomma","replace","getOtp","otpResp","openDialogOTP","open","duration","verticalPosition","horizontalPosition","getOTPforSave","numbr","dialogRef","number","disableClose","afterClosed","submit","accountNum","tokenBranch","transactionStatus","saveofCashDeposit","cashDepositResp","cashDepositResponse","tokenNum","tokenNumber","estimatedTime","estimatedWaitTime","tokenGenerationDialog","event","pattern","inputChar","String","fromCharCode","charCode","test","preventDefault","getTransactionBranch","branches","trasactionBranches","getBranchforKiosk","branchData","forEach","element","index","branch","branchName","getCountryValues","allCountryValues","countryValues","$event","navigateByUrl","removeItem","authenticationDialog","gettingTransactionDetails","allTransactionResp","firstName","middleName","lastName","custID","custAccountData","custAccount","filter","map","obj","includes","j","length","status","push","accTyp","custAccountNumber","accountNum1","accounNum","i","getData","custype","item","defaultId","custNum","val","account","record","selectedAccountInfo","currentBalance","fetchBranchInfoByBranchName","response","qrBranchCode","stringify","chequeDepositResp","chequeDepositResponse","a","parseInt","count2000","count500","count200","count100","count50","count20","count10","count1","transamount","transAmt","target","savedInput","transAmount","lastCharIsPoint","charAt","num","Number","toLocaleString","concat","detectChanges","balance","parseFloat","totalTransAmount","chargeDetails","markForCheck","fetchChargeDetails","cashData","setTimeout","country","currencyCode","toString","split","substring","getAppointmentId","goToServiceScreens","selector","templateUrl","styleUrls","chequewithdrawForm","ChequeWithdrawalComponent","toast","countryFormControl","enableBtn","enableBtn1","getBankInformation","chequewithdrawValues","chequewithdrawtype","chequewithdrawform","denominationData","denominationDataArray","denomRequired","denominationKey","denominationValue","denomination","chequeWithrwResponse","form","branchCode","fetchBankInfoByBranchCode","providedIn","title","DetailsInformationComponent","LoanPaymentComponent","loanPayment","testing","viewValue","loanpaymentForm","loanAccount","currentArrears","currentDue","principalOutstanding","payFromAccount","repaymentAmount","goToAuthenticate","ForexServiceComponent","CheqDComponent","_location","dataService","Token","TokenGenerationObj","custPref","entityCode","bankCode","displayDenom","cheqDepositForm","transaction","customerCategory","narrative","gettransactionFormdata","Object","keys","constructor","transactiondata","getaccountFormdata","appointmentDetails","removetransactionFormData","removeaccountFormData","onSaveofchequeDeposit","denominationdata","getOTP","chequeType","exchangeRate","accountAmount","cheqWithdrawResp","cheqDepositResponse","isMobileLogin","changeDetection","OnPush","cancel","save","FooterComponent","saveText","cancelText","cancelDisabled","saveDisabled","saving","exit","clickExit","CaptureChequeDetailsComponent","e","width","height","close","back","scanChequeFront","scanChequeBack","ForexTransactionComponent","forexTransaction","forexForm","fxCurrency","fxAmount","negotiatedRate","disabled","get","valueChanges","onCountrySelected","goToToken","AccountInformationFormComponent","fb","elRef","renderer","cashWithdrawal","hideAccNum","subscriptions","onChange","onTouched","accountForm","email","s","unsubscribe","fn","_","valid","profile","accountCurrency1","primaryAcc","sendaccountFormData","panelClass","provide","useExisting","multi","providers","TransactionInformationFormComponent","transactionForm","password","chqPage","details","setValueForWalkInCustomer","getNavParam","titleData","fetchExchangeRateForCurrency","exchangerateResp","selected","sendNavParam","sellRate","sendtransactionFormData","formCurrency","accountComponent","cashwithdrawForm","NewcashwithdrawalComponent","cashwithDrwValues","cashwithDrwType","cashwithDrwform","saveofCashwithdraw","cashWithdrawResp","cashWithdrawResponse","tokenResp","TokenObjects","OthersModule","forRoot","forChild","entryComponents","CdServiceComponent","cashDepositForm","getdenominationFormdata","onSaveofcashDeposit","removedenominationFormData","cashdepositValues","cashDepositType","cashdeposiform","cashdepositType","Error","cashdepositForm","HeaderComponent","accountData","CwServiceComponent","cashWithdrawForm","onSaveofCashWithdraw","SelectServiceComponent","flag","active","folders","id","link","image","enableList","x","navigate","contentDiv","nativeElement","scrollLeft","scrollRight","goToOperations","read","widgetsContent","CashDepositComponent","isLoading","UtilityBillpaymentComponent","utilityBillpayment","utilityBillPaymentForm","billerName","payFromAcc","billDate","billNumber","DenominationInfoComponent","transactionAmounts","sendDenominationFormData","transactionAmountValue","OnlynumberDirective","el","navigationKeys","inputElement","indexOf","ctrlKey","metaKey","shiftKey","keyCode","pastedInput","clipboardData","document","execCommand","textData","dataTransfer","focus","onKeyDown","onPaste","onDrop","ScanYourChequeComponent","scan","ChequeWithdrawal1Component","goToOperation","NewcashdepositComponent","ChequeDepositComponent","OthersRoutes","path","children","component","DepositTopupComponent","depositTopUp","depositForm","depositAccount","revisedAmount","maturityAmount","topupAmount","OcrScanPageComponent","AppBlankComponent","route","onClickOfButton1","onClickOfButton","onClickOfButton3","KioskHomepageComponent","isSelect","srcimage2","timer","CheqWComponent","chequewithdrawalForm","FormComponent","encapsulation","None","OtpVerifyComponent","verifyOtpModel","afterSubmit","basicInformationForm","otp","otpValue","otpNumber","customerPhoneNum","sourceKey","sourceValue","verifyOtp","userId","emit","responseMessage","error","closeClick","validateOtp","CashWithdrawalComponent"],"mappings":"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","file":"views-others-others-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { HeaderComponent } from './header/header.component';\r\nimport { FooterComponent } from './footer/footer.component';\r\nimport { AccountInformationFormComponent } from './account-information-form/account-information-form.component';\r\nimport { TransactionInformationFormComponent } from './transaction-information-form/transaction-information-form.component';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { RouterModule } from '@angular/router';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { PerfectScrollbarModule } from 'ngx-perfect-scrollbar';\r\nimport { SharedDirectivesModule } from '../directives/shared-directives.module';\r\nimport { SharedPipesModule } from '../pipes/shared-pipes.module';\r\nimport { SharedMaterialModule } from '../shared-material.module';\r\nimport { FormComponent } from './form/form.component';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { DenominationInfoComponent } from './denomination-info/denomination-info.component';\r\nimport { DetailsInformationComponent } from './details-information/details-information.component';\r\n\r\nconst components = [\r\n  HeaderComponent,\r\n  FooterComponent,\r\n  AccountInformationFormComponent,\r\n  TransactionInformationFormComponent,\r\n  FormComponent,\r\n  DenominationInfoComponent,\r\n  DetailsInformationComponent\r\n];\r\n\r\n@NgModule({\r\n  declarations: components,\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    RouterModule,\r\n    TranslateModule,\r\n    FlexLayoutModule,\r\n    PerfectScrollbarModule,\r\n    SharedPipesModule,\r\n    SharedDirectivesModule,\r\n    SharedMaterialModule,\r\n    MatIconModule,\r\n  ],\r\n  exports: components\r\n})\r\nexport class CoreFormModule { }","import { Country } from '@angular-material-extensions/select-country';\r\nimport { getCurrencySymbol } from '@angular/common';\r\nimport { ChangeDetectorRef, Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { otpModel } from 'app/shared/models/otp.model';\r\nimport { TokenObjects } from 'app/shared/models/tokenObjects';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { DialogService } from 'app/shared/services/Dialog/dialog.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { OtpVerifyComponent } from '../otp-verify/otp-verify.component';\r\n\r\n@Component({\r\n  selector: 'app-newchequedeposit',\r\n  templateUrl: './newchequedeposit.component.html',\r\n  styleUrls: ['./newchequedeposit.component.scss']\r\n})\r\nexport class NewchequedepositComponent implements OnInit {\r\n\r\n  titleName : any = 'Cheque Deposit';\r\n  chequedepositForm: FormGroup;\r\n  accType = ['Savings','Deposit'];\r\n  \r\n  customerName = ['Jane Smith','John Smith'];\r\n  accountNum: any;\r\n  productCode = \"CQD\";\r\n  tokenOrigin = \"Kiosk\";\r\n  denomCodeArray: any[] = [\r\n    { key: 'count2000', value: 2000 },\r\n    { key: 'count500', value: 500 },\r\n    { key: 'count200', value: 200 },\r\n    { key: 'count100', value: 100 },\r\n    { key: 'count50', value: 50 },\r\n    { key: 'count20', value: 20 },\r\n    { key: 'count10', value: 10 },\r\n    { key: 'count1', value: 1 }\r\n\r\n  ];\r\n  totalAmount: any;\r\n  transamount: any;\r\n  a: any;\r\n  // @Input() title : any;\r\n  // countryFormControl = new FormControl();\r\n  defaultValue: Country = {\r\n    name: 'Deutschland',\r\n    alpha2Code: 'DE',\r\n    alpha3Code: 'DEU',\r\n    numericCode: '276',\r\n    callingCode: '+49'\r\n  };\r\n  cashDepositResponse: any;\r\n  chequeDepositResponse: any;\r\n  accountBal: any;\r\n  phoneNumber: string;\r\n  errorStatus: number;\r\n  custAccountData: any;\r\n  countryValues: any;\r\n  accounttypeArray =[];\r\n  idList = [];\r\n  noList: any[];\r\n  accNum: any;\r\n  tokenObjects =new TokenObjects();\r\n  accNumber: any;\r\n  tokResponse: any;\r\n  tokenNum: any;\r\n  estimatedTime: any;\r\n  isedit:boolean=true;\r\n  transAmt: any;\r\n  balance: string;\r\n  enableContinue: boolean=true;\r\n  curr: string;\r\n  transAmount: string;\r\n  currencyImage: any = \"\";\r\n  custID: any;\r\n  qrData: any;\r\n  ifQRvariable = false;\r\n  customerID: any;\r\n  branchNameFromLogin: string;\r\n  branchName: string;\r\n  arrayAccountBranch: any;\r\n  trasactionBranches: any;\r\n  branchData: any;\r\n  branch: any;\r\n  userName: string;\r\n  // accountNoList: any[];\r\n  accountNoList = [];\r\n  selectedAccountInfo: any;\r\n  showAccountNum : boolean = true;\r\n  showAccoutType : boolean = true;\r\n  custValidation: string;\r\n  custNameFromLogin: string;\r\n  accountNumber: string;\r\n  custmerID: any;\r\n  phonenum: any;\r\n  oTpModel = new otpModel();\r\n  chequedepositValues: any;\r\n  chequedepositype: any;\r\n  chequedepositform: any;\r\n  accountNum1: any[];\r\n  filteredAccoun: any[];\r\n  accountDropdown: boolean = false;\r\n  flag1:boolean=false;\r\n  hideDetails:boolean=false;\r\n  qrBranchCode: any;\r\n  appointmentId:any;\r\n  totalTransAmount: number;\r\n  chargeDetails: any;\r\n  cashData: any;\r\n  accountCurrency: any;\r\n  transBranch: string;\r\n\r\n  constructor(\r\n    private router : Router,\r\n    private formBuilder: FormBuilder,\r\n     private dialogService : DialogService,\r\n     private apiService:ApiService,\r\n     private dialog: MatDialog,\r\n     private cdr:ChangeDetectorRef,\r\n     private ls: LocalStoreService,  private snack: MatSnackBar, private changeDef: ChangeDetectorRef\r\n     ) { }\r\n  ngOnInit(): void {\r\n    this.phoneNumber = localStorage.getItem(\"phonenumFromLogin\");\r\n    this.appointmentId = this.ls.getItem(\"TransactionType\");\r\n    this.transBranch=localStorage.getItem(\"TRANSACTIONBRANCH\") ;\r\n    \r\n    this.custValidation = localStorage.getItem(\"customerValidation\");\r\n    this.custNameFromLogin = localStorage.getItem(\"FromLogin\");\r\n    if(this.custValidation == \"New Customer\"){\r\n      this.showAccountNum = false;\r\n      this.showAccoutType = false;\r\n    }\r\n    if(this.custNameFromLogin!=null){\r\n      this.showAccountNum=false;\r\n    } \r\n    this.qrData = JSON.parse(JSON.parse(localStorage.getItem('scannerData')));\r\n    console.log(\"QRData\", this.qrData);\r\n    this.chequedepositForm = this.formBuilder.group({\r\n      transactionId:['', [Validators.required]],\r\n      chequeNumber:['',[Validators.required]],\r\n      customerId:['', [Validators.required]],\r\n      accountType:['', [Validators.required]],\r\n      totalAmount:['',Validators.required],\r\n      accountNumber:['', [Validators.required]],\r\n      holderName:['', [Validators.required]],\r\n      accountCurrency:['', [Validators.required]],\r\n      transactionCurrency:['', [Validators.required]],\r\n      totalChargeAmount:['', [Validators.required]],\r\n      totalTransactionAmount:['',[Validators.required]],\r\n      transactionAmount:['', [Validators.required, Validators.min(.1)]],\r\n      accountBalance:['', [Validators.required]],\r\n      productCode:['CQD',[Validators.required]],\r\n      tokenOrigin : ['Kiosk',[Validators.required]],\r\n      // audit\r\n      createdBy:['', [Validators.required]],\r\n      createdTime:['', [Validators.required]],\r\n      modifiedBy:['', [Validators.required]],\r\n      modifiedTime:['', [Validators.required]],\r\n      recordStatus:['', [Validators.required]],\r\n      authStatus:['', [Validators.required]],\r\n      version:['', [Validators.required]],\r\n      accountBranch: ['', [Validators.required]],\r\n      transactionBranch:['', [Validators.required]]\r\n      \r\n    });\r\n    console.log(this.chequedepositForm.value);\r\n    if(this.phoneNumber && this.custNameFromLogin==null && this.appointmentId==null){\r\n      this.ifQRvariable = false;\r\n      this.gettingallTansactionDetails(this.phoneNumber);\r\n      }\r\n      // else{\r\n        if(this.qrData!=null){\r\n        this.ifQRvariable = true;\r\n        console.log(\"Account\", this.qrData.accountId);\r\n        this.chequedepositForm.controls.holderName.setValue(this.qrData.holderName);\r\n        this.chequedepositForm.controls.accountType.setValue(this.qrData.accountType);\r\n        this.chequedepositForm.controls.accountNumber.setValue(this.qrData.accountId);\r\n        this.getChargeDetails(this.qrData.accountId,'');\r\n        this.chequedepositForm.controls.transactionAmount.setValue(this.qrData.transactionAmount);\r\n        this.chequedepositForm.controls.accountCurrency.setValue(this.qrData.accountCurrency);\r\n        this.chequedepositForm.controls.transactionCurrency.setValue(this.qrData.transactionCurrency);\r\n        this.accountBal = this.qrData.accountBalance;\r\n        this.customerID = this.qrData.customerId;\r\n        this.currencyImage = 'currency-flag-'+this.qrData.accountCurrency.toLowerCase();\r\n        this.currencyImage = 'currency-flag-'+this.qrData.transactionCurrency.toLowerCase();\r\n        if(this.qrData.transactionBranch !=null && this.qrData.transactionBranch !=''){\r\n          this.chequedepositForm.controls.transactionBranch.setValue(this.qrData.transactionBranch);\r\n        }else{\r\n          this.chequedepositForm.controls.transactionBranch.setValue('Kasturi Nagar');\r\n        }\r\n        this.getAccountBranch();\r\n      }\r\n  \r\n    this.getCountrynameValues();\r\n    this.getAccountBranch();\r\n    this.gettransactionBranch(\"account_branch\");\r\n    if(this.appointmentId.data.appointmentId){\r\n      this.cashWithdrawlData();\r\n    }\r\n  }\r\n  fetchByAccountNum(accNum){\r\n    this.chequedepositForm.controls.transactionAmount.reset();\r\n    this.chequedepositForm.controls.totalTransactionAmount.setValue(this.chequedepositForm.controls.totalChargeAmount.value);\r\n    this.chequedepositForm.controls.chequeNumber.reset();\r\n    console.log(\"Account Numebr\",accNum);\r\n    this.apiService.fetchByaccNum(accNum).subscribe((res: any) => {\r\n      console.log('Account Number Rsp', res);\r\n      this.getChargeDetails(accNum,'');\r\n      this.userName = res.accHolderName;\r\n      this.accountBal = res.accBalance;\r\n      this.custmerID = res.customerId;\r\n      this.accountNumber = res.accountId;\r\n      this.accountCurrency = res.accountCurrency;\r\n      this.curr = getCurrencySymbol(res.currency, \"narrow\");\r\n      this.chequedepositForm.controls.accountType.setValue(res.accountType);\r\n      this.chequedepositForm.controls.accountCurrency.setValue(res.currency);\r\n      this.chequedepositForm.controls.accountBranch.setValue(res.accountBranch);\r\n      this.chequedepositForm.controls.holderName.setValue(this.userName); \r\n      this.currencyImage = 'currency-flag-'+res.currency.toLowerCase();\r\n      this.currencyImage = 'currency-flag-'+res.currency.toLowerCase();\r\n      this.getCountrynameValues();\r\n      this.chequedepositForm.controls.transactionCurrency.setValue(res.currency);\r\n      this.custAmountBal(accNum);\r\n      this.chequedepositForm.controls.transactionBranch.setValue('Kasturi Nagar');\r\n      this.apiService.fetchByaccDeatilsoncustId(res.customerId).subscribe((resp: any) => {\r\n        this.phonenum = resp[0].phoneNumber;\r\n        localStorage.setItem('otpPhoneNum', this.phonenum);\r\n      }) \r\n  });\r\n\r\n}\r\ngetOTP(formData, type, cdForm){\r\n  this.chequedepositValues =formData;\r\n  this.chequedepositype = type;\r\n  this.chequedepositform = cdForm;\r\n  this.oTpModel.source = 'customer';\r\n  this.oTpModel.source_key = 'mobile';\r\n  this.oTpModel.source_value = this.phonenum;\r\n  let amount= 50000;\r\n  let transamountwithoutcomma=this.chequedepositValues.transactionAmount.replace(/,/g, \"\");\r\n  console.log( transamountwithoutcomma);\r\n  if(transamountwithoutcomma > amount){\r\n    this.apiService.getOtp(this.oTpModel).subscribe(otpResp => {\r\n      if (otpResp) {\r\n        this.openDialogOTP(this.phonenum);\r\n        this.snack.open(\"An OTP has been sent to the Registered Mobile Number.\" , \"\", {\r\n          duration: 4000,\r\n          verticalPosition: 'top',\r\n          horizontalPosition: 'right'\r\n        });\r\n      }\r\n    })\r\n  }\r\n  else{\r\n    this.getOTPforSave( this.chequedepositValues,\r\n      this.chequedepositype,this.chequedepositform);\r\n  }\r\n}\r\nopenDialogOTP(numbr) {\r\n  const dialogRef = this.dialog.open(OtpVerifyComponent, {\r\n    data: { number: numbr, type: \"numbr\" },\r\n    disableClose: true,\r\n  });\r\n  dialogRef.afterClosed().subscribe(submit => {\r\n    if(submit){\r\n      this.getOTPforSave( this.chequedepositValues,\r\n        this.chequedepositype,this.chequedepositform);\r\n    }\r\n   });\r\n}\r\ngetOTPforSave(formData, type, cdForm){\r\n  formData.transactionBranch = this.transBranch;\r\n  if(this.custValidation == \"New Customer\"){\r\n    console.log(\"customer\",this.custmerID);\r\n   this.accountNum = formData.accountNumber;\r\n   formData.customerId = this.custmerID?this.custmerID:0;\r\n   formData.accountType = formData.accountType;\r\n   formData.accountNumber = this.accountNumber;\r\n   formData.holderName = formData.holderName;\r\n   formData.accountCurrency = formData.accountCurrency;\r\n   formData.transactionCurrency = formData.transactionCurrency;\r\n   formData.transactionAmount = formData.transactionAmount.replace(/,/g, '');\r\n   formData.productCode = this.productCode;\r\n   formData.tokenOrigin = this.tokenOrigin;\r\n   formData.accountBalance = this.accountBal;\r\n\r\n  }\r\n  formData.tokenBranch = \"KN\";\r\n  if(this.appointmentId && this.appointmentId.data){\r\n    formData.transactionId = this.appointmentId.data.transactionId;\r\n    formData.transactionStatus = this.appointmentId.data.transactionStatus;\r\n  }\r\n  formData.customerId = this.custmerID?this.custmerID:0;\r\n  formData.accountType = formData.accountType;\r\n  formData.accountNumber = this.accountNumber;\r\n  formData.holderName = formData.holderName;\r\n  formData.accountCurrency = formData.accountCurrency;\r\n  formData.transactionCurrency = formData.transactionCurrency;\r\n  formData.transactionAmount = formData.transactionAmount.replace(/,/g, '');\r\n  formData.productCode = this.productCode;\r\n  formData.tokenOrigin = this.tokenOrigin;\r\n  formData.accountBalance = this.accountBal;\r\nthis.apiService.saveofCashDeposit(formData).subscribe(cashDepositResp => {\r\nconsole.log(\"Response Success\", cashDepositResp);\r\nthis.cashDepositResponse = cashDepositResp;\r\nthis.tokenNum = this.cashDepositResponse.tokenNumber;\r\nthis.estimatedTime = this.cashDepositResponse.estimatedWaitTime;\r\nlocalStorage.setItem(\"tokenNumer\", this.tokenNum);\r\nlocalStorage.setItem(\"estimatedTiming\", this.estimatedTime);\r\nthis.enableContinue = false;\r\nif (this.cashDepositResponse) {\r\n  this.dialogService.tokenGenerationDialog();\r\n}\r\n});   \r\n}\r\n  _keyPress(event: any) {\r\n    const pattern = /[0-9 a-z A-Z]/;\r\n    let inputChar = String.fromCharCode(event.charCode);\r\n    if (!pattern.test(inputChar)) {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n  gettransactionBranch(key: string) {\r\n    this.apiService.getTransactionBranch(key)\r\n      .subscribe(branches => {\r\n        console.log('branches :: ', branches);\r\n        this.trasactionBranches = branches;\r\n       \r\n      })\r\n  }\r\n\r\n  getAccountBranch() {\r\n    this.apiService.getBranchforKiosk()\r\n      .subscribe((data: any) => {\r\n        this.branchData = data;\r\n          console.log( this.branchData);\r\n          data.forEach((element,index)=>{\r\n            this.branch = data[index].branchName;\r\n            console.log(this.branch);\r\n            // this.chequedepositForm.controls.accountBranch.setValue(this.branch);\r\n         });      \r\n      });\r\n  }\r\n  getCountrynameValues() {\r\n    this.apiService.getCountryValues().subscribe((allCountryValues : any)=> {\r\n      this.countryValues = allCountryValues;\r\n      console.log(this.countryValues);\r\n      });\r\n  }\r\n\r\n  onCountrySelected($event: Country): void {\r\n    console.log($event);\r\n  }\r\n  goToServiceScreens(){\r\n    if(this.appointmentId){\r\n    if(this.appointmentId.data.appointmentId){\r\n      this.router.navigateByUrl('/sessions/login');\r\n      localStorage.removeItem(\"FromLogin\")\r\n      localStorage.removeItem(\"TransactionType\")\r\n      localStorage.removeItem(\"customerId\")\r\n      localStorage.removeItem(\"phonenumFromLogin\")\r\n      localStorage.removeItem(\"customerValidation\")\r\n      localStorage.removeItem(\"otpPhoneNum\")\r\n      localStorage.removeItem(\"AccountBal\")\r\n      localStorage.removeItem(\"AccountNumber\")\r\n      localStorage.removeItem(\"ProductCode\")\r\n      localStorage.removeItem(\"tokenNumer\")\r\n      localStorage.removeItem(\"estimatedTiming\")\r\n      localStorage.removeItem(\"userId\")\r\n      localStorage.removeItem(\"scannerData\")\r\n      localStorage.removeItem(\"custholderName\")\r\n    }\r\n  }\r\n    else{\r\n      this.router.navigateByUrl('/others/kioskHome');\r\n    }\r\n  }  \r\n  goToAuthenticate(){\r\n    this.dialogService.authenticationDialog();\r\n  }\r\n  gettingallTansactionDetails(phoneNumber) {\r\n    this.phoneNumber = localStorage.getItem(\"phonenumFromLogin\");\r\n    this.apiService.gettingTransactionDetails(this.phoneNumber).subscribe((allTransactionResp : any)=> {\r\n    console.log(\"All Transaction Details\",allTransactionResp);\r\n    this.userName = (allTransactionResp.firstName ? allTransactionResp.firstName + ' ' : ' ') + \r\n    (allTransactionResp.middleName ? allTransactionResp.middleName + ' ' : ' ') +\r\n     (allTransactionResp.lastName ? allTransactionResp.lastName : ' ');\r\n    this.chequedepositForm.controls.holderName.setValue(this.userName);\r\n    this.custID = allTransactionResp.customerId;\r\n    // this.setBalance(allTransactionResp.custAccount);\r\n    this.custAccountData = allTransactionResp.custAccount;\r\n    this.accounttypeArray = [...this.custAccountData].filter(({accountType},index )=> \r\n    ![...this.custAccountData].map(obj=> obj.accountType).includes(accountType, index +1));\r\n    for(let j = 0; j < this.custAccountData.length; j++){\r\n      if(this.custAccountData[j].status == 'APPROVED'){\r\n        this.accountNoList.push(this.custAccountData[j]);  \r\n      }\r\n    }\r\n    if(this.custAccountData && this.accountNoList.length<=1){\r\n      this.accountDropdown=false;\r\n      this.hideDetails=true;\r\n      const accTyp = allTransactionResp.custAccount[0].accountType;\r\n      this.chequedepositForm.controls.accountType.setValue(accTyp);\r\n      this.custAccountNumber(this.accountNoList[0]);\r\n    }else{\r\n      this.accountDropdown=true;\r\n      this.hideDetails=true;\r\n      const accTyp = allTransactionResp.custAccount[0].accountType;\r\n      this.chequedepositForm.controls.accountType.setValue(accTyp);\r\n      this.custAccountNumber(allTransactionResp.custAccount[0]);\r\n    }\r\n   \r\n    });\r\n  }\r\n  getAccountType(event:any){\r\n    this.chequedepositForm.controls.transactionAmount.reset();\r\n    this.chequedepositForm.controls.totalTransactionAmount.setValue(this.chequedepositForm.controls.totalChargeAmount.value);\r\n    this.chequedepositForm.controls.chequeNumber.reset();\r\n    this.accountNoList=[];\r\n    this.isedit=false;\r\n    this.accountNum1=[...this.custAccountData].filter((accounNum,index)=>{\r\n      return accounNum.accountType==event;\r\n    });console.log(this.accountNum1)\r\n    // this.accountNoList=this.accountNum1\r\n    // this.accountNoList=this.accountNum1.map((acccount)=>\r\n    // {\r\n    //   return acccount.accountId\r\n    // })\r\n    for(let i = 0; i < this.custAccountData.length; i++){\r\n      if(this.custAccountData[i].status == 'APPROVED' && this.custAccountData[i].accountType == event){\r\n        this.accountNoList.push(this.custAccountData[i].accountId);    \r\n      }\r\n    }\r\n    console.log(this.accountNoList);\r\n    if(this.accountNoList.length<=1){\r\n      this.flag1=false; \r\n      this.chequedepositForm.controls.accountNumber.setValue(this.accountNoList[0]);\r\n      this.getData(this.accountNoList[0])   \r\n    }\r\n    else{\r\n      this.flag1=true;   \r\n      this.getData(this.accountNoList[0]) \r\n    }\r\n    this.getChargeDetails(this.accountNoList[0],'');\r\n  }\r\n  custAccountNumber(custype){\r\n    this.isedit=false;\r\n   this.idList = [...this.custAccountData].filter(item => item.accountType === custype.accountType);\r\n   const defaultId = this.idList ? this.idList[0] : null;\r\n\r\n   this.accountNoList = [];\r\n   for(let i = 0; i < this.idList.length; i++){\r\n      if(this.idList[i].status == 'APPROVED'){\r\n        this.accountNoList.push(this.idList[i].accountId)    \r\n      }\r\n    }\r\n    console.log(this.accountNoList);\r\n    if(this.accountNoList.length<=1){\r\n      // this.cashwithdrawForm.controls.accountNumber.patchValue(this.accountNoList[0]);\r\n      this.flag1=false; \r\n      // this.getData(this.accountNoList[0]);\r\n      this.chequedepositForm.controls.accountNumber.setValue(this.accountNoList[0]);\r\n    }\r\n    else{\r\n      this.chequedepositForm.controls.accountNumber.setValue(this.accountNoList[0]);\r\n      this.flag1=true;   \r\n    }\r\n \r\n  //  this.chequedepositForm.controls.accountNumber.setValue(defaultId);\r\n   this.chequedepositForm.controls.accountCurrency.setValue(custype.accountCurrency);\r\n   this.chequedepositForm.controls.accountBranch.setValue(this.branch);\r\n   //this.chequedepositForm.controls.transactionAmount.setValue(custype.amount);\r\n  //  this.chequedepositForm.controls.accountType.setValue(defaultId);\r\n   this.curr = getCurrencySymbol(custype.accountCurrency, \"narrow\");\r\n   this.chequedepositForm.controls.transactionCurrency.setValue(custype.accountCurrency);\r\n\r\n    this.currencyImage = 'currency-flag-'+custype.accountCurrency.toLowerCase();\r\n  //  this.accountBal = this.idList[0].amount;\r\n   console.log(this.accountBal);\r\n   localStorage.setItem(\"AccountBal\",this.accountBal);\r\n  //  this.chequedepositForm.controls.accountNumber.setValue(this.idList[0].accountId);\r\n   this.custAmountBal(this.accountNoList[0]);\r\n   this.chequedepositForm.controls.accountBranch.setValue(custype.accountBranch);\r\n   this.getChargeDetails(this.accountNoList[0],custype.amount);\r\n  }\r\n  getData(custNum){\r\n    this.hideDetails=true;\r\n    console.log(custNum)\r\n    let val=this.accountNum1.filter((value)=>{\r\n    return value.accountId==custNum}\r\n    )\r\n    console.log(val)\r\n    this.idList = [...this.custAccountData].filter(item => item.accountType === val[0].accountType);\r\n    this.chequedepositForm.controls.accountCurrency.setValue(val[0].accountCurrency);\r\n   this.chequedepositForm.controls.accountBranch.setValue(this.branch);\r\n   this.curr = getCurrencySymbol(val[0].accountCurrency, \"narrow\");\r\n   this.curr = getCurrencySymbol(val[0].accountCurrency, \"narrow\");\r\n   this.chequedepositForm.controls.transactionCurrency.setValue(val[0].accountCurrency);\r\n  \r\n   this.currencyImage = 'currency-flag-'+val[0].accountCurrency.toLowerCase();\r\n   console.log('data :: ',this.idList[0]);\r\n  this.accountBal = this.idList[0].amount;\r\n  \r\n  localStorage.setItem(\"AccountBal\",this.accountBal);\r\n  this.chequedepositForm.controls.accountNumber.setValue(this.idList[0].accountId);\r\n  this.custAmountBal(this.idList[0].accountId);\r\n  this.chequedepositForm.controls.accountNumber.setValue(val[0].accountId);\r\n  this.chequedepositForm.controls.accountBranch.setValue(val[0].accountBranch);\r\n  this.getChargeDetails(val[0].accountId,'')\r\n  }\r\n\r\n  custAmountBal(custNum){\r\n    console.log(custNum);\r\n    var account = this.idList.filter(function (record) {\r\n      if (record.accountId == custNum) {\r\n        return record;\r\n      }\r\n    });\r\n    console.log(account);\r\n    this.accNum = account[0].accountId;\r\n    this.accountBal = account[0].amount;\r\n    this.selectedAccountInfo = account[0]\r\n  }\r\n  setBalance(accountBalance, index = 0){\r\n    this.accountBal = accountBalance[index].currentBalance ? accountBalance[index].currentBalance:null;\r\n  }\r\n onSaveofchequeDeposit(formData,type){\r\n  formData.transactionBranch = this.transBranch;\r\n  formData.tokenBranch = \"KN\";\r\n  if(this.qrData){\r\n    if(this.qrData.transactionBranch){\r\n      this.apiService.fetchBranchInfoByBranchName(this.qrData.transactionBranch).subscribe(response=>{\r\n        this.qrBranchCode=response;\r\n        \r\n      })\r\n    }\r\n  }\r\n  if(!this.ifQRvariable){\r\n  console.log(\"chequedepositData\", formData);\r\n  this.accountNum=JSON.stringify(this.selectedAccountInfo.accountId);\r\n  console.log(\"this.accountNum \", this.accountNum);\r\n  localStorage.setItem(\"AccountNumber\",this.accountNum);\r\n  localStorage.setItem(\"ProductCode\",this.productCode);\r\n  formData.tokenBranch = \"KN\";\r\n  formData.customerId = this.custID;\r\n  formData.transactionCurrency = formData.transactionCurrency;\r\n  formData.transactionAmount = formData.transactionAmount.replace(/,/g, '');\r\n  formData.accountNumber = this.selectedAccountInfo.accountId;\r\n  formData.accountType = formData.accountType;\r\n  formData.productCode = this.productCode;\r\n  formData.tokenOrigin = this.tokenOrigin;\r\n  formData.accountBalance = this.accountBal;\r\n  \r\n  }\r\n  else{\r\n    console.log(formData)\r\n    formData.customerId = this.custID;\r\n    formData.accountType = formData.accountType;\r\n    formData.accountNumber =formData.accountNumber;\r\n    formData.holderName=  formData.holderName;\r\n    formData.accountCurrency  =formData.accountCurrency;\r\n    formData.transactionCurrency = formData.transactionCurrency;\r\n    formData.transactionAmount = formData.transactionAmount;\r\n    formData.totalAmount = formData.totalAmount;\r\n    formData.productCode = this.productCode;\r\n    formData.tokenOrigin = this.tokenOrigin;\r\n    formData.accountBalance = this.accountBal;\r\n    formData.transactionId = formData.transactionId;\r\n    formData.appointmentId = formData.appointmentId;\r\n\r\n    \r\n  }\r\n  if(this.qrData){\r\n    if(this.qrData.transactionBranch){\r\n      formData.tokenBranch = this.qrBranchCode.transactionBranch;\r\n    }\r\n  }\r\n \r\n  if(this.appointmentId && this.appointmentId.data){\r\n    formData.transactionId = this.appointmentId.data.transactionId;\r\n    formData.transactionStatus = this.appointmentId.data.transactionStatus;\r\n  }\r\n  console.log(formData.transactionId,formData.transactionStatus);\r\n  this.apiService.saveofCashDeposit(formData).subscribe(chequeDepositResp=>{\r\n    console.log(\" Response Success\",chequeDepositResp);\r\n    this.chequeDepositResponse = chequeDepositResp;\r\n    this.tokenNum = this.chequeDepositResponse.tokenNumber;\r\n    this.estimatedTime = this.chequeDepositResponse.estimatedWaitTime;\r\n    localStorage.setItem(\"tokenNumer\",this.tokenNum);\r\n    localStorage.setItem(\"estimatedTiming\",this.estimatedTime);\r\n    this.enableContinue=false;\r\n    if(this.chequeDepositResponse){\r\n    this.dialogService.tokenGenerationDialog();\r\n    }\r\n  });\r\n//   this.tokenObjects.productCode = this.productCode;\r\n//   this.tokenObjects.accountNumber = formData.accountNumber;\r\n//   if(this.tokenObjects.productCode !== null || this.tokenObjects.accountNumber !==null){\r\n//   this.apiService.generateToken(this.tokenObjects).subscribe(tokenResp=>{\r\n//     console.log( \"Token Generated\", tokenResp);\r\n//     this.tokResponse = tokenResp;\r\n//     if(this.tokResponse){\r\n//       this.tokenNum = this.tokResponse.tokenNumber;\r\n//       this.estimatedTime = this.tokResponse.estimatedWaitTime;\r\n//       localStorage.setItem(\"tokenNumer\",this.tokenNum);\r\n//       localStorage.setItem(\"estimatedTiming\",this.estimatedTime);\r\n//       formData.tokenNo = this.tokenNum;\r\n//       formData.customerId = this.ls.getItem(\"customerId\");\r\n//       this.apiService.saveofCashDeposit(formData).subscribe(chequeDepositResp=>{\r\n//         console.log(\" Response Success\",chequeDepositResp);\r\n//         this.chequeDepositResponse = chequeDepositResp;\r\n//         this.enableContinue=false;\r\n//         this.dialogService.tokenGenerationDialog();\r\n//       });\r\n//     }\r\n//   });\r\n// }\r\n  }\r\n\r\n  omit_number(event) {\r\n    var key;\r\n    key = event.charCode;\r\n    return ((key > 47 && key < 58));\r\n  }\r\n  totalAmountValue(cdForm) {\r\n    this.a=this.chequedepositForm.value.transactionAmount;\r\n    this.a=this.a.replace(/\\,/g,''); // 1125, but a string, so convert it to number\r\n    this.a=parseInt(this.a,10);\r\n\r\n\r\n    this.chequedepositForm.value.totalAmount =\r\n      ((cdForm.value.count2000 ? cdForm.value.count2000 * 2000 : 0) +\r\n        (cdForm.value.count500 ? cdForm.value.count500 * 500 : 0) +\r\n        (cdForm.value.count200 ? cdForm.value.count200 * 200 : 0) +\r\n        (cdForm.value.count100 ? cdForm.value.count100 * 100 : 0) +\r\n        (cdForm.value.count50 ? cdForm.value.count50 * 50 : 0) +\r\n        (cdForm.value.count20 ? cdForm.value.count20 * 20 : 0) +\r\n        (cdForm.value.count10 ? cdForm.value.count10 * 10 : 0) +\r\n        (cdForm.value.count1 ? cdForm.value.count1 * 1 : 0)\r\n        );\r\n        console.log(this.chequedepositForm.value.totalAmount)\r\n        console.log(this.chequedepositForm.value.transactionAmount);\r\n        this.transamount=this.chequedepositForm.value.transactionAmount;\r\n        this.totalAmount=this.chequedepositForm.value.totalAmount;\r\n        this.chequedepositForm.controls.totalAmount.setValue(this.chequedepositForm.value.totalAmount);\r\n        \r\n  }\r\n  OnInput(event: any) {\r\n   this.transAmt= event.target.value;\r\n\r\n     // comma separator using changeDetector\r\n   const savedInput = this.transAmount;\r\n\r\n   let lastCharIsPoint = false;\r\n   if (savedInput.charAt(savedInput.length - 1) === '.') {\r\n     lastCharIsPoint = true;\r\n   }\r\n   const num = savedInput.replace(/[^0-9.]/g, '');\r\n   this.transAmt = Number(num) || '';\r\n   this.transAmount = this.transAmt.toLocaleString('en-IN');\r\n   if (lastCharIsPoint) {\r\n     this.transAmount = this.transAmount.concat('.');\r\n   }\r\n   this.changeDef.detectChanges();\r\n    this.balance= localStorage.getItem(\"AccountBal\");\r\n    if(parseFloat(this.balance) < parseFloat(this.transAmt)){\r\n      console.log(\"Bigger\")\r\n      this.snack.open(`Transaction Amount should not exceed than Account Balance`, 'OK', {\r\n        duration: 2000,\r\n        verticalPosition: 'top',\r\n        horizontalPosition: 'right'\r\n      });\r\n      this.enableContinue=false;\r\n    }\r\n    else{\r\n      this.enableContinue=true;\r\n    }\r\n    this.totalTransAmount=Number(this.transAmt) + Number(this.chargeDetails?this.chargeDetails[0].amount:'');\r\n    this.chequedepositForm.controls.totalTransactionAmount.setValue(this.totalTransAmount);\r\n    this.cdr.markForCheck();\r\n    this.cdr.detectChanges();\r\n    }\r\n    getChargeDetails(accountId,amount){\r\n      this.apiService.fetchChargeDetails(accountId).subscribe(resp => {\r\n    console.log(resp);\r\n    this.chargeDetails=resp;\r\n    this.chequedepositForm.controls.totalChargeAmount.setValue(this.chargeDetails?this.chargeDetails[0].amount:'');\r\n      });\r\n      if(this.cashData){\r\n      setTimeout(() => {\r\n        this.totalTransAmount=Number(this.cashData.transactionAmount) + Number(this.chargeDetails?this.chargeDetails[0].amount:'');\r\n        this.chequedepositForm.controls.totalTransactionAmount.setValue(this.totalTransAmount);\r\n      }, 1000);\r\n      this.cdr.markForCheck();\r\n      this.cdr.detectChanges();\r\n    }\r\n    else{\r\n      console.log(this.chargeDetails)\r\n      amount=0;\r\n      console.log(amount);\r\n      setTimeout(() => {\r\n        this.totalTransAmount=Number(amount) + Number(this.chargeDetails?this.chargeDetails[0].amount:'');\r\n        console.log(this.totalTransAmount);\r\n        this.chequedepositForm.controls.totalTransactionAmount.setValue(this.totalTransAmount);\r\n      }, 1000);\r\n      this.cdr.markForCheck();\r\n      this.cdr.detectChanges();\r\n    }\r\n  \r\n      // console.log(this.totalTransAmount);\r\n    \r\n    }\r\n \r\n\r\n    addCurrencyImage(currency) {\r\n      return currency.toLowerCase();\r\n    }\r\n\r\n    clicked(event){\r\n      console.log(event);\r\n    }\r\n  \r\n    onCountryChange(country) {\r\n      let currency = country.currencyCode;\r\n      this.currencyImage = 'currency-flag-'+currency.toLowerCase();\r\n    }\r\n  \r\n    accountCurrencyImage(accountCurrency){\r\n      return accountCurrency? 'currency-flag-'+accountCurrency.toLowerCase() : '';\r\n    }\r\n  \r\n  formatAmount(amount) {\r\n    if(amount){\r\n      return amount && amount.toString().split('.')[0].length > 3 ? amount.toString().substring(0,amount.toString().split('.')[0].length-3).replace(/\\B(?=(\\d{2})+(?!\\d))/g, \",\") + \",\" + amount.toString().substring(amount.toString().split('.')[0].length-3): amount.toString();\r\n     }\r\n  }\r\n  cashWithdrawlData(){\r\n    this.apiService.getAppointmentId(this.appointmentId.data.appointmentId).subscribe((resp : any)=> {\r\n      console.log(resp);\r\n      this.cashData=resp.data;\r\n      this.custID=resp.data.customerId;\r\n      this.ifQRvariable = true;\r\n      this.chequedepositForm.controls.accountType.setValue(resp.data.accountType);\r\n      this.chequedepositForm.controls.accountBranch.setValue(resp.data.accountBranch);\r\n      this.chequedepositForm.controls.accountNumber.setValue(resp.data.accountNumber);\r\n      this.chequedepositForm.controls.chequeNumber.setValue(resp.data.chequeNumber);\r\n      this.getChargeDetails(resp.data.accountNumber,resp.data.transactionAmount);\r\n      this.chequedepositForm.controls.accountCurrency.setValue(resp.data.accountCurrency);\r\n      this.chequedepositForm.controls.transactionCurrency.setValue(resp.data.transactionCurrency);\r\n      this.chequedepositForm.controls.transactionAmount.setValue(resp.data.transactionAmount);\r\n      this.currencyImage = 'currency-flag-'+resp.data.accountCurrency.toLowerCase();\r\n      this.currencyImage = 'currency-flag-'+resp.data.transactionCurrency.toLowerCase();\r\n  \r\n  \r\n    });\r\n  }\r\n  \r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n","<div style=\"margin-top: -4%;\">\r\n    <div fxLayout=\"row\" fxLayoutGap=\"20px\" style=\"color: #000000;padding-left:5%\">\r\n       <mat-icon style=\"cursor: pointer;\" (click)=\"goToServiceScreens()\" >arrow_back</mat-icon><h1 style=\"font-weight: bold;\">Cash Deposit</h1>\r\n    </div>\r\n    <div  fxLayout=\"row wrap\" fxFlexFill  fxLayoutGap=\"1px\" fxLayoutAlign=\"center\" style=\"padding-left: 4%;\">\r\n          <form [formGroup]=\"chequedepositForm\" fxFlex=\"100%\">\r\n        <mat-card fxFlex=\"calc(33%-25px)\" fxLayout=\"column\">\r\n      \r\n            <mat-card-title class=accinfo style=\"font-size: 22px;color: #004C97;margin-left: 1%;\">Account Information</mat-card-title>\r\n            <mat-card fxFlex=\"calc(13%-25px)\" class=\"accountInfoCard\">\r\n             \r\n                <div fxLayoutGap=\"50px\" *ngIf=\"showAccountNum\">\r\n                    <mat-form-field appearance=\"outline\" style=\"border-radius: 12px;\" fxFlex=\"35%\" >\r\n                      <mat-label>Account Type*</mat-label>\r\n                      <!-- <input matInput type=\"text\" *ngIf=\"phoneNumber && !accountDropdown\"\r\n                      [readonly]=\"true\" class=\"full-width\" \r\n                      formControlName=\"accountType\">\r\n                      <mat-select *ngIf=\"phoneNumber && accountDropdown\"  formControlName=\"accountType\"\r\n                      (selectionChange)=\"getAccountType($event.value)\">\r\n                        <mat-option *ngFor=\"let type of accounttypeArray \"\r\n                        [value]=\"type.accountType\" >\r\n                        {{type.accountType}}\r\n                        </mat-option>\r\n                      </mat-select> -->\r\n                      <input \r\n                         matInput type=\"text\" *ngIf=\"phoneNumber && !accountDropdown\" [readonly]=\"true\"\r\n                         class=\"full-width\" formControlName=\"accountType\">\r\n                         <mat-select *ngIf=\"phoneNumber && accountDropdown\" formControlName=\"accountType\" \r\n                            (selectionChange)=\"getAccountType($event.value)\"\r\n                            style=\"background-color: #f9fafb;\"\r\n                            placeholder=\"Select Account Type\">\r\n                            <mat-option *ngFor=\"let type of accounttypeArray \"[value]=\"type.accountType\">{{type.accountType}}</mat-option>\r\n                        </mat-select>\r\n\r\n                    </mat-form-field>\r\n                    <mat-form-field appearance=\"outline\" style=\"border-radius: 12px;\" fxFlex=\"57%\">\r\n                      <mat-label>Account Number*</mat-label>\r\n                      <input matInput type=\"text\"  \r\n                        class=\"full-width\" formControlName=\"accountNumber\"\r\n                        (change)=\"fetchByAccountNum(chequedepositForm.get('accountNumber').value)\">\r\n                      <mat-select *ngIf=\"flag1\" formControlName=\"accountNumber\" (selectionChange)=\"fetchByAccountNum($event.value)\">\r\n                        <mat-option   *ngFor=\"let id of accountNoList \" [value]=\"id\">{{id}}</mat-option>\r\n                      </mat-select>\r\n\r\n                    </mat-form-field>\r\n                  </div>\r\n                  <div fxLayout=\"row wrap\"  fxLayoutGap=\"10%\" style=\"margin-left: 2%;\">\r\n                    <div fxLayout=\"column\" *ngIf=\"hideDetails\">\r\n                      <mat-hint class=\"totalAmount\">Holder Name\r\n                      </mat-hint>\r\n                      <p class=\"hint\">{{userName}}</p>\r\n                    </div>\r\n                    <div fxLayout=\"column\" *ngIf=\"hideDetails\">\r\n                      <mat-hint class=\"totalAmount\">Account Balance\r\n                      </mat-hint>\r\n                      <p class=\"hint\">{{curr }}{{formatAmount(accountBal)}}</p>\r\n                    </div>\r\n                    <div fxLayout=\"column\" *ngIf=\"hideDetails\">\r\n                      <mat-hint class=\"totalAmount\">Account Branch \r\n                      </mat-hint>\r\n                      <p class=\"hint\">Gayathri</p>\r\n                    </div>\r\n                    <div fxLayout=\"column\"  *ngIf=\"hideDetails\">\r\n                      <mat-hint class=\"totalAmount\">Account currency\r\n                      </mat-hint>\r\n                      <p class=\"hint\">Gayathri</p>\r\n                    </div>\r\n                  \r\n\r\n                  </div>\r\n                  <div fxLayoutGap=\"50px\" *ngIf=\"!showAccountNum\">\r\n                  \r\n                    <mat-form-field appearance=\"outline\" style=\"border-radius: 12px;\" fxFlex=\"57%\" >\r\n                      <mat-label>Account Number*</mat-label>\r\n                      <input type=\"text\"   formControlName=\"accountNumber\"\r\n                      (change)=\"fetchByAccountNum(chequedepositForm.get('accountNumber').value)\"\r\n                      placeholder=\"Account Number\" matInput>\r\n\r\n                    </mat-form-field>\r\n                    <mat-form-field appearance=\"outline\" style=\"border-radius: 12px;\" fxFlex=\"35%\">\r\n                      <mat-label>Account Type*</mat-label>\r\n                      <input matInput type=\"text\" [readonly]=\"true\" class=\"full-width\"\r\n                                                        formControlName=\"accountType\">\r\n\r\n                    </mat-form-field>\r\n                  </div>\r\n            </mat-card>\r\n<br>\r\n            <mat-card-title class=\"accinfo\">Transaction Information</mat-card-title>\r\n           \r\n                <div fxLayoutGap=\"50px\" style=\"margin-left: 1%;\">\r\n                    <mat-form-field appearance=\"outline\" style=\"border-radius: 12px;\" fxFlex=\"35%\" *ngIf=\"showAccountNum\">\r\n                      <mat-label>Transaction currency*</mat-label>\r\n                      <div fxFlex=\"25%\">\r\n                        <div class=\"currency-flag {{currencyImage}}\"></div>\r\n                    </div>\r\n                      <input matInput type=\"text\" *ngIf=\"!phoneNumber\"\r\n                      [readonly]=\"true\" formControlName=\"transactionCurrency\">\r\n                      <mat-select  formControlName=\"transactionCurrency\"\r\n                      *ngIf=\"phoneNumber\"  [disabled]=\"isedit\">\r\n                      <mat-option\r\n                      *ngFor=\"let country of countryValues; let i = index\"\r\n                      (click)=\"onCountryChange(country)\"\r\n                      [value]=\"country.currencyCode\">\r\n                      <div fxLayout=\"row wrap\">\r\n                          <div fxFlex=\"15%\">{{country.currencyCode}}</div>\r\n                          <div fxFlex=\"85%\">\r\n                              <div\r\n                                  class=\"currency-flag currency-flag-{{addCurrencyImage(country.currencyCode)}} alignImage\">\r\n                              </div>\r\n                          </div>\r\n                      </div>\r\n                  </mat-option>\r\n                        <!-- <mat-option  [value]=\"\" >\r\n                          Savings\r\n                        </mat-option> -->\r\n                      </mat-select>\r\n\r\n                    </mat-form-field>\r\n\r\n                    <mat-form-field appearance=\"outline\" style=\"border-radius: 12px;\" fxFlex=\"35%\" *ngIf=\"!showAccountNum\">\r\n                      <mat-label>Transaction currency*</mat-label>\r\n                      <div fxFlex=\"25%\">\r\n                        <div class=\"currency-flag {{currencyImage}}\"></div>\r\n                    </div>\r\n                      \r\n                    <mat-select formControlName=\"transactionCurrency\" placeholder=\"Select Transaction Currency\" >\r\n                                                                <mat-option\r\n                                                                    *ngFor=\"let country of countryValues; let i = index\"\r\n                                                                    (click)=\"onCountryChange(country)\"\r\n                                                                  \r\n                                                                    [value]=\"country.currencyCode\">\r\n                                                                    <div fxLayout=\"row wrap\">\r\n                                                                        <div fxFlex=\"15%\">{{country.currencyCode}}</div>\r\n                                                                        <div fxFlex=\"85%\">\r\n                                                                            <div\r\n                                                                                class=\"currency-flag currency-flag-{{addCurrencyImage(country.currencyCode)}} alignImage\">\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </mat-option>\r\n                                                            </mat-select>\r\n\r\n                    </mat-form-field>\r\n                    <mat-form-field appearance=\"outline\" style=\"border-radius: 12px;\" fxFlex=\"55%\" *ngIf=\"!showAccountNum\">\r\n                      <mat-label>Transaction amount *</mat-label>\r\n                      <input matInput #myRef [(ngModel)]=\"transAmount\"\r\n                      formControlName=\"transactionAmount\"\r\n                      [value]=\"transAmt | number: '2.'\" (keyup)=\"OnInput($event)\"\r\n                      (focus)=\"clicked($event)\">\r\n                      <mat-error\r\n                      *ngIf=\"chequedepositForm.get('transactionAmount').errors?.min\">\r\n                      Amount must be greater than zero\r\n                  </mat-error>\r\n                    </mat-form-field>\r\n                    <mat-form-field appearance=\"outline\" style=\"border-radius: 12px;\" fxFlex=\"55%\" *ngIf=\"showAccountNum\">\r\n                      <mat-label>Transaction amount *</mat-label>\r\n                      <input matInput type=\"text\" *ngIf=\"!phoneNumber\" [readonly]=\"true\"\r\n                                                        formControlName=\"transactionAmount\">\r\n                                                    <input matInput class=\"full-width\" *ngIf=\"phoneNumber\" #myRef\r\n                                                        [(ngModel)]=\"transAmount\" formControlName=\"transactionAmount\"\r\n                                                        [value]=\"transAmt | number: '1.'\" (keyup)=\"OnInput($event)\"\r\n                                                        (focus)=\"clicked($event)\" [readonly]=\"isedit\">\r\n                                                        <mat-error\r\n                                                        *ngIf=\"chequedepositForm.get('transactionAmount').errors?.min\">\r\n                                                        Amount must be greater than zero\r\n                                                    </mat-error>\r\n                    </mat-form-field>\r\n                 \r\n                  </div>\r\n                  <div fxLayout=\"row wrap\">\r\n                    <div fxLayout=\"column\" fxFlex=\"36%\">\r\n                      <mat-card >\r\n                        <input matInput readonly placeholder=\"Negotiated rate\">\r\n                    </mat-card>\r\n                        <p class=\"hint\">Exchange rate : 0.89</p>\r\n                    </div>\r\n                   \r\n\r\n                      <mat-card fxFlex=\"25%\" class=chargebox >\r\n                        <input matInput class=\"full-width\" readonly formControlName=\"totalChargeAmount\" placeholder=\"Total Charge Amount\">\r\n                      </mat-card>\r\n        \r\n                      <mat-card fxFlex=\"25%\"  fxLayout=\"row\" style=\"height:45%\">\r\n                        <input matInput type=\"text\" readonly onlyNumber formControlName=\"totalTransactionAmount\" placeholder=\"Total Charge Amount\">\r\n                          <div class=\"tooltip\">\r\n                            <img width=\"80%\"\r\n                        [src]=\"'assets/images/info.svg'\"/>\r\n                            <div class=\"tooltiptext\">\r\n                                <p class=\"totalAmount textcolor\" style=\"margin-top:10px; margin-bottom:6px\">Transaction Amount:{{chequedepositForm.get('transactionAmount').value}}</p>\r\n                                <p class=\"totalAmount textcolor\">Total Charge Amount:{{chequedepositForm.get('totalChargeAmount').value}} </p>\r\n                                <hr/>\r\n                                <p class=\"totalAmount textcolor\" style=\"margin-right:10px ;\">Total Transaction Amount:{{chequedepositForm.get('totalTransactionAmount').value}}</p>\r\n                            </div>\r\n                        </div>\r\n                      </mat-card>\r\n        \r\n                 \r\n                  </div>\r\n                \r\n               \r\n                  <!-- <div fxLayoutGap=\"50px\">\r\n                  \r\n                    <mat-form-field appearance=\"outline\" style=\"border-radius: 12px;\" fxFlex=\"55%\">\r\n                      <mat-label>Account Number*</mat-label>\r\n                      <input type=\"text\"\r\n                      placeholder=\"Account Number\" matInput>\r\n\r\n                    </mat-form-field>\r\n                    <mat-form-field appearance=\"outline\" style=\"border-radius: 12px;\" fxFlex=\"35%\">\r\n                      <mat-label>Account Type*</mat-label>\r\n                      <input type=\"text\"\r\n                      placeholder=\"Account Type\" matInput>\r\n\r\n                    </mat-form-field>\r\n                  </div> -->\r\n            <!-- </mat-card> -->\r\n        \r\n        </mat-card>\r\n\r\n        <!-- <mat-card fxFlex=\"30%\" *ngIf=\"(denomRequired == 'yes') && (chequedepositForm.get('transactionAmount').value > 0 || transAmt > 0)\">\r\n          <form #cdForm=\"ngForm\">\r\n          <mat-card-title style=\"font-size: 15px;color: #004C97;margin-left: 1%;\">Denomination</mat-card-title>\r\n          <div class=\"pH10 full-width\" id=\"denominationDiv\">\r\n            <div class=\"paddingclass\" fxLayoutAlign=\"center center\"\r\n                *ngIf=\"chequedepositForm.value.transactionCurrency == 'INR'\">\r\n                <div fxFlex=\"20%\">\r\n                    <p class=\"quantityClass text-small\">2000</p>\r\n                </div>\r\n                <div fxFlex=\"10%\">\r\n                    <p class=\"operationTypeClass text-small\">x</p>\r\n                </div>\r\n                <div fxFlex=\"70%\">\r\n                    <mat-card class=\"inputCard\">\r\n                        <div>\r\n                            <input class=\"full-width inputClass\" type=\"text\"\r\n                                (keyup)=\"totalAmountValue(cdForm)\" (keypress)=\"omit_number($event)\" matInput\r\n                                name=\"count2000\" ngModel #count2000>\r\n                        </div>\r\n                    </mat-card>\r\n                    <div class=\"pl10\">\r\n                        <mat-error *ngIf=\"denominationlimit && count2000.value > denominationLimit[2000]\">\r\n                            Please enter <= {{denominationLimit[2000]}} </mat-error>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"paddingclass\" fxLayoutAlign=\"start center\"\r\n                *ngIf=\"chequedepositForm.value.transactionCurrency == 'INR' || chequedepositForm.value.transactionCurrency == 'USD' || chequedepositForm.value.transactionCurrency == 'AED'\">\r\n                <div fxFlex=\"20%\">\r\n                    <p class=\"quantityClass text-small\">500</p>\r\n                </div>\r\n                <div fxFlex=\"10%\">\r\n                    <p class=\"operationTypeClass text-small\">x</p>\r\n                </div>\r\n                <div fxFlex=\"70%\">\r\n                    <mat-card class=\"inputCard\">\r\n                        <input class=\"full-width inputClass\" type=\"text\" (keyup)=\"totalAmountValue(cdForm)\"\r\n                            (keypress)=\"omit_number($event)\" matInput name=\"count500\" ngModel #count500>\r\n                    </mat-card>\r\n                    <div class=\"pl10\">\r\n                        <mat-error *ngIf=\"denominationlimit && count500.value > denominationLimit[500]\">\r\n                            Please enter <= {{denominationLimit[500]}} </mat-error>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"paddingclass\" fxLayoutAlign=\"start center\"\r\n                *ngIf=\"chequedepositForm.value.transactionCurrency == 'INR'\">\r\n                <div fxFlex=\"20%\">\r\n                    <p class=\"quantityClass text-small\">200</p>\r\n                </div>\r\n                <div fxFlex=\"10%\">\r\n                    <p class=\"operationTypeClass text-small\">x</p>\r\n                </div>\r\n                <div fxFlex=\"70%\">\r\n                    <mat-card class=\"inputCard\">\r\n                        <input class=\"full-width inputClass\" type=\"text\" (keyup)=\"totalAmountValue(cdForm)\"\r\n                            (keypress)=\"omit_number($event)\" matInput name=\"count200\" ngModel #count200>\r\n                    </mat-card>\r\n                    <div class=\"pl10\">\r\n                        <mat-error *ngIf=\"denominationlimit && count200.value > denominationLimit[200]\">\r\n                            Please enter <= {{denominationLimit[200]}} </mat-error>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"paddingclass\" fxLayoutAlign=\"start center\"\r\n                *ngIf=\"chequedepositForm.value.transactionCurrency == 'INR' || chequedepositForm.value.transactionCurrency == 'USD' || chequedepositForm.value.transactionCurrency == 'AED'\">\r\n                <div fxFlex=\"20%\">\r\n                    <p class=\"quantityClass text-small\">100</p>\r\n                </div>\r\n                <div fxFlex=\"10%\">\r\n                    <p class=\"operationTypeClass text-small\">x</p>\r\n                </div>\r\n                <div fxFlex=\"70%\">\r\n                    <mat-card class=\"inputCard\">\r\n                        <input class=\"full-width inputClass\" type=\"text\" (keyup)=\"totalAmountValue(cdForm)\"\r\n                            (keypress)=\"omit_number($event)\" matInput name=\"count100\" ngModel #count100>\r\n                    </mat-card>\r\n                    <div class=\"pl10\">\r\n                        <mat-error *ngIf=\"denominationlimit && count100.value > denominationLimit[100]\">\r\n                            Please enter <= {{denominationLimit[100]}} </mat-error>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"paddingclass\" fxLayoutAlign=\"start center\"\r\n                *ngIf=\"chequedepositForm.value.transactionCurrency== 'INR' || chequedepositForm.value.accountCurrency == 'USD'\">\r\n                <div fxFlex=\"20%\">\r\n                    <p class=\"quantityClass text-small\">50</p>\r\n                </div>\r\n                <div fxFlex=\"10%\">\r\n                    <p class=\"operationTypeClass text-small\">x</p>\r\n                </div>\r\n                <div fxFlex=\"70%\">\r\n                    <mat-card class=\"inputCard\">\r\n                        <input class=\"full-width inputClass\" type=\"text\" (keyup)=\"totalAmountValue(cdForm)\"\r\n                            (keypress)=\"omit_number($event)\" matInput name=\"count50\" ngModel #count50>\r\n                    </mat-card>\r\n                    <div class=\"pl10\">\r\n                        <mat-error *ngIf=\"denominationlimit && count50.value > denominationLimit[50]\">\r\n                            Please enter <= {{denominationLimit[50]}} </mat-error>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"paddingclass\" fxLayoutAlign=\"start center\"\r\n                *ngIf=\"chequedepositForm.value.transactionCurrency== 'INR'\">\r\n                <div fxFlex=\"20%\">\r\n                    <p class=\"quantityClass text-small\">20</p>\r\n                </div>\r\n                <div fxFlex=\"10%\">\r\n                    <p class=\"operationTypeClass text-small\">x</p>\r\n                </div>\r\n                <div fxFlex=\"70%\">\r\n                    <mat-card class=\"inputCard\">\r\n                        <input class=\"full-width inputClass\" type=\"text\" (keyup)=\"totalAmountValue(cdForm)\"\r\n                            (keypress)=\"omit_number($event)\" matInput name=\"count20\" ngModel #count20>\r\n                    </mat-card>\r\n                    <div class=\"pl10\">\r\n                        <mat-error *ngIf=\"denominationlimit && count20.value > denominationLimit[20]\">\r\n                            Please enter <= {{denominationLimit[20]}} </mat-error>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"paddingclass\" fxLayoutAlign=\"start center\"\r\n                *ngIf=\"chequedepositForm.value.transactionCurrency== 'INR'\">\r\n                <div fxFlex=\"20%\">\r\n                    <p class=\"quantityClass text-small\">10</p>\r\n                </div>\r\n                <div fxFlex=\"10%\">\r\n                    <p class=\"operationTypeClass text-small\">x</p>\r\n                </div>\r\n                <div fxFlex=\"70%\">\r\n                    <mat-card class=\"inputCard\">\r\n                        <input class=\"full-width inputClass\" type=\"text\" (keyup)=\"totalAmountValue(cdForm)\"\r\n                            (keypress)=\"omit_number($event)\" matInput name=\"count10\" ngModel #count10>\r\n                    </mat-card>\r\n                    <div class=\"pl10\">\r\n                        <mat-error *ngIf=\"denominationlimit && count10.value > denominationLimit[10]\">\r\n                            Please enter <= {{denominationLimit[10]}} </mat-error>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"paddingclass\" fxLayoutAlign=\"start center\"\r\n                *ngIf=\"chequedepositForm.value.transactionCurrency== 'INR' || chequedepositForm.value.transactionCurrency == 'USD' || chequedepositForm.value.transactionCurrency == 'AED'\">\r\n                <div fxFlex=\"20%\">\r\n                    <p class=\"quantityClass text-small\">1</p>\r\n                </div>\r\n                <div fxFlex=\"10%\">\r\n                    <p class=\"operationTypeClass text-small\">x</p>\r\n                </div>\r\n                <div fxFlex=\"70%\">\r\n                    <mat-card class=\"inputCard\">\r\n                        <input class=\"full-width inputClass\" type=\"text\" (keyup)=\"totalAmountValue(cdForm)\"\r\n                            (keypress)=\"omit_number($event)\" matInput name=\"count1\" ngModel #count10>\r\n                    </mat-card>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div fxLayout=\"row wrap\" class=\"pH10 full-width\">\r\n            <div fxFlex=\"53%\" fxFlex.xs=\"100%\">\r\n                <p class=\"totalAmount\">Total Amount</p>\r\n                <mat-card class=\"inputCard\">\r\n                    <input class=\"full-width inputClass\" [(ngModel)]=\"totalAmount\" matInput\r\n                        name=\"totalAmount\" readonly>\r\n                </mat-card>\r\n                <div class=\"pl10\" style=\"width: 150%;\">\r\n                    <mat-error *ngIf=\"enableBtn1\">\r\n                        Total amount should be equal to {{chequedepositForm.value.transactionAmount}}\r\n                    </mat-error>\r\n                </div>\r\n            </div>\r\n        </div>\r\n          </form>\r\n        </mat-card> -->\r\n         </form>\r\n\r\n    </div>\r\n</div>\r\n\r\n<div fxLayout=\"row\">\r\n  <div class=\"full-width\" fxLayoutAlign=\"center\" fxLayoutGap=\"20px\">\r\n    <button mat-flat-button class=\"backBtn\"\r\n    >Back</button>\r\n    <button mat-flat-button *ngIf=\"showAccountNum\" class=\"continueBtn\" [disabled]=\"!enableContinue || !chequedepositForm.get('transactionCurrency').valid\r\n    ||!chequedepositForm.get('transactionAmount').valid\r\n\r\n    ||!chequedepositForm.get('accountNumber').valid \r\n    ||!chequedepositForm.get('accountType').valid\r\n    ||!chequedepositForm.get('totalChargeAmount').valid\r\n    ||!chequedepositForm.get('totalTransactionAmount').valid\"\r\n        (click)=\"onSaveofchequeDeposit(chequedepositForm.value, ifQRvariable)\">Continue</button>\r\n        <button mat-flat-button *ngIf=\"!showAccountNum\" class=\"continueBtn\"  [disabled]=\"!enableContinue || !chequedepositForm.get('transactionCurrency').valid\r\n        ||!chequedepositForm.get('transactionAmount').valid\r\n        ||!chequedepositForm.get('accountNumber').valid \r\n        ||!chequedepositForm.get('accountType').valid\r\n        ||!chequedepositForm.get('totalChargeAmount').valid\r\n        ||!chequedepositForm.get('totalTransactionAmount').valid\"\r\n            (click)=\"getOTP(chequedepositForm.value, ifQRvariable)\">Continue</button>\r\n      \r\n  \r\n   \r\n      <button mat-flat-button class=\"exitBtn\"\r\n      >Exit</button>\r\n  </div>\r\n\r\n</div>\r\n\r\n","import { Country } from '@angular-material-extensions/select-country';\r\nimport { Component, Injectable, Input, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl, FormBuilder, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { ToastrComponent } from 'app/shared/components/toastr/toastr.component';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { DialogService, TokenObjects } from 'app/shared/services/Dialog/dialog.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { Toast } from 'ngx-toastr';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { getCurrencySymbol } from '@angular/common';\r\nimport { ChangeDetectorRef } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { ViewChild } from '@angular/core';\r\nimport { otpModel } from 'app/shared/models/otp.model';\r\nimport { OtpVerifyComponent } from '../otp-verify/otp-verify.component';\r\nimport { MatDialog } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-cheque-withdrawal',\r\n  templateUrl: './cheque-withdrawal.component.html',\r\n  styleUrls: ['./cheque-withdrawal.component.scss']\r\n})\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class ChequeWithdrawalComponent implements OnInit {\r\n  // chequeWithdrawDto = new chequeWithdrawDto();\r\n  // chequeWithdrawDto : any = 'Cash Withdrawal';\r\n  chequewithdrawForm: FormGroup;\r\n  @Input() title: any;\r\n  operation: string;\r\n  ifQRvariable = false;\r\n  countryFormControl = new FormControl();\r\n  productCode = \"CQW\";\r\n  tokenOrigin = \"Kiosk\";\r\n  accountType = ['Savings', 'Current', 'Deposit'];\r\n  accountNum: string;\r\n  holderName = ['Jane smith', 'Micheal smith'];\r\n  defaultValue: Country = {\r\n    name: 'Deutschland',\r\n    alpha2Code: 'DE',\r\n    alpha3Code: 'DEU',\r\n    numericCode: '276',\r\n    callingCode: '+49'\r\n  };\r\n  chequeWithrwResponse: any;\r\n  phoneNumber: string;\r\n  accountBal: any;\r\n  errorStatus: any;\r\n  custAccountData: any;\r\n  countryValues: any;\r\n  accounttypeArray = [];\r\n  idList = [];\r\n  noList: any[];\r\n  accNum: any;\r\n  tokenObjects = new TokenObjects();\r\n  accNumber: any;\r\n  tokResponse: any;\r\n  tokenNum: any;\r\n  estimatedTime: any;\r\n  isedit: boolean = true;\r\n  transAmt: any;\r\n  balance: string;\r\n  enableContinue: boolean = true;\r\n  curr: string;\r\n  transAmount: string;\r\n  currencyImage: any = \"\";\r\n  custID: any;\r\n  qrData: any;\r\n  userName: string;\r\n  customerID: any;\r\n  showAccountNum : boolean = true;\r\n  showAccoutType : boolean = true;\r\n  custValidation: string;\r\n  accountNumber: string;\r\n  custmerID: any;\r\n  phonenum: any;\r\n  appointmentId:any;\r\n  oTpModel = new otpModel();\r\n  denomCodeArray: any[] = [\r\n    { key: 'count2000', value: 2000 },\r\n    { key: 'count500', value: 500 },\r\n    { key: 'count200', value: 200 },\r\n    { key: 'count100', value: 100 },\r\n    { key: 'count50', value: 50 },\r\n    { key: 'count20', value: 20 },\r\n    { key: 'count10', value: 10 },\r\n    { key: 'count1', value: 1 }\r\n\r\n  ];\r\n  totalAmount: any;\r\n  transamount: any;\r\n  a: any;\r\n  branchNameFromLogin: string;\r\n  branchName: string;\r\n  arrayAccountBranch: any;\r\n  branchData: any;\r\n  trasactionBranches: any;\r\n  branch: any;\r\n  hideDetails:boolean=false;\r\n  custNameFromLogin: string;\r\n  @ViewChild('cdForm') cdForm: NgForm;\r\n  // accountNoList: any[];\r\n  accountNoList = [];\r\n  selectedAccountInfo: any;\r\n  chequewithdrawValues: any;\r\n  chequewithdrawtype: any;\r\n  chequewithdrawform: any;\r\n  enableBtn: boolean = true;\r\n  enableBtn1: boolean = false;\r\n  accountNum1: any[];\r\n  filteredAccoun: any[];\r\n  accountDropdown: boolean = false;\r\n  flag1:boolean=false;\r\n  denomRequired: any;\r\n  qrBranchCode: any;\r\n  totalTransAmount: number;\r\n  chargeDetails: any;\r\n  cashData: any;\r\n  accountCurrency: any;\r\n  transBranch: string;\r\n\r\n  constructor(private router: Router,\r\n    private toast: ToastrComponent,\r\n    private formBuilder: FormBuilder,\r\n    private dialogService: DialogService,\r\n    private apiService: ApiService,private dialog: MatDialog,\r\n    private cdr:ChangeDetectorRef,\r\n    private ls: LocalStoreService, private snack: MatSnackBar, private changeDef: ChangeDetectorRef) { }\r\n  ngOnInit() {\r\n    this.phoneNumber = localStorage.getItem(\"phonenumFromLogin\");\r\n    this.appointmentId = this.ls.getItem(\"TransactionType\");\r\n    this.transBranch=localStorage.getItem(\"TRANSACTIONBRANCH\") ;\r\n    this.qrData = JSON.parse(JSON.parse(localStorage.getItem('scannerData')));\r\n    console.log(\"QRData\", this.qrData);\r\n    this.custValidation = localStorage.getItem(\"customerValidation\");\r\n    this.custNameFromLogin = localStorage.getItem(\"FromLogin\");\r\n    if(this.custValidation == \"New Customer\"){\r\n      this.showAccountNum = false;\r\n      this.showAccoutType = false;\r\n    }\r\n    if(this.custNameFromLogin!=null){\r\n      this.showAccountNum=false;\r\n    } \r\n    this.chequewithdrawForm = this.formBuilder.group({\r\n      transactionId: ['', [Validators.required]],\r\n      chequeNumber: ['', [Validators.required]],\r\n      customerId: ['', [Validators.required]],\r\n      accountNumber: ['', [Validators.required]],\r\n      accountType: ['', [Validators.required]],\r\n      holderName: ['', [Validators.required]],\r\n      accountCurrency: ['', [Validators.required]],\r\n      totalAmount: ['', Validators.required],\r\n      transactionCurrency: ['', [Validators.required]],\r\n      transactionAmount: ['', [Validators.required, Validators.min(.1)]],\r\n      accountBalance: [''],\r\n      productCode: ['CQW', [Validators.required]],\r\n      tokenOrigin: ['Kiosk', [Validators.required]],\r\n      totalChargeAmount:['', [Validators.required]],\r\n      totalTransactionAmount:['',[Validators.required]],\r\n\r\n      // audit\r\n      createdBy: ['', [Validators.required]],\r\n      createdTime: ['', [Validators.required]],\r\n      modifiedBy: ['', [Validators.required]],\r\n      modifiedTime: ['', [Validators.required]],\r\n      recordStatus: ['', [Validators.required]],\r\n      authStatus: ['', [Validators.required]],\r\n      version: ['', [Validators.required]],\r\n      accountBranch: ['', [Validators.required]],\r\n      transactionBranch:['', [Validators.required]]\r\n\r\n    })\r\n    console.log(this.chequewithdrawForm.value);\r\n\r\n    if (this.phoneNumber && this.custNameFromLogin==null && this.appointmentId==null) {\r\n      this.ifQRvariable = false;\r\n      this.gettingallTansactionDetails(this.phoneNumber);\r\n    }\r\n    // else {\r\n      if(this.qrData!=null){\r\n      this.ifQRvariable = true;\r\n      console.log(\"Account\", this.qrData.accountId);\r\n      this.chequewithdrawForm.controls.holderName.setValue(this.qrData.holderName);\r\n      this.chequewithdrawForm.controls.accountType.setValue(this.qrData.accountType);\r\n      this.chequewithdrawForm.controls.accountNumber.setValue(this.qrData.accountId);\r\n      this.getChargeDetails(this.qrData.accountId,'');\r\n      this.chequewithdrawForm.controls.transactionAmount.setValue(this.qrData.transactionAmount);\r\n      this.chequewithdrawForm.controls.accountCurrency.setValue(this.qrData.accountCurrency);\r\n      this.chequewithdrawForm.controls.transactionCurrency.setValue(this.qrData.transactionCurrency);\r\n      this.accountBal = this.qrData.accountBalance;\r\n      this.customerID = this.qrData.customerId;\r\n      this.currencyImage = 'currency-flag-' + this.qrData.accountCurrency.toLowerCase();\r\n      this.currencyImage = 'currency-flag-' + this.qrData.transactionCurrency.toLowerCase();\r\n      this.chequewithdrawForm.controls.transactionBranch.setValue(this.qrData.transactionBranch);\r\n      if(this.qrData.transactionBranch !=null && this.qrData.transactionBranch !=''){\r\n        this.chequewithdrawForm.controls.transactionBranch.setValue(this.qrData.transactionBranch);\r\n      }else{\r\n        this.chequewithdrawForm.controls.transactionBranch.setValue('Kasturi Nagar');\r\n      }\r\n      this.getAccountBranch();\r\n    }\r\n    this.getCountrynameValues();\r\n    this.getAccountBranch();\r\n    this.gettransactionBranch(\"account_branch\");\r\n    this.getBankInformation(\"KN\");\r\n    if(this.appointmentId.data.appointmentId){\r\n      this.cashWithdrawlData();\r\n    }\r\n  }\r\n  fetchByAccountNum(accNum){\r\n    this.chequewithdrawForm.controls.transactionAmount.reset();\r\n    this.chequewithdrawForm.controls.totalTransactionAmount.setValue(this.chequewithdrawForm.controls.totalChargeAmount.value);\r\n    this.chequewithdrawForm.controls.chequeNumber.reset();\r\n    console.log(\"Account Numebr\",accNum);\r\n    this.apiService.fetchByaccNum(accNum).subscribe((res: any) => {\r\n      console.log('Account Number Rsp', res);\r\n      this.getChargeDetails(accNum,'');\r\n      this.userName = res.accHolderName;\r\n      this.accountBal = res.accBalance;\r\n      this.custmerID = res.customerId;\r\n      this.accountNumber = res.accountId;\r\n      this.accountCurrency = res.accountCurrency;\r\n      this.curr = getCurrencySymbol(res.currency, \"narrow\");\r\n      this.chequewithdrawForm.controls.accountType.setValue(res.accountType);\r\n      this.chequewithdrawForm.controls.accountCurrency.setValue(res.currency);\r\n      this.chequewithdrawForm.controls.accountBranch.setValue(res.accountBranch);\r\n      this.chequewithdrawForm.controls.holderName.setValue(this.userName); \r\n      this.currencyImage = 'currency-flag-'+res.currency.toLowerCase();\r\n      this.currencyImage = 'currency-flag-'+res.currency.toLowerCase();\r\n      this.getCountrynameValues();\r\n      this.chequewithdrawForm.controls.transactionCurrency.setValue(res.currency);\r\n      this.custAmountBal(accNum);\r\n      this.chequewithdrawForm.controls.transactionBranch.setValue('Kasturi Nagar');\r\n      this.apiService.fetchByaccDeatilsoncustId(res.customerId).subscribe((resp: any) => {\r\n        this.phonenum = resp[0].phoneNumber;\r\n        localStorage.setItem('otpPhoneNum', this.phonenum);\r\n      }) \r\n  });\r\n\r\n}\r\ngetOTP(formData, type, cdForm){\r\n  this.chequewithdrawValues =formData;\r\n  this.chequewithdrawtype = type;\r\n  this.chequewithdrawform = cdForm;\r\n  this.oTpModel.source = 'customer';\r\n  this.oTpModel.source_key = 'mobile';\r\n  this.oTpModel.source_value = this.phonenum;\r\n\r\n  let amount= 50000;\r\n  let transamountwithoutcomma=this.chequewithdrawValues.transactionAmount.replace(/,/g, \"\");\r\n  console.log( transamountwithoutcomma);\r\n  if(transamountwithoutcomma > amount){\r\n    this.apiService.getOtp(this.oTpModel).subscribe(otpResp => {\r\n      if (otpResp) {\r\n        this.openDialogOTP(this.phonenum);\r\n        this.snack.open(\"An OTP has been sent to the Registered Mobile Number.\" , \"\", {\r\n          duration: 4000,\r\n          verticalPosition: 'top',\r\n          horizontalPosition: 'right'\r\n        });\r\n      }\r\n    })\r\n  }\r\n  else{\r\n    this.getOTPforSave(   this.chequewithdrawValues,this.chequewithdrawtype,\r\n      this.chequewithdrawform);  }\r\n}\r\nopenDialogOTP(numbr) {\r\n  const dialogRef = this.dialog.open(OtpVerifyComponent, {\r\n    data: { number: numbr, type: \"numbr\" },\r\n    disableClose: true,\r\n  });\r\n  dialogRef.afterClosed().subscribe(submit => {\r\n    if(submit){\r\n      this.getOTPforSave(   this.chequewithdrawValues,this.chequewithdrawtype,\r\n        this.chequewithdrawform);\r\n    }\r\n   });\r\n}\r\ngetOTPforSave(formData, type, cdForm){\r\n  formData.transactionBranch = this.transBranch;\r\n  let denominationData: any = {};\r\n  let denominationDataArray: any[] = [];\r\n  if(this.denomRequired == 'yes'){\r\n  for (let i = 0; i < this.denomCodeArray.length; i++) {\r\n    if (cdForm.value[this.denomCodeArray[i].key]) {\r\n      // denominationData.transactionId = this.cashdepositFor;\r\n      denominationData.denominationKey = this.denomCodeArray[i].value;\r\n      denominationData.denominationValue = +cdForm.value[this.denomCodeArray[i].key];\r\n      denominationData.currency = this.chequewithdrawForm.value.transactionCurrency;\r\n      // denominationData.amountAvailiable = 15200 - (cdForm.value[this.denomCodeArray[i].key] * this.denomCodeArray[i].value);\r\n      denominationDataArray.push(denominationData);\r\n      console.log(denominationDataArray)\r\n      denominationData = {};\r\n    }\r\n  }\r\n}\r\n  if(this.custValidation == \"New Customer\"){\r\n    console.log(\"customer\",this.custmerID);\r\n   this.accountNum = formData.accountNumber;\r\n   formData.customerId = this.custmerID?this.custmerID:0;\r\n   formData.accountType = formData.accountType;\r\n   formData.accountNumber = this.accountNumber;\r\n   formData.holderName = formData.holderName;\r\n   formData.accountCurrency = formData.accountCurrency;\r\n   formData.transactionCurrency = formData.transactionCurrency;\r\n   formData.transactionAmount = formData.transactionAmount.replace(/,/g, '');\r\n   formData.productCode = this.productCode;\r\n   formData.tokenOrigin = this.tokenOrigin;\r\n   formData.accountBalance = this.accountBal;\r\n   if(this.denomRequired == 'yes'){\r\n   formData.denomination = denominationDataArray;\r\n   }\r\n  }\r\n  formData.tokenBranch = \"KN\";\r\n  if(this.appointmentId && this.appointmentId.data){\r\n    formData.transactionId = this.appointmentId.data.transactionId;\r\n    formData.transactionStatus = this.appointmentId.data.transactionStatus;\r\n  }\r\n  formData.customerId = this.custmerID?this.custmerID:0;\r\n  formData.accountType = formData.accountType;\r\n  formData.accountNumber = this.accountNumber;\r\n  formData.holderName = formData.holderName;\r\n  formData.accountCurrency = formData.accountCurrency;\r\n  formData.transactionCurrency = formData.transactionCurrency;\r\n  formData.transactionAmount = formData.transactionAmount.replace(/,/g, '');\r\n  formData.productCode = this.productCode;\r\n  formData.tokenOrigin = this.tokenOrigin;\r\n  formData.accountBalance = this.accountBal;\r\n  this.apiService.saveofCashDeposit(formData).subscribe((resp) => {\r\n    console.log('Response Success', resp);\r\n    this.chequeWithrwResponse = resp;\r\n    this.tokenNum = this.chequeWithrwResponse.tokenNumber;\r\n    this.estimatedTime = this.chequeWithrwResponse.estimatedWaitTime;\r\n    localStorage.setItem(\"tokenNumer\", this.tokenNum);\r\n    localStorage.setItem(\"estimatedTiming\", this.estimatedTime);\r\n    this.enableContinue = false;\r\n    if (this.chequeWithrwResponse) {\r\n      this.dialogService.tokenGenerationDialog();\r\n    }\r\n  }); \r\n}\r\n  _keyPress(event: any) {\r\n    const pattern = /[0-9 a-z A-Z]/;\r\n    let inputChar = String.fromCharCode(event.charCode);\r\n    if (!pattern.test(inputChar)) {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n  gettransactionBranch(key: string) {\r\n    this.apiService.getTransactionBranch(key)\r\n      .subscribe(branches => {\r\n        console.log('branches :: ', branches);\r\n        this.trasactionBranches = branches;\r\n       \r\n      })\r\n  }\r\n  getAccountBranch() {\r\n    this.apiService.getBranchforKiosk()\r\n      .subscribe((data: any) => {\r\n        this.branchData = data;\r\n          console.log( this.branchData);\r\n          data.forEach((element,index)=>{\r\n            this.branch = data[index].branchName;\r\n            console.log(this.branch);\r\n            // this.chequewithdrawForm.controls.accountBranch.setValue(this.branch);\r\n         });      \r\n      });\r\n  }\r\n  getCountrynameValues() {\r\n    this.apiService.getCountryValues().subscribe((allCountryValues: any) => {\r\n      this.countryValues = allCountryValues;\r\n    });\r\n  }\r\n \r\n  onCountrySelected($event: Country): void {\r\n    console.log($event);\r\n  }\r\n  goToServiceScreens() {\r\n    if(this.appointmentId){\r\n    if(this.appointmentId.data.appointmentId){\r\n      this.router.navigateByUrl('/sessions/login');\r\n      localStorage.removeItem(\"FromLogin\")\r\n      localStorage.removeItem(\"TransactionType\")\r\n      localStorage.removeItem(\"customerId\")\r\n      localStorage.removeItem(\"phonenumFromLogin\")\r\n      localStorage.removeItem(\"customerValidation\")\r\n      localStorage.removeItem(\"otpPhoneNum\")\r\n      localStorage.removeItem(\"AccountBal\")\r\n      localStorage.removeItem(\"AccountNumber\")\r\n      localStorage.removeItem(\"ProductCode\")\r\n      localStorage.removeItem(\"tokenNumer\")\r\n      localStorage.removeItem(\"estimatedTiming\")\r\n      localStorage.removeItem(\"userId\")\r\n      localStorage.removeItem(\"scannerData\")\r\n      localStorage.removeItem(\"custholderName\")\r\n    }\r\n  }\r\n    else{\r\n      this.router.navigateByUrl('/others/kioskHome');\r\n    }\r\n  }\r\n  goToAuthenticate() {\r\n    this.dialogService.authenticationDialog();\r\n  }\r\n  gettingallTansactionDetails(phoneNumber) {\r\n    this.phoneNumber = localStorage.getItem(\"phonenumFromLogin\");\r\n    this.apiService.gettingTransactionDetails(this.phoneNumber).subscribe((allTransactionResp: any) => {\r\n      console.log(\"All Transaction Details\", allTransactionResp);\r\n      this.userName = (allTransactionResp.firstName ? allTransactionResp.firstName + ' ' : ' ') +\r\n        (allTransactionResp.middleName ? allTransactionResp.middleName + ' ' : ' ') +\r\n        (allTransactionResp.lastName ? allTransactionResp.lastName : ' ');\r\n      this.chequewithdrawForm.controls.holderName.setValue(this.userName);\r\n      this.custID = allTransactionResp.customerId;\r\n      // this.setBalance(allTransactionResp.custAccount);\r\n      this.custAccountData = allTransactionResp.custAccount;\r\n      this.accounttypeArray = [...this.custAccountData].filter(({ accountType }, index) =>\r\n        ![...this.custAccountData].map(obj => obj.accountType).includes(accountType, index + 1))\r\n        for(let j = 0; j < this.custAccountData.length; j++){\r\n          if(this.custAccountData[j].status == 'APPROVED'){\r\n            this.accountNoList.push(this.custAccountData[j]);  \r\n          }\r\n        }\r\n      if(this.custAccountData && this.accountNoList.length<=1){\r\n        this.accountDropdown=false;\r\n        this.hideDetails=true;\r\n        const accTyp = allTransactionResp.custAccount[0].accountType;\r\n        this.chequewithdrawForm.controls.accountType.setValue(accTyp);\r\n        this.custAccountNumber(this.accountNoList[0]);\r\n      }\r\n      else{\r\n        this.accountDropdown=true;\r\n        this.hideDetails=true;\r\n        const accTyp = allTransactionResp.custAccount[0].accountType;\r\n        this.chequewithdrawForm.controls.accountType.setValue(accTyp);\r\n        this.custAccountNumber(allTransactionResp.custAccount[0]);\r\n      }\r\n    });\r\n  }\r\n  getAccountType(event:any){\r\n    this.chequewithdrawForm.controls.transactionAmount.reset();\r\n    this.chequewithdrawForm.controls.totalTransactionAmount.setValue(this.chequewithdrawForm.controls.totalChargeAmount.value);\r\n    this.chequewithdrawForm.controls.chequeNumber.reset();\r\n    this.accountNoList=[];\r\n    console.log(event);\r\n    this.isedit=false;\r\n    this.accountNum1=[...this.custAccountData].filter((accounNum,index)=>{\r\n      return accounNum.accountType==event;\r\n    });console.log(this.accountNum1)\r\n    // this.accountNoList=this.accountNum1\r\n    // this.accountNoList=this.accountNum1.map((acccount)=>\r\n    // {\r\n    //   return acccount.accountId\r\n    // })\r\n    for(let i = 0; i < this.custAccountData.length; i++){\r\n      if(this.custAccountData[i].status == 'APPROVED' && this.custAccountData[i].accountType == event){\r\n        this.accountNoList.push(this.custAccountData[i].accountId);    \r\n      }\r\n    }\r\n    console.log(this.accountNoList);\r\n    if(this.accountNoList.length<=1){\r\n      this.flag1=false; \r\n      this.chequewithdrawForm.controls.accountNumber.setValue(this.accountNoList[0]);\r\n      this.getData(this.accountNoList[0])   \r\n    }\r\n    else{\r\n      this.getData(this.accountNoList[0])  \r\n      this.flag1=true;   \r\n    }\r\n    this.getChargeDetails(this.accountNoList[0],'');\r\n  }\r\n  getData(custNum){\r\n    this.hideDetails=true;\r\n    console.log(custNum)\r\n    let val=this.accountNum1.filter((value)=>{\r\n    return value.accountId==custNum}\r\n    )\r\n    console.log(val)\r\n    this.idList = [...this.custAccountData].filter(item => item.accountType === val[0].accountType);\r\n    this.chequewithdrawForm.controls.accountCurrency.setValue(val[0].accountCurrency);\r\n   this.chequewithdrawForm.controls.accountBranch.setValue(this.branch);\r\n   this.curr = getCurrencySymbol(val[0].accountCurrency, \"narrow\");\r\n   this.chequewithdrawForm.controls.transactionCurrency.setValue(val[0].accountCurrency);\r\n  \r\n   this.currencyImage = 'currency-flag-'+val[0].accountCurrency.toLowerCase();\r\n   console.log('data :: ',this.idList[0]);\r\n  this.accountBal = this.idList[0].amount;\r\n  console.log(this.accountBal);\r\n  localStorage.setItem(\"AccountBal\",this.accountBal);\r\n  // this.chequewithdrawForm.controls.accountNumber.setValue(this.idList[0].accountId);\r\n  this.custAmountBal(this.idList[0].accountId);\r\n  this.chequewithdrawForm.controls.accountNumber.setValue(val[0].accountId);\r\n  this.chequewithdrawForm.controls.accountBranch.setValue(val[0].accountBranch);\r\n  this.getChargeDetails(val[0].accountId,'')\r\n  }\r\n  custAccountNumber(custype) {\r\n    this.isedit = false;\r\n    this.idList = [...this.custAccountData].filter(item => item.accountType === custype.accountType);\r\n    // const defaultId = this.idList ? this.idList[0] : null;\r\n\r\n    this.accountNoList = [];\r\n    for(let i = 0; i < this.idList.length; i++){\r\n       if(this.idList[i].status == 'APPROVED'){\r\n         this.accountNoList.push(this.idList[i].accountId)    \r\n       }\r\n     }\r\n     console.log(this.accountNoList);\r\n     if(this.accountNoList.length<=1){\r\n      // this.cashwithdrawForm.controls.accountNumber.patchValue(this.accountNoList[0]);\r\n      this.flag1=false; \r\n      // this.getData(this.accountNoList[0]);\r\n      this.chequewithdrawForm.controls.accountNumber.setValue(this.accountNoList[0]);\r\n    }\r\n    else{\r\n      this.chequewithdrawForm.controls.accountNumber.setValue(this.accountNoList[0]);\r\n      this.flag1=true;   \r\n    }\r\n    \r\n    // this.chequewithdrawForm.controls.accountNumber.setValue(defaultId);\r\n    this.chequewithdrawForm.controls.accountCurrency.setValue(custype.accountCurrency);\r\n    this.chequewithdrawForm.controls.accountBranch.setValue(this.branch);\r\n    //this.chequewithdrawForm.controls.transactionAmount.setValue(custype.amount);\r\n    this.curr = getCurrencySymbol(custype.accountCurrency, \"narrow\");\r\n    this.chequewithdrawForm.controls.transactionCurrency.setValue(custype.accountCurrency);\r\n    // this.chequewithdrawForm.controls.accountType.setValue(defaultId);\r\n\r\n    this.currencyImage = 'currency-flag-' + custype.accountCurrency.toLowerCase();\r\n    // this.accountBal = this.idList[0].amount;\r\n\r\n    console.log(this.accountBal);\r\n    localStorage.setItem(\"AccountBal\", this.accountBal);\r\n    // this.chequewithdrawForm.controls.accountNumber.setValue(this.idList[0].accountId);\r\n    this.custAmountBal(this.accountNoList[0]);\r\n    this.chequewithdrawForm.controls.accountBranch.setValue(custype.accountBranch);\r\n    this.getChargeDetails(this.accountNoList[0],custype.amount);\r\n  }\r\n  custAmountBal(custNum) {\r\n    console.log(custNum);\r\n    var account = this.idList.filter(function (record) {\r\n      if (record.accountId == custNum) {\r\n        return record;\r\n      }\r\n    });\r\n    this.accNum = account[0].accountId;\r\n    this.accountBal = account[0].amount;\r\n    this.selectedAccountInfo = account[0];\r\n  }\r\n  setBalance(accountBalance, index = 0) {\r\n    this.accountBal = accountBalance[index].currentBalance ? accountBalance[index].currentBalance : null;\r\n  }\r\n  onSaveofChequeWithdraw(form, type, cdForm) {\r\n    form.transactionBranch = this.transBranch;\r\n    let denominationData: any = {};\r\n    let denominationDataArray: any[] = [];\r\n    if(this.qrData){\r\n      if(this.qrData.transactionBranch){\r\n        this.apiService.fetchBranchInfoByBranchName(this.qrData.transactionBranch).subscribe(response=>{\r\n          this.qrBranchCode=response;\r\n          \r\n        })\r\n      }\r\n    }\r\n    if(this.denomRequired == 'yes'){\r\n    for (let i = 0; i < this.denomCodeArray.length; i++) {\r\n      if (cdForm.value[this.denomCodeArray[i].key]) {\r\n        // denominationData.transactionId = this.cashdepositFor;\r\n        denominationData.denominationKey = this.denomCodeArray[i].value;\r\n        denominationData.denominationValue = +cdForm.value[this.denomCodeArray[i].key];\r\n        denominationData.currency = this.chequewithdrawForm.value.transactionCurrency;\r\n        // denominationData.amountAvailiable = 15200 - (cdForm.value[this.denomCodeArray[i].key] * this.denomCodeArray[i].value);\r\n        denominationDataArray.push(denominationData);\r\n        console.log(denominationDataArray)\r\n        denominationData = {};\r\n      }\r\n    }\r\n  }\r\n    form.tokenBranch = \"KN\";\r\n    console.log(\"onSaveofChequeWithdraw\", form);\r\n    if (!this.ifQRvariable) {\r\n      this.accountNum = JSON.stringify( this.selectedAccountInfo.accountId);\r\n      localStorage.setItem(\"AccountNumber\", this.accountNum);\r\n      localStorage.setItem(\"ProductCode\", this.productCode);\r\n      form.customerId = this.custID;\r\n      form.transactionCurrency = form.transactionCurrency;\r\n      form.transactionAmount = form.transactionAmount.replace(/,/g, '');\r\n      form.accountNumber =  this.selectedAccountInfo.accountId;\r\n      form.accountType = form.accountType;\r\n      form.productCode = this.productCode;\r\n      form.tokenOrigin = this.tokenOrigin;\r\n      form.accountBalance = this.accountBal;\r\n      if(this.denomRequired == 'yes'){\r\n      form.denomination = denominationDataArray;\r\n      }\r\n    }\r\n    else {\r\n      form.customerId = this.custID;\r\n      form.accountType = form.accountType;\r\n      form.accountNumber =  form.accountNumber\r\n      form.holderName = form.holderName;\r\n      form.accountCurrency = form.accountCurrency;\r\n      form.transactionCurrency = form.transactionCurrency;\r\n      form.transactionAmount = form.transactionAmount;\r\n      form.productCode = this.productCode;\r\n      form.tokenOrigin = this.tokenOrigin;\r\n      form.accountBalance = this.accountBal;\r\n      if(this.denomRequired == 'yes'){\r\n      form.denomination = denominationDataArray;\r\n      }\r\n    }\r\n    if(this.qrData){\r\n      if(this.qrData.transactionBranch){\r\n        form.tokenBranch = this.qrBranchCode.transactionBranch;\r\n      }\r\n    }\r\n    console.log(\"this.appointmentId::\",this.appointmentId)\r\n    if(this.appointmentId && this.appointmentId.data){\r\n      form.transactionId = this.appointmentId.data.transactionId;\r\n      form.transactionStatus = this.appointmentId.data.transactionStatus;\r\n    }\r\n\r\n    console.log(form.transactionId,form.transactionStatus);\r\n    this.apiService.saveofCashDeposit(form).subscribe((resp) => {\r\n      console.log('Response Success', resp);\r\n      this.chequeWithrwResponse = resp;\r\n      this.tokenNum = this.chequeWithrwResponse.tokenNumber;\r\n      this.estimatedTime = this.chequeWithrwResponse.estimatedWaitTime;\r\n      localStorage.setItem(\"tokenNumer\", this.tokenNum);\r\n      localStorage.setItem(\"estimatedTiming\", this.estimatedTime);\r\n      this.enableContinue = false;\r\n      if (this.chequeWithrwResponse) {\r\n        this.dialogService.tokenGenerationDialog();\r\n      }\r\n    });\r\n\r\n\r\n  }\r\n  omit_number(event) {\r\n    var key;\r\n    key = event.charCode;\r\n    return ((key > 47 && key < 58));\r\n  }\r\n  totalAmountValue(cdForm) {\r\n    this.a = this.chequewithdrawForm.value.transactionAmount;\r\n    this.a = this.a.replace(/\\,/g, ''); // 1125, but a string, so convert it to number\r\n    this.a = parseInt(this.a, 10);\r\n\r\n\r\n    this.chequewithdrawForm.value.totalAmount =\r\n      ((cdForm.value.count2000 ? cdForm.value.count2000 * 2000 : 0) +\r\n        (cdForm.value.count500 ? cdForm.value.count500 * 500 : 0) +\r\n        (cdForm.value.count200 ? cdForm.value.count200 * 200 : 0) +\r\n        (cdForm.value.count100 ? cdForm.value.count100 * 100 : 0) +\r\n        (cdForm.value.count50 ? cdForm.value.count50 * 50 : 0) +\r\n        (cdForm.value.count20 ? cdForm.value.count20 * 20 : 0) +\r\n        (cdForm.value.count10 ? cdForm.value.count10 * 10 : 0) +\r\n        (cdForm.value.count1 ? cdForm.value.count1 * 1 : 0)\r\n      );\r\n    this.chequewithdrawForm.value.totalAmount = this.chequewithdrawForm.value.totalAmount\r\n    console.log(this.chequewithdrawForm.value.totalAmount)\r\n    console.log(this.chequewithdrawForm.value.transactionAmount);\r\n    this.transamount = this.chequewithdrawForm.value.transactionAmount;\r\n    this.totalAmount = this.chequewithdrawForm.value.totalAmount.toLocaleString(\"en-US\");\r\n    if(this.transamount != this.totalAmount){\r\n      this.enableBtn = false;\r\n    }\r\n    else{\r\n      this.enableBtn = true;\r\n    }\r\n\r\n    if((this.transamount > this.totalAmount) || (this.transamount < this.totalAmount)){\r\n      this.enableBtn1 = true;\r\n    }\r\n    else{\r\n      this.enableBtn1 = false;\r\n    }\r\n    this.chequewithdrawForm.controls.totalAmount.setValue(this.chequewithdrawForm.value.totalAmount);\r\n\r\n  }\r\n  OnInput(event: any) {\r\n    this.transAmt = event.target.value;\r\n    console.log(event.target.value);\r\n    this.totalAmount = 0;\r\n    // comma separator using changeDetector\r\n    const savedInput = this.transAmount;\r\n    // this.transAmount = '';\r\n    // this.changeDef.detectChanges();\r\n\r\n\r\n    let lastCharIsPoint = false;\r\n    if (savedInput.charAt(savedInput.length - 1) === '.') {\r\n      lastCharIsPoint = true;\r\n    }\r\n    const num = savedInput.replace(/[^0-9.]/g, '');\r\n\r\n    this.transAmt = Number(num)||'';\r\n    this.transAmount = this.transAmt.toLocaleString('en-IN');\r\n    if (lastCharIsPoint) {\r\n      this.transAmount = this.transAmount.concat('.');\r\n    }\r\n    this.changeDef.detectChanges();\r\n\r\n    this.balance = localStorage.getItem(\"AccountBal\");\r\n    if (parseFloat(this.balance) < parseFloat(this.transAmt)) {\r\n      console.log(\"Bigger\")\r\n      this.snack.open(`Transaction Amount should not exceed than Account Balance`, 'OK', {\r\n        duration: 2000,\r\n        verticalPosition: 'top',\r\n        horizontalPosition: 'right'\r\n      });\r\n      this.enableContinue = false;\r\n    }\r\n    else {\r\n      this.enableContinue = true;\r\n    }\r\n    this.totalTransAmount=Number(this.transAmt) + Number(this.chargeDetails?this.chargeDetails[0].amount:'');\r\n    this.chequewithdrawForm.controls.totalTransactionAmount.setValue(this.totalTransAmount);\r\n    this.cdr.markForCheck();\r\n    this.cdr.detectChanges();\r\n  }\r\n\r\n  addCurrencyImage(currency) {\r\n    return currency.toLowerCase();\r\n  }\r\n\r\n  onCountryChange(country) {\r\n    let currency = country.currencyCode;\r\n    this.currencyImage = 'currency-flag-' + currency.toLowerCase();\r\n  }\r\n\r\n  accountCurrencyImage(accountCurrency) {\r\n    return accountCurrency ? 'currency-flag-' + accountCurrency.toLowerCase() : '';\r\n  }\r\n\r\n\r\n  clicked(event) {\r\n    console.log(event);\r\n  }\r\n  getBankInformation(branchCode:any){\r\n    this.apiService.fetchBankInfoByBranchCode(branchCode).subscribe(resp => {\r\n      console.log(resp)\r\n      this.denomRequired = resp.denomRequired\r\n      if(resp.denomRequired == 'yes'){\r\n        this.enableBtn = false;\r\n        this.enableBtn1 = false;\r\n       }\r\n      \r\n    })\r\n  }\r\n\r\nformatAmount(amount) {\r\n  if(amount){\r\n    return amount && amount.toString().split('.')[0].length > 3 ? amount.toString().substring(0,amount.toString().split('.')[0].length-3).replace(/\\B(?=(\\d{2})+(?!\\d))/g, \",\") + \",\" + amount.toString().substring(amount.toString().split('.')[0].length-3): amount.toString();\r\n   }\r\n  }\r\n  cashWithdrawlData(){\r\n    this.apiService.getAppointmentId(this.appointmentId.data.appointmentId).subscribe((resp : any)=> {\r\n      console.log(resp);\r\n      this.cashData=resp.data;\r\n      this.custID=resp.data.customerId;\r\n      this.ifQRvariable = true;\r\n      this.chequewithdrawForm.controls.accountType.setValue(resp.data.accountType);\r\n      this.chequewithdrawForm.controls.accountBranch.setValue(resp.data.accountBranch);\r\n      this.chequewithdrawForm.controls.accountNumber.setValue(resp.data.accountNumber);\r\n      this.chequewithdrawForm.controls.chequeNumber.setValue(resp.data.chequeNumber);\r\n      this.getChargeDetails(resp.data.accountNumber,resp.data.transactionAmount);\r\n      this.chequewithdrawForm.controls.accountCurrency.setValue(resp.data.accountCurrency);\r\n      this.chequewithdrawForm.controls.transactionCurrency.setValue(resp.data.transactionCurrency);\r\n      this.chequewithdrawForm.controls.transactionAmount.setValue(resp.data.transactionAmount);\r\n    \r\n      this.currencyImage = 'currency-flag-'+resp.data.transactionCurrency.toLowerCase();\r\n      this.currencyImage = 'currency-flag-'+resp.data.accountCurrency.toLowerCase();\r\n  \r\n  \r\n    });\r\n  }\r\n  getChargeDetails(accountId,amount){\r\n    this.apiService.fetchChargeDetails(accountId).subscribe(resp => {\r\n  console.log(resp);\r\n  this.chargeDetails=resp;\r\n  this.chequewithdrawForm.controls.totalChargeAmount.setValue(this.chargeDetails?this.chargeDetails[0].amount:'');\r\n    });\r\n    if(this.cashData){\r\n    setTimeout(() => {\r\n      this.totalTransAmount=Number(this.cashData.transactionAmount) + Number(this.chargeDetails?this.chargeDetails[0].amount:'');\r\n      this.chequewithdrawForm.controls.totalTransactionAmount.setValue(this.totalTransAmount);\r\n    }, 1000);\r\n    this.cdr.markForCheck();\r\n    this.cdr.detectChanges();\r\n  }\r\n  else{\r\n    console.log(this.chargeDetails)\r\n    amount=0;\r\n    console.log(amount);\r\n    setTimeout(() => {\r\n      this.totalTransAmount=Number(amount) + Number(this.chargeDetails?this.chargeDetails[0].amount:'');\r\n      console.log(this.totalTransAmount);\r\n      this.chequewithdrawForm.controls.totalTransactionAmount.setValue(this.totalTransAmount);\r\n    }, 1000);\r\n    this.cdr.markForCheck();\r\n    this.cdr.detectChanges();\r\n  }\r\n\r\n    // console.log(this.totalTransAmount);\r\n  \r\n  }\r\n\r\n\r\n}\r\n","<div class=\"fullcard\">\r\n    <div fxLayout=\"row\">\r\n        <div fxFlex=\"chequewithdrawForm.get('transactionAmount').value > 0? 70% : 100%\">\r\n            <h6 class=\"h1\"><span style=\"color:grey;padding-right: 4px;\">Services</span> <b>></b> <span style=\"padding-left: 4px;\"><b>Cheque Withdrawal</b></span></h6>\r\n            <mat-card class=\"chequecard topView\">\r\n                <mat-card-title style=\"padding: 2%;\">\r\n                    <div fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n                        <div>\r\n                            <mat-icon  *ngIf=\"phoneNumber\" class=\"backIcon\" (click)=\"goToServiceScreens()\">keyboard_backspace</mat-icon>\r\n                        </div>&nbsp;&nbsp;\r\n                        <div class=\"card-title\">Cheque Withdrawal</div>\r\n                    </div>\r\n                </mat-card-title>\r\n                <mat-card-content>\r\n                    <div class=\"full-width\" style=\"padding: 0% 0% 3% 2%;\">\r\n                        <form [formGroup]=\"chequewithdrawForm\">\r\n                            <div fxLayout=\"column\" fxLayoutGap=\"3%\" fxLayoutAlign=\"space-between none\">\r\n                                <div>\r\n                                    <div fxLayout=\"row wrap\" class=\"flex-container stretch\">\r\n                                        <ng-container>\r\n                                            <div fxFlex=\"25%\" fxFlex.xs=\"100%\" *ngIf=\"showAccountNum\" >\r\n                                                <mat-hint class=\"totalAmount\">Account Type*</mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                     <input matInput type=\"text\" *ngIf=\"phoneNumber && !accountDropdown\" [readonly]=\"true\" class=\"full-width\" formControlName=\"accountType\" >\r\n                                                     <mat-select *ngIf=\"phoneNumber && accountDropdown\" formControlName=\"accountType\" (selectionChange)=\"getAccountType($event.value)\"\r\n                                                        style=\"background-color: #f9fafb;\"\r\n                                                        placeholder=\"Select Account Type\">\r\n                                                        <mat-option *ngFor=\"let type of accounttypeArray \"\r\n                                                            \r\n                                                            [value]=\"type.accountType\">{{type.accountType}}</mat-option>\r\n                                                    </mat-select>\r\n                                                    <!-- <mat-select  *ngIf=\"phoneNumber  && !accountDropdown\" formControlName=\"accountType\" style=\"background-color: #f9fafb;\"  (selectionChange)=\"getAccountType($event.value)\" placeholder=\"Select Account Type\">\r\n                                                        <mat-option *ngFor=\"let type of accounttypeArray \"  (click)=\"custAccountNumber(type)\"  [value]=\"type.accountType\">{{type.accountType}}</mat-option>\r\n                                                    </mat-select> -->\r\n                                                    <!-- <input matInput type=\"text\"  [readonly]=\"true\" class=\"full-width\" formControlName=\"accountType\" > -->\r\n\r\n                                                </mat-card>\r\n                                            </div>\r\n                                            <div fxFlex=\"25%\" fxFlex.xs=\"100%\" *ngIf=\"!showAccountNum\" >\r\n                                                <mat-hint class=\"totalAmount\">Account Number*</mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <input matInput type=\"text\"  \r\n                                                        class=\"full-width\" formControlName=\"accountNumber\"\r\n                                                        (change)=\"fetchByAccountNum(chequewithdrawForm.get('accountNumber').value)\">\r\n                                                </mat-card>\r\n                                                    <!-- <mat-hint class=\"totalAmount\" *ngIf=\"!phoneNumber\" >Account Balance :{{curr }} {{accountBal | number: '2.' }}</mat-hint> -->\r\n                                                    <mat-hint class=\"totalAmount\" *ngIf=\"!showAccountNum\" >Account Balance\r\n                                                        : {{curr }}{{formatAmount(accountBal)}} </mat-hint>\r\n                                                    <br>\r\n                                                    <!-- <mat-hint  class=\"totalAmount\" *ngIf=\"!phoneNumber\"  [readonly]=\"true\"  formControlName=\"holderName\">Holder Name :{{userName}}</mat-hint> -->\r\n                                                    <mat-hint class=\"totalAmount\" *ngIf=\"!showAccountNum\" [readonly]=\"true\">\r\n                                                        Holder Name : {{userName}}</mat-hint>\r\n                                            </div>\r\n                                            <div fxFlex=\"25%\" fxFlex.xs=\"100%\" *ngIf=\"showAccountNum\">\r\n                                                <mat-hint class=\"totalAmount\">Account Number*</mat-hint>\r\n                                                <mat-card class=\"inputCard\" >\r\n                                                    <!-- <input matInput type=\"text\" *ngIf=\"!phoneNumber\"  [readonly]=\"true\" class=\"full-width\" formControlName=\"accountNumber\" > -->\r\n                                                    <input matInput type=\"text\" *ngIf=\"!flag1\"  [readonly]=\"true\" class=\"full-width\" formControlName=\"accountNumber\" >\r\n                                                    <!-- <mat-select *ngIf=\"phoneNumber\"  formControlName=\"accountNumber\" style=\"background-color: #f9fafb;\" > -->\r\n                                                        <mat-select *ngIf=\"flag1\" (selectionChange)=\"fetchByAccountNum($event.value)\" formControlName=\"accountNumber\" style=\"background-color: #f9fafb;\" >\r\n                                                        \r\n                                                            <mat-option>Select</mat-option>\r\n                                                            <mat-option  *ngFor=\"let id of accountNoList \"  [value]=\"id\">{{id}}</mat-option>\r\n                                                        \r\n                                                    </mat-select>\r\n                                                </mat-card>\r\n                                                <!-- <mat-hint class=\"totalAmount\" *ngIf=\"!phoneNumber\"  >Account Balance :{{curr }} {{accountBal | number: '2.' }}</mat-hint> -->\r\n                                                <mat-hint class=\"totalAmount\" *ngIf=\"hideDetails\" >Account Balance :{{curr }} {{formatAmount(accountBal)}}</mat-hint><br>\r\n                                                <mat-hint  class=\"totalAmount\"  *ngIf=\"hideDetails\" [readonly]=\"true\"  formControlName=\"holderName\">Holder Name :{{userName}}</mat-hint>\r\n                                            </div>\r\n                                            <div fxFlex=\"25%\" fxFlex.xs=\"100%\" *ngIf=\"!showAccountNum\" >\r\n                                                <mat-hint class=\"totalAmount\">Account Type*</mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <input matInput type=\"text\"  [readonly]=\"true\" \r\n                                                        class=\"full-width\" formControlName=\"accountType\">\r\n                                    \r\n                                                </mat-card>\r\n                                            </div>\r\n                                            <div fxFlex=\"25%\" fxFlex.xs=\"100%\">\r\n                                                <mat-hint class=\"accountBranch\">Account Branch*</mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <input matInput *ngIf=\"!phoneNumber\" type=\"text\"\r\n                                                    [readonly]=\"true\" class=\"full-width\"\r\n                                                    formControlName=\"accountBranch\">\r\n\r\n                                                <input matInput *ngIf=\"phoneNumber\" type=\"text\"\r\n                                                    [readonly]=\"true\" class=\"full-width\"\r\n                                                    formControlName=\"accountBranch\">\r\n                                                </mat-card>\r\n                                                <mat-error\r\n                                                    *ngIf=\"chequewithdrawForm.get('accountBranch').touched && !chequewithdrawForm.get('accountBranch').valid\">\r\n                                                    Account Branch is Required!\r\n                                                </mat-error>\r\n                                            </div>\r\n                                            <div fxFlex=\"25%\" fxFlex.xs=\"100%\">\r\n                                                <mat-hint class=\"totalAmount\">Account Currency*</mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <div fxLayout=\"row wrap\" class=\"full-width\">\r\n                                                        <div fxFlex=\"25%\">\r\n                                                            <div *ngIf=\"ifQRvariable\"\r\n                                                            class=\"currency-flag {{isedit?accountCurrencyImage(chequewithdrawForm.controls['accountCurrency'].value):currencyImage}}\"></div>\r\n                                                        <div *ngIf=\"!ifQRvariable\"\r\n                                                            class=\"currency-flag {{!isedit?accountCurrencyImage(chequewithdrawForm.controls['accountCurrency'].value):currencyImage}}\">\r\n                                                        </div>\r\n                                                        </div>\r\n                                                        <div fxFlex=\"75%\">\r\n                                                            <input matInput type=\"text\"  *ngIf=\"!phoneNumber\" [readonly]=\"true\" class=\"full-width\" style=\"font-size:110%\" formControlName=\"accountCurrency\">\r\n                                                            <input matInput type=\"text\"  *ngIf=\"phoneNumber\" [readonly]=\"true\" class=\"full-width\" style=\"font-size:110%\" formControlName=\"accountCurrency\">\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </mat-card>\r\n                                            </div>\r\n                                        </ng-container>\r\n                                    </div>\r\n                                </div>\r\n                                <div>\r\n                                    <div fxLayout=\"row wrap\" class=\"flex-container stretch\">\r\n                                        <ng-container>\r\n                                           \r\n                                            <div fxFlex=\"25%\" fxFlex.xs=\"100%\" *ngIf=\"showAccountNum\">\r\n                                                <mat-hint class=\"totalAmount\">Transaction Currency* </mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <div fxLayout=\"row wrap\" class=\"full-width\">\r\n                                                        <div fxFlex=\"30%\">\r\n                                                            <div class=\"currency-flag {{currencyImage}}\"></div>\r\n                                                        </div>\r\n                                                        <div fxFlex=\"70%\">\r\n                                                            <input matInput type=\"text\"  *ngIf=\"!phoneNumber\" [readonly]=\"true\" class=\"full-width\" formControlName=\"transactionCurrency\">\r\n                                                            <mat-select  *ngIf=\"phoneNumber\" formControlName=\"transactionCurrency\" placeholder=\"Select Transaction Currency\" id=\"testSelect\" style=\"background-color: #f9fafb;\" [disabled]=\"isedit\">\r\n                                                                <mat-option *ngFor=\"let country of countryValues; let i = index\" style=\"font-size:110%\" (click)=\"onCountryChange(country)\" [value]=\"country.currencyCode\">\r\n                                                                    <div fxLayout=\"row wrap\" class=\"full-width\">\r\n                                                                        <div fxFlex=\"15%\">{{country.currencyCode}}</div>\r\n                                                                        <div fxFlex=\"85%\">\r\n                                                                            <div class=\"currency-flag currency-flag-{{addCurrencyImage(country.currencyCode)}} alignImage\">\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </mat-option>\r\n                                                            </mat-select>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </mat-card>\r\n                                            </div>\r\n                                            <div fxFlex=\"25%\" fxFlex.xs=\"100%\" *ngIf=\"!showAccountNum\">\r\n                                                <mat-hint class=\"totalAmount\">Transaction Currency* </mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <div fxLayout=\"row wrap\" class=\"full-width\">\r\n                                                        <div fxFlex=\"25%\">\r\n                                                            <div class=\"currency-flag {{currencyImage}}\"></div>\r\n                                                        </div>\r\n                                                        <div fxFlex=\"75%\">\r\n                                                            <mat-select formControlName=\"transactionCurrency\"\r\n                                                                placeholder=\"Select Transaction Currency\"\r\n                                                                id=\"testSelect\" style=\"background-color: #f9fafb;\"\r\n                                                                >\r\n                                                                <mat-option\r\n                                                                    *ngFor=\"let country of countryValues; let i = index\"\r\n                                                                    (click)=\"onCountryChange(country)\" style=\"font-size:110%\"\r\n                                                                    [value]=\"country.currencyCode\">\r\n                                                                    <div fxLayout=\"row wrap\" class=\"full-width\">\r\n                                                                        <div fxFlex=\"15%\">{{country.currencyCode}}</div>\r\n                                                                        <div fxFlex=\"85%\">\r\n                                                                            <div\r\n                                                                                class=\"currency-flag currency-flag-{{addCurrencyImage(country.currencyCode)}} alignImage\">\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </mat-option>\r\n                                                            </mat-select>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </mat-card>\r\n                                            </div>\r\n                                            <div fxFlex=\"25%\" fxFlex.xs=\"100%\" *ngIf=\"showAccountNum\">\r\n                                                <mat-hint class=\"totalAmount\">Transaction Amount*</mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <input matInput type=\"text\"  *ngIf=\"!phoneNumber\" [readonly]=\"true\" class=\"full-width\" formControlName=\"transactionAmount\">\r\n                                                    <input matInput  class=\"full-width\" *ngIf=\"phoneNumber\" #myRef [(ngModel)]= \"transAmount\"  formControlName=\"transactionAmount\" [value]= \"transAmt | number: '1.'\" [readonly]=\"isedit\" \r\n                                                    (keyup)=\"OnInput($event)\" (focus)=\"clicked($event)\" >\r\n                                                </mat-card>\r\n                                                <mat-error *ngIf=\"chequewithdrawForm.get('transactionAmount').errors?.min\">\r\n                                                    Amount must be greater than zero\r\n                                                   </mat-error> \r\n                                            </div>\r\n                                            <div fxFlex=\"25%\" fxFlex.xs=\"100%\" *ngIf=\"!showAccountNum\">\r\n                                                <mat-hint class=\"totalAmount\">Transaction Amount*</mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <input matInput class=\"full-width\" #myRef\r\n                                                        [(ngModel)]=\"transAmount\" formControlName=\"transactionAmount\"\r\n                                                        [value]=\"transAmt | number: '1.'\" (keyup)=\"OnInput($event)\"\r\n                                                        (focus)=\"clicked($event)\" >\r\n                                                </mat-card>\r\n                                                <mat-error *ngIf=\"chequewithdrawForm.get('transactionAmount').errors?.min\">\r\n                                                    Amount must be greater than zero\r\n                                                </mat-error>\r\n                                            </div>\r\n                                            <div fxFlex=\"25%\" fxFlex.xs=\"100%\">\r\n                                                <mat-hint class=\"totalAmount\">Cheque Number*</mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                        <!-- <mat-select formControlName=\"holderName\" style=\"background-color: #f9fafb;\" >\r\n                                                            <mat-option *ngFor=\"let i of holderName\" [value]=\"i\">{{i}}</mat-option>\r\n                                                    </mat-select> -->\r\n                                                    <input matInput type=\"text\" *ngIf=\"!phoneNumber\" maxlength=\"6\" (keypress)=\"omit_number($event)\" class=\"full-width\" formControlName=\"chequeNumber\" >\r\n                                                    <input matInput type=\"text\" *ngIf=\"phoneNumber\" maxlength=\"6\" (keypress)=\"omit_number($event)\"  class=\"full-width\" formControlName=\"chequeNumber\" >\r\n\r\n                                                </mat-card>\r\n                                                <mat-error *ngIf=\"chequewithdrawForm.get('chequeNumber').touched && !chequewithdrawForm.get('chequeNumber').valid\">\r\n                                                    Cheque Number is Required!\r\n                                                   </mat-error>\r\n                                            </div>\r\n                                            <div fxFlex=\"25%\" fxFlex.xs=\"100%\">\r\n                                                <mat-hint class=\"totalAmount\">Total Charge Amount*</mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <input matInput class=\"full-width\" readonly formControlName=\"totalChargeAmount\">\r\n                                                </mat-card>\r\n\r\n                                            </div>\r\n                                            <div fxFlex=\"25%\" fxFlex.xs=\"100%\">\r\n                                                <mat-hint class=\"totalAmount\">Total Transaction Amount*</mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <input matInput type=\"text\" readonly onlyNumber formControlName=\"totalTransactionAmount\">\r\n\r\n                                                </mat-card>\r\n\r\n                                            </div>\r\n                                            <div class=\"tooltip\">\r\n                                                <img width=\"80%\"\r\n                                            [src]=\"'assets/images/info.svg'\"/>\r\n                                                <div class=\"tooltiptext\">\r\n                                                    <p class=\"totalAmount textcolor\" style=\"margin-top:10px; margin-bottom:6px\">Transaction Amount:{{chequewithdrawForm.get('transactionAmount').value}} </p>\r\n                                                    <p class=\"totalAmount textcolor\">Total Charge Amount:{{chequewithdrawForm.get('totalChargeAmount').value}} </p>\r\n                                                    <hr/>\r\n                                                    <p class=\"totalAmount textcolor\" style=\"margin-right:10px ;\">Total Transaction Amount:{{chequewithdrawForm.get('totalTransactionAmount').value}} </p>\r\n                                                </div>\r\n                                            </div>\r\n                                        </ng-container>\r\n                                    </div>\r\n                                </div>\r\n                           \r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </mat-card-content>\r\n            </mat-card>\r\n        </div>\r\n\r\n\r\n        <div *ngIf=\"(denomRequired == 'yes') && (chequewithdrawForm.get('transactionAmount').value > 0 || transAmt > 0)\" fxFlex=\"30%\">\r\n            <form #cdForm=\"ngForm\">\r\n        <mat-card class=\"border-align\" >  \r\n    <div fxLayout=\"row\" class=\"pH10 full-width\">\r\n        \r\n    <h4 class=\"title-Font\">Denomination</h4>\r\n    </div>\r\n    <div  class=\"pH10 full-width\" id=\"denominationDiv\">\r\n    <div class=\"paddingclass\" \r\n    fxLayoutAlign=\"center center\" *ngIf=\"chequewithdrawForm.value.transactionCurrency == 'INR'\">\r\n    <div fxFlex=\"20%\">\r\n    <p class=\"quantityClass text-small\">2000</p>\r\n    </div>\r\n    <div fxFlex=\"10%\">\r\n    <p class=\"operationTypeClass text-small\">x</p>\r\n    </div>\r\n    <div fxFlex=\"70%\">\r\n    <mat-card class=\"inputCard\">\r\n       <div>\r\n           <input class=\"full-width inputClass\" type=\"text\"\r\n               (keyup)=\"totalAmountValue(cdForm)\" (keypress)=\"omit_number($event)\"\r\n               matInput name=\"count2000\" ngModel #count2000>\r\n       </div>\r\n    </mat-card>\r\n    <div class=\"pl10\">\r\n       <mat-error *ngIf=\"denominationlimit && count2000.value > denominationLimit[2000]\">\r\n           Please enter <= {{denominationLimit[2000]}}\r\n       </mat-error>\r\n    </div>\r\n    </div>\r\n    </div>\r\n    <div  class=\"paddingclass\" \r\n    fxLayoutAlign=\"start center\" *ngIf=\"chequewithdrawForm.value.transactionCurrency == 'INR' || chequewithdrawForm.value.transactionCurrency == 'USD' || chequewithdrawForm.value.transactionCurrency == 'AED'\">\r\n    <div fxFlex=\"20%\">\r\n    <p class=\"quantityClass text-small\">500</p>\r\n    </div>\r\n    <div fxFlex=\"10%\">\r\n    <p class=\"operationTypeClass text-small\">x</p>\r\n    </div>\r\n    <div fxFlex=\"70%\">\r\n    <mat-card class=\"inputCard\">\r\n       <input class=\"full-width inputClass\" type=\"text\"\r\n           (keyup)=\"totalAmountValue(cdForm)\" (keypress)=\"omit_number($event)\"\r\n           matInput name=\"count500\" ngModel #count500>\r\n    </mat-card>\r\n    <div class=\"pl10\">\r\n       <mat-error *ngIf=\"denominationlimit && count500.value > denominationLimit[500]\">\r\n           Please enter <= {{denominationLimit[500]}}\r\n       </mat-error>\r\n    </div>\r\n    </div>\r\n    </div>\r\n    <div  class=\"paddingclass\" \r\n    fxLayoutAlign=\"start center\" *ngIf=\"chequewithdrawForm.value.transactionCurrency == 'INR'\">\r\n    <div fxFlex=\"20%\">\r\n    <p class=\"quantityClass text-small\">200</p>\r\n    </div>\r\n    <div fxFlex=\"10%\">\r\n    <p class=\"operationTypeClass text-small\">x</p>\r\n    </div>\r\n    <div fxFlex=\"70%\">\r\n    <mat-card class=\"inputCard\">\r\n       <input class=\"full-width inputClass\" type=\"text\"\r\n           (keyup)=\"totalAmountValue(cdForm)\" (keypress)=\"omit_number($event)\"\r\n           matInput name=\"count200\" ngModel #count200>\r\n    </mat-card>\r\n    <div class=\"pl10\">\r\n       <mat-error *ngIf=\"denominationlimit && count200.value > denominationLimit[200]\">\r\n           Please enter <= {{denominationLimit[200]}}\r\n       </mat-error>\r\n    </div>\r\n    </div>\r\n    </div>\r\n    <div  class=\"paddingclass\" \r\n    fxLayoutAlign=\"start center\" *ngIf=\"chequewithdrawForm.value.transactionCurrency == 'INR' || chequewithdrawForm.value.transactionCurrency == 'USD' || chequewithdrawForm.value.transactionCurrency == 'AED'\">\r\n    <div fxFlex=\"20%\">\r\n    <p class=\"quantityClass text-small\">100</p>\r\n    </div>\r\n    <div fxFlex=\"10%\">\r\n    <p class=\"operationTypeClass text-small\">x</p>\r\n    </div>\r\n    <div fxFlex=\"70%\">\r\n    <mat-card class=\"inputCard\">\r\n       <input class=\"full-width inputClass\" type=\"text\"\r\n           (keyup)=\"totalAmountValue(cdForm)\" (keypress)=\"omit_number($event)\"\r\n           matInput name=\"count100\" ngModel #count100>\r\n    </mat-card>\r\n    <div class=\"pl10\">\r\n       <mat-error *ngIf=\"denominationlimit && count100.value > denominationLimit[100]\">\r\n           Please enter <= {{denominationLimit[100]}}\r\n       </mat-error>\r\n    </div>\r\n    </div>\r\n    </div>\r\n    <div  class=\"paddingclass\" \r\n    fxLayoutAlign=\"start center\" *ngIf=\"chequewithdrawForm.value.transactionCurrency == 'INR' || chequewithdrawForm.value.transactionCurrency == 'USD'\">\r\n    <div fxFlex=\"20%\">\r\n    <p class=\"quantityClass text-small\">50</p>\r\n    </div>\r\n    <div fxFlex=\"10%\">\r\n    <p class=\"operationTypeClass text-small\">x</p>\r\n    </div>\r\n    <div fxFlex=\"70%\">\r\n    <mat-card class=\"inputCard\">\r\n       <input class=\"full-width inputClass\" type=\"text\"\r\n           (keyup)=\"totalAmountValue(cdForm)\" (keypress)=\"omit_number($event)\"\r\n           matInput name=\"count50\" ngModel #count50>\r\n    </mat-card>\r\n    <div class=\"pl10\">\r\n       <mat-error *ngIf=\"denominationlimit && count50.value > denominationLimit[50]\">\r\n           Please enter <= {{denominationLimit[50]}}\r\n       </mat-error>\r\n    </div>\r\n    </div>\r\n    </div>\r\n    <div  class=\"paddingclass\" \r\n    fxLayoutAlign=\"start center\" *ngIf=\"chequewithdrawForm.value.transactionCurrency == 'INR'\">\r\n    <div fxFlex=\"20%\">\r\n    <p class=\"quantityClass text-small\">20</p>\r\n    </div>\r\n    <div fxFlex=\"10%\">\r\n    <p class=\"operationTypeClass text-small\">x</p>\r\n    </div>\r\n    <div fxFlex=\"70%\">\r\n    <mat-card class=\"inputCard\">\r\n       <input class=\"full-width inputClass\" type=\"text\"\r\n           (keyup)=\"totalAmountValue(cdForm)\" (keypress)=\"omit_number($event)\"\r\n           matInput name=\"count20\" ngModel #count20>\r\n    </mat-card>\r\n    <div class=\"pl10\">\r\n       <mat-error *ngIf=\"denominationlimit && count20.value > denominationLimit[20]\">\r\n           Please enter <= {{denominationLimit[20]}}\r\n       </mat-error>\r\n    </div>\r\n    </div>\r\n    </div>\r\n    <div  class=\"paddingclass\" \r\n    fxLayoutAlign=\"start center\" *ngIf=\"chequewithdrawForm.value.transactionCurrency == 'INR'\">\r\n    <div fxFlex=\"20%\">\r\n    <p class=\"quantityClass text-small\">10</p>\r\n    </div>\r\n    <div fxFlex=\"10%\">\r\n    <p class=\"operationTypeClass text-small\">x</p>\r\n    </div>\r\n    <div fxFlex=\"70%\">\r\n    <mat-card class=\"inputCard\">\r\n       <input class=\"full-width inputClass\" type=\"text\"\r\n           (keyup)=\"totalAmountValue(cdForm)\" (keypress)=\"omit_number($event)\"\r\n           matInput name=\"count10\" ngModel #count10>\r\n    </mat-card>\r\n    <div class=\"pl10\">\r\n       <mat-error *ngIf=\"denominationlimit && count10.value > denominationLimit[10]\">\r\n           Please enter <= {{denominationLimit[10]}}\r\n       </mat-error>\r\n    </div>\r\n    </div>\r\n    </div>\r\n    <div class=\"paddingclass\" \r\n    fxLayoutAlign=\"start center\" *ngIf=\"chequewithdrawForm.value.transactionCurrency == 'INR' || chequewithdrawForm.value.transactionCurrency == 'USD' || chequewithdrawForm.value.transactionCurrency == 'AED'\">\r\n    <div fxFlex=\"20%\">\r\n    <p class=\"quantityClass text-small\">1</p>\r\n    </div>\r\n    <div fxFlex=\"10%\">\r\n    <p class=\"operationTypeClass text-small\">x</p>\r\n    </div>\r\n    <div fxFlex=\"70%\">\r\n    <mat-card class=\"inputCard\">\r\n    <input class=\"full-width inputClass\" type=\"text\"\r\n       (keyup)=\"totalAmountValue(cdForm)\" (keypress)=\"omit_number($event)\"\r\n       matInput name=\"count1\" ngModel #count10>\r\n    </mat-card>\r\n    </div>\r\n    </div>\r\n    </div>\r\n    <div fxLayout=\"row wrap\" class=\"pH10 full-width\">\r\n    <div fxFlex=\"53%\" fxFlex.xs=\"100%\">\r\n    <p class=\"totalAmount\">Total Amount</p>\r\n    <mat-card class=\"inputCard\">\r\n    <input class=\"full-width inputClass\"  [(ngModel)]=\"totalAmount\"\r\n       matInput name=\"totalAmount\"  readonly>\r\n    </mat-card>\r\n    <div class=\"pl10\" style=\"width: 150%;\">\r\n    <mat-error *ngIf=\"enableBtn1\">\r\n       Total amount should be equal to {{chequewithdrawForm.value.transactionAmount}}\r\n    </mat-error>\r\n    </div>\r\n    </div>\r\n    </div>\r\n           </mat-card>\r\n           </form>\r\n    </div>\r\n\r\n    </div>\r\n\r\n\r\n    <div>\r\n        <div fxLayout=\"row wrap\" class=\"flex-container stretch\" id=\"buttonDiv\">\r\n            <ng-container>\r\n                <div fxFlex=\"30%\" fxFlex.xs=\"100%\" class=\"paddingCls\">\r\n                    <button mat-flat-button *ngIf=\"phoneNumber\" class=\"buttonCancel full-width\"\r\n                        (click)=\"goToServiceScreens()\">CANCEL</button>\r\n                </div>\r\n                <div fxFlex=\"70%\" fxFlex.xs=\"100%\" class=\"paddingCls\" *ngIf=\"showAccountNum\">\r\n                    <button mat-flat-button class=\"buttonNext full-width\"\r\n                    [disabled]=\"!enableContinue\r\n                     ||!chequewithdrawForm.get('transactionCurrency').valid\r\n                     ||!chequewithdrawForm.get('accountNumber').valid\r\n                     ||!chequewithdrawForm.get('accountType').valid\r\n                     ||!chequewithdrawForm.get('accountCurrency').valid\r\n                     ||!chequewithdrawForm.get('transactionAmount').valid\r\n                     ||!chequewithdrawForm.get('chequeNumber').valid\r\n                     ||!chequewithdrawForm.get('totalChargeAmount').valid\r\n                     ||!chequewithdrawForm.get('totalTransactionAmount').valid\"\r\n                     \r\n                       (click)=\"onSaveofChequeWithdraw(chequewithdrawForm.value,ifQRvariable,cdForm)\">GENERATE TOKEN</button>\r\n                </div>\r\n                <div fxFlex=\"70%\" fxFlex.xs=\"100%\" class=\"paddingCls\" *ngIf=\"!showAccountNum\">\r\n                    <button mat-flat-button class=\"buttonNext full-width\"\r\n                    [disabled]=\"!enableContinue || !chequewithdrawForm.get('transactionAmount').valid\r\n                     ||!chequewithdrawForm.get('transactionCurrency').valid\r\n                     ||!chequewithdrawForm.get('accountNumber').valid\r\n                     ||!chequewithdrawForm.get('accountType').valid\r\n                     ||!chequewithdrawForm.get('accountCurrency').valid\r\n                     ||!chequewithdrawForm.get('transactionAmount').valid\r\n                     ||!chequewithdrawForm.get('chequeNumber').valid\r\n                     ||!chequewithdrawForm.get('totalChargeAmount').valid\r\n                     ||!chequewithdrawForm.get('totalTransactionAmount').valid\"\r\n                       (click)=\"getOTP(chequewithdrawForm.value,ifQRvariable,cdForm)\">CONTINUE</button>\r\n                </div>\r\n            </ng-container>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-details-information',\r\n  templateUrl: './details-information.component.html',\r\n  styleUrls: ['./details-information.component.scss']\r\n})\r\nexport class DetailsInformationComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>details-information works!</p>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl, FormBuilder, Validators  } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { DialogService } from 'app/shared/services/Dialog/dialog.service';\r\n\r\ninterface Testing {\r\n  value: string;\r\n  viewValue: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-loan-payment',\r\n  templateUrl: './loan-payment.component.html',\r\n  styleUrls: ['./loan-payment.component.scss']\r\n})\r\nexport class LoanPaymentComponent implements OnInit {\r\n  loanpaymentForm: FormGroup;\r\n  loanPayment : any = 'Loan Payment';\r\n\r\n  constructor(private router : Router,private formBuilder: FormBuilder, private dialogService : DialogService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.loanpaymentForm = this.formBuilder.group({\r\n      loanAccount:['', [Validators.required]],\r\n      currentArrears:['', [Validators.required]],\r\n      currentDue:['', [Validators.required]],\r\n      principalOutstanding:['', [Validators.required]],\r\n      payFromAccount:['', [Validators.required]],\r\n      holderName:['', [Validators.required]],\r\n      repaymentAmount:['', [Validators.required]], \r\n    });\r\n  }\r\n  goToServiceScreens(){\r\n    this.router.navigateByUrl('/others/kioskHome');\r\n  }\r\n  goToAuthenticate(){\r\n    this.dialogService.authenticationDialog();\r\n  }\r\n\r\n  testing: Testing[] = [\r\n    { value: 'Demo', viewValue: 'Demo 1' },\r\n    { value: 'Demo', viewValue: 'Demo 2' },\r\n    { value: 'Demo', viewValue: 'Demo 3' }\r\n  ];\r\n\r\n}\r\n","<div class=\"fullcard\">\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"center center\">\r\n        <div fxFlex=\"80%\">\r\n            <mat-card class=\"chequecard\">\r\n                <mat-card-title style=\"padding: 2%;\">\r\n                    <div fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n                        <div>\r\n                            <mat-icon class=\"backIcon\" (click)=\"goToServiceScreens()\">keyboard_backspace</mat-icon>\r\n                        </div> &nbsp;&nbsp;\r\n                        <div class=\"card-title\">Loan Payment</div>\r\n                    </div>\r\n                </mat-card-title>\r\n                <mat-card-content>\r\n                    <div class=\"full-width\" style=\"padding: 0% 3% 3% 2%;\">\r\n                        <!-- <form #loanpaymentForm=\"ngForm\"> -->\r\n                        <form [formGroup]=\"loanpaymentForm\">    \r\n                            <div fxLayout=\"column\" fxLayoutGap=\"5%\" fxLayoutAlign=\"space-between none\">\r\n                                <div>\r\n                                    <div fxLayout=\"row wrap\" class=\"flex-container stretch\">\r\n                                        <ng-container>\r\n                                            <div fxFlex=\"31%\" fxFlex.xs=\"100%\">\r\n                                                <mat-hint class=\"totalAmount\">Loan Account*</mat-hint>\r\n                                                <mat-card class=\"firstCard\">\r\n                                                    <mat-select formControlName=\"loanAccount\" class=\"full-width\" style=\"background-color: #f9fafb;\">\r\n                                                        <mat-option *ngFor=\"let test of testing\" [value]=\"test.value\">\r\n                                                            {{test.viewValue}}\r\n                                                        </mat-option>\r\n                                                    </mat-select>\r\n                                                </mat-card>\r\n                                            </div>\r\n                                            <div fxFlex=\"23%\" fxFlex.xs=\"100%\">\r\n                                                <mat-hint class=\"totalAmount\">Current Arrears*</mat-hint>\r\n                                                <mat-card class=\"loanCard\">\r\n                                                    <input matInput formControlName=\"currentArrears\" type=\"text\" class=\"full-width inputClass\"\r\n                                                        name=\"currentArrears\">\r\n                                                </mat-card>\r\n                                            </div>\r\n                                            <div fxFlex=\"23%\" fxFlex.xs=\"100%\">\r\n                                                <mat-hint class=\"totalAmount\">Current Due*</mat-hint>\r\n                                                <mat-card class=\"loanCard\">\r\n                                                    <input matInput formControlName=\"currentDue\" type=\"text\" class=\"full-width inputClass\"\r\n                                                        name=\"currentDue\">\r\n                                                </mat-card>\r\n                                            </div>\r\n                                            <div fxFlex=\"23%\" fxFlex.xs=\"100%\">\r\n                                                <mat-hint class=\"totalAmount\">Principal Outstanding* </mat-hint>\r\n                                                <mat-card class=\"loanCard\">\r\n                                                    <input matInput formControlName=\"principalOutstanding\" type=\"text\" class=\"full-width inputClass\"\r\n                                                        name=\"principalOutstanding\">\r\n                                                </mat-card>\r\n                                            </div>\r\n                                        </ng-container>\r\n                                    </div>\r\n                                </div>\r\n                                <div>\r\n                                    <span layout=\"row\">\r\n                                        <hr class=\"line\" flex />\r\n                                    </span>\r\n                                </div>\r\n                                <div>\r\n                                    <div fxLayout=\"row wrap\" class=\"flex-container stretch\">\r\n                                        <ng-container>\r\n                                            <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                                <mat-hint class=\"totalAmount\">Pay from Account*</mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <mat-select formControlName=\"payFromAccount\" class=\"full-width\" style=\"background-color: #f9fafb;\">\r\n                                                        <mat-option *ngFor=\"let test of testing\" [value]=\"test.value\">\r\n                                                            {{test.viewValue}}\r\n                                                        </mat-option>\r\n                                                    </mat-select>\r\n                                                </mat-card>\r\n                                                <mat-hint class=\"totalAmount\">Account Balance : $12,09,98</mat-hint>\r\n                                            </div>\r\n                                            <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                                <mat-hint class=\"totalAmount\">Holder Name* </mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <mat-select formControlName=\"holderName\" class=\"full-width\" style=\"background-color: #f9fafb;\">\r\n                                                        <mat-option *ngFor=\"let test of testing\" [value]=\"test.value\">\r\n                                                            {{test.viewValue}}\r\n                                                        </mat-option>\r\n                                                    </mat-select>\r\n                                                </mat-card>\r\n                                            </div>\r\n                                            <div fxFlex=\"34%\" fxFlex.xs=\"100%\">\r\n                                                <mat-hint class=\"totalAmount\">Repayment Amount* </mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <input matInput formControlName=\"repaymentAmount\" type=\"text\" class=\"full-width inputClass\"\r\n                                                        name=\"repaymentAmount\">\r\n                                                </mat-card>\r\n                                            </div>\r\n                                        </ng-container>\r\n                                    </div>\r\n                                </div>\r\n                                <div>\r\n                                    <div fxLayout=\"row wrap\" class=\"flex-container stretch\">\r\n                                        <ng-container>\r\n                                            <div fxFlex=\"30%\" fxFlex.xs=\"100%\" style=\"padding: 0% 1%;\">\r\n                                                <button mat-flat-button class=\"buttonCancel full-width\"\r\n                                                    (click)=\"goToServiceScreens()\">CANCEL</button>\r\n                                            </div>\r\n                                            <div fxFlex=\"70%\" fxFlex.xs=\"100%\" style=\"padding: 0% 2%;\">\r\n                                                <button mat-flat-button class=\"buttonNext full-width\"\r\n                                                [disabled]=\" !loanpaymentForm.get('loanAccount').valid\r\n                                                || !loanpaymentForm.get('currentArrears').valid\r\n                                                || !loanpaymentForm.get('currentDue').valid\r\n                                                || !loanpaymentForm.get('principalOutstanding').valid\r\n                                                || !loanpaymentForm.get('payFromAccount').valid\r\n                                                || !loanpaymentForm.get('holderName').valid\r\n                                                || !loanpaymentForm.get('repaymentAmount').valid \"\r\n                                                    (click)=\"goToAuthenticate()\">CONTINUE</button>\r\n                                            </div>\r\n                                        </ng-container>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </mat-card-content>\r\n            </mat-card>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-forex-service',\r\n  templateUrl: './forex-service.component.html',\r\n  styleUrls: ['./forex-service.component.scss']\r\n})\r\nexport class ForexServiceComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<!-- <p>forex-service works!</p> -->\r\n<app-details-information></app-details-information>","import { ChangeDetectionStrategy, Component, OnDestroy, OnInit } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { Router } from \"@angular/router\";\r\nimport { Location } from \"@angular/common\";\r\nimport { LocalStoreService } from \"app/shared/services/local-store.service\";\r\nimport { ApiService } from \"app/shared/services/api.service\";\r\nimport { DialogService } from \"app/shared/services/Dialog/dialog.service\";\r\nimport { Token } from \"@angular/compiler/src/ml_parser/lexer\";\r\nimport { otpModel } from \"app/shared/models/otp.model\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\r\nimport { OtpVerifyComponent } from \"../otp-verify/otp-verify.component\";\r\nimport { DataService } from 'app/shared/services/data.service';\r\n\r\n@Component({\r\n  selector: \"app-cheq-d\",\r\n  templateUrl: \"./cheq-d.component.html\",\r\n  styleUrls: [\"./cheq-d.component.scss\"],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class CheqDComponent implements OnInit, OnDestroy {\r\n  cheqDepositForm: FormGroup;\r\n  title = \"Cheque Deposit\";\r\n  custValidation: string;\r\n  Token= new TokenGenerationObj();\r\n  custPref = \"N\";\r\n  entityCode=\"ENTCD\";\r\n  bankCode = \"BNKC\" ;\r\n  tokenBranch = \"KN\" ;\r\n  qrData: any;\r\n  phoneNumber: string;\r\n  oTpModel = new otpModel();\r\n  appointmentId: any;\r\n  transBranch: string;\r\n  qrBranchCode: any;\r\n  ifQRvariable = false;\r\n  denomRequired: any = \"\";\r\n  denomCodeArray: any[] = [\r\n    { key: \"count2000\", value: 2000 },\r\n    { key: \"count500\", value: 500 },\r\n    { key: \"count200\", value: 200 },\r\n    { key: \"count100\", value: 100 },\r\n    { key: \"count50\", value: 50 },\r\n    { key: \"count20\", value: 20 },\r\n    { key: \"count10\", value: 10 },\r\n    { key: \"count1\", value: 1 },\r\n  ];\r\n  accountNum: string;\r\n  selectedAccountInfo: any;\r\n  custID: any;\r\n  productCode: \"CQD\";\r\n  tokenOrigin = \"Kiosk\";\r\n  accountBal: any;\r\n  cheqDepositResponse: any;\r\n  tokenNum: any;\r\n  estimatedTime: any;\r\n  enableContinue: boolean;\r\n  chequeDepositResponse: any;\r\n  chequedepositValues: any;\r\n  chequedepositype: any;\r\n  phonenum: any;\r\n  custAccountData: any;\r\n  accountNoList: any;\r\n  denominationdata: {};\r\n  transactiondata: any;\r\n  displayDenom: boolean=false;\r\n  appointmentDetails: any;\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private ls: LocalStoreService,\r\n    private apiService: ApiService,\r\n    private router: Router,\r\n    private dialogService: DialogService,\r\n    private dialog: MatDialog,\r\n    private snack: MatSnackBar,\r\n    private _location: Location,\r\n    private dataService:DataService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    localStorage.setItem('chq_page', this.title)\r\n    this.custValidation = localStorage.getItem(\"customerValidation\");\r\n    this.cheqDepositForm = this.formBuilder.group({\r\n      account: [],\r\n      transaction: [],\r\n      // denomination:[],\r\n      entityCode: [this.entityCode, [Validators.required]],\r\n      bankCode: [this.bankCode, [Validators.required]],\r\n      tokenBranch: [this.tokenBranch, [Validators.required]],\r\n      customerCategory: [this.custPref, [Validators.required]],\r\n      tokenNumber: [\"\", [Validators.required]],\r\n      productCode: [\"CQD\", Validators.required],\r\n      tokenOrigin: [\"Kiosk\", Validators.required],\r\n      estimatedWaitTime: [\"\", [Validators.required]],\r\n      narrative: [\"\", [Validators.required]],\r\n    });\r\n    console.log(\"Cash withdrawal\", this.cheqDepositForm);\r\n    this.qrData = JSON.parse(JSON.parse(localStorage.getItem(\"scannerData\")));\r\n    this.phoneNumber = localStorage.getItem(\"phonenumFromLogin\");\r\n    this.appointmentId = this.ls.getItem(\"TransactionType\");\r\n    this.transBranch = localStorage.getItem(\"TRANSACTIONBRANCH\");\r\n\r\n    this.dataService.gettransactionFormdata.subscribe(transaction=>{\r\n      if(Object.keys(transaction).length != 0  && transaction.constructor === Object){\r\n        console.log(\"Account component?\",transaction);\r\n        this.transactiondata=transaction;\r\n        if(this.transactiondata.transactionAmount){\r\n          this.displayDenom=true;\r\n        }\r\n      }\r\n \r\n    });\r\n    // this.dataService.getdenominationFormdata.subscribe(denomination=>{\r\n    //   if(denomination){\r\n    //     console.log(\"Account component?\",denomination);\r\n    //     this.denominationdata=denomination;\r\n    //   }\r\n \r\n    // })\r\n    this.dataService.getaccountFormdata.subscribe((data) => {\r\n      if (Object.keys(data).length != 0  && data.constructor === Object) {\r\n        console.log(\"Account component?\", data);\r\n        \r\n        this.appointmentDetails=data;\r\n        console.log(\"Account component?\", this.appointmentDetails.appointmentId);\r\n      }\r\n    })\r\n\r\n  }\r\n\r\n  \r\n  public redirectToHome(): void {\r\n     \r\n    this.dataService.removetransactionFormData(this.transactiondata);\r\n    this.dataService.removeaccountFormData(this.appointmentDetails);\r\n    // this.dataService.removedenominationFormData(this.denominationdata);\r\n    this.router.navigateByUrl('/others/kioskHome');\r\n  }\r\n  onSubmit(event) {\r\n    console.log(\"On submit form\", this.cheqDepositForm.value,event);\r\n    if(event=='showAccountNum'){\r\n      this.onSaveofchequeDeposit(this.cheqDepositForm.value,this.ifQRvariable, this.denominationdata)\r\n    }\r\n    if(event=='NotshowAccountNum'){\r\n      this.getOTP(this.cheqDepositForm.value,this.ifQRvariable,this.denominationdata);\r\n    }\r\n  }\r\n  onSaveofchequeDeposit(form, type, cdForm) {\r\n    console.log(form, type, cdForm);\r\n   \r\n    // this.dataService.getNavParam.subscribe(denomRequired=>{\r\n    //   if(denomRequired){\r\n    //     console.log(\"Account component?\",denomRequired);\r\n    //     this.denomRequired=denomRequired;\r\n    //   }\r\n \r\n    // })\r\n    this.Token.transactionBranch = this.transBranch;\r\n    this.Token.tokenBranch = \"KN\";\r\n    if(this.qrData){\r\n      if(this.qrData.transactionBranch){\r\n        this.apiService.fetchBranchInfoByBranchName(this.qrData.transactionBranch).subscribe(response=>{\r\n          this.qrBranchCode=response;\r\n          console.log(response)\r\n        })\r\n      }\r\n    }\r\n\r\n    // let denominationData: any = {};\r\n    // let denominationDataArray: any[] = [];\r\n    // if(this.denomRequired == 'yes'){\r\n    //   for (let i = 0; i < this.denomCodeArray.length; i++) {\r\n    //     if (cdForm.value[this.denomCodeArray[i].key]) {\r\n    //       denominationData.denominationKey = this.denomCodeArray[i].value;\r\n    //       denominationData.denominationValue = +cdForm.value[this.denomCodeArray[i].key];\r\n    //       denominationData.currency = this.cheqDepositForm.value.transactionCurrency;\r\n    //       denominationDataArray.push(denominationData);\r\n    //       console.log(denominationDataArray)\r\n    //       denominationData = {};\r\n    //     }\r\n    //   }\r\n    // }\r\n\r\n    if(this.appointmentDetails?.appointmentId){\r\n      console.log(this.appointmentDetails)\r\n      this.Token.customerId=this.appointmentDetails.customerId,\r\n      this.Token.accountNumber=this.appointmentDetails.accountNumber,\r\n      this.Token.accountType=this.appointmentDetails.accountType,\r\n      this.Token.accountCurrency=this.appointmentDetails.accountCurrency,\r\n      this.Token.accountBalance=this.appointmentDetails.accountBalance,\r\n      this.Token.accountBranch=this.appointmentDetails.accountBranch,\r\n      this.Token.holderName=this.appointmentDetails.holderName,\r\n    \r\n      this.Token.transactionCurrency=this.appointmentDetails.transactionCurrency,\r\n      this.Token.transactionAmount=this.appointmentDetails.transactionAmount;\r\n      this.Token.transactionId=this.appointmentDetails.transactionId,\r\n      this.Token.totalChargeAmount=this.appointmentDetails.totalChargeAmount,\r\n      this.Token.totalTransactionAmount=this.appointmentDetails.totalTransactionAmount,\r\n      this.Token.chequeType=form.transaction.chequeType,\r\n      this.Token.chequeNumber=form.transaction.chequeNumber,\r\n\r\n      this.Token.transactionBranch=this.transBranch,\r\n      this.Token.entityCode=this.entityCode,\r\n      this.Token.bankCode=this.bankCode,\r\n      this.Token.tokenBranch=this.tokenBranch,\r\n      this.Token.customerCategory=this.custPref,\r\n      this.Token.productCode='CQD',\r\n      this.Token.tokenOrigin=this.tokenOrigin,\r\n\r\n      this.Token.tokenNumber=\"\",\r\n      this.Token.estimatedWaitTime=\"\",\r\n      this.Token.exchangeRate=\"\",\r\n      this.Token.accountAmount=\"\",\r\n      this.Token.narrative=\"\",\r\n      this.Token.totalAmount=\"\"\r\n      // if(this.denomRequired == 'yes'){\r\n      //  this.Token.denomination=denominationDataArray;\r\n      //     }\r\n      \r\n     \r\n     // }\r\n     console.log(\"Not a qrvariable\",this.Token);\r\n     }\r\n   \r\n    // if(!this.ifQRvariable && this.appointmentDetails==null)\r\n    else{\r\n          console.log(\"Not a qrvariable\",this.Token);\r\n        \r\n         this.Token.customerId=form.account.customerId,\r\n         this.Token.accountNumber=form.account.accountNumber,\r\n         this.Token.accountType=form.account.accountType,\r\n         this.Token.accountCurrency=form.account.accountCurrency,\r\n         this.Token.accountBalance=form.account.accountBalance,\r\n         this.Token.accountBranch=form.account.accountBranch,\r\n         this.Token.holderName=form.account.holderName,\r\n       \r\n         this.Token.transactionCurrency=form.transaction.transactionCurrency\r\n         if(this.qrData){\r\n          this.Token.transactionAmount=form.transaction.transactionAmount;\r\n         }\r\n         else{\r\n          this.Token.transactionAmount=form.transaction.transactionAmount.replace(/,/g, \"\");\r\n         }         this.Token.transactionId=form.transaction.transactionId,\r\n         this.Token.totalChargeAmount=form.transaction.totalChargeAmount,\r\n         this.Token.totalTransactionAmount=form.transaction.totalTransactionAmount,\r\n         this.Token.chequeType=form.transaction.chequeType,\r\n         this.Token.chequeNumber=form.transaction.chequeNumber,\r\n  \r\n         this.Token.transactionBranch=this.transBranch,\r\n         this.Token.entityCode=this.entityCode,\r\n         this.Token.bankCode=this.bankCode,\r\n         this.Token.tokenBranch=this.tokenBranch,\r\n         this.Token.customerCategory=this.custPref,\r\n         this.Token.productCode='CQD',\r\n         this.Token.tokenOrigin=this.tokenOrigin,\r\n  \r\n         this.Token.tokenNumber=\"\",\r\n         this.Token.estimatedWaitTime=\"\",\r\n         this.Token.exchangeRate=\"\",\r\n         this.Token.accountAmount=\"\",\r\n         this.Token.narrative=\"\",\r\n         this.Token.totalAmount=\"\"\r\n\r\n        //  if(this.denomRequired == 'yes'){\r\n        //   this.Token.denomination=denominationDataArray;\r\n        //      }\r\n        \r\n      }\r\n    // else {\r\n    //   this.Token.customerId=form.account.customerId,\r\n    //      this.Token.accountNumber=form.account.accountNumber,\r\n    //      this.Token.accountType=form.account.accountType,\r\n    //      this.Token.accountCurrency=form.account.accountCurrency,\r\n    //      this.Token.accountBalance=form.account.accountBalance,\r\n    //      this.Token.accountBranch=form.account.accountBranch,\r\n    //      this.Token.holderName=form.account.holderName,\r\n       \r\n    //      this.Token.transactionCurrency=form.transaction.transactionCurrency,\r\n    //      this.Token.transactionAmount=form.transaction.transactionAmount.replace(/,/g, \"\");\r\n    //      this.Token.transactionId=form.transaction.transactionId,\r\n    //      this.Token.totalChargeAmount=form.transaction.totalChargeAmount,\r\n    //      this.Token.totalTransactionAmount=form.transaction.totalTransactionAmount,\r\n    //      this.Token.chequeType=form.transaction.chequeType,\r\n    //      this.Token.chequeNumber=form.transaction.chequeNumber,\r\n  \r\n    //      this.Token.transactionBranch=this.transBranch,\r\n    //      this.Token.entityCode=this.entityCode,\r\n    //      this.Token.bankCode=this.bankCode,\r\n    //      this.Token.tokenBranch=this.tokenBranch,\r\n    //      this.Token.customerCategory=this.custPref,\r\n    //      this.Token.productCode='CQD',\r\n    //      this.Token.tokenOrigin=this.tokenOrigin,\r\n  \r\n    //      this.Token.tokenNumber=\"\",\r\n    //      this.Token.estimatedWaitTime=\"\",\r\n    //      this.Token.exchangeRate=\"\",\r\n    //      this.Token.accountAmount=\"\",\r\n    //      this.Token.narrative=\"\",\r\n    //      this.Token.totalAmount=\"\"\r\n\r\n    //      if(this.denomRequired == 'yes'){\r\n    //       this.Token.denomination=denominationDataArray;\r\n    //          }\r\n    //   // if(this.qrData){\r\n    //   //   if(this.qrData.transactionBranch){\r\n    //   //     form.tokenBranch = this.qrBranchCode.transactionBranch;\r\n    //   //   }\r\n    //   // }\r\n      \r\n    //   // form.accountBalance = this.accountBal;\r\n    // }\r\n    if(this.appointmentId && this.appointmentId.data){\r\n      form.transactionId = this.appointmentId.data.transactionId;\r\n      form.transactionStatus = this.appointmentId.data.transactionStatus;\r\n    }\r\n\r\n    this.apiService.saveofCashDeposit(this.Token).subscribe(cheqWithdrawResp=>{\r\n      console.log( \"Response Success, Data Saved\", cheqWithdrawResp);\r\n      this.cheqDepositResponse = cheqWithdrawResp;\r\n      this.tokenNum = this.cheqDepositResponse.tokenNumber;\r\n      this.estimatedTime = this.cheqDepositResponse.estimatedWaitTime;\r\n      localStorage.setItem(\"tokenNumer\",this.tokenNum);\r\n      localStorage.setItem(\"estimatedTiming\",this.estimatedTime);\r\n      this.enableContinue=false;\r\n      if(this.cheqDepositResponse){\r\n      this.dialogService.tokenGenerationDialog();\r\n      }\r\n    });\r\n  \r\n  }\r\n    getOTP(formData, type, cdForm) {\r\n      this.phonenum=this.ls.getItem('phonenumFromLogin');\r\n      this.chequedepositValues = formData;\r\n      this.chequedepositype = type;\r\n      this.cheqDepositForm = cdForm;\r\n      this.oTpModel.source = \"customer\";\r\n      this.oTpModel.source_key = \"mobile\";\r\n      this.oTpModel.source_value = this.phonenum;\r\n      this.oTpModel.isMobileLogin = false;\r\n      let amount = 50000;\r\n      let transamountwithoutcomma = this.chequedepositValues.transaction.transactionAmount.replace(\r\n        /,/g,\r\n        \"\"\r\n      );\r\n      console.log(transamountwithoutcomma);\r\n      if (transamountwithoutcomma >= amount) {\r\n        this.apiService.getOtp(this.oTpModel).subscribe((otpResp) => {\r\n          if (otpResp) {\r\n            this.openDialogOTP(this.phonenum);\r\n            this.snack.open(\r\n              \"An OTP has been sent to the Registered Mobile Number.\",\r\n              \"\",\r\n              {\r\n                duration: 4000,\r\n                verticalPosition: \"top\",\r\n                horizontalPosition: \"right\",\r\n              }\r\n            );\r\n          }\r\n        });\r\n      } else {\r\n        this.getOTPforSave(\r\n          this.chequedepositValues,\r\n          this.chequedepositype,\r\n          this.cheqDepositForm\r\n        );\r\n      }\r\n    }\r\n    openDialogOTP(numbr) {\r\n      const dialogRef = this.dialog.open(OtpVerifyComponent, {\r\n        data: { number: numbr, type: \"numbr\" },\r\n        disableClose: true,\r\n      });\r\n      dialogRef.afterClosed().subscribe((submit) => {\r\n        if (submit) {\r\n          this.getOTPforSave(\r\n            this.chequedepositValues,\r\n            this.chequedepositype,\r\n            this.cheqDepositForm\r\n          );\r\n        }\r\n      });\r\n    }\r\n   \r\n    getOTPforSave(formData,type,cdForm){\r\n      console.log(formData);\r\n      // let denominationData: any = {};\r\n      //     let denominationDataArray: any[] = [];\r\n      //     if(this.denomRequired == 'yes'){\r\n      //     for (let i = 0; i < this.denomCodeArray.length; i++) {\r\n      //       if (cdForm.value[this.denomCodeArray[i].key]) {\r\n      //         // denominationData.transactionId = this.cashdepositFor;\r\n      //         denominationData.denominationKey = this.denomCodeArray[i].value;\r\n      //         denominationData.denominationValue = +cdForm.value[this.denomCodeArray[i].key];\r\n      //         denominationData.currency = this.cheqDepositForm.value.transactionCurrency;\r\n      //         // denominationData.amountAvailiable = 15200 - (cdForm.value[this.denomCodeArray[i].key] * this.denomCodeArray[i].value);\r\n      //         denominationDataArray.push(denominationData);\r\n      //         console.log(denominationDataArray)\r\n      //         denominationData = {};\r\n      //       }\r\n      //     }\r\n      //   }\r\n        console.log(this.custValidation)\r\n       if(this.custValidation == \"New Customer\"){\r\n        this.Token.customerId=formData.account.customerId,\r\n         this.Token.accountNumber=formData.account.accountNumber,\r\n         this.Token.accountType=formData.account.accountType,\r\n         this.Token.accountCurrency=formData.account.accountCurrency,\r\n         this.Token.accountBalance=formData.account.accountBalance,\r\n         this.Token.accountBranch=formData.account.accountBranch,\r\n         this.Token.holderName=formData.account.holderName,\r\n       \r\n         this.Token.transactionCurrency=formData.transaction.transactionCurrency,\r\n         this.Token.transactionAmount=formData.transaction.transactionAmount.replace(/,/g, \"\");\r\n         this.Token.transactionId=formData.transaction.transactionId,\r\n         this.Token.totalChargeAmount=formData.transaction.totalChargeAmount,\r\n         this.Token.totalTransactionAmount=formData.transaction.totalTransactionAmount,\r\n         this.Token.chequeType=formData.transaction.chequeType,\r\n         this.Token.chequeNumber=formData.transaction.chequeNumber,\r\n  \r\n         this.Token.transactionBranch=this.transBranch,\r\n         this.Token.entityCode=this.entityCode,\r\n         this.Token.bankCode=this.bankCode,\r\n         this.Token.tokenBranch=this.tokenBranch,\r\n         this.Token.customerCategory=this.custPref,\r\n         this.Token.productCode='CQD',\r\n         this.Token.tokenOrigin=this.tokenOrigin,\r\n  \r\n         this.Token.tokenNumber=\"\",\r\n         this.Token.estimatedWaitTime=\"\",\r\n         this.Token.exchangeRate=\"\",\r\n         this.Token.accountAmount=\"\",\r\n         this.Token.narrative=\"\",\r\n        //  this.Token.denomination=[],\r\n         this.Token.totalAmount=\"\"\r\n        //  if(this.denomRequired == 'yes'){\r\n        //   this.Token.denomination=denominationDataArray;\r\n        //      }\r\n         \r\n        \r\n       \r\n      \r\n      }\r\n      else{\r\n        console.log(\"Not a new customer\");\r\n       \r\n        this.Token.customerId=formData.account.customerId,\r\n         this.Token.accountNumber=formData.account.accountNumber,\r\n         this.Token.accountType=formData.account.accountType,\r\n         this.Token.accountCurrency=formData.account.accountCurrency,\r\n         this.Token.accountBalance=formData.account.accountBalance,\r\n         this.Token.accountBranch=formData.account.accountBranch,\r\n         this.Token.holderName=formData.account.holderName,\r\n       \r\n         this.Token.transactionCurrency=formData.transaction.transactionCurrency,\r\n         this.Token.transactionAmount=formData.transaction.transactionAmount.replace(/,/g, \"\");\r\n         this.Token.transactionId=formData.transaction.transactionId,\r\n         this.Token.totalChargeAmount=formData.transaction.totalChargeAmount,\r\n         this.Token.totalTransactionAmount=formData.transaction.totalTransactionAmount,\r\n         this.Token.chequeType=formData.transaction.chequeType,\r\n         this.Token.chequeNumber=formData.transaction.chequeNumber,\r\n  \r\n         this.Token.transactionBranch=this.transBranch,\r\n         this.Token.entityCode=this.entityCode,\r\n         this.Token.bankCode=this.bankCode,\r\n         this.Token.tokenBranch=this.tokenBranch,\r\n         this.Token.customerCategory=this.custPref,\r\n         this.Token.productCode='CQW',\r\n         this.Token.tokenOrigin=this.tokenOrigin,\r\n  \r\n         this.Token.tokenNumber=\"\",\r\n         this.Token.estimatedWaitTime=\"\",\r\n         this.Token.exchangeRate=\"\",\r\n         this.Token.accountAmount=\"\",\r\n         this.Token.narrative=\"\",\r\n         this.Token.totalAmount=\"\"\r\n        //  if(this.denomRequired == 'yes'){\r\n        //   this.Token.denomination=denominationDataArray;\r\n        //      }\r\n             console.log(this.Token);\r\n      }\r\n       \r\n      if(this.appointmentId && this.appointmentId.data){\r\n        this.Token.transactionId = this.appointmentId.data.transactionId;\r\n        this.Token.transactionStatus = this.appointmentId.data.transactionStatus;\r\n      }\r\n      \r\n     \r\n         \r\n      \r\n    \r\n     \r\n    \r\n    \r\n          console.log(\"before api call :: \",this.Token);\r\n          this.apiService.saveofCashDeposit(this.Token).subscribe((cashDepositResp) => {\r\n            console.log(\"Response Success\", cashDepositResp);\r\n            this.cheqDepositResponse = cashDepositResp;\r\n            this.tokenNum = this.cheqDepositResponse.tokenNumber;\r\n            this.estimatedTime = this.cheqDepositResponse.estimatedWaitTime;\r\n            localStorage.setItem(\"tokenNumer\", this.tokenNum);\r\n            localStorage.setItem(\"estimatedTiming\", this.estimatedTime);\r\n            this.enableContinue = false;\r\n            if (this.cheqDepositResponse) {\r\n              this.dialogService.tokenGenerationDialog();\r\n            }\r\n          });\r\n       }\r\n\r\n  ngOnDestroy(): void {\r\n    localStorage.removeItem('chq_page');\r\n  }\r\n}\r\n\r\nexport class TokenGenerationObj{\r\n        transactionId:any;\r\n        customerId:any;\r\n        accountNumber:any;\r\n        accountType:any;\r\n        holderName:any;\r\n        accountCurrency:any;\r\n        transactionCurrency:any;\r\n        transactionAmount:any;\r\n        accountBalance:any;\r\n        productCode:any;\r\n        tokenOrigin:any;\r\n        exchangeRate:any;\r\n        accountAmount:any;\r\n        totalChargeAmount:any;\r\n        totalTransactionAmount:any;\r\n        narrative:any;\r\n        // denomination:any[];\r\n        totalAmount:any;\r\n        entityCode:any;\r\n        bankCode:any;\r\n        tokenBranch:any;\r\n        customerCategory:any;\r\n        tokenNumber:any;\r\n        estimatedWaitTime:any;\r\n        accountBranch:any;\r\n        transactionBranch:any;\r\n        transactionStatus:any;\r\n        chequeType:any;\r\n        chequeNumber:any;\r\n        appointmentId:any;\r\n\r\n}","<app-header [title]=\"title\"> </app-header>\r\n\r\n<form *ngIf=\"cheqDepositForm\" [formGroup]=\"cheqDepositForm\">\r\n  <div fxLayout=\"row\">\r\n    <mat-card fxFlex=\"100%\" style=\"margin-top: -3%;height: 70%;\">\r\n        <app-account-information-form formControlName=\"account\"></app-account-information-form>\r\n        <app-transaction-information-form formControlName=\"transaction\"></app-transaction-information-form>\r\n    </mat-card>\r\n    <!-- <div *ngIf=\"displayDenom\" style=\"margin-top: -4%;\">\r\n        <app-denomination-info formControlName=\"denomination\"></app-denomination-info>\r\n    </div> -->\r\n  </div>\r\n  <div  style=\"margin-top: -0.5%;\">\r\n  <app-footer\r\n    saveText=\"Continue\"\r\n    (save)=\"onSubmit($event)\"\r\n    (cancel)=\"redirectToHome()\"\r\n    (exit)=\"back()\"\r\n    [cancelDisabled]=\"false\"\r\n  >\r\n  </app-footer>\r\n  </div>\r\n</form>\r\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\r\nimport { DialogService } from \"app/shared/services/Dialog/dialog.service\";\r\n\r\n@Component({\r\n  selector: \"app-footer\",\r\n  templateUrl: \"./footer.component.html\",\r\n  styleUrls: [\"./footer.component.scss\"],\r\n})\r\nexport class FooterComponent implements OnInit {\r\n  showAccountNum: boolean = true;\r\n  @Input() public title: string = \"Form\";\r\n  @Input() public saveText = \"Continue\";\r\n  @Input() public cancelText = \"Cancel\";\r\n  @Input() public cancelDisabled = false;\r\n  @Input() public saveDisabled = false;\r\n  @Input() public saving = false;\r\n\r\n  @Output() public cancel = new EventEmitter<void>();\r\n  @Output() public save = new EventEmitter<void>();\r\n  @Output() public exit = new EventEmitter<void>();\r\n  custNameFromLogin: string;\r\n  custValidation: string;\r\n\r\n  constructor(private dialogService: DialogService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.custValidation = localStorage.getItem(\"customerValidation\");\r\n    this.custNameFromLogin = localStorage.getItem(\"FromLogin\");\r\n    console.log(this.custValidation,this.custNameFromLogin);\r\n    if (this.custValidation == \"New Customer\") {\r\n      this.showAccountNum = false;\r\n    }\r\n    if (this.custNameFromLogin != null) {\r\n      this.showAccountNum = false;\r\n    }\r\n  }\r\n  clickExit() {\r\n    this.dialogService.clickExit();\r\n  }\r\n}\r\n","<div\r\n  fxLayout=\"row\"\r\n  class=\"footer_btn_wrapper\"\r\n  fxLayoutAlign=\"start center\"\r\n  fxLayoutGap=\"16px\"\r\n>\r\n  <button\r\n    *ngIf=\"(this.custValidation != null || this.custNameFromLogin != null)\"\r\n    class=\"backBtn\"\r\n    mat-button\r\n    [disabled]=\"cancelDisabled\"\r\n    (click)=\"cancel.emit()\"\r\n  >\r\n    Back\r\n  </button>\r\n  <!-- <button  mat-raised-button [disabled]=\"saveDisabled\" (click)=\"save.emit()\">\r\n            {{ saveText }}\r\n        </button> -->\r\n  <button\r\n    mat-flat-button\r\n    class=\"continueBtn\"\r\n    [disabled]=\"saveDisabled\"\r\n    (click)=\"save.emit('showAccountNum')\"\r\n    *ngIf=\"showAccountNum\"\r\n  >\r\n    {{ saveText }}\r\n  </button>\r\n  <button\r\n    mat-flat-button\r\n    class=\"continueBtn\"\r\n    [disabled]=\"saveDisabled\"\r\n    *ngIf=\"!showAccountNum\"\r\n    (click)=\"save.emit('NotshowAccountNum')\"\r\n  >\r\n    {{ saveText }}\r\n  </button>\r\n  <button class=\"exitBtn\" mat-button (click)=\"clickExit()\">Exit</button>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { Router } from '@angular/router';\r\nimport { OcrScanPageComponent } from '../ocr-scan-page/ocr-scan-page.component';\r\n\r\n@Component({\r\n  selector: 'app-capture-cheque-details',\r\n  templateUrl: './capture-cheque-details.component.html',\r\n  styleUrls: ['./capture-cheque-details.component.scss']\r\n})\r\nexport class CaptureChequeDetailsComponent implements OnInit {\r\n\r\n  constructor(private dialog: MatDialog,public dialogRef: MatDialogRef<CaptureChequeDetailsComponent>,private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  scanChequeFront(e){\r\n    console.log(\"front click\");\r\n    let dialogRef = this.dialog.open(OcrScanPageComponent, {\r\n      width: '60%',\r\n      height:'65%',\r\n    });\r\n    this.router.navigateByUrl('/others/cheq-deposit');\r\n  }\r\n\r\n  scanChequeBack(e){\r\n    console.log(\"back click\");\r\n  }\r\n\r\n  back(){\r\n    this.dialogRef.close();\r\n    this.router.navigateByUrl('/others/cheq-deposit');\r\n  }\r\n}\r\n","<div class=\"section\">\r\n    <div fxLayout=\"row\"  fxLayoutAlign=\"start\" fxLayoutGap=\"16px\">\r\n        <mat-icon (click)=\"back()\" style=\"cursor: pointer;\">arrow_back</mat-icon><h1 style=\"font-weight: bold;\">Take a Photo of the cheque</h1>\r\n    </div>\r\n    <div>\r\n        <p>It is a long established fact that a reader will be distracted by the readable content of a page <br>\r\n           when looking at its layout.\r\n        </p>\r\n    </div>\r\n    <div class=\"row\">\r\n        <div class=\"column\" (click)=\"scanChequeFront($event)\">\r\n          <div class=\"card\"><div class=\"card1\"><img src=\"assets/images/imgCap.svg\" alt=\"\"></div>Front</div>\r\n        </div>\r\n        <div class=\"column\" (click)=\"scanChequeBack($event)\">\r\n          <div class=\"card\"><div class=\"card1\"><img src=\"assets/images/imgCap.svg\" alt=\"\"></div>back</div>\r\n        </div>\r\n    </div>\r\n    \r\n</div>","import { Country } from '@angular-material-extensions/select-country';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl, FormBuilder, Validators  } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { DialogService } from 'app/shared/services/Dialog/dialog.service';\r\n\r\ninterface Testing {\r\n  value: string;\r\n  viewValue: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-forex-transaction',\r\n  templateUrl: './forex-transaction.component.html',\r\n  styleUrls: ['./forex-transaction.component.scss']\r\n})\r\nexport class ForexTransactionComponent implements OnInit {\r\n  forexForm: FormGroup;\r\n  countryFormControl = new FormControl();\r\n  defaultValue: Country = {\r\n    name: 'Deutschland',\r\n    alpha2Code: 'DE',\r\n    alpha3Code: 'DEU',\r\n    numericCode: '276',\r\n    callingCode: '+49'\r\n  };\r\n  forexTransaction : any = 'Forex Transaction';\r\n  constructor(private router : Router, private formBuilder: FormBuilder,private dialogService : DialogService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.forexForm = this.formBuilder.group({\r\n      accountNumber:['', [Validators.required]],\r\n      holderName:['', [Validators.required]],\r\n      fxCurrency:[''],\r\n      fxAmount:['', [Validators.required]],\r\n      negotiatedRate:['', [Validators.required]],\r\n      country: [\r\n        {\r\n          value: {\r\n            name: 'Deutschland',\r\n            alpha2Code: 'DE',\r\n            alpha3Code: 'DEU',\r\n            numericCode: '276',\r\n            callingCode: '+49'\r\n          },\r\n          disabled: false\r\n        }\r\n      ]\r\n    });\r\n\r\n    this.forexForm\r\n      .get('country')\r\n      .valueChanges.subscribe((country) =>\r\n      console.log(\r\n        'this.countryFormGroup.get(\\'country\\').valueChanges',\r\n        country\r\n      )\r\n    );\r\n\r\n    this.countryFormControl.valueChanges.subscribe((country) =>\r\n      console.log('this.countryFormControl.valueChanges', country)\r\n    );\r\n\r\n  }\r\n  onCountrySelected($event: Country): void {\r\n    console.log($event);\r\n  }\r\n  goToServiceScreens(){\r\n    this.router.navigateByUrl('/others/kioskHome');\r\n  }\r\n  goToToken(){\r\n     this.dialogService.tokenGenerationDialog();\r\n  }\r\n\r\n  testing: Testing[] = [\r\n    { value: 'Demo', viewValue: 'Demo 1' },\r\n    { value: 'Demo', viewValue: 'Demo 2' },\r\n    { value: 'Demo', viewValue: 'Demo 3' }\r\n  ];\r\n\r\n}\r\n","<div class=\"fullcard\">\r\n  <div fxLayout=\"row\" fxLayoutAlign=\"center center\">\r\n    <div fxFlex=\"80%\">\r\n      <mat-card class=\"chequecard\">\r\n        <mat-card-title style=\"padding: 2%;\">\r\n          <div fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n            <div>\r\n              <mat-icon class=\"backIcon\" (click)=\"goToServiceScreens()\">keyboard_backspace</mat-icon>\r\n            </div> &nbsp;&nbsp;\r\n            <div class=\"card-title\">Forex Transaction</div>\r\n          </div>\r\n        </mat-card-title>\r\n        <mat-card-content>\r\n          <div class=\"full-width\" style=\"padding: 0% 0% 3% 2%;\">\r\n            <!-- <form #forexForm=\"ngForm\"> -->\r\n              <form [formGroup]=\"forexForm\">\r\n              <div fxLayout=\"column\" fxLayoutGap=\"5%\" fxLayoutAlign=\"space-between none\">\r\n                <div>\r\n                  <div fxLayout=\"row wrap\" class=\"flex-container stretch\">\r\n                    <ng-container>\r\n                      <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                        <mat-hint class=\"totalAmount\">Account Number*</mat-hint>\r\n                        <mat-card class=\"inputCard\">\r\n                          <mat-select formControlName=\"accountNumber\" class=\"full-width\" style=\"background-color: #f9fafb;\">\r\n                            <mat-option *ngFor=\"let test of testing\" [value]=\"test.value\">\r\n                              {{test.viewValue}}\r\n                            </mat-option>\r\n                          </mat-select>\r\n                        </mat-card>\r\n                        <mat-hint class=\"totalAmount\">Account Balance : $12,09470</mat-hint>\r\n                      </div>\r\n                      <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                        <mat-hint class=\"totalAmount\">Holder Name*</mat-hint>\r\n                        <mat-card class=\"inputCard\">\r\n                          <mat-select formControlName=\"holderName\" class=\"full-width\" style=\"background-color: #f9fafb;\">\r\n                            <mat-option *ngFor=\"let test of testing\" [value]=\"test.value\">\r\n                              {{test.viewValue}}\r\n                            </mat-option>\r\n                          </mat-select>\r\n                        </mat-card>\r\n                      </div>\r\n                      <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                        <mat-hint class=\"totalAmount\"> Transaction Type*</mat-hint>\r\n                        <div class=\"radioDiv\">\r\n                          <mat-radio-group name=\"transactionType\">\r\n                            <mat-radio-button value=\"buy\" checked=\"true\">Buy</mat-radio-button> &nbsp; &nbsp;\r\n                            <mat-radio-button value=\"sell\">Sell</mat-radio-button>\r\n                          </mat-radio-group>\r\n                        </div>\r\n                      </div>\r\n                    </ng-container>\r\n                  </div>\r\n                </div>\r\n                <div>\r\n                  <span layout=\"row\">\r\n                    <hr class=\"line\" flex />\r\n                  </span>\r\n                </div>\r\n                <div>\r\n                  <div fxLayout=\"row wrap\" class=\"flex-container stretch\">\r\n                    <ng-container>\r\n                      <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                        <mat-hint class=\"totalAmount\">FX Currency*</mat-hint>\r\n                        <mat-card class=\"inputCard\" style=\"padding: 0% 6%;\">\r\n                          <mat-select-country formControlName=\"fxCurrency\" class=\"full-width fxCurrencyClass\" label=\"\" appearance=\"none\"\r\n                            [value]=\"defaultValue\" (onCountrySelected)=\"onCountrySelected($event)\">\r\n                          </mat-select-country>\r\n                        </mat-card>\r\n                      </div>\r\n                      <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                        <mat-hint class=\"totalAmount\"> FX Amount* </mat-hint>\r\n                        <mat-card class=\"inputCard\">\r\n                          <input matInput formControlName=\"fxAmount\" type=\"text\" class=\"full-width inputClass\" name=\"fxAmount\">\r\n                        </mat-card>\r\n                      </div>\r\n                      <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                        <mat-hint class=\"totalAmount\">Negotiated Rate*</mat-hint>\r\n                        <mat-card class=\"inputCard\">\r\n                          <input matInput formControlName=\"negotiatedRate\" class=\"full-width inputClass\" type=\"text\" name=\"accountNumber\">\r\n                        </mat-card>\r\n                        <mat-hint class=\"totalAmount\">Exchange Rate : 0.89</mat-hint>\r\n                      </div>\r\n                    </ng-container>\r\n                  </div>\r\n                </div>\r\n                <div>\r\n                  <div fxLayout=\"row wrap\" class=\"flex-container stretch\">\r\n                    <ng-container>\r\n                      <div fxFlex=\"30%\" fxFlex.xs=\"100%\" style=\"padding: 0% 1%;\">\r\n                        <button mat-flat-button class=\"buttonCancel full-width\"\r\n                          (click)=\"goToServiceScreens()\">CANCEL</button>\r\n                      </div>\r\n                      <div fxFlex=\"70%\" fxFlex.xs=\"100%\" style=\"padding: 0% 2%;\">\r\n                        <button mat-flat-button class=\"buttonNext full-width\"\r\n                        [disabled]=\" !forexForm.get('accountNumber').valid\r\n                        || !forexForm.get('holderName').valid\r\n                        || !forexForm.get('fxCurrency').valid\r\n                        || !forexForm.get('fxAmount').valid\r\n                        || !forexForm.get('negotiatedRate').valid \"                        \r\n                          (click)=\"goToToken()\">CONTINUE</button>\r\n                      </div>\r\n                    </ng-container>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </mat-card-content>\r\n      </mat-card>\r\n    </div>\r\n  </div>\r\n</div>","import {\r\n  Component,\r\n  forwardRef,\r\n  OnDestroy,\r\n  ChangeDetectionStrategy,\r\n  OnInit,\r\n  ChangeDetectorRef,\r\n  ElementRef,\r\n  Renderer2,\r\n} from '@angular/core';\r\nimport {\r\n  ControlValueAccessor,\r\n  NG_VALUE_ACCESSOR,\r\n  FormBuilder,\r\n  FormGroup,\r\n  Validators,\r\n  FormControl,\r\n  NG_VALIDATORS,\r\n} from '@angular/forms';\r\nimport { Subscription } from 'rxjs';\r\nimport { CustomValidators } from 'ngx-custom-validators';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { DialogService } from 'app/shared/services/Dialog/dialog.service';\r\nimport { otpModel } from 'app/shared/models/otp.model';\r\nimport { TokenObjects } from 'app/shared/models/tokenObjects';\r\nimport { getCurrencySymbol } from '@angular/common';\r\nimport { DataService } from 'app/shared/services/data.service';\r\n\r\n@Component({\r\n  selector: 'app-account-information-form',\r\n  templateUrl: './account-information-form.component.html',\r\n  styleUrls: ['./account-information-form.component.scss'],\r\n  providers: [\r\n    {\r\n      provide: NG_VALUE_ACCESSOR,\r\n      useExisting: forwardRef(() => AccountInformationFormComponent),\r\n      multi: true,\r\n    },\r\n    {\r\n      provide: NG_VALIDATORS,\r\n      useExisting: forwardRef(() => AccountInformationFormComponent),\r\n      multi: true,\r\n    },\r\n  ],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class AccountInformationFormComponent implements OnInit {\r\n  cashWithdrawal: any = 'Cash Withdrawal';\r\n  operation: string;\r\n  ifQRvariable = false;\r\n  index: string[];\r\n  cashWithdrawResponse: any;\r\n  productCode = 'CHW';\r\n  tokenOrigin = 'Kiosk';\r\n  custPref = 'N';\r\n  entityCode = 'ENTCD';\r\n  bankCode = 'BNKC';\r\n  tokenBranch = '1234';\r\n  accountNum: string;\r\n  accountBal: any;\r\n  phoneNumber: string;\r\n  errorStatus: number;\r\n  custAccountData: any;\r\n  countryValues: any;\r\n  accounttypeArray = [];\r\n  idList = [];\r\n  noList: any[];\r\n  accNum: any;\r\n  totalAmount: any;\r\n  transamount: any;\r\n  a: any;\r\n  tokenObjects = new TokenObjects();\r\n  accNumber: any;\r\n  appointmentId: any;\r\n  tokResponse: any;\r\n  tokenNum: any;\r\n  estimatedTime: any;\r\n  transAmt: any;\r\n  balance: string;\r\n  enableContinue: boolean = true;\r\n  isedit: boolean = true;\r\n  accountCurrency1: any;\r\n  curr: string;\r\n  transAmount: string;\r\n  currencyImage: any = '';\r\n  custID: any;\r\n  qrData: any;\r\n  customerID: any;\r\n  selected: string;\r\n  userName: string;\r\n  branchNameFromLogin: string;\r\n  branchName: string;\r\n  arrayAccountBranch: any;\r\n  trasactionBranches: any;\r\n  branchData: any;\r\n  branch: any;\r\n  resultStatus: any;\r\n  // accountNoList[]: any[];\r\n  accountNoList = [];\r\n  selectedAccountInfo: any;\r\n  showAccountNum: boolean = true;\r\n  showAccoutType: boolean = true;\r\n  custValidation: string;\r\n  accountNumber: string;\r\n  custmerID: any;\r\n  phonenum: any;\r\n  oTpModel = new otpModel();\r\n  cashwithDrwValues: any;\r\n  cashwithDrwform: any;\r\n  cashwithDrwType: any;\r\n  enableBtn: boolean = true;\r\n  enableBtn1: boolean = false;\r\n  accountNum1: any[];\r\n  filteredAccoun: any[];\r\n  accountDropdown: boolean = false;\r\n  flag1: boolean = false;\r\n  denomRequired: any = '';\r\n  hideDetails: boolean = false;\r\n  hideAccNum: boolean = false;\r\n  qrBranchCode: any;\r\n  custNameFromLogin: string;\r\n  totalTransAmount: number;\r\n  chargeDetails: any;\r\n  cashData: any;\r\n  transBranch: string;\r\n  accountForm: FormGroup;\r\n  currencyCode: any;\r\n\r\n  subscriptions: Subscription[] = [];\r\n\r\n  get value(): any {\r\n    return this.accountForm.value;\r\n  }\r\n\r\n  set value(value: any) {\r\n    this.accountForm.setValue(value);\r\n    this.onChange(value);\r\n    this.onTouched();\r\n  }\r\n\r\n  get emailControl() {\r\n    return this.accountForm.controls.email;\r\n  }\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private formBuilder: FormBuilder,\r\n    private dialogService: DialogService,\r\n    private apiService: ApiService,\r\n    private fb: FormBuilder,\r\n    private ls: LocalStoreService,\r\n    private snack: MatSnackBar,\r\n    private changeDef: ChangeDetectorRef,\r\n    private elRef: ElementRef,\r\n    private renderer: Renderer2,\r\n    private dialog: MatDialog,\r\n    private cdr: ChangeDetectorRef,\r\n    private dataService: DataService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.phoneNumber = localStorage.getItem('phonenumFromLogin');\r\n    this.appointmentId = this.ls.getItem('TransactionType');\r\n    this.transBranch = localStorage.getItem('TRANSACTIONBRANCH');\r\n\r\n    this.accountForm = new FormGroup({\r\n      customerId: new FormControl('', [Validators.required]),\r\n      accountNumber: new FormControl('', [Validators.required]),\r\n      accountType: new FormControl('', [Validators.required]),\r\n      holderName: new FormControl('', [Validators.required]),\r\n      accountCurrency: new FormControl('', [Validators.required]),\r\n      accountBalance: new FormControl('', [Validators.required]),\r\n      accountBranch: new FormControl('', [Validators.required]),\r\n    });\r\n    this.qrData = JSON.parse(JSON.parse(localStorage.getItem('scannerData')));\r\n    setTimeout(() => {\r\n      if (this.qrData != null) {\r\n        console.log('Account', this.qrData);\r\n        console.log(this.accountForm);\r\n        this.hideDetails=true;\r\n        this.hideAccNum=true;\r\n        this.currencyCode=this.qrData.accountCurrency;\r\n        this.userName=this.qrData.holderName;\r\n        this.accountBal=this.qrData.accountBalance;\r\n        this.accountForm.controls.customerId.setValue(this.qrData.customerId);\r\n\r\n        this.accountForm.controls.accountType.setValue(this.qrData.accountType);\r\n        this.accountForm.controls.accountNumber.setValue(this.qrData.accountId);\r\n        this.accountForm.controls.accountBranch.setValue(this.qrData.accountBranch);\r\n        this.accountForm.controls.holderName.setValue(this.qrData.holderName);\r\n        this.accountForm.controls.accountCurrency.setValue(this.qrData.accountCurrency);\r\n        this.accountForm.controls.accountBalance.setValue(this.qrData.accountBalance);\r\n        // this.accountForm.controls.accountBalance.setValue(this.qrData.accountBalance);\r\n        console.log(this.accountForm);\r\n        \r\n      } \r\n    }, 1000);\r\n  \r\n    \r\n    console.log(this.accountForm.controls);\r\n    this.custValidation = localStorage.getItem('customerValidation');\r\n    this.custNameFromLogin = localStorage.getItem('FromLogin');\r\n    if (this.custValidation == 'New Customer') {\r\n      this.hideAccNum = false;\r\n      this.showAccountNum = false;\r\n      this.showAccoutType = false;\r\n    }\r\n    if (this.custNameFromLogin != null) {\r\n      this.showAccountNum = false;\r\n    }\r\n    console.log('CWH :: ' + this.accountForm.value);\r\n    if (this.appointmentId) {\r\n      if (this.appointmentId.data.appointmentId) {\r\n        this.cashWithdrawlData();\r\n      }\r\n    }\r\n    if (\r\n      this.phoneNumber &&\r\n      this.custNameFromLogin == null &&\r\n      this.appointmentId == null\r\n    ) {\r\n      this.ifQRvariable = false;\r\n      this.hideAccNum = true;\r\n      this.showAccountNum = true;\r\n      this.showAccoutType = true;\r\n      console.log('New Customer');\r\n      this.gettingallTansactionDetails(this.phoneNumber);\r\n    }\r\n  \r\n    this.getCountrynameValues();\r\n    this.getAccountBranch();\r\n    this.gettransactionBranch('account_branch');\r\n    this.getBankInformation('KN');\r\n\r\n    this.subscriptions.push(\r\n      this.accountForm.valueChanges.subscribe((value) => {\r\n        this.onChange(value);\r\n        this.onTouched();\r\n      })\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscriptions.forEach((s) => s.unsubscribe());\r\n  }\r\n\r\n  onChange: any = () => {};\r\n  onTouched: any = () => {};\r\n\r\n  registerOnChange(fn) {\r\n    this.onChange = fn;\r\n  }\r\n\r\n  writeValue(value) {\r\n    if (value) {\r\n      this.value = value;\r\n    }\r\n\r\n    if (value === null) {\r\n      this.accountForm.reset();\r\n    }\r\n  }\r\n\r\n  registerOnTouched(fn) {\r\n    this.onTouched = fn;\r\n  }\r\n\r\n  validate(_: FormControl) {\r\n    return this.accountForm.valid ? null : { profile: { valid: false } };\r\n  }\r\n\r\n  getBankInformation(branchCode: any) {\r\n    this.apiService.fetchBankInfoByBranchCode(branchCode).subscribe((resp) => {\r\n      console.log(resp);\r\n      this.denomRequired = resp.denomRequired;\r\n      if (resp.denomRequired == 'yes') {\r\n        this.enableBtn = false;\r\n        this.enableBtn1 = false;\r\n      }\r\n    });\r\n  }\r\n  gettransactionBranch(key: string) {\r\n    this.apiService.getTransactionBranch(key).subscribe((branches) => {\r\n      console.log('branches :: ', branches);\r\n      this.trasactionBranches = branches;\r\n    });\r\n  }\r\n  getAccountBranch() {\r\n    this.apiService.getBranchforKiosk().subscribe((data: any) => {\r\n      this.branchData = data;\r\n      console.log(this.branchData);\r\n      data.forEach((element, index) => {\r\n        this.branch = data[index].branchName;\r\n        console.log(this.branch);\r\n        // this.accountForm.controls.accountBranch.setValue(this.branch);\r\n      });\r\n    });\r\n  }\r\n\r\n  getCountrynameValues() {\r\n    this.apiService.getCountryValues().subscribe((allCountryValues: any) => {\r\n      this.countryValues = allCountryValues;\r\n      console.log(this.countryValues);\r\n    });\r\n  }\r\n  gettingallTansactionDetails(phoneNumber) {\r\n    console.log(\"gfhg\")\r\n    this.phoneNumber = localStorage.getItem('phonenumFromLogin');\r\n    this.apiService\r\n      .gettingTransactionDetails(this.phoneNumber)\r\n      .subscribe((allTransactionResp: any) => {\r\n        console.log('All Transaction Details', allTransactionResp);\r\n        this.accountCurrency1 = allTransactionResp.accountCurrency;\r\n        this.currencyCode = allTransactionResp.currencyCode;\r\n        console.log(this.currencyCode);\r\n        \r\n        this.userName =\r\n          (allTransactionResp.firstName\r\n            ? allTransactionResp.firstName + ' '\r\n            : ' ') +\r\n          (allTransactionResp.middleName\r\n            ? allTransactionResp.middleName + ' '\r\n            : ' ') +\r\n          (allTransactionResp.lastName ? allTransactionResp.lastName : ' ');\r\n        this.accountForm.controls.holderName.setValue(this.userName);\r\n        // this.setBalance(allTransactionResp.custAccount);\r\n        this.custID = allTransactionResp.customerId;\r\n        this.accountForm.controls.customerId.setValue(\r\n          allTransactionResp.customerId\r\n        );\r\n        this.accountForm.controls.accountCurrency.setValue(\r\n          allTransactionResp.accountCurrency\r\n        );\r\n        console.log('Cust', this.custID);\r\n        this.custAccountData = allTransactionResp.custAccount;\r\n        this.accounttypeArray = [...this.custAccountData].filter(\r\n          ({ accountType }, index) =>\r\n            ![...this.custAccountData]\r\n              .map((obj) => obj.accountType)\r\n              .includes(accountType, index + 1)\r\n        );\r\n        console.log(this.accounttypeArray);\r\n        for (let i = 0; i < this.custAccountData.length; i++) {\r\n          if (this.custAccountData[i].status == 'APPROVED') {\r\n            // if(this.custAccountData[i].status == 'APPROVED'){\r\n            console.log(this.custAccountData[i].primaryAcc);\r\n            if (this.custAccountData[i].primaryAcc) {\r\n              console.log(this.custAccountData[i]);\r\n\r\n              //this.cashwithdrawForm.controls..setValue();\r\n            }\r\n            this.accountNoList.push(this.custAccountData[i]);\r\n            // }\r\n\r\n            this.accountNoList.push(this.custAccountData[i]);\r\n          }\r\n        }\r\n        console.log(this.accountNoList);\r\n        if (this.custAccountData && this.accountNoList.length <= 1) {\r\n          this.accountDropdown = false;\r\n          this.hideDetails = true;\r\n          this.hideAccNum = true;\r\n          const accTyp = allTransactionResp.custAccount[0].accountType;\r\n          this.accountForm.controls.accountType.setValue(accTyp);\r\n          this.custAccountNumber(this.accountNoList[0]);\r\n        } else {\r\n          this.accountDropdown = true;\r\n          this.hideDetails = true;\r\n          this.hideAccNum = true;\r\n          const accTyp = allTransactionResp.custAccount[0].accountType;\r\n          this.accountForm.controls.accountType.setValue(accTyp);\r\n          this.custAccountNumber(allTransactionResp.custAccount[0]);\r\n        }\r\n      });\r\n  }\r\n  custAccountNumber(custype) {\r\n    console.log('custype :: ', custype);\r\n    this.isedit = false;\r\n    this.idList = [...this.custAccountData].filter(\r\n      (item) => item.accountType === custype.accountType\r\n    );\r\n    //  const defaultId = this.idList ? this.idList[0] : null;\r\n    console.log('idList :: ', this.idList);\r\n    this.accountNoList = [];\r\n    for (let i = 0; i < this.idList.length; i++) {\r\n      if (this.idList[i].status == 'APPROVED') {\r\n        this.accountNoList.push(this.idList[i].accountId);\r\n      }\r\n    }\r\n    console.log('accountNoList :: ', this.accountNoList);\r\n    if (this.accountNoList.length <= 1) {\r\n      // this.cashwithdrawForm.controls.accountNumber.patchValue(this.accountNoList[0]);\r\n      this.flag1 = false;\r\n      // this.getData(this.accountNoList[0]);\r\n      this.accountForm.controls.accountNumber.setValue(this.accountNoList[0]);\r\n    } else {\r\n      this.accountForm.controls.accountNumber.setValue(this.accountNoList[0]);\r\n      this.flag1 = true;\r\n    }\r\n\r\n    //  this.cashwithdrawForm.controls.accountNumber.setValue(defaultId);\r\n    // this.cashwithdrawForm.controls.accountType.setValue(defaultId);\r\n    //  this.accountForm.controls.accountCurrency.setValue(custype.accountCurrency);\r\n    //  this.accountForm.controls.accountBranch.setValue(this.branch);\r\n    //this.cashwithdrawForm.controls.transactionAmount.setValue(custype.amount);\r\n    //  this.cashwithdrawForm.controls.accountType.setValue(custype.accountType);\r\n    console.log('AccountCurrency', custype.accountCurrency);\r\n\r\n    //  this.selected=custype.accountCurrency;\r\n    this.curr = getCurrencySymbol(custype.accountCurrency, 'narrow');\r\n\r\n    this.currencyImage =\r\n      'currency-flag-' + custype.accountCurrency.toLowerCase();\r\n    console.log('data :: ', this.idList[0]);\r\n    this.accountBal = this.idList[0].amount;\r\n    console.log(this.accountBal);\r\n    localStorage.setItem('AccountBal', this.accountBal);\r\n    //  this.cashwithdrawForm.controls.accountNumber.setValue(this.idList[0].accountId);\r\n    this.custAmountBal(this.accountNoList[0]);\r\n    this.accountForm.controls.accountBranch.setValue(custype.accountBranch);\r\n  }\r\n\r\n  formatAmount(amount) {\r\n    // amount=amount.toString();\r\n    // var lastThree = amount.substring(amount.length - 3);\r\n    // var otherNumbers = amount.substring(0,amount.length-3);\r\n    // if(otherNumbers != '')\r\n    //     lastThree = ',' + lastThree;\r\n    // return String(amount).replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")+ lastThree;\r\n    // return String(amount).replace(en-IN,',');\r\n    if (amount) {\r\n      return amount && amount.toString().split('.')[0].length > 3\r\n        ? amount\r\n            .toString()\r\n            .substring(0, amount.toString().split('.')[0].length - 3)\r\n            .replace(/\\B(?=(\\d{2})+(?!\\d))/g, ',') +\r\n            ',' +\r\n            amount\r\n              .toString()\r\n              .substring(amount.toString().split('.')[0].length - 3)\r\n        : amount.toString();\r\n    }\r\n  }\r\n  cashWithdrawlData() {\r\n    this.apiService\r\n      .getAppointmentId(this.appointmentId.data.appointmentId)\r\n      .subscribe((resp: any) => {\r\n        console.log(resp);\r\n        this.cashData = resp.data;\r\n       \r\n        this.custID = resp.data.customerId;\r\n        this.ifQRvariable = true;\r\n        this.hideAccNum = false;\r\n        this.hideDetails = true;\r\n        this.flag1 = true;\r\n        this.userName = resp.data.holderName;\r\n        this.currencyCode = resp.data.accountCurrency;\r\n        this.accountForm.controls.accountType.setValue(resp.data.accountType);\r\n        this.accountForm.controls.accountBranch.setValue(resp.data.accountBranch);\r\n        this.accountForm.controls.accountNumber.setValue(\r\n          resp.data.accountNumber\r\n        );\r\n        this.accountForm.controls.accountCurrency.setValue(\r\n          resp.data.accountCurrency\r\n        );\r\n        this.currencyImage =\r\n          'currency-flag-' + resp.data.accountCurrency.toLowerCase();\r\n          this.dataService.sendaccountFormData(this.cashData);\r\n      });\r\n     console.log(this.cashData);\r\n       \r\n    \r\n\r\n    // this.denomRequired='yes';\r\n  }\r\n  fetchByAccountNum(accNum) {\r\n    console.log('Account Numebr', accNum);\r\n    this.flag1 = true;\r\n    this.ifQRvariable = true;\r\n    if (this.custValidation == 'New Customer') {\r\n      this.hideAccNum = false;\r\n    } else {\r\n      this.hideAccNum = true;\r\n    }\r\n    this.hideDetails = true;\r\n    this.apiService.fetchByaccNum(accNum).subscribe((res: any) => {\r\n      console.log('statement',res);\r\n      this.accountForm.controls.accountCurrency.setValue(res.currency);\r\n      if(accNum != res?.accountId || res.accountId == null){\r\n        \r\n        this.snack.open(\"Account Number Doesn't Exist\" , \"OK\", {\r\n          duration: 4000,\r\n          verticalPosition: 'top',\r\n          horizontalPosition: 'right',\r\n          panelClass: ['snackbar'],\r\n        });\r\n        this.accountForm.reset();\r\n        this.userName='';\r\n        this.accountBal ='';\r\n        this.curr ='';\r\n      }\r\n      else{\r\n      console.log('Account Number Rsp', res);\r\n      this.dataService.sendaccountFormData(res);\r\n      this.userName = res.accHolderName;\r\n      this.accountBal = res.accBalance;\r\n      this.custmerID = res.customerId;\r\n      this.accountNumber = res.accountId;\r\n      this.accountForm.value.accountBalance = res.accBalance;\r\n      console.log(this.accountForm);\r\n      this.accountForm.controls.accountBranch.setValue(res.accountBranch);\r\n      this.accountForm.controls.customerId.setValue(res.customerId);\r\n\r\n      this.curr = getCurrencySymbol(res.currency, 'narrow');\r\n      this.accountForm.controls.accountType.setValue(res.accountType);\r\n      // this.accountForm.controls.accountBranch.setValue(res.accountBranch);\r\n      this.accountForm.controls.holderName.setValue(this.userName);\r\n\r\n      this.getCountrynameValues();\r\n    \r\n      // this.currencyImage = 'currency-flag-'+res.currency.toLowerCase();\r\n      this.currencyImage = 'currency-flag-' + res.currency.toLowerCase();\r\n\r\n      this.accountCurrency1 = res.currency;\r\n      console.log(this.ifQRvariable);\r\n      this.custAmountBal(accNum);\r\n      }\r\n      this.apiService\r\n        .fetchByaccDeatilsoncustId(res.customerId)\r\n        .subscribe((resp: any) => {\r\n          this.phonenum = resp[0].phoneNumber;\r\n          localStorage.setItem('otpPhoneNum', this.phonenum);\r\n        });\r\n      \r\n    });\r\n  \r\n  }\r\n  getAccountType(event: any) {\r\n    this.accountNoList = [];\r\n    this.isedit = false;\r\n    this.accountNum1 = [...this.custAccountData].filter((accounNum, index) => {\r\n      return accounNum.accountType == event;\r\n    });\r\n    // this.accountNoList=this.accountNum1\r\n    // this.accountNoList=this.accountNum1.map((acccount)=>\r\n    // {\r\n    //   return acccount.accountId\r\n    // });\r\n    for (let i = 0; i < this.custAccountData.length; i++) {\r\n      if (\r\n        this.custAccountData[i].status == 'APPROVED' &&\r\n        this.custAccountData[i].accountType == event\r\n      ) {\r\n        this.accountNoList.push(this.custAccountData[i].accountId);\r\n      }\r\n    }\r\n    // this.accountNoList.push(12233)\r\n    console.log(this.accountNoList);\r\n\r\n    if (this.accountNoList.length <= 1) {\r\n      // this.cashwithdrawForm.controls.accountNumber.patchValue(this.accountNoList[0]);\r\n      this.flag1 = false;\r\n      this.getData(this.accountNoList[0]);\r\n\r\n      this.accountForm.controls.accountNumber.setValue(this.accountNoList[0]);\r\n    } else {\r\n      this.getData(this.accountNoList[0]);\r\n      this.flag1 = true;\r\n    }\r\n  }\r\n  getData(custNum) {\r\n    this.hideDetails = true;\r\n    this.hideAccNum = true;\r\n    let val = this.accountNum1.filter((value) => {\r\n      return value.accountId == custNum;\r\n    });\r\n\r\n    this.idList = [...this.custAccountData].filter(\r\n      (item) => item.accountType === val[0].accountType\r\n    );\r\n    // this.accountForm.controls.accountCurrency.setValue(val[0].accountCurrency);\r\n    //  this.accountForm.controls.accountBranch.setValue(this.branch);\r\n    //  this.selected=val[0].accountCurrency;\r\n    this.accountCurrency1 = val[0].accountCurrency;\r\n    this.curr = getCurrencySymbol(val[0].accountCurrency, 'narrow');\r\n\r\n    this.currencyImage =\r\n      'currency-flag-' + val[0].accountCurrency.toLowerCase();\r\n    this.accountBal = val[0].amount;\r\n    localStorage.setItem('AccountBal', this.accountBal);\r\n    this.accountForm.controls.accountNumber.setValue(val[0].accountId);\r\n\r\n    this.custAmountBal(val[0].accountId);\r\n    // this.accountForm.controls.accountBranch.setValue(val[0].accountBranch);\r\n  }\r\n  custAmountBal(custNum) {\r\n    console.log(custNum);\r\n    var account = this.idList.filter(function (record) {\r\n      if (record.accountId == custNum) {\r\n        return record;\r\n      }\r\n    });\r\n    console.log(account);\r\n    this.accountForm.controls.accountCurrency.setValue(account[0]?.accountCurrency?account[0]?.accountCurrency:this.accountCurrency1);\r\n    if (account.length > 0) {\r\n      this.accNum = account[0].accountId;\r\n      this.accountBal = account[0].amount;\r\n      this.selectedAccountInfo = account[0];\r\n    }\r\n    console.log(this.accountBal);\r\n    this.accountForm.controls.accountBalance.setValue(this.accountBal);\r\n    console.log(this.accountForm);\r\n    localStorage.setItem('AccountBal', this.accountBal);\r\n  }\r\n}\r\n","<div class=\"section\">\r\n  <!-- <div class=\"form-title\">\r\n        <h3 class=\"card-title-text\">Account Information</h3>\r\n    </div> -->\r\n  <mat-card-title style=\"font-size: 15px; color: #004c97; margin-left: 1%\"\r\n    >Account Information</mat-card-title\r\n  >\r\n  <div>\r\n    <mat-card fxFlex=\"calc(13%-25px)\" class=\"accountInfoCard\" fxFlex=\"100%\">\r\n      <form [formGroup]=\"accountForm\">\r\n        <div fxLayoutGap=\"50px\" *ngIf=\"showAccountNum\">\r\n          <mat-form-field\r\n            appearance=\"outline\"\r\n            style=\"border-radius: 12px\"\r\n            fxFlex=\"35%\"\r\n          >\r\n            <mat-label>Account Type*</mat-label>\r\n            <input\r\n              matInput\r\n              type=\"text\"\r\n              *ngIf=\"phoneNumber && !accountDropdown\"\r\n              [readonly]=\"true\"\r\n              class=\"full-width\"\r\n              formControlName=\"accountType\"\r\n            />\r\n            <input\r\n              matInput\r\n              type=\"text\"\r\n              *ngIf=\"!phoneNumber && !accountDropdown\"\r\n              [readonly]=\"true\"\r\n              class=\"full-width\"\r\n              formControlName=\"accountType\"\r\n            />\r\n            <mat-select\r\n              *ngIf=\"phoneNumber && accountDropdown\"\r\n              formControlName=\"accountType\"\r\n              (selectionChange)=\"getAccountType($event.value)\"\r\n            >\r\n              <mat-option\r\n                *ngFor=\"let type of accounttypeArray\"\r\n                [value]=\"type.accountType\"\r\n              >\r\n                {{ type.accountType }}\r\n              </mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n          <mat-form-field\r\n            appearance=\"outline\"\r\n            style=\"border-radius: 12px\"\r\n            fxFlex=\"65%\"\r\n          >\r\n            <mat-label>Account Number*</mat-label>\r\n            <div style=\"display: flex\">\r\n              <span *ngIf=\"flag1\" class=\"currency_code\">{{ accountForm.get('accountCurrency').value }}</span>\r\n              <input\r\n                *ngIf=\"!flag1\"\r\n                matInput\r\n                type=\"text\"\r\n                [readonly]=\"true\"\r\n                class=\"full-width\" \r\n                formControlName=\"accountNumber\"\r\n              />\r\n              <mat-select\r\n                *ngIf=\"flag1\"\r\n                formControlName=\"accountNumber\"\r\n                (selectionChange)=\"fetchByAccountNum($event.value)\"\r\n              >\r\n                <mat-option *ngFor=\"let id of accountNoList\" [value]=\"id\">{{\r\n                  id\r\n                }}</mat-option>\r\n              </mat-select>\r\n            </div>\r\n          </mat-form-field>\r\n        </div>\r\n        <div fxLayoutGap=\"50px\" *ngIf=\"!showAccountNum\">\r\n          <mat-form-field\r\n            appearance=\"outline\"\r\n            style=\"border-radius: 12px\"\r\n            fxFlex=\"65%\"\r\n          >\r\n            <mat-label>Account Number*</mat-label>\r\n            <div style=\"display: flex\">\r\n            <span *ngIf=\"flag1\" class=\"currency_code\">{{ accountForm.get('accountCurrency').value }}</span>\r\n            <input\r\n              type=\"text\"\r\n              formControlName=\"accountNumber\"\r\n              (change)=\"\r\n                fetchByAccountNum(accountForm.get('accountNumber').value)\r\n              \"\r\n              placeholder=\"Account Number\"\r\n              matInput\r\n            />\r\n          </div>\r\n          </mat-form-field>\r\n          <mat-form-field\r\n            appearance=\"outline\"\r\n            style=\"border-radius: 12px\"\r\n            fxFlex=\"35%\"\r\n          >\r\n            <mat-label>Account Type*</mat-label>\r\n            <input\r\n              matInput\r\n              type=\"text\"\r\n              [readonly]=\"true\"\r\n              class=\"full-width\"\r\n              formControlName=\"accountType\"\r\n            />\r\n          </mat-form-field>\r\n        </div>\r\n        <div\r\n          fxLayout=\"row wrap\"\r\n          fxLayoutGap=\"10%\"\r\n          style=\"justify-content: space-between; margin-left: 2%\"\r\n        >\r\n        \r\n           <div\r\n            fxLayout=\"column\"\r\n            *ngIf=\"hideAccNum\"\r\n            formControlName=\"accountBalance\"\r\n          >\r\n            <mat-hint class=\"totalAmount\">Account Balance </mat-hint>\r\n            <p class=\"hint\">{{ curr }}{{ formatAmount(accountBal) }}</p>\r\n          </div> \r\n          <div\r\n          fxLayout=\"column\"\r\n          *ngIf=\"hideDetails\"\r\n          formControlName=\"holderName\"\r\n        >\r\n          <mat-hint class=\"totalAmount\">Holder Name </mat-hint>\r\n          <p class=\"hint\">{{ userName }}</p>\r\n        </div>\r\n          <div\r\n            fxLayout=\"column\"\r\n            *ngIf=\"hideDetails\"\r\n            formControlName=\"accountBranch\"\r\n          >\r\n            <mat-hint class=\"totalAmount\">Account Branch </mat-hint>\r\n            <p class=\"hint\">{{ accountForm.get('accountBranch')?.value }}</p>\r\n          </div>\r\n          <!-- <div\r\n            fxLayout=\"column\"\r\n            *ngIf=\"hideDetails\"\r\n            name=\"accountCurrency\"\r\n            formControlName=\"accountCurrency\"\r\n          >\r\n            <mat-hint class=\"totalAmount\">Account currency </mat-hint>\r\n            <div fxLayoutGap=\"20px\" fxLayout=\"row\">\r\n              <div class=\"currency-flag {{ currencyImage }}\"></div>\r\n              <span>{{ accountForm.get('accountCurrency')?.value }}</span>\r\n            </div>\r\n          </div> -->\r\n        </div>\r\n      </form>\r\n    </mat-card>\r\n  </div>\r\n  <!--   <mat-card fxFlex=\"calc(13%-25px)\" class=\"accountInfoCard\">\r\n                <form [formGroup]=\"accountForm\" fxFlex=\"100%\">\r\n                <div fxLayoutGap=\"50px\" *ngIf=\"showAccountNum\">\r\n                    <mat-form-field appearance=\"outline\" style=\"border-radius: 12px;\" fxFlex=\"35%\" >\r\n                      <mat-label>Account Type*</mat-label>\r\n                      <input matInput type=\"text\" *ngIf=\"phoneNumber && !accountDropdown\"\r\n                      [readonly]=\"true\" class=\"full-width\" \r\n                      formControlName=\"accountType\">\r\n                      <mat-select *ngIf=\"phoneNumber && accountDropdown\"  formControlName=\"accountType\"\r\n                      (selectionChange)=\"getAccountType($event.value)\">\r\n                        <mat-option *ngFor=\"let type of accounttypeArray \"\r\n                        [value]=\"type.accountType\" >\r\n                        {{type.accountType}}\r\n                        </mat-option>\r\n                      </mat-select>\r\n\r\n                    </mat-form-field>\r\n                    <mat-form-field appearance=\"outline\" style=\"border-radius: 12px;\" fxFlex=\"57%\">\r\n                      <mat-label>Account Number*</mat-label>\r\n                      <input *ngIf=\"!flag1\" matInput type=\"text\" [readonly]=\"true\"\r\n                      class=\"full-width\" formControlName=\"accountNumber\" >\r\n                      <mat-select *ngIf=\"flag1\" formControlName=\"accountNumber\" (selectionChange)=\"fetchByAccountNum($event.value)\">\r\n                        <mat-option   *ngFor=\"let id of accountNoList \" [value]=\"id\">{{id}}</mat-option>\r\n                      </mat-select>\r\n\r\n                    </mat-form-field>\r\n                  </div>\r\n                 \r\n                  <div fxLayoutGap=\"50px\" *ngIf=\"!showAccountNum\">\r\n                  \r\n                    <mat-form-field appearance=\"outline\" style=\"border-radius: 12px;\" fxFlex=\"57%\" >\r\n                      <mat-label>Account Number*</mat-label>\r\n                      <input type=\"text\"   formControlName=\"accountNumber\"\r\n                      (change)=\"fetchByAccountNum(accountForm.get('accountNumber').value)\"\r\n                      placeholder=\"Account Number\" matInput>\r\n\r\n                    </mat-form-field>\r\n                    <mat-form-field appearance=\"outline\" style=\"border-radius: 12px;\" fxFlex=\"35%\">\r\n                      <mat-label>Account Type*</mat-label>\r\n                      <input matInput type=\"text\" [readonly]=\"true\" class=\"full-width\"\r\n                                                        formControlName=\"accountType\">\r\n\r\n                    </mat-form-field>\r\n                  </div>\r\n                  <div fxLayout=\"row wrap\"  fxLayoutGap=\"10%\" style=\"margin-left: 2%;\">\r\n                    <div fxLayout=\"column\" *ngIf=\"hideDetails\">\r\n                      <mat-hint class=\"totalAmount\">Holder Name\r\n                      </mat-hint>\r\n                      <p class=\"hint\">{{userName}}</p>\r\n                    </div>\r\n                    <div fxLayout=\"column\" *ngIf=\"hideAccNum\">\r\n                      <mat-hint class=\"totalAmount\">Account Balance\r\n                      </mat-hint>\r\n                      <p class=\"hint\">{{curr }}{{formatAmount(accountBal)}}</p>\r\n                    </div>\r\n                    <div fxLayout=\"column\" *ngIf=\"hideDetails\">\r\n                      <mat-hint class=\"totalAmount\">Account Branch \r\n                      </mat-hint>\r\n                      <p class=\"hint\">Gayathri</p>\r\n                    </div>\r\n                    <div fxLayout=\"column\"  *ngIf=\"hideDetails\">\r\n                      <mat-hint class=\"totalAmount\">Account currency\r\n                      </mat-hint>\r\n                      <div fxLayoutGap=\"20px\" fxLayout=\"row\">\r\n                        <div class=\"currency-flag {{currencyImage}}\"></div><span>{{accountCurrency}}</span>\r\n                    </div>\r\n                     \r\n                    </div>\r\n                  </div>\r\n                </form>\r\n            </mat-card> -->\r\n\r\n  <!-- <div class=\"content\">\r\n        <form [formGroup]=\"accountForm\">\r\n            <div fxLayout=\"row wrap\">\r\n                <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-16\">\r\n                    <div class=\"pb-16\">\r\n                        <mat-form-field class=\"full-width\" appearance=\"outline\">\r\n                            <mat-label>Username</mat-label>\r\n                            <input matInput name=\"username\" formControlName=\"username\"\r\n                                placeholder=\"Username (Min Length: 4, Max Length: 9)\" value=\"\">\r\n                        </mat-form-field>\r\n                        <small\r\n                            *ngIf=\"accountForm.controls['username'].hasError('minlength') && accountForm.controls['username'].touched\"\r\n                            class=\"form-error-msg\"> Username require at least\r\n                            {{accountForm.controls['username'].errors.minlength.requiredLength}} characters </small>\r\n                        <small\r\n                            *ngIf=\"accountForm.controls['username'].hasError('maxlength') && accountForm.controls['username'].touched\"\r\n                            class=\"form-error-msg\"> Username can not contain more than\r\n                            {{accountForm.controls['username'].errors.maxlength.requiredLength}} characters </small>\r\n                    </div>\r\n\r\n                    <div class=\"pb-16\">\r\n                        <mat-form-field class=\"full-width\" appearance=\"outline\">\r\n                            <mat-label>Firstname</mat-label>\r\n                            <input matInput name=\"firstname\" formControlName=\"firstname\" placeholder=\"First name\"\r\n                                value=\"\">\r\n                        </mat-form-field>\r\n                        <small\r\n                            *ngIf=\"accountForm.controls['firstname'].hasError('required') && accountForm.controls['firstname'].touched\"\r\n                            class=\"form-error-msg\"> First name is required </small>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                <div fxFlex=\"100\" fxFlex.gt-xs=\"50\">\r\n                    <div class=\"pb-16\">\r\n                        <mat-form-field class=\"full-width\" appearance=\"outline\">\r\n                            <mat-label>Card No</mat-label>\r\n                            <input matInput name=\"cardno\" formControlName=\"cardno\" placeholder=\"Credit card number\">\r\n                        </mat-form-field>\r\n                        <small\r\n                            *ngIf=\"accountForm.controls['cardno'].hasError('creditCard') && accountForm.controls['cardno'].touched\"\r\n                            class=\"form-error-msg\"> Invaild card number </small>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        </form>\r\n    </div> -->\r\n</div>\r\n","import {\r\n  Component,\r\n  forwardRef,\r\n  OnDestroy,\r\n  ChangeDetectionStrategy,\r\n  OnInit,\r\n  ChangeDetectorRef,\r\n  ElementRef,\r\n  Renderer2,\r\n  ViewChild,\r\n} from \"@angular/core\";\r\nimport {\r\n  ControlValueAccessor,\r\n  NG_VALUE_ACCESSOR,\r\n  FormBuilder,\r\n  FormGroup,\r\n  Validators,\r\n  FormControl,\r\n  NG_VALIDATORS,\r\n} from \"@angular/forms\";\r\nimport { Subscription } from \"rxjs\";\r\nimport { CustomValidators } from \"ngx-custom-validators\";\r\nimport { TokenObjects } from \"app/shared/models/tokenObjects\";\r\nimport { otpModel } from \"app/shared/models/otp.model\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\r\nimport { Router } from \"@angular/router\";\r\nimport { ApiService } from \"app/shared/services/api.service\";\r\nimport { DialogService } from \"app/shared/services/Dialog/dialog.service\";\r\nimport { LocalStoreService } from \"app/shared/services/local-store.service\";\r\nimport { getCurrencySymbol } from \"@angular/common\";\r\nimport { AccountInformationFormComponent } from \"../account-information-form/account-information-form.component\";\r\nimport { connectableObservableDescriptor } from \"rxjs/internal/observable/ConnectableObservable\";\r\nimport { DataService } from \"app/shared/services/data.service\";\r\n@Component({\r\n  selector: \"app-transaction-information-form\",\r\n  templateUrl: \"./transaction-information-form.component.html\",\r\n  styleUrls: [\"./transaction-information-form.component.scss\"],\r\n  providers: [\r\n    {\r\n      provide: NG_VALUE_ACCESSOR,\r\n      useExisting: forwardRef(() => TransactionInformationFormComponent),\r\n      multi: true,\r\n    },\r\n    {\r\n      provide: NG_VALIDATORS,\r\n      useExisting: forwardRef(() => TransactionInformationFormComponent),\r\n      multi: true,\r\n    },\r\n  ],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class TransactionInformationFormComponent implements OnInit {\r\n  @ViewChild(AccountInformationFormComponent)\r\n  accountComponent: AccountInformationFormComponent;\r\n  transactionForm: FormGroup;\r\n  cashWithdrawal: any = \"Cash Withdrawal\";\r\n  operation: string;\r\n  ifQRvariable = false;\r\n  index: string[];\r\n  cashWithdrawResponse: any;\r\n  productCode = \"CHW\";\r\n  tokenOrigin = \"Kiosk\";\r\n  custPref = \"N\";\r\n  entityCode = \"ENTCD\";\r\n  bankCode = \"BNKC\";\r\n  tokenBranch = \"1234\";\r\n  accountNum: string;\r\n  accountBal: any;\r\n  phoneNumber: string;\r\n  errorStatus: number;\r\n  custAccountData: any;\r\n  countryValues: any;\r\n  accounttypeArray = [];\r\n  idList = [];\r\n  noList: any[];\r\n  accNum: any;\r\n  totalAmount: any;\r\n  transamount: any;\r\n  a: any;\r\n  tokenObjects = new TokenObjects();\r\n  accNumber: any;\r\n  appointmentId: any;\r\n  tokResponse: any;\r\n  tokenNum: any;\r\n  estimatedTime: any;\r\n  transAmt: any;\r\n  balance: string;\r\n  enableContinue: boolean = true;\r\n  isedit: boolean = false;\r\n  accountCurrency: any;\r\n  curr: string;\r\n  transAmount: string;\r\n  currencyImage: any = \"\";\r\n  custID: any;\r\n  qrData: any;\r\n  customerID: any;\r\n  selected: string;\r\n  userName: string;\r\n  branchNameFromLogin: string;\r\n  branchName: string;\r\n  arrayAccountBranch: any;\r\n  trasactionBranches: any;\r\n  branchData: any;\r\n  branch: any;\r\n  resultStatus: any;\r\n  // accountNoList[]: any[];\r\n  accountNoList = [];\r\n  selectedAccountInfo: any;\r\n  showAccountNum: boolean = true;\r\n  showAccoutType: boolean = true;\r\n  custValidation: string;\r\n  accountNumber: string;\r\n  custmerID: any;\r\n  phonenum: any;\r\n  oTpModel = new otpModel();\r\n  cashwithDrwValues: any;\r\n  cashwithDrwform: any;\r\n  cashwithDrwType: any;\r\n  enableBtn: boolean = true;\r\n  enableBtn1: boolean = false;\r\n  accountNum1: any[];\r\n  filteredAccoun: any[];\r\n  accountDropdown: boolean = false;\r\n  flag1: boolean = false;\r\n  denomRequired: any = \"\";\r\n  hideDetails: boolean = false;\r\n  hideAccNum: boolean = false;\r\n  qrBranchCode: any;\r\n  custNameFromLogin: string;\r\n  totalTransAmount: number;\r\n  chargeDetails: any;\r\n  cashData: any;\r\n  transBranch: string;\r\n  accountForm: FormGroup;\r\n  subscriptions: Subscription[] = [];\r\n  titleData: {};\r\n  chqPage: string;\r\n  details: any;\r\n  exchangerateResp:any\r\n\r\n  get value(): any {\r\n    return this.transactionForm.value;\r\n  }\r\n\r\n  set value(value: any) {\r\n    this.transactionForm.setValue(value);\r\n    this.onChange(value);\r\n    this.onTouched();\r\n  }\r\n\r\n  get emailControl() {\r\n    return this.transactionForm.controls.email;\r\n  }\r\n\r\n  get passwordControl() {\r\n    return this.transactionForm.controls.password;\r\n  }\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private formBuilder: FormBuilder,\r\n    private dialogService: DialogService,\r\n    private apiService: ApiService,\r\n    private fb: FormBuilder,\r\n    private ls: LocalStoreService,\r\n    private snack: MatSnackBar,\r\n    private changeDef: ChangeDetectorRef,\r\n    private elRef: ElementRef,\r\n    private renderer: Renderer2,\r\n    private dialog: MatDialog,\r\n    private cdr: ChangeDetectorRef,\r\n    private dataService: DataService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.chqPage = localStorage.getItem('chq_page');\r\n    this.phoneNumber = localStorage.getItem(\"phonenumFromLogin\");\r\n    console.log(\"Tranaform\", this.phoneNumber);\r\n    this.appointmentId = this.ls.getItem(\"TransactionType\");\r\n    this.transBranch = localStorage.getItem(\"TRANSACTIONBRANCH\");\r\n    this.transactionForm = new FormGroup({\r\n      transactionCurrency: new FormControl(\"\", Validators.required),\r\n      transactionBranch: new FormControl(\"\", Validators.required),\r\n      transactionAmount: new FormControl(\"\", Validators.required),\r\n      totalTransactionAmount: new FormControl(\"\", Validators.required),\r\n      negotiatedRate: new FormControl(\"\", Validators.required),\r\n      totalChargeAmount: new FormControl(\"\", Validators.required),\r\n      exchangeRate: new FormControl(\"\", Validators.required),\r\n      totalAmount: new FormControl(\"\", Validators.required),\r\n      transactionId: new FormControl(\"\", [Validators.required]),\r\n      chequeNumber: new FormControl(\"\", [Validators.required]),\r\n      chequeType:new FormControl(\"\", [Validators.required]),\r\n    });\r\n\r\n    this.qrData = JSON.parse(JSON.parse(localStorage.getItem(\"scannerData\")));\r\n    //this.qrData = JSON.parse(JSON.parse(localStorage.getItem('scannerData')));\r\n    setTimeout(() => {\r\n      if(this.qrData!=null){\r\n        console.log(\"Account\", this.qrData);\r\n        this.getChargeDetails(this.qrData.accountId, \"\");\r\n        this.transactionForm.controls.transactionAmount.setValue(this.qrData.transactionAmount);\r\n        this.transactionForm.controls.transactionCurrency.setValue(this.qrData.transactionCurrency);\r\n        console.log(this.accountForm)\r\n        this.customerID = this.qrData.customerId;\r\n        this.currencyImage = 'currency-flag-'+this.qrData.transactionCurrency.toLowerCase();\r\n        if(this.qrData.transactionBranch !=null && this.qrData.transactionBranch !=''){\r\n          this.accountForm.controls.transactionBranch.setValue(this.qrData.transactionBranch);\r\n        }else{\r\n          this.transactionForm.controls.transactionBranch.setValue('Kasthuri Nagar');\r\n        }\r\n        console.log(\"GetChargeDetails\");\r\n        \r\n      }\r\n    }, 1000);\r\n  \r\n\r\n    this.custValidation = localStorage.getItem(\"customerValidation\");\r\n    this.custNameFromLogin = localStorage.getItem(\"FromLogin\");\r\n    if (this.custValidation == \"New Customer\") {\r\n      this.hideAccNum = false;\r\n      this.showAccountNum = false;\r\n      this.showAccoutType = false;\r\n    }\r\n    if (this.custNameFromLogin != null) {\r\n      console.log(\"Inside\");\r\n      this.showAccountNum = false;\r\n    }\r\n    console.log(\"CWH :: \" + this.custNameFromLogin,this.appointmentId,this.phoneNumber);\r\n    if (\r\n      this.phoneNumber &&\r\n      this.custNameFromLogin == null &&\r\n      this.appointmentId == null\r\n    ) {\r\n      console.log(\"Calling\")\r\n      this.ifQRvariable = false;\r\n      this.gettingallTansactionDetails(this.phoneNumber);\r\n    }\r\n    this.getCountrynameValues();\r\n    this.getAccountBranch();\r\n    this.gettransactionBranch(\"account_branch\");\r\n    this.getBankInformation(\"KN\");\r\n    // if (this.appointmentId) {\r\n    //   if (this.appointmentId.data.appointmentId) {\r\n    //     this.cashWithdrawlData();\r\n    //   }\r\n    // }\r\n\r\n    this.subscriptions.push(\r\n      this.transactionForm.valueChanges.subscribe((value) => {\r\n        this.onChange(value);\r\n        this.onTouched();\r\n      })\r\n    );\r\n\r\n    this.dataService.getaccountFormdata.subscribe((data) => {\r\n      if (Object.keys(data).length != 0  && data.constructor === Object) {\r\n        // if(data){\r\n        this.details=data;\r\n        console.log(this.details);\r\n          this.transactionForm.controls.transactionCurrency.setValue(this.details?.accountCurrency?this.details.accountCurrency:this.details?.currency);\r\n          // this.currencyImage = \"currency-flag-\" + this.details?.accountCurrency?this.details.accountCurrency.toLowerCase():this.details?.currency.toLowerCase();\r\n        \r\n        if(this.details.appointmentId){\r\n          console.log(this.details);\r\n          this.cashWithdrawlData(this.details);\r\n        }\r\n        console.log(this.custValidation)\r\n        if(this.custValidation == \"New Customer\"){\r\n          this.setValueForWalkInCustomer(data);\r\n        }\r\n// else{\r\n \r\n// }\r\n       \r\n      }\r\n    });\r\n    this.dataService.getNavParam.subscribe((title) => {\r\n      console.log(title);\r\n      this.titleData = title;\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    // this.subscriptions.forEach((s) => s.unsubscribe());\r\n  }\r\n\r\n  onChange: any = () => {};\r\n  onTouched: any = () => {};\r\n\r\n  registerOnChange(fn) {\r\n    this.onChange = fn;\r\n  }\r\n  addCurrencyImage(currency) {\r\n    return currency.toLowerCase();\r\n  }\r\n\r\n  writeValue(value) {\r\n    if (value) {\r\n      this.value = value;\r\n    }\r\n\r\n    if (value === null) {\r\n      this.transactionForm.reset();\r\n    }\r\n  }\r\n\r\n  registerOnTouched(fn) {\r\n    this.onTouched = fn;\r\n  }\r\n\r\n  validate(_: FormControl) {\r\n    return this.transactionForm.valid ? null : { profile: { valid: false } };\r\n  }\r\n  getAccountBranch() {\r\n    this.apiService.getBranchforKiosk().subscribe((data: any) => {\r\n      this.branchData = data;\r\n      console.log(this.branchData);\r\n      data.forEach((element, index) => {\r\n        this.branch = data[index].branchName;\r\n        console.log(this.branch);\r\n      });\r\n    });\r\n  }\r\n\r\n  getCountrynameValues() {\r\n    this.apiService.getCountryValues().subscribe((allCountryValues: any) => {\r\n      this.countryValues = allCountryValues;\r\n      console.log(this.countryValues);\r\n    });\r\n  }\r\n  onCountryChange(country) {\r\n    let currency = country.currencyCode;\r\n    console.log(currency)\r\n    this.currencyImage = \"currency-flag-\" + currency.toLowerCase();\r\n    this.fetchExchangeRateForCurrency(currency);\r\n  }\r\n  fetchExchangeRateForCurrency(currency){\r\n    console.log(currency,this.accountCurrency)\r\n    this.apiService.fetchExchangeRateForCurrency(currency,this.accountCurrency).subscribe((resp) => {\r\n      console.log(resp);\r\n      this.exchangerateResp=resp;\r\n      this.denomRequired = resp.denomRequired;\r\n      if (resp.denomRequired == \"yes\") {\r\n        this.enableBtn = false;\r\n        this.enableBtn1 = false;\r\n      }\r\n    });\r\n  }\r\n  getBankInformation(branchCode: any) {\r\n    this.apiService.fetchBankInfoByBranchCode(branchCode).subscribe((resp) => {\r\n      console.log(resp);\r\n      this.denomRequired = resp.denomRequired;\r\n      if (resp.denomRequired == \"yes\") {\r\n        this.enableBtn = false;\r\n        this.enableBtn1 = false;\r\n      }\r\n    });\r\n  }\r\n  gettransactionBranch(key: string) {\r\n    this.apiService.getTransactionBranch(key).subscribe((branches) => {\r\n      console.log(\"branches :: \", branches);\r\n      this.trasactionBranches = branches;\r\n    });\r\n  }\r\n  cashWithdrawlData(data) {\r\n    // this.apiService\r\n    //   .getAppointmentId(this.appointmentId.data.appointmentId)\r\n    //   .subscribe((resp: any) => {\r\n    //     console.log(resp);\r\n        // this.cashData =data;\r\n        console.log(data);\r\n        this.custID = data.customerId;\r\n        this.ifQRvariable = true;\r\n        this.hideAccNum = false;\r\n        this.hideDetails = true;\r\n        this.userName = data.holderName;\r\n        this.accountCurrency = data.accountCurrency;\r\n        this.transactionForm.controls.transactionCurrency.setValue(\r\n          data.accountCurrency?data.accountCurrency : ''\r\n        );\r\n      \r\n        this.transactionForm.controls.transactionAmount.setValue(\r\n          data.transactionAmount\r\n        );\r\n        this.transactionForm.controls.chequeType.setValue(\r\n          data.chequeType\r\n        );\r\n        this.transactionForm.controls.chequeNumber.setValue(\r\n          data.chequeNumber\r\n        );\r\n        this.currencyImage = 'currencys-flag-'+data.accountCurrency?data.accountCurrency.toLowerCase():''.toLowerCase();\r\n        console.log(this.currencyImage);\r\n        this.getChargeDetails(data.accountNumber, \"\");\r\n        // this.transactionForm.controls.accountType.setValue(resp.data.accountType);\r\n\r\n        // this.transactionForm.controls.accountNumber.setValue(resp.data.accountNumber);\r\n        // this.transactionForm.controls.accountCurrency.setValue(resp.data.accountCurrency);\r\n       \r\n      // });\r\n    // this.denomRequired='yes';\r\n  }\r\n  gettingallTansactionDetails(phoneNumber) {\r\n    this.phoneNumber = localStorage.getItem(\"phonenumFromLogin\");\r\n    this.apiService\r\n      .gettingTransactionDetails(this.phoneNumber)\r\n      .subscribe((allTransactionResp: any) => {\r\n        console.log(\"All Transaction Details\", allTransactionResp);\r\n\r\n        this.custID = allTransactionResp.customerId;\r\n        console.log(\"Cust\", this.accountCurrency);\r\n        this.custAccountData = allTransactionResp.custAccount;\r\n        this.accounttypeArray = [...this.custAccountData].filter(\r\n          ({ accountType }, index) =>\r\n            ![...this.custAccountData]\r\n              .map((obj) => obj.accountType)\r\n              .includes(accountType, index + 1)\r\n        );\r\n        console.log(this.accounttypeArray);\r\n        for (let i = 0; i < this.custAccountData.length; i++) {\r\n          if (this.custAccountData[i].status == \"APPROVED\") {\r\n            this.accountNoList.push(this.custAccountData[i]);\r\n          }\r\n        }\r\n        this.accountCurrency = this.accountNoList[0].accountCurrency;\r\n        console.log(this.accountNoList);\r\n        if (this.custAccountData && this.accountNoList.length <= 1) {\r\n          this.accountDropdown = false;\r\n          this.hideDetails = true;\r\n          this.hideAccNum = true;\r\n          const accTyp = allTransactionResp.custAccount[0].accountType;\r\n          // this.transactionForm.controls.accountType.setValue(accTyp);\r\n          this.custAccountNumber(this.accountNoList[0]);\r\n        } else {\r\n          this.accountDropdown = true;\r\n          this.hideDetails = true;\r\n          this.hideAccNum = true;\r\n          const accTyp = allTransactionResp.custAccount[0].accountType;\r\n          // this.transactionForm.controls.accountType.setValue(accTyp);\r\n          this.custAccountNumber(allTransactionResp.custAccount[0]);\r\n        }\r\n      });\r\n  }\r\n\r\n  custAccountNumber(custype) {\r\n    console.log(\"custype :: \", custype);\r\n    // this.isedit=false;\r\n    this.idList = [...this.custAccountData].filter(\r\n      (item) => item.accountType === custype.accountType\r\n    );\r\n    //  const defaultId = this.idList ? this.idList[0] : null;\r\n    console.log(\"idList :: \", this.idList);\r\n\r\n    this.accountNoList = [];\r\n    for (let i = 0; i < this.idList.length; i++) {\r\n      if (this.idList[i].status == \"APPROVED\") {\r\n        this.accountNoList.push(this.idList[i].accountId);\r\n      }\r\n    }\r\n    console.log(\"accountNoList :: \", this.accountNoList);\r\n    if (this.accountNoList.length <= 1) {\r\n      // this.cashwithdrawForm.controls.accountNumber.patchValue(this.accountNoList[0]);\r\n      this.flag1 = false;\r\n      // this.getData(this.accountNoList[0]);\r\n      // this.transactionForm.controls.accountNumber.setValue(this.accountNoList[0]);\r\n    } else {\r\n      // this.transactionForm.controls.accountNumber.setValue(this.accountNoList[0]);\r\n      this.flag1 = true;\r\n    }\r\n\r\n    //  this.cashwithdrawForm.controls.accountNumber.setValue(defaultId);\r\n    // this.cashwithdrawForm.controls.accountType.setValue(defaultId);\r\n    //  this.transactionForm.controls.accountCurrency.setValue(custype.accountCurrency);\r\n    //  this.transactionForm.controls.accountBranch.setValue(this.branch);\r\n    this.transactionForm.controls.transactionCurrency.setValue(\r\n      custype.accountCurrency\r\n    );\r\n    //this.cashwithdrawForm.controls.transactionAmount.setValue(custype.amount);\r\n    //  this.cashwithdrawForm.controls.accountType.setValue(custype.accountType);\r\n    console.log(\"AccountCurrency\", custype.accountCurrency);\r\n\r\n    this.selected = custype.accountCurrency;\r\n    this.curr = getCurrencySymbol(custype.accountCurrency, \"narrow\");\r\n\r\n    this.transactionForm.controls.transactionCurrency.setValue(\r\n      custype.accountCurrency\r\n    );\r\n\r\n    this.currencyImage =\r\n      \"currency-flag-\" + custype.accountCurrency.toLowerCase();\r\n    console.log(\"data :: \", this.idList[0]);\r\n    //  this.accountBal = this.idList[0].amount;\r\n    console.log(this.accountBal);\r\n    localStorage.setItem(\"AccountBal\", this.accountBal);\r\n    //  this.cashwithdrawForm.controls.accountNumber.setValue(this.idList[0].accountId);\r\n    this.custAmountBal(this.accountNoList[0]);\r\n    //  this.transactionForm.controls.accountBranch.setValue(custype.accountBranch);\r\n    this.getChargeDetails(this.accountNoList[0], custype.amount);\r\n  }\r\n  OnInput(event: any) {\r\n    this.transAmt = event.target.value;\r\n    console.log(event.target.value);\r\n    this.totalAmount = 0;\r\n    // this.denomRequired='yes';\r\n\r\n    // this.transactionForm.controls.transactionCurrency.setValue(custype.accountCurrency);\r\n   \r\n   \r\n    console.log('data :: ',this.idList[0]);\r\n  //  this.accountBal = this.idList[0].amount;\r\n   console.log(this.accountBal);\r\n   localStorage.setItem(\"AccountBal\",this.accountBal);\r\n  //  this.cashwithdrawForm.controls.accountNumber.setValue(this.idList[0].accountId);\r\n   this.custAmountBal(this.accountNoList[0]);\r\n   this.denomRequired='yes';\r\n  this.dataService.sendNavParam(this.denomRequired);\r\n  if(this.exchangerateResp){\r\n    this.transactionForm.controls.exchangeRate.setValue(this.exchangerateResp[0].sellRate);\r\n  }\r\n  this.dataService.sendtransactionFormData(this.transactionForm.value);\r\n  //  this.transactionForm.controls.accountBranch.setValue(custype.accountBranch);\r\n  //  this.getChargeDetails(this.accountNoList[0],custype.amount);\r\n  // }\r\n    // comma separator using changeDetector\r\n    const savedInput = this.transAmount;\r\n    // this.transAmount = '';\r\n    // this.changeDef.detectChanges();\r\n\r\n    let lastCharIsPoint = false;\r\n    if (savedInput.charAt(savedInput.length - 1) === \".\") {\r\n      lastCharIsPoint = true;\r\n    }\r\n    const num = savedInput.replace(/[^0-9.]/g, \"\");\r\n\r\n    this.transAmt = Number(num) || \"\";\r\n    this.transAmount = this.transAmt.toLocaleString(\"en-IN\");\r\n    if (lastCharIsPoint) {\r\n      this.transAmount = this.transAmount.concat(\".\");\r\n    }\r\n    this.changeDef.detectChanges();\r\n\r\n    this.balance = localStorage.getItem(\"AccountBal\");\r\n    if (parseFloat(this.balance) < parseFloat(this.transAmt)) {\r\n      console.log(\"Bigger\");\r\n      this.snack.open(\r\n        `Transaction Amount should not exceed than Account Balance`,\r\n        \"OK\",\r\n        {\r\n          duration: 2000,\r\n          verticalPosition: \"top\",\r\n          horizontalPosition: \"right\",\r\n          panelClass: ['snackbar'],\r\n        }\r\n      );\r\n      this.enableContinue = false;\r\n    } else {\r\n      this.enableContinue = true;\r\n    }\r\n    this.totalTransAmount =\r\n      Number(this.transAmt) +\r\n      Number(this.chargeDetails ? this.chargeDetails[0].amount : \"\");\r\n    this.transactionForm.controls.totalTransactionAmount.setValue(\r\n      this.totalTransAmount\r\n    );\r\n    this.cdr.markForCheck();\r\n    this.cdr.detectChanges();\r\n  }\r\n  custAmountBal(custNum) {\r\n    var account = this.idList.filter(function (record) {\r\n      if (record.accountId == custNum) {\r\n        return record;\r\n      }\r\n    });\r\n    console.log(account);\r\n    if (account.length > 0) {\r\n      this.accNum = account[0].accountId;\r\n      this.accountBal = account[0].amount;\r\n      this.selectedAccountInfo = account[0];\r\n    }\r\n\r\n    console.log(this.accountBal);\r\n    localStorage.setItem(\"AccountBal\", this.accountBal);\r\n  }\r\n  getChargeDetails(accountId, amount) {\r\n    this.apiService.fetchChargeDetails(accountId).subscribe((resp) => {\r\n      console.log(resp);\r\n      this.chargeDetails = resp;\r\n      this.transactionForm.controls.totalChargeAmount.setValue(\r\n        this.chargeDetails ? this.chargeDetails[0].amount : \"\"\r\n      );\r\n    });\r\n    if (this.cashData) {\r\n      setTimeout(() => {\r\n        this.totalTransAmount =\r\n          Number(this.cashData.transactionAmount) +\r\n          Number(this.chargeDetails[0].amount);\r\n        this.transactionForm.controls.totalTransactionAmount.setValue(\r\n          this.totalTransAmount\r\n        );\r\n      }, 1000);\r\n      this.cdr.markForCheck();\r\n      this.cdr.detectChanges();\r\n    } else {\r\n      console.log(this.chargeDetails);\r\n      amount = 0;\r\n      console.log(amount);\r\n      setTimeout(() => {\r\n        this.totalTransAmount =\r\n          Number(amount) +\r\n          Number(this.chargeDetails ? this.chargeDetails[0].amount : \"\");\r\n        console.log(this.totalTransAmount);\r\n        this.transactionForm.controls.totalTransactionAmount.setValue(\r\n          this.totalTransAmount\r\n        );\r\n      }, 1000);\r\n      this.cdr.markForCheck();\r\n      this.cdr.detectChanges();\r\n    }\r\n\r\n    // console.log(this.totalTransAmount);\r\n  }\r\n  totalAmountValue(cdForm) {\r\n    this.a=this.transactionForm.value.transactionAmount;\r\n    this.a=this.a.replace(/\\,/g,''); // 1125, but a string, so convert it to number\r\n    this.a=parseInt(this.a,10);\r\n\r\n\r\n    this.transactionForm.value.totalAmount =\r\n      ((cdForm.value.count2000 ? cdForm.value.count2000 * 2000 : 0) +\r\n        (cdForm.value.count500 ? cdForm.value.count500 * 500 : 0) +\r\n        (cdForm.value.count200 ? cdForm.value.count200 * 200 : 0) +\r\n        (cdForm.value.count100 ? cdForm.value.count100 * 100 : 0) +\r\n        (cdForm.value.count50 ? cdForm.value.count50 * 50 : 0) +\r\n        (cdForm.value.count20 ? cdForm.value.count20 * 20 : 0) +\r\n        (cdForm.value.count10 ? cdForm.value.count10 * 10 : 0) +\r\n        (cdForm.value.count1 ? cdForm.value.count1 * 1 : 0)\r\n      );\r\n        this.transactionForm.value.totalAmount = this.transactionForm.value.totalAmount;\r\n        console.log(this.transactionForm.value.totalAmount)\r\n        console.log(this.transactionForm.value.transactionAmount);\r\n        \r\n        this.transamount=this.transactionForm.value.transactionAmount;\r\n        this.totalAmount=this.transactionForm.value.totalAmount.toLocaleString('en-US');\r\n        \r\n          if(this.transamount != this.totalAmount){\r\n          this.enableBtn = false;\r\n        }\r\n        else{\r\n          this.enableBtn = true;\r\n        }\r\n\r\n           if((this.transamount > this.totalAmount) || (this.transamount < this.totalAmount)){\r\n          this.enableBtn1 = true;\r\n        }\r\n        else{\r\n          this.enableBtn1 = false;\r\n        }      \r\n        this.transactionForm.controls.totalAmount.setValue(this.transactionForm.value.totalAmount);\r\n        \r\n  }\r\n\r\n  setValueForWalkInCustomer(formCurrency) {\r\n    console.log(formCurrency,this.accountCurrency);\r\n    this.accountCurrency=formCurrency.currency;\r\n    this.transactionForm.controls.transactionCurrency.setValue(\r\n      formCurrency?.currency\r\n    );\r\n    this.currencyImage = 'currency-flag-'+formCurrency.currency.toLowerCase();\r\n    this.getChargeDetails(formCurrency.accountId, \"\");\r\n     console.log(this.currencyImage);\r\n    //  this.currencyImage = 'currency-flag-'+formCurrency?.currency.toLowerCase();\r\n  }\r\n}\r\n","<div class=\"section\">\r\n  <!-- <div class=\"form-title\">\r\n        <h3 class=\"card-title-text\">Transaction Information</h3>\r\n    </div> -->\r\n  <mat-card-title style=\"font-size: 15px; color: #004c97; margin-left: 1%\"\r\n    >Transaction Information</mat-card-title\r\n  >\r\n\r\n  <!-- <div class=\"content\"> -->\r\n  <form [formGroup]=\"transactionForm\" class=\"transaction_form\">\r\n    <div fxLayoutGap=\"50px\" fxLayout=\"column\">\r\n      <div\r\n        fxFlex=\"row wrap\"\r\n        fxLayoutGap=\"4%\"\r\n        fxFlex=\"100%\"\r\n        class=\"form_row_wrap\"\r\n        *ngIf=\"chqPage === 'Cheque Deposit' || chqPage === 'Cheque Withdrawal'\"\r\n      >\r\n        <mat-form-field\r\n          appearance=\"outline\"\r\n          style=\"border-radius: 12px\"\r\n          fxFlex=\"36%\"\r\n          *ngIf=\"showAccountNum\"\r\n        >\r\n          <mat-label class=\"totalAmount\">Cheque Type*</mat-label>\r\n\r\n          <mat-select formControlName=\"chequeType\">\r\n            <mat-option value=\"Self\">Self</mat-option>\r\n            <mat-option value=\"Bearer\">Bearer</mat-option>\r\n            <mat-option value=\"Banker\">Banker</mat-option>\r\n            <mat-option value=\"Traveller\">Traveller</mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n        <mat-form-field\r\n          appearance=\"outline\"\r\n          style=\"border-radius: 12px\"\r\n          fxFlex=\"60%\"\r\n          *ngIf=\"showAccountNum\"\r\n        >\r\n          <mat-label class=\"totalAmount\">Cheque Number*</mat-label>\r\n          <input\r\n            matInput\r\n            *ngIf=\"!phoneNumber\"\r\n            onlyNumber\r\n            maxlength=\"6\"\r\n            class=\"full-width\"\r\n            formControlName=\"chequeNumber\"\r\n          />\r\n          <input\r\n            matInput\r\n            *ngIf=\"phoneNumber\"\r\n            onlyNumber\r\n            maxlength=\"6\"\r\n            class=\"full-width\"\r\n            formControlName=\"chequeNumber\"\r\n          />\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <div\r\n        fxFlex=\"row wrap\"\r\n        class=\"form_row_wrap\"\r\n        fxLayoutGap=\"4%\"\r\n        fxFlex=\"100%\"\r\n      >\r\n        <mat-form-field\r\n          appearance=\"outline\"\r\n          style=\"border-radius: 12px\"\r\n          fxFlex=\"36%\"\r\n          *ngIf=\"showAccountNum\"\r\n        >\r\n          <mat-label>Transaction currency*</mat-label>\r\n          <div fxFlex=\"11%\">\r\n            <div class=\"currency-flag {{ currencyImage }}\"></div>\r\n          </div>\r\n          <input\r\n            matInput\r\n            type=\"text\"\r\n            *ngIf=\"!phoneNumber\"\r\n            [readonly]=\"true\"\r\n            formControlName=\"transactionCurrency\"\r\n          />\r\n          <mat-select\r\n            formControlName=\"transactionCurrency\"\r\n            *ngIf=\"phoneNumber\"\r\n            [disabled]=\"isedit\"\r\n          >\r\n            <mat-option\r\n              *ngFor=\"let country of countryValues; let i = index\"\r\n              (click)=\"onCountryChange(country)\"\r\n              [value]=\"country.currencyCode\"\r\n            >\r\n            <div fxLayout=\"row wrap\">\r\n              <span>{{ country.currencyCode }}</span>\r\n              <div style=\"margin-top: 3%;margin-left: 4%;\" class=\"currency-flag currency-flag-{{\r\n                addCurrencyImage(country.currencyCode)\r\n              }} alignImage\">\r\n           \r\n            </div>\r\n              <!-- <div\r\n                class=\"currency-flag currency-flag-{{\r\n                  addCurrencyImage(country.currencyCode)\r\n                }} alignImage\"\r\n              >\r\n            </div> -->\r\n            </div>\r\n              <!-- <div fxLayout=\"row\"  style=\"background-color: #004c97;\">\r\n                <div>{{ country.currencyCode }}</div>\r\n                  <div\r\n                    class=\"currency-flag currency-flag-{{\r\n                      addCurrencyImage(country.currencyCode)\r\n                    }} alignImage\"\r\n                  >\r\n                </div>\r\n              </div> -->\r\n            </mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n        <mat-form-field\r\n          appearance=\"outline\"\r\n          style=\"border-radius: 12px\"\r\n          fxFlex=\"36%\"\r\n          *ngIf=\"!showAccountNum\"\r\n        >\r\n          <mat-label>Transaction currency*</mat-label>\r\n          <div fxFlex=\"11%\">\r\n            <div class=\"currency-flag {{ currencyImage }}\"></div>\r\n          </div>\r\n\r\n          <mat-select\r\n            formControlName=\"transactionCurrency\"\r\n            placeholder=\"Select Transaction Currency\"\r\n          >\r\n            <mat-option\r\n              *ngFor=\"let country of countryValues; let i = index\"\r\n              (click)=\"onCountryChange(country)\"\r\n              [value]=\"country.currencyCode\"\r\n            >\r\n            <div fxLayout=\"row wrap\">\r\n              <span>{{ country.currencyCode }}</span>\r\n              <div style=\"margin-top: 3%;margin-left: 4%;\" class=\"currency-flag currency-flag-{{\r\n                addCurrencyImage(country.currencyCode)\r\n              }} alignImage\">\r\n\r\n            </div>\r\n                  <!-- <div\r\n                    class=\"currency-flag currency-flag-{{\r\n                      addCurrencyImage(country.currencyCode)\r\n                    }} alignImage\"\r\n                  ></div> -->\r\n                </div>\r\n              <!-- </div> -->\r\n            </mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n        <mat-form-field\r\n          appearance=\"outline\"\r\n          style=\"border-radius: 12px\"\r\n          fxFlex=\"60%\"\r\n          *ngIf=\"!showAccountNum\"\r\n        >\r\n          <mat-label>Transaction amount *</mat-label>\r\n          <input\r\n            matInput\r\n            #myRef\r\n            [(ngModel)]=\"transAmount\"\r\n            formControlName=\"transactionAmount\"\r\n            [value]=\"transAmt | number: '2.'\"\r\n            (keyup)=\"OnInput($event)\"\r\n            (focus)=\"clicked($event)\"\r\n          />\r\n          <mat-error\r\n            *ngIf=\"transactionForm.get('transactionAmount').errors?.min\"\r\n          >\r\n            Amount must be greater than zero\r\n          </mat-error>\r\n        </mat-form-field>\r\n        <mat-form-field\r\n          appearance=\"outline\"\r\n          style=\"border-radius: 12px\"\r\n          fxFlex=\"60%\"\r\n          *ngIf=\"showAccountNum\"\r\n        >\r\n          <mat-label>Transaction amount *</mat-label>\r\n          <input\r\n            matInput\r\n            type=\"text\"\r\n            *ngIf=\"!phoneNumber\"\r\n            [readonly]=\"true\"\r\n            formControlName=\"transactionAmount\"\r\n          />\r\n          <input\r\n            matInput\r\n            class=\"full-width\"\r\n            *ngIf=\"phoneNumber\"\r\n            [(ngModel)]=\"transAmount\"\r\n            formControlName=\"transactionAmount\"\r\n            [value]=\"transAmt | number: '1.'\"\r\n            (keyup)=\"OnInput($event)\"\r\n            [readonly]=\"isedit\"\r\n          />\r\n          <mat-error\r\n            *ngIf=\"transactionForm.get('transactionAmount').errors?.min\"\r\n          >\r\n            Amount must be greater than zero\r\n          </mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n    </div>\r\n\r\n    <div>\r\n      <div fxLayout=\"row\" style=\"padding: 0 1rem\">\r\n        <div\r\n          *ngIf=\"\r\n            chqPage === 'Cheque Deposit' || chqPage === 'Cheque Withdrawal'\r\n          \"\r\n        >\r\n          <div\r\n            fxLayoutGap=\"5%\"\r\n            *ngIf=\"transactionForm.get('chequeType').value == 'Bearer'\"\r\n          >\r\n            <mat-form-field\r\n              appearance=\"outline\"\r\n              style=\"border-radius: 12px\"\r\n              fxFlex=\"100%\"\r\n            >\r\n              <mat-label>Account Number</mat-label>\r\n              <input\r\n                type=\"text\"\r\n                formControlName=\"accountNumber\"\r\n                (change)=\"\r\n                  fetchByAccountNum(accountForm.get('accountNumber').value)\r\n                \"\r\n                placeholder=\"Account Number\"\r\n                matInput\r\n              />\r\n            </mat-form-field>\r\n          </div>\r\n          <div\r\n            fxLayoutGap=\"5%\"\r\n            *ngIf=\"\r\n              transactionForm.get('chequeType').value == 'Banker' ||\r\n              transactionForm.get('chequeType').value == 'Traveller'\r\n            \"\r\n          >\r\n            <mat-form-field\r\n              appearance=\"outline\"\r\n              style=\"border-radius: 12px\"\r\n              fxFlex=\"100%\"\r\n              class=\"mat_form_field_margin\"\r\n            >\r\n              <mat-label>Issuing Bank</mat-label>\r\n              <input\r\n                type=\"text\"\r\n                formControlName=\"issuingbank\"\r\n                placeholder=\"Issuing Bank\"\r\n                matInput\r\n              />\r\n            </mat-form-field>\r\n          </div>\r\n        </div>\r\n\r\n        <div\r\n          fxLayout=\"column wrap\"\r\n          fxFlex=\"100%\"\r\n          class=\"mat_form_field_margin\"\r\n          *ngIf=\"\r\n            transactionForm.get('transactionCurrency').value != accountCurrency\r\n          \"\r\n        >\r\n          <mat-form-field fxFlex=\"35%\" appearance=\"outline\">\r\n            <input\r\n              matInput\r\n              formControlName=\"negotiatedRate\"\r\n              placeholder=\"Negotiated rate\"\r\n            />\r\n            <mat-label>Negotiated Rate</mat-label>\r\n          </mat-form-field>\r\n        </div>\r\n\r\n        <mat-form-field\r\n          appearance=\"outline\"\r\n          style=\"border-radius: 12px\"\r\n          class=\"mat_form_field_margin\"\r\n          fxFlex=\"33%\">\r\n          <input\r\n            matInput\r\n            readonly\r\n            formControlName=\"totalChargeAmount\"\r\n            placeholder=\"Total Charge Amount\"\r\n          />\r\n          <mat-label>Total Charge Amount</mat-label>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field fxFlex=\"33%\" appearance=\"outline\" class=\"mat_form_field_margin\" style=\"border-radius: 12px; position: relative;\" fxLayoutGap=\"5%\">\r\n          <input\r\n            matInput\r\n            fxFlex=\"95\"\r\n            type=\"text\"\r\n            readonly\r\n            onlyNumber\r\n            formControlName=\"totalTransactionAmount\"\r\n            placeholder=\"Total Transaction Amount\"\r\n          />\r\n          <mat-label>Total Transaction Amount</mat-label>\r\n          <div class=\"tooltip\">\r\n            <img  fxflex=\"5\" width=\"80%\" [src]=\"'assets/images/info.svg'\" />\r\n            <div class=\"tooltiptext\">\r\n              <p\r\n                class=\"totalAmount textcolor\"\r\n                style=\"margin-top: 10px; margin-bottom: 6px\"\r\n              >\r\n                Transaction Amount:{{\r\n                  transactionForm.get('transactionAmount').value\r\n                }}\r\n              </p>\r\n              <p class=\"totalAmount textcolor\">\r\n                Total Charge Amount:{{\r\n                  transactionForm.get('totalChargeAmount').value\r\n                }}\r\n              </p>\r\n              <hr />\r\n              <p class=\"totalAmount textcolor\" style=\"margin-right: 10px\">\r\n                Total Transaction Amount:{{\r\n                  transactionForm.get('totalTransactionAmount').value\r\n                }}\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </mat-form-field>\r\n      </div>\r\n      <div\r\n        *ngIf=\"\r\n          transactionForm.get('transactionCurrency').value != accountCurrency\r\n        \" formControlName=\"exchangeRate\"\r\n      >\r\n        <p class=\"hint\" >Exchange rate : {{exchangerateResp? exchangerateResp[0].sellRate :''}}</p>\r\n      </div>\r\n      <div class=\"errormsge\" *ngIf=\"\r\n      transactionForm.get('transactionCurrency').value != accountCurrency\">\r\n    \r\n        <img src=\"assets/images/exchangemessageicon.png\" alt=\"\">\r\n        <div class=\"errortext\">\"Exchange rate may be changed at the time of transaction\"</div>\r\n      </div>\r\n      <!-- <div fxLayout=\"row wrap\">\r\n                <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-16\">\r\n                    <div class=\"pb-16\">\r\n                        <mat-form-field class=\"full-width\" appearance=\"outline\">\r\n                            <mat-label>Email</mat-label>\r\n                            <input matInput type=\"email\" name=\"email\" formControlName=\"email\" placeholder=\"Your Email\"\r\n                                value=\"\">\r\n                        </mat-form-field>\r\n                        <small\r\n                            *ngIf=\"transactionForm.controls['email'].hasError('required') && transactionForm.controls['email'].touched\"\r\n                            class=\"form-error-msg\"> Email is required </small>\r\n                        <small\r\n                            *ngIf=\"transactionForm.controls['email'].hasError('email') && transactionForm.controls['email'].touched\"\r\n                            class=\"form-error-msg\"> Invaild email address </small>\r\n                    </div>\r\n                </div>\r\n\r\n                <div fxFlex=\"100\" fxFlex.gt-xs=\"50\">\r\n                    <div class=\"pb-16\">\r\n                        <mat-form-field class=\"full-width\" appearance=\"outline\">\r\n                            <mat-label>Password</mat-label>\r\n                            <input type=\"password\" name=\"password\" matInput formControlName=\"password\"\r\n                                placeholder=\"Password\" value=\"\">\r\n                        </mat-form-field>\r\n                        <small\r\n                            *ngIf=\"transactionForm.controls['password'].hasError('required') && transactionForm.controls['password'].touched\"\r\n                            class=\"form-error-msg\"> Password is required </small>\r\n                    </div>\r\n\r\n                </div>\r\n            </div> -->\r\n    </div>\r\n  </form>\r\n  <!-- </div> -->\r\n</div>\r\n","import { ChangeDetectorRef, Component, ElementRef, Input, OnInit, Renderer2, ViewChild } from '@angular/core';\r\nimport { Country } from '@angular-material-extensions/select-country';\r\nimport { getCurrencySymbol } from '@angular/common';\r\nimport { FormGroup, FormControl, NgForm, FormBuilder, Validators } from '@angular/forms';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { otpModel } from 'app/shared/models/otp.model';\r\nimport { TokenObjects } from 'app/shared/models/tokenObjects';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { DialogService } from 'app/shared/services/Dialog/dialog.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { OtpVerifyComponent } from '../otp-verify/otp-verify.component';\r\n\r\n@Component({\r\n  selector: 'app-newcashwithdrawal',\r\n  templateUrl: './newcashwithdrawal.component.html',\r\n  styleUrls: ['./newcashwithdrawal.component.scss']\r\n})\r\nexport class NewcashwithdrawalComponent implements OnInit {\r\n  cashWithdrawal : any = 'Cash Withdrawal';\r\n  cashwithdrawForm: FormGroup;\r\n\r\n  @Input() tokenResp : any;\r\n  operation : string;\r\n \r\n  countryFormControl = new FormControl();\r\n  defaultValue: Country = {\r\n    name: 'Deutschland',\r\n    alpha2Code: 'DE',\r\n    alpha3Code: 'DEU',\r\n    numericCode: '276',\r\n    callingCode: '+49'\r\n  };\r\n  ifQRvariable = false;\r\n  index: string[];\r\n  cashWithdrawResponse: any;\r\n  productCode = \"CHW\";\r\n  tokenOrigin = \"Kiosk\";\r\n  custPref = \"N\";\r\n  entityCode=\"ENTCD\";\r\n  bankCode = \"BNKC\" ;\r\n  tokenBranch = \"1234\" ;\r\n  accountNum: string;\r\n  accountBal: any;\r\n  phoneNumber: string;\r\n  errorStatus: number;\r\n  custAccountData: any;\r\n  countryValues: any;\r\n  accounttypeArray =[];\r\n\r\n  @ViewChild('cdForm') cdForm: NgForm;\r\n\r\n  \r\n  idList = [];\r\n  noList: any[];\r\n  accNum: any;\r\n  denomCodeArray: any[] = [\r\n    { key: 'count2000', value: 2000 },\r\n    { key: 'count500', value: 500 },\r\n    { key: 'count200', value: 200 },\r\n    { key: 'count100', value: 100 },\r\n    { key: 'count50', value: 50 },\r\n    { key: 'count20', value: 20 },\r\n    { key: 'count10', value: 10 },\r\n    { key: 'count1', value: 1 }\r\n\r\n  ];\r\n  totalAmount: any;\r\n  transamount: any;\r\n  a: any;\r\n  tokenObjects =new TokenObjects();\r\n  accNumber: any;\r\n  appointmentId:any;\r\n  tokResponse: any;\r\n  tokenNum: any;\r\n  estimatedTime: any;\r\n  transAmt: any;\r\n  balance: string;\r\n  enableContinue: boolean=true;\r\n  isedit:boolean=true;\r\n  accountCurrency: any;\r\n  curr: string;\r\n  transAmount:string;\r\n  currencyImage: any = \"\";\r\n  custID: any;\r\n  qrData: any;\r\n  customerID: any;\r\n  selected: string;\r\n  userName: string;\r\n  branchNameFromLogin: string;\r\n  branchName: string;\r\n  arrayAccountBranch: any;\r\n  trasactionBranches: any;\r\n  branchData: any;\r\n  branch: any;\r\n  resultStatus: any;\r\n  // accountNoList[]: any[];\r\n  accountNoList = [];\r\n  selectedAccountInfo: any;\r\n  showAccountNum : boolean = true;\r\n  showAccoutType : boolean = true;\r\n  custValidation: string;\r\n  accountNumber: string;\r\n  custmerID: any;\r\n  phonenum: any;\r\n  oTpModel = new otpModel();\r\n  cashwithDrwValues: any;\r\n  cashwithDrwform: any;\r\n  cashwithDrwType: any;\r\n  enableBtn: boolean = true;\r\n  enableBtn1: boolean = false;\r\n  accountNum1: any[];\r\n  filteredAccoun: any[];\r\n  accountDropdown: boolean = false;\r\n  flag1: boolean=false;\r\n  denomRequired: any = '';\r\n  hideDetails:boolean=false;\r\n  hideAccNum:boolean=false;\r\n  qrBranchCode: any;\r\n  custNameFromLogin: string;\r\n  totalTransAmount: number;\r\n  chargeDetails: any;\r\n  cashData: any;\r\n  transBranch: string;\r\n\r\n  constructor\r\n  (\r\n    private router : Router,\r\n    private formBuilder: FormBuilder, \r\n    private dialogService : DialogService,\r\n    private apiService:ApiService,\r\n    private fb: FormBuilder,\r\n    private ls: LocalStoreService,\r\n    private snack: MatSnackBar,\r\n    private changeDef: ChangeDetectorRef,\r\n    private elRef: ElementRef,\r\n    private renderer: Renderer2,\r\n    private dialog: MatDialog,\r\n    private cdr:ChangeDetectorRef,\r\n    ) { }\r\n  ngOnInit() {\r\n    this.phoneNumber = localStorage.getItem(\"phonenumFromLogin\");\r\n    this.appointmentId = this.ls.getItem(\"TransactionType\");\r\n    this.transBranch=localStorage.getItem(\"TRANSACTIONBRANCH\") ;\r\n    \r\n    \r\n    this.qrData = JSON.parse(JSON.parse(localStorage.getItem('scannerData')));\r\n    console.log(\"QRData\", this.qrData);\r\n    this.cashwithdrawForm = this.fb.group({\r\n    transactionId:['', [Validators.required]],\r\n    customerId:['', [Validators.required]],\r\n    accountNumber:['', [Validators.required]],\r\n    accountType:['', [Validators.required]],\r\n    holderName :['', [Validators.required]], \r\n    accountCurrency:['', [Validators.required]],\r\n    transactionCurrency: ['', [Validators.required]],\r\n    transactionAmount:['', [Validators.required, Validators.min(.1)]],\r\n    accountBalance:[''],\r\n    productCode:['CHW',[Validators.required]],\r\n    tokenOrigin : ['Kiosk',[Validators.required]],\r\n    exchangeRate:['', [Validators.required]],\r\n    accountAmount:['', [Validators.required]],\r\n    totalChargeAmount:['', [Validators.required]],\r\n    totalTransactionAmount:['',[Validators.required]],\r\n    narrative:['', [Validators.required]],\r\n    denomination:[null, [Validators.required]],\r\n    totalAmount:['', [Validators.required]],\r\n    entityCode:[this.entityCode,[Validators.required]],\r\n    bankCode:[this.bankCode,[Validators.required]],\r\n    tokenBranch:[this.tokenBranch,[Validators.required]],\r\n    customerCategory:[this.custPref,[Validators.required]],\r\n    tokenNumber:['', [Validators.required]],\r\n    estimatedWaitTime:['', [Validators.required]],\r\n     accountBranch: ['', [Validators.required]],\r\n      transactionBranch:['', [Validators.required]]\r\n    //transAmt: ['', [Validators.required, Validators.pattern(/\\B(?=(\\d{3})+(?!\\d))/g.',')]],\r\n    \r\n    });\r\n    this.custValidation = localStorage.getItem(\"customerValidation\");\r\n    this.custNameFromLogin = localStorage.getItem(\"FromLogin\");\r\n    if(this.custValidation == \"New Customer\"){\r\n      this.hideAccNum=false;\r\n      this.showAccountNum = false;\r\n      this.showAccoutType = false;\r\n    } \r\n    if(this.custNameFromLogin!=null){\r\n      this.showAccountNum=false;\r\n    } \r\n     console.log(\"CWH :: \" + this.cashwithdrawForm.value);\r\n     if(this.phoneNumber && this.custNameFromLogin==null && this.appointmentId==null){\r\n       this.ifQRvariable = false;\r\n      this.gettingallTansactionDetails(this.phoneNumber);\r\n      }\r\n      // else{\r\n        if(this.qrData!=null){\r\n        // ;\r\n        this.ifQRvariable = true;\r\n        this.hideAccNum=false;\r\n        console.log(\"Account\", this.qrData);\r\n        this.cashwithdrawForm.controls.holderName.setValue(this.qrData.holderName);\r\n        this.cashwithdrawForm.controls.accountType.setValue(this.qrData.accountType);\r\n        this.cashwithdrawForm.controls.accountNumber.setValue(this.qrData.accountId);\r\n        this.getChargeDetails(this.qrData.accountId,'');\r\n        this.cashwithdrawForm.controls.transactionAmount.setValue(this.qrData.transactionAmount);\r\n        this.cashwithdrawForm.controls.accountCurrency.setValue(this.qrData.accountCurrency);\r\n        this.cashwithdrawForm.controls.transactionCurrency.setValue(this.qrData.transactionCurrency);\r\n        this.accountBal = this.qrData.accountBalance;\r\n        this.customerID = this.qrData.customerId;\r\n        this.accountCurrency = this.qrData.accountCurrency;\r\n        this.currencyImage = 'currency-flag-'+this.qrData.accountCurrency.toLowerCase();\r\n        this.currencyImage = 'currency-flag-'+this.qrData.transactionCurrency.toLowerCase();\r\n        if(this.qrData.transactionBranch !=null && this.qrData.transactionBranch !=''){\r\n          this.cashwithdrawForm.controls.transactionBranch.setValue(this.qrData.transactionBranch);\r\n        }else{\r\n          this.cashwithdrawForm.controls.transactionBranch.setValue('Kasturi Nagar');\r\n        }\r\n        \r\n        this.getAccountBranch();\r\n      }\r\n     this.getCountrynameValues();\r\n     this.getAccountBranch();\r\n    this.gettransactionBranch(\"account_branch\");\r\n    this.getBankInformation(\"KN\")\r\n    if(this.appointmentId.data.appointmentId){\r\n      this.cashWithdrawlData();\r\n    }\r\n  }\r\n  fetchByAccountNum(accNum){\r\n    this.cashwithdrawForm.controls.transactionAmount.reset();\r\n    this.cashwithdrawForm.controls.totalTransactionAmount.setValue(this.cashwithdrawForm.controls.totalChargeAmount.value);\r\n    console.log(\"Account Numebr\",accNum);\r\n    this.ifQRvariable = true;\r\n    this.hideAccNum = false;\r\n    this.hideDetails=true;\r\n    this.apiService.fetchByaccNum(accNum).subscribe((res: any) => {\r\n      console.log('Account Number Rsp', res);\r\n      this.getChargeDetails(accNum,'');\r\n      this.userName = res.accHolderName;\r\n      this.accountBal = res.accBalance;\r\n      this.custmerID = res.customerId;\r\n      this.accountNumber = res.accountId;\r\n      this.accountCurrency = res.accountCurrency\r\n\r\n     \r\n      this.curr = getCurrencySymbol(res.currency, \"narrow\");\r\n      this.cashwithdrawForm.controls.accountType.setValue(res.accountType);\r\n      this.cashwithdrawForm.controls.accountBranch.setValue(res.accountBranch);\r\n      this.cashwithdrawForm.controls.holderName.setValue(this.userName); \r\n      this.getCountrynameValues();\r\n      // this.currencyImage = 'currency-flag-'+res.currency.toLowerCase();\r\n      this.currencyImage = 'currency-flag-'+res.currency.toLowerCase();\r\n      this.cashwithdrawForm.controls.transactionCurrency.setValue(res.currency);\r\n      this.cashwithdrawForm.controls.accountCurrency.setValue(res.currency);\r\n      this.accountCurrency = res.currency\r\n      console.log(this.ifQRvariable);\r\n      this.custAmountBal(accNum);\r\n      this.cashwithdrawForm.controls.transactionBranch.setValue('Kasturi Nagar');\r\n      this.apiService.fetchByaccDeatilsoncustId(res.customerId).subscribe((resp: any) => {\r\n        this.phonenum = resp[0].phoneNumber;\r\n        localStorage.setItem('otpPhoneNum', this.phonenum);\r\n      }) \r\n  });\r\n\r\n}\r\n\r\n  \r\n//  numberWithCommas = (transAmt) => {\r\n//   return transAmt.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\r\n//   console.log(transAmt);\r\n//   }\r\n  gettransactionBranch(key: string) {\r\n    this.apiService.getTransactionBranch(key)\r\n      .subscribe(branches => {\r\n        console.log('branches :: ', branches);\r\n        this.trasactionBranches = branches;\r\n       \r\n      })\r\n  }\r\n  getAccountBranch() {\r\n    this.apiService.getBranchforKiosk()\r\n      .subscribe((data: any) => {\r\n        this.branchData = data;\r\n          console.log( this.branchData);\r\n          data.forEach((element,index)=>{\r\n            this.branch = data[index].branchName;\r\n            console.log(this.branch);\r\n            // this.cashwithdrawForm.controls.accountBranch.setValue(this.branch);\r\n         });      \r\n      });\r\n  }\r\n\r\n  \r\n  getCountrynameValues() {\r\n    this.apiService.getCountryValues().subscribe((allCountryValues : any)=> {\r\n      this.countryValues = allCountryValues;\r\n      console.log(this.countryValues);\r\n      });\r\n  }\r\n\r\n\r\n\r\n  onCountrySelected($event: Country): void {\r\n    // console.log($event.alpha3Code);\r\n  }\r\n  gettingallTansactionDetails(phoneNumber) {\r\n    \r\n    this.phoneNumber = localStorage.getItem(\"phonenumFromLogin\");\r\n    this.apiService.gettingTransactionDetails(this.phoneNumber).subscribe((allTransactionResp : any)=> {\r\n    console.log(\"All Transaction Details\",allTransactionResp);\r\n    this.accountCurrency = allTransactionResp.accountCurrency;\r\n    this.userName = (allTransactionResp.firstName ? allTransactionResp.firstName + ' ' : ' ') + \r\n    (allTransactionResp.middleName ? allTransactionResp.middleName + ' ' : ' ') +\r\n     (allTransactionResp.lastName ? allTransactionResp.lastName : ' ');\r\n    this.cashwithdrawForm.controls.holderName.setValue(this.userName);\r\n    // this.setBalance(allTransactionResp.custAccount);\r\n    this.custID = allTransactionResp.customerId;\r\n    console.log(\"Cust\", this.custID);\r\n    this.custAccountData = allTransactionResp.custAccount;\r\n    this.accounttypeArray = [...this.custAccountData].filter(({accountType},index )=> \r\n    ![...this.custAccountData].map(obj=> obj.accountType).includes(accountType, index +1));\r\n    console.log(this.accounttypeArray)\r\n    for(let i = 0; i < this.custAccountData.length; i++){\r\n      if(this.custAccountData[i].status == 'APPROVED'){\r\n        this.accountNoList.push(this.custAccountData[i]);    \r\n      }\r\n    }\r\n    console.log(this.accountNoList);\r\n    if(this.custAccountData && this.accountNoList.length<=1){\r\n      this.accountDropdown=false;\r\n      this.hideDetails=true;\r\n      this.hideAccNum=true;\r\n      const accTyp = allTransactionResp.custAccount[0].accountType;\r\n      this.cashwithdrawForm.controls.accountType.setValue(accTyp);\r\n      this.custAccountNumber(this.accountNoList[0]);\r\n    }else{\r\n      this.accountDropdown=true;\r\n      this.hideDetails=true;\r\n      this.hideAccNum=true;\r\n      const accTyp = allTransactionResp.custAccount[0].accountType;\r\n      this.cashwithdrawForm.controls.accountType.setValue(accTyp);\r\n      this.custAccountNumber(allTransactionResp.custAccount[0]);\r\n    }\r\n  \r\n    });\r\n\r\n    \r\n  }\r\n  getAccountType(event:any){\r\n    this.cashwithdrawForm.controls.transactionAmount.reset();\r\n    this.cashwithdrawForm.controls.totalTransactionAmount.setValue(this.cashwithdrawForm.controls.totalChargeAmount.value);\r\n    this.accountNoList=[];\r\n    this.isedit=false;\r\n    this.accountNum1=[...this.custAccountData].filter((accounNum,index)=>{\r\n      return accounNum.accountType==event;\r\n    });\r\n    // this.accountNoList=this.accountNum1\r\n    // this.accountNoList=this.accountNum1.map((acccount)=>\r\n    // {\r\n    //   return acccount.accountId\r\n    // });\r\n    for(let i = 0; i < this.custAccountData.length; i++){\r\n      if(this.custAccountData[i].status == 'APPROVED' && this.custAccountData[i].accountType == event){\r\n        this.accountNoList.push(this.custAccountData[i].accountId);    \r\n      }\r\n    }\r\n   // this.accountNoList.push(12233)\r\n   console.log(this.accountNoList)\r\n   \r\n    if(this.accountNoList.length<=1){\r\n      // this.cashwithdrawForm.controls.accountNumber.patchValue(this.accountNoList[0]);\r\n      this.flag1=false; \r\n      this.getData(this.accountNoList[0]);\r\n     \r\n      this.cashwithdrawForm.controls.accountNumber.setValue(this.accountNoList[0]);\r\n    }\r\n    else{\r\n      this.getData(this.accountNoList[0]);\r\n      this.flag1=true;   \r\n    }\r\n    this.getChargeDetails(this.accountNoList[0],'');\r\n  }\r\n  custAccountNumber(custype){\r\n    console.log('custype :: ',custype);\r\n    this.isedit=false;\r\n   this.idList = [...this.custAccountData].filter(item => item.accountType === custype.accountType);\r\n  //  const defaultId = this.idList ? this.idList[0] : null;\r\n   console.log(\"idList :: \", this.idList);\r\n    this.accountNoList = [];\r\n   for(let i = 0; i < this.idList.length; i++){\r\n      if(this.idList[i].status == 'APPROVED'){\r\n        this.accountNoList.push(this.idList[i].accountId);    \r\n      }\r\n    }\r\n    console.log('accountNoList :: ',this.accountNoList);\r\n    if(this.accountNoList.length<=1){\r\n      // this.cashwithdrawForm.controls.accountNumber.patchValue(this.accountNoList[0]);\r\n      this.flag1=false; \r\n      // this.getData(this.accountNoList[0]);\r\n      this.cashwithdrawForm.controls.accountNumber.setValue(this.accountNoList[0]);\r\n    }\r\n    else{\r\n      this.cashwithdrawForm.controls.accountNumber.setValue(this.accountNoList[0]);\r\n      this.flag1=true;   \r\n    }\r\n  \r\n  //  this.cashwithdrawForm.controls.accountNumber.setValue(defaultId);\r\n  // this.cashwithdrawForm.controls.accountType.setValue(defaultId);\r\n   this.cashwithdrawForm.controls.accountCurrency.setValue(custype.accountCurrency);\r\n   this.cashwithdrawForm.controls.accountBranch.setValue(this.branch);\r\n   //this.cashwithdrawForm.controls.transactionAmount.setValue(custype.amount);\r\n  //  this.cashwithdrawForm.controls.accountType.setValue(custype.accountType);\r\n   console.log(\"AccountCurrency\",custype.accountCurrency);\r\n   \r\n   this.selected=custype.accountCurrency;\r\n    this.curr = getCurrencySymbol(custype.accountCurrency, \"narrow\");\r\n    this.cashwithdrawForm.controls.transactionCurrency.setValue(custype.accountCurrency);\r\n   \r\n    this.currencyImage = 'currency-flag-'+custype.accountCurrency.toLowerCase();\r\n    console.log('data :: ',this.idList[0]);\r\n  //  this.accountBal = this.idList[0].amount;\r\n   console.log(this.accountBal);\r\n   localStorage.setItem(\"AccountBal\",this.accountBal);\r\n  //  this.cashwithdrawForm.controls.accountNumber.setValue(this.idList[0].accountId);\r\n   this.custAmountBal(this.accountNoList[0]);\r\n   this.cashwithdrawForm.controls.accountBranch.setValue(custype.accountBranch);\r\n   this.getChargeDetails(this.accountNoList[0],custype.amount);\r\n  }\r\n  getData(custNum){\r\n    this.hideDetails=true;\r\n    this.hideAccNum=true;\r\n    let val=this.accountNum1.filter((value)=>{\r\n    return value.accountId==custNum}\r\n    )\r\n    \r\n    this.idList = [...this.custAccountData].filter(item => item.accountType === val[0].accountType);\r\n    this.cashwithdrawForm.controls.accountCurrency.setValue(val[0].accountCurrency);\r\n   this.cashwithdrawForm.controls.accountBranch.setValue(this.branch);\r\n   this.selected=val[0].accountCurrency;\r\n   this.accountCurrency=val[0].accountCurrency;\r\n   this.curr = getCurrencySymbol(val[0].accountCurrency, \"narrow\");\r\n   this.cashwithdrawForm.controls.transactionCurrency.setValue(val[0].accountCurrency);\r\n  \r\n   this.currencyImage = 'currency-flag-'+val[0].accountCurrency.toLowerCase();\r\n  this.accountBal = val[0].amount;\r\n  localStorage.setItem(\"AccountBal\",this.accountBal);\r\n  this.cashwithdrawForm.controls.accountNumber.setValue(val[0].accountId);\r\n\r\n  this.custAmountBal(val[0].accountId);\r\n  this.cashwithdrawForm.controls.accountBranch.setValue(val[0].accountBranch);\r\n  this.getChargeDetails(val[0].accountId,'')\r\n  }\r\n  custAmountBal(custNum){\r\n    var account = this.idList.filter(function(record) {  \r\n      if(record.accountId == custNum){\r\n      return record;\r\n    }\r\n  });\r\n  if(account){\r\n    this.accNum = account[0].accountId;\r\n    this.accountBal = account[0].amount;\r\n    this.selectedAccountInfo=account[0]\r\n  }\r\n  \r\n    console.log(this.accountBal);\r\n    localStorage.setItem(\"AccountBal\",this.accountBal);\r\n  }\r\n  \r\n  getOTP(formData, type, cdForm){\r\n    this.cashwithDrwValues =formData;\r\n    this.cashwithDrwType = type;\r\n    this.cashwithDrwform = cdForm; \r\n    this.oTpModel.source = 'customer';\r\n    this.oTpModel.source_key = 'mobile';\r\n    this.oTpModel.source_value = this.phonenum;\r\nlet amount= 50000;\r\nlet transamountwithoutcomma=this.cashwithDrwValues.transactionAmount.replace(/,/g, \"\");\r\nconsole.log( transamountwithoutcomma);\r\nif(transamountwithoutcomma > amount){\r\n  this.apiService.getOtp(this.oTpModel).subscribe(otpResp => {\r\n    if (otpResp) {\r\n      this.openDialogOTP(this.phonenum);\r\n      this.snack.open(\"An OTP has been sent to the Registered Mobile Number.\" , \"\", {\r\n        duration: 4000,\r\n        verticalPosition: 'top',\r\n        horizontalPosition: 'right'\r\n      });\r\n    }\r\n  })\r\n}\r\nelse{\r\n  this.getOTPforSave(this.cashwithDrwValues,this.cashwithDrwType,this.cashwithDrwform);\r\n}\r\n  \r\n  }\r\n \r\n  openDialogOTP(numbr) {\r\n    const dialogRef = this.dialog.open(OtpVerifyComponent, {\r\n      data: { number: numbr, type: \"numbr\" },\r\n      disableClose: true,\r\n    });\r\n    dialogRef.afterClosed().subscribe(submit => {\r\n      console.log(\"submit\",submit);\r\n      if(submit){\r\n        this.getOTPforSave(this.cashwithDrwValues,this.cashwithDrwType,this.cashwithDrwform);\r\n      }\r\n     });\r\n  }\r\n  getOTPforSave(formData,type,cdForm){\r\n    let denominationData: any = {};\r\n        let denominationDataArray: any[] = [];\r\n        if(this.denomRequired == 'yes'){\r\n        for (let i = 0; i < this.denomCodeArray.length; i++) {\r\n          if (cdForm.value[this.denomCodeArray[i].key]) {\r\n            // denominationData.transactionId = this.cashdepositFor;\r\n            denominationData.denominationKey = this.denomCodeArray[i].value;\r\n            denominationData.denominationValue = +cdForm.value[this.denomCodeArray[i].key];\r\n            denominationData.currency = this.cashwithdrawForm.value.transactionCurrency;\r\n            // denominationData.amountAvailiable = 15200 - (cdForm.value[this.denomCodeArray[i].key] * this.denomCodeArray[i].value);\r\n            denominationDataArray.push(denominationData);\r\n            console.log(denominationDataArray)\r\n            denominationData = {};\r\n          }\r\n        }\r\n      }\r\n     if(this.custValidation == \"New Customer\"){\r\n     this.accountNum = formData.accountNumber;\r\n     formData.customerId = this.custmerID?this.custmerID:0;\r\n   \r\n     \r\n     formData.accountCurrency = formData.accountCurrency;\r\n     formData.transactionCurrency = formData.transactionCurrency;\r\n     formData.transactionAmount = formData.transactionAmount.replace(/,/g, '');\r\n   \r\n     formData.productCode = this.productCode;\r\n     formData.tokenOrigin = this.tokenOrigin;\r\n     formData.accountBalance = this.accountBal;\r\n\r\n     if(this.denomRequired == 'yes'){\r\n     formData.denomination = denominationDataArray;\r\n     }\r\n    }\r\n    if(this.appointmentId && this.appointmentId.data){\r\n      formData.transactionId = this.appointmentId.data.transactionId;\r\n      formData.transactionStatus = this.appointmentId.data.transactionStatus;\r\n    }\r\n    formData.customerId = this.custmerID?this.custmerID:0;\r\n    formData.transactionBranch = this.transBranch;\r\n    formData.transactionAmount = formData.transactionAmount.replace(/,/g, '');\r\n    formData.accountType = formData.accountType;\r\n    formData.accountNumber = this.accountNumber;\r\n    formData.holderName = formData.holderName;\r\n    formData.productCode = this.productCode;\r\n    formData.tokenOrigin = this.tokenOrigin;\r\n    formData.accountBalance = this.accountBal;\r\n    console.log(formData.transactionId,formData.transactionStatus)\r\n        console.log(\"before api call :: \",formData);\r\n      this.apiService.saveofCashwithdraw(formData).subscribe(cashWithdrawResp=>{\r\n        console.log( \"Response Success, Data Saved\", cashWithdrawResp);\r\n        this.cashWithdrawResponse = cashWithdrawResp;\r\n        this.tokenNum = this.cashWithdrawResponse.tokenNumber;\r\n        this.estimatedTime = this.cashWithdrawResponse.estimatedWaitTime;\r\n        localStorage.setItem(\"tokenNumer\",this.tokenNum);\r\n        localStorage.setItem(\"estimatedTiming\",this.estimatedTime);\r\n        this.enableContinue=false;\r\n        if(this.cashWithdrawResponse){\r\n        this.dialogService.tokenGenerationDialog();\r\n        }\r\n      });\r\n  \r\n     }\r\n\r\n  \r\n\r\n  goToServiceScreens(){\r\n    console.log(\"hgfhg\");\r\n    if(this.appointmentId){\r\n    if(this.appointmentId.data.appointmentId){\r\n      this.router.navigateByUrl('/sessions/login');\r\n      localStorage.removeItem(\"FromLogin\")\r\n      localStorage.removeItem(\"TransactionType\")\r\n      localStorage.removeItem(\"customerId\")\r\n      localStorage.removeItem(\"phonenumFromLogin\")\r\n      localStorage.removeItem(\"customerValidation\")\r\n      localStorage.removeItem(\"otpPhoneNum\")\r\n      localStorage.removeItem(\"AccountBal\")\r\n      localStorage.removeItem(\"AccountNumber\")\r\n      localStorage.removeItem(\"ProductCode\")\r\n      localStorage.removeItem(\"tokenNumer\")\r\n      localStorage.removeItem(\"estimatedTiming\")\r\n      localStorage.removeItem(\"userId\")\r\n      localStorage.removeItem(\"scannerData\")\r\n      localStorage.removeItem(\"custholderName\")\r\n    }\r\n  }\r\n    else{\r\n      this.router.navigateByUrl('/others/kioskHome');\r\n    }\r\n    \r\n  }  \r\n  goToAuthenticate(){\r\n    this.dialogService.authenticationDialog();\r\n  }\r\n \r\n  onSaveofCashWithdraw(form,type,cdForm){\r\n    form.transactionBranch = this.transBranch;\r\n    if(this.qrData){\r\n      if(this.qrData.transactionBranch){\r\n        this.apiService.fetchBranchInfoByBranchName(this.qrData.transactionBranch).subscribe(response=>{\r\n          this.qrBranchCode=response;\r\n          \r\n        })\r\n      }\r\n    }\r\n  \r\n  let denominationData: any = {};\r\n      let denominationDataArray: any[] = [];\r\n      if(this.denomRequired == 'yes'){\r\n        for (let i = 0; i < this.denomCodeArray.length; i++) {\r\n        if (cdForm.value[this.denomCodeArray[i].key]) {\r\n          // denominationData.transactionId = this.cashdepositFor;\r\n          denominationData.denominationKey = this.denomCodeArray[i].value;\r\n          denominationData.denominationValue = +cdForm.value[this.denomCodeArray[i].key];\r\n          denominationData.currency = this.cashwithdrawForm.value.transactionCurrency;\r\n          // denominationData.amountAvailiable = 15200 - (cdForm.value[this.denomCodeArray[i].key] * this.denomCodeArray[i].value);\r\n          denominationDataArray.push(denominationData);\r\n          console.log(denominationDataArray)\r\n          denominationData = {};\r\n        }\r\n      }\r\n      }\r\n      \r\n      form.tokenBranch = \"KN\";\r\n    if(!this.ifQRvariable){\r\n    this.accountNum=JSON.stringify(this.selectedAccountInfo.accountId);\r\n    form.transactionAmount=form.transactionAmount.replace(/,/g, '');\r\n    localStorage.setItem(\"AccountNumber\",this.accountNum);\r\n    localStorage.setItem(\"ProductCode\",this.productCode);\r\n    form.customerId = this.custID;\r\n    form.transactionCurrency = form.transactionCurrency;\r\n    form.accountNumber = this.selectedAccountInfo.accountId;\r\n    form.productCode = this.productCode;\r\n    form.tokenOrigin = this.tokenOrigin;\r\n    form.accountBalance = this.accountBal;\r\n    form.accountType = form.accountType;\r\n    if(this.denomRequired == 'yes'){\r\n form.denomination=denominationDataArray;\r\n    }\r\n   \r\n    }\r\n    else{\r\n      form.customerId = this.custID;\r\n      form.accountType = form.accountType;\r\n      // form.accountNumber = this.selectedAccountInfo.accountId\r\n      form.accountNumber = form.accountNumber;\r\n      form.holderName=  form.holderName;\r\n      form.accountCurrency  =form.accountCurrency;\r\n      form.transactionCurrency = form.transactionCurrency;\r\n      form.transactionAmount = form.transactionAmount;\r\n      form.productCode = this.productCode;\r\n      form.tokenOrigin = this.tokenOrigin;\r\n      if(this.denomRequired == 'yes'){\r\n        form.denomination=denominationDataArray;\r\n      }\r\n      if(this.qrData){\r\n        if(this.qrData.transactionBranch){\r\n          form.tokenBranch = this.qrBranchCode.transactionBranch;\r\n        }\r\n      }\r\n      \r\n      form.accountBalance = this.accountBal;\r\n    }\r\n    if(this.appointmentId && this.appointmentId.data){\r\n      form.transactionId = this.appointmentId.data.transactionId;\r\n      form.transactionStatus = this.appointmentId.data.transactionStatus;\r\n    }\r\n\r\n    console.log(form.transactionId,form.transactionStatus);\r\n    console.log(\"before api call :: \",form);\r\n    this.apiService.saveofCashDeposit(form).subscribe(cashWithdrawResp=>{\r\n      console.log( \"Response Success, Data Saved\", cashWithdrawResp);\r\n      this.cashWithdrawResponse = cashWithdrawResp;\r\n      this.tokenNum = this.cashWithdrawResponse.tokenNumber;\r\n      this.estimatedTime = this.cashWithdrawResponse.estimatedWaitTime;\r\n      localStorage.setItem(\"tokenNumer\",this.tokenNum);\r\n      localStorage.setItem(\"estimatedTiming\",this.estimatedTime);\r\n      this.enableContinue=false;\r\n      if(this.cashWithdrawResponse){\r\n      this.dialogService.tokenGenerationDialog();\r\n      }\r\n    });\r\n    \r\n  //   this.tokenObjects.productCode = this.productCode;\r\n  //   this.tokenObjects.accountNumber = form.accountNumber;\r\n  //   console.log(this.tokenObjects.accountNumber);\r\n  //   if(this.tokenObjects.productCode !== null || this.tokenObjects.accountNumber !==null){\r\n  //   this.apiService.generateToken(this.tokenObjects).subscribe(tokenResp=>{\r\n  //     console.log( \"Token Generated\", tokenResp);\r\n  //     this.tokResponse = tokenResp;\r\n  //     if(this.tokResponse){\r\n  //       this.tokenNum = this.tokResponse.tokenNumber;\r\n  //       this.estimatedTime = this.tokResponse.estimatedWaitTime;\r\n  //       localStorage.setItem(\"tokenNumer\",this.tokenNum);\r\n  //       localStorage.setItem(\"estimatedTiming\",this.estimatedTime);\r\n  //       form.tokenNo = this.tokenNum;\r\n  //       form.customerId = this.ls.getItem(\"customerId\");\r\n  //       this.apiService.saveofCashDeposit(form).subscribe(cashWithdrawResp=>{\r\n  //         console.log( \"Response Success, Data Saved\", cashWithdrawResp);\r\n  //         this.cashWithdrawResponse = cashWithdrawResp;\r\n  //         console.log(this.cashWithdrawResponse);\r\n  //         // this.cashwithdrawForm.reset();\r\n  //         this.enableContinue=false;\r\n  //         // this.ngOnInit();\r\n  //         this.dialogService.tokenGenerationDialog();\r\n  //       });\r\n  //     }\r\n  //   });\r\n  // }\r\n\r\n   }\r\n\r\n checkValue(event) {\r\n  if (event.target.value < 0) {\r\n    event.target.value = 0;\r\n  }\r\n}\r\n\r\nOnInput(event: any) {\r\n  this.transAmt= event.target.value;\r\nconsole.log(event.target.value);\r\nthis.totalAmount = 0;\r\n// this.denomRequired='yes';\r\n  // comma separator using changeDetector\r\n  const savedInput = this.transAmount;\r\n  // this.transAmount = '';\r\n  // this.changeDef.detectChanges();\r\n\r\n  \r\nlet lastCharIsPoint = false;\r\nif (savedInput.charAt(savedInput.length - 1) === '.') {\r\n  lastCharIsPoint = true;\r\n}\r\nconst num = savedInput.replace(/[^0-9.]/g, '');\r\n\r\n\r\nthis.transAmt = Number(num) || '';\r\nthis.transAmount = this.transAmt.toLocaleString('en-IN');\r\nif (lastCharIsPoint) {\r\n  this.transAmount = this.transAmount.concat('.');\r\n}\r\nthis.changeDef.detectChanges();\r\n\r\n  this.balance= localStorage.getItem(\"AccountBal\");\r\n  if(parseFloat(this.balance) < parseFloat(this.transAmt)){\r\n    console.log(\"Bigger\")\r\n    this.snack.open(`Transaction Amount should not exceed than Account Balance`, 'OK', {\r\n      duration: 2000,\r\n      verticalPosition: 'top',\r\n      horizontalPosition: 'right'\r\n    });\r\n    this.enableContinue=false;\r\n  }\r\n  else{\r\n    this.enableContinue=true;\r\n  }\r\n  this.totalTransAmount=Number(this.transAmt) + Number(this.chargeDetails?this.chargeDetails[0].amount:'');\r\n  this.cashwithdrawForm.controls.totalTransactionAmount.setValue(this.totalTransAmount);\r\n  this.cdr.markForCheck();\r\n  this.cdr.detectChanges();\r\n  }\r\n\r\n  clicked(event){\r\n    // console.log(event);\r\n  }\r\n  addCurrencyImage(currency) {\r\n    return currency.toLowerCase();\r\n  }\r\n\r\n  onCountryChange(country) {\r\n    let currency = country.currencyCode;\r\n    this.currencyImage = 'currency-flag-'+currency.toLowerCase();\r\n  }\r\n\r\n  accountCurrencyImage(accountCurrency){\r\n    return accountCurrency? 'currency-flag-'+accountCurrency.toLowerCase() : '';\r\n  }\r\n\r\n\r\n  omit_number(event) {\r\n    var key;\r\n    key = event.charCode;\r\n    return ((key > 47 && key < 58));\r\n  }\r\n  totalAmountValue(cdForm) {\r\n    console.log(cdForm);\r\n    this.a=this.cashwithdrawForm.value.transactionAmount;\r\n    this.a=this.a.replace(/\\,/g,''); // 1125, but a string, so convert it to number\r\n    this.a=parseInt(this.a,10);\r\n\r\n\r\n    this.cashwithdrawForm.value.totalAmount =\r\n      ((cdForm.value.count2000 ? cdForm.value.count2000 * 2000 : 0) +\r\n        (cdForm.value.count500 ? cdForm.value.count500 * 500 : 0) +\r\n        (cdForm.value.count200 ? cdForm.value.count200 * 200 : 0) +\r\n        (cdForm.value.count100 ? cdForm.value.count100 * 100 : 0) +\r\n        (cdForm.value.count50 ? cdForm.value.count50 * 50 : 0) +\r\n        (cdForm.value.count20 ? cdForm.value.count20 * 20 : 0) +\r\n        (cdForm.value.count10 ? cdForm.value.count10 * 10 : 0) +\r\n        (cdForm.value.count1 ? cdForm.value.count1 * 1 : 0)\r\n      );\r\n        this.cashwithdrawForm.value.totalAmount = this.cashwithdrawForm.value.totalAmount;\r\n        console.log(this.cashwithdrawForm.value.totalAmount)\r\n        console.log(this.cashwithdrawForm.value.transactionAmount);\r\n        \r\n        this.transamount=this.cashwithdrawForm.value.transactionAmount;\r\n        this.totalAmount=this.cashwithdrawForm.value.totalAmount.toLocaleString('en-US');\r\n        \r\n          if(this.transamount != this.totalAmount){\r\n          this.enableBtn = false;\r\n        }\r\n        else{\r\n          this.enableBtn = true;\r\n        }\r\n\r\n           if((this.transamount > this.totalAmount) || (this.transamount < this.totalAmount)){\r\n          this.enableBtn1 = true;\r\n        }\r\n        else{\r\n          this.enableBtn1 = false;\r\n        }      \r\n        this.cashwithdrawForm.controls.totalAmount.setValue(this.cashwithdrawForm.value.totalAmount);\r\n        \r\n  }\r\n  cashWithdrawlData(){\r\n  this.apiService.getAppointmentId(this.appointmentId.data.appointmentId).subscribe((resp : any)=> {\r\n    console.log(resp);\r\n    this.cashData=resp.data;\r\n    this.custID=resp.data.customerId;\r\n    this.ifQRvariable = true;\r\n    this.hideAccNum = false;\r\n    this.hideDetails=true;\r\n    this.userName = resp.data.holderName;\r\n    this.accountCurrency = resp.data.accountCurrency;\r\n    this.cashwithdrawForm.controls.accountType.setValue(resp.data.accountType);\r\n    this.cashwithdrawForm.controls.accountBranch.setValue(resp.data.accountBranch);\r\n    this.cashwithdrawForm.controls.accountNumber.setValue(resp.data.accountNumber);\r\n    this.getChargeDetails(resp.data.accountNumber,resp.data.transactionAmount);\r\n    this.cashwithdrawForm.controls.accountCurrency.setValue(resp.data.accountCurrency);\r\n    this.cashwithdrawForm.controls.transactionCurrency.setValue(resp.data.transactionCurrency);\r\n    this.cashwithdrawForm.controls.transactionAmount.setValue(resp.data.transactionAmount);\r\n    this.currencyImage = 'currency-flag-'+resp.data.accountCurrency.toLowerCase();\r\n    this.currencyImage = 'currency-flag-'+resp.data.transactionCurrency.toLowerCase();\r\n    \r\n  });\r\n  // this.denomRequired='yes';\r\n}\r\n\r\n\r\ngetChargeDetails(accountId,amount){\r\n  this.apiService.fetchChargeDetails(accountId).subscribe(resp => {\r\nconsole.log(resp);\r\nthis.chargeDetails=resp;\r\nthis.cashwithdrawForm.controls.totalChargeAmount.setValue(this.chargeDetails?this.chargeDetails[0].amount:'');\r\n  });\r\n  if(this.cashData){\r\n  setTimeout(() => {\r\n    this.totalTransAmount=Number(this.cashData.transactionAmount) + Number(this.chargeDetails[0].amount);\r\n    this.cashwithdrawForm.controls.totalTransactionAmount.setValue(this.totalTransAmount);\r\n  }, 1000);\r\n  this.cdr.markForCheck();\r\n  this.cdr.detectChanges();\r\n}\r\nelse{\r\n  console.log(this.chargeDetails)\r\n  amount = 0;\r\n  console.log(amount);\r\n  setTimeout(() => {\r\n    this.totalTransAmount=Number(amount) + Number(this.chargeDetails?this.chargeDetails[0].amount:'');\r\n    console.log(this.totalTransAmount);\r\n    this.cashwithdrawForm.controls.totalTransactionAmount.setValue(this.totalTransAmount);\r\n  }, 1000);\r\n  this.cdr.markForCheck();\r\n  this.cdr.detectChanges();\r\n}\r\n\r\n  // console.log(this.totalTransAmount);\r\n\r\n}\r\n\r\n  getBankInformation(branchCode:any){\r\n    this.apiService.fetchBankInfoByBranchCode(branchCode).subscribe(resp => {\r\n      console.log(resp)\r\n     this.denomRequired = resp.denomRequired\r\n     if(resp.denomRequired == 'yes'){\r\n      this.enableBtn = false;\r\n      this.enableBtn1 = false;\r\n     }\r\n\r\n    })\r\n  }\r\n\r\n  formatAmount(amount) {\r\n    // amount=amount.toString();\r\n    // var lastThree = amount.substring(amount.length - 3);\r\n    // var otherNumbers = amount.substring(0,amount.length-3);\r\n    // if(otherNumbers != '')\r\n    //     lastThree = ',' + lastThree;\r\n    // return String(amount).replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")+ lastThree;\r\n    // return String(amount).replace(en-IN,',');\r\n   if(amount){\r\n    return amount && amount.toString().split('.')[0].length > 3 ? amount.toString().substring(0,amount.toString().split('.')[0].length-3).replace(/\\B(?=(\\d{2})+(?!\\d))/g, \",\") + \",\" + amount.toString().substring(amount.toString().split('.')[0].length-3): amount.toString();\r\n   }\r\n\r\n  } \r\n\r\n}\r\n","<div style=\"margin-top: -4%;\" fxLayout=\"column\">\r\n    <div fxLayout=\"row\" fxLayoutGap=\"20px\" style=\"color: #000000;padding-left:5%\">\r\n       <mat-icon style=\"cursor: pointer;\" (click)=\"goToServiceScreens()\">arrow_back</mat-icon><h1 style=\"font-weight: bold;\">Cash Withdrawal</h1>\r\n    </div>\r\n    <div  fxLayout=\"row wrap\" fxFlexFill  fxLayoutGap=\"1px\" fxLayoutAlign=\"center\" style=\"padding-left: 4%;\">\r\n          <form [formGroup]=\"cashwithdrawForm\" fxFlex=\"100%\">\r\n        <mat-card fxFlex=\"calc(33%-25px)\" fxLayout=\"column\">\r\n      \r\n            <mat-card-title style=\"font-size: 15px;color: #004C97;margin-left: 1%;\">Account Information</mat-card-title>\r\n            <mat-card fxFlex=\"calc(13%-25px)\" class=\"accountInfoCard\">\r\n             \r\n                <div fxLayoutGap=\"50px\" *ngIf=\"showAccountNum\">\r\n                    <mat-form-field appearance=\"outline\" style=\"border-radius: 12px;\" fxFlex=\"35%\" >\r\n                      <mat-label>Account Type*</mat-label>\r\n                      <input matInput type=\"text\" *ngIf=\"phoneNumber && !accountDropdown\"\r\n                      [readonly]=\"true\" class=\"full-width\" \r\n                      formControlName=\"accountType\">\r\n                      <mat-select *ngIf=\"phoneNumber && accountDropdown\"  formControlName=\"accountType\"\r\n                      (selectionChange)=\"getAccountType($event.value)\">\r\n                        <mat-option *ngFor=\"let type of accounttypeArray \"\r\n                        [value]=\"type.accountType\" >\r\n                        {{type.accountType}}\r\n                        </mat-option>\r\n                      </mat-select>\r\n\r\n                    </mat-form-field>\r\n                    <mat-form-field appearance=\"outline\" style=\"border-radius: 12px;\" fxFlex=\"57%\">\r\n                      <mat-label>Account Number*</mat-label>\r\n                      <input *ngIf=\"!flag1\" matInput type=\"text\" [readonly]=\"true\"\r\n                      class=\"full-width\" formControlName=\"accountNumber\" >\r\n                      <mat-select *ngIf=\"flag1\" formControlName=\"accountNumber\" (selectionChange)=\"fetchByAccountNum($event.value)\">\r\n                        <mat-option   *ngFor=\"let id of accountNoList \" [value]=\"id\">{{id}}</mat-option>\r\n                      </mat-select>\r\n\r\n                    </mat-form-field>\r\n                  </div>\r\n                 \r\n                  <div fxLayoutGap=\"50px\" *ngIf=\"!showAccountNum\">\r\n                  \r\n                    <mat-form-field appearance=\"outline\" style=\"border-radius: 12px;\" fxFlex=\"57%\" >\r\n                      <mat-label>Account Number*</mat-label>\r\n                      <input type=\"text\"   formControlName=\"accountNumber\"\r\n                      (change)=\"fetchByAccountNum(cashwithdrawForm.get('accountNumber').value)\"\r\n                      placeholder=\"Account Number\" matInput>\r\n\r\n                    </mat-form-field>\r\n                    <mat-form-field appearance=\"outline\" style=\"border-radius: 12px;\" fxFlex=\"35%\">\r\n                      <mat-label>Account Type*</mat-label>\r\n                      <input matInput type=\"text\" [readonly]=\"true\" class=\"full-width\"\r\n                                                        formControlName=\"accountType\">\r\n\r\n                    </mat-form-field>\r\n                  </div>\r\n                  <div fxLayout=\"row wrap\"  fxLayoutGap=\"10%\" style=\"margin-left: 2%;\">\r\n                    <div fxLayout=\"column\" *ngIf=\"hideDetails\">\r\n                      <mat-hint class=\"totalAmount\">Holder Name\r\n                      </mat-hint>\r\n                      <p class=\"hint\">{{userName}}</p>\r\n                    </div>\r\n                    <div fxLayout=\"column\" *ngIf=\"hideAccNum\">\r\n                      <mat-hint class=\"totalAmount\">Account Balance\r\n                      </mat-hint>\r\n                      <p class=\"hint\">{{curr }}{{formatAmount(accountBal)}}</p>\r\n                    </div>\r\n                    <div fxLayout=\"column\" *ngIf=\"hideDetails\">\r\n                      <mat-hint class=\"totalAmount\">Account Branch \r\n                      </mat-hint>\r\n                      <p class=\"hint\">Gayathri</p>\r\n                    </div>\r\n                    <div fxLayout=\"column\"  *ngIf=\"hideDetails\">\r\n                      <mat-hint class=\"totalAmount\">Account currency\r\n                      </mat-hint>\r\n                      <div fxLayoutGap=\"20px\" fxLayout=\"row\">\r\n                        <div class=\"currency-flag {{currencyImage}}\"></div><span>{{accountCurrency}}</span>\r\n                    </div>\r\n                     \r\n                    </div>\r\n                  </div>\r\n            </mat-card>\r\n<br>\r\n            <mat-card-title style=\"font-size: 15px;color: #004C97;margin-left: 1%;\">Transaction Information</mat-card-title>\r\n           \r\n                <div fxLayoutGap=\"50px\" style=\"margin-left: 1%;\">\r\n                    <mat-form-field appearance=\"outline\" style=\"border-radius: 12px;\" fxFlex=\"35%\" *ngIf=\"showAccountNum\">\r\n                      <mat-label>Transaction currency*</mat-label>\r\n                      <div fxFlex=\"25%\">\r\n                        <div class=\"currency-flag {{currencyImage}}\"></div>\r\n                    </div>\r\n                      <input matInput type=\"text\" *ngIf=\"!phoneNumber\"\r\n                      [readonly]=\"true\" formControlName=\"transactionCurrency\">\r\n                      <mat-select  formControlName=\"transactionCurrency\"\r\n                      *ngIf=\"phoneNumber\"  [disabled]=\"isedit\">\r\n                      <mat-option\r\n                      *ngFor=\"let country of countryValues; let i = index\"\r\n                      (click)=\"onCountryChange(country)\"\r\n                      [value]=\"country.currencyCode\">\r\n                      <div fxLayout=\"row wrap\">\r\n                          <div fxFlex=\"15%\">{{country.currencyCode}}</div>\r\n                          <div fxFlex=\"85%\">\r\n                              <div\r\n                                  class=\"currency-flag currency-flag-{{addCurrencyImage(country.currencyCode)}} alignImage\">\r\n                              </div>\r\n                          </div>\r\n                      </div>\r\n                  </mat-option>\r\n                        <!-- <mat-option  [value]=\"\" >\r\n                          Savings\r\n                        </mat-option> -->\r\n                      </mat-select>\r\n\r\n                    </mat-form-field>\r\n\r\n                    <mat-form-field appearance=\"outline\" style=\"border-radius: 12px;\" fxFlex=\"35%\" *ngIf=\"!showAccountNum\">\r\n                      <mat-label>Transaction currency*</mat-label>\r\n                      <div fxFlex=\"25%\">\r\n                        <div class=\"currency-flag {{currencyImage}}\"></div>\r\n                    </div>\r\n                      \r\n                    <mat-select formControlName=\"transactionCurrency\" placeholder=\"Select Transaction Currency\" >\r\n                                                                <mat-option\r\n                                                                    *ngFor=\"let country of countryValues; let i = index\"\r\n                                                                    (click)=\"onCountryChange(country)\"\r\n                                                                  \r\n                                                                    [value]=\"country.currencyCode\">\r\n                                                                    <div fxLayout=\"row wrap\">\r\n                                                                        <div fxFlex=\"15%\">{{country.currencyCode}}</div>\r\n                                                                        <div fxFlex=\"85%\">\r\n                                                                            <div\r\n                                                                                class=\"currency-flag currency-flag-{{addCurrencyImage(country.currencyCode)}} alignImage\">\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </mat-option>\r\n                                                            </mat-select>\r\n\r\n                    </mat-form-field>\r\n                    <mat-form-field appearance=\"outline\" style=\"border-radius: 12px;\" fxFlex=\"55%\" *ngIf=\"!showAccountNum\">\r\n                      <mat-label>Transaction amount *</mat-label>\r\n                      <input matInput #myRef [(ngModel)]=\"transAmount\"\r\n                      formControlName=\"transactionAmount\"\r\n                      [value]=\"transAmt | number: '2.'\" (keyup)=\"OnInput($event)\"\r\n                      (focus)=\"clicked($event)\">\r\n                      <mat-error\r\n                      *ngIf=\"cashwithdrawForm.get('transactionAmount').errors?.min\">\r\n                      Amount must be greater than zero\r\n                  </mat-error>\r\n                    </mat-form-field>\r\n                    <mat-form-field appearance=\"outline\" style=\"border-radius: 12px;\" fxFlex=\"55%\" *ngIf=\"showAccountNum\">\r\n                      <mat-label>Transaction amount *</mat-label>\r\n                      <input matInput type=\"text\" *ngIf=\"!phoneNumber\" [readonly]=\"true\"\r\n                                                        formControlName=\"transactionAmount\">\r\n                                                    <input matInput class=\"full-width\" *ngIf=\"phoneNumber\" #myRef\r\n                                                        [(ngModel)]=\"transAmount\" formControlName=\"transactionAmount\"\r\n                                                        [value]=\"transAmt | number: '1.'\" (keyup)=\"OnInput($event)\"\r\n                                                        (focus)=\"clicked($event)\" [readonly]=\"isedit\">\r\n                                                        <mat-error\r\n                                                        *ngIf=\"cashwithdrawForm.get('transactionAmount').errors?.min\">\r\n                                                        Amount must be greater than zero\r\n                                                    </mat-error>\r\n                    </mat-form-field>\r\n                 \r\n                  </div>\r\n                  <div fxLayout=\"row wrap\">\r\n                    <div fxLayout=\"column wrap\" fxFlex=\"36%\" *ngIf=\"cashwithdrawForm.get('transactionCurrency').value != accountCurrency\">\r\n                      <mat-card >\r\n                        <input matInput readonly placeholder=\"Negotiated rate\">\r\n                    </mat-card>\r\n                        <!-- <p class=\"hint\">Exchange rate : 0.89</p> -->\r\n                    </div>\r\n                   \r\n\r\n                      <mat-card fxFlex=\"25%\" >\r\n                        <input matInput readonly formControlName=\"totalChargeAmount\" placeholder=\"Total Charge Amount\">\r\n                      </mat-card>\r\n        \r\n                      <mat-card fxFlex=\"25%\"  fxLayout=\"row\">\r\n                        <input matInput type=\"text\" readonly onlyNumber formControlName=\"totalTransactionAmount\" placeholder=\"Total Charge Amount\">\r\n                          <div class=\"tooltip\">\r\n                            <img width=\"80%\"\r\n                        [src]=\"'assets/images/info.svg'\"/>\r\n                            <div class=\"tooltiptext\">\r\n                                <p class=\"totalAmount textcolor\" style=\"margin-top:10px; margin-bottom:6px\">Transaction Amount:{{cashwithdrawForm.get('transactionAmount').value}}</p>\r\n                                <p class=\"totalAmount textcolor\">Total Charge Amount:{{cashwithdrawForm.get('totalChargeAmount').value}} </p>\r\n                                <hr/>\r\n                                <p class=\"totalAmount textcolor\" style=\"margin-right:10px ;\">Total Transaction Amount:{{cashwithdrawForm.get('totalTransactionAmount').value}}</p>\r\n                            </div>\r\n                        </div>\r\n                      </mat-card>\r\n        \r\n                 \r\n                  </div>\r\n                  <div>\r\n                    <p class=\"hint\">Exchange rate : 0.89</p>\r\n                  </div>\r\n                \r\n               \r\n                  <!-- <div fxLayoutGap=\"50px\">\r\n                  \r\n                    <mat-form-field appearance=\"outline\" style=\"border-radius: 12px;\" fxFlex=\"55%\">\r\n                      <mat-label>Account Number*</mat-label>\r\n                      <input type=\"text\"\r\n                      placeholder=\"Account Number\" matInput>\r\n\r\n                    </mat-form-field>\r\n                    <mat-form-field appearance=\"outline\" style=\"border-radius: 12px;\" fxFlex=\"35%\">\r\n                      <mat-label>Account Type*</mat-label>\r\n                      <input type=\"text\"\r\n                      placeholder=\"Account Type\" matInput>\r\n\r\n                    </mat-form-field>\r\n                  </div> -->\r\n            <!-- </mat-card> -->\r\n        \r\n        </mat-card>\r\n\r\n        <mat-card fxFlex=\"30%\" *ngIf=\"(denomRequired == 'yes') && (cashwithdrawForm.get('transactionAmount').value > 0 || transAmt > 0)\">\r\n          <form #cdForm=\"ngForm\">\r\n          <mat-card-title style=\"font-size: 15px;color: #004C97;margin-left: 1%;\">Denomination</mat-card-title>\r\n          <div class=\"pH10 full-width\" id=\"denominationDiv\">\r\n            <div class=\"paddingclass\" fxLayoutAlign=\"center center\"\r\n                *ngIf=\"cashwithdrawForm.value.transactionCurrency == 'INR'\">\r\n                <div fxFlex=\"20%\">\r\n                    <p class=\"quantityClass text-small\">2000</p>\r\n                </div>\r\n                <div fxFlex=\"10%\">\r\n                    <p class=\"operationTypeClass text-small\">x</p>\r\n                </div>\r\n                <div fxFlex=\"70%\">\r\n                    <mat-card class=\"inputCard\">\r\n                        <div>\r\n                            <input class=\"full-width inputClass\" type=\"text\"\r\n                                (keyup)=\"totalAmountValue(cdForm)\" (keypress)=\"omit_number($event)\" matInput\r\n                                name=\"count2000\" ngModel #count2000>\r\n                        </div>\r\n                    </mat-card>\r\n                    <div class=\"pl10\">\r\n                        <mat-error *ngIf=\"denominationlimit && count2000.value > denominationLimit[2000]\">\r\n                            Please enter <= {{denominationLimit[2000]}} </mat-error>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"paddingclass\" fxLayoutAlign=\"start center\"\r\n                *ngIf=\"cashwithdrawForm.value.transactionCurrency == 'INR' || cashwithdrawForm.value.transactionCurrency == 'USD' || cashwithdrawForm.value.transactionCurrency == 'AED'\">\r\n                <div fxFlex=\"20%\">\r\n                    <p class=\"quantityClass text-small\">500</p>\r\n                </div>\r\n                <div fxFlex=\"10%\">\r\n                    <p class=\"operationTypeClass text-small\">x</p>\r\n                </div>\r\n                <div fxFlex=\"70%\">\r\n                    <mat-card class=\"inputCard\">\r\n                        <input class=\"full-width inputClass\" type=\"text\" (keyup)=\"totalAmountValue(cdForm)\"\r\n                            (keypress)=\"omit_number($event)\" matInput name=\"count500\" ngModel #count500>\r\n                    </mat-card>\r\n                    <div class=\"pl10\">\r\n                        <mat-error *ngIf=\"denominationlimit && count500.value > denominationLimit[500]\">\r\n                            Please enter <= {{denominationLimit[500]}} </mat-error>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"paddingclass\" fxLayoutAlign=\"start center\"\r\n                *ngIf=\"cashwithdrawForm.value.transactionCurrency == 'INR'\">\r\n                <div fxFlex=\"20%\">\r\n                    <p class=\"quantityClass text-small\">200</p>\r\n                </div>\r\n                <div fxFlex=\"10%\">\r\n                    <p class=\"operationTypeClass text-small\">x</p>\r\n                </div>\r\n                <div fxFlex=\"70%\">\r\n                    <mat-card class=\"inputCard\">\r\n                        <input class=\"full-width inputClass\" type=\"text\" (keyup)=\"totalAmountValue(cdForm)\"\r\n                            (keypress)=\"omit_number($event)\" matInput name=\"count200\" ngModel #count200>\r\n                    </mat-card>\r\n                    <div class=\"pl10\">\r\n                        <mat-error *ngIf=\"denominationlimit && count200.value > denominationLimit[200]\">\r\n                            Please enter <= {{denominationLimit[200]}} </mat-error>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"paddingclass\" fxLayoutAlign=\"start center\"\r\n                *ngIf=\"cashwithdrawForm.value.transactionCurrency == 'INR' || cashwithdrawForm.value.transactionCurrency == 'USD' || cashwithdrawForm.value.transactionCurrency == 'AED'\">\r\n                <div fxFlex=\"20%\">\r\n                    <p class=\"quantityClass text-small\">100</p>\r\n                </div>\r\n                <div fxFlex=\"10%\">\r\n                    <p class=\"operationTypeClass text-small\">x</p>\r\n                </div>\r\n                <div fxFlex=\"70%\">\r\n                    <mat-card class=\"inputCard\">\r\n                        <input class=\"full-width inputClass\" type=\"text\" (keyup)=\"totalAmountValue(cdForm)\"\r\n                            (keypress)=\"omit_number($event)\" matInput name=\"count100\" ngModel #count100>\r\n                    </mat-card>\r\n                    <div class=\"pl10\">\r\n                        <mat-error *ngIf=\"denominationlimit && count100.value > denominationLimit[100]\">\r\n                            Please enter <= {{denominationLimit[100]}} </mat-error>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"paddingclass\" fxLayoutAlign=\"start center\"\r\n                *ngIf=\"cashwithdrawForm.value.transactionCurrency== 'INR' || cashwithdrawForm.value.accountCurrency == 'USD'\">\r\n                <div fxFlex=\"20%\">\r\n                    <p class=\"quantityClass text-small\">50</p>\r\n                </div>\r\n                <div fxFlex=\"10%\">\r\n                    <p class=\"operationTypeClass text-small\">x</p>\r\n                </div>\r\n                <div fxFlex=\"70%\">\r\n                    <mat-card class=\"inputCard\">\r\n                        <input class=\"full-width inputClass\" type=\"text\" (keyup)=\"totalAmountValue(cdForm)\"\r\n                            (keypress)=\"omit_number($event)\" matInput name=\"count50\" ngModel #count50>\r\n                    </mat-card>\r\n                    <div class=\"pl10\">\r\n                        <mat-error *ngIf=\"denominationlimit && count50.value > denominationLimit[50]\">\r\n                            Please enter <= {{denominationLimit[50]}} </mat-error>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"paddingclass\" fxLayoutAlign=\"start center\"\r\n                *ngIf=\"cashwithdrawForm.value.transactionCurrency== 'INR'\">\r\n                <div fxFlex=\"20%\">\r\n                    <p class=\"quantityClass text-small\">20</p>\r\n                </div>\r\n                <div fxFlex=\"10%\">\r\n                    <p class=\"operationTypeClass text-small\">x</p>\r\n                </div>\r\n                <div fxFlex=\"70%\">\r\n                    <mat-card class=\"inputCard\">\r\n                        <input class=\"full-width inputClass\" type=\"text\" (keyup)=\"totalAmountValue(cdForm)\"\r\n                            (keypress)=\"omit_number($event)\" matInput name=\"count20\" ngModel #count20>\r\n                    </mat-card>\r\n                    <div class=\"pl10\">\r\n                        <mat-error *ngIf=\"denominationlimit && count20.value > denominationLimit[20]\">\r\n                            Please enter <= {{denominationLimit[20]}} </mat-error>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"paddingclass\" fxLayoutAlign=\"start center\"\r\n                *ngIf=\"cashwithdrawForm.value.transactionCurrency== 'INR'\">\r\n                <div fxFlex=\"20%\">\r\n                    <p class=\"quantityClass text-small\">10</p>\r\n                </div>\r\n                <div fxFlex=\"10%\">\r\n                    <p class=\"operationTypeClass text-small\">x</p>\r\n                </div>\r\n                <div fxFlex=\"70%\">\r\n                    <mat-card class=\"inputCard\">\r\n                        <input class=\"full-width inputClass\" type=\"text\" (keyup)=\"totalAmountValue(cdForm)\"\r\n                            (keypress)=\"omit_number($event)\" matInput name=\"count10\" ngModel #count10>\r\n                    </mat-card>\r\n                    <div class=\"pl10\">\r\n                        <mat-error *ngIf=\"denominationlimit && count10.value > denominationLimit[10]\">\r\n                            Please enter <= {{denominationLimit[10]}} </mat-error>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"paddingclass\" fxLayoutAlign=\"start center\"\r\n                *ngIf=\"cashwithdrawForm.value.transactionCurrency== 'INR' || cashwithdrawForm.value.transactionCurrency == 'USD' || cashwithdrawForm.value.transactionCurrency == 'AED'\">\r\n                <div fxFlex=\"20%\">\r\n                    <p class=\"quantityClass text-small\">1</p>\r\n                </div>\r\n                <div fxFlex=\"10%\">\r\n                    <p class=\"operationTypeClass text-small\">x</p>\r\n                </div>\r\n                <div fxFlex=\"70%\">\r\n                    <mat-card class=\"inputCard\">\r\n                        <input class=\"full-width inputClass\" type=\"text\" (keyup)=\"totalAmountValue(cdForm)\"\r\n                            (keypress)=\"omit_number($event)\" matInput name=\"count1\" ngModel #count10>\r\n                    </mat-card>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div fxLayout=\"row wrap\" class=\"pH10 full-width\">\r\n            <div fxFlex=\"53%\" fxFlex.xs=\"100%\">\r\n                <p class=\"totalAmount\">Total Amount</p>\r\n                <mat-card class=\"inputCard\">\r\n                    <input class=\"full-width inputClass\" [(ngModel)]=\"totalAmount\" matInput\r\n                        name=\"totalAmount\" readonly>\r\n                </mat-card>\r\n                <div class=\"pl10\" style=\"width: 150%;\">\r\n                    <mat-error *ngIf=\"enableBtn1\">\r\n                        Total amount should be equal to {{cashwithdrawForm.value.transactionAmount}}\r\n                    </mat-error>\r\n                </div>\r\n            </div>\r\n        </div>\r\n          </form>\r\n        </mat-card>\r\n         </form>\r\n\r\n    </div>\r\n</div>\r\n\r\n<div fxLayout=\"row\">\r\n  <div class=\"full-width\" fxLayoutAlign=\"center\" fxLayoutGap=\"20px\">\r\n    <button mat-flat-button class=\"backBtn\"\r\n    >Back</button>\r\n    <button mat-flat-button class=\"continueBtn\" *ngIf=\"showAccountNum\" [disabled]=\"!enableContinue\r\n    ||!cashwithdrawForm.get('transactionCurrency').valid\r\n    ||!cashwithdrawForm.get('accountType').valid\r\n    ||!cashwithdrawForm.get('accountNumber').valid \r\n    ||!cashwithdrawForm.get('accountCurrency').valid\r\n    ||!cashwithdrawForm.get('transactionAmount').valid\r\n    ||!cashwithdrawForm.get('totalChargeAmount').valid\r\n    ||!cashwithdrawForm.get('totalTransactionAmount').valid\"  \r\n    (click)=\"onSaveofCashWithdraw(cashwithdrawForm.value,ifQRvariable,cdForm)\">Continue1</button>\r\n    <button mat-flat-button class=\"continueBtn\" [disabled]=\"!enableContinue || !cashwithdrawForm.get('transactionAmount').valid \r\n    ||!cashwithdrawForm.get('transactionCurrency').valid\r\n    ||!cashwithdrawForm.get('accountType').valid\r\n    ||!cashwithdrawForm.get('accountNumber').valid \r\n    ||!cashwithdrawForm.get('accountCurrency').valid\r\n    ||!cashwithdrawForm.get('transactionAmount').valid\r\n    ||!cashwithdrawForm.get('totalChargeAmount').valid\r\n    ||!cashwithdrawForm.get('totalTransactionAmount').valid\" *ngIf=\"!showAccountNum\"\r\n    (click)=\"getOTP(cashwithdrawForm.value,ifQRvariable,cdForm)\">Continue2</button>\r\n      <button mat-flat-button class=\"exitBtn\"\r\n      >Exit</button>\r\n  </div>\r\n\r\n</div>","\r\n\r\nexport class TokenObjects {\r\n    entityCode:string;\r\n    bankCode:string;\r\n    tokenBranch:string;\r\n    accountNumber:string;\r\n    customerCategory:any;\r\n    productCode:string;\r\n  }","import { SharedDirectivesModule } from './../../shared/directives/shared-directives.module';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatChipsModule } from '@angular/material/chips';\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\r\nimport { ChartsModule } from 'ng2-charts';\r\nimport { SharedModule } from './../../shared/shared.module';\r\nimport { AppBlankComponent } from './app-blank/app-blank.component';\r\nimport { OthersRoutes } from \"./others.routing\";\r\nimport { ChequeWithdrawalComponent } from './cheque-withdrawal/cheque-withdrawal.component';\r\nimport { ChequeWithdrawal1Component } from './cheque-withdrawal1/cheque-withdrawal1.component';\r\nimport { CashWithdrawalComponent } from './cash-withdrawal/cash-withdrawal.component';\r\nimport { CashDepositComponent } from './cash-deposit/cash-deposit.component';\r\nimport { ChequeDepositComponent } from './cheque-deposit/cheque-deposit.component';\r\nimport { ForexTransactionComponent } from './forex-transaction/forex-transaction.component';\r\nimport { LoanPaymentComponent } from './loan-payment/loan-payment.component';\r\nimport { DepositTopupComponent } from './deposit-topup/deposit-topup.component';\r\nimport { UtilityBillpaymentComponent } from './utility-billpayment/utility-billpayment.component';\r\nimport { SelectServiceComponent } from './select-service/select-service.component';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { AuthenticateComponent } from './authenticate/authenticate.component';\r\nimport { MatSelectCountryModule } from '@angular-material-extensions/select-country';\r\nimport { MatDialogModule, MatDialogRef } from '@angular/material/dialog';\r\nimport { TokenGenerationComponent } from './token-generation/token-generation.component';\r\nimport { TokenInterceptor } from 'app/shared/interceptors/token.interceptor';\r\nimport { ZXingScannerModule } from '@zxing/ngx-scanner';\r\nimport { OnlynumberDirective } from 'app/shared/directives/onlynumber.directive';\r\nimport { SearchComponent } from './search/search.component';\r\nimport { OtpVerifyComponent } from './otp-verify/otp-verify.component';\r\nimport { AppointmentIdComponent } from './appointment-id/appointment-id.component';\r\nimport { KioskHomepageComponent } from './kiosk-homepage/kiosk-homepage.component';\r\nimport { NewcashwithdrawalComponent } from './newcashwithdrawal/newcashwithdrawal.component';\r\nimport { NewcashdepositComponent } from './newcashdeposit/newcashdeposit.component';\r\nimport { NewchequedepositComponent } from './newchequedeposit/newchequedeposit.component';\r\nimport { CoreFormModule } from 'app/shared/core-form/core-form.module';\r\nimport { CwServiceComponent } from './cw-service/cw-service.component';\r\n\r\nimport { CheqWComponent } from './cheq-w/cheq-w.component';\r\n\r\nimport { ExitScreenComponent } from './exit-screen/exit-screen.component';\r\nimport { FeedbackComponent } from './feedback/feedback.component';\r\nimport { CdServiceComponent } from './cd-service/cd-service.component';\r\nimport { CheqDComponent } from './cheq-d/cheq-d.component';\r\nimport { ScanYourChequeComponent } from './scan-your-cheque/scan-your-cheque.component';\r\nimport { CaptureChequeDetailsComponent } from './capture-cheque-details/capture-cheque-details.component';\r\nimport { OcrScanPageComponent } from './ocr-scan-page/ocr-scan-page.component';\r\nimport { ForexServiceComponent } from './forex-service/forex-service.component';\r\n\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    MatListModule,\r\n    MatIconModule,\r\n\r\n    MatButtonModule,\r\n    MatCardModule,\r\n    MatMenuModule,\r\n    MatSlideToggleModule,\r\n    MatGridListModule,\r\n    MatChipsModule,\r\n    MatCheckboxModule,\r\n    MatDialogModule,\r\n    MatRadioModule,\r\n    MatTabsModule,\r\n    MatInputModule,\r\n    MatProgressBarModule,\r\n    FlexLayoutModule,\r\n    NgxDatatableModule,\r\n    ChartsModule,\r\n    SharedModule,\r\n    MatSelectModule,\r\n    ReactiveFormsModule,\r\n    MatDatepickerModule,\r\n    MatSelectCountryModule.forRoot('de'),\r\n    RouterModule.forChild(OthersRoutes),\r\n    ZXingScannerModule,\r\n    CoreFormModule\r\n  ],\r\n  declarations: [\r\n    AppBlankComponent,\r\n    ChequeWithdrawalComponent,\r\n    ChequeWithdrawal1Component,\r\n    CashWithdrawalComponent,\r\n    CashDepositComponent,\r\n    ChequeDepositComponent,\r\n    ForexTransactionComponent,\r\n    LoanPaymentComponent,\r\n    DepositTopupComponent,\r\n    UtilityBillpaymentComponent,\r\n    SelectServiceComponent,\r\n    AuthenticateComponent,\r\n    TokenGenerationComponent,\r\n    OnlynumberDirective,\r\n    SearchComponent,\r\n    OtpVerifyComponent,\r\n    AppointmentIdComponent,\r\n    KioskHomepageComponent,\r\n    NewcashwithdrawalComponent,\r\n    NewcashdepositComponent,\r\n    NewchequedepositComponent,\r\n    CwServiceComponent,\r\n    CheqWComponent,\r\n    ExitScreenComponent,\r\n    FeedbackComponent,\r\n    CdServiceComponent,\r\n    CheqDComponent,\r\n    ScanYourChequeComponent,\r\n    CaptureChequeDetailsComponent,\r\n    OcrScanPageComponent,\r\n    ForexServiceComponent,\r\n\r\n   \r\n  ],\r\n  entryComponents: [\r\n    AuthenticateComponent,\r\n    TokenGenerationComponent\r\n  ]\r\n})\r\nexport class OthersModule { }\r\n","import {ChangeDetectionStrategy, Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { DialogService } from 'app/shared/services/Dialog/dialog.service';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { OtpVerifyComponent } from '../otp-verify/otp-verify.component';\r\nimport { DataService } from 'app/shared/services/data.service';\r\nimport { otpModel } from 'app/shared/models/otp.model';\r\n\r\n@Component({\r\n  selector: 'app-cd-service',\r\n  templateUrl: './cd-service.component.html',\r\n  styleUrls: ['./cd-service.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class CdServiceComponent implements OnInit, OnDestroy {\r\n  cashDepositForm:FormGroup;\r\n  title = \"Cash Deposit\";\r\n  Token= new TokenGenerationObj();\r\n  qrData: any;\r\n  form:any;\r\n  custValidation: string;\r\n  phoneNumber: string;\r\n  appointmentId: any;\r\n  transBranch: string;\r\n  qrBranchCode: any;\r\n  denomRequired: any = '';\r\n  denomCodeArray: any[] = [\r\n    { key: 'count2000', value: 2000 },\r\n    { key: 'count500', value: 500 },\r\n    { key: 'count200', value: 200 },\r\n    { key: 'count100', value: 100 },\r\n    { key: 'count50', value: 50 },\r\n    { key: 'count20', value: 20 },\r\n    { key: 'count10', value: 10 },\r\n    { key: 'count1', value: 1 }\r\n\r\n  ];\r\n  ifQRvariable = false;\r\n  accountNum: string;\r\n  selectedAccountInfo: any;\r\n  custID: any;\r\n  productCode:'CHD';\r\n  tokenOrigin = \"Kiosk\";\r\n  accountBal: any;\r\n  cashWithdrawResponse: any;\r\n  tokenNum: any;\r\n  estimatedTime: any;\r\n  enableContinue: boolean=true;\r\n  custPref = \"N\";\r\n  entityCode=\"ENTCD\";\r\n  bankCode = \"BNKC\" ;\r\n  tokenBranch = \"KN\" ;\r\n  // payload: { transactionId: any; customerId: any; accountNumber: any; accountType: any; holderName: any; accountCurrency: any; transactionCurrency: any; transactionAmount: any; accountBalance: any; productCode: any; tokenOrigin: string; exchangeRate: string; accountAmount: string; totalChargeAmount: any; totalTransactionAmount: any; narrative: string; denomination: any[]; totalAmount: string; entityCode: string; bankCode: string; tokenBranch: string; customerCategory: string; tokenNumber: string; estimatedWaitTime: string; accountBranch: any; transactionBranch: string; };\r\n  payload:any;\r\n  cashDepositResponse: any;\r\n  cashdepositValues: any;\r\n  cashdepositType: any;\r\n  oTpModel = new otpModel();\r\n  phonenum: any;\r\n  accountNumber: any;\r\n  custmerID: any;\r\n  snack: any;\r\n\r\n  cashdepositForm: any;\r\n  transactionId: string;\r\n  transactionStatus: string;\r\n  denominationdata: {};\r\n  transactiondata: any;\r\n  displayDenom: boolean=false;\r\n  appointmentDetails: any;\r\n  cashDepositType: any;\r\n  constructor(private formBuilder: FormBuilder,private ls: LocalStoreService,private apiService:ApiService,\r\n    private router: Router,  private dialogService : DialogService, private dataService:DataService,\r\n    private _location: Location,private dialog: MatDialog) { }\r\n\r\n    ngOnInit(): void {\r\n      localStorage.setItem('chq_page', this.title)\r\n\r\n      this.custValidation = localStorage.getItem(\"customerValidation\");\r\n      this.cashDepositForm = this.formBuilder.group({\r\n        account: [],\r\n        transaction: [],\r\n        entityCode:[this.entityCode,[Validators.required]],\r\n        bankCode:[this.bankCode,[Validators.required]],\r\n        tokenBranch:[this.tokenBranch,[Validators.required]],\r\n        customerCategory:[this.custPref,[Validators.required]],\r\n        tokenNumber:['', [Validators.required]],\r\n        productCode:['CHD',\r\n          Validators.required\r\n      ],\r\n        tokenOrigin :['Kiosk',\r\n          Validators.required\r\n        ],\r\n        estimatedWaitTime:['', [Validators.required]],\r\n        narrative:['', [Validators.required]],\r\n      });\r\n      console.log(\"Cash Deposit\",this.cashDepositForm )\r\n      this.qrData = JSON.parse(JSON.parse(localStorage.getItem('scannerData')));\r\n      this.phoneNumber = localStorage.getItem(\"phonenumFromLogin\");\r\n      this.appointmentId = this.ls.getItem(\"TransactionType\");\r\n      this.transBranch=localStorage.getItem(\"TRANSACTIONBRANCH\") ;\r\n      this.dataService.gettransactionFormdata.subscribe(transaction=>{\r\n        if(Object.keys(transaction).length != 0  && transaction.constructor === Object){\r\n          console.log(\"Account component?\",transaction);\r\n          this.transactiondata=transaction;\r\n          if(this.transactiondata.transactionAmount){\r\n            this.displayDenom=true;\r\n          }\r\n        }\r\n   \r\n      });\r\n      this.dataService.getdenominationFormdata.subscribe(denomination=>{\r\n        if(denomination){\r\n          console.log(\"Account component?\",denomination);\r\n          this.denominationdata=denomination;\r\n        }\r\n   \r\n      })\r\n      this.dataService.getaccountFormdata.subscribe((data) => {\r\n        if (Object.keys(data).length != 0  && data.constructor === Object) {\r\n          console.log(\"Account component?\", data);\r\n          this.appointmentDetails=data;\r\n          console.log(\"Account component?\", this.appointmentDetails.appointmentId);\r\n        }\r\n      })\r\n    }\r\n\r\n\r\n    ngOnDestroy(): void {\r\n      localStorage.removeItem('chq_page');\r\n    }\r\n\r\n\r\n    onSubmit(event) {\r\n      console.log(\"On submit form\", this.cashDepositForm.value,event);\r\n    //   if()\r\n    //   this.onSaveofcashDeposit(this.cashDepositForm.value,this.ifQRvariable,'');\r\n    // }\r\n    if(event=='showAccountNum'){\r\n      console.log(\"First Condition\");\r\n      this.onSaveofcashDeposit(this.cashDepositForm.value,this.ifQRvariable,'');\r\n\r\n    }\r\n    if(event=='NotshowAccountNum'){\r\n      console.log(\"Second Condition\");\r\n      this.getOTP(this.cashDepositForm.value,this.ifQRvariable,'');\r\n    }\r\n  }\r\n  public redirectToHome(): void {\r\n     \r\n    this.dataService.removetransactionFormData(this.transactiondata);\r\n    this.dataService.removeaccountFormData(this.appointmentDetails);\r\n    this.dataService.removedenominationFormData(this.denominationdata);\r\n    this.router.navigateByUrl('/others/kioskHome');\r\n  }\r\n    onSaveofcashDeposit(form, type, cdForm) {\r\n      //formData.transactionBranch = this.transBranch;\r\n      console.log(form, type, cdForm )\r\n      if(this.qrData){\r\n        if(this.qrData.transactionBranch){\r\n          this.apiService.fetchBranchInfoByBranchName(this.qrData.transactionBranch).subscribe(response=>{\r\n            this.qrBranchCode=response;\r\n            \r\n          })\r\n        }\r\n      }\r\n      let denominationData: any = {};\r\n      let denominationDataArray: any[] = [];\r\n      if(this.denomRequired == 'yes'){\r\n      for (let i = 0; i < this.denomCodeArray.length; i++) {\r\n        if (cdForm.value[this.denomCodeArray[i].key]) {\r\n          // denominationData.transactionId = this.cashdepositFor;\r\n          denominationData.denominationKey = this.denomCodeArray[i].value;\r\n          denominationData.denominationValue = +cdForm.value[this.denomCodeArray[i].key];\r\n          denominationData.currency = this.cashDepositForm.value.transactionCurrency;\r\n          // denominationData.amountAvailiable = 15200 - (cdForm.value[this.denomCodeArray[i].key] * this.denomCodeArray[i].value);\r\n          denominationDataArray.push(denominationData);\r\n          console.log(denominationDataArray)\r\n          denominationData = {};\r\n        }\r\n      }\r\n    }\r\n          // form.tokenBranch = \"KN\";\r\n          console.log(this.ifQRvariable);\r\n          if(this.appointmentDetails?.appointmentId){\r\n            console.log(this.appointmentDetails)\r\n            this.Token.customerId=this.appointmentDetails.customerId,\r\n            this.Token.accountNumber=this.appointmentDetails.accountNumber,\r\n            this.Token.accountType=this.appointmentDetails.accountType,\r\n            this.Token.accountCurrency=this.appointmentDetails.accountCurrency,\r\n            this.Token.accountBalance=this.appointmentDetails.accountBalance,\r\n            this.Token.accountBranch=this.appointmentDetails.accountBranch,\r\n            this.Token.holderName=this.appointmentDetails.holderName,\r\n          \r\n            this.Token.transactionCurrency=this.appointmentDetails.transactionCurrency,\r\n            this.Token.transactionAmount=this.appointmentDetails.transactionAmount;\r\n            this.Token.transactionId=this.appointmentDetails.transactionId,\r\n            this.Token.totalChargeAmount=this.appointmentDetails.totalChargeAmount,\r\n            this.Token.totalTransactionAmount=this.appointmentDetails.totalTransactionAmount,\r\n      \r\n            this.Token.transactionBranch=this.transBranch,\r\n            this.Token.entityCode=this.entityCode,\r\n            this.Token.bankCode=this.bankCode,\r\n            this.Token.tokenBranch=this.tokenBranch,\r\n            this.Token.customerCategory=this.custPref,\r\n            this.Token.productCode='CHD',\r\n            this.Token.tokenOrigin=this.tokenOrigin,\r\n      \r\n            this.Token.tokenNumber=\"\",\r\n            this.Token.estimatedWaitTime=\"\",\r\n            this.Token.exchangeRate=\"\",\r\n            this.Token.accountAmount=\"\",\r\n            this.Token.narrative=\"\",\r\n           //  this.Token.denomination=[],\r\n            this.Token.totalAmount=\"\"\r\n            if(this.denomRequired == 'yes'){\r\n             this.Token.denomination=denominationDataArray;\r\n                }\r\n            \r\n           \r\n           // }\r\n           console.log(\"Not a qrvariable\",this.Token);\r\n           }\r\n          // if(!this.ifQRvariable && this.appointmentDetails==null)\r\n          else{\r\n        \r\n              console.log(\"Not a qrvariable\",this.Token);\r\n            \r\n             this.Token.customerId=form.account.customerId,\r\n             this.Token.accountNumber=form.account.accountNumber,\r\n             this.Token.accountType=form.account.accountType,\r\n             this.Token.accountCurrency=form.account.accountCurrency,\r\n             this.Token.accountBalance=form.account.accountBalance,\r\n             this.Token.accountBranch=form.account.accountBranch,\r\n             this.Token.holderName=form.account.holderName,\r\n           \r\n             this.Token.transactionCurrency=form.transaction.transactionCurrency\r\n             if(this.qrData){\r\n              this.Token.transactionAmount=form.transaction.transactionAmount;\r\n             }\r\n             else{\r\n              this.Token.transactionAmount=form.transaction.transactionAmount.replace(/,/g, \"\");\r\n             }            \r\n             this.Token.transactionId=form.transaction.transactionId,\r\n             this.Token.totalChargeAmount=form.transaction.totalChargeAmount,\r\n             this.Token.totalTransactionAmount=form.transaction.totalTransactionAmount,\r\n      \r\n             this.Token.transactionBranch=this.transBranch,\r\n             this.Token.entityCode=this.entityCode,\r\n             this.Token.bankCode=this.bankCode,\r\n             this.Token.tokenBranch=this.tokenBranch,\r\n             this.Token.customerCategory=this.custPref,\r\n             this.Token.productCode='CHD',\r\n             this.Token.tokenOrigin=this.tokenOrigin,\r\n      \r\n             this.Token.tokenNumber=\"\",\r\n             this.Token.estimatedWaitTime=\"\",\r\n             this.Token.exchangeRate=\"\",\r\n             this.Token.accountAmount=\"\",\r\n             this.Token.narrative=\"\",\r\n            //  this.Token.denomination=[],\r\n             this.Token.totalAmount=\"\"\r\n             \r\n             if(this.denomRequired == 'yes'){\r\n              this.Token.denomination=denominationDataArray;\r\n                 }\r\n            // }\r\n            console.log(\"Not a qrvariable\",this.Token);\r\n          }\r\n            \r\n    \r\n         \r\n          \r\n         \r\n          // else{\r\n               \r\n          //   this.Token.customerId=form.account.customerId,\r\n          //   this.Token.accountNumber=form.account.accountNumber,\r\n          //   this.Token.accountType=form.account.accountType,\r\n          //   this.Token.accountCurrency=form.account.accountCurrency,\r\n          //   this.Token.accountBalance=form.account.accountBalance,\r\n          //   this.Token.accountBranch=form.account.accountBranch,\r\n          //   this.Token.holderName=form.account.holderName,\r\n          \r\n          //   this.Token.transactionCurrency=form.transaction.transactionCurrency,\r\n          //   this.Token.transactionAmount=form.transaction.transactionAmount.replace(/,/g, \"\");\r\n          //   this.Token.transactionId=form.transaction.transactionId,\r\n          //   this.Token.totalChargeAmount=form.transaction.totalChargeAmount,\r\n          //   this.Token.totalTransactionAmount=form.transaction.totalTransactionAmount,\r\n     \r\n          //   this.Token.transactionBranch=this.transBranch,\r\n          //   this.Token.entityCode=this.entityCode,\r\n          //   this.Token.bankCode=this.bankCode,\r\n          //   this.Token.tokenBranch=this.tokenBranch,\r\n          //   this.Token.customerCategory=this.custPref,\r\n          //   this.Token.productCode='CHD',\r\n          //   this.Token.tokenOrigin=this.tokenOrigin,\r\n     \r\n          //   this.Token.tokenNumber=\"\",\r\n          //   this.Token.estimatedWaitTime=\"\",\r\n          //   this.Token.exchangeRate=\"\",\r\n          //   this.Token.accountAmount=\"\",\r\n          //   this.Token.narrative=\"\",\r\n          //  //  this.Token.denomination=[],\r\n          //   this.Token.totalAmount=\"\"\r\n            \r\n          //   if(this.denomRequired == 'yes'){\r\n          //    this.Token.denomination=denominationDataArray;\r\n          //       }\r\n          //   // if(this.qrData){\r\n          //   //   if(this.qrData.transactionBranch){\r\n          //   //     form.tokenBranch = this.qrBranchCode.transactionBranch;\r\n          //   //   }\r\n          //   // }\r\n            \r\n          //   // form.accountBalance = this.accountBal;\r\n          // }\r\n          if(this.appointmentId && this.appointmentId.data){\r\n            form.transactionId = this.appointmentId.data.transactionId;\r\n            form.transactionStatus = this.appointmentId.data.transactionStatus;\r\n          }\r\n      this.apiService.saveofCashDeposit(this.Token).subscribe(cashWithdrawResp=>{\r\n        console.log( \"Response Success, Data Saved\", cashWithdrawResp);\r\n        this.cashWithdrawResponse = cashWithdrawResp;\r\n        this.tokenNum = this.cashWithdrawResponse.tokenNumber;\r\n        this.estimatedTime = this.cashWithdrawResponse.estimatedWaitTime;\r\n        localStorage.setItem(\"tokenNumer\",this.tokenNum);\r\n        localStorage.setItem(\"estimatedTiming\",this.estimatedTime);\r\n        this.enableContinue=false;\r\n        if(this.cashWithdrawResponse){\r\n        this.dialogService.tokenGenerationDialog();\r\n        }\r\n      });\r\n    }\r\n    getOTP(formData, type, cdForm){\r\n      console.log(\"Get Otp\",formData,type)\r\n      this.phonenum=this.ls.getItem('phonenumFromLogin');\r\n      this.cashdepositValues =formData;\r\n      this.cashDepositType = type;\r\n      this.oTpModel.source = 'customer';\r\n      this.oTpModel.source_key = 'mobile';\r\n      this.oTpModel.source_value = this.phonenum;\r\n      this.oTpModel.isMobileLogin = false;\r\n      let amount= 50000;\r\n      let transamountwithoutcomma=this.cashdepositValues.transaction.transactionAmount.replace(/,/g, \"\");\r\n      console.log( transamountwithoutcomma);\r\n      if(transamountwithoutcomma >= amount){\r\n        this.apiService.getOtp(this.oTpModel).subscribe(otpResp => {\r\n          console.log('otp1',otpResp);\r\n          if (otpResp) {\r\n            console.log('otp2',otpResp);\r\n            this.openDialogOTP(this.phonenum);\r\n            this.snack.open(\"An OTP has been sent to the Registered Mobile Number.\" , \"\", {\r\n              duration: 4000,\r\n              verticalPosition: 'top',\r\n              horizontalPosition: 'right'\r\n            });\r\n          }\r\n        })\r\n      }\r\n      else{\r\n        console.log(\"Else\")\r\n        this.getOTPforSave(this.cashdepositValues,this.cashDepositType,'');\r\n      }\r\n        \r\n        }\r\n    \r\n  cashdeposiform(cashdepositValues: any, cashdeposiform: any, cashdepositType: any) {\r\n    throw new Error('Method not implemented.');\r\n  }\r\n    openDialogOTP(numbr) {\r\n      console.log(\"num\",numbr);\r\n      const dialogRef = this.dialog.open(OtpVerifyComponent, {\r\n        data: { number: numbr, type: \"numbr\" },\r\n        disableClose: true,\r\n      });\r\n      dialogRef.afterClosed().subscribe(submit => {\r\n        if(submit){\r\n          this.getOTPforSave( this.cashdepositValues,this.cashdepositType,'');\r\n        }\r\n       });\r\n    }\r\n   \r\n      getOTPforSave(formData,type,cdForm){\r\n        console.log(formData);\r\n        let denominationData: any = {};\r\n            let denominationDataArray: any[] = [];\r\n            if(this.denomRequired == 'yes'){\r\n            for (let i = 0; i < this.denomCodeArray.length; i++) {\r\n              if (cdForm.value[this.denomCodeArray[i].key]) {\r\n                // denominationData.transactionId = this.cashdepositFor;\r\n                denominationData.denominationKey = this.denomCodeArray[i].value;\r\n                denominationData.denominationValue = +cdForm.value[this.denomCodeArray[i].key];\r\n                denominationData.currency = this.cashdepositForm.value.transactionCurrency;\r\n                // denominationData.amountAvailiable = 15200 - (cdForm.value[this.denomCodeArray[i].key] * this.denomCodeArray[i].value);\r\n                denominationDataArray.push(denominationData);\r\n                console.log(denominationDataArray)\r\n                denominationData = {};\r\n              }\r\n            }\r\n          }\r\n          console.log(this.custValidation)\r\n         if(this.custValidation == \"New Customer\"){\r\n          this.Token.customerId=formData.account.customerId,\r\n           this.Token.accountNumber=formData.account.accountNumber,\r\n           this.Token.accountType=formData.account.accountType,\r\n           this.Token.accountCurrency=formData.account.accountCurrency,\r\n           this.Token.accountBalance=formData.account.accountBalance,\r\n           this.Token.accountBranch=formData.account.accountBranch,\r\n           this.Token.holderName=formData.account.holderName,\r\n         \r\n           this.Token.transactionCurrency=formData.transaction.transactionCurrency,\r\n           this.Token.transactionAmount=formData.transaction.transactionAmount.replace(/,/g, \"\");\r\n           this.Token.transactionId=formData.transaction.transactionId,\r\n           this.Token.totalChargeAmount=formData.transaction.totalChargeAmount,\r\n           this.Token.totalTransactionAmount=formData.transaction.totalTransactionAmount,\r\n    \r\n           this.Token.transactionBranch=this.transBranch,\r\n           this.Token.entityCode=this.entityCode,\r\n           this.Token.bankCode=this.bankCode,\r\n           this.Token.tokenBranch=this.tokenBranch,\r\n           this.Token.customerCategory=this.custPref,\r\n           this.Token.productCode='CHD',\r\n           this.Token.tokenOrigin=this.tokenOrigin,\r\n    \r\n           this.Token.tokenNumber=\"\",\r\n           this.Token.estimatedWaitTime=\"\",\r\n           this.Token.exchangeRate=\"\",\r\n           this.Token.accountAmount=\"\",\r\n           this.Token.narrative=\"\",\r\n          //  this.Token.denomination=[],\r\n           this.Token.totalAmount=\"\"\r\n           if(this.denomRequired == 'yes'){\r\n            this.Token.denomination=denominationDataArray;\r\n               }\r\n         \r\n        }\r\n        else{\r\n          console.log(\"Not a new customer\");\r\n         \r\n          this.Token.customerId=formData.account.customerId,\r\n           this.Token.accountNumber=formData.account.accountNumber,\r\n           this.Token.accountType=formData.account.accountType,\r\n           this.Token.accountCurrency=formData.account.accountCurrency,\r\n           this.Token.accountBalance=formData.account.accountBalance,\r\n           this.Token.accountBranch=formData.account.accountBranch,\r\n           this.Token.holderName=formData.account.holderName,\r\n         \r\n           this.Token.transactionCurrency=formData.transaction.transactionCurrency,\r\n           this.Token.transactionAmount=formData.transaction.transactionAmount.replace(/,/g, \"\");\r\n           this.Token.transactionId=formData.transaction.transactionId,\r\n           this.Token.totalChargeAmount=formData.transaction.totalChargeAmount,\r\n           this.Token.totalTransactionAmount=formData.transaction.totalTransactionAmount,\r\n    \r\n           this.Token.transactionBranch=this.transBranch,\r\n           this.Token.entityCode=this.entityCode,\r\n           this.Token.bankCode=this.bankCode,\r\n           this.Token.tokenBranch=this.tokenBranch,\r\n           this.Token.customerCategory=this.custPref,\r\n           this.Token.productCode='CHD',\r\n           this.Token.tokenOrigin=this.tokenOrigin,\r\n    \r\n           this.Token.tokenNumber=\"\",\r\n           this.Token.estimatedWaitTime=\"\",\r\n           this.Token.exchangeRate=\"\",\r\n           this.Token.accountAmount=\"\",\r\n           this.Token.narrative=\"\",\r\n          //  this.Token.denomination=[],\r\n           this.Token.totalAmount=\"\"\r\n           if(this.denomRequired == 'yes'){\r\n            this.Token.denomination=denominationDataArray;\r\n               }\r\n               console.log(this.Token);\r\n        }\r\n         \r\n        if(this.appointmentId && this.appointmentId.data){\r\n          this.Token.transactionId = this.appointmentId.data.transactionId;\r\n          this.Token.transactionStatus = this.appointmentId.data.transactionStatus;\r\n        }\r\n        \r\n            console.log(\"before api call :: \",this.Token);\r\n            this.apiService.saveofCashDeposit(this.Token).subscribe(cashDepositResp => {\r\n              console.log(\"Response Success\", cashDepositResp);\r\n              this.cashDepositResponse = cashDepositResp;\r\n              this.tokenNum = this.cashDepositResponse.tokenNumber;\r\n              this.estimatedTime = this.cashDepositResponse.estimatedWaitTime;\r\n              localStorage.setItem(\"tokenNumer\", this.tokenNum);\r\n              localStorage.setItem(\"estimatedTiming\", this.estimatedTime);\r\n              this.enableContinue = false;\r\n              if (this.cashDepositResponse) {\r\n                this.dialogService.tokenGenerationDialog();\r\n              }\r\n            });\r\n      \r\n         }\r\n  \r\n    onReset() {\r\n      this.cashDepositForm.reset();\r\n    }\r\n  \r\n \r\n  \r\n    back() {\r\n      this._location.back();\r\n    }\r\n    \r\n\r\n}\r\nexport class TokenGenerationObj{\r\n  transactionId:any;\r\n        customerId:any;\r\n        accountNumber:any;\r\n        accountType:any;\r\n        holderName:any;\r\n        accountCurrency:any;\r\n        transactionCurrency:any;\r\n        transactionAmount:any;\r\n        accountBalance:any;\r\n        productCode:any;\r\n        tokenOrigin:any;\r\n        exchangeRate:any;\r\n        accountAmount:any;\r\n        totalChargeAmount:any;\r\n        totalTransactionAmount:any;\r\n        narrative:any;\r\n        denomination:any[];\r\n        totalAmount:any;\r\n        entityCode:any;\r\n        bankCode:any;\r\n        tokenBranch:any;\r\n        customerCategory:any;\r\n        tokenNumber:any;\r\n        estimatedWaitTime:any;\r\n        accountBranch:any;\r\n        transactionBranch:any;\r\n        transactionStatus:any\r\n}\r\n","<!-- Cash deposit form start-->\r\n\r\n<app-header \r\n   [title]=\"title\">\r\n</app-header>\r\n\r\n<form *ngIf=\"cashDepositForm\"\r\n      [formGroup]=\"cashDepositForm\">\r\n      <div fxLayout=\"row\">\r\n            <mat-card fxFlex=\"100%\" style=\"margin-top: -3%;height: 70%;\">\r\n                <app-account-information-form formControlName=\"account\"></app-account-information-form>\r\n                <app-transaction-information-form formControlName=\"transaction\"></app-transaction-information-form>\r\n            </mat-card>\r\n            <div *ngIf=\"displayDenom\" style=\"margin-top: -4%;\">\r\n                <app-denomination-info formControlName=\"denomination\"></app-denomination-info>\r\n            </div>\r\n        </div>\r\n    <div  style=\"margin-top: -0.5%;\">\r\n        <app-footer \r\n         saveText=\"Continue\" \r\n         (save)=\"onSubmit($event)\" \r\n         (cancel)=\"redirectToHome()\" \r\n         (exit)=\"back()\" \r\n         [cancelDisabled]=\"false\"\r\n        >\r\n        </app-footer>\r\n    </div>\r\n\r\n</form>","import { Component, Input, OnInit } from '@angular/core';\r\nimport { Location } from '@angular/common';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { Router } from '@angular/router';\r\nimport { DataService } from 'app/shared/services/data.service';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { ScanYourChequeComponent } from 'app/views/others/scan-your-cheque/scan-your-cheque.component';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.scss']\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n  @Input() public title: string = null;\r\n  appointmentId: any;\r\n  transactiondata: any;\r\n\r\n  accountData: any;\r\n  chqPage: string;\r\n  denominationdata: any;\r\n  custValidation: string;\r\n  custNameFromLogin: string;\r\n  \r\n  constructor(private dialog: MatDialog,private _location: Location,\r\n    private ls: LocalStoreService,private router : Router,private dataService:DataService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.chqPage = localStorage.getItem('chq_page');\r\n    this.appointmentId = this.ls.getItem(\"TransactionType\");\r\n    this.custValidation = localStorage.getItem(\"customerValidation\");\r\n    this.custNameFromLogin = localStorage.getItem(\"FromLogin\");\r\n    this.dataService.gettransactionFormdata.subscribe(transaction=>{\r\n      if(Object.keys(transaction).length != 0  && transaction.constructor === Object){\r\n        this.transactiondata=transaction;\r\n       \r\n      }\r\n \r\n    });\r\n    this.dataService.getaccountFormdata.subscribe(account=>{\r\n      console.log(Object.keys(account).length === 0,account.constructor === Object)\r\n      if(Object.keys(account).length != 0  && account.constructor === Object){\r\n        this.accountData=account;\r\n      }\r\n \r\n    });\r\n    this.dataService.getdenominationFormdata.subscribe(denomination=>{\r\n      if(denomination){\r\n        this.denominationdata=denomination;\r\n      }\r\n    })\r\n  }\r\n  goToServiceScreens(){\r\n    console.log(\"hgfhg\");\r\n    if(this.appointmentId){\r\n    if(this.appointmentId.data.appointmentId){\r\n      this.router.navigateByUrl('/sessions/login');\r\n      localStorage.removeItem(\"FromLogin\")\r\n      localStorage.removeItem(\"TransactionType\")\r\n      localStorage.removeItem(\"customerId\")\r\n      localStorage.removeItem(\"phonenumFromLogin\")\r\n      localStorage.removeItem(\"customerValidation\")\r\n      localStorage.removeItem(\"otpPhoneNum\")\r\n      localStorage.removeItem(\"AccountBal\")\r\n      localStorage.removeItem(\"AccountNumber\")\r\n      localStorage.removeItem(\"ProductCode\")\r\n      localStorage.removeItem(\"tokenNumer\")\r\n      localStorage.removeItem(\"estimatedTiming\")\r\n      localStorage.removeItem(\"userId\")\r\n      localStorage.removeItem(\"scannerData\")\r\n      localStorage.removeItem(\"custholderName\")\r\n    }\r\n  }\r\n    else{\r\n      this.router.navigateByUrl('/others/kioskHome');\r\n    }\r\n    \r\n  } \r\n\r\n  scanTheCheque(){\r\n    let dialogRef = this.dialog.open(ScanYourChequeComponent, {\r\n      width: '60%',\r\n      height:'65%',\r\n    });\r\n}\r\n\r\n  back() {\r\n    this.dataService.removetransactionFormData(this.transactiondata);\r\n    this.dataService.removeaccountFormData(this.accountData);\r\n    this.dataService.removedenominationFormData(this.denominationdata);\r\n    this._location.back();\r\n  }\r\n\r\n}\r\n","<div class=\"section\">\r\n    <div fxLayout=\"row\"  fxLayoutAlign=\"start\" fxLayoutGap=\"16px\">\r\n        <!-- <button mat-icon-button (click)=\"back()\"> -->\r\n            <!-- <mat-icon>arrow_back</mat-icon> -->\r\n\r\n            <!-- <div fxLayout=\"row\" *ngIf=\"accountData?.appointmentId?==null\"> -->\r\n                <mat-icon  *ngIf=\"(this.custValidation != null || this.custNameFromLogin != null)\" (click)=\"back()\" style=\"cursor: pointer;\">arrow_back</mat-icon><h2 style=\"font-weight: bold;\">{{title}}</h2>\r\n\r\n            <!-- </div> -->\r\n\r\n\r\n            <button class=\"scan\"*ngIf=\"chqPage === 'Cheque Deposit' || chqPage === 'Cheque Withdrawal'\" (click)=\"scanTheCheque()\" mat-button >scan your check</button>\r\n\r\n        <!-- </button> -->\r\n       <!-- {{ title }} -->\r\n    </div>\r\n</div>","import { ChangeDetectionStrategy, Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { DialogService } from 'app/shared/services/Dialog/dialog.service';\r\nimport { Token } from '@angular/compiler/src/ml_parser/lexer';\r\nimport { otpModel } from 'app/shared/models/otp.model';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { OtpVerifyComponent } from '../otp-verify/otp-verify.component';\r\nimport { DataService } from 'app/shared/services/data.service';\r\n\r\n@Component({\r\n  selector: 'app-cw-service',\r\n  templateUrl: './cw-service.component.html',\r\n  styleUrls: ['./cw-service.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class CwServiceComponent implements OnInit, OnDestroy {\r\n  cashWithdrawForm: FormGroup;\r\n  title = \"Cash Withdrawal\";\r\n  Token= new TokenGenerationObj();\r\n  qrData: any;\r\n  phoneNumber: string;\r\n  appointmentId: any;\r\n  transBranch: string;\r\n  qrBranchCode: any;\r\n  denomRequired: any = '';\r\n  denomCodeArray: any[] = [\r\n    { key: 'count2000', value: 2000 },\r\n    { key: 'count500', value: 500 },\r\n    { key: 'count200', value: 200 },\r\n    { key: 'count100', value: 100 },\r\n    { key: 'count50', value: 50 },\r\n    { key: 'count20', value: 20 },\r\n    { key: 'count10', value: 10 },\r\n    { key: 'count1', value: 1 }\r\n\r\n  ];\r\n  ifQRvariable = false;\r\n  accountNum: string;\r\n  selectedAccountInfo: any;\r\n  custID: any;\r\n  productCode:'CHW';\r\n  tokenOrigin = \"Kiosk\";\r\n  accountBal: any;\r\n  cashWithdrawResponse: any;\r\n  tokenNum: any;\r\n  estimatedTime: any;\r\n  enableContinue: boolean=true;\r\n  custPref = \"N\";\r\n  entityCode=\"ENTCD\";\r\n  bankCode = \"BNKC\" ;\r\n  tokenBranch = \"KN\" ;\r\n  oTpModel = new otpModel();\r\n  // payload: { transactionId: any; customerId: any; accountNumber: any; accountType: any; holderName: any; accountCurrency: any; transactionCurrency: any; transactionAmount: any; accountBalance: any; productCode: any; tokenOrigin: string; exchangeRate: string; accountAmount: string; totalChargeAmount: any; totalTransactionAmount: any; narrative: string; denomination: any[]; totalAmount: string; entityCode: string; bankCode: string; tokenBranch: string; customerCategory: string; tokenNumber: string; estimatedWaitTime: string; accountBranch: any; transactionBranch: string; };\r\n  payload:any;\r\n  cashwithDrwValues: any;\r\n  cashwithDrwType: any;\r\n  phonenum: any;\r\n  custValidation: string;\r\n  denominationdata: {};\r\n  transactiondata: any;\r\n  displayDenom: boolean=false;\r\n  appointmentDetails:any;\r\n\r\n  constructor(private formBuilder: FormBuilder,private ls: LocalStoreService,private apiService:ApiService,\r\n    private router: Router,  private dialogService : DialogService,  private dialog: MatDialog, private snack: MatSnackBar,\r\n    private _location: Location,private dataService:DataService ) { }\r\n\r\n  ngOnInit(): void {\r\n    localStorage.setItem('chq_page', this.title);\r\n    this.custValidation = localStorage.getItem(\"customerValidation\");\r\n    this.cashWithdrawForm = this.formBuilder.group({\r\n      account: [],\r\n      transaction: [],\r\n      denomination:[],\r\n      entityCode:[this.entityCode,[Validators.required]],\r\n      bankCode:[this.bankCode,[Validators.required]],\r\n      tokenBranch:[this.tokenBranch,[Validators.required]],\r\n      customerCategory:[this.custPref,[Validators.required]],\r\n      tokenNumber:['', [Validators.required]],\r\n      productCode:['CHW',\r\n        Validators.required\r\n    ],\r\n      tokenOrigin :['Kiosk',\r\n        Validators.required\r\n      ],\r\n      estimatedWaitTime:['', [Validators.required]],\r\n      narrative:['', [Validators.required]],\r\n    });\r\n    console.log(\"Cash withdrawal\",this.cashWithdrawForm)\r\n    this.qrData = JSON.parse(JSON.parse(localStorage.getItem('scannerData')));\r\n    this.phoneNumber = localStorage.getItem(\"phonenumFromLogin\");\r\n    this.appointmentId = this.ls.getItem(\"TransactionType\");\r\n    this.transBranch=localStorage.getItem(\"TRANSACTIONBRANCH\") ;\r\n    // if(this.qrData!=null){\r\n    //   // ;\r\n    //   this.ifQRvariable = true;\r\n    //   console.log(\"Account\", this.qrData);\r\n    //   this.cashWithdrawForm.controls.holderName.setValue(this.qrData.holderName);\r\n    //   this.cashWithdrawForm.controls.accountType.setValue(this.qrData.accountType);\r\n    //   this.cashWithdrawForm.controls.accountNumber.setValue(this.qrData.accountId);\r\n    //  // this.getChargeDetails(this.qrData.accountId,'');\r\n    //   this.cashWithdrawForm.controls.transactionAmount.setValue(this.qrData.transactionAmount);\r\n    //   this.cashWithdrawForm.controls.accountCurrency.setValue(this.qrData.accountCurrency);\r\n    //   this.cashWithdrawForm.controls.transactionCurrency.setValue(this.qrData.transactionCurrency);\r\n    //   this.accountBal = this.qrData.accountBalance;\r\n    //   // this.customerID = this.qrData.customerId;\r\n    //   // this.currencyImage = 'currency-flag-'+this.qrData.accountCurrency.toLowerCase();\r\n    //   // this.currencyImage = 'currency-flag-'+this.qrData.transactionCurrency.toLowerCase();\r\n    //   if(this.qrData.transactionBranch !=null && this.qrData.transactionBranch !=''){\r\n    //     this.cashWithdrawForm.controls.transactionBranch.setValue(this.qrData.transactionBranch);\r\n    //   }else{\r\n    //     this.cashWithdrawForm.controls.transactionBranch.setValue('Kasturi Nagar');\r\n    //   }\r\n      \r\n    // //  this.getAccountBranch();\r\n    // }\r\n   \r\n    this.dataService.gettransactionFormdata.subscribe(transaction=>{\r\n      console.log(Object.keys(transaction).length === 0,transaction.constructor === Object)\r\n      if(Object.keys(transaction).length != 0  && transaction.constructor === Object){\r\n        this.transactiondata=transaction;\r\n        console.log(this.transactiondata);\r\n        if(this.transactiondata.transactionAmount){\r\n          this.displayDenom=true;\r\n        }\r\n       \r\n      }\r\n \r\n    });\r\n    this.dataService.getdenominationFormdata.subscribe(denomination=>{\r\n      if(denomination){\r\n        console.log(\"Account component?\",denomination);\r\n        this.denominationdata=denomination;\r\n      }\r\n \r\n    })\r\n    this.dataService.getaccountFormdata.subscribe((data) => {\r\n      if (Object.keys(data).length != 0  && data.constructor === Object) {\r\n        this.appointmentDetails=data;\r\n        console.log(\"Account component?\", this.appointmentDetails.appointmentId);\r\n      }\r\n    })\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    console.log(\"Cash withdrawal\",this.cashWithdrawForm)\r\n    //Called after ngAfterContentInit when the component's view has been initialized. Applies to components only.\r\n    //Add 'implements AfterViewInit' to the class.\r\n    // this.cashWithdrawForm = this.formBuilder.group({\r\n    //   account: [],\r\n    //   transaction: []\r\n    // });\r\n    // console.log(\"Cash withdrawal\",this.cashWithdrawForm )\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    localStorage.removeItem('chq_page');\r\n  }\r\n\r\n  onSubmit(event) {\r\n    console.log(\"On submit form\", this.cashWithdrawForm.value,event);\r\n    if(event=='showAccountNum'){\r\n      console.log(\"First Condition\");\r\n      this.onSaveofCashWithdraw(this.cashWithdrawForm.value,this.ifQRvariable,this.denominationdata)\r\n    }\r\n    if(event=='NotshowAccountNum'){\r\n      console.log(\"Second Condition\");\r\n      this.getOTP(this.cashWithdrawForm.value,this.ifQRvariable,this.denominationdata);\r\n    }\r\n  }\r\n  onSaveofCashWithdraw(form,type,cdForm){\r\n    console.log(form,type,cdForm);\r\n    // this.dataService.getNavParam.subscribe(denomRequired=>{\r\n    //   if(denomRequired){\r\n    //     console.log(\"Account component?\",denomRequired);\r\n    //     this.denomRequired=denomRequired;\r\n    //   }\r\n \r\n    // })\r\n    // form.transactionBranch = this.transBranch;\r\n    if(this.qrData){\r\n      if(this.qrData.transactionBranch){\r\n        this.apiService.fetchBranchInfoByBranchName(this.qrData.transactionBranch).subscribe(response=>{\r\n          this.qrBranchCode=response;\r\n          \r\n        })\r\n      }\r\n    }\r\n\r\n     \r\n  let denominationData: any = {};\r\n  let denominationDataArray: any[] = [];\r\n    if(this.denomRequired == 'yes'){\r\n    for (let i = 0; i < this.denomCodeArray.length; i++) {\r\n      if (cdForm.value[this.denomCodeArray[i].key]) {\r\n        // denominationData.transactionId = this.cashdepositFor;\r\n        denominationData.denominationKey = this.denomCodeArray[i].value;\r\n        denominationData.denominationValue = +cdForm.value[this.denomCodeArray[i].key];\r\n        denominationData.currency = this.cashWithdrawForm.value.transactionCurrency;\r\n        // denominationData.amountAvailiable = 15200 - (cdForm.value[this.denomCodeArray[i].key] * this.denomCodeArray[i].value);\r\n        denominationDataArray.push(denominationData);\r\n        console.log(denominationDataArray)\r\n        denominationData = {};\r\n      }\r\n    }\r\n  }\r\n \r\n      console.log(\"Not a qrvariable\",this.Token);\r\n      // form.tokenBranch = \"KN\";\r\n     if(this.appointmentDetails?.appointmentId){\r\n      console.log(this.appointmentDetails)\r\n      this.Token.customerId=this.appointmentDetails.customerId,\r\n      this.Token.accountNumber=this.appointmentDetails.accountNumber,\r\n      this.Token.accountType=this.appointmentDetails.accountType,\r\n      this.Token.accountCurrency=this.appointmentDetails.accountCurrency,\r\n      this.Token.accountBalance=this.appointmentDetails.accountBalance,\r\n      this.Token.accountBranch=this.appointmentDetails.accountBranch,\r\n      this.Token.holderName=this.appointmentDetails.holderName,\r\n    \r\n      this.Token.transactionCurrency=this.appointmentDetails.transactionCurrency,\r\n      this.Token.transactionAmount=this.appointmentDetails.transactionAmount;\r\n      this.Token.transactionId=this.appointmentDetails.transactionId,\r\n      this.Token.totalChargeAmount=this.appointmentDetails.totalChargeAmount,\r\n      this.Token.totalTransactionAmount=this.appointmentDetails.totalTransactionAmount,\r\n\r\n      this.Token.transactionBranch=this.transBranch,\r\n      this.Token.entityCode=this.entityCode,\r\n      this.Token.bankCode=this.bankCode,\r\n      this.Token.tokenBranch=this.tokenBranch,\r\n      this.Token.customerCategory=this.custPref,\r\n      this.Token.productCode='CHW',\r\n      this.Token.tokenOrigin=this.tokenOrigin,\r\n\r\n      this.Token.tokenNumber=\"\",\r\n      this.Token.estimatedWaitTime=\"\",\r\n      this.Token.exchangeRate=\"\",\r\n      this.Token.accountAmount=\"\",\r\n      this.Token.narrative=\"\",\r\n     //  this.Token.denomination=[],\r\n      this.Token.totalAmount=\"\"\r\n      if(this.denomRequired == 'yes'){\r\n       this.Token.denomination=denominationDataArray;\r\n          }\r\n      \r\n     \r\n     // }\r\n     console.log(\"Not a qrvariable\",this.Token);\r\n     }\r\n    //  console.log(\"Not a qrvariable\",this.ifQRvariable ,this.appointmentDetails);\r\n    // if(!this.appointmentDetails)\r\n    else{\r\n     console.log(form)\r\n      // let payload = {\r\n        console.log(\"Not a qrvariable\",this.Token);\r\n       this.Token.customerId=form.account.customerId,\r\n       this.Token.accountNumber=form.account.accountNumber,\r\n       this.Token.accountType=form.account.accountType,\r\n       this.Token.accountCurrency=form.account.accountCurrency,\r\n       this.Token.accountBalance=form.account.accountBalance,\r\n       this.Token.accountBranch=form.account.accountBranch,\r\n       this.Token.holderName=form.account.holderName,\r\n       this.Token.accountCurrency=form.account.accountCurrency,\r\n     \r\n       this.Token.transactionCurrency=form.transaction.transactionCurrency\r\n       if(this.qrData){\r\n        this.Token.transactionAmount=form.transaction.transactionAmount;\r\n\r\n       }\r\n       else{\r\n        this.Token.transactionAmount=form.transaction.transactionAmount.replace(/,/g, \"\");\r\n       }\r\n       this.Token.transactionId=form.transaction.transactionId,\r\n       this.Token.totalChargeAmount=form.transaction.totalChargeAmount,\r\n       this.Token.totalTransactionAmount=form.transaction.totalTransactionAmount,\r\n       this.Token.exchangeRate = form.transaction.exchangeRate;\r\n\r\n       this.Token.transactionBranch=this.transBranch,\r\n       this.Token.entityCode=this.entityCode,\r\n       this.Token.bankCode=this.bankCode,\r\n       this.Token.tokenBranch=this.tokenBranch,\r\n       this.Token.customerCategory=this.custPref,\r\n       this.Token.productCode='CHW',\r\n       this.Token.tokenOrigin=this.tokenOrigin,\r\n\r\n       this.Token.tokenNumber=\"\",\r\n       this.Token.estimatedWaitTime=\"\",\r\n       this.Token.accountAmount=\"\",\r\n       this.Token.narrative=\"\",\r\n      //  this.Token.denomination=[],\r\n       this.Token.totalAmount=\"\"\r\n       if(this.denomRequired == 'yes'){\r\n        this.Token.denomination=denominationDataArray;\r\n           }\r\n       \r\n      \r\n      // }\r\n      console.log(\"Not a qrvariable\",this.Token);\r\n    }\r\n      \r\n    \r\n  \r\n    \r\n   \r\n    // else{\r\n    //    console.log(\"else\")\r\n    //   this.Token.customerId=form.account.customerId,\r\n    //   this.Token.accountNumber=form.account.accountNumber,\r\n    //   this.Token.accountType=form.account.accountType,\r\n    //   this.Token.accountCurrency=form.account.accountCurrency,\r\n    //   this.Token.accountBalance=form.account.accountBalance,\r\n    //   this.Token.accountBranch=form.account.accountBranch,\r\n    //   this.Token.holderName=form.account.holderName,\r\n    \r\n    //   this.Token.transactionCurrency=form.transaction.transactionCurrency,\r\n    //   this.Token.transactionAmount=form.transaction.transactionAmount;\r\n    //   this.Token.transactionId=form.transaction.transactionId,\r\n    //   this.Token.totalChargeAmount=form.transaction.totalChargeAmount,\r\n    //   this.Token.totalTransactionAmount=form.transaction.totalTransactionAmount,\r\n\r\n    //   this.Token.transactionBranch=this.transBranch,\r\n    //   this.Token.entityCode=this.entityCode,\r\n    //   this.Token.bankCode=this.bankCode,\r\n    //   this.Token.tokenBranch=this.tokenBranch,\r\n    //   this.Token.customerCategory=this.custPref,\r\n    //   this.Token.productCode='CHW',\r\n    //   this.Token.tokenOrigin=this.tokenOrigin,\r\n\r\n    //   this.Token.tokenNumber=\"\",\r\n    //   this.Token.estimatedWaitTime=\"\",\r\n    //   this.Token.exchangeRate=\"\",\r\n    //   this.Token.accountAmount=\"\",\r\n    //   this.Token.narrative=\"\",\r\n    //  //  this.Token.denomination=[],\r\n    //   this.Token.totalAmount=\"\"\r\n    //   if(this.denomRequired == 'yes'){\r\n    //    this.Token.denomination=denominationDataArray;\r\n    //       }\r\n      \r\n     \r\n    // }\r\n    // if(this.appointmentId && this.appointmentId.data){\r\n    //   form.transactionId = this.appointmentId.data.transactionId;\r\n    //   form.transactionStatus = this.appointmentId.data.transactionStatus;\r\n    // }\r\n\r\n    // console.log(form.transactionId,form.transactionStatus);\r\n    console.log(\"before api call :: \",this.Token);\r\n    this.apiService.saveofCashDeposit(this.Token).subscribe(cashWithdrawResp=>{\r\n      console.log( \"Response Success, Data Saved\", cashWithdrawResp);\r\n      this.cashWithdrawResponse = cashWithdrawResp;\r\n      this.tokenNum = this.cashWithdrawResponse.tokenNumber;\r\n      this.estimatedTime = this.cashWithdrawResponse.estimatedWaitTime;\r\n      localStorage.setItem(\"tokenNumer\",this.tokenNum);\r\n      localStorage.setItem(\"estimatedTiming\",this.estimatedTime);\r\n      this.enableContinue=false;\r\n      if(this.cashWithdrawResponse){\r\n      this.dialogService.tokenGenerationDialog();\r\n      }\r\n    });\r\n    \r\n  //   this.tokenObjects.productCode = this.productCode;\r\n  //   this.tokenObjects.accountNumber = form.accountNumber;\r\n  //   console.log(this.tokenObjects.accountNumber);\r\n  //   if(this.tokenObjects.productCode !== null || this.tokenObjects.accountNumber !==null){\r\n  //   this.apiService.generateToken(this.tokenObjects).subscribe(tokenResp=>{\r\n  //     console.log( \"Token Generated\", tokenResp);\r\n  //     this.tokResponse = tokenResp;\r\n  //     if(this.tokResponse){\r\n  //       this.tokenNum = this.tokResponse.tokenNumber;\r\n  //       this.estimatedTime = this.tokResponse.estimatedWaitTime;\r\n  //       localStorage.setItem(\"tokenNumer\",this.tokenNum);\r\n  //       localStorage.setItem(\"estimatedTiming\",this.estimatedTime);\r\n  //       form.tokenNo = this.tokenNum;\r\n  //       form.customerId = this.ls.getItem(\"customerId\");\r\n  //       this.apiService.saveofCashDeposit(form).subscribe(cashWithdrawResp=>{\r\n  //         console.log( \"Response Success, Data Saved\", cashWithdrawResp);\r\n  //         this.cashWithdrawResponse = cashWithdrawResp;\r\n  //         console.log(this.cashWithdrawResponse);\r\n  //         // this.cashwithdrawForm.reset();\r\n  //         this.enableContinue=false;\r\n  //         // this.ngOnInit();\r\n  //         this.dialogService.tokenGenerationDialog();\r\n  //       });\r\n  //     }\r\n  //   });\r\n  // }\r\n\r\n   }\r\n   getOTP(formData, type, cdForm){\r\nconsole.log(\"Get Otp\",formData,type)\r\n    this.phonenum=this.ls.getItem('phonenumFromLogin');\r\n    this.cashwithDrwValues =formData;\r\n    this.cashwithDrwType = type;\r\n    this.oTpModel.source = 'customer';\r\n    this.oTpModel.source_key = 'mobile';\r\n    this.oTpModel.source_value = this.phonenum;\r\n    this.oTpModel.isMobileLogin = false;\r\nlet amount= 50000;\r\nlet transamountwithoutcomma=this.cashwithDrwValues.transaction.transactionAmount.replace(/,/g, \"\");\r\nconsole.log( transamountwithoutcomma);\r\nif(transamountwithoutcomma >= amount){\r\n  this.apiService.getOtp(this.oTpModel).subscribe(otpResp => {\r\n    if (otpResp) {\r\n      this.openDialogOTP(this.phonenum);\r\n      this.snack.open(\"An OTP has been sent to the Registered Mobile Number.\" , \"\", {\r\n        duration: 4000,\r\n        verticalPosition: 'top',\r\n        horizontalPosition: 'right'\r\n      });\r\n    }\r\n  })\r\n}\r\nelse{\r\n  console.log(\"Else\")\r\n  this.getOTPforSave(this.cashwithDrwValues,this.cashwithDrwType,'');\r\n}\r\n  \r\n  }\r\n  openDialogOTP(numbr) {\r\n    const dialogRef = this.dialog.open(OtpVerifyComponent, {\r\n      data: { number: numbr, type: \"numbr\" },\r\n      disableClose: true,\r\n    });\r\n    dialogRef.afterClosed().subscribe(submit => {\r\n      console.log(\"submit\",submit);\r\n      if(submit){\r\n        this.getOTPforSave(this.cashwithDrwValues,this.cashwithDrwType,'');\r\n      }\r\n     });\r\n  }\r\n  getOTPforSave(formData,type,cdForm){\r\n    console.log(formData);\r\n    let denominationData: any = {};\r\n        let denominationDataArray: any[] = [];\r\n        if(this.denomRequired == 'yes'){\r\n        for (let i = 0; i < this.denomCodeArray.length; i++) {\r\n          if (cdForm.value[this.denomCodeArray[i].key]) {\r\n            // denominationData.transactionId = this.cashdepositFor;\r\n            denominationData.denominationKey = this.denomCodeArray[i].value;\r\n            denominationData.denominationValue = +cdForm.value[this.denomCodeArray[i].key];\r\n            denominationData.currency = this.cashWithdrawForm.value.transactionCurrency;\r\n            // denominationData.amountAvailiable = 15200 - (cdForm.value[this.denomCodeArray[i].key] * this.denomCodeArray[i].value);\r\n            denominationDataArray.push(denominationData);\r\n            console.log(denominationDataArray)\r\n            denominationData = {};\r\n          }\r\n        }\r\n      }\r\n      console.log(this.custValidation)\r\n     if(this.custValidation == \"New Customer\"){\r\n      this.Token.customerId=formData.account.customerId,\r\n       this.Token.accountNumber=formData.account.accountNumber,\r\n       this.Token.accountType=formData.account.accountType,\r\n       this.Token.accountCurrency=formData.account.accountCurrency,\r\n       this.Token.accountBalance=formData.account.accountBalance,\r\n       this.Token.accountBranch=formData.account.accountBranch,\r\n       this.Token.holderName=formData.account.holderName,\r\n     \r\n       this.Token.transactionCurrency=formData.transaction.transactionCurrency,\r\n       this.Token.transactionAmount=formData.transaction.transactionAmount.replace(/,/g, \"\");\r\n       this.Token.transactionId=formData.transaction.transactionId,\r\n       this.Token.totalChargeAmount=formData.transaction.totalChargeAmount,\r\n       this.Token.totalTransactionAmount=formData.transaction.totalTransactionAmount,\r\n\r\n       this.Token.transactionBranch=this.transBranch,\r\n       this.Token.entityCode=this.entityCode,\r\n       this.Token.bankCode=this.bankCode,\r\n       this.Token.tokenBranch=this.tokenBranch,\r\n       this.Token.customerCategory=this.custPref,\r\n       this.Token.productCode='CHW',\r\n       this.Token.tokenOrigin=this.tokenOrigin,\r\n\r\n       this.Token.tokenNumber=\"\",\r\n       this.Token.estimatedWaitTime=\"\",\r\n       this.Token.exchangeRate=\"\",\r\n       this.Token.accountAmount=\"\",\r\n       this.Token.narrative=\"\",\r\n      //  this.Token.denomination=[],\r\n       this.Token.totalAmount=\"\"\r\n       if(this.denomRequired == 'yes'){\r\n        this.Token.denomination=denominationDataArray;\r\n           }\r\n       \r\n      \r\n     \r\n    //  this.accountNum = formData.account.accountNumber;\r\n    //  this.Token.customerId = formData.account.customerId?formData.account.customerId:0;\r\n   \r\n     \r\n    //  this.Token.accountCurrency = formData.account.accountCurrency;\r\n    //  this.Token.transactionCurrency = formData.transaction.transactionCurrency;\r\n    //  this.Token.transactionAmount = formData.transaction.transactionAmount.replace(/,/g, '');\r\n   \r\n    //  this.Token.productCode='CHW',\r\n    //  this.Token.tokenOrigin = this.tokenOrigin;\r\n    //  this.Token.accountBalance = this.accountBal;\r\n\r\n    //  if(this.denomRequired == 'yes'){\r\n    //   this.Token.denomination = denominationDataArray;\r\n    //  }\r\n    }\r\n     \r\n    if(this.appointmentId && this.appointmentId.data){\r\n      this.Token.transactionId = this.appointmentId.data.transactionId;\r\n      this.Token.transactionStatus = this.appointmentId.data.transactionStatus;\r\n    }\r\n    \r\n   \r\n    console.log(this.Token);\r\n      this.Token.customerId=formData.account.customerId,\r\n       this.Token.accountNumber=formData.account.accountNumber,\r\n       this.Token.accountType=formData.account.accountType,\r\n       this.Token.accountCurrency=formData.account.accountCurrency,\r\n       this.Token.accountBalance=formData.account.accountBalance,\r\n       this.Token.accountBranch=formData.account.accountBranch,\r\n       this.Token.holderName=formData.account.holderName,\r\n     \r\n       this.Token.transactionCurrency=formData.transaction.transactionCurrency,\r\n       this.Token.transactionAmount=formData.transaction.transactionAmount.replace(/,/g, \"\");\r\n       this.Token.transactionId=formData.transaction.transactionId,\r\n       this.Token.totalChargeAmount=formData.transaction.totalChargeAmount,\r\n       this.Token.totalTransactionAmount=formData.transaction.totalTransactionAmount,\r\n\r\n       this.Token.transactionBranch=this.transBranch,\r\n       this.Token.entityCode=this.entityCode,\r\n       this.Token.bankCode=this.bankCode,\r\n       this.Token.tokenBranch=this.tokenBranch,\r\n       this.Token.customerCategory=this.custPref,\r\n       this.Token.productCode='CHW',\r\n       this.Token.tokenOrigin=this.tokenOrigin,\r\n\r\n       this.Token.tokenNumber=\"\",\r\n       this.Token.estimatedWaitTime=\"\",\r\n       this.Token.exchangeRate=\"\",\r\n       this.Token.accountAmount=\"\",\r\n       this.Token.narrative=\"\",\r\n       this.Token.denomination=[],\r\n       this.Token.totalAmount=\"\",\r\n       \r\n    \r\n  \r\n   \r\n  \r\n   \r\n    // this.Token.customerId=formData.account.customerId?formData.account.customerId:0;\r\n    // this.Token.transactionBranch = this.transBranch;\r\n    // this.Token.transactionAmount = formData.transaction.transactionAmount.replace(/,/g, '');\r\n    // this.Token.accountType = formData.account.accountType;\r\n    // this.Token.accountNumber = formData.account.accountNumber;\r\n    // this.Token.holderName = formData.account.holderName;\r\n    // this.Token.productCode='CHW',\r\n    // this.Token.tokenOrigin = this.tokenOrigin;\r\n    // this.Token.accountBalance = this.accountBal;\r\n  \r\n        console.log(\"before api call :: \",this.Token);\r\n      this.apiService.saveofCashwithdraw(this.Token).subscribe(cashWithdrawResp=>{\r\n        console.log( \"Response Success, Data Saved\", cashWithdrawResp);\r\n        this.cashWithdrawResponse = cashWithdrawResp;\r\n        this.tokenNum = this.cashWithdrawResponse.tokenNumber;\r\n        this.estimatedTime = this.cashWithdrawResponse.estimatedWaitTime;\r\n        localStorage.setItem(\"tokenNumer\",this.tokenNum);\r\n        localStorage.setItem(\"estimatedTiming\",this.estimatedTime);\r\n        this.enableContinue=false;\r\n        if(this.cashWithdrawResponse){\r\n        this.dialogService.tokenGenerationDialog();\r\n        }\r\n      });\r\n  \r\n     }\r\n  onReset() {\r\n    this.cashWithdrawForm.reset();\r\n  }\r\n\r\n  public redirectToHome(): void {\r\n     \r\n    this.dataService.removetransactionFormData(this.transactiondata);\r\n    this.dataService.removeaccountFormData(this.appointmentDetails);\r\n    this.dataService.removedenominationFormData(this.denominationdata);\r\n    this.router.navigateByUrl('/others/kioskHome');\r\n  }\r\n\r\n  back() {\r\n   \r\n    this._location.back();\r\n  }\r\n\r\n\r\n}\r\n\r\nexport class TokenGenerationObj{\r\n  transactionId:any;\r\n        customerId:any;\r\n        accountNumber:any;\r\n        accountType:any;\r\n        holderName:any;\r\n        accountCurrency:any;\r\n        transactionCurrency:any;\r\n        transactionAmount:any;\r\n        accountBalance:any;\r\n        productCode:any;\r\n        tokenOrigin:any;\r\n        exchangeRate:any;\r\n        accountAmount:any;\r\n        totalChargeAmount:any;\r\n        totalTransactionAmount:any;\r\n        narrative:any;\r\n        denomination:any[];\r\n        totalAmount:any;\r\n        entityCode:any;\r\n        bankCode:any;\r\n        tokenBranch:any;\r\n        customerCategory:any;\r\n        tokenNumber:any;\r\n        estimatedWaitTime:any;\r\n        accountBranch:any;\r\n        transactionBranch:any;\r\n        transactionStatus:any\r\n}\r\n","<!-- Cash Withdraw Form Start -->\r\n<app-header \r\n   [title]=\"title\">\r\n</app-header>\r\n\r\n<form *ngIf=\"cashWithdrawForm\"\r\n      [formGroup]=\"cashWithdrawForm\">\r\n      <div fxLayout=\"row\">\r\n        <mat-card fxFlex=\"100%\" style=\"margin-top: -3%;height: 70%;\">\r\n            <app-account-information-form formControlName=\"account\"></app-account-information-form>\r\n            <app-transaction-information-form formControlName=\"transaction\"></app-transaction-information-form>\r\n        </mat-card>\r\n        <div *ngIf=\"displayDenom\" style=\"margin-top: -4%;\">\r\n            <app-denomination-info formControlName=\"denomination\"></app-denomination-info>\r\n        </div>\r\n      </div>\r\n       \r\n          \r\n    \r\n      <div style=\"margin-top: -1%;\">\r\n<app-footer\r\n     saveText=\"Continue\" \r\n     (save)=\"onSubmit($event)\" \r\n     (cancel)=\"redirectToHome()\" \r\n     (exit)=\"back()\" \r\n     [cancelDisabled]=\"false\"\r\n     >\r\n</app-footer>\r\n</div>\r\n\r\n</form>\r\n\r\n\r\n<!-- Cash Withdraw Form END -->\r\n\r\n\r\n\r\n\r\n<!-- TODO: -->\r\n<!-- <app-form [formGroup]=\"cashWithdrawForm\" saveText=\"Continue\" (save)=\"onSubmit()\" (cancel)=\"redirectToHome()\"\r\n    (exit)=\"back()\" cancelDisabled=\"false\" saveDisabled=\"false\">\r\n\r\n    <app-account-information-form formControlName=\"account\"></app-account-information-form>\r\n    <app-transaction-information-form formControlName=\"transaction\"></app-transaction-information-form>\r\n</app-form> -->","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\nimport { NavigationExtras, Router } from '@angular/router';\r\n\r\nexport interface Section {\r\n  title: string;\r\n  id : number;\r\n  flag: boolean;\r\n  link : string;\r\n  image : any;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-select-service',\r\n  templateUrl: './select-service.component.html',\r\n  styleUrls: ['./select-service.component.scss']\r\n})\r\nexport class SelectServiceComponent implements OnInit {\r\n\r\n  @ViewChild('contentDiv', { read: ElementRef }) public contentDiv: ElementRef<any>;\r\n  @ViewChild('widgetsContent') widgetsContent: ElementRef;\r\n\r\n\r\n  flag: boolean = true;\r\n  continue = \"CONTINUE\";\r\n  enableList : any [];\r\n  active : any = {};\r\n  folders: Section[] = [\r\n    {\r\n      title: \"Cash Withdrawal\",\r\n      id : 1,\r\n      flag : false,\r\n      link : 'others/cash-withdrawal',\r\n      image : \"assets/images/cash_withdrawal.png\"\r\n    },\r\n    {\r\n      title: \"Cash Deposit\",\r\n      id : 2,\r\n      flag : false,\r\n      link : 'others/cash-deposit',\r\n      image : \"assets/images/cash_deposit.png\"\r\n    },\r\n    {\r\n      title: \"Cheque Deposit\",\r\n      id : 3,\r\n      flag : false,\r\n      link : 'others/cheque-deposit',\r\n      image : \"assets/images/cheque_deposit.png\"\r\n    },\r\n    {\r\n      title: \"Cheque Withdrawal\",\r\n      id : 4,\r\n      flag : false,\r\n      link : 'others/cheque-withdrawal',\r\n      image : \"assets/images/check_withdrawal.png\"\r\n    },\r\n    {\r\n      title: \"Forex Transaction\",\r\n      id : 5,\r\n      flag : false,\r\n      link : 'others/forex-transaction',\r\n      image : \"assets/images/forex_transaction.png\"\r\n    },\r\n    {\r\n      title: \"Loan Payment\",\r\n      id : 6,\r\n      flag : false,\r\n      link : 'others/loan-payment',\r\n      image : \"assets/images/loan_payment.png\"\r\n    },\r\n    {\r\n      title: \"Deposit Top Up\",\r\n      id : 7,\r\n      flag : false,\r\n      link : 'others/deposit-topup',\r\n      image : \"assets/images/deposit_top_up.png\"\r\n    },\r\n    {\r\n      title: \"Utility Bill Payment\",\r\n      id : 8,\r\n      flag : false,\r\n      link : 'others/utility-billpayment',\r\n      image : \"assets/images/utility_billpayment.png\"\r\n    },\r\n\r\n  ]; \r\n  serviceTitle: any;\r\n  constructor(private router : Router,) { }\r\n  ngOnInit(): void {\r\n  }\r\n  goToService(index){\r\n    if(this.active !== index){\r\n      this.active = index;\r\n      this.folders.forEach(item => { item.flag = false});\r\n    } \r\n    this.folders[index].flag = !this.folders[index].flag;\r\n  }\r\n  contiueButton(){\r\n    // console.log(this.active);\r\n    this.enableList = this.folders.filter(x => x.flag === true)\r\n    console.log(this.enableList);\r\n    if(this.enableList.length > 0 )\r\n    return true;\r\n    else \r\n    return false;\r\n  }\r\n  goToOperations(){\r\n    this.router.navigate([this.enableList[0].link]);\r\n  }\r\n\r\n  public scrollLeft(): void {\r\n    this.contentDiv.nativeElement.scrollLeft  -= 640;\r\n    \r\n  }\r\n\r\n  public scrollRight(): void {\r\n    this.contentDiv.nativeElement.scrollLeft += 640;\r\n  }\r\n  \r\n\r\n}\r\n","<div class=\"fullcard\">\r\n  <br>\r\n  <div fxLayout=\"row-wrap\" fxLayoutAlign=\"center center\">\r\n    <div fxFlex=\"72%\">\r\n      <mat-card class=\"chequecard\">\r\n        <mat-card-title  class= \"matcard-title\">\r\n          <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n            <div>\r\n              <div class=\"card-title\">Services</div>\r\n              <div fxLayout=\"row wrap\">\r\n                <mat-hint class=\"totalAmount\">Select one and continue</mat-hint>\r\n              </div>\r\n            </div>\r\n            <div>\r\n              <mat-card class=\"slideCard\">\r\n                <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n                  <div>\r\n                    <button mat-icon-button (click)=\"scrollLeft()\">\r\n                      <mat-icon class= \"scrollIcon\">chevron_left</mat-icon>\r\n                    </button>\r\n                  </div>\r\n                  <div>\r\n                    <button mat-icon-button (click)=\"scrollRight()\">\r\n                      <mat-icon class= \"scrollIcon\">chevron_right</mat-icon>\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </mat-card>\r\n            </div>\r\n          </div>\r\n        </mat-card-title>\r\n        <mat-card-content>\r\n          <div #contentDiv class=\"full-width\" #widgetsContent class=\"custom-slider-main\">\r\n            <div fxLayout=\"row wrap\" fxLayoutGap=\"40px \" class=\"gapBtw\" *ngFor=\"let folder of folders; let i = index\">\r\n              <ng-container>\r\n                <mat-card (click)=\"goToService(i)\" [ngClass]=\" folder.flag ? 'borderCard' : 'inputCard'\">\r\n                  <div fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n                    <div *ngIf=\"folder.flag\">\r\n                      <img style=\"width: 23px;\" src=\"assets/images/checked.png\" alt=\"\" />\r\n                    </div>\r\n                  </div>\r\n                  <div fxLayout=\"column\" fxLayoutAlign=\"space-between center\">\r\n                    <div [ngClass]=\" folder.flag ? 'mt9' : 'mt25'\">\r\n                      <mat-card class=\"insideCard\">\r\n                        <div fxLayout=\"row\" fxLayoutAlign=\"center center\">\r\n                          <div>\r\n                            <mat-card style=\"background-color: transparent;\" class=\"matCardTransparent\">\r\n                              <img src=\"{{folder.image}}\" alt=\"\" />\r\n                            </mat-card>\r\n                          </div>\r\n                        </div>\r\n                      </mat-card>\r\n                    </div>\r\n                  </div>\r\n                  <div style=\"text-align: center;padding-top: 20%;\">\r\n                    <mat-hint class=\"insideTitle\">{{folder.title }}</mat-hint>\r\n                  </div>\r\n                </mat-card>\r\n              </ng-container>\r\n            </div>\r\n          </div>\r\n          <div fxLayout=\"row\" fxLayoutAlign=\"center center\" style=\"padding: 0% 2%;\">\r\n            <div class=\"full-width\" style=\"padding: 2% 0% 3.5% 0%;\">\r\n              <button mat-flat-button (click)=\"goToOperations()\"\r\n                [ngClass]=\"contiueButton() ? 'buttonActive' : 'buttonPassive'\">{{continue}}</button>\r\n            </div>\r\n          </div>\r\n        </mat-card-content>\r\n      </mat-card>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n","import { Country } from '@angular-material-extensions/select-country';\r\nimport { Component, Input, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl, FormBuilder, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { DialogService, TokenObjects } from 'app/shared/services/Dialog/dialog.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { Toast } from 'ngx-toastr';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { getCurrencySymbol } from '@angular/common';\r\nimport { ChangeDetectorRef } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { ViewChild } from '@angular/core';\r\nimport { otpModel } from 'app/shared/models/otp.model';\r\nimport { OtpVerifyComponent } from '../otp-verify/otp-verify.component';\r\nimport { MatDialog } from '@angular/material/dialog';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-cash-deposit',\r\n  templateUrl: './cash-deposit.component.html',\r\n  styleUrls: ['./cash-deposit.component.scss']\r\n})\r\nexport class CashDepositComponent implements OnInit {\r\n  titleName: any = 'Cash Deposit';\r\n  cashdepositForm: FormGroup;\r\n  accType = ['Savings', 'Deposit'];\r\n  accountNum: string;\r\n  customerName = ['Jane Smith', 'John Smith'];\r\n  productCode = \"CHD\";\r\n  tokenOrigin = \"Kiosk\";\r\n  @Input() tokenResp: any;\r\n  // countryFormControl = new FormControl();\r\n  defaultValue: Country = {\r\n    name: 'Deutschland',\r\n    alpha2Code: 'DE',\r\n    alpha3Code: 'DEU',\r\n    numericCode: '276',\r\n    callingCode: '+49'\r\n  };\r\n  ifQRvariable = false;\r\n  cashDepositResponse: any;\r\n  accountBal: any;\r\n  phoneNumber: string;\r\n  errorStatus: number;\r\n  custAccountData: any;\r\n  countryValues: any;\r\n  accounttypeArray = [];\r\n  idList = [];\r\n  noList: any[];\r\n  accNum: any;\r\n  tokenObjects = new TokenObjects();\r\n  accNumber: any;\r\n  tokResponse: any;\r\n  tokenNum: any;\r\n  isedit: boolean = true;\r\n  estimatedTime: any;\r\n  transAmt: any;\r\n  balance: string;\r\n  oTpModel = new otpModel();\r\n  enableContinue: boolean = true;\r\n  showAccountNum : boolean = true;\r\n  showAccoutType : boolean = true;\r\n  curr: string;\r\n  transAmount: string;\r\n  currencyImage: any = \"\";\r\n  custID: any;\r\n  custHolderName: string;\r\n  qrData: any;\r\n  customerID: any;\r\n  appointmentId:any;\r\n  userName: string;\r\n  denomCodeArray: any[] = [\r\n    { key: 'count2000', value: 2000 },\r\n    { key: 'count500', value: 500 },\r\n    { key: 'count200', value: 200 },\r\n    { key: 'count100', value: 100 },\r\n    { key: 'count50', value: 50 },\r\n    { key: 'count20', value: 20 },\r\n    { key: 'count10', value: 10 },\r\n    { key: 'count1', value: 1 }\r\n\r\n  ];\r\n  totalAmount: any;\r\n  transamount: any;\r\n  a: any;\r\n  branchNameFromLogin: string;\r\n  branchName: string;\r\n  arrayAccountBranch: any;\r\n  accBranch: any;\r\n  branchData: any;\r\n  trasactionBranches: any;\r\n  branch: any;\r\n  hideDetails:boolean=false;\r\n  totalTransAmount: number;\r\n  chargeDetails: any;\r\n  accountCurrency: any;\r\n  \r\n\r\n  @ViewChild('cdForm') cdForm: NgForm;\r\n  // accountNoList: any[];\r\n  accountNoList = [];\r\n  selectedAccountInfo: any;\r\n  custValidation: string;\r\n  accountNumber: string;\r\n  custmerID: any;\r\n  phonenum: any;\r\n  validateStatus: string;\r\n  cashdepositValues: any;\r\n  cashdeposiform: any;\r\n  cashdepositType: any;\r\n  isLoading = false;\r\n  enableBtn: boolean = true;\r\n  enableBtn1: boolean = false;\r\n  accountNum1: any[];\r\n  filteredAccoun: any[];\r\n  accountDropdown: boolean = false;\r\n  flag1: boolean = false;\r\n  denomRequired: any;\r\n  qrBranchCode: any;\r\n  custNameFromLogin: string;\r\n  selected: string;\r\n  transactionId: any;\r\n  transactionStatus: any;\r\n  cashData: any;\r\n  transBranch: string;\r\n  constructor(\r\n    private router: Router,\r\n    private formBuilder: FormBuilder,\r\n    private dialogService: DialogService,\r\n    private apiService: ApiService,\r\n    private dialog: MatDialog,\r\n    private cdr:ChangeDetectorRef,\r\n\r\n    private ls: LocalStoreService, private snack: MatSnackBar, private changeDef: ChangeDetectorRef) { }\r\n  ngOnInit(): void {\r\n    this.phoneNumber = localStorage.getItem(\"phonenumFromLogin\");\r\n    this.appointmentId = this.ls.getItem(\"TransactionType\");\r\n    this.transBranch=localStorage.getItem(\"TRANSACTIONBRANCH\") \r\n    this.custValidation = localStorage.getItem(\"customerValidation\");\r\n    this.custNameFromLogin = localStorage.getItem(\"FromLogin\");\r\n    if(this.custValidation == \"New Customer\"){\r\n      this.showAccountNum = false;\r\n      this.showAccoutType = false;\r\n    } \r\n    if(this.custNameFromLogin!=null){\r\n      this.showAccountNum=false;\r\n    } \r\n    this.qrData = JSON.parse(JSON.parse(localStorage.getItem('scannerData')));\r\n    console.log(\"QRData\", this.qrData);\r\n    this.cashdepositForm = this.formBuilder.group({\r\n      totalAmount: ['', Validators.required],\r\n      transactionId: ['', [Validators.required]],\r\n      customerId: ['', [Validators.required]],\r\n      accountType: ['', [Validators.required]],\r\n      accountNumber: ['', [Validators.required]],\r\n      holderName: ['', [Validators.required]],\r\n      accountCurrency: ['', [Validators.required]],\r\n      transactionCurrency: ['', [Validators.required]],\r\n      totalChargeAmount:['', [Validators.required]],\r\n      totalTransactionAmount:['',[Validators.required]],\r\n      transactionAmount: ['', [Validators.required, Validators.min(.1)]],\r\n      productCode: ['CHD', [Validators.required]],\r\n      tokenOrigin: ['Kiosk', [Validators.required]],\r\n      // audit\r\n      createdBy: ['', [Validators.required]],\r\n      createdTime: ['', [Validators.required]],\r\n      modifiedBy: ['', [Validators.required]],\r\n      modifiedTime: ['', [Validators.required]],\r\n      recordStatus: ['', [Validators.required]],\r\n      authStatus: ['', [Validators.required]],\r\n      version: ['', [Validators.required]],\r\n      accountBranch: ['', [Validators.required]],\r\n      transactionBranch: ['', [Validators.required]]\r\n    });\r\n    // this.cashdepositForm.get('transactionBranch').setValue(this.branchName);\r\n    if (this.phoneNumber  && this.custNameFromLogin==null && this.appointmentId==null) {\r\n      this.ifQRvariable = false;\r\n      this.gettingallTansactionDetails(this.phoneNumber);\r\n    }\r\n    // else {\r\n      if(this.qrData!=null){\r\n      this.ifQRvariable = true;\r\n      console.log(\"Account\", this.qrData.accountId);\r\n      this.cashdepositForm.controls.holderName.setValue(this.qrData.holderName);\r\n      this.cashdepositForm.controls.accountType.setValue(this.qrData.accountType);\r\n      this.cashdepositForm.controls.accountNumber.setValue(this.qrData.accountId);\r\n      this.getChargeDetails(this.qrData.accountId,'');\r\n      this.cashdepositForm.controls.transactionAmount.setValue(this.qrData.transactionAmount);\r\n      this.cashdepositForm.controls.accountCurrency.setValue(this.qrData.accountCurrency);\r\n      this.cashdepositForm.controls.transactionCurrency.setValue(this.qrData.transactionCurrency);\r\n      this.accountBal = this.qrData.accountBalance;\r\n      this.customerID = this.qrData.customerId;\r\n      this.currencyImage = 'currency-flag-' + this.qrData.accountCurrency.toLowerCase();\r\n      this.currencyImage = 'currency-flag-' + this.qrData.transactionCurrency.toLowerCase();\r\n      if(this.qrData.transactionBranch !=null && this.qrData.transactionBranch !=''){\r\n        this.cashdepositForm.controls.transactionBranch.setValue(this.qrData.transactionBranch);\r\n      }else{\r\n        this.cashdepositForm.controls.transactionBranch.setValue('Kasturi Nagar');\r\n      }\r\n      this.getAccountBranch();\r\n    }\r\n\r\n    this.getCountrynameValues();\r\n    this.getAccountBranch();\r\n    this.gettransactionBranch(\"account_branch\");\r\n    this.getBankInformation(\"KN\")\r\n    if(this.appointmentId.data.appointmentId){\r\n      this.cashWithdrawlData();\r\n    }\r\n  }\r\n  fetchByAccountNum(accNum){\r\n    this.cashdepositForm.controls.transactionAmount.reset();\r\n    this.cashdepositForm.controls.totalTransactionAmount.setValue(this.cashdepositForm.controls.totalChargeAmount.value);\r\n    console.log(\"Account Numebr\",accNum);\r\n    // this.isLoading = true;\r\n    this.apiService.fetchByaccNum(accNum).subscribe((res: any) => {\r\n      console.log('Account Number Rsp', res);\r\n      this.getChargeDetails(accNum,'');\r\n      // this.isLoading = false;\r\n      this.userName = res.accHolderName;\r\n      this.accountBal = res.accBalance;\r\n      this.custmerID = res.customerId;\r\n      this.accountNumber = res.accountId;\r\n      this.accountCurrency = res.accountCurrency;\r\n      this.curr = getCurrencySymbol(res.currency, \"narrow\");\r\n      this.cashdepositForm.controls.accountType.setValue(res.accountType);\r\n      this.cashdepositForm.controls.accountCurrency.setValue(res.currency);\r\n      this.cashdepositForm.controls.accountBranch.setValue(res.accountBranch);\r\n      this.cashdepositForm.controls.holderName.setValue(this.userName); \r\n      this.getCountrynameValues();\r\n      this.currencyImage = 'currency-flag-'+res.currency.toLowerCase();\r\n      this.currencyImage = 'currency-flag-'+res.currency.toLowerCase();\r\n      this.cashdepositForm.controls.transactionCurrency.setValue(res.currency);\r\n      this.custAmountBal(accNum);\r\n      this.cashdepositForm.controls.transactionBranch.setValue('Kasturi Nagar');\r\n      this.apiService.fetchByaccDeatilsoncustId(res.customerId).subscribe((resp: any) => {\r\n        this.phonenum = resp[0].phoneNumber;\r\n        localStorage.setItem('otpPhoneNum', this.phonenum);\r\n      }) \r\n  });\r\n\r\n}\r\n  getCountrynameValues() {\r\n    this.apiService.getCountryValues().subscribe((allCountryValues: any) => {\r\n      this.countryValues = allCountryValues;\r\n    });\r\n  }\r\n\r\n  gettransactionBranch(key: string) {\r\n    this.apiService.getTransactionBranch(key)\r\n      .subscribe(branches => {\r\n        console.log('branches :: ', branches);\r\n        this.trasactionBranches = branches;\r\n\r\n      })\r\n  }\r\n  getAccountBranch() {\r\n    this.apiService.getBranchforKiosk()\r\n      .subscribe((data: any) => {\r\n        this.branchData = data;\r\n        console.log(this.branchData);\r\n        data.forEach((element, index) => {\r\n          this.branch = data[index].branchName;\r\n          console.log(this.branch);\r\n          // this.cashdepositForm.controls.accountBranch.setValue(this.branch);\r\n        });\r\n      });\r\n  }\r\n  onCountrySelected($event: Country): void {\r\n    console.log($event);\r\n  }\r\n  goToServiceScreens() {\r\n    if(this.appointmentId){\r\n    if(this.appointmentId.data.appointmentId){\r\n      this.router.navigateByUrl('/sessions/login');\r\n      localStorage.removeItem(\"FromLogin\")\r\n      localStorage.removeItem(\"TransactionType\")\r\n      localStorage.removeItem(\"customerId\")\r\n      localStorage.removeItem(\"phonenumFromLogin\")\r\n      localStorage.removeItem(\"customerValidation\")\r\n      localStorage.removeItem(\"otpPhoneNum\")\r\n      localStorage.removeItem(\"AccountBal\")\r\n      localStorage.removeItem(\"AccountNumber\")\r\n      localStorage.removeItem(\"ProductCode\")\r\n      localStorage.removeItem(\"tokenNumer\")\r\n      localStorage.removeItem(\"estimatedTiming\")\r\n      localStorage.removeItem(\"userId\")\r\n      localStorage.removeItem(\"scannerData\")\r\n      localStorage.removeItem(\"custholderName\")\r\n    }\r\n  }\r\n    else{\r\n      this.router.navigateByUrl('/others/kioskHome');\r\n    }\r\n    // this.dialogService.tokenGenerationDialog();\r\n  }\r\n\r\n  gettingallTansactionDetails(phoneNumber) {\r\n    this.phoneNumber = localStorage.getItem(\"phonenumFromLogin\");\r\n    this.apiService.gettingTransactionDetails(this.phoneNumber).subscribe((allTransactionResp: any) => {\r\n      console.log(\"All Transaction Details\", allTransactionResp);\r\n      this.userName = (allTransactionResp.firstName ? allTransactionResp.firstName + ' ' : ' ') +\r\n        (allTransactionResp.middleName ? allTransactionResp.middleName + ' ' : ' ') +\r\n        (allTransactionResp.lastName ? allTransactionResp.lastName : ' ');\r\n      this.cashdepositForm.controls.holderName.setValue(this.userName);\r\n      this.custID = allTransactionResp.customerId;\r\n      // this.setBalance(allTransactionResp.custAccount);\r\n      this.custAccountData = allTransactionResp.custAccount;\r\n      this.accounttypeArray = [...this.custAccountData].filter(({ accountType }, index) =>\r\n        ![...this.custAccountData].map(obj => obj.accountType).includes(accountType, index + 1))\r\n        for(let j = 0; j < this.custAccountData.length; j++){\r\n          if(this.custAccountData[j].status == 'APPROVED'){\r\n            this.accountNoList.push(this.custAccountData[j]);  \r\n          }\r\n        }\r\n      if (this.custAccountData && this.accountNoList.length<=1) {\r\n        this.accountDropdown=false;\r\n        this.hideDetails=true;\r\n        const accTyp = allTransactionResp.custAccount[0].accountType;\r\n        this.cashdepositForm.controls.accountType.setValue(accTyp);\r\n        this.custAccountNumber(this.accountNoList[0]);\r\n      }else{\r\n        this.accountDropdown=true;\r\n        this.hideDetails=true;\r\n        const accTyp = allTransactionResp.custAccount[0].accountType;\r\n        this.cashdepositForm.controls.accountType.setValue(accTyp);\r\n        this.custAccountNumber(allTransactionResp.custAccount[0]); \r\n      }\r\n      \r\n    });\r\n  }\r\n  getAccountType(event:any){\r\n    this.cashdepositForm.controls.transactionAmount.reset();\r\n    this.cashdepositForm.controls.totalTransactionAmount.setValue(this.cashdepositForm.controls.totalChargeAmount.value);\r\n    this.accountNoList=[];\r\n    console.log(event);\r\n    this.isedit=false;\r\n    this.accountNum1=[...this.custAccountData].filter((accounNum,index)=>{\r\n      return accounNum.accountType==event;\r\n    });console.log(this.accountNum1)\r\n    // this.accountNoList=this.accountNum1\r\n    // this.accountNoList=this.accountNum1.map((acccount)=>\r\n    // {\r\n    //   return acccount.accountId\r\n    // })\r\n    for(let i = 0; i < this.custAccountData.length; i++){\r\n      if(this.custAccountData[i].status == 'APPROVED' && this.custAccountData[i].accountType == event){\r\n        this.accountNoList.push(this.custAccountData[i].accountId);    \r\n      }\r\n    }\r\n    console.log(this.accountNoList);\r\n    if(this.accountNoList.length<=1){\r\n      this.flag1=false; \r\n      // this.cashdepositForm.controls.accountNumber.setValue(this.accountNoList[0]);\r\n      this.getData(this.accountNoList[0])   \r\n    }\r\n    else{\r\n      this.getData(this.accountNoList[0]);\r\n      this.flag1=true;   \r\n    }\r\n    this.getChargeDetails(this.accountNoList[0],'');\r\n   \r\n  }\r\n\r\n  getData(custNum){\r\n    this.hideDetails=true;\r\n    console.log(custNum)\r\n    let val=this.accountNum1.filter((value)=>{\r\n    return value.accountId==custNum}\r\n    )\r\n    console.log(val)\r\n    this.idList = [...this.custAccountData].filter(item => item.accountType === val[0].accountType);\r\n    this.cashdepositForm.controls.accountCurrency.setValue(val[0].accountCurrency);\r\n   this.cashdepositForm.controls.accountBranch.setValue(this.branch);\r\n   this.selected=val[0].accountCurrency;\r\n   this.curr = getCurrencySymbol(val[0].accountCurrency, \"narrow\");\r\n   this.cashdepositForm.controls.transactionCurrency.setValue(val[0].accountCurrency);\r\n  \r\n   this.currencyImage = 'currency-flag-'+val[0].accountCurrency.toLowerCase();\r\n   console.log('data :: ',this.idList[0]);\r\n  this.accountBal = this.idList[0].amount;\r\n  console.log(this.accountBal);\r\n  localStorage.setItem(\"AccountBal\",this.accountBal);\r\n  // this.cashdepositForm.controls.accountNumber.setValue(this.idList[0].accountId);\r\n  this.custAmountBal(this.idList[0].accountId);\r\n\r\n  this.cashdepositForm.controls.accountNumber.setValue(val[0].accountId);\r\n  this.getChargeDetails(val[0].accountId,'')\r\n  this.cashdepositForm.controls.accountBranch.setValue(val[0].accountBranch);\r\n  }\r\n  custAccountNumber(custype) {\r\n    console.log(custype);\r\n    this.isedit = false;\r\n    this.idList = [...this.custAccountData].filter(item => item.accountType === custype.accountType);\r\n    const defaultId = this.idList ? this.idList[0] : null;\r\n    // this.cashdepositForm.controls.accountNumber.setValue(defaultId);\r\n\r\n    this.accountNoList = [];\r\n    for (let i = 0; i < this.idList.length; i++) {\r\n      if (this.idList[i].status == 'APPROVED') {\r\n        this.accountNoList.push(this.idList[i].accountId)\r\n      }\r\n    }\r\n    console.log(this.accountNoList);\r\n    if(this.accountNoList.length<=1){\r\n      // this.cashwithdrawForm.controls.accountNumber.patchValue(this.accountNoList[0]);\r\n      this.flag1=false; \r\n      // this.getData(this.accountNoList[0]);\r\n      this.cashdepositForm.controls.accountNumber.setValue(this.accountNoList[0]);\r\n    }\r\n    else{\r\n      this.cashdepositForm.controls.accountNumber.setValue(this.accountNoList[0]);\r\n      this.flag1=true;   \r\n    }\r\n \r\n    this.cashdepositForm.controls.accountCurrency.setValue(custype.accountCurrency);\r\n    this.cashdepositForm.controls.accountBranch.setValue(this.branch);\r\n    //this.cashdepositForm.controls.transactionAmount.setValue(custype.amount);\r\n    // this.cashdepositForm.controls.accountType.setValue(defaultId);\r\n    this.selected=custype.accountCurrency;\r\n    this.curr = getCurrencySymbol(custype.accountCurrency, \"narrow\");\r\n    // this.accountBal = this.idList[0].amount;\r\n    this.cashdepositForm.controls.transactionCurrency.setValue(custype.accountCurrency);\r\n    console.log(this.cashdepositForm.value.accountCurrency)\r\n    this.currencyImage = 'currency-flag-' + custype.accountCurrency.toLowerCase();\r\n    console.log(this.accountBal);\r\n    localStorage.setItem(\"AccountBal\", this.accountBal);\r\n   // this.cashdepositForm.controls.accountNumber.setValue(this.idList[0].accountId);\r\n    this.custAmountBal(this.accountNoList[0]);\r\n    this.cashdepositForm.controls.accountBranch.setValue(custype.accountBranch);\r\n    this.getChargeDetails(this.accountNoList[0],custype.amount);\r\n  }\r\n  custAmountBal(custNum) {\r\n    console.log(custNum);\r\n    var account = this.idList.filter(function (record) {\r\n      if (record.accountId == custNum) {\r\n        return record;\r\n      }\r\n    });\r\n    console.log(account);\r\n    this.accNum = account[0].accountId;\r\n    this.accountBal = account[0].amount;\r\n    this.selectedAccountInfo = account[0];\r\n    console.log(this.selectedAccountInfo);\r\n  }\r\n  setBalance(accountBalance, index = 0) {\r\n    this.accountBal = accountBalance[index].currentBalance ? accountBalance[index].currentBalance : null;\r\n  }\r\n  onSaveofcashDeposit(formData, type, cdForm) {\r\n    formData.transactionBranch = this.transBranch;\r\n    console.log(\"Data\",formData, type, cdForm )\r\n    if(this.qrData){\r\n      if(this.qrData.transactionBranch){\r\n        this.apiService.fetchBranchInfoByBranchName(this.qrData.transactionBranch).subscribe(response=>{\r\n          this.qrBranchCode=response;\r\n          \r\n        })\r\n      }\r\n    }\r\n    let denominationData: any = {};\r\n    let denominationDataArray: any[] = [];\r\n    if(this.denomRequired == 'yes'){\r\n    for (let i = 0; i < this.denomCodeArray.length; i++) {\r\n      if (cdForm.value[this.denomCodeArray[i].key]) {\r\n        // denominationData.transactionId = this.cashdepositFor;\r\n        denominationData.denominationKey = this.denomCodeArray[i].value;\r\n        denominationData.denominationValue = +cdForm.value[this.denomCodeArray[i].key];\r\n        denominationData.currency = this.cashdepositForm.value.transactionCurrency;\r\n        // denominationData.amountAvailiable = 15200 - (cdForm.value[this.denomCodeArray[i].key] * this.denomCodeArray[i].value);\r\n        denominationDataArray.push(denominationData);\r\n        console.log(denominationDataArray)\r\n        denominationData = {};\r\n      }\r\n    }\r\n  }\r\n    formData.tokenBranch = \"KN\";\r\n    if(this.qrData){\r\n      if(this.qrData.transactionBranch){\r\n        formData.tokenBranch = this.qrBranchCode.transactionBranch;\r\n      }\r\n    }\r\n    if (!this.ifQRvariable) {\r\n          this.accountNum = JSON.stringify(this.selectedAccountInfo.accountId);\r\n          formData.transactionCurrency = formData.transactionCurrency;\r\n          formData.accountNumber = this.selectedAccountInfo.accountId;;\r\n          formData.customerId = this.custID;\r\n          formData.productCode = this.productCode;\r\n          formData.tokenOrigin = this.tokenOrigin;\r\n          formData.accountBalance = this.accountBal;\r\n          // console.log(formData.transactionCurrency);\r\n          formData.transactionAmount = formData.transactionAmount.replace(/,/g, '');\r\n          formData.accountType = formData.accountType;\r\n          if(this.denomRequired == 'yes'){\r\n          formData.denomination = denominationDataArray;\r\n          }\r\n\r\n          localStorage.setItem(\"AccountNumber\", this.accountNum);\r\n          localStorage.setItem(\"ProductCode\", this.productCode);\r\n    }\r\n    else {\r\n      // debugger;\r\n      formData.customerId = this.custID;\r\n      formData.accountType = formData.accountType;\r\n      formData.accountNumber = formData.accountNumber;\r\n      formData.holderName = formData.holderName;\r\n      formData.accountCurrency = formData.accountCurrency;\r\n      formData.transactionCurrency = formData.transactionCurrency;\r\n      // formData.transactionAmount = formData.transactionAmount.replace(/,/g, '');\r\n      formData.transactionAmount = formData.transactionAmount;\r\n      formData.productCode = this.productCode;\r\n      formData.tokenOrigin = this.tokenOrigin;\r\n      formData.accountBalance = this.accountBal;\r\n      if(this.denomRequired == 'yes'){\r\n      formData.denomination = denominationDataArray;\r\n      }\r\n    }\r\n    console.log(\"data::\",this.appointmentId)\r\n    if(this.appointmentId && this.appointmentId.data){\r\n      formData.transactionId = this.appointmentId.data.transactionId;\r\n      formData.transactionStatus = this.appointmentId.data.transactionStatus;\r\n    }\r\n    this.apiService.saveofCashDeposit(formData).subscribe(cashDepositResp => {\r\n      console.log(\"Response Success\", cashDepositResp);\r\n      this.cashDepositResponse = cashDepositResp;\r\n      this.tokenNum = this.cashDepositResponse.tokenNumber;\r\n      this.estimatedTime = this.cashDepositResponse.estimatedWaitTime;\r\n      localStorage.setItem(\"tokenNumer\", this.tokenNum);\r\n      localStorage.setItem(\"estimatedTiming\", this.estimatedTime);\r\n      this.enableContinue = false;\r\n      if (this.cashDepositResponse) {\r\n        this.dialogService.tokenGenerationDialog();\r\n      }\r\n    });\r\n  }\r\n  \r\n  // OTP And Save\r\n  getOTP(formData, type, cdForm){\r\n    this.cashdepositValues =formData;\r\n    this.cashdeposiform = type;\r\n    this.cashdepositType = cdForm;\r\n    this.oTpModel.source = 'customer';\r\n    this.oTpModel.source_key = 'mobile';\r\n    this.oTpModel.source_value = this.phonenum;\r\n    let amount= 50000;\r\n    let transamountwithoutcomma=this.cashdepositValues.transactionAmount.replace(/,/g, \"\");\r\n    console.log( transamountwithoutcomma);\r\n    if(transamountwithoutcomma > amount){\r\n      this.apiService.getOtp(this.oTpModel).subscribe(otpResp => {\r\n        if (otpResp) {\r\n          this.openDialogOTP(this.phonenum);\r\n          this.snack.open(\"An OTP has been sent to the Registered Mobile Number.\" , \"\", {\r\n            duration: 4000,\r\n            verticalPosition: 'top',\r\n            horizontalPosition: 'right'\r\n          });\r\n        }\r\n      })\r\n    }\r\n    else{\r\n      this.getOTPforSave( this.cashdepositValues,this.cashdeposiform,this.cashdepositType);\r\n    }\r\n  }\r\n  getOTPforSave(formData, type, cdForm){\r\n    formData.transactionBranch = this.transBranch;\r\n    let denominationData: any = {};\r\n    let denominationDataArray: any[] = [];\r\n    if(this.denomRequired == 'yes'){\r\n    for (let i = 0; i < this.denomCodeArray.length; i++) {\r\n      if (cdForm.value[this.denomCodeArray[i].key]) {\r\n        denominationData.denominationKey = this.denomCodeArray[i].value;\r\n        denominationData.denominationValue = +cdForm.value[this.denomCodeArray[i].key];\r\n        denominationData.currency = this.cashdepositForm.value.transactionCurrency;\r\n        // denominationData.amountAvailiable = 15200 - (cdForm.value[this.denomCodeArray[i].key] * this.denomCodeArray[i].value);\r\n        denominationDataArray.push(denominationData);\r\n        console.log(denominationDataArray)\r\n        denominationData = {};\r\n      }\r\n    }\r\n  }\r\n    if(this.custValidation == \"New Customer\"){\r\n      console.log(\"customer\",this.custmerID);\r\n     this.transactionId = localStorage.getItem('transactionId');\r\n     this.transactionStatus = localStorage.getItem('transactionStatus'); \r\n     this.accountNum = formData.accountNumber;\r\n     formData.customerId = this.custmerID?this.custmerID:0;\r\n     formData.accountType = formData.accountType;\r\n     formData.accountNumber = this.accountNumber;\r\n     formData.holderName = formData.holderName;\r\n     formData.accountCurrency = formData.accountCurrency;\r\n     formData.transactionCurrency = formData.transactionCurrency;\r\n     formData.transactionAmount = formData.transactionAmount.replace(/,/g, '');\r\n     formData.productCode = this.productCode;\r\n     formData.tokenOrigin = this.tokenOrigin;\r\n     formData.accountBalance = this.accountBal;\r\n     if(this.denomRequired == 'yes'){\r\n     formData.denomination = denominationDataArray;\r\n     }\r\n    }\r\n    formData.tokenBranch = \"KN\";\r\n    if(this.appointmentId && this.appointmentId.data){\r\n      formData.transactionId = this.appointmentId.data.transactionId;\r\n      formData.transactionStatus = this.appointmentId.data.transactionStatus;\r\n    }\r\n    formData.customerId = this.custmerID?this.custmerID:0;\r\n    formData.accountType = formData.accountType;\r\n    formData.accountNumber = this.accountNumber;\r\n    formData.holderName = formData.holderName;\r\n    formData.accountCurrency = formData.accountCurrency;\r\n    formData.transactionCurrency = formData.transactionCurrency;\r\n    formData.transactionAmount = formData.transactionAmount.replace(/,/g, '');\r\n    formData.productCode = this.productCode;\r\n    formData.tokenOrigin = this.tokenOrigin;\r\n    formData.accountBalance = this.accountBal;\r\n  console.log(formData.transactionId,formData.transactionStatus);\r\n  this.apiService.saveofCashDeposit(formData).subscribe(cashDepositResp => {\r\n  console.log(\"Response Success\", cashDepositResp);\r\n  this.cashDepositResponse = cashDepositResp;\r\n  this.tokenNum = this.cashDepositResponse.tokenNumber;\r\n  this.estimatedTime = this.cashDepositResponse.estimatedWaitTime;\r\n  localStorage.setItem(\"tokenNumer\", this.tokenNum);\r\n  localStorage.setItem(\"estimatedTiming\", this.estimatedTime);\r\n  this.enableContinue = false;\r\n  if (this.cashDepositResponse) {\r\n    this.dialogService.tokenGenerationDialog();\r\n  }\r\n});   \r\n  }\r\n  openDialogOTP(numbr) {\r\n    const dialogRef = this.dialog.open(OtpVerifyComponent, {\r\n      data: { number: numbr, type: \"numbr\" },\r\n      disableClose: true,\r\n    });\r\n    dialogRef.afterClosed().subscribe(submit => {\r\n      if(submit){\r\n        this.getOTPforSave( this.cashdepositValues,this.cashdeposiform,this.cashdepositType);\r\n      }\r\n     });\r\n  }\r\n\r\n  OnInput(event: any) {\r\n    this.transAmt = event.target.value;\r\n    console.log(event.target.value);\r\n    this.totalAmount = 0;\r\n    // comma separator using changeDetector\r\n    const savedInput = this.transAmount;\r\n    // this.transAmount = '';\r\n    // this.changeDef.detectChanges();\r\n    let lastCharIsPoint = false;\r\n    if (savedInput.charAt(savedInput.length - 1) === '.') {\r\n      lastCharIsPoint = true;\r\n    }\r\n    const num = savedInput.replace(/[^0-9.]/g, '');\r\n    this.transAmt = Number(num)||'';\r\n    this.transAmount = this.transAmt.toLocaleString('en-IN');\r\n    if (lastCharIsPoint) {\r\n      this.transAmount = this.transAmount.concat('.');\r\n    }\r\n    this.changeDef.detectChanges();\r\n\r\n    this.balance= localStorage.getItem(\"AccountBal\");\r\n    if(parseFloat(this.balance) < parseFloat(this.transAmt)){\r\n      console.log(\"Bigger\")\r\n      this.snack.open(`Transaction Amount should not exceed than Account Balance`, 'OK', {\r\n        duration: 2000,\r\n        verticalPosition: 'top',\r\n        horizontalPosition: 'right'\r\n      });\r\n      this.enableContinue=false;\r\n    }\r\n    else{\r\n      this.enableContinue=true;\r\n    }\r\n    this.totalTransAmount=Number(this.transAmt) + Number(this.chargeDetails?this.chargeDetails[0].amount:'');\r\n    this.cashdepositForm.controls.totalTransactionAmount.setValue(this.totalTransAmount);\r\n    this.cdr.markForCheck();\r\n    this.cdr.detectChanges();\r\n  }\r\n\r\n  clicked(event) {\r\n    console.log(event);\r\n  }\r\n\r\n  addCurrencyImage(currency) {\r\n    return currency.toLowerCase();\r\n  }\r\n  onCountryChange(country) {\r\n    let currency = country.currencyCode;\r\n    this.currencyImage = 'currency-flag-' + currency.toLowerCase();\r\n  }\r\n\r\n  accountCurrencyImage(accountCurrency) {\r\n    return accountCurrency ? 'currency-flag-' + accountCurrency.toLowerCase() : '';\r\n  }\r\n  omit_number(event) {\r\n    var key;\r\n    key = event.charCode;\r\n    return ((key > 47 && key < 58));\r\n  }\r\n  totalAmountValue(cdForm) {\r\n    this.a = this.cashdepositForm.value.transactionAmount;\r\n    this.a = this.a.replace(/\\,/g, ''); // 1125, but a string, so convert it to number\r\n    this.a = parseInt(this.a, 10);\r\n\r\n    this.cashdepositForm.value.totalAmount =\r\n      ((cdForm.value.count2000 ? cdForm.value.count2000 * 2000 : 0) +\r\n        (cdForm.value.count500 ? cdForm.value.count500 * 500 : 0) +\r\n        (cdForm.value.count200 ? cdForm.value.count200 * 200 : 0) +\r\n        (cdForm.value.count100 ? cdForm.value.count100 * 100 : 0) +\r\n        (cdForm.value.count50 ? cdForm.value.count50 * 50 : 0) +\r\n        (cdForm.value.count20 ? cdForm.value.count20 * 20 : 0) +\r\n        (cdForm.value.count10 ? cdForm.value.count10 * 10 : 0) +\r\n        (cdForm.value.count1 ? cdForm.value.count1 * 1 : 0)\r\n      );\r\n    this.cashdepositForm.value.totalAmount = this.cashdepositForm.value.totalAmount;  \r\n    console.log(this.cashdepositForm.value.totalAmount)\r\n    console.log(this.cashdepositForm.value.transactionAmount);\r\n    this.transamount = this.cashdepositForm.value.transactionAmount;\r\n    this.totalAmount = this.cashdepositForm.value.totalAmount.toLocaleString(\"en-US\");\r\n    if (this.transamount != this.totalAmount) {\r\n      this.enableBtn = false;\r\n    } else {\r\n      this.enableBtn = true;\r\n    }\r\n\r\n    if((this.transamount > this.totalAmount) || (this.transamount < this.totalAmount)){\r\n      this.enableBtn1 = true;\r\n    }\r\n    else{\r\n      this.enableBtn1 = false;\r\n    }\r\n\r\n    this.cashdepositForm.controls.totalAmount.setValue(this.cashdepositForm.value.totalAmount);\r\n\r\n  }\r\n  cashWithdrawlData(){\r\n    this.apiService.getAppointmentId(this.appointmentId.data.appointmentId).subscribe((resp : any)=> {\r\n      console.log(\"resp ::\",resp);\r\n      this.cashData=resp.data;\r\n      this.custID=resp.data.customerId;\r\n      this.ifQRvariable = true;\r\n      this.cashdepositForm.controls.accountType.setValue(resp.data.accountType);\r\n      this.cashdepositForm.controls.accountBranch.setValue(resp.data.accountBranch);\r\n      this.cashdepositForm.controls.accountNumber.setValue(resp.data.accountNumber);\r\n      this.getChargeDetails(resp.data.accountNumber,resp.data.transactionAmount);\r\n      this.cashdepositForm.controls.accountCurrency.setValue(resp.data.accountCurrency);\r\n      this.cashdepositForm.controls.transactionCurrency.setValue(resp.data.transactionCurrency);\r\n      this.cashdepositForm.controls.transactionAmount.setValue(resp.data.transactionAmount);\r\n      this.currencyImage = 'currency-flag-'+resp.data.accountCurrency.toLowerCase();\r\n      this.currencyImage = 'currency-flag-'+resp.data.transactionCurrency.toLowerCase();\r\n      console.log(\"amount::\",this.cashdepositForm.controls.transactionAmount.value)\r\n  \r\n  \r\n    });\r\n  }\r\n  getChargeDetails(accountId,amount){\r\n    this.apiService.fetchChargeDetails(accountId).subscribe(resp => {\r\n  console.log(resp);\r\n  this.chargeDetails=resp;\r\n  this.cashdepositForm.controls.totalChargeAmount.setValue(this.chargeDetails?this.chargeDetails[0].amount:'');\r\n    });\r\n    if(this.cashData){\r\n    setTimeout(() => {\r\n      this.totalTransAmount=Number(this.cashData.transactionAmount) + Number(this.chargeDetails[0].amount);\r\n      this.cashdepositForm.controls.totalTransactionAmount.setValue(this.totalTransAmount);\r\n    }, 1000);\r\n    this.cdr.markForCheck();\r\n    this.cdr.detectChanges();\r\n  }\r\n  else{\r\n    console.log(this.chargeDetails)\r\n    amount=0;\r\n    console.log(amount);\r\n    setTimeout(() => {\r\n      this.totalTransAmount=Number(amount) + Number(this.chargeDetails?this.chargeDetails[0].amount:'');\r\n      console.log(this.totalTransAmount);\r\n      this.cashdepositForm.controls.totalTransactionAmount.setValue(this.totalTransAmount);\r\n    }, 1000);\r\n    this.cdr.markForCheck();\r\n    this.cdr.detectChanges();\r\n  }\r\n\r\n    // console.log(this.totalTransAmount);\r\n  \r\n  }\r\n  onclickofConfirm(cdForm) {\r\n    let denominationData: any = {};\r\n    let denominationDataArray: any[] = [];\r\n\r\n    for (let i = 0; i < this.denomCodeArray.length; i++) {\r\n      if (cdForm.value[this.denomCodeArray[i].key]) {\r\n        // denominationData.transactionId = this.cashdepositFor;\r\n        denominationData.denominationKey = this.denomCodeArray[i].value;\r\n        denominationData.denominationValue = +cdForm.value[this.denomCodeArray[i].key];\r\n        denominationData.currency = this.cashDepositResponse.value.transactionCurrency;\r\n        // denominationData.amountAvailiable = 15200 - (cdForm.value[this.denomCodeArray[i].key] * this.denomCodeArray[i].value);\r\n        denominationDataArray.push(denominationData);\r\n        console.log(denominationDataArray)\r\n        denominationData = {};\r\n      }\r\n    }\r\n  }\r\n  getBankInformation(branchCode:any){\r\n    this.apiService.fetchBankInfoByBranchCode(branchCode).subscribe(resp => {\r\n      console.log(resp)\r\n      this.denomRequired = resp.denomRequired\r\n      if(resp.denomRequired == 'yes'){\r\n        this.enableBtn = false;\r\n        this.enableBtn1 = false;\r\n       }\r\n      \r\n    })\r\n  }\r\n  formatAmount(amount) {\r\n    if(amount){\r\n      return amount && amount.toString().split('.')[0].length > 3 ? amount.toString().substring(0,amount.toString().split('.')[0].length-3).replace(/\\B(?=(\\d{2})+(?!\\d))/g, \",\") + \",\" + amount.toString().substring(amount.toString().split('.')[0].length-3): amount.toString();\r\n     }\r\n  }\r\n}\r\n","<div class=\"fullcard\">\r\n    <div fxLayout=\"row\">\r\n        <div fxFlex=\"cashdepositForm.get('transactionAmount').value > 0? 70% : 100%\">\r\n            <h6 class=\"h1\"><span style=\"color:grey;padding-right: 4px;\">Services</span> <b>></b> <span style=\"padding-left: 4px;\"><b>Cash Deposit</b></span></h6>\r\n            <mat-card class=\"chequecard topView\">\r\n                <mat-card-title style=\"padding: 2%;\">\r\n                    <div fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n                        <div>\r\n                            <mat-icon *ngIf=\"phoneNumber\" class=\"backIcon\" (click)=\"goToServiceScreens()\">\r\n                                keyboard_backspace</mat-icon>\r\n                        </div>\r\n                        &nbsp;&nbsp;\r\n                        <div class=\"card-title\">{{titleName}}</div>\r\n                    </div>\r\n                </mat-card-title>\r\n                <mat-card-content>\r\n                    <div class=\"full-width\" style=\"padding: 0% 0% 3% 2%;\">\r\n                        <form [formGroup]=\"cashdepositForm\">\r\n                            <div fxLayout=\"column\" fxLayoutGap=\"3%\" fxLayoutAlign=\"space-between none\">\r\n                                <div>\r\n                                    <div fxLayout=\"row wrap\" class=\"flex-container stretch\">\r\n                                        <ng-container>\r\n\r\n                                            <div fxFlex=\"25%\" fxFlex.xs=\"100%\" *ngIf=\"showAccountNum\" >\r\n                                                <mat-hint class=\"totalAmount\">Account Type*</mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <input matInput type=\"text\" *ngIf=\"phoneNumber && !accountDropdown\" [readonly]=\"true\"\r\n                                                        class=\"full-width\" formControlName=\"accountType\">\r\n                                                        <mat-select *ngIf=\"phoneNumber && accountDropdown\" formControlName=\"accountType\" \r\n                                                        (selectionChange)=\"getAccountType($event.value)\"\r\n                                                        style=\"background-color: #f9fafb;\"\r\n                                                        placeholder=\"Select Account Type\">\r\n                                                        <mat-option *ngFor=\"let type of accounttypeArray \"\r\n                                                            \r\n                                                            [value]=\"type.accountType\">{{type.accountType}}</mat-option>\r\n                                                    </mat-select>\r\n                                                    <!-- <mat-select *ngIf=\"phoneNumber && !accountDropdown\" formControlName=\"accountType\"\r\n                                                        placeholder=\"Select Account Type\" (selectionChange)=\"getAccountType($event.value)\"\r\n                                                        style=\"background-color: #f9fafb;\">\r\n                                                        <mat-option>select</mat-option>\r\n                                                        <mat-option *ngFor=\"let type of accounttypeArray \" (click)=\"custAccountNumber(type)\" [value]=\"type.accountType\"> {{type.accountType}}</mat-option>\r\n                                                    </mat-select> -->\r\n                                                </mat-card>\r\n                                            </div>\r\n\r\n                                        <!-- Account Number Fisrt -->\r\n                                            <div fxFlex=\"25%\" fxFlex.xs=\"100%\" *ngIf=\"!showAccountNum\" >\r\n                                                <mat-hint class=\"totalAmount\">Account Number*</mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <input matInput type=\"text\"  \r\n                                                        class=\"full-width\" formControlName=\"accountNumber\"\r\n                                                        (change)=\"fetchByAccountNum(cashdepositForm.get('accountNumber').value)\">\r\n                                                </mat-card>\r\n                                                    <!-- <mat-hint class=\"totalAmount\" *ngIf=\"!phoneNumber\" >Account Balance :{{curr }} {{accountBal | number: '2.' }}</mat-hint> -->\r\n                                                    <mat-hint class=\"totalAmount\" *ngIf=\"!showAccountNum\" >Account Balance\r\n                                                        :{{curr }} {{formatAmount(accountBal)}}</mat-hint>\r\n                                                    <br>\r\n                                                    <!-- <mat-hint  class=\"totalAmount\" *ngIf=\"!phoneNumber\"  [readonly]=\"true\"  formControlName=\"holderName\">Holder Name :{{userName}}</mat-hint> -->\r\n                                                    <mat-hint class=\"totalAmount\" *ngIf=\"!showAccountNum\" [readonly]=\"true\">\r\n                                                        Holder Name :{{userName}}</mat-hint>\r\n                                            </div>\r\n                                            <div fxFlex=\"25%\" fxFlex.xs=\"100%\" *ngIf=\"showAccountNum\"   >\r\n                                                <mat-hint class=\"totalAmount\">Account Number*</mat-hint>\r\n                                                <mat-card class=\"inputCard\" >\r\n                                                    <input matInput type=\"text\" *ngIf=\"!flag1\" [readonly]=\"true\"\r\n                                                        class=\"full-width\" formControlName=\"accountNumber\">\r\n\r\n                                                    <!-- <mat-select *ngIf=\"phoneNumber\" formControlName=\"accountNumber\"\r\n                                                        style=\"background-color: #f9fafb;\"> -->\r\n                                                    <mat-select *ngIf=\"flag1\" formControlName=\"accountNumber\" (selectionChange)=\"fetchByAccountNum($event.value)\"\r\n                                                        style=\"background-color: #f9fafb;\">\r\n                                                       \r\n                                                            <mat-option>select</mat-option>\r\n                                                            <mat-option *ngFor=\"let id of accountNoList \"  [value]=\"id\">{{id}}</mat-option>\r\n\r\n                                                    </mat-select>\r\n                                                </mat-card>\r\n                                                <!-- <mat-hint class=\"totalAmount\" *ngIf=\"!phoneNumber\" >Account Balance :{{curr }} {{accountBal | number: '2.' }}</mat-hint> -->\r\n                                                <mat-hint class=\"totalAmount\" *ngIf=\"hideDetails\">Account Balance\r\n                                                    : {{curr }}{{formatAmount(accountBal)}}</mat-hint>\r\n                                                <br>\r\n                                                <!-- <mat-hint  class=\"totalAmount\" *ngIf=\"!phoneNumber\"  [readonly]=\"true\"  formControlName=\"holderName\">Holder Name :{{userName}}</mat-hint> -->\r\n                                                <mat-hint class=\"totalAmount\" *ngIf=\"hideDetails\" [readonly]=\"true\">\r\n                                                    Holder Name : {{userName}}</mat-hint>\r\n                                            </div>\r\n                                            <div fxFlex=\"25%\" fxFlex.xs=\"100%\" *ngIf=\"!showAccountNum\" >\r\n                                                <mat-hint class=\"totalAmount\">Account Type*</mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <input matInput type=\"text\"  [readonly]=\"true\" \r\n                                                        class=\"full-width\" formControlName=\"accountType\">\r\n                                    \r\n                                                </mat-card>\r\n                                            </div>\r\n                                            <!-- <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                                <mat-hint class=\"totalAmount\">Holder Name*</mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <!-- <mat-select formControlName=\"holderName\"  style=\"background-color: #f9fafb;\" >\r\n                                                        <mat-option *ngFor=\"let holder of customerName;\" [value]=\"holder\">{{holder}}</mat-option>\r\n                                                    </mat-select> -->\r\n                                            <!-- <input matInput type=\"text\" *ngIf=\"!phoneNumber\"  [readonly]=\"true\" class=\"full-width\" formControlName=\"holderName\" >\r\n                                                    <input matInput type=\"text\" *ngIf=\"phoneNumber\"  [readonly]=\"true\" class=\"full-width\" formControlName=\"holderName\" >\r\n                                                </mat-card> -->\r\n                                            <!-- </div>  -->\r\n                                            \r\n\r\n                                            <div fxFlex=\"25%\" fxFlex.xs=\"100%\">\r\n                                                <mat-hint class=\"accountBranch\">Account Branch*</mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <input matInput *ngIf=\"!phoneNumber\" type=\"text\"\r\n                                                    [readonly]=\"true\" class=\"full-width\"\r\n                                                    formControlName=\"accountBranch\">\r\n\r\n                                                <input matInput *ngIf=\"phoneNumber\" type=\"text\"\r\n                                                    [readonly]=\"true\" class=\"full-width\"\r\n                                                    formControlName=\"accountBranch\">\r\n                                                </mat-card>\r\n                                                <mat-error\r\n                                                    *ngIf=\"cashdepositForm.get('accountBranch').touched && !cashdepositForm.get('accountBranch').valid\">\r\n                                                    Account Branch is Required!\r\n                                                </mat-error>\r\n                                            </div>\r\n                                        </ng-container>\r\n                                    </div>\r\n                                </div>\r\n                                <div>\r\n                                    <div fxLayout=\"row wrap\" class=\"flex-container stretch\">\r\n                                        <ng-container>\r\n                                            <div fxFlex=\"25%\" fxFlex.xs=\"100%\">\r\n                                                <mat-hint class=\"totalAmount\">Account Currency*</mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <div fxLayout=\"row wrap\" class=\"full-width\">\r\n                                                        <div fxFlex=\"25%\">\r\n\r\n                                                            <div *ngIf=\"ifQRvariable\"\r\n                                                                class=\"currency-flag {{isedit?accountCurrencyImage(cashdepositForm.controls['accountCurrency'].value):currencyImage}}\"></div>\r\n                                                            <div *ngIf=\"!ifQRvariable\"\r\n                                                                class=\"currency-flag {{!isedit?accountCurrencyImage(cashdepositForm.controls['accountCurrency'].value):currencyImage}}\">\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div fxFlex=\"75%\">\r\n                                                            <input matInput *ngIf=\"!phoneNumber\" type=\"text\"\r\n                                                                [readonly]=\"true\" class=\"full-width\" style=\"font-size:110%\"\r\n                                                                formControlName=\"accountCurrency\">\r\n\r\n                                                            <input matInput *ngIf=\"phoneNumber\" type=\"text\"\r\n                                                                [readonly]=\"true\" class=\"full-width\" style=\"font-size:110%\"\r\n                                                                formControlName=\"accountCurrency\">\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </mat-card>\r\n                                            </div>\r\n                                            <div fxFlex=\"25%\" fxFlex.xs=\"100%\" *ngIf=\"showAccountNum\">\r\n                                                <mat-hint class=\"totalAmount\">Transaction Currency* </mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <div fxLayout=\"row wrap\" class=\"full-width\">\r\n                                                        <div fxFlex=\"25%\">\r\n                                                            <div class=\"currency-flag {{currencyImage}}\"></div>\r\n                                                        </div>\r\n                                                        <div fxFlex=\"75%\">\r\n                                                            <input matInput type=\"text\" *ngIf=\"!phoneNumber\"\r\n                                                                [readonly]=\"true\" class=\"full-width\"\r\n                                                                formControlName=\"transactionCurrency\">\r\n\r\n                                                            <mat-select formControlName=\"transactionCurrency\"\r\n                                                                *ngIf=\"phoneNumber\"\r\n                                                                placeholder=\"Select Transaction Currency\"\r\n                                                                id=\"testSelect\" style=\"background-color: #f9fafb;\"\r\n                                                                [disabled]=\"isedit\">\r\n                                                                <mat-option\r\n                                                                    *ngFor=\"let country of countryValues; let i = index\"\r\n                                                                    (click)=\"onCountryChange(country)\" style=\"font-size:110%\"\r\n                                                                    [value]=\"country.currencyCode\">\r\n                                                                    <div fxLayout=\"row wrap\" class=\"full-width\">\r\n                                                                        <div fxFlex=\"15%\">{{country.currencyCode}}</div>\r\n                                                                        <div fxFlex=\"85%\">\r\n                                                                            <div\r\n                                                                                class=\"currency-flag currency-flag-{{addCurrencyImage(country.currencyCode)}} alignImage\">\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </mat-option>\r\n                                                            </mat-select>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </mat-card>\r\n                                            </div>\r\n                                            <div fxFlex=\"25%\" fxFlex.xs=\"100%\" *ngIf=\"!showAccountNum\">\r\n                                                <mat-hint class=\"totalAmount\">Transaction Currency* </mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <div fxLayout=\"row wrap\" class=\"full-width\">\r\n                                                        <div fxFlex=\"25%\">\r\n                                                            <div class=\"currency-flag {{currencyImage}}\"></div>\r\n                                                        </div>\r\n                                                        <div fxFlex=\"75%\">\r\n                                                            <mat-select formControlName=\"transactionCurrency\"\r\n                                                                placeholder=\"Select Transaction Currency\"\r\n                                                                id=\"testSelect\" style=\"background-color: #f9fafb;\"\r\n                                                                >\r\n                                                                <mat-option\r\n                                                                    *ngFor=\"let country of countryValues; let i = index\"\r\n                                                                    (click)=\"onCountryChange(country)\" style=\"font-size:110%\"\r\n                                                                    [value]=\"country.currencyCode\">\r\n                                                                    <div fxLayout=\"row wrap\" class=\"full-width\">\r\n                                                                        <div fxFlex=\"15%\">{{country.currencyCode}}</div>\r\n                                                                        <div fxFlex=\"85%\">\r\n                                                                            <div\r\n                                                                                class=\"currency-flag currency-flag-{{addCurrencyImage(country.currencyCode)}} alignImage\">\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </mat-option>\r\n                                                            </mat-select>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </mat-card>\r\n                                            </div>\r\n                                            <div fxFlex=\"25.5%\" fxFlex.xs=\"100%\" *ngIf=\"showAccountNum\">\r\n                                                <mat-hint class=\"totalAmount\">Transaction Amount*</mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <input matInput type=\"text\" *ngIf=\"!phoneNumber\" [readonly]=\"true\"\r\n                                                        class=\"full-width\" formControlName=\"transactionAmount\">\r\n                                                    <input matInput *ngIf=\"phoneNumber\" class=\"full-width\" #myRef\r\n                                                        [(ngModel)]=\"transAmount\" formControlName=\"transactionAmount\"\r\n                                                        [value]=\"transAmt | number: '1.'\" (keyup)=\"OnInput($event)\"\r\n                                                        (focus)=\"clicked($event)\" [readonly]=\"isedit\">\r\n                                                </mat-card>\r\n                                                <mat-error *ngIf=\"cashdepositForm.get('transactionAmount').errors?.min\">\r\n                                                    Amount must be greater than zero\r\n                                                </mat-error>\r\n                                            </div>\r\n                                            <div fxFlex=\"25.5%\" fxFlex.xs=\"100%\" *ngIf=\"!showAccountNum\">\r\n                                                <mat-hint class=\"totalAmount\">Transaction Amount*</mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <input matInput class=\"full-width\" #myRef\r\n                                                        [(ngModel)]=\"transAmount\" formControlName=\"transactionAmount\"\r\n                                                        [value]=\"transAmt | number: '2.'\" (keyup)=\"OnInput($event)\"\r\n                                                        (focus)=\"clicked($event)\" >\r\n                                                </mat-card>\r\n                                                <mat-error *ngIf=\"cashdepositForm.get('transactionAmount').errors?.min\">\r\n                                                    Amount must be greater than zero\r\n                                                </mat-error>\r\n                                            </div>\r\n                                            <div fxFlex=\"25%\" fxFlex.xs=\"100%\">\r\n                                                <mat-hint class=\"totalAmount\">Total Charge Amount*</mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <input matInput class=\"full-width\" readonly formControlName=\"totalChargeAmount\">\r\n                                                </mat-card>\r\n                                               \r\n                                            </div>\r\n                                            <div fxFlex=\"25%\" fxFlex.xs=\"100%\">\r\n                                                <mat-hint class=\"totalAmount\">Total Transaction Amount*</mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <input matInput class=\"full-width\" readonly formControlName=\"totalTransactionAmount\">\r\n                                                </mat-card>\r\n                                               \r\n                                            </div>\r\n                                            <div class=\"tooltip\">\r\n                                                <img width=\"80%\"\r\n                                            [src]=\"'assets/images/info.svg'\"/>\r\n                                                <div class=\"tooltiptext\">\r\n                                                    <p class=\"totalAmount textcolor\" style=\"margin-top:10px; margin-bottom:6px\">Transaction Amount:{{cashdepositForm.get('transactionAmount').value}} </p>\r\n                                                    <p class=\"totalAmount textcolor\">Total Charge Amount:{{cashdepositForm.get('totalChargeAmount').value}} </p>\r\n                                                    <hr/>\r\n                                                    <p class=\"totalAmount textcolor\" style=\"margin-right:10px ;\">Total Transaction Amount:{{cashdepositForm.get('totalTransactionAmount').value}} </p>\r\n                                                </div>\r\n                                            </div>\r\n                                        </ng-container>\r\n                                    </div>\r\n                                </div>\r\n                                <!-- <div>\r\n                                    <div fxLayout=\"row wrap\" class=\"flex-container stretch\">\r\n                                        <ng-container>\r\n                                            <div fxFlex=\"30%\" fxFlex.xs=\"100%\" style=\"padding: 0% 1%;\">\r\n                                                <button mat-flat-button *ngIf=\"phoneNumber\" class=\"buttonCancel full-width\"\r\n                                                    (click)=\"goToServiceScreens()\">CANCEL</button>\r\n                                            </div>\r\n                                            <div fxFlex=\"70%\" fxFlex.xs=\"100%\" style=\"padding: 0% 2%;\">\r\n                                                <button mat-flat-button class=\"buttonNext full-width\"\r\n                                                [disabled]=\"!enableContinue || !cashdepositForm.get('transactionAmount').valid \r\n                                                ||!cashdepositForm.get('transactionCurrency').valid\r\n                                                ||!cashdepositForm.get('accountType').valid\r\n                                                ||!cashdepositForm.get('holderName').valid\r\n                                                ||!cashdepositForm.get('accountNumber').valid\r\n                                                ||!cashdepositForm.get('accountCurrency').valid ||!cashdepositForm.get('totalAmount').valid\"\r\n\r\n                                                    (click)=\"onSaveofcashDeposit(cashdepositForm.value,ifQRvariable)\">CONTINUE</button>\r\n                                            </div>\r\n                                        </ng-container>\r\n                                    </div>\r\n                                </div> -->\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </mat-card-content>\r\n            </mat-card>\r\n        </div>\r\n        <div *ngIf=\"(denomRequired == 'yes') && (cashdepositForm.get('transactionAmount').value > 0 || transAmt > 0)\" fxFlex=\"30%\">\r\n            <form #cdForm=\"ngForm\">\r\n                <mat-card class=\"border-align\">\r\n                    <div fxLayout=\"row\" class=\"pH10 full-width\">\r\n\r\n                        <h4 class=\"title-Font\">Denomination</h4>\r\n                    </div>\r\n                    <div class=\"pH10 full-width\" id=\"denominationDiv\">\r\n                        <div class=\"paddingclass\" fxLayoutAlign=\"center center\"\r\n                            *ngIf=\"cashdepositForm.value.transactionCurrency == 'INR'\">\r\n                            <div fxFlex=\"20%\">\r\n                                <p class=\"quantityClass text-small\">2000</p>\r\n                            </div>\r\n                            <div fxFlex=\"10%\">\r\n                                <p class=\"operationTypeClass text-small\">x</p>\r\n                            </div>\r\n                            <div fxFlex=\"70%\">\r\n                                <mat-card class=\"inputCard\">\r\n                                    <div>\r\n                                        <input class=\"full-width inputClass\" type=\"text\"\r\n                                            (keyup)=\"totalAmountValue(cdForm)\" (keypress)=\"omit_number($event)\" matInput\r\n                                            name=\"count2000\" ngModel #count2000>\r\n                                    </div>\r\n                                </mat-card>\r\n                                <div class=\"pl10\">\r\n                                    <mat-error *ngIf=\"denominationlimit && count2000.value > denominationLimit[2000]\">\r\n                                        Please enter <= {{denominationLimit[2000]}} </mat-error> </div> </div> </div>\r\n                                            <div class=\"paddingclass\" fxLayoutAlign=\"start center\"\r\n                                            *ngIf=\"cashdepositForm.value.transactionCurrency == 'INR' || cashdepositForm.value.transactionCurrency == 'USD' || cashdepositForm.value.transactionCurrency == 'AED'\">\r\n                                            <div fxFlex=\"20%\">\r\n                                                <p class=\"quantityClass text-small\">500</p>\r\n                                            </div>\r\n                                            <div fxFlex=\"10%\">\r\n                                                <p class=\"operationTypeClass text-small\">x</p>\r\n                                            </div>\r\n                                            <div fxFlex=\"70%\">\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <input class=\"full-width inputClass\" type=\"text\"\r\n                                                        (keyup)=\"totalAmountValue(cdForm)\"\r\n                                                        (keypress)=\"omit_number($event)\" matInput name=\"count500\"\r\n                                                        ngModel #count500>\r\n                                                </mat-card>\r\n                                                <div class=\"pl10\">\r\n                                                    <mat-error\r\n                                                        *ngIf=\"denominationlimit && count500.value > denominationLimit[500]\">\r\n                                                        Please enter <= {{denominationLimit[500]}} </mat-error> </div>\r\n                                                            </div> </div> <div class=\"paddingclass\"\r\n                                                            fxLayoutAlign=\"start center\"\r\n                                                            *ngIf=\"cashdepositForm.value.transactionCurrency == 'INR'\">\r\n                                                            <div fxFlex=\"20%\">\r\n                                                                <p class=\"quantityClass text-small\">200</p>\r\n                                                            </div>\r\n                                                            <div fxFlex=\"10%\">\r\n                                                                <p class=\"operationTypeClass text-small\">x</p>\r\n                                                            </div>\r\n                                                            <div fxFlex=\"70%\">\r\n                                                                <mat-card class=\"inputCard\">\r\n                                                                    <input class=\"full-width inputClass\" type=\"text\"\r\n                                                                        (keyup)=\"totalAmountValue(cdForm)\"\r\n                                                                        (keypress)=\"omit_number($event)\" matInput\r\n                                                                        name=\"count200\" ngModel #count200>\r\n                                                                </mat-card>\r\n                                                                <div class=\"pl10\">\r\n                                                                    <mat-error\r\n                                                                        *ngIf=\"denominationlimit && count200.value > denominationLimit[200]\">\r\n                                                                        Please enter <= {{denominationLimit[200]}}\r\n                                                                            </mat-error> </div> </div> </div> <div\r\n                                                                            class=\"paddingclass\"\r\n                                                                            fxLayoutAlign=\"start center\"\r\n                                                                            *ngIf=\"cashdepositForm.value.transactionCurrency == 'INR' || cashdepositForm.value.transactionCurrency == 'USD' || cashdepositForm.value.transactionCurrency == 'AED'\">\r\n                                                                            <div fxFlex=\"20%\">\r\n                                                                                <p class=\"quantityClass text-small\">100\r\n                                                                                </p>\r\n                                                                            </div>\r\n                                                                            <div fxFlex=\"10%\">\r\n                                                                                <p\r\n                                                                                    class=\"operationTypeClass text-small\">\r\n                                                                                    x</p>\r\n                                                                            </div>\r\n                                                                            <div fxFlex=\"70%\">\r\n                                                                                <mat-card class=\"inputCard\">\r\n                                                                                    <input class=\"full-width inputClass\"\r\n                                                                                        type=\"text\"\r\n                                                                                        (keyup)=\"totalAmountValue(cdForm)\"\r\n                                                                                        (keypress)=\"omit_number($event)\"\r\n                                                                                        matInput name=\"count100\" ngModel\r\n                                                                                        #count100>\r\n                                                                                </mat-card>\r\n                                                                                <div class=\"pl10\">\r\n                                                                                    <mat-error\r\n                                                                                        *ngIf=\"denominationlimit && count100.value > denominationLimit[100]\">\r\n                                                                                        Please enter <=\r\n                                                                                            {{denominationLimit[100]}}\r\n                                                                                            </mat-error> </div> </div>\r\n                                                                                            </div> <div\r\n                                                                                            class=\"paddingclass\"\r\n                                                                                            fxLayoutAlign=\"start center\"\r\n                                                                                            *ngIf=\"cashdepositForm.value.transactionCurrency == 'INR' || cashdepositForm.value.transactionCurrency == 'USD'\">\r\n                                                                                            <div fxFlex=\"20%\">\r\n                                                                                                <p\r\n                                                                                                    class=\"quantityClass text-small\">\r\n                                                                                                    50</p>\r\n                                                                                            </div>\r\n                                                                                            <div fxFlex=\"10%\">\r\n                                                                                                <p\r\n                                                                                                    class=\"operationTypeClass text-small\">\r\n                                                                                                    x</p>\r\n                                                                                            </div>\r\n                                                                                            <div fxFlex=\"70%\">\r\n                                                                                                <mat-card\r\n                                                                                                    class=\"inputCard\">\r\n                                                                                                    <input\r\n                                                                                                        class=\"full-width inputClass\"\r\n                                                                                                        type=\"text\"\r\n                                                                                                        (keyup)=\"totalAmountValue(cdForm)\"\r\n                                                                                                        (keypress)=\"omit_number($event)\"\r\n                                                                                                        matInput\r\n                                                                                                        name=\"count50\"\r\n                                                                                                        ngModel\r\n                                                                                                        #count50>\r\n                                                                                                </mat-card>\r\n                                                                                                <div class=\"pl10\">\r\n                                                                                                    <mat-error\r\n                                                                                                        *ngIf=\"denominationlimit && count50.value > denominationLimit[50]\">\r\n                                                                                                        Please enter <=\r\n                                                                                                            {{denominationLimit[50]}}\r\n                                                                                                            </mat-error>\r\n                                                                                                            </div>\r\n                                                                                                            </div>\r\n                                                                                                            </div> <div\r\n                                                                                                            class=\"paddingclass\"\r\n                                                                                                            fxLayoutAlign=\"start center\"\r\n                                                                                                            *ngIf=\"cashdepositForm.value.transactionCurrency == 'INR'\">\r\n                                                                                                            <div\r\n                                                                                                                fxFlex=\"20%\">\r\n                                                                                                                <p\r\n                                                                                                                    class=\"quantityClass text-small\">\r\n                                                                                                                    20\r\n                                                                                                                </p>\r\n                                                                                                            </div>\r\n                                                                                                            <div\r\n                                                                                                                fxFlex=\"10%\">\r\n                                                                                                                <p\r\n                                                                                                                    class=\"operationTypeClass text-small\">\r\n                                                                                                                    x\r\n                                                                                                                </p>\r\n                                                                                                            </div>\r\n                                                                                                            <div\r\n                                                                                                                fxFlex=\"70%\">\r\n                                                                                                                <mat-card\r\n                                                                                                                    class=\"inputCard\">\r\n                                                                                                                    <input\r\n                                                                                                                        class=\"full-width inputClass\"\r\n                                                                                                                        type=\"text\"\r\n                                                                                                                        (keyup)=\"totalAmountValue(cdForm)\"\r\n                                                                                                                        (keypress)=\"omit_number($event)\"\r\n                                                                                                                        matInput\r\n                                                                                                                        name=\"count20\"\r\n                                                                                                                        ngModel\r\n                                                                                                                        #count20>\r\n                                                                                                                </mat-card>\r\n                                                                                                                <div\r\n                                                                                                                    class=\"pl10\">\r\n                                                                                                                    <mat-error\r\n                                                                                                                        *ngIf=\"denominationlimit && count20.value > denominationLimit[20]\">\r\n                                                                                                                        Please\r\n                                                                                                                        enter\r\n                                                                                                                        <= {{denominationLimit[20]}}\r\n                                                                                                                            </mat-error>\r\n                                                                                                                            </div>\r\n                                                                                                                            </div>\r\n                                                                                                                            </div>\r\n                                                                                                                            <div\r\n                                                                                                                            class=\"paddingclass\"\r\n                                                                                                                            fxLayoutAlign=\"start center\"\r\n                                                                                                                            *ngIf=\"cashdepositForm.value.transactionCurrency == 'INR'\">\r\n                                                                                                                            <div\r\n                                                                                                                                fxFlex=\"20%\">\r\n                                                                                                                                <p\r\n                                                                                                                                    class=\"quantityClass text-small\">\r\n                                                                                                                                    10\r\n                                                                                                                                </p>\r\n                                                                                                                            </div>\r\n                                                                                                                            <div\r\n                                                                                                                                fxFlex=\"10%\">\r\n                                                                                                                                <p\r\n                                                                                                                                    class=\"operationTypeClass text-small\">\r\n                                                                                                                                    x\r\n                                                                                                                                </p>\r\n                                                                                                                            </div>\r\n                                                                                                                            <div\r\n                                                                                                                                fxFlex=\"70%\">\r\n                                                                                                                                <mat-card\r\n                                                                                                                                    class=\"inputCard\">\r\n                                                                                                                                    <input\r\n                                                                                                                                        class=\"full-width inputClass\"\r\n                                                                                                                                        type=\"text\"\r\n                                                                                                                                        (keyup)=\"totalAmountValue(cdForm)\"\r\n                                                                                                                                        (keypress)=\"omit_number($event)\"\r\n                                                                                                                                        matInput\r\n                                                                                                                                        name=\"count10\"\r\n                                                                                                                                        ngModel\r\n                                                                                                                                        #count10>\r\n                                                                                                                                </mat-card>\r\n                                                                                                                                <div\r\n                                                                                                                                    class=\"pl10\">\r\n                                                                                                                                    <mat-error\r\n                                                                                                                                        *ngIf=\"denominationlimit && count10.value > denominationLimit[10]\">\r\n                                                                                                                                        Please\r\n                                                                                                                                        enter\r\n                                                                                                                                        <= {{denominationLimit[10]}}\r\n                                                                                                                                            </mat-error>\r\n                                                                                                                                            </div>\r\n                                                                                                                                            </div>\r\n                                                                                                                                            </div>\r\n                                                                                                                                            <div\r\n                                                                                                                                            class=\"paddingclass\"\r\n                                                                                                                                            fxLayoutAlign=\"start center\"\r\n                                                                                                                                            *ngIf=\"cashdepositForm.value.transactionCurrency == 'INR' || cashdepositForm.value.transactionCurrency == 'USD' || cashdepositForm.value.transactionCurrency == 'AED'\">\r\n                                                                                                                                            <div\r\n                                                                                                                                                fxFlex=\"20%\">\r\n                                                                                                                                                <p\r\n                                                                                                                                                    class=\"quantityClass text-small\">\r\n                                                                                                                                                    1\r\n                                                                                                                                                </p>\r\n                                                                                                                                            </div>\r\n                                                                                                                                            <div\r\n                                                                                                                                                fxFlex=\"10%\">\r\n                                                                                                                                                <p\r\n                                                                                                                                                    class=\"operationTypeClass text-small\">\r\n                                                                                                                                                    x\r\n                                                                                                                                                </p>\r\n                                                                                                                                            </div>\r\n                                                                                                                                            <div\r\n                                                                                                                                                fxFlex=\"70%\">\r\n                                                                                                                                                <mat-card\r\n                                                                                                                                                    class=\"inputCard\">\r\n                                                                                                                                                    <input\r\n                                                                                                                                                        class=\"full-width inputClass\"\r\n                                                                                                                                                        type=\"text\"\r\n                                                                                                                                                        (keyup)=\"totalAmountValue(cdForm)\"\r\n                                                                                                                                                        (keypress)=\"omit_number($event)\"\r\n                                                                                                                                                        matInput\r\n                                                                                                                                                        name=\"count1\"\r\n                                                                                                                                                        ngModel\r\n                                                                                                                                                        #count10>\r\n                                                                                                                                                </mat-card>\r\n                                                                                                                                            </div>\r\n                                                                                                                                </div>\r\n                                                                                                                            </div>\r\n                                                                                                                            <div fxLayout=\"row wrap\"\r\n                                                                                                                                class=\"pH10 full-width\">\r\n                                                                                                                                <div fxFlex=\"53%\"\r\n                                                                                                                                    fxFlex.xs=\"100%\">\r\n                                                                                                                                    <p\r\n                                                                                                                                        class=\"totalAmount\">\r\n                                                                                                                                        Total\r\n                                                                                                                                        Amount\r\n                                                                                                                                    </p>\r\n                                                                                                                                    <mat-card\r\n                                                                                                                                        class=\"inputCard\">\r\n                                                                                                                                        <input\r\n                                                                                                                                            class=\"full-width inputClass\"\r\n                                                                                                                                            [(ngModel)]=\"totalAmount\"\r\n                                                                                                                                            matInput\r\n                                                                                                                                            name=\"totalAmount\"\r\n                                                                                                                                            readonly>\r\n                                                                                                                                    </mat-card>\r\n                                                                                                                                    <div\r\n                                                                                                                                        class=\"pl10\" style=\"width: 150%;\">\r\n                                                                                                                                        <mat-error\r\n                                                                                                                                        *ngIf=\"enableBtn1\">\r\n                                                                                                                                            Total\r\n                                                                                                                                            amount\r\n                                                                                                                                            should\r\n                                                                                                                                            be\r\n                                                                                                                                            equal\r\n                                                                                                                                            to\r\n                                                                                                                                            {{cashdepositForm.value.transactionAmount}}\r\n                                                                                                                                        </mat-error>\r\n                                                                                                                                    </div>\r\n                                                                                                                                </div>\r\n                                                                                                                            </div>\r\n                </mat-card>\r\n            </form>\r\n        </div>\r\n    </div>\r\n\r\n\r\n\r\n    <div>\r\n        <div fxLayout=\"row wrap\" class=\"flex-container stretch\" id=\"buttonDiv\">\r\n            <ng-container>\r\n                <div fxFlex=\"30%\" fxFlex.xs=\"100%\" class=\"paddingCls\">\r\n                    <button mat-flat-button *ngIf=\"phoneNumber\" class=\"buttonCancel full-width\"\r\n                        (click)=\"goToServiceScreens()\">CANCEL</button>\r\n                </div>\r\n                <div fxFlex=\"70%\" fxFlex.xs=\"100%\" class=\"paddingCls\" *ngIf=\"showAccountNum\" >\r\n                    <button mat-flat-button class=\"buttonNext full-width\" [disabled]=\"!enableContinue\r\n                    || !cashdepositForm.get('transactionAmount').valid \r\n                    ||!cashdepositForm.get('transactionCurrency').valid\r\n                    ||!cashdepositForm.get('accountType').valid\r\n                    ||!cashdepositForm.get('accountNumber').valid\r\n                    ||!cashdepositForm.get('accountCurrency').valid\r\n                    ||!cashdepositForm.get('totalChargeAmount').valid\r\n                    ||!cashdepositForm.get('totalTransactionAmount').valid\"\r\n                        (click)=\"onSaveofcashDeposit(cashdepositForm.value,ifQRvariable,cdForm)\">GENERATE TOKEN</button>\r\n                </div>\r\n\r\n                <div fxFlex=\"70%\" fxFlex.xs=\"100%\" class=\"paddingCls\" *ngIf=\"!showAccountNum\" >\r\n                    <button mat-flat-button class=\"buttonNext full-width\" [disabled]=\"!enableContinue \r\n                    || !cashdepositForm.get('transactionAmount').valid \r\n                    ||!cashdepositForm.get('transactionCurrency').valid\r\n                    ||!cashdepositForm.get('accountType').valid\r\n                    ||!cashdepositForm.get('accountNumber').valid\r\n                    ||!cashdepositForm.get('accountCurrency').valid\r\n                    ||!cashdepositForm.get('totalChargeAmount').valid\r\n                    ||!cashdepositForm.get('totalTransactionAmount').valid\" \r\n                        (click)=\"getOTP(cashdepositForm.value,ifQRvariable,cdForm);\" >CONTINUE</button>\r\n                </div>\r\n            </ng-container>\r\n        </div>\r\n    </div>\r\n\r\n\r\n\r\n\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl, FormBuilder, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { DialogService } from 'app/shared/services/Dialog/dialog.service';\r\n\r\ninterface Testing {\r\n  value: string;\r\n  viewValue: string;\r\n}\r\n\r\n\r\n@Component({\r\n  selector: 'app-utility-billpayment',\r\n  templateUrl: './utility-billpayment.component.html',\r\n  styleUrls: ['./utility-billpayment.component.scss']\r\n})\r\nexport class UtilityBillpaymentComponent implements OnInit {\r\n  utilityBillPaymentForm: FormGroup;\r\n  utilityBillpayment : any = 'Utility Bill Payment';\r\n  constructor(private router : Router, private formBuilder: FormBuilder,  private dialogService : DialogService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.utilityBillPaymentForm = this.formBuilder.group({\r\n      billerName:['', [Validators.required]],\r\n      amount:['', [Validators.required]],\r\n      payFromAcc:['', [Validators.required]],\r\n      billDate:['', [Validators.required]],\r\n      billNumber:['', [Validators.required]],\r\n    });\r\n  }\r\n  goToServiceScreens(){\r\n    this.router.navigateByUrl('/others/kioskHome');\r\n  }\r\n  goToAuthenticate(){\r\n    this.dialogService.authenticationDialog();\r\n  }\r\n\r\n  testing: Testing[] = [\r\n    { value: 'Demo', viewValue: 'Demo 1' },\r\n    { value: 'Demo', viewValue: 'Demo 2' },\r\n    { value: 'Demo', viewValue: 'Demo 3' }\r\n  ];\r\n\r\n}\r\n","<div class=\"fullcard\">\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"center center\">\r\n        <div fxFlex=\"80%\">\r\n            <mat-card class=\"chequecard\">\r\n                <mat-card-title style=\"padding: 2%;\">\r\n                    <div fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n                        <div>\r\n                            <mat-icon class=\"backIcon\" (click)=\"goToServiceScreens()\">keyboard_backspace</mat-icon>\r\n                        </div> &nbsp;&nbsp;\r\n                        <div class=\"card-title\">Utility Bill Payment</div>\r\n                    </div>\r\n                </mat-card-title>\r\n                <mat-card-content>\r\n                    <div class=\"full-width\" style=\"padding: 0% 3% 3% 2%;\">\r\n                        <!-- <form #utilityBillPaymentForm=\"ngForm\"> -->\r\n                        <form [formGroup]=\"utilityBillPaymentForm\">\r\n                            <div fxLayout=\"column\" fxLayoutGap=\"5%\" fxLayoutAlign=\"space-between none\">\r\n                                <div>\r\n                                    <div fxLayout=\"row wrap\" class=\"flex-container stretch\">\r\n                                        <ng-container>\r\n                                            <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                                <mat-hint class=\"totalAmount\">Biller Name*</mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <input matInput formControlName=\"billerName\" class=\"full-width inputClass\" type=\"text\"\r\n                                                        name=\"billerName\">\r\n                                                </mat-card>\r\n                                            </div>\r\n                                            <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                                <mat-hint class=\"totalAmount\"> Amount*</mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <input matInput formControlName=\"amount\" type=\"text\" class=\"full-width inputClass\"\r\n                                                        name=\"amount\">\r\n                                                </mat-card>\r\n                                            </div>\r\n                                            <div fxFlex=\"34%\" fxFlex.xs=\"100%\">\r\n                                                <mat-hint class=\"totalAmount\">Pay from Account* </mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <input matInput formControlName=\"payFromAcc\" type=\"text\" class=\"full-width inputClass\"\r\n                                                        name=\"payFromAcc\">\r\n                                                </mat-card>\r\n                                            </div>\r\n                                        </ng-container>\r\n                                    </div>\r\n                                </div>\r\n                                <div>\r\n                                    <span layout=\"row\">\r\n                                        <hr class=\"line\" flex />\r\n                                    </span>\r\n                                </div>\r\n                                <div>\r\n                                    <div fxLayout=\"row wrap\" class=\"flex-container stretch\">\r\n                                        <ng-container>\r\n                                            <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                                <mat-hint class=\"totalAmount\">Bill Date*</mat-hint>\r\n                                                <mat-card class=\"inputCard heightAdjust\">\r\n                                                    <input matInput formControlName=\"billDate\" [matDatepicker]=\"picker\"\r\n                                                        class=\"inputWidth inputClass\">\r\n                                                    <mat-datepicker-toggle style=\"margin-left: 15%;\" matSuffix\r\n                                                        [for]=\"picker\">\r\n                                                    </mat-datepicker-toggle>\r\n                                                    <mat-datepicker #picker></mat-datepicker>\r\n                                                </mat-card>\r\n                                            </div>\r\n                                            <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                                <mat-hint class=\"totalAmount\">Bill Number* </mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <mat-select formControlName=\"billNumber\" class=\"full-width\" style=\"background-color: #f9fafb;\">\r\n                                                        <mat-option *ngFor=\"let test of testing\" [value]=\"test.value\">\r\n                                                            {{test.viewValue}}\r\n                                                        </mat-option>\r\n                                                    </mat-select>\r\n                                                </mat-card>\r\n                                            </div>\r\n                                            <div fxFlex=\"34%\" fxFlex.xs=\"100%\">\r\n                                                <mat-hint class=\"totalAmount\">Remark</mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <textarea class=\"full-width inputClass\" rows=\"5\" cols=\"6\">\r\n                                                </textarea>\r\n                                                </mat-card>\r\n                                            </div>\r\n                                        </ng-container>\r\n                                    </div>\r\n                                </div>\r\n                                <div>\r\n                                    <div fxLayout=\"row wrap\" class=\"flex-container stretch\">\r\n                                        <ng-container>\r\n                                            <div fxFlex=\"30%\" fxFlex.xs=\"100%\" style=\"padding: 0% 1%;\">\r\n                                                <button mat-flat-button class=\"buttonCancel full-width\"\r\n                                                    (click)=\"goToServiceScreens()\">CANCEL</button>\r\n                                            </div>\r\n                                            <div fxFlex=\"100%\" fxFlex.xs=\"100%\" style=\"padding: 0% 2%;\">\r\n                                                <button mat-flat-button class=\"buttonNext full-width\"\r\n                                                [disabled]=\" !utilityBillPaymentForm.get('billerName').valid\r\n                                                || !utilityBillPaymentForm.get('amount').valid\r\n                                                || !utilityBillPaymentForm.get('payFromAcc').valid\r\n                                                || !utilityBillPaymentForm.get('billDate').valid\r\n                                                || !utilityBillPaymentForm.get('billNumber').valid \"\r\n                                                    (click)=\"goToAuthenticate()\">CONTINUE</button>\r\n                                            </div>\r\n                                        </ng-container>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </mat-card-content>\r\n            </mat-card>\r\n        </div>\r\n    </div>\r\n</div>","import { ChangeDetectionStrategy, Component, forwardRef, OnInit, ViewChild } from '@angular/core';\r\nimport { FormControl, FormGroup, NgForm, NG_VALIDATORS, NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { DataService } from 'app/shared/services/data.service';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-denomination-info',\r\n  templateUrl: './denomination-info.component.html',\r\n  styleUrls: ['./denomination-info.component.scss'],\r\n  providers: [\r\n    {\r\n      provide: NG_VALUE_ACCESSOR,\r\n      useExisting: forwardRef(() => DenominationInfoComponent),\r\n      multi: true\r\n    },\r\n    {\r\n      provide: NG_VALIDATORS,\r\n      useExisting: forwardRef(() => DenominationInfoComponent),\r\n      multi: true,\r\n    }\r\n  ],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class DenominationInfoComponent implements OnInit {\r\n  subscriptions: Subscription[] = [];\r\n  @ViewChild('cdForm') cdForm: NgForm;\r\n  denomCodeArray: any[] = [\r\n    { key: 'count2000', value: 2000 },\r\n    { key: 'count500', value: 500 },\r\n    { key: 'count200', value: 200 },\r\n    { key: 'count100', value: 100 },\r\n    { key: 'count50', value: 50 },\r\n    { key: 'count20', value: 20 },\r\n    { key: 'count10', value: 10 },\r\n    { key: 'count1', value: 1 }\r\n\r\n  ];\r\n  transactionAmountValue: any;\r\n  enableBtn: boolean = true;\r\n  enableBtn1: boolean = false;\r\n  transamount: any;\r\n  totalAmount: any;\r\n  transactiondata: any;\r\n  denomRequired: {};\r\n  get value(): any {\r\n    return this.cdForm.value;\r\n  }\r\n\r\n  set value(value: any) {\r\n    this.cdForm.setValue(value);\r\n    this.onChange(value);\r\n    this.onTouched();\r\n  }\r\n\r\n  constructor( private dataService:DataService) { }\r\n\r\n  ngOnInit(): void {\r\n    console.log(this.cdForm);\r\n    this.dataService.gettransactionFormdata.subscribe(transaction=>{\r\n      if(transaction){\r\n        console.log(\"Account component?\",transaction);\r\n        this.transactiondata=transaction\r\n      }\r\n \r\n    });\r\n    this.dataService.getNavParam.subscribe(denomRequired=>{\r\n      if(denomRequired){\r\n        console.log(\"Account component?\",denomRequired);\r\n        this.denomRequired=denomRequired;\r\n        console.log(this.transactiondata.transactionAmounts);\r\n      }\r\n \r\n    })\r\n  }\r\n  onChange: any = () => { };\r\n  onTouched: any = () => { };\r\n\r\n  registerOnChange(fn) {\r\n    this.onChange = fn;\r\n  }\r\n  addCurrencyImage(currency) {\r\n    return currency.toLowerCase();\r\n  }\r\n\r\n  // writeValue(value) {\r\n  //   if (value) {\r\n  //     this.value = value;\r\n  //   }\r\n\r\n  //   if (value === null) {\r\n  //     this.cdForm.reset();\r\n  //   }\r\n  // }\r\n\r\n  registerOnTouched(fn) {\r\n    this.onTouched = fn;\r\n  }\r\n\r\n  validate(_: FormControl) {\r\n    return this.cdForm.valid ? null : { profile: { valid: false, }, };\r\n  }\r\n  omit_number(event) {\r\n    var key;\r\n    key = event.charCode;\r\n    return ((key > 47 && key < 58));\r\n  }\r\n  totalAmountValue(cdForm) {\r\n    console.log(this.transactiondata);\r\n    this.dataService.sendDenominationFormData(cdForm.form);\r\n    this.transactionAmountValue=this.transactiondata.transactionAmount;\r\n    this.transactionAmountValue=this.transactionAmountValue.replace(/\\,/g,''); // 1125, but a string, so convert it to number\r\n    this.transactionAmountValue=parseInt(this.transactionAmountValue,10);\r\n\r\n    this.cdForm.value.totalAmount =\r\n      ((cdForm.value.count2000 ? cdForm.value.count2000 * 2000 : 0) +\r\n        (cdForm.value.count500 ? cdForm.value.count500 * 500 : 0) +\r\n        (cdForm.value.count200 ? cdForm.value.count200 * 200 : 0) +\r\n        (cdForm.value.count100 ? cdForm.value.count100 * 100 : 0) +\r\n        (cdForm.value.count50 ? cdForm.value.count50 * 50 : 0) +\r\n        (cdForm.value.count20 ? cdForm.value.count20 * 20 : 0) +\r\n        (cdForm.value.count10 ? cdForm.value.count10 * 10 : 0) +\r\n        (cdForm.value.count1 ? cdForm.value.count1 * 1 : 0)\r\n      );\r\n        this.cdForm.value.totalAmount = this.cdForm.value.totalAmount;\r\n        console.log(this.cdForm.value.totalAmount)\r\n        console.log(this.cdForm.value.transactionAmount);\r\n        \r\n        this.transamount=this.cdForm.value.transactionAmount;\r\n        this.totalAmount=this.cdForm.value.totalAmount.toLocaleString('en-US');\r\n        \r\n          if(this.transamount != this.totalAmount){\r\n          this.enableBtn = false;\r\n        }\r\n        else{\r\n          this.enableBtn = true;\r\n        }\r\n        console.log(this.transamount,this.totalAmount)\r\n\r\n           if((this.transactionAmountValue > this.totalAmount) || (this.transactionAmountValue < this.totalAmount)){\r\n          this.enableBtn1 = true;\r\n        }\r\n        else{\r\n          this.enableBtn1 = false;\r\n        }      \r\n        this.cdForm.controls.totalAmount.setValue(this.cdForm.value.totalAmount);\r\n        \r\n  }\r\n\r\n}\r\n","<mat-card style=\"height:94.5%;\">\r\n    <form #cdForm=\"ngForm\">\r\n    <mat-card-title style=\"font-size: 15px;color: #004C97;margin-left: 1%;\">Denomination</mat-card-title>\r\n    <div class=\"pH10 full-width\" id=\"denominationDiv\">\r\n      <div class=\"paddingclass\" fxLayoutAlign=\"center center\"\r\n          *ngIf=\"transactiondata.transactionCurrency == 'INR'\"\r\n          >\r\n          <div fxFlex=\"20%\">\r\n              <p class=\"quantityClass text-small\">2000</p>\r\n          </div>\r\n          <div fxFlex=\"10%\">\r\n              <p class=\"operationTypeClass text-small\">x</p>\r\n          </div>\r\n          <div fxFlex=\"70%\">\r\n              <mat-card class=\"inputCard\">\r\n                  <div>\r\n                      <input class=\"full-width inputClass\" type=\"text\"\r\n                          (keyup)=\"totalAmountValue(cdForm)\" (keypress)=\"omit_number($event)\" matInput\r\n                          name=\"count2000\" ngModel #count2000>\r\n                  </div>\r\n              </mat-card>\r\n              <div class=\"pl10\">\r\n                  <mat-error *ngIf=\"denominationlimit && count2000.value > denominationLimit[2000]\">\r\n                      Please enter <= {{denominationLimit[2000]}} </mat-error>\r\n              </div>\r\n          </div>\r\n      </div>\r\n      <div class=\"paddingclass\" fxLayoutAlign=\"start center\"\r\n          *ngIf=\"transactiondata.transactionCurrency == 'INR' || transactiondata.transactionCurrency == 'USD' || transactiondata.transactionCurrency == 'AED'\">\r\n          <div fxFlex=\"20%\">\r\n              <p class=\"quantityClass text-small\">500</p>\r\n          </div>\r\n          <div fxFlex=\"10%\">\r\n              <p class=\"operationTypeClass text-small\">x</p>\r\n          </div>\r\n          <div fxFlex=\"70%\">\r\n              <mat-card class=\"inputCard\">\r\n                  <input class=\"full-width inputClass\" type=\"text\" (keyup)=\"totalAmountValue(cdForm)\"\r\n                      (keypress)=\"omit_number($event)\" matInput name=\"count500\" ngModel #count500>\r\n              </mat-card>\r\n              <div class=\"pl10\">\r\n                  <mat-error *ngIf=\"denominationlimit && count500.value > denominationLimit[500]\">\r\n                      Please enter <= {{denominationLimit[500]}} </mat-error>\r\n              </div>\r\n          </div>\r\n      </div>\r\n      <div class=\"paddingclass\" fxLayoutAlign=\"start center\"\r\n          *ngIf=\"transactiondata.transactionCurrency == 'INR'\">\r\n          <div fxFlex=\"20%\">\r\n              <p class=\"quantityClass text-small\">200</p>\r\n          </div>\r\n          <div fxFlex=\"10%\">\r\n              <p class=\"operationTypeClass text-small\">x</p>\r\n          </div>\r\n          <div fxFlex=\"70%\">\r\n              <mat-card class=\"inputCard\">\r\n                  <input class=\"full-width inputClass\" type=\"text\" (keyup)=\"totalAmountValue(cdForm)\"\r\n                      (keypress)=\"omit_number($event)\" matInput name=\"count200\" ngModel #count200>\r\n              </mat-card>\r\n              <div class=\"pl10\">\r\n                  <mat-error *ngIf=\"denominationlimit && count200.value > denominationLimit[200]\">\r\n                      Please enter <= {{denominationLimit[200]}} </mat-error>\r\n              </div>\r\n          </div>\r\n      </div>\r\n      <div class=\"paddingclass\" fxLayoutAlign=\"start center\"\r\n          *ngIf=\"transactiondata.transactionCurrency == 'INR' || transactiondata.transactionCurrency == 'USD' || transactiondata.transactionCurrency == 'AED'\">\r\n          <div fxFlex=\"20%\">\r\n              <p class=\"quantityClass text-small\">100</p>\r\n          </div>\r\n          <div fxFlex=\"10%\">\r\n              <p class=\"operationTypeClass text-small\">x</p>\r\n          </div>\r\n          <div fxFlex=\"70%\">\r\n              <mat-card class=\"inputCard\">\r\n                  <input class=\"full-width inputClass\" type=\"text\" (keyup)=\"totalAmountValue(cdForm)\"\r\n                      (keypress)=\"omit_number($event)\" matInput name=\"count100\" ngModel #count100>\r\n              </mat-card>\r\n              <div class=\"pl10\">\r\n                  <mat-error *ngIf=\"denominationlimit && count100.value > denominationLimit[100]\">\r\n                      Please enter <= {{denominationLimit[100]}} </mat-error>\r\n              </div>\r\n          </div>\r\n      </div>\r\n      <div class=\"paddingclass\" fxLayoutAlign=\"start center\"\r\n          *ngIf=\"transactiondata.transactionCurrency== 'INR' || transactiondata.accountCurrency == 'USD'\">\r\n          <div fxFlex=\"20%\">\r\n              <p class=\"quantityClass text-small\">50</p>\r\n          </div>\r\n          <div fxFlex=\"10%\">\r\n              <p class=\"operationTypeClass text-small\">x</p>\r\n          </div>\r\n          <div fxFlex=\"70%\">\r\n              <mat-card class=\"inputCard\">\r\n                  <input class=\"full-width inputClass\" type=\"text\" (keyup)=\"totalAmountValue(cdForm)\"\r\n                      (keypress)=\"omit_number($event)\" matInput name=\"count50\" ngModel #count50>\r\n              </mat-card>\r\n              <div class=\"pl10\">\r\n                  <mat-error *ngIf=\"denominationlimit && count50.value > denominationLimit[50]\">\r\n                      Please enter <= {{denominationLimit[50]}} </mat-error>\r\n              </div>\r\n          </div>\r\n      </div>\r\n      <div class=\"paddingclass\" fxLayoutAlign=\"start center\"\r\n          *ngIf=\"transactiondata.transactionCurrency== 'INR'\">\r\n          <div fxFlex=\"20%\">\r\n              <p class=\"quantityClass text-small\">20</p>\r\n          </div>\r\n          <div fxFlex=\"10%\">\r\n              <p class=\"operationTypeClass text-small\">x</p>\r\n          </div>\r\n          <div fxFlex=\"70%\">\r\n              <mat-card class=\"inputCard\">\r\n                  <input class=\"full-width inputClass\" type=\"text\" (keyup)=\"totalAmountValue(cdForm)\"\r\n                      (keypress)=\"omit_number($event)\" matInput name=\"count20\" ngModel #count20>\r\n              </mat-card>\r\n              <div class=\"pl10\">\r\n                  <mat-error *ngIf=\"denominationlimit && count20.value > denominationLimit[20]\">\r\n                      Please enter <= {{denominationLimit[20]}} </mat-error>\r\n              </div>\r\n          </div>\r\n      </div>\r\n      <div class=\"paddingclass\" fxLayoutAlign=\"start center\"\r\n          *ngIf=\"transactiondata.transactionCurrency== 'INR'\">\r\n          <div fxFlex=\"20%\">\r\n              <p class=\"quantityClass text-small\">10</p>\r\n          </div>\r\n          <div fxFlex=\"10%\">\r\n              <p class=\"operationTypeClass text-small\">x</p>\r\n          </div>\r\n          <div fxFlex=\"70%\">\r\n              <mat-card class=\"inputCard\">\r\n                  <input class=\"full-width inputClass\" type=\"text\" (keyup)=\"totalAmountValue(cdForm)\"\r\n                      (keypress)=\"omit_number($event)\" matInput name=\"count10\" ngModel #count10>\r\n              </mat-card>\r\n              <div class=\"pl10\">\r\n                  <mat-error *ngIf=\"denominationlimit && count10.value > denominationLimit[10]\">\r\n                      Please enter <= {{denominationLimit[10]}} </mat-error>\r\n              </div>\r\n          </div>\r\n      </div>\r\n      <div class=\"paddingclass\" fxLayoutAlign=\"start center\"\r\n          *ngIf=\"transactiondata.transactionCurrency== 'INR' || transactiondata.transactionCurrency == 'USD' || transactiondata.transactionCurrency == 'AED'\">\r\n          <div fxFlex=\"20%\">\r\n              <p class=\"quantityClass text-small\">1</p>\r\n          </div>\r\n          <div fxFlex=\"10%\">\r\n              <p class=\"operationTypeClass text-small\">x</p>\r\n          </div>\r\n          <div fxFlex=\"70%\">\r\n              <mat-card class=\"inputCard\">\r\n                  <input class=\"full-width inputClass\" type=\"text\" (keyup)=\"totalAmountValue(cdForm)\"\r\n                      (keypress)=\"omit_number($event)\" matInput name=\"count1\" ngModel #count10>\r\n              </mat-card>\r\n          </div>\r\n      </div>\r\n  </div>\r\n  <div fxLayout=\"row wrap\" class=\"pH10 full-width\">\r\n      <div fxFlex=\"53%\" fxFlex.xs=\"100%\">\r\n          <mat-form-field appearance=\"outline\"class=\"inputCard\">\r\n            <mat-label>Total Amount</mat-label>\r\n              <input class=\"full-width inputClass\" [(ngModel)]=\"totalAmount\" matInput\r\n                  name=\"totalAmount\" readonly>\r\n          </mat-form-field>\r\n          <br><br>\r\n          <div class=\"pl10\" style=\"width: 150%;\">\r\n              <mat-error *ngIf=\"enableBtn1\">\r\n                  Total amount should be equal to {{transactiondata.transactionAmount}}\r\n              </mat-error>\r\n          </div>\r\n      </div>\r\n  </div>\r\n    </form>\r\n  </mat-card>","import { Directive, ElementRef, HostListener } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[appOnlynumber]'\r\n})\r\nexport class OnlynumberDirective {\r\n\r\n  private navigationKeys = [\r\n    'Backspace',\r\n    'Delete',\r\n    'Tab',\r\n    'Escape',\r\n    'Enter',\r\n    'Home',\r\n    'End',\r\n    'ArrowLeft',\r\n    'ArrowRight',\r\n    'Clear',\r\n    'Copy',\r\n    'Paste'\r\n  ];\r\n  inputElement: HTMLElement;\r\n  constructor(public el: ElementRef) {\r\n    this.inputElement = el.nativeElement;\r\n  }\r\n\r\n  @HostListener('keydown', ['$event'])\r\n  onKeyDown(e: KeyboardEvent) {\r\n    if (\r\n      this.navigationKeys.indexOf(e.key) > -1 || // Allow: navigation keys: backspace, delete, arrows etc.\r\n      (e.key === 'a' && e.ctrlKey === true) || // Allow: Ctrl+A\r\n      (e.key === 'c' && e.ctrlKey === true) || // Allow: Ctrl+C\r\n      (e.key === 'v' && e.ctrlKey === true) || // Allow: Ctrl+V\r\n      (e.key === 'x' && e.ctrlKey === true) || // Allow: Ctrl+X\r\n      (e.key === 'a' && e.metaKey === true) || // Allow: Cmd+A (Mac)\r\n      (e.key === 'c' && e.metaKey === true) || // Allow: Cmd+C (Mac)\r\n      (e.key === 'v' && e.metaKey === true) || // Allow: Cmd+V (Mac)\r\n      (e.key === 'x' && e.metaKey === true) // Allow: Cmd+X (Mac)\r\n    ) {\r\n      // let it happen, don't do anything\r\n      return;\r\n    }\r\n    // Ensure that it is a number and stop the keypress\r\n    if (\r\n      (e.shiftKey || (e.keyCode < 48 || e.keyCode > 57)) &&\r\n      (e.keyCode < 96 || e.keyCode > 105)\r\n    ) {\r\n      e.preventDefault();\r\n    }\r\n  }\r\n\r\n  @HostListener('paste', ['$event'])\r\n  onPaste(event: ClipboardEvent) {\r\n    event.preventDefault();\r\n    const pastedInput: string = event.clipboardData\r\n      .getData('text/plain')\r\n      .replace(/\\D/g, ''); // get a digit-only string\r\n    document.execCommand('insertText', false, pastedInput);\r\n  }\r\n\r\n  @HostListener('drop', ['$event'])\r\n  onDrop(event: DragEvent) {\r\n    event.preventDefault();\r\n    const textData = event.dataTransfer.getData('text').replace(/\\D/g, '');\r\n    this.inputElement.focus();\r\n    document.execCommand('insertText', false, textData);\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { Router } from '@angular/router';\r\nimport { CaptureChequeDetailsComponent } from '../capture-cheque-details/capture-cheque-details.component';\r\n@Component({\r\n  selector: 'app-scan-your-cheque',\r\n  templateUrl: './scan-your-cheque.component.html',\r\n  styleUrls: ['./scan-your-cheque.component.scss']\r\n})\r\nexport class ScanYourChequeComponent implements OnInit {\r\n\r\n  constructor(private dialog: MatDialog,public dialogRef: MatDialogRef<ScanYourChequeComponent>,private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  close(){\r\n    this.dialogRef.close();\r\n    this.router.navigateByUrl('/others/cheq-deposit');\r\n  }\r\n\r\n  scan(){\r\n    let dialogRef = this.dialog.open(CaptureChequeDetailsComponent, {\r\n      width: '60%',\r\n      height:'65%',\r\n    });\r\n    this.router.navigateByUrl('/others/cheq-deposit');\r\n  }\r\n}\r\n","<div fxLayout=\"row\" class=\"contain\">\r\n    <mat-icon class=\"backIcon\" (click)=\"close()\">close</mat-icon>\r\n</div>\r\n<div fxLayout=\"row\" fxLayoutAlign=\"center\">\r\n    <h1>Scan The Cheque</h1>\r\n</div>\r\n<div fxLayout=\"row\" fxLayoutAlign=\"center\">\r\n    <p>Would you like to scan the cheque details</p>\r\n</div>\r\n<div fxLayout=\"row\" fxLayoutAlign=\"center\" class=\"scanImage\">\r\n    <img  src=\"assets/images/pageScan.svg\" alt=\"\">\r\n</div>\r\n<div fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n    <button mat-flat-button class=\"buttonSkip\" (click)=\"close()\">Skip</button>\r\n    <button mat-flat-button class=\"buttonScan\" (click)=\"scan()\">Scan</button>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { NavigationExtras, Router } from '@angular/router';\r\nexport interface Section {\r\n  title: string;\r\n  id : number;\r\n  flag: boolean;\r\n  \r\n}\r\n\r\n@Component({\r\n  selector: 'app-cheque-withdrawal1',\r\n  templateUrl: './cheque-withdrawal1.component.html',\r\n  styleUrls: ['./cheque-withdrawal1.component.scss']\r\n})\r\n\r\nexport class ChequeWithdrawal1Component implements OnInit {\r\n  flag: boolean = true;\r\n  continue = \"CONTINUE\"\r\n  active : any = {};\r\n  folders: Section[] = [\r\n    {\r\n      title: \"Cash Withdrawal\",\r\n      id : 1,\r\n      flag : false,\r\n      \r\n    },\r\n    {\r\n      title: \"Cash Deposit\",\r\n      id : 2,\r\n      flag : false,\r\n      \r\n    },\r\n    {\r\n      title: \"Cheque Deposit\",\r\n      id : 3,\r\n      flag : false,\r\n    },\r\n    {\r\n      title: \"Cheque Withdrawal\",\r\n      id : 4,\r\n      flag : false,\r\n    },\r\n    {\r\n      title: \"Forex Transaction\",\r\n      id : 5,\r\n      flag : false,\r\n    },\r\n    {\r\n      title: \"Loan Payment\",\r\n      id : 6,\r\n      flag : false,\r\n    },\r\n    {\r\n      title: \"Deposit Top Up\",\r\n      id : 7,\r\n      flag : false,\r\n    },\r\n    {\r\n      title: \"Utility Bill Payment\",\r\n      id : 8,\r\n      flag : false,\r\n    },\r\n\r\n  ];\r\n  \r\n  serviceTitle: any;\r\n\r\n  constructor(private router : Router,) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n  trackByFn(index, item) {\r\n    return index; //or item.id\r\n  }\r\n  goToService(index){\r\n    if(this.active !== index){\r\n      this.active = index;\r\n      // console.log(this.active);\r\n      this.folders.forEach(item => { item.flag = false});\r\n    } \r\n    this.folders[index].flag = !this.folders[index].flag;\r\n  }\r\n  contiueButton(){\r\n    console.log(this.active);\r\n    const enableList = this.folders.filter(x => x.flag === true)\r\n    console.log(enableList);\r\n    if(enableList.length > 0 )\r\n    return true;\r\n    else \r\n    return false;\r\n  }\r\n  goToOperation(){\r\n    this.router.navigateByUrl('/others/master');\r\n  }\r\n\r\n}\r\n","<div class=\"fullcard\">\r\n    <br>\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"center center\">\r\n        <div fxFlex=\"72%\">\r\n          <mat-card class=\"chequecard\">\r\n            <mat-card-title >\r\n                <div class=\"card-title\">Services</div>\r\n                <div fxLayout=\"row wrap\" >\r\n                  <mat-hint class=\"totalAmount\" >Select one and continue</mat-hint>\r\n                <mat-card class=\"arrows\">\r\n                  <!-- <mat-icon class=\"arrowIcons\"> chevron_left</mat-icon> -->\r\n                  <!-- <mat-icon class=\"arrowIcons\">chevron_right</mat-icon> -->\r\n                 </mat-card>\r\n              </div>\r\n              </mat-card-title>\r\n              <mat-card-content>\r\n                <div class=\"full-width\">\r\n                    <div  fxLayout=\"row wrap\"  fxLayoutGap=\"40px \" class=\"gapBtw\" *ngFor=\"let folder of folders; let i = index\">\r\n                        <ng-container >\r\n                      <mat-card (click)=\"goToService(i)\" [ngClass]=\" folder.flag ? 'borderCard' : 'inputCard'\" >\r\n                        <div style=\"margin-top: 15%;\">\r\n                          <mat-card class=\"insideCard\" >\r\n                            <mat-icon class=\"serviceIcons\">payments</mat-icon>\r\n                            \r\n                            </mat-card>\r\n                            \r\n                            </div>\r\n                            <br>\r\n                             <mat-hint  class=\"insideTitle\">{{folder.title }}</mat-hint>\r\n                      </mat-card>\r\n                        </ng-container>\r\n                        </div></div>\r\n           <br><br>\r\n           <div fxLayout=\"row wrap\" fxLayoutGap=\"30px\" fxLayoutAlign=\"center center\">  \r\n               <button mat-flat-button (click) =\"goToOperation()\" [ngClass]=\"contiueButton() ? 'buttonActive' : 'buttonPassive'\" >{{continue}}</button>\r\n               </div> \r\n               <!-- (click) =\"goToOperation(i)\" -->\r\n               <br> \r\n                  </mat-card-content>\r\n              </mat-card>\r\n              </div>\r\n              </div>\r\n          </div>\r\n","import { Country } from '@angular-material-extensions/select-country';\r\nimport { getCurrencySymbol } from '@angular/common';\r\nimport { ChangeDetectorRef, Component, Input, OnInit, ViewChild } from '@angular/core';\r\nimport { FormGroup, NgForm, FormBuilder, Validators } from '@angular/forms';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { otpModel } from 'app/shared/models/otp.model';\r\nimport { TokenObjects } from 'app/shared/models/tokenObjects';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { DialogService } from 'app/shared/services/Dialog/dialog.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { OtpVerifyComponent } from '../otp-verify/otp-verify.component';\r\n\r\n@Component({\r\n  selector: 'app-newcashdeposit',\r\n  templateUrl: './newcashdeposit.component.html',\r\n  styleUrls: ['./newcashdeposit.component.scss']\r\n})\r\nexport class NewcashdepositComponent implements OnInit {\r\n\r\n \r\n    titleName: any = 'Cash Deposit';\r\n    cashdepositForm: FormGroup;\r\n    accType = ['Savings', 'Deposit'];\r\n    accountNum: string;\r\n    customerName = ['Jane Smith', 'John Smith'];\r\n    productCode = \"CHD\";\r\n    tokenOrigin = \"Kiosk\";\r\n    @Input() tokenResp: any;\r\n    // countryFormControl = new FormControl();\r\n    defaultValue: Country = {\r\n      name: 'Deutschland',\r\n      alpha2Code: 'DE',\r\n      alpha3Code: 'DEU',\r\n      numericCode: '276',\r\n      callingCode: '+49'\r\n    };\r\n    ifQRvariable = false;\r\n    cashDepositResponse: any;\r\n    accountBal: any;\r\n    phoneNumber: string;\r\n    errorStatus: number;\r\n    custAccountData: any;\r\n    countryValues: any;\r\n    accounttypeArray = [];\r\n    idList = [];\r\n    noList: any[];\r\n    accNum: any;\r\n    tokenObjects = new TokenObjects();\r\n    accNumber: any;\r\n    tokResponse: any;\r\n    tokenNum: any;\r\n    isedit: boolean = true;\r\n    estimatedTime: any;\r\n    transAmt: any;\r\n    balance: string;\r\n    oTpModel = new otpModel();\r\n    enableContinue: boolean = true;\r\n    showAccountNum : boolean = true;\r\n    showAccoutType : boolean = true;\r\n    curr: string;\r\n    transAmount: string;\r\n    currencyImage: any = \"\";\r\n    custID: any;\r\n    custHolderName: string;\r\n    qrData: any;\r\n    customerID: any;\r\n    appointmentId:any;\r\n    userName: string;\r\n    denomCodeArray: any[] = [\r\n      { key: 'count2000', value: 2000 },\r\n      { key: 'count500', value: 500 },\r\n      { key: 'count200', value: 200 },\r\n      { key: 'count100', value: 100 },\r\n      { key: 'count50', value: 50 },\r\n      { key: 'count20', value: 20 },\r\n      { key: 'count10', value: 10 },\r\n      { key: 'count1', value: 1 }\r\n  \r\n    ];\r\n    totalAmount: any;\r\n    transamount: any;\r\n    a: any;\r\n    branchNameFromLogin: string;\r\n    branchName: string;\r\n    arrayAccountBranch: any;\r\n    accBranch: any;\r\n    branchData: any;\r\n    trasactionBranches: any;\r\n    branch: any;\r\n    hideDetails:boolean=false;\r\n    totalTransAmount: number;\r\n    chargeDetails: any;\r\n    accountCurrency: any;\r\n    \r\n  \r\n    @ViewChild('cdForm') cdForm: NgForm;\r\n    // accountNoList: any[];\r\n    accountNoList = [];\r\n    selectedAccountInfo: any;\r\n    custValidation: string;\r\n    accountNumber: string;\r\n    custmerID: any;\r\n    phonenum: any;\r\n    validateStatus: string;\r\n    cashdepositValues: any;\r\n    cashdeposiform: any;\r\n    cashdepositType: any;\r\n    isLoading = false;\r\n    enableBtn: boolean = true;\r\n    enableBtn1: boolean = false;\r\n    accountNum1: any[];\r\n    filteredAccoun: any[];\r\n    accountDropdown: boolean = false;\r\n    flag1: boolean = false;\r\n    denomRequired: any;\r\n    qrBranchCode: any;\r\n    custNameFromLogin: string;\r\n    selected: string;\r\n    transactionId: any;\r\n    transactionStatus: any;\r\n    cashData: any;\r\n    transBranch: string;\r\n    constructor(\r\n      private router: Router,\r\n      private formBuilder: FormBuilder,\r\n      private dialogService: DialogService,\r\n      private apiService: ApiService,\r\n      private dialog: MatDialog,\r\n      private cdr:ChangeDetectorRef,\r\n  \r\n      private ls: LocalStoreService, private snack: MatSnackBar, private changeDef: ChangeDetectorRef) { }\r\n    ngOnInit(): void {\r\n      this.phoneNumber = localStorage.getItem(\"phonenumFromLogin\");\r\n      this.appointmentId = this.ls.getItem(\"TransactionType\");\r\n      this.transBranch=localStorage.getItem(\"TRANSACTIONBRANCH\") \r\n      this.custValidation = localStorage.getItem(\"customerValidation\");\r\n      this.custNameFromLogin = localStorage.getItem(\"FromLogin\");\r\n      if(this.custValidation == \"New Customer\"){\r\n        this.showAccountNum = false;\r\n        this.showAccoutType = false;\r\n      } \r\n      if(this.custNameFromLogin!=null){\r\n        this.showAccountNum=false;\r\n      } \r\n      this.qrData = JSON.parse(JSON.parse(localStorage.getItem('scannerData')));\r\n      console.log(\"QRData\", this.qrData);\r\n      this.cashdepositForm = this.formBuilder.group({\r\n        totalAmount: ['', Validators.required],\r\n        transactionId: ['', [Validators.required]],\r\n        customerId: ['', [Validators.required]],\r\n        accountType: ['', [Validators.required]],\r\n        accountNumber: ['', [Validators.required]],\r\n        holderName: ['', [Validators.required]],\r\n        accountCurrency: ['', [Validators.required]],\r\n        transactionCurrency: ['', [Validators.required]],\r\n        totalChargeAmount:['', [Validators.required]],\r\n        totalTransactionAmount:['',[Validators.required]],\r\n        transactionAmount: ['', [Validators.required, Validators.min(.1)]],\r\n        productCode: ['CHD', [Validators.required]],\r\n        tokenOrigin: ['Kiosk', [Validators.required]],\r\n        // audit\r\n        createdBy: ['', [Validators.required]],\r\n        createdTime: ['', [Validators.required]],\r\n        modifiedBy: ['', [Validators.required]],\r\n        modifiedTime: ['', [Validators.required]],\r\n        recordStatus: ['', [Validators.required]],\r\n        authStatus: ['', [Validators.required]],\r\n        version: ['', [Validators.required]],\r\n        accountBranch: ['', [Validators.required]],\r\n        transactionBranch: ['', [Validators.required]]\r\n      });\r\n      // this.cashdepositForm.get('transactionBranch').setValue(this.branchName);\r\n      if (this.phoneNumber  && this.custNameFromLogin==null && this.appointmentId==null) {\r\n        this.ifQRvariable = false;\r\n        this.gettingallTansactionDetails(this.phoneNumber);\r\n      }\r\n      // else {\r\n        if(this.qrData!=null){\r\n        this.ifQRvariable = true;\r\n        console.log(\"Account\", this.qrData.accountId);\r\n        this.cashdepositForm.controls.holderName.setValue(this.qrData.holderName);\r\n        this.cashdepositForm.controls.accountType.setValue(this.qrData.accountType);\r\n        this.cashdepositForm.controls.accountNumber.setValue(this.qrData.accountId);\r\n        this.getChargeDetails(this.qrData.accountId,'');\r\n        this.cashdepositForm.controls.transactionAmount.setValue(this.qrData.transactionAmount);\r\n        this.cashdepositForm.controls.accountCurrency.setValue(this.qrData.accountCurrency);\r\n        this.cashdepositForm.controls.transactionCurrency.setValue(this.qrData.transactionCurrency);\r\n        this.accountBal = this.qrData.accountBalance;\r\n        this.customerID = this.qrData.customerId;\r\n        this.currencyImage = 'currency-flag-' + this.qrData.accountCurrency.toLowerCase();\r\n        this.currencyImage = 'currency-flag-' + this.qrData.transactionCurrency.toLowerCase();\r\n        if(this.qrData.transactionBranch !=null && this.qrData.transactionBranch !=''){\r\n          this.cashdepositForm.controls.transactionBranch.setValue(this.qrData.transactionBranch);\r\n        }else{\r\n          this.cashdepositForm.controls.transactionBranch.setValue('Kasturi Nagar');\r\n        }\r\n        this.getAccountBranch();\r\n      }\r\n  \r\n      this.getCountrynameValues();\r\n      this.getAccountBranch();\r\n      this.gettransactionBranch(\"account_branch\");\r\n      this.getBankInformation(\"KN\")\r\n      if(this.appointmentId.data.appointmentId){\r\n        this.cashWithdrawlData();\r\n      }\r\n    }\r\n    fetchByAccountNum(accNum){\r\n      this.cashdepositForm.controls.transactionAmount.reset();\r\n      this.cashdepositForm.controls.totalTransactionAmount.setValue(this.cashdepositForm.controls.totalChargeAmount.value);\r\n      console.log(\"Account Numebr\",accNum);\r\n      // this.isLoading = true;\r\n      this.apiService.fetchByaccNum(accNum).subscribe((res: any) => {\r\n        console.log('Account Number Rsp', res);\r\n        this.getChargeDetails(accNum,'');\r\n        // this.isLoading = false;\r\n        this.userName = res.accHolderName;\r\n        this.accountBal = res.accBalance;\r\n        this.custmerID = res.customerId;\r\n        this.accountNumber = res.accountId;\r\n        this.accountCurrency = res.accountCurrency;\r\n        this.curr = getCurrencySymbol(res.currency, \"narrow\");\r\n        this.cashdepositForm.controls.accountType.setValue(res.accountType);\r\n        this.cashdepositForm.controls.accountCurrency.setValue(res.currency);\r\n        this.cashdepositForm.controls.accountBranch.setValue(res.accountBranch);\r\n        this.cashdepositForm.controls.holderName.setValue(this.userName); \r\n        this.getCountrynameValues();\r\n        this.currencyImage = 'currency-flag-'+res.currency.toLowerCase();\r\n        this.currencyImage = 'currency-flag-'+res.currency.toLowerCase();\r\n        this.cashdepositForm.controls.transactionCurrency.setValue(res.currency);\r\n        this.custAmountBal(accNum);\r\n        this.cashdepositForm.controls.transactionBranch.setValue('Kasturi Nagar');\r\n        this.apiService.fetchByaccDeatilsoncustId(res.customerId).subscribe((resp: any) => {\r\n          this.phonenum = resp[0].phoneNumber;\r\n          localStorage.setItem('otpPhoneNum', this.phonenum);\r\n        }) \r\n    });\r\n  \r\n  }\r\n    getCountrynameValues() {\r\n      this.apiService.getCountryValues().subscribe((allCountryValues: any) => {\r\n        this.countryValues = allCountryValues;\r\n      });\r\n    }\r\n  \r\n    gettransactionBranch(key: string) {\r\n      this.apiService.getTransactionBranch(key)\r\n        .subscribe(branches => {\r\n          console.log('branches :: ', branches);\r\n          this.trasactionBranches = branches;\r\n  \r\n        })\r\n    }\r\n    getAccountBranch() {\r\n      this.apiService.getBranchforKiosk()\r\n        .subscribe((data: any) => {\r\n          this.branchData = data;\r\n          console.log(this.branchData);\r\n          data.forEach((element, index) => {\r\n            this.branch = data[index].branchName;\r\n            console.log(this.branch);\r\n            // this.cashdepositForm.controls.accountBranch.setValue(this.branch);\r\n          });\r\n        });\r\n    }\r\n    onCountrySelected($event: Country): void {\r\n      console.log($event);\r\n    }\r\n    goToServiceScreens() {\r\n      if(this.appointmentId){\r\n      if(this.appointmentId.data.appointmentId){\r\n        this.router.navigateByUrl('/sessions/login');\r\n        localStorage.removeItem(\"FromLogin\")\r\n        localStorage.removeItem(\"TransactionType\")\r\n        localStorage.removeItem(\"customerId\")\r\n        localStorage.removeItem(\"phonenumFromLogin\")\r\n        localStorage.removeItem(\"customerValidation\")\r\n        localStorage.removeItem(\"otpPhoneNum\")\r\n        localStorage.removeItem(\"AccountBal\")\r\n        localStorage.removeItem(\"AccountNumber\")\r\n        localStorage.removeItem(\"ProductCode\")\r\n        localStorage.removeItem(\"tokenNumer\")\r\n        localStorage.removeItem(\"estimatedTiming\")\r\n        localStorage.removeItem(\"userId\")\r\n        localStorage.removeItem(\"scannerData\")\r\n        localStorage.removeItem(\"custholderName\")\r\n      }\r\n    }\r\n      else{\r\n        this.router.navigateByUrl('/others/kioskHome');\r\n      }\r\n      // this.dialogService.tokenGenerationDialog();\r\n    }\r\n  \r\n    gettingallTansactionDetails(phoneNumber) {\r\n      this.phoneNumber = localStorage.getItem(\"phonenumFromLogin\");\r\n      this.apiService.gettingTransactionDetails(this.phoneNumber).subscribe((allTransactionResp: any) => {\r\n        console.log(\"All Transaction Details\", allTransactionResp);\r\n        this.userName = (allTransactionResp.firstName ? allTransactionResp.firstName + ' ' : ' ') +\r\n          (allTransactionResp.middleName ? allTransactionResp.middleName + ' ' : ' ') +\r\n          (allTransactionResp.lastName ? allTransactionResp.lastName : ' ');\r\n        this.cashdepositForm.controls.holderName.setValue(this.userName);\r\n        this.custID = allTransactionResp.customerId;\r\n        // this.setBalance(allTransactionResp.custAccount);\r\n        this.custAccountData = allTransactionResp.custAccount;\r\n        this.accounttypeArray = [...this.custAccountData].filter(({ accountType }, index) =>\r\n          ![...this.custAccountData].map(obj => obj.accountType).includes(accountType, index + 1))\r\n          for(let j = 0; j < this.custAccountData.length; j++){\r\n            if(this.custAccountData[j].status == 'APPROVED'){\r\n              this.accountNoList.push(this.custAccountData[j]);  \r\n            }\r\n          }\r\n        if (this.custAccountData && this.accountNoList.length<=1) {\r\n          this.accountDropdown=false;\r\n          this.hideDetails=true;\r\n          const accTyp = allTransactionResp.custAccount[0].accountType;\r\n          this.cashdepositForm.controls.accountType.setValue(accTyp);\r\n          this.custAccountNumber(this.accountNoList[0]);\r\n        }else{\r\n          this.accountDropdown=true;\r\n          this.hideDetails=true;\r\n          const accTyp = allTransactionResp.custAccount[0].accountType;\r\n          this.cashdepositForm.controls.accountType.setValue(accTyp);\r\n          this.custAccountNumber(allTransactionResp.custAccount[0]); \r\n        }\r\n        \r\n      });\r\n    }\r\n    getAccountType(event:any){\r\n      this.cashdepositForm.controls.transactionAmount.reset();\r\n      this.cashdepositForm.controls.totalTransactionAmount.setValue(this.cashdepositForm.controls.totalChargeAmount.value);\r\n      this.accountNoList=[];\r\n      console.log(event);\r\n      this.isedit=false;\r\n      this.accountNum1=[...this.custAccountData].filter((accounNum,index)=>{\r\n        return accounNum.accountType==event;\r\n      });console.log(this.accountNum1)\r\n      // this.accountNoList=this.accountNum1\r\n      // this.accountNoList=this.accountNum1.map((acccount)=>\r\n      // {\r\n      //   return acccount.accountId\r\n      // })\r\n      for(let i = 0; i < this.custAccountData.length; i++){\r\n        if(this.custAccountData[i].status == 'APPROVED' && this.custAccountData[i].accountType == event){\r\n          this.accountNoList.push(this.custAccountData[i].accountId);    \r\n        }\r\n      }\r\n      console.log(this.accountNoList);\r\n      if(this.accountNoList.length<=1){\r\n        this.flag1=false; \r\n        // this.cashdepositForm.controls.accountNumber.setValue(this.accountNoList[0]);\r\n        this.getData(this.accountNoList[0])   \r\n      }\r\n      else{\r\n        this.getData(this.accountNoList[0]);\r\n        this.flag1=true;   \r\n      }\r\n      this.getChargeDetails(this.accountNoList[0],'');\r\n     \r\n    }\r\n  \r\n    getData(custNum){\r\n      this.hideDetails=true;\r\n      console.log(custNum)\r\n      let val=this.accountNum1.filter((value)=>{\r\n      return value.accountId==custNum}\r\n      )\r\n      console.log(val)\r\n      this.idList = [...this.custAccountData].filter(item => item.accountType === val[0].accountType);\r\n      this.cashdepositForm.controls.accountCurrency.setValue(val[0].accountCurrency);\r\n     this.cashdepositForm.controls.accountBranch.setValue(this.branch);\r\n     this.selected=val[0].accountCurrency;\r\n     this.curr = getCurrencySymbol(val[0].accountCurrency, \"narrow\");\r\n     this.cashdepositForm.controls.transactionCurrency.setValue(val[0].accountCurrency);\r\n    \r\n     this.currencyImage = 'currency-flag-'+val[0].accountCurrency.toLowerCase();\r\n     console.log('data :: ',this.idList[0]);\r\n    this.accountBal = this.idList[0].amount;\r\n    console.log(this.accountBal);\r\n    localStorage.setItem(\"AccountBal\",this.accountBal);\r\n    // this.cashdepositForm.controls.accountNumber.setValue(this.idList[0].accountId);\r\n    this.custAmountBal(this.idList[0].accountId);\r\n  \r\n    this.cashdepositForm.controls.accountNumber.setValue(val[0].accountId);\r\n    this.getChargeDetails(val[0].accountId,'')\r\n    this.cashdepositForm.controls.accountBranch.setValue(val[0].accountBranch);\r\n    }\r\n    custAccountNumber(custype) {\r\n      console.log(custype);\r\n      this.isedit = false;\r\n      this.idList = [...this.custAccountData].filter(item => item.accountType === custype.accountType);\r\n      const defaultId = this.idList ? this.idList[0] : null;\r\n      // this.cashdepositForm.controls.accountNumber.setValue(defaultId);\r\n  \r\n      this.accountNoList = [];\r\n      for (let i = 0; i < this.idList.length; i++) {\r\n        if (this.idList[i].status == 'APPROVED') {\r\n          this.accountNoList.push(this.idList[i].accountId)\r\n        }\r\n      }\r\n      console.log(this.accountNoList);\r\n      if(this.accountNoList.length<=1){\r\n        // this.cashwithdrawForm.controls.accountNumber.patchValue(this.accountNoList[0]);\r\n        this.flag1=false; \r\n        // this.getData(this.accountNoList[0]);\r\n        this.cashdepositForm.controls.accountNumber.setValue(this.accountNoList[0]);\r\n      }\r\n      else{\r\n        this.cashdepositForm.controls.accountNumber.setValue(this.accountNoList[0]);\r\n        this.flag1=true;   \r\n      }\r\n   \r\n      this.cashdepositForm.controls.accountCurrency.setValue(custype.accountCurrency);\r\n      this.cashdepositForm.controls.accountBranch.setValue(this.branch);\r\n      //this.cashdepositForm.controls.transactionAmount.setValue(custype.amount);\r\n      // this.cashdepositForm.controls.accountType.setValue(defaultId);\r\n      this.selected=custype.accountCurrency;\r\n      this.curr = getCurrencySymbol(custype.accountCurrency, \"narrow\");\r\n      // this.accountBal = this.idList[0].amount;\r\n      this.cashdepositForm.controls.transactionCurrency.setValue(custype.accountCurrency);\r\n      console.log(this.cashdepositForm.value.accountCurrency)\r\n      this.currencyImage = 'currency-flag-' + custype.accountCurrency.toLowerCase();\r\n      console.log(this.accountBal);\r\n      localStorage.setItem(\"AccountBal\", this.accountBal);\r\n     // this.cashdepositForm.controls.accountNumber.setValue(this.idList[0].accountId);\r\n      this.custAmountBal(this.accountNoList[0]);\r\n      this.cashdepositForm.controls.accountBranch.setValue(custype.accountBranch);\r\n      this.getChargeDetails(this.accountNoList[0],custype.amount);\r\n    }\r\n    custAmountBal(custNum) {\r\n      console.log(custNum);\r\n      var account = this.idList.filter(function (record) {\r\n        if (record.accountId == custNum) {\r\n          return record;\r\n        }\r\n      });\r\n      console.log(account);\r\n      this.accNum = account[0].accountId;\r\n      this.accountBal = account[0].amount;\r\n      this.selectedAccountInfo = account[0];\r\n      console.log(this.selectedAccountInfo);\r\n    }\r\n    setBalance(accountBalance, index = 0) {\r\n      this.accountBal = accountBalance[index].currentBalance ? accountBalance[index].currentBalance : null;\r\n    }\r\n    onSaveofcashDeposit(formData, type, cdForm) {\r\n      formData.transactionBranch = this.transBranch;\r\n      console.log(\"Data\",formData, type, cdForm )\r\n      if(this.qrData){\r\n        if(this.qrData.transactionBranch){\r\n          this.apiService.fetchBranchInfoByBranchName(this.qrData.transactionBranch).subscribe(response=>{\r\n            this.qrBranchCode=response;\r\n            \r\n          })\r\n        }\r\n      }\r\n      let denominationData: any = {};\r\n      let denominationDataArray: any[] = [];\r\n      if(this.denomRequired == 'yes'){\r\n      for (let i = 0; i < this.denomCodeArray.length; i++) {\r\n        if (cdForm.value[this.denomCodeArray[i].key]) {\r\n          // denominationData.transactionId = this.cashdepositFor;\r\n          denominationData.denominationKey = this.denomCodeArray[i].value;\r\n          denominationData.denominationValue = +cdForm.value[this.denomCodeArray[i].key];\r\n          denominationData.currency = this.cashdepositForm.value.transactionCurrency;\r\n          // denominationData.amountAvailiable = 15200 - (cdForm.value[this.denomCodeArray[i].key] * this.denomCodeArray[i].value);\r\n          denominationDataArray.push(denominationData);\r\n          console.log(denominationDataArray)\r\n          denominationData = {};\r\n        }\r\n      }\r\n    }\r\n      formData.tokenBranch = \"KN\";\r\n      if(this.qrData){\r\n        if(this.qrData.transactionBranch){\r\n          formData.tokenBranch = this.qrBranchCode.transactionBranch;\r\n        }\r\n      }\r\n      if (!this.ifQRvariable) {\r\n            this.accountNum = JSON.stringify(this.selectedAccountInfo.accountId);\r\n            formData.transactionCurrency = formData.transactionCurrency;\r\n            formData.accountNumber = this.selectedAccountInfo.accountId;;\r\n            formData.customerId = this.custID;\r\n            formData.productCode = this.productCode;\r\n            formData.tokenOrigin = this.tokenOrigin;\r\n            formData.accountBalance = this.accountBal;\r\n            // console.log(formData.transactionCurrency);\r\n            formData.transactionAmount = formData.transactionAmount.replace(/,/g, '');\r\n            formData.accountType = formData.accountType;\r\n            if(this.denomRequired == 'yes'){\r\n            formData.denomination = denominationDataArray;\r\n            }\r\n  \r\n            localStorage.setItem(\"AccountNumber\", this.accountNum);\r\n            localStorage.setItem(\"ProductCode\", this.productCode);\r\n      }\r\n      else {\r\n        // debugger;\r\n        formData.customerId = this.custID;\r\n        formData.accountType = formData.accountType;\r\n        formData.accountNumber = formData.accountNumber;\r\n        formData.holderName = formData.holderName;\r\n        formData.accountCurrency = formData.accountCurrency;\r\n        formData.transactionCurrency = formData.transactionCurrency;\r\n        // formData.transactionAmount = formData.transactionAmount.replace(/,/g, '');\r\n        formData.transactionAmount = formData.transactionAmount;\r\n        formData.productCode = this.productCode;\r\n        formData.tokenOrigin = this.tokenOrigin;\r\n        formData.accountBalance = this.accountBal;\r\n        if(this.denomRequired == 'yes'){\r\n        formData.denomination = denominationDataArray;\r\n        }\r\n      }\r\n      console.log(\"data::\",this.appointmentId)\r\n      if(this.appointmentId && this.appointmentId.data){\r\n        formData.transactionId = this.appointmentId.data.transactionId;\r\n        formData.transactionStatus = this.appointmentId.data.transactionStatus;\r\n      }\r\n      this.apiService.saveofCashDeposit(formData).subscribe(cashDepositResp => {\r\n        console.log(\"Response Success\", cashDepositResp);\r\n        this.cashDepositResponse = cashDepositResp;\r\n        this.tokenNum = this.cashDepositResponse.tokenNumber;\r\n        this.estimatedTime = this.cashDepositResponse.estimatedWaitTime;\r\n        localStorage.setItem(\"tokenNumer\", this.tokenNum);\r\n        localStorage.setItem(\"estimatedTiming\", this.estimatedTime);\r\n        this.enableContinue = false;\r\n        if (this.cashDepositResponse) {\r\n          this.dialogService.tokenGenerationDialog();\r\n        }\r\n      });\r\n    }\r\n    \r\n    // OTP And Save\r\n    getOTP(formData, type, cdForm){\r\n      this.cashdepositValues =formData;\r\n      this.cashdeposiform = type;\r\n      this.cashdepositType = cdForm;\r\n      this.oTpModel.source = 'customer';\r\n      this.oTpModel.source_key = 'mobile';\r\n      this.oTpModel.source_value = this.phonenum;\r\n      let amount= 50000;\r\n      let transamountwithoutcomma=this.cashdepositValues.transactionAmount.replace(/,/g, \"\");\r\n      console.log( transamountwithoutcomma);\r\n      if(transamountwithoutcomma > amount){\r\n        this.apiService.getOtp(this.oTpModel).subscribe(otpResp => {\r\n          if (otpResp) {\r\n            this.openDialogOTP(this.phonenum);\r\n            this.snack.open(\"An OTP has been sent to the Registered Mobile Number.\" , \"\", {\r\n              duration: 4000,\r\n              verticalPosition: 'top',\r\n              horizontalPosition: 'right'\r\n            });\r\n          }\r\n        })\r\n      }\r\n      else{\r\n        this.getOTPforSave( this.cashdepositValues,this.cashdeposiform,this.cashdepositType);\r\n      }\r\n    }\r\n    getOTPforSave(formData, type, cdForm){\r\n      formData.transactionBranch = this.transBranch;\r\n      let denominationData: any = {};\r\n      let denominationDataArray: any[] = [];\r\n      if(this.denomRequired == 'yes'){\r\n      for (let i = 0; i < this.denomCodeArray.length; i++) {\r\n        if (cdForm.value[this.denomCodeArray[i].key]) {\r\n          denominationData.denominationKey = this.denomCodeArray[i].value;\r\n          denominationData.denominationValue = +cdForm.value[this.denomCodeArray[i].key];\r\n          denominationData.currency = this.cashdepositForm.value.transactionCurrency;\r\n          // denominationData.amountAvailiable = 15200 - (cdForm.value[this.denomCodeArray[i].key] * this.denomCodeArray[i].value);\r\n          denominationDataArray.push(denominationData);\r\n          console.log(denominationDataArray)\r\n          denominationData = {};\r\n        }\r\n      }\r\n    }\r\n      if(this.custValidation == \"New Customer\"){\r\n        console.log(\"customer\",this.custmerID);\r\n       this.transactionId = localStorage.getItem('transactionId');\r\n       this.transactionStatus = localStorage.getItem('transactionStatus'); \r\n       this.accountNum = formData.accountNumber;\r\n       formData.customerId = this.custmerID?this.custmerID:0;\r\n       formData.accountType = formData.accountType;\r\n       formData.accountNumber = this.accountNumber;\r\n       formData.holderName = formData.holderName;\r\n       formData.accountCurrency = formData.accountCurrency;\r\n       formData.transactionCurrency = formData.transactionCurrency;\r\n       formData.transactionAmount = formData.transactionAmount.replace(/,/g, '');\r\n       formData.productCode = this.productCode;\r\n       formData.tokenOrigin = this.tokenOrigin;\r\n       formData.accountBalance = this.accountBal;\r\n       if(this.denomRequired == 'yes'){\r\n       formData.denomination = denominationDataArray;\r\n       }\r\n      }\r\n      formData.tokenBranch = \"KN\";\r\n      if(this.appointmentId && this.appointmentId.data){\r\n        formData.transactionId = this.appointmentId.data.transactionId;\r\n        formData.transactionStatus = this.appointmentId.data.transactionStatus;\r\n      }\r\n      formData.customerId = this.custmerID?this.custmerID:0;\r\n      formData.accountType = formData.accountType;\r\n      formData.accountNumber = this.accountNumber;\r\n      formData.holderName = formData.holderName;\r\n      formData.accountCurrency = formData.accountCurrency;\r\n      formData.transactionCurrency = formData.transactionCurrency;\r\n      formData.transactionAmount = formData.transactionAmount.replace(/,/g, '');\r\n      formData.productCode = this.productCode;\r\n      formData.tokenOrigin = this.tokenOrigin;\r\n      formData.accountBalance = this.accountBal;\r\n    console.log(formData.transactionId,formData.transactionStatus);\r\n    this.apiService.saveofCashDeposit(formData).subscribe(cashDepositResp => {\r\n    console.log(\"Response Success\", cashDepositResp);\r\n    this.cashDepositResponse = cashDepositResp;\r\n    this.tokenNum = this.cashDepositResponse.tokenNumber;\r\n    this.estimatedTime = this.cashDepositResponse.estimatedWaitTime;\r\n    localStorage.setItem(\"tokenNumer\", this.tokenNum);\r\n    localStorage.setItem(\"estimatedTiming\", this.estimatedTime);\r\n    this.enableContinue = false;\r\n    if (this.cashDepositResponse) {\r\n      this.dialogService.tokenGenerationDialog();\r\n    }\r\n  });   \r\n    }\r\n    openDialogOTP(numbr) {\r\n      const dialogRef = this.dialog.open(OtpVerifyComponent, {\r\n        data: { number: numbr, type: \"numbr\" },\r\n        disableClose: true,\r\n      });\r\n      dialogRef.afterClosed().subscribe(submit => {\r\n        if(submit){\r\n          this.getOTPforSave( this.cashdepositValues,this.cashdeposiform,this.cashdepositType);\r\n        }\r\n       });\r\n    }\r\n  \r\n    OnInput(event: any) {\r\n      this.transAmt = event.target.value;\r\n      console.log(event.target.value);\r\n      this.totalAmount = 0;\r\n      // comma separator using changeDetector\r\n      const savedInput = this.transAmount;\r\n      // this.transAmount = '';\r\n      // this.changeDef.detectChanges();\r\n      let lastCharIsPoint = false;\r\n      if (savedInput.charAt(savedInput.length - 1) === '.') {\r\n        lastCharIsPoint = true;\r\n      }\r\n      const num = savedInput.replace(/[^0-9.]/g, '');\r\n      this.transAmt = Number(num)||'';\r\n      this.transAmount = this.transAmt.toLocaleString('en-IN');\r\n      if (lastCharIsPoint) {\r\n        this.transAmount = this.transAmount.concat('.');\r\n      }\r\n      this.changeDef.detectChanges();\r\n  \r\n      this.balance= localStorage.getItem(\"AccountBal\");\r\n      if(parseFloat(this.balance) < parseFloat(this.transAmt)){\r\n        console.log(\"Bigger\")\r\n        this.snack.open(`Transaction Amount should not exceed than Account Balance`, 'OK', {\r\n          duration: 2000,\r\n          verticalPosition: 'top',\r\n          horizontalPosition: 'right'\r\n        });\r\n        this.enableContinue=false;\r\n      }\r\n      else{\r\n        this.enableContinue=true;\r\n      }\r\n      this.totalTransAmount=Number(this.transAmt) + Number(this.chargeDetails?this.chargeDetails[0].amount:'');\r\n      this.cashdepositForm.controls.totalTransactionAmount.setValue(this.totalTransAmount);\r\n      this.cdr.markForCheck();\r\n      this.cdr.detectChanges();\r\n    }\r\n  \r\n    clicked(event) {\r\n      console.log(event);\r\n    }\r\n  \r\n    addCurrencyImage(currency) {\r\n      return currency.toLowerCase();\r\n    }\r\n    onCountryChange(country) {\r\n      let currency = country.currencyCode;\r\n      this.currencyImage = 'currency-flag-' + currency.toLowerCase();\r\n    }\r\n  \r\n    accountCurrencyImage(accountCurrency) {\r\n      return accountCurrency ? 'currency-flag-' + accountCurrency.toLowerCase() : '';\r\n    }\r\n    omit_number(event) {\r\n      var key;\r\n      key = event.charCode;\r\n      return ((key > 47 && key < 58));\r\n    }\r\n    totalAmountValue(cdForm) {\r\n      this.a = this.cashdepositForm.value.transactionAmount;\r\n      this.a = this.a.replace(/\\,/g, ''); // 1125, but a string, so convert it to number\r\n      this.a = parseInt(this.a, 10);\r\n  \r\n      this.cashdepositForm.value.totalAmount =\r\n        ((cdForm.value.count2000 ? cdForm.value.count2000 * 2000 : 0) +\r\n          (cdForm.value.count500 ? cdForm.value.count500 * 500 : 0) +\r\n          (cdForm.value.count200 ? cdForm.value.count200 * 200 : 0) +\r\n          (cdForm.value.count100 ? cdForm.value.count100 * 100 : 0) +\r\n          (cdForm.value.count50 ? cdForm.value.count50 * 50 : 0) +\r\n          (cdForm.value.count20 ? cdForm.value.count20 * 20 : 0) +\r\n          (cdForm.value.count10 ? cdForm.value.count10 * 10 : 0) +\r\n          (cdForm.value.count1 ? cdForm.value.count1 * 1 : 0)\r\n        );\r\n      this.cashdepositForm.value.totalAmount = this.cashdepositForm.value.totalAmount;  \r\n      console.log(this.cashdepositForm.value.totalAmount)\r\n      console.log(this.cashdepositForm.value.transactionAmount);\r\n      this.transamount = this.cashdepositForm.value.transactionAmount;\r\n      this.totalAmount = this.cashdepositForm.value.totalAmount.toLocaleString(\"en-US\");\r\n      if (this.transamount != this.totalAmount) {\r\n        this.enableBtn = false;\r\n      } else {\r\n        this.enableBtn = true;\r\n      }\r\n  \r\n      if((this.transamount > this.totalAmount) || (this.transamount < this.totalAmount)){\r\n        this.enableBtn1 = true;\r\n      }\r\n      else{\r\n        this.enableBtn1 = false;\r\n      }\r\n  \r\n      this.cashdepositForm.controls.totalAmount.setValue(this.cashdepositForm.value.totalAmount);\r\n  \r\n    }\r\n    cashWithdrawlData(){\r\n      this.apiService.getAppointmentId(this.appointmentId.data.appointmentId).subscribe((resp : any)=> {\r\n        console.log(\"resp ::\",resp);\r\n        this.cashData=resp.data;\r\n        this.custID=resp.data.customerId;\r\n        this.ifQRvariable = true;\r\n        this.cashdepositForm.controls.accountType.setValue(resp.data.accountType);\r\n        this.cashdepositForm.controls.accountBranch.setValue(resp.data.accountBranch);\r\n        this.cashdepositForm.controls.accountNumber.setValue(resp.data.accountNumber);\r\n        this.getChargeDetails(resp.data.accountNumber,resp.data.transactionAmount);\r\n        this.cashdepositForm.controls.accountCurrency.setValue(resp.data.accountCurrency);\r\n        this.cashdepositForm.controls.transactionCurrency.setValue(resp.data.transactionCurrency);\r\n        this.cashdepositForm.controls.transactionAmount.setValue(resp.data.transactionAmount);\r\n        this.currencyImage = 'currency-flag-'+resp.data.accountCurrency.toLowerCase();\r\n        this.currencyImage = 'currency-flag-'+resp.data.transactionCurrency.toLowerCase();\r\n        console.log(\"amount::\",this.cashdepositForm.controls.transactionAmount.value)\r\n    \r\n    \r\n      });\r\n    }\r\n    getChargeDetails(accountId,amount){\r\n      this.apiService.fetchChargeDetails(accountId).subscribe(resp => {\r\n    console.log(resp);\r\n    this.chargeDetails=resp;\r\n    this.cashdepositForm.controls.totalChargeAmount.setValue(this.chargeDetails?this.chargeDetails[0].amount:'');\r\n      });\r\n      if(this.cashData){\r\n      setTimeout(() => {\r\n        this.totalTransAmount=Number(this.cashData.transactionAmount) + Number(this.chargeDetails[0].amount);\r\n        this.cashdepositForm.controls.totalTransactionAmount.setValue(this.totalTransAmount);\r\n      }, 1000);\r\n      this.cdr.markForCheck();\r\n      this.cdr.detectChanges();\r\n    }\r\n    else{\r\n      console.log(this.chargeDetails)\r\n      amount=0;\r\n      console.log(amount);\r\n      setTimeout(() => {\r\n        this.totalTransAmount=Number(amount) + Number(this.chargeDetails?this.chargeDetails[0].amount:'');\r\n        console.log(this.totalTransAmount);\r\n        this.cashdepositForm.controls.totalTransactionAmount.setValue(this.totalTransAmount);\r\n      }, 1000);\r\n      this.cdr.markForCheck();\r\n      this.cdr.detectChanges();\r\n    }\r\n  \r\n      // console.log(this.totalTransAmount);\r\n    \r\n    }\r\n    onclickofConfirm(cdForm) {\r\n      let denominationData: any = {};\r\n      let denominationDataArray: any[] = [];\r\n  \r\n      for (let i = 0; i < this.denomCodeArray.length; i++) {\r\n        if (cdForm.value[this.denomCodeArray[i].key]) {\r\n          // denominationData.transactionId = this.cashdepositFor;\r\n          denominationData.denominationKey = this.denomCodeArray[i].value;\r\n          denominationData.denominationValue = +cdForm.value[this.denomCodeArray[i].key];\r\n          denominationData.currency = this.cashDepositResponse.value.transactionCurrency;\r\n          // denominationData.amountAvailiable = 15200 - (cdForm.value[this.denomCodeArray[i].key] * this.denomCodeArray[i].value);\r\n          denominationDataArray.push(denominationData);\r\n          console.log(denominationDataArray)\r\n          denominationData = {};\r\n        }\r\n      }\r\n    }\r\n    getBankInformation(branchCode:any){\r\n      this.apiService.fetchBankInfoByBranchCode(branchCode).subscribe(resp => {\r\n        console.log(resp)\r\n        this.denomRequired = resp.denomRequired\r\n        if(resp.denomRequired == 'yes'){\r\n          this.enableBtn = false;\r\n          this.enableBtn1 = false;\r\n         }\r\n        \r\n      })\r\n    }\r\n    formatAmount(amount) {\r\n      if(amount){\r\n        return amount && amount.toString().split('.')[0].length > 3 ? amount.toString().substring(0,amount.toString().split('.')[0].length-3).replace(/\\B(?=(\\d{2})+(?!\\d))/g, \",\") + \",\" + amount.toString().substring(amount.toString().split('.')[0].length-3): amount.toString();\r\n       }\r\n    }\r\n  \r\n\r\n}\r\n","<div style=\"margin-top: -4%;\">\r\n    <div fxLayout=\"row\" fxLayoutGap=\"20px\" style=\"color: #000000;padding-left:5%\">\r\n       <mat-icon style=\"cursor: pointer;\" (click)=\"goToServiceScreens()\" >arrow_back</mat-icon><h1 style=\"font-weight: bold;\">Cash Deposit</h1>\r\n    </div>\r\n    <div  fxLayout=\"row wrap\" fxFlexFill  fxLayoutGap=\"1px\" fxLayoutAlign=\"center\" style=\"padding-left: 4%;\">\r\n          <form [formGroup]=\"cashdepositForm\" fxFlex=\"100%\">\r\n        <mat-card fxFlex=\"calc(33%-25px)\" fxLayout=\"column\">\r\n      \r\n            <mat-card-title class=accinfo style=\"font-size: 22px;color: #004C97;margin-left: 1%;\">Account Information</mat-card-title>\r\n            <mat-card fxFlex=\"calc(13%-25px)\" class=\"accountInfoCard\">\r\n             \r\n                <div fxLayoutGap=\"50px\" *ngIf=\"showAccountNum\">\r\n                    <mat-form-field appearance=\"outline\" style=\"border-radius: 12px;\" fxFlex=\"35%\" >\r\n                      <mat-label>Account Type*</mat-label>\r\n                      <!-- <input matInput type=\"text\" *ngIf=\"phoneNumber && !accountDropdown\"\r\n                      [readonly]=\"true\" class=\"full-width\" \r\n                      formControlName=\"accountType\">\r\n                      <mat-select *ngIf=\"phoneNumber && accountDropdown\"  formControlName=\"accountType\"\r\n                      (selectionChange)=\"getAccountType($event.value)\">\r\n                        <mat-option *ngFor=\"let type of accounttypeArray \"\r\n                        [value]=\"type.accountType\" >\r\n                        {{type.accountType}}\r\n                        </mat-option>\r\n                      </mat-select> -->\r\n                      <input \r\n                         matInput type=\"text\" *ngIf=\"phoneNumber && !accountDropdown\" [readonly]=\"true\"\r\n                         class=\"full-width\" formControlName=\"accountType\">\r\n                         <mat-select *ngIf=\"phoneNumber && accountDropdown\" formControlName=\"accountType\" \r\n                            (selectionChange)=\"getAccountType($event.value)\"\r\n                            style=\"background-color: #f9fafb;\"\r\n                            placeholder=\"Select Account Type\">\r\n                            <mat-option *ngFor=\"let type of accounttypeArray \"[value]=\"type.accountType\">{{type.accountType}}</mat-option>\r\n                        </mat-select>\r\n\r\n                    </mat-form-field>\r\n                    <mat-form-field appearance=\"outline\" style=\"border-radius: 12px;\" fxFlex=\"57%\">\r\n                      <mat-label>Account Number*</mat-label>\r\n                      <input matInput type=\"text\"  \r\n                        class=\"full-width\" formControlName=\"accountNumber\"\r\n                        (change)=\"fetchByAccountNum(cashdepositForm.get('accountNumber').value)\">\r\n                      <mat-select *ngIf=\"flag1\" formControlName=\"accountNumber\" (selectionChange)=\"fetchByAccountNum($event.value)\">\r\n                        <mat-option   *ngFor=\"let id of accountNoList \" [value]=\"id\">{{id}}</mat-option>\r\n                      </mat-select>\r\n\r\n                    </mat-form-field>\r\n                  </div>\r\n                  <div fxLayout=\"row wrap\"  fxLayoutGap=\"10%\" style=\"margin-left: 2%;\">\r\n                    <div fxLayout=\"column\" *ngIf=\"hideDetails\">\r\n                      <mat-hint class=\"totalAmount\">Holder Name\r\n                      </mat-hint>\r\n                      <p class=\"hint\">{{userName}}</p>\r\n                    </div>\r\n                    <div fxLayout=\"column\" *ngIf=\"hideDetails\">\r\n                      <mat-hint class=\"totalAmount\">Account Balance\r\n                      </mat-hint>\r\n                      <p class=\"hint\">{{curr }}{{formatAmount(accountBal)}}</p>\r\n                    </div>\r\n                    <div fxLayout=\"column\" *ngIf=\"hideDetails\">\r\n                      <mat-hint class=\"totalAmount\">Account Branch \r\n                      </mat-hint>\r\n                      <p class=\"hint\">Gayathri</p>\r\n                    </div>\r\n                    <div fxLayout=\"column\"  *ngIf=\"hideDetails\">\r\n                      <mat-hint class=\"totalAmount\">Account currency\r\n                      </mat-hint>\r\n                      <p class=\"hint\">Gayathri</p>\r\n                    </div>\r\n                  \r\n\r\n                  </div>\r\n                  <div fxLayoutGap=\"50px\" *ngIf=\"!showAccountNum\">\r\n                  \r\n                    <mat-form-field appearance=\"outline\" style=\"border-radius: 12px;\" fxFlex=\"57%\" >\r\n                      <mat-label>Account Number*</mat-label>\r\n                      <input type=\"text\"   formControlName=\"accountNumber\"\r\n                      (change)=\"fetchByAccountNum(cashdepositForm.get('accountNumber').value)\"\r\n                      placeholder=\"Account Number\" matInput>\r\n\r\n                    </mat-form-field>\r\n                    <mat-form-field appearance=\"outline\" style=\"border-radius: 12px;\" fxFlex=\"35%\">\r\n                      <mat-label>Account Type*</mat-label>\r\n                      <input matInput type=\"text\" [readonly]=\"true\" class=\"full-width\"\r\n                                                        formControlName=\"accountType\">\r\n\r\n                    </mat-form-field>\r\n                  </div>\r\n            </mat-card>\r\n<br>\r\n            <mat-card-title class=\"accinfo\">Transaction Information</mat-card-title>\r\n           \r\n                <div fxLayoutGap=\"50px\" style=\"margin-left: 1%;\">\r\n                    <mat-form-field appearance=\"outline\" style=\"border-radius: 12px;\" fxFlex=\"35%\" *ngIf=\"showAccountNum\">\r\n                      <mat-label>Transaction currency*</mat-label>\r\n                      <div fxFlex=\"25%\">\r\n                        <div class=\"currency-flag {{currencyImage}}\"></div>\r\n                    </div>\r\n                      <input matInput type=\"text\" *ngIf=\"!phoneNumber\"\r\n                      [readonly]=\"true\" formControlName=\"transactionCurrency\">\r\n                      <mat-select  formControlName=\"transactionCurrency\"\r\n                      *ngIf=\"phoneNumber\"  [disabled]=\"isedit\">\r\n                      <mat-option\r\n                      *ngFor=\"let country of countryValues; let i = index\"\r\n                      (click)=\"onCountryChange(country)\"\r\n                      [value]=\"country.currencyCode\">\r\n                      <div fxLayout=\"row wrap\">\r\n                          <div fxFlex=\"15%\">{{country.currencyCode}}</div>\r\n                          <div fxFlex=\"85%\">\r\n                              <div\r\n                                  class=\"currency-flag currency-flag-{{addCurrencyImage(country.currencyCode)}} alignImage\">\r\n                              </div>\r\n                          </div>\r\n                      </div>\r\n                  </mat-option>\r\n                        <!-- <mat-option  [value]=\"\" >\r\n                          Savings\r\n                        </mat-option> -->\r\n                      </mat-select>\r\n\r\n                    </mat-form-field>\r\n\r\n                    <mat-form-field appearance=\"outline\" style=\"border-radius: 12px;\" fxFlex=\"35%\" *ngIf=\"!showAccountNum\">\r\n                      <mat-label>Transaction currency*</mat-label>\r\n                      <div fxFlex=\"25%\">\r\n                        <div class=\"currency-flag {{currencyImage}}\"></div>\r\n                    </div>\r\n                      \r\n                    <mat-select formControlName=\"transactionCurrency\" placeholder=\"Select Transaction Currency\" >\r\n                                                                <mat-option\r\n                                                                    *ngFor=\"let country of countryValues; let i = index\"\r\n                                                                    (click)=\"onCountryChange(country)\"\r\n                                                                  \r\n                                                                    [value]=\"country.currencyCode\">\r\n                                                                    <div fxLayout=\"row wrap\">\r\n                                                                        <div fxFlex=\"15%\">{{country.currencyCode}}</div>\r\n                                                                        <div fxFlex=\"85%\">\r\n                                                                            <div\r\n                                                                                class=\"currency-flag currency-flag-{{addCurrencyImage(country.currencyCode)}} alignImage\">\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </mat-option>\r\n                                                            </mat-select>\r\n\r\n                    </mat-form-field>\r\n                    <mat-form-field appearance=\"outline\" style=\"border-radius: 12px;\" fxFlex=\"55%\" *ngIf=\"!showAccountNum\">\r\n                      <mat-label>Transaction amount *</mat-label>\r\n                      <input matInput #myRef [(ngModel)]=\"transAmount\"\r\n                      formControlName=\"transactionAmount\"\r\n                      [value]=\"transAmt | number: '2.'\" (keyup)=\"OnInput($event)\"\r\n                      (focus)=\"clicked($event)\">\r\n                      <mat-error\r\n                      *ngIf=\"cashdepositForm.get('transactionAmount').errors?.min\">\r\n                      Amount must be greater than zero\r\n                  </mat-error>\r\n                    </mat-form-field>\r\n                    <mat-form-field appearance=\"outline\" style=\"border-radius: 12px;\" fxFlex=\"55%\" *ngIf=\"showAccountNum\">\r\n                      <mat-label>Transaction amount *</mat-label>\r\n                      <input matInput type=\"text\" *ngIf=\"!phoneNumber\" [readonly]=\"true\"\r\n                                                        formControlName=\"transactionAmount\">\r\n                                                    <input matInput class=\"full-width\" *ngIf=\"phoneNumber\" #myRef\r\n                                                        [(ngModel)]=\"transAmount\" formControlName=\"transactionAmount\"\r\n                                                        [value]=\"transAmt | number: '1.'\" (keyup)=\"OnInput($event)\"\r\n                                                        (focus)=\"clicked($event)\" [readonly]=\"isedit\">\r\n                                                        <mat-error\r\n                                                        *ngIf=\"cashdepositForm.get('transactionAmount').errors?.min\">\r\n                                                        Amount must be greater than zero\r\n                                                    </mat-error>\r\n                    </mat-form-field>\r\n                 \r\n                  </div>\r\n                  <div fxLayout=\"row wrap\">\r\n                    <div fxLayout=\"column\" fxFlex=\"36%\">\r\n                      <mat-card >\r\n                        <input matInput readonly placeholder=\"Negotiated rate\">\r\n                    </mat-card>\r\n                        <p class=\"hint\">Exchange rate : 0.89</p>\r\n                    </div>\r\n                   \r\n\r\n                      <mat-card fxFlex=\"25%\" class=chargebox >\r\n                        <input matInput class=\"full-width\" readonly formControlName=\"totalChargeAmount\" placeholder=\"Total Charge Amount\">\r\n                      </mat-card>\r\n        \r\n                      <mat-card fxFlex=\"25%\"  fxLayout=\"row\" style=\"height:45%\">\r\n                        <input matInput type=\"text\" readonly onlyNumber formControlName=\"totalTransactionAmount\" placeholder=\"Total Charge Amount\">\r\n                          <div class=\"tooltip\">\r\n                            <img width=\"80%\"\r\n                        [src]=\"'assets/images/info.svg'\"/>\r\n                            <div class=\"tooltiptext\">\r\n                                <p class=\"totalAmount textcolor\" style=\"margin-top:10px; margin-bottom:6px\">Transaction Amount:{{cashdepositForm.get('transactionAmount').value}}</p>\r\n                                <p class=\"totalAmount textcolor\">Total Charge Amount:{{cashdepositForm.get('totalChargeAmount').value}} </p>\r\n                                <hr/>\r\n                                <p class=\"totalAmount textcolor\" style=\"margin-right:10px ;\">Total Transaction Amount:{{cashdepositForm.get('totalTransactionAmount').value}}</p>\r\n                            </div>\r\n                        </div>\r\n                      </mat-card>\r\n        \r\n                 \r\n                  </div>\r\n                \r\n               \r\n                  <!-- <div fxLayoutGap=\"50px\">\r\n                  \r\n                    <mat-form-field appearance=\"outline\" style=\"border-radius: 12px;\" fxFlex=\"55%\">\r\n                      <mat-label>Account Number*</mat-label>\r\n                      <input type=\"text\"\r\n                      placeholder=\"Account Number\" matInput>\r\n\r\n                    </mat-form-field>\r\n                    <mat-form-field appearance=\"outline\" style=\"border-radius: 12px;\" fxFlex=\"35%\">\r\n                      <mat-label>Account Type*</mat-label>\r\n                      <input type=\"text\"\r\n                      placeholder=\"Account Type\" matInput>\r\n\r\n                    </mat-form-field>\r\n                  </div> -->\r\n            <!-- </mat-card> -->\r\n        \r\n        </mat-card>\r\n\r\n        <mat-card fxFlex=\"30%\" *ngIf=\"(denomRequired == 'yes') && (cashdepositForm.get('transactionAmount').value > 0 || transAmt > 0)\">\r\n          <form #cdForm=\"ngForm\">\r\n          <mat-card-title style=\"font-size: 15px;color: #004C97;margin-left: 1%;\">Denomination</mat-card-title>\r\n          <div class=\"pH10 full-width\" id=\"denominationDiv\">\r\n            <div class=\"paddingclass\" fxLayoutAlign=\"center center\"\r\n                *ngIf=\"cashdepositForm.value.transactionCurrency == 'INR'\">\r\n                <div fxFlex=\"20%\">\r\n                    <p class=\"quantityClass text-small\">2000</p>\r\n                </div>\r\n                <div fxFlex=\"10%\">\r\n                    <p class=\"operationTypeClass text-small\">x</p>\r\n                </div>\r\n                <div fxFlex=\"70%\">\r\n                    <mat-card class=\"inputCard\">\r\n                        <div>\r\n                            <input class=\"full-width inputClass\" type=\"text\"\r\n                                (keyup)=\"totalAmountValue(cdForm)\" (keypress)=\"omit_number($event)\" matInput\r\n                                name=\"count2000\" ngModel #count2000>\r\n                        </div>\r\n                    </mat-card>\r\n                    <div class=\"pl10\">\r\n                        <mat-error *ngIf=\"denominationlimit && count2000.value > denominationLimit[2000]\">\r\n                            Please enter <= {{denominationLimit[2000]}} </mat-error>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"paddingclass\" fxLayoutAlign=\"start center\"\r\n                *ngIf=\"cashdepositForm.value.transactionCurrency == 'INR' || cashdepositForm.value.transactionCurrency == 'USD' || cashdepositForm.value.transactionCurrency == 'AED'\">\r\n                <div fxFlex=\"20%\">\r\n                    <p class=\"quantityClass text-small\">500</p>\r\n                </div>\r\n                <div fxFlex=\"10%\">\r\n                    <p class=\"operationTypeClass text-small\">x</p>\r\n                </div>\r\n                <div fxFlex=\"70%\">\r\n                    <mat-card class=\"inputCard\">\r\n                        <input class=\"full-width inputClass\" type=\"text\" (keyup)=\"totalAmountValue(cdForm)\"\r\n                            (keypress)=\"omit_number($event)\" matInput name=\"count500\" ngModel #count500>\r\n                    </mat-card>\r\n                    <div class=\"pl10\">\r\n                        <mat-error *ngIf=\"denominationlimit && count500.value > denominationLimit[500]\">\r\n                            Please enter <= {{denominationLimit[500]}} </mat-error>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"paddingclass\" fxLayoutAlign=\"start center\"\r\n                *ngIf=\"cashdepositForm.value.transactionCurrency == 'INR'\">\r\n                <div fxFlex=\"20%\">\r\n                    <p class=\"quantityClass text-small\">200</p>\r\n                </div>\r\n                <div fxFlex=\"10%\">\r\n                    <p class=\"operationTypeClass text-small\">x</p>\r\n                </div>\r\n                <div fxFlex=\"70%\">\r\n                    <mat-card class=\"inputCard\">\r\n                        <input class=\"full-width inputClass\" type=\"text\" (keyup)=\"totalAmountValue(cdForm)\"\r\n                            (keypress)=\"omit_number($event)\" matInput name=\"count200\" ngModel #count200>\r\n                    </mat-card>\r\n                    <div class=\"pl10\">\r\n                        <mat-error *ngIf=\"denominationlimit && count200.value > denominationLimit[200]\">\r\n                            Please enter <= {{denominationLimit[200]}} </mat-error>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"paddingclass\" fxLayoutAlign=\"start center\"\r\n                *ngIf=\"cashdepositForm.value.transactionCurrency == 'INR' || cashdepositForm.value.transactionCurrency == 'USD' || cashdepositForm.value.transactionCurrency == 'AED'\">\r\n                <div fxFlex=\"20%\">\r\n                    <p class=\"quantityClass text-small\">100</p>\r\n                </div>\r\n                <div fxFlex=\"10%\">\r\n                    <p class=\"operationTypeClass text-small\">x</p>\r\n                </div>\r\n                <div fxFlex=\"70%\">\r\n                    <mat-card class=\"inputCard\">\r\n                        <input class=\"full-width inputClass\" type=\"text\" (keyup)=\"totalAmountValue(cdForm)\"\r\n                            (keypress)=\"omit_number($event)\" matInput name=\"count100\" ngModel #count100>\r\n                    </mat-card>\r\n                    <div class=\"pl10\">\r\n                        <mat-error *ngIf=\"denominationlimit && count100.value > denominationLimit[100]\">\r\n                            Please enter <= {{denominationLimit[100]}} </mat-error>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"paddingclass\" fxLayoutAlign=\"start center\"\r\n                *ngIf=\"cashdepositForm.value.transactionCurrency== 'INR' || cashdepositForm.value.accountCurrency == 'USD'\">\r\n                <div fxFlex=\"20%\">\r\n                    <p class=\"quantityClass text-small\">50</p>\r\n                </div>\r\n                <div fxFlex=\"10%\">\r\n                    <p class=\"operationTypeClass text-small\">x</p>\r\n                </div>\r\n                <div fxFlex=\"70%\">\r\n                    <mat-card class=\"inputCard\">\r\n                        <input class=\"full-width inputClass\" type=\"text\" (keyup)=\"totalAmountValue(cdForm)\"\r\n                            (keypress)=\"omit_number($event)\" matInput name=\"count50\" ngModel #count50>\r\n                    </mat-card>\r\n                    <div class=\"pl10\">\r\n                        <mat-error *ngIf=\"denominationlimit && count50.value > denominationLimit[50]\">\r\n                            Please enter <= {{denominationLimit[50]}} </mat-error>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"paddingclass\" fxLayoutAlign=\"start center\"\r\n                *ngIf=\"cashdepositForm.value.transactionCurrency== 'INR'\">\r\n                <div fxFlex=\"20%\">\r\n                    <p class=\"quantityClass text-small\">20</p>\r\n                </div>\r\n                <div fxFlex=\"10%\">\r\n                    <p class=\"operationTypeClass text-small\">x</p>\r\n                </div>\r\n                <div fxFlex=\"70%\">\r\n                    <mat-card class=\"inputCard\">\r\n                        <input class=\"full-width inputClass\" type=\"text\" (keyup)=\"totalAmountValue(cdForm)\"\r\n                            (keypress)=\"omit_number($event)\" matInput name=\"count20\" ngModel #count20>\r\n                    </mat-card>\r\n                    <div class=\"pl10\">\r\n                        <mat-error *ngIf=\"denominationlimit && count20.value > denominationLimit[20]\">\r\n                            Please enter <= {{denominationLimit[20]}} </mat-error>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"paddingclass\" fxLayoutAlign=\"start center\"\r\n                *ngIf=\"cashdepositForm.value.transactionCurrency== 'INR'\">\r\n                <div fxFlex=\"20%\">\r\n                    <p class=\"quantityClass text-small\">10</p>\r\n                </div>\r\n                <div fxFlex=\"10%\">\r\n                    <p class=\"operationTypeClass text-small\">x</p>\r\n                </div>\r\n                <div fxFlex=\"70%\">\r\n                    <mat-card class=\"inputCard\">\r\n                        <input class=\"full-width inputClass\" type=\"text\" (keyup)=\"totalAmountValue(cdForm)\"\r\n                            (keypress)=\"omit_number($event)\" matInput name=\"count10\" ngModel #count10>\r\n                    </mat-card>\r\n                    <div class=\"pl10\">\r\n                        <mat-error *ngIf=\"denominationlimit && count10.value > denominationLimit[10]\">\r\n                            Please enter <= {{denominationLimit[10]}} </mat-error>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"paddingclass\" fxLayoutAlign=\"start center\"\r\n                *ngIf=\"cashdepositForm.value.transactionCurrency== 'INR' || cashdepositForm.value.transactionCurrency == 'USD' || cashdepositForm.value.transactionCurrency == 'AED'\">\r\n                <div fxFlex=\"20%\">\r\n                    <p class=\"quantityClass text-small\">1</p>\r\n                </div>\r\n                <div fxFlex=\"10%\">\r\n                    <p class=\"operationTypeClass text-small\">x</p>\r\n                </div>\r\n                <div fxFlex=\"70%\">\r\n                    <mat-card class=\"inputCard\">\r\n                        <input class=\"full-width inputClass\" type=\"text\" (keyup)=\"totalAmountValue(cdForm)\"\r\n                            (keypress)=\"omit_number($event)\" matInput name=\"count1\" ngModel #count10>\r\n                    </mat-card>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div fxLayout=\"row wrap\" class=\"pH10 full-width\">\r\n            <div fxFlex=\"53%\" fxFlex.xs=\"100%\">\r\n                <p class=\"totalAmount\">Total Amount</p>\r\n                <mat-card class=\"inputCard\">\r\n                    <input class=\"full-width inputClass\" [(ngModel)]=\"totalAmount\" matInput\r\n                        name=\"totalAmount\" readonly>\r\n                </mat-card>\r\n                <div class=\"pl10\" style=\"width: 150%;\">\r\n                    <mat-error *ngIf=\"enableBtn1\">\r\n                        Total amount should be equal to {{cashdepositForm.value.transactionAmount}}\r\n                    </mat-error>\r\n                </div>\r\n            </div>\r\n        </div>\r\n          </form>\r\n        </mat-card>\r\n         </form>\r\n\r\n    </div>\r\n</div>\r\n\r\n<div fxLayout=\"row\">\r\n  <div class=\"full-width\" fxLayoutAlign=\"center\" fxLayoutGap=\"20px\">\r\n    <button mat-flat-button class=\"backBtn\"\r\n    >Back</button>\r\n    <button mat-flat-button class=\"continueBtn\">Continue</button>\r\n      <button mat-flat-button class=\"exitBtn\"\r\n      >Exit</button>\r\n  </div>\r\n\r\n</div>\r\n","import { Country } from \"@angular-material-extensions/select-country\";\r\nimport { Component, Input, OnInit } from \"@angular/core\";\r\nimport {\r\n  FormGroup,\r\n  FormControl,\r\n  FormBuilder,\r\n  Validators,\r\n} from \"@angular/forms\";\r\nimport { Router } from \"@angular/router\";\r\nimport { ApiService } from \"app/shared/services/api.service\";\r\nimport {\r\n  DialogService,\r\n  TokenObjects,\r\n} from \"app/shared/services/Dialog/dialog.service\";\r\nimport { LocalStoreService } from \"app/shared/services/local-store.service\";\r\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\r\nimport { ChangeDetectorRef } from \"@angular/core\";\r\nimport { getCurrencySymbol } from \"@angular/common\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { OtpVerifyComponent } from \"../otp-verify/otp-verify.component\";\r\nimport { otpModel } from \"app/shared/models/otp.model\";\r\n\r\ninterface Testing {\r\n  value: string;\r\n  viewValue: string;\r\n}\r\n\r\n@Component({\r\n  selector: \"app-cheque-deposit\",\r\n  templateUrl: \"./cheque-deposit.component.html\",\r\n  styleUrls: [\"./cheque-deposit.component.scss\"],\r\n})\r\nexport class ChequeDepositComponent implements OnInit {\r\n  titleName: any = \"Cheque Deposit\";\r\n  chequedepositForm: FormGroup;\r\n  accType = [\"Savings\", \"Deposit\"];\r\n\r\n  customerName = [\"Jane Smith\", \"John Smith\"];\r\n  accountNum: any;\r\n  productCode = \"CQD\";\r\n  tokenOrigin = \"Kiosk\";\r\n  denomCodeArray: any[] = [\r\n    { key: \"count2000\", value: 2000 },\r\n    { key: \"count500\", value: 500 },\r\n    { key: \"count200\", value: 200 },\r\n    { key: \"count100\", value: 100 },\r\n    { key: \"count50\", value: 50 },\r\n    { key: \"count20\", value: 20 },\r\n    { key: \"count10\", value: 10 },\r\n    { key: \"count1\", value: 1 },\r\n  ];\r\n  totalAmount: any;\r\n  transamount: any;\r\n  a: any;\r\n  // @Input() title : any;\r\n  // countryFormControl = new FormControl();\r\n  defaultValue: Country = {\r\n    name: \"Deutschland\",\r\n    alpha2Code: \"DE\",\r\n    alpha3Code: \"DEU\",\r\n    numericCode: \"276\",\r\n    callingCode: \"+49\",\r\n  };\r\n  cashDepositResponse: any;\r\n  chequeDepositResponse: any;\r\n  accountBal: any;\r\n  phoneNumber: string;\r\n  errorStatus: number;\r\n  custAccountData: any;\r\n  countryValues: any;\r\n  accounttypeArray = [];\r\n  idList = [];\r\n  noList: any[];\r\n  accNum: any;\r\n  tokenObjects = new TokenObjects();\r\n  accNumber: any;\r\n  tokResponse: any;\r\n  tokenNum: any;\r\n  estimatedTime: any;\r\n  isedit: boolean = true;\r\n  transAmt: any;\r\n  balance: string;\r\n  enableContinue: boolean = true;\r\n  curr: string;\r\n  transAmount: string;\r\n  currencyImage: any = \"\";\r\n  custID: any;\r\n  qrData: any;\r\n  ifQRvariable = false;\r\n  customerID: any;\r\n  branchNameFromLogin: string;\r\n  branchName: string;\r\n  arrayAccountBranch: any;\r\n  trasactionBranches: any;\r\n  branchData: any;\r\n  branch: any;\r\n  userName: string;\r\n  // accountNoList: any[];\r\n  accountNoList = [];\r\n  selectedAccountInfo: any;\r\n  showAccountNum: boolean = true;\r\n  showAccoutType: boolean = true;\r\n  custValidation: string;\r\n  custNameFromLogin: string;\r\n  accountNumber: string;\r\n  custmerID: any;\r\n  phonenum: any;\r\n  oTpModel = new otpModel();\r\n  chequedepositValues: any;\r\n  chequedepositype: any;\r\n  chequedepositform: any;\r\n  accountNum1: any[];\r\n  filteredAccoun: any[];\r\n  accountDropdown: boolean = false;\r\n  flag1: boolean = false;\r\n  hideDetails: boolean = false;\r\n  qrBranchCode: any;\r\n  appointmentId: any;\r\n  totalTransAmount: number;\r\n  chargeDetails: any;\r\n  cashData: any;\r\n  accountCurrency: any;\r\n  transBranch: string;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private formBuilder: FormBuilder,\r\n    private dialogService: DialogService,\r\n    private apiService: ApiService,\r\n    private dialog: MatDialog,\r\n    private cdr: ChangeDetectorRef,\r\n    private ls: LocalStoreService,\r\n    private snack: MatSnackBar,\r\n    private changeDef: ChangeDetectorRef\r\n  ) {}\r\n  ngOnInit(): void {\r\n    this.phoneNumber = localStorage.getItem(\"phonenumFromLogin\");\r\n    this.appointmentId = this.ls.getItem(\"TransactionType\");\r\n    this.transBranch = localStorage.getItem(\"TRANSACTIONBRANCH\");\r\n\r\n    this.custValidation = localStorage.getItem(\"customerValidation\");\r\n    this.custNameFromLogin = localStorage.getItem(\"FromLogin\");\r\n    if (this.custValidation == \"New Customer\") {\r\n      this.showAccountNum = false;\r\n      this.showAccoutType = false;\r\n    }\r\n    if (this.custNameFromLogin != null) {\r\n      this.showAccountNum = false;\r\n    }\r\n    this.qrData = JSON.parse(JSON.parse(localStorage.getItem(\"scannerData\")));\r\n    console.log(\"QRData\", this.qrData);\r\n    this.chequedepositForm = this.formBuilder.group({\r\n      transactionId: [\"\", [Validators.required]],\r\n      chequeNumber: [\"\", [Validators.required]],\r\n      customerId: [\"\", [Validators.required]],\r\n      accountType: [\"\", [Validators.required]],\r\n      totalAmount: [\"\", Validators.required],\r\n      accountNumber: [\"\", [Validators.required]],\r\n      holderName: [\"\", [Validators.required]],\r\n      accountCurrency: [\"\", [Validators.required]],\r\n      transactionCurrency: [\"\", [Validators.required]],\r\n      totalChargeAmount: [\"\", [Validators.required]],\r\n      totalTransactionAmount: [\"\", [Validators.required]],\r\n      transactionAmount: [\"\", [Validators.required, Validators.min(0.1)]],\r\n      accountBalance: [\"\", [Validators.required]],\r\n      productCode: [\"CQD\", [Validators.required]],\r\n      tokenOrigin: [\"Kiosk\", [Validators.required]],\r\n      // audit\r\n      createdBy: [\"\", [Validators.required]],\r\n      createdTime: [\"\", [Validators.required]],\r\n      modifiedBy: [\"\", [Validators.required]],\r\n      modifiedTime: [\"\", [Validators.required]],\r\n      recordStatus: [\"\", [Validators.required]],\r\n      authStatus: [\"\", [Validators.required]],\r\n      version: [\"\", [Validators.required]],\r\n      accountBranch: [\"\", [Validators.required]],\r\n      transactionBranch: [\"\", [Validators.required]],\r\n    });\r\n    console.log(this.chequedepositForm.value);\r\n    if (\r\n      this.phoneNumber &&\r\n      this.custNameFromLogin == null &&\r\n      this.appointmentId == null\r\n    ) {\r\n      this.ifQRvariable = false;\r\n      this.gettingallTansactionDetails(this.phoneNumber);\r\n    }\r\n    // else{\r\n    if (this.qrData != null) {\r\n      this.ifQRvariable = true;\r\n      console.log(\"Account\", this.qrData.accountId);\r\n      this.chequedepositForm.controls.holderName.setValue(\r\n        this.qrData.holderName\r\n      );\r\n      this.chequedepositForm.controls.accountType.setValue(\r\n        this.qrData.accountType\r\n      );\r\n      this.chequedepositForm.controls.accountNumber.setValue(\r\n        this.qrData.accountId\r\n      );\r\n      this.getChargeDetails(this.qrData.accountId, \"\");\r\n      this.chequedepositForm.controls.transactionAmount.setValue(\r\n        this.qrData.transactionAmount\r\n      );\r\n      this.chequedepositForm.controls.accountCurrency.setValue(\r\n        this.qrData.accountCurrency\r\n      );\r\n      this.chequedepositForm.controls.transactionCurrency.setValue(\r\n        this.qrData.transactionCurrency\r\n      );\r\n      this.accountBal = this.qrData.accountBalance;\r\n      this.customerID = this.qrData.customerId;\r\n      this.currencyImage =\r\n        \"currency-flag-\" + this.qrData.accountCurrency.toLowerCase();\r\n      this.currencyImage =\r\n        \"currency-flag-\" + this.qrData.transactionCurrency.toLowerCase();\r\n      if (\r\n        this.qrData.transactionBranch != null &&\r\n        this.qrData.transactionBranch != \"\"\r\n      ) {\r\n        this.chequedepositForm.controls.transactionBranch.setValue(\r\n          this.qrData.transactionBranch\r\n        );\r\n      } else {\r\n        this.chequedepositForm.controls.transactionBranch.setValue(\r\n          \"Kasturi Nagar\"\r\n        );\r\n      }\r\n      this.getAccountBranch();\r\n    }\r\n\r\n    this.getCountrynameValues();\r\n    this.getAccountBranch();\r\n    this.gettransactionBranch(\"account_branch\");\r\n    if (this.appointmentId.data.appointmentId) {\r\n      this.cashWithdrawlData();\r\n    }\r\n  }\r\n  fetchByAccountNum(accNum) {\r\n    this.chequedepositForm.controls.transactionAmount.reset();\r\n    this.chequedepositForm.controls.totalTransactionAmount.setValue(\r\n      this.chequedepositForm.controls.totalChargeAmount.value\r\n    );\r\n    this.chequedepositForm.controls.chequeNumber.reset();\r\n    console.log(\"Account Numebr\", accNum);\r\n    this.apiService.fetchByaccNum(accNum).subscribe((res: any) => {\r\n      console.log(\"Account Number Rsp\", res);\r\n      this.getChargeDetails(accNum, \"\");\r\n      this.userName = res.accHolderName;\r\n      this.accountBal = res.accBalance;\r\n      this.custmerID = res.customerId;\r\n      this.accountNumber = res.accountId;\r\n      this.accountCurrency = res.accountCurrency;\r\n      this.curr = getCurrencySymbol(res.currency, \"narrow\");\r\n      this.chequedepositForm.controls.accountType.setValue(res.accountType);\r\n      this.chequedepositForm.controls.accountCurrency.setValue(res.currency);\r\n      this.chequedepositForm.controls.accountBranch.setValue(res.accountBranch);\r\n      this.chequedepositForm.controls.holderName.setValue(this.userName);\r\n      this.currencyImage = \"currency-flag-\" + res.currency.toLowerCase();\r\n      this.currencyImage = \"currency-flag-\" + res.currency.toLowerCase();\r\n      this.getCountrynameValues();\r\n      this.chequedepositForm.controls.transactionCurrency.setValue(\r\n        res.currency\r\n      );\r\n      this.custAmountBal(accNum);\r\n      this.chequedepositForm.controls.transactionBranch.setValue(\r\n        \"Kasturi Nagar\"\r\n      );\r\n      this.apiService\r\n        .fetchByaccDeatilsoncustId(res.customerId)\r\n        .subscribe((resp: any) => {\r\n          this.phonenum = resp[0].phoneNumber;\r\n          localStorage.setItem(\"otpPhoneNum\", this.phonenum);\r\n        });\r\n    });\r\n  }\r\n  getOTP(formData, type, cdForm) {\r\n    this.chequedepositValues = formData;\r\n    this.chequedepositype = type;\r\n    this.chequedepositform = cdForm;\r\n    this.oTpModel.source = \"customer\";\r\n    this.oTpModel.source_key = \"mobile\";\r\n    this.oTpModel.source_value = this.phonenum;\r\n    let amount = 50000;\r\n    let transamountwithoutcomma = this.chequedepositValues.transactionAmount.replace(\r\n      /,/g,\r\n      \"\"\r\n    );\r\n    console.log(transamountwithoutcomma);\r\n    if (transamountwithoutcomma > amount) {\r\n      this.apiService.getOtp(this.oTpModel).subscribe((otpResp) => {\r\n        if (otpResp) {\r\n          this.openDialogOTP(this.phonenum);\r\n          this.snack.open(\r\n            \"An OTP has been sent to the Registered Mobile Number.\",\r\n            \"\",\r\n            {\r\n              duration: 4000,\r\n              verticalPosition: \"top\",\r\n              horizontalPosition: \"right\",\r\n            }\r\n          );\r\n        }\r\n      });\r\n    } else {\r\n      this.getOTPforSave(\r\n        this.chequedepositValues,\r\n        this.chequedepositype,\r\n        this.chequedepositform\r\n      );\r\n    }\r\n  }\r\n  openDialogOTP(numbr) {\r\n    const dialogRef = this.dialog.open(OtpVerifyComponent, {\r\n      data: { number: numbr, type: \"numbr\" },\r\n      disableClose: true,\r\n    });\r\n    dialogRef.afterClosed().subscribe((submit) => {\r\n      if (submit) {\r\n        this.getOTPforSave(\r\n          this.chequedepositValues,\r\n          this.chequedepositype,\r\n          this.chequedepositform\r\n        );\r\n      }\r\n    });\r\n  }\r\n  getOTPforSave(formData, type, cdForm) {\r\n    formData.transactionBranch = this.transBranch;\r\n    if (this.custValidation == \"New Customer\") {\r\n      console.log(\"customer\", this.custmerID);\r\n      this.accountNum = formData.accountNumber;\r\n      formData.customerId = this.custmerID ? this.custmerID : 0;\r\n      formData.accountType = formData.accountType;\r\n      formData.accountNumber = this.accountNumber;\r\n      formData.holderName = formData.holderName;\r\n      formData.accountCurrency = formData.accountCurrency;\r\n      formData.transactionCurrency = formData.transactionCurrency;\r\n      formData.transactionAmount = formData.transactionAmount.replace(/,/g, \"\");\r\n      formData.productCode = this.productCode;\r\n      formData.tokenOrigin = this.tokenOrigin;\r\n      formData.accountBalance = this.accountBal;\r\n    }\r\n    formData.tokenBranch = \"KN\";\r\n    if (this.appointmentId && this.appointmentId.data) {\r\n      formData.transactionId = this.appointmentId.data.transactionId;\r\n      formData.transactionStatus = this.appointmentId.data.transactionStatus;\r\n    }\r\n    formData.customerId = this.custmerID ? this.custmerID : 0;\r\n    formData.accountType = formData.accountType;\r\n    formData.accountNumber = this.accountNumber;\r\n    formData.holderName = formData.holderName;\r\n    formData.accountCurrency = formData.accountCurrency;\r\n    formData.transactionCurrency = formData.transactionCurrency;\r\n    formData.transactionAmount = formData.transactionAmount.replace(/,/g, \"\");\r\n    formData.productCode = this.productCode;\r\n    formData.tokenOrigin = this.tokenOrigin;\r\n    formData.accountBalance = this.accountBal;\r\n    this.apiService.saveofCashDeposit(formData).subscribe((cashDepositResp) => {\r\n      console.log(\"Response Success\", cashDepositResp);\r\n      this.cashDepositResponse = cashDepositResp;\r\n      this.tokenNum = this.cashDepositResponse.tokenNumber;\r\n      this.estimatedTime = this.cashDepositResponse.estimatedWaitTime;\r\n      localStorage.setItem(\"tokenNumer\", this.tokenNum);\r\n      localStorage.setItem(\"estimatedTiming\", this.estimatedTime);\r\n      this.enableContinue = false;\r\n      if (this.cashDepositResponse) {\r\n        this.dialogService.tokenGenerationDialog();\r\n      }\r\n    });\r\n  }\r\n  _keyPress(event: any) {\r\n    const pattern = /[0-9 a-z A-Z]/;\r\n    let inputChar = String.fromCharCode(event.charCode);\r\n    if (!pattern.test(inputChar)) {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n  gettransactionBranch(key: string) {\r\n    this.apiService.getTransactionBranch(key).subscribe((branches) => {\r\n      console.log(\"branches :: \", branches);\r\n      this.trasactionBranches = branches;\r\n    });\r\n  }\r\n\r\n  getAccountBranch() {\r\n    this.apiService.getBranchforKiosk().subscribe((data: any) => {\r\n      this.branchData = data;\r\n      console.log(this.branchData);\r\n      data.forEach((element, index) => {\r\n        this.branch = data[index].branchName;\r\n        console.log(this.branch);\r\n        // this.chequedepositForm.controls.accountBranch.setValue(this.branch);\r\n      });\r\n    });\r\n  }\r\n  getCountrynameValues() {\r\n    this.apiService.getCountryValues().subscribe((allCountryValues: any) => {\r\n      this.countryValues = allCountryValues;\r\n      console.log(this.countryValues);\r\n    });\r\n  }\r\n\r\n  onCountrySelected($event: Country): void {\r\n    console.log($event);\r\n  }\r\n  goToServiceScreens() {\r\n    if (this.appointmentId) {\r\n      if (this.appointmentId.data.appointmentId) {\r\n        this.router.navigateByUrl(\"/sessions/login\");\r\n        localStorage.removeItem(\"FromLogin\");\r\n        localStorage.removeItem(\"TransactionType\");\r\n        localStorage.removeItem(\"customerId\");\r\n        localStorage.removeItem(\"phonenumFromLogin\");\r\n        localStorage.removeItem(\"customerValidation\");\r\n        localStorage.removeItem(\"otpPhoneNum\");\r\n        localStorage.removeItem(\"AccountBal\");\r\n        localStorage.removeItem(\"AccountNumber\");\r\n        localStorage.removeItem(\"ProductCode\");\r\n        localStorage.removeItem(\"tokenNumer\");\r\n        localStorage.removeItem(\"estimatedTiming\");\r\n        localStorage.removeItem(\"userId\");\r\n        localStorage.removeItem(\"scannerData\");\r\n        localStorage.removeItem(\"custholderName\");\r\n      }\r\n    } else {\r\n      this.router.navigateByUrl(\"/others/kioskHome\");\r\n    }\r\n  }\r\n  goToAuthenticate() {\r\n    this.dialogService.authenticationDialog();\r\n  }\r\n  gettingallTansactionDetails(phoneNumber) {\r\n    this.phoneNumber = localStorage.getItem(\"phonenumFromLogin\");\r\n    this.apiService\r\n      .gettingTransactionDetails(this.phoneNumber)\r\n      .subscribe((allTransactionResp: any) => {\r\n        console.log(\"All Transaction Details\", allTransactionResp);\r\n        this.userName =\r\n          (allTransactionResp.firstName\r\n            ? allTransactionResp.firstName + \" \"\r\n            : \" \") +\r\n          (allTransactionResp.middleName\r\n            ? allTransactionResp.middleName + \" \"\r\n            : \" \") +\r\n          (allTransactionResp.lastName ? allTransactionResp.lastName : \" \");\r\n        this.chequedepositForm.controls.holderName.setValue(this.userName);\r\n        this.custID = allTransactionResp.customerId;\r\n        // this.setBalance(allTransactionResp.custAccount);\r\n        this.custAccountData = allTransactionResp.custAccount;\r\n        this.accounttypeArray = [...this.custAccountData].filter(\r\n          ({ accountType }, index) =>\r\n            ![...this.custAccountData]\r\n              .map((obj) => obj.accountType)\r\n              .includes(accountType, index + 1)\r\n        );\r\n        for (let j = 0; j < this.custAccountData.length; j++) {\r\n          if (this.custAccountData[j].status == \"APPROVED\") {\r\n            this.accountNoList.push(this.custAccountData[j]);\r\n          }\r\n        }\r\n        if (this.custAccountData && this.accountNoList.length <= 1) {\r\n          this.accountDropdown = false;\r\n          this.hideDetails = true;\r\n          const accTyp = allTransactionResp.custAccount[0].accountType;\r\n          this.chequedepositForm.controls.accountType.setValue(accTyp);\r\n          this.custAccountNumber(this.accountNoList[0]);\r\n        } else {\r\n          this.accountDropdown = true;\r\n          this.hideDetails = true;\r\n          const accTyp = allTransactionResp.custAccount[0].accountType;\r\n          this.chequedepositForm.controls.accountType.setValue(accTyp);\r\n          this.custAccountNumber(allTransactionResp.custAccount[0]);\r\n        }\r\n      });\r\n  }\r\n  getAccountType(event: any) {\r\n    this.chequedepositForm.controls.transactionAmount.reset();\r\n    this.chequedepositForm.controls.totalTransactionAmount.setValue(\r\n      this.chequedepositForm.controls.totalChargeAmount.value\r\n    );\r\n    this.chequedepositForm.controls.chequeNumber.reset();\r\n    this.accountNoList = [];\r\n    this.isedit = false;\r\n    this.accountNum1 = [...this.custAccountData].filter((accounNum, index) => {\r\n      return accounNum.accountType == event;\r\n    });\r\n    console.log(this.accountNum1);\r\n    // this.accountNoList=this.accountNum1\r\n    // this.accountNoList=this.accountNum1.map((acccount)=>\r\n    // {\r\n    //   return acccount.accountId\r\n    // })\r\n    for (let i = 0; i < this.custAccountData.length; i++) {\r\n      if (\r\n        this.custAccountData[i].status == \"APPROVED\" &&\r\n        this.custAccountData[i].accountType == event\r\n      ) {\r\n        this.accountNoList.push(this.custAccountData[i].accountId);\r\n      }\r\n    }\r\n    console.log(this.accountNoList);\r\n    if (this.accountNoList.length <= 1) {\r\n      this.flag1 = false;\r\n      this.chequedepositForm.controls.accountNumber.setValue(\r\n        this.accountNoList[0]\r\n      );\r\n      this.getData(this.accountNoList[0]);\r\n    } else {\r\n      this.flag1 = true;\r\n      this.getData(this.accountNoList[0]);\r\n    }\r\n    this.getChargeDetails(this.accountNoList[0], \"\");\r\n  }\r\n  custAccountNumber(custype) {\r\n    this.isedit = false;\r\n    this.idList = [...this.custAccountData].filter(\r\n      (item) => item.accountType === custype.accountType\r\n    );\r\n    const defaultId = this.idList ? this.idList[0] : null;\r\n\r\n    this.accountNoList = [];\r\n    for (let i = 0; i < this.idList.length; i++) {\r\n      if (this.idList[i].status == \"APPROVED\") {\r\n        this.accountNoList.push(this.idList[i].accountId);\r\n      }\r\n    }\r\n    console.log(this.accountNoList);\r\n    if (this.accountNoList.length <= 1) {\r\n      // this.cashwithdrawForm.controls.accountNumber.patchValue(this.accountNoList[0]);\r\n      this.flag1 = false;\r\n      // this.getData(this.accountNoList[0]);\r\n      this.chequedepositForm.controls.accountNumber.setValue(\r\n        this.accountNoList[0]\r\n      );\r\n    } else {\r\n      this.chequedepositForm.controls.accountNumber.setValue(\r\n        this.accountNoList[0]\r\n      );\r\n      this.flag1 = true;\r\n    }\r\n\r\n    //  this.chequedepositForm.controls.accountNumber.setValue(defaultId);\r\n    this.chequedepositForm.controls.accountCurrency.setValue(\r\n      custype.accountCurrency\r\n    );\r\n    this.chequedepositForm.controls.accountBranch.setValue(this.branch);\r\n    //this.chequedepositForm.controls.transactionAmount.setValue(custype.amount);\r\n    //  this.chequedepositForm.controls.accountType.setValue(defaultId);\r\n    this.curr = getCurrencySymbol(custype.accountCurrency, \"narrow\");\r\n    this.chequedepositForm.controls.transactionCurrency.setValue(\r\n      custype.accountCurrency\r\n    );\r\n\r\n    this.currencyImage =\r\n      \"currency-flag-\" + custype.accountCurrency.toLowerCase();\r\n    //  this.accountBal = this.idList[0].amount;\r\n    console.log(this.accountBal);\r\n    localStorage.setItem(\"AccountBal\", this.accountBal);\r\n    //  this.chequedepositForm.controls.accountNumber.setValue(this.idList[0].accountId);\r\n    this.custAmountBal(this.accountNoList[0]);\r\n    this.chequedepositForm.controls.accountBranch.setValue(\r\n      custype.accountBranch\r\n    );\r\n    this.getChargeDetails(this.accountNoList[0], custype.amount);\r\n  }\r\n  getData(custNum) {\r\n    this.hideDetails = true;\r\n    console.log(custNum);\r\n    let val = this.accountNum1.filter((value) => {\r\n      return value.accountId == custNum;\r\n    });\r\n    console.log(val);\r\n    this.idList = [...this.custAccountData].filter(\r\n      (item) => item.accountType === val[0].accountType\r\n    );\r\n    this.chequedepositForm.controls.accountCurrency.setValue(\r\n      val[0].accountCurrency\r\n    );\r\n    this.chequedepositForm.controls.accountBranch.setValue(this.branch);\r\n    this.curr = getCurrencySymbol(val[0].accountCurrency, \"narrow\");\r\n    this.curr = getCurrencySymbol(val[0].accountCurrency, \"narrow\");\r\n    this.chequedepositForm.controls.transactionCurrency.setValue(\r\n      val[0].accountCurrency\r\n    );\r\n\r\n    this.currencyImage =\r\n      \"currency-flag-\" + val[0].accountCurrency.toLowerCase();\r\n    console.log(\"data :: \", this.idList[0]);\r\n    this.accountBal = this.idList[0].amount;\r\n\r\n    localStorage.setItem(\"AccountBal\", this.accountBal);\r\n    this.chequedepositForm.controls.accountNumber.setValue(\r\n      this.idList[0].accountId\r\n    );\r\n    this.custAmountBal(this.idList[0].accountId);\r\n    this.chequedepositForm.controls.accountNumber.setValue(val[0].accountId);\r\n    this.chequedepositForm.controls.accountBranch.setValue(\r\n      val[0].accountBranch\r\n    );\r\n    this.getChargeDetails(val[0].accountId, \"\");\r\n  }\r\n\r\n  custAmountBal(custNum) {\r\n    console.log(custNum);\r\n    var account = this.idList.filter(function (record) {\r\n      if (record.accountId == custNum) {\r\n        return record;\r\n      }\r\n    });\r\n    console.log(account);\r\n    this.accNum = account[0].accountId;\r\n    this.accountBal = account[0].amount;\r\n    this.selectedAccountInfo = account[0];\r\n  }\r\n  setBalance(accountBalance, index = 0) {\r\n    this.accountBal = accountBalance[index].currentBalance\r\n      ? accountBalance[index].currentBalance\r\n      : null;\r\n  }\r\n  onSaveofchequeDeposit(formData, type) {\r\n    formData.transactionBranch = this.transBranch;\r\n    formData.tokenBranch = \"KN\";\r\n    if (this.qrData) {\r\n      if (this.qrData.transactionBranch) {\r\n        this.apiService\r\n          .fetchBranchInfoByBranchName(this.qrData.transactionBranch)\r\n          .subscribe((response) => {\r\n            this.qrBranchCode = response;\r\n          });\r\n      }\r\n    }\r\n    if (!this.ifQRvariable) {\r\n      console.log(\"chequedepositData\", formData);\r\n      this.accountNum = JSON.stringify(this.selectedAccountInfo.accountId);\r\n      console.log(\"this.accountNum \", this.accountNum);\r\n      localStorage.setItem(\"AccountNumber\", this.accountNum);\r\n      localStorage.setItem(\"ProductCode\", this.productCode);\r\n      formData.tokenBranch = \"KN\";\r\n      formData.customerId = this.custID;\r\n      formData.transactionCurrency = formData.transactionCurrency;\r\n      formData.transactionAmount = formData.transactionAmount.replace(/,/g, \"\");\r\n      formData.accountNumber = this.selectedAccountInfo.accountId;\r\n      formData.accountType = formData.accountType;\r\n      formData.productCode = this.productCode;\r\n      formData.tokenOrigin = this.tokenOrigin;\r\n      formData.accountBalance = this.accountBal;\r\n    } else {\r\n      console.log(formData);\r\n      formData.customerId = this.custID;\r\n      formData.accountType = formData.accountType;\r\n      formData.accountNumber = formData.accountNumber;\r\n      formData.holderName = formData.holderName;\r\n      formData.accountCurrency = formData.accountCurrency;\r\n      formData.transactionCurrency = formData.transactionCurrency;\r\n      formData.transactionAmount = formData.transactionAmount;\r\n      formData.totalAmount = formData.totalAmount;\r\n      formData.productCode = this.productCode;\r\n      formData.tokenOrigin = this.tokenOrigin;\r\n      formData.accountBalance = this.accountBal;\r\n      formData.transactionId = formData.transactionId;\r\n      formData.appointmentId = formData.appointmentId;\r\n    }\r\n    if (this.qrData) {\r\n      if (this.qrData.transactionBranch) {\r\n        formData.tokenBranch = this.qrBranchCode.transactionBranch;\r\n      }\r\n    }\r\n\r\n    if (this.appointmentId && this.appointmentId.data) {\r\n      formData.transactionId = this.appointmentId.data.transactionId;\r\n      formData.transactionStatus = this.appointmentId.data.transactionStatus;\r\n    }\r\n    console.log(formData.transactionId, formData.transactionStatus);\r\n    this.apiService\r\n      .saveofCashDeposit(formData)\r\n      .subscribe((chequeDepositResp) => {\r\n        console.log(\" Response Success\", chequeDepositResp);\r\n        this.chequeDepositResponse = chequeDepositResp;\r\n        this.tokenNum = this.chequeDepositResponse.tokenNumber;\r\n        this.estimatedTime = this.chequeDepositResponse.estimatedWaitTime;\r\n        localStorage.setItem(\"tokenNumer\", this.tokenNum);\r\n        localStorage.setItem(\"estimatedTiming\", this.estimatedTime);\r\n        this.enableContinue = false;\r\n        if (this.chequeDepositResponse) {\r\n          this.dialogService.tokenGenerationDialog();\r\n        }\r\n      });\r\n    //   this.tokenObjects.productCode = this.productCode;\r\n    //   this.tokenObjects.accountNumber = formData.accountNumber;\r\n    //   if(this.tokenObjects.productCode !== null || this.tokenObjects.accountNumber !==null){\r\n    //   this.apiService.generateToken(this.tokenObjects).subscribe(tokenResp=>{\r\n    //     console.log( \"Token Generated\", tokenResp);\r\n    //     this.tokResponse = tokenResp;\r\n    //     if(this.tokResponse){\r\n    //       this.tokenNum = this.tokResponse.tokenNumber;\r\n    //       this.estimatedTime = this.tokResponse.estimatedWaitTime;\r\n    //       localStorage.setItem(\"tokenNumer\",this.tokenNum);\r\n    //       localStorage.setItem(\"estimatedTiming\",this.estimatedTime);\r\n    //       formData.tokenNo = this.tokenNum;\r\n    //       formData.customerId = this.ls.getItem(\"customerId\");\r\n    //       this.apiService.saveofCashDeposit(formData).subscribe(chequeDepositResp=>{\r\n    //         console.log(\" Response Success\",chequeDepositResp);\r\n    //         this.chequeDepositResponse = chequeDepositResp;\r\n    //         this.enableContinue=false;\r\n    //         this.dialogService.tokenGenerationDialog();\r\n    //       });\r\n    //     }\r\n    //   });\r\n    // }\r\n  }\r\n\r\n  omit_number(event) {\r\n    var key;\r\n    key = event.charCode;\r\n    return key > 47 && key < 58;\r\n  }\r\n  totalAmountValue(cdForm) {\r\n    this.a = this.chequedepositForm.value.transactionAmount;\r\n    this.a = this.a.replace(/\\,/g, \"\"); // 1125, but a string, so convert it to number\r\n    this.a = parseInt(this.a, 10);\r\n\r\n    this.chequedepositForm.value.totalAmount =\r\n      (cdForm.value.count2000 ? cdForm.value.count2000 * 2000 : 0) +\r\n      (cdForm.value.count500 ? cdForm.value.count500 * 500 : 0) +\r\n      (cdForm.value.count200 ? cdForm.value.count200 * 200 : 0) +\r\n      (cdForm.value.count100 ? cdForm.value.count100 * 100 : 0) +\r\n      (cdForm.value.count50 ? cdForm.value.count50 * 50 : 0) +\r\n      (cdForm.value.count20 ? cdForm.value.count20 * 20 : 0) +\r\n      (cdForm.value.count10 ? cdForm.value.count10 * 10 : 0) +\r\n      (cdForm.value.count1 ? cdForm.value.count1 * 1 : 0);\r\n    console.log(this.chequedepositForm.value.totalAmount);\r\n    console.log(this.chequedepositForm.value.transactionAmount);\r\n    this.transamount = this.chequedepositForm.value.transactionAmount;\r\n    this.totalAmount = this.chequedepositForm.value.totalAmount;\r\n    this.chequedepositForm.controls.totalAmount.setValue(\r\n      this.chequedepositForm.value.totalAmount\r\n    );\r\n  }\r\n  OnInput(event: any) {\r\n    this.transAmt = event.target.value;\r\n\r\n    // comma separator using changeDetector\r\n    const savedInput = this.transAmount;\r\n\r\n    let lastCharIsPoint = false;\r\n    if (savedInput.charAt(savedInput.length - 1) === \".\") {\r\n      lastCharIsPoint = true;\r\n    }\r\n    const num = savedInput.replace(/[^0-9.]/g, \"\");\r\n    this.transAmt = Number(num) || \"\";\r\n    this.transAmount = this.transAmt.toLocaleString(\"en-IN\");\r\n    if (lastCharIsPoint) {\r\n      this.transAmount = this.transAmount.concat(\".\");\r\n    }\r\n    this.changeDef.detectChanges();\r\n    this.balance = localStorage.getItem(\"AccountBal\");\r\n    if (parseFloat(this.balance) < parseFloat(this.transAmt)) {\r\n      console.log(\"Bigger\");\r\n      this.snack.open(\r\n        `Transaction Amount should not exceed than Account Balance`,\r\n        \"OK\",\r\n        {\r\n          duration: 2000,\r\n          verticalPosition: \"top\",\r\n          horizontalPosition: \"right\",\r\n        }\r\n      );\r\n      this.enableContinue = false;\r\n    } else {\r\n      this.enableContinue = true;\r\n    }\r\n    this.totalTransAmount =\r\n      Number(this.transAmt) +\r\n      Number(this.chargeDetails ? this.chargeDetails[0].amount : \"\");\r\n    this.chequedepositForm.controls.totalTransactionAmount.setValue(\r\n      this.totalTransAmount\r\n    );\r\n    this.cdr.markForCheck();\r\n    this.cdr.detectChanges();\r\n  }\r\n  getChargeDetails(accountId, amount) {\r\n    this.apiService.fetchChargeDetails(accountId).subscribe((resp) => {\r\n      console.log(resp);\r\n      this.chargeDetails = resp;\r\n      this.chequedepositForm.controls.totalChargeAmount.setValue(\r\n        this.chargeDetails ? this.chargeDetails[0].amount : \"\"\r\n      );\r\n    });\r\n    if (this.cashData) {\r\n      setTimeout(() => {\r\n        this.totalTransAmount =\r\n          Number(this.cashData.transactionAmount) +\r\n          Number(this.chargeDetails ? this.chargeDetails[0].amount : \"\");\r\n        this.chequedepositForm.controls.totalTransactionAmount.setValue(\r\n          this.totalTransAmount\r\n        );\r\n      }, 1000);\r\n      this.cdr.markForCheck();\r\n      this.cdr.detectChanges();\r\n    } else {\r\n      console.log(this.chargeDetails);\r\n      amount = 0;\r\n      console.log(amount);\r\n      setTimeout(() => {\r\n        this.totalTransAmount =\r\n          Number(amount) +\r\n          Number(this.chargeDetails ? this.chargeDetails[0].amount : \"\");\r\n        console.log(this.totalTransAmount);\r\n        this.chequedepositForm.controls.totalTransactionAmount.setValue(\r\n          this.totalTransAmount\r\n        );\r\n      }, 1000);\r\n      this.cdr.markForCheck();\r\n      this.cdr.detectChanges();\r\n    }\r\n\r\n    // console.log(this.totalTransAmount);\r\n  }\r\n\r\n  addCurrencyImage(currency) {\r\n    return currency.toLowerCase();\r\n  }\r\n\r\n  clicked(event) {\r\n    console.log(event);\r\n  }\r\n\r\n  onCountryChange(country) {\r\n    let currency = country.currencyCode;\r\n    this.currencyImage = \"currency-flag-\" + currency.toLowerCase();\r\n  }\r\n\r\n  accountCurrencyImage(accountCurrency) {\r\n    return accountCurrency\r\n      ? \"currency-flag-\" + accountCurrency.toLowerCase()\r\n      : \"\";\r\n  }\r\n\r\n  formatAmount(amount) {\r\n    if (amount) {\r\n      return amount && amount.toString().split(\".\")[0].length > 3\r\n        ? amount\r\n            .toString()\r\n            .substring(0, amount.toString().split(\".\")[0].length - 3)\r\n            .replace(/\\B(?=(\\d{2})+(?!\\d))/g, \",\") +\r\n            \",\" +\r\n            amount\r\n              .toString()\r\n              .substring(amount.toString().split(\".\")[0].length - 3)\r\n        : amount.toString();\r\n    }\r\n  }\r\n  cashWithdrawlData() {\r\n    this.apiService\r\n      .getAppointmentId(this.appointmentId.data.appointmentId)\r\n      .subscribe((resp: any) => {\r\n        console.log(resp);\r\n        this.cashData = resp.data;\r\n        this.custID = resp.data.customerId;\r\n        this.ifQRvariable = true;\r\n        this.chequedepositForm.controls.accountType.setValue(\r\n          resp.data.accountType\r\n        );\r\n        this.chequedepositForm.controls.accountBranch.setValue(\r\n          resp.data.accountBranch\r\n        );\r\n        this.chequedepositForm.controls.accountNumber.setValue(\r\n          resp.data.accountNumber\r\n        );\r\n        this.chequedepositForm.controls.chequeNumber.setValue(\r\n          resp.data.chequeNumber\r\n        );\r\n        this.getChargeDetails(\r\n          resp.data.accountNumber,\r\n          resp.data.transactionAmount\r\n        );\r\n        this.chequedepositForm.controls.accountCurrency.setValue(\r\n          resp.data.accountCurrency\r\n        );\r\n        this.chequedepositForm.controls.transactionCurrency.setValue(\r\n          resp.data.transactionCurrency\r\n        );\r\n        this.chequedepositForm.controls.transactionAmount.setValue(\r\n          resp.data.transactionAmount\r\n        );\r\n        this.currencyImage =\r\n          \"currency-flag-\" + resp.data.accountCurrency.toLowerCase();\r\n        this.currencyImage =\r\n          \"currency-flag-\" + resp.data.transactionCurrency.toLowerCase();\r\n      });\r\n  }\r\n}\r\n","<div class=\"fullcard\">\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"center center\">\r\n        <div fxFlex=\"100%\">\r\n            <h6 class=\"h1\"><span style=\"color:grey;padding-right: 4px;\">Services</span> <b>></b> <span style=\"padding-left: 4px;\"><b>Cheque Deposit</b></span></h6>\r\n            <mat-card class=\"chequecard\">\r\n                <mat-card-title style=\"padding: 2%;\">\r\n                    <div fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n                        <div>\r\n                            <mat-icon *ngIf=\"phoneNumber\" class=\"backIcon\" (click)=\"goToServiceScreens()\">keyboard_backspace</mat-icon>\r\n                        </div>&nbsp;&nbsp;\r\n                        <div class=\"card-title\">{{titleName}}</div>\r\n                    </div>\r\n                </mat-card-title>\r\n                <mat-card-content>\r\n                    <div class=\"full-width\" style=\"padding: 0% 0% 3% 2%;\">\r\n                        <form [formGroup]=\"chequedepositForm\">\r\n                            <div fxLayout=\"column\" fxLayoutGap=\"3%\" fxLayoutAlign=\"space-between none\">\r\n                                <div>\r\n                                    <div fxLayout=\"row wrap\" class=\"flex-container stretch\">\r\n                                        <ng-container>\r\n                                            <div fxFlex=\"25%\" fxFlex.xs=\"100%\"  *ngIf=\"showAccountNum\">\r\n                                                <mat-hint class=\"totalAmount\">Account Type*</mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <input matInput  type=\"text\" *ngIf=\"phoneNumber && !accountDropdown\"  [readonly]=\"true\" class=\"full-width\" formControlName=\"accountType\" >\r\n                                                    <!-- <mat-select *ngIf=\"phoneNumber && accountDropdown\" formControlName=\"accountType\" (selectionChange)=\"getAccountType($event.value)\"\r\n                                                        style=\"background-color: #f9fafb;\"\r\n                                                        placeholder=\"Select Account Type\">\r\n                                                        <mat-option *ngFor=\"let type of accounttypeArray \"\r\n                                                            \r\n                                                            [value]=\"type.accountType\">{{type.accountType}}</mat-option>\r\n                                                    </mat-select> -->\r\n                                                    <mat-select formControlName=\"accountType\"  *ngIf=\"phoneNumber && accountDropdown\"   style=\"background-color: #f9fafb;\" (selectionChange)=\"getAccountType($event.value)\" placeholder=\"Select Account Type\">\r\n                                                        <mat-option *ngFor=\"let type of accounttypeArray \"  (click)=\"custAccountNumber(type)\"  [value]=\"type.accountType\">{{type.accountType}}</mat-option>\r\n                                                    </mat-select>\r\n                                                    <!-- <input matInput type=\"text\"  [readonly]=\"true\" class=\"full-width\" formControlName=\"accountType\" > -->\r\n\r\n                                                </mat-card>\r\n                                            </div>\r\n                                            <div fxFlex=\"25%\" fxFlex.xs=\"100%\" *ngIf=\"!showAccountNum\" >\r\n                                                <mat-hint class=\"totalAmount\">Account Number*</mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <input matInput type=\"text\"  \r\n                                                        class=\"full-width\" formControlName=\"accountNumber\"\r\n                                                        (change)=\"fetchByAccountNum(chequedepositForm.get('accountNumber').value)\">\r\n                                                </mat-card>\r\n                                                    <!-- <mat-hint class=\"totalAmount\" *ngIf=\"!phoneNumber\" >Account Balance :{{curr }} {{accountBal | number: '2.' }}</mat-hint> -->\r\n                                                    <mat-hint class=\"totalAmount\" *ngIf=\"!showAccountNum\" >Account Balance\r\n                                                        : {{curr }}{{formatAmount(accountBal)}}</mat-hint>\r\n                                                    <br>\r\n                                                    <!-- <mat-hint  class=\"totalAmount\" *ngIf=\"!phoneNumber\"  [readonly]=\"true\"  formControlName=\"holderName\">Holder Name :{{userName}}</mat-hint> -->\r\n                                                    <mat-hint class=\"totalAmount\" *ngIf=\"!showAccountNum\" [readonly]=\"true\">\r\n                                                        Holder Name : {{userName}}</mat-hint>\r\n                                            </div>\r\n                                            <div fxFlex=\"25%\" fxFlex.xs=\"100%\" *ngIf=\"showAccountNum\">\r\n                                                <mat-hint class=\"totalAmount\">Account Number*</mat-hint>\r\n                                                <mat-card class=\"inputCard\" >\r\n                                                    <!-- <input matInput type=\"text\" *ngIf=\"!phoneNumber\"  [readonly]=\"true\" class=\"full-width\" formControlName=\"accountNumber\" > -->\r\n                                                    <input matInput type=\"text\" *ngIf=\"!flag1\"  [readonly]=\"true\" class=\"full-width\" formControlName=\"accountNumber\" >\r\n                                                    <!-- <mat-select formControlName=\"accountNumber\" *ngIf=\"phoneNumber\"  style=\"background-color: #f9fafb;\" > -->\r\n                                                        <mat-select formControlName=\"accountNumber\" (selectionChange)=\"fetchByAccountNum($event.value)\" *ngIf=\"flag1\"  style=\"background-color: #f9fafb;\" >\r\n                                                        \r\n                                                            <mat-option>select</mat-option>\r\n                                                            <mat-option  *ngFor=\"let id of accountNoList \"   [value]=\"id\">{{id}}</mat-option>\r\n                                                           \r\n                                                    </mat-select>\r\n                                                </mat-card>\r\n                                                <!-- <mat-hint class=\"totalAmount\"  *ngIf=\"!phoneNumber\"  >Account Balance :{{curr }} {{accountBal | number: '2.' }}</mat-hint> -->\r\n                                                <mat-hint class=\"totalAmount\"  *ngIf=\"hideDetails\"  >Account Balance :{{curr }} {{formatAmount(accountBal)}}</mat-hint><br>\r\n                                                <mat-hint  class=\"totalAmount\"  *ngIf=\"hideDetails\" [readonly]=\"true\"  formControlName=\"holderName\">Holder Name :{{userName}}</mat-hint>\r\n                                            </div>\r\n                                            <div fxFlex=\"25%\" fxFlex.xs=\"100%\" *ngIf=\"!showAccountNum\" >\r\n                                                <mat-hint class=\"totalAmount\">Account Type*</mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <input matInput type=\"text\"  [readonly]=\"true\" \r\n                                                        class=\"full-width\" formControlName=\"accountType\">\r\n                                    \r\n                                                </mat-card>\r\n                                            </div>\r\n                                            <div fxFlex=\"25%\" fxFlex.xs=\"100%\">\r\n                                                <mat-hint class=\"accountBranch\">Account Branch*</mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <input matInput *ngIf=\"!phoneNumber\" type=\"text\"\r\n                                                    [readonly]=\"true\" class=\"full-width\"\r\n                                                    formControlName=\"accountBranch\">\r\n                                                <input matInput *ngIf=\"phoneNumber\" type=\"text\"\r\n                                                    [readonly]=\"true\" class=\"full-width\"\r\n                                                    formControlName=\"accountBranch\">\r\n                                                </mat-card>\r\n                                                <mat-error\r\n                                                    *ngIf=\"chequedepositForm.get('accountBranch').touched && !chequedepositForm.get('accountBranch').valid\">\r\n                                                    Account Branch is Required!\r\n                                                </mat-error>\r\n                                            </div>\r\n                                            <div fxFlex=\"25%\" fxFlex.xs=\"100%\">\r\n                                                <mat-hint class=\"totalAmount\">Account Currency*</mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <div fxLayout=\"row wrap\" class=\"full-width\">\r\n                                                        <div fxFlex=\"25%\">\r\n                                                            <div *ngIf=\"ifQRvariable\" class=\"currency-flag {{isedit?accountCurrencyImage(chequedepositForm.controls['accountCurrency'].value):currencyImage}}\"></div>\r\n                                                            <div *ngIf=\"!ifQRvariable\" class=\"currency-flag {{!isedit?accountCurrencyImage(chequedepositForm.controls['accountCurrency'].value):currencyImage}}\"></div>\r\n                                                        </div>\r\n                                                        <div fxFlex=\"75%\">\r\n                                                            <input matInput type=\"text\" *ngIf=\"!phoneNumber\" [readonly]=\"true\" class=\"full-width\" style=\"font-size:110%\" formControlName=\"accountCurrency\">\r\n                                                            <input matInput type=\"text\" *ngIf=\"phoneNumber\" [readonly]=\"true\" class=\"full-width\" style=\"font-size:110%\" formControlName=\"accountCurrency\">\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </mat-card>\r\n                                            </div>\r\n                                        </ng-container>\r\n                                    </div>\r\n                                </div>\r\n    \r\n                                <div>\r\n                                    <div fxLayout=\"row wrap\" class=\"flex-container stretch\">\r\n                                        <ng-container>\r\n                                           \r\n                                            <div fxFlex=\"25%\" fxFlex.xs=\"100%\" *ngIf=\"showAccountNum\">\r\n                                                <mat-hint class=\"totalAmount\">Transaction Currency* </mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <div fxLayout=\"row wrap\" class=\"full-width\">\r\n                                                        <div fxFlex=\"25%\">\r\n                                                            <div class=\"currency-flag {{currencyImage}}\"></div>\r\n                                                        </div>\r\n                                                        <div fxFlex=\"75%\">\r\n                                                            <input matInput type=\"text\" *ngIf=\"!phoneNumber\" [readonly]=\"true\" class=\"full-width\" formControlName=\"transactionCurrency\">\r\n                                                            <mat-select formControlName=\"transactionCurrency\" *ngIf=\"phoneNumber\"  placeholder=\"Select Transaction Currency\" id=\"testSelect\" style=\"background-color: #f9fafb;\" [disabled]=\"isedit\">\r\n                                                                <mat-option *ngFor=\"let country of countryValues; let i = index\" style=\"font-size:110%\" (click)=\"onCountryChange(country)\" [value]=\"country.currencyCode\">\r\n                                                                    <div fxLayout=\"row wrap\" class=\"full-width\">\r\n                                                                        <div fxFlex=\"15%\">{{country.currencyCode}}</div>\r\n                                                                        <div fxFlex=\"85%\">\r\n                                                                            <div class=\"currency-flag currency-flag-{{addCurrencyImage(country.currencyCode)}} alignImage\">\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </mat-option>\r\n                                                            </mat-select>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </mat-card>\r\n                                            </div>\r\n                                            <div fxFlex=\"25%\" fxFlex.xs=\"100%\" *ngIf=\"!showAccountNum\">\r\n                                                <mat-hint class=\"totalAmount\">Transaction Currency* </mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <div fxLayout=\"row wrap\" class=\"full-width\">\r\n                                                        <div fxFlex=\"25%\">\r\n                                                            <div class=\"currency-flag {{currencyImage}}\"></div>\r\n                                                        </div>\r\n                                                        <div fxFlex=\"75%\">\r\n                                                            <mat-select formControlName=\"transactionCurrency\"\r\n                                                                placeholder=\"Select Transaction Currency\"\r\n                                                                id=\"testSelect\" style=\"background-color: #f9fafb;\"\r\n                                                                >\r\n                                                                <mat-option\r\n                                                                    *ngFor=\"let country of countryValues; let i = index\"\r\n                                                                    (click)=\"onCountryChange(country)\" style=\"font-size:110%\"\r\n                                                                    [value]=\"country.currencyCode\">\r\n                                                                    <div fxLayout=\"row wrap\" class=\"full-width\">\r\n                                                                        <div fxFlex=\"15%\">{{country.currencyCode}}</div>\r\n                                                                        <div fxFlex=\"85%\">\r\n                                                                            <div\r\n                                                                                class=\"currency-flag currency-flag-{{addCurrencyImage(country.currencyCode)}} alignImage\">\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </mat-option>\r\n                                                            </mat-select>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </mat-card>\r\n                                            </div>\r\n\r\n                                            <div fxFlex=\"25%\" fxFlex.xs=\"100%\" *ngIf=\"showAccountNum\">\r\n                                                <mat-hint class=\"totalAmount\">Transaction Amount*</mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <input matInput type=\"text\" *ngIf=\"!phoneNumber\" [readonly]=\"true\" class=\"full-width\" formControlName=\"transactionAmount\">\r\n                                                    <input matInput class=\"full-width\" *ngIf=\"phoneNumber\"  #myRef [(ngModel)]= \"transAmount\"  formControlName=\"transactionAmount\" [value]= \"transAmt | number: '1.'\"\r\n                                                    (keyup)=\"OnInput($event)\" (focus)=\"clicked($event)\" [readonly]=\"isedit\" >\r\n                                                </mat-card>\r\n                                                <mat-error *ngIf=\"chequedepositForm.get('transactionAmount').errors?.min\">\r\n                                                    Amount must be greater than zero\r\n                                                   </mat-error>\r\n                                            </div>\r\n                                            <div fxFlex=\"25%\" fxFlex.xs=\"100%\" *ngIf=\"!showAccountNum\">\r\n                                                <mat-hint class=\"totalAmount\">Transaction Amount*</mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <input matInput class=\"full-width\" #myRef\r\n                                                        [(ngModel)]=\"transAmount\" formControlName=\"transactionAmount\"\r\n                                                        [value]=\"transAmt | number: '1.'\" (keyup)=\"OnInput($event)\"\r\n                                                        (focus)=\"clicked($event)\" >\r\n                                                </mat-card>\r\n                                                <mat-error *ngIf=\"chequedepositForm.get('transactionAmount').errors?.min\">\r\n                                                    Amount must be greater than zero\r\n                                                </mat-error>\r\n                                            </div>\r\n                                            <div fxFlex=\"25%\" fxFlex.xs=\"100%\">\r\n                                                <mat-hint class=\"totalAmount\">Cheque Number*</mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <!-- <mat-select formControlName=\"holderName\"  style=\"background-color: #f9fafb;\" >\r\n                                                        <mat-option *ngFor=\"let holder of customerName;\" [value]=\"holder\">{{holder}}</mat-option>\r\n                                                    </mat-select> -->\r\n                                                    <input matInput type=\"text\" maxlength=\"6\" (keypress)=\"omit_number($event)\"  *ngIf=\"!phoneNumber\"   class=\"full-width\" formControlName=\"chequeNumber\" >\r\n                                                    <input matInput type=\"text\" maxlength=\"6\" (keypress)=\"omit_number($event)\" *ngIf=\"phoneNumber\"  class=\"full-width\" formControlName=\"chequeNumber\" >\r\n                                                </mat-card>\r\n                                                <mat-error *ngIf=\"chequedepositForm.get('chequeNumber').touched && !chequedepositForm.get('chequeNumber').valid\">\r\n                                                    Cheque Number is Required!\r\n                                                   </mat-error>\r\n                                            </div>\r\n                                            <div fxFlex=\"25%\" fxFlex.xs=\"100%\">\r\n                                                <mat-hint class=\"totalAmount\">Total Charge Amount*</mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <input matInput class=\"full-width\" readonly formControlName=\"totalChargeAmount\">\r\n                                                </mat-card>\r\n\r\n                                            </div>\r\n                                            <div fxFlex=\"25%\" fxFlex.xs=\"100%\">\r\n                                                <mat-hint class=\"totalAmount\">Total Transaction Amount*</mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <input matInput type=\"text\" readonly onlyNumber formControlName=\"totalTransactionAmount\">\r\n\r\n                                                </mat-card>\r\n\r\n                                            </div>\r\n                                            <div class=\"tooltip\">\r\n                                                <img width=\"80%\"\r\n                                            [src]=\"'assets/images/info.svg'\"/>\r\n                                                <div class=\"tooltiptext\">\r\n                                                    <p class=\"totalAmount textcolor\" style=\"margin-top:10px; margin-bottom:6px\">Transaction Amount:{{chequedepositForm.get('transactionAmount').value}} </p>\r\n                                                    <p class=\"totalAmount textcolor\">Total Charge Amount:{{chequedepositForm.get('totalChargeAmount').value}} </p>\r\n                                                    <hr/>\r\n                                                    <p class=\"totalAmount textcolor\" style=\"margin-right:10px ;\">Total Transaction Amount:{{chequedepositForm.get('totalTransactionAmount').value}} </p>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                        </ng-container>\r\n                                    </div>\r\n                                </div>\r\n                             \r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </mat-card-content>\r\n            </mat-card>\r\n            <div>\r\n                <div fxLayout=\"row wrap\" class=\"flex-container stretch\">\r\n                    <ng-container>\r\n                        <div fxFlex=\"30%\" fxFlex.xs=\"100%\" class=\"paddingCls\">\r\n                            <button mat-flat-button *ngIf=\"phoneNumber\" class=\"buttonCancel full-width\"\r\n                                (click)=\"goToServiceScreens()\">CANCEL</button>\r\n                        </div>\r\n                        <div fxFlex=\"70%\" fxFlex.xs=\"100%\" class=\"paddingCls\" *ngIf=\"showAccountNum\">\r\n                            <button mat-flat-button class=\"buttonNext full-width\"\r\n                            [disabled]=\"!enableContinue || !chequedepositForm.get('transactionCurrency').valid\r\n                            ||!chequedepositForm.get('transactionAmount').valid\r\n                            ||!chequedepositForm.get('accountCurrency').valid\r\n                            ||!chequedepositForm.get('accountNumber').valid \r\n                            ||!chequedepositForm.get('accountType').valid\r\n                            ||!chequedepositForm.get('chequeNumber').valid\r\n                            ||!chequedepositForm.get('totalChargeAmount').valid\r\n                            ||!chequedepositForm.get('totalTransactionAmount').valid\"\r\n                                (click)=\"onSaveofchequeDeposit(chequedepositForm.value, ifQRvariable)\">CONTINUE</button>\r\n                        </div>\r\n                        <div fxFlex=\"70%\" fxFlex.xs=\"100%\" class=\"paddingCls\" *ngIf=\"!showAccountNum\">\r\n                            <button mat-flat-button class=\"buttonNext full-width\"\r\n                            [disabled]=\"!enableContinue || !chequedepositForm.get('transactionCurrency').valid\r\n                            ||!chequedepositForm.get('transactionAmount').valid\r\n                            ||!chequedepositForm.get('accountCurrency').valid\r\n                            ||!chequedepositForm.get('accountNumber').valid \r\n                            ||!chequedepositForm.get('accountType').valid\r\n                            ||!chequedepositForm.get('chequeNumber').valid\r\n                            ||!chequedepositForm.get('totalChargeAmount').valid\r\n                            ||!chequedepositForm.get('totalTransactionAmount').valid\"\r\n                                (click)=\"getOTP(chequedepositForm.value, ifQRvariable)\">CONTINUE</button>\r\n                        </div>\r\n                    </ng-container>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n       \r\n\r\n        \r\n    </div>\r\n</div>\r\n\r\n","import { Routes } from '@angular/router';\r\nimport { AppBlankComponent } from './app-blank/app-blank.component';\r\nimport { AuthenticateComponent } from './authenticate/authenticate.component';\r\nimport { CashDepositComponent } from './cash-deposit/cash-deposit.component';\r\nimport { CashWithdrawalComponent } from './cash-withdrawal/cash-withdrawal.component';\r\n\r\nimport { CheqWComponent } from './cheq-w/cheq-w.component';\r\n\r\nimport { CdServiceComponent } from './cd-service/cd-service.component';\r\n\r\nimport { ChequeDepositComponent } from './cheque-deposit/cheque-deposit.component';\r\nimport { ChequeWithdrawalComponent } from './cheque-withdrawal/cheque-withdrawal.component';\r\nimport { ChequeWithdrawal1Component } from './cheque-withdrawal1/cheque-withdrawal1.component';\r\nimport { CwServiceComponent } from './cw-service/cw-service.component';\r\nimport { DepositTopupComponent } from './deposit-topup/deposit-topup.component';\r\nimport { ForexTransactionComponent } from './forex-transaction/forex-transaction.component';\r\nimport { KioskHomepageComponent } from './kiosk-homepage/kiosk-homepage.component';\r\nimport { LoanPaymentComponent } from './loan-payment/loan-payment.component';\r\nimport { NewcashdepositComponent } from './newcashdeposit/newcashdeposit.component';\r\nimport { NewcashwithdrawalComponent } from './newcashwithdrawal/newcashwithdrawal.component';\r\nimport { NewchequedepositComponent } from './newchequedeposit/newchequedeposit.component';\r\nimport { SelectServiceComponent } from './select-service/select-service.component';\r\nimport { UtilityBillpaymentComponent } from './utility-billpayment/utility-billpayment.component';\r\nimport { ExitScreenComponent } from \"./exit-screen/exit-screen.component\";\r\nimport { CheqDComponent } from \"./cheq-d/cheq-d.component\";\r\nimport { ForexServiceComponent } from './forex-service/forex-service.component';\r\n\r\nexport const OthersRoutes: Routes = [\r\n  {\r\n    path: \"\",\r\n    // component: DashboardComponent,\r\n\r\n    children: [\r\n      {\r\n        path: \"blank\",\r\n        component: AppBlankComponent,\r\n        // data: { title: 'Blank', breadcrumb: 'BLANK' }\r\n      },\r\n      {\r\n        path: \"cheque-withdrawal\",\r\n        component: ChequeWithdrawalComponent,\r\n        // data: { title: 'Blank', breadcrumb: 'BLANK' }\r\n      },\r\n      {\r\n        path: \"services\",\r\n        component: SelectServiceComponent,\r\n      },\r\n      {\r\n        path: \"authenticate\",\r\n        component: AuthenticateComponent,\r\n        // data: { title: 'Blank', breadcrumb: 'BLANK' }\r\n      },\r\n      {\r\n        path: \"cash-withdrawal\",\r\n        component: CashWithdrawalComponent,\r\n      },\r\n      {\r\n        path: \"cash-deposit\",\r\n        component: CashDepositComponent,\r\n      },\r\n      {\r\n        path: \"cheque-deposit\",\r\n        component: ChequeDepositComponent,\r\n      },\r\n      {\r\n        path: \"cheque-withdrawal\",\r\n        component: ChequeWithdrawal1Component,\r\n      },\r\n      {\r\n        path: \"forex-transaction\",\r\n        component: ForexTransactionComponent,\r\n      },\r\n      {\r\n        path: \"loan-payment\",\r\n        component: LoanPaymentComponent,\r\n      },\r\n      {\r\n        path: \"deposit-topup\",\r\n        component: DepositTopupComponent,\r\n      },\r\n      {\r\n        path: \"utility-billpayment\",\r\n        component: UtilityBillpaymentComponent,\r\n      },\r\n      {\r\n        path: \"kioskHome\",\r\n        component: KioskHomepageComponent,\r\n      },\r\n      {\r\n        path: \"cashwithdrawalService\",\r\n        component: NewcashwithdrawalComponent,\r\n      },\r\n      {\r\n        path: \"cashDepositService\",\r\n        component: NewcashdepositComponent,\r\n      },\r\n      {\r\n        path: \"chequeDepositService\",\r\n        component: NewchequedepositComponent,\r\n      },\r\n      // test component injection\r\n      {\r\n        path:\"cw-cash-withdrawal\",\r\n\r\n        component:CwServiceComponent,\r\n      },\r\n      {\r\n        path: \"cheq-deposit\",\r\n        component: CheqDComponent,\r\n      },\r\n      {\r\n        path:\"cheq-withdrawal\",\r\n        component:CheqWComponent\r\n      },\r\n      {\r\n        path:\"cd-cash-deposit\",\r\n        component:CdServiceComponent\r\n\r\n      },\r\n      {\r\n        path:\"forex-service\",\r\n        component:ForexServiceComponent\r\n\r\n      }\r\n      \r\n    ]\r\n  } \r\n\r\n];\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl, FormBuilder, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { DialogService } from 'app/shared/services/Dialog/dialog.service';\r\n\r\ninterface Testing {\r\n  value: string;\r\n  viewValue: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-deposit-topup',\r\n  templateUrl: './deposit-topup.component.html',\r\n  styleUrls: ['./deposit-topup.component.scss']\r\n})\r\nexport class DepositTopupComponent implements OnInit {\r\n  depositForm: FormGroup;\r\n  depositTopUp : any = 'Deposit Top Up';\r\n  constructor(private router : Router,private formBuilder: FormBuilder, private dialogService : DialogService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.depositForm = this.formBuilder.group({\r\n      depositAccount:['', [Validators.required]],\r\n      revisedAmount:['', [Validators.required]],\r\n      maturityAmount:['', [Validators.required]],\r\n      payFromAccount:['', [Validators.required]],\r\n      holderName:['', [Validators.required]],\r\n      topupAmount:['', [Validators.required]], \r\n    });\r\n  }\r\n  goToServiceScreens(){\r\n    this.router.navigateByUrl('/others/kioskHome');\r\n  }\r\n  goToAuthenticate(){\r\n    this.dialogService.authenticationDialog();\r\n  }\r\n\r\n  testing: Testing[] = [\r\n    { value: 'Demo', viewValue: 'Demo 1' },\r\n    { value: 'Demo', viewValue: 'Demo 2' },\r\n    { value: 'Demo', viewValue: 'Demo 3' }\r\n  ];\r\n\r\n\r\n}\r\n","<div class=\"fullcard\">\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"center center\">\r\n        <div fxFlex=\"80%\">\r\n            <mat-card class=\"chequecard\">\r\n                <mat-card-title style=\"padding: 2%;\">\r\n                    <div fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n                        <div>\r\n                            <mat-icon class=\"backIcon\" (click)=\"goToServiceScreens()\">keyboard_backspace</mat-icon>\r\n                        </div> &nbsp;&nbsp;\r\n                        <div class=\"card-title\">Deposit Top Up</div>\r\n                    </div>\r\n                </mat-card-title>\r\n                <mat-card-content>\r\n                    <div class=\"full-width\" style=\"padding: 0% 3% 3% 2%;\">\r\n                        <!-- <form #depositForm=\"ngForm\"> -->\r\n                        <form [formGroup]=\"depositForm\">     \r\n                            <div fxLayout=\"column\" fxLayoutGap=\"5%\" fxLayoutAlign=\"space-between none\">\r\n                                <div>\r\n                                    <div fxLayout=\"row wrap\" class=\"flex-container stretch\">\r\n                                        <ng-container>\r\n                                            <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                                <mat-hint class=\"totalAmount\">Deposit Account* </mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <mat-select formControlName=\"depositAccount\" class=\"full-width\" style=\"background-color: #f9fafb;\">\r\n                                                        <mat-option *ngFor=\"let test of testing\" [value]=\"test.value\">\r\n                                                            {{test.viewValue}}\r\n                                                        </mat-option>\r\n                                                    </mat-select>\r\n                                                </mat-card>\r\n                                                <mat-hint class=\"totalAmount\">Account Balance : $12,09470</mat-hint>\r\n                                            </div>\r\n                                            <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                                <mat-hint class=\"totalAmount\">Revised Principal Amount*</mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <input matInput formControlName=\"revisedAmount\" class=\"full-width inputClass\" type=\"text\"\r\n                                                        name=\"revisedAmount\">\r\n                                                </mat-card>\r\n\r\n                                            </div>\r\n                                            <div fxFlex=\"34%\" fxFlex.xs=\"100%\">\r\n                                                <mat-hint class=\"totalAmount\">Revised Maturity Amount* </mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <input matInput formControlName=\"maturityAmount\" type=\"text\" class=\"full-width inputClass\"\r\n                                                        name=\"maturityAmount\">\r\n                                                </mat-card>\r\n                                            </div>\r\n                                        </ng-container>\r\n                                    </div>\r\n                                </div>\r\n                                <div>\r\n                                    <span layout=\"row\">\r\n                                        <hr class=\"line\" flex />\r\n                                    </span>\r\n                                </div>\r\n                                <div>\r\n                                    <div fxLayout=\"row wrap\" class=\"flex-container stretch\">\r\n                                        <ng-container>\r\n                                            <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                                <mat-hint class=\"totalAmount\">Pay from Account*</mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <mat-select formControlName=\"payFromAccount\" class=\"full-width\" style=\"background-color: #f9fafb;\">\r\n                                                        <mat-option *ngFor=\"let test of testing\" [value]=\"test.value\">\r\n                                                            {{test.viewValue}}\r\n                                                        </mat-option>\r\n                                                    </mat-select>\r\n                                                </mat-card>\r\n                                            </div>\r\n                                            <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                                <mat-hint class=\"totalAmount\"> Holder Name* </mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <mat-select formControlName=\"holderName\" class=\"full-width\" style=\"background-color: #f9fafb;\">\r\n                                                        <mat-option *ngFor=\"let test of testing\" [value]=\"test.value\">\r\n                                                            {{test.viewValue}}\r\n                                                        </mat-option>\r\n                                                    </mat-select>\r\n                                                </mat-card>\r\n                                            </div>\r\n                                            <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                                <mat-hint class=\"totalAmount\">Top Up Amount*</mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <input matInput formControlName=\"topupAmount\" type=\"text\" class=\"full-width inputClass\"\r\n                                                        name=\"topupAmount\">\r\n                                                </mat-card>\r\n                                            </div>\r\n                                        </ng-container>\r\n                                    </div>\r\n                                </div>\r\n                                <div>\r\n                                    <div fxLayout=\"row wrap\" class=\"flex-container stretch\">\r\n                                        <ng-container>\r\n                                            <div fxFlex=\"30%\" fxFlex.xs=\"100%\" style=\"padding: 0% 1%;\">\r\n                                                <button mat-flat-button class=\"buttonCancel full-width\"\r\n                                                    (click)=\"goToServiceScreens()\">CANCEL</button>\r\n                                            </div>\r\n                                            <div fxFlex=\"70%\" fxFlex.xs=\"100%\" style=\"padding: 0% 2%;\">\r\n                                                <button mat-flat-button class=\"buttonNext full-width\"\r\n                                                [disabled]=\" !depositForm.get('depositAccount').valid\r\n                                                || !depositForm.get('revisedAmount').valid\r\n                                                || !depositForm.get('maturityAmount').valid\r\n                                                || !depositForm.get('payFromAccount').valid\r\n                                                || !depositForm.get('holderName').valid\r\n                                                || !depositForm.get('topupAmount').valid \"\r\n                                                    (click)=\"goToAuthenticate()\">CONTINUE</button>\r\n                                            </div>\r\n                                        </ng-container>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </mat-card-content>\r\n            </mat-card>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\n// import { Observable, Subject } from 'rxjs';\r\n// import { WebcamImage, WebcamInitError, WebcamUtil } from 'ngx-webcam';\r\n@Component({\r\n  selector: 'app-ocr-scan-page',\r\n  templateUrl: './ocr-scan-page.component.html',\r\n  styleUrls: ['./ocr-scan-page.component.scss']\r\n})\r\nexport class OcrScanPageComponent implements OnInit {\r\n\r\n  constructor(public dialogRef: MatDialogRef<OcrScanPageComponent>,) { }\r\n\r\n  // private trigger: Subject<any> = new Subject();\r\n  // public webcamImage: WebcamImage;\r\n  // private nextWebcam: Subject<any> = new Subject();\r\n  // sysImage = '';\r\n  ngOnInit() {}\r\n  // public getSnapshot(): void {\r\n  //   this.trigger.next(void 0);\r\n  // }\r\n  // public captureImg(webcamImage: WebcamImage): void {\r\n  //   this.webcamImage = webcamImage;\r\n  //   this.sysImage = webcamImage.imageAsDataUrl;\r\n  //   console.info('got webcam image', this.sysImage);\r\n  // }\r\n  // public get invokeObservable(): Observable<any> {\r\n  //   return this.trigger.asObservable();\r\n  // }\r\n  // public get nextWebcamObservable(): Observable<any> {\r\n  //   return this.nextWebcam.asObservable();\r\n  // }\r\n\r\n}\r\n","<p>ocr-scan-page works!</p>\r\n<!-- <div class=\"container mt-5\">\r\n    <h2>Angular Webcam Capture Image from Camera</h2>\r\n    <div class=\"col-md-12\">\r\n      <webcam\r\n        [trigger]=\"invokeObservable\"\r\n        (imageCapture)=\"captureImg($event)\"\r\n      ></webcam>\r\n    </div>\r\n    <div class=\"col-md-12\">\r\n      <button class=\"btn btn-danger\" (click)=\"getSnapshot()\">\r\n        Capture Image\r\n      </button>\r\n    </div>\r\n    <div class=\"col-12\">\r\n      <div id=\"results\">Your taken image manifests here...</div>\r\n      <img [src]=\"webcamImage?.imageAsDataUrl\" height=\"400px\" />\r\n    </div>\r\n  </div> -->","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-blank',\r\n  templateUrl: './app-blank.component.html',\r\n  styleUrls: ['./app-blank.component.css']\r\n})\r\nexport class AppBlankComponent implements OnInit {\r\n\r\n  constructor(private route:Router,) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n  onClickOfButton()\r\n  {\r\n    this.route.navigateByUrl('/others/cheque-withdrawal');\r\n  }\r\n  onClickOfButton1()\r\n  {\r\n    this.route.navigateByUrl('/others/cheque-withdrawal1');\r\n  }\r\n\r\n  onClickOfButton3()\r\n  {\r\n    this.route.navigateByUrl('/others/authenticate');\r\n  }\r\n\r\n}\r\n","<p class=\"m-333\">\r\n  <button mat-button (click)=\"onClickOfButton1()\" color=\"primary\">Cheque-Withdrawal 2</button>\r\n  <button mat-button (click)=\"onClickOfButton()\" color=\"primary\">Cheque-Withdrawal 3</button>\r\n  <button mat-button (click)=\"onClickOfButton3()\" color=\"primary\">Authentication</button>\r\n\r\n</p>","\r\nimport { DataService } from 'app/shared/services/data.service';\r\nimport { Component, OnInit } from \"@angular/core\";\r\nimport { EmailValidator } from \"@angular/forms\";\r\nimport { Router } from \"@angular/router\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { DialogService } from \"app/shared/services/Dialog/dialog.service\";\r\n\r\n\r\n@Component({\r\n  selector: \"app-kiosk-homepage\",\r\n  templateUrl: \"./kiosk-homepage.component.html\",\r\n  styleUrls: [\"./kiosk-homepage.component.scss\"],\r\n})\r\nexport class KioskHomepageComponent implements OnInit {\r\n  isSelect: boolean = false;\r\n  active: any = {};\r\n  enableList: any[];\r\n\r\n  folders: Section[] = [\r\n    {\r\n      title: \"Cash Withdrawal\",\r\n      id: 1,\r\n      flag: false,\r\n      link: \"others/cw-cash-withdrawal\", //cashwithdrawalService', //cw-cash-withdrawal\r\n      image: \"assets/images/cashwithdrawalService.png\",\r\n      srcimage2: \"assets/images/cashwithdrawlService2.png\",\r\n    },\r\n    {\r\n      title: \"Cash Deposit\",\r\n      id: 2,\r\n      flag: false,\r\n      link: \"others/cd-cash-deposit\", //cashDepositService\r\n      image: \"assets/images/cashDepositService2.png\",\r\n      srcimage2: \"assets/images/cashDepositService.png\",\r\n    },\r\n    {\r\n      title: \"Cheque Withdrawal\",\r\n      id: 4,\r\n      flag: false,\r\n      link: 'others/cheq-withdrawal',\r\n      image: \"assets/images/chequewithdralService2.png\",\r\n      srcimage2: \"assets/images/chequewithdrawalService.png\",\r\n    },\r\n    {\r\n      title: \"Cheque Deposit\",\r\n      id: 3,\r\n      flag: false,\r\n      link: \"others/cheq-deposit\",\r\n      image: \"assets/images/chequedepositService2.png\",\r\n      srcimage2: \"assets/images/chequedepositService.png\",\r\n    },\r\n    {\r\n      title: \"Forex Transaction\",\r\n      id: 5,\r\n      flag: false,\r\n      link: \"others/forex-service\",\r\n      image: \"assets/images/forexService2.png\",\r\n      srcimage2: \"assets/images/forexService.png\",\r\n    },\r\n\r\n    {\r\n      title: \"Deposit Top Up\",\r\n      id: 6,\r\n      flag: false,\r\n      link: \"others/deposit-topup\",\r\n      image: \"assets/images/deposittopup2.png\",\r\n      srcimage2: \"assets/images/deposittopup.png\",\r\n    },\r\n    {\r\n      title: \"Utility Bill Payment\",\r\n      id: 7,\r\n      flag: false,\r\n      link: \"others/utility-billpayment\",\r\n      image: \"assets/images/utilityService2.png\",\r\n      srcimage2: \"assets/images/utilityService.png\",\r\n    },\r\n    {\r\n      title: \"Traveler Cheque\",\r\n      id: 8,\r\n      flag: false,\r\n      link: \"others/loan-payment\",\r\n      image: \"assets/images/travelercheque2.png\",\r\n      srcimage2: \"assets/images/travelercheque.png\",\r\n    },\r\n    {\r\n      title: \"Loan Payment\",\r\n      id: 9,\r\n      flag: false,\r\n      link: \"others/loan-payment\",\r\n      image: \"assets/images/loanpayment2.png\",\r\n      srcimage2: \"assets/images/loanPayment.png\",\r\n    },\r\n  ];\r\n  timer: any;\r\n  custValidation: string;\r\n  custNameFromLogin: string;\r\n\r\n\r\n\r\n  constructor(private router: Router,private dataService:DataService,private dialogService: DialogService) { }\r\n\r\n\r\n\r\n  ngOnInit(): void {\r\n    this.custValidation = localStorage.getItem(\"customerValidation\");\r\n    this.custNameFromLogin = localStorage.getItem(\"FromLogin\");\r\n    console.log(\r\n    this.custNameFromLogin )\r\n    if (this.custNameFromLogin != null) {\r\n      console.log(this.folders);\r\n      this.folders = this.folders.filter(item => item.title !== 'Cash Withdrawal');\r\n      console.log(this.folders);\r\n    }\r\n  }\r\n  OnSelect() {\r\n    this.isSelect = true;\r\n  }\r\n  goToService(index) {\r\n    console.log(index);\r\n    if (this.active !== index) {\r\n      this.active = index;\r\n      this.folders.forEach((item) => {\r\n        item.flag = false;\r\n      });\r\n    }\r\n    this.folders[index].flag = !this.folders[index].flag;\r\n  }\r\n  goToOperations(index) {\r\n    console.log(index);\r\n    if (this.active !== index) {\r\n      this.active = index;\r\n      this.folders.forEach((item) => {\r\n        item.flag = false;\r\n      });\r\n    }\r\n    this.folders[index].flag = !this.folders[index].flag;\r\n    this.enableList = this.folders.filter((x) => x.flag === true);\r\n    this.dataService.sendNavParam(this.enableList[0].title);\r\n    console.log(this.enableList);\r\n    this.timer = setTimeout(() => {\r\n      this.router.navigateByUrl(`/${this.enableList[0].link}`);\r\n    },200);\r\n\r\n    // this.router.navigateByUrl(`/${this.enableList[0].link}`);\r\n  }\r\n  contiueButton() {\r\n    // console.log(this.active);\r\n    this.enableList = this.folders.filter((x) => x.flag === true);\r\n    console.log(this.enableList);\r\n    if (this.enableList.length > 0) return true;\r\n    else return false;\r\n  }\r\n  clickExit() {\r\n    this.dialogService.clickExit();\r\n  }\r\n}\r\nexport interface Section {\r\n  title: string;\r\n  id: number;\r\n  flag: boolean;\r\n  link: string;\r\n  image: any;\r\n  srcimage2: any;\r\n}\r\n","<div class=\"mainDiv\">\r\n  <div fxLayoutAlign=\"start center\">\r\n    <mat-card class=\"titleCard\" fxFlex=\"68%\">\r\n      <div class=\"header_content\">\r\n        <span class=\"headtitle\">Services</span>\r\n        <div class=\"headContent\">\r\n          Services related to core banking applications. Through this, you can\r\n          access all the Service\r\n        </div>\r\n      </div>\r\n      <div class=\"header_image\">\r\n        <img src=\"/assets/images/home-header.png\" alt=\"\">\r\n      </div>\r\n    </mat-card>\r\n  </div>\r\n  <div>\r\n    <div fxLayout=\"column wrap\">\r\n      <div class=\"contentDiv\" fxLayout=\"row wrap\" fxLayoutAlign=\"center\">\r\n        <div\r\n          *ngFor=\"let folder of folders; let i = index\"\r\n          (click)=\"goToOperations(i)\"\r\n        >\r\n          <mat-card\r\n            *ngIf=\"folder.flag ? !isSelect : isSelect\"\r\n            class=\"contentCardBorder\"\r\n            style=\"background-color: #fa6500\"\r\n          >\r\n          </mat-card>\r\n          <mat-card [ngClass]=\"folder.flag ? 'contentCard2' : 'contentCard1'\">\r\n            <div fxLayoutAlign=\"center\" *ngIf=\"folder.flag\">\r\n              <img\r\n                [ngClass]=\"\r\n                  folder.title == 'Cash Withdrawal' ||\r\n                  folder.title == 'Traveler Cheque'\r\n                    ? 'image1'\r\n                    : 'image2'\r\n                \"\r\n                src=\"{{ folder.image }}\"\r\n                alt=\"\"\r\n              />\r\n            </div>\r\n            <div fxLayoutAlign=\"center\" *ngIf=\"!folder.flag\">\r\n              <img\r\n                [ngClass]=\"\r\n                  folder.title == 'Cash Withdrawal' ||\r\n                  folder.title == 'Traveler Cheque'\r\n                    ? 'image1'\r\n                    : 'image2'\r\n                \"\r\n                src=\"{{ folder.srcimage2 }}\"\r\n                alt=\"\"\r\n              />\r\n            </div>\r\n            <mat-card-content\r\n              fxLayoutAlign=\"center\"\r\n              [ngClass]=\"\r\n                folder.title == 'Cash Withdrawal' ||\r\n                folder.title == 'Traveler Cheque'\r\n                  ? 'matcontentcard1'\r\n                  : 'matcontentcard2'\r\n              \"\r\n            >\r\n              {{ folder.title }}</mat-card-content\r\n            >\r\n          </mat-card>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div fxLayout=\"row\">\r\n      <div class=\"full-width\" style=\"margin-left: 5%\" fxLayoutGap=\"20px\">\r\n        <button\r\n          mat-flat-button\r\n          class=\"continue\"\r\n          [ngClass]=\"contiueButton() ? 'buttonActive' : 'buttonPassive'\"\r\n        >\r\n          Continue\r\n        </button>\r\n        <button mat-flat-button (click)=\"clickExit()\" class=\"exitBtn\">\r\n          Exit\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { DialogService } from 'app/shared/services/Dialog/dialog.service';\r\nimport { Token } from '@angular/compiler/src/ml_parser/lexer';\r\nimport { otpModel } from 'app/shared/models/otp.model';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { OtpVerifyComponent } from '../otp-verify/otp-verify.component';\r\nimport { DataService } from 'app/shared/services/data.service';\r\n\r\n@Component({\r\n  selector: 'app-cheq-w',\r\n  templateUrl: './cheq-w.component.html',\r\n  styleUrls: ['./cheq-w.component.scss']\r\n})\r\nexport class CheqWComponent implements OnInit {\r\n  chequewithdrawalForm: FormGroup;\r\n  title = \"Cheque Withdrawal\";\r\n  custValidation: string;\r\n  Token= new TokenGenerationObj();\r\n  custPref = \"N\";\r\n  entityCode=\"ENTCD\";\r\n  bankCode = \"BNKC\" ;\r\n  tokenBranch = \"KN\" ;\r\n  // Token = new TokenGenerationObj();\r\n  qrData: any;\r\n  phoneNumber: string;\r\n  oTpModel = new otpModel();\r\n  appointmentId: any;\r\n  transBranch: string;\r\n  qrBranchCode: any;\r\n  ifQRvariable = false;\r\n  denomRequired: any = \"\";\r\n  denomCodeArray: any[] = [\r\n    { key: \"count2000\", value: 2000 },\r\n    { key: \"count500\", value: 500 },\r\n    { key: \"count200\", value: 200 },\r\n    { key: \"count100\", value: 100 },\r\n    { key: \"count50\", value: 50 },\r\n    { key: \"count20\", value: 20 },\r\n    { key: \"count10\", value: 10 },\r\n    { key: \"count1\", value: 1 },\r\n  ];\r\n  accountNum: string;\r\n  selectedAccountInfo: any;\r\n  custID: any;\r\n  productCode: \"CQW\";\r\n  tokenOrigin = \"Kiosk\";\r\n  accountBal: any;\r\n  cheqDepositResponse: any;\r\n  tokenNum: any;\r\n  estimatedTime: any;\r\n  enableContinue: boolean;\r\n  chequewithdrawValues: any;\r\n  chequewithdrawtype: any;\r\n  phonenum: any;\r\n  custAccountData: any;\r\n  accountNoList: any;\r\n  appointmentDetails:any;\r\n  denominationdata: {};\r\n  transactiondata: any;\r\n  displayDenom: boolean=false;\r\n  \r\n\r\n  constructor( private formBuilder: FormBuilder,\r\n    private ls: LocalStoreService,\r\n    private apiService: ApiService,\r\n    private router: Router,\r\n    private dialogService: DialogService,\r\n    private dialog: MatDialog,\r\n    private snack: MatSnackBar,private dataService:DataService,\r\n    private _location: Location) { }\r\n\r\n    ngOnInit(): void {\r\n      localStorage.setItem('chq_page', this.title)\r\n      this.custValidation = localStorage.getItem(\"customerValidation\");\r\n      this.chequewithdrawalForm = this.formBuilder.group({\r\n        account: [],\r\n        transaction: [],\r\n        entityCode: [this.entityCode, [Validators.required]],\r\n        bankCode: [this.bankCode, [Validators.required]],\r\n        tokenBranch: [this.tokenBranch, [Validators.required]],\r\n        customerCategory: [this.custPref, [Validators.required]],\r\n        tokenNumber: [\"\", [Validators.required]],\r\n        productCode: [\"CQW\", Validators.required],\r\n        tokenOrigin: [\"Kiosk\", Validators.required],\r\n        estimatedWaitTime: [\"\", [Validators.required]],\r\n        narrative: [\"\", [Validators.required]],\r\n      });\r\n      console.log(\"Cash withdrawal\", this.chequewithdrawalForm);\r\n      this.qrData = JSON.parse(JSON.parse(localStorage.getItem(\"scannerData\")));\r\n      this.phoneNumber = localStorage.getItem(\"phonenumFromLogin\");\r\n      this.appointmentId = this.ls.getItem(\"TransactionType\");\r\n      this.transBranch = localStorage.getItem(\"TRANSACTIONBRANCH\");\r\n\r\n      this.dataService.gettransactionFormdata.subscribe(transaction=>{\r\n        if(Object.keys(transaction).length != 0  && transaction.constructor === Object){\r\n          console.log(\"Account component?\",transaction);\r\n          this.transactiondata=transaction;\r\n          if(this.transactiondata.transactionAmount){\r\n            this.displayDenom=true;\r\n          }\r\n        }\r\n   \r\n      });\r\n      this.dataService.getdenominationFormdata.subscribe(denomination=>{\r\n        if(denomination){\r\n          console.log(\"Account component?\",denomination);\r\n          this.denominationdata=denomination;\r\n        }\r\n   \r\n      })\r\n      this.dataService.getaccountFormdata.subscribe((data) => {\r\n        if (Object.keys(data).length != 0  && data.constructor === Object) {\r\n          console.log(\"Account component?\", data);\r\n          \r\n          this.appointmentDetails=data;\r\n          console.log(\"Account component?\", this.appointmentDetails.appointmentId);\r\n        }\r\n      })\r\n    }\r\n    onSubmit(event) {\r\n      console.log(\"On submit form\", this.chequewithdrawalForm.value,event);\r\n      if(event=='showAccountNum'){\r\n        this.onSaveofchequeDeposit(this.chequewithdrawalForm.value,this.ifQRvariable, '')\r\n      }\r\n      if(event=='NotshowAccountNum'){\r\n        this.getOTP(this.chequewithdrawalForm.value,this.ifQRvariable,'');\r\n      }\r\n    }\r\n    public redirectToHome(): void {\r\n     \r\n      this.dataService.removetransactionFormData(this.transactiondata);\r\n      this.dataService.removeaccountFormData(this.appointmentDetails);\r\n      this.dataService.removedenominationFormData(this.denominationdata);\r\n      this.router.navigateByUrl('/others/kioskHome');\r\n    }\r\n    onSaveofchequeDeposit(form, type, cdForm) {\r\n      this.Token.transactionBranch = this.transBranch;\r\n      this.Token.tokenBranch = \"KN\";\r\n  \r\n      if(this.qrData){\r\n        if(this.qrData.transactionBranch){\r\n          this.apiService.fetchBranchInfoByBranchName(this.qrData.transactionBranch).subscribe(response=>{\r\n            this.qrBranchCode=response;\r\n            console.log(response)\r\n          })\r\n        }\r\n      }\r\n  \r\n      let denominationData: any = {};\r\n      let denominationDataArray: any[] = [];\r\n      if(this.denomRequired == 'yes'){\r\n        for (let i = 0; i < this.denomCodeArray.length; i++) {\r\n          if (cdForm.value[this.denomCodeArray[i].key]) {\r\n            // denominationData.transactionId = this.cashdepositFor;\r\n            denominationData.denominationKey = this.denomCodeArray[i].value;\r\n            denominationData.denominationValue = +cdForm.value[this.denomCodeArray[i].key];\r\n            denominationData.currency = this.chequewithdrawalForm.value.transactionCurrency;\r\n            // denominationData.amountAvailiable = 15200 - (cdForm.value[this.denomCodeArray[i].key] * this.denomCodeArray[i].value);\r\n            denominationDataArray.push(denominationData);\r\n            console.log(denominationDataArray)\r\n            denominationData = {};\r\n          }\r\n        }\r\n      }\r\n      if(this.appointmentDetails?.appointmentId){\r\n        console.log(this.appointmentDetails)\r\n        this.Token.customerId=this.appointmentDetails.customerId,\r\n        this.Token.accountNumber=this.appointmentDetails.accountNumber,\r\n        this.Token.accountType=this.appointmentDetails.accountType,\r\n        this.Token.accountCurrency=this.appointmentDetails.accountCurrency,\r\n        this.Token.accountBalance=this.appointmentDetails.accountBalance,\r\n        this.Token.accountBranch=this.appointmentDetails.accountBranch,\r\n        this.Token.holderName=this.appointmentDetails.holderName,\r\n      \r\n        this.Token.transactionCurrency=this.appointmentDetails.transactionCurrency,\r\n        this.Token.transactionAmount=this.appointmentDetails.transactionAmount;\r\n        this.Token.transactionId=this.appointmentDetails.transactionId,\r\n        this.Token.totalChargeAmount=this.appointmentDetails.totalChargeAmount,\r\n        this.Token.totalTransactionAmount=this.appointmentDetails.totalTransactionAmount,\r\n  \r\n        this.Token.transactionBranch=this.transBranch,\r\n        this.Token.entityCode=this.entityCode,\r\n        this.Token.bankCode=this.bankCode,\r\n        this.Token.tokenBranch=this.tokenBranch,\r\n        this.Token.customerCategory=this.custPref,\r\n        this.Token.productCode='CQW',\r\n        this.Token.tokenOrigin=this.tokenOrigin,\r\n  \r\n        this.Token.tokenNumber=\"\",\r\n        this.Token.estimatedWaitTime=\"\",\r\n        this.Token.exchangeRate=\"\",\r\n        this.Token.accountAmount=\"\",\r\n        this.Token.narrative=\"\",\r\n       //  this.Token.denomination=[],\r\n        this.Token.totalAmount=\"\"\r\n        if(this.denomRequired == 'yes'){\r\n         this.Token.denomination=denominationDataArray;\r\n            }\r\n        \r\n       \r\n       // }\r\n       console.log(\"Not a qrvariable\",this.Token);\r\n       }\r\n      // if(!this.ifQRvariable && this.appointmentDetails==null)\r\n      else{\r\n        console.log('form--',form, form?.account, form?.account?.accountNumber);\r\n        this.Token.customerId=form?.account?.customerId,\r\n        this.Token.accountNumber=form?.account?.accountNumber,\r\n        this.Token.accountType=form?.account?.accountType,\r\n        this.Token.accountCurrency=form.account.accountCurrency,\r\n        this.Token.accountBalance=form.account.accountBalance,\r\n        this.Token.accountBranch=form.account.accountBranch,\r\n        this.Token.holderName=form.account.holderName,\r\n      \r\n        this.Token.transactionCurrency=form.transaction.transactionCurrency\r\n        if(this.qrData){\r\n          this.Token.transactionAmount=form.transaction.transactionAmount;\r\n         }\r\n         else{\r\n          this.Token.transactionAmount=form.transaction.transactionAmount.replace(/,/g, \"\");\r\n         }        this.Token.transactionId=form.transaction.transactionId,\r\n        this.Token.totalChargeAmount=form.transaction.totalChargeAmount,\r\n        this.Token.totalTransactionAmount=form.transaction.totalTransactionAmount,\r\n        this.Token.chequeType=form.transaction.chequeType,\r\n        this.Token.chequeNumber=form.transaction.chequeNumber,\r\n \r\n        this.Token.transactionBranch=this.transBranch,\r\n        this.Token.entityCode=this.entityCode,\r\n        this.Token.bankCode=this.bankCode,\r\n        this.Token.tokenBranch=this.tokenBranch,\r\n        this.Token.customerCategory=this.custPref,\r\n        this.Token.productCode='CQW',\r\n        this.Token.tokenOrigin=this.tokenOrigin,\r\n \r\n        this.Token.tokenNumber=\"\",\r\n        this.Token.estimatedWaitTime=\"\",\r\n        this.Token.exchangeRate=\"\",\r\n        this.Token.accountAmount=\"\",\r\n        this.Token.narrative=\"\",\r\n       //  this.Token.denomination=[],\r\n        this.Token.totalAmount=\"\"\r\n        if(this.denomRequired == 'yes'){\r\n         this.Token.denomination=denominationDataArray;\r\n            }\r\n        \r\n      } \r\n      // else {\r\n      //   console.log(\"else\");\r\n      //   this.Token.customerId=this.appointmentDetails.customerId,\r\n      //   this.Token.accountNumber=this.appointmentDetails.accountNumber,\r\n      //   this.Token.accountType=this.appointmentDetails.accountType,\r\n      //   this.Token.accountCurrency=this.appointmentDetails.accountCurrency,\r\n      //   this.Token.accountBalance=this.appointmentDetails.accountBalance,\r\n      //   this.Token.accountBranch=this.appointmentDetails.accountBranch,\r\n      //   this.Token.holderName=this.appointmentDetails.holderName,\r\n      \r\n      //   this.Token.transactionCurrency=this.appointmentDetails.transactionCurrency,\r\n      //   this.Token.transactionAmount=this.appointmentDetails.transactionAmount;\r\n      //   this.Token.transactionId=this.appointmentDetails.transactionId,\r\n      //   this.Token.totalChargeAmount=this.appointmentDetails.totalChargeAmount,\r\n      //   this.Token.totalTransactionAmount=this.appointmentDetails.totalTransactionAmount,\r\n  \r\n      //   this.Token.transactionBranch=this.transBranch,\r\n      //   this.Token.entityCode=this.entityCode,\r\n      //   this.Token.bankCode=this.bankCode,\r\n      //   this.Token.tokenBranch=this.tokenBranch,\r\n      //   this.Token.customerCategory=this.custPref,\r\n      //   this.Token.productCode='CQW',\r\n      //   this.Token.tokenOrigin=this.tokenOrigin,\r\n  \r\n      //   this.Token.tokenNumber=\"\",\r\n      //   this.Token.estimatedWaitTime=\"\",\r\n      //   this.Token.exchangeRate=\"\",\r\n      //   this.Token.accountAmount=\"\",\r\n      //   this.Token.narrative=\"\",\r\n      //  //  this.Token.denomination=[],\r\n      //   this.Token.totalAmount=\"\"\r\n      //   if(this.denomRequired == 'yes'){\r\n      //    this.Token.denomination=denominationDataArray;\r\n      //       }\r\n        \r\n       \r\n      //   // if(this.qrData){\r\n      //   //   if(this.qrData.transactionBranch){\r\n      //   //     form.tokenBranch = this.qrBranchCode.transactionBranch;\r\n      //   //   }\r\n      //   // }\r\n        \r\n      //   // form.accountBalance = this.accountBal;\r\n      // }\r\n      if(this.appointmentId && this.appointmentId.data){\r\n        form.transactionId = this.appointmentId.data.transactionId;\r\n        form.transactionStatus = this.appointmentId.data.transactionStatus;\r\n      }\r\n  console.log(this.Token);\r\n      this.apiService.saveofCashDeposit(this.Token).subscribe(cheqWithdrawResp=>{\r\n        console.log( \"Response Success, Data Saved\", cheqWithdrawResp);\r\n        this.cheqDepositResponse = cheqWithdrawResp;\r\n        this.tokenNum = this.cheqDepositResponse.tokenNumber;\r\n        this.estimatedTime = this.cheqDepositResponse.estimatedWaitTime;\r\n        localStorage.setItem(\"tokenNumer\",this.tokenNum);\r\n        localStorage.setItem(\"estimatedTiming\",this.estimatedTime);\r\n        this.enableContinue=false;\r\n        if(this.cheqDepositResponse){\r\n        this.dialogService.tokenGenerationDialog();\r\n        }\r\n      });\r\n      \r\n    }\r\n      getOTP(formData, type, cdForm) {\r\n        this.phonenum=this.ls.getItem('phonenumFromLogin');\r\n        this.chequewithdrawValues = formData;\r\n        this.chequewithdrawtype = type;\r\n        this.chequewithdrawalForm = cdForm;\r\n        this.oTpModel.source = \"customer\";\r\n        this.oTpModel.source_key = \"mobile\";\r\n        this.oTpModel.source_value = this.phonenum;\r\n        this.oTpModel.isMobileLogin = false;\r\n        let amount = 50000;\r\n        let transamountwithoutcomma = this.chequewithdrawValues.transaction.transactionAmount.replace(\r\n          /,/g,\r\n          \"\"\r\n        );\r\n        console.log(transamountwithoutcomma);\r\n        if (transamountwithoutcomma >= amount) {\r\n          this.apiService.getOtp(this.oTpModel).subscribe((otpResp) => {\r\n            if (otpResp) {\r\n              this.openDialogOTP(this.phonenum);\r\n              this.snack.open(\r\n                \"An OTP has been sent to the Registered Mobile Number.\",\r\n                \"\",\r\n                {\r\n                  duration: 4000,\r\n                  verticalPosition: \"top\",\r\n                  horizontalPosition: \"right\",\r\n                }\r\n              );\r\n            }\r\n          });\r\n        } else {\r\n          this.getOTPforSave(\r\n            this.chequewithdrawValues,\r\n            this.chequewithdrawtype,\r\n            this.chequewithdrawalForm\r\n          );\r\n        }\r\n      }\r\n      openDialogOTP(numbr) {\r\n        const dialogRef = this.dialog.open(OtpVerifyComponent, {\r\n          data: { number: numbr, type: \"numbr\" },\r\n          disableClose: true,\r\n        });\r\n        dialogRef.afterClosed().subscribe((submit) => {\r\n          if (submit) {\r\n            this.getOTPforSave(\r\n              this.chequewithdrawValues,\r\n              this.chequewithdrawtype,\r\n              this.chequewithdrawalForm\r\n            );\r\n          }\r\n        });\r\n      }\r\n      getOTPforSave1(formData, type, cdForm) {\r\n        formData.transactionBranch = this.transBranch;\r\n        if (this.custValidation == \"New Customer\") {\r\n          console.log(\"customer\", this.custID);\r\n          this.accountNum = formData.accountNumber;\r\n          formData.customerId = this.custID ? this.custID : 0;\r\n          formData.accountType = formData.accountType;\r\n          formData.accountNumber = this.accountNum;\r\n          formData.holderName = formData.holderName;\r\n          formData.accountCurrency = formData.accountCurrency;\r\n          formData.transactionCurrency = formData.transactionCurrency;\r\n          formData.transactionAmount = formData.transactionAmount.replace(/,/g, \"\");\r\n          formData.productCode = this.productCode;\r\n          formData.tokenOrigin = this.tokenOrigin;\r\n          formData.accountBalance = this.accountBal;\r\n        }\r\n        formData.tokenBranch = \"KN\";\r\n        if (this.appointmentId && this.appointmentId.data) {\r\n          formData.transactionId = this.appointmentId.data.transactionId;\r\n          formData.transactionStatus = this.appointmentId.data.transactionStatus;\r\n        }\r\n        formData.customerId = this.custID ? this.custID : 0;\r\n        formData.accountType = formData.accountType;\r\n        formData.accountNumber = this.accountNum;\r\n        formData.holderName = formData.holderName;\r\n        formData.accountCurrency = formData.accountCurrency;\r\n        formData.transactionCurrency = formData.transactionCurrency;\r\n        formData.transactionAmount = formData.transactionAmount.replace(/,/g, \"\");\r\n        formData.productCode = this.productCode;\r\n        formData.tokenOrigin = this.tokenOrigin;\r\n        formData.accountBalance = this.accountBal;\r\n        this.apiService.saveofCashDeposit(formData).subscribe((cashDepositResp) => {\r\n          console.log(\"Response Success\", cashDepositResp);\r\n          this.cheqDepositResponse = cashDepositResp;\r\n          this.tokenNum = this.cheqDepositResponse.tokenNumber;\r\n          this.estimatedTime = this.cheqDepositResponse.estimatedWaitTime;\r\n          localStorage.setItem(\"tokenNumer\", this.tokenNum);\r\n          localStorage.setItem(\"estimatedTiming\", this.estimatedTime);\r\n          this.enableContinue = false;\r\n          if (this.cheqDepositResponse) {\r\n            this.dialogService.tokenGenerationDialog();\r\n          }\r\n        });\r\n      }\r\n      getOTPforSave(formData,type,cdForm){\r\n        console.log(formData);\r\n        let denominationData: any = {};\r\n            let denominationDataArray: any[] = [];\r\n            if(this.denomRequired == 'yes'){\r\n            for (let i = 0; i < this.denomCodeArray.length; i++) {\r\n              if (cdForm.value[this.denomCodeArray[i].key]) {\r\n                // denominationData.transactionId = this.cashdepositFor;\r\n                denominationData.denominationKey = this.denomCodeArray[i].value;\r\n                denominationData.denominationValue = +cdForm.value[this.denomCodeArray[i].key];\r\n                denominationData.currency = this.chequewithdrawalForm.value.transactionCurrency;\r\n                // denominationData.amountAvailiable = 15200 - (cdForm.value[this.denomCodeArray[i].key] * this.denomCodeArray[i].value);\r\n                denominationDataArray.push(denominationData);\r\n                console.log(denominationDataArray)\r\n                denominationData = {};\r\n              }\r\n            }\r\n          }\r\n          console.log(this.custValidation)\r\n         if(this.custValidation == \"New Customer\"){\r\n          this.Token.customerId=formData.account.customerId,\r\n           this.Token.accountNumber=formData.account.accountNumber,\r\n           this.Token.accountType=formData.account.accountType,\r\n           this.Token.accountCurrency=formData.account.accountCurrency,\r\n           this.Token.accountBalance=formData.account.accountBalance,\r\n           this.Token.accountBranch=formData.account.accountBranch,\r\n           this.Token.holderName=formData.account.holderName,\r\n         \r\n           this.Token.transactionCurrency=formData.transaction.transactionCurrency,\r\n           this.Token.transactionAmount=formData.transaction.transactionAmount.replace(/,/g, \"\");\r\n           this.Token.transactionId=formData.transaction.transactionId,\r\n           this.Token.totalChargeAmount=formData.transaction.totalChargeAmount,\r\n           this.Token.totalTransactionAmount=formData.transaction.totalTransactionAmount,\r\n           this.Token.chequeType=formData.transaction.chequeType,\r\n           this.Token.chequeNumber=formData.transaction.chequeNumber,\r\n    \r\n           this.Token.transactionBranch=this.transBranch,\r\n           this.Token.entityCode=this.entityCode,\r\n           this.Token.bankCode=this.bankCode,\r\n           this.Token.tokenBranch=this.tokenBranch,\r\n           this.Token.customerCategory=this.custPref,\r\n           this.Token.productCode='CQW',\r\n           this.Token.tokenOrigin=this.tokenOrigin,\r\n    \r\n           this.Token.tokenNumber=\"\",\r\n           this.Token.estimatedWaitTime=\"\",\r\n           this.Token.exchangeRate=\"\",\r\n           this.Token.accountAmount=\"\",\r\n           this.Token.narrative=\"\",\r\n          //  this.Token.denomination=[],\r\n           this.Token.totalAmount=\"\"\r\n           if(this.denomRequired == 'yes'){\r\n            this.Token.denomination=denominationDataArray;\r\n               }\r\n           \r\n          \r\n         \r\n        \r\n        }\r\n        else{\r\n          console.log(\"Not a new customer\");\r\n         \r\n          this.Token.customerId=formData.account.customerId,\r\n           this.Token.accountNumber=formData.account.accountNumber,\r\n           this.Token.accountType=formData.account.accountType,\r\n           this.Token.accountCurrency=formData.account.accountCurrency,\r\n           this.Token.accountBalance=formData.account.accountBalance,\r\n           this.Token.accountBranch=formData.account.accountBranch,\r\n           this.Token.holderName=formData.account.holderName,\r\n         \r\n           this.Token.transactionCurrency=formData.transaction.transactionCurrency,\r\n           this.Token.transactionAmount=formData.transaction.transactionAmount.replace(/,/g, \"\");\r\n           this.Token.transactionId=formData.transaction.transactionId,\r\n           this.Token.totalChargeAmount=formData.transaction.totalChargeAmount,\r\n           this.Token.totalTransactionAmount=formData.transaction.totalTransactionAmount,\r\n           this.Token.chequeType=formData.transaction.chequeType,\r\n           this.Token.chequeNumber=formData.transaction.chequeNumber,\r\n    \r\n           this.Token.transactionBranch=this.transBranch,\r\n           this.Token.entityCode=this.entityCode,\r\n           this.Token.bankCode=this.bankCode,\r\n           this.Token.tokenBranch=this.tokenBranch,\r\n           this.Token.customerCategory=this.custPref,\r\n           this.Token.productCode='CQW',\r\n           this.Token.tokenOrigin=this.tokenOrigin,\r\n    \r\n           this.Token.tokenNumber=\"\",\r\n           this.Token.estimatedWaitTime=\"\",\r\n           this.Token.exchangeRate=\"\",\r\n           this.Token.accountAmount=\"\",\r\n           this.Token.narrative=\"\",\r\n          //  this.Token.denomination=[],\r\n           this.Token.totalAmount=\"\"\r\n           if(this.denomRequired == 'yes'){\r\n            this.Token.denomination=denominationDataArray;\r\n               }\r\n               console.log(this.Token);\r\n        }\r\n         \r\n        if(this.appointmentId && this.appointmentId.data){\r\n          this.Token.transactionId = this.appointmentId.data.transactionId;\r\n          this.Token.transactionStatus = this.appointmentId.data.transactionStatus;\r\n        }\r\n        \r\n       \r\n           \r\n        \r\n      \r\n       \r\n      \r\n      \r\n            console.log(\"before api call :: \",this.Token);\r\n            this.apiService.saveofCashDeposit(this.Token).subscribe((cashDepositResp) => {\r\n              console.log(\"Response Success\", cashDepositResp);\r\n              this.cheqDepositResponse = cashDepositResp;\r\n              this.tokenNum = this.cheqDepositResponse.tokenNumber;\r\n              this.estimatedTime = this.cheqDepositResponse.estimatedWaitTime;\r\n              localStorage.setItem(\"tokenNumer\", this.tokenNum);\r\n              localStorage.setItem(\"estimatedTiming\", this.estimatedTime);\r\n              this.enableContinue = false;\r\n              if (this.cheqDepositResponse) {\r\n                this.dialogService.tokenGenerationDialog();\r\n              }\r\n            });\r\n         }\r\n  \r\n    ngOnDestroy(): void {\r\n      localStorage.removeItem('chq_page');\r\n    }\r\n  \r\n}\r\nexport class TokenGenerationObj{\r\n  transactionId:any;\r\n        customerId:any;\r\n        accountNumber:any;\r\n        accountType:any;\r\n        holderName:any;\r\n        accountCurrency:any;\r\n        transactionCurrency:any;\r\n        transactionAmount:any;\r\n        accountBalance:any;\r\n        productCode:any;\r\n        tokenOrigin:any;\r\n        exchangeRate:any;\r\n        accountAmount:any;\r\n        totalChargeAmount:any;\r\n        totalTransactionAmount:any;\r\n        narrative:any;\r\n        denomination:any[];\r\n        totalAmount:any;\r\n        entityCode:any;\r\n        bankCode:any;\r\n        tokenBranch:any;\r\n        customerCategory:any;\r\n        tokenNumber:any;\r\n        estimatedWaitTime:any;\r\n        accountBranch:any;\r\n        transactionBranch:any;\r\n        transactionStatus:any;\r\n        chequeType:any;\r\n        chequeNumber:number;\r\n}","\r\n<app-header \r\n[title]=\"title\">\r\n</app-header>\r\n<form *ngIf=\"chequewithdrawalForm\"\r\n      [formGroup]=\"chequewithdrawalForm\">\r\n      <div fxLayout=\"row\">\r\n            <mat-card fxFlex=\"100%\" style=\"margin-top: -3%;height: 70%;\">\r\n                <app-account-information-form formControlName=\"account\"></app-account-information-form>\r\n                <app-transaction-information-form formControlName=\"transaction\"></app-transaction-information-form>\r\n            </mat-card>\r\n            <div *ngIf=\"displayDenom\" style=\"margin-top: -4%;\">\r\n                <app-denomination-info formControlName=\"denomination\"></app-denomination-info>\r\n            </div>\r\n          </div>\r\n          <div  style=\"margin-top: -1%;\">\r\n<app-footer \r\n     saveText=\"Continue\" \r\n     (save)=\"onSubmit($event)\" \r\n     (cancel)=\"redirectToHome()\" \r\n     (exit)=\"back()\" \r\n     [cancelDisabled]=\"false\"\r\n     >\r\n</app-footer>\r\n</div>\r\n\r\n</form>","import { ChangeDetectionStrategy, Component, EventEmitter, Input, OnInit, Output, ViewEncapsulation } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-form',\r\n  templateUrl: './form.component.html',\r\n  styleUrls: ['./form.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class FormComponent implements OnInit {\r\n\r\n  @Input() public title: string = 'test';\r\n  @Input() public saveText = 'Continue';\r\n  @Input() public cancelText = 'Cancel';\r\n  @Input() public cancelDisabled = false;\r\n  @Input() public saveDisabled = false;\r\n  @Input() public saving = false;\r\n\r\n  @Output() public cancel = new EventEmitter<void>();\r\n  @Output() public save = new EventEmitter<void>();\r\n  @Output() public exit = new EventEmitter<void>();\r\n  \r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<form>\r\n    <h3 class=\"form__title pb-10\">{{ title }}</h3>\r\n    <ng-content></ng-content>\r\n\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"center center\" fxLayoutGap=\"16px\">\r\n        <button type=\"button\" mat-button [disabled]=\"cancelDisabled\" (click)=\"cancel.emit()\">Back</button>\r\n        <button color=\"primary\" mat-raised-button [disabled]=\"saveDisabled\" (click)=\"save.emit()\">\r\n            {{ saveText }}\r\n        </button>\r\n        <button type=\"button\" mat-button (click)=\"exit.emit()\">Exit</button>\r\n    </div>\r\n</form>","import { Component, EventEmitter, Inject, OnInit, Output } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { verifyotpModel } from 'app/shared/models/otp.model';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\n\r\n@Component({\r\n  selector: 'app-otp-verify',\r\n  templateUrl: './otp-verify.component.html',\r\n  styleUrls: ['./otp-verify.component.scss']\r\n})\r\nexport class OtpVerifyComponent implements OnInit {\r\n  errormsg : string;\r\n  basicInformationForm: FormGroup;\r\n  public number;\r\n  public type;\r\n  title: string;\r\n  customerPhoneNum: string;\r\n  verifyOtpModel = new verifyotpModel();\r\n  @Output() afterSubmit : EventEmitter<boolean> = new EventEmitter();\r\n  \r\n  constructor(private dialogRef: MatDialogRef<OtpVerifyComponent>, private apiService: ApiService,\r\n    private snack: MatSnackBar,private fb: FormBuilder,private router: Router,\r\n    @Inject(MAT_DIALOG_DATA) private data: any) { }\r\n\r\n  ngOnInit(): void {\r\n    this.title = \"An OTP has been sent to the Registered Mobile Number!\";\r\n    this.basicInformationForm = this.fb.group({\r\n      otp: ['',[Validators.required]],\r\n    \r\n    })\r\n  }\r\n  closeClick(){\r\n    this.dialogRef.close();\r\n  }\r\n  validateOtp(otpValue) {\r\n    console.log(\"OTP validaion\", otpValue);\r\n    if(otpValue.otpNumber ==\"\")\r\n    {\r\n      this.snack.open(`Please enter OTP to continue`, 'OK', {\r\n        duration: 4000,\r\n        verticalPosition: 'bottom',\r\n        horizontalPosition: 'right'\r\n      }); \r\n    }\r\n    else{\r\n    this.customerPhoneNum = localStorage.getItem(\"phonenumFromLogin\");\r\n    console.log(\"Phonenumber from Local\", this.customerPhoneNum, otpValue);\r\n    this.verifyOtpModel.sourceKey = 'mobile';\r\n    this.verifyOtpModel.sourceValue = this.customerPhoneNum;\r\n    this.verifyOtpModel.otp = otpValue.otp;\r\n    this.verifyOtpModel.type = '';\r\n    this.verifyOtpModel.isMobileLogin= false;\r\n    console.log(\"model\", this.verifyOtpModel);\r\n    this.apiService.verifyOtp(this.verifyOtpModel).subscribe(otpResp => {\r\n      console.log('otpResp :: ',otpResp)\r\n      if (otpResp.data != null) {\r\n        if(otpResp.data.userId != '' && otpResp.data.userId !=null && otpResp.data.status =='SUCCESS' ){\r\n          this.afterSubmit.emit(true);\r\n          localStorage.setItem('userId',otpResp.data.userId);\r\n          this.snack.open(`Validation successful`, 'OK', {\r\n            duration: 4000,\r\n            verticalPosition: 'bottom',\r\n            horizontalPosition: 'right'\r\n          });\r\n          this.dialogRef.close(true);\r\n        }else{\r\n          this.dialogRef.close(false);\r\n          this.snack.open(`${otpResp.data.responseMessage}`, 'OK', {\r\n            duration: 4000,\r\n            verticalPosition: 'bottom',\r\n            horizontalPosition: 'right'\r\n          });\r\n        }\r\n      }\r\n    },\r\n      (error) => {\r\n        console.log(error.status);\r\n        // this.errorStatus = error.status;\r\n        this.snack.open(`Incorrect OTP. Please try again.`, 'OK', {\r\n          duration: 4000,\r\n          verticalPosition: 'bottom',\r\n          horizontalPosition: 'right'\r\n        });\r\n        // if (this.errorStatus == 200) {\r\n        //   // this.router.navigateByUrl('/others/services');\r\n        //   /* TO-DO: need to uncomment this for fingerprint verification */\r\n        //   // this.openDialog();\r\n        // }\r\n      });\r\n    }\r\n  }\r\n}\r\n","\r\n\r\n\r\n  <button mat-button id=\"close\" mat-dialog-close (click)=\"closeClick()\">\r\n    <mat-icon class=\"closeicon\">close</mat-icon>\r\n  </button>\r\n \r\n\r\n<form [formGroup]=\"basicInformationForm\">\r\n\r\n<div fxLayout=\"row\">\r\n \r\n  <div class=\"pd-2\" id=\"box\">\r\n    \r\n    <span class=\"verification\">{{title}}</span> \r\n  <span class=\"phoneNumber\">{{this.number}}</span>\r\n  <span class=\"verify\">Please enter the OTP  to verify</span>\r\n  <div class=\"flex-grow-1\">\r\n \r\n    <mat-card type=\"input\" class=\"inputMatcard\">\r\n        <input matInput  id=\"otp\" \r\n        class=\"alignment\"  \r\n        type=\"number\"  \r\n        maxlength=\"6\" \r\n        oninput=\"this.value = this.value.slice(0, this.maxLength);\" \r\n        formControlName=\"otp\">\r\n    </mat-card>\r\n    \r\n   \r\n</div>\r\n<span class=\"verify1\">Not Recieved?<span id=\"resend\" > &nbsp; Resend</span></span>\r\n<!-- (click)=\"getOtp()\" -->\r\n</div>\r\n \r\n</div>\r\n\r\n  <button class=\"button\" mat-stroked-button [disabled]=\"!basicInformationForm.valid\"\r\n   (click)=\"validateOtp(basicInformationForm.value)\">Proceed</button>\r\n</form>\r\n\r\n","import { Country } from '@angular-material-extensions/select-country';\r\nimport { getCurrencySymbol } from '@angular/common';\r\nimport { Component, Input, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\n// import { cashWithdrawDto } from 'app/shared/models/cashWithdrawDTO';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { DialogService, TokenObjects } from 'app/shared/services/Dialog/dialog.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { formatNumber } from '@angular/common';\r\nimport { ChangeDetectorRef } from '@angular/core';\r\n\r\nimport { ElementRef, Renderer2 } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { ViewChild } from '@angular/core';\r\nimport { otpModel } from 'app/shared/models/otp.model';\r\nimport { OtpVerifyComponent } from '../otp-verify/otp-verify.component';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { ThrowStmt } from '@angular/compiler';\r\n\r\n@Component({\r\n  selector: 'app-cash-withdrawal',\r\n  templateUrl: './cash-withdrawal.component.html',\r\n  styleUrls: ['./cash-withdrawal.component.scss']\r\n})\r\nexport class CashWithdrawalComponent implements OnInit {\r\n  // cashWithdrawDto = new cashWithdrawDto();\r\n  cashWithdrawal : any = 'Cash Withdrawal';\r\n  cashwithdrawForm: FormGroup;\r\n\r\n  @Input() tokenResp : any;\r\n  operation : string;\r\n \r\n  countryFormControl = new FormControl();\r\n  defaultValue: Country = {\r\n    name: 'Deutschland',\r\n    alpha2Code: 'DE',\r\n    alpha3Code: 'DEU',\r\n    numericCode: '276',\r\n    callingCode: '+49'\r\n  };\r\n  ifQRvariable = false;\r\n  index: string[];\r\n  cashWithdrawResponse: any;\r\n  productCode = \"CHW\";\r\n  tokenOrigin = \"Kiosk\";\r\n  custPref = \"N\";\r\n  entityCode=\"ENTCD\";\r\n  bankCode = \"BNKC\" ;\r\n  tokenBranch = \"1234\" ;\r\n  accountNum: string;\r\n  accountBal: any;\r\n  phoneNumber: string;\r\n  errorStatus: number;\r\n  custAccountData: any;\r\n  countryValues: any;\r\n  accounttypeArray =[];\r\n\r\n  @ViewChild('cdForm') cdForm: NgForm;\r\n\r\n  \r\n  idList = [];\r\n  noList: any[];\r\n  accNum: any;\r\n  denomCodeArray: any[] = [\r\n    { key: 'count2000', value: 2000 },\r\n    { key: 'count500', value: 500 },\r\n    { key: 'count200', value: 200 },\r\n    { key: 'count100', value: 100 },\r\n    { key: 'count50', value: 50 },\r\n    { key: 'count20', value: 20 },\r\n    { key: 'count10', value: 10 },\r\n    { key: 'count1', value: 1 }\r\n\r\n  ];\r\n  totalAmount: any;\r\n  transamount: any;\r\n  a: any;\r\n  tokenObjects =new TokenObjects();\r\n  accNumber: any;\r\n  appointmentId:any;\r\n  tokResponse: any;\r\n  tokenNum: any;\r\n  estimatedTime: any;\r\n  transAmt: any;\r\n  balance: string;\r\n  enableContinue: boolean=true;\r\n  isedit:boolean=true;\r\n  accountCurrency: any;\r\n  curr: string;\r\n  transAmount:string;\r\n  currencyImage: any = \"\";\r\n  custID: any;\r\n  qrData: any;\r\n  customerID: any;\r\n  selected: string;\r\n  userName: string;\r\n  branchNameFromLogin: string;\r\n  branchName: string;\r\n  arrayAccountBranch: any;\r\n  trasactionBranches: any;\r\n  branchData: any;\r\n  branch: any;\r\n  resultStatus: any;\r\n  // accountNoList[]: any[];\r\n  accountNoList = [];\r\n  selectedAccountInfo: any;\r\n  showAccountNum : boolean = true;\r\n  showAccoutType : boolean = true;\r\n  custValidation: string;\r\n  accountNumber: string;\r\n  custmerID: any;\r\n  phonenum: any;\r\n  oTpModel = new otpModel();\r\n  cashwithDrwValues: any;\r\n  cashwithDrwform: any;\r\n  cashwithDrwType: any;\r\n  enableBtn: boolean = true;\r\n  enableBtn1: boolean = false;\r\n  accountNum1: any[];\r\n  filteredAccoun: any[];\r\n  accountDropdown: boolean = false;\r\n  flag1: boolean=false;\r\n  denomRequired: any = '';\r\n  hideDetails:boolean=false;\r\n  qrBranchCode: any;\r\n  custNameFromLogin: string;\r\n  totalTransAmount: number;\r\n  chargeDetails: any;\r\n  cashData: any;\r\n  transBranch: string;\r\n\r\n  constructor\r\n  (\r\n    private router : Router,\r\n    private formBuilder: FormBuilder, \r\n    private dialogService : DialogService,\r\n    private apiService:ApiService,\r\n    private fb: FormBuilder,\r\n    private ls: LocalStoreService,\r\n    private snack: MatSnackBar,\r\n    private changeDef: ChangeDetectorRef,\r\n    private elRef: ElementRef,\r\n    private renderer: Renderer2,\r\n    private dialog: MatDialog,\r\n    private cdr:ChangeDetectorRef,\r\n    ) { }\r\n  ngOnInit() {\r\n    this.phoneNumber = localStorage.getItem(\"phonenumFromLogin\");\r\n    this.appointmentId = this.ls.getItem(\"TransactionType\");\r\n    this.transBranch=localStorage.getItem(\"TRANSACTIONBRANCH\") ;\r\n    \r\n    \r\n    this.qrData = JSON.parse(JSON.parse(localStorage.getItem('scannerData')));\r\n    console.log(\"QRData\", this.qrData);\r\n    this.cashwithdrawForm = this.fb.group({\r\n    transactionId:['', [Validators.required]],\r\n    customerId:['', [Validators.required]],\r\n    accountNumber:['', [Validators.required]],\r\n    accountType:['', [Validators.required]],\r\n    holderName :['', [Validators.required]], \r\n    accountCurrency:['', [Validators.required]],\r\n    transactionCurrency: ['', [Validators.required]],\r\n    transactionAmount:['', [Validators.required, Validators.min(.1)]],\r\n    accountBalance:[''],\r\n    productCode:['CHW',[Validators.required]],\r\n    tokenOrigin : ['Kiosk',[Validators.required]],\r\n    exchangeRate:['', [Validators.required]],\r\n    accountAmount:['', [Validators.required]],\r\n    totalChargeAmount:['', [Validators.required]],\r\n    totalTransactionAmount:['',[Validators.required]],\r\n    narrative:['', [Validators.required]],\r\n    denomination:[null, [Validators.required]],\r\n    totalAmount:['', [Validators.required]],\r\n    entityCode:[this.entityCode,[Validators.required]],\r\n    bankCode:[this.bankCode,[Validators.required]],\r\n    tokenBranch:[this.tokenBranch,[Validators.required]],\r\n    customerCategory:[this.custPref,[Validators.required]],\r\n    tokenNumber:['', [Validators.required]],\r\n    estimatedWaitTime:['', [Validators.required]],\r\n     accountBranch: ['', [Validators.required]],\r\n      transactionBranch:['', [Validators.required]]\r\n    //transAmt: ['', [Validators.required, Validators.pattern(/\\B(?=(\\d{3})+(?!\\d))/g.',')]],\r\n    \r\n    });\r\n    this.custValidation = localStorage.getItem(\"customerValidation\");\r\n    this.custNameFromLogin = localStorage.getItem(\"FromLogin\");\r\n    if(this.custValidation == \"New Customer\"){\r\n      this.showAccountNum = false;\r\n      this.showAccoutType = false;\r\n    } \r\n    if(this.custNameFromLogin!=null){\r\n      this.showAccountNum=false;\r\n    } \r\n     console.log(\"CWH :: \" + this.cashwithdrawForm.value);\r\n     if(this.phoneNumber && this.custNameFromLogin==null && this.appointmentId==null){\r\n       this.ifQRvariable = false;\r\n      this.gettingallTansactionDetails(this.phoneNumber);\r\n      }\r\n      // else{\r\n        if(this.qrData!=null){\r\n        // ;\r\n        this.ifQRvariable = true;\r\n        console.log(\"Account\", this.qrData);\r\n        this.cashwithdrawForm.controls.holderName.setValue(this.qrData.holderName);\r\n        this.cashwithdrawForm.controls.accountType.setValue(this.qrData.accountType);\r\n        this.cashwithdrawForm.controls.accountNumber.setValue(this.qrData.accountId);\r\n        this.getChargeDetails(this.qrData.accountId,'');\r\n        this.cashwithdrawForm.controls.transactionAmount.setValue(this.qrData.transactionAmount);\r\n        this.cashwithdrawForm.controls.accountCurrency.setValue(this.qrData.accountCurrency);\r\n        this.cashwithdrawForm.controls.transactionCurrency.setValue(this.qrData.transactionCurrency);\r\n        this.accountBal = this.qrData.accountBalance;\r\n        this.customerID = this.qrData.customerId;\r\n        this.currencyImage = 'currency-flag-'+this.qrData.accountCurrency.toLowerCase();\r\n        this.currencyImage = 'currency-flag-'+this.qrData.transactionCurrency.toLowerCase();\r\n        if(this.qrData.transactionBranch !=null && this.qrData.transactionBranch !=''){\r\n          this.cashwithdrawForm.controls.transactionBranch.setValue(this.qrData.transactionBranch);\r\n        }else{\r\n          this.cashwithdrawForm.controls.transactionBranch.setValue('Kasturi Nagar');\r\n        }\r\n        \r\n        this.getAccountBranch();\r\n      }\r\n     this.getCountrynameValues();\r\n     this.getAccountBranch();\r\n    this.gettransactionBranch(\"account_branch\");\r\n    this.getBankInformation(\"KN\")\r\n    if(this.appointmentId.data.appointmentId){\r\n      this.cashWithdrawlData();\r\n    }\r\n  }\r\n  fetchByAccountNum(accNum){\r\n    this.cashwithdrawForm.controls.transactionAmount.reset();\r\n    this.cashwithdrawForm.controls.totalTransactionAmount.setValue(this.cashwithdrawForm.controls.totalChargeAmount.value);\r\n    console.log(\"Account Numebr\",accNum);\r\n    this.ifQRvariable = true;\r\n    this.apiService.fetchByaccNum(accNum).subscribe((res: any) => {\r\n      if(accNum != res?.accountId || res.accountId == null){\r\n        console.log('statement');\r\n        \r\n        this.snack.open(\"Account Number Doesn't Exist\" , \"OK\", {\r\n          duration: 4000,\r\n          verticalPosition: 'bottom',\r\n          horizontalPosition: 'right'\r\n        });\r\n        this.cashwithdrawForm.reset();\r\n        this.userName='';\r\n        this.accountBal ='';\r\n        this.curr ='';\r\n      }else{\r\n      console.log('Account Number Rsp', res);\r\n      this.getChargeDetails(accNum,'');\r\n      this.userName = res.accHolderName;\r\n      this.accountBal = res.accBalance;\r\n      this.custmerID = res.customerId;\r\n      this.accountNumber = res.accountId;\r\n      this.accountCurrency = res.accountCurrency\r\n      this.curr = getCurrencySymbol(res.currency, \"narrow\");\r\n      this.cashwithdrawForm.controls.accountType.setValue(res.accountType);\r\n      this.cashwithdrawForm.controls.accountBranch.setValue(res.accountBranch);\r\n      this.cashwithdrawForm.controls.holderName.setValue(this.userName); \r\n      this.getCountrynameValues();\r\n      // this.currencyImage = 'currency-flag-'+res.currency.toLowerCase();\r\n      this.currencyImage = 'currency-flag-'+res.currency.toLowerCase();\r\n      this.cashwithdrawForm.controls.transactionCurrency.setValue(res.currency);\r\n      this.cashwithdrawForm.controls.accountCurrency.setValue(res.currency);\r\n\r\n      console.log(this.ifQRvariable);\r\n      this.custAmountBal(accNum);\r\n      this.cashwithdrawForm.controls.transactionBranch.setValue('Kasturi Nagar');\r\n      }\r\n      this.apiService.fetchByaccDeatilsoncustId(res.customerId).subscribe((resp: any) => {\r\n        this.phonenum = resp[0].phoneNumber;\r\n        localStorage.setItem('otpPhoneNum', this.phonenum);\r\n      }) \r\n  });\r\n\r\n}\r\n\r\n  \r\n//  numberWithCommas = (transAmt) => {\r\n//   return transAmt.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\r\n//   console.log(transAmt);\r\n//   }\r\n  gettransactionBranch(key: string) {\r\n    this.apiService.getTransactionBranch(key)\r\n      .subscribe(branches => {\r\n        console.log('branches :: ', branches);\r\n        this.trasactionBranches = branches;\r\n       \r\n      })\r\n  }\r\n  getAccountBranch() {\r\n    this.apiService.getBranchforKiosk()\r\n      .subscribe((data: any) => {\r\n        this.branchData = data;\r\n          console.log( this.branchData);\r\n          data.forEach((element,index)=>{\r\n            this.branch = data[index].branchName;\r\n            console.log(this.branch);\r\n            // this.cashwithdrawForm.controls.accountBranch.setValue(this.branch);\r\n         });      \r\n      });\r\n  }\r\n\r\n  \r\n  getCountrynameValues() {\r\n    this.apiService.getCountryValues().subscribe((allCountryValues : any)=> {\r\n      this.countryValues = allCountryValues;\r\n      console.log(this.countryValues);\r\n      });\r\n  }\r\n\r\n\r\n\r\n  onCountrySelected($event: Country): void {\r\n    // console.log($event.alpha3Code);\r\n  }\r\n  gettingallTansactionDetails(phoneNumber) {\r\n    \r\n    this.phoneNumber = localStorage.getItem(\"phonenumFromLogin\");\r\n    this.apiService.gettingTransactionDetails(this.phoneNumber).subscribe((allTransactionResp : any)=> {\r\n    console.log(\"All Transaction Details\",allTransactionResp);\r\n    this.userName = (allTransactionResp.firstName ? allTransactionResp.firstName + ' ' : ' ') + \r\n    (allTransactionResp.middleName ? allTransactionResp.middleName + ' ' : ' ') +\r\n     (allTransactionResp.lastName ? allTransactionResp.lastName : ' ');\r\n    this.cashwithdrawForm.controls.holderName.setValue(this.userName);\r\n    // this.setBalance(allTransactionResp.custAccount);\r\n    this.custID = allTransactionResp.customerId;\r\n    console.log(\"Cust\", this.custID);\r\n    this.custAccountData = allTransactionResp.custAccount;\r\n    this.accounttypeArray = [...this.custAccountData].filter(({accountType},index )=> \r\n    ![...this.custAccountData].map(obj=> obj.accountType).includes(accountType, index +1));\r\n    console.log(this.accounttypeArray)\r\n    for(let i = 0; i < this.custAccountData.length; i++){\r\n      if(this.custAccountData[i].status == 'APPROVED'){\r\n        this.accountNoList.push(this.custAccountData[i]);    \r\n      }\r\n    }\r\n    console.log(this.accountNoList);\r\n    if(this.custAccountData && this.accountNoList.length<=1){\r\n      this.accountDropdown=false;\r\n      this.hideDetails=true;\r\n      const accTyp = allTransactionResp.custAccount[0].accountType;\r\n      this.cashwithdrawForm.controls.accountType.setValue(accTyp);\r\n      this.custAccountNumber(this.accountNoList[0]);\r\n    }else{\r\n      this.accountDropdown=true;\r\n      this.hideDetails=true;\r\n      const accTyp = allTransactionResp.custAccount[0].accountType;\r\n      this.cashwithdrawForm.controls.accountType.setValue(accTyp);\r\n      this.custAccountNumber(allTransactionResp.custAccount[0]);\r\n    }\r\n  \r\n    });\r\n\r\n    \r\n  }\r\n  getAccountType(event:any){\r\n    this.cashwithdrawForm.controls.transactionAmount.reset();\r\n    this.cashwithdrawForm.controls.totalTransactionAmount.setValue(this.cashwithdrawForm.controls.totalChargeAmount.value);\r\n    this.accountNoList=[];\r\n    this.isedit=false;\r\n    this.accountNum1=[...this.custAccountData].filter((accounNum,index)=>{\r\n      return accounNum.accountType==event;\r\n    });\r\n    // this.accountNoList=this.accountNum1\r\n    // this.accountNoList=this.accountNum1.map((acccount)=>\r\n    // {\r\n    //   return acccount.accountId\r\n    // });\r\n    for(let i = 0; i < this.custAccountData.length; i++){\r\n      if(this.custAccountData[i].status == 'APPROVED' && this.custAccountData[i].accountType == event){\r\n        this.accountNoList.push(this.custAccountData[i].accountId);    \r\n      }\r\n    }\r\n   // this.accountNoList.push(12233)\r\n   console.log(this.accountNoList)\r\n   \r\n    if(this.accountNoList.length<=1){\r\n      // this.cashwithdrawForm.controls.accountNumber.patchValue(this.accountNoList[0]);\r\n      this.flag1=false; \r\n      this.getData(this.accountNoList[0]);\r\n     \r\n      this.cashwithdrawForm.controls.accountNumber.setValue(this.accountNoList[0]);\r\n    }\r\n    else{\r\n      this.getData(this.accountNoList[0]);\r\n      this.flag1=true;   \r\n    }\r\n    this.getChargeDetails(this.accountNoList[0],'');\r\n  }\r\n  custAccountNumber(custype){\r\n    console.log('custype :: ',custype);\r\n    this.isedit=false;\r\n   this.idList = [...this.custAccountData].filter(item => item.accountType === custype.accountType);\r\n  //  const defaultId = this.idList ? this.idList[0] : null;\r\n   console.log(\"idList :: \", this.idList);\r\n    this.accountNoList = [];\r\n   for(let i = 0; i < this.idList.length; i++){\r\n      if(this.idList[i].status == 'APPROVED'){\r\n        this.accountNoList.push(this.idList[i].accountId);    \r\n      }\r\n    }\r\n    console.log('accountNoList :: ',this.accountNoList);\r\n    if(this.accountNoList.length<=1){\r\n      // this.cashwithdrawForm.controls.accountNumber.patchValue(this.accountNoList[0]);\r\n      this.flag1=false; \r\n      // this.getData(this.accountNoList[0]);\r\n      this.cashwithdrawForm.controls.accountNumber.setValue(this.accountNoList[0]);\r\n    }\r\n    else{\r\n      this.cashwithdrawForm.controls.accountNumber.setValue(this.accountNoList[0]);\r\n      this.flag1=true;   \r\n    }\r\n  \r\n  //  this.cashwithdrawForm.controls.accountNumber.setValue(defaultId);\r\n  // this.cashwithdrawForm.controls.accountType.setValue(defaultId);\r\n   this.cashwithdrawForm.controls.accountCurrency.setValue(custype.accountCurrency);\r\n   this.cashwithdrawForm.controls.accountBranch.setValue(this.branch);\r\n   //this.cashwithdrawForm.controls.transactionAmount.setValue(custype.amount);\r\n  //  this.cashwithdrawForm.controls.accountType.setValue(custype.accountType);\r\n   console.log(\"AccountCurrency\",custype.accountCurrency);\r\n   \r\n   this.selected=custype.accountCurrency;\r\n    this.curr = getCurrencySymbol(custype.accountCurrency, \"narrow\");\r\n    this.cashwithdrawForm.controls.transactionCurrency.setValue(custype.accountCurrency);\r\n   \r\n    this.currencyImage = 'currency-flag-'+custype.accountCurrency.toLowerCase();\r\n    console.log('data :: ',this.idList[0]);\r\n  //  this.accountBal = this.idList[0].amount;\r\n   console.log(this.accountBal);\r\n   localStorage.setItem(\"AccountBal\",this.accountBal);\r\n  //  this.cashwithdrawForm.controls.accountNumber.setValue(this.idList[0].accountId);\r\n   this.custAmountBal(this.accountNoList[0]);\r\n   this.cashwithdrawForm.controls.accountBranch.setValue(custype.accountBranch);\r\n   this.getChargeDetails(this.accountNoList[0],custype.amount);\r\n  }\r\n  getData(custNum){\r\n    this.hideDetails=true;\r\n    let val=this.accountNum1.filter((value)=>{\r\n    return value.accountId==custNum}\r\n    )\r\n    \r\n    this.idList = [...this.custAccountData].filter(item => item.accountType === val[0].accountType);\r\n    this.cashwithdrawForm.controls.accountCurrency.setValue(val[0].accountCurrency);\r\n   this.cashwithdrawForm.controls.accountBranch.setValue(this.branch);\r\n   this.selected=val[0].accountCurrency;\r\n   this.curr = getCurrencySymbol(val[0].accountCurrency, \"narrow\");\r\n   this.cashwithdrawForm.controls.transactionCurrency.setValue(val[0].accountCurrency);\r\n  \r\n   this.currencyImage = 'currency-flag-'+val[0].accountCurrency.toLowerCase();\r\n  this.accountBal = val[0].amount;\r\n  localStorage.setItem(\"AccountBal\",this.accountBal);\r\n  this.cashwithdrawForm.controls.accountNumber.setValue(val[0].accountId);\r\n\r\n  this.custAmountBal(val[0].accountId);\r\n  this.cashwithdrawForm.controls.accountBranch.setValue(val[0].accountBranch);\r\n  this.getChargeDetails(val[0].accountId,'')\r\n  }\r\n  custAmountBal(custNum){\r\n    var account = this.idList.filter(function(record) {  \r\n      if(record.accountId == custNum){\r\n      return record;\r\n    }\r\n  });\r\n    this.accNum = account[0].accountId;\r\n    this.accountBal = account[0].amount;\r\n    this.selectedAccountInfo=account[0]\r\n    console.log(this.accountBal);\r\n    localStorage.setItem(\"AccountBal\",this.accountBal);\r\n  }\r\n  \r\n  getOTP(formData, type, cdForm){\r\n    this.cashwithDrwValues =formData;\r\n    this.cashwithDrwType = type;\r\n    this.cashwithDrwform = cdForm; \r\n    this.oTpModel.source = 'customer';\r\n    this.oTpModel.source_key = 'mobile';\r\n    this.oTpModel.source_value = this.phonenum;\r\nlet amount= 50000;\r\nlet transamountwithoutcomma=this.cashwithDrwValues.transactionAmount.replace(/,/g, \"\");\r\nconsole.log( transamountwithoutcomma);\r\nif(transamountwithoutcomma > amount){\r\n  this.apiService.getOtp(this.oTpModel).subscribe(otpResp => {\r\n    if (otpResp) {\r\n      this.openDialogOTP(this.phonenum);\r\n      this.snack.open(\"An OTP has been sent to the Registered Mobile Number.\" , \"\", {\r\n        duration: 4000,\r\n        verticalPosition: 'top',\r\n        horizontalPosition: 'right'\r\n      });\r\n    }\r\n  })\r\n}\r\nelse{\r\n  this.getOTPforSave(this.cashwithDrwValues,this.cashwithDrwType,this.cashwithDrwform);\r\n}\r\n  \r\n  }\r\n \r\n  openDialogOTP(numbr) {\r\n    const dialogRef = this.dialog.open(OtpVerifyComponent, {\r\n      data: { number: numbr, type: \"numbr\" },\r\n      disableClose: true,\r\n    });\r\n    dialogRef.afterClosed().subscribe(submit => {\r\n      console.log(\"submit\",submit);\r\n      if(submit){\r\n        this.getOTPforSave(this.cashwithDrwValues,this.cashwithDrwType,this.cashwithDrwform);\r\n      }\r\n     });\r\n  }\r\n  getOTPforSave(formData,type,cdForm){\r\n    let denominationData: any = {};\r\n        let denominationDataArray: any[] = [];\r\n        if(this.denomRequired == 'yes'){\r\n        for (let i = 0; i < this.denomCodeArray.length; i++) {\r\n          if (cdForm.value[this.denomCodeArray[i].key]) {\r\n            // denominationData.transactionId = this.cashdepositFor;\r\n            denominationData.denominationKey = this.denomCodeArray[i].value;\r\n            denominationData.denominationValue = +cdForm.value[this.denomCodeArray[i].key];\r\n            denominationData.currency = this.cashwithdrawForm.value.transactionCurrency;\r\n            // denominationData.amountAvailiable = 15200 - (cdForm.value[this.denomCodeArray[i].key] * this.denomCodeArray[i].value);\r\n            denominationDataArray.push(denominationData);\r\n            console.log(denominationDataArray)\r\n            denominationData = {};\r\n          }\r\n        }\r\n      }\r\n     if(this.custValidation == \"New Customer\"){\r\n     this.accountNum = formData.accountNumber;\r\n     formData.customerId = this.custmerID?this.custmerID:0;\r\n   \r\n     \r\n     formData.accountCurrency = formData.accountCurrency;\r\n     formData.transactionCurrency = formData.transactionCurrency;\r\n     formData.transactionAmount = formData.transactionAmount.replace(/,/g, '');\r\n   \r\n     formData.productCode = this.productCode;\r\n     formData.tokenOrigin = this.tokenOrigin;\r\n     formData.accountBalance = this.accountBal;\r\n\r\n     if(this.denomRequired == 'yes'){\r\n     formData.denomination = denominationDataArray;\r\n     }\r\n    }\r\n    if(this.appointmentId && this.appointmentId.data){\r\n      formData.transactionId = this.appointmentId.data.transactionId;\r\n      formData.transactionStatus = this.appointmentId.data.transactionStatus;\r\n    }\r\n    formData.customerId = this.custmerID?this.custmerID:0;\r\n    formData.transactionBranch = this.transBranch;\r\n    formData.transactionAmount = formData.transactionAmount.replace(/,/g, '');\r\n    formData.accountType = formData.accountType;\r\n    formData.accountNumber = this.accountNumber;\r\n    formData.holderName = formData.holderName;\r\n    formData.productCode = this.productCode;\r\n    formData.tokenOrigin = this.tokenOrigin;\r\n    formData.accountBalance = this.accountBal;\r\n    console.log(formData.transactionId,formData.transactionStatus)\r\n        console.log(\"before api call :: \",formData);\r\n      this.apiService.saveofCashwithdraw(formData).subscribe(cashWithdrawResp=>{\r\n        console.log( \"Response Success, Data Saved\", cashWithdrawResp);\r\n        this.cashWithdrawResponse = cashWithdrawResp;\r\n        this.tokenNum = this.cashWithdrawResponse.tokenNumber;\r\n        this.estimatedTime = this.cashWithdrawResponse.estimatedWaitTime;\r\n        localStorage.setItem(\"tokenNumer\",this.tokenNum);\r\n        localStorage.setItem(\"estimatedTiming\",this.estimatedTime);\r\n        this.enableContinue=false;\r\n        if(this.cashWithdrawResponse){\r\n        this.dialogService.tokenGenerationDialog();\r\n        }\r\n      });\r\n  \r\n     }\r\n\r\n  \r\n\r\n  goToServiceScreens(){\r\n    if(this.appointmentId){\r\n    if(this.appointmentId.data.appointmentId){\r\n      this.router.navigateByUrl('/sessions/login');\r\n      localStorage.removeItem(\"FromLogin\")\r\n      localStorage.removeItem(\"TransactionType\")\r\n      localStorage.removeItem(\"customerId\")\r\n      localStorage.removeItem(\"phonenumFromLogin\")\r\n      localStorage.removeItem(\"customerValidation\")\r\n      localStorage.removeItem(\"otpPhoneNum\")\r\n      localStorage.removeItem(\"AccountBal\")\r\n      localStorage.removeItem(\"AccountNumber\")\r\n      localStorage.removeItem(\"ProductCode\")\r\n      localStorage.removeItem(\"tokenNumer\")\r\n      localStorage.removeItem(\"estimatedTiming\")\r\n      localStorage.removeItem(\"userId\")\r\n      localStorage.removeItem(\"scannerData\")\r\n      localStorage.removeItem(\"custholderName\")\r\n    }\r\n  }\r\n    else{\r\n      this.router.navigateByUrl('/others/kioskHome');\r\n    }\r\n    \r\n  }  \r\n  goToAuthenticate(){\r\n    this.dialogService.authenticationDialog();\r\n  }\r\n \r\n  onSaveofCashWithdraw(form,type,cdForm){\r\n    form.transactionBranch = this.transBranch;\r\n    if(this.qrData){\r\n      if(this.qrData.transactionBranch){\r\n        this.apiService.fetchBranchInfoByBranchName(this.qrData.transactionBranch).subscribe(response=>{\r\n          this.qrBranchCode=response;\r\n          \r\n        })\r\n      }\r\n    }\r\n  \r\n  let denominationData: any = {};\r\n      let denominationDataArray: any[] = [];\r\n      if(this.denomRequired == 'yes'){\r\n        for (let i = 0; i < this.denomCodeArray.length; i++) {\r\n        if (cdForm.value[this.denomCodeArray[i].key]) {\r\n          // denominationData.transactionId = this.cashdepositFor;\r\n          denominationData.denominationKey = this.denomCodeArray[i].value;\r\n          denominationData.denominationValue = +cdForm.value[this.denomCodeArray[i].key];\r\n          denominationData.currency = this.cashwithdrawForm.value.transactionCurrency;\r\n          // denominationData.amountAvailiable = 15200 - (cdForm.value[this.denomCodeArray[i].key] * this.denomCodeArray[i].value);\r\n          denominationDataArray.push(denominationData);\r\n          console.log(denominationDataArray)\r\n          denominationData = {};\r\n        }\r\n      }\r\n      }\r\n      \r\n      form.tokenBranch = \"KN\";\r\n    if(!this.ifQRvariable){\r\n    this.accountNum=JSON.stringify(this.selectedAccountInfo.accountId);\r\n    form.transactionAmount=form.transactionAmount.replace(/,/g, '');\r\n    localStorage.setItem(\"AccountNumber\",this.accountNum);\r\n    localStorage.setItem(\"ProductCode\",this.productCode);\r\n    form.customerId = this.custID;\r\n    form.transactionCurrency = form.transactionCurrency;\r\n    form.accountNumber = this.selectedAccountInfo.accountId;\r\n    form.productCode = this.productCode;\r\n    form.tokenOrigin = this.tokenOrigin;\r\n    form.accountBalance = this.accountBal;\r\n    form.accountType = form.accountType;\r\n    if(this.denomRequired == 'yes'){\r\n form.denomination=denominationDataArray;\r\n    }\r\n   \r\n    }\r\n    else{\r\n      form.customerId = this.custID;\r\n      form.accountType = form.accountType;\r\n      // form.accountNumber = this.selectedAccountInfo.accountId\r\n      form.accountNumber = form.accountNumber;\r\n      form.holderName=  form.holderName;\r\n      form.accountCurrency  =form.accountCurrency;\r\n      form.transactionCurrency = form.transactionCurrency;\r\n      form.transactionAmount = form.transactionAmount;\r\n      form.productCode = this.productCode;\r\n      form.tokenOrigin = this.tokenOrigin;\r\n      if(this.denomRequired == 'yes'){\r\n        form.denomination=denominationDataArray;\r\n      }\r\n      if(this.qrData){\r\n        if(this.qrData.transactionBranch){\r\n          form.tokenBranch = this.qrBranchCode.transactionBranch;\r\n        }\r\n      }\r\n      \r\n      form.accountBalance = this.accountBal;\r\n    }\r\n    if(this.appointmentId && this.appointmentId.data){\r\n      form.transactionId = this.appointmentId.data.transactionId;\r\n      form.transactionStatus = this.appointmentId.data.transactionStatus;\r\n    }\r\n\r\n    console.log(form.transactionId,form.transactionStatus);\r\n    console.log(\"before api call :: \",form);\r\n    this.apiService.saveofCashDeposit(form).subscribe(cashWithdrawResp=>{\r\n      console.log( \"Response Success, Data Saved\", cashWithdrawResp);\r\n      this.cashWithdrawResponse = cashWithdrawResp;\r\n      this.tokenNum = this.cashWithdrawResponse.tokenNumber;\r\n      this.estimatedTime = this.cashWithdrawResponse.estimatedWaitTime;\r\n      localStorage.setItem(\"tokenNumer\",this.tokenNum);\r\n      localStorage.setItem(\"estimatedTiming\",this.estimatedTime);\r\n      this.enableContinue=false;\r\n      if(this.cashWithdrawResponse){\r\n      this.dialogService.tokenGenerationDialog();\r\n      }\r\n    });\r\n    \r\n  //   this.tokenObjects.productCode = this.productCode;\r\n  //   this.tokenObjects.accountNumber = form.accountNumber;\r\n  //   console.log(this.tokenObjects.accountNumber);\r\n  //   if(this.tokenObjects.productCode !== null || this.tokenObjects.accountNumber !==null){\r\n  //   this.apiService.generateToken(this.tokenObjects).subscribe(tokenResp=>{\r\n  //     console.log( \"Token Generated\", tokenResp);\r\n  //     this.tokResponse = tokenResp;\r\n  //     if(this.tokResponse){\r\n  //       this.tokenNum = this.tokResponse.tokenNumber;\r\n  //       this.estimatedTime = this.tokResponse.estimatedWaitTime;\r\n  //       localStorage.setItem(\"tokenNumer\",this.tokenNum);\r\n  //       localStorage.setItem(\"estimatedTiming\",this.estimatedTime);\r\n  //       form.tokenNo = this.tokenNum;\r\n  //       form.customerId = this.ls.getItem(\"customerId\");\r\n  //       this.apiService.saveofCashDeposit(form).subscribe(cashWithdrawResp=>{\r\n  //         console.log( \"Response Success, Data Saved\", cashWithdrawResp);\r\n  //         this.cashWithdrawResponse = cashWithdrawResp;\r\n  //         console.log(this.cashWithdrawResponse);\r\n  //         // this.cashwithdrawForm.reset();\r\n  //         this.enableContinue=false;\r\n  //         // this.ngOnInit();\r\n  //         this.dialogService.tokenGenerationDialog();\r\n  //       });\r\n  //     }\r\n  //   });\r\n  // }\r\n\r\n   }\r\n\r\n checkValue(event) {\r\n  if (event.target.value < 0) {\r\n    event.target.value = 0;\r\n  }\r\n}\r\n\r\nOnInput(event: any) {\r\n  this.transAmt= event.target.value;\r\nconsole.log(event.target.value);\r\nthis.totalAmount = 0;\r\n// this.denomRequired='yes';\r\n  // comma separator using changeDetector\r\n  const savedInput = this.transAmount;\r\n  // this.transAmount = '';\r\n  // this.changeDef.detectChanges();\r\n\r\n  \r\nlet lastCharIsPoint = false;\r\nif (savedInput.charAt(savedInput.length - 1) === '.') {\r\n  lastCharIsPoint = true;\r\n}\r\nconst num = savedInput.replace(/[^0-9.]/g, '');\r\n\r\n\r\nthis.transAmt = Number(num) || '';\r\nthis.transAmount = this.transAmt.toLocaleString('en-IN');\r\nif (lastCharIsPoint) {\r\n  this.transAmount = this.transAmount.concat('.');\r\n}\r\nthis.changeDef.detectChanges();\r\n\r\n  this.balance= localStorage.getItem(\"AccountBal\");\r\n  if(parseFloat(this.balance) < parseFloat(this.transAmt)){\r\n    console.log(\"Bigger\")\r\n    this.snack.open(`Transaction Amount should not exceed than Account Balance`, 'OK', {\r\n      duration: 2000,\r\n      verticalPosition: 'top',\r\n      horizontalPosition: 'right'\r\n    });\r\n    this.enableContinue=false;\r\n  }\r\n  else{\r\n    this.enableContinue=true;\r\n  }\r\n  this.totalTransAmount=Number(this.transAmt) + Number(this.chargeDetails?this.chargeDetails[0].amount:'');\r\n  this.cashwithdrawForm.controls.totalTransactionAmount.setValue(this.totalTransAmount);\r\n  this.cdr.markForCheck();\r\n  this.cdr.detectChanges();\r\n  }\r\n\r\n  clicked(event){\r\n    // console.log(event);\r\n  }\r\n  addCurrencyImage(currency) {\r\n    return currency.toLowerCase();\r\n  }\r\n\r\n  onCountryChange(country) {\r\n    let currency = country.currencyCode;\r\n    this.currencyImage = 'currency-flag-'+currency.toLowerCase();\r\n  }\r\n\r\n  accountCurrencyImage(accountCurrency){\r\n    return accountCurrency? 'currency-flag-'+accountCurrency.toLowerCase() : '';\r\n  }\r\n\r\n\r\n  omit_number(event) {\r\n    var key;\r\n    key = event.charCode;\r\n    return ((key > 47 && key < 58));\r\n  }\r\n  totalAmountValue(cdForm) {\r\n    this.a=this.cashwithdrawForm.value.transactionAmount;\r\n    this.a=this.a.replace(/\\,/g,''); // 1125, but a string, so convert it to number\r\n    this.a=parseInt(this.a,10);\r\n\r\n\r\n    this.cashwithdrawForm.value.totalAmount =\r\n      ((cdForm.value.count2000 ? cdForm.value.count2000 * 2000 : 0) +\r\n        (cdForm.value.count500 ? cdForm.value.count500 * 500 : 0) +\r\n        (cdForm.value.count200 ? cdForm.value.count200 * 200 : 0) +\r\n        (cdForm.value.count100 ? cdForm.value.count100 * 100 : 0) +\r\n        (cdForm.value.count50 ? cdForm.value.count50 * 50 : 0) +\r\n        (cdForm.value.count20 ? cdForm.value.count20 * 20 : 0) +\r\n        (cdForm.value.count10 ? cdForm.value.count10 * 10 : 0) +\r\n        (cdForm.value.count1 ? cdForm.value.count1 * 1 : 0)\r\n      );\r\n        this.cashwithdrawForm.value.totalAmount = this.cashwithdrawForm.value.totalAmount;\r\n        console.log(this.cashwithdrawForm.value.totalAmount)\r\n        console.log(this.cashwithdrawForm.value.transactionAmount);\r\n        \r\n        this.transamount=this.cashwithdrawForm.value.transactionAmount;\r\n        this.totalAmount=this.cashwithdrawForm.value.totalAmount.toLocaleString('en-US');\r\n        \r\n          if(this.transamount != this.totalAmount){\r\n          this.enableBtn = false;\r\n        }\r\n        else{\r\n          this.enableBtn = true;\r\n        }\r\n\r\n           if((this.transamount > this.totalAmount) || (this.transamount < this.totalAmount)){\r\n          this.enableBtn1 = true;\r\n        }\r\n        else{\r\n          this.enableBtn1 = false;\r\n        }      \r\n        this.cashwithdrawForm.controls.totalAmount.setValue(this.cashwithdrawForm.value.totalAmount);\r\n        \r\n  }\r\n  cashWithdrawlData(){\r\n  this.apiService.getAppointmentId(this.appointmentId.data.appointmentId).subscribe((resp : any)=> {\r\n    console.log(resp);\r\n    this.cashData=resp.data;\r\n    this.custID=resp.data.customerId;\r\n    this.ifQRvariable = true;\r\n    this.accountCurrency = resp.accountCurrency;\r\n    this.cashwithdrawForm.controls.accountType.setValue(resp.data.accountType);\r\n    this.cashwithdrawForm.controls.accountBranch.setValue(resp.data.accountBranch);\r\n    this.cashwithdrawForm.controls.accountNumber.setValue(resp.data.accountNumber);\r\n    this.getChargeDetails(resp.data.accountNumber,resp.data.transactionAmount);\r\n    this.cashwithdrawForm.controls.accountCurrency.setValue(resp.data.accountCurrency);\r\n    this.cashwithdrawForm.controls.transactionCurrency.setValue(resp.data.transactionCurrency);\r\n    this.cashwithdrawForm.controls.transactionAmount.setValue(resp.data.transactionAmount);\r\n    this.currencyImage = 'currency-flag-'+resp.data.accountCurrency.toLowerCase();\r\n    this.currencyImage = 'currency-flag-'+resp.data.transactionCurrency.toLowerCase();\r\n    \r\n  });\r\n  // this.denomRequired='yes';\r\n}\r\n\r\n\r\ngetChargeDetails(accountId,amount){\r\n  this.apiService.fetchChargeDetails(accountId).subscribe(resp => {\r\nconsole.log(resp);\r\nthis.chargeDetails=resp;\r\nthis.cashwithdrawForm.controls.totalChargeAmount.setValue(this.chargeDetails?this.chargeDetails[0].amount:'');\r\n  });\r\n  if(this.cashData){\r\n  setTimeout(() => {\r\n    this.totalTransAmount=Number(this.cashData.transactionAmount) + Number(this.chargeDetails[0].amount);\r\n    this.cashwithdrawForm.controls.totalTransactionAmount.setValue(this.totalTransAmount);\r\n  }, 1000);\r\n  this.cdr.markForCheck();\r\n  this.cdr.detectChanges();\r\n}\r\nelse{\r\n  console.log(this.chargeDetails)\r\n  amount = 0;\r\n  console.log(amount);\r\n  setTimeout(() => {\r\n    this.totalTransAmount=Number(amount) + Number(this.chargeDetails?this.chargeDetails[0].amount:'');\r\n    console.log(this.totalTransAmount);\r\n    this.cashwithdrawForm.controls.totalTransactionAmount.setValue(this.totalTransAmount);\r\n  }, 1000);\r\n  this.cdr.markForCheck();\r\n  this.cdr.detectChanges();\r\n}\r\n\r\n  // console.log(this.totalTransAmount);\r\n\r\n}\r\n\r\n  getBankInformation(branchCode:any){\r\n    this.apiService.fetchBankInfoByBranchCode(branchCode).subscribe(resp => {\r\n      console.log(resp)\r\n     this.denomRequired = resp.denomRequired\r\n     if(resp.denomRequired == 'yes'){\r\n      this.enableBtn = false;\r\n      this.enableBtn1 = false;\r\n     }\r\n\r\n    })\r\n  }\r\n\r\n  formatAmount(amount) {\r\n    // amount=amount.toString();\r\n    // var lastThree = amount.substring(amount.length - 3);\r\n    // var otherNumbers = amount.substring(0,amount.length-3);\r\n    // if(otherNumbers != '')\r\n    //     lastThree = ',' + lastThree;\r\n    // return String(amount).replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")+ lastThree;\r\n    // return String(amount).replace(en-IN,',');\r\n   if(amount){\r\n    return amount && amount.toString().split('.')[0].length > 3 ? amount.toString().substring(0,amount.toString().split('.')[0].length-3).replace(/\\B(?=(\\d{2})+(?!\\d))/g, \",\") + \",\" + amount.toString().substring(amount.toString().split('.')[0].length-3): amount.toString();\r\n   }\r\n\r\n  }\r\n\r\n}\r\n//  function numberWithCommas(this.transAmt) {\r\n\r\n//    var transAmtArray[0] = transAmtArray[0].toString().split(\".\");\r\n//    transAmtArray[0] = transAmtArray[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n//    return transAmtArray[0].join(\".\");\r\n//  }\r\n//   throw new Error('Function not implemented.');\r\n\r\n\r\n// const numberWithCommas = (transAmt) => {\r\n//   return transAmt.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\r\n//   console.log(transAmt);\r\n//   }\r\n  //  var transAmtArray= numberWithCommas(this.transAmt);\r\n  //  console.log(transAmtArray);\r\n   \r\n  //using formatNumber for comma separator\r\n  //formatNumber(Number(this.transAmt.split(',')), 'en-US', '1.0-0')\r\n","<div class=\"fullcard\">\r\n    <div fxLayout=\"row\">\r\n        <div fxFlex=\"cashwithdrawForm.get('transactionAmount').value > 0? 70% : 100%\">\r\n            <h6 class=\"h1\"><span style=\"color:grey;padding-right: 4px;\">Services</span> <b>></b> <span style=\"padding-left: 4px;\"><b>Cash Withdrawal</b></span></h6>\r\n\r\n            <!-- <h6 class=\"h1\"><span style=\"color:grey\">Services</span> <b>&nbsp;&nbsp; >&nbsp;&nbsp; </b> <span><b>Cash Withdrawal</b></span></h6> -->\r\n            <mat-card  class=\"chequecard topView\">\r\n\r\n                \r\n\r\n                <mat-card-title style=\"padding: 2%;\">\r\n                    <div fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n                        <div>\r\n                            <!-- <img src=\"assets/images/arrow_back.png\" class=\"mat-elevation-z1\" alt=\"\"> -->\r\n                            <mat-icon *ngIf=\"phoneNumber\" class=\"backIcon\" (click)=\"goToServiceScreens()\">\r\n                            arrow_back</mat-icon>\r\n                        </div>&nbsp;&nbsp;\r\n                        <div class=\"card-title\">Cash Withdrawal</div>\r\n                    </div>\r\n                </mat-card-title>\r\n                <mat-card-content>\r\n                    <div class=\"full-width\" style=\"padding: 0% 0% 3% 2%;\">\r\n                        <form [formGroup]=\"cashwithdrawForm\">\r\n                            <div fxLayout=\"column\" fxLayoutGap=\"3%\" fxLayoutAlign=\"space-between none\">\r\n                                <div>\r\n                                    <div fxLayout=\"row wrap\" class=\"flex-container stretch\">\r\n                                        <ng-container>\r\n                                            <div fxFlex=\"25%\" fxFlex.xs=\"100%\" *ngIf=\"showAccountNum\">\r\n                                                <mat-hint class=\"totalAmount\">Account Type*</mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <input matInput type=\"text\" *ngIf=\"phoneNumber && !accountDropdown\"\r\n                                                        [readonly]=\"true\" class=\"full-width\" \r\n                                                        formControlName=\"accountType\">\r\n                                                    <mat-select *ngIf=\"phoneNumber && accountDropdown\"\r\n                                                        formControlName=\"accountType\"\r\n                                                        (selectionChange)=\"getAccountType($event.value)\"\r\n                                                        style=\"background-color: #f9fafb;\"\r\n                                                        placeholder=\"Select Account Type\">\r\n                                                        <mat-option *ngFor=\"let type of accounttypeArray \"\r\n                                                            [value]=\"type.accountType\">{{type.accountType}}</mat-option>\r\n                                                    </mat-select>\r\n                                                    <!-- <mat-select *ngIf=\"phoneNumber && !accountDropdown\" formControlName=\"accountType\" (selectionChange)=\"getAccountType($event.value)\"\r\n                                                        style=\"background-color: #f9fafb;\"\r\n                                                        placeholder=\"Select Account Type\">\r\n                                                        <mat-option *ngFor=\"let type of accounttypeArray \"\r\n                                                        (click)=\"custAccountNumber(type)\"\r\n                                                            [value]=\"type.accountType\">{{type.accountType}}</mat-option>\r\n                                                    </mat-select> -->\r\n                                                    <!-- <input matInput type=\"text\"  [readonly]=\"true\" class=\"full-width\" formControlName=\"accountType\" > -->\r\n\r\n                                                </mat-card>\r\n                                            </div>\r\n                                            <div fxFlex=\"25%\" fxFlex.xs=\"100%\" *ngIf=\"!showAccountNum\">\r\n                                                <mat-hint class=\"totalAmount\">Account Number*</mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <input matInput type=\"text\" class=\"full-width\"\r\n                                                        formControlName=\"accountNumber\"\r\n                                                        (change)=\"fetchByAccountNum(cashwithdrawForm.get('accountNumber').value)\">\r\n                                                </mat-card>\r\n                                                <!-- <mat-hint class=\"totalAmount\" *ngIf=\"!phoneNumber\" >Account Balance :{{curr }} {{accountBal | number: '2.' }}</mat-hint> -->\r\n                                                <mat-hint class=\"totalAmount\" *ngIf=\"!showAccountNum\">Account Balance\r\n                                                    : {{curr }}{{formatAmount(accountBal)}}</mat-hint>\r\n                                                <br>\r\n                                                <!-- <mat-hint  class=\"totalAmount\" *ngIf=\"!phoneNumber\"  [readonly]=\"true\"  formControlName=\"holderName\">Holder Name :{{userName}}</mat-hint> -->\r\n                                                <mat-hint class=\"totalAmount\" *ngIf=\"!showAccountNum\" [readonly]=\"true\">\r\n                                                    Holder Name : {{userName}}</mat-hint>\r\n                                            </div>\r\n                                            <div fxFlex=\"25%\" fxFlex.xs=\"100%\" *ngIf=\"showAccountNum\">\r\n                                                <mat-hint class=\"totalAmount\">Account Number*</mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <input *ngIf=\"!flag1\" matInput type=\"text\" [readonly]=\"true\"\r\n                                                        class=\"full-width\" formControlName=\"accountNumber\"\r\n                                                    >\r\n                                                    <mat-select *ngIf=\"flag1\" formControlName=\"accountNumber\" (selectionChange)=\"fetchByAccountNum($event.value)\"\r\n                                                        style=\"background-color: #f9fafb; \" placeholder=\"Select Account Number\">\r\n                                                        <!-- <mat-option>select</mat-option> -->\r\n                                                        <mat-option *ngFor=\"let id of accountNoList \"\r\n                                                             [value]=\"id\">{{id}}\r\n                                                        </mat-option>\r\n                                                    </mat-select>\r\n                                                </mat-card>\r\n                                                <!-- <mat-hint *ngIf=\"!phoneNumber\"  class=\"totalAmount\" >Account Balance :{{curr }} {{accountBal | number: '2.'}}</mat-hint> -->\r\n                                                <mat-hint *ngIf=\"hideDetails\" class=\"totalAmount\">\r\n                                                    Account Balance : {{curr }}{{formatAmount(accountBal)}}</mat-hint>\r\n\r\n                                                <br>\r\n                                                <!-- <mat-hint  class=\"totalAmount\" *ngIf=\"!phoneNumber\"  [readonly]=\"true\"  formControlName=\"holderName\">Holder Name :{{userName}}</mat-hint> -->\r\n                                                <mat-hint class=\"totalAmount\" *ngIf=\"hideDetails\" [readonly]=\"true\"\r\n                                                    formControlName=\"holderName\">Holder Name : {{userName}}</mat-hint>\r\n                                            </div>\r\n                                            <div fxFlex=\"25%\" fxFlex.xs=\"100%\" *ngIf=\"!showAccountNum\">\r\n                                                <mat-hint class=\"totalAmount\">Account Type*</mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <input matInput type=\"text\" [readonly]=\"true\" class=\"full-width\"\r\n                                                        formControlName=\"accountType\">\r\n\r\n                                                </mat-card>\r\n                                            </div>\r\n                                 \r\n                                            <div fxFlex=\"23%\" fxFlex.xs=\"100%\">\r\n                                                <mat-hint class=\"accountBranch\">Account Branch*</mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <input matInput *ngIf=\"!phoneNumber\" type=\"text\" [readonly]=\"true\"\r\n                                                        class=\"full-width\" formControlName=\"accountBranch\">\r\n\r\n                                                    <input matInput *ngIf=\"phoneNumber\" type=\"text\" [readonly]=\"true\"\r\n                                                        class=\"full-width\" formControlName=\"accountBranch\">\r\n                                                </mat-card>\r\n                                                <!-- <mat-hint class=\"totalAmount\">Account Currency\r\n                                                    : {{selected}}</mat-hint> -->\r\n                                                <mat-error\r\n                                                    *ngIf=\"cashwithdrawForm.get('accountBranch').touched && !cashwithdrawForm.get('accountBranch').valid\">\r\n                                                    Account Branch is Required!\r\n                                                </mat-error>\r\n                                            </div>\r\n                                           \r\n\r\n\r\n                                        </ng-container>\r\n                                    </div>\r\n                                </div>\r\n                                <div>\r\n                                    <div fxLayout=\"row wrap\" class=\"flex-container stretch\">\r\n                                        <ng-container>\r\n\r\n                                            <!-- <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                                <mat-hint class=\"transactionBranch\">Transaction Branch*</mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <mat-select *ngIf=\"phoneNumber\" formControlName=\"transactionBranch\">\r\n                                                        <mat-option *ngFor=\"let tranbranch of trasactionBranches\"\r\n                                                            [value]=\"tranbranch\">\r\n                                                            {{tranbranch}}\r\n                                                        </mat-option>\r\n                                                    </mat-select>\r\n                                                    <input matInput *ngIf=\"!phoneNumber\" type=\"text\"\r\n                                                    [readonly]=\"true\" class=\"full-width\"\r\n                                                    formControlName=\"transactionBranch\">\r\n                                                </mat-card>\r\n                                                <mat-error\r\n                                                    *ngIf=\"cashwithdrawForm.get('transactionBranch').touched && !cashwithdrawForm.get('transactionBranch').valid\">\r\n                                                    Transaction Branch is Required!\r\n                                                </mat-error>\r\n                                            </div> -->\r\n                                            <div fxFlex=\"25%\" fxFlex.xs=\"100%\">\r\n                                                <mat-hint class=\"totalAmount\">Account Currency*</mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <div fxLayout=\"row wrap\" class=\"full-width\">\r\n                                                        <div fxFlex=\"25%\">\r\n                                                            <div *ngIf=\"ifQRvariable\"\r\n                                                                class=\"currency-flag {{isedit?accountCurrencyImage(cashwithdrawForm.controls['accountCurrency'].value):currencyImage}}\"></div>\r\n                                                            <div *ngIf=\"!ifQRvariable\"\r\n                                                                class=\"currency-flag {{!isedit?accountCurrencyImage(cashwithdrawForm.controls['accountCurrency'].value):currencyImage}}\">\r\n                                                            </div>\r\n\r\n                                                        </div>\r\n                                                        <div fxFlex=\"75%\">\r\n                                                            <input matInput type=\"text\" *ngIf=\"!phoneNumber\"\r\n                                                                [readonly]=\"true\" class=\"full-width\"\r\n                                                                style=\"font-size:110%\"\r\n                                                                formControlName=\"accountCurrency\">\r\n                                                            <input matInput type=\"text\" *ngIf=\"phoneNumber\"\r\n                                                                style=\"font-size:110%\" [readonly]=\"true\"\r\n                                                                class=\"full-width\" formControlName=\"accountCurrency\">\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </mat-card>\r\n                                            </div>\r\n                                           \r\n                                            <div fxFlex=\"25%\" fxFlex.xs=\"100%\" *ngIf=\"showAccountNum\">\r\n                                                <mat-hint class=\"totalAmount\">Transaction Currency* </mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <div fxLayout=\"row wrap\" class=\"full-width\">\r\n                                                        <div fxFlex=\"25%\">\r\n                                                            <div class=\"currency-flag {{currencyImage}}\"></div>\r\n                                                        </div>\r\n                                                        <div fxFlex=\"75%\">\r\n                                                            <input matInput type=\"text\" *ngIf=\"!phoneNumber\"\r\n                                                                [readonly]=\"true\" formControlName=\"transactionCurrency\">\r\n                                                            <mat-select formControlName=\"transactionCurrency\"\r\n                                                                *ngIf=\"phoneNumber\"\r\n                                                                placeholder=\"Select Transaction Currency\"\r\n                                                                id=\"testSelect\" style=\"background-color: #f9fafb;font-weight: bold;\"\r\n                                                                [disabled]=\"isedit\">\r\n                                                                <mat-option\r\n                                                                    *ngFor=\"let country of countryValues; let i = index\"\r\n                                                                    (click)=\"onCountryChange(country)\"\r\n                                                                    style=\"font-size:110%\"\r\n                                                                    [value]=\"country.currencyCode\">\r\n                                                                    <div fxLayout=\"row wrap\" class=\"full-width\">\r\n                                                                        <div fxFlex=\"15%\">{{country.currencyCode}}</div>\r\n                                                                        <div fxFlex=\"85%\">\r\n                                                                            <div\r\n                                                                                class=\"currency-flag currency-flag-{{addCurrencyImage(country.currencyCode)}} alignImage\">\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </mat-option>\r\n                                                            </mat-select>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </mat-card>\r\n                                            </div>\r\n                                            <div fxFlex=\"25%\" fxFlex.xs=\"100%\" *ngIf=\"!showAccountNum\">\r\n                                                <mat-hint class=\"totalAmount\">Transaction Currency* </mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <div fxLayout=\"row wrap\" class=\"full-width\">\r\n                                                        <div fxFlex=\"25%\">\r\n                                                            <div class=\"currency-flag {{currencyImage}}\"></div>\r\n                                                        </div>\r\n                                                        <div fxFlex=\"75%\">\r\n                                                            <mat-select formControlName=\"transactionCurrency\"\r\n                                                                placeholder=\"Select Transaction Currency\"\r\n                                                                id=\"testSelect\" style=\"background-color: #f9fafb;font-weight: bold;\">\r\n                                                                <mat-option\r\n                                                                    *ngFor=\"let country of countryValues; let i = index\"\r\n                                                                    (click)=\"onCountryChange(country)\"\r\n                                                                    style=\"font-size:110%\"\r\n                                                                    [value]=\"country.currencyCode\">\r\n                                                                    <div fxLayout=\"row wrap\" class=\"full-width\">\r\n                                                                        <div fxFlex=\"15%\">{{country.currencyCode}}</div>\r\n                                                                        <div fxFlex=\"85%\">\r\n                                                                            <div\r\n                                                                                class=\"currency-flag currency-flag-{{addCurrencyImage(country.currencyCode)}} alignImage\">\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </mat-option>\r\n                                                            </mat-select>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </mat-card>\r\n                                            </div>\r\n                                            <div fxFlex=\"25.5%\" fxFlex.xs=\"100%\" *ngIf=\"!showAccountNum\">\r\n                                                <mat-hint class=\"totalAmount\">Transaction Amount*</mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <input matInput class=\"full-width\" #myRef [(ngModel)]=\"transAmount\"\r\n                                                        formControlName=\"transactionAmount\"\r\n                                                        [value]=\"transAmt | number: '2.'\" (keyup)=\"OnInput($event)\"\r\n                                                        (focus)=\"clicked($event)\">\r\n                                                </mat-card>\r\n                                                <mat-error\r\n                                                    *ngIf=\"cashwithdrawForm.get('transactionAmount').errors?.min\">\r\n                                                    Amount must be greater than zero\r\n                                                </mat-error>\r\n                                            </div>\r\n                                            <div fxFlex=\"25.5%\" fxFlex.xs=\"100%\" *ngIf=\"showAccountNum\">\r\n                                                <mat-hint class=\"totalAmount\">Transaction Amount*</mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <input matInput type=\"text\" *ngIf=\"!phoneNumber\" [readonly]=\"true\"\r\n                                                        formControlName=\"transactionAmount\">\r\n                                                    <input matInput class=\"full-width\" *ngIf=\"phoneNumber\" #myRef\r\n                                                        [(ngModel)]=\"transAmount\" formControlName=\"transactionAmount\"\r\n                                                        [value]=\"transAmt | number: '1.'\" (keyup)=\"OnInput($event)\"\r\n                                                        (focus)=\"clicked($event)\" [readonly]=\"isedit\">\r\n\r\n                                                </mat-card>\r\n                                                <mat-error\r\n                                                    *ngIf=\"cashwithdrawForm.get('transactionAmount').errors?.min\">\r\n                                                    Amount must be greater than zero\r\n                                                </mat-error>\r\n                                            </div>\r\n                                            <div fxFlex=\"25%\" fxFlex.xs=\"100%\">\r\n                                                <mat-hint class=\"totalAmount\">Total Charge Amount*</mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <input matInput class=\"full-width\" readonly formControlName=\"totalChargeAmount\">\r\n                                                </mat-card>\r\n\r\n                                            </div>\r\n                                            <div fxFlex=\"25%\" fxFlex.xs=\"100%\">\r\n                                                <mat-hint class=\"totalAmount\">Total Transaction Amount*</mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <input matInput type=\"text\" readonly onlyNumber formControlName=\"totalTransactionAmount\">\r\n\r\n                                                </mat-card>\r\n\r\n                                            </div>\r\n                                            <div class=\"tooltip\">\r\n                                                <!-- <mat-icon  fxFlex=\"50%\" fxFlex.xs=\"100%\" ><span class=\"material-symbols-sharp\">\r\n                                               info\r\n                                                </span>\r\n                                                </mat-icon> -->\r\n                                                <img width=\"80%\"\r\n                                            [src]=\"'assets/images/info.svg'\"/>\r\n                                                <div class=\"tooltiptext\">\r\n                                                    <p class=\"totalAmount textcolor\" style=\"margin-top:10px; margin-bottom:6px\">Transaction Amount:{{cashwithdrawForm.get('transactionAmount').value}} </p>\r\n                                                    <p class=\"totalAmount textcolor\">Total Charge Amount:{{cashwithdrawForm.get('totalChargeAmount').value}} </p>\r\n                                                    <hr/>\r\n                                                    <p class=\"totalAmount textcolor\" style=\"margin-right:10px ;\">Total Transaction Amount:{{cashwithdrawForm.get('totalTransactionAmount').value}} </p>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                        </ng-container>\r\n                                    </div>\r\n                                </div>\r\n                                 <div>\r\n                                    <div fxLayout=\"row wrap\" class=\"flex-container stretch\">\r\n                                        <ng-container>\r\n                                            \r\n                                             <!-- <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                                <mat-hint class=\"transactionBranch\">Transaction Branch*</mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <mat-select *ngIf=\"phoneNumber\" formControlName=\"transactionBranch\">\r\n                                                        <mat-option *ngFor=\"let tranbranch of trasactionBranches\"\r\n                                                            [value]=\"tranbranch\">\r\n                                                            {{tranbranch}}\r\n                                                        </mat-option>\r\n                                                    </mat-select>\r\n                                                    <input matInput *ngIf=\"!phoneNumber\" type=\"text\"\r\n                                                    [readonly]=\"true\" class=\"full-width\"\r\n                                                    formControlName=\"transactionBranch\">\r\n                                                </mat-card>\r\n                                                <mat-error\r\n                                                    *ngIf=\"cashwithdrawForm.get('transactionBranch').touched && !cashwithdrawForm.get('transactionBranch').valid\">\r\n                                                    Transaction Branch is Required!\r\n                                                </mat-error>\r\n                                            </div>  -->\r\n                                            <!-- <div fxFlex=\"23%\" fxFlex.xs=\"100%\">\r\n                                                <mat-hint class=\"totalAmount\">Account Currency*</mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <div fxLayout=\"row wrap\" class=\"full-width\">\r\n                                                        <div fxFlex=\"25%\">\r\n                                                            <div *ngIf=\"ifQRvariable\"\r\n                                                                class=\"currency-flag {{currencyImage}}\"></div>\r\n                                                            <div *ngIf=\"!ifQRvariable\"\r\n                                                                class=\"currency-flag {{!isedit?accountCurrencyImage(cashwithdrawForm.controls['accountCurrency'].value):''}}\">\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div fxFlex=\"75%\">\r\n                                                            <input matInput type=\"text\" *ngIf=\"!phoneNumber\"\r\n                                                                [readonly]=\"true\" class=\"full-width\" style=\"font-size:110%\"\r\n                                                                formControlName=\"accountCurrency\">\r\n                                                            <input matInput type=\"text\" *ngIf=\"phoneNumber\" style=\"font-size:110%\"\r\n                                                                [readonly]=\"true\" class=\"full-width\"\r\n                                                                formControlName=\"accountCurrency\">\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </mat-card>\r\n                                            </div> -->\r\n                                           \r\n                                          \r\n                                       \r\n                                    \r\n                                        </ng-container>\r\n                                    </div>\r\n                                </div> \r\n                                <!-- <div>\r\n                                    <div fxLayout=\"row wrap\" class=\"flex-container stretch\">\r\n                                        <ng-container>\r\n                                            <div fxFlex=\"30%\" fxFlex.xs=\"100%\" style=\"padding: 0% 1%;\">\r\n                                                <button mat-flat-button *ngIf=\"phoneNumber\" class=\"buttonCancel full-width\"\r\n                                                    (click)=\"goToServiceScreens()\">CANCEL</button>\r\n                                            </div>\r\n                                            <div fxFlex=\"70%\" fxFlex.xs=\"100%\" style=\"padding: 0% 2%;\">\r\n                                                <button mat-flat-button class=\"buttonNext full-width\" \r\n                                                    [disabled]=\"!enableContinue || !cashwithdrawForm.get('transactionAmount').valid\r\n                                                    ||!cashwithdrawForm.get('transactionCurrency').valid ||\r\n                                                    !cashwithdrawForm.get('holderName').valid ||!cashwithdrawForm.get('accountType').valid ||!cashwithdrawForm.get('accountNumber').valid ||!cashwithdrawForm.get('accountCurrency').valid\"\r\n                                                    (click)=\"onSaveofCashWithdraw(cashwithdrawForm.value,ifQRvariable,cdForm)\">CONTINUE</button>\r\n                                            </div>\r\n                                        </ng-container>\r\n                                    </div>\r\n                                </div> -->\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </mat-card-content>\r\n            </mat-card>\r\n        </div>\r\n        <div *ngIf=\"(denomRequired == 'yes') && (cashwithdrawForm.get('transactionAmount').value > 0 || transAmt > 0)\"\r\n            fxFlex=\"30%\">\r\n            <form #cdForm=\"ngForm\">\r\n                <mat-card class=\"border-align\">\r\n                    <div fxLayout=\"row\" class=\"pH10 full-width\">\r\n\r\n                        <h4 class=\"title-Font\">Denomination</h4>\r\n                    </div>\r\n                    <div class=\"pH10 full-width\" id=\"denominationDiv\">\r\n                        <div class=\"paddingclass\" fxLayoutAlign=\"center center\"\r\n                            *ngIf=\"cashwithdrawForm.value.transactionCurrency == 'INR'\">\r\n                            <div fxFlex=\"20%\">\r\n                                <p class=\"quantityClass text-small\">2000</p>\r\n                            </div>\r\n                            <div fxFlex=\"10%\">\r\n                                <p class=\"operationTypeClass text-small\">x</p>\r\n                            </div>\r\n                            <div fxFlex=\"70%\">\r\n                                <mat-card class=\"inputCard\">\r\n                                    <div>\r\n                                        <input class=\"full-width inputClass\" type=\"text\"\r\n                                            (keyup)=\"totalAmountValue(cdForm)\" (keypress)=\"omit_number($event)\" matInput\r\n                                            name=\"count2000\" ngModel #count2000>\r\n                                    </div>\r\n                                </mat-card>\r\n                                <div class=\"pl10\">\r\n                                    <mat-error *ngIf=\"denominationlimit && count2000.value > denominationLimit[2000]\">\r\n                                        Please enter <= {{denominationLimit[2000]}} </mat-error>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"paddingclass\" fxLayoutAlign=\"start center\"\r\n                            *ngIf=\"cashwithdrawForm.value.transactionCurrency == 'INR' || cashwithdrawForm.value.transactionCurrency == 'USD' || cashwithdrawForm.value.transactionCurrency == 'AED'\">\r\n                            <div fxFlex=\"20%\">\r\n                                <p class=\"quantityClass text-small\">500</p>\r\n                            </div>\r\n                            <div fxFlex=\"10%\">\r\n                                <p class=\"operationTypeClass text-small\">x</p>\r\n                            </div>\r\n                            <div fxFlex=\"70%\">\r\n                                <mat-card class=\"inputCard\">\r\n                                    <input class=\"full-width inputClass\" type=\"text\" (keyup)=\"totalAmountValue(cdForm)\"\r\n                                        (keypress)=\"omit_number($event)\" matInput name=\"count500\" ngModel #count500>\r\n                                </mat-card>\r\n                                <div class=\"pl10\">\r\n                                    <mat-error *ngIf=\"denominationlimit && count500.value > denominationLimit[500]\">\r\n                                        Please enter <= {{denominationLimit[500]}} </mat-error>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"paddingclass\" fxLayoutAlign=\"start center\"\r\n                            *ngIf=\"cashwithdrawForm.value.transactionCurrency == 'INR'\">\r\n                            <div fxFlex=\"20%\">\r\n                                <p class=\"quantityClass text-small\">200</p>\r\n                            </div>\r\n                            <div fxFlex=\"10%\">\r\n                                <p class=\"operationTypeClass text-small\">x</p>\r\n                            </div>\r\n                            <div fxFlex=\"70%\">\r\n                                <mat-card class=\"inputCard\">\r\n                                    <input class=\"full-width inputClass\" type=\"text\" (keyup)=\"totalAmountValue(cdForm)\"\r\n                                        (keypress)=\"omit_number($event)\" matInput name=\"count200\" ngModel #count200>\r\n                                </mat-card>\r\n                                <div class=\"pl10\">\r\n                                    <mat-error *ngIf=\"denominationlimit && count200.value > denominationLimit[200]\">\r\n                                        Please enter <= {{denominationLimit[200]}} </mat-error>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"paddingclass\" fxLayoutAlign=\"start center\"\r\n                            *ngIf=\"cashwithdrawForm.value.transactionCurrency == 'INR' || cashwithdrawForm.value.transactionCurrency == 'USD' || cashwithdrawForm.value.transactionCurrency == 'AED'\">\r\n                            <div fxFlex=\"20%\">\r\n                                <p class=\"quantityClass text-small\">100</p>\r\n                            </div>\r\n                            <div fxFlex=\"10%\">\r\n                                <p class=\"operationTypeClass text-small\">x</p>\r\n                            </div>\r\n                            <div fxFlex=\"70%\">\r\n                                <mat-card class=\"inputCard\">\r\n                                    <input class=\"full-width inputClass\" type=\"text\" (keyup)=\"totalAmountValue(cdForm)\"\r\n                                        (keypress)=\"omit_number($event)\" matInput name=\"count100\" ngModel #count100>\r\n                                </mat-card>\r\n                                <div class=\"pl10\">\r\n                                    <mat-error *ngIf=\"denominationlimit && count100.value > denominationLimit[100]\">\r\n                                        Please enter <= {{denominationLimit[100]}} </mat-error>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"paddingclass\" fxLayoutAlign=\"start center\"\r\n                            *ngIf=\"cashwithdrawForm.value.transactionCurrency== 'INR' || cashwithdrawForm.value.accountCurrency == 'USD'\">\r\n                            <div fxFlex=\"20%\">\r\n                                <p class=\"quantityClass text-small\">50</p>\r\n                            </div>\r\n                            <div fxFlex=\"10%\">\r\n                                <p class=\"operationTypeClass text-small\">x</p>\r\n                            </div>\r\n                            <div fxFlex=\"70%\">\r\n                                <mat-card class=\"inputCard\">\r\n                                    <input class=\"full-width inputClass\" type=\"text\" (keyup)=\"totalAmountValue(cdForm)\"\r\n                                        (keypress)=\"omit_number($event)\" matInput name=\"count50\" ngModel #count50>\r\n                                </mat-card>\r\n                                <div class=\"pl10\">\r\n                                    <mat-error *ngIf=\"denominationlimit && count50.value > denominationLimit[50]\">\r\n                                        Please enter <= {{denominationLimit[50]}} </mat-error>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"paddingclass\" fxLayoutAlign=\"start center\"\r\n                            *ngIf=\"cashwithdrawForm.value.transactionCurrency== 'INR'\">\r\n                            <div fxFlex=\"20%\">\r\n                                <p class=\"quantityClass text-small\">20</p>\r\n                            </div>\r\n                            <div fxFlex=\"10%\">\r\n                                <p class=\"operationTypeClass text-small\">x</p>\r\n                            </div>\r\n                            <div fxFlex=\"70%\">\r\n                                <mat-card class=\"inputCard\">\r\n                                    <input class=\"full-width inputClass\" type=\"text\" (keyup)=\"totalAmountValue(cdForm)\"\r\n                                        (keypress)=\"omit_number($event)\" matInput name=\"count20\" ngModel #count20>\r\n                                </mat-card>\r\n                                <div class=\"pl10\">\r\n                                    <mat-error *ngIf=\"denominationlimit && count20.value > denominationLimit[20]\">\r\n                                        Please enter <= {{denominationLimit[20]}} </mat-error>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"paddingclass\" fxLayoutAlign=\"start center\"\r\n                            *ngIf=\"cashwithdrawForm.value.transactionCurrency== 'INR'\">\r\n                            <div fxFlex=\"20%\">\r\n                                <p class=\"quantityClass text-small\">10</p>\r\n                            </div>\r\n                            <div fxFlex=\"10%\">\r\n                                <p class=\"operationTypeClass text-small\">x</p>\r\n                            </div>\r\n                            <div fxFlex=\"70%\">\r\n                                <mat-card class=\"inputCard\">\r\n                                    <input class=\"full-width inputClass\" type=\"text\" (keyup)=\"totalAmountValue(cdForm)\"\r\n                                        (keypress)=\"omit_number($event)\" matInput name=\"count10\" ngModel #count10>\r\n                                </mat-card>\r\n                                <div class=\"pl10\">\r\n                                    <mat-error *ngIf=\"denominationlimit && count10.value > denominationLimit[10]\">\r\n                                        Please enter <= {{denominationLimit[10]}} </mat-error>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"paddingclass\" fxLayoutAlign=\"start center\"\r\n                            *ngIf=\"cashwithdrawForm.value.transactionCurrency== 'INR' || cashwithdrawForm.value.transactionCurrency == 'USD' || cashwithdrawForm.value.transactionCurrency == 'AED'\">\r\n                            <div fxFlex=\"20%\">\r\n                                <p class=\"quantityClass text-small\">1</p>\r\n                            </div>\r\n                            <div fxFlex=\"10%\">\r\n                                <p class=\"operationTypeClass text-small\">x</p>\r\n                            </div>\r\n                            <div fxFlex=\"70%\">\r\n                                <mat-card class=\"inputCard\">\r\n                                    <input class=\"full-width inputClass\" type=\"text\" (keyup)=\"totalAmountValue(cdForm)\"\r\n                                        (keypress)=\"omit_number($event)\" matInput name=\"count1\" ngModel #count10>\r\n                                </mat-card>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div fxLayout=\"row wrap\" class=\"pH10 full-width\">\r\n                        <div fxFlex=\"53%\" fxFlex.xs=\"100%\">\r\n                            <p class=\"totalAmount\">Total Amount</p>\r\n                            <mat-card class=\"inputCard\">\r\n                                <input class=\"full-width inputClass\" [(ngModel)]=\"totalAmount\" matInput\r\n                                    name=\"totalAmount\" readonly>\r\n                            </mat-card>\r\n                            <div class=\"pl10\" style=\"width: 150%;\">\r\n                                <mat-error *ngIf=\"enableBtn1\">\r\n                                    Total amount should be equal to {{cashwithdrawForm.value.transactionAmount}}\r\n                                </mat-error>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </mat-card>\r\n            </form>\r\n        </div>\r\n    </div>\r\n\r\n\r\n\r\n    <div>\r\n        <div fxLayout=\"row wrap\" class=\"flex-container stretch\" id=\"buttonDiv\">\r\n            <ng-container>\r\n                <div fxFlex=\"30%\" fxFlex.xs=\"100%\" class=\"paddingCls\">\r\n                    <button mat-flat-button *ngIf=\"phoneNumber\" class=\"buttonCancel full-width\"\r\n                        (click)=\"goToServiceScreens()\">CANCEL</button>\r\n                </div>\r\n                <div fxFlex=\"70%\" fxFlex.xs=\"100%\" class=\"paddingCls\" *ngIf=\"showAccountNum\">\r\n                    <button mat-flat-button class=\"buttonNext full-width\" [disabled]=\"!enableContinue\r\n                    ||!cashwithdrawForm.get('transactionCurrency').valid\r\n                    ||!cashwithdrawForm.get('accountType').valid\r\n                    ||!cashwithdrawForm.get('accountNumber').valid \r\n                    ||!cashwithdrawForm.get('accountCurrency').valid\r\n                    ||!cashwithdrawForm.get('transactionAmount').valid\r\n                    ||!cashwithdrawForm.get('totalChargeAmount').valid\r\n                    ||!cashwithdrawForm.get('totalTransactionAmount').valid\"\r\n                        (click)=\"onSaveofCashWithdraw(cashwithdrawForm.value,ifQRvariable,cdForm)\">GENERATE TOKEN</button>\r\n                </div>\r\n                <div fxFlex=\"70%\" fxFlex.xs=\"100%\" class=\"paddingCls\" *ngIf=\"!showAccountNum\">\r\n                    <button mat-flat-button class=\"buttonNext full-width\" [disabled]=\"!enableContinue || !cashwithdrawForm.get('transactionAmount').valid \r\n                    ||!cashwithdrawForm.get('transactionCurrency').valid\r\n                    ||!cashwithdrawForm.get('accountType').valid\r\n                    ||!cashwithdrawForm.get('accountNumber').valid \r\n                    ||!cashwithdrawForm.get('accountCurrency').valid\r\n                    ||!cashwithdrawForm.get('transactionAmount').valid\r\n                    ||!cashwithdrawForm.get('totalChargeAmount').valid\r\n                    ||!cashwithdrawForm.get('totalTransactionAmount').valid\"\r\n                        (click)=\"getOTP(cashwithdrawForm.value,ifQRvariable,cdForm)\">CONTINUE</button>\r\n                </div>\r\n\r\n            </ng-container>\r\n        </div>\r\n    </div>\r\n    <!-- <div *ngIf=\"denomRequired == 'yes'\">\r\n        <div fxLayout=\"row wrap\" class=\"flex-container stretch\" id=\"buttonDiv\">\r\n            <ng-container>\r\n                <div fxFlex=\"30%\" fxFlex.xs=\"100%\" class=\"paddingCls\">\r\n                    <button mat-flat-button *ngIf=\"phoneNumber\" class=\"buttonCancel full-width\"\r\n                        (click)=\"goToServiceScreens()\">CANCEL</button>\r\n                </div>\r\n                <div fxFlex=\"70%\" fxFlex.xs=\"100%\" class=\"paddingCls\" *ngIf=\"showAccountNum\">\r\n                    <button mat-flat-button class=\"buttonNext full-width\" [disabled]=\"!enableContinue\r\n                    ||!cashwithdrawForm.get('transactionCurrency').valid\r\n                    ||!cashwithdrawForm.get('accountType').valid\r\n                    ||!cashwithdrawForm.get('holderName').valid\r\n                    ||!cashwithdrawForm.get('accountNumber').valid \r\n                    ||!cashwithdrawForm.get('accountCurrency').valid\r\n                    ||!cashwithdrawForm.get('transactionAmount').valid\"\r\n                        (click)=\"onSaveofCashWithdraw(cashwithdrawForm.value,ifQRvariable,cdForm)\">GENERATE\r\n                        TOKEN</button>\r\n                </div>\r\n                <div fxFlex=\"70%\" fxFlex.xs=\"100%\" class=\"paddingCls\" *ngIf=\"!showAccountNum\">\r\n                    <button mat-flat-button class=\"buttonNext full-width\" [disabled]=\"!enableContinue || !cashwithdrawForm.get('transactionAmount').valid \r\n                    ||!cashwithdrawForm.get('transactionCurrency').valid\r\n                    ||!cashwithdrawForm.get('accountType').valid\r\n                    ||!cashwithdrawForm.get('holderName').valid\r\n                    ||!cashwithdrawForm.get('accountNumber').valid \r\n                    ||!cashwithdrawForm.get('accountCurrency').valid\r\n                    ||!cashwithdrawForm.get('transactionAmount').valid\"\r\n                        (click)=\"getOTP(cashwithdrawForm.value,ifQRvariable,cdForm)\">CONTINUE</button>\r\n                </div>\r\n            </ng-container>\r\n        </div>\r\n    </div> -->\r\n\r\n</div>"]}