{"version":3,"file":"default-src_app_pages_currencyconverter_currencyconverter_page_ts.js","mappings":"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","sources":["./src/app/pages/currencyconverter/currencyconverter.page.ts"],"sourcesContent":["import { ChangeDetectorRef, Component, Input, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { ModalController } from '@ionic/angular';\r\nimport { ApiService } from 'src/app/services/api.service';\r\n\r\n@Component({\r\n  selector: 'app-currencyconverter',\r\n  templateUrl: './currencyconverter.page.html',\r\n  styleUrls: ['./currencyconverter.page.scss'],\r\n})\r\nexport class CurrencyconverterPage implements OnInit {\r\n  currencyForm: FormGroup;\r\n  isShow: boolean = true;\r\n  isShow1: boolean = true;\r\n  exchangeRate: any;\r\n  routerData: any;\r\n  currencies: any = [];\r\n  selectedFromCurrency: string = '';\r\n  selectedToCurrency: string = '';\r\n  @Input() model_data: any;\r\n\r\n  constructor(private fb: FormBuilder,\r\n    private router: Router,\r\n    private api: ApiService,\r\n    private modalController: ModalController,\r\n    private cdr: ChangeDetectorRef) { }\r\n\r\n  ngOnInit() {\r\n\r\n\r\n  }\r\n\r\n  ionViewWillEnter() {\r\n    this.currencyForm = this.fb.group({\r\n      amount: [''],\r\n      fromCurrency: [''],\r\n      toCurrency: [''],\r\n      exchangeRate: [''],\r\n      total: [''],\r\n    });\r\n\r\n\r\n    this.currencies = JSON.parse(localStorage.getItem('COUNTRIES'));\r\n\r\n    console.log(this.model_data);\r\n\r\n    const select_forex_countryCode = this.currencies.filter((i: any) => i.currencyCode == this.model_data?.fromCurrency);\r\n    const select_countryCode = this.currencies.filter((i: any) => i.currencyCode == this.model_data?.toCurrency);\r\n\r\n    this.selectedFromCurrency = select_forex_countryCode[0].countryCode.toLowerCase();\r\n    this.selectedToCurrency = select_countryCode[0].countryCode.toLowerCase();\r\n\r\n    this.currencyForm.patchValue(this.model_data);\r\n\r\n    console.log(this.currencyForm.value);\r\n\r\n    this.cdr.markForCheck();\r\n\r\n  }\r\n\r\n  compareWith(o1, o2) {\r\n    return o1 && o2 ? o1.id === o2.id : o1 === o2;\r\n  }\r\n\r\n  selectFromCurrencyCode(e: any) {\r\n    console.log(e);\r\n    if (typeof e !== \"undefined\") {\r\n      const filteredCurrency = this.currencies?.filter((i: any) => i.currencyCode == e);\r\n      this.selectedFromCurrency = filteredCurrency[0].countryCode.toLowerCase();\r\n      this.cdr.markForCheck();\r\n    } else {\r\n      return;\r\n    }\r\n  }\r\n\r\n\r\n\r\n  selectToCurrencyCode(e: any) {\r\n    console.log(e);\r\n    if (typeof e !== \"undefined\") {\r\n      const filteredCurrency = this.currencies?.filter((i: any) => i.currencyCode == e);\r\n      this.selectedToCurrency = filteredCurrency[0].countryCode.toLowerCase();\r\n      this.getExChangeRate(this.currencyForm.get('fromCurrency')?.value, this.currencyForm.get('toCurrency')?.value);\r\n      this.cdr.markForCheck();\r\n    } else {\r\n      return;\r\n    }\r\n  }\r\n\r\n\r\n  getExChangeRate(fromCurr: string, toCurr: string) {\r\n    this.api.getNativeExchangeRate(fromCurr, toCurr).subscribe((res: any) => {\r\n      const rate = res[0].sellRate;\r\n      this.currencyForm.get('exchangeRate').patchValue(rate);\r\n      let updatedAmount: number = (Number(this.currencyForm.get('amount')?.value) * Number(this.currencyForm.get('exchangeRate')?.value));\r\n      if (!isNaN(Number(updatedAmount))) {\r\n        console.log(Number(updatedAmount));\r\n        this.currencyForm.get('total').patchValue(updatedAmount);\r\n        this.cdr.markForCheck();\r\n      }\r\n    });\r\n    this.updateTransAmount();\r\n  }\r\n\r\n  updateTransAmount() {\r\n    let updatedAmount: number = (Number(this.currencyForm.get('amount')?.value) * Number(this.currencyForm.get('exchangeRate')?.value));\r\n    if (!isNaN(Number(updatedAmount))) {\r\n      this.currencyForm.get('total').patchValue(updatedAmount);\r\n      this.cdr.markForCheck();\r\n    }\r\n  }\r\n\r\n\r\n  onKeyUp(event) {\r\n    console.log(event.target.value);\r\n\r\n  }\r\n\r\n  continue() {\r\n    this.closeModel();\r\n    this.router.navigate(['dashboard']);\r\n  }\r\n\r\n  async closeModel() {\r\n    await this.modalController.dismiss();\r\n  }\r\n\r\n}\r\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}