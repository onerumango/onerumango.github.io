{"version":3,"sources":["./src/app/views/others/onboarding-corporate/contact-information/contact-information.component.ts","./src/app/views/others/onboarding-corporate/contact-information/contact-information.component.html","./src/app/views/others/onboarding-corporate/proof-of-identity/proof-of-identity.component.ts","./src/app/views/others/onboarding-corporate/proof-of-identity/proof-of-identity.component.html","./src/app/views/others/onboarding-corporate/onboarding-corporate-main/onboarding-corporate-main.component.ts","./src/app/views/others/onboarding-corporate/onboarding-corporate-main/onboarding-corporate-main.component.html","./src/app/views/others/onboarding-corporate/corporate-onboarding.service.ts","./src/app/views/others/onboarding-corporate/create-director/create-director.component.ts","./src/app/views/others/onboarding-corporate/create-director/create-director.component.html","./src/app/views/others/onboarding-corporate/onboarding-corporate-routing.module.ts","./src/app/views/others/onboarding-corporate/onboarding-corporate.module.ts","./src/app/views/others/onboarding-corporate/onborading-primary/onborading-primary.component.ts","./src/app/views/others/onboarding-corporate/onborading-primary/onborading-primary.component.html","./src/app/views/others/onboarding-corporate/other-info-corporate/other-info-corporate.component.ts","./src/app/views/others/onboarding-corporate/other-info-corporate/other-info-corporate.component.html","./src/app/views/others/onboarding-corporate/director-details/director-details.component.ts","./src/app/views/others/onboarding-corporate/director-details/director-details.component.html"],"names":[],"mappings":"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","file":"default~views-others-onboarding-corporate-onboarding-corporate-module~views-tasks-tasks-module-es2015.js","sourcesContent":["import { ChangeDetectorRef, Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { MatTabChangeEvent } from '@angular/material/tabs';\r\nimport { FormGroup, FormBuilder, FormArray, Validators } from '@angular/forms';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { CorporateOnboardingService } from '../corporate-onboarding.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-contact-information',\r\n  templateUrl: './contact-information.component.html',\r\n  styleUrls: ['./contact-information.component.scss']\r\n})\r\nexport class ContactInformationComponent implements OnInit {\r\n\r\n  contactFormGroup: FormGroup;\r\n  addressTypeVar: string;\r\n  addressList: any;\r\n  corporateId: any;\r\n  arrayState: any[] = [];\r\n  arrayCountry: string[] = [];\r\n  arrayCity: any[] = [];\r\n  addressTypeList:any=['Company','Mailing'];\r\n  isAllSameDigitVal: boolean=false;\r\n  zipIndex: number;\r\n  constructor(private router: Router,\r\n    private ls: LocalStoreService,\r\n    private formBuilder: FormBuilder,\r\n    private corporateService: CorporateOnboardingService,\r\n    private apiService: ApiService,\r\n    private cdr: ChangeDetectorRef,\r\n    private snack: MatSnackBar) {\r\n      this.contactFormGroup = formBuilder.group({\r\n        corporateId: [''],\r\n        primaryEmail: ['',[Validators.required]],\r\n        secondaryEmail: [''],\r\n        mobileNumber: ['',[Validators.minLength(10), Validators.maxLength(10)]],\r\n        landLine: ['',[Validators.maxLength,Validators.minLength]],\r\n        isMailingAddressSame: ['YES'],\r\n        corporateAddress: formBuilder.array([])\r\n      })\r\n      // this.corporateService.stepReady(this.contactFormGroup, 'three')\r\n\r\n      this.getCountryName(\"country\");\r\n      this.getAllAuthCities();\r\n  }\r\n\r\n \r\n  ngOnInit(): void {\r\n   console.log(\"testttt\")\r\n    this.corporateService.corporateAccountIdVal\r\n    .subscribe(corporateId => {\r\n      console.log('corporateId :: ', this.corporateId = corporateId);\r\n      this.contactFormGroup.get('corporateId').setValue(corporateId)\r\n    });\r\n    if(this.corporateId){\r\n      this.getCoropratedetails(this.corporateId);\r\n    }\r\n    let mailAddress:any=this.contactFormGroup.get('isMailingAddressSame');\r\n    if( mailAddress === 'YES'){\r\n      this.contactFormGroup.get('corporateAddress').get('addressType').setValue('Company')\r\n    }\r\n    \r\n    this.addAddress();\r\n  }\r\n\r\n\r\n  ngAfterViewInit(){\r\n    if(this.ls.getItem('corporateId')){      \r\n      this.getCoropratedetails(this.ls.getItem('corporateId'));\r\n    }\r\n   }\r\n\r\n  get getAddressData() {\r\n    return this.contactFormGroup.get('corporateAddress') as FormArray;\r\n  }\r\n\r\n  addAddress() {\r\n    this.getAddressData.push(this.formBuilder.group({\r\n      addressType: [''],\r\n      address1: ['',[Validators.required,Validators.pattern(\".*[a-zA-Z].*\")]],\r\n      address2: ['',[Validators.required,Validators.pattern(\".*[a-zA-Z].*\")]],\r\n      state:['',[Validators.required]],\r\n      city: ['',[Validators.required]],\r\n      zipCode: ['',[Validators.required,Validators.minLength(6), Validators.maxLength(10)]],\r\n      country: ['',[Validators.required]],\r\n    }));\r\n  }\r\n  _keyPress(event: any) {\r\n    const pattern = /[0-9]/;\r\n    let inputChar = String.fromCharCode(event.charCode);\r\n    if (!pattern.test(inputChar)) {\r\n      event.preventDefault();\r\n\r\n    }\r\n  }\r\n\r\n\r\n\r\n  radioSelection(event) {\r\n    console.log('event :: ', event);\r\n    if (event === 'NO') {\r\n      console.log('inside if')\r\n      this.addAddress();\r\n      this.cdr.detectChanges();\r\n      this.cdr.markForCheck();\r\n    } else {\r\n      if ( this.getAddressData.length > 1) {\r\n        this.getAddressData.controls.pop();\r\n        this.cdr.detectChanges();\r\n        this.cdr.markForCheck();\r\n      }\r\n    }\r\n  }\r\n\r\n  getCountryName(key: string) {\r\n    this.apiService.getAllCountries().subscribe((data: any) => {\r\n     for(let i=0; i<data.length;i++){\r\n       if(data[i].authStatus==='A'){     \r\n         this.arrayCountry.push(data[i].countryName);\r\n       }\r\n     }\r\n   });\r\n }\r\n\r\n  getStateName(country,isAdd?, index?) {\r\n    if(isAdd){\r\n      (this.contactFormGroup.get('corporateAddress') as FormArray).controls[index].get('state').setValue('');\r\n      (this.contactFormGroup.get('corporateAddress') as FormArray).controls[index].get('city').setValue('');\r\n      (this.contactFormGroup.get('corporateAddress') as FormArray).controls[index].get('zipCode').setValue('');\r\n\r\n}\r\n    this.arrayState[index]=[];\r\n    this.arrayCity[index]=[];\r\n    this.apiService.getAllCountries().subscribe((data: any) => {\r\n      for(let i=0; i<data.length;i++){       \r\n        if(data[i].countryName == country){\r\n          this.apiService.getStateByCountryId(data[i].id).subscribe((resp: any) => {\r\n          this.arrayState[index] = resp\r\n          })\r\n          break;   \r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  \r\n  // getCityName(state: any, index) {\r\n  //   console.log(state)\r\n  //   this.apiService.getDropDownValues1(\"city\",state).subscribe((data) => {\r\n  //     this.arrayCity[index] = data;\r\n  //     console.log(\"-->\", this.arrayCity)\r\n  //   });\r\n  // }\r\n\r\n  getAllAuthCities(){\r\n    this.apiService.getAuthorizedCityInfo().subscribe(res => res.map(r => this.arrayCity.push(r.cityName)))\r\n  }\r\n  onStateChange(index){\r\n    (this.contactFormGroup.get('corporateAddress') as FormArray).controls[index].get('zipCode').setValue('');\r\n    (this.contactFormGroup.get('corporateAddress') as FormArray).controls[index].get('city').setValue('');\r\n  }\r\n  onCityChange(index){\r\n    (this.contactFormGroup.get('corporateAddress') as FormArray).controls[index].get('zipCode').setValue('');\r\n  }\r\n\r\n  getCoropratedetails(id){\r\n    this.apiService.getCoropratedetails(id).subscribe((details => {\r\n      console.log(details.customerInfo[0].userAddress[0]);\r\n      this.getStateName(details.customerInfo[0].userAddress[0].country,0);\r\n      // this.getCityName(details.customerInfo[0].userAddress[0].state,0)\r\n      if(details){\r\n        this.contactFormGroup.patchValue(details);\r\n        this.contactFormGroup.get('corporateAddress').patchValue(details.customerInfo[0].corporateAddress)\r\n        console.log(details.customerInfo[0]);\r\n        console.log(details.customerInfo[0].corporateAddress);\r\n      }\r\n    }))\r\n    }\r\n\r\n   letterOnly(event) {\r\n    var charCode = event.keyCode;\r\n    if ((charCode > 64 && charCode < 91) || (charCode > 96 && charCode < 123) || charCode == 8)\r\n      return true;\r\n    else\r\n      return false;\r\n  }\r\n\r\n\r\n  onSubmit(contactFormGroup){\r\n    console.log('form :: ',contactFormGroup);\r\n    console.log('form :: ',contactFormGroup.isMailingAddressSame);\r\n    if(contactFormGroup.isMailingAddressSame=='NO'){\r\n      contactFormGroup.corporateAddress[0].addressType='Company';\r\n      contactFormGroup.corporateAddress[1].addressType='Mailing';\r\n    }\r\n    if(contactFormGroup.isMailingAddressSame=='YES'){\r\n      contactFormGroup.corporateAddress[0].addressType='Company';\r\n    }\r\n    console.log(contactFormGroup.corporateAddress[0].addressType)\r\n    this.corporateService.saveOrUpdateCorporateAccountInfo(contactFormGroup)\r\n    .subscribe(data=>{\r\n      console.log('data :: ', data);\r\n      if(data != null){\r\n        this.corporateService.sendCorporateAccountId(data.corporateId)\r\n        this.snack.open('Contact Information Saved' + ' !', 'OK', {\r\n          duration: 4000,\r\n          verticalPosition: 'top',\r\n          horizontalPosition: 'right'\r\n        });\r\n      }\r\n      this.next();\r\n    })\r\n  }\r\n\r\n  previous() {\r\n    this.corporateService.sendDisableMatTab({\r\n      index: 1,\r\n    });\r\n  }\r\n\r\n  next() {\r\n    this.corporateService.sendDisableMatTab({\r\n      index: 3,\r\n    });\r\n    this.corporateService.setFinishFlag({\r\n      finishFlag: false,\r\n    });\r\n  }\r\n\r\n  isAllSameDigit(event,index) {\r\n    this.zipIndex=index;\r\n    let count = 0, number = event.target.value;\r\n    if (number != '') {\r\n      for (var i = 0; i < number.length; i++) {\r\n        if (0 == number[i]) {\r\n          count++;\r\n        }\r\n      }\r\n      if (count == number.length) {\r\n        this.isAllSameDigitVal = true;\r\n      }\r\n      else {\r\n        this.isAllSameDigitVal = false;\r\n      }\r\n    } else {\r\n      this.isAllSameDigitVal = false;\r\n    }\r\n  }\r\n\r\n  getCityandStateByZipcode(countryName, zipcode,index) {\r\n    if (countryName && zipcode.length >= 6) {\r\n      this.apiService.fetchStateCityByZipcode(countryName, zipcode).subscribe((res: any) => {\r\n        if(res){\r\n          (this.contactFormGroup.get('corporateAddress') as FormArray).controls[index].get('state').setValue(res.stateName);\r\n          (this.contactFormGroup.get('corporateAddress') as FormArray).controls[index].get('city').setValue(res.cityName);\r\n        }\r\n        else{\r\n          this.snack.open(\"Entered Zipcode is not exists\", \"OK\", {\r\n            duration: 4000,\r\n            verticalPosition: \"top\",\r\n            horizontalPosition: \"right\",\r\n          });\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  \r\n}\r\n","<form [formGroup]=\"contactFormGroup\" ngNativeValidate>\r\n    <div class=\"full-width\" >\r\n        <div style=\"padding: 1rem 0;background-color:#F1F1F4\">\r\n            <div style=\"padding: 0 4.3rem\">\r\n                <mat-card style=\"border-radius: 0px;\">\r\n                    <div fxLayout=\"column\" class=\"full-width\" fxLayoutAlign=\"space-around start\">\r\n                        <div class=\"full-width\" style=\"padding: 1rem 1rem;\">\r\n                            <h2 style=\"font-size: 18px; margin-left: 10px;\">Contact Information</h2>\r\n                            <mat-divider style=\"width:70px;border-bottom: 7px solid #456EFE;left: 40px; border-radius: 30px;\">\r\n                            </mat-divider>\r\n                        </div>\r\n\r\n                    </div>\r\n<!-- \r\n                    <div fxLayout=\"row wrap\">\r\n                        <div fxFlex=\"100\" fxLayoutGap=\"20px\">\r\n                            <div fxFlex=\"2\"></div>\r\n                            <div fxFlex=\"28\">\r\n                                <mat-label> your mailing address same as company address? </mat-label>\r\n                            </div>\r\n                            <div fxFlex=\"50\">\r\n\r\n                                <mat-radio-group formControlName=\"isMailingAddressSame\"\r\n                                    *ngFor=\"let x of ['YES','NO']; let i = index\">\r\n                                    <mat-radio-button [value]=\"x\" (change)=\"radioSelection($event.value)\"\r\n                                        [checked]=\"x == contactFormGroup.value.isMailingAddressSame\">{{x}}\r\n                                    </mat-radio-button>&nbsp;\r\n                                </mat-radio-group>\r\n                            </div>\r\n                        </div>\r\n                    </div> -->\r\n\r\n                    <div formArrayName=\"corporateAddress\">\r\n                        <div *ngFor=\"let item of contactFormGroup.get('corporateAddress')['controls']; let i = index;\"\r\n                            [formGroupName]=\"i\">\r\n                            <fieldset style=\"border-top: 1px solid lightgray;margin-left: 20px; margin-right: 20px;\">\r\n                                <legend visible=\"true\" *ngIf=\"i==0\">\r\n                                    Company Address</legend>\r\n                                <legend visible=\"true\" *ngIf=\"i==1\">\r\n                                    Mailing Address</legend>\r\n\r\n\r\n                                <div fxLayout=\"row wrap\">\r\n                                    <div fxFlex=\"100\" fxLayoutGap=\"20px\">\r\n                                        <!--<div fxFlex=\"20\" class=\"form-group\">\r\n                                            <label for=\"foraddressType\" class=\"hint\">Address Type*</label>\r\n                                           <mat-form-field floatLabel=\"never\">\r\n                                                <mat-select id=\"foraddressType\" formControlName=\"addressType\">\r\n                                                    <mat-option disabled>select---</mat-option>\r\n                                                    <mat-option *ngFor=\"let addrsType of addressTypeList\"\r\n                                                        [value]=\"addrsType\">\r\n                                                        {{addrsType}}\r\n                                                    </mat-option>\r\n                                                </mat-select>\r\n                                                <mat-placeholder class=\"placeholder\">Address Type </mat-placeholder>\r\n                                            </mat-form-field>\r\n                                            <mat-error\r\n                                                *ngIf=\"item.get('addressType').touched && !item.get('addressType').valid\">\r\n                                                <small>Address Type is Required!</small>\r\n                                            </mat-error>\r\n                                        </div>-->\r\n                                        <div fxFlex=\"50\" class=\"form-group\">\r\n                                            <!-- <label for=\"forAddress1\" class=\"hint\">Address Line 1* </label> -->\r\n                                            <!-- <mat-form-field floatLabel=\"never\"> -->\r\n                                                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                                    <mat-label>Address Line 1</mat-label>\r\n                                                <input matInput formControlName=\"address1\" id=\"forAddress1\" required>\r\n                                                <!-- <mat-placeholder class=\"placeholder\">Address Line 1 </mat-placeholder> -->\r\n                                            </mat-form-field>\r\n                                            <mat-error\r\n                                                *ngIf=\"(item.get('address1').touched && !item.get('address1').valid) || (item.get('address1').touched && item.get('address1').hasError('pattern'))\">\r\n                                                <!--Fill address line 1-->\r\n                                                <small>Enter Valid Address </small>\r\n                                            </mat-error>\r\n\r\n                                        </div>\r\n                                        <div fxFlex=\"50\" class=\"form-group\">\r\n                                            <!-- <label for=\"forAddress2\" class=\"hint\">Address Line 2*</label> -->\r\n                                            <!-- <mat-form-field floatLabel=\"never\"> -->\r\n                                                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                                    <mat-label>Address Line 2</mat-label>\r\n                                                <input matInput formControlName=\"address2\"  id=\"forAddress2\" required>\r\n                                                <!-- <mat-placeholder class=\"placeholder\">Address Line 2 </mat-placeholder> -->\r\n                                            </mat-form-field>\r\n                                            <mat-error\r\n                                                *ngIf=\"(item.get('address2').touched && !item.get('address2').valid) || (item.get('address2').touched && item.get('address2').hasError('pattern'))\">\r\n                                                <!--Fill address line 2-->\r\n                                                <small>Enter Valid Address </small>\r\n                                            </mat-error>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div fxLayout=\"row wrap\">\r\n                                    <div fxFlex=\"100\" fxLayoutGap=\"10px\">\r\n                                        <div fxFlex=\"25\" class=\"form-group\">\r\n                                            <!-- <label for=\"forcountry\" class=\"hint\">Country*</label> -->\r\n                                           <!-- <mat-form-field floatLabel=\"never\"> -->\r\n                                            <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                                <mat-label>Country</mat-label>\r\n                                                <mat-select id=\"forcountry\" formControlName=\"country\" (selectionChange)=\"getStateName($event.value,true,i)\" required>\r\n\r\n                                                    <!-- <mat-option disabled>select---</mat-option> -->\r\n                                                    <mat-option *ngFor=\"let country of arrayCountry\"\r\n                                                        [value]=\"country\">\r\n                                                        {{country}}\r\n                                                    </mat-option>\r\n                                                </mat-select>\r\n                                                <!-- <mat-placeholder class=\"placeholder\">Country </mat-placeholder> -->\r\n                                            </mat-form-field>\r\n                                            <mat-error\r\n                                                *ngIf=\"item.get('country').touched && !item.get('country').valid\">\r\n                                                <small>Country is Required!</small>\r\n                                            </mat-error>\r\n                                        </div>\r\n\r\n                                        <div fxFlex=\"25\" class=\"form-group\">\r\n                                            <!-- <label for=\"forZipCode\" class=\"hint\">Zip code*</label> -->\r\n                                            <!-- <mat-form-field floatLabel=\"never\"> -->\r\n                                                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                                    <mat-label>Zip Code</mat-label>\r\n                                                <input minlength=\"6\" (keypress)=\"_keyPress($event)\"\r\n                                                maxlength=\"10\" matInput id=\"forZipCode\" onlyNumber formControlName=\"zipCode\"\r\n                                                (keyup)=\"isAllSameDigit($event, i)\" required (change)=\"getCityandStateByZipcode(item.controls['country'].value,$event.target.value,i)\">\r\n                                                <!-- <mat-placeholder class=\"placeholder\"  >Zip code </mat-placeholder> -->\r\n                                            </mat-form-field>\r\n                                            <mat-error *ngIf=\"item.get('zipCode').touched && !item.get('zipCode').valid\r\n\t\t\t\t\t\t\t\t\t                && !item.controls['zipCode'].hasError('minLength')\">\r\n\t\t\t\t\t\t\t\t                \t<small>Please enter valid Zip code</small>\r\n\t\t\t\t\t\t\t            \t</mat-error>\r\n                                            <mat-error *ngIf=\"isAllSameDigitVal && i==zipIndex\">\r\n                                                <small>Please enter valid ZipCode!</small>\r\n                                            </mat-error>\r\n                                        </div>\r\n\r\n                                        <div fxFlex=\"25\" class=\"form-group\">\r\n                                            <!-- <label for=\"forstate\" class=\"hint\">State*</label> -->\r\n                                           <!-- <mat-form-field floatLabel=\"never\"> -->\r\n                                            <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                                <mat-label>State</mat-label>\r\n                                                <mat-select id=\"forstate\" formControlName=\"state\" \r\n                                                (selectionChange)=\"onStateChange(i)\" required\r\n                                                >\r\n                                                    <!-- <mat-option disabled>select---</mat-option> -->\r\n                                                    <mat-option *ngFor=\"let state of arrayState[i]\"\r\n                                                        [value]=\"state.stateName\">\r\n                                                        {{state.stateName}}\r\n                                                    </mat-option>\r\n                                                </mat-select>\r\n                                                <!-- <mat-placeholder class=\"placeholder\">State </mat-placeholder> -->\r\n                                            </mat-form-field>\r\n                                            <mat-error\r\n                                            *ngIf=\"item.get('state').touched && !item.get('state').valid\">\r\n                                            <small>State is Required!</small>\r\n                                        </mat-error>\r\n                                        </div>\r\n                                        <div fxFlex=\"25\" class=\"form-group\">\r\n                                            <!-- <label for=\"forCity\" class=\"hint\">City*</label> -->\r\n                                           <!-- <mat-form-field floatLabel=\"never\"> -->\r\n                                            <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                                <mat-label>City</mat-label>\r\n                                                <mat-select id=\"forCity\" formControlName=\"city\" (selectionChange)=\"onCityChange(i)\" required>\r\n                                                    <!-- <mat-option disabled>select---</mat-option> -->\r\n                                                    <mat-option *ngFor=\"let City of arrayCity\"\r\n                                                        [value]=\"City\">\r\n                                                        {{City}}\r\n                                                    </mat-option>\r\n                                                </mat-select>\r\n                                                <!-- <mat-placeholder class=\"placeholder\">City </mat-placeholder> -->\r\n                                            </mat-form-field>\r\n                                            <mat-error *ngIf=\"item.get('city').touched && !item.get('city').valid\">\r\n                                                <small>City is Required!</small>\r\n                                            </mat-error>\r\n                                        </div>\r\n                                        \r\n\r\n                                       \r\n                                    </div>\r\n                                </div>\r\n                            </fieldset>\r\n                        </div>\r\n                    </div>\r\n                    <!-- For Email Information -->\r\n                    <fieldset style=\"border-top: 1px solid lightgray;margin-left: 20px; margin-right: 20px;\">\r\n                        <legend visible=\"true\">Email</legend>\r\n                        <div fxLayout=\"row wrap\">\r\n                            <div fxFlex=\"100\" fxLayoutGap=\"20px\">\r\n                                <div fxFlex=\"50\" class=\"form-group\">\r\n                                    <!-- <label for=\"forPrimaryEmail\" class=\"hint\">Primary Email*</label> -->\r\n                                    <!-- <mat-form-field floatLabel=\"never\"> -->\r\n                                        <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                            <mat-label>Primary Email</mat-label>\r\n                                        <input matInput id=\"forPrimaryEmail\" formControlName=\"primaryEmail\"                                       \r\n\t\t\t\t\t type=\"email\" pattern=\"^[^\\s@]+@[^\\s@]+\\.[^\\s@]{2,}$\" required>\r\n                                        <!-- <mat-placeholder class=\"placeholder\">Primary Email </mat-placeholder> -->\r\n                                    </mat-form-field>\r\n                                    <mat-error\r\n                                        *ngIf=\"contactFormGroup.get('primaryEmail').touched && !contactFormGroup.get('primaryEmail').valid\">\r\n                                        <small>Please enter correct Email id</small>\r\n                                    </mat-error>\r\n                                </div>\r\n                                <div fxFlex=\"50\" class=\"form-group\">\r\n                                    <!-- <label for=\"forSecondaryEmail\" class=\"hint\">Secondary Email</label> -->\r\n                                    <!-- <mat-form-field floatLabel=\"never\"> -->\r\n                                        <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                            <mat-label>Secondary Email</mat-label>\r\n                                        <input matInput id=\"forSecondaryEmail\" formControlName=\"secondaryEmail\"\r\n                                        type=\"email\" pattern=\"^[^\\s@]+@[^\\s@]+\\.[^\\s@]{2,}$\">\r\n                                        <!-- <mat-placeholder class=\"placeholder\">Secondary Email </mat-placeholder> -->\r\n                                    </mat-form-field>\r\n                                    <mat-error\r\n                                        *ngIf=\"contactFormGroup.get('secondaryEmail').touched && !contactFormGroup.get('secondaryEmail').valid\">\r\n                                        <small>Please enter correct Email id!</small>\r\n                                    </mat-error>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </fieldset>\r\n\r\n                    <fieldset style=\"border-top: 1px solid lightgray;margin-left: 20px; margin-right: 20px;\">\r\n                        <legend visible=\"true\">Contact Number</legend>\r\n                        <div fxLayout=\"row wrap\">\r\n                            <div fxFlex=\"100\" fxLayoutGap=\"20px\">\r\n                                <div fxFlex=\"50\" class=\"form-group\">\r\n                                    <!-- <label for=\"forMobileNumber\" class=\"hint\">Mobile Number*</label> -->\r\n                                    <!-- <mat-form-field floatLabel=\"never\"> -->\r\n                                        <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                            <mat-label>Mobile Number</mat-label>\r\n                                        <input matInput id=\"forMobileNumber\" formControlName=\"mobileNumber\" (keypress)=\"_keyPress($event)\" maxLength=\"10\" minlength=\"10\"  onlyNumber required>\r\n                                        <!-- <mat-placeholder class=\"placeholder\">Mobile Number </mat-placeholder> -->\r\n                                    </mat-form-field>\r\n                                    <mat-error\r\n                                    *ngIf=\"contactFormGroup.get('mobileNumber').touched && !contactFormGroup.get('mobileNumber').valid &&\r\n                                     !contactFormGroup.controls['mobileNumber'].hasError('minLength')\">\r\n                                    <small>mobile Number is Required!</small>\r\n                                </mat-error>\r\n                                <mat-error *ngIf=\"contactFormGroup.controls['mobileNumber'].value == '0000000000'\">\r\n                                    <small>\r\n                                         &nbsp; &nbsp; Please Enter Correct Mobile Number\r\n                                    </small>\r\n                                    </mat-error>\r\n                                </div>\r\n                                <div fxFlex=\"50\" class=\"form-group\">\r\n                                    <!-- <label for=\"forLandLine\" class=\"hint\">Landline Number</label> -->\r\n                                    <!-- <mat-form-field floatLabel=\"never\"> -->\r\n                                        <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                            <mat-label>Landline Number</mat-label>\r\n                                        <input matInput id=\"forLandLine\" formControlName=\"landLine\" (keypress)=\"_keyPress($event)\" maxLength=\"10\" minLength=\"10\" onlyNumber>\r\n                                        <!-- <mat-placeholder class=\"placeholder\">Landline Number </mat-placeholder> -->\r\n                                    </mat-form-field>\r\n                                    <!-- <mat-error\r\n                                        *ngIf=\"contactFormGroup.get('landLine').touched && !contactFormGroup.get('landLine').valid\">\r\n                                        <small>Mobile Number is Required!</small>\r\n                                    </mat-error> -->\r\n                                    <mat-error *ngIf=\"contactFormGroup.controls['landLine'].value == '0000000000'\">\r\n                                        <small>\r\n                                            &nbsp; &nbsp; Please Enter Correct Landline Number</small>\t\r\n                                            </mat-error>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </fieldset>\r\n                </mat-card>\r\n\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"button\">\r\n        <button mat-button class=\"Back\" \r\n        (click)=\"previous()\">Back</button>\r\n        <button mat-stroked-button class=\"Next\" \r\n        [disabled]=\"!contactFormGroup.get('isMailingAddressSame').valid || !contactFormGroup.valid\"\r\n        [ngClass]=\"(!contactFormGroup.valid)? 'disableNext':'enableNext'\"\r\n        (click)=\"onSubmit(contactFormGroup.value)\">Next</button>\r\n    </div>\r\n\r\n</form>\r\n","import { map } from 'rxjs/operators';\r\nimport { Validators } from '@angular/forms';\r\nimport { ChangeDetectorRef, Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { MatTabChangeEvent } from '@angular/material/tabs';\r\nimport { FormGroup, FormBuilder, FormArray } from '@angular/forms';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { CorporateOnboardingService } from '../corporate-onboarding.service';\r\nimport * as moment from 'moment';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { MomentDateAdapter } from '@angular/material-moment-adapter';\r\nimport { DateAdapter, MAT_DATE_FORMATS, MAT_DATE_LOCALE } from '@angular/material/core';\r\n\r\n\r\nexport const MY_FORMATS = {\r\n  parse: {\r\n      dateInput: 'LL'\r\n  },\r\n  display: {\r\n      dateInput: 'DD/MM/YYYY',\r\n      monthYearLabel: 'YYYY',\r\n      dateA11yLabel: 'LL',\r\n      monthYearA11yLabel: 'YYYY'\r\n  }\r\n};\r\n\r\n@Component({\r\n  selector: 'app-proof-of-identity',\r\n  templateUrl: './proof-of-identity.component.html',\r\n  styleUrls: ['./proof-of-identity.component.scss'],\r\n  providers: [\r\n    { provide: DateAdapter, useClass: MomentDateAdapter, deps: [MAT_DATE_LOCALE] },\r\n    { provide: MAT_DATE_FORMATS, useValue: MY_FORMATS }\r\n  ],\r\n})\r\nexport class ProofOfIdentityComponent implements OnInit {\r\n\r\n  proofOfIdentityFormGroup: FormGroup;\r\n  corporateId: any;\r\n  minDate = new Date();\r\n  validDate= new Date();\r\n  maxDate = new Date();\r\n  idTypeList: string[];\r\n  selectedOptions: any[] = [];\r\n  selectedDocumentTypes: any[] = [];\r\n\r\n  constructor(private router: Router,\r\n    private formBuilder: FormBuilder,\r\n    private ls: LocalStoreService,\r\n    private corporateService: CorporateOnboardingService,\r\n    private cdr: ChangeDetectorRef,private snack: MatSnackBar,\r\n    private apiService: ApiService) { \r\n      this.validDate.setDate(this.validDate.getDate());\r\n      this.proofOfIdentityFormGroup = this.formBuilder.group({\r\n        corporateId: [''],\r\n        incorporationNumber: ['',[Validators.required,Validators.pattern(\"^[a-zA-Z0-9]{0,35}$\")]],\r\n        dateOfIssue:['',[Validators.required]],\r\n        dateOfExpiry:['',[Validators.required]],\r\n        isAnotherIdProofRequired:['NO'],\r\n        \r\n        idProofList:this.formBuilder.array([])\r\n      })\r\n      // this.corporateService.stepReady(this.proofOfIdentityFormGroup, 'four')\r\n    }\r\n  ngOnInit(): void {\r\n    this.corporateService.corporateAccountIdVal\r\n    .subscribe(corporateId => {\r\n      console.log('corporateId :: ', this.corporateId = corporateId);\r\n      this.proofOfIdentityFormGroup.get('corporateId').setValue(corporateId)\r\n      if(this.corporateId){\r\n        this.getCoropratedetails(this.corporateId);\r\n      }\r\n    });\r\n    this.getIdType();\r\n    // this.addDocument();\r\n  }\r\n  addIdProof() {\r\n    return this.formBuilder.group({\r\n      idType: ['',[Validators.required]],\r\n      idNumber: ['',[Validators.required]]\r\n    });\r\n  }\r\n\r\n  ngAfterViewInit(){\r\n    if(this.ls.getItem('corporateId')){      \r\n      this.getCoropratedetails(this.ls.getItem('corporateId'));\r\n    }\r\n   }\r\n\r\n  radioSelection(event) {\r\n    console.log('event :: ', event);\r\n    const controls=this.proofOfIdentityFormGroup.get('idProofList') as FormArray;\r\n    if (event === 'NO') {\r\n      controls.clear();\r\n      this.cdr.detectChanges();\r\n      this.cdr.markForCheck();\r\n    } else {\r\n      controls.push(this.addIdProof());\r\n      controls.controls[0].get('idType').setValidators(Validators.required);\r\n      controls.controls[0].get('idNumber').setValidators(Validators.required);\r\n      controls.updateValueAndValidity();\r\n      this.cdr.detectChanges();\r\n      this.cdr.markForCheck();\r\n    }\r\n  }\r\n  getIdType(){\r\n    this.apiService.getDropDownValues(\"document_name\").subscribe((re) => {\r\n      this.idTypeList = re;\r\n    });\r\n  }\r\n\r\n  changeValue2(value: any, index) {\r\n    const controls=this.proofOfIdentityFormGroup.get('idProofList') as FormArray;\r\n    if(value==\"Pan card\"){\r\n      controls.controls[index].get('idNumber').setValidators([Validators.pattern(\"(?=.*[0-9])(?=.*[a-zA-Z])([a-zA-Z0-9]+){6,6}$\"),Validators.required]) ;\r\n      controls.updateValueAndValidity();\r\n\r\n    }else{\r\n      controls.controls[index].get('idNumber').setValidators([Validators.required]);\r\n      controls.updateValueAndValidity();\r\n    }\r\n    if (this.selectedDocumentTypes[index]) {\r\n      this.selectedOptions = this.selectedOptions.filter(val => val !== this.selectedDocumentTypes[index])\r\n    }\r\n    this.selectedDocumentTypes[index] = value;\r\n    this.selectedOptions.push(value);\r\n  }\r\n  \r\n  isDocumentOptionDisabled = (value) => {\r\n    return this.selectedOptions.includes(value);\r\n  }\r\n\r\n  onSubmit(directorFormGroup){\r\n    console.log(\"directorFormGroup BEFORE:: \",directorFormGroup);\r\n    let obj={}\r\n    Object.keys(directorFormGroup).map(function(key, index) {\r\n        if(key === 'dateOfIssue' || key === 'dateOfExpiry'){\r\n          directorFormGroup[key]=moment(directorFormGroup[key]).format('YYYY-MM-DD');\r\n          obj[key]=directorFormGroup[key]\r\n      }else{\r\n        if(key != 'isAnotherIdProofRequired' && key != 'idProofList'){\r\n          obj[key]=directorFormGroup[key]\r\n        }\r\n      }\r\n    });\r\n    console.log(\"directorFormGroup after:: \",obj);\r\n    this.corporateService.saveOrUpdateCorporateAccountInfo(obj)\r\n    .subscribe(data=>{\r\n      console.log('data :: ', data);\r\n      if(data != null){\r\n        this.snack.open(`Proof of identity saved`+ ' !', 'OK', {\r\n          duration: 4000,\r\n          verticalPosition: 'top',\r\n          horizontalPosition: 'right'\r\n        });\r\n        this.next();\r\n        this.cdr.markForCheck();\r\n      } else {\r\n        this.snack.open('Not able to connect to server!', 'INTERNAL SERVER ERROR', {\r\n          duration: 4000,\r\n          verticalPosition: 'top',\r\n          horizontalPosition: 'right'\r\n        });\r\n      }\r\n    }, error => {\r\n        console.log('error resp :: ',error);\r\n        this.snack.open(`${error.error.message} `, 'OK', {\r\n          duration: 4000,\r\n          verticalPosition: 'top',\r\n          horizontalPosition: 'right'\r\n        });\r\n    });\r\n  }\r\n\r\n  getCoropratedetails(e){\r\n    this.apiService.getCoropratedetails(e).subscribe((details => {\r\n      console.log(details);\r\n      if(details){\r\n        this.proofOfIdentityFormGroup.patchValue(details);\r\n      }\r\n    }))\r\n    }\r\n\r\n  previous() {\r\n    this.corporateService.sendDisableMatTab({\r\n      index: 2,\r\n    });\r\n  }\r\n\r\n  next() {\r\n    this.corporateService.sendDisableMatTab({\r\n      index: 4,\r\n    });\r\n    this.corporateService.setFinishFlag({\r\n      finishFlag: false,\r\n    });\r\n  }\r\n  \r\n  deleteDocument(item, i) {\r\n    console.log('delete record :: ', item, ' index :: ', i);\r\n    this.getDocumentList.removeAt(i);\r\n  }\r\n\r\n  get getDocumentList() {\r\n    return this.proofOfIdentityFormGroup.get('idProofList') as FormArray;\r\n  }\r\n\r\n  addDocument() {\r\n    this.getDocumentList.push(this.formBuilder.group({\r\n      idType: ['',[Validators.required]],\r\n      idNumber: ['',[Validators.required]],\r\n    }));\r\n  }\r\n}\r\n","<form [formGroup]=\"proofOfIdentityFormGroup\" ngNativeValidate>\r\n\r\n\r\n    <div class=\"full-width\">\r\n        <div style=\"padding: 1rem 0;background-color:#F1F1F4\">\r\n            <div style=\"padding: 0 4.3rem\">\r\n                <mat-card style=\"border-radius: 0px;\">\r\n                    <div fxLayout=\"column\" class=\"full-width\" fxLayoutAlign=\"space-around start\">\r\n                        <div class=\"full-width\" style=\"padding: 1rem 1rem;\">\r\n                            <h2 style=\"font-size: 18px; margin-left: 10px;\">Proof Of Identity</h2>\r\n                            <mat-divider style=\"width:70px;border-bottom: 7px solid #456EFE;left: 40px; border-radius: 30px;\">\r\n                            </mat-divider>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                    <fieldset style=\"border-top: 1px solid lightgray;margin-left: 20px; margin-right: 20px;\">\r\n                        <legend visible=\"true\">Certificate of Incorporation Details</legend>\r\n                    </fieldset>\r\n\r\n\r\n                    <div fxLayout=\"row wrap\" class=\"top\">\r\n                        <div fxFlex=\"100\" fxLayoutGap=\"30px\">\r\n                            <div fxFlex=\"30\" class=\"form-group\" style=\"padding-left: 22px;\">\r\n                                <!-- <label for=\"forincorporationNumber\" class=\"hint\">Incorporation Number* </label> -->\r\n                                <!-- <mat-form-field floatLabel=\"never\"> -->\r\n                                    <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                        <mat-label>Incorporation Number</mat-label>\r\n                                    <input matInput formControlName=\"incorporationNumber\" id=\"forincorporationNumber\"\r\n                                    maxLength=\"35\" minLength=\"0\" onlyNumber required>\r\n                                    <!-- <mat-placeholder class=\"placeholder\">Incorporation Number </mat-placeholder> -->\r\n                                </mat-form-field>\r\n                                <mat-error\r\n                                    *ngIf=\"proofOfIdentityFormGroup.get('incorporationNumber').touched && proofOfIdentityFormGroup.get('incorporationNumber').hasError('required')\">\r\n                                    <small>Incorporation Number is Required!</small>\r\n                                </mat-error>\r\n                                <mat-error *ngIf=\"proofOfIdentityFormGroup.get('incorporationNumber').hasError('pattern')\">\r\n                                    <small>Please Enter Valid Incorporation Number!</small>                                 \r\n                                 </mat-error>\r\n                            </div>\r\n\r\n                            <div fxFlex=\"30\" class=\"form-group\">\r\n                                <!-- <label for=\"forIddateOfIssue\" class=\"hint\">Date of Issue* </label> -->\r\n                                <!-- <mat-form-field floatLabel=\"never\"> -->\r\n                                    <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                        <mat-label>Date of Issue</mat-label>\r\n                                    <input matInput id=\"forIddateOfIssue\" [matDatepicker]=\"dateOfIssue\" [max]=\"maxDate\"\r\n                                        readonly formControlName=\"dateOfIssue\" required>\r\n                                    <!-- <mat-placeholder class=\"placeholder\">Date of Issue </mat-placeholder> -->\r\n                                    <mat-datepicker-toggle matSuffix [for]=\"dateOfIssue\"></mat-datepicker-toggle>\r\n                                    <mat-datepicker #dateOfIssue></mat-datepicker>\r\n                                </mat-form-field>\r\n                                <mat-error\r\n                                    *ngIf=\"proofOfIdentityFormGroup.get('dateOfIssue').touched && !proofOfIdentityFormGroup.get('dateOfIssue').valid\">\r\n                                    <small>Please Select Date of Issue</small>\r\n                                </mat-error>\r\n                            </div>\r\n\r\n                            <div fxFlex=\"30\" class=\"form-group\">\r\n                                <!-- <label for=\"forIddateOfExpiry\" class=\"hint\">Date of Expiry*</label> -->\r\n                                <!-- <mat-form-field floatLabel=\"never\"> -->\r\n                                    <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                        <mat-label>Date of Expiry</mat-label>\r\n                                    <input matInput id=\"forIddateOfExpiry\" [matDatepicker]=\"dateOfExpiry\" [min]=\"validDate\"\r\n                                       readonly formControlName=\"dateOfExpiry\" required>\r\n                                    <!-- <mat-placeholder class=\"placeholder\">Date of Expiry </mat-placeholder> -->\r\n\r\n                                    <mat-datepicker-toggle matSuffix [for]=\"dateOfExpiry\"></mat-datepicker-toggle>\r\n                                    <mat-datepicker #dateOfExpiry></mat-datepicker>\r\n                                </mat-form-field>\r\n                                <mat-error\r\n                                    *ngIf=\"proofOfIdentityFormGroup.get('dateOfExpiry').touched && !proofOfIdentityFormGroup.get('dateOfExpiry').valid\">\r\n                                    <small>Please Select Date of Expiry</small>\r\n                                </mat-error>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div fxLayout=\"row wrap\">\r\n                        <div fxFlex=\"100\" fxLayoutGap=\"20px\">\r\n                            <!-- <div fxFlex=\"2\"></div> -->\r\n                            <div fxFlex=\"28\">\r\n                                <mat-label style=\"padding-left: 10px;\"> Do you want add another proof of ID? </mat-label>\r\n                            </div>\r\n                            <div fxFlex=\"50\">\r\n\r\n                                <mat-radio-group formControlName=\"isAnotherIdProofRequired\"\r\n                                    *ngFor=\"let x of ['YES','NO']; let i = index\">\r\n                                    <mat-radio-button [value]=\"x\" (change)=\"radioSelection($event.value)\"\r\n                                        [checked]=\"x == proofOfIdentityFormGroup.value.isAnotherIdProofRequired\">{{x}}\r\n                                    </mat-radio-button>&nbsp;\r\n                                </mat-radio-group>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div formArrayName=\"idProofList\" *ngIf=\"proofOfIdentityFormGroup.get('isAnotherIdProofRequired').value == 'YES' \">\r\n                        <div *ngFor=\"let item of proofOfIdentityFormGroup.get('idProofList')['controls']; let i = index;\"\r\n                            [formGroupName]=\"i\">\r\n                            <fieldset  style=\"border-top: 1px solid lightgray;margin-left: 20px; margin-right: 20px;\">\r\n                                <div fxLayout=\"row wrap\" class=\"top\">\r\n                                    <div fxFlex=\"100\" fxLayoutGap=\"30px\">\r\n                                        <div fxFlex=\"30\" class=\"form-group\">\r\n                                            <!-- <label for=\"forIdType\" class=\"hint\">Id Type </label> -->\r\n                                            <!-- <mat-form-field floatLabel=\"never\"> -->\r\n                                                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                                    <mat-label>Id Type</mat-label>\r\n                                                <mat-select formControlName=\"idType\" id=\"forIdType\"\r\n                                                (valueChange)=\"changeValue2($event, i)\">\r\n                                                    <!-- <mat-option disabled>select---</mat-option> -->\r\n                                                    <mat-option *ngFor=\"let idType of idTypeList\" \r\n                                                    [disabled] = isDocumentOptionDisabled(idType)\r\n                                                    [value]=\"idType\">\r\n                                                        {{idType}}\r\n                                                    </mat-option>\r\n                                                </mat-select>\r\n                                             <!-- <mat-placeholder class=\"placeholder\">Select Id Type* </mat-placeholder> -->\r\n                                            </mat-form-field>\r\n                                            <mat-error\r\n                                                   *ngIf=\"item.get('idType').touched && !item.get('idType').valid\">\r\n                                                  <small>Please Select Id Type</small>\r\n                                             </mat-error>\r\n                                        </div>\r\n\r\n                                        <div fxFlex=\"30\" class=\"form-group\">\r\n                                            <!-- <label for=\"forIdNumber\" class=\"hint\">Id Number </label> -->\r\n                                            <!-- <mat-form-field floatLabel=\"never\"> -->\r\n                                                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                                    <mat-label>Id Number</mat-label>\r\n                                                <input matInput formControlName=\"idNumber\" id=\"forIdNumber\"\r\n                                                maxLength=\"12\" minLength=\"6\" >\r\n                                                <!-- <mat-placeholder class=\"placeholder\">Enter Id Number* </mat-placeholder> -->\r\n                                            </mat-form-field>\r\n                                            <mat-error\r\n                                                   *ngIf=\"!(item.get('idType').value =='Pan card') && item.get('idNumber').touched && !item.get('idNumber').valid\">\r\n                                                  <small>Please Enter Id Number</small>\r\n                                             </mat-error>\r\n                                             <mat-error  *ngIf=\"(item.get('idType').value =='Pan card') && item.get('idNumber').touched && !item.get('idNumber').valid\" ><small> Id Number should be a combination of minimum of 6 alphanumeric characters</small></mat-error>\r\n                                        </div>\r\n                                        \r\n                                        \r\n                                        <button mat-button (click)=\"deleteDocument(item,i)\">\r\n                                            <mat-icon style=\"color: tomato;\">delete_outline</mat-icon>\r\n                                        </button>\r\n\r\n                                    </div>\r\n\r\n                                \r\n                                </div>\r\n\r\n                            </fieldset>\r\n                        </div>\r\n                        <button [disabled]=\"selectedOptions.length == 3\" mat-button (click)=\"addDocument($event)\" color=\"primary\">\r\n                            <mat-icon>add</mat-icon> ADD\r\n                        </button>\r\n                    </div>\r\n\r\n                </mat-card>\r\n\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"button\">\r\n        <button mat-button class=\"Back\" \r\n        (click)=\" previous()\">Back</button>\r\n        <button mat-stroked-button class=\"Next\" [disabled]=\"proofOfIdentityFormGroup.invalid\" (click)=\"onSubmit(proofOfIdentityFormGroup.value)\"\r\n            >Next</button>\r\n    </div>\r\n\r\n</form>\r\n","import { Component, HostListener, OnInit, ViewChild } from '@angular/core';\r\nimport { FormBuilder } from '@angular/forms';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { ContactInformationComponent } from '../contact-information/contact-information.component';\r\nimport { CorporateOnboardingService } from '../corporate-onboarding.service';\r\nimport { DirectorDetailsComponent } from '../director-details/director-details.component';\r\nimport { OnboradingPrimaryComponent } from '../onborading-primary/onborading-primary.component';\r\nimport { OtherInfoCorporateComponent } from '../other-info-corporate/other-info-corporate.component';\r\nimport { ProofOfIdentityComponent } from '../proof-of-identity/proof-of-identity.component';\r\n\r\n@Component({\r\n  selector: 'app-onboarding-corporate-main',\r\n  templateUrl: './onboarding-corporate-main.component.html',\r\n  styleUrls: ['./onboarding-corporate-main.component.scss']\r\n})\r\nexport class OnboardingCorporateMainComponent implements OnInit {\r\n  tabIndex: Number=0;\r\n  tab1: boolean;\r\n  tab2: boolean;\r\n  tab3: boolean;\r\n  tab4: boolean;\r\n  tab5: boolean;\r\n  finishFlag: boolean=true;\r\n\r\n\r\n  constructor(\r\n    public formService: CorporateOnboardingService,\r\n    private ls: LocalStoreService,\r\n  ) {\r\n\r\n  }\r\n  ngOnInit(): void {\r\n    this.formService.disableMatTabVal\r\n    .subscribe(data=>{\r\n      console.log(\"disabled :: \", data);\r\n    })\r\n    this.formService.getDisableMatTab().subscribe(resp => {\r\n      console.log(\"index\",resp.index)\r\n      this.tabIndex = resp.index;\r\n      if(sessionStorage.getItem('ClosingCheck') == null ){        \r\n        this.tabIndex=0;\r\n        this.ls.removeItem('corporateId')\r\n        this.assignValuesForTab2(this.tabIndex);\r\n      }else{\r\n      if(this.ls.getItem('corporateTabIndex')){\r\n        this.tabIndex = this.ls.getItem('corporateTabIndex');\r\n      }else{\r\n        this.tabIndex=0;\r\n      }\r\n      this.formService.getFinishFlag().subscribe(resp=>{\r\n        console.log(\"finish flag\",resp.finishFlag);\r\n        this.assignValueFinish(resp.finishFlag)\r\n      })\r\n      if (resp.index === 0) {\r\n        this.assignValuesForTab2(this.tabIndex);\r\n      }\r\n      if (resp.index === 1) {\r\n        this.assignValuesForTab2(this.tabIndex);\r\n      }\r\n      if (resp.index === 2) {\r\n        this.assignValuesForTab3(this.tabIndex);\r\n      }\r\n      if (resp.index === 3) {\r\n        this.assignValuesForTab4(this.tabIndex);\r\n      }\r\n      if (resp.index === 4) {\r\n        this.assignValuesForTab5(this.tabIndex);\r\n      }\r\n      // TODO WITH MATTAB DISABLE CUSTOM LATER\r\n      // this.tabGroup._tabs[resp.index].disabled = true;\r\n      }\r\n    })\r\n  }\r\n\r\n  assignValueFinish(finishFlag) {\r\n    this.finishFlag=finishFlag;\r\n  }\r\n\r\n  assignValuesForTab1(tabIndex) {\r\n    this.tab1 = false;\r\n  }\r\n\r\n  assignValuesForTab2(tabIndex) {\r\n    this.tab2 = false;\r\n  }\r\n\r\n  assignValuesForTab3(tabIndex) {\r\n    this.tab3 = false;\r\n  }\r\n\r\n  assignValuesForTab4(tabIndex) {\r\n    this.tab4 = false;\r\n  }\r\n\r\n  assignValuesForTab5(tabIndex) {\r\n    this.tab5 = false;\r\n  }\r\n\r\n}\r\n","<div class=\"head\">\r\n\t<h4 class=\"main-head\" style=\"color: #BFBFC1;\">Home>New Customer Onboarding | Corporate</h4>\r\n\t<h1 class=\"main-head\" style=\"padding-top: 0px;\">New Customer Onboarding | Corporate</h1>\r\n\t<div class=\"basic-container\">\r\n\t<mat-tab-group mat-align-tabs=\"start\" style=\"padding-left: 1px;\"  [(selectedIndex)]=\"tabIndex\" #tabGroup>\r\n\r\n\t\t<mat-tab [disabled]='!tab1 || finishFlag' label=\"Primary Information\">\r\n\t\t\t\t<app-onborading-primary *ngIf=\"tabIndex == 0\"></app-onborading-primary>\r\n\t\t\t</mat-tab>\r\n\t\t<mat-tab [disabled]='!tab2 || finishFlag' label=\"Director Details\">\r\n\t\t\t\t<app-director-details *ngIf=\"tabIndex == 1\"></app-director-details>\r\n\t\t\t</mat-tab>\r\n\t\t<mat-tab [disabled]='!tab3 || finishFlag' label=\"Contact Information\">\r\n\t\t\t\t<app-contact-information *ngIf=\"tabIndex == 2\"></app-contact-information>\r\n\t\t\t</mat-tab>\r\n\t\t<mat-tab [disabled]='!tab4 || finishFlag' label=\"Proof Of Identity\">\r\n\t\t\t\t<app-proof-of-identity *ngIf=\"tabIndex == 3\"></app-proof-of-identity>\r\n\t\t\t</mat-tab>\r\n\t\t<mat-tab [disabled]='!tab5 || finishFlag' label=\"Other Information\">\r\n\t\t\t\t<app-other-info-corporate *ngIf=\"tabIndex == 4\"></app-other-info-corporate>\r\n\t\t\t</mat-tab>\r\n\t\t</mat-tab-group>\r\n\t</div>\r\n</div>","import { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from '@angular/forms';\r\nimport { API_URL } from 'app/shared/services/finger-print-capture.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { ShowMessageService } from 'app/shared/services/showMessage/show-message.service';\r\nimport { Subject, Observable, BehaviorSubject, throwError } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CorporateOnboardingService {\r\n\r\n  // private stepOneSource: Subject<FormGroup> = new Subject();\r\n  // stepOne: Observable<FormGroup> = this.stepOneSource.asObservable();\r\n\r\n  // private stepTwoSource: Subject<FormGroup> = new Subject();\r\n  // stepTwo: Observable<FormGroup> = this.stepTwoSource.asObservable();\r\n\r\n  // private stepThreeSource: Subject<FormGroup> = new Subject();\r\n  // stepThree: Observable<FormGroup> = this.stepThreeSource.asObservable();\r\n\r\n  // private stepFourSource: Subject<FormGroup> = new Subject();\r\n  // stepFour: Observable<FormGroup> = this.stepFourSource.asObservable();\r\n\r\n  // private stepFiveSource: Subject<FormGroup> = new Subject();\r\n  // stepFive: Observable<FormGroup> = this.stepFiveSource.asObservable();\r\n\r\n  // mainForm: FormGroup = this._formBuilder.group({\r\n  //   \"companyName\": [''],\r\n  //   \"category\": [''],\r\n  //   \"country\": [''],\r\n  //   \"noOfDirector\": [''],\r\n  //   \"addressLine1\":['']\r\n  // })\r\n\r\n  constructor(\r\n    private _formBuilder: FormBuilder,\r\n    private http: HttpClient, private showMessageService: ShowMessageService,\r\n    private ls: LocalStoreService\r\n  ) {}\r\n  //   this.stepOne.subscribe(form =>\r\n  //     form.valueChanges.subscribe(val => {\r\n  //       this.mainForm.value.companyName = val.companyName\r\n  //       this.mainForm.value.category = val.category\r\n  //       this.mainForm.value.country = val.country\r\n  //     })\r\n  //   )\r\n  //   this.stepTwo.subscribe(form =>\r\n  //     form.valueChanges.subscribe(val => {\r\n  //       // console.log(val)\r\n  //       this.mainForm.value.noOfDirector = val.noOfDirector\r\n  //     })\r\n  //   )\r\n\r\n  //   this.stepThree.subscribe(form =>\r\n  //     form.valueChanges.subscribe(val => {\r\n  //       console.log(val)\r\n  //       this.mainForm.value.addressLine1 = val.addressLine1\r\n  //     })\r\n  //   )\r\n  // }\r\n\r\n  // stepReady(form: FormGroup, part) {\r\n  //   switch (part) {\r\n  //     case 'one': { this.stepOneSource.next(form) }\r\n  //     case 'two': { this.stepTwoSource.next(form) }\r\n  //     case 'three': { this.stepThreeSource.next(form) }\r\n  //     case 'four': { this.stepFourSource.next(form) }\r\n  //     case 'five': { this.stepFiveSource.next(form) }\r\n  //   }\r\n  // }\r\n\r\n \r\n\r\n  // private errorHandler = (errorResp: HttpErrorResponse) => {\r\n  //   console.error('Error : ' + errorResp.message);\r\n  //   console.error('status : ' + errorResp.status);\r\n  //   this.showMessageService.errorMessage(errorResp.status, errorResp);\r\n  //   return throwError(errorResp);\r\n  // }\r\n\r\n\r\n  private corporateAccountIdRef = new BehaviorSubject(null);\r\n  corporateAccountIdVal = this.corporateAccountIdRef.asObservable();\r\n\r\n  sendCorporateAccountId(message: any) {\r\n    this.corporateAccountIdRef.next(message);\r\n  }\r\n  getCorporateAccountId(): Observable<any> {\r\n    return this.corporateAccountIdRef.asObservable();\r\n  }\r\n\r\n  private disableMatTab = new BehaviorSubject({\r\n    index: this.ls.getItem('corporateTabIndex')? this.ls.getItem('corporateTabIndex') : ''\r\n  });\r\n  disableMatTabVal = this.disableMatTab.asObservable();\r\n\r\n  sendDisableMatTab(index: any) {\r\n    this.ls.setItem('corporateTabIndex', index.index);\r\n    this.disableMatTab.next(index);\r\n  }\r\n  getDisableMatTab(): Observable<any> {\r\n    return this.disableMatTab.asObservable();\r\n  }\r\n\r\n  private finishFlag = new BehaviorSubject<any>({\r\n    finishFlag: true\r\n  })\r\n  getFinishFlag() {\r\n    return this.finishFlag.asObservable();\r\n  }\r\n  setFinishFlag(finishFlag) {\r\n    this.finishFlag.next(finishFlag);\r\n  }\r\n\r\n  private finishSave = new BehaviorSubject<any>([]);\r\n  getfinishSave() {\r\n    return this.finishSave.asObservable();\r\n  }\r\n  setfinishSave(finishSave) {\r\n    this.finishSave.next(finishSave);\r\n  }\r\n\r\n  private noOfDirectors = new BehaviorSubject<any>([]);\r\n  getnoOfDirectors() {\r\n    return this.noOfDirectors.asObservable();\r\n  }\r\n  setnoOfDirectors(noOfDirectors) {\r\n    this.noOfDirectors.next(noOfDirectors);\r\n  }\r\n\r\n  saveOrUpdateCorporateAccountInfo(data: any) {\r\n    return this.http.post<any>(`${API_URL}/corporateCustomer/upsertDetails`, data);\r\n  }\r\n}\r\n","import { FormArray, FormBuilder, FormGroup, Validators, FormGroupDirective } from '@angular/forms';\r\nimport { ApiService } from './../../../../shared/services/api.service';\r\nimport { ChangeDetectorRef, Component, ElementRef, Input, OnInit, Output, ViewChild } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { CorporateOnboardingService } from '../corporate-onboarding.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ApplicationEntryStageService } from 'app/shared/services/application-entry-stage.service';\r\nimport { MatAutocomplete, MatAutocompleteTrigger } from '@angular/material/autocomplete';\r\nimport { fromEvent } from 'rxjs';\r\nimport { debounceTime, pluck, distinctUntilChanged, filter } from 'rxjs/operators';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { AnySrvRecord } from 'dns';\r\nimport { DatePipe } from '@angular/common';\r\nimport { DirectorDetailsComponent } from '../director-details/director-details.component';\r\n\r\n@Component({\r\n  selector: 'app-create-director',\r\n  templateUrl: './create-director.component.html',\r\n  styleUrls: ['./create-director.component.scss'],\r\n  providers: [DatePipe]\r\n})\r\nexport class CreateDirectorComponent implements OnInit {\r\n  @ViewChild(MatAutocompleteTrigger) autocomplete: MatAutocompleteTrigger;\r\n  @ViewChild('input') inputElement: ElementRef;\r\n\r\n  fieldArray: Array<any> = [];\r\n  private newAttribute: any = {};\r\n  arrData = [];\r\n  directorCount = 1;\r\n  showHide: boolean;\r\n  showcard: any[];\r\n  deletecount: number;\r\n  showonlydirectorDetails: boolean;\r\n  NameOfDirector: string\r\n  @Input() item: any;\r\n  @Input() index: any\r\n  prefixList: any[];\r\n  genderList: string[];\r\n  residenceList: string[];\r\n  maxDate = new Date();\r\n  minDate = new Date();\r\n  cifNumberForPayload: any;\r\n  customerIdForPayload: any;\r\n\r\n  idTypeList: string[];\r\n  panelOpenState = false;\r\n  createDirectorFormGroup: FormGroup;\r\n  corporateId: any;\r\n  customerId:any;\r\n  arrayState: string[] = [] ;\r\n  arrayCountry: string[] = [];\r\n  arrayCity: string[] = [];\r\n  arrayResidence: string[];\r\n  profileImage: any = \"not_available\";\r\n  initials: any;\r\n  addressTypeList: string[];\r\n  noOfDir: any;\r\n  saveStatus: any[] = [];\r\n  showAutocomplete: boolean;\r\n  customerInfoList: any[] = [];\r\n  existingCustomer: boolean;\r\n  isEdit: boolean = false;\r\n  isDirectorSaved:boolean=false;\r\n  Currency: any;\r\n  currencyCode: any;\r\n  country: void;\r\n  // zipcode: any;\r\n  cifNumber: any;\r\n  isChecked = true;\r\n  disabled = true;\r\n  disabledToggle = true;\r\n  isAllSameDigitVal: boolean = false;\r\n  prefixFlag: boolean=false;\r\n  timer: any;\r\n  corporateExistingCustomer:boolean=false;\r\n  totalDir: any;\r\n  isAllNumberZeroFlag: boolean = false;\r\n  currencyCode2: any;\r\n  currencyCode1: any;\r\n  constructor(private router: Router,\r\n    private formBuilder: FormBuilder,\r\n    private appApiService: ApplicationEntryStageService,\r\n    private corporateService: CorporateOnboardingService,\r\n    private cdr: ChangeDetectorRef, private snack: MatSnackBar,\r\n    private apiService: ApiService,\r\n    private ls: LocalStoreService,\r\n    public datepipe: DatePipe,\r\n    public directorComponent: DirectorDetailsComponent) {\r\n    this.createDirectorFormGroup = this.formBuilder.group({\r\n      \"customerId\": this.customerId,\r\n      citizenship: [''],\r\n      cifNumber: [''],\r\n      corporateId: [''],\r\n      countryOfResidence: [''],\r\n      dateOfBirth: [''],\r\n      existingCustomer: [''],\r\n      firstName: [''],\r\n      gender: [''],\r\n      landlineNumber: ['', [Validators.minLength(10), Validators.maxLength(10)]],\r\n      lastName: [''],\r\n      middleName: [''],\r\n      phoneNumber: ['', [Validators.minLength(10), Validators.maxLength(10)]],\r\n      placeOfBirth: [''],\r\n      prefix: [''],\r\n      primaryCustomer: [this.index==0?true:false],\r\n      primaryEmailAdress: [''],\r\n      residenceStatus: [''],\r\n      \"verificationType\":\"onboarding\",\r\n      idNumber: [''],\r\n      idType: [''],\r\n      expiryDate: [''],\r\n      userAddress: formBuilder.array([]),\r\n     // custIdProofs: formBuilder.array([]),\r\n      custTaxInfo: formBuilder.array([])\r\n    })\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    console.log(this.inputElement,this.item);\r\n    \r\n    console.log(\"testtt\");\r\n    this.toggleChanges(false, null)\r\n    this.totalDir= this.ls.getItem('totalCust');\r\n    console.log(\"totalDir\",this.totalDir);\r\n    \r\n    // this.corporateService.corporateAccountIdVal\r\n    //   .subscribe(corporateId => {\r\n    //     this.corporateId = corporateId;\r\n    //     console.log('corporateId :: ', this.corporateId);\r\n    //     this.createDirectorFormGroup.get('corporateId').setValue(corporateId)\r\n    //     if(this.corporateId){\r\n    //       this.getCoropratedetails(this.corporateId);\r\n    //       console.log('if');\r\n          \r\n    //     }\r\n    //     else{\r\n    //       if(this.ls.getItem('corporateId')){\r\n    //         console.log('else');\r\n            \r\n    //         this.getCoropratedetails(this.ls.getItem('corporateId'));\r\n    //       }\r\n    //     }\r\n    //   });\r\n    this.corporateId = this.ls.getItem('corporateId')\r\n    this.createDirectorFormGroup.get('corporateId').setValue(this.corporateId)\r\n    console.log(this.createDirectorFormGroup);\r\n    \r\n    this.getCoropratedetails(this.corporateId)\r\n    this.corporateService.getnoOfDirectors().subscribe(noOfDir => {\r\n      this.noOfDir = noOfDir;\r\n      console.log('noOfDir:: ', noOfDir);\r\n      if (this.noOfDir && this.item > 1) {\r\n        this.disabled = false;\r\n        this.isChecked = false;\r\n        this.disabledToggle = false;\r\n      }\r\n    })\r\n    \r\n    this.prefixFlag=true;\r\n    this.getDoc();\r\n    this.addAddress();\r\n   // this.addIdProof();\r\n    this.addCustTaxInfo();\r\n    this.getCountryName(\"country\");\r\n    this.getAllAuthCities();\r\n    this.getStateName(\"state\");\r\n    // this.getCityName(\"city\");\r\n    this.getResidenceDetails('residence');\r\n    this.createDirectorFormGroup.valueChanges\r\n      .subscribe(data => {\r\n        if (data.firstName != '') {\r\n          this.profileImage = \"available\";\r\n          this.createInititals(data.firstName);\r\n        }\r\n\r\n        if (data.lastName != '') {\r\n          // console.log('data if lastName:: ', data);\r\n          this.profileImage = \"available\";\r\n          this.createInititals(data.lastName);\r\n        }\r\n      })\r\n  }\r\n  get getAddressData() {\r\n    return this.createDirectorFormGroup.get('userAddress') as FormArray;\r\n  }\r\n\r\n  addAddress() {\r\n    this.getAddressData.push(this.formBuilder.group({\r\n      addressType: [''],\r\n      address1: [[''],[Validators.pattern(\".*[a-zA-Z].*\")]],\r\n      address2: [[''],[Validators.pattern(\".*[a-zA-Z].*\")]],\r\n      city: [''],\r\n      state: [''],\r\n      country: [''],\r\n      zipCode: ['',[Validators.required, Validators.pattern(\"^((\\\\+91-?)|0)?[0-9]{5,10}$\")]]\r\n    }));\r\n  }\r\n\r\n  get getIdProofData() {\r\n    return this.createDirectorFormGroup.get('custIdProofs') as FormArray;\r\n  }\r\n\r\n  addIdProof() {\r\n    this.getIdProofData.push(this.formBuilder.group({\r\n      idNumber: [''],\r\n      idType: [''],\r\n      expiryDate: ['']\r\n    }));\r\n  }\r\n\r\n  get getCustTaxInfo() {\r\n    return this.createDirectorFormGroup.get('custTaxInfo') as FormArray;\r\n  }\r\n\r\n  addCustTaxInfo() {\r\n    this.getCustTaxInfo.push(this.formBuilder.group({\r\n      taxId:['', [Validators.required, Validators.pattern(\"^[0-9]*$\")]],\r\n      countryOfIssue: ['']\r\n    }));\r\n  }\r\n  // getCountryName(key: string) {\r\n  //   console.log('country in contact info :: ', key);\r\n  //   this.apiService.getDropDownValues(key).subscribe((data) => {\r\n  //     this.arrayCountry = data;\r\n  //     console.log(\"country in contact info -->\", this.arrayCountry)\r\n  //   });\r\n  // }\r\n  getCountryName(key: string) {\r\n    console.log(\"ghg\")\r\n    this.apiService.getAllCountries().subscribe((data: any) => {\r\n     for(let i=0; i<data.length;i++){\r\n       if(data[i].authStatus==='A'){     \r\n         this.arrayCountry.push(data[i].countryName);\r\n       }\r\n     }\r\n   });\r\n }\r\n  onSelectionResidance(data: any) {\r\n    if (data) {\r\n    this.apiService.fetchCurrencyInfo(data).subscribe((value) => {\r\n      if(value){\r\n        this.currencyCode2 = value.currencyCode.toLowerCase();\r\n      }\r\n      else{\r\n        this.currencyCode2 = null;\r\n      }\r\n    })\r\n  }\r\n  }\r\n\r\n  onSelectionCitizionship(data: any) {\r\n    if (data) {\r\n    this.apiService.fetchCurrencyInfo(data).subscribe((value) => {\r\n      if(value){\r\n        this.currencyCode1 = value.currencyCode.toLowerCase();\r\n      }\r\n      else{\r\n        this.currencyCode1 = null;\r\n      }\r\n    })\r\n  }\r\n  }\r\n\r\n  getStateName(country,isAdd?,index?) {\r\n    if(isAdd){\r\n      (this.createDirectorFormGroup.get('userAddress') as FormArray).controls[index].get('zipCode').setValue('');\r\n      (this.createDirectorFormGroup.get('userAddress') as FormArray).controls[index].get('state').setValue('');\r\n      (this.createDirectorFormGroup.get('userAddress') as FormArray).controls[index].get('city').setValue('');\r\n}\r\n    this.apiService.getAllCountries().subscribe((data: any) => {\r\n      for(let i=0; i<data.length;i++){       \r\n        if(data[i].countryName == country){\r\n          this.apiService.getStateByCountryId(data[i].id).subscribe((resp: any) => {\r\n          this.arrayState = resp\r\n          })\r\n          break;   \r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n\r\n  // getCityName(state: any) {\r\n  //   // console.log(state)\r\n  //   this.apiService.getDropDownValues1(\"city\", state).subscribe((data) => {\r\n  //     this.arrayCity = data;\r\n  //     // console.log(\"-->\", this.arrayCity)\r\n  //   });\r\n  // }\r\n  getAllAuthCities(){\r\n    this.apiService.getAuthorizedCityInfo().subscribe(res => res.map(r => this.arrayCity.push(r.cityName)))\r\n  }\r\n  onStateChange(index){\r\n    (this.createDirectorFormGroup.get('userAddress') as FormArray).controls[index].get('zipCode').setValue('');\r\n    (this.createDirectorFormGroup.get('userAddress') as FormArray).controls[index].get('city').setValue('');\r\n  }\r\n  onCityChange(index){\r\n    (this.createDirectorFormGroup.get('userAddress') as FormArray).controls[index].get('zipCode').setValue('');\r\n  }\r\n  getResidenceDetails(key: string) {\r\n    this.apiService.getDropDownValues(key).subscribe((data) => {\r\n      this.arrayResidence = data;\r\n      // console.log('arrayResidence :: ', this.arrayResidence);\r\n    });\r\n  }\r\n  _keyPress(event: any) {\r\n    const pattern = /[0-9]/;\r\n    let inputChar = String.fromCharCode(event.charCode);\r\n    if (!pattern.test(inputChar)) {\r\n      event.preventDefault();\r\n\r\n    }\r\n  }\r\n\r\n  letterOnly(event) {\r\n    var charCode = event.keyCode;\r\n    if ((charCode > 64 && charCode < 91) || (charCode > 96 && charCode < 123) || charCode == 8)\r\n      return true;\r\n    else\r\n      return false;\r\n  }\r\n\r\n\r\n  openClose(status) {\r\n    // console.log('status :: ', status);\r\n    if (status === 'OPEN') {\r\n      this.panelOpenState = true;\r\n    } else {\r\n      this.panelOpenState = false;\r\n    }\r\n  } \r\n\r\n  \r\n  getCoropratedetails(id){\r\n    console.log(id);\r\n    console.log(this.noOfDir);\r\n    console.log(this.item);\r\n    console.log(this.index);\r\n    \r\n    \r\n    this.apiService.getCoropratedetails(id).subscribe(details => {      \r\n      this.createDirectorFormGroup.reset();\r\n      if(details.customerInfo[this.index]){\r\n        console.log('yes');\r\n        \r\n            this.isDirectorSaved = true;\r\n            this.getStateName(details.customerInfo[this.index].userAddress[0].country);\r\n            details.customerInfo[this.index].idNumber=details.customerInfo[this.index]?.custIdProofs[0]?.idNumber;\r\n            details.customerInfo[this.index].idType=details.customerInfo[this.index]?.custIdProofs[0]?.idType;\r\n            details.customerInfo[this.index].expiryDate=details.customerInfo[this.index]?.custIdProofs[0]?.expiryDate;\r\n            this.createDirectorFormGroup.patchValue(details.customerInfo[this.index]);\r\n            \r\n      }\r\n          })\r\n    }\r\n\r\n  displayDrop(cif) {\r\n    if (!cif) {\r\n      this.autocomplete.closePanel();\r\n    }\r\n  }\r\n\r\n  toggleChanges(event: any, formDirective: FormGroupDirective) {\r\n    this.corporateExistingCustomer=event;\r\n\r\n    console.log(event)\r\n    if (event === true) {\r\n      this.createDirectorFormGroup.get('cifNumber').enable();\r\n    }\r\n    else if (event === false) {\r\n      this.createDirectorFormGroup.get('cifNumber').disable();\r\n      this.customerId=null;\r\n    }\r\n    // if (this.createDirectorFormGroup.get('existingCustomer').value == true) {\r\n    //   this.existingCustomer=true;\r\n    //   this.createDirectorFormGroup.get('cifNumber').enable();\r\n    //   this.createDirectorFormGroup.get('cifNumber').setValidators([Validators.required]);\r\n    //   this.createDirectorFormGroup.get('cifNumber').updateValueAndValidity();\r\n    // }\r\n    // else {\r\n    //   this.createDirectorFormGroup.get('cifNumber').enable();\r\n    //   formDirective.resetForm(\r\n    //     setTimeout(() => formDirective.resetForm(), 0)\r\n    //   );\r\n    // }\r\n  }\r\n  editDirector(index) {\r\n    console.log('edit index :: ', index);\r\n    this.panelOpenState = !this.panelOpenState;\r\n\r\n  }\r\n\r\n  deleteDirector(index) {\r\n    this.apiService.deleteCorporateDirector(this.corporateId,this.item.customerId).subscribe(res => {\r\n      delete this.directorComponent.items[index];\r\n      this.snack.open(`Successfully Deleted Director ${this.index+1}`, 'OK', {\r\n        duration: 4000,\r\n        verticalPosition: 'top',\r\n        horizontalPosition: 'right'\r\n\r\n      })\r\n    })\r\n  }\r\n\r\n\r\n  updatedVal(e) {\r\n    if (e && e.length >= 3) {\r\n      this.showAutocomplete = true;\r\n    } else {\r\n      this.showAutocomplete = false;\r\n    }\r\n  }\r\n\r\n\r\n  ngAfterViewInit(resp) {\r\n    console.log(\"inside ngAfterViewInit::\")\r\n    if(this.inputElement){\r\n      fromEvent(this.inputElement.nativeElement, 'keyup')\r\n      .pipe(\r\n        debounceTime(500),\r\n        pluck('target', 'value'),\r\n        distinctUntilChanged(),\r\n        filter((value: string) => value.length > 1),\r\n      )\r\n      .subscribe((value:any) => {\r\n       // this.fetchByCif(value);\r\n      });\r\n    }\r\n    this.fetchByCif(resp);\r\n    \r\n  }\r\n\r\n  selectCif(data) {\r\n    this.getStateName(data.userAddress[0].country);\r\n    // this.getCityName(data.userAddress[0].state);\r\n    if(data.citizenship!=null){\r\n      this.onSelectionCitizionship(data.citizenship);\r\n    }\r\n    if(data.countryOfResidence!=null){\r\n      this.onSelectionResidance(data.countryOfResidence);\r\n    }\r\n    this.customerInfoList = data.customerInfoList;\r\n    this.cifNumberForPayload = data.cifNumber;\r\n    this.customerIdForPayload=data.customerId;\r\n    delete data.cifNumber;\r\n    this.autocomplete.closePanel();\r\n    this.createDirectorFormGroup.patchValue(data);\r\n    this.createDirectorFormGroup.get('existingCustomer').setValue(true);\r\n    if(data.custIdProofs[0].expiryDate < this.datepipe.transform(new Date(), 'yyyy-MM-dd')){\r\n      this.snack.open('Kindly Enter future Valid till Date', 'OK', {\r\n        duration: 4000,\r\n        verticalPosition: 'top',\r\n        horizontalPosition: 'right'\r\n      });    }\r\n  }\r\n\r\n  fetchByCif(cifNumber) {\r\n    console.log(cifNumber?.length);\r\n    if (cifNumber?.length == 0) {\r\n      this.autocomplete.closePanel();\r\n    }\r\n    this.createDirectorFormGroup.reset({\r\n      cifNumber: this.createDirectorFormGroup.get('cifNumber').value,\r\n      existingCustomer: this.createDirectorFormGroup.get('existingCustomer').value\r\n    });\r\n    this.showAutocomplete = false;\r\n    // this.autocomplete.closePanel(); \r\n    if (cifNumber) {\r\n      clearTimeout( this.timer)\r\n     this.timer= setTimeout (() => { this.appApiService.fetchByCif(cifNumber).subscribe((res: any) => {\r\n        console.log(\"settimeout\")\r\n        console.log(\"res::\", res);\r\n        var kycValues={\r\n          kycReference:res.customerInfoList[0].kycReference,\r\n          kycStatus: res.customerInfoList[0].custStatus\r\n        }\r\n        this.ls.setItem('KycValues',kycValues);\r\n        // this.autocomplete.openPanel();\r\n        if (res) {\r\n          this.showAutocomplete = true;\r\n          this.customerInfoList = res.customerInfoList;\r\n          // this.customerInfoList[0].userAddress[0].zipcode = res.customerInfoList[0].userAddress[0].zipCode;\r\n        }  if (res?.customerInfoList.length == 1) {\r\n          // this.customerInfoList[0].userAddress[0].zipcode = res.customerInfoList[0].userAddress[0].zipCode;\r\n\r\n        }if(this.customerInfoList[0].citizenship!=null){\r\n          this.onSelectionCitizionship(this.customerInfoList[0].citizenship);\r\n\r\n        }\r\n        if(this.customerInfoList[0].countryOfResidence!=null){\r\n          this.onSelectionResidance(this.customerInfoList[0].countryOfResidence);\r\n        }\r\n        else if (res?.customerInfoList.length > 1) {\r\n          this.customerInfoList = res.customerInfoList;\r\n          // this.customerInfoList[0].userAddress[0].zipcode = res.customerInfoList[0].userAddress[0].zipCode;\r\n\r\n        }\r\n        else if (res?.customerInfoList.length == 0 || !res) {\r\n          this.snack.open('Kindly Enter Valid CifNumber to proceed', 'OK', {\r\n            duration: 4000,\r\n            verticalPosition: 'top',\r\n            horizontalPosition: 'right'\r\n          });\r\n          // this.customerInfoList = [];\r\n          // this.createDirectorFormGroup.get('cifNumber').patchValue('');\r\n        }\r\n      }, (err: any) => {\r\n        console.error(err);\r\n      })}, 1000);\r\n    }\r\n  }\r\n\r\n  addDirector(createDirectorFormGroup, item) {\r\n    this.ls.setItem('CorporateExistingCustomer',this.corporateExistingCustomer);\r\n    createDirectorFormGroup.cifNumber = this.cifNumberForPayload;\r\n    createDirectorFormGroup.customerId=this.customerIdForPayload;\r\n    createDirectorFormGroup.corporateId=this.corporateId;\r\n    if(this.index == 0){\r\n      createDirectorFormGroup.primaryCustomer=true;\r\n    }\r\n    else{\r\n      createDirectorFormGroup.primaryCustomer=false;\r\n    }\r\n    //this.createDirectorFormGroup.get('primaryCustomer').setValue(true);\r\n    //createDirectorFormGroup.primaryCustomer=this.primaryCustomer;\r\n    console.log('item :: ', item);\r\n    let coporateObjModel = {\r\n      \"corporateId\": this.ls.getItem('corporateId'),\r\n      // \"companyName\": null,\r\n      // \"category\": null,\r\n      // \"country\": null,\r\n      // \"state\": null,\r\n      // \"city\": null,\r\n      \"customerInfo\": [\r\n        createDirectorFormGroup\r\n      ]\r\n    }\r\n    if (this.noOfDir > 0) {\r\n      this.saveStatus = [];\r\n      for (let i = 0; i < this.noOfDir; i++) {\r\n        this.saveStatus.push(true);\r\n      }\r\n      // console.log('saveStatus :: ', this.saveStatus);\r\n      this.corporateService.setfinishSave(this.saveStatus);\r\n    }\r\n    this.corporateService.saveOrUpdateCorporateAccountInfo(coporateObjModel)\r\n      .subscribe(data => {\r\n        console.log('data :: ', data);\r\n        if (data != null) {\r\n          console.log(\"chhecking\");\r\n          if(data.customerInfo!=null && data.customerInfo[0].cifNumber!=null){\r\n            \r\n              this.cifNumber = data.customerInfo[0].cifNumber;\r\n          \r\n          }\r\n          this.item = data.customerInfo[this.index];\r\n          this.snack.open(`Director ${this.index+1} profile created` + ' !', 'OK', {\r\n            duration: 4000,\r\n            verticalPosition: 'top',\r\n            horizontalPosition: 'right'\r\n          });\r\n          this.isDirectorSaved=true;\r\n          this.cdr.markForCheck();\r\n         // if (this.noOfDir >= 1) {\r\n          if (this.noOfDir <= 1) {\r\n            this.next();\r\n          }\r\n        } else {\r\n          this.snack.open('Not able to connect to server!', 'INTERNAL SERVER ERROR', {\r\n            duration: 4000,\r\n            verticalPosition: 'top',\r\n            horizontalPosition: 'right'\r\n          });\r\n        }\r\n      }, error => {\r\n        console.log('error resp :: ', error);\r\n        this.snack.open(`${error.error.message} `, 'OK', {\r\n          duration: 4000,\r\n          verticalPosition: 'top',\r\n          horizontalPosition: 'right'\r\n        });\r\n      });\r\n  }\r\n\r\n  getDoc() {\r\n    this.apiService.getDropDownValues(\"gender\").subscribe((responseDatas) => {\r\n      this.genderList = responseDatas;\r\n    });\r\n    this.apiService.getDropDownValues(\"prefix\").subscribe((re) => {\r\n      this.prefixList = re;\r\n    });\r\n    this.apiService.getDropDownValues(\"document_name\").subscribe((re) => {\r\n      this.idTypeList = re;\r\n    });\r\n    this.apiService.getDropDownValues(\"address_type\").subscribe((re) => {\r\n      this.addressTypeList = re;\r\n    });\r\n  }\r\n  next() {\r\n    this.corporateService.sendDisableMatTab({\r\n      index: 2,\r\n    });\r\n    this.corporateService.setFinishFlag({\r\n      finishFlag: false,\r\n    });\r\n  }\r\n  onChangeGender(event){\r\n    let prefix = this.createDirectorFormGroup.value.prefix;\r\n    if ((prefix == \"Mr\" && event.value == \"Male\") || ((prefix==\"Ms\" || prefix==\"Mrs\") && event.value==\"Female\")) {\r\n      this.prefixFlag=true;\r\n    }  else {\r\n      this.prefixFlag=false;\r\n      this.snack.open(\"Prefix and Gender does not match!\", \"OK\", {\r\n        duration: 4000,\r\n        verticalPosition: \"top\",\r\n        horizontalPosition: \"right\",\r\n      });\r\n    }\r\n  }\r\n\r\n  omit_special_char(event) {\r\n    var k;\r\n    k = event.charCode;  //         k = event.keyCode;  (Both can be used)\r\n    return ((k > 64 && k < 91) || (k > 96 && k < 123) || k == 8 || k == 32 || (k >= 48 && k <= 57));\r\n  }\r\n\r\n  private createInititals(name): void {\r\n    if (name == null || name == undefined) {\r\n      return;\r\n    }\r\n    let names = name.split(' '),\r\n      initials = names[0].substring(0, 1).toUpperCase();\r\n\r\n    if (names.length > 1) {\r\n      initials += names[names.length - 1].substring(0, 1).toUpperCase();\r\n    }\r\n\r\n\r\n    this.initials = initials;\r\n    // console.log(\"name\", name);\r\n    // console.log(\"this.initials\", this.initials);\r\n  }\r\n\r\n  isAllSameDigit(event) {\r\n    let count = 0, number = event.target.value;\r\n    if (number != '') {\r\n      for (var i = 0; i < number.length; i++) {\r\n        if (0 == number[i]) {\r\n          count++;\r\n        }\r\n      }\r\n      if (count == number.length) {\r\n        this.isAllSameDigitVal = true;\r\n      }\r\n      else {\r\n        this.isAllSameDigitVal = false;\r\n      }\r\n    } else {\r\n      this.isAllSameDigitVal = false;\r\n    }\r\n  }\r\n  isAllNumberZero(event) {\r\n    this.cdr.detectChanges();\r\n    let count = 0, number = event.target.value;\r\n    if (number != '') {\r\n      for (var i = 0; i < number.length; i++) {\r\n        if (0 == number[i]) {\r\n          count++;\r\n        }\r\n      }\r\n      console.log('number :: ', number);\r\n      console.log('isAllSameDigitVal :: ', count, number.length)\r\n      if (count == number.length) {\r\n        console.log('if loop')\r\n        this.isAllNumberZeroFlag= true;\r\n      }\r\n      else {\r\n        this.isAllNumberZeroFlag = false;\r\n      }\r\n    } else {\r\n      this.isAllNumberZeroFlag = false;\r\n    }\r\n  }\r\n\r\n  getCityandStateByZipcode(countryName, zipcode,index) {\r\n    if (countryName && zipcode.length >= 6) {\r\n      this.apiService.fetchStateCityByZipcode(countryName, zipcode).subscribe((res: any) => {\r\n        if(res){\r\n          (this.createDirectorFormGroup.get('userAddress') as FormArray).controls[index].get('state').setValue(res.stateName);\r\n          (this.createDirectorFormGroup.get('userAddress') as FormArray).controls[index].get('city').setValue(res.cityName);\r\n        }\r\n        else{\r\n          this.snack.open(\"Entered Zipcode is not exists\", \"OK\", {\r\n            duration: 4000,\r\n            verticalPosition: \"top\",\r\n            horizontalPosition: \"right\",\r\n          });\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n}\r\n","<form [formGroup]=\"createDirectorFormGroup\" #formDirective=\"ngForm\">\r\n\t<mat-card>\r\n\t\t<mat-expansion-panel class=\"mat-elevation-z0\" (opened)=\"openClose('OPEN')\" (closed)=\"openClose('CLOSE')\"\r\n\t\t\t[expanded]=\"panelOpenState || noOfDir == 1\">\r\n\t\t\t<mat-expansion-panel-header>\r\n\t\t\t\t<mat-panel-title *ngIf=\"panelOpenState==true\">\r\n\t\t\t\t\tCreate Director {{index+1}}\r\n\t\t\t\t</mat-panel-title>\r\n\t\t\t\t<mat-panel-title *ngIf=\"panelOpenState==false\">\r\n\t\t\t\t\t<mat-icon style=\"color: #24CCA7;\">check_circle</mat-icon> &nbsp; Director &nbsp; {{index+1}}.\r\n\t\t\t\t</mat-panel-title>\r\n\t\t\t</mat-expansion-panel-header>\r\n\t\t\t<fieldset style=\"border: 1px solid #456EFE;\">\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<div fxLayout=\"row wrap\" style=\"margin-top: 20px;margin-left: 20px;\">\r\n\t\t\t\t\t\t<div fxFlex=\"100\">\r\n\t\t\t\t\t\t\t<div fxFlex=\"30\">\r\n\t\t\t\t\t\t\t\t<span><b>Is the applicant an existing customer?</b></span>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div fxFlex=\"10\">\r\n\t\t\t\t\t\t\t\t<mat-slide-toggle (change)=\"toggleChanges($event.checked,formDirective)\"\r\n\t\t\t\t\t\t\t\t\tformControlName=\"existingCustomer\">\r\n\t\t\t\t\t\t\t\t</mat-slide-toggle>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div fxFlex=\"10\"></div>\r\n\t\t\t\t\t\t\t<div fxFlex=\"30\">\r\n\t\t\t\t\t\t\t\t<span><b>Is the applicant an primary customer?</b></span>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div fxFlex=\"10\">\r\n\r\n\t\t\t\t\t\t\t\t<mat-slide-toggle formControlName=\"primaryCustomer\"\r\n\t\t\t\t\t\t\t\t\t[disabled]=\"disabledToggle\">\r\n\t\t\t\t\t\t\t\t</mat-slide-toggle>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div fxLayout=\"row wrap\">\r\n\t\t\t\t\t\t<div fxFlex=\"100\" style=\"margin-left: 13px\">\r\n\t\t\t\t\t\t\t<div fxFlex=\"80\" class=\"form-group\">\r\n\t\t\t\t\t\t\t\t<!-- <label for=\"forCifNumber\" class=\"hint\">CIF Number* </label> -->\r\n\t\t\t\t\t\t\t\t<mat-form-field *ngIf=\"createDirectorFormGroup.get('existingCustomer').value != true\"\r\n\t\t\t\t\t\t\t\tappearance=\"outline\" class=\"full-width\">\r\n\t\t\t\t\t\t\t\t<mat-label>CIF Number*</mat-label>\r\n\t\t\t\t\t\t\t\t\t<input matInput formControlName=\"cifNumber\" (keypress)=\"_keyPress($event)\"\r\n\t\t\t\t\t\t\t\t\t\tid=\"forCifNumber\">\r\n\t\t\t\t\t\t\t\t\t<!-- <mat-placeholder class=\"placeholder\">CIF Number </mat-placeholder> -->\r\n\t\t\t\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t\t\t\t\t<mat-form-field *ngIf=\"createDirectorFormGroup.get('existingCustomer').value == true\"\r\n\t\t\t\t\t\t\t\tappearance=\"outline\" class=\"full-width\">\r\n\t\t\t\t\t\t\t\t<mat-label>CIF Number</mat-label>\r\n\t\t\t\t\t\t\t\t\t<input matInput #input formControlName=\"cifNumber\" id=\"forCifNumber\"\r\n\t\t\t\t\t\t\t\t\t\t(keyup)=\"ngAfterViewInit($event.target.value)\" [matAutocomplete]=\"auto\"\r\n\t\t\t\t\t\t\t\t\t\t(ngModelChange)=\"updatedVal($event)\" required>\r\n\t\t\t\t\t\t\t\t\t<mat-autocomplete style=\"background-color: black;\" #auto=\"matAutocomplete\">\r\n\t\t\t\t\t\t\t\t\t\t<mat-option *ngFor=\"let option of customerInfoList\" [value]=\"option?.cifNumber\"\r\n\t\t\t\t\t\t\t\t\t\t\t(click)=\"selectCif(option)\">\r\n\t\t\t\t\t\t\t\t\t\t\t<div fxLayout=\"row wrap\" style=\"margin-top: 20px;\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div fxFlex=\" 100\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div mat-card-avatar *ngIf=\"option?.profileImage =='not_available'\" class=\"example-header-image-dropdown\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfxFlex=\"10\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h3 align=\"center\" style=\"margin-top: 5px;font-size: large;\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{{option?.firstName | slice:0:1 | uppercase}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"option?.profileImage !='not_available'\" mat-card-avatar\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfxFlex=\"10\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<img matListAvatar\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle=\"border-radius: 50%;height: 85%;margin-right: 20px;width: 90%;margin-bottom: 50px;\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\talign=\"center\" [src]=\"option?.profileImage\" alt=\"...\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div fxFlex=\"80\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h5 style=\"margin-bottom: 0px;\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{{option?.firstName | uppercase}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{{option?.middleName | uppercase}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{{option?.lastName | uppercase}}</h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h6 style=\"margin-top: 0px;\">#{{option?.cifNumber}}</h6>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t</mat-option>\r\n\t\t\t\t\t\t\t\t\t</mat-autocomplete>\r\n\r\n\t\t\t\t\t\t\t\t\t<!-- <button type=\"button\" *ngIf=\"createDirectorFormGroup.get('cifNumber').value\" matSuffix mat-icon-button class=\"searchIcon\" >\r\n\t\t\t\t\t\t\t\t\t\t<mat-icon\r\n\t\t\t\t\t\t\t\t\t\t\tstyle=\"font-size: xx-large;color: rgb(21, 64, 255); text-shadow: 2px 2px lightgray;\">\r\n\t\t\t\t\t\t\t\t\t\t\tsearch</mat-icon>\r\n\t\t\t\t\t\t\t\t\t</button> -->\r\n\r\n\t\t\t\t\t\t\t\t\t<!-- <mat-placeholder class=\"placeholder\">CIF Number </mat-placeholder> -->\r\n\t\t\t\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t\t\t\t\t<mat-error\r\n\t\t\t\t\t\t\t\t\t*ngIf=\"createDirectorFormGroup.get('cifNumber').touched && !createDirectorFormGroup.get('cifNumber').valid  && createDirectorFormGroup.get('existingCustomer').value == true\">\r\n\t\t\t\t\t\t\t\t\t<small>CIF Number is Required!</small>\r\n\t\t\t\t\t\t\t\t</mat-error>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<div fxFlex=\"10\">\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div fxFlex=\"80\" class=\"form-group\">\r\n\t\t\t\t\t\t\t\t<!-- <label for=\"forPrefix\" class=\"hint\">Prefix* </label> -->\r\n\t\t\t\t\t\t\t\t<mat-form-field appearance=\"outline\" class=\"full-width\">\r\n\t\t\t\t\t\t\t\t\t<mat-label>Prefix</mat-label>\r\n\t\t\t\t\t\t\t\t\t<mat-select formControlName=\"prefix\" id=\"forPrefix\" required>\r\n\t\t\t\t\t\t\t\t\t\t<!-- <mat-label>Frifix</mat-label> -->\r\n\t\t\t\t\t\t\t\t\t\t<!-- <mat-option disabled>select---</mat-option> -->\r\n\t\t\t\t\t\t\t\t\t\t<mat-option *ngFor=\"let prfix of prefixList\" [value]=\"prfix\">\r\n\t\t\t\t\t\t\t\t\t\t\t{{prfix}}\r\n\t\t\t\t\t\t\t\t\t\t</mat-option>\r\n\t\t\t\t\t\t\t\t\t</mat-select>\r\n\t\t\t\t\t\t\t\t\t<mat-placeholder class=\"placeholder\">Prefix </mat-placeholder>\r\n\t\t\t\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t\t\t\t\t<mat-error\r\n\t\t\t\t\t\t\t\t\t*ngIf=\"createDirectorFormGroup.get('prefix').touched && !createDirectorFormGroup.get('prefix').valid\">\r\n\t\t\t\t\t\t\t\t\t<small>Please Select Prefix!</small>\r\n\t\t\t\t\t\t\t\t</mat-error>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div fxFlex=\"10\">\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div fxLayout=\"row wrap\">\r\n\t\t\t\t\t\t<div fxFlex=\"100\" style=\"margin-left: 13px\">\r\n\t\t\t\t\t\t\t<div fxFlex=\"80\" class=\"form-group\">\r\n\t\t\t\t\t\t\t\t<!-- <label for=\"forFirstName\" class=\"hint\">First Name </label> -->\r\n\t\t\t\t\t\t\t\t<mat-form-field appearance=\"outline\" class=\"full-width\">\r\n\t\t\t\t\t\t\t\t\t<mat-label>First Name</mat-label>\r\n\t\t\t\t\t\t\t\t\t<input matInput formControlName=\"firstName\" id=\"forFirstName\" required\r\n\t\t\t\t\t\t\t\t\t\t(keypress)=\"letterOnly($event)\">\r\n\t\t\t\t\t\t\t\t\t<!-- <mat-placeholder class=\"placeholder\">First Name </mat-placeholder> -->\r\n\t\t\t\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t\t\t\t\t<mat-error\r\n\t\t\t\t\t\t\t\t\t*ngIf=\"createDirectorFormGroup.get('firstName').touched && !createDirectorFormGroup.get('firstName').valid\">\r\n\t\t\t\t\t\t\t\t\t<small>First Name is Required!</small>\r\n\t\t\t\t\t\t\t\t</mat-error>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div fxFlex=\"10\">\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div fxFlex=\"80\" class=\"form-group\">\r\n\t\t\t\t\t\t\t\t<!-- <label for=\"forMiddleName\" class=\"hint\">Middle Name </label> -->\r\n\t\t\t\t\t\t\t\t<mat-form-field appearance=\"outline\" class=\"full-width\">\r\n\t\t\t\t\t\t\t\t\t<mat-label>Middle Name</mat-label>\r\n\t\t\t\t\t\t\t\t\t<input matInput formControlName=\"middleName\" id=\"forMiddleName\"\r\n\t\t\t\t\t\t\t\t\t\t(keypress)=\"letterOnly($event)\">\r\n\t\t\t\t\t\t\t\t\t<!-- <mat-placeholder class=\"placeholder\">Middle Name </mat-placeholder> -->\r\n\t\t\t\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t\t\t\t\t<mat-error\r\n\t\t\t\t\t\t\t\t\t*ngIf=\"createDirectorFormGroup.get('middleName').touched && !createDirectorFormGroup.get('middleName').valid\">\r\n\t\t\t\t\t\t\t\t\t<small>Middle Name is Required!</small>\r\n\t\t\t\t\t\t\t\t</mat-error>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div fxFlex=\"10\">\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div fxLayout=\"row wrap\">\r\n\t\t\t\t\t\t<div fxFlex=\"100\" style=\"margin-left: 13px\">\r\n\t\t\t\t\t\t\t<div fxFlex=\"80\" class=\"form-group\">\r\n\t\t\t\t\t\t\t\t<!-- <label for=\"forLastName\" class=\"hint\">Last Name </label> -->\r\n\t\t\t\t\t\t\t\t<mat-form-field appearance=\"outline\" class=\"full-width\">\r\n\t\t\t\t\t\t\t\t\t<mat-label>Last Name</mat-label>\r\n\t\t\t\t\t\t\t\t\t<input matInput formControlName=\"lastName\" id=\"forLastName\" required\r\n\t\t\t\t\t\t\t\t\t\t(keypress)=\"letterOnly($event)\">\r\n\t\t\t\t\t\t\t\t\t<!-- <mat-placeholder class=\"placeholder\">Last Name </mat-placeholder> -->\r\n\t\t\t\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t\t\t\t\t<mat-error\r\n\t\t\t\t\t\t\t\t\t*ngIf=\"createDirectorFormGroup.get('lastName').touched && !createDirectorFormGroup.get('lastName').valid\">\r\n\t\t\t\t\t\t\t\t\t<small>Last Name is Required!</small>\r\n\t\t\t\t\t\t\t\t</mat-error>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div fxFlex=\"10\">\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div fxFlex=\"80\" class=\"form-group\">\r\n\t\t\t\t\t\t\t\t<!-- <label for=\"forGender\" class=\"hint\">Gender* </label> -->\r\n\t\t\t\t\t\t\t\t<mat-form-field appearance=\"outline\" class=\"full-width\">\r\n\t\t\t\t\t\t\t\t\t<mat-label>Gender</mat-label>\r\n\t\t\t\t\t\t\t\t\t<mat-select formControlName=\"gender\" id=\"forGender\" required\r\n\t\t\t\t\t\t\t\t\t\t(selectionChange)=\"onChangeGender($event)\">\r\n\t\t\t\t\t\t\t\t\t\t<!-- <mat-option disabled>select---</mat-option> -->\r\n\t\t\t\t\t\t\t\t\t\t<mat-option *ngFor=\"let gender of genderList\" [value]=\"gender\">\r\n\t\t\t\t\t\t\t\t\t\t\t{{gender}}\r\n\t\t\t\t\t\t\t\t\t\t</mat-option>\r\n\t\t\t\t\t\t\t\t\t</mat-select>\r\n\t\t\t\t\t\t\t\t\t<mat-placeholder class=\"placeholder\">Gender </mat-placeholder>\r\n\t\t\t\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t\t\t\t\t<mat-error\r\n\t\t\t\t\t\t\t\t\t*ngIf=\"createDirectorFormGroup.get('gender').touched && !createDirectorFormGroup.get('gender').valid\">\r\n\t\t\t\t\t\t\t\t\t<small>Please Select Gender!</small>\r\n\t\t\t\t\t\t\t\t</mat-error>\r\n\t\t\t\t\t\t\t\t<mat-error *ngIf=\" !prefixFlag\">\r\n\t\t\t\t\t\t\t\t\t&nbsp; Prefix and Gender does not match!\r\n\t\t\t\t\t\t\t\t</mat-error>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div fxFlex=\"10\">\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div fxLayout=\"row wrap\">\r\n\t\t\t\t\t\t<div fxFlex=\"100\" style=\"margin-left: 13px\">\r\n\t\t\t\t\t\t\t<div fxFlex=\"80\" class=\"form-group\">\r\n\t\t\t\t\t\t\t\t<!-- <label for=\"forDOB\" class=\"hint\">Date Of Birth </label> -->\r\n\t\t\t\t\t\t\t\t<mat-form-field appearance=\"outline\" class=\"full-width\">\r\n\t\t\t\t\t\t\t\t\t<mat-label>Date Of Birth</mat-label>\r\n\t\t\t\t\t\t\t\t\t<input matInput formControlName=\"dateOfBirth\" [matDatepicker]=\"picker\"\r\n\t\t\t\t\t\t\t\t\t\t[max]=\"maxDate\" required readonly>\r\n\t\t\t\t\t\t\t\t\t<mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n\t\t\t\t\t\t\t\t\t<mat-datepicker #picker></mat-datepicker>\r\n\t\t\t\t\t\t\t\t\t<mat-placeholder class=\"placeholder\">Date Of Birth </mat-placeholder>\r\n\t\t\t\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t\t\t\t\t<mat-error\r\n\t\t\t\t\t\t\t\t\t*ngIf=\"createDirectorFormGroup.get('dateOfBirth').touched && !createDirectorFormGroup.get('dateOfBirth').valid\">\r\n\t\t\t\t\t\t\t\t\t<small>Date Of Birth is Required!</small>\r\n\t\t\t\t\t\t\t\t</mat-error>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div fxFlex=\"10\">\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div fxFlex=\"80\" class=\"form-group\">\r\n\t\t\t\t\t\t\t\t<!-- <label for=\"forplaceOfBirth\" class=\"hint\">Birth Place* </label> -->\r\n\t\t\t\t\t\t\t\t<mat-form-field appearance=\"outline\" class=\"full-width\">\r\n\t\t\t\t\t\t\t\t\t<mat-label>Birth Place</mat-label> \r\n\t\t\t\t\t\t\t\t\t<!-- <mat-select formControlName=\"placeOfBirth\" id=\"forplaceOfBirth\" required>\r\n\t\t\t\t\t\t\t\t\t\t<mat-option disabled>select---</mat-option>\r\n\t\t\t\t\t\t\t\t\t\t<mat-option *ngFor=\"let placeOfBirth of arrayCountry\" [value]=\"placeOfBirth\">\r\n\t\t\t\t\t\t\t\t\t\t\t{{placeOfBirth}}\r\n\t\t\t\t\t\t\t\t\t\t</mat-option>\r\n\t\t\t\t\t\t\t\t\t</mat-select>-->\r\n\t\t\t\t\t\t\t\t\t<input matInput formControlName=\"placeOfBirth\" id=\"forplaceOfBirth\" required\r\n\t\t\t\t\t\t\t\t\t\t(keypress.space)=\"letterOnly($event)\">\r\n\t\t\t\t\t\t\t\t\t<!-- <mat-placeholder class=\"placeholder\">Place Of Birth </mat-placeholder> -->\r\n\t\t\t\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t\t\t\t\t<mat-error\r\n\t\t\t\t\t\t\t\t\t*ngIf=\"createDirectorFormGroup.get('placeOfBirth').touched && !createDirectorFormGroup.get('placeOfBirth').valid\">\r\n\t\t\t\t\t\t\t\t\t<small>Place Of Birth is Required!!</small>\r\n\t\t\t\t\t\t\t\t</mat-error>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div fxFlex=\"10\">\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div fxLayout=\"row wrap\">\r\n\t\t\t\t\t\t<div fxFlex=\"100\" style=\"margin-left: 13px\">\r\n\t\t\t\t\t\t\t<div fxFlex=\"80\" class=\"form-group\">\r\n\t\t\t\t\t\t\t\t<!-- <label for=\"forResidenceStatus\" class=\"hint\"> Residence Status </label> -->\r\n\t\t\t\t\t\t\t\t<mat-form-field appearance=\"outline\" class=\"full-width\">\r\n\t\t\t\t\t\t\t\t\t<mat-label>Residence Status</mat-label>\r\n\t\t\t\t\t\t\t\t\t<mat-select formControlName=\"residenceStatus\" id=\"forResidenceStatus\" required>\r\n\t\t\t\t\t\t\t\t\t\t<!-- <mat-option disabled>select---</mat-option> -->\r\n\t\t\t\t\t\t\t\t\t\t<mat-option *ngFor=\"let recidence of arrayResidence\" [value]=\"recidence\">\r\n\t\t\t\t\t\t\t\t\t\t\t{{recidence}}\r\n\t\t\t\t\t\t\t\t\t\t</mat-option>\r\n\t\t\t\t\t\t\t\t\t</mat-select>\r\n\t\t\t\t\t\t\t\t\t<!-- <mat-placeholder class=\"placeholder\">Residence Status </mat-placeholder> -->\r\n\t\t\t\t\t\t\t\t\t<!-- <mat-placeholder class=\"placeholder\">Residence Type </mat-placeholder> -->\r\n\t\t\t\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t\t\t\t\t<mat-error\r\n\t\t\t\t\t\t\t\t\t*ngIf=\"createDirectorFormGroup.get('residenceStatus').touched && !createDirectorFormGroup.get('residenceStatus').valid\">\r\n\t\t\t\t\t\t\t\t\t<!-- <small>Please Select Residence Status!</small> -->\r\n\t\t\t\t\t\t\t\t\t<small>Please Select Residence Type!</small>\r\n\t\t\t\t\t\t\t\t</mat-error>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div fxFlex=\"10\">\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div fxFlex=\"80\" class=\"form-group\">\r\n\t\t\t\t\t\t\t\t<!-- <mat-form-field> -->\r\n\t\t\t\t\t\t\t\t\t<div fxLayout=\"row wrap\">\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t<div fxFlex=\"100\">\r\n\t\t\t\t\t\t\t\t\t\t\t<mat-form-field appearance=\"outline\" class=\"full-width\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<mat-label>Citizenship By</mat-label>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div fxFlex=\"15\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div matPrefix>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t  <div *ngIf=\"currencyCode1\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclass=\"currency-flag currency-flag-{{currencyCode1}}\"></div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t  </div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<mat-select formControlName=\"citizenship\" id=\"forcitizenship\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(selectionChange)=\"onSelectionCitizionship($event.value)\" required>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<mat-option *ngFor=\"let citizenship of arrayCountry\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t[value]=\"citizenship\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{{citizenship}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</mat-option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</mat-select>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<!-- <mat-placeholder class=\"placeholder\">Citizenship By</mat-placeholder> -->\r\n\t\t\t\t\t\t\t\t<!-- </mat-form-field> -->\r\n\t\t\t\t\t\t\t\t<mat-error\r\n\t\t\t\t\t\t\t\t\t*ngIf=\"createDirectorFormGroup.get('citizenship').touched && !createDirectorFormGroup.get('citizenship').valid\">\r\n\t\t\t\t\t\t\t\t\t<small>Please Select Citizenship By!</small>\r\n\t\t\t\t\t\t\t\t</mat-error>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div fxFlex=\"10\">\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div fxLayout=\"row wrap\">\r\n\t\t\t\t\t\t<div fxFlex=\"100\" style=\"margin-left: 13px\">\r\n\t\t\t\t\t\t\t<div fxFlex=\"80\" class=\"form-group\">\r\n\t\t\t\t\t\t\t\t<!-- <mat-form-field> -->\r\n\t\t\t\t\t\t\t\t\t<div fxLayout=\"row wrap\">\r\n\t\t\t\t\t\t\t\t\t\t<div fxFlex=\"100\">\r\n\t\t\t\t\t\t\t\t\t\t\t<mat-form-field appearance=\"outline\" class=\"full-width\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<mat-label>Country Of Residence</mat-label>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div fxFlex=\"15\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div matPrefix>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t  <div *ngIf=\"currencyCode2\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclass=\"currency-flag currency-flag-{{currencyCode2}}\"></div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t  </div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<mat-select formControlName=\"countryOfResidence\" id=\"forcountryOfResidence\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(selectionChange)=\"onSelectionResidance($event.value)\" required>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<mat-option disabled>--Select--</mat-option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<mat-option *ngFor=\"let countryOfResidence of arrayCountry\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t[value]=\"countryOfResidence\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{{countryOfResidence}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</mat-option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</mat-select>\r\n\t\t\t\t\t\t\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<!-- <mat-placeholder class=\"placeholder\">Country Of Residence</mat-placeholder> -->\r\n\t\t\t\t\t\t\t\t<!-- </mat-form-field> -->\r\n\t\t\t\t\t\t\t\t<mat-error\r\n\t\t\t\t\t\t\t\t\t*ngIf=\"createDirectorFormGroup.get('countryOfResidence').touched && !createDirectorFormGroup.get('countryOfResidence').valid\">\r\n\t\t\t\t\t\t\t\t\t<small>Please Select Country Of Residence</small>\r\n\t\t\t\t\t\t\t\t</mat-error>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div fxFlex=\"10\">\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div fxFlex=\"80\" class=\"form-group\">\r\n\t\t\t\t\t\t\t\t<mat-form-field appearance=\"outline\" class=\"full-width\">\r\n\t\t\t\t\t\t\t\t\t<mat-label>Unique Id Number</mat-label>\r\n\t\t\t\t\t\t\t\t\t<input matInput formControlName=\"idNumber\"  (keypress)=\"_keyPress($event)\"\r\n\t\t\t\t\t\t\t\t\t\tid=\"foridNumber\" maxlength=\"15\" minLength=\"11\" required>\r\n\t\t\t\t\t\t\t\t\t<!-- <mat-placeholder class=\"placeholder\">Unique Id Number </mat-placeholder> -->\r\n\t\t\t\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t\t\t\t\t<mat-error *ngIf=\"createDirectorFormGroup.get('idNumber').touched && !createDirectorFormGroup.get('idNumber').valid\">\r\n\t\t\t\t\t\t\t\t\t<small>Unique Id Number is Required</small>\r\n\t\t\t\t\t\t\t\t</mat-error>\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div fxFlex=\"10\">\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div fxLayout=\"row wrap\">\r\n\t\t\t\t\t\t<div fxFlex=\"100\" style=\"margin-left: 13px\">\r\n\t\t\t\t\t\t\t<div fxFlex=\"40\" class=\"form-group\">\r\n\t\t\t\t\t\t\t\t<mat-form-field appearance=\"outline\" class=\"full-width\">\r\n\t\t\t\t\t\t\t\t\t<mat-label>ID Type</mat-label>\r\n\t\t\t\t\t\t\t\t\t<mat-select formControlName=\"idType\"  id=\"forIdType\" required>\r\n\t\t\t\t\t\t\t\t\t\t<mat-option disabled>select---</mat-option>\r\n\t\t\t\t\t\t\t\t\t\t<mat-option *ngFor=\"let idType of idTypeList\" [value]=\"idType\">\r\n\t\t\t\t\t\t\t\t\t\t\t{{idType}}\r\n\t\t\t\t\t\t\t\t\t\t</mat-option>\r\n\t\t\t\t\t\t\t\t\t</mat-select>\r\n\t\t\t\t\t\t\t\t\t<!-- <mat-placeholder class=\"placeholder\">ID Type </mat-placeholder> -->\r\n\t\t\t\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t\t\t\t\t<mat-error *ngIf=\"createDirectorFormGroup.get('idType').touched && !createDirectorFormGroup.get('idType').valid\">\r\n\t\t\t\t\t\t\t\t\t<small>Please Select ID Type!</small>\r\n\t\t\t\t\t\t\t\t</mat-error>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div fxFlex=\"10\">\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div fxFlex=\"40\" class=\"form-group\" *ngIf=\"createDirectorFormGroup.get('idType').value == 'Passport'\">\r\n\t\t\t\t\t\t\t\t<mat-form-field>\r\n\t\t\t\t\t\t\t\t\t<!-- <mat-label>Valid Till</mat-label> -->\r\n\t\t\t\t\t\t\t\t\t<input matInput id=\"forIdexpiryDate\" formControlName=\"expiryDate\"\r\n\t\t\t\t\t\t\t\t\t\t[min]=\"minDate\" [matDatepicker]=\"expiryDate\" readonly required>\r\n\t\t\t\t\t\t\t\t\t<mat-datepicker-toggle matSuffix [for]=\"expiryDate\"></mat-datepicker-toggle>\r\n\t\t\t\t\t\t\t\t\t<mat-datepicker #expiryDate></mat-datepicker>\r\n\t\t\t\t\t\t\t\t\t<mat-placeholder class=\"placeholder\">Valid Till </mat-placeholder>\r\n\t\t\t\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t\t\t\t\t<mat-error\r\n\t\t\t\t\t\t\t\t\t*ngIf=\"createDirectorFormGroup.get('expiryDate').touched && !createDirectorFormGroup.get('expiryDate').valid\">\r\n\t\t\t\t\t\t\t\t\t<small>Please Select Valid Till!</small>\r\n\t\t\t\t\t\t\t\t</mat-error>\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div fxFlex=\"10\">\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<!-- <div formArrayName=\"custIdProofs\">\r\n\t\t\t\t\t\t<div *ngFor=\"let item of createDirectorFormGroup.get('custIdProofs')['controls']; let i = index;\"\r\n\t\t\t\t\t\t\t[formGroupName]=\"i\">\r\n\t\t\t\t\t\t\t<div fxLayout=\"row wrap\">\r\n\t\t\t\t\t\t\t\t<div fxFlex=\"100\" fxLayoutGap=\"15px\">\r\n\t\t\t\t\t\t\t\t\t<div fxFlex=\".5\">\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div fxFlex=\"30\" class=\"form-group\">\r\n\t\t\t\t\t\t\t\t\t\t<!-- <label for=\"forIdType\" class=\"hint\">ID Type </label> \r\n\t\t\t\t\t\t\t\t\t\t<mat-form-field>\r\n\t\t\t\t\t\t\t\t\t\t\t<!-- <mat-label>ID Type</mat-label> \r\n\t\t\t\t\t\t\t\t\t\t\t<mat-select formControlName=\"idType\" id=\"forIdType\" required>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<mat-option disabled>select---</mat-option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<mat-option *ngFor=\"let idType of idTypeList\" [value]=\"idType\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{{idType}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</mat-option>\r\n\t\t\t\t\t\t\t\t\t\t\t</mat-select>\r\n\t\t\t\t\t\t\t\t\t\t\t<mat-placeholder class=\"placeholder\">ID Type </mat-placeholder>\r\n\t\t\t\t\t\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t\t\t\t\t\t\t<mat-error *ngIf=\"item.get('idType').touched && !item.get('idType').valid\">\r\n\t\t\t\t\t\t\t\t\t\t\t<small>Please Select ID Type!</small>\r\n\t\t\t\t\t\t\t\t\t\t</mat-error>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div fxFlex=\"30\" class=\"form-group\">\r\n\t\t\t\t\t\t\t\t\t\t<!-- <label for=\"foridNumber\" class=\"hint\">Unique Id Number </label> \r\n\t\t\t\t\t\t\t\t\t\t<mat-form-field>\r\n\t\t\t\t\t\t\t\t\t\t\t<!-- <mat-label>Unique Id Number</mat-label> \r\n\t\t\t\t\t\t\t\t\t\t\t<input matInput formControlName=\"idNumber\" (keypress)=\"_keyPress($event)\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tid=\"foridNumber\" maxlength=\"15\" minLength=\"11\" required>\r\n\t\t\t\t\t\t\t\t\t\t\t<mat-placeholder class=\"placeholder\">Unique Id Number </mat-placeholder>\r\n\t\t\t\t\t\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t\t\t\t\t\t\t<mat-error *ngIf=\"item.get('idNumber').touched && !item.get('idNumber').valid\">\r\n\t\t\t\t\t\t\t\t\t\t\t<small>Unique Id Number is Required</small>\r\n\t\t\t\t\t\t\t\t\t\t</mat-error>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div fxFlex=\"30\" class=\"form-group\"\r\n\t\t\t\t\t\t\t\t\t\t*ngIf=\"item.get('idType').value == 'Passport' || item.get('idType').value == 'DL'\">\r\n\t\t\t\t\t\t\t\t\t\t<!-- <label for=\"forIdexpiryDate\" class=\"hint\">Valid Till </label> \r\n\t\t\t\t\t\t\t\t\t\t<mat-form-field>\r\n\t\t\t\t\t\t\t\t\t\t\t<!-- <mat-label>Valid Till</mat-label> \r\n\t\t\t\t\t\t\t\t\t\t\t<input matInput formControlName=\"expiryDate\" id=\"forIdexpiryDate\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t[min]=\"minDate\" [matDatepicker]=\"expiryDate\" readonly required>\r\n\t\t\t\t\t\t\t\t\t\t\t<mat-datepicker-toggle matSuffix [for]=\"expiryDate\"></mat-datepicker-toggle>\r\n\t\t\t\t\t\t\t\t\t\t\t<mat-datepicker #expiryDate></mat-datepicker>\r\n\t\t\t\t\t\t\t\t\t\t\t<mat-placeholder class=\"placeholder\">Valid Till </mat-placeholder>\r\n\t\t\t\t\t\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t\t\t\t\t\t\t<mat-error\r\n\t\t\t\t\t\t\t\t\t\t\t*ngIf=\"item.get('expiryDate').touched && !item.get('expiryDate').valid\">\r\n\t\t\t\t\t\t\t\t\t\t\t<small>Please Select Valid Till!</small>\r\n\t\t\t\t\t\t\t\t\t\t</mat-error>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div> -->\r\n\t\t\t\t</div>\r\n\t\t\t\t<!-- For Address Type -->\r\n\t\t\t\t<div formArrayName=\"userAddress\">\r\n\t\t\t\t\t<div *ngFor=\"let item of createDirectorFormGroup.get('userAddress')['controls']; let i = index;\"\r\n\t\t\t\t\t\t[formGroupName]=\"i\">\r\n\t\t\t\t\t\t<fieldset style=\"border-top: 1px solid lightgray;margin-left: 20px; margin-right: 20px;\">\r\n\t\t\t\t\t\t\t<legend visible=\"true\">Communication Address</legend>\r\n\t\t\t\t\t\t\t<div fxLayout=\"row wrap\">\r\n\t\t\t\t\t\t\t\t<div fxFlex=\"100\" style=\"margin-left: 13px\">\r\n\t\t\t\t\t\t\t\t\t<div fxFlex=\"80\" class=\"form-group\">\r\n\t\t\t\t\t\t\t\t\t\t<!-- <label for=\"foraddress1\" class=\"hint\">address 1</label> -->\r\n\t\t\t\t\t\t\t\t\t\t<mat-form-field appearance=\"outline\" class=\"full-width\">\r\n\t\t\t\t\t\t\t\t\t\t\t<mat-label>Address Line 1</mat-label>\r\n\t\t\t\t\t\t\t\t\t\t\t<input matInput id=\"foraddress1\" formControlName=\"address1\" required>\r\n\t\t\t\t\t\t\t\t\t\t\t<!-- <mat-placeholder class=\"placeholder\">Address Line 1 </mat-placeholder> -->\r\n\t\t\t\t\t\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t\t\t\t\t\t\t<mat-error *ngIf=\"(item.get('address1').touched && !item.get('address1').valid) || (item.get('address1').touched && item.get('address1').hasError('pattern'))\">\r\n\t\t\t\t\t\t\t\t\t\t\t<small>Please Enter Valid Address Line 1</small>\r\n\t\t\t\t\t\t\t\t\t\t</mat-error>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div fxFlex=\"10\">\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div fxFlex=\"80\" class=\"form-group\">\r\n\t\t\t\t\t\t\t\t\t\t<!-- <label for=\"foraddress2\" class=\"hint\">address 2</label> -->\r\n\t\t\t\t\t\t\t\t\t\t<mat-form-field appearance=\"outline\" class=\"full-width\">\r\n\t\t\t\t\t\t\t\t\t\t\t<mat-label>Address Line 2</mat-label>\r\n\t\t\t\t\t\t\t\t\t\t\t<input matInput id=\"foraddress2\" formControlName=\"address2\" required>\r\n\t\t\t\t\t\t\t\t\t\t\t<!-- <mat-placeholder class=\"placeholder\">Address Line 2 </mat-placeholder> -->\r\n\t\t\t\t\t\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t\t\t\t\t\t\t<mat-error *ngIf=\"(item.get('address2').touched && !item.get('address2').valid) || (item.get('address2').touched && item.get('address2').hasError('pattern'))\">\r\n\t\t\t\t\t\t\t\t\t\t\t<small>Please Enter Valid Address Line 2</small>\r\n\t\t\t\t\t\t\t\t\t\t</mat-error>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div fxFlex=\"10\">\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<div fxLayout=\"row wrap\">\r\n\t\t\t\t\t\t\t\t<div fxFlex=\"100\" style=\"margin-left: 13px\">\r\n\t\t\t\t\t\t\t\t\t<div fxFlex=\"80\" class=\"form-group\">\r\n\t\t\t\t\t\t\t\t\t\t<!-- <label for=\"forcountry\" class=\"hint\">Country </label> -->\r\n\t\t\t\t\t\t\t\t\t\t<mat-form-field appearance=\"outline\" class=\"full-width\">\r\n\t\t\t\t\t\t\t\t\t\t\t<mat-label>Country</mat-label>\r\n\t\t\t\t\t\t\t\t\t\t\t<mat-select id=\"forcountry\" formControlName=\"country\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t(selectionChange)=\"getStateName($event.value,true,i)\" required>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<!-- <mat-option disabled>select---</mat-option> -->\r\n\t\t\t\t\t\t\t\t\t\t\t\t<mat-option *ngFor=\"let country of arrayCountry\" [value]=\"country\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{{country}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</mat-option>\r\n\t\t\t\t\t\t\t\t\t\t\t</mat-select>\r\n\t\t\t\t\t\t\t\t\t\t\t<!-- <mat-placeholder class=\"placeholder\">Country </mat-placeholder> -->\r\n\t\t\t\t\t\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t\t\t\t\t\t\t<mat-error *ngIf=\"item.get('country').touched && !item.get('country').valid\">\r\n\t\t\t\t\t\t\t\t\t\t\t<small>Please select country</small>\r\n\t\t\t\t\t\t\t\t\t\t</mat-error>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div fxFlex=\"10\">\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div fxFlex=\"80\" class=\"form-group\">\r\n\t\t\t\t\t\t\t\t\t\t<!-- <label for=\"forZipCode\" class=\"hint\">Zip Code</label> -->\r\n\t\t\t\t\t\t\t\t\t\t<mat-form-field appearance=\"outline\" class=\"full-width\">\r\n\t\t\t\t\t\t\t\t\t\t\t<mat-label>Zip Code</mat-label>\r\n\t\t\t\t\t\t\t\t\t\t\t<!--<input matInput formControlName=\"zipcode\" id=\"forZipCode\" onlyNumber\r\n\t\t\t\t\t\t\t\t\t\t\tmaxlength=\"10\" minLength=\"5\" (keypress)=\"_keyPress($event)\">-->\r\n\t\t\t\t\t\t\t\t\t\t\t<input matInput formControlName=\"zipCode\" id=\"forZipCode\" onlyNumber\r\n\t\t\t\t\t\t\t\t\t\t\t\tmaxlength=\"10\" minLength=\"5\" (keypress)=\"_keyPress($event)\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t(keyup)=\"isAllSameDigit($event)\" required (change)=\"getCityandStateByZipcode(item.get('country').value,$event.target.value,i)\">\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<!-- <mat-placeholder class=\"placeholder\">Zip code </mat-placeholder> -->\r\n\t\t\t\t\t\t\t\t\t\t</mat-form-field>\r\n\r\n\t\t\t\t\t\t\t\t\t\t<mat-error\r\n\t\t\t\t\t\t\t\t\t\t\t*ngIf=\"item.get('zipCode').touched && item.get('zipCode').hasError('required') \">\r\n\t\t\t\t\t\t\t\t\t\t\t<small>Please enter Zip Code!(5-10 digits)</small>\r\n\t\t\t\t\t\t\t\t\t\t</mat-error>\r\n\t\t\t\t\t\t\t\t\t\t<mat-error\r\n\t\t\t\t\t\t\t\t\t\t\t*ngIf=\"isAllSameDigitVal || item.get('zipCode').hasError('pattern') \">\r\n\t\t\t\t\t\t\t\t\t\t\t<small>Please enter valid Zip Code!(5-10 digits)</small>\r\n\t\t\t\t\t\t\t\t\t\t</mat-error>\r\n\r\n\t\t\t\t\t\t\t\t\t\t<!-- <mat-error *ngIf=\"item.get('zipcode').hasError('pattern')\">\r\n\t\t\t\t\t\t\t\t\t\t\t<small>Please enter valid Zip Code!</small>\t\t\t\t\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t\t\t\t</mat-error> -->\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div fxFlex=\"10\">\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<div fxLayout=\"row wrap\">\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<div fxFlex=\"100\" style=\"margin-left: 13px\">\r\n\t\t\t\t\t\t\t\t\t<div fxFlex=\"80\" class=\"form-group\">\r\n\t\t\t\t\t\t\t\t\t\t<!-- <label for=\"forstate\" class=\"hint\">State </label> -->\r\n\t\t\t\t\t\t\t\t\t\t<mat-form-field appearance=\"outline\" class=\"full-width\">\r\n\t\t\t\t\t\t\t\t\t\t\t<mat-label>State</mat-label>\r\n\t\t\t\t\t\t\t\t\t\t\t<mat-select id=\"forstate\" formControlName=\"state\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t required (selectionChange)=\"onStateChange(i)\" \r\n\t\t\t\t\t\t\t\t\t\t\t\t >\r\n\t\t\t\t\t\t\t\t\t\t\t\t<mat-option disabled>select---</mat-option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<mat-option *ngFor=\"let state of arrayState\" [value]=\"state.stateName\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{{state.stateName}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</mat-option>\r\n\t\t\t\t\t\t\t\t\t\t\t</mat-select>\r\n\t\t\t\t\t\t\t\t\t\t\t<!-- <mat-placeholder class=\"placeholder\">State </mat-placeholder> -->\r\n\t\t\t\t\t\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t\t\t\t\t\t\t<mat-error *ngIf=\"item.get('state').touched && !item.get('state').valid\">\r\n\t\t\t\t\t\t\t\t\t\t\t<small>Please select state</small>\r\n\t\t\t\t\t\t\t\t\t\t</mat-error>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div fxFlex=\"10\">\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div fxFlex=\"80\" class=\"form-group\">\r\n\t\t\t\t\t\t\t\t\t<!-- <label for=\"forCity\" class=\"hint\">City </label> -->\r\n\t\t\t\t\t\t\t\t\t<mat-form-field appearance=\"outline\" class=\"full-width\">\r\n\t\t\t\t\t\t\t\t\t\t<mat-label>City</mat-label>\r\n\t\t\t\t\t\t\t\t\t\t<mat-select id=\"forCity\" formControlName=\"city\" required (selectionChange)=\"onCityChange(i)\">\r\n\t\t\t\t\t\t\t\t\t\t\t<mat-option disabled>select---</mat-option>\r\n\t\t\t\t\t\t\t\t\t\t\t<mat-option *ngFor=\"let City of arrayCity\" [value]=\"City\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t{{City}}\r\n\t\t\t\t\t\t\t\t\t\t\t</mat-option>\r\n\t\t\t\t\t\t\t\t\t\t</mat-select>\r\n\t\t\t\t\t\t\t\t\t\t<!-- <mat-placeholder class=\"placeholder\">City </mat-placeholder> -->\r\n\t\t\t\t\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t\t\t\t\t\t<mat-error *ngIf=\"item.get('city').touched && !item.get('city').valid\">\r\n\t\t\t\t\t\t\t\t\t\t<small>Please select city</small>\r\n\t\t\t\t\t\t\t\t\t</mat-error>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t<div fxFlex=\"10\">\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t</fieldset>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t\t\t\r\n\r\n\r\n\r\n\t\t\t\t<!-- For Contact Information -->\r\n\t\t\t\t<fieldset style=\"border-top: 1px solid lightgray;margin-left: 20px; margin-right: 20px;\">\r\n\t\t\t\t\t<legend visible=\"true\">Contact Information</legend>\r\n\t\t\t\t\t<div fxLayout=\"row wrap\">\r\n\t\t\t\t\t\t<div fxFlex=\"100\" style=\"margin-left: 13px\">\r\n\t\t\t\t\t\t\t<div fxFlex=\"80\" class=\"form-group\">\r\n\t\t\t\t\t\t\t\t<!-- <label for=\"forPhoneNumber\" class=\"hint\">Mobile Number</label> -->\r\n\t\t\t\t\t\t\t\t<mat-form-field appearance=\"outline\" class=\"full-width\">\r\n\t\t\t\t\t\t\t\t\t<mat-label>Mobile Number</mat-label>\r\n\t\t\t\t\t\t\t\t\t<input matInput formControlName=\"phoneNumber\" id=\"forPhoneNumber\" maxLength=\"10\"\r\n\t\t\t\t\t\t\t\t\t\tminLength=\"10\" (keypress)=\"_keyPress($event)\" (keyup)=\"isAllNumberZero($event)\" onlyNumber required>\r\n\t\t\t\t\t\t\t\t\t<mat-placeholder class=\"placeholder\">Mobile Number </mat-placeholder>\r\n\r\n\t\t\t\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t\t\t\t\t<mat-error *ngIf=\"createDirectorFormGroup.get('phoneNumber').touched && !createDirectorFormGroup.get('phoneNumber').valid\r\n\t\t\t\t\t\t\t\t\t&& !createDirectorFormGroup.controls['phoneNumber'].hasError('minLength')\">\r\n\t\t\t\t\t\t\t\t\t<small>Enter Mobile Number(Maximum 10 digits)!</small>\r\n\t\t\t\t\t\t\t\t</mat-error>\r\n\t\t\t\t\t\t\t\t<mat-error *ngIf=\"isAllNumberZeroFlag\">\r\n                                <small>\r\n\t\t\t\t\t\t\t\t\t &nbsp; &nbsp; Please Enter Correct Mobile Number\r\n\t\t\t\t\t\t\t\t</small>\r\n                                </mat-error>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div fxFlex=\"10\">\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div fxFlex=\"80\" class=\"form-group\">\r\n\t\t\t\t\t\t\t\t<!-- <label for=\"forlandlineNumber\" class=\"hint\">Landline Number</label> -->\r\n\t\t\t\t\t\t\t\t<mat-form-field appearance=\"outline\" class=\"full-width\">\r\n\t\t\t\t\t\t\t\t\t<mat-label>Landline Number</mat-label>\r\n\t\t\t\t\t\t\t\t\t<input matInput formControlName=\"landlineNumber\" (keypress)=\"_keyPress($event)\"\r\n\t\t\t\t\t\t\t\t\t\tmaxLength=\"10\" minLength=\"10\" onlyNumber id=\"forlandlineNumber\">\r\n\t\t\t\t\t\t\t\t\t<!-- <mat-placeholder class=\"placeholder\">Landline Number </mat-placeholder> -->\r\n\t\t\t\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t\t\t\t\t<mat-error *ngIf=\"createDirectorFormGroup.get('landlineNumber').touched \r\n\t\t\t\t\t\t\t\t\t&& !createDirectorFormGroup.get('landlineNumber').valid\r\n\t\t\t\t\t\t\t\t\t&& !createDirectorFormGroup.controls['landlineNumber'].hasError('minLength')\">\r\n\t\t\t\t\t\t\t\t\t<small>Enter Landline Number!</small>\r\n\t\t\t\t\t\t\t\t</mat-error>\r\n\t\t\t\t\t\t\t\t<mat-error *ngIf=\"createDirectorFormGroup.controls['landlineNumber'].value == '0000000000'\">\r\n\t\t\t\t\t\t\t\t<small>\r\n\t\t\t\t\t\t\t\t\t&nbsp; &nbsp; Please Enter Correct Landline Number</small>\t\r\n\t\t\t\t\t\t\t\t\t</mat-error>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div fxFlex=\"10\">\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div fxLayout=\"row wrap\">\r\n\t\t\t\t\t\t<div fxFlex=\"100\" style=\"margin-left: 13px\">\r\n\t\t\t\t\t\t\t<div fxFlex=\"80\" class=\"form-group\">\r\n\t\t\t\t\t\t\t\t<!-- <label for=\"forprimaryEmailAdress\" class=\"hint\">Email Address</label> -->\r\n\t\t\t\t\t\t\t\t<mat-form-field appearance=\"outline\" class=\"full-width\">\r\n\t\t\t\t\t\t\t\t\t<mat-label>Email Address</mat-label>\r\n\t\t\t\t\t\t\t\t\t<input matInput formControlName=\"primaryEmailAdress\" type=\"email\"\r\n\t\t\t\t\t\t\t\t\t\tpattern=\"^[^\\s@]+@[^\\s@]+\\.[^\\s@]{2,}$\" id=\"forprimaryEmailAdress\" required>\r\n\t\t\t\t\t\t\t\t\t<!-- <mat-placeholder class=\"placeholder\">Email </mat-placeholder> -->\r\n\t\t\t\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t\t\t\t\t<mat-error\r\n\t\t\t\t\t\t\t\t\t*ngIf=\"createDirectorFormGroup.get('primaryEmailAdress').touched && !createDirectorFormGroup.get('primaryEmailAdress').valid\">\r\n\t\t\t\t\t\t\t\t\t<small>Email Address is Required!</small>\r\n\t\t\t\t\t\t\t\t</mat-error>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div fxFlex=\"10\">\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div fxFlex=\"80\">\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div fxFlex=\"10\">\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</fieldset>\r\n\r\n\t\t\t\t<!-- For Additional Tax ID Details -->\r\n\t\t\t\t<div formArrayName=\"custTaxInfo\">\r\n\t\t\t\t\t<div *ngFor=\"let item of createDirectorFormGroup.get('custTaxInfo')['controls']; let i = index;\"\r\n\t\t\t\t\t\t[formGroupName]=\"i\">\r\n\t\t\t\t\t\t<fieldset style=\"border-top: 1px solid lightgray;margin-left: 20px; margin-right: 20px;\">\r\n\t\t\t\t\t\t\t<legend visible=\"true\">Additional Tax ID Details</legend>\r\n\t\t\t\t\t\t\t<div fxLayout=\"row wrap\">\r\n\t\t\t\t\t\t\t\t<div fxFlex=\"100\" style=\"margin-left: 13px\">\r\n\t\t\t\t\t\t\t\t\t<div fxFlex=\"80\" class=\"form-group\">\r\n\t\t\t\t\t\t\t\t\t\t<!-- <label for=\"forTaxId\" class=\"hint\">Tax Id </label> -->\r\n\t\t\t\t\t\t\t\t\t\t<mat-form-field appearance=\"outline\" class=\"full-width\">\r\n\t\t\t\t\t\t\t\t\t\t\t<mat-label>Tax Id</mat-label>\r\n\t\t\t\t\t\t\t\t\t\t\t<input matInput (keypress)=\"omit_special_char($event)\" onlyNumber\r\n\t\t\t\t\t\t\t\t\t\t\t\tformControlName=\"taxId\" id=\"forTaxId\" maxlength=\"10\" required>\r\n\t\t\t\t\t\t\t\t\t\t\t<mat-placeholder class=\"placeholder\">Tax Id </mat-placeholder>\r\n\t\t\t\t\t\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t\t\t\t\t\t\t<mat-error *ngIf=\"item.get('taxId').touched && !item.get('taxId').valid\">\r\n\t\t\t\t\t\t\t\t\t\t\t<small>Tax Id is Required with only numbers!</small>\r\n\t\t\t\t\t\t\t\t\t\t</mat-error>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div fxFlex=\"10\">\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div fxFlex=\"80\" class=\"form-group\">\r\n\t\t\t\t\t\t\t\t\t\t<!-- <label for=\"forCountryOfIssue\" class=\"hint\">Country of Issue </label> -->\r\n\t\t\t\t\t\t\t\t\t\t<mat-form-field appearance=\"outline\" class=\"full-width\">\r\n\t\t\t\t\t\t\t\t\t\t\t<mat-label>Country of Issue</mat-label>\r\n\t\t\t\t\t\t\t\t\t\t\t<mat-select formControlName=\"countryOfIssue\" id=\"forCountryOfIssue\"\r\n\t\t\t\t\t\t\t\t\t\t\t\trequired>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<!-- <mat-option disabled>select---</mat-option> -->\r\n\t\t\t\t\t\t\t\t\t\t\t\t<mat-option *ngFor=\"let countryOfIssue of arrayCountry\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t[value]=\"countryOfIssue\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{{countryOfIssue}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</mat-option>\r\n\t\t\t\t\t\t\t\t\t\t\t</mat-select>\r\n\t\t\t\t\t\t\t\t\t\t\t<!-- <mat-placeholder class=\"placeholder\">Country of Issue </mat-placeholder> -->\r\n\t\t\t\t\t\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t\t\t\t\t\t\t<mat-error\r\n\t\t\t\t\t\t\t\t\t\t\t*ngIf=\"item.get('countryOfIssue').touched && !item.get('countryOfIssue').valid\">\r\n\t\t\t\t\t\t\t\t\t\t\t<small>Please Select Country Of Issue!</small>\r\n\t\t\t\t\t\t\t\t\t\t</mat-error>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div fxFlex=\"10\">\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<div fxLayout=\"row wrap\">\r\n\t\t\t\t\t\t\t\t<div fxFlex=\"100\" style=\"margin-left: 13px\">\r\n\t\t\t\t\t\t\t\t\t<div fxFlex=\"20\" class=\"form-group\">\r\n\t\t\t\t\t\t\t\t\t\t<button mat-raised-button color=\"primary\"\r\n\t\t\t\t\t\t\t\t\t\t\t[disabled]=\"createDirectorFormGroup.invalid || !prefixFlag || isAllNumberZeroFlag\"\r\n\t\t\t\t\t\t\t\t\t\t\t(click)=\"addDirector(createDirectorFormGroup.value,item);openClose('CLOSE')\"\r\n\t\t\t\t\t\t\t\t\t\t\tstyle=\"background-color: rgb(77, 114, 248);\">\r\n\t\t\t\t\t\t\t\t\t\t\t<mat-icon>add</mat-icon> ADD DIRECTOR\r\n\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t<div fxFlex=\"60\">\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div fxFlex=\"80\" class=\"form-group\">\r\n\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div fxFlex=\"10\">\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t</fieldset>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t</fieldset>\r\n\t\t</mat-expansion-panel>\r\n\r\n\r\n\t\t<!-- <mat-card class=\"showDirectorCard\" *ngIf=\"panelOpenState==false\">-->\r\n\t\t<mat-card class=\"showDirectorCard\" *ngIf=\"noOfDir!=1 && isDirectorSaved && panelOpenState==false\">\r\n\t\t\t<mat-card-header>\r\n\t\t\t\t<!--<div mat-card-avatar class=\"example-header-image\">\r\n\t\t\t\t\t<div *ngIf=\"profileImage == 'not_available'; else showAvatar\">\r\n\t\t\t\t\t\t<h4 align=\"center\" style=\"margin-top: 20px;font-size: 50px;\">\r\n\t\t\t\t\t\t\t?\r\n\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>-->\r\n\t\t\t\t<div mat-card-avatar class=\"example-header-image\">\r\n\t\t\t\t\t<div *ngIf=\"profileImage == 'not_available'; else showAvatar\">\r\n\t\t\t\t\t\t<h4 align=\"center\" style=\"margin-top: 20px;font-size: 50px;\">\r\n\t\t\t\t\t\t\t?\r\n\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<ng-template #showAvatar>\r\n\t\t\t\t\t\t<h4 align=\"center\" style=\"margin-top: 30px;font-size: 30px; color: white;\">\r\n\t\t\t\t\t\t\t{{createDirectorFormGroup.value.firstName | slice:0:1 | uppercase}}{{createDirectorFormGroup.value.lastName | slice:0:1 | uppercase}}\r\n\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t</ng-template>\r\n\t\t\t\t</div>\r\n\t\t\t\t<mat-card-title style=\"margin-top: 10px;\">{{createDirectorFormGroup.value.firstName | uppercase}}\r\n\t\t\t\t\t{{createDirectorFormGroup.value.middleName | uppercase}}\r\n\t\t\t\t\t{{createDirectorFormGroup.value.lastName | uppercase}}\r\n\t\t\t\t</mat-card-title>\r\n\t\t\t\t<mat-card-subtitle>#{{this.item.customerId}}</mat-card-subtitle>\r\n\t\t\t\t<mat-card-actions class=\"editAndDelete\">\r\n\t\t\t\t\t<button mat-button (click)=\"editDirector(item)\">\r\n\t\t\t\t\t\t<mat-icon>edit</mat-icon>\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<button mat-button (click)=\"deleteDirector(corporateId,this.item.customerId)\">\r\n\t\t\t\t\t\t<mat-icon>delete_outline</mat-icon>\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</mat-card-actions>\r\n\t\t\t</mat-card-header>\r\n\t\t\t\r\n\t\t</mat-card>\r\n\r\n\t</mat-card>\r\n</form>","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { OnboradingPrimaryComponent } from './onborading-primary/onborading-primary.component';\r\nimport { DirectorDetailsComponent } from './director-details/director-details.component';\r\nimport { ContactInformationComponent } from './contact-information/contact-information.component';\r\nimport { ProofOfIdentityComponent } from './proof-of-identity/proof-of-identity.component';\r\nimport { OnboardingCorporateMainComponent } from './onboarding-corporate-main/onboarding-corporate-main.component';\r\nimport { OtherInfoCorporateComponent } from './other-info-corporate/other-info-corporate.component';\r\nimport { CreateDirectorComponent } from './create-director/create-director.component';\r\n\r\n\r\nexport const onboardingCorporateroutes: Routes = [\r\n\r\n  {\r\n    path:'createDirector',\r\n    component:CreateDirectorComponent\r\n  },\r\n  {\r\n    path:'onborading-primary',\r\n    component:OnboradingPrimaryComponent\r\n  },\r\n  {\r\n    path:'Director-Details',\r\n    component:DirectorDetailsComponent\r\n  }, \r\n  {\r\n    path:'conatctInfo',\r\n    component:ContactInformationComponent\r\n  },\r\n  {\r\n    path:'proofOfIdentity',\r\n    component:ProofOfIdentityComponent\r\n  },\r\n  {\r\n    path:'other-info',\r\n    component:OtherInfoCorporateComponent \r\n  },\r\n  {\r\n    path:'corporate',\r\n    component:OnboardingCorporateMainComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(onboardingCorporateroutes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class OnboardingCorporateRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { OnboardingCorporateRoutingModule, onboardingCorporateroutes } from './onboarding-corporate-routing.module';\r\nimport { OnboradingPrimaryComponent } from './onborading-primary/onborading-primary.component';\r\n\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { RouterModule } from '@angular/router';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatSliderModule } from '@angular/material/slider';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatChipsModule } from '@angular/material/chips';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\r\nimport { ChartModule } from 'angular-highcharts';\r\n\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatNativeDateModule } from '@angular/material/core';\r\nimport { DirectorDetailsComponent } from './director-details/director-details.component';\r\nimport { ContactInformationComponent } from './contact-information/contact-information.component';\r\nimport { ProofOfIdentityComponent } from './proof-of-identity/proof-of-identity.component';\r\nimport { OtherInfoCorporateComponent } from './other-info-corporate/other-info-corporate.component';\r\nimport { OnboardingCorporateMainComponent } from './onboarding-corporate-main/onboarding-corporate-main.component';\r\nimport { CorporateOnboardingService } from './corporate-onboarding.service';\r\nimport { MatStepperModule } from '@angular/material/stepper';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { CreateDirectorComponent } from './create-director/create-director.component';\r\nimport { STEPPER_GLOBAL_OPTIONS } from '@angular/cdk/stepper';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [OnboradingPrimaryComponent, DirectorDetailsComponent, ContactInformationComponent, ProofOfIdentityComponent, OtherInfoCorporateComponent, \r\n    OnboardingCorporateMainComponent, CreateDirectorComponent],\r\n  imports: [\r\n    CommonModule,\r\n    OnboardingCorporateRoutingModule,\r\n    MatStepperModule,\r\n    MatAutocompleteModule,\r\n    FlexLayoutModule,\r\n    MatListModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    MatCardModule,\r\n    MatMenuModule,\r\n    MatSliderModule,\r\n    MatInputModule ,\r\n    MatSelectModule,\r\n    MatSlideToggleModule,\r\n    MatGridListModule,\r\n    MatDatepickerModule,\r\n    MatChipsModule,\r\n    MatCheckboxModule,\r\n    MatRadioModule,\r\n    MatTabsModule,\r\n    MatToolbarModule,\r\n    MatInputModule,\r\n    MatProgressBarModule,\r\n    FlexLayoutModule,\r\n    ReactiveFormsModule,\r\n    MatExpansionModule,\r\n    ChartModule,\r\n  \r\n    MatSelectModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatNativeDateModule,\r\n    RouterModule.forChild(onboardingCorporateroutes)\r\n\r\n  ],\r\n  providers:[CorporateOnboardingService]\r\n})\r\nexport class OnboardingCorporateModule { }\r\n","import { Validators } from '@angular/forms';\r\nimport { ChangeDetectorRef, Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { MatTabChangeEvent } from '@angular/material/tabs';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { CorporateOnboardingService } from '../corporate-onboarding.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { DialogService } from 'app/shared/services/dialogs/dialog.service';\r\nimport { timingSafeEqual } from 'crypto';\r\n\r\n@Component({\r\n  selector: 'app-onborading-primary',\r\n  templateUrl: './onborading-primary.component.html',\r\n  styleUrls: ['./onborading-primary.component.scss'],\r\n})\r\nexport class OnboradingPrimaryComponent implements OnInit {\r\n  imgUrl: string | ArrayBuffer;\r\n  selectedFiles: any;\r\n  onboardingPrimary: FormGroup;\r\n\r\n  companyNameArr: string[] = ['ABC Bank', 'Yes Bank', 'No Bank'];\r\n  categoryArr: string[] = ['Privileged', 'Un Privileged'];\r\n  countryArr: any[] = [];\r\n  imageURL: any;\r\n  profilePicture: any;\r\n  profileImageExist: boolean = false;\r\n  profileId: any;\r\n  profileURL: any;\r\n  customerId: any;\r\n  corporateId: any;\r\n  editCorporateScreen: string;\r\n  isDisable: boolean;\r\n  disableDeletebtn:boolean=false;\r\n  corporateDetails: any;\r\n  countryCode: any;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private formBuilder: FormBuilder,\r\n    private dialogService: DialogService,\r\n    private corporateService: CorporateOnboardingService,\r\n    private cdr: ChangeDetectorRef,\r\n    private route: ActivatedRoute,\r\n    private snack: MatSnackBar,\r\n    private ls: LocalStoreService,\r\n    private apiService: ApiService\r\n  ) {\r\n    this.onboardingPrimary = this.formBuilder.group({\r\n      companyName: ['', [Validators.required]],\r\n      corporateId: [''],\r\n      category: ['', [Validators.required]],\r\n      country: ['', [Validators.required]],\r\n    });\r\n    // this.corporateService.stepReady(this.onboardingPrimary, 'one')\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.editCorporateScreen = localStorage.getItem('EDIT-CORPORATEID');\r\n    console.log(this.editCorporateScreen, 'Edit kyc details');\r\n    this.imageURL = 'not_available';\r\n    console.log('imageurl', this.imgUrl);\r\n    this.route.queryParamMap.subscribe((params: any) => {\r\n      this.imageURL = 'not_available';\r\n      console.log(params.get('index'));\r\n      if (params.get('index')) {\r\n        this.corporateService.sendDisableMatTab({\r\n          index: params.get('index'),\r\n        });\r\n        this.corporateService.setFinishFlag({\r\n          finishFlag: false,\r\n        });\r\n        // this.resetCorprateOnboarding();\r\n        this.onboardingPrimary.reset({\r\n          companyName: '',\r\n          corporateId: '',\r\n          category: '',\r\n          country: '',\r\n        });\r\n      }\r\n    });\r\n    if (this.ls.getItem('corporateId')) {\r\n      this.getCoropratedetails(this.ls.getItem('corporateId'));\r\n    }\r\n    if (this.ls.getItem('EDIT-CORPORATEID')) {\r\n      console.log('KYC Id reference inside');\r\n      // let kycReference = this.ls.getItem('kycReference');\r\n      // this.kycReferenceId = kycReference.replace('KYC_', '');\r\n      this.getCoropratedetails(this.ls.getItem('EDIT-CORPORATEID'));\r\n    }\r\n    this.getCountryName('country');\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    if (this.ls.getItem('corporateId')) {\r\n      this.getCoropratedetails(this.ls.getItem('corporateId'));\r\n    }\r\n  }\r\n\r\n  resetCorprateOnboarding() {\r\n    this.onboardingPrimary.reset();\r\n    this.ls.removeItem('corporateId');\r\n    this.ls.removeItem('corporateTabIndex');\r\n    this.imageURL = 'not_available';\r\n  }\r\n\r\n  previous() {\r\n    // this.dialogService.openCustomerType();\r\n    this.router.navigateByUrl('/others/customerTypeDialog');\r\n  }\r\n\r\n  corporateChange(event) {\r\n    this.selectedFiles = event.target.files[0];\r\n    // Below part is used to display the selected image\r\n    let reader = new FileReader();\r\n    reader.readAsDataURL(event.target.files[0]);\r\n    reader.onload = (event2) => {\r\n      this.imgUrl = reader.result;\r\n    };\r\n  }\r\n\r\n  public profileChange(event) {\r\n    this.profilePicture = event.target.files[0];\r\n    \r\n    let reader = new FileReader();\r\n    reader.readAsDataURL(event.target.files[0]);\r\n    reader.onload = (event2) => {\r\n      // this.imgUrl = reader.result;\r\n      //  this.fun(event.target.files[0], this.profilePicture);\r\n      this.imageURL = reader.result;\r\n      this.disableDeletebtn=true;\r\n      \r\n      // this.profileImageExist = true;\r\n    };\r\n    event.target.value = '';\r\n  }\r\n\r\n  // check(onboardingPrimary){\r\n  //   console.log(\"Before check!\");\r\n  //  console.log(this.onboardingPrimary.controls.countryArr);\r\n\r\n  //   if (this.countryArr == []  || this.categoryArr == [] || this.companyNameArr == []){\r\n  //     console.log(\"Aftercheck1\")\r\n\r\n  //     // var  cssColor =  document.querySelectorAll(\"#cssColor\");\r\n  //     // console.log(cssColor)\r\n  //     // for (let element of cssColor) {\r\n  //       // element.style.color = \"red\"\r\n  //     // }\r\n\r\n  //     document.getElementById(\"cssColor\").style.color = \"red\";\r\n  //   }\r\n  // }\r\n\r\n  getCoropratedetails(e) {\r\n    this.corporateId=e;\r\n    this.apiService.getCoropratedetails(e).subscribe((details) => {\r\n      console.log(details);\r\n      if(details){\r\n        this.ls.setItem('totalCust',details.customerInfo.length)\r\n      // }\r\n      // if (details.corporateStatus === 'APPROVED') {\r\n        this.onboardingPrimary.patchValue(details);\r\n        this.getCountrySelection(details.country)\r\n        this.imageURL = details.profileImage;\r\n        this.imageURL != \"not_available\"? this.disableDeletebtn=true:false;\r\n        this.corporateDetails=details;\r\n        this.ls.removeItem('EDIT-CORPORATEID');\r\n      }\r\n      // if (details) {\r\n\r\n      // }\r\n      // else if (\r\n      //   details.corporateStatus === null ||\r\n      //   details.corporateStatus === ''\r\n      // ) {\r\n      //   this.snack.open('Please Enter Approved Corporate Id Number', 'Ok', {\r\n      //     duration: 4000,\r\n      //     verticalPosition: 'top',\r\n      //     horizontalPosition: 'right',\r\n      //   });\r\n      // }\r\n      else {\r\n        this.snack.open('Please Enter Valid Corporate Id Number', 'Ok', {\r\n          duration: 4000,\r\n          verticalPosition: 'top',\r\n          horizontalPosition: 'right',\r\n        });\r\n      }\r\n    });\r\n  }\r\n  getCountrySelection(data: any) {\r\n    if (data != null) {\r\n      this.apiService.fetchCurrencyInfo(data).subscribe((value) => {\r\n        this.countryCode = value.currencyCode.toLowerCase();\r\n      })\r\n    }\r\n  }\r\n  onSubmit(onboardingPrimary) {\r\n    console.log('onboardingPrimary :: ', onboardingPrimary);\r\n\r\n    this.corporateService\r\n      .saveOrUpdateCorporateAccountInfo(onboardingPrimary)\r\n      .subscribe((data) => {\r\n        console.log('data :: ', data);\r\n        this.corporateId=data.corporateId;\r\n        if (data != null) {\r\n          sessionStorage.setItem(\"ClosingCheck\" , 'entered')\r\n          this.ls.setItem('corporateId', data.corporateId);\r\n          this.corporateService.sendCorporateAccountId(data.corporateId);\r\n          this.snack.open('Basic Information Saved' + ' !', 'OK', {\r\n            duration: 4000,\r\n            verticalPosition: 'top',\r\n            horizontalPosition: 'right',\r\n          });\r\n          this.cdr.markForCheck();\r\n          this.updateCorporateStatus(data.corporateId);\r\n          if (this.profilePicture) {\r\n            let profileUpload: any = {};\r\n            profileUpload.documentName = 'Profile';\r\n            profileUpload.documentType = 1;\r\n            profileUpload.fileType = this.profilePicture?.type;\r\n            profileUpload.fileName = this.profilePicture?.name;\r\n            profileUpload.corporateId = data.corporateId;\r\n            console.log(profileUpload);\r\n            const uploadData = new FormData();\r\n            uploadData.append('data', JSON.stringify(profileUpload));\r\n            uploadData.append('file', this.profilePicture);\r\n            this.apiService.uploadCorporateDocument(uploadData).subscribe(\r\n              (response) => {},\r\n              (err) => {\r\n                console.log('error', err);\r\n              }\r\n            );\r\n          }\r\n          this.next();\r\n        } else {\r\n          this.snack.open(\r\n            'Not able to connect to server!',\r\n            'INTERNAL SERVER ERROR',\r\n            {\r\n              duration: 4000,\r\n              verticalPosition: 'top',\r\n              horizontalPosition: 'right',\r\n            }\r\n          );\r\n        }\r\n\r\n        (error) => {\r\n          console.log('error resp :: ', error);\r\n          this.snack.open(`${error.error.message} `, 'OK', {\r\n            duration: 4000,\r\n            verticalPosition: 'top',\r\n            horizontalPosition: 'right',\r\n          });\r\n        };\r\n      });\r\n  }\r\n\r\n  updateCorporateStatus(corporateId) {\r\n    console.log('corporateId :: ', corporateId);\r\n    this.apiService\r\n      .updateCorporateSatatus(corporateId, 'UNDER_PROCESS')\r\n      .subscribe((data) => {\r\n        console.log('update response :: ', data);\r\n      });\r\n  }\r\n  getProfileImage(customerId: any, document_type: number) {\r\n    this.apiService\r\n      .getCustomerDocuments(customerId, document_type)\r\n      .subscribe((data) => {\r\n        console.log('data ::', data);\r\n        if (data.length > 0) {\r\n          this.profileId = data[0].id;\r\n          this.imageURL = data[0].fileUrl;\r\n        }\r\n      });\r\n  }\r\n\r\n  deleteProfileImg() {\r\n    this.imageURL = 'not_available';\r\n    var docObj=this.corporateDetails.corporateDocs.find(x=>  x.documentName==\"Profile\");\r\n    this.apiService\r\n      .delCorporateCustDoc(this.corporateId, 'Profile',docObj.id)\r\n      .subscribe((data) => \r\n      {\r\n        this.snack.open('Profile Image Deleted Successfully', 'OK', {\r\n          duration: 4000,\r\n          verticalPosition: 'top',\r\n          horizontalPosition: 'right',\r\n        });\r\n      });\r\n      this.disableDeletebtn=false;\r\n  }\r\n\r\n  next() {\r\n    this.corporateService.sendDisableMatTab({\r\n      index: 1,\r\n    });\r\n    this.corporateService.setFinishFlag({\r\n      finishFlag: false,\r\n    });\r\n  }\r\n\r\n  getCountryName(key: string) {\r\n    this.apiService.getAllCountries().subscribe((data: any) => {\r\n     for(let i=0; i<data.length;i++){\r\n       if(data[i].authStatus==='A'){     \r\n         this.countryArr.push(data[i].countryName);\r\n       }\r\n     }\r\n   });\r\n }\r\n}\r\n","<form [formGroup]=\"onboardingPrimary\" ngNativeValidate>\r\n    <div class=\"full-width\" >\r\n        <div style=\"padding: 1rem 0; background-color:#F1F1F4\">\r\n            <div style=\"padding: 0 4.3rem\">\r\n                <mat-card style=\"border-radius: 0px;\">\r\n                    <div class=\"full-width\" style=\"padding: 1rem 1rem;\" >\r\n                        <h2 style=\"font-size: 18px;\">Primary Information</h2>\r\n                        <mat-divider style=\"width:70px;border-bottom: 7px solid #456EFE;left: 30px; border-radius: 30px;\">\r\n                        </mat-divider>\r\n                    </div>\r\n                    <mat-card-content fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"10px\" >\r\n                        <!-- <div fxLayout=\"row\" fxLayoutAlign=\"start start\" fxLayoutGap=\"10px\"> -->\r\n                        <div fxFlex=\"20%\" fxFlex.xs=\"100%\" class=\"full-width\">\r\n                            <div fxLayout=\"column\" class=\"full-width\" fxLayoutAlign=\"space-around center\">\r\n                                <div>\r\n                                    <div>\r\n                                        <button mat-icon-button style=\"float: right;padding-top: 8px;\r\n                                         padding-left: 30px; cursor: pointer;\" >\r\n                                          <input type=\"file\" #profileFile input type=\"file\" \r\n                                          (change)=\"profileChange($event)\" \r\n                                           accept=\"image/png, image/gif, image/jpg, image/jpeg\" class=\"inputStyle\">\r\n                                   \r\n                                           <mat-icon  color=\"primary\">edit</mat-icon>\r\n                                        </button>\r\n                                    </div>\r\n                                    <ng-container *ngIf=\"imageURL == 'not_available'; else showAvatar\">\r\n                                        <img class=\"formImg\" [src]=\"'assets/images/type2.png'\" alt=\"\">\r\n                                    </ng-container>\r\n                                    <ng-template #showAvatar>\r\n                                        <img class=\"formImg\" [src]=\"imageURL\" alt=\"\">\r\n                                    </ng-template>\r\n                                </div>\r\n                        \r\n                                <div class=\"ml-87\">\r\n                                    <!-- <mat-icon *ngIf=\"disableDeletebtn\" style=\"margin-left: 400%;cursor: pointer;color: red;\"(click)=\"deleteProfileImg()\"\r\n                                                >delete</mat-icon> -->\r\n                                                <button mat-icon-button  color=\"warn\" \r\n                                                        [disabled]=\"!disableDeletebtn\" (click)=\"deleteProfileImg()\" >\r\n                                                        <mat-icon >delete</mat-icon>\r\n                                                </button>\r\n                                </div>\r\n                                <!-- <div style=\"padding: 1rem 0;\">\r\n                                    <div\r\n                                        style=\"text-decoration: underline;text-align: center;color: #2680EB;position: relative;height: 30px;line-height: 30px;cursor: pointer;padding-right: 2px;\">\r\n                                        Corporate\r\n                                        <input type=\"file\" input type=\"file\" (change)=\"profileChange($event)\"\r\n                                            accept=\"image/png, image/gif, image/jpg, image/jpeg\"\r\n                                            style=\"opacity: 0.0;top: 0;left: 0;bottom: 0;right: 0;position: absolute;width:100%;height: 100%;text-align: center;cursor: pointer;\">\r\n                                    </div>\r\n                                </div> -->\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div fxFlex=\"5%\">\r\n\r\n                        </div>\r\n\r\n                        <div fxFlex=\"70%\" fxLayoutGap=\"10px\">\r\n                            <div fxLayout=\"row\" fxLayoutGap=\"100px\">\r\n\r\n                                <!-- <div class=\"flex-grow-1\" id=\"fech\">\r\n                                    <div fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n                                      <div>\r\n                                        <mat-hint>CIF Number</mat-hint>\r\n                                        <mat-card type=\"input\" class=\"widthCard inputMatcard\">\r\n                                          <input matInput formControlName=\"cifNumber\" class=\"alignment\" type=\"number\" min=\"0\"\r\n                                            oninput=\"validity.valid||(value='');\" name=\"cifNumber\" value=\"cifNumber\">\r\n                                        </mat-card>\r\n                                      </div>\r\n                      \r\n                                    </div>\r\n                                    <div class=\"flex-grow-1\" class=\"fechButtonDiv\">\r\n                                      <p class=\"fetchButton\" (click)=\"autofillDetails()\">Fetch</p>\r\n                                    </div>\r\n                                  </div> -->\r\n\r\n                                  <div fxFlex=\"40%\" id=\"fech\" class=\"form-group\">\r\n                                      <table>\r\n                                          <tr>\r\n                                              <td>\r\n                                                <div>\r\n                                                    <!-- <app-create-director \r\n                                                   [CoroprationData]=\"CoroprationData\" >\r\n                                                 </app-create-director> -->\r\n\r\n                                                    <!-- <label for=\"forcorporateId\" class=\"hint\">Corporate Id </label>\r\n                                                    <mat-form-field class=\"full-width\" floatLabel=\"never\">\r\n                                                          <input matInput name=\"corporateId\" formControlName=\"corporateId\" placeholder=\"Corporate Id\" />\r\n                                                      </mat-form-field> -->\r\n                                                      <div>\r\n                                                        <mat-hint class=\"hint\">Corporate Id</mat-hint>\r\n                                                        <mat-card>\r\n                                                            <input matInput name=\"corporateId\" placeholder=\"Corporate Id\" formControlName=\"corporateId\"/>\r\n                                                        </mat-card>\r\n                                                      </div>\r\n                                                      <!-- <mat-error \r\n                                                          *ngIf=\"onboardingPrimary.get('corporateId').touched && !onboardingPrimary.get('corporateId').valid\">\r\n                                                         <small> Corporate Id is Required!</small> \r\n                                                      </mat-error> -->\r\n                                                  </div>\r\n                                              </td>\r\n                                              <div fxFlex=\"row\" fxLayoutAlign=\"end end\" class=\"fetchDiv\">\r\n                                                <td>\r\n                                                    <div class=\"fechButtonDiv float-end\">\r\n                                                        <p class=\"fetchButton\" (click)=\"getCoropratedetails(onboardingPrimary.get('corporateId').value)\">Fetch</p>\r\n                                                      </div>\r\n                                                  </td>\r\n                                                  <td>\r\n                                                    <div class=\"fechButtonDiv float-end\">\r\n                                                        <p class=\"fetchButton\" (click)=\"resetCorprateOnboarding()\">Reset</p>\r\n                                                      </div>\r\n                                                  </td>\r\n                                              </div>\r\n                                          </tr>\r\n                                      </table>\r\n                                </div>\r\n\r\n                                <div fxFlex=\"40%\" class=\"form-group\">\r\n                                    <div>\r\n                                    <mat-hint for=\"forCompanyName\" class=\"hint\">Company Name* </mat-hint>\r\n                                    <mat-card>\r\n                                        <input matInput name=\"companyName\" formControlName=\"companyName\"   placeholder=\"Company Name\" />\r\n                                    </mat-card>\r\n                                    <mat-error class=\"errorClass\"\r\n                                        *ngIf=\"onboardingPrimary.get('companyName').touched && !onboardingPrimary.get('companyName').valid\">\r\n                                       <small> Company Name is Required!</small> \r\n                                    </mat-error>\r\n                                </div>\r\n                                </div>\r\n                            </div>\r\n                            <div fxLayout=\"row\" fxLayoutGap=\"100px\">\r\n                                <div fxFlex=\"40%\" class=\"form-group\">\r\n                                    <div>\r\n                                    <mat-hint for=\"forCategory\" class=\"hint\">Category</mat-hint>\r\n                                  <mat-card class=\"catagory\">\r\n                                        <mat-select formControlName=\"category\" id=\"forCategory\" required placeholder=\"Category\">\r\n                                            <mat-option *ngFor=\"let category of categoryArr\" [value]=\"category\">\r\n                                                {{category}}\r\n                                            </mat-option>\r\n                                        </mat-select>\r\n                                  </mat-card>\r\n                                    <mat-error class=\"errorClass\"\r\n                                        *ngIf=\"onboardingPrimary.get('category').touched && !onboardingPrimary.get('category').valid\">\r\n                                        <small>Please select Category!</small> \r\n                                    </mat-error>\r\n                                </div>\r\n                                </div>\r\n                            \r\n                            \r\n                                <div fxFlex=\"40%\" class=\"form-group\">\r\n                                    <div>\r\n                                    <mat-hint for=\"forCountry\" class=\"hint\">Country</mat-hint>\r\n                                  <!-- <mat-card floatLabel=\"never\" [ngClass]=\"{'error': onboardingPrimary.get('country').touched && !onboardingPrimary.get('country').valid}\"> -->\r\n                                    <mat-card>\r\n                                        <div>\r\n                                            <div fxFlex=\"15\">\r\n                                                <div matPrefix\r\n                                                class=\"currency-flag currency-flag-{{countryCode}}\">\r\n                                            </div>\r\n                                            </div>\r\n                                            <div fxFlex=\"85\">\r\n                                                <mat-select formControlName=\"country\" id=\"forCountry\" required (selectionChange)=\"getCountrySelection($event.value)\" placeholder=\"Country\">\r\n                                                    <mat-option *ngFor=\"let country of countryArr\" [value]=\"country\">\r\n                                                        {{country}}\r\n                                                    </mat-option>\r\n                                                </mat-select>\r\n                                            </div>\r\n                                        </div>\r\n                                    </mat-card>\r\n                                    \r\n                                        <!-- <mat-placeholder class=\"placeholder\" >Select Country </mat-placeholder> -->\r\n                                  <!-- </mat-card> -->\r\n                                  <!-- <mat-placeholder class=\"placeholder\" >Select Country </mat-placeholder> -->\r\n                                    <mat-error class=\"errorClass\"\r\n                                    *ngIf=\"onboardingPrimary.get('country').touched && !onboardingPrimary.get('country').valid\">\r\n                                    <small>Please select Country!</small> \r\n                                </mat-error>\r\n                            </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </mat-card-content>\r\n\r\n                </mat-card>\r\n\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"button\">\r\n        <button mat-button class=\"Back\" (click)=\"previous()\" >Back</button>\r\n        <button mat-stroked-button class=\"Next\" [disabled]=\"onboardingPrimary.invalid\"\r\n        (click)=\"onSubmit(onboardingPrimary.value)\"  >Next</button>\r\n        \r\n    </div>\r\n</form>","import { FormArray, FormGroup, Validators } from '@angular/forms';\r\nimport { ChangeDetectorRef, Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { MatTabChangeEvent } from '@angular/material/tabs';\r\nimport { FormBuilder } from '@angular/forms';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { CorporateOnboardingService } from '../corporate-onboarding.service';\r\nimport * as moment from 'moment';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { DialogService } from 'app/shared/services/dialogs/dialog.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\n\r\n@Component({\r\n  selector: 'app-other-info-corporate',\r\n  templateUrl: './other-info-corporate.component.html',\r\n  styleUrls: ['./other-info-corporate.component.scss']\r\n})\r\nexport class OtherInfoCorporateComponent implements OnInit {\r\n  otherInfoFormGroup: FormGroup;\r\n\r\n  documentTypeList: string[];\r\n  idTypeList: string[];\r\n\r\n  countryList: string[];\r\n  genderList: string[];\r\n  residenceList: string[];\r\n  nationalityList: string[];\r\n  organizationTypeList: any = ['Public', 'Private'];\r\n  typeOfOwnershipList: any = ['Independent', 'Dependent'];\r\n  addressTypeList: any = ['Registration'];\r\n  localityList: any = ['Bangalore', 'Mangalore'];\r\n  kycStatusList: any = ['APPROVED', 'BACKLOG', 'INITIATED', 'REJECTED'];\r\n  corporateId: any;\r\n  arrayCountry: string[];\r\n  arrayState: string[];\r\n  arrayCity: string[];\r\n  otherDocumentArray: any[] = [];\r\n  selectedDocumentTypes: any[] = [];\r\n  selectedOptions: any[] = [];\r\n  isAllSameDigitVal: boolean=false;\r\n  profilePicture: any;\r\n  profileURL: string | ArrayBuffer;\r\n  nameOfDocument:  any[] = [];\r\n  isExistingCustomer:boolean=false;\r\n  constructor(private router: Router,\r\n    private formBuilder: FormBuilder,\r\n    private dialogService: DialogService,\r\n    private corporateService: CorporateOnboardingService,\r\n    private cdr: ChangeDetectorRef, private snack: MatSnackBar,\r\n    private ls: LocalStoreService,\r\n    \r\n    private apiService: ApiService) {\r\n    this.otherInfoFormGroup = this.formBuilder.group({\r\n      corporateId: [''],\r\n      organizationType: [''],\r\n      typeOfOwnership: [''],\r\n      kycReference: [''],\r\n      KycStatus: [''],\r\n      corporateRegisterAddress: formBuilder.array([]),\r\n      corporateDocs: formBuilder.array([])\r\n    })\r\n    // this.corporateService.stepReady(this.otherInfoFormGroup, 'five')\r\n    this.addAddress();\r\n    this.getCountryName(\"country\");\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.isExistingCustomer=this.ls.getItem('CorporateExistingCustomer')\r\n    this.corporateService.corporateAccountIdVal\r\n      .subscribe(corporateId => {\r\n        this.corporateId = corporateId;\r\n        console.log('corporateId :: ', this.corporateId);\r\n        this.otherInfoFormGroup.get('corporateId').setValue(corporateId)\r\n        if(this.corporateId){\r\n          this.getCoropratedetails(this.corporateId);\r\n        }\r\n      });\r\n    this.getDoc();\r\n    this.addDocument();\r\n    if(this.isExistingCustomer===true){\r\n        var kycValues=this.ls.getItem('KycValues')\r\n        this.otherInfoFormGroup.get('KycStatus').setValue(kycValues.kycStatus);\r\n        this.otherInfoFormGroup.get('kycReference').setValue(kycValues.kycReference);\r\n    }\r\n  }\r\n\r\n\r\n  get getDocumentList() {\r\n    return this.otherInfoFormGroup.get('corporateDocs') as FormArray;\r\n  }\r\n\r\n  addDocument() {\r\n    this.getDocumentList.push(this.formBuilder.group({\r\n      documentType: [''],\r\n      documentName: ['', [Validators.required]],\r\n      fileData: ['']\r\n    }));\r\n  }\r\n\r\n  get getAddressData() {\r\n    return this.otherInfoFormGroup.get('corporateRegisterAddress') as FormArray;\r\n  }\r\n\r\n  addAddress() {\r\n    this.getAddressData.push(this.formBuilder.group({\r\n      addressType: [''],\r\n      address1: ['', [Validators.required]],\r\n      address2: ['', [Validators.required]],\r\n      city: [''],\r\n      state: [''],\r\n      country: [''],\r\n      zipCode: ['', [Validators.required,Validators.minLength(6), Validators.maxLength(10)]],\r\n    }));\r\n  }\r\n\r\n  _keyPress(event: any) {\r\n    const pattern = /[0-9]/;\r\n    let inputChar = String.fromCharCode(event.charCode);\r\n    if (!pattern.test(inputChar)) {\r\n      event.preventDefault();\r\n\r\n    }\r\n  }\r\n\r\n  deleteDocument(item, i) {\r\n    console.log('delete record :: ', item, ' index :: ', i);\r\n    this.getDocumentList.removeAt(i);\r\n  }\r\n\r\n  getCountryName(key: string) {\r\n    this.apiService.getAllCountries().subscribe((data: any) => {\r\n     for(let i=0; i<data.length;i++){\r\n       if(data[i].authStatus==='A'){     \r\n         this.arrayCountry.push(data[i].countryName);\r\n       }\r\n     }\r\n   });\r\n }\r\n\r\n getStateName(country) {\r\n  this.apiService.getAllCountries().subscribe((data: any) => {\r\n    for(let i=0; i<data.length;i++){       \r\n      if(data[i].countryName == country){\r\n        this.apiService.getStateByCountryId(data[i].id).subscribe((resp: any) => {\r\n        this.arrayState = resp\r\n        })\r\n        break;   \r\n      }\r\n    }\r\n  })\r\n}\r\n\r\n\r\n  getCityName(state: any) {\r\n    console.log(state)\r\n    this.apiService.getDropDownValues1(\"city\", state).subscribe((data) => {\r\n      this.arrayCity = data;\r\n      console.log(\"-->\", this.arrayCity)\r\n    });\r\n  }\r\n\r\n  onOtherDocSelect(files: FileList, idx: any, fileName: String) {\r\n    console.log(\"Filelisttt\", files);\r\n    console.log(\"cheeck::\",this.otherInfoFormGroup)\r\n    this.otherDocumentArray.push(files.item(0));\r\n    this.otherInfoFormGroup.get('corporateDocs')['controls'][idx].controls.documentName.setValue(fileName);\r\n\r\n    let reader = new FileReader();\r\n    reader.readAsDataURL(files.item(0));\r\n    reader.onload = (event2) => {\r\n      console.log(\"doc upload check\");\r\n      console.log(\"jaskd\", this.otherInfoFormGroup.get('corporateDocs')['controls'][idx].controls.fileData)\r\n\r\n      this.otherInfoFormGroup.get('corporateDocs')['controls'][idx].controls.fileData.setValue(reader.result);\r\n    };\r\n\r\n  }\r\n  // public profileChange(event) {\r\n  //   console.log(\"profile\", event);\r\n  //   this.profilePicture = event.target.files[0];\r\n  //   let reader = new FileReader();\r\n  //   reader.readAsDataURL(event.target.files[0]);\r\n  //   reader.onload = (event2) => {\r\n  //     // this.imgUrl = reader.result;\r\n  //     //this.fun(event.target.files[0], this.profilePicture);\r\n  //     // this.imageURL = reader.result;\r\n  //     // console.log(\"Profile Test:: \",this.imageURL)\r\n  //     this.profileURL = reader.result;\r\n  //     console.log(\"Profile Image Test:: \", reader.result)\r\n  //   };\r\n  // }\r\n\r\n  getCoropratedetails(e){\r\n    this.apiService.getCoropratedetails(e).subscribe((details => {\r\n      console.log(details.corporateDocs.length);\r\n      this.nameOfDocument=details.corporateDocs\r\n      \r\n      for(let i=0;i<details.corporateDocs.length;i++){\r\n       if(details.corporateDocs.length>1 && details.corporateDocs[i].documentName !==\"profile\" ){\r\n        \r\n          this.otherInfoFormGroup.patchValue(details); \r\n          this.otherInfoFormGroup.controls.corporateDocs['controls'][i].controls.documentType.setValue(this.documentTypeList[i+1]);\r\n          this.otherInfoFormGroup.controls.corporateDocs['controls'][i].controls.fileData.setValue(details.corporateDocs[i+1].fileUrl); \r\n   \r\n        }\r\n       \r\n       \r\n       \r\n      }\r\n    \r\n      this.getStateName(details.corporateAddress[0].country)\r\n      this.getCityName(details.corporateAddress[0].state)\r\n    }))\r\n    }\r\n\r\n  onSubmit(otherInfoFormGroup) {\r\n    console.log(\"otherInfoFormGroup BEFORE:: \", otherInfoFormGroup);\r\n    let obj = {}\r\n    Object.keys(otherInfoFormGroup).map(function (key, index) {\r\n      if (key != 'corporateDocs') {\r\n        obj[key] = otherInfoFormGroup[key]\r\n      }\r\n    });\r\n    console.log('doc legth :: ', this.otherDocumentArray)\r\n    console.log(\"otherInfoFormGroup after:: \", obj);\r\n\r\n    this.corporateService.saveOrUpdateCorporateAccountInfo(obj)\r\n      .subscribe(data => {\r\n        console.log('data :: ', data);\r\n        if (data != null) {\r\n          for (let i = 0; i < this.otherInfoFormGroup.get('corporateDocs').value.length; i++) {\r\n            if (this.otherDocumentArray.length > 0) {\r\n              let documentToBeUploaded: any = {};\r\n              documentToBeUploaded.documentName = this.otherInfoFormGroup.get('corporateDocs').value[i].documentType;\r\n              documentToBeUploaded.documentType = 2;\r\n              documentToBeUploaded.fileType = this.otherDocumentArray[i].type;\r\n              documentToBeUploaded.fileName = this.otherDocumentArray[i].name;\r\n              documentToBeUploaded.corporateId = data.corporateId;\r\n              documentToBeUploaded.id = this.otherDocumentArray[i].id;\r\n              const uploadData = new FormData();\r\n              uploadData.append('data', JSON.stringify(documentToBeUploaded));\r\n              uploadData.append('file', this.otherDocumentArray[i]);\r\n              this.apiService.uploadCorporateDocument(uploadData).subscribe((resp) => {\r\n                console.log(resp);\r\n              });\r\n            }\r\n          }\r\n          this.updateCorporateStatus(data.corporateId);\r\n          this.dialogService.customerOnboardingSuccessDialogue('CORPORATE', this.corporateId);\r\n          this.otherInfoFormGroup.reset();\r\n          this.ls.removeItem('corporateId');\r\n          this.ls.removeItem('corporateTabIndex');\r\n          this.corporateService.sendDisableMatTab({\r\n            index: 0\r\n          })\r\n          this.corporateService.setnoOfDirectors(null);\r\n          // this.snack.open(`Other information saved`+ ' !', 'OK', {\r\n          //   duration: 4000,\r\n          //   verticalPosition: 'top',\r\n          //   horizontalPosition: 'right'\r\n          // });\r\n          this.cdr.markForCheck();\r\n          \r\n        } else {\r\n          this.snack.open('Not able to connect to server!', 'INTERNAL SERVER ERROR', {\r\n            duration: 4000,\r\n            verticalPosition: 'top',\r\n            horizontalPosition: 'right'\r\n          });\r\n        }\r\n      }, error => {\r\n        console.log('error resp :: ', error);\r\n        this.snack.open(`${error.error.message} `, 'OK', {\r\n          duration: 4000,\r\n          verticalPosition: 'top',\r\n          horizontalPosition: 'right'\r\n        });\r\n      });\r\n  }\r\n\r\n  previous() {\r\n    this.corporateService.sendDisableMatTab({\r\n      index: 3,\r\n    });\r\n  }\r\n\r\n  next() {\r\n    // this.corporateService.sendDisableMatTab({\r\n    //   index: 4,\r\n    // });\r\n    this.corporateService.setFinishFlag({\r\n      finishFlag: true,\r\n    });\r\n  }\r\n  updateCorporateStatus(corporateId) {\r\n    console.log('corporateId :: ', corporateId);\r\n    this.apiService.updateCorporateSatatus(corporateId, 'INITIATED')\r\n      .subscribe(data => {\r\n        console.log('update response :: ', data)\r\n      })\r\n  }\r\n\r\n\r\n\r\n  getDoc() {\r\n    this.apiService.getDropDownValues(\"document_type\").subscribe((data) => {\r\n      this.documentTypeList = data;\r\n    });\r\n    this.apiService.getDropDownValues(\"document_name\").subscribe((resp) => {\r\n      this.idTypeList = resp;\r\n    });\r\n    this.apiService.getDropDownValues(\"country\").subscribe((responseData) => {\r\n      this.countryList = responseData;\r\n    });\r\n    this.apiService.getDropDownValues(\"gender\").subscribe((responseDatas) => {\r\n      this.genderList = responseDatas;\r\n    });\r\n    this.apiService.getDropDownValues(\"residence\").subscribe((responses) => {\r\n      this.residenceList = responses;\r\n    });\r\n    this.apiService.getDropDownValues(\"nationality\").subscribe((datas) => {\r\n      this.nationalityList = datas;\r\n    });\r\n  }\r\n\r\n  isDocumentOptionDisabled = (value) => {\r\n    return this.selectedOptions.includes(value);\r\n  }\r\n\r\n  changeValue(value: any, index) {\r\n\r\n    console.log(index);\r\n    if (this.selectedDocumentTypes[index]) {\r\n      this.selectedOptions = this.selectedOptions.filter(val => val !== this.selectedDocumentTypes[index])\r\n    }\r\n    this.selectedDocumentTypes[index] = value;\r\n\r\n    console.log(value)\r\n    this.selectedOptions.push(value);\r\n    // this.arrayDocumentType = this.arrayDocumentType.filter(document => document !== value);\r\n  }\r\n\r\n  isAllSameDigit(event) {\r\n    let count = 0, number = event.target.value;\r\n    if (number != '') {\r\n      for (var i = 0; i < number.length; i++) {\r\n        if (0 == number[i]) {\r\n          count++;\r\n        }\r\n      }\r\n      if (count == number.length) {\r\n        this.isAllSameDigitVal = true;\r\n      }\r\n      else {\r\n        this.isAllSameDigitVal = false;\r\n      }\r\n    }else {\r\n      this.isAllSameDigitVal = false;\r\n    }\r\n  }\r\n\r\n\r\n}\r\n","<form [formGroup]=\"otherInfoFormGroup\" ngNativeValidate>\r\n    <div class=\"full-width\">\r\n        <div style=\"padding: 1rem 0;background-color:#F1F1F4\">\r\n            <div style=\"padding: 0 4.3rem\">\r\n                <mat-card style=\"border-radius: 0px;\">\r\n                    <div fxLayout=\"column\" class=\"full-width\" fxLayoutAlign=\"space-around start\">\r\n                        <div class=\"full-width\" style=\"padding: 1rem 1rem;\">\r\n                            <h2 style=\"font-size: 18px;\">Other Information</h2>\r\n                            <mat-divider style=\"width:70px;border-bottom: 7px solid #456EFE;left: 30px; border-radius: 30px;\">\r\n                            </mat-divider>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n\r\n                    <div fxLayout=\"row wrap\">\r\n                        <div fxFlex=\"100\" fxLayoutGap=\"20px\">\r\n                            <div fxFlex=\"50\">\r\n                                <fieldset\r\n                                    style=\"border-top: 1px solid lightgray;margin-left: 20px; margin-right: 20px;\">\r\n                                    <legend visible=\"true\">Organization Information</legend>\r\n                                    <div fxLayout=\"row wrap\">\r\n                                        <div fxFlex=\"100\" fxLayoutGap=\"20px\" class=\"padding\">\r\n\r\n                                            <div fxFlex=\"50\" class=\"form-group\">\r\n\r\n                                                <!-- <label for=\"forOrganizationType\" class=\"hint\">Organization Type*</label> -->\r\n                                                <!-- <mat-form-field floatLabel=\"never\"> -->\r\n                                                    <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                                        <mat-label>Organization Type</mat-label>\r\n\r\n                                                    <mat-select id=\"forOrganizationType\"\r\n                                                        formControlName=\"organizationType\" required>\r\n                                                        <!-- <mat-option disabled>select---</mat-option> -->\r\n                                                        <mat-option *ngFor=\"let orgType of organizationTypeList\"\r\n                                                            [value]=\"orgType\">\r\n                                                            {{orgType}}\r\n                                                        </mat-option>\r\n                                                    </mat-select>\r\n                                                    <!-- <mat-placeholder class=\"placeholder\">Organization Type\r\n                                                    </mat-placeholder> -->\r\n                                                </mat-form-field>\r\n                                                <mat-error\r\n                                                    *ngIf=\"otherInfoFormGroup.get('organizationType').touched && !otherInfoFormGroup.get('organizationType').valid\">\r\n                                                    <small>OrganizationType is Required!</small>\r\n                                                </mat-error>\r\n                                            </div>\r\n                                            <div fxFlex=\"50\" class=\"form-group\">\r\n                                                <!-- <label for=\"forTypeOfOwnership\" class=\"hint\">Type Of Ownership*</label> -->\r\n                                                <!-- <mat-form-field floatLabel=\"never\"> -->\r\n                                                    <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                                        <mat-label>Type Of Ownership</mat-label>\r\n                                                    <mat-select id=\"forTypeOfOwnership\"\r\n                                                        formControlName=\"typeOfOwnership\" required>\r\n                                                        <!-- <mat-option disabled>select---</mat-option> -->\r\n                                                        <mat-option *ngFor=\"let typeOfOwnership of typeOfOwnershipList\"\r\n                                                            [value]=\"typeOfOwnership\">\r\n                                                            {{typeOfOwnership}}\r\n                                                        </mat-option>\r\n                                                    </mat-select>\r\n                                                    <!-- <mat-placeholder class=\"placeholder\">Type Of Ownership\r\n                                                    </mat-placeholder> -->\r\n                                                </mat-form-field>\r\n                                                <mat-error\r\n                                                    *ngIf=\"otherInfoFormGroup.get('typeOfOwnership').touched && !otherInfoFormGroup.get('typeOfOwnership').valid\">\r\n                                                    <small>Type Of Ownership is Required!</small>\r\n                                                </mat-error>\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                </fieldset>\r\n                            </div>\r\n                            <div fxFlex=\"50\">\r\n                                <fieldset\r\n                                    style=\"border-top: 1px solid lightgray;margin-left: 20px; margin-right: 20px;\">\r\n                                    <legend visible=\"true\">KYC Information</legend>\r\n                                    <div fxLayout=\"row wrap\">\r\n                                        <div fxFlex=\"100\" fxLayoutGap=\"20px\" class=\"padding\">\r\n                                            <div fxFlex=\"50\" class=\"form-group\">\r\n\r\n                                                <!-- <label for=\"forkycStatus\" class=\"hint\">KYC Status</label> -->\r\n                                                <!-- <mat-form-field floatLabel=\"never\"> -->\r\n                                                    <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                                        <mat-label>KYC Status</mat-label>\r\n                                                    <input *ngIf=\"isExistingCustomer\" matInput id=\"forkycStatus\" readonly \r\n                                                           formControlName=\"KycStatus\"/>\r\n                                                    <mat-select *ngIf=\"!isExistingCustomer\" id=\"forkycStatus\" formControlName=\"KycStatus\">\r\n\r\n                                                        <!-- <mat-option disabled>select---</mat-option> -->\r\n                                                        <mat-option *ngFor=\"let kycStat of kycStatusList\"\r\n                                                            [value]=\"kycStat\">\r\n                                                            {{kycStat}}\r\n                                                        </mat-option>\r\n                                                    </mat-select>\r\n                                                    <!-- <mat-placeholder class=\"placeholder\">KYC Status </mat-placeholder> -->\r\n                                                </mat-form-field>\r\n                                                <!-- <mat-error *ngIf=\"otherInfoFormGroup.controls['KycStatus'] && otherInfoFormGroup.controls['KycStatus'].touched && !otherInfoFormGroup.controls['KycStatus'].valid\">\r\n                                                    \r\n                                                    <small>KYC Status is Required!</small>\r\n                                                </mat-error> -->\r\n                                            </div>\r\n                                            <div fxFlex=\"50\" class=\"form-group\">\r\n\r\n                                                <!-- <label for=\"forkycReference\" class=\"hint\">KYC Reference</label> -->\r\n                                                <!-- <mat-form-field floatLabel=\"never\"> -->\r\n                                                    <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                                        <mat-label>KYC Reference</mat-label>\r\n\r\n\r\n                                                    <input matInput [readonly]=\"isExistingCustomer\" id=\"forkycReference\" formControlName=\"kycReference\" >\r\n                                                    <!-- <mat-placeholder class=\"placeholder\">KYC Reference\r\n                                                    </mat-placeholder> -->\r\n                                                </mat-form-field>\r\n                                                <!-- <mat-error\r\n                                                    *ngIf=\"otherInfoFormGroup.get('kycReference').touched && !otherInfoFormGroup.get('kycReference').valid\">\r\n                                                    <small>KYC Reference is Required!</small>\r\n                                                </mat-error> -->\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </fieldset>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <!-- <div formArrayName=\"corporateAddress\">\r\n                        <div *ngFor=\"let item of otherInfoFormGroup.get('corporateAddress')['controls']; let i = index;\"\r\n                            [formGroupName]=\"i\">\r\n                            <fieldset style=\"border-top: 1px solid lightgray;margin-left: 20px; margin-right: 20px;\">\r\n                                <legend visible=\"true\">Registration Address</legend>\r\n                                <div fxLayout=\"row wrap\">\r\n                                    <div fxFlex=\"100\" fxLayoutGap=\"50px\" class=\"padding\">\r\n\r\n                                        <div fxFlex=\"20\" class=\"form-group\">\r\n\r\n                                            <label for=\"foraddressType\" class=\"hint\">Address Type*</label>\r\n                                            <mat-form-field floatLabel=\"never\">\r\n\r\n                                                <mat-select id=\"foraddressType\" formControlName=\"addressType\" required>\r\n                                                    <mat-option disabled>select---</mat-option>\r\n                                                    <mat-option *ngFor=\"let addrsType of addressTypeList\"\r\n                                                        [value]=\"addrsType\">\r\n                                                        {{addrsType}}\r\n                                                    </mat-option>\r\n                                                </mat-select>\r\n                                                <mat-placeholder class=\"placeholder\">Address Type </mat-placeholder>\r\n                                            </mat-form-field>\r\n                                            <mat-error\r\n                                                *ngIf=\"item.get('addressType').touched && !item.get('addressType').valid\">\r\n                                                <small>AddressType is Required!</small>\r\n                                            </mat-error>\r\n                                        </div>\r\n                                        <div fxFlex=\"40\" class=\"form-group\">\r\n\r\n                                            <label for=\"foraddress1\" class=\"hint\">Address Line 1*</label>\r\n                                            <mat-form-field floatLabel=\"never\">\r\n\r\n                                                <input matInput id=\"foraddress1\" formControlName=\"address1\">\r\n                                                <mat-placeholder class=\"placeholder\">Address Line 1 </mat-placeholder>\r\n                                            </mat-form-field>\r\n\r\n                                            <mat-error\r\n                                                *ngIf=\"item.get('address1').touched && !item.get('address1').valid\">\r\n                                                <small>Address Line 1 is Required!</small>\r\n                                            </mat-error>\r\n                                        </div>\r\n\r\n                                        <div fxFlex=\"40\" class=\"form-group\">\r\n\r\n                                            <label for=\"foraddress2\" class=\"hint\">Address Line 2*</label>\r\n                                            <mat-form-field floatLabel=\"never\">\r\n\r\n                                                <input matInput id=\"foraddress2\" formControlName=\"address2\">\r\n                                                <mat-placeholder class=\"placeholder\">Address Line 2 </mat-placeholder>\r\n                                            </mat-form-field>\r\n                                            <mat-error\r\n                                                *ngIf=\"item.get('address2').touched && !item.get('address2').valid\">\r\n                                                <small>Address Line 2 is Required!</small>\r\n                                            </mat-error>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                </div>\r\n\r\n\r\n                                <div fxLayout=\"row wrap\">\r\n                                    <div fxFlex=\"100\" fxLayoutGap=\"20px\" class=\"padding\">\r\n\r\n                                        <div fxFlex=\"25\" class=\"form-group\">\r\n                                            <label for=\"forcountry\" class=\"hint\">Country*</label>\r\n                                            <mat-form-field floatLabel=\"never\">\r\n                                                <mat-select id=\"forcountry\" formControlName=\"country\"\r\n                                                    (selectionChange)=\"getStateName($event.value)\"\r\n                                                     required>\r\n                                                    <mat-option disabled>select---</mat-option>\r\n                                                    <mat-option *ngFor=\"let country of arrayCountry\" [value]=\"country\">\r\n                                                        {{country}}\r\n                                                    </mat-option>\r\n                                                </mat-select>\r\n                                                <mat-placeholder class=\"placeholder\">Country </mat-placeholder>\r\n                                            </mat-form-field>\r\n\r\n                                            <mat-error\r\n                                                *ngIf=\"item.get('country').touched && !item.get('country').valid\">\r\n                                                <small>Country is Required!</small>\r\n                                            </mat-error>\r\n\r\n                                        </div>\r\n\r\n                                        <div fxFlex=\"25\" class=\"form-group\">\r\n                                            <label for=\"forstate\" class=\"hint\">State* </label>\r\n                                            <mat-form-field floatLabel=\"never\">\r\n                                                <mat-select id=\"forstate\" formControlName=\"state\"\r\n                                                    (selectionChange)=\"getCityName($event.value)\" required>\r\n                                                    <mat-option disabled>select---</mat-option>\r\n                                                    <mat-option *ngFor=\"let state of arrayState\" [value]=\"state.value1\">\r\n                                                        {{state.value1}}\r\n                                                    </mat-option>\r\n                                                </mat-select>\r\n                                                <mat-placeholder class=\"placeholder\">State </mat-placeholder>\r\n                                            </mat-form-field>\r\n                                            <mat-error *ngIf=\"item.get('state').touched && !item.get('state').valid\">\r\n                                                <small>State is Required!</small>\r\n                                            </mat-error>\r\n                                        </div>\r\n\r\n                                        <div fxFlex=\"25\" class=\"form-group\">\r\n                                            <label for=\"forCity\" class=\"hint\">City* </label>\r\n                                            <mat-form-field floatLabel=\"never\">\r\n                                                <mat-select id=\"forCity\" formControlName=\"city\" required>\r\n                                                    <mat-option disabled>select---</mat-option>\r\n                                                    <mat-option *ngFor=\"let city of arrayCity\" [value]=\"city.value1\">\r\n                                                        {{city.value1}}\r\n                                                    </mat-option>\r\n                                                </mat-select>\r\n                                                <mat-placeholder class=\"placeholder\">City </mat-placeholder>\r\n                                            </mat-form-field>\r\n                                            <mat-error *ngIf=\"item.get('city').touched && !item.get('city').valid\">\r\n                                                <small>City is Required!</small>\r\n                                            </mat-error>\r\n                                        </div>\r\n                                        <div fxFlex=\"25\" class=\"form-group\">\r\n\r\n                                            <label for=\"forzipCode\" class=\"hint\">Zipcode*</label>\r\n                                            <mat-form-field floatLabel=\"never\">\r\n\r\n                                                <input matInput id=\"forzipCode\"minlength=\"6\" maxlength=\"10\"\r\n                                                 formControlName=\"zipCode\" (keyup)=\"isAllSameDigit($event)\" (keypress)=\"_keyPress($event)\" >\r\n                                                <mat-placeholder class=\"placeholder\" >ZipCode </mat-placeholder>\r\n                                            </mat-form-field>\r\n                                            <mat-error\r\n                                                *ngIf=\"item.get('zipCode').touched && !item.get('zipCode').valid\">\r\n                                                <small>Please enter Zip Code!</small>\r\n                                            </mat-error>\r\n                                            \r\n                                         \r\n                                            <mat-error *ngIf=\"isAllSameDigitVal\">\r\n                                                <small>Please enter valid ZipCode!</small>\r\n                                            </mat-error>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </fieldset>\r\n                        </div>\r\n                    </div> -->\r\n\r\n                    <div formArrayName=\"corporateDocs\">\r\n                        <div *ngFor=\"let item of otherInfoFormGroup.get('corporateDocs')['controls']; let i = index;\"\r\n                            [formGroupName]=\"i\">\r\n\r\n                            <!-- style=\"border-top: 1px solid lightgray;margin-left: 20px; margin-right: 20px;\" -->\r\n                            <fieldset [ngClass]=\"i == 0 ? 'fieldSetZeroIndex' : 'fieldSetNextIndex'\">\r\n                                <legend visible=\"true\" *ngIf='i==0'>Document Upload</legend>\r\n                                <div fxLayout=\"row wrap\">\r\n                                    <div fxFlex=\"100\" fxLayoutGap=\"20px\" class=\"padding\">\r\n                                        <div fxFlex=\"30\" class=\"form-group\">\r\n                                            <!-- <label for=\"forDocumentType\" class=\"hint\">Document Type*</label>\r\n                                            <mat-form-field floatLabel=\"never\"> -->\r\n                                                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                                    <mat-label>Document Type</mat-label>\r\n                                                <mat-select id=\"forDocumentType\" formControlName=\"documentType\" required\r\n                                                    (valueChange)=\"changeValue($event, i)\">\r\n                                                    <mat-option disabled>select---</mat-option>\r\n                                                    <mat-option *ngFor=\"let docType of documentTypeList\"\r\n                                                        [disabled]=isDocumentOptionDisabled(docType) [value]=\"docType\">\r\n                                                        {{docType}}\r\n                                                    </mat-option>\r\n                                                </mat-select>\r\n                                                <!-- <mat-placeholder class=\"placeholder\">Document Type </mat-placeholder> -->\r\n                                            </mat-form-field>\r\n                                            <mat-error\r\n                                                *ngIf=\"item.get('documentType').touched && !item.get('documentType').valid\">\r\n                                                <small>Document Type is Required!</small>\r\n                                            </mat-error>\r\n\r\n                                        </div>\r\n                                        <!-- <div fxFlex=\"30\" class=\"form-group\">\r\n\r\n                                            <label for=\"fordocumentName\" class=\"hint\">Document Name</label>\r\n                                            <mat-form-field floatLabel=\"never\">\r\n\r\n                                                <input matInput id=\"fordocumentName\" formControlName=\"documentName\">\r\n                                                <mat-placeholder class=\"placeholder\">Document Name </mat-placeholder>\r\n                                            </mat-form-field>\r\n                                            <mat-error\r\n                                                *ngIf=\"item.get('documentName').touched && !item.get('documentName').valid\">\r\n                                                <small>Document Name is Required!</small>\r\n                                            </mat-error>\r\n                                        </div> -->\r\n                                        <div class=\"pt20\" fxFlex=\"10%\" fxFlex.xs=\"100%\">\r\n                                            <img height=\"80px\" width=\"85px\" [src]=\"item.controls['fileData'].value\">  \r\n                                            <!-- <img height=\"80px\" width=\"85px\" [src]=\"fileUrl1\">  -->\r\n                                       </div>\r\n                               \r\n                                        <div fxFlex=\"30\" fxLayoutGap=\"5px\"\r\n                                            style=\"display: flex;margin-top: 20px;align-content: center;\">\r\n                                            <input style=\"display: none;margin-top: 20px;\" class=\"default-background\"\r\n                                                type=\"file\" name=\"fileData\" #fileData formControlName=\"fileData\"\r\n                                                (change)=\"onOtherDocSelect($event.target.files, i, fileData.files[0].name)\">\r\n                                            <button mat-button style=\"text-decoration: underline; color:#456EFE;\"\r\n                                                (click)=\"fileData.click()\" [routerLink]=\"\">Browse</button>\r\n                                            <button mat-button (click)=\"deleteDocument(item,i)\">\r\n                                                <mat-icon style=\"color: tomato;\">delete_outline</mat-icon>\r\n                                            </button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </fieldset>\r\n                        </div>\r\n                        <div fxLayout=\"row wrap\">\r\n                            <div fxFlex=\"100\" fxLayoutGap=\"1px\">\r\n                                <div fxFlex=\"1\"></div>\r\n                                <div fxFlex=\"20\">\r\n                                    <button mat-button (click)=\"addDocument()\" color=\"primary\">\r\n                                        <mat-icon>add</mat-icon> ADD DOCUMENT\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </mat-card>\r\n\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"button\">\r\n        <button mat-button class=\"Back\" (click)=\"previous()\">Back</button>\r\n        <button mat-stroked-button class=\"Next\" \r\n        [disabled]=\"otherInfoFormGroup.get('organizationType').invalid || \r\n            otherInfoFormGroup.get('typeOfOwnership').invalid || \r\n            otherInfoFormGroup.get('corporateDocs').invalid\"\r\n        (click)=\"onSubmit(otherInfoFormGroup.value)\">Finish</button>\r\n    </div>\r\n</form>","import { Component, OnInit, DoCheck, ChangeDetectorRef, AfterContentChecked, AfterViewChecked, AfterContentInit, ViewChild } from '@angular/core';\r\nimport { MatTabChangeEvent } from '@angular/material/tabs';\r\nimport { Router } from '@angular/router';\r\nimport { FormGroup, FormControl, Validators, FormBuilder } from '@angular/forms';\r\nimport { MatAccordion } from '@angular/material/expansion';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { CorporateOnboardingService } from '../corporate-onboarding.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\n\r\n@Component({\r\n  selector: 'app-director-details',\r\n  templateUrl: './director-details.component.html',\r\n  styleUrls: ['./director-details.component.scss']\r\n})\r\nexport class DirectorDetailsComponent implements OnInit, AfterViewChecked {\r\n  items: any[] = [];\r\n  directorCount: number = 1;\r\n  @ViewChild(MatAccordion) accordion: MatAccordion;\r\n  number: number;\r\n  directorFormGroup: FormGroup;\r\n  disabledBtn:boolean=true;\r\n  totalCust: any;\r\n  directorData: any;\r\n  constructor(private router: Router,\r\n    private formBuilder: FormBuilder,\r\n    private corporateService: CorporateOnboardingService,\r\n    private cdr: ChangeDetectorRef,\r\n    private ls: LocalStoreService,\r\n    private apiService: ApiService) { \r\n      this.directorFormGroup = this.formBuilder.group({\r\n        \"noOfDirector\": [1]\r\n      })\r\n      // this.corporateService.stepReady(this.directorFormGroup, 'two')\r\n    }\r\n\r\n\r\n  ngOnInit(): void {\r\n    console.log(\"testtt\");\r\n    console.log('items :: ', this.items.length);\r\n    this.totalCust= this.ls.getItem('totalCust');\r\n    console.log(this.totalCust);\r\n    console.log(this.items);\r\n    // if(this.totalCust!=null && this.totalCust<1){\r\n    //   this.items.push(this.totalCust)\r\n    // }\r\n    this.getCoropratedetails(this.ls.getItem('corporateId'));\r\n    console.log(this.items);\r\n    \r\n    this.corporateService.setnoOfDirectors(this.directorFormGroup.get('noOfDirector').value);\r\n    this.directorFormGroup.valueChanges.subscribe(data=>{\r\n      console.log('data : ',data);\r\n      this.corporateService.setnoOfDirectors(data.noOfDirector);\r\n    })\r\n    this.corporateService.getfinishSave().subscribe(disSave=>{\r\n      // console.log('disSave :: ',disSave);\r\n      if(this.totalCust!=null){\r\n        this.directorFormGroup.get('noOfDirector').setValue(this.totalCust);\r\n\r\n      }\r\n      let count=0;\r\n      if(disSave.length>0){\r\n        disSave.forEach((element,key) => {\r\n          // console.log('ele :: ',element, ' key :: ',key);\r\n          if(element == true){\r\n            count++;\r\n          }\r\n        });\r\n        if(count == disSave.length){\r\n          this.disabledBtn=false;\r\n        }else{\r\n          this.disabledBtn=true;\r\n        }\r\n      }\r\n    })\r\n  }\r\n  getCoropratedetails(id){\r\n    this.apiService.getCoropratedetails(id).subscribe((details => {\r\n      if(details){\r\n        if(details.customerInfo.length>0){\r\n          this.directorFormGroup.get('noOfDirector').setValue(details.customerInfo.length)\r\n        for(let i=0;i<details.customerInfo.length;i++){\r\n          this.items.push(details.customerInfo[i])\r\n        }\r\n        }\r\n        else{\r\n          this.items.push(1)\r\n        }\r\n       }\r\n    }))\r\n    }\r\n  onBack(form){\r\n    console.log('form :: ',form);\r\n  }\r\n\r\n  onSubmit(directorFormGroup){\r\n    console.log(\"directorFormGroup :: \",directorFormGroup);\r\n    this.next();\r\n  }\r\n\r\n  previous() {\r\n    // this.documentForm.reset();\r\n    this.corporateService.sendDisableMatTab({\r\n      index: 0,\r\n    });\r\n  }\r\n\r\n  next() {\r\n    this.corporateService.sendDisableMatTab({\r\n      index: 2,\r\n    });\r\n    this.corporateService.setFinishFlag({\r\n      finishFlag: false,\r\n    });\r\n  }\r\n  _keyPress(event: any) {\r\n    // console.log(\"key\",event);\r\n    const pattern = /[0-9]/;\r\n    let inputChar = String.fromCharCode(event.charCode);\r\n    if (!pattern.test(inputChar)) {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n  noOFDirector(event:any){\r\n    if(event.target.value.length === 0 && event.key == \"0\"){\r\n      event.preventDefault();\r\n   }\r\n  }\r\n//   noOfDirector(event) {\r\n//     let value = event.target.value;\r\n//     if (value != '' && value != null && value != undefined && value != ' ' && value != \" \") {\r\n//       console.log(parseInt(value));\r\n//       this.number = parseInt(value);\r\n// console.log(\"number\",this.number);\r\n//       if (this.number != NaN && this.number == 1) {\r\n//         console.log(\"1st\");\r\n//         if (this.items.length > this.number) {\r\n//           // this.items.pop();\r\n//           for (let index = this.number; index <=this.items.length; index++) {\r\n//             this.items.pop();\r\n//             }\r\n//         }\r\n//       }\r\n    \r\n//       if (this.number != NaN && this.number > 1) {\r\n//         console.log(\"2nd\");\r\n//         if (this.number > this.items.length) {\r\n//           for (let i = this.items.length + 1; i <= this.number; i++) {\r\n//             this.items.push(i);\r\n//           }\r\n//         }\r\n//         // else {\r\n//         //   for (let i = this.items.length - 1; i >= this.number; i--) {\r\n//         //     this.removeSign(i);\r\n//         //   }\r\n//         // }\r\n//         if (this.number < this.items.length) {\r\n//           console.log(\"3rd\");\r\n//           for (let index = this.number; index <=this.items.length; index++) {\r\n//             this.items.pop();\r\n//           }\r\n//         }\r\n//         this.cdr.detectChanges();\r\n//         this.cdr.markForCheck();\r\n//       }\r\n//     }\r\n//   }\r\n\r\nnoOfDirector(event) {\r\n  let value = event.target.value;\r\n  if (value != '' && value != null && value != undefined && value != ' ' && value != \" \") {\r\n    console.log(parseInt(value));\r\n    this.number = parseInt(value);\r\n    let itemLength = this.items.length;\r\n    if (!isNaN(this.number) && this.number == 1) {\r\n      if (this.items.length > this.number) {\r\n        for (let index = this.number; index <itemLength; index++) {\r\n          this.items.pop();\r\n          }\r\n      }\r\n    }\r\n  \r\n    if ( !isNaN(this.number) && this.number > 1) {\r\n      if (this.number > this.items.length) {\r\n        for (let i = this.items.length + 1; i <= this.number; i++) {\r\n          this.items.push(i);\r\n        }\r\n      }\r\n      if (this.number < this.items.length) {\r\n        for (let index = this.number; index <itemLength; index++) {\r\n          this.items.pop();\r\n        }\r\n      }\r\n      this.cdr.detectChanges();\r\n      this.cdr.markForCheck();\r\n    }\r\n  }\r\n}\r\n\r\n  removeSign(i: number) {\r\n    throw new Error('Method not implemented.');\r\n  }\r\n  ngAfterViewChecked() {\r\n\r\n  }\r\n\r\n}\r\n","\r\n\r\n<Form [formGroup]=\"directorFormGroup\" ngNativeValidate>\r\n    <div class=\"full-width\">\r\n        <div style=\"padding: 1rem 0; background-color: #F1F1F4;\">\r\n            <div style=\"padding: 0 4.3rem\">\r\n                <mat-card style=\"border-radius: 0px;\">\r\n                    <div fxLayout=\"column\" class=\"full-width\" fxLayoutAlign=\"space-around start\">\r\n                        <div class=\"full-width\" style=\"padding: 1rem 1rem;\">\r\n                            <h2 style=\"font-size: 18px;\">Director Details</h2>\r\n                            <mat-divider style=\"width:70px;border-bottom: 7px solid #456EFE;left: 30px; border-radius: 30px;\">\r\n                            </mat-divider>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                    <div fxLayout=\"row wrap\" class=\"top\">\r\n                        <div fxFlex=\"100\">\r\n                            <div fxFlex=\"40\">\r\n                                <!-- <mat-label class=\"hint\">Number of Directors</mat-label><br> -->\r\n                                <!-- <mat-form-field class=\"noOfDirectors\" floatLabel=\"never\"> -->\r\n                                    <mat-form-field appearance=\"outline\">\r\n                                    <mat-label>Number of Directors</mat-label>\r\n                                    <input formControlName=\"noOfDirector\" (keypress)=_keyPress($event) matInput id=\"forNoOfDirectors\"\r\n                                        placeholder=\"Enter no of directors\" (keydown)=\"noOFDirector($event)\" (keyup)=\"noOfDirector($event)\">\r\n                                </mat-form-field>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <fieldset>\r\n                        <legend visible=\"true\">Details Of the Director</legend>\r\n                    </fieldset>\r\n                        \r\n                    <div class=\"top\">\r\n                        <mat-accordion class=\"custom-accordion\">\r\n                            <app-create-director *ngFor=\"let item of items; let i = index\" [item]=\"item\" [index]=\"i\">\r\n                            </app-create-director>\r\n                        </mat-accordion>\r\n                    </div>\r\n                </mat-card>\r\n\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"button\">\r\n        <!-- -->\r\n        <button mat-button class=\"Back\" (click)=\" previous()\" >Back</button>\r\n        <button mat-stroked-button class=\"Next\"\r\n        (click)=\"onSubmit(directorFormGroup.value)\" [disabled]=\"disabledBtn\"  >Next</button>\r\n    </div>\r\n</Form>"],"sourceRoot":"webpack:///"}