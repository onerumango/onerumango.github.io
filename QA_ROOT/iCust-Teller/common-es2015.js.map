{"version":3,"sources":["./src/app/shared/services/finger-print-capture.service.ts"],"names":[],"mappings":"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","file":"common-es2015.js","sourcesContent":["import { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { environment } from 'environments/environment';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\nconst baseUrl = environment.DESKTOP_URL;\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FingerPrintCaptureService {\r\n\r\n  constructor(private http: HttpClient, private snack: MatSnackBar) {\r\n  }\r\n\r\n  userData: BehaviorSubject<any> = new BehaviorSubject<any>('');\r\n  userDataService(data: any) {\r\n    this.userData.next(data);\r\n  }\r\n\r\n  /* NOTE:\r\n  biometric call type: webapi\r\n  lisence: used 60 free trail version\r\n  desc: currently using this service for finger print capturing\r\n   */\r\n  CallingSGIFPGetData(): Observable<any> {\r\n    return this.http.get('http://localhost:8000/SGIFPCapture')\r\n      .pipe(\r\n        tap((result) => {\r\n          console.log('result-->', result)\r\n          return result;\r\n        })\r\n      );\r\n\r\n  }\r\n  handleError(arg0: string, arg1: undefined[]): (err: any, caught: Observable<any>) => import(\"rxjs\").ObservableInput<any> {\r\n    throw new Error('Method not implemented.');\r\n  }\r\n\r\n\r\n  /* NOTE:\r\n  biometric call type: registered device service\r\n  lisence: paid\r\n  desc: currently not using this service\r\n   */\r\n  rdservice() {\r\n    var port;\r\n    var urlStr = '';\r\n    urlStr = 'http://localhost:11100/';\r\n\r\n    this.getJSON_rd(urlStr,\r\n      function (err, data) {\r\n        if (err != null) {\r\n          alert('Something went wrong: ' + err);\r\n        } else {\r\n          alert('Response:-' + String(data));\r\n        }\r\n      }\r\n    );\r\n  }\r\n  getJSON_rd: any = function (url, callback) {\r\n    var xhr = new XMLHttpRequest();\r\n    xhr.open('RDSERVICE', url, true);\r\n    xhr.responseType = 'text';\r\n    xhr.onload = function () {\r\n      var status = xhr.status;\r\n      if (status == 200) {\r\n        callback(null, xhr.response);\r\n      } else {\r\n        callback(status);\r\n      }\r\n    };\r\n    xhr.send();\r\n  };\r\n\r\n  saveBiometric(capFingerPrint, fingerName, cId, screen) {\r\n    return this.http.post<any>(`${baseUrl}/rest/upload/saveOrUpdateBio/${fingerName}/${cId}/${screen}`, capFingerPrint);\r\n  }\r\n\r\n  errorCodeService(errorCode) {\r\n    var error = '';\r\n    if (errorCode == 1) {\r\n      error = 'Creation failed : A driver is missing/not correctly configured';\r\n    }\r\n\r\n    if (errorCode == 3) {\r\n      error = 'Please check again. Either driver is corrupted or Device is not connected';\r\n    }\r\n    if (errorCode == 2) {\r\n      error = 'Function failed ';\r\n    }\r\n\r\n    if (errorCode == 51) {\r\n      error = 'System file load failure';\r\n    }\r\n    if (errorCode == 52) {\r\n      error = 'Sensor chip initialization failed';\r\n    }\r\n    if (errorCode == 53) {\r\n      error = 'Sensor line dropped';\r\n    }\r\n\r\n    if (errorCode == 54) {\r\n      error = 'Timeout/Failed to scan. Clean your fingers and try again';\r\n    }\r\n\r\n    if (errorCode == 103 || errorCode == 104 || errorCode == 106) {\r\n      error = 'Match failed , try again'\r\n    }\r\n\r\n    console.log('error :: ', error);\r\n    this.snack.open(`${error}`, 'OK', {\r\n      duration: 4000,\r\n      verticalPosition: 'top',\r\n      horizontalPosition: 'right'\r\n    });\r\n\r\n  }\r\n\r\n  getCustInfoByFp(page, size, fingerIndex) {\r\n    var params;\r\n\r\n    console.log(`fingerIndex ${fingerIndex} and page ${page}`)\r\n    params = new HttpParams().append('fingerIndex', fingerIndex);//.append('page', page);\r\n\r\n    return this.http.get<any>(`${baseUrl}/rest/upload/getCustomerDataByFp?${params}`);\r\n  }\r\n\r\n  getCustInfoByCustomerId(customerId) {\r\n    var params;\r\n    console.log(`customerId ${customerId}`)\r\n    params = new HttpParams().append('customerId', customerId);\r\n    return this.http.get<any>(`${baseUrl}/rest/upload/getCustomerDataByFp?${params}`);\r\n  }\r\n\r\n  /* To-Do: https api capture */\r\n  CallingSGIFPCapture(): Observable<any> {\r\n    console.log(\" in service \")\r\n    return this.http.get('https://localhost:8443/SGIFPCapture')\r\n      .pipe(\r\n        tap((result) => {\r\n          console.log('result-->', result)\r\n          return result;\r\n        })\r\n      );\r\n  }\r\n\r\n   /* To-Do: https api capture */\r\n   CallingSGIFPMatch(templeData1: any, templeData2: any): Observable<any> {\r\n    var secuLicc = \"ae7VmpMA9ZwEGVYVr1LMWrqjCEx+eFmya9VX0v+vNfQ=\";\r\n    var params = new HttpParams()\r\n      .append('template1', templeData1)\r\n      .append('template2', templeData2)\r\n    //  .append('licstr',secuLicc);\r\n    //  .append('licstr',secuLicc);\r\n    // http://localhost:8000/SGIMatchScore\r\n    return this.http.post(`https://localhost:8443/SGIMatchScore`, params)\r\n      .pipe(\r\n        tap((result) => {\r\n          // console.log('result-->', result)\r\n          return result;\r\n        })\r\n\r\n      );\r\n  }\r\n\r\n}\r\n"],"sourceRoot":"webpack:///"}