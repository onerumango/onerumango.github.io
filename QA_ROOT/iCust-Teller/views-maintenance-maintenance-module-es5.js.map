{"version":3,"sources":["webpack:///src/app/views/maintenance/TransactionDenominationHistory/transaction-denomination-history/transaction-denomination-history.component.ts","webpack:///src/app/views/maintenance/TransactionDenominationHistory/transaction-denomination-history/transaction-denomination-history.component.html","webpack:///src/app/views/maintenance/city-maintenance/city-maintenance.component.ts","webpack:///src/app/views/maintenance/city-maintenance/city-maintenance.component.html","webpack:///src/app/views/maintenance/holiday-maintenance/currency-holiday/currency-holiday.component.ts","webpack:///src/app/views/maintenance/holiday-maintenance/currency-holiday/currency-holiday.component.html","webpack:///src/app/views/maintenance/biller-info-maintenance/add-or-edit-biller-info/add-or-edit-biller-info.component.ts","webpack:///src/app/views/maintenance/biller-info-maintenance/add-or-edit-biller-info/add-or-edit-biller-info.component.html","webpack:///src/app/views/maintenance/till-vault-ccy-bal/till-vault-ccy-popup/till-vault-ccy-popup.component.ts","webpack:///src/app/views/maintenance/till-vault-ccy-bal/till-vault-ccy-popup/till-vault-ccy-popup.component.html","webpack:///src/app/views/maintenance/holiday-maintenance/holiday-maintenance.component.ts","webpack:///src/app/views/maintenance/holiday-maintenance/holiday-maintenance.component.html","webpack:///src/app/views/maintenance/txncharges-maintenance/txncharges-maintenance.component.ts","webpack:///src/app/views/maintenance/txncharges-maintenance/txncharges-maintenance.component.html","webpack:///src/app/views/maintenance/entity-maintenance/add-entity-details/add-entity-details.component.ts","webpack:///src/app/views/maintenance/entity-maintenance/add-entity-details/add-entity-details.component.html","webpack:///src/app/shared/animations/rumango-animations.ts","webpack:///src/app/views/maintenance/holiday-maintenance/branch-holiday/holiday-list-dialog/holiday-list-dialog.component.ts","webpack:///src/app/views/maintenance/holiday-maintenance/branch-holiday/holiday-list-dialog/holiday-list-dialog.component.html","webpack:///src/app/views/maintenance/till-vault-status/till-vault-status-summary/till-vault-status-summary.component.ts","webpack:///src/app/views/maintenance/till-vault-status/till-vault-status-summary/till-vault-status-summary.component.html","webpack:///src/app/views/maintenance/country-state-maintenance/country-state-maintenance.component.ts","webpack:///src/app/views/maintenance/country-state-maintenance/country-state-maintenance.component.html","webpack:///src/app/views/maintenance/bank/bank-list/bank-list.component.ts","webpack:///src/app/views/maintenance/bank/bank-list/bank-list.component.html","webpack:///src/app/views/maintenance/maintenance-home.component.ts","webpack:///src/app/views/maintenance/maintenance-home.component.html","webpack:///src/app/views/maintenance/customer-category/cutomer-category-create/cutomer-category-create.component.ts","webpack:///src/app/views/maintenance/customer-category/cutomer-category-create/cutomer-category-create.component.html","webpack:///src/app/views/maintenance/holiday-maintenance/branch-holiday/common-holiday/common-holiday.component.ts","webpack:///src/app/views/maintenance/holiday-maintenance/branch-holiday/common-holiday/common-holiday.component.html","webpack:///src/app/views/maintenance/base-denomination/base-denomination-summary/base-denomination-summary.component.ts","webpack:///src/app/views/maintenance/base-denomination/base-denomination-summary/base-denomination-summary.component.html","webpack:///src/app/views/maintenance/till-vault-master/till-vault-master-summary/till-vault-master-summary/till-vault-master-summary.component.ts","webpack:///src/app/views/maintenance/till-vault-master/till-vault-master-summary/till-vault-master-summary/till-vault-master-summary.component.html","webpack:///src/app/views/maintenance/transaction-cash-master/txn-cash-master-table-popup/txn-cash-master-table-popup.component.ts","webpack:///src/app/views/maintenance/transaction-cash-master/txn-cash-master-table-popup/txn-cash-master-table-popup.component.html","webpack:///src/app/views/maintenance/holiday-maintenance/clearing-holiday/clearing-holiday.component.ts","webpack:///src/app/views/maintenance/holiday-maintenance/clearing-holiday/clearing-holiday.component.html","webpack:///src/app/views/maintenance/currency-pair-maintenance/add-currency-pair-maintanence/add-currency-pair-maintanence.component.ts","webpack:///src/app/views/maintenance/currency-pair-maintenance/add-currency-pair-maintanence/add-currency-pair-maintanence.component.html","webpack:///src/app/views/maintenance/role-maintenance/role-maintenance.component.ts","webpack:///src/app/views/maintenance/role-maintenance/role-maintenance.component.html","webpack:///src/app/views/maintenance/menus/add-edit-menu-details/add-edit-menu-details.component.ts","webpack:///src/app/views/maintenance/menus/add-edit-menu-details/add-edit-menu-details.component.html","webpack:///src/app/views/maintenance/branch/ngx-table-popup/ngx-table-popup.component.ts","webpack:///src/app/views/maintenance/branch/ngx-table-popup/ngx-table-popup.component.html","webpack:///src/app/views/maintenance/main-home/main-home.component.ts","webpack:///src/app/views/maintenance/main-home/main-home.component.html","webpack:///src/app/views/maintenance/account-type/account-type-crud-table/account-type-crud-table.component.ts","webpack:///src/app/views/maintenance/account-type/account-type-crud-table/account-type-crud-table.component.html","webpack:///src/app/views/maintenance/holiday-maintenance/branch-holiday/add-holiday/add-holiday.component.ts","webpack:///src/app/views/maintenance/holiday-maintenance/branch-holiday/add-holiday/add-holiday.component.html","webpack:///src/app/views/maintenance/customer-category/customer-category.component.ts","webpack:///src/app/views/maintenance/customer-category/customer-category.component.html","webpack:///src/app/views/maintenance/bank/bank-details/bank-details.component.ts","webpack:///src/app/views/maintenance/bank/bank-details/bank-details.component.html","webpack:///src/app/views/maintenance/tillVaultBranchMap/till-vault-branch-map/till-vault-branch-map.component.ts","webpack:///src/app/views/maintenance/tillVaultBranchMap/till-vault-branch-map/till-vault-branch-map.component.html","webpack:///src/app/views/maintenance/currency-maint-summary/currency-maint-summary.component.ts","webpack:///src/app/views/maintenance/currency-maint-summary/currency-maint-summary.component.html","webpack:///src/app/views/maintenance/till-vault-status/till-vault-status/till-vault-status.component.ts","webpack:///src/app/views/maintenance/till-vault-status/till-vault-status/till-vault-status.component.html","webpack:///src/app/views/maintenance/currency-paira-rates-maintenance/add-currency-pair-rates-maintenance/add-currency-pair-rates-maintenance.component.ts","webpack:///src/app/views/maintenance/currency-paira-rates-maintenance/add-currency-pair-rates-maintenance/add-currency-pair-rates-maintenance.component.html","webpack:///src/app/views/maintenance/TransactionDenominationHistory/transaction-denomination-summary/transaction-denomination-summary.component.ts","webpack:///src/app/views/maintenance/TransactionDenominationHistory/transaction-denomination-summary/transaction-denomination-summary.component.html","webpack:///src/app/views/maintenance/user-maintenance/user-maintenance.component.ts","webpack:///src/app/views/maintenance/user-maintenance/user-maintenance.component.html","webpack:///src/app/views/maintenance/main-home/sub-menu/sub-menu.component.ts","webpack:///src/app/views/maintenance/main-home/sub-menu/sub-menu.component.html","webpack:///src/app/views/maintenance/till-vault-master/till-vault-master-popup/till-vault-master-popup/till-vault-master-popup.component.ts","webpack:///src/app/views/maintenance/till-vault-master/till-vault-master-popup/till-vault-master-popup/till-vault-master-popup.component.html","webpack:///src/app/views/maintenance/tillVaultBranchMap/till-vault-branch-map-summary/till-vault-branch-map-summary.component.ts","webpack:///src/app/views/maintenance/tillVaultBranchMap/till-vault-branch-map-summary/till-vault-branch-map-summary.component.html","webpack:///src/app/views/maintenance/role-maintenance-summary/role-maintenance-summary.component.ts","webpack:///src/app/views/maintenance/role-maintenance-summary/role-maintenance-summary.component.html","webpack:///src/app/views/maintenance/transaction-type/transaction-type-crud-table/transaction-type-crud-table.component.ts","webpack:///src/app/views/maintenance/transaction-type/transaction-type-crud-table/transaction-type-crud-table.component.html","webpack:///src/app/views/maintenance/state-maintenance/state-popup/state-popup.component.ts","webpack:///src/app/views/maintenance/state-maintenance/state-popup/state-popup.component.html","webpack:///src/app/views/maintenance/till-vault-config/till-vault-summary/till-vault-summary.component.ts","webpack:///src/app/views/maintenance/till-vault-config/till-vault-summary/till-vault-summary.component.html","webpack:///src/app/shared/pipes/filter.pipe.ts","webpack:///src/app/views/maintenance/txncharges-maintenance/add-txncharges/add-txncharges.component.ts","webpack:///src/app/views/maintenance/txncharges-maintenance/add-txncharges/add-txncharges.component.html","webpack:///src/app/views/maintenance/product-maintenance/product-maintenance.component.ts","webpack:///src/app/views/maintenance/product-maintenance/product-maintenance.component.html","webpack:///src/app/views/maintenance/entity-maintenance/entity-maintenance.component.ts","webpack:///src/app/views/maintenance/entity-maintenance/entity-maintenance.component.html","webpack:///src/app/views/maintenance/holiday-maintenance/branch-holiday/add-branch/add-branch.component.ts","webpack:///src/app/views/maintenance/holiday-maintenance/branch-holiday/add-branch/add-branch.component.html","webpack:///src/app/views/maintenance/transaction-type/transaction-type-table-popup/transaction-type-popup-table/transaction-type-popup-table.component.ts","webpack:///src/app/views/maintenance/transaction-type/transaction-type-table-popup/transaction-type-popup-table/transaction-type-popup-table.component.html","webpack:///src/app/views/maintenance/customer-charge-category/cutomer-charge-category-create/cutomer-charge-category-create.component.ts","webpack:///src/app/views/maintenance/customer-charge-category/cutomer-charge-category-create/cutomer-charge-category-create.component.html","webpack:///src/app/views/maintenance/customer-charge-category/customer-charge-category.component.ts","webpack:///src/app/views/maintenance/customer-charge-category/customer-charge-category.component.html","webpack:///src/app/views/maintenance/account-type/account-type-table-popup/account-type-table-popup.component.ts","webpack:///src/app/views/maintenance/account-type/account-type-table-popup/account-type-table-popup.component.html","webpack:///src/app/views/maintenance/product-maintenance/add-product-maintenance/add-product-maintenance.component.ts","webpack:///src/app/views/maintenance/product-maintenance/add-product-maintenance/add-product-maintenance.component.html","webpack:///src/app/views/maintenance/denominationMaster/demon-master-crud-ngx-table/denom-master-table-popup/denom-master-table-popup.component.ts","webpack:///src/app/views/maintenance/denominationMaster/demon-master-crud-ngx-table/denom-master-table-popup/denom-master-table-popup.component.html","webpack:///src/app/views/maintenance/add-edit-security-policy/add-edit-security-policy.component.ts","webpack:///src/app/views/maintenance/add-edit-security-policy/add-edit-security-policy.component.html","webpack:///src/app/shared/services/send-holiday-screen.service.ts","webpack:///src/app/views/maintenance/state-maintenance/state-maintenance.component.ts","webpack:///src/app/views/maintenance/state-maintenance/state-maintenance.component.html","webpack:///src/app/views/maintenance/user-maintenance/add-user-maintenance/add-user-maintenance.component.ts","webpack:///src/app/views/maintenance/user-maintenance/add-user-maintenance/add-user-maintenance.component.html","webpack:///src/app/views/maintenance/till-vault-config/till-vault-popup/till-vault-popup.component.ts","webpack:///src/app/views/maintenance/till-vault-config/till-vault-popup/till-vault-popup.component.html","webpack:///src/app/views/maintenance/menus/menus.component.ts","webpack:///src/app/views/maintenance/menus/menus.component.html","webpack:///src/app/views/maintenance/menus/menu-details/menu-details.component.ts","webpack:///src/app/views/maintenance/menus/menu-details/menu-details.component.html","webpack:///src/app/views/maintenance/maintenance.module.ts","webpack:///src/app/views/maintenance/till-vault-ccy-demon-bal/till-vault-ccy-demon-bal.component.ts","webpack:///src/app/views/maintenance/till-vault-ccy-demon-bal/till-vault-ccy-demon-bal.component.html","webpack:///src/app/views/maintenance/branch/crud-ngx-table.component.ts","webpack:///src/app/views/maintenance/branch/crud-ngx-table.component.html","webpack:///src/app/views/maintenance/holiday-maintenance/branch-holiday/custom-calender/custom-calender.component.ts","webpack:///src/app/views/maintenance/holiday-maintenance/branch-holiday/custom-calender/custom-calender.component.html","webpack:///src/app/views/maintenance/add-securitypolicy/add-securitypolicy.component.ts","webpack:///src/app/views/maintenance/add-securitypolicy/add-securitypolicy.component.html","webpack:///src/app/views/maintenance/currency-paira-rates-maintenance/currency-paira-rates-maintenance.component.ts","webpack:///src/app/views/maintenance/currency-paira-rates-maintenance/currency-paira-rates-maintenance.component.html","webpack:///src/app/views/maintenance/city-maintenance/add-edit-city/add-edit-city.component.ts","webpack:///src/app/views/maintenance/city-maintenance/add-edit-city/add-edit-city.component.html","webpack:///src/app/views/maintenance/till-vault-ccy-demon-bal/add-tillvault-ccy-demonbal/add-tillvault-ccy-demonbal.component.ts","webpack:///src/app/views/maintenance/till-vault-ccy-demon-bal/add-tillvault-ccy-demonbal/add-tillvault-ccy-demonbal.component.html","webpack:///src/app/views/maintenance/transaction-cash-master/txn-cash-master-crud-table/txn-cash-master-crud-table.component.ts","webpack:///src/app/views/maintenance/transaction-cash-master/txn-cash-master-crud-table/txn-cash-master-crud-table.component.html","webpack:///src/app/views/maintenance/biller-info-maintenance/biller-info-maintenance.component.ts","webpack:///src/app/views/maintenance/biller-info-maintenance/biller-info-maintenance.component.html","webpack:///src/app/views/maintenance/audit-log/audit-log.component.ts","webpack:///src/app/views/maintenance/audit-log/audit-log.component.html","webpack:///src/app/views/maintenance/country-state-maintenance/country-state-popup/country-state-popup.component.ts","webpack:///src/app/views/maintenance/country-state-maintenance/country-state-popup/country-state-popup.component.html","webpack:///src/app/views/maintenance/security-policy/security-policy.component.ts","webpack:///src/app/views/maintenance/security-policy/security-policy.component.html","webpack:///src/app/views/maintenance/currency-maint-summary/add-currency-maint/add-currency-maint.component.ts","webpack:///src/app/views/maintenance/currency-maint-summary/add-currency-maint/add-currency-maint.component.html","webpack:///src/app/views/maintenance/till-vault-ccy-bal-history/till-vault-ccybal-hispopup/till-vault-ccybal-hispopup.component.ts","webpack:///src/app/views/maintenance/till-vault-ccy-bal-history/till-vault-ccybal-hispopup/till-vault-ccybal-hispopup.component.html","webpack:///src/app/views/maintenance/holiday-maintenance/branch-holiday/custom-calendar-arr-type/custom-calendar-arr-type.component.ts","webpack:///src/app/views/maintenance/holiday-maintenance/branch-holiday/custom-calendar-arr-type/custom-calendar-arr-type.component.html","webpack:///src/app/views/maintenance/till-vault-ccy-bal-history/till-vault-ccybal-his-summary/till-vault-ccybal-his-summary.component.ts","webpack:///src/app/views/maintenance/till-vault-ccy-bal-history/till-vault-ccybal-his-summary/till-vault-ccybal-his-summary.component.html","webpack:///src/app/views/maintenance/tillVaultDenomination/till-vault-denomination/till-vault-denomination.component.ts","webpack:///src/app/views/maintenance/tillVaultDenomination/till-vault-denomination/till-vault-denomination.component.html","webpack:///src/app/views/maintenance/maintenance-routing.module.ts","webpack:///src/app/views/maintenance/base-denomination/base-denomination-popup/base-denomination-popup.component.ts","webpack:///src/app/views/maintenance/base-denomination/base-denomination-popup/base-denomination-popup.component.html","webpack:///src/app/views/maintenance/currency-pair-maintenance/currency-pair-maintenance.component.ts","webpack:///src/app/views/maintenance/currency-pair-maintenance/currency-pair-maintenance.component.html","webpack:///src/app/views/maintenance/menus/menu-dialog/menu-dialog.component.ts","webpack:///src/app/views/maintenance/menus/menu-dialog/menu-dialog.component.html","webpack:///src/app/views/maintenance/denominationMaster/demon-master-crud-ngx-table/demon-master-crud-ngx-table.component.ts","webpack:///src/app/views/maintenance/denominationMaster/demon-master-crud-ngx-table/demon-master-crud-ngx-table.component.html","webpack:///src/app/views/maintenance/till-vault-ccy-bal/till-vault-ccy-summry/till-vault-ccy-summry.component.ts","webpack:///src/app/views/maintenance/till-vault-ccy-bal/till-vault-ccy-summry/till-vault-ccy-summry.component.html","webpack:///src/app/views/maintenance/holiday-maintenance/branch-holiday/branch-holiday.component.ts","webpack:///src/app/views/maintenance/holiday-maintenance/branch-holiday/branch-holiday.component.html","webpack:///src/app/views/maintenance/holiday-maintenance/branch-holiday/branch-holiday-popup/branch-holiday-popup.component.ts","webpack:///src/app/views/maintenance/holiday-maintenance/branch-holiday/branch-holiday-popup/branch-holiday-popup.component.html","webpack:///src/app/views/maintenance/tillVaultDenomination/till-vault-denomination-summary/till-vault-denomination-summary.component.ts","webpack:///src/app/views/maintenance/tillVaultDenomination/till-vault-denomination-summary/till-vault-denomination-summary.component.html"],"names":["TransactionDenominationHistoryComponent","data","dialogRef","fb","apiService","countryCurrency","tillId","branchCode","bankCode","DenominationID","payload","id","buildItemForm","currency","till","item","itemForm","group","txtReference","required","txtDate","Date","denomCode","denomUnit","payloadOBJ","value","close","event","pattern","inputChar","String","fromCharCode","charCode","test","preventDefault","submit","alphakeyPress","selector","templateUrl","styleUrls","CityMaintenanceComponent","router","_liveAnnouncer","downloadService","snack","loader","ls","confirmService","dataSource","displayedColumns","filterByOption","key","selectedFilterIndex","loggedInUser","getItem","getAllCity","paginator","sort","open","fetchAllCity","subscribe","i","length","authStatus","recordStatus","userdata","filterBy","e","filterTable","applyFilter","index","filterPredicate","filter","toLocaleLowerCase","includes","filterValue","target","trim","toLowerCase","sortState","direction","announce","console","log","path","files","file","uploadData","FormData","append","uploadExelFile","response","duration","verticalPosition","horizontalPosition","downloadFiles","cityId","navigate","queryParams","city","confirm","message","cityName","res","deleteCity","goBack","onFileChange","downloadRecord","doFilter","addEditCity","announceSortChange","searchVal","CurrencyHolidayComponent","screenService","dialog","entityCode","users","getBrancheHoliday","getItems","getItemSub","unsubscribe","items","holidayScr","next","getCurrencyHolidayInfo","nativeElement","isNew","title","width","disableClose","afterClosed","updateBranchHolidayDetails","getBranchCode","resp","element","deleteCurrencyHoliday","err","status","setItem","isEdit","addNew","commonHoliday","AddOrEditBillerInfoComponent","cdr","dataService","route","readorWrite","queryParamMap","params","get","getBillerInfoById","auditLogData","setAuditLogData","sendClickEvent","userName","getBankCode","getEnityCode","billerMaintenance","billerAccBrn","billerAccount","billerCode","billerName","lastModifiedDate","authBy","authDate","createdBy","createdDate","modifiedBy","noOfModification","oneTimeAuth","version","markForCheck","detectChanges","operation","fire","text","showCancelButton","confirmButtonColor","cancelButtonColor","cancelButtonText","confirmButtonText","then","result","isConfirmed","deleteBillerInfo","updateBiller","form","saveOrUpdateBillerInfo","branchCodeResp","bankCodeResp","push","fetchEntityDetails","entityCodeResp","branch","TillVaultCcyPopupComponent","arrayCurrency","isAuditData","currentUser","entity","setTimeout","CcyBalStatus","JSON","parse","localStorage","undefined","auditData","getCurrency","getTillId","getEntityCode","tillccyBalForm","glAccount","openBalInAcy","openBalInLcy","balInAcy","balInLcy","inp","keyCode","invalid","tillData","find","x","tillVaultCode","saveoftillVaultCurrencyBal","_","removetillVaultCurrencyBal","getAuditLogsForCurrencybal","removeItem","getCurrencyDetails","currencyId","tillOrVault","getTillData","DATA","subtitle","state","url","HolidayMaintenanceComponent","changeDetectorRef","_location","document","getElementById","style","backgroundColor","obs","connect","TxnchargesMaintenanceComponent","doc","head","body","forEach","u","row","chargeAmount","chargeCurrency","txnDate","didDrawCell","prepare","save","uploadTxnChargesFile","getTxnCharge","getTxnChargeDetails","deleteTxnChargesById","uploadtxnCharges","convert","clearFilter","AddEntityDetailsComponent","countries","states","cities","isReadOnly","isView","show","editNow","editEntityById","getCountryName","entityMaintenance","entityName","denomRequired","mobile","compose","telephone","country","pincode","getStateName","getCityName","getAllCountries","countryName","getStateByCountry","stateName","getDropDownValues1","deleteEntity","getAuditLogsForEntity","updateEntityDetails","_keyPress","keyPressAlphanumeric","auditLog","reusable","opacity","transform","delay","scale","y","z","rumangoAnimations","display","HolidayListDialogComponent","formBuilder","myControl","markAsHoliday","options","date","fetchBranchHolidayByCalendarDateDetails","filteredOptions","valueChanges","pipe","_filter","Object","keys","holidayData","addBranchHoliday","calenderYear","description","holidayType","option","setValue","holidayList","action","details","responseDate","format","calenderDate","dateUpdated","setHolidayData","disableSave","goToClose","error","panelClass","onCheckOfMarAsHoiday","saveHoliday","reset","TillVaultStatusSummaryComponent","fetchTillVaultStatusInfoList","toString","fetchTellVaultStatus","getTillVaultStatusById","fetchVaultStatus","stringify","deleteTillVaultStatusById","tillVaultStatusSummery","animations","CountryStateMaintenanceComponent","getAllBranch","deleteCountry","countryStateMaintenance","openPopUp","BankListComponent","getAllBanks","shareBankItem","bankName","deleteBank","bankList","MaintenanceHomeComponent","isSidenavOpen","sideNav","profilePanel","CutomerCategoryCreateComponent","api","entityIsEdit","getCustomerCategoryById","categoryCode","categoryDescription","categoryName","isActive","icon","deleteCustomerCategory","getAuditLogsFortillvaultMaster","saveCustomerCategory","bankC","CommonHolidayComponent","selectedItem","selectedItemRow","disabled","monthArr","newYearArrayany","months","weekdaysInWords","weekdays","monthEnds","viewDate","yearlyCalendarArr","calendarDate","daysFinalArr","calendarArrFinal","confirmRes","daysFinalArrNew","calendarArrFinalNew","selected","yearArr","count","checks","disable","rowChecks","screen","year","month","dayAmount","monthNumsArr","daysArr","daysArrNew","endOffSet","dateOffSet","getDay","calenderArr","fillInMonth","currentMonth","getMonth","currentMonthDate","getFullYear","fillInYear","j","k","i1","i2","col","checked","findIndex","buildCalenderArr","rowIdx","isRowChecked","calendar","colIdx","colChecked","rowChecked","dateValue","d","splice","indexOf","dateSample","v","thirdCalenderArray","assignFormValue","BaseDenominationSummaryComponent","baseDenomDetails","getDenomInfoList","baseDenominationId","denomination","isNaN","removeBaseDenominationById","getDenomId","getDenomInfoById","fetchBaseDenomValue","baseDenominationMaintenance","TillVaultMasterSummaryComponent","getTillVaultMaster","tillVaultVal","tillVaultMasterValues","bnkCode","getTillVaultById","fetchTillVault","sendNavParam","deleteTillVaultMaster","masterpdf","TxnCashMasterTablePopupComponent","txnproductArr","TrxnCashStatus","txnCashMasterForm","txnProduct","txnReference","account","accCurrency","accBalance","instrument","txnCurrency","txnAmount","ofsCurrency","ofsAmount","forexRate","forexNegoRate","remarks","loggedInuser","currencyCode","deleteTxnCashMaster","getAuditLogsForTransactionCashMaster","convertDate","controls","upsertTxnCashMaster","ClearingHolidayComponent","http","getBranchHolidayInfo","getClearingHoliday","loading","deleteClearingHoliday","getClearingHolidayInfo","AddCurrencyPairMaintanenceComponent","currencies","entityCodeArr","getEntityDropdown","getBranchCurrency","getCurrencyPairById","branchForm","currency1","currency2","throughCurrency","rateDirect","spreadAdder","saveCurrencyPair","deleteCurrencyPair","getAuditLogsForCurrencyPair","RoleMaintenanceComponent","selectAllChecked","hideSelect","isDisable","screenName","editFlag","enableFinish","selectedCheckbox","getarr","permissions","childarr","childPer","parentSelector","checkedcheckbox","tellerRoleName","allRoles","isSelectedAll","getScreenPermissions","fetchRoleById","selectedrole","testvar","roleTab","getPermissionInfo","permissionInfo","permissionId","screenId","screenInfo","tabInfo","tabData","tabId","roleInfo","tabSelection","tabName","toUpperCase","childPermission","roleName","fetchScreenPermissions","fetchRolePermissionByTabID","$event","isChecked","roleScreenList","map","roleForm","array","createPermissionFields","roleId","selectAllRole","roleDesc","checkbox","tabIndex","selectedItemLength","role","selectedTabId","roleObj","parentPermission","saveRole","getAuditLogsForRoleMaintenance","name","selectAllreturn","deleteRole","selectAll","AddEditMenuDetailsComponent","menuIsEdit","buildMenuForm","getParentMenus","menuDetailsForm","screenCode","parentId","routing","getMaintenanceParentMenu","parentMenus","upsertMenu","NgxTablePopupComponent","banks","getBranchById","getAuthBankDetails","branchCcy","branchDetails","branchName","address1","address2","getBankCode1","_list","which","getBankInfoByEntityCode","fetchAuthBankInfo","bankDetails","updateBranchDetails","deleteBranch","getAuditLogsForBranch","bank","value1","shortName","MainHomeComponent","jwtService","filteredStatus","maintenanceMenus","compPermissions","getMainMenus","user","getUser","fetchTellerProfileInfo","userId","disconnect","sortedusers","a","b","nameA","nameB","getMaintenanceMenu","alpha","AccountTypeCrudTableComponent","accountTypeName","fetchAccountTypeInfo","deleteAccountType","accountTypeId","accountTypeMaintenance","AddHolidayComponent","icBranchHolidayModel","resetFormSubject","checkNoChanges","loadData","editeditBranchHoliday","dateList","holidayModelResp","editCurrencyHoliday","getCurrencyCode","back","params1","findByCalenderYearAndEntityCodeAndBankCodeAndBranchCode","holidayModel","addBranchHolidayFormData","findByCalenderYearAndEntityCodeAndBankCodeAndCurrencyCode","upsertCurrencyHolidayDetails","getAuditLogsForHolidayBranch","getAuditLogsForCurrencyBranch","fetchCurrencyMaintDetails","currencyResp","entityC","doSomething","CustomerCategoryComponent","getCustomerCategory","cutomerCategoryMasterValues","fetchcutomerCategory","BankDetailsComponent","bankItem","isAllSameDigitVal","getBankItem","buildBankForm","bankForm","bankCurrency","defaultLanguage","headOfficeBrn","swiftCode","getAuditLogsForBank","createOrUpdateBank","number","_keyPressForAlphabets","_keyPress1","isAllSameDigit","TillVaultBranchMapComponent","vault","authEntityCode","vaultItem","getParentVault","tillVaultBranchMapForm","locked","parentVaultId","shortOvgGl","deleteTellerVaultBrnMap","getAuditLogsFortillvaulmap","vaultData","saveTellerVaultBranchMap","CurrencyMaintSummaryComponent","filteredDdata","deleteCurrencyMaint","currencyMaintenance","TillVaultStatusComponent","vaultStatus","tillVaultStatusDetails","tillVaultForm","minLength","maxLength","tillVaultStatus","tvOpenTime","tvClosingTime","getAuditLogsFortillvaultStatus","openTime","closeTime","upsertTillVaultStatus","AddCurrencyPairRatesMaintenanceComponent","minDate","currencyPair","currencyPairRateIsEdit","getCurrencyPairRatesById","fetchCurrencyPair","rateDate","currencyPairId","rateType","rateSeq","buySpread","sellSpread","midRate","buyRate","sellRate","startDate","saveCurrencyPairRates","pairRateId","updateAuditLogsForCurrencyPairRates","getCurrencyPair","TransactionDenominationSummaryComponent","getTransactionDenomination","saveoftransDenom","deleteTransactionDenomination","getCountryValues","UserMaintenanceComponent","fetchUserInfo","getUserInfo","deleteUserById","SubMenuComponent","getMenus","submenus","TillVaultMasterPopupComponent","tillVaultDesc","primaryVault","saveTillVaultMaster","TillVaultBranchMapSummaryComponent","uploadFile","getTellVaultBranchMap","arr","autoTable","theme","output","fetchTellVaultBranchMap","getTellerVaultBranchMap","fetchTellerVaultBranchMap","fetchBrnMap","tillVaultBranchMaping","RoleMaintenanceSummaryComponent","fetchRoleSummary","currencyPairMaintValues","TransactionTypeCrudTableComponent","fetchTransactionTypeInfo","upsertTransactionType","transactionTypeCode","deleteTransactionType","transactionTypeId","StatePopupComponent","showLoader","isStatecode","isStatecode2","countryId","countryIsEdit","selectedCountryCode","getCountryById","countryIdentity","getStateById","isStateCodePresent","respo","isStateCode2Present","deleteState","getAuditLogsForState","stateMaintenance","upsertStateDetails","countryCode","stateCode","stateCode2","stateNumCode","isStatePresent","TillVaultSummaryComponent","getTillVaultConfigUpload","getvaultConfiguration","gettillVaultResp","getTillVaultConfigById","removetillVaultConfig","fetchtillVaultConfigById","fetchVaultConfig","uploadtillvaultconfig","tillVaultConfiguration","isArray","Array","FilterPipe","search","entries","obj","some","AddTxnchargesComponent","chargeCurrencyArr","addTxnChargesForm","chargeDesc","getCountrynameValues","getTxnChargesById","getAuditLogsForTransactioncharge","parseInt","updateTxnChargeDetails","ProductMaintenanceComponent","getProductInfo","getProductDetails","productName","deleteProductById","EntityMaintenanceComponent","userData","entityMaintenancePage","AddBranchComponent","bankCodeArr","branchCodeArr","BranchHolidayForm","transactionDate","now","dateStringWithTime","convertedyear","slice","convertMonth","conv1Month","convertCalender","conv1Calender","calenderMonth","TransactionTypePopupTableComponent","transactionTypeName","transactionTypeDescription","CutomerChargeCategoryCreateComponent","getCustomerChargeCategoryById","chargeCategory","deleteCustomerChargeCategory","saveCustomerChargeCategory","CustomerChargeCategoryComponent","getCustomerChargeCategory","AccountTypeTablePopupComponent","fetchAccountTypeById","accTypeStatus","accountTypeDescription","creatorId","getAuditLogsForAccountType","upsertAccountType","AddProductMaintenanceComponent","isProductCode","addProductForm","productCode","getProductById","getAuditLogsForProductMaintenance","updateProductDetails","isProductCodePresent","DenomMasterTablePopupComponent","patternValidation","denomMasterStatus","getCurrencyValue","denomDesc","denomValue","saveDenomMaster","deleteDenomMaster","getAuditLogsForDenominationMaster","AddEditSecurityPolicyComponent","buildForm","fetchSecurityPolicy","securityForm","activeEdit","maxInvLogins","maxPswdLength","minPswdLength","modifiedTime","notifyPasswordExpiryInDays","firstTimeAuth","pswdComplexLcase","pswdComplexNum","pswdComplexSplc","pswdComplexUcase","pswdExpiry","pswdReuseAft","passwordGenerationType","upsertSecurityPolicy","getAuditLogsSecurityPolicy","SendHolidayScreenService","providedIn","StateMaintenanceComponent","demoData","getAllState","AddUserMaintenanceComponent","spinner","isPassword","hide","getRoleId","buildUserForm","getUserId","userMaintenance","encryptedPassword","fetchAuthrorizedRoleInfo","RoleInfo","email","firstName","lastName","language","password","UserName","toLocaleUpperCase","upsertUserMaintenance","getAuditLogsForUserMaintenance","onInput","onToggle","TillVaultPopupComponent","vaultConfig","val","minCashHoldingValue","maxCashHolding","control","min","minCashHolding","saveoftillVaultConfig","getAuditLogsFortillvaultconfig","MenusComponent","getAllNavs","menus","changeNav","deleteMenu","openDialogue","MenuDetailsComponent","dialogue","getParentMenu","currentNav","isEmpty","navItem","editMenuMaintenance","menuForm","prop","prototype","hasOwnProperty","call","getAuditLogsForMenu","setchildMenuDetails","parenId","MaintenanceModule","forChild","declarations","imports","TillVaultCcyDemonBalComponent","getTillVaultDetails","fetchTillVaultCcyDemonBal","deleteTillVaultCcyDemonById","CrudNgxTableComponent","getBranches","branchMaintenance","CustomCalenderComponent","onDatePicked","emit","getDate","changes","V","K","tempMonthArr","dateFromForm","dateAlreadyActive","position","right","hasBackdrop","AddSecuritypolicyComponent","CurrencyPairaRatesMaintenanceComponent","getCurrencyPairRates","currencyPairRatesInfo","fetchCurrencyPairRates","deleteCurrencyPairRates","AddEditCityComponent","getCityById","buildCityForm","cityMaintenance","pinCode","countryArr","stateArr","upsertCities","AddTillvaultCcyDemonbalComponent","denom","tillVaultCcyDenomBal","addTillVaultCcyForm","openUnitsBal","unitsBal","idtvcId","getTillVaultCcyDemonById","getDenomCode","tvcId","updateTillVaultCcyDemonBalDetails","getAuditLogsForTillVaultCcyDenomBal","fetchDenomMasterAuthRecs","TxnCashMasterCrudTableComponent","fetchTxnCashMasterInfo","getTxnCashMasterById","fetchTxnCashMasterById","fetchTrxnCashStatus","txnCashMaster","BillerInfoMaintenanceComponent","fetchBillerInfo","getAllBillerInfoId","billerInfo","AuditLogComponent","auditLogDataObject","getClickEvent","getAuditLogData","CountryStatePopupComponent","countryCodeList","isCountrycode","isCountrycode2","allCountryCode","countryMaintenance","countryIsoCode2","numericCode","ibanCheckReqd","blacklisted","region","isdCode","upsertCountryDetails","isCountryCodePresent","isCountryCode2Present","SelectedCountryCode","iso2","isCountryPresent","iso3","phonecode","getAuditLogsForCountry","Onlynumber","SecurityPolicyComponent","recordExist","Record","deleteSecurityPolicy","getSecurityPolicyDetails","AddCurrencyMaintComponent","currencyMaintIsEdit","editCurrencyMaintById","currencyMaint","currencyName","isoCcyCode","upsertCurrencyMaintDetails","updateAuditLogForCurrencyMaint","TillVaultCcybalHispopupComponent","ccybalHistoryForm","tellerId","alhanumericValidation","numericValidation","CustomCalendarArrTypeComponent","monthArrIndex","currentMonthYear","updateCalendar","newDate","iV","iK","iV1","iK1","cV","cK","cV1","cK1","dateValue1","d1","currentDate","getHolidayData","TillVaultCcybalHisSummaryComponent","getvaulCurrencyBalHistory","saveoftillVaultCurrencyBalHistory","removetillVaultCurrencyBalHistory","gettillCurrencyBalHistoryResp","TillVaultDenominationComponent","units","saveTellerVaultDenomination","deleteTellerVaultDenomination","getAuditLogsFortillvaultdenomination","maintenanceRoutes","component","children","redirectTo","pathMatch","breadcrumb","BaseDenominationPopupComponent","baseDenomStatus","baseDenomForm","getAuditLogsForBaseDenomination","saveBaseDenomination","CurrencyPairMaintenanceComponent","currencyPairInfo","MenuDialogComponent","getchildMenuDetails","DemonMasterCrudNgxTableComponent","denomvalues","getDenomMaster","allCountryValues","currencyValues","getDenomMasterId","fetchDenomMasterById","fetchdenomValue","uploadCollateralType","denominationMaster","TillVaultCcySummryComponent","getvaulCurrencyBal","getCurrencyBalId","fetchCcyBalValue","fetchCurrencyBalId","gettillCurrencyBalResp","tillVaultCurrrencyBalance","BranchHolidayComponent","addBranch","BranchHolidayPopupComponent","branchHolidayDetails","holidaypopupForm","TillVaultDenominationSummaryComponent","getTellVaultDenomination","fetchTellVaultDenomination","getTellerVaultDenomination","getTellerVaultDenomById","fetchVaultDenom","tillVaultDenomination"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAWaA,uC;AAQX,yDACkCC,IADlC,EAESC,SAFT,EAGUC,EAHV,EAIUC,UAJV,EAIgC;AAAA;;AAHE,eAAAH,IAAA,GAAAA,IAAA;AACzB,eAAAC,SAAA,GAAAA,SAAA;AACC,eAAAC,EAAA,GAAAA,EAAA;AACA,eAAAC,UAAA,GAAAA,UAAA;AATV,eAAAC,eAAA,GAAuB,EAAvB;AACA,eAAAC,MAAA,GAAgB,EAAhB;AACA,eAAAC,UAAA,GAAoB,EAApB;AACA,eAAAC,QAAA,GAAkB,EAAlB;AAOK;;;;iBAEL,oBAAW;AACT,iBAAKC,cAAL,GAAsB,KAAKR,IAAL,CAAUS,OAAV,GAAmB,KAAKT,IAAL,CAAUS,OAAV,CAAkBC,EAArC,GAAyC,IAA/D;AACA,iBAAKC,aAAL,CAAmB,KAAKX,IAAL,CAAUS,OAA7B;AACA,iBAAKL,eAAL,GAAqB,KAAKJ,IAAL,CAAUY,QAA/B;AACA,iBAAKP,MAAL,GAAY,KAAKL,IAAL,CAAUa,IAAtB;AACA,iBAAKP,UAAL,GAAgB,KAAKN,IAAL,CAAUM,UAA1B;AACA,iBAAKC,QAAL,GAAc,KAAKP,IAAL,CAAUO,QAAxB;AACD;;;iBACD,uBAAcO,IAAd,EAAoB;AAClB,iBAAKC,QAAL,GAAgB,KAAKb,EAAL,CAAQc,KAAR,CAAc;AAC5BC,0BAAY,EAAG,CAACH,IAAI,CAACG,YAAL,IAAqB,EAAtB,EAA0B,0DAAWC,QAArC,CADa;AAE5BC,qBAAO,EAAG,CAAC,IAAIC,IAAJ,CAASN,IAAI,CAACK,OAAd,KAA0B,EAA3B,EAA+B,0DAAWD,QAA1C,CAFkB;AAG5BG,uBAAS,EAAE,CAACP,IAAI,CAACO,SAAL,IAAkB,EAAnB,EAAuB,0DAAWH,QAAlC,CAHiB;AAI5BI,uBAAS,EAAE,CAACR,IAAI,CAACQ,SAAL,IAAkB,EAAnB,EAAuB,0DAAWJ,QAAlC;AAJiB,aAAd,CAAhB;AAOD;;;iBAED,kBAAS;AACP,gBAAIK,UAAU,GAAQ,EAAtB;AACAA,sBAAU,GAAG,KAAKR,QAAL,CAAcS,KAA3B;AACAD,sBAAU,CAACb,EAAX,GAAgB,KAAKF,cAArB;AACA,iBAAKP,SAAL,CAAewB,KAAf,CAAqB,KAAKV,QAAL,CAAcS,KAAnC;AAGD;;;iBAED,uBAAcE,KAAd,EAA0B;AACxB,gBAAMC,OAAO,GAAG,aAAhB;AACA,gBAAIC,SAAS,GAAGC,MAAM,CAACC,YAAP,CAAoBJ,KAAK,CAACK,QAA1B,CAAhB;;AACA,gBAAI,CAACJ,OAAO,CAACK,IAAR,CAAaJ,SAAb,CAAL,EAA8B;AAC5BF,mBAAK,CAACO,cAAN;AACD;AACF;;;;;;;yBAhDUlC,uC,EAAuC,gEASxC,wEATwC,C,EASzB,sI,EAAA,2H,EAAA,2I;AAAA,O;;;cATdA,uC;AAAuC,6D;AAAA,iB;AAAA,gB;AAAA,u0B;AAAA;AAAA;ACXpD;;AAAmB;;AAAc;;AACjC;;AAA6B;AAAA,qBAAY,IAAAmC,MAAA,EAAZ;AAAoB,aAApB;;AAC3B;;AACE;;AACI;;AACE;;AAEF;;AACF;;AAEA;;AACM;;AACA;;AAAW;;AAAgB;;AAC3B;;AACA;;AACE;;AAAkC;;AAAmB;;AACvD;;AACA;;AACF;;AACJ;;AAEF;;AACE;;AACE;;AAAgD;AAAA,qBAAW,IAAAC,aAAA,QAAX;AAAgC,aAAhC;;AAAhD;;AAGF;;AACF;;AAEA;;AACE;;AACE;;AACF;;AACF;;AACA;;AACE;;AAA2F;;AAAW;;AACtG;;AACA;;AAA8C;AAAA,qBAAS,IAAAlC,SAAA,OAAgB,KAAhB,CAAT;AAA+B,aAA/B;;AAAiC;;AAAM;;AACvF;;AACF;;AACF;;;;;;AAxCmB;;AAAA;;AACb;;AAAA;;AAImD;;AAAA;;AAQ5B;;AAAA,sHAA4C,eAA5C,EAA4C,GAA5C;;AACgB;;AAAA;;AAUpC;;AAAA;;AAOkD;;AAAA;;AAIX;;AAAA;;AAAiD;;AAAA;;;;;;;;;wEDxBpFF,uC,EAAuC;gBALnD,uDAKmD;iBALzC;AACTqC,oBAAQ,EAAE,sCADD;AAETC,uBAAW,EAAE,mDAFJ;AAGTC,qBAAS,EAAE,CAAC,mDAAD;AAHF,W;AAKyC,U;;;;oBAS/C,oD;qBAAO,wE;;;;;;;;;;;;;;;;;;;;;;;;;;;AEpmDY;;AACE;;AACF;;;;;;AAFwE;;AACtE;;AAAA;;;;;;;;AAYR;;AACE;;AAA4C;AAAA;;AAAA;;AAAA;AAAA;;AAAwB;;AACpE;;AACF;;;;;;AAYE;;AAAiG;;AACjG;;;;;;AACA;;AAAqC;;AAAwB;;;;;;AAAxB;;AAAA;;;;;;AAIrC;;AAAiG;;AACjG;;;;;;AACA;;AAAqC;;AAAwB;;;;;;AAAxB;;AAAA;;;;;;AAIrC;;AAA+F;;AAC/F;;;;;;AACA;;AAAqC;;AAAsB;;;;;;AAAtB;;AAAA;;;;;;AAIrC;;AAA+F;;AAC/F;;;;;;AACA;;AAAqC;;AAAsB;;;;;;AAAtB;;AAAA;;;;;;AAGrC;;AAA8F;;AAC9F;;;;;;AACA;;AAAqC;;AAAqB;;;;;;AAArB;;AAAA;;;;;;AAGrC;;AAA6F;;AAC7F;;;;;;AACA;;AAAqC;;AAAoB;;;;;;AAApB;;AAAA;;;;;;AAIrC;;AAAgG;;AAChG;;;;;;AACA;;AAAqC;;AAAuB;;;;;;AAAvB;;AAAA;;;;;;AAGrC;;AAAkG;;AAClG;;;;;;AACA;;AAAqC;;AAAyB;;;;;;AAAzB;;AAAA;;;;;;AAGrC;;AAAmC;;AAAM;;;;;;;;AACzC;;AACE;;AACE;;AAAgD;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAkC;;AAAI;;AACxF;;AAAM;;AACN;;AACE;;AACE;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA8B;;AAAM;;AACxC;;AACF;;;;;;AAHsD;;AAAA;;;;;;AAMxD;;;;;;AACA;;;;;;;;UDtHOC,wB;AAgBX,0CACUC,MADV,EAEUrC,UAFV,EAGUsC,cAHV,EAIUC,eAJV,EAKUC,KALV,EAMUC,MANV,EAOUC,EAPV,EAQUC,cARV,EAQ2C;AAAA;;AAPjC,eAAAN,MAAA,GAAAA,MAAA;AACA,eAAArC,UAAA,GAAAA,UAAA;AACA,eAAAsC,cAAA,GAAAA,cAAA;AACA,eAAAC,eAAA,GAAAA,eAAA;AACA,eAAAC,KAAA,GAAAA,KAAA;AACA,eAAAC,MAAA,GAAAA,MAAA;AACA,eAAAC,EAAA,GAAAA,EAAA;AACA,eAAAC,cAAA,GAAAA,cAAA;AAvBV,eAAAC,UAAA,GAAa,IAAI,0EAAJ,EAAb;AAKA,eAAAC,gBAAA,GAA6B,CAAC,aAAD,EAAgB,aAAhB,EAA+B,WAA/B,EAA4C,WAA5C,EAAyD,UAAzD,EAAqE,SAArE,EAAgF,YAAhF,EAA8F,cAA9F,EAA8G,QAA9G,CAA7B;AACA,eAAAC,cAAA,GAAmD,CACjD;AAAEC,eAAG,EAAE,aAAP;AAAsB1B,iBAAK,EAAE;AAA7B,WADiD,EAEjD;AAAE0B,eAAG,EAAE,aAAP;AAAsB1B,iBAAK,EAAE;AAA7B,WAFiD,EAGjD;AAAE0B,eAAG,EAAE,WAAP;AAAoB1B,iBAAK,EAAE;AAA3B,WAHiD,EAIjD;AAAE0B,eAAG,EAAE,WAAP;AAAoB1B,iBAAK,EAAE;AAA3B,WAJiD,EAKjD;AAAE0B,eAAG,EAAE,UAAP;AAAmB1B,iBAAK,EAAE;AAA1B,WALiD,CAAnD;AAOA,eAAA2B,mBAAA,GAA8B,CAA9B;AAYK;;;;iBAEL,oBAAQ;AACN,iBAAKC,YAAL,GAAoB,KAAKP,EAAL,CAAQQ,OAAR,CAAgB,YAAhB,CAApB;AACA,iBAAKC,UAAL;AACD;;;iBACD,2BAAkB;AAChB,iBAAKP,UAAL,CAAgBQ,SAAhB,GAA4B,KAAKA,SAAjC;AACA,iBAAKR,UAAL,CAAgBS,IAAhB,GAAuB,KAAKA,IAA5B;AACD;;;iBACD,sBAAa;AAAA;;AACX,iBAAKZ,MAAL,CAAYa,IAAZ;AACA,iBAAKtD,UAAL,CAAgBuD,YAAhB,GAA+BC,SAA/B,CAAyC,UAAA3D,IAAI,EAAI;AAC/C,mBAAI,CAAC4C,MAAL,CAAYnB,KAAZ;;AACA,mBAAK,IAAImC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG5D,IAAI,CAAC6D,MAAzB,EAAiCD,CAAC,EAAlC,EAAsC;AACpC,oBAAI5D,IAAI,CAAC4D,CAAD,CAAJ,CAAQE,UAAR,IAAsB,GAA1B,EAA+B;AAC7B9D,sBAAI,CAAC4D,CAAD,CAAJ,CAAQE,UAAR,GAAqB,cAArB;AACD;;AACD,oBAAI9D,IAAI,CAAC4D,CAAD,CAAJ,CAAQE,UAAR,IAAsB,GAA1B,EAA+B;AAC7B9D,sBAAI,CAAC4D,CAAD,CAAJ,CAAQE,UAAR,GAAqB,YAArB;AACD;;AACD,oBAAI9D,IAAI,CAAC4D,CAAD,CAAJ,CAAQG,YAAR,IAAwB,GAA5B,EAAiC;AAC/B/D,sBAAI,CAAC4D,CAAD,CAAJ,CAAQG,YAAR,GAAuB,MAAvB;AACD;;AACD,oBAAI/D,IAAI,CAAC4D,CAAD,CAAJ,CAAQG,YAAR,IAAwB,GAA5B,EAAiC;AAC/B/D,sBAAI,CAAC4D,CAAD,CAAJ,CAAQG,YAAR,GAAuB,QAAvB;AACD;AACF;;AACD,mBAAI,CAAChB,UAAL,GAAkB,IAAI,0EAAJ,CAAuB/C,IAAvB,CAAlB;AACA,mBAAI,CAAC+C,UAAL,CAAgBQ,SAAhB,GAA4B,KAAI,CAACA,SAAjC;AACA,mBAAI,CAACR,UAAL,CAAgBS,IAAhB,GAAuB,KAAI,CAACA,IAA5B;AACA,mBAAI,CAACQ,QAAL,GAAgBhE,IAAhB;AACD,aApBD;AAsBD;;;iBACD,kBAASiE,QAAT,EAAmBC,CAAnB,EAAsB;AACpB,iBAAKC,WAAL,CAAiBF,QAAjB;AACA,iBAAKG,WAAL,CAAiBF,CAAjB;AACD;;;iBACD,sBAAaG,KAAb,EAAoBvD,IAApB,EAA0B;AACxB,mBAAOA,IAAI,CAACoC,GAAZ;AACD;;;iBACD,qBAAYe,QAAZ,EAAsB;AACpB,iBAAKlB,UAAL,CAAgBuB,eAAhB,GAAkC,UAACtE,IAAD,EAAYuE,MAAZ,EAAwC;;;AACxE,qBAAQ,CAAD,KACLvE,IAAI,CAACiE,QAAD,CADE,MACQ,IADR,IACQ,aADR,GACQ,MADR,GACQ,GAAEO,iBAAF,GAAsBC,QAAtB,CAA+BF,MAA/B,CADhB;AAGD,aAJD;AAKD;;;iBACD,qBAAY7C,KAAZ,EAA0B;AACxB,gBAAMgD,WAAW,GAAIhD,KAAK,CAACiD,MAAN,CAAkCnD,KAAvD;AACA,iBAAKuB,UAAL,CAAgBwB,MAAhB,GAAyBG,WAAW,CAACE,IAAZ,GAAmBC,WAAnB,EAAzB;AACD;;;iBACD,4BAAmBC,SAAnB,EAAoC;AAClC,gBAAIA,SAAS,CAACC,SAAd,EAAyB;AACvB,mBAAKtC,cAAL,CAAoBuC,QAApB,kBAAuCF,SAAS,CAACC,SAAjD;AACD,aAFD,MAEO;AACL,mBAAKtC,cAAL,CAAoBuC,QAApB,CAA6B,iBAA7B;AACD;AACF;;;iBACD,sBAAatD,KAAb,EAAoB;AAAA;;AAClBuD,mBAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBxD,KAAK,CAACyD,IAAN,CAAW,CAAX,EAAcC,KAAd,CAAoB,CAApB,CAArB;AACA,gBAAMC,IAAI,GAAS3D,KAAK,CAACyD,IAAN,CAAW,CAAX,EAAcC,KAAd,CAAoB,CAApB,CAAnB;AACA,gBAAME,UAAU,GAAG,IAAIC,QAAJ,EAAnB;AACAD,sBAAU,CAACE,MAAX,CAAkB,YAAlB,EAAgC,cAAhC;AACAF,sBAAU,CAACE,MAAX,CAAkB,MAAlB,EAA0BH,IAA1B;AACA,iBAAKlF,UAAL,CAAgBsF,cAAhB,CAA+BH,UAA/B,EAA2C3B,SAA3C,CAAqD,UAAC+B,QAAD,EAAc;AACjE,oBAAI,CAAC/C,KAAL,CAAWc,IAAX,+BAA8C,IAA9C,EAAoD;AAClDkC,wBAAQ,EAAE,IADwC;AAElDC,gCAAgB,EAAE,KAFgC;AAGlDC,kCAAkB,EAAE;AAH8B,eAApD;AAKD,aAND;AAOD;;;iBAED,0BAAiB;AACf,iBAAKnD,eAAL,CAAqBoD,aAArB,CAAmC,iBAAnC,EAAsD,KAAK9B,QAA3D;AACD;;;iBACD,qBAAY+B,MAAZ,EAAqB;AACnB,gBAAIA,MAAJ,EAAY;AACV,mBAAKvD,MAAL,CAAYwD,QAAZ,CAAqB,iCAArB,EAAwD;AAAEC,2BAAW,EAAE;AAAEF,wBAAM,EAAEA;AAAV;AAAf,eAAxD;AACD,aAFD,MAGK;AACH,mBAAKvD,MAAL,CAAYwD,QAAZ,CAAqB,iCAArB;AACD;AAEF;;;iBACD,oBAAWE,IAAX,EAAiB;AAAA;;AACf,iBAAKpD,cAAL,CAAoBqD,OAApB,CAA4B;AAAEC,qBAAO,6CAAsCF,IAAI,CAACG,QAA3C;AAAT,aAA5B,EACG1C,SADH,CACa,UAAC2C,GAAD,EAAS;AAClBrB,qBAAO,CAACC,GAAR,CAAY,KAAZ;;AACA,kBAAIoB,GAAJ,EAAS;AACP,sBAAI,CAACnG,UAAL,CAAgBoG,UAAhB,CAA2BL,IAAI,CAACxF,EAAhC,EACGiD,SADH,CACa,UAAC2C,GAAD,EAAc;AACvBrB,yBAAO,CAACC,GAAR,CAAYoB,GAAZ;;AACA,sBAAIA,GAAJ,EAAS;AACP,0BAAI,CAAC3D,KAAL,CAAWc,IAAX,CAAgB,6BAAhB,EAA+C,IAA/C,EAAqD;AACnDkC,8BAAQ,EAAE,IADyC;AAEnDC,sCAAgB,EAAE,KAFiC;AAGnDC,wCAAkB,EAAE;AAH+B,qBAArD;AAKD;;AACD,wBAAI,CAACvC,UAAL;AACD,iBAXH;AAYD;AAEF,aAlBH;AAmBD;;;iBACD,kBAAS;AACP,iBAAKd,MAAL,CAAYwD,QAAZ,CAAqB,qBAArB;AACD;;;;;;;yBAxIUzD,wB,EAAwB,uH,EAAA,2I,EAAA,gI,EAAA,sJ,EAAA,wI,EAAA,mK,EAAA,2J,EAAA,sK;AAAA,O;;;cAAxBA,wB;AAAwB,6C;AAAA;AAAA;;;sEAGxB,8D,EAAO,I;;sEACP,wE,EAAY,I;;;;;;;;;;;;;;;;;;ACtBzB;;AAAsB;;AAA0B;;AAA8C;;AAAQ;;AACtG;;AACE;;AAAwB;AAAA,qBAAS,IAAAiE,MAAA,EAAT;AAAiB,aAAjB;;AACtB;;AAAU;;AAAU;;AACtB;;AACA;;AACE;;AACF;;AACF;;AAEA;;AACE;;AACE;;AACE;;AACE;;AACE;;AACE;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AAEF;;AACF;;AACF;;AACA;;AACA;;AACE;;AAAU;;AAAS;;AACrB;;AACA;;AACE;;AACE;;AAAoC;;AAAM;;AAC1C;;AAE0B;AAAA,qBAAU,IAAAC,YAAA,QAAV;AAA8B,aAA9B;;AAF1B;;AAGF;;AACA;;AAAQ;AAAA,qBAAS,IAAAC,cAAA,EAAT;AAAyB,aAAzB;;AACN;;AAAM;;AAAQ;;AAChB;;AACF;;AACF;;AAAM;;AACN;;AACE;;AACE;;AACE;;AACE;;AAAW;;AAAS;;AACpB;;AAAsC;AAAA;AAAA;;AAEpC;;AAAsB;;AAAM;;AAC5B;;AAGF;;AACF;;AACF;;AACA;;AACE;;AACE;;AAAW;;AAAM;;AACjB;;AAA2B;AAAA;;AAAA;;AAAA,qBAAS,IAAAC,QAAA,mBAAT;AAAwC,aAAxC;;AAA3B;;AACA;;AAAoB;;AAAM;;AAC5B;;AACF;;AACA;;AAIA;;AACE;;AAA0D;AAAA,qBAAS,IAAAC,WAAA,EAAT;AAAsB,aAAtB;;AAAwB;;AAClF;;AACF;;AAEF;;AACF;;AACA;;AACE;;AAA4D;AAAA,qBAAiB,IAAAC,kBAAA,QAAjB;AAA2C,aAA3C;;AAE1D;;AACE;;AAEA;;AACF;;AAEA;;AACE;;AAEA;;AACF;;AAEA;;AACE;;AAEA;;AACF;;AAEA;;AACE;;AAEA;;AACF;;AACA;;AACE;;AAEA;;AACF;;AACA;;AACE;;AAEA;;AACF;;AAEA;;AACE;;AAEA;;AACF;;AACA;;AACE;;AAEA;;AACF;;AACA;;AACE;;AACA;;AASF;;AAEA;;AACA;;AACF;;AACA;;AACF;;AACF;;;;;;;;;;AAhH4B;;AAAA;;AAoBoB;;AAAA;;AAGL;;AAAA,oGAAmB,cAAnB,EAAmB,gBAAnB;;AAa/B;;AAAA;;AAYkB;;AAAA;;AA2DP;;AAAA;;AACa;;AAAA;;AAEH;;AAAA;;;;;;;;;wEDxHpBtE,wB,EAAwB;gBALpC,uDAKoC;iBAL1B;AACTH,oBAAQ,EAAE,sBADD;AAETC,uBAAW,EAAE,mCAFJ;AAGTC,qBAAS,EAAE,CAAC,mCAAD;AAHF,W;AAK0B,U;;;;;;;;;;;;;;;;;;;AAEXwE,mBAAS,EAAE,CAAF;kBAAhC,uDAAgC;mBAAtB,W;AAAsB,WAAE,C;AACftD,cAAI,EAAE,CAAF;kBAAvB,uDAAuB;mBAAb,8D;AAAa,WAAE,C;AACDD,mBAAS,EAAE,CAAF;kBAAjC,uDAAiC;mBAAvB,wE;AAAuB,WAAE;;;;;;;;;;;;;;;;;;;AEtBta;;AACE;;AACF;;;;;;AAFkD;;AAChD;;AAAA;;;;;;;;AAaR;;AACC;;AAA4C;AAAA;;AAAA;;AAAA;AAAA;;AAAwB;;AACpE;;AACF;;;;;;AAuCG;;AAAgG;;AAChG;;;;;;AACA;;AAAqC;;AAAuB;;;;;;AAAvB;;AAAA;;;;;;AAIrC;;AAA8F;;AAC9F;;;;;;AACA;;AAAqC;;AAAqB;;;;;;AAArB;;AAAA;;;;;;AAIrC;;AAAgG;;AAC7F;;;;;;AACH;;AAAqC;;AAAyB;;;;;;AAAzB;;AAAA;;;;;;AAIrC;;AAAyF;;AACzF;;;;;;AACA;;AAAqC;;AAAyB;;;;;;AAAzB;;AAAA;;;;;;AAGtC;;AAAgG;;AAChG;;;;;;AACA;;AAAqC;;AAAuB;;;;;;AAAvB;;AAAA;;;;;;AAGrC;;AAAkG;;AAClG;;;;;;AACA;;AAAqC;;AAAyB;;;;;;AAAzB;;AAAA;;;;;;AAIrC;;AAAmC;;AAAM;;;;;;;;AACzC;;AACE;;AACC;;AAAgD;AAAA;;AAAA;;AAAA;;AAAA,iDAA0B,UAA1B;AAAoC,WAApC;;AAAuC;;AAAI;;AAC9F;;AAAM;;AACN;;AACC;;AAA0F;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA+B;;AAAM;;AAChI;;AACA;;;;;;AAFmD;;AAAA;;;;;;AAKpD;;;;;;AACA;;;;;;;;UD5IMwD,wB;AAoEX,0CAAoBvE,MAApB,EAA0CG,KAA1C,EAAqEC,MAArE,EAA0GoE,aAA1G,EACUC,MADV,EACoC9G,UADpC,EACkE2C,cADlE,EAC4GL,cAD5G,EAEUI,EAFV,EAEgC;AAAA;;AAFZ,eAAAL,MAAA,GAAAA,MAAA;AAAsB,eAAAG,KAAA,GAAAA,KAAA;AAA2B,eAAAC,MAAA,GAAAA,MAAA;AAAqC,eAAAoE,aAAA,GAAAA,aAAA;AAChG,eAAAC,MAAA,GAAAA,MAAA;AAA0B,eAAA9G,UAAA,GAAAA,UAAA;AAA8B,eAAA2C,cAAA,GAAAA,cAAA;AAA0C,eAAAL,cAAA,GAAAA,cAAA;AAClG,eAAAI,EAAA,GAAAA,EAAA;AAxBV,eAAAM,mBAAA,GAA+B,CAA/B;AAEA,eAAAJ,UAAA,GAAa,IAAI,0EAAJ,EAAb;AACA,eAAAC,gBAAA,GAA6B,CAAC,YAAD,EAAe,UAAf,EAA2B,YAA3B,EAAyC,cAAzC,EAAyD,YAAzD,EAAuE,cAAvE,EAAuF,QAAvF,CAA7B;AAEA,eAAAC,cAAA,GAAmD,CACjD;AAAEC,eAAG,EAAE,YAAP;AAAqB1B,iBAAK,EAAE;AAA5B,WADiD,EAEjD;AAAE0B,eAAG,EAAE,UAAP;AAAmB1B,iBAAK,EAAE;AAA1B,WAFiD,EAGjD;AAAE0B,eAAG,EAAE,YAAP;AAAqB1B,iBAAK,EAAE;AAA5B,WAHiD,CAAnD;AAQA,eAAAlB,UAAA,GAAoB,EAApB;AACA,eAAAC,QAAA,GAAkB,EAAlB;AACA,eAAA2G,UAAA,GAAoB,EAApB;AAEA,eAAAC,KAAA,GAAe,EAAf;AAOmC;;;;iBAEnC,oBAAQ;AACP,iBAAKC,iBAAL;AACA,iBAAKC,QAAL;AACA;;;iBACD,uBAAc;AACZ,gBAAI,KAAKC,UAAT,EAAqB;AACnB,mBAAKA,UAAL,CAAgBC,WAAhB;AACD;AACF;;;iBACD,oBAAW;AACT,iBAAKC,KAAL,GAAa,KAAKL,KAAlB;AACD;;;iBAED,2BAAkB;AAChB,iBAAKpE,UAAL,CAAgBQ,SAAhB,GAA4B,KAAKA,SAAjC;AACA,iBAAKR,UAAL,CAAgBS,IAAhB,GAAuB,KAAKA,IAA5B;AACD;;;iBACD,gBAAO8C,GAAP,EAAU;AACRrB,mBAAO,CAACC,GAAR,CAAYoB,GAAZ;AACA,iBAAKU,aAAL,CAAmBS,UAAnB,CAA8BC,IAA9B,CAAmCpB,GAAnC;AACA,iBAAK9D,MAAL,CAAYwD,QAAZ,CAAqB,CAAC,oDAAD,CAArB;AACD;;;iBACD,sBAAatE,KAAb,EAAoB;AAAA;;AAClBuD,mBAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBxD,KAAK,CAACyD,IAAN,CAAW,CAAX,EAAcC,KAAd,CAAoB,CAApB,CAArB;AACA,gBAAMC,IAAI,GAAS3D,KAAK,CAACyD,IAAN,CAAW,CAAX,EAAcC,KAAd,CAAoB,CAApB,CAAnB;AACA,gBAAME,UAAU,GAAG,IAAIC,QAAJ,EAAnB;AACAD,sBAAU,CAACE,MAAX,CAAkB,YAAlB,EAAgC,eAAhC;AACAF,sBAAU,CAACE,MAAX,CAAkB,MAAlB,EAA0BH,IAA1B;AACA,iBAAKlF,UAAL,CAAgBsF,cAAhB,CAA+BH,UAA/B,EAA2C3B,SAA3C,CAAqD,UAAC+B,QAAD,EAAc;AACjET,qBAAO,CAACC,GAAR,CAAYQ,QAAZ;;AACA,oBAAI,CAAC/C,KAAL,CAAWc,IAAX,+BAA8C,IAA9C,EAAoD;AAClDkC,wBAAQ,EAAE,IADwC;AAElDC,gCAAgB,EAAE,KAFgC;AAGlDC,kCAAkB,EAAE;AAH8B,eAApD;AAKD,aAPD;AAQA,iBAAKuB,iBAAL;AACD;;;iBAED,6BAAoB;AAAA;;AAClB,iBAAKjH,UAAL,CAAgBwH,sBAAhB,GAAyChE,SAAzC,CAAmD,UAAC3D,IAAD,EAAe;AAChE,mBAAI,IAAI4D,CAAC,GAAC,CAAV,EAAYA,CAAC,GAAC5D,IAAI,CAAC6D,MAAnB,EAA0BD,CAAC,EAA3B,EAA8B;AAC5B,oBAAG5D,IAAI,CAAC4D,CAAD,CAAJ,CAAQE,UAAR,IAAsB,GAAzB,EAA6B;AAC3B9D,sBAAI,CAAC4D,CAAD,CAAJ,CAAQE,UAAR,GAAqB,cAArB;AACD;;AACD,oBAAG9D,IAAI,CAAC4D,CAAD,CAAJ,CAAQE,UAAR,IAAsB,GAAzB,EAA8B;AAC5B9D,sBAAI,CAAC4D,CAAD,CAAJ,CAAQE,UAAR,GAAqB,YAArB;AACD;;AACD,oBAAG9D,IAAI,CAAC4D,CAAD,CAAJ,CAAQG,YAAR,IAAwB,GAA3B,EAA+B;AAC7B/D,sBAAI,CAAC4D,CAAD,CAAJ,CAAQG,YAAR,GAAuB,MAAvB;AACD;;AACD,oBAAG/D,IAAI,CAAC4D,CAAD,CAAJ,CAAQG,YAAR,IAAwB,GAA3B,EAA+B;AAC7B/D,sBAAI,CAAC4D,CAAD,CAAJ,CAAQG,YAAR,GAAuB,QAAvB;AACD;AACF;;AACD,oBAAI,CAACoD,KAAL,GAAanH,IAAb;AACA,oBAAI,CAACwH,KAAL,GAAa,MAAI,CAACL,KAAlB;AACA,oBAAI,CAACpE,UAAL,GAAkB,IAAI,0EAAJ,CAAuB/C,IAAvB,CAAlB;AACA,oBAAI,CAAC+C,UAAL,CAAgBQ,SAAhB,GAA4B,MAAI,CAACA,SAAjC;AACA,oBAAI,CAACR,UAAL,CAAgBS,IAAhB,GAAuB,MAAI,CAACA,IAA5B;AACD,aApBD;AAqBD;;;iBAGD,kBAAM;AACJ,iBAAKhB,MAAL,CAAYwD,QAAZ,CAAqB,6BAArB;AACD;;;iBAED,kBAAS/B,QAAT,EAAmBC,CAAnB,EAAoB;AAClB,iBAAKC,WAAL,CAAiBF,QAAjB;AACA,iBAAKG,WAAL,CAAiBF,CAAjB;AACD;;;iBAGD,qBAAYD,QAAZ,EAAsB;AACpB,iBAAKlB,UAAL,CAAgBuB,eAAhB,GAAkC,UAACtE,IAAD,EAAYuE,MAAZ,EAAwC;AACxE,qBACEvE,IAAI,CAACiE,QAAD,CAAJ,CAAeO,iBAAf,GAAmCC,QAAnC,CAA4CF,MAA5C,CADF;AAGD,aAJD;AAKD;;;iBAED,uBAAW;AACV,iBAAKxB,UAAL,CAAgBwB,MAAhB,GAAyB,EAAzB;AACA,iBAAKuC,SAAL,CAAec,aAAf,CAA6BpG,KAA7B,GAAqC,EAArC;AACA,iBAAK2B,mBAAL,GAA2B,CAA3B;AACA;;;iBAGD,qBAAYzB,KAAZ,EAA0B;AACxB,gBAAMgD,WAAW,GAAIhD,KAAK,CAACiD,MAAN,CAAkCnD,KAAvD;AACA,iBAAKuB,UAAL,CAAgBwB,MAAhB,GAAyBG,WAAW,CAACE,IAAZ,GAAmBC,WAAnB,EAAzB;AACD;;;iBACD,qBAAgC;AAAA;;AAAA,gBAAtB7E,IAAsB,uEAAV,EAAU;AAAA,gBAAN6H,KAAM;AAC9B,gBAAIC,KAAK,GAAGD,KAAK,GAAG,6BAAH,GAAmC,8BAApD;AACA,gBAAI5H,SAAS,GAAsB,KAAKgH,MAAL,CAAYxD,IAAZ,CAAiB,gIAAjB,EAA8C;AAC/EsE,mBAAK,EAAE,OADwE;AAE/EC,0BAAY,EAAE,IAFiE;AAG/EhI,kBAAI,EAAE;AACJ8H,qBAAK,EAAEA,KADH;AAEJrH,uBAAO,EAAET,IAFL;AAGJM,0BAAU,EAAE,KAAKA;AAHb;AAHyE,aAA9C,CAAnC;AAUAL,qBAAS,CAACgI,WAAV,GACGtE,SADH,CACa,UAAA2C,GAAG,EAAI;AAChB,kBAAG,CAACA,GAAJ,EAAS;AACP;AACD;;AAED,kBAAIuB,KAAJ,EAAW;AACR,sBAAI,CAAC1H,UAAL,CAAgB+H,0BAAhB,CAA2C5B,GAA3C,EAA+C,KAA/C,EAAsD3C,SAAtD,CAAgE,UAAA+B,QAAQ,EAAI;AAE3E,wBAAI,CAAC0B,iBAAL;;AACA,wBAAI,CAACzE,KAAL,CAAWc,IAAX,mBAAkC,IAAlC,EAAwC;AACtCkC,4BAAQ,EAAE,IAD4B;AAEtCC,oCAAgB,EAAE,KAFoB;AAGtCC,sCAAkB,EAAE;AAHkB,mBAAxC;AAKD,iBARA;AASF,eAVD,MAUO;AACL,sBAAI,CAAC1F,UAAL,CAAgB+H,0BAAhB,CAA2C5B,GAA3C,EAA+C,KAA/C,EAAsD3C,SAAtD,CAAgE,UAAA+B,QAAQ,EAAI;AAE1E,wBAAI,CAAC8B,KAAL,GAAa9B,QAAb;;AACA,wBAAI,CAAC9C,MAAL,CAAYnB,KAAZ;;AACA,wBAAI,CAAC2F,iBAAL;;AACA,wBAAI,CAACzE,KAAL,CAAWc,IAAX,qBAAoC,IAApC,EAA0C;AACxCkC,4BAAQ,EAAE,IAD8B;AAExCC,oCAAgB,EAAE,KAFsB;AAGxCC,sCAAkB,EAAE;AAHoB,mBAA1C;AAKD,iBAVD;AAWD;AACF,aA7BH;AA+BD;;;iBACD,yBAAgB;AAAA;;AACd,iBAAK1F,UAAL,CAAgBgI,aAAhB,GAAgCxE,SAAhC,CAA0C,UAACyE,IAAD,EAAU;AAClD,oBAAI,CAAC9H,UAAL,GAAkB8H,IAAlB;AACD,aAFD;AAGD;;;iBAED,oBAAWC,OAAX,EAAoB;AAAA;;AAClB,iBAAKvF,cAAL,CAAoBqD,OAApB,CAA4B;AAACC,qBAAO,mBAAYiC,OAAO,CAACnB,UAApB;AAAR,aAA5B,EACGvD,SADH,CACa,UAAA2C,GAAG,EAAI;AAChB,kBAAIA,GAAJ,EAAS;AACP,sBAAI,CAACnG,UAAL,CAAgBmI,qBAAhB,CAAsCD,OAAO,CAAC3H,EAA9C,EACGiD,SADH,CACa,UAAA3D,IAAI,EAAI,CAClB,CAFH,EAGI,UAAAuI,GAAG,EAAE;AACH,sBAAIA,GAAG,CAACC,MAAJ,IAAc,GAAlB,EAAuB;AACrB,0BAAI,CAAC7F,KAAL,CAAWc,IAAX,CAAgB,6BAAhB,EAA+C,IAA/C,EAAqD;AACnDkC,8BAAQ,EAAE,IADyC;AAEnDC,sCAAgB,EAAE,KAFiC;AAGnDC,wCAAkB,EAAE;AAH+B,qBAArD;AAKD;;AAGH,wBAAI,CAACuB,iBAAL;AAED,iBAfH;AAgBD;AAEF,aArBH;AAsBD;;;iBACD,yBAAa;AACX,iBAAKvE,EAAL,CAAQ4F,OAAR,CAAgB,aAAhB,EAA8B,UAA9B;AACA,iBAAKjG,MAAL,CAAYwD,QAAZ,CAAqB,CAAC,uDAAD,CAArB;AACD;;;iBACD,qBAAS;AACP,iBAAKxD,MAAL,CAAYwD,QAAZ,CAAqB,CAAC,mDAAD,CAArB;AAED;;;iBACD,oBAA6C;AAAA,gBAApChG,IAAoC,uEAAxB,EAAwB;AAAA,gBAArBsG,GAAqB;AAAA,gBAAjBoC,MAAiB;AAC3CzD,mBAAO,CAACC,GAAR,CAAYoB,GAAZ;AACA,iBAAKU,aAAL,CAAmBS,UAAnB,CAA8BC,IAA9B,CAAmCpB,GAAnC;AACA,iBAAK9D,MAAL,CAAYwD,QAAZ,CAAqB,CAAC,oDAAD,CAArB,EAA4E;AAAEC,yBAAW,EAAE;AAAEvF,kBAAE,EAAEV,IAAI,CAACU,EAAX;AAAegI,sBAAM,EAAGA;AAAxB;AAAf,aAA5E;AACD;;;iBAED,4BAAmB5D,SAAnB,EAAoC;AAClC,gBAAIA,SAAS,CAACC,SAAd,EAAyB;AACvB,mBAAKtC,cAAL,CAAoBuC,QAApB,kBAAuCF,SAAS,CAACC,SAAjD;AACD,aAFD,MAEO;AACL,mBAAKtC,cAAL,CAAoBuC,QAApB,CAA6B,iBAA7B;AACD;AACF;;;;;;;yBAnQU+B,wB,EAAwB,uH,EAAA,wI,EAAA,mK,EAAA,0K,EAAA,mI,EAAA,2I,EAAA,sK,EAAA,iI,EAAA,0J;AAAA,O;;;cAAxBA,wB;AAAwB,6C;AAAA;AAAA;;;sEAyDxB,8D,EAAO,I;;sEACP,yE,EAAY,I;;;;;;;;;;;;;;;;;;ACnFzB;;AAAsB;;AAA0B;;AACN;;AAAQ;;AAChD;;AACE;;AAAwB;AAAA,qBAAS,IAAAP,MAAA,EAAT;AAAiB,aAAjB;;AACpB;;AAAU;;AAAU;;AACtB;;AACA;;AACE;;AACF;;AACA;;AACA;;AACE;;AAAiC;;AAAO;;AAAK;;AAAO;;AACpD;;AAAoC;AAAA,qBAAS,IAAAmC,MAAA,CAAO,UAAP,CAAT;AAA2B,aAA3B;;AAA8B;;AAAO;;AAAQ;;AAAO;;AAC1F;;AACJ;;AAIA;;AACC;;AAEC;;AACE;;AACE;;AACE;;AACE;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AAEF;;AACF;;AACF;;AACG;;AACA;;AACE;;AAAU;;AAAS;;AACrB;;AACA;;AACE;;AACC;;AAAoC;;AAAM;;AAC1C;;AAIE;AAAA,qBAAU,IAAAlC,YAAA,QAAV;AAA8B,aAA9B;;AAJF;;AAMF;;AACC;;AACE;;AAAM;;AAAQ;;AAChB;;AACF;;AACH;;AACD;;AACE;;AACE;;AACE;;AACG;;AAAW;;AAAS;;AACpB;;AAAsC;AAAA;AAAA;;AAErC;;AAAsB;;AAAM;;AAC5B;;AAGF;;AACF;;AACF;;AACA;;AACE;;AACC;;AAAW;;AAAM;;AACjB;;AAA2B;AAAA;;AAAA;;AAAA,qBAAS,IAAAE,QAAA,mBAAT;AAAwC,aAAxC;;AAA3B;;AAEC;;AAAoB;;AAAM;;AAC5B;;AACF;;AACA;;AAIF;;AACA;;AACE;;AAAgG;;AAC5F;;AACE;;AACG;;AAAmB;;AACxB;;AACE;;AACE;;AAGA;;AAAK;AAAA,qBAAS,IAAAiC,aAAA,EAAT;AAAwB,aAAxB;;AACH;;AACC;;AACF;;AACD;;AACA;;AAYF;;AACF;;AACA;;AACA;;AACN;;AACF;;AACA;;AACE;;AAA4D;AAAA,qBAAiB,IAAA/B,kBAAA,QAAjB;AAA2C,aAA3C;;AAE1D;;AACE;;AAEA;;AACF;;AAEA;;AACE;;AAEA;;AACF;;AAEA;;AACE;;AAEA;;AACF;;AAEA;;AACE;;AAEA;;AACF;;AACA;;AACC;;AAEA;;AACF;;AACA;;AACE;;AAEA;;AACF;;AAEC;;AACC;;AACA;;AAQF;;AAEC;;AACA;;AACF;;AACA;;AACF;;AACD;;;;;;;;;;;;AApI6B;;AAAA;;AAuBmB;;AAAA;;AAGN;;AAAA;;AAc/B;;AAAA;;AAQU;;AAAA;;AA+BQ;;AAAA;;AAgDP;;AAAA;;AACa;;AAAA;;AAEH;;AAAA;;;;;;;;;wED9IrBE,wB,EAAwB;gBALpC,uDAKoC;iBAL1B;AACT3E,oBAAQ,EAAE,sBADD;AAETC,uBAAW,EAAE,mCAFJ;AAGTC,qBAAS,EAAE,CAAC,mCAAD;AAHF,W;AAK0B,U;;;;;;;;;;;;;;;;;;;;;AA6CXwE,mBAAS,EAAE,CAAF;kBAAhC,uDAAgC;mBAAtB,W;AAAsB,WAAE,C;AAYftD,cAAI,EAAE,CAAF;kBAAvB,uDAAuB;mBAAb,8D;AAAa,WAAE,C;AACDD,mBAAS,EAAE,CAAF;kBAAjC,uDAAiC;mBAAvB,yE;AAAuB,WAAE;;;;;;;;;;;;;;;;;;;AEnFtC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACAkG;;AAAsB;;AAAG;;;;;;AAAO;;AAAqB;;AAAI;;;;;;AAK1J;;AAAqC;;AAAsB;;;;;;AACxD;;AAAoC;;AAAuB;;;;;;AAcxD;;AACC;;AAAuB;;;;;;AADiD;;AACxE;;AAAA;;;;;;AAEF;;AACC;;AACD;;;;;;AAVF;;AACC;;AAAW;;AAAa;;AACxB;;AACC;;AAEC;;AAED;;AACA;;AAGD;;AACD;;;;;;AAPmC;;AAAA,iGAAe,cAAf,EAAe,uBAAf;;AAGrB;;AAAA;;;;;;AAKd;;AACC;;AAAW;;AAAa;;AACxB;;AACC;;AAED;;AACD;;;;;;AAHW;;AAAA;;;;;;AASR;;AAA6F;;AAC7F;;;;;;AADmE;;AAA0B;;AAAA;;;;;;AAG9F;;AACC;;AACD;;;;;;AATF;;AACC;;AAAW;;AAAW;;AACtB;;AACC;;AACC;;AAED;;AACA;;AAGD;;AACD;;;;;;AAPiC;;AAAA,+FAAa,cAAb,EAAa,qBAAb;;AAGnB;;AAAA;;;;;;AAKd;;AACC;;AAAW;;AAAW;;AACtB;;AACC;;AAED;;AACD;;;;;;AAHW;;AAAA;;;;;;AAUT;;AACC;;AACD;;;;;;AAaA;;AACC;;AACD;;;;;;AAQC;;AACC;;AAAsB;;;;;;AADiD;;AACvE;;AAAA;;;;;;AANJ;;AACC;;AAAW;;AAAqB;;AAChC;;AACC;;AAEC;;AAED;;AAID;;AACD;;;;;;AAPkC;;AAAA,kGAAe,cAAf,EAAe,wBAAf;;;;;;AAQlC;;AACC;;AAAW;;AAAsB;;AACjC;;AACC;;AAED;;AACD;;;;;;AAHW;;AAAA;;;;;;AAUT;;AACC;;AACD;;;;;;;;AAWD;;AAID;AAAA;;AAAA;;AAAA;AAAA;;AAEA;;AACC;;;;;;AALD;;;;;;;;AAOA;;AAA8I;AAAA;;AAAA;;AAAA;AAAA;;AAC3I;;AACD;;;;;;AAFsE;;;;;;;;AAOxE;;AAAwE;AAAA;;AAAA;;AAAA;AAAA;;AACtE;;AACF;;;;;;;;AAGA;;AAAwE;AAAA;;AAAA;;AAAA,wCAAsB,MAAtB;AAA4B,WAA5B;;AACtE;;AACF;;;;;;AAHC;;AACD;;AAES;;AACR;;;;;;AAJuE;;AAC/D;;AAAA;;;;;;;;AAKT;;AAAuE;AAAA;;AAAA;;AAAA,wCAAsB,MAAtB;AAA4B,WAA5B;;AACrE;;AACF;;;;;;AAHC;;AACD;;AAES;;AACR;;;;;;AAJwF;;AAChF;;AAAA;;;;;;;;AAKT;;AAAuE;AAAA;;AAAA;;AAAA,wCAAsB,OAAtB;AAA6B,WAA7B;;AACrE;;AACF;;;;;;AAHC;;AACD;;AAES;;AACR;;;;;;AAJuF;;AAC/E;;AAAA;;;;;;;;AAKT;;AAAuE;AAAA;;AAAA;;AAAA,wCAAsB,QAAtB;AAA8B,WAA9B;;AACrE;;AACF;;;;;;AAHC;;AACD;;AAEU;;AACT;;;;;;AAJ+C;;AACvC;;AAAA;;;;;;AAiBb;;AACI;;AACF;;;;UDjKWsF,4B;AAUX,8CAAoB3I,EAApB,EAA4CC,UAA5C,EAA2EqC,MAA3E,EAAmGK,EAAnG,EACUF,KADV,EACqCmG,GADrC,EACqEC,WADrE,EACwGC,KADxG,EACgI;AAAA;;AAD5G,eAAA9I,EAAA,GAAAA,EAAA;AAAwB,eAAAC,UAAA,GAAAA,UAAA;AAA+B,eAAAqC,MAAA,GAAAA,MAAA;AAAwB,eAAAK,EAAA,GAAAA,EAAA;AACzF,eAAAF,KAAA,GAAAA,KAAA;AAA2B,eAAAmG,GAAA,GAAAA,GAAA;AAAgC,eAAAC,WAAA,GAAAA,WAAA;AAAmC,eAAAC,KAAA,GAAAA,KAAA;AARxG,eAAAN,MAAA,GAAkB,KAAlB;AACA,eAAApI,UAAA,GAAuB,EAAvB;AACA,eAAAC,QAAA,GAAqB,EAArB;AACA,eAAA2G,UAAA,GAAuB,EAAvB;AACA,eAAA+B,WAAA,GAAqB,IAArB;AAImI;;;;iBAEnI,oBAAQ;AAAA;;AACN,iBAAKD,KAAL,CAAWE,aAAX,CAAyBvF,SAAzB,CAAmC,UAACwF,MAAD,EAAiB;AAClD,kBAAGA,MAAM,CAACC,GAAP,CAAW,IAAX,CAAH,EAAoB;AAClB,sBAAI,CAACV,MAAL,GAAc,IAAd;AACA,sBAAI,CAAChI,EAAL,GAAUyI,MAAM,CAACC,GAAP,CAAW,IAAX,CAAV;;AACA,sBAAI,CAACjJ,UAAL,CAAgBkJ,iBAAhB,CAAkCF,MAAM,CAACC,GAAP,CAAW,IAAX,CAAlC,EAAoDzF,SAApD,CAA8D,UAACyE,IAAD,EAAS;AACrE,wBAAI,CAACkB,YAAL,GAAoBlB,IAApB;;AACA,wBAAI,CAACW,WAAL,CAAiBQ,eAAjB,CAAiC,MAAI,CAACD,YAAtC;;AACC,wBAAI,CAACP,WAAL,CAAiBS,cAAjB;;AACA,wBAAI,CAAC7I,aAAL,CAAmByH,IAAnB;AACF,iBALD;AAMD,eATD,MAUI;AACF,sBAAI,CAACa,WAAL,GAAiB,KAAjB;;AACA,sBAAI,CAACtI,aAAL,CAAmB,EAAnB;AACD;AACF,aAfD;AAiBA,iBAAKyC,YAAL,GAAoB,KAAKP,EAAL,CAAQQ,OAAR,CAAgB,YAAhB,EAA8BoG,QAAlD;AACA,iBAAK9I,aAAL,CAAmB,EAAnB;AACA,iBAAK+I,WAAL;AACA,iBAAKvB,aAAL;AACA,iBAAKwB,YAAL;AACD;;;iBAED,uBAAc7I,IAAd,EAAoB;AAClB,iBAAK8I,iBAAL,GAAyB,KAAK1J,EAAL,CAAQc,KAAR,CAAc;AACrCN,gBAAE,EAAE,CAACI,IAAI,CAACJ,EAAL,IAAW,EAAZ,CADiC;AAErCwG,wBAAU,EAAE,CAACpG,IAAI,CAACoG,UAAL,IAAmB,EAApB,EAAwB,0DAAWhG,QAAnC,CAFyB;AAGrCX,sBAAQ,EAAE,CAACO,IAAI,CAACP,QAAL,IAAiB,EAAlB,EAAsB,0DAAWW,QAAjC,CAH2B;AAIrC2I,0BAAY,EAAE,CAAC/I,IAAI,CAAC+I,YAAL,IAAqB,EAAtB,CAJuB;AAKrCC,2BAAa,EAAE,CAAChJ,IAAI,CAACgJ,aAAL,IAAsB,EAAvB,CALsB;AAMrCC,wBAAU,EAAE,CAACjJ,IAAI,CAACiJ,UAAL,IAAmB,EAApB,CANyB;AAOrCC,wBAAU,EAAE,CAAClJ,IAAI,CAACkJ,UAAL,IAAmB,EAApB,CAPyB;AAQrC5G,0BAAY,EAAE,CAACtC,IAAI,CAACsC,YAAL,IAAqB,EAAtB,CARuB;AASrC6G,8BAAgB,EAAC,CAACnJ,IAAI,CAACmJ,gBAAL,IAAyB,EAA1B,CAToB;AAUrCnG,wBAAU,EAAE,CAAChD,IAAI,CAACgD,UAAL,IAAmB,EAApB,CAVyB;AAWrCoG,oBAAM,EAAE,CAACpJ,IAAI,CAACoJ,MAAL,IAAe,EAAhB,CAX6B;AAYrCC,sBAAQ,EAAE,CAACrJ,IAAI,CAACqJ,QAAL,IAAiB,EAAlB,CAZ2B;AAarCC,uBAAS,EAAE,CAACtJ,IAAI,CAACsJ,SAAL,IAAkB,EAAnB,CAb0B;AAcrCC,yBAAW,EAAE,CAACvJ,IAAI,CAACuJ,WAAL,IAAoB,EAArB,CAdwB;AAerCC,wBAAU,EAAE,CAACxJ,IAAI,CAACwJ,UAAL,IAAmB,EAApB,CAfyB;AAgBrCC,8BAAgB,EAAE,CAACzJ,IAAI,CAACyJ,gBAAL,IAAyB,EAA1B,CAhBmB;AAiBrCC,yBAAW,EAAE,CAAC1J,IAAI,CAAC0J,WAAL,IAAoB,EAArB,CAjBwB;AAkBrCzG,0BAAY,EAAE,CAACjD,IAAI,CAACiD,YAAL,IAAqB,EAAtB,CAlBuB;AAmBrC0G,qBAAO,EAAE,CAAC3J,IAAI,CAAC2J,OAAL,IAAgB,EAAjB;AAnB4B,aAAd,CAAzB;AAqBA,iBAAK3B,GAAL,CAAS4B,YAAT;AACA,iBAAK5B,GAAL,CAAS6B,aAAT;AACD;;;iBACD,sBAAaC,SAAb,EAAsB;AAAA;;AACpB,+DAAKC,IAAL,CACE;AACE;AACAC,kBAAI,EAAE,uBAAsBF,SAAtB,GAAiC,UAAjC,GAA8C,0BAFtD;AAGEG,8BAAgB,EAAE,IAHpB;AAIEC,gCAAkB,EAAE,SAJtB;AAKEC,+BAAiB,EAAE,MALrB;AAME;AACAC,8BAAgB,EAAE,IAPpB;AAQEC,+BAAiB,EAAE,KARrB;AAQ4B,sBAAQ;AARpC,aADF,EAWEC,IAXF,CAWQ,UAAAC,MAAM,EAAI;AAChB,kBAAGA,MAAM,CAACC,WAAP,IAAoB,IAAvB,EAA4B;AAC1B,uBAAI,CAACnL,UAAL,CAAgBoL,gBAAhB,CAAiC,OAAI,CAACjC,YAAL,CAAkB5I,EAAnD,EACCiD,SADD,CACW,UAAA3D,IAAI,EAAI;AACjB,yBAAI,CAACwC,MAAL,CAAYwD,QAAZ,CAAqB,qCAArB;AACD,iBAHD,EAIA,UAAAuC,GAAG,EAAE;AACH,sBAAIA,GAAG,CAACC,MAAJ,IAAc,GAAlB,EAAuB;AACrB,2BAAI,CAAC7F,KAAL,CAAWc,IAAX,CAAgB,6BAAhB,EAA+C,IAA/C,EAAqD;AACnDkC,8BAAQ,EAAE,IADyC;AAEnDC,sCAAgB,EAAE,KAFiC;AAGnDC,wCAAkB,EAAE;AAH+B,qBAArD;AAKD;;AACD,yBAAI,CAACrD,MAAL,CAAYwD,QAAZ,CAAqB,qCAArB;AAEH,iBAdC;AAeD;AAAC,aA5BJ;AAgCD;;;iBACD,sBAAU;AACR,iBAAKiD,WAAL,GAAiB,KAAjB;AACD;;;iBAED,sBAAa2B,SAAb,EAAwB;AAAA;;AACtB,+DAAKC,IAAL,CACE;AACE;AACAC,kBAAI,EAAE,uBAAsBF,SAAtB,GAAiC,UAAjC,GAA8C,0BAFtD;AAGEG,8BAAgB,EAAE,IAHpB;AAIEC,gCAAkB,EAAE,SAJtB;AAKEC,+BAAiB,EAAE,MALrB;AAME;AACAC,8BAAgB,EAAE,IAPpB;AAQEC,+BAAiB,EAAE,KARrB;AAQ4B,sBAAQ;AARpC,aADF,EAWEC,IAXF,CAWQ,UAAAC,MAAM,EAAI;AAChB,kBAAGA,MAAM,CAACC,WAAP,IAAoB,IAAvB,EAA4B;AAC1B,oBAAI7K,OAAO,GAAQ,EAAnB;AACAA,uBAAO,CAACC,EAAR,GAAa,OAAI,CAACA,EAAlB;AACAD,uBAAO,CAACmK,SAAR,GAAoBA,SAApB;AACAnK,uBAAO,CAAC2C,YAAR,GAAuB,OAAI,CAACA,YAA5B;;AACA,uBAAI,CAACjD,UAAL,CAAgBqL,YAAhB,CAA6B/K,OAA7B,EAAsCkD,SAAtC,CAAgD,UAAC3D,IAAD,EAAU;AACxD,yBAAI,CAACsJ,YAAL,GAAoBtJ,IAApB;;AACA,yBAAI,CAAC+I,WAAL,CAAiBQ,eAAjB,CAAiC,OAAI,CAACD,YAAtC;;AACA,yBAAI,CAACP,WAAL,CAAiBS,cAAjB;;AACA,sBAAIpD,OAAO,GAAG,EAAd;;AACA,0BAAQwE,SAAR;AACE,yBAAK,MAAL;AACExE,6BAAO,GAAG,QAAV;AACA;;AACF,yBAAK,OAAL;AACEA,6BAAO,GAAG,QAAV;AACA;;AACF,yBAAK,MAAL;AACEA,6BAAO,GAAG,YAAV;AACA;;AACF;AACE;AAXJ;;AAaA,yBAAI,CAACzD,KAAL,CAAWc,IAAX,kBAA0B2C,OAA1B,oBAAkD,IAAlD,EAAwD;AACtDT,4BAAQ,EAAE,IAD4C;AAEtDC,oCAAgB,EAAE,KAFoC;AAGtDC,sCAAkB,EAAE;AAHkC,mBAAxD;AAKD,iBAvBD;AAwBD;AACF,aA1CD;AA4CD;;;iBAED,cAAK4F,IAAL,EAAS;AAAA;;AACP,iBAAK7B,iBAAL,CAAuBpI,KAAvB,CAA6B4B,YAA7B,GAA4C,KAAKA,YAAjD;AACA,iBAAKjD,UAAL,CAAgBuL,sBAAhB,CAAuC,KAAK9B,iBAAL,CAAuBpI,KAA9D,EAAqEmC,SAArE,CAA+E,UAAA3D,IAAI,EAAI;AACrF,kBAAGA,IAAI,IAAI,IAAR,IAAgB,OAAI,CAAC0I,MAAL,IAAe,IAAlC,EAAuC;AACrC,uBAAI,CAAC/F,KAAL,CAAWc,IAAX,CAAgB,eAAhB,EAAiC,IAAjC,EAAuC;AACrCkC,0BAAQ,EAAE,IAD2B;AAErCC,kCAAgB,EAAE,KAFmB;AAGrCC,oCAAkB,EAAE;AAHiB,iBAAvC;;AAKA,uBAAI,CAACW,MAAL;;AACA,uBAAI,CAACsC,GAAL,CAAS4B,YAAT;AACD,eARD,MASK,IAAG1K,IAAI,IAAI,IAAR,IAAgB,OAAI,CAAC0I,MAAL,IAAe,KAAlC,EAAwC;AAC3C,uBAAI,CAAC/F,KAAL,CAAWc,IAAX,CAAgB,aAAhB,EAA+B,IAA/B,EAAqC;AACnCkC,0BAAQ,EAAE,IADyB;AAEnCC,kCAAgB,EAAE,KAFiB;AAGnCC,oCAAkB,EAAE;AAHe,iBAArC;;AAKA,uBAAI,CAACW,MAAL;;AACA,uBAAI,CAACsC,GAAL,CAAS4B,YAAT;AAED;AACF,aApBD;AAqBD;;;iBAGD,yBAAa;AAAA;;AACX,iBAAKvK,UAAL,CAAgBgI,aAAhB,GAAgCxE,SAAhC,CAA0C,UAAAgI,cAAc,EAAE;AACxD,qBAAI,CAACrL,UAAL,GAAgBqL,cAAhB;AACA1G,qBAAO,CAACC,GAAR,CAAY,OAAI,CAAC5E,UAAjB;AACD,aAHD;AAID;;;iBAED,uBAAW;AAAA;;AACT,iBAAKH,UAAL,CAAgBuJ,WAAhB,GAA8B/F,SAA9B,CAAwC,UAAAiI,YAAY,EAAE;AACrD;AACC;AACA,mBAAI,IAAIhI,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACgI,YAAY,CAAC/H,MAA3B,EAAkCD,CAAC,EAAnC,EAAsC;AACpC,oBAAGgI,YAAY,CAAChI,CAAD,CAAZ,CAAgBE,UAAhB,KAA6B,GAAhC,EAAoC;AAClCmB,yBAAO,CAACC,GAAR,CAAY,MAAZ,EAAmB0G,YAAY,CAAChI,CAAD,CAAZ,CAAgBE,UAAnC;;AACA,yBAAI,CAACvD,QAAL,CAAcsL,IAAd,CAAmBD,YAAY,CAAChI,CAAD,CAA/B;AACD;AACF;AACF,aATD;AAUD;;;iBAED,wBAAY;AAAA;;AACV,iBAAKzD,UAAL,CAAgB2L,kBAAhB,GAAqCnI,SAArC,CAA+C,UAAAoI,cAAc,EAAE;AAC/D;AACE9G,qBAAO,CAACC,GAAR,CAAY,OAAI,CAACgC,UAAjB;;AACA,mBAAI,IAAItD,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACmI,cAAc,CAAClI,MAA7B,EAAoCD,CAAC,EAArC,EAAwC;AACtC,oBAAGmI,cAAc,CAACnI,CAAD,CAAd,CAAkBE,UAAlB,KAA+B,GAAlC,EAAsC;AACpCmB,yBAAO,CAACC,GAAR,CAAY,MAAZ,EAAmB6G,cAAc,CAACnI,CAAD,CAAd,CAAkBE,UAArC;;AACA,yBAAI,CAACoD,UAAL,CAAgB2E,IAAhB,CAAqBE,cAAc,CAACnI,CAAD,CAAnC;AACD;AACF;AACF,aATD;AAUD;;;iBAED,kBAAS;AACP,iBAAKpB,MAAL,CAAYwD,QAAZ,CAAqB,qCAArB;AACD;;;iBACD,0BAAiB3B,KAAjB,EAAuBvD,IAAvB,EAA2B;AACzB,mBAAOA,IAAI,CAACoG,UAAZ;AACD;;;iBACD,wBAAe7C,KAAf,EAAqBvD,IAArB,EAAyB;AACvB,mBAAOA,IAAI,CAACP,QAAZ;AACD;;;iBACD,0BAAiB8D,KAAjB,EAAuBvD,IAAvB,EAA2B;AACzB,mBAAOA,IAAI,CAACR,UAAZ;AACD;;;iBAED,0BAAiB+D,KAAjB,EAAwB2H,MAAxB,EAA8B;AAC5B,mBAAOA,MAAM,CAAC1L,UAAd;AACF;;;;;;;yBA9NWuI,4B,EAA4B,2H,EAAA,2I,EAAA,uH,EAAA,0J,EAAA,wI,EAAA,gI,EAAA,6I,EAAA,+H;AAAA,O;;;cAA5BA,4B;AAA4B,oD;AAAA,iB;AAAA,gB;AAAA,myE;AAAA;AAAA;ACdzC;;AAAsB;;AAA0B;;AAAkD;;AAAgC;;AAAiC;;AAAkB;;AAAQ;;AAC7L;;AACC;;AAAwB;AAAA,qBAAS,IAAArC,MAAA,EAAT;AAAiB,aAAjB;;AACvB;;AAAU;;AAAU;;AACrB;;AACA;;AACG;;AACJ;;AACA;;AACC;;AACC;;AAGA;;AACC;;AACC;;AAaA;;AAQA;;AAYA;;AAQA;;AACC;;AAAW;;AAAa;;AACxB;;AACC;;AAEA;;AAGD;;AACD;;AAGD;;AAEA;;AACC;;AACC;;AAAW;;AAAa;;AACxB;;AACC;;AAEA;;AAGD;;AACD;;AACA;;AAaA;;AAQA;;AACC;;AAAW;;AAAgB;;AAC3B;;AACC;;AAEA;;AAGD;;AACD;;AACD;;AAID;;AAEA;;AACC;;AACE;;AAQA;;AACD;;AAEW;;AACV;;AAGA;;AACD;;AAES;;AACR;;AACA;;AAKA;;AAKA;;AAKA;;AAMA;;AAID;AAAA,qBAAS,IAAAA,MAAA,EAAT;AAAiB,aAAjB;;AAEA;;AACC;;AACF;;AACC;;AACH;;AACD;;AACA;;;;AA7KyG;;AAAA;;AAAgC;;AAAA;;AAKnI;;AAAA;;AACG;;AAAA;;AAEH;;AAAA;;AAOoB;;AAAA;;AAaA;;AAAA;;AAQD;;AAAA;;AAYC;;AAAA;;AAWX;;AAAA;;AAEG;;AAAA;;AAaJ;;AAAA;;AAEI;;AAAA;;AAKO;;AAAA;;AAaC;;AAAA;;AAWZ;;AAAA;;AAEI;;AAAA;;AAcG;;AAAA;;AAOX;;AAAA;;AACG;;AAAA;;AAMH;;AAAA;;AACG;;AAAA;;AAIF;;AAAA;;AAKA;;AAAA;;AAKA;;AAAA;;AAKA;;AAAA;;AAkBL;;AAAA;;;;;;;;;wED/JOqC,4B,EAA4B;gBALxC,uDAKwC;iBAL9B;AACTzG,oBAAQ,EAAE,6BADD;AAETC,uBAAW,EAAE,0CAFJ;AAGTC,qBAAS,EAAE,CAAC,0CAAD;AAHF,W;AAK8B,U;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEdzC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACAuH;;AAAsB;;AAAG;;;;;;AAAQ;;AAAqB;;AAAI;;;;;;AAK/K;;AAAqC;;AAA4B;;;;;;AACjE;;AAAoC;;AAA6B;;;;;;AAmBrD;;AACE;;AACF;;;;;;AAF4C;;AAC1C;;AAAA;;;;;;AAGJ;;AACE;;AACF;;;;;;;;AAZJ;;AACE;;AAAW;;AAAa;;AACxB;;AACE;;AAA8B;AAAA;;AAAA;;AAAA;AAAA,aAA0C,iBAA1C,EAA0C;AAAA;;AAAA;;AAAA;AAAA,WAA1C;;AAE5B;;AAAqB;;AAAM;;AAC3B;;AAGF;;AACA;;AAGF;;AACF;;;;;;AAVM;;AAAA;;AAE6B;;AAAA;;AAInB;;AAAA;;;;;;AAKhB;;AACE;;AAAW;;AAAc;;AACzB;;AACE;;AAEF;;AACF;;;;;;AAFM;;AAAA;;;;;;AASA;;AACE;;AACF;;;;;;AAF0C;;AACxC;;AAAA;;;;;;AAGJ;;AACE;;AACF;;;;;;AAGJ;;AACE;;AAAW;;AAAW;;AACtB;;AACE;;AAEF;;AACF;;;;;;AAFM;;AAAA;;;;;;AASA;;AACE;;AACF;;;;;;AAF4C;;AAC1C;;AAAA;;;;;;AAGJ;;AACE;;AACF;;;;;;AAGJ;;AACE;;AAAW;;AAAa;;AACxB;;AACE;;AAEF;;AACF;;;;;;AAFM;;AAAA;;;;;;AAYA;;AACE;;AACF;;;;;;AAFsC;;AACpC;;AAAA;;;;;;AAGJ;;AACE;;AACF;;;;;;AAGJ;;AACE;;AAAW;;AAAS;;AACpB;;AACE;;AAEF;;AACF;;;;;;AAFM;;AAAA;;;;;;AASA;;AACE;;AACF;;;;;;AAF0C;;AACxC;;AAAA;;;;;;AAGJ;;AACE;;AACF;;;;;;AAXJ;;AACE;;AAAW;;AAAU;;AACrB;;AACE;;AACE;;AAAqB;;AAAM;;AAC3B;;AAGF;;AACA;;AAGF;;AACF;;;;;;AAVgC;;AAAA;;AAEG;;AAAA;;AAInB;;AAAA;;;;;;AAKhB;;AACE;;AAAW;;AAAU;;AACrB;;AACE;;AAEF;;AACF;;;;;;AAFM;;AAAA;;;;;;AASF;;AACE;;AACF;;;;;;AAYA;;AACE;;AACF;;;;;;AASA;;AACE;;AACF;;;;;;AASA;;AACE;;AACF;;;;;;AAYA;;AACE;;AACF;;;;;;;;AAOF;;AAA8F;AAAA;;AAAA;;AAAA;AAAA;;AAAmB;;AAAI;;;;;;AAA3D;;;;;;;;AAGxD;;AAAuI;AAAA;;AAAA;;AAAA;AAAA;;AACpI;;AACD;;;;;;AAFsE;;;;;;;;AAKxE;;AAAwE;AAAA;;AAAA;;AAAA;AAAA;;AACtE;;AACF;;;;;;;;AAGA;;AAAwE;AAAA;;AAAA;;AAAA,wCAAsB,MAAtB;AAA4B,WAA5B;;AACtE;;AACF;;;;;;AAHF;;AACE;;AAES;;AACX;;;;;;AAJoE;;AACzD;;AAAA;;;;;;;;AAKT;;AAAuE;AAAA;;AAAA;;AAAA,wCAAsB,MAAtB;AAA4B,WAA5B;;AACrE;;AACF;;;;;;AAHF;;AACE;;AAES;;AACX;;;;;;AAJkF;;AACvE;;AAAA;;;;;;;;AAKT;;AAAuE;AAAA;;AAAA;;AAAA,wCAAsB,OAAtB;AAA6B,WAA7B;;AACrE;;AACF;;;;;;AAHF;;AACE;;AAES;;AACX;;;;;;AAJiF;;AACtE;;AAAA;;;;;;;;AAKT;;AAAuE;AAAA;;AAAA;;AAAA,wCAAsB,QAAtB;AAA8B,WAA9B;;AACrE;;AACF;;;;;;AAHF;;AACE;;AAEU;;AACZ;;;;;;AAJ4C;;AACjC;;AAAA;;;;;;;;AAhNjB;;AACE;;AACE;;AAeA;;AAQA;;AACE;;AAAW;;AAAW;;AACtB;;AACE;;AAAiF;AAAA;;AAAA;;AAAA;AAAA;;AAC/E;;AAAqB;;AAAM;;AAC3B;;AAGF;;AACA;;AAGF;;AACF;;AACA;;AAQA;;AACE;;AAAW;;AAAa;;AACxB;;AACE;;AACE;;AAAqB;;AAAM;;AAC3B;;AAGF;;AACA;;AAGF;;AACF;;AACA;;AAQF;;AAEA;;AACE;;AACE;;AAAW;;AAAS;;AACpB;;AACE;;AACE;;AAAqB;;AAAM;;AAC3B;;AAGF;;AACA;;AAGF;;AACF;;AACA;;AAQA;;AAcA;;AAQA;;AACE;;AAAW;;AAAY;;AACvB;;AACE;;AAAyE;AAAA;;AAAA;;AAAA;AAAA;;AAAzE;;AAEA;;AAGF;;AACF;;AACF;;AAEA;;AAEE;;AACE;;AAAW;;AAAqB;;AAChC;;AACE;;AAA6D;AAAA;;AAAA;;AAAA;AAAA;;AAA7D;;AAEA;;AAGF;;AACF;;AAEA;;AACE;;AAAY;;AAAqB;;AACjC;;AACE;;AAA6D;AAAA;;AAAA;;AAAA;AAAA;;AAA7D;;AAEA;;AAGF;;AACF;;AAEA;;AACE;;AAAY;;AAAgB;;AAC5B;;AACE;;AAAyD;AAAA;;AAAA;;AAAA;AAAA;;AAAzD;;AAEA;;AAGF;;AACF;;AAEF;;AAEA;;AACE;;AACE;;AAAY;;AAAiB;;AAC7B;;AACE;;AAAyD;AAAA;;AAAA;;AAAA;AAAA;;AAAzD;;AAEA;;AAGF;;AACF;;AACF;;AAEA;;AACE;;AACE;;AACA;;AACA;;AACE;;AAEW;;AACb;;AACA;;AACE;;AAES;;AACX;;AACA;;AAKA;;AAKA;;AAKA;;AAMA;;AAIE;AAAA;;AAAA;;AAAA;AAAA;;AAEA;;AACF;;AAEF;;AACF;;AAEF;;;;;;AAjOM;;AAEmB;;AAAA;;AAeA;;AAAA;;AAWW;;AAAA;;AAEG;;AAAA;;AAInB;;AAAA;;AAKK;;AAAA;;AAWa;;AAAA;;AAEC;;AAAA;;AAInB;;AAAA;;AAKK;;AAAA;;AAcS;;AAAA;;AAEK;;AAAA;;AAInB;;AAAA;;AAKK;;AAAA;;AAQC;;AAAA;;AAcD;;AAAA;;AAWV;;AAAA,mGAAwB,aAAxB,EAAwB,2CAAxB;;AAEK;;AAAA;;AAYL;;AAAA,mGAAwB,aAAxB,EAAwB,8CAAxB;;AAEK;;AAAA;;AASL;;AAAA,mGAAwB,aAAxB,EAAwB,8CAAxB;;AAEK;;AAAA;;AASL;;AAAA,mGAAwB,aAAxB,EAAwB,0CAAxB;;AAEK;;AAAA;;AAYL;;AAAA,mGAAwB,aAAxB,EAAwB,0CAAxB;;AAEK;;AAAA;;AASa;;AAAA;;AAEtB;;AAAA;;AACM;;AAAA;;AAIN;;AAAA;;AACM;;AAAA;;AAIL;;AAAA;;AAKA;;AAAA;;AAKA;;AAAA;;AAKA;;AAAA;;;;;;AAyBd;;;;UDzOW2J,0B;AAuBX,6CACE;AACA;AACQ/L,UAHV,EAIUC,UAJV,EAKUyC,MALV,EAMUD,KANV,EAOUH,MAPV,EAQUK,EARV,EASUkG,WATV,EASiC;AAAA;;AANvB,eAAA7I,EAAA,GAAAA,EAAA;AACA,eAAAC,UAAA,GAAAA,UAAA;AACA,eAAAyC,MAAA,GAAAA,MAAA;AACA,eAAAD,KAAA,GAAAA,KAAA;AACA,eAAAH,MAAA,GAAAA,MAAA;AACA,eAAAK,EAAA,GAAAA,EAAA;AACA,eAAAkG,WAAA,GAAAA,WAAA;AA9BV,eAAAmD,aAAA,GAAuB,EAAvB;AACA,eAAA9L,eAAA,GAAuB,EAAvB,CA6BiC,CA5BjC;;AACA,eAAAE,UAAA,GAAoB,EAApB;AACA,eAAAC,QAAA,GAAkB,EAAlB;AACA,eAAAK,QAAA,GAAqB,EAArB;AACA,eAAAC,IAAA,GAAc,EAAd;AAMA,eAAAqG,UAAA,GAAuB,EAAvB;AAKA,eAAAiF,WAAA,GAAwB,KAAxB;AAEA,eAAAzD,MAAA,GAAkB,KAAlB;AACA,eAAAO,WAAA,GAAqB,IAArB;AAWK;;;;iBAEL,oBAAW;AAAA;;AAET,iBAAKmD,WAAL,GAAmB,KAAKvJ,EAAL,CAAQQ,OAAR,CAAgB,YAAhB,CAAnB;AACA,iBAAKgJ,MAAL,GAAa,YAAb,CAHS,CAIT;AACA;AACA;AACA;;AAEAC,sBAAU,CAAC,YAAM;AACf,qBAAI,CAACC,YAAL,GAAoBC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACrJ,OAAb,CAAqB,kBAArB,CAAX,CAApB;AACA4B,qBAAO,CAACC,GAAR,CAAY,QAAZ,EAAqB,OAAI,CAACqH,YAA1B;;AACA,kBAAG,OAAI,CAACA,YAAL,IAAqB,IAArB,IAA6B,OAAI,CAACA,YAAL,IAAqBI,SAArD,EAA+D;AAC7D1H,uBAAO,CAACC,GAAR,CAAY,OAAI,CAACqH,YAAjB;AACA,uBAAI,CAACtD,WAAL,GAAiB,KAAjB;;AACA,uBAAI,CAACtI,aAAL,CAAmB,EAAnB;AACD,eAJD,MAKK,IAAG,OAAI,CAAC4L,YAAL,CAAkB7L,EAAlB,IAAwB,IAAxB,IAAgC,OAAI,CAAC6L,YAAL,CAAkB7L,EAAlB,IAAwBiM,SAA3D,EAAqE;AAC1E,uBAAI,CAAC/J,MAAL,CAAYa,IAAZ;;AACAwB,uBAAO,CAACC,GAAR,CAAY,OAAI,CAACqH,YAAL,CAAkB7L,EAA9B;AACA,uBAAI,CAACA,EAAL,GAAU,OAAI,CAAC6L,YAAL,CAAkB7L,EAA5B;;AACA,uBAAI,CAACC,aAAL,CAAmB,OAAI,CAAC4L,YAAxB;;AACA,uBAAI,CAACK,SAAL,GAAiB,OAAI,CAACL,YAAtB;AACA,uBAAI,CAAC7D,MAAL,GAAc,IAAd;AACA,uBAAI,CAACyD,WAAL,GAAmB,IAAnB;;AACA,uBAAI,CAACpD,WAAL,CAAiBQ,eAAjB,CAAiC,OAAI,CAACqD,SAAtC;;AACA,uBAAI,CAAChK,MAAL,CAAYnB,KAAZ;;AACA,uBAAI,CAACmB,MAAL,CAAYnB,KAAZ;AACC;AACF,aApBS,EAoBP,IApBO,CAAV;AAsBA,iBAAKoL,WAAL,GA/BS,CAgCT;AACA;;AACA,iBAAKC,SAAL;AACA,iBAAKC,aAAL;AACA,iBAAK5E,aAAL;AACA,iBAAKuB,WAAL;AAEA,iBAAKtG,YAAL,GAAoB,KAAKP,EAAL,CAAQQ,OAAR,CAAgB,YAAhB,CAApB;AACA4B,mBAAO,CAACC,GAAR,CAAY,KAAK9B,YAAjB;AAED;;;iBAED,uBAActC,IAAd,EAAoB;AAClB,iBAAKkM,cAAL,GAAsB,KAAK9M,EAAL,CAAQc,KAAR,CAAc;AAClCkG,wBAAU,EAAE,CAACpG,IAAI,CAACoG,UAAL,IAAmB,EAApB,EAAuB,CAAC,0DAAWhG,QAAZ,CAAvB,CADsB;AAElCX,sBAAQ,EAAE,CAACO,IAAI,CAACP,QAAL,IAAiB,EAAlB,EAAsB,CAAC,0DAAWW,QAAZ,CAAtB,CAFwB;AAGlCZ,wBAAU,EAAE,CAACQ,IAAI,CAACR,UAAL,IAAmB,EAApB,EAAuB,CAAC,0DAAWY,QAAZ,CAAvB,CAHsB;AAIlCb,oBAAM,EAAE,CAACS,IAAI,CAACT,MAAL,IAAe,EAAhB,EAAmB,0DAAWa,QAA9B,CAJ0B;AAKlCN,sBAAQ,EAAE,CAACE,IAAI,CAACF,QAAL,IAAiB,EAAlB,EAAqB,CAAC,0DAAWM,QAAZ,CAArB,CALwB;AAMlC+L,uBAAS,EAAE,CAACnM,IAAI,CAACmM,SAAL,IAAkB,EAAnB,EAAsB,0DAAW/L,QAAjC,CANuB;AAOlCgM,0BAAY,EAAE,CAACpM,IAAI,CAACoM,YAAL,IAAqB,EAAtB,EAAyB,0DAAWhM,QAApC,CAPoB;AAQlCiM,0BAAY,EAAE,CAACrM,IAAI,CAACqM,YAAL,IAAqB,EAAtB,EAAyB,0DAAWjM,QAApC,CARoB;AASlCkM,sBAAQ,EAAE,CAACtM,IAAI,CAACsM,QAAL,IAAiB,EAAlB,EAAqB,0DAAWlM,QAAhC,CATwB;AAUlCmM,sBAAQ,EAAE,CAACvM,IAAI,CAACuM,QAAL,IAAiB,EAAlB,EAAqB,0DAAWnM,QAAhC,CAVwB;AAWlCR,gBAAE,EAAC,CAACI,IAAI,CAACJ,EAAL,IAAW,IAAZ;AAX+B,aAAd,CAAtB;AAaD;;;iBACD,2BAAkBgB,KAAlB,EAAuB;AACrB,gBAAI4L,GAAG,GAAGzL,MAAM,CAACC,YAAP,CAAoBJ,KAAK,CAAC6L,OAA1B,CAAV;;AACA,gBAAI,QAAQvL,IAAR,CAAasL,GAAb,CAAJ,EAAuB;AACrB,qBAAO,IAAP;AACD,aAFD,MAEO;AACL5L,mBAAK,CAACO,cAAN;AACA,qBAAO,KAAP;AACD;AACF;;;iBACD,+BAAsBP,KAAtB,EAA2B;AACzB,gBAAI4L,GAAG,GAAGzL,MAAM,CAACC,YAAP,CAAoBJ,KAAK,CAAC6L,OAA1B,CAAV;;AACA,gBAAI,cAAcvL,IAAd,CAAmBsL,GAAnB,CAAJ,EAA6B;AAC3B,qBAAO,IAAP;AACD,aAFD,MAEO;AACL5L,mBAAK,CAACO,cAAN;AACA,qBAAO,KAAP;AACD;AACF,W,CACH;;;;iBACE,kBAAS;AAAA;;AACP,gBAAG,KAAK+K,cAAL,CAAoBQ,OAAvB,EAA+B;AAC7B;AACD,aAFD,MAEK;AACH,mBAAK5K,MAAL,CAAYa,IAAZ;AACA,mBAAKgK,QAAL,GAAgB,KAAK5M,IAAL,CAAU6M,IAAV,CAAe,UAAAC,CAAC;AAAA,uBAAIA,CAAC,CAACC,aAAF,IAAmB,OAAI,CAACZ,cAAL,CAAoBxL,KAApB,CAA0BnB,MAAjD;AAAA,eAAhB,CAAhB;AACA,mBAAK2M,cAAL,CAAoBxL,KAApB,CAA0B4B,YAA1B,GAAwC,KAAKA,YAAL,CAAkBqG,QAA1D;AACA,mBAAKuD,cAAL,CAAoBxL,KAApB,CAA0BnB,MAA1B,GAAmC,KAAKoN,QAAL,CAAc/M,EAAjD;AACAuE,qBAAO,CAACC,GAAR,CAAY,KAAK8H,cAAL,CAAoBxL,KAAhC;AACA,mBAAKrB,UAAL,CAAgB0N,0BAAhB,CAA2C,KAAKb,cAAL,CAAoBxL,KAA/D,EAAsEmC,SAAtE,CAAgF,UAACyE,IAAD,EAAU;AAC1FnD,uBAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBkD,IAApB;;AACA,uBAAI,CAACxF,MAAL,CAAYnB,KAAZ;;AACA,uBAAI,CAACe,MAAL,CAAYwD,QAAZ,CAAqB,qCAArB,EAA4DoF,IAA5D,CAAiE,UAAA0C,CAAC,EAAE;AAChE,yBAAI,CAACnL,KAAL,CAAWc,IAAX,CAAgB,0BAAhB,EAA4C,IAA5C,EACA;AAAEkC,4BAAQ,EAAE,IAAZ;AACEC,oCAAgB,EAAE,KADpB;AAEEC,sCAAkB,EAAE;AAFtB,mBADA;AAID,iBALH;AAMC,eATD,EASE,UAAC0C,GAAD,EAAY;AACZ,uBAAI,CAAC3F,MAAL,CAAYnB,KAAZ;;AACA,uBAAI,CAACkB,KAAL,CAAWc,IAAX,WAA0B,IAA1B,EAAgC;AAAEkC,0BAAQ,EAAE,IAAZ;AAC9BC,kCAAgB,EAAE,KADY;AAE9BC,oCAAkB,EAAE;AAFU,iBAAhC;AAGC,eAdH;AAgBC;AACJ;;;iBACD,sBAAa+E,SAAb,EAAsB;AAAA;;AACpB,+DAAKC,IAAL,CACE;AACE;AACAC,kBAAI,EAAE,uBAAsBF,SAAtB,GAAiC,UAAjC,GAA8C,0BAFtD;AAGEG,8BAAgB,EAAE,IAHpB;AAIEC,gCAAkB,EAAE,SAJtB;AAKEC,+BAAiB,EAAE,MALrB;AAME;AACAC,8BAAgB,EAAE,IAPpB;AAQEC,+BAAiB,EAAE,KARrB;AAQ4B,sBAAQ;AARpC,aADF,EAWEC,IAXF,CAWQ,UAAAC,MAAM,EAAI;AAChB,kBAAGA,MAAM,CAACC,WAAP,IAAoB,IAAvB,EAA4B;AAC1B,uBAAI,CAACnL,UAAL,CAAgB4N,0BAAhB,CAA2C,OAAI,CAACnB,SAAL,CAAelM,EAA1D,EACCiD,SADD,CACW,UAAA3D,IAAI,EAAI;AACjB,yBAAI,CAACwC,MAAL,CAAYwD,QAAZ,CAAqB,qCAArB;AACD,iBAHD,EAIA,UAAAuC,GAAG,EAAE;AACH,sBAAIA,GAAG,CAACC,MAAJ,IAAc,GAAlB,EAAuB;AACrB,2BAAI,CAAC7F,KAAL,CAAWc,IAAX,CAAgB,6BAAhB,EAA+C,IAA/C,EAAqD;AACnDkC,8BAAQ,EAAE,IADyC;AAEnDC,sCAAgB,EAAE,KAFiC;AAGnDC,wCAAkB,EAAE;AAH+B,qBAArD;AAKD;;AACD,yBAAI,CAACrD,MAAL,CAAYwD,QAAZ,CAAqB,qCAArB;AAEH,iBAdC;AAeD;AAAC,aA5BJ;AAgCD;;;iBACD,sBAAU;AACR,iBAAKiD,WAAL,GAAiB,KAAjB;AACD;;;iBAED,sBAAa2B,SAAb,EAAwB;AAAA;;AACtB,+DAAKC,IAAL,CACE;AACE;AACAC,kBAAI,EAAE,uBAAsBF,SAAtB,GAAiC,UAAjC,GAA8C,0BAFtD;AAGEG,8BAAgB,EAAE,IAHpB;AAIEC,gCAAkB,EAAE,SAJtB;AAKEC,+BAAiB,EAAE,MALrB;AAME;AACAC,8BAAgB,EAAE,IAPpB;AAQEC,+BAAiB,EAAE,KARrB;AAQ4B,sBAAQ;AARpC,aADF,EAWEC,IAXF,CAWQ,UAAAC,MAAM,EAAI;AAChB,kBAAGA,MAAM,CAACC,WAAP,IAAoB,IAAvB,EAA4B;AAC1BrG,uBAAO,CAACC,GAAR,CAAY,OAAI,CAACxE,EAAjB;AACA,oBAAID,OAAO,GAAQ,EAAnB;AACAA,uBAAO,CAACC,EAAR,GAAa,OAAI,CAACA,EAAlB;AACAD,uBAAO,CAACmK,SAAR,GAAoBA,SAApB;AACAnK,uBAAO,CAAC2C,YAAR,GAAuB,OAAI,CAACA,YAAL,CAAkBqG,QAAzC;;AACA,uBAAI,CAACtJ,UAAL,CAAgB6N,0BAAhB,CAA2CvN,OAA3C,EAAoDkD,SAApD,CAA8D,UAAC3D,IAAD,EAAU;AACtEiF,yBAAO,CAACC,GAAR,CAAYlF,IAAZ;AACA,yBAAI,CAAC4M,SAAL,GAAiB5M,IAAjB;;AACA,yBAAI,CAAC+I,WAAL,CAAiBQ,eAAjB,CAAiC,OAAI,CAACqD,SAAtC;;AACA,yBAAI,CAACT,WAAL,GAAmB,IAAnB;;AACA,yBAAI,CAACpD,WAAL,CAAiBS,cAAjB;;AACA,sBAAIpD,OAAO,GAAG,EAAd;;AACA,0BAAQwE,SAAR;AACE,yBAAK,MAAL;AACExE,6BAAO,GAAG,QAAV;AACA;;AACF,yBAAK,OAAL;AACEA,6BAAO,GAAG,QAAV;AACA;;AACF,yBAAK,MAAL;AACEA,6BAAO,GAAG,YAAV;AACA;;AACF;AACE;AAXJ;;AAaA,yBAAI,CAACzD,KAAL,CAAWc,IAAX,kBAA0B2C,OAA1B,sBAAoD,IAApD,EAA0D;AACxDT,4BAAQ,EAAE,IAD8C;AAExDC,oCAAgB,EAAE,KAFsC;AAGxDC,sCAAkB,EAAE;AAHoC,mBAA1D;AAKD,iBAzBD;AA0BD;AAAC,aA5CJ;AA8CD;;;iBAED,kBAAM;AACJ6G,wBAAY,CAACuB,UAAb,CAAwB,kBAAxB;AACAhJ,mBAAO,CAACC,GAAR,CAAawH,YAAY,CAACrJ,OAAb,CAAqB,kBAArB,CAAb;AAEA,iBAAKb,MAAL,CAAYwD,QAAZ,CAAqB,qCAArB;AACD;;;iBAED,uBAAc;AAAA;;AACZ;AACA;AACA;AACA,iBAAK7F,UAAL,CAAgB+N,kBAAhB,GAAqCvK,SAArC,CAA+C,UAAA3D,IAAI,EAAE;AACnDiF,qBAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoClF,IAApC;;AACA,mBAAI,IAAI4D,CAAC,GAAC,CAAV,EAAaA,CAAC,GAAC5D,IAAI,CAAC6D,MAApB,EAA2BD,CAAC,EAA5B,EAA+B;AAC7B,uBAAI,CAAChD,QAAL,CAAciL,IAAd,CAAmB7L,IAAI,CAAC4D,CAAD,CAAJ,CAAQuK,UAA3B;AACD;;AACDlJ,qBAAO,CAACC,GAAR,CAAY,OAAI,CAACtE,QAAjB;AACD,aAND;AAOD;;;iBACD,uBAAc;AAAA;;AACZ,iBAAKT,UAAL,CAAgBuJ,WAAhB,GAA8B/F,SAA9B,CAAwC,UAACyE,IAAD,EAAU;AAChDnD,qBAAO,CAACC,GAAR,CAAYkD,IAAZ;;AACA,mBAAI,IAAIxE,CAAC,GAAC,CAAV,EAAaA,CAAC,GAACwE,IAAI,CAACvE,MAApB,EAA2BD,CAAC,EAA5B,EAA+B;AAC7B,oBAAGwE,IAAI,CAACxE,CAAD,CAAJ,CAAQE,UAAR,KAAqB,GAAxB,EAA4B;AAC1B,yBAAI,CAACvD,QAAL,CAAcsL,IAAd,CAAmBzD,IAAI,CAACxE,CAAD,CAAvB;AACD;AACF;;AACDqB,qBAAO,CAACC,GAAR,CAAY,OAAI,CAAC3E,QAAjB,EAPgD,CAQhD;AACD,aATD;AAUD,W,CACD;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBAED,yBAAgB;AAAA;;AACb,iBAAKJ,UAAL,CAAgBgI,aAAhB,GAAgCxE,SAAhC,CAA0C,UAACyE,IAAD,EAAU;AAClD,mBAAI,IAAIxE,CAAC,GAAC,CAAV,EAAaA,CAAC,GAACwE,IAAI,CAACvE,MAApB,EAA2BD,CAAC,EAA5B,EAA+B;AAC7B,oBAAGwE,IAAI,CAACxE,CAAD,CAAJ,CAAQE,UAAR,KAAqB,GAAxB,EAA4B;AAC1B,yBAAI,CAACxD,UAAL,CAAgBuL,IAAhB,CAAqBzD,IAAI,CAACxE,CAAD,CAAzB;AACD;AACF;;AACDqB,qBAAO,CAACC,GAAR,CAAY,OAAI,CAAC5E,UAAjB,EANkD,CAOlD;AACD,aARD;AASD,W,CACD;AAEA;AACA;AACA;AACA;AACA;AACA;;;;iBACA,qBAAY;AAAA;;AACV,gBAAI8N,WAAW,GAAE,GAAjB;AACA,iBAAKjO,UAAL,CAAgBkO,WAAhB,CAA4BD,WAA5B,EAAyCzK,SAAzC,CAAmD,UAACyE,IAAD,EAAU;AAC3D,qBAAI,CAACvH,IAAL,GAAYuH,IAAZ;AACD,aAFD;AAGD;;;iBAED,yBAAgB;AAAA;;AACd,iBAAKjI,UAAL,CAAgB4M,aAAhB,GAAgCpJ,SAAhC,CAA0C,UAACyE,IAAD,EAAU;AAClDnD,qBAAO,CAACC,GAAR,CAAYkD,IAAZ;;AACA,mBAAI,IAAIxE,CAAC,GAAC,CAAV,EAAaA,CAAC,GAACwE,IAAI,CAACvE,MAApB,EAA2BD,CAAC,EAA5B,EAA+B;AAC7B,oBAAGwE,IAAI,CAACxE,CAAD,CAAJ,CAAQE,UAAR,KAAqB,GAAxB,EAA4B;AAC1B,yBAAI,CAACoD,UAAL,CAAgB2E,IAAhB,CAAqBzD,IAAI,CAACxE,CAAD,CAAzB;AACD;AACF;;AACDqB,qBAAO,CAACC,GAAR,CAAY,OAAI,CAACgC,UAAjB;AACAjC,qBAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BkD,IAA5B,EARkD,CASlD;AACD,aAVD;AAWD;;;;;;;yBAhTU6D,0B,EAA0B,2H,EAAA,2I,EAAA,mK,EAAA,wI,EAAA,uH,EAAA,0J,EAAA,6I;AAAA,O;;;cAA1BA,0B;AAA0B,iD;AAAA,iB;AAAA,e;AAAA,krE;AAAA;AAAA;AChBvC;;AAAsB;;AAA0B;;AAAuE;;AAAiC;;AAAiC;;AAAyB;;AAAQ;;AAC1N;;AACE;;AAAwB;AAAA,qBAAS,IAAAzF,MAAA,EAAT;AAAiB,aAAjB;;AACtB;;AAAU;;AAAU;;AACtB;;AACA;;AACA;;AACF;;AAEA;;AACE;;AAOE;;AAoOF;;AACF;;AAEA;;AACE;;AACF;;;;AA1P8H;;AAAA;;AAAiC;;AAAA;;AAKxJ;;AAAA;;AACA;;AAAA;;AAWiC;;AAAA;;AAwOtB;;AAAA;;;;;;;;;wEDzOLyF,0B,EAA0B;gBALtC,uDAKsC;iBAL5B;AACT7J,oBAAQ,EAAE,0BADD;AAETC,uBAAW,EAAE,uCAFJ;AAGTC,qBAAS,EAAE,CAAC,uCAAD;AAHF,W;AAK4B,U;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEhBvC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACkBQ;;AACI;;AAAU;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACN;;AACI;;AACI;;AACI;;AAAa;;AAAgB;;AAC7B;;AAA8B;;AAAe;;AAC/C;;AAEN;;AACA;;AACI;;AACJ;;AACJ;;AAEF;;AACN;;;;;;AAXiC;;AAAA;;AACiB;;AAAA;;AAKU;;AAAA;;;;ADbpE,UAAMgM,IAAI,GAAW,CAEnB;AACExG,aAAK,EAAE,gBADT;AAEEyG,gBAAQ,EAAE,iBAFZ;AAGEzD,YAAI,EAAE,yGAHR;AAIE0D,aAAK,EAAC,eAJR;AAKEC,WAAG,EAAC;AALN,OAFmB,EAQjB;AACA3G,aAAK,EAAE,kBADP;AAEAyG,gBAAQ,EAAE,iBAFV;AAGAzD,YAAI,EAAE,gEAHN;AAIA0D,aAAK,EAAC,iBAJN;AAKAC,WAAG,EAAC;AALJ,OARiB,EAenB;AACE3G,aAAK,EAAE,kBADT;AAEEyG,gBAAQ,EAAE,iBAFZ;AAGEzD,YAAI,EAAE,sDAHR;AAIE0D,aAAK,EAAC,iBAJR;AAKEC,WAAG,EAAC;AALN,OAfmB,CAArB;;UAgCaC,2B;AAOX,6CAAoBC,iBAApB,EAAkEnM,MAAlE,EAAyFoM,SAAzF,EAA4G;AAAA;;AAAxF,eAAAD,iBAAA,GAAAA,iBAAA;AAA8C,eAAAnM,MAAA,GAAAA,MAAA;AAAuB,eAAAoM,SAAA,GAAAA,SAAA;AAFzF,eAAA7L,UAAA,GAAuC,IAAI,0EAAJ,CAA6BuL,IAA7B,CAAvC;AAGC;;;;iBAED,oBAAW;AACTO,oBAAQ,CAACC,cAAT,CAAwB,mBAAxB,EAA6CC,KAA7C,CAAmDC,eAAnD,GAAqE,OAArE;AACA,iBAAKL,iBAAL,CAAuBhE,aAAvB;AACA,iBAAK5H,UAAL,CAAgBQ,SAAhB,GAA4B,KAAKA,SAAjC;AACA,iBAAK0L,GAAL,GAAW,KAAKlM,UAAL,CAAgBmM,OAAhB,EAAX;AACD;;;iBAGD,0BAAiBV,KAAjB,EAA6B;AAC3B,iBAAKhM,MAAL,CAAYwD,QAAZ,CAAqB,qCAA8BwI,KAA9B,EAArB;AACD;;;iBACD,kBAAM;AACJ,iBAAKhM,MAAL,CAAYwD,QAAZ,CAAqB,CAAC,mBAAD,CAArB;AACD;;;;;;;yBAvBU0I,2B,EAA2B,gI,EAAA,uH,EAAA,yH;AAAA,O;;;cAA3BA,2B;AAA2B,gD;AAAA;AAAA;sEAG3B,wE,EAAY,I;;;;;;;;;;;;;;ACnDzB;;AAAsB;;AAA0B;;AACzB;;AAAQ;;AAC/B;;AACI;;AACI;;AAAwB;AAAA,qBAAS,IAAAlI,MAAA,EAAT;AAAiB,aAAjB;;AACpB;;AAAU;;AAAU;;AACtB;;AACA;;AACE;;AACF;;AACA;;AACH;;AAIP;;AAEI;;AACI;;;;AAiBN;;;;AAjBwC;;AAAA;;;;;;;;;;wED8B7BkI,2B,EAA2B;gBALvC,uDAKuC;iBAL7B;AACTtM,oBAAQ,EAAE,yBADD;AAETC,uBAAW,EAAE,sCAFJ;AAGTC,qBAAS,EAAE,CAAC,sCAAD;AAHF,W;AAK6B,U;;;;;;;;;AAGbiB,mBAAS,EAAE,CAAF;kBAAjC,uDAAiC;mBAAvB,wE;AAAuB,WAAE;;;;;;;;;;;;;;;;;;;AEnDtC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;AC0Da;;AACE;;AACF;;;;;;AAFuE;;AACrE;;AAAA;;;;;;AA2BN;;AAAkG;;AAClG;;;;;;AACA;;AAAqC;;AAAyB;;;;;;AAAzB;;AAAA;;;;;;AAIrC;;AAAoG;;AACpG;;;;;;AACA;;AAAqC;;AAA2B;;;;;;AAA3B;;AAAA;;;;;;AAIrC;;AAAqG;;AAClG;;;;;;AACH;;AAAqC;;AAAoB;;;;;;AAApB;;AAAA;;;;;;AAGrC;;AAAkG;;AACjG;;;;;;AACD;;AAAqC;;AAAwB;;;;;;AAAxB;;AAAA;;;;;;AAGrC;;AAAgG;;AAC/F;;;;;;AACD;;AAAqC;;AAAuB;;;;;;AAAvB;;AAAA;;;;;;AAGrC;;AAAkG;;AACjG;;;;;;AACD;;AAAqC;;AAAyB;;;;;;AAAzB;;AAAA;;;;;;AAIrC;;AAAmC;;AAAM;;;;;;;;AACzC;;AAOE;;AACC;;AAAmD;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA6B;;AAAI;;AACvF;;AAAM;;AACN;;AACC;;AAAwF;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA8B;;AAAM;;AAC7H;;AACA;;;;;;AAFkD;;AAAA;;;;;;AAKpD;;;;;;AACA;;;;;;;;UDvHM4L,8B;AAiBX,gDAAoB3M,MAApB,EAA0CG,KAA1C,EACUxC,UADV,EACwC2C,cADxC,EAEUL,cAFV,EAEyC;AAAA;;AAFrB,eAAAD,MAAA,GAAAA,MAAA;AAAsB,eAAAG,KAAA,GAAAA,KAAA;AAChC,eAAAxC,UAAA,GAAAA,UAAA;AAA8B,eAAA2C,cAAA,GAAAA,cAAA;AAC9B,eAAAL,cAAA,GAAAA,cAAA;AAhBV,eAAAU,mBAAA,GAA+B,CAA/B;AAEA,eAAAJ,UAAA,GAAa,IAAI,0EAAJ,EAAb;AACA,eAAAC,gBAAA,GAA6B,CAAC,cAAD,EAAiB,gBAAjB,EAAmC,SAAnC,EAA+C,aAA/C,EAA8D,YAA9D,EAA4E,cAA5E,EAA4F,QAA5F,CAA7B;AAEA,eAAAC,cAAA,GAAmD,CACjD;AAAEC,eAAG,EAAE,gBAAP;AAAyB1B,iBAAK,EAAE;AAAhC,WADiD,CAAnD;AAMA,eAAA2F,KAAA,GAAe,EAAf;AAK4C;;;;iBAG5C,mBAAU;AACR,gBAAIiI,GAAG,GAAG,IAAI,6CAAJ,EAAV;AACA,gBAAMC,IAAI,GAAG,CAAC,CAAC,eAAD,EAAkB,iBAAlB,EAAqC,UAArC,EAAiD,eAAjD,EAAmE,aAAnE,EAAkF,eAAlF,CAAD,CAAb;AACA,gBAAMC,IAAI,GAAC,EAAX;AACA,iBAAKnI,KAAL,CAAWoI,OAAX,CAAmB,UAAAC,CAAC,EAAE;AACpB,kBAAIC,GAAG,GAAG,EAAV;AACAA,iBAAG,CAAC5D,IAAJ,CAAS2D,CAAC,CAACE,YAAX;AACAD,iBAAG,CAAC5D,IAAJ,CAAS2D,CAAC,CAACG,cAAX;AACAF,iBAAG,CAAC5D,IAAJ,CAAS2D,CAAC,CAACI,OAAX;AACAH,iBAAG,CAAC5D,IAAJ,CAAS2D,CAAC,CAAChF,WAAX;AACAiF,iBAAG,CAAC5D,IAAJ,CAAS2D,CAAC,CAAC1L,UAAX;AACA2L,iBAAG,CAAC5D,IAAJ,CAAS2D,CAAC,CAACzL,YAAX;AACAuL,kBAAI,CAACzD,IAAL,CAAU4D,GAAV;AACD,aATD;AAUA,oEAAUL,GAAV,EAAe;AACbC,kBAAI,EAAEA,IADO;AAEbC,kBAAI,EAAEA,IAFO;AAGbO,yBAAW,EAAE,qBAACC,OAAD,EAAa,CAAG;AAHhB,aAAf;AAKAV,eAAG,CAACW,IAAJ,CAAS,UAAT;AACD;;;iBAED,0BAAiBrO,KAAjB,EAAwB;AAAA;;AACxB,gBAAM2D,IAAI,GAAQ3D,KAAK,CAACyD,IAAN,CAAW,CAAX,EAAcC,KAAd,CAAoB,CAApB,CAAlB;AACE,gBAAME,UAAU,GAAG,IAAIC,QAAJ,EAAnB;AACAD,sBAAU,CAACE,MAAX,CAAkB,YAAlB,EAAgC,YAAhC;AACAF,sBAAU,CAACE,MAAX,CAAkB,MAAlB,EAA0BH,IAA1B;AAEA,iBAAKlF,UAAL,CAAgB6P,oBAAhB,CAAqC1K,UAArC,EAAiD3B,SAAjD,CAA2D,UAAA3D,IAAI,EAAI;AACjE,kBAAGsF,UAAU,IAAI,IAAjB,EAAsB;AAEpB,uBAAI,CAAC3C,KAAL,CAAWc,IAAX,CAAgB,6BAAhB,EAA+C,IAA/C,EAAqD;AACnDkC,0BAAQ,EAAE,IADyC;AAEnDC,kCAAgB,EAAE,KAFiC;AAGnDC,oCAAkB,EAAE;AAH+B,iBAArD;AAMD;;AACH,qBAAI,CAACoK,YAAL;AACC,aAXD;AAaD;;;iBAED,kBAAM,CAEL;;;iBAED,oBAAQ;AACN,iBAAKA,YAAL;AACA,iBAAK5I,QAAL;AACD;;;iBACD,oBAAW;AACT,iBAAKG,KAAL,GAAa,KAAKL,KAAlB;AACD;;;iBACD,wBAAY;AAAA;;AACV,iBAAKhH,UAAL,CAAgB+P,mBAAhB,GAAsCvM,SAAtC,CAAgD,UAAC3D,IAAD,EAAe;AAE7D,mBAAI,IAAI4D,CAAC,GAAC,CAAV,EAAYA,CAAC,GAAC5D,IAAI,CAAC6D,MAAnB,EAA0BD,CAAC,EAA3B,EAA8B;AAC5B,oBAAG5D,IAAI,CAAC4D,CAAD,CAAJ,CAAQE,UAAR,IAAsB,GAAzB,EAA6B;AAC3B9D,sBAAI,CAAC4D,CAAD,CAAJ,CAAQE,UAAR,GAAqB,cAArB;AACD;;AACD,oBAAG9D,IAAI,CAAC4D,CAAD,CAAJ,CAAQE,UAAR,IAAsB,GAAzB,EAA8B;AAC5B9D,sBAAI,CAAC4D,CAAD,CAAJ,CAAQE,UAAR,GAAqB,YAArB;AACD;;AACD,oBAAG9D,IAAI,CAAC4D,CAAD,CAAJ,CAAQG,YAAR,IAAwB,GAA3B,EAA+B;AAC7B/D,sBAAI,CAAC4D,CAAD,CAAJ,CAAQG,YAAR,GAAuB,MAAvB;AACD;;AACD,oBAAG/D,IAAI,CAAC4D,CAAD,CAAJ,CAAQG,YAAR,IAAwB,GAA3B,EAA+B;AAC7B/D,sBAAI,CAAC4D,CAAD,CAAJ,CAAQG,YAAR,GAAuB,QAAvB;AACD;AACF;;AACD,qBAAI,CAACoD,KAAL,GAAanH,IAAb;AACA,qBAAI,CAACwH,KAAL,GAAa,OAAI,CAACL,KAAlB;AACA,qBAAI,CAACpE,UAAL,GAAkB,IAAI,0EAAJ,CAAuB/C,IAAvB,CAAlB;AACA,qBAAI,CAAC+C,UAAL,CAAgBQ,SAAhB,GAA4B,OAAI,CAACA,SAAjC;AACA,qBAAI,CAACR,UAAL,CAAgBS,IAAhB,GAAuB,OAAI,CAACA,IAA5B;AACD,aArBD;AAsBD;;;iBAED,kBAAM;AACJ,iBAAKhB,MAAL,CAAYwD,QAAZ,CAAqB,CAAC,oDAAD,CAArB;AACD;;;iBAED,kBAAS/B,QAAT,EAAmBC,CAAnB,EAAoB;AAClB,iBAAKC,WAAL,CAAiBF,QAAjB;AACA,iBAAKG,WAAL,CAAiBF,CAAjB;AACD;;;iBAED,qBAAYD,QAAZ,EAAsB;AACpB,iBAAKlB,UAAL,CAAgBuB,eAAhB,GAAkC,UAACtE,IAAD,EAAYuE,MAAZ,EAAwC;AACxE,qBACEvE,IAAI,CAACiE,QAAD,CAAJ,CAAeO,iBAAf,GAAmCC,QAAnC,CAA4CF,MAA5C,CADF;AAGD,aAJD;AAKD;;;iBAED,uBAAW;AACV,iBAAKxB,UAAL,CAAgBwB,MAAhB,GAAyB,EAAzB;AACA,iBAAKuC,SAAL,CAAec,aAAf,CAA6BpG,KAA7B,GAAqC,EAArC;AACA,iBAAK2B,mBAAL,GAA2B,CAA3B;AACA;;;iBAGD,qBAAYzB,KAAZ,EAA0B;AACxB,gBAAMgD,WAAW,GAAIhD,KAAK,CAACiD,MAAN,CAAkCnD,KAAvD;AACA,iBAAKuB,UAAL,CAAgBwB,MAAhB,GAAyBG,WAAW,CAACE,IAAZ,GAAmBC,WAAnB,EAAzB;AACD;;;iBACD,4BAAmBC,SAAnB,EAAoC;AAClC,gBAAIA,SAAS,CAACC,SAAd,EAAyB;AACvB,mBAAKtC,cAAL,CAAoBuC,QAApB,kBAAuCF,SAAS,CAACC,SAAjD;AACD,aAFD,MAEO;AACL,mBAAKtC,cAAL,CAAoBuC,QAApB,CAA6B,iBAA7B;AACD;AACF;;;iBACD,oBAAyC;AAAA,gBAAhChF,IAAgC,uEAApB,EAAoB;AAAA,gBAAjB0I,MAAiB;AAEvC,iBAAKlG,MAAL,CAAYwD,QAAZ,CAAqB,CAAC,oDAAD,CAArB,EAA4E;AAAEC,yBAAW,EAAE;AAAEvF,kBAAE,EAAEV,IAAI,CAACU,EAAX;AAAegI,sBAAM,EAAGA;AAAxB;AAAf,aAA5E;AACD;;;iBACD,oBAAWL,OAAX,EAAoB;AAAA;;AAClB,iBAAKvF,cAAL,CAAoBqD,OAApB,CAA4B;AAACC,qBAAO;AAAR,aAA5B,EACGzC,SADH,CACa,UAAA2C,GAAG,EAAI;AAChB,kBAAIA,GAAJ,EAAS;AACP,uBAAI,CAACnG,UAAL,CAAgBgQ,oBAAhB,CAAqC9H,OAAO,CAAC3H,EAA7C,EACGiD,SADH,CACa,UAAA3D,IAAI,EAAI,CAClB,CAFH,EAGI,UAAAuI,GAAG,EAAE;AACH,sBAAIA,GAAG,CAACC,MAAJ,IAAc,GAAlB,EAAuB;AACrB,2BAAI,CAAC7F,KAAL,CAAWc,IAAX,CAAgB,6BAAhB,EAA+C,IAA/C,EAAqD;AACnDkC,8BAAQ,EAAE,IADyC;AAEnDC,sCAAgB,EAAE,KAFiC;AAGnDC,wCAAkB,EAAE;AAH+B,qBAArD;AAKD;;AAED,yBAAI,CAACoK,YAAL;AAEH,iBAdH;AAeD;AAEF,aApBH;AAqBD;;;iBACD,kBAAM;AAEJ,iBAAKzN,MAAL,CAAYwD,QAAZ,CAAqB,CAAC,mBAAD,CAArB;AACD;;;iBACD,sBAAa3B,KAAb,EAAmBvD,IAAnB,EAAuB;AACrB,mBAAOA,IAAI,CAACoC,GAAZ;AACD;;;;;;;yBAzKUiM,8B,EAA8B,uH,EAAA,wI,EAAA,2I,EAAA,sK,EAAA,gI;AAAA,O;;;cAA9BA,8B;AAA8B,mD;AAAA;AAAA;;;sEAY9B,8D,EAAO,I;;sEACP,wE,EAAY,I;;;;;;;;;;;;;;;;;;AC/BzB;;AAAsB;;AAA0B;;AAA4D;;AAAQ;;AAClH;;AACE;;AAAwB;AAAA,qBAAS,IAAA3I,MAAA,EAAT;AAAiB,aAAjB;;AACpB;;AAAU;;AAAU;;AACtB;;AACA;;AACC;;AACD;;AACJ;;AAIA;;AACC;;AAEC;;AACE;;AACE;;AACE;;AACE;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AAEF;;AACF;;AACF;;AACG;;AACA;;AACE;;AAAU;;AAAS;;AACrB;;AACA;;AACE;;AACC;;AAGA;AAAA,qBAAU,IAAA4J,gBAAA,QAAV;AAAkC,aAAlC;;AAHA;;AAIA;;AACA;AAAA;;AAAA;;AAAA,qBAAS,WAAT;AAA4B,aAA5B;;AACgB;;AAAM;;AACvB;;AAEA;;AAAsB;AAAA,qBAAS,IAAAC,OAAA,EAAT;AAAkB,aAAlB;;AACpB;;AAAM;;AAAQ;;AAChB;;AACF;;AACH;;AACD;;AACE;;AACE;;AACE;;AACE;;AAAW;;AAAS;;AACpB;;AAAsC;AAAA;AAAA;;AAEpC;;AAAsB;;AAAM;;AAC5B;;AAGF;;AACF;;AACF;;AACA;;AACE;;AACE;;AAAW;;AAAM;;AACjB;;AAA2B;AAAA;;AAAA;;AAAA,qBAAS,IAAA1J,QAAA,mBAAT;AAAwC,aAAxC;;AAA3B;;AAEA;;AAAoB;;AAAM;;AAC5B;;AACF;;AACA;;AACE;;AAAqC;AAAA,qBAAS,IAAA2J,WAAA,EAAT;AAAsB,aAAtB;;AAA8C;;AAAY;;AACjG;;AACA;;AACC;;AAAsD;AAAA,qBAAS,IAAA3H,MAAA,EAAT;AAAiB,aAAjB;;AAA8D;;AAEhH;;AACN;;AACD;;AACF;;AACA;;AACE;;AAA4D;AAAA,qBAAiB,IAAA9B,kBAAA,QAAjB;AAA2C,aAA3C;;AAE1D;;AACE;;AAEA;;AACF;;AAEA;;AACE;;AAEA;;AACF;;AAEA;;AACE;;AAEA;;AACF;;AACA;;AACE;;AAEA;;AACF;;AACA;;AACE;;AAEA;;AACF;;AACA;;AACE;;AAEA;;AACF;;AAEA;;AACE;;AACA;;AAcF;;AAEA;;AACA;;AACF;;AACA;;AACF;;AACD;;;;;;AA9G6B;;AAAA;;AAwBkB;;AAAA;;AAGL;;AAAA,oGAAkB,cAAlB,EAAkB,gBAAlB;;AAyBb;;AAAA;;AAqDP;;AAAA;;AACa;;AAAA;;AAEjB;;AAAA;;;;;;;;;wEDzHPsI,8B,EAA8B;gBAL1C,uDAK0C;iBALhC;AACT/M,oBAAQ,EAAE,4BADD;AAETC,uBAAW,EAAE,yCAFJ;AAGTC,qBAAS,EAAE,CAAC,yCAAD;AAHF,W;AAKgC,U;;;;;;;;;;;;;AAEjBwE,mBAAS,EAAE,CAAF;kBAAhC,uDAAgC;mBAAtB,W;AAAsB,WAAE,C;AAUftD,cAAI,EAAE,CAAF;kBAAvB,uDAAuB;mBAAb,8D;AAAa,WAAE,C;AACDD,mBAAS,EAAE,CAAF;kBAAjC,uDAAiC;mBAAvB,wE;AAAuB,WAAE;;;;;;;;;;;;;;;;;;;AE/BtC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACAkG;;AAAsB;;AAAG;;;;;;AAAO;;AAAqB;;AAAI;;;;;;AAKvJ;;AAAqC;;AAAsB;;;;;;AAC3D;;AAAoC;;AAAuB;;;;;;AAiCnC;;AACI;;AACJ;;;;;;AAeA;;AACI;;AACJ;;;;;;AAIR;;AACI;;AAAW;;AAAuB;;AAClC;;AACI;;AAII;;AAAsC;;AAAI;;AAC1C;;AAA4B;;AAAG;;AACnC;;AACJ;;AAEJ;;;;;;AARQ;;AAAA,8FAAmB,aAAnB,EAAmB,kDAAnB;;AAGgB;;AAAA;;AACA;;AAAA;;;;;;AAehB;;AACI;;AACJ;;;;;;AAZR;;AACI;;AAAW;;AAAuB;;AAClC;;AACI;;AAOA;;AAGJ;;AAEJ;;;;;;AARY;;AAAA;;AAGQ;;AAAA;;;;;;AAgER;;AACI;;AACJ;;;;;;AAFwE;;AACpE;;AAAA;;;;;;AAGR;;AACI;;AACJ;;;;;;;;AAfR;;AACI;;AAAW;;AAAS;;AACpB;;AACI;;AAGI;AAAA;;AAAA;;AAAA;AAAA;;AAGA;;AAGJ;;AACA;;AAGJ;;AACJ;;;;;;AAb2B;;AAAA,8FAAmB,aAAnB,EAAmB,4CAAnB;;AAKiB;;AAAA,gGAAa,cAAb,EAAa,wBAAb;;AAIxB;;AAAA;;;;;;AAeZ;;AACI;;AACJ;;;;;;AAZR;;AACI;;AAAW;;AAAS;;AACpB;;AACI;;AAOA;;AAGJ;;AAEJ;;;;;;AARY;;AAAA;;AAGQ;;AAAA;;;;;;AAgBR;;AACI;;AACJ;;;;;;AAFkE;;AAC9D;;AAAA;;;;;;AAGR;;AACI;;AACJ;;;;;;;;AAfR;;AACI;;AAAW;;AAAO;;AAClB;;AACI;;AAGI;AAAA;;AAAA;;AAAA;AAAA;;AAGA;;AAGJ;;AACA;;AAGJ;;AACJ;;;;;;AAdoB;;AAAA,+FAAmB,aAAnB,EAAmB,2CAAnB;;AAMsB;;AAAA,8FAAU,cAAV,EAAU,uBAAV;;AAItB;;AAAA;;;;;;AAeZ;;AACI;;AACJ;;;;;;AAZR;;AACI;;AAAW;;AAAO;;AAClB;;AACI;;AAOA;;AAGJ;;AAEJ;;;;;;AARY;;AAAA;;AAGQ;;AAAA;;;;;;AAcR;;AACI;;AACJ;;;;;;AAF+D;;AAC3D;;AAAA;;;;;;AAGR;;AACI;;AACJ;;;;;;AAdR;;AACI;;AAAW;;AAAM;;AACjB;;AACI;;AAKI;;AAGJ;;AACA;;AAGJ;;AACJ;;;;;;AAZwB;;AAAA,+FAAmB,aAAnB,EAAmB,0CAAnB;;AAIiB;;AAAA,8FAAU,cAAV,EAAU,sBAAV;;AAIrB;;AAAA;;;;;;AAeZ;;AACI;;AACJ;;;;;;AAZR;;AACI;;AAAW;;AAAO;;AAClB;;AACI;;AAOA;;AAGJ;;AAEJ;;;;;;AARY;;AAAA;;AAGQ;;AAAA;;;;;;AAsBZ;;AACI;;AAAO;;AAAoB;;AAC7B;;;;;;AAEA;;AACE;;AAAO;;AAA2B;;AACpC;;;;;;AAoBF;;AACI;;AAAO;;AAA0B;;AACrC;;;;;;AACA;;AACI;;AAAO;;AAAgC;;AAC3C;;;;;;AAKiB;;;;;;AAOjB;;AACI;;AAAO;;AAA+B;;AAC1C;;;;;;;;AAOV;;AAIE;AAAA;;AAAA;;AAAA;AAAA;;AAEA;;AACF;;;;;;AALE;;;;;;;;AAOA;;AAA6I;AAAA;;AAAA;;AAAA;AAAA;;AAC1I;;AACD;;;;;;AAFsE;;;;;;;;AAOxE;;AAAwE;AAAA;;AAAA;;AAAA;AAAA;;AACtE;;AACF;;;;;;;;AAGA;;AAAwE;AAAA;;AAAA;;AAAA,wCAAsB,MAAtB;AAA4B,WAA5B;;AACtE;;AACF;;;;;;AAHF;;AACE;;AAES;;AACX;;;;;;AAJuE;;AAC5D;;AAAA;;;;;;;;AAKT;;AAAuE;AAAA;;AAAA;;AAAA,wCAAsB,MAAtB;AAA4B,WAA5B;;AACrE;;AACF;;;;;;AAHF;;AACE;;AAES;;AACX;;;;;;AAJwF;;AAC7E;;AAAA;;;;;;;;AAKT;;AAAuE;AAAA;;AAAA;;AAAA,wCAAsB,OAAtB;AAA6B,WAA7B;;AACrE;;AACF;;;;;;AAHF;;AACE;;AAES;;AACX;;;;;;AAJuF;;AAC5E;;AAAA;;;;;;;;AAKT;;AAAuE;AAAA;;AAAA;;AAAA,wCAAsB,QAAtB;AAA8B,WAA9B;;AACrE;;AACF;;;;;;AAHF;;AACE;;AAEU;;AACZ;;;;;;AAJ+C;;AACpC;;AAAA;;;;;;AAqB7B;;AACI;;AACF;;;;UDhWWgN,yB;AAmBX,2CAEUrQ,EAFV,EAGUC,UAHV,EAIUqC,MAJV,EAKUG,KALV,EAMUmG,GANV,EAOUE,KAPV,EAQWD,WARX,EASWlG,EATX,EASiC;AAAA;;AAPvB,eAAA3C,EAAA,GAAAA,EAAA;AACA,eAAAC,UAAA,GAAAA,UAAA;AACA,eAAAqC,MAAA,GAAAA,MAAA;AACA,eAAAG,KAAA,GAAAA,KAAA;AACA,eAAAmG,GAAA,GAAAA,GAAA;AACA,eAAAE,KAAA,GAAAA,KAAA;AACC,eAAAD,WAAA,GAAAA,WAAA;AACA,eAAAlG,EAAA,GAAAA,EAAA;AAtBX,eAAA2N,SAAA,GAAsB,EAAtB;AACA,eAAAC,MAAA,GAAmB,EAAnB;AACA,eAAAC,MAAA,GAAmB,EAAnB;AAEA,eAAAhI,MAAA,GAAkB,KAAlB;AACA,eAAAiI,UAAA,GAAsB,IAAtB;AACA,eAAAC,MAAA,GAAkB,IAAlB;AACA,eAAAC,IAAA,GAAO,KAAP;AACA,eAAAC,OAAA,GAAoB,KAApB;AAGA,eAAA7H,WAAA,GAAqB,IAArB;AAaK;;;;iBAEL,oBAAW;AAAA;;AACT,iBAAKD,KAAL,CAAWE,aAAX,CAAyBvF,SAAzB,CAAmC,UAACwF,MAAD,EAAiB;AAClD,kBAAGA,MAAM,CAACC,GAAP,CAAW,QAAX,KAAwB,KAA3B,EAAiC;AAC/B,uBAAI,CAACuH,UAAL,GAAkB,KAAlB;AACA,uBAAI,CAACC,MAAL,GAAa,KAAb;AACA,uBAAI,CAACE,OAAL,GAAe,IAAf;AACD,eAJD,MAKK,IAAG3H,MAAM,CAACC,GAAP,CAAW,QAAX,KAAwB,IAA3B,EAAgC;AACnC,uBAAI,CAACuH,UAAL,GAAkB,IAAlB;AACA,uBAAI,CAACC,MAAL,GAAa,IAAb;AACA,uBAAI,CAACE,OAAL,GAAe,KAAf;AACD,eAJI,MAKA,IAAG3H,MAAM,CAACC,GAAP,CAAW,QAAX,KAAwB,OAA3B,EAAmC;AACtC,uBAAI,CAACuH,UAAL,GAAkB,KAAlB;AACA,uBAAI,CAACC,MAAL,GAAa,KAAb;AACA,uBAAI,CAACE,OAAL,GAAe,KAAf;AACD,eAJI,MAKA,IAAG3H,MAAM,CAACC,GAAP,CAAW,QAAX,KAAwB,IAA3B,EAAgC;AACnC,uBAAI,CAACwH,MAAL,GAAa,KAAb;AACA,uBAAI,CAACD,UAAL,GAAkB,KAAlB;AACA,uBAAI,CAACG,OAAL,GAAe,IAAf;AACD;;AACD,kBAAG3H,MAAM,CAACC,GAAP,CAAW,IAAX,CAAH,EAAoB;AAClB,uBAAI,CAACV,MAAL,GAAc,IAAd;AACA,uBAAI,CAAChI,EAAL,GAAUyI,MAAM,CAACC,GAAP,CAAW,IAAX,CAAV;;AACA,uBAAI,CAACjJ,UAAL,CAAgB4Q,cAAhB,CAA+B5H,MAAM,CAACC,GAAP,CAAW,IAAX,CAA/B,EAAiDzF,SAAjD,CAA2D,UAACyE,IAAD,EAAS;AACjE,yBAAI,CAACzH,aAAL,CAAmByH,IAAnB;;AACA,sBAAIA,IAAI,CAACtE,UAAL,IAAiB,GAArB,EAA0B;AACzBsE,wBAAI,CAAC+B,QAAL,GAAe,EAAf;AACA/B,wBAAI,CAAC8B,MAAL,GAAY,EAAZ;AACD;;AACA,yBAAI,CAACZ,YAAL,GAAoBlB,IAApB;AACFnD,yBAAO,CAACC,GAAR,CAAY,OAAI,CAACoE,YAAjB;;AACE,yBAAI,CAACP,WAAL,CAAiBQ,eAAjB,CAAiC,OAAI,CAACD,YAAtC;;AACA,yBAAI,CAACP,WAAL,CAAiBS,cAAjB;AACF,iBAVD;AAWD,eAdD,MAeI;AACF,uBAAI,CAACP,WAAL,GAAiB,KAAjB;;AACA,uBAAI,CAACtI,aAAL,CAAmB,EAAnB;AACD;AACF,aAxCD;AA0CA,iBAAKA,aAAL,CAAmB,EAAnB;AACA,iBAAKqQ,cAAL,CAAoB,SAApB;AACA,iBAAK5N,YAAL,GAAoB,KAAKP,EAAL,CAAQQ,OAAR,CAAgB,YAAhB,EAA8BoG,QAAlD;AACD;;;iBACD,uBAAc3I,IAAd,EAAoB;AAClB,iBAAKmQ,iBAAL,GAAyB,KAAK/Q,EAAL,CAAQc,KAAR,CAAc;AACrCkG,wBAAU,EAAE,CAACpG,IAAI,CAACoG,UAAL,IAAmB,EAApB,EAAwB,0DAAWhG,QAAnC,CADyB;AAErCgQ,wBAAU,EAAE,CAACpQ,IAAI,CAACoQ,UAAL,IAAmB,EAApB,EAAwB,0DAAWhQ,QAAnC,CAFyB;AAGrC;AACA;AACA;AACAuJ,qBAAO,EAAE,CAAC3J,IAAI,CAAC2J,OAAL,IAAgB,EAAjB,CAN4B;AAOrC0G,2BAAa,EAAE,CAACrQ,IAAI,CAACqQ,aAAL,IAAsB,EAAvB,CAPsB;AAQrCC,oBAAM,EAAE,CAACtQ,IAAI,CAACsQ,MAAL,IAAe,EAAhB,EAAoB,0DAAWC,OAAX,CAAmB,CAAC,0DAAWnQ,QAAZ,EAAqB,0DAAWS,OAAX,CAAmB,6BAAnB,CAArB,CAAnB,CAApB,CAR6B;AASrC2P,uBAAS,EAAE,CAACxQ,IAAI,CAACwQ,SAAL,IAAkB,EAAnB,EAAsB,0DAAW3P,OAAX,CAAmB,6BAAnB,CAAtB,CAT0B;AAUrC4P,qBAAO,EAAE,CAACzQ,IAAI,CAACyQ,OAAL,IAAgB,EAAjB,EAAoB,0DAAWrQ,QAA/B,CAV4B;AAWrCsN,mBAAK,EAAE,CAAC1N,IAAI,CAAC0N,KAAL,IAAc,EAAf,EAAkB,0DAAWtN,QAA7B,CAX8B;AAYrCgF,kBAAI,EAAE,CAACpF,IAAI,CAACoF,IAAL,IAAa,EAAd,EAAiB,0DAAWhF,QAA5B,CAZ+B;AAarCkC,0BAAY,EAAE,CAACtC,IAAI,CAACsC,YAAL,IAAqB,EAAtB,CAbuB;AAcrC1C,gBAAE,EAAE,CAACI,IAAI,CAACJ,EAAL,IAAW,EAAZ,CAdiC;AAerC8Q,qBAAO,EAAE,CAAC1Q,IAAI,CAAC0Q,OAAL,IAAgB,EAAjB,EAAqB,0DAAWH,OAAX,CAAmB,CAAC,0DAAWnQ,QAAZ,EAAqB,0DAAWS,OAAX,CAAmB,6BAAnB,CAArB,CAAnB,CAArB;AAf4B,aAAd,CAAzB;;AAkBA,gBAAGb,IAAI,CAACyQ,OAAR,EAAgB;AACd,mBAAKE,YAAL,CAAkB3Q,IAAI,CAACyQ,OAAvB;AACA,mBAAKG,WAAL,CAAiB5Q,IAAI,CAAC0N,KAAtB;AACD;AAEF;;;iBAED,wBAAetL,GAAf,EAA4B;AAAA;;AAC1B,iBAAK/C,UAAL,CAAgBwR,eAAhB,GAAkChO,SAAlC,CAA4C,UAAC3D,IAAD,EAAe;AACzDiF,qBAAO,CAACC,GAAR,CAAY,MAAZ,EAAmBlF,IAAnB;;AACA,mBAAI,IAAI4D,CAAC,GAAC,CAAV,EAAaA,CAAC,GAAC5D,IAAI,CAAC6D,MAApB,EAA2BD,CAAC,EAA5B,EAA+B;AAC7B,oBAAG5D,IAAI,CAAC4D,CAAD,CAAJ,CAAQE,UAAR,KAAqB,GAAxB,EAA4B;AAC1BmB,yBAAO,CAACC,GAAR,CAAYlF,IAAI,CAAC4D,CAAD,CAAhB;;AACA,yBAAI,CAAC4M,SAAL,CAAe3E,IAAf,CAAoB7L,IAAI,CAAC4D,CAAD,CAAJ,CAAQgO,WAA5B;;AACA3M,yBAAO,CAACC,GAAR,CAAY,OAAI,CAACsL,SAAjB;AACD;AACF,eARwD,CASzD;;AACD,aAVD;AAWD;;;iBAED,sBAAaoB,WAAb,EAAwB;AAAA;;AACtB,iBAAKzR,UAAL,CAAgBwR,eAAhB,GAAkChO,SAAlC,CAA4C,UAAC3D,IAAD,EAAe;AACzD,mBAAI,IAAI4D,CAAC,GAAC,CAAV,EAAaA,CAAC,GAAC5D,IAAI,CAAC6D,MAApB,EAA2BD,CAAC,EAA5B,EAA+B;AAC7B,oBAAG5D,IAAI,CAAC4D,CAAD,CAAJ,CAAQgO,WAAR,KAAwBA,WAA3B,EAAuC;AACrC,yBAAI,CAACzR,UAAL,CAAgB0R,iBAAhB,CAAkC7R,IAAI,CAAC4D,CAAD,CAAJ,CAAQlD,EAA1C,EAA8CiD,SAA9C,CAAwD,UAACyE,IAAD,EAAe;AACrE,yBAAI,IAAIxE,EAAC,GAAC,CAAV,EAAaA,EAAC,GAACwE,IAAI,CAACvE,MAApB,EAA2BD,EAAC,EAA5B,EAA+B;AAC7B,0BAAGwE,IAAI,CAACxE,EAAD,CAAJ,CAAQE,UAAR,KAAqB,GAAxB,EAA4B;AAC1B,+BAAI,CAAC2M,MAAL,CAAY5E,IAAZ,CAAiBzD,IAAI,CAACxE,EAAD,CAAJ,CAAQkO,SAAzB;AACD;AACF;AACF,mBAND;;AAOA;AACD;AACF;AACF,aAbD;AAcC;;;iBACH,qBAAYtD,KAAZ,EAAwB;AAAA;;AACtB,gBAAI0C,UAAU,GAAG,MAAjB;AACA,iBAAK/Q,UAAL,CAAgB4R,kBAAhB,CAAmCb,UAAnC,EAA+C1C,KAA/C,EAAsD7K,SAAtD,CAAgE,UAAC3D,IAAD,EAAU;AACxE,qBAAI,CAAC0Q,MAAL,GAAc1Q,IAAd;AACD,aAFD;AAGD;;;iBAED,sBAAa4K,SAAb,EAAsB;AAAA;;AACpB,+DAAKC,IAAL,CACE;AACE;AACAC,kBAAI,EAAE,uBAAsBF,SAAtB,GAAiC,UAAjC,GAA8C,0BAFtD;AAGEG,8BAAgB,EAAE,IAHpB;AAIEC,gCAAkB,EAAE,SAJtB;AAKEC,+BAAiB,EAAE,MALrB;AAME;AACAC,8BAAgB,EAAE,IAPpB;AAQEC,+BAAiB,EAAE,KARrB;AAQ4B,sBAAQ;AARpC,aADF,EAWEC,IAXF,CAWQ,UAAAC,MAAM,EAAI;AAChB,kBAAGA,MAAM,CAACC,WAAP,IAAoB,IAAvB,EAA4B;AAC1B,uBAAI,CAACnL,UAAL,CAAgB6R,YAAhB,CAA6B,OAAI,CAAC1I,YAAL,CAAkB5I,EAA/C,EACCiD,SADD,CACW,UAAA3D,IAAI,EAAI,CAClB,CAFD,EAGA,UAAAuI,GAAG,EAAE;AACH,sBAAIA,GAAG,CAACC,MAAJ,IAAc,GAAlB,EAAuB;AACrB,2BAAI,CAAC7F,KAAL,CAAWc,IAAX,CAAgB,6BAAhB,EAA+C,IAA/C,EAAqD;AACnDkC,8BAAQ,EAAE,IADyC;AAEnDC,sCAAgB,EAAE,KAFiC;AAGnDC,wCAAkB,EAAE;AAH+B,qBAArD;AAKD;;AACD,yBAAI,CAACrD,MAAL,CAAYwD,QAAZ,CAAqB,iCAArB;AAEH,iBAbC;AAcD;AAAC,aA3BJ;AA+BD;;;iBACD,sBAAU;AACR,iBAAKiD,WAAL,GAAiB,KAAjB;AACD;;;iBAED,sBAAa2B,SAAb,EAAwB;AAAA;;AACtB,+DAAKC,IAAL,CACE;AACE;AACAC,kBAAI,EAAE,uBAAsBF,SAAtB,GAAiC,UAAjC,GAA8C,0BAFtD;AAGEG,8BAAgB,EAAE,IAHpB;AAIEC,gCAAkB,EAAE,SAJtB;AAKEC,+BAAiB,EAAE,MALrB;AAME;AACAC,8BAAgB,EAAE,IAPpB;AAQEC,+BAAiB,EAAE,KARrB;AAQ4B,sBAAQ;AARpC,aADF,EAWEC,IAXF,CAWQ,UAAAC,MAAM,EAAI;AAChB,kBAAGA,MAAM,CAACC,WAAP,IAAoB,IAAvB,EAA4B;AAC1B,oBAAI7K,OAAO,GAAQ,EAAnB;AACAA,uBAAO,CAACC,EAAR,GAAa,OAAI,CAACA,EAAlB;AACAD,uBAAO,CAACmK,SAAR,GAAoBA,SAApB;AACAnK,uBAAO,CAAC2C,YAAR,GAAuB,OAAI,CAACA,YAA5B;;AACA,uBAAI,CAACjD,UAAL,CAAgB8R,qBAAhB,CAAsCxR,OAAtC,EAA+CkD,SAA/C,CAAyD,UAAC3D,IAAD,EAAU;AACjE,sBAAGA,IAAI,CAAC8D,UAAL,IAAiB,GAApB,EAAyB;AACvB9D,wBAAI,CAACmK,QAAL,GAAe,EAAf;AACAnK,wBAAI,CAACkK,MAAL,GAAY,EAAZ;AACD;;AACD,yBAAI,CAACZ,YAAL,GAAoBtJ,IAApB;;AACA,yBAAI,CAAC+I,WAAL,CAAiBQ,eAAjB,CAAiC,OAAI,CAACD,YAAtC;;AACA,yBAAI,CAACP,WAAL,CAAiBS,cAAjB;;AACA,sBAAIpD,OAAO,GAAG,EAAd;;AACA,0BAAQwE,SAAR;AACE,yBAAK,MAAL;AACExE,6BAAO,GAAG,QAAV;AACA;;AACF,yBAAK,OAAL;AACEA,6BAAO,GAAG,QAAV;AACA;;AACF,yBAAK,MAAL;AACEA,6BAAO,GAAG,YAAV;AACA;;AACF;AACE;AAXJ;;AAaA,yBAAI,CAACzD,KAAL,CAAWc,IAAX,kBAA0B2C,OAA1B,oBAAkD,IAAlD,EAAwD;AACtDT,4BAAQ,EAAE,IAD4C;AAEtDC,oCAAgB,EAAE,KAFoC;AAGtDC,sCAAkB,EAAE;AAHkC,mBAAxD;AAKD,iBA3BD;AA4BD;AACF,aA9CD;AAgDD;;;iBAED,mBAAUnE,KAAV,EAAsB;AACpB,gBAAMC,OAAO,GAAG,OAAhB;AACA,gBAAIC,SAAS,GAAGC,MAAM,CAACC,YAAP,CAAoBJ,KAAK,CAACK,QAA1B,CAAhB;;AACA,gBAAI,CAACJ,OAAO,CAACK,IAAR,CAAaJ,SAAb,CAAL,EAA8B;AAC5BF,mBAAK,CAACO,cAAN;AACD;AACF;;;iBACD,8BAAqBP,KAArB,EAA4B;AAC1B,gBAAI4L,GAAG,GAAGzL,MAAM,CAACC,YAAP,CAAoBJ,KAAK,CAAC6L,OAA1B,CAAV;;AACA,gBAAI,cAAcvL,IAAd,CAAmBsL,GAAnB,CAAJ,EAA6B;AAC3B,qBAAO,IAAP;AACD,aAFD,MAEO;AACL5L,mBAAK,CAACO,cAAN;AACA,qBAAO,KAAP;AACD;AACF;;;iBAED,kBAAS;AAAA;;AACP,iBAAKgP,iBAAL,CAAuBzP,KAAvB,CAA6B4B,YAA7B,GAA4C,KAAKA,YAAjD;AACA,iBAAKjD,UAAL,CAAgB+R,mBAAhB,CAAoC,KAAKjB,iBAAL,CAAuBzP,KAA3D,EAAkEmC,SAAlE,CAA4E,UAAA3D,IAAI,EAAI;AAClF,kBAAGA,IAAI,IAAI,IAAR,IAAgB,OAAI,CAAC0I,MAAL,IAAe,IAAlC,EAAuC;AACrC,uBAAI,CAAC/F,KAAL,CAAWc,IAAX,CAAgB,eAAhB,EAAiC,IAAjC,EAAuC;AACrCkC,0BAAQ,EAAE,IAD2B;AAErCC,kCAAgB,EAAE,KAFmB;AAGrCC,oCAAkB,EAAE;AAHiB,iBAAvC;;AAMA,uBAAI,CAACiD,GAAL,CAAS4B,YAAT;AACD,eARD,MASK,IAAG1K,IAAI,IAAI,IAAR,IAAgB,OAAI,CAAC0I,MAAL,IAAe,IAAlC,EAAuC;AAC1C,uBAAI,CAAC/F,KAAL,CAAWc,IAAX,CAAgB,aAAhB,EAA+B,IAA/B,EAAqC;AACnCkC,0BAAQ,EAAE,IADyB;AAEnCC,kCAAgB,EAAE,KAFiB;AAGnCC,oCAAkB,EAAE;AAHe,iBAArC;;AAMA,uBAAI,CAACiD,GAAL,CAAS4B,YAAT;AAED;AACF,aApBD;AAsBA,iBAAKlI,MAAL,CAAYwD,QAAZ,CAAqB,iCAArB;AACD;;;iBAGD,kBAAS;AACP,iBAAKxD,MAAL,CAAYwD,QAAZ,CAAqB,iCAArB;AACD;;;iBACD,2BAAkB3B,KAAlB,EAAwBvD,IAAxB,EAA4B;AAC1B,mBAAOA,IAAP;AACD;;;iBACD,yBAAgBuD,KAAhB,EAAsBvD,IAAtB,EAA0B;AACxB,mBAAOA,IAAP;AACD;;;iBACD,wBAAeuD,KAAf,EAAqBvD,IAArB,EAAyB;AACvB,mBAAOA,IAAP;AACD;;;;;;;yBA9RUyP,yB,EAAyB,2H,EAAA,2I,EAAA,uH,EAAA,wI,EAAA,gI,EAAA,+H,EAAA,6I,EAAA,0J;AAAA,O;;;cAAzBA,yB;AAAyB,+C;AAAA;AAAA;;;;;;;;;;;;;;;ACjBtC;;AAAsB;;AAA0B;;AAAkD;;AAAgC;;AAAiC;;AAAmB;;AAAQ;;AAC9L;;AACI;;AAAwB;AAAA,qBAAS,IAAA/J,MAAA,EAAT;AAAiB,aAAjB;;AACpB;;AAAU;;AAAU;;AACxB;;AACA;;AACA;;AAgBJ;;AAEA;;AACI;;AACI;;AAAsC;AAAA,qBAAY,IAAAtE,MAAA,EAAZ;AAAoB,aAApB;;AAClC;;AAAI;;AAAkB;;AAElB;;AACI;;AACI;;AAAW;;AAAa;;AACxB;;AACI;;AAGI;AAAA,qBAAW,IAAAiQ,SAAA,QAAX;AAA4B,aAA5B;;AAHJ;;AAMA;;AAGJ;;AACJ;;AAEA;;AACI;;AAAW;;AAAa;;AACxB;;AACI;;AAII;AAAA,qBAAW,IAAAC,oBAAA,QAAX;AAAuC,aAAvC;;AAJJ;;AAQA;;AAGJ;;AACJ;;AAEA;;AAaA;;AAiBJ;;AACA;;AA4CA;;AAAI;;AAAmB;;AAEvB;;AACI;;AAkBA;;AAiBA;;AAkBA;;AAgBA;;AAiBA;;AAgBA;;AACJ;;AACI;;AACI;;AAAW;;AAAS;;AACpB;;AACI;;AAOA;AAAA,qBAAY,IAAAD,SAAA,QAAZ;AAA6B,aAA7B;;AAPA;;AAWA;;AAIE;;AAGN;;AACJ;;AACJ;;AAEA;;AAAI;;AAAyB;;AAG7B;;AACI;;AACI;;AAAW;;AAAe;;AAC1B;;AACI;;AAEI;AAAA,qBAAW,IAAAA,SAAA,QAAX;AAA4B,aAA5B;;AAFJ;;AAQA;;AAGA;;AAGJ;;AACJ;;AAEA;;AACI;;AAAW;;AAAU;;AAA+C;;AACpE;;AACI;;AAEI;AAAA,qBAAW,IAAAA,SAAA,QAAX;AAA4B,aAA5B;;AAFJ;;AAKA;;AAGJ;;AACJ;;AACJ;;AAEJ;;AACI;;AACE;;AAQA;;AACE;;AAEW;;AACb;;AAGA;;AACE;;AAES;;AACX;;AACA;;AAKA;;AAKA;;AAKA;;AAMA;;AAIE;AAAA,qBAAS,IAAA3L,MAAA,EAAT;AAAiB,aAAjB;;AAEA;;AACF;;AACF;;AACF;;AACN;;AAGJ;;AACJ;;AAEA;;;;AA/WyG;;AAAA;;AAAgC;;AAAA;;AAKhI;;AAAA;;AACA;;AAAA;;AAoBK;;AAAA;;AAQc;;AAAA,kGAAwB,aAAxB,EAAwB,4CAAxB;;AAKY;;AAAA;;AAYR;;AAAA,kGAAwB,aAAxB,EAAwB,4CAAxB;;AAKQ;;AAAA;;AAMe;;AAAA;;AAaA;;AAAA;;AAiEA;;AAAA;;AAkBA;;AAAA;;AAiBA;;AAAA;;AAkBA;;AAAA;;AAgBA;;AAAA;;AAiBA;;AAAA;;AAsB3B;;AAAA,kGAAwB,aAAxB,EAAwB,yCAAxB;;AAUY;;AAAA;;AAIE;;AAAA;;AAiBK;;AAAA,kGAAwB,aAAxB,EAAwB,wCAAxB;;AAKP;;AAAA;;AAGA;;AAAA;;AAOY;;AAAA;;AAGO;;AAAA,kGAAwB,aAAxB,EAAwB,2CAAxB;;AAInB;;AAAA;;AAUH;;AAAA;;AAOd;;AAAA;;AACM;;AAAA;;AAMN;;AAAA;;AACM;;AAAA;;AAIL;;AAAA;;AAKA;;AAAA;;AAKA;;AAAA;;AAKA;;AAAA;;AAsBlB;;AAAA;;;;;;;;;wED9VO+J,yB,EAAyB;gBALrC,uDAKqC;iBAL3B;AACTnO,oBAAQ,EAAE,wBADD;AAETC,uBAAW,EAAE,qCAFJ;AAGTC,qBAAS,EAAE,CAAC,qCAAD;AAHF,W;AAK2B,U;;;;;;;;;;;;;;;;;;;AAIb+P,kBAAQ;kBAA9B,uDAA8B;mBAApB,U;AAAoB;;;;;;;;;;;;;;;;;;;AErBjC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAeA,UAAMC,QAAQ,GAAG,sEACf,CACE,kEAAM;AACJC,eAAO,EAAE,aADL;AAEJC,iBAAS,EAAE;AAFP,OAAN,CADF,EAKE,oEAAQ,uDAAR,EAAiE,kEAAM,GAAN,CAAjE,CALF,CADe,EAQf;AACErJ,cAAM,EAAE;AACNxD,kBAAQ,EAAE,OADJ;AAEN8M,eAAK,EAAE,KAFD;AAGNF,iBAAO,EAAE,GAHH;AAING,eAAK,EAAE,GAJD;AAKN/E,WAAC,EAAE,GALG;AAMNgF,WAAC,EAAE,GANG;AAONC,WAAC,EAAE;AAPG;AADV,OARe,CAAjB;AAqBO,UAAMC,iBAAiB,GAAG,CAC/B,oEAAQ,SAAR,EAAmB,CAAC,uEAAW,WAAX,EAAwB,CAAC,yEAAaP,QAAb,CAAD,CAAxB,CAAD,CAAnB,CAD+B,EAG/B,oEAAQ,WAAR,EAAqB,CACnB,kEACE,GADF,EAEE,kEAAM;AACJC,eAAO,EAAE,CADL;AAEJO,eAAO,EAAE;AAFL,OAAN,CAFF,CADmB,EAQnB,kEACE,GADF,EAEE,kEAAM;AACJP,eAAO,EAAE,CADL;AAEJO,eAAO,EAAE;AAFL,OAAN,CAFF,CARmB,EAenB,uEAAW,QAAX,EAAqB,oEAAQ,OAAR,CAArB,CAfmB,EAgBnB,uEAAW,QAAX,EAAqB,oEAAQ,OAAR,CAArB,CAhBmB,CAArB,CAH+B,CAA1B;;;;;;;;;;;;;;;;ACpCP;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;AC0CM;;AACC;;AACD;;;;;;AAF2D;;AAC1D;;AAAA;;;;;;AAoDD;;AAEC;;AAAI;;AAA+C;;AACpD;;;;;;AADK;;AAAA;;;;;;AAEL;;AAEC;;AAAI;;AAA+C;;AACpD;;;;;;AADK;;AAAA;;;;;;AAEL;;AAEC;;AAAI;;AAA+C;;AACpD;;;;;;AADK;;AAAA;;;;;;AAEL;;AAEC;;AAAI;;AAA+C;;AACpD;;;;;;AADK;;AAAA;;;;;;AAjCR;;AACC;;AACC;;AACC;;AACC;;AACC;;AAAI;;;;AAA6C;;AAClD;;AACA;;AACC;;AACC;;AAAoD;;AAAS;;AAC9D;;AACA;;AACC;;AAAsB;;AAAY;;AAClC;;AAAsB;;AAAe;;AACtC;;AAED;;AACD;;AAEA;;AAIA;;AAIA;;AAIA;;AAID;;AACD;;AACA;;AACD;;;;;;;;AAjCS;;AAAA;;AAGe;;AAAA;;AAW6B;;AAAA;;AAIA;;AAAA;;AAIA;;AAAA;;AAIA;;AAAA;;;;UD1F3CC,0B;AAQX,4CAA4C/S,IAA5C,EACSC,SADT,EACsE6I,GADtE,EAEUkK,WAFV,EAGUrQ,KAHV,EAIUE,EAJV,EAKSoE,MALT,EAKoC9G,UALpC,EAK4D;AAAA;;AALhB,eAAAH,IAAA,GAAAA,IAAA;AACnC,eAAAC,SAAA,GAAAA,SAAA;AAA6D,eAAA6I,GAAA,GAAAA,GAAA;AAC5D,eAAAkK,WAAA,GAAAA,WAAA;AACA,eAAArQ,KAAA,GAAAA,KAAA;AACA,eAAAE,EAAA,GAAAA,EAAA;AACD,eAAAoE,MAAA,GAAAA,MAAA;AAA2B,eAAA9G,UAAA,GAAAA,UAAA;AAXpC,eAAA8S,SAAA,GAAY,IAAI,0DAAJ,EAAZ;AACA,eAAAC,aAAA,GAAyB,KAAzB;AAYA,eAAAxK,MAAA,GAAkB,KAAlB;AAEA,eAAAyK,OAAA,GAAoB,CAAC,UAAD,EAAa,UAAb,EAAyB,MAAzB,EAAiC,QAAjC,CAApB;AAJ+D;;;;iBAM/D,oBAAQ;AAAA;;AACN,gBAAI,KAAKnT,IAAL,CAAUoT,IAAd,EAAoB;AAClB,mBAAKA,IAAL,GAAY,KAAKpT,IAAL,CAAUoT,IAAtB;AACD;;AAED,iBAAKC,uCAAL;AAEA,iBAAKC,eAAL,GAAuB,KAAKL,SAAL,CAAeM,YAAf,CAA4BC,IAA5B,CACrB,iEAAU,EAAV,CADqB,EAErB,2DAAI,UAAAhS,KAAK;AAAA,qBAAI,OAAI,CAACiS,OAAL,CAAajS,KAAb,CAAJ;AAAA,aAAT,CAFqB,CAAvB;;AAKA,gBAAIkS,MAAM,CAACC,IAAP,CAAY,KAAK3T,IAAL,CAAU4T,WAAtB,EAAmC/P,MAAnC,IAA6C,CAAjD,EAAoD;AAClD,mBAAKlD,aAAL,CAAmB,KAAKX,IAAL,CAAU4T,WAA7B;AACD,aAFD,MAEO;AACL,mBAAKjT,aAAL,CAAmB,EAAnB;AACD;AACF;;;iBACD,uBAAcG,IAAd,EAAoB;AAClB,iBAAK+S,gBAAL,GAAwB,KAAKb,WAAL,CAAiBhS,KAAjB,CAAuB;AAC7CT,sBAAQ,EAAE,CAACO,IAAI,CAACP,QAAL,IAAiB,EAAlB,CADmC;AAE7CD,wBAAU,EAAE,CAACQ,IAAI,CAACR,UAAL,IAAmB,EAApB,CAFiC;AAG7CwT,0BAAY,EAAE,CAAChT,IAAI,CAACgT,YAAL,IAAqB,EAAtB,CAH+B;AAI7C5M,wBAAU,EAAE,CAACpG,IAAI,CAACoG,UAAL,IAAmB,EAApB,CAJiC;AAK7C6M,yBAAW,EAAE,CAAC,EAAD,CALgC;AAM7CC,yBAAW,EAAE,CAAC,EAAD;AANgC,aAAvB,CAAxB;AAQD;;;iBAEO,iBAAQxS,KAAR,EAAqB;AAC3B,gBAAMkD,WAAW,GAAGlD,KAAK,CAACqD,WAAN,EAApB;AAEA,mBAAO,KAAKsO,OAAL,CAAa5O,MAAb,CAAoB,UAAA0P,MAAM;AAAA,qBAAIA,MAAM,CAACpP,WAAP,GAAqBJ,QAArB,CAA8BC,WAA9B,CAAJ;AAAA,aAA1B,CAAP;AACD;;;iBAED,gCAAuB;AACrB,iBAAKwO,aAAL,GAAqB,CAAC,KAAKA,aAA3B;AACD;;;iBAED,eAAMW,gBAAN,EAAwB;AACtB,iBAAKA,gBAAL,CAAsBzK,GAAtB,CAA0B,aAA1B,EAAyC8K,QAAzC,CAAkD,EAAlD;AACA,iBAAKL,gBAAL,CAAsBzK,GAAtB,CAA0B,aAA1B,EAAyC8K,QAAzC,CAAkD,EAAlD,EAFsB,CAGtB;AACA;AACA;AACA;AACA;;AACA,iBAAKhB,aAAL,GAAqB,KAArB;AACD;;;iBAKD,mDAA0C;AAAA;;AACxC,iBAAK/S,UAAL,CAAgBkT,uCAAhB,GACG1P,SADH,CACa,UAAAwQ,WAAW,EAAI;AACxB,qBAAI,CAACA,WAAL,GAAmBA,WAAnB;AACD,aAHH;AAID;;;iBAID,qBAAYN,gBAAZ,EAA8B;AAAA;;AAE5B,gBAAI,KAAK7T,IAAL,CAAUoU,MAAV,KAAqB,QAAzB,EAAmC;AACjC,mBAAK1L,MAAL,GAAc,IAAd;AACD,aAFD,MAEK;AACH,mBAAKA,MAAL,GAAc,KAAd;AACD;;AAEDzD,mBAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoC2O,gBAApC,EAAsD,KAAKT,IAA3D;AACA,iBAAKvQ,EAAL,CAAQ4F,OAAR,CAAgB,aAAhB,EAA8BoL,gBAAgB,CAACG,WAA/C;AACA,gBAAIK,OAAO,GAAU,EAArB;AACA,gBAAIC,YAAY,GAAG,mCAAM,CAAC,KAAKlB,IAAN,CAAN,CAAkBmB,MAAlB,CAAyB,YAAzB,CAAnB;AACA,gBAAI9T,OAAO,GAAG;AACZyG,wBAAU,EAAE2M,gBAAgB,CAAC3M,UADjB;AAEZ3G,sBAAQ,EAAEsT,gBAAgB,CAACtT,QAFf;AAGZD,wBAAU,EAAEuT,gBAAgB,CAACvT,UAHjB;AAIZwT,0BAAY,EAAED,gBAAgB,CAACC,YAJnB;AAKZC,yBAAW,EAAEF,gBAAgB,CAACE,WALlB;AAMZC,yBAAW,EAAEH,gBAAgB,CAACG,WANlB;AAOZQ,0BAAY,EAAEF;AAPF,aAAd;AASAD,mBAAO,CAACxI,IAAR,CAAapL,OAAb;AACAwE,mBAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BmP,OAA3B;AACA,iBAAKI,WAAL,GAAmBJ,OAAnB;AAEA,iBAAKlU,UAAL,CAAgB+H,0BAAhB,CAA2CmM,OAA3C,EAAoD,KAAK3L,MAAzD,EACG/E,SADH,CACa,UAAA3D,IAAI,EAAI;AACjB,qBAAI,CAACG,UAAL,CAAgBuU,cAAhB,CAA+B1U,IAA/B;;AACA,kBAAIA,IAAI,IAAI,IAAZ,EAAkB;AAChB,uBAAI,CAAC2U,WAAL,GAAmB,IAAnB;;AACA,uBAAI,CAAChS,KAAL,CAAWc,IAAX,CAAgB,eAAe,IAA/B,EAAqC,IAArC,EAA2C;AACzCkC,0BAAQ,EAAE,IAD+B;AAEzCC,kCAAgB,EAAE,KAFuB;AAGzCC,oCAAkB,EAAE;AAHqB,iBAA3C;;AAKA,uBAAI,CAACiD,GAAL,CAAS4B,YAAT;;AACA,uBAAI,CAAC+J,WAAL,GAAmBH,YAAnB;AACD;;AACD,qBAAI,CAACM,SAAL;AAED,aAfH,EAeK,UAAAC,KAAK,EAAI;AACV,qBAAI,CAACF,WAAL,GAAmB,IAAnB;;AACA,qBAAI,CAAChS,KAAL,CAAWc,IAAX,CAAgB,UAAGoR,KAAK,CAACA,KAAT,IAAmB,IAAnC,EAAyC,IAAzC,EAA+C;AAC7ClP,wBAAQ,EAAE,IADmC;AAE7CC,gCAAgB,EAAE,KAF2B;AAG7CC,kCAAkB,EAAE,OAHyB;AAI7CiP,0BAAU,EAAE;AAJiC,eAA/C;AAOD,aAxBH;AAyBD;;;iBACD,qBAAY;AACV,iBAAK7U,SAAL,CAAewB,KAAf,CAAqB;AACnB2E,qBAAO,EAAE,SADU;AAEnBqO,yBAAW,EAAE,KAAKA;AAFC,aAArB;AAID;;;;;;;yBAzIU1B,0B,EAA0B,gEAQjB,wEARiB,C,EAQF,sI,EAAA,gI,EAAA,2H,EAAA,wI,EAAA,0J,EAAA,mI,EAAA,2I;AAAA,O;;;cARxBA,0B;AAA0B,gD;AAAA,iB;AAAA,gB;AAAA,m9D;AAAA;AAAA;ACjBvC;;AAEC;;AACC;;AACC;;AACC;;AACC;;AAA6B;;AAAQ;;AACtC;;AACA;;AACC;;AAAoD;AAAA,qBAAS,IAAA6B,SAAA,EAAT;AAAoB,aAApB;;AAAsB;;AAAK;;AAChF;;AACD;;AACA;;AACC;;AAAI;;;;AAA6B;;AAClC;;AAEA;;AAqBA;;AACC;;AACC;;AAAW;;AAAmB;;AAC9B;;AACA;;AACC;;;;AAGD;;AACD;;AACA;;AACC;;AAAW;;AAAW;;AACtB;;AACD;;AACA;;AACC;;AAAsD;;AAAS;;AAC/D;;AACC;;AAAsB;;AAAY;;AAClC;;AAAkD;;AAAe;;AAClE;;AACD;;AACD;;AACA;;AACC;;AAAwB;AAAA,qBAAU,IAAAG,oBAAA,EAAV;AAAgC,aAAhC;;AAAkC;;AAAsB;;AACjF;;AACA;;AACC;;AACC;;AAAmB;AAAA,qBAAS,IAAAC,WAAA,4BAAT;AAA4C,aAA5C;;AAClB;;AAA0B;;AAAI;;AAC/B;;AACD;;AACA;;AACC;;AAAQ;AAAA,qBAAS,IAAAC,KAAA,4BAAT;AAAsC,aAAtC;;AACP;;AAAuB;;AAAa;;AACrC;;AACD;;AACD;;AAEA;;AACA;;AAuCD;;AACD;;AAED;;;;;;;;AAnHQ;;AAAA;;AAUA;;AAAA;;AA2BuD;;AAAA;;AAE1B;;AAAA;;AAO0B;;AAAA;;AAGhD;;AAAA;;AAGa;;AAAA;;AAqBA;;AAAA;;;;;;;;;;wED3DflC,0B,EAA0B;gBALtC,uDAKsC;iBAL5B;AACT3Q,oBAAQ,EAAE,yBADD;AAETC,uBAAW,EAAE,sCAFJ;AAGTC,qBAAS,EAAE,CAAC,sCAAD;AAHF,W;AAK4B,U;;;;oBAQxB,oD;qBAAO,wE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEzBtuDY;;AACE;;AACF;;;;;;AAFwE;;AACtE;;AAAA;;;;;;;;AAaV;;AACE;;AAA4C;AAAA;;AAAA;;AAAA;AAAA;;AAAwB;;AACpE;;AACF;;;;;;AAyDI;;AAA+F;;AAE/F;;;;;;AACA;;AAAqC;;AAAwB;;;;;;AAAxB;;AAAA;;;;;;AAIrC;;AAAgG;;AAChG;;;;;;AACA;;AAAqC;;AAAsB;;;;;;AAAtB;;AAAA;;;;;;AAIrC;;AAA2F;;AAC3F;;;;;;AACA;;AAAqC;;AAAwB;;;;;;AAAxB;;AAAA;;;;;;AAIrC;;AAA2F;;AAC3F;;;;;;AACA;;AAAqC;;AAAoB;;;;;;AAApB;;AAAA;;;;;;AAIrC;;AAAgG;;AAChG;;;;;;AACA;;AAAqC;;AAAwB;;;;;;AAAxB;;AAAA;;;;;;AAGrC;;AAAkG;;AAElG;;;;;;AACA;;AAAqC;;AAA0B;;;;;;AAA1B;;AAAA;;;;;;AAIrC;;AAAmC;;AAAM;;;;;;;;AACzC;;AACE;;AACC;;AAAgD;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA+B;;AAAI;;AACtF;;AAAM;;AACN;;AACC;;AAAyF;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA+B;;AAAM;;AAC/H;;AACA;;;;;;AAFmD;;AAAA;;;;;;AAKrD;;;;;;AACA;;;;;;;;UDrJK4S,+B;AAqBX,iDACUjO,MADV,EAEUtE,KAFV,EAGUG,cAHV,EAIUF,MAJV,EAKUzC,UALV,EAMU4I,WANV,EAOUvG,MAPV,EAQUK,EARV,EASUJ,cATV,EAUUC,eAVV,EAU0C;AAAA;;AAThC,eAAAuE,MAAA,GAAAA,MAAA;AACA,eAAAtE,KAAA,GAAAA,KAAA;AACA,eAAAG,cAAA,GAAAA,cAAA;AACA,eAAAF,MAAA,GAAAA,MAAA;AACA,eAAAzC,UAAA,GAAAA,UAAA;AACA,eAAA4I,WAAA,GAAAA,WAAA;AACA,eAAAvG,MAAA,GAAAA,MAAA;AACA,eAAAK,EAAA,GAAAA,EAAA;AACA,eAAAJ,cAAA,GAAAA,cAAA;AACA,eAAAC,eAAA,GAAAA,eAAA;AA7BV,eAAAS,mBAAA,GAA8B,CAA9B;AAEA,eAAAF,cAAA,GAAmD,CACjD;AAAEC,eAAG,EAAE,YAAP;AAAqB1B,iBAAK,EAAE;AAA5B,WADiD,CAAnD;AAMA,eAAAwB,gBAAA,GAA6B,CAAE,YAAF,EAAe,UAAf,EAA0B,YAA1B,EAAwC,QAAxC,EAAkD,YAAlD,EAA+D,cAA/D,EAA8E,QAA9E,CAA7B;AAEA,eAAAD,UAAA,GAAa,IAAI,2EAAJ,EAAb;AAEO,eAAAyE,KAAA,GAAgB,EAAhB;AAkBH;;;;iBAEJ,oBAAW;AACT;AACA,iBAAKsF,SAAL;AACA,iBAAKzF,QAAL;AACD;;;iBACD,uBAAc;AACZ,gBAAI,KAAKC,UAAT,EAAqB;AACnB,mBAAKA,UAAL,CAAgBC,WAAhB;AACD;AACF;;;iBACD,sBAAa7F,KAAb,EAAoB;AAAA;;AAClBuD,mBAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBxD,KAAK,CAACyD,IAAN,CAAW,CAAX,EAAcC,KAAd,CAAoB,CAApB,CAArB;AACA,gBAAMC,IAAI,GAAS3D,KAAK,CAACyD,IAAN,CAAW,CAAX,EAAcC,KAAd,CAAoB,CAApB,CAAnB;AACA,gBAAME,UAAU,GAAG,IAAIC,QAAJ,EAAnB;AACAD,sBAAU,CAACE,MAAX,CAAkB,YAAlB,EAAgC,iBAAhC;AACAF,sBAAU,CAACE,MAAX,CAAkB,MAAlB,EAA0BH,IAA1B;AACA,iBAAKlF,UAAL,CAAgBsF,cAAhB,CAA+BH,UAA/B,EAA2C3B,SAA3C,CAAqD,UAAC+B,QAAD,EAAc;AACjE,qBAAI,CAAC2B,QAAL;;AACApC,qBAAO,CAACC,GAAR,CAAYQ,QAAZ;;AACA,qBAAI,CAAC/C,KAAL,CAAWc,IAAX,+BAA8C,IAA9C,EAAoD;AAClDkC,wBAAQ,EAAE,IADwC;AAElDC,gCAAgB,EAAE,KAFgC;AAGlDC,kCAAkB,EAAE;AAH8B,eAApD;AAKD,aARD;AASD;;;iBACD,oBAAW;AAAA;;AACT;AACA,iBAAKyB,UAAL,GAAkB,KAAKnH,UAAL,CACfgV,4BADe,GAEfxR,SAFe,CAEL,UAAC3D,IAAD,EAAc;AACvB,mBAAI,IAAI4D,CAAC,GAAC,CAAV,EAAYA,CAAC,GAAC5D,IAAI,CAAC6D,MAAnB,EAA0BD,CAAC,EAA3B,EAA8B;AAC5B,oBAAG5D,IAAI,CAAC4D,CAAD,CAAJ,CAAQE,UAAR,IAAsB,GAAzB,EAA6B;AAC3B9D,sBAAI,CAAC4D,CAAD,CAAJ,CAAQE,UAAR,GAAqB,cAArB;AACD;;AACD,oBAAG9D,IAAI,CAAC4D,CAAD,CAAJ,CAAQE,UAAR,IAAsB,GAAzB,EAA8B;AAC5B9D,sBAAI,CAAC4D,CAAD,CAAJ,CAAQE,UAAR,GAAqB,YAArB;AACD;;AACD,oBAAG9D,IAAI,CAAC4D,CAAD,CAAJ,CAAQG,YAAR,IAAwB,GAA3B,EAA+B;AAC7B/D,sBAAI,CAAC4D,CAAD,CAAJ,CAAQG,YAAR,GAAuB,MAAvB;AACD;;AACD,oBAAG/D,IAAI,CAAC4D,CAAD,CAAJ,CAAQG,YAAR,IAAwB,GAA3B,EAA+B;AAC7B/D,sBAAI,CAAC4D,CAAD,CAAJ,CAAQG,YAAR,GAAuB,QAAvB;AACD;AACF;;AACD,qBAAI,CAACyD,KAAL,GAAaxH,IAAb;AACA,qBAAI,CAAC+C,UAAL,GAAkB,IAAI,2EAAJ,CAAuB/C,IAAvB,CAAlB;AACA,qBAAI,CAAC+C,UAAL,CAAgBQ,SAAhB,GAA4B,OAAI,CAACA,SAAjC;AACA,qBAAI,CAACR,UAAL,CAAgBS,IAAhB,GAAuB,OAAI,CAACA,IAA5B,CAlBuB,CAmBvB;AACD,aAtBe,CAAlB;AAuBD;;;iBAED,kBAASS,QAAT,EAAmBC,CAAnB,EAAsB;AACpB,iBAAKC,WAAL,CAAiBF,QAAjB;AACA,iBAAKG,WAAL,CAAiBF,CAAjB;AACD;;;iBAED,qBAAYD,QAAZ,EAAsB;AACpB,iBAAKlB,UAAL,CAAgBuB,eAAhB,GAAkC,UAACtE,IAAD,EAAYuE,MAAZ,EAAwC;AACxE,qBAAOvE,IAAI,CAACiE,QAAD,CAAJ,CAAeO,iBAAf,GAAmC4Q,QAAnC,GAA8C3Q,QAA9C,CAAuDF,MAAvD,CAAP;AACD,aAFD;AAGD;;;iBAED,uBAAc;AACZ,iBAAKxB,UAAL,CAAgBwB,MAAhB,GAAyB,EAAzB;AACA,iBAAKuC,SAAL,CAAec,aAAf,CAA6BpG,KAA7B,GAAqC,EAArC;AACA,iBAAK2B,mBAAL,GAA2B,CAA3B;AACD;;;iBAED,qBAAYzB,KAAZ,EAA0B;AACxB,gBAAMgD,WAAW,GAAIhD,KAAK,CAACiD,MAAN,CAAkCnD,KAAvD;AACA,iBAAKuB,UAAL,CAAgBwB,MAAhB,GAAyBG,WAAW,CAACE,IAAZ,GAAmBC,WAAnB,EAAzB;AACD,W,CAED;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBAEA,mBAAU4K,GAAV,EAAe;AACb,iBAAK4F,oBAAL,CAA0B5F,GAA1B,EADa,CAEb;;AACA,iBAAKjN,MAAL,CAAYwD,QAAZ,CAAqB,6CAAsCyJ,GAAG,CAAC/O,EAA1C,EAArB;AACD;;;iBAED,8BAAqB+O,GAArB,EAA0B;AAAA;;AACxB;AACA,iBAAKtP,UAAL,CAAgBmV,sBAAhB,CAAuC7F,GAAG,CAAC/O,EAA3C,EAA+CiD,SAA/C,CAAyD,UAAC0H,MAAD,EAAY;AACnE,qBAAI,CAACrL,IAAL,GAAYqL,MAAZ;;AACA,kBAAI,OAAI,CAACrL,IAAL,IAAa,IAAjB,EAAuB;AACrB,uBAAI,CAACyN,QAAL,GAAgB,OAAI,CAAC5M,IAAL,CAAU6M,IAAV,CAAe,UAACC,CAAD;AAAA,yBAAOA,CAAC,CAACjN,EAAF,IAAQ,OAAI,CAACV,IAAL,CAAUK,MAAzB;AAAA,iBAAf,CAAhB;;AACA,oBAAI,OAAI,CAACoN,QAAL,IAAiB,IAArB,EAA2B;AACzB,yBAAI,CAACzN,IAAL,CAAUK,MAAV,GAAmB,OAAI,CAACoN,QAAL,CAAcG,aAAjC;AACD;;AACD,uBAAI,CAAC2H,gBAAL,GAAwB,OAAI,CAACvV,IAA7B;AACD;;AAED,kBAAI,OAAI,CAACuV,gBAAL,IAAyB,IAA7B,EAAmC;AACjC7I,4BAAY,CAACjE,OAAb,CACE,kBADF,EAEE+D,IAAI,CAACgJ,SAAL,CAAe,OAAI,CAACD,gBAApB,CAFF,EADiC,CAKjC;AACD;AACF,aAjBD;AAkBD;;;iBAED,kBAAS;AACP,iBAAK/S,MAAL,CAAYwD,QAAZ,CAAqB,CAAC,uCAAD,CAArB;AACD;;;iBAED,kBAAS;AACP,iBAAKxD,MAAL,CAAYwD,QAAZ,CAAqB,CAAC,oBAAD,CAArB;AACD;;;iBACD,kCAAsB;AACpB,iBAAKtD,eAAL,CAAqBoD,aAArB,CAAmC,wBAAnC,EAA8D,KAAK0B,KAAnE;AAED;;;iBAED,oBAAWiI,GAAX,EAAgB;AAAA;;AACd,iBAAK3M,cAAL,CACGqD,OADH,CACW;AAAEC,qBAAO,mBAAYqJ,GAAG,CAACvI,UAAhB;AAAT,aADX,EAEGvD,SAFH,CAEa,UAAC2C,GAAD,EAAS;AAClB,kBAAIA,GAAJ,EAAS;AACP,uBAAI,CAAC1D,MAAL,CAAYa,IAAZ;;AACA,uBAAI,CAACtD,UAAL,CAAgBsV,yBAAhB,CAA0ChG,GAAG,CAAC/O,EAA9C,EAAkDiD,SAAlD,CACE,UAAC2C,GAAD,EAAc,CAAE,CADlB,EAEE,UAACiC,GAAD,EAAc;AACX,oBAAD;;AACA,sBAAIA,GAAG,CAACC,MAAJ,IAAc,GAAlB,EAAuB;AACrB,2BAAI,CAAC5F,MAAL,CAAYnB,KAAZ;;AACA,2BAAI,CAAC4F,QAAL;;AACA,2BAAI,CAAC1E,KAAL,CAAWc,IAAX,CAAgB,iBAAhB,EAAmC,IAAnC,EAAyC;AAAEkC,8BAAQ,EAAE;AAAZ,qBAAzC;AACD;AACF,iBATH;AAWD;AACF,aAjBH;AAkBD;;;iBAED,qBAAY;AAAA;;AACV,gBAAIyI,WAAW,GAAG,GAAlB;AACA,iBAAKjO,UAAL,CAAgBkO,WAAhB,CAA4BD,WAA5B,EAAyCzK,SAAzC,CAAmD,UAACyE,IAAD,EAAU;AAC3D,qBAAI,CAACvH,IAAL,GAAYuH,IAAZ;AACD,aAFD;AAGD;;;iBAED,sBAAa/D,KAAb,EAAmBE,MAAnB,EAAyB;AACvB,mBAAOA,MAAM,CAACrB,GAAd;AACD;;;;;;;yBA3LUgS,+B,EAA+B,mI,EAAA,wI,EAAA,sK,EAAA,mK,EAAA,2I,EAAA,6I,EAAA,uH,EAAA,0J,EAAA,iI,EAAA,sJ;AAAA,O;;;cAA/BA,+B;AAA+B,sD;AAAA;AAAA;;;sEAO/B,+D,EAAO,I;;sEACP,wE,EAAY,I;;;;;;;;;;;;;;;;;;ACvCzB;;AAAsB;;AAA0B;;AAA2D;;AAAQ;;AACnH;;AACE;;AACF;;AACA;;AACE;;AAAwB;AAAA,qBAAS,IAAA1O,MAAA,EAAT;AAAiB,aAAjB;;AACtB;;AAAU;;AAAU;;AACtB;;AACA;;AACE;;AACF;;AACA;;AACF;;AACE;;AACE;;AACE;;AACE;;AACE;;AACE;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AAEF;;AACF;;AACF;;AACA;;AACF;;AACE;;AAAU;;AAAS;;AACrB;;AACA;;AACE;;AACE;;AAAoC;;AAAM;;AAC1C;;AAIE;AAAA,qBAAU,IAAAC,YAAA,QAAV;AAA8B,aAA9B;;AAJF;;AAMF;;AACA;;AAAQ;AAAA,qBAAS,IAAAiP,sBAAA,EAAT;AAAiC,aAAjC;;AACN;;AAAM;;AAAQ;;AAChB;;AACF;;AACA;;AACA;;AACE;;AACE;;AACE;;AACE;;AACE;;AAAW;;AAAS;;AACpB;;AAAsC;AAAA;AAAA;;AAEpC;;AAAsB;;AAAM;;AAC5B;;AAGF;;AACF;;AACF;;AACA;;AACE;;AACE;;AAAW;;AAAM;;AACjB;;AAA2B;AAAA;;AAAA;;AAAA,qBAAS,IAAA/O,QAAA,mBAAT;AAAwC,aAAxC;;AAA3B;;AAEA;;AAAoB;;AAAM;;AAC5B;;AACF;;AACF;;AAIA;;AACC;;AAA0D;AAAA,qBAAS,IAAAgC,MAAA,EAAT;AAAiB,aAAjB;;AAAoB;;AAC9E;;AACF;;AAED;;AACA;;AA8CA;;AACE;;AAEE;;AACE;;AAGA;;AACF;;AAEA;;AACE;;AAEA;;AACF;;AAEA;;AACE;;AAEA;;AACF;;AAEA;;AACE;;AAEA;;AACF;;AAEA;;AACE;;AAEA;;AACF;;AACA;;AACE;;AAGA;;AACF;;AAEA;;AACE;;AACA;;AAQF;;AAEA;;AACA;;AACF;;AACA;;AACF;;AAGF;;AACF;;;;;;;;;;AAzLgB;;AAAA;;AA4BU;;AAAA;;AAwBwB;;AAAA;;AAGL;;AAAA,oGAAmB,cAAnB,EAAmB,gBAAnB;;AAcjC;;AAAA;;AAyDoB;;AAAA;;AAmDP;;AAAA;;AACa;;AAAA;;AAEF;;AAAA;;;;;;qBDzJtB;;;;;;wEAEDuM,+B,EAA+B;gBAN3C,uDAM2C;iBANjC;AACT9S,oBAAQ,EAAE,+BADD;AAETC,uBAAW,EAAE,4CAFJ;AAGTC,qBAAS,EAAE,CAAC,4CAAD,CAHF;AAITqT,sBAAU,EAAE;AAJH,W;AAMiC,U;;;;;;;;;;;;;;;;;;;;;;;AAClB7O,mBAAS,EAAE,CAAF;kBAAhC,uDAAgC;mBAAtB,W;AAAsB,WAAE,C;AAMftD,cAAI,EAAE,CAAF;kBAAvB,uDAAuB;mBAAb,+D;AAAa,WAAE,C;AACDD,mBAAS,EAAE,CAAF;kBAAjC,uDAAiC;mBAAvB,wE;AAAuB,WAAE;;;;;;;;;;;;;;;;;;;AEvCtuDY;;AACE;;AACF;;;;;;AAFwE;;AACtE;;AAAA;;;;;;;;AAaV;;AACE;;AAA4C;AAAA;;AAAA;;AAAA;AAAA;;AAAwB;;AACpE;;AACF;;;;;;AAYI;;AAAiG;;AACjG;;;;;;AACA;;AAAqC;;AAAwB;;;;;;AAAxB;;AAAA;;;;;;AAIrC;;AAAiG;;AACjG;;;;;;AACA;;AAAqC;;AAAwB;;;;;;AAAxB;;AAAA;;;;;;AAIrC;;AAAmG;;AAC1F;;;;;;AACT;;AAAqC;;AAA4B;;;;;;AAA5B;;AAAA;;;;;;AAIrC;;AAAgG;;AAChG;;;;;;AACA;;AAAqC;;AAAmB;;;;;;AAAnB;;AAAA;;;;;;AAGrC;;AAAwG;;AACxG;;;;;;AACA;;AAAqC;;AAA0B;;;;;;AAA1B;;AAAA;;;;;;AAIrC;;AAAgG;;AAChG;;;;;;AACA;;AAAqC;;AAAuB;;;;;;AAAvB;;AAAA;;;;;;AAGrC;;AAAkG;;AAClG;;;;;;AACA;;AAAqC;;AAAyB;;;;;;AAAzB;;AAAA;;;;;;AAGrC;;AAAmC;;AAAM;;;;;;;;AACzC;;AACE;;AACC;;AAAgD;AAAA;;AAAA;;AAAA;;AAAA,kDAA2B,KAA3B;AAAgC,WAAhC;;AAAoC;;AAAI;;AAC3F;;AAAM;;AACN;;AACC;;AAA0F;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA+B;;AAAM;;AAChI;;AACA;;;;;;AAFmD;;AAAA;;;;;;AAKrD;;;;;;AACA;;;;;;;;UDpHOqS,gC;AAqBX,kDAAoBpT,MAApB,EACWG,KADX,EAEWC,MAFX,EAGaE,cAHb,EAIa3C,UAJb,EAKasC,cALb,EAMaC,eANb,EAM6C;AAAA;;AANzB,eAAAF,MAAA,GAAAA,MAAA;AACT,eAAAG,KAAA,GAAAA,KAAA;AACA,eAAAC,MAAA,GAAAA,MAAA;AACE,eAAAE,cAAA,GAAAA,cAAA;AACA,eAAA3C,UAAA,GAAAA,UAAA;AACA,eAAAsC,cAAA,GAAAA,cAAA;AACA,eAAAC,eAAA,GAAAA,eAAA;AAxBb,eAAAS,mBAAA,GAA+B,CAA/B;AAMD,eAAAJ,UAAA,GAAa,IAAI,0EAAJ,EAAb;AACC,eAAAC,gBAAA,GAA6B,CAAC,aAAD,EAAgB,aAAhB,EAA+B,iBAA/B,EAAkD,QAAlD,EAA4D,eAA5D,EAA6E,YAA7E,EAA2F,cAA3F,EAA2G,QAA3G,CAA7B;AAEA,eAAAC,cAAA,GAAmD,CACjD;AAAEC,eAAG,EAAE,aAAP;AAAsB1B,iBAAK,EAAE;AAA7B,WADiD,EAEjD;AAAE0B,eAAG,EAAE,aAAP;AAAsB1B,iBAAK,EAAE;AAA7B,WAFiD,EAGjD;AAAE0B,eAAG,EAAE,YAAP;AAAqB1B,iBAAK,EAAE;AAA5B,WAHiD,CAAnD;AAgBU;;;;iBAEV,oBAAQ;AACP,iBAAKmQ,eAAL;AAEA;;;iBAED,2BAAkB;AAChB,iBAAK5O,UAAL,CAAgBQ,SAAhB,GAA4B,KAAKA,SAAjC;AACA,iBAAKR,UAAL,CAAgBS,IAAhB,GAAuB,KAAKA,IAA5B;AACD;;;iBAED,sBAAa9B,KAAb,EAAoB;AAAA;;AAClBuD,mBAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBxD,KAAK,CAACyD,IAAN,CAAW,CAAX,EAAcC,KAAd,CAAoB,CAApB,CAArB;AACA,gBAAMC,IAAI,GAAS3D,KAAK,CAACyD,IAAN,CAAW,CAAX,EAAcC,KAAd,CAAoB,CAApB,CAAnB;AACA,gBAAME,UAAU,GAAG,IAAIC,QAAJ,EAAnB;AACAD,sBAAU,CAACE,MAAX,CAAkB,YAAlB,EAAgC,cAAhC;AACAF,sBAAU,CAACE,MAAX,CAAkB,MAAlB,EAA0BH,IAA1B;AACA,iBAAKlF,UAAL,CAAgBsF,cAAhB,CAA+BH,UAA/B,EAA2C3B,SAA3C,CAAqD,UAAC+B,QAAD,EAAc;AACjET,qBAAO,CAACC,GAAR,CAAYQ,QAAZ;;AACA,qBAAI,CAACiM,eAAL;;AACA,qBAAI,CAAChP,KAAL,CAAWc,IAAX,+BAA8C,IAA9C,EAAoD;AAClDkC,wBAAQ,EAAE,IADwC;AAElDC,gCAAgB,EAAE,KAFgC;AAGlDC,kCAAkB,EAAE;AAH8B,eAApD;AAKD,aARD;AASD;;;iBAED,2BAAkB;AAAA;;AAChB,iBAAK1F,UAAL,CAAgBwR,eAAhB,GAAkChO,SAAlC,CAA4C,UAAC3D,IAAD,EAAe;AAEzD,mBAAI,IAAI4D,CAAC,GAAC,CAAV,EAAYA,CAAC,GAAC5D,IAAI,CAAC6D,MAAnB,EAA0BD,CAAC,EAA3B,EAA8B;AAC5B,oBAAG5D,IAAI,CAAC4D,CAAD,CAAJ,CAAQE,UAAR,IAAsB,GAAzB,EAA6B;AAC3B9D,sBAAI,CAAC4D,CAAD,CAAJ,CAAQE,UAAR,GAAqB,cAArB;AACD;;AACD,oBAAG9D,IAAI,CAAC4D,CAAD,CAAJ,CAAQE,UAAR,IAAsB,GAAzB,EAA8B;AAC5B9D,sBAAI,CAAC4D,CAAD,CAAJ,CAAQE,UAAR,GAAqB,YAArB;AACD;;AACD,oBAAG9D,IAAI,CAAC4D,CAAD,CAAJ,CAAQG,YAAR,IAAwB,GAA3B,EAA+B;AAC7B/D,sBAAI,CAAC4D,CAAD,CAAJ,CAAQG,YAAR,GAAuB,MAAvB;AACD;;AACD,oBAAG/D,IAAI,CAAC4D,CAAD,CAAJ,CAAQG,YAAR,IAAwB,GAA3B,EAA+B;AAC7B/D,sBAAI,CAAC4D,CAAD,CAAJ,CAAQG,YAAR,GAAuB,QAAvB;AACD;AACF;;AACD,qBAAI,CAAChB,UAAL,GAAkB,IAAI,0EAAJ,CAAuB/C,IAAvB,CAAlB;AACA,qBAAI,CAAC+C,UAAL,CAAgBQ,SAAhB,GAA4B,OAAI,CAACA,SAAjC;AACA,qBAAI,CAACR,UAAL,CAAgBS,IAAhB,GAAuB,OAAI,CAACA,IAA5B;AACA,qBAAI,CAACQ,QAAL,GAAehE,IAAf;AAED,aArBD;AAsBD;;;iBAED,kBAAM;AACJ,iBAAKwC,MAAL,CAAYwD,QAAZ,CAAqB,CAAC,qCAAD,CAArB;AACD;;;iBACD,qBAA2C;AAAA,gBAAjChG,IAAiC,uEAArB,EAAqB;AAAA,gBAAjB0I,MAAiB;AACzC,iBAAKlG,MAAL,CAAYwD,QAAZ,CAAqB,CAAC,qCAAD,CAArB,EAA6D;AAAEC,yBAAW,EAAE;AAAEvF,kBAAE,EAAEV,IAAI,CAACU,EAAX;AAAegI,sBAAM,EAAGA;AAAxB;AAAf,aAA7D;AACD;;;iBAED,kBAAM;AACJ,iBAAKlG,MAAL,CAAYwD,QAAZ,CAAqB,qBAArB;AACD;;;iBAED,kBAAS/B,QAAT,EAAmBC,CAAnB,EAAoB;AAClB,iBAAKC,WAAL,CAAiBF,QAAjB;AACA,iBAAKG,WAAL,CAAiBF,CAAjB;AACD;;;iBAED,qBAAYD,QAAZ,EAAsB;AACpB,iBAAKlB,UAAL,CAAgBuB,eAAhB,GAAkC,UAACtE,IAAD,EAAYuE,MAAZ,EAAwC;;;AACxE,qBAAQ,CAAD,KACLvE,IAAI,CAACiE,QAAD,CADE,MACQ,IADR,IACQ,aADR,GACQ,MADR,GACQ,GAAEO,iBAAF,GAAsBC,QAAtB,CAA+BF,MAA/B,CADhB;AAGD,aAJD;AAKD;;;iBAED,uBAAW;AACV,iBAAKxB,UAAL,CAAgBwB,MAAhB,GAAyB,EAAzB;AACA,iBAAKuC,SAAL,CAAec,aAAf,CAA6BpG,KAA7B,GAAqC,EAArC;AACA,iBAAK2B,mBAAL,GAA2B,CAA3B;AACA;;;iBACD,uBAAc;AAAA;;AACZ,iBAAKmE,UAAL,GAAkB,KAAKnH,UAAL,CAAgB0V,YAAhB,GACflS,SADe,CACL,UAAA3D,IAAI,EAAI;AACjB,qBAAI,CAACwH,KAAL,GAAaxH,IAAb;AACD,aAHe,CAAlB;AAID;;;iBACD,mCAAuB;AACrB,iBAAK0C,eAAL,CAAqBoD,aAArB,CAAmC,yBAAnC,EAA8D,KAAK9B,QAAnE;AACD;;;iBAGD,oBAAWyL,GAAX,EAAgB;AAAA;;AACd,iBAAK3M,cAAL,CAAoBqD,OAApB,CAA4B;AAACC,qBAAO,mBAAYqJ,GAAG,CAACmC,WAAhB;AAAR,aAA5B,EACGjO,SADH,CACa,UAAA2C,GAAG,EAAI;AAChB,kBAAIA,GAAJ,EAAS;AACP,uBAAI,CAAC1D,MAAL,CAAYa,IAAZ;;AACA,uBAAI,CAACtD,UAAL,CAAgB2V,aAAhB,CAA8BrG,GAAG,CAAC/O,EAAlC,EACGiD,SADH,CACa,UAAA3D,IAAI,EAAI,CAElB,CAHH,EAGQ,UAAAuI,GAAG,EAAE;AACT,sBAAIA,GAAG,CAACC,MAAJ,IAAc,GAAlB,EAAuB;AACrB,2BAAI,CAAC5F,MAAL,CAAYnB,KAAZ;;AACA,2BAAI,CAACkB,KAAL,CAAWc,IAAX,CAAgB,6BAAhB,EAA+C,IAA/C,EAAqD;AACnDkC,8BAAQ,EAAE,IADyC;AAEnDC,sCAAgB,EAAE,KAFiC;AAGnDC,wCAAkB,EAAE;AAH+B,qBAArD;AAKD;;AACH,yBAAI,CAAC8L,eAAL;AAED,iBAdD;AAeD;AACF,aApBH;AAqBD;;;iBACD,sBAAatN,KAAb,EAAmBvD,IAAnB,EAAuB;AACrB,mBAAOA,IAAI,CAACoC,GAAZ;AACD;;;iBAGD,qBAAYxB,KAAZ,EAA0B;AACxB,gBAAMgD,WAAW,GAAIhD,KAAK,CAACiD,MAAN,CAAkCnD,KAAvD;AACA,iBAAKuB,UAAL,CAAgBwB,MAAhB,GAAyBG,WAAW,CAACE,IAAZ,GAAmBC,WAAnB,EAAzB;AACD;;;iBAED,4BAAmBC,SAAnB,EAAoC;AAClC,gBAAIA,SAAS,CAACC,SAAd,EAAyB;AACvB,mBAAKtC,cAAL,CAAoBuC,QAApB,kBAAuCF,SAAS,CAACC,SAAjD;AACD,aAFD,MAEO;AACL,mBAAKtC,cAAL,CAAoBuC,QAApB,CAA6B,iBAA7B;AACD;AACF;;;;;;;yBAjKU4Q,gC,EAAgC,uH,EAAA,wI,EAAA,mK,EAAA,sK,EAAA,2I,EAAA,gI,EAAA,sJ;AAAA,O;;;cAAhCA,gC;AAAgC,sD;AAAA;AAAA;;;sEAkBhC,8D,EAAO,I;;sEACP,wE,EAAY,I;;;;;;;;;;;;;;;;;;ACtCzB;;AAAsB;;AAA0B;;AAA2D;;AAAQ;;AACnH;;AACE;;AAAwB;AAAA,qBAAS,IAAApP,MAAA,EAAT;AAAiB,aAAjB;;AACtB;;AAAU;;AAAU;;AACtB;;AACA;;AACE;;AACF;;AACF;;AAEA;;AACE;;AACE;;AACE;;AACE;;AACE;;AACE;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AAEF;;AACF;;AACF;;AACF;;AACA;;AACE;;AAAU;;AAAS;;AACrB;;AACA;;AACE;;AACE;;AAAoC;;AAAM;;AAC1C;;AAIE;AAAA,qBAAU,IAAAC,YAAA,QAAV;AAA8B,aAA9B;;AAJF;;AAMF;;AACA;;AAAQ;AAAA,qBAAS,IAAAsP,uBAAA,EAAT;AAAkC,aAAlC;;AACN;;AAAM;;AAAQ;;AAChB;;AACF;;AACF;;AAAM;;AACN;;AACE;;AACI;;AACE;;AACE;;AAAW;;AAAS;;AACpB;;AAAsC;AAAA;AAAA;;AAGpC;;AAAsB;;AAAM;;AAC5B;;AAGF;;AACF;;AACF;;AACA;;AACE;;AACE;;AAAW;;AAAM;;AACjB;;AAA2B;AAAA;;AAAA;;AAAA,qBAAS,IAAApP,QAAA,mBAAT;AAAwC,aAAxC;;AAA3B;;AAEA;;AAAoB;;AAAM;;AAC5B;;AACF;;AACF;;AAIA;;AACC;;AAA0D;AAAA,qBAAS,IAAAqP,SAAA,CAAU,EAAV,EAAa,OAAb,CAAT;AAA8B,aAA9B;;AAAiC;;AAC3F;;AACF;;AAED;;AACA;;AACA;;AACE;;AAA4D;AAAA,qBAAiB,IAAAnP,kBAAA,QAAjB;AAA2C,aAA3C;;AAE1D;;AACE;;AAEA;;AACF;;AAEA;;AACE;;AAEA;;AACF;;AAEA;;AACE;;AAEA;;AACF;;AAEA;;AACE;;AAEA;;AACF;;AACA;;AACE;;AAEA;;AACF;;AAEA;;AACE;;AAEA;;AACF;;AACA;;AACE;;AAEA;;AACF;;AACA;;AACE;;AACA;;AAQF;;AAEA;;AACA;;AACF;;AACA;;AACJ;;AACA;;;;;;;;;;AA/G0B;;AAAA;;AAuBsB;;AAAA;;AAIL;;AAAA,oGAAmB,cAAnB,EAAmB,gBAAnB;;AAcjC;;AAAA;;AAYoB;;AAAA;;AAqDP;;AAAA;;AACa;;AAAA;;AAEH;;AAAA;;;;;;;;;wEDtHpB+O,gC,EAAgC;gBAL5C,uDAK4C;iBALlC;AACTxT,oBAAQ,EAAE,+BADD;AAETC,uBAAW,EAAE,4CAFJ;AAGTC,qBAAS,EAAE,CAAC,4CAAD;AAHF,W;AAKkC,U;;;;;;;;;;;;;;;;;AAEnBwE,mBAAS,EAAE,CAAF;kBAAhC,uDAAgC;mBAAtB,W;AAAsB,WAAE,C;AAgBftD,cAAI,EAAE,CAAF;kBAAvB,uDAAuB;mBAAb,8D;AAAa,WAAE,C;AACDD,mBAAS,EAAE,CAAF;kBAAjC,uDAAiC;mBAAvB,wE;AAAuB,WAAE;;;;;;;;;;;;;;;;;;;AEtCtC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACEE;;;;;;AAyDQ;;AACE;;AACF;;;;;;AAFwE;;AACtE;;AAAA;;;;;;;;AAoBV;;AACE;;AAA4C;AAAA;;AAAA;;AAAA;AAAA;;AAAwB;;AACpE;;AACF;;;;;;AAYI;;AAAgG;;AAEhG;;;;;;AACA;;AAAqC;;AAAuB;;;;;;AAAvB;;AAAA;;;;;;AAIrC;;AAA8F;;AAC9F;;;;;;AACA;;AAAqC;;AAAqB;;;;;;AAArB;;AAAA;;;;;;AAIrC;;AAA8F;;AAC3F;;;;;;AACH;;AAAqC;;AAAsB;;;;;;AAAtB;;AAAA;;;;;;AAIrC;;AAAoG;;AACpG;;;;;;AACA;;AAAqC;;AAA0B;;;;;;AAA1B;;AAAA;;;;;;AAIrC;;AAA6F;;AAC7F;;;;;;AACA;;AAAqC;;AAAoB;;;;;;AAApB;;AAAA;;;;;;AAGrC;;AAAgG;;AAChG;;;;;;AACA;;AAAqC;;AAAuB;;;;;;AAAvB;;AAAA;;;;;;AAGrC;;AAAkG;;AAClG;;;;;;AACA;;AAAqC;;AAAyB;;;;;;AAAzB;;AAAA;;;;;;AAGrC;;AAAmC;;AAAM;;;;;;;;AACzC;;AACE;;AACC;;AAAgD;AAAA;;AAAA;;AAAA;;AAAA,kDAA2B,KAA3B;AAAgC,WAAhC;;AAAoC;;AAAI;;AAC3F;;AAAM;;AACN;;AACC;;AAA0F;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA+B;;AAAM;;AAChI;;AACA;;;;;;AAFmD;;AAAA;;;;;;AAKrD;;;;;;AACA;;;;;;;;UDzHS0S,iB;AA8BX,mCACUtT,KADV,EAEUG,cAFV,EAGUF,MAHV,EAIUzC,UAJV,EAKUqC,MALV,EAMUuG,WANV,EAOU6F,SAPV,EAQU/L,EARV,EASUJ,cATV,EAUUC,eAVV,EAU0C;AAAA;;AAThC,eAAAC,KAAA,GAAAA,KAAA;AACA,eAAAG,cAAA,GAAAA,cAAA;AACA,eAAAF,MAAA,GAAAA,MAAA;AACA,eAAAzC,UAAA,GAAAA,UAAA;AACA,eAAAqC,MAAA,GAAAA,MAAA;AACA,eAAAuG,WAAA,GAAAA,WAAA;AACA,eAAA6F,SAAA,GAAAA,SAAA;AACA,eAAA/L,EAAA,GAAAA,EAAA;AACA,eAAAJ,cAAA,GAAAA,cAAA;AACA,eAAAC,eAAA,GAAAA,eAAA;AArCV,eAAAS,mBAAA,GAA+B,CAA/B;AAGA,eAAAH,gBAAA,GAA6B,CAAC,YAAD,EAAe,UAAf,EAA2B,UAA3B,EAAuC,eAAvC,EAAwD,SAAxD,EAAmE,YAAnE,EAAiF,cAAjF,EAAiG,QAAjG,CAA7B;AAEA,eAAAC,cAAA,GAAmD,CACjD;AAAEC,eAAG,EAAE,YAAP;AAAqB1B,iBAAK,EAAE;AAA5B,WADiD,EAEjD;AAAE0B,eAAG,EAAE,UAAP;AAAmB1B,iBAAK,EAAE;AAA1B,WAFiD,EAGjD;AAAE0B,eAAG,EAAE,YAAP;AAAqB1B,iBAAK,EAAE;AAA5B,WAHiD,CAAnD;AAQA,eAAAuB,UAAA,GAAa,IAAI,2EAAJ,EAAb;AAEA,eAAAzC,UAAA,GAAoB,EAApB;AACA,eAAAC,QAAA,GAAkB,EAAlB;AACA,eAAA2G,UAAA,GAAoB,EAApB;AAGA,eAAAC,KAAA,GAAkB,EAAlB;AAkBO;;;;iBAEP,oBAAW;AACT,iBAAKiF,WAAL,GAAmB,KAAKvJ,EAAL,CAAQQ,OAAR,CAAgB,YAAhB,CAAnB;AAEA,iBAAK6S,WAAL;AAED;;;iBAED,uBAAc;AACZ,gBAAI,KAAK5O,UAAT,EAAqB;AACnB,mBAAKA,UAAL,CAAgBC,WAAhB;AACD;AACF;;;iBAED,sBAAa7F,KAAb,EAAoB;AAAA;;AAClBuD,mBAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBxD,KAAK,CAACyD,IAAN,CAAW,CAAX,EAAcC,KAAd,CAAoB,CAApB,CAArB;AACA,gBAAMC,IAAI,GAAS3D,KAAK,CAACyD,IAAN,CAAW,CAAX,EAAcC,KAAd,CAAoB,CAApB,CAAnB;AACA,gBAAME,UAAU,GAAG,IAAIC,QAAJ,EAAnB;AACAD,sBAAU,CAACE,MAAX,CAAkB,YAAlB,EAAgC,MAAhC;AACAF,sBAAU,CAACE,MAAX,CAAkB,MAAlB,EAA0BH,IAA1B;AACA,iBAAKlF,UAAL,CAAgBsF,cAAhB,CAA+BH,UAA/B,EAA2C3B,SAA3C,CAAqD,UAAC+B,QAAD,EAAc;AACjET,qBAAO,CAACC,GAAR,CAAYQ,QAAZ;;AACA,qBAAI,CAACwQ,WAAL;;AACA,qBAAI,CAACvT,KAAL,CAAWc,IAAX,+BAA8C,IAA9C,EAAoD;AAClDkC,wBAAQ,EAAE,IADwC;AAElDC,gCAAgB,EAAE,KAFgC;AAGlDC,kCAAkB,EAAE;AAH8B,eAApD;AAKD,aARD;AASD;;;iBACD,uBAAc;AAAA;;AACZ,iBAAKyB,UAAL,GAAkB,KAAKnH,UAAL,CAAgBuJ,WAAhB,GACf/F,SADe,CACL,UAAA3D,IAAI,EAAI;AACjB,mBAAI,IAAI4D,CAAC,GAAC,CAAV,EAAYA,CAAC,GAAC5D,IAAI,CAAC6D,MAAnB,EAA0BD,CAAC,EAA3B,EAA8B;AAC5B,oBAAG5D,IAAI,CAAC4D,CAAD,CAAJ,CAAQE,UAAR,IAAsB,GAAzB,EAA6B;AAC3B9D,sBAAI,CAAC4D,CAAD,CAAJ,CAAQE,UAAR,GAAqB,cAArB;AACD;;AACD,oBAAG9D,IAAI,CAAC4D,CAAD,CAAJ,CAAQE,UAAR,IAAsB,GAAzB,EAA8B;AAC5B9D,sBAAI,CAAC4D,CAAD,CAAJ,CAAQE,UAAR,GAAqB,YAArB;AACD;;AACD,oBAAG9D,IAAI,CAAC4D,CAAD,CAAJ,CAAQG,YAAR,IAAwB,GAA3B,EAA+B;AAC7B/D,sBAAI,CAAC4D,CAAD,CAAJ,CAAQG,YAAR,GAAuB,MAAvB;AACD;;AACD,oBAAG/D,IAAI,CAAC4D,CAAD,CAAJ,CAAQG,YAAR,IAAwB,GAA3B,EAA+B;AAC7B/D,sBAAI,CAAC4D,CAAD,CAAJ,CAAQG,YAAR,GAAuB,QAAvB;AACD;AACF;;AACD,qBAAI,CAACyD,KAAL,GAAaxH,IAAb;AAEA,qBAAI,CAAC+C,UAAL,GAAkB,IAAI,2EAAJ,CAAuB/C,IAAvB,CAAlB;AACA,qBAAI,CAACmH,KAAL,GAAanH,IAAb;AACA,qBAAI,CAAC+C,UAAL,CAAgBQ,SAAhB,GAA4B,OAAI,CAACA,SAAjC;AACA,qBAAI,CAACR,UAAL,CAAgBS,IAAhB,GAAuB,OAAI,CAACA,IAA5B;AAED,aAvBe,CAAlB;AAwBD;;;iBAGD,mBAAUiM,GAAV,EAAe;AAEb,iBAAK1G,WAAL,CAAiBoN,aAAjB,CAA+B1G,GAA/B;AACA,iBAAKjN,MAAL,CAAYwD,QAAZ,CAAqB,6BAAsByJ,GAAG,CAAC/O,EAA1B,EAArB;AACD;;;iBACD,oBAAQ;AACN,iBAAKgC,eAAL,CAAqBoD,aAArB,CAAmC,eAAnC,EAAqD,KAAKqB,KAA1D;AACD;;;iBACD,oBAAWsI,GAAX,EAAgB;AAAA;;AACZ,iBAAK3M,cAAL,CAAoBqD,OAApB,CAA4B;AAAEC,qBAAO,6CAAsCqJ,GAAG,CAAC2G,QAA1C;AAAT,aAA5B,EACIzS,SADJ,CACc,UAAC2C,GAAD,EAAS;AACfrB,qBAAO,CAACC,GAAR,CAAY,KAAZ;;AACA,kBAAIoB,GAAJ,EAAS;AACP,uBAAI,CAAC1D,MAAL,CAAYa,IAAZ;;AACA,uBAAI,CAACtD,UAAL,CAAgBkW,UAAhB,CAA2B5G,GAAG,CAAC/O,EAA/B,EAAkC,OAAI,CAAC0L,WAAL,CAAiB3C,QAAnD,EACC9F,SADD,CACW,UAAC2C,GAAD,EAAc;AACnB,oBAAD;AACDrB,yBAAO,CAACC,GAAR,CAAYoB,GAAZ;;AACA,sBAAIA,GAAJ,EAAS;AACT,2BAAI,CAAC1D,MAAL,CAAYnB,KAAZ;;AACA,2BAAI,CAACkB,KAAL,CAAWc,IAAX,CAAgB,6BAAhB,EAA+C,IAA/C,EAAqD;AACnDkC,8BAAQ,EAAE,IADyC;AAEnDC,sCAAgB,EAAE,KAFiC;AAGnDC,wCAAkB,EAAE;AAH+B,qBAArD;AAKD;;AACD,yBAAI,CAACqQ,WAAL;AAED,iBAdD;AAeL;AAEF,aAtBH;AAuBD;;;iBAEH,kBAAM;AACJ;AACA,iBAAK1T,MAAL,CAAYwD,QAAZ,CAAqB,qBAArB;AACD;;;iBACD,kBAAS/B,QAAT,EAAmBC,CAAnB,EAAoB;AAElB,iBAAKC,WAAL,CAAiBF,QAAjB;AACA,iBAAKG,WAAL,CAAiBF,CAAjB;AACD;;;iBAGD,qBAAYD,QAAZ,EAAsB;AACpB,iBAAKlB,UAAL,CAAgBuB,eAAhB,GAAkC,UAACtE,IAAD,EAAYuE,MAAZ,EAAwC;AACxE,qBACEvE,IAAI,CAACiE,QAAD,CAAJ,CAAeO,iBAAf,GAAmCC,QAAnC,CAA4CF,MAA5C,CADF;AAGD,aAJD;AAKD;;;iBAED,uBAAW;AACV,iBAAKxB,UAAL,CAAgBwB,MAAhB,GAAyB,EAAzB;AACA,iBAAKuC,SAAL,CAAec,aAAf,CAA6BpG,KAA7B,GAAqC,EAArC;AACA,iBAAK2B,mBAAL,GAA2B,CAA3B;AACA;;;iBAGD,qBAAYzB,KAAZ,EAA0B;AACxB,gBAAMgD,WAAW,GAAIhD,KAAK,CAACiD,MAAN,CAAkCnD,KAAvD;AACA,iBAAKuB,UAAL,CAAgBwB,MAAhB,GAAyBG,WAAW,CAACE,IAAZ,GAAmBC,WAAnB,EAAzB;AACD;;;iBACD,4BAAmBC,SAAnB,EAAoC;AAClC,gBAAIA,SAAS,CAACC,SAAd,EAAyB;AACvB,mBAAKtC,cAAL,CAAoBuC,QAApB,kBAAuCF,SAAS,CAACC,SAAjD;AACD,aAFD,MAEO;AACL,mBAAKtC,cAAL,CAAoBuC,QAApB,CAA6B,iBAA7B;AACD;AACF;;;iBACD,sBAAaX,KAAb,EAAmBE,MAAnB,EAAyB;AACvB,mBAAOA,MAAM,CAAC/C,KAAd;AACD;;;;;;;yBA7KUyU,iB,EAAiB,wI,EAAA,sK,EAAA,mK,EAAA,2I,EAAA,uH,EAAA,6I,EAAA,yH,EAAA,0J,EAAA,iI,EAAA,sJ;AAAA,O;;;cAAjBA,iB;AAAiB,sC;AAAA;AAAA;;;sEAcjB,+D,EAAO,I;;sEACP,yE,EAAY,I;;;;;;;;;;;;;;;;;;ACzCzB;;AAAsB;;AAA0B;;AAA+C;;AAAQ;;AACvG;;AACE;;AACF;;AACA;;AACE;;AAAwB;AAAA,qBAAS,IAAAzP,MAAA,EAAT;AAAiB,aAAjB;;AACtB;;AAAU;;AAAU;;AACtB;;AACA;;AACE;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AACE;;AACE;;AACE;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AAEF;;AACF;;AACF;;AACF;;AACA;;AACE;;AAAU;;AAAS;;AACrB;;AACA;;AAIE;;AACE;;AAAoC;;AAAM;;AAC1C;;AAIE;AAAA,qBAAU,IAAAC,YAAA,QAAV;AAA8B,aAA9B;;AAJF;;AAMF;;AACA;;AAAQ;AAAA,qBAAS,IAAA6P,QAAA,EAAT;AAAmB,aAAnB;;AACN;;AAAM;;AAAQ;;AAChB;;AACF;;AACA;;AACF;;AACE;;AACE;;AACE;;AACE;;AAAW;;AAAS;;AACpB;;AAAsC;AAAA;AAAA;;AAEpC;;AAAsB;;AAAM;;AAC5B;;AAGF;;AACF;;AACF;;AACA;;AACE;;AACE;;AAAW;;AAAM;;AACjB;;AAA2B;AAAA;;AAAA;;AAAA,qBAAS,IAAA3P,QAAA,mBAAT;AAAwC,aAAxC;;AAA3B;;AAEA;;AAAoB;;AAAM;;AAC5B;;AACF;;AAQF;;AAIA;;AACC;;AAAmG;;AACnG;;AACF;;AAED;;AACA;;AACA;;AACE;;AAA4D;AAAA,qBAAiB,IAAAE,kBAAA,QAAjB;AAA2C,aAA3C;;AAE1D;;AACE;;AAGA;;AACF;;AAEA;;AACE;;AAEA;;AACF;;AAEA;;AACE;;AAEA;;AACF;;AAEA;;AACE;;AAEA;;AACF;;AAEA;;AACE;;AAEA;;AACF;;AACA;;AACE;;AAEA;;AACF;;AACA;;AACE;;AAEA;;AACF;;AACA;;AACE;;AACA;;AAQF;;AAEA;;AACA;;AACF;;AACA;;AACF;;AACA;;;;;;;;;;AArJgB;;AAAA;;AA4BU;;AAAA;;AA0BoB;;AAAA;;AAGL;;AAAA,oGAAmB,cAAnB,EAAmB,gBAAnB;;AAqBjC;;AAAA;;AAYoB;;AAAA;;AAsDP;;AAAA;;AACa;;AAAA;;AAEH;;AAAA;;;;;;qBD7HjB;;;;;;wEAEDoP,iB,EAAiB;gBAN7B,uDAM6B;iBANnB;AACT7T,oBAAQ,EAAE,eADD;AAETC,uBAAW,EAAE,4BAFJ;AAGTC,qBAAS,EAAE,CAAC,4BAAD,CAHF;AAITqT,sBAAU,EAAE;AAJH,W;AAMmB,U;;;;;;;;;;;;;;;;;;;;;;;AAEJ7O,mBAAS,EAAE,CAAF;kBAAhC,uDAAgC;mBAAtB,W;AAAsB,WAAE,C;AAYftD,cAAI,EAAE,CAAF;kBAAvB,uDAAuB;mBAAb,+D;AAAa,WAAE,C;AACDD,mBAAS,EAAE,CAAF;kBAAjC,uDAAiC;mBAAvB,yE;AAAuB,WAAE;;;;;;;;;;;;;;;;;;;AEzCtC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAQagT,wB;AAKX,4CAAc;AAAA;;AAJd,eAAAC,aAAA,GAAyB,IAAzB;AAIiB;;;;iBAEjB,oBAAQ,CACN;AACD;;;iBAED,yBAAgB;AACd,iBAAKC,OAAL,CAAahT,IAAb;AACD;;;iBAED,iBAAQ;AACN,iBAAKiT,YAAL,CAAkBjV,KAAlB;AACD;;;iBAED,uBAAW,CACT;AACA;AAED;;;;;;;yBAvBU8U,wB;AAAwB,O;;;cAAxBA,wB;AAAwB,6C;AAAA;AAAA;sEAGxB,oE,EAAU,I;;;;;;;;;;;;;;;;;ACVnB;;AACE;;AACE;;AACF;;AACF;;;;;;;;;wEDGSA,wB,EAAwB;gBALpC,uDAKoC;iBAL1B;AACTnU,oBAAQ,EAAE,sBADD;AAETC,uBAAW,EAAE,mCAFJ;AAGTC,qBAAS,EAAE,CAAC,mCAAD;AAHF,W;AAK0B,U;;;AAE1BoU,sBAAY;kBAApB;AAAoB,Y;AACUD,iBAAO,EAAE,CAAF;kBAArC,uDAAqC;mBAA3B,oE;AAA2B,WAAE;;;;;;;;;;;;;;;;;;;AEX1C;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACA6G;;AACjF;;AAAG;;;;;;AAAQ;;AAAqB;;AAAI;;;;;;AAKxD;;AAAqC;;AAAsB;;;;;;AAC3D;;AAAoC;;AAAuB;;;;;;AAanC;;AAEI;;AACJ;;;;;;AATR;;AACI;;AAAW;;AAAa;;AACxB;;AACI;;AAGA;;AAIJ;;AACJ;;;;;;AAJa;;AAAA;;;;;;AAKb;;AACI;;AAAW;;AAAa;;AACxB;;AACI;;AAEJ;;AACJ;;;;;;AAHwB;;AAAA;;;;;;AAYhB;;AAEI;;AACJ;;;;;;AAcJ;;AACoB;;AACpB;;;;;;AAF0C;;;;;;AAK1C;;AACmB;;AACnB;;;;;;AAF0C;;;;;;;;AAK1C;;AACI;AAAA;;AAAA;;AAAA;AAAA;;AACA;;AACJ;;;;;;;;AAGA;;AACI;AAAA;;AAAA;;AAAA,wCAAsB,MAAtB;AAA4B,WAA5B;;AACA;;AACJ;;;;;;AAJJ;;AACI;;AAGS;;AACb;;;;;;AALoE;;AACvD;;AAAA;;;;;;;;AAOT;;AACI;AAAA;;AAAA;;AAAA,wCAAsB,MAAtB;AAA4B,WAA5B;;AACA;;AACJ;;;;;;AALJ;;AAEI;;AAGS;;AACb;;;;;;AALI;;AACS;;AAAA;;;;;;;;AAOT;;AACI;AAAA;;AAAA;;AAAA,wCAAsB,OAAtB;AAA6B,WAA7B;;AACA;;AACJ;;;;;;AALJ;;AAEI;;AAGS;;AACb;;;;;;AALI;;AACS;;AAAA;;;;;;;;AAMT;;AACI;AAAA;;AAAA;;AAAA,wCAAsB,QAAtB;AAA8B,WAA9B;;AACA;;AACJ;;;;;;AAJJ;;AACI;;AAGU;;AACd;;;;;;AAL4C;;AAC/B;;AAAA;;;;;;AAgB7B;;;;UDzFKE,8B;AAgBX,gDACUnU,MADV,EAEUG,KAFV,EAGUzC,EAHV,EAIU0W,GAJV,EAKU5N,KALV,EAMUF,GANV,EAOUC,WAPV,EAQUlG,EARV,EASU1C,UATV,EASgC;AAAA;;AARtB,eAAAqC,MAAA,GAAAA,MAAA;AACA,eAAAG,KAAA,GAAAA,KAAA;AACA,eAAAzC,EAAA,GAAAA,EAAA;AACA,eAAA0W,GAAA,GAAAA,GAAA;AACA,eAAA5N,KAAA,GAAAA,KAAA;AACA,eAAAF,GAAA,GAAAA,GAAA;AACA,eAAAC,WAAA,GAAAA,WAAA;AACA,eAAAlG,EAAA,GAAAA,EAAA;AACA,eAAA1C,UAAA,GAAAA,UAAA;AArBV,eAAAwQ,UAAA,GAAsB,IAAtB;AACA,eAAAjI,MAAA,GAAkB,KAAlB;AACA,eAAAkI,MAAA,GAAkB,IAAlB;AACA,eAAAC,IAAA,GAAO,KAAP;AACA,eAAAC,OAAA,GAAmB,KAAnB;AAGA,eAAA3E,WAAA,GAAuB,KAAvB;AACA,eAAAlD,WAAA,GAAuB,IAAvB;AAcI;;;;iBAEJ,oBAAW;AAAA;;AACT,iBAAKtI,aAAL,CAAmB,EAAnB;AAEA,iBAAKqI,KAAL,CAAWE,aAAX,CAAyBvF,SAAzB,CAAmC,UAACwF,MAAD,EAAiB;AAClD,qBAAI,CAAC0N,YAAL,GAAoB1N,MAAM,CAACC,GAAP,CAAW,QAAX,CAApB;;AACA,kBAAID,MAAM,CAACC,GAAP,CAAW,QAAX,KAAwB,KAA5B,EAAmC;AACjC,uBAAI,CAACuH,UAAL,GAAkB,KAAlB;AACA,uBAAI,CAACC,MAAL,GAAc,IAAd;AACA,uBAAI,CAACE,OAAL,GAAe,IAAf;AACD,eAJD,MAIO,IAAI3H,MAAM,CAACC,GAAP,CAAW,QAAX,KAAwB,IAA5B,EAAkC;AACvC,uBAAI,CAACuH,UAAL,GAAkB,IAAlB;AACA,uBAAI,CAACC,MAAL,GAAc,IAAd;AACA,uBAAI,CAACE,OAAL,GAAe,KAAf;AACD,eAJM,MAIA,IAAI3H,MAAM,CAACC,GAAP,CAAW,QAAX,KAAwB,OAA5B,EAAqC;AAC1C,uBAAI,CAACuH,UAAL,GAAkB,KAAlB;AACA,uBAAI,CAACC,MAAL,GAAc,KAAd;AACA,uBAAI,CAACE,OAAL,GAAe,KAAf;AACD,eAJM,MAIA,IAAI3H,MAAM,CAACC,GAAP,CAAW,QAAX,KAAwB,IAA5B,EAAkC;AACvC,uBAAI,CAACwH,MAAL,GAAc,KAAd;AACD;;AACD,kBAAIzH,MAAM,CAACC,GAAP,CAAW,IAAX,CAAJ,EAAsB;AACpB,uBAAI,CAACV,MAAL,GAAc,IAAd;AACA,uBAAI,CAAChI,EAAL,GAAUyI,MAAM,CAACC,GAAP,CAAW,IAAX,CAAV;;AACA,uBAAI,CAACwN,GAAL,CAAS7F,cAAT,CAAwB5H,MAAM,CAACC,GAAP,CAAW,IAAX,CAAxB,EAA0CzF,SAA1C,CAAoD,UAACyE,IAAD,EAAU;AAC5D,yBAAI,CAACzH,aAAL,CAAmByH,IAAnB;AACD,iBAFD;;AAGA,uBAAI,CAACwO,GAAL,CACGE,uBADH,CAC2B3N,MAAM,CAACC,GAAP,CAAW,IAAX,CAD3B,EAEGzF,SAFH,CAEa,UAACyE,IAAD,EAAe;AACxB,yBAAI,CAACzH,aAAL,CAAmByH,IAAnB;;AACA,sBAAIA,IAAI,CAACtE,UAAL,IAAmB,GAAvB,EAA4B;AAC1BsE,wBAAI,CAAC+B,QAAL,GAAgB,EAAhB;AACA/B,wBAAI,CAAC8B,MAAL,GAAc,EAAd;AACD;;AACD,yBAAI,CAAC0C,SAAL,GAAiBxE,IAAjB;AACA,yBAAI,CAAC+D,WAAL,GAAmB,IAAnB;;AACA,yBAAI,CAACpD,WAAL,CAAiBQ,eAAjB,CAAiC,OAAI,CAACqD,SAAtC;AACD,iBAXH;AAYD,eAlBD,MAkBO;AACL,uBAAI,CAAC3D,WAAL,GAAmB,KAAnB;;AACA,uBAAI,CAACtI,aAAL,CAAmB,EAAnB;AACD;AACF,aAvCD;AAyCA,iBAAKyC,YAAL,GAAoB,KAAKP,EAAL,CAAQQ,OAAR,CAAgB,YAAhB,EAA8BoG,QAAlD;AACD;;;iBAED,uBAAc3I,IAAd,EAAoB;AAClB,iBAAKC,QAAL,GAAgB,KAAKb,EAAL,CAAQc,KAAR,CAAc;AAC5BN,gBAAE,EAAE,CAACI,IAAI,CAACJ,EAAL,IAAW,EAAZ,CADwB;AAE5BoD,wBAAU,EAAE,CAAChD,IAAI,CAACgD,UAAL,IAAmB,EAApB,CAFgB;AAG5BiT,0BAAY,EAAE,CAACjW,IAAI,CAACiW,YAAL,IAAqB,EAAtB,EAA0B,CAAC,0DAAW7V,QAAZ,CAA1B,CAHc;AAI5B8V,iCAAmB,EAAE,CACnBlW,IAAI,CAACkW,mBAAL,IAA4B,EADT,EAEnB,CAAC,0DAAW9V,QAAZ,CAFmB,CAJO;AAQ5B+V,0BAAY,EAAE,CAACnW,IAAI,CAACmW,YAAL,IAAqB,EAAtB,EAA0B,CAAC,0DAAW/V,QAAZ,CAA1B,CARc;AAS5BgW,sBAAQ,EAAE,CAACpW,IAAI,CAACoW,QAAL,IAAiB,IAAlB,CATkB;AAU5B1M,yBAAW,EAAE,CAAC1J,IAAI,CAAC0J,WAAL,IAAoB,EAArB,CAVe;AAW5BzG,0BAAY,EAAE,CAACjD,IAAI,CAACiD,YAAL,IAAqB,EAAtB,CAXc;AAY5B0G,qBAAO,EAAE,CAAC3J,IAAI,CAAC2J,OAAL,IAAgB,EAAjB,CAZmB;AAa5BJ,yBAAW,EAAE,CAACvJ,IAAI,CAACuJ,WAAL,IAAoB,EAArB,CAbe;AAc5BJ,8BAAgB,EAAE,CAACnJ,IAAI,CAACmJ,gBAAL,IAAyB,EAA1B,CAdU;AAe5BC,oBAAM,EAAE,CAACpJ,IAAI,CAACoJ,MAAL,IAAe,EAAhB,CAfoB;AAgB5BC,sBAAQ,EAAE,CAACrJ,IAAI,CAACqJ,QAAL,IAAiB,EAAlB,CAhBkB;AAiB5BG,wBAAU,EAAE,CAACxJ,IAAI,CAACwJ,UAAL,IAAmB,EAApB,CAjBgB;AAkB5BF,uBAAS,EAAE,CAACtJ,IAAI,CAACsJ,SAAL,IAAkB,EAAnB,CAlBiB;AAmB5BG,8BAAgB,EAAE,CAACzJ,IAAI,CAACyJ,gBAAL,IAAyB,EAA1B;AAnBU,aAAd,CAAhB;AAqBD;;;iBAED,kBAAS;AACP,iBAAK/H,MAAL,CAAYwD,QAAZ,CAAqB,sCAArB;AACD;;;iBACD,sBAAa4E,SAAb,EAAwB;AAAA;;AACtB,+DAAKC,IAAL,CAAU;AACRC,kBAAI,EACF,uBACAF,SADA,GAEA,UAFA,GAGA,0BALM;AAMRG,8BAAgB,EAAE,IANV;AAORC,gCAAkB,EAAE,SAPZ;AAQRC,+BAAiB,EAAE,MARX;AASRC,8BAAgB,EAAE,IATV;AAURC,+BAAiB,EAAE,KAVX;AAWRgM,kBAAI,EAAE;AAXE,aAAV,EAYG/L,IAZH,CAYQ,UAACC,MAAD,EAAY;AAClB,kBAAIA,MAAM,CAACC,WAAP,IAAsB,IAA1B,EAAgC;AAC9B,uBAAI,CAACnL,UAAL,CAAgBiX,sBAAhB,CAAuC,OAAI,CAACxK,SAAL,CAAelM,EAAtD,EAA0DiD,SAA1D,CACE,UAAC3D,IAAD,EAAU;AACR,yBAAI,CAACwC,MAAL,CAAYwD,QAAZ,CAAqB,sCAArB;AACD,iBAHH,EAIE,UAACuC,GAAD,EAAS;AACP,sBAAIA,GAAG,CAACC,MAAJ,IAAc,GAAlB,EAAuB;AACrB,2BAAI,CAAC7F,KAAL,CAAWc,IAAX,CAAgB,6BAAhB,EAA+C,IAA/C,EAAqD;AACnDkC,8BAAQ,EAAE,IADyC;AAEnDC,sCAAgB,EAAE,KAFiC;AAGnDC,wCAAkB,EAAE;AAH+B,qBAArD;AAKD;;AACD,yBAAI,CAACrD,MAAL,CAAYwD,QAAZ,CAAqB,sCAArB;AACD,iBAbH;AAeD;AACF,aA9BD;AA+BD;;;iBACD,sBAAa;AACX,iBAAKiD,WAAL,GAAmB,KAAnB;AACD;;;iBAED,sBAAa2B,SAAb,EAAwB;AAAA;;AACtB,+DAAKC,IAAL,CAAU;AACRC,kBAAI,EACF,uBACAF,SADA,GAEA,UAFA,GAGA,0BALM;AAMRG,8BAAgB,EAAE,IANV;AAORC,gCAAkB,EAAE,SAPZ;AAQRC,+BAAiB,EAAE,MARX;AASRC,8BAAgB,EAAE,IATV;AAURC,+BAAiB,EAAE,KAVX;AAWRgM,kBAAI,EAAE;AAXE,aAAV,EAYG/L,IAZH,CAYQ,UAACC,MAAD,EAAY;AAClB,kBAAIA,MAAM,CAACC,WAAP,IAAsB,IAA1B,EAAgC;AAC9B,oBAAI7K,OAAO,GAAQ,EAAnB;AACAA,uBAAO,CAACC,EAAR,GAAa,OAAI,CAACA,EAAlB;AACAD,uBAAO,CAACmK,SAAR,GAAoBA,SAApB;AACAnK,uBAAO,CAAC2C,YAAR,GAAuB,OAAI,CAACA,YAA5B;;AACA,uBAAI,CAACjD,UAAL,CACGkX,8BADH,CACkC5W,OADlC,EAEGkD,SAFH,CAEa,UAAC3D,IAAD,EAAU;AACnB,sBAAIA,IAAI,CAAC8D,UAAL,IAAmB,GAAvB,EAA4B;AAC1B9D,wBAAI,CAACmK,QAAL,GAAgB,EAAhB;AACAnK,wBAAI,CAACkK,MAAL,GAAc,EAAd;AACD;;AAED,yBAAI,CAAC0C,SAAL,GAAiB5M,IAAjB;;AACA,yBAAI,CAAC+I,WAAL,CAAiBQ,eAAjB,CAAiC,OAAI,CAACqD,SAAtC;;AACA,yBAAI,CAACT,WAAL,GAAmB,IAAnB;;AACA,yBAAI,CAACpD,WAAL,CAAiBS,cAAjB;;AACA,sBAAIpD,OAAO,GAAG,EAAd;;AACA,0BAAQwE,SAAR;AACE,yBAAK,MAAL;AACExE,6BAAO,GAAG,QAAV;AACA;;AACF,yBAAK,OAAL;AACEA,6BAAO,GAAG,QAAV;AACA;;AACF,yBAAK,MAAL;AACEA,6BAAO,GAAG,YAAV;AACA;;AACF;AACE;AAXJ;;AAaA,yBAAI,CAACzD,KAAL,CAAWc,IAAX,kBAA0B2C,OAA1B,sBAAoD,IAApD,EAA0D;AACxDT,4BAAQ,EAAE,IAD8C;AAExDC,oCAAgB,EAAE,KAFsC;AAGxDC,sCAAkB,EAAE;AAHoC,mBAA1D;AAKD,iBA/BH;AAgCD;AACF,aAnDD;AAoDD;;;iBAED,kBAAS;AAAA;;AACP,gBAAI,KAAK9E,QAAL,CAAcyM,OAAlB,EAA2B;AACzB;AACD,aAFD,MAEO;AACL,mBAAKzM,QAAL,CAAcS,KAAd,CAAoB4B,YAApB,GAAmC,KAAKA,YAAxC;AACA,mBAAKwT,GAAL,CAASU,oBAAT,CAA8B,KAAKvW,QAAL,CAAcS,KAA5C,EAAmDmC,SAAnD,CAA6D,UAAC3D,IAAD,EAAU;AACrE,oBAAIA,IAAI,IAAI,IAAR,IAAgB,OAAI,CAAC0I,MAAL,IAAe,IAAnC,EAAyC;AACvC,yBAAI,CAAClG,MAAL,CACGwD,QADH,CACY,sCADZ,EAEGoF,IAFH,CAEQ,UAAC0C,CAAD,EAAO;AACX,2BAAI,CAACnL,KAAL,CAAWc,IAAX,CAAgB,eAAhB,EAAiC,IAAjC,EAAuC;AACrCkC,8BAAQ,EAAE,IAD2B;AAErCC,sCAAgB,EAAE,KAFmB;AAGrCC,wCAAkB,EAAE;AAHiB,qBAAvC;AAKD,mBARH;;AASA,yBAAI,CAACiD,GAAL,CAAS4B,YAAT;AACD,iBAXD,MAWO,IAAI1K,IAAI,IAAI,IAAR,IAAgB,OAAI,CAAC0I,MAAL,IAAe,IAAnC,EAAyC;AAC9C,yBAAI,CAAClG,MAAL,CACGwD,QADH,CACY,sCADZ,EAEGoF,IAFH,CAEQ,UAAC0C,CAAD,EAAO;AACX,2BAAI,CAACnL,KAAL,CAAWc,IAAX,CAAgB,aAAhB,EAA+B,IAA/B,EAAqC;AACnCkC,8BAAQ,EAAE,IADyB;AAEnCC,sCAAgB,EAAE,KAFiB;AAGnCC,wCAAkB,EAAE;AAHe,qBAArC;AAKD,mBARH;;AASA,yBAAI,CAACiD,GAAL,CAAS4B,YAAT;AACD;AACF,eAxBD;AAyBD;AACF;;;iBAED,mBAAUhJ,KAAV,EAAsB;AACpB,gBAAMC,OAAO,GAAG,OAAhB;AACA,gBAAIC,SAAS,GAAGC,MAAM,CAACC,YAAP,CAAoBJ,KAAK,CAACK,QAA1B,CAAhB;;AACA,gBAAI,CAACJ,OAAO,CAACK,IAAR,CAAaJ,SAAb,CAAL,EAA8B;AAC5BF,mBAAK,CAACO,cAAN;AACD;AACF;;;iBACD,8BAAqBP,KAArB,EAA4B;AAC1B,gBAAI4L,GAAG,GAAGzL,MAAM,CAACC,YAAP,CAAoBJ,KAAK,CAAC6L,OAA1B,CAAV;;AACA,gBAAI,cAAcvL,IAAd,CAAmBsL,GAAnB,CAAJ,EAA6B;AAC3B,qBAAO,IAAP;AACD,aAFD,MAEO;AACL5L,mBAAK,CAACO,cAAN;AACA,qBAAO,KAAP;AACD;AACF;;;iBACD,oBAAWoC,KAAX,EAAkBkT,KAAlB,EAAyB;AACvB,mBAAOA,KAAK,CAAChX,QAAb;AACD;;;;;;;yBArPUoW,8B,EAA8B,uH,EAAA,wI,EAAA,2H,EAAA,2I,EAAA,+H,EAAA,gI,EAAA,6I,EAAA,0J,EAAA,2I;AAAA,O;;;cAA9BA,8B;AAA8B,oD;AAAA;AAAA;;;;;;;;;;;;;;;ACrB3C;;AAAsB;;AAA0B;;AAA6D;;AACtE;;AAAiC;;AAAkB;;AACtF;;AACI;;AAAwB;AAAA,qBAAS,IAAAnQ,MAAA,EAAT;AAAiB,aAAjB;;AACpB;;AAAU;;AAAU;;AACxB;;AACA;;AACA;;AACJ;;AACA;;AACI;;AACI;;AAA6B;AAAA,qBAAY,IAAAtE,MAAA,EAAZ;AAAoB,aAApB;;AACzB;;AACI;;AACI;;AAYA;;AAQA;;AAEI;;AAAW;;AAAa;;AACxB;;AACI;;AAGA;;AAIJ;;AACJ;;AACA;;AACI;;AAAW;;AAAoB;;AAC/B;;AACI;;AAEJ;;AACJ;;AACJ;;AAEA;;AACI;;AACI;;AAGJ;;AACA;;AACI;;AAGJ;;AACA;;AACI;;AAGS;;AACb;;AACA;;AAMA;;AAOA;;AAOA;;AAOA;;AAAqD;AAAA,qBAAS,IAAAsE,MAAA,EAAT;AAAiB,aAAjB;;AACjD;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AAEA;;AACI;;AACJ;;AA/GJ;;;;AACa;;AAAA;;AAAiC;;AAAA;;AAKjC;;AAAA;;AACA;;AAAA;;AAIK;;AAAA;;AAGsC;;AAAA;;AAYA;;AAAA;;AAgBnB;;AAAA;;AAQW;;AAAA;;AASf;;AAAA;;AAGJ;;AAAA;;AAEI;;AAAA;;AAGJ;;AAAA;;AACQ;;AAAA;;AAKP;;AAAA;;AAMA;;AAAA;;AAOA;;AAAA;;AAOA;;AAAA;;AAiBN;;AAAA;;;;;;;;;wEDzFXmQ,8B,EAA8B;gBAL1C,uDAK0C;iBALhC;AACTvU,oBAAQ,EAAE,6BADD;AAETC,uBAAW,EAAE,0CAFJ;AAGTC,qBAAS,EAAE,CAAC,0CAAD;AAHF,W;AAKgC,U;;;;;;;;;;;;;;;;;;;;;AAClB+P,kBAAQ,EAAE,CAAF;kBAA9B,uDAA8B;mBAApB,U;AAAoB,WAAE;;;;;;;;;;;;;;;;;;;AEtBnC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACqBiB;;AACI;;AACJ;;;;;;AAFyC;;AACrC;;AAAA;;;;;;;;AAwBI;;AAEI;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACJ;;;;;;;;;;;;AAH+B,2HAAqC,UAArC,EAAqC,6CAArC;;;;;;AADnC;;AACI;;AAIJ;;;;;;;;AAJmB;;AAAA;;;;;;AAFvB;;AACI;;AAMJ;;;;;;AANuC;;AAAA;;;;;;;;AAgBhC;;AACI;;AAAQ;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAEJ;;AAA4B;;AAAW;;AAC3C;;AACJ;;;;;;;;;;;;AAJ+E;;AAAA,8JAAyC,SAAzC,EAAyC,uGAAzC;;AAE3C;;AAAA;;;;;;;;AAa/B;;AAAQ;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAEJ;;AAA0E;;AAA6B;;AAC3G;;;;;;;;;;;;AAH6F,0MAAyG,UAAzG,EAAyG,uEAAzG;;AAErF;;AAAA;;AAAsE;;AAAA;;;;;;;;AAI9E;;AAAQ;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAGJ;;AAA0E;;AAA6B;;AAC3G;;;;;;;;;;;;AAJ6F,wJAAyC,SAAzC,EAAyC,0HAAzC;;AAGrF;;AAAA;;AAAsE;;AAAA;;;;;;;;AAI9E;;AAAQ;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAEJ;;AAA0B;;AAA8B;;AAC5D;;;;;;;;;;;;AAHsI,wJAAyC,SAAzC,EAAyC,0HAAzC;;AAExG;;AAAA;;;;;;AAlBlC;;AAGI;;AAMA;;AAOA;;AAkBJ;;;;;;AA9BmD;;AAAA;;AAO1C;;AAAA;;AAKyF;;AAAA;;;;;;AAtBtG;;AAMI;;AAsCJ;;;;;;;;AAtCuC;;AAAA,uGAAwB,cAAxB,EAAwB,gCAAxB;;;;;;AAhCnD;;AACI;;AACI;;AAQJ;;AACA;;AACI;;AAEI;;AAA8B;;AAAoB;;AACtD;;AAEA;;AACG;;AACI;;AAMJ;;AACC;;AA+CJ;;AAGJ;;AACJ;;;;;;;;;;;AA3E4C;;AAAA;;AAYF;;AAAA;;AAKH;;AAAA;;AAOS;;AAAA;;;;;;AA7BxD;;AACI;;AAEI;;AA8EJ;;AACJ;;;;;;AA/E2C;;AAAA;;;;UDzB/BmF,sB;AA+DX,wCACUhV,MADV,EACkCG,KADlC,EAC8DzC,EAD9D,EACsF2C,EADtF,EAEUC,cAFV,EAEqDgG,GAFrD,EAEoF3I,UAFpF,EAGU6G,aAHV,EAGiD;AAAA;;AAFvC,eAAAxE,MAAA,GAAAA,MAAA;AAAwB,eAAAG,KAAA,GAAAA,KAAA;AAA4B,eAAAzC,EAAA,GAAAA,EAAA;AAAwB,eAAA2C,EAAA,GAAAA,EAAA;AAC5E,eAAAC,cAAA,GAAAA,cAAA;AAA2C,eAAAgG,GAAA,GAAAA,GAAA;AAA+B,eAAA3I,UAAA,GAAAA,UAAA;AAC1E,eAAA6G,aAAA,GAAAA,aAAA;AAhEV,eAAAyQ,YAAA,GAAwB,KAAxB;AACA,eAAAC,eAAA,GAA2B,KAA3B;AACA,eAAAC,QAAA,GAAoB,IAApB;AACA,eAAAC,QAAA,GAAgB,CACd,CAAC,SAAD,EAAY,UAAZ,EAAwB,OAAxB,CADc,EAEd,CAAC,OAAD,EAAU,KAAV,EAAiB,MAAjB,CAFc,EAGd,CAAC,MAAD,EAAS,QAAT,EAAmB,WAAnB,CAHc,EAId,CAAC,SAAD,EAAY,UAAZ,EAAwB,UAAxB,CAJc,CAAhB;AAMA,eAAAC,eAAA,GAAyB,EAAzB;AACA,eAAAC,MAAA,GAAmB,CACjB,SADiB,EAEjB,UAFiB,EAGjB,OAHiB,EAIjB,OAJiB,EAKjB,KALiB,EAMjB,MANiB,EAOjB,MAPiB,EAQjB,QARiB,EASjB,WATiB,EAUjB,SAViB,EAWjB,UAXiB,EAYjB,UAZiB,CAAnB;AAcA,eAAAC,eAAA,GAA4B,CAC1B,QAD0B,EAE1B,QAF0B,EAG1B,SAH0B,EAI1B,UAJ0B,EAK1B,UAL0B,EAM1B,QAN0B,EAO1B,UAP0B,CAA5B;AASA,eAAAC,QAAA,GAAoB,CAClB,GADkB,EAElB,GAFkB,EAGlB,GAHkB,EAIlB,GAJkB,EAKlB,GALkB,EAMlB,GANkB,EAOlB,GAPkB,CAApB;AASA,eAAAC,SAAA,GAAY,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,EAAqB,EAArB,EAAyB,EAAzB,EAA6B,EAA7B,EAAiC,EAAjC,EAAqC,EAArC,EAAyC,EAAzC,EAA6C,EAA7C,CAAZ;AACA,eAAAC,QAAA,GAAiB,IAAI9W,IAAJ,EAAjB;AACA,eAAA+W,iBAAA,GAAoB,EAApB;AAGA,eAAAC,YAAA,GAAsB,EAAtB;AAEA,eAAAC,YAAA,GAAsB,EAAtB;AACA,eAAAC,gBAAA,GAA0B,EAA1B;AACA,eAAAC,UAAA,GAAsB,KAAtB;AACA,eAAAC,eAAA,GAAyB,EAAzB;AACA,eAAAC,mBAAA,GAA6B,EAA7B;AAEA,eAAAC,QAAA,GAAW,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,CAAC,0DAAWxX,QAAZ,CAApB,CAAX;AACA,eAAAyX,OAAA,GAAoB,CAAC,MAAD,EAAS,MAAT,EAAiB,MAAjB,EAAyB,MAAzB,EAAiC,MAAjC,EAAyC,MAAzC,CAApB;AACA,eAAAhE,WAAA,GAAoB,IAApB;AACA,eAAAjM,MAAA,GAAgB,KAAhB;AACA,eAAAkQ,KAAA,GAAe,CAAf,CAKiD,CA4GjD;;AACO,eAAAC,MAAA,GAAqB,CAC1B,CACE,CAAC;AAAE9E,uBAAW,EAAE,MAAf;AAAuBvS,iBAAK,EAAE,KAA9B;AAAqCsX,mBAAO,EAAE;AAA9C,WAAD,EACA;AAAE/E,uBAAW,EAAE,MAAf;AAAuBvS,iBAAK,EAAE,KAA9B;AAAqCsX,mBAAO,EAAE;AAA9C,WADA,EAEA;AAAE/E,uBAAW,EAAE,MAAf;AAAuBvS,iBAAK,EAAE,KAA9B;AAAqCsX,mBAAO,EAAE;AAA9C,WAFA,EAGA;AAAE/E,uBAAW,EAAE,MAAf;AAAuBvS,iBAAK,EAAE,KAA9B;AAAqCsX,mBAAO,EAAE;AAA9C,WAHA,EAIA;AAAE/E,uBAAW,EAAE,MAAf;AAAuBvS,iBAAK,EAAE,KAA9B;AAAqCsX,mBAAO,EAAE;AAA9C,WAJA,EAKA;AAAE/E,uBAAW,EAAE,MAAf;AAAuBvS,iBAAK,EAAE,KAA9B;AAAqCsX,mBAAO,EAAE;AAA9C,WALA,EAMA;AAAE/E,uBAAW,EAAE,MAAf;AAAuBvS,iBAAK,EAAE,KAA9B;AAAqCsX,mBAAO,EAAE;AAA9C,WANA,CADF,EAQE,CAAC;AAAE/E,uBAAW,EAAE,MAAf;AAAuBvS,iBAAK,EAAE,KAA9B;AAAqCsX,mBAAO,EAAE;AAA9C,WAAD,EACA;AAAE/E,uBAAW,EAAE,MAAf;AAAuBvS,iBAAK,EAAE,KAA9B;AAAqCsX,mBAAO,EAAE;AAA9C,WADA,EAEA;AAAE/E,uBAAW,EAAE,MAAf;AAAuBvS,iBAAK,EAAE,KAA9B;AAAqCsX,mBAAO,EAAE;AAA9C,WAFA,EAGA;AAAE/E,uBAAW,EAAE,MAAf;AAAuBvS,iBAAK,EAAE,KAA9B;AAAqCsX,mBAAO,EAAE;AAA9C,WAHA,EAIA;AAAE/E,uBAAW,EAAE,MAAf;AAAuBvS,iBAAK,EAAE,KAA9B;AAAqCsX,mBAAO,EAAE;AAA9C,WAJA,EAKA;AAAE/E,uBAAW,EAAE,MAAf;AAAuBvS,iBAAK,EAAE,KAA9B;AAAqCsX,mBAAO,EAAE;AAA9C,WALA,EAMA;AAAE/E,uBAAW,EAAE,MAAf;AAAuBvS,iBAAK,EAAE,KAA9B;AAAqCsX,mBAAO,EAAE;AAA9C,WANA,CARF,EAeE,CAAC;AAAE/E,uBAAW,EAAE,MAAf;AAAuBvS,iBAAK,EAAE,KAA9B;AAAqCsX,mBAAO,EAAE;AAA9C,WAAD,EACA;AAAE/E,uBAAW,EAAE,MAAf;AAAuBvS,iBAAK,EAAE,KAA9B;AAAqCsX,mBAAO,EAAE;AAA9C,WADA,EAEA;AAAE/E,uBAAW,EAAE,MAAf;AAAuBvS,iBAAK,EAAE,KAA9B;AAAqCsX,mBAAO,EAAE;AAA9C,WAFA,EAGA;AAAE/E,uBAAW,EAAE,MAAf;AAAuBvS,iBAAK,EAAE,KAA9B;AAAqCsX,mBAAO,EAAE;AAA9C,WAHA,EAIA;AAAE/E,uBAAW,EAAE,MAAf;AAAuBvS,iBAAK,EAAE,KAA9B;AAAqCsX,mBAAO,EAAE;AAA9C,WAJA,EAKA;AAAE/E,uBAAW,EAAE,MAAf;AAAuBvS,iBAAK,EAAE,KAA9B;AAAqCsX,mBAAO,EAAE;AAA9C,WALA,EAMA;AAAE/E,uBAAW,EAAE,MAAf;AAAuBvS,iBAAK,EAAE,KAA9B;AAAqCsX,mBAAO,EAAE;AAA9C,WANA,CAfF,CAD0B,EAwB1B,CACE,CAAC;AAAE/E,uBAAW,EAAE,MAAf;AAAuBvS,iBAAK,EAAE,KAA9B;AAAqCsX,mBAAO,EAAE;AAA9C,WAAD,EACA;AAAE/E,uBAAW,EAAE,MAAf;AAAuBvS,iBAAK,EAAE,KAA9B;AAAqCsX,mBAAO,EAAE;AAA9C,WADA,EAEA;AAAE/E,uBAAW,EAAE,MAAf;AAAuBvS,iBAAK,EAAE,KAA9B;AAAqCsX,mBAAO,EAAE;AAA9C,WAFA,EAGA;AAAE/E,uBAAW,EAAE,MAAf;AAAuBvS,iBAAK,EAAE,KAA9B;AAAqCsX,mBAAO,EAAE;AAA9C,WAHA,EAIA;AAAE/E,uBAAW,EAAE,MAAf;AAAuBvS,iBAAK,EAAE,KAA9B;AAAqCsX,mBAAO,EAAE;AAA9C,WAJA,EAKA;AAAE/E,uBAAW,EAAE,MAAf;AAAuBvS,iBAAK,EAAE,KAA9B;AAAqCsX,mBAAO,EAAE;AAA9C,WALA,EAMA;AAAE/E,uBAAW,EAAE,MAAf;AAAuBvS,iBAAK,EAAE,KAA9B;AAAqCsX,mBAAO,EAAE;AAA9C,WANA,CADF,EAQE,CAAC;AAAE/E,uBAAW,EAAE,MAAf;AAAuBvS,iBAAK,EAAE,KAA9B;AAAqCsX,mBAAO,EAAE;AAA9C,WAAD,EACA;AAAE/E,uBAAW,EAAE,MAAf;AAAuBvS,iBAAK,EAAE,KAA9B;AAAqCsX,mBAAO,EAAE;AAA9C,WADA,EAEA;AAAE/E,uBAAW,EAAE,MAAf;AAAuBvS,iBAAK,EAAE,KAA9B;AAAqCsX,mBAAO,EAAE;AAA9C,WAFA,EAGA;AAAE/E,uBAAW,EAAE,MAAf;AAAuBvS,iBAAK,EAAE,KAA9B;AAAqCsX,mBAAO,EAAE;AAA9C,WAHA,EAIA;AAAE/E,uBAAW,EAAE,MAAf;AAAuBvS,iBAAK,EAAE,KAA9B;AAAqCsX,mBAAO,EAAE;AAA9C,WAJA,EAKA;AAAE/E,uBAAW,EAAE,MAAf;AAAuBvS,iBAAK,EAAE,KAA9B;AAAqCsX,mBAAO,EAAE;AAA9C,WALA,EAMA;AAAE/E,uBAAW,EAAE,MAAf;AAAuBvS,iBAAK,EAAE,KAA9B;AAAqCsX,mBAAO,EAAE;AAA9C,WANA,CARF,EAeE,CAAC;AAAE/E,uBAAW,EAAE,MAAf;AAAuBvS,iBAAK,EAAE,KAA9B;AAAqCsX,mBAAO,EAAE;AAA9C,WAAD,EACA;AAAE/E,uBAAW,EAAE,MAAf;AAAuBvS,iBAAK,EAAE,KAA9B;AAAqCsX,mBAAO,EAAE;AAA9C,WADA,EAEA;AAAE/E,uBAAW,EAAE,MAAf;AAAuBvS,iBAAK,EAAE,KAA9B;AAAqCsX,mBAAO,EAAE;AAA9C,WAFA,EAGA;AAAE/E,uBAAW,EAAE,MAAf;AAAuBvS,iBAAK,EAAE,KAA9B;AAAqCsX,mBAAO,EAAE;AAA9C,WAHA,EAIA;AAAE/E,uBAAW,EAAE,MAAf;AAAuBvS,iBAAK,EAAE,KAA9B;AAAqCsX,mBAAO,EAAE;AAA9C,WAJA,EAKA;AAAE/E,uBAAW,EAAE,MAAf;AAAuBvS,iBAAK,EAAE,KAA9B;AAAqCsX,mBAAO,EAAE;AAA9C,WALA,EAMA;AAAE/E,uBAAW,EAAE,MAAf;AAAuBvS,iBAAK,EAAE,KAA9B;AAAqCsX,mBAAO,EAAE;AAA9C,WANA,CAfF,CAxB0B,EA+C1B,CACE,CAAC;AAAE/E,uBAAW,EAAE,MAAf;AAAuBvS,iBAAK,EAAE,KAA9B;AAAqCsX,mBAAO,EAAE;AAA9C,WAAD,EACA;AAAE/E,uBAAW,EAAE,MAAf;AAAuBvS,iBAAK,EAAE,KAA9B;AAAqCsX,mBAAO,EAAE;AAA9C,WADA,EAEA;AAAE/E,uBAAW,EAAE,MAAf;AAAuBvS,iBAAK,EAAE,KAA9B;AAAqCsX,mBAAO,EAAE;AAA9C,WAFA,EAGA;AAAE/E,uBAAW,EAAE,MAAf;AAAuBvS,iBAAK,EAAE,KAA9B;AAAqCsX,mBAAO,EAAE;AAA9C,WAHA,EAIA;AAAE/E,uBAAW,EAAE,MAAf;AAAuBvS,iBAAK,EAAE,KAA9B;AAAqCsX,mBAAO,EAAE;AAA9C,WAJA,EAKA;AAAE/E,uBAAW,EAAE,MAAf;AAAuBvS,iBAAK,EAAE,KAA9B;AAAqCsX,mBAAO,EAAE;AAA9C,WALA,EAMA;AAAE/E,uBAAW,EAAE,MAAf;AAAuBvS,iBAAK,EAAE,KAA9B;AAAqCsX,mBAAO,EAAE;AAA9C,WANA,CADF,EAQE,CAAC;AAAE/E,uBAAW,EAAE,MAAf;AAAuBvS,iBAAK,EAAE,KAA9B;AAAqCsX,mBAAO,EAAE;AAA9C,WAAD,EACA;AAAE/E,uBAAW,EAAE,MAAf;AAAuBvS,iBAAK,EAAE,KAA9B;AAAqCsX,mBAAO,EAAE;AAA9C,WADA,EAEA;AAAE/E,uBAAW,EAAE,MAAf;AAAuBvS,iBAAK,EAAE,KAA9B;AAAqCsX,mBAAO,EAAE;AAA9C,WAFA,EAGA;AAAE/E,uBAAW,EAAE,MAAf;AAAuBvS,iBAAK,EAAE,KAA9B;AAAqCsX,mBAAO,EAAE;AAA9C,WAHA,EAIA;AAAE/E,uBAAW,EAAE,MAAf;AAAuBvS,iBAAK,EAAE,KAA9B;AAAqCsX,mBAAO,EAAE;AAA9C,WAJA,EAKA;AAAE/E,uBAAW,EAAE,MAAf;AAAuBvS,iBAAK,EAAE,KAA9B;AAAqCsX,mBAAO,EAAE;AAA9C,WALA,EAMA;AAAE/E,uBAAW,EAAE,MAAf;AAAuBvS,iBAAK,EAAE,KAA9B;AAAqCsX,mBAAO,EAAE;AAA9C,WANA,CARF,EAeE,CAAC;AAAE/E,uBAAW,EAAE,MAAf;AAAuBvS,iBAAK,EAAE,KAA9B;AAAqCsX,mBAAO,EAAE;AAA9C,WAAD,EACA;AAAE/E,uBAAW,EAAE,MAAf;AAAuBvS,iBAAK,EAAE,KAA9B;AAAqCsX,mBAAO,EAAE;AAA9C,WADA,EAEA;AAAE/E,uBAAW,EAAE,MAAf;AAAuBvS,iBAAK,EAAE,KAA9B;AAAqCsX,mBAAO,EAAE;AAA9C,WAFA,EAGA;AAAE/E,uBAAW,EAAE,MAAf;AAAuBvS,iBAAK,EAAE,KAA9B;AAAqCsX,mBAAO,EAAE;AAA9C,WAHA,EAIA;AAAE/E,uBAAW,EAAE,MAAf;AAAuBvS,iBAAK,EAAE,KAA9B;AAAqCsX,mBAAO,EAAE;AAA9C,WAJA,EAKA;AAAE/E,uBAAW,EAAE,MAAf;AAAuBvS,iBAAK,EAAE,KAA9B;AAAqCsX,mBAAO,EAAE;AAA9C,WALA,EAMA;AAAE/E,uBAAW,EAAE,MAAf;AAAuBvS,iBAAK,EAAE,KAA9B;AAAqCsX,mBAAO,EAAE;AAA9C,WANA,CAfF,CA/C0B,EAsE1B,CACE,CAAC;AAAE/E,uBAAW,EAAE,MAAf;AAAuBvS,iBAAK,EAAE,KAA9B;AAAqCsX,mBAAO,EAAE;AAA9C,WAAD,EACA;AAAE/E,uBAAW,EAAE,MAAf;AAAuBvS,iBAAK,EAAE,KAA9B;AAAqCsX,mBAAO,EAAE;AAA9C,WADA,EAEA;AAAE/E,uBAAW,EAAE,MAAf;AAAuBvS,iBAAK,EAAE,KAA9B;AAAqCsX,mBAAO,EAAE;AAA9C,WAFA,EAGA;AAAE/E,uBAAW,EAAE,MAAf;AAAuBvS,iBAAK,EAAE,KAA9B;AAAqCsX,mBAAO,EAAE;AAA9C,WAHA,EAIA;AAAE/E,uBAAW,EAAE,MAAf;AAAuBvS,iBAAK,EAAE,KAA9B;AAAqCsX,mBAAO,EAAE;AAA9C,WAJA,EAKA;AAAE/E,uBAAW,EAAE,MAAf;AAAuBvS,iBAAK,EAAE,KAA9B;AAAqCsX,mBAAO,EAAE;AAA9C,WALA,EAMA;AAAE/E,uBAAW,EAAE,MAAf;AAAuBvS,iBAAK,EAAE,KAA9B;AAAqCsX,mBAAO,EAAE;AAA9C,WANA,CADF,EAQE,CAAC;AAAE/E,uBAAW,EAAE,MAAf;AAAuBvS,iBAAK,EAAE,KAA9B;AAAqCsX,mBAAO,EAAE;AAA9C,WAAD,EACA;AAAE/E,uBAAW,EAAE,MAAf;AAAuBvS,iBAAK,EAAE,KAA9B;AAAqCsX,mBAAO,EAAE;AAA9C,WADA,EAEA;AAAE/E,uBAAW,EAAE,MAAf;AAAuBvS,iBAAK,EAAE,KAA9B;AAAqCsX,mBAAO,EAAE;AAA9C,WAFA,EAGA;AAAE/E,uBAAW,EAAE,MAAf;AAAuBvS,iBAAK,EAAE,KAA9B;AAAqCsX,mBAAO,EAAE;AAA9C,WAHA,EAIA;AAAE/E,uBAAW,EAAE,MAAf;AAAuBvS,iBAAK,EAAE,KAA9B;AAAqCsX,mBAAO,EAAE;AAA9C,WAJA,EAKA;AAAE/E,uBAAW,EAAE,MAAf;AAAuBvS,iBAAK,EAAE,KAA9B;AAAqCsX,mBAAO,EAAE;AAA9C,WALA,EAMA;AAAE/E,uBAAW,EAAE,MAAf;AAAuBvS,iBAAK,EAAE,KAA9B;AAAqCsX,mBAAO,EAAE;AAA9C,WANA,CARF,EAeE,CAAC;AAAE/E,uBAAW,EAAE,MAAf;AAAuBvS,iBAAK,EAAE,KAA9B;AAAqCsX,mBAAO,EAAE;AAA9C,WAAD,EACA;AAAE/E,uBAAW,EAAE,MAAf;AAAuBvS,iBAAK,EAAE,KAA9B;AAAqCsX,mBAAO,EAAE;AAA9C,WADA,EAEA;AAAE/E,uBAAW,EAAE,MAAf;AAAuBvS,iBAAK,EAAE,KAA9B;AAAqCsX,mBAAO,EAAE;AAA9C,WAFA,EAGA;AAAE/E,uBAAW,EAAE,MAAf;AAAuBvS,iBAAK,EAAE,KAA9B;AAAqCsX,mBAAO,EAAE;AAA9C,WAHA,EAIA;AAAE/E,uBAAW,EAAE,MAAf;AAAuBvS,iBAAK,EAAE,KAA9B;AAAqCsX,mBAAO,EAAE;AAA9C,WAJA,EAKA;AAAE/E,uBAAW,EAAE,MAAf;AAAuBvS,iBAAK,EAAE,KAA9B;AAAqCsX,mBAAO,EAAE;AAA9C,WALA,EAMA;AAAE/E,uBAAW,EAAE,MAAf;AAAuBvS,iBAAK,EAAE,KAA9B;AAAqCsX,mBAAO,EAAE;AAA9C,WANA,CAfF,CAtE0B,CAArB;AA8FA,eAAAC,SAAA,GAAwB,CAC7B,CACE,CAAC;AAAEhF,uBAAW,EAAE,MAAf;AAAuBvS,iBAAK,EAAE,KAA9B;AAAqCsX,mBAAO,EAAE;AAA9C,WAAD,EACA;AAAE/E,uBAAW,EAAE,MAAf;AAAuBvS,iBAAK,EAAE,KAA9B;AAAqCsX,mBAAO,EAAE;AAA9C,WADA,EAEA;AAAE/E,uBAAW,EAAE,MAAf;AAAuBvS,iBAAK,EAAE,KAA9B;AAAqCsX,mBAAO,EAAE;AAA9C,WAFA,EAGA;AAAE/E,uBAAW,EAAE,MAAf;AAAuBvS,iBAAK,EAAE,KAA9B;AAAqCsX,mBAAO,EAAE;AAA9C,WAHA,EAIA;AAAE/E,uBAAW,EAAE,MAAf;AAAuBvS,iBAAK,EAAE,KAA9B;AAAqCsX,mBAAO,EAAE;AAA9C,WAJA,EAKA;AAAE/E,uBAAW,EAAE,MAAf;AAAuBvS,iBAAK,EAAE,KAA9B;AAAqCsX,mBAAO,EAAE;AAA9C,WALA,CADF,EAOE,CAAC;AAAE/E,uBAAW,EAAE,MAAf;AAAuBvS,iBAAK,EAAE,KAA9B;AAAqCsX,mBAAO,EAAE;AAA9C,WAAD,EACA;AAAE/E,uBAAW,EAAE,MAAf;AAAuBvS,iBAAK,EAAE,KAA9B;AAAqCsX,mBAAO,EAAE;AAA9C,WADA,EAEA;AAAE/E,uBAAW,EAAE,MAAf;AAAuBvS,iBAAK,EAAE,KAA9B;AAAqCsX,mBAAO,EAAE;AAA9C,WAFA,EAGA;AAAE/E,uBAAW,EAAE,MAAf;AAAuBvS,iBAAK,EAAE,KAA9B;AAAqCsX,mBAAO,EAAE;AAA9C,WAHA,EAIA;AAAE/E,uBAAW,EAAE,MAAf;AAAuBvS,iBAAK,EAAE,KAA9B;AAAqCsX,mBAAO,EAAE;AAA9C,WAJA,EAKA;AAAE/E,uBAAW,EAAE,MAAf;AAAuBvS,iBAAK,EAAE,KAA9B;AAAqCsX,mBAAO,EAAE;AAA9C,WALA,CAPF,EAaE,CAAC;AAAE/E,uBAAW,EAAE,MAAf;AAAuBvS,iBAAK,EAAE,KAA9B;AAAqCsX,mBAAO,EAAE;AAA9C,WAAD,EACA;AAAE/E,uBAAW,EAAE,MAAf;AAAuBvS,iBAAK,EAAE,KAA9B;AAAqCsX,mBAAO,EAAE;AAA9C,WADA,EAEA;AAAE/E,uBAAW,EAAE,MAAf;AAAuBvS,iBAAK,EAAE,KAA9B;AAAqCsX,mBAAO,EAAE;AAA9C,WAFA,EAGA;AAAE/E,uBAAW,EAAE,MAAf;AAAuBvS,iBAAK,EAAE,KAA9B;AAAqCsX,mBAAO,EAAE;AAA9C,WAHA,EAIA;AAAE/E,uBAAW,EAAE,MAAf;AAAuBvS,iBAAK,EAAE,KAA9B;AAAqCsX,mBAAO,EAAE;AAA9C,WAJA,EAKA;AAAE/E,uBAAW,EAAE,MAAf;AAAuBvS,iBAAK,EAAE,KAA9B;AAAqCsX,mBAAO,EAAE;AAA9C,WALA,CAbF,CAD6B,EAoB7B,CACE,CAAC;AAAE/E,uBAAW,EAAE,MAAf;AAAuBvS,iBAAK,EAAE,KAA9B;AAAqCsX,mBAAO,EAAE;AAA9C,WAAD,EACA;AAAE/E,uBAAW,EAAE,MAAf;AAAuBvS,iBAAK,EAAE,KAA9B;AAAqCsX,mBAAO,EAAE;AAA9C,WADA,EAEA;AAAE/E,uBAAW,EAAE,MAAf;AAAuBvS,iBAAK,EAAE,KAA9B;AAAqCsX,mBAAO,EAAE;AAA9C,WAFA,EAGA;AAAE/E,uBAAW,EAAE,MAAf;AAAuBvS,iBAAK,EAAE,KAA9B;AAAqCsX,mBAAO,EAAE;AAA9C,WAHA,EAIA;AAAE/E,uBAAW,EAAE,MAAf;AAAuBvS,iBAAK,EAAE,KAA9B;AAAqCsX,mBAAO,EAAE;AAA9C,WAJA,EAKA;AAAE/E,uBAAW,EAAE,MAAf;AAAuBvS,iBAAK,EAAE,KAA9B;AAAqCsX,mBAAO,EAAE;AAA9C,WALA,CADF,EAOE,CAAC;AAAE/E,uBAAW,EAAE,MAAf;AAAuBvS,iBAAK,EAAE,KAA9B;AAAqCsX,mBAAO,EAAE;AAA9C,WAAD,EACA;AAAE/E,uBAAW,EAAE,MAAf;AAAuBvS,iBAAK,EAAE,KAA9B;AAAqCsX,mBAAO,EAAE;AAA9C,WADA,EAEA;AAAE/E,uBAAW,EAAE,MAAf;AAAuBvS,iBAAK,EAAE,KAA9B;AAAqCsX,mBAAO,EAAE;AAA9C,WAFA,EAGA;AAAE/E,uBAAW,EAAE,MAAf;AAAuBvS,iBAAK,EAAE,KAA9B;AAAqCsX,mBAAO,EAAE;AAA9C,WAHA,EAIA;AAAE/E,uBAAW,EAAE,MAAf;AAAuBvS,iBAAK,EAAE,KAA9B;AAAqCsX,mBAAO,EAAE;AAA9C,WAJA,EAKA;AAAE/E,uBAAW,EAAE,MAAf;AAAuBvS,iBAAK,EAAE,KAA9B;AAAqCsX,mBAAO,EAAE;AAA9C,WALA,CAPF,EAaE,CAAC;AAAE/E,uBAAW,EAAE,MAAf;AAAuBvS,iBAAK,EAAE,KAA9B;AAAqCsX,mBAAO,EAAE;AAA9C,WAAD,EACA;AAAE/E,uBAAW,EAAE,MAAf;AAAuBvS,iBAAK,EAAE,KAA9B;AAAqCsX,mBAAO,EAAE;AAA9C,WADA,EAEA;AAAE/E,uBAAW,EAAE,MAAf;AAAuBvS,iBAAK,EAAE,KAA9B;AAAqCsX,mBAAO,EAAE;AAA9C,WAFA,EAGA;AAAE/E,uBAAW,EAAE,MAAf;AAAuBvS,iBAAK,EAAE,KAA9B;AAAqCsX,mBAAO,EAAE;AAA9C,WAHA,EAIA;AAAE/E,uBAAW,EAAE,MAAf;AAAuBvS,iBAAK,EAAE,KAA9B;AAAqCsX,mBAAO,EAAE;AAA9C,WAJA,EAKA;AAAE/E,uBAAW,EAAE,MAAf;AAAuBvS,iBAAK,EAAE,KAA9B;AAAqCsX,mBAAO,EAAE;AAA9C,WALA,CAbF,CApB6B,EAuC7B,CACE,CAAC;AAAE/E,uBAAW,EAAE,MAAf;AAAuBvS,iBAAK,EAAE,KAA9B;AAAqCsX,mBAAO,EAAE;AAA9C,WAAD,EACA;AAAE/E,uBAAW,EAAE,MAAf;AAAuBvS,iBAAK,EAAE,KAA9B;AAAqCsX,mBAAO,EAAE;AAA9C,WADA,EAEA;AAAE/E,uBAAW,EAAE,MAAf;AAAuBvS,iBAAK,EAAE,KAA9B;AAAqCsX,mBAAO,EAAE;AAA9C,WAFA,EAGA;AAAE/E,uBAAW,EAAE,MAAf;AAAuBvS,iBAAK,EAAE,KAA9B;AAAqCsX,mBAAO,EAAE;AAA9C,WAHA,EAIA;AAAE/E,uBAAW,EAAE,MAAf;AAAuBvS,iBAAK,EAAE,KAA9B;AAAqCsX,mBAAO,EAAE;AAA9C,WAJA,EAKA;AAAE/E,uBAAW,EAAE,MAAf;AAAuBvS,iBAAK,EAAE,KAA9B;AAAqCsX,mBAAO,EAAE;AAA9C,WALA,CADF,EAOE,CAAC;AAAE/E,uBAAW,EAAE,MAAf;AAAuBvS,iBAAK,EAAE,KAA9B;AAAqCsX,mBAAO,EAAE;AAA9C,WAAD,EACA;AAAE/E,uBAAW,EAAE,MAAf;AAAuBvS,iBAAK,EAAE,KAA9B;AAAqCsX,mBAAO,EAAE;AAA9C,WADA,EAEA;AAAE/E,uBAAW,EAAE,MAAf;AAAuBvS,iBAAK,EAAE,KAA9B;AAAqCsX,mBAAO,EAAE;AAA9C,WAFA,EAGA;AAAE/E,uBAAW,EAAE,MAAf;AAAuBvS,iBAAK,EAAE,KAA9B;AAAqCsX,mBAAO,EAAE;AAA9C,WAHA,EAIA;AAAE/E,uBAAW,EAAE,MAAf;AAAuBvS,iBAAK,EAAE,KAA9B;AAAqCsX,mBAAO,EAAE;AAA9C,WAJA,EAKA;AAAE/E,uBAAW,EAAE,MAAf;AAAuBvS,iBAAK,EAAE,KAA9B;AAAqCsX,mBAAO,EAAE;AAA9C,WALA,CAPF,EAaE,CAAC;AAAE/E,uBAAW,EAAE,MAAf;AAAuBvS,iBAAK,EAAE,KAA9B;AAAqCsX,mBAAO,EAAE;AAA9C,WAAD,EACA;AAAE/E,uBAAW,EAAE,MAAf;AAAuBvS,iBAAK,EAAE,KAA9B;AAAqCsX,mBAAO,EAAE;AAA9C,WADA,EAEA;AAAE/E,uBAAW,EAAE,MAAf;AAAuBvS,iBAAK,EAAE,KAA9B;AAAqCsX,mBAAO,EAAE;AAA9C,WAFA,EAGA;AAAE/E,uBAAW,EAAE,MAAf;AAAuBvS,iBAAK,EAAE,KAA9B;AAAqCsX,mBAAO,EAAE;AAA9C,WAHA,EAIA;AAAE/E,uBAAW,EAAE,MAAf;AAAuBvS,iBAAK,EAAE,KAA9B;AAAqCsX,mBAAO,EAAE;AAA9C,WAJA,EAKA;AAAE/E,uBAAW,EAAE,MAAf;AAAuBvS,iBAAK,EAAE,KAA9B;AAAqCsX,mBAAO,EAAE;AAA9C,WALA,CAbF,CAvC6B,EA0D7B,CACE,CAAC;AAAE/E,uBAAW,EAAE,MAAf;AAAuBvS,iBAAK,EAAE,KAA9B;AAAqCsX,mBAAO,EAAE;AAA9C,WAAD,EACA;AAAE/E,uBAAW,EAAE,MAAf;AAAuBvS,iBAAK,EAAE,KAA9B;AAAqCsX,mBAAO,EAAE;AAA9C,WADA,EAEA;AAAE/E,uBAAW,EAAE,MAAf;AAAuBvS,iBAAK,EAAE,KAA9B;AAAqCsX,mBAAO,EAAE;AAA9C,WAFA,EAGA;AAAE/E,uBAAW,EAAE,MAAf;AAAuBvS,iBAAK,EAAE,KAA9B;AAAqCsX,mBAAO,EAAE;AAA9C,WAHA,EAIA;AAAE/E,uBAAW,EAAE,MAAf;AAAuBvS,iBAAK,EAAE,KAA9B;AAAqCsX,mBAAO,EAAE;AAA9C,WAJA,EAKA;AAAE/E,uBAAW,EAAE,MAAf;AAAuBvS,iBAAK,EAAE,KAA9B;AAAqCsX,mBAAO,EAAE;AAA9C,WALA,CADF,EAOE,CAAC;AAAE/E,uBAAW,EAAE,MAAf;AAAuBvS,iBAAK,EAAE,KAA9B;AAAqCsX,mBAAO,EAAE;AAA9C,WAAD,EACA;AAAE/E,uBAAW,EAAE,MAAf;AAAuBvS,iBAAK,EAAE,KAA9B;AAAqCsX,mBAAO,EAAE;AAA9C,WADA,EAEA;AAAE/E,uBAAW,EAAE,MAAf;AAAuBvS,iBAAK,EAAE,KAA9B;AAAqCsX,mBAAO,EAAE;AAA9C,WAFA,EAGA;AAAE/E,uBAAW,EAAE,MAAf;AAAuBvS,iBAAK,EAAE,KAA9B;AAAqCsX,mBAAO,EAAE;AAA9C,WAHA,EAIA;AAAE/E,uBAAW,EAAE,MAAf;AAAuBvS,iBAAK,EAAE,KAA9B;AAAqCsX,mBAAO,EAAE;AAA9C,WAJA,EAKA;AAAE/E,uBAAW,EAAE,MAAf;AAAuBvS,iBAAK,EAAE,KAA9B;AAAqCsX,mBAAO,EAAE;AAA9C,WALA,CAPF,EAaE,CAAC;AAAE/E,uBAAW,EAAE,MAAf;AAAuBvS,iBAAK,EAAE,KAA9B;AAAqCsX,mBAAO,EAAE;AAA9C,WAAD,EACA;AAAE/E,uBAAW,EAAE,MAAf;AAAuBvS,iBAAK,EAAE,KAA9B;AAAqCsX,mBAAO,EAAE;AAA9C,WADA,EAEA;AAAE/E,uBAAW,EAAE,MAAf;AAAuBvS,iBAAK,EAAE,KAA9B;AAAqCsX,mBAAO,EAAE;AAA9C,WAFA,EAGA;AAAE/E,uBAAW,EAAE,MAAf;AAAuBvS,iBAAK,EAAE,KAA9B;AAAqCsX,mBAAO,EAAE;AAA9C,WAHA,EAIA;AAAE/E,uBAAW,EAAE,MAAf;AAAuBvS,iBAAK,EAAE,KAA9B;AAAqCsX,mBAAO,EAAE;AAA9C,WAJA,EAKA;AAAE/E,uBAAW,EAAE,MAAf;AAAuBvS,iBAAK,EAAE,KAA9B;AAAqCsX,mBAAO,EAAE;AAA9C,WALA,CAbF,CA1D6B,CAAxB;AA1MH;;;;iBAEJ,oBAAQ;AACP,iBAAKE,MAAL,GAAY,KAAKnW,EAAL,CAAQQ,OAAR,CAAgB,aAAhB,CAAZ,CADO,CAEN;AACD;;;iBAED,qBAAY4V,IAAZ,EAA0BC,KAA1B,EAAyCC,SAAzC,EAA4D;AAC1D,iBAAKF,IAAL,GAAYA,IAAZ;AACA,gBAAIG,YAAY,GAAG,EAAnB;AACA,gBAAIC,OAAO,GAAG,EAAd;AACA,gBAAIC,UAAU,GAAG,EAAjB;AACA,gBAAIjB,YAAY,GAAG,EAAnB;AACA,gBAAIG,eAAe,GAAG,EAAtB;AACA,gBAAIe,SAAS,GAAG,KAAKJ,SAArB;AACA,gBAAI/F,IAAI,GAAG,IAAIhS,IAAJ,CAAS8X,KAAK,GAAG,KAAR,GAAgBD,IAAzB,CAAX;AACA,gBAAIO,UAAU,GAAGpG,IAAI,CAACqG,MAAL,EAAjB;;AAEA,iBAAK,IAAI7V,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGuV,SAAS,GAAGI,SAAhC,EAA2C3V,CAAC,EAA5C,EAAgD;AAC9C,kBAAIA,CAAC,GAAG4V,UAAR,EAAoB;AAClBJ,4BAAY,CAACvN,IAAb,CAAkB,GAAlB;AACAyN,0BAAU,CAACzN,IAAX,CAAgB;AAAErK,uBAAK,EAAE,EAAT;AAAamW,0BAAQ,EAAE;AAAvB,iBAAhB;AACA0B,uBAAO,CAACxN,IAAR,CAAa,EAAb;AACD,eAJD,MAIO,IAAIjI,CAAC,GAAGuV,SAAS,GAAGK,UAAZ,GAAyB,CAAjC,EAAoC;AACzCJ,4BAAY,CAACvN,IAAb,CAAkB,GAAlB;AACAyN,0BAAU,CAACzN,IAAX,CAAgB;AAAErK,uBAAK,EAAE,EAAT;AAAamW,0BAAQ,EAAE;AAAvB,iBAAhB;AACA0B,uBAAO,CAACxN,IAAR,CAAa,EAAb;AACD,eAJM,MAIA;AACLuN,4BAAY,CAACvN,IAAb,CAAkB,CAACjI,CAAC,GAAG,CAAJ,GAAQ4V,UAAT,EAAqBpE,QAArB,EAAlB;AACAiE,uBAAO,CAACxN,IAAR,CAAa,CAACjI,CAAC,GAAG,CAAJ,GAAQ4V,UAAT,EAAqBpE,QAArB,EAAb;AACAkE,0BAAU,CAACzN,IAAX,CAAgB;AAAErK,uBAAK,EAAE,CAACoC,CAAC,GAAG,CAAJ,GAAQ4V,UAAT,EAAqBpE,QAArB,EAAT;AAA0CuC,0BAAQ,EAAE;AAApD,iBAAhB;AACD;;AAED,kBAAK,CAAC,IAAI/T,CAAL,IAAU,CAAV,IAAe,CAApB,EAAwB;AACtByU,4BAAY,CAACxM,IAAb,CAAkBwN,OAAlB;AACAb,+BAAe,CAAC3M,IAAhB,CAAqByN,UAArB;AACAD,uBAAO,GAAG,EAAV;AACAC,0BAAU,GAAG,EAAb;AACD;AAEF,aAjCyD,CAmC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,iBAAKd,eAAL,CAAqB3M,IAArB,CAA0B2M,eAA1B;AAEA,mBAAOY,YAAP;AACD;;;iBAGD,oBAAWH,IAAX,EAAyB;AACvB,iBAAKd,iBAAL,GAAyB,EAAzB;AACA,iBAAKuB,WAAL,GAAmB,EAAnB;AACA,iBAAKrB,YAAL,GAAoB,EAApB;AACA,iBAAKG,eAAL,GAAuB,EAAvB;AACA,iBAAKX,eAAL,GAAuB,EAAvB;AACA,iBAAKS,gBAAL,GAAwB,EAAxB;AACA,iBAAKG,mBAAL,GAA2B,EAA3B;;AACA,iBAAK,IAAI7U,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;AAC3B,mBAAKuU,iBAAL,CAAuBtM,IAAvB,CACE,KAAK8N,WAAL,CAAiBV,IAAjB,EAAuB,KAAKnB,MAAL,CAAYlU,CAAZ,CAAvB,EAAuC,KAAKqU,SAAL,CAAerU,CAAf,CAAvC,CADF;;AAIA,kBAAI,CAACA,CAAC,GAAG,CAAL,IAAU,CAAV,IAAe,CAAnB,EAAsB;AACpB,qBAAKiU,eAAL,CAAqBhM,IAArB,CAA0B,KAAKsM,iBAA/B;AACA,qBAAKuB,WAAL,GAAmB,KAAKrB,YAAxB;AACA,qBAAKC,gBAAL,CAAsBzM,IAAtB,CAA2B,KAAK6N,WAAhC;AACA,qBAAKjB,mBAAL,CAAyB5M,IAAzB,CAA8B,KAAK2M,eAAnC;AACA,qBAAKkB,WAAL,GAAmB,EAAnB;AACA,qBAAKrB,YAAL,GAAoB,EAApB;AACA,qBAAKG,eAAL,GAAuB,EAAvB;AACA,qBAAKL,iBAAL,GAAyB,EAAzB;AACD;AACF;AACF;;;iBAED,yBAAgBzW,KAAhB,EAAuB;AACrB,iBAAKkY,YAAL,GAAoB,KAAK9B,MAAL,CAAY,KAAKI,QAAL,CAAc2B,QAAd,EAAZ,CAApB;AACA,iBAAKC,gBAAL,GAAwB,KAAK5B,QAAL,CAAc6B,WAAd,EAAxB;AACA,iBAAKC,UAAL,CAAgBtY,KAAK,CAACF,KAAtB;AACAyD,mBAAO,CAACC,GAAR,CAAY,KAAKuT,mBAAjB;;AACA,iBAAI,IAAI7U,CAAC,GAAC,CAAV,EAAaA,CAAC,IAAE,KAAK6U,mBAAL,CAAyB5U,MAAzB,GAAgC,CAAhD,EAAkDD,CAAC,EAAnD,EAAsD;AACnD,mBAAI,IAAIqW,CAAC,GAACrW,CAAV,EAAYqW,CAAC,IAAE,KAAKxB,mBAAL,CAAyB7U,CAAzB,EAA4BC,MAA3C,EAAkDoW,CAAC,EAAnD,EAAsD;AACrD,qBAAI,IAAIC,CAAC,GAACD,CAAV,EAAYC,CAAC,IAAE,KAAKzB,mBAAL,CAAyB7U,CAAzB,EAA4BqW,CAA5B,EAA+BpW,MAA9C,EAAqDqW,CAAC,EAAtD,EAAyD;AACvD,uBAAKrB,MAAL,CAAYjV,CAAZ,EAAeqW,CAAf,EAAkBC,CAAlB,EAAqB1Y,KAArB,GAA2B,KAA3B;AACD;AACD;AACH;AACF;;;iBAGD,kBAAS;AACP,gBAAG,KAAKwX,MAAL,KAAc,QAAjB,EAA0B;AACxB,mBAAKxW,MAAL,CAAYwD,QAAZ,CAAqB,CAAC,yCAAD,CAArB;AACD,aAFD,MAGA,KAAKxD,MAAL,CAAYwD,QAAZ,CAAqB,CAAC,2CAAD,CAArB;AACD;;;iBA+KD,uBAActE,KAAd,EAAwCyY,EAAxC,EAA4CC,EAA5C,EAAgDC,GAAhD,EAAqD5K,GAArD,EAAyDwJ,IAAzD,EAA+D;AAC7D,iBAAKJ,MAAL,CAAYsB,EAAZ,EAAgBC,EAAhB,EAAoBC,GAApB,EAAyB7Y,KAAzB,GAAiCE,KAAK,CAAC4Y,OAAvC;AACArV,mBAAO,CAACC,GAAR,CAAYxD,KAAZ;AACA,gBAAM2C,KAAK,GAAG,KAAK0U,SAAL,CAAeoB,EAAf,EAAmBC,EAAnB,EAAuBG,SAAvB,CAAiC,UAAA5M,CAAC;AAAA,qBAAIA,CAAC,CAACnM,KAAF,IAAW,IAAf;AAAA,aAAlC,CAAd;;AACE,gBAAI6C,KAAK,IAAK,CAAC,CAAX,IAAiB3C,KAAK,CAAC4Y,OAA3B,EAAoC;AAClC;AACA;AACA;AACI;AACA;AACA;AACE,kBAAI,KAAKzB,MAAL,CAAYsB,EAAZ,EAAgBC,EAAhB,EAAoBC,GAApB,EAAyB7Y,KAA7B,EAAoC;AAClC,qBAAKoX,KAAL;AACA,qBAAK4B,gBAAL,CAAsB,KAAK/B,mBAAL,CAAyB0B,EAAzB,EAA6BC,EAA7B,CAAtB,EAAwD,KAAKxC,QAAL,CAAcuC,EAAd,EAAkBC,EAAlB,CAAxD,EAA+EnB,IAA/E,EAAqFoB,GAArF,EACE,KAAKxB,MAAL,CAAYsB,EAAZ,EAAgBC,EAAhB,EAAoBC,GAApB,EAAyB7Y,KAD3B,EACkC,KAAKuX,SAAL,CAAeoB,EAAf,EAAmBC,EAAnB,EAAuB3K,GAAvB,EAA4BjO,KAD9D,EACqEiO,GADrE,EACyE0K,EADzE,EAC4EC,EAD5E,EAFkC,CAInC;;AACC,qBAAKtR,GAAL,CAAS6B,aAAT;AACD,eAb2B,CAc9B;AACF;;AACH,aAhBD,MAgBO,IAAItG,KAAK,KAAK,CAAC,CAAD,IAAM,KAAKwU,MAAL,CAAYsB,EAAZ,EAAgBC,EAAhB,EAAoBC,GAApB,EAAyB7Y,KAApC,CAAT,EAAqD;AAC1D,mBAAKoX,KAAL;;AAEA,mBAAK,IAAI6B,MAAM,GAAG,CAAlB,EAAqBA,MAAM,GAAG,KAAK1B,SAAL,CAAeoB,EAAf,EAAmBC,EAAnB,EAAuBvW,MAArD,EAA6D4W,MAAM,EAAnE,EAAuE;AACrE,oBAAMC,YAAY,GAAG,KAAK3B,SAAL,CAAeoB,EAAf,EAAmBC,EAAnB,EAAuBK,MAAvB,CAArB;;AAEA,oBAAIC,YAAY,CAAClZ,KAAjB,EAAwB;AAEtB,uBAAKgZ,gBAAL,CAAsB,KAAK/B,mBAAL,CAAyB0B,EAAzB,EAA6BC,EAA7B,CAAtB,EAAwD,KAAKxC,QAAL,CAAcuC,EAAd,EAAkBC,EAAlB,CAAxD,EAA+EnB,IAA/E,EAAqFoB,GAArF,EACE,KAAKxB,MAAL,CAAYsB,EAAZ,EAAgBC,EAAhB,EAAoBC,GAApB,EAAyB7Y,KAD3B,EACkCkZ,YADlC,EACgDD,MADhD,EACuDN,EADvD,EAC0DC,EAD1D;AAED,iBAJD,MAIK;AACH,uBAAKI,gBAAL,CAAsB,KAAK/B,mBAAL,CAAyB0B,EAAzB,EAA6BC,EAA7B,CAAtB,EAAwD,KAAKxC,QAAL,CAAcuC,EAAd,EAAkBC,EAAlB,CAAxD,EAA+EnB,IAA/E,EAAqFoB,GAArF,EACE,KAAKxB,MAAL,CAAYsB,EAAZ,EAAgBC,EAAhB,EAAoBC,GAApB,EAAyB7Y,KAD3B,EACkCkZ,YADlC,EACgDD,MADhD,EACuDN,EADvD,EAC0DC,EAD1D;AAED;AACF;AACF,aAfM,MAeA;AACL,mBAAKI,gBAAL,CAAsB,KAAK/B,mBAAL,CAAyB0B,EAAzB,EAA6BC,EAA7B,CAAtB,EAAwD,KAAKxC,QAAL,CAAcuC,EAAd,EAAkBC,EAAlB,CAAxD,EAA+EnB,IAA/E,EAAqFoB,GAArF,EACE,KAAKxB,MAAL,CAAYsB,EAAZ,EAAgBC,EAAhB,EAAoBC,GAApB,EAAyB7Y,KAD3B,EACkC,KAAKuX,SAAL,CAAeoB,EAAf,EAAmBC,EAAnB,EAAuB3K,GAAvB,EAA4BjO,KAD9D,EACqEiO,GADrE,EACyE0K,EADzE,EAC4EC,EAD5E;AAED;;AAEP,gBAAG,KAAKxB,KAAL,IAAY,CAAf,EAAiB;AACf,mBAAKjE,WAAL,GAAiB,IAAjB;AACD,aAFD,MAGI;AACF,mBAAKA,WAAL,GAAiB,KAAjB;AACD;AAGE;;;iBACD,0BAAiBgG,QAAjB,EAA2BzB,KAA3B,EAAkCD,IAAlC,EAAwC2B,MAAxC,EAAgDC,UAAhD,EAA4DC,UAA5D,EAAwEL,MAAxE,EAA+EN,EAA/E,EAAkFC,EAAlF,EAAsF;AACpF,gBAAIhH,IAAI,GAAG,IAAIhS,IAAJ,CAAS8X,KAAK,GAAG,KAAR,GAAgBD,IAAzB,CAAX;AACA,iBAAKtE,WAAL,GAAiB,KAAjB;;AACA,iBAAK,IAAItQ,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGsW,QAAQ,CAAC9W,MAArC,EAA6CQ,KAAK,EAAlD,EAAsD;AACpD,kBAAMgE,OAAO,GAAGsS,QAAQ,CAACtW,KAAD,CAAxB;;AACA,kBAAIgE,OAAO,CAACuS,MAAD,CAAP,CAAgBpZ,KAAhB,IAAyB,EAAzB,IAA+B6G,OAAO,CAACuS,MAAD,CAAP,CAAgBpZ,KAAhB,IAAyB,GAA5D,EAAiE;AAC/D,oBAAIuZ,SAAS,GAAI,CAAC1S,OAAO,CAACuS,MAAD,CAAP,CAAgBpZ,KAAlC;AACA,oBAAIwZ,CAAC,GAAG,IAAI5Z,IAAJ,CAAS6X,IAAT,EAAe7F,IAAI,CAACyG,QAAL,EAAf,EAAgCkB,SAAhC,CAAR;AACA,oBAAIzG,YAAY,GAAG,mCAAM,CAAC0G,CAAD,CAAN,CAAUzG,MAAV,CAAiB,YAAjB,CAAnB;;AACA,oBAAIsG,UAAU,IAAIC,UAAlB,EAA8B;AAC5B,sBAAIzW,KAAK,IAAIoW,MAAb,EAAqB;AACnB,yBAAKrC,YAAL,CAAkBvM,IAAlB,CAAuByI,YAAvB;AACD;AACF,iBAJD,MAIO,IAAIuG,UAAU,IAAI,CAACC,UAAnB,EAA+B;AACpC,uBAAKrC,mBAAL,CAAyB0B,EAAzB,EAA6BC,EAA7B,EAAiC/V,KAAjC,EAAwCuW,MAAxC,EAAgDjD,QAAhD,GAAyD,IAAzD;AACA,uBAAK7O,GAAL,CAAS6B,aAAT;AACA,uBAAKyN,YAAL,CAAkBvM,IAAlB,CAAuByI,YAAvB;AACD,iBAJM,MAIA;AACL,uBAAKmE,mBAAL,CAAyB0B,EAAzB,EAA6BC,EAA7B,EAAiC/V,KAAjC,EAAwCuW,MAAxC,EAAgDjD,QAAhD,GAAyD,KAAzD;AACA,uBAAK7O,GAAL,CAAS6B,aAAT;AACA,uBAAKyN,YAAL,CAAkB6C,MAAlB,CAAyB,KAAK7C,YAAL,CAAkB8C,OAAlB,CAA0B5G,YAA1B,CAAzB,EAAkE,CAAlE;AACD;AAEF;AACF;;AACDrP,mBAAO,CAACC,GAAR,CAAY,KAAKkT,YAAjB;AACD;;;iBACD,wBAAe1W,KAAf,EAAyCyY,EAAzC,EAA6CC,EAA7C,EAAiD3K,GAAjD,EAAqDwJ,IAArD,EAA2D;AACzD,iBAAKF,SAAL,CAAeoB,EAAf,EAAmBC,EAAnB,EAAuB3K,GAAvB,EAA4BjO,KAA5B,GAAoCE,KAAK,CAAC4Y,OAA1C;AACA,gBAAMjW,KAAK,GAAG,KAAKwU,MAAL,CAAYsB,EAAZ,EAAgBC,EAAhB,EAAoBG,SAApB,CAA8B,UAAA5M,CAAC;AAAA,qBAAIA,CAAC,CAACnM,KAAF,IAAW,IAAf;AAAA,aAA/B,CAAd;;AACA,gBAAI6C,KAAK,IAAI,CAAC,CAAd,EAAiB;AACf,mBAAK,IAAIuW,MAAM,GAAG,CAAlB,EAAqBA,MAAM,GAAG,KAAK/B,MAAL,CAAYhV,MAA1C,EAAkD+W,MAAM,EAAxD,EAA4D;AAC1D,oBAAMvS,OAAO,GAAG,KAAKwQ,MAAL,CAAY+B,MAAZ,CAAhB;AACD;AACF,aAJD,MAIO;AACL,mBAAKjY,KAAL,CAAWc,IAAX,CAAgB,2BAAhB,EAA6C,IAA7C;AACD;AAEF;;;iBAED,yBAAgB2P,IAAhB,EAAqB+G,EAArB,EAAyBC,EAAzB,EAA6BnB,IAA7B,EAAiC;AAC/BhU,mBAAO,CAACC,GAAR,CAAYkO,IAAZ,EAAiB+G,EAAjB,EAAqBC,EAArB,EAAyBnB,IAAzB;AACA,gBAAIC,KAAK,GAAG,KAAKtB,QAAL,CAAcuC,EAAd,EAAkBC,EAAlB,CAAZ;AACA,gBAAIe,UAAU,GAAG,IAAI/Z,IAAJ,CAAS8X,KAAK,GAAG,KAAR,GAAgBD,IAAzB,CAAjB;AACA,gBAAI+B,CAAC,GAAG,IAAI5Z,IAAJ,CAAS6X,IAAT,EAAekC,UAAU,CAACtB,QAAX,EAAf,EAAsCzG,IAAtC,CAAR;AACA,gBAAIkB,YAAY,GAAG,mCAAM,CAAC0G,CAAD,CAAN,CAAUzG,MAAV,CAAiB,YAAjB,CAAnB;;AACA,gBAAG,KAAK6D,YAAL,CAAkB3T,QAAlB,CAA2B6P,YAA3B,CAAH,EAA4C;AAC1C,kBAAIjQ,KAAK,GAAG,KAAK+T,YAAL,CAAkB8C,OAAlB,CAA0B5G,YAA1B,CAAZ;;AACA,kBAAIjQ,KAAK,KAAK,CAAC,CAAf,EAAkB;AAChB,qBAAK+T,YAAL,CAAkB6C,MAAlB,CAAyB5W,KAAzB,EAAgC,CAAhC;AACD;AACF,aALD,MAMI;AACF,mBAAK+T,YAAL,CAAkBvM,IAAlB,CAAuByI,YAAvB;AACD;;AACD,gBAAG,KAAK8D,YAAL,CAAkBvU,MAAlB,GAA2B,CAA9B,EAAgC;AAC9B,mBAAK8Q,WAAL,GAAmB,KAAnB;AACD;;AACD1P,mBAAO,CAACC,GAAR,CAAY,KAAKkT,YAAjB;AACD;;;iBAED,kCAAyBhF,IAAzB,EAA8B+G,EAA9B,EAAkCC,EAAlC,EAAsCnB,IAAtC,EAA4C;AAC1C,gBAAIC,KAAK,GAAG,KAAKtB,QAAL,CAAcuC,EAAd,EAAkBC,EAAlB,CAAZ;AACA,gBAAIe,UAAU,GAAG,IAAI/Z,IAAJ,CAAS8X,KAAK,GAAG,KAAR,GAAgBD,IAAzB,CAAjB;AACA,gBAAI+B,CAAC,GAAG,IAAI5Z,IAAJ,CAAS6X,IAAT,EAAekC,UAAU,CAACtB,QAAX,EAAf,EAAsCzG,IAAtC,CAAR;AACA,gBAAIkB,YAAY,GAAG,mCAAM,CAAC0G,CAAD,CAAN,CAAUzG,MAAV,CAAiB,YAAjB,CAAnB;;AACA,gBAAG,KAAK6D,YAAL,CAAkB3T,QAAlB,CAA2B6P,YAA3B,CAAH,EAA4C;AACzC,qBAAO,IAAP;AACF,aAFD,MAGI;AACF,qBAAO,KAAP;AACD;AACF;;;iBAED,qBAAY2E,IAAZ,EAAkB;AAAA;;AAChB,iBAAKvQ,MAAL,GAAY,KAAZ;AACA,gBAAI2L,OAAO,GAAU,EAArB;AACA,iBAAK+D,YAAL,CAAkB7I,OAAlB,CAA0B,UAAC6L,CAAD,EAAIlB,CAAJ,EAAU;AAClC,kBAAIzZ,OAAO,GAAG;AACZyG,0BAAU,EAAE,QADA;AAEZ3G,wBAAQ,EAAE,QAFE;AAGZD,0BAAU,EAAE,QAHA;AAIZwT,4BAAY,EAAEmF,IAJF;AAKZzE,4BAAY,EAAE4G,CALF;AAMZrH,2BAAW,EAAC;AANA,eAAd;AAQAM,qBAAO,CAACxI,IAAR,CAAapL,OAAb;AACD,aAVD;AAYA,iBAAKN,UAAL,CAAgB+H,0BAAhB,CAA2CmM,OAA3C,EAAmD,KAAK3L,MAAxD,EACC/E,SADD,CACW,UAAA3D,IAAI,EAAI;AACjB,kBAAIA,IAAI,IAAI,IAAZ,EAAkB;AAChB,uBAAI,CAAC2U,WAAL,GAAiB,IAAjB;;AACA,uBAAI,CAAChS,KAAL,CAAWc,IAAX,CAAgB,eAAe,IAA/B,EAAqC,IAArC,EAA2C;AACzCkC,0BAAQ,EAAE,IAD+B;AAEzCC,kCAAgB,EAAE,KAFuB;AAGzCC,oCAAkB,EAAE;AAHqB,iBAA3C,EAFgB,CAOhB;;;AACA,uBAAI,CAACiD,GAAL,CAAS4B,YAAT;AACD;AAEF,aAbD,EAaE,UAAAmK,KAAK,EAAE;AACP,qBAAI,CAACF,WAAL,GAAiB,IAAjB;AACA1P,qBAAO,CAACC,GAAR,CAAY,WAAZ,EAAwB2P,KAAxB;;AACA,qBAAI,CAAClS,KAAL,CAAWc,IAAX,CAAgB,UAAGoR,KAAK,CAACA,KAAT,IAAmB,IAAnC,EAAyC,IAAzC,EAA+C;AAC7ClP,wBAAQ,EAAE,IADmC;AAE7CC,gCAAgB,EAAE,KAF2B;AAG7CC,kCAAkB,EAAE,OAHyB;AAI7CiP,0BAAU,EAAE;AAJiC,eAA/C;AAOD,aAvBD;AA0BD;;;iBAED,kCAAyBzQ,KAAzB,EAA+BgX,kBAA/B,EAAiD;AAE/C,mBAAOA,kBAAkB,CAAC1D,QAA1B;AACD;;;;;;;yBApgBUH,sB,EAAsB,uH,EAAA,wI,EAAA,2H,EAAA,0J,EAAA,sK,EAAA,gI,EAAA,2I,EAAA,yK;AAAA,O;;;cAAtBA,sB;AAAsB,2C;AAAA,iB;AAAA,e;AAAA,gxC;AAAA;AAAA;ACjBlC;;AAAsB;;AAA0B;;AACwC;;AAAQ;;AAChG;;AAGA;;AACI;;AAAwB;AAAA,qBAAS,IAAAhR,MAAA,EAAT;AAAiB,aAAjB;;AACpB;;AAAU;;AAAU;;AACxB;;AACA;;AACI;;AACJ;;AAGJ;;AAEA;;AACI;;AACI;;AAAU;;AAAI;;AACd;;AACI;;AAAqC;AAAA,qBAAmB,IAAA8U,eAAA,QAAnB;AAA0C,aAA1C;;AACjC;;AAGJ;;AACJ;;AAEJ;;AAEA;;AACC;;AACA;;AAAwC;AAAA,qBAAS,IAAAtG,WAAA,oBAAT;AAAoC,aAApC;;AAExB;;AAAI;;AAEtB;;AAEH;;AAEA;;;;AAvCgD;;AAAA;;AAoBxB;;AAAA;;AACqB;;AAAA;;AAWxC;;AAAA;;AAO4B;;AAAA;;;;;;;;;wEDtBrBwC,sB,EAAsB;gBALlC,uDAKkC;iBALxB;AACTpV,oBAAQ,EAAE,oBADD;AAETC,uBAAW,EAAE,iCAFJ;AAGTC,qBAAS,EAAE,CAAC,iCAAD;AAHF,W;AAKwB,U;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEjBnwDY;;AACE;;AACF;;;;;;AAF0E;;AACxE;;AAAA;;;;;;;;AAaR;;AACE;;AAA4C;AAAA;;AAAA;;AAAA;AAAA;;AAAwB;;AACpE;;AACA;;;;;;AAWA;;AAAwG;;AAExG;;;;;;AACA;;AAAqC;;AAAgC;;;;;;AAAhC;;AAAA;;;;;;AAIrC;;AAAiG;;AACjG;;;;;;AACA;;AAAqC;;AAAyB;;;;;;AAAzB;;AAAA;;;;;;AAIrC;;AAA6F;;AAE7F;;;;;;AACA;;AAAqC;;AAAqB;;;;;;AAArB;;AAAA;;;;;;AAIrC;;AAAgG;;AAChG;;;;;;AACA;;AAAqC;;AAAuB;;;;;;AAAvB;;AAAA;;;;;;AAIrC;;AAAkG;;AAElG;;;;;;AACA;;AAAqC;;AAAyB;;;;;;AAAzB;;AAAA;;;;;;AAIrC;;AAA4F;;AAC5F;;;;;;AAEE;;AAAoE;;AAA4C;;;;;;;;AAA1F,uFAAmB,UAAnB,EAAmB,gBAAnB;;AAA8C;;AAAA;;;;;;AAKtE;;AAAmC;;AAAM;;;;;;;;AACzC;;AACE;;AACC;;AAAgD;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA8B;;AAAI;;AACrF;;AAAM;;AACN;;AACC;;AAA0F;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA+B;;AAAM;;AAChI;;AACA;;;;;;AAFmD;;AAAA;;;;;;AAKrD;;;;;;AACA;;;;;;;;UD9GKiZ,gC;AAsBX,kDACUtU,MADV,EAEUtE,KAFV,EAGUG,cAHV,EAIUF,MAJV,EAKUzC,UALV,EAMUqC,MANV,EAOUK,EAPV,EAQUkG,WARV,EASUtG,cATV,EAUUC,eAVV,EAU0C;AAAA;;AAThC,eAAAuE,MAAA,GAAAA,MAAA;AACA,eAAAtE,KAAA,GAAAA,KAAA;AACA,eAAAG,cAAA,GAAAA,cAAA;AACA,eAAAF,MAAA,GAAAA,MAAA;AACA,eAAAzC,UAAA,GAAAA,UAAA;AACA,eAAAqC,MAAA,GAAAA,MAAA;AACA,eAAAK,EAAA,GAAAA,EAAA;AACA,eAAAkG,WAAA,GAAAA,WAAA;AACA,eAAAtG,cAAA,GAAAA,cAAA;AACA,eAAAC,eAAA,GAAAA,eAAA;AA7BV,eAAAS,mBAAA,GAA8B,CAA9B;AACA,eAAAH,gBAAA,GAA6B,CAAC,oBAAD,EAAuB,cAAvB,EAAuC,UAAvC,EAAmD,YAAnD,EAAiE,cAAjE,EAAiF,QAAjF,CAA7B;AAEA,eAAAC,cAAA,GAAmD,CACjD;AAAEC,eAAG,EAAE,cAAP;AAAuB1B,iBAAK,EAAE;AAA9B,WADiD,EAEjD;AAAE0B,eAAG,EAAE,oBAAP;AAA6B1B,iBAAK,EAAE;AAApC,WAFiD,EAGjD;AAAE0B,eAAG,EAAE,UAAP;AAAmB1B,iBAAK,EAAE;AAA1B,WAHiD,CAAnD;AAQA,eAAAuB,UAAA,GAAa,IAAI,2EAAJ,EAAb;AAOA,eAAAyY,gBAAA,GAAmC,EAAnC;AAYK;;;;iBAEL,oBAAW;AAAA;;AACT,iBAAKpP,WAAL,GAAmB,KAAKvJ,EAAL,CAAQQ,OAAR,CAAgB,YAAhB,CAAnB,CADS,CAET;;AACA,iBAAKiE,UAAL,GAAkB,KAAKnH,UAAL,CAAgBsb,gBAAhB,GAAmC9X,SAAnC,CAA6C,UAAA3D,IAAI,EAAI;AACrE,qBAAI,CAACwH,KAAL,GAAaxH,IAAb;;AACA,qBAAI,CAACqH,QAAL,GAFqE,CAGrE;;AACD,aAJiB,CAAlB;AAKD;;;iBACD,uBAAc;AACZ,gBAAI,KAAKC,UAAT,EAAqB;AACnB,mBAAKA,UAAL,CAAgBC,WAAhB;AACD;AACF;;;iBACD,oBAAW;AAAA;;AACT;AACA,iBAAKD,UAAL,GAAkB,KAAKnH,UAAL,CAAgBsb,gBAAhB,GACf9X,SADe,CACL,UAAC3D,IAAD,EAAgB;AACzB,kBAAGA,IAAH,EAAQ;AACN,qBAAK,IAAIqE,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGrE,IAAI,CAAC6D,MAAjC,EAAyCQ,KAAK,EAA9C,EAAkD;AAChDrE,sBAAI,CAACqE,KAAD,CAAJ,CAAYqX,kBAAZ,GAAiC7Z,MAAM,CAAC7B,IAAI,CAACqE,KAAD,CAAJ,CAAYqX,kBAAb,CAAvC;AACA1b,sBAAI,CAACqE,KAAD,CAAJ,CAAYsX,YAAZ,GAA2B9Z,MAAM,CAAC7B,IAAI,CAACqE,KAAD,CAAJ,CAAYsX,YAAb,CAAjC;;AAEA,sBAAG3b,IAAI,CAACqE,KAAD,CAAJ,CAAYP,UAAZ,IAA0B,GAA7B,EAAiC;AAC/B9D,wBAAI,CAACqE,KAAD,CAAJ,CAAYP,UAAZ,GAAyB,cAAzB;AACD;;AACD,sBAAG9D,IAAI,CAACqE,KAAD,CAAJ,CAAYP,UAAZ,IAA0B,GAA7B,EAAkC;AAChC9D,wBAAI,CAACqE,KAAD,CAAJ,CAAYP,UAAZ,GAAyB,YAAzB;AACD;;AACD,sBAAG9D,IAAI,CAACqE,KAAD,CAAJ,CAAYN,YAAZ,IAA4B,GAA/B,EAAmC;AACjC/D,wBAAI,CAACqE,KAAD,CAAJ,CAAYN,YAAZ,GAA2B,MAA3B;AACD;;AACD,sBAAG/D,IAAI,CAACqE,KAAD,CAAJ,CAAYN,YAAZ,IAA4B,GAA/B,EAAmC;AACjC/D,wBAAI,CAACqE,KAAD,CAAJ,CAAYN,YAAZ,GAA2B,QAA3B;AACD;AACF;AACF;;AACD,qBAAI,CAAChB,UAAL,GAAkB,IAAI,2EAAJ,CAAuB/C,IAAvB,CAAlB;AACA,qBAAI,CAACgE,QAAL,GAAgBhE,IAAhB;AACAiF,qBAAO,CAACC,GAAR,CAAY,OAAI,CAACnC,UAAjB;AACA,qBAAI,CAACA,UAAL,CAAgBQ,SAAhB,GAA4B,OAAI,CAACA,SAAjC;AACA,qBAAI,CAACR,UAAL,CAAgBS,IAAhB,GAAuB,OAAI,CAACA,IAA5B;AACD,aA1Be,CAAlB,CAFS,CA6BP;AACH;;;iBAEA,kBAASS,QAAT,EAAmBC,CAAnB,EAAsB;AACrB,iBAAKC,WAAL,CAAiBF,QAAjB;AACA,iBAAKG,WAAL,CAAiBF,CAAjB;AACD;;;iBAED,qBAAYD,QAAZ,EAAsB;AACpB,iBAAKlB,UAAL,CAAgBuB,eAAhB,GAAkC,UAACtE,IAAD,EAAYuE,MAAZ,EAAwC;;;AACxE,qBAAQ,CAAD,KACLvE,IAAI,CAACiE,QAAD,CADE,MACQ,IADR,IACQ,aADR,GACQ,MADR,GACQ,GAAEO,iBAAF,GAAsB4Q,QAAtB,GAAiC3Q,QAAjC,CAA0CF,MAA1C,CADhB;AAGD,aAJD;AAKD;;;iBAGD,uBAAc;AACZ,iBAAKxB,UAAL,CAAgBwB,MAAhB,GAAyB,EAAzB;AACA,iBAAKuC,SAAL,CAAec,aAAf,CAA6BpG,KAA7B,GAAqC,EAArC;AACA,iBAAK2B,mBAAL,GAA2B,CAA3B;AACD;;;iBAED,qBAAYzB,KAAZ,EAAwB;AACtB,gBAAIgD,WAAW,GAAIhD,KAAK,CAACiD,MAAN,CAAkCnD,KAArD;AACA,aAACoa,KAAK,CAACla,KAAK,CAACwB,GAAP,CAAN,GAAmBwB,WAAW,GAAG7C,MAAM,CAAC6C,WAAD,CAAvC,GAAuD,EAAvD;AACA,iBAAK3B,UAAL,CAAgBwB,MAAhB,GAAyBG,WAAW,CAACE,IAAZ,GAAmBC,WAAnB,EAAzB;AACD;;;iBAED,4BAAmBC,SAAnB,EAAoC;AAClC,gBAAIA,SAAS,CAACC,SAAd,EAAyB;AACvB,mBAAKtC,cAAL,CAAoBuC,QAApB,kBAAuCF,SAAS,CAACC,SAAjD;AACD,aAFD,MAEO;AACL,mBAAKtC,cAAL,CAAoBuC,QAApB,CAA6B,iBAA7B;AACD;AACF;;;iBACD,uCAA2B;AACzB,iBAAKtC,eAAL,CAAqBoD,aAArB,CAAmC,6BAAnC,EAAiE,KAAK9B,QAAtE;AACD;;;iBACD,sBAAatC,KAAb,EAAoB;AAAA;;AAClBuD,mBAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBxD,KAAK,CAACyD,IAAN,CAAW,CAAX,EAAcC,KAAd,CAAoB,CAApB,CAArB;AACA,gBAAMC,IAAI,GAAS3D,KAAK,CAACyD,IAAN,CAAW,CAAX,EAAcC,KAAd,CAAoB,CAApB,CAAnB;AACA,gBAAME,UAAU,GAAG,IAAIC,QAAJ,EAAnB;AACAD,sBAAU,CAACE,MAAX,CAAkB,YAAlB,EAAgC,kBAAhC;AACAF,sBAAU,CAACE,MAAX,CAAkB,MAAlB,EAA0BH,IAA1B;AACA,iBAAKlF,UAAL,CAAgBsF,cAAhB,CAA+BH,UAA/B,EAA2C3B,SAA3C,CAAqD,UAAC+B,QAAD,EAAc;AACjET,qBAAO,CAACC,GAAR,CAAYQ,QAAZ;;AACA,qBAAI,CAAC2B,QAAL;;AACA,qBAAI,CAAC1E,KAAL,CAAWc,IAAX,+BAA8C,IAA9C,EAAoD;AAClDkC,wBAAQ,EAAE,IADwC;AAElDC,gCAAgB,EAAE,KAFgC;AAGlDC,kCAAkB,EAAE;AAH8B,eAApD;AAKD,aARD;AASD;;;iBAGD,oBAAW4J,GAAX,EAAgB;AAAA;;AACdA,eAAG,CAACiM,kBAAJ,GAAyB,CAACjM,GAAG,CAACiM,kBAA9B;AACAjM,eAAG,CAACkM,YAAJ,GAAmB,CAAClM,GAAG,CAACkM,YAAxB;AACA,iBAAK7Y,cAAL,CAAoBqD,OAApB,CAA4B;AAAEC,qBAAO,mBAAYqJ,GAAG,CAACiM,kBAAhB;AAAT,aAA5B,EACG/X,SADH,CACa,UAAA2C,GAAG,EAAI;AAChB,kBAAIA,GAAJ,EAAS;AACP,uBAAI,CAAC1D,MAAL,CAAYa,IAAZ;;AACA,uBAAI,CAACtD,UAAL,CAAgB0b,0BAAhB,CAA2CpM,GAAG,CAACiM,kBAA/C,EACG/X,SADH,CACa,UAAC2C,GAAD,EAAc,CACxB,CAFH,EAEK,UAACiC,GAAD,EAAc;AACf;;AACA,sBAAIA,GAAG,CAACC,MAAJ,IAAc,GAAlB,EAAuB;AACrB,2BAAI,CAAC5F,MAAL,CAAYnB,KAAZ;;AACA,2BAAI,CAAC4F,QAAL;;AACA,2BAAI,CAAC1E,KAAL,CAAWc,IAAX,CAAgB,iBAAhB,EAAmC,IAAnC,EAAyC;AAAEkC,8BAAQ,EAAE;AAAZ,qBAAzC;AAED;AACF,iBAVH;AAWD;AACF,aAhBH;AAiBD;;;iBAED,mBAAU8J,GAAV,EAAa;AACXA,eAAG,CAACiM,kBAAJ,GAAyB,CAACjM,GAAG,CAACiM,kBAA9B;AACAjM,eAAG,CAACkM,YAAJ,GAAmB,CAAClM,GAAG,CAACkM,YAAxB;AACA,iBAAKG,UAAL,CAAgBrM,GAAhB;AACA,iBAAKjN,MAAL,CAAYwD,QAAZ,CAAqB,8CAAuCyJ,GAAG,CAACiM,kBAA3C,EAArB;AACD;;;iBAGD,oBAAWjM,GAAX,EAAc;AAAA;;AACZ,iBAAK7M,MAAL,CAAYa,IAAZ;AACA,iBAAKtD,UAAL,CAAgB4b,gBAAhB,CAAiCtM,GAAG,CAACiM,kBAArC,EAAyD/X,SAAzD,CAAmE,UAAC3D,IAAD,EAAe;AAChF,qBAAI,CAACgc,mBAAL,GAAyBhc,IAAzB;;AAEA,kBAAG,OAAI,CAACgc,mBAAL,IAA4B,IAA/B,EAAoC;AAClCtP,4BAAY,CAACjE,OAAb,CAAqB,qBAArB,EAA2C+D,IAAI,CAACgJ,SAAL,CAAe,OAAI,CAACwG,mBAApB,CAA3C;AACC;AACF,aANH;AAOE,iBAAKpZ,MAAL,CAAYnB,KAAZ;AACH;;;iBAED,kBAAM;AACJ,iBAAKe,MAAL,CAAYwD,QAAZ,CAAqB,CAAC,wCAAD,CAArB;AACD;;;iBAED,kBAAM;AACJ,iBAAKxD,MAAL,CAAYwD,QAAZ,CAAqB,CAAC,mBAAD,CAArB;AACD;;;iBAED,uBAAczB,MAAd,EAAoB;AAClB,mBAAOA,MAAM,CAAC/C,KAAd;AACD;;;;;;;yBA3LU+Z,gC,EAAgC,mI,EAAA,wI,EAAA,sK,EAAA,mK,EAAA,2I,EAAA,uH,EAAA,0J,EAAA,6I,EAAA,iI,EAAA,sJ;AAAA,O;;;cAAhCA,gC;AAAgC,sD;AAAA;AAAA;;;sEAWhC,+D,EAAO,I;;sEACP,wE,EAAY,I;;;;;;;;;;;;;;;;;;AC1CzB;;AAAsB;;AAA0B;;AAA2D;;AAC3G;;AACA;;AACE;;AACF;;AACA;;AACE;;AAAwB;AAAA,qBAAS,IAAA/U,MAAA,EAAT;AAAiB,aAAjB;;AACtB;;AAAU;;AAAU;;AACtB;;AACA;;AACE;;AACF;;AACA;;AAEF;;AACE;;AACE;;AACE;;AACE;;AACE;;AACE;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AAEF;;AACF;;AACF;;AACA;;AACF;;AACE;;AAAU;;AAAS;;AACrB;;AACA;;AACE;;AACE;;AAAoC;;AAAM;;AAC1C;;AAIE;AAAA,qBAAU,IAAAC,YAAA,QAAV;AAA8B,aAA9B;;AAJF;;AAMF;;AACA;;AAAQ;AAAA,qBAAS,IAAAwV,2BAAA,EAAT;AAAsC,aAAtC;;AACN;;AAAM;;AAAQ;;AAChB;;AACF;;AACA;;AACA;;AACE;;AACE;;AACE;;AACE;;AACE;;AAAW;;AAAS;;AACpB;;AAAsC;AAAA;AAAA;;AAEpC;;AAAsB;;AAAM;;AAC5B;;AAGF;;AACF;;AACF;;AACA;;AACE;;AACE;;AAAW;;AAAM;;AACjB;;AAA2B;AAAA;;AAAA;;AAAA,qBAAS,IAAAtV,QAAA,mBAAT;AAAwC,aAAxC;;AAA3B;;AAEA;;AAAoB;;AAAM;;AAC5B;;AACF;;AACA;;AAIE;;AACC;;AAA0D;AAAA,qBAAS,IAAAgC,MAAA,EAAT;AAAiB,aAAjB;;AAAoB;;AAC9E;;AACF;;AACL;;AACA;;AAEA;;AACE;;AAA4D;AAAA,qBAAiB,IAAA9B,kBAAA,QAAjB;AAA2C,aAA3C;;AAC1D;;AACE;;AAGA;;AACF;;AAEA;;AACE;;AAEA;;AACF;;AAEA;;AACE;;AAGA;;AACF;;AAEA;;AACE;;AAEA;;AACF;;AAEA;;AACE;;AAGA;;AACF;;AAEA;;AACE;;AAEA;;AAGF;;AAEA;;AACE;;AACA;;AAQF;;AAEA;;AACA;;AACF;;AACA;;AACF;;AAEF;;AACF;;;;;;;;;;AA/IgB;;AAAA;;AA6BU;;AAAA;;AAwBwB;;AAAA;;AAGL;;AAAA,oGAAmB,cAAnB,EAAmB,iBAAnB;;AAc/B;;AAAA;;AAYkB;;AAAA;;AAsDP;;AAAA;;AACa;;AAAA;;AAEH;;AAAA;;;;;;qBDlHrB;;;;;;wEAED0U,gC,EAAgC;gBAN5C,uDAM4C;iBANlC;AACTnZ,oBAAQ,EAAE,+BADD;AAETC,uBAAW,EAAE,4CAFJ;AAGTC,qBAAS,EAAE,CAAC,4CAAD,CAHF;AAITqT,sBAAU,EAAE;AAJH,W;AAMkC,U;;;;;;;;;;;;;;;;;;;;;;;AAEnB7O,mBAAS,EAAE,CAAF;kBAAhC,uDAAgC;mBAAtB,W;AAAsB,WAAE,C;AASftD,cAAI,EAAE,CAAF;kBAAvB,uDAAuB;mBAAb,+D;AAAa,WAAE,C;AACDD,mBAAS,EAAE,CAAF;kBAAjC,uDAAiC;mBAAvB,wE;AAAuB,WAAE;;;;;;;;;;;;;;;;;;;AE1CtsDa;;AACE;;AACF;;;;;;AAFoF;;AAClF;;AAAA;;;;;;;;AAaT;;AACE;;AAA4C;AAAA;;AAAA;;AAAA;AAAA;;AAAwB;;AACpE;;AACF;;;;;;AAYG;;AAAgG;;AAChG;;;;;;AACA;;AAAqC;;AAAuB;;;;;;AAAvB;;AAAA;;;;;;AAIrC;;AAA8F;;AAC9F;;;;;;AACA;;AAAqC;;AAAqB;;;;;;AAArB;;AAAA;;;;;;AAIrC;;AAAoG;;AACjG;;;;;;AACH;;AAAqC;;AAA0B;;;;;;AAA1B;;AAAA;;;;;;AAQrC;;AAAkG;;AACjG;;;;;;AACD;;AAAqC;;AAAwB;;;;;;AAAxB;;AAAA;;;;;;AAGrC;;AAAgG;;AAC/F;;;;;;AACD;;AAAqC;;AAAuB;;;;;;AAAvB;;AAAA;;;;;;AAGrC;;AAAkG;;AACjG;;;;;;AACD;;AAAqC;;AAAyB;;;;;;AAAzB;;AAAA;;;;;;AAItC;;AAAmC;;AAAM;;;;;;;;AACzC;;AACE;;AACC;;AAAgD;AAAA;;AAAA;;AAAA;;AAAA,kDAA2B,KAA3B;AAAgC,WAAhC;;AAAqC;;AAAI;;AAC5F;;AAAM;;AACN;;AACC;;AAAkD;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA+B;;AAAM;;AACxF;;AACA;;;;;;AAGD;;;;;;AACA;;;;;;;;UD9GM2Y,+B;AAuBX,iDACUjV,MADV,EAEUtE,KAFV,EAGUG,cAHV,EAIUF,MAJV,EAKUgU,GALV,EAKkCpU,MALlC,EAMUuG,WANV,EAM0CtG,cAN1C,EAOUI,EAPV,EAQUH,eARV,EAQ0C;AAAA;;AAPhC,eAAAuE,MAAA,GAAAA,MAAA;AACA,eAAAtE,KAAA,GAAAA,KAAA;AACA,eAAAG,cAAA,GAAAA,cAAA;AACA,eAAAF,MAAA,GAAAA,MAAA;AACA,eAAAgU,GAAA,GAAAA,GAAA;AAAwB,eAAApU,MAAA,GAAAA,MAAA;AACxB,eAAAuG,WAAA,GAAAA,WAAA;AAAgC,eAAAtG,cAAA,GAAAA,cAAA;AAChC,eAAAI,EAAA,GAAAA,EAAA;AACA,eAAAH,eAAA,GAAAA,eAAA;AA7BV,eAAAS,mBAAA,GAA+B,CAA/B;AAEA,eAAAJ,UAAA,GAAa,IAAI,0EAAJ,EAAb;AACA,eAAAC,gBAAA,GAA6B,CAAC,YAAD,EAAe,UAAf,EAA2B,eAA3B,EAA4C,aAA5C,EAA2D,YAA3D,EAAyE,cAAzE,EAAyF,QAAzF,CAA7B;AAEA,eAAAC,cAAA,GAAmD,CACjD;AAAEC,eAAG,EAAE,YAAP;AAAqB1B,iBAAK,EAAE;AAA5B,WADiD,EAEjD;AAAE0B,eAAG,EAAE,UAAP;AAAmB1B,iBAAK,EAAE;AAA1B,WAFiD,CAAnD;AAyBK;;;;iBAEL,oBAAW;AACP,iBAAKuL,aAAL;AACA,iBAAKrD,WAAL;AACA,iBAAKrC,QAAL;AACD;;;iBACD,uBAAc;AACZ,gBAAI,KAAKC,UAAT,EAAqB;AACnB,mBAAKA,UAAL,CAAgBC,WAAhB;AACD;AACF;;;iBACD,kBAAS;AACP,iBAAK/E,MAAL,CAAYwD,QAAZ,CAAqB,2CAArB;AACD;;;iBAED,iCAAwB3B,KAAxB,EAA+BvD,IAA/B,EAAqC;AACnC,mBAAOuD,KAAP;AACD;;;iBACD,sBAAa3C,KAAb,EAAoB;AAAA;;AAClBuD,mBAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBxD,KAAK,CAACyD,IAAN,CAAW,CAAX,EAAcC,KAAd,CAAoB,CAApB,CAArB;AACA,gBAAMC,IAAI,GAAS3D,KAAK,CAACyD,IAAN,CAAW,CAAX,EAAcC,KAAd,CAAoB,CAApB,CAAnB;AACA,gBAAME,UAAU,GAAG,IAAIC,QAAJ,EAAnB;AACAD,sBAAU,CAACE,MAAX,CAAkB,YAAlB,EAAgC,mBAAhC;AACAF,sBAAU,CAACE,MAAX,CAAkB,MAAlB,EAA0BH,IAA1B;AACA,iBAAKuR,GAAL,CAASnR,cAAT,CAAwBH,UAAxB,EAAoC3B,SAApC,CAA8C,UAAC+B,QAAD,EAAc;AAC1DT,qBAAO,CAACC,GAAR,CAAYQ,QAAZ;;AACA,qBAAI,CAAC2B,QAAL;;AACA,qBAAI,CAAC1E,KAAL,CAAWc,IAAX,+BAA8C,IAA9C,EAAoD;AAClDkC,wBAAQ,EAAE,IADwC;AAElDC,gCAAgB,EAAE,KAFgC;AAGlDC,kCAAkB,EAAE;AAH8B,eAApD;AAKD,aARD;AASD;;;iBAED,oBAAW;AAAA;;AACT,iBAAK+Q,GAAL,CAASuF,kBAAT,GAA8BxY,SAA9B,CAAwC,UAACyY,YAAD,EAAuB;AAC7D,kBAAGA,YAAH,EAAgB;AAEd,qBAAI,IAAIxY,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACwY,YAAY,CAACvY,MAA3B,EAAkCD,CAAC,EAAnC,EAAsC;AACpC,sBAAGwY,YAAY,CAACxY,CAAD,CAAZ,CAAgBE,UAAhB,IAA8B,GAAjC,EAAqC;AACnCsY,gCAAY,CAACxY,CAAD,CAAZ,CAAgBE,UAAhB,GAA6B,cAA7B;AACD;;AACD,sBAAGsY,YAAY,CAACxY,CAAD,CAAZ,CAAgBE,UAAhB,IAA8B,GAAjC,EAAsC;AACpCsY,gCAAY,CAACxY,CAAD,CAAZ,CAAgBE,UAAhB,GAA6B,YAA7B;AACD;;AACD,sBAAGsY,YAAY,CAACxY,CAAD,CAAZ,CAAgBG,YAAhB,IAAgC,GAAnC,EAAuC;AACrCqY,gCAAY,CAACxY,CAAD,CAAZ,CAAgBG,YAAhB,GAA+B,MAA/B;AACD;;AACD,sBAAGqY,YAAY,CAACxY,CAAD,CAAZ,CAAgBG,YAAhB,IAAgC,GAAnC,EAAuC;AACrCqY,gCAAY,CAACxY,CAAD,CAAZ,CAAgBG,YAAhB,GAA+B,QAA/B;AACD;AACF;;AACH,uBAAI,CAACsY,qBAAL,GAA6BD,YAA7B;AACE,uBAAI,CAAC5U,KAAL,GAAc,OAAI,CAAC6U,qBAAnB;AACA,uBAAI,CAACtZ,UAAL,GAAkB,IAAI,0EAAJ,CAAuBqZ,YAAvB,CAAlB;AACA,uBAAI,CAACjV,KAAL,GAAaiV,YAAb;AACA,uBAAI,CAACrZ,UAAL,CAAgBQ,SAAhB,GAA4B,OAAI,CAACA,SAAjC;AACA,uBAAI,CAACR,UAAL,CAAgBS,IAAhB,GAAuB,OAAI,CAACA,IAA5B;AACD;AACA,aAxBH;AA0BD;;;iBACD,uBAAW;AAAA;;AACT,iBAAKoT,GAAL,CAASlN,WAAT,GAAuB/F,SAAvB,CAAiC,UAAC2Y,OAAD,EAAkB;AACjD,qBAAI,CAAC/b,QAAL,GAAc+b,OAAd;AACC,aAFH;AAGD;;;iBACD,yBAAgB;AAAA;;AACd,iBAAK1F,GAAL,CAAS7J,aAAT,GAAyBpJ,SAAzB,CAAmC,UAACyE,IAAD,EAAU;AAC3C,qBAAI,CAACiE,MAAL,GAAcjE,IAAd;AACD,aAFD;AAGD;;;iBACH,kBAASnE,QAAT,EAAmBC,CAAnB,EAAoB;AAClB,iBAAKC,WAAL,CAAiBF,QAAjB;AACA,iBAAKG,WAAL,CAAiBF,CAAjB;AACD;;;iBAED,qBAAYD,QAAZ,EAAsB;AACpB,iBAAKlB,UAAL,CAAgBuB,eAAhB,GAAkC,UAACtE,IAAD,EAAYuE,MAAZ,EAAwC;;;AACxE,qBAAQ,CAAD,KACLvE,IAAI,CAACiE,QAAD,CADE,MACQ,IADR,IACQ,aADR,GACQ,MADR,GACQ,GAAEO,iBAAF,GAAsBC,QAAtB,CAA+BF,MAA/B,CADhB;AAGD,aAJD;AAKD;;;iBAED,uBAAW;AACV,iBAAKxB,UAAL,CAAgBwB,MAAhB,GAAyB,EAAzB;AACA,iBAAKuC,SAAL,CAAec,aAAf,CAA6BpG,KAA7B,GAAqC,EAArC;AACA,iBAAK2B,mBAAL,GAA2B,CAA3B;AACA;;;iBAGD,qBAAYzB,KAAZ,EAA0B;AACxB,gBAAMgD,WAAW,GAAIhD,KAAK,CAACiD,MAAN,CAAkCnD,KAAvD;AACA,iBAAKuB,UAAL,CAAgBwB,MAAhB,GAAyBG,WAAW,CAACE,IAAZ,GAAmBC,WAAnB,EAAzB;AACD;;;iBACD,4BAAmBC,SAAnB,EAAoC;AAClC,gBAAIA,SAAS,CAACC,SAAd,EAAyB;AACvB,mBAAKtC,cAAL,CAAoBuC,QAApB,kBAAuCF,SAAS,CAACC,SAAjD;AACD,aAFD,MAEO;AACL,mBAAKtC,cAAL,CAAoBuC,QAApB,CAA6B,iBAA7B;AACD;AACF;;;iBACD,qBAA0C;AAAA,gBAAhChF,IAAgC,uEAApB,EAAoB;AAAA,gBAAjB0I,MAAiB;AACxC,iBAAKlG,MAAL,CAAYwD,QAAZ,CAAqB,CAAC,yCAAD,CAArB,EAAiE;AAAEC,yBAAW,EAAE;AAAEvF,kBAAE,EAAEV,IAAI,CAACU,EAAX;AAAegI,sBAAM,EAAGA;AAAxB;AAAf,aAAjE;AAGD;;;iBAED,qBAAS;AACP,iBAAKhG,eAAL,CAAqBoD,aAArB,CAAmC,sBAAnC,EAA2D,KAAKqB,KAAhE;AAED;;;iBAGD,8BAAkB;AAAA;;AAChB,iBAAKyP,GAAL,CAAS2F,gBAAT,CAA0B,KAAK7b,EAA/B,EAAmCiD,SAAnC,CAA6C,UAACyE,IAAD,EAAS;AACrD,qBAAI,CAACoU,cAAL,GAAoBpU,IAApB;AACA,aAFD;AAGA,iBAAKW,WAAL,CAAiB0T,YAAjB,CAA8B,KAAKD,cAAnC;AACA,iBAAKha,MAAL,CAAYwD,QAAZ,CAAqB,mDAA4C,KAAKtF,EAAjD,EAArB;AACD;;;iBAED,kBAAS;AACP,iBAAK8B,MAAL,CAAYwD,QAAZ,CAAqB,sBAArB;AACD;;;iBAED,oBAAWyJ,GAAX,EAAgB;AAAA;;AACd,iBAAK3M,cAAL,CAAoBqD,OAApB,CAA4B;AAACC,qBAAO,mBAAYqJ,GAAG,CAACvI,UAAhB;AAAR,aAA5B,EACGvD,SADH,CACa,UAAA2C,GAAG,EAAI;AAChB,kBAAIA,GAAJ,EAAS;AACP,uBAAI,CAAC1D,MAAL,CAAYa,IAAZ;;AACA,uBAAI,CAACmT,GAAL,CAAS8F,qBAAT,CAA+BjN,GAAG,CAAC/O,EAAnC,EACGiD,SADH,CACa,UAAC2C,GAAD,EAAc,CACpB,CAFP,EAES,UAACiC,GAAD,EAAc;AAAC;;AACpB,sBAAIA,GAAG,CAACC,MAAJ,IAAc,GAAlB,EAAuB;AACrB,2BAAI,CAAC5F,MAAL,CAAYnB,KAAZ;;AACA,2BAAI,CAAC4F,QAAL;;AACA,2BAAI,CAAC1E,KAAL,CAAWc,IAAX,CAAgB,iBAAhB,EAAmC,IAAnC,EAAyC;AAAEkC,8BAAQ,EAAE;AAAZ,qBAAzC;AAEC;AAAE,iBART;AASD;AACF,aAdH;AAeD;;;;;;;yBAjLUuW,+B,EAA+B,mI,EAAA,wI,EAAA,sK,EAAA,mK,EAAA,2I,EAAA,uH,EAAA,6I,EAAA,iI,EAAA,0J,EAAA,sJ;AAAA,O;;;cAA/BA,+B;AAA+B,sD;AAAA;AAAA;;;sEAY/B,+D,EAAO,I;;sEACP,yE,EAAY,I;;;;;;;;;;;;;;;;;;ACpCzB;;AAAsB;;AAA0B;;AAAoD;;AACpG;;AACA;;AACE;;AAAwB;AAAA,qBAAS,IAAA1V,MAAA,EAAT;AAAiB,aAAjB;;AACtB;;AAAU;;AAAU;;AACtB;;AACA;;AACE;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AACE;;AACE;;AACE;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AAEF;;AACF;;AACF;;AACA;;AACE;;AACG;;AAAU;;AAAS;;AACtB;;AACA;;AACG;;AACC;;AAAoC;;AAAM;;AAC1C;;AAIE;AAAA,qBAAU,IAAAC,YAAA,QAAV;AAA8B,aAA9B;;AAJF;;AAMF;;AACC;;AAAQ;AAAA,qBAAS,IAAAkW,SAAA,EAAT;AAAoB,aAApB;;AACN;;AAAM;;AAAQ;;AAChB;;AACH;;AACL;;AACC;;AACI;;AACC;;AACE;;AACC;;AAAW;;AAAS;;AACnB;;AAAsC;AAAA;AAAA;;AAEpC;;AAAsB;;AAAM;;AAC5B;;AAGF;;AACF;;AACF;;AACA;;AACE;;AACC;;AAAW;;AAAM;;AAChB;;AAA2B;AAAA;;AAAA;;AAAA,qBAAS,IAAAhW,QAAA,mBAAT;AAAwC,aAAxC;;AAA3B;;AAEA;;AAAoB;;AAAM;;AAC5B;;AACF;;AACD;;AAIA;;AACC;;AAA0D;AAAA,qBAAS,IAAAgC,MAAA,EAAT;AAAiB,aAAjB;;AAAoB;;AAC9E;;AACF;;AAEA;;AACH;;AACA;;AACG;;AAA4D;AAAA,qBAAiB,IAAA9B,kBAAA,QAAjB;AAA2C,aAA3C;;AAE1D;;AACE;;AAEA;;AACF;;AAEA;;AACE;;AAEA;;AACF;;AAEA;;AACE;;AAEA;;AACF;;AAMA;;AACE;;AAEA;;AACF;;AACA;;AACE;;AAEA;;AACF;;AACA;;AACE;;AAEA;;AACF;;AAEA;;AACC;;AACA;;AAQF;;AAEC;;AACA;;AACF;;AACA;;AACF;;AACD;;;;;;;;;;AA7G4B;;AAAA;;AAuBmB;;AAAA;;AAGL;;AAAA,oGAAmB,cAAnB,EAAmB,2BAAnB;;AAchC;;AAAA;;AAYmB;;AAAA;;AAoDP;;AAAA;;AACa;;AAAA;;AAEH;;AAAA;;;;;;;;;wEDhHrBqV,+B,EAA+B;gBAL3C,uDAK2C;iBALjC;AACT9Z,oBAAQ,EAAE,+BADD;AAETC,uBAAW,EAAE,4CAFJ;AAGTC,qBAAS,EAAE,CAAC,4CAAD;AAHF,W;AAKiC,U;;;;;;;;;;;;;;;;;;;;;;;AAClBwE,mBAAS,EAAE,CAAF;kBAAhC,uDAAgC;mBAAtB,W;AAAsB,WAAE,C;AAWftD,cAAI,EAAE,CAAF;kBAAvB,uDAAuB;mBAAb,+D;AAAa,WAAE,C;AACDD,mBAAS,EAAE,CAAF;kBAAjC,uDAAiC;mBAAvB,yE;AAAuB,WAAE;;;;;;;;;;;;;;;;;;;AEpCtmH;;AAAsB;;AAAG;;;;;;AAAO;;AAAqB;;AAAI;;;;;;AAM1K;;AAAqC;;AAAoC;;;;;;AACzE;;AAAoC;;AAAoC;;;;;;AAU9D;;AACE;;AACF;;;;;;AAFsE;;AACpE;;AAAA;;;;;;AAGJ;;AACE;;AACF;;;;;;AAQE;;AACE;;AACF;;;;;;AAFkE;;AAChE;;AAAA;;;;;;AAGJ;;AACE;;AACF;;;;;;AAVJ;;AACE;;AAAW;;AAAU;;AACrB;;AACE;;AACE;;AAGF;;AACA;;AAGF;;AACF;;;;;;AATgC;;AAAA;;AACG;;AAAA,+FAAa,cAAb,EAAa,qBAAb;;AAInB;;AAAA;;;;;;AAKhB;;AACE;;AAAW;;AAAU;;AACrB;;AACE;;AACF;;AACF;;;;;;AAFoC;;AAAA;;;;;;AAQ9B;;AACE;;AACF;;;;;;AAFqE;;AACnE;;AAAA;;;;;;AAGJ;;AACE;;AACF;;;;;;AAVJ;;AACE;;AAAW;;AAAY;;AACvB;;AACE;;AACE;;AAGF;;AACA;;AAGF;;AACF;;;;;;AATkC;;AAAA;;AACC;;AAAA,kGAAc,cAAd,EAAc,wBAAd;;AAInB;;AAAA;;;;;;AAKhB;;AACE;;AAAW;;AAAY;;AACvB;;AACE;;AACF;;AACF;;;;;;AAFoC;;AAAA;;;;;;AAQ9B;;AACE;;AACF;;;;;;AAFkE;;AAChE;;AAAA;;;;;;AAGJ;;AACE;;AACF;;;;;;AAVJ;;AACE;;AAAW;;AAAQ;;AACnB;;AACE;;AACE;;AAGF;;AACA;;AAGF;;AACF;;;;;;AAT8B;;AAAA;;AACK;;AAAA,4FAAQ,cAAR,EAAQ,2BAAR;;AAInB;;AAAA;;;;;;AAKhB;;AACE;;AAAW;;AAAQ;;AACnB;;AACE;;AACF;;AACF;;;;;;AAFoC;;AAAA;;;;;;AAc9B;;AACE;;AACF;;;;;;AAFsD;;AACpD;;AAAA;;;;;;AAGJ;;AACE;;AACF;;;;;;AAfJ;;AACE;;AAAW;;AAAoB;;AAC/B;;AACE;;AAME;;AAGF;;AACA;;AAGF;;AACF;;;;;;AAdkC;;AAAA;;AAMO;;AAAA;;AAIzB;;AAAA;;;;;;AAKhB;;AACE;;AAAW;;AAAoB;;AAC/B;;AACE;;AACF;;AACF;;;;;;AAFoC;;AAAA;;;;;;AAQhC;;AAEE;;AACF;;;;;;AAQA;;AACE;;AACF;;;;;;AAQE;;AACE;;AACF;;;;;;AAFqE;;AACnE;;AAAA;;;;;;AAGJ;;AACE;;AACF;;;;;;AAQA;;AACE;;AACF;;;;;;AAQA;;AACE;;AACF;;;;;;AAQE;;AACE;;AACF;;;;;;AAFqE;;AACnE;;AAAA;;;;;;AAGJ;;AACE;;AACF;;;;;;AAGJ;;AACE;;AAAW;;AAAoB;;AAC/B;;AACE;;AACF;;AACF;;;;;;AAFoC;;AAAA;;;;;;AAQhC;;AACE;;AACF;;;;;;AAQE;;AACE;;AACF;;;;;;AAFqE;;AACnE;;AAAA;;;;;;AAGJ;;AACE;;AACF;;;;;;AAVJ;;AACE;;AAAW;;AAAgB;;AAC3B;;AACE;;AACE;;AAGF;;AACA;;AAGF;;AACF;;;;;;AATmC;;AAAA;;AACA;;AAAA,gGAAY,cAAZ,EAAY,0BAAZ;;AAInB;;AAAA;;;;;;AAKhB;;AACE;;AAAY;;AAAiB;;AAC7B;;AACE;;AACF;;AACF;;;;;;AAFoC;;AAAA;;;;;;AAQhC;;AACE;;AACF;;;;;;AAaA;;AACE;;AACF;;;;;;AASA;;AACE;;AACF;;;;;;AAQA;;AAEE;;AACF;;;;;;AAQA;;AAEE;;AACF;;;;;;AAQA;;AACE;;AACF;;;;;;;;AAMA;;AAAiG;AAAA;;AAAA;;AAAA;AAAA;;AAAmB;;AAAI;;;;;;AAA9D;;;;;;;;AAGxD;;AAA6I;AAAA;;AAAA;;AAAA;AAAA;;AAC1I;;AACD;;;;;;AAFsE;;;;;;;;AAKxE;;AAAwE;AAAA;;AAAA;;AAAA;AAAA;;AACtE;;AACF;;;;;;;;AAGA;;AAAwE;AAAA;;AAAA;;AAAA,wCAAsB,MAAtB;AAA4B,WAA5B;;AACtE;;AACF;;;;;;AAHF;;AACE;;AAES;;AACX;;;;;;AAJoE;;AACzD;;AAAA;;;;;;;;AAKT;;AAAuE;AAAA;;AAAA;;AAAA,wCAAsB,MAAtB;AAA4B,WAA5B;;AACrE;;AACF;;;;;;AAHF;;AACE;;AAES;;AACX;;;;;;AAJkF;;AACvE;;AAAA;;;;;;;;AAKT;;AAAuE;AAAA;;AAAA;;AAAA,wCAAsB,OAAtB;AAA6B,WAA7B;;AACrE;;AACF;;;;;;AAHF;;AACE;;AAES;;AACX;;;;;;AAJiF;;AACtE;;AAAA;;;;;;;;AAKT;;AAAuE;AAAA;;AAAA;;AAAA,wCAAsB,QAAtB;AAA8B,WAA9B;;AACrE;;AACF;;;;;;AAHF;;AACE;;AAEU;;AACZ;;;;;;AAJ4C;;AACjC;;AAAA;;;;;;;;AAjTnB;;AAAgE;AAAA;;AAAA;;AAAA;AAAA;;AAC9D;;AACE;;AACE;;AAAW;;AAAY;;AACvB;;AACE;;AACE;;AAGF;;AACA;;AAGF;;AACF;;AAEA;;AAaA;;AAOA;;AAaA;;AAOA;;AAaA;;AAQA;;AAkBA;;AAOA;;AACE;;AAAW;;AAAsB;;AACjC;;AACE;;AACA;;AAIF;;AACF;;AAEA;;AACE;;AAAW;;AAAQ;;AACnB;;AACE;;AACA;;AAGF;;AACF;;AAEA;;AACE;;AAAW;;AAAiB;;AAC5B;;AACE;;AACE;;AAGF;;AACA;;AAGF;;AACF;;AAEA;;AACE;;AAAW;;AAAgB;;AAC3B;;AACE;;AACA;;AAGF;;AACF;;AAEA;;AACE;;AAAW;;AAAW;;AACtB;;AACE;;AACA;;AAGF;;AACF;;AAEA;;AACE;;AAAW;;AAAqB;;AAChC;;AACE;;AACE;;AAGF;;AACA;;AAGF;;AACF;;AACA;;AAOA;;AACE;;AAAW;;AAAmB;;AAC9B;;AACE;;AACA;;AAGF;;AACF;;AAEA;;AAaA;;AAOA;;AACE;;AAAW;;AAAc;;AACzB;;AACE;;AACA;;AAGF;;AACF;;AAEA;;AACE;;AAAW;;AAAiB;;AAC5B;;AACE;;AAEA;;AACE;;AAAkC;;AAAmB;;AACvD;;AACA;;AACA;;AAGF;;AACA;;AACF;;AAEA;;AACE;;AAAW;;AAAW;;AACtB;;AACE;;AACA;;AAGF;;AACF;;AAEA;;AACE;;AAAW;;AAAuB;;AAClC;;AACE;;AACA;;AAIF;;AACF;;AAEA;;AACE;;AAAY;;AAAc;;AAC1B;;AACE;;AACA;;AAIF;;AACF;;AAEA;;AACE;;AAAW;;AAAQ;;AACnB;;AACE;;AACA;;AAGF;;AACF;;AAEA;;AACE;;AACE;;AACA;;AACA;;AACE;;AAEW;;AACb;;AACA;;AACE;;AAES;;AACX;;AACA;;AAKA;;AAKA;;AAKA;;AAMA;;AAIE;AAAA;;AAAA;;AAAA;AAAA;;AAEA;;AACF;;AAEF;;AACF;;AACF;;AACF;;;;;;;;AAlUM;;AAKgC;;AAAA;;AACC;;AAAA,iGAAc,cAAd,EAAc,uBAAd;;AAInB;;AAAA;;AAMgB;;AAAA;;AAaA;;AAAA;;AAOA;;AAAA;;AAaA;;AAAA;;AAOA;;AAAA;;AAaA;;AAAA;;AAQA;;AAAA;;AAkBA;;AAAA;;AAUpB;;AAAA,mGAAwB,aAAxB,EAAwB,iDAAxB;;AAEL;;AAAA;;AASK;;AAAA,mGAAwB,aAAxB,EAAwB,4CAAxB;;AACI;;AAAA;;AASmB;;AAAA;;AACA;;AAAA,+FAAY,cAAZ,EAAY,yBAAZ;;AAInB;;AAAA;;AASJ;;AAAA,mGAAwB,aAAxB,EAAwB,+CAAxB;;AACI;;AAAA;;AASJ;;AAAA,mGAAwB,aAAxB,EAAwB,+CAAxB;;AACI;;AAAA;;AASmB;;AAAA;;AACA;;AAAA,+FAAY,cAAZ,EAAY,yBAAZ;;AAInB;;AAAA;;AAKgB;;AAAA;;AAUpB;;AAAA,mGAAwB,aAAxB,EAAwB,8CAAxB;;AACI;;AAAA;;AAMgB;;AAAA;;AAaA;;AAAA;;AAUpB;;AAAA,mGAAwB,aAAxB,EAAwB,8CAAxB;;AACI;;AAAA;;AASJ;;AAAA,mGAAwB,aAAxB,EAAwB,4CAAxB,EAAwB,KAAxB,EAAwB,6CAAxB,EAAwB,eAAxB,EAAwB,IAAxB;;AAEyB;;AAAA;;AAIrB;;AAAA;;AAUJ;;AAAA,mGAAwB,aAAxB,EAAwB,8CAAxB;;AACI;;AAAA;;AASJ;;AAAA,mGAAwB,aAAxB,EAAwB,kDAAxB;;AAEL;;AAAA;;AASK;;AAAA,mGAAwB,aAAxB,EAAwB,iDAAxB;;AAEL;;AAAA;;AASK;;AAAA,mGAAwB,aAAxB,EAAwB,4CAAxB;;AACI;;AAAA;;AAQe;;AAAA;;AAEtB;;AAAA;;AACM;;AAAA;;AAIN;;AAAA;;AACM;;AAAA;;AAIL;;AAAA;;AAKA;;AAAA;;AAKA;;AAAA;;AAKA;;AAAA;;;;;;AAsBd;;;;UD/TWqZ,gC;AAoBX,kDACU1c,EADV,EAEU0W,GAFV,EAGUhU,MAHV,EAIUD,KAJV,EAKUH,MALV,EAMUrC,UANV,EAOU0C,EAPV,EAQUkG,WARV,EAQkC;AAAA;;AAPxB,eAAA7I,EAAA,GAAAA,EAAA;AACA,eAAA0W,GAAA,GAAAA,GAAA;AACA,eAAAhU,MAAA,GAAAA,MAAA;AACA,eAAAD,KAAA,GAAAA,KAAA;AACA,eAAAH,MAAA,GAAAA,MAAA;AACA,eAAArC,UAAA,GAAAA,UAAA;AACA,eAAA0C,EAAA,GAAAA,EAAA;AACA,eAAAkG,WAAA,GAAAA,WAAA;AA1BV,eAAA3I,eAAA,GAA4B,EAA5B;AACA,eAAAC,MAAA,GAAmB,EAAnB;AACA,eAAAC,UAAA,GAAuB,EAAvB;AACA,eAAAC,QAAA,GAAqB,EAArB;AAEA,eAAAK,QAAA,GAAqB,EAArB;AACA,eAAAC,IAAA,GAAiB,EAAjB;AACA,eAAAgc,aAAA,GAAe,CAAE,KAAF,EAAS,KAAT,EAAe,KAAf,EAAsB,KAAtB,CAAf;AAGA,eAAA3V,UAAA,GAAuB,EAAvB;AAGA,eAAAiF,WAAA,GAAwB,KAAxB;AAEA,eAAAzD,MAAA,GAAkB,KAAlB;AACA,eAAAO,WAAA,GAAqB,IAArB;AAWI;;;;iBAEJ,oBAAQ;AAAA;;AACN,iBAAKmD,WAAL,GAAmB,KAAKvJ,EAAL,CAAQQ,OAAR,CAAgB,YAAhB,CAAnB;AAEAiJ,sBAAU,CAAC,YAAM;AACf,qBAAI,CAACwQ,cAAL,GAAsBtQ,IAAI,CAACC,KAAL,CACpBC,YAAY,CAACrJ,OAAb,CAAqB,qBAArB,CADoB,CAAtB;;AAIA,kBAAI,OAAI,CAACyZ,cAAL,IAAuB,IAAvB,IAA+B,OAAI,CAACA,cAAL,IAAuBnQ,SAA1D,EAAqE;AACnE,uBAAI,CAAC1D,WAAL,GAAiB,KAAjB;;AACA,uBAAI,CAACtI,aAAL,CAAmB,EAAnB;AACD,eAHD,MAGO,IACL,OAAI,CAACmc,cAAL,CAAoBpc,EAApB,IAA0B,IAA1B,IACA,OAAI,CAACoc,cAAL,CAAoBpc,EAApB,IAA0BiM,SAFrB,EAGL;AACA,uBAAI,CAAC/J,MAAL,CAAYa,IAAZ;;AACA,uBAAI,CAAC/C,EAAL,GAAU,OAAI,CAACoc,cAAL,CAAoBpc,EAA9B;;AACA,uBAAI,CAACC,aAAL,CAAmB,OAAI,CAACmc,cAAxB;;AAEA,uBAAI,CAAClQ,SAAL,GAAgB,OAAI,CAACkQ,cAArB;AACF,uBAAI,CAACpU,MAAL,GAAc,IAAd;AACA,uBAAI,CAACyD,WAAL,GAAmB,IAAnB;;AACA,uBAAI,CAACpD,WAAL,CAAiBQ,eAAjB,CAAiC,OAAI,CAACqD,SAAtC;;AACE,uBAAI,CAAChK,MAAL,CAAYnB,KAAZ;AACD;AACF,aAtBS,EAsBP,IAtBO,CAAV;AAwBA,iBAAKoL,WAAL;AACA,iBAAKnD,WAAL;AACA,iBAAKvB,aAAL;AACA,iBAAK2E,SAAL;AACA,iBAAKC,aAAL;AAEA,iBAAK3J,YAAL,GAAoB,KAAKP,EAAL,CAAQQ,OAAR,CAAgB,YAAhB,CAApB;AACD;;;iBAED,uBAAcvC,IAAd,EAAoB;AAClBmE,mBAAO,CAACC,GAAR,CAAY,MAAZ,EAAmBpE,IAAnB;AACA,iBAAKic,iBAAL,GAAyB,KAAK7c,EAAL,CAAQc,KAAR,CAAc;AACrCkG,wBAAU,EAAE,CAAC,CAAApG,IAAI,SAAJ,IAAAA,IAAI,WAAJ,GAAI,MAAJ,GAAAA,IAAI,CAAEoG,UAAN,KAAoB,EAArB,EAAyB,0DAAWhG,QAApC,CADyB;AAErCX,sBAAQ,EAAE,CAAC,CAAAO,IAAI,SAAJ,IAAAA,IAAI,WAAJ,GAAI,MAAJ,GAAAA,IAAI,CAAEP,QAAN,KAAkB,EAAnB,EAAuB,0DAAWW,QAAlC,CAF2B;AAGrCZ,wBAAU,EAAE,CAAC,CAAAQ,IAAI,SAAJ,IAAAA,IAAI,WAAJ,GAAI,MAAJ,GAAAA,IAAI,CAAER,UAAN,KAAoB,EAArB,EAAyB,0DAAWY,QAApC,CAHyB;AAIrCb,oBAAM,EAAE,CAACS,IAAI,CAACT,MAAL,IAAe,EAAhB,EAAoB,0DAAWa,QAA/B,CAJ6B;AAKrC8b,wBAAU,EAAE,CAAC,CAAAlc,IAAI,SAAJ,IAAAA,IAAI,WAAJ,GAAI,MAAJ,GAAAA,IAAI,CAAEkc,UAAN,KAAoB,EAArB,EAAyB,0DAAW9b,QAApC,CALyB;AAMrC+b,0BAAY,EAAE,CAAC,CAAAnc,IAAI,SAAJ,IAAAA,IAAI,WAAJ,GAAI,MAAJ,GAAAA,IAAI,CAAEmc,YAAN,KAAsB,EAAvB,EAA2B,0DAAW/b,QAAtC,CANuB;AAOrCgc,qBAAO,EAAE,CAAC,CAAApc,IAAI,SAAJ,IAAAA,IAAI,WAAJ,GAAI,MAAJ,GAAAA,IAAI,CAAEoc,OAAN,KAAiB,EAAlB,EAAsB,0DAAWhc,QAAjC,CAP4B;AAQrCic,yBAAW,EAAE,CAAC,CAAArc,IAAI,SAAJ,IAAAA,IAAI,WAAJ,GAAI,MAAJ,GAAAA,IAAI,CAAEqc,WAAN,KAAqB,EAAtB,EAA0B,0DAAWjc,QAArC,CARwB;AASrCkc,wBAAU,EAAE,CAAC,CAAAtc,IAAI,SAAJ,IAAAA,IAAI,WAAJ,GAAI,MAAJ,GAAAA,IAAI,CAAEsc,UAAN,KAAoB,EAArB,EAAyB,0DAAWlc,QAApC,CATyB;AAUrCmc,wBAAU,EAAE,CAAC,CAAAvc,IAAI,SAAJ,IAAAA,IAAI,WAAJ,GAAI,MAAJ,GAAAA,IAAI,CAAEuc,UAAN,KAAoB,EAArB,EAAyB,0DAAWnc,QAApC,CAVyB;AAWrCoc,yBAAW,EAAE,CAAC,CAAAxc,IAAI,SAAJ,IAAAA,IAAI,WAAJ,GAAI,MAAJ,GAAAA,IAAI,CAAEwc,WAAN,KAAqB,EAAtB,EAA0B,0DAAWpc,QAArC,CAXwB;AAYrCqc,uBAAS,EAAE,CAAC,CAAAzc,IAAI,SAAJ,IAAAA,IAAI,WAAJ,GAAI,MAAJ,GAAAA,IAAI,CAAEyc,SAAN,KAAmB,EAApB,EAAwB,0DAAWrc,QAAnC,CAZ0B;AAarCsc,yBAAW,EAAE,CAAC,CAAA1c,IAAI,SAAJ,IAAAA,IAAI,WAAJ,GAAI,MAAJ,GAAAA,IAAI,CAAE0c,WAAN,KAAqB,EAAtB,EAA0B,0DAAWtc,QAArC,CAbwB;AAcrCuc,uBAAS,EAAE,CAAC,CAAA3c,IAAI,SAAJ,IAAAA,IAAI,WAAJ,GAAI,MAAJ,GAAAA,IAAI,CAAE2c,SAAN,KAAmB,EAApB,EAAwB,0DAAWvc,QAAnC,CAd0B;AAerC0O,qBAAO,EAAG,CAAC,IAAIxO,IAAJ,CAASN,IAAI,CAAC8O,OAAd,KAA0B,EAA3B,EAA+B,CAAC,0DAAW1O,QAAZ,CAA/B,CAf2B;AAgBrCwc,uBAAS,EAAE,CAAC,CAAA5c,IAAI,SAAJ,IAAAA,IAAI,WAAJ,GAAI,MAAJ,GAAAA,IAAI,CAAE4c,SAAN,KAAmB,EAApB,EAAwB,0DAAWxc,QAAnC,CAhB0B;AAiBrCyc,2BAAa,EAAE,CAAC,CAAA7c,IAAI,SAAJ,IAAAA,IAAI,WAAJ,GAAI,MAAJ,GAAAA,IAAI,CAAE6c,aAAN,KAAuB,EAAxB,EAA4B,0DAAWzc,QAAvC,CAjBsB;AAkBrCwO,0BAAY,EAAE,CAAC,CAAA5O,IAAI,SAAJ,IAAAA,IAAI,WAAJ,GAAI,MAAJ,GAAAA,IAAI,CAAE4O,YAAN,KAAsB,EAAvB,EAA2B,0DAAWxO,QAAtC,CAlBuB;AAmBrC0c,qBAAO,EAAE,CAAC,CAAA9c,IAAI,SAAJ,IAAAA,IAAI,WAAJ,GAAI,MAAJ,GAAAA,IAAI,CAAE8c,OAAN,KAAiB,EAAlB,EAAsB,0DAAW1c,QAAjC,CAnB4B;AAoBrCgW,sBAAQ,EAAE,CAAC,CAAApW,IAAI,SAAJ,IAAAA,IAAI,WAAJ,GAAI,MAAJ,GAAAA,IAAI,CAAEoW,QAAN,KAAkB,KAAnB,CApB2B;AAqBrCxW,gBAAE,EAAE,CAAC,CAAAI,IAAI,SAAJ,IAAAA,IAAI,WAAJ,GAAI,MAAJ,GAAAA,IAAI,CAAEJ,EAAN,KAAY,IAAb,CArBiC;AAsBrCmd,0BAAY,EAAG,CAAC/c,IAAI,CAACsC,YAAL,IAAqB,EAAtB;AAtBsB,aAAd,CAAzB;AAwBD;;;iBACD,0BAAiBiB,KAAjB,EAAuBvD,IAAvB,EAA2B;AACzB,mBAAOA,IAAI,CAACoG,UAAZ;AACD;;;iBACD,wBAAe7C,KAAf,EAAqBvD,IAArB,EAAyB;AACvB,mBAAOA,IAAI,CAACP,QAAZ;AACD;;;iBACD,0BAAiB8D,KAAjB,EAAuBvD,IAAvB,EAA2B;AACzB,mBAAOA,IAAI,CAACR,UAAZ;AACD;;;iBACD,6BAAoB+D,KAApB,EAA0BvD,IAA1B,EAA8B;AAC9B;AACE,mBAAOA,IAAI,CAAC8M,aAAZ;AACD;;;iBACD,4BAAmBvJ,KAAnB,EAAyBvD,IAAzB,EAA6B;AAC3B,mBAAOA,IAAI,CAACgd,YAAZ;AACD;;;iBACD,sBAAalT,SAAb,EAAsB;AAAA;;AACpB,+DAAKC,IAAL,CACE;AACE;AACAC,kBAAI,EAAE,uBAAsBF,SAAtB,GAAiC,UAAjC,GAA8C,0BAFtD;AAGEG,8BAAgB,EAAE,IAHpB;AAIEC,gCAAkB,EAAE,SAJtB;AAKEC,+BAAiB,EAAE,MALrB;AAME;AACAC,8BAAgB,EAAE,IAPpB;AAQEC,+BAAiB,EAAE,KARrB;AAQ4B,sBAAQ;AARpC,aADF,EAWEC,IAXF,CAWQ,UAAAC,MAAM,EAAI;AAChB,kBAAGA,MAAM,CAACC,WAAP,IAAoB,IAAvB,EAA4B;AAC1B,uBAAI,CAACnL,UAAL,CAAgB4d,mBAAhB,CAAoC,OAAI,CAACnR,SAAL,CAAelM,EAAnD,EACCiD,SADD,CACW,UAAA3D,IAAI,EAAI;AACjB,yBAAI,CAACwC,MAAL,CAAYwD,QAAZ,CAAqB,2CAArB;AACD,iBAHD,EAIA,UAAAuC,GAAG,EAAE;AACH,sBAAIA,GAAG,CAACC,MAAJ,IAAc,GAAlB,EAAuB;AACrB,2BAAI,CAAC7F,KAAL,CAAWc,IAAX,CAAgB,6BAAhB,EAA+C,IAA/C,EAAqD;AACnDkC,8BAAQ,EAAE,IADyC;AAEnDC,sCAAgB,EAAE,KAFiC;AAGnDC,wCAAkB,EAAE;AAH+B,qBAArD;AAKD;;AACD,yBAAI,CAACrD,MAAL,CAAYwD,QAAZ,CAAqB,2CAArB;AAEH,iBAdC;AAeD;AAAC,aA5BJ;AAgCD;;;iBACD,sBAAU;AACR,iBAAKiD,WAAL,GAAiB,KAAjB;AACD;;;iBACD,sBAAa2B,SAAb,EAAwB;AAAA;;AACtB,+DAAKC,IAAL,CACE;AACE;AACAC,kBAAI,EAAE,uBAAsBF,SAAtB,GAAiC,UAAjC,GAA8C,0BAFtD;AAGEG,8BAAgB,EAAE,IAHpB;AAIEC,gCAAkB,EAAE,SAJtB;AAKEC,+BAAiB,EAAE,MALrB;AAME;AACAC,8BAAgB,EAAE,IAPpB;AAQEC,+BAAiB,EAAE,KARrB;AAQ4B,sBAAQ;AARpC,aADF,EAWEC,IAXF,CAWQ,UAAAC,MAAM,EAAI;AAChB,kBAAGA,MAAM,CAACC,WAAP,IAAoB,IAAvB,EAA4B;AAC1B,oBAAI7K,OAAO,GAAQ,EAAnB;AACJA,uBAAO,CAACC,EAAR,GAAa,OAAI,CAACA,EAAlB;AACAD,uBAAO,CAACmK,SAAR,GAAoBA,SAApB;AACAnK,uBAAO,CAAC2C,YAAR,GAAuB,OAAI,CAACA,YAAL,CAAkBqG,QAAzC;;AACA,uBAAI,CAACtJ,UAAL,CAAgB6d,oCAAhB,CAAqDvd,OAArD,EAA8DkD,SAA9D,CAAwE,UAAC3D,IAAD,EAAU;AAChF,yBAAI,CAAC4M,SAAL,GAAiB5M,IAAjB;;AACA,yBAAI,CAAC+I,WAAL,CAAiBQ,eAAjB,CAAiC,OAAI,CAACqD,SAAtC;;AACA,yBAAI,CAACT,WAAL,GAAmB,IAAnB;;AACA,yBAAI,CAACpD,WAAL,CAAiBS,cAAjB;;AACA,sBAAIpD,OAAO,GAAG,EAAd;;AACA,0BAAQwE,SAAR;AACE,yBAAK,MAAL;AACExE,6BAAO,GAAG,QAAV;AACA;;AACF,yBAAK,OAAL;AACEA,6BAAO,GAAG,QAAV;AACA;;AACF,yBAAK,MAAL;AACEA,6BAAO,GAAG,YAAV;AACA;;AACF;AACE;AAXJ;;AAaA,yBAAI,CAACzD,KAAL,CAAWc,IAAX,kBAA0B2C,OAA1B,sBAAoD,IAApD,EAA0D;AACxDT,4BAAQ,EAAE,IAD8C;AAExDC,oCAAgB,EAAE,KAFsC;AAGxDC,sCAAkB,EAAE;AAHoC,mBAA1D;AAKD,iBAxBD;AAyBG;AAAC,aA1CJ;AA4CD;;;iBAED,kBAAS;AAAA;;AACP,gBAAIuN,IAAI,GAAG,KAAK6K,WAAL,CAAiB,KAAKlB,iBAAL,CAAuBmB,QAAvB,CAAgCtO,OAAhC,CAAwCpO,KAAzD,CAAX;AACA,iBAAKub,iBAAL,CAAuBvb,KAAvB,CAA6B,SAA7B,IAA0C4R,IAA1C;;AACA,gBAAI,KAAK2J,iBAAL,CAAuBvP,OAA3B,EAAoC;AAClC;AACD,aAFD,MAEO;AACL,mBAAK5K,MAAL,CAAYa,IAAZ;AACA,mBAAKsZ,iBAAL,CAAuBvb,KAAvB,CAA6B4B,YAA7B,GAA4C,KAAKA,YAAL,CAAkBqG,QAA9D;AACA,mBAAKmN,GAAL,CAASuH,mBAAT,CAA6B,KAAKpB,iBAAL,CAAuBvb,KAApD,EAA2DmC,SAA3D,CACE,UAACyE,IAAD,EAAU;AACR,uBAAI,CAACxF,MAAL,CAAYnB,KAAZ;;AACA,uBAAI,CAACe,MAAL,CACGwD,QADH,CACY,2CADZ,EAEGoF,IAFH,CAEQ,UAAC0C,CAAD,EAAO;AACX,yBAAI,CAACnL,KAAL,CAAWc,IAAX,CAAgB,0BAAhB,EAA4C,IAA5C,EAAkD;AAChDkC,4BAAQ,EAAE,IADsC;AAEhDC,oCAAgB,EAAE,KAF8B;AAGhDC,sCAAkB,EAAE;AAH4B,mBAAlD;;AAKA6G,8BAAY,CAACuB,UAAb,CAAwB,qBAAxB;AACD,iBATH;AAUD,eAbH,EAcE,UAAC1F,GAAD,EAAc;AACZ,uBAAI,CAAC3F,MAAL,CAAYnB,KAAZ;;AACA,uBAAI,CAACkB,KAAL,CAAWc,IAAX,WAA0B,IAA1B,EAAgC;AAC9BkC,0BAAQ,EAAE,IADoB;AAE9BC,kCAAgB,EAAE,KAFY;AAG9BC,oCAAkB,EAAE;AAHU,iBAAhC;AAKD,eArBH;AAuBD;AACF;;;iBAED,uBAAc;AAAA;;AACZ;AACA;AACA;AACA,iBAAK1F,UAAL,CAAgB+N,kBAAhB,GAAqCvK,SAArC,CAA+C,UAAA3D,IAAI,EAAE;AACnDiF,qBAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoClF,IAApC;;AACA,mBAAI,IAAI4D,CAAC,GAAC,CAAV,EAAaA,CAAC,GAAC5D,IAAI,CAAC6D,MAApB,EAA2BD,CAAC,EAA5B,EAA+B;AAC7B,uBAAI,CAAChD,QAAL,CAAciL,IAAd,CAAmB7L,IAAI,CAAC4D,CAAD,CAAJ,CAAQuK,UAA3B;AACD;;AACDlJ,qBAAO,CAACC,GAAR,CAAY,OAAI,CAACtE,QAAjB;AACD,aAND;AAOD;;;iBACD,uBAAc;AAAA;;AACZ,iBAAKgW,GAAL,CAASlN,WAAT,GAAuB/F,SAAvB,CAAiC,UAACyE,IAAD,EAAU;AAC3C;AACE,mBAAI,IAAIxE,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAACwE,IAAI,CAACvE,MAAtB,EAA8BD,CAAC,EAA/B,EAAkC;AAChC,oBAAGwE,IAAI,CAACxE,CAAD,CAAJ,CAAQE,UAAR,IAAsB,GAAzB,EAA6B;AAC3B,yBAAI,CAACvD,QAAL,CAAcsL,IAAd,CAAmBzD,IAAI,CAACxE,CAAD,CAAvB;AACD;AACF;AACF,aAPD;AAQD;;;iBACD,yBAAgB;AAAA;;AACd,iBAAKgT,GAAL,CAASzO,aAAT,GAAyBxE,SAAzB,CAAmC,UAACyE,IAAD,EAAU;AAC3C;AACA,mBAAI,IAAIxE,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAACwE,IAAI,CAACvE,MAAtB,EAA8BD,CAAC,EAA/B,EAAkC;AAChC,oBAAGwE,IAAI,CAACxE,CAAD,CAAJ,CAAQE,UAAR,IAAsB,GAAzB,EAA6B;AAC3B,yBAAI,CAACxD,UAAL,CAAgBuL,IAAhB,CAAqBzD,IAAI,CAACxE,CAAD,CAAzB;AACD;AACF;AACF,aAPD;AAQD;;;iBACD,qBAAY;AAAA;;AACV,gBAAIwK,WAAW,GAAG,GAAlB;AACA,iBAAKwI,GAAL,CAASvI,WAAT,CAAqBD,WAArB,EAAkCzK,SAAlC,CAA4C,UAACyE,IAAD,EAAU;AACpD,qBAAI,CAACvH,IAAL,GAAYuH,IAAZ;AACD,aAFD;AAGD;;;iBAED,qBAAY5G,KAAZ,EAAmB;AACjB,gBAAI4R,IAAI,GAAG,mCAAM,CAAC5R,KAAD,CAAN,CAAc+S,MAAd,CAAqB,sBAArB,CAAX;AACA,gBAAInB,IAAJ,EAAU,OAAOA,IAAP;AACX;;;iBAED,yBAAgB;AAAA;;AACd,iBAAKwD,GAAL,CAAS7J,aAAT,GAAyBpJ,SAAzB,CAAmC,UAACyE,IAAD,EAAU;AAC9C;AACG,mBAAI,IAAIxE,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAACwE,IAAI,CAACvE,MAAtB,EAA8BD,CAAC,EAA/B,EAAkC;AAChC,oBAAGwE,IAAI,CAACxE,CAAD,CAAJ,CAAQE,UAAR,IAAsB,GAAzB,EAA6B;AAC3B,yBAAI,CAACoD,UAAL,CAAgB2E,IAAhB,CAAqBzD,IAAI,CAACxE,CAAD,CAAzB;AACD;AACF;AACF,aAPD;AAQD;;;iBAED,kBAAS;AACP8I,wBAAY,CAACuB,UAAb,CAAwB,qBAAxB;AACA,iBAAKzL,MAAL,CAAYwD,QAAZ,CAAqB,2CAArB;AACD;;;;;;;yBA9RU4W,gC,EAAgC,2H,EAAA,2I,EAAA,mK,EAAA,wI,EAAA,uH,EAAA,2I,EAAA,0J,EAAA,6I;AAAA,O;;;cAAhCA,gC;AAAgC,wD;AAAA,iB;AAAA,e;AAAA,mwF;AAAA;AAAA;AClB7C;;AAAsB;;AAA0B;;AAAmE;;AAAgC;;AAAiC;;AAA+B;;AACnN;;AACA;;AACE;;AAAwB;AAAA,qBAAS,IAAApW,MAAA,EAAT;AAAiB,aAAjB;;AACtB;;AAAU;;AAAU;;AACtB;;AACA;;AACA;;AACF;;AACA;;AAEE;;AAmUF;;AAEA;;AACE;;AACF;;;;AAlV0H;;AAAA;;AAAgC;;AAAA;;AAMnJ;;AAAA;;AACA;;AAAA;;AAIkC;;AAAA;;AAsUvB;;AAAA;;;;;;;;;wED/TLoW,gC,EAAgC;gBAL5C,uDAK4C;iBALlC;AACTxa,oBAAQ,EAAE,iCADD;AAETC,uBAAW,EAAE,8CAFJ;AAGTC,qBAAS,EAAE,CAAC,8CAAD;AAHF,W;AAKkC,U;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AElB7C;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAkBa8b,wB;AAKX,0CACUnX,MADV,EAEUtE,KAFV,EAGUG,cAHV,EAIUF,MAJV,EAKUzC,UALV,EAMU0C,EANV,EAOU+L,SAPV,EAQUpM,MARV,EASU6b,IATV,EAS4B;AAAA;;AARlB,eAAApX,MAAA,GAAAA,MAAA;AACA,eAAAtE,KAAA,GAAAA,KAAA;AACA,eAAAG,cAAA,GAAAA,cAAA;AACA,eAAAF,MAAA,GAAAA,MAAA;AACA,eAAAzC,UAAA,GAAAA,UAAA;AACA,eAAA0C,EAAA,GAAAA,EAAA;AACA,eAAA+L,SAAA,GAAAA,SAAA;AACA,eAAApM,MAAA,GAAAA,MAAA;AACA,eAAA6b,IAAA,GAAAA,IAAA;AAAqB;;;;iBAE/B,oBAAQ;AAAA;;AACN,iBAAKle,UAAL,CAAgBme,oBAAhB,GACG3a,SADH,CACa,UAAA3D,IAAI,EAAI;AACjB,qBAAI,CAACwH,KAAL,GAAaxH,IAAb;;AACA,qBAAI,CAACue,kBAAL;;AACJ,qBAAI,CAACC,OAAL,GAAe,KAAf;AACG,aALH;AAMD;;;iBAGD,oBAAW/O,GAAX,EAAgB;AAAA;;AACd,iBAAK3M,cAAL,CAAoBqD,OAApB,CAA4B;AAACC,qBAAO,mBAAYqJ,GAAG,CAACvI,UAAhB;AAAR,aAA5B,EACGvD,SADH,CACa,UAAA2C,GAAG,EAAI;AAChB,kBAAIA,GAAJ,EAAS;AACP,uBAAI,CAAC1D,MAAL,CAAYa,IAAZ;;AACA,uBAAI,CAACtD,UAAL,CAAgBse,qBAAhB,CAAsChP,GAAG,CAAC/O,EAA1C,EACGiD,SADH,CACa,UAAA3D,IAAI,EAAI;AACjB,yBAAI,CAACue,kBAAL;;AACA,yBAAI,CAAC3b,MAAL,CAAYnB,KAAZ;;AACA,yBAAI,CAACkB,KAAL,CAAWc,IAAX,CAAgB,0BAAhB,EAA4C,IAA5C,EAAkD;AAAEkC,4BAAQ,EAAE;AAAZ,mBAAlD;AACD,iBALH;AAMD;AACF,aAXH;AAYD;;;iBACD,8BAAqB;AAAA;;AACnB,iBAAKxF,UAAL,CAAgBue,sBAAhB,GACG/a,SADH,CACa,UAAA3D,IAAI,EAAI;AACjB,qBAAI,CAACwH,KAAL,GAAaxH,IAAb;AACD,aAHH;AAID;;;;;;;yBA7CUoe,wB,EAAwB,mI,EAAA,wI,EAAA,sK,EAAA,mK,EAAA,2I,EAAA,0J,EAAA,yH,EAAA,uH,EAAA,gI;AAAA,O;;;cAAxBA,wB;AAAwB,6C;AAAA,gB;AAAA,e;AAAA;AAAA;AClBrC;;AAAG;;AAAuB;;;;;;;;wEDkBbA,wB,EAAwB;gBALpC,uDAKoC;iBAL1B;AACThc,oBAAQ,EAAE,sBADD;AAETC,uBAAW,EAAE,mCAFJ;AAGTC,qBAAS,EAAE,CAAC,mCAAD;AAHF,W;AAK0B,U;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AElBrC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACAyG;;AAAsB;;AAAG;;;;;;AAAQ;;AAAqB;;AAAI;;;;;;AAK7J;;AACE;;AACF;;;;;;AACA;;AACE;;AACF;;;;;;AAeO;;AACC;;AACF;;;;;;AAF+C;;AAC7C;;AAAA;;;;;;AAGA;;AAEA;;AACJ;;;;;;AAdA;;AACE;;AAAW;;AAAc;;AACzB;;AACE;;AAID;;AAGD;;AACE;;AAIF;;AACF;;;;;;AATkC;;AAAA;;AAK7B;;AAAA;;;;;;AAKL;;AACE;;AAAW;;AAAc;;AACzB;;AACA;;AACA;;AACF;;;;;;AAFkB;;AAAA,mGAAwB,aAAxB,EAAwB,wCAAxB;;;;;;AAQV;;AACA;;AACA;;;;;;AAF2C;;AAC3C;;AAAA;;;;;;AAGJ;;AACE;;AACF;;;;;;AAVJ;;AACE;;AAAW;;AAAW;;AACtB;;AACE;;AACI;;AAGJ;;AACA;;AAGF;;AACF;;;;;;AARqC;;AAAA;;AAIrB;;AAAA;;;;;;AAKhB;;AACE;;AAAW;;AAAa;;AACxB;;AACA;;AACA;;AACF;;;;;;AAFkB;;AAAA,mGAAwB,aAAxB,EAAwB,sCAAxB;;;;;;AASd;;AACE;;AACF;;;;;;AAFiD;;AAC/C;;AAAA;;;;;;AAGJ;;AACC;;AACF;;;;;;AAXD;;AACE;;AAAW;;AAAa;;AACxB;;AACE;;AACA;;AAAY;;AAAM;;AAClB;;AAGD;;AACD;;AAGA;;AACF;;;;;;AAVyD;;AAAA;;AAEpB;;AAAA;;AAIvB;;AAAA;;;;;;AAKd;;AACE;;AAAW;;AAAa;;AACxB;;AACA;;AACA;;AACF;;;;;;AAFkB;;AAAA,mGAAwB,aAAxB,EAAwB,uCAAxB;;;;;;AASd;;AACE;;AACF;;;;;;AAFgD;;AAC9C;;AAAA;;;;;;AAGF;;AACE;;AACF;;;;;;AAXJ;;AACE;;AAAW;;AAAY;;AACvB;;AACE;;AACA;;AAAY;;AAAM;;AAClB;;AAGA;;AACA;;AAGF;;AACF;;;;;;AAV0D;;AAAA;;AAErB;;AAAA;;AAIrB;;AAAA;;;;;;AAKhB;;AACE;;AAAW;;AAAa;;AACxB;;AACA;;AACA;;AACF;;;;;;AAFkB;;AAAA,oGAAwB,aAAxB,EAAwB,wCAAxB;;;;;;AASZ;;AACE;;AACF;;;;;;AAFiD;;AAC/C;;AAAA;;;;;;AAGJ;;AACC;;AACD;;;;;;AAXJ;;AACE;;AAAW;;AAAkB;;AAC7B;;AACG;;AACC;;AAAY;;AAAM;;AAClB;;AAGD;;AACD;;AAIF;;AAEF;;;;;;AAZiE;;AAAA;;AAE1B;;AAAA;;AAIvB;;AAAA;;;;;;AAOhB;;AACE;;AAAW;;AAAmB;;AAC9B;;AACA;;AACA;;AACF;;;;;;AAFkB;;AAAA,oGAAwB,aAAxB,EAAwB,8CAAxB;;;;;;AAYd;;AACE;;AACD;;;;;;AAVL;;AACE;;AAAW;;AAAa;;AACxB;;AACE;;AACA;;AAAsB;;AAAC;;AACvB;;AAAsB;;AAAC;;AACvB;;AAEA;;AAGF;;AAEF;;;;;;AALgB;;AAAA;;;;;;AAOhB;;AACE;;AAAW;;AAAc;;AACzB;;AACA;;AACA;;AACF;;;;;;AAFkB;;AAAA,oGAAwB,aAAxB,EAAwB,yCAAxB;;;;;;AAQd;;AACE;;AACD;;;;;;;;AAgBD;;AACE;AAAA;;AAAA;;AAAA;AAAA;;AACA;;AACF;;;;;;AAH0D;;;;;;;;AAM1D;;AAAuE;AAAA;;AAAA;;AAAA;AAAA;;AAErE;;AACF;;;;;;AAFE;;;;;;;;AAKF;;AAAwE;AAAA;;AAAA;;AAAA;AAAA;;AACtE;;AACF;;;;;;;;AAGA;;AAAwE;AAAA;;AAAA;;AAAA,wCAAsB,MAAtB;AAA4B,WAA5B;;AACtE;;AACF;;;;;;AAHF;;AACE;;AAES;;AACX;;;;;;AAJoE;;AACzD;;AAAA;;;;;;;;AAKT;;AAAuE;AAAA;;AAAA;;AAAA,wCAAsB,MAAtB;AAA4B,WAA5B;;AACrE;;AACF;;;;;;AAHF;;AACE;;AAES;;AACX;;;;;;AAJkF;;AACvE;;AAAA;;;;;;;;AAKT;;AAAuE;AAAA;;AAAA;;AAAA,wCAAsB,OAAtB;AAA6B,WAA7B;;AACrE;;AACF;;;;;;AAHF;;AACE;;AAES;;AACX;;;;;;AAJiF;;AACtE;;AAAA;;;;;;;;AAKT;;AAAuE;AAAA;;AAAA;;AAAA,wCAAsB,QAAtB;AAA8B,WAA9B;;AACrE;;AACF;;;;;;AAHF;;AACE;;AAEU;;AACZ;;;;;;AAJ4C;;AACjC;;AAAA;;;;;;AAoBnB;;;;UDhNSqc,mC;AAuBX,qDAAoBnc,MAApB,EAA4CtC,EAA5C,EAAqEC,UAArE,EACUwC,KADV,EACsCmG,GADtC,EACsEjG,EADtE,EACmGmG,KADnG,EACkID,WADlI,EAC4J;AAAA;;AADxI,eAAAvG,MAAA,GAAAA,MAAA;AAAwB,eAAAtC,EAAA,GAAAA,EAAA;AAAyB,eAAAC,UAAA,GAAAA,UAAA;AAC3D,eAAAwC,KAAA,GAAAA,KAAA;AAA4B,eAAAmG,GAAA,GAAAA,GAAA;AAAgC,eAAAjG,EAAA,GAAAA,EAAA;AAA6B,eAAAmG,KAAA,GAAAA,KAAA;AAA+B,eAAAD,WAAA,GAAAA,WAAA,CAA0B,CArB5J;AACA;;AACA,eAAA6V,UAAA,GAAiB,EAAjB;AAEA,eAAA1X,UAAA,GAAoB,EAApB;AACA,eAAA3G,QAAA,GAAkB,EAAlB;AAGA,eAAAoQ,UAAA,GAAsB,IAAtB;AACA,eAAAjI,MAAA,GAAkB,KAAlB;AACA,eAAAkI,MAAA,GAAkB,IAAlB;AACA,eAAAC,IAAA,GAAO,KAAP;AACA,eAAAC,OAAA,GAAoB,KAApB;AAIA,eAAA3E,WAAA,GAAwB,KAAxB;AACE,eAAA0S,aAAA,GAAuB,EAAvB;AACA,eAAA5V,WAAA,GAAqB,IAArB;AAG6J;;;;iBAE/J,oBAAQ;AAAA;;AACN,iBAAK7F,YAAL,GAAoB,KAAKP,EAAL,CAAQQ,OAAR,CAAgB,YAAhB,CAApB;AACA4B,mBAAO,CAACC,GAAR,CAAY,KAAK9B,YAAjB;AACA,iBAAK0b,iBAAL;AACA,iBAAKne,aAAL,CAAmB,EAAnB;AACA,iBAAKoe,iBAAL;AACA,iBAAKrV,WAAL;AAEA,iBAAKV,KAAL,CAAWE,aAAX,CAAyBvF,SAAzB,CAAmC,UAACwF,MAAD,EAAiB;AAClDlE,qBAAO,CAACC,GAAR,CAAYiE,MAAM,CAACC,GAAP,CAAW,IAAX,CAAZ;AACA,qBAAI,CAACyN,YAAL,GAAoB1N,MAAM,CAACC,GAAP,CAAW,QAAX,CAApB;AACAnE,qBAAO,CAACC,GAAR,CAAY,mBAAZ,EAAgC,OAAI,CAAC2R,YAArC;;AACA,kBAAG1N,MAAM,CAACC,GAAP,CAAW,QAAX,KAAwB,KAA3B,EAAiC;AAC9B,uBAAI,CAACuH,UAAL,GAAkB,KAAlB;AACF,uBAAI,CAACC,MAAL,GAAa,IAAb;AACA,uBAAI,CAACE,OAAL,GAAe,IAAf;AACA,eAJD,MAKK,IAAG3H,MAAM,CAACC,GAAP,CAAW,QAAX,KAAwB,IAA3B,EAAgC;AAClC,uBAAI,CAACuH,UAAL,GAAkB,IAAlB;AACA,uBAAI,CAACC,MAAL,GAAa,IAAb;AACD,uBAAI,CAACE,OAAL,GAAe,KAAf;AACD,eAJI,MAKA,IAAG3H,MAAM,CAACC,GAAP,CAAW,QAAX,KAAwB,OAA3B,EAAmC;AACtC,uBAAI,CAACuH,UAAL,GAAkB,KAAlB;AACA,uBAAI,CAACC,MAAL,GAAa,KAAb;AACA,uBAAI,CAACE,OAAL,GAAe,KAAf;AACD,eAJI,MAKA,IAAG3H,MAAM,CAACC,GAAP,CAAW,QAAX,KAAwB,IAA3B,EAAgC;AACrC,uBAAI,CAACwH,MAAL,GAAa,KAAb;AACC;;AACD,kBAAGzH,MAAM,CAACC,GAAP,CAAW,IAAX,CAAH,EAAoB;AAClB,uBAAI,CAACV,MAAL,GAAc,IAAd;AACA,uBAAI,CAAChI,EAAL,GAAUyI,MAAM,CAACC,GAAP,CAAW,IAAX,CAAV;;AACA,uBAAI,CAACjJ,UAAL,CAAgB4Q,cAAhB,CAA+B5H,MAAM,CAACC,GAAP,CAAW,IAAX,CAA/B,EAAiDzF,SAAjD,CAA2D,UAACyE,IAAD,EAAS;AACjEnD,yBAAO,CAACC,GAAR,CAAYkD,IAAZ;;AACA,yBAAI,CAACzH,aAAL,CAAmByH,IAAnB;AACF,iBAHD;;AAIE,uBAAI,CAACjI,UAAL,CAAgB6e,mBAAhB,CAAoC7V,MAAM,CAACC,GAAP,CAAW,IAAX,CAApC,EAAsDzF,SAAtD,CAAgE,UAACyE,IAAD,EAAS;AACzEnD,yBAAO,CAACC,GAAR,CAAYkD,IAAZ;;AACA,yBAAI,CAACzH,aAAL,CAAmByH,IAAnB;;AACA,yBAAI,CAACwE,SAAL,GAAiBxE,IAAjB;AACA,yBAAI,CAAC+D,WAAL,GAAmB,IAAnB;;AACA,yBAAI,CAACpD,WAAL,CAAiBQ,eAAjB,CAAiC,OAAI,CAACqD,SAAtC;AACF,iBANE;AAOH,eAdD,MAeI;AACF,uBAAI,CAAC3D,WAAL,GAAiB,KAAjB;;AACA,uBAAI,CAACtI,aAAL,CAAmB,EAAnB;AACD;AACF,aAzCD;AA2CD;;;iBAED,uBAAcG,IAAd,EAAoB;AAClBmE,mBAAO,CAACC,GAAR,CAAY,mBAAZ,EAAgCpE,IAAhC,EADkB,CAElB;;AAEA,iBAAKme,UAAL,GAAkB,KAAK/e,EAAL,CAAQc,KAAR,CAAc;AAC9BkG,wBAAU,EAAE,CAACpG,IAAI,CAACoG,UAAL,IAAmB,EAApB,EAAwB,0DAAWhG,QAAnC,CADkB;AAE9BX,sBAAQ,EAAE,CAACO,IAAI,CAACP,QAAL,IAAiB,EAAlB,EAAsB,0DAAWW,QAAjC,CAFoB;AAG9Bge,uBAAS,EAAE,CAACpe,IAAI,CAACoe,SAAL,IAAkB,EAAnB,EAAuB,0DAAWhe,QAAlC,CAHmB;AAI9Bie,uBAAS,EAAE,CAACre,IAAI,CAACqe,SAAL,IAAkB,EAAnB,EAAuB,0DAAWje,QAAlC,CAJmB;AAK9Bke,6BAAe,EAAE,CAACte,IAAI,CAACse,eAAL,IAAwB,EAAzB,EAA6B,0DAAWle,QAAxC,CALa;AAM9Bme,wBAAU,EAAE,CAACve,IAAI,CAACue,UAAL,IAAmB,EAApB,EAAwB,0DAAWne,QAAnC,CANkB;AAO9Boe,yBAAW,EAAE,CAACxe,IAAI,CAACwe,WAAL,IAAoB,EAArB,EAAwB,0DAAWpe,QAAnC,CAPiB;AAQ9BR,gBAAE,EAAE,CAACI,IAAI,CAACJ,EAAL,IAAW,EAAZ,CAR0B;AAS9BoD,wBAAU,EAAE,CAAChD,IAAI,CAACgD,UAAL,IAAmB,EAApB,CATkB;AAU9BoT,sBAAQ,EAAC,CAACpW,IAAI,CAACoW,QAAL,IAAiB,IAAlB,CAVqB;AAW9B1M,yBAAW,EAAC,CAAC1J,IAAI,CAAC0J,WAAL,IAAoB,EAArB,CAXkB;AAY9BzG,0BAAY,EAAC,CAACjD,IAAI,CAACiD,YAAL,IAAqB,EAAtB,CAZiB;AAa9B0G,qBAAO,EAAC,CAAC3J,IAAI,CAAC2J,OAAL,IAAgB,EAAjB,CAbsB;AAc9BrH,0BAAY,EAAC,CAACtC,IAAI,CAACsC,YAAL,IAAqB,EAAtB;AAdiB,aAAd,CAAlB;AAmBD,W,CAED;AACA;AACA;AACA;AACA;AACA;;;;iBAEA,uBAAc;AAAA;;AACZ,iBAAKjD,UAAL,CAAgBuJ,WAAhB,GAA8B/F,SAA9B,CAAwC,UAACyE,IAAD,EAAU;AACjD;AACC,mBAAI,IAAIxE,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACwE,IAAI,CAACvE,MAAnB,EAA0BD,CAAC,EAA3B,EAA8B;AAC5B,oBAAGwE,IAAI,CAACxE,CAAD,CAAJ,CAAQE,UAAR,IAAsB,GAAzB,EAA6B;AAC3B,yBAAI,CAACvD,QAAL,CAAcsL,IAAd,CAAmBzD,IAAI,CAACxE,CAAD,CAAvB;AACD;AACF;AACF,aAPD;AAQD;;;iBAED,6BAAiB;AAAA;;AACf,iBAAKzD,UAAL,CAAgB2e,iBAAhB,GAAoCnb,SAApC,CAA8C,UAAC3D,IAAD,EAAU;AACtDiF,qBAAO,CAACC,GAAR,CAAYlF,IAAZ;;AACA,mBAAI,IAAI4D,CAAC,GAAC,CAAV,EAAaA,CAAC,GAAC5D,IAAI,CAAC6D,MAApB,EAA2BD,CAAC,EAA5B,EAA+B;AAC7B,oBAAG5D,IAAI,CAAC4D,CAAD,CAAJ,CAAQE,UAAR,KAAqB,GAAxB,EAA4B;AAC1B,yBAAI,CAACoD,UAAL,CAAgB2E,IAAhB,CAAqB7L,IAAI,CAAC4D,CAAD,CAAzB;;AACAqB,yBAAO,CAACC,GAAR,CAAY,MAAZ,EAAmBtB,CAAnB;AACD;AACF,eAPqD,CAStD;;AACD,aAVD;AAWD;;;iBAED,6BAAiB;AAAA;;AACf;AACA;AACA;AACA;AACA;AACA,iBAAKzD,UAAL,CAAgB+N,kBAAhB,GAAqCvK,SAArC,CAA+C,UAAA3D,IAAI,EAAE;AACnDiF,qBAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoClF,IAApC;;AACA,mBAAI,IAAI4D,CAAC,GAAC,CAAV,EAAaA,CAAC,GAAC5D,IAAI,CAAC6D,MAApB,EAA2BD,CAAC,EAA5B,EAA+B;AAC7B,uBAAI,CAACgb,UAAL,CAAgB/S,IAAhB,CAAqB7L,IAAI,CAAC4D,CAAD,CAAJ,CAAQuK,UAA7B;AACD;;AACDlJ,qBAAO,CAACC,GAAR,CAAY,OAAI,CAAC0Z,UAAjB;AACD,aAND;AAOD;;;iBAGD,kBAAS;AAAA;;AACP3Z,mBAAO,CAACC,GAAR,CAAY,OAAZ,EAAoB,KAAK+Z,UAAL,CAAgBzd,KAApC;;AACA,gBAAG,KAAKyd,UAAL,CAAgBzR,OAAnB,EAA2B;AAC3B;AACC,aAFD,MAEK;AACLvI,qBAAO,CAACC,GAAR,CAAY,UAAZ,EAAuB,KAAK+Z,UAAL,CAAgBzd,KAAvC;AACA,mBAAKyd,UAAL,CAAgBzd,KAAhB,CAAsB4B,YAAtB,GAAqC,KAAKA,YAAL,CAAkBqG,QAAvD;AACA,mBAAKtJ,UAAL,CAAgBof,gBAAhB,CAAiC,KAAKN,UAAL,CAAgBzd,KAAjD,EAAwDmC,SAAxD,CAAkE,UAAA3D,IAAI,EAAI;AACxEiF,uBAAO,CAACC,GAAR,CAAY,MAAZ,EAAmBlF,IAAnB;;AACA,oBAAGA,IAAI,IAAI,IAAR,IAAgB,OAAI,CAAC0I,MAAL,IAAe,IAAlC,EAAuC;AACrC,yBAAI,CAAClG,MAAL,CAAYwD,QAAZ,CAAqB,6CAArB,EAAoEoF,IAApE,CAAyE,UAAA0C,CAAC,EAAE;AACpE,2BAAI,CAACnL,KAAL,CAAWc,IAAX,CAAgB,eAAhB,EAAiC,IAAjC,EACA;AAAEkC,8BAAQ,EAAE,IAAZ;AACEC,sCAAgB,EAAE,KADpB;AAEEC,wCAAkB,EAAE;AAFtB,qBADA;AAIC,mBALT;;AAMA,yBAAI,CAACiD,GAAL,CAAS4B,YAAT;AACD,iBARD,MASK,IAAG1K,IAAI,IAAI,IAAR,IAAgB,OAAI,CAAC0I,MAAL,IAAe,IAAlC,EAAuC;AAC3C;AACCzD,yBAAO,CAACC,GAAR,CAAY,MAAZ,EAAmBlF,IAAnB;;AACA,yBAAI,CAACwC,MAAL,CAAYwD,QAAZ,CAAqB,4CAArB,EAAmEoF,IAAnE,CAAwE,UAAA0C,CAAC,EAAE;AACzE,2BAAI,CAACnL,KAAL,CAAWc,IAAX,CAAgB,aAAhB,EAA+B,IAA/B,EACA;AAAEkC,8BAAQ,EAAE,IAAZ;AACEC,sCAAgB,EAAE,KADpB;AAEEC,wCAAkB,EAAE;AAFtB,qBADA;AAIC,mBALH;;AAMA,yBAAI,CAACiD,GAAL,CAAS4B,YAAT;AACA;AACH,eAtBD;AAuBC;AACF;;;iBACD,sBAAaE,SAAb,EAAsB;AAAA;;AACpB,+DAAKC,IAAL,CACE;AACE;AACAC,kBAAI,EAAE,uBAAsBF,SAAtB,GAAiC,UAAjC,GAA8C,0BAFtD;AAGEG,8BAAgB,EAAE,IAHpB;AAIEC,gCAAkB,EAAE,SAJtB;AAKEC,+BAAiB,EAAE,MALrB;AAME;AACAC,8BAAgB,EAAE,IAPpB;AAQEC,+BAAiB,EAAE,KARrB;AAQ4B,sBAAQ;AARpC,aADF,EAWEC,IAXF,CAWQ,UAAAC,MAAM,EAAI;AAChB,kBAAGA,MAAM,CAACC,WAAP,IAAoB,IAAvB,EAA4B;AAC1B,uBAAI,CAACnL,UAAL,CAAgBqf,kBAAhB,CAAmC,OAAI,CAAC5S,SAAL,CAAelM,EAAlD,EACCiD,SADD,CACW,UAAA3D,IAAI,EAAI;AACjB,yBAAI,CAACwC,MAAL,CAAYwD,QAAZ,CAAqB,CAAC,2CAAD,CAArB;AACD,iBAHD,EAIA,UAAAuC,GAAG,EAAE;AACH,sBAAIA,GAAG,CAACC,MAAJ,IAAc,GAAlB,EAAuB;AACrB,2BAAI,CAAC7F,KAAL,CAAWc,IAAX,CAAgB,6BAAhB,EAA+C,IAA/C,EAAqD;AACnDkC,8BAAQ,EAAE,IADyC;AAEnDC,sCAAgB,EAAE,KAFiC;AAGnDC,wCAAkB,EAAE;AAH+B,qBAArD;AAKD;AAGJ,iBAdC;AAeD;AAAC,aA5BJ;AAgCD;;;iBACH,sBAAU;AACV,iBAAKoD,WAAL,GAAiB,KAAjB;AACC;;;iBAEC,sBAAa2B,SAAb,EAAwB;AAAA;;AACtB,+DAAKC,IAAL,CACE;AACE;AACAC,kBAAI,EAAE,uBAAsBF,SAAtB,GAAiC,UAAjC,GAA8C,0BAFtD;AAGEG,8BAAgB,EAAE,IAHpB;AAIEC,gCAAkB,EAAE,SAJtB;AAKEC,+BAAiB,EAAE,MALrB;AAME;AACAC,8BAAgB,EAAE,IAPpB;AAQEC,+BAAiB,EAAE,KARrB;AAQ4B,sBAAQ;AARpC,aADF,EAWEC,IAXF,CAWQ,UAAAC,MAAM,EAAI;AAChB,kBAAGA,MAAM,CAACC,WAAP,IAAoB,IAAvB,EAA4B;AAC1BrG,uBAAO,CAACC,GAAR,CAAY,OAAI,CAACxE,EAAjB;AACA,oBAAID,OAAO,GAAQ,EAAnB;AACAA,uBAAO,CAACC,EAAR,GAAa,OAAI,CAACA,EAAlB;AACAD,uBAAO,CAACmK,SAAR,GAAoBA,SAApB;AACAnK,uBAAO,CAAC2C,YAAR,GAAuB,OAAI,CAACA,YAAL,CAAkBqG,QAAzC;;AACA,uBAAI,CAACtJ,UAAL,CAAgBsf,2BAAhB,CAA4Chf,OAA5C,EAAqDkD,SAArD,CAA+D,UAAC3D,IAAD,EAAU;AACvEiF,yBAAO,CAACC,GAAR,CAAYlF,IAAZ;AACA,yBAAI,CAAC4M,SAAL,GAAiB5M,IAAjB;;AACA,yBAAI,CAAC+I,WAAL,CAAiBQ,eAAjB,CAAiC,OAAI,CAACqD,SAAtC;;AACA,yBAAI,CAACT,WAAL,GAAmB,IAAnB;;AACA,yBAAI,CAACpD,WAAL,CAAiBS,cAAjB;;AACA,sBAAIpD,OAAO,GAAG,EAAd;;AACA,0BAAQwE,SAAR;AACE,yBAAK,MAAL;AACExE,6BAAO,GAAG,QAAV;AACA;;AACF,yBAAK,OAAL;AACEA,6BAAO,GAAG,QAAV;AACA;;AACF,yBAAK,MAAL;AACEA,6BAAO,GAAG,YAAV;AACA;;AACF;AACE;AAXJ;;AAaA,yBAAI,CAACzD,KAAL,CAAWc,IAAX,kBAA0B2C,OAA1B,sBAAoD,IAApD,EAA0D;AACxDT,4BAAQ,EAAE,IAD8C;AAExDC,oCAAgB,EAAE,KAFsC;AAGxDC,sCAAkB,EAAE;AAHoC,mBAA1D;AAKD,iBAzBD;AA0BD;AAAC,aA5CJ;AA8CD;;;iBAED,kBAAM;AACJ,iBAAKrD,MAAL,CAAYwD,QAAZ,CAAqB,CAAC,2CAAD,CAArB;AACD;;;;;;;yBAjRU2Y,mC,EAAmC,uH,EAAA,2H,EAAA,2I,EAAA,wI,EAAA,gI,EAAA,0J,EAAA,+H,EAAA,6I;AAAA,O;;;cAAnCA,mC;AAAmC,0D;AAAA;AAAA;;;;;;;;;;;;;;;ACfhD;;AAAsB;;AAA0B;;AAAyD;;AAAiC;;AAAiC;;AAAyB;;AAAQ;;AAC5M;;AACI;;AAAwB;AAAA,qBAAS,IAAAnY,MAAA,EAAT;AAAiB,aAAjB;;AACpB;;AAAU;;AAAU;;AACtB;;AACA;;AAGA;;AAGH;;AAEA;;AACC;;AACE;;AAA+B;AAAA,qBAAY,IAAAtE,MAAA,EAAZ;AAAoB,aAApB;;AAE7B;;AACE;;AAiBA;;AAOA;;AAaA;;AAOA;;AAcA;;AAOA;;AAcA;;AAOA;;AAgBA;;AAOA;;AAeA;;AAOA;;AACE;;AAAW;;AAAc;;AACzB;;AACE;;AACA;;AAGF;;AACF;;AACF;;AAEA;;AACE;;AASE;;AACE;;AAGS;;AACX;;AACA;;AACE;;AAGS;;AACX;;AACA;;AACE;;AAES;;AACX;;AACA;;AAKA;;AAKA;;AAKA;;AAMA;;AAIE;AAAA,qBAAS,IAAAsE,MAAA,EAAT;AAAiB,aAAjB;;AAEA;;AACF;;AACF;;AACF;;AACF;;AACF;;AACF;;AAEA;;AACE;;AACF;;;;AAhO8G;;AAAA;;AAAiC;;AAAA;;AAKpI;;AAAA;;AAGA;;AAAA;;AAOD;;AAAA;;AAGiC;;AAAA;;AAiBA;;AAAA;;AAOA;;AAAA;;AAaA;;AAAA;;AAOA;;AAAA;;AAcA;;AAAA;;AAOA;;AAAA;;AAcA;;AAAA;;AAOA;;AAAA;;AAgBA;;AAAA;;AAOC;;AAAA;;AAeD;;AAAA;;AAUf;;AAAA,kGAAwB,aAAxB,EAAwB,sCAAxB;;AACJ;;AAAA;;AAkBH;;AAAA;;AAKN;;AAAA;;AACM;;AAAA;;AAKN;;AAAA;;AACM;;AAAA;;AAIL;;AAAA;;AAKA;;AAAA;;AAKA;;AAAA;;AAKA;;AAAA;;AAqBE;;AAAA;;;;;;;;;wEDhNPmY,mC,EAAmC;gBAL/C,uDAK+C;iBALrC;AACTvc,oBAAQ,EAAE,mCADD;AAETC,uBAAW,EAAE,gDAFJ;AAGTC,qBAAS,EAAE,CAAC,gDAAD;AAHF,W;AAKqC,U;;;;;;;;;;;;;;;;;;;AACvB+P,kBAAQ;kBAA9B,uDAA8B;mBAApB,U;AAAoB;;;;;;;;;;;;;;;;;;;AEhBjC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACCiG;;AAAsB;;AAAG;;;;;;AAAO;;AAAqB;;AAAI;;;;;;AAKpJ;;AACE;;AACF;;;;;;AACA;;AACE;;AACF;;;;;;AAgBQ;;AACE;;AACF;;;;;;AAaF;;AACE;;AACF;;;;;;;;AAQF;;AACE;;AAAoG;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAClG;;AACF;;AACF;;;;;;;;AAHO;;AAAA;;AACH;;AAAA;;;;;;;;AAqCF;;AACE;;AACE;;AACwC;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAIvC;;AACH;;AACE;;AACJ;;;;;;;;AANI;;AAAA,uFAAe,UAAf,EAAe,mBAAf,EAAe,SAAf,EAAe,iBAAf;;AAGC;;AAAA;;;;;;AARP;;AACE;;AAWF;;;;;;;;AAXO;;AAAA;;;;;;;;AAoBP;;AAGE;AAAA;;AAAA;;AAAA;AAAA;;AAGA;;AAEF;;;;;;AAJE;;;;;;;;AAMA;;AAGA;AAAA;;AAAA;;AAAA;AAAA;;AACG;;AACF;;;;;;AAHD;;;;;;;;AAQA;;AAAwE;AAAA;;AAAA;;AAAA,yCAAqB,KAArB;AAA0B,WAA1B;;AACtE;;AACF;;;;;;;;AAGA;;AAAwE;AAAA;;AAAA;;AAAA,wCAAsB,MAAtB;AAA4B,WAA5B;;AACtE;;AACF;;;;;;AAHF;;AACE;;AAES;;AACX;;;;;;AAJoE;;AACzD;;AAAA;;;;;;;;AAKT;;AAAuE;AAAA;;AAAA;;AAAA,wCAAsB,MAAtB;AAA4B,WAA5B;;AACrE;;AACF;;;;;;AAHF;;AACE;;AAES;;AACX;;;;;;AAJkF;;AACvE;;AAAA;;;;;;;;AAKT;;AAAuE;AAAA;;AAAA;;AAAA,wCAAsB,OAAtB;AAA6B,WAA7B;;AACrE;;AACF;;;;;;AAHF;;AACE;;AAES;;AACX;;;;;;AAJiF;;AACtE;;AAAA;;;;;;;;AAKT;;AAAuE;AAAA;;AAAA;;AAAA,wCAAsB,QAAtB;AAA8B,WAA9B;;AACrE;;AACF;;;;;;AAHF;;AACE;;AAEU;;AACZ;;;;;;AAJ4C;;AACjC;;AAAA;;;;;;AAmBlB;;AACC;;AACF;;;;UDzJWqN,wB;AA4CX,0CAAoBvf,UAApB,EAAoDqC,MAApD,EAA2EwG,KAA3E,EACUrG,KADV,EACsCE,EADtC,EACqE3C,EADrE,EAC8F4I,GAD9F,EAC8HC,WAD9H,EACwJ;AAAA;;AADpI,eAAA5I,UAAA,GAAAA,UAAA;AAAgC,eAAAqC,MAAA,GAAAA,MAAA;AAAuB,eAAAwG,KAAA,GAAAA,KAAA;AACjE,eAAArG,KAAA,GAAAA,KAAA;AAA4B,eAAAE,EAAA,GAAAA,EAAA;AAA+B,eAAA3C,EAAA,GAAAA,EAAA;AAAyB,eAAA4I,GAAA,GAAAA,GAAA;AAAgC,eAAAC,WAAA,GAAAA,WAAA;AA1C9H,eAAA4W,gBAAA,GAA0B,KAA1B;AACA,eAAAC,UAAA,GAAoB,IAApB;AACA,eAAAC,SAAA,GAAoB,IAApB;AACA,eAAAnX,MAAA,GAAiB,KAAjB;AAEA,eAAAyD,WAAA,GAAwB,KAAxB;AAIA,eAAA2T,UAAA,GAAiB,EAAjB;AACA,eAAAC,QAAA,GAAW,KAAX,CAgCwJ,CA7BxJ;;AACA,eAAAC,YAAA,GAAsB,KAAtB,CA4BwJ,CA3BzJ;;AACC,eAAAC,gBAAA,GAA0B,EAA1B;AACA,eAAAC,MAAA,GAAgB,EAAhB,CAyBwJ,CAxBzJ;;AACC,eAAAvP,UAAA,GAAsB,IAAtB;AACA,eAAAC,MAAA,GAAkB,IAAlB;AACA,eAAAC,IAAA,GAAO,KAAP;AACA,eAAAC,OAAA,GAAoB,KAApB;AACA,eAAAqP,WAAA,GAAqB,EAArB;AACA,eAAAC,QAAA,GAAkB,EAAlB;AACA,eAAAC,QAAA,GAAiB,EAAjB;AAEA,eAAAC,cAAA,GAA0B,KAA1B;AACA,eAAAhG,OAAA,GAAU,KAAV;AAEA,eAAAiG,eAAA,GAAwB,IAAxB;AACA,eAAAC,cAAA,GAAmB,EAAnB;AAGA,eAAAvX,WAAA,GAAqB,IAArB;AACA,eAAAwX,QAAA,GAAkB,EAAlB;AAGA,eAAAC,aAAA,GAAwB,KAAxB;AAI2J;;;;iBAE3J,oBAAQ;AAAA;;AACN,iBAAK/f,aAAL,CAAmB,EAAnB;AACA,iBAAKyC,YAAL,GAAoB,KAAKP,EAAL,CAAQQ,OAAR,CAAgB,YAAhB,CAApB;AACA,iBAAKsd,oBAAL;AAEA,iBAAK3X,KAAL,CAAWE,aAAX,CAAyBvF,SAAzB,CAAmC,UAACwF,MAAD,EAAiB;AAClD;AACA;AACA,kBAAGA,MAAM,CAACC,GAAP,CAAW,QAAX,KAAwB,KAA3B,EAAiC;AAC9B,uBAAI,CAACuH,UAAL,GAAkB,KAAlB;AACF,uBAAI,CAACC,MAAL,GAAa,IAAb;AACA,uBAAI,CAACE,OAAL,GAAe,IAAf;AACA,eAJD,MAKK,IAAG3H,MAAM,CAACC,GAAP,CAAW,QAAX,KAAwB,IAA3B,EAAgC;AAClC,uBAAI,CAACuH,UAAL,GAAkB,IAAlB;AACA,uBAAI,CAACC,MAAL,GAAa,IAAb;AACD,uBAAI,CAACE,OAAL,GAAe,KAAf;AACD,eAJI,MAKA,IAAG3H,MAAM,CAACC,GAAP,CAAW,QAAX,KAAwB,OAA3B,EAAmC;AACtC,uBAAI,CAACuH,UAAL,GAAkB,KAAlB;AACA,uBAAI,CAACC,MAAL,GAAa,KAAb;AACA,uBAAI,CAACE,OAAL,GAAe,KAAf;AACD,eAJI,MAKA,IAAG3H,MAAM,CAACC,GAAP,CAAW,QAAX,KAAwB,IAA3B,EAAgC;AACrC,uBAAI,CAACwH,MAAL,GAAa,KAAb;AACC;;AACD,kBAAGzH,MAAM,CAACC,GAAP,CAAW,IAAX,CAAH,EAAoB;AAClB,uBAAI,CAACV,MAAL,GAAc,IAAd;AACA,uBAAI,CAAChI,EAAL,GAAUyI,MAAM,CAACC,GAAP,CAAW,IAAX,CAAV;;AACA,uBAAI,CAACjJ,UAAL,CAAgBygB,aAAhB,CAA8BzX,MAAM,CAACC,GAAP,CAAW,IAAX,CAA9B,EAAgDzF,SAAhD,CAA0D,UAACyE,IAAD,EAAc;AACrEnD,yBAAO,CAACC,GAAR,CAAYkD,IAAZ;AACD,yBAAI,CAACyY,YAAL,GAAkB,qBAAlB;AACA,yBAAI,CAACC,OAAL,GAAe1Y,IAAf;AACA,sBAAI2Y,OAAJ;;AAJsE,6CAK9Dnd,CAL8D;AAMpE,2BAAI,CAACod,iBAAL,CAAuB5Y,IAAI,CAAC6Y,cAAL,CAAoBrd,CAApB,EAAuBsd,YAAvB,CAAoCC,QAA3D;;AACFlc,2BAAO,CAACC,GAAR,CAAY,OAAI,CAACub,QAAjB;AAEKzH,0BAAM,GAAE5Q,IAAI,CAACgZ,UAAL,CAAgB7c,MAAhB,CAAuB,UAACzD,IAAD,EAAQ;AAC1C,6BAAQA,IAAI,CAACqgB,QAAL,KAAgB/Y,IAAI,CAAC6Y,cAAL,CAAoBrd,CAApB,EAAuBsd,YAAvB,CAAoCC,QAA5D;AACC,qBAFU,CATyD;AAYpElc,2BAAO,CAACC,GAAR,CAAY,OAAI,CAACkb,QAAjB,EAA0BpH,MAA1B;;AACD,2BAAI,CAACoH,QAAL,CAAcvU,IAAd,CAAmBmN,MAAM,CAAC,CAAD,CAAN,CAAU8G,UAA7B;;AACAiB,2BAAO,GAAG3Y,IAAI,CAACiZ,OAAL,CAAa9c,MAAb,CAAoB,UAAC+c,OAAD,EAAW;AACzC,6BAAOA,OAAO,CAACC,KAAR,IAAevI,MAAM,CAAC,CAAD,CAAN,CAAUuI,KAAhC;AACC,qBAFS,CAAV;AAGCtc,2BAAO,CAACC,GAAR,CAAY6b,OAAZ;AAjBoE;;AAKtE,uBAAI,IAAInd,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACwE,IAAI,CAAC6Y,cAAL,CAAoBpd,MAAlC,EAA0CD,CAAC,EAA3C,EAA+C;AAAA,wBAI1CoV,MAJ0C;;AAAA,0BAAvCpV,CAAuC;AAa9C,mBAlBqE,CAmBtE;;;AACA,yBAAI,CAACjD,aAAL,CAAmByH,IAAI,CAACoZ,QAAxB;;AACA,yBAAI,CAACC,YAAL,CAAkBV,OAAO,CAAC,CAAD,CAAP,CAAWQ,KAA7B,EAAmCR,OAAO,CAAC,CAAD,CAAP,CAAWW,OAAX,CAAmBC,WAAnB,EAAnC;;AAEA,yBAAI,CAACtB,QAAL,GAAgBjY,IAAI,CAACwZ,eAAL,GAAuB,GAAvC;;AACA,sBAAIxZ,IAAI,CAACoZ,QAAL,CAAc1d,UAAd,IAA0B,GAA9B,EAAmC;AACjCsE,wBAAI,CAACoZ,QAAL,CAAcrX,QAAd,GAAwB,EAAxB;AACA/B,wBAAI,CAACoZ,QAAL,CAActX,MAAd,GAAqB,EAArB;AACD;;AAED,yBAAI,CAAC0C,SAAL,GAAiBxE,IAAI,CAACoZ,QAAtB;AACA,yBAAI,CAACrV,WAAL,GAAmB,IAAnB;;AACA,yBAAI,CAACpD,WAAL,CAAiBQ,eAAjB,CAAiC,OAAI,CAACqD,SAAtC;;AACA,yBAAI,CAAC7D,WAAL,CAAiBS,cAAjB;AAGD,iBAnCD;AAoCD,eAvCD,MAwCI;AACF,uBAAI,CAACP,WAAL,GAAiB,KAAjB;;AACA,uBAAI,CAACtI,aAAL,CAAmB,EAAnB;AAED;AACF,aAlED;AAoED;;;iBAED,kCAAsB;AACpB,mBAAO,KAAKT,EAAL,CAAQc,KAAR,CAAc;AACnBkgB,0BAAY,EAAE;AACZW,wBAAQ,EAAE,CAAC,EAAD,CADE;AAEZV,wBAAQ,EAAE,CAAC,EAAD;AAFE,eADK;AAKnB1W,qBAAO,EAAE,CAAC,EAAD;AALU,aAAd,CAAP;AAQD;;;iBACF,gCAAoB;AAAA;;AACnB,iBAAKtK,UAAL,CAAgB2hB,sBAAhB,GAAyCne,SAAzC,CAAmD,UAAC+B,QAAD,EAAkB;AACnE,qBAAI,CAAC8a,cAAL,GAAoB9a,QAApB;;AACJ,mBAAI,IAAI9B,CAAC,GAAC,CAAV,EAAaA,CAAC,GAAE8B,QAAQ,CAAC7B,MAAzB,EAAiCD,CAAC,EAAlC,EAAqC;AACnC,uBAAI,CAAC4c,cAAL,CAAoB5c,CAApB,EAAuB8d,OAAvB,GAA+B,OAAI,CAAClB,cAAL,CAAoB5c,CAApB,EAAuB8d,OAAvB,CAA+BC,WAA/B,EAA/B;AACA,uBAAI,CAACnB,cAAL,CAAoB5c,CAApB,EAAuB8U,QAAvB,GAAgC,KAAhC;;AACA,uBAAI,CAACvY,UAAL,CAAgB4hB,0BAAhB,CAA2C,OAAI,CAACvB,cAAL,CAAoB5c,CAApB,EAAuB2d,KAAlE,EAAyE5d,SAAzE,CAAmF,UAACyE,IAAD,EAAU;AAC3FnD,yBAAO,CAACC,GAAR,CAAYkD,IAAZ;;AACA,uBAAI,IAAIxE,GAAC,GAAG,CAAZ,EAAeA,GAAC,GAAGwE,IAAI,CAACvE,MAAxB,EAAgCD,GAAC,EAAjC,EAAoC;AAClCwE,wBAAI,CAACxE,GAAD,CAAJ,CAAQ0W,OAAR,GAAkB,KAAlB;;AACA,2BAAI,CAACmG,QAAL,CAAc5U,IAAd,CAAmBzD,IAAI,CAACxE,GAAD,CAAvB;AACD;AACF,iBAND;AAOD;AACE,aAbD;AAcAqB,mBAAO,CAACC,GAAR,CAAY,KAAKub,QAAjB;AACD;;;iBACD,2BAAkBU,QAAlB,EAA0B;AACxB,iBAAI,IAAIlH,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAG,KAAKwG,QAAL,CAAc5c,MAAjC,EAAyCoW,CAAC,EAA1C,EAA6C;AAC3C,kBAAG,KAAKwG,QAAL,CAAcxG,CAAd,EAAiBkH,QAAjB,IAA6BA,QAAhC,EAAyC;AACvC,qBAAKV,QAAL,CAAcxG,CAAd,EAAiBK,OAAjB,GAA2B,IAA3B;;AACA,qBAAI,IAAIJ,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAG,KAAKsG,cAAL,CAAoB3c,MAAvC,EAA+CqW,CAAC,EAAhD,EAAmD;AACjD,sBAAG,KAAKsG,cAAL,CAAoBtG,CAApB,EAAuBqH,KAAvB,IAAgC,KAAKd,QAAL,CAAcxG,CAAd,EAAiBsH,KAApD,EAA0D;AACxD,yBAAKf,cAAL,CAAoBtG,CAApB,EAAuBxB,QAAvB,GAAkC,IAAlC;AACA;AACD;AACF;;AACD;AACH;AACF;AACA;;;iBACC,kBAASsJ,MAAT,EAAiB;AAAA;;AACf,gBAAMlC,UAAU,GAAGkC,MAAM,CAACrd,MAAP,CAAcnD,KAAjC;AACA,gBAAMygB,SAAS,GAAGD,MAAM,CAACrd,MAAP,CAAc2V,OAAhC;AACA,iBAAK4H,cAAL,GAAsB,KAAKA,cAAL,CAAoBC,GAApB,CAAwB,UAACnH,CAAD,EAAO;AACnD,kBAAIA,CAAC,CAAC8E,UAAF,IAAgBA,UAApB,EAAgC;AAC9B9E,iBAAC,CAACV,OAAF,GAAY2H,SAAZ;AACA,uBAAI,CAAC3B,cAAL,GAAsB,IAAtB;AACA,uBAAOtF,CAAP;AACD;;AACD,kBAAI8E,UAAU,IAAI,CAAC,CAAnB,EAAsB;AACpB9E,iBAAC,CAACV,OAAF,GAAY,OAAI,CAACgG,cAAjB;AACA,uBAAOtF,CAAP;AACD;;AACD,qBAAOA,CAAP;AACD,aAXqB,CAAtB;AAYD;;;iBAMD,uBAAcla,IAAd,EAAoB;AAClB,iBAAKshB,QAAL,GAAgB,KAAKliB,EAAL,CAAQc,KAAR,CAAc;AAC5B8e,wBAAU,EAAC,CAAC,EAAD,CADiB;AAE5Bpf,gBAAE,EAAE,CAAC,EAAD,CAFwB;AAG5BoD,wBAAU,EAAE,CAAC,EAAD,CAHgB;AAI5BoT,sBAAQ,EAAC,CAAC,IAAD,CAJmB;AAK5B1M,yBAAW,EAAC,CAAC,EAAD,CALgB;AAM5BzG,0BAAY,EAAC,CAAC,EAAD,CANe;AAO5B0G,qBAAO,EAAC,CAAC,EAAD,CAPoB;AAQ5BrH,0BAAY,EAAC,CAAC,EAAD,CARe;AAS5B8G,oBAAM,EAAC,CAAC,EAAD,CATqB;AAU5BC,sBAAQ,EAAE,CAAC,EAAD,CAVkB;AAW5BgW,yBAAW,EAAE,KAAKjgB,EAAL,CAAQmiB,KAAR,CAAc,CAAC,KAAKC,sBAAL,EAAD,CAAd,CAXe;AAY5BC,oBAAM,EAAE,CAACzhB,IAAI,GAAEA,IAAI,CAACJ,EAAP,GAAU,EAAf,CAZoB;AAa5B8hB,2BAAa,EAAC,CAAC,KAAD,CAbc;AAc5BX,sBAAQ,EAAE,CAAC/gB,IAAI,GAAEA,IAAI,CAAC+gB,QAAP,GAAiB,EAAtB,EAAyB,CAAC,0DAAW3gB,QAAZ,CAAzB,CAdkB;AAe5BuhB,sBAAQ,EAAC,CAAC3hB,IAAI,GAAEA,IAAI,CAAC2hB,QAAP,GAAkB,EAAvB,EAA0B,CAAC,0DAAWvhB,QAAZ,CAA1B;AAfmB,aAAd,CAAhB;AAiBD;;;iBAKD,2BAAkBoZ,OAAlB,EAA2BoI,QAA3B,EAAqCre,KAArC,EAA6C;AAAA;;AAC3CY,mBAAO,CAACC,GAAR,CAAY,SAAZ,EAAsBoV,OAAtB;AACArV,mBAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBwd,QAAxB,EAF2C,CAG3C;;AACA,gBAAIpI,OAAO,CAACA,OAAR,IAAiB,IAArB,EAA2B;AACzB,mBAAKmG,QAAL,CAAcpc,KAAd,EAAqBiW,OAArB,GAA+B,IAA/B;AACA,mBAAKkG,cAAL,CAAoB,KAAKmC,QAAzB,EAAmCjK,QAAnC,GAA8C,IAA9C,CAFyB,CAGzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACD,aAdD,MAcO;AACL,mBAAK+H,QAAL,CAAcpc,KAAd,EAAqBiW,OAArB,GAA+B,KAA/B,CADK,CAEL;AACA;AACD,aAtB0C,CAuB3C;AACA;AACA;;;AACA,gBAAIsI,kBAAkB,GAAG,KAAKnC,QAAL,CAAclc,MAAd,CAAqB,UAAAse,IAAI;AAAA,qBAAIA,IAAI,CAACtB,KAAL,IAAc,OAAI,CAACuB,aAAnB,IAAoCD,IAAI,CAACvI,OAAL,IAAgB,IAAxD;AAAA,aAAzB,EAAuFzW,MAAhH;AACA,iBAAK6c,aAAL,GAAqB,KAAKD,QAAL,CAAclc,MAAd,CAAqB,UAAAse,IAAI;AAAA,qBAAIA,IAAI,CAACtB,KAAL,IAAc,OAAI,CAACuB,aAAvB;AAAA,aAAzB,EAA+Djf,MAA/D,IAAyE+e,kBAA9F;;AACA,gBAAGA,kBAAkB,GAAG,CAAxB,EAA0B;AACxB,mBAAKpC,cAAL,CAAoB,KAAKmC,QAAzB,EAAmCjK,QAAnC,GAA8C,KAA9C;AACD;AAEF;;;iBAGD,kBAAM;AACJ,iBAAKlW,MAAL,CAAYwD,QAAZ,CAAqB,CAAC,mCAAD,CAArB;AACD;;;iBAGD,gBAAOyF,IAAP,EAAa;AAAA;;AACXxG,mBAAO,CAACC,GAAR,CAAY,OAAZ,EAAoB,KAAKgd,cAAzB;AACCjd,mBAAO,CAACC,GAAR,CAAY,OAAZ,EAAoBuG,IAApB;AAED,iBAAK2W,QAAL,CAAc5gB,KAAd,CAAoB4B,YAApB,GAAmC,KAAKA,YAAL,CAAkBqG,QAArD;AACAxE,mBAAO,CAACC,GAAR,CAAY,KAAKkd,QAAjB;AACA,iBAAK3B,QAAL,CAAc0B,GAAd,CAAkB,UAAAU,IAAI,EAAI;AACxB,kBAAIA,IAAI,CAACvI,OAAL,IAAgB,IAApB,EAA0B;AACxB,oBAAIyI,OAAJ;AACAA,uBAAO,GACP;AACE,kCAAgB;AACd,gCAAY,OAAI,CAACX,QAAL,CAAc5gB,KAAd,CAAoBqgB,QADlB;AAEd,gCAAYgB,IAAI,CAAC1B;AAFH,mBADlB;AAKE,6BAAW;AALb,iBADA;;AAQA,uBAAI,CAAChB,WAAL,CAAiBtU,IAAjB,CAAsBkX,OAAtB;AACD;AACF,aAbD;;AAcA,gBAAG,KAAK5C,WAAL,CAAiBtc,MAAjB,IAA2B,KAAK4c,QAAL,CAAc5c,MAA5C,EAAmD;AACjD,mBAAKue,QAAL,CAAclE,QAAd,CAAuBsE,aAAvB,CAAqCtO,QAArC,CAA8C,IAA9C;AACD,aAFD,MAGI;AACF,mBAAKkO,QAAL,CAAclE,QAAd,CAAuBsE,aAAvB,CAAqCtO,QAArC,CAA8C,KAA9C;AACD;;AACDjP,mBAAO,CAACC,GAAR,CAAY,qBAAZ,EAAkC,KAAKkd,QAAL,CAAc5gB,KAAhD;AACE,iBAAK4gB,QAAL,CAAc5gB,KAAd,CAAoB2e,WAApB,GAAkC,KAAKA,WAAvC;AACFlb,mBAAO,CAACC,GAAR,CAAY,MAAZ,EAAoB,KAAKib,WAAzB;;AACA,iBAAK,IAAIvc,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKuc,WAAL,CAAiBtc,MAArC,EAA6CD,CAAC,EAA9C,EAAiD;AAC/CqB,qBAAO,CAACC,GAAR,CAAY,KAAKib,WAAL,CAAiBvc,CAAjB,EAAoBsd,YAApB,CAAiCW,QAA7C;;AACA,kBAAIje,CAAC,IAAI,KAAKuc,WAAL,CAAiBtc,MAAjB,GAA0B,CAAnC,EAAsC;AACpC,qBAAKwc,QAAL,GAAe,KAAKA,QAAL,GAAc,KAAKF,WAAL,CAAiBvc,CAAjB,EAAoBsd,YAApB,CAAiCW,QAA9D;AACD,eAFD,MAEO;AACL,qBAAKxB,QAAL,GAAe,KAAKA,QAAL,GAAc,KAAKF,WAAL,CAAiBvc,CAAjB,EAAoBsd,YAApB,CAAiCW,QAA/C,GAA0D,GAAzE;AACD;;AAED,mBAAKmB,gBAAL,GAAwB,kBAAxB;AAED,aAvCU,CAwCZ;;;AAEC,iBAAKZ,QAAL,CAAc5gB,KAAd,CAAoBd,EAApB,GAAyB,KAAK0hB,QAAL,CAAc5gB,KAAd,CAAoB+gB,MAA7C;AACA,iBAAKH,QAAL,CAAc5gB,KAAd,CAAoBwhB,gBAApB,GAAqC,KAAKnC,YAA1C;AACA,iBAAK1gB,UAAL,CAAgB8iB,QAAhB,CAAyB,KAAKb,QAAL,CAAc5gB,KAAvC,EAA8CmC,SAA9C,CAAwD,UAAA3D,IAAI,EAAI;AAC9DiF,qBAAO,CAACC,GAAR,CAAY,MAAZ,EAAmBlF,IAAnB;;AACA,kBAAGA,IAAI,IAAI,IAAR,IAAgB,OAAI,CAAC0I,MAAL,IAAe,IAAlC,EAAuC;AACrC,uBAAI,CAAClG,MAAL,CAAYwD,QAAZ,CAAqB,qCAArB,EAA4DoF,IAA5D,CAAiE,UAAA0C,CAAC,EAAE;AAC5D,yBAAI,CAACnL,KAAL,CAAWc,IAAX,CAAgB,eAAhB,EAAiC,IAAjC,EACA;AAAEkC,4BAAQ,EAAE,IAAZ;AACEC,oCAAgB,EAAE,KADpB;AAEEC,sCAAkB,EAAE;AAFtB,mBADA;AAIC,iBALT;;AAMA,uBAAI,CAACiD,GAAL,CAAS4B,YAAT;AACD,eARD,MASK,IAAG1K,IAAI,IAAI,IAAR,IAAgB,OAAI,CAAC0I,MAAL,IAAe,IAAlC,EAAuC;AAC3C;AACCzD,uBAAO,CAACC,GAAR,CAAY,MAAZ,EAAmBlF,IAAnB;;AACA,uBAAI,CAACwC,MAAL,CAAYwD,QAAZ,CAAqB,qCAArB,EAA4DoF,IAA5D,CAAiE,UAAA0C,CAAC,EAAE;AAClE,yBAAI,CAACnL,KAAL,CAAWc,IAAX,CAAgB,aAAhB,EAA+B,IAA/B,EACA;AAAEkC,4BAAQ,EAAE,IAAZ;AACEC,oCAAgB,EAAE,KADpB;AAEEC,sCAAkB,EAAE;AAFtB,mBADA;AAIC,iBALH;;AAMA,uBAAI,CAACiD,GAAL,CAAS4B,YAAT;AACA;AACH,aAtBD,EA5CW,CAmEX;AACD;;;iBACD,mBAAUhJ,KAAV,EAAiB;AAAA;;AAGf,iBAAK,IAAIkC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAK6c,QAAL,CAAc5c,MAAlC,EAA0CD,CAAC,EAA3C,EAA+C;AAC7C,kBAAG,KAAK6c,QAAL,CAAc7c,CAAd,EAAiB2d,KAAjB,IAA0B,KAAKuB,aAAlC,EAAgD;AAChD,oBAAIphB,KAAK,CAAC4Y,OAAN,IAAiB,IAArB,EAA0B;AACxB,uBAAKmG,QAAL,CAAc7c,CAAd,EAAiB0W,OAAjB,GAA2B,IAA3B;AACA,uBAAKkG,cAAL,CAAoB,KAAKmC,QAAzB,EAAmCjK,QAAnC,GAA8C,IAA9C;AACA,uBAAKgI,aAAL,GAAqB,IAArB,CAHwB,CAKxB;AACA;AACD,iBAPD,MAQI;AACF,uBAAKD,QAAL,CAAc7c,CAAd,EAAiB0W,OAAjB,GAA2B,KAA3B;AACA,uBAAKkG,cAAL,CAAoB,KAAKmC,QAAzB,EAAmCjK,QAAnC,GAA8C,IAA9C;AACA,uBAAKgI,aAAL,GAAqB,KAArB;AACD;AACF,eAf8C,CAgB7C;AACE;AACF;;AACD;;AACD,gBAAIkC,kBAAkB,GAAG,KAAKnC,QAAL,CAAclc,MAAd,CAAqB,UAAAse,IAAI;AAAA,qBAAIA,IAAI,CAACtB,KAAL,IAAc,OAAI,CAACuB,aAAnB,IAAoCD,IAAI,CAACvI,OAAL,IAAgB,IAAxD;AAAA,aAAzB,EAAuFzW,MAAhH;AACA,iBAAK6c,aAAL,GAAqB,KAAKD,QAAL,CAAclc,MAAd,CAAqB,UAAAse,IAAI;AAAA,qBAAIA,IAAI,CAACtB,KAAL,IAAc,OAAI,CAACuB,aAAvB;AAAA,aAAzB,EAA+Djf,MAA/D,IAAyE+e,kBAA9F;;AACA,gBAAGA,kBAAkB,GAAG,CAAxB,EAA0B;AACxB,mBAAKpC,cAAL,CAAoB,KAAKmC,QAAzB,EAAmCjK,QAAnC,GAA8C,KAA9C;AACD;AACF;;;iBAKD,sBAAa9N,SAAb,EAAwB;AAAA;;AACtB,+DAAKC,IAAL,CACE;AACE;AACAC,kBAAI,EAAE,uBAAsBF,SAAtB,GAAiC,UAAjC,GAA8C,0BAFtD;AAGEG,8BAAgB,EAAE,IAHpB;AAIEC,gCAAkB,EAAE,SAJtB;AAKEC,+BAAiB,EAAE,MALrB;AAME;AACAC,8BAAgB,EAAE,IAPpB;AAQEC,+BAAiB,EAAE,KARrB;AAQ4B,sBAAQ;AARpC,aADF,EAWEC,IAXF,CAWQ,UAAAC,MAAM,EAAI;AAChB,kBAAGA,MAAM,CAACC,WAAP,IAAoB,IAAvB,EAA4B;AAC9B,oBAAI7K,OAAO,GAAQ,EAAnB;AACAA,uBAAO,CAACC,EAAR,GAAa,OAAI,CAACA,EAAlB;AACAD,uBAAO,CAACmK,SAAR,GAAoBA,SAApB;AACAnK,uBAAO,CAAC2C,YAAR,GAAuB,OAAI,CAACA,YAAL,CAAkBqG,QAAzC;AAEAxE,uBAAO,CAACC,GAAR,CAAYzE,OAAZ;;AACA,uBAAI,CAACN,UAAL,CAAgB+iB,8BAAhB,CAA+CziB,OAA/C,EAAwDkD,SAAxD,CAAkE,UAAC3D,IAAD,EAAU;AAC1EiF,yBAAO,CAACC,GAAR,CAAYlF,IAAZ;;AACA,sBAAIA,IAAI,CAAC8D,UAAL,IAAiB,GAArB,EAA0B;AACxB9D,wBAAI,CAACmK,QAAL,GAAgB,EAAhB;AACAnK,wBAAI,CAACkK,MAAL,GAAc,EAAd;AACC;;AACH,yBAAI,CAAC0C,SAAL,GAAiB5M,IAAjB;;AACA,yBAAI,CAAC+I,WAAL,CAAiBQ,eAAjB,CAAiC,OAAI,CAACqD,SAAtC;;AACA,yBAAI,CAACT,WAAL,GAAmB,IAAnB;;AACA,yBAAI,CAACpD,WAAL,CAAiBS,cAAjB;;AACA,sBAAIpD,OAAO,GAAG,EAAd;;AACA,0BAAQwE,SAAR;AACE,yBAAK,MAAL;AACExE,6BAAO,GAAG,QAAV;AACA;;AACF,yBAAK,OAAL;AACEA,6BAAO,GAAG,QAAV;AACA;;AACF,yBAAK,MAAL;AACEA,6BAAO,GAAG,YAAV;AACA;;AACF;AACE;AAXJ;;AAaA,yBAAI,CAACzD,KAAL,CAAWc,IAAX,kBAA0B2C,OAA1B,sBAAoD,IAApD,EAA0D;AACxDT,4BAAQ,EAAE,IAD8C;AAExDC,oCAAgB,EAAE,KAFsC;AAGxDC,sCAAkB,EAAE;AAHoC,mBAA1D;AAKD,iBA7BD;AA8BA;AAAC,aAjDD;AAmDD;;;iBACD,sBAAa0b,KAAb,EAAmB4B,IAAnB,EAAwB9e,KAAxB,EAA8B;AAAA;;AAC5B,iBAAKub,UAAL,GAAkB,KAAlB;AACA,iBAAKkD,aAAL,GAAqBvB,KAArB;AACA,iBAAKoB,QAAL,GAAgBte,KAAhB;AACA,iBAAKwc,YAAL,GAAkBsC,IAAlB;AACA,iBAAKzC,aAAL,GAAqB,KAAKD,QAAL,CAAclc,MAAd,CAAqB,UAAAse,IAAI;AAAA,qBAAIA,IAAI,CAACtB,KAAL,IAAc,OAAI,CAACuB,aAAvB;AAAA,aAAzB,EAA+Djf,MAA/D,IAAyE,KAAK4c,QAAL,CAAclc,MAAd,CAAqB,UAAAse,IAAI;AAAA,qBAAIA,IAAI,CAACtB,KAAL,IAAc,OAAI,CAACuB,aAAnB,IAAoCD,IAAI,CAACvI,OAAL,IAAgB,IAAxD;AAAA,aAAzB,EAAuFzW,MAArL,CAL4B,CAO5B;AACA;AAEE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACF;AACD;;;iBAED,yBAAgBgf,IAAhB,EAAoB;AAClB,gBAAIO,eAAe,GAAEP,IAAI,CAACte,MAAL,CAAY,UAACzD,IAAD,EAAQ;AACvC,qBAAOA,IAAI,CAACwZ,OAAL,IAAgB,KAAvB;AACI,aAFe,CAArB;AAGE,gBAAG8I,eAAe,CAACvf,MAAhB,IAAwB,CAA3B,EACA,KAAKue,QAAL,CAAclE,QAAd,CAAuBsE,aAAvB,CAAqCtO,QAArC,CAA8C,IAA9C,EADA,KAEM,KAAKkO,QAAL,CAAclE,QAAd,CAAuBsE,aAAvB,CAAqCtO,QAArC,CAA8C,KAA9C;AACT;;;iBACD,sBAAatJ,SAAb,EAAwB;AAAA;;AACtB,+DAAKC,IAAL,CACE;AACEC,kBAAI,EAAE,uBAAsBF,SAAtB,GAAiC,UAAjC,GAA8C,0BADtD;AAEEG,8BAAgB,EAAE,IAFpB;AAGEC,gCAAkB,EAAE,SAHtB;AAIEC,+BAAiB,EAAE,MAJrB;AAKEC,8BAAgB,EAAE,IALpB;AAMEC,+BAAiB,EAAE,KANrB;AAM4B,sBAAQ;AANpC,aADF,EASEC,IATF,CASQ,UAAAC,MAAM,EAAI;AAChB,kBAAGA,MAAM,CAACC,WAAP,IAAoB,IAAvB,EAA4B;AAC1B,uBAAI,CAACnL,UAAL,CAAgBkjB,UAAhB,CAA2B,OAAI,CAACzW,SAAL,CAAelM,EAA1C,EACCiD,SADD,CACW,UAAA3D,IAAI,EAAI,CAClB,CAFD,EAGE,UAAAuI,GAAG,EAAE;AACH,sBAAIA,GAAG,CAACC,MAAJ,IAAc,GAAlB,EAAuB;AACrB,2BAAI,CAAC7F,KAAL,CAAWc,IAAX,CAAgB,6BAAhB,EAA+C,IAA/C,EAAqD;AACnDkC,8BAAQ,EAAE,IADyC;AAEnDC,sCAAgB,EAAE,KAFiC;AAGnDC,wCAAkB,EAAE;AAH+B,qBAArD;AAMD;AAEJ,iBAbD;AAcD;AAAC,aAzBJ;AAyBO;;;;;;;yBA1dE6Z,wB,EAAwB,2I,EAAA,uH,EAAA,+H,EAAA,wI,EAAA,0J,EAAA,2H,EAAA,gI,EAAA,6I;AAAA,O;;;cAAxBA,wB;AAAwB,6C;AAAA;AAAA;;;;;;;;;;;;;;;AClBpC;;AAAsB;;AAA0B;;AAAgD;;AAAgC;;AAAiC;;AAAK;;AAAQ;;AAC/K;;AACI;;AAAwB;AAAA,qBAAS,IAAAlZ,MAAA,EAAT;AAAiB,aAAjB;;AACpB;;AAAU;;AAAU;;AACtB;;AACA;;AAGA;;AAGH;;AACA;;AAEA;;AACC;;AACE;;AACE;;AACE;;AAAW;;AAAU;;AACrB;;AACI;;AAMA;;AAGJ;;AAEJ;;AACA;;AACE;;AAAW;;AAAiB;;AAC5B;;AACI;;AAMA;;AAGJ;;AAEJ;;AACE;;AAAM;;AACN;;AACA;;AACE;;AACE;;AAMF;;AACF;;AAMF;;AACA;;AACI;;AAGE;;AAIA;AAAA,qBAAU,IAAA8c,SAAA,QAAV;AAA2B,aAA3B;;AACM;;AACN;;AAEF;;AAIF;;AACE;;AACA;;AACE;;AACE;;AAA6B;;AAAM;;AACrC;;AACF;;AACA;;AACE;;AAaF;;AACF;;AACF;;AAEE;;AAEA;;AACE;;AACE;;AASA;;AACE;;AAMF;;AAEA;;AACA;;AACE;;AAES;;AACX;;AACA;;AAKA;;AAKA;;AAKA;;AAMA;;AAIE;AAAA,qBAAS,IAAA9c,MAAA,EAAT;AAAiB,aAAjB;;AAEA;;AACF;;AACF;;AACF;;AACF;;AACD;;AAGA;;;;AAzKqG;;AAAA;;AAAgC;;AAAA;;AAK3H;;AAAA;;AAGA;;AAAA;;AAOH;;AAAA;;AAQQ;;AAAA;;AAGS;;AAAA;;AAYX;;AAAA;;AAGQ;;AAAA;;AAOlB;;AAAA;;AAG2C;;AAAA;;AAepC;;AAAA;;AAIH;;AAAA,mGAAyB,UAAzB,EAAyB,eAAzB;;AAmB2C;;AAAA;;AAqBlC;;AAAA;;AASJ;;AAAA;;AACM;;AAAA;;AASN;;AAAA;;AACM;;AAAA;;AAIL;;AAAA;;AAKA;;AAAA;;AAKA;;AAAA;;AAKA;;AAAA;;AAoBP;;AAAA;;;;;;;;;wEDvJIkZ,wB,EAAwB;gBALpC,uDAKoC;iBAL1B;AACTtd,oBAAQ,EAAE,sBADD;AAETC,uBAAW,EAAE,mCAFJ;AAGTC,qBAAS,EAAE,CAAC,mCAAD;AAHF,W;AAK0B,U;;;;;;;;;;;;;;;;;;;AACZ+P,kBAAQ;kBAA9B,uDAA8B;mBAApB,U;AAAoB;;;;;;;;;;;;;;;;;;;AEpBjC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;AC0Bc;;AAEA;;AACF;;;;;;AAWE;;AAEA;;AACF;;;;;;AAQE;;AAEA;;AACF;;;;;;AASI;;AACE;;AACF;;;;;;AAF6C;;AAC3C;;AAAA;;;;;;AAIJ;;AAEA;;AACF;;;;UD1DCkR,2B;AASX,6CACUrjB,EADV,EAEU0C,MAFV,EAGUD,KAHV,EAIUxC,UAJV,EAKUqC,MALV,EAMUwG,KANV,EAOUnG,EAPV,EAO+B;AAAA;;AANrB,eAAA3C,EAAA,GAAAA,EAAA;AACA,eAAA0C,MAAA,GAAAA,MAAA;AACA,eAAAD,KAAA,GAAAA,KAAA;AACA,eAAAxC,UAAA,GAAAA,UAAA;AACA,eAAAqC,MAAA,GAAAA,MAAA;AACA,eAAAwG,KAAA,GAAAA,KAAA;AACA,eAAAnG,EAAA,GAAAA,EAAA;AAbV,eAAA2gB,UAAA,GAAsB,KAAtB;AACA,eAAA9a,MAAA,GAAkB,KAAlB;AAaK;;;;iBAEL,oBAAQ;AAEN,iBAAK+a,aAAL,CAAmB,EAAnB;AACA,iBAAKC,cAAL;AACA,iBAAKtgB,YAAL,GAAoB,KAAKP,EAAL,CAAQQ,OAAR,CAAgB,YAAhB,CAApB;AACD;;;iBAED,uBAAcvC,IAAd,EAAyB;AACvB,iBAAK6iB,eAAL,GAAuB,KAAKzjB,EAAL,CAAQc,KAAR,CAAc;AACnCN,gBAAE,EAAE,CAACI,IAAI,CAACJ,EAAL,IAAW,IAAZ,CAD+B;AAEnCkjB,wBAAU,EAAE,CAAC9iB,IAAI,CAAC8iB,UAAL,IAAmB,EAApB,EAAwB,0DAAW1iB,QAAnC,CAFuB;AAGnC4e,wBAAU,EAAE,CAAChf,IAAI,CAACgf,UAAL,IAAmB,EAApB,EAAwB,0DAAW5e,QAAnC,CAHuB;AAInC2iB,sBAAQ,EAAE,CAAC/iB,IAAI,CAAC+iB,QAAL,IAAiB,EAAlB,EAAsB,0DAAW3iB,QAAjC,CAJyB;AAKnC4iB,qBAAO,EAAE,CAAChjB,IAAI,CAACgjB,OAAL,IAAgB,EAAjB,EAAqB,0DAAW5iB,QAAhC,CAL0B;AAMnCsH,oBAAM,EAAE;AAN2B,aAAd,CAAvB;AAQD;;;iBACD,0BAAiB;AAAA;;AACf,iBAAKrI,UAAL,CAAgB4jB,wBAAhB,GAA2CpgB,SAA3C,CAAqD,UAAC2C,GAAD,EAAc;AACjE,qBAAI,CAAC0d,WAAL,GAAmB1d,GAAnB;AACD,aAFD,EAEG,UAACiC,GAAD,EAAc,CAEhB,CAJD;AAKD;;;iBACD,kBAAS;AAAA;;AACP,gBAAI9H,OAAO,GAAQ,EAAnB;AACAA,mBAAO,GAAG,KAAKkjB,eAAL,CAAqBniB,KAA/B;AACAf,mBAAO,CAAC2C,YAAR,GAAuB,KAAKA,YAAL,CAAkBqG,QAAzC;AACA,iBAAK7G,MAAL,CAAYa,IAAZ;AACA,iBAAKtD,UAAL,CAAgB8jB,UAAhB,CAA2BxjB,OAA3B,EAAoCkD,SAApC,CAA8C,UAAA2C,GAAG,EAAI;AACnD,qBAAI,CAAC1D,MAAL,CAAYnB,KAAZ;;AACA,qBAAI,CAACkB,KAAL,CAAWc,IAAX,CAAgB,0BAAhB,EAA4C,IAA5C,EACE;AACEkC,wBAAQ,EAAE,IADZ;AAEEC,gCAAgB,EAAE,KAFpB;AAGEC,kCAAkB,EAAE;AAHtB,eADF;;AAMA,qBAAI,CAACrD,MAAL,CAAYwD,QAAZ,CAAqB,iCAArB;AACD,aATD,EASG,UAAAuC,GAAG,EAAI;AACR,qBAAI,CAAC3F,MAAL,CAAYnB,KAAZ;;AACA,qBAAI,CAACkB,KAAL,CAAWc,IAAX,CAAgB,iBAAhB,EAAmC,OAAnC,EACE;AACEkC,wBAAQ,EAAE,IADZ;AAEEC,gCAAgB,EAAE,KAFpB;AAGEC,kCAAkB,EAAE;AAHtB,eADF;;AAMA,qBAAI,CAACrD,MAAL,CAAYwD,QAAZ,CAAqB,iCAArB;AACD,aAlBD;AAmBD;;;iBAED,kBAAS;AACP,iBAAKxD,MAAL,CAAYwD,QAAZ,CAAqB,iCAArB;AACD;;;;;;;yBAvEUud,2B,EAA2B,2H,EAAA,mK,EAAA,wI,EAAA,2I,EAAA,uH,EAAA,+H,EAAA,0J;AAAA,O;;;cAA3BA,2B;AAA2B,kD;AAAA,iB;AAAA,e;AAAA,2gC;AAAA;AAAA;ACZxC;;AAAsB;;AAA0B;;AAAqE;;AAAQ;;AAC7H;;AACI;;AAAwB;AAAA,qBAAS,IAAA/c,MAAA,EAAT;AAAiB,aAAjB;;AACpB;;AAAU;;AAAU;;AACtB;;AACA;;AACE;;AACF;;AACH;;AAGC;;AACA;;AACE;;AAEE;;AACE;;AACE;;AAAW;;AAAa;;AACxB;;AACE;;AAMA;;AAIJ;;AAEA;;AAEA;;AACE;;AAAW;;AAAc;;AACzB;;AACE;;AAGA;;AAIF;;AACF;;AAEA;;AACE;;AAAW;;AAAO;;AAClB;;AACE;;AACA;;AAIF;;AACF;;AAEA;;AACE;;AAAW;;AAAa;;AACxB;;AACE;;AACE;;AAA0B;;AAAS;;AACnC;;AAIF;;AACA;;AAIF;;AACF;;AAKF;;AAEA;;AAGE;;AACE;;AACE;;AACA;AAAA,qBAAS,IAAAtE,MAAA,EAAT;AAAiB,aAAjB;;AAGE;;AACF;;AACF;;AACA;;AACE;;AAAuC;AAAA,qBAAS,IAAAsE,MAAA,EAAT;AAAiB,aAAjB;;AACrC;;AACF;;AACF;;AACF;;AACF;;AACF;;AACF;;AACF;;;;AAvFU;;AAAA;;AAaG;;AAAA;;AAcA;;AAAA;;AAWA;;AAAA;;AAUa;;AAAA;;AACiB;;AAAA;;AAM9B;;AAAA;;AAkBD;;AAAA;;;;;;;;;wED1ED+c,2B,EAA2B;gBALvC,uDAKuC;iBAL7B;AACTnhB,oBAAQ,EAAE,2BADD;AAETC,uBAAW,EAAE,wCAFJ;AAGTC,qBAAS,EAAE,CAAC,wCAAD;AAHF,W;AAK6B,U;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEbxC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACCqD;;AAAsB;;AAAG;;;;;;AAAO;;AAAqB;;AAAI;;;;;;AAK1G;;AACE;;AACF;;;;;;AACA;;AACE;;AACF;;;;;;AAkBU;;AACI;;AACJ;;;;;;AAXN;;AACE;;AAAY;;AAAa;;AACzB;;AAMA;;AACI;;AAGJ;;AACF;;;;;;AALkB;;AAAA,4HAAiD,UAAjD,EAAiD,IAAjD;;AACA;;AAAA;;;;;;AAKlB;;AACE;;AAAW;;AAAa;;AACxB;;AACE;;AAOF;;AACF;;;;;;AANiB;;AAAA,mGAAwB,aAAxB,EAAwB,wCAAxB;;;;;;AAgBX;;AACE;;AACF;;;;;;AAFiE;;AAC/D;;AAAA;;;;;;;;AAVR;;AACE;;AAAW;;AAAW;;AACtB;;AACE;;AAIE;AAAA;;AAAA;;AAAA;AAAA;;AAEA;;AAGF;;AACF;;AACF;;;;;;AATM;;AAAA;;AAI6B;;AAAA,kGAAgB,cAAhB,EAAgB,iBAAhB;;;;;;AAMnC;;AACE;;AAAW;;AAAW;;AACtB;;AACE;;AAOF;;AACF;;;;;;AANiB;;AAAA,mGAAwB,aAAxB,EAAwB,sCAAxB;;;;;;AA0CX;;AAIE;;AACF;;;;;;AAHE;;AAEA;;AAAA;;;;;;AAGJ;;AACE;;AACF;;;;;;AAjBJ;;AACE;;AAAW;;AAAiB;;AAC5B;;AACE;;AAKE;;AAMF;;AACA;;AAGF;;AACF;;;;;;AAdM;;AAAA;;AAIuB;;AAAA,iGAAe,cAAf,EAAe,qBAAf;;AAMb;;AAAA;;;;;;AAKhB;;AACE;;AAAW;;AAAkB;;AAC7B;;AACE;;AAOF;;AACF;;;;;;AANiB;;AAAA,mGAAwB,aAAxB,EAAwB,uCAAxB;;;;;;AAuDX;;AAIE;;AACF;;;;;;AAHE;;AAEA;;AAAA;;;;;;;;AAbR;;AACE;;AAAW;;AAAS;;AACpB;;AACE;;AAGE;AAAA;;AAAA;;AAAA;AAAA;;AAGA;;AAMF;;AACF;;AACF;;;;;;AAZM;;AAAA;;AAKsB;;AAAA,iGAAc,cAAd,EAAc,qBAAd;;;;;;AAQ5B;;AACE;;AAAW;;AAAS;;AACpB;;AACE;;AAOF;;AACF;;;;;;AANiB;;AAAA,oGAAwB,aAAxB,EAAwB,sCAAxB;;;;;;AAiBX;;AAIE;;AACF;;;;;;AAHE;;AAEA;;AAAA;;;;;;;;AAbR;;AACE;;AAAW;;AAAO;;AAClB;;AACE;;AAGE;AAAA;;AAAA;;AAAA;AAAA;;AAGA;;AAMF;;AACF;;AACF;;;;;;AAZM;;AAAA;;AAKoB;;AAAA,8FAAW,cAAX,EAAW,mBAAX;;;;;;AAQ1B;;AACE;;AAAW;;AAAO;;AAClB;;AACE;;AAOF;;AACF;;;;;;AANiB;;AAAA,oGAAwB,aAAxB,EAAwB,oCAAxB;;;;;;AAgBX;;AAIE;;AACF;;;;;;AAHE;;AAEA;;AAAA;;;;;;AAZR;;AACE;;AAAW;;AAAM;;AACjB;;AACE;;AAKE;;AAMF;;AACF;;AACF;;;;;;AAXM;;AAAA;;AAImB;;AAAA,8FAAW,cAAX,EAAW,kBAAX;;;;;;AAQzB;;AACE;;AAAW;;AAAM;;AACjB;;AACE;;AAOF;;AACF;;;;;;AANiB;;AAAA,oGAAwB,aAAxB,EAAwB,mCAAxB;;;;;;AAqBb;;AACE;;AAAO;;AAAoB;;AAC7B;;;;;;AAEA;;AACE;;AAAO;;AAA2B;;AACpC;;;;;;;;AAQA;;AACE;AAAA;;AAAA;;AAAA;AAAA;;AACA;;AACF;;;;;;AAH0D;;;;;;;;AAM1D;;AAAuE;AAAA;;AAAA;;AAAA;AAAA;;AAErE;;AACF;;;;;;AAFE;;;;;;;;AAKF;;AAAwE;AAAA;;AAAA;;AAAA;AAAA;;AACtE;;AACF;;;;;;;;AAGA;;AAAwE;AAAA;;AAAA;;AAAA,wCAAsB,MAAtB;AAA4B,WAA5B;;AACtE;;AACF;;;;;;AAHF;;AACE;;AAES;;AACX;;;;;;AAJoE;;AACzD;;AAAA;;;;;;;;AAKT;;AAAuE;AAAA;;AAAA;;AAAA,wCAAsB,MAAtB;AAA4B,WAA5B;;AACrE;;AACF;;;;;;AAHF;;AACE;;AAES;;AACX;;;;;;AAJkF;;AACvE;;AAAA;;;;;;;;AAKT;;AAAuE;AAAA;;AAAA;;AAAA,wCAAsB,OAAtB;AAA6B,WAA7B;;AACrE;;AACF;;;;;;AAHF;;AACE;;AAES;;AACX;;;;;;AAJiF;;AACtE;;AAAA;;;;;;;;AAKT;;AAAuE;AAAA;;AAAA;;AAAA;AAAA;;AACrE;;AACF;;;;;;AAHF;;AACE;;AAEU;;AACZ;;;;;;AAJ4C;;AACjC;;AAAA;;;;;;AAsBnB;;;;UDtUW4hB,sB;AAuBX,wCACUlb,KADV,EAEU9I,EAFV,EAGUC,UAHV,EAIUyO,SAJV,EAKU/L,EALV,EAMUL,MANV,EAOUsG,GAPV,EAQUnG,KARV,EASUoG,WATV,EASmC;AAAA;;AARzB,eAAAC,KAAA,GAAAA,KAAA;AACA,eAAA9I,EAAA,GAAAA,EAAA;AACA,eAAAC,UAAA,GAAAA,UAAA;AACA,eAAAyO,SAAA,GAAAA,SAAA;AACA,eAAA/L,EAAA,GAAAA,EAAA;AACA,eAAAL,MAAA,GAAAA,MAAA;AACA,eAAAsG,GAAA,GAAAA,GAAA;AACA,eAAAnG,KAAA,GAAAA,KAAA;AACA,eAAAoG,WAAA,GAAAA,WAAA;AAxBV,eAAAob,KAAA,GAAgB,EAAhB;AACA,eAAAvF,UAAA,GAAuB,EAAvB;AACA,eAAApO,SAAA,GAAsB,EAAtB;AACA,eAAAC,MAAA,GAAmB,EAAnB;AACA,eAAAtE,WAAA,GAAwB,KAAxB;AACA,eAAAuE,MAAA,GAAmB,EAAnB;AACA,eAAAhI,MAAA,GAAkB,KAAlB;AACA,eAAAiI,UAAA,GAAsB,IAAtB;AAEA,eAAAE,IAAA,GAAO,KAAP;AACA,eAAAtQ,QAAA,GAAqB,EAArB;AACA,eAAA2G,UAAA,GAAwB,EAAxB;AACA,eAAA+B,WAAA,GAAuB,IAAvB;AAaK;;;;iBAEL,oBAAW;AAAA;;AACT,iBAAKmD,WAAL,GAAmB,KAAKvJ,EAAL,CAAQQ,OAAR,CAAgB,YAAhB,CAAnB;AACA,iBAAK2F,KAAL,CAAWE,aAAX,CAAyBvF,SAAzB,CAAmC,UAACwF,MAAD,EAAiB;AAElD,kBAAGA,MAAM,CAACC,GAAP,CAAW,IAAX,CAAH,EAAoB;AAClB,uBAAI,CAACV,MAAL,GAAc,IAAd;AACA,uBAAI,CAAChI,EAAL,GAAUyI,MAAM,CAACC,GAAP,CAAW,IAAX,CAAV;;AACA,uBAAI,CAACjJ,UAAL,CAAgBikB,aAAhB,CAA8Bjb,MAAM,CAACC,GAAP,CAAW,IAAX,CAA9B,EAAgDzF,SAAhD,CAA0D,UAACyE,IAAD,EAAS;AAEhE,yBAAI,CAACzH,aAAL,CAAmByH,IAAnB;;AACA,yBAAI,CAACwE,SAAL,GAAiBxE,IAAjB;AACA,yBAAI,CAAC+D,WAAL,GAAmB,IAAnB;;AACA,yBAAI,CAACpD,WAAL,CAAiBQ,eAAjB,CAAiC,OAAI,CAACqD,SAAtC;AAGF,iBARD;AASD,eAZD,MAaI;AACF,uBAAI,CAAC3D,WAAL,GAAiB,KAAjB;;AACA,uBAAI,CAACtI,aAAL,CAAmB,EAAnB;AACD;AACF,aAnBD;AAqBA,iBAAKoM,aAAL;AACA,iBAAKsX,kBAAL;AACA,iBAAKnO,WAAL;AACA,iBAAK6I,iBAAL;AACA,iBAAK/N,cAAL;AACA,iBAAK5N,YAAL,GAAoB,KAAKP,EAAL,CAAQQ,OAAR,CAAgB,YAAhB,EAA8BoG,QAAlD;AAGA,iBAAK9I,aAAL,CAAmB,EAAnB;AAED;;;iBACD,uBAAcG,IAAd,EAAoB;AAElB,iBAAKme,UAAL,GAAkB,KAAK/e,EAAL,CAAQc,KAAR,CAAc;AAC9BT,sBAAQ,EAAE,CAACO,IAAI,CAACP,QAAL,IAAiB,EAAlB,EAAsB,0DAAWW,QAAjC,CADoB;AAE9BgG,wBAAU,EAAE,CAACpG,IAAI,CAACoG,UAAL,IAAmB,EAApB,EAAwB,0DAAWhG,QAAnC,CAFkB;AAG9BZ,wBAAU,EAAE,CAACQ,IAAI,CAACR,UAAL,IAAmB,EAApB,EAAwB,0DAAWY,QAAnC,CAHkB;AAI9BojB,uBAAS,EAAE,CAACxjB,IAAI,CAACwjB,SAAL,IAAkB,EAAnB,EAAuB,0DAAWpjB,QAAlC,CAJmB;AAK9BqjB,2BAAa,EAAE,CAACzjB,IAAI,CAACyjB,aAAL,IAAsB,EAAvB,EAA2B,0DAAWrjB,QAAtC,CALe;AAM9BsjB,wBAAU,EAAE,CAAC1jB,IAAI,CAAC0jB,UAAL,IAAmB,EAApB,EAAwB,0DAAWtjB,QAAnC,CANkB;AAO9BujB,sBAAQ,EAAE,CAAC3jB,IAAI,CAAC2jB,QAAL,IAAiB,EAAlB,EAAsB,0DAAWvjB,QAAjC,CAPoB;AAQ9BwjB,sBAAQ,EAAE,CAAC5jB,IAAI,CAAC4jB,QAAL,IAAiB,EAAlB,CARoB;AAS9BnT,qBAAO,EAAE,CAACzQ,IAAI,CAACyQ,OAAL,IAAgB,EAAjB,EAAqB,0DAAWrQ,QAAhC,CATqB;AAU9BsN,mBAAK,EAAE,CAAC1N,IAAI,CAAC0N,KAAL,IAAc,EAAf,EAAmB,0DAAWtN,QAA9B,CAVuB;AAW9BgF,kBAAI,EAAE,CAACpF,IAAI,CAACoF,IAAL,IAAa,EAAd,EAAkB,0DAAWhF,QAA7B,CAXwB;AAY9BsQ,qBAAO,EAAE,CAAC1Q,IAAI,CAAC0Q,OAAL,IAAgB,EAAjB,EAAqB,0DAAWtQ,QAAhC,CAZqB;AAa9BR,gBAAE,EAAE,CAACI,IAAI,CAACJ,EAAL,IAAW,EAAZ;AAb0B,aAAd,CAAlB;;AAgBA,gBAAII,IAAI,CAACyQ,OAAT,EAAkB;AAChB,mBAAKE,YAAL,CAAkB3Q,IAAI,CAACyQ,OAAvB;AACA,mBAAKG,WAAL,CAAiB5Q,IAAI,CAAC0N,KAAtB;AAED;;AACD,gBAAI1N,IAAI,CAACoG,UAAT,EAAqB;AACnB,mBAAKyd,YAAL,CAAkB7jB,IAAI,CAACoG,UAAvB;AACD;AACF;;;iBAID,mBAAUxF,KAAV,EAAsB;AACpB,gBAAMC,OAAO,GAAG,OAAhB;AACA,gBAAIC,SAAS,GAAGC,MAAM,CAACC,YAAP,CAAoBJ,KAAK,CAACK,QAA1B,CAAhB;;AACA,gBAAI,CAACJ,OAAO,CAACK,IAAR,CAAaJ,SAAb,CAAL,EAA8B;AAC5BF,mBAAK,CAACO,cAAN;AAED;AACF;;;iBAKD,uBAAc;AAAA;;AACZ,iBAAK9B,UAAL,CAAgBuJ,WAAhB,GAA8B/F,SAA9B,CAAwC,UAAAihB,KAAK,EAAI;AAC/C,qBAAI,CAACT,KAAL,GAAaS,KAAb;AACD,aAFD,EAEG,UAACrc,GAAD,EAAc,CAEhB,CAJD;AAKD;;;iBAED,oBAAW7G,KAAX,EAAgB;AACd,gBAAMK,QAAQ,GAAIL,KAAK,CAACmjB,KAAP,GAAgBnjB,KAAK,CAACmjB,KAAtB,GAA8BnjB,KAAK,CAAC6L,OAArD;;AACA,gBAAIxL,QAAQ,GAAG,EAAX,KAAkBA,QAAQ,GAAG,EAAX,IAAiBA,QAAQ,GAAG,EAA9C,CAAJ,EAAuD;AACrD,qBAAO,KAAP;AACD;;AACD,mBAAO,IAAP;AACD;;;iBACD,8BAAqBL,KAArB,EAA4B;AAC1B,gBAAI4L,GAAG,GAAGzL,MAAM,CAACC,YAAP,CAAoBJ,KAAK,CAAC6L,OAA1B,CAAV;;AACA,gBAAI,cAAcvL,IAAd,CAAmBsL,GAAnB,CAAJ,EAA6B;AAC3B,qBAAO,IAAP;AACD,aAFD,MAEO;AACL5L,mBAAK,CAACO,cAAN;AACA,qBAAO,KAAP;AACD;AACF;;;iBAEF,6BAAiB;AAAA;;AACd;AACA;AACA;AAEA;AACA,iBAAK9B,UAAL,CAAgB+N,kBAAhB,GAAqCvK,SAArC,CAA+C,UAAA3D,IAAI,EAAE;AACnDiF,qBAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoClF,IAApC;;AACA,mBAAI,IAAI4D,CAAC,GAAC,CAAV,EAAaA,CAAC,GAAC5D,IAAI,CAAC6D,MAApB,EAA2BD,CAAC,EAA5B,EAA+B;AAC7B,uBAAI,CAACgb,UAAL,CAAgB/S,IAAhB,CAAqB7L,IAAI,CAAC4D,CAAD,CAAzB;AACD;;AACDqB,qBAAO,CAACC,GAAR,CAAY,OAAI,CAAC0Z,UAAjB;AACD,aAND;AAOD;;;iBACD,yBAAgB;AAAA;;AACd,iBAAKze,UAAL,CAAgB4M,aAAhB,GAAgCpJ,SAAhC,CAA0C,UAACyE,IAAD,EAAU;AAClDnD,qBAAO,CAACC,GAAR,CAAYkD,IAAZ;;AACA,mBAAI,IAAIxE,CAAC,GAAC,CAAV,EAAaA,CAAC,GAACwE,IAAI,CAACvE,MAApB,EAA2BD,CAAC,EAA5B,EAA+B;AAC7B,oBAAGwE,IAAI,CAACxE,CAAD,CAAJ,CAAQE,UAAR,KAAqB,GAAxB,EAA4B;AAC1B,yBAAI,CAACoD,UAAL,CAAgB2E,IAAhB,CAAqBzD,IAAI,CAACxE,CAAD,CAAzB;AACD;AACF;;AACDqB,qBAAO,CAACC,GAAR,CAAY,OAAI,CAACgC,UAAjB,EAPkD,CAQlD;AACD,aATD;AAUD;;;iBAED,sBAAaA,UAAb,EAAyB;AAAA;;AACvB,iBAAK/G,UAAL,CAAgB2kB,uBAAhB,CAAwC5d,UAAxC,EAAoDvD,SAApD,CAA8D,UAACyE,IAAD,EAAU;AACtE,sBAAI,CAAC7H,QAAL,GAAgB6H,IAAhB;AACAnD,qBAAO,CAACC,GAAR,CAAY,QAAI,CAAC3E,QAAjB;AACD,aAHD;AAID;;;iBACD,8BAAkB;AAAA;;AAChB,iBAAKJ,UAAL,CAAgB4kB,iBAAhB,GAAoCphB,SAApC,CAA8C,UAAAyE,IAAI,EAAI;AACpD,sBAAI,CAAC4c,WAAL,GAAmB5c,IAAnB;AACD,aAFD;AAGC;;;iBACL,iCAAwB7H,QAAxB,EAAgC;AAE9B,iBAAK,IAAI8D,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAG,KAAK2gB,WAAL,CAAiBnhB,MAA7C,EAAqDQ,KAAK,EAA1D,EAA8D;AAC5D,kBAAG,KAAK2gB,WAAL,CAAiB3gB,KAAjB,EAAwB9D,QAAxB,IAAoCA,QAAvC,EAAgD;AAC9C,qBAAK0e,UAAL,CAAgB7V,GAAhB,CAAoB,YAApB,EAAkC8K,QAAlC,CAA2C,KAAK8Q,WAAL,CAAiB3gB,KAAjB,EAAwB6C,UAAnE;AACA;AACD;AAEF;AACF,W,CACC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBAGA,0BAAiB;AAAA;;AACf,iBAAK/G,UAAL,CAAgBwR,eAAhB,GAAkChO,SAAlC,CAA4C,UAAC3D,IAAD,EAAe;AACzDiF,qBAAO,CAACC,GAAR,CAAY,MAAZ,EAAmBlF,IAAnB;;AACA,mBAAI,IAAI4D,CAAC,GAAC,CAAV,EAAaA,CAAC,GAAC5D,IAAI,CAAC6D,MAApB,EAA2BD,CAAC,EAA5B,EAA+B;AAC7B,oBAAG5D,IAAI,CAAC4D,CAAD,CAAJ,CAAQE,UAAR,KAAqB,GAAxB,EAA4B;AAC1BmB,yBAAO,CAACC,GAAR,CAAYlF,IAAI,CAAC4D,CAAD,CAAhB;;AACA,0BAAI,CAAC4M,SAAL,CAAe3E,IAAf,CAAoB7L,IAAI,CAAC4D,CAAD,CAAJ,CAAQgO,WAA5B;AAED;AACF;;AAAA3M,qBAAO,CAACC,GAAR,CAAY,QAAI,CAACsL,SAAjB;AACF,aATD;AAUD;;;iBAED,sBAAaoB,WAAb,EAAwB;AAAA;;AACtB,iBAAKzR,UAAL,CAAgBwR,eAAhB,GAAkChO,SAAlC,CAA4C,UAAC3D,IAAD,EAAe;AACzD,mBAAI,IAAI4D,CAAC,GAAC,CAAV,EAAaA,CAAC,GAAC5D,IAAI,CAAC6D,MAApB,EAA2BD,CAAC,EAA5B,EAA+B;AAC7B,oBAAG5D,IAAI,CAAC4D,CAAD,CAAJ,CAAQgO,WAAR,KAAwBA,WAA3B,EAAuC;AACrC,0BAAI,CAACzR,UAAL,CAAgB0R,iBAAhB,CAAkC7R,IAAI,CAAC4D,CAAD,CAAJ,CAAQlD,EAA1C,EAA8CiD,SAA9C,CAAwD,UAACyE,IAAD,EAAe;AACvE,4BAAI,CAACqI,MAAL,GAAcrI,IAAd;AACC,mBAFD;;AAGA;AACD;AACF;AACF,aATD;AAUC;;;iBAEH,qBAAYoG,KAAZ,EAAwB;AAAA;;AACtB,gBAAI0C,UAAU,GAAG,MAAjB;AAEA,iBAAK/Q,UAAL,CAAgB4R,kBAAhB,CAAmCb,UAAnC,EAA+C1C,KAA/C,EAAsD7K,SAAtD,CAAgE,UAAC3D,IAAD,EAAU;AACxE,sBAAI,CAAC0Q,MAAL,GAAc1Q,IAAd;AACD,aAFD;AAGD;;;iBAED,kBAAS;AAAA;;AACP;AACA;AACA;AAEA,gBAAIoD,YAAY,GAAG,KAAKA,YAAxB,CALO,CAMP;;AACA,iBAAKjD,UAAL,CAAgB8kB,mBAAhB,CAAoC,KAAKhG,UAAL,CAAgBzd,KAApD,EAA0D4B,YAA1D,EAAwEO,SAAxE,CAAkF,UAAA3D,IAAI,EAAI;AAExF,kBAAGA,IAAI,IAAI,IAAX,EAAgB;AACd,wBAAI,CAAC2C,KAAL,CAAWc,IAAX,CAAgB,aAAhB,EAA+B,IAA/B,EAAqC;AACnCkC,0BAAQ,EAAE,IADyB;AAEnCC,kCAAgB,EAAE,KAFiB;AAGnCC,oCAAkB,EAAE;AAHe,iBAArC;;AAKA,wBAAI,CAACiD,GAAL,CAAS4B,YAAT;AACD;AACF,aAVD;AAYA,iBAAKlI,MAAL,CAAYwD,QAAZ,CAAqB,4BAArB;AACD;;;iBACD,sBAAa4E,SAAb,EAAsB;AAAA;;AACpB,+DAAKC,IAAL,CACE;AACE;AACAC,kBAAI,EAAE,uBAAsBF,SAAtB,GAAiC,UAAjC,GAA8C,0BAFtD;AAGEG,8BAAgB,EAAE,IAHpB;AAIEC,gCAAkB,EAAE,SAJtB;AAKEC,+BAAiB,EAAE,MALrB;AAME;AACAC,8BAAgB,EAAE,IAPpB;AAQEC,+BAAiB,EAAE,KARrB;AAQ4B,sBAAQ;AARpC,aADF,EAWEC,IAXF,CAWQ,UAAAC,MAAM,EAAI;AAChB,kBAAGA,MAAM,CAACC,WAAP,IAAoB,IAAvB,EAA4B;AAC1B,wBAAI,CAACnL,UAAL,CAAgB+kB,YAAhB,CAA6B,QAAI,CAACtY,SAAL,CAAelM,EAA5C,EAA+C,QAAI,CAAC0L,WAAL,CAAiB3C,QAAhE,EACC9F,SADD,CACW,UAAA3D,IAAI,EAAI;AACjB,0BAAI,CAACwC,MAAL,CAAYwD,QAAZ,CAAqB,4BAArB;AACD,iBAHD,EAIA,UAAAuC,GAAG,EAAE;AACH,sBAAIA,GAAG,CAACC,MAAJ,IAAc,GAAlB,EAAuB;AACrB,4BAAI,CAAC7F,KAAL,CAAWc,IAAX,CAAgB,6BAAhB,EAA+C,IAA/C,EAAqD;AACnDkC,8BAAQ,EAAE,IADyC;AAEnDC,sCAAgB,EAAE,KAFiC;AAGnDC,wCAAkB,EAAE;AAH+B,qBAArD;AAKD;;AACD,0BAAI,CAACrD,MAAL,CAAYwD,QAAZ,CAAqB,4BAArB;AAEH,iBAdC;AAeD;AAAC,aA5BJ;AAgCD;;;iBAEF,sBAAU;AACV,iBAAKiD,WAAL,GAAiB,KAAjB;AACC;;;iBAEA,sBAAa2B,SAAb,EAAwB;AAAA;;AACtB,+DAAKC,IAAL,CACE;AACE;AACAC,kBAAI,EAAE,uBAAsBF,SAAtB,GAAiC,UAAjC,GAA8C,0BAFtD;AAGEG,8BAAgB,EAAE,IAHpB;AAIEC,gCAAkB,EAAE,SAJtB;AAKEC,+BAAiB,EAAE,MALrB;AAME;AACAC,8BAAgB,EAAE,IAPpB;AAQEC,+BAAiB,EAAE,KARrB;AAQ4B,sBAAQ;AARpC,aADF,EAWEC,IAXF,CAWQ,UAAAC,MAAM,EAAI;AAChB,kBAAGA,MAAM,CAACC,WAAP,IAAoB,IAAvB,EAA4B;AAC1B,oBAAI7K,OAAO,GAAQ,EAAnB;AACAA,uBAAO,CAACC,EAAR,GAAa,QAAI,CAACA,EAAlB;AACAD,uBAAO,CAACmK,SAAR,GAAoBA,SAApB;AACAnK,uBAAO,CAAC2C,YAAR,GAAuB,QAAI,CAACA,YAA5B;;AACA,wBAAI,CAACjD,UAAL,CAAgBglB,qBAAhB,CAAsC1kB,OAAtC,EAA+CkD,SAA/C,CAAyD,UAAC3D,IAAD,EAAU;AAEjE,0BAAI,CAAC4M,SAAL,GAAiB5M,IAAjB;;AACA,0BAAI,CAAC+I,WAAL,CAAiBQ,eAAjB,CAAiC,QAAI,CAACqD,SAAtC;;AACA,0BAAI,CAACT,WAAL,GAAmB,IAAnB;;AACA,0BAAI,CAACpD,WAAL,CAAiBS,cAAjB;;AACA,sBAAIpD,OAAO,GAAG,EAAd;;AACA,0BAAQwE,SAAR;AACE,yBAAK,MAAL;AACExE,6BAAO,GAAG,QAAV;AACA;;AACF,yBAAK,OAAL;AACEA,6BAAO,GAAG,QAAV;AACA;;AACF,yBAAK,MAAL;AACEA,6BAAO,GAAG,YAAV;AACA;;AACF;AACE;AAXJ;;AAaA,0BAAI,CAACzD,KAAL,CAAWc,IAAX,kBAA0B2C,OAA1B,oBAAkD,IAAlD,EAAwD;AACtDT,4BAAQ,EAAE,IAD4C;AAEtDC,oCAAgB,EAAE,KAFoC;AAGtDC,sCAAkB,EAAE;AAHkC,mBAAxD;AAKD,iBAzBD;AA0BD;AAAC,aA3CJ;AA6CD;;;iBAED,kBAAS;AACP;AACA,iBAAKrD,MAAL,CAAYwD,QAAZ,CAAqB,4BAArB;AACD;;;iBACD,oBAAW3B,KAAX,EAAiB+gB,IAAjB,EAAqB;AACnB,mBAAOA,IAAI,CAAC7kB,QAAZ;AACD;;;iBACD,wBAAe8D,KAAf,EAAqBzD,QAArB,EAA6B;AAC3B,mBAAOA,QAAQ,CAACkd,YAAhB;AACD;;;iBACD,uBAAczZ,KAAd,EAAoBkN,OAApB,EAA2B;AACzB,mBAAOA,OAAP;AACD;;;iBACD,qBAAYlN,KAAZ,EAAkBmK,KAAlB,EAAuB;AACrB,mBAAOA,KAAK,CAAC6W,MAAb;AACD;;;iBACD,oBAAWhhB,KAAX,EAAiB6B,IAAjB,EAAqB;AACnB,mBAAOA,IAAI,CAACmf,MAAZ;AACD;;;;;;;yBApWUnB,sB,EAAsB,+H,EAAA,2H,EAAA,2I,EAAA,yH,EAAA,0J,EAAA,uH,EAAA,gI,EAAA,wI,EAAA,6I;AAAA,O;;;cAAtBA,sB;AAAsB,4C;AAAA,iB;AAAA,gB;AAAA,25E;AAAA;AAAA;AClBnC;;AAAuF;;AACrF;;AAAmD;;AAAgC;;AAAiC;;AAAkB;;AAAQ;;AAChJ;;AACE;;AAAwB;AAAA,qBAAS,IAAA1d,MAAA,EAAT;AAAiB,aAAjB;;AACpB;;AAAU;;AAAU;;AACtB;;AACA;;AAGA;;AAGH;;AAGC;;AACA;;AACE;;AAA+B;AAAA,qBAAY,IAAAtE,MAAA,EAAZ;AAAoB,aAApB;;AAE7B;;AACE;;AAcA;;AAYA;;AAeA;;AAaA;;AACE;;AAAW;;AAAa;;AACxB;;AACE;;AAGE;AAAA,qBAAW,IAAAkQ,oBAAA,QAAX;AAAuC,aAAvC;;AAHF;;AAOF;;AACF;;AAEA;;AACE;;AAAW;;AAAa;;AACxB;;AACE;;AAGE;AAAA,qBAAW,IAAAA,oBAAA,QAAX;AAAuC,aAAvC;;AAHF;;AAOF;;AACF;;AAEA;;AAoBA;;AAaA;;AACE;;AAAW;;AAAgB;;AAC3B;;AACE;;AAGE;AAAA,qBAAW,IAAAA,oBAAA,QAAX;AAAuC,aAAvC;;AAHF;;AAMF;;AACF;;AACF;;AACA;;AAAI;;AAAO;;AACX;;AACE;;AACE;;AAAW;;AAAW;;AACtB;;AACE;;AAMF;;AACF;;AAEA;;AACE;;AAAW;;AAAW;;AACtB;;AACE;;AAMF;;AACF;;AAEA;;AAkBA;;AAaA;;AAkBA;;AAaA;;AAiBA;;AAaA;;AACE;;AAAW;;AAAS;;AACpB;;AACE;;AAMA;AAAA,qBAAY,IAAAD,SAAA,QAAZ;AAA6B,aAA7B;;AANA;;AAUA;;AAIA;;AAGF;;AACF;;AAIA;;AACE;;AACE;;AAIF;;AACA;;AACE;;AAIF;;AACA;;AACE;;AAES;;AACX;;AACA;;AAKA;;AAKA;;AAKA;;AAMA;;AAIE;AAAA,qBAAS,IAAA3L,MAAA,EAAT;AAAiB,aAAjB;;AAEA;;AACF;;AACF;;AACF;;AACF;;AACF;;AACF;;AAIA;;AACE;;AACF;;;;AAxV4D;;AAAA;;AAAgC;;AAAA;;AAKjF;;AAAA;;AAGA;;AAAA;;AAQD;;AAAA;;AAGiC;;AAAA;;AAcA;;AAAA;;AAYA;;AAAA;;AAeA;;AAAA;;AAkBX;;AAAA,kGAAwB,aAAxB,EAAwB,qCAAxB;;AAaA;;AAAA,kGAAwB,aAAxB,EAAwB,qCAAxB;;AAQW;;AAAA;;AAoBA;;AAAA;;AAkBR;;AAAA,kGAAwB,aAAxB,EAAwB,wCAAxB;;AAcL;;AAAA,kGAAwB,aAAxB,EAAwB,mCAAxB;;AAYA;;AAAA,kGAAwB,aAAxB,EAAwB,mCAAxB;;AAOa;;AAAA;;AAkBA;;AAAA;;AAaA;;AAAA;;AAkBA;;AAAA;;AAaC;;AAAA;;AAiBD;;AAAA;;AAoBhB;;AAAA,kGAAwB,aAAxB,EAAwB,kCAAxB;;AAMH;;AAAA;;AAIA;;AAAA;;AAUH;;AAAA;;AAKN;;AAAA;;AACM;;AAAA;;AAKN;;AAAA;;AACM;;AAAA;;AAIL;;AAAA;;AAKA;;AAAA;;AAKA;;AAAA;;AAKA;;AAAA;;AAuBE;;AAAA;;;;;;;;;wEDtUL0d,sB,EAAsB;gBAJlC,uDAIkC;iBAJxB;AACT9hB,oBAAQ,EAAE,qBADD;AAETC,uBAAW,EAAE;AAFJ,W;AAIwB,U;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AElBnC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;AC0DE;;AAEI;;AACA;;AAAU;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACR;;AAKE;;AACE;;AACE;;AAAkB;;AAAgB;;AAClC;;AAA8B;;AAAe;;AAC/C;;AACF;;AACA;;AACE;;AAOF;;AACF;;AACF;;AACF;;AACF;;;;;;AAhB8B;;AAAA;;AACY;;AAAA;;AAQ9B;;AAAA;;;;;;;;ADtDd,UAAMiM,IAAI,GAAW,CACnB;AACExG,aAAK,EAAE,iBADT;AAEEyG,gBAAQ,EAAE,iBAFZ;AAGEzD,YAAI,EACF,wGAJJ;AAKI0D,aAAK,EAAE,gBALX;AAMEC,WAAG,EAAE,gCANP;AAOE6W,iBAAS,EAAE;AAPb,OADmB,EAUnB;AACExd,aAAK,EAAE,qBADT;AAEEyG,gBAAQ,EAAE,iBAFZ;AAGEzD,YAAI,EACF,wGAJJ;AAKE;AACA2D,WAAG,EAAE,gCANP;AAOE6W,iBAAS,EAAE;AAPb,OAVmB,EAmBnB;AACExd,aAAK,EAAE,mBADT;AAEEyG,gBAAQ,EAAE,sBAFZ;AAGEzD,YAAI,EAAE,wCAHR;AAIE0D,aAAK,EAAE,aAJT;AAKEC,WAAG,EAAE,gCALP;AAME6W,iBAAS,EAAE;AANb,OAnBmB,EA2BnB;AACExd,aAAK,EAAE,kBADT;AAEEyG,gBAAQ,EAAE,iBAFZ;AAGEzD,YAAI,EAAE,gEAHR;AAIE0D,aAAK,EAAC,iBAJR;AAKEC,WAAG,EAAE,8BALP;AAME6W,iBAAS,EAAE;AANb,OA3BmB,EAmCnB;AACExd,aAAK,EAAE,kBADT;AAEEyG,gBAAQ,EAAE,iBAFZ;AAGEzD,YAAI,EAAE,oDAHR;AAIE0D,aAAK,EAAE,iBAJT;AAKEC,WAAG,EAAE,0BALP;AAME6W,iBAAS,EAAE;AANb,OAnCmB,EA2CnB;AACExd,aAAK,EAAE,+BADT;AAEEyG,gBAAQ,EAAE,iBAFZ;AAGEzD,YAAI,EAAE,6DAHR;AAIE0D,aAAK,EAAE,cAJT;AAKEC,WAAG,EAAE,6BALP;AAME6W,iBAAS,EAAE;AANb,OA3CmB,EAmDnB;AACExd,aAAK,EAAE,kBADT;AAEEyG,gBAAQ,EAAE,iBAFZ;AAGEzD,YAAI,EAAE,6DAHR;AAIE0D,aAAK,EAAE,iBAJT;AAKEC,WAAG,EAAE,6BALP;AAME6W,iBAAS,EAAE;AANb,OAnDmB,EA2DnB;AACExd,aAAK,EAAE,oBADT;AAEEyG,gBAAQ,EAAE,iBAFZ;AAGEzD,YAAI,EACF,yGAJJ;AAKE0D,aAAK,EAAE,aALT;AAMEC,WAAG,EAAE,gCANP;AAOE6W,iBAAS,EAAE;AAPb,OA3DmB,EAoEnB;AACExd,aAAK,EAAE,kBADT;AAEEyG,gBAAQ,EAAE,iBAFZ;AAGEzD,YAAI,EAAE,gEAHR;AAIE0D,aAAK,EAAE,WAJT;AAKEC,WAAG,EAAE,8BALP;AAME6W,iBAAS,EAAE;AANb,OApEmB,EA4EnB;AACExd,aAAK,EAAE,oBADT;AAEEyG,gBAAQ,EAAE,iBAFZ;AAGEzD,YAAI,EAAE,oDAHR;AAIE0D,aAAK,EAAE,QAJT;AAKEC,WAAG,EAAE,0BALP;AAME6W,iBAAS,EAAE;AANb,OA5EmB,EAoFnB;AACExd,aAAK,EAAE,sBADT;AAEEyG,gBAAQ,EAAE,iBAFZ;AAGEzD,YAAI,EAAE,+DAHR;AAIE0D,aAAK,EAAE,eAJT;AAKEC,WAAG,EAAE,6BALP;AAME6W,iBAAS,EAAE;AANb,OApFmB,EA4FnB;AACExd,aAAK,EAAE,2BADT;AAEEyG,gBAAQ,EAAE,iBAFZ;AAGEzD,YAAI,EAAE,+DAHR;AAIE0D,aAAK,EAAE,yBAJT;AAKEC,WAAG,EAAE,gCALP;AAME6W,iBAAS,EAAE;AANb,OA5FmB,EAoGnB;AACExd,aAAK,EAAE,gCADT;AAEEyG,gBAAQ,EAAE,iBAFZ;AAGEzD,YAAI,EAAE,+DAHR;AAIE0D,aAAK,EAAE,6BAJT;AAKEC,WAAG,EAAE,gCALP;AAME6W,iBAAS,EAAE;AANb,OApGmB,EA4GnB;AACA;AACA;AACA;AACA;AACA;AAEA;AACExd,aAAK,EAAE,qBADT;AAEEyG,gBAAQ,EAAE,iBAFZ;AAGEzD,YAAI,EACF,0GAJJ;AAKE0D,aAAK,EAAE,SALT;AAMEC,WAAG,EAAE,8BANP;AAOE6W,iBAAS,EAAE;AAPb,OAnHmB,EA4HnB;AACExd,aAAK,EAAE,qBADT;AAEEyG,gBAAQ,EAAE,iBAFZ;AAGEzD,YAAI,EAAE,oDAHR;AAIE0D,aAAK,EAAE,SAJT;AAKEC,WAAG,EAAE,0BALP;AAME6W,iBAAS,EAAE;AANb,OA5HmB,EAoInB;AACExd,aAAK,EAAE,sBADT;AAEEyG,gBAAQ,EAAE,iBAFZ;AAGEzD,YAAI,EAAE,oDAHR;AAIE2D,WAAG,EAAE,0BAJP;AAKE6W,iBAAS,EAAE;AALb,OApImB,EA2InB;AACExd,aAAK,EAAE,sBADT;AAEEyG,gBAAQ,EAAE,iBAFZ;AAGEzD,YAAI,EAAE,+DAHR;AAIE2D,WAAG,EAAE,6BAJP;AAKE6W,iBAAS,EAAE;AALb,OA3ImB,EAkJnB;AACExd,aAAK,EAAE,qBADT;AAEEyG,gBAAQ,EAAE,iBAFZ;AAGEzD,YAAI,EACF,yGAJJ;AAKE2D,WAAG,EAAE,gCALP;AAME6W,iBAAS,EAAE;AANb,OAlJmB,EA0JnB;AACExd,aAAK,EAAE,oBADT;AAEEyG,gBAAQ,EAAE,iBAFZ;AAGEzD,YAAI,EAAE,gEAHR;AAIE0D,aAAK,EAAE,iBAJT;AAKEC,WAAG,EAAE,8BALP;AAME6W,iBAAS,EAAE;AANb,OA1JmB,EAkKnB;AACExd,aAAK,EAAE,wBADT;AAEEyG,gBAAQ,EAAE,iBAFZ;AAGEzD,YAAI,EAAE,oDAHR;AAIE0D,aAAK,EAAE,mBAJT;AAKEC,WAAG,EAAE,0BALP;AAME6W,iBAAS,EAAE;AANb,OAlKmB,EA0KnB;AACExd,aAAK,EAAE,uCADT;AAEEyG,gBAAQ,EAAE,iBAFZ;AAGEzD,YAAI,EAAE,+DAHR;AAIE0D,aAAK,EAAE,mBAJT;AAKEC,WAAG,EAAE,6BALP;AAME6W,iBAAS,EAAE;AANb,OA1KmB,EAkLnB;AACExd,aAAK,EAAE,uCADT;AAEEyG,gBAAQ,EAAE,iBAFZ;AAGEzD,YAAI,EACF,yGAJJ;AAKE0D,aAAK,EAAE,iBALT;AAMEC,WAAG,EAAE,gCANP;AAOE6W,iBAAS,EAAE;AAPb,OAlLmB,EA2LnB;AACExd,aAAK,EAAE,0BADT;AAEEyG,gBAAQ,EAAE,iBAFZ;AAGEzD,YAAI,EAAE,oDAHR;AAIE0D,aAAK,EAAE,oBAJT;AAKEC,WAAG,EAAE,gCALP;AAME6W,iBAAS,EAAE;AANb,OA3LmB,EAmMnB;AACExd,aAAK,EAAE,yCADT;AAEEyG,gBAAQ,EAAE,qCAFZ;AAGEzD,YAAI,EACF,yGAJJ;AAKE0D,aAAK,EAAE,iBALT;AAMEC,WAAG,EAAE,gCANP;AAOE6W,iBAAS,EAAE;AAPb,OAnMmB,EA4MnB;AACExd,aAAK,EAAE,+BADT;AAEEyG,gBAAQ,EAAE,2BAFZ;AAGEzD,YAAI,EACF,yGAJJ;AAKE0D,aAAK,EAAE,iBALT;AAMEC,WAAG,EAAE,gCANP;AAOE6W,iBAAS,EAAE;AAPb,OA5MmB,EAqNnB;AACExd,aAAK,EAAE,sDADT;AAEEyG,gBAAQ,EAAE,kDAFZ;AAGEzD,YAAI,EACF,mGAJJ;AAKE0D,aAAK,EAAE,sBALT;AAMEC,WAAG,EAAE,8BANP;AAOE6W,iBAAS,EAAE;AAPb,OArNmB,EA8NnB;AACExd,aAAK,EAAE,qCADT;AAEEyG,gBAAQ,EAAE,iCAFZ;AAGEzD,YAAI,EACF,yGAJJ;AAKE0D,aAAK,EAAE,gBALT;AAMEC,WAAG,EAAE,8BANP;AAOE6W,iBAAS,EAAE;AAPb,OA9NmB,EAuOnB;AACExd,aAAK,EAAE,qCADT;AAEEyG,gBAAQ,EAAE,yBAFZ;AAGEzD,YAAI,EACF,yGAJJ;AAKE0D,aAAK,EAAE,uBALT;AAMEC,WAAG,EAAE,gCANP;AAOE6W,iBAAS,EAAE;AAPb,OAvOmB,EAgPnB;AACExd,aAAK,EAAE,iCADT;AAEEyG,gBAAQ,EAAE,6BAFZ;AAGEzD,YAAI,EACF,mGAJJ;AAKE0D,aAAK,EAAE,oBALT;AAMEC,WAAG,EAAE,gCANP;AAOE6W,iBAAS,EAAE;AAPb,OAhPmB,EAyPnB;AACA;AACA;AACA;AACA;AACA;AACA;AACExd,aAAK,EAAE,0BADT;AAEEyG,gBAAQ,EAAE,sBAFZ;AAGEzD,YAAI,EACF,yGAJJ;AAKE0D,aAAK,EAAE,aALT;AAMEC,WAAG,EAAE,gCANP;AAOE6W,iBAAS,EAAE;AAPb,OA/PmB,EAwQnB;AACExd,aAAK,EAAE,+BADT;AAEEyG,gBAAQ,EAAE,uCAFZ;AAGEzD,YAAI,EACF,yGAJJ;AAKE0D,aAAK,EAAE,kBALT;AAMEC,WAAG,EAAE,gCANP;AAOE6W,iBAAS,EAAE;AAPb,OAxQmB,CAArB;;UA6SaC,iB;AASX,mCACUzc,GADV,EAEUtG,MAFV,EAGUrC,UAHV,EAIU4I,WAJV,EAKUyc,UALV,EAKoC;AAAA;;AAJ1B,eAAA1c,GAAA,GAAAA,GAAA;AACA,eAAAtG,MAAA,GAAAA,MAAA;AACA,eAAArC,UAAA,GAAAA,UAAA;AACA,eAAA4I,WAAA,GAAAA,WAAA;AACA,eAAAyc,UAAA,GAAAA,UAAA;AAbV,eAAAC,cAAA,GAAyB,EAAzB;AAGA,eAAA1iB,UAAA,GAAuC,IAAI,0EAAJ,CAA6BuL,IAA7B,CAAvC;AACA,eAAAoX,gBAAA,GAAwB,EAAxB;AAEA,eAAAC,eAAA,GAA4B,EAA5B;AAQI;;;;iBAEJ,oBAAW;AACT9W,oBAAQ,CAACC,cAAT,CAAwB,mBAAxB,EAA6CC,KAA7C,CAAmDC,eAAnD,GACE,OADF,CADS,CAGT;;AACA,iBAAKjM,UAAL,CAAgBQ,SAAhB,GAA4B,KAAKA,SAAjC;AACA,iBAAK0L,GAAL,GAAW,KAAKlM,UAAL,CAAgBmM,OAAhB,EAAX;AAEA,iBAAK0W,YAAL;AAEA,gBAAIC,IAAI,GAAG,KAAKL,UAAL,CAAgBM,OAAhB,EAAX;;AACA,gBAAID,IAAJ,EAAU;AACR,mBAAK1lB,UAAL,CACG4lB,sBADH,CAC0BF,IAAI,CAACG,MAD/B,EAEGriB,SAFH,CAEa,UAAC0H,MAAD,EAAY,CACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,eAZH;AAaD;AACF;;;iBAED,uBAAc;AACZwD,oBAAQ,CAACC,cAAT,CAAwB,mBAAxB,EAA6CC,KAA7C,CAAmDC,eAAnD,GACE,SADF;;AAEA,gBAAI,KAAKjM,UAAT,EAAqB;AACnB,mBAAKA,UAAL,CAAgBkjB,UAAhB;AACD;AACF;;;iBAED,+BAAsB,CAAE;;;iBAExB,0BAAiBzX,KAAjB,EAAgC;AAE9B,iBAAKhM,MAAL,CAAYwD,QAAZ,CAAqB,6BAAsBwI,KAAtB,EAArB,EAF8B,CAG9B;AACA;AACD;;;iBACD,iBAAQ;AACN,gBAAM0X,WAAW,GAAG5X,IAAI,CAAC9K,IAAL,CAAU,UAAU2iB,CAAV,EAAaC,CAAb,EAAgB;AAC5C,kBAAIC,KAAK,GAAGF,CAAC,CAACre,KAAF,CAAQ6Z,WAAR,EAAZ;AACA,kBAAI2E,KAAK,GAAGF,CAAC,CAACte,KAAF,CAAQ6Z,WAAR,EAAZ;;AACA,kBAAI0E,KAAK,GAAGC,KAAZ,EAAmB;AACjB,uBAAO,CAAC,CAAR,CADiB,CACN;AACZ;;AACD,kBAAID,KAAK,GAAGC,KAAZ,EAAmB;AACjB,uBAAO,CAAP,CADiB,CACP;AACX;;AACD,qBAAO,CAAP,CAT4C,CASlC;AACX,aAVmB,CAApB;AAYD;;;iBAED,wBAAe;AAAA;;AACb,iBAAKnmB,UAAL,CAAgBomB,kBAAhB,GAAqC5iB,SAArC,CACE,UAAC3D,IAAD,EAAe;AAEb,sBAAI,CAAC0lB,gBAAL,GAAwB1lB,IAAxB;;AACA,sBAAI,CAAC8I,GAAL,CAAS4B,YAAT;AACD,aALH,EAME,UAACnC,GAAD,EAAc,CAEb,CARH;AAUD;;;iBACD,oBAAWlE,KAAX,EAAiBvD,IAAjB,EAAqB;AACnB,mBAAOA,IAAP;AACD;;;;;;;yBAzFUykB,iB,EAAiB,gI,EAAA,uH,EAAA,2I,EAAA,6I,EAAA,yJ;AAAA,O;;;cAAjBA,iB;AAAiB,sC;AAAA;AAAA;sEAEjB,wE,EAAY,I;;;;;;;;;;;;;;ACvUzB;;AACE;;AACG;;AAAyB;;AAE9B;;AACA;;AACE;;AACE;;AACE;;AAAU;;AAAU;;AACtB;;AACA;;AAEE;;AACF;;AACA;;AACF;;AAEA;;AACE;;AACE;;AAAmB;AAAA;AAAA;;AAAnB;;AACF;;AACA;;AACA;;AACE;;AAAkB;;AAAU;;AAAY;;AAC1C;;AACA;;AAKE;;AACE;;AAAU;;AAAa;;AACvB;;AAAM;AAAA,qBAAS,IAAAiB,KAAA,EAAT;AAAgB,aAAhB;;AAAkB;;AAAa;;AACvC;;AACF;;AACF;;AACF;;AAoBA;;AAEE;;;;;;AA4BF;;;;;;AA/E4B;;AAAA;;AAYH;;AAAA;;AAGG;;AAAA;;AAoCK;;AAAA,iPAAyC,cAAzC,EAAyC,cAAzC;;;;;;;;wED2QpBjB,iB,EAAiB;gBAL7B,uDAK6B;iBALnB;AACTnjB,oBAAQ,EAAE,eADD;AAETC,uBAAW,EAAE,4BAFJ;AAGTC,qBAAS,EAAE,CAAC,4BAAD;AAHF,W;AAKmB,U;;;;;;;;;;;;;AAEHiB,mBAAS,EAAE,CAAF;kBAAjC,uDAAiC;mBAAvB,wE;AAAuB,WAAE;;;;;;;;;;;;;;;;;;;AEvUtwDY;;AACE;;AACF;;;;;;AAFyE;;AACvE;;AAAA;;;;;;;;AAaR;;AACE;;AAA4C;AAAA;;AAAA;;AAAA;AAAA;;AAAwB;;AACpE;;AACF;;;;;;AAaA;;AAA0F;;AAC1F;;;;;;AACA;;AAAqC;;AAA8B;;;;;;AAA9B;;AAAA;;;;;;AAGrC;;AAAiG;;AACjG;;;;;;AACA;;AAAqC;;AAAoC;;;;;;AAApC;;AAAA;;;;;;AAGrC;;AAAgG;;AAChG;;;;;;AACA;;AAAqC;;AAAyB;;;;;;AAAzB;;AAAA;;;;;;AAGrC;;AAAkG;;AAClG;;;;;;AACA;;AAAqC;;AAA2B;;;;;;AAA3B;;AAAA;;;;;;AASrC;;AAAmC;;AAAM;;;;;;;;AACzC;;AACE;;AACC;;AAAgD;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA8B;;AAAI;;AACrF;;AAAM;;AACN;;AACC;;AAA0F;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA+B;;AAAM;;AAChI;;AACA;;;;;;AAFmD;;AAAA;;;;;;AAIrD;;;;;;AACF;;;;;;;;UDjGSkjB,6B;AAiBX,+CACUxf,MADV,EAEUtE,KAFV,EAGUG,cAHV,EAIUF,MAJV,EAKUzC,UALV,EAMUqC,MANV,EAOUK,EAPV,EAQUkG,WARV,EASUtG,cATV,EAUUC,eAVV,EAU0C;AAAA;;AAThC,eAAAuE,MAAA,GAAAA,MAAA;AACA,eAAAtE,KAAA,GAAAA,KAAA;AACA,eAAAG,cAAA,GAAAA,cAAA;AACA,eAAAF,MAAA,GAAAA,MAAA;AACA,eAAAzC,UAAA,GAAAA,UAAA;AACA,eAAAqC,MAAA,GAAAA,MAAA;AACA,eAAAK,EAAA,GAAAA,EAAA;AACA,eAAAkG,WAAA,GAAAA,WAAA;AACA,eAAAtG,cAAA,GAAAA,cAAA;AACA,eAAAC,eAAA,GAAAA,eAAA;AAzBV,eAAAS,mBAAA,GAA8B,CAA9B;AACA,eAAAH,gBAAA,GAA6B,CAAE,iBAAF,EAAqB,wBAArB,EAA+C,YAA/C,EAA4D,cAA5D,EAA2E,QAA3E,CAA7B;AACA,eAAAC,cAAA,GAAmD,CACjD;AAAEC,eAAG,EAAE,iBAAP;AAA0B1B,iBAAK,EAAE;AAAjC,WADiD,CAAnD;AAKA,eAAAuB,UAAA,GAAa,IAAI,2EAAJ,EAAb;AAEA,eAAA2jB,eAAA,GAAyB,EAAzB;AAiBI;;;;iBAEJ,oBAAQ;AACN,iBAAKta,WAAL,GAAmB,KAAKvJ,EAAL,CAAQQ,OAAR,CAAgB,YAAhB,CAAnB;AACA,iBAAKgE,QAAL;AACD;;;iBAED,uBAAc;AACZ,gBAAI,KAAKC,UAAT,EAAqB;AACnB,mBAAKA,UAAL,CAAgBC,WAAhB;AACD;AACF;;;iBACD,oBAAW;AAAA;;AACT,iBAAKiX,OAAL,GAAe,IAAf,CADS,CAET;;AACA,iBAAKlX,UAAL,GAAkB,KAAKnH,UAAL,CACfwmB,oBADe,GAEfhjB,SAFe,CAEL,UAAC3D,IAAD,EAAU;AACnB,sBAAI,CAACwH,KAAL,GAAaxH,IAAb;AACAiF,qBAAO,CAACC,GAAR,CAAYlF,IAAZ;;AAEA,mBAAI,IAAI4D,CAAC,GAAC,CAAV,EAAYA,CAAC,GAAC5D,IAAI,CAAC6D,MAAnB,EAA0BD,CAAC,EAA3B,EAA8B;AAE5B,oBAAG5D,IAAI,CAAC4D,CAAD,CAAJ,CAAQE,UAAR,IAAsB,GAAzB,EAA6B;AAC3B9D,sBAAI,CAAC4D,CAAD,CAAJ,CAAQE,UAAR,GAAqB,cAArB;AACD;;AACD,oBAAG9D,IAAI,CAAC4D,CAAD,CAAJ,CAAQE,UAAR,IAAsB,GAAzB,EAA8B;AAC5B9D,sBAAI,CAAC4D,CAAD,CAAJ,CAAQE,UAAR,GAAqB,YAArB;AACD;;AACD,oBAAG9D,IAAI,CAAC4D,CAAD,CAAJ,CAAQG,YAAR,IAAwB,GAA3B,EAA+B;AAC7B/D,sBAAI,CAAC4D,CAAD,CAAJ,CAAQG,YAAR,GAAuB,MAAvB;AACD;;AACD,oBAAG/D,IAAI,CAAC4D,CAAD,CAAJ,CAAQG,YAAR,IAAwB,GAA3B,EAA+B;AAC7B/D,sBAAI,CAAC4D,CAAD,CAAJ,CAAQG,YAAR,GAAuB,QAAvB;AACD;AAEF;;AACD,sBAAI,CAAChB,UAAL,GAAkB,IAAI,2EAAJ,CAAuB/C,IAAvB,CAAlB;AACAiF,qBAAO,CAACC,GAAR,CAAY,QAAI,CAACnC,UAAjB;AACA,sBAAI,CAACA,UAAL,CAAgBQ,SAAhB,GAA4B,QAAI,CAACA,SAAjC;AACA,sBAAI,CAACiE,KAAL,GAAaxH,IAAb;AACA,sBAAI,CAAC+C,UAAL,CAAgBS,IAAhB,GAAuB,QAAI,CAACA,IAA5B;AACF,sBAAI,CAACgb,OAAL,GAAe,KAAf;AACC,aA5Be,CAAlB;AA6BD;;;iBACD,sBAAa9c,KAAb,EAAoB;AAAA;;AAClBuD,mBAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBxD,KAAK,CAACyD,IAAN,CAAW,CAAX,EAAcC,KAAd,CAAoB,CAApB,CAArB;AACA,gBAAMC,IAAI,GAAS3D,KAAK,CAACyD,IAAN,CAAW,CAAX,EAAcC,KAAd,CAAoB,CAApB,CAAnB;AACA,gBAAME,UAAU,GAAG,IAAIC,QAAJ,EAAnB;AACAD,sBAAU,CAACE,MAAX,CAAkB,YAAlB,EAAgC,aAAhC;AACAF,sBAAU,CAACE,MAAX,CAAkB,MAAlB,EAA0BH,IAA1B;AACA,iBAAKlF,UAAL,CAAgBsF,cAAhB,CAA+BH,UAA/B,EAA2C3B,SAA3C,CAAqD,UAAC+B,QAAD,EAAc;AACjET,qBAAO,CAACC,GAAR,CAAYQ,QAAZ;;AACA,sBAAI,CAAC2B,QAAL;;AACA,sBAAI,CAAC1E,KAAL,CAAWc,IAAX,+BAA8C,IAA9C,EAAoD;AAClDkC,wBAAQ,EAAE,IADwC;AAElDC,gCAAgB,EAAE,KAFgC;AAGlDC,kCAAkB,EAAE;AAH8B,eAApD;AAKD,aARD;AASD;;;iBACD,kCAAsB;AACpB,iBAAKnD,eAAL,CAAqBoD,aAArB,CAAmC,wBAAnC,EAA4D,KAAK0B,KAAjE;AACD;;;iBAED,oBAAWiI,GAAX,EAAgB;AAAA;;AACd,iBAAK3M,cAAL,CACGqD,OADH,CACW;AAAEC,qBAAO,mBAAYqJ,GAAG,CAACiX,eAAhB;AAAT,aADX,EAEG/iB,SAFH,CAEa,UAAC2C,GAAD,EAAS;AAClB,kBAAIA,GAAJ,EAAS;AACP,wBAAI,CAAC1D,MAAL,CAAYa,IAAZ;;AACA,wBAAI,CAACtD,UAAL,CACGymB,iBADH,CACqBnX,GAAG,CAACoX,aADzB,EAEGljB,SAFH,CAEa,UAAC2C,GAAD,EAAc;AACvB,sBAAIA,GAAG,CAACkC,MAAJ,IAAc,GAAlB,EAAuB;AACvB,4BAAI,CAAC5F,MAAL,CAAYnB,KAAZ;;AACE,4BAAI,CAAC4F,QAAL;;AACA,4BAAI,CAAC1E,KAAL,CAAWc,IAAX,CAAgB,iBAAhB,EAAmC,IAAnC,EAAyC;AAAEkC,8BAAQ,EAAE;AAAZ,qBAAzC;AACH;;AAAC,6BAAC4C,GAAD,EAAc,CACf,CADC;AAED,iBATH;AAUD;AACF,aAhBH;AAiBD;;;iBAED,kBAAStE,QAAT,EAAmBC,CAAnB,EAAsB;AACpB,iBAAKC,WAAL,CAAiBF,QAAjB;AACA,iBAAKG,WAAL,CAAiBF,CAAjB;AACD;;;iBAED,qBAAYD,QAAZ,EAAsB;AACpB,iBAAKlB,UAAL,CAAgBuB,eAAhB,GAAkC,UAACtE,IAAD,EAAYuE,MAAZ,EAAwC;AACxE,qBAAOvE,IAAI,CAACiE,QAAD,CAAJ,CAAeO,iBAAf,GAAmCC,QAAnC,CAA4CF,MAA5C,CAAP;AACD,aAFD;AAGD;;;iBAED,uBAAc;AACZ,iBAAKxB,UAAL,CAAgBwB,MAAhB,GAAyB,EAAzB;AACA,iBAAKuC,SAAL,CAAec,aAAf,CAA6BpG,KAA7B,GAAqC,EAArC;AACA,iBAAK2B,mBAAL,GAA2B,CAA3B;AACD;;;iBAED,qBAAYzB,KAAZ,EAA0B;AACxB,gBAAMgD,WAAW,GAAIhD,KAAK,CAACiD,MAAN,CAAkCnD,KAAvD;AACA,iBAAKuB,UAAL,CAAgBwB,MAAhB,GAAyBG,WAAW,CAACE,IAAZ,GAAmBC,WAAnB,EAAzB;AACD;;;iBAED,4BAAmBC,SAAnB,EAAoC;AAClC,gBAAIA,SAAS,CAACC,SAAd,EAAyB;AACvB,mBAAKtC,cAAL,CAAoBuC,QAApB,kBAAuCF,SAAS,CAACC,SAAjD;AACD,aAFD,MAEO;AACL,mBAAKtC,cAAL,CAAoBuC,QAApB,CAA6B,iBAA7B;AACD;AACF;;;iBAGD,mBAAUyK,GAAV,EAAe;AAGb,iBAAKjN,MAAL,CAAYwD,QAAZ,CAAqB,yCAAkCyJ,GAAG,CAACoX,aAAtC,EAArB,EAA4E;AAAE5gB,yBAAW,EAAE;AAAEvF,kBAAE,EAAE+O,GAAG,CAACoX,aAAV;AAAyBne,sBAAM,EAAG;AAAlC;AAAf,aAA5E;AACD;;;iBAED,kBAAS;AACP,iBAAKlG,MAAL,CAAYwD,QAAZ,CAAqB,CAAC,mCAAD,CAArB;AACD;;;iBAED,kBAAS;AACP,iBAAKxD,MAAL,CAAYwD,QAAZ,CAAqB,CAAC,mBAAD,CAArB;AACD;;;iBACD,sBAAa3B,KAAb,EAAoBvD,IAApB,EAAwB;AACtB,mBAAOA,IAAI,CAACoC,GAAZ;AACD;;;;;;;yBA/JUujB,6B,EAA6B,mI,EAAA,wI,EAAA,sK,EAAA,mK,EAAA,2I,EAAA,uH,EAAA,0J,EAAA,6I,EAAA,iI,EAAA,sJ;AAAA,O;;;cAA7BA,6B;AAA6B,oD;AAAA;AAAA;;;sEAO7B,+D,EAAO,I;;sEACP,wE,EAAY,I;;;;;;;;;;;;;;;;;;ACrCzB;;AAAsB;;AAA0B;;AAAsD;;AACtG;;AACA;;AACE;;AACF;;AACA;;AACE;;AAAwB;AAAA,qBAAS,IAAAjgB,MAAA,EAAT;AAAiB,aAAjB;;AACtB;;AAAU;;AAAU;;AACtB;;AACA;;AACE;;AACF;;AACA;;AACF;;AACE;;AACE;;AACE;;AACE;;AACE;;AACE;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AAEF;;AACF;;AACF;;AACF;;AACA;;AACE;;AAAU;;AAAS;;AACrB;;AACA;;AACE;;AACE;;AAAoC;;AAAM;;AAC1C;;AAIE;AAAA,qBAAU,IAAAC,YAAA,QAAV;AAA8B,aAA9B;;AAJF;;AAMF;;AACA;;AAAQ;AAAA,qBAAS,IAAAqgB,sBAAA,EAAT;AAAiC,aAAjC;;AACN;;AAAM;;AAAQ;;AAChB;;AACF;;AACA;;AAGE;;AACE;;AACE;;AACE;;AACE;;AAAW;;AAAS;;AACpB;;AAAsC;AAAA;AAAA;;AAEpC;;AAAsB;;AAAM;;AAC5B;;AAGF;;AACF;;AACF;;AACA;;AACE;;AACE;;AAAW;;AAAM;;AACjB;;AAA2B;AAAA;;AAAA;;AAAA,qBAAS,IAAAngB,QAAA,mBAAT;AAAwC,aAAxC;;AAA3B;;AAEA;;AAAoB;;AAAM;;AAC5B;;AACF;;AACA;;AAIA;;AACC;;AAAmG;;AACnG;;AACF;;AAEH;;AACA;;AACA;;AACE;;AAA4D;AAAA,qBAAiB,IAAAE,kBAAA,QAAjB;AAA2C,aAA3C;;AAG5D;;AACE;;AAEA;;AACF;;AACA;;AACE;;AAEA;;AACF;;AACA;;AACE;;AAEA;;AACF;;AACA;;AACE;;AAEA;;AACF;;AAOA;;AACE;;AACA;;AAQF;;AACA;;AACF;;AACF;;AACA;;AACF;;AAEA;;;;;;;;;;AAhIgB;;AAAA;;AA4BU;;AAAA;;AAyBwB;;AAAA;;AAGL;;AAAA,oGAAmB,cAAnB,EAAmB,gBAAnB;;AAc/B;;AAAA;;AAYkB;;AAAA;;AAwCT;;AAAA;;AACW;;AAAA;;AAEH;;AAAA;;;;;;qBDrGjB;;;;;;wEAED4f,6B,EAA6B;gBANzC,uDAMyC;iBAN/B;AACTrkB,oBAAQ,EAAE,6BADD;AAETC,uBAAW,EAAE,0CAFJ;AAGTC,qBAAS,EAAE,CAAC,0CAAD,CAHF;AAITqT,sBAAU,EAAE;AAJH,W;AAM+B,U;;;;;;;;;;;;;;;;;;;;;;;AAChB7O,mBAAS,EAAE,CAAF;kBAAhC,uDAAgC;mBAAtB,W;AAAsB,WAAE,C;AAMftD,cAAI,EAAE,CAAF;kBAAvB,uDAAuB;mBAAb,+D;AAAa,WAAE,C;AACDD,mBAAS,EAAE,CAAF;kBAAjC,uDAAiC;mBAAvB,wE;AAAuB,WAAE;;;;;;;;;;;;;;;;;;;AErCtgDc;;AAEE;;AACF;;;;;;AAH6D;;AAE3D;;AAAA;;;;;;;;AAHJ;;AAAgE;AAAA;;AAAA;;AAAA,mDAA0C,EAA1C;AAA4C,WAA5C;;AAC9D;;AAIF;;;;;;AAJ+B;;AAAA,+FAAY,cAAZ,EAAY,kBAAZ;;;;;;AAK/B;;AACE;;AACF;;;;;;AAZJ;;AACE;;AAAU;;AAAI;;AACd;;AAEE;;AAMA;;AAGF;;AAEF;;;;;;AAXiB;;AAAA;;AAMD;;AAAA;;;;;;AAMhB;;AACE;;AAAU;;AAAI;;AACd;;AACD;;AACC;;AAEF;;;;;;;;AAOQ;;AACE;;AAGA;;AAAK;AAAA;;AAAA;;AAAA;AAAA;;AACH;;AACC;;AACF;;AACD;;AACA;;AACA;;AAGA;;AAAK;AAAA;;AAAA;;AAAA;AAAA;;AACH;;AACE;;AACF;;AACF;;AAEA;;AAYF;;;;;;;;AACA;;AACE;;AAGA;;AAAK;AAAA;;AAAA;;AAAA;AAAA;;AACH;;AACC;;AACF;;AACD;;AACA;;AAYF;;;;;;AAmBF;;AAEE;;AAAuB;;;;;;AAF4C;;AAEnE;;AAAA;;;;;;AAEJ;;AACE;;AACF;;;;;;AAZN;;AACE;;AACE;;AAAU;;AAAc;;AACxB;;AACE;;AAEE;;AAGF;;AACA;;AAGF;;AACF;;AAEF;;;;;;AAVwC;;AAAA,iGAAe,cAAf,EAAe,mBAAf;;AAItB;;AAAA;;;;;;AAOlB;;AACE;;AACE;;AAAU;;AAAY;;AACtB;;AACD;;AACC;;AAEF;;AACF;;;;;;AAOQ;;AAAyF;;AAEzF;;;;;;AAF+D;;AAA0B;;AAAA;;;;;;AAI3F;;AACE;;AACF;;;;;;AAZN;;AACE;;AACE;;AAAU;;AAAY;;AACtB;;AACE;;AAEE;;AAGF;;AACA;;AAGF;;AAEF;;AAEF;;;;;;AAXsC;;AAAA,+FAAa,cAAb,EAAa,iBAAb;;AAIpB;;AAAA;;;;;;AAQlB;;AACE;;AACE;;AAAU;;AAAU;;AACpB;;AACD;;AACC;;AAEF;;AACF;;;;;;AAOQ;;AAEE;;AAAW;;;;;;AAFuD;;AAElE;;AAAA;;;;;;AAEJ;;AACE;;AACF;;;;;;AADE;;AAAA;;;;;;AAXR;;AACE;;AACE;;AAAU;;AAAkB;;AAC5B;;AACE;;AAEE;;AAGF;;AACA;;AAGF;;AACF;;AAEF;;;;;;AAdc;;AAAA;;AAEiC;;AAAA;;AAER;;AAAA,iGAAe,cAAf,EAAe,mBAAf;;AAIrB;;AAAA;;;;;;AAOlB;;AACE;;AACE;;AAAU;;AAAkB;;AAC5B;;AACE;;AACF;;AACF;;AAEF;;;;;;AANc;;AAAA;;;;;;AAcN;;AAEE;;AAAW;;;;;;AAFuD;;AAElE;;AAAA;;;;;;AAEJ;;AACE;;AACF;;;;;;AADE;;AAAA;;;;;;AAXR;;AACE;;AACE;;AAAU;;AAAkB;;AAC5B;;AACE;;AAEE;;AAGF;;AACA;;AAGF;;AACF;;AASF;;;;;;AArBc;;AAAA;;AAEmC;;AAAA;;AAEV;;AAAA,kGAAe,cAAf,EAAe,oBAAf;;AAIrB;;AAAA;;;;;;;;AAsBhB;;AAIE;AAAA;;AAAA;;AAAA;AAAA;;AAEA;;AACF;;;;;;AALE;;;;;;;;AAOA;;AAA2J;AAAA;;AAAA;;AAAA;AAAA;;AACxJ;;AACD;;;;;;AAFsE;;;;;;;;AAOxE;;AAAwE;AAAA;;AAAA;;AAAA;AAAA;;AACtE;;AACF;;;;;;;;AAGA;;AAAwE;AAAA;;AAAA;;AAAA,wCAAsB,MAAtB;AAA4B,WAA5B;;AACtE;;AACF;;;;;;AAHF;;AACE;;AAES;;AACX;;;;;;AAJuE;;AAC5D;;AAAA;;;;;;;;AAKT;;AAAuE;AAAA;;AAAA;;AAAA,wCAAsB,MAAtB;AAA4B,WAA5B;;AACrE;;AACF;;;;;;AAHF;;AACE;;AAES;;AACX;;;;;;AAJwF;;AAC7E;;AAAA;;;;;;;;AAKT;;AAAuE;AAAA;;AAAA;;AAAA,wCAAsB,OAAtB;AAA6B,WAA7B;;AACrE;;AACF;;;;;;AAHF;;AACE;;AAES;;AACX;;;;;;AAJuF;;AAC5E;;AAAA;;;;;;;;AAKT;;AAAuE;AAAA;;AAAA;;AAAA,wCAAsB,QAAtB;AAA8B,WAA9B;;AACrE;;AACF;;;;;;AAHF;;AACE;;AAEU;;AACZ;;;;;;AAJ+C;;AACpC;;AAAA;;;;;;AAoBnB;;AACE;;AACF;;;;UD5RawjB,mB;AAqBX,qCACUnY,SADV,EAEUpM,MAFV,EAGUyE,MAHV,EAIU6B,GAJV,EAKUkK,WALV,EAMUrQ,KANV,EAOUG,cAPV,EAQUF,MARV,EAQ2CoG,KAR3C,EASU7I,UATV,EAUU4I,WAVV,EAWU/B,aAXV,EAYUnE,EAZV,EAY+B;AAAA;;AAAA;;AAXrB,eAAA+L,SAAA,GAAAA,SAAA;AACA,eAAApM,MAAA,GAAAA,MAAA;AACA,eAAAyE,MAAA,GAAAA,MAAA;AACA,eAAA6B,GAAA,GAAAA,GAAA;AACA,eAAAkK,WAAA,GAAAA,WAAA;AACA,eAAArQ,KAAA,GAAAA,KAAA;AACA,eAAAG,cAAA,GAAAA,cAAA;AACA,eAAAF,MAAA,GAAAA,MAAA;AAAiC,eAAAoG,KAAA,GAAAA,KAAA;AACjC,eAAA7I,UAAA,GAAAA,UAAA;AACA,eAAA4I,WAAA,GAAAA,WAAA;AACA,eAAA/B,aAAA,GAAAA,aAAA;AACA,eAAAnE,EAAA,GAAAA,EAAA;AA/BV,eAAAmkB,oBAAA,GAA8B,EAA9B;AAGA,eAAArO,OAAA,GAAiB,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,IAAzB,EAA+B,IAA/B,CAAjB;AACA,eAAArY,UAAA,GAAuB,EAAvB;AACA,eAAAC,QAAA,GAAqB,EAArB;AACA,eAAA2G,UAAA,GAAuB,EAAvB;AAIA,eAAAyN,WAAA,GAAoB,KAApB;AACA,eAAAjM,MAAA,GAAgB,KAAhB;AAKA,eAAAO,WAAA,GAAqB,IAArB;AAyIA,eAAAge,gBAAA,GAAqC,IAAI,4CAAJ,EAArC;AAxHE,eAAKjgB,aAAL,CAAmBS,UAAnB,CAA8B9D,SAA9B,CAAwC,UAAA2C,GAAG,EAAE;AAC3CrB,mBAAO,CAACC,GAAR,CAAYoB,GAAZ;AACA,oBAAI,CAAC0S,MAAL,GAAY1S,GAAZ;;AACA,oBAAI,CAACwC,GAAL,CAASoe,cAAT;;AACA,oBAAI,CAACpe,GAAL,CAAS4B,YAAT;;AACAzF,mBAAO,CAACC,GAAR,CAAY,QAAI,CAAC8T,MAAjB;AACA,WANF;AAOA/T,iBAAO,CAACC,GAAR,CAAY,aAAZ,EAA0B,KAAK8T,MAA/B;AACA,eAAKrE,WAAL,GAAiB,KAAjB;AACD,eAAKhU,aAAL,CAAmB,EAAnB;AAEA;;;;iBACD,uBAAcG,IAAd,EAAoB;AAClB,iBAAK+S,gBAAL,GAAwB,KAAKb,WAAL,CAAiBhS,KAAjB,CAAuB;AAC7CT,sBAAQ,EAAE,CAACO,IAAI,CAACP,QAAL,IAAiB,EAAlB,EAAsB,CAAC,2DAAWW,QAAZ,CAAtB,CADmC;AAE7CZ,wBAAU,EAAE,CAACQ,IAAI,CAACR,UAAL,IAAmB,EAApB,CAFiC;AAG7Cwd,0BAAY,EAAE,CAAChd,IAAI,CAACgd,YAAL,IAAqB,EAAtB,CAH+B;AAI7ChK,0BAAY,EAAE,CAAChT,IAAI,CAACgT,YAAL,IAAqB,EAAtB,EAA0B,CAAC,2DAAW5S,QAAZ,CAA1B,CAJ+B;AAK7CgG,wBAAU,EAAE,CAACpG,IAAI,CAACoG,UAAL,IAAmB,EAApB,EAAwB,CAAC,2DAAWhG,QAAZ,CAAxB,CALiC;AAM7C6S,yBAAW,EAAE,CAACjT,IAAI,CAACiT,WAAL,IAAoB,EAArB,CANgC;AAO7CC,yBAAW,EAAE,CAAClT,IAAI,CAACkT,WAAL,IAAoB,EAArB;AAPgC,aAAvB,CAAxB;AASD;;;iBAED,oBAAQ;AAAA;;AACN/O,mBAAO,CAACC,GAAR,CAAY,aAAZ,EAA0B,KAAK8T,MAA/B;AACA,iBAAK5V,YAAL,GAAoB,KAAKP,EAAL,CAAQQ,OAAR,CAAgB,YAAhB,EAA8BoG,QAAlD;AACA,iBAAK0d,QAAL;AACA,iBAAKne,KAAL,CAAWE,aAAX,CAAyBvF,SAAzB,CAAmC,UAACwF,MAAD,EAAiB;AAClD,kBAAGA,MAAM,CAACC,GAAP,CAAW,IAAX,CAAH,EAAoB;AAClB,wBAAI,CAACV,MAAL,GAAc,IAAd;AACA,wBAAI,CAAChI,EAAL,GAAUyI,MAAM,CAACC,GAAP,CAAW,IAAX,CAAV;;AACA,oBAAG,QAAI,CAAC4P,MAAL,KAAc,QAAjB,EAA0B;AAC1B,0BAAI,CAAC7Y,UAAL,CAAgBinB,qBAAhB,CAAsCje,MAAM,CAACC,GAAP,CAAW,IAAX,CAAtC,EAAwDzF,SAAxD,CAAkE,UAACyE,IAAD,EAAS;AACxE,4BAAI,CAACzH,aAAL,CAAmByH,IAAnB;;AACA,4BAAI,CAACif,QAAL,CAAcxb,IAAd,CAAmBzD,IAAI,CAACoM,YAAxB;;AACAvP,2BAAO,CAACC,GAAR,CAAYkD,IAAZ;AACA,4BAAI,CAACkB,YAAL,GAAkBlB,IAAlB;;AACA,4BAAI,CAACW,WAAL,CAAiBQ,eAAjB,CAAiC,QAAI,CAACD,YAAtC;;AACA,4BAAI,CAACP,WAAL,CAAiBS,cAAjB;;AACA,4BAAI,CAAC8d,gBAAL,GAAsBlf,IAAtB;;AACA,4BAAI,CAACkT,eAAL,CAAqB,EAArB,EAAwB,QAAxB;AACF,mBATD;AAUD,iBAXC,MAWI,IAAG,QAAI,CAACtC,MAAL,KAAc,UAAjB,EAA4B;AAChC,0BAAI,CAAC7Y,UAAL,CAAgBonB,mBAAhB,CAAoCpe,MAAM,CAACC,GAAP,CAAW,IAAX,CAApC,EAAsDzF,SAAtD,CAAgE,UAACyE,IAAD,EAAQ;AACtE,4BAAI,CAACzH,aAAL,CAAmByH,IAAnB;;AACA,4BAAI,CAACkB,YAAL,GAAkBlB,IAAlB;;AACA,4BAAI,CAACW,WAAL,CAAiBQ,eAAjB,CAAiC,QAAI,CAACD,YAAtC;;AACA,4BAAI,CAACP,WAAL,CAAiBS,cAAjB;;AACA,4BAAI,CAAC8d,gBAAL,GAAsBlf,IAAtB;;AACA,4BAAI,CAACkT,eAAL,CAAqB,EAArB,EAAwB,QAAxB;AACD,mBAPD;AAQD;AACF,eAxBC,MAyBI;AACF,wBAAI,CAACrS,WAAL,GAAiB,KAAjB;;AACA,wBAAI,CAACtI,aAAL,CAAmB,EAAnB;AACD;AACF,aA9BD;AAgCD;;;iBAED,yBAAa;AACX,gBAAG,KAAKqY,MAAL,KAAc,QAAjB,EAA0B;AACxB,mBAAKxW,MAAL,CAAYwD,QAAZ,CAAqB,CAAC,uDAAD,CAArB;AACD,aAFD,MAGA,KAAKxD,MAAL,CAAYwD,QAAZ,CAAqB,CAAC,uDAAD,CAArB;AACD;;;iBACD,qBAAS;AACP,iBAAKxD,MAAL,CAAYwD,QAAZ,CAAqB,CAAC,mDAAD,CAArB;AAED;;;iBACD,sBAAa4E,SAAb,EAAsB;AAAA;;AACpB,gEAAKC,IAAL,CACE;AACEC,kBAAI,EAAE,uBAAsBF,SAAtB,GAAiC,UAAjC,GAA8C,0BADtD;AAEEG,8BAAgB,EAAE,IAFpB;AAGEC,gCAAkB,EAAE,SAHtB;AAIEC,+BAAiB,EAAE,MAJrB;AAKE;AACAC,8BAAgB,EAAE,IANpB;AAOEC,+BAAiB,EAAE,KAPrB;AAO4B,sBAAQ;AAPpC,aADF,EAUEC,IAVF,CAUQ,UAAAC,MAAM,EAAI;AAChB,kBAAGA,MAAM,CAACC,WAAP,IAAoB,IAAvB,EAA4B;AAC1B,wBAAI,CAACnL,UAAL,CAAgBmI,qBAAhB,CAAsC,QAAI,CAACgB,YAAL,CAAkB5I,EAAxD,EACCiD,SADD,CACW,UAAA3D,IAAI,EAAI;AACjB,sBAAG,QAAI,CAACgZ,MAAL,KAAc,QAAjB,EAA0B;AACxB,4BAAI,CAACxW,MAAL,CAAYwD,QAAZ,CAAqB,CAAC,oDAAD,CAArB;AACD,mBAFD,MAGK,IAAG,QAAI,CAACgT,MAAL,KAAc,UAAjB,EAA4B;AAC/B,4BAAI,CAACxW,MAAL,CAAYwD,QAAZ,CAAqB,CAAC,2CAAD,CAArB;AACD;AAEF,iBATD,EAUA,UAAAuC,GAAG,EAAE;AACH,sBAAIA,GAAG,CAACC,MAAJ,IAAc,GAAlB,EAAuB;AACrB,4BAAI,CAAC7F,KAAL,CAAWc,IAAX,CAAgB,6BAAhB,EAA+C,IAA/C,EAAqD;AACnDkC,8BAAQ,EAAE,IADyC;AAEnDC,sCAAgB,EAAE,KAFiC;AAGnDC,wCAAkB,EAAE;AAH+B,qBAArD;AAKD;;AACD,sBAAG,QAAI,CAACmT,MAAL,KAAc,QAAjB,EAA0B;AACxB,4BAAI,CAACxW,MAAL,CAAYwD,QAAZ,CAAqB,CAAC,oDAAD,CAArB;AACD,mBAFD,MAGK,IAAG,QAAI,CAACgT,MAAL,KAAc,UAAjB,EAA4B;AAC/B,4BAAI,CAACxW,MAAL,CAAYwD,QAAZ,CAAqB,CAAC,2CAAD,CAArB;AACD;AAEJ,iBAzBC;AA0BD;AAAC,aAtCJ;AA0CD;;;iBACD,sBAAU;AACR,iBAAKiD,WAAL,GAAiB,KAAjB;AACD;;;iBAKD,oBAAW;AACT,iBAAKS,WAAL;;AACA,gBAAG,KAAKsP,MAAL,KAAc,QAAjB,EAA0B;AACxB,mBAAK7Q,aAAL;AACD,aAFD,MAEM,IAAG,KAAK6Q,MAAL,KAAc,UAAjB,EAA4B;AAChC,mBAAKwO,eAAL;AACD;;AACD,iBAAK7d,YAAL;AACD;;;iBACD,kBAAS;AACP,iBAAKiF,SAAL,CAAe6Y,IAAf;AACD;;;iBACD,mBAAU/lB,KAAV,EAAsB;AACpB,gBAAMC,OAAO,GAAG,aAAhB;AACA,gBAAIC,SAAS,GAAGC,MAAM,CAACC,YAAP,CAAoBJ,KAAK,CAACK,QAA1B,CAAhB;;AACA,gBAAI,CAACJ,OAAO,CAACK,IAAR,CAAaJ,SAAb,CAAL,EAA8B;AAC5BF,mBAAK,CAACO,cAAN;AACD;AACF;;;iBAED,yBAAgBP,KAAhB,EAAsB0S,MAAtB,EAA8B;AAAA;;AAC5B,gBAAGA,MAAM,KAAK,QAAd,EAAuB;AACrBnP,qBAAO,CAACC,GAAR,CAAY,KAAK2O,gBAAjB;;AAEA,kBAAG,KAAKmF,MAAL,KAAc,QAAjB,EAA0B;AACxB,oBAAI0O,OAAO,GAAG,IAAI,gEAAJ,GAAiBliB,MAAjB,CAAwB,UAAxB,EAAoC,KAAKqO,gBAAL,CAAsBrS,KAAtB,CAA4BjB,QAAhE,EACfiF,MADe,CACR,YADQ,EACM,KAAKqO,gBAAL,CAAsBrS,KAAtB,CAA4BlB,UADlC,EAEfkF,MAFe,CAER,cAFQ,EAEQ,KAAKqO,gBAAL,CAAsBrS,KAAtB,CAA4BsS,YAFpC,EAGftO,MAHe,CAGR,YAHQ,EAGM,KAAKqO,gBAAL,CAAsBrS,KAAtB,CAA4B0F,UAHlC,CAAd;AAIFjC,uBAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBwiB,OAArB;AACA,qBAAKvnB,UAAL,CAAgBwnB,uDAAhB,CAAwED,OAAxE,EACC/jB,SADD,CACW,UAAAikB,YAAY,EAAE;AACvB,0BAAI,CAACC,wBAAL,GAAgC;AAC9B,4BAAQ,QAAI,CAAChU,gBAAL,CAAsBrS,KADA;AAE9B,oCAAeomB,YAFe;AAG9B,8BAASxT;AAHqB,mBAAhC;AAKD,iBAPD;AAQC,eAdD,MAeK,IAAG,KAAK4E,MAAL,KAAc,UAAjB,EAA4B;AAC/B,oBAAI0O,OAAO,GAAG,IAAI,gEAAJ,GAAiBliB,MAAjB,CAAwB,UAAxB,EAAoC,KAAKqO,gBAAL,CAAsBrS,KAAtB,CAA4BjB,QAAhE,EACbiF,MADa,CACN,cADM,EACU,KAAKqO,gBAAL,CAAsBrS,KAAtB,CAA4Bsc,YADtC,EAEbtY,MAFa,CAEN,cAFM,EAEU,KAAKqO,gBAAL,CAAsBrS,KAAtB,CAA4BsS,YAFtC,EAGbtO,MAHa,CAGN,YAHM,EAGQ,KAAKqO,gBAAL,CAAsBrS,KAAtB,CAA4B0F,UAHpC,CAAd;AAIAjC,uBAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBwiB,OAArB;AACA,qBAAKvnB,UAAL,CAAgB2nB,yDAAhB,CAA0EJ,OAA1E,EACD/jB,SADC,CACS,UAAAikB,YAAY,EAAE;AACvB,0BAAI,CAACC,wBAAL,GAA8B;AAC5B,4BAAQ,QAAI,CAAChU,gBAAL,CAAsBrS,KADF;AAE5B,oCAAgBomB,YAFY;AAG5B,8BAAUxT;AAHkB,mBAA9B;AAKD,iBAPC;AASD;AAGF,aApCD,MAoCK;AACH,mBAAKyT,wBAAL,GAAgC;AAC9B,wBAAQ,KAAKhU,gBAAL,CAAsBrS,KADA;AAE9B,gCAAe,EAFe;AAG9B,0BAAS4S;AAHqB,eAAhC;AAMD;AACF;;;iBAEM,qBAAYiT,QAAZ,EAA2B;AAEhC,iBAAKA,QAAL,GAAgB,EAAhB;AACA,iBAAKA,QAAL,GAAgBA,QAAhB;AAED;;;iBACD,0BAAiB;AACf,iBAAKJ,gBAAL,CAAsBvf,IAAtB,CAA2B,IAA3B;AACD;;;iBAED,qBAAYmM,gBAAZ,EAA8B;AAAA;;AAC5B5O,mBAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkC2O,gBAAlC;AACA,iBAAKnL,MAAL,GAAY,KAAZ;AACA,gBAAI2L,OAAO,GAAU,EAArB;AAEA,iBAAKgT,QAAL,CAAc9X,OAAd,CAAsB,UAAC6L,CAAD,EAAIlB,CAAJ,EAAU;;;AAC9BjV,qBAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBkW,CAApB;;AACA,kBAAG,QAAI,CAACpC,MAAL,KAAc,QAAjB,EAA0B;AACxB,oBAAIvY,OAAO,GAAG;AACZyG,4BAAU,EAAE2M,gBAAgB,CAAC3M,UADjB;AAEZ3G,0BAAQ,EAAEsT,gBAAgB,CAACtT,QAFf;AAGZD,4BAAU,EAAEuT,gBAAgB,CAACvT,UAHjB;AAIZwT,8BAAY,EAAED,gBAAgB,CAACC,YAJnB;AAKZC,6BAAW,EAAGF,gBAAgB,CAACE,WALnB;AAMZC,6BAAW,EAAE,QAAI,CAACnR,EAAL,CAAQQ,OAAR,CAAgB,aAAhB,CAND;AAOZmR,8BAAY,EAAE4G,CAPF;AAQZ1a,oBAAE,QAAC,QAAI,CAAC4I,YAAN,MAAkB,IAAlB,IAAkB,aAAlB,GAAkB,MAAlB,GAAkB,GAAE5I,EARV;AASZ0J,2BAAS,EAAE,QAAI,CAAChH;AATJ,iBAAd;AAWAiR,uBAAO,CAACxI,IAAR,CAAapL,OAAb;AACD,eAbD,MAaM,IAAG,QAAI,CAACuY,MAAL,KAAc,UAAjB,EAA4B;AAChC,oBAAIvY,QAAO,GAAG;AACZyG,4BAAU,EAAE2M,gBAAgB,CAAC3M,UADjB;AAEZ3G,0BAAQ,EAAEsT,gBAAgB,CAACtT,QAFf;AAGZud,8BAAY,EAAEjK,gBAAgB,CAACiK,YAHnB;AAIZhK,8BAAY,EAAED,gBAAgB,CAACC,YAJnB;AAKZC,6BAAW,EAAGF,gBAAgB,CAACE,WALnB;AAMZC,6BAAW,EAAG,QAAI,CAACnR,EAAL,CAAQQ,OAAR,CAAgB,aAAhB,CANF;AAOZmR,8BAAY,EAAE4G,CAPF;AAQZ1a,oBAAE,QAAC,QAAI,CAAC4I,YAAN,MAAkB,IAAlB,IAAkB,aAAlB,GAAkB,MAAlB,GAAkB,GAAE5I,EARV;AASZ0J,2BAAS,EAAE,QAAI,CAAChH;AATJ,iBAAd;AAWAiR,uBAAO,CAACxI,IAAR,CAAapL,QAAb;AACD;AAEF,aA9BD;;AA+BA,gBAAG,KAAKuY,MAAL,KAAc,QAAjB,EAA0B;AACxB,mBAAK7Y,UAAL,CAAgB+H,0BAAhB,CAA2CmM,OAA3C,EAAmD,KAAK3L,MAAxD,EACD/E,SADC,CACS,UAAA3D,IAAI,EAAI;AACjB,oBAAIA,IAAI,IAAI,IAAZ,EAAkB;AAChB,0BAAI,CAAC2U,WAAL,GAAiB,IAAjB;;AACA,0BAAI,CAAChS,KAAL,CAAWc,IAAX,CAAgB,eAAe,IAA/B,EAAqC,IAArC,EAA2C;AACzCkC,4BAAQ,EAAE,IAD+B;AAEzCC,oCAAgB,EAAE,KAFuB;AAGzCC,sCAAkB,EAAE;AAHqB,mBAA3C;;AAKA,0BAAI,CAAC+I,SAAL,CAAe6Y,IAAf;;AACA,0BAAI,CAAC3e,GAAL,CAAS4B,YAAT;AACD;AAEF,eAbC,EAaA,UAAAmK,KAAK,EAAE;AACP,wBAAI,CAACF,WAAL,GAAiB,IAAjB;;AACA,wBAAI,CAAChS,KAAL,CAAWc,IAAX,CAAgB,UAAGoR,KAAK,CAACA,KAAT,IAAmB,IAAnC,EAAyC,IAAzC,EAA+C;AAC7ClP,0BAAQ,EAAE,IADmC;AAE7CC,kCAAgB,EAAE,KAF2B;AAG7CC,oCAAkB,EAAE,OAHyB;AAI7CiP,4BAAU,EAAE;AAJiC,iBAA/C;AAOD,eAtBC;AAuBD,aAxBD,MAwBM,IAAG,KAAKkE,MAAL,KAAc,UAAjB,EAA4B;AAEhC,mBAAK7Y,UAAL,CAAgB4nB,4BAAhB,CAA6C1T,OAA7C,EACD1Q,SADC,CACS,UAAA3D,IAAI,EAAI;AACjB,oBAAIA,IAAI,IAAI,IAAZ,EAAkB;AAChB,0BAAI,CAAC2U,WAAL,GAAiB,IAAjB;;AACA,0BAAI,CAAChS,KAAL,CAAWc,IAAX,CAAgB,eAAe,IAA/B,EAAqC,IAArC,EAA2C;AACzCkC,4BAAQ,EAAE,IAD+B;AAEzCC,oCAAgB,EAAE,KAFuB;AAGzCC,sCAAkB,EAAE;AAHqB,mBAA3C;;AAKA,0BAAI,CAAC+I,SAAL,CAAe6Y,IAAf;;AACA,0BAAI,CAAC3e,GAAL,CAAS4B,YAAT;AACD;AAEF,eAbC,EAaA,UAAAmK,KAAK,EAAE;AACP,wBAAI,CAACF,WAAL,GAAiB,IAAjB;;AACA,wBAAI,CAAChS,KAAL,CAAWc,IAAX,CAAgB,UAAGoR,KAAK,CAACA,KAAT,IAAmB,IAAnC,EAAyC,IAAzC,EAA+C;AAC7ClP,0BAAQ,EAAE,IADmC;AAE7CC,kCAAgB,EAAE,KAF2B;AAG7CC,oCAAkB,EAAE,OAHyB;AAI7CiP,4BAAU,EAAE;AAJiC,iBAA/C;AAOD,eAtBC;AAwBD;AAKF;;;iBACD,sBAAalK,SAAb,EAAwB;AAAA;;AACtB3F,mBAAO,CAACC,GAAR,CAAY,YAAZ;AACA,gEAAK2F,IAAL,CACE;AACE;AACAC,kBAAI,EAAE,uBAAsBF,SAAtB,GAAiC,UAAjC,GAA8C,0BAFtD;AAGEG,8BAAgB,EAAE,IAHpB;AAIEC,gCAAkB,EAAE,SAJtB;AAKEC,+BAAiB,EAAE,MALrB;AAME;AACAC,8BAAgB,EAAE,IAPpB;AAQEC,+BAAiB,EAAE,KARrB;AAQ4B,sBAAQ;AARpC,aADF,EAWEC,IAXF,CAWQ,UAAAC,MAAM,EAAI;AAChB,kBAAGA,MAAM,CAACC,WAAP,IAAoB,IAAvB,EAA4B;AAC1B,oBAAI7K,OAAO,GAAQ,EAAnB;AACAA,uBAAO,CAACC,EAAR,GAAa,QAAI,CAACA,EAAlB;AACAD,uBAAO,CAACmK,SAAR,GAAoBA,SAApB;AACAnK,uBAAO,CAAC2C,YAAR,GAAuB,QAAI,CAACA,YAA5B;;AACA,oBAAG,QAAI,CAAC4V,MAAL,KAAc,QAAjB,EAA0B;AACxB,0BAAI,CAAC7Y,UAAL,CAAgB6nB,4BAAhB,CAA6CvnB,OAA7C,EAAsDkD,SAAtD,CAAgE,UAAC3D,IAAD,EAAU;AACxE,4BAAI,CAACsJ,YAAL,GAAoBtJ,IAApB;;AACA,4BAAI,CAAC+I,WAAL,CAAiBQ,eAAjB,CAAiC,QAAI,CAACD,YAAtC;;AACA,4BAAI,CAACP,WAAL,CAAiBS,cAAjB;;AACA,wBAAIpD,OAAO,GAAG,EAAd;;AACA,4BAAQwE,SAAR;AACE,2BAAK,MAAL;AACExE,+BAAO,GAAG,QAAV;AACA;;AACF,2BAAK,OAAL;AACEA,+BAAO,GAAG,QAAV;AACA;;AACF,2BAAK,MAAL;AACEA,+BAAO,GAAG,YAAV;AACA;;AACF;AACE;AAXJ;;AAaA,4BAAI,CAACzD,KAAL,CAAWc,IAAX,kBAA0B2C,OAA1B,oBAAkD,IAAlD,EAAwD;AACtDT,8BAAQ,EAAE,IAD4C;AAEtDC,sCAAgB,EAAE,KAFoC;AAGtDC,wCAAkB,EAAE;AAHkC,qBAAxD;AAKD,mBAvBD;AAwBD,iBAzBD,MA0BK,IAAG,QAAI,CAACmT,MAAL,KAAc,UAAjB,EAA4B;AAC/B,0BAAI,CAAC7Y,UAAL,CAAgB8nB,6BAAhB,CAA8CxnB,OAA9C,EAAuDkD,SAAvD,CAAiE,UAAC3D,IAAD,EAAU;AACzE,4BAAI,CAACsJ,YAAL,GAAoBtJ,IAApB;;AACA,4BAAI,CAAC+I,WAAL,CAAiBQ,eAAjB,CAAiC,QAAI,CAACD,YAAtC;;AACA,4BAAI,CAACP,WAAL,CAAiBS,cAAjB;;AACA,wBAAIpD,OAAO,GAAG,EAAd;;AACA,4BAAQwE,SAAR;AACE,2BAAK,MAAL;AACExE,+BAAO,GAAG,QAAV;AACA;;AACF,2BAAK,OAAL;AACEA,+BAAO,GAAG,QAAV;AACA;;AACF,2BAAK,MAAL;AACEA,+BAAO,GAAG,YAAV;AACA;;AACF;AACE;AAXJ;;AAaA,4BAAI,CAACzD,KAAL,CAAWc,IAAX,kBAA0B2C,OAA1B,oBAAkD,IAAlD,EAAwD;AACtDT,8BAAQ,EAAE,IAD4C;AAEtDC,sCAAgB,EAAE,KAFoC;AAGtDC,wCAAkB,EAAE;AAHkC,qBAAxD;AAKD,mBAvBD;AAwBD,iBAzBI,MAyBA,CAEJ;AAEF;AACF,aAzED;AA2ED;;;iBACD,yBAAgB;AAAA;;AACd,iBAAK1F,UAAL,CAAgBgI,aAAhB,GAAgCxE,SAAhC,CAA0C,UAAAgI,cAAc,EAAI;AAC1D1G,qBAAO,CAACC,GAAR,CAAYyG,cAAZ;;AACA,mBAAI,IAAI/H,CAAC,GAAC,CAAV,EAAaA,CAAC,GAAC+H,cAAc,CAAC9H,MAA9B,EAAqCD,CAAC,EAAtC,EAAyC;AACvC,oBAAG+H,cAAc,CAAC/H,CAAD,CAAd,CAAkBE,UAAlB,KAA+B,GAAlC,EAAsC;AACpC,0BAAI,CAACxD,UAAL,CAAgBuL,IAAhB,CAAqBF,cAAc,CAAC/H,CAAD,CAAd,CAAkBtD,UAAvC;AACD;AACF;;AACD2E,qBAAO,CAACC,GAAR,CAAY,QAAI,CAAC5E,UAAjB,EAP0D,CAQ1D;AACD,aATD;AAUD;;;iBACD,2BAAe;AAAA;;AACb,iBAAKH,UAAL,CAAgB+nB,yBAAhB,GAA4CvkB,SAA5C,CAAsD,UAAAwkB,YAAY,EAAG;AACnEljB,qBAAO,CAACC,GAAR,CAAYijB,YAAZ;;AACA,mBAAI,IAAIvkB,CAAC,GAAC,CAAV,EAAaA,CAAC,GAACukB,YAAY,CAACtkB,MAA5B,EAAmCD,CAAC,EAApC,EAAuC;AACrC,oBAAGukB,YAAY,CAACvkB,CAAD,CAAZ,CAAgBE,UAAhB,KAA6B,GAAhC,EAAoC;AAClC,0BAAI,CAACxD,UAAL,CAAgBuL,IAAhB,CAAqBsc,YAAY,CAACvkB,CAAD,CAAZ,CAAgBuK,UAAhB,CAA2B2P,YAAhD;AACD;AACF;AACF,aAPD;AAQD;;;iBAED,6BAAoBzZ,KAApB,EAA2BvD,IAA3B,EAAiC;AAC/B,mBAAOuD,KAAP;AACD;;;iBAED,0BAAiBA,KAAjB,EAAwBvD,IAAxB,EAA8B;AAC5B,mBAAOuD,KAAP;AACD;;;iBAED,6BAAoBA,KAApB,EAA2BvD,IAA3B,EAAiC;AAC/B,mBAAOuD,KAAP;AACD;;;iBAED,2BAAkBA,KAAlB,EAAyBvD,IAAzB,EAA+B;AAC7B,mBAAOuD,KAAP;AACD;;;iBAED,uBAAc;AAAA;;AACZ,iBAAKlE,UAAL,CAAgBuJ,WAAhB,GAA8B/F,SAA9B,CAAwC,UAAAiI,YAAY,EAAI;AACtD3G,qBAAO,CAACC,GAAR,CAAY0G,YAAZ;;AACA,mBAAI,IAAIhI,CAAC,GAAC,CAAV,EAAaA,CAAC,GAACgI,YAAY,CAAC/H,MAA5B,EAAmCD,CAAC,EAApC,EAAuC;AACrC,oBAAGgI,YAAY,CAAChI,CAAD,CAAZ,CAAgBE,UAAhB,KAA6B,GAAhC,EAAoC;AAClC,0BAAI,CAACvD,QAAL,CAAcsL,IAAd,CAAmBD,YAAY,CAAChI,CAAD,CAA/B;AACD;AACF;;AACDqB,qBAAO,CAACC,GAAR,CAAY,QAAI,CAAC3E,QAAjB,EAPsD,CAQtD;AACD,aATD;AAUD;;;iBAED,wBAAe;AAAA;;AACb,iBAAKJ,UAAL,CAAgB2L,kBAAhB,GAAqCnI,SAArC,CAA+C,UAAAoI,cAAc,EAAI;AAC/D9G,qBAAO,CAACC,GAAR,CAAY6G,cAAZ;;AACA,mBAAI,IAAInI,CAAC,GAAC,CAAV,EAAaA,CAAC,GAACmI,cAAc,CAAClI,MAA9B,EAAqCD,CAAC,EAAtC,EAAyC;AACvC,oBAAGmI,cAAc,CAACnI,CAAD,CAAd,CAAkBE,UAAlB,KAA+B,GAAlC,EAAsC;AACpC,0BAAI,CAACoD,UAAL,CAAgB2E,IAAhB,CAAqBE,cAAc,CAACnI,CAAD,CAAnC;AACD;AACF;;AACDqB,qBAAO,CAACC,GAAR,CAAY,QAAI,CAACgC,UAAjB,EAP+D,CAQ/D;AACD,aATD;AAUD;;;iBACD,gBAAO8R,MAAP,EAAe;AACb/T,mBAAO,CAACC,GAAR,CAAY8T,MAAZ;;AACA,gBAAGA,MAAM,KAAG,UAAZ,EAAuB;AACrB,mBAAKxW,MAAL,CAAYwD,QAAZ,CAAqB,CAAC,2CAAD,CAArB;AACD,aAFD,MAGA,KAAKxD,MAAL,CAAYwD,QAAZ,CAAqB,CAAC,yCAAD,CAArB;AACD;;;iBACD,oBAAW3B,KAAX,EAAiB4U,IAAjB,EAAqB;AACnB,mBAAOA,IAAP;AACD;;;iBACD,sBAAa5U,KAAb,EAAmB+jB,OAAnB,EAA0B;AACxB,mBAAOA,OAAO,CAAClhB,UAAf;AACD;;;iBACD,oBAAW7C,KAAX,EAAiBkT,KAAjB,EAAsB;AACpB,mBAAOA,KAAK,CAAChX,QAAb;AACD;;;iBACD,sBAAa8D,KAAb,EAAmB2H,MAAnB,EAAyB;AACvB,mBAAOA,MAAM,CAAC1L,UAAd;AACD;;;;;;;yBAveUymB,mB,EAAmB,yH,EAAA,uH,EAAA,mI,EAAA,gI,EAAA,4H,EAAA,wI,EAAA,sK,EAAA,mK,EAAA,+H,EAAA,2I,EAAA,8I,EAAA,0K,EAAA,0J;AAAA,O;;;cAAnBA,mB;AAAmB,wC;AAAA,iB;AAAA,gB;AAAA,qmF;AAAA;AAAA;ACxBhC;;AAAsB;;AAA0B;;AACA;;AAAQ;;AACxD;;AAGA;;AACE;;AAAwB;AAAA,qBAAS,IAAAvgB,MAAA,EAAT;AAAiB,aAAjB;;AACtB;;AAAU;;AAAU;;AACtB;;AACA;;AACE;;AACF;;AAEA;;AACA;;AACE;;AAAmB;AAAA,qBAAS,IAAAmC,MAAA,YAAT;AAAuB,aAAvB;;AAAuC;;AAAM;;AAAK;;AAAO;;AAC5E;;AAAoC;;AAAM;;AAAQ;;AAAO;;AAC3D;;AAEF;;AACA;;AAEE;;AACE;;AACE;;AAEE;;AACE;;AACF;;AACA;;AAYF;;AACA;;AACE;;AAgBA;;AAOA;;AACE;;AAA8E;;AAC1E;;AACE;;AACG;;AAAmB;;AACxB;;AACE;;AAgCA;;AAsBF;;AACA;;AACA;;AACN;;AACF;;AACA;;AAIF;;AAEA;;AACE;;AAiBA;;AASA;;AAkBA;;AASA;;AAiBA;;AAUA;;AA0BF;;AAED;;AAAqF;AAAA,qBAAgB,IAAA0f,WAAA,QAAhB;AAAmC,aAAnC;;AAAqC;;AAEzH;;AACE;;AACE;;AAQA;;AACE;;AAEW;;AACb;;AAGA;;AACE;;AAES;;AACX;;AACA;;AAKA;;AAKA;;AAKA;;AAMA;;AAIE;AAAA,qBAAS,IAAA7hB,MAAA,EAAT;AAAiB,aAAjB;;AAEA;;AACF;;AACF;;AACF;;AAEF;;AAEF;;AAEA;;;;;;AAlTgD;;AAAA;;AAU5C;;AAAA;;AAUE;;AAAA;;AAOI;;AAAA;;AAgB+B;;AAAA;;AAgBA;;AAAA;;AAUf;;AAAA;;AAGK;;AAAA;;AAgCA;;AAAA;;AAkCJ;;AAAA;;AAiBC;;AAAA;;AASD;;AAAA;;AAkBC;;AAAA;;AASD;;AAAA;;AAiBA;;AAAA;;AAUC;;AAAA;;AA4BM;;AAAA;;AAKP;;AAAA;;AAOd;;AAAA;;AACM;;AAAA;;AAMN;;AAAA;;AACM;;AAAA;;AAIL;;AAAA;;AAKA;;AAAA;;AAKA;;AAAA;;AAKA;;AAAA;;AAqBR;;AAAA;;;;;;;;;wED1ROugB,mB,EAAmB;gBAL/B,uDAK+B;iBALrB;AACT3kB,oBAAQ,EAAE,iBADD;AAETC,uBAAW,EAAE,8BAFJ;AAGTC,qBAAS,EAAE,CAAC,8BAAD;AAHF,W;AAKqB,U;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AExBhmDY;;AACE;;AACF;;;;;;AAFoF;;AAClF;;AAAA;;;;;;;;AAaR;;AACE;;AAA4C;AAAA;;AAAA;;AAAA;AAAA;;AAAwB;;AACpE;;AACF;;;;;;AAYE;;AAAkG;;AAClG;;;;;;AACA;;AAAqC;;AAAyB;;;;;;AAAzB;;AAAA;;;;;;AAIrC;;AAAkG;;AAClG;;;;;;AACA;;AAAqC;;AAAyB;;;;;;AAAzB;;AAAA;;;;;;AAIrC;;AAC+D;;AAC/D;;;;;;AACA;;AAAqC;;AAAgC;;;;;;AAAhC;;AAAA;;;;;;AAGrC;;AAAkG;;AAClG;;;;;;AACA;;AAAqC;;AAAwB;;;;;;AAAxB;;AAAA;;;;;;AAGrC;;AAAgG;;AAChG;;;;;;AACA;;AAAqC;;AAAuB;;;;;;AAAvB;;AAAA;;;;;;AAGrC;;AAAkG;;AAClG;;;;;;AACA;;AAAqC;;AAAyB;;;;;;AAAzB;;AAAA;;;;;;AAIrC;;AAAmC;;AAAM;;;;;;;;AACzC;;AACE;;AACE;;AAAgD;AAAA;;AAAA;;AAAA;;AAAA,kDAA2B,KAA3B;AAAgC,WAAhC;;AAAmC;;AAAI;;AACzF;;AAAM;;AACN;;AACE;;AAAkD;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA8B;;AAAM;;AACxF;;AACF;;;;;;AAGF;;;;;;AACA;;;;;;;;UD1GOgmB,yB;AA+BX,2CACUrhB,MADV,EAEUtE,KAFV,EAGUG,cAHV,EAIUF,MAJV,EAKUgU,GALV,EAMUpU,MANV,EAOUuG,WAPV,EAQUtG,cARV,EASUI,EATV,EAUUH,eAVV,EAU0C;AAAA;;AAThC,eAAAuE,MAAA,GAAAA,MAAA;AACA,eAAAtE,KAAA,GAAAA,KAAA;AACA,eAAAG,cAAA,GAAAA,cAAA;AACA,eAAAF,MAAA,GAAAA,MAAA;AACA,eAAAgU,GAAA,GAAAA,GAAA;AACA,eAAApU,MAAA,GAAAA,MAAA;AACA,eAAAuG,WAAA,GAAAA,WAAA;AACA,eAAAtG,cAAA,GAAAA,cAAA;AACA,eAAAI,EAAA,GAAAA,EAAA;AACA,eAAAH,eAAA,GAAAA,eAAA;AAvCV,eAAAS,mBAAA,GAA8B,CAA9B;AAEA,eAAAJ,UAAA,GAAa,IAAI,0EAAJ,EAAb;AACA,eAAAC,gBAAA,GAA6B,CAC3B,cAD2B,EAE3B,cAF2B,EAG3B,qBAH2B,EAI3B,aAJ2B,EAK3B,YAL2B,EAM3B,cAN2B,EAO3B,QAP2B,CAA7B;AAUA,eAAAC,cAAA,GAAmD,CACjD;AAAEC,eAAG,EAAE,cAAP;AAAuB1B,iBAAK,EAAE;AAA9B,WADiD,EAEjD;AAAE0B,eAAG,EAAE,cAAP;AAAuB1B,iBAAK,EAAE;AAA9B,WAFiD,CAAnD;AA2BI;;;;iBAEJ,oBAAW;AACT,iBAAKuL,aAAL;AACA,iBAAKrD,WAAL;AACA,iBAAKrC,QAAL;AACD;;;iBACD,uBAAc;AACZ,gBAAI,KAAKC,UAAT,EAAqB;AACnB,mBAAKA,UAAL,CAAgBC,WAAhB;AACD;AACF;;;iBACD,kBAAS;AACP,iBAAK/E,MAAL,CAAYwD,QAAZ,CAAqB,4CAArB;AACD;;;iBAED,iCAAwB3B,KAAxB,EAA+BvD,IAA/B,EAAqC;AACnC,mBAAOuD,KAAP;AACD;;;iBACD,sBAAa3C,KAAb,EAAoB;AAAA;;AAClBuD,mBAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBxD,KAAK,CAACyD,IAAN,CAAW,CAAX,EAAcC,KAAd,CAAoB,CAApB,CAArB;AACA,gBAAMC,IAAI,GAAS3D,KAAK,CAACyD,IAAN,CAAW,CAAX,EAAcC,KAAd,CAAoB,CAApB,CAAnB;AACA,gBAAME,UAAU,GAAG,IAAIC,QAAJ,EAAnB;AACAD,sBAAU,CAACE,MAAX,CAAkB,YAAlB,EAAgC,yBAAhC;AACAF,sBAAU,CAACE,MAAX,CAAkB,MAAlB,EAA0BH,IAA1B;AACA,iBAAKuR,GAAL,CAASnR,cAAT,CAAwBH,UAAxB,EAAoC3B,SAApC,CAA8C,UAAC+B,QAAD,EAAc;AAC1DT,qBAAO,CAACC,GAAR,CAAYQ,QAAZ;;AACA,sBAAI,CAAC2B,QAAL;;AACA,sBAAI,CAAC1E,KAAL,CAAWc,IAAX,+BAA8C,IAA9C,EAAoD;AAClDkC,wBAAQ,EAAE,IADwC;AAElDC,gCAAgB,EAAE,KAFgC;AAGlDC,kCAAkB,EAAE;AAH8B,eAApD;AAKD,aARD;AASD;;;iBAED,oBAAW;AAAA;;AACT,iBAAK+Q,GAAL,CAAS2R,mBAAT,GAA+B5kB,SAA/B,CAAyC,UAACyE,IAAD,EAAe;AACtD,kBAAIA,IAAJ,EAAU;AACRnD,uBAAO,CAACC,GAAR,CAAYkD,IAAZ;;AACA,qBAAK,IAAIxE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGwE,IAAI,CAACvE,MAAzB,EAAiCD,CAAC,EAAlC,EAAsC;AACpC,sBAAIwE,IAAI,CAACxE,CAAD,CAAJ,CAAQE,UAAR,IAAsB,GAA1B,EAA+B;AAC7BsE,wBAAI,CAACxE,CAAD,CAAJ,CAAQE,UAAR,GAAqB,cAArB;AACD;;AACD,sBAAIsE,IAAI,CAACxE,CAAD,CAAJ,CAAQE,UAAR,IAAsB,GAA1B,EAA+B;AAC7BsE,wBAAI,CAACxE,CAAD,CAAJ,CAAQE,UAAR,GAAqB,YAArB;AACD;;AACD,sBAAIsE,IAAI,CAACxE,CAAD,CAAJ,CAAQG,YAAR,IAAwB,GAA5B,EAAiC;AAC/BqE,wBAAI,CAACxE,CAAD,CAAJ,CAAQG,YAAR,GAAuB,MAAvB;AACD;;AACD,sBAAIqE,IAAI,CAACxE,CAAD,CAAJ,CAAQG,YAAR,IAAwB,GAA5B,EAAiC;AAC/BqE,wBAAI,CAACxE,CAAD,CAAJ,CAAQG,YAAR,GAAuB,QAAvB;AACD;AACF;;AACD,wBAAI,CAACykB,2BAAL,GAAmCpgB,IAAnC;AACA,wBAAI,CAACZ,KAAL,GAAa,QAAI,CAACghB,2BAAlB;AACA,wBAAI,CAACzlB,UAAL,GAAkB,IAAI,0EAAJ,CAAuBqF,IAAvB,CAAlB;AACA,wBAAI,CAACjB,KAAL,GAAaiB,IAAb;AACA,wBAAI,CAACrF,UAAL,CAAgBQ,SAAhB,GAA4B,QAAI,CAACA,SAAjC;AACA,wBAAI,CAACR,UAAL,CAAgBS,IAAhB,GAAuB,QAAI,CAACA,IAA5B;AACD;AACF,aAxBD;AAyBD;;;iBACD,uBAAc;AAAA;;AACZ,iBAAKoT,GAAL,CAASlN,WAAT,GAAuB/F,SAAvB,CAAiC,UAAC2Y,OAAD,EAAkB;AACjD,sBAAI,CAAC/b,QAAL,GAAgB+b,OAAhB;AACD,aAFD;AAGD;;;iBACD,yBAAgB;AAAA;;AACd,iBAAK1F,GAAL,CAAS7J,aAAT,GAAyBpJ,SAAzB,CAAmC,UAACyE,IAAD,EAAU;AAC3C,sBAAI,CAACiE,MAAL,GAAcjE,IAAd;AACD,aAFD;AAGD;;;iBACD,kBAASnE,QAAT,EAAmBC,CAAnB,EAAsB;AACpB,iBAAKC,WAAL,CAAiBF,QAAjB;AACA,iBAAKG,WAAL,CAAiBF,CAAjB;AACD;;;iBAED,qBAAYD,QAAZ,EAAsB;AACpB,iBAAKlB,UAAL,CAAgBuB,eAAhB,GAAkC,UAACtE,IAAD,EAAYuE,MAAZ,EAAwC;;;AACxE,qBAAO,CAAP,KAAOvE,IAAI,CAACiE,QAAD,CAAJ,MAAc,IAAd,IAAc,aAAd,GAAc,MAAd,GAAc,GAAEO,iBAAF,GAAsBC,QAAtB,CAA+BF,MAA/B,CAArB;AACD,aAFD;AAGD;;;iBAED,uBAAc;AACZ,iBAAKxB,UAAL,CAAgBwB,MAAhB,GAAyB,EAAzB;AACA,iBAAKuC,SAAL,CAAec,aAAf,CAA6BpG,KAA7B,GAAqC,EAArC;AACA,iBAAK2B,mBAAL,GAA2B,CAA3B;AACD;;;iBAED,qBAAYzB,KAAZ,EAA0B;AACxB,gBAAMgD,WAAW,GAAIhD,KAAK,CAACiD,MAAN,CAAkCnD,KAAvD;AACA,iBAAKuB,UAAL,CAAgBwB,MAAhB,GAAyBG,WAAW,CAACE,IAAZ,GAAmBC,WAAnB,EAAzB;AACD;;;iBACD,4BAAmBC,SAAnB,EAAoC;AAClC,gBAAIA,SAAS,CAACC,SAAd,EAAyB;AACvB,mBAAKtC,cAAL,CAAoBuC,QAApB,kBAAuCF,SAAS,CAACC,SAAjD;AACD,aAFD,MAEO;AACL,mBAAKtC,cAAL,CAAoBuC,QAApB,CAA6B,iBAA7B;AACD;AACF;;;iBACD,qBAA0C;AAAA,gBAAhChF,IAAgC,uEAApB,EAAoB;AAAA,gBAAhB0I,MAAgB;AACxC,iBAAKlG,MAAL,CAAYwD,QAAZ,CAAqB,CAAC,0CAAD,CAArB,EAAmE;AACjEC,yBAAW,EAAE;AAAEvF,kBAAE,EAAEV,IAAI,CAACU,EAAX;AAAegI,sBAAM,EAAEA;AAAvB;AADoD,aAAnE;AAGD;;;iBAED,qBAAY;AACV,iBAAKhG,eAAL,CAAqBoD,aAArB,CACE,4BADF,EAEE,KAAKqB,KAFP;AAID;;;iBAED,oCAA2B;AAAA;;AACzB,iBAAKyP,GAAL,CAASE,uBAAT,CAAiC,KAAKpW,EAAtC,EAA0CiD,SAA1C,CAAoD,UAACyE,IAAD,EAAU;AAC5D,sBAAI,CAACqgB,oBAAL,GAA4BrgB,IAA5B;AACD,aAFD;AAGA,iBAAKW,WAAL,CAAiB0T,YAAjB,CAA8B,KAAKgM,oBAAnC;AACA,iBAAKjmB,MAAL,CAAYwD,QAAZ,CAAqB,yDAC8B,KAAKtF,EADnC,EAArB;AAGD;;;iBAED,kBAAS;AACP,iBAAK8B,MAAL,CAAYwD,QAAZ,CAAqB,sBAArB;AACD;;;iBAED,oBAAWyJ,GAAX,EAAgB;AAAA;;AACd,iBAAK3M,cAAL,CACGqD,OADH,CACW;AAAEC,qBAAO,mBAAYqJ,GAAG,CAACwH,YAAhB;AAAT,aADX,EAEGtT,SAFH,CAEa,UAAC2C,GAAD,EAAS;AAClB,kBAAIA,GAAJ,EAAS;AACP,wBAAI,CAAC1D,MAAL,CAAYa,IAAZ;;AACA,wBAAI,CAACmT,GAAL,CAASQ,sBAAT,CAAgC3H,GAAG,CAAC/O,EAApC,EAAwCiD,SAAxC,CACE,UAAC2C,GAAD,EAAc,CAAE,CADlB,EAEE,UAACiC,GAAD,EAAc;AACX,oBAAD;;AACA,sBAAIA,GAAG,CAACC,MAAJ,IAAc,GAAlB,EAAuB;AACrB,4BAAI,CAAC5F,MAAL,CAAYnB,KAAZ;;AACA,4BAAI,CAAC4F,QAAL;;AACA,4BAAI,CAAC1E,KAAL,CAAWc,IAAX,CAAgB,iBAAhB,EAAmC,IAAnC,EAAyC;AAAEkC,8BAAQ,EAAE;AAAZ,qBAAzC;AACD;AACF,iBATH;AAWD;AACF,aAjBH;AAkBD;;;;;;;yBA7LU2iB,yB,EAAyB,mI,EAAA,wI,EAAA,sK,EAAA,mK,EAAA,2I,EAAA,uH,EAAA,6I,EAAA,iI,EAAA,0J,EAAA,sJ;AAAA,O;;;cAAzBA,yB;AAAyB,8C;AAAA;AAAA;;;sEAoBzB,+D,EAAO,I;;sEACP,yE,EAAY,I;;;;;;;;;;;;;;;;;;ACzCzB;;AAAsB;;AAA0B;;AAA2D;;AAC3G;;AACA;;AACE;;AAAwB;AAAA,qBAAS,IAAA9hB,MAAA,EAAT;AAAiB,aAAjB;;AACtB;;AAAU;;AAAU;;AACtB;;AACA;;AACE;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AACE;;AACE;;AACE;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AAEF;;AACF;;AACF;;AACA;;AACA;;AACE;;AAAU;;AAAS;;AACrB;;AACA;;AACE;;AACE;;AAAoC;;AAAM;;AAC1C;;AAE0B;AAAA,qBAAU,IAAAC,YAAA,QAAV;AAA8B,aAA9B;;AAF1B;;AAGF;;AACA;;AAAQ;AAAA,qBAAS,IAAAkW,SAAA,EAAT;AAAoB,aAApB;;AACN;;AAAM;;AAAQ;;AAChB;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AACE;;AAAW;;AAAS;;AACpB;;AAAsC;AAAA;AAAA;;AAEpC;;AAAsB;;AAAM;;AAC5B;;AAGF;;AACF;;AACF;;AACA;;AACE;;AACE;;AAAW;;AAAM;;AACjB;;AAA2B;AAAA;;AAAA;;AAAA,qBAAS,IAAAhW,QAAA,mBAAT;AAAwC,aAAxC;;AAA3B;;AAEA;;AAAoB;;AAAM;;AAC5B;;AACF;;AACA;;AAIA;;AACE;;AAA0D;AAAA,qBAAS,IAAAgC,MAAA,EAAT;AAAiB,aAAjB;;AAAmB;;AAC7E;;AACF;;AAEF;;AACF;;AACA;;AACE;;AAA4D;AAAA,qBAAiB,IAAA9B,kBAAA,QAAjB;AAA2C,aAA3C;;AAE1D;;AACE;;AAEA;;AACF;;AAEA;;AACE;;AAEA;;AACF;;AAEA;;AACE;;AAGA;;AACF;;AACA;;AACE;;AAEA;;AACF;;AACA;;AACE;;AAEA;;AACF;;AACA;;AACE;;AAEA;;AACF;;AAEA;;AACE;;AACA;;AAQF;;AAEA;;AACA;;AACF;;AACA;;AACF;;AACF;;;;;;;;;;AAtG4B;;AAAA;;AAoBoB;;AAAA;;AAGL;;AAAA,oGAAmB,cAAnB,EAAmB,2BAAnB;;AAc/B;;AAAA;;AAYkB;;AAAA;;AAgDP;;AAAA;;AACa;;AAAA;;AAEH;;AAAA;;;;;;;;;wED5GpByhB,yB,EAAyB;gBALrC,uDAKqC;iBAL3B;AACTlmB,oBAAQ,EAAE,uBADD;AAETC,uBAAW,EAAE,oCAFJ;AAGTC,qBAAS,EAAE,CAAC,oCAAD;AAHF,W;AAK2B,U;;;;;;;;;;;;;;;;;;;;;;;AACZwE,mBAAS,EAAE,CAAF;kBAAhC,uDAAgC;mBAAtB,W;AAAsB,WAAE,C;AAmBftD,cAAI,EAAE,CAAF;kBAAvB,uDAAuB;mBAAb,+D;AAAa,WAAE,C;AACDD,mBAAS,EAAE,CAAF;kBAAjC,uDAAiC;mBAAvB,yE;AAAuB,WAAE;;;;;;;;;;;;;;;;;;;AEzCtC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACAiG;;AAAuB;;AAAG;;;;;;AAAQ;;AAAsB;;AAAI;;;;;;AAK3J;;AAAqC;;AAAoB;;;;;;AACzD;;AAAoC;;AAAqB;;;;;;AA2BnD;;AACE;;AAAW;;AAAa;;AACxB;;AACE;;AAOF;;AACF;;;;;;AANiB;;AAAA,mGAAwB,aAAxB,EAAwB,sCAAxB;;;;;;AAeb;;AACE;;AACF;;;;;;AAF2E;;AACzE;;AAAA;;;;;;AATN;;AACE;;AAAW;;AAAa;;AACxB;;AACE;;AAKA;;AAGA;;AACF;;AACF;;;;;;AARM;;AAAA;;AAG6B;;AAAA,oGAAkB,cAAlB,EAAkB,uBAAlB;;;;;;AAiB/B;;AACE;;AACE;;AACF;;AACF;;;;;;AAkBA;;AACE;;AAAO;;AAAsB;;AAC/B;;;;;;AACA;;AACE;;AAAO;;AAAyE;;AAClF;;;;;;AAgBA;;AACE;;AAAO;;AAAuB;;AAChC;;;;;;AACA;;AACE;;AAAO;;AAA0E;;AACnF;;;;;;AAaE;;AAIE;;AACF;;;;;;AAHE;;AAEA;;AAAA;;;;;;AAGJ;;AACE;;AAAO;;AAA0B;;AACnC;;;;;;AAlBJ;;AACE;;AAAW;;AAAe;;AAC1B;;AACE;;AAKE;;AAAY;;AAAM;;AAClB;;AAMF;;AACA;;AAGF;;AACF;;;;;;AAfM;;AAAA;;AAKuB;;AAAA,kGAAe,cAAf,EAAe,sBAAf;;AAMb;;AAAA;;;;;;AAKhB;;AACE;;AAAW;;AAAe;;AAC1B;;AACE;;AAOF;;AACF;;;;;;AANiB;;AAAA,oGAAwB,aAAxB,EAAwB,yCAAxB;;;;;;AAiBb;;AACE;;AAAO;;AAA6B;;AACtC;;;;;;AAXJ;;AACE;;AAAW;;AAAkB;;AAC7B;;AACE;;AAIE;;AAAiC;;AAAQ;;AAC3C;;AACA;;AAGF;;AACF;;;;;;AARM;;AAAA;;AAEY;;AAAA;;AAEF;;AAAA;;;;;;AAKhB;;AACE;;AAAW;;AAAkB;;AAC7B;;AACE;;AAOF;;AACF;;;;;;AANiB;;AAAA,oGAAwB,aAAxB,EAAwB,4CAAxB;;;;;;AAoBjB;;AACE;;AAAW;;AAAuB;;AAClC;;AACE;;AAIE;;AAAsC;;AAAI;;AAC1C;;AAA4B;;AAAG;;AACjC;;AACF;;AACF;;;;;;AANM;;AAAA;;AAEY;;AAAA;;AACA;;AAAA;;;;;;AAIlB;;AACE;;AAAW;;AAAuB;;AAClC;;AACE;;AAOF;;AACF;;;;;;AANiB;;AAAA,oGAAwB,aAAxB,EAAwB,0CAAxB;;;;;;AAuCb;;AACE;;AAAO;;AAAsB;;AAC/B;;;;;;AA0BI;;AACE;;AACF;;;;;;AAF8C;;AAC5C;;AAAA;;;;;;AAGL;;AACC;;AAAO;;AAAoB;;AAC7B;;;;;;;;AAhBJ;;AACE;;AAAW;;AAAS;;AACpB;;AACG;;AAIG;AAAA;;AAAA;;AAAA;AAAA;;AAGA;;AAGH;;AACA;;AAGH;;AACF;;;;;;AAbQ;;AAAA;;AAKgC;;AAAA;;AAIvB;;AAAA;;;;;;AAKjB;;AACE;;AAAW;;AAAU;;AACrB;;AACE;;AAOF;;AACF;;;;;;AANiB;;AAAA,oGAAwB,aAAxB,EAAwB,oCAAxB;;;;;;AAiBX;;AACE;;AACF;;;;;;AAF8D;;AAC5D;;AAAA;;;;;;AAGJ;;AACE;;AAAO;;AAAkB;;AAC3B;;;;;;;;AAfJ;;AACE;;AAAW;;AAAO;;AAClB;;AACE;;AAGE;AAAA;;AAAA;;AAAA;AAAA;;AAGA;;AAGF;;AACA;;AAGF;;AACF;;;;;;AAZM;;AAAA;;AAI8B;;AAAA,8FAAW,cAAX,EAAW,mBAAX;;AAIpB;;AAAA;;;;;;AAKhB;;AACE;;AAAW;;AAAQ;;AACnB;;AACE;;AAOF;;AACF;;;;;;AANiB;;AAAA,oGAAwB,aAAxB,EAAwB,kCAAxB;;;;;;AAgBX;;AACE;;AACF;;;;;;AAF4D;;AAC1D;;AAAA;;;;;;AAGJ;;AACE;;AAAO;;AAAiB;;AAC1B;;;;;;AAdJ;;AACE;;AAAW;;AAAM;;AACjB;;AACE;;AAKE;;AAGF;;AACA;;AAGF;;AACF;;;;;;AAXM;;AAAA;;AAG6B;;AAAA,8FAAW,cAAX,EAAW,kBAAX;;AAInB;;AAAA;;;;;;AAKhB;;AACE;;AAAW;;AAAO;;AAClB;;AACE;;AAOF;;AACF;;;;;;AANiB;;AAAA,oGAAwB,aAAxB,EAAwB,iCAAxB;;;;;;AAsBb;;AACE;;AAAO;;AAAoB;;AAC7B;;;;;;AAEA;;AACE;;AAAO;;AAA2B;;AACpC;;;;;;AAuBA;;AACE;;AAAO;;AAA0B;;AACnC;;;;;;;;AAqBF;;AAIE;AAAA;;AAAA;;AAAA;AAAA;;AAEF;;AACA;;;;;;AALE;;;;;;;;AAOA;;AAIA;AAAA;;AAAA;;AAAA;AAAA;;AAEF;;AACA;;;;;;AALE;;;;;;;;AAWA;;AAAwE;AAAA;;AAAA;;AAAA;AAAA;;AACtE;;AACF;;;;;;;;AAGA;;AAAwE;AAAA;;AAAA;;AAAA,wCAAsB,MAAtB;AAA4B,WAA5B;;AACtE;;AACF;;;;;;AAHF;;AACE;;AAES;;AACX;;;;;;AAJuE;;AAC5D;;AAAA;;;;;;;;AAKT;;AAAuE;AAAA;;AAAA;;AAAA,wCAAsB,MAAtB;AAA4B,WAA5B;;AACrE;;AACF;;;;;;AAHF;;AACE;;AAES;;AACX;;;;;;AAJwF;;AAC7E;;AAAA;;;;;;;;AAKT;;AAAuE;AAAA;;AAAA;;AAAA,wCAAsB,OAAtB;AAA6B,WAA7B;;AACrE;;AACF;;;;;;AAHF;;AACE;;AAES;;AACX;;;;;;AAJuF;;AAC5E;;AAAA;;;;;;;;AAKT;;AAAuE;AAAA;;AAAA;;AAAA;AAAA;;AACrE;;AACF;;;;;;AAHF;;AACE;;AAEU;;AACZ;;;;;;AAJ+C;;AACpC;;AAAA;;;;;;AAuBrB;;AACE;;AACF;;;;UD7damlB,oB;AAoBX,sCAAoBvoB,UAApB,EACUD,EADV,EAEU6I,WAFV,EAGUlG,EAHV,EAIUD,MAJV,EAKUD,KALV,EAMUH,MANV,EAOUwG,KAPV,EAO+B;AAAA;;AAPX,eAAA7I,UAAA,GAAAA,UAAA;AACV,eAAAD,EAAA,GAAAA,EAAA;AACA,eAAA6I,WAAA,GAAAA,WAAA;AACA,eAAAlG,EAAA,GAAAA,EAAA;AACA,eAAAD,MAAA,GAAAA,MAAA;AACA,eAAAD,KAAA,GAAAA,KAAA;AACA,eAAAH,MAAA,GAAAA,MAAA;AACA,eAAAwG,KAAA,GAAAA,KAAA;AAzBV,eAAA4V,UAAA,GAAsB,EAAtB;AACA,eAAApO,SAAA,GAAiB,EAAjB;AACA,eAAAC,MAAA,GAAc,EAAd;AACA,eAAAC,MAAA,GAAc,EAAd;AACA,eAAAiY,QAAA,GAAgB,EAAhB;AAEA,eAAA9J,aAAA,GAAqB,EAArB;AACA,eAAA+J,iBAAA,GAA6B,KAA7B;AAKA,eAAAlgB,MAAA,GAAkB,KAAlB;AACA,eAAAO,WAAA,GAAuB,IAAvB;AAaK;;;;iBAEL,oBAAQ;AAAA;;AACN,iBAAKmD,WAAL,GAAmB,KAAKvJ,EAAL,CAAQQ,OAAR,CAAgB,YAAhB,CAAnB;AACA,iBAAK0F,WAAL,CAAiB8f,WAAjB,CAA6BllB,SAA7B,CAAuC,UAAA3D,IAAI,EAAG;AAC9C,sBAAI,CAAC2oB,QAAL,GAAgB,OAAO,QAAI,CAACA,QAAZ,KAAyB,QAAzB,GAAoC3oB,IAApC,GAA2C,EAA3D;AACA,sBAAI,CAACU,EAAL,GAAU,QAAI,CAACioB,QAAL,CAAcjoB,EAAxB;;AACA,kBAAG,QAAI,CAACA,EAAR,EAAW;AACT,wBAAI,CAACgI,MAAL,GAAc,IAAd;AACD,eAFD,MAGI;AACF,wBAAI,CAACA,MAAL,GAAc,KAAd;AACA,wBAAI,CAACO,WAAL,GAAiB,KAAjB;AACD;;AACD,kBAAI,QAAI,CAAC0f,QAAL,CAAc7kB,UAAd,IAA0B,cAA9B,EAA8C;AAC5C,wBAAI,CAAC6kB,QAAL,CAAcxe,QAAd,GAAwB,EAAxB;AACA,wBAAI,CAACwe,QAAL,CAAcze,MAAd,GAAqB,EAArB;AACD;;AACDjF,qBAAO,CAACC,GAAR,CAAY,gBAAZ,EAA6B,QAAI,CAACyjB,QAAlC;AACA,sBAAI,CAACrf,YAAL,GAAoB,QAAI,CAACqf,QAAzB;;AACA,sBAAI,CAAC5f,WAAL,CAAiBQ,eAAjB,CAAiC,QAAI,CAACD,YAAtC;AACC,aAjBD;AAmBA,iBAAKyV,iBAAL;AACA,iBAAK/N,cAAL,CAAoB,SAApB;AACA,iBAAK8N,iBAAL;AACA,iBAAK1b,YAAL,GAAoB,KAAKP,EAAL,CAAQQ,OAAR,CAAgB,YAAhB,EAA8BoG,QAAlD;AAEA,iBAAKqf,aAAL,CAAmB,KAAKH,QAAxB;AACD;;;iBAED,uBAAc7nB,IAAd,EAAoB;AAClB,iBAAKioB,QAAL,GAAgB,KAAK7oB,EAAL,CAAQc,KAAR,CAAc;AAC5BT,sBAAQ,EAAE,CAACO,IAAI,CAACP,QAAL,IAAiB,EAAlB,EAAsB,0DAAWoB,OAAX,CAAmB,+CAAnB,CAAtB,CADkB;AAE5BjB,gBAAE,EAAE,CAACI,IAAI,CAACJ,EAAL,GAAUI,IAAI,CAACJ,EAAf,GAAoB,IAArB,CAFwB;AAG5BsoB,0BAAY,EAAE,CAACloB,IAAI,CAACkoB,YAAL,IAAqB,EAAtB,EAA0B,0DAAW9nB,QAArC,CAHc;AAI5BkV,sBAAQ,EAAE,CAACtV,IAAI,CAACsV,QAAL,IAAiB,EAAlB,EAAsB,0DAAWlV,QAAjC,CAJkB;AAK5B+nB,6BAAe,EAAE,CAACnoB,IAAI,CAACmoB,eAAL,IAAwB,EAAzB,EAA6B,0DAAW/nB,QAAxC,CALW;AAM5BiQ,2BAAa,EAAE,CAACrQ,IAAI,CAACqQ,aAAL,IAAsB,EAAvB,CANa;AAO5BjK,wBAAU,EAAE,CAACpG,IAAI,CAACoG,UAAL,IAAmB,EAApB,EAAwB,0DAAWhG,QAAnC,CAPgB;AAQ5BgoB,2BAAa,EAAE,CAACpoB,IAAI,CAACooB,aAAL,IAAsB,EAAvB,CARa;AAS5B;AACAzE,sBAAQ,EAAE,CAAC3jB,IAAI,CAAC2jB,QAAL,IAAiB,EAAlB,EAAsB,0DAAWvjB,QAAjC,CAVkB;AAW5BwjB,sBAAQ,EAAE,CAAC5jB,IAAI,CAAC4jB,QAAL,IAAiB,EAAlB,CAXkB;AAY5BnT,qBAAO,EAAE,CAACzQ,IAAI,CAACyQ,OAAL,IAAgB,EAAjB,EAAqB,0DAAWrQ,QAAhC,CAZmB;AAa5BsN,mBAAK,EAAE,CAAC1N,IAAI,CAAC0N,KAAL,IAAc,EAAf,EAAmB,0DAAWtN,QAA9B,CAbqB;AAc5BgF,kBAAI,EAAE,CAACpF,IAAI,CAACoF,IAAL,IAAa,EAAd,EAAkB,0DAAWhF,QAA7B,CAdsB;AAe5BsQ,qBAAO,EAAE,CAAC1Q,IAAI,CAAC0Q,OAAL,IAAgB,EAAjB,EAAqB,0DAAWtQ,QAAhC,CAfmB;AAgB5BoQ,uBAAS,EAAE,CAACxQ,IAAI,CAACwQ,SAAL,IAAkB,EAAnB,CAhBiB;AAiB5BF,oBAAM,EAAE,CAACtQ,IAAI,CAACsQ,MAAL,IAAe,EAAhB,EAAoB,0DAAWlQ,QAA/B,CAjBoB;AAkB5BioB,uBAAS,EAAE,CAACroB,IAAI,GAAGA,IAAI,CAACqoB,SAAR,GAAoB,EAAzB,EAA6B,0DAAWxnB,OAAX,CAAmB,+CAAnB,CAA7B;AAlBiB,aAAd,CAAhB;;AAqBA,gBAAIb,IAAI,CAACyQ,OAAT,EAAkB;AAChB,mBAAKE,YAAL,CAAkB3Q,IAAI,CAACyQ,OAAvB;AACA,mBAAKG,WAAL,CAAiB5Q,IAAI,CAAC0N,KAAtB;AACD;AACF;;;iBACD,sBAAa5D,SAAb,EAAsB;AAAA;;AACpB,+DAAKC,IAAL,CACE;AACE;AACAC,kBAAI,EAAE,uBAAsBF,SAAtB,GAAiC,UAAjC,GAA8C,0BAFtD;AAGEG,8BAAgB,EAAE,IAHpB;AAIEC,gCAAkB,EAAE,SAJtB;AAKEC,+BAAiB,EAAE,MALrB;AAME;AACAC,8BAAgB,EAAE,IAPpB;AAQEC,+BAAiB,EAAE,KARrB;AAQ4B,sBAAQ;AARpC,aADF,EAWEC,IAXF,CAWQ,UAAAC,MAAM,EAAI;AAChB,kBAAGA,MAAM,CAACC,WAAP,IAAoB,IAAvB,EAA4B;AAC1B,wBAAI,CAACnL,UAAL,CAAgBkW,UAAhB,CAA2B,QAAI,CAAC/M,YAAL,CAAkB5I,EAA7C,EAAgD,QAAI,CAAC0L,WAAL,CAAiB3C,QAAjE,EACC9F,SADD,CACW,UAAA3D,IAAI,EAAI;AACjB,0BAAI,CAACwC,MAAL,CAAYwD,QAAZ,CAAqB,+BAArB;AACD,iBAHD,EAIA,UAAAuC,GAAG,EAAE;AACH,sBAAIA,GAAG,CAACC,MAAJ,IAAc,GAAlB,EAAuB;AACrB,4BAAI,CAAC7F,KAAL,CAAWc,IAAX,CAAgB,6BAAhB,EAA+C,IAA/C,EAAqD;AACnDkC,8BAAQ,EAAE,IADyC;AAEnDC,sCAAgB,EAAE,KAFiC;AAGnDC,wCAAkB,EAAE;AAH+B,qBAArD;AAKD;;AACD,0BAAI,CAACrD,MAAL,CAAYwD,QAAZ,CAAqB,+BAArB;AAEH,iBAdC;AAeD;AAAC,aA5BJ;AAgCD;;;iBAEH,sBAAU;AACV,iBAAKiD,WAAL,GAAiB,KAAjB;AACC;;;iBAEC,sBAAa2B,SAAb,EAAwB;AAAA;;AACtB,+DAAKC,IAAL,CACE;AACE;AACAC,kBAAI,EAAE,uBAAsBF,SAAtB,GAAiC,UAAjC,GAA8C,0BAFtD;AAGEG,8BAAgB,EAAE,IAHpB;AAIEC,gCAAkB,EAAE,SAJtB;AAKEC,+BAAiB,EAAE,MALrB;AAME;AACAC,8BAAgB,EAAE,IAPpB;AAQEC,+BAAiB,EAAE,KARrB;AAQ4B,sBAAQ;AARpC,aADF,EAWEC,IAXF,CAWQ,UAAAC,MAAM,EAAI;AAChB,kBAAGA,MAAM,CAACC,WAAP,IAAoB,IAAvB,EAA4B;AAC1B,oBAAI7K,OAAO,GAAQ,EAAnB;AACAA,uBAAO,CAACC,EAAR,GAAa,QAAI,CAACA,EAAlB;AACAD,uBAAO,CAACmK,SAAR,GAAoBA,SAApB;AACAnK,uBAAO,CAAC2C,YAAR,GAAuB,QAAI,CAACA,YAA5B;;AACA,wBAAI,CAACjD,UAAL,CAAgBipB,mBAAhB,CAAoC3oB,OAApC,EAA6CkD,SAA7C,CAAuD,UAAC3D,IAAD,EAAU;AAC/D,sBAAIA,IAAI,CAAC8D,UAAL,IAAiB,GAArB,EAA0B;AACxB9D,wBAAI,CAACmK,QAAL,GAAgB,EAAhB;AACAnK,wBAAI,CAACkK,MAAL,GAAc,EAAd;AACC;;AACH,0BAAI,CAACZ,YAAL,GAAoBtJ,IAApB;;AACA,0BAAI,CAAC+I,WAAL,CAAiBQ,eAAjB,CAAiC,QAAI,CAACD,YAAtC;;AACA,0BAAI,CAACP,WAAL,CAAiBS,cAAjB;;AAEA,sBAAIpD,OAAO,GAAG,EAAd;;AACA,0BAAQwE,SAAR;AACE,yBAAK,MAAL;AACExE,6BAAO,GAAG,QAAV;AACA;;AACF,yBAAK,OAAL;AACEA,6BAAO,GAAG,QAAV;AACA;;AACF,yBAAK,MAAL;AACEA,6BAAO,GAAG,YAAV;AACA;;AACF;AACE;AAXJ;;AAaA,0BAAI,CAACzD,KAAL,CAAWc,IAAX,kBAA0B2C,OAA1B,sBAAoD,IAApD,EAA0D;AACxDT,4BAAQ,EAAE,IAD8C;AAExDC,oCAAgB,EAAE,KAFsC;AAGxDC,sCAAkB,EAAE;AAHoC,mBAA1D;AAKD,iBA5BD;AA6BD;AAAC,aA9CJ;AAgDD;;;iBAGD,6BAAiB;AAAA;;AACf;AACA;AACA;AAEA;AACA,iBAAK1F,UAAL,CAAgB+N,kBAAhB,GAAqCvK,SAArC,CAA+C,UAAA3D,IAAI,EAAE;AACnDiF,qBAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoClF,IAApC;;AACA,mBAAI,IAAI4D,CAAC,GAAC,CAAV,EAAaA,CAAC,GAAC5D,IAAI,CAAC6D,MAApB,EAA2BD,CAAC,EAA5B,EAA+B;AAC7B,wBAAI,CAACgb,UAAL,CAAgB/S,IAAhB,CAAqB7L,IAAI,CAAC4D,CAAD,CAAzB;AACD;;AACDqB,qBAAO,CAACC,GAAR,CAAY,QAAI,CAAC0Z,UAAjB;AACD,aAND;AAOD,W,CAED;AACA;AACA;AACA;AACA;;;;iBACA,wBAAe1b,GAAf,EAA4B;AAAA;;AAC1B,iBAAK/C,UAAL,CAAgBwR,eAAhB,GAAkChO,SAAlC,CAA4C,UAAC3D,IAAD,EAAe;AACzDiF,qBAAO,CAACC,GAAR,CAAY,MAAZ,EAAmBlF,IAAnB;;AACA,mBAAI,IAAI4D,CAAC,GAAC,CAAV,EAAaA,CAAC,GAAC5D,IAAI,CAAC6D,MAApB,EAA2BD,CAAC,EAA5B,EAA+B;AAC7B,oBAAG5D,IAAI,CAAC4D,CAAD,CAAJ,CAAQE,UAAR,KAAqB,GAAxB,EAA4B;AAC1BmB,yBAAO,CAACC,GAAR,CAAYlF,IAAI,CAAC4D,CAAD,CAAhB;;AACA,0BAAI,CAAC4M,SAAL,CAAe3E,IAAf,CAAoB7L,IAAI,CAAC4D,CAAD,CAAJ,CAAQgO,WAA5B;AAED;AACF;;AAAA3M,qBAAO,CAACC,GAAR,CAAY,QAAI,CAACsL,SAAjB;AACF,aATD;AAUD;;;iBACD,sBAAaoB,WAAb,EAAwB;AAAA;;AACtB,iBAAKzR,UAAL,CAAgBwR,eAAhB,GAAkChO,SAAlC,CAA4C,UAAC3D,IAAD,EAAe;AACzD,mBAAI,IAAI4D,CAAC,GAAC,CAAV,EAAaA,CAAC,GAAC5D,IAAI,CAAC6D,MAApB,EAA2BD,CAAC,EAA5B,EAA+B;AAC7B,oBAAG5D,IAAI,CAAC4D,CAAD,CAAJ,CAAQgO,WAAR,KAAwBA,WAA3B,EAAuC;AACrC,0BAAI,CAACzR,UAAL,CAAgB0R,iBAAhB,CAAkC7R,IAAI,CAAC4D,CAAD,CAAJ,CAAQlD,EAA1C,EAA8CiD,SAA9C,CAAwD,UAACyE,IAAD,EAAe;AACvE,4BAAI,CAACqI,MAAL,GAAcrI,IAAd;AACC,mBAFD;;AAGA;AACD;AACF;AACF,aATD;AAUC;;;iBAIH,qBAAYoG,KAAZ,EAAwB;AAAA;;AACtB,gBAAI0C,UAAU,GAAG,MAAjB;AACA,iBAAK/Q,UAAL,CAAgB4R,kBAAhB,CAAmCb,UAAnC,EAA+C1C,KAA/C,EAAsD7K,SAAtD,CAAgE,UAAC3D,IAAD,EAAU;AACxE,sBAAI,CAAC0Q,MAAL,GAAc1Q,IAAd;AACD,aAFD;AAGD;;;iBAED,6BAAoB;AAAA;;AAClB,iBAAKG,UAAL,CAAgB2e,iBAAhB,GAAoCnb,SAApC,CAA8C,UAAC3D,IAAD,EAAU;AACtDiF,qBAAO,CAACC,GAAR,CAAYlF,IAAZ;;AACA,mBAAI,IAAI4D,CAAC,GAAC,CAAV,EAAaA,CAAC,GAAC5D,IAAI,CAAC6D,MAApB,EAA2BD,CAAC,EAA5B,EAA+B;AAC7B,oBAAG5D,IAAI,CAAC4D,CAAD,CAAJ,CAAQE,UAAR,KAAqB,GAAxB,EAA4B;AAC1B,0BAAI,CAAC+a,aAAL,CAAmBhT,IAAnB,CAAwB7L,IAAI,CAAC4D,CAAD,CAA5B;AAED;AACF,eAPqD,CAQtD;;AACD,aATD;AAUD;;;iBAED,oBAAW;AAAA;;AACT,gBAAI,KAAKmlB,QAAL,CAAcvb,OAAlB,EAA2B;AACzB;AACD,aAFD,MAEO;AACL,kBAAI/M,OAAO,GAAQ,EAAnB;AACAA,qBAAO,GAAG,KAAKsoB,QAAL,CAAcvnB,KAAxB;;AACA,kBAAI,KAAKd,EAAT,EAAa;AACXD,uBAAO,CAACC,EAAR,GAAa,KAAKA,EAAlB;AACD,eALI,CAMP;;;AACED,qBAAO,CAAC2C,YAAR,GAAuB,KAAKA,YAA5B;AACA,mBAAKR,MAAL,CAAYa,IAAZ;AACA,mBAAKtD,UAAL,CAAgBkpB,kBAAhB,CAAmC5oB,OAAnC,EAA4C,KAAK2L,WAAL,CAAiB3C,QAA7D,EACG9F,SADH,CACa,UAAA3D,IAAI,EAAI;AACjB,wBAAI,CAAC4C,MAAL,CAAYnB,KAAZ;;AACA,wBAAI,CAACe,MAAL,CAAYwD,QAAZ,CAAqB,CAAC,6BAAD,CAArB,EAAsDoF,IAAtD,CAA2D,UAAA0C,CAAC,EAAI;AAC9D,0BAAI,CAACnL,KAAL,CAAWc,IAAX,CAAgB,0BAAhB,EAA4C,IAA5C,EACE;AACEkC,4BAAQ,EAAE,IADZ;AAEEC,oCAAgB,EAAE,KAFpB;AAGEC,sCAAkB,EAAE;AAHtB,mBADF;AAMD,iBAPD;AAQD,eAXH,EAWK,UAAC0C,GAAD,EAAc;AACf,wBAAI,CAAC3F,MAAL,CAAYnB,KAAZ;;AACA,wBAAI,CAACkB,KAAL,CAAWc,IAAX,WAA0B,IAA1B,EAAgC;AAAEkC,0BAAQ,EAAE;AAAZ,iBAAhC;AACD,eAdH;AAeD;AACF;;;iBACD,oBAAWjE,KAAX,EAAuB;AACrB,gBAAMC,OAAO,GAAG,aAAhB;AACA,gBAAIC,SAAS,GAAGC,MAAM,CAACC,YAAP,CAAoBJ,KAAK,CAACK,QAA1B,CAAhB;;AACA,gBAAI,CAACJ,OAAO,CAACK,IAAR,CAAaJ,SAAb,CAAL,EAA8B;AAC5BF,mBAAK,CAACO,cAAN;AACD;AACF;;;iBACD,+BAAsBP,KAAtB,EAA+B;AAE3B,gBAAI6L,OAAO,GAAI7L,KAAK,CAACmjB,KAAP,GAAgBnjB,KAAK,CAACmjB,KAAtB,GAA8BnjB,KAAK,CAAC6L,OAAlD;AACA,gBAAI,CAACA,OAAO,GAAG,EAAV,IAAgBA,OAAO,GAAG,EAA3B,MAAmCA,OAAO,GAAG,EAAV,IAAgBA,OAAO,GAAG,GAA7D,KAAqEA,OAAO,IAAI,EAApF,EAEA,OAAO,KAAP;AACI,mBAAO,IAAP;AACP;;;iBAED,8BAAqB7L,KAArB,EAA4B;AAC1B,gBAAI4L,GAAG,GAAGzL,MAAM,CAACC,YAAP,CAAoBJ,KAAK,CAAC6L,OAA1B,CAAV;;AACA,gBAAI,cAAcvL,IAAd,CAAmBsL,GAAnB,CAAJ,EAA6B;AAC3B,qBAAO,IAAP;AACD,aAFD,MAEO;AACL5L,mBAAK,CAACO,cAAN;AACA,qBAAO,KAAP;AACD;AACF;;;iBAED,uBAAc;AACZ;AACA;AACA,iBAAK8G,WAAL,CAAiBoN,aAAjB,CAA+B,EAA/B;AACD;;;iBACD,kBAAS;AACP,iBAAK3T,MAAL,CAAYwD,QAAZ,CAAqB,+BAArB;AACD;;;iBAED,mBAAUtE,KAAV,EAAsB;AACpB,gBAAMC,OAAO,GAAG,OAAhB;AACA,gBAAIC,SAAS,GAAGC,MAAM,CAACC,YAAP,CAAoBJ,KAAK,CAACK,QAA1B,CAAhB;;AACA,gBAAI,CAACJ,OAAO,CAACK,IAAR,CAAaJ,SAAb,CAAL,EAA8B;AAC5BF,mBAAK,CAACO,cAAN;AAED;AACF;;;iBACD,wBAAeP,KAAf,EAAsB;AACpB,gBAAIkX,KAAK,GAAG,CAAZ;AAAA,gBAAe0Q,MAAM,GAAG5nB,KAAK,CAACiD,MAAN,CAAanD,KAArC;;AACA,gBAAI8nB,MAAM,IAAI,EAAd,EAAkB;AAChB,mBAAK,IAAI1lB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG0lB,MAAM,CAACzlB,MAA3B,EAAmCD,CAAC,EAApC,EAAwC;AACtC,oBAAI,KAAK0lB,MAAM,CAAC1lB,CAAD,CAAf,EAAoB;AAClBgV,uBAAK;AACN;AACF;;AACD,kBAAIA,KAAK,IAAI0Q,MAAM,CAACzlB,MAApB,EAA4B;AAC1B,qBAAK+kB,iBAAL,GAAyB,IAAzB;AACD,eAFD,MAGK;AACH,qBAAKA,iBAAL,GAAyB,KAAzB;AACD;AACF,aAZD,MAYO;AACL,mBAAKA,iBAAL,GAAyB,KAAzB;AACD;AACF;;;iBACD,wBAAevkB,KAAf,EAAqBzD,QAArB,EAA6B;AAC3B,mBAAOA,QAAQ,CAACkd,YAAhB;AACD;;;iBACD,0BAAiBzZ,KAAjB,EAAuBgI,MAAvB,EAA6B;AAC3B,mBAAOA,MAAM,CAACnF,UAAd;AACD;;;iBACD,uBAAc7C,KAAd,EAAoBmK,KAApB,EAAyB;AACvB,mBAAOA,KAAK,CAAC6W,MAAb;AACD;;;iBACD,qBAAYhhB,KAAZ,EAAkB6B,IAAlB,EAAsB;AACpB,mBAAOA,IAAI,CAACmf,MAAZ;AACD;;;iBACD,oBAAWhhB,KAAX,EAAiBkN,OAAjB,EAAwB;AACtB,mBAAOA,OAAP;AACD;;;;;;;yBA5VUmX,oB,EAAoB,2I,EAAA,2H,EAAA,6I,EAAA,0J,EAAA,mK,EAAA,wI,EAAA,uH,EAAA,+H;AAAA,O;;;cAApBA,oB;AAAoB,yC;AAAA;AAAA;;;;;;;;;;;;;;;AClBjC;;AAAsB;;AAA0B;;AAAiD;;AAAkC;;AAAkC;;AAAgB;;AAAQ;;AAC7L;;AACE;;AAAwB;AAAA,qBAAW,YAAX;AAAmB,aAAnB;;AACtB;;AAAU;;AAAU;;AACtB;;AACA;;AACA;;AACA;;AAKF;;AAEA;;AACE;;AAAI;;AAAgB;;AACpB;;AACE;;AAeE;;AACE;;AAYA;;AAeA;;AACE;;AAAW;;AAAW;;AACtB;;AACE;;AAGE;AAAA,qBAAW,IAAAa,qBAAA,QAAX;AAAwC,aAAxC;;AAHF;;AAOA;;AAKF;;AACF;;AAEA;;AACE;;AAAW;;AAAW;;AACtB;;AACE;;AAME;AAAA,qBAAW,IAAAC,UAAA,QAAX;AAA6B,aAA7B;;AANF;;AAWA;;AAGA;;AAGF;;AACF;;AAEA;;AACE;;AAAW;;AAAY;;AACvB;;AACE;;AAME;AAAA,qBAAW,IAAAA,UAAA,QAAX;AAA6B,aAA7B;;AANF;;AASA;;AAGA;;AAGF;;AACF;;AAEA;;AAqBA;;AAaA;;AAcA;;AAaA;;AACE;;AAAW;;AAAkB;;AAC7B;;AACE;;AAGE;AAAA,qBAAW,IAAApX,oBAAA,QAAX;AAAuC,aAAvC;;AAHF;;AAMF;;AACF;;AAEA;;AAYA;;AA2BF;;AAAM;;AACN;;AACE;;AAAI;;AAAmB;;AACzB;;AAAM;;AAEN;;AAEE;;AACE;;AAAW;;AAAU;;AACrB;;AACE;;AAOA;;AAGF;;AACF;;AAEA;;AACE;;AAAW;;AAAS;;AACpB;;AACE;;AAMF;;AACF;;AAEA;;AAmBA;;AAaA;;AAkBA;;AAaA;;AAiBA;;AAaA;;AACE;;AAAW;;AAAS;;AACpB;;AACE;;AAME;AAAA,qBAAY,IAAAD,SAAA,QAAZ;AAA6B,aAA7B,EAA8B,OAA9B,EAA8B;AAAA,qBACrB,IAAAsX,cAAA,QADqB;AACC,aAD/B;;AANF;;AAWA;;AAIA;;AAGF;;AACF;;AAEF;;AAAM;;AACN;;AACE;;AAAI;;AAAmB;;AACzB;;AAAM;;AAEN;;AAEE;;AACE;;AAAW;;AAAe;;AAC1B;;AACE;;AAKE;AAAA,qBAAY,IAAAtX,SAAA,QAAZ;AAA6B,aAA7B;;AALF;;AASA;;AAGF;;AACF;;AAEA;;AACE;;AAAW;;AAAU;;AACrB;;AACE;;AAIE;AAAA,qBAAY,IAAAA,SAAA,QAAZ;AAA6B,aAA7B;;AAJF;;AAOF;;AACF;;AAGF;;AACA;;AACE;;AACE;;AAQA;;AACE;;AAQF;;AACA;;AAGA;;AACE;;AAES;;AACX;;AACA;;AAKA;;AAKA;;AAKA;;AAMA;;AAIE;AAAA,qBAAS,IAAA3L,MAAA,EAAT;AAAiB,aAAjB;;AAEA;;AACF;;AAEF;;AACF;;AAIF;;AACF;;AACF;;AAEA;;;;AA7ewG;;AAAA;;AAAkC;;AAAA;;AAKnI;;AAAA;;AACA;;AAAA;;AAWG;;AAAA;;AAgBiC;;AAAA;;AAYA;;AAAA;;AAoBhB;;AAAA,kGAAwB,aAAxB,EAAwB,iCAAxB;;AAKH;;AAAA;;AAgBV;;AAAA,kGAAwB,aAAxB,EAAwB,iCAAxB;;AAMU;;AAAA;;AAGC;;AAAA;;AAaD;;AAAA,kGAAwB,aAAxB,EAAwB,kCAAxB;;AAKA;;AAAA;;AAGC;;AAAA;;AAMkB;;AAAA;;AAqBA;;AAAA;;AAaA;;AAAA;;AAcA;;AAAA;;AAkBd;;AAAA,kGAAwB,aAAxB,EAAwB,sCAAxB;;AAOc;;AAAA;;AAYA;;AAAA;;AAuCZ;;AAAA,kGAAwB,aAAxB,EAAwB,iCAAxB;;AAKP;;AAAA;;AAWK;;AAAA,kGAAwB,aAAxB,EAAwB,iCAAxB;;AAOc;;AAAA;;AAmBA;;AAAA;;AAaA;;AAAA;;AAkBA;;AAAA;;AAaA;;AAAA;;AAiBA;;AAAA;;AAoBb;;AAAA,kGAAwB,aAAxB,EAAwB,gCAAxB;;AAON;;AAAA;;AAIA;;AAAA;;AAoBM;;AAAA,kGAAwB,aAAxB,EAAwB,+BAAxB;;AAKN;;AAAA;;AAWQ;;AAAA,kGAAwB,aAAxB,EAAwB,kCAAxB;;AAYb;;AAAA;;AAQJ;;AAAA;;AACM;;AAAA;;AAYN;;AAAA;;AACM;;AAAA;;AAIL;;AAAA;;AAKA;;AAAA;;AAKA;;AAAA;;AAKA;;AAAA;;AAwBV;;AAAA;;;;;;;;;wED3dOkiB,oB,EAAoB;gBALhC,uDAKgC;iBALtB;AACTtmB,oBAAQ,EAAE,kBADD;AAETC,uBAAW,EAAE,+BAFJ;AAGTC,qBAAS,EAAE,CAAC,+BAAD;AAHF,W;AAKsB,U;;;;;;;;;;;;;;;;;;;AAiBR+P,kBAAQ,EAAE,CAAF;kBAA9B,uDAA8B;mBAApB,U;AAAoB,WAAE;;;;;;;;;;;;;;;;;;;AEnCnC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACAiH;;AAAsB;;AAAG;;;;;;AAAO;;AAAqB;;AAAI;;;;;;AAMxK;;AAAqC;;AAAsB;;;;;;AAC3D;;AAAoC;;AAAuB;;;;;;AAe/C;;AACE;;AACF;;;;;;AAFsE;;AACpE;;AAAA;;;;;;AAGJ;;AAEE;;AACF;;;;;;;;AAZJ;;AACE;;AAAW;;AAAa;;AACxB;;AACE;;AAA8B;AAAA;;AAAA;;AAAA;AAAA;;AAE5B;;AAGF;;AACA;;AAIF;;AACF;;;;;;AAVM;;AAAA;;AAC6B;;AAAA,iGAAe,cAAf,EAAe,uBAAf;;AAK5B;;AAAA;;;;;;AAKP;;AACE;;AAAW;;AAAa;;AACxB;;AACE;;AACF;;AACF;;;;;;AAFW;;AAAA;;;;;;AASL;;AACE;;AACF;;;;;;AAFkE;;AAChE;;AAAA;;;;;;AAGJ;;AAEE;;AACF;;;;;;AAZJ;;AACE;;AAAW;;AAAW;;AACtB;;AAEE;;AACE;;AAGF;;AACA;;AAIF;;AACF;;;;;;AATmC;;AAAA,+FAAa,cAAb,EAAa,qBAAb;;AAK5B;;AAAA;;;;;;AAKP;;AACE;;AAAW;;AAAW;;AACtB;;AACE;;AACF;;AACF;;;;;;AAFW;;AAAA;;;;;;AASL;;AACE;;AACF;;;;;;AAFsE;;AACpE;;AAAA;;;;;;AAGJ;;AAEE;;AACF;;;;;;AAZJ;;AACE;;AAAW;;AAAa;;AACxB;;AAEE;;AACE;;AAGF;;AACA;;AAIF;;AACF;;;;;;AATmC;;AAAA,kGAAe,cAAf,EAAe,wBAAf;;AAK5B;;AAAA;;;;;;AAKP;;AACE;;AAAW;;AAAa;;AACxB;;AACE;;AACF;;AACF;;;;;;AAFW;;AAAA;;;;;;AAYL;;AACE;;AACF;;;;;;AAF4D;;AAC1D;;AAAA;;;;;;AAGJ;;AAEE;;AACF;;;;;;AAZJ;;AACE;;AAAW;;AAAS;;AACpB;;AAEE;;AACE;;AAGF;;AACA;;AAIF;;AACF;;;;;;AATmC;;AAAA,4FAAS,cAAT,EAAS,oBAAT;;AAK5B;;AAAA;;;;;;AAKP;;AACE;;AAAW;;AAAS;;AACpB;;AACE;;AACF;;AACF;;;;;;AAFW;;AAAA;;;;;;AAUL;;AACE;;AACF;;;;;;AAFkE;;AAChE;;AAAA;;;;;;AAGJ;;AAEE;;AACF;;;;;;AAbJ;;AACE;;AAAW;;AAAiB;;AAC5B;;AAGE;;AACE;;AAGF;;AACA;;AAIF;;AACF;;;;;;AATmC;;AAAA,6FAAU,cAAV,EAAU,yBAAV;;AAK5B;;AAAA;;;;;;AAKP;;AACE;;AAAW;;AAAiB;;AAC5B;;AACE;;AACF;;AACF;;;;;;AAFW;;AAAA;;;;;;AAQP;;AAEE;;AACF;;;;;;;;AAaF;;AACE;AAAA;;AAAA;;AAAA;AAAA;;AAAmB;;AAAI;;;;;;AADiC;;;;;;;;AAGtD;;AAAuJ;AAAA;;AAAA;;AAAA;AAAA;;AACrJ;;AACD;;;;;;AAFuE;;;;;;;;AAM1E;;AAAwE;AAAA;;AAAA;;AAAA;AAAA;;AACtE;;AACF;;;;;;;;AAGA;;AAAwE;AAAA;;AAAA;;AAAA,wCAAsB,MAAtB;AAA4B,WAA5B;;AACtE;;AACF;;;;;;AAHF;;AACE;;AAES;;AACX;;;;;;AAJoE;;AACzD;;AAAA;;;;;;;;AAKT;;AAAuE;AAAA;;AAAA;;AAAA,wCAAsB,MAAtB;AAA4B,WAA5B;;AACrE;;AACF;;;;;;AAHF;;AACE;;AAES;;AACX;;;;;;AAJkF;;AACvE;;AAAA;;;;;;;;AAKT;;AAAuE;AAAA;;AAAA;;AAAA,wCAAsB,OAAtB;AAA6B,WAA7B;;AACrE;;AACF;;;;;;AAHF;;AACE;;AAES;;AACX;;;;;;AAJiF;;AACtE;;AAAA;;;;;;;;AAKT;;AAAuE;AAAA;;AAAA;;AAAA,wCAAsB,QAAtB;AAA8B,WAA9B;;AACrE;;AACF;;;;;;AAHF;;AACE;;AAEU;;AACZ;;;;;;AAJ4C;;AACjC;;AAAA;;;;;;;;AAvKjB;;AAGE;;AACE;;AAeA;;AAOA;;AAeA;;AAOA;;AAeA;;AAQF;;AACA;;AACE;;AAeA;;AAOA;;AAgBA;;AAOA;;AACE;;AAAW;;AAAc;;AACzB;;AACE;;AACA;;AAIF;;AACF;;AACF;;AACA;;AACE;;AACE;;AAAW;;AAAM;;AACjB;;AACF;;AACF;;AAEA;;AACE;;AACE;;AAEE;;AACE;;AAEU;;AACZ;;AACF;;AACA;;AACE;;AAES;;AACX;;AACA;;AAKA;;AAKA;;AAKA;;AAMA;;AAIE;AAAA;;AAAA;;AAAA;AAAA;;AAEA;;AACF;;AACF;;AACF;;AACF;;;;;;AAtLM;;AAImB;;AAAA;;AAeA;;AAAA;;AAOA;;AAAA;;AAeA;;AAAA;;AAOA;;AAAA;;AAeA;;AAAA;;AAUA;;AAAA;;AAeA;;AAAA;;AAOc;;AAAA;;AAgBd;;AAAA;;AAUV;;AAAA;;AAEJ;;AAAA;;AAeI;;AAAA;;AAED;;AAAA;;AACK;;AAAA;;AAKR;;AAAA;;AACM;;AAAA;;AAIL;;AAAA;;AAKA;;AAAA;;AAKA;;AAAA;;AAKA;;AAAA;;;;;;AAqBd;;;;UDvLWqX,2B;AAoBX,8CACE;AACA;AACQxpB,UAHV,EAIUC,UAJV,EAKUwC,KALV,EAMUH,MANV,EAOUuG,WAPV,EAQUlG,EARV,EASUD,MATV,EASkC;AAAA;;AANxB,eAAA1C,EAAA,GAAAA,EAAA;AACA,eAAAC,UAAA,GAAAA,UAAA;AACA,eAAAwC,KAAA,GAAAA,KAAA;AACA,eAAAH,MAAA,GAAAA,MAAA;AACA,eAAAuG,WAAA,GAAAA,WAAA;AACA,eAAAlG,EAAA,GAAAA,EAAA;AACA,eAAAD,MAAA,GAAAA,MAAA;AA3BV,eAAA/B,IAAA,GAAc,EAAd;AACA,eAAA8oB,KAAA,GAAe,EAAf;AACA,eAAArpB,UAAA,GAAuB,EAAvB;AACA,eAAAC,QAAA,GAAqB,EAArB;AAGA,eAAA2G,UAAA,GAAuB,EAAvB;AACA,eAAA0iB,cAAA,GAAyB,EAAzB;AAKA,eAAAzd,WAAA,GAAwB,KAAxB;AACA,eAAAzD,MAAA,GAAkB,KAAlB;AAEA,eAAAmW,aAAA,GAAuB,EAAvB;AACA,eAAA5V,WAAA,GAAqB,IAArB;AAYI;;;;iBAEJ,oBAAW;AAAA;;AACT;AACA;AACA;AACA;AAEAqD,sBAAU,CAAC,YAAM;AACf,sBAAI,CAACud,SAAL,GAAiBrd,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACrJ,OAAb,CAAqB,aAArB,CAAX,CAAjB;;AACA,kBAAG,QAAI,CAACwmB,SAAL,IAAkB,IAAlB,IAA0B,QAAI,CAACA,SAAL,IAAkBld,SAA/C,EAAyD;AACvD,wBAAI,CAAChM,aAAL,CAAmB,EAAnB;;AACA,wBAAI,CAACsI,WAAL,GAAiB,KAAjB;AACD,eAHD,MAIK,IAAG,QAAI,CAAC4gB,SAAL,CAAenpB,EAAf,IAAqB,IAArB,IAA6B,QAAI,CAACmpB,SAAL,CAAenpB,EAAf,IAAqBiM,SAArD,EAA+D;AACpE,wBAAI,CAAC/J,MAAL,CAAYa,IAAZ;;AACA,wBAAI,CAAC/C,EAAL,GAAU,QAAI,CAACmpB,SAAL,CAAenpB,EAAzB;;AACA,wBAAI,CAACC,aAAL,CAAmB,QAAI,CAACkpB,SAAxB;;AACA,wBAAI,CAACjd,SAAL,GAAiB,QAAI,CAACid,SAAtB;AACA,wBAAI,CAACnhB,MAAL,GAAc,IAAd;AACI,wBAAI,CAACyD,WAAL,GAAmB,IAAnB;;AACA,wBAAI,CAACpD,WAAL,CAAiBQ,eAAjB,CAAiC,QAAI,CAACqD,SAAtC;;AACJ,wBAAI,CAAChK,MAAL,CAAYnB,KAAZ;AACC;AACF,aAhBS,EAgBP,IAhBO,CAAV;AAkBA,iBAAKiI,WAAL;AACA,iBAAKvB,aAAL;AACA,iBAAK2E,SAAL;AACA,iBAAKgd,cAAL;AACA,iBAAK/c,aAAL;AAEA,iBAAK3J,YAAL,GAAoB,KAAKP,EAAL,CAAQQ,OAAR,CAAgB,YAAhB,EAA8BoG,QAAlD;AAED,W,CAED;AACA;AACA;AACA;AACA;AACA;;;;iBAEA,uBAAc3I,IAAd,EAAoB;AAClB,iBAAKipB,sBAAL,GAA8B,KAAK7pB,EAAL,CAAQc,KAAR,CAAc;AAC1CT,sBAAQ,EAAE,CAAC,CAAAO,IAAI,SAAJ,IAAAA,IAAI,WAAJ,GAAI,MAAJ,GAAAA,IAAI,CAAEP,QAAN,KAAkB,EAAnB,EAAuB,0DAAWW,QAAlC,CADgC;AAE1CZ,wBAAU,EAAE,CAAC,CAAAQ,IAAI,SAAJ,IAAAA,IAAI,WAAJ,GAAI,MAAJ,GAAAA,IAAI,CAAER,UAAN,KAAoB,EAArB,EAAyB,0DAAWY,QAApC,CAF8B;AAG1CgG,wBAAU,EAAE,CAAC,CAAApG,IAAI,SAAJ,IAAAA,IAAI,WAAJ,GAAI,MAAJ,GAAAA,IAAI,CAAEoG,UAAN,KAAoB,EAArB,EAAwB,CAAC,0DAAWhG,QAAZ,CAAxB,CAH8B;AAI1Cb,oBAAM,EAAE,CAAC,CAAAS,IAAI,SAAJ,IAAAA,IAAI,WAAJ,GAAI,MAAJ,GAAAA,IAAI,CAAET,MAAN,KAAgB,EAAjB,EAAoB,0DAAWa,QAA/B,CAJkC;AAK1CR,gBAAE,EAAE,CAACI,IAAI,CAACJ,EAAL,GAAUI,IAAI,CAACJ,EAAf,GAAoB,IAArB,CALsC;AAM1CspB,oBAAM,EAAE,CAAClpB,IAAI,CAACkpB,MAAL,KAAgB,GAAhB,GAAsB,IAAtB,GAA6B,SAAS,EAAvC,EAA2C,KAA3C,CANkC;AAO1CC,2BAAa,EAAE,CAAC,CAAAnpB,IAAI,SAAJ,IAAAA,IAAI,WAAJ,GAAI,MAAJ,GAAAA,IAAI,CAAEmpB,aAAN,KAAuB,EAAxB,EAA4B,0DAAW/oB,QAAvC,CAP2B;AAQ1CgpB,wBAAU,EAAE,CAAC,CAAAppB,IAAI,SAAJ,IAAAA,IAAI,WAAJ,GAAI,MAAJ,GAAAA,IAAI,CAAEopB,UAAN,KAAoB,EAArB,EAAyB,0DAAWhpB,QAApC,CAR8B;AAS1C2c,0BAAY,EAAG,CAAC/c,IAAI,CAACsC,YAAL,IAAqB,EAAtB;AAT2B,aAAd,CAA9B;AAYD;;;iBACD,sBAAawH,SAAb,EAAsB;AAAA;;AACpB,+DAAKC,IAAL,CACE;AACE;AACAC,kBAAI,EAAE,uBAAsBF,SAAtB,GAAiC,UAAjC,GAA8C,0BAFtD;AAGEG,8BAAgB,EAAE,IAHpB;AAIEC,gCAAkB,EAAE,SAJtB;AAKEC,+BAAiB,EAAE,MALrB;AAME;AACAC,8BAAgB,EAAE,IAPpB;AAQEC,+BAAiB,EAAE,KARrB;AAQ4B,sBAAQ;AARpC,aADF,EAWEC,IAXF,CAWQ,UAAAC,MAAM,EAAI;AAChB,kBAAGA,MAAM,CAACC,WAAP,IAAoB,IAAvB,EAA4B;AAC1B,wBAAI,CAACnL,UAAL,CAAgBgqB,uBAAhB,CAAwC,QAAI,CAACvd,SAAL,CAAelM,EAAvD,EACCiD,SADD,CACW,UAAA3D,IAAI,EAAI;AACvB,0BAAI,CAACwC,MAAL,CAAYwD,QAAZ,CAAqB,uCAArB;AACK,iBAHD,EAIA,UAAAuC,GAAG,EAAE;AACH,sBAAIA,GAAG,CAACC,MAAJ,IAAc,GAAlB,EAAuB;AACrB,4BAAI,CAAC7F,KAAL,CAAWc,IAAX,CAAgB,6BAAhB,EAA+C,IAA/C,EAAqD;AACnDkC,8BAAQ,EAAE,IADyC;AAEnDC,sCAAgB,EAAE,KAFiC;AAGnDC,wCAAkB,EAAE;AAH+B,qBAArD;AAKD;;AAEP,0BAAI,CAACrD,MAAL,CAAYwD,QAAZ,CAAqB,uCAArB;AAEG,iBAfC;AAgBD;AAAC,aA7BJ;AAiCD;;;iBACD,sBAAU;AACR,iBAAKiD,WAAL,GAAiB,KAAjB;AACD;;;iBAGD,sBAAa2B,SAAb,EAAwB;AAAA;;AACtB,+DAAKC,IAAL,CACE;AACE;AACAC,kBAAI,EAAE,uBAAsBF,SAAtB,GAAiC,UAAjC,GAA8C,0BAFtD;AAGEG,8BAAgB,EAAE,IAHpB;AAIEC,gCAAkB,EAAE,SAJtB;AAKEC,+BAAiB,EAAE,MALrB;AAME;AACAC,8BAAgB,EAAE,IAPpB;AAQEC,+BAAiB,EAAE,KARrB;AAQ4B,sBAAQ;AARpC,aADF,EAWEC,IAXF,CAWQ,UAAAC,MAAM,EAAI;AAChB,kBAAGA,MAAM,CAACC,WAAP,IAAoB,IAAvB,EAA4B;AAC1B,oBAAI7K,OAAO,GAAQ,EAAnB;AACAA,uBAAO,CAACC,EAAR,GAAa,QAAI,CAACA,EAAlB;AACAD,uBAAO,CAACmK,SAAR,GAAoBA,SAApB;AACAnK,uBAAO,CAAC2C,YAAR,GAAuB,QAAI,CAACA,YAA5B;;AACA,wBAAI,CAACjD,UAAL,CAAgBiqB,0BAAhB,CAA2C3pB,OAA3C,EAAoDkD,SAApD,CAA8D,UAAC3D,IAAD,EAAU;AACtE,0BAAI,CAAC4M,SAAL,GAAiB5M,IAAjB;;AACA,0BAAI,CAAC+I,WAAL,CAAiBQ,eAAjB,CAAiC,QAAI,CAACqD,SAAtC;;AACA,0BAAI,CAACT,WAAL,GAAmB,IAAnB;;AACA,0BAAI,CAACpD,WAAL,CAAiBS,cAAjB;;AACA,sBAAIpD,OAAO,GAAG,EAAd;;AACA,0BAAQwE,SAAR;AACE,yBAAK,MAAL;AACExE,6BAAO,GAAG,QAAV;AACA;;AACF,yBAAK,OAAL;AACEA,6BAAO,GAAG,QAAV;AACA;;AACF,yBAAK,MAAL;AACEA,6BAAO,GAAG,YAAV;AACA;;AACF;AACE;AAXJ;;AAaA,0BAAI,CAACzD,KAAL,CAAWc,IAAX,kBAA0B2C,OAA1B,sBAAoD,IAApD,EAA0D;AACxDT,4BAAQ,EAAE,IAD8C;AAExDC,oCAAgB,EAAE,KAFsC;AAGxDC,sCAAkB,EAAE;AAHoC,mBAA1D;AAKD,iBAxBD;AAyBD;AAAC,aA1CJ;AA4CD;;;iBAED,kBAAS;AAAA;;AACP,gBAAG,KAAKkkB,sBAAL,CAA4Bvc,OAA/B,EAAuC;AACrC;AACD,aAFD,MAEK;AACH,mBAAK5K,MAAL,CAAYa,IAAZ;AACA,mBAAKgK,QAAL,GAAgB,KAAK5M,IAAL,CAAU6M,IAAV,CAAe,UAAAC,CAAC;AAAA,uBAAIA,CAAC,CAACC,aAAF,IAAmB,QAAI,CAACmc,sBAAL,CAA4BvoB,KAA5B,CAAkCnB,MAAzD;AAAA,eAAhB,CAAhB;AACA,mBAAK0pB,sBAAL,CAA4BvoB,KAA5B,CAAkCnB,MAAlC,GAA2C,KAAKoN,QAAL,CAAc/M,EAAzD;AACA,mBAAK2pB,SAAL,GAAiB,KAAKV,KAAL,CAAWjc,IAAX,CAAgB,UAAAC,CAAC;AAAA,uBAAIA,CAAC,CAACC,aAAF,IAAmB,QAAI,CAACmc,sBAAL,CAA4BvoB,KAA5B,CAAkCyoB,aAAzD;AAAA,eAAjB,CAAjB;AACA,mBAAKF,sBAAL,CAA4BvoB,KAA5B,CAAkCyoB,aAAlC,GAAkD,KAAKI,SAAL,CAAe3pB,EAAjE;AACA,mBAAKqpB,sBAAL,CAA4BvoB,KAA5B,CAAkC4B,YAAlC,GAAiD,KAAKA,YAAtD;AACA,mBAAKjD,UAAL,CAAgBmqB,wBAAhB,CAAyC,KAAKP,sBAAL,CAA4BvoB,KAArE,EAA4EmC,SAA5E,CAAsF,UAACyE,IAAD,EAAU;AAChG,wBAAI,CAACxF,MAAL,CAAYnB,KAAZ;;AACA,wBAAI,CAACe,MAAL,CAAYwD,QAAZ,CAAqB,uCAArB,EAA8DoF,IAA9D,CAAmE,UAAA0C,CAAC,EAAE;AAClE,0BAAI,CAACnL,KAAL,CAAWc,IAAX,CAAgB,0BAAhB,EAA4C,IAA5C,EACA;AAAEkC,4BAAQ,EAAE,IAAZ;AACEC,oCAAgB,EAAE,KADpB;AAEEC,sCAAkB,EAAE;AAFtB,mBADA;AAID,iBALH;AAMC,eARD,EAQE,UAAC0C,GAAD,EAAY;AACZ,wBAAI,CAAC3F,MAAL,CAAYnB,KAAZ;;AACA,wBAAI,CAACkB,KAAL,CAAWc,IAAX,WAA0B,IAA1B,EAAgC;AAAEkC,0BAAQ,EAAE,IAAZ;AAC9BC,kCAAgB,EAAE,KADY;AAE9BC,oCAAkB,EAAE;AAFU,iBAAhC;AAGC,eAbH;AAeC,aAzBI,CA2BL;AACA;AACA;AACA;;AAEH;;;iBAED,+BAAsBnE,KAAtB,EAA2B;AACzB,gBAAI4L,GAAG,GAAGzL,MAAM,CAACC,YAAP,CAAoBJ,KAAK,CAAC6L,OAA1B,CAAV;;AACA,gBAAI,cAAcvL,IAAd,CAAmBsL,GAAnB,CAAJ,EAA6B;AAC3B,qBAAO,IAAP;AACD,aAFD,MAEO;AACL5L,mBAAK,CAACO,cAAN;AACA,qBAAO,KAAP;AACD;AACF;;;iBAED,yBAAgB;AAAA;;AACd,iBAAK9B,UAAL,CAAgB4M,aAAhB,GAAgCpJ,SAAhC,CAA0C,UAACyE,IAAD,EAAU;AACnD;AAEC,mBAAI,IAAIxE,CAAC,GAAC,CAAV,EAAaA,CAAC,GAACwE,IAAI,CAACvE,MAApB,EAA4BD,CAAC,EAA7B,EAAgC;AAC7B,oBAAGwE,IAAI,CAACxE,CAAD,CAAJ,CAAQE,UAAR,KAAuB,GAA1B,EAA+B;AAC9B,0BAAI,CAACoD,UAAL,CAAgB2E,IAAhB,CAAqBzD,IAAI,CAACxE,CAAD,CAAzB;AACD;AACF;AACF,aARD;AASD;;;iBACD,uBAAc;AAAA;;AACZ,iBAAKzD,UAAL,CAAgBuJ,WAAhB,GAA8B/F,SAA9B,CAAwC,UAACyE,IAAD,EAAU;AACnD;AAEG,mBAAI,IAAIxE,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACwE,IAAI,CAACvE,MAAnB,EAA0BD,CAAC,EAA3B,EAA8B;AAC5B,oBAAGwE,IAAI,CAACxE,CAAD,CAAJ,CAAQE,UAAR,KAAqB,GAAxB,EAA4B;AAC1B,0BAAI,CAACvD,QAAL,CAAcsL,IAAd,CAAmBzD,IAAI,CAACxE,CAAD,CAAvB;AACD;AACF;AACF,aARD;AASD;;;iBACD,yBAAgB;AAAA;;AACd,iBAAKzD,UAAL,CAAgBgI,aAAhB,GAAgCxE,SAAhC,CAA0C,UAACyE,IAAD,EAAU;AACpD;AACE,mBAAI,IAAIxE,CAAC,GAAC,CAAV,EAAaA,CAAC,GAACwE,IAAI,CAACvE,MAApB,EAA2BD,CAAC,EAA5B,EAA+B;AAC7B,oBAAGwE,IAAI,CAACxE,CAAD,CAAJ,CAAQE,UAAR,KAAqB,GAAxB,EAA4B;AAC1B,0BAAI,CAACxD,UAAL,CAAgBuL,IAAhB,CAAqBzD,IAAI,CAACxE,CAAD,CAAzB;AACD;AACF;AACF,aAPD;AAQD;;;iBACD,qBAAY;AAAA;;AACV,gBAAIwK,WAAW,GAAE,GAAjB;AACA,iBAAKjO,UAAL,CAAgBkO,WAAhB,CAA4BD,WAA5B,EAAyCzK,SAAzC,CAAmD,UAACyE,IAAD,EAAU;AAC3D,sBAAI,CAACvH,IAAL,GAAYuH,IAAZ;AACD,aAFD;AAGD;;;iBAED,0BAAc;AAAA;;AACZ,gBAAIgG,WAAW,GAAE,GAAjB;AACA,iBAAKjO,UAAL,CAAgBkO,WAAhB,CAA4BD,WAA5B,EAAyCzK,SAAzC,CAAmD,UAACyE,IAAD,EAAU;AAC3D,sBAAI,CAACuhB,KAAL,GAAavhB,IAAb;AACD,aAFD;AAGD;;;iBACD,kBAAS;AACPsE,wBAAY,CAACuB,UAAb,CAAwB,aAAxB;AAEA,iBAAKzL,MAAL,CAAYwD,QAAZ,CAAqB,uCAArB;AACD;;;iBACD,0BAAiB3B,KAAjB,EAAuBvD,IAAvB,EAA2B;AAC1B;AACC;AACE,mBAAOA,IAAI,CAACoG,UAAZ,CAHuB,CAIzB;AAED;;;iBACD,wBAAe7C,KAAf,EAAqBvD,IAArB,EAAyB;AACvB,mBAAOA,IAAI,CAACP,QAAZ;AACD;;;iBACD,0BAAiB8D,KAAjB,EAAuBvD,IAAvB,EAA2B;AACzB,mBAAOA,IAAI,CAACR,UAAZ;AACD;;;iBACD,sBAAa+D,KAAb,EAAmBvD,IAAnB,EAAuB;AACrB,mBAAOA,IAAI,CAAC8M,aAAZ;AACD;;;iBACD,2BAAkBvJ,KAAlB,EAAwBvD,IAAxB,EAA4B;AAC1B,mBAAOA,IAAI,CAAC8M,aAAZ;AACD;;;;;;;yBA9RU8b,2B,EAA2B,2H,EAAA,2I,EAAA,wI,EAAA,uH,EAAA,6I,EAAA,0J,EAAA,mK;AAAA,O;;;cAA3BA,2B;AAA2B,kD;AAAA,iB;AAAA,e;AAAA,gwE;AAAA;AAAA;ACjBxC;;AAAsB;;AAA0B;;AAAiE;;AAAgC;;AAAiC;;AAAkB;;AACpM;;AACA;;AACE;;AAAwB;AAAA,qBAAS,IAAAljB,MAAA,EAAT;AAAiB,aAAjB;;AACtB;;AAAU;;AAAU;;AACtB;;AACA;;AACA;;AACF;;AAEA;;AACE;;AAEE;;AAuLF;;AACF;;AAEA;;AACE;;AACF;;;;AAzMwH;;AAAA;;AAAgC;;AAAA;;AAMjJ;;AAAA;;AACA;;AAAA;;AAMyC;;AAAA;;AA2L9B;;AAAA;;;;;;;;;wEDvLLkjB,2B,EAA2B;gBALvC,uDAKuC;iBAL7B;AACTtnB,oBAAQ,EAAE,2BADD;AAETC,uBAAW,EAAE,wCAFJ;AAGTC,qBAAS,EAAE,CAAC,wCAAD;AAHF,W;AAK6B,U;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEjBxgB;;AACE;;AACF;;;;;;AAFkD;;AAChD;;AAAA;;;;;;;;AAaV;;AACE;;AAA4C;AAAA;;AAAA;;AAAA;AAAA;;AAAwB;;AACpE;;AACF;;;;;;AAWI;;AACE;;AACF;;;;;;AACA;;AAAqC;;AAAyB;;;;;;AAAzB;;AAAA;;;;;;AAIrC;;AAAkG;;AAClG;;;;;;AACA;;AAAqC;;AAAyB;;;;;;AAAzB;;AAAA;;;;;;AAIrC;;AACE;;AACF;;;;;;AACA;;AAAqC;;AAAoB;;;;;;AAApB;;AAAA;;;;;;AAGrC;;AAAgG;;AAChG;;;;;;AACA;;AAAqC;;AAAuB;;;;;;AAAvB;;AAAA;;;;;;AAGrC;;AAAkG;;AAElG;;;;;;AACA;;AAAqC;;AAAyB;;;;;;AAAzB;;AAAA;;;;;;AAKrC;;AAAmC;;AAAM;;;;;;;;AACzC;;AACE;;AACC;;AAAgD;AAAA;;AAAA;;AAAA;;AAAA,kDAA2B,KAA3B;AAAgC,WAAhC;;AAAoC;;AAAI;;AAC3F;;AAAM;;AACN;;AACC;;AAA0F;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA+B;;AAAM;;AAChI;;AACA;;;;;;AAFmD;;AAAA;;;;;;AAKrD;;;;;;AACA;;;;;;;;UDnHGioB,6B;AAgBX,+CACUpqB,UADV,EAEUqC,MAFV,EAGUC,cAHV,EAIUK,cAJV,EAKUH,KALV,EAMUD,eANV,EAM0C;AAAA;;AALhC,eAAAvC,UAAA,GAAAA,UAAA;AACA,eAAAqC,MAAA,GAAAA,MAAA;AACA,eAAAC,cAAA,GAAAA,cAAA;AACA,eAAAK,cAAA,GAAAA,cAAA;AACA,eAAAH,KAAA,GAAAA,KAAA;AACA,eAAAD,eAAA,GAAAA,eAAA;AApBV,eAAAM,gBAAA,GAA6B,CAAC,cAAD,EAAiB,cAAjB,EAAiC,SAAjC,EAA2C,YAA3C,EAAwD,cAAxD,EAAuE,QAAvE,CAA7B;AACA,eAAAC,cAAA,GAAmD,CACjD;AAAEC,eAAG,EAAE,cAAP;AAAuB1B,iBAAK,EAAE;AAA9B,WADiD,EAEjD;AAAE0B,eAAG,EAAE,cAAP;AAAuB1B,iBAAK,EAAE;AAA9B,WAFiD,CAAnD;AASA,eAAAuB,UAAA,GAAa,IAAI,0EAAJ,EAAb;AAWK;;;;iBAEL,oBAAW;AACP,iBAAKmlB,yBAAL;AACH;;;iBACD,sBAAaxmB,KAAb,EAAoB;AAAA;;AAClBuD,mBAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBxD,KAAK,CAACyD,IAAN,CAAW,CAAX,EAAcC,KAAd,CAAoB,CAApB,CAArB;AACA,gBAAMC,IAAI,GAAS3D,KAAK,CAACyD,IAAN,CAAW,CAAX,EAAcC,KAAd,CAAoB,CAApB,CAAnB;AACA,gBAAME,UAAU,GAAG,IAAIC,QAAJ,EAAnB;AACAD,sBAAU,CAACE,MAAX,CAAkB,YAAlB,EAAgC,eAAhC;AACAF,sBAAU,CAACE,MAAX,CAAkB,MAAlB,EAA0BH,IAA1B;AACA,iBAAKlF,UAAL,CAAgBsF,cAAhB,CAA+BH,UAA/B,EAA2C3B,SAA3C,CAAqD,UAAC+B,QAAD,EAAc;AACjET,qBAAO,CAACC,GAAR,CAAYQ,QAAZ;;AACA,sBAAI,CAACwiB,yBAAL;;AACA,sBAAI,CAACvlB,KAAL,CAAWc,IAAX,+BAA8C,IAA9C,EAAoD;AAClDkC,wBAAQ,EAAE,IADwC;AAElDC,gCAAgB,EAAE,KAFgC;AAGlDC,kCAAkB,EAAE;AAH8B,eAApD;AAKD,aARD;AASD;;;iBACD,qCAA4B;AAAA;;AAC1B,iBAAKyB,UAAL,GAAkB,KAAKnH,UAAL,CAAgB+nB,yBAAhB,GACfvkB,SADe,CACL,UAAA3D,IAAI,EAAI;AACjBiF,qBAAO,CAACC,GAAR,CAAY,MAAZ,EAAmBlF,IAAnB;;AACA,mBAAI,IAAI4D,CAAC,GAAC,CAAV,EAAYA,CAAC,GAAC5D,IAAI,CAAC6D,MAAnB,EAA0BD,CAAC,EAA3B,EAA8B;AAC5B,oBAAG5D,IAAI,CAAC4D,CAAD,CAAJ,CAAQE,UAAR,IAAsB,GAAzB,EAA6B;AAC3B9D,sBAAI,CAAC4D,CAAD,CAAJ,CAAQE,UAAR,GAAqB,cAArB;AACD;;AACD,oBAAG9D,IAAI,CAAC4D,CAAD,CAAJ,CAAQE,UAAR,IAAsB,GAAzB,EAA8B;AAC5B9D,sBAAI,CAAC4D,CAAD,CAAJ,CAAQE,UAAR,GAAqB,YAArB;AACD;;AACD,oBAAG9D,IAAI,CAAC4D,CAAD,CAAJ,CAAQG,YAAR,IAAwB,GAA3B,EAA+B;AAC7B/D,sBAAI,CAAC4D,CAAD,CAAJ,CAAQG,YAAR,GAAuB,MAAvB;AACD;;AACD,oBAAG/D,IAAI,CAAC4D,CAAD,CAAJ,CAAQG,YAAR,IAAwB,GAA3B,EAA+B;AAC7B/D,sBAAI,CAAC4D,CAAD,CAAJ,CAAQG,YAAR,GAAuB,QAAvB;AACD;AACF;;AACD,sBAAI,CAAChB,UAAL,GAAkB,IAAI,0EAAJ,CAAuB/C,IAAvB,CAAlB;AACA,sBAAI,CAACmH,KAAL,GAAanH,IAAb;AACAiF,qBAAO,CAACC,GAAR,CAAY,QAAI,CAACnC,UAAjB;AACA,sBAAI,CAACA,UAAL,CAAgBQ,SAAhB,GAA4B,QAAI,CAACA,SAAjC;AACF,sBAAI,CAACR,UAAL,CAAgBS,IAAhB,GAAuB,QAAI,CAACA,IAA5B;AACC,aAtBe,CAAlB;AAuBD;;;iBAED,kBAAS;AACP,iBAAKhB,MAAL,CAAYwD,QAAZ,CAAqB,CAAC,qCAAD,CAArB,EAA8D;AAAEC,yBAAW,EAAE;AAAEkI,0BAAU,EAAE,IAAd;AAAoBzF,sBAAM,EAAG;AAA7B;AAAf,aAA9D;AACD;;;iBACD,4BAAmB5D,SAAnB,EAAoC;AAClC,gBAAIA,SAAS,CAACC,SAAd,EAAyB;AACvB,mBAAKtC,cAAL,CAAoBuC,QAApB,kBAAuCF,SAAS,CAACC,SAAjD;AACD,aAFD,MAEO;AACL,mBAAKtC,cAAL,CAAoBuC,QAApB,CAA6B,iBAA7B;AACD;AAEF;;;iBACD,uBAAW;AACT,iBAAKjC,UAAL,CAAgBwB,MAAhB,GAAyB,EAAzB;AACA,iBAAKuC,SAAL,CAAec,aAAf,CAA6BpG,KAA7B,GAAqC,EAArC;AACA,iBAAK2B,mBAAL,GAA2B,CAA3B;AACA;;;iBACD,kBAASc,QAAT,EAAmBC,CAAnB,EAAoB;AACnBe,mBAAO,CAACC,GAAR,CAAYjB,QAAZ,EAAqBC,CAArB;AACA,iBAAKC,WAAL,CAAiBF,QAAjB;AACA,iBAAKG,WAAL,CAAiBF,CAAjB;AACD;;;iBACD,kBAAS;AACP,iBAAK1B,MAAL,CAAYwD,QAAZ,CAAqB,qBAArB;AACD;;;iBACD,qBAA0C;AAAA,gBAAhChG,IAAgC,uEAApB,EAAoB;AAAA,gBAAjB0I,MAAiB;AACxCzD,mBAAO,CAACC,GAAR,CAAY,MAAZ,EAAmBsH,IAAI,CAACgJ,SAAL,CAAexV,IAAI,CAACmO,UAApB,CAAnB;AACA,iBAAK3L,MAAL,CAAYwD,QAAZ,CAAqB,uCAArB,EAA6D;AAAEC,yBAAW,EAAE;AAAEkI,0BAAU,EAAE3B,IAAI,CAACgJ,SAAL,CAAexV,IAAI,CAACmO,UAApB,CAAd;AAA+CzF,sBAAM,EAAGA;AAAxD;AAAf,aAA7D;AACD;;;iBAED,qBAAYxE,CAAZ,EAAoB;AAClB;AACA,gBAAMQ,WAAW,GAAIR,CAAC,CAACS,MAAF,CAA8BnD,KAAnD;AACA,iBAAKuB,UAAL,CAAgBwB,MAAhB,GAAyBG,WAAW,CAACE,IAAZ,GAAmBC,WAAnB,EAAzB;AACD;;;iBACD,qBAAYZ,QAAZ,EAA2B;AACzB;AACA,iBAAKlB,UAAL,CAAgBuB,eAAhB,GAAkC,UAACkmB,aAAD,EAAqBjmB,MAArB,EAAiD;;;AACjF,qBACE,OAAAimB,aAAa,CAACvmB,QAAD,CAAb,MAAuB,IAAvB,IAAuB,aAAvB,GAAuB,MAAvB,GAAuB,GAAEO,iBAAF,GAAsBC,QAAtB,CAA+BF,MAA/B,CAAvB,MAA4D,MAAKimB,aAAa,CAACrc,UAAd,CAAyBlK,QAAzB,CAAL,MAAuC,IAAvC,IAAuC,aAAvC,GAAuC,MAAvC,GAAuC,GAAEO,iBAAF,GAAsBC,QAAtB,CAA+BF,MAA/B,CAAnG,CADF;AAGD,aAJD;AAKD;;;iBACD,+BAAmB;AACjB,iBAAK7B,eAAL,CAAqBoD,aAArB,CAAmC,sBAAnC,EAA2D,KAAKqB,KAAhE;AACD;;;iBAED,oBAAWsI,GAAX,EAAgB;AAAA;;AACdxK,mBAAO,CAACC,GAAR,CAAYuK,GAAZ;AACA,iBAAK3M,cAAL,CAAoBqD,OAApB,CAA4B;AAACC,qBAAO;AAAR,aAA5B,EACGzC,SADH,CACa,UAAA2C,GAAG,EAAI;AAChB,kBAAIA,GAAJ,EAAS;AACP,wBAAI,CAACnG,UAAL,CAAgBsqB,mBAAhB,CAAoChb,GAAG,CAACtB,UAAxC,EACGxK,SADH,CACa,UAAA3D,IAAI,EAAI;AACjB,sBAAIA,IAAI,KAAK,IAAb,EAAmB;AACjB,4BAAI,CAAC2C,KAAL,CAAWc,IAAX,CAAgB,6BAAhB,EAA+C,IAA/C,EAAqD;AACnDkC,8BAAQ,EAAE,IADyC;AAEnDC,sCAAgB,EAAE,KAFiC;AAGnDC,wCAAkB,EAAE;AAH+B,qBAArD;AAKD;;AACH,0BAAI,CAACqiB,yBAAL;AACC,iBAVH,EAWE,UAAA3f,GAAG,EAAE,CACN,CAZD;AAaD;AACF,aAjBH;AAkBD;;;;;;;yBAxIUgiB,6B,EAA6B,2I,EAAA,uH,EAAA,gI,EAAA,sK,EAAA,wI,EAAA,qJ;AAAA,O;;;cAA7BA,6B;AAA6B,mD;AAAA;AAAA;sEAO7B,8D,EAAO,I;;sEACP,wE,EAAY,I;;;;;;;;;;;;;;;;;;;;ACxBzB;;AAAsB;;AAA0B;;AAAkD;;AAAQ;;AAC1G;;AAEE;;AACE;;AAAwB;AAAA,qBAAS,IAAA/jB,MAAA,EAAT;AAAiB,aAAjB;;AACtB;;AAAU;;AAAU;;AACtB;;AACA;;AACE;;AACF;;AACD;;AACD;;AACE;;AACE;;AACE;;AACE;;AACE;;AACE;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AAEF;;AACF;;AACF;;AACA;;AACF;;AACE;;AAAU;;AAAS;;AACrB;;AACA;;AAIE;;AACE;;AAAoC;;AAAM;;AAC1C;;AAIE;AAAA,qBAAU,IAAAC,YAAA,QAAV;AAA8B,aAA9B;;AAJF;;AAMF;;AACA;;AAAQ;AAAA,qBAAS,IAAAikB,mBAAA,EAAT;AAA8B,aAA9B;;AACN;;AAAM;;AAAQ;;AAChB;;AACF;;AACF;;AACE;;AACE;;AACE;;AACE;;AACE;;AACE;;AAAW;;AAAS;;AACpB;;AAAsC;AAAA;AAAA;;AAEpC;;AAAsB;;AAAM;;AAC5B;;AAGF;;AACF;;AACF;;AACA;;AACE;;AACE;;AAAW;;AAAM;;AACjB;;AAA2B;AAAA;;AAAA;;AAAA,qBAAS,IAAA/jB,QAAA,mBAAT;AAAwC,aAAxC;;AAA3B;;AAEA;;AAAoB;;AAAM;;AAC5B;;AACF;;AACF;;AAIA;;AACC;;AAA0D;AAAA,qBAAS,IAAAgC,MAAA,EAAT;AAAiB,aAAjB;;AAAoB;;AAC9E;;AACF;;AAED;;AACA;;AACA;;AACE;;AAA4D;AAAA,qBAAiB,IAAA9B,kBAAA,QAAjB;AAA2C,aAA3C;;AAC1D;;AACE;;AAGA;;AACF;;AAEA;;AACE;;AAEA;;AACF;;AAEA;;AACE;;AAGA;;AACF;;AACA;;AACE;;AAEA;;AACF;;AACA;;AACE;;AAGA;;AACF;;AAGA;;AACE;;AACA;;AAQF;;AAEA;;AACA;;AACF;;AACA;;AACF;;AACF;;AACF;;;;;;;;;;AA3G0B;;AAAA;;AA2BwB;;AAAA;;AAGL;;AAAA;;AAcjC;;AAAA;;AAYoB;;AAAA;;AA6CP;;AAAA;;AACa;;AAAA;;AAEH;;AAAA;;;;;;;;;wEDrHxB0jB,6B,EAA6B;gBALzC,uDAKyC;iBAL/B;AACTnoB,oBAAQ,EAAE,4BADD;AAETC,uBAAW,EAAE,yCAFJ;AAGTC,qBAAS,EAAE,CAAC,yCAAD;AAHF,W;AAK+B,U;;;;;;;;;;;;;;;AAOpBkB,cAAI,EAAE,CAAF;kBAAvB,uDAAuB;mBAAb,8D;AAAa,WAAE,C;AACDD,mBAAS,EAAE,CAAF;kBAAjC,uDAAiC;mBAAvB,wE;AAAuB,WAAE,C;AAKZuD,mBAAS,EAAE,CAAF;kBAAhC,uDAAgC;mBAAtB,W;AAAsB,WAAE;;;;;;;;;;;;;;;;;;;AE7BrsB;;AAAG;;;;;;AAAO;;AAAqB;;AAAI;;;;;;AAKpK;;AAAqC;;AAA6B;;;;;;AAClE;;AAAoC;;AAA8B;;;;;;AActD;;AACE;;AACF;;;;;;AAFqE;;AACnE;;AAAA;;;;;;AAGJ;;AACE;;AACF;;;;;;AAXJ;;AACE;;AAAW;;AAAa;;AACxB;;AACE;;AACE;;AAAqB;;AAAM;;AAC3B;;AAGF;;AACA;;AAGF;;AACF;;;;;;AAVkC;;AAAA;;AAEC;;AAAA,6FAAW,cAAX,EAAW,wBAAX;;AAInB;;AAAA;;;;;;AAKhB;;AACE;;AAAW;;AAAc;;AACzB;;AACE;;AAEF;;AACF;;;;;;AAFM;;AAAA;;;;;;AAQA;;AACE;;AACF;;;;;;AAFqE;;AACnE;;AAAA;;;;;;AAGJ;;AACE;;AACF;;;;;;AAXJ;;AACE;;AAAW;;AAAW;;AACtB;;AACE;;AACE;;AAAqB;;AAAM;;AAC3B;;AAGF;;AACA;;AAGF;;AACF;;;;;;AAVgC;;AAAA;;AAEG;;AAAA,+FAAa,cAAb,EAAa,sBAAb;;AAInB;;AAAA;;;;;;AAKhB;;AACE;;AAAW;;AAAY;;AACvB;;AACE;;AAEF;;AACF;;;;;;AAFM;;AAAA;;;;;;AASA;;AACE;;AACF;;;;;;AAFyE;;AACvE;;AAAA;;;;;;AAGJ;;AACE;;AACF;;;;;;AAXJ;;AACE;;AAAW;;AAAa;;AACxB;;AACE;;AACE;;AAAqB;;AAAM;;AAC3B;;AAGF;;AACA;;AAGF;;AACF;;;;;;AAVkC;;AAAA;;AAEC;;AAAA,kGAAe,cAAf,EAAe,yBAAf;;AAInB;;AAAA;;;;;;AAKhB;;AACE;;AAAW;;AAAc;;AACzB;;AACE;;AAEF;;AACF;;;;;;AAFM;;AAAA;;;;;;AAWA;;AACE;;AACF;;;;;;AAF6D;;AAC3D;;AAAA;;;;;;AAGJ;;AACE;;AACF;;;;;;AAGJ;;AACE;;AAAW;;AAAU;;AACrB;;AACE;;AAEF;;AACF;;;;;;AAFM;;AAAA;;;;;;AASF;;AACE;;AACF;;;;;;AAgBA;;AAEE;;AACF;;;;;;AAfJ;;AACE;;AAAW;;AAAmB;;AAC9B;;AACE;;AAIA;;AAAuC;;AAAK;;AAC5C;;AAAgC;;AAAO;;AACzC;;AAGE;;AAIF;;AACF;;;;;;AAZI;;AAAA;;AAEY;;AAAA;;AACA;;AAAA;;AAKT;;AAAA;;;;;;AAKP;;AACE;;AAAW;;AAAmB;;AAC9B;;AACE;;AAEF;;AACF;;;;;;AAFM;;AAAA;;;;;;;;AAxDR;;AACE;;AACE;;AAAW;;AAAS;;AACpB;;AACE;;AACE;;AAAqB;;AAAM;;AAC3B;;AAGF;;AACA;;AAGF;;AACF;;AACA;;AAQA;;AACE;;AAAW;;AAAS;;AACpB;;AACE;;AAA4D;AAAA;;AAAA;;AAAA;AAAA;;AAA5D;;AAEA;;AAGF;;AACF;;AAEA;;AAkBA;;AAOF;;;;;;AAvDgC;;AAAA;;AAEK;;AAAA,4FAAS,cAAT,EAAS,mBAAT;;AAInB;;AAAA;;AAKM;;AAAA;;AAYhB;;AAAA;;AACU;;AAAA;;AAMK;;AAAA;;AAkBC;;AAAA;;;;;;AAmBlB;;AACE;;AACF;;;;;;AAcA;;AACE;;AACF;;;;;;;;AASF;;AAA6F;AAAA;;AAAA;;AAAA;AAAA;;AAAmB;;AAAI;;;;;;AAA1D;;;;;;;;AAGxD;;AAAqI;AAAA;;AAAA;;AAAA;AAAA;;AAClI;;AACD;;;;;;AAFsE;;;;;;;;AAKxE;;AAAwE;AAAA;;AAAA;;AAAA;AAAA;;AACtE;;AACF;;;;;;;;AAGA;;AAAwE;AAAA;;AAAA;;AAAA,wCAAsB,MAAtB;AAA4B,WAA5B;;AACtE;;AACF;;;;;;AAHF;;AACE;;AAES;;AACX;;;;;;AAJoE;;AACzD;;AAAA;;;;;;;;AAKT;;AAAuE;AAAA;;AAAA;;AAAA,wCAAsB,MAAtB;AAA4B,WAA5B;;AACrE;;AACF;;;;;;AAHF;;AACE;;AAES;;AACX;;;;;;AAJkF;;AACvE;;AAAA;;;;;;;;AAKT;;AAAuE;AAAA;;AAAA;;AAAA,wCAAsB,OAAtB;AAA6B,WAA7B;;AACrE;;AACF;;;;;;AAHF;;AACE;;AAES;;AACX;;;;;;AAJiF;;AACtE;;AAAA;;;;;;;;AAKT;;AAAuE;AAAA;;AAAA;;AAAA,wCAAsB,QAAtB;AAA8B,WAA9B;;AACrE;;AACF;;;;;;AAHF;;AACE;;AAEU;;AACZ;;;;;;AAJ4C;;AACjC;;AAAA;;;;;;;;AAlMjB;;AACE;;AACE;;AAcA;;AAOA;;AAcA;;AAQA;;AAcA;;AAOF;;AAEA;;AA6DA;;AACE;;AACE;;AAAW;;AAAc;;AACzB;;AACE;;AAEA;;AACE;;AAAkC;;AAAmB;;AACvD;;AACA;;AACA;;AAGF;;AACF;;AAEA;;AACE;;AAAW;;AAAiB;;AAC5B;;AACE;;AAGA;;AACE;;AAAkC;;AAAmB;;AACvD;;AACA;;AACA;;AAGF;;AACF;;AAEF;;AAGA;;AACE;;AACE;;AACA;;AACA;;AACE;;AAEW;;AACb;;AACA;;AACE;;AAES;;AACX;;AACA;;AAKA;;AAKA;;AAKA;;AAMA;;AAIE;AAAA;;AAAA;;AAAA;AAAA;;AAEA;;AACF;;AAEF;;AACF;;AACF;;;;;;;;;;AAlNM;;AAEoB;;AAAA;;AAcA;;AAAA;;AAOA;;AAAA;;AAcA;;AAAA;;AAQA;;AAAA;;AAcA;;AAAA;;AASqD;;AAAA;;AAiE/D;;AAAA,mGAAwB,aAAxB,EAAwB,2CAAxB,EAAwB,KAAxB,EAAwB,4CAAxB,EAAwB,eAAxB,EAAwB,IAAxB;;AAEyB;;AAAA;;AAIrB;;AAAA;;AASJ;;AAAA,mGAAwB,aAAxB,EAAwB,8CAAxB,EAAwB,KAAxB,EAAwB,+CAAxB,EAAwB,eAAxB,EAAwB,IAAxB;;AAGyB;;AAAA;;AAIrB;;AAAA;;AAWa;;AAAA;;AAEtB;;AAAA;;AACM;;AAAA;;AAIN;;AAAA;;AACM;;AAAA;;AAIL;;AAAA;;AAKA;;AAAA;;AAKA;;AAAA;;AAKA;;AAAA;;;;;;AAwBd;;;;UDpNW6jB,wB;AAqBX,2CACE;AACA;AACQzqB,UAHV,EAIUC,UAJV,EAKUyC,MALV,EAMUD,KANV,EAOUH,MAPV,EAQUK,EARV,EASUkG,WATV,EASiC;AAAA;;AANvB,eAAA7I,EAAA,GAAAA,EAAA;AACA,eAAAC,UAAA,GAAAA,UAAA;AACA,eAAAyC,MAAA,GAAAA,MAAA;AACA,eAAAD,KAAA,GAAAA,KAAA;AACA,eAAAH,MAAA,GAAAA,MAAA;AACA,eAAAK,EAAA,GAAAA,EAAA;AACA,eAAAkG,WAAA,GAAAA,WAAA;AA5BV,eAAAmD,aAAA,GAA0B,EAA1B;AAKA,eAAA0e,WAAA,GAAmB,EAAnB,CAuBiC,CAtBjC;;AACA,eAAArqB,QAAA,GAAqB,EAArB;AAEA,eAAA8L,MAAA,GAAmB,EAAnB;AACA,eAAA/L,UAAA,GAAuB,EAAvB;AAIA,eAAA6L,WAAA,GAAwB,KAAxB;AAEA,eAAAzD,MAAA,GAAkB,KAAlB;AACA,eAAAO,WAAA,GAAqB,IAArB;AACA,eAAA4hB,sBAAA,GAA2C,EAA3C;AAWK;;;;iBAEL,oBAAW;AAAA;;AACT,iBAAKnhB,WAAL;AACA,iBAAKvB,aAAL;AACA,iBAAK2E,SAAL;AACA,iBAAKC,aAAL;AACA,iBAAKX,WAAL,GAAmB,KAAKvJ,EAAL,CAAQQ,OAAR,CAAgB,YAAhB,CAAnB,CALS,CAMT;AACA;AACA;AACA;AACA;;AAEAiJ,sBAAU,CAAC,YAAM;AACf,sBAAI,CAACse,WAAL,GAAmBpe,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACrJ,OAAb,CAAqB,kBAArB,CAAX,CAAnB;;AACA,kBAAG,QAAI,CAACunB,WAAL,IAAoB,IAApB,IAA4B,QAAI,CAACA,WAAL,IAAoBje,SAAnD,EAA6D;AAC3D,wBAAI,CAAC1D,WAAL,GAAiB,KAAjB;;AACA,wBAAI,CAACtI,aAAL,CAAmB,EAAnB;AACD,eAHD,MAIK,IAAG,QAAI,CAACiqB,WAAL,CAAiBlqB,EAAjB,IAAuB,IAAvB,IAA+B,QAAI,CAACkqB,WAAL,CAAiBlqB,EAAjB,IAAuBiM,SAAzD,EAAmE;AACxE,wBAAI,CAAC/J,MAAL,CAAYa,IAAZ;;AACA,wBAAI,CAAC/C,EAAL,GAAU,QAAI,CAACkqB,WAAL,CAAiBlqB,EAA3B;;AACA,wBAAI,CAACC,aAAL,CAAmB,QAAI,CAACiqB,WAAxB;;AACA,wBAAI,CAAChe,SAAL,GAAiB,QAAI,CAACge,WAAtB;AACA3lB,uBAAO,CAACC,GAAR,CAAa,QAAI,CAAC0H,SAAlB;AACA,wBAAI,CAAClE,MAAL,GAAc,IAAd;AACA,wBAAI,CAACyD,WAAL,GAAmB,IAAnB;;AACA,wBAAI,CAACpD,WAAL,CAAiBQ,eAAjB,CAAiC,QAAI,CAACqD,SAAtC;;AACA,wBAAI,CAAChK,MAAL,CAAYnB,KAAZ;AACC;AACF,aAjBS,EAiBP,IAjBO,CAAV;AAkBA,iBAAK2B,YAAL,GAAoB,KAAKP,EAAL,CAAQQ,OAAR,CAAgB,YAAhB,CAApB;AACD;;;iBAED,uBAAcvC,IAAd,EAAoB;AAClB,iBAAKgqB,aAAL,GAAqB,KAAK5qB,EAAL,CAAQc,KAAR,CAAc;AACjCT,sBAAQ,EAAE,CAACO,IAAI,CAACP,QAAL,IAAiB,EAAlB,EAAsB,CAAC,0DAAWW,QAAZ,CAAtB,CADuB;AAEjCZ,wBAAU,EAAE,CAACQ,IAAI,CAACR,UAAL,IAAmB,EAApB,EAAwB,CAAC,0DAAWY,QAAZ,EAAsB,0DAAW6pB,SAAX,CAAqB,CAArB,CAAtB,EAA+C,0DAAWC,SAAX,CAAqB,CAArB,CAA/C,CAAxB,CAFqB;AAGjC9jB,wBAAU,EAAE,CAACpG,IAAI,CAACoG,UAAL,IAAmB,EAApB,EAAwB,CAAC,0DAAWhG,QAAZ,CAAxB,CAHqB;AAIjCb,oBAAM,EAAE,CAACS,IAAI,CAACT,MAAL,IAAe,EAAhB,EAAoB,CAAC,0DAAWa,QAAZ,EAAsB,0DAAW6pB,SAAX,CAAqB,CAArB,CAAtB,EAA+C,0DAAWC,SAAX,CAAqB,EAArB,CAA/C,CAApB,CAJyB;AAKjChF,oBAAM,EAAE,CAACllB,IAAI,CAACklB,MAAL,IAAe,EAAhB,EAAoB,CAAC,0DAAW9kB,QAAZ,EAAsB,0DAAW6pB,SAAX,CAAqB,CAArB,CAAtB,EAA+C,0DAAWC,SAAX,CAAqB,GAArB,CAA/C,CAApB,CALyB;AAMjCC,6BAAe,EAAE,CAACnqB,IAAI,CAACmqB,eAAL,IAAwB,EAAzB,EAA6B,CAAC,0DAAW/pB,QAAZ,EAAsB,0DAAW6pB,SAAX,CAAqB,CAArB,CAAtB,EAA+C,0DAAWC,SAAX,CAAqB,CAArB,CAA/C,CAA7B,CANgB;AAOjCE,wBAAU,EAAG,CAAC,IAAI9pB,IAAJ,CAASN,IAAI,CAACoqB,UAAd,KAA6B,EAA9B,EAAkC,CAAC,0DAAWhqB,QAAZ,CAAlC,CAPoB;AAQjCiqB,2BAAa,EAAG,CAAC,IAAI/pB,IAAJ,CAASN,IAAI,CAACqqB,aAAd,KAAgC,EAAjC,EAAqC,CAAC,0DAAWjqB,QAAZ,CAArC,CARiB;AASjCR,gBAAE,EAAE,CAACI,IAAI,CAACJ,EAAL,IAAW,IAAZ,CAT6B;AAUjCmd,0BAAY,EAAG,CAAC/c,IAAI,CAACsC,YAAL,IAAqB,EAAtB;AAVkB,aAAd,CAArB;AAYD;;;iBAED,uBAAc1B,KAAd,EAA0B;AACxB,gBAAMC,OAAO,GAAG,aAAhB;AACA,gBAAIC,SAAS,GAAGC,MAAM,CAACC,YAAP,CAAoBJ,KAAK,CAACK,QAA1B,CAAhB;;AACA,gBAAI,CAACJ,OAAO,CAACK,IAAR,CAAaJ,SAAb,CAAL,EAA8B;AAC5BF,mBAAK,CAACO,cAAN;AACD;AACF;;;iBACD,sBAAa2I,SAAb,EAAsB;AAAA;;AACpB,+DAAKC,IAAL,CACE;AACE;AACAC,kBAAI,EAAE,uBAAsBF,SAAtB,GAAiC,UAAjC,GAA8C,0BAFtD;AAGEG,8BAAgB,EAAE,IAHpB;AAIEC,gCAAkB,EAAE,SAJtB;AAKEC,+BAAiB,EAAE,MALrB;AAME;AACAC,8BAAgB,EAAE,IAPpB;AAQEC,+BAAiB,EAAE,KARrB;AAQ4B,sBAAQ;AARpC,aADF,EAWEC,IAXF,CAWQ,UAAAC,MAAM,EAAI;AAChB,kBAAGA,MAAM,CAACC,WAAP,IAAoB,IAAvB,EAA4B;AAC1B,wBAAI,CAACnL,UAAL,CAAgBsV,yBAAhB,CAA0C,QAAI,CAAC7I,SAAL,CAAelM,EAAzD,EACCiD,SADD,CACW,UAAA3D,IAAI,EAAI;AACjB,0BAAI,CAACwC,MAAL,CAAYwD,QAAZ,CAAqB,qCAArB;AACD,iBAHD,EAIA,UAAAuC,GAAG,EAAE;AACH,sBAAIA,GAAG,CAACC,MAAJ,IAAc,GAAlB,EAAuB;AACrB,4BAAI,CAAC7F,KAAL,CAAWc,IAAX,CAAgB,6BAAhB,EAA+C,IAA/C,EAAqD;AACnDkC,8BAAQ,EAAE,IADyC;AAEnDC,sCAAgB,EAAE,KAFiC;AAGnDC,wCAAkB,EAAE;AAH+B,qBAArD;AAKD;;AACD,0BAAI,CAACrD,MAAL,CAAYwD,QAAZ,CAAqB,qCAArB;AAEH,iBAdC;AAeD;AAAC,aA5BJ;AAgCD;;;iBACD,sBAAU;AACR,iBAAKiD,WAAL,GAAiB,KAAjB;AACD;;;iBAED,sBAAa2B,SAAb,EAAwB;AAAA;;AACtB,+DAAKC,IAAL,CACE;AACE;AACAC,kBAAI,EAAE,uBAAsBF,SAAtB,GAAiC,UAAjC,GAA8C,0BAFtD;AAGEG,8BAAgB,EAAE,IAHpB;AAIEC,gCAAkB,EAAE,SAJtB;AAKEC,+BAAiB,EAAE,MALrB;AAME;AACAC,8BAAgB,EAAE,IAPpB;AAQEC,+BAAiB,EAAE,KARrB;AAQ4B,sBAAQ;AARpC,aADF,EAWEC,IAXF,CAWQ,UAAAC,MAAM,EAAI;AAChB,kBAAGA,MAAM,CAACC,WAAP,IAAoB,IAAvB,EAA4B;AAC1B,oBAAI7K,OAAO,GAAQ,EAAnB;AACJA,uBAAO,CAACC,EAAR,GAAa,QAAI,CAACA,EAAlB;AACAD,uBAAO,CAACmK,SAAR,GAAoBA,SAApB;AACAnK,uBAAO,CAAC2C,YAAR,GAAuB,QAAI,CAACA,YAAL,CAAkBqG,QAAzC;;AACA,wBAAI,CAACtJ,UAAL,CAAgBirB,8BAAhB,CAA+C3qB,OAA/C,EAAwDkD,SAAxD,CAAkE,UAAC3D,IAAD,EAAU;AAC1E,0BAAI,CAAC4M,SAAL,GAAiB5M,IAAjB;;AACA,0BAAI,CAAC+I,WAAL,CAAiBQ,eAAjB,CAAiC,QAAI,CAACqD,SAAtC;;AACA,0BAAI,CAACT,WAAL,GAAmB,IAAnB;;AACA,0BAAI,CAACpD,WAAL,CAAiBS,cAAjB;;AACA,sBAAIpD,OAAO,GAAG,EAAd;;AACA,0BAAQwE,SAAR;AACE,yBAAK,MAAL;AACExE,6BAAO,GAAG,QAAV;AACA;;AACF,yBAAK,OAAL;AACEA,6BAAO,GAAG,QAAV;AACA;;AACF,yBAAK,MAAL;AACEA,6BAAO,GAAG,YAAV;AACA;;AACF;AACE;AAXJ;;AAaA,0BAAI,CAACzD,KAAL,CAAWc,IAAX,kBAA0B2C,OAA1B,sBAAoD,IAApD,EAA0D;AACxDT,4BAAQ,EAAE,IAD8C;AAExDC,oCAAgB,EAAE,KAFsC;AAGxDC,sCAAkB,EAAE;AAHoC,mBAA1D;AAKD,iBAxBD;AAyBG;AAAC,aA1CJ;AA4CD;;;iBAED,kBAAS;AAAA;;AACP,gBAAKwlB,QAAQ,GAAG,KAAKpN,WAAL,CAAiB,KAAK6M,aAAL,CAAmB5M,QAAnB,CAA4BgN,UAA5B,CAAuC1pB,KAAxD,CAAhB;AACA,iBAAKspB,aAAL,CAAmBtpB,KAAnB,CAAyB,YAAzB,IAAyC6pB,QAAzC;AAEA,gBAAKC,SAAS,GAAG,KAAKrN,WAAL,CAAiB,KAAK6M,aAAL,CAAmB5M,QAAnB,CAA4BiN,aAA5B,CAA0C3pB,KAA3D,CAAjB;AACA,iBAAKspB,aAAL,CAAmBtpB,KAAnB,CAAyB,eAAzB,IAA4C8pB,SAA5C;;AAEA,gBAAG,KAAKR,aAAL,CAAmBtd,OAAtB,EAA8B;AAC5B;AACD,aAFD,MAEK;AACH,mBAAK5K,MAAL,CAAYa,IAAZ,GADG,CAEH;AACA;;AACA,mBAAKgK,QAAL,GAAgB,KAAK5M,IAAL,CAAU6M,IAAV,CAAe,UAAAC,CAAC;AAAA,uBAAIA,CAAC,CAACC,aAAF,IAAmB,QAAI,CAACkd,aAAL,CAAmBtpB,KAAnB,CAAyBnB,MAAhD;AAAA,eAAhB,CAAhB;AACA,mBAAKyqB,aAAL,CAAmBtpB,KAAnB,CAAyBnB,MAAzB,GAAkC,KAAKoN,QAAL,CAAc/M,EAAhD;AACA,mBAAKoqB,aAAL,CAAmBtpB,KAAnB,CAAyB4B,YAAzB,GAAwC,KAAKA,YAAL,CAAkBqG,QAA1D;AAEA,mBAAKtJ,UAAL,CAAgBorB,qBAAhB,CAAsC,KAAKT,aAAL,CAAmBtpB,KAAzD,EAAgEmC,SAAhE,CAA0E,UAACyE,IAAD,EAAU;AACpF,wBAAI,CAACxF,MAAL,CAAYnB,KAAZ;;AACA,wBAAI,CAACe,MAAL,CAAYwD,QAAZ,CAAqB,qCAArB,EAA4DoF,IAA5D,CAAiE,UAAA0C,CAAC,EAAE;AAChE,0BAAI,CAACnL,KAAL,CAAWc,IAAX,CAAgB,0BAAhB,EAA4C,IAA5C,EACA;AAAEkC,4BAAQ,EAAE,IAAZ;AACEC,oCAAgB,EAAE,KADpB;AAEEC,sCAAkB,EAAE;AAFtB,mBADA;;AAIE6G,8BAAY,CAACuB,UAAb,CAAwB,kBAAxB;AACH,iBANH;AAOC,eATD,EASE,UAAC1F,GAAD,EAAY;AACZ,wBAAI,CAAC3F,MAAL,CAAYnB,KAAZ;;AACA,wBAAI,CAACkB,KAAL,CAAWc,IAAX,WAA0B,IAA1B,EAAgC;AAAEkC,0BAAQ,EAAE,IAAZ;AAC9BC,kCAAgB,EAAE,KADY;AAE9BC,oCAAkB,EAAE;AAFU,iBAAhC;AAGC,eAdH;AAgBC,aAjCI,CAkCP;AACA;AACA;AACA;;AACD;;;iBAED,kBAAS;AACP6G,wBAAY,CAACuB,UAAb,CAAwB,kBAAxB;AACA,iBAAKzL,MAAL,CAAYwD,QAAZ,CAAqB,qCAArB;AACD;;;iBAED,uBAAc;AAAA;;AACZ,iBAAK7F,UAAL,CAAgBuJ,WAAhB,GAA8B/F,SAA9B,CAAwC,UAACyE,IAAD,EAAU;AAChD,mBAAI,IAAIxE,CAAC,GAAC,CAAV,EAAaA,CAAC,GAACwE,IAAI,CAACvE,MAApB,EAA2BD,CAAC,EAA5B,EAA+B;AAC7B,oBAAGwE,IAAI,CAACxE,CAAD,CAAJ,CAAQE,UAAR,KAAqB,GAAxB,EAA4B;AAC1B,0BAAI,CAACvD,QAAL,CAAcsL,IAAd,CAAmBzD,IAAI,CAACxE,CAAD,CAAvB;AACD;AACF,eAL+C,CAMhD;;AACD,aAPD;AAQD;;;iBACD,yBAAgB;AAAA;;AACd,iBAAKzD,UAAL,CAAgBgI,aAAhB,GAAgCxE,SAAhC,CAA0C,UAACyE,IAAD,EAAU;AAClD,mBAAI,IAAIxE,CAAC,GAAC,CAAV,EAAaA,CAAC,GAACwE,IAAI,CAACvE,MAApB,EAA2BD,CAAC,EAA5B,EAA+B;AAC7B,oBAAGwE,IAAI,CAACxE,CAAD,CAAJ,CAAQE,UAAR,KAAqB,GAAxB,EAA4B;AAC1B,0BAAI,CAACxD,UAAL,CAAgBuL,IAAhB,CAAqBzD,IAAI,CAACxE,CAAD,CAAzB;AACD;AACF,eALiD,CAMlD;;AACD,aAPD;AAQD;;;iBACD,qBAAY;AAAA;;AACZ,gBAAIwK,WAAW,GAAE,GAAjB;AACA,iBAAKjO,UAAL,CAAgBkO,WAAhB,CAA4BD,WAA5B,EAAyCzK,SAAzC,CAAmD,UAACyE,IAAD,EAAU;AAC3D,sBAAI,CAACvH,IAAL,GAAYuH,IAAZ;AACF,aAFA;AAGC;;;iBAED,yBAAgB;AAAA;;AACd,iBAAKjI,UAAL,CAAgB4M,aAAhB,GAAgCpJ,SAAhC,CAA0C,UAACyE,IAAD,EAAU;AAClD,mBAAI,IAAIxE,CAAC,GAAC,CAAV,EAAaA,CAAC,GAACwE,IAAI,CAACvE,MAApB,EAA2BD,CAAC,EAA5B,EAA+B;AAC7B,oBAAGwE,IAAI,CAACxE,CAAD,CAAJ,CAAQE,UAAR,KAAqB,GAAxB,EAA4B;AAC1B,0BAAI,CAACuI,MAAL,CAAYR,IAAZ,CAAiBzD,IAAI,CAACxE,CAAD,CAArB;AACD;AACF,eALiD,CAMlD;;AACD,aAPD;AAQD;;;iBAED,qBAAYpC,KAAZ,EAAmB;AACjB,gBAAI4R,IAAI,GAAG,mCAAM,CAAC5R,KAAD,CAAN,CAAc+S,MAAd,CAAqB,sBAArB,CAAX;AACA,gBAAInB,IAAJ,EACE,OAAOA,IAAP;AACH;;;iBAED,2BAAkBpT,IAAlB,EAAsB;AACpB,mBAAOA,IAAI,CAACkH,UAAZ;AACD;;;iBAED,yBAAgBlH,IAAhB,EAAoB;AAClB,mBAAOA,IAAI,CAACO,QAAZ;AACD;;;iBAED,2BAAkBP,IAAlB,EAAsB;AACpB,mBAAOA,IAAI,CAACM,UAAZ;AACD;;;iBAED,qBAAYN,IAAZ,EAAgB;AACd,mBAAOA,IAAI,CAAC4N,aAAZ;AACD;;;;;;;yBApRU+c,wB,EAAwB,2H,EAAA,2I,EAAA,mK,EAAA,wI,EAAA,uH,EAAA,0J,EAAA,6I;AAAA,O;;;cAAxBA,wB;AAAwB,8C;AAAA,iB;AAAA,e;AAAA,myE;AAAA;AAAA;AClBrC;;AAAsB;;AAA0B;;AAA6D;;AAAgC;;AAAiC;;AAAyB;;AAAQ;;AAC/M;;AACE;;AAAwB;AAAA,qBAAS,IAAAnkB,MAAA,EAAT;AAAiB,aAAjB;;AACtB;;AAAU;;AAAU;;AACtB;;AACA;;AACA;;AACF;;AAEA;;AACE;;AAGE;;AAqNF;;AACF;;AAEA;;AACE;;AACF;;;;AAvOoH;;AAAA;;AAAgC;;AAAA;;AAK7I;;AAAA;;AACA;;AAAA;;AAOgC;;AAAA;;AAyNrB;;AAAA;;;;;;;;;wEDpNLmkB,wB,EAAwB;gBALpC,uDAKoC;iBAL1B;AACTvoB,oBAAQ,EAAE,uBADD;AAETC,uBAAW,EAAE,oCAFJ;AAGTC,qBAAS,EAAE,CAAC,oCAAD;AAHF,W;AAK0B,U;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AElBrsB;;AAAG;;;;;;AAAQ;;AAAqB;;AAAI;;;;;;AAKpK;;AACI;;AACJ;;;;;;AACA;;AACI;;AACJ;;;;;;AAWwB;;AACI;;AACJ;;;;;;AAF8C;;AAC1C;;AAAA;;;;;;AAGR;;AAEI;;AACJ;;;;;;AAXR;;AACI;;AAAW;;AAAe;;AAC1B;;AACI;;AACI;;AAGJ;;AACA;;AAIJ;;AACJ;;;;;;AATyC;;AAAA;;AAK5B;;AAAA;;;;;;AAKb;;AACI;;AAAW;;AAAe;;AAC1B;;AACI;;AAGJ;;AACJ;;;;;;AAJe;;AAAA;;;;;;AAUH;;AACI;;AACJ;;;;;;AAF4C;;AACxC;;AAAA;;;;;;AAGR;;AACI;;AACJ;;;;;;AAVR;;AACI;;AAAW;;AAAa;;AACxB;;AACI;;AACI;;AAGJ;;AACA;;AAGJ;;AACJ;;;;;;AARyC;;AAAA;;AAIrB;;AAAA;;;;;;AAKpB;;AACI;;AAAW;;AAAa;;AACxB;;AACI;;AAGJ;;AACJ;;;;;;AAJe;;AAAA;;;;;;AAgBP;;AACI;;AACJ;;;;;;AAZR;;AACI;;AAAW;;AAAW;;AACtB;;AACI;;AAEI;;AAAY;;AAAM;;AAClB;;AAA6B;;AAAQ;;AACrC;;AAAyB;;AAAI;;AAC7B;;AAA2B;;AAAM;;AACrC;;AACA;;AAGJ;;AACJ;;;;;;AAVY;;AAAA;;AAMQ;;AAAA;;;;;;AAKpB;;AACI;;AAAW;;AAAW;;AACtB;;AACI;;AAGJ;;AACJ;;;;;;AAJe;;AAAA,mGAAwB,aAAxB,EAAwB,sCAAxB;;;;;;AAcP;;AACI;;AACJ;;;;;;AAYA;;AAEI;;AACJ;;;;;;AAWA;;AAEI;;AACJ;;;;;;AAWA;;AAEI;;AACJ;;;;;;AAWA;;AAEI;;AACJ;;;;;;AAWA;;AAEI;;AACJ;;;;;;AAWA;;AAEI;;AACJ;;;;;;;;AAQA;;AACyD;AAAA;;AAAA;;AAAA;AAAA;;AACrD;;AACJ;;;;;;AAFI;;;;;;;;AAKJ;;AACI;AAAA;;AAAA;;AAAA;AAAA;;AACA;;AACJ;;;;;;AAFuC;;;;;;;;AAKvC;;AAAwE;AAAA;;AAAA;;AAAA;AAAA;;AACtE;;AACF;;;;;;;;AAGA;;AAAwE;AAAA;;AAAA;;AAAA,wCAAsB,MAAtB;AAA4B,WAA5B;;AACtE;;AACF;;;;;;AAHF;;AACE;;AAES;;AACX;;;;;;AAJoE;;AACzD;;AAAA;;;;;;;;AAKT;;AAAuE;AAAA;;AAAA;;AAAA,wCAAsB,MAAtB;AAA4B,WAA5B;;AACrE;;AACF;;;;;;AAHF;;AACE;;AAES;;AACX;;;;;;AAJkF;;AACvE;;AAAA;;;;;;;;AAKT;;AAAuE;AAAA;;AAAA;;AAAA,wCAAsB,OAAtB;AAA6B,WAA7B;;AACrE;;AACF;;;;;;AAHF;;AACE;;AAES;;AACX;;;;;;AAJiF;;AACtE;;AAAA;;;;;;;;AAKT;;AAAuE;AAAA;;AAAA;;AAAA,wCAAsB,QAAtB;AAA8B,WAA9B;;AACrE;;AACF;;;;;;AAHF;;AACE;;AAEU;;AACZ;;;;;;AAJ4C;;AACjC;;AAAA;;;;;;AAoB7B;;;;UDjOSkpB,wC;AAuBX,0DACUhpB,MADV,EAEUtC,EAFV,EAGUC,UAHV,EAIUwC,KAJV,EAKUmG,GALV,EAMUjG,EANV,EAOUmG,KAPV,EAQUD,WARV,EAQkC;AAAA;;AAPxB,eAAAvG,MAAA,GAAAA,MAAA;AACA,eAAAtC,EAAA,GAAAA,EAAA;AACA,eAAAC,UAAA,GAAAA,UAAA;AACA,eAAAwC,KAAA,GAAAA,KAAA;AACA,eAAAmG,GAAA,GAAAA,GAAA;AACA,eAAAjG,EAAA,GAAAA,EAAA;AACA,eAAAmG,KAAA,GAAAA,KAAA;AACA,eAAAD,WAAA,GAAAA,WAAA;AA3BV,eAAA6V,UAAA,GAAkB,EAAlB;AAIA,eAAAjO,UAAA,GAAsB,IAAtB;AACA,eAAAjI,MAAA,GAAkB,KAAlB;AACA,eAAAkI,MAAA,GAAkB,IAAlB;AACA,eAAAC,IAAA,GAAO,KAAP;AACA,eAAAC,OAAA,GAAmB,KAAnB;AAIA,eAAA3E,WAAA,GAAuB,KAAvB;AAEA,eAAA7L,UAAA,GAAoB,EAApB;AACA,eAAAmrB,OAAA,GAAU,IAAIrqB,IAAJ,EAAV;AACA,eAAAsqB,YAAA,GAAsB,EAAtB;AACA,eAAAziB,WAAA,GAAqB,IAArB;AAWI;;;;iBAEJ,oBAAQ;AAAA;;AAEN,iBAAKD,KAAL,CAAWE,aAAX,CAAyBvF,SAAzB,CAAmC,UAACwF,MAAD,EAAiB;AAClDlE,qBAAO,CAACC,GAAR,CAAYiE,MAAM,CAACC,GAAP,CAAW,IAAX,CAAZ;AACA,sBAAI,CAACuiB,sBAAL,GAA8BxiB,MAAM,CAACC,GAAP,CAAW,QAAX,CAA9B;AACAnE,qBAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiC,QAAI,CAACymB,sBAAtC;;AACA,kBAAIxiB,MAAM,CAACC,GAAP,CAAW,QAAX,KAAwB,KAA5B,EAAmC;AACjC,wBAAI,CAACuH,UAAL,GAAkB,KAAlB;AACA,wBAAI,CAACC,MAAL,GAAc,IAAd;AACA,wBAAI,CAACE,OAAL,GAAe,IAAf;AACD,eAJD,MAIO,IAAI3H,MAAM,CAACC,GAAP,CAAW,QAAX,KAAwB,IAA5B,EAAkC;AACvC,wBAAI,CAACuH,UAAL,GAAkB,IAAlB;AACA,wBAAI,CAACC,MAAL,GAAc,IAAd;AACA,wBAAI,CAACE,OAAL,GAAe,KAAf;AACD,eAJM,MAIA,IAAI3H,MAAM,CAACC,GAAP,CAAW,QAAX,KAAwB,OAA5B,EAAqC;AAC1C,wBAAI,CAACuH,UAAL,GAAkB,KAAlB;AACA,wBAAI,CAACC,MAAL,GAAc,KAAd;AACA,wBAAI,CAACE,OAAL,GAAe,KAAf;AACD,eAJM,MAIA,IAAI3H,MAAM,CAACC,GAAP,CAAW,QAAX,KAAwB,IAA5B,EAAkC;AACvC,wBAAI,CAACwH,MAAL,GAAc,KAAd;AACD;;AACD,kBAAIzH,MAAM,CAACC,GAAP,CAAW,IAAX,CAAJ,EAAsB;AACpB,wBAAI,CAACV,MAAL,GAAc,IAAd;AACA,wBAAI,CAAChI,EAAL,GAAUyI,MAAM,CAACC,GAAP,CAAW,IAAX,CAAV;;AACA,wBAAI,CAACjJ,UAAL,CACGyrB,wBADH,CAC4BziB,MAAM,CAACC,GAAP,CAAW,IAAX,CAD5B,EAEGzF,SAFH,CAEa,UAACyE,IAAD,EAAU;AACnBnD,yBAAO,CAACC,GAAR,CAAYkD,IAAZ;;AACA,0BAAI,CAACzH,aAAL,CAAmByH,IAAnB;;AACA,0BAAI,CAACwE,SAAL,GAAiBxE,IAAjB;AACA,0BAAI,CAAC+D,WAAL,GAAmB,IAAnB;;AACA,0BAAI,CAACpD,WAAL,CAAiBQ,eAAjB,CAAiC,QAAI,CAACqD,SAAtC;AACD,iBARH;AASD,eAZD,MAYO;AACL,wBAAI,CAAC3D,WAAL,GAAiB,KAAjB;;AACA,wBAAI,CAACtI,aAAL,CAAmB,EAAnB;AACD;AACF,aAnCD;AAoCA,iBAAKA,aAAL,CAAmB,EAAnB;AACA,iBAAKkrB,iBAAL;AACA,iBAAK1jB,aAAL;AACA,iBAAK/E,YAAL,GAAoB,KAAKP,EAAL,CAAQQ,OAAR,CAAgB,YAAhB,CAApB;AACA4B,mBAAO,CAACC,GAAR,CAAY,KAAK9B,YAAjB;AACD;;;iBAED,uBAActC,IAAd,EAAoB;AAClBmE,mBAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCpE,IAAjC;AACAmE,mBAAO,CAACC,GAAR,CAAY,eAAZ,EAA4BpE,IAAI,CAACgrB,QAAjC;;AAEA,gBAAGhrB,IAAI,CAACgrB,QAAR,EAAiB;AACfhrB,kBAAI,CAACgrB,QAAL,GAAgBhrB,IAAI,GAAG,mCAAM,CAACA,IAAI,CAACgrB,QAAN,CAAN,CAAsBvX,MAAtB,EAAH,GAAoC,EAAxD;AACD;;AACDtP,mBAAO,CAACC,GAAR,CAAY,eAAZ,EAA4BpE,IAAI,CAACgrB,QAAjC;AACA,iBAAK7M,UAAL,GAAkB,KAAK/e,EAAL,CAAQc,KAAR,CAAc;AAC9B+qB,4BAAc,EAAE,CAACjrB,IAAI,CAACirB,cAAL,IAAuB,EAAxB,EAA4B,0DAAW7qB,QAAvC,CADc;AAE9BZ,wBAAU,EAAE,CAACQ,IAAI,CAACR,UAAL,IAAmB,EAApB,EAAwB,0DAAWY,QAAnC,CAFkB;AAG9B8qB,sBAAQ,EAAE,CAAClrB,IAAI,CAACkrB,QAAL,IAAiB,EAAlB,EAAsB,0DAAW9qB,QAAjC,CAHoB;AAI9B4qB,sBAAQ,EAAE,CAAChrB,IAAI,CAACgrB,QAAL,IAAiB,EAAlB,EAAsB,0DAAW5qB,QAAjC,CAJoB;AAK9B+qB,qBAAO,EAAE,CAACnrB,IAAI,CAACmrB,OAAL,IAAgB,EAAjB,EAAqB,0DAAW/qB,QAAhC,CALqB;AAM9BgrB,uBAAS,EAAE,CAACprB,IAAI,CAACorB,SAAL,IAAkB,EAAnB,EAAuB,0DAAWhrB,QAAlC,CANmB;AAO9BirB,wBAAU,EAAE,CAACrrB,IAAI,CAACqrB,UAAL,IAAmB,EAApB,EAAwB,0DAAWjrB,QAAnC,CAPkB;AAQ9BR,gBAAE,EAAE,CAACI,IAAI,CAACJ,EAAL,IAAW,EAAZ,CAR0B;AAS9B0rB,qBAAO,EAAE,CAACtrB,IAAI,CAACsrB,OAAL,IAAgB,EAAjB,EAAqB,0DAAWlrB,QAAhC,CATqB;AAU9BmrB,qBAAO,EAAE,CAACvrB,IAAI,CAACurB,OAAL,IAAgB,EAAjB,EAAqB,0DAAWnrB,QAAhC,CAVqB;AAW9BorB,sBAAQ,EAAE,CAACxrB,IAAI,CAACwrB,QAAL,IAAiB,EAAlB,EAAsB,0DAAWprB,QAAjC,CAXoB;AAY9B4C,wBAAU,EAAE,CAAChD,IAAI,CAACgD,UAAL,IAAmB,EAApB,CAZkB;AAa9BoT,sBAAQ,EAAE,CAACpW,IAAI,CAACoW,QAAL,IAAiB,IAAlB,CAboB;AAc9B1M,yBAAW,EAAE,CAAC1J,IAAI,CAAC0J,WAAL,IAAoB,EAArB,CAdiB;AAe9BzG,0BAAY,EAAE,CAACjD,IAAI,CAACiD,YAAL,IAAqB,EAAtB,CAfgB;AAgB9B0G,qBAAO,EAAE,CAAC3J,IAAI,CAAC2J,OAAL,IAAgB,EAAjB,CAhBqB;AAiB9BrH,0BAAY,EAAE,CAACtC,IAAI,CAACsC,YAAL,IAAqB,EAAtB;AAjBgB,aAAd,CAAlB;AAmBD;;;iBAED,kBAAS;AAAA;;AACP,gBAAImpB,SAAS,GAAG,KAAKtO,WAAL,CAAiB,KAAKgB,UAAL,CAAgBf,QAAhB,CAAyB4N,QAAzB,CAAkCtqB,KAAnD,CAAhB;AACA,iBAAKyd,UAAL,CAAgBzd,KAAhB,CAAsB,UAAtB,IAAoC+qB,SAApC;AACAtnB,mBAAO,CAACC,GAAR,CAAY,OAAZ,EAAqB,KAAK+Z,UAAL,CAAgBzd,KAArC,EAHO,CAIP;AACA;AACA;;AACEyD,mBAAO,CAACC,GAAR,CAAY,UAAZ,EAAwB,KAAK+Z,UAAL,CAAgBzd,KAAxC;AACA,iBAAKyd,UAAL,CAAgBzd,KAAhB,CAAsB4B,YAAtB,GAAqC,KAAKA,YAAL,CAAkBqG,QAAvD;AACA,iBAAKtJ,UAAL,CAAgBqsB,qBAAhB,CAAsC,KAAKvN,UAAL,CAAgBzd,KAAtD,EAA6DmC,SAA7D,CAAuE,UAAC3D,IAAD,EAAU;AAC7EiF,qBAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBlF,IAApB;;AACA,kBAAIA,IAAI,IAAI,IAAR,IAAgB,QAAI,CAAC0I,MAAL,IAAe,IAAnC,EAAyC;AAEnC,wBAAI,CAAC/F,KAAL,CAAWc,IAAX,CAAgB,eAAhB,EAAiC,IAAjC,EAAuC;AACrCkC,0BAAQ,EAAE,IAD2B;AAErCC,kCAAgB,EAAE,KAFmB;AAGrCC,oCAAkB,EAAE;AAHiB,iBAAvC;;AAMJ,wBAAI,CAACiD,GAAL,CAAS4B,YAAT;AACD,eATD,MASO,IAAI1K,IAAI,IAAI,IAAR,IAAgB,QAAI,CAAC0I,MAAL,IAAe,IAAnC,EAAyC;AAC9C;AACAzD,uBAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBlF,IAApB;;AACE,wBAAI,CAAC2C,KAAL,CAAWc,IAAX,CAAgB,aAAhB,EAA+B,IAA/B,EAAqC;AACnCkC,0BAAQ,EAAE,IADyB;AAEnCC,kCAAgB,EAAE,KAFiB;AAGnCC,oCAAkB,EAAE;AAHe,iBAArC;;AAMF,wBAAI,CAACiD,GAAL,CAAS4B,YAAT;AACD;AACF,aAtBH;AAuBE,iBAAKlI,MAAL,CAAYwD,QAAZ,CAAqB,iDAArB,EAhCG,CAiCP;AAED;;;iBACD,sBAAa4E,SAAb,EAAsB;AAAA;;AACpB,+DAAKC,IAAL,CACE;AACE;AACAC,kBAAI,EAAE,uBAAsBF,SAAtB,GAAiC,UAAjC,GAA8C,0BAFtD;AAGEG,8BAAgB,EAAE,IAHpB;AAIEC,gCAAkB,EAAE,SAJtB;AAKEC,+BAAiB,EAAE,MALrB;AAME;AACAC,8BAAgB,EAAE,IAPpB;AAQEC,+BAAiB,EAAE,KARrB;AAQ4B,sBAAQ;AARpC,aADF,EAWEC,IAXF,CAWQ,UAAAC,MAAM,EAAI;AAChB,kBAAGA,MAAM,CAACC,WAAP,IAAoB,IAAvB,EAA4B;AAC1B,wBAAI,CAACnL,UAAL,CAAgB6R,YAAhB,CAA6B,QAAI,CAACpF,SAAL,CAAe6f,UAA5C,EACC9oB,SADD,CACW,UAAA3D,IAAI,EAAI;AACjB,0BAAI,CAACwC,MAAL,CAAYwD,QAAZ,CAAqB,CAAC,+CAAD,CAArB;AACD,iBAHD,EAIA,UAAAuC,GAAG,EAAE;AACH,sBAAIA,GAAG,CAACC,MAAJ,IAAc,GAAlB,EAAuB;AACrB,4BAAI,CAAC7F,KAAL,CAAWc,IAAX,CAAgB,6BAAhB,EAA+C,IAA/C,EAAqD;AACnDkC,8BAAQ,EAAE,IADyC;AAEnDC,sCAAgB,EAAE,KAFiC;AAGnDC,wCAAkB,EAAE;AAH+B,qBAArD;AAKD;;AACD,0BAAI,CAACrD,MAAL,CAAYwD,QAAZ,CAAqB,CAAC,+CAAD,CAArB;AAEH,iBAdC;AAeD;AAAC,aA5BJ;AAgCD;;;iBACD,sBAAU;AACR,iBAAKiD,WAAL,GAAiB,KAAjB;AACD;;;iBAED,sBAAa2B,SAAb,EAAwB;AAAA;;AACtB,+DAAKC,IAAL,CACE;AACE;AACAC,kBAAI,EAAE,uBAAsBF,SAAtB,GAAiC,UAAjC,GAA8C,0BAFtD;AAGEG,8BAAgB,EAAE,IAHpB;AAIEC,gCAAkB,EAAE,SAJtB;AAKEC,+BAAiB,EAAE,MALrB;AAME;AACAC,8BAAgB,EAAE,IAPpB;AAQEC,+BAAiB,EAAE,KARrB;AAQ4B,sBAAQ;AARpC,aADF,EAWEC,IAXF,CAWQ,UAAAC,MAAM,EAAI;AAChB,kBAAGA,MAAM,CAACC,WAAP,IAAoB,IAAvB,EAA4B;AAC1BrG,uBAAO,CAACC,GAAR,CAAY,QAAI,CAACxE,EAAjB;AACA,oBAAID,OAAO,GAAQ,EAAnB;AACAA,uBAAO,CAACC,EAAR,GAAa,QAAI,CAACA,EAAlB;AACAD,uBAAO,CAACmK,SAAR,GAAoBA,SAApB;AACAnK,uBAAO,CAAC2C,YAAR,GAAuB,QAAI,CAACA,YAAL,CAAkBqG,QAAzC;;AACA,wBAAI,CAACtJ,UAAL,CAAgBusB,mCAAhB,CAAoDjsB,OAApD,EAA6DkD,SAA7D,CAAuE,UAAC3D,IAAD,EAAU;AAC7EiF,yBAAO,CAACC,GAAR,CAAYlF,IAAZ;AACA,0BAAI,CAAC4M,SAAL,GAAiB5M,IAAjB;;AACA,0BAAI,CAAC+I,WAAL,CAAiBQ,eAAjB,CAAiC,QAAI,CAACqD,SAAtC;;AACA,0BAAI,CAACT,WAAL,GAAmB,IAAnB;;AACA,0BAAI,CAACpD,WAAL,CAAiBS,cAAjB;;AACA,sBAAIpD,OAAO,GAAG,EAAd;;AACA,0BAAQwE,SAAR;AACE,yBAAK,MAAL;AACExE,6BAAO,GAAG,QAAV;AACA;;AACF,yBAAK,OAAL;AACEA,6BAAO,GAAG,QAAV;AACA;;AACF,yBAAK,MAAL;AACEA,6BAAO,GAAG,YAAV;AACA;;AACF;AACE;AAXJ;;AAaA,0BAAI,CAACzD,KAAL,CAAWc,IAAX,kBAA0B2C,OAA1B,sBAAoD,IAApD,EAA0D;AACxDT,4BAAQ,EAAE,IAD8C;AAExDC,oCAAgB,EAAE,KAFsC;AAGxDC,sCAAkB,EAAE;AAHoC,mBAA1D;AAKD,iBAzBH;AA0BD;AAAC,aA5CJ;AA8CD;;;iBAED,mBAAUnE,KAAV,EAAsB;AACpBuD,mBAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBxD,KAAvB;AACA,gBAAMC,OAAO,GAAG,OAAhB;AACA,gBAAIC,SAAS,GAAGC,MAAM,CAACC,YAAP,CAAoBJ,KAAK,CAACK,QAA1B,CAAhB;;AACA,gBAAI,CAACJ,OAAO,CAACK,IAAR,CAAaJ,SAAb,CAAL,EAA8B;AAC5BF,mBAAK,CAACO,cAAN;AACD;AACF;;;iBAED,qBAAYT,KAAZ,EAAmB;AACjB,gBAAI4R,IAAI,GAAG,mCAAM,CAAC5R,KAAD,CAAN,CAAc+S,MAAd,CAAqB,aAArB,CAAX,CADiB,CAEjB;;AACAtP,mBAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBkO,IAApB;AACA,gBAAIA,IAAJ,EACE,OAAOA,IAAP;AACH;;;iBAED,6BAAiB;AAAA;;AACf,iBAAKjT,UAAL,CAAgBwsB,eAAhB,GAAkChpB,SAAlC,CAA4C,UAACyE,IAAD,EAAa;AACxDnD,qBAAO,CAACC,GAAR,CAAY,cAAZ,EAA2BkD,IAA3B;;AACA,mBAAI,IAAIxE,CAAC,GAAC,CAAV,EAAaA,CAAC,GAAEwE,IAAI,CAACvE,MAArB,EAA4BD,CAAC,EAA7B,EAAgC;AAC/B,oBAAGwE,IAAI,CAACxE,CAAD,CAAJ,CAAQE,UAAR,IAAoB,GAAvB,EACA,QAAI,CAAC4nB,YAAL,CAAkB7f,IAAlB,CAAuBzD,IAAI,CAACxE,CAAD,CAA3B;AACA;AACD,aAND;AAOD;;;iBAED,yBAAa;AAAA;;AACX,iBAAKzD,UAAL,CAAgBgI,aAAhB,GAAgCxE,SAAhC,CAA0C,UAAAgI,cAAc,EAAE;AACxD1G,qBAAO,CAACC,GAAR,CAAYyG,cAAZ;;AACA,mBAAI,IAAI/H,CAAC,GAAC,CAAV,EAAaA,CAAC,GAAC+H,cAAc,CAAC9H,MAA9B,EAAqCD,CAAC,EAAtC,EAAyC;AACvC,oBAAG+H,cAAc,CAAC/H,CAAD,CAAd,CAAkBE,UAAlB,KAA+B,GAAlC,EAAsC;AACpC,0BAAI,CAACxD,UAAL,CAAgBuL,IAAhB,CAAqBF,cAAc,CAAC/H,CAAD,CAAnC;AACD;AACF;;AACDqB,qBAAO,CAACC,GAAR,CAAY,QAAI,CAAC5E,UAAjB;AACA2E,qBAAO,CAACC,GAAR,CAAY,YAAZ,EAAyByG,cAAzB,EARwD,CASxD;AACD,aAVD;AAWD;;;iBAED,kBAAS;AACP,iBAAKnJ,MAAL,CAAYwD,QAAZ,CAAqB,CAAC,+CAAD,CAArB;AACD;;;;;;;yBAlRUwlB,wC,EAAwC,uH,EAAA,2H,EAAA,2I,EAAA,wI,EAAA,gI,EAAA,0J,EAAA,+H,EAAA,6I;AAAA,O;;;cAAxCA,wC;AAAwC,gE;AAAA;AAAA;;;;;;;;;;;;;;;AChBrD;;AAAsB;;AAA0B;;AAA8D;;AAAiC;;AAAiC;;AAAkB;;AAAS;;AAC3M;;AACI;;AAAwB;AAAA,qBAAS,IAAAhlB,MAAA,EAAT;AAAiB,aAAjB;;AACpB;;AAAU;;AAAU;;AACxB;;AACA;;AAGA;;AAGJ;;AAEA;;AACI;;AACI;;AAA+B;AAAA,qBAAY,IAAAtE,MAAA,EAAZ;AAAoB,aAApB;;AAC3B;;AACI;;AAcA;;AASA;;AAaA;;AASA;;AAeA;;AASA;;AACI;;AAAW;;AAAW;;AACtB;;AACI;;AAGA;;AACA;;AACA;;AAGJ;;AAEJ;;AAEA;;AACI;;AAAW;;AAAU;;AACrB;;AACI;;AAEI;AAAA,qBAAW,IAAAiQ,SAAA,QAAX;AAA4B,aAA5B;;AAFJ;;AAIA;;AAIJ;;AACJ;;AAEA;;AACI;;AAAW;;AAAY;;AACvB;;AACI;;AAEI;AAAA,qBAAW,IAAAA,SAAA,QAAX;AAA4B,aAA5B;;AAFJ;;AAIA;;AAIJ;;AACJ;;AAEA;;AACI;;AAAW;;AAAa;;AACxB;;AACI;;AAEI;AAAA,qBAAW,IAAAA,SAAA,QAAX;AAA4B,aAA5B;;AAFJ;;AAIA;;AAIJ;;AACJ;;AAEA;;AACI;;AAAW;;AAAU;;AACrB;;AACI;;AAEI;AAAA,qBAAW,IAAAA,SAAA,QAAX;AAA4B,aAA5B;;AAFJ;;AAIA;;AAIJ;;AACJ;;AAEA;;AACI;;AAAW;;AAAU;;AACrB;;AACI;;AAEI;AAAA,qBAAW,IAAAA,SAAA,QAAX;AAA4B,aAA5B;;AAFJ;;AAIA;;AAIJ;;AACJ;;AAEA;;AACI;;AAAW;;AAAW;;AACtB;;AACI;;AAEI;AAAA,qBAAW,IAAAA,SAAA,QAAX;AAA4B,aAA5B;;AAFJ;;AAIA;;AAIJ;;AACJ;;AACJ;;AAEA;;AACI;;AACI;;AACI;;AAIJ;;AACA;;AACI;;AAIJ;;AACA;;AACI;;AAES;;AACX;;AACA;;AAKA;;AAKA;;AAKA;;AAMA;;AAIE;AAAA,qBAAS,IAAA3L,MAAA,EAAT;AAAiB,aAAjB;;AAEA;;AACF;;AACN;;AACJ;;AACJ;;AACJ;;AACJ;;AAEA;;AACI;;AACJ;;;;;;AAlPqH;;AAAA;;AAAiC;;AAAA;;AAK3I;;AAAA;;AAGA;;AAAA;;AAOG;;AAAA;;AAEqC;;AAAA;;AAcA;;AAAA;;AASA;;AAAA;;AAaA;;AAAA;;AASA;;AAAA;;AAeA;;AAAA;;AAYV;;AAAA,4FAA+B,KAA/B,EAA+B,WAA/B;;AAGgB;;AAAA,kFAAqB,UAArB,EAAqB,eAArB;;AAErB;;AAAA;;AAUL;;AAAA,kGAAwB,aAAxB,EAAwB,kCAAxB;;AAKF;;AAAA;;AASE;;AAAA,kGAAwB,aAAxB,EAAwB,oCAAxB;;AAKF;;AAAA;;AASE;;AAAA,kGAAwB,aAAxB,EAAwB,qCAAxB;;AAKF;;AAAA;;AASE;;AAAA,kGAAwB,aAAxB,EAAwB,kCAAxB;;AAKF;;AAAA;;AASE;;AAAA,kGAAwB,aAAxB,EAAwB,kCAAxB;;AAKF;;AAAA;;AAUD;;AAAA,yHAA+C,UAA/C,EAA+C,eAA/C;;AAIC;;AAAA;;AAUI;;AAAA;;AAKR;;AAAA;;AACQ;;AAAA;;AAKR;;AAAA;;AACQ;;AAAA;;AAIL;;AAAA;;AAKA;;AAAA;;AAKA;;AAAA;;AAKA;;AAAA;;AAqBR;;AAAA;;;;;;;;;wEDjOPglB,wC,EAAwC;gBALpD,uDAKoD;iBAL1C;AACTppB,oBAAQ,EAAE,yCADD;AAETC,uBAAW,EAAE,sDAFJ;AAGTC,qBAAS,EAAE,CAAC,sDAAD;AAHF,W;AAK0C,U;;;;;;;;;;;;;;;;;;;AAC5B+P,kBAAQ,EAAE,CAAF;kBAA9B,uDAA8B;mBAApB,U;AAAoB,WAAE;;;;;;;;;;;;;;;;;;;AEjBnC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACkBgB;;;;;;AAAA;;;;;;AAKE;;;;;;AAAA;;;;;;AAKA;;;;;;AAAA;;;;;;AAKF;;AAAoE;;AAAwC;;;;;;AAAtF,uFAAmB,UAAnB,EAAmB,eAAnB;;AAA8C;;AAAA;;;;;;;;AAKpE;;AAAoE;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAyB;;AAAU;;AAAI;;AAAW;;AACtH;;AAAmD;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA0B;;AAAU;;AAAM;;AAAW;;;;;;;;;;;;;;;;;;UDvB3Gua,uC;AASX,yDACU3lB,MADV,EAEUtE,KAFV,EAGUG,cAHV,EAIUF,MAJV,EAKUzC,UALV,EAKgC;AAAA;;AAJtB,eAAA8G,MAAA,GAAAA,MAAA;AACA,eAAAtE,KAAA,GAAAA,KAAA;AACA,eAAAG,cAAA,GAAAA,cAAA;AACA,eAAAF,MAAA,GAAAA,MAAA;AACA,eAAAzC,UAAA,GAAAA,UAAA;AAVV,eAAAgH,KAAA,GAAe,EAAf;AACA,eAAAvG,QAAA,GAAqB,EAArB;AACA,eAAAC,IAAA,GAAiB,EAAjB;AACA,eAAAP,UAAA,GAAuB,EAAvB;AACA,eAAAC,QAAA,GAAqB,EAArB;AAOI;;;;iBAEJ,oBAAW;AACT,iBAAK8G,QAAL;AACA,iBAAKwlB,0BAAL;AACA,iBAAKhgB,WAAL;AACA,iBAAKnD,WAAL;AACA,iBAAKvB,aAAL;AACA,iBAAK2E,SAAL;AACD;;;iBAED,uBAAc;AACZ,gBAAI,KAAKxF,UAAT,EAAqB;AACnB,mBAAKA,UAAL,CAAgBC,WAAhB;AACD;AACF;;;iBACD,oBAAW;AACT,iBAAKC,KAAL,GAAa,KAAKL,KAAlB;AACD;;;iBAED,qBAAkC;AAAA;;AAAA,gBAAxBnH,IAAwB,uEAAZ,EAAY;AAAA,gBAAR6H,KAAQ;AAChC,gBAAIC,KAAK,GAAGD,KAAK,GACb,kCADa,GAEb,iCAFJ;AAGA,gBAAI5H,SAAS,GAAsB,KAAKgH,MAAL,CAAYxD,IAAZ,CACjC,oJADiC,EAEjC;AACEsE,mBAAK,EAAE,OADT;AAEEC,0BAAY,EAAE,IAFhB;AAGEhI,kBAAI,EAAE;AACJ8H,qBAAK,EAAEA,KADH;AAEJrH,uBAAO,EAAET,IAFL;AAGJY,wBAAQ,EAAE,KAAKA,QAHX;AAIJC,oBAAI,EAAE,KAAKA,IAJP;AAKJP,0BAAU,EAAE,KAAKA,UALb;AAMJC,wBAAQ,EAAE,KAAKA;AANX;AAHR,aAFiC,CAAnC;AAeAN,qBAAS,CAACgI,WAAV,GAAwBtE,SAAxB,CAAkC,UAAC2C,GAAD,EAAS;AACzC,kBAAI,CAACA,GAAL,EAAU;AACR;AACD;;AACD,sBAAI,CAAC1D,MAAL,CAAYa,IAAZ;;AACA,kBAAIoE,KAAJ,EAAW;AACT,wBAAI,CAAC1H,UAAL,CAAgB2sB,gBAAhB,CAAiCxmB,GAAjC,EAAsC3C,SAAtC,CAAgD,UAACyE,IAAD,EAAU;AACxD,0BAAI,CAACxF,MAAL,CAAYnB,KAAZ;;AACA,0BAAI,CAACorB,0BAAL;;AACA,0BAAI,CAAClqB,KAAL,CAAWc,IAAX,mBAAkC,IAAlC,EAAwC;AACtCkC,4BAAQ,EAAE,IAD4B;AAEtCC,oCAAgB,EAAE,KAFoB;AAGtCC,sCAAkB,EAAE;AAHkB,mBAAxC;AAKD,iBARD;AASD,eAVD,MAUO;AACL,wBAAI,CAAC1F,UAAL,CAAgB2sB,gBAAhB,CAAiCxmB,GAAjC,EAAsC3C,SAAtC,CAAgD,UAACyE,IAAD,EAAU;AACxD,0BAAI,CAACykB,0BAAL;;AACA,0BAAI,CAACjqB,MAAL,CAAYnB,KAAZ;;AACA,0BAAI,CAACkB,KAAL,CAAWc,IAAX,qBAAoC,IAApC,EAA0C;AACxCkC,4BAAQ,EAAE,IAD8B;AAExCC,oCAAgB,EAAE,KAFsB;AAGxCC,sCAAkB,EAAE;AAHoB,mBAA1C;AAKD,iBARD;AASD;AACF,aA1BD;AA2BD;;;iBACD,oBAAW4J,GAAX,EAAgB;AAAA;;AACd,iBAAK3M,cAAL,CACGqD,OADH,CACW;AAAEC,qBAAO,mBAAYqJ,GAAG,CAACxO,YAAhB;AAAT,aADX,EAEG0C,SAFH,CAEa,UAAC2C,GAAD,EAAS;AAClB,kBAAIA,GAAJ,EAAS;AACP,wBAAI,CAAC1D,MAAL,CAAYa,IAAZ;;AACA,wBAAI,CAACtD,UAAL,CAAgB4sB,6BAAhB,CAA8Ctd,GAAG,CAAC/O,EAAlD,EAAsDiD,SAAtD,CACE,UAAC3D,IAAD,EAAU,CAAE,CADd,EAEE,UAACuI,GAAD,EAAS;AACP,sBAAIA,GAAG,CAACC,MAAJ,KAAe,GAAnB,EAAwB;AACtB,4BAAI,CAACqkB,0BAAL;;AACA,4BAAI,CAACjqB,MAAL,CAAYnB,KAAZ;;AACA,4BAAI,CAACkB,KAAL,CAAWc,IAAX,qBAAoC,IAApC,EAA0C;AACxCkC,8BAAQ,EAAE,IAD8B;AAExCC,sCAAgB,EAAE,KAFsB;AAGxCC,wCAAkB,EAAE;AAHoB,qBAA1C;AAKD;AACF,iBAZH;AAcD;AACF,aApBH;AAqBD;;;iBACD,sCAA6B;AAAA;;AAC3B,iBAAK1F,UAAL,CAAgB0sB,0BAAhB,GAA6ClpB,SAA7C,CAAuD,UAACyE,IAAD,EAAU;AAC/D,sBAAI,CAACjB,KAAL,GAAaiB,IAAb;AACA,sBAAI,CAACZ,KAAL,GAAa,QAAI,CAACL,KAAlB;AACD,aAHD;AAID;;;iBACD,uBAAc;AAAA;;AACZ,iBAAKhH,UAAL,CAAgB6sB,gBAAhB,GAAmCrpB,SAAnC,CAA6C,UAACyE,IAAD,EAAU;AACrD,sBAAI,CAACxH,QAAL,GAAgBwH,IAAhB;AACD,aAFD;AAGD;;;iBACD,uBAAc;AAAA;;AACZ,iBAAKjI,UAAL,CAAgBuJ,WAAhB,GAA8B/F,SAA9B,CAAwC,UAACyE,IAAD,EAAU;AAChD,sBAAI,CAAC7H,QAAL,GAAgB6H,IAAhB;AACD,aAFD;AAGD;;;iBACD,yBAAgB;AAAA;;AACd,iBAAKjI,UAAL,CAAgBgI,aAAhB,GAAgCxE,SAAhC,CAA0C,UAACyE,IAAD,EAAU;AAClD,sBAAI,CAAC9H,UAAL,GAAkB8H,IAAlB;AACD,aAFD;AAGD;;;iBACD,qBAAY;AAAA;;AACV,iBAAKjI,UAAL,CAAgB2M,SAAhB,GAA4BnJ,SAA5B,CAAsC,UAACyE,IAAD,EAAU;AAC9C,sBAAI,CAACvH,IAAL,GAAYuH,IAAZ;AACD,aAFD;AAGD;;;;;;;yBAlIUwkB,uC,EAAuC,mI,EAAA,wI,EAAA,sK,EAAA,mK,EAAA,2I;AAAA,O;;;cAAvCA,uC;AAAuC,6D;AAAA,iB;AAAA,gB;AAAA,+xB;AAAA;AAAA;AChBpD;;AACI;;AAAiC;;AAAgC;;AACjE;;AACA;;AAAwC;AAAA,qBAAS,IAAA5W,SAAA,KAAc,IAAd,CAAT;AAA4B,aAA5B;;AAA4C;;AAA4B;;AAClH;;AACA;;AACE;;AACE;;AASM;;AACE;;AAGF;;AACA;;AACI;;AAGF;;AACA;;AACE;;AAGF;;AACF;;AACE;;AAGF;;AACA;;AACE;;AAIF;;AACF;;AACN;;AACF;;;;AAvCsB;;AAAA;;AAIZ;;AAAA,wFAAc,YAAd,EAAc,OAAd,EAAc,cAAd,EAAc,EAAd,EAAc,cAAd,EAAc,EAAd,EAAc,YAAd,EAAc,IAAd,EAAc,OAAd,EAAc,CAAd,EAAc,WAAd,EAAc,EAAd;;AAOmD;;AAAA;;AAKJ;;AAAA;;AAKE;;AAAA;;AAKb;;AAAA;;AAKC;;AAAA;;;;;;qBDtBpC;;;;;;wEAEA4W,uC,EAAuC;gBANnD,uDAMmD;iBANzC;AACTxqB,oBAAQ,EAAE,sCADD;AAETC,uBAAW,EAAE,mDAFJ;AAGTC,qBAAS,EAAE,CAAC,mDAAD,CAHF;AAITqT,sBAAU,EAAC;AAJF,W;AAMyC,U;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEhBpD;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACoDgB;;AACE;;AACF;;;;;;AAFkD;;AAChD;;AAAA;;;;;;;;AAaR;;AACE;;AAA4C;AAAA;;AAAA;;AAAA;AAAA;;AAAwB;;AACpE;;AACF;;;;;;AAUE;;AAA4F;;AAE5F;;;;;;AACA;;AAAqC;;AAAmB;;;;;;AAAnB;;AAAA;;;;;;AAIrC;;AAA8F;;AAC9F;;;;;;AACA;;AAAqC;;AAAqB;;;;;;AAArB;;AAAA;;;;;;AAIrC;;AAA0F;;AAE1F;;;;;;AACA;;AAAqC;;AAAkB;;;;;;AAAlB;;AAAA;;;;;;AAGrC;;AAA2F;;AAE3F;;;;;;AACA;;AAAqC;;AAAmB;;;;;;AAAnB;;AAAA;;;;;;AAGrC;;AAA4F;;AAE5F;;;;;;AACA;;AAAqC;;AAAmB;;;;;;AAAnB;;AAAA;;;;;;AAIrC;;AAA+F;;AAE/F;;;;;;AACA;;AAAqC;;AAAsB;;;;;;AAAtB;;AAAA;;;;;;AAGrC;;AAA8F;;AAE9F;;;;;;AACA;;AAAqC;;AAAqB;;;;;;AAArB;;AAAA;;;;;;AAGrC;;AAA6F;;AAE7F;;;;;;AACA;;AAAqC;;AAAqB;;;;;;AAArB;;AAAA;;;;;;AAGrC;;AAAgG;;AAChG;;;;;;AACA;;AAAqC;;AAAuB;;;;;;AAAvB;;AAAA;;;;;;AAGrC;;AAAkG;;AAClG;;;;;;AACA;;AAAqC;;AAAyB;;;;;;AAAzB;;AAAA;;;;;;AAMrC;;AAAmC;;AAAM;;;;;;;;AACzC;;AACE;;AACC;;AAAgD;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA6B;;AAAI;;AACpF;;AAAM;;AACN;;AACC;;AAAkD;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA+B;;AAAM;;AACxF;;AACA;;;;;;AAGF;;;;;;AACA;;;;;;;;UDzIGsX,wB;AAiBX,0CAAoBtqB,KAApB,EACUG,cADV,EAEU3C,UAFV,EAGUqC,MAHV,EAIUC,cAJV,EAIyC;AAAA;;AAJrB,eAAAE,KAAA,GAAAA,KAAA;AACV,eAAAG,cAAA,GAAAA,cAAA;AACA,eAAA3C,UAAA,GAAAA,UAAA;AACA,eAAAqC,MAAA,GAAAA,MAAA;AACA,eAAAC,cAAA,GAAAA,cAAA;AAnBV,eAAAU,mBAAA,GAA+B,CAA/B;AACA,eAAAJ,UAAA,GAAa,IAAI,0EAAJ,EAAb;AACA,eAAAC,gBAAA,GAA6B,CAAC,QAAD,EAAW,UAAX,EAAsB,QAAtB,EAAgC,YAAhC,EAA6C,cAA7C,EAA6D,QAA7D,CAA7B;AAEA,eAAAC,cAAA,GAAmD,CACjD;AAAEC,eAAG,EAAE,UAAP;AAAmB1B,iBAAK,EAAE;AAA1B,WADiD,CAAnD;AAe4C;;;;iBAE5C,oBAAQ;AACN,iBAAK0rB,aAAL;AACD;;;iBACD,yBAAa;AAAA;;AACX,iBAAK/sB,UAAL,CAAgBgtB,WAAhB,GAA8BxpB,SAA9B,CAAwC,UAAC3D,IAAD,EAAe;AACrD,mBAAI,IAAI4D,CAAC,GAAC,CAAV,EAAYA,CAAC,GAAC5D,IAAI,CAAC6D,MAAnB,EAA0BD,CAAC,EAA3B,EAA8B;AAE5B,oBAAG5D,IAAI,CAAC4D,CAAD,CAAJ,CAAQE,UAAR,IAAsB,GAAzB,EAA6B;AAC3B9D,sBAAI,CAAC4D,CAAD,CAAJ,CAAQE,UAAR,GAAqB,cAArB;AACD;;AACD,oBAAG9D,IAAI,CAAC4D,CAAD,CAAJ,CAAQE,UAAR,IAAsB,GAAzB,EAA8B;AAC5B9D,sBAAI,CAAC4D,CAAD,CAAJ,CAAQE,UAAR,GAAqB,YAArB;AACD;;AACD,oBAAG9D,IAAI,CAAC4D,CAAD,CAAJ,CAAQG,YAAR,IAAwB,GAA3B,EAA+B;AAC7B/D,sBAAI,CAAC4D,CAAD,CAAJ,CAAQG,YAAR,GAAuB,MAAvB;AACD;;AACD,oBAAG/D,IAAI,CAAC4D,CAAD,CAAJ,CAAQG,YAAR,IAAwB,GAA3B,EAA+B;AAC7B/D,sBAAI,CAAC4D,CAAD,CAAJ,CAAQG,YAAR,GAAuB,QAAvB;AACD;AAEF;;AACD,sBAAI,CAACoD,KAAL,GAAanH,IAAb;AACA,sBAAI,CAACwH,KAAL,GAAa,QAAI,CAACL,KAAlB;AACA,sBAAI,CAACpE,UAAL,GAAkB,IAAI,0EAAJ,CAAuB/C,IAAvB,CAAlB;AACA,sBAAI,CAAC+C,UAAL,CAAgBQ,SAAhB,GAA4B,QAAI,CAACA,SAAjC;AACA,sBAAI,CAACR,UAAL,CAAgBS,IAAhB,GAAuB,QAAI,CAACA,IAA5B;AACD,aAtBD;AAuBD;;;iBACD,kBAAM;AACJ,iBAAKhB,MAAL,CAAYwD,QAAZ,CAAqB,CAAC,sDAAD,CAArB;AACD;;;iBACD,kBAAS/B,QAAT,EAAmBC,CAAnB,EAAoB;AAClB,iBAAKC,WAAL,CAAiBF,QAAjB;AACA,iBAAKG,WAAL,CAAiBF,CAAjB;AACD;;;iBACD,qBAAYD,QAAZ,EAAsB;AACpB,iBAAKlB,UAAL,CAAgBuB,eAAhB,GAAkC,UAACtE,IAAD,EAAYuE,MAAZ,EAAwC;;;AACxE,qBAAQ,CAAD,KACLvE,IAAI,CAACiE,QAAD,CADE,MACQ,IADR,IACQ,aADR,GACQ,MADR,GACQ,GAAEO,iBAAF,GAAsBC,QAAtB,CAA+BF,MAA/B,CADhB;AAGD,aAJD;AAKD;;;iBACD,uBAAW;AACT,iBAAKxB,UAAL,CAAgBwB,MAAhB,GAAyB,EAAzB;AACA,iBAAKuC,SAAL,CAAec,aAAf,CAA6BpG,KAA7B,GAAqC,EAArC;AACA,iBAAK2B,mBAAL,GAA2B,CAA3B;AACA;;;iBACD,qBAAYzB,KAAZ,EAA0B;AACzB,gBAAMgD,WAAW,GAAIhD,KAAK,CAACiD,MAAN,CAAkCnD,KAAvD;AACA,iBAAKuB,UAAL,CAAgBwB,MAAhB,GAAyBG,WAAW,CAACE,IAAZ,GAAmBC,WAAnB,EAAzB;AACD;;;iBACD,4BAAmBC,SAAnB,EAAoC;AAClC,gBAAIA,SAAS,CAACC,SAAd,EAAyB;AACvB,mBAAKtC,cAAL,CAAoBuC,QAApB,kBAAuCF,SAAS,CAACC,SAAjD;AACD,aAFD,MAEO;AACL,mBAAKtC,cAAL,CAAoBuC,QAApB,CAA6B,iBAA7B;AACD;AAEF;;;iBACD,oBAAWqD,OAAX,EAAoB;AAAA;;AAClB,iBAAKvF,cAAL,CAAoBqD,OAApB,CAA4B;AAACC,qBAAO,mBAAYiC,OAAO,CAACoB,QAApB;AAAR,aAA5B,EACG9F,SADH,CACa,UAAA2C,GAAG,EAAI;AAChB,kBAAIA,GAAJ,EAAS;AACP,wBAAI,CAACnG,UAAL,CAAgBitB,cAAhB,CAA+B/kB,OAAO,CAAC2d,MAAvC,EACGriB,SADH,CACa,UAAA3D,IAAI,EAAI,CAClB,CAFH,EAGI,UAAAuI,GAAG,EAAE;AACH,sBAAIA,GAAG,CAACC,MAAJ,IAAc,GAAlB,EAAuB;AACrB,4BAAI,CAAC7F,KAAL,CAAWc,IAAX,CAAgB,6BAAhB,EAA+C,IAA/C,EAAqD;AACnDkC,8BAAQ,EAAE,IADyC;AAEnDC,sCAAgB,EAAE,KAFiC;AAGnDC,wCAAkB,EAAE;AAH+B,qBAArD;AAKD;;AAGH,0BAAI,CAACqnB,aAAL;AAED,iBAfH;AAgBD;AAEF,aArBH;AAsBD;;;iBACD,oBAAyC;AAAA,gBAAhCltB,IAAgC,uEAApB,EAAoB;AAAA,gBAAjB0I,MAAiB;AACvC,iBAAKlG,MAAL,CAAYwD,QAAZ,CAAqB,CAAC,sDAAD,CAArB,EAA8E;AAAEC,yBAAW,EAAE;AAAEvF,kBAAE,EAAEV,IAAI,CAACgmB,MAAX;AAAmBtd,sBAAM,EAAGA;AAA5B;AAAf,aAA9E;AACD;;;iBACD,kBAAM;AACJ,iBAAKlG,MAAL,CAAYwD,QAAZ,CAAqB,CAAC,mBAAD,CAArB;AACD;;;;;;;yBA/GUinB,wB,EAAwB,wI,EAAA,sK,EAAA,2I,EAAA,uH,EAAA,gI;AAAA,O;;;cAAxBA,wB;AAAwB,6C;AAAA;AAAA;;;sEAUxB,8D,EAAO,I;;sEACP,wE,EAAY,I;;;;;;;;;;;;;;;;;;ACzBvB;;AAAsB;;AAA0B;;AAC9C;;AAAQ;;AACV;;AACE;;AACE;;AAAU;AAAA,qBAAS,IAAAzmB,MAAA,EAAT;AAAiB,aAAjB;;AAAmB;;AAAU;;AACzC;;AACA;;AACE;;AACF;;AACA;;AACA;;AACE;;AAAU;;AAAS;;AACrB;;AACA;;AACE;;AACE;;AAAM;;AAAM;;AACd;;AACA;;AACE;;AAAM;;AAAQ;;AAChB;;AACF;;AACF;;AACA;;AAEE;;AACE;;AACE;;AACE;;AACE;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AAEF;;AACF;;AACF;;AAEA;;AACE;;AACE;;AACE;;AACE;;AACE;;AAAW;;AAAS;;AACpB;;AAAsC;AAAA;AAAA;;AAEpC;;AAAsB;;AAAM;;AAC5B;;AAGF;;AACF;;AACF;;AACA;;AACE;;AACE;;AAAW;;AAAM;;AACjB;;AAA2B;AAAA;;AAAA;;AAAA,qBAAS,IAAAG,QAAA,mBAAT;AAAwC,aAAxC;;AAA3B;;AAEA;;AAAoB;;AAAM;;AAC5B;;AACF;;AACA;;AAIA;;AACC;;AAA0D;AAAA,qBAAS,IAAAgC,MAAA,EAAT;AAAiB,aAAjB;;AAAoB;;AAC9E;;AACF;;AACF;;AACD;;AACA;;AACE;;AAA4D;AAAA,qBAAiB,IAAA9B,kBAAA,QAAjB;AAA2C,aAA3C;;AAC1D;;AACE;;AAGA;;AACF;;AAEA;;AACE;;AAEA;;AACF;;AAEA;;AACE;;AAGA;;AACF;;AACA;;AACE;;AAGA;;AACF;;AACA;;AACE;;AAGA;;AACF;;AAEA;;AACE;;AAGA;;AACF;;AACA;;AACE;;AAGA;;AACF;;AACA;;AACE;;AAGA;;AACF;;AACA;;AACE;;AAEA;;AACF;;AACA;;AACE;;AAEA;;AACF;;AAIA;;AACE;;AACA;;AAQF;;AAEA;;AACA;;AACF;;AACA;;AACF;;AACF;;AACF;;;;;;;;;;AAlJ0B;;AAAA;;AAoCwB;;AAAA;;AAGL;;AAAA;;AAc/B;;AAAA;;AAWkB;;AAAA;;AA4EP;;AAAA;;AACa;;AAAA;;AAEH;;AAAA;;;;;;;;;wED3IxBomB,wB,EAAwB;gBALpC,uDAKoC;iBAL1B;AACT7qB,oBAAQ,EAAE,sBADD;AAETC,uBAAW,EAAE,mCAFJ;AAGTC,qBAAS,EAAE,CAAC,mCAAD;AAHF,W;AAK0B,U;;;;;;;;;;;;;AACXwE,mBAAS,EAAE,CAAF;kBAAhC,uDAAgC;mBAAtB,W;AAAsB,WAAE,C;AASftD,cAAI,EAAE,CAAF;kBAAvB,uDAAuB;mBAAb,8D;AAAa,WAAE,C;AACDD,mBAAS,EAAE,CAAF;kBAAjC,uDAAiC;mBAAvB,wE;AAAuB,WAAE;;;;;;;;;;;;;;;;;;;AE5BtC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACaK;;AAEG;;AAAU;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACN;;AACI;;AACI;;AACI;;AAAa;;AAAqB;;AAClC;;AAA8B;;AAA8G;;AAC9I;;AAEN;;AACA;;AACI;;AACJ;;AACJ;;AAEF;;AAEL;;;;;;AAZgC;;AAAA;;AACiB;;AAAA;;;;UDXzC8pB,gB;AAEX,kCAAoBtkB,WAApB,EAAsD6F,SAAtD,EAAyE;AAAA;;AAArD,eAAA7F,WAAA,GAAAA,WAAA;AAAkC,eAAA6F,SAAA,GAAAA,SAAA;AAAyB;;;;iBAE/E,oBAAQ;AAAA;;AACN,iBAAK7F,WAAL,CAAiBukB,QAAjB,CAA0B3pB,SAA1B,CAAoC,UAAC3D,IAAD,EAAc;AAChD,sBAAI,CAACutB,QAAL,GAAgBvtB,IAAhB;AACD,aAFD;AAGD;;;iBAED,gBAAO;AACL,iBAAK4O,SAAL,CAAe6Y,IAAf;AACD;;;;;;;yBAZU4F,gB,EAAgB,6I,EAAA,yH;AAAA,O;;;cAAhBA,gB;AAAgB,qC;AAAA,iB;AAAA,e;AAAA,8iB;AAAA;AAAA;ACT7B;;AACI;;AACI;;AAAwB;AAAA,qBAAS,IAAA5F,IAAA,EAAT;AAAe,aAAf;;AACpB;;AAAU;;AAAU;;AACtB;;AACA;;AACE;;AACF;;AACA;;AACH;;AACP;;AAEG;;AACE;;AAqBH;;;;AA5BU;;AAAA;;AAO2B;;AAAA;;;;;;;;;wEDJ1B4F,gB,EAAgB;gBAL5B,uDAK4B;iBALlB;AACTjrB,oBAAQ,EAAE,cADD;AAETC,uBAAW,EAAE,2BAFJ;AAGTC,qBAAS,EAAE,CAAC,2BAAD;AAHF,W;AAKkB,U;;;;;;;;;;;;;;;;;;;;;;;;AET7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACAsG;;AAAsB;;AAAG;;;;;;AAAQ;;AAAqB;;AAAI;;;;;;AAK9J;;AAAqC;;AAAqB;;;;;;AAC1D;;AAAoC;;AAAsB;;;;;;AAiBrD;;AACC;;AACF;;;;;;AAFqE;;AACnE;;AAAA;;;;;;AAGA;;AAEA;;AACJ;;;;;;AAdA;;AACE;;AAAW;;AAAW;;AACtB;;AACE;;AAID;;AAGD;;AACE;;AAIF;;AACF;;;;;;AATkC;;AAAA,iGAAe,cAAf,EAAe,mBAAf;;AAK7B;;AAAA;;;;;;AAKL;;AACE;;AAAW;;AAAW;;AACtB;;AACE;;AAKF;;AACF;;;;;;AALc;;AAAA;;;;;;AAaF;;AACA;;AACA;;;;;;AAF+D;;AAC/D;;AAAA;;;;;;AAGJ;;AAEJ;;AACJ;;;;;;AAbA;;AAEQ;;AAAW;;AAAQ;;AACnB;;AACA;;AAEI;;AAGJ;;AACA;;AAIF;;AACN;;;;;;AATyC;;AAAA,+FAAa,cAAb,EAAa,iBAAb;;AAKpC;;AAAA;;;;;;AAKL;;AACE;;AAAW;;AAAS;;AACpB;;AACE;;AAKF;;AACF;;;;;;AALc;;AAAA;;;;;;AAgBV;;AAEA;;AACJ;;;;;;AAZA;;AAEI;;AAAW;;AAAa;;AACxB;;AACA;;AAEI;;AAAsB;;AAAI;;AAC1B;;AAAsB;;AAAK;;AAC/B;;AACA;;AAIF;;AACF;;;;;;AAJK;;AAAA;;;;;;AAKL;;AACE;;AAAW;;AAAa;;AACxB;;AACE;;AAKF;;AACF;;;;;;AALc;;AAAA;;;;;;AAeV;;AAEA;;AACD;;;;;;AAaC;;AAEA;;AACJ;;;;;;AAWM;;AAEA;;AACJ;;;;;;AAXF;;AACE;;AAAW;;AAAc;;AACvB;;AACE;;AAEE;;AAAsB;;AAAC;;AACvB;;AAAsB;;AAAC;;AAC3B;;AACE;;AAIF;;AACF;;;;;;AAJK;;AAAA;;;;;;AAMP;;AACE;;AAAW;;AAAa;;AACxB;;AACE;;AAKF;;AACF;;;;;;AALc;;AAAA;;;;;;AASV;;AAA2G;;AAC7G;;;;;;AAD4C;;;;;;AAI1C;;AAA0G;;AACxG;;;;;;AADwC;;;;;;;;AAI1C;;AAAwE;AAAA;;AAAA;;AAAA;AAAA;;AACtE;;AACF;;;;;;;;AAGA;;AAAwE;AAAA;;AAAA;;AAAA,wCAAsB,MAAtB;AAA4B,WAA5B;;AACtE;;AACF;;;;;;AAHF;;AACE;;AAES;;AACX;;;;;;AAJoE;;AACzD;;AAAA;;;;;;;;AAKT;;AAAuE;AAAA;;AAAA;;AAAA,wCAAsB,MAAtB;AAA4B,WAA5B;;AACrE;;AACF;;;;;;AAHF;;AACE;;AAES;;AACX;;;;;;AAJkF;;AACvE;;AAAA;;;;;;;;AAKT;;AAAuE;AAAA;;AAAA;;AAAA,wCAAsB,OAAtB;AAA6B,WAA7B;;AACrE;;AACF;;;;;;AAHF;;AACE;;AAES;;AACX;;;;;;AAJiF;;AACtE;;AAAA;;;;;;;;AAKT;;AAAuE;AAAA;;AAAA;;AAAA,wCAAsB,QAAtB;AAA8B,WAA9B;;AACrE;;AACF;;;;;;AAHF;;AACE;;AAEU;;AACZ;;;;;;AAJ4C;;AACjC;;AAAA;;;;;;AAoBf;;;;UDzLWkrB,6B;AAqBX,gDACE;AACA;AACShrB,cAHX,EAGkCG,KAHlC,EAIUzC,EAJV,EAIkC0W,GAJlC,EAI0D5N,KAJ1D,EAKYF,GALZ,EAK4CC,WAL5C,EAKkFlG,EALlF,EAMY1C,UANZ,EAMiC;AAAA;;AAHtB,eAAAqC,MAAA,GAAAA,MAAA;AAAuB,eAAAG,KAAA,GAAAA,KAAA;AACxB,eAAAzC,EAAA,GAAAA,EAAA;AAAwB,eAAA0W,GAAA,GAAAA,GAAA;AAAwB,eAAA5N,KAAA,GAAAA,KAAA;AAC9C,eAAAF,GAAA,GAAAA,GAAA;AAAgC,eAAAC,WAAA,GAAAA,WAAA;AAAsC,eAAAlG,EAAA,GAAAA,EAAA;AACtE,eAAA1C,UAAA,GAAAA,UAAA;AAvBZ,eAAAwQ,UAAA,GAAsB,IAAtB;AACA,eAAAjI,MAAA,GAAkB,KAAlB;AACA,eAAAkI,MAAA,GAAkB,IAAlB;AACA,eAAAC,IAAA,GAAO,KAAP;AACA,eAAAC,OAAA,GAAoB,KAApB;AASA,eAAA3E,WAAA,GAAwB,KAAxB;AACA,eAAAlD,WAAA,GAAqB,IAArB;AAUK;;;;iBAEL,oBAAW;AAAA;;AACT,iBAAK6V,iBAAL;AACA,iBAAKpV,WAAL;AACA,iBAAK/I,aAAL,CAAmB,EAAnB;AAGA,iBAAKqI,KAAL,CAAWE,aAAX,CAAyBvF,SAAzB,CAAmC,UAACwF,MAAD,EAAiB;AAClD,sBAAI,CAAC0N,YAAL,GAAoB1N,MAAM,CAACC,GAAP,CAAW,QAAX,CAApB,CADkD,CACT;;AACzC,kBAAGD,MAAM,CAACC,GAAP,CAAW,QAAX,KAAwB,KAA3B,EAAiC;AAC9B,wBAAI,CAACuH,UAAL,GAAkB,KAAlB;AACF,wBAAI,CAACC,MAAL,GAAa,IAAb;AACA,wBAAI,CAACE,OAAL,GAAe,IAAf;AACA,eAJD,MAKK,IAAG3H,MAAM,CAACC,GAAP,CAAW,QAAX,KAAwB,IAA3B,EAAgC;AAClC,wBAAI,CAACuH,UAAL,GAAkB,IAAlB;AACA,wBAAI,CAACC,MAAL,GAAa,IAAb;AACD,wBAAI,CAACE,OAAL,GAAe,KAAf;AACD,eAJI,MAKA,IAAG3H,MAAM,CAACC,GAAP,CAAW,QAAX,KAAwB,OAA3B,EAAmC;AACtC,wBAAI,CAACuH,UAAL,GAAkB,KAAlB;AACA,wBAAI,CAACC,MAAL,GAAa,KAAb;AACA,wBAAI,CAACE,OAAL,GAAe,KAAf;AACD,eAJI,MAKA,IAAG3H,MAAM,CAACC,GAAP,CAAW,QAAX,KAAwB,IAA3B,EAAgC;AACrC,wBAAI,CAACwH,MAAL,GAAa,KAAb;AACC;;AACD,kBAAGzH,MAAM,CAACC,GAAP,CAAW,IAAX,CAAH,EAAoB;AAClB,wBAAI,CAACV,MAAL,GAAc,IAAd;AACA,wBAAI,CAAChI,EAAL,GAAUyI,MAAM,CAACC,GAAP,CAAW,IAAX,CAAV;;AACA,wBAAI,CAACwN,GAAL,CAAS7F,cAAT,CAAwB5H,MAAM,CAACC,GAAP,CAAW,IAAX,CAAxB,EAA0CzF,SAA1C,CAAoD,UAACyE,IAAD,EAAS;AAC1D,0BAAI,CAACzH,aAAL,CAAmByH,IAAnB;AACF,iBAFD;;AAGA,wBAAI,CAACwO,GAAL,CAAS2F,gBAAT,CAA0BpT,MAAM,CAACC,GAAP,CAAW,IAAX,CAA1B,EAA4CzF,SAA5C,CAAsD,UAACyE,IAAD,EAAa;AACjE,0BAAI,CAACzH,aAAL,CAAmByH,IAAnB;;AACA,sBAAIA,IAAI,CAACtE,UAAL,IAAiB,GAArB,EAA0B;AACxBsE,wBAAI,CAAC+B,QAAL,GAAe,EAAf;AACA/B,wBAAI,CAAC8B,MAAL,GAAY,EAAZ;AACD;;AACD,0BAAI,CAAC0C,SAAL,GAAiBxE,IAAjB;AACA,0BAAI,CAAC+D,WAAL,GAAmB,IAAnB;;AACA,0BAAI,CAACpD,WAAL,CAAiBQ,eAAjB,CAAiC,QAAI,CAACqD,SAAtC;AACF,iBATA;AAUD,eAhBD,MAiBI;AACF,wBAAI,CAAC3D,WAAL,GAAiB,KAAjB;;AACA,wBAAI,CAACtI,aAAL,CAAmB,EAAnB;AACD;AAEF,aA1CD;AA8CA,iBAAKyC,YAAL,GAAoB,KAAKP,EAAL,CAAQQ,OAAR,CAAgB,YAAhB,EAA8BoG,QAAlD;AAGD;;;iBAED,uBAAc3I,IAAd,EAAoB;AAClB,iBAAKC,QAAL,GAAgB,KAAKb,EAAL,CAAQc,KAAR,CAAc;AAC5B8C,wBAAU,EAAE,CAAChD,IAAI,CAACgD,UAAL,IAAmB,EAApB,CADgB;AAE5BvD,sBAAQ,EAAE,CAACO,IAAI,CAACP,QAAL,IAAiB,EAAlB,EAAqB,CAAC,0DAAWW,QAAZ,CAArB,CAFkB;AAG5B0M,2BAAa,EAAC,CAAC9M,IAAI,CAAC8M,aAAL,IAAsB,EAAvB,EAA0B,CAAC,0DAAW1M,QAAZ,CAA1B,CAHc;AAI5BgG,wBAAU,EAAC,CAACpG,IAAI,CAACoG,UAAL,IAAmB,EAApB,EAAuB,CAAC,0DAAWhG,QAAZ,CAAvB,CAJiB;AAK5BusB,2BAAa,EAAC,CAAC3sB,IAAI,CAAC2sB,aAAL,IAAsB,EAAvB,EAA0B,CAAC,0DAAWvsB,QAAZ,CAA1B,CALc;AAM5BgW,sBAAQ,EAAC,CAACpW,IAAI,CAACoW,QAAL,IAAiB,IAAlB,CANmB;AAO5B9I,yBAAW,EAAC,CAACtN,IAAI,CAACsN,WAAL,IAAoB,EAArB,EAAwB,CAAC,0DAAWlN,QAAZ,CAAxB,CAPgB;AAQ5BR,gBAAE,EAAE,CAACI,IAAI,CAACJ,EAAL,IAAW,EAAZ,CARwB;AAS5B8J,yBAAW,EAAC,CAAC1J,IAAI,CAAC0J,WAAL,IAAoB,EAArB,CATgB;AAU5BzG,0BAAY,EAAC,CAACjD,IAAI,CAACiD,YAAL,IAAqB,EAAtB,CAVe;AAW5B0G,qBAAO,EAAC,CAAC3J,IAAI,CAAC2J,OAAL,IAAgB,EAAjB,CAXoB;AAY5BijB,0BAAY,EAAC,CAAC5sB,IAAI,CAAC4sB,YAAL,IAAqB,EAAtB,EAAyB,CAAC,0DAAWxsB,QAAZ,CAAzB,CAZe;AAa5BkC,0BAAY,EAAC,CAACtC,IAAI,CAACsC,YAAL,IAAqB,EAAtB;AAbe,aAAd,CAAhB,CADkB,CAiBlB;AAED;;;iBAED,kBAAS;AACP,iBAAKZ,MAAL,CAAYwD,QAAZ,CAAqB,uCAArB;AACD;;;iBACD,sBAAa4E,SAAb,EAAsB;AAAA;;AACpB,+DAAKC,IAAL,CACE;AACE;AACAC,kBAAI,EAAE,uBAAsBF,SAAtB,GAAiC,UAAjC,GAA8C,0BAFtD;AAGEG,8BAAgB,EAAE,IAHpB;AAIEC,gCAAkB,EAAE,SAJtB;AAKEC,+BAAiB,EAAE,MALrB;AAME;AACAC,8BAAgB,EAAE,IAPpB;AAQEC,+BAAiB,EAAE,KARrB;AAQ4B,sBAAQ;AARpC,aADF,EAWEC,IAXF,CAWQ,UAAAC,MAAM,EAAI;AAChB,kBAAGA,MAAM,CAACC,WAAP,IAAoB,IAAvB,EAA4B;AAC1B,wBAAI,CAACnL,UAAL,CAAgBuc,qBAAhB,CAAsC,QAAI,CAAC9P,SAAL,CAAelM,EAArD,EACCiD,SADD,CACW,UAAA3D,IAAI,EAAI;AACjB,0BAAI,CAACwC,MAAL,CAAYwD,QAAZ,CAAqB,uCAArB;AACD,iBAHD,EAIA,UAAAuC,GAAG,EAAE;AACH,sBAAIA,GAAG,CAACC,MAAJ,IAAc,GAAlB,EAAuB;AACrB,4BAAI,CAAC7F,KAAL,CAAWc,IAAX,CAAgB,6BAAhB,EAA+C,IAA/C,EAAqD;AACnDkC,8BAAQ,EAAE,IADyC;AAEnDC,sCAAgB,EAAE,KAFiC;AAGnDC,wCAAkB,EAAE;AAH+B,qBAArD;AAKD;;AACD,0BAAI,CAACrD,MAAL,CAAYwD,QAAZ,CAAqB,uCAArB;AAEH,iBAdC;AAeD;AAAC,aA5BJ;AAgCD;;;iBACD,sBAAU;AACR,iBAAKiD,WAAL,GAAiB,KAAjB;AACD;;;iBAED,sBAAa2B,SAAb,EAAwB;AAAA;;AACtB,+DAAKC,IAAL,CACE;AACE;AACAC,kBAAI,EAAE,uBAAsBF,SAAtB,GAAiC,UAAjC,GAA8C,0BAFtD;AAGEG,8BAAgB,EAAE,IAHpB;AAIEC,gCAAkB,EAAE,SAJtB;AAKEC,+BAAiB,EAAE,MALrB;AAME;AACAC,8BAAgB,EAAE,IAPpB;AAQEC,+BAAiB,EAAE,KARrB;AAQ4B,sBAAQ;AARpC,aADF,EAWEC,IAXF,CAWQ,UAAAC,MAAM,EAAI;AAChB,kBAAGA,MAAM,CAACC,WAAP,IAAoB,IAAvB,EAA4B;AAC1B,oBAAI7K,OAAO,GAAQ,EAAnB;AACJA,uBAAO,CAACC,EAAR,GAAa,QAAI,CAACA,EAAlB;AACAD,uBAAO,CAACmK,SAAR,GAAoBA,SAApB;AACAnK,uBAAO,CAAC2C,YAAR,GAAuB,QAAI,CAACA,YAA5B;;AACA,wBAAI,CAACjD,UAAL,CAAgBkX,8BAAhB,CAA+C5W,OAA/C,EAAwDkD,SAAxD,CAAkE,UAAC3D,IAAD,EAAU;AAC1E,sBAAIA,IAAI,CAAC8D,UAAL,IAAiB,GAArB,EAA0B;AAC1B9D,wBAAI,CAACmK,QAAL,GAAgB,EAAhB;AACAnK,wBAAI,CAACkK,MAAL,GAAc,EAAd;AACC;;AAED,0BAAI,CAAC0C,SAAL,GAAiB5M,IAAjB;;AACA,0BAAI,CAAC+I,WAAL,CAAiBQ,eAAjB,CAAiC,QAAI,CAACqD,SAAtC;;AACA,0BAAI,CAACT,WAAL,GAAmB,IAAnB;;AACA,0BAAI,CAACpD,WAAL,CAAiBS,cAAjB;;AACA,sBAAIpD,OAAO,GAAG,EAAd;;AACA,0BAAQwE,SAAR;AACE,yBAAK,MAAL;AACExE,6BAAO,GAAG,QAAV;AACA;;AACF,yBAAK,OAAL;AACEA,6BAAO,GAAG,QAAV;AACA;;AACF,yBAAK,MAAL;AACEA,6BAAO,GAAG,YAAV;AACA;;AACF;AACE;AAXJ;;AAaA,0BAAI,CAACzD,KAAL,CAAWc,IAAX,kBAA0B2C,OAA1B,sBAAoD,IAApD,EAA0D;AACxDT,4BAAQ,EAAE,IAD8C;AAExDC,oCAAgB,EAAE,KAFsC;AAGxDC,sCAAkB,EAAE;AAHoC,mBAA1D;AAKD,iBA7BD;AA8BG;AAAC,aA/CJ;AAiDD;;;iBAED,kBAAS;AAAA;;AACP,gBAAG,KAAK9E,QAAL,CAAcyM,OAAjB,EAAyB;AACzB;AACC,aAFD,MAEK;AACL,mBAAKzM,QAAL,CAAcS,KAAd,CAAoB4B,YAApB,GAAmC,KAAKA,YAAxC;AACA,mBAAKwT,GAAL,CAAS+W,mBAAT,CAA6B,KAAK5sB,QAAL,CAAcS,KAA3C,EAAkDmC,SAAlD,CAA4D,UAAA3D,IAAI,EAAI;AAClE,oBAAGA,IAAI,IAAI,IAAR,IAAgB,QAAI,CAAC0I,MAAL,IAAe,IAAlC,EAAuC;AACrC,0BAAI,CAAClG,MAAL,CAAYwD,QAAZ,CAAqB,uCAArB,EAA8DoF,IAA9D,CAAmE,UAAA0C,CAAC,EAAE;AAC9D,4BAAI,CAACnL,KAAL,CAAWc,IAAX,CAAgB,eAAhB,EAAiC,IAAjC,EACA;AAAEkC,8BAAQ,EAAE,IAAZ;AACEC,sCAAgB,EAAE,KADpB;AAEEC,wCAAkB,EAAE;AAFtB,qBADA;AAIC,mBALT;;AAMA,0BAAI,CAACiD,GAAL,CAAS4B,YAAT;AACD,iBARD,MASK,IAAG1K,IAAI,IAAI,IAAR,IAAgB,QAAI,CAAC0I,MAAL,IAAe,IAAlC,EAAuC;AAC3C;AACC,0BAAI,CAAClG,MAAL,CAAYwD,QAAZ,CAAqB,uCAArB,EAA8DoF,IAA9D,CAAmE,UAAA0C,CAAC,EAAE;AACpE,4BAAI,CAACnL,KAAL,CAAWc,IAAX,CAAgB,aAAhB,EAA+B,IAA/B,EACA;AAAEkC,8BAAQ,EAAE,IAAZ;AACEC,sCAAgB,EAAE,KADpB;AAEEC,wCAAkB,EAAE;AAFtB,qBADA;AAIC,mBALH;;AAMA,0BAAI,CAACiD,GAAL,CAAS4B,YAAT;AACA;AACH,eApBD;AAqBC;AACF;;;iBAED,6BAAiB;AAAA;;AACf,iBAAKkM,GAAL,CAASkI,iBAAT,GAA6Bnb,SAA7B,CAAuC,UAAC3D,IAAD,EAAU;AAC/C,sBAAI,CAACkH,UAAL,GAAkBlH,IAAlB;AACD,aAFD;AAID;;;iBACD,uBAAW;AAAA;;AACT,iBAAK4W,GAAL,CAASlN,WAAT,GAAuB/F,SAAvB,CAAiC,UAAEpD,QAAF,EAAmB;AAClD,sBAAI,CAACA,QAAL,GAAcA,QAAd;AACC,aAFH;AAGD;;;iBAED,yBAAgB;AAAA;;AACd,iBAAKqW,GAAL,CAAS7J,aAAT,GAAyBpJ,SAAzB,CAAmC,UAACyE,IAAD,EAAU;AAC3C,sBAAI,CAACiE,MAAL,GAAcjE,IAAd;AACD,aAFD;AAGD;;;iBAED,mBAAU1G,KAAV,EAAsB;AACpB,gBAAMC,OAAO,GAAG,OAAhB;AACA,gBAAIC,SAAS,GAAGC,MAAM,CAACC,YAAP,CAAoBJ,KAAK,CAACK,QAA1B,CAAhB;;AACA,gBAAI,CAACJ,OAAO,CAACK,IAAR,CAAaJ,SAAb,CAAL,EAA8B;AAC5BF,mBAAK,CAACO,cAAN;AACD;AACF;;;iBACD,8BAAqBP,KAArB,EAA4B;AAC1B,gBAAI4L,GAAG,GAAGzL,MAAM,CAACC,YAAP,CAAoBJ,KAAK,CAAC6L,OAA1B,CAAV;;AACA,gBAAI,cAAcvL,IAAd,CAAmBsL,GAAnB,CAAJ,EAA6B;AAC3B,qBAAO,IAAP;AACD,aAFD,MAEO;AACL5L,mBAAK,CAACO,cAAN;AACA,qBAAO,KAAP;AACD;AACF;;;iBACD,sBAAaoC,KAAb,EAAmB+jB,OAAnB,EAA0B;AACxB,mBAAOA,OAAO,CAAClhB,UAAf;AACD;;;iBACD,oBAAW7C,KAAX,EAAiBkT,KAAjB,EAAsB;AACpB,mBAAOA,KAAK,CAAChX,QAAb;AACD;;;;;;;yBA7QUitB,6B,EAA6B,uH,EAAA,wI,EAAA,2H,EAAA,2I,EAAA,+H,EAAA,gI,EAAA,6I,EAAA,0J,EAAA,2I;AAAA,O;;;cAA7BA,6B;AAA6B,oD;AAAA;AAAA;;;;;;;;;;;;;;;AClB1C;;AAAsB;;AAA0B;;AAAsD;;AAAiC;;AAAiC;;AAAiB;;AACzL;;AACE;;AAAwB;AAAA,qBAAS,IAAAhnB,MAAA,EAAT;AAAiB,aAAjB;;AACpB;;AAAU;;AAAU;;AACxB;;AACA;;AACA;;AACF;;AACA;;AACE;;AAIA;;AAA6B;AAAA,qBAAY,IAAAtE,MAAA,EAAZ;AAAoB,aAApB;;AAC7B;;AACE;;AACA;;AAiBA;;AAWA;;AAgBA;;AAWA;;AAeA;;AAWA;;AACE;;AAAW;;AAAe;;AAC1B;;AACE;;AAKA;;AAIF;;AACF;;AACF;;AACA;;AACE;;AACE;;AAAW;;AAAe;;AAC1B;;AACE;;AAKA;;AAIF;;AACF;;AACA;;AAcA;;AACA;;AAWA;;AACE;;AACE;;AAEF;;AACA;;AACE;;AAEF;;AACA;;AACE;;AAES;;AACX;;AACA;;AAKA;;AAKA;;AAKA;;AAMA;;AAIE;AAAA,qBAAS,IAAAsE,MAAA,EAAT;AAAiB,aAAjB;;AAEA;;AACF;;AACF;;AACF;;AACA;;AACA;;AACF;;AAEA;;AACE;;AACF;;AA5MA;;;;AAA6G;;AAAA;;AAAiC;;AAAA;;AAKvI;;AAAA;;AACA;;AAAA;;AAOC;;AAAA;;AAG6B;;AAAA;;AAiBA;;AAAA;;AAWA;;AAAA;;AAgBA;;AAAA;;AAWA;;AAAA;;AAeA;;AAAA;;AAenB;;AAAA;;AAKT;;AAAA;;AAWS;;AAAA;;AAKT;;AAAA;;AAK2B;;AAAA;;AAeC;;AAAA;;AAa+D;;AAAA;;AAGzF;;AAAA;;AACyF;;AAAA;;AAGzF;;AAAA;;AACM;;AAAA;;AAIL;;AAAA;;AAKA;;AAAA;;AAKA;;AAAA;;AAKA;;AAAA;;AAqBM;;AAAA;;;;;;;;;wEDzLLgnB,6B,EAA6B;gBALzC,uDAKyC;iBAL/B;AACTprB,oBAAQ,EAAE,6BADD;AAETC,uBAAW,EAAE,0CAFJ;AAGTC,qBAAS,EAAE,CAAC,0CAAD;AAHF,W;AAK+B,U;;;;;;;;;;;;;;;;;;;;;AACjB+P,kBAAQ;kBAA9B,uDAA8B;mBAApB,U;AAAoB;;;;;;;;;;;;;;;;;;;AEnBjoDY;;AACE;;AACF;;;;;;AAFgF;;AAC9E;;AAAA;;;;;;;;AAaR;;AACE;;AAA4C;AAAA;;AAAA;;AAAA;AAAA;;AAAwB;;AACpE;;AACF;;;;;;AAoBE;;AAA0F;;AAC1F;;;;;;AACA;;AAAqC;;AAAyB;;;;;;AAAzB;;AAAA;;;;;;AAGrC;;AAAiG;;AACjG;;;;;;AACA;;AAAqC;;AAA2B;;;;;;AAA3B;;AAAA;;;;;;AAGrC;;AAAgG;;AAChG;;;;;;AACA;;AAAqC;;AAAyB;;;;;;AAAzB;;AAAA;;;;;;AAGrC;;AAAkG;;AAClG;;;;;;AACA;;AAAqC;;AAA2B;;;;;;AAA3B;;AAAA;;;;;;AAGrC;;AAAmC;;AAAM;;;;;;;;AACzC;;AACE;;AACC;;AAAgD;AAAA;;AAAA;;AAAA;;AAAA,kDAA2B,KAA3B;AAAgC,WAAhC;;AAAqC;;AAAI;;AAC5F;;AAAM;;AACN;;AACC;;AAAyF;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA+B;;AAAM;;AAC/H;;AACA;;;;;;AAFmD;;AAAA;;;;;;AAIrD;;;;;;AACF;;;;;;;;UD3FOub,kC;AA6BX,oDACU3mB,MADV,EAEUtE,KAFV,EAGUG,cAHV,EAIUF,MAJV,EAKUzC,UALV,EAMUqC,MANV,EAOUuG,WAPV,EAQUlG,EARV,EASUJ,cATV,EAUUC,eAVV,EAU0C;AAAA;;AAThC,eAAAuE,MAAA,GAAAA,MAAA;AACA,eAAAtE,KAAA,GAAAA,KAAA;AACA,eAAAG,cAAA,GAAAA,cAAA;AACA,eAAAF,MAAA,GAAAA,MAAA;AACA,eAAAzC,UAAA,GAAAA,UAAA;AACA,eAAAqC,MAAA,GAAAA,MAAA;AACA,eAAAuG,WAAA,GAAAA,WAAA;AACA,eAAAlG,EAAA,GAAAA,EAAA;AACA,eAAAJ,cAAA,GAAAA,cAAA;AACA,eAAAC,eAAA,GAAAA,eAAA;AArCV,eAAAS,mBAAA,GAA8B,CAA9B;AACA,eAAAH,gBAAA,GAA6B,CAAE,YAAF,EAAgB,eAAhB,EAAiC,YAAjC,EAA8C,cAA9C,EAA6D,QAA7D,CAA7B;AACA,eAAAC,cAAA,GAAmD,CACjD;AAAEC,eAAG,EAAE,YAAP;AAAqB1B,iBAAK,EAAE;AAA5B,WADiD,CAAnD;AAMA,eAAAuB,UAAA,GAAa,IAAI,2EAAJ,EAAb;AAIA,eAAAoE,KAAA,GAAe,EAAf;AACA,eAAAvG,QAAA,GAAqB,EAArB;AACA,eAAAC,IAAA,GAAc,EAAd;AACA,eAAAP,UAAA,GAAuB,EAAvB;AACA,eAAAC,QAAA,GAAqB,EAArB;AAUA,eAAA2G,UAAA,GAAoB,EAApB;AAYI;;;;iBAEJ,sBAAaxF,KAAb,EAAoB;AAAA;;AAClBuD,mBAAO,CAACC,GAAR,CAAY,OAAZ,EAAoBxD,KAAK,CAACyD,IAAN,CAAW,CAAX,EAAcC,KAAd,CAAoB,CAApB,CAApB;AACA,gBAAMC,IAAI,GAAS3D,KAAK,CAACyD,IAAN,CAAW,CAAX,EAAcC,KAAd,CAAoB,CAApB,CAAnB;AACA,gBAAME,UAAU,GAAG,IAAIC,QAAJ,EAAnB;AACAD,sBAAU,CAACE,MAAX,CAAkB,YAAlB,EAAgC,iBAAhC;AACAF,sBAAU,CAACE,MAAX,CAAkB,MAAlB,EAA0BH,IAA1B;AACA,iBAAKlF,UAAL,CAAgB0tB,UAAhB,CAA2BvoB,UAA3B,EAAuC3B,SAAvC,CACE,UAAC+B,QAAD,EAAc;AACZT,qBAAO,CAACC,GAAR,CAAYQ,QAAZ;;AACA,sBAAI,CAACooB,qBAAL;;AACA,sBAAI,CAACnrB,KAAL,CAAWc,IAAX,CAAgB,4BAAhB,EAA8C,IAA9C,EAAoD;AAClDkC,wBAAQ,EAAE,IADwC;AAElDC,gCAAgB,EAAE,KAFgC;AAGlDC,kCAAkB,EAAE;AAH8B,eAApD;AAKD,aATH,EAUE,UAACgP,KAAD,EAAW;AACT5P,qBAAO,CAACC,GAAR,CAAY2P,KAAZ;;AACA,sBAAI,CAAClS,KAAL,CAAWc,IAAX,CAAgB,eAAhB,EAAiC,IAAjC,EAAuC;AACrCkC,wBAAQ,EAAE,IAD2B;AAErCC,gCAAgB,EAAE,KAFmB;AAGrCC,kCAAkB,EAAE;AAHiB,eAAvC;AAKD,aAjBH;AAmBD;;;iBAED,qBAAY;AACV,gBAAMkoB,GAAG,GAAG,EAAZ;AACA,gBAAM1e,IAAI,GAAG,CACX,CAAC,YAAD,EAAe,eAAf,EAAgC,YAAhC,EAA8C,cAA9C,CADW,CAAb;AAGA,gBAAMC,IAAI,GAAG,EAAb;AACA,iBAAKnI,KAAL,CAAWgb,GAAX,CAAe,UAAC0D,IAAD,EAAU;AACvB,kBAAMkI,GAAG,GAAG,EAAZ;AACA1e,kBAAI,CAAC,CAAD,CAAJ,CAAQ8S,GAAR,CAAY,UAACve,CAAD;AAAA,uBACV,CAAC,CAACiiB,IAAI,CAACjiB,CAAD,CAAN,GAAYmqB,GAAG,CAACliB,IAAJ,CAASga,IAAI,CAACjiB,CAAD,CAAJ,CAAQwR,QAAR,EAAT,CAAZ,GAA2C2Y,GAAG,CAACliB,IAAJ,CAAS,KAAT,CADjC;AAAA,eAAZ;AAGAyD,kBAAI,CAACzD,IAAL,CAAUkiB,GAAV;AACA;AACD,aAPD;AAQA,gBAAM3e,GAAG,GAAG,IAAI,8CAAJ,EAAZ;AAECA,eAAW,CAAC4e,SAAZ,CAAsB;AACrB3e,kBAAI,EAAJA,IADqB;AAErBC,kBAAI,EAAJA,IAFqB;AAGrB2e,mBAAK,EAAE;AAHc,aAAtB,EAhBS,CAsBV;;AACA7e,eAAG,CAAC8e,MAAJ,CAAW,kBAAX,EAvBU,CAyBV;;AACA9e,eAAG,CAACW,IAAJ,CAAS,WAAT;AACD;;;iBAED,oBAAW;AACT,iBAAK3D,WAAL,GAAmB,KAAKvJ,EAAL,CAAQQ,OAAR,CAAgB,YAAhB,CAAnB;AACA,iBAAKyJ,SAAL;AACA,iBAAKgd,cAAL,GAHS,CAIT;AACA;;AACA,iBAAKgE,qBAAL;AACA,iBAAKjhB,WAAL;AACA,iBAAKnD,WAAL;AACA,iBAAKvB,aAAL;AACA,iBAAK2E,SAAL;AACA,iBAAKC,aAAL;AACD;;;iBAED,uBAAc;AACZ,gBAAI,KAAKzF,UAAT,EAAqB;AACnB,mBAAKA,UAAL,CAAgBC,WAAhB;AACD;AACF;;;iBAED,oBAAW;AACT,iBAAKC,KAAL,GAAa,KAAKL,KAAlB;AACD;;;iBAGD,kBAASlD,QAAT,EAAmBC,CAAnB,EAAsB;AACpB,iBAAKC,WAAL,CAAiBF,QAAjB;AACA,iBAAKG,WAAL,CAAiBF,CAAjB;AACD;;;iBAED,qBAAYD,QAAZ,EAAsB;AACpB,iBAAKlB,UAAL,CAAgBuB,eAAhB,GAAkC,UAACtE,IAAD,EAAYuE,MAAZ,EAAwC;AACxE,qBAAOvE,IAAI,CAACiE,QAAD,CAAJ,CAAeO,iBAAf,GAAmCC,QAAnC,CAA4CF,MAA5C,CAAP;AACD,aAFD;AAGD;;;iBAED,uBAAc;AACZ,iBAAKxB,UAAL,CAAgBwB,MAAhB,GAAyB,EAAzB;AACA,iBAAKuC,SAAL,CAAec,aAAf,CAA6BpG,KAA7B,GAAqC,EAArC;AACA,iBAAK2B,mBAAL,GAA2B,CAA3B;AACD;;;iBAED,qBAAYzB,KAAZ,EAA0B;AACxB,gBAAMgD,WAAW,GAAIhD,KAAK,CAACiD,MAAN,CAAkCnD,KAAvD;AACA,iBAAKuB,UAAL,CAAgBwB,MAAhB,GAAyBG,WAAW,CAACE,IAAZ,GAAmBC,WAAnB,EAAzB;AACD,W,CACD;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBAEA,4BAAmBC,SAAnB,EAAoC;AAClC,gBAAIA,SAAS,CAACC,SAAd,EAAyB;AACvB,mBAAKtC,cAAL,CAAoBuC,QAApB,kBAAuCF,SAAS,CAACC,SAAjD;AACD,aAFD,MAEO;AACL,mBAAKtC,cAAL,CAAoBuC,QAApB,CAA6B,iBAA7B;AACD;AACF;;;iBAGD,kBAAS;AACP,iBAAKxC,MAAL,CAAYwD,QAAZ,CAAqB,CAAC,4CAAD,CAArB;AACD;;;iBAED,kBAAS;AACP,iBAAKxD,MAAL,CAAYwD,QAAZ,CAAqB,sBAArB;AACD;;;iBAED,mBAAUyJ,GAAV,EAAe;AACbxK,mBAAO,CAACC,GAAR,CAAYuK,GAAZ;AACA,iBAAK0e,uBAAL,CAA6B1e,GAA7B,EAFa,CAGb;;AACA,iBAAKjN,MAAL,CAAYwD,QAAZ,CAAqB,kDAA2CyJ,GAAG,CAAC/O,EAA/C,EAArB;AACD;;;iBAED,oBAAW+O,GAAX,EAAgB;AAAA;;AACd,iBAAK3M,cAAL,CACGqD,OADH,CACW;AAAEC,qBAAO,mBAAYqJ,GAAG,CAACvI,UAAhB;AAAT,aADX,EAEGvD,SAFH,CAEa,UAAC2C,GAAD,EAAS;AAClB,kBAAIA,GAAJ,EAAS;AACP,wBAAI,CAAC1D,MAAL,CAAYa,IAAZ;;AACA,wBAAI,CAACtD,UAAL,CAAgBgqB,uBAAhB,CAAwC1a,GAAG,CAAC/O,EAA5C,EAAgDiD,SAAhD,CACE,UAAC3D,IAAD,EAAU,CAAE,CADd,EAEE,UAACuI,GAAD,EAAS;AACP,sBAAIA,GAAG,CAACC,MAAJ,KAAe,GAAnB,EAAwB;AACtB,4BAAI,CAAC5F,MAAL,CAAYnB,KAAZ;;AACA,4BAAI,CAACkB,KAAL,CAAWc,IAAX,qBAAoC,IAApC,EAA0C;AACxCkC,8BAAQ,EAAE,IAD8B;AAExCC,sCAAgB,EAAE,KAFsB;AAGxCC,wCAAkB,EAAE;AAHoB,qBAA1C;;AAKA,4BAAI,CAACioB,qBAAL;AACD;AACF,iBAZH;AAcD;AACF,aApBH;AAqBD;;;iBACD,iCAAwB;AAAA;;AACtB,iBAAKtP,OAAL,GAAe,IAAf;AACA,iBAAKre,UAAL,CAAgBiuB,uBAAhB,GAA0CzqB,SAA1C,CAAoD,UAACyE,IAAD,EAAU;AAC5D,mBAAI,IAAIxE,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACwE,IAAI,CAACvE,MAAnB,EAA0BD,CAAC,EAA3B,EAA8B;AAC5B,oBAAGwE,IAAI,CAACxE,CAAD,CAAJ,CAAQE,UAAR,IAAsB,GAAzB,EAA6B;AAC3BsE,sBAAI,CAACxE,CAAD,CAAJ,CAAQE,UAAR,GAAqB,cAArB;AACD;;AACD,oBAAGsE,IAAI,CAACxE,CAAD,CAAJ,CAAQE,UAAR,IAAsB,GAAzB,EAA8B;AAC5BsE,sBAAI,CAACxE,CAAD,CAAJ,CAAQE,UAAR,GAAqB,YAArB;AACD;;AACD,oBAAGsE,IAAI,CAACxE,CAAD,CAAJ,CAAQG,YAAR,IAAwB,GAA3B,EAA+B;AAC7BqE,sBAAI,CAACxE,CAAD,CAAJ,CAAQG,YAAR,GAAuB,MAAvB;AACD;;AACD,oBAAGqE,IAAI,CAACxE,CAAD,CAAJ,CAAQG,YAAR,IAAwB,GAA3B,EAA+B;AAC7BqE,sBAAI,CAACxE,CAAD,CAAJ,CAAQG,YAAR,GAAuB,QAAvB;AACD;AACF;;AACDkB,qBAAO,CAACC,GAAR,CAAYkD,IAAZ;AACA,sBAAI,CAACjB,KAAL,GAAaiB,IAAb;AACA,sBAAI,CAACZ,KAAL,GAAa,QAAI,CAACL,KAAlB;AACA,sBAAI,CAACpE,UAAL,GAAkB,IAAI,2EAAJ,CAAuBqF,IAAvB,CAAlB;AACAnD,qBAAO,CAACC,GAAR,CAAY,QAAI,CAACnC,UAAjB;AACA,sBAAI,CAACA,UAAL,CAAgBQ,SAAhB,GAA4B,QAAI,CAACA,SAAjC;AACA,sBAAI,CAACiE,KAAL,GAAaY,IAAb;AACA,sBAAI,CAACrF,UAAL,CAAgBS,IAAhB,GAAuB,QAAI,CAACA,IAA5B;AACA,sBAAI,CAACgb,OAAL,GAAe,KAAf;AACD,aAxBD;AAyBD;;;iBAED,qBAAY;AAAA;;AACV,gBAAIpQ,WAAW,GAAG,GAAlB;AACA,iBAAKjO,UAAL,CAAgBkO,WAAhB,CAA4BD,WAA5B,EAAyCzK,SAAzC,CAAmD,UAACyE,IAAD,EAAU;AAC3DnD,qBAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBkD,IAAxB;AACA,sBAAI,CAACvH,IAAL,GAAYuH,IAAZ;AACD,aAHD;AAID;;;iBAED,0BAAiB;AAAA;;AACf,gBAAIgG,WAAW,GAAG,GAAlB;AACA,iBAAKjO,UAAL,CAAgBkO,WAAhB,CAA4BD,WAA5B,EAAyCzK,SAAzC,CAAmD,UAACyE,IAAD,EAAU;AAC3D,sBAAI,CAACuhB,KAAL,GAAavhB,IAAb;AACD,aAFD;AAGD;;;iBACD,iCAAwBqH,GAAxB,EAA6B;AAAA;;AAC3B,iBAAK7M,MAAL,CAAYa,IAAZ;AACA,iBAAKtD,UAAL,CAAgBkuB,yBAAhB,CAA0C5e,GAAG,CAAC/O,EAA9C,EAAkDiD,SAAlD,CAA4D,UAAC0H,MAAD,EAAY;AACtEpG,qBAAO,CAACC,GAAR,CAAYmG,MAAZ;AACA,sBAAI,CAACrL,IAAL,GAAYqL,MAAZ;AACA,sBAAI,CAACoC,QAAL,GAAgB,QAAI,CAAC5M,IAAL,CAAU6M,IAAV,CAAe,UAACC,CAAD;AAAA,uBAAOA,CAAC,CAACjN,EAAF,IAAQ,QAAI,CAACV,IAAL,CAAUK,MAAzB;AAAA,eAAf,CAAhB;AACA,sBAAI,CAACL,IAAL,CAAUK,MAAV,GAAmB,QAAI,CAACoN,QAAL,CAAcG,aAAjC;AACA,sBAAI,CAACyc,SAAL,GAAiB,QAAI,CAACV,KAAL,CAAWjc,IAAX,CAAgB,UAACC,CAAD;AAAA,uBAAOA,CAAC,CAACjN,EAAF,IAAQ,QAAI,CAACV,IAAL,CAAUiqB,aAAzB;AAAA,eAAhB,CAAjB;AACA,sBAAI,CAACjqB,IAAL,CAAUiqB,aAAV,GAA0B,QAAI,CAACI,SAAL,CAAezc,aAAzC;AAEA,sBAAI,CAAC0gB,WAAL,GAAmB,QAAI,CAACtuB,IAAxB;;AAEA,kBAAI,QAAI,CAACsuB,WAAL,IAAoB,IAAxB,EAA8B;AAC5B5hB,4BAAY,CAACjE,OAAb,CAAqB,aAArB,EAAoC+D,IAAI,CAACgJ,SAAL,CAAe,QAAI,CAAC8Y,WAApB,CAApC;AACArpB,uBAAO,CAACC,GAAR,CAAY,QAAI,CAACopB,WAAjB;;AACA,wBAAI,CAAC1rB,MAAL,CAAYnB,KAAZ;AACD;AACF,aAfD;AAgBD;;;iBAED,iCAAwB;AACtB,iBAAKiB,eAAL,CAAqBoD,aAArB,CAAmC,uBAAnC,EAA4D,KAAKqB,KAAjE;AACD;;;iBAED,yBAAgB;AAAA;;AACd,iBAAKhH,UAAL,CAAgB4M,aAAhB,GAAgCpJ,SAAhC,CAA0C,UAACyE,IAAD,EAAU;AAClDnD,qBAAO,CAACC,GAAR,CAAYkD,IAAZ;AACA,sBAAI,CAAClB,UAAL,GAAkBkB,IAAlB;AACD,aAHD;AAID;;;iBAED,uBAAc;AAAA;;AACZ,iBAAKjI,UAAL,CAAgB6sB,gBAAhB,GAAmCrpB,SAAnC,CAA6C,UAACyE,IAAD,EAAU;AACrD,sBAAI,CAACxH,QAAL,GAAgBwH,IAAhB;AACD,aAFD;AAGD;;;iBACD,uBAAc;AAAA;;AACZ,iBAAKjI,UAAL,CAAgBuJ,WAAhB,GAA8B/F,SAA9B,CAAwC,UAACyE,IAAD,EAAU;AAChD,sBAAI,CAAC7H,QAAL,GAAgB6H,IAAhB;AACD,aAFD;AAGD;;;iBACD,yBAAgB;AAAA;;AACd,iBAAKjI,UAAL,CAAgBgI,aAAhB,GAAgCxE,SAAhC,CAA0C,UAACyE,IAAD,EAAU;AAClD,sBAAI,CAAC9H,UAAL,GAAkB8H,IAAlB;AACD,aAFD;AAGD;;;iBACD,8BAAqB7D,MAArB,EAA6B;AAC3B,mBAAOA,MAAM,CAACrB,GAAd;AACD;;;;;;;yBAlSU0qB,kC,EAAkC,mI,EAAA,wI,EAAA,sK,EAAA,mK,EAAA,2I,EAAA,uH,EAAA,6I,EAAA,0J,EAAA,iI,EAAA,sJ;AAAA,O;;;cAAlCA,kC;AAAkC,0D;AAAA;AAAA;;;sEAOlC,+D,EAAO,I;;sEACP,yE,EAAY,I;;;;;;;;;;;;;;;;;;ACxCzB;;AAAsB;;AAA0B;;AAA+D;;AAC/G;;AACA;;AACE;;AACF;;AACA;;AACE;;AAAwB;AAAA,qBAAS,IAAApnB,MAAA,EAAT;AAAiB,aAAjB;;AACtB;;AAAU;;AAAU;;AACtB;;AACA;;AAA0B;;AAAkC;;AAC9D;;AACA;;AACE;;AACE;;AACE;;AACE;;AACE;;AACE;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AAEF;;AACF;;AACF;;AACA;;AACA;;AACE;;AAAU;;AAAS;;AACrB;;AACA;;AACE;;AACE;;AAAoC;;AAAM;;AAC1C;;AAIE;AAAA,qBAAU,IAAAC,YAAA,QAAV;AAA8B,aAA9B;;AAJF;;AAMF;;AACA;;AAAQ;AAAA,qBAAS,IAAA8nB,qBAAA,EAAT;AAAgC,aAAhC;;AACN;;AAAM;;AAAQ;;AAChB;;AACF;;AACF;;AACA;;AACE;;AACI;;AACE;;AACE;;AAAW;;AAAS;;AACpB;;AAAsC;AAAA;AAAA;;AAEpC;;AAAsB;;AAAM;;AAC5B;;AAGF;;AACF;;AACF;;AACA;;AACE;;AACE;;AAAW;;AAAM;;AACjB;;AAA2B;AAAA;;AAAA;;AAAA,qBAAS,IAAA5nB,QAAA,mBAAT;AAAyC,aAAzC;;AAA3B;;AAEA;;AAAoB;;AAAM;;AAC5B;;AACF;;AACA;;AAIA;;AACC;;AAA0D;AAAA,qBAAS,IAAAgC,MAAA,EAAT;AAAiB,aAAjB;;AAAoB;;AAC9E;;AACF;;AACD;;AACF;;AAWA;;AACE;;AAA4D;AAAA,qBAAiB,IAAA9B,kBAAA,QAAjB;AAA2C,aAA3C;;AAC1D;;AACE;;AAEA;;AACF;;AACA;;AACE;;AAEA;;AACF;;AACA;;AACE;;AAEA;;AACF;;AACA;;AACE;;AAEA;;AACF;;AACA;;AACE;;AACA;;AAQF;;AACA;;AACF;;AACF;;AACA;;AACF;;AAEA;;;;;;;;;;AA7Hc;;AAAA;;AA0BY;;AAAA;;AAuBsB;;AAAA;;AAGL;;AAAA,oGAAmB,aAAnB,EAAmB,wBAAnB;;AAc/B;;AAAA;;AAqBkB;;AAAA;;AAgCP;;AAAA;;AACW;;AAAA;;AAEH;;AAAA;;;;;;qBD/FnB;;;;;;wEAED+mB,kC,EAAkC;gBAN9C,uDAM8C;iBANpC;AACTxrB,oBAAQ,EAAE,mCADD;AAETC,uBAAW,EAAE,gDAFJ;AAGTC,qBAAS,EAAE,CAAC,gDAAD,CAHF;AAITqT,sBAAU,EAAE;AAJH,W;AAMoC,U;;;;;;;;;;;;;;;;;;;;;;;AACrB7O,mBAAS,EAAE,CAAF;kBAAhC,uDAAgC;mBAAtB,W;AAAsB,WAAE,C;AAMftD,cAAI,EAAE,CAAF;kBAAvB,uDAAuB;mBAAb,+D;AAAa,WAAE,C;AACDD,mBAAS,EAAE,CAAF;kBAAjC,uDAAiC;mBAAvB,yE;AAAuB,WAAE;;;;;;;;;;;;;;;;;;;AEvCtoDa;;AACE;;AACF;;;;;;AAFkD;;AAChD;;AAAA;;;;;;;;AAYR;;AACE;;AAA4C;AAAA;;AAAA;;AAAA;AAAA;;AAAwB;;AACpE;;AACF;;;;;;AAiBE;;AAA8F;;AAC9F;;;;;;AACA;;AAAqC;;AAAqB;;;;;;AAArB;;AAAA;;;;;;AAIrC;;AAAoG;;AACjG;;;;;;AACH;;AAAqC;;AAAqB;;;;;;AAArB;;AAAA;;;;;;AAQrC;;AAAkG;;AACjG;;;;;;AACD;;AAAqC;;AAAwB;;;;;;AAAxB;;AAAA;;;;;;AAGrC;;AAAgG;;AAC/F;;;;;;AACD;;AAAqC;;AAAuB;;;;;;AAAvB;;AAAA;;;;;;AAGrC;;AAAkG;;AACjG;;;;;;AACD;;AAAqC;;AAAyB;;;;;;AAAzB;;AAAA;;;;;;AAIrC;;AAAmC;;AAAM;;;;;;;;AACzC;;AACE;;AACC;;AAAgD;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA6B;;AAAI;;AACpF;;AAAM;;AACN;;AACC;;AAAkD;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA+B;;AAAM;;AACxF;;AACA;;;;;;AAGF;;;;;;AACA;;;;;;;;UDhHMirB,+B;AA+BX,iDAAoBhsB,MAApB,EAA4CC,cAA5C,EAAmFK,cAAnF,EACU3C,UADV,EAC0CwC,KAD1C,EACqEoG,WADrE,EAC8F;AAAA;;AAD1E,eAAAvG,MAAA,GAAAA,MAAA;AAAwB,eAAAC,cAAA,GAAAA,cAAA;AAAuC,eAAAK,cAAA,GAAAA,cAAA;AACzE,eAAA3C,UAAA,GAAAA,UAAA;AAAgC,eAAAwC,KAAA,GAAAA,KAAA;AAA2B,eAAAoG,WAAA,GAAAA,WAAA;AA9BrE,eAAA5F,mBAAA,GAA+B,CAA/B;AAEA,eAAAJ,UAAA,GAAa,IAAI,0EAAJ,EAAb;AACA,eAAAC,gBAAA,GAA6B,CAAE,UAAF,EAAc,UAAd,EAA2B,aAA3B,EAA0C,YAA1C,EAAwD,cAAxD,EAAwE,QAAxE,CAA7B;AACA,eAAAC,cAAA,GAAmD,CAEjD;AAAEC,eAAG,EAAE,UAAP;AAAmB1B,iBAAK,EAAE;AAA1B,WAFiD,EAGjD;AAAE0B,eAAG,EAAE,UAAP;AAAmB1B,iBAAK,EAAE;AAA1B,WAHiD,CAAnD,CA0B8F,CAjB9F;AACA;AACA;;AACA,eAAAod,UAAA,GAAuB,EAAvB;AACA,eAAAre,QAAA,GAAqB,EAArB;AACA,eAAA2G,UAAA,GAAsB,EAAtB;AACA,eAAAC,KAAA,GAAe,EAAf;AAWiG;;;;iBAEjG,oBAAQ;AACN;AACA;AACA;AACA,iBAAKE,QAAL;AACD;;;iBAED,uBAAc;AACZ,gBAAI,KAAKC,UAAT,EAAqB;AACnB,mBAAKA,UAAL,CAAgBC,WAAhB;AACD;AACF,W,CAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;iBAEA,oBAAW;AAAA;;AACT,iBAAKpH,UAAL,CAAgBsuB,gBAAhB,GAAmC9qB,SAAnC,CAA6C,UAAC6d,QAAD,EAAmB;AAC9D,kBAAGA,QAAH,EAAY;AACV,qBAAI,IAAI5d,CAAC,GAAC,CAAV,EAAYA,CAAC,GAAC4d,QAAQ,CAAC3d,MAAvB,EAA8BD,CAAC,EAA/B,EAAkC;AAChC,sBAAG4d,QAAQ,CAAC5d,CAAD,CAAR,CAAYE,UAAZ,IAA0B,GAA7B,EAAiC;AAC/B0d,4BAAQ,CAAC5d,CAAD,CAAR,CAAYE,UAAZ,GAAyB,cAAzB;AACD;;AACD,sBAAG0d,QAAQ,CAAC5d,CAAD,CAAR,CAAYE,UAAZ,IAA0B,GAA7B,EAAkC;AAChC0d,4BAAQ,CAAC5d,CAAD,CAAR,CAAYE,UAAZ,GAAyB,YAAzB;AACD;;AACD,sBAAG0d,QAAQ,CAAC5d,CAAD,CAAR,CAAYG,YAAZ,IAA4B,GAA/B,EAAmC;AACjCyd,4BAAQ,CAAC5d,CAAD,CAAR,CAAYG,YAAZ,GAA2B,MAA3B;AACD;;AACD,sBAAGyd,QAAQ,CAAC5d,CAAD,CAAR,CAAYG,YAAZ,IAA4B,GAA/B,EAAmC;AACjCyd,4BAAQ,CAAC5d,CAAD,CAAR,CAAYG,YAAZ,GAA2B,QAA3B;AACD;;AACD,sBAAGyd,QAAQ,CAAC5d,CAAD,CAAR,CAAY4G,WAAZ,IAA2B,GAA9B,EAAkC;AAChCgX,4BAAQ,CAAC5d,CAAD,CAAR,CAAY4G,WAAZ,GAA0B,IAA1B;AACD;;AACD,sBAAGgX,QAAQ,CAAC5d,CAAD,CAAR,CAAY4G,WAAZ,IAA2B,GAA9B,EAAkC;AAChCgX,4BAAQ,CAAC5d,CAAD,CAAR,CAAY4G,WAAZ,GAA0B,KAA1B;AACD;AAEF;;AACH,wBAAI,CAACkkB,uBAAL,GAA+BlN,QAA/B;AACE,wBAAI,CAACha,KAAL,GAAc,QAAI,CAACknB,uBAAnB;AACAzpB,uBAAO,CAACC,GAAR,CAAY,UAAZ,EAAwB,QAAI,CAACsC,KAA7B;AACA,wBAAI,CAACzE,UAAL,GAAkB,IAAI,0EAAJ,CAAuBye,QAAvB,CAAlB;AACA,wBAAI,CAACze,UAAL,CAAgBQ,SAAhB,GAA4B,QAAI,CAACA,SAAjC;AACA,wBAAI,CAACR,UAAL,CAAgBS,IAAhB,GAAuB,QAAI,CAACA,IAA5B;AACD;AACA,aA9BH;AAgCD;;;iBAED,sBAAa9B,KAAb,EAAoB;AAAA;;AAClBuD,mBAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBxD,KAAK,CAACyD,IAAN,CAAW,CAAX,EAAcC,KAAd,CAAoB,CAApB,CAArB;AACA,gBAAMC,IAAI,GAAS3D,KAAK,CAACyD,IAAN,CAAW,CAAX,EAAcC,KAAd,CAAoB,CAApB,CAAnB;AACA,gBAAME,UAAU,GAAG,IAAIC,QAAJ,EAAnB;AACAD,sBAAU,CAACE,MAAX,CAAkB,YAAlB,EAAgC,cAAhC;AACAF,sBAAU,CAACE,MAAX,CAAkB,MAAlB,EAA0BH,IAA1B;AACA,iBAAKlF,UAAL,CAAgBsF,cAAhB,CAA+BH,UAA/B,EAA2C3B,SAA3C,CAAqD,UAAC+B,QAAD,EAAc;AACjE,sBAAI,CAAC2B,QAAL;;AACApC,qBAAO,CAACC,GAAR,CAAYQ,QAAZ;;AACA,sBAAI,CAAC/C,KAAL,CAAWc,IAAX,+BAA8C,IAA9C,EAAoD;AAClDkC,wBAAQ,EAAE,IADwC;AAElDC,gCAAgB,EAAE,KAFgC;AAGlDC,kCAAkB,EAAE;AAH8B,eAApD;AAKD,aARD;AAUD;;;iBACD,qBAAS;AAAA;;AACP,iBAAK1F,UAAL,CAAgBygB,aAAhB,CAA8B,KAAKlgB,EAAnC,EAAuCiD,SAAvC,CAAiD,UAACyE,IAAD,EAAS;AACzDnD,qBAAO,CAACC,GAAR,CAAY,kBAAZ,EAA+BkD,IAA/B;AACA,sBAAI,CAACwY,aAAL,GAAmBxY,IAAnB;AACA,aAHD;AAIAnD,mBAAO,CAACC,GAAR,CAAY,KAAK0b,aAAjB;AACA,iBAAK7X,WAAL,CAAiB0T,YAAjB,CAA8B,KAAKmE,aAAnC;AACA,iBAAKpe,MAAL,CAAYwD,QAAZ,CAAqB,qEAA8D,KAAKtF,EAAnE,EAArB;AACD,W,CACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBAEA,kBAAM;AACJ,iBAAK8B,MAAL,CAAYwD,QAAZ,CAAqB,CAAC,sCAAD,CAArB;AACD;;;iBAED,kBAAS/B,QAAT,EAAmBC,CAAnB,EAAoB;AAClBe,mBAAO,CAACC,GAAR,CAAYjB,QAAZ,EAAqBC,CAArB;AACA,iBAAKC,WAAL,CAAiBF,QAAjB;AACA,iBAAKG,WAAL,CAAiBF,CAAjB;AACD;;;iBACD,qBAAYxC,KAAZ,EAA0B;AAExB,gBAAMgD,WAAW,GAAIhD,KAAK,CAACiD,MAAN,CAAkCnD,KAAvD;AACAyD,mBAAO,CAACC,GAAR,CAAY,aAAZ,EAA0BR,WAA1B;AACA,iBAAK3B,UAAL,CAAgBwB,MAAhB,GAAyBG,WAAW,CAACE,IAAZ,GAAmBJ,iBAAnB,EAAzB;AACD;;;iBAED,uBAAW;AACT,iBAAKzB,UAAL,CAAgBwB,MAAhB,GAAyB,EAAzB;AACA,iBAAKuC,SAAL,CAAec,aAAf,CAA6BpG,KAA7B,GAAqC,EAArC;AACA,iBAAK2B,mBAAL,GAA2B,CAA3B;AACA;;;iBAED,qBAAYc,QAAZ,EAAsB;AAErB,iBAAKlB,UAAL,CAAgBuB,eAAhB,GAAkC,UAACtE,IAAD,EAAYuE,MAAZ,EAAwC;AACxEU,qBAAO,CAACC,GAAR,CAAY,UAAZ,EAAuBlF,IAAI,CAACiE,QAAD,CAA3B;;AACA,kBAAGjE,IAAI,CAACiE,QAAD,CAAJ,IAAiB,IAApB,EAAyB;AACzB,uBACEjE,IAAI,CAACiE,QAAD,CAAJ,CAAeW,IAAf,GAAsBJ,iBAAtB,GAA0CC,QAA1C,CAAmDF,MAAnD,CADF;AAEE;AACH,aAND;AAOD;;;iBAEA,4BAAmBO,SAAnB,EAAoC;AACnC,gBAAIA,SAAS,CAACC,SAAd,EAAyB;AACvB,mBAAKtC,cAAL,CAAoBuC,QAApB,kBAAuCF,SAAS,CAACC,SAAjD;AACD,aAFD,MAEO;AACL,mBAAKtC,cAAL,CAAoBuC,QAApB,CAA6B,iBAA7B;AACD;AACF;;;iBACD,oBAAyC;AAAA,gBAAhChF,IAAgC,uEAApB,EAAoB;AAAA,gBAAjB0I,MAAiB;AACvCzD,mBAAO,CAACC,GAAR,CAAY,MAAZ,EAAmBwD,MAAnB;AACAzD,mBAAO,CAACC,GAAR,CAAY,KAAZ,EAAkBlF,IAAI,CAACU,EAAvB;AACAuE,mBAAO,CAACC,GAAR,CAAY,SAAZ,EAAsBlF,IAAtB;AAEA,iBAAKwC,MAAL,CAAYwD,QAAZ,CAAqB,CAAC,sCAAD,CAArB,EAA8D;AAAEC,yBAAW,EAAE;AAAEvF,kBAAE,EAAEV,IAAI,CAACU,EAAX;AAAegI,sBAAM,EAAGA;AAAxB;AAAf,aAA9D;AACD;;;iBAED,oBAAWL,OAAX,EAAoB;AAAA;;AAClBpD,mBAAO,CAACC,GAAR,CAAY,SAAZ,EAAsBmD,OAAO,CAAC3H,EAA9B;AACA,iBAAKoC,cAAL,CAAoBqD,OAApB,CAA4B;AAACC,qBAAO,oBAAaiC,OAAO,CAAC3H,EAArB;AAAR,aAA5B,EACGiD,SADH,CACa,UAAA2C,GAAG,EAAI;AAChB,kBAAIA,GAAJ,EAAS;AACP,wBAAI,CAACnG,UAAL,CAAgBkjB,UAAhB,CAA2Bhb,OAAO,CAAC3H,EAAnC,EACGiD,SADH,CACa,UAAA3D,IAAI,EAAI,CAClB,CAFH,EAGI,UAAAuI,GAAG,EAAE;AACH,sBAAIA,GAAG,CAACC,MAAJ,IAAc,GAAlB,EAAuB;AACrB,4BAAI,CAAC7F,KAAL,CAAWc,IAAX,CAAgB,6BAAhB,EAA+C,IAA/C,EAAqD;AACnDkC,8BAAQ,EAAE,IADyC;AAEnDC,sCAAgB,EAAE,KAFiC;AAGnDC,wCAAkB,EAAE;AAH+B,qBAArD;AAMD;;AACD,0BAAI,CAACwB,QAAL;AACH,iBAbH;AAcD;AACF,aAlBH;AAmBD;;;iBAED,kBAAM;AACJ,iBAAK7E,MAAL,CAAYwD,QAAZ,CAAqB,CAAC,mBAAD,CAArB;AACD;;;;;;;yBAxOUwoB,+B,EAA+B,uH,EAAA,gI,EAAA,sK,EAAA,2I,EAAA,wI,EAAA,6I;AAAA,O;;;cAA/BA,+B;AAA+B,qD;AAAA;AAAA;;;sEAa/B,8D,EAAO,I;;sEACP,wE,EAAY,I;;;;;;;;;;;;;;;;;;AChCzB;;AAAsB;;AAA0B;;AAA6C;;AAAQ;;AACnG;;AACE;;AAAwB;AAAA,qBAAS,IAAAhoB,MAAA,EAAT;AAAiB,aAAjB;;AACpB;;AAAU;;AAAU;;AACtB;;AACA;;AACE;;AACF;;AACJ;;AAEA;;AACC;;AACC;;AACE;;AACE;;AACE;;AACC;;AACD;;AACF;;AACF;;AACA;;AACE;;AACE;;AAEF;;AACF;;AACF;;AACG;;AACA;;AACE;;AAAU;;AAAS;;AACrB;;AACA;;AACE;;AACC;;AAAoC;;AAAM;;AAC1C;;AAIE;AAAA,qBAAU,IAAAC,YAAA,QAAV;AAA8B,aAA9B;;AAJF;;AAMF;;AACC;;AACE;;AAAM;;AAAQ;;AAChB;;AACF;;AACH;;AACA;;AACE;;AACC;;AACE;;AAEE;;AAAsC;AAAA;AAAA;;AACpC;;AAAsB;;AAAM;;AAC5B;;AAGF;;AACF;;AACF;;AACA;;AACE;;AAEE;;AAA2B;AAAA;;AAAA;;AAAA,qBAAS,IAAAE,QAAA,mBAAT;AAAwC,aAAxC;;AAA3B;;AACA;;AAAoB;;AAAM;;AAC5B;;AACF;;AACA;;AAIA;;AACC;;AAA0D;AAAA,qBAAS,IAAAgC,MAAA,EAAT;AAAiB,aAAjB;;AAAoB;;AAC9E;;AACF;;AACD;;AACF;;AACA;;AACE;;AAA4D;AAAA,qBAAiB,IAAA9B,kBAAA,QAAjB;AAA2C,aAA3C;;AAQ1D;;AACE;;AAEA;;AACF;;AAEA;;AACE;;AAEA;;AACF;;AAMA;;AACE;;AAEA;;AACF;;AACA;;AACE;;AAEA;;AACF;;AACA;;AACE;;AAEA;;AACF;;AAEA;;AACE;;AACA;;AAQF;;AAEA;;AACA;;AACF;;AACA;;AACF;;AACD;;;;;;;;;;AA1G6B;;AAAA;;AAuBkB;;AAAA;;AAEL;;AAAA;;AAa/B;;AAAA;;AAWkB;;AAAA;;AAoDP;;AAAA;;AACa;;AAAA;;AAEH;;AAAA;;;;;;;;;wEDlHrB2nB,+B,EAA+B;gBAL3C,uDAK2C;iBALjC;AACTpsB,oBAAQ,EAAE,8BADD;AAETC,uBAAW,EAAE,2CAFJ;AAGTC,qBAAS,EAAE,CAAC,2CAAD;AAHF,W;AAKiC,U;;;;;;;;;;;;;;;AAClBwE,mBAAS,EAAE,CAAF;kBAAhC,uDAAgC;mBAAtB,W;AAAsB,WAAE,C;AAYftD,cAAI,EAAE,CAAF;kBAAvB,uDAAuB;mBAAb,8D;AAAa,WAAE,C;AACDD,mBAAS,EAAE,CAAF;kBAAjC,uDAAiC;mBAAvB,wE;AAAuB,WAAE;;;;;;;;;;;;;;;;;;;AEhCtC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACkBgB;;;;;;AAAA;;;;;;AAKE;;;;;;AAAA;;;;;;AAKA;;;;;;AAAA;;;;;;AAKF;;AAAoE;;AAAwC;;;;;;AAAtF,uFAAmB,UAAnB,EAAmB,eAAnB;;AAA8C;;AAAA;;;;;;;;AAKpE;;AAAoE;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAyB;;AAAU;;AAAI;;AAAW;;AACtH;;AAAmD;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA0B;;AAAU;;AAAM;;AAAW;;;;;;;;;;;;;;;;;;UDzB3GorB,iC;AAIX,mDACU1nB,MADV,EAEUtE,KAFV,EAGUG,cAHV,EAIUF,MAJV,EAKUgU,GALV,EAK0B;AAAA;;AAJhB,eAAA3P,MAAA,GAAAA,MAAA;AACA,eAAAtE,KAAA,GAAAA,KAAA;AACA,eAAAG,cAAA,GAAAA,cAAA;AACA,eAAAF,MAAA,GAAAA,MAAA;AACA,eAAAgU,GAAA,GAAAA,GAAA;AACL;;;;iBAEL,oBAAQ;AACN,iBAAKvP,QAAL;AACD;;;iBAED,uBAAc;AACZ,gBAAI,KAAKC,UAAT,EAAqB;AACnB,mBAAKA,UAAL,CAAgBC,WAAhB;AACD;AACF;;;iBACD,oBAAW;AAAA;;AACV;AACC,iBAAKD,UAAL,GAAkB,KAAKsP,GAAL,CAASgY,wBAAT,GACfjrB,SADe,CACL,UAAA3D,IAAI,EAAI;AACjB,sBAAI,CAACwH,KAAL,GAAaxH,IAAb;AACD,aAHe,CAAlB;AAID;;;iBAED,qBAAkC;AAAA;;AAAA,gBAAxBA,IAAwB,uEAAZ,EAAY;AAAA,gBAAR6H,KAAQ;AAChC5C,mBAAO,CAACC,GAAR,CAAY,QAAZ,EAAqBlF,IAArB;AACA,gBAAI8H,KAAK,GAAGD,KAAK,GAAG,0BAAH,GAAgC,yBAAjD;AACA,gBAAI5H,SAAS,GAAsB,KAAKgH,MAAL,CAAYxD,IAAZ,CAAiB,oKAAjB,EAAqD;AACtFsE,mBAAK,EAAE,OAD+E;AAEtFC,0BAAY,EAAE,IAFwE;AAGtFhI,kBAAI,EAAE;AAAE8H,qBAAK,EAAEA,KAAT;AAAgBrH,uBAAO,EAAET;AAAzB;AAHgF,aAArD,CAAnC;AAKAC,qBAAS,CAACgI,WAAV,GACGtE,SADH,CACa,UAAA2C,GAAG,EAAI;AAChB,kBAAG,CAACA,GAAJ,EAAS;AACP;AACA;AACD;;AACD,sBAAI,CAAC1D,MAAL,CAAYa,IAAZ;;AACA,kBAAIoE,KAAJ,EAAW;AACR,wBAAI,CAAC+O,GAAL,CAASiY,qBAAT,CAA+BvoB,GAA/B,EAAoC3C,SAApC,CAA8C,UAAA+B,QAAQ,EAAI;AACzD,0BAAI,CAAC9C,MAAL,CAAYnB,KAAZ;;AACA,0BAAI,CAAC4F,QAAL;;AACA,0BAAI,CAAC1E,KAAL,CAAWc,IAAX,mBAAkC,IAAlC,EAAwC;AACtCkC,4BAAQ,EAAE,IAD4B;AAEtCC,oCAAgB,EAAE,KAFoB;AAGtCC,sCAAkB,EAAE;AAHkB,mBAAxC;AAKD,iBARA;AASF,eAVD,MAUO;AACL,wBAAI,CAAC+Q,GAAL,CAASiY,qBAAT,CAA+BvoB,GAA/B,EAAoC3C,SAApC,CAA8C,UAAA+B,QAAQ,EAAI;AACxD,0BAAI,CAAC9C,MAAL,CAAYnB,KAAZ;;AACA,0BAAI,CAAC4F,QAAL;;AACA,0BAAI,CAAC1E,KAAL,CAAWc,IAAX,qBAAoC,IAApC,EAA0C;AACxCkC,4BAAQ,EAAE,IAD8B;AAExCC,oCAAgB,EAAE,KAFsB;AAGxCC,sCAAkB,EAAE;AAHoB,mBAA1C;AAKD,iBARD;AASD;AACF,aA5BH;AA6BD;;;iBAED,oBAAW4J,GAAX,EAAgB;AAAA;;AACd,iBAAK3M,cAAL,CAAoBqD,OAApB,CAA4B;AAACC,qBAAO,mBAAYqJ,GAAG,CAACqf,mBAAhB;AAAR,aAA5B,EACGnrB,SADH,CACa,UAAA2C,GAAG,EAAI;AAChB,kBAAIA,GAAJ,EAAS;AACP,wBAAI,CAAC1D,MAAL,CAAYa,IAAZ;;AACA,wBAAI,CAACmT,GAAL,CAASmY,qBAAT,CAA+Btf,GAAG,CAACuf,iBAAnC,EACGrrB,SADH,CACa,UAAA3D,IAAI,EAAI;AACjB,0BAAI,CAACqH,QAAL;;AACA,0BAAI,CAACzE,MAAL,CAAYnB,KAAZ;;AACA,0BAAI,CAACkB,KAAL,CAAWc,IAAX,CAAgB,iBAAhB,EAAmC,IAAnC,EAAyC;AAAEkC,4BAAQ,EAAE;AAAZ,mBAAzC;AACD,iBALH;AAMD;AACF,aAXH;AAYD;;;;;;;yBAjFUgpB,iC,EAAiC,mI,EAAA,wI,EAAA,sK,EAAA,mK,EAAA,2I;AAAA,O;;;cAAjCA,iC;AAAiC,wD;AAAA,iB;AAAA,gB;AAAA,2vB;AAAA;AAAA;ACd9C;;AACI;;AAAiC;;AAA4B;;AAC7D;;AACA;;AAAwC;AAAA,qBAAS,IAAA3Y,SAAA,KAAc,IAAd,CAAT;AAA4B,aAA5B;;AAA4C;;AAAoB;;AAC1G;;AACA;;AACE;;AACE;;AASM;;AACE;;AAGF;;AACA;;AACI;;AAGF;;AACA;;AACE;;AAGF;;AACF;;AACE;;AAGF;;AACA;;AACE;;AAIF;;AACF;;AACN;;AACF;;;;AAvCsB;;AAAA;;AAIZ;;AAAA,wFAAc,YAAd,EAAc,OAAd,EAAc,cAAd,EAAc,EAAd,EAAc,cAAd,EAAc,EAAd,EAAc,YAAd,EAAc,IAAd,EAAc,OAAd,EAAc,CAAd,EAAc,WAAd,EAAc,EAAd;;AAOkC;;AAAA;;AAKA;;AAAA;;AAKS;;AAAA;;AAKP;;AAAA;;AAKC;;AAAA;;;;;;;;;wEDtBpC2Y,iC,EAAiC;gBAL7C,uDAK6C;iBALnC;AACTvsB,oBAAQ,EAAE,iCADD;AAETC,uBAAW,EAAE,8CAFJ;AAGTC,qBAAS,EAAE,CAAC,8CAAD;AAHF,W;AAKmC,U;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEd9C;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACAiI;;AAAsB;;AAAG;;;;;;AAAO;;AAAqB;;AAAI;;;;;;AA4D9K;;AAA+B;;AAA8B;;;;;;AAiB7D;;AAAgC;;AAAgC;;;;;;;;AAsChE;;AAAgG;AAAA;;AAAA;;AAAA;AAAA;;AAAyC;;AAAI;;;;;;AAAnF;;;;;;;;AAGxD;;AAA2I;AAAA;;AAAA;;AAAA;AAAA;;AACxI;;AACD;;;;;;AAFsE;;;;;;;;AAKxE;;AAAwE;AAAA;;AAAA;;AAAA;AAAA;;AACtE;;AACF;;;;;;;;AAGA;;AAAwE;AAAA;;AAAA;;AAAA,wCAAsB,MAAtB;AAA4B,WAA5B;;AACtE;;AACF;;;;;;AAHF;;AACE;;AAES;;AACX;;;;;;AAJuE;;AAC5D;;AAAA;;;;;;;;AAKT;;AAAuE;AAAA;;AAAA;;AAAA,wCAAsB,MAAtB;AAA4B,WAA5B;;AACrE;;AACF;;;;;;AAHF;;AACE;;AAES;;AACX;;;;;;AAJwF;;AAC7E;;AAAA;;;;;;;;AAKT;;AAAuE;AAAA;;AAAA;;AAAA,wCAAsB,OAAtB;AAA6B,WAA7B;;AACrE;;AACF;;;;;;AAHF;;AACE;;AAES;;AACX;;;;;;AAJuF;;AAC5E;;AAAA;;;;;;;;AAKT;;AAAuE;AAAA;;AAAA;;AAAA,wCAAsB,QAAtB;AAA8B,WAA9B;;AACrE;;AACF;;;;;;AAHF;;AACE;;AAEU;;AACZ;;;;;;AAJ+C;;AACpC;;AAAA;;;;;;AAmBrB;;AACE;;AACF;;;;UDnJW2sB,mB;AAiBX,qCAEU/uB,EAFV,EAGUC,UAHV,EAIUyO,SAJV,EAKUpM,MALV,EAMUwG,KANV,EAOUD,WAPV,EAQUlG,EARV,EASUF,KATV,EAS4B;AAAA;;AAPlB,eAAAzC,EAAA,GAAAA,EAAA;AACA,eAAAC,UAAA,GAAAA,UAAA;AACA,eAAAyO,SAAA,GAAAA,SAAA;AACA,eAAApM,MAAA,GAAAA,MAAA;AACA,eAAAwG,KAAA,GAAAA,KAAA;AACA,eAAAD,WAAA,GAAAA,WAAA;AACA,eAAAlG,EAAA,GAAAA,EAAA;AACA,eAAAF,KAAA,GAAAA,KAAA;AAxBV,eAAA+F,MAAA,GAAkB,KAAlB;AACA,eAAAwmB,UAAA,GAAuB,KAAvB;AACA,eAAAC,WAAA,GAAuB,KAAvB;AACA,eAAAC,YAAA,GAAwB,KAAxB;AAMA,eAAAnmB,WAAA,GAAqB,IAArB;AAgBK;;;;iBAEL,oBAAW;AAAA;;AACT,iBAAKD,KAAL,CAAWE,aAAX,CAAyBvF,SAAzB,CAAmC,UAACwF,MAAD,EAAiB;AAClD,sBAAI,CAACkmB,SAAL,GAAiBlmB,MAAM,CAACC,GAAP,CAAW,WAAX,CAAjB;AACA,sBAAI,CAACkmB,aAAL,GAAqBnmB,MAAM,CAACC,GAAP,CAAW,eAAX,CAArB;AACA,sBAAI,CAACmmB,mBAAL,GAA2BpmB,MAAM,CAACC,GAAP,CAAW,qBAAX,CAA3B;;AACA,sBAAI,CAACjJ,UAAL,CAAgBqvB,cAAhB,CAA+BrmB,MAAM,CAACC,GAAP,CAAW,WAAX,CAA/B,EAAwDzF,SAAxD,CAAkE,UAACyE,IAAD,EAAa;AAC7E,wBAAI,CAACqnB,eAAL,GAAqBrnB,IAAI,CAAC1H,EAA1B;AACD,eAFD;;AAGA,kBAAIyI,MAAM,CAACC,GAAP,CAAW,IAAX,CAAJ,EAAsB;AACpB,wBAAI,CAACV,MAAL,GAAc,IAAd;AACA,wBAAI,CAAChI,EAAL,GAAUyI,MAAM,CAACC,GAAP,CAAW,IAAX,CAAV;;AACA,wBAAI,CAACjJ,UAAL,CAAgBuvB,YAAhB,CAA6BvmB,MAAM,CAACC,GAAP,CAAW,IAAX,CAA7B,EAA+CzF,SAA/C,CAAyD,UAACyE,IAAD,EAAU;AACjE,0BAAI,CAAC8mB,UAAL,GAAkB,IAAlB;;AACA,0BAAI,CAACvuB,aAAL,CAAmByH,IAAnB;;AACA,0BAAI,CAAC8mB,UAAL,GAAkB,KAAlB;AACA,0BAAI,CAAC5lB,YAAL,GAAoBlB,IAApB;;AACA,0BAAI,CAACW,WAAL,CAAiBQ,eAAjB,CAAiC,QAAI,CAACD,YAAtC;AACD,iBAND;AAOD,eAVD,MAWK;AACH,wBAAI,CAACL,WAAL,GAAiB,KAAjB;AACA,wBAAI,CAACimB,UAAL,GAAkB,IAAlB;;AACA,wBAAI,CAACvuB,aAAL,CAAmB,EAAnB;;AACA,wBAAI,CAACuuB,UAAL,GAAkB,KAAlB;AACD;AACF,aAxBD;AA0BA,iBAAK9rB,YAAL,GAAoB,KAAKP,EAAL,CAAQQ,OAAR,CAAgB,YAAhB,CAApB;AACD;;;iBACD,wBAAerD,IAAf,EAA0B;AAAA;;AACxB,iBAAKG,UAAL,CAAgBwvB,kBAAhB,CAAmC3vB,IAAnC,EAAyC2D,SAAzC,CAAmD,UAACisB,KAAD,EAAW;AAC5D,kBAAGA,KAAK,IAAI,IAAZ,EAAiB;AACjB,wBAAI,CAACT,WAAL,GAAmB,IAAnB;AACC,eAFD,MAEK;AACH,wBAAI,CAACA,WAAL,GAAmB,KAAnB;AACD;AACF,aAND;AAOD;;;iBAED,6BAAoBnvB,IAApB,EAA6B;AAAA;;AAC3B,iBAAKG,UAAL,CAAgB0vB,mBAAhB,CAAoC7vB,IAApC,EAA0C2D,SAA1C,CAAoD,UAACisB,KAAD,EAAW;AAC7D,kBAAGA,KAAK,IAAI,IAAZ,EAAiB;AACjB,wBAAI,CAACR,YAAL,GAAoB,IAApB;AACC,eAFD,MAEK;AACH,wBAAI,CAACA,YAAL,GAAoB,KAApB;AACD;AACF,aAND;AAQD;;;iBACD,sBAAaxkB,SAAb,EAAsB;AAAA;;AACpB,+DAAKC,IAAL,CACE;AACE;AACAC,kBAAI,EAAE,uBAAsBF,SAAtB,GAAiC,UAAjC,GAA8C,0BAFtD;AAGEG,8BAAgB,EAAE,IAHpB;AAIEC,gCAAkB,EAAE,SAJtB;AAKEC,+BAAiB,EAAE,MALrB;AAME;AACAC,8BAAgB,EAAE,IAPpB;AAQEC,+BAAiB,EAAE,KARrB;AAQ4B,sBAAQ;AARpC,aADF,EAWEC,IAXF,CAWQ,UAAAC,MAAM,EAAI;AAChB,kBAAGA,MAAM,CAACC,WAAP,IAAoB,IAAvB,EAA4B;AAC1B,wBAAI,CAACnL,UAAL,CAAgB2vB,WAAhB,CAA4B,QAAI,CAACxmB,YAAL,CAAkB5I,EAA9C,EACCiD,SADD,CACW,UAAA3D,IAAI,EAAI;AAClB,0BAAI,CAACwC,MAAL,CAAYwD,QAAZ,CAAqB,CAAC,qCAAD,CAArB,EAA6D;AAAEC,+BAAW,EAAE;AAAEvF,wBAAE,EAAE,QAAI,CAAC2uB,SAAX;AAAsB3mB,4BAAM,EAAG,QAAI,CAAC4mB;AAApC;AAAf,mBAA7D;AACA,iBAHD,EAIA,UAAA/mB,GAAG,EAAE;AACH,sBAAIA,GAAG,CAACC,MAAJ,IAAc,GAAlB,EAAuB;AACrB,4BAAI,CAAC7F,KAAL,CAAWc,IAAX,CAAgB,6BAAhB,EAA+C,IAA/C,EAAqD;AACnDkC,8BAAQ,EAAE,IADyC;AAEnDC,sCAAgB,EAAE,KAFiC;AAGnDC,wCAAkB,EAAE;AAH+B,qBAArD;AAKD;;AACF,0BAAI,CAACrD,MAAL,CAAYwD,QAAZ,CAAqB,CAAC,qCAAD,CAArB,EAA6D;AAAEC,+BAAW,EAAE;AAAEvF,wBAAE,EAAE,QAAI,CAAC2uB,SAAX;AAAsB3mB,4BAAM,EAAG,QAAI,CAAC4mB;AAApC;AAAf,mBAA7D;AAEF,iBAdC;AAeD;AAAC,aA5BJ;AAgCD;;;iBACD,sBAAU;AACR,iBAAKrmB,WAAL,GAAiB,KAAjB;AACD;;;iBAED,sBAAa2B,SAAb,EAAsB;AAAA;;AACpB,+DAAKC,IAAL,CACE;AACE;AACAC,kBAAI,EAAE,uBAAsBF,SAAtB,GAAiC,UAAjC,GAA8C,0BAFtD;AAGEG,8BAAgB,EAAE,IAHpB;AAIEC,gCAAkB,EAAE,SAJtB;AAKEC,+BAAiB,EAAE,MALrB;AAME;AACAC,8BAAgB,EAAE,IAPpB;AAQEC,+BAAiB,EAAE,KARrB;AAQ4B,sBAAQ;AARpC,aADF,EAWEC,IAXF,CAWQ,UAAAC,MAAM,EAAI;AAChB,kBAAGA,MAAM,CAACC,WAAP,IAAoB,IAAvB,EAA4B;AAC1B,oBAAI7K,OAAO,GAAS,EAApB;AACJA,uBAAO,CAACC,EAAR,GAAa,QAAI,CAACA,EAAlB;AACAD,uBAAO,CAACmK,SAAR,GAAoBA,SAApB;AACAnK,uBAAO,CAAC2C,YAAR,GAAuB,QAAI,CAACA,YAAL,CAAkBqG,QAAzC;;AACA,wBAAI,CAACtJ,UAAL,CAAgB4vB,oBAAhB,CAAqCtvB,OAArC,EAA8CkD,SAA9C,CAAwD,UAAC3D,IAAD,EAAU;AAChE,0BAAI,CAACsJ,YAAL,GAAoBtJ,IAApB;;AACA,0BAAI,CAAC+I,WAAL,CAAiBQ,eAAjB,CAAiC,QAAI,CAACD,YAAtC;;AACA,0BAAI,CAACP,WAAL,CAAiBS,cAAjB;;AACA,sBAAIpD,OAAO,GAAG,EAAd;;AACA,0BAAQwE,SAAR;AACE,yBAAK,MAAL;AACExE,6BAAO,GAAG,QAAV;AACA;;AACF,yBAAK,OAAL;AACEA,6BAAO,GAAG,QAAV;AACA;;AACF,yBAAK,MAAL;AACEA,6BAAO,GAAG,YAAV;AACA;;AACF;AACE;AAXJ;;AAaA,0BAAI,CAACzD,KAAL,CAAWc,IAAX,kBAA0B2C,OAA1B,oBAAkD,IAAlD,EAAwD;AACtDT,4BAAQ,EAAE,IAD4C;AAEtDC,oCAAgB,EAAE,KAFoC;AAGtDC,sCAAkB,EAAE;AAHkC,mBAAxD;AAKD,iBAvBD;AAwBG;AAAC,aAzCJ;AA2CD;;;iBAED,gBAAO7F,IAAP,EAAkB;AAAA;;AAChB,gBAAIqU,OAAO,GAAQ,EAAnB;AACAA,mBAAO,GAAG,KAAK2b,gBAAL,CAAsBxuB,KAAhC;AACA6S,mBAAO,CAAC3T,EAAR,GAAa,KAAKA,EAAlB;AACAV,gBAAI,CAACqvB,SAAL,GAAe,KAAKI,eAApB;AACAzvB,gBAAI,CAACoD,YAAL,GAAoB,KAAKA,YAAL,CAAkBqG,QAAtC;AAEA,iBAAKtJ,UAAL,CAAgB8vB,kBAAhB,CAAmCjwB,IAAnC,EAAyC2D,SAAzC,CAAmD,UAACyE,IAAD,EAAU;AAC3D,kBAAIA,IAAJ,EAAU;AACR,wBAAI,CAAC5F,MAAL,CAAYwD,QAAZ,CAAqB,CAAC,qCAAD,CAArB,EAA6D;AAAEC,6BAAW,EAAE;AAAEvF,sBAAE,EAAE,QAAI,CAAC2uB,SAAX;AAAsB3mB,0BAAM,EAAG,QAAI,CAAC4mB;AAApC;AAAf,iBAA7D;AACD;AACF,aAJD;AAKD;;;iBAED,8BAAqB5tB,KAArB,EAA4B;AAC1B,gBAAI4L,GAAG,GAAGzL,MAAM,CAACC,YAAP,CAAoBJ,KAAK,CAAC6L,OAA1B,CAAV;;AACA,gBAAI,cAAcvL,IAAd,CAAmBsL,GAAnB,CAAJ,EAA6B;AAC3B,qBAAO,IAAP;AACD,aAFD,MAEO;AACL5L,mBAAK,CAACO,cAAN;AACA,qBAAO,KAAP;AACD;AACF;;;iBAED,uBAAcnB,IAAd,EAAoB;AAClB,iBAAKkvB,gBAAL,GAAwB,KAAK9vB,EAAL,CAAQc,KAAR,CAAc;AACpCkvB,yBAAW,EAAE,CAAC,KAAKX,mBAAL,GAAyB,KAAKA,mBAA9B,GAAkDzuB,IAAI,CAACovB,WAAxD,EAAqE,0DAAWhvB,QAAhF,CADuB;AAEpCmuB,uBAAS,EAAE,CAAC,KAAKA,SAAL,GAAgB,KAAKA,SAArB,GAAiCvuB,IAAI,CAACuuB,SAAvC,EAAkD,0DAAWnuB,QAA7D,CAFyB;AAGpCivB,uBAAS,EAAE,CAACrvB,IAAI,CAACqvB,SAAL,IAAkB,EAAnB,EAAuB,0DAAWjvB,QAAlC,CAHyB;AAIpC4Q,uBAAS,EAAE,CAAChR,IAAI,CAACgR,SAAL,IAAkB,EAAnB,EAAuB,0DAAW5Q,QAAlC,CAJyB;AAKpCkvB,wBAAU,EAAE,CAACtvB,IAAI,CAACsvB,UAAL,IAAmB,EAApB,EAAwB,0DAAWlvB,QAAnC,CALwB;AAMpCmvB,0BAAY,EAAE,CAACvvB,IAAI,CAACuvB,YAAL,IAAqB,EAAtB,EAA0B,0DAAWnvB,QAArC,CANsB;AAOpC6C,0BAAY,EAAE,CAACjD,IAAI,CAACiD,YAAL,IAAqB,EAAtB;AAPsB,aAAd,CAAxB;AASD;;;iBAED,kBAAS;AACP,iBAAKvB,MAAL,CAAYwD,QAAZ,CAAqB,CAAC,qCAAD,CAArB,EAA6D;AAAEC,yBAAW,EAAE;AAAEvF,kBAAE,EAAE,KAAK2uB,SAAX;AAAsB3mB,sBAAM,EAAG,KAAK4mB;AAApC;AAAf,aAA7D;AAED;;;;;;;yBAzMUL,mB,EAAmB,2H,EAAA,2I,EAAA,yH,EAAA,uH,EAAA,+H,EAAA,6I,EAAA,0J,EAAA,wI;AAAA,O;;;cAAnBA,mB;AAAmB,wC;AAAA,iB;AAAA,gB;AAAA,ksD;AAAA;AAAA;ACjBhC;;AAAsB;;AAA0B;;AAAiF;;AAAgC;;AAAiC;;AAAK;;AAAQ;;AAC/M;;AACI;;AAAwB;AAAA,qBAAS,IAAAzoB,MAAA,EAAT;AAAiB,aAAjB;;AACpB;;AAAU;;AAAU;;AACtB;;AACA;;AACE;;AACF;;AACA;;AACA;;AACE;;AAAU;;AAAI;;AACd;;AACF;;AACA;;AAIA;;AAAU;;AAAM;;AACd;;AACF;;AACH;;AAEA;;AACC;;AAIE;;AACE;;AACE;;AACE;;AAAW;;AAAa;;AAAoB;;AAAC;;AAAO;;AACpD;;AAEE;;AAME;AAAA,qBAAW,IAAA4L,oBAAA,QAAX;AAAuC,aAAvC;;AANF;;AAUF;;AACF;;AACA;;AACE;;AAAW;;AAAW;;AAAoB;;AAAC;;AAAO;;AAClD;;AAEE;;AACA;AAAA,qBAAS,IAAAke,cAAA,qBAAT;AAA4C,aAA5C,EAA6C,UAA7C,EAA6C;AAAA,qBAKhC,IAAAle,oBAAA,QALgC;AAKJ,aALzC;;AADA;;AAUF;;AACA;;AACF;;AAEA;;AACE;;AAAW;;AAAa;;AAAoB;;AAAC;;AAAO;;AACpD;;AAEE;;AAKE;AAAA,qBAAW,IAAAA,oBAAA,QAAX;AAAuC,aAAvC;;AALF;;AASF;;AACA;;AACF;;AAEA;;AACE;;AAAW;;AAAW;;AAAoB;;AAAC;;AAAO;;AAClD;;AAEE;;AAGE;AAAA,qBAAW,IAAAA,oBAAA,QAAX;AAAuC,aAAvC;;AAHF;;AAOF;;AACF;;AAEA;;AACE;;AAAW;;AAAmB;;AAAoB;;AAAC;;AAAO;;AAC1D;;AAEE;;AAKE;AAAA,qBAAW,IAAAA,oBAAA,QAAX;AAAuC,aAAvC;;AALF;;AASF;;AACF;;AACF;;AAIA;;AACE;;AACE;;AACA;;AACA;;AACE;;AAEW;;AACb;;AACA;;AACE;;AAES;;AACX;;AACA;;AAKA;;AAKA;;AAKA;;AAMA;;AAIE;AAAA,qBAAS,IAAA5L,MAAA,EAAT;AAAiB,aAAjB;;AAEA;;AACF;;AAEF;;AACF;;AACF;;AACF;;AACF;;AACA;;;;AAlKsI;;AAAA;;AAAgC;;AAAA;;AAMhK;;AAAA;;AAqBI;;AAAA;;AAaI;;AAAA;;AAac;;AAAA,kGAAwB,aAAxB,EAAwB,0CAAxB;;AAON;;AAAA;;AAUM;;AAAA,kGAAwB,aAAxB,EAAwB,2CAAxB;;AAON;;AAAA;;AASS;;AAAA,kGAAwB,aAAxB,EAAwB,0CAAxB;;AAcH;;AAAA,kGAAwB,aAAxB,EAAwB,6CAAxB;;AAeS;;AAAA;;AAEtB;;AAAA;;AACM;;AAAA;;AAIN;;AAAA;;AACM;;AAAA;;AAIL;;AAAA;;AAKA;;AAAA;;AAKA;;AAAA;;AAKA;;AAAA;;AAoBV;;AAAA;;;;;;;;;wEDjJKyoB,mB,EAAmB;gBAL/B,uDAK+B;iBALrB;AACT7sB,oBAAQ,EAAE,iBADD;AAETC,uBAAW,EAAE,8BAFJ;AAGTC,qBAAS,EAAE,CAAC,8BAAD;AAHF,W;AAKqB,U;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEjBhC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACEE;;;;;;AAuDY;;AACE;;AACF;;;;;;AAFgF;;AAC9E;;AAAA;;;;;;;;AAaR;;AACE;;AAA4C;AAAA;;AAAA;;AAAA;AAAA;;AAAwB;;AACpE;;AACF;;;;;;AAWE;;AAA+F;;AAE/F;;;;;;AACA;;AAAqC;;AAAuB;;;;;;AAAvB;;AAAA;;;;;;AAGrC;;AAAgG;;AAChG;;;;;;AACA;;AAAqC;;AAAuB;;;;;;AAAvB;;AAAA;;;;;;AAGrC;;AAAkG;;AAElG;;;;;;AACA;;AAAqC;;AAAyB;;;;;;AAAzB;;AAAA;;;;;;AAIrC;;AAAmC;;AAAM;;;;;;;;AACzC;;AACE;;AACC;;AAAgD;AAAA;;AAAA;;AAAA;;AAAA,kDAA2B,KAA3B;AAAgC,WAAhC;;AAAqC;;AAAI;;AAC5F;;AAAM;;AACN;;AACC;;AAAyF;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA+B;;AAAM;;AAC/H;;AACA;;;;;;AAFmD;;AAAA;;;;;;AAKrD;;;;;;AACA;;;;;;;;UDrFKiuB,yB;AAuBX,2CACUtpB,MADV,EAEUzE,MAFV,EAGUuG,WAHV,EAIUpG,KAJV,EAKUG,cALV,EAMUF,MANV,EAOUzC,UAPV,EAQUsC,cARV,EASUC,eATV,EAS0C;AAAA;;AARhC,eAAAuE,MAAA,GAAAA,MAAA;AACA,eAAAzE,MAAA,GAAAA,MAAA;AACA,eAAAuG,WAAA,GAAAA,WAAA;AACA,eAAApG,KAAA,GAAAA,KAAA;AACA,eAAAG,cAAA,GAAAA,cAAA;AACA,eAAAF,MAAA,GAAAA,MAAA;AACA,eAAAzC,UAAA,GAAAA,UAAA;AACA,eAAAsC,cAAA,GAAAA,cAAA;AACA,eAAAC,eAAA,GAAAA,eAAA;AA9BV,eAAAS,mBAAA,GAA8B,CAA9B;AACA,eAAAH,gBAAA,GAA6B,CAAC,YAAD,EAAc,YAAd,EAA2B,cAA3B,EAA0C,QAA1C,CAA7B;AACA,eAAAC,cAAA,GAAmD,CACjD;AAAEC,eAAG,EAAE,YAAP;AAAqB1B,iBAAK,EAAE;AAA5B,WADiD,CAAnD;AAMA,eAAAuB,UAAA,GAAa,IAAI,2EAAJ,EAAb;AAIA,eAAAnC,QAAA,GAAqB,EAArB;AAEA,eAAAN,UAAA,GAAuB,EAAvB;AACA,eAAAC,QAAA,GAAqB,EAArB;AAgBI;;;;iBACJ,oBAAW;AACT,gBAAI6O,GAAG,GAAG,IAAI,8CAAJ,EAAV;AACA,gBAAMC,IAAI,GAAG,CAAC,CAAC,aAAD,EAAgB,aAAhB,EAA+B,eAA/B,CAAD,CAAb;AACA,gBAAMC,IAAI,GAAC,EAAX;AAEA,iBAAKnI,KAAL,CAAWgb,GAAX,CAAe,UAAA3S,CAAC,EAAE;AAChB,kBAAIC,GAAG,GAAG,EAAV;AACAA,iBAAG,CAAC5D,IAAJ,CAAS2D,CAAC,CAACtI,UAAX;AACAuI,iBAAG,CAAC5D,IAAJ,CAAS2D,CAAC,CAAC1L,UAAX;AACA2L,iBAAG,CAAC5D,IAAJ,CAAS2D,CAAC,CAACzL,YAAX;AACAuL,kBAAI,CAACzD,IAAL,CAAU4D,GAAV;AACD,aAND;AAOA,oEAAUL,GAAV,EAAe;AACbC,kBAAI,EAAEA,IADO;AAEbC,kBAAI,EAAEA,IAFO;AAGbO,yBAAW,EAAE,qBAACC,OAAD,EAAa,CAAG;AAHhB,aAAf;AAKAV,eAAG,CAACW,IAAJ,CAAS,UAAT;AACD;;;iBACD,+BAAsBrO,KAAtB,EAA6B;AAAA;;AAE3B,gBAAM2D,IAAI,GAAQ3D,KAAK,CAACyD,IAAN,CAAW,CAAX,EAAcC,KAAd,CAAoB,CAApB,CAAlB;AACE,gBAAME,UAAU,GAAG,IAAIC,QAAJ,EAAnB;AACAD,sBAAU,CAACE,MAAX,CAAkB,YAAlB,EAAgC,iBAAhC;AACAF,sBAAU,CAACE,MAAX,CAAkB,MAAlB,EAA0BH,IAA1B;AAGA,iBAAKlF,UAAL,CAAgBqwB,wBAAhB,CAAyClrB,UAAzC,EAAqD3B,SAArD,CAA+D,UAAA3D,IAAI,EAAI;AACrE,kBAAGsF,UAAU,IAAI,IAAjB,EAAsB;AACpB,wBAAI,CAACmrB,qBAAL;;AACA,wBAAI,CAAC9tB,KAAL,CAAWc,IAAX,CAAgB,6BAAhB,EAA+C,IAA/C,EAAqD;AACnDkC,0BAAQ,EAAE,IADyC;AAEnDC,kCAAgB,EAAE,KAFiC;AAGnDC,oCAAkB,EAAE;AAH+B,iBAArD;AAMD,eAToE,CAWvE;;AACC,aAZD,EARyB,CAqBzB;AACA;AACA;AACD;;;iBAED,kBAAM,CAEL;;;iBACH,oBAAW;AACT,iBAAKwB,QAAL;AACA,iBAAKyF,SAAL;AACA,iBAAK2jB,qBAAL;AACA,iBAAK5jB,WAAL;AACA,iBAAKnD,WAAL;AACA,iBAAKvB,aAAL;AACD;;;iBACD,uBAAc;AACZ,gBAAI,KAAKb,UAAT,EAAqB;AACnB,mBAAKA,UAAL,CAAgBC,WAAhB;AACD;AACF;;;iBACD,oBAAW;AAAA;;AACT,iBAAKiX,OAAL,GAAe,IAAf;AACA,iBAAKlX,UAAL,GAAkB,KAAKnH,UAAL,CAAgBuwB,gBAAhB,GAAmC/sB,SAAnC,CAA6C,UAAC3D,IAAD,EAAc;AAC3E,mBAAI,IAAI4D,CAAC,GAAC,CAAV,EAAYA,CAAC,GAAC5D,IAAI,CAAC6D,MAAnB,EAA0BD,CAAC,EAA3B,EAA8B;AAC5B,oBAAG5D,IAAI,CAAC4D,CAAD,CAAJ,CAAQE,UAAR,IAAsB,GAAzB,EAA6B;AAC3B9D,sBAAI,CAAC4D,CAAD,CAAJ,CAAQE,UAAR,GAAqB,cAArB;AACD;;AACD,oBAAG9D,IAAI,CAAC4D,CAAD,CAAJ,CAAQE,UAAR,IAAsB,GAAzB,EAA8B;AAC5B9D,sBAAI,CAAC4D,CAAD,CAAJ,CAAQE,UAAR,GAAqB,YAArB;AACD;;AACD,oBAAG9D,IAAI,CAAC4D,CAAD,CAAJ,CAAQG,YAAR,IAAwB,GAA3B,EAA+B;AAC7B/D,sBAAI,CAAC4D,CAAD,CAAJ,CAAQG,YAAR,GAAuB,MAAvB;AACD;;AACD,oBAAG/D,IAAI,CAAC4D,CAAD,CAAJ,CAAQG,YAAR,IAAwB,GAA3B,EAA+B;AAC7B/D,sBAAI,CAAC4D,CAAD,CAAJ,CAAQG,YAAR,GAAuB,QAAvB;AACD;AACF;;AACD,sBAAI,CAACyD,KAAL,GAAaxH,IAAb;AACA,sBAAI,CAAC+C,UAAL,GAAkB,IAAI,2EAAJ,CAAuB/C,IAAvB,CAAlB;AACA,sBAAI,CAACmH,KAAL,GAAanH,IAAb;AACAiF,qBAAO,CAACC,GAAR,CAAY,QAAI,CAACnC,UAAjB;AACA,sBAAI,CAACA,UAAL,CAAgBQ,SAAhB,GAA4B,QAAI,CAACA,SAAjC;AACF,sBAAI,CAACR,UAAL,CAAgBS,IAAhB,GAAuB,QAAI,CAACA,IAA5B;AACC,aArBiB,CAAlB;AAsBA,iBAAKgb,OAAL,GAAe,KAAf;AACD,W,CACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBAEA,kBAASva,QAAT,EAAmBC,CAAnB,EAAsB;AACpB,iBAAKC,WAAL,CAAiBF,QAAjB;AACA,iBAAKG,WAAL,CAAiBF,CAAjB;AACD;;;iBAED,qBAAYD,QAAZ,EAAsB;AACpB,iBAAKlB,UAAL,CAAgBuB,eAAhB,GAAkC,UAACtE,IAAD,EAAYuE,MAAZ,EAAwC;AACxE,qBAAOvE,IAAI,CAACiE,QAAD,CAAJ,CAAeO,iBAAf,GAAmCC,QAAnC,CAA4CF,MAA5C,CAAP;AACD,aAFD;AAGD;;;iBAED,uBAAc;AACZ,iBAAKxB,UAAL,CAAgBwB,MAAhB,GAAyB,EAAzB;AACA,iBAAKuC,SAAL,CAAec,aAAf,CAA6BpG,KAA7B,GAAqC,EAArC;AACA,iBAAK2B,mBAAL,GAA2B,CAA3B;AACD;;;iBAED,qBAAYzB,KAAZ,EAA0B;AACxB,gBAAMgD,WAAW,GAAIhD,KAAK,CAACiD,MAAN,CAAkCnD,KAAvD;AACA,iBAAKuB,UAAL,CAAgBwB,MAAhB,GAAyBG,WAAW,CAACE,IAAZ,GAAmBC,WAAnB,EAAzB;AACD;;;iBAED,4BAAmBC,SAAnB,EAAoC;AAClC,gBAAIA,SAAS,CAACC,SAAd,EAAyB;AACvB,mBAAKtC,cAAL,CAAoBuC,QAApB,kBAAuCF,SAAS,CAACC,SAAjD;AACD,aAFD,MAEO;AACL,mBAAKtC,cAAL,CAAoBuC,QAApB,CAA6B,iBAA7B;AACD;AACF;;;iBAED,kBAAS;AACP,iBAAKxC,MAAL,CAAYwD,QAAZ,CAAqB,CAAC,uCAAD,CAArB;AACD;;;iBAED,mBAAUyJ,GAAV,EAAe;AACb,iBAAKkhB,sBAAL,CAA4BlhB,GAA5B,EADa,CAEb;;AACA,iBAAKjN,MAAL,CAAYwD,QAAZ,CAAqB,6CAAsCyJ,GAAG,CAAC/O,EAA1C,EAArB;AACD;;;iBACD,kCAAsB;AACpB,iBAAKgC,eAAL,CAAqBoD,aAArB,CAAmC,wBAAnC,EAA4D,KAAKqB,KAAjE;AACD;;;iBAED,oBAAWsI,GAAX,EAAgB;AAAA;;AACd,iBAAK3M,cAAL,CACGqD,OADH,CACW;AAAEC,qBAAO,mBAAYqJ,GAAG,CAACvI,UAAhB;AAAT,aADX,EAEGvD,SAFH,CAEa,UAAC2C,GAAD,EAAS;AAClB,kBAAIA,GAAJ,EAAS;AACP,wBAAI,CAAC1D,MAAL,CAAYa,IAAZ;;AACA,wBAAI,CAACtD,UAAL,CAAgBywB,qBAAhB,CAAsCnhB,GAAG,CAAC/O,EAA1C,EAA8CiD,SAA9C,CACE,UAAC2C,GAAD,EAAc,CAAE,CADlB,EAEE,UAACiC,GAAD,EAAc;AACX,oBAAD;AACAtD,yBAAO,CAACC,GAAR,CAAYqD,GAAZ;;AACA,sBAAIA,GAAG,CAACC,MAAJ,IAAc,GAAlB,EAAuB;AACrB,4BAAI,CAAC5F,MAAL,CAAYnB,KAAZ;;AACA,4BAAI,CAAC4F,QAAL;;AACA,4BAAI,CAAC1E,KAAL,CAAWc,IAAX,CAAgB,iBAAhB,EAAmC,IAAnC,EAAyC;AACvCkC,8BAAQ,EAAE,IAD6B;AAEvCC,sCAAgB,EAAE,KAFqB;AAGvCC,wCAAkB,EAAE;AAHmB,qBAAzC;AAKD;AACF,iBAdH;AAgBD;AACF,aAtBH;AAuBD;;;iBAED,kBAAS;AACP,iBAAKrD,MAAL,CAAYwD,QAAZ,CAAqB,CAAC,mBAAD,CAArB;AACD;;;iBAED,iCAAwB;AAAA;;AACtB;AACA,iBAAK7F,UAAL,CAAgBuwB,gBAAhB,GAAmC/sB,SAAnC,CAA6C,UAACyE,IAAD,EAAU;AACrDnD,qBAAO,CAACC,GAAR,CAAY,MAAZ,EAAmBkD,IAAnB;AACA,sBAAI,CAACjB,KAAL,GAAaiB,IAAb,CAFqD,CAGrD;AACA;AACD,aALD;AAMD;;;iBACD,gCAAuBqH,GAAvB,EAA4B;AAAA;;AAC1B;AACA,iBAAKtP,UAAL,CAAgB0wB,wBAAhB,CAAyCphB,GAAG,CAAC/O,EAA7C,EAAiDiD,SAAjD,CAA2D,UAACyE,IAAD,EAAU;AACnE,sBAAI,CAACpI,IAAL,GAAYoI,IAAZ;;AACA,kBAAI,QAAI,CAACpI,IAAL,IAAa,IAAjB,EAAuB;AAErB,wBAAI,CAACyN,QAAL,GAAgB,QAAI,CAAC5M,IAAL,CAAU6M,IAAV,CAAe,UAACC,CAAD;AAAA,yBAAOA,CAAC,CAACjN,EAAF,IAAQ,QAAI,CAACV,IAAL,CAAUK,MAAzB;AAAA,iBAAf,CAAhB;;AACA,oBAAI,QAAI,CAACoN,QAAL,IAAiB,IAArB,EAA2B;AACzB,0BAAI,CAACzN,IAAL,CAAUK,MAAV,GAAmB,QAAI,CAACoN,QAAL,CAAcG,aAAjC;AACD;;AACD,wBAAI,CAACkjB,gBAAL,GAAwB,QAAI,CAAC9wB,IAA7B;AACD;;AACD,kBAAI,QAAI,CAAC8wB,gBAAL,IAAyB,IAA7B,EAAmC;AACjCpkB,4BAAY,CAACjE,OAAb,CACE,kBADF,EAEE+D,IAAI,CAACgJ,SAAL,CAAe,QAAI,CAACsb,gBAApB,CAFF,EADiC,CAKjC;AACD;AACF,aAjBD;AAkBD;;;iBACD,uBAAc;AAAA;;AACZ,iBAAK3wB,UAAL,CAAgB6sB,gBAAhB,GAAmCrpB,SAAnC,CAA6C,UAACyE,IAAD,EAAU;AACrD,sBAAI,CAACxH,QAAL,GAAgBwH,IAAhB;AACD,aAFD;AAGD;;;iBACD,uBAAc;AAAA;;AACZ,iBAAKjI,UAAL,CAAgBuJ,WAAhB,GAA8B/F,SAA9B,CAAwC,UAACyE,IAAD,EAAU;AAChD,sBAAI,CAAC7H,QAAL,GAAgB6H,IAAhB;AACD,aAFD;AAGD;;;iBACD,yBAAgB;AAAA;;AACd,iBAAKjI,UAAL,CAAgBgI,aAAhB,GAAgCxE,SAAhC,CAA0C,UAACyE,IAAD,EAAU;AAClD,sBAAI,CAAC9H,UAAL,GAAkB8H,IAAlB;AACD,aAFD;AAGD;;;iBACD,qBAAY;AAAA;;AACV,gBAAIgG,WAAW,GAAG,GAAlB;AACA,iBAAKjO,UAAL,CAAgBkO,WAAhB,CAA4BD,WAA5B,EAAyCzK,SAAzC,CAAmD,UAACyE,IAAD,EAAU;AAC3D,sBAAI,CAACvH,IAAL,GAAYuH,IAAZ;AACD,aAFD;AAGD;;;iBAED,8BAAqB/D,KAArB,EAA2BE,MAA3B,EAAiC;AAEjC,mBAAOA,MAAM,CAAC/C,KAAd;AACD;;;;;;;yBArQY+uB,yB,EAAyB,mI,EAAA,uH,EAAA,6I,EAAA,wI,EAAA,sK,EAAA,mK,EAAA,2I,EAAA,iI,EAAA,sJ;AAAA,O;;;cAAzBA,yB;AAAyB,+C;AAAA;AAAA;;;sEAOzB,8D,EAAO,I;;sEACP,wE,EAAY,I;;;;;;;;;;;;;;;;;;ACtCzB;;AAAsB;;AAA0B;;AAAkE;;AAAQ;;AAC1H;;AACE;;AACF;;AACA;;AACE;;AAAwB;AAAA,qBAAS,IAAA/pB,MAAA,EAAT;AAAiB,aAAjB;;AACtB;;AAAU;;AAAU;;AACtB;;AACA;;AACE;;AACF;;AACA;;AACF;;AACE;;AACE;;AACE;;AACE;;AACE;;AACE;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AAEF;;AACF;;AACF;;AACA;;AACF;;AACE;;AAAU;;AAAS;;AACrB;;AACA;;AACE;;AACE;;AAGA;AAAA,qBAAU,IAAAuqB,qBAAA,QAAV;AAAuC,aAAvC;;AAHA;;AAIA;;AACA;AAAA;;AAAA;;AAAA,qBAAS,WAAT;AAA4B,aAA5B;;AACgB;;AAAM;;AACxB;;AACA;;AAAsB;AAAA,qBAAS,IAAAC,sBAAA,EAAT;AAAiC,aAAjC;;AACpB;;AAAM;;AAAQ;;AAChB;;AACF;;AACA;;AACA;;AACE;;AACE;;AACE;;AACE;;AACE;;AAAW;;AAAS;;AACpB;;AAAsC;AAAA;AAAA;;AAEpC;;AAAsB;;AAAM;;AAC5B;;AAGF;;AACF;;AACF;;AACA;;AACE;;AACE;;AAAW;;AAAM;;AACjB;;AAA2B;AAAA;;AAAA;;AAAA,qBAAS,IAAArqB,QAAA,mBAAT;AAAwC,aAAxC;;AAA3B;;AAEA;;AAAoB;;AAAM;;AAC5B;;AACF;;AACA;;AAIA;;AACC;;AAA0D;AAAA,qBAAS,IAAAgC,MAAA,EAAT;AAAiB,aAAjB;;AAAoB;;AAC9E;;AACF;;AAEH;;AACA;;AACA;;AACE;;AAA4D;AAAA,qBAAiB,IAAA9B,kBAAA,QAAjB;AAA2C,aAA3C;;AAC1D;;AACE;;AAGA;;AACF;;AACA;;AACE;;AAEA;;AACF;;AACA;;AACE;;AAGA;;AACF;;AAEA;;AACE;;AACA;;AAQF;;AAEA;;AACA;;AACF;;AACA;;AACF;;AAEF;;AACF;;;;;;;;;;AAvHgB;;AAAA;;AA4BU;;AAAA;;AAwBwB;;AAAA;;AAGL;;AAAA,oGAAmB,cAAnB,EAAmB,wBAAnB;;AAc/B;;AAAA;;AAYkB;;AAAA;;AA+BP;;AAAA;;AACa;;AAAA;;AAEH;;AAAA;;;;;;qBDzFrB;;;;;;wEAED0pB,yB,EAAyB;gBANrC,uDAMqC;iBAN3B;AACTnuB,oBAAQ,EAAE,wBADD;AAETC,uBAAW,EAAE,qCAFJ;AAGTC,qBAAS,EAAE,CAAC,qCAAD,CAHF;AAITqT,sBAAU,EAAE;AAJH,W;AAM2B,U;;;;;;;;;;;;;;;;;;;;;AACZ7O,mBAAS,EAAE,CAAF;kBAAhC,uDAAgC;mBAAtB,W;AAAsB,WAAE,C;AAMftD,cAAI,EAAE,CAAF;kBAAvB,uDAAuB;mBAAb,8D;AAAa,WAAE,C;AACDD,mBAAS,EAAE,CAAF;kBAAjC,uDAAiC;mBAAvB,wE;AAAuB,WAAE;;;;;;;;;;;;;;;;;;;AEtCtC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAEA,UAAQ0tB,OAAR,GAAoBC,KAApB,CAAQD,OAAR;;UAKaE,U;;;;;;;iBACX,mBAAU7iB,IAAV,EAAwBxG,KAAxB,EAAqC;AACnC,gBAAG,CAACwG,IAAJ,EAAW,OAAO,EAAP;AACX,gBAAG,CAACxG,KAAJ,EAAW,OAAOwG,IAAP;AACXxG,iBAAK,GAAGA,KAAK,CAACjD,WAAN,EAAR;AACAI,mBAAO,CAACC,GAAR,CAAYoJ,IAAZ,EAAkBxG,KAAlB;AACA,mBAAOspB,MAAM,CAAE9iB,IAAF,EAAQxG,KAAR,CAAb;AACA;;;;;;;yBAPSqpB,U;AAAU,O;;;;cAAVA,U;AAAU;;;;;wEAAVA,U,EAAU;gBAHtB,kDAGsB;iBAHjB;AACJhO,gBAAI,EAAE;AADF,W;AAGiB,U;;;AAUvB,eAASiO,MAAT,CAAgBC,OAAhB,EAAgCD,MAAhC,EAAgD;AAE9CA,cAAM,GAAGA,MAAM,CAACvsB,WAAP,EAAT;AAEA,eAAOwsB,OAAO,CAAC9sB,MAAR,CAAe,UAAU+sB,GAAV,EAAe;AACnC,cAAM3d,IAAI,GAAaD,MAAM,CAACC,IAAP,CAAY2d,GAAZ,CAAvB;AACA,iBAAO3d,IAAI,CAAC4d,IAAL,CAAU,UAAUruB,GAAV,EAAe;AAC9B,gBAAM1B,KAAK,GAAG8vB,GAAG,CAACxpB,KAAlB;AACA7C,mBAAO,CAACC,GAAR,CAAYosB,GAAG,CAACpuB,GAAD,CAAf;;AACA,gBAAI+tB,OAAO,CAACzvB,KAAD,CAAX,EAAoB;AAClB,qBAAOA,KAAK,CAAC+vB,IAAN,CAAW,UAAAnW,CAAC,EAAI;AACrB,uBAAOA,CAAC,CAACvW,WAAF,GAAgBJ,QAAhB,CAAyB2sB,MAAzB,CAAP;AACD,eAFM,CAAP;AAGD,aAJD,MAKK,IAAI,CAACH,OAAO,CAACzvB,KAAD,CAAZ,EAAqB;AACxB,qBAAOA,KAAK,CAACqD,WAAN,GAAoBJ,QAApB,CAA6B2sB,MAA7B,CAAP;AACD;AACF,WAXM,CAAP;AAYD,SAdM,CAAP;AAeD;;;;;;;;;;;;;;;;;ACpsC;;AAA0B;;AAAuF;;AAAQ;;;;;;AAC/J;;AAAqC;;AAA0B;;AAA0F;;AAAQ;;;;;;AAK7J;;AAAqC;;AAAuB;;;;;;AAC5D;;AAAoC;;AAAwB;;;;;;AA6ClC;;AACE;;AACF;;;;;;AAFoF;;AAClF;;AAAA;;;;;;AANZ;;AACI;;AAAW;;AAAiB;;AAC5B;;AACI;;AAEE;;AAGF;;AAIJ;;AACJ;;;;;;AARiD;;AAAA,wGAAuB,cAAvB,EAAuB,mBAAvB;;;;;;AASjD;;AACE;;AAAW;;AAAiB;;AAC5B;;AACE;;AAOF;;AACF;;;;;;AARW;;AAAA;;;;;;;;AAiEf;;AAAiG;AAAA;;AAAA;;AAAA;AAAA;;AAAmB;;AAAI;;;;;;AAA9D;;;;;;;;AAGxD;;AAA6I;AAAA;;AAAA;;AAAA;AAAA;;AAC1I;;AACD;;;;;;AAFsE;;;;;;;;AAKxE;;AAAwE;AAAA;;AAAA;;AAAA;AAAA;;AACtE;;AACF;;;;;;;;AAGA;;AAAwE;AAAA;;AAAA;;AAAA,wCAAsB,MAAtB;AAA4B,WAA5B;;AACtE;;AACF;;;;;;AAHF;;AACE;;AAES;;AACX;;;;;;AAJoE;;AACzD;;AAAA;;;;;;;;AAKT;;AAAuE;AAAA;;AAAA;;AAAA,wCAAsB,MAAtB;AAA4B,WAA5B;;AACrE;;AACF;;;;;;AAHF;;AACE;;AAES;;AACX;;;;;;AAJkF;;AACvE;;AAAA;;;;;;;;AAKT;;AAAuE;AAAA;;AAAA;;AAAA,wCAAsB,OAAtB;AAA6B,WAA7B;;AACrE;;AACF;;;;;;AAHF;;AACE;;AAES;;AACX;;;;;;AAJiF;;AACtE;;AAAA;;;;;;;;AAKT;;AAAuE;AAAA;;AAAA;;AAAA,wCAAsB,QAAtB;AAA8B,WAA9B;;AACrE;;AACF;;;;;;AAHF;;AACE;;AAEU;;AACZ;;;;;;AAJ4C;;AACjC;;AAAA;;;;;;AAuBvB;;;;UDpKSI,sB;AAWZ;AAEC,wCAAoBxe,WAApB,EAAqD7S,UAArD,EACUqC,MADV,EACgCG,KADhC,EAC4DqG,KAD5D,EAC4FnG,EAD5F,EAC2HkG,WAD3H,EAEUD,GAFV,EAEkC;AAAA;;AAFd,eAAAkK,WAAA,GAAAA,WAAA;AAAiC,eAAA7S,UAAA,GAAAA,UAAA;AAC3C,eAAAqC,MAAA,GAAAA,MAAA;AAAsB,eAAAG,KAAA,GAAAA,KAAA;AAA4B,eAAAqG,KAAA,GAAAA,KAAA;AAAgC,eAAAnG,EAAA,GAAAA,EAAA;AAA+B,eAAAkG,WAAA,GAAAA,WAAA;AACjH,eAAAD,GAAA,GAAAA,GAAA;AAbV,eAAAJ,MAAA,GAAkB,KAAlB;AACA,eAAAiI,UAAA,GAAsB,IAAtB;AAEA,eAAA8gB,iBAAA,GAA4B,EAA5B;AAGA,eAAAtlB,WAAA,GAAwB,KAAxB;AACA,eAAAsf,OAAA,GAAU,IAAIrqB,IAAJ,EAAV;AACA,eAAA6H,WAAA,GAAqB,IAArB;AAKoC,eAAKyoB,iBAAL,GAAyB,KAAK1e,WAAL,CAAiBhS,KAAjB,CAAuB;AAClF0O,wBAAY,EAAE,CAAE,EAAF,EAAK,CAAC,0DAAWxO,QAAZ,CAAL,CADoE;AAElFyO,0BAAc,EAAE,CAAE,EAAF,EAAK,CAAC,0DAAWzO,QAAZ,CAAL,CAFkE;AAGlFywB,sBAAU,EAAE,CAAE,EAAF,EAAK,CAAC,0DAAWzwB,QAAZ,CAAL,CAHsE;AAIlF0O,mBAAO,EAAE,CAAE,EAAF,EAAK,CAAC,0DAAW1O,QAAZ,CAAL,CAJyE;AAKlF+b,wBAAY,EAAE,CAAE,EAAF,CALoE;AAMlFvc,cAAE,EAAE,CAAE,EAAF,CAN8E;AAOlFmd,wBAAY,EAAG,CAAC,EAAD;AAPmE,WAAvB,CAAzB;AAUjC;;;;iBAEH,oBAAQ;AAAA;;AACN,iBAAK+T,oBAAL;AACA,iBAAK5oB,KAAL,CAAWE,aAAX,CAAyBvF,SAAzB,CAAmC,UAACwF,MAAD,EAAiB;AAClD,kBAAGA,MAAM,CAACC,GAAP,CAAW,IAAX,CAAH,EAAoB;AAClB,wBAAI,CAACV,MAAL,GAAc,IAAd;AACA,wBAAI,CAAChI,EAAL,GAAUyI,MAAM,CAACC,GAAP,CAAW,IAAX,CAAV;;AACA,wBAAI,CAACjJ,UAAL,CAAgB0xB,iBAAhB,CAAkC1oB,MAAM,CAACC,GAAP,CAAW,IAAX,CAAlC,EAAoDzF,SAApD,CAA8D,UAACyE,IAAD,EAAS;AACpE,0BAAI,CAACzH,aAAL,CAAmByH,IAAnB;;AACA,0BAAI,CAACwE,SAAL,GAAgBxE,IAAhB;AACA,0BAAI,CAACM,MAAL,GAAc,IAAd;AACA,0BAAI,CAACyD,WAAL,GAAmB,IAAnB;;AACA,0BAAI,CAACpD,WAAL,CAAiBQ,eAAjB,CAAiC,QAAI,CAACqD,SAAtC;;AACA,0BAAI,CAAC7D,WAAL,CAAiBS,cAAjB;AACF,iBAPD;AAQD,eAXD,MAYI;AACF,wBAAI,CAACP,WAAL,GAAiB,KAAjB;;AACA,wBAAI,CAACtI,aAAL,CAAmB,EAAnB;AACD;AACF,aAjBD;AAmBA,iBAAKyC,YAAL,GAAoB,KAAKP,EAAL,CAAQQ,OAAR,CAAgB,YAAhB,EAA8BoG,QAAlD;AACD;;;iBACD,gCAAuB;AAAA;;AACrB;AACA;AACA;AACA,iBAAKtJ,UAAL,CAAgB+N,kBAAhB,GAAqCvK,SAArC,CAA+C,UAAA3D,IAAI,EAAE;AACnDiF,qBAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoClF,IAApC;;AACA,mBAAI,IAAI4D,CAAC,GAAC,CAAV,EAAaA,CAAC,GAAC5D,IAAI,CAAC6D,MAApB,EAA2BD,CAAC,EAA5B,EAA+B;AAC7B,wBAAI,CAAC6tB,iBAAL,CAAuB5lB,IAAvB,CAA4B7L,IAAI,CAAC4D,CAAD,CAAJ,CAAQuK,UAApC;AACD;;AACDlJ,qBAAO,CAACC,GAAR,CAAY,QAAI,CAACusB,iBAAjB;AACD,aAND;AAOD;;;iBACD,uBAAc3wB,IAAd,EAAoB;AAClB,gBAAGA,IAAI,CAAC8O,OAAR,EAAgB;AACd9O,kBAAI,CAAC8O,OAAL,GAAe9O,IAAI,GAAG,mCAAM,CAACA,IAAI,CAAC8O,OAAN,CAAN,CAAqB2E,MAArB,EAAH,GAAmC,EAAtD;AACD;;AACD,iBAAKmd,iBAAL,GAAyB,KAAK1e,WAAL,CAAiBhS,KAAjB,CAAuB;AAC9C0O,0BAAY,EAAE,CAAC5O,IAAI,CAAC4O,YAAL,IAAqB,EAAtB,EAAyB,CAAC,0DAAWxO,QAAZ,CAAzB,CADgC;AAE9CyO,4BAAc,EAAE,CAAC7O,IAAI,CAAC6O,cAAL,IAAsB,EAAvB,EAA0B,CAAC,0DAAWzO,QAAZ,CAA1B,CAF8B;AAG9CywB,wBAAU,EAAE,CAAC7wB,IAAI,CAAC6wB,UAAL,IAAkB,EAAnB,EAAsB,CAAC,0DAAWzwB,QAAZ,CAAtB,CAHkC;AAI9CR,gBAAE,EAAE,CAAEI,IAAI,CAACJ,EAAL,IAAU,EAAZ,CAJ0C;AAK9CkP,qBAAO,EAAE,CAAC9O,IAAI,CAAC8O,OAAL,IAAe,EAAhB,EAAmB,CAAC,0DAAW1O,QAAZ,CAAnB,CALqC;AAM9C+b,0BAAY,EAAE,CAACnc,IAAI,CAACmc,YAAL,IAAoB,EAArB,CANgC;AAO9CY,0BAAY,EAAG,CAAC/c,IAAI,CAACsC,YAAL,IAAqB,EAAtB;AAP+B,aAAvB,CAAzB;AAUD;;;iBACD,kBAAM;AACJ,iBAAKZ,MAAL,CAAYwD,QAAZ,CAAqB,CAAC,sCAAD,CAArB;AACD;;;iBACD,sBAAa4E,SAAb,EAAsB;AAAA;;AACpB,+DAAKC,IAAL,CACE;AACE;AACAC,kBAAI,EAAE,uBAAsBF,SAAtB,GAAiC,UAAjC,GAA8C,0BAFtD;AAGEG,8BAAgB,EAAE,IAHpB;AAIEC,gCAAkB,EAAE,SAJtB;AAKEC,+BAAiB,EAAE,MALrB;AAME;AACAC,8BAAgB,EAAE,IAPpB;AAQEC,+BAAiB,EAAE,KARrB;AAQ4B,sBAAQ;AARpC,aADF,EAWEC,IAXF,CAWQ,UAAAC,MAAM,EAAI;AAChB,kBAAGA,MAAM,CAACC,WAAP,IAAoB,IAAvB,EAA4B;AAC1B,wBAAI,CAACnL,UAAL,CAAgBgQ,oBAAhB,CAAqC,QAAI,CAACvD,SAAL,CAAelM,EAApD,EACCiD,SADD,CACW,UAAA3D,IAAI,EAAI;AACjB,0BAAI,CAACwC,MAAL,CAAYwD,QAAZ,CAAqB,CAAC,sCAAD,CAArB;AACD,iBAHD,EAIA,UAAAuC,GAAG,EAAE;AACH,sBAAIA,GAAG,CAACC,MAAJ,IAAc,GAAlB,EAAuB;AACrB,4BAAI,CAAC7F,KAAL,CAAWc,IAAX,CAAgB,6BAAhB,EAA+C,IAA/C,EAAqD;AACnDkC,8BAAQ,EAAE,IADyC;AAEnDC,sCAAgB,EAAE,KAFiC;AAGnDC,wCAAkB,EAAE;AAH+B,qBAArD;AAKD;;AACD,0BAAI,CAACrD,MAAL,CAAYwD,QAAZ,CAAqB,CAAC,sCAAD,CAArB;AAEH,iBAdC;AAeD;AAAC,aA5BJ;AAgCD;;;iBACD,sBAAU;AACR,iBAAKiD,WAAL,GAAiB,KAAjB;AACD;;;iBAED,sBAAa2B,SAAb,EAAwB;AAAA;;AACtB,+DAAKC,IAAL,CACE;AACE;AACAC,kBAAI,EAAE,uBAAsBF,SAAtB,GAAiC,UAAjC,GAA8C,0BAFtD;AAGEG,8BAAgB,EAAE,IAHpB;AAIEC,gCAAkB,EAAE,SAJtB;AAKEC,+BAAiB,EAAE,MALrB;AAME;AACAC,8BAAgB,EAAE,IAPpB;AAQEC,+BAAiB,EAAE,KARrB;AAQ4B,sBAAQ;AARpC,aADF,EAWEC,IAXF,CAWQ,UAAAC,MAAM,EAAI;AAChB,kBAAGA,MAAM,CAACC,WAAP,IAAoB,IAAvB,EAA4B;AAC1B,oBAAI7K,OAAO,GAAQ,EAAnB;AACJA,uBAAO,CAACC,EAAR,GAAa,QAAI,CAACA,EAAlB;AACAD,uBAAO,CAACmK,SAAR,GAAoBA,SAApB;AACAnK,uBAAO,CAAC2C,YAAR,GAAuB,QAAI,CAACA,YAA5B;;AACA,wBAAI,CAACjD,UAAL,CAAgB2xB,gCAAhB,CAAiDrxB,OAAjD,EAA0DkD,SAA1D,CAAoE,UAAC3D,IAAD,EAAU;AAC5E,0BAAI,CAAC4M,SAAL,GAAiB5M,IAAjB;;AACA,0BAAI,CAAC+I,WAAL,CAAiBQ,eAAjB,CAAiC,QAAI,CAACqD,SAAtC;;AACA,0BAAI,CAACT,WAAL,GAAmB,IAAnB;;AACA,0BAAI,CAACpD,WAAL,CAAiBS,cAAjB;;AACA,sBAAIpD,OAAO,GAAG,EAAd;;AACA,0BAAQwE,SAAR;AACE,yBAAK,MAAL;AACExE,6BAAO,GAAG,QAAV;AACA;;AACF,yBAAK,OAAL;AACEA,6BAAO,GAAG,QAAV;AACA;;AACF,yBAAK,MAAL;AACEA,6BAAO,GAAG,YAAV;AACA;;AACF;AACE;AAXJ;;AAaA,0BAAI,CAACzD,KAAL,CAAWc,IAAX,kBAA0B2C,OAA1B,oBAAkD,IAAlD,EAAwD;AACtDT,4BAAQ,EAAE,IAD4C;AAEtDC,oCAAgB,EAAE,KAFoC;AAGtDC,sCAAkB,EAAE;AAHkC,mBAAxD;AAKD,iBAxBD;AAyBG;AAAC,aA1CJ;AA4CD;;;iBACD,kBAAM;AAAA;;AAEJ;AACA,gBAAI0mB,SAAS,GAAG,KAAKtO,WAAL,CAAiB,KAAKyT,iBAAL,CAAuBxT,QAAvB,CAAgCtO,OAAhC,CAAwCpO,KAAzD,CAAhB;AACA,iBAAKkwB,iBAAL,CAAuBlwB,KAAvB,CAA6B,SAA7B,IAA0C+qB,SAA1C,CAJI,CAKJ;AACA;;AACA,iBAAKmF,iBAAL,CAAuBlwB,KAAvB,CAA6B4B,YAA7B,GAA4C,KAAKA,YAAjD;AAEA,iBAAKsuB,iBAAL,CAAuBlwB,KAAvB,CAA6BkO,YAA7B,GAA0CqiB,QAAQ,CAAC,KAAKL,iBAAL,CAAuBlwB,KAAvB,CAA6BkO,YAA9B,CAAlD;AACA,iBAAKgiB,iBAAL,CAAuBlwB,KAAvB,CAA6Bd,EAA7B,GAAgCqxB,QAAQ,CAAC,KAAKL,iBAAL,CAAuBlwB,KAAvB,CAA6Bd,EAA9B,CAAxC;AAEA,gBAAID,OAAO,GAAC;AACViP,0BAAY,EAAE,KAAKgiB,iBAAL,CAAuBlwB,KAAvB,CAA6BkO,YADjC;AAEVC,4BAAc,EAAE,KAAK+hB,iBAAL,CAAuBlwB,KAAvB,CAA6BmO,cAFnC;AAGVgiB,wBAAU,EAAE,KAAKD,iBAAL,CAAuBlwB,KAAvB,CAA6BmwB,UAH/B;AAIV/hB,qBAAO,EAAG,KAAK8hB,iBAAL,CAAuBlwB,KAAvB,CAA6BoO,OAJ7B;AAKV;AACAlP,gBAAE,EAAC,KAAKgxB,iBAAL,CAAuBlwB,KAAvB,CAA6Bd,EANtB;AAOVuc,0BAAY,EAAE,KAAKyU,iBAAL,CAAuBlwB,KAAvB,CAA6Byb,YAPjC;AAQV7Z,0BAAY,EAAE,KAAKA;AART,aAAZ;AAaF,iBAAKjD,UAAL,CAAgB6xB,sBAAhB,CAAuCvxB,OAAvC,EAAgDkD,SAAhD,CAA0D,UAAA+B,QAAQ,EAAI;AACpE,kBAAGA,QAAQ,IAAI,IAAZ,IAAoB,QAAI,CAACgD,MAA5B,EAAmC;AACjC,wBAAI,CAAC/F,KAAL,CAAWc,IAAX,qBAAoC,IAApC,EAA0C;AACxCkC,0BAAQ,EAAE,IAD8B;AAExCC,kCAAgB,EAAE,KAFsB;AAGxCC,oCAAkB,EAAE;AAHoB,iBAA1C;;AAKA,wBAAI,CAACiD,GAAL,CAAS4B,YAAT;AACD,eAPD,MAQK,IAAGhF,QAAQ,IAAI,IAAZ,IAAoB,CAAC,QAAI,CAACgD,MAA7B,EAAoC;AACvC,wBAAI,CAAC/F,KAAL,CAAWc,IAAX,mBAAkC,IAAlC,EAAwC;AACtCkC,0BAAQ,EAAE,IAD4B;AAEtCC,kCAAgB,EAAE,KAFoB;AAGtCC,oCAAkB,EAAE;AAHkB,iBAAxC;;AAKA,wBAAI,CAACiD,GAAL,CAAS4B,YAAT;AACD;;AACD,sBAAI,CAAClI,MAAL,CAAYwD,QAAZ,CAAqB,CAAC,sCAAD,CAArB;AACD,aAlBD;AAqBC;;;iBAED,qBAAYxE,KAAZ,EAAmB;AACjB,gBAAI4R,IAAI,GAAG,mCAAM,CAAC5R,KAAD,CAAN,CAAc+S,MAAd,CAAqB,aAArB,CAAX,CADiB,CAEjB;;AACA,gBAAInB,IAAJ,EACE,OAAOA,IAAP;AACH;;;iBAEC,sBAAa/O,KAAb,EAAmBsL,cAAnB,EAAiC;AACjC,mBAAOA,cAAc,CAACmO,YAAtB;AACD;;;;;;;yBA7NU0T,sB,EAAsB,2H,EAAA,2I,EAAA,uH,EAAA,wI,EAAA,+H,EAAA,0J,EAAA,6I,EAAA,gI;AAAA,O;;;cAAtBA,sB;AAAsB,2C;AAAA,iB;AAAA,gB;AAAA,2gE;AAAA;AAAA;AChBnC;;AACA;;AACA;;AACI;;AAAwB;AAAA,qBAAS,IAAAhrB,MAAA,EAAT;AAAiB,aAAjB;;AACpB;;AAAU;;AAAU;;AACxB;;AACA;;AACA;;AAgBJ;;AAEA;;AACI;;AACI;;AAIQ;;AACI;;AACI;;AAAW;;AAAgB;;AAC3B;;AACI;;AASJ;;AACJ;;AAEA;;AAcA;;AAaA;;AACI;;AAAW;;AAAoB;;AAC/B;;AACI;;AAQJ;;AAEJ;;AAEJ;;AACA;;AAEI;;AACI;;AAAW;;AAAkB;;AAC7B;;AACI;;AAIA;;AACA;;AAIJ;;AAEJ;;AACA;;AACI;;AAAW;;AAAqB;;AAChC;;AACI;;AAQJ;;AAEJ;;AAEJ;;AAKJ;;AACE;;AACE;;AACA;;AACA;;AACE;;AAEW;;AACb;;AACA;;AACE;;AAES;;AACX;;AACA;;AAKA;;AAKA;;AAKA;;AAMA;;AAIE;AAAA,qBAAS,IAAAA,MAAA,EAAT;AAAiB,aAAjB;;AAEA;;AACF;;AAEF;;AACF;;AACJ;;AAGJ;;AACJ;;AAEA;;AACI;;AACF;;;;;;AArLqB;;AACA;;AAAA;;AAKd;;AAAA;;AACA;;AAAA;;AAoBK;;AAAA;;AAQqB;;AAAA;;AAYM;;AAAA;;AAcA;;AAAA;;AAgBN;;AAAA;;AAkBS;;AAAA,2FAA+B,KAA/B,EAA+B,WAA/B;;AAIiB;;AAAA;;AAWzB;;AAAA;;AAmBO;;AAAA;;AAEtB;;AAAA;;AACM;;AAAA;;AAIN;;AAAA;;AACM;;AAAA;;AAIL;;AAAA;;AAKA;;AAAA;;AAKA;;AAAA;;AAKA;;AAAA;;AAwBF;;AAAA;;;;;;;;;wEDpKPgrB,sB,EAAsB;gBALlC,uDAKkC;iBALxB;AACTpvB,oBAAQ,EAAE,oBADD;AAETC,uBAAW,EAAE,iCAFJ;AAGTC,qBAAS,EAAE,CAAC,iCAAD;AAHF,W;AAKwB,U;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEhBnC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACyDa;;AACE;;AACF;;;;;;AAFwE;;AACtE;;AAAA;;;;;;AA2BN;;AAA8F;;AAC9F;;;;;;AACA;;AAAqC;;AAAqB;;;;;;AAArB;;AAAA;;;;;;AAIrC;;AAAgG;;AAChG;;;;;;AACA;;AAAqC;;AAAuB;;;;;;AAAvB;;AAAA;;;;;;AAIrC;;AAAgG;;AAC7F;;;;;;AACH;;AAAqC;;AAAwB;;;;;;AAAxB;;AAAA;;;;;;AAGtC;;AAAgG;;AAC7F;;;;;;AACH;;AAAqC;;AAAwB;;;;;;AAAxB;;AAAA;;;;;;AAGpC;;AAAkG;;AACjG;;;;;;AACD;;AAAqC;;AAAwB;;;;;;AAAxB;;AAAA;;;;;;AAGrC;;AAAgG;;AAC/F;;;;;;AACD;;AAAqC;;AAAuB;;;;;;AAAvB;;AAAA;;;;;;AAGrC;;AAAkG;;AACjG;;;;;;AACD;;AAAqC;;AAAyB;;;;;;AAAzB;;AAAA;;;;;;AAIrC;;AAAmC;;AAAM;;;;;;;;AACzC;;AACA;;AAAoE;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACnE;;AAAU;;AAAI;;AAChB;;AACC;;AACK;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACA;;AAAU;;AAAM;;AAClB;;AACH;;;;;;AAJmD;;AAAA;;;;;;AAOrD;;;;;;AACA;;;;;;;;UDzHM2vB,2B;AAkBX,6CAAoBzvB,MAApB,EAA0CG,KAA1C,EACUxC,UADV,EACwC2C,cADxC,EAEUL,cAFV,EAEyC;AAAA;;AAFrB,eAAAD,MAAA,GAAAA,MAAA;AAAsB,eAAAG,KAAA,GAAAA,KAAA;AAChC,eAAAxC,UAAA,GAAAA,UAAA;AAA8B,eAAA2C,cAAA,GAAAA,cAAA;AAC9B,eAAAL,cAAA,GAAAA,cAAA;AAlBV,eAAAU,mBAAA,GAA+B,CAA/B;AAEA,eAAAJ,UAAA,GAAa,IAAI,0EAAJ,EAAb;AACA,eAAAC,gBAAA,GAA6B,CAAC,UAAD,EAAa,YAAb,EAA2B,aAA3B,EAA0C,aAA1C,EAA0D,aAA1D,EAAyE,YAAzE,EAAuF,cAAvF,EAAuG,QAAvG,CAA7B;AAEA,eAAAC,cAAA,GAAmD,CACjD;AAAEC,eAAG,EAAE,aAAP;AAAsB1B,iBAAK,EAAE;AAA7B,WADiD,EAEjD;AAAE0B,eAAG,EAAE,aAAP;AAAsB1B,iBAAK,EAAE;AAA7B,WAFiD,EAGjD;AAAE0B,eAAG,EAAE,YAAP;AAAqB1B,iBAAK,EAAE;AAA5B,WAHiD,CAAnD;AAQA,eAAA2F,KAAA,GAAkB,EAAlB;AAK4C;;;;iBAE1C,oBAAQ;AACN,iBAAK+qB,cAAL;AACA,iBAAK7qB,QAAL;AACD;;;iBAED,sBAAa3F,KAAb,EAAoB;AAAA;;AAClBuD,mBAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBxD,KAAK,CAACyD,IAAN,CAAW,CAAX,EAAcC,KAAd,CAAoB,CAApB,CAArB;AACA,gBAAMC,IAAI,GAAS3D,KAAK,CAACyD,IAAN,CAAW,CAAX,EAAcC,KAAd,CAAoB,CAApB,CAAnB;AACA,gBAAME,UAAU,GAAG,IAAIC,QAAJ,EAAnB;AACAD,sBAAU,CAACE,MAAX,CAAkB,YAAlB,EAAgC,SAAhC;AACAF,sBAAU,CAACE,MAAX,CAAkB,MAAlB,EAA0BH,IAA1B;AACA,iBAAKlF,UAAL,CAAgBsF,cAAhB,CAA+BH,UAA/B,EAA2C3B,SAA3C,CAAqD,UAAC+B,QAAD,EAAc;AACjET,qBAAO,CAACC,GAAR,CAAYQ,QAAZ;;AACA,sBAAI,CAACwsB,cAAL;;AACA,sBAAI,CAACvvB,KAAL,CAAWc,IAAX,+BAA8C,IAA9C,EAAoD;AAClDkC,wBAAQ,EAAE,IADwC;AAElDC,gCAAgB,EAAE,KAFgC;AAGlDC,kCAAkB,EAAE;AAH8B,eAApD;;AAKA,sBAAI,CAACqsB,cAAL;AACD,aATD;AAUD;;;iBACD,oBAAW;AACT,iBAAK1qB,KAAL,GAAa,KAAKL,KAAlB;AACD;;;iBACD,0BAAc;AAAA;;AACZ,iBAAKhH,UAAL,CAAgBgyB,iBAAhB,GAAoCxuB,SAApC,CAA8C,UAAC3D,IAAD,EAAe;AAC3D,mBAAI,IAAI4D,CAAC,GAAC,CAAV,EAAYA,CAAC,GAAC5D,IAAI,CAAC6D,MAAnB,EAA0BD,CAAC,EAA3B,EAA8B;AAC5B,oBAAG5D,IAAI,CAAC4D,CAAD,CAAJ,CAAQE,UAAR,IAAsB,GAAzB,EAA6B;AAC3B9D,sBAAI,CAAC4D,CAAD,CAAJ,CAAQE,UAAR,GAAqB,cAArB;AACD;;AACD,oBAAG9D,IAAI,CAAC4D,CAAD,CAAJ,CAAQE,UAAR,IAAsB,GAAzB,EAA8B;AAC5B9D,sBAAI,CAAC4D,CAAD,CAAJ,CAAQE,UAAR,GAAqB,YAArB;AACD;;AACD,oBAAG9D,IAAI,CAAC4D,CAAD,CAAJ,CAAQG,YAAR,IAAwB,GAA3B,EAA+B;AAC7B/D,sBAAI,CAAC4D,CAAD,CAAJ,CAAQG,YAAR,GAAuB,MAAvB;AACD;;AACD,oBAAG/D,IAAI,CAAC4D,CAAD,CAAJ,CAAQG,YAAR,IAAwB,GAA3B,EAA+B;AAC7B/D,sBAAI,CAAC4D,CAAD,CAAJ,CAAQG,YAAR,GAAuB,QAAvB;AACD;AACF;;AACD,sBAAI,CAACoD,KAAL,GAAanH,IAAb;AACA,sBAAI,CAACwH,KAAL,GAAa,QAAI,CAACL,KAAlB;AACA,sBAAI,CAACpE,UAAL,GAAkB,IAAI,0EAAJ,CAAuB/C,IAAvB,CAAlB;AACA,sBAAI,CAAC+C,UAAL,CAAgBQ,SAAhB,GAA4B,QAAI,CAACA,SAAjC;AACA,sBAAI,CAACR,UAAL,CAAgBS,IAAhB,GAAuB,QAAI,CAACA,IAA5B;AACD,aApBD;AAqBD;;;iBACH,kBAASS,QAAT,EAAmBC,CAAnB,EAAoB;AAClB,iBAAKC,WAAL,CAAiBF,QAAjB;AACA,iBAAKG,WAAL,CAAiBF,CAAjB;AACD;;;iBAED,qBAAYD,QAAZ,EAAsB;AAEpB,iBAAKlB,UAAL,CAAgBuB,eAAhB,GAAkC,UAACtE,IAAD,EAAYuE,MAAZ,EAAwC;AACxE,kBAAGvE,IAAI,CAACiE,QAAD,CAAJ,IAAiB,IAApB,EAAyB;AACzB,uBACEjE,IAAI,CAACiE,QAAD,CAAJ,CAAeW,IAAf,GAAsBJ,iBAAtB,GAA0CC,QAA1C,CAAmDF,MAAnD,CADF;AAEE;AACH,aALD;AAMD;;;iBAED,uBAAW;AACT,iBAAKxB,UAAL,CAAgBwB,MAAhB,GAAyB,EAAzB;AACA,iBAAKuC,SAAL,CAAec,aAAf,CAA6BpG,KAA7B,GAAqC,EAArC;AACA,iBAAK2B,mBAAL,GAA2B,CAA3B;AACA;;;iBAGD,qBAAYzB,KAAZ,EAA0B;AAExB,gBAAMgD,WAAW,GAAIhD,KAAK,CAACiD,MAAN,CAAkCnD,KAAvD;AACA,iBAAKuB,UAAL,CAAgBwB,MAAhB,GAAyBG,WAAW,CAACE,IAAZ,GAAmBJ,iBAAnB,EAAzB;AACD;;;iBACD,4BAAmBM,SAAnB,EAAoC;AAClC,gBAAIA,SAAS,CAACC,SAAd,EAAyB;AACvB,mBAAKtC,cAAL,CAAoBuC,QAApB,kBAAuCF,SAAS,CAACC,SAAjD;AACD,aAFD,MAEO;AACL,mBAAKtC,cAAL,CAAoBuC,QAApB,CAA6B,iBAA7B;AACD;AACF;;;iBACD,kBAAM;AACL,iBAAKxC,MAAL,CAAYwD,QAAZ,CAAqB,CAAC,sCAAD,CAArB;AACD;;;iBACD,oBAAyC;AAAA,gBAAhChG,IAAgC,uEAApB,EAAoB;AAAA,gBAAjB0I,MAAiB;AACvC,iBAAKlG,MAAL,CAAYwD,QAAZ,CAAqB,CAAC,sCAAD,CAArB,EAA8D;AAAEC,yBAAW,EAAE;AAAEvF,kBAAE,EAAEV,IAAI,CAACU,EAAX;AAAegI,sBAAM,EAAGA;AAAxB;AAAf,aAA9D;AACD;;;iBACD,kBAAM;AACJ,iBAAKlG,MAAL,CAAYwD,QAAZ,CAAqB,CAAC,mBAAD,CAArB;AACD;;;iBACD,oBAAWqC,OAAX,EAAoB;AAAA;;AAClB,iBAAKvF,cAAL,CAAoBqD,OAApB,CAA4B;AAACC,qBAAO,oBAAaiC,OAAO,CAAC+pB,WAArB;AAAR,aAA5B,EACGzuB,SADH,CACa,UAAA2C,GAAG,EAAI;AAChB,kBAAIA,GAAJ,EAAS;AACP,wBAAI,CAACnG,UAAL,CAAgBkyB,iBAAhB,CAAkChqB,OAAO,CAAC3H,EAA1C,EACGiD,SADH,CACa,UAAA3D,IAAI,EAAI,CAClB,CAFH,EAGI,UAAAuI,GAAG,EAAE;AACH,sBAAIA,GAAG,CAACC,MAAJ,IAAc,GAAlB,EAAuB;AACrB,4BAAI,CAAC7F,KAAL,CAAWc,IAAX,CAAgB,6BAAhB,EAA+C,IAA/C,EAAqD;AACnDkC,8BAAQ,EAAE,IADyC;AAEnDC,sCAAgB,EAAE,KAFiC;AAGnDC,wCAAkB,EAAE;AAH+B,qBAArD;AAKD;;AACD,0BAAI,CAACqsB,cAAL;AACH,iBAZH;AAaD;AACF,aAjBH;AAkBD;;;iBACD,sBAAa7tB,KAAb,EAAmBvD,IAAnB,EAAuB;AACrB,mBAAOA,IAAI,CAACoC,GAAZ;AACD;;;;;;;yBAvIU+uB,2B,EAA2B,uH,EAAA,wI,EAAA,2I,EAAA,sK,EAAA,gI;AAAA,O;;;cAA3BA,2B;AAA2B,gD;AAAA;AAAA;;;sEAa3B,8D,EAAO,I;;sEACP,wE,EAAY,I;;;;;;;;;;;;;;;;;;AC7BzB;;AAAsB;;AAA0B;;AAAkD;;AAAQ;;AACxG;;AACE;;AAAwB;AAAA,qBAAS,IAAAzrB,MAAA,EAAT;AAAiB,aAAjB;;AACpB;;AAAU;;AAAU;;AACtB;;AACA;;AACE;;AACF;;AACJ;;AAIA;;AACC;;AAEC;;AACE;;AACE;;AACE;;AACE;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AAEF;;AACF;;AACF;;AACG;;AACA;;AACE;;AAAU;;AAAS;;AACrB;;AACA;;AACH;;AACE;;AAAoC;;AAAM;;AAC1C;;AAIE;AAAA,qBAAU,IAAAC,YAAA,QAAV;AAA8B,aAA9B;;AAJF;;AAMF;;AACK;;AACE;;AAAM;;AAAQ;;AAChB;;AACF;;AACH;;AACD;;AACE;;AACE;;AACE;;AACE;;AAAW;;AAAS;;AACpB;;AAAsC;AAAA;AAAA;;AAEpC;;AAAsB;;AAAM;;AAC5B;;AAGF;;AACF;;AACF;;AACA;;AACE;;AACE;;AAAW;;AAAM;;AACjB;;AAA2B;AAAA;;AAAA;;AAAA,qBAAS,IAAAE,QAAA,mBAAT;AAAwC,aAAxC;;AAA3B;;AAEA;;AAAoB;;AAAM;;AAC5B;;AACF;;AACA;;AACE;;AAAqC;AAAA,qBAAS,IAAA2J,WAAA,EAAT;AAAsB,aAAtB;;AAA8C;;AAAY;;AACjG;;AACA;;AACC;;AAAsD;AAAA,qBAAS,IAAA3H,MAAA,EAAT;AAAiB,aAAjB;;AAA8D;;AAEhH;;AACN;;AACD;;AACF;;AACA;;AACE;;AAA4D;AAAA,qBAAiB,IAAA9B,kBAAA,QAAjB;AAA2C,aAA3C;;AAE1D;;AACE;;AAEA;;AACF;;AAEA;;AACE;;AAEA;;AACF;;AAEA;;AACE;;AAEA;;AACF;;AACA;;AACC;;AAEA;;AACF;;AACC;;AACE;;AAEA;;AACF;;AACA;;AACE;;AAEA;;AACF;;AACA;;AACE;;AAEA;;AACF;;AAEA;;AACE;;AACA;;AASF;;AAEA;;AACA;;AACF;;AACA;;AACF;;AACD;;;;;;AA7G6B;;AAAA;;AAuBkB;;AAAA;;AAGL;;AAAA,oGAAmB,cAAnB,EAAmB,gBAAnB;;AAyBb;;AAAA;;AAqDP;;AAAA;;AACa;;AAAA;;AAEjB;;AAAA;;;;;;;;;wED3HPorB,2B,EAA2B;gBALvC,uDAKuC;iBAL7B;AACT7vB,oBAAQ,EAAE,yBADD;AAETC,uBAAW,EAAE,sCAFJ;AAGTC,qBAAS,EAAE,CAAC,sCAAD;AAHF,W;AAK6B,U;;;;;;;;;;;;;AACdwE,mBAAS,EAAE,CAAF;kBAAhC,uDAAgC;mBAAtB,W;AAAsB,WAAE,C;AAYftD,cAAI,EAAE,CAAF;kBAAvB,uDAAuB;mBAAb,8D;AAAa,WAAE,C;AACDD,mBAAS,EAAE,CAAF;kBAAjC,uDAAiC;mBAAvB,wE;AAAuB,WAAE;;;;;;;;;;;;;;;;;;;AE7BtwDY;;AACE;;AACF;;;;;;AAFkD;;AAChD;;AAAA;;;;;;;;AAaV;;AACE;;AAA4C;AAAA;;AAAA;;AAAA;AAAA;;AAAwB;;AACpE;;AACF;;;;;;AAYI;;AAA+F;;AAE/F;;;;;;AACA;;AAAqC;;AAAuB;;;;;;AAAvB;;AAAA;;;;;;AAIrC;;AAA+F;;AAC/F;;;;;;AACA;;AAAqC;;AAAuB;;;;;;AAAvB;;AAAA;;;;;;AAIrC;;AAAiG;;AAEjG;;;;;;AACA;;AAAqC;;AAA0B;;;;;;AAA1B;;AAAA;;;;;;AAGrC;;AAAgG;;AAChG;;;;;;AACA;;AAAqC;;AAAuB;;;;;;AAAvB;;AAAA;;;;;;AAGrC;;AAAkG;;AAElG;;;;;;AACA;;AAAqC;;AAAyB;;;;;;AAAzB;;AAAA;;;;;;AAGrC;;AAAmC;;AAAM;;;;;;;;AACzC;;AACE;;AACC;;AAAgD;AAAA;;AAAA;;AAAA;;AAAA,kDAA2B,KAA3B;AAAgC,WAAhC;;AAAoC;;AAAI;;AAC3F;;AAAM;;AACN;;AACC;;AAA0F;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA+B;;AAAM;;AAChI;;AACA;;;;;;AAFmD;;AAAA;;;;;;AAKrD;;;;;;AACA;;;;;;;;UDvGK+uB,0B;AAqBX,4CACU3vB,KADV,EAEUG,cAFV,EAGU3C,UAHV,EAIUqC,MAJV,EAKUC,cALV,EAMUC,eANV,EAM0C;AAAA;;AALhC,eAAAC,KAAA,GAAAA,KAAA;AACA,eAAAG,cAAA,GAAAA,cAAA;AACA,eAAA3C,UAAA,GAAAA,UAAA;AACA,eAAAqC,MAAA,GAAAA,MAAA;AACA,eAAAC,cAAA,GAAAA,cAAA;AACA,eAAAC,eAAA,GAAAA,eAAA;AAxBV,eAAAS,mBAAA,GAA+B,CAA/B;AAQA,eAAAJ,UAAA,GAAa,IAAI,0EAAJ,EAAb;AACA,eAAAC,gBAAA,GAA6B,CAAC,YAAD,EAAe,YAAf,EAA6B,eAA7B,EAA6C,YAA7C,EAA0D,cAA1D,EAAyE,QAAzE,CAA7B;AAEA,eAAAC,cAAA,GAAmD,CACjD;AAAEC,eAAG,EAAE,YAAP;AAAqB1B,iBAAK,EAAE;AAA5B,WADiD,EAEjD;AAAE0B,eAAG,EAAE,YAAP;AAAqB1B,iBAAK,EAAE;AAA5B,WAFiD,CAAnD;AAeK;;;;iBAEL,oBAAW;AAAA;;AACT,iBAAKgd,OAAL,GAAe,IAAf;AACA,iBAAKlX,UAAL,GAAkB,KAAKnH,UAAL,CAAgB2L,kBAAhB,GAAqCnI,SAArC,CAA+C,UAAA3D,IAAI,EAAI;AACvE,sBAAI,CAACwH,KAAL,GAAaxH,IAAb;;AACA,sBAAI,CAAC8L,kBAAL;;AACA,sBAAI,CAAC0S,OAAL,GAAe,KAAf;AACD,aAJiB,CAAlB;AAKD;;;iBAED,uBAAc;AACZ,gBAAI,KAAKlX,UAAT,EAAqB;AACnB,mBAAKA,UAAL,CAAgBC,WAAhB;AACD;AACF;;;iBAED,2BAAkB;AAChB,iBAAKxE,UAAL,CAAgBQ,SAAhB,GAA4B,KAAKA,SAAjC;AACA,iBAAKR,UAAL,CAAgBS,IAAhB,GAAuB,KAAKA,IAA5B;AACD;;;iBACD,sBAAa9B,KAAb,EAAoB;AAAA;;AAClBuD,mBAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBxD,KAAK,CAACyD,IAAN,CAAW,CAAX,EAAcC,KAAd,CAAoB,CAApB,CAArB;AACA,gBAAMC,IAAI,GAAS3D,KAAK,CAACyD,IAAN,CAAW,CAAX,EAAcC,KAAd,CAAoB,CAApB,CAAnB;AACA,gBAAME,UAAU,GAAG,IAAIC,QAAJ,EAAnB,CAHkB,CAIlB;;AACAD,sBAAU,CAACE,MAAX,CAAkB,YAAlB,EAAgC,QAAhC;AACAF,sBAAU,CAACE,MAAX,CAAkB,MAAlB,EAA0BH,IAA1B;AACA,iBAAKlF,UAAL,CAAgBsF,cAAhB,CAA+BH,UAA/B,EAA2C3B,SAA3C,CAAqD,UAAC+B,QAAD,EAAc;AACjET,qBAAO,CAACC,GAAR,CAAYQ,QAAZ;;AACA,sBAAI,CAACoG,kBAAL;;AACA,sBAAI,CAACnJ,KAAL,CAAWc,IAAX,+BAA8C,IAA9C,EAAoD;AAClDkC,wBAAQ,EAAE,IADwC;AAElDC,gCAAgB,EAAE,KAFgC;AAGlDC,kCAAkB,EAAE;AAH8B,eAApD;;AAKA,sBAAI,CAACiG,kBAAL;AACD,aATD;AAUD;;;iBAED,8BAAqB;AAAA;;AACnB,iBAAKxE,UAAL,GAAkB,KAAKnH,UAAL,CAAgB2L,kBAAhB,GACfnI,SADe,CACL,UAAA3D,IAAI,EAAI;AACjB,mBAAI,IAAI4D,CAAC,GAAC,CAAV,EAAYA,CAAC,GAAC5D,IAAI,CAAC6D,MAAnB,EAA0BD,CAAC,EAA3B,EAA8B;AAC5B,oBAAG5D,IAAI,CAAC4D,CAAD,CAAJ,CAAQE,UAAR,IAAsB,GAAzB,EAA6B;AAC3B9D,sBAAI,CAAC4D,CAAD,CAAJ,CAAQE,UAAR,GAAqB,cAArB;AACD;;AACD,oBAAG9D,IAAI,CAAC4D,CAAD,CAAJ,CAAQE,UAAR,IAAsB,GAAzB,EAA8B;AAC5B9D,sBAAI,CAAC4D,CAAD,CAAJ,CAAQE,UAAR,GAAqB,YAArB;AACD;;AACD,oBAAG9D,IAAI,CAAC4D,CAAD,CAAJ,CAAQG,YAAR,IAAwB,GAA3B,EAA+B;AAC7B/D,sBAAI,CAAC4D,CAAD,CAAJ,CAAQG,YAAR,GAAuB,MAAvB;AACD;;AACD,oBAAG/D,IAAI,CAAC4D,CAAD,CAAJ,CAAQG,YAAR,IAAwB,GAA3B,EAA+B;AAC7B/D,sBAAI,CAAC4D,CAAD,CAAJ,CAAQG,YAAR,GAAuB,QAAvB;AACD;AACF;;AACD,sBAAI,CAAChB,UAAL,GAAkB,IAAI,0EAAJ,CAAuB/C,IAAvB,CAAlB;AACA,sBAAI,CAACuyB,QAAL,GAAgBvyB,IAAhB;AACAiF,qBAAO,CAACC,GAAR,CAAY,QAAI,CAACnC,UAAjB;AACA,sBAAI,CAACA,UAAL,CAAgBQ,SAAhB,GAA4B,QAAI,CAACA,SAAjC;AACF,sBAAI,CAACR,UAAL,CAAgBS,IAAhB,GAAuB,QAAI,CAACA,IAA5B;AACC,aArBe,CAAlB;AAsBD;;;iBAED,kBAAS;AACP,iBAAKhB,MAAL,CAAYwD,QAAZ,CAAqB,CAAC,8BAAD,CAArB;AACD;;;iBACD,iCAAqB;AACnB,iBAAKtD,eAAL,CAAqBoD,aAArB,CAAmC,mBAAnC,EAAuD,KAAKysB,QAA5D;AAGD,W,CAED;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;;;;iBAEA,kBAAS;AACP,iBAAK/vB,MAAL,CAAYwD,QAAZ,CAAqB,qBAArB;AACD;;;iBACD,kBAAS/B,QAAT,EAAmBC,CAAnB,EAAoB;AAClB,iBAAKC,WAAL,CAAiBF,QAAjB;AACA,iBAAKG,WAAL,CAAiBF,CAAjB;AACD;;;iBACD,qBAAYD,QAAZ,EAAsB;AACpB,iBAAKlB,UAAL,CAAgBuB,eAAhB,GAAkC,UAACtE,IAAD,EAAYuE,MAAZ,EAAwC;AACxE,qBACEvE,IAAI,CAACiE,QAAD,CAAJ,CAAeO,iBAAf,GAAmCC,QAAnC,CAA4CF,MAA5C,CADF;AAGD,aAJD;AAKD;;;iBACD,uBAAW;AACT,iBAAKxB,UAAL,CAAgBwB,MAAhB,GAAyB,EAAzB;AACA,iBAAKuC,SAAL,CAAec,aAAf,CAA6BpG,KAA7B,GAAqC,EAArC;AACA,iBAAK2B,mBAAL,GAA2B,CAA3B;AACA;;;iBACD,qBAAYzB,KAAZ,EAA0B;AACzB,gBAAMgD,WAAW,GAAIhD,KAAK,CAACiD,MAAN,CAAkCnD,KAAvD;AACA,iBAAKuB,UAAL,CAAgBwB,MAAhB,GAAyBG,WAAW,CAACE,IAAZ,GAAmBC,WAAnB,EAAzB;AACD;;;iBACD,4BAAmBC,SAAnB,EAAoC;AAClC,gBAAIA,SAAS,CAACC,SAAd,EAAyB;AACvB,mBAAKtC,cAAL,CAAoBuC,QAApB,kBAAuCF,SAAS,CAACC,SAAjD;AACD,aAFD,MAEO;AACL,mBAAKtC,cAAL,CAAoBuC,QAApB,CAA6B,iBAA7B;AACD;AAEF;;;iBACD,qBAA0C;AAAA,gBAAhChF,IAAgC,uEAApB,EAAoB;AAAA,gBAAjB0I,MAAiB;AACxC,iBAAKlG,MAAL,CAAYwD,QAAZ,CAAqB,CAAC,8BAAD,CAArB,EAAsD;AAAEC,yBAAW,EAAE;AAAEvF,kBAAE,EAAEV,IAAI,CAACU,EAAX;AAAegI,sBAAM,EAAGA;AAAxB;AAAf,aAAtD;AACD;;;iBACD,oBAAW+G,GAAX,EAAgB;AAAA;;AACdxK,mBAAO,CAACC,GAAR,CAAYuK,GAAZ;AACA,iBAAK3M,cAAL,CAAoBqD,OAApB,CAA4B;AAACC,qBAAO;AAAR,aAA5B,EACGzC,SADH,CACa,UAAA2C,GAAG,EAAI;AAChB,kBAAIA,GAAJ,EAAS;AAEP,wBAAI,CAACnG,UAAL,CAAgB6R,YAAhB,CAA6BvC,GAAG,CAAC/O,EAAjC,EACGiD,SADH,CACa,UAAA3D,IAAI,EAAI,CAClB,CAFH,EAGE,UAAAuI,GAAG,EAAE;AACH,sBAAIA,GAAG,CAACC,MAAJ,IAAc,GAAlB,EAAuB;AACrB,4BAAI,CAAC7F,KAAL,CAAWc,IAAX,CAAgB,6BAAhB,EAA+C,IAA/C,EAAqD;AACnDkC,8BAAQ,EAAE,IADyC;AAEnDC,sCAAgB,EAAE,KAFiC;AAGnDC,wCAAkB,EAAE;AAH+B,qBAArD;AAKD;;AACH,0BAAI,CAACiG,kBAAL;AAED,iBAbD;AAcD;AACF,aAnBH;AAoBD;;;;;;;yBA3LUwmB,0B,EAA0B,wI,EAAA,sK,EAAA,2I,EAAA,uH,EAAA,gI,EAAA,sJ;AAAA,O;;;cAA1BA,0B;AAA0B,+C;AAAA;AAAA;;;sEAkB1B,8D,EAAO,I;;sEACP,wE,EAAY,I;;;;;;;;;;;;;;;;;;AC7CzB;;AAAsB;;AAA0B;;AAAgD;;AAAQ;;AACxG;;AACE;;AACF;;AACA;;AACE;;AAAwB;AAAA,qBAAS,IAAA9rB,MAAA,EAAT;AAAiB,aAAjB;;AACtB;;AAAU;;AAAU;;AACtB;;AACA;;AACE;;AACF;;AACF;;AAEA;;AACE;;AACE;;AACE;;AACE;;AACE;;AACE;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AAEF;;AACF;;AACF;;AACF;;AACA;;AACE;;AAAU;;AAAS;;AACrB;;AACA;;AACE;;AACE;;AAAoC;;AAAM;;AAC1C;;AAIE;AAAA,qBAAU,IAAAC,YAAA,QAAV;AAA8B,aAA9B;;AAJF;;AAMF;;AACA;;AAAQ;AAAA,qBAAS,IAAA+rB,qBAAA,EAAT;AAAgC,aAAhC;;AACN;;AAAM;;AAAQ;;AAChB;;AACF;;AACF;;AACE;;AACE;;AACE;;AACE;;AACE;;AACE;;AAAW;;AAAS;;AACpB;;AAAsC;AAAA;AAAA;;AAEpC;;AAAsB;;AAAM;;AAC5B;;AAGF;;AACF;;AACF;;AACA;;AACE;;AACE;;AAAW;;AAAM;;AACjB;;AAA2B;AAAA;;AAAA;;AAAA,qBAAS,IAAA7rB,QAAA,mBAAT;AAAwC,aAAxC;;AAA3B;;AAEA;;AAAoB;;AAAM;;AAC5B;;AACF;;AACF;;AAIA;;AACC;;AAA0D;AAAA,qBAAS,IAAAgC,MAAA,EAAT;AAAiB,aAAjB;;AAAoB;;AAC9E;;AACF;;AAGD;;AACA;;AACA;;AACE;;AAA4D;AAAA,qBAAiB,IAAA9B,kBAAA,QAAjB;AAA2C,aAA3C;;AAC1D;;AACE;;AAGA;;AACF;;AAEA;;AACE;;AAEA;;AACF;;AAEA;;AACE;;AAGA;;AACF;;AACA;;AACE;;AAEA;;AACF;;AACA;;AACE;;AAGA;;AACF;;AACA;;AACE;;AACA;;AAQF;;AAEA;;AACA;;AACF;;AACA;;AACF;;AACF;;AACF;;;;;;;;;;AApIgB;;AAAA;;AA6BU;;AAAA;;AAwBwB;;AAAA;;AAGL;;AAAA;;AAcjC;;AAAA;;AAaoB;;AAAA;;AA2CP;;AAAA;;AACa;;AAAA;;AAEH;;AAAA;;;;;;qBD3GrB;;;;;;wEAEDyrB,0B,EAA0B;gBANtC,uDAMsC;iBAN5B;AACTlwB,oBAAQ,EAAE,wBADD;AAETC,uBAAW,EAAE,qCAFJ;AAGTC,qBAAS,EAAE,CAAC,qCAAD,CAHF;AAITqT,sBAAU,EAAE;AAJH,W;AAM4B,U;;;;;;;;;;;;;;;AAEb7O,mBAAS,EAAE,CAAF;kBAAhC,uDAAgC;mBAAtB,W;AAAsB,WAAE,C;AAgBftD,cAAI,EAAE,CAAF;kBAAvB,uDAAuB;mBAAb,8D;AAAa,WAAE,C;AACDD,mBAAS,EAAE,CAAF;kBAAjC,uDAAiC;mBAAvB,wE;AAAuB,WAAE;;;;;;;;;;;;;;;;;;;AE7CtC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACwBY;;AAAoB;;AAA2B;;;;;;AAC/C;;AAAmB;;AAA4B;;;;;;AAQ5B;;AACG;;AACF;;;;;;AAF0E;;AACxE;;AAAA;;;;;;AAGA;;AACG;;AACH;;;;;;AASJ;;AACE;;AACF;;;;;;AAFqE;;AACnE;;AAAA;;;;;;AAGL;;AACK;;AACJ;;;;;;AASA;;AACE;;AACF;;;;;;AAF2E;;AACzE;;AAAA;;;;;;AAGF;;AACI;;AACJ;;;;;;AAcA;;AACI;;AACJ;;;;;;;;AAWV;;AAGE;AAAA;;AAAA;;AAAA;AAAA;;AAGA;;AACF;;;;;;AAHE;;;;;;;;AAMH;;AACoE;AAAA;;AAAA;;AAAA;AAAA;;AACjE;;AACF;;;;;;AAFD;;;;;;;;AAKG;;AAAuE;AAAA;;AAAA;;AAAA,wCAAsB,MAAtB;AAA4B,WAA5B;;AACrE;;AACF;;;;;;AAHF;;AACE;;AAGF;;;;;;AAHW;;AAAA;;;;;;;;AAKT;;AAAuE;AAAA;;AAAA;;AAAA,wCAAsB,OAAtB;AAA6B,WAA7B;;AACrE;;AACF;;;;;;AAHF;;AACE;;AAGF;;;;;;AAHW;;AAAA;;;;;;;;AAKT;;AAAuE;AAAA;;AAAA;;AAAA,wCAAsB,MAAtB;AAA4B,WAA5B;;AACrE;;AACF;;;;;;AAHF;;AACE;;AAGF;;;;;;AAHW;;AAAA;;;;;;AAsB3B;;;;UDlIWkvB,kB;AAcX,oCAAoBzf,WAApB,EAAqD7S,UAArD,EACUqC,MADV,EACgCG,KADhC,EAC4DqG,KAD5D,EAEUD,WAFV,EAEgDlG,EAFhD,EAIUiG,GAJV,EAIkC;AAAA;;AAJd,eAAAkK,WAAA,GAAAA,WAAA;AAAiC,eAAA7S,UAAA,GAAAA,UAAA;AAC3C,eAAAqC,MAAA,GAAAA,MAAA;AAAsB,eAAAG,KAAA,GAAAA,KAAA;AAA4B,eAAAqG,KAAA,GAAAA,KAAA;AAClD,eAAAD,WAAA,GAAAA,WAAA;AAAsC,eAAAlG,EAAA,GAAAA,EAAA;AAEtC,eAAAiG,GAAA,GAAAA,GAAA;AAjBV,eAAA4pB,WAAA,GAAqB,CAAC,UAAD,EAAY,QAAZ,EAAqB,SAArB,EAA+B,SAA/B,EAAyC,SAAzC,CAArB;AACA,eAAA7T,aAAA,GAAuB,CAAC,UAAD,EAAY,QAAZ,EAAqB,SAArB,EAA+B,SAA/B,EAAyC,SAAzC,CAAvB;AACA,eAAA8T,aAAA,GAAuB,CAAC,SAAD,EAAW,SAAX,EAAqB,SAArB,EAA+B,QAA/B,EAAwC,OAAxC,CAAvB;AACA,eAAAryB,UAAA,GAAoB,EAApB;AAEA,eAAAoI,MAAA,GAAkB,KAAlB;AACA,eAAAiI,UAAA,GAAsB,IAAtB;AAIA,eAAAxE,WAAA,GAAwB,KAAxB;AACA,eAAA0E,IAAA,GAAO,KAAP;AAMoC,eAAK+hB,iBAAL,GAAyB,KAAK5f,WAAL,CAAiBhS,KAAjB,CAAuB;AAChFV,sBAAU,EAAE,CAAE,EAAF,EAAK,CAAC,0DAAWY,QAAZ,CAAL,CADoE;AAEhF2xB,2BAAe,EAAE,CAAC,EAAD,EAAI,CAAC,0DAAW3xB,QAAZ,CAAJ,CAF+D;AAGhFX,oBAAQ,EAAE,CAAC,EAAD,EAAI,CAAC,0DAAWW,QAAZ,CAAJ,CAHsE;AAIhF+X,gBAAI,EAAC,CAAC,EAAD,CAJ2E;AAKhFvY,cAAE,EAAE,CAAE,EAAF,CAL4E;AAOhFwG,sBAAU,EAAE,CAAC,EAAD,EAAI,CAAC,0DAAWhG,QAAZ,CAAJ;AAPoE,WAAvB,CAAzB;AAS/B;;;;iBAEL,oBAAQ;AAAA;;AACN;AACA;AACA,iBAAK8H,KAAL,CAAWE,aAAX,CAAyBvF,SAAzB,CAAmC,UAACwF,MAAD,EAAiB;AAClD,kBAAGA,MAAM,CAACC,GAAP,CAAW,IAAX,CAAH,EAAoB;AAClB,wBAAI,CAACV,MAAL,GAAc,IAAd;AACA,wBAAI,CAAChI,EAAL,GAAUyI,MAAM,CAACC,GAAP,CAAW,IAAX,CAAV;;AACA,wBAAI,CAACjJ,UAAL,CAAgBinB,qBAAhB,CAAsCje,MAAM,CAACC,GAAP,CAAW,IAAX,CAAtC,EAAwDzF,SAAxD,CAAkE,UAACyE,IAAD,EAAS;AACxE,0BAAI,CAACzH,aAAL,CAAmByH,IAAnB;;AACA,0BAAI,CAACwE,SAAL,GAAiBxE,IAAjB;AACD,0BAAI,CAAC+D,WAAL,GAAmB,IAAnB;;AACA,0BAAI,CAACpD,WAAL,CAAiBQ,eAAjB,CAAiC,QAAI,CAACqD,SAAtC;;AACA3H,yBAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8B,QAAI,CAAC0H,SAAnC;AACD,iBAND;AAOD,eAVD,MAWI;AACF,wBAAI,CAACjM,aAAL,CAAmB,EAAnB;AACD;AACF,aAfD;AAiBA,iBAAKyC,YAAL,GAAoB,KAAKP,EAAL,CAAQQ,OAAR,CAAgB,YAAhB,EAA8BoG,QAAlD;AACD;;;iBACD,yBAAgB;AAAA;;AACd,iBAAKtJ,UAAL,CAAgBgI,aAAhB,GAAgCxE,SAAhC,CAA0C,UAACyE,IAAD,EAAU;AAClD,sBAAI,CAAC9H,UAAL,GAAkB8H,IAAlB;AACD,aAFD;AAGD;;;iBACD,kBAAM;AACL,iBAAK5F,MAAL,CAAYwD,QAAZ,CAAqB,CAAC,yCAAD,CAArB;AACA;;;iBAED,sBAAa4E,SAAb,EAAwB;AAAA;;AACtB,gBAAInK,OAAO,GAAQ,EAAnB;AACAA,mBAAO,CAACC,EAAR,GAAa,KAAKA,EAAlB;AACAD,mBAAO,CAACmK,SAAR,GAAoBA,SAApB;AACAnK,mBAAO,CAAC2C,YAAR,GAAuB,KAAKA,YAA5B;AACA,iBAAKjD,UAAL,CAAgB6nB,4BAAhB,CAA6CvnB,OAA7C,EAAsDkD,SAAtD,CAAgE,UAAC3D,IAAD,EAAU;AACxE,sBAAI,CAAC4M,SAAL,GAAiB5M,IAAjB;;AACA,sBAAI,CAAC+I,WAAL,CAAiBQ,eAAjB,CAAiC,QAAI,CAACqD,SAAtC;;AACA,sBAAI,CAACT,WAAL,GAAmB,IAAnB;;AACA,sBAAI,CAACpD,WAAL,CAAiBS,cAAjB;;AACA,kBAAIpD,OAAO,GAAG,EAAd;;AACA,sBAAQwE,SAAR;AACE,qBAAK,MAAL;AACExE,yBAAO,GAAG,QAAV;AACA;;AACF,qBAAK,OAAL;AACEA,yBAAO,GAAG,QAAV;AACA;;AACF,qBAAK,MAAL;AACEA,yBAAO,GAAG,YAAV;AACA;;AACF;AACE;AAXJ;;AAaA,sBAAI,CAACzD,KAAL,CAAWc,IAAX,kBAA0B2C,OAA1B,oBAAkD,IAAlD,EAAwD;AACtDT,wBAAQ,EAAE,IAD4C;AAEtDC,gCAAgB,EAAE,KAFoC;AAGtDC,kCAAkB,EAAE;AAHkC,eAAxD;AAKD,aAxBD;AAyBD;;;iBAED,uBAAc/E,IAAd,EAAoB;AAElB,iBAAK8xB,iBAAL,GAAyB,KAAK5f,WAAL,CAAiBhS,KAAjB,CAAuB;AAC9CV,wBAAU,EAAE,CAACQ,IAAI,CAACR,UAAL,IAAmB,EAApB,EAAuB,CAAC,0DAAWY,QAAZ,CAAvB,CADkC;AAE9C2xB,6BAAe,EAAE,CAAC/xB,IAAI,CAAC+xB,eAAL,IAAuB,EAAxB,EAA2B,CAAC,0DAAW3xB,QAAZ,CAA3B,CAF6B;AAG9CX,sBAAQ,EAAE,CAACO,IAAI,CAACP,QAAL,IAAgB,EAAjB,EAAoB,CAAC,0DAAWW,QAAZ,CAApB,CAHoC;AAI9C+X,kBAAI,EAAC,CAAC,EAAD,CAJyC;AAK9CvY,gBAAE,EAAE,CAAEI,IAAI,CAACJ,EAAL,IAAU,EAAZ,CAL0C;AAO9CwG,wBAAU,EAAE,CAAEpG,IAAI,CAACoG,UAAL,IAAkB,EAApB,EAAuB,CAAC,0DAAWhG,QAAZ,CAAvB;AAPkC,aAAvB,CAAzB;AAUD;;;iBACD,kBAAM;AAAA;;AAEJ,gBAAI4xB,GAAG,GAAG,IAAI1xB,IAAJ,EAAV;AACA0xB,eAAG,GAAC,KAAKF,iBAAL,CAAuBpxB,KAAvB,CAA6BqxB,eAAjC;AACA,gBAAIE,kBAAkB,GAAG,mCAAM,CAACD,GAAD,CAAN,CAAYve,MAAZ,CAAmB,qBAAnB,CAAzB;AACAtP,mBAAO,CAACC,GAAR,CAAY,KAAK0tB,iBAAL,CAAuBpxB,KAAnC;AACAyD,mBAAO,CAACC,GAAR,CAAY6tB,kBAAZ;AACD,gBAAIC,aAAa,GAACD,kBAAkB,CAACE,KAAnB,CAAyB,CAAzB,EAA2B,CAA3B,CAAlB;AACA,gBAAIC,YAAY,GAACH,kBAAkB,CAACE,KAAnB,CAAyB,CAAzB,EAA2B,CAA3B,CAAjB;AACA,gBAAIE,UAAU,GAAEpB,QAAQ,CAACmB,YAAD,CAAxB;AACA,gBAAIE,eAAe,GAACL,kBAAkB,CAACE,KAAnB,CAAyB,CAAzB,EAA2B,EAA3B,CAApB;AACA,gBAAII,aAAa,GAAEtB,QAAQ,CAACqB,eAAD,CAA3B;AAEC,gBAAI3yB,OAAO,GAAC,CAAC;AACXyG,wBAAU,EAAE,KAAK0rB,iBAAL,CAAuBpxB,KAAvB,CAA6B0F,UAD9B;AAEX3G,sBAAQ,EAAE,KAAKqyB,iBAAL,CAAuBpxB,KAAvB,CAA6BjB,QAF5B;AAGXD,wBAAU,EAAE,KAAKsyB,iBAAL,CAAuBpxB,KAAvB,CAA6BlB,UAH9B;AAIXuyB,6BAAe,EAAC,KAAKD,iBAAL,CAAuBpxB,KAAvB,CAA6BqxB,eAJlC;AAKX/e,0BAAY,EAACkf,aALF;AAMXtyB,gBAAE,EAAC,KAAKkyB,iBAAL,CAAuBpxB,KAAvB,CAA6Bd,EANrB;AAOX4yB,2BAAa,EAACH,UAPH;AAQX3e,0BAAY,EAACue;AARF,aAAD,CAAZ;AAYF,iBAAK5yB,UAAL,CAAgB+H,0BAAhB,CAA2CzH,OAA3C,EAAmD,KAAnD,EAA0DkD,SAA1D,CAAoE,UAAA+B,QAAQ,EAAI;AAC9E,kBAAGA,QAAQ,IAAI,IAAf,EAAoB;AAClB,wBAAI,CAAC/C,KAAL,CAAWc,IAAX,mBAAkC,IAAlC,EAAwC;AACtCkC,0BAAQ,EAAE,IAD4B;AAEtCC,kCAAgB,EAAE,KAFoB;AAGtCC,oCAAkB,EAAE;AAHkB,iBAAxC;;AAKA,wBAAI,CAACiD,GAAL,CAAS4B,YAAT;AACD;;AACD,sBAAI,CAAClI,MAAL,CAAYwD,QAAZ,CAAqB,CAAC,yCAAD,CAArB;AACD,aAVD;AAcC;;;iBACD,sBAAa3B,KAAb,EAAmB+jB,OAAnB,EAA0B;AACxB,mBAAOA,OAAO,CAAClhB,UAAf;AACD;;;iBACD,oBAAW7C,KAAX,EAAiBkT,KAAjB,EAAsB;AACpB,mBAAOA,KAAK,CAAChX,QAAb;AACD;;;iBACD,sBAAa8D,KAAb,EAAmB2H,MAAnB,EAAyB;AACvB,mBAAOA,MAAM,CAAC1L,UAAd;AACD;;;;;;;yBAzJUmyB,kB,EAAkB,2H,EAAA,2I,EAAA,uH,EAAA,wI,EAAA,+H,EAAA,6I,EAAA,0J,EAAA,gI;AAAA,O;;;cAAlBA,kB;AAAkB,uC;AAAA,iB;AAAA,gB;AAAA,y6C;AAAA;AAAA;ACd/B;;AACI;;AAAwB;AAAA,qBAAS,IAAAjsB,MAAA,EAAT;AAAiB,aAAjB;;AACpB;;AAAU;;AAAU;;AACxB;;AAgBJ;;AAEA;;AACI;;AACI;;AACI;;AACA;;AAEI;;AACI;;AACI;;AAAW;;AAAa;;AACxB;;AACI;;AAEG;;AAGF;;AACK;;AAGV;;AACJ;;AAEA;;AACI;;AAAW;;AAAW;;AACtB;;AACI;;AAEE;;AAGF;;AACD;;AAGH;;AACJ;;AAEA;;AACI;;AAAW;;AAAW;;AACtB;;AACI;;AAEA;;AAGA;;AACA;;AAGJ;;AAEJ;;AAEJ;;AACA;;AAEI;;AACI;;AAAW;;AAAS;;AACpB;;AACI;;AACA;;AACA;;AACA;;AAGJ;;AAEJ;;AACJ;;AAKJ;;AACI;;AACE;;AAUD;;AAKC;;AAKA;;AAKA;;AAMA;;AAIE;AAAA,qBAAS,IAAAA,MAAA,EAAT;AAAiB,aAAjB;;AAEA;;AACF;;AACF;;AACF;;AACN;;AAGJ;;AACJ;;AAEA;;AACE;;AACF;;;;;;AA1Hc;;AAAA;;AACG;;AAAA;;AACA;;AAAA;;AAQiD;;AAAA,mGAAkB,cAAlB,EAAkB,gBAAlB;;AAIpB;;AAAA;;AAWiB;;AAAA,iGAAgB,cAAhB,EAAgB,cAAhB;;AAIxB;;AAAA;;AAWwB;;AAAA,mGAAkB,cAAlB,EAAkB,gBAAlB;;AAIvB;;AAAA;;AAaI;;AAAA;;AACiB;;AAAA;;AAErB;;AAAA;;AAab;;AAAA;;AAUD;;AAAA;;AAKF;;AAAA;;AAKA;;AAAA;;AAKA;;AAAA;;AAuBN;;AAAA;;;;;;;;;wEDlILisB,kB,EAAkB;gBAL9B,uDAK8B;iBALpB;AACTrwB,oBAAQ,EAAE,gBADD;AAETC,uBAAW,EAAE,6BAFJ;AAGTC,qBAAS,EAAE,CAAC,6BAAD;AAHF,W;AAKoB,U;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEd/B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACUQ;;AAEA;;AACJ;;;;;;AAWI;;AAEA;;AACJ;;;;;;AAWI;;AAEA;;AACJ;;;;UD/BSixB,kC;AAGX,oDACkCvzB,IADlC,EAESC,SAFT,EAGUC,EAHV,EAGkC0W,GAHlC,EAGiD;AAAA;;AAFf,eAAA5W,IAAA,GAAAA,IAAA;AACzB,eAAAC,SAAA,GAAAA,SAAA;AACC,eAAAC,EAAA,GAAAA,EAAA;AAAwB,eAAA0W,GAAA,GAAAA,GAAA;AAGhC;;;;iBAIF,oBAAW;AACT,iBAAKjW,aAAL,CAAmB,KAAKX,IAAL,CAAUS,OAA7B;AACA,gBAAIA,OAAO,GAAG,EAAd;AAED;;;iBACD,uBAAcK,IAAd,EAAoB;AAClB,iBAAKC,QAAL,GAAgB,KAAKb,EAAL,CAAQc,KAAR,CAAc;AAC5B8tB,iCAAmB,EAAE,CAAChuB,IAAI,CAACguB,mBAAL,IAA4B,EAA7B,EAAiC,0DAAW5tB,QAA5C,CADO;AAE5BsyB,iCAAmB,EAAE,CAAC1yB,IAAI,CAAC0yB,mBAAL,IAA4B,EAA7B,EAAiC,0DAAWtyB,QAA5C,CAFO;AAG5BuyB,wCAA0B,EAAE,CAAC3yB,IAAI,CAAC2yB,0BAAL,IAAmC,EAApC,EAAwC,0DAAWvyB,QAAnD,CAHA;AAI5B8tB,+BAAiB,EAAE,CAACluB,IAAI,CAACkuB,iBAAL,IAA0B,IAA3B;AAJS,aAAd,CAAhB;AAMD;;;iBAED,kBAAS;AACP,iBAAK/uB,SAAL,CAAewB,KAAf,CAAqB,KAAKV,QAAL,CAAcS,KAAnC;AACD;;;;;;;yBA7BU+xB,kC,EAAkC,gEAInC,wEAJmC,C,EAIpB,sI,EAAA,2H,EAAA,2I;AAAA,O;;;cAJdA,kC;AAAkC,yD;AAAA,iB;AAAA,gB;AAAA,yrB;AAAA;AAAA;ACV/C;;AAAmB;;AAAc;;AAC/B;;AAA6B;AAAA,qBAAY,IAAArxB,MAAA,EAAZ;AAAoB,aAApB;;AAC7B;;AACE;;AACE;;AACE;;AAKA;;AAIF;;AACF;;AAEA;;AACE;;AACE;;AAKA;;AAIF;;AACF;;AAEA;;AACE;;AACE;;AAKA;;AAIF;;AACF;;AAMA;;AACE;;AAA2F;;AAAW;;AACtG;;AACA;;AAA8C;AAAA,qBAAS,IAAAjC,SAAA,OAAgB,KAAhB,CAAT;AAA+B,aAA/B;;AAAiC;;AAAM;;AACvF;;AACF;;AACA;;;;AAvDiB;;AAAA;;AACX;;AAAA;;AAOA;;AAAA;;AAGC;;AAAA;;AAWD;;AAAA;;AAGC;;AAAA;;AAWD;;AAAA;;AAGC;;AAAA;;AAWuC;;AAAA;;AAAiD;;AAAA;;;;;;;;;wEDxCpFszB,kC,EAAkC;gBAL9C,uDAK8C;iBALpC;AACTnxB,oBAAQ,EAAE,kCADD;AAETC,uBAAW,EAAE,+CAFJ;AAGTC,qBAAS,EAAE,CAAC,+CAAD;AAHF,W;AAKoC,U;;;;oBAI1C,oD;qBAAO,wE;;;;;;;;;;;;;;;;;;;;;;;;;;;AEdZ;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACA6G;;AACzF;;AAAG;;;;;;AAAQ;;AAAqB;;AAAI;;;;;;AAKxD;;AAAqC;;AAA6B;;;;;;AAClE;;AAAoC;;AAA8B;;;;;;AAe1C;;AAEG;;AACH;;;;;;AAcJ;;AACoB;;AACpB;;;;;;AAF0C;;;;;;AAK1C;;AACmB;;AACnB;;;;;;AAF0C;;;;;;;;AAK1C;;AACI;AAAA;;AAAA;;AAAA;AAAA;;AACA;;AACJ;;;;;;;;AAGA;;AACI;AAAA;;AAAA;;AAAA,wCAAsB,MAAtB;AAA4B,WAA5B;;AACA;;AACJ;;;;;;AAJJ;;AACI;;AAGS;;AACb;;;;;;AALoE;;AACvD;;AAAA;;;;;;;;AAOT;;AACI;AAAA;;AAAA;;AAAA,wCAAsB,MAAtB;AAA4B,WAA5B;;AACA;;AACJ;;;;;;AALJ;;AAEI;;AAGS;;AACb;;;;;;AALI;;AACS;;AAAA;;;;;;;;AAOT;;AACI;AAAA;;AAAA;;AAAA,wCAAsB,OAAtB;AAA6B,WAA7B;;AACA;;AACJ;;;;;;AALJ;;AAEI;;AAGS;;AACb;;;;;;AALI;;AACS;;AAAA;;;;;;;;AAMT;;AACI;AAAA;;AAAA;;AAAA,wCAAsB,QAAtB;AAA8B,WAA9B;;AACA;;AACJ;;;;;;AAJJ;;AACI;;AAGU;;AACd;;;;;;AAL4C;;AAC/B;;AAAA;;;;;;AAgB7B;;;;UDrEaoxB,oC;AAiBX,sDACUlxB,MADV,EAEUG,KAFV,EAGUzC,EAHV,EAIU0W,GAJV,EAKU5N,KALV,EAMUF,GANV,EAOUC,WAPV,EAQUlG,EARV,EASU1C,UATV,EASgC;AAAA;;AARtB,eAAAqC,MAAA,GAAAA,MAAA;AACA,eAAAG,KAAA,GAAAA,KAAA;AACA,eAAAzC,EAAA,GAAAA,EAAA;AACA,eAAA0W,GAAA,GAAAA,GAAA;AACA,eAAA5N,KAAA,GAAAA,KAAA;AACA,eAAAF,GAAA,GAAAA,GAAA;AACA,eAAAC,WAAA,GAAAA,WAAA;AACA,eAAAlG,EAAA,GAAAA,EAAA;AACA,eAAA1C,UAAA,GAAAA,UAAA;AArBV,eAAAwQ,UAAA,GAAsB,IAAtB;AACA,eAAAjI,MAAA,GAAkB,KAAlB;AACA,eAAAkI,MAAA,GAAkB,IAAlB;AACA,eAAAC,IAAA,GAAO,KAAP;AACA,eAAAC,OAAA,GAAmB,KAAnB;AAGA,eAAA3E,WAAA,GAAuB,KAAvB;AACA,eAAAlD,WAAA,GAAuB,IAAvB;AAcI;;;;iBAEJ,oBAAW;AAAA;;AACT,iBAAKtI,aAAL,CAAmB,EAAnB;AAEA,iBAAKqI,KAAL,CAAWE,aAAX,CAAyBvF,SAAzB,CAAmC,UAACwF,MAAD,EAAiB;AAClD,sBAAI,CAAC0N,YAAL,GAAoB1N,MAAM,CAACC,GAAP,CAAW,QAAX,CAApB;;AACA,kBAAID,MAAM,CAACC,GAAP,CAAW,QAAX,KAAwB,KAA5B,EAAmC;AACjC,wBAAI,CAACuH,UAAL,GAAkB,KAAlB;AACA,wBAAI,CAACC,MAAL,GAAc,IAAd;AACA,wBAAI,CAACE,OAAL,GAAe,IAAf;AACD,eAJD,MAIO,IAAI3H,MAAM,CAACC,GAAP,CAAW,QAAX,KAAwB,IAA5B,EAAkC;AACvC,wBAAI,CAACuH,UAAL,GAAkB,IAAlB;AACA,wBAAI,CAACC,MAAL,GAAc,IAAd;AACA,wBAAI,CAACE,OAAL,GAAe,KAAf;AACD,eAJM,MAIA,IAAI3H,MAAM,CAACC,GAAP,CAAW,QAAX,KAAwB,OAA5B,EAAqC;AAC1C,wBAAI,CAACuH,UAAL,GAAkB,KAAlB;AACA,wBAAI,CAACC,MAAL,GAAc,KAAd;AACA,wBAAI,CAACE,OAAL,GAAe,KAAf;AACD,eAJM,MAIA,IAAI3H,MAAM,CAACC,GAAP,CAAW,QAAX,KAAwB,IAA5B,EAAkC;AACvC,wBAAI,CAACwH,MAAL,GAAc,KAAd;AACD;;AACD,kBAAIzH,MAAM,CAACC,GAAP,CAAW,IAAX,CAAJ,EAAsB;AACpB,wBAAI,CAACV,MAAL,GAAc,IAAd;AACA,wBAAI,CAAChI,EAAL,GAAUyI,MAAM,CAACC,GAAP,CAAW,IAAX,CAAV;;AACA,wBAAI,CAACwN,GAAL,CAAS7F,cAAT,CAAwB5H,MAAM,CAACC,GAAP,CAAW,IAAX,CAAxB,EAA0CzF,SAA1C,CAAoD,UAACyE,IAAD,EAAU;AAC5D,0BAAI,CAACzH,aAAL,CAAmByH,IAAnB;AACD,iBAFD;;AAGA,wBAAI,CAACwO,GAAL,CACG+c,6BADH,CACiCxqB,MAAM,CAACC,GAAP,CAAW,IAAX,CADjC,EAEGzF,SAFH,CAEa,UAACyE,IAAD,EAAe;AACxB,0BAAI,CAACzH,aAAL,CAAmByH,IAAnB;;AACA,sBAAIA,IAAI,CAACtE,UAAL,IAAmB,GAAvB,EAA4B;AAC1BsE,wBAAI,CAAC+B,QAAL,GAAgB,EAAhB;AACA/B,wBAAI,CAAC8B,MAAL,GAAc,EAAd;AACD;;AACD,0BAAI,CAAC0C,SAAL,GAAiBxE,IAAjB;AACA,0BAAI,CAAC+D,WAAL,GAAmB,IAAnB;;AACA,0BAAI,CAACpD,WAAL,CAAiBQ,eAAjB,CAAiC,QAAI,CAACqD,SAAtC;AACD,iBAXH;AAYD,eAlBD,MAkBO;AACL,wBAAI,CAAC3D,WAAL,GAAmB,KAAnB;;AACA,wBAAI,CAACtI,aAAL,CAAmB,EAAnB;AACD;AACF,aAvCD;AAyCA,iBAAKyC,YAAL,GAAoB,KAAKP,EAAL,CAAQQ,OAAR,CAAgB,YAAhB,EAA8BoG,QAAlD;AACD;;;iBAED,uBAAc3I,IAAd,EAAoB;AAClB,iBAAKC,QAAL,GAAgB,KAAKb,EAAL,CAAQc,KAAR,CAAc;AAC5BN,gBAAE,EAAE,CAACI,IAAI,CAACJ,EAAL,IAAW,EAAZ,CADwB;AAE5BoD,wBAAU,EAAE,CAAChD,IAAI,CAACgD,UAAL,IAAmB,EAApB,CAFgB;AAG5BkT,iCAAmB,EAAE,CACnBlW,IAAI,CAACkW,mBAAL,IAA4B,EADT,EAEnB,CAAC,0DAAW9V,QAAZ,CAFmB,CAHO;AAO5B0yB,4BAAc,EAAE,CAAC9yB,IAAI,CAAC8yB,cAAL,IAAuB,EAAxB,EAA4B,CAAC,0DAAW1yB,QAAZ,CAA5B,CAPY;AAQ5BgW,sBAAQ,EAAE,CAACpW,IAAI,CAACoW,QAAL,IAAiB,IAAlB,CARkB;AAS5B1M,yBAAW,EAAE,CAAC1J,IAAI,CAAC0J,WAAL,IAAoB,EAArB,CATe;AAU5BzG,0BAAY,EAAE,CAACjD,IAAI,CAACiD,YAAL,IAAqB,EAAtB,CAVc;AAW5B0G,qBAAO,EAAE,CAAC3J,IAAI,CAAC2J,OAAL,IAAgB,EAAjB,CAXmB;AAY5BJ,yBAAW,EAAE,CAACvJ,IAAI,CAACuJ,WAAL,IAAoB,EAArB,CAZe;AAa5BJ,8BAAgB,EAAE,CAACnJ,IAAI,CAACmJ,gBAAL,IAAyB,EAA1B,CAbU;AAc5BC,oBAAM,EAAE,CAACpJ,IAAI,CAACoJ,MAAL,IAAe,EAAhB,CAdoB;AAe5BC,sBAAQ,EAAE,CAACrJ,IAAI,CAACqJ,QAAL,IAAiB,EAAlB,CAfkB;AAgB5BG,wBAAU,EAAE,CAACxJ,IAAI,CAACwJ,UAAL,IAAmB,EAApB,CAhBgB;AAiB5BF,uBAAS,EAAE,CAACtJ,IAAI,CAACsJ,SAAL,IAAkB,EAAnB,CAjBiB;AAkB5BG,8BAAgB,EAAE,CAACzJ,IAAI,CAACyJ,gBAAL,IAAyB,EAA1B;AAlBU,aAAd,CAAhB;AAoBD;;;iBAED,kBAAS;AACP,iBAAK/H,MAAL,CAAYwD,QAAZ,CAAqB,4CAArB;AACD;;;iBACD,sBAAa4E,SAAb,EAAwB;AAAA;;AACtB,+DAAKC,IAAL,CAAU;AACRC,kBAAI,EACF,uBACAF,SADA,GAEA,UAFA,GAGA,0BALM;AAMRG,8BAAgB,EAAE,IANV;AAORC,gCAAkB,EAAE,SAPZ;AAQRC,+BAAiB,EAAE,MARX;AASRC,8BAAgB,EAAE,IATV;AAURC,+BAAiB,EAAE,KAVX;AAWRgM,kBAAI,EAAE;AAXE,aAAV,EAYG/L,IAZH,CAYQ,UAACC,MAAD,EAAY;AAClB,kBAAIA,MAAM,CAACC,WAAP,IAAsB,IAA1B,EAAgC;AAC9B,wBAAI,CAACnL,UAAL,CAAgB0zB,4BAAhB,CAA6C,QAAI,CAACjnB,SAAL,CAAelM,EAA5D,EAAgEiD,SAAhE,CACE,UAAC3D,IAAD,EAAU;AACR,0BAAI,CAACwC,MAAL,CAAYwD,QAAZ,CAAqB,4CAArB;AACD,iBAHH,EAIE,UAACuC,GAAD,EAAS;AACP,sBAAIA,GAAG,CAACC,MAAJ,IAAc,GAAlB,EAAuB;AACrB,4BAAI,CAAC7F,KAAL,CAAWc,IAAX,CAAgB,6BAAhB,EAA+C,IAA/C,EAAqD;AACnDkC,8BAAQ,EAAE,IADyC;AAEnDC,sCAAgB,EAAE,KAFiC;AAGnDC,wCAAkB,EAAE;AAH+B,qBAArD;AAKD;;AACD,0BAAI,CAACrD,MAAL,CAAYwD,QAAZ,CAAqB,4CAArB;AACD,iBAbH;AAeD;AACF,aA9BD;AA+BD;;;iBACD,sBAAa;AACX,iBAAKiD,WAAL,GAAmB,KAAnB;AACD;;;iBAED,sBAAa2B,SAAb,EAAwB;AAAA;;AACtB,+DAAKC,IAAL,CAAU;AACRC,kBAAI,EACF,uBACAF,SADA,GAEA,UAFA,GAGA,0BALM;AAMRG,8BAAgB,EAAE,IANV;AAORC,gCAAkB,EAAE,SAPZ;AAQRC,+BAAiB,EAAE,MARX;AASRC,8BAAgB,EAAE,IATV;AAURC,+BAAiB,EAAE,KAVX;AAWRgM,kBAAI,EAAE;AAXE,aAAV,EAYG/L,IAZH,CAYQ,UAACC,MAAD,EAAY;AAClB,kBAAIA,MAAM,CAACC,WAAP,IAAsB,IAA1B,EAAgC;AAC9B,oBAAI7K,OAAO,GAAQ,EAAnB;AACAA,uBAAO,CAACC,EAAR,GAAa,QAAI,CAACA,EAAlB;AACAD,uBAAO,CAACmK,SAAR,GAAoBA,SAApB;AACAnK,uBAAO,CAAC2C,YAAR,GAAuB,QAAI,CAACA,YAA5B;;AACA,wBAAI,CAACjD,UAAL,CACGkX,8BADH,CACkC5W,OADlC,EAEGkD,SAFH,CAEa,UAAC3D,IAAD,EAAU;AACnB,sBAAIA,IAAI,CAAC8D,UAAL,IAAmB,GAAvB,EAA4B;AAC1B9D,wBAAI,CAACmK,QAAL,GAAgB,EAAhB;AACAnK,wBAAI,CAACkK,MAAL,GAAc,EAAd;AACD;;AAED,0BAAI,CAAC0C,SAAL,GAAiB5M,IAAjB;;AACA,0BAAI,CAAC+I,WAAL,CAAiBQ,eAAjB,CAAiC,QAAI,CAACqD,SAAtC;;AACA,0BAAI,CAACT,WAAL,GAAmB,IAAnB;;AACA,0BAAI,CAACpD,WAAL,CAAiBS,cAAjB;;AACA,sBAAIpD,OAAO,GAAG,EAAd;;AACA,0BAAQwE,SAAR;AACE,yBAAK,MAAL;AACExE,6BAAO,GAAG,QAAV;AACA;;AACF,yBAAK,OAAL;AACEA,6BAAO,GAAG,QAAV;AACA;;AACF,yBAAK,MAAL;AACEA,6BAAO,GAAG,YAAV;AACA;;AACF;AACE;AAXJ;;AAaA,0BAAI,CAACzD,KAAL,CAAWc,IAAX,kBAA0B2C,OAA1B,sBAAoD,IAApD,EAA0D;AACxDT,4BAAQ,EAAE,IAD8C;AAExDC,oCAAgB,EAAE,KAFsC;AAGxDC,sCAAkB,EAAE;AAHoC,mBAA1D;AAKD,iBA/BH;AAgCD;AACF,aAnDD;AAoDD;;;iBAED,kBAAS;AAAA;;AACP,gBAAI,KAAK9E,QAAL,CAAcyM,OAAlB,EAA2B;AACzB;AACD,aAFD,MAEO;AACL,mBAAKzM,QAAL,CAAcS,KAAd,CAAoB4B,YAApB,GAAmC,KAAKA,YAAxC;AACA,mBAAKwT,GAAL,CAASkd,0BAAT,CAAoC,KAAK/yB,QAAL,CAAcS,KAAlD,EAAyDmC,SAAzD,CAAmE,UAAC3D,IAAD,EAAU;AAC3E,oBAAIA,IAAI,IAAI,IAAR,IAAgB,QAAI,CAAC0I,MAAL,IAAe,IAAnC,EAAyC;AACvC,0BAAI,CAAClG,MAAL,CACGwD,QADH,CACY,4CADZ,EAEGoF,IAFH,CAEQ,UAAC0C,CAAD,EAAO;AACX,4BAAI,CAACnL,KAAL,CAAWc,IAAX,CAAgB,eAAhB,EAAiC,IAAjC,EAAuC;AACrCkC,8BAAQ,EAAE,IAD2B;AAErCC,sCAAgB,EAAE,KAFmB;AAGrCC,wCAAkB,EAAE;AAHiB,qBAAvC;AAKD,mBARH;;AASA,0BAAI,CAACiD,GAAL,CAAS4B,YAAT;AACD,iBAXD,MAWO,IAAI1K,IAAI,IAAI,IAAR,IAAgB,QAAI,CAAC0I,MAAL,IAAe,IAAnC,EAAyC;AAC9C,0BAAI,CAAClG,MAAL,CACGwD,QADH,CACY,4CADZ,EAEGoF,IAFH,CAEQ,UAAC0C,CAAD,EAAO;AACX,4BAAI,CAACnL,KAAL,CAAWc,IAAX,CAAgB,aAAhB,EAA+B,IAA/B,EAAqC;AACnCkC,8BAAQ,EAAE,IADyB;AAEnCC,sCAAgB,EAAE,KAFiB;AAGnCC,wCAAkB,EAAE;AAHe,qBAArC;AAKD,mBARH;;AASA,0BAAI,CAACiD,GAAL,CAAS4B,YAAT;AACD;AACF,eAxBD;AAyBD;AACF;;;iBAED,mBAAUhJ,KAAV,EAAsB;AACpB,gBAAMC,OAAO,GAAG,OAAhB;AACA,gBAAIC,SAAS,GAAGC,MAAM,CAACC,YAAP,CAAoBJ,KAAK,CAACK,QAA1B,CAAhB;;AACA,gBAAI,CAACJ,OAAO,CAACK,IAAR,CAAaJ,SAAb,CAAL,EAA8B;AAC5BF,mBAAK,CAACO,cAAN;AACD;AACF;;;iBACD,8BAAqBP,KAArB,EAA4B;AAC1B,gBAAI4L,GAAG,GAAGzL,MAAM,CAACC,YAAP,CAAoBJ,KAAK,CAAC6L,OAA1B,CAAV;;AACA,gBAAI,cAAcvL,IAAd,CAAmBsL,GAAnB,CAAJ,EAA6B;AAC3B,qBAAO,IAAP;AACD,aAFD,MAEO;AACL5L,mBAAK,CAACO,cAAN;AACA,qBAAO,KAAP;AACD;AACF;;;iBACD,oBAAWoC,KAAX,EAAkBkT,KAAlB,EAAyB;AACvB,mBAAOA,KAAK,CAAChX,QAAb;AACD;;;;;;;yBArPUmzB,oC,EAAoC,uH,EAAA,wI,EAAA,2H,EAAA,2I,EAAA,+H,EAAA,gI,EAAA,6I,EAAA,0J,EAAA,2I;AAAA,O;;;cAApCA,oC;AAAoC,2D;AAAA;AAAA;;;;;;;;;;;;;;;ACtBjD;;AAAsB;;AAA0B;;AAA6D;;AAC9E;;AAAiC;;AAAkB;;AAClF;;AACA;;AAAwB;AAAA,qBAAS,IAAAltB,MAAA,EAAT;AAAiB,aAAjB;;AACpB;;AAAU;;AAAU;;AACxB;;AACA;;AACA;;AACA;;AACA;;AACA;;AACI;;AAA6B;AAAA,qBAAY,IAAAtE,MAAA,EAAZ;AAAoB,aAApB;;AACzB;;AACI;;AAEI;;AAEI;;AAAW;;AAAa;;AACxB;;AACI;;AAGA;;AAIJ;;AACJ;;AACA;;AACI;;AAAW;;AAAoB;;AAC/B;;AACI;;AAEJ;;AACJ;;AACJ;;AAEA;;AACI;;AACI;;AAGJ;;AACA;;AACI;;AAGJ;;AACA;;AACI;;AAGS;;AACb;;AACA;;AAMA;;AAOA;;AAOA;;AAOA;;AAAqD;AAAA,qBAAS,IAAAsE,MAAA,EAAT;AAAiB,aAAjB;;AACjD;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACA;;AAEA;;AACA;;AACA;;AA5FA;;;;AACK;;AAAA;;AAAiC;;AAAA;;AAKjC;;AAAA;;AACA;;AAAA;;AAIK;;AAAA;;AAYmB;;AAAA;;AAQW;;AAAA;;AASf;;AAAA;;AAGJ;;AAAA;;AAEI;;AAAA;;AAGJ;;AAAA;;AACQ;;AAAA;;AAKP;;AAAA;;AAMA;;AAAA;;AAOA;;AAAA;;AAOA;;AAAA;;AAiBN;;AAAA;;;;;;;;;wEDrEHktB,oC,EAAoC;gBALhD,uDAKgD;iBALtC;AACTtxB,oBAAQ,EAAE,oCADD;AAETC,uBAAW,EAAE,iDAFJ;AAGTC,qBAAS,EAAE,CAAC,iDAAD;AAHF,W;AAKsC,U;;;;;;;;;;;;;;;;;;;;;AAExB+P,kBAAQ,EAAE,CAAF;kBAA9B,uDAA8B;mBAApB,U;AAAoB,WAAE;;;;;;;;;;;;;;;;;;;AExBnmDY;;AACE;;AACF;;;;;;AAFoF;;AAClF;;AAAA;;;;;;;;AAaR;;AACE;;AAA4C;AAAA;;AAAA;;AAAA;AAAA;;AAAwB;;AACpE;;AACF;;;;;;AAaE;;AAAoG;;AACpG;;;;;;AACA;;AAAqC;;AAA2B;;;;;;AAA3B;;AAAA;;;;;;AAIrC;;AAC+D;;AAC/D;;;;;;AACA;;AAAqC;;AAAgC;;;;;;AAAhC;;AAAA;;;;;;AAGrC;;AAAkG;;AAClG;;;;;;AACA;;AAAqC;;AAAwB;;;;;;AAAxB;;AAAA;;;;;;AAGrC;;AAAgG;;AAChG;;;;;;AACA;;AAAqC;;AAAuB;;;;;;AAAvB;;AAAA;;;;;;AAGrC;;AAAkG;;AAClG;;;;;;AACA;;AAAqC;;AAAyB;;;;;;AAAzB;;AAAA;;;;;;AAIrC;;AAAmC;;AAAM;;;;;;;;AACzC;;AACE;;AACE;;AAAgD;AAAA;;AAAA;;AAAA;;AAAA,kDAA2B,KAA3B;AAAgC,WAAhC;;AAAmC;;AAAI;;AACzF;;AAAM;;AACN;;AACE;;AAAkD;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA8B;;AAAM;;AACxF;;AACF;;;;;;AAGF;;;;;;AACA;;;;;;;;UDpGO0hB,+B;AA8BX,iDACU9sB,MADV,EAEUtE,KAFV,EAGUG,cAHV,EAIUF,MAJV,EAKUgU,GALV,EAMUpU,MANV,EAOUuG,WAPV,EAQUtG,cARV,EASUI,EATV,EAUUH,eAVV,EAU0C;AAAA;;AAThC,eAAAuE,MAAA,GAAAA,MAAA;AACA,eAAAtE,KAAA,GAAAA,KAAA;AACA,eAAAG,cAAA,GAAAA,cAAA;AACA,eAAAF,MAAA,GAAAA,MAAA;AACA,eAAAgU,GAAA,GAAAA,GAAA;AACA,eAAApU,MAAA,GAAAA,MAAA;AACA,eAAAuG,WAAA,GAAAA,WAAA;AACA,eAAAtG,cAAA,GAAAA,cAAA;AACA,eAAAI,EAAA,GAAAA,EAAA;AACA,eAAAH,eAAA,GAAAA,eAAA;AArCV,eAAAS,mBAAA,GAA8B,CAA9B;AAEA,eAAAJ,UAAA,GAAa,IAAI,0EAAJ,EAAb;AACA,eAAAC,gBAAA,GAA6B,CAC3B,gBAD2B,EAE3B,qBAF2B,EAG3B,aAH2B,EAI3B,YAJ2B,EAK3B,cAL2B,EAM3B,QAN2B,CAA7B;AASA,eAAAC,cAAA,GAAmD,CACjD;AAAEC,eAAG,EAAE,gBAAP;AAAyB1B,iBAAK,EAAE;AAAhC,WADiD,CAAnD;AA0BI;;;;iBAEJ,oBAAW;AACT,iBAAKuL,aAAL;AACA,iBAAKrD,WAAL;AACA,iBAAKrC,QAAL;AACD;;;iBACD,uBAAc;AACZ,gBAAI,KAAKC,UAAT,EAAqB;AACnB,mBAAKA,UAAL,CAAgBC,WAAhB;AACD;AACF;;;iBACD,kBAAS;AACP,iBAAK/E,MAAL,CAAYwD,QAAZ,CAAqB,kDAArB;AACD;;;iBAED,iCAAwB3B,KAAxB,EAA+BvD,IAA/B,EAAqC;AACnC,mBAAOuD,KAAP;AACD;;;iBACD,sBAAa3C,KAAb,EAAoB;AAAA;;AAClBuD,mBAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBxD,KAAK,CAACyD,IAAN,CAAW,CAAX,EAAcC,KAAd,CAAoB,CAApB,CAArB;AACA,gBAAMC,IAAI,GAAS3D,KAAK,CAACyD,IAAN,CAAW,CAAX,EAAcC,KAAd,CAAoB,CAApB,CAAnB;AACA,gBAAME,UAAU,GAAG,IAAIC,QAAJ,EAAnB;AACAD,sBAAU,CAACE,MAAX,CAAkB,YAAlB,EAAgC,yBAAhC;AACAF,sBAAU,CAACE,MAAX,CAAkB,MAAlB,EAA0BH,IAA1B;AACA,iBAAKuR,GAAL,CAASnR,cAAT,CAAwBH,UAAxB,EAAoC3B,SAApC,CAA8C,UAAC+B,QAAD,EAAc;AAC1DT,qBAAO,CAACC,GAAR,CAAYQ,QAAZ;;AACA,sBAAI,CAAC2B,QAAL;;AACA,sBAAI,CAAC1E,KAAL,CAAWc,IAAX,+BAA8C,IAA9C,EAAoD;AAClDkC,wBAAQ,EAAE,IADwC;AAElDC,gCAAgB,EAAE,KAFgC;AAGlDC,kCAAkB,EAAE;AAH8B,eAApD;AAKD,aARD;AASD;;;iBAED,oBAAW;AAAA;;AACT,iBAAK+Q,GAAL,CAASod,yBAAT,GAAqCrwB,SAArC,CAA+C,UAACyE,IAAD,EAAe;AAC5D,kBAAIA,IAAJ,EAAU;AACRnD,uBAAO,CAACC,GAAR,CAAYkD,IAAZ;;AACA,qBAAK,IAAIxE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGwE,IAAI,CAACvE,MAAzB,EAAiCD,CAAC,EAAlC,EAAsC;AACpC,sBAAIwE,IAAI,CAACxE,CAAD,CAAJ,CAAQE,UAAR,IAAsB,GAA1B,EAA+B;AAC7BsE,wBAAI,CAACxE,CAAD,CAAJ,CAAQE,UAAR,GAAqB,cAArB;AACD;;AACD,sBAAIsE,IAAI,CAACxE,CAAD,CAAJ,CAAQE,UAAR,IAAsB,GAA1B,EAA+B;AAC7BsE,wBAAI,CAACxE,CAAD,CAAJ,CAAQE,UAAR,GAAqB,YAArB;AACD;;AACD,sBAAIsE,IAAI,CAACxE,CAAD,CAAJ,CAAQG,YAAR,IAAwB,GAA5B,EAAiC;AAC/BqE,wBAAI,CAACxE,CAAD,CAAJ,CAAQG,YAAR,GAAuB,MAAvB;AACD;;AACD,sBAAIqE,IAAI,CAACxE,CAAD,CAAJ,CAAQG,YAAR,IAAwB,GAA5B,EAAiC;AAC/BqE,wBAAI,CAACxE,CAAD,CAAJ,CAAQG,YAAR,GAAuB,QAAvB;AACD;AACF;;AACD,wBAAI,CAACykB,2BAAL,GAAmCpgB,IAAnC;AACA,wBAAI,CAACZ,KAAL,GAAa,QAAI,CAACghB,2BAAlB;AACA,wBAAI,CAACzlB,UAAL,GAAkB,IAAI,0EAAJ,CAAuBqF,IAAvB,CAAlB;AACA,wBAAI,CAACjB,KAAL,GAAaiB,IAAb;AACA,wBAAI,CAACrF,UAAL,CAAgBQ,SAAhB,GAA4B,QAAI,CAACA,SAAjC;AACA,wBAAI,CAACR,UAAL,CAAgBS,IAAhB,GAAuB,QAAI,CAACA,IAA5B;AACD;AACF,aAxBD;AAyBD;;;iBACD,uBAAc;AAAA;;AACZ,iBAAKoT,GAAL,CAASlN,WAAT,GAAuB/F,SAAvB,CAAiC,UAAC2Y,OAAD,EAAkB;AACjD,sBAAI,CAAC/b,QAAL,GAAgB+b,OAAhB;AACD,aAFD;AAGD;;;iBACD,yBAAgB;AAAA;;AACd,iBAAK1F,GAAL,CAAS7J,aAAT,GAAyBpJ,SAAzB,CAAmC,UAACyE,IAAD,EAAU;AAC3C,sBAAI,CAACiE,MAAL,GAAcjE,IAAd;AACD,aAFD;AAGD;;;iBACD,kBAASnE,QAAT,EAAmBC,CAAnB,EAAsB;AACpB,iBAAKC,WAAL,CAAiBF,QAAjB;AACA,iBAAKG,WAAL,CAAiBF,CAAjB;AACD;;;iBAED,qBAAYD,QAAZ,EAAsB;AACpB,iBAAKlB,UAAL,CAAgBuB,eAAhB,GAAkC,UAACtE,IAAD,EAAYuE,MAAZ,EAAwC;;;AACxE,qBAAO,CAAP,KAAOvE,IAAI,CAACiE,QAAD,CAAJ,MAAc,IAAd,IAAc,aAAd,GAAc,MAAd,GAAc,GAAEO,iBAAF,GAAsBC,QAAtB,CAA+BF,MAA/B,CAArB;AACD,aAFD;AAGD;;;iBAED,uBAAc;AACZ,iBAAKxB,UAAL,CAAgBwB,MAAhB,GAAyB,EAAzB;AACA,iBAAKuC,SAAL,CAAec,aAAf,CAA6BpG,KAA7B,GAAqC,EAArC;AACA,iBAAK2B,mBAAL,GAA2B,CAA3B;AACD;;;iBAED,qBAAYzB,KAAZ,EAA0B;AACxB,gBAAMgD,WAAW,GAAIhD,KAAK,CAACiD,MAAN,CAAkCnD,KAAvD;AACA,iBAAKuB,UAAL,CAAgBwB,MAAhB,GAAyBG,WAAW,CAACE,IAAZ,GAAmBC,WAAnB,EAAzB;AACD;;;iBACD,4BAAmBC,SAAnB,EAAoC;AAClC,gBAAIA,SAAS,CAACC,SAAd,EAAyB;AACvB,mBAAKtC,cAAL,CAAoBuC,QAApB,kBAAuCF,SAAS,CAACC,SAAjD;AACD,aAFD,MAEO;AACL,mBAAKtC,cAAL,CAAoBuC,QAApB,CAA6B,iBAA7B;AACD;AACF;;;iBACD,qBAA0C;AAAA,gBAAhChF,IAAgC,uEAApB,EAAoB;AAAA,gBAAhB0I,MAAgB;AACxC,iBAAKlG,MAAL,CAAYwD,QAAZ,CAAqB,CAAC,gDAAD,CAArB,EAAyE;AACvEC,yBAAW,EAAE;AAAEvF,kBAAE,EAAEV,IAAI,CAACU,EAAX;AAAegI,sBAAM,EAAEA;AAAvB;AAD0D,aAAzE;AAGD;;;iBAED,qBAAY;AACV,iBAAKhG,eAAL,CAAqBoD,aAArB,CACE,kCADF,EAEE,KAAKqB,KAFP;AAID;;;iBAED,oCAA2B;AAAA;;AACzB,iBAAKyP,GAAL,CAAS+c,6BAAT,CAAuC,KAAKjzB,EAA5C,EAAgDiD,SAAhD,CAA0D,UAACyE,IAAD,EAAU;AAClE,sBAAI,CAACqgB,oBAAL,GAA4BrgB,IAA5B;AACD,aAFD;AAGA,iBAAKW,WAAL,CAAiB0T,YAAjB,CAA8B,KAAKgM,oBAAnC;AACA,iBAAKjmB,MAAL,CAAYwD,QAAZ,CAAqB,yDAC8B,KAAKtF,EADnC,EAArB;AAGD;;;iBAED,kBAAS;AACP,iBAAK8B,MAAL,CAAYwD,QAAZ,CAAqB,sBAArB;AACD;;;iBAED,oBAAWyJ,GAAX,EAAgB;AAAA;;AACd,iBAAK3M,cAAL,CACGqD,OADH,CACW;AAAEC,qBAAO,mBAAYqJ,GAAG,CAACmkB,cAAhB;AAAT,aADX,EAEGjwB,SAFH,CAEa,UAAC2C,GAAD,EAAS;AAClB,kBAAIA,GAAJ,EAAS;AACP,wBAAI,CAAC1D,MAAL,CAAYa,IAAZ;;AACA,wBAAI,CAACmT,GAAL,CAASid,4BAAT,CAAsCpkB,GAAG,CAAC/O,EAA1C,EAA8CiD,SAA9C,CACE,UAAC2C,GAAD,EAAc,CAAE,CADlB,EAEE,UAACiC,GAAD,EAAc;AACX,oBAAD;;AACA,sBAAIA,GAAG,CAACC,MAAJ,IAAc,GAAlB,EAAuB;AACrB,4BAAI,CAAC5F,MAAL,CAAYnB,KAAZ;;AACA,4BAAI,CAAC4F,QAAL;;AACA,4BAAI,CAAC1E,KAAL,CAAWc,IAAX,CAAgB,iBAAhB,EAAmC,IAAnC,EAAyC;AAAEkC,8BAAQ,EAAE;AAAZ,qBAAzC;AACD;AACF,iBATH;AAWD;AACF,aAjBH;AAkBD;;;;;;;yBA5LUouB,+B,EAA+B,mI,EAAA,wI,EAAA,sK,EAAA,mK,EAAA,2I,EAAA,uH,EAAA,6I,EAAA,iI,EAAA,0J,EAAA,sJ;AAAA,O;;;cAA/BA,+B;AAA+B,qD;AAAA;AAAA;;;sEAmB/B,+D,EAAO,I;;sEACP,yE,EAAY,I;;;;;;;;;;;;;;;;;;ACzCzB;;AAAsB;;AAA0B;;AAAkE;;AAClH;;AACA;;AACE;;AAAwB;AAAA,qBAAS,IAAAvtB,MAAA,EAAT;AAAiB,aAAjB;;AACtB;;AAAU;;AAAU;;AACtB;;AACA;;AACE;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AACE;;AACE;;AACE;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AAEF;;AACF;;AACF;;AACA;;AACA;;AACE;;AAAU;;AAAS;;AACrB;;AACA;;AACE;;AACE;;AAAoC;;AAAM;;AAC1C;;AAE0B;AAAA,qBAAU,IAAAC,YAAA,QAAV;AAA8B,aAA9B;;AAF1B;;AAGF;;AACA;;AAAQ;AAAA,qBAAS,IAAAkW,SAAA,EAAT;AAAoB,aAApB;;AACN;;AAAM;;AAAQ;;AAChB;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AACE;;AAAW;;AAAS;;AACpB;;AAAsC;AAAA;AAAA;;AAEpC;;AAAsB;;AAAM;;AAC5B;;AAGF;;AACF;;AACF;;AACA;;AACE;;AACE;;AAAW;;AAAM;;AACjB;;AAA2B;AAAA;;AAAA;;AAAA,qBAAS,IAAAhW,QAAA,mBAAT;AAAwC,aAAxC;;AAA3B;;AAEA;;AAAoB;;AAAM;;AAC5B;;AACF;;AACA;;AAIA;;AACE;;AAA0D;AAAA,qBAAS,IAAAgC,MAAA,EAAT;AAAiB,aAAjB;;AAAmB;;AAC7E;;AACF;;AAEF;;AACF;;AACA;;AACE;;AAA4D;AAAA,qBAAiB,IAAA9B,kBAAA,QAAjB;AAA2C,aAA3C;;AAG1D;;AACE;;AAEA;;AACF;;AAEA;;AACE;;AAGA;;AACF;;AACA;;AACE;;AAEA;;AACF;;AACA;;AACE;;AAEA;;AACF;;AACA;;AACE;;AAEA;;AACF;;AAEA;;AACE;;AACA;;AAQF;;AAEA;;AACA;;AACF;;AACA;;AACF;;AACF;;;;;;;;;;AAjG4B;;AAAA;;AAoBoB;;AAAA;;AAGL;;AAAA,oGAAmB,cAAnB,EAAmB,2BAAnB;;AAc/B;;AAAA;;AAYkB;;AAAA;;AA2CP;;AAAA;;AACa;;AAAA;;AAEH;;AAAA;;;;;;;;;wEDtGpBktB,+B,EAA+B;gBAL3C,uDAK2C;iBALjC;AACT3xB,oBAAQ,EAAE,8BADD;AAETC,uBAAW,EAAE,2CAFJ;AAGTC,qBAAS,EAAE,CAAC,2CAAD;AAHF,W;AAKiC,U;;;;;;;;;;;;;;;;;;;;;;;AAElBwE,mBAAS,EAAE,CAAF;kBAAhC,uDAAgC;mBAAtB,W;AAAsB,WAAE,C;AAiBftD,cAAI,EAAE,CAAF;kBAAvB,uDAAuB;mBAAb,+D;AAAa,WAAE,C;AACDD,mBAAS,EAAE,CAAF;kBAAjC,uDAAiC;mBAAvB,yE;AAAuB,WAAE;;;;;;;;;;;;;;;;;;;AEzCtC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACAwG;;AAAsB;;AAAG;;;;;;AAAO;;AAAqB;;AAAI;;;;;;AAO9J;;AACC;;AACF;;;;;;AACA;;AACE;;AACF;;;;;;AAYU;;AACE;;AACF;;;;;;AAQA;;AAEE;;AACF;;;;;;;;AAOF;;AAAwF;AAAA;;AAAA;;AAAA;AAAA;;AAAmB;;AAAI;;;;;;AAArD;;;;;;;;AAGxD;;AAA2H;AAAA;;AAAA;;AAAA;AAAA;;AACxH;;AACD;;;;;;AAFsE;;;;;;;;AAKxE;;AAAwE;AAAA;;AAAA;;AAAA;AAAA;;AACtE;;AACF;;;;;;;;AAGA;;AAAwE;AAAA;;AAAA;;AAAA,wCAAsB,MAAtB;AAA4B,WAA5B;;AACtE;;AACF;;;;;;AAHF;;AACE;;AAES;;AACX;;;;;;AAJoE;;AACzD;;AAAA;;;;;;;;AAKT;;AAAuE;AAAA;;AAAA;;AAAA,wCAAsB,MAAtB;AAA4B,WAA5B;;AACrE;;AACF;;;;;;AAHF;;AACE;;AAES;;AACX;;;;;;AAJkF;;AACvE;;AAAA;;;;;;;;AAKT;;AAAuE;AAAA;;AAAA;;AAAA,wCAAsB,OAAtB;AAA6B,WAA7B;;AACrE;;AACF;;;;;;AAHF;;AACE;;AAES;;AACX;;;;;;AAJiF;;AACtE;;AAAA;;;;;;;;AAKT;;AAAuE;AAAA;;AAAA;;AAAA,wCAAsB,QAAtB;AAA8B,WAA9B;;AACrE;;AACF;;;;;;AAHF;;AACE;;AAEU;;AACZ;;;;;;AAJ4C;;AACjC;;AAAA;;;;;;;;AAtDjB;;AACE;;AACE;;AACE;;AAAY;;AAAmB;;AAC/B;;AACE;;AACA;;AAGF;;AACF;;AAEA;;AACE;;AAAW;;AAA0B;;AACrC;;AACE;;AACA;;AAIF;;AACF;;AACF;;AAEA;;AACE;;AACE;;AACA;;AACA;;AACE;;AAEW;;AACb;;AACA;;AACE;;AAES;;AACX;;AACA;;AAKA;;AAKA;;AAKA;;AAMA;;AAIE;AAAA;;AAAA;;AAAA;AAAA;;AAEA;;AACF;;AAEF;;AACF;;AACF;;;;;;AAtEM;;AAKS;;AAAA,mGAAwB,aAAxB,EAAwB,2CAAxB;;AACK;;AAAA;;AASI;;AAAA,mGAAwB,aAAxB,EAAwB,kDAAxB;;AAEb;;AAAA;;AASsB;;AAAA;;AAEtB;;AAAA;;AACM;;AAAA;;AAIN;;AAAA;;AACM;;AAAA;;AAIL;;AAAA;;AAKA;;AAAA;;AAKA;;AAAA;;AAKA;;AAAA;;;;;;AAwBd;;;;UD9EW0wB,8B;AAaX,gDACU/zB,EADV,EAEUC,UAFV,EAGUyC,MAHV,EAIUD,KAJV,EAKUH,MALV,EAMUK,EANV,EAOUkG,WAPV,EAQUC,KARV,EAQ+B;AAAA;;AAPrB,eAAA9I,EAAA,GAAAA,EAAA;AACA,eAAAC,UAAA,GAAAA,UAAA;AACA,eAAAyC,MAAA,GAAAA,MAAA;AACA,eAAAD,KAAA,GAAAA,KAAA;AACA,eAAAH,MAAA,GAAAA,MAAA;AACA,eAAAK,EAAA,GAAAA,EAAA;AACA,eAAAkG,WAAA,GAAAA,WAAA;AACA,eAAAC,KAAA,GAAAA,KAAA;AAdV,eAAAmD,WAAA,GAAuB,KAAvB;AACA,eAAA0E,IAAA,GAAO,KAAP;AACA,eAAAnI,MAAA,GAAkB,KAAlB;AACA,eAAAO,WAAA,GAAqB,IAArB;AAYI;;;;iBAEJ,oBAAW;AAAA;;AACT,iBAAKmD,WAAL,GAAmB,KAAKvJ,EAAL,CAAQQ,OAAR,CAAgB,YAAhB,CAAnB;AACA,iBAAK2F,KAAL,CAAWE,aAAX,CAAyBvF,SAAzB,CAAmC,UAACwF,MAAD,EAAiB;AAClD,kBAAIA,MAAM,CAACC,GAAP,CAAW,IAAX,CAAJ,EAAsB;AACpB,wBAAI,CAACV,MAAL,GAAc,IAAd;AACA,wBAAI,CAAChI,EAAL,GAAUyI,MAAM,CAACC,GAAP,CAAW,IAAX,CAAV;;AACA,wBAAI,CAACjJ,UAAL,CACG+zB,oBADH,CACwB/qB,MAAM,CAACC,GAAP,CAAW,IAAX,CADxB,EAEGzF,SAFH,CAEa,UAACyE,IAAD,EAAU;AACnBnD,yBAAO,CAACC,GAAR,CAAY,iBAAZ,EAA8BkD,IAA9B;AACA,0BAAI,CAAC+rB,aAAL,GAAqB/rB,IAArB;;AACA,sBAAI,QAAI,CAAC+rB,aAAL,IAAsB,IAAtB,IAA8B,QAAI,CAACA,aAAL,IAAsBxnB,SAAxD,EAAmE;AACjE,4BAAI,CAAC1D,WAAL,GAAiB,KAAjB;;AACA,4BAAI,CAACtI,aAAL,CAAmB,EAAnB;AACD,mBAHD,MAGO,IACL,QAAI,CAACwzB,aAAL,CAAmBtN,aAAnB,IAAoC,IAApC,IACA,QAAI,CAACsN,aAAL,CAAmBtN,aAAnB,IAAoCla,SAF/B,EAGL;AACA,4BAAI,CAAC/J,MAAL,CAAYa,IAAZ;;AACA,4BAAI,CAAC/C,EAAL,GAAU,QAAI,CAACyzB,aAAL,CAAmBtN,aAA7B;;AACA,4BAAI,CAAClmB,aAAL,CAAmB,QAAI,CAACwzB,aAAxB;;AACA,4BAAI,CAACzrB,MAAL,GAAc,IAAd;AACA,4BAAI,CAACkE,SAAL,GAAiB,QAAI,CAACunB,aAAtB;AACA,4BAAI,CAAChoB,WAAL,GAAmB,IAAnB;;AACA,4BAAI,CAACpD,WAAL,CAAiBQ,eAAjB,CAAiC,QAAI,CAACqD,SAAtC;;AACA,4BAAI,CAAChK,MAAL,CAAYnB,KAAZ;AACD;;AACD,0BAAI,CAAC2B,YAAL,GAAoB,QAAI,CAACP,EAAL,CAAQQ,OAAR,CAAgB,YAAhB,CAApB;AACD,iBAtBH;AAuBD,eA1BD,MA0BO;AACL,wBAAI,CAAC1C,aAAL,CAAmB,EAAnB;AACD;AACF,aA9BD;AA+BD;;;iBACD,uBAAcG,IAAd,EAAoB;AAClB,iBAAKC,QAAL,GAAgB,KAAKb,EAAL,CAAQc,KAAR,CAAc;AAC5B0lB,6BAAe,EAAE,CAAC,CAAA5lB,IAAI,SAAJ,IAAAA,IAAI,WAAJ,GAAI,MAAJ,GAAAA,IAAI,CAAE4lB,eAAN,KAAyB,EAA1B,EAA8B,0DAAWxlB,QAAzC,CADW;AAE5BkzB,oCAAsB,EAAE,CACtB,CAAAtzB,IAAI,SAAJ,IAAAA,IAAI,WAAJ,GAAI,MAAJ,GAAAA,IAAI,CAAEszB,sBAAN,KAAgC,EADV,EAEtB,0DAAWlzB,QAFW,CAFI;AAM5B2lB,2BAAa,EAAE,CAAC,CAAA/lB,IAAI,SAAJ,IAAAA,IAAI,WAAJ,GAAI,MAAJ,GAAAA,IAAI,CAAE+lB,aAAN,KAAuB,IAAxB,CANa;AAO5BzjB,0BAAY,EAAE,CAAC,CAAAtC,IAAI,SAAJ,IAAAA,IAAI,WAAJ,GAAI,MAAJ,GAAAA,IAAI,CAAEuzB,SAAN,KAAmB,KAAKjoB,WAAL,CAAiB3C,QAArC;AAPc,aAAd,CAAhB;AASD;;;iBACD,sBAAamB,SAAb,EAAsB;AAAA;;AACpB,+DAAKC,IAAL,CACE;AACE;AACAC,kBAAI,EAAE,uBAAsBF,SAAtB,GAAiC,UAAjC,GAA8C,0BAFtD;AAGEG,8BAAgB,EAAE,IAHpB;AAIEC,gCAAkB,EAAE,SAJtB;AAKEC,+BAAiB,EAAE,MALrB;AAME;AACAC,8BAAgB,EAAE,IAPpB;AAQEC,+BAAiB,EAAE,KARrB;AAQ4B,sBAAQ;AARpC,aADF,EAWEC,IAXF,CAWQ,UAAAC,MAAM,EAAI;AAChB,kBAAGA,MAAM,CAACC,WAAP,IAAoB,IAAvB,EAA4B;AAC1B,wBAAI,CAACnL,UAAL,CAAgBymB,iBAAhB,CAAkC,QAAI,CAACha,SAAL,CAAelM,EAAjD,EACCiD,SADD,CACW,UAAA3D,IAAI,EAAI;AACjB,0BAAI,CAACwC,MAAL,CAAYwD,QAAZ,CAAqB,iCAArB;AACD,iBAHD,EAIA,UAAAuC,GAAG,EAAE;AACH,sBAAIA,GAAG,CAACC,MAAJ,IAAc,GAAlB,EAAuB;AACrB,4BAAI,CAAC7F,KAAL,CAAWc,IAAX,CAAgB,6BAAhB,EAA+C,IAA/C,EAAqD;AACnDkC,8BAAQ,EAAE,IADyC;AAEnDC,sCAAgB,EAAE,KAFiC;AAGnDC,wCAAkB,EAAE;AAH+B,qBAArD;AAKD;;AACD,0BAAI,CAACrD,MAAL,CAAYwD,QAAZ,CAAqB,iCAArB;AACH,iBAbC;AAcD;AAAC,aA3BJ;AA+BD;;;iBACD,sBAAU;AACR,iBAAKiD,WAAL,GAAiB,KAAjB;AACD;;;iBAED,sBAAa2B,SAAb,EAAwB;AAAA;;AACtB,+DAAKC,IAAL,CACE;AACE;AACAC,kBAAI,EAAE,uBAAsBF,SAAtB,GAAiC,UAAjC,GAA8C,0BAFtD;AAGEG,8BAAgB,EAAE,IAHpB;AAIEC,gCAAkB,EAAE,SAJtB;AAKEC,+BAAiB,EAAE,MALrB;AAME;AACAC,8BAAgB,EAAE,IAPpB;AAQEC,+BAAiB,EAAE,KARrB;AAQ4B,sBAAQ;AARpC,aADF,EAWEC,IAXF,CAWQ,UAAAC,MAAM,EAAI;AAChB,kBAAGA,MAAM,CAACC,WAAP,IAAoB,IAAvB,EAA4B;AAC1B,oBAAI7K,OAAO,GAAQ,EAAnB;AACAA,uBAAO,CAACC,EAAR,GAAa,QAAI,CAACA,EAAlB;AACAD,uBAAO,CAACmK,SAAR,GAAoBA,SAApB;AACAnK,uBAAO,CAAC2C,YAAR,GAAuB,QAAI,CAACA,YAAL,CAAkBqG,QAAzC;;AACA,wBAAI,CAACtJ,UAAL,CAAgBm0B,0BAAhB,CAA2C7zB,OAA3C,EAAoDkD,SAApD,CAA8D,UAAC3D,IAAD,EAAU;AACtE,0BAAI,CAAC4M,SAAL,GAAiB5M,IAAjB;;AACA,0BAAI,CAAC+I,WAAL,CAAiBQ,eAAjB,CAAiC,QAAI,CAACqD,SAAtC;;AACA,0BAAI,CAACT,WAAL,GAAmB,IAAnB;;AACA,0BAAI,CAACpD,WAAL,CAAiBS,cAAjB;;AACA,sBAAIpD,OAAO,GAAG,EAAd;;AACA,0BAAQwE,SAAR;AACE,yBAAK,MAAL;AACExE,6BAAO,GAAG,QAAV;AACA;;AACF,yBAAK,OAAL;AACEA,6BAAO,GAAG,QAAV;AACA;;AACF,yBAAK,MAAL;AACEA,6BAAO,GAAG,YAAV;AACA;;AACF;AACE;AAXJ;;AAaA,0BAAI,CAACzD,KAAL,CAAWc,IAAX,kBAA0B2C,OAA1B,sBAAoD,IAApD,EAA0D;AACxDT,4BAAQ,EAAE,IAD8C;AAExDC,oCAAgB,EAAE,KAFsC;AAGxDC,sCAAkB,EAAE;AAHoC,mBAA1D;AAKD,iBAxBD;AAyBD;AAAC,aA1CJ;AA4CD;;;iBAED,kBAAS;AAAA;;AACP,gBAAI,KAAK9E,QAAL,CAAcyM,OAAlB,EAA2B;AACzB;AACD,aAFD,MAEO;AACL,mBAAK5K,MAAL,CAAYa,IAAZ;AACA,mBAAKtD,UAAL,CAAgBo0B,iBAAhB,CAAkC,KAAKxzB,QAAL,CAAcS,KAAhD,EAAuDmC,SAAvD,CACE,UAACyE,IAAD,EAAU;AACR,wBAAI,CAACxF,MAAL,CAAYnB,KAAZ;;AACA,wBAAI,CAACe,MAAL,CAAYwD,QAAZ,CAAqB,iCAArB,EAAwDoF,IAAxD,CAA6D,UAAC0C,CAAD,EAAO;AAClE,0BAAI,CAACnL,KAAL,CAAWc,IAAX,CAAgB,0BAAhB,EAA4C,IAA5C,EAAkD;AAChDkC,4BAAQ,EAAE,IADsC;AAEhDC,oCAAgB,EAAE,KAF8B;AAGhDC,sCAAkB,EAAE;AAH4B,mBAAlD;AAKD,iBAND;AAOD,eAVH,EAWE,UAAC0C,GAAD,EAAc;AACZ,wBAAI,CAAC3F,MAAL,CAAYnB,KAAZ;;AACA,wBAAI,CAACkB,KAAL,CAAWc,IAAX,WAA0B,IAA1B,EAAgC;AAC9BkC,0BAAQ,EAAE,IADoB;AAE9BC,kCAAgB,EAAE,KAFY;AAG9BC,oCAAkB,EAAE;AAHU,iBAAhC;AAKD,eAlBH;AAoBD;AACF;;;iBAED,kBAAS;AACP6G,wBAAY,CAACuB,UAAb,CAAwB,mBAAxB;AACA,iBAAKzL,MAAL,CAAYwD,QAAZ,CAAqB,iCAArB;AACD;;;;;;;yBAxLUiuB,8B,EAA8B,2H,EAAA,2I,EAAA,mK,EAAA,wI,EAAA,uH,EAAA,0J,EAAA,6I,EAAA,+H;AAAA,O;;;cAA9BA,8B;AAA8B,qD;AAAA,iB;AAAA,e;AAAA,21C;AAAA;AAAA;ACjB3C;;AAAsB;;AAA0B;;AAAwD;;AAAgC;;AAAiC;;AAAmB;;AAC5L;;AACA;;AACE;;AAAwB;AAAA,qBAAS,IAAAztB,MAAA,EAAT;AAAiB,aAAjB;;AACtB;;AAAU;;AAAU;;AACtB;;AAEC;;AAGD;;AAGF;;AAEA;;AACE;;AAEE;;AAyEF;;AACF;;AAEA;;AACE;;AACF;;;;AAhG+G;;AAAA;;AAAgC;;AAAA;;AAOrI;;AAAA;;AAGD;;AAAA;;AAQyB;;AAAA;;AA6EhB;;AAAA;;;;;;;;;wED9ELytB,8B,EAA8B;gBAL1C,uDAK0C;iBALhC;AACT7xB,oBAAQ,EAAE,8BADD;AAETC,uBAAW,EAAE,2CAFJ;AAGTC,qBAAS,EAAE,CAAC,2CAAD;AAHF,W;AAKgC,U;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEjB3C;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACAA;;AAAsC;;AAA0B;;AAA2E;;AAAQ;;;;;;AACnJ;;AAAqC;;AAA0B;;AAA4E;;AAAQ;;;;;;AAK/I;;AAAqC;;AAAW;;;;;;AAChD;;AAAoC;;AAAY;;;;;;AAkBvB;;AACA;;AACA;;;;;;AAFwE;;AACxE;;AAAA;;;;;;AAQH;;AAEE;;AACF;;;;;;;;AApBN;;AACI;;AAAW;;AAAa;;AACxB;;AAGI;;AAEA;AAAA;;AAAA;;AAAA;AAAA;;AACC;;AAGH;;AAMA;;AAIF;;AACF;;;;;;AAdoC;;AAAA,iGAAgB,cAAhB,EAAgB,uBAAhB;;AAU7B;;AAAA;;;;;;AAMP;;AACE;;AAAW;;AAAa;;AACxB;;AACE;;AAMF;;AAEJ;;;;;;AANkB;;AAAA;;;;;;AAcV;;AACE;;AACF;;;;;;AAFiE;;AAC/D;;AAAA;;;;;;AAGJ;;AAEE;;AACF;;;;;;AAbJ;;AACE;;AAAW;;AAAW;;AACtB;;AAGE;;AACE;;AAGF;;AACA;;AAIF;;AACF;;;;;;AATmC;;AAAA,+FAAY,cAAZ,EAAY,qBAAZ;;AAK5B;;AAAA;;;;;;AAKP;;AACE;;AAAW;;AAAW;;AACtB;;AACE;;AAMF;;AAEJ;;;;;;AANkB;;AAAA;;;;;;AAqBR;;AAAiC;;AAAgC;;;;;;AACnE;;AAEA;;AACF;;;;;;;;AAfN;;AACI;;AAAW;;AAAc;;AACzB;;AACI;;AACA;AAAA;;AAAA;;AAAA;AAAA;;AACI;;AAAY;;AAAM;;AAClB;;AAAwB;;AAAG;;AAC3B;;AAAwB;;AAAG;;AAC3B;;AAAwB;;AAAG;;AAC3B;;AAAwB;;AAAG;;AAC7B;;AACA;;AACF;;AAIJ;;AAEJ;;;;;;AAPsB;;AAAA;;AAEb;;AAAA;;;;;;AAMT;;AACE;;AAAW;;AAAc;;AACzB;;AACE;;AAMF;;AAEJ;;;;;;AANkB;;AAAA;;;;;;AAgBR;;AAEA;;AACF;;;;;;;;AAMR;;AAGE;AAAA;;AAAA;;AAAA;AAAA;;AAGA;;AAEF;;;;;;AAJE;;;;;;;;AAMA;;AAGA;AAAA;;AAAA;;AAAA;AAAA;;AACG;;AACF;;;;;;AAHD;;;;;;;;AAQA;;AAAwE;AAAA;;AAAA;;AAAA;AAAA;;AACtE;;AACF;;;;;;;;AAGA;;AAAwE;AAAA;;AAAA;;AAAA,wCAAsB,MAAtB;AAA4B,WAA5B;;AACtE;;AACF;;;;;;AAHF;;AACE;;AAES;;AACX;;;;;;AAJuE;;AAC5D;;AAAA;;;;;;;;AAKT;;AAAuE;AAAA;;AAAA;;AAAA,wCAAsB,MAAtB;AAA4B,WAA5B;;AACrE;;AACF;;;;;;AAHF;;AACE;;AAES;;AACX;;;;;;AAJwF;;AAC7E;;AAAA;;;;;;;;AAKT;;AAAuE;AAAA;;AAAA;;AAAA,wCAAsB,OAAtB;AAA6B,WAA7B;;AACrE;;AACF;;;;;;AAHF;;AACE;;AAES;;AACX;;;;;;AAJuF;;AAC5E;;AAAA;;;;;;;;AAKT;;AAAuE;AAAA;;AAAA;;AAAA,wCAAsB,QAAtB;AAA8B,WAA9B;;AACrE;;AACF;;;;;;AAHF;;AACE;;AAEU;;AACZ;;;;;;AAJ+C;;AACpC;;AAAA;;;;;;AAmB7B;;AACE;;AACF;;;;UDlLakyB,8B;AAcX,gDAAoBxhB,WAApB,EAAqD7S,UAArD,EACUqC,MADV,EACgCG,KADhC,EAC4DqG,KAD5D,EAC+FD,WAD/F,EAEUlG,EAFV,EAE0CD,MAF1C,EAIUkG,GAJV,EAIkC;AAAA;;AAJd,eAAAkK,WAAA,GAAAA,WAAA;AAAiC,eAAA7S,UAAA,GAAAA,UAAA;AAC3C,eAAAqC,MAAA,GAAAA,MAAA;AAAsB,eAAAG,KAAA,GAAAA,KAAA;AAA4B,eAAAqG,KAAA,GAAAA,KAAA;AAAmC,eAAAD,WAAA,GAAAA,WAAA;AACrF,eAAAlG,EAAA,GAAAA,EAAA;AAAgC,eAAAD,MAAA,GAAAA,MAAA;AAEhC,eAAAkG,GAAA,GAAAA,GAAA;AAfV,eAAAJ,MAAA,GAAkB,KAAlB;AAGA,eAAA+rB,aAAA,GAAyB,KAAzB;AAKA,eAAAxrB,WAAA,GAAqB,IAArB;AAOmC,eAAKyrB,cAAL,GAAsB,KAAK1hB,WAAL,CAAiBhS,KAAjB,CAAuB;AAC9ET,oBAAQ,EAAE,CAAE,EAAF,EAAK,CAAC,0DAAWW,QAAZ,CAAL,CADoE;AAE9EgG,sBAAU,EAAE,CAAE,EAAF,EAAK,CAAC,0DAAWhG,QAAZ,CAAL,CAFkE;AAG9EkxB,uBAAW,EAAE,CAAE,EAAF,EAAK,CAAC,0DAAWlxB,QAAZ,CAAL,CAHiE;AAI9EyzB,uBAAW,EAAE,CAAE,EAAF,EAAK,CAAC,0DAAWzzB,QAAZ,CAAL,CAJiE;AAKhFR,cAAE,EAAE,CAAE,EAAF;AAL4E,WAAvB,CAAtB;AAMjC;;;;iBACF,oBAAQ;AAAA;;AAEN,iBAAKqM,aAAL;AACA,iBAAK/D,KAAL,CAAWE,aAAX,CAAyBvF,SAAzB,CAAmC,UAACwF,MAAD,EAAiB;AAClDlE,qBAAO,CAACC,GAAR,CAAYiE,MAAM,CAACC,GAAP,CAAW,IAAX,CAAZ;AACA,sBAAI,CAACyN,YAAL,GAAoB1N,MAAM,CAACC,GAAP,CAAW,QAAX,CAApB;AACAnE,qBAAO,CAACC,GAAR,CAAY,mBAAZ,EAAgC,QAAI,CAAC2R,YAArC;;AACA,kBAAG1N,MAAM,CAACC,GAAP,CAAW,IAAX,CAAH,EAAoB;AAClB,wBAAI,CAACV,MAAL,GAAc,IAAd;AACA,wBAAI,CAAChI,EAAL,GAAUyI,MAAM,CAACC,GAAP,CAAW,IAAX,CAAV;;AACA,wBAAI,CAACjJ,UAAL,CAAgB4Q,cAAhB,CAA+B5H,MAAM,CAACC,GAAP,CAAW,IAAX,CAA/B,EAAiDzF,SAAjD,CAA2D,UAACyE,IAAD,EAAS;AACjEnD,yBAAO,CAACC,GAAR,CAAYkD,IAAZ;;AACA,0BAAI,CAACsB,WAAL,CAAiBtB,IAAI,CAAClB,UAAtB;;AACA,0BAAI,CAACvG,aAAL,CAAmByH,IAAnB;AACF,iBAJD;;AAKE,wBAAI,CAACjI,UAAL,CAAgBy0B,cAAhB,CAA+BzrB,MAAM,CAACC,GAAP,CAAW,IAAX,CAA/B,EAAiDzF,SAAjD,CAA2D,UAACyE,IAAD,EAAS;AACpEnD,yBAAO,CAACC,GAAR,CAAYkD,IAAZ;;AACA,0BAAI,CAACzH,aAAL,CAAmByH,IAAnB;;AACA,0BAAI,CAACkB,YAAL,GAAoBlB,IAApB;;AACA,0BAAI,CAACW,WAAL,CAAiBQ,eAAjB,CAAiC,QAAI,CAACD,YAAtC;;AACA,0BAAI,CAACP,WAAL,CAAiBS,cAAjB;AACF,iBANE;AAOH,eAfD,MAgBI;AACF,wBAAI,CAACP,WAAL,GAAiB,KAAjB;;AACA,wBAAI,CAACtI,aAAL,CAAmB,EAAnB;AACD;AACF,aAxBD;AA0BA,iBAAKyC,YAAL,GAAoB,KAAKP,EAAL,CAAQQ,OAAR,CAAgB,YAAhB,CAApB;AACD;;;iBACD,uBAAcvC,IAAd,EAAoB;AAClBmE,mBAAO,CAACC,GAAR,CAAY,MAAZ,EAAmBpE,IAAnB;AACE,iBAAK4zB,cAAL,GAAsB,KAAK1hB,WAAL,CAAiBhS,KAAjB,CAAuB;AAC7CT,sBAAQ,EAAE,CAACO,IAAI,CAACP,QAAL,IAAiB,EAAlB,EAAqB,0DAAWW,QAAhC,CADmC;AAE7CgG,wBAAU,EAAE,CAACpG,IAAI,CAACoG,UAAL,IAAkB,EAAnB,EAAsB,0DAAWhG,QAAjC,CAFiC;AAG7CR,gBAAE,EAAE,CAAEI,IAAI,CAACJ,EAAL,IAAU,EAAZ,CAHyC;AAI7C0C,0BAAY,EAAE,CAACtC,IAAI,CAACsC,YAAL,IAAqB,EAAtB,CAJ+B;AAK7CgvB,yBAAW,EAAE,CAACtxB,IAAI,CAACsxB,WAAL,IAAmB,EAApB,EAAuB,0DAAWlxB,QAAlC,CALgC;AAM7CyzB,yBAAW,EAAE,CAAC7zB,IAAI,CAAC6zB,WAAL,IAAmB,EAApB,EAAuB,0DAAWzzB,QAAlC;AANgC,aAAvB,CAAtB;AAQF+D,mBAAO,CAACC,GAAR,CAAY,KAAKwvB,cAAjB;AACD;;;iBACD,kBAAM;AACJ,iBAAKlyB,MAAL,CAAYwD,QAAZ,CAAqB,CAAC,2BAAD,CAArB;AACD;;;iBACD,yBAAgB;AAAA;;AACd,iBAAK7F,UAAL,CAAgB4M,aAAhB,GAAgCpJ,SAAhC,CAA0C,UAACyE,IAAD,EAAU;AAClD,sBAAI,CAAClB,UAAL,GAAkBkB,IAAlB;AACD,aAFD;AAGD;;;iBACD,qBAAYlB,UAAZ,EAA4B;AAAA;;AAC1B,iBAAK/G,UAAL,CAAgB2kB,uBAAhB,CAAwC5d,UAAxC,EAAoDvD,SAApD,CAA8D,UAACyE,IAAD,EAAU;AACtE,sBAAI,CAAC7H,QAAL,GAAgB6H,IAAhB;AACAnD,qBAAO,CAACC,GAAR,CAAY,QAAI,CAAC3E,QAAjB;AACD,aAHD;AAID;;;iBACD,sBAAaqK,SAAb,EAAsB;AAAA;;AACpB,+DAAKC,IAAL,CACE;AACE;AACAC,kBAAI,EAAE,uBAAsBF,SAAtB,GAAiC,UAAjC,GAA8C,0BAFtD;AAGEG,8BAAgB,EAAE,IAHpB;AAIEC,gCAAkB,EAAE,SAJtB;AAKEC,+BAAiB,EAAE,MALrB;AAME;AACAC,8BAAgB,EAAE,IAPpB;AAQEC,+BAAiB,EAAE,KARrB;AAQ4B,sBAAQ;AARpC,aADF,EAWEC,IAXF,CAWQ,UAAAC,MAAM,EAAI;AAChB,kBAAGA,MAAM,CAACC,WAAP,IAAoB,IAAvB,EAA4B;AAC1B,wBAAI,CAACnL,UAAL,CAAgBkyB,iBAAhB,CAAkC,QAAI,CAAC/oB,YAAL,CAAkB5I,EAApD,EACCiD,SADD,CACW,UAAA3D,IAAI,EAAI;AACjB,0BAAI,CAACwC,MAAL,CAAYwD,QAAZ,CAAqB,CAAC,2BAAD,CAArB;AACD,iBAHD,EAIA,UAAAuC,GAAG,EAAE;AACH,sBAAIA,GAAG,CAACC,MAAJ,IAAc,GAAlB,EAAuB;AACrB,4BAAI,CAAC7F,KAAL,CAAWc,IAAX,CAAgB,6BAAhB,EAA+C,IAA/C,EAAqD;AACnDkC,8BAAQ,EAAE,IADyC;AAEnDC,sCAAgB,EAAE,KAFiC;AAGnDC,wCAAkB,EAAE;AAH+B,qBAArD;AAKD;;AACD,0BAAI,CAACrD,MAAL,CAAYwD,QAAZ,CAAqB,CAAC,2BAAD,CAArB;AAEH,iBAdC;AAeD;AAAC,aA5BJ;AAgCD;;;iBACD,sBAAU;AACR,iBAAKiD,WAAL,GAAiB,KAAjB;AACD;;;iBAED,sBAAa2B,SAAb,EAAwB;AAAA;;AACtB,+DAAKC,IAAL,CACE;AACE;AACAC,kBAAI,EAAE,uBAAsBF,SAAtB,GAAiC,UAAjC,GAA8C,0BAFtD;AAGEG,8BAAgB,EAAE,IAHpB;AAIEC,gCAAkB,EAAE,SAJtB;AAKEC,+BAAiB,EAAE,MALrB;AAME;AACAC,8BAAgB,EAAE,IAPpB;AAQEC,+BAAiB,EAAE,KARrB;AAQ4B,sBAAQ;AARpC,aADF,EAWEC,IAXF,CAWQ,UAAAC,MAAM,EAAI;AAChB,kBAAGA,MAAM,CAACC,WAAP,IAAoB,IAAvB,EAA4B;AAC1B,oBAAI7K,OAAO,GAAQ,EAAnB;AACAA,uBAAO,CAACC,EAAR,GAAa,QAAI,CAACA,EAAlB;AACAD,uBAAO,CAACmK,SAAR,GAAoBA,SAApB;AACAnK,uBAAO,CAAC2C,YAAR,GAAuB,QAAI,CAACA,YAAL,CAAkBqG,QAAzC;;AACA,wBAAI,CAACtJ,UAAL,CAAgB00B,iCAAhB,CAAkDp0B,OAAlD,EAA2DkD,SAA3D,CAAqE,UAAC3D,IAAD,EAAU;AAC7EiF,yBAAO,CAACC,GAAR,CAAYlF,IAAZ;AACA,0BAAI,CAACsJ,YAAL,GAAoBtJ,IAApB;;AACA,0BAAI,CAAC+I,WAAL,CAAiBQ,eAAjB,CAAiC,QAAI,CAACD,YAAtC;;AACA,0BAAI,CAACP,WAAL,CAAiBS,cAAjB;;AACA,sBAAIpD,OAAO,GAAG,EAAd;;AACA,0BAAQwE,SAAR;AACE,yBAAK,MAAL;AACExE,6BAAO,GAAG,QAAV;AACA;;AACF,yBAAK,OAAL;AACEA,6BAAO,GAAG,QAAV;AACA;;AACF,yBAAK,MAAL;AACEA,6BAAO,GAAG,YAAV;AACA;;AACF;AACE;AAXJ;;AAaA,0BAAI,CAACzD,KAAL,CAAWc,IAAX,kBAA0B2C,OAA1B,oBAAkD,IAAlD,EAAwD;AACtDT,4BAAQ,EAAE,IAD4C;AAEtDC,oCAAgB,EAAE,KAFoC;AAGtDC,sCAAkB,EAAE;AAHkC,mBAAxD;AAKD,iBAxBD;AAyBD;AAAC,aA1CJ;AA4CD;;;iBAED,6BAAiB;AAAA;;AACf,iBAAK1F,UAAL,CAAgB2e,iBAAhB,GAAoCnb,SAApC,CAA8C,UAAC3D,IAAD,EAAU;AACtD,sBAAI,CAACkH,UAAL,GAAkBlH,IAAlB;AACAiF,qBAAO,CAACC,GAAR,CAAY,aAAZ,EAA0B,QAAI,CAACgC,UAA/B;AACD,aAHD;AAID;;;iBACD,kBAAM;AAAA;;AACJ,iBAAKwtB,cAAL,CAAoBlzB,KAApB,CAA0B4B,YAA1B,GAAyC,KAAKA,YAAL,CAAkBqG,QAA3D;AACA,gBAAIhJ,OAAO,GAAC;AACVF,sBAAQ,EAAE,KAAKm0B,cAAL,CAAoBlzB,KAApB,CAA0BjB,QAD1B;AAEV2G,wBAAU,EAAE,KAAKwtB,cAAL,CAAoBlzB,KAApB,CAA0B0F,UAF5B;AAGVxG,gBAAE,EAAC,KAAKg0B,cAAL,CAAoBlzB,KAApB,CAA0Bd,EAHnB;AAIV0xB,yBAAW,EAAC,KAAKsC,cAAL,CAAoBlzB,KAApB,CAA0B4wB,WAJ5B;AAKVuC,yBAAW,EAAC,KAAKD,cAAL,CAAoBlzB,KAApB,CAA0BmzB,WAL5B;AAMVvxB,0BAAY,EAAC,KAAKsxB,cAAL,CAAoBlzB,KAApB,CAA0B4B;AAN7B,aAAZ;AAYA,iBAAKR,MAAL,CAAYa,IAAZ;AACA,iBAAKixB,cAAL,CAAoBlzB,KAApB,CAA0B4B,YAA1B,GAAyC,KAAKA,YAA9C;AACA,iBAAKjD,UAAL,CAAgB20B,oBAAhB,CAAqCr0B,OAArC,EAA8CkD,SAA9C,CAAwD,UAAA+B,QAAQ,EAAI;AACpE,sBAAI,CAAC9C,MAAL,CAAYnB,KAAZ;;AACA,kBAAGiE,QAAQ,IAAI,IAAZ,IAAoB,CAAC,QAAI,CAACgD,MAA7B,EAAoC;AAClC,wBAAI,CAAClG,MAAL,CAAYwD,QAAZ,CAAqB,6BAArB,EAAoDoF,IAApD,CAAyD,UAAA0C,CAAC,EAAE;AAC1D,0BAAI,CAACnL,KAAL,CAAWc,IAAX,CAAgB,4BAAhB,EAA8C,IAA9C,EACA;AAAEkC,4BAAQ,EAAE,IAAZ;AACEC,oCAAgB,EAAE,KADpB;AAEEC,sCAAkB,EAAE;AAFtB,mBADA;AAID,iBALD;;AAMA,wBAAI,CAACiD,GAAL,CAAS4B,YAAT;AACD,eARD,MASK,IAAGhF,QAAQ,IAAI,IAAZ,IAAoB,QAAI,CAACgD,MAA5B,EAAmC;AACtC,wBAAI,CAAClG,MAAL,CAAYwD,QAAZ,CAAqB,6BAArB,EAAoDoF,IAApD,CAAyD,UAAA0C,CAAC,EAAE;AAC1D,0BAAI,CAACnL,KAAL,CAAWc,IAAX,CAAgB,8BAAhB,EAAgD,IAAhD,EACA;AAAEkC,4BAAQ,EAAE,IAAZ;AACEC,oCAAgB,EAAE,KADpB;AAEEC,sCAAkB,EAAE;AAFtB,mBADA;AAID,iBALD;;AAMA,wBAAI,CAACiD,GAAL,CAAS4B,YAAT;AACD,eARI,MASA,IAAGhF,QAAQ,IAAI,IAAZ,IAAoB,QAAI,CAACgD,MAAL,IAAe,IAAtC,EAA2C;AAC/C;AACCzD,uBAAO,CAACC,GAAR,CAAY,UAAZ,EAAuBQ,QAAvB;;AACA,wBAAI,CAAClD,MAAL,CAAYwD,QAAZ,CAAqB,6BAArB,EAAoDoF,IAApD,CAAyD,UAAA0C,CAAC,EAAE;AAC1D,0BAAI,CAACnL,KAAL,CAAWc,IAAX,CAAgB,4BAAhB,EAA8C,IAA9C,EACA;AAAEkC,4BAAQ,EAAE,IAAZ;AACEC,oCAAgB,EAAE,KADpB;AAEEC,sCAAkB,EAAE;AAFtB,mBADA;AAID,iBALD;;AAMA,wBAAI,CAACiD,GAAL,CAAS4B,YAAT;AACA;AACH,aA/BC;AAiCD;;;iBACD,6BAAoBhJ,KAApB,EAA6B;AAAA;;AAC3B,iBAAKvB,UAAL,CAAgB40B,oBAAhB,CAAqCrzB,KAAK,CAACF,KAA3C,EAAkDmC,SAAlD,CAA4D,UAACyE,IAAD,EAAU;AACpEnD,qBAAO,CAACC,GAAR,CAAY,QAAZ,EAAqBkD,IAArB,EADoE,CACzC;;AAC3B,kBAAGA,IAAI,IAAI,IAAX,EAAgB;AACd;AACA,wBAAI,CAACqsB,aAAL,GAAqB,KAArB;AACAxvB,uBAAO,CAACC,GAAR,CAAY,iBAAZ,EAA8B,QAAI,CAACuvB,aAAnC;;AACA,wBAAI,CAAC9xB,KAAL,CAAWc,IAAX,uCAAsD,IAAtD,EAA4D;AAC1DkC,0BAAQ,EAAE,IADgD;AAE1DC,kCAAgB,EAAE,KAFwC;AAG1DC,oCAAkB,EAAE;AAHsC,iBAA5D;AAKD,eATD,MASK;AACH,wBAAI,CAAC4uB,aAAL,GAAqB,KAArB;AACD;AACF,aAdD,EAD2B,CAgB5B;AACA;;;iBACD,0BAAiBpwB,KAAjB,EAAuBvD,IAAvB,EAA2B;AACzB,mBAAOA,IAAI,CAACoG,UAAZ;AACD;;;iBACD,wBAAe7C,KAAf,EAAqBvD,IAArB,EAAyB;AACxB,mBAAOA,IAAI,CAACP,QAAZ;AACA;;;;;;;yBAtPUi0B,8B,EAA8B,2H,EAAA,2I,EAAA,uH,EAAA,wI,EAAA,+H,EAAA,6I,EAAA,0J,EAAA,mK,EAAA,gI;AAAA,O;;;cAA9BA,8B;AAA8B,oD;AAAA;AAAA;;;;;;;;;;;;;;;ACjB3C;;AACA;;AACA;;AACI;;AAAwB;AAAA,qBAAS,IAAAhuB,MAAA,EAAT;AAAiB,aAAjB;;AACpB;;AAAU;;AAAU;;AACxB;;AACA;;AACA;;AACJ;;AAEA;;AACI;;AACI;;AAIQ;;AACI;;AAwBE;;AAaA;;AAgBA;;AAaN;;AACA;;AACI;;AAmBA;;AAYA;;AACI;;AAAW;;AAAc;;AACzB;;AACI;;AAMA;;AAIJ;;AACJ;;AACJ;;AACJ;;AACI;;AACE;;AASA;;AACE;;AAMF;;AAEA;;AACA;;AACE;;AAES;;AACX;;AACA;;AAKA;;AAKA;;AAKA;;AAMA;;AAIE;AAAA,qBAAS,IAAAA,MAAA,EAAT;AAAiB,aAAjB;;AAEA;;AACF;;AACF;;AACF;;AACN;;AACJ;;AACJ;;AAEA;;;;AAjMuB;;AACA;;AAAA;;AAKd;;AAAA;;AACA;;AAAA;;AAKK;;AAAA;;AAK2B;;AAAA;;AAwBE;;AAAA;;AAaA;;AAAA;;AAgBA;;AAAA;;AAeD;;AAAA;;AAmBD;;AAAA;;AAiBG;;AAAA;;AAKf;;AAAA;;AAQF;;AAAA;;AASJ;;AAAA;;AACM;;AAAA;;AASN;;AAAA;;AACM;;AAAA;;AAIL;;AAAA;;AAKA;;AAAA;;AAKA;;AAAA;;AAKA;;AAAA;;AAoBlB;;AAAA;;;;;;;;;wEDhLOguB,8B,EAA8B;gBAL1C,uDAK0C;iBALhC;AACTpyB,oBAAQ,EAAE,6BADD;AAETC,uBAAW,EAAE,0CAFJ;AAGTC,qBAAS,EAAE,CAAC,0CAAD;AAHF,W;AAKgC,U;;;;;;;;;;;;;;;;;;;;;AAClB+P,kBAAQ;kBAA9B,uDAA8B;mBAApB,U;AAAoB;;;;;;;;;;;;;;;;;;;AElBjC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACAgH;;AAAsB;;AAAG;;;;;;AAAQ;;AAAqB;;AAAI;;;;;;AAKxK;;AAAqC;;AAA+B;;;;;;AACpE;;AAAoC;;AAAgC;;;;;;AAcxD;;AACF;;AACA;;;;;;AAFqE;;AACrE;;AAAA;;;;;;AAGA;;AAEA;;AACJ;;;;;;AAZA;;AACE;;AAAW;;AAAa;;AACxB;;AACE;;AACE;;AAAqB;;AAAM;;AAC3B;;AAGN;;AACI;;AAIF;;AACF;;;;;;AAXmC;;AAAA;;AAEA;;AAAA,iGAAe,cAAf,EAAe,mBAAf;;AAK9B;;AAAA;;;;;;AAKL;;AACE;;AAAY;;AAAa;;AACzB;;AACE;;AAKF;;AACF;;;;;;AAHI;;AAAA;;;;;;AAWI;;AACA;;AACA;;;;;;AAF+D;;AAC/D;;AAAA;;;;;;AAGJ;;AAEJ;;AACJ;;;;;;AAbI;;AACE;;AAAW;;AAAW;;AACtB;;AACE;;AAEI;;AAAqB;;AAAM;;AAC3B;;AAGJ;;AACA;;AAIF;;AACF;;;;;;AAZiC;;AAAA;;AAGI;;AAAA,+FAAa,cAAb,EAAa,iBAAb;;AAKpC;;AAAA;;;;;;AAKD;;AACE;;AAAY;;AAAW;;AACvB;;AACE;;AAKF;;AACF;;;;;;AAHI;;AAAA;;;;;;AAWI;;AACA;;AACA;;;;;;AAFmE;;AACnE;;AAAA;;;;;;AAGJ;;AAEA;;AACJ;;;;;;AAbA;;AACE;;AAAW;;AAAU;;AACrB;;AACE;;AAEG;;AAAqB;;AAAM;;AAC1B;;AAGJ;;AACA;;AAIF;;AACF;;;;;;AAZgC;;AAAA;;AAGK;;AAAA,gGAAa,cAAb,EAAa,sBAAb;;AAKhC;;AAAA;;;;;;AAKL;;AACE;;AAAW;;AAAU;;AACrB;;AACE;;AAKF;;AACF;;;;;;AAHI;;AAAA;;;;;;AAmBA;;AAEA;;AACJ;;;;;;AAEE;;AAEA;;AACF;;;;;;AAUI;;AAEA;;AACJ;;;;;;AAYI;;AAEA;;AACJ;;;;;;;;AAcE;;AAA8G;AAAA;;AAAA;;AAAA;AAAA;;AAAmB;;AAAI;;;;;;AAA3E;;;;;;;;AAGxD;;AAA2H;AAAA;;AAAA;;AAAA;AAAA;;AACxH;;AACD;;;;;;AAFsE;;;;;;;;AAKxE;;AAAwE;AAAA;;AAAA;;AAAA;AAAA;;AACtE;;AACF;;;;;;;;AAGA;;AAAwE;AAAA;;AAAA;;AAAA,wCAAsB,MAAtB;AAA4B,WAA5B;;AACtE;;AACF;;;;;;AAHF;;AACE;;AAES;;AACX;;;;;;AAJoE;;AACzD;;AAAA;;;;;;;;AAKT;;AAAuE;AAAA;;AAAA;;AAAA,wCAAsB,MAAtB;AAA4B,WAA5B;;AACrE;;AACF;;;;;;AAHF;;AACE;;AAES;;AACX;;;;;;AAJkF;;AACvE;;AAAA;;;;;;;;AAKT;;AAAuE;AAAA;;AAAA;;AAAA,wCAAsB,OAAtB;AAA6B,WAA7B;;AACrE;;AACF;;;;;;AAHF;;AACE;;AAES;;AACX;;;;;;AAJiF;;AACtE;;AAAA;;;;;;;;AAKT;;AAAuE;AAAA;;AAAA;;AAAA,wCAAsB,QAAtB;AAA8B,WAA9B;;AACrE;;AACF;;;;;;AAHF;;AACE;;AAEU;;AACZ;;;;;;AAJ4C;;AACjC;;AAAA;;;;;;;;AA/KjB;;AACE;;AAEE;;AAeA;;AAWA;;AAgBA;;AAWA;;AAgBA;;AAUF;;AAEA;;AACE;;AACE;;AAAW;;AAAY;;AACvB;;AAEE;;AAIA;AAAA;;AAAA;;AAAA;AAAA;;AAJA;;AAQA;;AAIF;;AACA;;AAIF;;AAEA;;AACE;;AAAW;;AAAY;;AACvB;;AACE;;AAIA;;AAIF;;AACF;;AAEA;;AACE;;AAAW;;AAAa;;AACxB;;AACE;;AAGA;AAAA;;AAAA;;AAAA;AAAA;;AAHA;;AAKA;;AAIF;;AACF;;AACF;;AASA;;AACE;;AACE;;AACA;;AACA;;AACE;;AAEW;;AACb;;AACA;;AACE;;AAES;;AACX;;AACA;;AAKA;;AAKA;;AAKA;;AAMA;;AAIE;AAAA;;AAAA;;AAAA;AAAA;;AAEA;;AACF;;AAEF;;AACF;;AAEF;;;;;;AAhMO;;AAGkB;;AAAA;;AAeA;;AAAA;;AAWA;;AAAA;;AAgBA;;AAAA;;AAWA;;AAAA;;AAgBA;;AAAA;;AAmBjB;;AAAA,mGAAwB,aAAxB,EAAwB,qCAAxB;;AAOC;;AAAA;;AAKJ;;AAAA;;AAUqB;;AAAA,mGAAwB,aAAxB,EAAwB,qCAAxB;;AAGjB;;AAAA;;AAUQ;;AAAA,mGAAwB,aAAxB,EAAwB,sCAAxB;;AAKR;;AAAA;;AAgBwB;;AAAA;;AAEtB;;AAAA;;AACM;;AAAA;;AAIN;;AAAA;;AACM;;AAAA;;AAIL;;AAAA;;AAKA;;AAAA;;AAKA;;AAAA;;AAKA;;AAAA;;;;;;AAyBd;;;;UD/LW2iB,8B;AAiBX,iDACE;AACA;AACQ90B,UAHV,EAGkC0W,GAHlC,EAGyDhU,MAHzD,EAIUD,KAJV,EAKUH,MALV,EAMUK,EANV,EAOU1C,UAPV,EAQU4I,WARV,EAQiC;AAAA;;AALvB,eAAA7I,EAAA,GAAAA,EAAA;AAAwB,eAAA0W,GAAA,GAAAA,GAAA;AAAuB,eAAAhU,MAAA,GAAAA,MAAA;AAC/C,eAAAD,KAAA,GAAAA,KAAA;AACA,eAAAH,MAAA,GAAAA,MAAA;AACA,eAAAK,EAAA,GAAAA,EAAA;AACA,eAAA1C,UAAA,GAAAA,UAAA;AACA,eAAA4I,WAAA,GAAAA,WAAA;AAnBV,eAAAnI,QAAA,GAAsB,EAAtB;AACA,eAAAL,QAAA,GAAsB,EAAtB;AACA,eAAA2G,UAAA,GAAwB,EAAxB;AAIA,eAAAiF,WAAA,GAAwB,KAAxB;AACA,eAAA0E,IAAA,GAAO,KAAP;AACA,eAAAnI,MAAA,GAAkB,KAAlB;AACA,eAAAO,WAAA,GAAqB,IAArB;AACA,eAAAgsB,iBAAA,GAA2B,IAA3B;AAUK;;;;iBAEL,oBAAW;AAAA;;AACT,iBAAK7oB,WAAL,GAAmB,KAAKvJ,EAAL,CAAQQ,OAAR,CAAgB,YAAhB,CAAnB,CADS,CAET;AACA;AACA;;AAEAiJ,sBAAU,CAAC,YAAM;AACf,sBAAI,CAAC4oB,iBAAL,GAAyB1oB,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACrJ,OAAb,CAAqB,iBAArB,CAAX,CAAzB;;AACA,kBAAG,QAAI,CAAC6xB,iBAAL,IAA0B,IAA1B,IAAkC,QAAI,CAACA,iBAAL,IAA0BvoB,SAA/D,EAAyE;AACvE,wBAAI,CAAC1D,WAAL,GAAiB,KAAjB;;AACA,wBAAI,CAACtI,aAAL,CAAmB,EAAnB;AACD,eAHD,MAIK,IAAG,QAAI,CAACu0B,iBAAL,CAAuBx0B,EAAvB,IAA6B,IAA7B,IAAqC,QAAI,CAACw0B,iBAAL,CAAuBx0B,EAAvB,IAA6BiM,SAArE,EAA+E;AACpF,wBAAI,CAAC/J,MAAL,CAAYa,IAAZ;;AACA,wBAAI,CAAC/C,EAAL,GAAU,QAAI,CAACw0B,iBAAL,CAAuBx0B,EAAjC;;AACA,wBAAI,CAACC,aAAL,CAAmB,QAAI,CAACu0B,iBAAxB;;AACA,wBAAI,CAACxsB,MAAL,GAAc,IAAd;;AACA,oBAAG,QAAI,CAACwsB,iBAAL,CAAuBpxB,UAAvB,IAAqC,GAAxC,EAA4C;AAC1C,0BAAI,CAACoxB,iBAAL,CAAuB/qB,QAAvB,GAAkC,EAAlC;AACA,0BAAI,CAAC+qB,iBAAL,CAAuBhrB,MAAvB,GAAgC,EAAhC;AACD;;AAAA;AACD,wBAAI,CAAC0C,SAAL,GAAiB,QAAI,CAACsoB,iBAAtB;AACA,wBAAI,CAAC/oB,WAAL,GAAmB,IAAnB;;AACA,wBAAI,CAACpD,WAAL,CAAiBQ,eAAjB,CAAiC,QAAI,CAACqD,SAAtC;;AACA,wBAAI,CAAChK,MAAL,CAAYnB,KAAZ;AACC;AACF,aApBS,EAoBP,IApBO,CAAV;AAsBA,iBAAKiI,WAAL;AACA,iBAAKyrB,gBAAL;AACA,iBAAKpoB,aAAL;AACA,iBAAK3J,YAAL,GAAoB,KAAKP,EAAL,CAAQQ,OAAR,CAAgB,YAAhB,EAA8BoG,QAAlD,CA/BS,CAgCT;AACA;AACD;;;iBACD,uBAAc3I,IAAd,EAAoB;AAClB,iBAAKC,QAAL,GAAgB,KAAKb,EAAL,CAAQc,KAAR,CAAc;AAC5B8C,wBAAU,EAAG,CAAChD,IAAI,CAACgD,UAAL,IAAmB,EAApB,CADe;AAE5BvD,sBAAQ,EAAG,CAACO,IAAI,CAACP,QAAL,IAAiB,EAAlB,EAAsB,CAAC,0DAAWW,QAAZ,CAAtB,CAFiB;AAG5BN,sBAAQ,EAAG,CAACE,IAAI,CAACF,QAAL,IAAiB,EAAlB,EAAqB,0DAAWM,QAAhC,CAHiB;AAI5BG,uBAAS,EAAG,CAACP,IAAI,CAACO,SAAL,IAAkB,EAAnB,EAAsB,0DAAWH,QAAjC,CAJgB;AAK5Bk0B,uBAAS,EAAG,CAACt0B,IAAI,CAACs0B,SAAL,IAAkB,EAAnB,EAAsB,0DAAWl0B,QAAjC,CALgB;AAM5Bm0B,wBAAU,EAAG,CAACv0B,IAAI,CAACu0B,UAAL,IAAmB,EAApB,EAAuB,0DAAWn0B,QAAlC,CANe;AAO5BgG,wBAAU,EAAE,CAACpG,IAAI,CAACoG,UAAL,IAAmB,EAApB,EAAuB,CAAC,0DAAWhG,QAAZ,CAAvB,CAPgB;AAQ5BR,gBAAE,EAAG,CAACI,IAAI,CAACJ,EAAL,IAAW,IAAZ,CARuB;AAS5B8J,yBAAW,EAAG,CAAC1J,IAAI,CAAC0J,WAAL,IAAoB,EAArB,CATc;AAU5BzG,0BAAY,EAAG,CAACjD,IAAI,CAACiD,YAAL,IAAqB,EAAtB,CAVa;AAW5B0G,qBAAO,EAAG,CAAC3J,IAAI,CAAC2J,OAAL,IAAgB,EAAjB;AAXkB,aAAd,CAAhB;AAcD;;;iBAED,kBAAS;AAAA;;AACP,gBAAG,KAAK1J,QAAL,CAAcyM,OAAjB,EAAyB;AACvB;AACD,aAFD,MAEK;AACH,mBAAK5K,MAAL,CAAYa,IAAZ;AACA,mBAAK1C,QAAL,CAAcS,KAAd,CAAoB4B,YAApB,GAAmC,KAAKA,YAAxC;AACA,mBAAKwT,GAAL,CAAS0e,eAAT,CAAyB,KAAKv0B,QAAL,CAAcS,KAAvC,EAA8CmC,SAA9C,CAAwD,UAACyE,IAAD,EAAU;AAClE,wBAAI,CAACxF,MAAL,CAAYnB,KAAZ;;AACA,wBAAI,CAACe,MAAL,CAAYwD,QAAZ,CAAqB,wCAArB,EAA+DoF,IAA/D,CAAoE,UAAA0C,CAAC,EAAE;AACnE,0BAAI,CAACnL,KAAL,CAAWc,IAAX,CAAgB,0BAAhB,EAA4C,IAA5C,EACA;AAAEkC,4BAAQ,EAAE,IAAZ;AACEC,oCAAgB,EAAE,KADpB;AAEEC,sCAAkB,EAAE;AAFtB,mBADA;AAID,iBALH;AAMC,eARD,EAQE,UAAC0C,GAAD,EAAY;AACZ,wBAAI,CAAC3F,MAAL,CAAYnB,KAAZ;;AACA,wBAAI,CAACkB,KAAL,CAAWc,IAAX,WAA0B,IAA1B,EAAgC;AAAEkC,0BAAQ,EAAE,IAAZ;AAC9BC,kCAAgB,EAAE,KADY;AAE9BC,oCAAkB,EAAE;AAFU,iBAAhC;AAGC,eAbH;AAeC;AAEJ;;;iBAED,4BAAgB;AAAA;;AACd;AACA;AACA;AACA,iBAAK1F,UAAL,CAAgB+N,kBAAhB,GAAqCvK,SAArC,CAA+C,UAAA3D,IAAI,EAAE;AACnDiF,qBAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoClF,IAApC;;AACA,mBAAI,IAAI4D,CAAC,GAAC,CAAV,EAAaA,CAAC,GAAC5D,IAAI,CAAC6D,MAApB,EAA2BD,CAAC,EAA5B,EAA+B;AAC7B,wBAAI,CAAChD,QAAL,CAAciL,IAAd,CAAmB7L,IAAI,CAAC4D,CAAD,CAAJ,CAAQuK,UAA3B;AACD;;AACDlJ,qBAAO,CAACC,GAAR,CAAY,QAAI,CAACtE,QAAjB;AACD,aAND;AAOD;;;iBACD,mBAAUc,KAAV,EAAsB;AACpB,gBAAMC,OAAO,GAAG,OAAhB;AACA,gBAAIC,SAAS,GAAGC,MAAM,CAACC,YAAP,CAAoBJ,KAAK,CAACK,QAA1B,CAAhB;;AACA,gBAAI,CAACJ,OAAO,CAACK,IAAR,CAAaJ,SAAb,CAAL,EAA8B;AAC5BF,mBAAK,CAACO,cAAN;AACD;AACF;;;iBACD,uBAAW;AAAA;;AACT,iBAAK2U,GAAL,CAASlN,WAAT,GAAuB/F,SAAvB,CAAiC,UAAC2Y,OAAD,EAAkB;AACjDrX,qBAAO,CAACC,GAAR,CAAYoX,OAAZ;;AACA,mBAAI,IAAI1Y,CAAC,GAAC,CAAV,EAAaA,CAAC,GAAC0Y,OAAO,CAACzY,MAAvB,EAA8BD,CAAC,EAA/B,EAAkC;AAChC,oBAAG0Y,OAAO,CAAC1Y,CAAD,CAAP,CAAWE,UAAX,KAAwB,GAA3B,EAA+B;AAC7B,0BAAI,CAACvD,QAAL,CAAcsL,IAAd,CAAmByQ,OAAO,CAAC1Y,CAAD,CAA1B;AACD;AACF;;AACDqB,qBAAO,CAACC,GAAR,CAAY,QAAI,CAAC3E,QAAjB,EAPiD,CAQjD;AACC,aATH;AAUD;;;iBAED,sBAAaqK,SAAb,EAAsB;AAAA;;AACpB,+DAAKC,IAAL,CACE;AACE;AACAC,kBAAI,EAAE,uBAAsBF,SAAtB,GAAiC,UAAjC,GAA8C,0BAFtD;AAGEG,8BAAgB,EAAE,IAHpB;AAIEC,gCAAkB,EAAE,SAJtB;AAKEC,+BAAiB,EAAE,MALrB;AAME;AACAC,8BAAgB,EAAE,IAPpB;AAQEC,+BAAiB,EAAE,KARrB;AAQ4B,sBAAQ;AARpC,aADF,EAWEC,IAXF,CAWQ,UAAAC,MAAM,EAAI;AAChB,kBAAGA,MAAM,CAACC,WAAP,IAAoB,IAAvB,EAA4B;AAC1B,wBAAI,CAACnL,UAAL,CAAgBo1B,iBAAhB,CAAkC,QAAI,CAAC3oB,SAAL,CAAelM,EAAjD,EACCiD,SADD,CACW,UAAA3D,IAAI,EAAI;AAClB,0BAAI,CAACwC,MAAL,CAAYwD,QAAZ,CAAqB,wCAArB;AACA,iBAHD,EAIA,UAAAuC,GAAG,EAAE;AACH,sBAAIA,GAAG,CAACC,MAAJ,IAAc,GAAlB,EAAuB;AACrB,4BAAI,CAAC7F,KAAL,CAAWc,IAAX,CAAgB,6BAAhB,EAA+C,IAA/C,EAAqD;AACnDkC,8BAAQ,EAAE,IADyC;AAEnDC,sCAAgB,EAAE,KAFiC;AAGnDC,wCAAkB,EAAE;AAH+B,qBAArD;AAKD;;AACF,0BAAI,CAACrD,MAAL,CAAYwD,QAAZ,CAAqB,wCAArB;AAEF,iBAdC;AAeD;AAAC,aA5BJ;AAgCD;;;iBACD,sBAAU;AACR,iBAAKiD,WAAL,GAAiB,KAAjB;AACD;;;iBAED,sBAAa2B,SAAb,EAAwB;AAAA;;AACtB,+DAAKC,IAAL,CACE;AACE;AACAC,kBAAI,EAAE,uBAAsBF,SAAtB,GAAiC,UAAjC,GAA8C,0BAFtD;AAGEG,8BAAgB,EAAE,IAHpB;AAIEC,gCAAkB,EAAE,SAJtB;AAKEC,+BAAiB,EAAE,MALrB;AAME;AACAC,8BAAgB,EAAE,IAPpB;AAQEC,+BAAiB,EAAE,KARrB;AAQ4B,sBAAQ;AARpC,aADF,EAWEC,IAXF,CAWQ,UAAAC,MAAM,EAAI;AAChB,kBAAGA,MAAM,CAACC,WAAP,IAAoB,IAAvB,EAA4B;AAC1B,oBAAI7K,OAAO,GAAQ,EAAnB;AACAA,uBAAO,CAACC,EAAR,GAAa,QAAI,CAACA,EAAlB;AACAD,uBAAO,CAACmK,SAAR,GAAoBA,SAApB;AACAnK,uBAAO,CAAC2C,YAAR,GAAuB,QAAI,CAACA,YAA5B;;AACA,wBAAI,CAACjD,UAAL,CAAgBq1B,iCAAhB,CAAkD/0B,OAAlD,EAA2DkD,SAA3D,CAAqE,UAAC3D,IAAD,EAAU;AAC7E,sBAAIA,IAAI,CAAC8D,UAAL,IAAiB,GAArB,EAA0B;AACxB9D,wBAAI,CAACmK,QAAL,GAAe,EAAf;AACAnK,wBAAI,CAACkK,MAAL,GAAY,EAAZ;AACD;;AACD,0BAAI,CAAC0C,SAAL,GAAiB5M,IAAjB;;AACA,0BAAI,CAAC+I,WAAL,CAAiBQ,eAAjB,CAAiC,QAAI,CAACqD,SAAtC;;AACA,0BAAI,CAACT,WAAL,GAAmB,IAAnB;;AACA,0BAAI,CAACpD,WAAL,CAAiBS,cAAjB;;AACA,sBAAIpD,OAAO,GAAG,EAAd;;AACA,0BAAQwE,SAAR;AACE,yBAAK,MAAL;AACExE,6BAAO,GAAG,QAAV;AACA;;AACF,yBAAK,OAAL;AACEA,6BAAO,GAAG,QAAV;AACA;;AACF,yBAAK,MAAL;AACEA,6BAAO,GAAG,YAAV;AACA;;AACF;AACE;AAXJ;;AAeA,0BAAI,CAACzD,KAAL,CAAWc,IAAX,kBAA0B2C,OAA1B,qBAAmD,IAAnD,EAAyD;AACvDT,4BAAQ,EAAE,IAD6C;AAEvDC,oCAAgB,EAAE,KAFqC;AAGvDC,sCAAkB,EAAE;AAHmC,mBAAzD;AAKD,iBA9BD;AA+BD;AAAC,aAhDJ;AAkDD;;;iBAED,oBAAWnE,KAAX,EAAuB;AACrB,iBAAKuzB,iBAAL,GAAuB,IAAvB;AACA,gBAAMtzB,OAAO,GAAG,qBAAhB;;AACA,gBAAGA,OAAO,CAACK,IAAR,CAAaN,KAAK,CAACiD,MAAN,CAAanD,KAA1B,MAAqC,KAAxC,EAA8C;AAC5C,mBAAKyzB,iBAAL,GAAuB,KAAvB;AACD,aAFD,MAGI;AACF,mBAAKA,iBAAL,GAAuB,IAAvB;AACD;AACF;;;iBACD,yBAAgB;AAAA;;AACd,iBAAKre,GAAL,CAAS7J,aAAT,GAAyBpJ,SAAzB,CAAmC,UAACyE,IAAD,EAAU;AAC3CnD,qBAAO,CAACC,GAAR,CAAYkD,IAAZ;;AACA,mBAAI,IAAIxE,CAAC,GAAC,CAAV,EAAaA,CAAC,GAACwE,IAAI,CAACvE,MAApB,EAA2BD,CAAC,EAA5B,EAA+B;AAC7B,oBAAGwE,IAAI,CAACxE,CAAD,CAAJ,CAAQE,UAAR,KAAqB,GAAxB,EAA4B;AAC1B,0BAAI,CAACoD,UAAL,CAAgB2E,IAAhB,CAAqBzD,IAAI,CAACxE,CAAD,CAAzB;AACD;AACF;;AACDqB,qBAAO,CAACC,GAAR,CAAY,QAAI,CAACgC,UAAjB,EAP2C,CAQ3C;AACD,aATD;AAUD;;;iBAED,kBAAM;AACJwF,wBAAY,CAACuB,UAAb,CAAwB,iBAAxB;AACA,iBAAKzL,MAAL,CAAYwD,QAAZ,CAAqB,wCAArB;AACD;;;iBACD,sBAAa3B,KAAb,EAAmBrE,IAAnB,EAAuB;AACrB,mBAAOA,IAAI,CAACkH,UAAZ;AACD;;;iBACD,oBAAW7C,KAAX,EAAiBrE,IAAjB,EAAqB;AACnB,mBAAOA,IAAI,CAACO,QAAZ;AACD;;;iBACD,wBAAe8D,KAAf,EAAqBrE,IAArB,EAAyB;AACvB,mBAAOA,IAAI,CAAC8d,YAAZ;AACD;;;;;;;yBAvQUkX,8B,EAA8B,2H,EAAA,2I,EAAA,mK,EAAA,wI,EAAA,uH,EAAA,0J,EAAA,2I,EAAA,6I;AAAA,O;;;cAA9BA,8B;AAA8B,qD;AAAA,iB;AAAA,e;AAAA,m1D;AAAA;AAAA;ACpB3C;;AAAsB;;AAA0B;;AAAgE;;AAAiC;;AAAiC;;AAA2B;;AAAQ;;AACrN;;AACE;;AAAwB;AAAA,qBAAS,IAAAxuB,MAAA,EAAT;AAAiB,aAAjB;;AACtB;;AAAU;;AAAU;;AACtB;;AACA;;AACA;;AACF;;AAEA;;AACE;;AAEE;;AAmMF;;AACF;;AAEA;;AACE;;AACF;;;;AApNuH;;AAAA;;AAAiC;;AAAA;;AAKjJ;;AAAA;;AACA;;AAAA;;AAM4B;;AAAA;;AAuMjB;;AAAA;;;;;;;;;wED/LLwuB,8B,EAA8B;gBAL1C,uDAK0C;iBALhC;AACT5yB,oBAAQ,EAAE,8BADD;AAETC,uBAAW,EAAE,2CAFJ;AAGTC,qBAAS,EAAE,CAAC,2CAAD;AAHF,W;AAKgC,U;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEpB3C;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACCI;;AAAgC;;AAAI;;;;;;AAAO;;AAAiC;;AAAI;;;;;;AAAO;;AACzD;;AAAG;;;;;;AAKnC;;AACE;;AACF;;;;;;AACA;;AACE;;AACF;;;;;;AACA;;AACE;;AACF;;;;;;;;AAqHQ;;AAAsC;AAAA;;AAAA;;AAAA;AAAA;;AACpC;;AACF;;;;;;;;AAGE;;AAAuE;AAAA;;AAAA;;AAAA;AAAA;;AACrE;;AACF;;;;;;;;AAGA;;AAAuE;AAAA;;AAAA;;AAAA;AAAA;;AACrE;;AACF;;;;;;;;AAIA;;AAAuE;AAAA;;AAAA;;AAAA,wCAAsB,MAAtB;AAA4B,WAA5B;;AACrE;;AACF;;;;;;AAHF;;AACE;;AAES;;AACX;;;;;;AAJuE;;AAC5D;;AAAA;;;;;;;;AAKT;;AAAuE;AAAA;;AAAA;;AAAA,wCAAsB,MAAtB;AAA4B,WAA5B;;AACrE;;AACF;;;;;;AAHF;;AACE;;AAES;;AACX;;;;;;AAJwF;;AAC7E;;AAAA;;;;;;;;AAKT;;AAAuE;AAAA;;AAAA;;AAAA,wCAAsB,OAAtB;AAA6B,WAA7B;;AACrE;;AACF;;;;;;AAHF;;AACE;;AAES;;AACX;;;;;;AAJuF;;AAC5E;;AAAA;;;;;;;;AAKT;;AAAuE;AAAA;;AAAA;;AAAA,wCAAsB,QAAtB;AAA8B,WAA9B;;AACrE;;AACF;;;;;;AAHF;;AACE;;AAEU;;AACZ;;;;;;AAJ+C;;AACpC;;AAAA;;;;;;AAgBrB;;AACE;;AACF;;;;UDrKamzB,8B;AAaX,gDAAoBjzB,MAApB,EACUwG,KADV,EAEUgK,WAFV,EAGUlK,GAHV,EAIU3I,UAJV,EAKU0C,EALV,EAMUF,KANV,EAOUoG,WAPV,EAOmC;AAAA;;AAPf,eAAAvG,MAAA,GAAAA,MAAA;AACV,eAAAwG,KAAA,GAAAA,KAAA;AACA,eAAAgK,WAAA,GAAAA,WAAA;AACA,eAAAlK,GAAA,GAAAA,GAAA;AACA,eAAA3I,UAAA,GAAAA,UAAA;AACA,eAAA0C,EAAA,GAAAA,EAAA;AACA,eAAAF,KAAA,GAAAA,KAAA;AACA,eAAAoG,WAAA,GAAAA,WAAA;AAlBV,eAAAL,MAAA,GAAkB,KAAlB;AAGA,eAAAoI,OAAA,GAAmB,KAAnB;AACA,eAAA7H,WAAA,GAAqB,IAArB;AAIA,eAAAkD,WAAA,GAAwB,KAAxB;AACA,eAAAC,WAAA,GAAc,KAAKvJ,EAAL,CAAQQ,OAAR,CAAgB,YAAhB,CAAd;AAUK;;;;iBAEL,oBAAQ;AAAA;;AACN,iBAAKqyB,SAAL,CAAe,EAAf;AACA,iBAAK1sB,KAAL,CAAWE,aAAX,CAAyBvF,SAAzB,CAAmC,UAACwF,MAAD,EAAiB;AAClD,kBAAGA,MAAM,CAACC,GAAP,CAAW,IAAX,CAAH,EAAoB;AAClB,wBAAI,CAACV,MAAL,GAAc,IAAd;;AACA,wBAAI,CAACvI,UAAL,CAAgBw1B,mBAAhB,CAAoCxsB,MAAM,CAACC,GAAP,CAAW,IAAX,CAApC,EAAsDzF,SAAtD,CAAgE,UAAC3D,IAAD,EAAU;AACxE,sBAAGA,IAAH,EAAQ;AACL,4BAAI,CAAC01B,SAAL,CAAe11B,IAAf;;AACAiF,2BAAO,CAACC,GAAR,CAAYlF,IAAI,CAACyK,OAAjB;AACA,4BAAI,CAACnB,YAAL,GAAoBtJ,IAApB;;AACA,4BAAI,CAAC+I,WAAL,CAAiBQ,eAAjB,CAAiC,QAAI,CAACD,YAAtC;;AACA,4BAAI,CAACP,WAAL,CAAiBS,cAAjB;AACF;AACF,iBARD;AASD,eAXD,MAYI;AACF,wBAAI,CAACksB,SAAL,CAAe,IAAf;;AACA,wBAAI,CAACzsB,WAAL,GAAiB,KAAjB;AACD;AACF,aAjBD;AAkBA,iBAAK7F,YAAL,GAAoB,KAAKP,EAAL,CAAQQ,OAAR,CAAgB,YAAhB,CAApB;AACD;;;iBAED,mBAAUvC,IAAV,EAAgB;AACdmE,mBAAO,CAACC,GAAR,CAAYpE,IAAZ;AACA,iBAAK80B,YAAL,GAAoB,KAAK5iB,WAAL,CAAiBhS,KAAjB,CAAuB;AACzC60B,wBAAU,EAAE,CAAC/0B,IAAI,GAAGA,IAAI,CAACoW,QAAR,GAAmB,EAAxB,CAD6B;AAEzCpT,wBAAU,EAAE,CAAChD,IAAI,GAAGA,IAAI,CAACgD,UAAR,GAAqB,EAA1B,CAF6B;AAGzCoG,oBAAM,EAAE,CAACpJ,IAAI,GAAGA,IAAI,CAACoJ,MAAR,GAAiB,EAAtB,CAHiC;AAIzCC,sBAAQ,EAAE,CAACrJ,IAAI,GAAGA,IAAI,CAACqJ,QAAR,GAAmB,EAAxB,CAJ+B;AAKzC2rB,0BAAY,EAAE,CAACh1B,IAAI,GAAGA,IAAI,CAACg1B,YAAR,GAAuB,EAA5B,EAAgC,0DAAW50B,QAA3C,CAL2B;AAMzC60B,2BAAa,EAAE,CAACj1B,IAAI,GAAGA,IAAI,CAACi1B,aAAR,GAAwB,EAA7B,EAAiC,0DAAW70B,QAA5C,CAN0B;AAOzC80B,2BAAa,EAAE,CAACl1B,IAAI,GAAGA,IAAI,CAACk1B,aAAR,GAAwB,EAA7B,EAAiC,0DAAW90B,QAA5C,CAP0B;AAQzCoJ,wBAAU,EAAE,CAACxJ,IAAI,GAAGA,IAAI,CAACwJ,UAAR,GAAqB,EAA1B,CAR6B;AASzC2rB,0BAAY,EAAE,CAACn1B,IAAI,GAAGA,IAAI,CAACm1B,YAAR,GAAuB,EAA5B,CAT2B;AAUzC7yB,0BAAY,EAAE,CAAC,EAAD,CAV2B;AAWzC8yB,wCAA0B,EAAE,CAC1Bp1B,IAAI,GAAGA,IAAI,CAACo1B,0BAAR,GAAqC,EADf,EAE1B,0DAAWh1B,QAFe,CAXa;AAezCi1B,2BAAa,EAAE,CAACr1B,IAAI,GAAGA,IAAI,CAACq1B,aAAR,GAAwB,EAA7B,CAf0B;AAgBzCC,8BAAgB,EAAE,CAACt1B,IAAI,GAAGA,IAAI,CAACs1B,gBAAR,GAA2B,EAAhC,CAhBuB;AAiBzCC,4BAAc,EAAE,CAACv1B,IAAI,GAAGA,IAAI,CAACu1B,cAAR,GAAyB,EAA9B,CAjByB;AAkBzCC,6BAAe,EAAE,CAACx1B,IAAI,GAAGA,IAAI,CAACw1B,eAAR,GAA0B,EAA/B,CAlBwB;AAmBzCC,8BAAgB,EAAE,CAACz1B,IAAI,GAAGA,IAAI,CAACy1B,gBAAR,GAA2B,EAAhC,CAnBuB;AAoBzC;AACAC,wBAAU,EAAE,CAAC11B,IAAI,GAAGA,IAAI,CAAC01B,UAAR,GAAqB,EAA1B,EAA8B,0DAAWt1B,QAAzC,CArB6B;AAsBzCu1B,0BAAY,EAAE,CAAC31B,IAAI,GAAGA,IAAI,CAAC21B,YAAR,GAAuB,EAA5B,EAAgC,0DAAWv1B,QAA3C,CAtB2B;AAuBzCuJ,qBAAO,EAAE,CAAC3J,IAAI,GAAGA,IAAI,CAAC2J,OAAR,GAAkB,CAAvB,CAvBgC;AAwBzCisB,oCAAsB,EAAE,CAAC51B,IAAI,GAAGA,IAAI,CAAC41B,sBAAR,GAAiC,QAAtC;AAxBiB,aAAvB,CAApB;AA2BD;;;iBAED,kBAAS;AAAA;;AACPzxB,mBAAO,CAACC,GAAR,CAAY,KAAK0wB,YAAL,CAAkBp0B,KAA9B;AACA,iBAAKo0B,YAAL,CAAkBxsB,GAAlB,CAAsB,cAAtB,EAAsC8K,QAAtC,CAA+C,KAAK9H,WAAL,CAAiB3C,QAAhE;AACA,iBAAKtJ,UAAL,CAAgBw2B,oBAAhB,CAAqC,KAAKf,YAAL,CAAkBp0B,KAAvD,EAA8DmC,SAA9D,CAAwE,UAACyE,IAAD,EAAU;AAChFnD,qBAAO,CAACC,GAAR,CAAYkD,IAAZ;;AACA,sBAAI,CAACzF,KAAL,CAAWc,IAAX,CAAgB,2BAAhB,EAA6C,IAA7C,EAAmD;AACjDkC,wBAAQ,EAAE,IADuC;AAEjDC,gCAAgB,EAAE,KAF+B;AAGjDC,kCAAkB,EAAE;AAH6B,eAAnD;;AAKA,sBAAI,CAACrD,MAAL,CAAYwD,QAAZ,CAAqB,CAAC,kCAAD,CAArB;AACD,aARD;AASD;;;iBAED,sBAAU;AACR,iBAAKiD,WAAL,GAAiB,KAAjB;AACD;;;iBAED,sBAAa2B,SAAb,EAAwB;AAAA;;AACtB,+DAAKC,IAAL,CACE;AACE;AACAC,kBAAI,EAAE,uBAAsBF,SAAtB,GAAiC,UAAjC,GAA8C,0BAFtD;AAGEG,8BAAgB,EAAE,IAHpB;AAIEC,gCAAkB,EAAE,SAJtB;AAKEC,+BAAiB,EAAE,MALrB;AAME;AACAC,8BAAgB,EAAE,IAPpB;AAQEC,+BAAiB,EAAE,KARrB;AAQ4B,sBAAQ;AARpC,aADF,EAWEC,IAXF,CAWQ,UAAAC,MAAM,EAAI;AAChB,kBAAGA,MAAM,CAACC,WAAP,IAAoB,IAAvB,EAA4B;AAC1B,oBAAI7K,OAAO,GAAQ,EAAnB;AACJA,uBAAO,CAACC,EAAR,GAAa,QAAI,CAAC4I,YAAL,CAAkBmB,OAA/B;AACAhK,uBAAO,CAACmK,SAAR,GAAoBA,SAApB;AACAnK,uBAAO,CAAC2C,YAAR,GAAuB,QAAI,CAACA,YAAL,CAAkBqG,QAAzC;;AACA,wBAAI,CAACtJ,UAAL,CAAgBy2B,0BAAhB,CAA2Cn2B,OAA3C,EAAoDkD,SAApD,CAA8D,UAAC3D,IAAD,EAAU;AACtE,0BAAI,CAACsJ,YAAL,GAAoBtJ,IAApB;;AACA,0BAAI,CAAC+I,WAAL,CAAiBQ,eAAjB,CAAiC,QAAI,CAACD,YAAtC;;AACA,0BAAI,CAACP,WAAL,CAAiBS,cAAjB;;AACA,sBAAIpD,OAAO,GAAG,EAAd;;AACA,0BAAQwE,SAAR;AACE,yBAAK,MAAL;AACExE,6BAAO,GAAG,QAAV;AACA;;AACF,yBAAK,OAAL;AACEA,6BAAO,GAAG,QAAV;AACA;;AACF,yBAAK,MAAL;AACEA,6BAAO,GAAG,YAAV;AACA;;AACF;AACE;AAXJ;;AAaA,0BAAI,CAACzD,KAAL,CAAWc,IAAX,kBAA0B2C,OAA1B,oBAAkD,IAAlD,EAAwD;AACtDT,4BAAQ,EAAE,IAD4C;AAEtDC,oCAAgB,EAAE,KAFoC;AAGtDC,sCAAkB,EAAE;AAHkC,mBAAxD;AAKD,iBAvBD;AAwBG;AAAC,aAzCJ;AA2CD;;;iBAED,kBAAS;AACP,iBAAKrD,MAAL,CAAYwD,QAAZ,CAAqB,CAAC,kCAAD,CAArB;AACD;;;;;;;yBA/IUyvB,8B,EAA8B,uH,EAAA,+H,EAAA,2H,EAAA,gI,EAAA,2I,EAAA,0J,EAAA,wI,EAAA,6I;AAAA,O;;;cAA9BA,8B;AAA8B,qD;AAAA,iB;AAAA,gB;AAAA,0nE;AAAA;AAAA;AChB3C;;AAAsB;;AAA0B;;AAC5C;;AAA2C;;AAA4C;;AAC9C;;AAAO;;AAAQ;;AAC5D;;AACE;;AAAwB;AAAA,qBAAS,IAAAjvB,MAAA,EAAT;AAAiB,aAAjB;;AACtB;;AAAU;;AAAU;;AACtB;;AACA;;AAGA;;AAGA;;AAGA;;AAaF;;AAKA;;AACE;;AACE;;AACE;;AACE;;AACE;;AACE;;AACF;;AACF;;AACA;;AACE;;AACE;;AAEF;;AACF;;AACF;;AACA;;AACE;;AAEE;;AAAW;;AAAyB;;AACpC;;AACE;;AACF;;AACF;;AAEA;;AACE;;AAAW;;AAAuB;;AAClC;;AACE;;AACF;;AACF;;AAEA;;AACE;;AAAW;;AAAwB;;AACnC;;AAEE;;AACF;;AACF;;AAEA;;AACE;;AAAW;;AAAwB;;AACnC;;AAEE;;AACF;;AACF;;AACA;;AACE;;AAAW;;AAA0B;;AACrC;;AAEE;;AACF;;AACF;;AAEA;;AACE;;AAAW;;AAAoC;;AAC/C;;AAEE;;AACF;;AACF;;AAEA;;AACE;;AAAW;;AAAsB;;AACjC;;AAEE;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AAA8B;;AAAmB;;AACjD;;AACE;;AACE;;AACA;;AAA4B;;AAAmC;;AACjE;;AACA;;AACE;;AACA;;AAA4B;;AAAmC;;AACjE;;AACA;;AACE;;AACA;;AAAyB;;AAAgC;;AAC3D;;AACA;;AACE;;AACA;;AAA6B;;AAAgD;;AAC/E;;AACF;;AAGF;;AACF;;AACA;;AACE;;AACE;;AAGA;;AACA;;AACE;;AAES;;AACX;;AACA;;AACE;;AAES;;AACX;;AAEA;;AAKA;;AAKA;;AAKA;;AAMA;;AAAuC;AAAA,qBAAS,IAAAA,MAAA,EAAT;AAAiB,aAAjB;;AACrC;;AACF;;AAEF;;AACF;;AAEF;;AACF;;AACF;;AAEA;;;;AAlLW;;AAAA;;AAA2C;;AAAA;;AAC/C;;AAAA;;AAKE;;AAAA;;AAGA;;AAAA;;AAGA;;AAAA;;AAuBe;;AAAA;;AA0BS;;AAAA;;AAQA;;AAAA;;AAQA;;AAAA;;AAOA;;AAAA;;AAQA;;AAAA;;AAQA;;AAAA;;AASI;;AAAA;;AAIA;;AAAA;;AAIA;;AAAA;;AAIA;;AAAA;;AAUlB;;AAAA;;AAIJ;;AAAA;;AACM;;AAAA;;AAIL;;AAAA;;AACK;;AAAA;;AAKL;;AAAA;;AAKA;;AAAA;;AAKA;;AAAA;;AAKA;;AAAA;;AAiBV;;AAAA;;;;;;;;;wEDnKOivB,8B,EAA8B;gBAL1C,uDAK0C;iBALhC;AACTrzB,oBAAQ,EAAE,8BADD;AAETC,uBAAW,EAAE,2CAFJ;AAGTC,qBAAS,EAAE,CAAC,2CAAD;AAHF,W;AAKgC,U;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEhB3C;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAMau0B,wB,6BAKX,oCAAc;AAAA;;AAHd;AACU,aAAApvB,UAAA,GAAa,IAAI,oDAAJ,CAA4B,UAA5B,CAAb;AAGR,O;;;yBANSovB,wB;AAAwB,O;;;eAAxBA,wB;AAAwB,iBAAxBA,wBAAwB,K;AAAA,oBAFvB;;;;;wEAEDA,wB,EAAwB;gBAHpC,wDAGoC;iBAHzB;AACVC,sBAAU,EAAE;AADF,W;AAGyB,U;;;;;;;;;;;;;;;;;;;;ACNrC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACoCY;;AACE;;AACF;;;;;;AAFwE;;AACtE;;AAAA;;;;;;AAwBN;;AAA+F;;AAE/F;;;;;;AACA;;AAAqC;;AAAsB;;;;;;AAAtB;;AAAA;;;;;;AAIrC;;AAA+F;;AAC/F;;;;;;AACA;;AAAqC;;AAAsB;;;;;;AAAtB;;AAAA;;;;;;AAIrC;;AAAiG;;AAC9F;;;;;;AACH;;AAAqC;;AAAuB;;;;;;AAAvB;;AAAA;;;;;;AAIrC;;AAAsG;;AACtG;;;;;;AACA;;AAAqC;;AAAyB;;;;;;AAAzB;;AAAA;;;;;;AAIrC;;AAAsG;;AACtG;;;;;;AACA;;AAAqC;;AAAyB;;;;;;AAAzB;;AAAA;;;;;;AAIrC;;AAAmC;;AAAM;;;;;;;;AACzC;;AACE;;AAAoE;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAClE;;AAAU;;AAAI;;AAChB;;AACA;;AAAmD;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACjD;;AAAU;;AAAM;;AAClB;;AACF;;;;;;AAGF;;;;;;AACA;;;;;;;;UD7EOC,yB;AAmBX,2CAAoBv0B,MAApB,EACUG,KADV,EAEUC,MAFV,EAGYE,cAHZ,EAIY3C,UAJZ,EAKYsC,cALZ,EAK2C;AAAA;;AALvB,eAAAD,MAAA,GAAAA,MAAA;AACV,eAAAG,KAAA,GAAAA,KAAA;AACA,eAAAC,MAAA,GAAAA,MAAA;AACE,eAAAE,cAAA,GAAAA,cAAA;AACA,eAAA3C,UAAA,GAAAA,UAAA;AACA,eAAAsC,cAAA,GAAAA,cAAA;AArBZ,eAAAU,mBAAA,GAA+B,CAA/B;AAEA,eAAAJ,UAAA,GAAa,IAAI,0EAAJ,EAAb;AACA,eAAAC,gBAAA,GAA6B,CAAC,WAAD,EAAc,WAAd,EAA2B,YAA3B,EAAyC,cAAzC,EAAwD,cAAxD,EAAwE,QAAxE,CAA7B;AAEA,eAAAC,cAAA,GAAmD,CACjD;AAAEC,eAAG,EAAE,WAAP;AAAoB1B,iBAAK,EAAE;AAA3B,WADiD,EAEjD;AAAE0B,eAAG,EAAE,WAAP;AAAoB1B,iBAAK,EAAE;AAA3B,WAFiD,EAGjD;AAAE0B,eAAG,EAAE,cAAP;AAAuB1B,iBAAK,EAAE;AAA9B,WAHiD,EAIjD;AAAE0B,eAAG,EAAE,cAAP;AAAuB1B,iBAAK,EAAE;AAA9B,WAJiD,CAAnD;AAkBA,eAAAw1B,QAAA,GAA+B,EAA/B;AAF8C;;;;iBAI9C,oBAAQ;AACN,iBAAKC,WAAL;AACD;;;iBAED,2BAAkB;AAChB,iBAAKl0B,UAAL,CAAgBQ,SAAhB,GAA4B,KAAKA,SAAjC;AACA,iBAAKR,UAAL,CAAgBS,IAAhB,GAAuB,KAAKA,IAA5B;AACD;;;iBAGD,uBAAc;AAAA;;AACZ,iBAAKrD,UAAL,CAAgB82B,WAAhB,GAA8BtzB,SAA9B,CAAwC,UAAC3D,IAAD,EAAe;AAErD,sBAAI,CAAC+C,UAAL,GAAkB,IAAI,0EAAJ,CAAuB/C,IAAvB,CAAlB;AACA,sBAAI,CAAC+C,UAAL,CAAgBQ,SAAhB,GAA4B,QAAI,CAACA,SAAjC;AACA,sBAAI,CAACR,UAAL,CAAgBS,IAAhB,GAAuB,QAAI,CAACA,IAA5B;AACD,aALD;AAMD;;;iBAED,sBAAa9B,KAAb,EAAoB;AAAA;;AAClBuD,mBAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBxD,KAAK,CAACyD,IAAN,CAAW,CAAX,EAAcC,KAAd,CAAoB,CAApB,CAArB;AACA,gBAAMC,IAAI,GAAS3D,KAAK,CAACyD,IAAN,CAAW,CAAX,EAAcC,KAAd,CAAoB,CAApB,CAAnB;AACA,gBAAME,UAAU,GAAG,IAAIC,QAAJ,EAAnB;AACAD,sBAAU,CAACE,MAAX,CAAkB,YAAlB,EAAgC,YAAhC;AACAF,sBAAU,CAACE,MAAX,CAAkB,MAAlB,EAA0BH,IAA1B;AACA,iBAAKlF,UAAL,CAAgBsF,cAAhB,CAA+BH,UAA/B,EAA2C3B,SAA3C,CAAqD,UAAC+B,QAAD,EAAc;AACjET,qBAAO,CAACC,GAAR,CAAYQ,QAAZ;;AACA,sBAAI,CAACuxB,WAAL;;AACA,sBAAI,CAACt0B,KAAL,CAAWc,IAAX,+BAA8C,IAA9C,EAAoD;AAClDkC,wBAAQ,EAAE,IADwC;AAElDC,gCAAgB,EAAE,KAFgC;AAGlDC,kCAAkB,EAAE;AAH8B,eAApD;AAKD,aARD;AASC,iBAAKoxB,WAAL;AACF;;;iBAED,qBAAkC;AAAA,gBAAxBj3B,IAAwB,uEAAZ,EAAY;AAAA,gBAAR6H,KAAQ;AAChC,iBAAKrF,MAAL,CAAYwD,QAAZ,CAAqB,CAAC,8BAAD,CAArB,EAAsD;AAAEC,yBAAW,EAAE;AAAEvF,kBAAE,EAAEV,IAAI,CAACU;AAAX;AAAf,aAAtD;AACD;;;iBAED,kBAAM;AACJ,iBAAK8B,MAAL,CAAYwD,QAAZ,CAAqB,qBAArB;AACD;;;iBACD,kBAAS/B,QAAT,EAAmBC,CAAnB,EAAoB;AAElB,iBAAKC,WAAL,CAAiBF,QAAjB;AACA,iBAAKG,WAAL,CAAiBF,CAAjB;AACD;;;iBAED,qBAAYD,QAAZ,EAAsB;AACpB,iBAAKlB,UAAL,CAAgBuB,eAAhB,GAAkC,UAACtE,IAAD,EAAYuE,MAAZ,EAAwC;AACxE,qBACEvE,IAAI,CAACiE,QAAD,CAAJ,CAAeO,iBAAf,GAAmCC,QAAnC,CAA4CF,MAA5C,CADF;AAGD,aAJD;AAKD;;;iBAED,uBAAW;AACT,iBAAKxB,UAAL,CAAgBwB,MAAhB,GAAyB,EAAzB;AACA,iBAAKuC,SAAL,CAAec,aAAf,CAA6BpG,KAA7B,GAAqC,EAArC;AACA,iBAAK2B,mBAAL,GAA2B,CAA3B;AACA;;;iBAEF,oBAAWsM,GAAX,EAAgB;AAAA;;AACd,iBAAK3M,cAAL,CAAoBqD,OAApB,CAA4B;AAACC,qBAAO,mBAAYqJ,GAAG,CAACqC,SAAhB;AAAR,aAA5B,EACGnO,SADH,CACa,UAAA2C,GAAG,EAAI;AAChB,kBAAIA,GAAJ,EAAS;AACP,wBAAI,CAAC1D,MAAL,CAAYa,IAAZ;;AACA,wBAAI,CAACtD,UAAL,CAAgB2vB,WAAhB,CAA4BrgB,GAAG,CAAC/O,EAAhC,EACGiD,SADH,CACa,UAAA3D,IAAI,EAAI,CAElB,CAHH,EAGQ,UAAAuI,GAAG,EAAE;AACT,sBAAIA,GAAG,CAACC,MAAJ,IAAc,GAAlB,EAAuB;AACrB,4BAAI,CAAC5F,MAAL,CAAYnB,KAAZ;;AACA,4BAAI,CAACkB,KAAL,CAAWc,IAAX,CAAgB,6BAAhB,EAA+C,IAA/C,EAAqD;AACnDkC,8BAAQ,EAAE,IADyC;AAEnDC,sCAAgB,EAAE,KAFiC;AAGnDC,wCAAkB,EAAE;AAH+B,qBAArD;AAKD;;AAGH,0BAAI,CAACoxB,WAAL;AAED,iBAhBD;AAiBD;AACF,aAtBH;AAuBD;;;iBAIA,qBAAYv1B,KAAZ,EAA0B;AACzB,gBAAMgD,WAAW,GAAIhD,KAAK,CAACiD,MAAN,CAAkCnD,KAAvD;AACA,iBAAKuB,UAAL,CAAgBwB,MAAhB,GAAyBG,WAAW,CAACE,IAAZ,GAAmBC,WAAnB,EAAzB;AACD;;;iBAED,4BAAmBC,SAAnB,EAAoC;AAClC,gBAAIA,SAAS,CAACC,SAAd,EAAyB;AACvB,mBAAKtC,cAAL,CAAoBuC,QAApB,kBAAuCF,SAAS,CAACC,SAAjD;AACD,aAFD,MAEO;AACL,mBAAKtC,cAAL,CAAoBuC,QAApB,CAA6B,iBAA7B;AACD;AACF;;;iBAED,kBAAM;AACJ,iBAAKxC,MAAL,CAAYwD,QAAZ,CAAqB,CAAC,8BAAD,CAArB;AACD;;;iBACD,sBAAa3B,KAAb,EAAmBE,MAAnB,EAAyB;AACvB,mBAAOA,MAAM,CAAC/C,KAAd;AACD;;;;;;;yBA1IUu1B,yB,EAAyB,uH,EAAA,wI,EAAA,mK,EAAA,sK,EAAA,2I,EAAA,gI;AAAA,O;;;cAAzBA,yB;AAAyB,8C;AAAA;AAAA;;;sEAezB,8D,EAAO,I;;sEACP,wE,EAAY,I;;;;;;;;;;;;;;;;;;AC3CzB;;AAAsB;;AAA0B;;AAA8E;;AAAQ;;AACtI;;AACE;;AAAwB;AAAA,qBAAS,IAAAvwB,MAAA,EAAT;AAAiB,aAAjB;;AACtB;;AAAU;;AAAU;;AACtB;;AACA;;AACC;;AACD;;AACA;;AACA;;AACE;;AAAU;;AAAS;;AACrB;;AACA;;AACE;;AACE;;AAAoC;;AAAM;;AAC1C;;AAIE;AAAA,qBAAU,IAAAC,YAAA,QAAV;AAA8B,aAA9B;;AAJF;;AAMF;;AACA;;AACE;;AAAM;;AAAQ;;AAChB;;AACF;;AACF;;AAEA;;AACE;;AACE;;AACE;;AACE;;AAEE;;AAAsC;AAAA;AAAA;;AACpC;;AAAsB;;AAAM;;AAC5B;;AAGF;;AACF;;AACF;;AACA;;AACE;;AAEE;;AAA2B;AAAA;;AAAA;;AAAA,qBAAS,IAAAE,QAAA,mBAAT;AAAwC,aAAxC;;AAA3B;;AACA;;AAAoB;;AAAM;;AAC5B;;AACF;;AACA;;AACE;;AAAqC;AAAA,qBAAS,IAAA2J,WAAA,EAAT;AAAsB,aAAtB;;AAA+C;;AAAY;;AAClG;;AACF;;AACA;;AACE;;AAAwC;AAAA,qBAAS,IAAA3H,MAAA,EAAT;AAAiB,aAAjB;;AAAwD;;AAAO;;AACzG;;AACF;;AACA;;AACE;;AAA4D;AAAA,qBAAiB,IAAA9B,kBAAA,QAAjB;AAA2C,aAA3C;;AAE1D;;AACE;;AAGA;;AACF;;AAEA;;AACE;;AAEA;;AACF;;AAEA;;AACE;;AAEA;;AACF;;AAEA;;AACE;;AAEA;;AACF;;AAEA;;AACE;;AAEA;;AACF;;AAEA;;AACE;;AACA;;AAQF;;AAEA;;AACA;;AACF;;AACA;;AACF;;AACF;;;;;;AAnG0B;;AAAA;;AAyBsB;;AAAA;;AAEL;;AAAA,oGAAmB,cAAnB,EAAmB,gBAAnB;;AAsBb;;AAAA;;AA6CP;;AAAA;;AACa;;AAAA;;AAEjB;;AAAA;;;;;;;;;wED/ENkwB,yB,EAAyB;gBALrC,uDAKqC;iBAL3B;AACT30B,oBAAQ,EAAE,uBADD;AAETC,uBAAW,EAAE,oCAFJ;AAGTC,qBAAS,EAAE,CAAC,oCAAD;AAHF,W;AAK2B,U;;;;;;;;;;;;;;;AAEZwE,mBAAS,EAAE,CAAF;kBAAhC,uDAAgC;mBAAtB,W;AAAsB,WAAE,C;AAaftD,cAAI,EAAE,CAAF;kBAAvB,uDAAuB;mBAAb,8D;AAAa,WAAE,C;AACDD,mBAAS,EAAE,CAAF;kBAAjC,uDAAiC;mBAAvB,wE;AAAuB,WAAE;;;;;;;;;;;;;;;;;;;AE3CtC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACA+F;;AAAsB;;AAAG;;;;;;AAAO;;AAAqB;;AAAI;;;;;;AAMpJ;;AAAqC;;AAAoB;;;;;;AACzD;;AAAoC;;AAAqB;;;;;;AAmBjC;;AACI;;AACJ;;;;;;AAeA;;AACI;;AACJ;;;;;;AAcA;;AACI;;AACJ;;;;;;AAcF;;AACI;;AACJ;;;;;;AAkBF;;AACI;;AACJ;;;;;;AAcF;;AACI;;AACJ;;;;;;AASU;;AAAoE;;AAAiB;;;;;;AAAzC;;AAAwB;;AAAA;;;;;;AAGxE;;AACI;;AACJ;;;;;;AAVR;;AACI;;AAAW;;AAAW;;AACtB;;AAEI;;AACI;;AAEJ;;AACA;;AAIJ;;AACJ;;;;;;AAR0C;;AAAA;;AAGtB;;AAAA;;;;;;AAMpB;;AACI;;AAAW;;AAAW;;AACtB;;AACI;;AAOJ;;AAEH;;;;;;AALO;;AAAA;;;;;;AAiBA;;AACI;;AACJ;;;;;;AAmBR;;AACI;;AACJ;;;;;;AAIP;;AACG;;AAAW;;AAAQ;;AACnB;;AACI;;AACI;;AAA4B;;AAAO;;AAEvC;;AAEJ;;AAEH;;;;;;AACA;;AACG;;AAAW;;AAAQ;;AACnB;;AACI;;AAOJ;;AAEH;;;;;;AALO;;AAAA;;;;;;AAYE;;AACE;;AACF;;;;;;AAFsC;;AACpC;;AAAA;;;;;;AAPR;;AACE;;AAAW;;AAAS;;AACpB;;AAEI;;AACE;;AAAqB;;AAAM;;AAC7B;;AAGF;;AAKF;;AACF;;;;;;AATmC;;AAAA;;;;;;AAUnC;;AACE;;AAAW;;AAAS;;AACpB;;AACE;;AAEF;;AACF;;;;;;;;AAeH;;AACG;;AAAW;;AAAQ;;AACnB;;AACI;;AAQA;;AAAoB;AAAA;;AAAA;;AAAA;AAAA;;AAAgD;;AAA0C;;AAClH;;AACJ;;;;;;AATQ;;AAAA,oGAAwB,MAAxB,EAAwB,kCAAxB;;AAOoE;;AAAA;;;;;;AAG5E;;;;;;;;AAQM;;AAIE;AAAA;;AAAA;;AAAA;AAAA;;AAEA;;AACF;;;;;;AALE;;;;;;;;AAOA;;AAAyI;AAAA;;AAAA;;AAAA;AAAA;;AACrI;;AACF;;;;;;AAFsE;;;;;;;;AAMxE;;AAAwE;AAAA;;AAAA;;AAAA;AAAA;;AACtE;;AACF;;;;;;;;AAGA;;AAAwE;AAAA;;AAAA;;AAAA,wCAAsB,MAAtB;AAA4B,WAA5B;;AACtE;;AACF;;;;;;AAHF;;AACE;;AAES;;AACX;;;;;;AAJoE;;AACzD;;AAAA;;;;;;;;AAKT;;AAAuE;AAAA;;AAAA;;AAAA,wCAAsB,MAAtB;AAA4B,WAA5B;;AACrE;;AACF;;;;;;AAHF;;AACE;;AAES;;AACX;;;;;;AAJkF;;AACvE;;AAAA;;;;;;;;AAKT;;AAAuE;AAAA;;AAAA;;AAAA,wCAAsB,OAAtB;AAA6B,WAA7B;;AACrE;;AACF;;;;;;AAHF;;AACE;;AAES;;AACX;;;;;;AAJiF;;AACtE;;AAAA;;;;;;;;AAMT;;AAAuE;AAAA;;AAAA;;AAAA;AAAA;;AACrE;;AACF;;;;;;AAHF;;AACE;;AAEU;;AACZ;;;;;;AAJ4C;;AACjC;;AAAA;;;;;;AAwBzB;;;;UDtTS2zB,2B;AAeX,6CAAoB10B,MAApB,EAA0CwG,KAA1C,EACUgK,WADV,EAC4CnQ,EAD5C,EAEU+T,GAFV,EAEiC7N,WAFjC,EAEsEouB,OAFtE,EAGUx0B,KAHV,EAGoCmG,GAHpC,EAG4D;AAAA;;AAHxC,eAAAtG,MAAA,GAAAA,MAAA;AAAsB,eAAAwG,KAAA,GAAAA,KAAA;AAChC,eAAAgK,WAAA,GAAAA,WAAA;AAAkC,eAAAnQ,EAAA,GAAAA,EAAA;AAClC,eAAA+T,GAAA,GAAAA,GAAA;AAAuB,eAAA7N,WAAA,GAAAA,WAAA;AAAqC,eAAAouB,OAAA,GAAAA,OAAA;AAC5D,eAAAx0B,KAAA,GAAAA,KAAA;AAA0B,eAAAmG,GAAA,GAAAA,GAAA;AAbpC,eAAAqD,WAAA,GAAoB,KAApB;AACA,eAAAzD,MAAA,GAAe,KAAf;AAGA,eAAA0uB,UAAA,GAAmB,KAAnB;AACA,eAAAC,IAAA,GAAK,IAAL;AACA,eAAApuB,WAAA,GAAqB,IAArB;AAGA,eAAApI,IAAA,GAAc,EAAd;AAI+D;;;;iBAE/D,oBAAQ;AAAA;;AACN,iBAAKy2B,SAAL;AACA,iBAAKC,aAAL;AACA,iBAAKzqB,SAAL;AACA,iBAAK1J,YAAL,GAAoB,KAAKP,EAAL,CAAQQ,OAAR,CAAgB,YAAhB,EAA8BoG,QAAlD;AACA,iBAAKT,KAAL,CAAWE,aAAX,CAAyBvF,SAAzB,CAAmC,UAACwF,MAAD,EAAiB;AAClDlE,qBAAO,CAACC,GAAR,CAAYiE,MAAZ;;AACA,kBAAGA,MAAM,CAACC,GAAP,CAAW,IAAX,CAAH,EAAoB;AACjB,wBAAI,CAACV,MAAL,GAAc,IAAd;AACD,wBAAI,CAAChI,EAAL,GAAUyI,MAAM,CAACC,GAAP,CAAW,IAAX,CAAV;;AACA,wBAAI,CAACwN,GAAL,CAAS4gB,SAAT,CAAmBruB,MAAM,CAACC,GAAP,CAAW,IAAX,CAAnB,EAAqCzF,SAArC,CAA+C,UAACyE,IAAD,EAAS;AACrD,0BAAI,CAACmvB,aAAL,CAAmBnvB,IAAnB;;AACA,sBAAGA,IAAI,CAACsuB,sBAAL,IAA6B,QAAhC,EAAyC;AACxC,4BAAI,CAACU,UAAL,GAAgB,IAAhB;;AACA,4BAAI,CAACK,eAAL,CAAqBruB,GAArB,CAAyB,UAAzB,EAAqC8K,QAArC,CAA8C9L,IAAI,CAACsvB,iBAAnD;AACD,mBAHA,MAGI;AACJ,4BAAI,CAACN,UAAL,GAAgB,KAAhB;AACA;;AACA,0BAAI,CAACxqB,SAAL,GAAiBxE,IAAjB;AACA,0BAAI,CAAC+D,WAAL,GAAmB,IAAnB;;AACA,0BAAI,CAACpD,WAAL,CAAiBQ,eAAjB,CAAiC,QAAI,CAACqD,SAAtC;;AACA3H,yBAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8B,QAAI,CAAC0H,SAAnC;AACF,iBAZD;AAaD,eAhBD,MAiBI;AACF,wBAAI,CAAC3D,WAAL,GAAiB,KAAjB;AACAhE,uBAAO,CAACC,GAAR,CAAY,MAAZ;AAED;AACF,aAxBD;AAyBA,iBAAK9B,YAAL,GAAoB,KAAKP,EAAL,CAAQQ,OAAR,CAAgB,YAAhB,EAA8BoG,QAAlD;AACD;;;iBAED,qBAAS;AAAA;;AACP,iBAAKmN,GAAL,CAAS+gB,wBAAT,GAAoCh0B,SAApC,CAA8C,UAAC3D,IAAD,EAAU;AACtD,sBAAI,CAAC43B,QAAL,GAAc53B,IAAd;AACAiF,qBAAO,CAACC,GAAR,CAAY,QAAI,CAAC0yB,QAAjB;AACD,aAHD;AAID;;;iBACD,qBAAY;AAAA;;AACV,gBAAIxpB,WAAW,GAAE,GAAjB;AACA,iBAAKwI,GAAL,CAASvI,WAAT,CAAqBD,WAArB,EAAkCzK,SAAlC,CAA4C,UAACyE,IAAD,EAAU;AACpD,sBAAI,CAACvH,IAAL,GAAYuH,IAAZ;AACD,aAFD;AAGD;;;iBAED,uBAAcpI,IAAd,EAAmB;AAEjB,gBAAI6iB,IAAJ;;AACA,gBAAG7iB,IAAH,EAAQ;AACN6iB,kBAAI,GAAE,KAAK+U,QAAL,CAAcrzB,MAAd,CAAqB,UAACzD,IAAD,EAAQ;AACjC,uBAAOd,IAAI,CAACuiB,MAAL,IAAezhB,IAAI,CAACJ,EAA3B;AACD,eAFK,CAAN;AAGD;;AACD,iBAAK+M,QAAL,GAAgB,KAAK5M,IAAL,CAAU6M,IAAV,CAAe,UAAAC,CAAC;AAAA,qBAAIA,CAAC,CAACjN,EAAF,IAAQV,IAAI,CAACK,MAAjB;AAAA,aAAhB,CAAhB;AACA4E,mBAAO,CAACC,GAAR,CAAY,iBAAZ,EAA8B,KAAKuI,QAAnC;AACAxI,mBAAO,CAACC,GAAR,CAAY,QAAZ,EAAqB2d,IAArB;AACA,iBAAK4U,eAAL,GAAuB,KAAKzkB,WAAL,CAAiBhS,KAAjB,CAAuB;AAC5CyI,sBAAQ,EAAE,CAACzJ,IAAI,GAAGA,IAAI,CAACyJ,QAAR,GAAmB,EAAxB,EAA2B,CAAC,0DAAWvI,QAAZ,CAA3B,CADkC;AAE5C22B,mBAAK,EAAE,CAAC73B,IAAI,GAAGA,IAAI,CAAC63B,KAAR,GAAgB,EAArB,EAAwB,CAAC,0DAAW32B,QAAZ,CAAxB,CAFqC;AAG5CkQ,oBAAM,EAAE,CAACpR,IAAI,GAAGA,IAAI,CAACoR,MAAR,GAAiB,EAAtB,EAAyB,CAAC,0DAAWlQ,QAAZ,CAAzB,CAHoC;AAI5CgG,wBAAU,EAAC,CAAClH,IAAI,GAAGA,IAAI,CAACkH,UAAR,GAAqB,EAA1B,EAA6B,CAAC,0DAAWhG,QAAZ,CAA7B,CAJiC;AAK5CZ,wBAAU,EAAC,CAACN,IAAI,GAAGA,IAAI,CAACM,UAAR,GAAqB,EAA1B,EAA6B,CAAC,0DAAWY,QAAZ,CAA7B,CALiC;AAM5CX,sBAAQ,EAAC,CAACP,IAAI,GAAGA,IAAI,CAACO,QAAR,GAAmB,EAAxB,EAA2B,CAAC,0DAAWW,QAAZ,CAA3B,CANmC;AAO5CqhB,oBAAM,EAAE,CAACviB,IAAI,GAAG6iB,IAAI,CAAC,CAAD,CAAJ,CAAQhB,QAAX,GAAsB,EAA3B,EAA8B,CAAC,0DAAW3gB,QAAZ,CAA9B,CAPoC;AAQ5C42B,uBAAS,EAAE,CAAC93B,IAAI,GAAGA,IAAI,CAAC83B,SAAR,GAAoB,EAAzB,EAA4B,CAAC,0DAAW52B,QAAZ,CAA5B,CARiC;AAS5C62B,sBAAQ,EAAE,CAAC/3B,IAAI,GAAGA,IAAI,CAAC+3B,QAAR,GAAmB,EAAxB,EAA2B,CAAC,0DAAW72B,QAAZ,CAA3B,CATkC;AAU5C82B,sBAAQ,EAAE,CAACh4B,IAAI,GAAGA,IAAI,CAACg4B,QAAR,GAAmB,EAAxB,CAVkC;AAW5ChS,oBAAM,EAAE,CAAChmB,IAAI,GAAGA,IAAI,CAACgmB,MAAR,GAAiB,EAAtB,CAXoC;AAY5CiS,sBAAQ,EAAE,CAACj4B,IAAI,GAAGA,IAAI,CAACi4B,QAAR,GAAmB,EAAxB,CAZkC;AAa5CvB,oCAAsB,EAAE,CAAC12B,IAAI,GAAGA,IAAI,CAAC02B,sBAAR,GAAiC,EAAtC,CAboB;AAc5Cr2B,oBAAM,EAAE,CAACL,IAAI,GAAG,KAAKyN,QAAL,CAAcG,aAAjB,GAAiC,EAAtC,EAAyC,CAAC,0DAAW1M,QAAZ,CAAzC;AAdoC,aAAvB,CAAvB;AAiBD;;;iBACD,iBAAQQ,KAAR,EAAiB;AACfuD,mBAAO,CAACC,GAAR,CAAYxD,KAAZ;AACA,iBAAKw2B,QAAL,GAAex2B,KAAK,CAACiD,MAAN,CAAanD,KAAb,CAAmB22B,iBAAnB,EAAf;AACA,iBAAKV,eAAL,CAAqBruB,GAArB,CAAyB,UAAzB,EAAqC8K,QAArC,CAA8C,KAAKgkB,QAAnD;AACD;;;iBACD,kBAASx2B,KAAT,EAAc;AACZuD,mBAAO,CAACC,GAAR,CAAYxD,KAAK,CAACF,KAAlB;;AACA,gBAAGE,KAAK,CAACF,KAAN,IAAa,QAAhB,EAAyB;AAC7B,mBAAK41B,UAAL,GAAgB,IAAhB;AACK,aAFD,MAGI;AACF,mBAAKA,UAAL,GAAgB,KAAhB;AACD;AACF;;;iBAED,kBAAM;AAAA;;AACJnyB,mBAAO,CAACC,GAAR,CAAY,KAAKuyB,eAAL,CAAqBj2B,KAAjC;AACA,iBAAKiM,QAAL,GAAgB,KAAK5M,IAAL,CAAU6M,IAAV,CAAe,UAAAC,CAAC;AAAA,qBAAIA,CAAC,CAACC,aAAF,IAAmB,QAAI,CAAC6pB,eAAL,CAAqBj2B,KAArB,CAA2BnB,MAAlD;AAAA,aAAhB,CAAhB;AACA,iBAAKo3B,eAAL,CAAqBj2B,KAArB,CAA2BnB,MAA3B,GAAoC,KAAKoN,QAAL,CAAc/M,EAAlD;AACA,iBAAK+2B,eAAL,CAAqBj2B,KAArB,CAA2B4B,YAA3B,GAA0C,KAAKA,YAA/C;AACA,iBAAKq0B,eAAL,CAAqBj2B,KAArB,CAA2BwkB,MAA3B,GAAkC+L,QAAQ,CAAC,KAAK0F,eAAL,CAAqBj2B,KAArB,CAA2BwkB,MAA5B,CAA1C;AACA,iBAAKyR,eAAL,CAAqBj2B,KAArB,CAA2B4B,YAA3B,GAA0C,KAAKA,YAA/C;AACA,gBAAIyf,IAAI,GAAC,KAAK+U,QAAL,CAAcrzB,MAAd,CAAqB,UAACzD,IAAD,EAAQ;AACpC,qBAAOA,IAAI,CAAC+gB,QAAL,IAAe,QAAI,CAAC4V,eAAL,CAAqBj2B,KAArB,CAA2B+gB,MAAjD;AACD,aAFQ,CAAT;AAGA,iBAAKkV,eAAL,CAAqBj2B,KAArB,CAA2B+gB,MAA3B,GAAmCM,IAAI,CAAC,CAAD,CAAJ,CAAQniB,EAA3C;AACA,iBAAKkW,GAAL,CAASwhB,qBAAT,CAA+B,KAAKX,eAAL,CAAqBj2B,KAApD,EAA2DmC,SAA3D,CAAqE,UAAA+B,QAAQ,EAAI;AAC/ET,qBAAO,CAACC,GAAR,CAAY,mBAAZ,EAAgCQ,QAAQ,CAAC8C,MAAzC;;AACA,kBAAG9C,QAAQ,IAAI,IAAf,EAAoB;AAClB,wBAAI,CAACyxB,OAAL,CAAaE,IAAb,GADkB,CAElB;;;AACE,wBAAI,CAAC10B,KAAL,CAAWc,IAAX,iBAAgC,IAAhC,EAAsC;AACpCkC,0BAAQ,EAAE,IAD0B;AAEpCC,kCAAgB,EAAE,KAFkB;AAGpCC,oCAAkB,EAAE;AAHgB,iBAAtC;;AAMA,wBAAI,CAACrD,MAAL,CAAYwD,QAAZ,CAAqB,CAAC,mCAAD,CAArB,EATgB,CAUlB;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,wBAAI,CAAC8C,GAAL,CAAS4B,YAAT;AACD;AACF,aArBD;AAsBD;;;iBACD,kBAAM;AACJ,iBAAKlI,MAAL,CAAYwD,QAAZ,CAAqB,CAAC,mCAAD,CAArB;AACD;;;iBAED,mBAAUtE,KAAV,EAAsB;AACpB,gBAAMC,OAAO,GAAG,OAAhB;AACA,gBAAIC,SAAS,GAAGC,MAAM,CAACC,YAAP,CAAoBJ,KAAK,CAACK,QAA1B,CAAhB;;AACA,gBAAI,CAACJ,OAAO,CAACK,IAAR,CAAaJ,SAAb,CAAL,EAA8B;AAC5BF,mBAAK,CAACO,cAAN;AACD;AACF;;;iBACD,wBAAY;AAAA;;AAEV,iBAAK2U,GAAL,CAASwW,cAAT,CAAwB,KAAKxgB,SAAL,CAAelM,EAAvC,EACGiD,SADH,CACa,UAAA3D,IAAI,EAAI,CAClB,CAFH,EAGE,UAAAuI,GAAG,EAAE;AACH,kBAAIA,GAAG,CAACC,MAAJ,IAAc,GAAlB,EAAuB;AACrB,wBAAI,CAAC7F,KAAL,CAAWc,IAAX,CAAgB,6BAAhB,EAA+C,IAA/C,EAAqD;AACnDkC,0BAAQ,EAAE,IADyC;AAEnDC,kCAAgB,EAAE,KAFiC;AAGnDC,oCAAkB,EAAE;AAH+B,iBAArD;AAKD;;AACD,sBAAI,CAACrD,MAAL,CAAYwD,QAAZ,CAAqB,CAAC,mCAAD,CAArB;AAEH,aAbD;AAeH;;;iBACC,sBAAU;AACR,iBAAKiD,WAAL,GAAiB,KAAjB;AACD;;;iBAED,sBAAa2B,SAAb,EAAwB;AAAA;;AACtB,+DAAKC,IAAL,CACE;AACE;AACAC,kBAAI,EAAE,uBAAsBF,SAAtB,GAAiC,UAAjC,GAA8C,0BAFtD;AAGEG,8BAAgB,EAAE,IAHpB;AAIEC,gCAAkB,EAAE,SAJtB;AAKEC,+BAAiB,EAAE,MALrB;AAME;AACAC,8BAAgB,EAAE,IAPpB;AAQEC,+BAAiB,EAAE,KARrB;AAQ4B,sBAAQ;AARpC,aADF,EAWEC,IAXF,CAWQ,UAAAC,MAAM,EAAI;AAChB,kBAAGA,MAAM,CAACC,WAAP,IAAoB,IAAvB,EAA4B;AAC1B,oBAAI7K,OAAO,GAAQ,EAAnB;AACAA,uBAAO,CAACC,EAAR,GAAa,QAAI,CAACA,EAAlB;AACAD,uBAAO,CAACmK,SAAR,GAAoBA,SAApB;AACAnK,uBAAO,CAAC2C,YAAR,GAAuB,QAAI,CAACA,YAA5B;;AACA,wBAAI,CAACwT,GAAL,CAASyhB,8BAAT,CAAwC53B,OAAxC,EAAiDkD,SAAjD,CAA2D,UAAC3D,IAAD,EAAU;AACnE,0BAAI,CAAC4M,SAAL,GAAiB5M,IAAjB;;AACA,0BAAI,CAAC+I,WAAL,CAAiBQ,eAAjB,CAAiC,QAAI,CAACqD,SAAtC;;AACA,0BAAI,CAACT,WAAL,GAAmB,IAAnB;;AACA,0BAAI,CAACpD,WAAL,CAAiBS,cAAjB;;AACA,sBAAIpD,OAAO,GAAG,EAAd;;AACA,0BAAQwE,SAAR;AACE,yBAAK,MAAL;AACExE,6BAAO,GAAG,QAAV;AACA;;AACF,yBAAK,OAAL;AACEA,6BAAO,GAAG,QAAV;AACA;;AACF,yBAAK,MAAL;AACEA,6BAAO,GAAG,YAAV;AACA;;AACF;AACE;AAXJ;;AAaA,0BAAI,CAACzD,KAAL,CAAWc,IAAX,kBAA0B2C,OAA1B,oBAAkD,IAAlD,EAAwD;AACtDT,4BAAQ,EAAE,IAD4C;AAEtDC,oCAAgB,EAAE,KAFoC;AAGtDC,sCAAkB,EAAE;AAHkC,mBAAxD;AAKD,iBAxBD;AAyBD;AAEF,aA5CD;AA+CD;;;;;;;yBAjOUqxB,2B,EAA2B,uH,EAAA,+H,EAAA,2H,EAAA,0J,EAAA,2I,EAAA,6I,EAAA,8H,EAAA,wI,EAAA,gI;AAAA,O;;;cAA3BA,2B;AAA2B,iD;AAAA,kB;AAAA,gB;AAAA,+9G;AAAA;AAAA;ACfxC;;AAAsB;;AAA0B;;AAA+C;;AAAgC;;AAAiC;;AAChK;;AAAQ;;AACR;;AACI;;AAAwB;AAAA,qBAAS,IAAA1wB,MAAA,EAAT;AAAiB,aAAjB;;AACpB;;AAAU;;AAAU;;AACxB;;AACA;;AACA;;AACJ;;AAEA;;AACI;;AACI;;AAEQ;;AACI;;AACI;;AAAW;;AAAW;;AACtB;;AACI;;AAII;AAAA,qBAAS,IAAA8xB,OAAA,QAAT;AAAwB,aAAxB;;AAJJ;;AAQA;;AAIJ;;AACJ;;AAEA;;AACI;;AAAW;;AAAO;;AAClB;;AACI;;AAOA;;AAGJ;;AACJ;;AAEA;;AACI;;AAAW;;AAAe;;AAC1B;;AACI;;AACC;AAAA,qBAAW,IAAAnmB,SAAA,QAAX;AAA4B,aAA5B;;AADD;;AAOA;;AAGJ;;AACJ;;AAEA;;AACE;;AAAW;;AAAa;;AACxB;;AACI;;AACC;AAAA,qBAAW,IAAAA,SAAA,QAAX;AAA4B,aAA5B;;AADD;;AAOA;;AAGJ;;AACJ;;AAEF;;AAEA;;AAEE;;AACE;;AAAW;;AAAa;;AACxB;;AACI;;AACC;AAAA,qBAAW,IAAAA,SAAA,QAAX;AAA4B,aAA5B;;AADD;;AAOA;;AAGJ;;AACJ;;AAEA;;AACE;;AAAW;;AAAW;;AACtB;;AACI;;AACC;AAAA,qBAAW,IAAAA,SAAA,QAAX;AAA4B,aAA5B;;AADD;;AAOA;;AAGJ;;AACJ;;AAEM;;AAcA;;AAcA;;AACI;;AAAW;;AAAY;;AACvB;;AACI;;AAOA;;AAIJ;;AACJ;;AAGJ;;AAEJ;;AAEE;;AACE;;AAAW;;AAAW;;AACtB;;AACI;;AAMA;;AAGJ;;AACJ;;AAEC;;AAWA;;AAaG;;AAgBA;;AAQH;;AACG;;AAAW;;AAAwB;;AAEnC;;AACI;;AAA2H;AAAA,qBAAU,IAAAomB,QAAA,QAAV;AAA0B,aAA1B;;AACvH;;AAAgC;;AAA4B;;AAAI;;AAAO;;AACvE;;AAA0D;;AAAO;;AAAM;;AAAO;;AAEhF;;AAIT;;AACA;;AAcD;;AAIA;;AAEA;;AACI;;AACE;;AAOS;;AACV;;AACG;;AAEW;;AACd;;AAEC;;AACE;;AAES;;AACX;;AACA;;AAKA;;AAKA;;AAMA;;AAMA;;AAIE;AAAA,qBAAS,IAAA/xB,MAAA,EAAT;AAAiB,aAAjB;;AAEA;;AACF;;AACF;;AACF;;AAGN;;AAGJ;;AACJ;;AAEA;;AACI;;AACF;;;;AAtUoG;;AAAA;;AAAgC;;AAAA;;AAM7H;;AAAA;;AACA;;AAAA;;AAKK;;AAAA;;AAYkB;;AAAA;;AAEQ;;AAAA;;AAeR;;AAAA;;AAEQ;;AAAA;;AAcR;;AAAA;;AAEQ;;AAAA;;AAcV;;AAAA;;AAEQ;;AAAA;;AAkBV;;AAAA;;AAEQ;;AAAA;;AAcV;;AAAA;;AAEQ;;AAAA;;AAMO;;AAAA;;AAcD;;AAAA;;AAsBR;;AAAA;;AAEQ;;AAAA;;AAmBhB;;AAAA;;AAEQ;;AAAA;;AAMC;;AAAA;;AAWA;;AAAA;;AAaG;;AAAA;;AAgBA;;AAAA;;AAqBF;;AAAA;;AAcD;;AAAA;;AAQW;;AAAA;;AAQtB;;AAAA;;AACO;;AAAA;;AAKN;;AAAA;;AACM;;AAAA;;AAIL;;AAAA;;AAKA;;AAAA;;AAKA;;AAAA;;AAMA;;AAAA;;AAyBJ;;AAAA;;;;;;;;;wEDtTP0wB,2B,EAA2B;gBALvC,uDAKuC;iBAL7B;AACT90B,oBAAQ,EAAE,0BADD;AAETC,uBAAW,EAAE,uCAFJ;AAGTC,qBAAS,EAAE,CAAC,uCAAD;AAHF,W;AAK6B,U;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEfxC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACAoH;;AAAsB;;AAAG;;;;;;AAAQ;;AAAqB;;AAAI;;;;;;AAK5K;;AAAqC;;AAAoC;;;;;;AACzE;;AAAoC;;AAAqC;;;;;;AAwB/D;;AACE;;AACF;;;;;;AAFkE;;AAChE;;AAAA;;;;;;AAIF;;AAEA;;AACJ;;;;;;AAQM;;AACE;;AACF;;;;;;AAFkE;;AAChE;;AAAA;;;;;;AAGJ;;AACE;;AACF;;;;;;AAQE;;AACE;;AACF;;;;;;AAFsE;;AACpE;;AAAA;;;;;;AAGJ;;AACE;;AACF;;;;;;AAYE;;AACE;;AACF;;;;;;AAFsE;;AACpE;;AAAA;;;;;;AAGJ;;AACE;;AACF;;;;;;AASA;;AAEE;;AACF;;;;;;AASA;;AAEE;;AACF;;;;;;AAaE;;AACE;;AACF;;;;;;AAFsC;;AACpC;;AAAA;;;;;;AAGJ;;AACE;;AACF;;;;;;;;AAUF;;AACE;AAAA;;AAAA;;AAAA;AAAA;;AAAmB;;AAAI;;;;;;AADiC;;;;;;;;AAxHhE;;AACE;;AACE;;AACE;;AAAW;;AAAa;;AACxB;;AAOE;;AAEA;;AAGF;;AAEE;;AAIF;;AACF;;AAEA;;AACE;;AAAW;;AAAW;;AACtB;;AACE;;AACE;;AAGF;;AACA;;AAGF;;AACF;;AAEA;;AACE;;AAAW;;AAAa;;AACxB;;AACE;;AACE;;AAGF;;AACA;;AAGF;;AACF;;AAGF;;AAEA;;AACE;;AACE;;AAAW;;AAAU;;AACrB;;AACE;;AACE;;AAGF;;AACA;;AAGF;;AACF;;AAEA;;AACE;;AAAW;;AAAkB;;AAC7B;;AACE;;AAA+C;AAAA;;AAAA;;AAAA;;AAAA;AAAA,aAA+B,UAA/B,EAA+B;AAAA;;AAAA;;AAAA;AAAA,WAA/B;;AAA/C;;AAEA;;AAIF;;AACF;;AAEA;;AACE;;AAAW;;AAAkB;;AAC7B;;AACE;;AAAsC;AAAA;;AAAA;;AAAA;AAAA;;AAAtC;;AAEA;;AAOF;;AACF;;AACF;;AAEA;;AACE;;AACE;;AAAW;;AAAS;;AACpB;;AACE;;AACE;;AAGF;;AACA;;AAGF;;AAEF;;AAEF;;AAGA;;AACE;;AACE;;AAEA;;AAGF;;AAEF;;AACF;;;;;;AAhIM;;AAa+B;;AAAA,6FAAW,cAAX,EAAW,uBAAX;;AAM5B;;AAAA;;AAU8B;;AAAA,+FAAa,cAAb,EAAa,qBAAb;;AAInB;;AAAA;;AAUmB;;AAAA,iGAAe,cAAf,EAAe,uBAAf;;AAInB;;AAAA;;AAcmB;;AAAA,+FAAa,cAAb,EAAa,yBAAb;;AAInB;;AAAA;;AAYT;;AAAA;;AAYA;;AAAA;;AAe4B;;AAAA;;AAInB;;AAAA;;AAYL;;AAAA;;;;;;AAejB;;;;UDxIWk2B,uB;AAeX,0CACE;AACA;AACQt4B,UAHV,EAIUC,UAJV,EAKUyC,MALV,EAMUD,KANV,EAOUH,MAPV,EAQUK,EARV,EASUkG,WATV,EASkC;AAAA;;AANxB,eAAA7I,EAAA,GAAAA,EAAA;AACA,eAAAC,UAAA,GAAAA,UAAA;AACA,eAAAyC,MAAA,GAAAA,MAAA;AACA,eAAAD,KAAA,GAAAA,KAAA;AACA,eAAAH,MAAA,GAAAA,MAAA;AACA,eAAAK,EAAA,GAAAA,EAAA;AACA,eAAAkG,WAAA,GAAAA,WAAA;AAvBV,eAAAzI,UAAA,GAAuB,EAAvB;AACA,eAAAC,QAAA,GAAqB,EAArB;AAGA,eAAAK,QAAA,GAAqB,EAArB;AACA,eAAAC,IAAA,GAAc,EAAd;AACA,eAAAwL,MAAA,GAAmB,EAAnB;AAIA,eAAAF,WAAA,GAAwB,KAAxB;AAEA,eAAAzD,MAAA,GAAkB,KAAlB;AAaK;;;;iBAEL,oBAAW;AAAA;;AACT;AACA;AACA;AACA;AAEC4D,sBAAU,CAAC,YAAM;AACd,sBAAI,CAACmsB,WAAL,GAAmBjsB,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACrJ,OAAb,CAAqB,kBAArB,CAAX,CAAnB;AACA4B,qBAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiC,QAAI,CAACuzB,WAAtC;;AACA,kBAAG,QAAI,CAACA,WAAL,IAAoB,IAApB,IAA4B,QAAI,CAACA,WAAL,IAAoB9rB,SAAnD,EAA6D;AAC3D,wBAAI,CAAChM,aAAL,CAAmB,EAAnB;AACD,eAFD,MAGK,IAAG,QAAI,CAAC83B,WAAL,CAAiB/3B,EAAjB,IAAuB,IAAvB,IAA+B,QAAI,CAAC+3B,WAAL,CAAiB/3B,EAAjB,IAAuBiM,SAAzD,EAAmE;AACxE,wBAAI,CAAC/J,MAAL,CAAYa,IAAZ;;AACA,wBAAI,CAAC/C,EAAL,GAAU,QAAI,CAAC+3B,WAAL,CAAiB/3B,EAA3B;;AACA,wBAAI,CAACC,aAAL,CAAmB,QAAI,CAAC83B,WAAxB;;AACA,wBAAI,CAAC7rB,SAAL,GAAiB,QAAI,CAAC6rB,WAAtB;AACA,wBAAI,CAAC/vB,MAAL,GAAc,IAAd;AACA,wBAAI,CAACyD,WAAL,GAAmB,IAAnB;;AACA,wBAAI,CAACpD,WAAL,CAAiBQ,eAAjB,CAAiC,QAAI,CAACqD,SAAtC;;AACA,wBAAI,CAAChK,MAAL,CAAYnB,KAAZ;AACC;AACF,aAhBQ,EAgBN,IAhBM,CAAV;AAkBD,iBAAKoL,WAAL;AACA,iBAAKnD,WAAL;AACA,iBAAKvB,aAAL;AACA,iBAAK2E,SAAL;AACA,iBAAKC,aAAL;AAEA,iBAAK3J,YAAL,GAAoB,KAAKP,EAAL,CAAQQ,OAAR,CAAgB,YAAhB,EAA8BoG,QAAlD,CA9BS,CA+BT;AACA;AACA;AACA;AACA;AACD;;;iBACD,kBAASivB,GAAT,EAAmB;AACjB,iBAAKC,mBAAL,GAA2BD,GAA3B;AACD;;;iBAED,uBAAc53B,IAAd,EAAoB;AAAA;;AAClB,iBAAKgqB,aAAL,GAAqB,KAAK5qB,EAAL,CAAQc,KAAR,CAAc;AACjCT,sBAAQ,EAAE,CAACO,IAAI,CAACP,QAAL,IAAiB,EAAlB,EAAsB,CAAC,0DAAWW,QAAZ,CAAtB,CADuB;AAEjCZ,wBAAU,EAAE,CAACQ,IAAI,CAACR,UAAL,IAAmB,EAApB,EAAwB,CAAC,0DAAWY,QAAZ,CAAxB,CAFqB;AAGjCN,sBAAQ,EAAE,CAACE,IAAI,CAACF,QAAL,IAAiB,EAAlB,EAAsB,CAAC,0DAAWM,QAAZ,CAAtB,CAHuB;AAIjCgG,wBAAU,EAAE,CAACpG,IAAI,CAACoG,UAAL,IAAmB,EAApB,EAAwB,CAAC,0DAAWhG,QAAZ,CAAxB,CAJqB;AAKjCR,gBAAE,EAAE,CAACI,IAAI,CAACJ,EAAL,IAAW,IAAZ,CAL6B;AAMjC;AACAk4B,4BAAc,EAAE,CAAC93B,IAAI,CAAC83B,cAAL,IAAuB,EAAxB,EAA4B,CAAC,0DAAW13B,QAAZ,EAAsB,UAAC23B,OAAD;AAAA,uBAA8B,0DAAWC,GAAX,CAAe,QAAI,CAACH,mBAApB,EAAyCE,OAAzC,CAA9B;AAAA,eAAtB,CAA5B,CAPiB;AAQjCE,4BAAc,EAAE,CAACj4B,IAAI,CAACi4B,cAAL,IAAuB,EAAxB,EAA4B,0DAAW73B,QAAvC,CARiB;AASjCb,oBAAM,EAAE,CAACS,IAAI,CAACT,MAAL,IAAe,EAAhB,EAAoB,CAAC,0DAAWa,QAAZ,CAApB;AATyB,aAAd,CAArB;AAWD;;;iBACD,2BAAkBQ,KAAlB,EAAyB;AACvB,gBAAI4L,GAAG,GAAGzL,MAAM,CAACC,YAAP,CAAoBJ,KAAK,CAAC6L,OAA1B,CAAV;;AACA,gBAAI,QAAQvL,IAAR,CAAasL,GAAb,CAAJ,EAAuB;AACrB,qBAAO,IAAP;AACD,aAFD,MAEO;AACL5L,mBAAK,CAACO,cAAN;AACA,qBAAO,KAAP;AACD;AACF;;;iBACD,+BAAsBP,KAAtB,EAA6B;AAC3B,gBAAI4L,GAAG,GAAGzL,MAAM,CAACC,YAAP,CAAoBJ,KAAK,CAAC6L,OAA1B,CAAV;;AACA,gBAAI,cAAcvL,IAAd,CAAmBsL,GAAnB,CAAJ,EAA6B;AAC3B,qBAAO,IAAP;AACD,aAFD,MAEO;AACL5L,mBAAK,CAACO,cAAN;AACA,qBAAO,KAAP;AACD;AACF,W,CAED;;;;iBACA,kBAAS;AAAA;;AACP,gBAAI,KAAK6oB,aAAL,CAAmBtd,OAAvB,EAAgC;AAC9B;AACD,aAFD,MAEO;AACH,mBAAKC,QAAL,GAAgB,KAAK5M,IAAL,CAAU6M,IAAV,CAAe,UAAAC,CAAC;AAAA,uBAAIA,CAAC,CAACC,aAAF,IAAmB,QAAI,CAACkd,aAAL,CAAmBtpB,KAAnB,CAAyBnB,MAAhD;AAAA,eAAhB,CAAhB;AACA,mBAAKyqB,aAAL,CAAmBtpB,KAAnB,CAAyBnB,MAAzB,GAAkC,KAAKoN,QAAL,CAAc/M,EAAhD;AACA,mBAAKoqB,aAAL,CAAmBtpB,KAAnB,CAAyB4B,YAAzB,GAAsC,KAAKA,YAA3C;AACA,mBAAKjD,UAAL,CAAgB64B,qBAAhB,CAAsC,KAAKlO,aAAL,CAAmBtpB,KAAzD,EAAgEmC,SAAhE,CAA0E,UAACyE,IAAD,EAAU;AACpF,wBAAI,CAAC5F,MAAL,CAAYwD,QAAZ,CAAqB,qCAArB,EAA4DoF,IAA5D,CAAiE,UAAA0C,CAAC,EAAI;AACpE,0BAAI,CAACnL,KAAL,CAAWc,IAAX,CAAgB,0BAAhB,EAA4C,IAA5C,EACE;AACEkC,4BAAQ,EAAE,IADZ;AAEEC,oCAAgB,EAAE,KAFpB;AAGEC,sCAAkB,EAAE;AAHtB,mBADF;;AAME6G,8BAAY,CAACuB,UAAb,CAAwB,kBAAxB;AACH,iBARD;AASD,eAVC,EAUC,UAAC1F,GAAD,EAAc;AACf,wBAAI,CAAC5F,KAAL,CAAWc,IAAX,WAA0B,IAA1B,EAAgC;AAC9BkC,0BAAQ,EAAE,IADoB;AAE9BC,kCAAgB,EAAE,KAFY;AAG9BC,oCAAkB,EAAE;AAHU,iBAAhC;AAKD,eAhBC;AAkBH;AACF;;;iBAED,sBAAa+E,SAAb,EAAwB;AAAA;;AACtB,gBAAInK,OAAO,GAAQ,EAAnB;AACAA,mBAAO,CAACC,EAAR,GAAa,KAAKA,EAAlB;AACAD,mBAAO,CAACmK,SAAR,GAAoBA,SAApB;AACAnK,mBAAO,CAAC2C,YAAR,GAAuB,KAAKA,YAA5B;AACA,iBAAKjD,UAAL,CAAgB84B,8BAAhB,CAA+Cx4B,OAA/C,EAAwDkD,SAAxD,CAAkE,UAAC3D,IAAD,EAAU;AAC1EiF,qBAAO,CAACC,GAAR,CAAYlF,IAAZ;AACA,sBAAI,CAAC4M,SAAL,GAAiB5M,IAAjB;;AACA,sBAAI,CAAC+I,WAAL,CAAiBQ,eAAjB,CAAiC,QAAI,CAACqD,SAAtC;;AACA,sBAAI,CAACT,WAAL,GAAmB,IAAnB;;AACA,sBAAI,CAACpD,WAAL,CAAiBS,cAAjB;;AACA,kBAAIpD,OAAO,GAAG,EAAd;;AACA,sBAAQwE,SAAR;AACE,qBAAK,MAAL;AACExE,yBAAO,GAAG,QAAV;AACA;;AACF,qBAAK,OAAL;AACEA,yBAAO,GAAG,QAAV;AACA;;AACF,qBAAK,MAAL;AACEA,yBAAO,GAAG,YAAV;AACA;;AACF;AACE;AAXJ;;AAcA,sBAAI,CAACzD,KAAL,CAAWc,IAAX,kBAA0B2C,OAA1B,qBAAmD,IAAnD,EAAyD;AACvDT,wBAAQ,EAAE,IAD6C;AAEvDC,gCAAgB,EAAE,KAFqC;AAGvDC,kCAAkB,EAAE;AAHmC,eAAzD;AAKD,aA1BD;AA2BD;;;iBAED,kBAAS;AACP6G,wBAAY,CAACuB,UAAb,CAAwB,kBAAxB;AACA,iBAAKzL,MAAL,CAAYwD,QAAZ,CAAqB,CAAC,mCAAD,CAArB;AACD;;;iBAED,uBAAc;AAAA;;AACZ;AACA;AACA;AACA,iBAAK7F,UAAL,CAAgB+N,kBAAhB,GAAqCvK,SAArC,CAA+C,UAAA3D,IAAI,EAAE;AACnDiF,qBAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoClF,IAApC;;AACA,mBAAI,IAAI4D,CAAC,GAAC,CAAV,EAAaA,CAAC,GAAC5D,IAAI,CAAC6D,MAApB,EAA2BD,CAAC,EAA5B,EAA+B;AAC7B,wBAAI,CAAChD,QAAL,CAAciL,IAAd,CAAmB7L,IAAI,CAAC4D,CAAD,CAAJ,CAAQuK,UAA3B;AACD;;AACDlJ,qBAAO,CAACC,GAAR,CAAY,QAAI,CAACtE,QAAjB;AACD,aAND;AAOD;;;iBACD,uBAAc;AAAA;;AACZ,iBAAKT,UAAL,CAAgBuJ,WAAhB,GAA8B/F,SAA9B,CAAwC,UAACyE,IAAD,EAAU;AAChDnD,qBAAO,CAACC,GAAR,CAAYkD,IAAZ;;AACA,mBAAI,IAAIxE,CAAC,GAAC,CAAV,EAAaA,CAAC,GAACwE,IAAI,CAACvE,MAApB,EAA2BD,CAAC,EAA5B,EAA+B;AAC7B,oBAAGwE,IAAI,CAACxE,CAAD,CAAJ,CAAQE,UAAR,KAAqB,GAAxB,EAA4B;AAC1B,0BAAI,CAACvD,QAAL,CAAcsL,IAAd,CAAmBzD,IAAI,CAACxE,CAAD,CAAvB;AACD;AACF;;AACDqB,qBAAO,CAACC,GAAR,CAAY,QAAI,CAAC3E,QAAjB,EAPgD,CAQhD;AACD,aATD;AAUD;;;iBACD,yBAAgB;AAAA;;AACd,iBAAKJ,UAAL,CAAgBgI,aAAhB,GAAgCxE,SAAhC,CAA0C,UAACyE,IAAD,EAAU;AAClDnD,qBAAO,CAACC,GAAR,CAAYkD,IAAZ;;AACA,mBAAI,IAAIxE,CAAC,GAAC,CAAV,EAAaA,CAAC,GAACwE,IAAI,CAACvE,MAApB,EAA2BD,CAAC,EAA5B,EAA+B;AAC7B,oBAAGwE,IAAI,CAACxE,CAAD,CAAJ,CAAQE,UAAR,KAAqB,GAAxB,EAA4B;AAC1B,0BAAI,CAACxD,UAAL,CAAgBuL,IAAhB,CAAqBzD,IAAI,CAACxE,CAAD,CAAzB;AACD;AACF;;AACDqB,qBAAO,CAACC,GAAR,CAAY,QAAI,CAAC5E,UAAjB,EAPkD,CAQlD;AACD,aATD;AAUD;;;iBACD,qBAAY;AAAA;;AACV,gBAAI8N,WAAW,GAAE,GAAjB;AACA,iBAAKjO,UAAL,CAAgBkO,WAAhB,CAA4BD,WAA5B,EAAyCzK,SAAzC,CAAmD,UAACyE,IAAD,EAAU;AAC3DnD,qBAAO,CAACC,GAAR,CAAY,UAAZ,EAAuBkD,IAAvB;AACA,sBAAI,CAACvH,IAAL,GAAYuH,IAAZ;AACF,aAHA;AAID;;;iBAED,yBAAgB;AAAA;;AACd,iBAAKjI,UAAL,CAAgB4M,aAAhB,GAAgCpJ,SAAhC,CAA0C,UAACyE,IAAD,EAAU;AAClDnD,qBAAO,CAACC,GAAR,CAAYkD,IAAZ;;AACA,mBAAI,IAAIxE,CAAC,GAAC,CAAV,EAAaA,CAAC,GAACwE,IAAI,CAACvE,MAApB,EAA2BD,CAAC,EAA5B,EAA+B;AAC7B,oBAAGwE,IAAI,CAACxE,CAAD,CAAJ,CAAQE,UAAR,KAAqB,GAAxB,EAA4B;AAC1B,0BAAI,CAACuI,MAAL,CAAYR,IAAZ,CAAiBzD,IAAI,CAACxE,CAAD,CAArB;AACD;AACF;;AACDqB,qBAAO,CAACC,GAAR,CAAY,QAAI,CAACmH,MAAjB,EAPkD,CAQlD;AACD,aATD;AAUD;;;iBACD,wBAAehI,KAAf,EAAqBvD,IAArB,EAAyB;AACvB,mBAAOA,IAAI,CAACP,QAAZ;AACD;;;iBACD,0BAAiB8D,KAAjB,EAAuBvD,IAAvB,EAA2B;AACzB,mBAAOA,IAAI,CAACR,UAAZ;AACD;;;iBACD,0BAAiB+D,KAAjB,EAAuBvD,IAAvB,EAA2B;AACzB,mBAAOA,IAAI,CAACoG,UAAZ;AACD;;;iBACD,4BAAmB7C,KAAnB,EAAyBvD,IAAzB,EAA6B;AAC3B,mBAAOA,IAAI,CAACgd,YAAZ;AACD;;;iBACD,6BAAoBzZ,KAApB,EAA0BvD,IAA1B,EAA8B;AAC5B,mBAAOA,IAAI,CAACgd,YAAZ;AACD;;;;;;;yBA/OU0a,uB,EAAuB,2H,EAAA,2I,EAAA,mK,EAAA,wI,EAAA,uH,EAAA,0J,EAAA,6I;AAAA,O;;;cAAvBA,uB;AAAuB,6C;AAAA,iB;AAAA,e;AAAA,4gD;AAAA;AAAA;AChBpC;;AAAsB;;AAA0B;;AAAoE;;AAAiC;;AAAiC;;AAAgC;;AAAQ;;AAC9N;;AACE;;AAAwB;AAAA,qBAAS,IAAAhyB,MAAA,EAAT;AAAiB,aAAjB;;AACtB;;AAAU;;AAAU;;AACtB;;AACA;;AACA;;AACF;;AAEA;;AACE;;AAOE;;AAmIF;;AACF;;AAEA;;AACE;;AACF;;;;AAzJ2H;;AAAA;;AAAiC;;AAAA;;AAKrJ;;AAAA;;AACA;;AAAA;;AAWgC;;AAAA;;AAuIrB;;AAAA;;;;;;;;;wEDxILgyB,uB,EAAuB;gBALnC,uDAKmC;iBALzB;AACTp2B,oBAAQ,EAAE,sBADD;AAETC,uBAAW,EAAE,mCAFJ;AAGTC,qBAAS,EAAE,CAAC,mCAAD;AAHF,W;AAKyB,U;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEhBpsCU;;AACE;;AACF;;;;;;AAFkD;;AAChD;;AAAA;;;;;;AA4BN;;AAKE;;AACF;;;;;;AACA;;AAAqC;;AAAiB;;;;;;AAAjB;;AAAA;;;;;;AAIrC;;AAIG;;AACH;;;;;;AACA;;AACE;;AACF;;;;;;AADE;;AAAA;;;;;;AAKF;;AAKE;;AACF;;;;;;AACA;;AAAqC;;AAAsB;;;;;;AAAtB;;AAAA;;;;;;AAIrC;;AAKE;;AACF;;;;;;AACA;;AAAqC;;AAAuB;;;;;;AAAvB;;AAAA;;;;;;AAIrC;;AAKE;;AACF;;;;;;AACA;;AACE;;AACF;;;;;;AADE;;AAAA;;;;;;AAIF;;AAKE;;AACF;;;;;;AACA;;AACE;;AACF;;;;;;AADE;;AAAA;;;;;;AAKF;;AAAmC;;AAAM;;;;;;;;AACzC;;AACE;;AAKE;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAEA;;AAAU;;AAAI;;AAChB;;AACA;;AAKE;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAEA;;AAAU;;AAAM;;AAClB;;AACF;;;;;;AALI;;AAAA;;;;;;AAQN;;;;;;AACA;;;;;;;;UD/IO42B,c;AAiBX,gCAAoBv2B,KAApB,EACUG,cADV,EAEUF,MAFV,EAGUzC,UAHV,EAIUqC,MAJV,EAKUuG,WALV,EAMU6F,SANV,EAOUnM,cAPV,EAQUI,EARV,EAQ+B;AAAA;;AARX,eAAAF,KAAA,GAAAA,KAAA;AACV,eAAAG,cAAA,GAAAA,cAAA;AACA,eAAAF,MAAA,GAAAA,MAAA;AACA,eAAAzC,UAAA,GAAAA,UAAA;AACA,eAAAqC,MAAA,GAAAA,MAAA;AACA,eAAAuG,WAAA,GAAAA,WAAA;AACA,eAAA6F,SAAA,GAAAA,SAAA;AACA,eAAAnM,cAAA,GAAAA,cAAA;AACA,eAAAI,EAAA,GAAAA,EAAA;AAvBV,eAAAM,mBAAA,GAA+B,CAA/B;AAKA,eAAAJ,UAAA,GAAa,IAAI,0EAAJ,EAAb;AAEA,eAAAC,gBAAA,GAA6B,CAAC,IAAD,EAAO,YAAP,EAAqB,SAArB,EAAgC,UAAhC,EAA4C,YAA5C,EAA0D,cAA1D,EAA0E,QAA1E,CAA7B;AAEA,eAAAC,cAAA,GAAmD,CACjD;AAAEC,eAAG,EAAE,YAAP;AAAqB1B,iBAAK,EAAE;AAA5B,WADiD,EAEjD;AAAE0B,eAAG,EAAE,SAAP;AAAkB1B,iBAAK,EAAE;AAAzB,WAFiD,CAAnD;AAcqC;;;;iBAErC,oBAAQ;AACN,iBAAK4K,WAAL,GAAmB,KAAKvJ,EAAL,CAAQQ,OAAR,CAAgB,YAAhB,CAAnB;AACA4B,mBAAO,CAACC,GAAR,CAAY,KAAKkH,WAAjB;AACA,iBAAK+sB,UAAL;AACD;;;iBAED,sBAAU;AAAA;;AACR,iBAAKv2B,MAAL,CAAYa,IAAZ;AACE,iBAAKtD,UAAL,CAAgBomB,kBAAhB,GAAqC5iB,SAArC,CAA+C,UAAC3D,IAAD,EAAe;AAC5DiF,qBAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBlF,IAAxB;;AACA,sBAAI,CAAC4C,MAAL,CAAYnB,KAAZ;;AACA,sBAAI,CAAC23B,KAAL,GAAap5B,IAAb;;AACA,mBAAI,IAAI4D,CAAC,GAAC,CAAV,EAAYA,CAAC,GAAC5D,IAAI,CAAC6D,MAAnB,EAA0BD,CAAC,EAA3B,EAA8B;AAE5B,oBAAG5D,IAAI,CAAC4D,CAAD,CAAJ,CAAQE,UAAR,IAAsB,GAAzB,EAA6B;AAC3B9D,sBAAI,CAAC4D,CAAD,CAAJ,CAAQE,UAAR,GAAqB,cAArB;AACD;;AACD,oBAAG9D,IAAI,CAAC4D,CAAD,CAAJ,CAAQE,UAAR,IAAsB,GAAzB,EAA8B;AAC5B9D,sBAAI,CAAC4D,CAAD,CAAJ,CAAQE,UAAR,GAAqB,YAArB;AACD;;AACD,oBAAG9D,IAAI,CAAC4D,CAAD,CAAJ,CAAQG,YAAR,IAAwB,GAA3B,EAA+B;AAC7B/D,sBAAI,CAAC4D,CAAD,CAAJ,CAAQG,YAAR,GAAuB,MAAvB;AACD;;AACD,oBAAG/D,IAAI,CAAC4D,CAAD,CAAJ,CAAQG,YAAR,IAAwB,GAA3B,EAA+B;AAC7B/D,sBAAI,CAAC4D,CAAD,CAAJ,CAAQG,YAAR,GAAuB,QAAvB;AACD;AAEF;;AACD,sBAAI,CAAChB,UAAL,GAAkB,IAAI,0EAAJ,CAAuB/C,IAAvB,CAAlB;AACA,sBAAI,CAAC+C,UAAL,CAAgBQ,SAAhB,GAA4B,QAAI,CAACA,SAAjC;AACA,sBAAI,CAACR,UAAL,CAAgBS,IAAhB,GAAuB,QAAI,CAACA,IAA5B;AACD,aAvBD,EAuBG,UAAC+E,GAAD,EAAc;AACftD,qBAAO,CAAC4P,KAAR;;AACA,sBAAI,CAACjS,MAAL,CAAYnB,KAAZ;AACD,aA1BD;AA2BH;;;iBAED,qBAAYgO,GAAZ,EAAiB;AACfxK,mBAAO,CAACC,GAAR,CAAYuK,GAAZ;AACA,iBAAK1G,WAAL,CAAiBswB,SAAjB,CAA2B5pB,GAA3B;AACA,iBAAKjN,MAAL,CAAYwD,QAAZ,CAAqB,yCAAkCyJ,GAAG,CAAC/O,EAAtC,EAArB,EAHe,CAIf;AACD;;;iBAED,wBAAe;AACb,iBAAK8B,MAAL,CAAYwD,QAAZ,CAAqB,iCAArB;AACD;;;iBAED,oBAAWyJ,GAAX,EAAgB;AAAA;;AACd,iBAAK3M,cAAL,CAAoBqD,OAApB,CAA4B;AAAEC,qBAAO,6CAAsCqJ,GAAG,CAACqQ,UAA1C;AAAT,aAA5B,EACGnc,SADH,CACa,UAAA2C,GAAG,EAAI;AAClBrB,qBAAO,CAACC,GAAR,CAAYoB,GAAZ;AACArB,qBAAO,CAACC,GAAR,CAAYuK,GAAZ;;AACE,kBAAInJ,GAAJ,EAAS;AACP,wBAAI,CAAC1D,MAAL,CAAYa,IAAZ;;AACA,wBAAI,CAACtD,UAAL,CAAgBm5B,UAAhB,CAA2B7pB,GAAG,CAAC/O,EAA/B,EACGiD,SADH,CACa,UAAA3D,IAAI,EAAI,CAClB,CAFH,EAGI,UAAAuI,GAAG,EAAI;AACL,sBAAIA,GAAG,CAACC,MAAJ,IAAc,GAAlB,EAAuB;AACrB,4BAAI,CAAC5F,MAAL,CAAYnB,KAAZ;;AACA,4BAAI,CAACkB,KAAL,CAAWc,IAAX,CAAgB,6BAAhB,EAA+C,IAA/C,EAAqD;AACnDkC,8BAAQ,EAAE,IADyC;AAEnDC,sCAAgB,EAAE,KAFiC;AAGnDC,wCAAkB,EAAE;AAH+B,qBAArD;AAKD;;AACD,0BAAI,CAACszB,UAAL;AAED,iBAdL;AAeD;AAEF,aAvBH;AAwBD;;;iBAED,kBAAM;AACJ;AACA,iBAAK32B,MAAL,CAAYwD,QAAZ,CAAqB,qBAArB;AACD;;;iBAED,kBAAS/B,QAAT,EAAmBC,CAAnB,EAAoB;AAClB,iBAAKC,WAAL,CAAiBF,QAAjB;AACA,iBAAKG,WAAL,CAAiBF,CAAjB;AACD;;;iBAED,qBAAYD,QAAZ,EAAsB;AAEpB,iBAAKlB,UAAL,CAAgBuB,eAAhB,GAAkC,UAACtE,IAAD,EAAYuE,MAAZ,EAAwC;AACxE,kBAAGvE,IAAI,CAACiE,QAAD,CAAJ,IAAiB,IAApB,EAAyB;AACzB,uBACEjE,IAAI,CAACiE,QAAD,CAAJ,CAAeW,IAAf,GAAsBJ,iBAAtB,GAA0CC,QAA1C,CAAmDF,MAAnD,CADF;AAEE;AACH,aALD;AAMD;;;iBAED,uBAAW;AACT,iBAAKxB,UAAL,CAAgBwB,MAAhB,GAAyB,EAAzB;AACA,iBAAKuC,SAAL,CAAec,aAAf,CAA6BpG,KAA7B,GAAqC,EAArC;AACA,iBAAK2B,mBAAL,GAA2B,CAA3B;AACA;;;iBAGD,qBAAYzB,KAAZ,EAA0B;AAExB,gBAAMgD,WAAW,GAAIhD,KAAK,CAACiD,MAAN,CAAkCnD,KAAvD;AACA,iBAAKuB,UAAL,CAAgBwB,MAAhB,GAAyBG,WAAW,CAACE,IAAZ,GAAmBJ,iBAAnB,EAAzB;AACD;;;iBACD,4BAAmBM,SAAnB,EAAoC;AAClC,gBAAIA,SAAS,CAACC,SAAd,EAAyB;AACvB,mBAAKtC,cAAL,CAAoBuC,QAApB,kBAAuCF,SAAS,CAACC,SAAjD;AACD,aAFD,MAEO;AACL,mBAAKtC,cAAL,CAAoBuC,QAApB,CAA6B,iBAA7B;AACD;AACF;;;;;;;yBA5ISk0B,c,EAAc,wI,EAAA,sK,EAAA,mK,EAAA,2I,EAAA,uH,EAAA,6I,EAAA,0H,EAAA,iI,EAAA,2J;AAAA,O;;;cAAdA,c;AAAc,kC;AAAA;AAAA;;;sEAKd,8D,EAAO,I;;sEACP,wE,EAAY,I;;;;;;;;;;;;;;;;;;AC1BzB;;AAAsB;;AAA0B;;AAA+C;;AAAQ;;AACvG;;AACE;;AACF;;AACA;;AACE;;AAAwB;AAAA,qBAAS,IAAA1yB,MAAA,EAAT;AAAiB,aAAjB;;AACtB;;AAAU;;AAAU;;AACtB;;AACA;;AAA0B;;AAAiB;;AAC3C;;AAIF;;AAEA;;AACE;;AACE;;AACE;;AACE;;AACE;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AAEF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AACE;;AAAW;;AAAS;;AAEpB;;AAAsC;AAAA;AAAA;;AAEpC;;AAAsB;;AAAM;;AAC5B;;AAGF;;AACF;;AACF;;AACA;;AACE;;AACE;;AAAW;;AAAM;;AAEjB;;AAA2B;AAAA;;AAAA;;AAAA,qBAAS,IAAAG,QAAA,mBAAT;AAAwC,aAAxC;;AAA3B;;AACA;;AAAoB;;AAAM;;AAC5B;;AACF;;AACA;;AACE;;AAAqC;AAAA,qBAAS,IAAA2J,WAAA,EAAT;AAAsB,aAAtB;;AAA8C;;AAAY;;AACjG;;AACA;;AACC;;AAAsD;AAAA,qBAAS,IAAAipB,YAAA,EAAT;AAAuB,aAAvB;;AAAqE;;AAEvH;;AACN;;AACD;;AACF;;AAGA;;AACE;;AACE;;AACE;;AAOA;;AACF;;AAEA;;AACE;;AAMA;;AAGF;;AAEA;;AACE;;AAOA;;AACF;;AAEA;;AACE;;AAOA;;AACF;;AAEA;;AACE;;AAOA;;AAGF;;AACA;;AACE;;AAOA;;AAGF;;AAEA;;AACE;;AACA;;AAoBF;;AAEA;;AACA;;AACF;;AACA;;AACF;;AACF;;;;AArKgB;;AAAA;;AAmCgC;;AAAA;;AAGL;;AAAA;;AA2Bb;;AAAA;;AA+FP;;AAAA;;AACa;;AAAA;;AAEjB;;AAAA;;;;;;;;;wEDjJNL,c,EAAc;gBAL1B,uDAK0B;iBALhB;AACT92B,oBAAQ,EAAE,WADD;AAETC,uBAAW,EAAE,wBAFJ;AAGTC,qBAAS,EAAE,CAAC,wBAAD;AAHF,W;AAKgB,U;;;;;;;;;;;;;;;;;;;;;AACDwE,mBAAS,EAAE,CAAF;kBAAhC,uDAAgC;mBAAtB,W;AAAsB,WAAE,C;AAIftD,cAAI,EAAE,CAAF;kBAAvB,uDAAuB;mBAAb,8D;AAAa,WAAE,C;AACDD,mBAAS,EAAE,CAAF;kBAAjC,uDAAiC;mBAAvB,wE;AAAuB,WAAE;;;;;;;;;;;;;;;;;;;AE1BtC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACmDU;;AAIE;AAAA;;AAAA;;AAAA;AAAA;;AAEA;;AACF;;;;;;AALE;;;;;;;;AAOA;;AAA2H;AAAA;;AAAA;;AAAA;AAAA;;AACxH;;AACD;;;;;;AAFsE;;;;;;;;AAOxE;;AAAwE;AAAA;;AAAA;;AAAA;AAAA;;AACtE;;AACF;;;;;;;;AAGA;;AAAwE;AAAA;;AAAA;;AAAA,wCAAsB,MAAtB;AAA4B,WAA5B;;AACtE;;AACF;;;;;;AAHF;;AACE;;AAES;;AACX;;;;;;AAJuE;;AAC5D;;AAAA;;;;;;;;AAKT;;AAAuE;AAAA;;AAAA;;AAAA,wCAAsB,MAAtB;AAA4B,WAA5B;;AACrE;;AACF;;;;;;AAHF;;AACE;;AAES;;AACX;;;;;;AAJwF;;AAC7E;;AAAA;;;;;;;;AAKT;;AAAuE;AAAA;;AAAA;;AAAA,wCAAsB,OAAtB;AAA6B,WAA7B;;AACrE;;AACF;;;;;;AAHF;;AACE;;AAES;;AACX;;;;;;AAJuF;;AAC5E;;AAAA;;;;;;;;AAKT;;AAAuE;AAAA;;AAAA;;AAAA,wCAAsB,QAAtB;AAA8B,WAA9B;;AACrE;;AACF;;;;;;AAHF;;AACE;;AAEU;;AACZ;;;;;;AAJ+C;;AACpC;;AAAA;;;;;;;;AAkDT;;AACE;;AAAI;;AAAc;;AAClB;;AAAI;;AAAqB;;AACzB;;AAAI;;AAAqB;;AACzB;;AAAI;;AAAkB;;AACtB;;AAAI;;AAAa;;AACjB;;AACE;;AAGE;AAAA;;AAAA;;AAAA;;AAAA,kDAA2B,KAA3B;AAAgC,WAAhC;;AAEA;;AAAU;;AAAI;;AAChB;;AACF;;AACF;;;;;;;;AAdM;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;;;;;;;AAWN;;AACE;;AAAI;;AAAc;;AAClB;;AAAI;;AAAsB;;AAC1B;;AAAI;;AAAsB;;AAC1B;;AAAI;;AAAmB;;AACvB;;AAAI;;AAAc;;AAClB;;AACE;;AAGE;AAAA;;AAAA;;AAAA;;AAAA,mDAA4B,KAA5B;AAAiC,WAAjC;;AAEA;;AAAU;;AAAI;;AAChB;;AACF;;AACF;;;;;;;;AAdM;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;;;;;;;AAWN;;AACE;;AAAI;;AAAc;;AAClB;;AAAI;;AAAuB;;AAC3B;;AAAI;;AAAuB;;AAC3B;;AAAI;;AAAoB;;AACxB;;AAAI;;AAAc;;AAClB;;AACE;;AAGE;AAAA;;AAAA;;AAAA;;AAAA,mDAA4B,KAA5B;AAAiC,WAAjC;;AAEA;;AAAU;;AAAI;;AAChB;;AACF;;AACF;;;;;;;;AAdM;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;;;;;;;AAtDR;;AACE;;AACE;;AAAI;;AAAc;;AAClB;;AAAI;;AAAsB;;AAC1B;;AAAI;;AAAsB;;AAC1B;;AAAI;;AAAmB;;AACvB;;AAAI;;AAAc;;AAClB;;AACE;;AAGE;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAEA;;AAAU;;AAAI;;AAChB;;AACF;;AACF;;AACA;;AAgBA;;AAgBA;;AAgBF;;;;;;;;AA/DQ;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AAWe;;AAAA;;AAgBC;;AAAA;;AAgBA;;AAAA;;;;;;AAhE5B;;AAIE;;AACE;;AACE;;AAAuB;;AAAE;;AACzB;;AAAuB;;AAAU;;AACjC;;AAAuB;;AAAU;;AACjC;;AAAuB;;AAAO;;AAC9B;;AAAuB;;AAAS;;AAChC;;AAAuB;;AAAI;;AAC7B;;AACF;;AACA;;AACE;;AAkEF;;AACF;;;;;;AAnEoC;;AAAA;;;;;;AAoEpC;;AACE;;AAAM;;AAAe;;AACvB;;;;;;AAKN;;AACE;;AACF;;;;UDpLai2B,oB;AAcX,sCAAoBr5B,UAApB,EACUD,EADV,EAEUu5B,QAFV,EAGU1wB,WAHV,EAIUlG,EAJV,EAKUD,MALV,EAMUD,KANV,EAOUH,MAPV,EAQUwG,KARV,EAQ+B;AAAA;;AARX,eAAA7I,UAAA,GAAAA,UAAA;AACV,eAAAD,EAAA,GAAAA,EAAA;AACA,eAAAu5B,QAAA,GAAAA,QAAA;AACA,eAAA1wB,WAAA,GAAAA,WAAA;AACA,eAAAlG,EAAA,GAAAA,EAAA;AACA,eAAAD,MAAA,GAAAA,MAAA;AACA,eAAAD,KAAA,GAAAA,KAAA;AACA,eAAAH,MAAA,GAAAA,MAAA;AACA,eAAAwG,KAAA,GAAAA,KAAA;AAjBV,eAAAgb,WAAA,GAAmB,EAAnB;AAIA,eAAA/a,WAAA,GAAqB,IAArB;AACA,eAAAP,MAAA,GAAkB,KAAlB;AACA,eAAAyD,WAAA,GAAuB,KAAvB;AAWqC;;;;iBAErC,oBAAQ;AAAA;;AACN,iBAAKC,WAAL,GAAmB,KAAKvJ,EAAL,CAAQQ,OAAR,CAAgB,YAAhB,CAAnB;AACA,iBAAKD,YAAL,GAAoB,KAAKP,EAAL,CAAQQ,OAAR,CAAgB,YAAhB,CAApB;AACA,iBAAKq2B,aAAL;AAEA,iBAAK3wB,WAAL,CAAiB4wB,UAAjB,CAA4Bh2B,SAA5B,CAAsC,UAAC3D,IAAD,EAAe;AACnD,kBAAI,CAAC,QAAI,CAAC45B,OAAL,CAAa55B,IAAb,CAAL,EAAyB;AACvB,wBAAI,CAAC65B,OAAL,GAAe75B,IAAf;AACA,wBAAI,CAACU,EAAL,GAAUV,IAAI,CAACU,EAAf;AACA,wBAAI,CAAC4I,YAAL,GAAoBtJ,IAApB;AACA,wBAAI,CAAC0I,MAAL,GAAc,IAAd;AACA,wBAAI,CAACyD,WAAL,GAAmB,IAAnB;;AACA,wBAAI,CAACsX,aAAL,CAAmB,QAAI,CAACoW,OAAxB;;AACA,wBAAI,CAAC9wB,WAAL,CAAiBQ,eAAjB,CAAiC,QAAI,CAACD,YAAtC;AACD,eARD,MAQO;AACL,wBAAI,CAACL,WAAL,GAAiB,KAAjB;;AACA,wBAAI,CAACzC,MAAL;AACD;AACF,aAbD;AAcA,iBAAKwC,KAAL,CAAWE,aAAX,CAAyBvF,SAAzB,CAAmC,UAACwF,MAAD,EAAiB;AAClD,sBAAI,CAAC0a,QAAL,GAAc1a,MAAM,CAACC,GAAP,CAAW,IAAX,CAAd;;AACA,kBAAG,QAAI,CAACya,QAAR,EAAiB;AACf,wBAAI,CAAC1jB,UAAL,CAAgB25B,mBAAhB,CAAoC,QAAI,CAACjW,QAAzC,EAAmDlgB,SAAnD,CAA6D,UAACyE,IAAD,EAAQ;AACnEnD,yBAAO,CAACC,GAAR,CAAYkD,IAAZ;AACC,iBAFH;AAGD;;AAEDnD,qBAAO,CAACC,GAAR,CAAY,OAAZ,EAAoBiE,MAApB;AAED,aAVD;AAWD;;;iBAED,uBAAcrI,IAAd,EAAyB;AACvB,iBAAKi5B,QAAL,GAAgB,KAAK75B,EAAL,CAAQc,KAAR,CAAc;AAC5BN,gBAAE,EAAE,CAACI,IAAI,CAACJ,EAAL,IAAW,IAAZ,CADwB;AAE5BkjB,wBAAU,EAAE,CAAC9iB,IAAI,CAAC8iB,UAAL,IAAmB,EAApB,CAFgB;AAG5B9D,wBAAU,EAAE,CAAChf,IAAI,CAACgf,UAAL,IAAmB,EAApB,CAHgB;AAI5B+D,sBAAQ,EAAE,CAAC/iB,IAAI,CAAC+iB,QAAL,IAAiB,EAAlB,CAJkB;AAK5BC,qBAAO,EAAE,CAAChjB,IAAI,CAACgjB,OAAL,IAAgB,EAAjB,CALmB;AAM5Btb,oBAAM,EAAE;AANoB,aAAd,CAAhB;AAQD;;;iBAED,iBAAQ8oB,GAAR,EAAa;AACX,iBAAK,IAAI0I,IAAT,IAAiB1I,GAAjB,EAAsB;AACpB,kBAAI5d,MAAM,CAACumB,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqC7I,GAArC,EAA0C0I,IAA1C,CAAJ,EAAqD;AACnD,uBAAO,KAAP;AACD;AACF;;AAED,mBAAOxtB,IAAI,CAACgJ,SAAL,CAAe8b,GAAf,MAAwB9kB,IAAI,CAACgJ,SAAL,CAAe,EAAf,CAA/B;AACD;;;iBAED,yBAAgB;AAAA;;AACd,iBAAKrV,UAAL,CAAgB4jB,wBAAhB,GAA2CpgB,SAA3C,CAAqD,UAAC2C,GAAD,EAAc;AACjE,sBAAI,CAAC0d,WAAL,GAAmB1d,GAAnB;AACArB,qBAAO,CAACC,GAAR,CAAY,QAAI,CAAC8e,WAAjB;AACD,aAHD,EAGG,UAACzb,GAAD,EAAc,CAEhB,CALD;AAMD;;;iBAED,oBAAW;AAAA;;AACT,gBAAI,KAAKwxB,QAAL,CAAcvsB,OAAlB,EAA2B;AACzB;AACD;;AACDvI,mBAAO,CAACC,GAAR,CAAY,KAAK60B,QAAL,CAAcv4B,KAA1B;AAEA,gBAAIf,OAAO,GAAQ,EAAnB;AACAA,mBAAO,GAAG,KAAKs5B,QAAL,CAAcv4B,KAAxB;AACAf,mBAAO,CAAC2C,YAAR,GAAuB,KAAKA,YAAL,CAAkBqG,QAAzC;AACA,iBAAK7G,MAAL,CAAYa,IAAZ;AACA,iBAAKtD,UAAL,CAAgB8jB,UAAhB,CAA2BxjB,OAA3B,EAAoCkD,SAApC,CAA8C,UAAA2C,GAAG,EAAI;AACnD,sBAAI,CAAC1D,MAAL,CAAYnB,KAAZ;;AACA,sBAAI,CAAC+E,MAAL;AACD,aAHD,EAGG,UAAA+B,GAAG,EAAI;AACR,sBAAI,CAAC3F,MAAL,CAAYnB,KAAZ;AACD,aALD;AAOD;;;iBACD,sBAAamJ,SAAb,EAAsB;AAAA;;AACpB,+DAAKC,IAAL,CACE;AACE;AACAC,kBAAI,EAAE,uBAAsBF,SAAtB,GAAiC,UAAjC,GAA8C,0BAFtD;AAGEG,8BAAgB,EAAE,IAHpB;AAIEC,gCAAkB,EAAE,SAJtB;AAKEC,+BAAiB,EAAE,MALrB;AAME;AACAC,8BAAgB,EAAE,IAPpB;AAQEC,+BAAiB,EAAE,KARrB;AAQ4B,sBAAQ;AARpC,aADF,EAWEC,IAXF,CAWQ,UAAAC,MAAM,EAAI;AAChB,kBAAGA,MAAM,CAACC,WAAP,IAAoB,IAAvB,EAA4B;AAC1B,wBAAI,CAACnL,UAAL,CAAgBm5B,UAAhB,CAA2B,QAAI,CAAChwB,YAAL,CAAkB5I,EAA7C,EACCiD,SADD,CACW,UAAA3D,IAAI,EAAI;AACjB,0BAAI,CAACwC,MAAL,CAAYwD,QAAZ,CAAqB,qCAArB;AACD,iBAHD,EAIA,UAAAuC,GAAG,EAAE;AACH,sBAAIA,GAAG,CAACC,MAAJ,IAAc,GAAlB,EAAuB;AACrB,4BAAI,CAAC7F,KAAL,CAAWc,IAAX,CAAgB,6BAAhB,EAA+C,IAA/C,EAAqD;AACnDkC,8BAAQ,EAAE,IADyC;AAEnDC,sCAAgB,EAAE,KAFiC;AAGnDC,wCAAkB,EAAE;AAH+B,qBAArD;AAKD;;AACD,0BAAI,CAACrD,MAAL,CAAYwD,QAAZ,CAAqB,qCAArB;AAEH,iBAdC;AAeD;AAAC,aA5BJ;AAgCD;;;iBACD,sBAAU;AACR,iBAAKiD,WAAL,GAAiB,KAAjB;AACD;;;iBAED,sBAAa2B,SAAb,EAAwB;AAAA;;AACtB,+DAAKC,IAAL,CACE;AACE;AACAC,kBAAI,EAAE,uBAAsBF,SAAtB,GAAiC,UAAjC,GAA8C,0BAFtD;AAGEG,8BAAgB,EAAE,IAHpB;AAIEC,gCAAkB,EAAE,SAJtB;AAKEC,+BAAiB,EAAE,MALrB;AAME;AACAC,8BAAgB,EAAE,IAPpB;AAQEC,+BAAiB,EAAE,KARrB;AAQ4B,sBAAQ;AARpC,aADF,EAWEC,IAXF,CAWQ,UAAAC,MAAM,EAAI;AAChB,kBAAGA,MAAM,CAACC,WAAP,IAAoB,IAAvB,EAA4B;AAC1B,oBAAI7K,OAAO,GAAQ,EAAnB;AACJA,uBAAO,CAACC,EAAR,GAAa,QAAI,CAACA,EAAlB;AACAD,uBAAO,CAACmK,SAAR,GAAoBA,SAApB;AACAnK,uBAAO,CAAC2C,YAAR,GAAuB,QAAI,CAACA,YAAL,CAAkBqG,QAAzC;;AACA,wBAAI,CAACtJ,UAAL,CAAgBi6B,mBAAhB,CAAoC35B,OAApC,EAA6CkD,SAA7C,CAAuD,UAAC3D,IAAD,EAAU;AAC/DiF,yBAAO,CAACC,GAAR,CAAYlF,IAAZ;AACA,0BAAI,CAACsJ,YAAL,GAAoBtJ,IAApB;;AACA,0BAAI,CAAC+I,WAAL,CAAiBQ,eAAjB,CAAiC,QAAI,CAACD,YAAtC;;AACA,0BAAI,CAAC6C,WAAL,GAAmB,IAAnB;;AACA,0BAAI,CAACpD,WAAL,CAAiBS,cAAjB;;AAEA,sBAAIpD,OAAO,GAAG,EAAd;;AACA,0BAAQwE,SAAR;AACE,yBAAK,MAAL;AACExE,6BAAO,GAAG,QAAV;AACA;;AACF,yBAAK,OAAL;AACEA,6BAAO,GAAG,QAAV;AACA;;AACF,yBAAK,MAAL;AACEA,6BAAO,GAAG,YAAV;AACA;;AACF;AACE;AAXJ;;AAaA,0BAAI,CAACzD,KAAL,CAAWc,IAAX,kBAA0B2C,OAA1B,sBAAoD,IAApD,EAA0D;AACxDT,4BAAQ,EAAE,IAD8C;AAExDC,oCAAgB,EAAE,KAFsC;AAGxDC,sCAAkB,EAAE;AAHoC,mBAA1D;AAKD,iBA1BD;AA2BG;AAAC,aA5CJ;AA8CD;;;iBAED,wBAA6C;AAAA,gBAAhC7F,IAAgC,uEAApB,EAAoB;AAAA,gBAAjB0I,MAAiB;AAC3C,iBAAKK,WAAL,CAAiBsxB,mBAAjB,CAAqCr6B,IAArC;AACA,iBAAKwC,MAAL,CAAYwD,QAAZ,CAAqB,CAAC,0CAAD,CAArB,EAAkE;AAAEC,yBAAW,EAAE;AAAEvF,kBAAE,EAAEV,IAAI,CAACU,EAAX;AAAe45B,uBAAO,EAAG,KAAK55B,EAA9B;AAAiCgI,sBAAM,EAAC;AAAxC;AAAf,aAAlE;AACD;;;iBAED,kBAAS;AACP,iBAAKlG,MAAL,CAAYwD,QAAZ,CAAqB,iCAArB;AACD;;;;;;;yBAtMUwzB,oB,EAAoB,2I,EAAA,2H,EAAA,mI,EAAA,6I,EAAA,0J,EAAA,mK,EAAA,wI,EAAA,uH,EAAA,+H;AAAA,O;;;cAApBA,oB;AAAoB,yC;AAAA,iB;AAAA,gB;AAAA,+hD;AAAA;AAAA;ACjBjC;;AAAsB;;AAA0B;;AAAsE;;AAAQ;;AAC9H;;AACE;;AAAwB;AAAA,qBAAS,IAAAhzB,MAAA,EAAT;AAAiB,aAAjB;;AACtB;;AAAU;;AAAU;;AACtB;;AACA;;AAAqB;;AAAS;;AAC9B;;AACF;;AAEA;;AAEE;;AACE;;AACE;;AACE;;AACE;;AAAW;;AAAW;;AACtB;;AACE;;AACF;;AACF;;AAEA;;AACE;;AAAW;;AAAW;;AACtB;;AACE;;AACF;;AACF;;AAEA;;AACE;;AAAW;;AAAO;;AAClB;;AACE;;AACF;;AACF;;AACF;;AAeA;;AACE;;AACE;;AAQA;;AACE;;AAEW;;AACb;;AAGA;;AACE;;AAES;;AACX;;AACA;;AAKA;;AAKA;;AAKA;;AAMA;;AAIE;AAAA,qBAAS,IAAAA,MAAA,EAAT;AAAiB,aAAjB;;AAEA;;AACF;;AACF;;AACF;;AACF;;AAEA;;AACE;;AAmFA;;AAGF;;AACF;;AACF;;AAEA;;;;AAvLwB;;AAAA;;AAKJ;;AAAA;;AAOA;;AAAA;;AAOA;;AAAA;;AAqBS;;AAAA;;AAOd;;AAAA;;AACM;;AAAA;;AAMN;;AAAA;;AACM;;AAAA;;AAIL;;AAAA;;AAKA;;AAAA;;AAKA;;AAAA;;AAKA;;AAAA;;AAqBP;;AAAA;;AAiFG;;AAAA;;AAON;;AAAA;;;;;;;;;wEDlLOgzB,oB,EAAoB;gBALhC,uDAKgC;iBALtB;AACTp3B,oBAAQ,EAAE,kBADD;AAETC,uBAAW,EAAE,+BAFJ;AAGTC,qBAAS,EAAE,CAAC,+BAAD;AAHF,W;AAKsB,U;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEjBjC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA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","file":"views-maintenance-maintenance-module-es5.js","sourcesContent":["import { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-transaction-denomination-history',\r\n  templateUrl: './transaction-denomination-history.component.html',\r\n  styleUrls: ['./transaction-denomination-history.component.scss']\r\n})\r\nexport class TransactionDenominationHistoryComponent implements OnInit {\r\n\r\n  public itemForm: FormGroup;\r\n  countryCurrency: any[]=[];\r\n  tillId:string[]=[];\r\n  branchCode:string[]=[];\r\n  bankCode:string[]=[];\r\n  DenominationID:number;\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    public dialogRef: MatDialogRef<TransactionDenominationHistoryComponent>,\r\n    private fb: FormBuilder,\r\n    private apiService: ApiService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.DenominationID = this.data.payload? this.data.payload.id: null;\r\n    this.buildItemForm(this.data.payload);\r\n    this.countryCurrency=this.data.currency;\r\n    this.tillId=this.data.till;\r\n    this.branchCode=this.data.branchCode;\r\n    this.bankCode=this.data.bankCode;\r\n  }\r\n  buildItemForm(item) {\r\n    this.itemForm = this.fb.group({\r\n      txtReference:  [item.txtReference || '', Validators.required],\r\n      txtDate:  [new Date(item.txtDate) || '', Validators.required],\r\n      denomCode: [item.denomCode || '', Validators.required],\r\n      denomUnit: [item.denomUnit || '', Validators.required],\r\n      \r\n    })\r\n  }\r\n  \r\n  submit() {\r\n    let payloadOBJ : any ={}\r\n    payloadOBJ = this.itemForm.value;\r\n    payloadOBJ.id = this.DenominationID;\r\n    this.dialogRef.close(this.itemForm.value)\r\n    \r\n    \r\n  }\r\n\r\n  alphakeyPress(event: any) {\r\n    const pattern = /[0-9a-zA-Z]/;\r\n    let inputChar = String.fromCharCode(event.charCode);\r\n    if (!pattern.test(inputChar)) {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n}\r\n","<h1 matDialogTitle>{{data.title}}</h1>\r\n<form [formGroup]=\"itemForm\" (ngSubmit)=\"submit()\">\r\n  <div fxLayout=\"row wrap\" fxLayout.lt-sm=\"column\">\r\n    <div fxFlex=\"50\" class=\"pr-16\">\r\n        <mat-form-field class=\"full-width\">\r\n          <input matInput name=\"TransRef\" maxlength=\"10\" [formControl]=\"itemForm.controls['txtReference']\"\r\n            placeholder=\"Transaction Referance\">\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <div fxFlex=\"50\" class=\"pr-16\">\r\n            <mat-form-field class=\"full-width\" >\r\n            <mat-label>Transaction Date</mat-label>\r\n            <input matInput  [formControl]=\"itemForm.controls['txtDate']\" [matDatepicker]=\"picker\">\r\n            <mat-datepicker-toggle matSuffix [for]=\"picker\">\r\n              <mat-icon matDatepickerToggleIcon>keyboard_arrow_down</mat-icon>\r\n            </mat-datepicker-toggle>\r\n            <mat-datepicker #picker></mat-datepicker>\r\n          </mat-form-field>\r\n      </div>\r\n\r\n    <div fxFlex=\"50\" class=\"pr-16\">\r\n      <mat-form-field class=\"full-width\">\r\n        <input matInput name=\"denomCode\" maxlength=\"10\" (keypress)=alphakeyPress($event) \r\n         [formControl]=\"itemForm.controls['denomCode']\"\r\n          placeholder=\"Denomination Code\">\r\n      </mat-form-field>\r\n    </div>\r\n\r\n    <div fxFlex=\"50\" class=\"pr-16\">\r\n      <mat-form-field class=\"full-width\">\r\n        <input matInput type=\"number\" name=\"units\" min=\"0\" [formControl]=\"itemForm.controls['denomUnit']\" placeholder=\" Denomination unit\">\r\n      </mat-form-field>\r\n    </div>\r\n    <div fxFlex=\"100\" class=\"mt-16\">\r\n      <button mat-raised-button color=\"primary\" [disabled]=\"!(itemForm.valid && itemForm.dirty)\">{{\"SAVE\" }}</button>\r\n      <span fxFlex></span>\r\n      <button mat-button color=\"warn\" type=\"button\" (click)=\"dialogRef.close(false)\">Cancel</button>\r\n    </div>\r\n  </div>\r\n</form>\r\n","import { LiveAnnouncer } from '@angular/cdk/a11y';\r\nimport { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MatSort, Sort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { Router } from '@angular/router';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { AppConfirmService } from 'app/shared/services/app-confirm/app-confirm.service';\r\nimport { AppLoaderService } from 'app/shared/services/app-loader/app-loader.service';\r\nimport { DownloadService } from 'app/shared/services/download.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\n\r\n@Component({\r\n  selector: 'app-city-maintenance',\r\n  templateUrl: './city-maintenance.component.html',\r\n  styleUrls: ['./city-maintenance.component.scss']\r\n})\r\nexport class CityMaintenanceComponent implements OnInit {\r\n  dataSource = new MatTableDataSource();\r\n  @ViewChild('searchVal') searchVal: ElementRef;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  userdata: any[];\r\n  displayedColumns: string[] = ['countryCode', 'countryName', 'stateCode', 'stateName', 'cityName', 'pinCode', 'authStatus', 'recordStatus', 'action'];\r\n  filterByOption: { key: string, value: string }[] = [\r\n    { key: 'countryCode', value: 'Country Code' },\r\n    { key: 'countryName', value: 'Country Name' },\r\n    { key: 'stateCode', value: 'State Code' },\r\n    { key: 'stateName', value: 'State Name' },\r\n    { key: 'cityName', value: 'City Name' },\r\n  ];\r\n  selectedFilterIndex: number = 0;\r\n  loggedInUser: any;\r\n  constructor(\r\n    private router: Router,\r\n    private apiService: ApiService,\r\n    private _liveAnnouncer: LiveAnnouncer,\r\n    private downloadService: DownloadService,\r\n    private snack: MatSnackBar,\r\n    private loader: AppLoaderService,\r\n    private ls: LocalStoreService,\r\n    private confirmService: AppConfirmService\r\n\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.loggedInUser = this.ls.getItem('ICUST_USER');\r\n    this.getAllCity();\r\n  }\r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n  getAllCity() {\r\n    this.loader.open();\r\n    this.apiService.fetchAllCity().subscribe(data => {\r\n      this.loader.close();\r\n      for (let i = 0; i < data.length; i++) {\r\n        if (data[i].authStatus == 'U') {\r\n          data[i].authStatus = 'Unauthorized'\r\n        }\r\n        if (data[i].authStatus == 'A') {\r\n          data[i].authStatus = 'Authorized'\r\n        }\r\n        if (data[i].recordStatus == 'O') {\r\n          data[i].recordStatus = 'Open'\r\n        }\r\n        if (data[i].recordStatus == 'C') {\r\n          data[i].recordStatus = 'Closed'\r\n        }\r\n      }\r\n      this.dataSource = new MatTableDataSource(data);\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n      this.userdata = data;\r\n    }\r\n    )\r\n  }\r\n  doFilter(filterBy, e) {\r\n    this.filterTable(filterBy);\r\n    this.applyFilter(e);\r\n  }\r\n  dataByFilter(index, item) {\r\n    return item.key\r\n  }\r\n  filterTable(filterBy) {\r\n    this.dataSource.filterPredicate = (data: any, filter: string): boolean => {\r\n      return (\r\n        data[filterBy]?.toLocaleLowerCase().includes(filter)\r\n      )\r\n    }\r\n  }\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n  announceSortChange(sortState: Sort) {\r\n    if (sortState.direction) {\r\n      this._liveAnnouncer.announce(`Sorted ${sortState.direction}ending`);\r\n    } else {\r\n      this._liveAnnouncer.announce('Sorting cleared');\r\n    }\r\n  }\r\n  onFileChange(event) {\r\n    console.log('event', event.path[0].files[0]);\r\n    const file: File = event.path[0].files[0];\r\n    const uploadData = new FormData();\r\n    uploadData.append('screenType', 'countryMaint');\r\n    uploadData.append('file', file);\r\n    this.apiService.uploadExelFile(uploadData).subscribe((response) => {\r\n      this.snack.open(`File Uploaded Successfully`, \"OK\", {\r\n        duration: 4000,\r\n        verticalPosition: \"top\",\r\n        horizontalPosition: \"right\",\r\n      });\r\n    });\r\n  }\r\n\r\n  downloadRecord() {\r\n    this.downloadService.downloadFiles(\"cityMaintenance\", this.userdata);\r\n  }\r\n  addEditCity(cityId?) {\r\n    if (cityId) {\r\n      this.router.navigate([`/maintenance/main/addEditCity`], { queryParams: { cityId: cityId } })\r\n    }\r\n    else {\r\n      this.router.navigate([`/maintenance/main/addEditCity`]);\r\n    }\r\n\r\n  }\r\n  deleteItem(city) {\r\n    this.confirmService.confirm({ message: `Are you sure, you want to delete ${city.cityName}?` })\r\n      .subscribe((res) => {\r\n        console.log('res')\r\n        if (res) {\r\n          this.apiService.deleteCity(city.id)\r\n            .subscribe((res: any) => {\r\n              console.log(res);\r\n              if (res) {\r\n                this.snack.open('Record Deleted Successfully', 'OK', {\r\n                  duration: 4000,\r\n                  verticalPosition: 'top',\r\n                  horizontalPosition: 'right'\r\n                });\r\n              }\r\n              this.getAllCity();\r\n            })\r\n        }\r\n\r\n      });\r\n  }\r\n  goBack() {\r\n    this.router.navigate([`/maintenance/main`]);\r\n  }\r\n}\r\n","<h1 class=\"main-head\"><small class=\"small-head\">Home > Maintenance Summary > City Maintenance </small></h1>\r\n<div fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"mt-24\">\r\n  <button mat-icon-button (click)=\"goBack()\">\r\n    <mat-icon>arrow_back</mat-icon>\r\n  </button>\r\n  <span class=\"text-large\">\r\n    City Maintenance\r\n  </span>\r\n</div>\r\n\r\n<mat-card class=\"mt-32\">\r\n  <div>\r\n    <table>\r\n      <tr>\r\n        <td>\r\n          <h2>\r\n            Cities\r\n          </h2>\r\n        </td>\r\n      </tr>\r\n      <tr>\r\n        <td>\r\n          <div class=\"highlight\">\r\n          </div>\r\n        </td>\r\n      </tr>\r\n    </table>\r\n    <span fxFlex></span>\r\n    <button mat-icon-button [matMenuTriggerFor]=\"menu\">\r\n      <mat-icon>more_vert</mat-icon>\r\n    </button>\r\n    <mat-menu #menu=\"matMenu\">\r\n      <div class=\"upload_botton\">\r\n        <button type=\"button\" mat-menu-item>Upload</button>\r\n        <input type=\"file\"\r\n          accept=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\"\r\n          class=\"btn btn-success\" (change)=\"onFileChange($event)\" />\r\n      </div>\r\n      <button (click)=\"downloadRecord()\" mat-menu-item>\r\n        <span>Download</span>\r\n      </button>\r\n    </mat-menu>\r\n  </div><br>\r\n  <div fxLayout=\"row\" class=\"w-full\" fxLayoutAlign=\"space-arround center\" class=\"ml-16 mt-32\">\r\n    <div fxLayout=\"row\" class=\"w-full\" fxLayoutGap=\"10px\">\r\n      <div>\r\n        <mat-form-field appearance=\"outline\">\r\n          <mat-label>Filter By</mat-label>\r\n          <mat-select name=\"filterBy\" #filterBy [(ngModel)]=\"selectedFilterIndex\" placeholder=\"Filter By\">\r\n\r\n            <mat-option value=\"0\">Select</mat-option>\r\n            <mat-option *ngFor=\"let filter of filterByOption; trackBy:dataByFilter\" value=\"{{filter.key}}\">\r\n              {{filter.value}}\r\n            </mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n      </div>\r\n      <div>\r\n        <mat-form-field appearance=\"outline\">\r\n          <mat-label>Search</mat-label>\r\n          <input matInput #searchVal (keyup)=\"doFilter(filterBy.value,$event)\" placeholder=\"Search\">\r\n          <mat-icon matSuffix>search</mat-icon>\r\n        </mat-form-field>\r\n      </div>\r\n      <div *ngIf=\"searchVal.value || filterBy.value\" class=\"resetDiv\">\r\n        <button mat-stroked-button class=\"clearBtn\" (click)=\"clearFilter()\">RESET\r\n        </button>\r\n      </div>\r\n      <div class=\"filterDiv\">\r\n        <button mat-flat-button color=\"primary\" class=\"addNewBtn\" (click)=\"addEditCity()\">ADD NEW\r\n        </button>\r\n      </div>\r\n\r\n    </div>\r\n  </div>\r\n  <div class=\"mat-elevation-z0\">\r\n    <mat-table class=\"w-full\" [dataSource]=\"dataSource\" matSort (matSortChange)=\"announceSortChange($event)\">\r\n\r\n      <ng-container matColumnDef=\"countryCode\">\r\n        <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by country code\"> Country Code\r\n        </mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\"> {{element.countryCode}} </mat-cell>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"countryName\">\r\n        <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by country name\"> Country Name\r\n        </mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\"> {{element.countryName}} </mat-cell>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"stateCode\">\r\n        <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by state code\"> State Code\r\n        </mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\"> {{element.stateCode}} </mat-cell>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"stateName\">\r\n        <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by state name\"> State Name\r\n        </mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\"> {{element.stateName}} </mat-cell>\r\n      </ng-container>\r\n      <ng-container matColumnDef=\"cityName\">\r\n        <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by city name\"> City Name\r\n        </mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\"> {{element.cityName}} </mat-cell>\r\n      </ng-container>\r\n      <ng-container matColumnDef=\"pinCode\">\r\n        <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by pin code\"> Pin Code\r\n        </mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\"> {{element.pinCode}} </mat-cell>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"authStatus\">\r\n        <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Auth Status\"> Auth Status\r\n        </mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\"> {{element.authStatus}} </mat-cell>\r\n      </ng-container>\r\n      <ng-container matColumnDef=\"recordStatus\">\r\n        <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Record Status\"> Record Status\r\n        </mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\"> {{element.recordStatus}} </mat-cell>\r\n      </ng-container>\r\n      <ng-container matColumnDef=\"action\">\r\n        <mat-header-cell *matHeaderCellDef>Action</mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\">\r\n          <div>\r\n            <mat-icon class=\"actionIcons\" matTooltip=\"Edit\" (click)=\"addEditCity(element.id)\">edit</mat-icon>\r\n          </div>&nbsp;&nbsp;&nbsp;&nbsp;\r\n          <div>\r\n            <mat-icon class=\"actionIcons\" matTooltip=\"Delete\" [disabled]=\"element.oneTimeAuth =='Y'\"\r\n              (click)=\"deleteItem(element)\">delete</mat-icon>\r\n          </div>\r\n        </mat-cell>\r\n      </ng-container>\r\n\r\n      <mat-header-row *matHeaderRowDef=\"displayedColumns;\"></mat-header-row>\r\n      <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\r\n    </mat-table>\r\n    <mat-paginator class=\"mt-16\" [pageSizeOptions]=\"[5, 10, 15]\" showFirstLastButtons></mat-paginator>\r\n  </div>\r\n</mat-card>","import { Component, OnInit, OnDestroy, ViewChild, ElementRef } from '@angular/core';\r\nimport { MatDialogRef, MatDialog } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Subscription } from 'rxjs';\r\nimport { rumangoAnimations } from 'app/shared/animations/rumango-animations';\r\nimport { AppConfirmService } from 'app/shared/services/app-confirm/app-confirm.service';\r\nimport { AppLoaderService } from 'app/shared/services/app-loader/app-loader.service';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { Location } from '@angular/common';\r\nimport { Data, Router } from '@angular/router';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatSort, Sort } from '@angular/material/sort';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { LiveAnnouncer } from '@angular/cdk/a11y';\r\nimport { BranchHolidayPopupComponent } from '../branch-holiday/branch-holiday-popup/branch-holiday-popup.component';\r\nimport { SendHolidayScreenService } from 'app/shared/services/send-holiday-screen.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-currency-holiday',\r\n  templateUrl: './currency-holiday.component.html',\r\n  styleUrls: ['./currency-holiday.component.scss']\r\n})\r\nexport class CurrencyHolidayComponent implements OnInit {\r\n  // items: string[];\r\n  // loading: boolean;\r\n\r\n  // constructor(\r\n  //   private dialog: MatDialog,\r\n  //   private snack: MatSnackBar,\r\n  //   private confirmService: AppConfirmService,\r\n  //   private loader: AppLoaderService,\r\n  //   private apiService:ApiService,\r\n  //   private ls:LocalStoreService,\r\n  //   private _location: Location,\r\n  //   private router:Router,\r\n  //   private http: HttpClient\r\n  // ) { }\r\n\r\n  // ngOnInit(): void {\r\n  //   this.apiService.getBranchHolidayInfo()\r\n  //     .subscribe(data => {\r\n  //       this.items = data;\r\n  //       this.getCurrencyHoliday();\r\n  //   this.loading = false;\r\n  //     })\r\n  // }\r\n\r\n  // deleteItem(row) {\r\n  //   this.confirmService.confirm({message: `Delete ${row.entityCode}?`})\r\n  //     .subscribe(res => {\r\n  //       if (res) {\r\n  //         this.loader.open();\r\n  //         this.apiService.deleteCurrencyHoliday(row.id)\r\n  //           .subscribe(data => {\r\n  //             this.getCurrencyHoliday() ;\r\n  //             this.loader.close();\r\n  //             this.snack.open('CurrencyHoliday deleted!', 'OK', { duration: 4000 })\r\n  //           })\r\n  //       }\r\n  //     })\r\n  // }\r\n  // getCurrencyHoliday() {\r\n  //   this.apiService.getCurrencyHolidayInfo()\r\n  //     .subscribe(data => {\r\n  //       this.items = data;\r\n  //     })\r\n  // }\r\n  @ViewChild('searchVal') searchVal: ElementRef;\r\n  selectedFilterIndex : number = 0;\r\n\r\n  dataSource = new MatTableDataSource();\r\n  displayedColumns: string[] = ['entityCode', 'bankCode', 'branchCode', 'calenderYear', 'authStatus', 'recordStatus', 'action'];\r\n\r\n  filterByOption: { key: string, value: string }[] = [\r\n    { key: 'entityCode', value: 'entityCode' },\r\n    { key: 'bankCode', value: 'Bank Code' },\r\n    { key: 'branchCode', value: 'Branch Code' }\r\n  ];\r\n\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  branchCode:string[]=[];\r\n  bankCode:string[]=[];\r\n  entityCode:string[]=[];\r\n  public items: any[];\r\n  users: any[] = [];\r\n  public getItemSub: Subscription;\r\n  screen: any;\r\n  \r\n\r\n  constructor(private router:Router,private snack: MatSnackBar,private loader: AppLoaderService,    private screenService: SendHolidayScreenService, \r\n    private dialog: MatDialog,private apiService:ApiService,private confirmService: AppConfirmService,private _liveAnnouncer: LiveAnnouncer,\r\n    private ls:LocalStoreService) { }\r\n\r\n  ngOnInit(): void {\r\n   this.getBrancheHoliday(); \r\n   this.getItems();\r\n  }\r\n  ngOnDestroy() {\r\n    if (this.getItemSub) {\r\n      this.getItemSub.unsubscribe()\r\n    }\r\n  }\r\n  getItems() {\r\n    this.items = this.users;\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n  addNew(res){\r\n    console.log(res);\r\n    this.screenService.holidayScr.next(res);\r\n    this.router.navigate([\"/maintenance/main/holiday/BranchHoliday/addHoliday\"]);\r\n  }\r\n  onFileChange(event) {\r\n    console.log('event', event.path[0].files[0]);\r\n    const file: File = event.path[0].files[0];\r\n    const uploadData = new FormData();\r\n    uploadData.append('screenType', 'BranchHoliday');\r\n    uploadData.append('file', file);\r\n    this.apiService.uploadExelFile(uploadData).subscribe((response) => {\r\n      console.log(response);\r\n      this.snack.open(`File Uploaded Successfully`, \"OK\", {\r\n        duration: 4000,\r\n        verticalPosition: \"top\",\r\n        horizontalPosition: \"right\",\r\n      });\r\n    });\r\n    this.getBrancheHoliday();\r\n  }\r\n\r\n  getBrancheHoliday() {\r\n    this.apiService.getCurrencyHolidayInfo().subscribe((data: any) => {\r\n      for(let i=0;i<data.length;i++){\r\n        if(data[i].authStatus == 'U'){\r\n          data[i].authStatus = 'Unauthorized'\r\n        }\r\n        if(data[i].authStatus == 'A') {\r\n          data[i].authStatus = 'Authorized'\r\n        } \r\n        if(data[i].recordStatus == 'O'){\r\n          data[i].recordStatus = 'Open'\r\n        } \r\n        if(data[i].recordStatus == 'C'){\r\n          data[i].recordStatus = 'Closed'\r\n        }\r\n      }\r\n      this.users = data;\r\n      this.items = this.users;\r\n      this.dataSource = new MatTableDataSource(data);\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    });\r\n  }\r\n\r\n  \r\n  goBack(){\r\n    this.router.navigate([`/maintenance/main/holiday`]);\r\n  }\r\n\r\n  doFilter(filterBy, e){\r\n    this.filterTable(filterBy);\r\n    this.applyFilter(e);\r\n  }\r\n \r\n\r\n  filterTable(filterBy) {\r\n    this.dataSource.filterPredicate = (data: any, filter: string): boolean => {\r\n      return (\r\n        data[filterBy].toLocaleLowerCase().includes(filter)\r\n      )\r\n    }\r\n  }\r\n\r\n  clearFilter(){\r\n   this.dataSource.filter = '';\r\n   this.searchVal.nativeElement.value = '';\r\n   this.selectedFilterIndex = 0;\r\n  }\r\n\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n  openPopUp(data: any = {}, isNew?){\r\n    let title = isNew ? 'Add Branch Specific Holiday' : 'Edit Branch Specific Holiday';\r\n    let dialogRef: MatDialogRef<any> = this.dialog.open(BranchHolidayPopupComponent, {\r\n      width: '400px',\r\n      disableClose: true,\r\n      data: {\r\n        title: title, \r\n        payload: data,\r\n        branchCode: this.branchCode,\r\n        \r\n      }\r\n    })\r\n    dialogRef.afterClosed()\r\n      .subscribe(res => {\r\n        if(!res) {\r\n          return;\r\n        }\r\n        \r\n        if (isNew) {\r\n           this.apiService.updateBranchHolidayDetails(res,false).subscribe(response => {\r\n            \r\n            this.getBrancheHoliday();\r\n            this.snack.open(`Record Added!'`, \"OK\", {\r\n              duration: 2000,\r\n              verticalPosition: \"top\",\r\n              horizontalPosition: \"right\",\r\n            });\r\n          });\r\n        } else {\r\n          this.apiService.updateBranchHolidayDetails(res,false).subscribe(response => {\r\n            \r\n            this.items = response;\r\n            this.loader.close();\r\n            this.getBrancheHoliday();\r\n            this.snack.open(`Record Updated!'`, \"OK\", {\r\n              duration: 2000,\r\n              verticalPosition: \"top\",\r\n              horizontalPosition: \"right\",\r\n            });\r\n          });\r\n        }\r\n      })\r\n\r\n  }\r\n  getBranchCode() {\r\n    this.apiService.getBranchCode().subscribe((resp) => {\r\n      this.branchCode = resp;\r\n    });\r\n  }\r\n  \r\n  deleteItem(element) {\r\n    this.confirmService.confirm({message: `Delete ${element.entityCode}?`})\r\n      .subscribe(res => {\r\n        if (res) {\r\n          this.apiService.deleteCurrencyHoliday(element.id)\r\n            .subscribe(data => {\r\n            },\r\n              err=>{\r\n                if (err.status == 200) {\r\n                  this.snack.open('Record Deleted Successfully', 'OK', {\r\n                    duration: 4000,\r\n                    verticalPosition: 'top',\r\n                    horizontalPosition: 'right'\r\n                  });\r\n                }\r\n      \r\n              \r\n              this.getBrancheHoliday();\r\n              \r\n            })\r\n        }\r\n        \r\n      });\r\n  }\r\n  commonHoliday(){\r\n    this.ls.setItem('SCREEN_NAME','Currency');\r\n    this.router.navigate([\"/maintenance/main/holiday/BranchHoliday/commonHoliday\"]);\r\n  }\r\n  addBranch(){\r\n    this.router.navigate([\"/maintenance/main/holiday/BranchHoliday/addBranch\"]);\r\n    \r\n  }\r\n  openEdit(data: any = {},res,isEdit : string) {\r\n    console.log(res);\r\n    this.screenService.holidayScr.next(res);\r\n    this.router.navigate([\"/maintenance/main/holiday/BranchHoliday/addHoliday\"],{ queryParams: { id: data.id, isEdit : isEdit } });\r\n  }\r\n\r\n  announceSortChange(sortState: Sort) {\r\n    if (sortState.direction) {\r\n      this._liveAnnouncer.announce(`Sorted ${sortState.direction}ending`);\r\n    } else {\r\n      this._liveAnnouncer.announce('Sorting cleared');\r\n    }\r\n  }\r\n\r\n/*this.apiService.upsertCurrencyHolidayDetails().subscribe(response => {\r\n\r\n    });*/\r\n\r\n}\r\n","<h1 class=\"main-head\"><small class=\"small-head\">Home > Maintenance Summary > \r\n    Holiday Maintenance > Currency Holiday</small></h1>\r\n  <div fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"mt-24\">\r\n    <button mat-icon-button (click)=\"goBack()\">\r\n        <mat-icon>arrow_back</mat-icon>\r\n      </button> \r\n      <span class=\"text-large\">\r\n        Currency Holidays\r\n      </span>\r\n      <span fxFlex></span>\r\n      <mat-button-toggle-group value=\"table\" appearance=\"legacy\" name=\"fontStyle\" aria-label=\"Font Style\" >\r\n        <mat-button-toggle value=\"table\"><span >TABLE</span></mat-button-toggle>\r\n        <mat-button-toggle value=\"calendar\" (click)=\"addNew('Currency')\" ><span >CALENDAR</span></mat-button-toggle>\r\n      </mat-button-toggle-group>\r\n  </div>\r\n  \r\n  \r\n  \r\n  <mat-card class=\"mt-32\">\r\n   <div fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"mt-24\">\r\n    \r\n    <table>\r\n      <tr>\r\n        <td>\r\n          <h2>\r\n            Currency Holidays\r\n          </h2>\r\n        </td>\r\n      </tr>\r\n      <tr>\r\n        <td>\r\n          <div class=\"highlight\">\r\n          </div>\r\n        </td>\r\n      </tr>\r\n    </table>\r\n       <span fxFlex></span>\r\n       <button mat-icon-button [matMenuTriggerFor]=\"menu\">\r\n         <mat-icon>more_vert</mat-icon>\r\n       </button>\r\n       <mat-menu #menu=\"matMenu\">\r\n         <div class=\"upload_botton\">\r\n          <button type=\"button\" mat-menu-item>Upload</button>\r\n          <input\r\n            type=\"file\"\r\n            accept=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\"\r\n            class=\"btn btn-success\"\r\n            (change)=\"onFileChange($event)\"\r\n          />\r\n        </div>\r\n         <button mat-menu-item>\r\n           <span>Download</span>\r\n         </button>\r\n       </mat-menu>\r\n    </div>\r\n   <div class=\"w-full\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n     <div class=\"w-full\" fxLayout=\"row\" fxLayoutGap='20px'>\r\n       <div>\r\n         <mat-form-field appearance=\"outline\">\r\n            <mat-label>Filter By</mat-label>\r\n            <mat-select name=\"filterBy\" #filterBy [(ngModel)]=\"selectedFilterIndex\" placeholder=\"Filter By\">\r\n           <!-- <mat-select name=\"filterBy\" #filterBy [(ngModel)]=\"selectedFilterIndex\"> -->\r\n             <mat-option value=\"0\">Select</mat-option>\r\n             <mat-option *ngFor=\"let filter of filterByOption\" value=\"{{filter.key}}\">\r\n               {{filter.value}}\r\n             </mat-option>\r\n           </mat-select>\r\n         </mat-form-field>\r\n       </div>\r\n       <div>\r\n         <mat-form-field appearance=\"outline\">\r\n          <mat-label>Search</mat-label>\r\n          <input matInput #searchVal (keyup)=\"doFilter(filterBy.value,$event)\" placeholder=\"Search\">\r\n          <!-- <input matInput #searchVal (keyup)=\"doFilter(filterBy.value,$event)\"> -->\r\n           <mat-icon matSuffix>search</mat-icon>\r\n         </mat-form-field>\r\n       </div>\r\n       <div *ngIf=\"searchVal.value || filterBy.value\" class=\"resetDiv\">\r\n        <button mat-stroked-button class=\"clearBtn\" (click)=\"clearFilter()\">RESET\r\n        </button>\r\n      </div>\r\n     </div>\r\n     <div>\r\n       <button mat-flat-button color=\"primary\" class=\"filterDiv\"  class=\"mr-38\" style=\"height: 45px;\" >ADD NEW\r\n           <button mat-icon-button>\r\n             <mat-icon [matMenuTriggerFor]=\"accountMenu\"\r\n               >keyboard_arrow_down</mat-icon>\r\n           <mat-menu #accountMenu=\"matMenu\" style=\"width: 50ox;\" >\r\n             <mat-nav-list role=\"list\" class=\"notification-list curr_holiday\" >\r\n               <mat-list-item\r\n               role=\"listitem\"\r\n               class=\"notific-item\">\r\n               <div (click)=\"commonHoliday()\">\r\n                 <small>\r\n                  Common Holiday\r\n                </small>\r\n               </div>\r\n               </mat-list-item>\r\n               <!-- <mat-list-item\r\n               role=\"listitem\"\r\n               class=\"notific-item\">\r\n               <div (click)=\"addBranch()\">\r\n                 <small >\r\n                    Currency Specific Holiday\r\n                 </small>\r\n               </div>\r\n   \r\n               </mat-list-item> -->\r\n   \r\n             </mat-nav-list>\r\n           </mat-menu>\r\n           </button>\r\n           </button>\r\n     </div>\r\n   </div>\r\n   <div class=\"mat-elevation-z0\">\r\n     <mat-table class=\"w-full\" [dataSource]=\"dataSource\" matSort (matSortChange)=\"announceSortChange($event)\">\r\n  \r\n       <ng-container matColumnDef=\"entityCode\">\r\n         <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Entity Code\"> Entity Code\r\n         </mat-header-cell>\r\n         <mat-cell *matCellDef=\"let element\"> {{element.entityCode}} </mat-cell>\r\n       </ng-container>\r\n  \r\n       <ng-container matColumnDef=\"bankCode\">\r\n         <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Bank Code\"> Bank Code\r\n         </mat-header-cell>\r\n         <mat-cell *matCellDef=\"let element\"> {{element.bankCode}} </mat-cell>\r\n       </ng-container>\r\n  \r\n       <ng-container matColumnDef=\"branchCode\">\r\n         <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Branch Code\"> Currency Code\r\n            </mat-header-cell>\r\n         <mat-cell *matCellDef=\"let element\"> {{element.currencyCode}} </mat-cell>\r\n       </ng-container>\r\n  \r\n       <ng-container matColumnDef=\"calenderYear\">\r\n         <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Year\"> Year\r\n         </mat-header-cell>\r\n         <mat-cell *matCellDef=\"let element\"> {{element.calenderYear}} </mat-cell>\r\n       </ng-container>\r\n       <ng-container matColumnDef=\"authStatus\">\r\n        <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Auth Status\"> Auth Status\r\n        </mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\"> {{element.authStatus}} </mat-cell>\r\n      </ng-container>\r\n      <ng-container matColumnDef=\"recordStatus\">\r\n        <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Record Status\"> Record Status\r\n        </mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\"> {{element.recordStatus}} </mat-cell>\r\n      </ng-container>\r\n\r\n       <ng-container matColumnDef=\"action\">\r\n        <mat-header-cell *matHeaderCellDef>Action</mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\">\r\n          <div>\r\n           <mat-icon class=\"actionIcons\" matTooltip=\"Edit\" (click)=\"openEdit(element,'Currency')\">edit</mat-icon>\r\n        </div>&nbsp;&nbsp;&nbsp;&nbsp;\r\n        <div>\r\n         <mat-icon class=\"actionIcons\" matTooltip=\"Delete\" [disabled]=\"element.oneTimeAuth =='Y'\"  (click)=\"deleteItem(element)\" >delete</mat-icon>\r\n        </div>\r\n        </mat-cell>\r\n      </ng-container>\r\n  \r\n       <mat-header-row *matHeaderRowDef=\"displayedColumns;\"></mat-header-row>\r\n       <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\r\n     </mat-table>\r\n     <mat-paginator class=\"mt-16\" [pageSizeOptions]=\"[5,10,20]\" showFirstLastButtons></mat-paginator>\r\n   </div>\r\n  </mat-card>\r\n     \r\n  ","import { ChangeDetectorRef, Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { DataService } from 'app/shared/services/data.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-add-or-edit-biller-info',\r\n  templateUrl: './add-or-edit-biller-info.component.html',\r\n  styleUrls: ['./add-or-edit-biller-info.component.scss']\r\n})\r\nexport class AddOrEditBillerInfoComponent implements OnInit {\r\n  public billerMaintenance: FormGroup;\r\n  id: number;\r\n  isEdit: boolean = false;\r\n  branchCode: string[] = [];\r\n  bankCode: string[] = [];\r\n  entityCode: string[] = [];\r\n  readorWrite: boolean=true;\r\n  auditLogData: any;\r\n  loggedInUser: any;\r\n  constructor(private fb: FormBuilder,private apiService: ApiService,private router:Router, private  ls : LocalStoreService,\r\n    private snack: MatSnackBar,private cdr: ChangeDetectorRef, private dataService : DataService, private route : ActivatedRoute) { }\r\n\r\n  ngOnInit(): void {\r\n    this.route.queryParamMap.subscribe((params: any) => {\r\n      if(params.get('id')){\r\n        this.isEdit = true;\r\n        this.id = params.get('id');\r\n        this.apiService.getBillerInfoById(params.get('id')).subscribe((resp) =>{\r\n          this.auditLogData = resp;\r\n          this.dataService.setAuditLogData(this.auditLogData);\r\n           this.dataService.sendClickEvent();\r\n           this.buildItemForm(resp);\r\n        });\r\n      }\r\n      else{\r\n        this.readorWrite=false;\r\n        this.buildItemForm({});\r\n      }\r\n    }\r\n    );  \r\n    this.loggedInUser = this.ls.getItem('ICUST_USER').userName;\r\n    this.buildItemForm({});\r\n    this.getBankCode();\r\n    this.getBranchCode();\r\n    this.getEnityCode();\r\n  }\r\n\r\n  buildItemForm(item) {\r\n    this.billerMaintenance = this.fb.group({\r\n      id: [item.id || ''],\r\n      entityCode: [item.entityCode || '', Validators.required],\r\n      bankCode: [item.bankCode || '', Validators.required],\r\n      billerAccBrn: [item.billerAccBrn || ''],\r\n      billerAccount: [item.billerAccount || ''],\r\n      billerCode: [item.billerCode || ''],\r\n      billerName: [item.billerName || ''],\r\n      loggedInUser: [item.loggedInUser || ''],\r\n      lastModifiedDate:[item.lastModifiedDate || ''],\r\n      authStatus: [item.authStatus || ''],\r\n      authBy: [item.authBy || ''],\r\n      authDate: [item.authDate || ''],\r\n      createdBy: [item.createdBy || ''],\r\n      createdDate: [item.createdDate || ''],\r\n      modifiedBy: [item.modifiedBy || ''],\r\n      noOfModification: [item.noOfModification || ''],\r\n      oneTimeAuth: [item.oneTimeAuth || ''],\r\n      recordStatus: [item.recordStatus || ''],\r\n      version: [item.version || ''],\r\n    });\r\n    this.cdr.markForCheck();\r\n    this.cdr.detectChanges();\r\n  }\r\n  deleteRecord(operation){\r\n    Swal.fire(\r\n      {\r\n        //text: 'Unable to process' + 'Error ' + this.responseforfileupload.errorMessage + 'Do you want to Proceed??',\r\n        text: 'You are trying to '+ operation +' record.' + ' Do you want to proceed?',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        // confirmButtonText: 'PROCEED.'\r\n        cancelButtonText: 'NO',\r\n        confirmButtonText: 'YES', 'icon': 'info'\r\n      }\r\n    ).then((result => {\r\n      if(result.isConfirmed==true){\r\n        this.apiService.deleteBillerInfo(this.auditLogData.id)\r\n        .subscribe(data => {\r\n          this.router.navigate([`/maintenance/main/billerInfoMaint`]);\r\n        },\r\n        err=>{\r\n          if (err.status == 200) {\r\n            this.snack.open('Record Deleted Successfully', 'OK', {\r\n              duration: 4000,\r\n              verticalPosition: 'top',\r\n              horizontalPosition: 'right'\r\n            });\r\n          }\r\n          this.router.navigate([`/maintenance/main/billerInfoMaint`]);\r\n        \r\n      })\r\n      }}))\r\n   \r\n         \r\n       \r\n  }\r\n  editRecord(){\r\n    this.readorWrite=false;\r\n  }\r\n\r\n  updateRecord(operation) {\r\n    Swal.fire(\r\n      {\r\n        //text: 'Unable to process' + 'Error ' + this.responseforfileupload.errorMessage + 'Do you want to Proceed??',\r\n        text: 'You are trying to '+ operation +' record.' + ' Do you want to proceed?',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        // confirmButtonText: 'PROCEED.'\r\n        cancelButtonText: 'NO',\r\n        confirmButtonText: 'YES', 'icon': 'info'\r\n      }\r\n    ).then((result => {\r\n      if(result.isConfirmed==true){\r\n        let payload: any = {};\r\n        payload.id = this.id;\r\n        payload.operation = operation;\r\n        payload.loggedInUser = this.loggedInUser;\r\n        this.apiService.updateBiller(payload).subscribe((data) => {\r\n          this.auditLogData = data;\r\n          this.dataService.setAuditLogData(this.auditLogData);\r\n          this.dataService.sendClickEvent();\r\n          let message = '';\r\n          switch (operation) {\r\n            case 'open':\r\n              message = 'opened'\r\n              break;\r\n            case 'close':\r\n              message = 'closed'\r\n              break;\r\n            case 'auth':\r\n              message = 'authorized'\r\n              break;\r\n            default:\r\n              break;\r\n          }\r\n          this.snack.open(`Record ${message} successful!'`, \"OK\", {\r\n            duration: 2000,\r\n            verticalPosition: \"top\",\r\n            horizontalPosition: \"right\",\r\n          });\r\n        });\r\n      }\r\n    }))\r\n    \r\n  }\r\n\r\n  save(form){\r\n    this.billerMaintenance.value.loggedInUser = this.loggedInUser;\r\n    this.apiService.saveOrUpdateBillerInfo(this.billerMaintenance.value).subscribe(data => {\r\n      if(data != null && this.isEdit == true){\r\n        this.snack.open('Data Updated!', 'OK', {\r\n          duration: 4000,\r\n          verticalPosition: 'top',\r\n          horizontalPosition: 'right'\r\n        });\r\n        this.goBack();\r\n        this.cdr.markForCheck();\r\n      }\r\n      else if(data != null && this.isEdit == false){\r\n        this.snack.open('Data Saved!', 'OK', {\r\n          duration: 4000,\r\n          verticalPosition: 'top',\r\n          horizontalPosition: 'right'\r\n        });\r\n        this.goBack();\r\n        this.cdr.markForCheck();\r\n\r\n      }\r\n    })\r\n  }\r\n\r\n\r\n  getBranchCode(){\r\n    this.apiService.getBranchCode().subscribe(branchCodeResp=>{\r\n      this.branchCode=branchCodeResp;\r\n      console.log(this.branchCode);\r\n    });\r\n  }\r\n\r\n  getBankCode(){\r\n    this.apiService.getBankCode().subscribe(bankCodeResp=>{\r\n     // this.bankCode=bankCodeResp;\r\n      //console.log(this.bankCode);\r\n      for(let i=0;i<bankCodeResp.length;i++){\r\n        if(bankCodeResp[i].authStatus==='A'){\r\n          console.log('auth',bankCodeResp[i].authStatus)\r\n          this.bankCode.push(bankCodeResp[i]);\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  getEnityCode(){\r\n    this.apiService.fetchEntityDetails().subscribe(entityCodeResp=>{\r\n    // this.entityCode=entityCodeResp;\r\n      console.log(this.entityCode);\r\n      for(let i=0;i<entityCodeResp.length;i++){\r\n        if(entityCodeResp[i].authStatus==='A'){\r\n          console.log('auth',entityCodeResp[i].authStatus)\r\n          this.entityCode.push(entityCodeResp[i]);\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  goBack() {\r\n    this.router.navigate([`/maintenance/main/billerInfoMaint`]);\r\n  }\r\n  dataByEntityCode(index,item){\r\n    return item.entityCode;\r\n  }\r\n  dataByBankCode(index,item){\r\n    return item.bankCode;\r\n  }\r\n  dataByBranchCode(index,item){\r\n    return item.branchCode;\r\n  }\r\n\r\n  dataBybranchCode(index, branch){\r\n    return branch.branchCode; \r\n }\r\n\r\n\r\n}\r\n","<h1 class=\"main-head\"><small class=\"small-head\">Home > Maintenance Summary > Biller Maintenance > <span *ngIf=\"!isEdit\">Add</span><span *ngIf=\"isEdit\">Edit</span> Biller Information</small></h1>\r\n<div fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"mt-16\">\r\n\t<button mat-icon-button (click)=\"goBack()\">\r\n\t\t<mat-icon>arrow_back</mat-icon>\r\n\t</button>\r\n\t<h1 *ngIf=\"!isEdit\" class=\"add-text\">Add Biller Information</h1>\r\n    <h1 *ngIf=\"isEdit\" class=\"add-text\">Edit Biller Information</h1>\r\n</div>\r\n<form [formGroup]=\"billerMaintenance\">\r\n\t<mat-card>\r\n\t\t<mat-card-header>\r\n\t\t\t<!-- <mat-card-title>Biller Info</mat-card-title> -->\r\n\t\t</mat-card-header>\r\n\t\t<mat-card-content>\r\n\t\t\t<div fxLayoutGap=\"15px\">\r\n\t\t\t\t<div fxFlex=\"32.33\"  *ngIf=\"!readorWrite\" >\r\n\t\t\t\t\t<mat-label>Entity Code *</mat-label>\r\n\t\t\t\t\t<mat-form-field class=\"full-width\" appearance=\"fill\">\r\n\t\t\t\t\t\t<mat-select name=\"entityCode\" formControlName=\"entityCode\" placeholder=\"select entityCode\"\r\n\t\t\t\t\t\t\trequired>\r\n\t\t\t\t\t\t\t<mat-option *ngFor=\"let entityC of entityCode; trackBy:dataByEntityCode\" [value]=\"entityC.entityCode\">\r\n\t\t\t\t\t\t\t\t{{entityC.entityCode}} </mat-option>\r\n\t\t\t\t\t\t</mat-select>\r\n\t\t\t\t\t\t<mat-error *ngIf=\"billerMaintenance.get('entityCode').hasError('required')\">\r\n\t\t\t\t\t\t\tEntity Code is Required!\r\n\t\t\t\t\t\t</mat-error>\r\n\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div fxFlex=\"32.33\"  *ngIf=\"readorWrite\" >\r\n\t\t\t\t\t<mat-label>Entity Code *</mat-label>\r\n\t\t\t\t\t<mat-form-field class=\"full-width\" appearance=\"fill\">\r\n\t\t\t\t\t\t<input   [readonly]=\"readorWrite\" matInput name=\"billerCode\" type=\"text\" formControlName=\"entityCode\" required\r\n\t\t\t\t\t\t\t />\r\n\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div fxFlex=\"32.33\" *ngIf=\"!readorWrite\">\r\n\t\t\t\t\t<mat-label>Bank Code *</mat-label>\r\n\t\t\t\t\t<mat-form-field class=\"full-width\" appearance=\"fill\">\r\n\t\t\t\t\t\t<mat-select name=\"bankCode\" formControlName=\"bankCode\" placeholder=\"select bankCode\">\r\n\t\t\t\t\t\t\t<mat-option *ngFor=\"let bankC of bankCode; trackBy:dataByBankCode\" [value]=\"bankC.bankCode\"> {{bankC.bankCode}}\r\n\t\t\t\t\t\t\t</mat-option>\r\n\t\t\t\t\t\t</mat-select>\r\n\t\t\t\t\t\t<mat-error *ngIf=\"billerMaintenance.get('entityCode').hasError('required')\">\r\n\t\t\t\t\t\t\tBank Code is Required!\r\n\t\t\t\t\t\t</mat-error>\r\n\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div fxFlex=\"32.33\"  *ngIf=\"readorWrite\" >\r\n\t\t\t\t\t<mat-label>Bank Code *</mat-label>\r\n\t\t\t\t\t<mat-form-field class=\"full-width\" appearance=\"fill\">\r\n\t\t\t\t\t\t<input   [readonly]=\"readorWrite\" matInput name=\"billerCode\" type=\"text\" formControlName=\"bankCode\" required\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div fxFlex=\"32.33\">\r\n\t\t\t\t\t<mat-label>Biller Code *</mat-label>\r\n\t\t\t\t\t<mat-form-field class=\"full-width\" appearance=\"fill\">\r\n\t\t\t\t\t\t<input   [readonly]=\"readorWrite\" matInput name=\"billerCode\" type=\"text\" formControlName=\"billerCode\" required\r\n\t\t\t\t\t\t\tplaceholder=\"billerCode\" />\r\n\t\t\t\t\t\t<mat-error *ngIf=\"billerMaintenance.get('billerCode').hasError('required')\">\r\n\t\t\t\t\t\t\tBiller Code is Required!\r\n\t\t\t\t\t\t</mat-error>\r\n\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t\r\n\t\t\t</div>\r\n\r\n\t\t\t<div fxLayoutGap=\"15px\">\r\n\t\t\t\t<div fxFlex=\"32.33\">\r\n\t\t\t\t\t<mat-label>Biller Name *</mat-label>\r\n\t\t\t\t\t<mat-form-field class=\"full-width\" appearance=\"fill\">\r\n\t\t\t\t\t\t<input  [readonly]=\"readorWrite\" matInput name=\"billerName\" type=\"text\" formControlName=\"billerName\" required\r\n\t\t\t\t\t\t\tplaceholder=\"billerName\" />\r\n\t\t\t\t\t\t<mat-error *ngIf=\"billerMaintenance.get('billerName').hasError('required')\">\r\n\t\t\t\t\t\t\tBiller Name is Required!\r\n\t\t\t\t\t\t</mat-error>\r\n\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t</div> \r\n\t\t\t\t<div fxFlex=\"32.33\" *ngIf=\"!readorWrite\" >\r\n\t\t\t\t\t<mat-label>Biller Account Branch</mat-label>\r\n\t\t\t\t\t<mat-form-field class=\"full-width\" appearance=\"fill\">\r\n\t\t\t\t\t\t<mat-select name=\"billerAccBrn\" formControlName=\"billerAccBrn\"\r\n\t\t\t\t\t\t\tplaceholder=\"select billerAccBrn\">\r\n\t\t\t\t\t\t\t<mat-option *ngFor=\"let branch of branchCode; trackBy:dataByBranchCode\" [value]=\"branch.branchCode\">\r\n\t\t\t\t\t\t\t\t{{branch.branchCode}} </mat-option>\r\n\t\t\t\t\t\t</mat-select>\r\n\t\t\t\t\t\t<!-- <mat-error *ngIf=\"billerMaintenance.get('billerAccBrn').hasError('required')\">\r\n\t\t\t\t\t\t\tEntity Code is Required!\r\n\t\t\t\t\t\t</mat-error> -->\r\n\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div fxFlex=\"32.33\"  *ngIf=\"readorWrite\" >\r\n\t\t\t\t\t<mat-label>Biller Account Branch </mat-label>\r\n\t\t\t\t\t<mat-form-field class=\"full-width\" appearance=\"fill\">\r\n\t\t\t\t\t\t<input   [readonly]=\"readorWrite\" matInput name=\"billerCode\" type=\"text\" formControlName=\"billerAccBrn\" required\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div fxFlex=\"32.33\">\r\n\t\t\t\t\t<mat-label>Biller Account *</mat-label>\r\n\t\t\t\t\t<mat-form-field class=\"full-width\" appearance=\"fill\">\r\n\t\t\t\t\t\t<input  [readonly]=\"readorWrite\" matInput name=\"billerAccount\" maxlength=\"10\"\r\n\t\t\t\t\t\t\tformControlName=\"billerAccount\" required placeholder=\"billerAccount\" />\r\n\t\t\t\t\t\t<mat-error *ngIf=\"billerMaintenance.get('billerAccount').hasError('required')\">\r\n\t\t\t\t\t\t\tBiller Account is Required!\r\n\t\t\t\t\t\t</mat-error>\r\n\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\r\n\r\n\t\t</mat-card-content>\r\n\r\n\t\t<div fxLayout=\"row wrap\" fxLayout.lt-sm=\"column\">\r\n\t\t\t<div fxFlex=\"100\" class=\"mt-16\" fxLayoutAlign=\"end center\">\r\n\t\t\t  <button \r\n\t\t\t\tcolor=\"primary\" *ngIf=\"!isEdit\"\r\n\t\t\t\t[disabled]= \"billerMaintenance.invalid\"\r\n\t\t\t\tmat-raised-button \r\n\t\t\t\t(click)=\"save(billerMaintenance.value)\"\r\n\t\t\t  >\r\n\t\t\t\tSave\r\n\t\t\t  </button>\r\n\t\t\t  <div [hidden]=\"readorWrite\" >\r\n\t\t\t\t<button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\"  [disabled]= \"!(billerMaintenance.invalid || billerMaintenance.dirty)\" (click)=\"save(billerMaintenance.value)\">\r\n\t\t\t\t   Save\r\n\t\t\t\t  </button>&nbsp;&nbsp;\r\n\t\t\t  </div>\r\n\t\t\t  \r\n\t\t\t  \r\n\t\t\t  <div [hidden]=\"!readorWrite\">\r\n\t\t\t\t<button *ngIf=\"isEdit\" type=\"button\"  mat-raised-button color=\"primary\" (click)=\"editRecord()\">\r\n\t\t\t\t  Edit\r\n\t\t\t\t</button>&nbsp;&nbsp;\r\n\t\t\t  </div>\r\n\t\t\t  <div *ngIf=\"auditLogData?.authStatus == 'Unauthorized' && readorWrite\" [hidden]=\"!readorWrite\">\r\n\t\t\t\t<button *ngIf=\"isEdit\" type=\"button\"  mat-raised-button color=\"primary\" (click)=\"updateRecord('auth')\">\r\n\t\t\t\t  Authorize\r\n\t\t\t\t</button>&nbsp;&nbsp;\r\n\t\t\t  </div> \r\n\t\t\t  <div *ngIf=\"auditLogData?.recordStatus == 'Close' && auditLogData?.oneTimeAuth != 'No'\" [hidden]=\"!readorWrite\">\r\n\t\t\t\t<button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"updateRecord('open')\">\r\n\t\t\t\t  Reopen\r\n\t\t\t\t</button>&nbsp;&nbsp;\r\n\t\t\t  </div>\r\n\t\t\t  <div *ngIf=\"auditLogData?.recordStatus == 'Open' && auditLogData?.oneTimeAuth != 'No'\" [hidden]=\"!readorWrite\">\r\n\t\t\t\t<button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"updateRecord('close')\">\r\n\t\t\t\t  Close\r\n\t\t\t\t</button>&nbsp;&nbsp;\r\n\t\t\t  </div>\r\n\t\t\t  <div *ngIf=\"auditLogData?.oneTimeAuth == 'No'\" [hidden]=\"!readorWrite\">\r\n\t\t\t\t<button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"deleteRecord('delete')\">\r\n\t\t\t\t  Delete\r\n\t\t\t\t</button> &nbsp;&nbsp;\r\n\t\t\t  </div>\r\n\t\t\t \r\n\t\t\t  <button\r\n\t\t\t\tmat-raised-button\r\n\t\t\t\tcolor=\"warn\"\r\n\t\t\t\ttype=\"button\"\r\n\t\t\t\t(click)=\"goBack()\"\r\n\t\t\t  >\r\n\t\t\t\tExit\r\n\t\t\t  </button>\r\n\t\t\t</div>\r\n\t\t  </div>\r\n\t</mat-card>\r\n</form>\r\n<div *ngIf=\"auditLogData\" class=\"mt-32\">\r\n    <app-audit-log #auditLog></app-audit-log>\r\n  </div>","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { AppLoaderService } from 'app/shared/services/app-loader/app-loader.service';\r\nimport { DataService } from 'app/shared/services/data.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-till-vault-ccy-popup',\r\n  templateUrl: './till-vault-ccy-popup.component.html',\r\n  styleUrls: ['./till-vault-ccy-popup.component.scss']\r\n})\r\nexport class TillVaultCcyPopupComponent implements OnInit {\r\n\r\n  arrayCurrency: any[] = [];\r\n  countryCurrency: any[]=[];\r\n  // tillId:number[]=[];\r\n  branchCode:string[]=[];\r\n  bankCode:string[]=[];\r\n  currency: string[] = [];\r\n  till: any[] = [];\r\n  public tillccyBalForm: FormGroup;\r\n  tillVaultResponse: any;\r\n  currentUser: any;\r\n  CcyBalStatus: any;\r\n  entity: any;\r\n  entityCode: string[] = [];\r\n  tillData: any;\r\n  entityName: string;\r\n  loggedInUser : any;\r\n  auditData : any;\r\n  isAuditData : boolean = false;\r\n  id: any;\r\n  isEdit: boolean = false;\r\n  readorWrite: boolean=true;\r\n  constructor(\r\n    // @Inject(MAT_DIALOG_DATA) public data: any,\r\n    // public dialogRef: MatDialogRef<TillVaultCcyPopupComponent>,\r\n    private fb: FormBuilder,\r\n    private apiService: ApiService,\r\n    private loader: AppLoaderService,\r\n    private snack: MatSnackBar,\r\n    private router:Router,\r\n    private ls:LocalStoreService,\r\n    private dataService:DataService,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n\r\n    this.currentUser = this.ls.getItem(\"ICUST_USER\");\r\n    this.entity =\"entityCode\"\r\n    // this.dataService.getCcyBal.subscribe(data =>{\r\n    //   console.log(data)\r\n    //   this.CcyBalStatus = typeof this.CcyBalStatus === 'object' ? data : {};\r\n    // });\r\n\r\n    setTimeout(() => {  \r\n      this.CcyBalStatus = JSON.parse(localStorage.getItem('fetchCcyBalValue'));\r\n      console.log('output',this.CcyBalStatus);\r\n      if(this.CcyBalStatus == null || this.CcyBalStatus == undefined){\r\n        console.log(this.CcyBalStatus)\r\n        this.readorWrite=false;\r\n        this.buildItemForm({})\r\n      }       \r\n      else if(this.CcyBalStatus.id != null || this.CcyBalStatus.id != undefined){\r\n      this.loader.open();\r\n      console.log(this.CcyBalStatus.id)\r\n      this.id = this.CcyBalStatus.id\r\n      this.buildItemForm(this.CcyBalStatus)\r\n      this.auditData = this.CcyBalStatus\r\n      this.isEdit = true;\r\n      this.isAuditData = true;\r\n      this.dataService.setAuditLogData(this.auditData);\r\n      this.loader.close();\r\n      this.loader.close();\r\n      }\r\n    }, 1000)\r\n\r\n    this.getCurrency();\r\n    // this.getBankCode('entityCode');\r\n    // this.getBranchCode('entityCode');\r\n    this.getTillId();\r\n    this.getEntityCode();\r\n    this.getBranchCode();\r\n    this.getBankCode();\r\n\r\n    this.loggedInUser = this.ls.getItem('ICUST_USER');\r\n    console.log(this.loggedInUser);\r\n   \r\n  }\r\n\r\n  buildItemForm(item) {\r\n    this.tillccyBalForm = this.fb.group({\r\n      entityCode: [item.entityCode || '',[Validators.required]],\r\n      bankCode: [item.bankCode || '', [Validators.required]],\r\n      branchCode: [item.branchCode || '',[Validators.required]],\r\n      tillId: [item.tillId || '',Validators.required],\r\n      currency: [item.currency || '',[Validators.required]],\r\n      glAccount: [item.glAccount || '',Validators.required],\r\n      openBalInAcy: [item.openBalInAcy || '',Validators.required],\r\n      openBalInLcy: [item.openBalInLcy || '',Validators.required],\r\n      balInAcy: [item.balInAcy || '',Validators.required],\r\n      balInLcy: [item.balInLcy || '',Validators.required],\r\n      id:[item.id || null]\r\n    })\r\n  }\r\n  numericValidation(event){\r\n    var inp = String.fromCharCode(event.keyCode);\r\n    if (/[0-9]/.test(inp)) {\r\n      return true;\r\n    } else {\r\n      event.preventDefault();\r\n      return false;\r\n    }\r\n  }\r\n  alhanumericValidation(event){\r\n    var inp = String.fromCharCode(event.keyCode);\r\n    if (/[a-zA-Z0-9]/.test(inp)) {\r\n      return true;\r\n    } else {\r\n      event.preventDefault();\r\n      return false;\r\n    }\r\n  }\r\n// Save of tillVaultCurrency Bal\r\n  submit() {\r\n    if(this.tillccyBalForm.invalid){\r\n      return;\r\n    }else{\r\n      this.loader.open();\r\n      this.tillData = this.till.find(x => x.tillVaultCode == this.tillccyBalForm.value.tillId);\r\n      this.tillccyBalForm.value.loggedInUser= this.loggedInUser.userName;\r\n      this.tillccyBalForm.value.tillId = this.tillData.id;\r\n      console.log(this.tillccyBalForm.value);\r\n      this.apiService.saveoftillVaultCurrencyBal(this.tillccyBalForm.value).subscribe((resp) => {\r\n      console.log(\"data\", resp);\r\n      this.loader.close();\r\n      this.router.navigate([`/maintenance/main/tillVaultCcyBal`]).then(_=>{\r\n          this.snack.open('Data Saved Successfully!', 'OK', \r\n          { duration: 4000 , \r\n            verticalPosition: \"top\",\r\n            horizontalPosition: \"right\",});\r\n        });\r\n      },(err:any) =>{\r\n        this.loader.close();\r\n        this.snack.open(`Error!`, 'OK', { duration: 4000,  \r\n          verticalPosition: \"top\",\r\n          horizontalPosition: \"right\",});\r\n        }\r\n      )\r\n      }\r\n  }\r\n  deleteRecord(operation){\r\n    Swal.fire(\r\n      {\r\n        //text: 'Unable to process' + 'Error ' + this.responseforfileupload.errorMessage + 'Do you want to Proceed??',\r\n        text: 'You are trying to '+ operation +' record.' + ' Do you want to proceed?',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        // confirmButtonText: 'PROCEED.'\r\n        cancelButtonText: 'NO',\r\n        confirmButtonText: 'YES', 'icon': 'info'\r\n      }\r\n    ).then((result => {\r\n      if(result.isConfirmed==true){\r\n        this.apiService.removetillVaultCurrencyBal(this.auditData.id)\r\n        .subscribe(data => {\r\n          this.router.navigate([`/maintenance/main/tillVaultCcyBal`]);\r\n        },\r\n        err=>{\r\n          if (err.status == 200) {\r\n            this.snack.open('Record Deleted Successfully', 'OK', {\r\n              duration: 4000,\r\n              verticalPosition: 'top',\r\n              horizontalPosition: 'right'\r\n            });\r\n          }\r\n          this.router.navigate([`/maintenance/main/tillVaultCcyBal`]);\r\n        \r\n      })\r\n      }}))\r\n   \r\n         \r\n       \r\n  }\r\n  editRecord(){\r\n    this.readorWrite=false;\r\n  }\r\n\r\n  updateRecord(operation) {\r\n    Swal.fire(\r\n      {\r\n        //text: 'Unable to process' + 'Error ' + this.responseforfileupload.errorMessage + 'Do you want to Proceed??',\r\n        text: 'You are trying to '+ operation +' record.' + ' Do you want to proceed?',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        // confirmButtonText: 'PROCEED.'\r\n        cancelButtonText: 'NO',\r\n        confirmButtonText: 'YES', 'icon': 'info'\r\n      }\r\n    ).then((result => {\r\n      if(result.isConfirmed==true){\r\n        console.log(this.id);\r\n        let payload: any = {};\r\n        payload.id = this.id;\r\n        payload.operation = operation;\r\n        payload.loggedInUser = this.loggedInUser.userName;\r\n        this.apiService.getAuditLogsForCurrencybal(payload).subscribe((data) => {\r\n          console.log(data);\r\n          this.auditData = data;\r\n          this.dataService.setAuditLogData(this.auditData);\r\n          this.isAuditData = true;\r\n          this.dataService.sendClickEvent();\r\n          let message = '';\r\n          switch (operation) {\r\n            case 'open':\r\n              message = 'opened'\r\n              break;\r\n            case 'close':\r\n              message = 'closed'\r\n              break;\r\n            case 'auth':\r\n              message = 'authorized'\r\n              break;\r\n            default:\r\n              break;\r\n          }\r\n          this.snack.open(`Record ${message} Successfully!'`, \"OK\", {\r\n            duration: 2000,\r\n            verticalPosition: \"top\",\r\n            horizontalPosition: \"right\",\r\n          });\r\n        });\r\n      }}))\r\n   \r\n  }\r\n\r\n  goBack(){\r\n    localStorage.removeItem('fetchCcyBalValue');\r\n    console.log( localStorage.getItem('fetchCcyBalValue'));\r\n\r\n    this.router.navigate([`/maintenance/main/tillVaultCcyBal`]);\r\n  }\r\n\r\n  getCurrency() {\r\n    // this.apiService.getCountryValues().subscribe((resp) => {\r\n    //   this.currency = resp;\r\n    // });\r\n    this.apiService.getCurrencyDetails().subscribe(data=>{\r\n      console.log(\"Auth currecy details\", data)\r\n      for(let i=0; i<data.length;i++){\r\n        this.currency.push(data[i].currencyId)\r\n      }\r\n      console.log(this.currency);\r\n    })\r\n  }\r\n  getBankCode() {\r\n    this.apiService.getBankCode().subscribe((resp) => {\r\n      console.log(resp);\r\n      for(let i=0; i<resp.length;i++){\r\n        if(resp[i].authStatus==='A'){\r\n          this.bankCode.push(resp[i]);\r\n        }\r\n      }\r\n      console.log(this.bankCode);\r\n      // this.bankCode = resp;\r\n    });\r\n  }\r\n  // getBankCode(entityCode) {\r\n  //   //  this.entityName = \"bankCode\"\r\n  //   this.apiService.getBankCode1(entityCode).subscribe((resp) => {\r\n  //     this.bankCode = resp;\r\n  //     console.log(this.bankCode)\r\n  //   });\r\n  // }\r\n  \r\n getBranchCode() {\r\n    this.apiService.getBranchCode().subscribe((resp) => {\r\n      for(let i=0; i<resp.length;i++){\r\n        if(resp[i].authStatus==='A'){\r\n          this.branchCode.push(resp[i]);\r\n        }\r\n      }\r\n      console.log(this.branchCode);\r\n      // this.branchCode = resp;\r\n    });\r\n  }\r\n  // getBranchCode(bankCode:any) {\r\n   \r\n  //   this.entityName= this.tillccyBalForm.get('entityCode').value ;\r\n  //   this.apiService.getBranchCode1(this.entityName,bankCode).subscribe((resp) => {\r\n  //     this.branchCode = resp;\r\n  //     console.log(this.branchCode)\r\n  //   });\r\n  // }\r\n  getTillId() {\r\n    let tillOrVault =\"T\";\r\n    this.apiService.getTillData(tillOrVault).subscribe((resp) => {\r\n      this.till = resp;\r\n    });\r\n  }\r\n\r\n  getEntityCode() {\r\n    this.apiService.getEntityCode().subscribe((resp) => {\r\n      console.log(resp);\r\n      for(let i=0; i<resp.length;i++){\r\n        if(resp[i].authStatus==='A'){\r\n          this.entityCode.push(resp[i]);\r\n        }\r\n      }\r\n      console.log(this.entityCode);\r\n      console.log(\"bankCodeData\", resp)\r\n      // this.entityCode = resp;\r\n    });\r\n  }\r\n}\r\n","<h1 class=\"main-head\"><small class=\"small-head\">Home > Maintenance Summary > Till Vault Currency Balance Maintenance > <span *ngIf=\"!isEdit\">Add</span> <span *ngIf=\"isEdit\">Edit</span> Currency Balance Details </small></h1>\r\n<div fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"mt-16\">\r\n  <button mat-icon-button (click)=\"goBack()\">\r\n    <mat-icon>arrow_back</mat-icon>\r\n  </button>\r\n  <h1 *ngIf=\"!isEdit\" class=\"add-text\">Add Currency Balance Details</h1>\r\n  <h1 *ngIf=\"isEdit\" class=\"add-text\">Edit Currency Balance Details</h1>\r\n</div>\r\n\r\n<mat-card>\r\n  <mat-card-content>\r\n    <!-- <div *ngIf=\"!isEdit\">\r\n      <h1 matDialogTitle>Add Currency Balance Details</h1>\r\n    </div>\r\n    <div *ngIf=\"isEdit\">\r\n      <h1 matDialogTitle>Edit Currency Balance Details</h1>\r\n    </div> -->\r\n    <form [formGroup]=\"tillccyBalForm\" *ngIf=\"tillccyBalForm\" class=\"m-333\">\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\" fxLayoutGap=\"15px\">\r\n        <div fxFlex=\"33.33\" *ngIf=\"!readorWrite\">\r\n          <mat-label>Entity Code *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <mat-select name=\"entityCode\" (keypress)=\"alhanumericValidation($event)\"\r\n              [formControl]=\"tillccyBalForm.controls['entityCode']\" (selectionChange)=\"getBankCode($event.value)\"  class=\"selectOption\">\r\n              <mat-option value=\"\">Select</mat-option>\r\n              <mat-option *ngFor=\"let data of entityCode\" [value]=\"data.entityCode\">\r\n                {{data?.entityCode}}\r\n              </mat-option>\r\n            </mat-select>\r\n            <mat-error *ngIf=\"tillccyBalForm.get('entityCode').touched && !tillccyBalForm.get('entityCode').valid\">\r\n              Entity Code is Required!\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n        <div fxFlex=\"33.33\" *ngIf=\"readorWrite\">\r\n          <mat-label>Entity Code  *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input readonly matInput name=\"glAccount\"\r\n              [formControl]=\"tillccyBalForm.controls['entityCode']\"> \r\n          </mat-form-field>\r\n        </div>\r\n\r\n        <div fxFlex=\"33.33\">\r\n          <mat-label>Bank Code *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <mat-select name=\"bankCode\" [formControl]=\"tillccyBalForm.controls['bankCode']\"  (selectionChange)=\"getBranchCode($event.value)\" class=\"selectOption\">\r\n              <mat-option value=\"\">Select</mat-option>\r\n              <mat-option *ngFor=\"let data of bankCode\" [value]=\"data.bankCode\">\r\n                {{data?.bankCode}}\r\n              </mat-option>\r\n            </mat-select>\r\n            <mat-error *ngIf=\"tillccyBalForm.get('bankCode').touched && !tillccyBalForm.get('bankCode').valid\">\r\n              Bank Code is Required!\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n        <div fxFlex=\"33.33\" *ngIf=\"readorWrite\">\r\n          <mat-label>Bank Code *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input readonly matInput name=\"glAccount\"\r\n              [formControl]=\"tillccyBalForm.controls['bankCode']\"> \r\n          </mat-form-field>\r\n        </div>\r\n\r\n        <div fxFlex=\"33.33\">\r\n          <mat-label>Branch Code *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <mat-select name=\"branchCode\" [formControl]=\"tillccyBalForm.controls['branchCode']\" class=\"selectOption\">\r\n              <mat-option value=\"\">Select</mat-option>\r\n              <mat-option *ngFor=\"let data of branchCode\" [value]=\"data.branchCode\">\r\n                {{data?.branchCode}}\r\n              </mat-option>\r\n            </mat-select>\r\n            <mat-error *ngIf=\"tillccyBalForm.get('branchCode').touched && !tillccyBalForm.get('branchCode').valid\">\r\n              Branch Code is Required!\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n        <div fxFlex=\"33.33\" *ngIf=\"readorWrite\">\r\n          <mat-label>Branch Code *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input readonly matInput name=\"glAccount\"\r\n              [formControl]=\"tillccyBalForm.controls['branchCode']\"> \r\n          </mat-form-field>\r\n        </div>\r\n\r\n      </div>\r\n\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\" fxLayoutGap=\"15px\">\r\n        <div fxFlex=\"33.33\">\r\n          <mat-label>Till Id *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <mat-select name=\"tillId\" [formControl]=\"tillccyBalForm.controls['tillId']\" class=\"selectOption\">\r\n              <mat-option value=\"\">Select</mat-option>\r\n              <mat-option *ngFor=\"let data of till\" [value]=\"data.tillVaultCode\">\r\n                {{data?.tillVaultCode}}\r\n              </mat-option>\r\n            </mat-select>\r\n            <mat-error *ngIf=\"tillccyBalForm.get('tillId').touched && !tillccyBalForm.get('tillId').valid\">\r\n              Till Id is Required!\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n        <div fxFlex=\"33.33\" *ngIf=\"readorWrite\">\r\n          <mat-label>Till Id *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input readonly matInput name=\"glAccount\"\r\n              [formControl]=\"tillccyBalForm.controls['tillId']\"> \r\n          </mat-form-field>\r\n        </div>\r\n\r\n        <div fxFlex=\"33.33\"  *ngIf=\"!readorWrite\">\r\n          <mat-label>Currency *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <mat-select name=\"currency\" [formControl]=\"tillccyBalForm.controls['currency']\" class=\"selectOption\">\r\n              <mat-option value=\"\">Select</mat-option>\r\n              <mat-option *ngFor=\"let data of currency\" [value]=\"data.currencyCode\">\r\n                {{data?.currencyCode}}\r\n              </mat-option>\r\n            </mat-select>\r\n            <mat-error *ngIf=\"tillccyBalForm.get('currency').touched && !tillccyBalForm.get('currency').valid\">\r\n              Currency is Required!\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n        <div fxFlex=\"33.33\" *ngIf=\"readorWrite\">\r\n          <mat-label>Currency *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input readonly matInput name=\"glAccount\"\r\n              [formControl]=\"tillccyBalForm.controls['currency']\"> \r\n          </mat-form-field>\r\n        </div>\r\n\r\n        <div fxFlex=\"33.33\">\r\n          <mat-label>GL Account *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input [readonly]=\"readorWrite\" matInput name=\"glAccount\" maxlength=\"20\" (keypress)=\"alhanumericValidation($event)\"\r\n              [formControl]=\"tillccyBalForm.controls['glAccount']\">\r\n            <mat-error *ngIf=\"tillccyBalForm.get('glAccount').touched && !tillccyBalForm.get('glAccount').valid\">\r\n              GL Account is required!\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n\r\n      <div fxLayoutAlign=\"space-between center\" fxLayoutGap=\"15px\">\r\n\r\n        <div fxFlex=\"33.33\">\r\n          <mat-label>Open Balance In Acy *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input [readonly]=\"readorWrite\" matInput name=\"openBalInAcy\" (keypress)=\"numericValidation($event)\"\r\n              [formControl]=\"tillccyBalForm.controls['openBalInAcy']\">\r\n            <mat-error *ngIf=\"tillccyBalForm.get('openBalInAcy').touched && !tillccyBalForm.get('openBalInAcy').valid\">\r\n              Open Balance In Acy is Required!\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n\r\n        <div fxFlex=\"33.33\">\r\n          <mat-label> Open Balance In Lcy *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input [readonly]=\"readorWrite\" matInput name=\"openBalInLcy\" (keypress)=\"numericValidation($event)\"\r\n              [formControl]=\"tillccyBalForm.controls['openBalInLcy']\">\r\n            <mat-error *ngIf=\"tillccyBalForm.get('openBalInLcy').touched && !tillccyBalForm.get('openBalInLcy').valid\">\r\n              Open Balance In Lcy is Required!\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n\r\n        <div fxFlex=\"33.33\">\r\n          <mat-label> Balance In Acy *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input [readonly]=\"readorWrite\" matInput name=\"balInAcy\" (keypress)=\"numericValidation($event)\"\r\n              [formControl]=\"tillccyBalForm.controls['balInAcy']\">\r\n            <mat-error *ngIf=\"tillccyBalForm.get('balInAcy').touched && !tillccyBalForm.get('balInAcy').valid\">\r\n              Balance In Acy is Required!\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n\r\n      </div>\r\n\r\n      <div fxLayoutAlign=\"space-between center\" fxLayoutGap=\"15px\">\r\n        <div fxFlex=\"33.33\">\r\n          <mat-label> Balance In Lcy * </mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input [readonly]=\"readorWrite\" matInput name=\"balInLcy\" (keypress)=\"numericValidation($event)\"\r\n              [formControl]=\"tillccyBalForm.controls['balInLcy']\">\r\n            <mat-error *ngIf=\"tillccyBalForm.get('balInLcy').touched && !tillccyBalForm.get('balInLcy').valid\">\r\n              Balance In Lcy is Required!\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n\r\n      <div fxLayout=\"row wrap\" fxLayout.lt-sm=\"column\">\r\n        <div fxFlex=\"100\" class=\"mt-16\" fxLayoutAlign=\"end center\">\r\n          <button mat-raised-button *ngIf=\"!isEdit\" color=\"primary\" [disabled]=\"tillccyBalForm.invalid\" (click)=\"submit()\">SAVE</button>\r\n          &nbsp;\r\n          <div [hidden]=\"readorWrite\" >\r\n            <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\"  [disabled]= \"!(tillccyBalForm.invalid || tillccyBalForm.dirty)\"(click)=\"submit()\">\r\n               Save\r\n              </button>&nbsp;&nbsp;\r\n          </div>\r\n          <div [hidden]=\"!readorWrite || auditData?.recordStatus == 'Close'\">\r\n            <button *ngIf=\"isEdit\" type=\"button\"  mat-raised-button color=\"primary\" (click)=\"editRecord()\">\r\n              Edit\r\n            </button>&nbsp;&nbsp;\r\n          </div>\r\n          <div *ngIf=\"auditData?.authStatus == 'Unauthorized' && readorWrite\" [hidden]=\"!readorWrite\">\r\n            <button *ngIf=\"isEdit\" type=\"button\"  mat-raised-button color=\"primary\" (click)=\"updateRecord('auth')\">\r\n              Authorize\r\n            </button>&nbsp;&nbsp;\r\n          </div> \r\n          <div *ngIf=\"auditData?.recordStatus == 'Close' && auditData?.oneTimeAuth != 'No'\" [hidden]=\"!readorWrite\">\r\n            <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"updateRecord('open')\">\r\n              Reopen\r\n            </button>&nbsp;&nbsp;\r\n          </div>\r\n          <div *ngIf=\"auditData?.recordStatus == 'Open' && auditData?.oneTimeAuth != 'No'\" [hidden]=\"!readorWrite\">\r\n            <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"updateRecord('close')\">\r\n              Close\r\n            </button>&nbsp;&nbsp;\r\n          </div>\r\n          <div *ngIf=\"auditData?.oneTimeAuth == 'No'\" [hidden]=\"!readorWrite\">\r\n            <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"deleteRecord('delete')\">\r\n              Delete\r\n            </button> &nbsp;&nbsp;\r\n          </div>\r\n         \r\n          <button\r\n            mat-raised-button\r\n            color=\"warn\"\r\n            type=\"button\"\r\n            (click)=\"goBack()\"\r\n          >\r\n            Exit\r\n          </button>\r\n\r\n        </div>\r\n      </div>\r\n      \r\n    </form>\r\n\r\n\r\n  </mat-card-content>\r\n</mat-card>\r\n\r\n<div class=\"mt-32\">\r\n  <app-audit-log *ngIf=\"isAuditData\" #auditLog></app-audit-log>\r\n</div>","import { Component, OnInit,OnDestroy, ViewChild, ChangeDetectorRef } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { Location } from '@angular/common';\r\n\r\n\r\nexport interface Card {\r\n  title: string;\r\n  subtitle: string;\r\n  text: string;\r\n  state?:string;\r\n  url:any;\r\n}\r\n\r\nconst DATA: Card[] = [\r\n  \r\n  {\r\n    title: 'Branch Holiday',\r\n    subtitle: 'Product Details',\r\n    text: 'this covers ordination product details, Product prefrences, Interest Charges and additional attributes.',\r\n    state:\"BranchHoliday\",\r\n    url:\"assets/images/brnchholiday.png\"\r\n  },{\r\n    title: 'Currency Holiday',\r\n    subtitle: 'Product Details',\r\n    text: 'This covers create business process and create process stages.',\r\n    state:\"currencyholiday\",\r\n    url:\"assets/images/processing.png\"\r\n  },\r\n  {\r\n    title: 'Clearing Holiday',\r\n    subtitle: 'Product Details',\r\n    text: 'This covers Quantitative and Qualitative score card.',\r\n    state:\"clearingholiday\",\r\n    url:'assets/images/screen.png'\r\n  },\r\n\r\n];\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-holiday-maintenance',\r\n  templateUrl: './holiday-maintenance.component.html',\r\n  styleUrls: ['./holiday-maintenance.component.scss']\r\n})\r\nexport class HolidayMaintenanceComponent implements OnInit {\r\n\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  obs: Observable<any>;\r\n  dataSource: MatTableDataSource<Card> = new MatTableDataSource<Card>(DATA);\r\n\r\n  constructor(private changeDetectorRef: ChangeDetectorRef, private router:Router, private _location: Location,) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    document.getElementById('main-content-wrap').style.backgroundColor = 'white' ; \r\n    this.changeDetectorRef.detectChanges();\r\n    this.dataSource.paginator = this.paginator;\r\n    this.obs = this.dataSource.connect();\r\n  }\r\n\r\n\r\n  navigateToScreen(state:string){\r\n    this.router.navigate([`/maintenance/main/holiday/${state}`]);\r\n  }\r\n  goBack(){\r\n    this.router.navigate([\"/maintenance/main\"]);\r\n  }\r\n\r\n}","<h1 class=\"main-head\"><small class=\"small-head\">Home > Maintenance Summary > \r\n    Holiday Maintenance</small></h1>\r\n<div class=\"content\">\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"mt-24\">\r\n        <button mat-icon-button (click)=\"goBack()\"> \r\n            <mat-icon>arrow_back</mat-icon>\r\n          </button> \r\n          <span class=\"text-large\">\r\n            Holiday Maintenances\r\n          </span>\r\n          <span fxFlex></span>\r\n       </div>\r\n\r\n     \r\n      \r\n</div>\r\n\r\n    <div fxLayout=\"row wrap\" class=\"mt-32\" class=\"pointer\"> \r\n        <div fxFlex=\"50\" *ngFor=\"let card of obs | async\" >\r\n            <mat-card (click)=\"navigateToScreen(card.state)\">\r\n                <div fxLayout=\"row\" fxLayoutGap=\"5px\" fxLayoutAlign=\"space-around center\">\r\n                    <div fxFlex=\"65\">\r\n                        <mat-card-content>\r\n                            <h2 class=\"\">{{ card.title }}</h2>\r\n                            <span class=\"card-text-label\">{{ card.text }}</span>\r\n                          </mat-card-content>\r\n                        \r\n                    </div>\r\n                    <div fxFlex=\"30\" style=\"text-align: right;\">\r\n                        <img class=\"image\" width=\"100\" height=\"100\" [src]=\"card.url\" alt=\"photo\">\r\n                    </div>\r\n                </div>\r\n\r\n              </mat-card>\r\n        </div>\r\n  </div>\r\n","import { LiveAnnouncer } from '@angular/cdk/a11y';\r\nimport { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MatSort, Sort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { Router } from '@angular/router';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { AppConfirmService } from 'app/shared/services/app-confirm/app-confirm.service';\r\nimport { AppLoaderService } from 'app/shared/services/app-loader/app-loader.service';\r\nimport jsPDF from 'jspdf';\r\nimport autoTable from 'jspdf-autotable'\r\n\r\n@Component({\r\n  selector: 'app-txncharges-maintenance',\r\n  templateUrl: './txncharges-maintenance.component.html',\r\n  styleUrls: ['./txncharges-maintenance.component.scss']\r\n})\r\nexport class TxnchargesMaintenanceComponent implements OnInit {\r\n\r\n  @ViewChild('searchVal') searchVal: ElementRef;\r\n  selectedFilterIndex : number = 0;\r\n\r\n  dataSource = new MatTableDataSource();\r\n  displayedColumns: string[] = ['chargeAmount', 'chargeCurrency', 'txnDate',  'oneTimeAuth', 'authStatus', 'recordStatus', 'action'];\r\n\r\n  filterByOption: { key: string, value: string }[] = [\r\n    { key: 'chargeCurrency', value: 'Charge Currency' },\r\n  ];\r\n\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  users: any[] = [];\r\n  public items: any[];\r\n\r\n  constructor(private router:Router,private snack: MatSnackBar,\r\n    private apiService:ApiService,private confirmService: AppConfirmService,\r\n    private _liveAnnouncer: LiveAnnouncer) { }\r\n  \r\n\r\n  convert() {  \r\n    let doc = new jsPDF(); \r\n    const head = [['Charge Amount', 'Charge Currency', 'TXN Date', 'One Time Auth',  'Auth Status', 'Record Status']] \r\n    const body=[];\r\n    this.users.forEach(u=>{\r\n      var row = [];\r\n      row.push(u.chargeAmount);\r\n      row.push(u.chargeCurrency);\r\n      row.push(u.txnDate);\r\n      row.push(u.oneTimeAuth);\r\n      row.push(u.authStatus);\r\n      row.push(u.recordStatus);\r\n      body.push(row)\r\n    });\r\n    autoTable(doc, {\r\n      head: head,\r\n      body: body,\r\n      didDrawCell: (prepare) => { },\r\n    });\r\n    doc.save('test.pdf');  \r\n  }\r\n\r\n  uploadtxnCharges(event) {\r\n  const file:File = event.path[0].files[0];\r\n    const uploadData = new FormData();\r\n    uploadData.append('screenType', \"txnCharges\");\r\n    uploadData.append('file', file);\r\n    \r\n    this.apiService.uploadTxnChargesFile(uploadData).subscribe(data => {\r\n      if(uploadData != null){\r\n        \r\n        this.snack.open('File Uploaded Successfully!', 'OK', {\r\n          duration: 4000,\r\n          verticalPosition: 'top',\r\n          horizontalPosition: 'right'\r\n        });\r\n     \r\n      }\r\n    this.getTxnCharge();\r\n    })\r\n    \r\n  }\r\n\r\n  upload(){\r\n      \r\n  }     \r\n  \r\n  ngOnInit(): void {\r\n    this.getTxnCharge();\r\n    this.getItems();\r\n  }\r\n  getItems() {\r\n    this.items = this.users;\r\n  }\r\n  getTxnCharge(){\r\n    this.apiService.getTxnChargeDetails().subscribe((data: any) => {\r\n      \r\n      for(let i=0;i<data.length;i++){\r\n        if(data[i].authStatus == 'U'){\r\n          data[i].authStatus = 'Unauthorized'\r\n        }\r\n        if(data[i].authStatus == 'A') {\r\n          data[i].authStatus = 'Authorized'\r\n        } \r\n        if(data[i].recordStatus == 'O'){\r\n          data[i].recordStatus = 'Open'\r\n        } \r\n        if(data[i].recordStatus == 'C'){\r\n          data[i].recordStatus = 'Closed'\r\n        }\r\n      }\r\n      this.users = data;\r\n      this.items = this.users;\r\n      this.dataSource = new MatTableDataSource(data);\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    });\r\n  }\r\n  \r\n  addNew(){\r\n    this.router.navigate([\"/maintenance/main/transactionCharges/addtxnCharges\"]);\r\n  }\r\n  \r\n  doFilter(filterBy, e){\r\n    this.filterTable(filterBy);\r\n    this.applyFilter(e);\r\n  }\r\n  \r\n  filterTable(filterBy) {\r\n    this.dataSource.filterPredicate = (data: any, filter: string): boolean => {\r\n      return (\r\n        data[filterBy].toLocaleLowerCase().includes(filter)\r\n      )\r\n    }\r\n  }\r\n\r\n  clearFilter(){\r\n   this.dataSource.filter = '';\r\n   this.searchVal.nativeElement.value = '';\r\n   this.selectedFilterIndex = 0;\r\n  }\r\n\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n  announceSortChange(sortState: Sort) {\r\n    if (sortState.direction) {\r\n      this._liveAnnouncer.announce(`Sorted ${sortState.direction}ending`);\r\n    } else {\r\n      this._liveAnnouncer.announce('Sorting cleared');\r\n    }\r\n  }\r\n  openEdit(data: any = {},isEdit : string) {\r\n    \r\n    this.router.navigate([\"/maintenance/main/transactionCharges/addtxnCharges\"],{ queryParams: { id: data.id, isEdit : isEdit } });\r\n  }\r\n  deleteItem(element) {\r\n    this.confirmService.confirm({message: `Delete Transaction Charges?`})\r\n      .subscribe(res => {\r\n        if (res) {\r\n          this.apiService.deleteTxnChargesById(element.id)\r\n            .subscribe(data => {\r\n            },\r\n              err=>{\r\n                if (err.status == 200) {\r\n                  this.snack.open('Record Deleted Successfully', 'OK', {\r\n                    duration: 4000,\r\n                    verticalPosition: 'top',\r\n                    horizontalPosition: 'right'\r\n                  });\r\n                }\r\n      \r\n                this.getTxnCharge();\r\n              \r\n            })\r\n        }\r\n        \r\n      });\r\n  }\r\n  goBack(){\r\n    \r\n    this.router.navigate([\"/maintenance/main\"]);\r\n  }\r\n  dataByFilter(index,item){\r\n    return item.key\r\n  }\r\n}\r\n\r\n\r\n","<h1 class=\"main-head\"><small class=\"small-head\">Home > Maintenance Summary > Transaction Charge Maintenance </small></h1>\r\n  <div fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"mt-24\">\r\n    <button mat-icon-button (click)=\"goBack()\">\r\n        <mat-icon>arrow_back</mat-icon>\r\n      </button> \r\n      <span class=\"text-large\">\r\n       Transaction Charges Maintenance\r\n      </span>\r\n  </div>\r\n  \r\n  \r\n  \r\n  <mat-card class=\"mt-32\">\r\n   <div fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"mt-24\">\r\n    \r\n    <table>\r\n      <tr>\r\n        <td>\r\n          <h2>\r\n            Transaction Charges\r\n          </h2>\r\n        </td>\r\n      </tr>\r\n      <tr>\r\n        <td>\r\n          <div class=\"highlight\">\r\n          </div>\r\n        </td>\r\n      </tr>\r\n    </table>\r\n       <span fxFlex></span>\r\n       <button mat-icon-button [matMenuTriggerFor]=\"menu\">\r\n         <mat-icon>more_vert</mat-icon>\r\n       </button>\r\n       <mat-menu #menu=\"matMenu\">\r\n         <button mat-menu-item >\r\n          <input style=\"display: none;\"\r\n          type=\"file\" name=\"documentUrl\"\r\n          #documentUrl \r\n          (change)=\"uploadtxnCharges($event)\">\r\n          <a \r\n          (click)=\"documentUrl.click()\"\r\n          [routerLink]=\"\">Upload</a>\r\n         </button>\r\n        \r\n         <button mat-menu-item (click)=\"convert()\">\r\n           <span>Download</span>\r\n         </button>\r\n       </mat-menu>\r\n    </div>\r\n   <div class=\"w-full\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n     <div class=\"w-full\" fxLayout=\"row\" fxLayoutGap='20px'>\r\n       <div>\r\n         <mat-form-field appearance=\"fill\">\r\n           <mat-label>Filter By</mat-label>\r\n           <mat-select name=\"filterBy\" #filterBy [(ngModel)]=\"selectedFilterIndex\" placeholder=\"Filter By\">\r\n            <!-- <mat-select name=\"filterBy\" #filterBy [(ngModel)]=\"selectedFilterIndex\"> -->\r\n             <mat-option value=\"0\">Select</mat-option>\r\n             <mat-option *ngFor=\"let filter of filterByOption;trackBy:dataByFilter\" value=\"{{filter.key}}\">\r\n               {{filter.value}}\r\n             </mat-option>\r\n           </mat-select>\r\n         </mat-form-field>\r\n       </div>\r\n       <div>\r\n         <mat-form-field appearance=\"fill\">\r\n           <mat-label>Search</mat-label>\r\n           <input matInput #searchVal (keyup)=\"doFilter(filterBy.value,$event)\" placeholder=\"Search\">\r\n           <!-- <input matInput #searchVal (keyup)=\"doFilter(filterBy.value,$event)\"> -->\r\n           <mat-icon matSuffix>search</mat-icon>\r\n         </mat-form-field>\r\n       </div>\r\n       <div style=\"padding-top: 3px;\">\r\n         <button mat-flat-button color=\"warn\" (click)=\"clearFilter()\" style=\"height: 45px;\">Clear Filter</button>\r\n       </div>\r\n       <div>\r\n        <button mat-flat-button color=\"primary\" class=\"mr-38\" (click)=\"addNew()\"  style=\"height: 45px; margin-left: 15cm;\" >ADD NEW\r\n\r\n            </button>\r\n      </div>\r\n     </div>\r\n   </div>\r\n   <div class=\"mat-elevation-z0\">\r\n     <mat-table class=\"w-full\" [dataSource]=\"dataSource\" matSort (matSortChange)=\"announceSortChange($event)\">\r\n  \r\n       <ng-container matColumnDef=\"chargeAmount\">\r\n         <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Charge Amount\"> Charge Amount\r\n         </mat-header-cell>\r\n         <mat-cell *matCellDef=\"let element\"> {{element.chargeAmount}} </mat-cell>\r\n       </ng-container>\r\n  \r\n       <ng-container matColumnDef=\"chargeCurrency\">\r\n         <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Charge Currency\"> Charge Currency\r\n         </mat-header-cell>\r\n         <mat-cell *matCellDef=\"let element\"> {{element.chargeCurrency}} </mat-cell>\r\n       </ng-container>\r\n  \r\n       <ng-container matColumnDef=\"txnDate\">\r\n         <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Transaction Date\"> Transaction Date\r\n            </mat-header-cell>\r\n         <mat-cell *matCellDef=\"let element\"> {{element.txnDate}} </mat-cell>\r\n       </ng-container>\r\n       <ng-container matColumnDef=\"oneTimeAuth\">\r\n         <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by One Time Auth\"> One Time Auth\r\n          </mat-header-cell>\r\n         <mat-cell *matCellDef=\"let element\"> {{element.oneTimeAuth}} </mat-cell>\r\n       </ng-container>\r\n       <ng-container matColumnDef=\"authStatus\">\r\n         <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Auth Status\"> Auth Status\r\n          </mat-header-cell>\r\n         <mat-cell *matCellDef=\"let element\"> {{element.authStatus}} </mat-cell>\r\n       </ng-container>\r\n       <ng-container matColumnDef=\"recordStatus\">\r\n         <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Record Status\"> Record Status\r\n          </mat-header-cell>\r\n         <mat-cell *matCellDef=\"let element\"> {{element.recordStatus}} </mat-cell>\r\n       </ng-container>\r\n  \r\n       <ng-container matColumnDef=\"action\">\r\n         <mat-header-cell *matHeaderCellDef>Action</mat-header-cell>\r\n         <mat-cell *matCellDef=\"let element\">\r\n           <!--<div>\r\n              <mat-icon color=\"primary\" style=\"cursor: pointer;\" [disableRipple]=\"false\" (click)=\"openEdit(element)\">edit</mat-icon>\r\n           </div>&nbsp;&nbsp;\r\n           <div>\r\n            <mat-icon color=\"warn\" style=\"cursor: pointer;\" (click)=\"deleteItem(element)\">delete</mat-icon>\r\n           </div>-->\r\n           <div>\r\n            <mat-icon color=\"primary\" style=\"cursor: pointer;\" (click)=\"openEdit(element)\" >edit</mat-icon>\r\n         </div>&nbsp;&nbsp;\r\n         <div>\r\n          <mat-icon color=\"warn\" style=\"cursor: pointer;\"  [disabled]=\"element.oneTimeAuth =='Y'\" (click)=\"deleteItem(element)\">delete</mat-icon>\r\n         </div>\r\n         </mat-cell>\r\n       </ng-container>\r\n  \r\n       <mat-header-row *matHeaderRowDef=\"displayedColumns;\"></mat-header-row>\r\n       <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\r\n     </mat-table>\r\n     <mat-paginator [pageSizeOptions]=\"[5,10,20]\" showFirstLastButtons></mat-paginator>\r\n   </div>\r\n  </mat-card>\r\n     \r\n  \r\n\r\n","import { ChangeDetectorRef, Component, OnInit, ViewChild } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { FormBuilder, Validators, FormGroup } from '@angular/forms';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { DataService } from 'app/shared/services/data.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { AuditLogComponent } from '../../audit-log/audit-log.component';\r\nimport { entityData } from 'app/shared/models/entityMaintenance';\r\nimport Swal from 'sweetalert2';\r\n\r\n\r\n@Component({\r\n  selector: 'app-add-entity-details',\r\n  templateUrl: './add-entity-details.component.html',\r\n  styleUrls: ['./add-entity-details.component.scss']\r\n})\r\nexport class AddEntityDetailsComponent implements OnInit {\r\n\r\n  public entityMaintenance: FormGroup;\r\n\r\n  @ViewChild('auditLog') auditLog : AuditLogComponent\r\n\r\n  countries: string[] = [];\r\n  states: string[] = [];\r\n  cities: string[] = [];\r\n  id: number;\r\n  isEdit: boolean = false;\r\n  isReadOnly: boolean = true;\r\n  isView: boolean = true;\r\n  show = false;\r\n  editNow : boolean = false;\r\n  loggedInUser : string;\r\n  auditLogData : entityData;\r\n  readorWrite: boolean=true;\r\n  \r\n  constructor(\r\n\r\n    private fb: FormBuilder,\r\n    private apiService: ApiService,\r\n    private router:Router,\r\n    private snack: MatSnackBar,\r\n    private cdr: ChangeDetectorRef,\r\n    private route : ActivatedRoute,\r\n     private dataService : DataService,\r\n     private ls : LocalStoreService,\r\n    \r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.route.queryParamMap.subscribe((params: any) => {\r\n      if(params.get('isEdit') == 'Yes'){\r\n        this.isReadOnly = false;\r\n        this.isView= false;\r\n        this.editNow = true;\r\n      }\r\n      else if(params.get('isEdit') == 'No'){\r\n        this.isReadOnly = true;\r\n        this.isView= true;\r\n        this.editNow = false;\r\n      }\r\n      else if(params.get('isEdit') == 'false'){\r\n        this.isReadOnly = false;\r\n        this.isView= false;\r\n        this.editNow = false;\r\n      }\r\n      else if(params.get('isEdit') == null){\r\n        this.isView= false;\r\n        this.isReadOnly = false;\r\n        this.editNow = true;\r\n      }\r\n      if(params.get('id')){\r\n        this.isEdit = true;\r\n        this.id = params.get('id');\r\n        this.apiService.editEntityById(params.get('id')).subscribe((resp) =>{\r\n           this.buildItemForm(resp);\r\n           if( resp.authStatus==\"U\" ){\r\n            resp.authDate =\"\"\r\n            resp.authBy=\"\"\r\n          }\r\n           this.auditLogData = resp;\r\n         console.log(this.auditLogData)\r\n           this.dataService.setAuditLogData(this.auditLogData);\r\n           this.dataService.sendClickEvent();\r\n        });\r\n      }\r\n      else{\r\n        this.readorWrite=false;\r\n        this.buildItemForm({});\r\n      }\r\n    }\r\n    );    \r\n    this.buildItemForm({});\r\n    this.getCountryName(\"country\");\r\n    this.loggedInUser = this.ls.getItem('ICUST_USER').userName;\r\n  }\r\n  buildItemForm(item) {\r\n    this.entityMaintenance = this.fb.group({\r\n      entityCode: [item.entityCode || '', Validators.required],\r\n      entityName: [item.entityName || '', Validators.required],\r\n      // oneTimeAuth: [item.oneTimeAuth || ''],\r\n      // authStatus: [item.authStatus || ''],\r\n      // recordStatus: [item.recordStatus || ''],\r\n      version: [item.version || ''],\r\n      denomRequired: [item.denomRequired || ''],\r\n      mobile: [item.mobile || '', Validators.compose([Validators.required,Validators.pattern(\"^((\\\\+91-?)|0)?[0-9]{6,10}$\")])],\r\n      telephone: [item.telephone || '',Validators.pattern(\"^((\\\\+91-?)|0)?[0-9]{6,10}$\")],\r\n      country: [item.country || '',Validators.required],\r\n      state: [item.state || '',Validators.required],\r\n      city: [item.city || '',Validators.required],\r\n      loggedInUser: [item.loggedInUser || ''],\r\n      id: [item.id || ''],\r\n      pincode: [item.pincode || '', Validators.compose([Validators.required,Validators.pattern(\"^((\\\\+91-?)|0)?[0-9]{6,10}$\")])],\r\n    });\r\n\r\n    if(item.country){\r\n      this.getStateName(item.country);\r\n      this.getCityName(item.state);\r\n    }\r\n\r\n  }\r\n\r\n  getCountryName(key: string) {\r\n    this.apiService.getAllCountries().subscribe((data: any) => {\r\n      console.log('resp',data)\r\n      for(let i=0; i<data.length;i++){\r\n        if(data[i].authStatus==='A'){\r\n          console.log(data[i])\r\n          this.countries.push(data[i].countryName);\r\n          console.log(this.countries)\r\n        }\r\n      }\r\n      // this.countries = data;\r\n    });\r\n  }\r\n\r\n  getStateName(countryName){\r\n    this.apiService.getAllCountries().subscribe((data: any) => {\r\n      for(let i=0; i<data.length;i++){       \r\n        if(data[i].countryName === countryName){\r\n          this.apiService.getStateByCountry(data[i].id).subscribe((resp: any) => {\r\n            for(let i=0; i<resp.length;i++){\r\n              if(resp[i].authStatus==='A'){\r\n                this.states.push(resp[i].stateName);\r\n              }\r\n            }\r\n          })\r\n          break;   \r\n        }\r\n      }\r\n    })\r\n    }\r\n  getCityName(state: any) {\r\n    let entityName = \"city\";\r\n    this.apiService.getDropDownValues1(entityName, state).subscribe((data) => {\r\n      this.cities = data;\r\n    });\r\n  }\r\n\r\n  deleteRecord(operation){\r\n    Swal.fire(\r\n      {\r\n        //text: 'Unable to process' + 'Error ' + this.responseforfileupload.errorMessage + 'Do you want to Proceed??',\r\n        text: 'You are trying to '+ operation +' record.' + ' Do you want to proceed?',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        // confirmButtonText: 'PROCEED.'\r\n        cancelButtonText: 'NO',\r\n        confirmButtonText: 'YES', 'icon': 'info'\r\n      }\r\n    ).then((result => {\r\n      if(result.isConfirmed==true){\r\n        this.apiService.deleteEntity(this.auditLogData.id)\r\n        .subscribe(data => {\r\n        },\r\n        err=>{\r\n          if (err.status == 200) {\r\n            this.snack.open('Record Deleted Successfully', 'OK', {\r\n              duration: 4000,\r\n              verticalPosition: 'top',\r\n              horizontalPosition: 'right'\r\n            });\r\n          }\r\n          this.router.navigate([`/maintenance/main/entity/list`]);\r\n        \r\n      })\r\n      }}))\r\n   \r\n         \r\n       \r\n  }\r\n  editRecord(){\r\n    this.readorWrite=false;\r\n  }\r\n\r\n  updateRecord(operation) {\r\n    Swal.fire(\r\n      {\r\n        //text: 'Unable to process' + 'Error ' + this.responseforfileupload.errorMessage + 'Do you want to Proceed??',\r\n        text: 'You are trying to '+ operation +' record.' + ' Do you want to proceed?',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        // confirmButtonText: 'PROCEED.'\r\n        cancelButtonText: 'NO',\r\n        confirmButtonText: 'YES', 'icon': 'info'\r\n      }\r\n    ).then((result => {\r\n      if(result.isConfirmed==true){\r\n        let payload: any = {};\r\n        payload.id = this.id;\r\n        payload.operation = operation;\r\n        payload.loggedInUser = this.loggedInUser;\r\n        this.apiService.getAuditLogsForEntity(payload).subscribe((data) => {\r\n          if(data.authStatus==\"U\" ){\r\n            data.authDate =\"\"\r\n            data.authBy=\"\"\r\n          }\r\n          this.auditLogData = data;\r\n          this.dataService.setAuditLogData(this.auditLogData);\r\n          this.dataService.sendClickEvent();\r\n          let message = '';\r\n          switch (operation) {\r\n            case 'open':\r\n              message = 'opened'\r\n              break;\r\n            case 'close':\r\n              message = 'closed'\r\n              break;\r\n            case 'auth':\r\n              message = 'authorized'\r\n              break;\r\n            default:\r\n              break;\r\n          }\r\n          this.snack.open(`Record ${message} successful!'`, \"OK\", {\r\n            duration: 2000,\r\n            verticalPosition: \"top\",\r\n            horizontalPosition: \"right\",\r\n          });\r\n        });\r\n      }\r\n    }))\r\n    \r\n  }\r\n\r\n  _keyPress(event: any) {\r\n    const pattern = /[0-9]/;\r\n    let inputChar = String.fromCharCode(event.charCode);\r\n    if (!pattern.test(inputChar)) {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n  keyPressAlphanumeric(event) {\r\n    var inp = String.fromCharCode(event.keyCode);\r\n    if (/[0-9a-zA-Z]/.test(inp)) {\r\n      return true;\r\n    } else {\r\n      event.preventDefault();\r\n      return false;\r\n    }\r\n  }\r\n\r\n  submit() {\r\n    this.entityMaintenance.value.loggedInUser = this.loggedInUser;\r\n    this.apiService.updateEntityDetails(this.entityMaintenance.value).subscribe(data => {\r\n      if(data != null && this.isEdit == true){\r\n        this.snack.open('Data Updated!', 'OK', {\r\n          duration: 4000,\r\n          verticalPosition: 'top',\r\n          horizontalPosition: 'right'\r\n        });\r\n        \r\n        this.cdr.markForCheck();\r\n      }\r\n      else if(data != null || this.isEdit == true){\r\n        this.snack.open('Data Saved!', 'OK', {\r\n          duration: 4000,\r\n          verticalPosition: 'top',\r\n          horizontalPosition: 'right'\r\n        });\r\n        \r\n        this.cdr.markForCheck();\r\n\r\n      }\r\n    })\r\n    \r\n    this.router.navigate([`/maintenance/main/entity/list`]);\r\n  }\r\n\r\n  \r\n  goBack() {\r\n    this.router.navigate([`/maintenance/main/entity/list`]);\r\n  }\r\n  dataByCountryCode(index,item){\r\n    return item;\r\n  }\r\n  dataByStateCode(index,item){\r\n    return item;\r\n  }\r\n  dataByCityCode(index,item){\r\n    return item;\r\n  }\r\n\r\n\r\n\r\n\r\n}\r\n","<h1 class=\"main-head\"><small class=\"small-head\">Home > Maintenance Summary > Entity Maintenance > <span *ngIf=\"!isEdit\">Add</span><span *ngIf=\"isEdit\">Edit</span> Entity Information </small></h1>\r\n<div fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"mt-16\">\r\n    <button mat-icon-button (click)=\"goBack()\">\r\n        <mat-icon>arrow_back</mat-icon>\r\n    </button>\r\n    <h1 *ngIf=\"!isEdit\" class=\"add-text\">Add Entity Information</h1>\r\n    <h1 *ngIf=\"isEdit\" class=\"add-text\">Edit Entity Information</h1>\r\n    <!-- <span class=\"text-large\">\r\n        Edit Country\r\n      </span>\r\n      <span fxFlex></span>\r\n      <button mat-button>\r\n        <mat-icon>edit</mat-icon>\r\n        Edit\r\n      </button>\r\n      <button\r\n      mat-button\r\n        type=\"button\"\r\n      >\r\n      <mat-icon>delete</mat-icon>\r\n        Delete\r\n      </button> -->\r\n</div>\r\n\r\n<mat-card>\r\n    <mat-card-content>\r\n        <form [formGroup]=\"entityMaintenance\" (ngSubmit)=\"submit()\" class=\"m-333\">\r\n            <h1>Entity Information</h1>\r\n            <!-- <div fxLayout=\"row wrap\" fxLayout.lt-sm=\"column\"> -->\r\n                <div fxLayoutAlign=\"space-between center\" fxLayoutGap=\"15px\">\r\n                    <div fxFlex=\"33.33\" class=\"pr-16\">\r\n                        <mat-label>Entity Code *</mat-label>\r\n                        <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                            <input \r\n                            [readonly]=\"readorWrite\"\r\n                                matInput name=\"entityCodeCode\" \r\n                                (keypress)=_keyPress($event) maxlength=\"10\"\r\n                                [formControl]=\"entityMaintenance.controls['entityCode']\" \r\n                            />\r\n                            <mat-error *ngIf=\"entityMaintenance.get('entityCode').hasError('required')\">\r\n                                Entity Code is Required!\r\n                            </mat-error>\r\n                        </mat-form-field>\r\n                    </div>\r\n\r\n                    <div fxFlex=\"33.33\" class=\"pr-16\">\r\n                        <mat-label>Entity Name *</mat-label>\r\n                        <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                            <input \r\n                                matInput name=\"entityName\" \r\n                                type=\"text\"\r\n                                [readonly]=\"readorWrite\" \r\n                                (keypress)=keyPressAlphanumeric($event)\r\n                                [formControl]=\"entityMaintenance.controls['entityName']\"\r\n                                required\r\n                            />\r\n                            <mat-error *ngIf=\"entityMaintenance.get('entityName').hasError('required')\">\r\n                                Entity Name is Required!\r\n                            </mat-error>\r\n                        </mat-form-field>\r\n                    </div>\r\n\r\n                    <div fxFlex=\"33.33\" class=\"pr-16\" *ngIf=\"!readorWrite\" >\r\n                        <mat-label>Denomination Required ?</mat-label>\r\n                        <mat-form-field  class=\"full-width\" appearance=\"fill\">\r\n                            <mat-select  \r\n                            [disabled]=\"isView\"\r\n                                name=\"denomRequired\" \r\n                                [formControl]=\"entityMaintenance.controls['denomRequired']\">\r\n                                <mat-option [value]=\"'yes'\" selected> Yes </mat-option>\r\n                                <mat-option [value]=\"'no'\"> No </mat-option>\r\n                            </mat-select>\r\n                        </mat-form-field>\r\n                      \r\n                    </div>\r\n                    <div fxFlex=\"33.33\" class=\"pr-16\" *ngIf=\"readorWrite\" >\r\n                        <mat-label>Denomination Required ?</mat-label>\r\n                        <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                            <input \r\n                                matInput \r\n                                type=\"text\"\r\n                                readonly\r\n                                [formControl]=\"entityMaintenance.controls['denomRequired']\"\r\n                                required\r\n                            />\r\n                            <mat-error *ngIf=\"entityMaintenance.get('denomRequired').hasError('denomRequired')\">\r\n                                Entity Name is Required!\r\n                            </mat-error>\r\n                        </mat-form-field>\r\n                      \r\n                    </div>\r\n\r\n                </div>\r\n                <div fxLayoutAlign=\"space-between center\" fxLayoutGap=\"15px\">\r\n                    <!-- <div fxFlex=\"33.33\">\r\n                        <mat-label>One time Auth</mat-label>\r\n                        <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                            <input \r\n                                matInput name=\"oneTimeAuth\" \r\n                                [formControl]=\"entityMaintenance.controls['oneTimeAuth']\"\r\n                            />    \r\n                        </mat-form-field>\r\n                    </div> -->\r\n\r\n                    <!-- <div fxFlex=\"33.33\">\r\n                        <mat-label>Authorisation Status</mat-label>\r\n                        <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                            <input \r\n                                matInput name=\"authStatus\" type=\"text\" \r\n                                [formControl]=\"entityMaintenance.controls['authStatus']\"\r\n                            />\r\n                        </mat-form-field>\r\n                    </div> -->\r\n\r\n                    <!-- <div fxFlex=\"33.33\">\r\n                        <mat-label>Record Status</mat-label>\r\n                        <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                            <input \r\n                                matInput name=\"recordStatus\" type=\"text\"\r\n                                [formControl]=\"entityMaintenance.controls['recordStatus']\"\r\n                            />\r\n                        </mat-form-field>\r\n                    </div> -->\r\n\r\n                    <!-- <div fxFlex=\"33.33\">\r\n                        <mat-label>Version <span *ngIf=\"!isReadOnly\" class=\"pl-4 \">*</span></mat-label>\r\n                        <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                            <input \r\n                                matInput name=\"version\" [readonly]=\"isReadOnly\" \r\n                                (keypress)=_keyPress($event) maxlength=\"1\"\r\n                                [formControl]=\"entityMaintenance.controls['version']\"\r\n                            />\r\n                        </mat-form-field>\r\n                    </div> -->\r\n                    \r\n                </div>\r\n\r\n                <h1>Address Information</h1>\r\n\r\n                <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\" fxLayoutGap=\"15px\">\r\n                    <div fxFlex=\"33.33\" class=\"pr-16\" *ngIf=\"!readorWrite\">\r\n                        <mat-label>Country *</mat-label>\r\n                        <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                            <mat-select \r\n                                name=\"country\" [disabled]=\"isView\"\r\n                                [formControl]=\"entityMaintenance.controls['country']\"\r\n                                (selectionChange)=\"getStateName($event.value)\" \r\n                                required\r\n                            >\r\n                                <mat-option *ngFor=\"let country of countries;trackBy:dataByCountryCode\" [value]=\"country\">\r\n                                    {{ country }}\r\n                                </mat-option>\r\n                            </mat-select>\r\n                            <mat-error *ngIf=\"entityMaintenance.get('country').hasError('required')\">\r\n                                Country is Required!\r\n                            </mat-error>\r\n                        </mat-form-field>\r\n                    </div>\r\n                    <div fxFlex=\"33.33\" class=\"pr-16\" *ngIf=\"readorWrite\" >\r\n                        <mat-label>Country *</mat-label>\r\n                        <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                            <input \r\n                                matInput \r\n                                type=\"text\"\r\n                                readonly\r\n                                [formControl]=\"entityMaintenance.controls['country']\"\r\n                                required\r\n                            />\r\n                            <mat-error *ngIf=\"entityMaintenance.get('country').hasError('country')\">\r\n                                Entity Name is Required!\r\n                            </mat-error>\r\n                        </mat-form-field>\r\n                      \r\n                    </div>\r\n\r\n                    <div fxFlex=\"33.33\" class=\"pr-16\" *ngIf=\"!readorWrite\">\r\n                        <mat-label>State *</mat-label>\r\n                        <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                            <mat-select [disabled]=\"isView\" \r\n                                name=\"state\" \r\n                                [formControl]=\"entityMaintenance.controls['state']\" \r\n                                (selectionChange)=\"getCityName($event.value)\" \r\n                                required\r\n                            >\r\n                                <mat-option *ngFor=\"let state of states;trackBy:dataByStateCode \" [value]=\"state\">\r\n                                    {{ state }}\r\n                                </mat-option>\r\n                            </mat-select>\r\n                            <mat-error *ngIf=\"entityMaintenance.get('state').hasError('required')\">\r\n                                State is Required!\r\n                            </mat-error>\r\n                        </mat-form-field>\r\n                    </div>\r\n                    <div fxFlex=\"33.33\" class=\"pr-16\" *ngIf=\"readorWrite\" >\r\n                        <mat-label>State *</mat-label>\r\n                        <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                            <input \r\n                                matInput \r\n                                type=\"text\"\r\n                                readonly\r\n                                [formControl]=\"entityMaintenance.controls['state']\"\r\n                                required\r\n                            />\r\n                            <mat-error *ngIf=\"entityMaintenance.get('state').hasError('state')\">\r\n                                Entity Name is Required!\r\n                            </mat-error>\r\n                        </mat-form-field>\r\n                      \r\n                    </div>\r\n                    <div fxFlex=\"33.33\" class=\"pr-16\" *ngIf=\"!readorWrite\">\r\n                        <mat-label>City *</mat-label>\r\n                        <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                            <mat-select \r\n                                name=\"city\" [disabled]=\"isView\" \r\n                                [formControl]=\"entityMaintenance.controls['city']\"\r\n                                required\r\n                            >\r\n                                <mat-option *ngFor=\"let city of cities;trackBy:dataByCityCode\" [value]=\"city.value1\">\r\n                                    {{ city.value1 }}\r\n                                </mat-option>\r\n                            </mat-select>\r\n                            <mat-error *ngIf=\"entityMaintenance.get('city').hasError('required')\">\r\n                                City is Required!\r\n                            </mat-error>\r\n                        </mat-form-field>\r\n                    </div>\r\n                    <div fxFlex=\"33.33\" class=\"pr-16\" *ngIf=\"readorWrite\" >\r\n                        <mat-label>State *</mat-label>\r\n                        <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                            <input \r\n                                matInput \r\n                                type=\"text\"\r\n                                readonly\r\n                                [formControl]=\"entityMaintenance.controls['city']\"\r\n                                required\r\n                            />\r\n                            <mat-error *ngIf=\"entityMaintenance.get('city').hasError('city')\">\r\n                                Entity Name is Required!\r\n                            </mat-error>\r\n                        </mat-form-field>\r\n                      \r\n                    </div>\r\n                    </div>\r\n                <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\" fxLayoutGap=\"15px\">\r\n                    <div fxFlex=\"32.33\" class=\"pr-16\">\r\n                        <mat-label>Pincode *</mat-label>\r\n                        <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                            <input \r\n                            [readonly]=\"readorWrite\"\r\n                            matInput \r\n                            name=\"pincode\" \r\n                            minlength=\"6\" \r\n                            maxlength=\"10\" \r\n                            pattern =\"^[1-9][0-9][{6}-{10}]$\"\r\n                            (keypress)=\"_keyPress($event)\"\r\n                            [formControl]=\"entityMaintenance.controls['pincode']\" \r\n                            required\r\n                            />\r\n                            <mat-error *ngIf=\"entityMaintenance.get('pincode').touched && entityMaintenance.get('pincode').hasError('required')\">\r\n                                <small>Pincode is Required!</small>\r\n                              </mat-error>\r\n                             \r\n                              <mat-error *ngIf=\"!entityMaintenance.get('pincode').valid && !entityMaintenance.get('pincode').hasError('required')\">\r\n                                <small>Please Enter Valid Pincode!</small>\r\n                              </mat-error>\r\n                        </mat-form-field>\r\n                    </div>\r\n                </div>\r\n\r\n                <h1>Communication Information</h1>\r\n                <!-- <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\" fxLayoutGap=\"15px\">\r\n                    <div fxFlex=\"33.33\" class=\"pr-16\"> -->\r\n                <div fxLayout=\"row\" fxLayoutGap=\"15px\">\r\n                    <div fxFlex=\"33.33\" class=\"pr-16\">\r\n                        <mat-label>Mobile Number *</mat-label>\r\n                        <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                            <input \r\n                                matInput name=\"mobile\" \r\n                                (keypress)=_keyPress($event) \r\n                                maxlength=\"10\" [readonly]=\"readorWrite\" \r\n                                minlength=\"10\"\r\n                                [formControl]=\"entityMaintenance.controls['mobile']\"\r\n                                required\r\n                            />\r\n                            <mat-error *ngIf=\"entityMaintenance.get('mobile').hasError('required')\">\r\n                                <small>Mobile Number is Required!</small>\r\n                            </mat-error>\r\n                            <mat-error *ngIf=\"!entityMaintenance.get('mobile').hasError('pattern')\">\r\n                                <small>Please Enter valid Mobile Number</small>\r\n                            </mat-error>\r\n                        </mat-form-field>\r\n                    </div>\r\n\r\n                    <div fxFlex=\"33.33\" class=\"pr-16\">\r\n                        <mat-label>Telephone <span *ngIf=\"!isReadOnly\" class=\"pl-4 \"></span></mat-label>\r\n                        <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                            <input \r\n                                matInput name=\"telephone\"  [readonly]=\"readorWrite\" \r\n                                (keypress)=_keyPress($event) maxlength=\"10\"\r\n                                [formControl]=\"entityMaintenance.controls['telephone']\" \r\n                            />\r\n                            <mat-error *ngIf=\"!entityMaintenance.get('mobile').hasError('pattern')\">\r\n                                <small>Please Enter valid Phone Number</small>\r\n                            </mat-error>\r\n                        </mat-form-field>\r\n                    </div>\r\n                </div>\r\n            <!-- </div> -->\r\n            <div fxLayout=\"row wrap\" fxLayout.lt-sm=\"column\">\r\n                <div fxFlex=\"100\" class=\"mt-16\" fxLayoutAlign=\"end center\">\r\n                  <button \r\n                    color=\"primary\" *ngIf=\"!isEdit\"\r\n                    [disabled]= \"entityMaintenance.invalid\"\r\n                    mat-raised-button \r\n                    (click)=\"submit()\"\r\n                  >\r\n                    Save\r\n                  </button>\r\n                  <div [hidden]=\"readorWrite\" >\r\n                    <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\"  [disabled]= \"!(entityMaintenance.invalid || entityMaintenance.dirty)\"(click)=\"submit()\">\r\n                       Save\r\n                      </button>&nbsp;&nbsp;\r\n                  </div>\r\n                  \r\n                  \r\n                  <div [hidden]=\"!readorWrite || auditLogData?.recordStatus == 'Close'\">\r\n                    <button *ngIf=\"isEdit\" type=\"button\"  mat-raised-button color=\"primary\" (click)=\"editRecord()\">\r\n                      Edit\r\n                    </button>&nbsp;&nbsp;\r\n                  </div>\r\n                  <div *ngIf=\"auditLogData?.authStatus == 'Unauthorized' && readorWrite\" [hidden]=\"!readorWrite\">\r\n                    <button *ngIf=\"isEdit\" type=\"button\"  mat-raised-button color=\"primary\" (click)=\"updateRecord('auth')\">\r\n                      Authorize\r\n                    </button>&nbsp;&nbsp;\r\n                  </div> \r\n                  <div *ngIf=\"auditLogData?.recordStatus == 'Close' && auditLogData?.oneTimeAuth != 'No'\" [hidden]=\"!readorWrite\">\r\n                    <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"updateRecord('open')\">\r\n                      Reopen\r\n                    </button>&nbsp;&nbsp;\r\n                  </div>\r\n                  <div *ngIf=\"auditLogData?.recordStatus == 'Open' && auditLogData?.oneTimeAuth != 'No'\" [hidden]=\"!readorWrite\">\r\n                    <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"updateRecord('close')\">\r\n                      Close\r\n                    </button>&nbsp;&nbsp;\r\n                  </div>\r\n                  <div *ngIf=\"auditLogData?.oneTimeAuth == 'No'\" [hidden]=\"!readorWrite\">\r\n                    <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"deleteRecord('delete')\">\r\n                      Delete\r\n                    </button> &nbsp;&nbsp;\r\n                  </div>\r\n                 \r\n                  <button\r\n                    mat-raised-button\r\n                    color=\"warn\"\r\n                    type=\"button\"\r\n                    (click)=\"goBack()\"\r\n                  >\r\n                    Exit\r\n                  </button>\r\n                </div>\r\n              </div>\r\n        </form>\r\n\r\n        \r\n    </mat-card-content>\r\n</mat-card>\r\n\r\n<div *ngIf=\"auditLogData\" class=\"mt-32\">\r\n    <app-audit-log #auditLog></app-audit-log>\r\n  </div>","import {\r\n  sequence,\r\n  trigger,\r\n  animate,\r\n  style,\r\n  group,\r\n  query,\r\n  transition,\r\n  animateChild,\r\n  state,\r\n  animation,\r\n  useAnimation,\r\n  stagger,\r\n} from '@angular/animations';\r\n\r\nconst reusable = animation(\r\n  [\r\n    style({\r\n      opacity: '{{opacity}}',\r\n      transform: 'scale({{scale}}) translate3d({{x}}, {{y}}, {{z}})',\r\n    }),\r\n    animate('{{duration}} {{delay}} cubic-bezier(0.0, 0.0, 0.2, 1)', style('*')),\r\n  ],\r\n  {\r\n    params: {\r\n      duration: '200ms',\r\n      delay: '0ms',\r\n      opacity: '0',\r\n      scale: '1',\r\n      x: '0',\r\n      y: '0',\r\n      z: '0',\r\n    },\r\n  }\r\n);\r\n\r\nexport const rumangoAnimations = [\r\n  trigger('animate', [transition('void => *', [useAnimation(reusable)])]),\r\n\r\n  trigger('fadeInOut', [\r\n    state(\r\n      '0',\r\n      style({\r\n        opacity: 0,\r\n        display: 'none',\r\n      })\r\n    ),\r\n    state(\r\n      '1',\r\n      style({\r\n        opacity: 1,\r\n        display: 'block',\r\n      })\r\n    ),\r\n    transition('0 => 1', animate('300ms')),\r\n    transition('1 => 0', animate('300ms')),\r\n  ]),\r\n];\r\n","import { ChangeDetectorRef, Component, ElementRef, Inject, OnInit, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\r\nimport { MatAutocompleteTrigger } from '@angular/material/autocomplete';\r\nimport { MAT_DIALOG_DATA, MatDialogRef, MatDialog } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport * as moment from 'moment';\r\nimport { Observable } from 'rxjs';\r\nimport { map, startWith } from 'rxjs/operators';\r\n\r\n\r\n@Component({\r\n  selector: 'app-holiday-list-dialog',\r\n  templateUrl: './holiday-list-dialog.component.html',\r\n  styleUrls: ['./holiday-list-dialog.component.scss']\r\n})\r\nexport class HolidayListDialogComponent implements OnInit {\r\n  holidayList: any;\r\n  myControl = new FormControl();\r\n  markAsHoliday: boolean = false;\r\n  disableSave: boolean;\r\n  dateUpdated: any;\r\n\r\n\r\n  constructor(@Inject(MAT_DIALOG_DATA) public data: any,\r\n    public dialogRef: MatDialogRef<HolidayListDialogComponent>, private cdr: ChangeDetectorRef,\r\n    private formBuilder: FormBuilder,\r\n    private snack: MatSnackBar,\r\n    private ls:LocalStoreService,\r\n    public dialog: MatDialog, private apiService: ApiService) { }\r\n  date: Date;\r\n  isEdit: boolean = false;\r\n  addBranchHoliday: FormGroup;\r\n  options: string[] = ['National', 'Regional', 'Bank', 'Common'];\r\n  filteredOptions: Observable<string[]>;\r\n  ngOnInit(): void {\r\n    if (this.data.date) {\r\n      this.date = this.data.date;\r\n    }\r\n\r\n    this.fetchBranchHolidayByCalendarDateDetails();\r\n\r\n    this.filteredOptions = this.myControl.valueChanges.pipe(\r\n      startWith(''),\r\n      map(value => this._filter(value)),\r\n    );\r\n\r\n    if (Object.keys(this.data.holidayData).length != 0) {\r\n      this.buildItemForm(this.data.holidayData);\r\n    } else {\r\n      this.buildItemForm({});\r\n    }\r\n  }\r\n  buildItemForm(item) {\r\n    this.addBranchHoliday = this.formBuilder.group({\r\n      bankCode: [item.bankCode || ''],\r\n      branchCode: [item.branchCode || ''],\r\n      calenderYear: [item.calenderYear || ''],\r\n      entityCode: [item.entityCode || ''],\r\n      description: [''],\r\n      holidayType: [''],\r\n    })\r\n  }\r\n\r\n  private _filter(value: string): string[] {\r\n    const filterValue = value.toLowerCase();\r\n\r\n    return this.options.filter(option => option.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n  onCheckOfMarAsHoiday() {\r\n    this.markAsHoliday = !this.markAsHoliday;\r\n  }\r\n\r\n  reset(addBranchHoliday) {\r\n    this.addBranchHoliday.get('description').setValue('');\r\n    this.addBranchHoliday.get('holidayType').setValue('');\r\n    // this.myControl.setValue(undefined);\r\n    // this.filteredOptions = this.myControl.valueChanges.pipe(\r\n    //   startWith(''),\r\n    //   map(value => this._filter(value)),\r\n    // );\r\n    this.markAsHoliday = false;\r\n  }\r\n\r\n\r\n\r\n\r\n  fetchBranchHolidayByCalendarDateDetails() {\r\n    this.apiService.fetchBranchHolidayByCalendarDateDetails()\r\n      .subscribe(holidayList => {\r\n        this.holidayList = holidayList;\r\n      });\r\n  }\r\n\r\n\r\n\r\n  saveHoliday(addBranchHoliday) {\r\n\r\n    if (this.data.action === 'UPDATE') {\r\n      this.isEdit = true;\r\n    }else{\r\n      this.isEdit = false;\r\n    }\r\n   \r\n    console.log('addBranchHoliday :: ', addBranchHoliday, this.date);\r\n    this.ls.setItem('holidayType',addBranchHoliday.holidayType)\r\n    let details: any[] = [];\r\n    var responseDate = moment(this.date).format('YYYY-MM-DD');\r\n    let payload = {\r\n      entityCode: addBranchHoliday.entityCode,\r\n      bankCode: addBranchHoliday.bankCode,\r\n      branchCode: addBranchHoliday.branchCode,\r\n      calenderYear: addBranchHoliday.calenderYear,\r\n      description: addBranchHoliday.description,\r\n      holidayType: addBranchHoliday.holidayType,\r\n      calenderDate: responseDate\r\n    }\r\n    details.push(payload);\r\n    console.log('details :: ', details);\r\n    this.dateUpdated = details;\r\n\r\n    this.apiService.updateBranchHolidayDetails(details, this.isEdit)\r\n      .subscribe(data => {\r\n        this.apiService.setHolidayData(data);\r\n        if (data != null) {\r\n          this.disableSave = true;\r\n          this.snack.open('Data Saved' + ' !', 'OK', {\r\n            duration: 4000,\r\n            verticalPosition: 'top',\r\n            horizontalPosition: 'right'\r\n          });\r\n          this.cdr.markForCheck();\r\n          this.dateUpdated = responseDate;\r\n        }\r\n        this.goToClose();\r\n\r\n      }, error => {\r\n        this.disableSave = true;\r\n        this.snack.open(`${error.error}` + ' !', 'OK', {\r\n          duration: 4000,\r\n          verticalPosition: 'top',\r\n          horizontalPosition: 'right',\r\n          panelClass: 'snackbar-error'\r\n        });\r\n\r\n      });\r\n  }\r\n  goToClose() {\r\n    this.dialogRef.close({\r\n      message: 'Confirm',\r\n      dateUpdated: this.dateUpdated\r\n    });\r\n  }\r\n\r\n}\r\n","<mat-card style=\"display: contents;padding: 0px;margin: 0px;\">\r\n\r\n\t<mat-card-content>\r\n\t\t<form [formGroup]=\"addBranchHoliday\" ngNativeValidate>\r\n\t\t\t<div fxLayout=\"row\">\r\n\t\t\t\t<div fxFlex=\"50%\" fxLayoutAlign=\"start center\">\r\n\t\t\t\t\t<h3 style=\"color: darkgray;\">CALENDAR</h3>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div fxFlex=\"50%\" fxLayoutAlign=\"end start\">\r\n\t\t\t\t\t<mat-icon style=\"color: darkgray; cursor: pointer;\" (click)=\"goToClose()\">close</mat-icon>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div fxLayout=\"row\">\r\n\t\t\t\t<h2>{{date | date:'EEE ,MMM dd'}}</h2>\r\n\t\t\t</div>\r\n\r\n\t\t\t<hr>\r\n\r\n\t\t\t<!-- <mat-card style=\"padding: 10px;margin:2px;\">\r\n\t\t\t\t<mat-card-content>\r\n\t\t\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"center center\">\r\n\t\t\t\t\t\t<div fxFlex=\"50%\" fxLayoutAlign=\"start center\">\r\n\t\t\t\t\t\t\t<h3 style=\"color: darkgray;\">Today</h3>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div fxFlex=\"50%\" fxLayoutAlign=\"end center\">\r\n\t\t\t\t\t\t\t<button mat-button [matMenuTriggerFor]=\"menu\">\r\n\t\t\t\t\t\t\t\t<mat-icon style=\"color: darkgray; cursor: pointer;\">more_vert</mat-icon>\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t<mat-menu #menu=\"matMenu\">\r\n\t\t\t\t\t\t\t\t<button mat-menu-item>Edit holiday</button>\r\n\t\t\t\t\t\t\t\t<button mat-menu-item>Mark as holiday</button>\r\n\t\t\t\t\t\t\t</mat-menu>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</mat-card-content>\r\n\t\t\t</mat-card> -->\r\n\r\n\t\t\t<div fxLayout=\"row\" fxLayoutGap=\"10px\">\r\n\t\t\t\t<mat-form-field appearance=\"fill\">\r\n\t\t\t\t\t<mat-label>Select Holiday Type</mat-label>\r\n\t\t\t\t\t<input type=\"text\" matInput formControlName=\"holidayType\" [matAutocomplete]=\"auto\">\r\n\t\t\t\t\t<mat-autocomplete autoActiveFirstOption #auto=\"matAutocomplete\">\r\n\t\t\t\t\t\t<mat-option *ngFor=\"let option of filteredOptions | async\" [value]=\"option\">\r\n\t\t\t\t\t\t\t{{option}}\r\n\t\t\t\t\t\t</mat-option>\r\n\t\t\t\t\t</mat-autocomplete>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<mat-form-field appearance=\"fill\">\r\n\t\t\t\t\t<mat-label>Description</mat-label>\r\n\t\t\t\t\t<input type=\"text\" matInput formControlName=\"description\" [disabled]=\"!addBranchHoliday.get('holidayType').value\">\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<div class=\"menuIconDiv\">\r\n\t\t\t\t\t<mat-icon [matMenuTriggerFor]=\"menu\" class=\"menuIcon\">more_vert</mat-icon>\r\n\t\t\t\t\t<mat-menu #menu=\"matMenu\">\r\n\t\t\t\t\t\t<button mat-menu-item>Edit holiday</button>\r\n\t\t\t\t\t\t<button mat-menu-item [disabled]=\"!markAsHoliday\">Mark as holiday</button>\r\n\t\t\t\t\t</mat-menu>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div fxLayout=\"row\">\r\n\t\t\t\t<mat-checkbox matSuffix (change)=\"onCheckOfMarAsHoiday()\">Enable mark as holiday</mat-checkbox>\r\n\t\t\t</div>\r\n\t\t\t<div fxLayout=\"row\" fxLayoutGap=\"10\" fxLayoutAlign=\"end center\">\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<button mat-button (click)=\"saveHoliday(addBranchHoliday.value)\" >\r\n\t\t\t\t\t\t<mat-icon color=\"primary\">done</mat-icon>\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<button (click)=\"reset(addBranchHoliday.value)\" mat-button>\r\n\t\t\t\t\t\t<mat-icon color=\"warn\">highlight_off</mat-icon>\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<!-- <mat-divider></mat-divider> -->\r\n\t\t\t<hr>\r\n\t\t\t<div *ngFor=\"let holiday of holidayList\">\r\n\t\t\t\t<mat-card style=\"padding: 10px;margin:2px;\">\r\n\t\t\t\t\t<mat-card-content>\r\n\t\t\t\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"center center\">\r\n\t\t\t\t\t\t\t<div fxFlex=\"50%\" fxLayoutAlign=\"start center\" style=\"color: darkgray;\">\r\n\t\t\t\t\t\t\t\t<h4>{{holiday.calenderDate | date:'EEE ,MMM dd'}}</h4>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div fxFlex=\"50%\" fxLayoutAlign=\"end center\">\r\n\t\t\t\t\t\t\t\t<button mat-button [matMenuTriggerFor]=\"menu\">\r\n\t\t\t\t\t\t\t\t\t<mat-icon style=\"color: darkgray; cursor: pointer;\">more_vert</mat-icon>\r\n\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t<mat-menu #menu=\"matMenu\">\r\n\t\t\t\t\t\t\t\t\t<button mat-menu-item>Edit holiday</button>\r\n\t\t\t\t\t\t\t\t\t<button mat-menu-item>Mark as holiday</button>\r\n\t\t\t\t\t\t\t\t</mat-menu>\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" *ngIf=\"holiday.holidayType=='Common'\"\r\n\t\t\t\t\t\t\tclass=\"commonHoliDiv\">\r\n\t\t\t\t\t\t\t<h4>{{holiday.holidayType}}-{{holiday.description}}</h4>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" *ngIf=\"holiday.holidayType=='Regional'\"\r\n\t\t\t\t\t\t\tclass=\"RegionalHoliDiv\">\r\n\t\t\t\t\t\t\t<h4>{{holiday.holidayType}}-{{holiday.description}}</h4>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" *ngIf=\"holiday.holidayType=='Bank'\"\r\n\t\t\t\t\t\t\tclass=\"BankHoliDiv\">\r\n\t\t\t\t\t\t\t<h4>{{holiday.holidayType}}-{{holiday.description}}</h4>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" *ngIf=\"holiday.holidayType=='National'\"\r\n\t\t\t\t\t\t\tclass=\"NationalHoliDiv\">\r\n\t\t\t\t\t\t\t<h4>{{holiday.holidayType}}-{{holiday.description}}</h4>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</mat-card-content>\r\n\t\t\t\t</mat-card>\r\n\t\t\t\t<hr>\r\n\t\t\t</div>\r\n\t\t</form>\r\n\t</mat-card-content>\r\n\r\n</mat-card>","import {\r\n  Component,\r\n  ElementRef,\r\n  OnInit,\r\n  ViewChild,\r\n  OnDestroy,\r\n} from \"@angular/core\";\r\nimport { MatDialog, MatDialogRef } from \"@angular/material/dialog\";\r\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\r\nimport { Router } from \"@angular/router\";\r\nimport { ApiService } from \"app/shared/services/api.service\";\r\nimport { AppConfirmService } from \"app/shared/services/app-confirm/app-confirm.service\";\r\nimport { AppLoaderService } from \"app/shared/services/app-loader/app-loader.service\";\r\nimport { DataService } from \"app/shared/services/data.service\";\r\nimport { LocalStoreService } from \"app/shared/services/local-store.service\";\r\nimport { Subscription } from \"rxjs\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort, Sort } from \"@angular/material/sort\";\r\nimport { LiveAnnouncer } from \"@angular/cdk/a11y\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { rumangoAnimations } from \"app/shared/animations/rumango-animations\";\r\nimport { DownloadService } from \"app/shared/services/download.service\";\r\n\r\nimport { tillVault } from \"app/shared/models/tillvault\";\r\n\r\n@Component({\r\n  selector: \"app-till-vault-status-summary\",\r\n  templateUrl: \"./till-vault-status-summary.component.html\",\r\n  styleUrls: [\"./till-vault-status-summary.component.scss\"],\r\n  animations: rumangoAnimations\r\n})\r\nexport class TillVaultStatusSummaryComponent implements OnInit {\r\n  @ViewChild(\"searchVal\") searchVal: ElementRef;\r\n  selectedFilterIndex: number = 0;\r\n\r\n  filterByOption: { key: string; value: string }[] = [\r\n    { key: \"entityCode\", value: \"Entity Code\" },\r\n  ];\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n\r\n  displayedColumns: string[] = [ 'entityCode','bankCode','branchCode', 'tillId', 'authStatus','recordStatus','action'];\r\n\r\n  dataSource = new MatTableDataSource();\r\n\r\n  public items: string[]=[];\r\n  public getItemSub: Subscription;\r\n  fetchVaultStatus: tillVault;\r\n  loading: boolean;\r\n  tillData: any;\r\n  till: any;\r\n  data: any;\r\n  constructor(\r\n    private dialog: MatDialog,\r\n    private snack: MatSnackBar,\r\n    private confirmService: AppConfirmService,\r\n    private loader: AppLoaderService,\r\n    private apiService: ApiService,\r\n    private dataService: DataService,\r\n    private router: Router,\r\n    private ls: LocalStoreService,\r\n    private _liveAnnouncer: LiveAnnouncer,\r\n    private downloadService: DownloadService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    //this.currentUser = this.ls.getItem(\"ICUST_USER\");\r\n    this.getTillId();\r\n    this.getItems();\r\n  }\r\n  ngOnDestroy() {\r\n    if (this.getItemSub) {\r\n      this.getItemSub.unsubscribe();\r\n    }\r\n  }\r\n  onFileChange(event) {\r\n    console.log('event', event.path[0].files[0]);\r\n    const file: File = event.path[0].files[0];\r\n    const uploadData = new FormData();\r\n    uploadData.append('screenType', 'tillVaultStatus');\r\n    uploadData.append('file', file);\r\n    this.apiService.uploadExelFile(uploadData).subscribe((response) => {\r\n      this.getItems();\r\n      console.log(response);\r\n      this.snack.open(`File Uploaded Successfully`, \"OK\", {\r\n        duration: 4000,\r\n        verticalPosition: \"top\",\r\n        horizontalPosition: \"right\",\r\n      });\r\n    });\r\n  }\r\n  getItems() {\r\n    // this.loading = true;\r\n    this.getItemSub = this.apiService\r\n      .fetchTillVaultStatusInfoList()\r\n      .subscribe((data:any) => {\r\n        for(let i=0;i<data.length;i++){\r\n          if(data[i].authStatus == 'U'){\r\n            data[i].authStatus = 'Unauthorized'\r\n          }\r\n          if(data[i].authStatus == 'A') {\r\n            data[i].authStatus = 'Authorized'\r\n          } \r\n          if(data[i].recordStatus == 'O'){\r\n            data[i].recordStatus = 'Open'\r\n          } \r\n          if(data[i].recordStatus == 'C'){\r\n            data[i].recordStatus = 'Closed'\r\n          }\r\n        }\r\n        this.items = data;\r\n        this.dataSource = new MatTableDataSource(data);\r\n        this.dataSource.paginator = this.paginator;\r\n        this.dataSource.sort = this.sort;\r\n        // this.loading = false;\r\n      });\r\n  }\r\n\r\n  doFilter(filterBy, e) {\r\n    this.filterTable(filterBy);\r\n    this.applyFilter(e);\r\n  }\r\n\r\n  filterTable(filterBy) {\r\n    this.dataSource.filterPredicate = (data: any, filter: string): boolean => {\r\n      return data[filterBy].toLocaleLowerCase().toString().includes(filter);\r\n    };\r\n  }\r\n\r\n  clearFilter() {\r\n    this.dataSource.filter = \"\";\r\n    this.searchVal.nativeElement.value = \"\";\r\n    this.selectedFilterIndex = 0;\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n\r\n  // announceSortChange(sortState: Sort) {\r\n  //   if (sortState.direction) {\r\n  //     this._liveAnnouncer.announce(`Sorted ${sortState.direction}ending`);\r\n  //   } else {\r\n  //     this._liveAnnouncer.announce(\"Sorting cleared\");\r\n  //   }\r\n  // }\r\n\r\n  openPopUp(row) {\r\n    this.fetchTellVaultStatus(row);\r\n    // this.dataService.sendNavParam(this.fetchVaultStatus);\r\n    this.router.navigate([`/maintenance/main/tillVaultStatus/${row.id}`]);\r\n  }\r\n\r\n  fetchTellVaultStatus(row) {\r\n    // this.loader.open();\r\n    this.apiService.getTillVaultStatusById(row.id).subscribe((result) => {\r\n      this.data = result;\r\n      if (this.data != null) {\r\n        this.tillData = this.till.find((x) => x.id == this.data.tillId);\r\n        if (this.tillData != null) {\r\n          this.data.tillId = this.tillData.tillVaultCode;\r\n        }\r\n        this.fetchVaultStatus = this.data;\r\n      }\r\n\r\n      if (this.fetchVaultStatus != null) {\r\n        localStorage.setItem(\r\n          \"fetchVaultStatus\",\r\n          JSON.stringify(this.fetchVaultStatus)\r\n        );\r\n        // this.loader.close();\r\n      }\r\n    });\r\n  }\r\n\r\n  addNew() {\r\n    this.router.navigate([\"/maintenance/main/tillVaultStatus/add\"]);\r\n  }\r\n\r\n  goBack() {\r\n    this.router.navigate([\"/maintenance/main/\"]);\r\n  }\r\n  tillVaultStatusSummery(){\r\n    this.downloadService.downloadFiles(\"tillVaultStatusSummery\" , this.items);\r\n\r\n  }\r\n\r\n  deleteItem(row) {\r\n    this.confirmService\r\n      .confirm({ message: `Delete ${row.entityCode}?` })\r\n      .subscribe((res) => {\r\n        if (res) {\r\n          this.loader.open();\r\n          this.apiService.deleteTillVaultStatusById(row.id).subscribe(\r\n            (res: any) => {},\r\n            (err: any) => {\r\n              (\"\");\r\n              if (err.status == 200) {\r\n                this.loader.close();\r\n                this.getItems();\r\n                this.snack.open(\"Member deleted!\", \"OK\", { duration: 4000 });\r\n              }\r\n            }\r\n          );\r\n        }\r\n      });\r\n  }\r\n\r\n  getTillId() {\r\n    let tillOrVault = \"T\";\r\n    this.apiService.getTillData(tillOrVault).subscribe((resp) => {\r\n      this.till = resp;\r\n    });\r\n  }\r\n\r\n  dataByFilter(index,filter){\r\n    return filter.key;\r\n  }\r\n}\r\n","<h1 class=\"main-head\"><small class=\"small-head\">Home > Maintenance Summary > Till Vault Status Maintenance </small></h1>\r\n<div fxLayoutAlign=\"center\">\r\n  <mat-spinner *ngIf=\"loading\"></mat-spinner>\r\n</div>\r\n<div fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"mt-24\">\r\n  <button mat-icon-button (click)=\"goBack()\">\r\n    <mat-icon>arrow_back</mat-icon>\r\n  </button>\r\n  <span class=\"text-large\">\r\n    Till Vault Status Maintenance\r\n  </span>\r\n  </div>\r\n<mat-card class=\"mt-32\" >\r\n  <div>\r\n    <table style=\"margin: 18px;\">\r\n      <tr>\r\n        <td>\r\n          <h2>\r\n            Status Maintenance\r\n          </h2>\r\n        </td>\r\n      </tr>\r\n      <tr>\r\n        <td>\r\n          <div class=\"highlight\">\r\n          </div>\r\n        </td>\r\n      </tr>\r\n    </table>\r\n    <span fxFlex></span>\r\n  <button mat-icon-button [matMenuTriggerFor]=\"menu\">\r\n    <mat-icon>more_vert</mat-icon>\r\n  </button>\r\n  <mat-menu #menu=\"matMenu\">\r\n    <div class=\"upload_botton\">\r\n      <button type=\"button\" mat-menu-item>Upload</button>\r\n      <input\r\n        type=\"file\"\r\n        accept=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\"\r\n        class=\"btn btn-success\"\r\n        (change)=\"onFileChange($event)\"\r\n      />\r\n    </div>\r\n    <button (click)=\"tillVaultStatusSummery()\"  mat-menu-item>\r\n      <span>Download</span>\r\n    </button>\r\n  </mat-menu>\r\n  </div>  \r\n  <mat-card-content class=\"p-0\">\r\n    <div fxLayout=\"row\" class=\"w-full\" fxLayoutAlign=\"space-arround center\" class=\"ml-16 mt-32\">\r\n      <div fxLayout=\"row\" class=\"w-full\" fxLayoutGap=\"10px\">\r\n        <div>\r\n          <mat-form-field appearance=\"outline\">\r\n            <mat-label>Filter By</mat-label>\r\n            <mat-select name=\"filterBy\" #filterBy [(ngModel)]=\"selectedFilterIndex\" placeholder=\"Filter By\">\r\n              <!-- <mat-select name=\"filterBy\" #filterBy [(ngModel)]=\"selectedFilterIndex\"> -->\r\n              <mat-option value=\"0\">Select</mat-option>\r\n              <mat-option *ngFor=\"let filter of filterByOption; trackBy:dataByFilter\" value=\"{{filter.key}}\">\r\n                {{filter.value}}\r\n              </mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n        </div>\r\n        <div>\r\n          <mat-form-field appearance=\"outline\">\r\n            <mat-label>Search</mat-label>\r\n            <input matInput #searchVal (keyup)=\"doFilter(filterBy.value,$event)\" placeholder=\"Search\">\r\n            <!-- <input matInput #searchVal (keyup)=\"doFilter(filterBy.value,$event)\"> -->\r\n            <mat-icon matSuffix>search</mat-icon>\r\n          </mat-form-field>\r\n        </div>\r\n      <div *ngIf=\"searchVal.value || filterBy.value\" class=\"resetDiv\">\r\n        <button mat-stroked-button class=\"clearBtn\" (click)=\"clearFilter()\">RESET\r\n        </button>\r\n      </div>\r\n      <div class=\"filterDiv\">\r\n       <button mat-flat-button color=\"primary\" class=\"addNewBtn\" (click)=\"addNew()\" >ADD NEW\r\n       </button>\r\n     </div>\r\n      \r\n    </div>\r\n    </div>\r\n    <!-- <ngx-datatable class=\"material ml-0 mr-0\" [rows]=\"dataSource?.data\" [columnMode]=\"'force'\" [headerHeight]=\"50\"\r\n      [footerHeight]=\"50\" [scrollbarH]=\"true\" [limit]=\"6\" [rowHeight]=\"50\">\r\n      <ngx-datatable-column name=\"Entity Code\" [flexGrow]=\"1\">\r\n        <ng-template let-row=\"row\" ngx-datatable-cell-template>\r\n          {{ row?.entityCode }}\r\n        </ng-template>\r\n      </ngx-datatable-column>\r\n      <ngx-datatable-column name=\"Bank Code\" [flexGrow]=\"1\">\r\n        <ng-template let-row=\"row\" ngx-datatable-cell-template>\r\n          {{ row?.bankCode }}\r\n        </ng-template>\r\n      </ngx-datatable-column>\r\n      <ngx-datatable-column name=\"Branch Code\" [flexGrow]=\"1\">\r\n        <ng-template let-row=\"row\" ngx-datatable-cell-template>\r\n          {{ row?.branchCode }}\r\n        </ng-template>\r\n      </ngx-datatable-column>\r\n      <ngx-datatable-column name=\"Till Id\" [flexGrow]=\"1\">\r\n        <ng-template let-row=\"row\" ngx-datatable-cell-template>\r\n          {{ row?.tillId }}\r\n        </ng-template>\r\n      </ngx-datatable-column>\r\n      <ngx-datatable-column name=\"Auth Status\" [flexGrow]=\"1\">\r\n        <ng-template let-row=\"row\" ngx-datatable-cell-template>\r\n          {{ row?.authStatus }}\r\n        </ng-template>\r\n      </ngx-datatable-column>\r\n      <ngx-datatable-column name=\"Record Status\" [flexGrow]=\"1\">\r\n        <ng-template let-row=\"row\" ngx-datatable-cell-template>\r\n          {{ row?.recordStatus }}\r\n        </ng-template>\r\n      </ngx-datatable-column>\r\n      <ngx-datatable-column name=\"Actions\" [flexGrow]=\"1\">\r\n        <ng-template let-row=\"row\" ngx-datatable-cell-template>\r\n          <button mat-icon-button mat-sm-button color=\"primary\" class=\"mr-16\" (click)=\"openPopUp(row)\">\r\n            <mat-icon>edit</mat-icon>\r\n          </button>\r\n          <button mat-icon-button mat-sm-button color=\"warn\" [disabled]=\"row.oneTimeAuth =='Y'\"\r\n            (click)=\"deleteItem(row)\">\r\n            <mat-icon>delete</mat-icon>\r\n          </button>\r\n        </ng-template>\r\n      </ngx-datatable-column>\r\n    </ngx-datatable> -->\r\n\r\n    <div class=\"mat-elevation-z0\">\r\n      <mat-table class=\"w-full\" [dataSource]=\"dataSource\" matSort>\r\n\r\n        <ng-container matColumnDef=\"entityCode\">\r\n          <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by state code\"> Entity\r\n            Code\r\n          </mat-header-cell>\r\n          <mat-cell *matCellDef=\"let element\"> {{element?.entityCode}} </mat-cell>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"bankCode\">\r\n          <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Bannk Code \"> Bank Code\r\n          </mat-header-cell>\r\n          <mat-cell *matCellDef=\"let element\"> {{element?.bankCode}} </mat-cell>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"branchCode\">\r\n          <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by status\"> Branch Code         \r\n          </mat-header-cell>\r\n          <mat-cell *matCellDef=\"let element\"> {{element?.branchCode}} </mat-cell>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"tillId\">\r\n          <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by status\"> Till Id      \r\n          </mat-header-cell>\r\n          <mat-cell *matCellDef=\"let element\"> {{element?.tillId}} </mat-cell>\r\n        </ng-container>\r\n        \r\n        <ng-container matColumnDef=\"authStatus\">\r\n          <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Auth Status\"> Auth Status\r\n          </mat-header-cell>\r\n          <mat-cell *matCellDef=\"let element\"> {{element?.authStatus}} </mat-cell>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"recordStatus\">\r\n          <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Record Status\"> Record\r\n            Status\r\n          </mat-header-cell>\r\n          <mat-cell *matCellDef=\"let element\"> {{element?.recordStatus}} </mat-cell>\r\n        </ng-container>\r\n        \r\n        <ng-container matColumnDef=\"action\">\r\n          <mat-header-cell *matHeaderCellDef>Action</mat-header-cell>\r\n          <mat-cell *matCellDef=\"let element\">\r\n            <div>\r\n             <mat-icon class=\"actionIcons\" matTooltip=\"Edit\" (click)=\"openPopUp(element)\"  >edit</mat-icon>\r\n          </div>&nbsp;&nbsp;&nbsp;&nbsp;\r\n          <div>\r\n           <mat-icon class=\"actionIcons\" matTooltip=\"Delete\" [disabled]=\"element.oneTimeAuth =='Y'\" (click)=\"deleteItem(element)\" >delete</mat-icon>\r\n          </div>\r\n          </mat-cell>\r\n        </ng-container>\r\n\r\n        <mat-header-row *matHeaderRowDef=\"displayedColumns;\"></mat-header-row>\r\n        <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\r\n      </mat-table>\r\n      <mat-paginator class=\"mt-16\"  [pageSizeOptions]=\"[5, 10, 20]\" aria-label=\"Select page of users\"></mat-paginator>\r\n    </div>\r\n\r\n    <!-- <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\" aria-label=\"Select page of users\"></mat-paginator> -->\r\n  </mat-card-content>\r\n</mat-card>","import {ElementRef, OnInit} from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport {MatSort, Sort} from '@angular/material/sort';\r\nimport {LiveAnnouncer} from '@angular/cdk/a11y';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport {AfterViewInit, Component, ViewChild} from '@angular/core';\r\nimport { AppConfirmService } from 'app/shared/services/app-confirm/app-confirm.service';\r\nimport { AppLoaderService } from 'app/shared/services/app-loader/app-loader.service';\r\nimport { Subscription } from 'rxjs';\r\nimport { DownloadService } from 'app/shared/services/download.service';\r\n\r\n@Component({\r\n  selector: 'app-country-state-maintenance',\r\n  templateUrl: './country-state-maintenance.component.html',\r\n  styleUrls: ['./country-state-maintenance.component.scss']\r\n})\r\nexport class CountryStateMaintenanceComponent implements OnInit {\r\n\r\n  @ViewChild('searchVal') searchVal: ElementRef;\r\n  selectedFilterIndex : number = 0;\r\n  currentUser:string;\r\n  public getItemSub: Subscription;\r\n  public userdata: any[];\r\n  public items: string[];\r\n\r\n dataSource = new MatTableDataSource();\r\n  displayedColumns: string[] = ['countryCode', 'countryName', 'countryIsoCode2', 'region', 'ibanCheckReqd', 'authStatus', 'recordStatus', 'action'];\r\n\r\n  filterByOption: { key: string, value: string }[] = [\r\n    { key: 'countryCode', value: 'Country Code' },\r\n    { key: 'countryName', value: 'Country Name' },\r\n    { key: 'regionCode', value: 'Region Code' }\r\n  ];\r\n\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n\r\n  constructor(private router:Router,\r\n     private snack: MatSnackBar,\r\n     private loader: AppLoaderService,\r\n       private confirmService: AppConfirmService,\r\n       private apiService:ApiService,\r\n       private _liveAnnouncer: LiveAnnouncer,\r\n       private downloadService: DownloadService\r\n       ) { }\r\n\r\n  ngOnInit(): void {\r\n   this.getAllCountries(); \r\n   \r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n \r\n  onFileChange(event) {\r\n    console.log('event', event.path[0].files[0]);\r\n    const file: File = event.path[0].files[0];\r\n    const uploadData = new FormData();\r\n    uploadData.append('screenType', 'countryMaint');\r\n    uploadData.append('file', file);\r\n    this.apiService.uploadExelFile(uploadData).subscribe((response) => {\r\n      console.log(response);\r\n      this.getAllCountries();\r\n      this.snack.open(`File Uploaded Successfully`, \"OK\", {\r\n        duration: 4000,\r\n        verticalPosition: \"top\",\r\n        horizontalPosition: \"right\",\r\n      });\r\n    });\r\n  }\r\n\r\n  getAllCountries() {\r\n    this.apiService.getAllCountries().subscribe((data: any) => {\r\n   \r\n      for(let i=0;i<data.length;i++){\r\n        if(data[i].authStatus == 'U'){\r\n          data[i].authStatus = 'Unauthorized'\r\n        }\r\n        if(data[i].authStatus == 'A') {\r\n          data[i].authStatus = 'Authorized'\r\n        } \r\n        if(data[i].recordStatus == 'O'){\r\n          data[i].recordStatus = 'Open'\r\n        } \r\n        if(data[i].recordStatus == 'C'){\r\n          data[i].recordStatus = 'Closed'\r\n        }\r\n      }\r\n      this.dataSource = new MatTableDataSource(data);\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n      this.userdata= data;\r\n\r\n    });\r\n  }\r\n\r\n  addNew(){\r\n    this.router.navigate([\"/maintenance/main/countryStatepopup\"]);\r\n  }\r\n  openPopUp(data: any = {}, isEdit : string) {\r\n    this.router.navigate([\"/maintenance/main/countryStatepopup\"],{ queryParams: { id: data.id, isEdit : isEdit } });\r\n  }\r\n  \r\n  goBack(){\r\n    this.router.navigate([`/maintenance/main`]);\r\n  }\r\n\r\n  doFilter(filterBy, e){\r\n    this.filterTable(filterBy);\r\n    this.applyFilter(e);\r\n  }\r\n\r\n  filterTable(filterBy) {\r\n    this.dataSource.filterPredicate = (data: any, filter: string): boolean => {\r\n      return (\r\n        data[filterBy]?.toLocaleLowerCase().includes(filter)\r\n      )\r\n    }\r\n  }\r\n\r\n  clearFilter(){\r\n   this.dataSource.filter = '';\r\n   this.searchVal.nativeElement.value = '';\r\n   this.selectedFilterIndex = 0;\r\n  }\r\n  getBranches() {\r\n    this.getItemSub = this.apiService.getAllBranch()\r\n      .subscribe(data => {\r\n        this.items = data;\r\n      })\r\n  }\r\n  countryStateMaintenance(){\r\n    this.downloadService.downloadFiles(\"countryStateMaintenance\", this.userdata);\r\n  }\r\n\r\n\r\n  deleteItem(row) {\r\n    this.confirmService.confirm({message: `Delete ${row.countryName}?`})\r\n      .subscribe(res => {\r\n        if (res) {\r\n          this.loader.open();\r\n          this.apiService.deleteCountry(row.id)\r\n            .subscribe(data => {\r\n              \r\n            },    err=>{\r\n              if (err.status == 200) {\r\n                this.loader.close();\r\n                this.snack.open('Record Deleted Successfully', 'OK', {\r\n                  duration: 4000,\r\n                  verticalPosition: 'top',\r\n                  horizontalPosition: 'right'\r\n                });\r\n              }\r\n            this.getAllCountries();\r\n            \r\n          })\r\n        }\r\n      })\r\n  }\r\n  dataByFilter(index,item){\r\n    return item.key\r\n  }\r\n\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n\r\n  announceSortChange(sortState: Sort) {\r\n    if (sortState.direction) {\r\n      this._liveAnnouncer.announce(`Sorted ${sortState.direction}ending`);\r\n    } else {\r\n      this._liveAnnouncer.announce('Sorting cleared');\r\n    }\r\n  }\r\n\r\n}\r\n","<h1 class=\"main-head\"><small class=\"small-head\">Home > Maintenance Summary > Country and State Maintenance </small></h1>\r\n<div fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"mt-24\">\r\n  <button mat-icon-button (click)=\"goBack()\">\r\n    <mat-icon>arrow_back</mat-icon>\r\n  </button>\r\n  <span class=\"text-large\">\r\n    Country and State Maintenance\r\n  </span>\r\n</div>\r\n\r\n<mat-card class=\"mt-32\">\r\n  <div>\r\n    <table>\r\n      <tr>\r\n        <td>\r\n          <h2>\r\n            Countries\r\n          </h2>\r\n        </td>\r\n      </tr>\r\n      <tr>\r\n        <td>\r\n          <div class=\"highlight\">\r\n          </div>\r\n        </td>\r\n      </tr>\r\n    </table>\r\n  <span fxFlex></span>\r\n  <button mat-icon-button [matMenuTriggerFor]=\"menu\">\r\n    <mat-icon>more_vert</mat-icon>\r\n  </button>\r\n  <mat-menu #menu=\"matMenu\">\r\n    <div class=\"upload_botton\">\r\n      <button type=\"button\" mat-menu-item>Upload</button>\r\n      <input\r\n        type=\"file\"\r\n        accept=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\"\r\n        class=\"btn btn-success\"\r\n        (change)=\"onFileChange($event)\"\r\n      />\r\n    </div>\r\n    <button (click)=\"countryStateMaintenance()\" mat-menu-item>\r\n      <span>Download</span>\r\n    </button>\r\n  </mat-menu>\r\n</div><br>\r\n<div fxLayout=\"row\" class=\"w-full\" fxLayoutAlign=\"space-arround center\" class=\"ml-16 mt-32\">\r\n  <div fxLayout=\"row\" class=\"w-full\" fxLayoutGap=\"10px\">\r\n      <div>\r\n        <mat-form-field appearance=\"outline\">\r\n          <mat-label>Filter By</mat-label>\r\n          <mat-select name=\"filterBy\" #filterBy [(ngModel)]=\"selectedFilterIndex\" placeholder=\"Filter By\">\r\n          <!-- <mat-select name=\"filterBy\" #filterBy [(ngModel)]=\"selectedFilterIndex\"> -->\r\n\r\n            <mat-option value=\"0\">Select</mat-option>\r\n            <mat-option *ngFor=\"let filter of filterByOption; trackBy:dataByFilter\" value=\"{{filter.key}}\">\r\n              {{filter.value}}\r\n            </mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n      </div>\r\n      <div>\r\n        <mat-form-field appearance=\"outline\">\r\n          <mat-label>Search</mat-label>\r\n          <input matInput #searchVal (keyup)=\"doFilter(filterBy.value,$event)\" placeholder=\"Search\">\r\n          <!-- <input matInput #searchVal (keyup)=\"doFilter(filterBy.value,$event)\"> -->\r\n          <mat-icon matSuffix>search</mat-icon>\r\n        </mat-form-field>\r\n      </div>\r\n    <div *ngIf=\"searchVal.value || filterBy.value\" class=\"resetDiv\">\r\n      <button mat-stroked-button class=\"clearBtn\" (click)=\"clearFilter()\">RESET\r\n      </button>\r\n    </div>\r\n    <div class=\"filterDiv\">\r\n     <button mat-flat-button color=\"primary\" class=\"addNewBtn\" (click)=\"openPopUp('','false')\" >ADD NEW\r\n     </button>\r\n   </div>\r\n\r\n  </div>\r\n  </div>\r\n  <div class=\"mat-elevation-z0\">\r\n    <mat-table class=\"w-full\" [dataSource]=\"dataSource\" matSort (matSortChange)=\"announceSortChange($event)\">\r\n\r\n      <ng-container matColumnDef=\"countryCode\">\r\n        <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by country code\"> Country Code\r\n        </mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\"> {{element.countryCode}} </mat-cell>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"countryName\">\r\n        <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by country name\"> Country Name\r\n        </mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\"> {{element.countryName}} </mat-cell>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"countryIsoCode2\">\r\n        <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by country code 2\"> Country\r\n          Code 2 </mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\"> {{element.countryIsoCode2}} </mat-cell>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"region\">\r\n        <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by region code\"> Region Code\r\n        </mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\"> {{element.region}} </mat-cell>\r\n      </ng-container>\r\n      <ng-container matColumnDef=\"ibanCheckReqd\">\r\n        <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by iban check required\"> IBAN check required\r\n        </mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\"> {{element.ibanCheckReqd}} </mat-cell>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"authStatus\">\r\n        <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Auth Status\"> Auth Status\r\n        </mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\"> {{element.authStatus}} </mat-cell>\r\n      </ng-container>\r\n      <ng-container matColumnDef=\"recordStatus\">\r\n        <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Record Status\"> Record Status\r\n        </mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\"> {{element.recordStatus}} </mat-cell>\r\n      </ng-container>\r\n      <ng-container matColumnDef=\"action\">\r\n        <mat-header-cell *matHeaderCellDef>Action</mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\">\r\n          <div>\r\n           <mat-icon class=\"actionIcons\" matTooltip=\"Edit\" (click)=\"openPopUp(element,'Yes')\" >edit</mat-icon>\r\n        </div>&nbsp;&nbsp;&nbsp;&nbsp;\r\n        <div>\r\n         <mat-icon class=\"actionIcons\" matTooltip=\"Delete\" [disabled]=\"element.oneTimeAuth =='Y'\"  (click)=\"deleteItem(element)\" >delete</mat-icon>\r\n        </div>\r\n        </mat-cell>\r\n      </ng-container>\r\n\r\n      <mat-header-row *matHeaderRowDef=\"displayedColumns;\"></mat-header-row>\r\n      <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\r\n    </mat-table>\r\n    <mat-paginator class=\"mt-16\" [pageSizeOptions]=\"[5, 10, 15]\" showFirstLastButtons></mat-paginator>\r\n</div>\r\n</mat-card>","import { Component, EventEmitter,ElementRef,  OnInit, Output } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { rumangoAnimations } from 'app/shared/animations/rumango-animations';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { AppConfirmService } from 'app/shared/services/app-confirm/app-confirm.service';\r\nimport { AppLoaderService } from 'app/shared/services/app-loader/app-loader.service';\r\nimport { DataService } from 'app/shared/services/data.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { Subscription } from 'rxjs';\r\nimport { Location } from '@angular/common';\r\nimport { ViewChild } from '@angular/core';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatSort, Sort } from '@angular/material/sort';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { LiveAnnouncer } from '@angular/cdk/a11y';\r\nimport { DownloadService } from 'app/shared/services/download.service';\r\nimport { currentUser } from 'app/shared/models/cureentUser';\r\n\r\n\r\n@Component({\r\n  selector: 'app-bank-list',\r\n  templateUrl: './bank-list.component.html',\r\n  styleUrls: ['./bank-list.component.scss'],\r\n  animations: rumangoAnimations\r\n})\r\nexport class BankListComponent implements OnInit {\r\n\r\n  @ViewChild('searchVal') searchVal: ElementRef;\r\n  selectedFilterIndex : number = 0;\r\n\r\n\r\n  displayedColumns: string[] = ['entityCode', 'bankCode', 'bankName', 'headOfficeBrn', 'country', 'authStatus', 'recordStatus', 'action'];\r\n\r\n  filterByOption: { key: string, value: string }[] = [\r\n    { key: 'entityCode', value: 'entityCode' },\r\n    { key: 'bankCode', value: 'Bank Code' },\r\n    { key: 'branchCode', value: 'Branch Code' }\r\n  ];\r\n\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  dataSource = new MatTableDataSource();\r\n  \r\n  branchCode:string[]=[];\r\n  bankCode:string[]=[];\r\n  entityCode:string[]=[];\r\n\r\n  public items: string[];\r\n  users: string[] = [];\r\n  public getItemSub: Subscription;\r\n\r\n\r\n \r\n  currentUser: currentUser;\r\n  loading: boolean;\r\n  constructor(\r\n    private snack: MatSnackBar,\r\n    private confirmService: AppConfirmService,\r\n    private loader: AppLoaderService,\r\n    private apiService: ApiService,\r\n    private router:Router,\r\n    private dataService:DataService,\r\n    private _location: Location,\r\n    private ls: LocalStoreService,\r\n    private _liveAnnouncer: LiveAnnouncer,\r\n    private downloadService: DownloadService\r\n    ) { }\r\n\r\n  ngOnInit() {\r\n    this.currentUser = this.ls.getItem(\"ICUST_USER\");\r\n    \r\n    this.getAllBanks();\r\n\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.getItemSub) {\r\n      this.getItemSub.unsubscribe()\r\n    }\r\n  }\r\n\r\n  onFileChange(event) {\r\n    console.log('event', event.path[0].files[0]);\r\n    const file: File = event.path[0].files[0];\r\n    const uploadData = new FormData();\r\n    uploadData.append('screenType', 'bank');\r\n    uploadData.append('file', file);\r\n    this.apiService.uploadExelFile(uploadData).subscribe((response) => {\r\n      console.log(response);\r\n      this.getAllBanks();\r\n      this.snack.open(`File Uploaded Successfully`, \"OK\", {\r\n        duration: 4000,\r\n        verticalPosition: \"top\",\r\n        horizontalPosition: \"right\",\r\n      });\r\n    });\r\n  }\r\n  getAllBanks() {\r\n    this.getItemSub = this.apiService.getBankCode()\r\n      .subscribe(data => {\r\n        for(let i=0;i<data.length;i++){\r\n          if(data[i].authStatus == 'U'){\r\n            data[i].authStatus = 'Unauthorized'\r\n          }\r\n          if(data[i].authStatus == 'A') {\r\n            data[i].authStatus = 'Authorized'\r\n          } \r\n          if(data[i].recordStatus == 'O'){\r\n            data[i].recordStatus = 'Open'\r\n          } \r\n          if(data[i].recordStatus == 'C'){\r\n            data[i].recordStatus = 'Closed'\r\n          }\r\n        }\r\n        this.items = data;\r\n      \r\n        this.dataSource = new MatTableDataSource(data);\r\n        this.users = data;\r\n        this.dataSource.paginator = this.paginator;\r\n        this.dataSource.sort = this.sort;\r\n        \r\n      })\r\n  }\r\n\r\n\r\n  openPopUp(row) {\r\n   \r\n    this.dataService.shareBankItem(row);\r\n    this.router.navigate([`/maintenance/bank/${row.id}`]);\r\n  }\r\n  bankList(){\r\n    this.downloadService.downloadFiles(\"bankMaintance\" , this.users);\r\n  }\r\n  deleteItem(row) {\r\n      this.confirmService.confirm({ message: `Are you sure, you want to delete ${row.bankName}?` })\r\n         .subscribe((res) => {\r\n              console.log('res')\r\n              if (res) {\r\n                this.loader.open();\r\n                this.apiService.deleteBank(row.id,this.currentUser.userName)\r\n                .subscribe((res: any) => {\r\n                     (\"\");\r\n                    console.log(res);\r\n                    if (res) {\r\n                    this.loader.close();\r\n                    this.snack.open('Record Deleted Successfully', 'OK', {\r\n                      duration: 4000,\r\n                      verticalPosition: 'top',\r\n                      horizontalPosition: 'right'\r\n                    });\r\n                  }\r\n                  this.getAllBanks();\r\n  \r\n                })\r\n          }\r\n  \r\n        });\r\n    }\r\n\r\n  goBack(){\r\n    // this._location.back();\r\n    this.router.navigate([`/maintenance/main`]);\r\n  }\r\n  doFilter(filterBy, e){\r\n   \r\n    this.filterTable(filterBy);\r\n    this.applyFilter(e);\r\n  }\r\n \r\n\r\n  filterTable(filterBy) {\r\n    this.dataSource.filterPredicate = (data: any, filter: string): boolean => {\r\n      return (\r\n        data[filterBy].toLocaleLowerCase().includes(filter)\r\n      )\r\n    }\r\n  }\r\n\r\n  clearFilter(){\r\n   this.dataSource.filter = '';\r\n   this.searchVal.nativeElement.value = '';\r\n   this.selectedFilterIndex = 0;\r\n  }\r\n\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n  announceSortChange(sortState: Sort) {\r\n    if (sortState.direction) {\r\n      this._liveAnnouncer.announce(`Sorted ${sortState.direction}ending`);\r\n    } else {\r\n      this._liveAnnouncer.announce('Sorting cleared');\r\n    }\r\n  }\r\n  dataByFilter(index,filter){\r\n    return filter.value;\r\n  }\r\n}\r\n","<h1 class=\"main-head\"><small class=\"small-head\">Home > Maintenance Summary  > Bank Maintenance </small></h1>\r\n<div fxLayoutAlign=\"center\">\r\n  <mat-spinner *ngIf=\"loading\"></mat-spinner>\r\n</div>\r\n<div fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"mt-24\">\r\n  <button mat-icon-button (click)=\"goBack()\">\r\n    <mat-icon>arrow_back</mat-icon>\r\n  </button>\r\n  <span class=\"text-large\">\r\n    Bank Maintenance\r\n  </span>  \r\n</div>\r\n<mat-card class=\"mt-32\">\r\n  <div>\r\n    <table style=\"margin: 18px;\">\r\n      <tr>\r\n        <td>\r\n          <h2>\r\n            Banks\r\n          </h2>\r\n        </td>\r\n      </tr>\r\n      <tr>\r\n        <td>\r\n          <div class=\"highlight\">\r\n          </div>\r\n        </td>\r\n      </tr>\r\n    </table>  \r\n  <span fxFlex></span>\r\n  <button mat-icon-button [matMenuTriggerFor]=\"menu\">\r\n    <mat-icon>more_vert</mat-icon>\r\n  </button>\r\n  <mat-menu #menu=\"matMenu\">\r\n    <!-- <button mat-menu-item>\r\n      <span>Export</span>\r\n    </button> -->\r\n    <div class=\"upload_botton\">\r\n      <button type=\"button\" mat-menu-item>Upload</button>\r\n      <input\r\n        type=\"file\"\r\n        accept=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\"\r\n        class=\"btn btn-success\"\r\n        (change)=\"onFileChange($event)\"\r\n      />\r\n    </div>\r\n    <button (click)=\"bankList()\" mat-menu-item>\r\n      <span>Download</span>\r\n    </button>\r\n  </mat-menu>\r\n  </div>\r\n<div fxLayout=\"row\" class=\"w-full\" fxLayoutAlign=\"space-arround center\" class=\"ml-16 mt-32\">\r\n  <div fxLayout=\"row\" class=\"w-full\" fxLayoutGap=\"10px\">\r\n    <div>\r\n      <mat-form-field appearance=\"outline\">\r\n        <mat-label>Filter By</mat-label>\r\n        <mat-select name=\"filterBy\" #filterBy [(ngModel)]=\"selectedFilterIndex\" placeholder=\"Filter By\">\r\n          <!-- <mat-select name=\"filterBy\" #filterBy [(ngModel)]=\"selectedFilterIndex\"> -->\r\n          <mat-option value=\"0\">Select</mat-option>\r\n          <mat-option *ngFor=\"let filter of filterByOption; trackBy:dataByFilter\" value=\"{{filter.key}}\">\r\n            {{filter.value}}\r\n          </mat-option>\r\n        </mat-select>\r\n      </mat-form-field>\r\n    </div>\r\n    <div>\r\n      <mat-form-field appearance=\"outline\">\r\n        <mat-label>Search</mat-label>\r\n        <input matInput #searchVal (keyup)=\"doFilter(filterBy.value,$event)\" placeholder=\"Search\">\r\n        <!-- <input matInput #searchVal (keyup)=\"doFilter(filterBy.value,$event)\"> -->\r\n        <mat-icon matSuffix>search</mat-icon>\r\n      </mat-form-field>\r\n    </div>\r\n    <!-- <div style=\"padding-top: 3px;\">\r\n      <button mat-flat-button color=\"warn\" (click)=\"clearFilter()\" style=\"height: 45px;\">Clear Filter</button>\r\n    </div>\r\n  <div>\r\n  <button mat-flat-button color=\"primary\" routerLink=\"/maintenance/main/bank/add\" style=\"height: 45px; margin-left: 15cm;\">ADD BANK</button>\r\n  </div> -->\r\n\r\n  <div *ngIf=\"searchVal.value || filterBy.value\" class=\"resetDiv\">\r\n    <button mat-stroked-button class=\"clearBtn\" (click)=\"clearFilter()\">RESET\r\n    </button>\r\n  </div>\r\n  <div class=\"filterDiv\">\r\n   <button mat-flat-button color=\"primary\" class=\"addNewBtn\" routerLink=\"/maintenance/main/bank/add\" >ADD NEW\r\n   </button>\r\n </div>\r\n\r\n</div>\r\n</div>\r\n<div class=\"mat-elevation-z0\">\r\n  <mat-table class=\"w-full\" [dataSource]=\"dataSource\" matSort (matSortChange)=\"announceSortChange($event)\">\r\n\r\n    <ng-container matColumnDef=\"entityCode\">\r\n      <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by entity code\"> Entity\r\n        Code\r\n      </mat-header-cell>\r\n      <mat-cell *matCellDef=\"let element\"> {{element.entityCode}} </mat-cell>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"bankCode\">\r\n      <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by bank code \">Bank Code\r\n      </mat-header-cell>\r\n      <mat-cell *matCellDef=\"let element\"> {{element.bankCode}} </mat-cell>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"bankName\">\r\n      <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by bank name\"> Bank Name\r\n         </mat-header-cell>\r\n      <mat-cell *matCellDef=\"let element\"> {{element?.bankName}} </mat-cell>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"headOfficeBrn\">\r\n      <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by head office brn\"> Head Office Branch\r\n      </mat-header-cell>\r\n      <mat-cell *matCellDef=\"let element\"> {{element.headOfficeBrn}} </mat-cell>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"country\">\r\n      <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by  country\"> Country\r\n      </mat-header-cell>\r\n      <mat-cell *matCellDef=\"let element\"> {{element.country}} </mat-cell>\r\n    </ng-container>\r\n    <ng-container matColumnDef=\"authStatus\">\r\n      <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Auth Status\"> Auth Status\r\n      </mat-header-cell>\r\n      <mat-cell *matCellDef=\"let element\"> {{element.authStatus}} </mat-cell>\r\n    </ng-container>\r\n    <ng-container matColumnDef=\"recordStatus\">\r\n      <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Record Status\"> Record Status\r\n      </mat-header-cell>\r\n      <mat-cell *matCellDef=\"let element\"> {{element.recordStatus}} </mat-cell>\r\n    </ng-container>\r\n    <ng-container matColumnDef=\"action\">\r\n      <mat-header-cell *matHeaderCellDef>Action</mat-header-cell>\r\n      <mat-cell *matCellDef=\"let element\">\r\n        <div>\r\n         <mat-icon class=\"actionIcons\" matTooltip=\"Edit\" (click)=\"openPopUp(element,'Yes')\" >edit</mat-icon>\r\n      </div>&nbsp;&nbsp;&nbsp;&nbsp;\r\n      <div>\r\n       <mat-icon class=\"actionIcons\" matTooltip=\"Delete\" [disabled]=\"element.oneTimeAuth =='Y'\"  (click)=\"deleteItem(element)\" >delete</mat-icon>\r\n      </div>\r\n      </mat-cell>\r\n    </ng-container>\r\n\r\n    <mat-header-row *matHeaderRowDef=\"displayedColumns;\"></mat-header-row>\r\n    <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\r\n  </mat-table>\r\n  <mat-paginator class=\"mt-16\" [pageSizeOptions]=\"[5, 10, 20]\" aria-label=\"Select page of users\"></mat-paginator>\r\n</div>\r\n</mat-card>","import { ChangeDetectorRef, Input, Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatSidenav } from '@angular/material/sidenav';\r\n\r\n@Component({\r\n  selector: 'app-maintenance-home',\r\n  templateUrl: './maintenance-home.component.html',\r\n  styleUrls: ['./maintenance-home.component.scss']\r\n})\r\nexport class MaintenanceHomeComponent implements OnInit {\r\n  isSidenavOpen: Boolean = true;\r\n  @Input() profilePanel;\r\n  @ViewChild(MatSidenav) private sideNav: MatSidenav;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n    // document.getElementById('main-content-wrap').style.backgroundColor = 'white' ; \r\n  }\r\n\r\n  toggleNotific() {\r\n    this.sideNav.open();\r\n  }\r\n\r\n  close() {\r\n    this.profilePanel.close();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    //Called once, before the instance is destroyed.\r\n    //Add 'implements OnDestroy' to the class.\r\n      \r\n  }\r\n}\r\n","\r\n    <div class=\"container\">\r\n      <div class=\"m-333\">\r\n        <router-outlet></router-outlet>\r\n      </div>\r\n    </div>\r\n\r\n","import {\r\n  ChangeDetectorRef,\r\n  Component,\r\n  Inject,\r\n  OnInit,\r\n  ViewChild,\r\n} from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from \"@angular/material/dialog\";\r\nimport { ApiService } from \"app/shared/services/api.service\";\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\r\nimport { DataService } from \"app/shared/services/data.service\";\r\nimport { LocalStoreService } from \"app/shared/services/local-store.service\";\r\nimport { AuditLogComponent } from \"app/views/maintenance/audit-log/audit-log.component\";\r\nimport Swal from \"sweetalert2\";\r\n@Component({\r\n  selector: \"app-cutomer-category-create\",\r\n  templateUrl: \"./cutomer-category-create.component.html\",\r\n  styleUrls: [\"./cutomer-category-create.component.scss\"],\r\n})\r\nexport class CutomerCategoryCreateComponent implements OnInit {\r\n  @ViewChild(\"auditLog\") auditLog: AuditLogComponent;\r\n  public itemForm: FormGroup;\r\n  cutomerCategoryForm: FormGroup;\r\n  isReadOnly: boolean = true;\r\n  isEdit: boolean = false;\r\n  isView: boolean = true;\r\n  show = false;\r\n  editNow: boolean = false;\r\n  entityIsEdit: boolean;\r\n  id: number;\r\n  isAuditData: boolean = false;\r\n  readorWrite: boolean = true;\r\n  loggedInUser: string;\r\n  auditData: any;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private snack: MatSnackBar,\r\n    private fb: FormBuilder,\r\n    private api: ApiService,\r\n    private route: ActivatedRoute,\r\n    private cdr: ChangeDetectorRef,\r\n    private dataService: DataService,\r\n    private ls: LocalStoreService,\r\n    private apiService: ApiService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.buildItemForm({});\r\n\r\n    this.route.queryParamMap.subscribe((params: any) => {\r\n      this.entityIsEdit = params.get(\"isEdit\");\r\n      if (params.get(\"isEdit\") == \"Yes\") {\r\n        this.isReadOnly = false;\r\n        this.isView = true;\r\n        this.editNow = true;\r\n      } else if (params.get(\"isEdit\") == \"No\") {\r\n        this.isReadOnly = true;\r\n        this.isView = true;\r\n        this.editNow = false;\r\n      } else if (params.get(\"isEdit\") == \"false\") {\r\n        this.isReadOnly = false;\r\n        this.isView = false;\r\n        this.editNow = false;\r\n      } else if (params.get(\"isEdit\") == null) {\r\n        this.isView = false;\r\n      }\r\n      if (params.get(\"id\")) {\r\n        this.isEdit = true;\r\n        this.id = params.get(\"id\");\r\n        this.api.editEntityById(params.get(\"id\")).subscribe((resp) => {\r\n          this.buildItemForm(resp);\r\n        });\r\n        this.api\r\n          .getCustomerCategoryById(params.get(\"id\"))\r\n          .subscribe((resp: any) => {\r\n            this.buildItemForm(resp);\r\n            if (resp.authStatus == \"U\") {\r\n              resp.authDate = \"\";\r\n              resp.authBy = \"\";\r\n            }\r\n            this.auditData = resp;\r\n            this.isAuditData = true;\r\n            this.dataService.setAuditLogData(this.auditData);\r\n          });\r\n      } else {\r\n        this.readorWrite = false;\r\n        this.buildItemForm({});\r\n      }\r\n    });\r\n\r\n    this.loggedInUser = this.ls.getItem(\"ICUST_USER\").userName;\r\n  }\r\n\r\n  buildItemForm(item) {\r\n    this.itemForm = this.fb.group({\r\n      id: [item.id || \"\"],\r\n      authStatus: [item.authStatus || \"\"],\r\n      categoryCode: [item.categoryCode || \"\", [Validators.required]],\r\n      categoryDescription: [\r\n        item.categoryDescription || \"\",\r\n        [Validators.required],\r\n      ],\r\n      categoryName: [item.categoryName || \"\", [Validators.required]],\r\n      isActive: [item.isActive || true],\r\n      oneTimeAuth: [item.oneTimeAuth || \"\"],\r\n      recordStatus: [item.recordStatus || \"\"],\r\n      version: [item.version || \"\"],\r\n      createdDate: [item.createdDate || \"\"],\r\n      lastModifiedDate: [item.lastModifiedDate || \"\"],\r\n      authBy: [item.authBy || \"\"],\r\n      authDate: [item.authDate || \"\"],\r\n      modifiedBy: [item.modifiedBy || \"\"],\r\n      createdBy: [item.createdBy || \"\"],\r\n      noOfModification: [item.noOfModification || \"\"],\r\n    });\r\n  }\r\n\r\n  goBack() {\r\n    this.router.navigate([`/maintenance/main/customerCategory`]);\r\n  }\r\n  deleteRecord(operation) {\r\n    Swal.fire({\r\n      text:\r\n        \"You are trying to \" +\r\n        operation +\r\n        \" record.\" +\r\n        \" Do you want to proceed?\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      cancelButtonText: \"NO\",\r\n      confirmButtonText: \"YES\",\r\n      icon: \"info\",\r\n    }).then((result) => {\r\n      if (result.isConfirmed == true) {\r\n        this.apiService.deleteCustomerCategory(this.auditData.id).subscribe(\r\n          (data) => {\r\n            this.router.navigate([`/maintenance/main/customerCategory`]);\r\n          },\r\n          (err) => {\r\n            if (err.status == 200) {\r\n              this.snack.open(\"Record Deleted Successfully\", \"OK\", {\r\n                duration: 4000,\r\n                verticalPosition: \"top\",\r\n                horizontalPosition: \"right\",\r\n              });\r\n            }\r\n            this.router.navigate([`/maintenance/main/customerCategory`]);\r\n          }\r\n        );\r\n      }\r\n    });\r\n  }\r\n  editRecord() {\r\n    this.readorWrite = false;\r\n  }\r\n\r\n  updateRecord(operation) {\r\n    Swal.fire({\r\n      text:\r\n        \"You are trying to \" +\r\n        operation +\r\n        \" record.\" +\r\n        \" Do you want to proceed?\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      cancelButtonText: \"NO\",\r\n      confirmButtonText: \"YES\",\r\n      icon: \"info\",\r\n    }).then((result) => {\r\n      if (result.isConfirmed == true) {\r\n        let payload: any = {};\r\n        payload.id = this.id;\r\n        payload.operation = operation;\r\n        payload.loggedInUser = this.loggedInUser;\r\n        this.apiService\r\n          .getAuditLogsFortillvaultMaster(payload)\r\n          .subscribe((data) => {\r\n            if (data.authStatus == \"U\") {\r\n              data.authDate = \"\";\r\n              data.authBy = \"\";\r\n            }\r\n\r\n            this.auditData = data;\r\n            this.dataService.setAuditLogData(this.auditData);\r\n            this.isAuditData = true;\r\n            this.dataService.sendClickEvent();\r\n            let message = \"\";\r\n            switch (operation) {\r\n              case \"open\":\r\n                message = \"opened\";\r\n                break;\r\n              case \"close\":\r\n                message = \"closed\";\r\n                break;\r\n              case \"auth\":\r\n                message = \"authorized\";\r\n                break;\r\n              default:\r\n                break;\r\n            }\r\n            this.snack.open(`Record ${message} successfully!'`, \"OK\", {\r\n              duration: 2000,\r\n              verticalPosition: \"top\",\r\n              horizontalPosition: \"right\",\r\n            });\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n  submit() {\r\n    if (this.itemForm.invalid) {\r\n      return;\r\n    } else {\r\n      this.itemForm.value.loggedInUser = this.loggedInUser;\r\n      this.api.saveCustomerCategory(this.itemForm.value).subscribe((data) => {\r\n        if (data != null && this.isEdit == true) {\r\n          this.router\r\n            .navigate([`/maintenance/main/customerCategory`])\r\n            .then((_) => {\r\n              this.snack.open(\"Data Updated!\", \"OK\", {\r\n                duration: 4000,\r\n                verticalPosition: \"top\",\r\n                horizontalPosition: \"right\",\r\n              });\r\n            });\r\n          this.cdr.markForCheck();\r\n        } else if (data != null || this.isEdit == true) {\r\n          this.router\r\n            .navigate([`/maintenance/main/customerCategory`])\r\n            .then((_) => {\r\n              this.snack.open(\"Data Saved!\", \"OK\", {\r\n                duration: 4000,\r\n                verticalPosition: \"top\",\r\n                horizontalPosition: \"right\",\r\n              });\r\n            });\r\n          this.cdr.markForCheck();\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  _keyPress(event: any) {\r\n    const pattern = /[0-9]/;\r\n    let inputChar = String.fromCharCode(event.charCode);\r\n    if (!pattern.test(inputChar)) {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n  keyPressAlphanumeric(event) {\r\n    var inp = String.fromCharCode(event.keyCode);\r\n    if (/[0-9a-zA-Z]/.test(inp)) {\r\n      return true;\r\n    } else {\r\n      event.preventDefault();\r\n      return false;\r\n    }\r\n  }\r\n  dataByBank(index, bankC) {\r\n    return bankC.bankCode;\r\n  }\r\n}\r\n","<h1 class=\"main-head\"><small class=\"small-head\">Home > Maintenance Summary > Customer Category Maintenance > <span\r\n            *ngIf=\"!isEdit\">Add</span> <span *ngIf=\"isEdit\">Edit</span> Customer Category </small>\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"mt-16\">\r\n        <button mat-icon-button (click)=\"goBack()\">\r\n            <mat-icon>arrow_back</mat-icon>\r\n        </button>\r\n        <h1 *ngIf=\"!isEdit\" class=\"add-text\">Add Customer Category </h1>\r\n        <h1 *ngIf=\"isEdit\" class=\"add-text\">Edit Customer Category </h1>\r\n    </div>\r\n    <mat-card>\r\n        <mat-card-content>\r\n            <form [formGroup]=\"itemForm\" (ngSubmit)=\"submit()\">\r\n                <div fxLayout=\"row wrap\" fxLayout.lt-sm=\"column\">\r\n                    <div fxLayoutAlign=\"space-between center\" fxLayoutGap=\"15px\">\r\n                        <div fxFlex=\"30\" class=\"pr-16\" *ngIf=\"!readorWrite\">\r\n                            <mat-label>Category Code</mat-label>\r\n                            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                                <input matInput name=\"entity\" formControlName=\"categoryCode\"\r\n                                    placeholder=\"Category Code\" />\r\n\r\n                                <mat-error\r\n                                    *ngIf=\"itemForm?.get('categoryCode').touched && !itemForm?.get('categoryCode').valid\">\r\n                                    Category Code is Required\r\n                                </mat-error>\r\n                            </mat-form-field>\r\n                        </div>\r\n                        <div fxFlex=\"30\" class=\"pr-16\" *ngIf=\"readorWrite\">\r\n                            <mat-label>Category Code</mat-label>\r\n                            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                                <input matInput [readonly]=\"readorWrite\" name=\"categoryCode\"\r\n                                    formControlName=\"categoryCode\">\r\n                            </mat-form-field>\r\n                        </div>\r\n\r\n                        <div fxFlex=\"30\" class=\"pr-16\">\r\n\r\n                            <mat-label>Category Name</mat-label>\r\n                            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                                <input matInput name=\"categoryName\" formControlName=\"categoryName\"\r\n                                    placeholder=\"Category Name\" />\r\n\r\n                                <mat-error\r\n                                    *ngIf=\"itemForm?.get('categoryName').touched && !itemForm?.get('categoryName').valid\">\r\n                                    Category Name is Required\r\n                                </mat-error>\r\n                            </mat-form-field>\r\n                        </div>\r\n                        <div fxFlex=\"30\" class=\"pr-16\">\r\n                            <mat-label>Category Description</mat-label>\r\n                            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                                <input matInput [readonly]=\"readorWrite\" name=\"categoryDescription\"\r\n                                    formControlName=\"categoryDescription\" placeholder=\"Category Description\">\r\n                            </mat-form-field>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div fxFlex=\"100\" class=\"mt-16\" fxLayoutAlign=\"end center\" fxLayoutGap=\"10px\">\r\n                        <div>\r\n                            <button mat-raised-button color=\"primary\" [disabled]=\"!(itemForm.valid && itemForm.dirty)\"\r\n                                *ngIf=\"!isEdit\">Save\r\n                            </button>\r\n                        </div>\r\n                        <div [hidden]=\"readorWrite\">\r\n                            <button mat-raised-button color=\"primary\" [disabled]=\"!(itemForm.valid && itemForm.dirty)\"\r\n                                *ngIf=\"isEdit\">Save\r\n                            </button>\r\n                        </div>\r\n                        <div [hidden]=\"!readorWrite || auditData?.recordStatus == 'Close'\">\r\n                            <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\"\r\n                                (click)=\"editRecord()\">\r\n                                Edit\r\n                            </button>&nbsp;&nbsp;\r\n                        </div>\r\n                        <div *ngIf=\"auditData?.authStatus == 'Unauthorized' && readorWrite\" [hidden]=\"!readorWrite\">\r\n                            <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\"\r\n                                (click)=\"updateRecord('auth')\">\r\n                                Authorize\r\n                            </button>&nbsp;&nbsp;\r\n                        </div>\r\n                        <div *ngIf=\"auditData?.recordStatus == 'Close' && auditData?.oneTimeAuth != 'No'\"\r\n                            [hidden]=\"!readorWrite\">\r\n                            <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\"\r\n                                (click)=\"updateRecord('open')\">\r\n                                Reopen\r\n                            </button>&nbsp;&nbsp;\r\n                        </div>\r\n                        <div *ngIf=\"auditData?.recordStatus == 'Open' && auditData?.oneTimeAuth != 'No'\"\r\n                            [hidden]=\"!readorWrite\">\r\n                            <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\"\r\n                                (click)=\"updateRecord('close')\">\r\n                                Close\r\n                            </button>&nbsp;&nbsp;\r\n                        </div>\r\n                        <div *ngIf=\"auditData?.oneTimeAuth == 'No'\" [hidden]=\"!readorWrite\">\r\n                            <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\"\r\n                                (click)=\"deleteRecord('delete')\">\r\n                                Delete\r\n                            </button> &nbsp;&nbsp;\r\n                        </div>\r\n\r\n                        <button mat-raised-button color=\"warn\" type=\"button\" (click)=\"goBack()\">\r\n                            Exit\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </mat-card-content>\r\n    </mat-card>\r\n\r\n    <div class=\"mt-32\">\r\n        <app-audit-log *ngIf=\"isAuditData\" #auditLog></app-audit-log>\r\n    </div>\r\n","import { AppConfirmService } from 'app/shared/services/app-confirm/app-confirm.service';\r\nimport { Component, OnInit, ChangeDetectorRef } from '@angular/core';\r\nimport { FormGroup, FormArray, FormControl, FormBuilder, Validators } from '@angular/forms';\r\nimport { MatCheckboxChange } from '@angular/material/checkbox';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport * as moment from 'moment';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { THIS_EXPR } from '@angular/compiler/src/output/output_ast';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { SendHolidayScreenService } from 'app/shared/services/send-holiday-screen.service';\r\n\r\n@Component({\r\n  selector: 'app-common-holiday',\r\n  templateUrl: './common-holiday.component.html',\r\n  styleUrls: ['./common-holiday.component.scss']\r\n})\r\nexport class CommonHolidayComponent implements OnInit {\r\n  calenderArr: any[];\r\n  selectedItem: boolean = false;\r\n  selectedItemRow: boolean = false;\r\n  disabled: boolean = true;\r\n  monthArr: any = [\r\n    ['January', 'February', 'March'],\r\n    ['April', 'May', 'June'],\r\n    ['July', 'August', 'September'],\r\n    ['October', 'November', 'December'],\r\n  ];\r\n  newYearArrayany: any[] = [];\r\n  months: string[] = [\r\n    'January',\r\n    'February',\r\n    'March',\r\n    'April',\r\n    'May',\r\n    'June',\r\n    'July',\r\n    'August',\r\n    'September',\r\n    'October',\r\n    'November',\r\n    'December',\r\n  ];\r\n  weekdaysInWords: string[] = [\r\n    'Sunday',\r\n    'Monday',\r\n    'Tuesday',\r\n    'Wednsday',\r\n    'Thursday',\r\n    'Friday',\r\n    'Saturday',\r\n  ];\r\n  weekdays:string[] = [\r\n    'S',\r\n    'M',\r\n    'T',\r\n    'W',\r\n    'T',\r\n    'F',\r\n    'S',\r\n  ];\r\n  monthEnds = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\r\n  viewDate: Date = new Date();\r\n  yearlyCalendarArr = [];\r\n  currentMonth: any;\r\n  currentMonthDate: any;\r\n  calendarDate: any[] = [];\r\n  year: number;\r\n  daysFinalArr: any[] = [];\r\n  calendarArrFinal: any[] = [];\r\n  confirmRes: boolean = false;\r\n  daysFinalArrNew: any[] = [];\r\n  calendarArrFinalNew: any[] = [];\r\n  dynamicObject: { value: string; disabled: boolean; };\r\n  selected = new FormControl('', [Validators.required]);\r\n  yearArr: string[] = ['2022', '2021', '2020', '2019', '2018', '2017'];\r\n  disableSave:boolean=true;\r\n  isEdit: boolean=false;\r\n  count: number =0;\r\n  screen: any;\r\n  constructor(\r\n    private router: Router, private snack: MatSnackBar, private fb: FormBuilder,private ls: LocalStoreService,\r\n    private confirmService: AppConfirmService, private cdr: ChangeDetectorRef,private apiService: ApiService,\r\n    private screenService: SendHolidayScreenService,\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n   this.screen=this.ls.getItem('SCREEN_NAME')\r\n    // this.fillInYear(2022);\r\n  }\r\n\r\n  fillInMonth(year: number, month: string, dayAmount: number) {\r\n    this.year = year;\r\n    let monthNumsArr = [];\r\n    let daysArr = [];\r\n    let daysArrNew = [];\r\n    let daysFinalArr = [];\r\n    let daysFinalArrNew = [];\r\n    let endOffSet = 42 - dayAmount;\r\n    let date = new Date(month + '1, ' + year);\r\n    let dateOffSet = date.getDay();\r\n\r\n    for (let i = 0; i < dayAmount + endOffSet; i++) {\r\n      if (i < dateOffSet) {\r\n        monthNumsArr.push(' ');\r\n        daysArrNew.push({ value: '', disabled: false });\r\n        daysArr.push('');\r\n      } else if (i > dayAmount + dateOffSet - 1) {\r\n        monthNumsArr.push(' ');\r\n        daysArrNew.push({ value: '', disabled: false });\r\n        daysArr.push('');\r\n      } else {\r\n        monthNumsArr.push((i + 1 - dateOffSet).toString());\r\n        daysArr.push((i + 1 - dateOffSet).toString());\r\n        daysArrNew.push({ value: (i + 1 - dateOffSet).toString(), disabled: false });\r\n      }\r\n\r\n      if (((8 + i) % 7 == 0)) {\r\n        daysFinalArr.push(daysArr);\r\n        daysFinalArrNew.push(daysArrNew);\r\n        daysArr = [];\r\n        daysArrNew = [];\r\n      }\r\n\r\n    }\r\n\r\n    // monthNumsArr.forEach((V, K) => {\r\n    //   if ((K % 7 == 0) || ((8 + K) % 7 == 0)) {\r\n    //     if (V != ' ') {\r\n    //       let dateValue = (+V);\r\n    //       var d = new Date(year, date.getMonth(), dateValue);\r\n    //       var responseDate = moment(d).format('YYYY-MM-DD');\r\n    //       this.calendarDate.push(responseDate);\r\n    //     }\r\n    //   }\r\n    // });\r\n    // this.daysFinalArr.push(daysFinalArr);\r\n    this.daysFinalArrNew.push(daysFinalArrNew);\r\n\r\n    return monthNumsArr;\r\n  }\r\n\r\n\r\n  fillInYear(year: number) {\r\n    this.yearlyCalendarArr = [];\r\n    this.calenderArr = [];\r\n    this.daysFinalArr = [];\r\n    this.daysFinalArrNew = [];\r\n    this.newYearArrayany = [];\r\n    this.calendarArrFinal = [];\r\n    this.calendarArrFinalNew = [];\r\n    for (let i = 0; i < 12; i++) {\r\n      this.yearlyCalendarArr.push(\r\n        this.fillInMonth(year, this.months[i], this.monthEnds[i])\r\n      );\r\n\r\n      if ((i + 1) % 3 == 0) {\r\n        this.newYearArrayany.push(this.yearlyCalendarArr);\r\n        this.calenderArr = this.daysFinalArr;\r\n        this.calendarArrFinal.push(this.calenderArr);\r\n        this.calendarArrFinalNew.push(this.daysFinalArrNew);\r\n        this.calenderArr = [];\r\n        this.daysFinalArr = [];\r\n        this.daysFinalArrNew = [];\r\n        this.yearlyCalendarArr = [];\r\n      }\r\n    }\r\n  }\r\n\r\n  assignFormValue(event) {\r\n    this.currentMonth = this.months[this.viewDate.getMonth()];\r\n    this.currentMonthDate = this.viewDate.getFullYear();\r\n    this.fillInYear(event.value);\r\n    console.log(this.calendarArrFinalNew)\r\n    for(let i=0; i<=this.calendarArrFinalNew.length-1;i++){\r\n       for(let j=i;j<=this.calendarArrFinalNew[i].length;j++){\r\n        for(let k=j;k<=this.calendarArrFinalNew[i][j].length;k++){\r\n          this.checks[i][j][k].value=false\r\n        }\r\n       }\r\n    }\r\n  }\r\n\r\n\r\n  goBack() {\r\n    if(this.screen==='Branch'){\r\n      this.router.navigate([\"/maintenance/main/holiday/BranchHoliday\"]);\r\n    }else \r\n    this.router.navigate([\"/maintenance/main/holiday/currencyholiday\"]);\r\n  }\r\n\r\n  // For example, an array of choices\r\n  public checks: Array<any> = [\r\n    [\r\n      [{ description: 'col1', value: false, disable: false },\r\n      { description: 'col2', value: false, disable: false },\r\n      { description: 'col3', value: false, disable: false },\r\n      { description: 'col4', value: false, disable: false },\r\n      { description: 'col5', value: false, disable: false },\r\n      { description: 'col6', value: false, disable: false },\r\n      { description: 'col7', value: false, disable: false }],\r\n      [{ description: 'col1', value: false, disable: false },\r\n      { description: 'col2', value: false, disable: false },\r\n      { description: 'col3', value: false, disable: false },\r\n      { description: 'col4', value: false, disable: false },\r\n      { description: 'col5', value: false, disable: false },\r\n      { description: 'col6', value: false, disable: false },\r\n      { description: 'col7', value: false, disable: false }],\r\n      [{ description: 'col1', value: false, disable: false },\r\n      { description: 'col2', value: false, disable: false },\r\n      { description: 'col3', value: false, disable: false },\r\n      { description: 'col4', value: false, disable: false },\r\n      { description: 'col5', value: false, disable: false },\r\n      { description: 'col6', value: false, disable: false },\r\n      { description: 'col7', value: false, disable: false }]\r\n    ],\r\n    [\r\n      [{ description: 'col1', value: false, disable: false },\r\n      { description: 'col2', value: false, disable: false },\r\n      { description: 'col3', value: false, disable: false },\r\n      { description: 'col4', value: false, disable: false },\r\n      { description: 'col5', value: false, disable: false },\r\n      { description: 'col6', value: false, disable: false },\r\n      { description: 'col7', value: false, disable: false }],\r\n      [{ description: 'col1', value: false, disable: false },\r\n      { description: 'col2', value: false, disable: false },\r\n      { description: 'col3', value: false, disable: false },\r\n      { description: 'col4', value: false, disable: false },\r\n      { description: 'col5', value: false, disable: false },\r\n      { description: 'col6', value: false, disable: false },\r\n      { description: 'col7', value: false, disable: false }],\r\n      [{ description: 'col1', value: false, disable: false },\r\n      { description: 'col2', value: false, disable: false },\r\n      { description: 'col3', value: false, disable: false },\r\n      { description: 'col4', value: false, disable: false },\r\n      { description: 'col5', value: false, disable: false },\r\n      { description: 'col6', value: false, disable: false },\r\n      { description: 'col7', value: false, disable: false }]\r\n    ],\r\n    [\r\n      [{ description: 'col1', value: false, disable: false },\r\n      { description: 'col2', value: false, disable: false },\r\n      { description: 'col3', value: false, disable: false },\r\n      { description: 'col4', value: false, disable: false },\r\n      { description: 'col5', value: false, disable: false },\r\n      { description: 'col6', value: false, disable: false },\r\n      { description: 'col7', value: false, disable: false }],\r\n      [{ description: 'col1', value: false, disable: false },\r\n      { description: 'col2', value: false, disable: false },\r\n      { description: 'col3', value: false, disable: false },\r\n      { description: 'col4', value: false, disable: false },\r\n      { description: 'col5', value: false, disable: false },\r\n      { description: 'col6', value: false, disable: false },\r\n      { description: 'col7', value: false, disable: false }],\r\n      [{ description: 'col1', value: false, disable: false },\r\n      { description: 'col2', value: false, disable: false },\r\n      { description: 'col3', value: false, disable: false },\r\n      { description: 'col4', value: false, disable: false },\r\n      { description: 'col5', value: false, disable: false },\r\n      { description: 'col6', value: false, disable: false },\r\n      { description: 'col7', value: false, disable: false }]\r\n    ],\r\n    [\r\n      [{ description: 'col1', value: false, disable: false },\r\n      { description: 'col2', value: false, disable: false },\r\n      { description: 'col3', value: false, disable: false },\r\n      { description: 'col4', value: false, disable: false },\r\n      { description: 'col5', value: false, disable: false },\r\n      { description: 'col6', value: false, disable: false },\r\n      { description: 'col7', value: false, disable: false }],\r\n      [{ description: 'col1', value: false, disable: false },\r\n      { description: 'col2', value: false, disable: false },\r\n      { description: 'col3', value: false, disable: false },\r\n      { description: 'col4', value: false, disable: false },\r\n      { description: 'col5', value: false, disable: false },\r\n      { description: 'col6', value: false, disable: false },\r\n      { description: 'col7', value: false, disable: false }],\r\n      [{ description: 'col1', value: false, disable: false },\r\n      { description: 'col2', value: false, disable: false },\r\n      { description: 'col3', value: false, disable: false },\r\n      { description: 'col4', value: false, disable: false },\r\n      { description: 'col5', value: false, disable: false },\r\n      { description: 'col6', value: false, disable: false },\r\n      { description: 'col7', value: false, disable: false }]\r\n    ]];\r\n\r\n  public rowChecks: Array<any> = [\r\n    [\r\n      [{ description: 'row1', value: false, disable: false },\r\n      { description: 'row2', value: false, disable: false },\r\n      { description: 'row3', value: false, disable: false },\r\n      { description: 'row4', value: false, disable: false },\r\n      { description: 'row5', value: false, disable: false },\r\n      { description: 'row6', value: false, disable: false }],\r\n      [{ description: 'row1', value: false, disable: false },\r\n      { description: 'row2', value: false, disable: false },\r\n      { description: 'row3', value: false, disable: false },\r\n      { description: 'row4', value: false, disable: false },\r\n      { description: 'row5', value: false, disable: false },\r\n      { description: 'row6', value: false, disable: false }],\r\n      [{ description: 'row1', value: false, disable: false },\r\n      { description: 'row2', value: false, disable: false },\r\n      { description: 'row3', value: false, disable: false },\r\n      { description: 'row4', value: false, disable: false },\r\n      { description: 'row5', value: false, disable: false },\r\n      { description: 'row6', value: false, disable: false }]],\r\n    [\r\n      [{ description: 'row1', value: false, disable: false },\r\n      { description: 'row2', value: false, disable: false },\r\n      { description: 'row3', value: false, disable: false },\r\n      { description: 'row4', value: false, disable: false },\r\n      { description: 'row5', value: false, disable: false },\r\n      { description: 'row6', value: false, disable: false }],\r\n      [{ description: 'row1', value: false, disable: false },\r\n      { description: 'row2', value: false, disable: false },\r\n      { description: 'row3', value: false, disable: false },\r\n      { description: 'row4', value: false, disable: false },\r\n      { description: 'row5', value: false, disable: false },\r\n      { description: 'row6', value: false, disable: false }],\r\n      [{ description: 'row1', value: false, disable: false },\r\n      { description: 'row2', value: false, disable: false },\r\n      { description: 'row3', value: false, disable: false },\r\n      { description: 'row4', value: false, disable: false },\r\n      { description: 'row5', value: false, disable: false },\r\n      { description: 'row6', value: false, disable: false }]],\r\n    [\r\n      [{ description: 'row1', value: false, disable: false },\r\n      { description: 'row2', value: false, disable: false },\r\n      { description: 'row3', value: false, disable: false },\r\n      { description: 'row4', value: false, disable: false },\r\n      { description: 'row5', value: false, disable: false },\r\n      { description: 'row6', value: false, disable: false }],\r\n      [{ description: 'row1', value: false, disable: false },\r\n      { description: 'row2', value: false, disable: false },\r\n      { description: 'row3', value: false, disable: false },\r\n      { description: 'row4', value: false, disable: false },\r\n      { description: 'row5', value: false, disable: false },\r\n      { description: 'row6', value: false, disable: false }],\r\n      [{ description: 'row1', value: false, disable: false },\r\n      { description: 'row2', value: false, disable: false },\r\n      { description: 'row3', value: false, disable: false },\r\n      { description: 'row4', value: false, disable: false },\r\n      { description: 'row5', value: false, disable: false },\r\n      { description: 'row6', value: false, disable: false }]],\r\n    [\r\n      [{ description: 'row1', value: false, disable: false },\r\n      { description: 'row2', value: false, disable: false },\r\n      { description: 'row3', value: false, disable: false },\r\n      { description: 'row4', value: false, disable: false },\r\n      { description: 'row5', value: false, disable: false },\r\n      { description: 'row6', value: false, disable: false }],\r\n      [{ description: 'row1', value: false, disable: false },\r\n      { description: 'row2', value: false, disable: false },\r\n      { description: 'row3', value: false, disable: false },\r\n      { description: 'row4', value: false, disable: false },\r\n      { description: 'row5', value: false, disable: false },\r\n      { description: 'row6', value: false, disable: false }],\r\n      [{ description: 'row1', value: false, disable: false },\r\n      { description: 'row2', value: false, disable: false },\r\n      { description: 'row3', value: false, disable: false },\r\n      { description: 'row4', value: false, disable: false },\r\n      { description: 'row5', value: false, disable: false },\r\n      { description: 'row6', value: false, disable: false }]]]\r\n\r\n  onCheckChange(event: MatCheckboxChange, i1, i2, col, row,year) {\r\n    this.checks[i1][i2][col].value = event.checked;\r\n    console.log(event);        \r\n    const index = this.rowChecks[i1][i2].findIndex(x => x.value == true);\r\n      if (index == (-1) && event.checked) {\r\n        // this.confirmService\r\n        //   .confirm({ message: `Is row selection required ? ` })\r\n        //   .subscribe((res) => {\r\n            // if (res) {\r\n            //   this.snack.open('Select Row To Add Date', 'OK');\r\n            // } else {\r\n              if (this.checks[i1][i2][col].value) {\r\n                this.count++;\r\n                this.buildCalenderArr(this.calendarArrFinalNew[i1][i2], this.monthArr[i1][i2], year, col,\r\n                  this.checks[i1][i2][col].value, this.rowChecks[i1][i2][row].value, row,i1,i2);\r\n               // this.checks[i1][i2][col].disable = true;\r\n                this.cdr.detectChanges();\r\n              }\r\n            // }\r\n          // });\r\n      } else if (index != (-1 && this.checks[i1][i2][col].value)) {\r\n        this.count--;\r\n  \r\n        for (let rowIdx = 0; rowIdx < this.rowChecks[i1][i2].length; rowIdx++) {\r\n          const isRowChecked = this.rowChecks[i1][i2][rowIdx];\r\n  \r\n          if (isRowChecked.value) {\r\n           \r\n            this.buildCalenderArr(this.calendarArrFinalNew[i1][i2], this.monthArr[i1][i2], year, col,\r\n              this.checks[i1][i2][col].value, isRowChecked, rowIdx,i1,i2);\r\n          }else{\r\n            this.buildCalenderArr(this.calendarArrFinalNew[i1][i2], this.monthArr[i1][i2], year, col,\r\n              this.checks[i1][i2][col].value, isRowChecked, rowIdx,i1,i2);\r\n          }\r\n        }\r\n      } else {\r\n        this.buildCalenderArr(this.calendarArrFinalNew[i1][i2], this.monthArr[i1][i2], year, col,\r\n          this.checks[i1][i2][col].value, this.rowChecks[i1][i2][row].value, row,i1,i2);\r\n      }\r\n    \r\nif(this.count==0){\r\n  this.disableSave=true;\r\n}\r\nelse{\r\n  this.disableSave=false;\r\n}\r\n\r\n\r\n  }\r\n  buildCalenderArr(calendar, month, year, colIdx, colChecked, rowChecked, rowIdx,i1,i2) {\r\n    let date = new Date(month + '1, ' + year);\r\n    this.disableSave=false;\r\n    for (let index = 0; index < calendar.length; index++) {\r\n      const element = calendar[index];\r\n      if (element[colIdx].value != '' && element[colIdx].value != ' ') {\r\n        let dateValue = (+element[colIdx].value);\r\n        var d = new Date(year, date.getMonth(), dateValue);\r\n        var responseDate = moment(d).format('YYYY-MM-DD');\r\n        if (colChecked && rowChecked) {\r\n          if (index == rowIdx) {\r\n            this.calendarDate.push(responseDate);\r\n          }\r\n        } else if (colChecked && !rowChecked) {\r\n          this.calendarArrFinalNew[i1][i2][index][colIdx].disabled=true; \r\n          this.cdr.detectChanges();\r\n          this.calendarDate.push(responseDate);\r\n        } else {\r\n          this.calendarArrFinalNew[i1][i2][index][colIdx].disabled=false;                  \r\n          this.cdr.detectChanges();\r\n          this.calendarDate.splice(this.calendarDate.indexOf(responseDate), 1);\r\n        }\r\n\r\n      }\r\n    }\r\n    console.log(this.calendarDate);\r\n  }\r\n  showOptionsRow(event: MatCheckboxChange, i1, i2, row,year) {\r\n    this.rowChecks[i1][i2][row].value = event.checked;\r\n    const index = this.checks[i1][i2].findIndex(x => x.value == true);\r\n    if (index != -1) {\r\n      for (let colIdx = 0; colIdx < this.checks.length; colIdx++) {\r\n        const element = this.checks[colIdx];\r\n      }\r\n    } else {\r\n      this.snack.open('Select Column To Add Date', 'OK');\r\n    }\r\n\r\n  }\r\n\r\n  onDateSelection(date,i1, i2, year){\r\n    console.log(date,i1, i2, year);\r\n    let month = this.monthArr[i1][i2];\r\n    let dateSample = new Date(month + '1, ' + year);\r\n    var d = new Date(year, dateSample.getMonth(), date);\r\n    var responseDate = moment(d).format('YYYY-MM-DD');\r\n    if(this.calendarDate.includes(responseDate)){\r\n      var index = this.calendarDate.indexOf(responseDate);\r\n      if (index !== -1) {\r\n        this.calendarDate.splice(index, 1);\r\n      }\r\n    }\r\n    else{\r\n      this.calendarDate.push(responseDate);\r\n    }\r\n    if(this.calendarDate.length > 0){\r\n      this.disableSave = false;\r\n    }\r\n    console.log(this.calendarDate);\r\n  }\r\n\r\n  checkDateAlreadySelected(date,i1, i2, year) : boolean{\r\n    let month = this.monthArr[i1][i2];\r\n    let dateSample = new Date(month + '1, ' + year);\r\n    var d = new Date(year, dateSample.getMonth(), date);\r\n    var responseDate = moment(d).format('YYYY-MM-DD');\r\n    if(this.calendarDate.includes(responseDate)){\r\n       return true;\r\n    }\r\n    else{\r\n      return false;\r\n    }\r\n  }\r\n\r\n  saveHoliday(year) {\r\n    this.isEdit=false;\r\n    let details: any[] = [];\r\n    this.calendarDate.forEach((v, k) => {\r\n      let payload = {\r\n        entityCode: 'common',\r\n        bankCode: 'common',\r\n        branchCode: 'common',\r\n        calenderYear: year,\r\n        calenderDate: v,\r\n        description:'common'\r\n      }\r\n      details.push(payload);\r\n    });\r\n\r\n    this.apiService.updateBranchHolidayDetails(details,this.isEdit)\r\n    .subscribe(data => {\r\n      if (data != null) {\r\n        this.disableSave=true;\r\n        this.snack.open('Data Saved' + ' !', 'OK', {\r\n          duration: 4000,\r\n          verticalPosition: 'top',\r\n          horizontalPosition: 'right'\r\n        });\r\n        // this._location.back();\r\n        this.cdr.markForCheck();\r\n      }\r\n\r\n    },error=>{\r\n      this.disableSave=true;\r\n      console.log('error :: ',error);\r\n      this.snack.open(`${error.error}` + ' !', 'OK', {\r\n        duration: 4000,\r\n        verticalPosition: 'top',\r\n        horizontalPosition: 'right',\r\n        panelClass: 'snackbar-error'\r\n      });\r\n    \r\n    });\r\n\r\n\r\n  }\r\n\r\n  dataBythirdCalenderArray(index,thirdCalenderArray)\r\n  {\r\n    return thirdCalenderArray.disabled;\r\n  }\r\n\r\n}\r\n"," <h1 class=\"main-head\"><small class=\"small-head\">Home > Maintenance Summary >\r\n         Holiday Maintenance > {{screen}} Holiday > {{screen}} Common Holiday Maintenance</small></h1>\r\n <div fxLayoutAlign=\"center\">\r\n\r\n </div>\r\n <div fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"mt-24\">\r\n     <button mat-icon-button (click)=\"goBack()\">\r\n         <mat-icon>arrow_back</mat-icon>\r\n     </button>\r\n     <span class=\"text-large\">\r\n         Add Common Holidays\r\n     </span>\r\n\r\n\r\n </div>\r\n\r\n <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\" fxLayoutGap=\"15px\">\r\n     <div class=\"pr-16\" fxFlex=\"20%\">\r\n         <mat-hint>year</mat-hint>\r\n         <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n             <mat-select [formControl]=\"selected\" (selectionChange)=\"assignFormValue($event)\" required>\r\n                 <mat-option *ngFor=\"let year of yearArr\" [value]=\"year\">\r\n                     {{year}}\r\n                 </mat-option>\r\n             </mat-select>\r\n         </mat-form-field>\r\n\r\n     </div>\r\n\r\n     <div>\r\n      <span fxFlex></span>\r\n      <button mat-flat-button color=\"primary\" (click)=\"saveHoliday(selected.value)\" \r\n      [disabled]=\"disableSave\"\r\n        class=\"mr-38\">SAVE</button>\r\n      <!-- <button mat-button color=\"warn\" type=\"button\" (click)=\"goBack()\">Cancel</button> -->\r\n    </div>\r\n\r\n </div>\r\n\r\n <table *ngFor=\"let calenderArray of calendarArrFinalNew; let i1 = index\">\r\n     <tr>\r\n\r\n         <td *ngFor=\"let firstCalenderArray of calenderArray; let i2 = index\">\r\n             <table>\r\n                 <tr *ngFor=\"let secondCalenderArray of firstCalenderArray; let row = index\">\r\n                     <td *ngFor=\"let thirdCalenderArray of secondCalenderArray; let col = index\">\r\n                         <mat-checkbox *ngIf=\"row==i1 \" [checked]=\"checks[i1][i2][col].value\"\r\n                         class=\"checkbox1\" [disabled]=\"checks[i1][i2][col].disable\"\r\n                             (change)=\"onCheckChange($event,i1,i2,col,row,selected.value)\">\r\n                         </mat-checkbox>\r\n                     </td>\r\n                 </tr>\r\n             </table>\r\n             <table>\r\n                 <caption style=\"background-color: #D4E6F1;padding-left: unset;margin-left: 20px;height: 40px;\r\n          border-radius: 15px;\">\r\n                     <h3 style=\"margin-top: 15px;\">{{monthArr[i1][i2]}}</h3>\r\n                 </caption>\r\n\r\n                 <tbody>\r\n                    <tr>\r\n                        <td *ngFor=\"let weekDay of weekdays; let i4 = index\" class=\"childTd\">\r\n                            <button (click)=\"onDateSelection(weekDay,i1,i2,selected.value)\" mat-button [disabled]=\"thirdCalenderArray?.disabled\"\r\n                                [ngClass]=\"checkDateAlreadySelected(weekDay,i1,i2,selected.value) ? 'primaryColor' : ''\">\r\n                                <h3 style=\"color: #808B96;\">{{weekDay}}</h3>\r\n                            </button>\r\n                        </td>\r\n                    </tr>\r\n                     <tr *ngFor=\"let secondCalenderArray of firstCalenderArray; let i3 = index\">\r\n\r\n                         <!-- <mat-checkbox [checked]=\"rowChecks[i1][i2][i3].value\"\r\n                             (change)=\"showOptionsRow($event,i1,i2,i3,selected.value);\">\r\n                         </mat-checkbox> -->\r\n\r\n                         <td *ngFor=\"let thirdCalenderArray of secondCalenderArray; trackBy:dataBythirdCalenderArray let i4 = index\" class=\"childTd\">\r\n\r\n                             <!-- <div style=\"background-color: primaryColor;\"> -->\r\n                             <button (click)=\"onDateSelection(thirdCalenderArray.value,i1,i2,selected.value) \" mat-button [ngClass]=\"checkDateAlreadySelected(thirdCalenderArray.value,i1,i2,selected.value) ? 'primaryColor' : ''\"\r\n                                 [disabled]=\"thirdCalenderArray?.disabled\" *ngIf=\"i4 % 7 == 0\">\r\n                                 <h5 [ngClass]=\"!thirdCalenderArray?.disabled ? 'h5Red' : 'h5RedDisabled'\">{{ thirdCalenderArray.value}}</h5>\r\n                             </button>\r\n                             <!-- </div> -->\r\n                             <!-- <div> -->\r\n                             <button (click)=\"onDateSelection(thirdCalenderArray.value,i1,i2,selected.value) \" mat-button [disabled]=\"thirdCalenderArray?.disabled\"\r\n                                 [ngClass]=\"checkDateAlreadySelected(thirdCalenderArray.value,i1,i2,selected.value) ? 'primaryColor' : ''\"\r\n                                 *ngIf=\"(8 + i4) % 7 == 0\">\r\n                                 <h5 [ngClass]=\"!thirdCalenderArray?.disabled ? 'h5Red' : 'h5RedDisabled'\">{{ thirdCalenderArray.value}}</h5>\r\n                             </button>\r\n                             <!-- </div> -->\r\n                             <!-- <div *ngIf=\"i4 % 7 != 0 && (8 + i4) % 7 != 0\"> -->\r\n                             <button (click)=\"onDateSelection(thirdCalenderArray.value,i1,i2,selected.value) \" mat-button *ngIf=\"i4 % 7 != 0 && (8 + i4) % 7 != 0\" [disabled]=\"thirdCalenderArray?.disabled\"\r\n                                 [ngClass]=\"checkDateAlreadySelected(thirdCalenderArray.value,i1,i2,selected.value) ? 'primaryColor' : ''\">\r\n                                 <h5 style=\"color:black;\"> {{ thirdCalenderArray.value }}</h5>\r\n                             </button>\r\n                             <!-- <button mat-raised-button color=\"warn\" class=\"button4\" *ngIf=\"\r\n             monthArr[i][j] == currentMonth && d == currentMonthDate\" (click)=\" captureDate(d,monthArr[i][j],year)\">\r\n                           {{ d }}\r\n                       </button> -->\r\n                             <!-- <button mat-button [disabled]=\"thirdCalenderArray.disabled\" class=\"button\" *ngIf=\"\r\n             monthArr[i][j] == currentMonth && d != currentMonthDate\r\n           \">\r\n                           {{thirdCalenderArray }}\r\n                       </button>\r\n                       <button mat-button [disabled]=\"thirdCalenderArray.disabled\" class=\"button\" *ngIf=\"monthArr[i][j] != currentMonth\">\r\n                           {{ thirdCalenderArray}} </button> -->\r\n                             <!-- </div> -->\r\n\r\n\r\n                         </td>\r\n                         <!-- <div *ngIf=\"(secondCalenderArray.length-3) == i3\"> -->\r\n\r\n                         <!-- </div> -->\r\n                     </tr>\r\n                    \r\n\r\n                 </tbody>\r\n\r\n\r\n             </table>\r\n         </td>\r\n     </tr>\r\n </table>\r\n <!-- <div fxFlex></div>\r\n  \r\n  </div> -->","import {\r\n  Component,\r\n  ElementRef,\r\n  OnInit,\r\n  ViewChild,\r\n  OnDestroy,\r\n} from \"@angular/core\";\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { AppConfirmService } from 'app/shared/services/app-confirm/app-confirm.service';\r\nimport { AppLoaderService } from 'app/shared/services/app-loader/app-loader.service';\r\nimport { DataService } from 'app/shared/services/data.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { Subscription } from 'rxjs';\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort, Sort } from \"@angular/material/sort\";\r\nimport { LiveAnnouncer } from \"@angular/cdk/a11y\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { rumangoAnimations } from \"app/shared/animations/rumango-animations\";\r\nimport { DownloadService } from \"app/shared/services/download.service\";\r\nimport { baseDenomData } from \"app/shared/models/base_denom_summary\";\r\n\r\n@Component({\r\n  selector: 'app-base-denomination-summary',\r\n  templateUrl: './base-denomination-summary.component.html',\r\n  styleUrls: ['./base-denomination-summary.component.scss'],\r\n  animations: rumangoAnimations\r\n})\r\nexport class BaseDenominationSummaryComponent implements OnInit {\r\n\r\n  @ViewChild(\"searchVal\") searchVal: ElementRef;\r\n  selectedFilterIndex: number = 0;\r\n  displayedColumns: string[] = ['baseDenominationId', 'denomination', 'currency', 'authStatus', 'recordStatus', 'action'];\r\n\r\n  filterByOption: { key: string; value: string }[] = [\r\n    { key: \"denomination\", value: \"Denomination\" },\r\n    { key: \"baseDenominationId\", value: \"Base Denomination Id\" },\r\n    { key: \"currency\", value: \"Currency\" },\r\n  ];\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n\r\n  dataSource = new MatTableDataSource();\r\n  public userdata: any[];\r\n  public items: any[];\r\n  public getItemSub: Subscription;\r\n  currentUser: string;\r\n  loading: boolean;\r\n  fetchBaseDenomValue: string;\r\n  baseDenomDetails:baseDenomData[] = [];\r\n  constructor(\r\n    private dialog: MatDialog,\r\n    private snack: MatSnackBar,\r\n    private confirmService: AppConfirmService,\r\n    private loader: AppLoaderService,\r\n    private apiService: ApiService,\r\n    private router:Router,\r\n    private ls:LocalStoreService,\r\n    private dataService:DataService,\r\n    private _liveAnnouncer: LiveAnnouncer,\r\n    private downloadService: DownloadService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.currentUser = this.ls.getItem(\"ICUST_USER\");\r\n    // this.loading = true;\r\n    this.getItemSub = this.apiService.getDenomInfoList().subscribe(data => {\r\n      this.items = data;\r\n      this.getItems();\r\n      // this.loading = false;\r\n    })\r\n  }\r\n  ngOnDestroy() {\r\n    if (this.getItemSub) {\r\n      this.getItemSub.unsubscribe()\r\n    }\r\n  }\r\n  getItems() {\r\n    // this.loading = true;\r\n    this.getItemSub = this.apiService.getDenomInfoList()\r\n      .subscribe((data : any) => {\r\n        if(data){\r\n          for (let index = 0; index < data.length; index++) {\r\n            data[index].baseDenominationId = String(data[index].baseDenominationId);\r\n            data[index].denomination = String(data[index].denomination);\r\n            \r\n            if(data[index].authStatus == 'U'){\r\n              data[index].authStatus = 'Unauthorized'\r\n            }\r\n            if(data[index].authStatus == 'A') {\r\n              data[index].authStatus = 'Authorized'\r\n            } \r\n            if(data[index].recordStatus == 'O'){\r\n              data[index].recordStatus = 'Open'\r\n            } \r\n            if(data[index].recordStatus == 'C'){\r\n              data[index].recordStatus = 'Closed'\r\n            }\r\n          }\r\n        }\r\n        this.dataSource = new MatTableDataSource(data);\r\n        this.userdata = data;\r\n        console.log(this.dataSource);\r\n        this.dataSource.paginator = this.paginator;\r\n        this.dataSource.sort = this.sort;\r\n      })\r\n      // this.loading = false;\r\n  }\r\n\r\n   doFilter(filterBy, e) {\r\n    this.filterTable(filterBy);\r\n    this.applyFilter(e);\r\n  }\r\n\r\n  filterTable(filterBy) {\r\n    this.dataSource.filterPredicate = (data: any, filter: string): boolean => {\r\n      return (\r\n        data[filterBy]?.toLocaleLowerCase().toString().includes(filter)\r\n      )\r\n    }\r\n  }\r\n\r\n\r\n  clearFilter() {\r\n    this.dataSource.filter = \"\";\r\n    this.searchVal.nativeElement.value = \"\";\r\n    this.selectedFilterIndex = 0;\r\n  }\r\n\r\n  applyFilter(event: any) {\r\n    let filterValue = (event.target as HTMLInputElement).value;\r\n    !isNaN(event.key)? filterValue = String(filterValue) : '';\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n\r\n  announceSortChange(sortState: Sort) {\r\n    if (sortState.direction) {\r\n      this._liveAnnouncer.announce(`Sorted ${sortState.direction}ending`);\r\n    } else {\r\n      this._liveAnnouncer.announce(\"Sorting cleared\");\r\n    }\r\n  }\r\n  baseDenominationMaintenance(){\r\n    this.downloadService.downloadFiles(\"baseDenominationMaintenance\",this.userdata);\r\n  }\r\n  onFileChange(event) {\r\n    console.log('event', event.path[0].files[0]);\r\n    const file: File = event.path[0].files[0];\r\n    const uploadData = new FormData();\r\n    uploadData.append('screenType', 'baseDenomination');\r\n    uploadData.append('file', file);\r\n    this.apiService.uploadExelFile(uploadData).subscribe((response) => {\r\n      console.log(response);\r\n      this.getItems();\r\n      this.snack.open(`File Uploaded Successfully`, \"OK\", {\r\n        duration: 4000,\r\n        verticalPosition: \"top\",\r\n        horizontalPosition: \"right\",\r\n      });\r\n    });\r\n  }\r\n\r\n\r\n  deleteItem(row) {\r\n    row.baseDenominationId = +row.baseDenominationId;\r\n    row.denomination = +row.denomination;\r\n    this.confirmService.confirm({ message: `Delete ${row.baseDenominationId}?` })\r\n      .subscribe(res => {\r\n        if (res) {\r\n          this.loader.open();\r\n          this.apiService.removeBaseDenominationById(row.baseDenominationId)\r\n            .subscribe((res: any) => {\r\n            }, (err: any) => {\r\n              ''\r\n              if (err.status == 200) {\r\n                this.loader.close();\r\n                this.getItems();\r\n                this.snack.open('Member deleted!', 'OK', { duration: 4000 })\r\n\r\n              }\r\n            })\r\n        }\r\n      })\r\n  }\r\n\r\n  openPopUp(row){\r\n    row.baseDenominationId = +row.baseDenominationId;\r\n    row.denomination = +row.denomination;\r\n    this.getDenomId(row);\r\n    this.router.navigate([`/maintenance/main/baseDenomination/${row.baseDenominationId}`]);\r\n  }\r\n \r\n\r\n  getDenomId(row){\r\n    this.loader.open();\r\n    this.apiService.getDenomInfoById(row.baseDenominationId).subscribe((data : any)=> {\r\n      this.fetchBaseDenomValue=data;\r\n      \r\n      if(this.fetchBaseDenomValue != null){\r\n        localStorage.setItem('fetchBaseDenomValue',JSON.stringify(this.fetchBaseDenomValue));\r\n        }\r\n      });\r\n      this.loader.close();  \r\n  }\r\n\r\n  addNew(){\r\n    this.router.navigate([\"/maintenance/main/baseDenomination/add\"]);\r\n  }\r\n\r\n  goBack(){\r\n    this.router.navigate([\"/maintenance/main\"]);\r\n  }\r\n\r\n  trackByFilter(filter){\r\n    return filter.value;\r\n  }\r\n}\r\n","<h1 class=\"main-head\"><small class=\"small-head\">Home > Maintenance Summary > Base Denomination Maintenance </small>\r\n</h1>\r\n<div fxLayoutAlign=\"center\">\r\n  <mat-spinner *ngIf=\"loading\"></mat-spinner>\r\n</div>\r\n<div fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"mt-24\">\r\n  <button mat-icon-button (click)=\"goBack()\">\r\n    <mat-icon>arrow_back</mat-icon>\r\n  </button>\r\n  <span class=\"text-large\">\r\n    Base Denomination Maintenance\r\n  </span>\r\n  </div>\r\n\r\n<mat-card class=\"mt-32\">\r\n  <div >    \r\n    <table style=\"margin: 18px;\">\r\n      <tr>\r\n        <td>\r\n          <h2>\r\n            Base Denominations \r\n          </h2>\r\n        </td>\r\n      </tr>\r\n      <tr>\r\n        <td>\r\n          <div class=\"highlight\">\r\n          </div>\r\n        </td>\r\n      </tr>\r\n    </table>\r\n    <span fxFlex></span>\r\n  <button mat-icon-button [matMenuTriggerFor]=\"menu\">\r\n    <mat-icon>more_vert</mat-icon>\r\n  </button>\r\n  <mat-menu #menu=\"matMenu\">\r\n    <div class=\"upload_botton\">\r\n      <button type=\"button\" mat-menu-item>Upload</button>\r\n      <input\r\n        type=\"file\"\r\n        accept=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\"\r\n        class=\"btn btn-success\"\r\n        (change)=\"onFileChange($event)\"\r\n      />\r\n    </div>\r\n    <button (click)=\"baseDenominationMaintenance()\" mat-menu-item>\r\n      <span>Download</span>\r\n    </button>\r\n  </mat-menu>\r\n  </div>\r\n  <mat-card-content>\r\n    <div fxLayout=\"row\" class=\"w-full\" fxLayoutAlign=\"space-arround center\" class=\"ml-16 mt-32\">\r\n      <div fxLayout=\"row\" class=\"w-full\" fxLayoutGap=\"10px\">\r\n        <div>\r\n          <mat-form-field appearance=\"outline\">\r\n            <mat-label>Filter By</mat-label>\r\n            <mat-select name=\"filterBy\" #filterBy [(ngModel)]=\"selectedFilterIndex\" placeholder=\"Filter By\">\r\n              <!-- <mat-select name=\"filterBy\" #filterBy [(ngModel)]=\"selectedFilterIndex\"> -->\r\n              <mat-option value=\"0\">Select</mat-option>\r\n              <mat-option *ngFor=\"let filter of filterByOption; trackBy: trackByFilter\" value=\"{{filter.key}}\">\r\n                {{filter.value}}\r\n              </mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n        </div>\r\n        <div>\r\n          <mat-form-field appearance=\"outline\">\r\n            <mat-label>Search</mat-label>\r\n            <input matInput #searchVal (keyup)=\"doFilter(filterBy.value,$event)\" placeholder=\"Search\">\r\n            <!-- <input matInput #searchVal (keyup)=\"doFilter(filterBy.value,$event)\"> -->\r\n            <mat-icon matSuffix>search</mat-icon>\r\n          </mat-form-field>\r\n        </div>\r\n        <div *ngIf=\"searchVal.value || filterBy.value\" class=\"resetDiv\">\r\n          <button mat-stroked-button class=\"clearBtn\" (click)=\"clearFilter()\">RESET\r\n          </button>\r\n          </div>\r\n          <div class=\"filterDiv\">\r\n           <button mat-flat-button color=\"primary\" class=\"addNewBtn\" (click)=\"addNew()\" >ADD NEW\r\n           </button>\r\n         </div>    \r\n    </div>\r\n    </div>\r\n    \r\n    <div class=\"mat-elevation-z0\">\r\n      <mat-table class=\"w-full\" [dataSource]=\"dataSource\" matSort (matSortChange)=\"announceSortChange($event)\">\r\n        <ng-container matColumnDef=\"baseDenominationId\">\r\n          <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Base Denomination Id\">Base Denomination Id\r\n            Code\r\n          </mat-header-cell>\r\n          <mat-cell *matCellDef=\"let element\"> {{element.baseDenominationId }} </mat-cell>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"denomination\">\r\n          <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Denomination\"> Denomination\r\n          </mat-header-cell>\r\n          <mat-cell *matCellDef=\"let element\"> {{element.denomination}} </mat-cell>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"currency\">\r\n          <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Currency\"> Currency\r\n            \r\n          </mat-header-cell>\r\n          <mat-cell *matCellDef=\"let element\"> {{element.currency}} </mat-cell>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"authStatus\">\r\n          <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Auth Status\"> Auth Status\r\n          </mat-header-cell>\r\n          <mat-cell *matCellDef=\"let element\"> {{element.authStatus}} </mat-cell>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"recordStatus\">\r\n          <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Record Status\"> Record\r\n            Status\r\n          </mat-header-cell>\r\n          <mat-cell *matCellDef=\"let element\"> {{element.recordStatus}} </mat-cell>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"status\">\r\n          <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Status \"> Status\r\n          </mat-header-cell>\r\n          <ng-template let-row=\"element\" ngx-datatable-cell-template>\r\n            <mat-chip mat-sm-chip [color]=\"'primary'\" [selected]=\"row.isActive\">{{element.isActive ? 'active' : 'inactive'}}</mat-chip>\r\n          </ng-template>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"action\">\r\n          <mat-header-cell *matHeaderCellDef>Action</mat-header-cell>\r\n          <mat-cell *matCellDef=\"let element\">\r\n            <div>\r\n             <mat-icon class=\"actionIcons\" matTooltip=\"Edit\" (click)=\"openPopUp(element)\" >edit</mat-icon>\r\n          </div>&nbsp;&nbsp;&nbsp;&nbsp;\r\n          <div>\r\n           <mat-icon class=\"actionIcons\" matTooltip=\"Delete\" [disabled]=\"element.oneTimeAuth =='Y'\"  (click)=\"deleteItem(element)\" >delete</mat-icon>\r\n          </div>\r\n          </mat-cell>\r\n        </ng-container>\r\n\r\n        <mat-header-row *matHeaderRowDef=\"displayedColumns;\"></mat-header-row>\r\n        <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\r\n      </mat-table>\r\n      <mat-paginator class=\"mt-16\" [pageSizeOptions]=\"[5, 10, 20]\" aria-label=\"Select page of users\"></mat-paginator>\r\n    </div>\r\n\r\n  </mat-card-content>\r\n</mat-card>","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { AppConfirmService } from 'app/shared/services/app-confirm/app-confirm.service';\r\nimport { AppLoaderService } from 'app/shared/services/app-loader/app-loader.service';\r\nimport { Subscription } from 'rxjs';\r\nimport { TillVaultMasterPopupComponent } from '../../till-vault-master-popup/till-vault-master-popup/till-vault-master-popup.component';\r\nimport { Router } from '@angular/router';\r\nimport { DataService } from 'app/shared/services/data.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport {MatSort, Sort} from '@angular/material/sort';\r\nimport { LiveAnnouncer } from '@angular/cdk/a11y';\r\nimport { DownloadService } from 'app/shared/services/download.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-till-vault-master-summary',\r\n  templateUrl: './till-vault-master-summary.component.html',\r\n  styleUrls: ['./till-vault-master-summary.component.scss']\r\n})\r\nexport class TillVaultMasterSummaryComponent implements OnInit {\r\n  @ViewChild('searchVal') searchVal: ElementRef;\r\n  selectedFilterIndex : number = 0;\r\n\r\n  dataSource = new MatTableDataSource();\r\n  displayedColumns: string[] = ['entityCode', 'bankCode', 'tillVaultCode', 'oneTimeAuth', 'authStatus', 'recordStatus', 'action'];\r\n\r\n  filterByOption: { key: string, value: string }[] = [\r\n    { key: 'entityCode', value: 'Entity Code' },\r\n    { key: 'bankCode', value: 'Bank Code' },\r\n  ];\r\n\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  public users: any[];\r\n  public items: any[];\r\n  entity: any;\r\n  bankCode: any;\r\n  tillVaultMasterValues: any;\r\n  public getItemSub: Subscription;\r\n  fetchTillVault: any;\r\n  id:any;\r\n  \r\n  constructor(\r\n    private dialog: MatDialog,\r\n    private snack: MatSnackBar,\r\n    private confirmService: AppConfirmService,\r\n    private loader: AppLoaderService,\r\n    private api:ApiService, private router: Router,\r\n    private dataService:DataService,private _liveAnnouncer: LiveAnnouncer,\r\n    private ls: LocalStoreService,\r\n    private downloadService: DownloadService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n      this.getEntityCode();\r\n      this.getBankCode();\r\n      this.getItems();\r\n    }\r\n    ngOnDestroy() {\r\n      if (this.getItemSub) {\r\n        this.getItemSub.unsubscribe()\r\n      }\r\n    }\r\n    addNew() {\r\n      this.router.navigate([`/maintenance/main/tillVaultltMaster/add`]);\r\n    }\r\n\r\n    trackByFnFilterByOption(index, item) {\r\n      return index; \r\n    }\r\n    onFileChange(event) {\r\n      console.log('event', event.path[0].files[0]);\r\n      const file: File = event.path[0].files[0];\r\n      const uploadData = new FormData();\r\n      uploadData.append('screenType', 'tillVaultltMaster');\r\n      uploadData.append('file', file);\r\n      this.api.uploadExelFile(uploadData).subscribe((response) => {\r\n        console.log(response);\r\n        this.getItems();\r\n        this.snack.open(`File Uploaded Successfully`, \"OK\", {\r\n          duration: 4000,\r\n          verticalPosition: \"top\",\r\n          horizontalPosition: \"right\",\r\n        });\r\n      });\r\n    }\r\n    \r\n    getItems() {\r\n      this.api.getTillVaultMaster().subscribe((tillVaultVal : any)=> {\r\n        if(tillVaultVal){\r\n\r\n          for(let i=0;i<tillVaultVal.length;i++){\r\n            if(tillVaultVal[i].authStatus == 'U'){\r\n              tillVaultVal[i].authStatus = 'Unauthorized'\r\n            }\r\n            if(tillVaultVal[i].authStatus == 'A') {\r\n              tillVaultVal[i].authStatus = 'Authorized'\r\n            } \r\n            if(tillVaultVal[i].recordStatus == 'O'){\r\n              tillVaultVal[i].recordStatus = 'Open'\r\n            } \r\n            if(tillVaultVal[i].recordStatus == 'C'){\r\n              tillVaultVal[i].recordStatus = 'Closed'\r\n            }\r\n          }\r\n        this.tillVaultMasterValues = tillVaultVal;\r\n          this.items =  this.tillVaultMasterValues;\r\n          this.dataSource = new MatTableDataSource(tillVaultVal);\r\n          this.users = tillVaultVal;\r\n          this.dataSource.paginator = this.paginator;\r\n          this.dataSource.sort = this.sort;\r\n        }\r\n        });\r\n    \r\n    }\r\n    getBankCode(){\r\n      this.api.getBankCode().subscribe((bnkCode : any)=> {\r\n        this.bankCode=bnkCode;\r\n        });\r\n    }\r\n    getEntityCode() {\r\n      this.api.getEntityCode().subscribe((resp) => {\r\n        this.entity = resp;\r\n      });\r\n    }\r\n  doFilter(filterBy, e){\r\n    this.filterTable(filterBy);\r\n    this.applyFilter(e);\r\n  }\r\n  \r\n  filterTable(filterBy) {\r\n    this.dataSource.filterPredicate = (data: any, filter: string): boolean => {\r\n      return (\r\n        data[filterBy]?.toLocaleLowerCase().includes(filter)\r\n      )\r\n    }\r\n  }\r\n\r\n  clearFilter(){\r\n   this.dataSource.filter = '';\r\n   this.searchVal.nativeElement.value = '';\r\n   this.selectedFilterIndex = 0;\r\n  }\r\n\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n  announceSortChange(sortState: Sort) {\r\n    if (sortState.direction) {\r\n      this._liveAnnouncer.announce(`Sorted ${sortState.direction}ending`);\r\n    } else {\r\n      this._liveAnnouncer.announce('Sorting cleared');\r\n    }\r\n  }\r\n  openPopUp(data: any = {},isEdit : string) {\r\n    this.router.navigate([\"/maintenance/main/tillVaultltMaster/add\"],{ queryParams: { id: data.id, isEdit : isEdit } });\r\n  \r\n   \r\n  }\r\n\r\n  masterpdf(){\r\n    this.downloadService.downloadFiles(\"tillVaultMaintenance\", this.users);\r\n\r\n  }\r\n\r\n  \r\n  fetchTillVaultById(){\r\n    this.api.getTillVaultById(this.id).subscribe((resp) =>{\r\n     this.fetchTillVault=resp;\r\n    })\r\n    this.dataService.sendNavParam(this.fetchTillVault);\r\n    this.router.navigate([`/maintenance/main/tillVaultltMaster/add/${this.id}`]);\r\n  }\r\n\r\n  goBack() {\r\n    this.router.navigate([`/maintenance/main/`]);\r\n  }\r\n\r\n  deleteItem(row) {\r\n    this.confirmService.confirm({message: `Delete ${row.entityCode}?`})\r\n      .subscribe(res => {\r\n        if (res) {\r\n          this.loader.open();\r\n          this.api.deleteTillVaultMaster(row.id)\r\n            .subscribe((res: any) => {        \r\n                }, (err: any) => {''\r\n              if (err.status == 200) {\r\n                this.loader.close();\r\n                this.getItems();\r\n                this.snack.open('Member deleted!', 'OK', { duration: 4000})\r\n              \r\n                } })\r\n        }\r\n      })\r\n  } \r\n\r\n}\r\n","<h1 class=\"main-head\"><small class=\"small-head\">Home > Maintenance Summary > Till Vault Maintenance </small>\r\n</h1>\r\n<div fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"mt-24\">\r\n  <button mat-icon-button (click)=\"goBack()\">\r\n    <mat-icon>arrow_back</mat-icon>\r\n  </button> \r\n  <span class=\"text-large\">\r\n    Till Vault Maintenance\r\n  </span>\r\n</div>\r\n<mat-card class=\"mt-32\">\r\n  <div >    \r\n    <table style=\"margin: 18px;\">\r\n      <tr>\r\n        <td>\r\n          <h2>\r\n            Till Vault Maintenance\r\n          </h2>\r\n        </td>\r\n      </tr>\r\n      <tr>\r\n        <td>\r\n          <div class=\"highlight\">\r\n          </div>\r\n        </td>\r\n      </tr>\r\n    </table>\r\n    <span fxFlex></span>\r\n      <button mat-icon-button [matMenuTriggerFor]=\"menu\">\r\n         <mat-icon>more_vert</mat-icon>\r\n      </button>\r\n      <mat-menu #menu=\"matMenu\">\r\n         <div class=\"upload_botton\">\r\n          <button type=\"button\" mat-menu-item>Upload</button>\r\n          <input\r\n            type=\"file\"\r\n            accept=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\"\r\n            class=\"btn btn-success\"\r\n            (change)=\"onFileChange($event)\"\r\n          />\r\n        </div>\r\n         <button (click)=\"masterpdf()\" mat-menu-item>\r\n           <span>Download</span>\r\n         </button>\r\n      </mat-menu>\r\n </div>\r\n  <div fxLayout=\"row\" class=\"w-full\" fxLayoutAlign=\"space-arround center\" class=\"ml-16 mt-32\">\r\n      <div fxLayout=\"row\" class=\"w-full\" fxLayoutGap=\"10px\">\r\n       <div>\r\n         <mat-form-field appearance=\"outline\">\r\n          <mat-label>Filter By</mat-label>\r\n           <mat-select name=\"filterBy\" #filterBy [(ngModel)]=\"selectedFilterIndex\" placeholder=\"Filter By\">\r\n            <!-- <mat-select name=\"filterBy\" #filterBy [(ngModel)]=\"selectedFilterIndex\"> -->\r\n             <mat-option value=\"0\">Select</mat-option>\r\n             <mat-option *ngFor=\"let filter of filterByOption; trackBy: trackByFnFilterByOption\" value=\"{{filter.key}}\">\r\n               {{filter.value}}\r\n             </mat-option>\r\n           </mat-select>\r\n         </mat-form-field>\r\n       </div>\r\n       <div>\r\n         <mat-form-field appearance=\"outline\">\r\n          <mat-label>Search</mat-label>\r\n           <input matInput #searchVal (keyup)=\"doFilter(filterBy.value,$event)\" placeholder=\"Search\">\r\n           <!-- <input matInput #searchVal (keyup)=\"doFilter(filterBy.value,$event)\"> -->\r\n           <mat-icon matSuffix>search</mat-icon>\r\n         </mat-form-field>\r\n       </div>\r\n      <div *ngIf=\"searchVal.value || filterBy.value\" class=\"resetDiv\">\r\n        <button mat-stroked-button class=\"clearBtn\" (click)=\"clearFilter()\">RESET\r\n        </button>\r\n      </div>\r\n      <div class=\"filterDiv\">\r\n       <button mat-flat-button color=\"primary\" class=\"addNewBtn\" (click)=\"addNew()\" >ADD NEW\r\n       </button>\r\n     </div>\r\n\r\n     </div>\r\n  </div>\r\n  <div class=\"mat-elevation-z0\">\r\n     <mat-table class=\"w-full\" [dataSource]=\"dataSource\" matSort (matSortChange)=\"announceSortChange($event)\">\r\n  \r\n       <ng-container matColumnDef=\"entityCode\">\r\n         <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Entity Code\"> Entity Code\r\n         </mat-header-cell>\r\n         <mat-cell *matCellDef=\"let element\"> {{element.entityCode}} </mat-cell>\r\n       </ng-container>\r\n  \r\n       <ng-container matColumnDef=\"bankCode\">\r\n         <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Bank Code\"> Bank Code\r\n         </mat-header-cell>\r\n         <mat-cell *matCellDef=\"let element\"> {{element.bankCode}} </mat-cell>\r\n       </ng-container>\r\n  \r\n       <ng-container matColumnDef=\"tillVaultCode\">\r\n         <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Till Vault Code\"> Till Vault Code\r\n            </mat-header-cell>\r\n         <mat-cell *matCellDef=\"let element\"> {{element.tillVaultCode}} </mat-cell>\r\n       </ng-container>\r\n       <!-- <ng-container matColumnDef=\"Status\">\r\n        <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Status\"> Status\r\n           </mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\"> {{element.Status}} </mat-cell>\r\n      </ng-container> -->\r\n       <ng-container matColumnDef=\"oneTimeAuth\">\r\n         <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by One Time Auth\"> One Time Auth\r\n          </mat-header-cell>\r\n         <mat-cell *matCellDef=\"let element\"> {{element.oneTimeAuth}} </mat-cell>\r\n       </ng-container>\r\n       <ng-container matColumnDef=\"authStatus\">\r\n         <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Auth Status\"> Auth Status\r\n          </mat-header-cell>\r\n         <mat-cell *matCellDef=\"let element\"> {{element.authStatus}} </mat-cell>\r\n       </ng-container>\r\n       <ng-container matColumnDef=\"recordStatus\">\r\n         <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Record Status\"> Record Status\r\n          </mat-header-cell>\r\n         <mat-cell *matCellDef=\"let element\"> {{element.recordStatus}} </mat-cell>\r\n       </ng-container>\r\n\r\n       <ng-container matColumnDef=\"action\">\r\n        <mat-header-cell *matHeaderCellDef>Action</mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\">\r\n          <div>\r\n           <mat-icon class=\"actionIcons\" matTooltip=\"Edit\" (click)=\"openPopUp(element,'Yes')\"  >edit</mat-icon>\r\n        </div>&nbsp;&nbsp;&nbsp;&nbsp;\r\n        <div>\r\n         <mat-icon class=\"actionIcons\" matTooltip=\"Delete\" (click)=\"deleteItem(element)\" >delete</mat-icon>\r\n        </div>\r\n        </mat-cell>\r\n      </ng-container>\r\n  \r\n       <mat-header-row *matHeaderRowDef=\"displayedColumns;\"></mat-header-row>\r\n       <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\r\n     </mat-table>\r\n     <mat-paginator class=\"mt-16\" [pageSizeOptions]=\"[5,10,15]\" showFirstLastButtons></mat-paginator>\r\n   </div>\r\n  </mat-card>\r\n     \r\n  \r\n\r\n","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { FormBuilder, Validators, FormGroup } from '@angular/forms';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { AppLoaderService } from 'app/shared/services/app-loader/app-loader.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { DataService } from 'app/shared/services/data.service';\r\nimport * as moment from 'moment';\r\nimport { loggedInUserInterface, TrxnCashStatusInterface } from './txn-cash-master-table-popup';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: \"app-txn-cash-master-table-popup\",\r\n  templateUrl: \"./txn-cash-master-table-popup.component.html\",\r\n  styleUrls: [\"./txn-cash-master-table-popup.component.scss\"],\r\n})\r\nexport class TxnCashMasterTablePopupComponent implements OnInit {\r\n  public txnCashMasterForm: FormGroup;\r\n  countryCurrency: string[] = [];\r\n  tillId: string[] = [];\r\n  branchCode: string[] = [];\r\n  bankCode: string[] = [];\r\n  entity: string;\r\n  currency: string[] = [];\r\n  till: string[] = [];\r\n  txnproductArr =[ 'CHD', 'CHW','CQD' ,'CQW' ];\r\n  currentUser: string;\r\n  data: string;\r\n  entityCode: string[] = [];\r\n  loggedInUser : loggedInUserInterface;\r\n   auditData : TrxnCashStatusInterface;\r\n  isAuditData : boolean = false;\r\n  id: string;\r\n  isEdit: boolean = false;\r\n  readorWrite: boolean=true;\r\n  TrxnCashStatus: TrxnCashStatusInterface;\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private api: ApiService,\r\n    private loader: AppLoaderService,\r\n    private snack: MatSnackBar,\r\n    private router: Router,\r\n    private apiService: ApiService,\r\n    private ls: LocalStoreService,\r\n    private dataService: DataService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.currentUser = this.ls.getItem(\"ICUST_USER\");\r\n \r\n    setTimeout(() => {\r\n      this.TrxnCashStatus = JSON.parse(\r\n        localStorage.getItem(\"fetchTrxnCashStatus\")\r\n      );\r\n \r\n      if (this.TrxnCashStatus == null || this.TrxnCashStatus == undefined) {\r\n        this.readorWrite=false;\r\n        this.buildItemForm({});\r\n      } else if (\r\n        this.TrxnCashStatus.id != null ||\r\n        this.TrxnCashStatus.id != undefined\r\n      ) {\r\n        this.loader.open();\r\n        this.id = this.TrxnCashStatus.id;\r\n        this.buildItemForm(this.TrxnCashStatus);\r\n        \r\n        this.auditData =this.TrxnCashStatus;\r\n      this.isEdit = true;\r\n      this.isAuditData = true;\r\n      this.dataService.setAuditLogData(this.auditData);\r\n        this.loader.close();\r\n      }\r\n    }, 1000);\r\n\r\n    this.getCurrency();\r\n    this.getBankCode();\r\n    this.getBranchCode();\r\n    this.getTillId();\r\n    this.getEntityCode();\r\n\r\n    this.loggedInUser = this.ls.getItem('ICUST_USER');\r\n  }\r\n\r\n  buildItemForm(item) {\r\n    console.log('item',item)\r\n    this.txnCashMasterForm = this.fb.group({\r\n      entityCode: [item?.entityCode || \"\", Validators.required],\r\n      bankCode: [item?.bankCode || \"\", Validators.required],\r\n      branchCode: [item?.branchCode || \"\", Validators.required],\r\n      tillId: [item.tillId || \"\", Validators.required],\r\n      txnProduct: [item?.txnProduct || \"\", Validators.required],\r\n      txnReference: [item?.txnReference || \"\", Validators.required],\r\n      account: [item?.account || \"\", Validators.required],\r\n      accCurrency: [item?.accCurrency || \"\", Validators.required],\r\n      accBalance: [item?.accBalance || \"\", Validators.required],\r\n      instrument: [item?.instrument || \"\", Validators.required],\r\n      txnCurrency: [item?.txnCurrency || \"\", Validators.required],\r\n      txnAmount: [item?.txnAmount || \"\", Validators.required],\r\n      ofsCurrency: [item?.ofsCurrency || \"\", Validators.required],\r\n      ofsAmount: [item?.ofsAmount || \"\", Validators.required],\r\n      txnDate : [new Date(item.txnDate) || \"\", [Validators.required]],\r\n      forexRate: [item?.forexRate || \"\", Validators.required],\r\n      forexNegoRate: [item?.forexNegoRate || \"\", Validators.required],\r\n      chargeAmount: [item?.chargeAmount || \"\", Validators.required],\r\n      remarks: [item?.remarks || \"\", Validators.required],\r\n      isActive: [item?.isActive || false],\r\n      id: [item?.id || null],\r\n      loggedInuser : [item.loggedInUser || ''],\r\n    });\r\n  }\r\n  dataByEntityCode(index,item){\r\n    return item.entityCode;\r\n  }\r\n  dataByBankCode(index,item){\r\n    return item.bankCode;\r\n  }\r\n  dataByBranchCode(index,item){\r\n    return item.branchCode;\r\n  }\r\n  dataByTillVaultCode(index,item){\r\n  //  \r\n    return item.tillVaultCode\r\n  }\r\n  dataByCurrencyCode(index,item){\r\n    return item.currencyCode\r\n  }\r\n  deleteRecord(operation){\r\n    Swal.fire(\r\n      {\r\n        //text: 'Unable to process' + 'Error ' + this.responseforfileupload.errorMessage + 'Do you want to Proceed??',\r\n        text: 'You are trying to '+ operation +' record.' + ' Do you want to proceed?',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        // confirmButtonText: 'PROCEED.'\r\n        cancelButtonText: 'NO',\r\n        confirmButtonText: 'YES', 'icon': 'info'\r\n      }\r\n    ).then((result => {\r\n      if(result.isConfirmed==true){\r\n        this.apiService.deleteTxnCashMaster(this.auditData.id)\r\n        .subscribe(data => {\r\n          this.router.navigate([`/maintenance/main/transactionCashMaster`]);\r\n        },\r\n        err=>{\r\n          if (err.status == 200) {\r\n            this.snack.open('Record Deleted Successfully', 'OK', {\r\n              duration: 4000,\r\n              verticalPosition: 'top',\r\n              horizontalPosition: 'right'\r\n            });\r\n          }\r\n          this.router.navigate([`/maintenance/main/transactionCashMaster`]);\r\n        \r\n      })\r\n      }}))\r\n   \r\n         \r\n       \r\n  }\r\n  editRecord(){\r\n    this.readorWrite=false;\r\n  }\r\n  updateRecord(operation) {\r\n    Swal.fire(\r\n      {\r\n        //text: 'Unable to process' + 'Error ' + this.responseforfileupload.errorMessage + 'Do you want to Proceed??',\r\n        text: 'You are trying to '+ operation +' record.' + ' Do you want to proceed?',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        // confirmButtonText: 'PROCEED.'\r\n        cancelButtonText: 'NO',\r\n        confirmButtonText: 'YES', 'icon': 'info'\r\n      }\r\n    ).then((result => {\r\n      if(result.isConfirmed==true){\r\n        let payload: any = {};\r\n    payload.id = this.id;\r\n    payload.operation = operation;\r\n    payload.loggedInUser = this.loggedInUser.userName;\r\n    this.apiService.getAuditLogsForTransactionCashMaster(payload).subscribe((data) => {\r\n      this.auditData = data;\r\n      this.dataService.setAuditLogData(this.auditData);\r\n      this.isAuditData = true;\r\n      this.dataService.sendClickEvent();\r\n      let message = '';\r\n      switch (operation) {\r\n        case 'open':\r\n          message = 'opened'\r\n          break;\r\n        case 'close':\r\n          message = 'closed'\r\n          break;\r\n        case 'auth':\r\n          message = 'authorized'\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n      this.snack.open(`Record ${message} successfully!'`, \"OK\", {\r\n        duration: 2000,\r\n        verticalPosition: \"top\",\r\n        horizontalPosition: \"right\",\r\n      });\r\n    });\r\n      }}))\r\n    \r\n  }\r\n\r\n  submit() {\r\n    let date = this.convertDate(this.txnCashMasterForm.controls.txnDate.value);\r\n    this.txnCashMasterForm.value[\"txnDate\"] = date;\r\n    if (this.txnCashMasterForm.invalid) {\r\n      return;\r\n    } else {\r\n      this.loader.open();\r\n      this.txnCashMasterForm.value.loggedInUser = this.loggedInUser.userName;\r\n      this.api.upsertTxnCashMaster(this.txnCashMasterForm.value).subscribe(\r\n        (resp) => {\r\n          this.loader.close();\r\n          this.router\r\n            .navigate([`/maintenance/main/transactionCashMaster`])\r\n            .then((_) => {\r\n              this.snack.open(\"Data Saved Successfully!\", \"OK\", {\r\n                duration: 4000,\r\n                verticalPosition: \"top\",\r\n                horizontalPosition: \"right\",\r\n              });\r\n              localStorage.removeItem(\"fetchTrxnCashStatus\");\r\n            });\r\n        },\r\n        (err: any) => {\r\n          this.loader.close();\r\n          this.snack.open(`Error!`, \"OK\", {\r\n            duration: 4000,\r\n            verticalPosition: \"top\",\r\n            horizontalPosition: \"right\",\r\n          });\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  getCurrency() {\r\n    // this.api.getCountryValues().subscribe((resp) => {\r\n    //   this.currency = resp;\r\n    // });\r\n    this.apiService.getCurrencyDetails().subscribe(data=>{\r\n      console.log(\"Auth currecy details\", data)\r\n      for(let i=0; i<data.length;i++){\r\n        this.currency.push(data[i].currencyId)\r\n      }\r\n      console.log(this.currency);\r\n    })\r\n  }\r\n  getBankCode() {\r\n    this.api.getBankCode().subscribe((resp) => {\r\n    //  this.bankCode = resp;\r\n      for(let i = 0; i<resp.length; i++){\r\n        if(resp[i].authStatus == 'A'){\r\n          this.bankCode.push(resp[i]);\r\n        }\r\n      }\r\n    });\r\n  }\r\n  getBranchCode() {\r\n    this.api.getBranchCode().subscribe((resp) => {\r\n      //this.branchCode = resp;\r\n      for(let i = 0; i<resp.length; i++){\r\n        if(resp[i].authStatus == 'A'){\r\n          this.branchCode.push(resp[i]);\r\n        }\r\n      }\r\n    });\r\n  }\r\n  getTillId() {\r\n    let tillOrVault = \"T\";\r\n    this.api.getTillData(tillOrVault).subscribe((resp) => {\r\n      this.till = resp;\r\n    });\r\n  }\r\n\r\n  convertDate(value) {\r\n    let date = moment(value).format(\"YYYY-MMM-DD HH:mm:ss\");\r\n    if (date) return date;\r\n  }\r\n\r\n  getEntityCode() {\r\n    this.api.getEntityCode().subscribe((resp) => {\r\n   //   this.entityCode = resp;\r\n      for(let i = 0; i<resp.length; i++){\r\n        if(resp[i].authStatus == 'A'){\r\n          this.entityCode.push(resp[i]);\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  goBack() {\r\n    localStorage.removeItem(\"fetchTrxnCashStatus\");\r\n    this.router.navigate([`/maintenance/main/transactionCashMaster`]);\r\n  }\r\n}\r\n","<h1 class=\"main-head\"><small class=\"small-head\">Home > Maintenance Summary > Transaction Cash Master Maintenance > <span *ngIf=\"!isEdit\">Add</span><span *ngIf=\"isEdit\">Edit</span> Transaction Cash Master Details</small>\r\n</h1>\r\n<div fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"mt-16\">\r\n  <button mat-icon-button (click)=\"goBack()\">\r\n    <mat-icon>arrow_back</mat-icon>\r\n  </button>\r\n  <h1 *ngIf=\"!isEdit\" class=\"add-text\">Add Transaction Cash Master Details </h1>\r\n  <h1 *ngIf=\"isEdit\" class=\"add-text\">Edit Transaction Cash Master Details</h1>\r\n</div>\r\n<mat-card>\r\n  <!-- <h1 matDialogTitle>Add Transaction Cash Master Details</h1> -->\r\n  <form [formGroup]=\"txnCashMasterForm\" *ngIf=\"txnCashMasterForm\" (ngSubmit)=\"submit()\">\r\n    <div fxLayout=\"row wrap\" fxLayout.lt-sm=\"column\">\r\n      <div fxFlex=\"33\" class=\"pr-16\">\r\n        <mat-label>Entity Code*</mat-label>\r\n        <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n          <mat-select name=\"entityCode\" [formControl]=\"txnCashMasterForm.controls['entityCode']\" class=\"selectOption\">\r\n            <mat-option *ngFor=\"let data of entityCode;trackBy:dataByEntityCode\"  [value]=\"data.entityCode\">\r\n              {{data.entityCode}}\r\n            </mat-option> \r\n          </mat-select>\r\n          <mat-error *ngIf=\"txnCashMasterForm.get('entityCode').touched && !txnCashMasterForm.get('entityCode').valid\">\r\n            Entity Code is Required\r\n          </mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n  \r\n      <div fxFlex=\"33\" class=\"pr-16\" *ngIf=\"!readorWrite\">\r\n        <mat-label>Bank Code*</mat-label>\r\n        <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n          <mat-select name=\"bankCode\" [formControl]=\"txnCashMasterForm.controls['bankCode']\" class=\"selectOption\">\r\n            <mat-option *ngFor=\"let data of bankCode ;trackBy:dataByBankCode\" [value]=\"data.bankCode\">\r\n              {{data.bankCode}}\r\n            </mat-option>\r\n          </mat-select>\r\n          <mat-error *ngIf=\"txnCashMasterForm.get('bankCode').touched && !txnCashMasterForm.get('bankCode').valid\">\r\n            Bank Code is Required\r\n          </mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n      <div fxFlex=\"33\" class=\"pr-16\" *ngIf=\"readorWrite\">\r\n        <mat-label>Bank Code*</mat-label>\r\n        <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n          <input  matInput name=\"account\" [formControl]=\"txnCashMasterForm.controls['bankCode']\"/>\r\n        </mat-form-field>\r\n      </div>\r\n  \r\n      <div fxFlex=\"33\" class=\"pr-16\" *ngIf=\"!readorWrite\">\r\n        <mat-label>Branch Code*</mat-label>\r\n        <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n          <mat-select name=\"branchCode\" [formControl]=\"txnCashMasterForm.controls['branchCode']\" class=\"selectOption\">\r\n            <mat-option *ngFor=\"let data of branchCode;trackBy:dataByBranchCode\" [value]=\"data.branchCode\">\r\n              {{data.branchCode}}\r\n            </mat-option>\r\n          </mat-select>\r\n          <mat-error *ngIf=\"txnCashMasterForm.get('branchCode').touched && !txnCashMasterForm.get('branchCode').valid\">\r\n            Branch Code is Required!\r\n          </mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n      <div fxFlex=\"33\" class=\"pr-16\" *ngIf=\"readorWrite\">\r\n        <mat-label>Branch Code*</mat-label>\r\n        <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n          <input  matInput name=\"account\" [formControl]=\"txnCashMasterForm.controls['branchCode']\"/>\r\n        </mat-form-field>\r\n      </div>\r\n  \r\n      <div fxFlex=\"33\" class=\"pr-16\" *ngIf=\"!readorWrite\">\r\n        <mat-label>Till Id*</mat-label>\r\n        <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n          <mat-select name=\"tillId\" [formControl]=\"txnCashMasterForm.controls['tillId']\" class=\"selectOption\">\r\n            <mat-option *ngFor=\"let data of till;trackBy:dataByTillVaultCode\" [value]=\"data.tillVaultCode\">\r\n              {{data.tillVaultCode}}\r\n            </mat-option>\r\n          </mat-select>\r\n          <mat-error *ngIf=\"txnCashMasterForm.get('tillId').touched && !txnCashMasterForm.get('tillId').valid\">\r\n            Till Id is Required!\r\n          </mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n      <div fxFlex=\"33\" class=\"pr-16\" *ngIf=\"readorWrite\">\r\n        <mat-label>Till Id*</mat-label>\r\n        <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n          <input  matInput name=\"account\" [formControl]=\"txnCashMasterForm.controls['tillId']\"/>\r\n        </mat-form-field>\r\n      </div>\r\n  \r\n  \r\n      <div fxFlex=\"33\" class=\"pr-16\" *ngIf=\"!readorWrite\">\r\n        <mat-label>Transaction Product*</mat-label>\r\n        <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n          <mat-select name=\"txnProduct\" [formControl]=\"txnCashMasterForm.controls['txnProduct']\">\r\n            <!-- <mat-option>Select</mat-option>\r\n            <mat-option value=\"CHD\">CHD</mat-option>\r\n            <mat-option value=\"CHW\">CHW</mat-option>\r\n            <mat-option value=\"CQD\">CQD</mat-option>\r\n            <mat-option value=\"CQW\">CQW</mat-option> -->\r\n            <mat-option *ngFor=\"let txnproduct of txnproductArr;\" [value]=\"txnproduct\">\r\n              {{txnproduct}}\r\n            </mat-option>\r\n          </mat-select>\r\n          <mat-error *ngIf=\"txnCashMasterForm.get('txnProduct').touched && !txnCashMasterForm.get('txnProduct').valid\">\r\n            Transaction Product is Required!\r\n          </mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n      <div fxFlex=\"33\" class=\"pr-16\" *ngIf=\"readorWrite\">\r\n        <mat-label>Transaction Product*</mat-label>\r\n        <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n          <input  matInput name=\"account\" [formControl]=\"txnCashMasterForm.controls['txnProduct']\"/>\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <div fxFlex=\"33\" class=\"pr-16\">\r\n        <mat-label>Transaction Reference*</mat-label>\r\n        <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n          <input  [readonly]=\"readorWrite\" matInput name=\"txnReference\" [formControl]=\"txnCashMasterForm.controls['txnReference']\">\r\n          <mat-error\r\n            *ngIf=\"txnCashMasterForm.get('txnReference').touched && !txnCashMasterForm.get('txnReference').valid\">\r\n            Transaction Reference is Required!\r\n          </mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <div fxFlex=\"33\" class=\"pr-16\">\r\n        <mat-label>Account*</mat-label>\r\n        <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n          <input  [readonly]=\"readorWrite\" matInput name=\"account\" [formControl]=\"txnCashMasterForm.controls['account']\">\r\n          <mat-error *ngIf=\"txnCashMasterForm.get('account').touched && !txnCashMasterForm.get('account').valid\">\r\n            Account is Required!\r\n          </mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <div fxFlex=\"33\" class=\"pr-16\">\r\n        <mat-label>Account Currency*</mat-label>\r\n        <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n          <mat-select name=\"accCurrency\" [formControl]=\"txnCashMasterForm.controls['accCurrency']\" class=\"selectOption\">\r\n            <mat-option *ngFor=\"let data of currency;trackBy:dataByCurrencyCode\" [value]=\"data.currencyCode\">\r\n              {{data.currencyCode}}\r\n            </mat-option>\r\n          </mat-select>\r\n          <mat-error *ngIf=\"txnCashMasterForm.get('accCurrency').touched && !txnCashMasterForm.get('accCurrency').valid\">\r\n            Account Currency is Required!\r\n          </mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <div fxFlex=\"33\" class=\"pr-16\">\r\n        <mat-label>Account Balance*</mat-label>\r\n        <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n          <input  [readonly]=\"readorWrite\" matInput name=\"accBalance\" type=\"number\" [formControl]=\"txnCashMasterForm.controls['accBalance']\">\r\n          <mat-error *ngIf=\"txnCashMasterForm.get('accBalance').touched && !txnCashMasterForm.get('accBalance').valid\">\r\n            Account Balance is Required!\r\n          </mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n  \r\n      <div fxFlex=\"33\" class=\"pr-16\">\r\n        <mat-label>Instrument*</mat-label>\r\n        <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n          <input  [readonly]=\"readorWrite\" matInput name=\"instrument\" [formControl]=\"txnCashMasterForm.controls['instrument']\">\r\n          <mat-error *ngIf=\"txnCashMasterForm.get('instrument').touched && !txnCashMasterForm.get('instrument').valid\">\r\n            Instrument is Required!\r\n          </mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <div fxFlex=\"33\" class=\"pr-16\">\r\n        <mat-label>Transaction Currency*</mat-label>\r\n        <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n          <mat-select name=\"txnCurrency\" [formControl]=\"txnCashMasterForm.controls['txnCurrency']\" class=\"selectOption\">\r\n            <mat-option *ngFor=\"let data of currency;trackBy:dataByCurrencyCode\" [value]=\"data.currencyCode\">\r\n              {{data.currencyCode}}\r\n            </mat-option>\r\n          </mat-select>\r\n          <mat-error *ngIf=\"txnCashMasterForm.get('txnCurrency').touched && !txnCashMasterForm.get('txnCurrency').valid\">\r\n            Transaction Currency is Required!\r\n          </mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n      <div fxFlex=\"33\" class=\"pr-16\" *ngIf=\"readorWrite\">\r\n        <mat-label>Transaction Product*</mat-label>\r\n        <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n          <input  matInput name=\"account\" [formControl]=\"txnCashMasterForm.controls['txnProduct']\"/>\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <div fxFlex=\"33\" class=\"pr-16\">\r\n        <mat-label>Transaction Amount*</mat-label>\r\n        <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n          <input  [readonly]=\"readorWrite\" matInput name=\"txnAmount\" type=\"number\" [formControl]=\"txnCashMasterForm.controls['txnAmount']\">\r\n          <mat-error *ngIf=\"txnCashMasterForm.get('txnAmount').touched && !txnCashMasterForm.get('txnAmount').valid\">\r\n            Transaction Amount is Required!\r\n          </mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <div fxFlex=\"33\" class=\"pr-16\" *ngIf=\"!readorWrite\">\r\n        <mat-label>Offset Currency*</mat-label>\r\n        <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n          <mat-select name=\"ofsCurrency\" [formControl]=\"txnCashMasterForm.controls['ofsCurrency']\" class=\"selectOption\">\r\n            <mat-option *ngFor=\"let data of currency;trackBy:dataByCurrencyCode\" [value]=\"data.currencyCode\">\r\n              {{data.currencyCode}}\r\n            </mat-option>\r\n          </mat-select>\r\n          <mat-error *ngIf=\"txnCashMasterForm.get('ofsCurrency').touched && !txnCashMasterForm.get('ofsCurrency').valid\">\r\n            Offset Currency is Required!\r\n          </mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n      <div fxFlex=\"33\" class=\"pr-16\" *ngIf=\"readorWrite\">\r\n        <mat-label> Offset Currency *</mat-label>\r\n        <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n          <input  matInput name=\"account\" [formControl]=\"txnCashMasterForm.controls['ofsCurrency']\"/>\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <div fxFlex=\"33\" class=\"pr-16\">\r\n        <mat-label>Offset Amount*</mat-label>\r\n        <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n          <input  [readonly]=\"readorWrite\" matInput name=\"ofsAmount\" type=\"number\" [formControl]=\"txnCashMasterForm.controls['ofsAmount']\">\r\n          <mat-error *ngIf=\"txnCashMasterForm.get('ofsAmount').touched && !txnCashMasterForm.get('ofsAmount').valid\">\r\n            Offset Amount is Required!\r\n          </mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n  \r\n      <div fxFlex=\"33\" class=\"pr-16\">\r\n        <mat-label>Transaction Date*</mat-label>\r\n        <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n          <input  [readonly]=\"readorWrite\" [formControl]=\"txnCashMasterForm.controls['txnDate']\" [min]=\"txnCashMasterForm.get('txnDate').value\" matInput name=\"txnDate\"\r\n            [matDatepicker]=\"picker1\" readonly>\r\n          <mat-datepicker-toggle matSuffix [for]=\"picker1\"> \r\n            <mat-icon matDatepickerToggleIcon>keyboard_arrow_down</mat-icon>\r\n          </mat-datepicker-toggle>\r\n          <mat-datepicker #picker1></mat-datepicker>\r\n          <mat-error *ngIf=\"txnCashMasterForm.get('txnDate').touched && !txnCashMasterForm.get('txnDate').valid\">\r\n            Transaction Date is Required!\r\n          </mat-error>\r\n        </mat-form-field>\r\n        <mat-datepicker #txnDatepicker></mat-datepicker>\r\n      </div>\r\n\r\n      <div fxFlex=\"33\" class=\"pr-16\">\r\n        <mat-label>Forex Rate*</mat-label>\r\n        <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n          <input  [readonly]=\"readorWrite\" matInput name=\"forexRate\" type=\"number\" [formControl]=\"txnCashMasterForm.controls['forexRate']\">\r\n          <mat-error *ngIf=\"txnCashMasterForm.get('forexRate').touched && !txnCashMasterForm.get('forexRate').valid\">\r\n            Forex Rate is Required!\r\n          </mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <div fxFlex=\"33\" class=\"pr-16\">\r\n        <mat-label>Forex Negotiation Rate*</mat-label>\r\n        <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n          <input  [readonly]=\"readorWrite\" matInput name=\"forexNegoRate\" type=\"number\" [formControl]=\"txnCashMasterForm.controls['forexNegoRate']\">\r\n          <mat-error\r\n            *ngIf=\"txnCashMasterForm.get('forexNegoRate').touched && !txnCashMasterForm.get('forexNegoRate').valid\">\r\n            Forex Negotiation Rate is Required!\r\n          </mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <div fxFlex=\"33\" class=\"pr-16\">\r\n        <mat-label> Charge Amount*</mat-label>\r\n        <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n          <input  [readonly]=\"readorWrite\" matInput name=\"chargeAmount\" type=\"number\" [formControl]=\"txnCashMasterForm.controls['chargeAmount']\">\r\n          <mat-error\r\n            *ngIf=\"txnCashMasterForm.get('chargeAmount').touched && !txnCashMasterForm.get('chargeAmount').valid\">\r\n            Charge Amount is Required!\r\n          </mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <div fxFlex=\"33\" class=\"pr-16\">\r\n        <mat-label>Remarks*</mat-label>\r\n        <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n          <input  [readonly]=\"readorWrite\" matInput name=\"remarks\" [formControl]=\"txnCashMasterForm.controls['remarks']\">\r\n          <mat-error *ngIf=\"txnCashMasterForm.get('remarks').touched && !txnCashMasterForm.get('remarks').valid\">\r\n            Remarks is Required!\r\n          </mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n      \r\n      <div fxLayout=\"row wrap\" fxLayout.lt-sm=\"column\">\r\n        <div fxFlex=\"100\" class=\"mt-16\" fxLayoutAlign=\"end center\">\r\n          <button mat-raised-button *ngIf=\"!isEdit\" color=\"primary\" [disabled]=\"txnCashMasterForm.invalid\" (click)=\"submit()\">SAVE</button>\r\n          &nbsp;\r\n          <div [hidden]=\"readorWrite\" >\r\n            <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\"  [disabled]= \"!(txnCashMasterForm.invalid || txnCashMasterForm.dirty)\"(click)=\"submit()\">\r\n               Save\r\n              </button>&nbsp;&nbsp;\r\n          </div>\r\n          <div [hidden]=\"!readorWrite || auditData?.recordStatus == 'Close'\">\r\n            <button *ngIf=\"isEdit\" type=\"button\"  mat-raised-button color=\"primary\" (click)=\"editRecord()\">\r\n              Edit\r\n            </button>&nbsp;&nbsp;\r\n          </div>\r\n          <div *ngIf=\"auditData?.authStatus == 'Unauthorized' && readorWrite\" [hidden]=\"!readorWrite\">\r\n            <button *ngIf=\"isEdit\" type=\"button\"  mat-raised-button color=\"primary\" (click)=\"updateRecord('auth')\">\r\n              Authorize\r\n            </button>&nbsp;&nbsp;\r\n          </div> \r\n          <div *ngIf=\"auditData?.recordStatus == 'Close' && auditData?.oneTimeAuth != 'No'\" [hidden]=\"!readorWrite\">\r\n            <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"updateRecord('open')\">\r\n              Reopen\r\n            </button>&nbsp;&nbsp;\r\n          </div>\r\n          <div *ngIf=\"auditData?.recordStatus == 'Open' && auditData?.oneTimeAuth != 'No'\" [hidden]=\"!readorWrite\">\r\n            <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"updateRecord('close')\">\r\n              Close\r\n            </button>&nbsp;&nbsp;\r\n          </div>\r\n          <div *ngIf=\"auditData?.oneTimeAuth == 'No'\" [hidden]=\"!readorWrite\">\r\n            <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"deleteRecord('delete')\">\r\n              Delete\r\n            </button> &nbsp;&nbsp;\r\n          </div>\r\n         \r\n          <button\r\n            mat-raised-button\r\n            color=\"warn\"\r\n            type=\"button\"\r\n            (click)=\"goBack()\"\r\n          >\r\n            Exit\r\n          </button>\r\n\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </form>\r\n</mat-card>  \r\n\r\n<div class=\"mt-32\">\r\n  <app-audit-log *ngIf=\"isAuditData\" #auditLog></app-audit-log>\r\n</div>","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { MatDialogRef, MatDialog } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Subscription } from 'rxjs';\r\nimport { rumangoAnimations } from 'app/shared/animations/rumango-animations';\r\nimport { AppConfirmService } from 'app/shared/services/app-confirm/app-confirm.service';\r\nimport { AppLoaderService } from 'app/shared/services/app-loader/app-loader.service';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { Location } from '@angular/common';\r\nimport { Data, Router } from '@angular/router';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-clearing-holiday',\r\n  templateUrl: './clearing-holiday.component.html',\r\n  styleUrls: ['./clearing-holiday.component.scss']\r\n})\r\nexport class ClearingHolidayComponent implements OnInit {\r\n  items: string[];\r\n  loading: boolean;\r\n  \r\n\r\n  constructor(\r\n    private dialog: MatDialog,\r\n    private snack: MatSnackBar,\r\n    private confirmService: AppConfirmService,\r\n    private loader: AppLoaderService,\r\n    private apiService:ApiService,\r\n    private ls:LocalStoreService,\r\n    private _location: Location,\r\n    private router:Router,\r\n    private http: HttpClient) { }\r\n\r\n  ngOnInit(): void {\r\n    this.apiService.getBranchHolidayInfo()\r\n      .subscribe(data => {\r\n        this.items = data;\r\n        this.getClearingHoliday();\r\n    this.loading = false;\r\n      })\r\n  }\r\n\r\n\r\n  deleteItem(row) {\r\n    this.confirmService.confirm({message: `Delete ${row.entityCode}?`})\r\n      .subscribe(res => {\r\n        if (res) {\r\n          this.loader.open();\r\n          this.apiService.deleteClearingHoliday(row.id)\r\n            .subscribe(data => {\r\n              this.getClearingHoliday() ;\r\n              this.loader.close();\r\n              this.snack.open('ClearingHoliday deleted!', 'OK', { duration: 4000 })\r\n            })\r\n        }\r\n      })\r\n  }\r\n  getClearingHoliday() {\r\n    this.apiService.getClearingHolidayInfo()\r\n      .subscribe(data => {\r\n        this.items = data;\r\n      })\r\n  }\r\n\r\n}\r\n","<p>clearing-holiday works!</p>\r\n","import { ChangeDetectorRef, Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { DataService } from 'app/shared/services/data.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { AuditLogComponent } from '../../audit-log/audit-log.component';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-add-currency-pair-maintanence',\r\n  templateUrl: './add-currency-pair-maintanence.component.html',\r\n  styleUrls: ['./add-currency-pair-maintanence.component.scss']\r\n})\r\nexport class AddCurrencyPairMaintanenceComponent implements OnInit {\r\n  @ViewChild('auditLog') auditLog : AuditLogComponent\r\n  public branchForm: FormGroup;\r\n  // entity: string[] = [];\r\n  // bankCode: string[] = [];\r\n  currencies:any = [];\r\n  data:any;\r\n  entityCode: any[] = [];\r\n  bankCode: any[] = [];\r\n  entity: any;\r\n  loggedInUser : any;\r\n  isReadOnly: boolean = true;\r\n  isEdit: boolean = false;\r\n  isView: boolean = true;\r\n  show = false;\r\n  editNow : boolean = false;\r\n  entityIsEdit: any;\r\n  id: any;\r\n  auditData : any;\r\n  isAuditData : boolean = false;\r\n    entityCodeArr: any[] = [];\r\n    readorWrite: boolean=true;\r\n\r\n  constructor(private router: Router, private fb: FormBuilder, private apiService: ApiService,\r\n    private snack: MatSnackBar, private cdr: ChangeDetectorRef, private ls:LocalStoreService,private route : ActivatedRoute,private dataService: DataService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.loggedInUser = this.ls.getItem('ICUST_USER');\r\n    console.log(this.loggedInUser);\r\n    this.getEntityDropdown();\r\n    this.buildItemForm({});\r\n    this.getBranchCurrency();\r\n    this.getBankCode();\r\n   \r\n    this.route.queryParamMap.subscribe((params: any) => {\r\n      console.log(params.get('id'));\r\n      this.entityIsEdit = params.get('isEdit');\r\n      console.log(\"this.entityIsEdit\",this.entityIsEdit);\r\n      if(params.get('isEdit') == 'Yes'){\r\n         this.isReadOnly = false;\r\n       this.isView= true;\r\n       this.editNow = true;\r\n      }\r\n      else if(params.get('isEdit') == 'No'){\r\n         this.isReadOnly = true;\r\n         this.isView= true;\r\n        this.editNow = false;\r\n      }\r\n      else if(params.get('isEdit') == 'false'){\r\n        this.isReadOnly = false;\r\n        this.isView= false;\r\n        this.editNow = false;\r\n      }\r\n      else if(params.get('isEdit') == null){\r\n      this.isView= false;\r\n      }\r\n      if(params.get('id')){\r\n        this.isEdit = true;\r\n        this.id = params.get('id');\r\n        this.apiService.editEntityById(params.get('id')).subscribe((resp) =>{\r\n           console.log(resp);\r\n           this.buildItemForm(resp);\r\n        });\r\n          this.apiService.getCurrencyPairById(params.get('id')).subscribe((resp) =>{\r\n          console.log(resp);\r\n          this.buildItemForm(resp);\r\n          this.auditData = resp;\r\n          this.isAuditData = true;\r\n          this.dataService.setAuditLogData(this.auditData);\r\n       });\r\n      }\r\n      else{\r\n        this.readorWrite=false;\r\n        this.buildItemForm({});\r\n      }\r\n    }\r\n    ); \r\n  }\r\n\r\n  buildItemForm(item) {\r\n    console.log(\"selected item 2::\",item)\r\n    //this.getEntityDropdown();\r\n \r\n    this.branchForm = this.fb.group({\r\n      entityCode: [item.entityCode || '', Validators.required], \r\n      bankCode: [item.bankCode || '', Validators.required],\r\n      currency1: [item.currency1 || '', Validators.required],  \r\n      currency2: [item.currency2 || '', Validators.required],\r\n      throughCurrency: [item.throughCurrency || '', Validators.required],\r\n      rateDirect: [item.rateDirect || '', Validators.required],\r\n      spreadAdder: [item.spreadAdder || '',Validators.required],\r\n      id: [item.id || ''],\r\n      authStatus: [item.authStatus || ''],\r\n      isActive:[item.isActive || true],\r\n      oneTimeAuth:[item.oneTimeAuth || ''],\r\n      recordStatus:[item.recordStatus || ''],\r\n      version:[item.version || ''],\r\n      loggedInUser:[item.loggedInUser || ''],\r\n\r\n    });\r\n    \r\n\r\n  }\r\n\r\n  // getEntityCode() {\r\n  //   this.apiService.getEntityCode().subscribe((resp) => {\r\n  //     console.log(\"bankCodeData\", resp)\r\n  //     this.entity = resp;\r\n  //   });\r\n  // }\r\n\r\n  getBankCode() {\r\n    this.apiService.getBankCode().subscribe((resp) => {\r\n     // this.bankCode = resp;\r\n      for(let i=0;i<resp.length;i++){\r\n        if(resp[i].authStatus == 'A'){\r\n          this.bankCode.push(resp[i]);\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  getEntityDropdown(){\r\n    this.apiService.getEntityDropdown().subscribe((data) => {\r\n      console.log(data);\r\n      for(let i=0; i<data.length;i++){\r\n        if(data[i].authStatus==='A'){\r\n          this.entityCode.push(data[i]);\r\n          console.log('auth',i)\r\n        }\r\n      }\r\n\r\n      // this.entityCode = entityCodeResp;\r\n    });   \r\n  }\r\n\r\n  getBranchCurrency(){\r\n    // this.apiService.getCountryValues().subscribe(_list =>{\r\n    //   this.currencies = _list;\r\n    // },(err:any) =>{\r\n    //   console.error(\"Error\", err);\r\n    // })\r\n    this.apiService.getCurrencyDetails().subscribe(data=>{\r\n      console.log(\"Auth currecy details\", data)\r\n      for(let i=0; i<data.length;i++){\r\n        this.currencies.push(data[i].currencyId)\r\n      }\r\n      console.log(this.currencies);\r\n    })\r\n  }\r\n\r\n    \r\n  submit() {\r\n    console.log(\"Form:\",this.branchForm.value);\r\n    if(this.branchForm.invalid){\r\n    return;\r\n    }else{\r\n    console.log(\"payload:\",this.branchForm.value);\r\n    this.branchForm.value.loggedInUser = this.loggedInUser.userName;\r\n    this.apiService.saveCurrencyPair(this.branchForm.value).subscribe(data => {\r\n      console.log(\"data\",data);\r\n      if(data != null && this.isEdit == true){\r\n        this.router.navigate([`/maintenance/main/currencyPairMaintenance`]).then(_=>{\r\n                this.snack.open('Data Updated!', 'OK', \r\n                { duration: 4000 , \r\n                  verticalPosition: \"top\",\r\n                  horizontalPosition: \"right\",});\r\n                });       \r\n        this.cdr.markForCheck();\r\n      }\r\n      else if(data != null || this.isEdit == true){\r\n       // \r\n        console.log(\"data\",data);\r\n        this.router.navigate([`maintenance/main/currencyPairMaintenance`]).then(_=>{\r\n          this.snack.open('Data Saved!', 'OK', \r\n          { duration: 4000 , \r\n            verticalPosition: \"top\",\r\n            horizontalPosition: \"right\",});\r\n          });\r\n        this.cdr.markForCheck();\r\n       }\r\n    }) \r\n    }  \r\n  }\r\n  deleteRecord(operation){\r\n    Swal.fire(\r\n      {\r\n        //text: 'Unable to process' + 'Error ' + this.responseforfileupload.errorMessage + 'Do you want to Proceed??',\r\n        text: 'You are trying to '+ operation +' record.' + ' Do you want to proceed?',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        // confirmButtonText: 'PROCEED.'\r\n        cancelButtonText: 'NO',\r\n        confirmButtonText: 'YES', 'icon': 'info'\r\n      }\r\n    ).then((result => {\r\n      if(result.isConfirmed==true){\r\n        this.apiService.deleteCurrencyPair(this.auditData.id)\r\n        .subscribe(data => {\r\n          this.router.navigate([\"/maintenance/main/currencyPairMaintenance\"]);\r\n        },\r\n        err=>{\r\n          if (err.status == 200) {\r\n            this.snack.open('Record Deleted Successfully', 'OK', {\r\n              duration: 4000,\r\n              verticalPosition: 'top',\r\n              horizontalPosition: 'right'\r\n            });\r\n          }\r\n        \r\n        \r\n      })\r\n      }}))\r\n   \r\n         \r\n       \r\n  }\r\neditRecord(){\r\nthis.readorWrite=false;\r\n}\r\n\r\n  updateRecord(operation) {\r\n    Swal.fire(\r\n      {\r\n        //text: 'Unable to process' + 'Error ' + this.responseforfileupload.errorMessage + 'Do you want to Proceed??',\r\n        text: 'You are trying to '+ operation +' record.' + ' Do you want to proceed?',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        // confirmButtonText: 'PROCEED.'\r\n        cancelButtonText: 'NO',\r\n        confirmButtonText: 'YES', 'icon': 'info'\r\n      }\r\n    ).then((result => {\r\n      if(result.isConfirmed==true){\r\n        console.log(this.id);\r\n        let payload: any = {};\r\n        payload.id = this.id;\r\n        payload.operation = operation;\r\n        payload.loggedInUser = this.loggedInUser.userName;\r\n        this.apiService.getAuditLogsForCurrencyPair(payload).subscribe((data) => {\r\n          console.log(data);\r\n          this.auditData = data;\r\n          this.dataService.setAuditLogData(this.auditData);\r\n          this.isAuditData = true;\r\n          this.dataService.sendClickEvent();\r\n          let message = '';\r\n          switch (operation) {\r\n            case 'open':\r\n              message = 'opened'\r\n              break;\r\n            case 'close':\r\n              message = 'closed'\r\n              break;\r\n            case 'auth':\r\n              message = 'authorized'\r\n              break;\r\n            default:\r\n              break;\r\n          }\r\n          this.snack.open(`Record ${message} successfully!'`, \"OK\", {\r\n            duration: 2000,\r\n            verticalPosition: \"top\",\r\n            horizontalPosition: \"right\",\r\n          });\r\n        });\r\n      }}))\r\n   \r\n  }\r\n\r\n  goBack(){\r\n    this.router.navigate([\"/maintenance/main/currencyPairMaintenance\"]);\r\n  }\r\n  \r\n\r\n\r\n}\r\n","<h1 class=\"main-head\"><small class=\"small-head\">Home > Maintenance Summary > Currency Pair Maintenance > <span *ngIf=\"!isEdit\">New</span> <span *ngIf=\"isEdit\">Edit</span> Currency Pair Maintenance</small></h1>\r\n<div fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"mt-16\">\r\n    <button mat-icon-button (click)=\"goBack()\">\r\n        <mat-icon>arrow_back</mat-icon>\r\n      </button> \r\n      <span *ngIf=\"isEdit\" class=\"text-large\">\r\n        Edit Currency Pair Maintenance\r\n      </span>\r\n      <span *ngIf=\"!isEdit\" class=\"text-large\">\r\n        New Currency Pair Maintenance\r\n      </span>\r\n   </div>\r\n\r\n   <mat-card>\r\n    <mat-card-content>\r\n      <form [formGroup]=\"branchForm\" (ngSubmit)=\"submit()\" class=\"mt-32\">\r\n        <!-- <h1>{{isEdit? 'Edit Branch Info' : 'New Branch Info'}}</h1> -->\r\n        <div fxLayout=\"row wrap\" fxLayout.lt-sm=\"column\">\r\n          <div fxFlex=\"33.33\" class=\"pr-16\" *ngIf=\"!readorWrite\">\r\n            <mat-label>Entity Code * </mat-label>\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n              <mat-select \r\n              name=\"entity\"\r\n              formControlName=\"entityCode\"\r\n              placeholder=\"Entity Code\">\r\n             <mat-option *ngFor=\"let entity of entityCode\" [value]=\"entity.entityCode\">\r\n              {{ entity.entityCode }}\r\n            </mat-option>\r\n            </mat-select>\r\n              <mat-error\r\n              *ngIf=\"branchForm?.get('entityCode').touched && !branchForm?.get('entityCode').valid\">\r\n              Entity Code is Required\r\n          </mat-error>\r\n            </mat-form-field>\r\n          </div>\r\n          <div fxFlex=\"33.33\" class=\"pr-16\" *ngIf=\"readorWrite\">\r\n            <mat-label>Entity Code * </mat-label>\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input matInput [readonly]=\"readorWrite\" name=\"entityCode\" placeholder=\"Spread Adder\" [formControl]=\"branchForm.controls['entityCode']\" />\r\n            </mat-form-field>\r\n          </div>\r\n      \r\n          <div fxFlex=\"33.33\" class=\"pr-16\" *ngIf=\"!readorWrite\">\r\n            <mat-label>Bank Code *</mat-label>\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n              <mat-select name=\"bankCode\"  formControlName=\"bankCode\" placeholder=\"Bank Code\">\r\n                  <mat-option *ngFor=\"let data of bankCode\"  [value]=\"data.bankCode\">\r\n                  {{data.bankCode}}\r\n                  </mat-option>\r\n              </mat-select>\r\n              <mat-error *ngIf=\"branchForm?.get('bankCode').touched && !branchForm?.get('bankCode').valid\">\r\n                Bank Code is Required\r\n              </mat-error>\r\n            </mat-form-field>\r\n          </div>\r\n          <div fxFlex=\"33.33\" class=\"pr-16\" *ngIf=\"readorWrite\">\r\n            <mat-label>Bank Code  * </mat-label>\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input matInput [readonly]=\"readorWrite\" name=\"entityCode\" placeholder=\"Spread Adder\" [formControl]=\"branchForm.controls['bankCode']\" />\r\n            </mat-form-field>\r\n          </div>\r\n      \r\n          <div fxFlex=\"33.33\" class=\"pr-16\" *ngIf=\"!readorWrite\">\r\n            <mat-label>Currency 1 * </mat-label>\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n              <mat-select name=\"currency\" placeholder=\"Currency 1\" [formControl]=\"branchForm.controls['currency1']\" required >\r\n              <mat-option>Select</mat-option>\r\n              <mat-option *ngFor=\"let currency of currencies\"  [value]=\"currency.currencyCode\">\r\n                {{ currency.currencyCode }}\r\n              </mat-option>\r\n             </mat-select>\r\n            <mat-error *ngIf=\"branchForm?.get('currency1').touched && !branchForm?.get('currency1').valid\">\r\n             Currency 1 is Required\r\n           </mat-error>\r\n            </mat-form-field>\r\n          </div>\r\n          <div fxFlex=\"33.33\" class=\"pr-16\" *ngIf=\"readorWrite\">\r\n            <mat-label>Currency 1 * </mat-label>\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input matInput [readonly]=\"readorWrite\" name=\"entityCode\" placeholder=\"Spread Adder\" [formControl]=\"branchForm.controls['currency1']\" />\r\n            </mat-form-field>\r\n          </div>\r\n      \r\n          <div fxFlex=\"33.33\" class=\"pr-16\" *ngIf=\"!readorWrite\">\r\n            <mat-label>Currency 2 *</mat-label>\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n              <mat-select name=\"currency\"  placeholder=\"Currency 2\" [formControl]=\"branchForm.controls['currency2']\"  required >\r\n              <mat-option>Select</mat-option>\r\n              <mat-option *ngFor=\"let currency of currencies\" [value]=\"currency.currencyCode\" >\r\n                {{ currency.currencyCode }}\r\n              </mat-option>\r\n              </mat-select>\r\n              <mat-error *ngIf=\"branchForm?.get('currency2').touched && !branchForm?.get('currency2').valid\">\r\n                Currency 2 is Required\r\n              </mat-error>\r\n            </mat-form-field>\r\n          </div>\r\n          <div fxFlex=\"33.33\" class=\"pr-16\" *ngIf=\"readorWrite\">\r\n            <mat-label>Currency 2 * </mat-label>\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input matInput [readonly]=\"readorWrite\" name=\"entityCode\" placeholder=\"Spread Adder\" [formControl]=\"branchForm.controls['currency2']\" />\r\n            </mat-form-field>\r\n          </div>\r\n      \r\n          <div fxFlex=\"33.33\" class=\"pr-16\" *ngIf=\"!readorWrite\">\r\n            <mat-label>Through Currency *</mat-label>\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n               <mat-select name=\"currency\"  placeholder=\"Through Currency\" [formControl]=\"branchForm.controls['throughCurrency']\" required >\r\n                <mat-option>Select</mat-option>\r\n                <mat-option *ngFor=\"let currency of currencies\"  [value]=\"currency.currencyCode\">\r\n                  {{ currency.currencyCode }}\r\n                </mat-option>\r\n               </mat-select>\r\n              <mat-error *ngIf=\"branchForm?.get('throughCurrency').touched && !branchForm?.get('throughCurrency').valid\">\r\n               Through Currency is Required!\r\n              </mat-error>\r\n               \r\n            </mat-form-field>\r\n        \r\n          </div>\r\n          <div fxFlex=\"33.33\" class=\"pr-16\" *ngIf=\"readorWrite\">\r\n            <mat-label>Through Currency * </mat-label>\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input matInput [readonly]=\"readorWrite\" name=\"entityCode\" placeholder=\"Spread Adder\" [formControl]=\"branchForm.controls['throughCurrency']\" />\r\n            </mat-form-field>\r\n          </div>\r\n\r\n          <div fxFlex=\"33.33\" class=\"pr-16\"  *ngIf=\"!readorWrite\">\r\n            <mat-label>Rate Direct *</mat-label>\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n              <mat-select name=\"tillOrVault\" formControlName=\"rateDirect\" placeholder=\"Rate Direct\">\r\n              <mat-option value=\"D\">D</mat-option>\r\n              <mat-option value=\"I\">I</mat-option>\r\n              </mat-select>\r\n              <!-- <input matInput name=\"rateDirect\" [formControl]=\"branchForm.controls['rateDirect']\"/> -->\r\n              <mat-error *ngIf=\"branchForm?.get('rateDirect').touched && !branchForm?.get('rateDirect').valid\">\r\n                Rate Direct is Required!\r\n               </mat-error>\r\n            </mat-form-field>\r\n        \r\n          </div>\r\n\r\n          <div fxFlex=\"33.33\" class=\"pr-16\" *ngIf=\"readorWrite\">\r\n            <mat-label>Rate Direct * </mat-label>\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input matInput [readonly]=\"readorWrite\" name=\"entityCode\" placeholder=\"Spread Adder\" [formControl]=\"branchForm.controls['rateDirect']\" />\r\n            </mat-form-field>\r\n          </div>\r\n\r\n          <div fxFlex=\"33.33\" class=\"pr-16\">\r\n            <mat-label>Spread Adder *</mat-label>\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n              <input matInput [readonly]=\"readorWrite\" name=\"spreadAdder\" placeholder=\"Spread Adder\" [formControl]=\"branchForm.controls['spreadAdder']\" />\r\n              <mat-error *ngIf=\"branchForm?.get('spreadAdder').touched && !branchForm?.get('spreadAdder').valid\">\r\n                Spread Adder is Required!\r\n               </mat-error>\r\n            </mat-form-field>\r\n          </div>\r\n        </div>\r\n    \r\n        <div fxLayout=\"row wrap\" fxLayout.lt-sm=\"column\">\r\n          <div fxFlex=\"100\" class=\"mt-16\" fxLayoutAlign=\"end center\" fxLayoutGap=\"10px\">\r\n            <!-- <div>\r\n              <button mat-raised-button color=\"primary\" [disabled]=\"!(branchForm.valid && branchForm.dirty)\" *ngIf=\"!isEdit\">{{\"SAVE\"\r\n                }}</button>\r\n            </div>\r\n            <div>\r\n              <button mat-raised-button color=\"primary\" [disabled]=\"!(branchForm.valid && branchForm..dirty)\" *ngIf=\"isEdit\">{{\"UPDATE\"\r\n                }}</button>\r\n            </div> -->\r\n            <div>\r\n              <button *ngIf=\"!isEdit\" mat-raised-button color=\"primary\" [disabled]=\"!(branchForm.valid && branchForm.dirty)\"\r\n                (click)=\"submit()\">\r\n                Save\r\n              </button>&nbsp;&nbsp;\r\n            </div>\r\n            <div [hidden]=\"readorWrite\">\r\n              <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"submit(branchForm.value)\"\r\n                [disabled]=\"!(branchForm.valid && branchForm.dirty)\">\r\n                Save\r\n              </button>&nbsp;&nbsp;\r\n            </div>\r\n            <div [hidden]=\"!readorWrite || auditData?.recordStatus == 'Close'\">\r\n              <button *ngIf=\"isEdit\" type=\"button\"  mat-raised-button color=\"primary\" (click)=\"editRecord()\">\r\n                Edit\r\n              </button>&nbsp;&nbsp;\r\n            </div>\r\n            <div *ngIf=\"auditData?.authStatus == 'Unauthorized' && readorWrite\" [hidden]=\"!readorWrite\">\r\n              <button *ngIf=\"isEdit\" type=\"button\"  mat-raised-button color=\"primary\" (click)=\"updateRecord('auth')\">\r\n                Authorize\r\n              </button>&nbsp;&nbsp;\r\n            </div> \r\n            <div *ngIf=\"auditData?.recordStatus == 'Close' && auditData?.oneTimeAuth != 'No'\" [hidden]=\"!readorWrite\">\r\n              <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"updateRecord('open')\">\r\n                Reopen\r\n              </button>&nbsp;&nbsp;\r\n            </div>\r\n            <div *ngIf=\"auditData?.recordStatus == 'Open' && auditData?.oneTimeAuth != 'No'\" [hidden]=\"!readorWrite\">\r\n              <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"updateRecord('close')\">\r\n                Close\r\n              </button>&nbsp;&nbsp;\r\n            </div>\r\n            <div *ngIf=\"auditData?.oneTimeAuth == 'No'\" [hidden]=\"!readorWrite\">\r\n              <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"deleteRecord('delete')\">\r\n                Delete\r\n              </button> &nbsp;&nbsp;\r\n            </div>\r\n           \r\n            <button\r\n              mat-raised-button\r\n              color=\"warn\"\r\n              type=\"button\"\r\n              (click)=\"goBack()\"\r\n            >\r\n              Exit\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </mat-card-content>\r\n  </mat-card>\r\n\r\n  <div class=\"mt-32\">\r\n    <app-audit-log *ngIf=\"isAuditData\" #auditLog></app-audit-log>\r\n  </div>","import { ChangeDetectorRef, Component, OnInit, ViewChild } from '@angular/core';\r\nimport { Form, FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router , ActivatedRoute} from '@angular/router';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { AuditLogComponent } from '../audit-log/audit-log.component';\r\nimport { DataService } from 'app/shared/services/data.service';\r\nimport { flow } from 'lodash';\r\nimport { flatMap, filter } from 'lodash/fp';\r\nimport { select } from '@syncfusion/ej2-schedule';\r\nimport { roleAuditLogInterface } from './add-role-maintenance.component';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-role-maintenance',\r\n  templateUrl: './role-maintenance.component.html',\r\n  styleUrls: ['./role-maintenance.component.scss']\r\n})\r\nexport class RoleMaintenanceComponent implements OnInit {\r\n  @ViewChild('auditLog') auditLog : AuditLogComponent\r\n  public roleForm: FormGroup;\r\n  selectAllChecked: boolean=false;\r\n  hideSelect: boolean=true; \r\n  isDisable:boolean = true;\r\n  isEdit:boolean = false;\r\n  auditData : roleAuditLogInterface;\r\n  isAuditData : boolean = false\r\n  roleScreenList: any;\r\n  public selectedtab: string;\r\n  indexdata: any;\r\n  screenName:any = [];\r\n  editFlag = false;\r\n  loggedInUser : any;\r\n  id: any;\r\n  //dataService: any;\r\n  enableFinish: boolean=false;\r\n // permissions:any [] = [];\r\n  selectedCheckbox: any[] = [];\r\n  getarr: any[] = [];\r\n // selectedCheckbox:any;\r\n  isReadOnly: boolean = true;\r\n  isView: boolean = true;\r\n  show = false;\r\n  editNow : boolean = false;\r\n  permissions: any[] = [];\r\n  childarr: any[] = [];\r\n  childPer: string=\"\";\r\n  parentPermission: any;\r\n  parentSelector: boolean = false;\r\n  checked = false;\r\n  testvar: any;\r\n  checkedcheckbox:boolean=true;\r\n  tellerRoleName:any=[];\r\n  selectedrole: string;\r\n  selectRole: any;\r\n  readorWrite: boolean=true;\r\n  allRoles: any[] = [];\r\n  selectedTabId: any;\r\n  tabIndex: any;\r\n  isSelectedAll:boolean = false;\r\n\r\n\r\n  constructor(private apiService: ApiService, private router:Router, private route: ActivatedRoute,\r\n    private snack: MatSnackBar, private ls: LocalStoreService, private fb: FormBuilder, private cdr: ChangeDetectorRef, private dataService: DataService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.buildItemForm({});\r\n    this.loggedInUser = this.ls.getItem('ICUST_USER');\r\n    this.getScreenPermissions();\r\n\r\n    this.route.queryParamMap.subscribe((params: any) => {\r\n      // this.entityIsEdit = params.get('isEdit');\r\n      // console.log(\"this.entityIsEdit\",this.entityIsEdit);\r\n      if(params.get('isEdit') == 'Yes'){\r\n         this.isReadOnly = false;\r\n       this.isView= true;\r\n       this.editNow = true;\r\n      }\r\n      else if(params.get('isEdit') == 'No'){\r\n         this.isReadOnly = true;\r\n         this.isView= true;\r\n        this.editNow = false;\r\n      }\r\n      else if(params.get('isEdit') == 'false'){\r\n        this.isReadOnly = false;\r\n        this.isView= false;\r\n        this.editNow = false;\r\n      }\r\n      else if(params.get('isEdit') == null){\r\n      this.isView= false;\r\n      }\r\n      if(params.get('id')){\r\n        this.isEdit = true;\r\n        this.id = params.get('id');\r\n        this.apiService.fetchRoleById(params.get('id')).subscribe((resp: any) =>{\r\n           console.log(resp);\r\n          this.selectedrole=\"Customer Onboarding\";\r\n          this.testvar = resp;\r\n          var roleTab\r\n          for(let i=0;i<resp.permissionInfo.length; i++ ){\r\n            this.getPermissionInfo(resp.permissionInfo[i].permissionId.screenId);\r\n          console.log(this.allRoles);\r\n          \r\n           var screen= resp.screenInfo.filter((item)=>{\r\n            return  item.screenId===resp.permissionInfo[i].permissionId.screenId\r\n            })\r\n            console.log(this.childarr,screen);\r\n           this.childarr.push(screen[0].screenName);\r\n           roleTab = resp.tabInfo.filter((tabData)=>{\r\n           return tabData.tabId==screen[0].tabId\r\n           })\r\n            console.log(roleTab);\r\n          }\r\n          //this.selectedrole=roleTab[0].tabName.toUpperCase();\r\n          this.buildItemForm(resp.roleInfo);\r\n          this.tabSelection(roleTab[0].tabId,roleTab[0].tabName.toUpperCase());\r\n  \r\n          this.childPer = resp.childPermission + ',';\r\n          if( resp.roleInfo.authStatus==\"U\" ){\r\n            resp.roleInfo.authDate =\"\"\r\n            resp.roleInfo.authBy=\"\"\r\n          }\r\n\r\n          this.auditData = resp.roleInfo;\r\n          this.isAuditData = true;\r\n          this.dataService.setAuditLogData(this.auditData);\r\n          this.dataService.sendClickEvent();\r\n        \r\n          \r\n        });\r\n      }\r\n      else{\r\n        this.readorWrite=false;\r\n        this.buildItemForm({});\r\n     \r\n      }\r\n    }\r\n    ); \r\n  }\r\n  \r\n  createPermissionFields(): any {\r\n    return this.fb.group({\r\n      permissionId: {\r\n        roleName: [''],\r\n        screenId: ['']\r\n      },\r\n      version: ['']\r\n    })\r\n\r\n  }\r\n getScreenPermissions(){\r\n  this.apiService.fetchScreenPermissions().subscribe((response:any) => {//parent api\r\n    this.tellerRoleName=response;\r\nfor(let i=0; i< response.length; i++){\r\n  this.tellerRoleName[i].tabName=this.tellerRoleName[i].tabName.toUpperCase();\r\n  this.tellerRoleName[i].selected=false;\r\n  this.apiService.fetchRolePermissionByTabID(this.tellerRoleName[i].tabId).subscribe((resp) => {\r\n    console.log(resp);\r\n    for(let i = 0; i < resp.length; i++){\r\n      resp[i].checked = false;\r\n      this.allRoles.push(resp[i]);\r\n    }\r\n  })\r\n} \r\n  }); \r\n  console.log(this.allRoles);\r\n}\r\ngetPermissionInfo(screenId){\r\n  for(let j = 0; j < this.allRoles.length; j++){\r\n    if(this.allRoles[j].screenId == screenId){\r\n      this.allRoles[j].checked = true;\r\n      for(let k = 0; k < this.tellerRoleName.length; k++){\r\n        if(this.tellerRoleName[k].tabId == this.allRoles[j].tabId){\r\n          this.tellerRoleName[k].selected = true;\r\n          break;\r\n        }\r\n      }\r\n      break;\r\n  }\r\n} \r\n}\r\n  onChange($event) {\r\n    const screenName = $event.target.value;\r\n    const isChecked = $event.target.checked;\r\n    this.roleScreenList = this.roleScreenList.map((d) => {\r\n      if (d.screenName == screenName) {\r\n        d.checked = isChecked;\r\n        this.parentSelector = true;\r\n        return d;\r\n      }\r\n      if (screenName == -1) {\r\n        d.checked = this.parentSelector;\r\n        return d;\r\n      }\r\n      return d;\r\n    });\r\n  }\r\n \r\n \r\n\r\n  \r\n\r\n  buildItemForm(item) {\r\n    this.roleForm = this.fb.group({\r\n      screenName:[''],\r\n      id: [''],\r\n      authStatus: [''],\r\n      isActive:[true],\r\n      oneTimeAuth:[''],\r\n      recordStatus:[''],\r\n      version:[''],\r\n      loggedInUser:[''],\r\n      authBy:[''],\r\n      authDate: [''],\r\n      permissions: this.fb.array([this.createPermissionFields()]),\r\n      roleId: [item? item.id:''],\r\n      selectAllRole:[false],\r\n      roleName: [item? item.roleName :'',[Validators.required]],\r\n      roleDesc:[item? item.roleDesc : '',[Validators.required]],\r\n      }) \r\n  }\r\n\r\n\r\n  \r\n\r\n  onChecklistChange(checked, checkbox, index?) {\r\n    console.log('checked',checked)\r\n    console.log('checkbox', checkbox)\r\n    // var roleObj;\r\n    if (checked.checked==true) {\r\n      this.allRoles[index].checked = true\r\n      this.tellerRoleName[this.tabIndex].selected = true; \r\n      // roleObj = \r\n      // {\r\n      //   \"permissionId\": {\r\n      //     \"roleName\": this.roleForm.value.roleName,\r\n      //     \"screenId\": checkbox.screenId\r\n      //   },\r\n      //   \"version\": 0\r\n      // }\r\n      // console.log('roleObj',roleObj)\r\n\r\n      // this.permissions.push(roleObj)\r\n    } else {\r\n      this.allRoles[index].checked = false;\r\n      // var index1 = this.permissions.findIndex(x => x.screenName == checkbox.screenName);\r\n      // this.permissions.splice(index1, 1);\r\n    }\r\n    // if(this.permissions.length == this.roleScreenList.length)\r\n    // this.roleForm.controls.selectAllRole.setValue(true);\r\n    // else this.roleForm.controls.selectAllRole.setValue(false);\r\n    let selectedItemLength = this.allRoles.filter(role => role.tabId == this.selectedTabId && role.checked == true).length;\r\n    this.isSelectedAll = this.allRoles.filter(role => role.tabId == this.selectedTabId).length == selectedItemLength;\r\n    if(selectedItemLength < 1){\r\n      this.tellerRoleName[this.tabIndex].selected = false;\r\n    }\r\n\r\n  }\r\n\r\n\r\n  goBack(){\r\n    this.router.navigate([\"/maintenance/main/roleMaintenance\"]);\r\n  }\r\n\r\n\r\n  submit(form) {\r\n    console.log('click',this.roleScreenList);\r\n     console.log(\"Form:\",form);\r\n \r\n    this.roleForm.value.loggedInUser = this.loggedInUser.userName;\r\n    console.log(this.roleForm);\r\n    this.allRoles.map(role => {\r\n      if (role.checked == true) {\r\n        let roleObj;\r\n        roleObj =\r\n        {\r\n          \"permissionId\": {\r\n            \"roleName\": this.roleForm.value.roleName,\r\n            \"screenId\": role.screenId\r\n          },\r\n          \"version\": 0\r\n        }\r\n        this.permissions.push(roleObj)\r\n      }\r\n    }) \r\n    if(this.permissions.length == this.allRoles.length){\r\n      this.roleForm.controls.selectAllRole.setValue(true);\r\n    }   \r\n    else{\r\n      this.roleForm.controls.selectAllRole.setValue(false);\r\n    }\r\n    console.log('this.roleForm.value',this.roleForm.value)\r\n      this.roleForm.value.permissions = this.permissions;\r\n    console.log('perm', this.permissions)\r\n    for (let i = 0; i < this.permissions.length; i++){\r\n      console.log(this.permissions[i].permissionId.roleName);\r\n      if (i == this.permissions.length - 1) {\r\n        this.childPer= this.childPer+this.permissions[i].permissionId.roleName; \r\n      } else {\r\n        this.childPer= this.childPer+this.permissions[i].permissionId.roleName + ',';\r\n      }\r\n\r\n      this.parentPermission = \"Teller Dashboard\";\r\n    \r\n    }\r\n   // this.roleForm.value.childPermission = this.childPer;\r\n\r\n    this.roleForm.value.id = this.roleForm.value.roleId; \r\n    this.roleForm.value.parentPermission=this.selectedrole;  \r\n    this.apiService.saveRole(this.roleForm.value).subscribe(data => {\r\n      console.log(\"data\",data);\r\n      if(data != null && this.isEdit == true){\r\n        this.router.navigate([`/maintenance/main/roleMaintenance`]).then(_=>{\r\n                this.snack.open('Data Updated!', 'OK', \r\n                { duration: 4000 , \r\n                  verticalPosition: \"top\",\r\n                  horizontalPosition: \"right\",});\r\n                });       \r\n        this.cdr.markForCheck();\r\n      }\r\n      else if(data != null || this.isEdit == true){\r\n       // \r\n        console.log(\"data\",data);\r\n        this.router.navigate([`/maintenance/main/roleMaintenance`]).then(_=>{\r\n          this.snack.open('Data Saved!', 'OK', \r\n          { duration: 4000 , \r\n            verticalPosition: \"top\",\r\n            horizontalPosition: \"right\",});\r\n          });\r\n        this.cdr.markForCheck();\r\n       }\r\n    }) \r\n    //}  \r\n  }\r\n  selectAll(event) {\r\n\r\n    \r\n    for (let i = 0; i < this.allRoles.length; i++) {\r\n      if(this.allRoles[i].tabId == this.selectedTabId){\r\n      if (event.checked == true){\r\n        this.allRoles[i].checked = true;\r\n        this.tellerRoleName[this.tabIndex].selected = true;\r\n        this.isSelectedAll = true\r\n        \r\n        // this.roleScreenList[i].checked = true;\r\n        // this.onChecklistChange(event, this.roleScreenList[i]);\r\n      }\r\n      else{\r\n        this.allRoles[i].checked = false;\r\n        this.tellerRoleName[this.tabIndex].selected = true;\r\n        this.isSelectedAll = false\r\n      }\r\n    }\r\n      // else { this.roleScreenList[i].checked = false;\r\n        // this.onChecklistChange(event, this.roleScreenList[i]);\r\n      // }\r\n    }\r\n    let selectedItemLength = this.allRoles.filter(role => role.tabId == this.selectedTabId && role.checked == true).length;\r\n    this.isSelectedAll = this.allRoles.filter(role => role.tabId == this.selectedTabId).length == selectedItemLength;\r\n    if(selectedItemLength < 1){\r\n      this.tellerRoleName[this.tabIndex].selected = false;\r\n    }\r\n  }\r\n  \r\n  \r\n\r\n  \r\n  updateRecord(operation) {\r\n    Swal.fire(\r\n      {\r\n        //text: 'Unable to process' + 'Error ' + this.responseforfileupload.errorMessage + 'Do you want to Proceed??',\r\n        text: 'You are trying to '+ operation +' record.' + ' Do you want to proceed?',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        // confirmButtonText: 'PROCEED.'\r\n        cancelButtonText: 'NO',\r\n        confirmButtonText: 'YES', 'icon': 'info'\r\n      }\r\n    ).then((result => {\r\n      if(result.isConfirmed==true){\r\n    let payload: any = {};\r\n    payload.id = this.id;\r\n    payload.operation = operation;\r\n    payload.loggedInUser = this.loggedInUser.userName;\r\n\r\n    console.log(payload)\r\n    this.apiService.getAuditLogsForRoleMaintenance(payload).subscribe((data) => {\r\n      console.log(data);\r\n      if( data.authStatus==\"U\" ){\r\n        data.authDate = \"\"\r\n        data.authBy = \"\"\r\n        }\r\n      this.auditData = data;\r\n      this.dataService.setAuditLogData(this.auditData);\r\n      this.isAuditData = true;\r\n      this.dataService.sendClickEvent();\r\n      let message = '';\r\n      switch (operation) {\r\n        case 'open':\r\n          message = 'opened'\r\n          break;\r\n        case 'close':\r\n          message = 'closed'\r\n          break;\r\n        case 'auth':\r\n          message = 'authorized'\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n      this.snack.open(`Record ${message} successfully!'`, \"OK\", {\r\n        duration: 2000,\r\n        verticalPosition: \"top\",\r\n        horizontalPosition: \"right\",\r\n      });\r\n    });\r\n   }}))\r\n    \r\n  }\r\n  tabSelection(tabId,name,index?){\r\n    this.hideSelect = false;\r\n    this.selectedTabId = tabId\r\n    this.tabIndex = index;\r\n    this.selectedrole=name;\r\n    this.isSelectedAll = this.allRoles.filter(role => role.tabId == this.selectedTabId).length == this.allRoles.filter(role => role.tabId == this.selectedTabId && role.checked == true).length\r\n\r\n    //  this.roleForm.controls.selectAllRole.setValue(false);\r\n    //   this.apiService.fetchRolePermissionByTabID(tabId).subscribe((response) => {\r\n\r\n      // this.roleScreenList = response;\r\n      // console.log('test', this.roleScreenList)\r\n      // for (let i = 0; i < this.roleScreenList.length; i++){\r\n      //   this.roleScreenList[i].checked = false;\r\n      // }\r\n      // console.log('roleScreenList', this.roleScreenList);\r\n      // for (let k = 0; k < this.childarr.length; k++) { \r\n      //   this.getarr= this.roleScreenList.filter((val) => {\r\n      //     return val.screenName == this.childarr[k];\r\n      //   })\r\n      //   const index = this.roleScreenList.findIndex(object => {\r\n      //     return object.screenName ==this.childarr[k];\r\n      //   })\r\n      //   console.log(index);\r\n      //   for (let j = 0; j < this.getarr.length; j++){\r\n      //     this.roleScreenList[index].checked = true;\r\n      //   }\r\n      // }\r\n      \r\n\r\n      // console.log(this.getarr, this.roleScreenList);\r\n      // this.enableSelectAll(this.roleScreenList);\r\n      //  for(let i = 0;i < response[i];i++){\r\n      //   this.screenName = response[i].screenName;\r\n      //  }\r\n    // });\r\n  }\r\n\r\n  enableSelectAll(role){\r\n    var selectAllreturn= role.filter((item)=>{\r\n      return item.checked == false;\r\n         })\r\n      if(selectAllreturn.length==0)\r\n      this.roleForm.controls.selectAllRole.setValue(true);\r\n      else  this.roleForm.controls.selectAllRole.setValue(false);\r\n  }\r\n  deleteRecord(operation) {\r\n    Swal.fire(\r\n      {\r\n        text: 'You are trying to '+ operation +' record.' + ' Do you want to proceed?',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        cancelButtonText: 'NO',\r\n        confirmButtonText: 'YES', 'icon': 'info'\r\n      }\r\n    ).then((result => {\r\n      if(result.isConfirmed==true){\r\n        this.apiService.deleteRole(this.auditData.id)\r\n        .subscribe(data => {\r\n        },\r\n          err=>{\r\n            if (err.status == 200) {\r\n              this.snack.open('Record Deleted Successfully', 'OK', {\r\n                duration: 4000,\r\n                verticalPosition: 'top',\r\n                horizontalPosition: 'right'\r\n              });\r\n             \r\n            }\r\n            \r\n        })\r\n      }}))}\r\n  \r\n\r\n}\r\n","\r\n <h1 class=\"main-head\"><small class=\"small-head\">Home > Maintenance Summary > Role Maintenance > <span *ngIf=\"!isEdit\">Add</span><span *ngIf=\"isEdit\">Edit</span> Role </small></h1>  \r\n<div fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"mt-16\">\r\n    <button mat-icon-button (click)=\"goBack()\">\r\n        <mat-icon>arrow_back</mat-icon>\r\n      </button> \r\n      <span *ngIf=\"isEdit\" class=\"text-large\">\r\n        Edit Role\r\n      </span>\r\n      <span *ngIf=\"!isEdit\" class=\"text-large\">\r\n        New Role \r\n      </span>\r\n   </div>\r\n   <br>\r\n\r\n   <mat-card>\r\n    <form [formGroup]=\"roleForm\"  class=\"mt-32\">\r\n      <div  fxLayoutAlign=\"space-between center\" fxLayoutGap=\"15px\">\r\n        <div fxFlex=\"50\" class=\"pr-16\">\r\n          <mat-label>Role Name*</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n              <input \r\n                  matInput   type=\"texts\"\r\n                  formControlName=\"roleName\"  \r\n                  [readonly]=\"readorWrite\"\r\n                  placeholder=\"Enter Role Name\"\r\n              />\r\n              <mat-error  *ngIf=\"!roleForm.get('roleName').valid  && roleForm.get('roleName').touched\">\r\n                Role Name is Required!\r\n              </mat-error>\r\n          </mat-form-field>\r\n          \r\n      </div>\r\n      <div fxFlex=\"50\" class=\"pr-16\">\r\n        <mat-label>Role Description*</mat-label>\r\n        <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input \r\n                matInput \r\n                formControlName=\"roleDesc\" \r\n                [readonly]=\"readorWrite\" \r\n                placeholder=\"Enter Role Description\"\r\n            />\r\n            <mat-error *ngIf=\"!roleForm.get('roleDesc').valid  && roleForm.get('roleDesc').touched\">\r\n              Role Description is Required!\r\n            </mat-error>\r\n        </mat-form-field>\r\n        \r\n    </div>\r\n      </div><br>\r\n      {{selectedrole}}\r\n      <div class=\"col-lg-12\">\r\n        <div class=\"row justify-content-center\"  >\r\n          <div class=\"col-auto\" *ngFor=\"let role of tellerRoleName; let i = index\">\r\n            <div [ngClass]=\"(selectedrole == role.tabName|| role.selected)? 'mr-38 btnAfter':'mr-38 btnBefore'\" (click)=\"tabSelection(role.tabId, role.tabName, i)\"   >\r\n              {{role.tabName}}\r\n            </div>\r\n          </div>\r\n         \r\n        </div>\r\n      </div>\r\n      <!-- <div *ngFor=\"let role of roleName\">\r\n        <button mat-flat-button color=\"primary\" class=\"mr-38\" (click)=\"tabSelection()\"  style=\"height: 45px; margin-left: 1cm;\" >\r\n          {{role.tabName}}\r\n        </button>\r\n      </div> -->\r\n    <br>\r\n    <div class=\"dbCardStyle\">\r\n        <div [hidden]=\"hideSelect\" class=\"form-check pl-4\">\r\n          \r\n          <!-- <input type=\"checkbox\" class=\"form-check-input\" (change)=\"pk($event)\"> -->\r\n          <mat-checkbox\r\n          [checked]=\"isSelectedAll\"\r\n          class=\"form-check-input\" \r\n          [disabled]=\"readorWrite\"\r\n          (change)=\"selectAll($event)\" >\r\n                Select ALL\r\n          </mat-checkbox>\r\n\r\n        </div>\r\n         \r\n    \r\n    <!-- <div *ngIf=\"isEdit\"> -->\r\n      <div class=\"table-responsive\">\r\n        <table id=\"dbTable1\" class=\"table tableStyle\" >\r\n        <thead>\r\n          <tr class=\"screen\">\r\n            <h2 style=\"margin-left:10px\">Screen</h2>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr class = \"screenList\" *ngFor=\"let roles of allRoles ; let i = index\" >  \r\n            <td *ngIf=\"roles.tabId == selectedTabId\">\r\n              <div class=\"form-check\">\r\n                <mat-checkbox\r\n                class=\"checkbox-margin\" color=\"primary\" (change)=\"onChecklistChange($event, roles, i)\"\r\n                [value]=\"roles\"\r\n                [disabled]=\"readorWrite\"\r\n                [checked]=\"roles.checked\"\r\n                >{{ roles.screenName }}\r\n              </mat-checkbox>\r\n                </div>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n    <!-- </div> -->\r\n      </div>\r\n       \r\n      <div fxLayout=\"row wrap\" fxLayout.lt-sm=\"column\">\r\n        <div fxFlex=\"100\" class=\"mt-16\" fxLayoutAlign=\"end center\">\r\n          <button *ngIf=\"!isEdit\" \r\n            color=\"primary\" \r\n            mat-raised-button \r\n            (click)=\"submit(roleForm.value)\"\r\n            [disabled]=\"!roleForm.valid\"\r\n          >\r\n            Save\r\n         \r\n          </button> \r\n          <div [hidden]=\"readorWrite\">\r\n            <button *ngIf=\"isEdit\"  type=\"button\" mat-raised-button color=\"primary\"\r\n\r\n            [disabled]= \"!roleForm.valid\" \r\n            (click)=\"submit(roleForm.value)\">\r\n               Save\r\n             </button>\r\n          </div>  \r\n       \r\n          &nbsp; \r\n          <div [hidden]=\"!readorWrite || auditData?.recordStatus == 'Close'\">\r\n            <button *ngIf=\"isEdit\" type=\"button\"  mat-raised-button color=\"primary\" (click)=\"readorWrite=false\" >\r\n              Edit\r\n            </button>&nbsp;&nbsp;\r\n          </div>\r\n          <div *ngIf=\"auditData?.authStatus == 'Unauthorized' && readorWrite\" [hidden]=\"!readorWrite\">\r\n            <button *ngIf=\"isEdit\" type=\"button\"  mat-raised-button color=\"primary\" (click)=\"updateRecord('auth')\">\r\n              Authorize\r\n            </button>&nbsp;&nbsp;\r\n          </div> \r\n          <div *ngIf=\"auditData?.recordStatus == 'Close' && auditData?.oneTimeAuth != 'No'\" [hidden]=\"!readorWrite\">\r\n            <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"updateRecord('open')\">\r\n              Reopen\r\n            </button>&nbsp;&nbsp;\r\n          </div>\r\n          <div *ngIf=\"auditData?.recordStatus == 'Open' && auditData?.oneTimeAuth != 'No'\" [hidden]=\"!readorWrite\">\r\n            <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"updateRecord('close')\">\r\n              Close\r\n            </button>&nbsp;&nbsp;\r\n          </div>\r\n          <div *ngIf=\"auditData?.oneTimeAuth == 'No'\" [hidden]=\"!readorWrite\">\r\n            <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"deleteRecord('delete')\">\r\n              Delete\r\n            </button> &nbsp;&nbsp;\r\n          </div>\r\n         \r\n          <button\r\n            mat-raised-button\r\n            color=\"warn\"\r\n            type=\"button\"\r\n            (click)=\"goBack()\"\r\n          >\r\n            Exit\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n   </mat-card>\r\n\r\n\r\n   <div *ngIf=\"auditData\" class=\"mt-32\">\r\n    <app-audit-log #auditLog></app-audit-log>\r\n  </div>","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { AppLoaderService } from 'app/shared/services/app-loader/app-loader.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\n\r\n@Component({\r\n  selector: 'app-add-edit-menu-details',\r\n  templateUrl: './add-edit-menu-details.component.html',\r\n  styleUrls: ['./add-edit-menu-details.component.scss']\r\n})\r\nexport class AddEditMenuDetailsComponent implements OnInit {\r\n  menuDetailsForm: FormGroup;\r\n  loggedInUser: any;\r\n  menuIsEdit: boolean = false;\r\n  isEdit: boolean = false;\r\n  id: number;\r\n  parentMenus: any;\r\n\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private loader: AppLoaderService,\r\n    private snack: MatSnackBar,\r\n    private apiService: ApiService,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private ls: LocalStoreService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.buildMenuForm({});\r\n    this.getParentMenus();\r\n    this.loggedInUser = this.ls.getItem('ICUST_USER');\r\n  }\r\n\r\n  buildMenuForm(item: any) {\r\n    this.menuDetailsForm = this.fb.group({\r\n      id: [item.id || null],\r\n      screenCode: [item.screenCode || '', Validators.required],\r\n      screenName: [item.screenName || \"\", Validators.required],\r\n      parentId: [item.parentId || \"\", Validators.required],\r\n      routing: [item.routing || \"\", Validators.required],\r\n      status: true,\r\n    });\r\n  }\r\n  getParentMenus() {\r\n    this.apiService.getMaintenanceParentMenu().subscribe((res: any) => {\r\n      this.parentMenus = res;\r\n    }, (err: any) => {\r\n\r\n    })\r\n  }\r\n  submit() {\r\n    let payload: any = {};\r\n    payload = this.menuDetailsForm.value;\r\n    payload.loggedInUser = this.loggedInUser.userName;\r\n    this.loader.open();\r\n    this.apiService.upsertMenu(payload).subscribe(res => {\r\n      this.loader.close();\r\n      this.snack.open('Data Saved Successfully!', 'OK',\r\n        {\r\n          duration: 4000,\r\n          verticalPosition: \"top\",\r\n          horizontalPosition: \"right\",\r\n        });\r\n      this.router.navigate([`/maintenance/main/menu-config`]);\r\n    }, err => {\r\n      this.loader.close();\r\n      this.snack.open('Unable to Save!', 'Error',\r\n        {\r\n          duration: 4000,\r\n          verticalPosition: \"top\",\r\n          horizontalPosition: \"right\",\r\n        });\r\n      this.router.navigate([`/maintenance/main/menu-config`]);\r\n    })\r\n  }\r\n\r\n  goBack() {\r\n    this.router.navigate([`/maintenance/main/menu-config`]);\r\n  }\r\n}\r\n\r\n\r\n","\r\n<h1 class=\"main-head\"><small class=\"small-head\">Home >  Maintenance Summary > Menu Maintenance > New Menu Maintenance</small></h1>\r\n<div fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"mt-16\">\r\n    <button mat-icon-button (click)=\"goBack()\" >\r\n        <mat-icon>arrow_back</mat-icon>\r\n      </button> \r\n      <span class=\"text-large\">\r\n        New Menu\r\n      </span>\r\n   </div>\r\n  \r\n  \r\n    <mat-card>\r\n    <mat-card-content>\r\n      <form [formGroup]=\"menuDetailsForm\" class=\"mt-32\">\r\n        <!-- <h1>{{isEdit? 'Edit Branch Info' : 'New Branch Info'}}</h1> -->\r\n        <div fxLayout=\"row wrap\" fxLayout.lt-sm=\"column\">\r\n          <div fxFlex=\"33.33\" class=\"pr-16\">\r\n            <mat-label>Screen Name *</mat-label>\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n              <input \r\n                  matInput name=\"screenName\"\r\n                  type=\"text\"\r\n                  formControlName=\"screenName\"\r\n                  placeholder=\"Screen Name\"\r\n              />\r\n              <mat-error\r\n              *ngIf=\"menuDetailsForm.get('screenName').touched && !menuDetailsForm.get('screenName').valid\">\r\n              Screen Name is Required\r\n            </mat-error>\r\n          </mat-form-field>\r\n           \r\n          </div>\r\n      \r\n          <div fxFlex=\"33.33\" class=\"pr-16\">\r\n            <mat-label>Screen Code * </mat-label>\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n              <input matInput name=\"screenCode\"\r\n              type=\"text\" formControlName=\"screenCode\" \r\n              placeholder=\"Screen Code\"/>\r\n              <mat-error\r\n              *ngIf=\"menuDetailsForm.get('screenCode').touched && !menuDetailsForm.get('screenCode').valid\">\r\n              Screen Code is Required\r\n            </mat-error>\r\n            </mat-form-field>\r\n          </div>\r\n      \r\n          <div fxFlex=\"33.33\" class=\"pr-16\">\r\n            <mat-label>Route *</mat-label>\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n              <input matInput type=\"text\" placeholder=\"Route\" name=\"routing\" formControlName=\"routing\" />\r\n              <mat-error\r\n              *ngIf=\"menuDetailsForm.get('routing').touched && !menuDetailsForm.get('routing').valid\">\r\n              Route is Required\r\n            </mat-error>\r\n            </mat-form-field>\r\n          </div>\r\n      \r\n          <div fxFlex=\"33.33\" class=\"pr-16\">\r\n            <mat-label>Parent Menu *</mat-label>\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">      \r\n              <mat-select formControlName=\"parentId\" placeholder=\"Parent Menu\">\r\n                <mat-option [value]=\"'0'\">Main Menu</mat-option>\r\n                <mat-option *ngFor=\"let item of parentMenus\" [value]=\"item.id\">\r\n                  {{ item.screenName }}\r\n                </mat-option>\r\n \r\n              </mat-select>\r\n              <mat-error\r\n              *ngIf=\"menuDetailsForm.get('parentId').touched && !menuDetailsForm.get('parentId').valid\">\r\n              Parent Menu is Required\r\n            </mat-error>\r\n            </mat-form-field>\r\n          </div>\r\n      \r\n          \r\n  \r\n         \r\n        </div>\r\n       \r\n        <div fxLayout=\"row wrap\" fxLayout.lt-sm=\"column\">\r\n\r\n \r\n          <div fxFlex=\"100\" class=\"mt-16\" fxLayoutAlign=\"end center\" fxLayoutGap=\"10px\">\r\n            <div>\r\n              <button  mat-raised-button color=\"primary\"\r\n              (click)=\"submit()\"\r\n              [disabled]=\"!(menuDetailsForm.valid) \"\r\n                >\r\n                SAVE\r\n              </button>\r\n            </div>\r\n            <div>\r\n              <button mat-raised-button color=\"warn\" (click)=\"goBack()\"  type=\"button\">\r\n                Cancel\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </mat-card-content>\r\n  </mat-card>\r\n  <!-- </mat-card> -->\r\n  \r\n  \r\n  \r\n","import { Component, OnInit, Inject, ChangeDetectorRef, ViewChild } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { FormBuilder, Validators, FormGroup } from '@angular/forms';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { Location } from '@angular/common';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { DataService } from 'app/shared/services/data.service';\r\nimport { AuditLogComponent } from '../../audit-log/audit-log.component';\r\nimport { ngxDetails } from 'app/shared/models/ngxtable';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-ngx-table-popup',\r\n  templateUrl: './ngx-table-popup.component.html'\r\n})\r\nexport class NgxTablePopupComponent implements OnInit {\r\n\r\n  // @ViewChild('auditLog') auditLog : AuditLogComponent\r\n\r\n\r\n  public branchForm: FormGroup;\r\n  loggedInUser : string;\r\n  auditData : ngxDetails;\r\n  banks: string[]=[];\r\n  currencies: string[] = [];\r\n  countries: string[] = [];\r\n  states: string[] = [];\r\n  isAuditData : boolean = false;\r\n  cities: string[] = [];\r\n  isEdit: boolean = false;\r\n  isReadOnly: boolean = true;\r\n  id: number;\r\n  show = false;\r\n  bankCode: string[] = [];\r\n  entityCode:  string[] = [];\r\n  readorWrite: boolean = true;\r\n  currentUser: any;\r\n  bankDetails: any;\r\n  constructor(\r\n    private route : ActivatedRoute,\r\n    private fb: FormBuilder,\r\n    private apiService: ApiService,\r\n    private _location: Location,\r\n    private ls : LocalStoreService,\r\n    private router:Router,\r\n    private cdr: ChangeDetectorRef,\r\n    private snack: MatSnackBar,\r\n    private dataService : DataService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.currentUser = this.ls.getItem(\"ICUST_USER\");\r\n    this.route.queryParamMap.subscribe((params: any) => {\r\n     \r\n      if(params.get('id')){\r\n        this.isEdit = true;\r\n        this.id = params.get('id');\r\n        this.apiService.getBranchById(params.get('id')).subscribe((resp) =>{\r\n        \r\n           this.buildItemForm(resp);           \r\n           this.auditData = resp;\r\n           this.isAuditData = true;\r\n           this.dataService.setAuditLogData(this.auditData);\r\n         \r\n         \r\n        });\r\n      }\r\n      else{\r\n        this.readorWrite=false;\r\n        this.buildItemForm({});\r\n      }\r\n    }\r\n    );  \r\n    this.getEntityCode();\r\n    this.getAuthBankDetails();\r\n    this.getAllBanks();\r\n    this.getBranchCurrency();\r\n    this.getCountryName();\r\n    this.loggedInUser = this.ls.getItem('ICUST_USER').userName;\r\n\r\n    \r\n    this.buildItemForm({});\r\n\r\n  }\r\n  buildItemForm(item) {\r\n    \r\n    this.branchForm = this.fb.group({\r\n      bankCode: [item.bankCode || '', Validators.required], //dropdown\r\n      entityCode: [item.entityCode || '', Validators.required],\r\n      branchCode: [item.branchCode || '', Validators.required],\r\n      branchCcy: [item.branchCcy || '', Validators.required],  //dropdown\r\n      branchDetails: [item.branchDetails || '', Validators.required],\r\n      branchName: [item.branchName || '', Validators.required],\r\n      address1: [item.address1 || '', Validators.required],\r\n      address2: [item.address2 || ''],\r\n      country: [item.country || '', Validators.required],\r\n      state: [item.state || '', Validators.required],\r\n      city: [item.city || '', Validators.required],\r\n      pincode: [item.pincode || '', Validators.required],\r\n      id: [item.id || ''],\r\n    });\r\n\r\n    if (item.country) {\r\n      this.getStateName(item.country);\r\n      this.getCityName(item.state);\r\n      \r\n    }\r\n    if (item.entityCode) {\r\n      this.getBankCode1(item.entityCode);\r\n    }\r\n  }\r\n\r\n\r\n\r\n  _keyPress(event: any) {\r\n    const pattern = /[0-9]/;\r\n    let inputChar = String.fromCharCode(event.charCode);\r\n    if (!pattern.test(inputChar)) {\r\n      event.preventDefault();\r\n\r\n    }\r\n  }\r\n\r\n  \r\n\r\n\r\n  getAllBanks() {\r\n    this.apiService.getBankCode().subscribe(_list => {\r\n      this.banks = _list;\r\n    }, (err: any) => {\r\n      \r\n    })\r\n  }\r\n\r\n  Onlynumber(event): boolean {\r\n    const charCode = (event.which) ? event.which : event.keyCode;\r\n    if (charCode > 31 && (charCode < 48 || charCode > 57)) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n  keyPressAlphanumeric(event) {\r\n    var inp = String.fromCharCode(event.keyCode);\r\n    if (/[0-9a-zA-Z]/.test(inp)) {\r\n      return true;\r\n    } else {\r\n      event.preventDefault();\r\n      return false;\r\n    }\r\n  }\r\n\r\n getBranchCurrency(){\r\n    // this.apiService.getCountryValues().subscribe(_list =>{\r\n    //   this.currencies = _list;\r\n    // },(err:any) =>{\r\n     \r\n    // })\r\n    this.apiService.getCurrencyDetails().subscribe(data=>{\r\n      console.log(\"Auth currecy details\", data)\r\n      for(let i=0; i<data.length;i++){\r\n        this.currencies.push(data[i])\r\n      }\r\n      console.log(this.currencies);\r\n    })\r\n  }\r\n  getEntityCode() {\r\n    this.apiService.getEntityCode().subscribe((resp) => {\r\n      console.log(resp);\r\n      for(let i=0; i<resp.length;i++){\r\n        if(resp[i].authStatus==='A'){\r\n          this.entityCode.push(resp[i]);\r\n        }\r\n      }\r\n      console.log(this.entityCode);\r\n      // this.entityCode = resp;\r\n    });\r\n  }\r\n\r\n  getBankCode1(entityCode) {\r\n    this.apiService.getBankInfoByEntityCode(entityCode).subscribe((resp) => {\r\n      this.bankCode = resp;\r\n      console.log(this.bankCode);\r\n    });\r\n  }\r\n  getAuthBankDetails(){\r\n    this.apiService.fetchAuthBankInfo().subscribe(resp => {\r\n      this.bankDetails = resp\r\n    })\r\n    }\r\ngetEntityCodeByBankCode(bankCode){\r\n\r\n  for (let index = 0; index < this.bankDetails.length; index++) {\r\n    if(this.bankDetails[index].bankCode == bankCode){\r\n      this.branchForm.get('entityCode').setValue(this.bankDetails[index].entityCode)\r\n      return;\r\n    }\r\n    \r\n  }\r\n}\r\n  // getBankCode(entityCode:any) {\r\n  //   this.apiService.getBankInfoByEntityCode(entityCode).subscribe((resp) => {\r\n  //     for(let i=0; i<resp.length;i++){\r\n  //       if(resp[i]===entityCode){\r\n  //         this.bankCode.push(resp[i]);\r\n  //       }\r\n  //     }\r\n  //     console.log(this.bankCode);\r\n  //   });\r\n  // }\r\n\r\n\r\n  getCountryName() {\r\n    this.apiService.getAllCountries().subscribe((data: any) => {\r\n      console.log('resp',data)\r\n      for(let i=0; i<data.length;i++){\r\n        if(data[i].authStatus==='A'){\r\n          console.log(data[i])\r\n          this.countries.push(data[i].countryName);\r\n          \r\n        }\r\n      }console.log(this.countries)\r\n    });\r\n  }\r\n\r\n  getStateName(countryName){\r\n    this.apiService.getAllCountries().subscribe((data: any) => {\r\n      for(let i=0; i<data.length;i++){       \r\n        if(data[i].countryName === countryName){\r\n          this.apiService.getStateByCountry(data[i].id).subscribe((resp: any) => {\r\n          this.states = resp\r\n          })\r\n          break;   \r\n        }\r\n      }\r\n    })\r\n    }\r\n    \r\n  getCityName(state: any) {\r\n    let entityName = \"city\";\r\n    \r\n    this.apiService.getDropDownValues1(entityName, state).subscribe((data) => {\r\n      this.cities = data;\r\n    });\r\n  }\r\n\r\n  submit() {\r\n    // let details: any = {};\r\n    // details = this.branchForm.value;\r\n    // details.id = this.id;\r\n\r\n    let loggedInUser = this.loggedInUser;\r\n    // \r\n    this.apiService.updateBranchDetails(this.branchForm.value,loggedInUser).subscribe(data => {\r\n     \r\n      if(data != null){\r\n        this.snack.open('Data Saved!', 'OK', {\r\n          duration: 4000,\r\n          verticalPosition: 'top',\r\n          horizontalPosition: 'right'\r\n        });\r\n        this.cdr.markForCheck();\r\n      }\r\n    })\r\n    \r\n    this.router.navigate([`/maintenance/main/branch`]);\r\n  }\r\n  deleteRecord(operation){\r\n    Swal.fire(\r\n      {\r\n        //text: 'Unable to process' + 'Error ' + this.responseforfileupload.errorMessage + 'Do you want to Proceed??',\r\n        text: 'You are trying to '+ operation +' record.' + ' Do you want to proceed?',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        // confirmButtonText: 'PROCEED.'\r\n        cancelButtonText: 'NO',\r\n        confirmButtonText: 'YES', 'icon': 'info'\r\n      }\r\n    ).then((result => {\r\n      if(result.isConfirmed==true){\r\n        this.apiService.deleteBranch(this.auditData.id,this.currentUser.userName)\r\n        .subscribe(data => {\r\n          this.router.navigate([`/maintenance/main/branch`]);\r\n        },\r\n        err=>{\r\n          if (err.status == 200) {\r\n            this.snack.open('Record Deleted Successfully', 'OK', {\r\n              duration: 4000,\r\n              verticalPosition: 'top',\r\n              horizontalPosition: 'right'\r\n            });\r\n          }\r\n          this.router.navigate([`/maintenance/main/branch`]);\r\n        \r\n      })\r\n      }}))\r\n   \r\n         \r\n       \r\n  }\r\n  \r\n editRecord(){\r\n this.readorWrite=false;\r\n }\r\n\r\n  updateRecord(operation) {\r\n    Swal.fire(\r\n      {\r\n        //text: 'Unable to process' + 'Error ' + this.responseforfileupload.errorMessage + 'Do you want to Proceed??',\r\n        text: 'You are trying to '+ operation +' record.' + ' Do you want to proceed?',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        // confirmButtonText: 'PROCEED.'\r\n        cancelButtonText: 'NO',\r\n        confirmButtonText: 'YES', 'icon': 'info'\r\n      }\r\n    ).then((result => {\r\n      if(result.isConfirmed==true){\r\n        let payload: any = {};\r\n        payload.id = this.id;\r\n        payload.operation = operation;\r\n        payload.loggedInUser = this.loggedInUser;\r\n        this.apiService.getAuditLogsForBranch(payload).subscribe((data) => {\r\n       \r\n          this.auditData = data;\r\n          this.dataService.setAuditLogData(this.auditData);\r\n          this.isAuditData = true;\r\n          this.dataService.sendClickEvent();\r\n          let message = '';\r\n          switch (operation) {\r\n            case 'open':\r\n              message = 'opened'\r\n              break;\r\n            case 'close':\r\n              message = 'closed'\r\n              break;\r\n            case 'auth':\r\n              message = 'authorized'\r\n              break;\r\n            default:\r\n              break;\r\n          }\r\n          this.snack.open(`Record ${message} successful!'`, \"OK\", {\r\n            duration: 2000,\r\n            verticalPosition: \"top\",\r\n            horizontalPosition: \"right\",\r\n          });\r\n        });\r\n      }}))\r\n   \r\n  }\r\n\r\n  goBack() {\r\n    //this._location.back();\r\n    this.router.navigate([`/maintenance/main/branch`]);\r\n  }\r\n  dataByBank(index,bank){\r\n    return bank.bankCode;\r\n  }\r\n  dataByCurrency(index,currency){\r\n    return currency.currencyCode;\r\n  }\r\n  dataByCountry(index,country){\r\n    return country;\r\n  }\r\n  dataByState(index,state){\r\n    return state.value1;\r\n  }\r\n  dataByCity(index,city){\r\n    return city.value1;\r\n  }\r\n\r\n  // edit() {\r\n  //  this.show = !this.show;\r\n  // }\r\n}\r\n","<h1 style=\"margin-top: 5px; padding-left:10px; padding-top: 5px; padding-bottom: 0px;\"><small style=\"font-size: 10px; color: rgb(143, 140, 140) ;\">\r\n  Home >  Maintenance Summary > Branch Maintenance > <span *ngIf=\"!isEdit\">Add</span><span *ngIf=\"isEdit\">Edit</span> Branch Maintenance</small></h1>\r\n<div fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"mt-16\">\r\n  <button mat-icon-button (click)=\"goBack()\">\r\n      <mat-icon>arrow_back</mat-icon>\r\n    </button> \r\n    <span *ngIf=\"isEdit\" class=\"text-large\">\r\n      Edit Branch\r\n    </span>\r\n    <span *ngIf=\"!isEdit\" class=\"text-large\">\r\n      New Branch \r\n    </span>\r\n </div>\r\n\r\n\r\n  <mat-card>\r\n  <mat-card-content>\r\n    <form [formGroup]=\"branchForm\" (ngSubmit)=\"submit()\" class=\"mt-32\">\r\n      <!-- <h1>{{isEdit? 'Edit Branch Info' : 'New Branch Info'}}</h1> -->\r\n      <div fxLayout=\"row wrap\" fxLayout.lt-sm=\"column\">\r\n        <div fxFlex=\"33.33\" class=\"pr-16\" *ngIf=\"!readorWrite\">\r\n          <mat-label >Entity Code *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n              <!-- <mat-select name=\"entityCode\"  [formControl]=\"branchForm.controls['entityCode']\" (selectionChange)=\"getBankCode1($event.value)\" class=\"selectOption\">\r\n                <mat-option *ngFor=\"let data of entityCode;\"  [value]=\"data.entityCode\">\r\n              {{data?.entityCode}}\r\n              </mat-option>\r\n          </mat-select> -->\r\n          <input matInput [formControl]=\"branchForm.controls['entityCode']\" [readonly]=\"true\" required >\r\n              <mat-error *ngIf=\"branchForm.get('entityCode').hasError('required')\">\r\n                  Entity Code is Required!\r\n              </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n        <div fxFlex=\"33.33\" class=\"pr-16\" *ngIf=\"readorWrite\">\r\n          <mat-label>Entity Code *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input \r\n            matInput \r\n            name=\"name\"  [readonly]=\"readorWrite\"\r\n        \r\n            [formControl]=\"branchForm.controls['entityCode']\"\r\n            required \r\n          />\r\n          </mat-form-field>\r\n        </div>\r\n        <div fxFlex=\"33.33\" class=\"pr-16\" *ngIf=\"!readorWrite\">\r\n          <mat-label>Bank Code *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <mat-select\r\n              name=\"bankCode\"\r\n              [formControl]=\"branchForm.controls['bankCode']\"\r\n              required\r\n              (selectionChange)=\"getEntityCodeByBankCode($event.value)\"\r\n            >\r\n              <mat-option *ngFor=\"let bank of bankDetails; trackBy:dataByBank\" [value]=\"bank.bankCode\">\r\n                {{ bank.bankCode }}\r\n              </mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n        </div>\r\n        <div fxFlex=\"33.33\" class=\"pr-16\" *ngIf=\"readorWrite\">\r\n          <mat-label>Bank Code *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input \r\n            matInput \r\n            name=\"name\"  [readonly]=\"readorWrite\"\r\n        \r\n            [formControl]=\"branchForm.controls['bankCode']\"\r\n            required \r\n          />\r\n          </mat-form-field>\r\n        </div>\r\n    \r\n        <div fxFlex=\"33.33\" class=\"pr-16\">\r\n          <mat-label>Branch Name *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input\r\n              matInput\r\n              name=\"branchname\" [readonly]=\"readorWrite\"\r\n              (keypress)=keyPressAlphanumeric($event)\r\n              [formControl]=\"branchForm.controls['branchName']\"\r\n              required\r\n            />\r\n          </mat-form-field>\r\n        </div>\r\n    \r\n        <div fxFlex=\"33.33\" class=\"pr-16\">\r\n          <mat-label>Branch Code *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input\r\n              matInput\r\n              name=\"branchcode\" [readonly]=\"readorWrite\"\r\n              (keypress)=keyPressAlphanumeric($event)\r\n              [formControl]=\"branchForm.controls['branchCode']\"\r\n              required\r\n            />\r\n          </mat-form-field>\r\n        </div>\r\n    \r\n        <div fxFlex=\"33.33\" class=\"pr-16\" *ngIf=\"!readorWrite\">\r\n          <mat-label>Branch Currency *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <mat-select\r\n              name=\"branchCcy\"\r\n              [formControl]=\"branchForm.controls['branchCcy']\"\r\n              required\r\n            >\r\n              <mat-option\r\n                *ngFor=\"let currency of currencies; trackBy:dataByCurrency\"\r\n                [value]=\"currency.currencyCode\"\r\n              >\r\n                {{ currency.currencyCode }}\r\n              </mat-option>\r\n            </mat-select>\r\n            <mat-error *ngIf=\"branchForm.get('branchCcy').hasError('required')\">\r\n              Branch Currency is Required!\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n        <div fxFlex=\"33.33\" class=\"pr-16\" *ngIf=\"readorWrite\">\r\n          <mat-label>Branch Currency  *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input \r\n            matInput \r\n            name=\"name\"  [readonly]=\"readorWrite\"\r\n        \r\n            [formControl]=\"branchForm.controls['branchCcy']\"\r\n            required \r\n          />\r\n          </mat-form-field>\r\n        </div>\r\n    \r\n        <div fxFlex=\"33.33\" class=\"pr-16\">\r\n          <mat-label>Branch Details *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input\r\n              matInput\r\n              name=\"branchdetails\" [readonly]=\"readorWrite\"\r\n              (keypress)=keyPressAlphanumeric($event)\r\n              [formControl]=\"branchForm.controls['branchDetails']\"\r\n            />\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n      <h1>Address</h1>\r\n      <div fxLayout=\"row wrap\" fxLayout.lt-sm=\"column\">\r\n        <div fxFlex=\"33.33\" class=\"pr-16\">\r\n          <mat-label>Address 1 *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input\r\n              matInput\r\n              name=\"address1\" [readonly]=\"readorWrite\"\r\n              [formControl]=\"branchForm.controls['address1']\"\r\n              required\r\n            />\r\n          </mat-form-field>\r\n        </div>\r\n    \r\n        <div fxFlex=\"33.33\" class=\"pr-16\">\r\n          <mat-label>Address 2 *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input\r\n              matInput\r\n              name=\"address2\" [readonly]=\"readorWrite\"\r\n              [formControl]=\"branchForm.controls['address2']\"\r\n              required\r\n            />\r\n          </mat-form-field>\r\n        </div>\r\n    \r\n        <div fxFlex=\"33.33\" class=\"pr-16\" *ngIf=\"!readorWrite\">\r\n          <mat-label>Country *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <mat-select\r\n              name=\"country\"\r\n              [formControl]=\"branchForm.controls['country']\"\r\n              (selectionChange)=\"getStateName($event.value)\"\r\n              required\r\n            >\r\n              <mat-option\r\n                *ngFor=\"let country of countries; trackBy:dataByCountry\"\r\n                [value]=\"country\"\r\n              >\r\n                {{ country }}\r\n              </mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n        </div>\r\n        <div fxFlex=\"33.33\" class=\"pr-16\" *ngIf=\"readorWrite\">\r\n          <mat-label>Country *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input \r\n            matInput \r\n            name=\"name\"  [readonly]=\"readorWrite\"\r\n        \r\n            [formControl]=\"branchForm.controls['country']\"\r\n            required \r\n          />\r\n          </mat-form-field>\r\n        </div>\r\n    \r\n        <div fxFlex=\"33.33\" class=\"pr-16\" *ngIf=\"!readorWrite\">\r\n          <mat-label>State *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\" >\r\n            <mat-select\r\n              name=\"state\"\r\n              [formControl]=\"branchForm.controls['state']\"\r\n              (selectionChange)=\"getCityName($event.value)\"\r\n              required\r\n            >\r\n              <mat-option\r\n                *ngFor=\"let state of states; trackBy:dataByState\"\r\n                [value]=\"state.stateName\"\r\n              >\r\n                {{ state.stateName }}\r\n              </mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n        </div>\r\n        <div fxFlex=\"33.33\" class=\"pr-16\" *ngIf=\"readorWrite\">\r\n          <mat-label>State *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input \r\n            matInput \r\n            name=\"name\"  [readonly]=\"readorWrite\"\r\n        \r\n            [formControl]=\"branchForm.controls['state']\"\r\n            required \r\n          />\r\n          </mat-form-field>\r\n        </div>\r\n    \r\n        <div fxFlex=\"33.33\" class=\"pr-16\"  *ngIf=\"!readorWrite\">\r\n          <mat-label>City *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\"> \r\n            <mat-select\r\n              name=\"city\"\r\n              [formControl]=\"branchForm.controls['city']\"\r\n              required\r\n            >\r\n              <mat-option\r\n                *ngFor=\"let city of cities; trackBy:dataByCity\"\r\n                [value]=\"city.value1\"\r\n              >\r\n                {{ city.value1 }}\r\n              </mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n        </div>\r\n        <div fxFlex=\"33.33\" class=\"pr-16\" *ngIf=\"readorWrite\">\r\n          <mat-label>City *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input \r\n            matInput \r\n            name=\"name\"  [readonly]=\"readorWrite\"\r\n        \r\n            [formControl]=\"branchForm.controls['city']\"\r\n            required \r\n          />\r\n          </mat-form-field>\r\n        </div>\r\n    \r\n        <div fxFlex=\"33.33\" class=\"pr-16\">\r\n          <mat-label>Pincode *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input\r\n            matInput \r\n            name=\"pincode\" \r\n            minlength=\"6\" \r\n            maxlength=\"10\" [readonly]=\"readorWrite\"\r\n            pattern =\"^[1-9][0-9][{6}-{10}]$\"\r\n            (keypress)=\"_keyPress($event)\"\r\n            [formControl]=\"branchForm.controls['pincode']\" \r\n            required\r\n            />\r\n            <mat-error *ngIf=\"branchForm.get('pincode').touched && branchForm.get('pincode').hasError('required')\">\r\n              <small>Pincode is Required!</small>\r\n            </mat-error>\r\n           \r\n            <mat-error *ngIf=\"!branchForm.get('pincode').valid && !branchForm.get('pincode').hasError('required')\">\r\n              <small>Please Enter Valid Pincode!</small>\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n    \r\n    \r\n    \r\n        <div fxFlex=\"100\" class=\"mt-16\" fxLayoutAlign=\"end center\" fxLayoutGap=\"10px\">\r\n          <div>\r\n            <button *ngIf=\"!isEdit\" mat-raised-button color=\"primary\" [disabled]=\"!(branchForm.valid && branchForm.dirty)\"\r\n              (click)=\"submit(branchForm.value)\">\r\n              Save\r\n            </button>\r\n          </div>\r\n          <div [hidden]=\"readorWrite\">\r\n            <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"submit(branchForm.value)\"\r\n              [disabled]=\"!(branchForm.valid && branchForm.dirty)\">\r\n              Save\r\n            </button>\r\n          </div>\r\n          <div [hidden]=\"!readorWrite || auditData?.recordStatus == 'Close'\">\r\n            <button *ngIf=\"isEdit\" type=\"button\"  mat-raised-button color=\"primary\" (click)=\"editRecord()\">\r\n              Edit\r\n            </button>&nbsp;&nbsp;\r\n          </div>\r\n          <div *ngIf=\"auditData?.authStatus == 'Unauthorized' && readorWrite\" [hidden]=\"!readorWrite\">\r\n            <button *ngIf=\"isEdit\" type=\"button\"  mat-raised-button color=\"primary\" (click)=\"updateRecord('auth')\">\r\n              Authorize\r\n            </button>&nbsp;&nbsp;\r\n          </div> \r\n          <div *ngIf=\"auditData?.recordStatus == 'Close' && auditData?.oneTimeAuth != 'No'\" [hidden]=\"!readorWrite\">\r\n            <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"updateRecord('open')\">\r\n              Reopen\r\n            </button>&nbsp;&nbsp;\r\n          </div>\r\n          <div *ngIf=\"auditData?.recordStatus == 'Open' && auditData?.oneTimeAuth != 'No'\" [hidden]=\"!readorWrite\">\r\n            <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"updateRecord('close')\">\r\n              Close\r\n            </button>&nbsp;&nbsp;\r\n          </div>\r\n          <div *ngIf=\"auditData?.oneTimeAuth == 'No'\" [hidden]=\"!readorWrite\">\r\n            <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"deleteRecord()\">\r\n              Delete\r\n            </button> &nbsp;&nbsp;\r\n          </div>\r\n         \r\n          <button\r\n            mat-raised-button\r\n            color=\"warn\"\r\n            type=\"button\"\r\n            (click)=\"goBack()\"\r\n          >\r\n            Exit\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  </mat-card-content>\r\n</mat-card>\r\n<!-- </mat-card> -->\r\n\r\n\r\n<div class=\"mt-32\">\r\n  <app-audit-log *ngIf=\"isAuditData\" #auditLog></app-audit-log>\r\n</div>\r\n","import {\r\n  Component,\r\n  OnInit,\r\n  OnDestroy,\r\n  ViewChild,\r\n  ChangeDetectorRef,\r\n} from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { Router } from '@angular/router';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { JwtAuthService } from 'app/shared/services/auth/jwt-auth.service';\r\nimport { DataService } from 'app/shared/services/data.service';\r\nimport { Observable } from 'rxjs';\r\n\r\nexport interface Card {\r\n  title: string;\r\n  subtitle: string;\r\n  text: string;\r\n  state?: string;\r\n  url: any;\r\n  shortName: string;\r\n}\r\n\r\nconst DATA: Card[] = [\r\n  {\r\n    title: 'Security Policy',\r\n    subtitle: 'Product Details',\r\n    text:\r\n      'This covers ordination product details. Product preferances, Intrest Charges and additionalattributes.',\r\n      state: 'securityPolicy',\r\n    url: 'assets/images/brnchholiday.png',\r\n    shortName: 'Maint_GM',\r\n  },\r\n  {\r\n    title: 'General Maintenance',\r\n    subtitle: 'Product Details',\r\n    text:\r\n      'This covers ordination product details. Product preferances, Intrest Charges and additionalattributes.',\r\n    // state:\"branch\",\r\n    url: 'assets/images/brnchholiday.png',\r\n    shortName: 'Maint_GM',\r\n  },\r\n  {\r\n    title: 'Menus Maintenance',\r\n    subtitle: 'Menus add and modify',\r\n    text: 'This is menus maintenance cofiguration',\r\n    state: 'menu-config',\r\n    url: 'assets/images/brnchholiday.png',\r\n    shortName: 'Maint_MM',\r\n  },\r\n  {\r\n    title: 'Role Maintenance',\r\n    subtitle: 'Product Details',\r\n    text: 'This covers create business process and create process stages.',\r\n    state:'roleMaintenance',\r\n    url: 'assets/images/processing.png',\r\n    shortName: 'Maint_RM',\r\n  },\r\n  {\r\n    title: 'User Maintenance',\r\n    subtitle: 'Product Details',\r\n    text: 'This covers Quantitive and Qualitative score card.',\r\n    state: 'userMaintenance',\r\n    url: 'assets/images/screen.png',\r\n    shortName: 'Maint_UM',\r\n  },\r\n  {\r\n    title: 'Country and State Maintenance',\r\n    subtitle: 'Product Details',\r\n    text: 'This covers all the configuration and settings of dashboard',\r\n    state: 'countryState',\r\n    url: 'assets/images/Dashboard.png',\r\n    shortName: 'Maint_CSM',\r\n  },\r\n  {\r\n    title: 'City Maintenance',\r\n    subtitle: 'Product Details',\r\n    text: 'This covers all the configuration and settings of dashboard',\r\n    state: 'cityMaintenance',\r\n    url: 'assets/images/Dashboard.png',\r\n    shortName: 'Maint_CM',\r\n  },\r\n  {\r\n    title: 'Entity Maintenance',\r\n    subtitle: 'Product Details',\r\n    text:\r\n      'This covers ordination product details, Product preferences, Intrest Charges and additional attributes.',\r\n    state: 'entity/list',\r\n    url: 'assets/images/brnchholiday.png',\r\n    shortName: 'Maint_EM',\r\n  },\r\n  {\r\n    title: 'Bank Maintenance',\r\n    subtitle: 'Product Details',\r\n    text: 'This covers create business process and create process stages.',\r\n    state: 'bank/list',\r\n    url: 'assets/images/processing.png',\r\n    shortName: 'Maint_BM',\r\n  },\r\n  {\r\n    title: 'Branch Maintenance',\r\n    subtitle: 'Product Details',\r\n    text: 'This covers Quantitive and Qualitative score card.',\r\n    state: 'branch',\r\n    url: 'assets/images/screen.png',\r\n    shortName: 'Maint_BRM',\r\n  },\r\n  {\r\n    title: 'Currency Maintenance',\r\n    subtitle: 'Product Details',\r\n    text: 'This covers all the configurations and settings of dashboard.',\r\n    state: 'currencyMaint',\r\n    url: 'assets/images/Dashboard.png',\r\n    shortName: 'Maint_CM',\r\n  },\r\n  {\r\n    title: 'Currency Pair Maintenance',\r\n    subtitle: 'Product Details',\r\n    text: 'This covers all the configurations and settings of dashboard.',\r\n    state: 'currencyPairMaintenance',\r\n    url: 'assets/images/brnchholiday.png',\r\n    shortName: 'Maint_CPM',\r\n  },\r\n  {\r\n    title: 'Currency Pair Rate Maintenance',\r\n    subtitle: 'Product Details',\r\n    text: 'This covers all the configurations and settings of dashboard.',\r\n    state: 'currencyPairRateMaintenance',\r\n    url: 'assets/images/brnchholiday.png',\r\n    shortName: 'Maint_CPRM',\r\n  },\r\n  // {\r\n  //   title: 'State Maintenance',\r\n  //   subtitle: 'Product Details',\r\n  //   text: 'This covers all the configuration and settings of dashboard',\r\n  //   state:\"State\"\r\n  //   },\r\n\r\n  {\r\n    title: 'Holiday Maintenance',\r\n    subtitle: 'Product Details',\r\n    text:\r\n      'The Holiday Maintenance is the smallest of the six original and distinct spitz breeds of dog from Japan.',\r\n    state: 'holiday',\r\n    url: 'assets/images/processing.png',\r\n    shortName: 'Maint_HM',\r\n  },\r\n  {\r\n    title: 'Product Maintenance',\r\n    subtitle: 'Product Details',\r\n    text: 'This covers Quantitive and Qualitative score card.',\r\n    state: 'product',\r\n    url: 'assets/images/screen.png',\r\n    shortName: 'Maint_PM',\r\n  },\r\n  {\r\n    title: 'Workflow Maintenance',\r\n    subtitle: 'Product Details',\r\n    text: 'This covers Quantitive and Qualitative score card.',\r\n    url: 'assets/images/screen.png',\r\n    shortName: 'Maint_WM',\r\n  },\r\n  {\r\n    title: 'Customer Maintenance',\r\n    subtitle: 'Product Details',\r\n    text: 'This covers all the configurations and settings of dashboard.',\r\n    url: 'assets/images/Dashboard.png',\r\n    shortName: 'Maint_CUM',\r\n  },\r\n  {\r\n    title: 'Account Maintenance',\r\n    subtitle: 'Product Details',\r\n    text:\r\n      'This covers ordination product details, Product preferences, Intrest Charges and additional attributes.',\r\n    url: 'assets/images/brnchholiday.png',\r\n    shortName: 'Maint_AM',\r\n  },\r\n  {\r\n    title: 'Biller Maintenance',\r\n    subtitle: 'Product Details',\r\n    text: 'This covers create business process and create process stages.',\r\n    state: 'billerInfoMaint',\r\n    url: 'assets/images/processing.png',\r\n    shortName: 'Maint_BIM',\r\n  },\r\n  {\r\n    title: 'Till/Vault Maintenance',\r\n    subtitle: 'Product Details',\r\n    text: 'This covers Quantitive and Qualitative score card.',\r\n    state: 'tillVaultltMaster',\r\n    url: 'assets/images/screen.png',\r\n    shortName: 'Maint_TVM',\r\n  },\r\n  {\r\n    title: 'Till/Vault Branch Mapping Maintenance',\r\n    subtitle: 'Product Details',\r\n    text: 'This covers all the configurations and settings of dashboard.',\r\n    state: 'tillVaultltBranch',\r\n    url: 'assets/images/Dashboard.png',\r\n    shortName: 'Maint_TVBMM',\r\n  },\r\n  {\r\n    title: 'Till/Vault Configuaration Maintenance',\r\n    subtitle: 'Product Details',\r\n    text:\r\n      'This covers ordination product details, Product preferences, Intrest Charges and additional attributes.',\r\n    state: 'tillVaultConfig',\r\n    url: 'assets/images/brnchholiday.png',\r\n    shortName: 'Maint_TVCM',\r\n  },\r\n  {\r\n    title: 'Denomination Maintenance',\r\n    subtitle: 'Product Details',\r\n    text: 'This covers Quantitive and Qualitative score card.',\r\n    state: 'denominationMaster',\r\n    url: 'assets/images/brnchholiday.png',\r\n    shortName: 'Maint_DM',\r\n  },\r\n  {\r\n    title: 'Till/Vault Currency Balance Maintenance',\r\n    subtitle: 'Till Vault Currency Balance Details',\r\n    text:\r\n      'The Branch Maintenance is the smallest of the six original and distinct spitz breeds of dog from Japan.',\r\n    state: 'tillVaultCcyBal',\r\n    url: 'assets/images/brnchholiday.png',\r\n    shortName: 'Maint_TVCBM',\r\n  },\r\n  {\r\n    title: 'Till/Vault Status Maintenance',\r\n    subtitle: 'Till Vault Status Details',\r\n    text:\r\n      'The Branch Maintenance is the smallest of the six original and distinct spitz breeds of dog from Japan.',\r\n    state: 'tillVaultStatus',\r\n    url: 'assets/images/brnchholiday.png',\r\n    shortName: 'Maint_TVSM',\r\n  },\r\n  {\r\n    title: 'Till/Vault Currency Denomination Balance Maintenance',\r\n    subtitle: 'Till Vault Currency Denomination Balance Details',\r\n    text:\r\n      'This Maintenance is the smallest of the six original and distinct spitz breeds of dog from Japan.',\r\n    state: 'tillVaultCcyDenomBal',\r\n    url: 'assets/images/processing.png',\r\n    shortName: 'Maint_TVCDM',\r\n  },\r\n  {\r\n    title: 'Till/Vault Denomination Maintenance',\r\n    subtitle: 'Till Vault Denomination Details',\r\n    text:\r\n      'The Branch Maintenance is the smallest of the six original and distinct spitz breeds of dog from Japan.',\r\n    state: 'tillVaultDenom',\r\n    url: 'assets/images/processing.png',\r\n    shortName: 'Maint_TVDM',\r\n  },\r\n  {\r\n    title: 'Transaction Cash Master Maintenance',\r\n    subtitle: 'Transaction Cash Master',\r\n    text:\r\n      'The Branch Maintenance is the smallest of the six original and distinct spitz breeds of dog from Japan.',\r\n    state: 'transactionCashMaster',\r\n    url: 'assets/images/brnchholiday.png',\r\n    shortName: 'Maint_TCMM',\r\n  },\r\n  {\r\n    title: 'Transaction Charges Maintenance',\r\n    subtitle: 'Transaction Charges Details',\r\n    text:\r\n      'This Maintenance is the smallest of the six original and distinct spitz breeds of dog from Japan.',\r\n    state: 'transactionCharges',\r\n    url: 'assets/images/brnchholiday.png',\r\n    shortName: 'Maint_TCM',\r\n  },\r\n  // {\r\n  //   title: 'Transaction Type',\r\n  //   subtitle: 'Transaction Type Details',\r\n  //   text: 'The Branch Maintenance is the smallest of the six original and distinct spitz breeds of dog from Japan.',\r\n  //   state: 'transactionType'\r\n  // },\r\n  {\r\n    title: 'Account Type Maintenance',\r\n    subtitle: 'Account Type Details',\r\n    text:\r\n      'The Branch Maintenance is the smallest of the six original and distinct spitz breeds of dog from Japan.',\r\n    state: 'accountType',\r\n    url: 'assets/images/brnchholiday.png',\r\n    shortName: 'Maint_ATM',\r\n  },\r\n  {\r\n    title: 'Base Denomination Maintenance',\r\n    subtitle: 'Base Denomination Maintenance Details',\r\n    text:\r\n      'The Branch Maintenance is the smallest of the six original and distinct spitz breeds of dog from Japan.',\r\n    state: 'baseDenomination',\r\n    url: 'assets/images/brnchholiday.png',\r\n    shortName: 'Maint_BDM',\r\n  },\r\n\r\n  // {\r\n  //   title: 'Branch Maintenance 22',\r\n  //   subtitle: 'Product Details',\r\n  //   text: 'The Branch Maintenance is the smallest of the six original and distinct spitz breeds of dog from Japan.'\r\n  // },\r\n  // {\r\n  //   title: 'Branch Maintenance 23',\r\n  //   subtitle: 'Product Details',\r\n  //   text: 'The Branch Maintenance is the smallest of the six original and distinct spitz breeds of dog from Japan.'\r\n  // },\r\n  // {\r\n  //   title: 'Branch Maintenance 24',\r\n  //   subtitle: 'Product Details',\r\n  //   text: 'The Branch Maintenance is the smallest of the six original and distinct spitz breeds of dog from Japan.'\r\n  // },\r\n  // {\r\n  //   title: 'Branch Maintenance 25',\r\n  //   subtitle: 'Product Details',\r\n  //   text: 'The Branch Maintenance is the smallest of the six original and distinct spitz breeds of dog from Japan.'\r\n  // }\r\n];\r\n\r\n@Component({\r\n  selector: 'app-main-home',\r\n  templateUrl: './main-home.component.html',\r\n  styleUrls: ['./main-home.component.scss'],\r\n})\r\nexport class MainHomeComponent implements OnInit {\r\n  filteredStatus: string = '';\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  obs: Observable<any>;\r\n  dataSource: MatTableDataSource<Card> = new MatTableDataSource<Card>(DATA);\r\n  maintenanceMenus: any = [];\r\n\r\n  compPermissions: String[] = [];\r\n\r\n  constructor(\r\n    private cdr: ChangeDetectorRef,\r\n    private router: Router,\r\n    private apiService: ApiService,\r\n    private dataService: DataService,\r\n    private jwtService: JwtAuthService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    document.getElementById('main-content-wrap').style.backgroundColor =\r\n      'white';\r\n    // this.cdr.detectChanges();\r\n    this.dataSource.paginator = this.paginator;\r\n    this.obs = this.dataSource.connect();\r\n\r\n    this.getMainMenus();\r\n\r\n    var user = this.jwtService.getUser();\r\n    if (user) {\r\n      this.apiService\r\n        .fetchTellerProfileInfo(user.userId)\r\n        .subscribe((result) => {\r\n          // this.compPermissions = result?.icustRoleInfoModel?.childPermission\r\n          //   .split(',')\r\n          //   .reduce(\r\n          //     (compArr: String[], comp: String) =>\r\n          //       compArr.includes(comp.trim())\r\n          //         ? compArr\r\n          //         : [...compArr, comp.trim()],\r\n          //     []\r\n          //   );\r\n        });\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    document.getElementById('main-content-wrap').style.backgroundColor =\r\n      '#fafafa';\r\n    if (this.dataSource) {\r\n      this.dataSource.disconnect();\r\n    }\r\n  }\r\n\r\n  checkCompPermission() {}\r\n\r\n  navigateToScreen(state: string) {\r\n   \r\n    this.router.navigate([`/maintenance/main/${state}`]);\r\n    // this.dataService.sendMenu(item);\r\n    // this.router.navigate([`/maintenance/main/sub/${item.id}`]);\r\n  }\r\n  alpha() {\r\n    const sortedusers = DATA.sort(function (a, b) {\r\n      var nameA = a.title.toUpperCase();\r\n      var nameB = b.title.toUpperCase();\r\n      if (nameA < nameB) {\r\n        return -1; //nameA comes first\r\n      }\r\n      if (nameA > nameB) {\r\n        return 1; // nameB comes first\r\n      }\r\n      return 0; // names must be equal\r\n    });\r\n   \r\n  }\r\n\r\n  getMainMenus() {\r\n    this.apiService.getMaintenanceMenu().subscribe(\r\n      (data: any) => {\r\n       \r\n        this.maintenanceMenus = data;\r\n        this.cdr.markForCheck();\r\n      },\r\n      (err: any) => {\r\n     \r\n      }\r\n    );\r\n  }\r\n  dataByCard(index,item){\r\n    return item;\r\n  }\r\n}\r\n","<h1 class=\"main-head\">\r\n  <small class=\"small-head\"\r\n    >Home >Maintenance Summary</small\r\n  >\r\n</h1>\r\n<div class=\"content\">\r\n  <div fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"mt-24\">\r\n    <button mat-icon-button [routerLink]=\"['/others/dashboard']\">\r\n      <mat-icon>arrow_back</mat-icon>\r\n    </button>\r\n    <span class=\"text-large\">\r\n      <!-- {{ maintenanceMenus[0].screenName }} -->\r\n      Maintenance Summary\r\n    </span>\r\n    <span fxFlex></span>\r\n  </div>\r\n\r\n  <div fxLayout=\"row\" fxLayoutAlign=\"space-arround center\" class=\"mt-32\">\r\n    <div class=\"search-box\">\r\n      <input type=\"text\" [(ngModel)]=\"filteredStatus\" placeholder=\"search\" />\r\n    </div>\r\n    <span fxFlex></span>\r\n    <button mat-flat-button [matMenuTriggerFor]=\"menu\">\r\n      Sort by:Relevance <mat-icon>expand_more </mat-icon>\r\n    </button>\r\n    <mat-menu #menu=\"matMenu\">\r\n      <!--<button mat-menu-item>\r\n               <mat-icon>arrow_drop_down</mat-icon>\r\n               <span>Sort by ASC/DSC</span>\r\n             </button>-->\r\n      <button mat-menu-item>\r\n        <mat-icon>sort_by_alpha</mat-icon>\r\n        <span (click)=\"alpha()\">Sort by Alpha</span>\r\n      </button>\r\n    </mat-menu>\r\n  </div>\r\n</div>\r\n\r\n<!-- <div fxLayout=\"row wrap\" class=\"mt-32\">\r\n     <div fxFlex=\"50\" *ngFor=\"let menu of maintenanceMenus\">\r\n        <mat-card (click)=\"navigateToScreen(menu)\">\r\n            <div fxLayout=\"row\" fxLayoutGap=\"5px\" fxLayoutAlign=\"space-around center\">\r\n                <div fxFlex=\"65\">\r\n                    <mat-card-content>\r\n                        <h2 class=\"\">{{ menu.screenName }}  ({{ menu.sub ? (menu.sub.length) : 0 }})</h2>\r\n                        <span class=\"card-text-label\">{{ 'This covers ordination product details. Product preferances, Intrest Charges and additionalattributes.' }}</span>\r\n                      </mat-card-content>\r\n                </div>\r\n                <div fxFlex=\"30\" style=\"text-align: right;\">\r\n                    <img class=\"image\" width=\"100\" height=\"100\" src=\"assets/images/funding.png\" alt=\"photo\">\r\n                </div>\r\n            </div>\r\n          </mat-card>\r\n     </div>\r\n  </div> -->\r\n\r\n<div fxLayout=\"row wrap\" class=\"mt-32\">\r\n  <!--<div fxFlex=\"50\" *ngFor=\"let card of obs | async | filter: filteredStatus: 'title'\">-->\r\n  <ng-container *ngFor=\"let card of obs | async | filter: filteredStatus; trackBy:dataByCard\">\r\n    <!-- <div fxFlex=\"50\" *ngIf=\"compPermissions.includes(card.shortName)\"> -->\r\n      <div fxFlex=\"50\" >\r\n      <mat-card (click)=\"navigateToScreen(card.state)\">\r\n        <div\r\n          fxLayout=\"row\"\r\n          fxLayoutGap=\"5px\"\r\n          fxLayoutAlign=\"space-around center\"\r\n        >\r\n          <div fxFlex=\"65\">\r\n            <mat-card-content>\r\n              <h2 class=\"title\">{{ card.title }}</h2>\r\n              <span class=\"card-text-label\">{{ card.text }}</span>\r\n            </mat-card-content>\r\n          </div>\r\n          <div fxFlex=\"30\" style=\"text-align: right\">\r\n            <img\r\n              class=\"image\"\r\n              width=\"100\"\r\n              height=\"100\"\r\n              [src]=\"card.url\"\r\n              alt=\"photo\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </mat-card>\r\n    </div>\r\n  </ng-container>\r\n</div>\r\n","import {\r\n  Component,\r\n  ElementRef,\r\n  OnInit,\r\n  ViewChild,\r\n  OnDestroy,\r\n} from \"@angular/core\";\r\nimport { MatDialogRef, MatDialog } from \"@angular/material/dialog\";\r\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\r\nimport { Subscription } from \"rxjs\";\r\nimport { AppConfirmService } from \"app/shared/services/app-confirm/app-confirm.service\";\r\nimport { AppLoaderService } from \"app/shared/services/app-loader/app-loader.service\";\r\nimport { ApiService } from \"app/shared/services/api.service\";\r\nimport { Router } from \"@angular/router\";\r\nimport { LocalStoreService } from \"app/shared/services/local-store.service\";\r\nimport { DataService } from \"app/shared/services/data.service\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort, Sort } from \"@angular/material/sort\";\r\nimport { LiveAnnouncer } from \"@angular/cdk/a11y\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { rumangoAnimations } from \"app/shared/animations/rumango-animations\";\r\nimport { DownloadService } from \"app/shared/services/download.service\";\r\n\r\n@Component({\r\n  selector: \"app-account-type-crud-table\",\r\n  templateUrl: \"./account-type-crud-table.component.html\",\r\n  styleUrls: [\"./account-type-crud-table.component.scss\"],\r\n  animations: rumangoAnimations\r\n})\r\nexport class AccountTypeCrudTableComponent implements OnInit, OnDestroy {\r\n  @ViewChild(\"searchVal\") searchVal: ElementRef;\r\n  selectedFilterIndex: number = 0;\r\n  displayedColumns: string[] = [ 'accountTypeName', 'accountTypeDescription', 'authStatus','recordStatus','action'];\r\n  filterByOption: { key: string; value: string }[] = [\r\n    { key: \"accountTypeName\", value: \"Account Type Name\" },\r\n  ];\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  dataSource = new MatTableDataSource();\r\n\r\n  accountTypeName:string[]=[];\r\n  public items: string[];\r\n  public getItemSub: Subscription;\r\n  loading: boolean;\r\n  currentUser: string;\r\n\r\n  constructor(\r\n    private dialog: MatDialog,\r\n    private snack: MatSnackBar,\r\n    private confirmService: AppConfirmService,\r\n    private loader: AppLoaderService,\r\n    private apiService: ApiService,\r\n    private router: Router,\r\n    private ls: LocalStoreService,\r\n    private dataService: DataService,\r\n    private _liveAnnouncer: LiveAnnouncer,\r\n    private downloadService: DownloadService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.currentUser = this.ls.getItem(\"ICUST_USER\");\r\n    this.getItems();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.getItemSub) {\r\n      this.getItemSub.unsubscribe();\r\n    }\r\n  }\r\n  getItems() {\r\n    this.loading = true;\r\n    //this.items = transactionType;\r\n    this.getItemSub = this.apiService\r\n      .fetchAccountTypeInfo()\r\n      .subscribe((data) => {\r\n        this.items = data;\r\n        console.log(data);\r\n        \r\n        for(let i=0;i<data.length;i++){\r\n\r\n          if(data[i].authStatus == 'U'){\r\n            data[i].authStatus = 'Unauthorized'\r\n          }\r\n          if(data[i].authStatus == 'A') {\r\n            data[i].authStatus = 'Authorized'\r\n          } \r\n          if(data[i].recordStatus == 'O'){\r\n            data[i].recordStatus = 'Open'\r\n          } \r\n          if(data[i].recordStatus == 'C'){\r\n            data[i].recordStatus = 'Closed'\r\n          }\r\n\r\n        }\r\n        this.dataSource = new MatTableDataSource(data);\r\n        console.log(this.dataSource);\r\n        this.dataSource.paginator = this.paginator;\r\n        this.items = data;\r\n        this.dataSource.sort = this.sort;\r\n      this.loading = false;\r\n      });\r\n  }\r\n  onFileChange(event) {\r\n    console.log('event', event.path[0].files[0]);\r\n    const file: File = event.path[0].files[0];\r\n    const uploadData = new FormData();\r\n    uploadData.append('screenType', 'accountType');\r\n    uploadData.append('file', file);\r\n    this.apiService.uploadExelFile(uploadData).subscribe((response) => {\r\n      console.log(response);\r\n      this.getItems();\r\n      this.snack.open(`File Uploaded Successfully`, \"OK\", {\r\n        duration: 4000,\r\n        verticalPosition: \"top\",\r\n        horizontalPosition: \"right\",\r\n      });\r\n    });\r\n  }\r\n  accountTypeMaintenance(){\r\n    this.downloadService.downloadFiles(\"accountTypeMaintenance\",this.items);\r\n  }\r\n\r\n  deleteItem(row) {\r\n    this.confirmService\r\n      .confirm({ message: `Delete ${row.accountTypeName}?` })\r\n      .subscribe((res) => {\r\n        if (res) {\r\n          this.loader.open();\r\n          this.apiService\r\n            .deleteAccountType(row.accountTypeId)\r\n            .subscribe((res: any) => {\r\n              if (res.status == 200) {\r\n              this.loader.close();\r\n                this.getItems();\r\n                this.snack.open('Record deleted!', 'OK', { duration: 4000 })\r\n            } (err: any) => {\r\n            }\r\n            })\r\n        }\r\n      });\r\n  }\r\n\r\n  doFilter(filterBy, e) {\r\n    this.filterTable(filterBy);\r\n    this.applyFilter(e);\r\n  }\r\n\r\n  filterTable(filterBy) {\r\n    this.dataSource.filterPredicate = (data: any, filter: string): boolean => {\r\n      return data[filterBy].toLocaleLowerCase().includes(filter);\r\n    };\r\n  }\r\n\r\n  clearFilter() {\r\n    this.dataSource.filter = \"\";\r\n    this.searchVal.nativeElement.value = \"\";\r\n    this.selectedFilterIndex = 0;\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n \r\n  announceSortChange(sortState: Sort) {\r\n    if (sortState.direction) {\r\n      this._liveAnnouncer.announce(`Sorted ${sortState.direction}ending`);\r\n    } else {\r\n      this._liveAnnouncer.announce('Sorting cleared');\r\n    }\r\n  }\r\n \r\n\r\n  openPopUp(row) {\r\n    \r\n    \r\n    this.router.navigate([`/maintenance/main/accountType/${row.accountTypeId}`],{ queryParams: { id: row.accountTypeId, isEdit : true } });\r\n  }\r\n\r\n  addNew() {\r\n    this.router.navigate([\"/maintenance/main/accountType/add\"]);\r\n  }\r\n\r\n  goBack() {\r\n    this.router.navigate([\"/maintenance/main\"]);\r\n  }\r\n  dataByFilter(index, item){\r\n    return item.key;\r\n  }\r\n}\r\n","<h1 class=\"main-head\"><small class=\"small-head\">Home > Maintenance Summary > Account Type Maintenance </small>\r\n</h1>\r\n<div fxLayoutAlign=\"center\">\r\n  <mat-spinner *ngIf=\"loading\"></mat-spinner>\r\n</div>\r\n<div fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"mt-24\">\r\n  <button mat-icon-button (click)=\"goBack()\">\r\n    <mat-icon>arrow_back</mat-icon>\r\n  </button>\r\n  <span class=\"text-large\">\r\n    Account Type Maintenance\r\n  </span>\r\n  </div>\r\n<mat-card class=\"mt-32\">\r\n  <div >    \r\n    <table style=\"margin: 18px;\">\r\n      <tr>\r\n        <td>\r\n          <h2>\r\n            Account Types\r\n          </h2>\r\n        </td>\r\n      </tr>\r\n      <tr>\r\n        <td>\r\n          <div class=\"highlight\">\r\n          </div>\r\n        </td>\r\n      </tr>\r\n    </table>\r\n  <span fxFlex></span>\r\n  <button mat-icon-button [matMenuTriggerFor]=\"menu\">\r\n    <mat-icon>more_vert</mat-icon>\r\n  </button>\r\n  <mat-menu #menu=\"matMenu\">\r\n    <div class=\"upload_botton\">\r\n      <button type=\"button\" mat-menu-item>Upload</button>\r\n      <input\r\n        type=\"file\"\r\n        accept=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\"\r\n        class=\"btn btn-success\"\r\n        (change)=\"onFileChange($event)\"\r\n      />\r\n    </div>\r\n    <button (click)=\"accountTypeMaintenance()\" mat-menu-item>\r\n      <span>Download</span>\r\n    </button>\r\n  </mat-menu>\r\n  </div>\r\n\r\n  \r\n    <div fxLayout=\"row\" class=\"w-full\" fxLayoutAlign=\"space-arround center\" class=\"ml-18 mt-32\">\r\n      <div fxLayout=\"row\" class=\"w-full\"  fxLayoutGap=\"10px\">\r\n        <div>\r\n          <mat-form-field appearance=\"outline\">\r\n            <mat-label>Filter By</mat-label>\r\n            <mat-select name=\"filterBy\" #filterBy [(ngModel)]=\"selectedFilterIndex\" placeholder=\"Filter By\">\r\n              <!-- <mat-select name=\"filterBy\" #filterBy [(ngModel)]=\"selectedFilterIndex\"> -->\r\n              <mat-option value=\"0\">Select</mat-option>\r\n              <mat-option *ngFor=\"let filter of filterByOption; trackBy: dataByFilter\" value=\"{{filter.key}}\">\r\n                {{filter.value}}\r\n              </mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n        </div>\r\n        <div>\r\n          <mat-form-field appearance=\"outline\">\r\n            <mat-label>Search</mat-label>\r\n            <input matInput #searchVal (keyup)=\"doFilter(filterBy.value,$event)\" placeholder=\"Search\">\r\n            <!-- <input matInput #searchVal (keyup)=\"doFilter(filterBy.value,$event)\"> -->\r\n            <mat-icon matSuffix>search</mat-icon>\r\n          </mat-form-field>\r\n        </div>\r\n        <div *ngIf=\"searchVal.value || filterBy.value\" class=\"resetDiv\">\r\n          <button mat-stroked-button class=\"clearBtn\" (click)=\"clearFilter()\">RESET\r\n          </button>\r\n        </div>\r\n        <div class=\"filterDiv\">\r\n         <button mat-flat-button color=\"primary\" class=\"addNewBtn\" routerLink=\"/maintenance/main/bank/add\" >ADD NEW\r\n         </button>\r\n       </div>\r\n      \r\n    </div>\r\n    </div>\r\n    <div class=\"mat-elevation-z0\">\r\n      <mat-table class=\"w-full\" [dataSource]=\"dataSource\" matSort (matSortChange)=\"announceSortChange($event)\">\r\n    <!-- <ngx-datatable class=\"material ml-0 mr-0\" [rows]=\"items\" [columnMode]=\"'force'\" [headerHeight]=\"50\"\r\n      [footerHeight]=\"50\" [scrollbarH]=\"true\" [limit]=\"6\" [rowHeight]=\"50\"> -->\r\n      <ng-container matColumnDef=\"accountTypeName\">\r\n        <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Name \"> Name\r\n        </mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\"> {{ element.accountTypeName }} </mat-cell>\r\n      </ng-container>\r\n      <ng-container matColumnDef=\"accountTypeDescription\">\r\n        <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Description \"> Description\r\n        </mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\"> {{ element.accountTypeDescription }}</mat-cell>\r\n      </ng-container>\r\n      <ng-container matColumnDef=\"authStatus\">\r\n        <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Auth Status\"> Auth Status\r\n        </mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\"> {{ element.authStatus }} </mat-cell>\r\n      </ng-container>\r\n      <ng-container matColumnDef=\"recordStatus\">\r\n        <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Record Status\"> Record Status\r\n        </mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\"> {{ element.recordStatus }} </mat-cell>\r\n      </ng-container>\r\n      <!-- <ng-container matColumnDef=\"status\">\r\n        <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by status\"> Status         \r\n        </mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\">  <mat-chip mat-sm-chip [color]=\"'primary'\" [selected]=\"element.isActive\">{{element.isActive ? 'active' : 'inactive'}}\r\n        </mat-chip> </mat-cell>\r\n      </ng-container> -->\r\n      <ng-container matColumnDef=\"action\">\r\n        <mat-header-cell *matHeaderCellDef>Action</mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\">\r\n          <div>\r\n           <mat-icon class=\"actionIcons\" matTooltip=\"Edit\" (click)=\"openPopUp(element)\" >edit</mat-icon>\r\n        </div>&nbsp;&nbsp;&nbsp;&nbsp;\r\n        <div>\r\n         <mat-icon class=\"actionIcons\" matTooltip=\"Delete\" [disabled]=\"element.oneTimeAuth =='Y'\"  (click)=\"deleteItem(element)\" >delete</mat-icon>\r\n        </div>\r\n        </mat-cell>\r\n      </ng-container>\r\n      <mat-header-row *matHeaderRowDef=\"displayedColumns;\"></mat-header-row>\r\n    <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\r\n  </mat-table>\r\n  <mat-paginator class=\"mt-16\" [pageSizeOptions]=\"[5, 10, 20]\" aria-label=\"Select page of users\"></mat-paginator>\r\n</div>\r\n\r\n</mat-card>\r\n\r\n      <!-- <ngx-datatable-column name=\"Name\" [flexGrow]=\"1\">\r\n        <ng-template let-row=\"row\" ngx-datatable-cell-template>\r\n          {{ row?.accountTypeName }}\r\n        </ng-template>\r\n      </ngx-datatable-column> -->\r\n      <!-- <ngx-datatable-column name=\"Description\" [flexGrow]=\"1\">\r\n        <ng-template let-row=\"row\" ngx-datatable-cell-template>\r\n          {{ row?.accountTypeDescription }}\r\n        </ng-template>\r\n      </ngx-datatable-column> -->\r\n      <!-- <ngx-datatable-column name=\"Auth Status\" [flexGrow]=\"1\">\r\n        <ng-template let-row=\"row\" ngx-datatable-cell-template>\r\n          {{ row?.authStatus }}\r\n        </ng-template>\r\n      </ngx-datatable-column> -->\r\n      <!-- <ngx-datatable-column name=\"Record Status\" [flexGrow]=\"1\">\r\n        <ng-template let-row=\"row\" ngx-datatable-cell-template>\r\n          {{ row?.recordStatus }}\r\n        </ng-template>\r\n      </ngx-datatable-column> -->\r\n      <!-- <ngx-datatable-column name=\"Status\" [flexGrow]=\"1\">\r\n        <ng-template let-row=\"row\" ngx-datatable-cell-template>\r\n          <mat-chip mat-sm-chip [color]=\"'primary'\" [selected]=\"row.isActive\">{{row.isActive ? 'active' : 'inactive'}}\r\n          </mat-chip>\r\n        </ng-template>\r\n      </ngx-datatable-column> -->\r\n      <!-- <ngx-datatable-column name=\"Actions\" [flexGrow]=\"1\">\r\n        <ng-template let-row=\"row\" ngx-datatable-cell-template>\r\n          <button mat-icon-button mat-sm-button color=\"primary\" class=\"mr-16\" (click)=\"openPopUp(row)\">\r\n            <mat-icon>edit</mat-icon>\r\n          </button>\r\n          <button mat-icon-button mat-sm-button color=\"warn\" [disabled]=\"row.oneTimeAuth =='Y'\"\r\n            (click)=\"deleteItem(row)\">\r\n            <mat-icon>delete</mat-icon>\r\n          </button>\r\n        </ng-template>\r\n      </ngx-datatable-column> \r\n      \r\n    </ngx-datatable>-->\r\n    <!-- </mat-table>\r\n    <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\" aria-label=\"Select page of users\"></mat-paginator>\r\n    </div>\r\n     <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\" aria-label=\"Select page of users\"></mat-paginator> \r\n  </mat-card-content>\r\n</mat-card> -->","import { ChangeDetectorRef, Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { MatDialogRef, MatDialog } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Subject, Subscription } from 'rxjs';\r\nimport { rumangoAnimations } from 'app/shared/animations/rumango-animations';\r\nimport { AppConfirmService } from 'app/shared/services/app-confirm/app-confirm.service';\r\nimport { AppLoaderService } from 'app/shared/services/app-loader/app-loader.service';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { Location } from '@angular/common';\r\nimport { ActivatedRoute, Data, Router } from '@angular/router';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { FormArray, FormBuilder, FormGroup } from '@angular/forms';\r\nimport { Validators } from '@angular/forms';\r\nimport { SendHolidayScreenService } from 'app/shared/services/send-holiday-screen.service';\r\nimport { DataService } from 'app/shared/services/data.service';\r\nimport Swal from 'sweetalert2';\r\n\r\n\r\n@Component({\r\n  selector: 'app-add-holiday',\r\n  templateUrl: './add-holiday.component.html',\r\n  styleUrls: ['./add-holiday.component.scss']\r\n})\r\nexport class AddHolidayComponent implements OnInit {\r\n  addBranchHoliday: FormGroup;\r\n  icBranchHolidayModel: any[] = [];\r\n\r\n\r\n  yearArr: any[] = [2025, 2024, 2023, 2022, 2021, 2020];\r\n  branchCode: string[] = [];\r\n  bankCode: string[] = [];\r\n  entityCode: string[] = [];\r\n  addBranchHolidayFormData: { data: any; holidayModel:any; action:any};\r\n\r\n  dateList: any[];\r\n  disableSave:boolean=false;\r\n  isEdit: boolean=false;\r\n  id: any;\r\n  holidayModelResp: any;\r\n  screen: string;\r\n  auditLogData: any;\r\n  readorWrite: boolean=true;\r\n  loggedInUser: any;\r\n\r\n  constructor(\r\n    private _location: Location,\r\n    private router: Router,\r\n    private dialog: MatDialog,\r\n    private cdr: ChangeDetectorRef,\r\n    private formBuilder: FormBuilder,\r\n    private snack: MatSnackBar,\r\n    private confirmService: AppConfirmService,\r\n    private loader: AppLoaderService,private route : ActivatedRoute,\r\n    private apiService: ApiService,\r\n    private dataService:DataService,\r\n    private screenService: SendHolidayScreenService,\r\n    private ls: LocalStoreService\r\n  ) {\r\n    this.screenService.holidayScr.subscribe(res=>{\r\n      console.log(res);\r\n      this.screen=res;\r\n      this.cdr.checkNoChanges();\r\n      this.cdr.markForCheck();\r\n      console.log(this.screen);\r\n     });\r\n    console.log(\"screen name\",this.screen);\r\n    this.disableSave=false;\r\n   this.buildItemForm({});\r\n  \r\n  }\r\n  buildItemForm(item) {\r\n    this.addBranchHoliday = this.formBuilder.group({\r\n      bankCode: [item.bankCode || '', [Validators.required]],\r\n      branchCode: [item.branchCode || ''],\r\n      currencyCode: [item.currencyCode || ''],\r\n      calenderYear: [item.calenderYear || '', [Validators.required]],\r\n      entityCode: [item.entityCode || '', [Validators.required]],\r\n      description: [item.description || ''],\r\n      holidayType: [item.holidayType || '']\r\n    })\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    console.log(\"screen name\",this.screen);\r\n    this.loggedInUser = this.ls.getItem('ICUST_USER').userName;\r\n    this.loadData();\r\n    this.route.queryParamMap.subscribe((params: any) => {\r\n      if(params.get('id')){\r\n        this.isEdit = true;\r\n        this.id = params.get('id');\r\n        if(this.screen===\"Branch\"){\r\n        this.apiService.editeditBranchHoliday(params.get('id')).subscribe((resp) =>{\r\n           this.buildItemForm(resp);\r\n           this.dateList.push(resp.calenderDate)\r\n           console.log(resp)\r\n           this.auditLogData=resp;\r\n           this.dataService.setAuditLogData(this.auditLogData);\r\n           this.dataService.sendClickEvent();\r\n           this.holidayModelResp=resp;\r\n           this.assignFormValue('','UPDATE');\r\n        });\r\n      }else if(this.screen===\"Currency\"){\r\n        this.apiService.editCurrencyHoliday(params.get('id')).subscribe((resp)=>{\r\n          this.buildItemForm(resp);\r\n          this.auditLogData=resp;\r\n          this.dataService.setAuditLogData(this.auditLogData);\r\n          this.dataService.sendClickEvent();\r\n          this.holidayModelResp=resp;\r\n          this.assignFormValue('','UPDATE');\r\n        })\r\n      }\r\n    }\r\n      else{\r\n        this.readorWrite=false;\r\n        this.buildItemForm({});\r\n      }\r\n    }\r\n    );\r\n  }\r\n\r\n  commonHoliday(){\r\n    if(this.screen==='branch'){\r\n      this.router.navigate([\"/maintenance/main/holiday/BranchHoliday/commonHoliday\"]);\r\n    }else \r\n    this.router.navigate([\"/maintenance/main/holiday/BranchHoliday/commonHoliday\"]);\r\n  }\r\n  addBranch(){\r\n    this.router.navigate([\"/maintenance/main/holiday/BranchHoliday/addBranch\"]);\r\n    \r\n  }\r\n  deleteRecord(operation){\r\n    Swal.fire(\r\n      {\r\n        text: 'You are trying to '+ operation +' record.' + ' Do you want to proceed?',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        // confirmButtonText: 'PROCEED.'\r\n        cancelButtonText: 'NO',\r\n        confirmButtonText: 'YES', 'icon': 'info'\r\n      }\r\n    ).then((result => {\r\n      if(result.isConfirmed==true){\r\n        this.apiService.deleteCurrencyHoliday(this.auditLogData.id)\r\n        .subscribe(data => {\r\n          if(this.screen===\"Branch\"){\r\n            this.router.navigate([\"/maintenance/main/holiday/BranchHoliday/addHoliday\"]);\r\n          }\r\n          else if(this.screen===\"Currency\"){\r\n            this.router.navigate([\"/maintenance/main/holiday/currencyholiday\"]);\r\n          }\r\n          \r\n        },\r\n        err=>{\r\n          if (err.status == 200) {\r\n            this.snack.open('Record Deleted Successfully', 'OK', {\r\n              duration: 4000,\r\n              verticalPosition: 'top',\r\n              horizontalPosition: 'right'\r\n            });\r\n          }\r\n          if(this.screen===\"Branch\"){\r\n            this.router.navigate([\"/maintenance/main/holiday/BranchHoliday/addHoliday\"]);\r\n          }\r\n          else if(this.screen===\"Currency\"){\r\n            this.router.navigate([\"/maintenance/main/holiday/currencyholiday\"]);\r\n          }\r\n        \r\n      })\r\n      }}))\r\n   \r\n         \r\n       \r\n  }\r\n  editRecord(){\r\n    this.readorWrite=false;\r\n  }\r\n\r\n  resetFormSubject: Subject<boolean> = new Subject<boolean>();\r\n\r\n\r\n  loadData() {\r\n    this.getBankCode();\r\n    if(this.screen===\"Branch\"){\r\n      this.getBranchCode();\r\n    }else if(this.screen===\"Currency\"){\r\n      this.getCurrencyCode();\r\n    }\r\n    this.getEnityCode();\r\n  }\r\n  goBack() {\r\n    this._location.back();\r\n  }\r\n  keyPress1(event: any) {\r\n    const pattern = /[a-zA-Z0-9]/;\r\n    let inputChar = String.fromCharCode(event.charCode);\r\n    if (!pattern.test(inputChar)) {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n  assignFormValue(event,action) {   \r\n    if(action === 'UPDATE'){\r\n      console.log(this.addBranchHoliday);\r\n\r\n      if(this.screen===\"Branch\"){\r\n        var params1 = new HttpParams().append('bankCode', this.addBranchHoliday.value.bankCode)\r\n      .append('branchCode', this.addBranchHoliday.value.branchCode)\r\n      .append('calenderYear', this.addBranchHoliday.value.calenderYear)\r\n      .append('entityCode', this.addBranchHoliday.value.entityCode);\r\n      console.log(\"param\", params1);\r\n      this.apiService.findByCalenderYearAndEntityCodeAndBankCodeAndBranchCode(params1)\r\n      .subscribe(holidayModel=>{\r\n        this.addBranchHolidayFormData = {\r\n          'data': this.addBranchHoliday.value,\r\n          'holidayModel':holidayModel,\r\n          'action':action\r\n        }\r\n      })\r\n      }\r\n      else if(this.screen===\"Currency\"){\r\n        var params1 = new HttpParams().append('bankCode', this.addBranchHoliday.value.bankCode)\r\n        .append('currencyCode', this.addBranchHoliday.value.currencyCode)\r\n        .append('calenderYear', this.addBranchHoliday.value.calenderYear)\r\n        .append('entityCode', this.addBranchHoliday.value.entityCode);\r\n        console.log(\"param\", params1);\r\n        this.apiService.findByCalenderYearAndEntityCodeAndBankCodeAndCurrencyCode(params1)\r\n      .subscribe(holidayModel=>{\r\n        this.addBranchHolidayFormData={\r\n          'data': this.addBranchHoliday.value,\r\n          'holidayModel': holidayModel,\r\n          'action': action\r\n        }\r\n      })\r\n\r\n      }\r\n\r\n     \r\n    }else{\r\n      this.addBranchHolidayFormData = {\r\n        'data': this.addBranchHoliday.value,\r\n        'holidayModel':'',\r\n        'action':action\r\n      }\r\n\r\n    }\r\n  }\r\n\r\n  public doSomething(dateList: any[]): void {\r\n\r\n    this.dateList = [];\r\n    this.dateList = dateList;\r\n\r\n  }\r\n  resetChildForm() {\r\n    this.resetFormSubject.next(true);\r\n  }\r\n\r\n  saveHoliday(addBranchHoliday) {\r\n    console.log(\"add branch holiday\", addBranchHoliday)\r\n    this.isEdit=false;\r\n    let details: any[] = [];\r\n\r\n    this.dateList.forEach((v, k) => {\r\n      console.log(\"date\", v)\r\n      if(this.screen===\"Branch\"){\r\n        let payload = {\r\n          entityCode: addBranchHoliday.entityCode,\r\n          bankCode: addBranchHoliday.bankCode,\r\n          branchCode: addBranchHoliday.branchCode,\r\n          calenderYear: addBranchHoliday.calenderYear,\r\n          description:  addBranchHoliday.description,\r\n          holidayType: this.ls.getItem('holidayType'),\r\n          calenderDate: v,\r\n          id:this.auditLogData?.id,\r\n          createdBy: this.loggedInUser\r\n        }\r\n        details.push(payload);\r\n      }else if(this.screen===\"Currency\"){\r\n        let payload = {\r\n          entityCode: addBranchHoliday.entityCode,\r\n          bankCode: addBranchHoliday.bankCode,\r\n          currencyCode: addBranchHoliday.currencyCode,\r\n          calenderYear: addBranchHoliday.calenderYear,\r\n          description:  addBranchHoliday.description,\r\n          holidayType:  this.ls.getItem('holidayType'),\r\n          calenderDate: v,\r\n          id:this.auditLogData?.id,\r\n          createdBy: this.loggedInUser\r\n        }\r\n        details.push(payload);\r\n      }\r\n      \r\n    });\r\n    if(this.screen===\"Branch\"){\r\n      this.apiService.updateBranchHolidayDetails(details,this.isEdit)\r\n    .subscribe(data => {\r\n      if (data != null) {\r\n        this.disableSave=true;\r\n        this.snack.open('Data Saved' + ' !', 'OK', {\r\n          duration: 4000,\r\n          verticalPosition: 'top',\r\n          horizontalPosition: 'right'\r\n        });\r\n        this._location.back();\r\n        this.cdr.markForCheck();\r\n      }\r\n\r\n    },error=>{\r\n      this.disableSave=true;\r\n      this.snack.open(`${error.error}` + ' !', 'OK', {\r\n        duration: 4000,\r\n        verticalPosition: 'top',\r\n        horizontalPosition: 'right',\r\n        panelClass: 'snackbar-error'\r\n      });\r\n    \r\n    });\r\n    }else if(this.screen===\"Currency\"){\r\n\r\n      this.apiService.upsertCurrencyHolidayDetails(details)\r\n    .subscribe(data => {\r\n      if (data != null) {\r\n        this.disableSave=true;\r\n        this.snack.open('Data Saved' + ' !', 'OK', {\r\n          duration: 4000,\r\n          verticalPosition: 'top',\r\n          horizontalPosition: 'right'\r\n        });\r\n        this._location.back();\r\n        this.cdr.markForCheck();\r\n      }\r\n\r\n    },error=>{\r\n      this.disableSave=true;\r\n      this.snack.open(`${error.error}` + ' !', 'OK', {\r\n        duration: 4000,\r\n        verticalPosition: 'top',\r\n        horizontalPosition: 'right',\r\n        panelClass: 'snackbar-error'\r\n      });\r\n    \r\n    });\r\n\r\n    }\r\n    \r\n\r\n    \r\n\r\n  }\r\n  updateRecord(operation) {\r\n    console.log(\"operations\")\r\n    Swal.fire(\r\n      {\r\n        //text: 'Unable to process' + 'Error ' + this.responseforfileupload.errorMessage + 'Do you want to Proceed??',\r\n        text: 'You are trying to '+ operation +' record.' + ' Do you want to proceed?',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        // confirmButtonText: 'PROCEED.'\r\n        cancelButtonText: 'NO',\r\n        confirmButtonText: 'YES', 'icon': 'info'\r\n      }\r\n    ).then((result => {\r\n      if(result.isConfirmed==true){\r\n        let payload: any = {};\r\n        payload.id = this.id;\r\n        payload.operation = operation;\r\n        payload.loggedInUser = this.loggedInUser;\r\n        if(this.screen===\"Branch\"){\r\n          this.apiService.getAuditLogsForHolidayBranch(payload).subscribe((data) => {\r\n            this.auditLogData = data;\r\n            this.dataService.setAuditLogData(this.auditLogData);\r\n            this.dataService.sendClickEvent();\r\n            let message = '';\r\n            switch (operation) {\r\n              case 'open':\r\n                message = 'opened'\r\n                break;\r\n              case 'close':\r\n                message = 'closed'\r\n                break;\r\n              case 'auth':\r\n                message = 'authorized'\r\n                break;\r\n              default:\r\n                break;\r\n            }\r\n            this.snack.open(`Record ${message} successful!'`, \"OK\", {\r\n              duration: 2000,\r\n              verticalPosition: \"top\",\r\n              horizontalPosition: \"right\",\r\n            });\r\n          });\r\n        }\r\n        else if(this.screen===\"Currency\"){\r\n          this.apiService.getAuditLogsForCurrencyBranch(payload).subscribe((data) => {\r\n            this.auditLogData = data;\r\n            this.dataService.setAuditLogData(this.auditLogData);\r\n            this.dataService.sendClickEvent();\r\n            let message = '';\r\n            switch (operation) {\r\n              case 'open':\r\n                message = 'opened'\r\n                break;\r\n              case 'close':\r\n                message = 'closed'\r\n                break;\r\n              case 'auth':\r\n                message = 'authorized'\r\n                break;\r\n              default:\r\n                break;\r\n            }\r\n            this.snack.open(`Record ${message} successful!'`, \"OK\", {\r\n              duration: 2000,\r\n              verticalPosition: \"top\",\r\n              horizontalPosition: \"right\",\r\n            });\r\n          });\r\n        }else{\r\n          \r\n        }\r\n       \r\n      }\r\n    }))\r\n    \r\n  }\r\n  getBranchCode() {\r\n    this.apiService.getBranchCode().subscribe(branchCodeResp => {\r\n      console.log(branchCodeResp);\r\n      for(let i=0; i<branchCodeResp.length;i++){\r\n        if(branchCodeResp[i].authStatus==='A'){\r\n          this.branchCode.push(branchCodeResp[i].branchCode);\r\n        }\r\n      }\r\n      console.log(this.branchCode);\r\n      // this.branchCode = branchCodeResp;\r\n    });\r\n  }\r\n  getCurrencyCode(){\r\n    this.apiService.fetchCurrencyMaintDetails().subscribe(currencyResp =>{\r\n      console.log(currencyResp);\r\n      for(let i=0; i<currencyResp.length;i++){\r\n        if(currencyResp[i].authStatus==='A'){\r\n          this.branchCode.push(currencyResp[i].currencyId.currencyCode);\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  trackByFnBranchCode(index, item) {\r\n    return index; \r\n  }\r\n\r\n  trackByFnYearArr(index, item) {\r\n    return index; \r\n  }\r\n\r\n  trackByFnEntityCode(index, item) {\r\n    return index; \r\n  }\r\n\r\n  trackByFnBankCode(index, item) {\r\n    return index; \r\n  }\r\n\r\n  getBankCode() {\r\n    this.apiService.getBankCode().subscribe(bankCodeResp => {\r\n      console.log(bankCodeResp);\r\n      for(let i=0; i<bankCodeResp.length;i++){\r\n        if(bankCodeResp[i].authStatus==='A'){\r\n          this.bankCode.push(bankCodeResp[i]);\r\n        }\r\n      }\r\n      console.log(this.bankCode);\r\n      // this.bankCode = bankCodeResp;\r\n    });\r\n  }\r\n\r\n  getEnityCode() {\r\n    this.apiService.fetchEntityDetails().subscribe(entityCodeResp => {\r\n      console.log(entityCodeResp);\r\n      for(let i=0; i<entityCodeResp.length;i++){\r\n        if(entityCodeResp[i].authStatus==='A'){\r\n          this.entityCode.push(entityCodeResp[i]);\r\n        }\r\n      }\r\n      console.log(this.entityCode);\r\n      // this.entityCode = entityCodeResp;\r\n    });\r\n  }\r\n  addNew(screen) {\r\n    console.log(screen)\r\n    if(screen==='Currency'){\r\n      this.router.navigate([\"/maintenance/main/holiday/currencyholiday\"]);\r\n    }else\r\n    this.router.navigate([\"/maintenance/main/holiday/BranchHoliday\"]);\r\n  }\r\n  dataByYear(index,year){\r\n    return year;\r\n  }\r\n  dataByEntity(index,entityC){\r\n    return entityC.entityCode;\r\n  }\r\n  dataByBank(index,bankC){\r\n    return bankC.bankCode;\r\n  }\r\n  dataByBranch(index,branch){\r\n    return branch.branchCode;\r\n  }\r\n}\r\n","<h1 class=\"main-head\"><small class=\"small-head\">Home > Maintenance Summary >\r\n    Holiday Maintenance > {{screen}} Maintenance</small></h1>\r\n<div fxLayoutAlign=\"center\">\r\n\r\n</div>\r\n<div fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"mt-24\">\r\n  <button mat-icon-button (click)=\"goBack()\">\r\n    <mat-icon>arrow_back</mat-icon>\r\n  </button>\r\n  <span class=\"text-large\">\r\n    {{screen}} Maintenance\r\n  </span>\r\n\r\n  <span fxFlex></span>\r\n  <mat-button-toggle-group value=\"calendar\" appearance=\"legacy\" name=\"fontStyle\" aria-label=\"Font Style\">\r\n    <mat-button-toggle (click)=\"addNew(screen)\" value=\"table\"><span>TABLE</span></mat-button-toggle>\r\n    <mat-button-toggle value=\"calendar\"><span>CALENDAR</span></mat-button-toggle>\r\n  </mat-button-toggle-group>\r\n\r\n</div>\r\n<form [formGroup]=\"addBranchHoliday\" ngNativeValidate>\r\n\r\n  <mat-card class=\"mt-32\">\r\n    <mat-card-content>\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"mt-24\">\r\n\r\n        <span class=\"text-large\">\r\n          {{screen}} Maintenance\r\n        </span>\r\n        <span fxFlex></span>\r\n        <!-- <button mat-icon-button [matMenuTriggerFor]=\"menu\">\r\n          <mat-icon>more_vert</mat-icon>\r\n        </button> -->\r\n        <!-- <mat-menu #menu=\"matMenu\">\r\n          <button mat-menu-item>\r\n            <span>Export</span>\r\n          </button>\r\n          <button mat-menu-item>\r\n            <span>Download</span>\r\n          </button>\r\n        </mat-menu> -->\r\n      </div>\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\" fxLayoutGap=\"15px\">\r\n        <div class=\"pr-16\" fxFlex=\"20%\" *ngIf=\"!readorWrite\">\r\n          <mat-hint>year</mat-hint>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n\r\n            <mat-select *ngIf=\"!readorWrite\" formControlName=\"calenderYear\" (selectionChange)=\"assignFormValue($event,'')\" required>\r\n              <mat-option *ngFor=\"let year of yearArr; trackBy:dataByYear\" [value]=\"year\">\r\n\r\n                {{year}}\r\n              </mat-option>\r\n            </mat-select>\r\n            <mat-error *ngIf=\"addBranchHoliday.get('calenderYear').hasError('required')\">\r\n              Year is Required!\r\n            </mat-error>\r\n          </mat-form-field>\r\n\r\n        </div>\r\n        <div class=\"pr-16\" fxFlex=\"20%\" *ngIf=\"readorWrite\">\r\n          <mat-hint>year</mat-hint>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n         <input matInput formControlName=\"calenderYear\" />\r\n          </mat-form-field>\r\n\r\n        </div>\r\n        <div>\r\n          <button mat-flat-button color=\"primary\"  class=\"mr-38\" style=\"height: 45px;\" >ADD NEW\r\n              <button mat-icon-button>\r\n                <mat-icon [matMenuTriggerFor]=\"accountMenu\"\r\n                  >keyboard_arrow_down</mat-icon>\r\n              <mat-menu #accountMenu=\"matMenu\" style=\"width: 50ox;\" >\r\n                <mat-nav-list *ngIf=\"screen==='Branch'\" role=\"list\" class=\"notification-list\" >\r\n                  <mat-list-item\r\n                  role=\"listitem\"\r\n                  class=\"notific-item\">\r\n                  <div (click)=\"commonHoliday()\">\r\n                    <small>\r\n                     Common Holiday\r\n                   </small>\r\n                  </div>\r\n                  </mat-list-item>\r\n                  <mat-list-item\r\n                  role=\"listitem\"\r\n                  class=\"notific-item\">\r\n                  <div (click)=\"addBranch()\">\r\n                    <small >\r\n                      Branch Specific Holiday\r\n                    </small>\r\n                  </div>\r\n      \r\n                  </mat-list-item>\r\n                  <!-- <mat-list-item\r\n                  role=\"listitem\"\r\n                  class=\"notific-item\">\r\n                  <div (click)=\"addBranch()\">\r\n                    <small >\r\n                       Currency Specific Holiday\r\n                    </small>\r\n                  </div>\r\n      \r\n                  </mat-list-item> -->\r\n      \r\n                </mat-nav-list>\r\n                <mat-nav-list *ngIf=\"screen!='Branch'\" role=\"list\" class=\"notification-list\" >\r\n                  <mat-list-item\r\n                  role=\"listitem\"\r\n                  class=\"notific-item\">\r\n                  <div (click)=\"commonHoliday()\">\r\n                    <small>\r\n                     Common Holiday\r\n                   </small>\r\n                  </div>\r\n                  </mat-list-item>\r\n                  <!-- <mat-list-item\r\n                  role=\"listitem\"\r\n                  class=\"notific-item\">\r\n                  <div (click)=\"addBranch()\">\r\n                    <small >\r\n                       Currency Specific Holiday\r\n                    </small>\r\n                  </div>\r\n      \r\n                  </mat-list-item> -->\r\n      \r\n                </mat-nav-list>\r\n              </mat-menu>\r\n              </button>\r\n              </button>\r\n        </div>\r\n      </div>\r\n      <div>\r\n\r\n\r\n      </div>\r\n    </mat-card-content>\r\n\r\n    <div fxLayout=\"row\" fxLayoutGap=\"10px\" fxLayoutAlign=\"space-between center\">\r\n      <div fxFlex=\"33.33\" *ngIf=\"!readorWrite\">\r\n        <div class=\"pb-1\">\r\n          <mat-hint>Entity Code * </mat-hint>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <mat-select formControlName=\"entityCode\" placeholder=\"select entityCode\" required>\r\n\r\n              <mat-option *ngFor=\"let entityC of entityCode; trackBy:dataByEntity\" [value]=\"entityC.entityCode\">\r\n\r\n                {{entityC.entityCode}} </mat-option>\r\n            </mat-select>\r\n            <mat-error *ngIf=\"addBranchHoliday.get('entityCode').hasError('required')\">\r\n              Entity Code is Required!\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n\r\n      </div>\r\n      <div  fxFlex=\"33.33\" *ngIf=\"readorWrite\">\r\n        <div class=\"pb-1\">\r\n          <mat-hint>Entity Code*</mat-hint>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n         <input matInput formControlName=\"entityCode\" />\r\n          </mat-form-field>\r\n\r\n        </div>\r\n      </div>\r\n      <div fxFlex=\"33.33\" *ngIf=\"!readorWrite\">\r\n        <div class=\"pb-1\">\r\n          <mat-hint>Bank Code * </mat-hint>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <mat-select formControlName=\"bankCode\" placeholder=\"select bankCode\">\r\n\r\n              <mat-option *ngFor=\"let bankC of bankCode; trackBy:dataByBank\" [value]=\"bankC.bankCode\"> {{bankC.bankCode}}\r\n\r\n              </mat-option>\r\n            </mat-select>\r\n            <mat-error *ngIf=\"addBranchHoliday.get('bankCode').hasError('required')\">\r\n              Bank Code is Required!\r\n            </mat-error>\r\n          </mat-form-field>\r\n\r\n        </div>\r\n\r\n      </div>\r\n      <div  fxFlex=\"33.33\" *ngIf=\"readorWrite\">\r\n        <div class=\"pb-1\">\r\n          <mat-hint>Bank Code*</mat-hint>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n         <input matInput formControlName=\"bankCode\" />\r\n          </mat-form-field>\r\n\r\n        </div>\r\n      </div>\r\n      <div fxFlex=\"33.33\" *ngIf=\"screen==='Branch' && !readorWrite\">\r\n        <div class=\"pb-1\">\r\n          <mat-hint>{{screen}} Code * </mat-hint>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <mat-select formControlName=\"branchCode\" placeholder=\"select {{screen}}\">\r\n\r\n              <mat-option *ngFor=\"let branch of branchCode; trackBy:dataByBranch\" [value]=\"branch\">\r\n\r\n                {{branch}} </mat-option>\r\n            </mat-select>\r\n            <mat-error *ngIf=\"addBranchHoliday.get('branchCode').hasError('required')\">\r\n              {{screen}} is Required!\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n\r\n      </div>\r\n      <div fxFlex=\"33.33\" *ngIf=\"screen==='Branch' && readorWrite\">\r\n        <div class=\"pb-1\">\r\n          <mat-hint>{{screen}} Code * </mat-hint>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input matInput formControlName=\"branchCode\" />\r\n          </mat-form-field>\r\n        </div>\r\n\r\n      </div>\r\n\r\n      <div fxFlex=\"33.33\"  *ngIf=\"screen==='Currency'\">\r\n        <div class=\"pb-1\">\r\n          <mat-hint>{{screen}} Code * </mat-hint>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <mat-select formControlName=\"currencyCode\" placeholder=\"select {{screen}}\">\r\n\r\n              <mat-option *ngFor=\"let branch of branchCode; trackBy:dataByBranch\" [value]=\"branch\">\r\n\r\n                {{branch}} </mat-option>\r\n            </mat-select>\r\n            <mat-error *ngIf=\"addBranchHoliday.get('branchCode').hasError('required')\">\r\n              {{screen}} is Required!\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n        <!-- <div class=\"pb-1\"  fxFlex=\"20%\" *ngIf=\"readorWrite\">\r\n          <mat-hint>{{screen}} Code*</mat-hint>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n         <input matInput formControlName=\"currencyCode\" />\r\n          </mat-form-field>\r\n\r\n        </div> -->\r\n\r\n      </div>\r\n\r\n\r\n    </div>\r\n\r\n   <app-custom-calendar-arr-type  [addBranchHolidayFormData]=\"addBranchHolidayFormData\" (onDatePicked)=\"doSomething($event)\"></app-custom-calendar-arr-type>\r\n\r\n    <div fxLayout=\"row wrap\" fxLayout.lt-sm=\"column\">\r\n      <div fxFlex=\"100\" class=\"mt-16\" fxLayoutAlign=\"end center\">\r\n        <button \r\n          color=\"primary\" *ngIf=\"!isEdit\"\r\n          [disabled]= \"addBranchHoliday.invalid || disableSave\"\r\n          mat-raised-button \r\n          (click)=\"saveHoliday(addBranchHoliday.value)\"\r\n        >\r\n          Save\r\n        </button>\r\n        <div [hidden]=\"readorWrite\" >\r\n          <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\"  [disabled]= \"!(addBranchHoliday.invalid || addBranchHoliday.dirty) || disableSave\" (click)=\"saveHoliday(addBranchHoliday.value)\">\r\n             Save\r\n            </button>&nbsp;&nbsp;\r\n        </div>\r\n        \r\n        \r\n        <div [hidden]=\"!readorWrite || auditLogData?.recordStatus == 'Close'\">\r\n          <button *ngIf=\"isEdit\" type=\"button\"  mat-raised-button color=\"primary\" (click)=\"editRecord()\">\r\n            Edit\r\n          </button>&nbsp;&nbsp;\r\n        </div>\r\n        <div *ngIf=\"auditLogData?.authStatus == 'Unauthorized' && readorWrite\" [hidden]=\"!readorWrite\">\r\n          <button *ngIf=\"isEdit\" type=\"button\"  mat-raised-button color=\"primary\" (click)=\"updateRecord('auth')\">\r\n            Authorize\r\n          </button>&nbsp;&nbsp;\r\n        </div> \r\n        <div *ngIf=\"auditLogData?.recordStatus == 'Close' && auditLogData?.oneTimeAuth != 'No'\" [hidden]=\"!readorWrite\">\r\n          <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"updateRecord('open')\">\r\n            Reopen\r\n          </button>&nbsp;&nbsp;\r\n        </div>\r\n        <div *ngIf=\"auditLogData?.recordStatus == 'Open' && auditLogData?.oneTimeAuth != 'No'\" [hidden]=\"!readorWrite\">\r\n          <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"updateRecord('close')\">\r\n            Close\r\n          </button>&nbsp;&nbsp;\r\n        </div>\r\n        <div *ngIf=\"auditLogData?.oneTimeAuth == 'No'\" [hidden]=\"!readorWrite\">\r\n          <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"deleteRecord('delete')\">\r\n            Delete\r\n          </button> &nbsp;&nbsp;\r\n        </div>\r\n       \r\n        <button\r\n          mat-raised-button\r\n          color=\"warn\"\r\n          type=\"button\"\r\n          (click)=\"goBack()\"\r\n        >\r\n          Exit\r\n        </button>\r\n      </div>\r\n    </div>\r\n\r\n  </mat-card>\r\n\r\n</form>\r\n\r\n<div *ngIf=\"auditLogData\" class=\"mt-32\">\r\n  <app-audit-log #auditLog></app-audit-log>\r\n</div>","import { Component, ElementRef, OnInit, ViewChild } from \"@angular/core\";\r\nimport { MatDialog, MatDialogRef } from \"@angular/material/dialog\";\r\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\r\nimport { ApiService } from \"app/shared/services/api.service\";\r\nimport { AppConfirmService } from \"app/shared/services/app-confirm/app-confirm.service\";\r\nimport { AppLoaderService } from \"app/shared/services/app-loader/app-loader.service\";\r\nimport { Subscription } from \"rxjs\";\r\nimport { Router } from \"@angular/router\";\r\nimport { DataService } from \"app/shared/services/data.service\";\r\nimport { LocalStoreService } from \"app/shared/services/local-store.service\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort, Sort } from \"@angular/material/sort\";\r\nimport { LiveAnnouncer } from \"@angular/cdk/a11y\";\r\nimport { DownloadService } from \"app/shared/services/download.service\";\r\n@Component({\r\n  selector: \"app-customer-category\",\r\n  templateUrl: \"./customer-category.component.html\",\r\n  styleUrls: [\"./customer-category.component.scss\"],\r\n})\r\nexport class CustomerCategoryComponent implements OnInit {\r\n  @ViewChild(\"searchVal\") searchVal: ElementRef;\r\n  selectedFilterIndex: number = 0;\r\n\r\n  dataSource = new MatTableDataSource();\r\n  displayedColumns: string[] = [\r\n    \"categoryCode\",\r\n    \"categoryName\",\r\n    \"categoryDescription\",\r\n    \"oneTimeAuth\",\r\n    \"authStatus\",\r\n    \"recordStatus\",\r\n    \"action\",\r\n  ];\r\n\r\n  filterByOption: { key: string; value: string }[] = [\r\n    { key: \"categoryCode\", value: \"Category Code\" },\r\n    { key: \"categoryName\", value: \"Category Name\" },\r\n  ];\r\n\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  public users: any[];\r\n  public items: any[];\r\n  entity: any;\r\n  bankCode: any;\r\n  cutomerCategoryMasterValues: any;\r\n  public getItemSub: Subscription;\r\n  fetchcutomerCategory: any;\r\n  id: any;\r\n\r\n  constructor(\r\n    private dialog: MatDialog,\r\n    private snack: MatSnackBar,\r\n    private confirmService: AppConfirmService,\r\n    private loader: AppLoaderService,\r\n    private api: ApiService,\r\n    private router: Router,\r\n    private dataService: DataService,\r\n    private _liveAnnouncer: LiveAnnouncer,\r\n    private ls: LocalStoreService,\r\n    private downloadService: DownloadService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.getEntityCode();\r\n    this.getBankCode();\r\n    this.getItems();\r\n  }\r\n  ngOnDestroy() {\r\n    if (this.getItemSub) {\r\n      this.getItemSub.unsubscribe();\r\n    }\r\n  }\r\n  addNew() {\r\n    this.router.navigate([`/maintenance/main/customerCreateCategory`]);\r\n  }\r\n\r\n  trackByFnFilterByOption(index, item) {\r\n    return index;\r\n  }\r\n  onFileChange(event) {\r\n    console.log(\"event\", event.path[0].files[0]);\r\n    const file: File = event.path[0].files[0];\r\n    const uploadData = new FormData();\r\n    uploadData.append(\"screenType\", \"cutomerCategoryltMaster\");\r\n    uploadData.append(\"file\", file);\r\n    this.api.uploadExelFile(uploadData).subscribe((response) => {\r\n      console.log(response);\r\n      this.getItems();\r\n      this.snack.open(`File Uploaded Successfully`, \"OK\", {\r\n        duration: 4000,\r\n        verticalPosition: \"top\",\r\n        horizontalPosition: \"right\",\r\n      });\r\n    });\r\n  }\r\n\r\n  getItems() {\r\n    this.api.getCustomerCategory().subscribe((resp: any) => {\r\n      if (resp) {\r\n        console.log(resp);\r\n        for (let i = 0; i < resp.length; i++) {\r\n          if (resp[i].authStatus == \"U\") {\r\n            resp[i].authStatus = \"Unauthorized\";\r\n          }\r\n          if (resp[i].authStatus == \"A\") {\r\n            resp[i].authStatus = \"Authorized\";\r\n          }\r\n          if (resp[i].recordStatus == \"O\") {\r\n            resp[i].recordStatus = \"Open\";\r\n          }\r\n          if (resp[i].recordStatus == \"C\") {\r\n            resp[i].recordStatus = \"Closed\";\r\n          }\r\n        }\r\n        this.cutomerCategoryMasterValues = resp;\r\n        this.items = this.cutomerCategoryMasterValues;\r\n        this.dataSource = new MatTableDataSource(resp);\r\n        this.users = resp;\r\n        this.dataSource.paginator = this.paginator;\r\n        this.dataSource.sort = this.sort;\r\n      }\r\n    });\r\n  }\r\n  getBankCode() {\r\n    this.api.getBankCode().subscribe((bnkCode: any) => {\r\n      this.bankCode = bnkCode;\r\n    });\r\n  }\r\n  getEntityCode() {\r\n    this.api.getEntityCode().subscribe((resp) => {\r\n      this.entity = resp;\r\n    });\r\n  }\r\n  doFilter(filterBy, e) {\r\n    this.filterTable(filterBy);\r\n    this.applyFilter(e);\r\n  }\r\n\r\n  filterTable(filterBy) {\r\n    this.dataSource.filterPredicate = (data: any, filter: string): boolean => {\r\n      return data[filterBy]?.toLocaleLowerCase().includes(filter);\r\n    };\r\n  }\r\n\r\n  clearFilter() {\r\n    this.dataSource.filter = \"\";\r\n    this.searchVal.nativeElement.value = \"\";\r\n    this.selectedFilterIndex = 0;\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n  announceSortChange(sortState: Sort) {\r\n    if (sortState.direction) {\r\n      this._liveAnnouncer.announce(`Sorted ${sortState.direction}ending`);\r\n    } else {\r\n      this._liveAnnouncer.announce(\"Sorting cleared\");\r\n    }\r\n  }\r\n  openPopUp(data: any = {}, isEdit: string) {\r\n    this.router.navigate([\"/maintenance/main/customerCreateCategory\"], {\r\n      queryParams: { id: data.id, isEdit: isEdit },\r\n    });\r\n  }\r\n\r\n  masterpdf() {\r\n    this.downloadService.downloadFiles(\r\n      \"cutomerCategoryMaintenance\",\r\n      this.users\r\n    );\r\n  }\r\n\r\n  fetchcutomerCategoryById() {\r\n    this.api.getCustomerCategoryById(this.id).subscribe((resp) => {\r\n      this.fetchcutomerCategory = resp;\r\n    });\r\n    this.dataService.sendNavParam(this.fetchcutomerCategory);\r\n    this.router.navigate([\r\n      `/maintenance/main/cutomerCategoryltMaster/add/${this.id}`,\r\n    ]);\r\n  }\r\n\r\n  goBack() {\r\n    this.router.navigate([`/maintenance/main/`]);\r\n  }\r\n\r\n  deleteItem(row) {\r\n    this.confirmService\r\n      .confirm({ message: `Delete ${row.categoryName}?` })\r\n      .subscribe((res) => {\r\n        if (res) {\r\n          this.loader.open();\r\n          this.api.deleteCustomerCategory(row.id).subscribe(\r\n            (res: any) => {},\r\n            (err: any) => {\r\n              (\"\");\r\n              if (err.status == 200) {\r\n                this.loader.close();\r\n                this.getItems();\r\n                this.snack.open(\"Member deleted!\", \"OK\", { duration: 4000 });\r\n              }\r\n            }\r\n          );\r\n        }\r\n      });\r\n  }\r\n}\r\n","<h1 class=\"main-head\"><small class=\"small-head\">Home > Maintenance Summary > Customer Category Maintenance </small>\r\n</h1>\r\n<div fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"mt-24\">\r\n  <button mat-icon-button (click)=\"goBack()\">\r\n    <mat-icon>arrow_back</mat-icon>\r\n  </button>\r\n  <span class=\"text-large\">\r\n    Customer Category Maintenance\r\n  </span>\r\n</div>\r\n<mat-card class=\"mt-32\">\r\n  <div>\r\n    <table style=\"margin: 18px;\">\r\n      <tr>\r\n        <td>\r\n          <h2>\r\n            Customer Category Maintenance\r\n          </h2>\r\n        </td>\r\n      </tr>\r\n      <tr>\r\n        <td>\r\n          <div class=\"highlight\">\r\n          </div>\r\n        </td>\r\n      </tr>\r\n    </table>\r\n    <span fxFlex></span>\r\n    <button mat-icon-button [matMenuTriggerFor]=\"menu\">\r\n      <mat-icon>more_vert</mat-icon>\r\n    </button>\r\n    <mat-menu #menu=\"matMenu\">\r\n      <div class=\"upload_botton\">\r\n        <button type=\"button\" mat-menu-item>Upload</button>\r\n        <input type=\"file\"\r\n          accept=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\"\r\n          class=\"btn btn-success\" (change)=\"onFileChange($event)\" />\r\n      </div>\r\n      <button (click)=\"masterpdf()\" mat-menu-item>\r\n        <span>Download</span>\r\n      </button>\r\n    </mat-menu>\r\n  </div>\r\n  <div fxLayout=\"row\" class=\"w-full\" fxLayoutAlign=\"space-arround center\" class=\"ml-16 mt-32\">\r\n    <div fxLayout=\"row\" class=\"w-full\" fxLayoutGap=\"10px\">\r\n      <div>\r\n        <mat-form-field appearance=\"outline\">\r\n          <mat-label>Filter By</mat-label>\r\n          <mat-select name=\"filterBy\" #filterBy [(ngModel)]=\"selectedFilterIndex\" placeholder=\"Filter By\">\r\n            <!-- <mat-select name=\"filterBy\" #filterBy [(ngModel)]=\"selectedFilterIndex\"> -->\r\n            <mat-option value=\"0\">Select</mat-option>\r\n            <mat-option *ngFor=\"let filter of filterByOption; trackBy: trackByFnFilterByOption\" value=\"{{filter.key}}\">\r\n              {{filter.value}}\r\n            </mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n      </div>\r\n      <div>\r\n        <mat-form-field appearance=\"outline\">\r\n          <mat-label>Search</mat-label>\r\n          <input matInput #searchVal (keyup)=\"doFilter(filterBy.value,$event)\" placeholder=\"Search\">\r\n          <!-- <input matInput #searchVal (keyup)=\"doFilter(filterBy.value,$event)\"> -->\r\n          <mat-icon matSuffix>search</mat-icon>\r\n        </mat-form-field>\r\n      </div>\r\n      <div *ngIf=\"searchVal.value || filterBy.value\" class=\"resetDiv\">\r\n        <button mat-stroked-button class=\"clearBtn\" (click)=\"clearFilter()\">RESET\r\n        </button>\r\n      </div>\r\n      <div class=\"filterDiv\">\r\n        <button mat-flat-button color=\"primary\" class=\"addNewBtn\" (click)=\"addNew()\">ADD NEW\r\n        </button>\r\n      </div>\r\n\r\n    </div>\r\n  </div>\r\n  <div class=\"mat-elevation-z0\">\r\n    <mat-table class=\"w-full\" [dataSource]=\"dataSource\" matSort (matSortChange)=\"announceSortChange($event)\">\r\n\r\n      <ng-container matColumnDef=\"categoryCode\">\r\n        <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Category Code\"> Category Code\r\n        </mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\"> {{element.categoryCode}} </mat-cell>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"categoryName\">\r\n        <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Category Name\"> Category Name\r\n        </mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\"> {{element.categoryName}} </mat-cell>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"categoryDescription\">\r\n        <mat-header-cell *matHeaderCellDef mat-sort-header\r\n          sortActionDescription=\"Sort by Cutomer Category Description\">Category Description\r\n        </mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\"> {{element.categoryDescription}} </mat-cell>\r\n      </ng-container>\r\n      <ng-container matColumnDef=\"oneTimeAuth\">\r\n        <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by One Time Auth\"> One Time Auth\r\n        </mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\"> {{element.oneTimeAuth}} </mat-cell>\r\n      </ng-container>\r\n      <ng-container matColumnDef=\"authStatus\">\r\n        <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Auth Status\"> Auth Status\r\n        </mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\"> {{element.authStatus}} </mat-cell>\r\n      </ng-container>\r\n      <ng-container matColumnDef=\"recordStatus\">\r\n        <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Record Status\"> Record Status\r\n        </mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\"> {{element.recordStatus}} </mat-cell>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"action\">\r\n        <mat-header-cell *matHeaderCellDef>Action</mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\">\r\n          <div>\r\n            <mat-icon class=\"actionIcons\" matTooltip=\"Edit\" (click)=\"openPopUp(element,'Yes')\">edit</mat-icon>\r\n          </div>&nbsp;&nbsp;&nbsp;&nbsp;\r\n          <div>\r\n            <mat-icon class=\"actionIcons\" matTooltip=\"Delete\" (click)=\"deleteItem(element)\">delete</mat-icon>\r\n          </div>\r\n        </mat-cell>\r\n      </ng-container>\r\n\r\n      <mat-header-row *matHeaderRowDef=\"displayedColumns;\"></mat-header-row>\r\n      <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\r\n    </mat-table>\r\n    <mat-paginator class=\"mt-16\" [pageSizeOptions]=\"[5,10,15]\" showFirstLastButtons></mat-paginator>\r\n  </div>\r\n</mat-card>","import { Component, Inject, Input, OnInit, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { AppLoaderService } from 'app/shared/services/app-loader/app-loader.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { DataService } from 'app/shared/services/data.service';\r\nimport { AuditLogComponent } from '../../audit-log/audit-log.component';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport Swal from 'sweetalert2';\r\n\r\n\r\n@Component({\r\n  selector: 'app-bank-details',\r\n  templateUrl: './bank-details.component.html',\r\n  styleUrls: ['./bank-details.component.scss']\r\n})\r\nexport class BankDetailsComponent implements OnInit {\r\n  public bankForm: FormGroup;\r\n  currencies:string[] = [];\r\n  countries: any = [];\r\n  states: any = [];\r\n  cities: any = [];\r\n  bankItem: any = {};\r\n  currentUser: any;\r\n  entityCodeArr: any = [];\r\n  isAllSameDigitVal: boolean = false;\r\n  loggedInUser : string;\r\n  auditLogData : any;\r\n  id : number;\r\n\r\n  isEdit: boolean = false;\r\n  readorWrite: boolean = true;\r\n\r\n  @ViewChild('auditLog') auditLog: AuditLogComponent\r\n\r\n\r\n  constructor(private apiService: ApiService,\r\n    private fb: FormBuilder,\r\n    private dataService: DataService,\r\n    private ls: LocalStoreService,\r\n    private loader: AppLoaderService,\r\n    private snack: MatSnackBar,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.currentUser = this.ls.getItem(\"ICUST_USER\");\r\n    this.dataService.getBankItem.subscribe(data =>{\r\n    this.bankItem = typeof this.bankItem === 'object' ? data : {};\r\n    this.id = this.bankItem.id;\r\n    if(this.id){\r\n      this.isEdit = true;\r\n    }\r\n    else{\r\n      this.isEdit = false;\r\n      this.readorWrite=false;\r\n    }\r\n    if( this.bankItem.authStatus==\"Unauthorized\" ){\r\n      this.bankItem.authDate =\"\"\r\n      this.bankItem.authBy=\"\"\r\n    }\r\n    console.log(\"this.bankItemt\",this.bankItem)\r\n    this.auditLogData = this.bankItem;\r\n    this.dataService.setAuditLogData(this.auditLogData);\r\n    });\r\n\r\n    this.getBranchCurrency();\r\n    this.getCountryName('country');\r\n    this.getEntityDropdown();\r\n    this.loggedInUser = this.ls.getItem('ICUST_USER').userName;\r\n\r\n    this.buildBankForm(this.bankItem);\r\n  }\r\n\r\n  buildBankForm(item) {\r\n    this.bankForm = this.fb.group({\r\n      bankCode: [item.bankCode || '', Validators.pattern(\"(?=.*[0-9])(?=.*[a-zA-Z])([a-zA-Z0-9]+){4,4}$\")],\r\n      id: [item.id ? item.id : null],\r\n      bankCurrency: [item.bankCurrency || '', Validators.required],\r\n      bankName: [item.bankName || '', Validators.required],\r\n      defaultLanguage: [item.defaultLanguage || '', Validators.required],\r\n      denomRequired: [item.denomRequired || ''],\r\n      entityCode: [item.entityCode || '', Validators.required],\r\n      headOfficeBrn: [item.headOfficeBrn || ''],\r\n      //swiftCode: [item.swiftCode || '', Validators.required],\r\n      address1: [item.address1 || '', Validators.required],\r\n      address2: [item.address2 || ''],\r\n      country: [item.country || '', Validators.required],\r\n      state: [item.state || '', Validators.required],\r\n      city: [item.city || '', Validators.required],\r\n      pincode: [item.pincode || '', Validators.required],\r\n      telephone: [item.telephone || ''],\r\n      mobile: [item.mobile || '', Validators.required],\r\n      swiftCode: [item ? item.swiftCode : '', Validators.pattern(\"(?=.*[0-9])(?=.*[a-zA-Z])([a-zA-Z0-9]+){8,8}$\")],\r\n    });\r\n\r\n    if (item.country) {\r\n      this.getStateName(item.country);\r\n      this.getCityName(item.state);\r\n    }\r\n  }\r\n  deleteRecord(operation){\r\n    Swal.fire(\r\n      {\r\n        //text: 'Unable to process' + 'Error ' + this.responseforfileupload.errorMessage + 'Do you want to Proceed??',\r\n        text: 'You are trying to '+ operation +' record.' + ' Do you want to proceed?',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        // confirmButtonText: 'PROCEED.'\r\n        cancelButtonText: 'NO',\r\n        confirmButtonText: 'YES', 'icon': 'info'\r\n      }\r\n    ).then((result => {\r\n      if(result.isConfirmed==true){\r\n        this.apiService.deleteBank(this.auditLogData.id,this.currentUser.userName)\r\n        .subscribe(data => {\r\n          this.router.navigate([`/maintenance/main/bank/list`]);\r\n        },\r\n        err=>{\r\n          if (err.status == 200) {\r\n            this.snack.open('Record Deleted Successfully', 'OK', {\r\n              duration: 4000,\r\n              verticalPosition: 'top',\r\n              horizontalPosition: 'right'\r\n            });\r\n          }\r\n          this.router.navigate([`/maintenance/main/bank/list`]);\r\n        \r\n      })\r\n      }}))\r\n   \r\n         \r\n       \r\n  }\r\n\r\neditRecord(){\r\nthis.readorWrite=false;\r\n}\r\n\r\n  updateRecord(operation) {\r\n    Swal.fire(\r\n      {\r\n        //text: 'Unable to process' + 'Error ' + this.responseforfileupload.errorMessage + 'Do you want to Proceed??',\r\n        text: 'You are trying to '+ operation +' record.' + ' Do you want to proceed?',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        // confirmButtonText: 'PROCEED.'\r\n        cancelButtonText: 'NO',\r\n        confirmButtonText: 'YES', 'icon': 'info'\r\n      }\r\n    ).then((result => {\r\n      if(result.isConfirmed==true){\r\n        let payload: any = {};\r\n        payload.id = this.id;\r\n        payload.operation = operation;\r\n        payload.loggedInUser = this.loggedInUser;\r\n        this.apiService.getAuditLogsForBank(payload).subscribe((data) => {\r\n          if( data.authStatus==\"U\" ){\r\n            data.authDate = \"\"\r\n            data.authBy = \"\"\r\n            }\r\n          this.auditLogData = data;\r\n          this.dataService.setAuditLogData(this.auditLogData);\r\n          this.dataService.sendClickEvent();\r\n    \r\n          let message = '';\r\n          switch (operation) {\r\n            case 'open':\r\n              message = 'opened'\r\n              break;\r\n            case 'close':\r\n              message = 'closed'\r\n              break;\r\n            case 'auth':\r\n              message = 'authorized'\r\n              break;\r\n            default:\r\n              break;\r\n          }\r\n          this.snack.open(`Record ${message} successfully!'`, \"OK\", {\r\n            duration: 2000,\r\n            verticalPosition: \"top\",\r\n            horizontalPosition: \"right\",\r\n          });\r\n        });\r\n      }}))\r\n   \r\n  }\r\n\r\n\r\n  getBranchCurrency(){\r\n    // this.apiService.getCountryValues().subscribe(_list =>{\r\n    //   this.currencies = _list;\r\n    // },(err:any) =>{\r\n\r\n    // })\r\n    this.apiService.getCurrencyDetails().subscribe(data=>{\r\n      console.log(\"Auth currecy details\", data)\r\n      for(let i=0; i<data.length;i++){\r\n        this.currencies.push(data[i])\r\n      }\r\n      console.log(this.currencies);\r\n    })\r\n  }\r\n\r\n  // getCountryName(key: string) {\r\n  //   this.apiService.getDropDownValues(key).subscribe((data) => {\r\n  //     this.countries = data;\r\n  //   });\r\n  // }\r\n  getCountryName(key: string) {\r\n    this.apiService.getAllCountries().subscribe((data: any) => {\r\n      console.log('resp',data)\r\n      for(let i=0; i<data.length;i++){\r\n        if(data[i].authStatus==='A'){\r\n          console.log(data[i])\r\n          this.countries.push(data[i].countryName);\r\n          \r\n        }\r\n      }console.log(this.countries)\r\n    });\r\n  }\r\n  getStateName(countryName){\r\n    this.apiService.getAllCountries().subscribe((data: any) => {\r\n      for(let i=0; i<data.length;i++){       \r\n        if(data[i].countryName === countryName){\r\n          this.apiService.getStateByCountry(data[i].id).subscribe((resp: any) => {\r\n          this.states = resp\r\n          })\r\n          break;   \r\n        }\r\n      }\r\n    })\r\n    }\r\n\r\n  \r\n\r\n  getCityName(state: any) {\r\n    let entityName = \"city\";\r\n    this.apiService.getDropDownValues1(entityName, state).subscribe((data) => {\r\n      this.cities = data;\r\n    });\r\n  }\r\n\r\n  getEntityDropdown() {\r\n    this.apiService.getEntityDropdown().subscribe((data) => {\r\n      console.log(data);\r\n      for(let i=0; i<data.length;i++){\r\n        if(data[i].authStatus==='A'){\r\n          this.entityCodeArr.push(data[i]);\r\n         \r\n        }\r\n      }\r\n      //this.entityCodeArr = data;\r\n    });\r\n  }\r\n\r\n  onSubmit() {\r\n    if (this.bankForm.invalid) {\r\n      return;\r\n    } else {\r\n      let payload: any = {};\r\n      payload = this.bankForm.value;\r\n      if (this.id) {\r\n        payload.id = this.id;\r\n      }\r\n    //  payload.entityCode = payload.entityCode.entityCode;\r\n      payload.loggedInUser = this.loggedInUser;\r\n      this.loader.open();\r\n      this.apiService.createOrUpdateBank(payload, this.currentUser.userName)\r\n        .subscribe(data => {\r\n          this.loader.close();\r\n          this.router.navigate(['/maintenance/main/bank/list']).then(_ => {\r\n            this.snack.open('Data Saved Successfully!', 'OK',\r\n              {\r\n                duration: 4000,\r\n                verticalPosition: \"top\",\r\n                horizontalPosition: \"right\",\r\n              });\r\n          });\r\n        }, (err: any) => {\r\n          this.loader.close();\r\n          this.snack.open(`Error!`, 'OK', { duration: 4000 });\r\n        })\r\n    }\r\n  }\r\n  _keyPress1(event: any) {\r\n    const pattern = /[a-zA-Z0-9]/;\r\n    let inputChar = String.fromCharCode(event.charCode);\r\n    if (!pattern.test(inputChar)) {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n  _keyPressForAlphabets(event:any)\r\n  {\r\n      var keyCode = (event.which) ? event.which : event.keyCode\r\n      if ((keyCode < 65 || keyCode > 90) && (keyCode < 97 || keyCode > 123) && keyCode != 32)\r\n       \r\n      return false;\r\n          return true;\r\n  }\r\n\r\n  keyPressAlphanumeric(event) {\r\n    var inp = String.fromCharCode(event.keyCode);\r\n    if (/[0-9a-zA-Z]/.test(inp)) {\r\n      return true;\r\n    } else {\r\n      event.preventDefault();\r\n      return false;\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    //Called once, before the instance is destroyed.\r\n    //Add 'implements OnDestroy' to the class.\r\n    this.dataService.shareBankItem({});\r\n  }\r\n  goBack() {\r\n    this.router.navigate([`/maintenance/main/bank/list`]);\r\n  }\r\n\r\n  _keyPress(event: any) {\r\n    const pattern = /[0-9]/;\r\n    let inputChar = String.fromCharCode(event.charCode);\r\n    if (!pattern.test(inputChar)) {\r\n      event.preventDefault();\r\n\r\n    }\r\n  }\r\n  isAllSameDigit(event) {\r\n    let count = 0, number = event.target.value;\r\n    if (number != '') {\r\n      for (var i = 0; i < number.length; i++) {\r\n        if (0 == number[i]) {\r\n          count++;\r\n        }\r\n      }\r\n      if (count == number.length) {\r\n        this.isAllSameDigitVal = true;\r\n      }\r\n      else {\r\n        this.isAllSameDigitVal = false;\r\n      }\r\n    } else {\r\n      this.isAllSameDigitVal = false;\r\n    }\r\n  }\r\n  dataByCurrency(index,currency){\r\n    return currency.currencyCode;\r\n  }\r\n  dataByEntityCode(index,entity){\r\n    return entity.entityCode;\r\n  }\r\n  dataByCountry(index,state){\r\n    return state.value1;\r\n  }\r\n  dataByState(index,city){\r\n    return city.value1;\r\n  }\r\n  dataByCity(index,country){\r\n    return country;\r\n  }\r\n}\r\n","<h1 class=\"main-head\"><small class=\"small-head\">Home > Maintenance Summary  > Bank Maintenance > <span *ngIf=\"!isEdit\" >Add</span> <span *ngIf=\"isEdit\" >Edit</span> Bank Information</small></h1>\r\n<mat-toolbar>\r\n  <button mat-icon-button (click)=\" goBack()\">\r\n    <mat-icon>arrow_back</mat-icon>\r\n  </button>\r\n  <h1 *ngIf=\"!isEdit\" class=\"add-text\">Add Bank Information</h1>\r\n  <h1 *ngIf=\"isEdit\" class=\"add-text\">Edit Bank Information</h1>\r\n  <div fxLayout=\"row\" fxFlex=\"1 1 0%\" fxLayoutAlign=\"end center\">\r\n    <!-- <button mat-icon-button matTooltip=\"Delete\">\r\n      <mat-icon>delete_outline</mat-icon>\r\n    </button> -->\r\n  </div>\r\n</mat-toolbar>\r\n\r\n<mat-card >\r\n  <h1>Bank Information</h1>\r\n  <mat-card-content>\r\n    <form [formGroup]=\"bankForm\" class=\"mt-32\">\r\n      <!-- <table class=\"pb-32\">\r\n        <h2>Country and State Maintenance Info</h2>\r\n        <tr>\r\n          <td>\r\n            <h1>{{countryMaintenance.controls['countryName'].value}}</h1>\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <td>\r\n            <div *ngIf=\"countryMaintenance.controls['countryName'].value\" class=\"highlight\">\r\n            </div>\r\n          </td>\r\n        </tr>\r\n      </table> -->\r\n      <div fxLayout=\"row wrap\" fxLayout.lt-sm=\"column\">\r\n        <div fxFlex=\"33.33\" class=\"pr-16\" *ngIf=\"readorWrite\">\r\n          <mat-label>Entity Code *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input \r\n            matInput \r\n            name=\"name\"  [readonly]=\"readorWrite\"\r\n        \r\n            [formControl]=\"bankForm.controls['entityCode']\" \r\n            required \r\n          />\r\n          </mat-form-field>\r\n        </div>\r\n        <div fxFlex=\"33.33\" class=\"pr-16\" *ngIf=\"!readorWrite\">\r\n          <mat-label>Entity Code *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <mat-select \r\n              name=\"entity\"\r\n              [formControl]=\"bankForm.controls['entityCode']\"\r\n            >\r\n\r\n            <mat-option *ngFor=\"let entity of entityCodeArr; trackBy:dataByEntityCode\" [value]=\"entity.entityCode\">\r\n              {{ entity.entityCode }}\r\n            </mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n        </div>\r\n\r\n        <div fxFlex=\"33.33\" class=\"pr-16\">\r\n          <mat-label>Bank Name *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input \r\n              matInput \r\n              name=\"name\"  [readonly]=\"readorWrite\"\r\n              (keypress)=_keyPressForAlphabets($event)\r\n              [formControl]=\"bankForm.controls['bankName']\" \r\n              required \r\n            />\r\n            <mat-error *ngIf=\"bankForm.get('bankName').hasError('required')\">\r\n              <small>\r\n                Bank Name is Required!\r\n              </small>\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n    \r\n        <div fxFlex=\"33.33\" class=\"pr-16\">\r\n          <mat-label>Bank Code *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input\r\n              matInput\r\n              maxlength=\"4\" \r\n              required\r\n              name=\"code\"\r\n              [readonly]=\"readorWrite\"\r\n              (keypress)=_keyPress1($event) \r\n\r\n              [formControl]=\"bankForm.controls['bankCode']\" \r\n              required\r\n            />\r\n            <mat-error *ngIf=\"bankForm.get('bankCode').hasError('required')\">\r\n              <small>Bank Code is Required!</small>\r\n            </mat-error>\r\n            <mat-error  *ngIf=\"bankForm.get('bankCode').value && !bankForm.get('bankCode').hasError('required')\" > \r\n              <small>BANK Code should be a combination of minimum of 4 alphanumeric characters</small>\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n\r\n        <div fxFlex=\"33.33\" class=\"pr-16\">\r\n          <mat-label>Swift Code *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">   \r\n            <input \r\n              matInput \r\n              minlength=\"8\" \r\n              maxlength=\"11\" \r\n              required  [readonly]=\"readorWrite\"\r\n              name=\"swift\" \r\n              (keypress)=_keyPress1($event) \r\n              [formControl]=\"bankForm.controls['swiftCode']\" \r\n            />\r\n            <mat-error *ngIf=\"bankForm.get('swiftCode').hasError('required')\">\r\n              <small>SWIFT Code is Required!</small>\r\n            </mat-error>\r\n            <mat-error  *ngIf=\"bankForm.get('swiftCode').value && !bankForm.get('swiftCode').hasError('required')\" > \r\n              <small>SWIFT Code should be a combination of minimum of 8 alphanumeric characters</small>\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n    \r\n        <div fxFlex=\"33.33\" class=\"pr-16\" *ngIf=\"!readorWrite\">\r\n          <mat-label>Bank Currency *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <mat-select  \r\n              name=\"currency\"\r\n              [formControl]=\"bankForm.controls['bankCurrency']\" \r\n              required\r\n            >\r\n              <mat-option>Select</mat-option>\r\n              <mat-option\r\n                *ngFor=\"let currency of currencies; trackBy:dataByCurrency\"\r\n                [value]=\"currency.currencyCode\"\r\n              >\r\n                {{ currency.currencyCode }}\r\n              </mat-option>\r\n            </mat-select>\r\n            <mat-error *ngIf=\"bankForm.get('bankCurrency').hasError('required')\">\r\n              <small>Bank Currency is Required!</small>\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n        <div fxFlex=\"33.33\" class=\"pr-16\" *ngIf=\"readorWrite\">\r\n          <mat-label>Bank Currency *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input \r\n            matInput \r\n            name=\"name\"  [readonly]=\"readorWrite\"\r\n        \r\n            [formControl]=\"bankForm.controls['bankCurrency']\" \r\n            required \r\n          />\r\n          </mat-form-field>\r\n        </div>\r\n    \r\n        <div fxFlex=\"33.33\" class=\"pr-16\" *ngIf=\"!readorWrite\">\r\n          <mat-label>Default Language *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">   \r\n            <mat-select \r\n              name=\"language\"\r\n              [formControl]=\"bankForm.controls['defaultLanguage']\" \r\n              required>\r\n              <mat-option [value]=\"'english'\"> English </mat-option>\r\n            </mat-select>\r\n            <mat-error *ngIf=\"bankForm.get('defaultLanguage').hasError('required')\">\r\n              <small>Default Language is Required!</small>\r\n            </mat-error>\r\n          </mat-form-field>  \r\n        </div>\r\n        <div fxFlex=\"33.33\" class=\"pr-16\" *ngIf=\"readorWrite\">\r\n          <mat-label>Default Language *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input \r\n            matInput \r\n            name=\"name\"  [readonly]=\"readorWrite\"\r\n        \r\n            [formControl]=\"bankForm.controls['defaultLanguage']\" \r\n            required \r\n          />\r\n          </mat-form-field>\r\n        </div>\r\n\r\n        <div fxFlex=\"33.33\" class=\"pr-16\">\r\n          <mat-label>Head Office Branch</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input \r\n              matInput\r\n              name=\"office\"  [readonly]=\"readorWrite\"\r\n              (keypress)=keyPressAlphanumeric($event)\r\n              [formControl]=\"bankForm.controls['headOfficeBrn']\"\r\n            />\r\n          </mat-form-field>\r\n        </div>\r\n    \r\n        <div fxFlex=\"33.33\" class=\"pr-16\" *ngIf=\"!readorWrite\">\r\n          <mat-label>Denomination Required? </mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <mat-select \r\n              name=\"denom\"\r\n              [formControl]=\"bankForm.controls['denomRequired']\"\r\n            >\r\n              <mat-option [value]=\"'yes'\" selected> Yes </mat-option>\r\n              <mat-option [value]=\"'no'\"> No </mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n        </div>\r\n        <div fxFlex=\"33.33\" class=\"pr-16\" *ngIf=\"readorWrite\">\r\n          <mat-label>Denomination Required? </mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input \r\n            matInput \r\n            name=\"name\"  [readonly]=\"readorWrite\"\r\n        \r\n            [formControl]=\"bankForm.controls['denomRequired']\" \r\n            required \r\n          />\r\n          </mat-form-field>\r\n        </div>\r\n\r\n        <!-- <div fxFlex=\"33.33\" class=\"pr-16\">\r\n          <mat-label>Entity Code *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input \r\n              matInput \r\n              name=\"entity\"\r\n              [formControl]=\"bankForm.controls['entityCode']\" \r\n              required\r\n            />\r\n            <mat-error *ngIf=\"bankForm.get('entityCode').hasError('required')\">\r\n              <small>Entity Code is Required!</small>\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div> -->\r\n      </div><br>\r\n      <div>\r\n        <h1>Address Information</h1>\r\n      </div><br>\r\n      \r\n      <div fxLayout=\"row wrap\" fxLayout.lt-sm=\"column\">\r\n        \r\n        <div fxFlex=\"33.33\" class=\"pr-16\">\r\n          <mat-label>address1 *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input\r\n              matInput\r\n              name=\"address1\"  [readonly]=\"readorWrite\"\r\n              [formControl]=\"bankForm.controls['address1']\"\r\n              placeholder=\"Address 1\" \r\n              required\r\n            />\r\n            <mat-error *ngIf=\"bankForm.get('address1').hasError('required')\">\r\n              <small>Address 1 is Required!</small>\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n    \r\n        <div fxFlex=\"33.33\" class=\"pr-16\">\r\n          <mat-label>address2 </mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input\r\n            matInput\r\n            name=\"address2\"  [readonly]=\"readorWrite\"\r\n            [formControl]=\"bankForm.controls['address2']\"\r\n            placeholder=\"Address 2\"\r\n          />\r\n          </mat-form-field>\r\n        </div>\r\n\r\n        <div fxFlex=\"33.33\" class=\"pr-16\" *ngIf=\"!readorWrite\">\r\n          <mat-label>Country *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">   \r\n             <mat-select\r\n                name=\"country\"\r\n                [formControl]=\"bankForm.controls['country']\"\r\n                placeholder=\"Country\"\r\n                (selectionChange)=\"getStateName($event.value)\" \r\n                required\r\n              >\r\n                <mat-option *ngFor=\"let country of countries\" [value]=\"country\">\r\n                  {{ country }}\r\n                </mat-option>\r\n             </mat-select>\r\n             <mat-error *ngIf=\"bankForm.get('country').hasError('required')\">\r\n              <small>Country is Required!</small>\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n        <div fxFlex=\"33.33\" class=\"pr-16\" *ngIf=\"readorWrite\">\r\n          <mat-label>Country * </mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input \r\n            matInput \r\n            name=\"name\"  [readonly]=\"readorWrite\"\r\n        \r\n            [formControl]=\"bankForm.controls['country']\" \r\n            required \r\n          />\r\n          </mat-form-field>\r\n        </div>\r\n\r\n        <div fxFlex=\"33.33\" class=\"pr-16\" *ngIf=\"!readorWrite\">\r\n          <mat-label>State *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <mat-select\r\n              name=\"state\"\r\n              [formControl]=\"bankForm.controls['state']\"\r\n              (selectionChange)=\"getCityName($event.value)\" \r\n              required\r\n            >\r\n              <mat-option *ngFor=\"let state of states; trackBy:dataByState\" [value]=\"state.stateName\">\r\n                {{ state.stateName }}\r\n              </mat-option>\r\n            </mat-select>\r\n            <mat-error *ngIf=\"bankForm.get('state').hasError('required')\">\r\n              <small>State is Required!</small>\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n        <div fxFlex=\"33.33\" class=\"pr-16\" *ngIf=\"readorWrite\">\r\n          <mat-label>State * </mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input \r\n            matInput \r\n            name=\"name\"  [readonly]=\"readorWrite\"\r\n        \r\n            [formControl]=\"bankForm.controls['state']\" \r\n            required \r\n          />\r\n          </mat-form-field>\r\n        </div>\r\n    \r\n        <div fxFlex=\"33.33\" class=\"pr-16\" *ngIf=\"!readorWrite\">\r\n          <mat-label>City *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">   \r\n            <mat-select \r\n              name=\"city\"\r\n              [formControl]=\"bankForm.controls['city']\" \r\n              required\r\n            >\r\n              <mat-option *ngFor=\"let city of cities; trackBy:dataByCity\" [value]=\"city.value1\">\r\n                {{ city.value1 }}\r\n              </mat-option>\r\n            </mat-select>\r\n            <mat-error *ngIf=\"bankForm.get('city').hasError('required')\">\r\n              <small>City is Required!</small>\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n        <div fxFlex=\"33.33\" class=\"pr-16\" *ngIf=\"readorWrite\">\r\n          <mat-label>City * </mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input \r\n            matInput \r\n            name=\"name\"  [readonly]=\"readorWrite\"\r\n        \r\n            [formControl]=\"bankForm.controls['city']\" \r\n            required \r\n          />\r\n          </mat-form-field>\r\n        </div>\r\n\r\n        <div fxFlex=\"33.33\" class=\"pr-16\">\r\n          <mat-label>Pincode *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input \r\n              matInput \r\n              name=\"pincode\" \r\n              minlength=\"6\" \r\n              maxlength=\"10\"  [readonly]=\"readorWrite\"\r\n              pattern =\"^[1-9][0-9][{6}-{10}]$\"\r\n              (keypress)=\"_keyPress($event)\"\r\n              (keyup)=\"isAllSameDigit($event)\" \r\n              [formControl]=\"bankForm.controls['pincode']\" \r\n              required\r\n            />\r\n            <mat-error *ngIf=\"bankForm.get('pincode').touched && bankForm.get('pincode').hasError('required')\">\r\n              <small>Pincode is Required!</small>\r\n            </mat-error>\r\n           \r\n            <mat-error *ngIf=\"!bankForm.get('pincode').valid && !bankForm.get('pincode').hasError('required')\">\r\n              <small>Please Enter Valid Pincode!</small>\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n\r\n      </div><br> \r\n      <div>\r\n        <h1>Contact Information</h1>\r\n      </div><br> \r\n      \r\n      <div fxLayout=\"row wrap\" fxLayout.lt-sm=\"column\">\r\n          \r\n        <div fxFlex=\"33.33\" class=\"pr-16\">\r\n          <mat-label>Mobile Number *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input \r\n              matInput \r\n              name=\"mobile\" \r\n              minlength=\"10\"\r\n              maxlength=\"10\"  [readonly]=\"readorWrite\"\r\n              (keypress)=\"_keyPress($event)\"\r\n              [formControl]=\"bankForm.controls['mobile']\" \r\n              required\r\n            />\r\n            <mat-error *ngIf=\"bankForm.get('mobile').hasError('required')\">\r\n              <small>Mobile Number is Required!</small>\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n    \r\n        <div fxFlex=\"33.33\" class=\"pr-16\">\r\n          <mat-label>Telephone </mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input \r\n              matInput \r\n              name=\"telephone\"  [readonly]=\"readorWrite\" \r\n              maxlength=\"10\" \r\n              (keypress)=\"_keyPress($event)\"\r\n              [formControl]=\"bankForm.controls['telephone']\"\r\n            />\r\n          </mat-form-field>\r\n        </div>\r\n\r\n        \r\n      </div>\r\n      <div fxLayout=\"row wrap\" fxLayout.lt-sm=\"column\">\r\n        <div fxFlex=\"100\" class=\"mt-16\" fxLayoutAlign=\"end center\">\r\n          <button *ngIf=\"!isEdit\"\r\n            color=\"primary\" \r\n            [disabled]=\"bankForm.invalid\" \r\n            mat-raised-button \r\n            (click)=\"onSubmit()\"\r\n          >\r\n          Save\r\n          </button>\r\n          <div [hidden]=\"readorWrite\">\r\n            <button *ngIf=\"isEdit\"\r\n            color=\"primary\" \r\n            [disabled]=\"(bankForm.invalid && !bankForm.dirty)\" \r\n            mat-raised-button \r\n            (click)=\"onSubmit()\"\r\n          >\r\n          Save\r\n          </button>\r\n          &nbsp;&nbsp;\r\n          </div>\r\n         \r\n\r\n          <div [hidden]=\"!readorWrite || auditLogData?.recordStatus == 'Close'\">\r\n            <button *ngIf=\"isEdit\" type=\"button\"  mat-raised-button color=\"primary\" (click)=\"editRecord()\">\r\n              Edit\r\n            </button>&nbsp;&nbsp;\r\n          </div>\r\n          <div *ngIf=\"auditLogData?.authStatus == 'Unauthorized' && readorWrite\" [hidden]=\"!readorWrite\">\r\n            <button *ngIf=\"isEdit\" type=\"button\"  mat-raised-button color=\"primary\" (click)=\"updateRecord('auth')\">\r\n              Authorize\r\n            </button>&nbsp;&nbsp;\r\n          </div> \r\n          <div *ngIf=\"auditLogData?.recordStatus == 'Close' && auditLogData?.oneTimeAuth != 'No'\" [hidden]=\"!readorWrite\">\r\n            <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"updateRecord('open')\">\r\n              Reopen\r\n            </button>&nbsp;&nbsp;\r\n          </div>\r\n          <div *ngIf=\"auditLogData?.recordStatus == 'Open' && auditLogData?.oneTimeAuth != 'No'\" [hidden]=\"!readorWrite\">\r\n            <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"updateRecord('close')\">\r\n              Close\r\n            </button>&nbsp;&nbsp;\r\n          </div>\r\n          <div *ngIf=\"auditLogData?.oneTimeAuth == 'No'\" [hidden]=\"!readorWrite\">\r\n            <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"deleteRecord()\">\r\n              Delete\r\n            </button> &nbsp;&nbsp;\r\n          </div>\r\n         \r\n          <button\r\n            mat-raised-button\r\n            color=\"warn\"\r\n            type=\"button\"\r\n            (click)=\"goBack()\"\r\n          >\r\n            Exit\r\n          </button>\r\n         \r\n        </div>\r\n      </div>\r\n\r\n      \r\n      \r\n    </form>\r\n  </mat-card-content>\r\n</mat-card>\r\n\r\n<div *ngIf=\"auditLogData && isEdit\" class=\"mt-32\">\r\n  <app-audit-log #auditLog></app-audit-log>\r\n</div>\r\n","import { Component, Inject, OnInit } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from \"@angular/material/dialog\";\r\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\r\nimport { Router } from \"@angular/router\";\r\nimport { tillVaultBranchMap } from \"app/shared/models/tillVaultBranchMap\";\r\nimport { ApiService } from \"app/shared/services/api.service\";\r\nimport { AppLoaderService } from \"app/shared/services/app-loader/app-loader.service\";\r\nimport { DataService } from \"app/shared/services/data.service\";\r\nimport { LocalStoreService } from \"app/shared/services/local-store.service\";\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: \"app-till-vault-branch-map\",\r\n  templateUrl: \"./till-vault-branch-map.component.html\",\r\n  styleUrls: [\"./till-vault-branch-map.component.scss\"],\r\n})\r\nexport class TillVaultBranchMapComponent implements OnInit {\r\n  public tillVaultBranchMapForm: FormGroup;\r\n  till: any[] = [];\r\n  vault: any[] = [];\r\n  branchCode: string[] = [];\r\n  bankCode: string[] = [];\r\n  id: number;\r\n  vaultItem:tillVaultBranchMap;\r\n  entityCode: string[] = [];\r\n  authEntityCode:string[]= [];\r\n  tillData: tillVaultBranchMap;\r\n  vaultData: tillVaultBranchMap;\r\n  loggedInUser : string;\r\n  auditData : tillVaultBranchMap;\r\n  isAuditData : boolean = false;\r\n  isEdit: boolean = false;\r\n  authStatus:any;\r\n  entityCodeArr: any[] = [];\r\n  readorWrite: boolean=true;\r\n\r\n  constructor(\r\n    // @Inject(MAT_DIALOG_DATA) public data: any,\r\n    // public dialogRef: MatDialogRef<TillVaultBranchMapComponent>,\r\n    private fb: FormBuilder,\r\n    private apiService: ApiService,\r\n    private snack: MatSnackBar,\r\n    private router:Router,\r\n    private dataService:DataService,\r\n    private ls:LocalStoreService,\r\n    private loader: AppLoaderService,\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    // this.dataService.getTillVaultMap.subscribe(data =>{\r\n    //   console.log(data)\r\n    //   this.vaultItem = typeof this.vaultItem === 'object' ? data : {};\r\n    // });\r\n    \r\n    setTimeout(() => {  \r\n      this.vaultItem = JSON.parse(localStorage.getItem('fetchBrnMap'));\r\n      if(this.vaultItem == null || this.vaultItem == undefined){\r\n        this.buildItemForm({})\r\n        this.readorWrite=false;\r\n      }       \r\n      else if(this.vaultItem.id != null || this.vaultItem.id != undefined){\r\n      this.loader.open();\r\n      this.id = this.vaultItem.id\r\n      this.buildItemForm(this.vaultItem)\r\n      this.auditData = this.vaultItem;\r\n      this.isEdit = true;\r\n          this.isAuditData = true;\r\n          this.dataService.setAuditLogData(this.auditData);\r\n      this.loader.close();\r\n      }\r\n    }, 1000)\r\n\r\n    this.getBankCode();\r\n    this.getBranchCode();\r\n    this.getTillId();\r\n    this.getParentVault();\r\n    this.getEntityCode();\r\n\r\n    this.loggedInUser = this.ls.getItem('ICUST_USER').userName;\r\n    \r\n  }\r\n\r\n  // fetchTellVaultBranchMap(){\r\n  //   this.apiService.fetchTellerVaultBranchMap(id).subscribe(result=>{\r\n  //       console.log(result);\r\n  //       this.buildItemForm(result);\r\n  //     })\r\n  // }\r\n\r\n  buildItemForm(item) {\r\n    this.tillVaultBranchMapForm = this.fb.group({\r\n      bankCode: [item?.bankCode || \"\", Validators.required],\r\n      branchCode: [item?.branchCode || \"\", Validators.required],\r\n      entityCode: [item?.entityCode || \"\",[Validators.required]],\r\n      tillId: [item?.tillId || \"\",Validators.required],\r\n      id: [item.id ? item.id : null],\r\n      locked: [item.locked === \"0\" ? true : false || \"\", false],\r\n      parentVaultId: [item?.parentVaultId || \"\", Validators.required],\r\n      shortOvgGl: [item?.shortOvgGl || \"\", Validators.required],\r\n      loggedInuser : [item.loggedInUser || '']\r\n     \r\n    });\r\n  }\r\n  deleteRecord(operation){\r\n    Swal.fire(\r\n      {\r\n        //text: 'Unable to process' + 'Error ' + this.responseforfileupload.errorMessage + 'Do you want to Proceed??',\r\n        text: 'You are trying to '+ operation +' record.' + ' Do you want to proceed?',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        // confirmButtonText: 'PROCEED.'\r\n        cancelButtonText: 'NO',\r\n        confirmButtonText: 'YES', 'icon': 'info'\r\n      }\r\n    ).then((result => {\r\n      if(result.isConfirmed==true){\r\n        this.apiService.deleteTellerVaultBrnMap(this.auditData.id)\r\n        .subscribe(data => {   \r\n    this.router.navigate([`/maintenance/main/tillVaultltBranch`]);\r\n        },\r\n        err=>{\r\n          if (err.status == 200) {\r\n            this.snack.open('Record Deleted Successfully', 'OK', {\r\n              duration: 4000,\r\n              verticalPosition: 'top',\r\n              horizontalPosition: 'right'\r\n            });\r\n          }\r\n         \r\n    this.router.navigate([`/maintenance/main/tillVaultltBranch`]);\r\n        \r\n      })\r\n      }}))\r\n   \r\n         \r\n       \r\n  }\r\n  editRecord(){\r\n    this.readorWrite=false;\r\n  }\r\n\r\n\r\n  updateRecord(operation) {\r\n    Swal.fire(\r\n      {\r\n        //text: 'Unable to process' + 'Error ' + this.responseforfileupload.errorMessage + 'Do you want to Proceed??',\r\n        text: 'You are trying to '+ operation +' record.' + ' Do you want to proceed?',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        // confirmButtonText: 'PROCEED.'\r\n        cancelButtonText: 'NO',\r\n        confirmButtonText: 'YES', 'icon': 'info'\r\n      }\r\n    ).then((result => {\r\n      if(result.isConfirmed==true){\r\n        let payload: any = {};\r\n        payload.id = this.id;\r\n        payload.operation = operation;\r\n        payload.loggedInUser = this.loggedInUser;\r\n        this.apiService.getAuditLogsFortillvaulmap(payload).subscribe((data) => {\r\n          this.auditData = data;\r\n          this.dataService.setAuditLogData(this.auditData);\r\n          this.isAuditData = true;\r\n          this.dataService.sendClickEvent();\r\n          let message = '';\r\n          switch (operation) {\r\n            case 'open':\r\n              message = 'opened'\r\n              break;\r\n            case 'close':\r\n              message = 'closed'\r\n              break;\r\n            case 'auth':\r\n              message = 'authorized'\r\n              break;\r\n            default:\r\n              break;\r\n          }\r\n          this.snack.open(`Record ${message} successfully!'`, \"OK\", {\r\n            duration: 2000,\r\n            verticalPosition: \"top\",\r\n            horizontalPosition: \"right\",\r\n          });\r\n        });\r\n      }}))\r\n    \r\n  }\r\n\r\n  submit() {\r\n    if(this.tillVaultBranchMapForm.invalid){\r\n      return;\r\n    }else{\r\n      this.loader.open();\r\n      this.tillData = this.till.find(x => x.tillVaultCode == this.tillVaultBranchMapForm.value.tillId);\r\n      this.tillVaultBranchMapForm.value.tillId = this.tillData.id;\r\n      this.vaultData = this.vault.find(x => x.tillVaultCode == this.tillVaultBranchMapForm.value.parentVaultId);\r\n      this.tillVaultBranchMapForm.value.parentVaultId = this.vaultData.id;\r\n      this.tillVaultBranchMapForm.value.loggedInUser = this.loggedInUser;\r\n      this.apiService.saveTellerVaultBranchMap(this.tillVaultBranchMapForm.value).subscribe((resp) => {\r\n      this.loader.close();\r\n      this.router.navigate([`/maintenance/main/tillVaultltBranch`]).then(_=>{\r\n          this.snack.open('Data Saved Successfully!', 'OK', \r\n          { duration: 4000 , \r\n            verticalPosition: \"top\",\r\n            horizontalPosition: \"right\",});\r\n        });\r\n      },(err:any) =>{\r\n        this.loader.close();\r\n        this.snack.open(`Error!`, 'OK', { duration: 4000,  \r\n          verticalPosition: \"top\",\r\n          horizontalPosition: \"right\",});\r\n        }\r\n      )\r\n      }  \r\n\r\n      // this.tillVaultBranchMapForm.value.locked === true\r\n      //   ? (this.tillVaultBranchMapForm.value.locked = \"0\")\r\n      //   : (this.tillVaultBranchMapForm.value.locked = \"1\");\r\n      // this.dialogRef.close(this.tillVaultBranchMapForm.value);\r\n   \r\n  }\r\n\r\n  alhanumericValidation(event){\r\n    var inp = String.fromCharCode(event.keyCode);\r\n    if (/[a-zA-Z0-9]/.test(inp)) {\r\n      return true;\r\n    } else {\r\n      event.preventDefault();\r\n      return false;\r\n    }\r\n  }\r\n\r\n  getEntityCode() {\r\n    this.apiService.getEntityCode().subscribe((resp) => {\r\n     //this.entityCode = resp;\r\n \r\n      for(let i=0; i<resp.length; i++){\r\n         if(resp[i].authStatus === 'A') {\r\n          this.entityCode.push(resp[i]);\r\n        } \r\n      }\r\n    });\r\n  }\r\n  getBankCode() {\r\n    this.apiService.getBankCode().subscribe((resp) => {\r\n   // this.bankCode = resp;\r\n    \r\n      for(let i=0;i<resp.length;i++){\r\n        if(resp[i].authStatus==='A'){\r\n          this.bankCode.push(resp[i]);\r\n        }\r\n      }\r\n    });\r\n  }\r\n  getBranchCode() {\r\n    this.apiService.getBranchCode().subscribe((resp) => {\r\n    //  this.branchCode = resp;\r\n      for(let i=0; i<resp.length;i++){\r\n        if(resp[i].authStatus==='A'){\r\n          this.branchCode.push(resp[i]);\r\n        }\r\n      }\r\n    });\r\n  }\r\n  getTillId() {\r\n    let tillOrVault =\"T\";\r\n    this.apiService.getTillData(tillOrVault).subscribe((resp) => {\r\n      this.till = resp;\r\n    });\r\n  }\r\n\r\n  getParentVault(){\r\n    let tillOrVault =\"V\";\r\n    this.apiService.getTillData(tillOrVault).subscribe((resp) => {\r\n      this.vault = resp;\r\n    }); \r\n  }\r\n  goBack() {\r\n    localStorage.removeItem('fetchBrnMap');\r\n\r\n    this.router.navigate([`/maintenance/main/tillVaultltBranch`]);\r\n  }\r\n  dataByEntityCode(index,item){\r\n   // console.log(\"item\",item)\r\n    // if(item.authStatus == 'A' || item.authStatus == 'Authorized'){\r\n      return item.entityCode;\r\n    // }\r\n   \r\n  }\r\n  dataByBankCode(index,item){\r\n    return item.bankCode;\r\n  }\r\n  dataByBranchCode(index,item){\r\n    return item.branchCode;\r\n  }\r\n  dataByTillId(index,item){\r\n    return item.tillVaultCode;\r\n  }\r\n  dataParentVaultId(index,item){\r\n    return item.tillVaultCode;\r\n  }\r\n  \r\n  \r\n  \r\n}\r\n","<h1 class=\"main-head\"><small class=\"small-head\">Home > Maintenance Summary > Till Vault Branch Map Maintenance > <span *ngIf=\"!isEdit\">Add</span><span *ngIf=\"isEdit\">Edit</span> Branch Map Details</small>\r\n</h1>\r\n<div fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"mt-16\">\r\n  <button mat-icon-button (click)=\"goBack()\">\r\n    <mat-icon>arrow_back</mat-icon>\r\n  </button>\r\n  <h1 *ngIf=\"!isEdit\" class=\"add-text\">Add Branch Map Details</h1>\r\n  <h1 *ngIf=\"isEdit\" class=\"add-text\">Edit Branch Map Details</h1>\r\n</div>\r\n\r\n<mat-card>\r\n  <mat-card-content>\r\n    <!-- <h1 matDialogTitle>Add Branch Map Details</h1> -->\r\n    <form [formGroup]=\"tillVaultBranchMapForm\" *ngIf=\"tillVaultBranchMapForm\" class=\"m-333\">\r\n\r\n      <!-- <div fxLayout=\"row wrap\" fxLayout.lt-sm=\"column\"> -->\r\n      <div fxLayoutAlign=\"space-between center\" fxLayoutGap=\"15px\">\r\n        <div fxFlex=\"33.33\" *ngIf=\"!readorWrite\">\r\n          <mat-label>Entity code *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <mat-select name=\"entityCode\" (keypress)=\"alhanumericValidation($event)\"\r\n              [formControl]=\"tillVaultBranchMapForm.controls['entityCode']\" class=\"selectOption\">\r\n              <mat-option *ngFor=\"let data of entityCode; trackBy:dataByEntityCode\" [value]=\"data.entityCode\">\r\n                {{data?.entityCode}}\r\n              </mat-option>\r\n            </mat-select>\r\n            <mat-error\r\n              *ngIf=\"tillVaultBranchMapForm.get('entityCode').touched && !tillVaultBranchMapForm.get('entityCode').valid\">\r\n              Enter the Entity Code!\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n        <div fxFlex=\"33.33\" *ngIf=\"readorWrite\">\r\n          <mat-label>Entity code *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input [readonly]=\"readorWrite\" matInput name=\"shortOvgGl\" formControlName=\"entityCode\">\r\n          </mat-form-field>\r\n        </div>\r\n\r\n        <div fxFlex=\"33.33\" *ngIf=\"!readorWrite\">\r\n          <mat-label>Bank Code *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n\r\n            <mat-select name=\"bankCode\" formControlName=\"bankCode\" class=\"selectOption\">\r\n              <mat-option *ngFor=\"let data of bankCode; trackBy:dataByBankCode\" [value]=\"data.bankCode\">\r\n                {{data?.bankCode}}\r\n              </mat-option>\r\n            </mat-select>\r\n            <mat-error\r\n              *ngIf=\"tillVaultBranchMapForm.get('bankCode').touched && !tillVaultBranchMapForm.get('bankCode').valid\">\r\n              Bank code is Required\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n        <div fxFlex=\"33.33\" *ngIf=\"readorWrite\">\r\n          <mat-label>Bank Code *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input [readonly]=\"readorWrite\" matInput name=\"shortOvgGl\" formControlName=\"bankCode\">\r\n          </mat-form-field>\r\n        </div>\r\n\r\n        <div fxFlex=\"33.33\" *ngIf=\"!readorWrite\">\r\n          <mat-label>Branch Code *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n\r\n            <mat-select name=\"branchCode\" formControlName=\"branchCode\" class=\"selectOption\">\r\n              <mat-option *ngFor=\"let data of branchCode; trackBy:dataByBranchCode\" [value]=\"data.branchCode\">\r\n                {{data?.branchCode}}\r\n              </mat-option>\r\n            </mat-select>\r\n            <mat-error\r\n              *ngIf=\"tillVaultBranchMapForm.get('branchCode').touched && !tillVaultBranchMapForm.get('branchCode').valid\">\r\n              Branch code is Required!\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n        <div fxFlex=\"33.33\" *ngIf=\"readorWrite\">\r\n          <mat-label>Branch Code *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input [readonly]=\"readorWrite\" matInput name=\"shortOvgGl\" formControlName=\"branchCode\">\r\n          </mat-form-field>\r\n        </div>\r\n\r\n\r\n      </div>\r\n      <div fxLayoutAlign=\"space-between center\" fxLayoutGap=\"15px\">\r\n        <div fxFlex=\"33.33\" *ngIf=\"!readorWrite\">\r\n          <mat-label>Till Id *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n\r\n            <mat-select name=\"tillId\" formControlName=\"tillId\" class=\"selectOption\">\r\n              <mat-option *ngFor=\"let data of till; trackBy:dataByTillId\" [value]=\"data.tillVaultCode\">\r\n                {{data?.tillVaultCode}}\r\n              </mat-option>\r\n            </mat-select>\r\n            <mat-error\r\n              *ngIf=\"tillVaultBranchMapForm.get('tillId').touched && !tillVaultBranchMapForm.get('tillId').valid\">\r\n              Till Id is Required!\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n        <div fxFlex=\"33.33\" *ngIf=\"readorWrite\">\r\n          <mat-label>Till Id *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input [readonly]=\"readorWrite\" matInput name=\"shortOvgGl\" formControlName=\"tillId\">\r\n          </mat-form-field>\r\n        </div>\r\n\r\n        <div fxFlex=\"33.33\" class=\"pr-16\" *ngIf=\"!readorWrite\">\r\n          <mat-label>Parent Vault Id *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <!-- <input matInput type=\"number\" name=\"parentVaultId\"\r\n              [formControl]=\"tillVaultBranchMapForm.controls['parentVaultId']\"> -->\r\n            <mat-select name=\"parentVaultId\" formControlName=\"parentVaultId\" class=\"selectOption\">\r\n              <mat-option *ngFor=\"let data of vault; trackBy:dataParentVaultId\" [value]=\"data.tillVaultCode\">\r\n                {{data?.tillVaultCode}}\r\n              </mat-option>\r\n            </mat-select>\r\n            <mat-error\r\n              *ngIf=\"tillVaultBranchMapForm.get('parentVaultId').touched && !tillVaultBranchMapForm.get('parentVaultId').valid\">\r\n              Parent Vault Id is Required!\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n        <div fxFlex=\"33.33\" *ngIf=\"readorWrite\">\r\n          <mat-label>Parent Vault Id *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input [readonly]=\"readorWrite\" matInput name=\"shortOvgGl\" formControlName=\"parentVaultId\">\r\n          </mat-form-field>\r\n        </div>\r\n\r\n        <div fxFlex=\"33.33\" class=\"pr-16\">\r\n          <mat-label>Short Ovg Gl *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input [readonly]=\"readorWrite\" matInput name=\"shortOvgGl\" formControlName=\"shortOvgGl\">\r\n            <mat-error\r\n              *ngIf=\"tillVaultBranchMapForm.get('shortOvgGl').touched && !tillVaultBranchMapForm.get('shortOvgGl').valid\">\r\n              Short Ovg Gl is Required!\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n      <div fxLayoutAlign=\"space-between center\" fxLayoutGap=\"15px\">\r\n        <div fxFlex=\"33.33\" class=\"pr-16\">\r\n          <mat-label>Locked</mat-label>\r\n          <mat-slide-toggle formControlName=\"locked\"></mat-slide-toggle>\r\n        </div>\r\n      </div>\r\n\r\n      <div fxLayout=\"row wrap\" fxLayout.lt-sm=\"column\">\r\n        <div fxFlex=\"100\" class=\"mt-16\" fxLayoutAlign=\"end center\">\r\n          <button *ngIf=\"!isEdit\" mat-raised-button color=\"primary\" [disabled]=\"tillVaultBranchMapForm.invalid\"\r\n            (click)=\"submit()\">SAVE</button>\r\n            <div  [hidden]=\"readorWrite\">\r\n              <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\"  [disabled]= \"!(tillVaultBranchMapForm.invalid || tillVaultBranchMapForm.dirty)\"(click)=\"submit()\">\r\n                Save\r\n               </button>&nbsp;&nbsp;\r\n            </div>\r\n          &nbsp;\r\n          <div [hidden]=\"!readorWrite || auditData?.recordStatus == 'Close'\">\r\n            <button *ngIf=\"isEdit\" type=\"button\"  mat-raised-button color=\"primary\" (click)=\"editRecord()\">\r\n              Edit\r\n            </button>&nbsp;&nbsp;\r\n          </div>\r\n          <div *ngIf=\"auditData?.authStatus == 'Unauthorized' && readorWrite\" [hidden]=\"!readorWrite\">\r\n            <button *ngIf=\"isEdit\" type=\"button\"  mat-raised-button color=\"primary\" (click)=\"updateRecord('auth')\">\r\n              Authorize\r\n            </button>&nbsp;&nbsp;\r\n          </div> \r\n          <div *ngIf=\"auditData?.recordStatus == 'Close' && auditData?.oneTimeAuth != 'No'\" [hidden]=\"!readorWrite\">\r\n            <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"updateRecord('open')\">\r\n              Reopen\r\n            </button>&nbsp;&nbsp;\r\n          </div>\r\n          <div *ngIf=\"auditData?.recordStatus == 'Open' && auditData?.oneTimeAuth != 'No'\" [hidden]=\"!readorWrite\">\r\n            <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"updateRecord('close')\">\r\n              Close\r\n            </button>&nbsp;&nbsp;\r\n          </div>\r\n          <div *ngIf=\"auditData?.oneTimeAuth == 'No'\" [hidden]=\"!readorWrite\">\r\n            <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"deleteRecord('delete')\">\r\n              Delete\r\n            </button> &nbsp;&nbsp;\r\n          </div>\r\n         \r\n          <button\r\n            mat-raised-button\r\n            color=\"warn\"\r\n            type=\"button\"\r\n            (click)=\"goBack()\"\r\n          >\r\n            Exit\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  </mat-card-content>\r\n</mat-card>\r\n\r\n<div class=\"mt-32\">\r\n  <app-audit-log *ngIf=\"isAuditData\" #auditLog></app-audit-log>\r\n</div>","import { LiveAnnouncer } from '@angular/cdk/a11y';\r\nimport { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MatSort, Sort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { Router } from '@angular/router';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { AppConfirmService } from 'app/shared/services/app-confirm/app-confirm.service';\r\nimport { DownloadService } from 'app/shared/services/download.service';\r\n\r\n@Component({\r\n  selector: 'app-currency-maint-summary',\r\n  templateUrl: './currency-maint-summary.component.html',\r\n  styleUrls: ['./currency-maint-summary.component.scss']\r\n})\r\nexport class CurrencyMaintSummaryComponent implements OnInit {\r\n\r\n  displayedColumns: string[] = ['currencyCode', 'currencyName', 'country','authStatus','recordStatus','action'];\r\n  filterByOption: { key: string, value: string }[] = [\r\n    { key: 'currencyCode', value: 'Currency Code' },\r\n    { key: 'currencyName', value: 'Currency Name' }\r\n  ];\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  getItemSub: any;\r\n  items: any;\r\n  public users: any[];\r\n  dataSource = new MatTableDataSource();\r\n  @ViewChild('searchVal') searchVal: ElementRef;\r\n  selectedFilterIndex: number;\r\n\r\n  constructor(\r\n    private apiService: ApiService,\r\n    private router:Router,\r\n    private _liveAnnouncer: LiveAnnouncer,\r\n    private confirmService: AppConfirmService,\r\n    private snack: MatSnackBar,\r\n    private downloadService: DownloadService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n      this.fetchCurrencyMaintDetails();\r\n  }\r\n  onFileChange(event) {\r\n    console.log('event', event.path[0].files[0]);\r\n    const file: File = event.path[0].files[0];\r\n    const uploadData = new FormData();\r\n    uploadData.append('screenType', 'currencyMaint');\r\n    uploadData.append('file', file);\r\n    this.apiService.uploadExelFile(uploadData).subscribe((response) => {\r\n      console.log(response);\r\n      this.fetchCurrencyMaintDetails();\r\n      this.snack.open(`File Uploaded Successfully`, \"OK\", {\r\n        duration: 4000,\r\n        verticalPosition: \"top\",\r\n        horizontalPosition: \"right\",\r\n      });\r\n    });\r\n  }\r\n  fetchCurrencyMaintDetails() {\r\n    this.getItemSub = this.apiService.fetchCurrencyMaintDetails()\r\n      .subscribe(data => {\r\n        console.log(\"data\",data);\r\n        for(let i=0;i<data.length;i++){\r\n          if(data[i].authStatus == 'U'){\r\n            data[i].authStatus = 'Unauthorized'\r\n          }\r\n          if(data[i].authStatus == 'A') {\r\n            data[i].authStatus = 'Authorized'\r\n          } \r\n          if(data[i].recordStatus == 'O'){\r\n            data[i].recordStatus = 'Open'\r\n          } \r\n          if(data[i].recordStatus == 'C'){\r\n            data[i].recordStatus = 'Closed'\r\n          }\r\n        }\r\n        this.dataSource = new MatTableDataSource(data);\r\n        this.users = data;\r\n        console.log(this.dataSource);\r\n        this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n      })\r\n  }\r\n\r\n  addNew() {\r\n    this.router.navigate([\"/maintenance/main/currencyMaint/add\"], { queryParams: { currencyId: null, isEdit : \"No\" } });\r\n  }\r\n  announceSortChange(sortState: Sort) {\r\n    if (sortState.direction) {\r\n      this._liveAnnouncer.announce(`Sorted ${sortState.direction}ending`);\r\n    } else {\r\n      this._liveAnnouncer.announce('Sorting cleared');\r\n    }\r\n    \r\n  }\r\n  clearFilter(){\r\n    this.dataSource.filter = '';\r\n    this.searchVal.nativeElement.value = '';\r\n    this.selectedFilterIndex = 0;\r\n   }\r\n   doFilter(filterBy, e){\r\n    console.log(filterBy,e);\r\n    this.filterTable(filterBy);\r\n    this.applyFilter(e);\r\n  }\r\n  goBack() {\r\n    this.router.navigate([`/maintenance/main`]);\r\n  }\r\n  openPopUp(data: any = {},isEdit : string) {\r\n    console.log(\"data\",JSON.stringify(data.currencyId));\r\n    this.router.navigate([`/maintenance/main/currencyMaint/add`],{ queryParams: { currencyId: JSON.stringify(data.currencyId), isEdit : isEdit } });\r\n  }\r\n\r\n  applyFilter(e: any) {\r\n    //throw new Error('Method not implemented.');\r\n    const filterValue = (e.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n  filterTable(filterBy: any) {\r\n    //throw new Error('Method not implemented.');\r\n    this.dataSource.filterPredicate = (filteredDdata: any, filter: string): boolean => {\r\n      return (\r\n        filteredDdata[filterBy]?.toLocaleLowerCase().includes(filter) || filteredDdata.currencyId[filterBy]?.toLocaleLowerCase().includes(filter)\r\n      )\r\n    }\r\n  }\r\n  currencyMaintenance(){\r\n    this.downloadService.downloadFiles(\"courrencyMaintenance\", this.users);\r\n  }\r\n\r\n  deleteItem(row) {\r\n    console.log(row);\r\n    this.confirmService.confirm({message: `Are you sure? You want to delete?`})\r\n      .subscribe(res => {\r\n        if (res) {\r\n          this.apiService.deleteCurrencyMaint(row.currencyId)\r\n            .subscribe(data => {\r\n              if (data !== null) {\r\n                this.snack.open('Record Deleted Successfully', 'OK', {\r\n                  duration: 4000,\r\n                  verticalPosition: 'top',\r\n                  horizontalPosition: 'right'\r\n                });\r\n              }\r\n            this.fetchCurrencyMaintDetails();\r\n            },\r\n            err=>{\r\n          })\r\n        }\r\n      })\r\n  }\r\n}\r\n","<h1 class=\"main-head\"><small class=\"small-head\">Home > Maintenance Summary > Currency Maintenance </small></h1>\r\n<div fxLayoutAlign=\"center\">  \r\n  </div>\r\n  <div fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"mt-24\">\r\n    <button mat-icon-button (click)=\"goBack()\">\r\n      <mat-icon>arrow_back</mat-icon>\r\n    </button>\r\n    <span class=\"text-large\">\r\n      Currency Maintenance\r\n    </span>\r\n   </div> \r\n  <mat-card class=\"mt-32\">\r\n    <div>\r\n      <table style=\"margin: 18px;\">\r\n        <tr>\r\n          <td>\r\n            <h2>\r\n              Currencies\r\n            </h2>\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <td>\r\n            <div class=\"highlight\">\r\n            </div>\r\n          </td>\r\n        </tr>\r\n      </table>  \r\n      <span fxFlex></span>\r\n    <button mat-icon-button [matMenuTriggerFor]=\"menu\">\r\n      <mat-icon>more_vert</mat-icon>\r\n    </button>\r\n    <mat-menu #menu=\"matMenu\">\r\n      <!-- <button mat-menu-item>\r\n        <span>Upload</span>\r\n      </button> -->\r\n      <div class=\"upload_botton\">\r\n        <button type=\"button\" mat-menu-item>Upload</button>\r\n        <input\r\n          type=\"file\"\r\n          accept=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\"\r\n          class=\"btn btn-success\"\r\n          (change)=\"onFileChange($event)\"\r\n        />\r\n      </div>\r\n      <button (click)=\"currencyMaintenance()\" mat-menu-item>\r\n        <span>Download</span>\r\n      </button>\r\n    </mat-menu>\r\n  </div>\r\n    <mat-card-content>\r\n      <div fxLayout=\"row\" class=\"w-full\" fxLayoutAlign=\"space-arround center\" class=\"ml-16 mt-32\">\r\n        <div fxLayout=\"row\" class=\"w-full\" fxLayoutGap=\"10px\">\r\n          <div>\r\n            <mat-form-field appearance=\"outline\">\r\n              <mat-label>Filter By</mat-label>\r\n              <mat-select name=\"filterBy\" #filterBy [(ngModel)]=\"selectedFilterIndex\" placeholder=\"Filter By\">\r\n                <!-- <mat-select name=\"filterBy\" #filterBy [(ngModel)]=\"selectedFilterIndex\"> -->\r\n                <mat-option value=\"0\">Select</mat-option>\r\n                <mat-option *ngFor=\"let filter of filterByOption\" value=\"{{filter.key}}\">\r\n                  {{filter.value}}\r\n                </mat-option>\r\n              </mat-select>\r\n            </mat-form-field>\r\n          </div>\r\n          <div>\r\n            <mat-form-field appearance=\"outline\">\r\n              <mat-label>Search</mat-label>\r\n              <input matInput #searchVal (keyup)=\"doFilter(filterBy.value,$event)\" placeholder=\"Search\">\r\n              <!-- <input matInput #searchVal (keyup)=\"doFilter(filterBy.value,$event)\"> -->\r\n              <mat-icon matSuffix>search</mat-icon>\r\n            </mat-form-field>\r\n          </div>\r\n        <div *ngIf=\"searchVal.value || filterBy.value\" class=\"resetDiv\">\r\n          <button mat-stroked-button class=\"clearBtn\" (click)=\"clearFilter()\">RESET\r\n          </button>\r\n        </div>\r\n        <div class=\"filterDiv\">\r\n         <button mat-flat-button color=\"primary\" class=\"addNewBtn\" (click)=\"addNew()\" >ADD NEW\r\n         </button>\r\n       </div>\r\n        \r\n      </div>\r\n      </div>\r\n      <div class=\"mat-elevation-z0\">\r\n        <mat-table class=\"w-full\" [dataSource]=\"dataSource\" matSort (matSortChange)=\"announceSortChange($event)\">\r\n          <ng-container matColumnDef=\"currencyCode\">\r\n            <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by currency code\">\r\n              Currency Code\r\n            </mat-header-cell>\r\n            <mat-cell *matCellDef=\"let element\"> {{element.currencyCode}} </mat-cell>\r\n          </ng-container>\r\n  \r\n          <ng-container matColumnDef=\"currencyName\">\r\n            <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by currency name\"> Currency Name\r\n            </mat-header-cell>\r\n            <mat-cell *matCellDef=\"let element\"> {{element.currencyName}} </mat-cell>\r\n          </ng-container>\r\n  \r\n          <ng-container matColumnDef=\"country\">\r\n            <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by country\"> \r\n              Country\r\n            </mat-header-cell>\r\n            <mat-cell *matCellDef=\"let element\"> {{element.country}} </mat-cell>\r\n          </ng-container>\r\n          <ng-container matColumnDef=\"authStatus\">\r\n            <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Auth Status\"> Auth Status\r\n            </mat-header-cell>\r\n            <mat-cell *matCellDef=\"let element\"> {{element.authStatus}} </mat-cell>\r\n          </ng-container>\r\n          <ng-container matColumnDef=\"recordStatus\">\r\n            <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Record Status\"> Record\r\n              Status\r\n            </mat-header-cell>\r\n            <mat-cell *matCellDef=\"let element\"> {{element.recordStatus}} </mat-cell>\r\n          </ng-container>\r\n  \r\n  \r\n          <ng-container matColumnDef=\"action\">\r\n            <mat-header-cell *matHeaderCellDef>Action</mat-header-cell>\r\n            <mat-cell *matCellDef=\"let element\">\r\n              <div>\r\n               <mat-icon class=\"actionIcons\" matTooltip=\"Edit\" (click)=\"openPopUp(element,'Yes')\" >edit</mat-icon>\r\n            </div>&nbsp;&nbsp;&nbsp;&nbsp;\r\n            <div>\r\n             <mat-icon class=\"actionIcons\" matTooltip=\"Delete\" [disabled]=\"element.oneTimeAuth =='Y'\"  (click)=\"deleteItem(element)\" >delete</mat-icon>\r\n            </div>\r\n            </mat-cell>\r\n          </ng-container>\r\n  \r\n          <mat-header-row *matHeaderRowDef=\"displayedColumns;\"></mat-header-row>\r\n          <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\r\n        </mat-table>\r\n        <mat-paginator class=\"mt-16\" [pageSizeOptions]=\"[5, 10, 20]\" aria-label=\"Select page of users\"></mat-paginator>\r\n      </div>\r\n    </mat-card-content>\r\n  </mat-card>","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { tillVaultStatus } from 'app/shared/models/tillVaultStatus';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { AppLoaderService } from 'app/shared/services/app-loader/app-loader.service';\r\nimport { DataService } from 'app/shared/services/data.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport * as moment from 'moment';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-till-vault-status',\r\n  templateUrl: './till-vault-status.component.html',\r\n  styleUrls: ['./till-vault-status.component.scss']\r\n})\r\nexport class TillVaultStatusComponent implements OnInit {\r\n\r\n  arrayCurrency: string[] = [];\r\n  public tillVaultForm: FormGroup;\r\n  tillVaultResponse: any;\r\n  Id: number;\r\n  currentUser: string;\r\n  vaultStatus: any = {};\r\n  // vaultStatus: {};\r\n  bankCode: string[] = [];\r\n  till: any;\r\n  entity: string[] = [];\r\n  branchCode: string[] = [];\r\n  tillData: any;\r\n  loggedInUser : any;\r\n  auditData : any;\r\n  isAuditData : boolean = false;\r\n  id: any;\r\n  isEdit: boolean = false;\r\n  readorWrite: boolean=true;\r\n  tillVaultStatusDetails:tillVaultStatus[] = []\r\n  constructor(\r\n    // @Inject(MAT_DIALOG_DATA) public data: any,\r\n    // public dialogRef: MatDialogRef<TillVaultStatusComponent>,\r\n    private fb: FormBuilder,\r\n    private apiService: ApiService,\r\n    private loader: AppLoaderService,\r\n    private snack: MatSnackBar,\r\n    private router:Router,\r\n    private ls:LocalStoreService,\r\n    private dataService:DataService,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.getBankCode();\r\n    this.getBranchCode();\r\n    this.getTillId();\r\n    this.getEntityCode();\r\n    this.currentUser = this.ls.getItem(\"ICUST_USER\");\r\n    // this.dataService.getTillVaultStatus.subscribe(data =>{\r\n    //   console.log(data)\r\n    //   this.vaultStatus = typeof this.vaultStatus === 'object' ? data : {};\r\n    // });\r\n    // this.buildItemForm(this.vaultStatus);\r\n\r\n    setTimeout(() => {  \r\n      this.vaultStatus = JSON.parse(localStorage.getItem('fetchVaultStatus'));\r\n      if(this.vaultStatus == null || this.vaultStatus == undefined){\r\n        this.readorWrite=false;\r\n        this.buildItemForm({})\r\n      }       \r\n      else if(this.vaultStatus.id != null || this.vaultStatus.id != undefined){\r\n      this.loader.open();\r\n      this.id = this.vaultStatus.id;\r\n      this.buildItemForm(this.vaultStatus)\r\n      this.auditData = this.vaultStatus\r\n      console.log( this.auditData)\r\n      this.isEdit = true;\r\n      this.isAuditData = true;\r\n      this.dataService.setAuditLogData(this.auditData);\r\n      this.loader.close();\r\n      }\r\n    }, 1000)\r\n    this.loggedInUser = this.ls.getItem('ICUST_USER');\r\n  }\r\n\r\n  buildItemForm(item) {\r\n    this.tillVaultForm = this.fb.group({\r\n      bankCode: [item.bankCode || '', [Validators.required]],\r\n      branchCode: [item.branchCode || '', [Validators.required, Validators.minLength(1), Validators.maxLength(6)]],\r\n      entityCode: [item.entityCode || '', [Validators.required]],\r\n      tillId: [item.tillId || '', [Validators.required, Validators.minLength(1), Validators.maxLength(19)]],\r\n      userId: [item.userId || '', [Validators.required, Validators.minLength(1), Validators.maxLength(255)]],\r\n      tillVaultStatus: [item.tillVaultStatus || '', [Validators.required, Validators.minLength(1), Validators.maxLength(5)]],\r\n      tvOpenTime : [new Date(item.tvOpenTime) || '', [Validators.required]],\r\n      tvClosingTime : [new Date(item.tvClosingTime) || '', [Validators.required]],\r\n      id: [item.id || null],\r\n      loggedInuser : [item.loggedInUser || '']\r\n    })\r\n  }\r\n\r\n  alphakeyPress(event: any) {\r\n    const pattern = /[0-9a-zA-Z]/;\r\n    let inputChar = String.fromCharCode(event.charCode);\r\n    if (!pattern.test(inputChar)) {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n  deleteRecord(operation){\r\n    Swal.fire(\r\n      {\r\n        //text: 'Unable to process' + 'Error ' + this.responseforfileupload.errorMessage + 'Do you want to Proceed??',\r\n        text: 'You are trying to '+ operation +' record.' + ' Do you want to proceed?',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        // confirmButtonText: 'PROCEED.'\r\n        cancelButtonText: 'NO',\r\n        confirmButtonText: 'YES', 'icon': 'info'\r\n      }\r\n    ).then((result => {\r\n      if(result.isConfirmed==true){\r\n        this.apiService.deleteTillVaultStatusById(this.auditData.id)\r\n        .subscribe(data => {\r\n          this.router.navigate([`/maintenance/main/tillVaultStatus`]);\r\n        },\r\n        err=>{\r\n          if (err.status == 200) {\r\n            this.snack.open('Record Deleted Successfully', 'OK', {\r\n              duration: 4000,\r\n              verticalPosition: 'top',\r\n              horizontalPosition: 'right'\r\n            });\r\n          }\r\n          this.router.navigate([`/maintenance/main/tillVaultStatus`]);\r\n        \r\n      })\r\n      }}))\r\n   \r\n         \r\n       \r\n  }\r\n  editRecord(){\r\n    this.readorWrite=false;\r\n  }\r\n\r\n  updateRecord(operation) {\r\n    Swal.fire(\r\n      {\r\n        //text: 'Unable to process' + 'Error ' + this.responseforfileupload.errorMessage + 'Do you want to Proceed??',\r\n        text: 'You are trying to '+ operation +' record.' + ' Do you want to proceed?',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        // confirmButtonText: 'PROCEED.'\r\n        cancelButtonText: 'NO',\r\n        confirmButtonText: 'YES', 'icon': 'info'\r\n      }\r\n    ).then((result => {\r\n      if(result.isConfirmed==true){\r\n        let payload: any = {};\r\n    payload.id = this.id;\r\n    payload.operation = operation;\r\n    payload.loggedInUser = this.loggedInUser.userName;\r\n    this.apiService.getAuditLogsFortillvaultStatus(payload).subscribe((data) => {\r\n      this.auditData = data;\r\n      this.dataService.setAuditLogData(this.auditData);\r\n      this.isAuditData = true;\r\n      this.dataService.sendClickEvent();\r\n      let message = '';\r\n      switch (operation) {\r\n        case 'open':\r\n          message = 'opened'\r\n          break;\r\n        case 'close':\r\n          message = 'closed'\r\n          break;\r\n        case 'auth':\r\n          message = 'authorized'\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n      this.snack.open(`Record ${message} successfully!'`, \"OK\", {\r\n        duration: 2000,\r\n        verticalPosition: \"top\",\r\n        horizontalPosition: \"right\",\r\n      });\r\n    });\r\n      }}))\r\n    \r\n  }\r\n\r\n  submit() {\r\n    let  openTime = this.convertDate(this.tillVaultForm.controls.tvOpenTime.value);\r\n    this.tillVaultForm.value['tvOpenTime'] = openTime;\r\n\r\n    let  closeTime = this.convertDate(this.tillVaultForm.controls.tvClosingTime.value);\r\n    this.tillVaultForm.value['tvClosingTime'] = closeTime;\r\n\r\n    if(this.tillVaultForm.invalid){\r\n      return;\r\n    }else{\r\n      this.loader.open();\r\n      // this.tillVaultForm.value.tvOpenTime =this.convertDate(this.tillVaultForm.value.tvOpenTime);\r\n      // this.tillVaultForm.value.tvClosingTime =this.convertDate(this.tillVaultForm.value.tvClosingTime);\r\n      this.tillData = this.till.find(x => x.tillVaultCode == this.tillVaultForm.value.tillId);\r\n      this.tillVaultForm.value.tillId = this.tillData.id;\r\n      this.tillVaultForm.value.loggedInUser = this.loggedInUser.userName;\r\n\r\n      this.apiService.upsertTillVaultStatus(this.tillVaultForm.value).subscribe((resp) => {\r\n      this.loader.close();\r\n      this.router.navigate([`/maintenance/main/tillVaultStatus`]).then(_=>{\r\n          this.snack.open('Data Saved Successfully!', 'OK', \r\n          { duration: 4000 , \r\n            verticalPosition: \"top\",\r\n            horizontalPosition: \"right\",});\r\n            localStorage.removeItem('fetchVaultStatus');\r\n        });\r\n      },(err:any) =>{\r\n        this.loader.close();\r\n        this.snack.open(`Error!`, 'OK', { duration: 4000,  \r\n          verticalPosition: \"top\",\r\n          horizontalPosition: \"right\",});\r\n        }\r\n      )\r\n      }  \r\n    // let payloadObj : any = {};\r\n    // payloadObj = this.tillVaultForm.value;\r\n    // payloadObj.id = this.Id;\r\n    // this.dialogRef.close(payloadObj);\r\n  }\r\n\r\n  goBack() {\r\n    localStorage.removeItem('fetchVaultStatus');\r\n    this.router.navigate([`/maintenance/main/tillVaultStatus`]);\r\n  }\r\n\r\n  getBankCode() {\r\n    this.apiService.getBankCode().subscribe((resp) => {\r\n      for(let i=0; i<resp.length;i++){\r\n        if(resp[i].authStatus==='A'){\r\n          this.bankCode.push(resp[i]);\r\n        }\r\n      }\r\n      // this.bankCode = resp;\r\n    });\r\n  }\r\n  getBranchCode() {\r\n    this.apiService.getBranchCode().subscribe((resp) => {\r\n      for(let i=0; i<resp.length;i++){\r\n        if(resp[i].authStatus==='A'){\r\n          this.branchCode.push(resp[i]);\r\n        }\r\n      }\r\n      // this.branchCode = resp;\r\n    });\r\n  }\r\n  getTillId() {\r\n  let tillOrVault =\"T\";\r\n  this.apiService.getTillData(tillOrVault).subscribe((resp) => {\r\n    this.till = resp;\r\n });\r\n  }\r\n\r\n  getEntityCode() {\r\n    this.apiService.getEntityCode().subscribe((resp) => {\r\n      for(let i=0; i<resp.length;i++){\r\n        if(resp[i].authStatus==='A'){\r\n          this.entity.push(resp[i]);\r\n        }\r\n      }\r\n      // this.entity = resp;\r\n    });\r\n  }\r\n\r\n  convertDate(value) {\r\n    let date = moment(value).format(\"YYYY-MMM-DD HH:mm:ss\");\r\n    if (date)\r\n      return date;\r\n  }\r\n\r\n  trackByEntityCode(data){\r\n    return data.entityCode;\r\n  }\r\n\r\n  trackByBankCode(data){\r\n    return data.bankCode;\r\n  }\r\n\r\n  trackByBranchCode(data){\r\n    return data.branchCode;\r\n  }\r\n\r\n  trackByTill(data){\r\n    return data.tillVaultCode;\r\n  }\r\n}\r\n","<h1 class=\"main-head\"><small class=\"small-head\">Home > Maintenance Summary > Till Vault Status Maintenance > <span *ngIf=\"!isEdit\">Add</span><span *ngIf=\"isEdit\">Edit</span> Till Vault Status Details</small></h1>\r\n<div fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"mt-16\">\r\n  <button mat-icon-button (click)=\"goBack()\">\r\n    <mat-icon>arrow_back</mat-icon>\r\n  </button>\r\n  <h1 *ngIf=\"!isEdit\" class=\"add-text\">Add Till Vault Status Details</h1>\r\n  <h1 *ngIf=\"isEdit\" class=\"add-text\">Edit Till Vault Status Details</h1>\r\n</div>\r\n\r\n<mat-card>\r\n  <mat-card-content>\r\n    <!-- <h1 *ngIf=\"!isEdit\" matDialogTitle>Add Till Vault Status Details</h1>\r\n    <h1 *ngIf=\"isEdit\" matDialogTitle>Edit Till Vault Status Details</h1> -->\r\n    <form [formGroup]=\"tillVaultForm\" *ngIf=\"tillVaultForm\" class=\"m-333\">\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\" fxLayoutGap=\"15px\">\r\n        <div fxFlex=\"33.33\"  *ngIf=\"!readorWrite\">\r\n          <mat-label>Entity code *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <mat-select name=\"entityCode\" [formControl]=\"tillVaultForm.controls['entityCode']\" class=\"selectOption\">\r\n              <mat-option value=\"\">Select</mat-option>\r\n              <mat-option *ngFor=\"let data of entity; trackBy: trackByEntityCode;\" [value]=\"data.entityCode\">\r\n                {{data.entityCode}}\r\n              </mat-option>\r\n            </mat-select>\r\n            <mat-error *ngIf=\"tillVaultForm.get('entityCode').touched && !tillVaultForm.get('entityCode').valid\">\r\n              Entity Code is Required!\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n        <div fxFlex=\"33.33\"  *ngIf=\"readorWrite\">\r\n          <mat-label>Entity Code  *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input matInput readonly\r\n              [formControl]=\"tillVaultForm.controls['entityCode']\">\r\n          </mat-form-field>\r\n        </div>\r\n        <div fxFlex=\"33.33\"  *ngIf=\"!readorWrite\">\r\n          <mat-label>Bank Code *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <mat-select name=\"bankCode\" [formControl]=\"tillVaultForm.controls['bankCode']\" class=\"selectOption\">\r\n              <mat-option value=\"\">Select</mat-option>\r\n              <mat-option *ngFor=\"let data of bankCode; trackBy: trackByBankCode;\" [value]=\"data.bankCode\">\r\n                {{data.bankCode}}\r\n              </mat-option>\r\n            </mat-select>\r\n            <mat-error *ngIf=\"tillVaultForm.get('bankCode').touched && !tillVaultForm.get('bankCode').valid\">\r\n              Bank Code is Required!\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n        <div fxFlex=\"33.33\"  *ngIf=\"readorWrite\">\r\n          <mat-label>Bank Code  *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input matInput readonly\r\n              [formControl]=\"tillVaultForm.controls['bankCode']\">\r\n          </mat-form-field>\r\n        </div>\r\n\r\n        <div fxFlex=\"33.33\"  *ngIf=\"!readorWrite\">\r\n          <mat-label>Branch Code *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <mat-select name=\"branchCode\" [formControl]=\"tillVaultForm.controls['branchCode']\" class=\"selectOption\">\r\n              <mat-option value=\"\">Select</mat-option>\r\n              <mat-option *ngFor=\"let data of branchCode; trackBy: trackByBranchCode;\" [value]=\"data.branchCode\">\r\n                {{data.branchCode}}\r\n              </mat-option>\r\n            </mat-select>\r\n            <mat-error *ngIf=\"tillVaultForm.get('branchCode').touched && !tillVaultForm.get('branchCode').valid\">\r\n              Branch Code is Required!\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n        <div fxFlex=\"33.33\"  *ngIf=\"readorWrite\">\r\n          <mat-label>Branch Code  *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input matInput readonly\r\n              [formControl]=\"tillVaultForm.controls['branchCode']\">\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\" fxLayoutGap=\"15px\" *ngIf=\"!readorWrite\">\r\n        <div fxFlex=\"33.33\">\r\n          <mat-label>Till Id *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <mat-select name=\"tillId\" [formControl]=\"tillVaultForm.controls['tillId']\" class=\"selectOption\">\r\n              <mat-option value=\"\">Select</mat-option>\r\n              <mat-option *ngFor=\"let data of till; trackBy: trackByTill;\" [value]=\"data.tillVaultCode\">\r\n                {{data.tillVaultCode}}\r\n              </mat-option>\r\n            </mat-select>\r\n            <mat-error *ngIf=\"tillVaultForm.get('tillId').touched && !tillVaultForm.get('tillId').valid\">\r\n              Till Id is Required!\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n        <div fxFlex=\"33.33\"  *ngIf=\"readorWrite\">\r\n          <mat-label>Till Id  *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input matInput readonly\r\n              [formControl]=\"tillVaultForm.controls['tillId']\">\r\n          </mat-form-field>\r\n        </div>\r\n\r\n        <div fxFlex=\"33.33\">\r\n          <mat-label>User Id *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input matInput name=\"userId\" minlength=\"1\" maxlength=\"255\" (keypress)=alphakeyPress($event)\r\n              [formControl]=\"tillVaultForm.controls['userId']\">\r\n            <mat-error *ngIf=\"tillVaultForm.get('userId').touched && !tillVaultForm.get('userId').valid\">\r\n              User Id is Required!\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n\r\n        <div fxFlex=\"33.33\" *ngIf=\"!readorWrite\">\r\n          <mat-label>Till Vault Status *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <mat-select \r\n            name=\"tillVaultStatus\"\r\n            [formControl]=\"tillVaultForm.controls['tillVaultStatus']\"\r\n          >\r\n            <mat-option [value]=\"'Open'\" selected> Open </mat-option>\r\n            <mat-option [value]=\"'Closed'\"> Closed </mat-option>\r\n          </mat-select>\r\n            <!-- <input matInput name=\"tillVaultStatus\" minlength=\"1\" maxlength=\"5\" (keypress)=alphakeyPress($event)\r\n              [formControl]=\"tillVaultForm.controls['tillVaultStatus']\"> -->\r\n            <mat-error\r\n              *ngIf=\"tillVaultForm.get('tillVaultStatus').touched && !tillVaultForm.get('tillVaultStatus').valid\">\r\n              Till Vault Status is Required!\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n        <div fxFlex=\"33.33\"  *ngIf=\"readorWrite\">\r\n          <mat-label>Till Vault Status *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input matInput readonly\r\n              [formControl]=\"tillVaultForm.controls['tillVaultStatus']\">\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n\r\n      <div fxLayoutAlign=\"space-between center\" fxLayoutGap=\"15px\">\r\n        <div fxFlex=\"33.33\">\r\n          <mat-label>TV Open Time *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input  [readonly]=\"readorWrite\" placeholder=\"Select Date\" [formControl]=\"tillVaultForm.controls['tvOpenTime']\" [min]=\"tillVaultForm.get('tvOpenTime').value\"\r\n              matInput name=\"tvOpenTime\" [matDatepicker]=\"picker\" readonly>\r\n            <mat-datepicker-toggle matSuffix [for]=\"picker\">\r\n              <mat-icon matDatepickerToggleIcon>keyboard_arrow_down</mat-icon>\r\n            </mat-datepicker-toggle>\r\n            <mat-datepicker #picker></mat-datepicker>\r\n            <mat-error *ngIf=\"tillVaultForm.get('tvOpenTime').touched && !tillVaultForm.get('tvOpenTime').valid\">\r\n              TV Open Time is Required!\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n\r\n        <div fxFlex=\"33.33\">\r\n          <mat-label>TV Closing Time *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input  [readonly]=\"readorWrite\" placeholder=\"Select Date\" [formControl]=\"tillVaultForm.controls['tvClosingTime']\"\r\n              [min]=\"tillVaultForm.get('tvClosingTime').value\" matInput name=\"tvClosingTime\" [matDatepicker]=\"picker1\"\r\n              readonly>\r\n            <mat-datepicker-toggle matSuffix [for]=\"picker1\">\r\n              <mat-icon matDatepickerToggleIcon>keyboard_arrow_down</mat-icon>\r\n            </mat-datepicker-toggle>\r\n            <mat-datepicker #picker1></mat-datepicker>\r\n            <mat-error *ngIf=\"tillVaultForm.get('tvClosingTime').touched && !tillVaultForm.get('tvClosingTime').valid\">\r\n              TV Closing Time is Required!\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n\r\n      </div>\r\n\r\n\r\n      <div fxLayout=\"row wrap\" fxLayout.lt-sm=\"column\">\r\n        <div fxFlex=\"100\" class=\"mt-16\" fxLayoutAlign=\"end center\">\r\n          <button mat-raised-button *ngIf=\"!isEdit\" color=\"primary\" [disabled]=\"tillVaultForm.invalid\" (click)=\"submit()\">SAVE</button>\r\n          &nbsp;\r\n          <div [hidden]=\"readorWrite\" >\r\n            <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\"  [disabled]= \"!(tillVaultForm.invalid || tillVaultForm.dirty)\"(click)=\"submit()\">\r\n               Save\r\n              </button>&nbsp;&nbsp;\r\n          </div>\r\n          <div [hidden]=\"!readorWrite || auditData?.recordStatus == 'Close'\">\r\n            <button *ngIf=\"isEdit\" type=\"button\"  mat-raised-button color=\"primary\" (click)=\"editRecord()\">\r\n              Edit\r\n            </button>&nbsp;&nbsp;\r\n          </div>\r\n          <div *ngIf=\"auditData?.authStatus == 'Unauthorized' && readorWrite\" [hidden]=\"!readorWrite\">\r\n            <button *ngIf=\"isEdit\" type=\"button\"  mat-raised-button color=\"primary\" (click)=\"updateRecord('auth')\">\r\n              Authorize\r\n            </button>&nbsp;&nbsp;\r\n          </div> \r\n          <div *ngIf=\"auditData?.recordStatus == 'Close' && auditData?.oneTimeAuth != 'No'\" [hidden]=\"!readorWrite\">\r\n            <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"updateRecord('open')\">\r\n              Reopen\r\n            </button>&nbsp;&nbsp;\r\n          </div>\r\n          <div *ngIf=\"auditData?.recordStatus == 'Open' && auditData?.oneTimeAuth != 'No'\" [hidden]=\"!readorWrite\">\r\n            <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"updateRecord('close')\">\r\n              Close\r\n            </button>&nbsp;&nbsp;\r\n          </div>\r\n          <div *ngIf=\"auditData?.oneTimeAuth == 'No'\" [hidden]=\"!readorWrite\">\r\n            <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"deleteRecord('delete')\">\r\n              Delete\r\n            </button> &nbsp;&nbsp;\r\n          </div>\r\n         \r\n          <button\r\n            mat-raised-button\r\n            color=\"warn\"\r\n            type=\"button\"\r\n            (click)=\"goBack()\"\r\n          >\r\n            Exit\r\n          </button>\r\n\r\n        </div>\r\n      </div>\r\n    </form>\r\n\r\n\r\n  </mat-card-content>\r\n</mat-card>\r\n\r\n<div class=\"mt-32\">\r\n  <app-audit-log *ngIf=\"isAuditData\" #auditLog></app-audit-log>\r\n</div>","import { ChangeDetectorRef, Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\nimport { ApiService } from \"app/shared/services/api.service\";\r\nimport { DataService } from \"app/shared/services/data.service\";\r\nimport { LocalStoreService } from \"app/shared/services/local-store.service\";\r\nimport { AuditLogComponent } from \"../../audit-log/audit-log.component\";\r\nimport * as moment from 'moment';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: \"app-add-currency-pair-rates-maintenance\",\r\n  templateUrl: \"./add-currency-pair-rates-maintenance.component.html\",\r\n  styleUrls: [\"./add-currency-pair-rates-maintenance.component.scss\"],\r\n})\r\nexport class AddCurrencyPairRatesMaintenanceComponent implements OnInit {\r\n  @ViewChild(\"auditLog\") auditLog: AuditLogComponent;\r\n  public branchForm: FormGroup;\r\n \r\n  currencies: any = [];\r\n  data: any;\r\n \r\n  loggedInUser: any;\r\n  isReadOnly: boolean = true;\r\n  isEdit: boolean = false;\r\n  isView: boolean = true;\r\n  show = false;\r\n  editNow: boolean = false;\r\n  currencyPairRateIsEdit: any;\r\n  id: any;\r\n  auditData: any;\r\n  isAuditData: boolean = false;\r\n  currency: any;\r\n  branchCode: any[] = [];\r\n  minDate = new Date();\r\n  currencyPair: any[] = [];\r\n  readorWrite: boolean=true;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private fb: FormBuilder,\r\n    private apiService: ApiService,\r\n    private snack: MatSnackBar,\r\n    private cdr: ChangeDetectorRef,\r\n    private ls: LocalStoreService,\r\n    private route: ActivatedRoute,\r\n    private dataService: DataService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    \r\n    this.route.queryParamMap.subscribe((params: any) => {\r\n      console.log(params.get(\"id\"));\r\n      this.currencyPairRateIsEdit = params.get(\"isEdit\");\r\n      console.log(\"this.entityIsEdit\", this.currencyPairRateIsEdit);\r\n      if (params.get(\"isEdit\") == \"Yes\") {\r\n        this.isReadOnly = false;\r\n        this.isView = true;\r\n        this.editNow = true;\r\n      } else if (params.get(\"isEdit\") == \"No\") {\r\n        this.isReadOnly = true;\r\n        this.isView = true;\r\n        this.editNow = false;\r\n      } else if (params.get(\"isEdit\") == \"false\") {\r\n        this.isReadOnly = false;\r\n        this.isView = false;\r\n        this.editNow = false;\r\n      } else if (params.get(\"isEdit\") == null) {\r\n        this.isView = false;\r\n      }\r\n      if (params.get(\"id\")) {\r\n        this.isEdit = true;\r\n        this.id = params.get(\"id\");\r\n        this.apiService\r\n          .getCurrencyPairRatesById(params.get(\"id\"))\r\n          .subscribe((resp) => {\r\n            console.log(resp);\r\n            this.buildItemForm(resp);\r\n            this.auditData = resp;\r\n            this.isAuditData = true;\r\n            this.dataService.setAuditLogData(this.auditData);\r\n          });\r\n      } else {\r\n        this.readorWrite=false;\r\n        this.buildItemForm({});\r\n      }\r\n    });\r\n    this.buildItemForm({});\r\n    this.fetchCurrencyPair();\r\n    this.getBranchCode();\r\n    this.loggedInUser = this.ls.getItem(\"ICUST_USER\");\r\n    console.log(this.loggedInUser);\r\n  }\r\n\r\n  buildItemForm(item) {\r\n    console.log(\"selected item 2::\", item);\r\n    console.log(\"item.rateDate\",item.rateDate)\r\n   \r\n    if(item.rateDate){\r\n      item.rateDate = item ? moment(item.rateDate).format() : \"\";\r\n    }\r\n    console.log(\"item.rateDate\",item.rateDate)\r\n    this.branchForm = this.fb.group({\r\n      currencyPairId: [item.currencyPairId || \"\", Validators.required],\r\n      branchCode: [item.branchCode || \"\", Validators.required],\r\n      rateType: [item.rateType || \"\", Validators.required],\r\n      rateDate: [item.rateDate || \"\", Validators.required],\r\n      rateSeq: [item.rateSeq || \"\", Validators.required],\r\n      buySpread: [item.buySpread || \"\", Validators.required],\r\n      sellSpread: [item.sellSpread || \"\", Validators.required],\r\n      id: [item.id || \"\"],\r\n      midRate: [item.midRate || \"\", Validators.required],\r\n      buyRate: [item.buyRate || \"\", Validators.required],\r\n      sellRate: [item.sellRate || \"\", Validators.required],\r\n      authStatus: [item.authStatus || \"\"],\r\n      isActive: [item.isActive || true],\r\n      oneTimeAuth: [item.oneTimeAuth || \"\"],\r\n      recordStatus: [item.recordStatus || \"\"],\r\n      version: [item.version || \"\"],\r\n      loggedInUser: [item.loggedInUser || \"\"],\r\n    });\r\n  }\r\n\r\n  submit() {\r\n    let startDate = this.convertDate(this.branchForm.controls.rateDate.value);\r\n    this.branchForm.value['rateDate'] = startDate;\r\n    console.log(\"Form:\", this.branchForm.value);\r\n    // if (this.branchForm.invalid) {\r\n    //   return;\r\n    // } else {\r\n      console.log(\"payload:\", this.branchForm.value);\r\n      this.branchForm.value.loggedInUser = this.loggedInUser.userName;\r\n      this.apiService.saveCurrencyPairRates(this.branchForm.value).subscribe((data) => {\r\n          console.log(\"data\", data);\r\n          if (data != null && this.isEdit == true) {\r\n            \r\n                this.snack.open(\"Data Updated!\", \"OK\", {\r\n                  duration: 4000,\r\n                  verticalPosition: \"top\",\r\n                  horizontalPosition: \"right\",\r\n                });\r\n              \r\n            this.cdr.markForCheck();\r\n          } else if (data != null || this.isEdit == true) {\r\n            // \r\n            console.log(\"data\", data);\r\n              this.snack.open(\"Data Saved!\", \"OK\", {\r\n                duration: 4000,\r\n                verticalPosition: \"top\",\r\n                horizontalPosition: \"right\",\r\n              });\r\n             \r\n            this.cdr.markForCheck();\r\n          }\r\n        });\r\n        this.router.navigate([`/maintenance/main/currencyPairRateMaintenance`]);\r\n    // }\r\n    \r\n  }\r\n  deleteRecord(operation){\r\n    Swal.fire(\r\n      {\r\n        //text: 'Unable to process' + 'Error ' + this.responseforfileupload.errorMessage + 'Do you want to Proceed??',\r\n        text: 'You are trying to '+ operation +' record.' + ' Do you want to proceed?',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        // confirmButtonText: 'PROCEED.'\r\n        cancelButtonText: 'NO',\r\n        confirmButtonText: 'YES', 'icon': 'info'\r\n      }\r\n    ).then((result => {\r\n      if(result.isConfirmed==true){\r\n        this.apiService.deleteEntity(this.auditData.pairRateId)\r\n        .subscribe(data => {\r\n          this.router.navigate([\"/maintenance/main/currencyPairRateMaintenance\"]);\r\n        },\r\n        err=>{\r\n          if (err.status == 200) {\r\n            this.snack.open('Record Deleted Successfully', 'OK', {\r\n              duration: 4000,\r\n              verticalPosition: 'top',\r\n              horizontalPosition: 'right'\r\n            });\r\n          }\r\n          this.router.navigate([\"/maintenance/main/currencyPairRateMaintenance\"]);\r\n        \r\n      })\r\n      }}))\r\n   \r\n         \r\n       \r\n  }\r\n  editRecord(){\r\n    this.readorWrite=false;\r\n  }\r\n\r\n  updateRecord(operation) {\r\n    Swal.fire(\r\n      {\r\n        //text: 'Unable to process' + 'Error ' + this.responseforfileupload.errorMessage + 'Do you want to Proceed??',\r\n        text: 'You are trying to '+ operation +' record.' + ' Do you want to proceed?',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        // confirmButtonText: 'PROCEED.'\r\n        cancelButtonText: 'NO',\r\n        confirmButtonText: 'YES', 'icon': 'info'\r\n      }\r\n    ).then((result => {\r\n      if(result.isConfirmed==true){\r\n        console.log(this.id);\r\n        let payload: any = {};\r\n        payload.id = this.id;\r\n        payload.operation = operation;\r\n        payload.loggedInUser = this.loggedInUser.userName;\r\n        this.apiService.updateAuditLogsForCurrencyPairRates(payload).subscribe((data) => {\r\n            console.log(data);\r\n            this.auditData = data;\r\n            this.dataService.setAuditLogData(this.auditData);\r\n            this.isAuditData = true;\r\n            this.dataService.sendClickEvent();\r\n            let message = \"\";\r\n            switch (operation) {\r\n              case \"open\":\r\n                message = \"opened\";\r\n                break;\r\n              case \"close\":\r\n                message = \"closed\";\r\n                break;\r\n              case \"auth\":\r\n                message = \"authorized\";\r\n                break;\r\n              default:\r\n                break;\r\n            }\r\n            this.snack.open(`Record ${message} successfully!'`, \"OK\", {\r\n              duration: 2000,\r\n              verticalPosition: \"top\",\r\n              horizontalPosition: \"right\",\r\n            });\r\n          });\r\n      }}))\r\n    \r\n  }\r\n\r\n  _keyPress(event: any) {\r\n    console.log(\"PRessed\", event);\r\n    const pattern = /[0-9]/;\r\n    let inputChar = String.fromCharCode(event.charCode);\r\n    if (!pattern.test(inputChar)) {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n  convertDate(value) {\r\n    let date = moment(value).format('YYYY-MMM-DD');\r\n    // let date = moment(value).format('YYYY-MM-DDThh:mm:ss');\r\n    console.log(\"date\", date);\r\n    if (date)\r\n      return date;\r\n  }\r\n\r\n  fetchCurrencyPair(){\r\n    this.apiService.getCurrencyPair().subscribe((resp:any) =>{\r\n     console.log(\"currencyPair\",resp);\r\n     for(let i=0; i< resp.length;i++){\r\n      if(resp[i].authStatus==\"A\" )\r\n      this.currencyPair.push(resp[i]);\r\n     }\r\n    })\r\n  }\r\n\r\n  getBranchCode(){\r\n    this.apiService.getBranchCode().subscribe(branchCodeResp=>{\r\n      console.log(branchCodeResp);\r\n      for(let i=0; i<branchCodeResp.length;i++){\r\n        if(branchCodeResp[i].authStatus==='A'){\r\n          this.branchCode.push(branchCodeResp[i]);\r\n        }\r\n      }\r\n      console.log(this.branchCode);\r\n      console.log(\"branchCode\",branchCodeResp);\r\n      // this.branchCode=branchCodeResp;\r\n    });\r\n  }\r\n\r\n  goBack() {\r\n    this.router.navigate([\"/maintenance/main/currencyPairRateMaintenance\"]);\r\n  }\r\n}\r\n","<h1 class=\"main-head\"><small class=\"small-head\">Home > Maintenance Summary > Currency Pair Rate Maintenance > <span *ngIf=\"!isEdit\">New</span> <span *ngIf=\"isEdit\">Edit</span> Currency Pair Rate</small> </h1>\r\n<div fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"mt-16\">\r\n    <button mat-icon-button (click)=\"goBack()\">\r\n        <mat-icon>arrow_back</mat-icon>\r\n    </button>\r\n    <span *ngIf=\"isEdit\" class=\"text-large\">\r\n        Edit Currency Pair Rate\r\n    </span>\r\n    <span *ngIf=\"!isEdit\" class=\"text-large\">\r\n        New Currency Pair Rate\r\n    </span>\r\n</div>\r\n\r\n<mat-card>\r\n    <mat-card-content>\r\n        <form [formGroup]=\"branchForm\" (ngSubmit)=\"submit()\" class=\"mt-32\">\r\n            <div fxLayout=\"row wrap\" fxLayout.lt-sm=\"column\">\r\n                <div fxFlex=\"33.33\" class=\"pr-16\" *ngIf=\"!readorWrite\">\r\n                    <mat-label>Currency Pair *</mat-label>\r\n                    <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                        <mat-select name=\"currencyPairId\" formControlName=\"currencyPairId\" placeholder=\"Currency Pair\">\r\n                            <mat-option *ngFor=\"let item of currencyPair\" [value]=\"item.id\">\r\n                                {{ item.id }}\r\n                            </mat-option>\r\n                        </mat-select>\r\n                        <mat-error\r\n                            *ngIf=\"branchForm?.get('currencyPairId').touched && !branchForm?.get('currencyPairId').valid\">\r\n                            Currency Pair is Required\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n                <div fxFlex=\"33.33\" class=\"pr-16\" *ngIf=\"readorWrite\">\r\n                    <mat-label>Currency Pair *</mat-label>\r\n                    <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                        <input [readonly]=\"readorWrite\" matInput name=\"rateSeq\"\r\n                        formControlName=\"currencyPairId\"\r\n                        />\r\n                    </mat-form-field>\r\n                </div>\r\n\r\n                <div fxFlex=\"33.33\" class=\"pr-16\" *ngIf=\"!readorWrite\">\r\n                    <mat-label>Branch Code *</mat-label>\r\n                    <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                        <mat-select name=\"branchCode\" formControlName=\"branchCode\" placeholder=\"Branch Code\">\r\n                            <mat-option *ngFor=\"let data of branchCode\" [value]=\"data.branchCode\">\r\n                                {{data.branchCode}}\r\n                            </mat-option>\r\n                        </mat-select>\r\n                        <mat-error *ngIf=\"branchForm?.get('branchCode').touched && !branchForm?.get('branchCode').valid\">\r\n                            Bank Code is Required\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n                <div fxFlex=\"33.33\" class=\"pr-16\" *ngIf=\"readorWrite\">\r\n                    <mat-label>Branch Code *</mat-label>\r\n                    <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                        <input [readonly]=\"readorWrite\" matInput name=\"rateSeq\"\r\n                        formControlName=\"branchCode\"\r\n                        />\r\n                    </mat-form-field>\r\n                </div>\r\n\r\n                <div fxFlex=\"33.33\" class=\"pr-16\" *ngIf=\"!readorWrite\">\r\n                    <mat-label>Rate Type *</mat-label>\r\n                    <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                        <mat-select name=\"currency\" placeholder=\"Rate Type \"  \r\n                            [formControl]=\"branchForm.controls['rateType']\" required>\r\n                            <mat-option>Select</mat-option>\r\n                            <mat-option value=\"standard\">STANDARD</mat-option>\r\n                            <mat-option value=\"cash\">CASH</mat-option>\r\n                            <mat-option value=\"walkin\">WALKIN</mat-option>\r\n                        </mat-select>\r\n                        <mat-error *ngIf=\"branchForm?.get('rateType').touched && !branchForm?.get('rateType').valid\">\r\n                            Rate Type is Required\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n                <div fxFlex=\"33.33\" class=\"pr-16\" *ngIf=\"readorWrite\">\r\n                    <mat-label>Rate Type *</mat-label>\r\n                    <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                        <input [readonly]=\"readorWrite\" matInput name=\"rateSeq\"\r\n                            [formControl]=\"branchForm.controls['rateType']\" \r\n                        />\r\n                    </mat-form-field>\r\n                </div>\r\n\r\n                <div fxFlex=\"33.33\" class=\"pr-16\">\r\n                    <mat-label>Rate Date *</mat-label>\r\n                    <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                        <input  matInput [matDatepicker]=\"appDatepicker\" \r\n                        [min]=\"minDate\" \r\n                        name=\"date\" readonly formControlName=\"rateDate\">\r\n                        <mat-datepicker-toggle matSuffix [for]=\"appDatepicker\" [disabled]=\"readorWrite\" ></mat-datepicker-toggle>\r\n                        <mat-datepicker #appDatepicker ></mat-datepicker>\r\n                        <mat-error *ngIf=\"branchForm.get('rateDate').hasError('required') && branchForm.get('rateDate').touched\">\r\n                            Rate Date is Required!\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                    \r\n                </div>\r\n  \r\n                <div fxFlex=\"33.33\" class=\"pr-16\">\r\n                    <mat-label>Rate Seq *</mat-label>\r\n                    <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                        <input [readonly]=\"readorWrite\" matInput name=\"rateSeq\" placeholder=\"Rate Seq\"\r\n                            [formControl]=\"branchForm.controls['rateSeq']\" \r\n                            (keypress)=_keyPress($event) maxlength=\"10\"\r\n                        />\r\n                        <mat-error\r\n                            *ngIf=\"branchForm?.get('rateSeq').touched && !branchForm?.get('rateSeq').valid\">\r\n                            Rate Seq is Required!\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n\r\n                <div fxFlex=\"33.33\" class=\"pr-16\">\r\n                    <mat-label>Buy Spread *</mat-label>\r\n                    <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                        <input [readonly]=\"readorWrite\" matInput name=\"buySpread\" placeholder=\"Buy Spread \"\r\n                            [formControl]=\"branchForm.controls['buySpread']\"\r\n                            (keypress)=_keyPress($event) maxlength=\"10\"\r\n                         />\r\n                        <mat-error\r\n                            *ngIf=\"branchForm?.get('buySpread').touched && !branchForm?.get('buySpread').valid\">\r\n                            Buy Spread is Required!\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n\r\n                <div fxFlex=\"33.33\" class=\"pr-16\">\r\n                    <mat-label>Sell Spread *</mat-label>\r\n                    <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                        <input [readonly]=\"readorWrite\" matInput name=\"sellSpread\" placeholder=\"Sell Spread \"\r\n                            [formControl]=\"branchForm.controls['sellSpread']\"\r\n                            (keypress)=_keyPress($event) maxlength=\"10\"\r\n                        />\r\n                        <mat-error\r\n                            *ngIf=\"branchForm?.get('sellSpread').touched && !branchForm?.get('sellSpread').valid\">\r\n                            Sell Spread  is Required!\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n\r\n                <div fxFlex=\"33.33\" class=\"pr-16\">\r\n                    <mat-label>Mid Rate *</mat-label>\r\n                    <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                        <input [readonly]=\"readorWrite\" matInput name=\"midRate\" placeholder=\"Mid Rate\"\r\n                            [formControl]=\"branchForm.controls['midRate']\" \r\n                            (keypress)=_keyPress($event) maxlength=\"10\"\r\n                        />\r\n                        <mat-error\r\n                            *ngIf=\"branchForm?.get('midRate').touched && !branchForm?.get('midRate').valid\">\r\n                            Mid Rate is Required!\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n\r\n                <div fxFlex=\"33.33\" class=\"pr-16\">\r\n                    <mat-label>Buy Rate *</mat-label>\r\n                    <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                        <input [readonly]=\"readorWrite\" matInput name=\"buyRate\" placeholder=\"Buy Rate\"\r\n                            [formControl]=\"branchForm.controls['buyRate']\" \r\n                            (keypress)=_keyPress($event) maxlength=\"10\"\r\n                        />\r\n                        <mat-error\r\n                            *ngIf=\"branchForm?.get('buyRate').touched && !branchForm?.get('buyRate').valid\">\r\n                            Buy Rate is Required!\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n\r\n                <div fxFlex=\"33.33\" class=\"pr-16\">\r\n                    <mat-label>Sell Rate *</mat-label>\r\n                    <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                        <input matInput name=\"sellRate\" placeholder=\"Sell Rate\"\r\n                            [formControl]=\"branchForm.controls['sellRate']\" \r\n                            (keypress)=_keyPress($event) maxlength=\"10\" [readonly]=\"readorWrite\"\r\n                        />\r\n                        <mat-error\r\n                            *ngIf=\"branchForm?.get('sellRate').touched && !branchForm?.get('sellRate').valid\">\r\n                            Sell Rate is Required!\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n            </div>\r\n\r\n            <div fxLayout=\"row wrap\" fxLayout.lt-sm=\"column\">\r\n                <div fxFlex=\"100\" class=\"mt-16\" fxLayoutAlign=\"end center\" fxLayoutGap=\"10px\">\r\n                    <div>\r\n                        <button *ngIf=\"!isEdit\" mat-raised-button color=\"primary\"\r\n                            [disabled]=\"!(branchForm.valid && branchForm.dirty)\" (click)=\"submit()\">\r\n                            Save\r\n                        </button>\r\n                    </div>\r\n                    <div [hidden]=\"readorWrite\">\r\n                        <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\"\r\n                            (click)=\"submit(branchForm.value)\" [disabled]=\"!branchForm.valid\">\r\n                            Save\r\n                        </button>\r\n                    </div>\r\n                    <div [hidden]=\"!readorWrite || auditData?.recordStatus == 'Close'\">\r\n                        <button *ngIf=\"isEdit\" type=\"button\"  mat-raised-button color=\"primary\" (click)=\"editRecord()\">\r\n                          Edit\r\n                        </button>&nbsp;&nbsp;\r\n                      </div>\r\n                      <div *ngIf=\"auditData?.authStatus == 'Unauthorized' && readorWrite\" [hidden]=\"!readorWrite\">\r\n                        <button *ngIf=\"isEdit\" type=\"button\"  mat-raised-button color=\"primary\" (click)=\"updateRecord('auth')\">\r\n                          Authorize\r\n                        </button>&nbsp;&nbsp;\r\n                      </div> \r\n                      <div *ngIf=\"auditData?.recordStatus == 'Close' && auditData?.oneTimeAuth != 'No'\" [hidden]=\"!readorWrite\">\r\n                        <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"updateRecord('open')\">\r\n                          Reopen\r\n                        </button>&nbsp;&nbsp;\r\n                      </div>\r\n                      <div *ngIf=\"auditData?.recordStatus == 'Open' && auditData?.oneTimeAuth != 'No'\" [hidden]=\"!readorWrite\">\r\n                        <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"updateRecord('close')\">\r\n                          Close\r\n                        </button>&nbsp;&nbsp;\r\n                      </div>\r\n                      <div *ngIf=\"auditData?.oneTimeAuth == 'No'\" [hidden]=\"!readorWrite\">\r\n                        <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"deleteRecord('delete')\">\r\n                          Delete\r\n                        </button> &nbsp;&nbsp;\r\n                      </div>\r\n                     \r\n                      <button\r\n                        mat-raised-button\r\n                        color=\"warn\"\r\n                        type=\"button\"\r\n                        (click)=\"goBack()\"\r\n                      >\r\n                        Exit\r\n                      </button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    </mat-card-content>\r\n</mat-card>\r\n\r\n<div class=\"mt-32\">\r\n    <app-audit-log *ngIf=\"isAuditData\" #auditLog></app-audit-log>\r\n</div>","import { Component, OnInit } from \"@angular/core\";\r\nimport { MatDialog, MatDialogRef } from \"@angular/material/dialog\";\r\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\r\nimport { rumangoAnimations } from \"app/shared/animations/rumango-animations\";\r\nimport { ApiService } from \"app/shared/services/api.service\";\r\nimport { AppConfirmService } from \"app/shared/services/app-confirm/app-confirm.service\";\r\nimport { AppLoaderService } from \"app/shared/services/app-loader/app-loader.service\";\r\nimport { Subscription } from \"rxjs\";\r\nimport { TransactionDenominationHistoryComponent } from \"../transaction-denomination-history/transaction-denomination-history.component\";\r\n\r\n@Component({\r\n  selector: 'app-transaction-denomination-summary',\r\n  templateUrl: './transaction-denomination-summary.component.html',\r\n  styleUrls: ['./transaction-denomination-summary.component.scss'],\r\n  animations:rumangoAnimations\r\n})\r\nexport class TransactionDenominationSummaryComponent implements OnInit {\r\n\r\n  public items: any[];\r\n  public getItemSub: Subscription;\r\n  users: any[] = [];\r\n  currency: string[] = [];\r\n  till: string[] = [];\r\n  branchCode: string[] = [];\r\n  bankCode: string[] = [];\r\n  constructor(\r\n    private dialog: MatDialog,\r\n    private snack: MatSnackBar,\r\n    private confirmService: AppConfirmService,\r\n    private loader: AppLoaderService,\r\n    private apiService: ApiService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.getItems();\r\n    this.getTransactionDenomination();\r\n    this.getCurrency();\r\n    this.getBankCode();\r\n    this.getBranchCode();\r\n    this.getTillId();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.getItemSub) {\r\n      this.getItemSub.unsubscribe();\r\n    }\r\n  }\r\n  getItems() {\r\n    this.items = this.users;\r\n  }\r\n\r\n  openPopUp(data: any = {}, isNew?) {\r\n    let title = isNew\r\n      ? \"Add New Transaction Denomination\"\r\n      : \"Update Transaction Denomination\";\r\n    let dialogRef: MatDialogRef<any> = this.dialog.open(\r\n      TransactionDenominationHistoryComponent,\r\n      {\r\n        width: \"720px\",\r\n        disableClose: true,\r\n        data: {\r\n          title: title,\r\n          payload: data,\r\n          currency: this.currency,\r\n          till: this.till,\r\n          branchCode: this.branchCode,\r\n          bankCode: this.bankCode,\r\n        },\r\n      }\r\n    );\r\n    dialogRef.afterClosed().subscribe((res) => {\r\n      if (!res) {\r\n        return;\r\n      }\r\n      this.loader.open();\r\n      if (isNew) {\r\n        this.apiService.saveoftransDenom(res).subscribe((resp) => {\r\n          this.loader.close();\r\n          this.getTransactionDenomination();\r\n          this.snack.open(`Record Added!'`, \"OK\", {\r\n            duration: 2000,\r\n            verticalPosition: \"top\",\r\n            horizontalPosition: \"right\",\r\n          });\r\n        });\r\n      } else {\r\n        this.apiService.saveoftransDenom(res).subscribe((resp) => {\r\n          this.getTransactionDenomination();\r\n          this.loader.close();\r\n          this.snack.open(`Record Updated!'`, \"OK\", {\r\n            duration: 2000,\r\n            verticalPosition: \"top\",\r\n            horizontalPosition: \"right\",\r\n          });\r\n        });\r\n      }\r\n    });\r\n  }\r\n  deleteItem(row) {\r\n    this.confirmService\r\n      .confirm({ message: `Delete ${row.txtReference}?` })\r\n      .subscribe((res) => {\r\n        if (res) {\r\n          this.loader.open();\r\n          this.apiService.deleteTransactionDenomination(row.id).subscribe(\r\n            (data) => {},\r\n            (err) => {\r\n              if (err.status === 200) {\r\n                this.getTransactionDenomination();\r\n                this.loader.close();\r\n                this.snack.open(`Record Deleted!'`, \"OK\", {\r\n                  duration: 2000,\r\n                  verticalPosition: \"top\",\r\n                  horizontalPosition: \"right\",\r\n                });\r\n              }\r\n            }\r\n          );\r\n        }\r\n      });\r\n  }\r\n  getTransactionDenomination() {\r\n    this.apiService.getTransactionDenomination().subscribe((resp) => {\r\n      this.users = resp;\r\n      this.items = this.users;\r\n    });\r\n  }\r\n  getCurrency() {\r\n    this.apiService.getCountryValues().subscribe((resp) => {\r\n      this.currency = resp;\r\n    });\r\n  }\r\n  getBankCode() {\r\n    this.apiService.getBankCode().subscribe((resp) => {\r\n      this.bankCode = resp;\r\n    });\r\n  }\r\n  getBranchCode() {\r\n    this.apiService.getBranchCode().subscribe((resp) => {\r\n      this.branchCode = resp;\r\n    });\r\n  }\r\n  getTillId() {\r\n    this.apiService.getTillId().subscribe((resp) => {\r\n      this.till = resp;\r\n    });\r\n  }\r\n}\r\n","<div fxLayout=\"row\" fxLayoutAlign=\"space-arround center\" class=\"ml-16\">\r\n    <span class=\"mat-heading-label \">Transaction Denomination History</span>\r\n    <span fxFlex></span>\r\n    <button mat-flat-button color=\"primary\" (click)=\"openPopUp({}, true)\" class=\"mr-38\">ADD TRANSACTION DENOMINATION</button>\r\n  </div>\r\n  <mat-card class=\"p-0\" [@animate]=\"{value:'*',params:{y:'50px',delay:'300ms'}}\"> \r\n    <mat-card-content class=\"p-0\">\r\n      <ngx-datatable\r\n            class=\"material ml-0 mr-0\"\r\n            [rows]=\"items\"\r\n            [columnMode]=\"'force'\"\r\n            [headerHeight]=\"50\"\r\n            [footerHeight]=\"50\"\r\n            [scrollbarH]=\"true\"\r\n            [limit]=\"6\"\r\n            [rowHeight]=\"50\">\r\n            <ngx-datatable-column name=\"Transaction Referance\" [flexGrow]=\"1\">\r\n              <ng-template let-row=\"row\" ngx-datatable-cell-template>\r\n                {{ row?.txtReference}}\r\n              </ng-template>\r\n            </ngx-datatable-column>\r\n            <ngx-datatable-column name=\"Denomination Code\" [flexGrow]=\"1\">\r\n                <ng-template let-row=\"row\" ngx-datatable-cell-template>\r\n                  {{ row?.denomCode}}\r\n                </ng-template>\r\n              </ngx-datatable-column>\r\n              <ngx-datatable-column name=\"Denomination Unit\" [flexGrow]=\"1\">\r\n                <ng-template let-row=\"row\" ngx-datatable-cell-template>\r\n                  {{ row?.denomUnit}}\r\n                </ng-template>\r\n              </ngx-datatable-column>\r\n            <ngx-datatable-column name=\"Status\" [flexGrow]=\"1\">\r\n              <ng-template let-row=\"row\" ngx-datatable-cell-template>\r\n                <mat-chip mat-sm-chip [color]=\"'primary'\" [selected]=\"row.isActive\">{{row.isActive ? 'active' : 'inactive'}}</mat-chip>\r\n              </ng-template>\r\n            </ngx-datatable-column>\r\n            <ngx-datatable-column name=\"Actions\" [flexGrow]=\"1\">\r\n              <ng-template let-row=\"row\" ngx-datatable-cell-template>\r\n                <button mat-icon-button mat-sm-button color=\"primary\" class=\"mr-16\" (click)=\"openPopUp(row)\"><mat-icon>edit</mat-icon></button>\r\n                <button mat-icon-button mat-sm-button color=\"warn\" (click)=\"deleteItem(row)\"><mat-icon>delete</mat-icon></button>\r\n              </ng-template>\r\n            </ngx-datatable-column>\r\n          </ngx-datatable>\r\n    </mat-card-content>\r\n  </mat-card>\r\n","import { LiveAnnouncer } from '@angular/cdk/a11y';\r\nimport { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MatSort, Sort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { Router } from '@angular/router';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { AppConfirmService } from 'app/shared/services/app-confirm/app-confirm.service';\r\nimport { DownloadService } from 'app/shared/services/download.service';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-user-maintenance',\r\n  templateUrl: './user-maintenance.component.html',\r\n  styleUrls: ['./user-maintenance.component.scss']\r\n})\r\nexport class UserMaintenanceComponent implements OnInit {\r\n  @ViewChild('searchVal') searchVal: ElementRef;\r\n  selectedFilterIndex : number = 0;\r\n  dataSource = new MatTableDataSource();\r\n  displayedColumns: string[] = ['userId', 'userName','roleId', 'authStatus','recordStatus', 'action'];\r\n\r\n  filterByOption: { key: string, value: string }[] = [\r\n    { key: 'userName', value: ' User Name' }\r\n  ];\r\n\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  public items: any[];\r\n  public userData: any[];\r\n  public getItemSub: Subscription;\r\n  users: any[];\r\n\r\n  constructor(private snack: MatSnackBar,\r\n    private confirmService: AppConfirmService,\r\n    private apiService: ApiService,\r\n    private router:Router,\r\n    private _liveAnnouncer: LiveAnnouncer) { }\r\n\r\n  ngOnInit(): void {\r\n    this.fetchUserInfo();\r\n  }\r\n  fetchUserInfo(){\r\n    this.apiService.getUserInfo().subscribe((data: any) => {\r\n      for(let i=0;i<data.length;i++){\r\n\r\n        if(data[i].authStatus == 'U'){\r\n          data[i].authStatus = 'Unauthorized'\r\n        }\r\n        if(data[i].authStatus == 'A') {\r\n          data[i].authStatus = 'Authorized'\r\n        } \r\n        if(data[i].recordStatus == 'O'){\r\n          data[i].recordStatus = 'Open'\r\n        } \r\n        if(data[i].recordStatus == 'C'){\r\n          data[i].recordStatus = 'Closed'\r\n        }\r\n\r\n      }\r\n      this.users = data;\r\n      this.items = this.users;\r\n      this.dataSource = new MatTableDataSource(data);\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    });\r\n  }\r\n  addNew(){\r\n    this.router.navigate([\"/maintenance/main/userMaintenance/addUserMaintenance\"]);\r\n  }\r\n  doFilter(filterBy, e){\r\n    this.filterTable(filterBy);\r\n    this.applyFilter(e);\r\n  }\r\n  filterTable(filterBy) {\r\n    this.dataSource.filterPredicate = (data: any, filter: string): boolean => {\r\n      return (\r\n        data[filterBy]?.toLocaleLowerCase().includes(filter)\r\n      )\r\n    }\r\n  }\r\n  clearFilter(){\r\n    this.dataSource.filter = '';\r\n    this.searchVal.nativeElement.value = '';\r\n    this.selectedFilterIndex = 0;\r\n   }\r\n   applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n  announceSortChange(sortState: Sort) {\r\n    if (sortState.direction) {\r\n      this._liveAnnouncer.announce(`Sorted ${sortState.direction}ending`);\r\n    } else {\r\n      this._liveAnnouncer.announce('Sorting cleared');\r\n    }\r\n    \r\n  }\r\n  deleteItem(element) {\r\n    this.confirmService.confirm({message: `Delete ${element.userName}?`})\r\n      .subscribe(res => {\r\n        if (res) {\r\n          this.apiService.deleteUserById(element.userId)\r\n            .subscribe(data => {\r\n            },\r\n              err=>{\r\n                if (err.status == 200) {\r\n                  this.snack.open('Record Deleted Successfully', 'OK', {\r\n                    duration: 4000,\r\n                    verticalPosition: 'top',\r\n                    horizontalPosition: 'right'\r\n                  });\r\n                }\r\n      \r\n              \r\n              this.fetchUserInfo();\r\n              \r\n            })\r\n        }\r\n        \r\n      });\r\n  }\r\n  openEdit(data: any = {},isEdit : string) {\r\n    this.router.navigate([\"/maintenance/main/userMaintenance/addUserMaintenance\"],{ queryParams: { id: data.userId, isEdit : isEdit } });\r\n  }\r\n  goBack(){\r\n    this.router.navigate([\"/maintenance/main\"]);\r\n  }\r\n  \r\n\r\n}\r\n","<!-- <div fxLayoutAlign=\"center\">\r\n    <mat-spinner ></mat-spinner>\r\n  </div> -->\r\n  <h1 class=\"main-head\"><small class=\"small-head\">Home > Maintenance Summary > User Maintenance  \r\n    </small></h1>\r\n  <div fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"mt-24\">\r\n    <button mat-icon-button >\r\n      <mat-icon (click)=\"goBack()\">arrow_back</mat-icon>\r\n    </button>\r\n    <span class=\"text-large\">\r\n      User Maintenance\r\n    </span>\r\n    <span fxFlex></span>\r\n    <button mat-icon-button [matMenuTriggerFor]=\"menu\">\r\n      <mat-icon>more_vert</mat-icon>\r\n    </button>\r\n    <mat-menu #menu=\"matMenu\">\r\n      <button mat-menu-item>\r\n        <span>Export</span>\r\n      </button>\r\n      <button  mat-menu-item>\r\n        <span>Download</span>\r\n      </button>\r\n    </mat-menu>\r\n  </div>\r\n  <mat-card class=\"mt-32\">\r\n\r\n    <table>\r\n      <tr>\r\n        <td>\r\n          <h2>\r\n            User Maintenance \r\n          </h2>\r\n        </td>\r\n      </tr>\r\n      <tr>\r\n        <td>\r\n          <div class=\"highlight\">\r\n          </div>\r\n        </td>\r\n      </tr>\r\n    </table>\r\n  \r\n    <mat-card-content>\r\n      <div fxLayout=\"row\" class=\"w-full\"  fxLayoutAlign=\"space-arround center\" class=\"ml-16 mt-32\">\r\n        <div class=\"w-full\" fxLayout=\"row\" fxLayoutGap='20px'>\r\n          <div>\r\n            <mat-form-field appearance=\"outline\">\r\n              <mat-label>Filter By</mat-label>\r\n              <mat-select name=\"filterBy\" #filterBy [(ngModel)]=\"selectedFilterIndex\" placeholder=\"Filter By\">\r\n                <!-- <mat-select name=\"filterBy\" #filterBy [(ngModel)]=\"selectedFilterIndex\"> -->\r\n                <mat-option value=\"0\">Select</mat-option>\r\n                <mat-option *ngFor=\"let filter of filterByOption\" value=\"{{filter.key}}\">\r\n                  {{filter.value}}\r\n                </mat-option>\r\n              </mat-select>\r\n            </mat-form-field>\r\n          </div>\r\n          <div>\r\n            <mat-form-field appearance=\"outline\">\r\n              <mat-label>Search</mat-label>\r\n              <input matInput #searchVal (keyup)=\"doFilter(filterBy.value,$event)\" placeholder=\"Search\">\r\n              <!-- <input matInput #searchVal (keyup)=\"doFilter(filterBy.value,$event)\"> -->\r\n              <mat-icon matSuffix>search</mat-icon>\r\n            </mat-form-field>\r\n          </div>\r\n          <div *ngIf=\"searchVal.value || filterBy.value\" class=\"resetDiv\">\r\n            <button mat-stroked-button class=\"clearBtn\" (click)=\"clearFilter()\">RESET\r\n            </button>\r\n          </div>\r\n          <div class=\"filterDiv\">\r\n           <button mat-flat-button color=\"primary\" class=\"addNewBtn\" (click)=\"addNew()\" >ADD NEW\r\n           </button>\r\n         </div>\r\n       </div>\r\n      </div>\r\n      <div class=\"mat-elevation-z0\">\r\n        <mat-table class=\"w-full\" [dataSource]=\"dataSource\" matSort (matSortChange)=\"announceSortChange($event)\">\r\n          <ng-container matColumnDef=\"userId\">\r\n            <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by User ID\"> User ID\r\n              \r\n            </mat-header-cell>\r\n            <mat-cell *matCellDef=\"let element\"> {{element.userId}} </mat-cell>\r\n          </ng-container>\r\n  \r\n          <ng-container matColumnDef=\"userName\">\r\n            <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by User Name\"> User Name\r\n            </mat-header-cell>\r\n            <mat-cell *matCellDef=\"let element\"> {{element.userName}} </mat-cell>\r\n          </ng-container>\r\n  \r\n          <ng-container matColumnDef=\"email\">\r\n            <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Email\"> Email\r\n              \r\n            </mat-header-cell>\r\n            <mat-cell *matCellDef=\"let element\"> {{element.email}} </mat-cell>\r\n          </ng-container>\r\n          <ng-container matColumnDef=\"mobile\">\r\n            <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Mobile\"> Mobile\r\n              \r\n            </mat-header-cell>\r\n            <mat-cell *matCellDef=\"let element\"> {{element.mobile}} </mat-cell>\r\n          </ng-container>\r\n          <ng-container matColumnDef=\"roleId\">\r\n            <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Role Id\"> Role ID\r\n              \r\n            </mat-header-cell>\r\n            <mat-cell *matCellDef=\"let element\"> {{element.roleId}} </mat-cell>\r\n          </ng-container>\r\n         \r\n          <ng-container matColumnDef=\"firstName\">\r\n            <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by First Name\"> First Name\r\n              \r\n            </mat-header-cell>\r\n            <mat-cell *matCellDef=\"let element\"> {{element.firstName}} </mat-cell>\r\n          </ng-container>\r\n          <ng-container matColumnDef=\"lastName\">\r\n            <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Last Name\"> Last Name\r\n              \r\n            </mat-header-cell>\r\n            <mat-cell *matCellDef=\"let element\"> {{element.lastName}} </mat-cell>\r\n          </ng-container>\r\n          <ng-container matColumnDef=\"language\">\r\n            <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Language\"> Language\r\n              \r\n            </mat-header-cell>\r\n            <mat-cell *matCellDef=\"let element\"> {{element.language}} </mat-cell>\r\n          </ng-container>\r\n          <ng-container matColumnDef=\"authStatus\">\r\n            <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Auth Status\"> Auth Status\r\n            </mat-header-cell>\r\n            <mat-cell *matCellDef=\"let element\"> {{element.authStatus}} </mat-cell>\r\n          </ng-container>\r\n          <ng-container matColumnDef=\"recordStatus\">\r\n            <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Record Status\"> Record Status\r\n            </mat-header-cell>\r\n            <mat-cell *matCellDef=\"let element\"> {{element.recordStatus}} </mat-cell>\r\n          </ng-container>\r\n          \r\n  \r\n  \r\n          <ng-container matColumnDef=\"action\">\r\n            <mat-header-cell *matHeaderCellDef>Action</mat-header-cell>\r\n            <mat-cell *matCellDef=\"let element\">\r\n              <div>\r\n               <mat-icon class=\"actionIcons\" matTooltip=\"Edit\" (click)=\"openEdit(element)\" >edit</mat-icon>\r\n            </div>&nbsp;&nbsp;&nbsp;&nbsp;\r\n            <div>\r\n             <mat-icon class=\"actionIcons\" matTooltip=\"Delete\" (click)=\"deleteItem(element)\" >delete</mat-icon>\r\n            </div>\r\n            </mat-cell>\r\n          </ng-container>\r\n  \r\n          <mat-header-row *matHeaderRowDef=\"displayedColumns;\"></mat-header-row>\r\n          <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\r\n        </mat-table>\r\n        <mat-paginator class=\"mt-16\" [pageSizeOptions]=\"[5, 10, 20]\" aria-label=\"Select page of users\"></mat-paginator>\r\n      </div>\r\n    </mat-card-content>\r\n  </mat-card>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Location } from '@angular/common';\r\nimport { DataService } from 'app/shared/services/data.service';\r\n\r\n@Component({\r\n  selector: 'app-sub-menu',\r\n  templateUrl: './sub-menu.component.html',\r\n  styleUrls: ['./sub-menu.component.scss']\r\n})\r\nexport class SubMenuComponent implements OnInit {\r\n  submenus: any\r\n  constructor(private dataService: DataService, private _location: Location ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.dataService.getMenus.subscribe((data:any) => {\r\n      this.submenus = data;\r\n    })\r\n  }\r\n\r\n  back() {\r\n    this._location.back();\r\n  }\r\n\r\n}\r\n","<div class=\"content\">\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"mt-24\">\r\n        <button mat-icon-button (click)=\"back()\">\r\n            <mat-icon>arrow_back</mat-icon>\r\n          </button> \r\n          <span class=\"text-large\">\r\n            {{ submenus.screenName }}\r\n          </span>\r\n          <span fxFlex></span>\r\n       </div>\r\n</div>\r\n\r\n   <div fxLayout=\"row wrap\" class=\"mt-32\">\r\n     <div fxFlex=\"50\" *ngFor=\"let menu of submenus.sub\">\r\n     \r\n        <mat-card (click)=\"navigateToScreen(menu)\">\r\n            <div fxLayout=\"row\" fxLayoutGap=\"5px\" fxLayoutAlign=\"space-around center\">\r\n                <div fxFlex=\"65\">\r\n                    <mat-card-content>\r\n                        <h2 class=\"\">{{ menu.screenName }}</h2>\r\n                        <span class=\"card-text-label\">{{ 'This covers ordination product details. Product preferances, Intrest Charges and additionalattributes.' }}</span>\r\n                      </mat-card-content>\r\n                    \r\n                </div>\r\n                <div fxFlex=\"30\" style=\"text-align: right;\">\r\n                    <img class=\"image\" width=\"100\" height=\"100\" src=\"assets/images/funding.png\" alt=\"photo\">\r\n                </div>\r\n            </div>\r\n\r\n          </mat-card>\r\n    \r\n     </div>\r\n     \r\n   \r\n  </div>\r\n\r\n    <!-- <div fxLayout=\"row wrap\" class=\"mt-32\">\r\n        <div fxFlex=\"50\" *ngFor=\"let card of obs | async\">\r\n            <mat-card (click)=\"navigateToScreen(card.state)\">\r\n                <div fxLayout=\"row\" fxLayoutGap=\"5px\" fxLayoutAlign=\"space-around center\">\r\n                    <div fxFlex=\"65\">\r\n                        <mat-card-content>\r\n                            <h2 class=\"\">{{ card.title }}</h2>\r\n                            <span class=\"card-text-label\">{{ card.text }}</span>\r\n                          </mat-card-content>\r\n                        \r\n                    </div>\r\n                    <div fxFlex=\"30\" style=\"text-align: right;\">\r\n                        <img class=\"image\" width=\"100\" height=\"100\" src=\"assets/images/funding.png\" alt=\"photo\">\r\n                    </div>\r\n                </div>\r\n\r\n              </mat-card>\r\n        </div>\r\n  </div> -->","import { ChangeDetectorRef, Component, Inject, OnInit, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { TillVaultMasterSummaryComponent } from '../../till-vault-master-summary/till-vault-master-summary/till-vault-master-summary.component';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\r\nimport { DataService } from 'app/shared/services/data.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { AuditLogComponent } from 'app/views/maintenance/audit-log/audit-log.component';\r\nimport { tillVaultMaster } from 'app/shared/models/tillvaultmaster';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-till-vault-master-popup',\r\n  templateUrl: './till-vault-master-popup.component.html',\r\n  styleUrls: ['./till-vault-master-popup.component.scss']\r\n})\r\nexport class TillVaultMasterPopupComponent implements OnInit {\r\n  @ViewChild('auditLog') auditLog : AuditLogComponent\r\n  public itemForm: FormGroup;\r\n  tillVaultForm:FormGroup;\r\n  isReadOnly: boolean = true;\r\n  isEdit: boolean = false;\r\n  isView: boolean = true;\r\n  show = false;\r\n  editNow : boolean = false;\r\n  entityIsEdit: boolean;\r\n  entityCode: any;\r\n  id: number;\r\n  data:any;\r\n  bankCode: any;\r\n  entity: any;\r\n  loggedInUser : any;\r\n  auditData : any;\r\n  isAuditData : boolean = false;\r\n  readorWrite: boolean=true;\r\n\r\n\r\n  constructor(\r\n    // @Inject(MAT_DIALOG_DATA) public data: any,\r\n    // public dialogRef: MatDialogRef<TillVaultMasterSummaryComponent>,\r\n     private router:Router, private snack: MatSnackBar,\r\n    private fb: FormBuilder,private api:ApiService, private route : ActivatedRoute,\r\n      private cdr: ChangeDetectorRef, private dataService : DataService,    private ls : LocalStoreService,\r\n      private apiService:ApiService,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.getEntityDropdown();\r\n    this.getBankCode();\r\n    this.buildItemForm({});\r\n    \r\n\r\n    this.route.queryParamMap.subscribe((params: any) => {\r\n      this.entityIsEdit = params.get('isEdit');//save\r\n      if(params.get('isEdit') == 'Yes'){\r\n         this.isReadOnly = false;\r\n       this.isView= true;\r\n       this.editNow = true;\r\n      }\r\n      else if(params.get('isEdit') == 'No'){\r\n         this.isReadOnly = true;\r\n         this.isView= true;\r\n        this.editNow = false;\r\n      }\r\n      else if(params.get('isEdit') == 'false'){\r\n        this.isReadOnly = false;\r\n        this.isView= false;\r\n        this.editNow = false;\r\n      }\r\n      else if(params.get('isEdit') == null){\r\n      this.isView= false;\r\n      }\r\n      if(params.get('id')){\r\n        this.isEdit = true;\r\n        this.id = params.get('id');\r\n        this.api.editEntityById(params.get('id')).subscribe((resp) =>{\r\n           this.buildItemForm(resp);\r\n        });\r\n        this.api.getTillVaultById(params.get('id')).subscribe((resp:any) =>{\r\n          this.buildItemForm(resp);\r\n          if( resp.authStatus==\"U\" ){\r\n            resp.authDate =\"\"\r\n            resp.authBy=\"\"\r\n          }\r\n          this.auditData = resp;\r\n          this.isAuditData = true;\r\n          this.dataService.setAuditLogData(this.auditData);\r\n       });\r\n      }\r\n      else{\r\n        this.readorWrite=false;\r\n        this.buildItemForm({});\r\n      }\r\n\r\n    }\r\n\r\n    ); \r\n   \r\n    this.loggedInUser = this.ls.getItem('ICUST_USER').userName;\r\n   \r\n\r\n  }\r\n \r\n  buildItemForm(item) {\r\n    this.itemForm = this.fb.group({\r\n      authStatus: [item.authStatus || ''],\r\n      bankCode: [item.bankCode || '',[Validators.required]],\r\n      tillVaultCode:[item.tillVaultCode || '',[Validators.required]],\r\n      entityCode:[item.entityCode || '',[Validators.required]], \r\n      tillVaultDesc:[item.tillVaultDesc || '',[Validators.required]],\r\n      isActive:[item.isActive || true],\r\n      tillOrVault:[item.tillOrVault || '',[Validators.required]],\r\n      id: [item.id || ''],\r\n      oneTimeAuth:[item.oneTimeAuth || ''],\r\n      recordStatus:[item.recordStatus || ''],\r\n      version:[item.version || ''],\r\n      primaryVault:[item.primaryVault || '',[Validators.required]],\r\n      loggedInUser:[item.loggedInUser || '']\r\n  \r\n    });\r\n    // this.itemForm.get('entityCode').setValue(this.entityCode);\r\n  \r\n  }\r\n\r\n  goBack() {\r\n    this.router.navigate([`/maintenance/main/tillVaultltMaster`]);\r\n  }\r\n  deleteRecord(operation){\r\n    Swal.fire(\r\n      {\r\n        //text: 'Unable to process' + 'Error ' + this.responseforfileupload.errorMessage + 'Do you want to Proceed??',\r\n        text: 'You are trying to '+ operation +' record.' + ' Do you want to proceed?',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        // confirmButtonText: 'PROCEED.'\r\n        cancelButtonText: 'NO',\r\n        confirmButtonText: 'YES', 'icon': 'info'\r\n      }\r\n    ).then((result => {\r\n      if(result.isConfirmed==true){\r\n        this.apiService.deleteTillVaultMaster(this.auditData.id)\r\n        .subscribe(data => {\r\n          this.router.navigate([`/maintenance/main/tillVaultltMaster`]);\r\n        },\r\n        err=>{\r\n          if (err.status == 200) {\r\n            this.snack.open('Record Deleted Successfully', 'OK', {\r\n              duration: 4000,\r\n              verticalPosition: 'top',\r\n              horizontalPosition: 'right'\r\n            });\r\n          }\r\n          this.router.navigate([`/maintenance/main/tillVaultltMaster`]);\r\n        \r\n      })\r\n      }}))\r\n   \r\n         \r\n       \r\n  }\r\n  editRecord(){\r\n    this.readorWrite=false;\r\n  }\r\n\r\n  updateRecord(operation) {\r\n    Swal.fire(\r\n      {\r\n        //text: 'Unable to process' + 'Error ' + this.responseforfileupload.errorMessage + 'Do you want to Proceed??',\r\n        text: 'You are trying to '+ operation +' record.' + ' Do you want to proceed?',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        // confirmButtonText: 'PROCEED.'\r\n        cancelButtonText: 'NO',\r\n        confirmButtonText: 'YES', 'icon': 'info'\r\n      }\r\n    ).then((result => {\r\n      if(result.isConfirmed==true){\r\n        let payload: any = {};\r\n    payload.id = this.id;\r\n    payload.operation = operation;\r\n    payload.loggedInUser = this.loggedInUser;\r\n    this.apiService.getAuditLogsFortillvaultMaster(payload).subscribe((data) => {         \r\n      if( data.authStatus==\"U\" ){\r\n      data.authDate = \"\"\r\n      data.authBy = \"\"\r\n      }\r\n\r\n      this.auditData = data;\r\n      this.dataService.setAuditLogData(this.auditData);\r\n      this.isAuditData = true;\r\n      this.dataService.sendClickEvent();\r\n      let message = '';\r\n      switch (operation) {\r\n        case 'open':\r\n          message = 'opened'\r\n          break;\r\n        case 'close':\r\n          message = 'closed'\r\n          break;\r\n        case 'auth':\r\n          message = 'authorized'\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n      this.snack.open(`Record ${message} successfully!'`, \"OK\", {\r\n        duration: 2000,\r\n        verticalPosition: \"top\",\r\n        horizontalPosition: \"right\",\r\n      });\r\n    });\r\n      }}))\r\n    \r\n  }\r\n  \r\n  submit() {\r\n    if(this.itemForm.invalid){\r\n    return;\r\n    }else{\r\n    this.itemForm.value.loggedInUser = this.loggedInUser;\r\n    this.api.saveTillVaultMaster(this.itemForm.value).subscribe(data => {\r\n      if(data != null && this.isEdit == true){\r\n        this.router.navigate([`/maintenance/main/tillVaultltMaster`]).then(_=>{\r\n                this.snack.open('Data Updated!', 'OK', \r\n                { duration: 4000 , \r\n                  verticalPosition: \"top\",\r\n                  horizontalPosition: \"right\",});\r\n                });       \r\n        this.cdr.markForCheck();\r\n      }\r\n      else if(data != null || this.isEdit == true){\r\n       // \r\n        this.router.navigate([`/maintenance/main/tillVaultltMaster`]).then(_=>{\r\n          this.snack.open('Data Saved!', 'OK', \r\n          { duration: 4000 , \r\n            verticalPosition: \"top\",\r\n            horizontalPosition: \"right\",});\r\n          });\r\n        this.cdr.markForCheck();\r\n       }\r\n    }) \r\n    }  \r\n  }\r\n\r\n  getEntityDropdown(){\r\n    this.api.getEntityDropdown().subscribe((data) => {\r\n      this.entityCode = data;\r\n    });\r\n    \r\n  }\r\n  getBankCode(){\r\n    this.api.getBankCode().subscribe(( bankCode: any)=> {\r\n      this.bankCode=bankCode;\r\n      });\r\n  }\r\n\r\n  getEntityCode() {\r\n    this.api.getEntityCode().subscribe((resp) => {\r\n      this.entity = resp;\r\n    });\r\n  }\r\n \r\n  _keyPress(event: any) {\r\n    const pattern = /[0-9]/;\r\n    let inputChar = String.fromCharCode(event.charCode);\r\n    if (!pattern.test(inputChar)) {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n  keyPressAlphanumeric(event) {\r\n    var inp = String.fromCharCode(event.keyCode);\r\n    if (/[0-9a-zA-Z]/.test(inp)) {\r\n      return true;\r\n    } else {\r\n      event.preventDefault();\r\n      return false;\r\n    }\r\n  }\r\n  dataByEntity(index,entityC){\r\n    return entityC.entityCode;\r\n  }\r\n  dataByBank(index,bankC){\r\n    return bankC.bankCode;\r\n  }\r\n\r\n}\r\n","<h1 class=\"main-head\"><small class=\"small-head\">Home > Maintenance Summary > Till Vault Maintenance > <span *ngIf=\"!isEdit\">Add</span> <span *ngIf=\"isEdit\">Edit</span> Till Vault Master</small>\r\n<div fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"mt-16\">\r\n  <button mat-icon-button (click)=\"goBack()\">\r\n      <mat-icon>arrow_back</mat-icon>\r\n  </button>\r\n  <h1 *ngIf=\"!isEdit\" class=\"add-text\">Add Till Vault Master</h1>\r\n  <h1 *ngIf=\"isEdit\" class=\"add-text\">Edit Till Vault Master</h1>\r\n</div>\r\n<mat-card>\r\n  <mat-card-content>\r\n <!-- <form [formGroup]=\"tillVaultForm\" (ngSubmit)=\"submit()\" class=\"m-333\">-->\r\n     \r\n  <!-- <h1>Add New Till Vault Master</h1> -->\r\n  <form [formGroup]=\"itemForm\" (ngSubmit)=\"submit()\">\r\n  <div fxLayout=\"row wrap\" fxLayout.lt-sm=\"column\">\r\n    <div fxLayoutAlign=\"space-between center\" fxLayoutGap=\"15px\">\r\n    <div fxFlex=\"25\"  class=\"pr-16\" *ngIf=\"!readorWrite\">\r\n      <mat-label>Entity Code</mat-label>\r\n      <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n        <mat-select \r\n        name=\"entity\"\r\n        formControlName=\"entityCode\"\r\n        placeholder=\"Entity Code\">\r\n       <mat-option *ngFor=\"let entity of entityCode; trackBy:dataByEntity\" [value]=\"entity.entityCode\">\r\n        {{ entity.entityCode }}\r\n      </mat-option>\r\n      </mat-select>\r\n        <mat-error\r\n        *ngIf=\"itemForm?.get('entityCode').touched && !itemForm?.get('entityCode').valid\">\r\n        Entity Code is Required\r\n    </mat-error>\r\n      </mat-form-field>\r\n    </div>\r\n    <div fxFlex=\"25\"  class=\"pr-16\" *ngIf=\"readorWrite\">\r\n      <mat-label>Entity Code</mat-label>\r\n      <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n        <input\r\n        matInput  [readonly]=\"readorWrite\"\r\n        name=\"tillVaultCode\"\r\n       formControlName=\"entityCode\" \r\n      >\r\n      </mat-form-field>\r\n    </div>\r\n\r\n    <div fxFlex=\"25\"  class=\"pr-16\" *ngIf=\"!readorWrite\">\r\n      \r\n            <mat-label>BankCode</mat-label>\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <mat-select name=\"bankCode\"  formControlName=\"bankCode\" placeholder=\"Bank Code\"\r\n               >\r\n                <mat-option *ngFor=\"let data of bankCode; trackBy:dataByBank\"  [value]=\"data.bankCode\">\r\n                {{data.bankCode}}\r\n                </mat-option>\r\n            </mat-select>\r\n            <mat-error\r\n        *ngIf=\"itemForm?.get('bankCode').touched && !itemForm?.get('bankCode').valid\">\r\n        Bank Code is Required\r\n    </mat-error>\r\n          </mat-form-field>\r\n    </div>\r\n    <div fxFlex=\"25\"  class=\"pr-16\" *ngIf=\"readorWrite\">\r\n      <mat-label>Bank Code</mat-label>\r\n      <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n        <input\r\n        matInput  [readonly]=\"readorWrite\"\r\n        name=\"tillVaultCode\"\r\n       formControlName=\"bankCode\" \r\n      >\r\n      </mat-form-field>\r\n    </div>\r\n\r\n    <div fxFlex=\"25\"  class=\"pr-16\" *ngIf=\"!readorWrite\">\r\n     \r\n        <mat-label>Till Or Vault</mat-label>\r\n        <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n        <mat-select name=\"tillOrVault\" formControlName=\"tillOrVault\" placeholder=\"Till Or Vault\"\r\n            >\r\n            <mat-option value=\"T\">Till</mat-option>\r\n            <mat-option value=\"V\">Vault</mat-option>\r\n        </mat-select>\r\n        <mat-error\r\n        *ngIf=\"itemForm.get('tillOrVault').touched && !itemForm.get('tillOrVault').valid\">\r\n        TillOrVault is Required!\r\n    </mat-error>\r\n      </mat-form-field>\r\n    </div>\r\n    <div fxFlex=\"25\"  class=\"pr-16\" *ngIf=\"readorWrite\">\r\n      <mat-label>Till Or Vault</mat-label>\r\n      <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n        <input\r\n        matInput  [readonly]=\"readorWrite\"\r\n        name=\"tillVaultCode\"\r\n       formControlName=\"tillOrVault\" \r\n      >\r\n      </mat-form-field>\r\n    </div>\r\n  \r\n    <div fxFlex=\"25\"  class=\"pr-16\">\r\n      <mat-label>Till Vault Code</mat-label>\r\n      <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n        <input\r\n        matInput  [readonly]=\"readorWrite\"\r\n        name=\"tillVaultCode\"\r\n       formControlName=\"tillVaultCode\" placeholder=\"Till Vault Code\"\r\n      >\r\n        <mat-error\r\n        *ngIf=\"itemForm.get('tillVaultCode').touched && !itemForm.get('tillVaultCode').valid\">\r\n        Till Vault Code is Required!\r\n       </mat-error>\r\n      </mat-form-field>\r\n    </div>\r\n  </div>\r\n  <div fxLayoutAlign=\"space-between center\"  fxLayoutGap=\"15px\" >\r\n    <div fxFlex=\"50\" class=\"pr-16\">\r\n      <mat-label>Till Vault Desc</mat-label>\r\n      <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n        <input\r\n        matInput  [readonly]=\"readorWrite\"\r\n        name=\"tillVaultDesc\" formControlName=\"tillVaultDesc\"\r\n     \r\n        placeholder=\"TillVaultDesc\">\r\n        <mat-error\r\n        *ngIf=\"itemForm.get('tillVaultDesc').touched && !itemForm.get('tillVaultDesc').valid\">\r\n        Till Vault Desc is Required!\r\n    </mat-error>\r\n      </mat-form-field>\r\n    </div>\r\n    <div fxFlex=\"50\" class=\"pr-16\" *ngIf=\"!readorWrite\">\r\n      <mat-label>Primary Vault </mat-label>\r\n        <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n          <mat-select name=\"primaryVault\"  formControlName=\"primaryVault\" placeholder=\"PrimaryVault\"\r\n            >\r\n            <mat-option value=\"Y\">Y</mat-option>\r\n            <mat-option value=\"N\">N</mat-option>\r\n        </mat-select>\r\n          <mat-error\r\n          *ngIf=\"itemForm.get('primaryVault').touched && !itemForm.get('primaryVault').valid\">\r\n          primaryVault is Required!\r\n      </mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n    </div>\r\n    <div fxFlex=\"25\"  class=\"pr-16\" *ngIf=\"readorWrite\">\r\n      <mat-label>Primary Vault</mat-label>\r\n      <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n        <input\r\n        matInput  [readonly]=\"readorWrite\"\r\n        name=\"tillVaultCode\"\r\n       formControlName=\"primaryVault\" \r\n      >\r\n      </mat-form-field>\r\n    </div>\r\n      \r\n    <div fxFlex=\"100\" class=\"mt-16\" fxLayoutAlign=\"end center\" fxLayoutGap=\"10px\">\r\n      <div>\r\n        <button mat-raised-button color=\"primary\" [disabled]=\"!(itemForm.valid && itemForm.dirty)\" *ngIf=\"!isEdit\">Save\r\n      </button>\r\n      </div>\r\n      <div [hidden]=\"readorWrite\">\r\n        <button mat-raised-button color=\"primary\" [disabled]=\"!(itemForm.valid && itemForm.dirty)\" *ngIf=\"isEdit\">Save\r\n          </button>\r\n      </div>\r\n      <div [hidden]=\"!readorWrite || auditData?.recordStatus == 'Close'\">\r\n        <button *ngIf=\"isEdit\" type=\"button\"  mat-raised-button color=\"primary\" (click)=\"editRecord()\">\r\n          Edit\r\n        </button>&nbsp;&nbsp;\r\n      </div>\r\n      <div *ngIf=\"auditData?.authStatus == 'Unauthorized' && readorWrite\" [hidden]=\"!readorWrite\">\r\n        <button *ngIf=\"isEdit\" type=\"button\"  mat-raised-button color=\"primary\" (click)=\"updateRecord('auth')\">\r\n          Authorize\r\n        </button>&nbsp;&nbsp;\r\n      </div> \r\n      <div *ngIf=\"auditData?.recordStatus == 'Close' && auditData?.oneTimeAuth != 'No'\" [hidden]=\"!readorWrite\">\r\n        <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"updateRecord('open')\">\r\n          Reopen\r\n        </button>&nbsp;&nbsp;\r\n      </div>\r\n      <div *ngIf=\"auditData?.recordStatus == 'Open' && auditData?.oneTimeAuth != 'No'\" [hidden]=\"!readorWrite\">\r\n        <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"updateRecord('close')\">\r\n          Close\r\n        </button>&nbsp;&nbsp;\r\n      </div>\r\n      <div *ngIf=\"auditData?.oneTimeAuth == 'No'\" [hidden]=\"!readorWrite\">\r\n        <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"deleteRecord('delete')\">\r\n          Delete\r\n        </button> &nbsp;&nbsp;\r\n      </div>\r\n     \r\n      <button\r\n        mat-raised-button\r\n        color=\"warn\"\r\n        type=\"button\"\r\n        (click)=\"goBack()\"\r\n      >\r\n        Exit\r\n      </button>\r\n    </div>\r\n  </div>\r\n  </form>\r\n  </mat-card-content>\r\n</mat-card>\r\n\r\n<div class=\"mt-32\">\r\n  <app-audit-log *ngIf=\"isAuditData\" #auditLog></app-audit-log>\r\n</div>\r\n\r\n  <!---->\r\n\r\n\r\n","import {\r\n  Component,\r\n  ElementRef,\r\n  OnInit,\r\n  ViewChild,\r\n  OnDestroy,\r\n} from '@angular/core';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { rumangoAnimations } from 'app/shared/animations/rumango-animations';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { AppConfirmService } from 'app/shared/services/app-confirm/app-confirm.service';\r\nimport { AppLoaderService } from 'app/shared/services/app-loader/app-loader.service';\r\nimport { DataService } from 'app/shared/services/data.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { Subscription } from 'rxjs';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort, Sort } from '@angular/material/sort';\r\nimport { LiveAnnouncer } from '@angular/cdk/a11y';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { DownloadService } from 'app/shared/services/download.service';\r\nimport jsPDF from 'jspdf';\r\nimport 'jspdf-autotable';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-till-vault-branch-map-summary',\r\n  templateUrl: './till-vault-branch-map-summary.component.html',\r\n  styleUrls: ['./till-vault-branch-map-summary.component.scss'],\r\n  animations: rumangoAnimations,\r\n})\r\nexport class TillVaultBranchMapSummaryComponent implements OnInit {\r\n  @ViewChild('searchVal') searchVal: ElementRef;\r\n  selectedFilterIndex: number = 0;\r\n  displayedColumns: string[] = [ 'entityCode', 'parentVaultId', 'authStatus','recordStatus','action'];\r\n  filterByOption: { key: string; value: string }[] = [\r\n    { key: 'entityCode', value: 'Entity Code' },\r\n  ];\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n\r\n  dataSource = new MatTableDataSource();\r\n\r\n  public items: any[];\r\n  public getItemSub: Subscription;\r\n  users: any[] = [];\r\n  currency: string[] = [];\r\n  till: any[] = [];\r\n  branchCode: string[] = [];\r\n  bankCode: string[] = [];\r\n  id: any;\r\n  fetchBrnMap: any;\r\n  currentUser: string;\r\n  loading: boolean;\r\n  tillData: any;\r\n  vault: any;\r\n  data: any;\r\n  vaultData: any;\r\n  entity: any;\r\n  entityCode: any[] = [];\r\n  constructor(\r\n    private dialog: MatDialog,\r\n    private snack: MatSnackBar,\r\n    private confirmService: AppConfirmService,\r\n    private loader: AppLoaderService,\r\n    private apiService: ApiService,\r\n    private router: Router,\r\n    private dataService: DataService,\r\n    private ls: LocalStoreService,\r\n    private _liveAnnouncer: LiveAnnouncer,\r\n    private downloadService: DownloadService\r\n  ) {}\r\n\r\n  onFileChange(event) {\r\n    console.log('event',event.path[0].files[0]);\r\n    const file: File = event.path[0].files[0];\r\n    const uploadData = new FormData();\r\n    uploadData.append('screenType', 'tillValutBrnMap');\r\n    uploadData.append('file', file);\r\n    this.apiService.uploadFile(uploadData).subscribe(\r\n      (response) => {\r\n        console.log(response);\r\n        this.getTellVaultBranchMap();\r\n        this.snack.open('File Uploaded Successfully', 'OK', {\r\n          duration: 4000,\r\n          verticalPosition: 'top',\r\n          horizontalPosition: 'right',\r\n        });\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n        this.snack.open('Upload Failed', 'OK', {\r\n          duration: 4000,\r\n          verticalPosition: 'top',\r\n          horizontalPosition: 'right',\r\n        });\r\n      }\r\n    );\r\n  }\r\n\r\n  createPdf() {\r\n    const arr = [];\r\n    const head = [\r\n      ['entityCode', 'parentVaultId', 'authStatus', 'recordStatus'],\r\n    ];\r\n    const body = [];\r\n    this.users.map((user) => {\r\n      const arr = [];\r\n      head[0].map((i) =>\r\n        !!user[i] ? arr.push(user[i].toString()) : arr.push('N/A')\r\n      );\r\n      body.push(arr);\r\n      return;\r\n    });\r\n    const doc = new jsPDF();\r\n\r\n    (doc as any).autoTable({\r\n      head,\r\n      body,\r\n      theme: 'grid',\r\n    });\r\n\r\n    // below line for Open PDF document in new tab\r\n    doc.output('dataurlnewwindow');\r\n\r\n    // below line for Download PDF document\r\n    doc.save('users.pdf');\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.currentUser = this.ls.getItem('ICUST_USER');\r\n    this.getTillId();\r\n    this.getParentVault();\r\n    // this.fetchTellVaultBranchMap()\r\n    // this.getItems();\r\n    this.getTellVaultBranchMap();\r\n    this.getCurrency();\r\n    this.getBankCode();\r\n    this.getBranchCode();\r\n    this.getTillId();\r\n    this.getEntityCode();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.getItemSub) {\r\n      this.getItemSub.unsubscribe();\r\n    }\r\n  }\r\n \r\n  getItems() {\r\n    this.items = this.users;\r\n  }\r\n\r\n\r\n  doFilter(filterBy, e) {\r\n    this.filterTable(filterBy);\r\n    this.applyFilter(e);\r\n  }\r\n\r\n  filterTable(filterBy) {\r\n    this.dataSource.filterPredicate = (data: any, filter: string): boolean => {\r\n      return data[filterBy].toLocaleLowerCase().includes(filter);\r\n    };\r\n  }\r\n\r\n  clearFilter() {\r\n    this.dataSource.filter = '';\r\n    this.searchVal.nativeElement.value = '';\r\n    this.selectedFilterIndex = 0;\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n  // announceSortChange(sortState: Sort) {\r\n  //   if (sortState.direction) {\r\n  //     this._liveAnnouncer.announce(`Sorted ${sortState.direction}ending`);\r\n  //   } else {\r\n  //     this._liveAnnouncer.announce(\"Sorting cleared\");\r\n  //   }\r\n  // }\r\n\r\n  announceSortChange(sortState: Sort) {\r\n    if (sortState.direction) {\r\n      this._liveAnnouncer.announce(`Sorted ${sortState.direction}ending`);\r\n    } else {\r\n      this._liveAnnouncer.announce('Sorting cleared');\r\n    }\r\n  }\r\n \r\n\r\n  addNew() {\r\n    this.router.navigate(['/maintenance/main/tillVaultltBranchMap/add']);\r\n  }\r\n\r\n  goBack() {\r\n    this.router.navigate([`/maintenance/main/`]);\r\n  }\r\n\r\n  openPopUp(row) {\r\n    console.log(row);\r\n    this.fetchTellVaultBranchMap(row);\r\n    // this.dataService.sendNavParam(this.fetchBrnMap);\r\n    this.router.navigate([`/maintenance/main/tillVaultltBranchMap/${row.id}`]);\r\n  }\r\n\r\n  deleteItem(row) {\r\n    this.confirmService\r\n      .confirm({ message: `Delete ${row.entityCode}?` })\r\n      .subscribe((res) => {\r\n        if (res) {\r\n          this.loader.open();\r\n          this.apiService.deleteTellerVaultBrnMap(row.id).subscribe(\r\n            (data) => {},\r\n            (err) => {\r\n              if (err.status === 200) {\r\n                this.loader.close();\r\n                this.snack.open(`Record Deleted!'`, 'OK', {\r\n                  duration: 2000,\r\n                  verticalPosition: 'top',\r\n                  horizontalPosition: 'right',\r\n                });\r\n                this.getTellVaultBranchMap();\r\n              }\r\n            }\r\n          );\r\n        }\r\n      });\r\n  }\r\n  getTellVaultBranchMap() {\r\n    this.loading = true;\r\n    this.apiService.getTellerVaultBranchMap().subscribe((resp) => {\r\n      for(let i=0;i<resp.length;i++){\r\n        if(resp[i].authStatus == 'U'){\r\n          resp[i].authStatus = 'Unauthorized'\r\n        }\r\n        if(resp[i].authStatus == 'A') {\r\n          resp[i].authStatus = 'Authorized'\r\n        } \r\n        if(resp[i].recordStatus == 'O'){\r\n          resp[i].recordStatus = 'Open'\r\n        } \r\n        if(resp[i].recordStatus == 'C'){\r\n          resp[i].recordStatus = 'Closed'\r\n        }\r\n      }\r\n      console.log(resp);\r\n      this.users = resp;\r\n      this.items = this.users;\r\n      this.dataSource = new MatTableDataSource(resp);\r\n      console.log(this.dataSource);\r\n      this.dataSource.paginator = this.paginator;\r\n      this.items = resp;\r\n      this.dataSource.sort = this.sort;\r\n      this.loading = false;\r\n    });\r\n  }\r\n\r\n  getTillId() {\r\n    let tillOrVault = 'T';\r\n    this.apiService.getTillData(tillOrVault).subscribe((resp) => {\r\n      console.log('tillData', resp);\r\n      this.till = resp;\r\n    });\r\n  }\r\n\r\n  getParentVault() {\r\n    let tillOrVault = 'V';\r\n    this.apiService.getTillData(tillOrVault).subscribe((resp) => {\r\n      this.vault = resp;\r\n    });\r\n  }\r\n  fetchTellVaultBranchMap(row) {\r\n    this.loader.open();\r\n    this.apiService.fetchTellerVaultBranchMap(row.id).subscribe((result) => {\r\n      console.log(result);\r\n      this.data = result;\r\n      this.tillData = this.till.find((x) => x.id == this.data.tillId);\r\n      this.data.tillId = this.tillData.tillVaultCode;\r\n      this.vaultData = this.vault.find((x) => x.id == this.data.parentVaultId);\r\n      this.data.parentVaultId = this.vaultData.tillVaultCode;\r\n\r\n      this.fetchBrnMap = this.data;\r\n\r\n      if (this.fetchBrnMap != null) {\r\n        localStorage.setItem('fetchBrnMap', JSON.stringify(this.fetchBrnMap));\r\n        console.log(this.fetchBrnMap);\r\n        this.loader.close();\r\n      }\r\n    });\r\n  }\r\n\r\n  tillVaultBranchMaping() {\r\n    this.downloadService.downloadFiles('tillVaultBranchMaping', this.users);\r\n  }\r\n\r\n  getEntityCode() {\r\n    this.apiService.getEntityCode().subscribe((resp) => {\r\n      console.log(resp);\r\n      this.entityCode = resp;\r\n    });\r\n  }\r\n\r\n  getCurrency() {\r\n    this.apiService.getCountryValues().subscribe((resp) => {\r\n      this.currency = resp;\r\n    });\r\n  }\r\n  getBankCode() {\r\n    this.apiService.getBankCode().subscribe((resp) => {\r\n      this.bankCode = resp;\r\n    });\r\n  }\r\n  getBranchCode() {\r\n    this.apiService.getBranchCode().subscribe((resp) => {\r\n      this.branchCode = resp;\r\n    });\r\n  }\r\n  dataByFilterByOption(filter) {\r\n    return filter.key;\r\n  }\r\n}\r\n","<h1 class=\"main-head\"><small class=\"small-head\">Home > Maintenance Summary > Till Vault Branch Map Maintenance </small>\r\n</h1>\r\n<div fxLayoutAlign=\"center\">\r\n  <mat-spinner *ngIf=\"loading\"></mat-spinner>\r\n</div>\r\n<div fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"mt-24\">\r\n  <button mat-icon-button (click)=\"goBack()\">\r\n    <mat-icon>arrow_back</mat-icon>\r\n  </button>\r\n  <span class=\"text-large\"> Till Vault Branch Map Maintenance </span>\r\n</div>\r\n<mat-card class=\"mt-32\">\r\n  <div >    \r\n    <table style=\"margin: 18px;\">\r\n      <tr>\r\n        <td>\r\n          <h2>\r\n            Till Vault Branch Maps\r\n          </h2>\r\n        </td>\r\n      </tr>\r\n      <tr>\r\n        <td>\r\n          <div class=\"highlight\">\r\n          </div>\r\n        </td>\r\n      </tr>\r\n    </table>\r\n    <span fxFlex></span>\r\n    <button mat-icon-button [matMenuTriggerFor]=\"menu\">\r\n      <mat-icon>more_vert</mat-icon>\r\n    </button>\r\n    <mat-menu #menu=\"matMenu\">\r\n      <div class=\"upload-btn-wrapper\">\r\n        <button type=\"button\" mat-menu-item>Export</button>\r\n        <input\r\n          type=\"file\"\r\n          accept=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\"\r\n          class=\"btn btn-success\"\r\n          (change)=\"onFileChange($event)\"\r\n        />\r\n      </div>\r\n      <button (click)=\"tillVaultBranchMaping()\" mat-menu-item>\r\n        <span>Download</span>\r\n      </button>\r\n    </mat-menu>\r\n  </div>\r\n  <div fxLayout=\"row\" class=\"w-full\" fxLayoutAlign=\"space-arround center\" class=\"ml-16 mt-32\">\r\n    <div fxLayout=\"row\" class=\"w-full\" fxLayoutGap=\"10px\">    \r\n        <div>\r\n          <mat-form-field appearance=\"outline\">\r\n            <mat-label>Filter By</mat-label>\r\n            <mat-select name=\"filterBy\" #filterBy [(ngModel)]=\"selectedFilterIndex\" placeholder=\"Filter By\">\r\n              <!-- <mat-select name=\"filterBy\" #filterBy [(ngModel)]=\"selectedFilterIndex\"> -->\r\n              <mat-option value=\"0\">Select</mat-option>\r\n              <mat-option *ngFor=\"let filter of filterByOption; rackBy: dataByFilterByOption\" value=\"{{ filter.key }}\">\r\n                {{ filter.value }}\r\n              </mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n        </div>\r\n        <div>\r\n          <mat-form-field appearance=\"outline\">\r\n            <mat-label>Search</mat-label>\r\n            <input matInput #searchVal (keyup)=\"doFilter(filterBy.value, $event)\" placeholder=\"Search\">\r\n            <!-- <input matInput #searchVal (keyup)=\"doFilter(filterBy.value, $event)\"> -->\r\n            <mat-icon matSuffix>search</mat-icon>\r\n          </mat-form-field>\r\n        </div>\r\n        <div *ngIf=\"searchVal.value || filterBy.value\" class=\"resetDiv\">\r\n          <button mat-stroked-button class=\"clearBtn\" (click)=\"clearFilter()\">RESET\r\n          </button>\r\n        </div>\r\n        <div class=\"filterDiv\">\r\n         <button mat-flat-button color=\"primary\" class=\"addNewBtn\" (click)=\"addNew()\" >ADD NEW\r\n         </button>\r\n       </div>\r\n      </div>\r\n    </div>\r\n    <!-- <ngx-datatable\r\n      class=\"material ml-0 mr-0\"\r\n      [rows]=\"items\"\r\n      [columnMode]=\"'force'\"\r\n      [headerHeight]=\"50\"\r\n      [footerHeight]=\"50\"\r\n      [scrollbarH]=\"true\"\r\n      [limit]=\"6\"\r\n      [rowHeight]=\"50\"\r\n    > -->\r\n    <div class=\"mat-elevation-z0\">\r\n      <mat-table class=\"w-full\" [dataSource]=\"dataSource\" matSort (matSortChange)=\"announceSortChange($event)\">\r\n        <ng-container matColumnDef=\"entityCode\">\r\n          <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Name \"> Entity Code\r\n          </mat-header-cell>\r\n          <mat-cell *matCellDef=\"let element\"> {{ element.entityCode }} </mat-cell>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"parentVaultId\">\r\n          <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Description \"> Parent Vault Id\r\n          </mat-header-cell>\r\n          <mat-cell *matCellDef=\"let element\"> {{ element.parentVaultId }}</mat-cell>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"authStatus\">\r\n          <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Auth Status\"> Auth Status\r\n          </mat-header-cell>\r\n          <mat-cell *matCellDef=\"let element\"> {{ element.authStatus }} </mat-cell>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"recordStatus\">\r\n          <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Record Status\"> Record Status\r\n          </mat-header-cell>\r\n          <mat-cell *matCellDef=\"let element\"> {{ element.recordStatus }} </mat-cell>\r\n        </ng-container> \r\n        <ng-container matColumnDef=\"action\">\r\n          <mat-header-cell *matHeaderCellDef>Action</mat-header-cell>\r\n          <mat-cell *matCellDef=\"let element\">\r\n            <div>\r\n             <mat-icon class=\"actionIcons\" matTooltip=\"Edit\" (click)=\"openPopUp(element,'Yes')\"  >edit</mat-icon>\r\n          </div>&nbsp;&nbsp;&nbsp;&nbsp;\r\n          <div>\r\n           <mat-icon class=\"actionIcons\" matTooltip=\"Delete\" [disabled]=\"element.oneTimeAuth =='Y'\" (click)=\"deleteItem(element)\" >delete</mat-icon>\r\n          </div>\r\n          </mat-cell>\r\n        </ng-container>\r\n        <mat-header-row *matHeaderRowDef=\"displayedColumns;\"></mat-header-row>\r\n      <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\r\n    </mat-table>\r\n    <mat-paginator class=\"mt-16\" [pageSizeOptions]=\"[5, 10, 20]\" aria-label=\"Select page of users\"></mat-paginator>\r\n  </div>\r\n  \r\n  </mat-card>\r\n\r\n      <!-- <ngx-datatable-column name=\"Entity Code\" [flexGrow]=\"1\">\r\n        <ng-template let-row=\"row\" ngx-datatable-cell-template>\r\n          {{ row?.entityCode }}\r\n        </ng-template>\r\n      </ngx-datatable-column>\r\n      <ngx-datatable-column name=\"Parent Vault Id\" [flexGrow]=\"1\">\r\n        <ng-template let-row=\"row\" ngx-datatable-cell-template>\r\n          {{ row.parentVaultId }}\r\n        </ng-template>\r\n      </ngx-datatable-column>\r\n      <ngx-datatable-column name=\"Auth Status\" [flexGrow]=\"1\">\r\n        <ng-template let-row=\"row\" ngx-datatable-cell-template>\r\n          {{ row.authStatus }}\r\n        </ng-template>\r\n      </ngx-datatable-column>\r\n      <ngx-datatable-column name=\"Record Status\" [flexGrow]=\"1\">\r\n        <ng-template let-row=\"row\" ngx-datatable-cell-template>\r\n          {{ row.recordStatus }}\r\n        </ng-template>\r\n      </ngx-datatable-column>\r\n\r\n      <ngx-datatable-column name=\"Actions\" [flexGrow]=\"1\">\r\n        <ng-template let-row=\"row\" ngx-datatable-cell-template>\r\n          <button\r\n            mat-icon-button\r\n            mat-sm-button\r\n            color=\"primary\"\r\n            class=\"mr-16\"\r\n            (click)=\"openPopUp(row)\"\r\n          >\r\n            <mat-icon>edit</mat-icon>\r\n          </button>\r\n          <button\r\n            mat-icon-button\r\n            mat-sm-button\r\n            color=\"warn\"\r\n            [disabled]=\"row.oneTimeAuth == 'Y'\"\r\n            (click)=\"deleteItem(row)\"\r\n          >\r\n            <mat-icon>delete</mat-icon>\r\n          </button>\r\n        </ng-template>\r\n      </ngx-datatable-column>\r\n    </ngx-datatable>\r\n    <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\" aria-label=\"Select page of users\"></mat-paginator> \r\n  \r\n</mat-card> -->\r\n","\r\nimport { Component, OnInit,ElementRef, ViewChild } from '@angular/core';\r\nimport { LiveAnnouncer } from '@angular/cdk/a11y';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MatSort, Sort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { Router } from '@angular/router';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { AppConfirmService } from 'app/shared/services/app-confirm/app-confirm.service';\r\nimport { DataService } from 'app/shared/services/data.service';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-role-maintenance-summary',\r\n  templateUrl: './role-maintenance-summary.component.html',\r\n  styleUrls: ['./role-maintenance-summary.component.scss']\r\n})\r\nexport class RoleMaintenanceSummaryComponent implements OnInit {\r\n  @ViewChild('searchVal') searchVal: ElementRef;\r\n  selectedFilterIndex : number = 0;\r\n\r\n  dataSource = new MatTableDataSource();\r\n  displayedColumns: string[] = [ 'roleName', 'roleDesc',  'oneTimeAuth', 'authStatus', 'recordStatus', 'action'];\r\n  filterByOption: { key: string, value: string }[] = [\r\n    \r\n    { key: 'roleName', value: 'Role Name' },\r\n    { key: 'roleDesc', value: 'Role Description' },\r\n    // { key: 'childPermission', value: 'Child Permission'}\r\n  ];\r\n\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  // bankCode: any;\r\n  // entityCode: any;\r\n  // currencies: any;\r\n  currencies: string[] = [];\r\n  bankCode: string[] = [];\r\n  entityCode:string[] = [];\r\n  users: any[] = [];\r\n  public items: any[];\r\n  entity: any;\r\n  tillVaultMasterValues: any;\r\n  fetchTillVault: any;\r\n  fetchCurrencyPair:any;\r\n  fetchRoleById:any;\r\n  currencyPairMaintValues:any;\r\n  public getItemSub: Subscription;\r\n  id:any;\r\n  constructor(private router: Router, private _liveAnnouncer: LiveAnnouncer, private confirmService: AppConfirmService, \r\n    private apiService: ApiService, private snack: MatSnackBar,private dataService:DataService) { }\r\n\r\n  ngOnInit(): void {\r\n    // this.getBranchCurrency();\r\n    // this.getBankCode();\r\n    // this.getEntityDropdown();\r\n    this.getItems();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.getItemSub) {\r\n      this.getItemSub.unsubscribe()\r\n    }\r\n  }\r\n\r\n\r\n  // getItems() {\r\n  //   // this.apiService.fetchScreenPermissions('Roles').subscribe((roleInfo : any)=> {\r\n  //   //   console.log('roleInfo',roleInfo)\r\n  //   //   if(roleInfo){  \r\n  //   //     for(let i=0;i<roleInfo.length;i++){\r\n  //   //       if(roleInfo[i].authStatus == 'U'){\r\n  //   //         roleInfo[i].authStatus = 'Unauthorized'\r\n  //   //       }\r\n  //   //       if(roleInfo[i].authStatus == 'A') {\r\n  //   //         roleInfo[i].authStatus = 'Authorized'\r\n  //   //       } \r\n  //   //       if(roleInfo[i].recordStatus == 'O'){\r\n  //   //         roleInfo[i].recordStatus = 'Open'\r\n  //   //       } \r\n  //   //       if(roleInfo[i].recordStatus == 'C'){\r\n  //   //         roleInfo[i].recordStatus = 'Closed'\r\n  //   //       }\r\n  //   //     }\r\n  //   //   this.currencyPairMaintValues = roleInfo;\r\n  //   //     this.items =  this.currencyPairMaintValues;\r\n  //   //     console.log(\"items4::\", this.items);\r\n  //   //     this.dataSource = new MatTableDataSource(roleInfo);\r\n  //   //     this.dataSource.paginator = this.paginator;\r\n  //   //     this.dataSource.sort = this.sort;\r\n  //   //   }\r\n  //   //   });\r\n  \r\n  // }\r\n  \r\n  getItems() {\r\n    this.apiService.fetchRoleSummary().subscribe((roleInfo : any)=> {\r\n      if(roleInfo){  \r\n        for(let i=0;i<roleInfo.length;i++){\r\n          if(roleInfo[i].authStatus == 'U'){\r\n            roleInfo[i].authStatus = 'Unauthorized'\r\n          }\r\n          if(roleInfo[i].authStatus == 'A') {\r\n            roleInfo[i].authStatus = 'Authorized'\r\n          } \r\n          if(roleInfo[i].recordStatus == 'O'){\r\n            roleInfo[i].recordStatus = 'Open'\r\n          } \r\n          if(roleInfo[i].recordStatus == 'C'){\r\n            roleInfo[i].recordStatus = 'Closed'\r\n          }\r\n          if(roleInfo[i].oneTimeAuth == 'N'){\r\n            roleInfo[i].oneTimeAuth = 'No'\r\n          }\r\n          if(roleInfo[i].oneTimeAuth == 'Y'){\r\n            roleInfo[i].oneTimeAuth = 'Yes'\r\n          }\r\n          \r\n        }\r\n      this.currencyPairMaintValues = roleInfo;\r\n        this.items =  this.currencyPairMaintValues;\r\n        console.log(\"items4::\", this.items);\r\n        this.dataSource = new MatTableDataSource(roleInfo);\r\n        this.dataSource.paginator = this.paginator;\r\n        this.dataSource.sort = this.sort;\r\n      }\r\n      });\r\n  \r\n  }\r\n\r\n  onFileChange(event) {\r\n    console.log('event', event.path[0].files[0]);\r\n    const file: File = event.path[0].files[0];\r\n    const uploadData = new FormData();\r\n    uploadData.append('screenType', 'currencyPair');\r\n    uploadData.append('file', file);\r\n    this.apiService.uploadExelFile(uploadData).subscribe((response) => {\r\n      this.getItems();\r\n      console.log(response);\r\n      this.snack.open(`File Uploaded Successfully`, \"OK\", {\r\n        duration: 4000,\r\n        verticalPosition: \"top\",\r\n        horizontalPosition: \"right\",\r\n      });\r\n    });\r\n    \r\n  }\r\n  fetchRole(){\r\n    this.apiService.fetchRoleById(this.id).subscribe((resp) =>{\r\n     console.log(\"currencyPairById\",resp);\r\n     this.fetchRoleById=resp;\r\n    })\r\n    console.log(this.fetchRoleById)\r\n    this.dataService.sendNavParam(this.fetchRoleById);\r\n    this.router.navigate([`/maintenance/main/currencyPairMaintenance/addCurrencyPair/${this.id}`]);\r\n  }\r\n  // getBankCode() {\r\n  //   this.apiService.getBankCode().subscribe((resp) => {\r\n  //     this.bankCode = resp;\r\n  //   });\r\n  // }\r\n  // getEntityDropdown(){\r\n  //   this.apiService.getEntityDropdown().subscribe((data) => {\r\n  //     this.entityCode = data;\r\n  //     console.log(\"Entity Code\",this.entityCode)  \r\n  //   });\r\n    \r\n  // }\r\n\r\n  // getBranchCurrency(){\r\n  //   this.apiService.getCountryValues().subscribe(_list =>{\r\n  //     this.currencies = _list;\r\n  //   },(err:any) =>{\r\n  //     console.error(\"Error\", err);\r\n  //   })\r\n  // }\r\n  \r\n  addNew(){\r\n    this.router.navigate([\"/maintenance/main/addRoleMaintenance\"]);\r\n  }\r\n\r\n  doFilter(filterBy, e){\r\n    console.log(filterBy,e);\r\n    this.filterTable(filterBy);\r\n    this.applyFilter(e);\r\n  }\r\n  applyFilter(event: Event) {\r\n     \r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    console.log(\"filterValue\",filterValue)\r\n    this.dataSource.filter = filterValue.trim().toLocaleLowerCase();\r\n  }\r\n\r\n  clearFilter(){\r\n    this.dataSource.filter = '';\r\n    this.searchVal.nativeElement.value = '';\r\n    this.selectedFilterIndex = 0;\r\n   }\r\n\r\n   filterTable(filterBy) {\r\n   \r\n    this.dataSource.filterPredicate = (data: any, filter: string): boolean => {\r\n      console.log('data :: ',data[filterBy]);\r\n      if(data[filterBy] !=null){\r\n      return (\r\n        data[filterBy].trim().toLocaleLowerCase().includes(filter)\r\n      )}\r\n    }\r\n  }\r\n\r\n   announceSortChange(sortState: Sort) {\r\n    if (sortState.direction) {\r\n      this._liveAnnouncer.announce(`Sorted ${sortState.direction}ending`);\r\n    } else {\r\n      this._liveAnnouncer.announce('Sorting cleared');\r\n    }\r\n  }\r\n  openEdit(data: any = {},isEdit : string) {\r\n    console.log(\"data\",isEdit);\r\n    console.log(\".id\",data.id);\r\n    console.log(\"item1::\",data);\r\n    \r\n    this.router.navigate([\"/maintenance/main/addRoleMaintenance\"],{ queryParams: { id: data.id, isEdit : isEdit } });\r\n  }\r\n\r\n  deleteItem(element) {\r\n    console.log(\"element\",element.id);\r\n    this.confirmService.confirm({message: `Delete  ${element.id}?`})\r\n      .subscribe(res => {\r\n        if (res) {\r\n          this.apiService.deleteRole(element.id)\r\n            .subscribe(data => {\r\n            },\r\n              err=>{\r\n                if (err.status == 200) {\r\n                  this.snack.open('Record Deleted Successfully', 'OK', {\r\n                    duration: 4000,\r\n                    verticalPosition: 'top',\r\n                    horizontalPosition: 'right'\r\n                  });\r\n                 \r\n                }\r\n                this.getItems();\r\n            })  \r\n        } \r\n      });\r\n  }\r\n  \r\n  goBack(){\r\n    this.router.navigate([\"/maintenance/main\"]);\r\n  }\r\n \r\n}\r\n\r\n","<h1 class=\"main-head\"><small class=\"small-head\">Home > Retail Operations > Role Maintenance  </small></h1>\r\n  <div fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"mt-24\">\r\n    <button mat-icon-button (click)=\"goBack()\">\r\n        <mat-icon>arrow_back</mat-icon>\r\n      </button> \r\n      <span class=\"text-large\">\r\n        Role Maintenance\r\n      </span>\r\n  </div>\r\n  \r\n  <mat-card class=\"mt-32\">\r\n   <div >\r\n    <table>\r\n      <tr>\r\n        <td>\r\n          <h2>\r\n           Role \r\n          </h2>\r\n        </td>\r\n      </tr>\r\n      <tr>\r\n        <td>\r\n          <div class=\"highlight\">\r\n          </div>\r\n        </td>\r\n      </tr>\r\n    </table>\r\n       <span fxFlex></span>\r\n       <button mat-icon-button [matMenuTriggerFor]=\"menu\">\r\n         <mat-icon>more_vert</mat-icon>\r\n       </button>\r\n       <mat-menu #menu=\"matMenu\">\r\n         <div class=\"upload_botton\">\r\n          <button type=\"button\" mat-menu-item>Upload</button>\r\n          <input\r\n            type=\"file\"\r\n            accept=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\"\r\n            class=\"btn btn-success\"\r\n            (change)=\"onFileChange($event)\"\r\n          />\r\n        </div>\r\n         <button mat-menu-item>\r\n           <span>Download</span>\r\n         </button>\r\n       </mat-menu>\r\n    </div>\r\n    <div fxLayout=\"row\" class=\"w-full\" fxLayoutAlign=\"space-arround center\" class=\"ml-16 mt-32\">\r\n      <div fxLayout=\"row\" class=\"w-full\" fxLayoutGap=\"10px\">\r\n       <div>\r\n         <mat-form-field appearance=\"outline\">\r\n           <!-- <mat-label>Filter By</mat-label> -->\r\n           <mat-select name=\"filterBy\" #filterBy [(ngModel)]=\"selectedFilterIndex\" placeholder=\"Filter By\">\r\n             <mat-option value=\"0\">Select</mat-option>\r\n             <mat-option *ngFor=\"let filter of filterByOption\" value=\"{{filter.key}}\">\r\n               {{filter.value}}\r\n             </mat-option>\r\n           </mat-select>\r\n         </mat-form-field>\r\n       </div>\r\n       <div>\r\n         <mat-form-field appearance=\"outline\">\r\n           <!-- <mat-label>Search</mat-label> -->\r\n           <input matInput #searchVal (keyup)=\"doFilter(filterBy.value,$event)\" placeholder=\"Search\">\r\n           <mat-icon matSuffix>search</mat-icon>\r\n         </mat-form-field>\r\n       </div>\r\n       <div *ngIf=\"searchVal.value || filterBy.value\" class=\"resetDiv\">\r\n         <button mat-stroked-button class=\"clearBtn\" (click)=\"clearFilter()\">RESET\r\n         </button>\r\n       </div>\r\n       <div class=\"filterDiv\">\r\n        <button mat-flat-button color=\"primary\" class=\"addNewBtn\" (click)=\"addNew()\" >ADD NEW\r\n        </button>\r\n      </div>\r\n     </div>\r\n   </div>\r\n   <div class=\"mat-elevation-z0\">\r\n     <mat-table class=\"w-full\" [dataSource]=\"dataSource\" matSort (matSortChange)=\"announceSortChange($event)\">\r\n  \r\n       <!-- <ng-container matColumnDef=\"roleCode\">\r\n         <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Bank Code\"> Role Code\r\n         </mat-header-cell>\r\n         <mat-cell *matCellDef=\"let element\"> {{element.roleCode}} </mat-cell>\r\n       </ng-container> -->\r\n  \r\n       <ng-container matColumnDef=\"roleName\">\r\n         <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Role Name\"> Role Name\r\n         </mat-header-cell>\r\n         <mat-cell *matCellDef=\"let element\"> {{element.roleName}} </mat-cell>\r\n       </ng-container>\r\n  \r\n       <ng-container matColumnDef=\"roleDesc\">\r\n         <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Role Description\">Role Description\r\n            </mat-header-cell>\r\n         <mat-cell *matCellDef=\"let element\"> {{element.roleDesc}} </mat-cell>\r\n       </ng-container>\r\n       <!-- <ng-container matColumnDef=\"childPermission\">\r\n        <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Currency 2\">Child Permission\r\n           </mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\"> {{element.childPermission}} </mat-cell>\r\n      </ng-container> -->\r\n       <ng-container matColumnDef=\"oneTimeAuth\">\r\n         <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by One Time Auth\"> One Time Auth\r\n          </mat-header-cell>\r\n         <mat-cell *matCellDef=\"let element\"> {{element.oneTimeAuth}} </mat-cell>\r\n       </ng-container>\r\n       <ng-container matColumnDef=\"authStatus\">\r\n         <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Auth Status\"> Auth Status\r\n          </mat-header-cell>\r\n         <mat-cell *matCellDef=\"let element\"> {{element.authStatus}} </mat-cell>\r\n       </ng-container>\r\n       <ng-container matColumnDef=\"recordStatus\">\r\n         <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Record Status\"> Record Status\r\n          </mat-header-cell>\r\n         <mat-cell *matCellDef=\"let element\"> {{element.recordStatus}} </mat-cell>\r\n       </ng-container>\r\n  \r\n       <ng-container matColumnDef=\"action\">\r\n         <mat-header-cell *matHeaderCellDef>Action</mat-header-cell>\r\n         <mat-cell *matCellDef=\"let element\">\r\n           <div>\r\n            <mat-icon class=\"actionIcons\" matTooltip=\"Edit\" (click)=\"openEdit(element)\" >edit</mat-icon>\r\n         </div>&nbsp;&nbsp;&nbsp;&nbsp;\r\n         <div>\r\n          <mat-icon class=\"actionIcons\" matTooltip=\"Delete\" (click)=\"deleteItem(element)\" >delete</mat-icon>\r\n         </div>\r\n         </mat-cell>\r\n       </ng-container>\r\n  \r\n       <mat-header-row *matHeaderRowDef=\"displayedColumns;\"></mat-header-row>\r\n       <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\r\n     </mat-table>\r\n     <mat-paginator class=\"mt-16\" [pageSizeOptions]=\"[10,20,30]\" showFirstLastButtons></mat-paginator>\r\n   </div>\r\n  </mat-card>\r\n     \r\n  \r\n\r\n\r\n\r\n","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { MatDialogRef, MatDialog } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Subscription } from 'rxjs';\r\nimport { AppConfirmService } from 'app/shared/services/app-confirm/app-confirm.service';\r\nimport { AppLoaderService } from 'app/shared/services/app-loader/app-loader.service';\r\nimport { TransactionTypePopupTableComponent } from '../transaction-type-table-popup/transaction-type-popup-table/transaction-type-popup-table.component';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\n\r\n@Component({\r\n  selector: 'app-transaction-type-crud-table',\r\n  templateUrl: './transaction-type-crud-table.component.html',\r\n  styleUrls: ['./transaction-type-crud-table.component.scss']\r\n})\r\nexport class TransactionTypeCrudTableComponent implements OnInit, OnDestroy {\r\n  public items: any[];\r\n  public getItemSub: Subscription;\r\n\r\n  constructor(\r\n    private dialog: MatDialog,\r\n    private snack: MatSnackBar,\r\n    private confirmService: AppConfirmService,\r\n    private loader: AppLoaderService,\r\n    private api : ApiService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getItems()\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.getItemSub) {\r\n      this.getItemSub.unsubscribe()\r\n    }\r\n  }\r\n  getItems() {\r\n   // this.items = transactionType;\r\n    this.getItemSub = this.api.fetchTransactionTypeInfo()\r\n      .subscribe(data => {\r\n        this.items = data;\r\n      })\r\n  }\r\n\r\n  openPopUp(data: any = {}, isNew?) {\r\n    console.log(\"data::\",data)\r\n    let title = isNew ? 'Add new Transaction Type' : 'Update Transaction Type';\r\n    let dialogRef: MatDialogRef<any> = this.dialog.open(TransactionTypePopupTableComponent, {\r\n      width: '720px',\r\n      disableClose: true,\r\n      data: { title: title, payload: data }\r\n    })\r\n    dialogRef.afterClosed()\r\n      .subscribe(res => {\r\n        if(!res) {\r\n          // If user press cancel\r\n          return;\r\n        }\r\n        this.loader.open();\r\n        if (isNew) {\r\n           this.api.upsertTransactionType(res).subscribe(response => {\r\n            this.loader.close();\r\n            this.getItems();\r\n            this.snack.open(`Record Added!'`, \"OK\", {\r\n              duration: 2000,\r\n              verticalPosition: \"top\",\r\n              horizontalPosition: \"right\",\r\n            });\r\n          });\r\n        } else {\r\n          this.api.upsertTransactionType(res).subscribe(response => {\r\n            this.loader.close();\r\n            this.getItems();\r\n            this.snack.open(`Record Updated!'`, \"OK\", {\r\n              duration: 2000,\r\n              verticalPosition: \"top\",\r\n              horizontalPosition: \"right\",\r\n            });\r\n          });\r\n        }\r\n      })\r\n  }\r\n\r\n  deleteItem(row) {\r\n    this.confirmService.confirm({message: `Delete ${row.transactionTypeCode}?`})\r\n      .subscribe(res => {\r\n        if (res) {\r\n          this.loader.open();\r\n          this.api.deleteTransactionType(row.transactionTypeId)\r\n            .subscribe(data => {\r\n              this.getItems();\r\n              this.loader.close();\r\n              this.snack.open('Record deleted!', 'OK', { duration: 4000 })\r\n            })\r\n        }\r\n      })\r\n  }\r\n}\r\n","<div fxLayout=\"row\" fxLayoutAlign=\"space-arround center\" class=\"ml-16\">\r\n    <span class=\"mat-heading-label \">Transaction Type Maintenance</span>\r\n    <span fxFlex></span>\r\n    <button mat-flat-button color=\"primary\" (click)=\"openPopUp({}, true)\" class=\"mr-38\">ADD TRANSACTION TYPE</button>\r\n  </div>\r\n  <mat-card class=\"p-0\" [@animate]=\"{value:'*',params:{y:'50px',delay:'300ms'}}\"> \r\n    <mat-card-content class=\"p-0\">\r\n      <ngx-datatable\r\n            class=\"material ml-0 mr-0\"\r\n            [rows]=\"items\"\r\n            [columnMode]=\"'force'\"\r\n            [headerHeight]=\"50\"\r\n            [footerHeight]=\"50\"\r\n            [scrollbarH]=\"true\"\r\n            [limit]=\"6\"\r\n            [rowHeight]=\"50\">\r\n            <ngx-datatable-column name=\"Code\" [flexGrow]=\"1\">\r\n              <ng-template let-row=\"row\" ngx-datatable-cell-template>\r\n                {{ row?.transactionTypeCode }}\r\n              </ng-template>\r\n            </ngx-datatable-column>\r\n            <ngx-datatable-column name=\"Name\" [flexGrow]=\"1\">\r\n                <ng-template let-row=\"row\" ngx-datatable-cell-template>\r\n                  {{ row?.transactionTypeName }}\r\n                </ng-template>\r\n              </ngx-datatable-column>\r\n              <ngx-datatable-column name=\"Description\" [flexGrow]=\"1\">\r\n                <ng-template let-row=\"row\" ngx-datatable-cell-template>\r\n                  {{ row?.transactionTypeDescription }}\r\n                </ng-template>\r\n              </ngx-datatable-column>\r\n            <ngx-datatable-column name=\"Status\" [flexGrow]=\"1\">\r\n              <ng-template let-row=\"row\" ngx-datatable-cell-template>\r\n                <mat-chip mat-sm-chip [color]=\"'primary'\" [selected]=\"row.isActive\">{{row.isActive ? 'active' : 'inactive'}}</mat-chip>\r\n              </ng-template>\r\n            </ngx-datatable-column>\r\n            <ngx-datatable-column name=\"Actions\" [flexGrow]=\"1\">\r\n              <ng-template let-row=\"row\" ngx-datatable-cell-template>\r\n                <button mat-icon-button mat-sm-button color=\"primary\" class=\"mr-16\" (click)=\"openPopUp(row)\"><mat-icon>edit</mat-icon></button>\r\n                <button mat-icon-button mat-sm-button color=\"warn\" (click)=\"deleteItem(row)\"><mat-icon>delete</mat-icon></button>\r\n              </ng-template>\r\n            </ngx-datatable-column>\r\n          </ngx-datatable>\r\n    </mat-card-content>\r\n  </mat-card>\r\n  ","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { FormBuilder, Validators, FormGroup } from '@angular/forms';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { Location } from '@angular/common';\r\nimport { ThisReceiver } from '@angular/compiler';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { DataService } from 'app/shared/services/data.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({ \r\n  selector: 'app-state-popup',\r\n  templateUrl: './state-popup.component.html',\r\n  styleUrls: ['./state-popup.component.scss']\r\n})\r\nexport class StatePopupComponent implements OnInit {\r\n  id: any;\r\n  isEdit: boolean = false;\r\n  showLoader : boolean = false;\r\n  isStatecode: boolean = false;\r\n  isStatecode2: boolean = false;\r\n  countryIsEdit : any;\r\n  countryId : any;\r\n  loggedInUser : any;\r\n  auditLogData : any;\r\n  selectedCountryCode:any;\r\n  readorWrite: boolean=true;\r\n\r\n\r\n  public stateMaintenance: FormGroup;\r\n  countryIdentity: any;\r\n\r\n  constructor(\r\n\r\n    private fb: FormBuilder,\r\n    private apiService: ApiService,\r\n    private _location: Location,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private dataService : DataService,\r\n    private ls : LocalStoreService,\r\n    private snack: MatSnackBar,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.route.queryParamMap.subscribe((params: any) => {\r\n      this.countryId = params.get('countryId');\r\n      this.countryIsEdit = params.get('countryIsEdit');\r\n      this.selectedCountryCode = params.get('selectedCountryCode');\r\n      this.apiService.getCountryById(params.get('countryId')).subscribe((resp:any) =>{\r\n        this.countryIdentity=resp.id;\r\n      });\r\n      if (params.get('id')) {\r\n        this.isEdit = true;\r\n        this.id = params.get('id');\r\n        this.apiService.getStateById(params.get('id')).subscribe((resp) => {\r\n          this.showLoader = true;\r\n          this.buildItemForm(resp);\r\n          this.showLoader = false;\r\n          this.auditLogData = resp;\r\n          this.dataService.setAuditLogData(this.auditLogData);\r\n        });\r\n      }\r\n      else {\r\n        this.readorWrite=false;\r\n        this.showLoader = true;\r\n        this.buildItemForm({});\r\n        this.showLoader = false;\r\n      }\r\n    }\r\n    );\r\n    this.loggedInUser = this.ls.getItem('ICUST_USER');\r\n  }\r\n  isStatePresent(data: any) {\r\n    this.apiService.isStateCodePresent(data).subscribe((respo) => {\r\n      if(respo == true){\r\n      this.isStatecode = true;\r\n      }else{\r\n        this.isStatecode = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  isStateCode2Present(data: any){\r\n    this.apiService.isStateCode2Present(data).subscribe((respo) => {\r\n      if(respo == true){\r\n      this.isStatecode2 = true;\r\n      }else{\r\n        this.isStatecode2 = false;\r\n      }\r\n    });\r\n\r\n  }\r\n  deleteRecord(operation){\r\n    Swal.fire(\r\n      {\r\n        //text: 'Unable to process' + 'Error ' + this.responseforfileupload.errorMessage + 'Do you want to Proceed??',\r\n        text: 'You are trying to '+ operation +' record.' + ' Do you want to proceed?',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        // confirmButtonText: 'PROCEED.'\r\n        cancelButtonText: 'NO',\r\n        confirmButtonText: 'YES', 'icon': 'info'\r\n      }\r\n    ).then((result => {\r\n      if(result.isConfirmed==true){\r\n        this.apiService.deleteState(this.auditLogData.id)\r\n        .subscribe(data => {\r\n         this.router.navigate([\"/maintenance/main/countryStatepopup\"],{ queryParams: { id: this.countryId, isEdit : this.countryIsEdit } });\r\n        },\r\n        err=>{\r\n          if (err.status == 200) {\r\n            this.snack.open('Record Deleted Successfully', 'OK', {\r\n              duration: 4000,\r\n              verticalPosition: 'top',\r\n              horizontalPosition: 'right'\r\n            });\r\n          }\r\n         this.router.navigate([\"/maintenance/main/countryStatepopup\"],{ queryParams: { id: this.countryId, isEdit : this.countryIsEdit } });\r\n        \r\n      })\r\n      }}))\r\n   \r\n         \r\n       \r\n  }\r\n  editRecord(){\r\n    this.readorWrite=false;\r\n  }\r\n\r\n  updateRecord(operation){\r\n    Swal.fire(\r\n      {\r\n        //text: 'Unable to process' + 'Error ' + this.responseforfileupload.errorMessage + 'Do you want to Proceed??',\r\n        text: 'You are trying to '+ operation +' record.' + ' Do you want to proceed?',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        // confirmButtonText: 'PROCEED.'\r\n        cancelButtonText: 'NO',\r\n        confirmButtonText: 'YES', 'icon': 'info'\r\n      }\r\n    ).then((result => {\r\n      if(result.isConfirmed==true){ \r\n        let payload : any = {};\r\n    payload.id = this.id;\r\n    payload.operation = operation;\r\n    payload.loggedInUser = this.loggedInUser.userName;\r\n    this.apiService.getAuditLogsForState(payload).subscribe((data) => {\r\n      this.auditLogData = data;\r\n      this.dataService.setAuditLogData(this.auditLogData);\r\n      this.dataService.sendClickEvent();\r\n      let message = '';\r\n      switch (operation) {\r\n        case 'open':\r\n          message = 'opened'\r\n          break;\r\n        case 'close':\r\n          message = 'closed'\r\n          break;\r\n        case 'auth':\r\n          message = 'authorized'\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n      this.snack.open(`Record ${message} successful!'`, \"OK\", {\r\n        duration: 2000,\r\n        verticalPosition: \"top\",\r\n        horizontalPosition: \"right\",\r\n      });\r\n    });\r\n      }}))\r\n    \r\n  }\r\n\r\n  submit(data: any) {\r\n    let details: any = {};\r\n    details = this.stateMaintenance.value;\r\n    details.id = this.id;\r\n    data.countryId=this.countryIdentity;\r\n    data.loggedInUser = this.loggedInUser.userName;\r\n\r\n    this.apiService.upsertStateDetails(data).subscribe((resp) => {\r\n      if (resp) {\r\n        this.router.navigate([\"/maintenance/main/countryStatepopup\"],{ queryParams: { id: this.countryId, isEdit : this.countryIsEdit } });\r\n      }\r\n    });\r\n  }\r\n\r\n  keyPressAlphanumeric(event) {\r\n    var inp = String.fromCharCode(event.keyCode);\r\n    if (/[0-9a-zA-Z]/.test(inp)) {\r\n      return true;\r\n    } else {\r\n      event.preventDefault();\r\n      return false;\r\n    }\r\n  }\r\n\r\n  buildItemForm(item) {\r\n    this.stateMaintenance = this.fb.group({\r\n      countryCode: [this.selectedCountryCode?this.selectedCountryCode:item.countryCode, Validators.required],\r\n      countryId: [this.countryId? this.countryId : item.countryId, Validators.required],\r\n      stateCode: [item.stateCode || '', Validators.required], //dropdown\r\n      stateName: [item.stateName || '', Validators.required],\r\n      stateCode2: [item.stateCode2 || '', Validators.required],  //dropdown\r\n      stateNumCode: [item.stateNumCode || '', Validators.required],\r\n      recordStatus: [item.recordStatus || '']\r\n    });\r\n  }\r\n\r\n  goBack() {\r\n    this.router.navigate([\"/maintenance/main/countryStatepopup\"],{ queryParams: { id: this.countryId, isEdit : this.countryIsEdit } });\r\n\r\n  }\r\n\r\n}\r\n","<h1 class=\"main-head\"><small class=\"small-head\">Home > Maintenance Summary > Country and State Maintenance > State Maintenance > <span *ngIf=\"!isEdit\">New</span><span *ngIf=\"isEdit\">Edit</span> State</small></h1>\r\n<div fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"mt-16\">\r\n    <button mat-icon-button (click)=\"goBack()\">\r\n        <mat-icon>arrow_back</mat-icon>\r\n      </button> \r\n      <span class=\"text-large\">\r\n        {{isEdit? 'Edit State' : 'New State'}}\r\n      </span>\r\n      <span fxFlex></span>\r\n      <button mat-button>\r\n        <mat-icon>edit</mat-icon>\r\n        Edit\r\n      </button>\r\n      <button\r\n      mat-button\r\n        type=\"button\"\r\n      >\r\n      <mat-icon>delete</mat-icon>\r\n        Delete\r\n      </button>\r\n   </div>\r\n\r\n   <mat-card >\r\n    <mat-card-content>\r\n      <!-- <span class=\"text-large\">\r\n        {{isEdit? 'Edit State' : 'New State'}}\r\n      </span> -->\r\n      <form [formGroup]=\"stateMaintenance\"  class=\"mt-32\">\r\n        <div fxLayout=\"row wrap\" fxLayout.lt-sm=\"column\">\r\n          <div fxFlex=\"33.33\" class=\"pr-16\">\r\n            <mat-label>Country Code <span class=\"pl-4 \">*</span></mat-label>\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n              \r\n              <input\r\n                matInput\r\n                maxlength=\"3\"\r\n                minlength=\"1\"\r\n                name=\"countryCode\"\r\n                readonly\r\n                (keypress)=keyPressAlphanumeric($event)\r\n                [formControl]=\"stateMaintenance.controls['countryCode']\"\r\n                \r\n              />\r\n            </mat-form-field>\r\n          </div>\r\n          <div fxFlex=\"33.33\" class=\"pr-16\">\r\n            <mat-label>State Code <span class=\"pl-4 \">*</span></mat-label>\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n              \r\n              <input\r\n              (keyup)=\"isStatePresent($event.target.value)\"\r\n                matInput\r\n                maxlength=\"2\"\r\n                minlength=\"1\" [readonly]=\"readorWrite\"\r\n                name=\"stateCode\"\r\n                (keypress)=keyPressAlphanumeric($event)\r\n                [formControl]=\"stateMaintenance.controls['stateCode']\"\r\n                \r\n              />\r\n            </mat-form-field>\r\n            <mat-error *ngIf=\"isStatecode\">this is an existing state code</mat-error>\r\n          </div>\r\n\r\n          <div fxFlex=\"33.33\" class=\"pr-16\">\r\n            <mat-label>State code 2 <span class=\"pl-4 \">*</span></mat-label>\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n              \r\n              <input\r\n                matInput\r\n                maxlength=\"3\"\r\n                minlength=\"1\" [readonly]=\"readorWrite\"\r\n                name=\"stateCode2\"\r\n                (keypress)=keyPressAlphanumeric($event)\r\n                [formControl]=\"stateMaintenance.controls['stateCode2']\"\r\n                \r\n              />\r\n            </mat-form-field>\r\n            <mat-error *ngIf=\"isStatecode2\">this is an existing state code 2</mat-error>\r\n          </div>\r\n      \r\n          <div fxFlex=\"33.33\" class=\"pr-16\">\r\n            <mat-label>State Name <span class=\"pl-4 \">*</span></mat-label>\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n              \r\n              <input\r\n                matInput\r\n                name=\"stateName\" [readonly]=\"readorWrite\"\r\n                (keypress)=keyPressAlphanumeric($event)\r\n                [formControl]=\"stateMaintenance.controls['stateName']\"\r\n                \r\n              />\r\n            </mat-form-field>\r\n          </div>\r\n      \r\n          <div fxFlex=\"33.33\" class=\"pr-16\">\r\n            <mat-label>State Numeric Code <span class=\"pl-4 \">*</span></mat-label>\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n              \r\n              <input\r\n                matInput\r\n                maxlength=\"3\" [readonly]=\"readorWrite\"\r\n                minlength=\"1\"\r\n                name=\"stateNumCode\"\r\n                (keypress)=keyPressAlphanumeric($event)\r\n                [formControl]=\"stateMaintenance.controls['stateNumCode']\"\r\n                \r\n              />\r\n            </mat-form-field>\r\n          </div>\r\n        </div>\r\n        <!-- <button *ngIf=\"!isEdit\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"submit(stateMaintenance.value)\" [disabled]=\"!(stateMaintenance.valid && stateMaintenance.dirty)\">\r\n          SAVE\r\n        </button> -->\r\n        <div fxLayout=\"row wrap\" fxLayout.lt-sm=\"column\">\r\n          <div fxFlex=\"100\" class=\"mt-16\" fxLayoutAlign=\"end center\">\r\n            <button mat-raised-button *ngIf=\"!isEdit\" color=\"primary\" [disabled]=\"stateMaintenance.invalid\" (click)=\"submit(stateMaintenance.value)\">SAVE</button>\r\n            &nbsp;\r\n            <div [hidden]=\"readorWrite\" >\r\n              <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\"  [disabled]= \"!(stateMaintenance.invalid || stateMaintenance.dirty)\"(click)=\"submit(stateMaintenance.value)\">\r\n                 Save\r\n                </button>&nbsp;&nbsp;\r\n            </div>\r\n            <div [hidden]=\"!readorWrite || auditLogData?.recordStatus == 'Close'\">\r\n              <button *ngIf=\"isEdit\" type=\"button\"  mat-raised-button color=\"primary\" (click)=\"editRecord()\">\r\n                Edit\r\n              </button>&nbsp;&nbsp;\r\n            </div>\r\n            <div *ngIf=\"auditLogData?.authStatus == 'Unauthorized' && readorWrite\" [hidden]=\"!readorWrite\">\r\n              <button *ngIf=\"isEdit\" type=\"button\"  mat-raised-button color=\"primary\" (click)=\"updateRecord('auth')\">\r\n                Authorize\r\n              </button>&nbsp;&nbsp;\r\n            </div> \r\n            <div *ngIf=\"auditLogData?.recordStatus == 'Close' && auditLogData?.oneTimeAuth != 'No'\" [hidden]=\"!readorWrite\">\r\n              <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"updateRecord('open')\">\r\n                Reopen\r\n              </button>&nbsp;&nbsp;\r\n            </div>\r\n            <div *ngIf=\"auditLogData?.recordStatus == 'Open' && auditLogData?.oneTimeAuth != 'No'\" [hidden]=\"!readorWrite\">\r\n              <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"updateRecord('close')\">\r\n                Close\r\n              </button>&nbsp;&nbsp;\r\n            </div>\r\n            <div *ngIf=\"auditLogData?.oneTimeAuth == 'No'\" [hidden]=\"!readorWrite\">\r\n              <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"deleteRecord('delete')\">\r\n                Delete\r\n              </button> &nbsp;&nbsp;\r\n            </div>\r\n           \r\n            <button\r\n              mat-raised-button\r\n              color=\"warn\"\r\n              type=\"button\"\r\n              (click)=\"goBack()\"\r\n            >\r\n              Exit\r\n            </button>\r\n  \r\n          </div>\r\n        </div>\r\n      </form>\r\n    </mat-card-content>\r\n  </mat-card>\r\n  <div *ngIf=\"auditLogData\" class=\"mt-32\">\r\n    <app-audit-log></app-audit-log>\r\n  </div>\r\n","import {\r\n  Component,\r\n  ElementRef,\r\n  OnInit,\r\n  ViewChild,\r\n  OnDestroy,\r\n} from \"@angular/core\";\r\nimport { MatDialog, MatDialogRef } from \"@angular/material/dialog\";\r\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\r\nimport { Router } from \"@angular/router\";\r\nimport { ApiService } from \"app/shared/services/api.service\";\r\nimport { AppConfirmService } from \"app/shared/services/app-confirm/app-confirm.service\";\r\nimport { AppLoaderService } from \"app/shared/services/app-loader/app-loader.service\";\r\nimport { DataService } from \"app/shared/services/data.service\";\r\nimport { Subscription } from \"rxjs\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort, Sort } from \"@angular/material/sort\";\r\nimport { LiveAnnouncer } from \"@angular/cdk/a11y\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { rumangoAnimations } from \"app/shared/animations/rumango-animations\";\r\nimport { DownloadService } from \"app/shared/services/download.service\";\r\n\r\nimport jsPDF from 'jspdf';\r\nimport autoTable from 'jspdf-autotable'\r\n@Component({\r\n  selector: \"app-till-vault-summary\",\r\n  templateUrl: \"./till-vault-summary.component.html\",\r\n  styleUrls: [\"./till-vault-summary.component.scss\"],\r\n  animations: rumangoAnimations\r\n})\r\nexport class TillVaultSummaryComponent implements OnInit {\r\n  @ViewChild(\"searchVal\") searchVal: ElementRef;\r\n  selectedFilterIndex: number = 0;\r\n  displayedColumns: string[] = ['entityCode','authStatus','recordStatus','action'];\r\n  filterByOption: { key: string; value: string }[] = [\r\n    { key: \"entityCode\", value: \"Entity Code\" },\r\n  ];\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n\r\n  dataSource = new MatTableDataSource();\r\n\r\n  public items: any[];\r\n  public users: any[];\r\n  currency: string[] = [];\r\n  till: any;\r\n  branchCode: string[] = [];\r\n  bankCode: string[] = [];\r\n  public getItemSub: Subscription;\r\n  fetchVaultConfig: any;\r\n  loading: boolean;\r\n  tillData: any;\r\n  data: any;\r\n  constructor(\r\n    private dialog: MatDialog,\r\n    private router: Router,\r\n    private dataService: DataService,\r\n    private snack: MatSnackBar,\r\n    private confirmService: AppConfirmService,\r\n    private loader: AppLoaderService,\r\n    private apiService: ApiService,\r\n    private _liveAnnouncer: LiveAnnouncer,\r\n    private downloadService: DownloadService\r\n  ) {}\r\n  download() {  \r\n    let doc = new jsPDF(); \r\n    const head = [['Entity Code', 'Auth Status', 'Record Status']] \r\n    const body=[];\r\n    \r\n    this.users.map(u=>{\r\n      var row = [];\r\n      row.push(u.entityCode);\r\n      row.push(u.authStatus);\r\n      row.push(u.recordStatus);\r\n      body.push(row)\r\n    });\r\n    autoTable(doc, {\r\n      head: head,\r\n      body: body,\r\n      didDrawCell: (prepare) => { },\r\n    });\r\n    doc.save('test.pdf');  \r\n  }\r\n  uploadtillvaultconfig(event) {\r\n\r\n    const file:File = event.path[0].files[0];\r\n      const uploadData = new FormData();\r\n      uploadData.append('screenType', \"tillVaultConfig\");\r\n      uploadData.append('file', file);\r\n      \r\n\r\n      this.apiService.getTillVaultConfigUpload(uploadData).subscribe(data => {\r\n        if(uploadData != null){\r\n          this.getvaultConfiguration();\r\n          this.snack.open('File Uploaded Successfully!', 'OK', {\r\n            duration: 4000,\r\n            verticalPosition: 'top',\r\n            horizontalPosition: 'right'\r\n          });\r\n       \r\n        }\r\n      \r\n      // this.getTillVaultConfig();\r\n      })\r\n      //  err => {\r\n      //   console.log(\"error\", err)\r\n      // }\r\n    }\r\n  \r\n    upload(){\r\n        \r\n    }\r\n  ngOnInit() {\r\n    this.getItems();\r\n    this.getTillId();\r\n    this.getvaultConfiguration();\r\n    this.getCurrency();\r\n    this.getBankCode();\r\n    this.getBranchCode();\r\n  }\r\n  ngOnDestroy() {\r\n    if (this.getItemSub) {\r\n      this.getItemSub.unsubscribe();\r\n    }\r\n  }\r\n  getItems() {\r\n    this.loading = true;\r\n    this.getItemSub = this.apiService.gettillVaultResp().subscribe((data:any) => {\r\n      for(let i=0;i<data.length;i++){\r\n        if(data[i].authStatus == 'U'){\r\n          data[i].authStatus = 'Unauthorized'\r\n        }\r\n        if(data[i].authStatus == 'A') {\r\n          data[i].authStatus = 'Authorized'\r\n        } \r\n        if(data[i].recordStatus == 'O'){\r\n          data[i].recordStatus = 'Open'\r\n        } \r\n        if(data[i].recordStatus == 'C'){\r\n          data[i].recordStatus = 'Closed'\r\n        }\r\n      }\r\n      this.items = data;\r\n      this.dataSource = new MatTableDataSource(data);\r\n      this.users = data;\r\n      console.log(this.dataSource);\r\n      this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n    });\r\n    this.loading = false;\r\n  }\r\n  // getTillVaultConfig(){\r\n  //   this.apiService.getTillVaultConfigUpload().subscribe((data: any) => {\r\n  //     this.users = data;\r\n  //     console.log(\"this.users::\", this.users);\r\n  //     this.items = this.users;\r\n  //     console.log(\"items4::\", this.items);\r\n  //     this.dataSource = new MatTableDataSource(data);\r\n  //     this.dataSource.paginator = this.paginator;\r\n  //     this.dataSource.sort = this.sort;\r\n  //   });\r\n  // }\r\n\r\n  doFilter(filterBy, e) {\r\n    this.filterTable(filterBy);\r\n    this.applyFilter(e);\r\n  }\r\n\r\n  filterTable(filterBy) {\r\n    this.dataSource.filterPredicate = (data: any, filter: string): boolean => {\r\n      return data[filterBy].toLocaleLowerCase().includes(filter);\r\n    };\r\n  }\r\n\r\n  clearFilter() {\r\n    this.dataSource.filter = \"\";\r\n    this.searchVal.nativeElement.value = \"\";\r\n    this.selectedFilterIndex = 0;\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n\r\n  announceSortChange(sortState: Sort) {\r\n    if (sortState.direction) {\r\n      this._liveAnnouncer.announce(`Sorted ${sortState.direction}ending`);\r\n    } else {\r\n      this._liveAnnouncer.announce(\"Sorting cleared\");\r\n    }\r\n  }\r\n\r\n  addNew() {\r\n    this.router.navigate([\"/maintenance/main/tillVaultConfig/add\"]);\r\n  }\r\n\r\n  openPopUp(row) {\r\n    this.getTillVaultConfigById(row);\r\n    // this.dataService.sendNavParam(this.fetchVaultConfig);\r\n    this.router.navigate([`/maintenance/main/tillVaultConfig/${row.id}`]);\r\n  }\r\n  tillVaultConfiguration(){\r\n    this.downloadService.downloadFiles(\"tillVaultConfiguration\",this.users);\r\n  }\r\n\r\n  deleteItem(row) {\r\n    this.confirmService\r\n      .confirm({ message: `Delete ${row.entityCode}?` })\r\n      .subscribe((res) => {\r\n        if (res) {\r\n          this.loader.open();\r\n          this.apiService.removetillVaultConfig(row.id).subscribe(\r\n            (res: any) => {},\r\n            (err: any) => {\r\n              (\"\");\r\n              console.log(err);\r\n              if (err.status == 200) {\r\n                this.loader.close();\r\n                this.getItems();\r\n                this.snack.open(\"Record deleted!\", \"OK\", { \r\n                  duration: 2000,\r\n                  verticalPosition: \"top\",\r\n                  horizontalPosition: \"right\",\r\n                 });\r\n              }\r\n            }\r\n          );\r\n        }\r\n      });\r\n  }\r\n\r\n  goBack() {\r\n    this.router.navigate([\"/maintenance/main\"]);\r\n  }\r\n\r\n  getvaultConfiguration() {\r\n    // this.loading = true;\r\n    this.apiService.gettillVaultResp().subscribe((resp) => {\r\n      console.log('resp',resp)\r\n      this.users = resp;\r\n      // this.items = this.users;\r\n      // this.loading = false;\r\n    });\r\n  }\r\n  getTillVaultConfigById(row) {\r\n    // this.loader.open();\r\n    this.apiService.fetchtillVaultConfigById(row.id).subscribe((resp) => {\r\n      this.data = resp;\r\n      if (this.data != null) {     \r\n\r\n        this.tillData = this.till.find((x) => x.id == this.data.tillId);\r\n        if (this.tillData != null) {\r\n          this.data.tillId = this.tillData.tillVaultCode;\r\n        }\r\n        this.fetchVaultConfig = this.data;\r\n      }\r\n      if (this.fetchVaultConfig != null) {\r\n        localStorage.setItem(\r\n          \"fetchVaultConfig\",\r\n          JSON.stringify(this.fetchVaultConfig)\r\n        );\r\n        //  this.loader.close();\r\n      }\r\n    });\r\n  }\r\n  getCurrency() {\r\n    this.apiService.getCountryValues().subscribe((resp) => {\r\n      this.currency = resp;\r\n    });\r\n  }\r\n  getBankCode() {\r\n    this.apiService.getBankCode().subscribe((resp) => {\r\n      this.bankCode = resp;\r\n    });\r\n  }\r\n  getBranchCode() {\r\n    this.apiService.getBranchCode().subscribe((resp) => {\r\n      this.branchCode = resp;\r\n    });\r\n  }\r\n  getTillId() {\r\n    let tillOrVault = \"T\";\r\n    this.apiService.getTillData(tillOrVault).subscribe((resp) => {\r\n      this.till = resp;\r\n    });\r\n  }\r\n\r\n  dataByfilterByOption(index,filter)\r\n{\r\n  return filter.value;\r\n}\r\n}\r\n","<h1 class=\"main-head\"><small class=\"small-head\">Home > Maintenance Summary > Till Vault Configuration Maintenance </small></h1>\r\n<div fxLayoutAlign=\"center\">\r\n  <mat-spinner *ngIf=\"loading\"></mat-spinner>\r\n</div>\r\n<div fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"mt-24\">\r\n  <button mat-icon-button (click)=\"goBack()\">\r\n    <mat-icon>arrow_back</mat-icon>\r\n  </button>\r\n  <span class=\"text-large\">\r\n    Till Vault Configuration Maintenance\r\n  </span>\r\n  </div>\r\n<mat-card class=\"mt-32\">\r\n  <div>\r\n    <table style=\"margin: 18px;\">\r\n      <tr>\r\n        <td>\r\n          <h2>\r\n            Configurations\r\n          </h2>\r\n        </td>\r\n      </tr>\r\n      <tr>\r\n        <td>\r\n          <div class=\"highlight\">\r\n          </div>\r\n        </td>\r\n      </tr>\r\n    </table>  \r\n    <span fxFlex></span>\r\n  <button mat-icon-button [matMenuTriggerFor]=\"menu\">\r\n    <mat-icon>more_vert</mat-icon>\r\n  </button>\r\n  <mat-menu #menu=\"matMenu\">\r\n    <button mat-menu-item>\r\n      <input style=\"display: none;\"\r\n      type=\"file\" name=\"documentUrl\"\r\n      #documentUrl \r\n      (change)=\"uploadtillvaultconfig($event)\">\r\n      <a \r\n      (click)=\"documentUrl.click()\"\r\n      [routerLink]=\"\">Export</a>\r\n    </button>\r\n    <button mat-menu-item (click)=\"tillVaultConfiguration()\" >\r\n      <span>Download</span>\r\n    </button>\r\n  </mat-menu>\r\n  </div>\r\n  <mat-card-content>\r\n    <div fxLayout=\"row\" class=\"w-full\" fxLayoutAlign=\"space-arround center\" class=\"ml-16 mt-32\">\r\n      <div fxLayout=\"row\" class=\"w-full\" fxLayoutGap=\"10px\">\r\n        <div>\r\n          <mat-form-field appearance=\"outline\">\r\n            <mat-label>Filter By</mat-label>\r\n            <mat-select name=\"filterBy\" #filterBy [(ngModel)]=\"selectedFilterIndex\" placeholder=\"Filter By\">\r\n              <!-- <mat-select name=\"filterBy\" #filterBy [(ngModel)]=\"selectedFilterIndex\"> -->\r\n              <mat-option value=\"0\">Select</mat-option>\r\n              <mat-option *ngFor=\"let filter of filterByOption; trackBy:dataByfilterByOption\" value=\"{{filter.key}}\">\r\n                {{filter.value}}\r\n              </mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n        </div>\r\n        <div>\r\n          <mat-form-field appearance=\"outline\">\r\n            <mat-label>Search</mat-label>\r\n            <input matInput #searchVal (keyup)=\"doFilter(filterBy.value,$event)\" placeholder=\"Search\">\r\n            <!-- <input matInput #searchVal (keyup)=\"doFilter(filterBy.value,$event)\"> -->\r\n            <mat-icon matSuffix>search</mat-icon>\r\n          </mat-form-field>\r\n        </div>\r\n        <div *ngIf=\"searchVal.value || filterBy.value\" class=\"resetDiv\">\r\n          <button mat-stroked-button class=\"clearBtn\" (click)=\"clearFilter()\">RESET\r\n          </button>\r\n        </div>\r\n        <div class=\"filterDiv\">\r\n         <button mat-flat-button color=\"primary\" class=\"addNewBtn\" (click)=\"addNew()\" >ADD NEW\r\n         </button>\r\n       </div>\r\n      \r\n    </div>\r\n    </div>\r\n    <div class=\"mat-elevation-z0\">\r\n      <mat-table class=\"w-full\" [dataSource]=\"dataSource\" matSort (matSortChange)=\"announceSortChange($event)\">\r\n        <ng-container matColumnDef=\"entityCode\">\r\n          <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by state code\"> Entity\r\n            Code\r\n          </mat-header-cell>\r\n          <mat-cell *matCellDef=\"let element\"> {{element.entityCode}} </mat-cell>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"authStatus\">\r\n          <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Auth Status\"> Auth Status\r\n          </mat-header-cell>\r\n          <mat-cell *matCellDef=\"let element\"> {{element.authStatus}} </mat-cell>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"recordStatus\">\r\n          <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Record Status\"> Record\r\n            Status\r\n          </mat-header-cell>\r\n          <mat-cell *matCellDef=\"let element\"> {{element.recordStatus}} </mat-cell>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"action\">\r\n          <mat-header-cell *matHeaderCellDef>Action</mat-header-cell>\r\n          <mat-cell *matCellDef=\"let element\">\r\n            <div>\r\n             <mat-icon class=\"actionIcons\" matTooltip=\"Edit\" (click)=\"openPopUp(element,'Yes')\"  >edit</mat-icon>\r\n          </div>&nbsp;&nbsp;&nbsp;&nbsp;\r\n          <div>\r\n           <mat-icon class=\"actionIcons\" matTooltip=\"Delete\" [disabled]=\"element.oneTimeAuth =='Y'\" (click)=\"deleteItem(element)\" >delete</mat-icon>\r\n          </div>\r\n          </mat-cell>\r\n        </ng-container>\r\n\r\n        <mat-header-row *matHeaderRowDef=\"displayedColumns;\"></mat-header-row>\r\n        <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\r\n      </mat-table>\r\n      <mat-paginator class=\"mt-16\" [pageSizeOptions]=\"[5, 10, 20]\" aria-label=\"Select page of users\"></mat-paginator>\r\n    </div>\r\n    <!-- <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\" aria-label=\"Select page of users\"></mat-paginator> -->\r\n  </mat-card-content>\r\n</mat-card>","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { Card } from 'app/views/maintenance/main-home/main-home.component';\r\nconst { isArray } = Array;\r\n\r\n@Pipe({\r\n  name: 'filter'\r\n})\r\nexport class FilterPipe implements PipeTransform {\r\n  transform(DATA: Card[], title: string): Card[] {\r\n    if(!DATA ) return [];\r\n    if(!title) return DATA;\r\n    title = title.toLowerCase();\r\n    console.log(DATA, title);\r\n    return search( DATA, title);\r\n   }\r\n}\r\n\r\nfunction search(entries: any[], search: string) {\r\n\r\n  search = search.toLowerCase();\r\n\r\n  return entries.filter(function (obj) {\r\n    const keys: string[] = Object.keys(obj);\r\n    return keys.some(function (key) {\r\n      const value = obj.title;\r\n      console.log(obj[key]);\r\n      if (isArray(value)) {\r\n        return value.some(v => {\r\n          return v.toLowerCase().includes(search);\r\n        });\r\n      }\r\n      else if (!isArray(value)) {\r\n        return value.toLowerCase().includes(search);\r\n      }\r\n    })\r\n  });\r\n}\r\n","import { ChangeDetectorRef, Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { addTax } from 'app/shared/models/addtaxchrg';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { DataService } from 'app/shared/services/data.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport * as moment from 'moment';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-add-txncharges',\r\n  templateUrl: './add-txncharges.component.html',\r\n  styleUrls: ['./add-txncharges.component.scss']\r\n})\r\nexport class AddTxnchargesComponent implements OnInit {\r\n  addTxnChargesForm:FormGroup;\r\n  isEdit: boolean = false;\r\n  isReadOnly: boolean = true;\r\n  id: number;\r\n  chargeCurrencyArr: string[]=[];\r\n  loggedInUser : string;\r\n  auditData : addTax;\r\n  isAuditData : boolean = false;\r\n  minDate = new Date();\r\n  readorWrite: boolean=true;\r\n // chargeCurrencyArr: string[] = ['INR', 'Dollar', '\tEUR','GBP'];\r\n\r\n  constructor(private formBuilder: FormBuilder,private apiService:ApiService,\r\n    private router:Router,private snack: MatSnackBar, private route : ActivatedRoute, private ls: LocalStoreService, private dataService: DataService,\r\n    private cdr: ChangeDetectorRef) { this.addTxnChargesForm = this.formBuilder.group({\r\n    chargeAmount: [ '',[Validators.required]],\r\n    chargeCurrency: [ '',[Validators.required]],\r\n    chargeDesc: [ '',[Validators.required]],\r\n    txnDate: [ '',[Validators.required]],\r\n    txnReference: [ ''],\r\n    id: [ ''],\r\n    loggedInuser : [''],\r\n\r\n\r\n  })}\r\n\r\n  ngOnInit(): void {\r\n    this.getCountrynameValues();\r\n    this.route.queryParamMap.subscribe((params: any) => {\r\n      if(params.get('id')){\r\n        this.isEdit = true;\r\n        this.id = params.get('id');\r\n        this.apiService.getTxnChargesById(params.get('id')).subscribe((resp) =>{\r\n           this.buildItemForm(resp);\r\n           this.auditData =resp;\r\n           this.isEdit = true;\r\n           this.isAuditData = true;\r\n           this.dataService.setAuditLogData(this.auditData);\r\n           this.dataService.sendClickEvent();\r\n        });\r\n      }\r\n      else{\r\n        this.readorWrite=false;\r\n        this.buildItemForm({});\r\n      }\r\n    }\r\n    );\r\n    this.loggedInUser = this.ls.getItem('ICUST_USER').userName;\r\n  }\r\n  getCountrynameValues() {\r\n    // this.apiService.getCountryValues().subscribe((allCountryValues: any) => {\r\n    //   this.chargeCurrencyArr = allCountryValues;\r\n    // });\r\n    this.apiService.getCurrencyDetails().subscribe(data=>{\r\n      console.log(\"Auth currecy details\", data)\r\n      for(let i=0; i<data.length;i++){\r\n        this.chargeCurrencyArr.push(data[i].currencyId)\r\n      }\r\n      console.log(this.chargeCurrencyArr);\r\n    })\r\n  }\r\n  buildItemForm(item) {\r\n    if(item.txnDate){\r\n      item.txnDate = item ? moment(item.txnDate).format() : '';\r\n    }\r\n    this.addTxnChargesForm = this.formBuilder.group({\r\n      chargeAmount: [item.chargeAmount || '',[Validators.required]],\r\n      chargeCurrency: [item.chargeCurrency ||'',[Validators.required]],\r\n      chargeDesc: [item.chargeDesc ||'',[Validators.required]],\r\n      id: [ item.id ||''],\r\n      txnDate: [item.txnDate ||'',[Validators.required]],\r\n      txnReference: [item.txnReference ||''],\r\n      loggedInuser : [item.loggedInUser || ''],\r\n\r\n    })\r\n  }\r\n  goBack(){\r\n    this.router.navigate([\"/maintenance/main/transactionCharges\"]);\r\n  }\r\n  deleteRecord(operation){\r\n    Swal.fire(\r\n      {\r\n        //text: 'Unable to process' + 'Error ' + this.responseforfileupload.errorMessage + 'Do you want to Proceed??',\r\n        text: 'You are trying to '+ operation +' record.' + ' Do you want to proceed?',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        // confirmButtonText: 'PROCEED.'\r\n        cancelButtonText: 'NO',\r\n        confirmButtonText: 'YES', 'icon': 'info'\r\n      }\r\n    ).then((result => {\r\n      if(result.isConfirmed==true){\r\n        this.apiService.deleteTxnChargesById(this.auditData.id)\r\n        .subscribe(data => {\r\n          this.router.navigate([\"/maintenance/main/transactionCharges\"]);\r\n        },\r\n        err=>{\r\n          if (err.status == 200) {\r\n            this.snack.open('Record Deleted Successfully', 'OK', {\r\n              duration: 4000,\r\n              verticalPosition: 'top',\r\n              horizontalPosition: 'right'\r\n            });\r\n          }\r\n          this.router.navigate([\"/maintenance/main/transactionCharges\"]);\r\n        \r\n      })\r\n      }}))\r\n   \r\n         \r\n       \r\n  }\r\n  editRecord(){\r\n    this.readorWrite=false;\r\n  }\r\n\r\n  updateRecord(operation) {\r\n    Swal.fire(\r\n      {\r\n        //text: 'Unable to process' + 'Error ' + this.responseforfileupload.errorMessage + 'Do you want to Proceed??',\r\n        text: 'You are trying to '+ operation +' record.' + ' Do you want to proceed?',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        // confirmButtonText: 'PROCEED.'\r\n        cancelButtonText: 'NO',\r\n        confirmButtonText: 'YES', 'icon': 'info'\r\n      }\r\n    ).then((result => {\r\n      if(result.isConfirmed==true){\r\n        let payload: any = {};\r\n    payload.id = this.id;\r\n    payload.operation = operation;\r\n    payload.loggedInUser = this.loggedInUser;\r\n    this.apiService.getAuditLogsForTransactioncharge(payload).subscribe((data) => {\r\n      this.auditData = data;\r\n      this.dataService.setAuditLogData(this.auditData);\r\n      this.isAuditData = true;\r\n      this.dataService.sendClickEvent();\r\n      let message = '';\r\n      switch (operation) {\r\n        case 'open':\r\n          message = 'opened'\r\n          break;\r\n        case 'close':\r\n          message = 'closed'\r\n          break;\r\n        case 'auth':\r\n          message = 'authorized'\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n      this.snack.open(`Record ${message} successful!'`, \"OK\", {\r\n        duration: 2000,\r\n        verticalPosition: \"top\",\r\n        horizontalPosition: \"right\",\r\n      });\r\n    });\r\n      }}))\r\n    \r\n  }\r\n  submit(){\r\n    \r\n    // let now = new Date();\r\n    let startDate = this.convertDate(this.addTxnChargesForm.controls.txnDate.value);\r\n    this.addTxnChargesForm.value['txnDate'] = startDate;\r\n    // now=this.addTxnChargesForm.value.txnDate;\r\n    // var dateStringWithTime = moment(now).format('YYYY-MMM-DD HH:MM:SS');\r\n    this.addTxnChargesForm.value.loggedInUser = this.loggedInUser;\r\n\r\n    this.addTxnChargesForm.value.chargeAmount=parseInt(this.addTxnChargesForm.value.chargeAmount)\r\n    this.addTxnChargesForm.value.id=parseInt(this.addTxnChargesForm.value.id)\r\n   \r\n    let payload={\r\n      chargeAmount: this.addTxnChargesForm.value.chargeAmount,\r\n      chargeCurrency: this.addTxnChargesForm.value.chargeCurrency,\r\n      chargeDesc: this.addTxnChargesForm.value.chargeDesc,\r\n      txnDate : this.addTxnChargesForm.value.txnDate,\r\n      // txnDate:dateStringWithTime,\r\n      id:this.addTxnChargesForm.value.id,\r\n      txnReference: this.addTxnChargesForm.value.txnReference,\r\n      loggedInUser: this.loggedInUser,\r\n      //txnId:101,\r\n\r\n    }\r\n  \r\n  this.apiService.updateTxnChargeDetails(payload).subscribe(response => {\r\n    if(response != null && this.isEdit){\r\n      this.snack.open(`Record Updated!'`, \"OK\", {\r\n        duration: 2000,\r\n        verticalPosition: \"top\",\r\n        horizontalPosition: \"right\",\r\n      });\r\n      this.cdr.markForCheck();\r\n    }\r\n    else if(response != null && !this.isEdit){\r\n      this.snack.open(`Record Saved!'`, \"OK\", {\r\n        duration: 2000,\r\n        verticalPosition: \"top\",\r\n        horizontalPosition: \"right\",\r\n      });\r\n      this.cdr.markForCheck();\r\n    }\r\n    this.router.navigate([\"/maintenance/main/transactionCharges\"]);\r\n  });\r\n \r\n  \r\n  }\r\n\r\n  convertDate(value) {\r\n    let date = moment(value).format('YYYY-MMM-DD');\r\n    // let date = moment(value).format('YYYY-MM-DDThh:mm:ss');\r\n    if (date)\r\n      return date;\r\n  }\r\n\r\n    dataByCharge(index,chargeCurrency){\r\n    return chargeCurrency.currencyCode;\r\n  }\r\n}\r\n","<h1 class=\"main-head\" *ngIf=\"!isEdit\"><small class=\"small-head\">Home > Maintenance Summary >Add Transaction Charge Maintenance > Add Transaction Charge</small></h1>\r\n<h1 class=\"main-head\" *ngIf=\"isEdit\"><small class=\"small-head\">Home > Maintenance Summary > Edit Transaction Charge Maintenance > Edit Transaction Charge</small></h1>\r\n<div fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"mt-16\">\r\n    <button mat-icon-button (click)=\"goBack()\" >\r\n        <mat-icon>arrow_back</mat-icon>\r\n    </button>\r\n    <h1 *ngIf=\"!isEdit\" class=\"add-text\">Add Transaction Charge </h1>\r\n    <h1 *ngIf=\"isEdit\" class=\"add-text\">Edit Transaction Charge </h1>\r\n    <!-- <span class=\"text-large\">\r\n        Edit Country\r\n      </span>\r\n      <span fxFlex></span>\r\n      <button mat-button>\r\n        <mat-icon>edit</mat-icon>\r\n        Edit\r\n      </button>\r\n      <button\r\n      mat-button\r\n        type=\"button\"\r\n      >\r\n      <mat-icon>delete</mat-icon>\r\n        Delete\r\n      </button> -->\r\n</div>\r\n\r\n<mat-card>\r\n    <mat-card-content><!--(ngSubmit)=\"submit()\"-->\r\n        <form [formGroup]=\"addTxnChargesForm\"   class=\"m-333\">\r\n            <!-- <h1 *ngIf=\"!isEdit\">Add Transaction Charge</h1>\r\n            <h1 *ngIf=\"isEdit\">Edit Transaction Charge</h1> -->\r\n            <!-- <div fxLayout=\"row wrap\" fxLayout.lt-sm=\"column\"> -->\r\n                <div fxLayoutAlign=\"space-between center\" fxLayoutGap=\"15px\">\r\n                    <div fxFlex=\"33.33\">\r\n                        <mat-label>Charge Ammount *</mat-label>\r\n                        <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                            <input [readonly]=\"readorWrite\"\r\n                                matInput name=\"chargeAmount\"\r\n                                maxlength=\"6\"\r\n                                type=\"number\"\r\n                                formControlName=\"chargeAmount\"\r\n                            />\r\n                                  <!--<mat-error *ngIf=\"BranchHolidayForm.get('entityCode').hasError('required')\">\r\n                                     Entity Code is Required!\r\n                                  </mat-error>-->\r\n                        </mat-form-field>\r\n                    </div>\r\n\r\n                    <div fxFlex=\"33.33\" *ngIf=\"!readorWrite\">\r\n                        <mat-label>Charge Currency *</mat-label>\r\n                        <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                            <mat-select formControlName=\"chargeCurrency\"\r\n                            required >\r\n                              <mat-option *ngFor=\"let chargeCurrency of chargeCurrencyArr ; trackBy:dataByCharge\" [value]=\"chargeCurrency.currencyCode\"  >\r\n                                {{chargeCurrency.currencyCode}}\r\n                              </mat-option>\r\n                            </mat-select>\r\n                           <!--<mat-error *ngIf=\"BranchHolidayForm.get('bankCode').hasError('required')\">\r\n                                Entity Name is Required!\r\n                            </mat-error>-->\r\n                        </mat-form-field>\r\n                    </div>\r\n                    <div fxFlex=\"33.33\" *ngIf=\"readorWrite\">\r\n                      <mat-label>Charge Currency *</mat-label>\r\n                      <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                        <input [readonly]=\"readorWrite\"\r\n                                matInput name=\"chargeDesc\"\r\n                                type=\"text\"\r\n                                formControlName=\"chargeCurrency\" required />\r\n                         <!--<mat-error *ngIf=\"BranchHolidayForm.get('bankCode').hasError('required')\">\r\n                              Entity Name is Required!\r\n                          </mat-error>-->\r\n                      </mat-form-field>\r\n                    </div>\r\n\r\n                    <div fxFlex=\"33.33\">\r\n                        <mat-label>Charge Description *</mat-label>\r\n                        <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                            <input [readonly]=\"readorWrite\"\r\n                                matInput name=\"chargeDesc\"\r\n                                type=\"text\"\r\n                                formControlName=\"chargeDesc\" required />\r\n                            \r\n                            <!--<mat-error *ngIf=\"BranchHolidayForm.get('branchCode').hasError('required')\">\r\n                                Branch Code is Required!\r\n                            </mat-error>-->\r\n                        </mat-form-field>\r\n                        \r\n                    </div>\r\n\r\n                </div>\r\n                <div  fxLayout=\"row\">\r\n                  \r\n                    <div fxFlex=\"33.33\" class=\"pr-16\">\r\n                        <mat-label>Transaction Date *</mat-label>\r\n                        <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                            <input matInput [matDatepicker]=\"appDatepicker\" \r\n                            [min]=\"minDate\"  \r\n                            name=\"date\" readonly formControlName=\"txnDate\" \r\n                            placeholder=\"DD/MM/YYYY\">\r\n                            <mat-datepicker-toggle matSuffix [for]=\"appDatepicker\" ></mat-datepicker-toggle>\r\n                            <mat-datepicker #appDatepicker ></mat-datepicker>\r\n                            <!--<mat-error *ngIf=\"BranchHolidayForm.get('transactionDate').hasError('required') && BranchHolidayForm.get('transactionDate').touched\">\r\n                                Branch Code is Required!\r\n                            </mat-error>-->\r\n                        </mat-form-field>\r\n                        \r\n                    </div>\r\n                    <div fxFlex=\"33.33\" class=\"pr-16\">\r\n                        <mat-label>Transaction Reference</mat-label>\r\n                        <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                            <input  [readonly]=\"readorWrite\"\r\n                                matInput name=\"txnReference\"\r\n                                type=\"text\"\r\n                                formControlName=\"txnReference\"\r\n                            />\r\n                            <!--<mat-error *ngIf=\"BranchHolidayForm.get('branchCode').hasError('required')\">\r\n                                Branch Code is Required!\r\n                            </mat-error>-->\r\n                        </mat-form-field>\r\n                        \r\n                    </div>\r\n                    \r\n                </div>\r\n\r\n\r\n                \r\n            <!-- </div> -->\r\n            <div fxLayout=\"row wrap\" fxLayout.lt-sm=\"column\">\r\n              <div fxFlex=\"100\" class=\"mt-16\" fxLayoutAlign=\"end center\">\r\n                <button mat-raised-button *ngIf=\"!isEdit\" color=\"primary\" [disabled]=\"addTxnChargesForm.invalid\" (click)=\"submit()\">SAVE</button>\r\n                &nbsp;\r\n                <div [hidden]=\"readorWrite\" >\r\n                  <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\"  [disabled]= \"!(addTxnChargesForm.invalid || addTxnChargesForm.dirty)\"(click)=\"submit()\">\r\n                     Save\r\n                    </button>&nbsp;&nbsp;\r\n                </div>\r\n                <div [hidden]=\"!readorWrite || auditData?.recordStatus == 'Close'\">\r\n                  <button *ngIf=\"isEdit\" type=\"button\"  mat-raised-button color=\"primary\" (click)=\"editRecord()\">\r\n                    Edit\r\n                  </button>&nbsp;&nbsp;\r\n                </div>\r\n                <div *ngIf=\"auditData?.authStatus == 'Unauthorized' && readorWrite\" [hidden]=\"!readorWrite\">\r\n                  <button *ngIf=\"isEdit\" type=\"button\"  mat-raised-button color=\"primary\" (click)=\"updateRecord('auth')\">\r\n                    Authorize\r\n                  </button>&nbsp;&nbsp;\r\n                </div> \r\n                <div *ngIf=\"auditData?.recordStatus == 'Close' && auditData?.oneTimeAuth != 'No'\" [hidden]=\"!readorWrite\">\r\n                  <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"updateRecord('open')\">\r\n                    Reopen\r\n                  </button>&nbsp;&nbsp;\r\n                </div>\r\n                <div *ngIf=\"auditData?.recordStatus == 'Open' && auditData?.oneTimeAuth != 'No'\" [hidden]=\"!readorWrite\">\r\n                  <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"updateRecord('close')\">\r\n                    Close\r\n                  </button>&nbsp;&nbsp;\r\n                </div>\r\n                <div *ngIf=\"auditData?.oneTimeAuth == 'No'\" [hidden]=\"!readorWrite\">\r\n                  <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"deleteRecord('delete')\">\r\n                    Delete\r\n                  </button> &nbsp;&nbsp;\r\n                </div>\r\n               \r\n                <button\r\n                  mat-raised-button\r\n                  color=\"warn\"\r\n                  type=\"button\"\r\n                  (click)=\"goBack()\"\r\n                >\r\n                  Exit\r\n                </button>\r\n      \r\n              </div>\r\n            </div>\r\n        </form>\r\n\r\n        \r\n    </mat-card-content>\r\n</mat-card>\r\n\r\n<div class=\"mt-32\">\r\n    <app-audit-log *ngIf=\"isAuditData\" #auditLog></app-audit-log>\r\n  </div>\r\n","import { LiveAnnouncer } from '@angular/cdk/a11y';\r\nimport { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MatSort, Sort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { Router } from '@angular/router';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { AppConfirmService } from 'app/shared/services/app-confirm/app-confirm.service';\r\n\r\n@Component({\r\n  selector: 'app-product-maintenance',\r\n  templateUrl: './product-maintenance.component.html',\r\n  styleUrls: ['./product-maintenance.component.scss']\r\n})\r\nexport class ProductMaintenanceComponent implements OnInit {\r\n  @ViewChild('searchVal') searchVal: ElementRef;\r\n  selectedFilterIndex : number = 0;\r\n\r\n  dataSource = new MatTableDataSource();\r\n  displayedColumns: string[] = ['bankCode', 'entityCode', 'productCode', 'productName',  'oneTimeAuth', 'authStatus', 'recordStatus', 'action'];\r\n\r\n  filterByOption: { key: string, value: string }[] = [\r\n    { key: 'productCode', value: 'Product Code' },\r\n    { key: 'productName', value: 'Product Name' },\r\n    { key: 'entityCode', value: 'Entity Code' },\r\n  ];\r\n\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  users: string[] = [];\r\n  public items: string[];\r\n\r\n  constructor(private router:Router,private snack: MatSnackBar,\r\n    private apiService:ApiService,private confirmService: AppConfirmService,\r\n    private _liveAnnouncer: LiveAnnouncer) { }\r\n\r\n    ngOnInit(): void {\r\n      this.getProductInfo();\r\n      this.getItems();\r\n    }\r\n\r\n    onFileChange(event) {\r\n      console.log('event', event.path[0].files[0]);\r\n      const file: File = event.path[0].files[0];\r\n      const uploadData = new FormData();\r\n      uploadData.append('screenType', 'product');\r\n      uploadData.append('file', file);\r\n      this.apiService.uploadExelFile(uploadData).subscribe((response) => {\r\n        console.log(response);\r\n        this.getProductInfo();\r\n        this.snack.open(`File Uploaded Successfully`, \"OK\", {\r\n          duration: 4000,\r\n          verticalPosition: \"top\",\r\n          horizontalPosition: \"right\",\r\n        });\r\n        this.getProductInfo();\r\n      });\r\n    }\r\n    getItems() {\r\n      this.items = this.users;\r\n    }\r\n    getProductInfo(){\r\n      this.apiService.getProductDetails().subscribe((data: any) => {\r\n        for(let i=0;i<data.length;i++){\r\n          if(data[i].authStatus == 'U'){\r\n            data[i].authStatus = 'Unauthorized'\r\n          }\r\n          if(data[i].authStatus == 'A') {\r\n            data[i].authStatus = 'Authorized'\r\n          } \r\n          if(data[i].recordStatus == 'O'){\r\n            data[i].recordStatus = 'Open'\r\n          } \r\n          if(data[i].recordStatus == 'C'){\r\n            data[i].recordStatus = 'Closed'\r\n          }\r\n        }\r\n        this.users = data;\r\n        this.items = this.users;\r\n        this.dataSource = new MatTableDataSource(data);\r\n        this.dataSource.paginator = this.paginator;\r\n        this.dataSource.sort = this.sort;\r\n      });\r\n    }\r\n  doFilter(filterBy, e){\r\n    this.filterTable(filterBy);\r\n    this.applyFilter(e);\r\n  }\r\n  \r\n  filterTable(filterBy) {\r\n   \r\n    this.dataSource.filterPredicate = (data: any, filter: string): boolean => {\r\n      if(data[filterBy] !=null){\r\n      return (\r\n        data[filterBy].trim().toLocaleLowerCase().includes(filter)\r\n      )}\r\n    }\r\n  }\r\n  \r\n  clearFilter(){\r\n    this.dataSource.filter = '';\r\n    this.searchVal.nativeElement.value = '';\r\n    this.selectedFilterIndex = 0;\r\n   }\r\n \r\n \r\n   applyFilter(event: Event) {\r\n     \r\n     const filterValue = (event.target as HTMLInputElement).value;\r\n     this.dataSource.filter = filterValue.trim().toLocaleLowerCase();\r\n   }\r\n   announceSortChange(sortState: Sort) {\r\n     if (sortState.direction) {\r\n       this._liveAnnouncer.announce(`Sorted ${sortState.direction}ending`);\r\n     } else {\r\n       this._liveAnnouncer.announce('Sorting cleared');\r\n     }\r\n   }\r\n   addNew(){\r\n    this.router.navigate([\"/maintenance/main/product/addProduct\"]);\r\n  }\r\n  openEdit(data: any = {},isEdit : string) {  \r\n    this.router.navigate([\"/maintenance/main/product/addProduct\"],{ queryParams: { id: data.id, isEdit : isEdit } });\r\n  }\r\n  goBack(){\r\n    this.router.navigate([\"/maintenance/main\"]);\r\n  }\r\n  deleteItem(element) {\r\n    this.confirmService.confirm({message: `Delete  ${element.productName}?`})\r\n      .subscribe(res => {\r\n        if (res) {\r\n          this.apiService.deleteProductById(element.id)\r\n            .subscribe(data => {\r\n            },\r\n              err=>{\r\n                if (err.status == 200) {\r\n                  this.snack.open('Record Deleted Successfully', 'OK', {\r\n                    duration: 4000,\r\n                    verticalPosition: 'top',\r\n                    horizontalPosition: 'right'\r\n                  });\r\n                }\r\n                this.getProductInfo();\r\n            })\r\n        }\r\n      });\r\n  }\r\n  dataByFilter(index,item){\r\n    return item.key\r\n  }\r\n}\r\n","<h1 class=\"main-head\"><small class=\"small-head\">Home > Maintenance Summary > Product Maintenance  </small></h1>\r\n  <div fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"mt-24\">\r\n    <button mat-icon-button (click)=\"goBack()\">\r\n        <mat-icon>arrow_back</mat-icon>\r\n      </button> \r\n      <span class=\"text-large\">\r\n        Product Maintenance\r\n      </span>\r\n  </div>\r\n  \r\n  \r\n  \r\n  <mat-card class=\"mt-32\">\r\n   <div fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"mt-24\">\r\n    \r\n    <table>\r\n      <tr>\r\n        <td>\r\n          <h2>\r\n            Product Maintenance \r\n          </h2>\r\n        </td>\r\n      </tr>\r\n      <tr>\r\n        <td>\r\n          <div class=\"highlight\">\r\n          </div>\r\n        </td>\r\n      </tr>\r\n    </table>\r\n       <span fxFlex></span>\r\n       <button mat-icon-button [matMenuTriggerFor]=\"menu\">\r\n         <mat-icon>more_vert</mat-icon>\r\n       </button>\r\n       <mat-menu #menu=\"matMenu\">\r\n    <div class=\"upload_botton\">\r\n      <button type=\"button\" mat-menu-item>Upload</button>\r\n      <input\r\n        type=\"file\"\r\n        accept=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\"\r\n        class=\"btn btn-success\"\r\n        (change)=\"onFileChange($event)\"\r\n      />\r\n    </div>\r\n         <button mat-menu-item>\r\n           <span>Download</span>\r\n         </button>\r\n       </mat-menu>\r\n    </div>\r\n   <div class=\"w-full\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n     <div class=\"w-full\" fxLayout=\"row\" fxLayoutGap='20px'>\r\n       <div>\r\n         <mat-form-field appearance=\"fill\">\r\n           <mat-label>Filter By</mat-label>\r\n           <mat-select name=\"filterBy\" #filterBy [(ngModel)]=\"selectedFilterIndex\" placeholder=\"Filter By\">\r\n            <!-- <mat-select name=\"filterBy\" #filterBy [(ngModel)]=\"selectedFilterIndex\"> -->\r\n             <mat-option value=\"0\">Select</mat-option>\r\n             <mat-option *ngFor=\"let filter of filterByOption; trackBy:dataByFilter\" value=\"{{filter.key}}\">\r\n               {{filter.value}}\r\n             </mat-option>\r\n           </mat-select>\r\n         </mat-form-field>\r\n       </div>\r\n       <div>\r\n         <mat-form-field appearance=\"fill\">\r\n           <mat-label>Search</mat-label>\r\n           <input matInput #searchVal (keyup)=\"doFilter(filterBy.value,$event)\" placeholder=\"Search\">\r\n           <!-- <input matInput #searchVal (keyup)=\"doFilter(filterBy.value,$event)\"> -->\r\n           <mat-icon matSuffix>search</mat-icon>\r\n         </mat-form-field>\r\n       </div>\r\n       <div style=\"padding-top: 3px;\">\r\n         <button mat-flat-button color=\"warn\" (click)=\"clearFilter()\" style=\"height: 45px;\">Clear Filter</button>\r\n       </div>\r\n       <div>\r\n        <button mat-flat-button color=\"primary\" class=\"mr-38\" (click)=\"addNew()\"  style=\"height: 45px; margin-left: 15cm;\" >ADD NEW\r\n\r\n            </button>\r\n      </div>\r\n     </div>\r\n   </div>\r\n   <div class=\"mat-elevation-z0\">\r\n     <mat-table class=\"w-full\" [dataSource]=\"dataSource\" matSort (matSortChange)=\"announceSortChange($event)\">\r\n  \r\n       <ng-container matColumnDef=\"bankCode\">\r\n         <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Bank Code\"> Bank Code\r\n         </mat-header-cell>\r\n         <mat-cell *matCellDef=\"let element\"> {{element.bankCode}} </mat-cell>\r\n       </ng-container>\r\n  \r\n       <ng-container matColumnDef=\"entityCode\">\r\n         <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Entity Code\"> Entity Code\r\n         </mat-header-cell>\r\n         <mat-cell *matCellDef=\"let element\"> {{element.entityCode}} </mat-cell>\r\n       </ng-container>\r\n  \r\n       <ng-container matColumnDef=\"productCode\">\r\n         <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Product Code\">Product Code\r\n            </mat-header-cell>\r\n         <mat-cell *matCellDef=\"let element\"> {{element.productCode}} </mat-cell>\r\n       </ng-container>\r\n       <ng-container matColumnDef=\"productName\">\r\n        <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Product Name\">Product Name\r\n           </mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\"> {{element.productName}} </mat-cell>\r\n      </ng-container>\r\n       <ng-container matColumnDef=\"oneTimeAuth\">\r\n         <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by One Time Auth\"> One Time Auth\r\n          </mat-header-cell>\r\n         <mat-cell *matCellDef=\"let element\"> {{element.oneTimeAuth}} </mat-cell>\r\n       </ng-container>\r\n       <ng-container matColumnDef=\"authStatus\">\r\n         <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Auth Status\"> Auth Status\r\n          </mat-header-cell>\r\n         <mat-cell *matCellDef=\"let element\"> {{element.authStatus}} </mat-cell>\r\n       </ng-container>\r\n       <ng-container matColumnDef=\"recordStatus\">\r\n         <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Record Status\"> Record Status\r\n          </mat-header-cell>\r\n         <mat-cell *matCellDef=\"let element\"> {{element.recordStatus}} </mat-cell>\r\n       </ng-container>\r\n  \r\n       <ng-container matColumnDef=\"action\">\r\n         <mat-header-cell *matHeaderCellDef>Action</mat-header-cell>\r\n         <mat-cell *matCellDef=\"let element\">\r\n         <button mat-icon-button mat-sm-button color=\"primary\" class=\"mr-16\" (click)=\"openEdit(element)\">\r\n          <mat-icon>edit</mat-icon>\r\n        </button>\r\n         <button mat-icon-button mat-sm-button color=\"warn\" [disabled]=\"element.oneTimeAuth =='Y'\"\r\n              (click)=\"deleteItem(element)\">\r\n              <mat-icon>delete</mat-icon>\r\n            </button>\r\n         </mat-cell>\r\n       </ng-container>\r\n  \r\n       <mat-header-row *matHeaderRowDef=\"displayedColumns;\"></mat-header-row>\r\n       <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\r\n     </mat-table>\r\n     <mat-paginator [pageSizeOptions]=\"[10,20,30]\" showFirstLastButtons></mat-paginator>\r\n   </div>\r\n  </mat-card>\r\n     \r\n  \r\n\r\n\r\n\r\n","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\nimport { MatDialogRef, MatDialog } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\n// import { NgxTablePopupComponent } from './ngx-table-popup/ngx-table-popup.component';\r\nimport { Subscription } from 'rxjs';\r\nimport { rumangoAnimations } from 'app/shared/animations/rumango-animations';\r\nimport { AppConfirmService } from 'app/shared/services/app-confirm/app-confirm.service';\r\nimport { AppLoaderService } from 'app/shared/services/app-loader/app-loader.service';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport {MatSort, Sort} from '@angular/material/sort';\r\nimport {LiveAnnouncer} from '@angular/cdk/a11y';\r\n\r\nimport { Router } from '@angular/router';\r\nimport { FormBuilder, Validators, FormGroup } from '@angular/forms';\r\nimport { DownloadService } from 'app/shared/services/download.service';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-entity-maintenance',\r\n  templateUrl: './entity-maintenance.component.html',\r\n  styleUrls: ['./entity-maintenance.component.scss'],\r\n  animations: rumangoAnimations\r\n})\r\nexport class EntityMaintenanceComponent implements OnInit {\r\n\r\n  @ViewChild('searchVal') searchVal: ElementRef;\r\n  selectedFilterIndex : number = 0;\r\n\r\n  public entityMaintenance: FormGroup;\r\n  public items: any[];\r\n  public userData: any[];\r\n  public getItemSub: Subscription;\r\n  currentUser: any;\r\n  loading: boolean;\r\n  dataSource = new MatTableDataSource();\r\n  displayedColumns: string[] = ['entityCode', 'entityName', 'denomRequired','authStatus','recordStatus','action'];\r\n\r\n  filterByOption: { key: string, value: string }[] = [\r\n    { key: 'entityCode', value: 'Entity Code' },\r\n    { key: 'entityName', value: 'Entity Name' }\r\n  ];\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n\r\n  constructor(\r\n    private snack: MatSnackBar,\r\n    private confirmService: AppConfirmService,\r\n    private apiService: ApiService,\r\n    private router:Router,\r\n    private _liveAnnouncer: LiveAnnouncer,\r\n    private downloadService: DownloadService\r\n  \r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.loading = true;\r\n    this.getItemSub = this.apiService.fetchEntityDetails().subscribe(data => {\r\n      this.items = data;\r\n      this.fetchEntityDetails();\r\n      this.loading = false;\r\n    })\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.getItemSub) {\r\n      this.getItemSub.unsubscribe();\r\n    }\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n  onFileChange(event) {\r\n    console.log('event', event.path[0].files[0]);\r\n    const file: File = event.path[0].files[0];\r\n    const uploadData = new FormData();\r\n    // uploadData.append('screenType', 'entity/list');\r\n    uploadData.append('screenType', 'entity');\r\n    uploadData.append('file', file);\r\n    this.apiService.uploadExelFile(uploadData).subscribe((response) => { \r\n      console.log(response);\r\n      this.fetchEntityDetails();\r\n      this.snack.open(`File Uploaded Successfully`, \"OK\", {\r\n        duration: 4000,\r\n        verticalPosition: \"top\",\r\n        horizontalPosition: \"right\",\r\n      });\r\n      this.fetchEntityDetails();\r\n    });\r\n  }\r\n  \r\n  fetchEntityDetails() {\r\n    this.getItemSub = this.apiService.fetchEntityDetails()\r\n      .subscribe(data => {\r\n        for(let i=0;i<data.length;i++){\r\n          if(data[i].authStatus == 'U'){\r\n            data[i].authStatus = 'Unauthorized'\r\n          }\r\n          if(data[i].authStatus == 'A') {\r\n            data[i].authStatus = 'Authorized'\r\n          } \r\n          if(data[i].recordStatus == 'O'){\r\n            data[i].recordStatus = 'Open'\r\n          } \r\n          if(data[i].recordStatus == 'C'){\r\n            data[i].recordStatus = 'Closed'\r\n          }\r\n        }\r\n        this.dataSource = new MatTableDataSource(data);\r\n        this.userData = data;\r\n        console.log(this.dataSource);\r\n        this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n      })\r\n  }\r\n\r\n  addNew() {\r\n    this.router.navigate([\"/maintenance/main/entity/add\"]);\r\n  }\r\n  entityMaintenancePage(){\r\n    this.downloadService.downloadFiles(\"entityMaintenance\",this.userData);\r\n\r\n\r\n  }\r\n\r\n  // deleteItem(row) {\r\n  //   this.confirmService.confirm({ message: `Delete ${row.entityName}?` })\r\n  //     .subscribe(res => {\r\n  //       if (res) {\r\n\r\n  //         this.apiService.deleteEntity(row.id)\r\n  //           .subscribe(data => {\r\n  //           },\r\n  //             err => {\r\n  //               if (err.status == 200) {\r\n  //                 this.snack.open('Record Deleted Successfully', 'OK', {\r\n  //                   duration: 4000,\r\n  //                   verticalPosition: 'top',\r\n  //                   horizontalPosition: 'right'\r\n  //                 });\r\n  //               }\r\n  //               this.fetchEntityDetails();\r\n\r\n  //             })\r\n  //       }\r\n\r\n  //     });\r\n  // }\r\n\r\n  // openPopUp(data: any = {}, isNew?) {\r\n  //   this.router.navigate([\"/maintenance/main/entity/edit/1\"]);\r\n  // }\r\n\r\n  goBack() {\r\n    this.router.navigate([`/maintenance/main`]);\r\n  }\r\n  doFilter(filterBy, e){\r\n    this.filterTable(filterBy);\r\n    this.applyFilter(e);\r\n  }\r\n  filterTable(filterBy) {\r\n    this.dataSource.filterPredicate = (data: any, filter: string): boolean => {\r\n      return (\r\n        data[filterBy].toLocaleLowerCase().includes(filter)\r\n      )\r\n    }\r\n  }\r\n  clearFilter(){\r\n    this.dataSource.filter = '';\r\n    this.searchVal.nativeElement.value = '';\r\n    this.selectedFilterIndex = 0;\r\n   }\r\n   applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n  announceSortChange(sortState: Sort) {\r\n    if (sortState.direction) {\r\n      this._liveAnnouncer.announce(`Sorted ${sortState.direction}ending`);\r\n    } else {\r\n      this._liveAnnouncer.announce('Sorting cleared');\r\n    }\r\n    \r\n  }\r\n  openPopUp(data: any = {},isEdit : string) {\r\n    this.router.navigate([\"/maintenance/main/entity/add\"],{ queryParams: { id: data.id, isEdit : isEdit } });\r\n  }\r\n  deleteItem(row) {\r\n    console.log(row)\r\n    this.confirmService.confirm({message: `Are you sure? You want to delete?`})\r\n      .subscribe(res => {\r\n        if (res) {\r\n        \r\n          this.apiService.deleteEntity(row.id)\r\n            .subscribe(data => {\r\n            },\r\n            err=>{\r\n              if (err.status == 200) {\r\n                this.snack.open('Record Deleted Successfully', 'OK', {\r\n                  duration: 4000,\r\n                  verticalPosition: 'top',\r\n                  horizontalPosition: 'right'\r\n                });\r\n              }\r\n            this.fetchEntityDetails();\r\n            \r\n          })\r\n        }\r\n      })\r\n  }\r\n}\r\n","<h1 class=\"main-head\"><small class=\"small-head\">Home > Maintenance Summary > Entity Maintenance </small></h1>\r\n<div fxLayoutAlign=\"center\">\r\n  <mat-spinner *ngIf=\"loading\"></mat-spinner>\r\n</div>\r\n<div fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"mt-24\">\r\n  <button mat-icon-button (click)=\"goBack()\">\r\n    <mat-icon>arrow_back</mat-icon>\r\n  </button>\r\n  <span class=\"text-large\">\r\n    Entity Maintenance\r\n  </span>\r\n</div>\r\n\r\n<mat-card class=\"mt-32\">\r\n  <div>\r\n    <table style=\"margin: 18px;\">\r\n      <tr>\r\n        <td>\r\n          <h2>\r\n            Entities\r\n          </h2>\r\n        </td>\r\n      </tr>\r\n      <tr>\r\n        <td>\r\n          <div class=\"highlight\">\r\n          </div>\r\n        </td>\r\n      </tr>\r\n    </table>  \r\n  <span fxFlex></span>\r\n  <button mat-icon-button [matMenuTriggerFor]=\"menu\">\r\n    <mat-icon>more_vert</mat-icon>\r\n  </button>\r\n  <mat-menu #menu=\"matMenu\">\r\n    <div class=\"upload_botton\">\r\n      <button type=\"button\" mat-menu-item>Upload</button>\r\n      <input\r\n        type=\"file\"\r\n        accept=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\"\r\n        class=\"btn btn-success\"\r\n        (change)=\"onFileChange($event)\"\r\n      />\r\n    </div>\r\n    <button (click)=\"entityMaintenancePage()\" mat-menu-item>\r\n      <span>Download</span>\r\n    </button>\r\n  </mat-menu>\r\n</div>\r\n  <mat-card-content>\r\n    <div fxLayout=\"row\" class=\"w-full\" fxLayoutAlign=\"space-arround center\" class=\"ml-16 mt-32\">\r\n      <div fxLayout=\"row\" class=\"w-full\" fxLayoutGap=\"10px\">\r\n        <div>\r\n          <mat-form-field appearance=\"outline\">\r\n            <mat-label>Filter By</mat-label>\r\n            <mat-select name=\"filterBy\" #filterBy [(ngModel)]=\"selectedFilterIndex\" placeholder=\"Filter By\">\r\n              <!-- <mat-select name=\"filterBy\" #filterBy [(ngModel)]=\"selectedFilterIndex\"> -->\r\n              <mat-option value=\"0\">Select</mat-option>\r\n              <mat-option *ngFor=\"let filter of filterByOption\" value=\"{{filter.key}}\">\r\n                {{filter.value}}\r\n              </mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n        </div>\r\n        <div>\r\n          <mat-form-field appearance=\"outline\">\r\n            <mat-label>Search</mat-label>\r\n            <input matInput #searchVal (keyup)=\"doFilter(filterBy.value,$event)\" placeholder=\"Search\">\r\n            <!-- <input matInput #searchVal (keyup)=\"doFilter(filterBy.value,$event)\"> -->\r\n            <mat-icon matSuffix>search</mat-icon>\r\n          </mat-form-field>\r\n        </div>      \r\n      <div *ngIf=\"searchVal.value || filterBy.value\" class=\"resetDiv\">\r\n        <button mat-stroked-button class=\"clearBtn\" (click)=\"clearFilter()\">RESET\r\n        </button>\r\n      </div>\r\n      <div class=\"filterDiv\">\r\n       <button mat-flat-button color=\"primary\" class=\"addNewBtn\" (click)=\"addNew()\" >ADD NEW\r\n       </button>\r\n     </div>\r\n\r\n\r\n    </div>\r\n    </div>\r\n    <div class=\"mat-elevation-z0\">\r\n      <mat-table class=\"w-full\" [dataSource]=\"dataSource\" matSort (matSortChange)=\"announceSortChange($event)\">\r\n        <ng-container matColumnDef=\"entityCode\">\r\n          <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by state code\"> Entity\r\n            Code\r\n          </mat-header-cell>\r\n          <mat-cell *matCellDef=\"let element\"> {{element.entityCode}} </mat-cell>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"entityName\">\r\n          <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by state name\"> Entity Name\r\n          </mat-header-cell>\r\n          <mat-cell *matCellDef=\"let element\"> {{element.entityName}} </mat-cell>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"denomRequired\">\r\n          <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by state code 2\"> Denomination\r\n            Required\r\n          </mat-header-cell>\r\n          <mat-cell *matCellDef=\"let element\"> {{element.denomRequired}} </mat-cell>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"authStatus\">\r\n          <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Auth Status\"> Auth Status\r\n          </mat-header-cell>\r\n          <mat-cell *matCellDef=\"let element\"> {{element.authStatus}} </mat-cell>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"recordStatus\">\r\n          <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Record Status\"> Record\r\n            Status\r\n          </mat-header-cell>\r\n          <mat-cell *matCellDef=\"let element\"> {{element.recordStatus}} </mat-cell>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"action\">\r\n          <mat-header-cell *matHeaderCellDef>Action</mat-header-cell>\r\n          <mat-cell *matCellDef=\"let element\">\r\n            <div>\r\n             <mat-icon class=\"actionIcons\" matTooltip=\"Edit\" (click)=\"openPopUp(element,'Yes')\" >edit</mat-icon>\r\n          </div>&nbsp;&nbsp;&nbsp;&nbsp;\r\n          <div>\r\n           <mat-icon class=\"actionIcons\" matTooltip=\"Delete\" [disabled]=\"element.oneTimeAuth =='Y'\"  (click)=\"deleteItem(element)\" >delete</mat-icon>\r\n          </div>\r\n          </mat-cell>\r\n        </ng-container>\r\n\r\n        <mat-header-row *matHeaderRowDef=\"displayedColumns;\"></mat-header-row>\r\n        <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\r\n      </mat-table>\r\n      <mat-paginator class=\"mt-16\" [pageSizeOptions]=\"[5, 10, 20]\" aria-label=\"Select page of users\"></mat-paginator>\r\n    </div>\r\n  </mat-card-content>\r\n</mat-card>","import { ChangeDetectorRef, Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { DataService } from 'app/shared/services/data.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport * as moment from 'moment';\r\n\r\n@Component({\r\n  selector: 'app-add-branch',\r\n  templateUrl: './add-branch.component.html',\r\n  styleUrls: ['./add-branch.component.scss']\r\n})\r\nexport class AddBranchComponent implements OnInit {\r\n  bankCodeArr:string[]=['BRDS1NCH','SBI2NJ','BOB66SS','SBI44GH','SBI21SJ'];\r\n  entityCodeArr:string[]=['BRDS1NCH','SBI2NJ','BOB66SS','SBI44GH','SBI21SJ'];\r\n  branchCodeArr:string[]=['SBIN123','SBIN231','ABCN212','ABC235','AB879'];\r\n  branchCode:string[]=[];\r\n  BranchHolidayForm: FormGroup;\r\n  isEdit: boolean = false;\r\n  isReadOnly: boolean = true;\r\n  id: any;\r\n  loggedInUser : string;\r\n  auditData : any;\r\n  isAuditData : boolean = false;\r\n  show = false;\r\n\r\n  constructor(private formBuilder: FormBuilder,private apiService:ApiService,\r\n    private router:Router,private snack: MatSnackBar, private route : ActivatedRoute,\r\n    private dataService : DataService,    private ls : LocalStoreService,\r\n    \r\n    private cdr: ChangeDetectorRef) { this.BranchHolidayForm = this.formBuilder.group({\r\n      branchCode: [ '',[Validators.required]],\r\n      transactionDate: ['',[Validators.required]],\r\n      bankCode: ['',[Validators.required]],\r\n      year:[''],\r\n      id: [ ''],\r\n      \r\n      entityCode: ['',[Validators.required]],\r\n\r\n    })}\r\n\r\n  ngOnInit(): void {\r\n    //this.getBranchCode(); \r\n    //this.buildItemForm();\r\n    this.route.queryParamMap.subscribe((params: any) => {\r\n      if(params.get('id')){\r\n        this.isEdit = true;\r\n        this.id = params.get('id');\r\n        this.apiService.editeditBranchHoliday(params.get('id')).subscribe((resp) =>{\r\n           this.buildItemForm(resp);\r\n           this.auditData = resp\r\n          this.isAuditData = true;\r\n          this.dataService.setAuditLogData(this.auditData);\r\n          console.log(\"this.auditData\", this.auditData)\r\n        });\r\n      }\r\n      else{\r\n        this.buildItemForm({});\r\n      }\r\n    }\r\n    );\r\n    this.loggedInUser = this.ls.getItem('ICUST_USER').userName;\r\n  }\r\n  getBranchCode() {\r\n    this.apiService.getBranchCode().subscribe((resp) => {\r\n      this.branchCode = resp;\r\n    });\r\n  }\r\n  goBack(){\r\n   this.router.navigate([\"/maintenance/main/holiday/BranchHoliday\"]);\r\n  }\r\n\r\n  updateRecord(operation) {\r\n    let payload: any = {};\r\n    payload.id = this.id;\r\n    payload.operation = operation;\r\n    payload.loggedInUser = this.loggedInUser;\r\n    this.apiService.getAuditLogsForHolidayBranch(payload).subscribe((data) => {\r\n      this.auditData = data;\r\n      this.dataService.setAuditLogData(this.auditData);\r\n      this.isAuditData = true;\r\n      this.dataService.sendClickEvent();\r\n      let message = '';\r\n      switch (operation) {\r\n        case 'open':\r\n          message = 'opened'\r\n          break;\r\n        case 'close':\r\n          message = 'closed'\r\n          break;\r\n        case 'auth':\r\n          message = 'authorized'\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n      this.snack.open(`Record ${message} successful!'`, \"OK\", {\r\n        duration: 2000,\r\n        verticalPosition: \"top\",\r\n        horizontalPosition: \"right\",\r\n      });\r\n    });\r\n  }\r\n\r\n  buildItemForm(item) {\r\n\r\n    this.BranchHolidayForm = this.formBuilder.group({\r\n      branchCode: [item.branchCode || '',[Validators.required]],\r\n      transactionDate: [item.transactionDate ||'',[Validators.required]],\r\n      bankCode: [item.bankCode ||'',[Validators.required]],\r\n      year:[''],\r\n      id: [ item.id ||''],\r\n      \r\n      entityCode: [ item.entityCode ||'',[Validators.required]],\r\n\r\n    })\r\n  }\r\n  submit(){\r\n    \r\n    let now = new Date();\r\n    now=this.BranchHolidayForm.value.transactionDate;\r\n    var dateStringWithTime = moment(now).format('YYYY-MM-DD HH:MM:SS');\r\n    console.log(this.BranchHolidayForm.value)\r\n    console.log(dateStringWithTime)\r\n   var convertedyear=dateStringWithTime.slice(0,4);\r\n   var convertMonth=dateStringWithTime.slice(5,7);\r\n   var conv1Month= parseInt(convertMonth);\r\n   var convertCalender=dateStringWithTime.slice(8,10);\r\n   var conv1Calender= parseInt(convertCalender);\r\n  \r\n    let payload=[{\r\n      entityCode: this.BranchHolidayForm.value.entityCode,\r\n      bankCode: this.BranchHolidayForm.value.bankCode,\r\n      branchCode: this.BranchHolidayForm.value.branchCode,\r\n      transactionDate:this.BranchHolidayForm.value.transactionDate,\r\n      calenderYear:convertedyear,\r\n      id:this.BranchHolidayForm.value.id,\r\n      calenderMonth:conv1Month,\r\n      calenderDate:dateStringWithTime\r\n\r\n    }\r\n  ]\r\n  this.apiService.updateBranchHolidayDetails(payload,false).subscribe(response => {\r\n    if(response != null){\r\n      this.snack.open(`Record Added!'`, \"OK\", {\r\n        duration: 2000,\r\n        verticalPosition: \"top\",\r\n        horizontalPosition: \"right\",\r\n      });\r\n      this.cdr.markForCheck();\r\n    }\r\n    this.router.navigate([\"/maintenance/main/holiday/BranchHoliday\"]);\r\n  });\r\n  \r\n\r\n  \r\n  }\r\n  dataByEntity(index,entityC){\r\n    return entityC.entityCode;\r\n  }\r\n  dataByBank(index,bankC){\r\n    return bankC.bankCode;\r\n  }\r\n  dataByBranch(index,branch){\r\n    return branch.branchCode;\r\n  }\r\n\r\n}\r\n","<div fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"mt-16\">\r\n    <button mat-icon-button (click)=\"goBack()\">\r\n        <mat-icon>arrow_back</mat-icon>\r\n    </button>\r\n    <!-- <span class=\"text-large\">\r\n        Edit Country\r\n      </span>\r\n      <span fxFlex></span>\r\n      <button mat-button>\r\n        <mat-icon>edit</mat-icon>\r\n        Edit\r\n      </button>\r\n      <button\r\n      mat-button\r\n        type=\"button\"\r\n      >\r\n      <mat-icon>delete</mat-icon>\r\n        Delete\r\n      </button> -->\r\n</div>\r\n\r\n<mat-card>\r\n    <mat-card-content><!--(ngSubmit)=\"submit()\"-->\r\n        <form [formGroup]=\"BranchHolidayForm\"   class=\"m-333\">\r\n            <h1 *ngIf=\"!isEdit\">Add Branch Specific Holiday</h1>\r\n            <h1 *ngIf=\"isEdit\">Edit Branch Specific Holiday</h1>\r\n            <!-- <div fxLayout=\"row wrap\" fxLayout.lt-sm=\"column\"> -->\r\n                <div fxLayoutAlign=\"space-between center\" fxLayoutGap=\"15px\">\r\n                    <div fxFlex=\"33.33\">\r\n                        <mat-label>Entity Code *</mat-label>\r\n                        <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                            <mat-select formControlName=\"entityCode\"\r\n                              required >\r\n                               <mat-option *ngFor=\"let entityCode of entityCodeArr; trackBy:dataByEntity\" [value]=\"entityCode\"  >\r\n                                  {{entityCode}}\r\n                                </mat-option>\r\n                             </mat-select>\r\n                                  <mat-error *ngIf=\"BranchHolidayForm.get('entityCode').hasError('required')\">\r\n                                     Entity Code is Required!\r\n                                  </mat-error>\r\n                        </mat-form-field>\r\n                    </div>\r\n\r\n                    <div fxFlex=\"33.33\">\r\n                        <mat-label>Bank Code *</mat-label>\r\n                        <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                            <mat-select formControlName=\"bankCode\"\r\n                            required >\r\n                              <mat-option *ngFor=\"let bankCode of bankCodeArr; trackBy:dataByBank\" [value]=\"bankCode\"  >\r\n                                {{bankCode}}\r\n                              </mat-option>\r\n                            </mat-select>\r\n                           <mat-error *ngIf=\"BranchHolidayForm.get('bankCode').hasError('required')\">\r\n                                Entity Name is Required!\r\n                            </mat-error>\r\n                        </mat-form-field>\r\n                    </div>\r\n\r\n                    <div fxFlex=\"33.33\">\r\n                        <mat-label>Branch Code</mat-label>\r\n                        <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                            <mat-select formControlName=\"branchCode\"\r\n                            required >\r\n                            <mat-option *ngFor=\"let branchCode of branchCodeArr; trackBy:dataByBranch\" [value]=\"branchCode\">\r\n                              {{branchCode}}\r\n                            </mat-option>\r\n                            </mat-select>\r\n                            <mat-error *ngIf=\"BranchHolidayForm.get('branchCode').hasError('required')\">\r\n                                Branch Code is Required!\r\n                            </mat-error>\r\n                        </mat-form-field>\r\n                        \r\n                    </div>\r\n\r\n                </div>\r\n                <div fxLayoutAlign=\"space-between center\" fxLayoutGap=\"15px\">\r\n                  \r\n                    <div fxFlex=\"33.33\">\r\n                        <mat-label>Calendar*</mat-label>\r\n                        <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                            <input matInput [matDatepicker]=\"appDatepicker\"   name=\"date\" readonly formControlName=\"transactionDate\" placeholder=\"DD/MM/YYYY\">\r\n                            <mat-datepicker-toggle matSuffix [for]=\"appDatepicker\" ></mat-datepicker-toggle>\r\n                            <mat-datepicker #appDatepicker ></mat-datepicker>\r\n                            <mat-error *ngIf=\"BranchHolidayForm.get('transactionDate').hasError('required') && BranchHolidayForm.get('transactionDate').touched\">\r\n                                Branch Code is Required!\r\n                            </mat-error>\r\n                        </mat-form-field>\r\n                        \r\n                    </div>\r\n                </div>\r\n\r\n\r\n                \r\n            <!-- </div> -->\r\n            <div fxLayout=\"row wrap\" fxLayout.lt-sm=\"column\">\r\n                <div fxFlex=\"100\" class=\"mt-16\" fxLayoutGap=\"10px\" fxLayoutAlign=\"end center\">\r\n                  <button *ngIf=\"!isEdit\" \r\n                    color=\"primary\" \r\n                    mat-raised-button \r\n                    (click)=\"submit()\"\r\n                    [disabled]=\"!(BranchHolidayForm.valid && BranchHolidayForm.dirty)\"\r\n                  >\r\n                    SAVE\r\n                  </button>\r\n                  \r\n                 \r\n                 <button *ngIf=\"isEdit\"  type=\"button\" mat-raised-button color=\"primary\"\r\n                 [disabled]=\"!(BranchHolidayForm.valid && BranchHolidayForm.dirty)\"  (click)=\"submit()\">\r\n                    UPDATE\r\n                  </button>\r\n            \r\n                  <div *ngIf=\"auditData?.recordStatus == 'C'\">\r\n                    <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"updateRecord('open')\">\r\n                      Open\r\n                    </button>\r\n                  </div>\r\n                  <div *ngIf=\"auditData?.recordStatus == 'O'\">\r\n                    <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"updateRecord('close')\">\r\n                      Close\r\n                    </button>\r\n                  </div>\r\n                  <div *ngIf=\"auditData?.authStatus == 'U'\">\r\n                    <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"updateRecord('auth')\">\r\n                      Authorize\r\n                    </button>\r\n                  </div>\r\n                  \r\n                  <button\r\n                    mat-raised-button\r\n                    color=\"warn\"\r\n                    type=\"button\"\r\n                    (click)=\"goBack()\"\r\n                  >\r\n                    Cancel\r\n                  </button>\r\n                </div>\r\n              </div>\r\n        </form>\r\n\r\n        \r\n    </mat-card-content>\r\n</mat-card>\r\n\r\n<div class=\"mt-32\">\r\n  <app-audit-log *ngIf=\"isAuditData\" #auditLog></app-audit-log>\r\n</div>\r\n","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { FormBuilder, Validators, FormGroup } from '@angular/forms';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\n\r\n@Component({\r\n  selector: 'app-transaction-type-popup-table',\r\n  templateUrl: './transaction-type-popup-table.component.html',\r\n  styleUrls: ['./transaction-type-popup-table.component.scss']\r\n})\r\nexport class TransactionTypePopupTableComponent implements OnInit {\r\n  public itemForm: FormGroup;\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    public dialogRef: MatDialogRef<TransactionTypePopupTableComponent>,\r\n    private fb: FormBuilder,private api: ApiService,\r\n  ) {\r\n    \r\n   }\r\n\r\n \r\n\r\n  ngOnInit() {\r\n    this.buildItemForm(this.data.payload)\r\n    let payload = {\r\n    };\r\n  }\r\n  buildItemForm(item) {\r\n    this.itemForm = this.fb.group({\r\n      transactionTypeCode: [item.transactionTypeCode || '', Validators.required],\r\n      transactionTypeName: [item.transactionTypeName || '', Validators.required],\r\n      transactionTypeDescription: [item.transactionTypeDescription || '' ,Validators.required],\r\n      transactionTypeId: [item.transactionTypeId || null]\r\n    })\r\n  }\r\n\r\n  submit() {\r\n    this.dialogRef.close(this.itemForm.value)\r\n  }\r\n\r\n}\r\n","<h1 matDialogTitle>{{data.title}}</h1>\r\n  <form [formGroup]=\"itemForm\" (ngSubmit)=\"submit()\">\r\n  <div fxLayout=\"row wrap\" fxLayout.lt-sm=\"column\">\r\n    <div fxFlex=\"50\"  class=\"pr-16\">\r\n      <mat-form-field class=\"full-width\">\r\n        <input\r\n        matInput\r\n        name=\"transactionTypeCode\"\r\n        [formControl]=\"itemForm.controls['transactionTypeCode']\"\r\n        placeholder=\"Transaction Type Code\">\r\n        <mat-error\r\n        *ngIf=\"itemForm.get('transactionTypeCode').touched && !itemForm.get('transactionTypeCode').valid\">\r\n        Transaction Type Code is Required!\r\n    </mat-error>\r\n      </mat-form-field>\r\n    </div>\r\n\r\n    <div fxFlex=\"50\"  class=\"pr-16\">\r\n      <mat-form-field class=\"full-width\">\r\n        <input\r\n        matInput\r\n        name=\"transactionTypeName\"\r\n        [formControl]=\"itemForm.controls['transactionTypeName']\"\r\n        placeholder=\"Transaction Type Name\">\r\n        <mat-error\r\n        *ngIf=\"itemForm.get('transactionTypeName').touched && !itemForm.get('transactionTypeName').valid\">\r\n        Transaction Type Name is Required!\r\n    </mat-error>\r\n      </mat-form-field>\r\n    </div>\r\n\r\n    <div fxFlex=\"50\"  class=\"pr-16\">\r\n      <mat-form-field class=\"full-width\">\r\n        <input\r\n        matInput\r\n        name=\"transactionTypeDescription\"\r\n        [formControl]=\"itemForm.controls['transactionTypeDescription']\"\r\n        placeholder=\"Transaction Type Description\">\r\n        <mat-error\r\n        *ngIf=\"itemForm.get('transactionTypeDescription').touched && !itemForm.get('transactionTypeDescription').valid\">\r\n        Transaction Type Description is Required!\r\n    </mat-error>\r\n      </mat-form-field>\r\n    </div>\r\n\r\n\r\n\r\n\r\n\r\n    <div fxFlex=\"100\" class=\"mt-16\">\r\n      <button mat-raised-button color=\"primary\" [disabled]=\"!(itemForm.valid && itemForm.dirty)\">{{\"SAVE\" }}</button>\r\n      <span fxFlex></span>\r\n      <button mat-button color=\"warn\" type=\"button\" (click)=\"dialogRef.close(false)\">Cancel</button>\r\n    </div>\r\n  </div>\r\n  </form>","import {\r\n  ChangeDetectorRef,\r\n  Component,\r\n  Inject,\r\n  OnInit,\r\n  ViewChild,\r\n} from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from \"@angular/material/dialog\";\r\nimport { ApiService } from \"app/shared/services/api.service\";\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\r\nimport { DataService } from \"app/shared/services/data.service\";\r\nimport { LocalStoreService } from \"app/shared/services/local-store.service\";\r\nimport { AuditLogComponent } from \"app/views/maintenance/audit-log/audit-log.component\";\r\nimport Swal from \"sweetalert2\";\r\n\r\n@Component({\r\n  selector: 'app-cutomer-charge-category-create',\r\n  templateUrl: './cutomer-charge-category-create.component.html',\r\n  styleUrls: ['./cutomer-charge-category-create.component.scss']\r\n})\r\nexport class CutomerChargeCategoryCreateComponent implements OnInit {\r\n\r\n  @ViewChild(\"auditLog\") auditLog: AuditLogComponent;\r\n  public itemForm: FormGroup;\r\n  cutomerCategoryForm: FormGroup;\r\n  isReadOnly: boolean = true;\r\n  isEdit: boolean = false;\r\n  isView: boolean = true;\r\n  show = false;\r\n  editNow: boolean = false;\r\n  entityIsEdit: boolean;\r\n  id: number;\r\n  isAuditData: boolean = false;\r\n  readorWrite: boolean = true;\r\n  loggedInUser: string;\r\n  auditData: any;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private snack: MatSnackBar,\r\n    private fb: FormBuilder,\r\n    private api: ApiService,\r\n    private route: ActivatedRoute,\r\n    private cdr: ChangeDetectorRef,\r\n    private dataService: DataService,\r\n    private ls: LocalStoreService,\r\n    private apiService: ApiService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.buildItemForm({});\r\n\r\n    this.route.queryParamMap.subscribe((params: any) => {\r\n      this.entityIsEdit = params.get(\"isEdit\");\r\n      if (params.get(\"isEdit\") == \"Yes\") {\r\n        this.isReadOnly = false;\r\n        this.isView = true;\r\n        this.editNow = true;\r\n      } else if (params.get(\"isEdit\") == \"No\") {\r\n        this.isReadOnly = true;\r\n        this.isView = true;\r\n        this.editNow = false;\r\n      } else if (params.get(\"isEdit\") == \"false\") {\r\n        this.isReadOnly = false;\r\n        this.isView = false;\r\n        this.editNow = false;\r\n      } else if (params.get(\"isEdit\") == null) {\r\n        this.isView = false;\r\n      }\r\n      if (params.get(\"id\")) {\r\n        this.isEdit = true;\r\n        this.id = params.get(\"id\");\r\n        this.api.editEntityById(params.get(\"id\")).subscribe((resp) => {\r\n          this.buildItemForm(resp);\r\n        });\r\n        this.api\r\n          .getCustomerChargeCategoryById(params.get(\"id\"))\r\n          .subscribe((resp: any) => {\r\n            this.buildItemForm(resp);\r\n            if (resp.authStatus == \"U\") {\r\n              resp.authDate = \"\";\r\n              resp.authBy = \"\";\r\n            }\r\n            this.auditData = resp;\r\n            this.isAuditData = true;\r\n            this.dataService.setAuditLogData(this.auditData);\r\n          });\r\n      } else {\r\n        this.readorWrite = false;\r\n        this.buildItemForm({});\r\n      }\r\n    });\r\n\r\n    this.loggedInUser = this.ls.getItem(\"ICUST_USER\").userName;\r\n  }\r\n\r\n  buildItemForm(item) {\r\n    this.itemForm = this.fb.group({\r\n      id: [item.id || \"\"],\r\n      authStatus: [item.authStatus || \"\"],\r\n      categoryDescription: [\r\n        item.categoryDescription || \"\",\r\n        [Validators.required],\r\n      ],\r\n      chargeCategory: [item.chargeCategory || \"\", [Validators.required]],\r\n      isActive: [item.isActive || true],\r\n      oneTimeAuth: [item.oneTimeAuth || \"\"],\r\n      recordStatus: [item.recordStatus || \"\"],\r\n      version: [item.version || \"\"],\r\n      createdDate: [item.createdDate || \"\"],\r\n      lastModifiedDate: [item.lastModifiedDate || \"\"],\r\n      authBy: [item.authBy || \"\"],\r\n      authDate: [item.authDate || \"\"],\r\n      modifiedBy: [item.modifiedBy || \"\"],\r\n      createdBy: [item.createdBy || \"\"],\r\n      noOfModification: [item.noOfModification || \"\"],\r\n    });\r\n  }\r\n\r\n  goBack() {\r\n    this.router.navigate([`/maintenance/main/customerChargeCategory`]);\r\n  }\r\n  deleteRecord(operation) {\r\n    Swal.fire({\r\n      text:\r\n        \"You are trying to \" +\r\n        operation +\r\n        \" record.\" +\r\n        \" Do you want to proceed?\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      cancelButtonText: \"NO\",\r\n      confirmButtonText: \"YES\",\r\n      icon: \"info\",\r\n    }).then((result) => {\r\n      if (result.isConfirmed == true) {\r\n        this.apiService.deleteCustomerChargeCategory(this.auditData.id).subscribe(\r\n          (data) => {\r\n            this.router.navigate([`/maintenance/main/customerChargeCategory`]);\r\n          },\r\n          (err) => {\r\n            if (err.status == 200) {\r\n              this.snack.open(\"Record Deleted Successfully\", \"OK\", {\r\n                duration: 4000,\r\n                verticalPosition: \"top\",\r\n                horizontalPosition: \"right\",\r\n              });\r\n            }\r\n            this.router.navigate([`/maintenance/main/customerChargeCategory`]);\r\n          }\r\n        );\r\n      }\r\n    });\r\n  }\r\n  editRecord() {\r\n    this.readorWrite = false;\r\n  }\r\n\r\n  updateRecord(operation) {\r\n    Swal.fire({\r\n      text:\r\n        \"You are trying to \" +\r\n        operation +\r\n        \" record.\" +\r\n        \" Do you want to proceed?\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      cancelButtonText: \"NO\",\r\n      confirmButtonText: \"YES\",\r\n      icon: \"info\",\r\n    }).then((result) => {\r\n      if (result.isConfirmed == true) {\r\n        let payload: any = {};\r\n        payload.id = this.id;\r\n        payload.operation = operation;\r\n        payload.loggedInUser = this.loggedInUser;\r\n        this.apiService\r\n          .getAuditLogsFortillvaultMaster(payload)\r\n          .subscribe((data) => {\r\n            if (data.authStatus == \"U\") {\r\n              data.authDate = \"\";\r\n              data.authBy = \"\";\r\n            }\r\n\r\n            this.auditData = data;\r\n            this.dataService.setAuditLogData(this.auditData);\r\n            this.isAuditData = true;\r\n            this.dataService.sendClickEvent();\r\n            let message = \"\";\r\n            switch (operation) {\r\n              case \"open\":\r\n                message = \"opened\";\r\n                break;\r\n              case \"close\":\r\n                message = \"closed\";\r\n                break;\r\n              case \"auth\":\r\n                message = \"authorized\";\r\n                break;\r\n              default:\r\n                break;\r\n            }\r\n            this.snack.open(`Record ${message} successfully!'`, \"OK\", {\r\n              duration: 2000,\r\n              verticalPosition: \"top\",\r\n              horizontalPosition: \"right\",\r\n            });\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n  submit() {\r\n    if (this.itemForm.invalid) {\r\n      return;\r\n    } else {\r\n      this.itemForm.value.loggedInUser = this.loggedInUser;\r\n      this.api.saveCustomerChargeCategory(this.itemForm.value).subscribe((data) => {\r\n        if (data != null && this.isEdit == true) {\r\n          this.router\r\n            .navigate([`/maintenance/main/customerChargeCategory`])\r\n            .then((_) => {\r\n              this.snack.open(\"Data Updated!\", \"OK\", {\r\n                duration: 4000,\r\n                verticalPosition: \"top\",\r\n                horizontalPosition: \"right\",\r\n              });\r\n            });\r\n          this.cdr.markForCheck();\r\n        } else if (data != null || this.isEdit == true) {\r\n          this.router\r\n            .navigate([`/maintenance/main/customerChargeCategory`])\r\n            .then((_) => {\r\n              this.snack.open(\"Data Saved!\", \"OK\", {\r\n                duration: 4000,\r\n                verticalPosition: \"top\",\r\n                horizontalPosition: \"right\",\r\n              });\r\n            });\r\n          this.cdr.markForCheck();\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  _keyPress(event: any) {\r\n    const pattern = /[0-9]/;\r\n    let inputChar = String.fromCharCode(event.charCode);\r\n    if (!pattern.test(inputChar)) {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n  keyPressAlphanumeric(event) {\r\n    var inp = String.fromCharCode(event.keyCode);\r\n    if (/[0-9a-zA-Z]/.test(inp)) {\r\n      return true;\r\n    } else {\r\n      event.preventDefault();\r\n      return false;\r\n    }\r\n  }\r\n  dataByBank(index, bankC) {\r\n    return bankC.bankCode;\r\n  }\r\n}\r\n","<h1 class=\"main-head\"><small class=\"small-head\">Home > Maintenance Summary > Customer Category Maintenance > <span\r\n    *ngIf=\"!isEdit\">Add</span> <span *ngIf=\"isEdit\">Edit</span> Customer Category </small>\r\n<div fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"mt-16\">\r\n<button mat-icon-button (click)=\"goBack()\">\r\n    <mat-icon>arrow_back</mat-icon>\r\n</button>\r\n<h1 *ngIf=\"!isEdit\" class=\"add-text\">Add Customer Charge Category </h1>\r\n<h1 *ngIf=\"isEdit\" class=\"add-text\">Edit Customer Charge Category </h1>\r\n</div>\r\n<mat-card>\r\n<mat-card-content>\r\n    <form [formGroup]=\"itemForm\" (ngSubmit)=\"submit()\">\r\n        <div fxLayout=\"row wrap\" fxLayout.lt-sm=\"column\">\r\n            <div fxLayoutAlign=\"space-between center\" fxLayoutGap=\"15px\">\r\n            \r\n                <div fxFlex=\"50\" class=\"pr-16\">\r\n\r\n                    <mat-label>Category Name</mat-label>\r\n                    <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                        <input matInput name=\"chargeCategory\" formControlName=\"chargeCategory\"\r\n                            placeholder=\"Category Name\" />\r\n\r\n                        <mat-error\r\n                            *ngIf=\"itemForm?.get('chargeCategory').touched && !itemForm?.get('chargeCategory').valid\">\r\n                           Charge Category is Required\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n                <div fxFlex=\"50\" class=\"pr-16\">\r\n                    <mat-label>Category Description</mat-label>\r\n                    <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                        <input matInput [readonly]=\"readorWrite\" name=\"categoryDescription\"\r\n                            formControlName=\"categoryDescription\" placeholder=\"Category Description\">\r\n                    </mat-form-field>\r\n                </div>\r\n            </div>\r\n\r\n            <div fxFlex=\"100\" class=\"mt-16\" fxLayoutAlign=\"end center\" fxLayoutGap=\"10px\">\r\n                <div>\r\n                    <button mat-raised-button color=\"primary\" [disabled]=\"!(itemForm.valid && itemForm.dirty)\"\r\n                        *ngIf=\"!isEdit\">Save\r\n                    </button>\r\n                </div>\r\n                <div [hidden]=\"readorWrite\">\r\n                    <button mat-raised-button color=\"primary\" [disabled]=\"!(itemForm.valid && itemForm.dirty)\"\r\n                        *ngIf=\"isEdit\">Save\r\n                    </button>\r\n                </div>\r\n                <div [hidden]=\"!readorWrite || auditData?.recordStatus == 'Close'\">\r\n                    <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\"\r\n                        (click)=\"editRecord()\">\r\n                        Edit\r\n                    </button>&nbsp;&nbsp;\r\n                </div>\r\n                <div *ngIf=\"auditData?.authStatus == 'Unauthorized' && readorWrite\" [hidden]=\"!readorWrite\">\r\n                    <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\"\r\n                        (click)=\"updateRecord('auth')\">\r\n                        Authorize\r\n                    </button>&nbsp;&nbsp;\r\n                </div>\r\n                <div *ngIf=\"auditData?.recordStatus == 'Close' && auditData?.oneTimeAuth != 'No'\"\r\n                    [hidden]=\"!readorWrite\">\r\n                    <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\"\r\n                        (click)=\"updateRecord('open')\">\r\n                        Reopen\r\n                    </button>&nbsp;&nbsp;\r\n                </div>\r\n                <div *ngIf=\"auditData?.recordStatus == 'Open' && auditData?.oneTimeAuth != 'No'\"\r\n                    [hidden]=\"!readorWrite\">\r\n                    <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\"\r\n                        (click)=\"updateRecord('close')\">\r\n                        Close\r\n                    </button>&nbsp;&nbsp;\r\n                </div>\r\n                <div *ngIf=\"auditData?.oneTimeAuth == 'No'\" [hidden]=\"!readorWrite\">\r\n                    <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\"\r\n                        (click)=\"deleteRecord('delete')\">\r\n                        Delete\r\n                    </button> &nbsp;&nbsp;\r\n                </div>\r\n\r\n                <button mat-raised-button color=\"warn\" type=\"button\" (click)=\"goBack()\">\r\n                    Exit\r\n                </button>\r\n            </div>\r\n        </div>\r\n    </form>\r\n</mat-card-content>\r\n</mat-card>\r\n\r\n<div class=\"mt-32\">\r\n<app-audit-log *ngIf=\"isAuditData\" #auditLog></app-audit-log>\r\n</div>\r\n","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { AppConfirmService } from 'app/shared/services/app-confirm/app-confirm.service';\r\nimport { AppLoaderService } from 'app/shared/services/app-loader/app-loader.service';\r\nimport { Subscription } from 'rxjs';\r\nimport { Router } from '@angular/router';\r\nimport { DataService } from 'app/shared/services/data.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport {MatSort, Sort} from '@angular/material/sort';\r\nimport { LiveAnnouncer } from '@angular/cdk/a11y';\r\nimport { DownloadService } from 'app/shared/services/download.service';\r\n\r\n@Component({\r\n  selector: 'app-customer-charge-category',\r\n  templateUrl: './customer-charge-category.component.html',\r\n  styleUrls: ['./customer-charge-category.component.scss']\r\n})\r\nexport class CustomerChargeCategoryComponent implements OnInit {\r\n\r\n  @ViewChild(\"searchVal\") searchVal: ElementRef;\r\n  selectedFilterIndex: number = 0;\r\n\r\n  dataSource = new MatTableDataSource();\r\n  displayedColumns: string[] = [\r\n    \"chargeCategory\",\r\n    \"categoryDescription\",\r\n    \"oneTimeAuth\",\r\n    \"authStatus\",\r\n    \"recordStatus\",\r\n    \"action\",\r\n  ];\r\n\r\n  filterByOption: { key: string; value: string }[] = [\r\n    { key: \"chargeCategory\", value: \"Charge Category\" },\r\n  ];\r\n\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  public users: any[];\r\n  public items: any[];\r\n  entity: any;\r\n  bankCode: any;\r\n  cutomerCategoryMasterValues: any;\r\n  public getItemSub: Subscription;\r\n  fetchcutomerCategory: any;\r\n  id: any;\r\n\r\n  constructor(\r\n    private dialog: MatDialog,\r\n    private snack: MatSnackBar,\r\n    private confirmService: AppConfirmService,\r\n    private loader: AppLoaderService,\r\n    private api: ApiService,\r\n    private router: Router,\r\n    private dataService: DataService,\r\n    private _liveAnnouncer: LiveAnnouncer,\r\n    private ls: LocalStoreService,\r\n    private downloadService: DownloadService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.getEntityCode();\r\n    this.getBankCode();\r\n    this.getItems();\r\n  }\r\n  ngOnDestroy() {\r\n    if (this.getItemSub) {\r\n      this.getItemSub.unsubscribe();\r\n    }\r\n  }\r\n  addNew() {\r\n    this.router.navigate([`/maintenance/main/customerChargeCategoryCreate`]);\r\n  }\r\n\r\n  trackByFnFilterByOption(index, item) {\r\n    return index;\r\n  }\r\n  onFileChange(event) {\r\n    console.log(\"event\", event.path[0].files[0]);\r\n    const file: File = event.path[0].files[0];\r\n    const uploadData = new FormData();\r\n    uploadData.append(\"screenType\", \"cutomerCategoryltMaster\");\r\n    uploadData.append(\"file\", file);\r\n    this.api.uploadExelFile(uploadData).subscribe((response) => {\r\n      console.log(response);\r\n      this.getItems();\r\n      this.snack.open(`File Uploaded Successfully`, \"OK\", {\r\n        duration: 4000,\r\n        verticalPosition: \"top\",\r\n        horizontalPosition: \"right\",\r\n      });\r\n    });\r\n  }\r\n\r\n  getItems() {\r\n    this.api.getCustomerChargeCategory().subscribe((resp: any) => {\r\n      if (resp) {\r\n        console.log(resp);\r\n        for (let i = 0; i < resp.length; i++) {\r\n          if (resp[i].authStatus == \"U\") {\r\n            resp[i].authStatus = \"Unauthorized\";\r\n          }\r\n          if (resp[i].authStatus == \"A\") {\r\n            resp[i].authStatus = \"Authorized\";\r\n          }\r\n          if (resp[i].recordStatus == \"O\") {\r\n            resp[i].recordStatus = \"Open\";\r\n          }\r\n          if (resp[i].recordStatus == \"C\") {\r\n            resp[i].recordStatus = \"Closed\";\r\n          }\r\n        }\r\n        this.cutomerCategoryMasterValues = resp;\r\n        this.items = this.cutomerCategoryMasterValues;\r\n        this.dataSource = new MatTableDataSource(resp);\r\n        this.users = resp;\r\n        this.dataSource.paginator = this.paginator;\r\n        this.dataSource.sort = this.sort;\r\n      }\r\n    });\r\n  }\r\n  getBankCode() {\r\n    this.api.getBankCode().subscribe((bnkCode: any) => {\r\n      this.bankCode = bnkCode;\r\n    });\r\n  }\r\n  getEntityCode() {\r\n    this.api.getEntityCode().subscribe((resp) => {\r\n      this.entity = resp;\r\n    });\r\n  }\r\n  doFilter(filterBy, e) {\r\n    this.filterTable(filterBy);\r\n    this.applyFilter(e);\r\n  }\r\n\r\n  filterTable(filterBy) {\r\n    this.dataSource.filterPredicate = (data: any, filter: string): boolean => {\r\n      return data[filterBy]?.toLocaleLowerCase().includes(filter);\r\n    };\r\n  }\r\n\r\n  clearFilter() {\r\n    this.dataSource.filter = \"\";\r\n    this.searchVal.nativeElement.value = \"\";\r\n    this.selectedFilterIndex = 0;\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n  announceSortChange(sortState: Sort) {\r\n    if (sortState.direction) {\r\n      this._liveAnnouncer.announce(`Sorted ${sortState.direction}ending`);\r\n    } else {\r\n      this._liveAnnouncer.announce(\"Sorting cleared\");\r\n    }\r\n  }\r\n  openPopUp(data: any = {}, isEdit: string) {\r\n    this.router.navigate([\"/maintenance/main/customerChargeCategoryCreate\"], {\r\n      queryParams: { id: data.id, isEdit: isEdit },\r\n    });\r\n  }\r\n\r\n  masterpdf() {\r\n    this.downloadService.downloadFiles(\r\n      \"cutomerChargeCategoryMaintenance\",\r\n      this.users\r\n    );\r\n  }\r\n\r\n  fetchcutomerCategoryById() {\r\n    this.api.getCustomerChargeCategoryById(this.id).subscribe((resp) => {\r\n      this.fetchcutomerCategory = resp;\r\n    });\r\n    this.dataService.sendNavParam(this.fetchcutomerCategory);\r\n    this.router.navigate([\r\n      `/maintenance/main/cutomerCategoryltMaster/add/${this.id}`,\r\n    ]);\r\n  }\r\n\r\n  goBack() {\r\n    this.router.navigate([`/maintenance/main/`]);\r\n  }\r\n\r\n  deleteItem(row) {\r\n    this.confirmService\r\n      .confirm({ message: `Delete ${row.chargeCategory}?` })\r\n      .subscribe((res) => {\r\n        if (res) {\r\n          this.loader.open();\r\n          this.api.deleteCustomerChargeCategory(row.id).subscribe(\r\n            (res: any) => {},\r\n            (err: any) => {\r\n              (\"\");\r\n              if (err.status == 200) {\r\n                this.loader.close();\r\n                this.getItems();\r\n                this.snack.open(\"Member deleted!\", \"OK\", { duration: 4000 });\r\n              }\r\n            }\r\n          );\r\n        }\r\n      });\r\n  }\r\n\r\n}\r\n","<h1 class=\"main-head\"><small class=\"small-head\">Home > Maintenance Summary > Customer Charge Category Maintenance </small>\r\n</h1>\r\n<div fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"mt-24\">\r\n  <button mat-icon-button (click)=\"goBack()\">\r\n    <mat-icon>arrow_back</mat-icon>\r\n  </button>\r\n  <span class=\"text-large\">\r\n    Customer Charge Category Maintenance\r\n  </span>\r\n</div>\r\n<mat-card class=\"mt-32\">\r\n  <div>\r\n    <table style=\"margin: 18px;\">\r\n      <tr>\r\n        <td>\r\n          <h2>\r\n            Customer Charge Category Maintenance\r\n          </h2>\r\n        </td>\r\n      </tr>\r\n      <tr>\r\n        <td>\r\n          <div class=\"highlight\">\r\n          </div>\r\n        </td>\r\n      </tr>\r\n    </table>\r\n    <span fxFlex></span>\r\n    <button mat-icon-button [matMenuTriggerFor]=\"menu\">\r\n      <mat-icon>more_vert</mat-icon>\r\n    </button>\r\n    <mat-menu #menu=\"matMenu\">\r\n      <div class=\"upload_botton\">\r\n        <button type=\"button\" mat-menu-item>Upload</button>\r\n        <input type=\"file\"\r\n          accept=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\"\r\n          class=\"btn btn-success\" (change)=\"onFileChange($event)\" />\r\n      </div>\r\n      <button (click)=\"masterpdf()\" mat-menu-item>\r\n        <span>Download</span>\r\n      </button>\r\n    </mat-menu>\r\n  </div>\r\n  <div fxLayout=\"row\" class=\"w-full\" fxLayoutAlign=\"space-arround center\" class=\"ml-16 mt-32\">\r\n    <div fxLayout=\"row\" class=\"w-full\" fxLayoutGap=\"10px\">\r\n      <div>\r\n        <mat-form-field appearance=\"outline\">\r\n          <mat-label>Filter By</mat-label>\r\n          <mat-select name=\"filterBy\" #filterBy [(ngModel)]=\"selectedFilterIndex\" placeholder=\"Filter By\">\r\n            <!-- <mat-select name=\"filterBy\" #filterBy [(ngModel)]=\"selectedFilterIndex\"> -->\r\n            <mat-option value=\"0\">Select</mat-option>\r\n            <mat-option *ngFor=\"let filter of filterByOption; trackBy: trackByFnFilterByOption\" value=\"{{filter.key}}\">\r\n              {{filter.value}}\r\n            </mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n      </div>\r\n      <div>\r\n        <mat-form-field appearance=\"outline\">\r\n          <mat-label>Search</mat-label>\r\n          <input matInput #searchVal (keyup)=\"doFilter(filterBy.value,$event)\" placeholder=\"Search\">\r\n          <!-- <input matInput #searchVal (keyup)=\"doFilter(filterBy.value,$event)\"> -->\r\n          <mat-icon matSuffix>search</mat-icon>\r\n        </mat-form-field>\r\n      </div>\r\n      <div *ngIf=\"searchVal.value || filterBy.value\" class=\"resetDiv\">\r\n        <button mat-stroked-button class=\"clearBtn\" (click)=\"clearFilter()\">RESET\r\n        </button>\r\n      </div>\r\n      <div class=\"filterDiv\">\r\n        <button mat-flat-button color=\"primary\" class=\"addNewBtn\" (click)=\"addNew()\">ADD NEW\r\n        </button>\r\n      </div>\r\n\r\n    </div>\r\n  </div>\r\n  <div class=\"mat-elevation-z0\">\r\n    <mat-table class=\"w-full\" [dataSource]=\"dataSource\" matSort (matSortChange)=\"announceSortChange($event)\">\r\n\r\n\r\n      <ng-container matColumnDef=\"chargeCategory\">\r\n        <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Charge Category\"> Charge Category\r\n        </mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\"> {{element.chargeCategory}} </mat-cell>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"categoryDescription\">\r\n        <mat-header-cell *matHeaderCellDef mat-sort-header\r\n          sortActionDescription=\"Sort by Cutomer Category Description\">Category Description\r\n        </mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\"> {{element.categoryDescription}} </mat-cell>\r\n      </ng-container>\r\n      <ng-container matColumnDef=\"oneTimeAuth\">\r\n        <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by One Time Auth\"> One Time Auth\r\n        </mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\"> {{element.oneTimeAuth}} </mat-cell>\r\n      </ng-container>\r\n      <ng-container matColumnDef=\"authStatus\">\r\n        <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Auth Status\"> Auth Status\r\n        </mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\"> {{element.authStatus}} </mat-cell>\r\n      </ng-container>\r\n      <ng-container matColumnDef=\"recordStatus\">\r\n        <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Record Status\"> Record Status\r\n        </mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\"> {{element.recordStatus}} </mat-cell>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"action\">\r\n        <mat-header-cell *matHeaderCellDef>Action</mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\">\r\n          <div>\r\n            <mat-icon class=\"actionIcons\" matTooltip=\"Edit\" (click)=\"openPopUp(element,'Yes')\">edit</mat-icon>\r\n          </div>&nbsp;&nbsp;&nbsp;&nbsp;\r\n          <div>\r\n            <mat-icon class=\"actionIcons\" matTooltip=\"Delete\" (click)=\"deleteItem(element)\">delete</mat-icon>\r\n          </div>\r\n        </mat-cell>\r\n      </ng-container>\r\n\r\n      <mat-header-row *matHeaderRowDef=\"displayedColumns;\"></mat-header-row>\r\n      <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\r\n    </mat-table>\r\n    <mat-paginator class=\"mt-16\" [pageSizeOptions]=\"[5,10,15]\" showFirstLastButtons></mat-paginator>\r\n  </div>\r\n</mat-card>","import { Component, OnInit, Inject } from \"@angular/core\";\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from \"@angular/material/dialog\";\r\nimport { FormBuilder, Validators, FormGroup } from \"@angular/forms\";\r\nimport { ApiService } from \"app/shared/services/api.service\";\r\nimport { LocalStoreService } from \"app/shared/services/local-store.service\";\r\nimport { DataService } from \"app/shared/services/data.service\";\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\nimport { AppLoaderService } from \"app/shared/services/app-loader/app-loader.service\";\r\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\r\nimport { accTypeStatusInterface, loggedInUserObject } from \"./acccount-type-table-popup\";\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: \"app-account-type-table-popup\",\r\n  templateUrl: \"./account-type-table-popup.component.html\",\r\n  styleUrls: [\"./account-type-table-popup.component.scss\"],\r\n})\r\nexport class AccountTypeTablePopupComponent implements OnInit {\r\n  public itemForm: FormGroup;\r\n  accountTypeId: string;\r\n  currentUser: currentUserObject;\r\n  id: string;\r\n  loggedInUser: loggedInUserObject;\r\n  auditData: any;\r\n  isAuditData: boolean = false;\r\n  show = false;\r\n  isEdit: boolean = false;\r\n  readorWrite: boolean=true;\r\n  accTypeStatus: accTypeStatusInterface;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private apiService: ApiService,\r\n    private loader: AppLoaderService,\r\n    private snack: MatSnackBar,\r\n    private router: Router,\r\n    private ls: LocalStoreService,\r\n    private dataService: DataService,\r\n    private route: ActivatedRoute\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.currentUser = this.ls.getItem(\"ICUST_USER\");\r\n    this.route.queryParamMap.subscribe((params: any) => {\r\n      if (params.get(\"id\")) {\r\n        this.isEdit = true;\r\n        this.id = params.get(\"id\");\r\n        this.apiService\r\n          .fetchAccountTypeById(params.get(\"id\"))\r\n          .subscribe((resp) => {\r\n            console.log(\"account status \",resp)\r\n            this.accTypeStatus = resp;\r\n            if (this.accTypeStatus == null || this.accTypeStatus == undefined) {\r\n              this.readorWrite=false;\r\n              this.buildItemForm({});\r\n            } else if (\r\n              this.accTypeStatus.accountTypeId != null ||\r\n              this.accTypeStatus.accountTypeId != undefined\r\n            ) {\r\n              this.loader.open();\r\n              this.id = this.accTypeStatus.accountTypeId;\r\n              this.buildItemForm(this.accTypeStatus);\r\n              this.isEdit = true;\r\n              this.auditData = this.accTypeStatus;\r\n              this.isAuditData = true;\r\n              this.dataService.setAuditLogData(this.auditData);\r\n              this.loader.close();\r\n            }\r\n            this.loggedInUser = this.ls.getItem(\"ICUST_USER\");\r\n          });\r\n      } else {\r\n        this.buildItemForm({});\r\n      }\r\n    });\r\n  }\r\n  buildItemForm(item) {\r\n    this.itemForm = this.fb.group({\r\n      accountTypeName: [item?.accountTypeName || \"\", Validators.required],\r\n      accountTypeDescription: [\r\n        item?.accountTypeDescription || \"\",\r\n        Validators.required,\r\n      ],\r\n      accountTypeId: [item?.accountTypeId || null],\r\n      loggedInUser: [item?.creatorId || this.currentUser.userName],\r\n    });\r\n  }\r\n  deleteRecord(operation){\r\n    Swal.fire(\r\n      {\r\n        //text: 'Unable to process' + 'Error ' + this.responseforfileupload.errorMessage + 'Do you want to Proceed??',\r\n        text: 'You are trying to '+ operation +' record.' + ' Do you want to proceed?',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        // confirmButtonText: 'PROCEED.'\r\n        cancelButtonText: 'NO',\r\n        confirmButtonText: 'YES', 'icon': 'info'\r\n      }\r\n    ).then((result => {\r\n      if(result.isConfirmed==true){\r\n        this.apiService.deleteAccountType(this.auditData.id)\r\n        .subscribe(data => {\r\n          this.router.navigate([`/maintenance/main/accountType`]);\r\n        },\r\n        err=>{\r\n          if (err.status == 200) {\r\n            this.snack.open('Record Deleted Successfully', 'OK', {\r\n              duration: 4000,\r\n              verticalPosition: 'top',\r\n              horizontalPosition: 'right'\r\n            });\r\n          }\r\n          this.router.navigate([`/maintenance/main/accountType`]);\r\n      })\r\n      }}))\r\n   \r\n         \r\n       \r\n  }\r\n  editRecord(){\r\n    this.readorWrite=false;\r\n  }\r\n\r\n  updateRecord(operation) {\r\n    Swal.fire(\r\n      {\r\n        //text: 'Unable to process' + 'Error ' + this.responseforfileupload.errorMessage + 'Do you want to Proceed??',\r\n        text: 'You are trying to '+ operation +' record.' + ' Do you want to proceed?',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        // confirmButtonText: 'PROCEED.'\r\n        cancelButtonText: 'NO',\r\n        confirmButtonText: 'YES', 'icon': 'info'\r\n      }\r\n    ).then((result => {\r\n      if(result.isConfirmed==true){\r\n        let payload: any = {};\r\n        payload.id = this.id;\r\n        payload.operation = operation;\r\n        payload.loggedInUser = this.loggedInUser.userName;\r\n        this.apiService.getAuditLogsForAccountType(payload).subscribe((data) => {\r\n          this.auditData = data;\r\n          this.dataService.setAuditLogData(this.auditData);\r\n          this.isAuditData = true;\r\n          this.dataService.sendClickEvent();\r\n          let message = \"\";\r\n          switch (operation) {\r\n            case \"open\":\r\n              message = \"opened\";\r\n              break;\r\n            case \"close\":\r\n              message = \"closed\";\r\n              break;\r\n            case \"auth\":\r\n              message = \"authorized\";\r\n              break;\r\n            default:\r\n              break;\r\n          }\r\n          this.snack.open(`Record ${message} successfully!'`, \"OK\", {\r\n            duration: 2000,\r\n            verticalPosition: \"top\",\r\n            horizontalPosition: \"right\",\r\n          });\r\n        });\r\n      }}))\r\n   \r\n  }\r\n\r\n  submit() {\r\n    if (this.itemForm.invalid) {\r\n      return;\r\n    } else {\r\n      this.loader.open();\r\n      this.apiService.upsertAccountType(this.itemForm.value).subscribe(\r\n        (resp) => {\r\n          this.loader.close();\r\n          this.router.navigate([`/maintenance/main/accountType`]).then((_) => {\r\n            this.snack.open(\"Data Saved Successfully!\", \"OK\", {\r\n              duration: 4000,\r\n              verticalPosition: \"top\",\r\n              horizontalPosition: \"right\",\r\n            });\r\n          });\r\n        },\r\n        (err: any) => {\r\n          this.loader.close();\r\n          this.snack.open(`Error!`, \"OK\", {\r\n            duration: 4000,\r\n            verticalPosition: \"top\",\r\n            horizontalPosition: \"right\",\r\n          });\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  goBack() {\r\n    localStorage.removeItem(\"fetchAccTypeValue\");\r\n    this.router.navigate([`/maintenance/main/accountType`]);\r\n  }\r\n}\r\ninterface currentUserObject {\r\n  userName: string;\r\n}\r\n","<h1 class=\"main-head\"><small class=\"small-head\">Home > Maintenance Summary > Account Type Maintenance > <span *ngIf=\"!isEdit\">Add</span><span *ngIf=\"isEdit\">Edit</span> AccountType Details</small>\r\n</h1>\r\n<div fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"mt-16\">\r\n  <button mat-icon-button (click)=\"goBack()\">\r\n    <mat-icon>arrow_back</mat-icon>\r\n  </button>\r\n  <!-- <span *ngIf=\"isEdit && editNow\" class=\"text-large\"> -->\r\n   <span *ngIf=\"isEdit\" class=\"text-large\">\r\n    Edit AccountType Details\r\n  </span>\r\n  <span *ngIf=\"!isEdit\" class=\"text-large\">\r\n    Add AccountType Details\r\n  </span>\r\n</div>\r\n\r\n<mat-card>\r\n  <mat-card-content>\r\n    <!-- <h1 matDialogTitle>Add AccountType Details</h1> -->\r\n    <form [formGroup]=\"itemForm\" *ngIf=\"itemForm\" class=\"m-333\">\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"space-around center\" fxLayoutGap=\"15px\">\r\n        <div fxFlex=\"40\">\r\n          <mat-label> Account Type Name *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input [readonly]=\"readorWrite\" matInput name=\"accountTypeName\" [formControl]=\"itemForm.controls['accountTypeName']\">\r\n            <mat-error *ngIf=\"itemForm.get('accountTypeName').touched && !itemForm.get('accountTypeName').valid\">\r\n              Account Type Name is Required!\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n\r\n        <div fxFlex=\"40\">\r\n          <mat-label>Account Type Description *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input matInput [readonly]=\"readorWrite\" name=\"accountTypeDescription\" [formControl]=\"itemForm.controls['accountTypeDescription']\">\r\n            <mat-error\r\n              *ngIf=\"itemForm.get('accountTypeDescription').touched && !itemForm.get('accountTypeDescription').valid\">\r\n              Account Type Description is Required!\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n\r\n      <div fxLayout=\"row wrap\" fxLayout.lt-sm=\"column\">\r\n        <div fxFlex=\"100\" class=\"mt-16\" fxLayoutAlign=\"end center\">\r\n          <button mat-raised-button *ngIf=\"!isEdit\" color=\"primary\" [disabled]=\"itemForm.invalid\" (click)=\"submit()\">SAVE</button>\r\n          &nbsp;\r\n          <div [hidden]=\"readorWrite\" >\r\n            <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\"  [disabled]= \"!(itemForm.invalid || itemForm.dirty)\"(click)=\"submit()\">\r\n               Save\r\n              </button>&nbsp;&nbsp;\r\n          </div>\r\n          <div [hidden]=\"!readorWrite || auditData?.recordStatus == 'Close'\">\r\n            <button *ngIf=\"isEdit\" type=\"button\"  mat-raised-button color=\"primary\" (click)=\"editRecord()\">\r\n              Edit\r\n            </button>&nbsp;&nbsp;\r\n          </div>\r\n          <div *ngIf=\"auditData?.authStatus == 'Unauthorized' && readorWrite\" [hidden]=\"!readorWrite\">\r\n            <button *ngIf=\"isEdit\" type=\"button\"  mat-raised-button color=\"primary\" (click)=\"updateRecord('auth')\">\r\n              Authorize\r\n            </button>&nbsp;&nbsp;\r\n          </div> \r\n          <div *ngIf=\"auditData?.recordStatus == 'Close' && auditData?.oneTimeAuth != 'No'\" [hidden]=\"!readorWrite\">\r\n            <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"updateRecord('open')\">\r\n              Reopen\r\n            </button>&nbsp;&nbsp;\r\n          </div>\r\n          <div *ngIf=\"auditData?.recordStatus == 'Open' && auditData?.oneTimeAuth != 'No'\" [hidden]=\"!readorWrite\">\r\n            <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"updateRecord('close')\">\r\n              Close\r\n            </button>&nbsp;&nbsp;\r\n          </div>\r\n          <div *ngIf=\"auditData?.oneTimeAuth == 'No'\" [hidden]=\"!readorWrite\">\r\n            <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"deleteRecord('delete')\">\r\n              Delete\r\n            </button> &nbsp;&nbsp;\r\n          </div>\r\n         \r\n          <button\r\n            mat-raised-button\r\n            color=\"warn\"\r\n            type=\"button\"\r\n            (click)=\"goBack()\"\r\n          >\r\n            Exit\r\n          </button>\r\n\r\n        </div>\r\n      </div>\r\n    </form>\r\n\r\n\r\n  </mat-card-content>\r\n</mat-card>\r\n\r\n<div class=\"mt-32\">\r\n  <app-audit-log *ngIf=\"isAuditData\" #auditLog></app-audit-log>\r\n</div>","import { ChangeDetectorRef, Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { AppLoaderService } from 'app/shared/services/app-loader/app-loader.service';\r\nimport { DataService } from 'app/shared/services/data.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { AuditLogComponent } from '../../audit-log/audit-log.component';\r\nimport { auditLogInterface, loggedInUserInterface } from './add-product-maintenance';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-add-product-maintenance',\r\n  templateUrl: './add-product-maintenance.component.html',\r\n  styleUrls: ['./add-product-maintenance.component.scss']\r\n})\r\nexport class AddProductMaintenanceComponent implements OnInit {\r\n  @ViewChild('auditLog') auditLog : AuditLogComponent\r\n  addProductForm: FormGroup;\r\n  isEdit: boolean = false;\r\n  entityCode: string;\r\n  bankCode: string;\r\n  isProductCode: boolean = false;\r\n  loggedInUser : loggedInUserInterface;\r\n  id: number;\r\n  auditLogData: auditLogInterface;\r\n  entityIsEdit: string;\r\n  readorWrite: boolean=true;\r\n\r\n\r\n  constructor(private formBuilder: FormBuilder,private apiService:ApiService,\r\n    private router:Router,private snack: MatSnackBar, private route : ActivatedRoute,    private dataService : DataService, \r\n    private ls : LocalStoreService, private loader: AppLoaderService,\r\n\r\n    private cdr: ChangeDetectorRef) {this.addProductForm = this.formBuilder.group({\r\n    bankCode: [ '',[Validators.required]],\r\n    entityCode: [ '',[Validators.required]],\r\n    productName: [ '',[Validators.required]],\r\n    productCode: [ '',[Validators.required]],\r\n  id: [ ''],\r\n}) }\r\n  ngOnInit(): void {\r\n\r\n    this.getEntityCode();\r\n    this.route.queryParamMap.subscribe((params: any) => {\r\n      console.log(params.get('id'));\r\n      this.entityIsEdit = params.get('isEdit');\r\n      console.log(\"this.entityIsEdit\",this.entityIsEdit);\r\n      if(params.get('id')){\r\n        this.isEdit = true;\r\n        this.id = params.get('id');\r\n        this.apiService.editEntityById(params.get('id')).subscribe((resp) =>{\r\n           console.log(resp);\r\n           this.getBankCode(resp.entityCode);\r\n           this.buildItemForm(resp);\r\n        });\r\n          this.apiService.getProductById(params.get('id')).subscribe((resp) =>{\r\n          console.log(resp);\r\n          this.buildItemForm(resp);\r\n          this.auditLogData = resp;\r\n          this.dataService.setAuditLogData(this.auditLogData);\r\n          this.dataService.sendClickEvent();\r\n       });\r\n      }\r\n      else{\r\n        this.readorWrite=false;\r\n        this.buildItemForm({});\r\n      }\r\n    }\r\n    ); \r\n    this.loggedInUser = this.ls.getItem('ICUST_USER');\r\n  }\r\n  buildItemForm(item) {\r\n    console.log(\"item\",item)\r\n      this.addProductForm = this.formBuilder.group({\r\n      bankCode: [item.bankCode || '',Validators.required],\r\n      entityCode: [item.entityCode ||'',Validators.required],\r\n      id: [ item.id ||''],\r\n      loggedInUser: [item.loggedInUser || ''],\r\n      productName: [item.productName ||'',Validators.required],\r\n      productCode: [item.productCode ||'',Validators.required],\r\n    });\r\n    console.log(this.addProductForm);\r\n  }\r\n  goBack(){\r\n    this.router.navigate([\"/maintenance/main/product\"]);\r\n  }\r\n  getEntityCode() {\r\n    this.apiService.getEntityCode().subscribe((resp) => {\r\n      this.entityCode = resp;\r\n    });\r\n  }\r\n  getBankCode(entityCode:any) {\r\n    this.apiService.getBankInfoByEntityCode(entityCode).subscribe((resp) => {\r\n      this.bankCode = resp;\r\n      console.log(this.bankCode);\r\n    });\r\n  }\r\n  deleteRecord(operation){\r\n    Swal.fire(\r\n      {\r\n        //text: 'Unable to process' + 'Error ' + this.responseforfileupload.errorMessage + 'Do you want to Proceed??',\r\n        text: 'You are trying to '+ operation +' record.' + ' Do you want to proceed?',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        // confirmButtonText: 'PROCEED.'\r\n        cancelButtonText: 'NO',\r\n        confirmButtonText: 'YES', 'icon': 'info'\r\n      }\r\n    ).then((result => {\r\n      if(result.isConfirmed==true){\r\n        this.apiService.deleteProductById(this.auditLogData.id)\r\n        .subscribe(data => {\r\n          this.router.navigate([\"/maintenance/main/product\"]);\r\n        },\r\n        err=>{\r\n          if (err.status == 200) {\r\n            this.snack.open('Record Deleted Successfully', 'OK', {\r\n              duration: 4000,\r\n              verticalPosition: 'top',\r\n              horizontalPosition: 'right'\r\n            });\r\n          }\r\n          this.router.navigate([\"/maintenance/main/product\"]);\r\n        \r\n      })\r\n      }}))\r\n   \r\n         \r\n       \r\n  }\r\n  editRecord(){\r\n    this.readorWrite=false;\r\n  }\r\n\r\n  updateRecord(operation) {\r\n    Swal.fire(\r\n      {\r\n        //text: 'Unable to process' + 'Error ' + this.responseforfileupload.errorMessage + 'Do you want to Proceed??',\r\n        text: 'You are trying to '+ operation +' record.' + ' Do you want to proceed?',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        // confirmButtonText: 'PROCEED.'\r\n        cancelButtonText: 'NO',\r\n        confirmButtonText: 'YES', 'icon': 'info'\r\n      }\r\n    ).then((result => {\r\n      if(result.isConfirmed==true){\r\n        let payload: any = {};\r\n        payload.id = this.id;\r\n        payload.operation = operation;\r\n        payload.loggedInUser = this.loggedInUser.userName;\r\n        this.apiService.getAuditLogsForProductMaintenance(payload).subscribe((data) => {\r\n          console.log(data);\r\n          this.auditLogData = data;\r\n          this.dataService.setAuditLogData(this.auditLogData);\r\n          this.dataService.sendClickEvent();\r\n          let message = '';\r\n          switch (operation) {\r\n            case 'open':\r\n              message = 'opened'\r\n              break;\r\n            case 'close':\r\n              message = 'closed'\r\n              break;\r\n            case 'auth':\r\n              message = 'authorized'\r\n              break;\r\n            default:\r\n              break;\r\n          }\r\n          this.snack.open(`Record ${message} successful!'`, \"OK\", {\r\n            duration: 2000,\r\n            verticalPosition: \"top\",\r\n            horizontalPosition: \"right\",\r\n          });\r\n        });\r\n      }}))\r\n   \r\n  }\r\n\r\n  getEntityDropdown(){\r\n    this.apiService.getEntityDropdown().subscribe((data) => {\r\n      this.entityCode = data;\r\n      console.log(\"Entity Code\",this.entityCode)  \r\n    });   \r\n  }\r\n  submit(){\r\n    this.addProductForm.value.loggedInUser = this.loggedInUser.userName;\r\n    let payload={\r\n      bankCode: this.addProductForm.value.bankCode,\r\n      entityCode: this.addProductForm.value.entityCode,\r\n      id:this.addProductForm.value.id,\r\n      productName:this.addProductForm.value.productName,\r\n      productCode:this.addProductForm.value.productCode,\r\n      loggedInUser:this.addProductForm.value.loggedInUser,\r\n       // this.addProductForm.value.loggedInUser = this.loggedInUser.userName;\r\n      //txnId:101,\r\n\r\n    }\r\n\r\n    this.loader.open();\r\n    this.addProductForm.value.loggedInUser = this.loggedInUser;\r\n    this.apiService.updateProductDetails(payload).subscribe(response => {\r\n    this.loader.close();\r\n    if(response != null && !this.isEdit){\r\n      this.router.navigate([`/maintenance/main/product`]).then(_=>{\r\n        this.snack.open('Record Added Successfully!', 'OK', \r\n        { duration: 4000 , \r\n          verticalPosition: \"top\",\r\n          horizontalPosition: \"right\",});\r\n      });\r\n      this.cdr.markForCheck();\r\n    }\r\n    else if(response != null && this.isEdit){\r\n      this.router.navigate([`/maintenance/main/product`]).then(_=>{\r\n        this.snack.open('Record updated Successfully!', 'OK', \r\n        { duration: 4000 , \r\n          verticalPosition: \"top\",\r\n          horizontalPosition: \"right\",});\r\n      });\r\n      this.cdr.markForCheck();\r\n    }\r\n    else if(response != null || this.isEdit == true){\r\n     // \r\n      console.log(\"response\",response);\r\n      this.router.navigate([`/maintenance/main/product`]).then(_=>{\r\n        this.snack.open('Record Saved Successfully!', 'OK', \r\n        { duration: 4000 , \r\n          verticalPosition: \"top\",\r\n          horizontalPosition: \"right\",});\r\n      });\r\n      this.cdr.markForCheck();\r\n     }\r\n  }) \r\n  \r\n  }\r\n  onProductCodeChange(event:any){\r\n    this.apiService.isProductCodePresent(event.value).subscribe((resp) => {\r\n      console.log(\"resp::\",resp) //true\r\n      if(resp == true){\r\n        // this.isProductCode = true;\r\n        this.isProductCode = false;\r\n        console.log(\"isProductCode::\",this.isProductCode)\r\n        this.snack.open(`This is an existing Product Code!'`, \"OK\", {\r\n          duration: 2000,\r\n          verticalPosition: \"top\",\r\n          horizontalPosition: \"right\",\r\n        });\r\n      }else{\r\n        this.isProductCode = false;\r\n      }\r\n    });\r\n   // console.log(\"isProductCode::\",this.isProductCode)//false\r\n  }\r\n  dataByEntityCode(index,item){\r\n    return item.entityCode\r\n  }\r\n  dataByBankCode(index,item){\r\n   return item.bankCode\r\n  }\r\n}\r\n","<h1 class=\"main-head\" *ngIf=\"!isEdit\"><small class=\"small-head\">Home > Maintenance Summary > Product Maintenance > Add Product Maintenance </small></h1>\r\n<h1 class=\"main-head\" *ngIf=\"isEdit\"><small class=\"small-head\">Home > Maintenance Summary > Product Maintenance > Edit Product Maintenance </small></h1>\r\n<div fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"mt-16\">\r\n    <button mat-icon-button (click)=\"goBack()\" >\r\n        <mat-icon>arrow_back</mat-icon>\r\n    </button>\r\n    <h1 *ngIf=\"!isEdit\" class=\"add-text\">Add Product</h1>\r\n    <h1 *ngIf=\"isEdit\" class=\"add-text\">Edit Product</h1>\r\n</div>\r\n\r\n<mat-card>\r\n    <mat-card-content><!--(ngSubmit)=\"submit()\"-->\r\n        <form [formGroup]=\"addProductForm\" class=\"m-333\">\r\n            <!-- <h1 *ngIf=\"!isEdit\">Add Product</h1>\r\n            <h1 *ngIf=\"isEdit\">Edit Product</h1> -->\r\n            <!-- <div fxLayout=\"row wrap\" fxLayout.lt-sm=\"column\"> -->\r\n                <div fxLayoutAlign=\"space-between -\" fxLayoutGap=\"15px\">\r\n                    <div fxFlex=\"33.33\" *ngIf=\"!readorWrite\">\r\n                        <mat-label>Entity code *</mat-label>\r\n                        <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n\r\n\r\n                            <mat-select name=\"entityCode\"  formControlName=\"entityCode\"  class=\"selectOption\"\r\n\r\n                            (selectionChange)=\"getBankCode($event.value)\" >\r\n                             <mat-option *ngFor=\"let data of entityCode ; trackBy:dataByEntityCode\"  [value]=\"data.entityCode\">\r\n                             {{data.entityCode}}\r\n                             </mat-option>\r\n                          </mat-select> \r\n                          <!-- <mat-select name=\"entity\" formControlName=\"entityCode\"  placeholder=\"Entity Code\">\r\n                           <mat-option *ngFor=\"let entity of entityCode\" [value]=\"entity.entityCode\">\r\n                            {{ entity.entityCode }}\r\n                          </mat-option>\r\n                          </mat-select> -->\r\n                          <mat-error\r\n                            *ngIf=\"addProductForm.get('entityCode').touched && !addProductForm.get('entityCode').valid\">\r\n                            Enter the Entity Code!\r\n                          </mat-error>\r\n                        </mat-form-field>\r\n                      </div>\r\n\r\n                      <div fxFlex=\"33.33\" *ngIf=\"readorWrite\">\r\n                        <mat-label>Entity Code *</mat-label>\r\n                        <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                          <input \r\n                          matInput name=\"entityCode\"\r\n                          type=\"text\" [readonly]=\"readorWrite\" \r\n                          formControlName=\"entityCode\"\r\n                          placeholder=\"Product Name\"\r\n                      />\r\n                        </mat-form-field>\r\n                        \r\n                    </div>\r\n\r\n                      <div fxFlex=\"33.33\" *ngIf=\"!readorWrite\">\r\n                        <mat-label>Bank Code *</mat-label>\r\n                        <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n              \r\n\r\n                          <mat-select name=\"bankCode\" formControlName=\"bankCode\" class=\"selectOption\">\r\n                            <mat-option *ngFor=\"let data of bankCode;trackBy:dataByBankCode\" [value]=\"data.bankCode\">\r\n                              {{data?.bankCode}}\r\n                            </mat-option>\r\n                          </mat-select>\r\n                          <mat-error\r\n                            *ngIf=\"addProductForm.get('bankCode').touched && !addProductForm.get('bankCode').valid\">\r\n                            Bank code is Required\r\n                          </mat-error>\r\n                        </mat-form-field>\r\n                      </div>\r\n                      <div fxFlex=\"33.33\" *ngIf=\"readorWrite\">\r\n                        <mat-label>Bank Code *</mat-label>\r\n                        <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                          <input \r\n                          matInput name=\"bankCode\"\r\n                          type=\"text\" [readonly]=\"readorWrite\" \r\n                          formControlName=\"bankCode\"\r\n                          placeholder=\"Product Name\"\r\n                      />\r\n                        </mat-form-field>\r\n                        \r\n                    </div>\r\n\r\n                </div>\r\n                <div fxLayoutAlign=\"space-between center\" fxLayoutGap=\"15px\">\r\n                    <div fxFlex=\"33.33\"  *ngIf=\"!readorWrite\">\r\n                        <mat-label>Product Code *</mat-label>\r\n                        <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                            <mat-select name=\"productCode\" placeholder=\"Product Code\" formControlName=\"productCode\"\r\n                            (selectionChange)=\"onProductCodeChange($event)\" >\r\n                                <mat-option>Select</mat-option>\r\n                                <mat-option value=\"CHD\">CHD</mat-option>\r\n                                <mat-option value=\"CHW\">CHW</mat-option>\r\n                                <mat-option value=\"CQD\">CQD</mat-option>\r\n                                <mat-option value=\"CQW\">CQW</mat-option>\r\n                              </mat-select>\r\n                              <mat-error *ngIf=\"isProductCode\">This is an existing product code</mat-error>\r\n                            <mat-error\r\n                            *ngIf=\"addProductForm.get('productCode').touched && !addProductForm.get('productCode').valid\">\r\n                            Product code is Required\r\n                          </mat-error>\r\n                        </mat-form-field>\r\n                        \r\n                    </div>\r\n                    <div fxFlex=\"33.33\" *ngIf=\"readorWrite\">\r\n                      <mat-label>Product Code *</mat-label>\r\n                      <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                        <input \r\n                        matInput name=\"productName\"\r\n                        type=\"text\" [readonly]=\"readorWrite\" \r\n                        formControlName=\"productName\"\r\n                        placeholder=\"Product Name\"\r\n                    />\r\n                      </mat-form-field>\r\n                      \r\n                  </div>\r\n                    <div fxFlex=\"33.33\">\r\n                        <mat-label>Product Name *</mat-label>\r\n                        <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                            <input \r\n                                matInput name=\"productName\"\r\n                                type=\"text\" [readonly]=\"readorWrite\" \r\n                                formControlName=\"productName\"\r\n                                placeholder=\"Product Name\"\r\n                            />\r\n                            <mat-error\r\n                            *ngIf=\"addProductForm.get('productName').touched && !addProductForm.get('productName').valid\">\r\n                            Product Name is Required\r\n                          </mat-error>\r\n                        </mat-form-field>\r\n                    </div>\r\n                </div>\r\n            <div fxLayout=\"row wrap\" fxLayout.lt-sm=\"column\">\r\n                <div fxFlex=\"100\" class=\"mt-16\" fxLayoutAlign=\"end center\">\r\n                  <button *ngIf=\"!isEdit\" \r\n                    color=\"primary\" \r\n                    mat-raised-button \r\n                    (click)=\"submit()\"\r\n                    [disabled]=\"!(addProductForm.valid && addProductForm.dirty && !isProductCode)\"\r\n                  >\r\n                    Save\r\n                 \r\n                  </button> \r\n                  <div [hidden]=\"readorWrite\">\r\n                    <button *ngIf=\"isEdit\"  type=\"button\" mat-raised-button color=\"primary\"\r\n\r\n                    [disabled]= \"! addProductForm.valid\" \r\n                    (click)=\"submit(addProductForm.value)\">\r\n                       Save\r\n                     </button>\r\n                  </div>  \r\n               \r\n                  &nbsp;\r\n                  <div [hidden]=\"!readorWrite || auditLogData?.recordStatus == 'Close'\">\r\n                    <button *ngIf=\"isEdit\" type=\"button\"  mat-raised-button color=\"primary\" (click)=\"editRecord()\">\r\n                      Edit\r\n                    </button>&nbsp;&nbsp;\r\n                  </div>\r\n                  <div *ngIf=\"auditLogData?.authStatus == 'Unauthorized' && readorWrite\" [hidden]=\"!readorWrite\">\r\n                    <button *ngIf=\"isEdit\" type=\"button\"  mat-raised-button color=\"primary\" (click)=\"updateRecord('auth')\">\r\n                      Authorize\r\n                    </button>&nbsp;&nbsp;\r\n                  </div> \r\n                  <div *ngIf=\"auditLogData?.recordStatus == 'Close' && auditLogData?.oneTimeAuth != 'No'\" [hidden]=\"!readorWrite\">\r\n                    <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"updateRecord('open')\">\r\n                      Reopen\r\n                    </button>&nbsp;&nbsp;\r\n                  </div>\r\n                  <div *ngIf=\"auditLogData?.recordStatus == 'Open' && auditLogData?.oneTimeAuth != 'No'\" [hidden]=\"!readorWrite\">\r\n                    <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"updateRecord('close')\">\r\n                      Close\r\n                    </button>&nbsp;&nbsp;\r\n                  </div>\r\n                  <div *ngIf=\"auditLogData?.oneTimeAuth == 'No'\" [hidden]=\"!readorWrite\">\r\n                    <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"deleteRecord('delete')\">\r\n                      Delete\r\n                    </button> &nbsp;&nbsp;\r\n                  </div>\r\n                 \r\n                  <button\r\n                    mat-raised-button\r\n                    color=\"warn\"\r\n                    type=\"button\"\r\n                    (click)=\"goBack()\"\r\n                  >\r\n                    Exit\r\n                  </button>\r\n                </div>\r\n              </div>\r\n        </form>\r\n    </mat-card-content>\r\n</mat-card>\r\n\r\n<div *ngIf=\"auditLogData\" class=\"mt-32\">\r\n  <app-audit-log #auditLog></app-audit-log>\r\n</div>\r\n\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { denomMaster } from 'app/shared/models/denomMaster';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { AppLoaderService } from 'app/shared/services/app-loader/app-loader.service';\r\nimport { DataService } from 'app/shared/services/data.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { DemonMasterCrudNgxTableComponent } from '../demon-master-crud-ngx-table.component';\r\nimport Swal from 'sweetalert2';\r\nimport { THIS_EXPR } from '@angular/compiler/src/output/output_ast';\r\n\r\n\r\n@Component({\r\n  selector: 'app-denom-master-table-popup',\r\n  templateUrl: './denom-master-table-popup.component.html',\r\n  styleUrls: ['./denom-master-table-popup.component.scss']\r\n})\r\nexport class DenomMasterTablePopupComponent implements OnInit {\r\n  public itemForm: FormGroup;\r\n  \r\n\r\n  currentUser: string;\r\n  denomMasterStatus: denomMaster;\r\n  currency:  string[] = [];\r\n  bankCode:  string[] = [];\r\n  entityCode:  string[] = [];\r\n  id: number;\r\n  loggedInUser :string;\r\n  auditData : denomMaster;\r\n  isAuditData : boolean = false;\r\n  show = false;\r\n  isEdit: boolean = false;\r\n  readorWrite: boolean=true;\r\n  patternValidation: boolean=true;\r\n  constructor(\r\n    // @Inject(MAT_DIALOG_DATA) public data: any,\r\n    // public dialogRef: MatDialogRef<DemonMasterCrudNgxTableComponent>,\r\n    private fb: FormBuilder,private api:ApiService,private loader: AppLoaderService,\r\n    private snack: MatSnackBar,\r\n    private router:Router,\r\n    private ls:LocalStoreService,\r\n    private apiService: ApiService,\r\n    private dataService:DataService,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.currentUser = this.ls.getItem(\"ICUST_USER\");\r\n    // this.dataService.getDenomMasterStatus.subscribe(data =>{\r\n    //   this.denomMasterStatus = typeof this.denomMasterStatus === 'object' ? data : {};\r\n    // });\r\n\r\n    setTimeout(() => {  \r\n      this.denomMasterStatus = JSON.parse(localStorage.getItem('fetchdenomValue'));\r\n      if(this.denomMasterStatus == null || this.denomMasterStatus == undefined){\r\n        this.readorWrite=false;\r\n        this.buildItemForm({})\r\n      }       \r\n      else if(this.denomMasterStatus.id != null || this.denomMasterStatus.id != undefined){\r\n      this.loader.open();\r\n      this.id = this.denomMasterStatus.id;\r\n      this.buildItemForm(this.denomMasterStatus)\r\n      this.isEdit = true;\r\n      if(this.denomMasterStatus.authStatus == \"U\"){\r\n        this.denomMasterStatus.authDate = \"\"\r\n        this.denomMasterStatus.authBy = \"\"\r\n      };\r\n      this.auditData = this.denomMasterStatus;\r\n      this.isAuditData = true;\r\n      this.dataService.setAuditLogData(this.auditData);\r\n      this.loader.close();\r\n      }\r\n    }, 1000)\r\n\r\n    this.getBankCode();\r\n    this.getCurrencyValue();\r\n    this.getEntityCode();\r\n    this.loggedInUser = this.ls.getItem('ICUST_USER').userName;\r\n    // this.countryCurrency=this.data.currencyValues;\r\n    // this.bankCodevalues=this.data.bankCode;\r\n  }\r\n  buildItemForm(item) {\r\n    this.itemForm = this.fb.group({\r\n      authStatus : [item.authStatus || '',],\r\n      bankCode\t: [item.bankCode || '', [Validators.required]],\r\n      currency\t: [item.currency || '',Validators.required],\r\n      denomCode\t: [item.denomCode || '',Validators.required],\r\n      denomDesc\t: [item.denomDesc || '',Validators.required],\r\n      denomValue\t: [item.denomValue || '',Validators.required],\r\n      entityCode: [item.entityCode || '',[Validators.required]],\r\n      id\t: [item.id || null],\r\n      oneTimeAuth\t: [item.oneTimeAuth || ''],\r\n      recordStatus\t: [item.recordStatus || ''],\r\n      version\t: [item.version || ''],\r\n\r\n    })\r\n  }\r\n\r\n  submit() {\r\n    if(this.itemForm.invalid){\r\n      return;\r\n    }else{\r\n      this.loader.open();\r\n      this.itemForm.value.loggedInUser = this.loggedInUser;\r\n      this.api.saveDenomMaster(this.itemForm.value).subscribe((resp) => {\r\n      this.loader.close();\r\n      this.router.navigate([`/maintenance/main/denominationMaster`]).then(_=>{\r\n          this.snack.open('Data Saved Successfully!', 'OK', \r\n          { duration: 4000 , \r\n            verticalPosition: \"top\",\r\n            horizontalPosition: \"right\",});\r\n        });\r\n      },(err:any) =>{\r\n        this.loader.close();\r\n        this.snack.open(`Error!`, 'OK', { duration: 4000,  \r\n          verticalPosition: \"top\",\r\n          horizontalPosition: \"right\",});\r\n        }\r\n      )\r\n      } \r\n   \r\n  }\r\n\r\n  getCurrencyValue(){\r\n    // this.api.getCountryValues().subscribe((currencyValues : any)=> {\r\n    //   this.currency=currencyValues\r\n    //   });\r\n    this.apiService.getCurrencyDetails().subscribe(data=>{\r\n      console.log(\"Auth currecy details\", data)\r\n      for(let i=0; i<data.length;i++){\r\n        this.currency.push(data[i].currencyId)\r\n      }\r\n      console.log(this.currency);\r\n    })\r\n  }\r\n  _keyPress(event: any) {\r\n    const pattern = /[0-9]/;\r\n    let inputChar = String.fromCharCode(event.charCode);\r\n    if (!pattern.test(inputChar)) {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n  getBankCode(){\r\n    this.api.getBankCode().subscribe((bnkCode : any)=> {\r\n      console.log(bnkCode);\r\n      for(let i=0; i<bnkCode.length;i++){\r\n        if(bnkCode[i].authStatus==='A'){\r\n          this.bankCode.push(bnkCode[i]);\r\n        }\r\n      }\r\n      console.log(this.bankCode);\r\n      // this.bankCode=bnkCode\r\n      });\r\n  }\r\n\r\n  deleteRecord(operation){\r\n    Swal.fire(\r\n      {\r\n        //text: 'Unable to process' + 'Error ' + this.responseforfileupload.errorMessage + 'Do you want to Proceed??',\r\n        text: 'You are trying to '+ operation +' record.' + ' Do you want to proceed?',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        // confirmButtonText: 'PROCEED.'\r\n        cancelButtonText: 'NO',\r\n        confirmButtonText: 'YES', 'icon': 'info'\r\n      }\r\n    ).then((result => {\r\n      if(result.isConfirmed==true){\r\n        this.apiService.deleteDenomMaster(this.auditData.id)\r\n        .subscribe(data => {\r\n         this.router.navigate([`/maintenance/main/denominationMaster`]);\r\n        },\r\n        err=>{\r\n          if (err.status == 200) {\r\n            this.snack.open('Record Deleted Successfully', 'OK', {\r\n              duration: 4000,\r\n              verticalPosition: 'top',\r\n              horizontalPosition: 'right'\r\n            });\r\n          }\r\n         this.router.navigate([`/maintenance/main/denominationMaster`]);\r\n        \r\n      })\r\n      }}))\r\n   \r\n         \r\n       \r\n  }\r\n  editRecord(){\r\n    this.readorWrite=false;\r\n  }\r\n\r\n  updateRecord(operation) {\r\n    Swal.fire(\r\n      {\r\n        //text: 'Unable to process' + 'Error ' + this.responseforfileupload.errorMessage + 'Do you want to Proceed??',\r\n        text: 'You are trying to '+ operation +' record.' + ' Do you want to proceed?',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        // confirmButtonText: 'PROCEED.'\r\n        cancelButtonText: 'NO',\r\n        confirmButtonText: 'YES', 'icon': 'info'\r\n      }\r\n    ).then((result => {\r\n      if(result.isConfirmed==true){\r\n        let payload: any = {};\r\n        payload.id = this.id;\r\n        payload.operation = operation;\r\n        payload.loggedInUser = this.loggedInUser;\r\n        this.apiService.getAuditLogsForDenominationMaster(payload).subscribe((data) => {\r\n          if( data.authStatus==\"U\" ){\r\n            data.authDate =\"\"\r\n            data.authBy=\"\"\r\n          }\r\n          this.auditData = data;\r\n          this.dataService.setAuditLogData(this.auditData);\r\n          this.isAuditData = true;\r\n          this.dataService.sendClickEvent();\r\n          let message = '';\r\n          switch (operation) {\r\n            case 'open':\r\n              message = 'opened'\r\n              break;\r\n            case 'close':\r\n              message = 'closed'\r\n              break;\r\n            case 'auth':\r\n              message = 'authorized'\r\n              break;\r\n            default:\r\n              break;\r\n          }\r\n    \r\n    \r\n          this.snack.open(`Record ${message} successfully!`, \"OK\", {\r\n            duration: 2000,\r\n            verticalPosition: \"top\",\r\n            horizontalPosition: \"right\",\r\n          });\r\n        });\r\n      }}))\r\n   \r\n  }\r\n\r\n  _keyPress1(event: any) {\r\n    this.patternValidation=true;\r\n    const pattern = /[A-Z]{2}[0-9]{1,8}$/;\r\n    if(pattern.test(event.target.value) === false){\r\n      this.patternValidation=false;\r\n    }\r\n    else{\r\n      this.patternValidation=true;\r\n    }\r\n  }\r\n  getEntityCode() {\r\n    this.api.getEntityCode().subscribe((resp) => {\r\n      console.log(resp);\r\n      for(let i=0; i<resp.length;i++){\r\n        if(resp[i].authStatus==='A'){\r\n          this.entityCode.push(resp[i]);\r\n        }\r\n      }\r\n      console.log(this.entityCode);\r\n      // this.entityCode = resp;\r\n    });\r\n  }\r\n\r\n  goBack(){\r\n    localStorage.removeItem('fetchdenomValue');\r\n    this.router.navigate([`/maintenance/main/denominationMaster`]);\r\n  }\r\n  dataByEntity(index,data){\r\n    return data.entityCode;\r\n  }\r\n  dataByBank(index,data){\r\n    return data.bankCode;\r\n  }\r\n  dataByCurrency(index,data){\r\n    return data.currencyCode;\r\n  }\r\n\r\n}\r\n","<h1 class=\"main-head\"><small class=\"small-head\">Home > Maintenance Summary  > Denomination Master Maintenance > <span *ngIf=\"!isEdit\">Add</span> <span *ngIf=\"isEdit\">Edit</span> Denomination Master Details</small></h1>\r\n<div fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"mt-16\">\r\n  <button mat-icon-button (click)=\"goBack()\">\r\n    <mat-icon>arrow_back</mat-icon>\r\n  </button>\r\n  <h1 *ngIf=\"!isEdit\" class=\"add-text\">Add Denomination Master Details</h1>\r\n  <h1 *ngIf=\"isEdit\" class=\"add-text\">Edit Denomination Master Details</h1>\r\n</div>\r\n\r\n<mat-card>\r\n  <mat-card-content>\r\n    <!-- <h1 matDialogTitle>Add Denomination Master Details</h1> -->\r\n    <form  [formGroup]=\"itemForm\" *ngIf=\"itemForm\" class=\"m-333\">\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\" fxLayoutGap=\"15px\">\r\n        \r\n        <div fxFlex=\"33.33\" *ngIf=\"!readorWrite\">\r\n          <mat-label>Entity code *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <mat-select name=\"entityCode\"  [formControl]=\"itemForm.controls['entityCode']\" class=\"selectOption\">\r\n              <mat-option value=\"\">Select</mat-option>\r\n              <mat-option *ngFor=\"let data of entityCode; trackBy:dataByEntity\"  [value]=\"data.entityCode\">\r\n            {{data?.entityCode}}\r\n            </mat-option>\r\n        </mat-select>\r\n            <mat-error\r\n            *ngIf=\"itemForm.get('entityCode').touched && !itemForm.get('entityCode').valid\">\r\n            Entity Code is Required!\r\n        </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n        <div fxFlex=\"33.33\" *ngIf=\"readorWrite\">\r\n          <mat-label> Entity Code *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input\r\n            matInput\r\n           readonly \r\n            [formControl]=\"itemForm.controls['entityCode']\" \r\n          />\r\n          </mat-form-field>\r\n        </div>\r\n\r\n        <div fxFlex=\"33.33\" *ngIf=\"!readorWrite\">\r\n          <mat-label>Bank Code *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <mat-select name=\"bankCode\"  [formControl]=\"itemForm.controls['bankCode']\" class=\"selectOption\"\r\n                >\r\n                <mat-option value=\"\">Select</mat-option>\r\n                <mat-option *ngFor=\"let data of bankCode; trackBy:dataByBank\"  [value]=\"data.bankCode\">\r\n                {{data?.bankCode}}\r\n                </mat-option>\r\n            </mat-select>\r\n            <mat-error\r\n        *ngIf=\"itemForm.get('bankCode').touched && !itemForm.get('bankCode').valid\">\r\n        Bank Code is Required!\r\n    </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n        <div fxFlex=\"33.33\" *ngIf=\"readorWrite\">\r\n          <mat-label> Bank Code *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input\r\n            matInput\r\n           readonly \r\n            [formControl]=\"itemForm.controls['bankCode']\" \r\n          />\r\n          </mat-form-field>\r\n        </div>\r\n\r\n        <div fxFlex=\"33.33\" *ngIf=\"!readorWrite\">\r\n          <mat-label>Currency *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <mat-select name=\"currency\" [formControl]=\"itemForm.controls['currency']\" class=\"selectOption\"\r\n               >\r\n               <mat-option value=\"\">Select</mat-option>\r\n                <mat-option *ngFor=\"let data of currency; trackBy:dataByCurrency\"  [value]=\"data.currencyCode\">\r\n                {{data?.currencyCode}}\r\n                </mat-option>\r\n            </mat-select>\r\n            <mat-error\r\n            *ngIf=\"itemForm.get('currency').touched && !itemForm.get('currency').valid\">\r\n            Currency is Required!\r\n        </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n        <div fxFlex=\"33.33\" *ngIf=\"readorWrite\">\r\n          <mat-label>Currency *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input\r\n            matInput\r\n           readonly \r\n            [formControl]=\"itemForm.controls['currency']\" \r\n          />\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\" fxLayoutGap=\"15px\"> \r\n        <div fxFlex=\"33.33\" >\r\n          <mat-label>Denom Code *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            \r\n            <input\r\n            matInput \r\n            [readonly]=\"readorWrite\" \r\n            name=\"denomCode\"\r\n            (keyup)=_keyPress1($event) \r\n            maxlength=\"10\"\r\n            [formControl]=\"itemForm.controls['denomCode']\">\r\n\r\n            <mat-error\r\n            *ngIf=\"itemForm.get('denomCode').touched && !itemForm.get('denomCode').valid\">\r\n            Denom Code is Required!\r\n        </mat-error>\r\n          </mat-form-field>\r\n          <div class=\"pattern\"\r\n        *ngIf=\"patternValidation===false\">\r\n          pattern mismatch\r\n        </div>\r\n        </div>\r\n\r\n        <div fxFlex=\"33.33\" >\r\n          <mat-label>Denom Desc *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input\r\n            matInput\r\n            name=\"denomDesc\"  [readonly]=\"readorWrite\" \r\n            [formControl]=\"itemForm.controls['denomDesc']\">\r\n            <mat-error\r\n            *ngIf=\"itemForm.get('denomDesc').touched && !itemForm.get('denomDesc').valid\">\r\n            Denom Desc is Required!\r\n        </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n\r\n        <div fxFlex=\"33.33\" >\r\n          <mat-label>Denom Value *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input\r\n            matInput [readonly]=\"readorWrite\" \r\n            name=\"denomValue\"\r\n            (keypress)=_keyPress($event) maxlength=\"10\"\r\n            [formControl]=\"itemForm.controls['denomValue']\">\r\n            <mat-error\r\n            *ngIf=\"itemForm.get('denomValue').touched && !itemForm.get('denomValue').valid\">\r\n            Denom Value is Required!\r\n        </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- <div fxLayoutAlign=\"space-between center\" fxLayoutGap=\"15px\">\r\n        <div fxFlex=\"33.33\" >      \r\n          <mat-slide-toggle [formControl]=\"itemForm.controls['isActive']\">Active Customer</mat-slide-toggle>\r\n        </div>\r\n\r\n      </div> -->\r\n\r\n      <div fxLayout=\"row wrap\" fxLayout.lt-sm=\"column\">\r\n        <div fxFlex=\"100\" class=\"mt-16\" fxLayoutAlign=\"end center\">\r\n          <button mat-raised-button *ngIf=\"!isEdit\" color=\"primary\" [disabled]=\"itemForm.invalid || !patternValidation\" (click)=\"submit()\">SAVE</button>\r\n          &nbsp;\r\n          <div [hidden]=\"readorWrite\" >\r\n            <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\"  [disabled]= \"!(itemForm.invalid || itemForm.dirty)\"(click)=\"submit()\">\r\n               Save\r\n              </button>&nbsp;&nbsp;\r\n          </div>\r\n          <div [hidden]=\"!readorWrite || auditData?.recordStatus == 'Close'\">\r\n            <button *ngIf=\"isEdit\" type=\"button\"  mat-raised-button color=\"primary\" (click)=\"editRecord()\">\r\n              Edit\r\n            </button>&nbsp;&nbsp;\r\n          </div>\r\n          <div *ngIf=\"auditData?.authStatus == 'Unauthorized' && readorWrite\" [hidden]=\"!readorWrite\">\r\n            <button *ngIf=\"isEdit\" type=\"button\"  mat-raised-button color=\"primary\" (click)=\"updateRecord('auth')\">\r\n              Authorize\r\n            </button>&nbsp;&nbsp;\r\n          </div> \r\n          <div *ngIf=\"auditData?.recordStatus == 'Close' && auditData?.oneTimeAuth != 'No'\" [hidden]=\"!readorWrite\">\r\n            <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"updateRecord('open')\">\r\n              Reopen\r\n            </button>&nbsp;&nbsp;\r\n          </div>\r\n          <div *ngIf=\"auditData?.recordStatus == 'Open' && auditData?.oneTimeAuth != 'No'\" [hidden]=\"!readorWrite\">\r\n            <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"updateRecord('close')\">\r\n              Close\r\n            </button>&nbsp;&nbsp;\r\n          </div>\r\n          <div *ngIf=\"auditData?.oneTimeAuth == 'No'\" [hidden]=\"!readorWrite\">\r\n            <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"deleteRecord('delete')\">\r\n              Delete\r\n            </button> &nbsp;&nbsp;\r\n          </div>\r\n         \r\n          <button\r\n            mat-raised-button\r\n            color=\"warn\"\r\n            type=\"button\"\r\n            (click)=\"goBack()\"\r\n          >\r\n            Exit\r\n          </button>\r\n\r\n        </div>\r\n      </div>\r\n      \r\n    </form>\r\n\r\n\r\n  </mat-card-content>\r\n</mat-card>\r\n\r\n<div class=\"mt-32\">\r\n  <app-audit-log *ngIf=\"isAuditData\" #auditLog></app-audit-log>\r\n</div>","import { ChangeDetectorRef, Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { DataService } from 'app/shared/services/data.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport Swal from 'sweetalert2';\r\nimport { auditLogInterface } from '../country-state-maintenance/country-state-popup/country-state-popup';\r\nimport { roleAuditLogInterface } from '../role-maintenance/add-role-maintenance.component';\r\n\r\n@Component({\r\n  selector: 'app-add-edit-security-policy',\r\n  templateUrl: './add-edit-security-policy.component.html',\r\n  styleUrls: ['./add-edit-security-policy.component.scss']\r\n})\r\nexport class AddEditSecurityPolicyComponent implements OnInit {\r\n\r\n  isEdit: boolean = false;\r\n  loggedInUser : any;\r\n  id : any;\r\n  editNow: boolean = false;\r\n  readorWrite: boolean=true;\r\n  securityForm: FormGroup;\r\n  auditData : roleAuditLogInterface;\r\n  auditLogData : auditLogInterface;\r\n  isAuditData : boolean = false\r\n  currentUser = this.ls.getItem(\"ICUST_USER\");\r\n\r\n  constructor(private router: Router,\r\n    private route: ActivatedRoute,\r\n    private formBuilder: FormBuilder,\r\n    private cdr: ChangeDetectorRef,\r\n    private apiService: ApiService,\r\n    private ls : LocalStoreService,\r\n    private snack: MatSnackBar,\r\n    private dataService : DataService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.buildForm('')\r\n    this.route.queryParamMap.subscribe((params: any) => {\r\n      if(params.get('id')){\r\n        this.isEdit = true;\r\n        this.apiService.fetchSecurityPolicy(params.get('id')).subscribe((data) => {\r\n          if(data){\r\n             this.buildForm(data);\r\n             console.log(data.version);\r\n             this.auditLogData = data;\r\n             this.dataService.setAuditLogData(this.auditLogData);\r\n             this.dataService.sendClickEvent();\r\n          }\r\n        });\r\n      }\r\n      else{\r\n        this.buildForm(null);\r\n        this.readorWrite=false;\r\n      }\r\n    });\r\n    this.loggedInUser = this.ls.getItem('ICUST_USER');\r\n  }\r\n\r\n  buildForm(item) {\r\n    console.log(item);\r\n    this.securityForm = this.formBuilder.group({\r\n      activeEdit: [item ? item.isActive : \"\"],\r\n      authStatus: [item ? item.authStatus : \"\"],\r\n      authBy: [item ? item.authBy : \"\"],\r\n      authDate: [item ? item.authDate : \"\"],\r\n      maxInvLogins: [item ? item.maxInvLogins : \"\", Validators.required],\r\n      maxPswdLength: [item ? item.maxPswdLength : \"\", Validators.required],\r\n      minPswdLength: [item ? item.minPswdLength : \"\", Validators.required],\r\n      modifiedBy: [item ? item.modifiedBy : \"\"],\r\n      modifiedTime: [item ? item.modifiedTime : \"\"],\r\n      loggedInUser: [\"\"],\r\n      notifyPasswordExpiryInDays: [\r\n        item ? item.notifyPasswordExpiryInDays : \"\",\r\n        Validators.required,\r\n      ],\r\n      firstTimeAuth: [item ? item.firstTimeAuth : \"\"],\r\n      pswdComplexLcase: [item ? item.pswdComplexLcase : \"\"],\r\n      pswdComplexNum: [item ? item.pswdComplexNum : \"\"],\r\n      pswdComplexSplc: [item ? item.pswdComplexSplc : \"\"],\r\n      pswdComplexUcase: [item ? item.pswdComplexUcase : \"\"],\r\n      // pswdComplexity: [item?item.pswdComplexity :false],\r\n      pswdExpiry: [item ? item.pswdExpiry : \"\", Validators.required],\r\n      pswdReuseAft: [item ? item.pswdReuseAft : \"\", Validators.required],\r\n      version: [item ? item.version : 0],\r\n      passwordGenerationType: [item ? item.passwordGenerationType : \"Manual\"],\r\n    });\r\n   \r\n  }\r\n\r\n  onSave() {\r\n    console.log(this.securityForm.value);\r\n    this.securityForm.get('loggedInUser').setValue(this.currentUser.userName);\r\n    this.apiService.upsertSecurityPolicy(this.securityForm.value).subscribe((resp) => {\r\n      console.log(resp);\r\n      this.snack.open('Record Saved Successfully', 'OK', {\r\n        duration: 4000,\r\n        verticalPosition: 'top',\r\n        horizontalPosition: 'right'\r\n      });\r\n      this.router.navigate([\"/maintenance/main/securityPolicy\"]);\r\n    });\r\n  }\r\n\r\n  editRecord(){\r\n    this.readorWrite=false;\r\n  }\r\n\r\n  updateRecord(operation) {\r\n    Swal.fire(\r\n      {\r\n        //text: 'Unable to process' + 'Error ' + this.responseforfileupload.errorMessage + 'Do you want to Proceed??',\r\n        text: 'You are trying to '+ operation +' record.' + ' Do you want to proceed?',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        // confirmButtonText: 'PROCEED.'\r\n        cancelButtonText: 'NO',\r\n        confirmButtonText: 'YES', 'icon': 'info'\r\n      }\r\n    ).then((result => {\r\n      if(result.isConfirmed==true){\r\n        let payload: any = {};\r\n    payload.id = this.auditLogData.version;\r\n    payload.operation = operation;\r\n    payload.loggedInUser = this.loggedInUser.userName;\r\n    this.apiService.getAuditLogsSecurityPolicy(payload).subscribe((data) => {\r\n      this.auditLogData = data;\r\n      this.dataService.setAuditLogData(this.auditLogData);\r\n      this.dataService.sendClickEvent();\r\n      let message = '';\r\n      switch (operation) {\r\n        case 'open':\r\n          message = 'opened'\r\n          break;\r\n        case 'close':\r\n          message = 'closed'\r\n          break;\r\n        case 'auth':\r\n          message = 'authorized'\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n      this.snack.open(`Record ${message} successful!'`, \"OK\", {\r\n        duration: 2000,\r\n        verticalPosition: \"top\",\r\n        horizontalPosition: \"right\",\r\n      });\r\n    });\r\n      }}))\r\n    \r\n  }\r\n\r\n  goBack() {\r\n    this.router.navigate([\"/maintenance/main/securityPolicy\"]);\r\n  }\r\n\r\n}\r\n","<h1 class=\"main-head\"><small class=\"small-head\">Home > Maintenance Summary > Security Policy >\r\n    <span *ngIf=\"isEdit && editNow\">Edit</span><span *ngIf=\"isEdit && !editNow\">View</span><span\r\n      *ngIf=\"!isEdit && !editNow\">Add</span> Country</small></h1>\r\n<div fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"mt-16\">\r\n  <button mat-icon-button (click)=\"goBack()\">\r\n    <mat-icon>arrow_back</mat-icon>\r\n  </button>\r\n  <span *ngIf=\"isEdit && editNow\" class=\"text-large\">\r\n    Edit Security Policy\r\n  </span>\r\n  <span *ngIf=\"isEdit && !editNow\" class=\"text-large\">\r\n    View Security Policy\r\n  </span>\r\n  <span *ngIf=\"!isEdit && !editNow\" class=\"text-large\">\r\n    Add Security Policy\r\n  </span>\r\n  <span fxFlex></span>\r\n  <!-- <button mat-button (click)=\"editItem()\">\r\n        <mat-icon>edit</mat-icon>\r\n        Edit\r\n      </button>\r\n      <button\r\n      mat-button\r\n        type=\"button\"\r\n        (click)=\"deleteCountry()\"\r\n      >\r\n      <mat-icon>delete</mat-icon>\r\n        Delete\r\n      </button> -->\r\n</div>\r\n<!-- {{showLoader}} -->\r\n<!-- <div>\r\n  <mat-spinner [diameter]=\"25\"></mat-spinner>\r\n</div> -->\r\n<mat-card>\r\n  <mat-card-content>\r\n    <form class=\"mt-32\" [formGroup]=\"securityForm\">\r\n      <table class=\"pb-32\">\r\n        <tr>\r\n          <td>\r\n            <h1></h1>\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <td>\r\n            <div class=\"highlight\">\r\n            </div>\r\n          </td>\r\n        </tr>\r\n      </table>\r\n      <div fxLayout=\"row wrap\" fxLayout.lt-sm=\"column\">\r\n        <div fxFlex=\"33.33\" class=\"pr-16\">\r\n\r\n          <mat-label>Password Generation Type*</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input type=\"text\" matInput formControlName=\"passwordGenerationType\"  required>\r\n          </mat-form-field>\r\n        </div>\r\n\r\n        <div fxFlex=\"33.33\" class=\"pr-16\">\r\n          <mat-label>Maximum Invalid Logins*</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input type=\"number\" [readonly]=\"readorWrite\"  matInput formControlName=\"maxInvLogins\" required/>\r\n          </mat-form-field>\r\n        </div>\r\n\r\n        <div fxFlex=\"33.33\" class=\"pr-16\">\r\n          <mat-label>Maximum Password Length*</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n\r\n            <input type=\"number\" [readonly]=\"readorWrite\" matInput  formControlName=\"maxPswdLength\" />\r\n          </mat-form-field>\r\n        </div>\r\n\r\n        <div fxFlex=\"33.33\" class=\"pr-16\">\r\n          <mat-label>Minimum Password Length*</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n\r\n            <input type=\"number\" [readonly]=\"readorWrite\" matInput formControlName=\"minPswdLength\" />\r\n          </mat-form-field>\r\n        </div>\r\n        <div fxFlex=\"33.33\" class=\"pr-16\">\r\n          <mat-label>Password Expiry (In days)*</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n\r\n            <input type=\"number\" [readonly]=\"readorWrite\" matInput maxlength=\"20\" minlength=\"1\" formControlName=\"pswdExpiry\" />\r\n          </mat-form-field>\r\n        </div>\r\n\r\n        <div fxFlex=\"33.33\" class=\"pr-16\">\r\n          <mat-label>Password Expiry Reminder (In days) *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n\r\n            <input type=\"number\" [readonly]=\"readorWrite\" matInput maxlength=\"10\" minlength=\"1\" formControlName=\"notifyPasswordExpiryInDays\" />\r\n          </mat-form-field>\r\n        </div>\r\n\r\n        <div fxFlex=\"33.33\" class=\"pr-16\">\r\n          <mat-label>Password Reuse Limit *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n\r\n            <input type=\"number\" [readonly]=\"readorWrite\" matInput maxlength=\"10\" minlength=\"1\" formControlName=\"pswdReuseAft\"  />\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <div class=\"col-12\">\r\n          <label for=\"\" class=\"formLbl\">Password Complexity</label>\r\n          <div class=\"checkListCol\">\r\n            <div class=\"checkStyle\">\r\n              <input type=\"checkbox\" [readonly]=\"readorWrite\" formControlName=\"pswdComplexUcase\" id=\"uppercaseCheck\">\r\n              <label for=\"uppercaseCheck\">Require atleast one Uppercase (A-Z)</label>\r\n            </div>\r\n            <div class=\"checkStyle\">\r\n              <input type=\"checkbox\" [readonly]=\"readorWrite\" formControlName=\"pswdComplexLcase\" id=\"lowercaseCheck\">\r\n              <label for=\"lowercaseCheck\">Require atleast one Lowercase (a-z)</label>\r\n            </div>\r\n            <div class=\"checkStyle\">\r\n              <input type=\"checkbox\" [readonly]=\"readorWrite\" formControlName=\"pswdComplexNum\" id=\"numberCheck\">\r\n              <label for=\"numberCheck\">Require atleast one Number (0-9)</label>\r\n            </div>\r\n            <div class=\"checkStyle\">\r\n              <input type=\"checkbox\" [readonly]=\"readorWrite\" formControlName=\"pswdComplexSplc\" id=\"charactersCheck\">\r\n              <label for=\"charactersCheck\">Require atleast one Special Characters (@#$%!?.)</label>\r\n            </div>\r\n          </div>\r\n\r\n\r\n        </div>\r\n      </div>\r\n      <div fxLayout=\"row wrap\" fxLayout.lt-sm=\"column\">\r\n        <div fxFlex=\"100\" class=\"mt-16\" fxLayoutAlign=\"end center\">\r\n          <button *ngIf=\"!isEdit\" type=\"button\" (click)=\"onSave()\" mat-raised-button color=\"primary\">\r\n            SAVE\r\n          </button>\r\n          &nbsp;\r\n          <div [hidden]=\"readorWrite\" >\r\n            <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"onSave()\">\r\n              Save\r\n            </button>&nbsp;&nbsp;\r\n          </div>\r\n          <div  [hidden]=\"!readorWrite || auditLogData?.recordStatus == 'Close'\">\r\n            <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"editRecord()\">\r\n              Edit\r\n            </button>&nbsp;&nbsp;\r\n          </div>\r\n\r\n          <div *ngIf=\"auditLogData?.authStatus == 'Unauthorized' && readorWrite\" [hidden]=\"!readorWrite\">\r\n            <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"updateRecord('auth')\">\r\n              Authorize\r\n            </button>&nbsp;&nbsp;\r\n          </div>\r\n          <div *ngIf=\"auditLogData?.recordStatus == 'Close' && auditLogData?.oneTimeAuth != 'No'\" [hidden]=\"!readorWrite\">\r\n            <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"updateRecord('open')\">\r\n              Reopen\r\n            </button>&nbsp;&nbsp;\r\n          </div>\r\n          <div *ngIf=\"auditLogData?.recordStatus == 'Open' && auditLogData?.oneTimeAuth != 'No'\" [hidden]=\"!readorWrite\">\r\n            <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"updateRecord('close')\">\r\n              Close\r\n            </button>&nbsp;&nbsp;\r\n          </div>\r\n          <div *ngIf=\"auditLogData?.oneTimeAuth == 'No'\" [hidden]=\"!readorWrite\" >\r\n            <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"updateRecord('delete')\">\r\n              Delete\r\n            </button> &nbsp;&nbsp;\r\n          </div>\r\n\r\n          <button mat-raised-button color=\"warn\" (click)=\"goBack()\" type=\"button\">\r\n            Exit\r\n          </button>\r\n\r\n        </div>\r\n      </div>\r\n\r\n    </form>\r\n  </mat-card-content>\r\n</mat-card>\r\n\r\n<div *ngIf=\"auditLogData\"  class=\"mt-32\">\r\n  <app-audit-log #auditLog></app-audit-log>\r\n</div>","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Subject } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SendHolidayScreenService {\r\n\r\n  // public holidayScreen= new BehaviorSubject<any>();\r\n     public holidayScr = new BehaviorSubject<string>('Currency');  \r\n\r\n  constructor() {\r\n   }\r\n}\r\n// function getScreenName(data: any, any: any) {\r\n//   throw new Error('Function not implemented.');\r\n// }\r\n\r\n","import { Component, ElementRef, OnInit} from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { ViewChild } from '@angular/core';\r\nimport {MatSort, Sort} from '@angular/material/sort';\r\nimport {LiveAnnouncer} from '@angular/cdk/a11y';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { AppConfirmService } from 'app/shared/services/app-confirm/app-confirm.service';\r\nimport { AppLoaderService } from 'app/shared/services/app-loader/app-loader.service';\r\nimport { Subscription } from 'rxjs';\r\n\r\nexport interface PeriodicElement {\r\n  name: string;\r\n  CountryCode: string;\r\n  CountryCode2: string;\r\n  RegionCode: string;\r\n  IBAN : String;\r\n}\r\n\r\n\r\n@Component({\r\n  selector: 'app-state-maintenance',\r\n  templateUrl: './state-maintenance.component.html',\r\n  styleUrls: ['./state-maintenance.component.scss']\r\n})\r\nexport class StateMaintenanceComponent implements OnInit {\r\n\r\n  @ViewChild('searchVal') searchVal: ElementRef;\r\n  selectedFilterIndex : number = 0;\r\n\r\n  dataSource = new MatTableDataSource();\r\n  displayedColumns: string[] = ['stateCode', 'stateName', 'stateCode2', 'stateNumCode','recordStatus', 'action'];\r\n\r\n  filterByOption: { key: string, value: string }[] = [\r\n    { key: 'stateCode', value: 'State Code' },\r\n    { key: 'stateName', value: 'State Name' },\r\n    { key: 'stateNumCode', value: 'State Numric Code' },\r\n    { key: 'recordStatus', value: 'Record Status' },\r\n  ];\r\n\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n\r\n\r\n  constructor(private router:Router,\r\n    private snack: MatSnackBar,\r\n    private loader: AppLoaderService,\r\n      private confirmService: AppConfirmService,\r\n      private apiService:ApiService,\r\n      private _liveAnnouncer: LiveAnnouncer) { }\r\n\r\n  demoData : PeriodicElement[] = [];\r\n\r\n  ngOnInit(): void {\r\n    this.getAllState();\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n\r\n  getAllState() {\r\n    this.apiService.getAllState().subscribe((data: any) => {\r\n     \r\n      this.dataSource = new MatTableDataSource(data);\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    });\r\n  }\r\n\r\n  onFileChange(event) {\r\n    console.log('event', event.path[0].files[0]);\r\n    const file: File = event.path[0].files[0];\r\n    const uploadData = new FormData();\r\n    uploadData.append('screenType', 'stateMaint');\r\n    uploadData.append('file', file);\r\n    this.apiService.uploadExelFile(uploadData).subscribe((response) => {\r\n      console.log(response);\r\n      this.getAllState();\r\n      this.snack.open(`File Uploaded Successfully`, \"OK\", {\r\n        duration: 4000,\r\n        verticalPosition: \"top\",\r\n        horizontalPosition: \"right\",\r\n      });\r\n    });\r\n     this.getAllState();\r\n  }\r\n\r\n  openPopUp(data: any = {}, isNew?) {\r\n    this.router.navigate([\"/maintenance/main/statepopup\"],{ queryParams: { id: data.id } });\r\n  }\r\n\r\n  goBack(){\r\n    this.router.navigate([`/maintenance/main`]);\r\n  }\r\n  doFilter(filterBy, e){\r\n    \r\n    this.filterTable(filterBy);\r\n    this.applyFilter(e);\r\n  }\r\n\r\n  filterTable(filterBy) {\r\n    this.dataSource.filterPredicate = (data: any, filter: string): boolean => {\r\n      return (\r\n        data[filterBy].toLocaleLowerCase().includes(filter)\r\n      )\r\n    }\r\n  }\r\n\r\n  clearFilter(){\r\n    this.dataSource.filter = '';\r\n    this.searchVal.nativeElement.value = '';\r\n    this.selectedFilterIndex = 0;\r\n   }\r\n   \r\n  deleteItem(row) {\r\n    this.confirmService.confirm({message: `Delete ${row.stateName}?`})\r\n      .subscribe(res => {\r\n        if (res) {\r\n          this.loader.open();\r\n          this.apiService.deleteState(row.id)\r\n            .subscribe(data => {\r\n              \r\n            },    err=>{\r\n              if (err.status == 200) {\r\n                this.loader.close();\r\n                this.snack.open('Record Deleted Successfully', 'OK', {\r\n                  duration: 4000,\r\n                  verticalPosition: 'top',\r\n                  horizontalPosition: 'right'\r\n                });\r\n              }\r\n    \r\n            \r\n            this.getAllState();\r\n            \r\n          })\r\n        }\r\n      })\r\n  }\r\n\r\n   \r\n\r\n   applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n\r\n  announceSortChange(sortState: Sort) {\r\n    if (sortState.direction) {\r\n      this._liveAnnouncer.announce(`Sorted ${sortState.direction}ending`);\r\n    } else {\r\n      this._liveAnnouncer.announce('Sorting cleared');\r\n    }\r\n  }\r\n\r\n  addNew(){\r\n    this.router.navigate([\"/maintenance/main/statepopup\"]);\r\n  }\r\n  dataByFilter(index,filter){\r\n    return filter.value;\r\n  }\r\n}\r\n","<h1 class=\"main-head\"><small class=\"small-head\">Home > Maintenance Summary > Country and State Maintenance > State Maintenance</small></h1>\r\n<div fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"mt-24\">\r\n  <button mat-icon-button (click)=\"goBack()\">\r\n    <mat-icon>arrow_back</mat-icon>\r\n  </button>\r\n  <span class=\"text-large\">\r\n   State Maintenance\r\n  </span>\r\n  <span fxFlex></span>\r\n  <button mat-icon-button [matMenuTriggerFor]=\"menu\">\r\n    <mat-icon>more_vert</mat-icon>\r\n  </button>\r\n  <mat-menu #menu=\"matMenu\">\r\n    <div class=\"upload_botton\">\r\n      <button type=\"button\" mat-menu-item>Upload</button>\r\n      <input\r\n        type=\"file\"\r\n        accept=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\"\r\n        class=\"btn btn-success\"\r\n        (change)=\"onFileChange($event)\"\r\n      />\r\n    </div>\r\n    <button mat-menu-item>\r\n      <span>Download</span>\r\n    </button>\r\n  </mat-menu>\r\n</div>\r\n\r\n<mat-card class=\"mt-32\">\r\n  <div class=\"w-full\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n    <div class=\"w-full\" fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap='20px'>\r\n      <div>\r\n        <mat-form-field appearance=\"fill\">\r\n          <!-- <mat-label>Filter By</mat-label> -->\r\n          <mat-select name=\"filterBy\" #filterBy [(ngModel)]=\"selectedFilterIndex\" placeholder=\"Filter By\">\r\n            <mat-option value=\"0\">Select</mat-option>\r\n            <mat-option *ngFor=\"let filter of filterByOption; trackBy:dataByFilter\" value=\"{{filter.key}}\">\r\n              {{filter.value}}\r\n            </mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n      </div>\r\n      <div>\r\n        <mat-form-field appearance=\"fill\">\r\n          <!-- <mat-label>Search</mat-label> -->\r\n          <input matInput #searchVal (keyup)=\"doFilter(filterBy.value,$event)\" placeholder=\"Search\">\r\n          <mat-icon matSuffix>search</mat-icon>\r\n        </mat-form-field>\r\n      </div>\r\n      <div style=\"padding-top: 3px;\">\r\n        <button mat-flat-button color=\"warn\" (click)=\"clearFilter()\"  style=\"height: 45px;\">Clear Filter</button>\r\n      </div>\r\n    </div>\r\n    <div>\r\n      <button mat-flat-button color=\"primary\" (click)=\"addNew()\" class=\"mr-38\"  style=\"height: 45px;\">ADD NEW</button>\r\n    </div>\r\n  </div>\r\n  <div class=\"mat-elevation-z0\">\r\n    <mat-table class=\"w-full\" [dataSource]=\"dataSource\" matSort (matSortChange)=\"announceSortChange($event)\">\r\n\r\n      <ng-container matColumnDef=\"stateCode\">\r\n        <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by state code\"> State\r\n          Code\r\n        </mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\"> {{element.stateCode}} </mat-cell>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"stateName\">\r\n        <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by state name\"> State Name\r\n        </mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\"> {{element.stateName}} </mat-cell>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"stateCode2\">\r\n        <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by state code 2\"> State Code 2\r\n           </mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\"> {{element.stateCode2}} </mat-cell>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"stateNumCode\">\r\n        <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by state Numric Code\"> State Numric Code\r\n        </mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\"> {{element.stateNumCode}} </mat-cell>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"recordStatus\">\r\n        <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by state Numric Code\"> Record Status\r\n        </mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\"> {{element.recordStatus}} </mat-cell>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"action\">\r\n        <mat-header-cell *matHeaderCellDef>Action</mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\">\r\n          <button mat-icon-button mat-sm-button color=\"primary\" class=\"mr-16\" (click)=\"openPopUp(element)\">\r\n            <mat-icon>edit</mat-icon>\r\n          </button>\r\n          <button mat-icon-button mat-sm-button color=\"warn\" (click)=\"deleteItem(element)\">\r\n            <mat-icon>delete</mat-icon>\r\n          </button>\r\n        </mat-cell>\r\n      </ng-container>\r\n\r\n      <mat-header-row *matHeaderRowDef=\"displayedColumns;\"></mat-header-row>\r\n      <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\r\n    </mat-table>\r\n    <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\" aria-label=\"Select page of users\"></mat-paginator>\r\n  </div>\r\n</mat-card>\r\n\r\n","import { ChangeDetectorRef, Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { DataService } from 'app/shared/services/data.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-add-user-maintenance',\r\n  templateUrl: './add-user-maintenance.component.html',\r\n  styleUrls: ['./add-user-maintenance.component.scss']\r\n})\r\nexport class AddUserMaintenanceComponent implements OnInit {\r\n  public userMaintenance: FormGroup;\r\n  RoleInfo: any;\r\n  id: number;\r\n  auditData: any;\r\n  isAuditData:boolean=false;\r\n  isEdit:boolean=false;\r\n  loggedInUser: any;\r\n  UserName: any;\r\n  isPassword:boolean=false;\r\n  hide=true;\r\n  readorWrite: boolean=true;\r\n  authorizedRoleId: any;\r\n  tillData: any;\r\n  till: any[] = [];\r\n  constructor(private router:Router,private route : ActivatedRoute,\r\n    private formBuilder: FormBuilder, private ls:LocalStoreService,\r\n    private api:ApiService,private dataService : DataService,   private spinner: NgxSpinnerService,\r\n    private snack:MatSnackBar,private cdr: ChangeDetectorRef) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getRoleId();\r\n    this.buildUserForm();\r\n    this.getTillId();\r\n    this.loggedInUser = this.ls.getItem('ICUST_USER').userName;\r\n    this.route.queryParamMap.subscribe((params: any) => {\r\n      console.log(params);\r\n      if(params.get('id')){\r\n         this.isEdit = true;\r\n        this.id = params.get('id');\r\n        this.api.getUserId(params.get('id')).subscribe((resp) =>{\r\n           this.buildUserForm(resp);\r\n           if(resp.passwordGenerationType=='Manual'){\r\n            this.isPassword=true;\r\n            this.userMaintenance.get('password').setValue(resp.encryptedPassword)\r\n          }else{\r\n           this.isPassword=false;\r\n          }\r\n           this.auditData = resp\r\n           this.isAuditData = true;\r\n           this.dataService.setAuditLogData(this.auditData);\r\n           console.log(\"this.auditData\", this.auditData)\r\n        });\r\n      }\r\n      else{\r\n        this.readorWrite=false;\r\n        console.log(\"else\");\r\n       \r\n      }\r\n    })\r\n    this.loggedInUser = this.ls.getItem('ICUST_USER').userName;\r\n  }\r\n\r\n  getRoleId(){\r\n    this.api.fetchAuthrorizedRoleInfo().subscribe((data) => {\r\n      this.RoleInfo=data;\r\n      console.log(this.RoleInfo);\r\n    })\r\n  }\r\n  getTillId() {\r\n    let tillOrVault =\"T\";\r\n    this.api.getTillData(tillOrVault).subscribe((resp) => {\r\n      this.till = resp;\r\n    });\r\n  }\r\n\r\n  buildUserForm(data?){\r\n\r\n    var role\r\n    if(data){\r\n      role= this.RoleInfo.filter((item)=>{\r\n        return data.roleId == item.id;\r\n      });\r\n    }\r\n    this.tillData = this.till.find(x => x.id == data.tillId);\r\n    console.log(\"this.tillData::\",this.tillData)\r\n    console.log(\"role::\",role)\r\n    this.userMaintenance = this.formBuilder.group({\r\n      userName: [data ? data.userName : '',[Validators.required]],\r\n      email: [data ? data.email : '',[Validators.required]],\r\n      mobile: [data ? data.mobile : '',[Validators.required]],\r\n      entityCode:[data ? data.entityCode : '',[Validators.required]],\r\n      branchCode:[data ? data.branchCode : '',[Validators.required]],\r\n      bankCode:[data ? data.bankCode : '',[Validators.required]],\r\n      roleId: [data ? role[0].roleName : '',[Validators.required]],\r\n      firstName: [data ? data.firstName : '',[Validators.required]],\r\n      lastName: [data ? data.lastName : '',[Validators.required]],\r\n      language: [data ? data.language : ''],\r\n      userId: [data ? data.userId : ''],\r\n      password: [data ? data.password : ''],\r\n      passwordGenerationType: [data ? data.passwordGenerationType : ''],\r\n      tillId: [data ? this.tillData.tillVaultCode : '',[Validators.required]],\r\n    });\r\n\r\n  }\r\n  onInput(event:any){\r\n    console.log(event);\r\n    this.UserName= event.target.value.toLocaleUpperCase();\r\n    this.userMaintenance.get('userName').setValue(this.UserName)\r\n  }\r\n  onToggle(event){\r\n    console.log(event.value);\r\n    if(event.value=='Manual'){\r\nthis.isPassword=true;\r\n    }\r\n    else{\r\n      this.isPassword=false;\r\n    }\r\n  }\r\n\r\n  submit(){\r\n    console.log(this.userMaintenance.value);\r\n    this.tillData = this.till.find(x => x.tillVaultCode == this.userMaintenance.value.tillId);\r\n    this.userMaintenance.value.tillId = this.tillData.id;\r\n    this.userMaintenance.value.loggedInUser = this.loggedInUser;\r\n    this.userMaintenance.value.userId=parseInt(this.userMaintenance.value.userId);\r\n    this.userMaintenance.value.loggedInUser = this.loggedInUser;\r\n    var role=this.RoleInfo.filter((item)=>{\r\n      return item.roleName==this.userMaintenance.value.roleId\r\n    })\r\n    this.userMaintenance.value.roleId= role[0].id;\r\n    this.api.upsertUserMaintenance(this.userMaintenance.value).subscribe(response => {\r\n      console.log(\"response status::\",response.status)\r\n      if(response != null){\r\n        this.spinner.hide();\r\n        // if(response.status == 200){\r\n          this.snack.open(`User Added!'`, \"OK\", {\r\n            duration: 2000,\r\n            verticalPosition: \"top\",\r\n            horizontalPosition: \"right\",\r\n          });\r\n\r\n          this.router.navigate([\"/maintenance/main/userMaintenance\"]);\r\n        // } else if (response.status == 400) {\r\n        //     this.snack.open('User already exists for the given role!', 'OK', { \r\n        //       duration: 4000,\r\n        //       verticalPosition: \"top\",\r\n        //       horizontalPosition: \"right\",\r\n        //      })\r\n        // }\r\n        this.cdr.markForCheck();\r\n      }\r\n    });\r\n  }\r\n  goBack(){\r\n    this.router.navigate([\"/maintenance/main/userMaintenance\"]);\r\n  }\r\n\r\n  _keyPress(event: any) {\r\n    const pattern = /[0-9]/;\r\n    let inputChar = String.fromCharCode(event.charCode);\r\n    if (!pattern.test(inputChar)) {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n  deleteRecord(){\r\n   \r\n    this.api.deleteUserById(this.auditData.id)\r\n      .subscribe(data => {\r\n      },\r\n      err=>{\r\n        if (err.status == 200) {\r\n          this.snack.open('Record Deleted Successfully', 'OK', {\r\n            duration: 4000,\r\n            verticalPosition: 'top',\r\n            horizontalPosition: 'right'\r\n          });\r\n        }\r\n        this.router.navigate([\"/maintenance/main/userMaintenance\"]);\r\n      \r\n    })\r\n \r\n}\r\n  editRecord(){\r\n    this.readorWrite=false;\r\n  }\r\n\r\n  updateRecord(operation) {\r\n    Swal.fire(\r\n      {\r\n        //text: 'Unable to process' + 'Error ' + this.responseforfileupload.errorMessage + 'Do you want to Proceed??',\r\n        text: 'You are trying to '+ operation +' record.' + ' Do you want to proceed?',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        // confirmButtonText: 'PROCEED.'\r\n        cancelButtonText: 'NO',\r\n        confirmButtonText: 'YES', 'icon': 'info'\r\n      }\r\n    ).then((result => {\r\n      if(result.isConfirmed==true){\r\n        let payload: any = {};\r\n        payload.id = this.id;\r\n        payload.operation = operation;\r\n        payload.loggedInUser = this.loggedInUser;\r\n        this.api.getAuditLogsForUserMaintenance(payload).subscribe((data) => {\r\n          this.auditData = data;\r\n          this.dataService.setAuditLogData(this.auditData);\r\n          this.isAuditData = true;\r\n          this.dataService.sendClickEvent();\r\n          let message = '';\r\n          switch (operation) {\r\n            case 'open':\r\n              message = 'opened'\r\n              break;\r\n            case 'close':\r\n              message = 'closed'\r\n              break;\r\n            case 'auth':\r\n              message = 'authorized'\r\n              break;\r\n            default:\r\n              break;\r\n          }\r\n          this.snack.open(`Record ${message} successful!'`, \"OK\", {\r\n            duration: 2000,\r\n            verticalPosition: \"top\",\r\n            horizontalPosition: \"right\",\r\n          });\r\n        });\r\n      }\r\n      \r\n    }\r\n    ))\r\n   \r\n  }\r\n\r\n}\r\n","<h1 class=\"main-head\"><small class=\"small-head\">Home > Maintenance Summary> User Maintenance > <span *ngIf=\"!isEdit\">Add</span><span *ngIf=\"isEdit\">Edit</span> User Maintenance\r\n</small></h1>\r\n<div fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"mt-16\">\r\n    <button mat-icon-button (click)=\"goBack()\">\r\n        <mat-icon>arrow_back</mat-icon>\r\n    </button>\r\n    <h1 *ngIf=\"!isEdit\" class=\"add-text\">Add User Information</h1>\r\n    <h1 *ngIf=\"isEdit\" class=\"add-text\">Edit User Information</h1>\r\n</div>\r\n\r\n<mat-card>\r\n    <mat-card-content>\r\n        <form [formGroup]=\"userMaintenance\"  class=\"m-333\">\r\n            <!-- <div fxLayout=\"row wrap\" fxLayout.lt-sm=\"column\"> -->\r\n                <div fxLayoutAlign=\"space-between center\" fxLayoutGap=\"15px\">\r\n                    <div fxFlex=\"33.33\">\r\n                        <mat-label>User Name *</mat-label>\r\n                        <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                            <input \r\n                                placeholder=\"Enter User Name\"\r\n                                matInput name=\"userName\" \r\n                                formControlName=\"userName\"\r\n                                (keyup)=\"onInput($event)\"\r\n                                style=\"text-transform: uppercase\"\r\n                                [readonly]=\"readorWrite\"\r\n                            />\r\n                            <mat-error *ngIf=\"userMaintenance.get('userName').touched && !userMaintenance.get('userName').valid\">\r\n                                User Name is Required!\r\n                            </mat-error>\r\n                          \r\n                        </mat-form-field>\r\n                    </div>\r\n\r\n                    <div fxFlex=\"33.33\">\r\n                        <mat-label>Email *</mat-label>\r\n                        <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                            <input \r\n                            placeholder=\"Enter Email\"\r\n                                matInput name=\"email\"  type=\"email\"\r\n                                pattern=\"^[^\\s@]+@[^\\s@]+\\.[^\\s@]{2,}$\"\r\n                                formControlName=\"email\"\r\n                                [readonly]=\"readorWrite\"\r\n                            />\r\n                            <mat-error *ngIf=\"userMaintenance.get('email').touched && !userMaintenance.get('email').valid\">\r\n                                Email is Required!\r\n                            </mat-error>\r\n                        </mat-form-field>\r\n                    </div>\r\n\r\n                    <div fxFlex=\"33.33\">\r\n                        <mat-label>Mobile Number *</mat-label>\r\n                        <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                            <input placeholder=\"Enter Mobile Number\"\r\n                             (keypress)=_keyPress($event) maxlength=\"10\" minlength=\"10\"\r\n                                matInput name=\"mobile\" \r\n                                type=\"text\"\r\n                                formControlName=\"mobile\"\r\n                                [readonly]=\"readorWrite\"\r\n                            />\r\n                            <mat-error *ngIf=\"userMaintenance.get('mobile').touched && !userMaintenance.get('mobile').valid\">\r\n                                Mobile Number is Required!\r\n                            </mat-error>\r\n                        </mat-form-field>\r\n                    </div>\r\n\r\n                    <div fxFlex=\"33.33\">\r\n                      <mat-label>Entity Code *</mat-label>\r\n                      <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                          <input placeholder=\"Enter Entity Code\"\r\n                           (keypress)=_keyPress($event) maxlength=\"10\" minlength=\"10\"\r\n                              matInput name=\"Entity\" \r\n                              type=\"number\"\r\n                              formControlName=\"entityCode\"\r\n                              [readonly]=\"readorWrite\"\r\n                          />\r\n                          <mat-error *ngIf=\"userMaintenance.get('entityCode').touched && !userMaintenance.get('entityCode').valid\">\r\n                              Entity code is Required!\r\n                          </mat-error>\r\n                      </mat-form-field>\r\n                  </div>\r\n\r\n                </div>\r\n\r\n                <div fxLayoutAlign=\"space-between center\" fxLayoutGap=\"15px\">\r\n\r\n                  <div fxFlex=\"33.33\">\r\n                    <mat-label>Branch Code *</mat-label>\r\n                    <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                        <input placeholder=\"Enter Branch Code\"\r\n                         (keypress)=_keyPress($event) maxlength=\"10\" minlength=\"10\"\r\n                            matInput name=\"Branch\" \r\n                            type=\"text\"\r\n                            formControlName=\"branchCode\"\r\n                            [readonly]=\"readorWrite\"\r\n                        />\r\n                        <mat-error *ngIf=\"userMaintenance.get('branchCode').touched && !userMaintenance.get('branchCode').valid\">\r\n                            Branch code is Required!\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n\r\n                <div fxFlex=\"33.33\">\r\n                  <mat-label>Bank Code *</mat-label>\r\n                  <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                      <input placeholder=\"Enter Bank Code\"\r\n                       (keypress)=_keyPress($event) maxlength=\"10\" minlength=\"10\"\r\n                          matInput name=\"Bank\" \r\n                          type=\"number\"\r\n                          formControlName=\"bankCode\"\r\n                          [readonly]=\"readorWrite\"\r\n                      />\r\n                      <mat-error *ngIf=\"userMaintenance.get('bankCode').touched && !userMaintenance.get('bankCode').valid\">\r\n                          Entity code is Required!\r\n                      </mat-error>\r\n                  </mat-form-field>\r\n              </div>\r\n\r\n                    <div fxFlex=\"33.33\" *ngIf=\"!readorWrite\">\r\n                        <mat-label>Role Name *</mat-label>\r\n                        <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                          \r\n                            <mat-select formControlName=\"roleId\"  placeholder=\"Select Role ID\"  >\r\n                                <mat-option  *ngFor=\"let role of RoleInfo \" [value]=\"role.roleName\">{{role.roleName}}</mat-option>\r\n\r\n                            </mat-select>\r\n                            <mat-error *ngIf=\"userMaintenance.get('roleId').touched && !userMaintenance.get('roleId').valid\">\r\n                                Role Name is Required!\r\n                            </mat-error>\r\n                            \r\n                        </mat-form-field>\r\n                    </div>\r\n                    <div fxFlex=\"32.5\" *ngIf=\"readorWrite\">\r\n                        <mat-label>Role Name *</mat-label>\r\n                        <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                            <input \r\n                            matInput name=\"roleId\" \r\n                            type=\"text\"\r\n                            formControlName=\"roleId\"\r\n                            [readonly]=\"readorWrite\"\r\n                        />\r\n        \r\n                        </mat-form-field>\r\n        \r\n                     </div>\r\n\r\n                    <div fxFlex=\"33.33\">\r\n                        <mat-label>First Name *</mat-label>\r\n                        <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                            <input \r\n                            placeholder=\"Enter First Name\"\r\n                                matInput name=\"firstName\" \r\n                                type=\"text\"\r\n                                formControlName=\"firstName\"\r\n                                [readonly]=\"readorWrite\"\r\n                            />\r\n                            <mat-error *ngIf=\"userMaintenance.get('firstName').touched && !userMaintenance.get('firstName').valid\">\r\n                                First Name is Required!\r\n                            </mat-error>\r\n                            \r\n                        </mat-form-field>\r\n                    </div>\r\n\r\n\r\n                </div>\r\n                \r\n            <div fxLayoutAlign=\"space-between center\" fxLayoutGap=\"15px\">\r\n\r\n              <div fxFlex=\"33.33\">\r\n                <mat-label>Last Name *</mat-label>\r\n                <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                    <input  placeholder=\"Enter Last Name\"\r\n                        matInput name=\"lastName\" \r\n                        type=\"text\"\r\n                        formControlName=\"lastName\"\r\n                        [readonly]=\"readorWrite\"\r\n                    />\r\n                    <mat-error *ngIf=\"userMaintenance.get('lastName').touched && !userMaintenance.get('lastName').valid\">\r\n                        Last Name is Required!\r\n                    </mat-error>\r\n                </mat-form-field>\r\n            </div>\r\n\r\n             <div fxFlex=\"32.5\" *ngIf=\"!readorWrite\">\r\n                <mat-label>Language</mat-label>\r\n                <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                    <mat-select formControlName=\"language\"  placeholder=\"Select Language\"  >\r\n                        <mat-option value=\"English\">English</mat-option>\r\n\r\n                    </mat-select>\r\n\r\n                </mat-form-field>\r\n\r\n             </div>\r\n             <div fxFlex=\"32.5\" *ngIf=\"readorWrite\">\r\n                <mat-label>Language</mat-label>\r\n                <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                    <input \r\n                    matInput name=\"language\" \r\n                    type=\"text\"\r\n                    formControlName=\"language\"\r\n                    [readonly]=\"readorWrite\"\r\n                />\r\n\r\n                </mat-form-field>\r\n\r\n             </div>\r\n                <div fxFlex=\"32.5\" *ngIf=\"!readorWrite\" >\r\n                  <mat-label>Till Id *</mat-label>\r\n                  <mat-form-field class=\"full-width\" appearance=\"fill\">          \r\n                    <!-- <mat-select name=\"tillId\" [formControl]=\"itemForm.controls['tillId']\" class=\"selectOption\"> -->\r\n                      <mat-select name=\"tillId\" formControlName=\"tillId\">\r\n                        <mat-option value=\"\">Select</mat-option>\r\n                      <mat-option *ngFor=\"let data of till\" [value]=\"data.tillVaultCode\">\r\n                        {{data?.tillVaultCode}}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                    <!-- <mat-error\r\n                      *ngIf=\"userMaintenance.get('tillId').touched && !userMaintenance.get('tillId').valid\">\r\n                      Till Id is Required!\r\n                  </mat-error> -->\r\n                  </mat-form-field>\r\n                </div>\r\n                <div fxFlex=\"32.5\" *ngIf=\"readorWrite\">\r\n                  <mat-label>Till Id *</mat-label>\r\n                  <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                    <input matInput readonly\r\n                    formControlName=\"tillId\">\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n             <div fxFlex=\"32.5\">\r\n                <mat-label>Password Generation Type</mat-label>\r\n                \r\n                &nbsp;&nbsp;&nbsp;\r\n                    <mat-button-toggle-group value=\"table\" formControlName=\"passwordGenerationType\"   name=\"fontStyle\" aria-label=\"Font Style\" (change)=\"onToggle($event)\" >\r\n                        <mat-button-toggle value=\"Auto\"><span style=\"color: black;\">Auto</span></mat-button-toggle>\r\n                        <mat-button-toggle value=\"Manual\"  style=\"color: black;\" ><span >Manual</span></mat-button-toggle>\r\n                        \r\n                      </mat-button-toggle-group>\r\n\r\n              \r\n\r\n             </div>\r\n             <div fxFlex=\"33.33\" *ngIf=\"isPassword;\">\r\n                <mat-label>Password</mat-label>\r\n                <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                    <input  placeholder=\"Enter Password\"\r\n                    [readonly]=\"readorWrite\"\r\n                        matInput name=\"password\" \r\n                        [type]=\"hide ? 'password' : 'text'\"\r\n                        autocomplete=\"off\"\r\n                        formControlName=\"password\"\r\n                        \r\n                    />\r\n                    <mat-icon matSuffix (click)=\"hide = !hide\" style=\"cursor: pointer;\">{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\r\n                </mat-form-field>\r\n            </div>\r\n            <div fxFlex=\"33.33\" *ngIf=\"!isPassword; \">\r\n               \r\n            </div>\r\n            \r\n            </div>\r\n\r\n            <div fxLayout=\"row wrap\" fxLayout.lt-sm=\"column\">\r\n                <div fxFlex=\"100\" class=\"mt-16\" fxLayoutAlign=\"end center\">\r\n                  <button  class=\"savebtn\" *ngIf=\"!isEdit\"\r\n                    color=\"primary\" \r\n                    [disabled]= \"userMaintenance.invalid\"\r\n                    mat-raised-button \r\n                    (click)=\"submit()\"\r\n                    >\r\n                    Save\r\n                  </button>&nbsp;&nbsp;\r\n                 <div [hidden]=\"readorWrite\">\r\n                    <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\"  [disabled]= \"!(userMaintenance.invalid || userMaintenance.dirty)\"(click)=\"submit()\">\r\n                        Save\r\n                      </button>&nbsp;&nbsp;\r\n                 </div>\r\n                 \r\n                  <div [hidden]=\"!readorWrite || auditData?.recordStatus == 'Close'\">\r\n                    <button *ngIf=\"isEdit\" type=\"button\"  mat-raised-button color=\"primary\" (click)=\"editRecord()\">\r\n                      Edit\r\n                    </button>&nbsp;&nbsp;\r\n                  </div>\r\n                  <div *ngIf=\"auditData?.authStatus == 'Unauthorized' && readorWrite\" [hidden]=\"!readorWrite\">\r\n                    <button *ngIf=\"isEdit\" type=\"button\"  mat-raised-button color=\"primary\" (click)=\"updateRecord('auth')\">\r\n                      Authorize\r\n                    </button>&nbsp;&nbsp;\r\n                  </div> \r\n                  <div *ngIf=\"auditData?.recordStatus == 'Close' && auditData?.oneTimeAuth != 'No'\" [hidden]=\"!readorWrite\">\r\n                    <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"updateRecord('open')\">\r\n                      Reopen\r\n                    </button>&nbsp;&nbsp;\r\n                  </div>\r\n                  <div *ngIf=\"auditData?.recordStatus == 'Open' && auditData?.oneTimeAuth != 'No'\" [hidden]=\"!readorWrite\">\r\n                    <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"updateRecord('close')\">\r\n                      Close\r\n                    </button>&nbsp;&nbsp;\r\n                  </div>\r\n                  \r\n                  <div *ngIf=\"auditData?.oneTimeAuth == 'No'\" [hidden]=\"!readorWrite\">\r\n                    <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"deleteRecord()\">\r\n                      Delete\r\n                    </button> &nbsp;&nbsp;\r\n                  </div>\r\n                 \r\n                  <button\r\n                    mat-raised-button\r\n                    color=\"warn\"\r\n                    type=\"button\"\r\n                    (click)=\"goBack()\"\r\n                  >\r\n                    Exit\r\n                  </button>\r\n                </div>\r\n              </div>\r\n\r\n                \r\n        </form>\r\n\r\n        \r\n    </mat-card-content>\r\n</mat-card>\r\n\r\n<div  class=\"mt-32\">\r\n    <app-audit-log *ngIf=\"isAuditData\" #auditLog></app-audit-log>\r\n  </div>\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { AbstractControl, FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { tillVaultConfig } from 'app/shared/models/tillVaultConfig';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { AppLoaderService } from 'app/shared/services/app-loader/app-loader.service';\r\nimport { DataService } from 'app/shared/services/data.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\n\r\n@Component({\r\n  selector: 'app-till-vault-popup',\r\n  templateUrl: './till-vault-popup.component.html',\r\n  styleUrls: ['./till-vault-popup.component.scss']\r\n})\r\nexport class TillVaultPopupComponent implements OnInit {\r\n  branchCode: string[] = [];\r\n  bankCode: string[] = [];\r\n  public tillVaultForm: FormGroup;\r\n  vaultConfig: tillVaultConfig;\r\n  currency: string[] = [];\r\n  till: any[] = [];\r\n  entity: string[] = [];\r\n  tillData: any;\r\n  loggedInUser : string;\r\n  auditData : tillVaultConfig;\r\n  isAuditData : boolean = false;\r\n  id: number;\r\n  isEdit: boolean = false;\r\n  minCashHoldingValue: number;\r\n  constructor(\r\n    // @Inject(MAT_DIALOG_DATA) public data: any,\r\n    // public dialogRef: MatDialogRef<TillVaultPopupComponent>,\r\n    private fb: FormBuilder,\r\n    private apiService: ApiService,\r\n    private loader: AppLoaderService,\r\n    private snack: MatSnackBar,\r\n    private router: Router,\r\n    private ls: LocalStoreService,\r\n    private dataService: DataService,\r\n\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    // this.dataService.getTillVaultConfig.subscribe(data => {\r\n    //   console.log(data)\r\n    //   this.vaultConfig = typeof this.vaultConfig === 'object' ? data : {};\r\n    // });\r\n\r\n     setTimeout(() => {  \r\n        this.vaultConfig = JSON.parse(localStorage.getItem('fetchVaultConfig'));\r\n        console.log(\" this.vaultConfig\", this.vaultConfig)\r\n        if(this.vaultConfig == null || this.vaultConfig == undefined){\r\n          this.buildItemForm({})\r\n        }       \r\n        else if(this.vaultConfig.id != null || this.vaultConfig.id != undefined){\r\n        this.loader.open();\r\n        this.id = this.vaultConfig.id;\r\n        this.buildItemForm(this.vaultConfig);\r\n        this.auditData = this.vaultConfig;\r\n        this.isEdit = true;\r\n        this.isAuditData = true;\r\n        this.dataService.setAuditLogData(this.auditData);\r\n        this.loader.close();\r\n        }\r\n      }, 1000)\r\n\r\n    this.getCurrency();\r\n    this.getBankCode();\r\n    this.getBranchCode();\r\n    this.getTillId();\r\n    this.getEntityCode();\r\n\r\n    this.loggedInUser = this.ls.getItem('ICUST_USER').userName;\r\n    // this.buildItemForm(this.data.payload);\r\n    // this.countryCurrency=this.data.currency;\r\n    // this.tillId=this.data.till;\r\n    // this.branchCode=this.data.branchCode;\r\n    // this.bankCode=this.data.bankCode;\r\n  }\r\n  getValue(val: any) {\r\n    this.minCashHoldingValue = val;\r\n  }\r\n\r\n  buildItemForm(item) {\r\n    this.tillVaultForm = this.fb.group({\r\n      bankCode: [item.bankCode || '', [Validators.required]],\r\n      branchCode: [item.branchCode || '', [Validators.required]],\r\n      currency: [item.currency || '', [Validators.required]],\r\n      entityCode: [item.entityCode || '', [Validators.required]],\r\n      id: [item.id || null],\r\n      // maxCashHolding: [item.maxCashHolding || '',[Validators.required, Validators.min(this.minCashHoldingValue)]],\r\n      maxCashHolding: [item.maxCashHolding || '', [Validators.required, (control: AbstractControl) => Validators.min(this.minCashHoldingValue)(control)]],\r\n      minCashHolding: [item.minCashHolding || '', Validators.required],\r\n      tillId: [item.tillId || '', [Validators.required]],\r\n    })\r\n  }\r\n  numericValidation(event) {\r\n    var inp = String.fromCharCode(event.keyCode);\r\n    if (/[0-9]/.test(inp)) {\r\n      return true;\r\n    } else {\r\n      event.preventDefault();\r\n      return false;\r\n    }\r\n  }\r\n  alhanumericValidation(event) {\r\n    var inp = String.fromCharCode(event.keyCode);\r\n    if (/[a-zA-Z0-9]/.test(inp)) {\r\n      return true;\r\n    } else {\r\n      event.preventDefault();\r\n      return false;\r\n    }\r\n  }\r\n\r\n  // Save of tillVaultConfig\r\n  submit() {\r\n    if (this.tillVaultForm.invalid) {\r\n      return;\r\n    } else {\r\n        this.tillData = this.till.find(x => x.tillVaultCode == this.tillVaultForm.value.tillId);\r\n        this.tillVaultForm.value.tillId = this.tillData.id;\r\n        this.tillVaultForm.value.loggedInUser=this.loggedInUser;\r\n        this.apiService.saveoftillVaultConfig(this.tillVaultForm.value).subscribe((resp) => {\r\n        this.router.navigate([`/maintenance/main/tillVaultConfig`]).then(_ => {\r\n          this.snack.open('Data Saved Successfully!', 'OK',\r\n            {\r\n              duration: 4000,\r\n              verticalPosition: \"top\",\r\n              horizontalPosition: \"right\",\r\n            });\r\n            localStorage.removeItem('fetchVaultConfig');\r\n        });\r\n      }, (err: any) => {\r\n        this.snack.open(`Error!`, 'OK', {\r\n          duration: 4000,\r\n          verticalPosition: \"top\",\r\n          horizontalPosition: \"right\",\r\n        });\r\n      }\r\n      )\r\n    }\r\n  }\r\n\r\n  updateRecord(operation) {\r\n    let payload: any = {};\r\n    payload.id = this.id;\r\n    payload.operation = operation;\r\n    payload.loggedInUser = this.loggedInUser;\r\n    this.apiService.getAuditLogsFortillvaultconfig(payload).subscribe((data) => {\r\n      console.log(data);\r\n      this.auditData = data;\r\n      this.dataService.setAuditLogData(this.auditData);\r\n      this.isAuditData = true;\r\n      this.dataService.sendClickEvent();\r\n      let message = '';\r\n      switch (operation) {\r\n        case 'open':\r\n          message = 'opened'\r\n          break;\r\n        case 'close':\r\n          message = 'closed'\r\n          break;\r\n        case 'auth':\r\n          message = 'authorized'\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n\r\n      this.snack.open(`Record ${message} successfully!`, \"OK\", {\r\n        duration: 2000,\r\n        verticalPosition: \"top\",\r\n        horizontalPosition: \"right\",\r\n      });\r\n    });\r\n  }\r\n\r\n  goBack() {\r\n    localStorage.removeItem('fetchVaultConfig');\r\n    this.router.navigate([\"/maintenance/main/tillVaultConfig\"]);\r\n  }\r\n\r\n  getCurrency() {\r\n    // this.apiService.getCountryValues().subscribe((resp) => {\r\n    //   this.currency = resp;\r\n    // });\r\n    this.apiService.getCurrencyDetails().subscribe(data=>{\r\n      console.log(\"Auth currecy details\", data)\r\n      for(let i=0; i<data.length;i++){\r\n        this.currency.push(data[i].currencyId)\r\n      }\r\n      console.log(this.currency);\r\n    })\r\n  }\r\n  getBankCode() {\r\n    this.apiService.getBankCode().subscribe((resp) => {\r\n      console.log(resp);\r\n      for(let i=0; i<resp.length;i++){\r\n        if(resp[i].authStatus==='A'){\r\n          this.bankCode.push(resp[i]);\r\n        }\r\n      }\r\n      console.log(this.bankCode);\r\n      // this.bankCode = resp;\r\n    });\r\n  }\r\n  getBranchCode() {\r\n    this.apiService.getBranchCode().subscribe((resp) => {\r\n      console.log(resp);\r\n      for(let i=0; i<resp.length;i++){\r\n        if(resp[i].authStatus==='A'){\r\n          this.branchCode.push(resp[i]);\r\n        }\r\n      }\r\n      console.log(this.branchCode);\r\n      // this.branchCode = resp;\r\n    });\r\n  }\r\n  getTillId() {\r\n    let tillOrVault =\"T\";\r\n    this.apiService.getTillData(tillOrVault).subscribe((resp) => {\r\n      console.log(\"tillData\",resp)\r\n      this.till = resp;\r\n   });\r\n  }\r\n\r\n  getEntityCode() {\r\n    this.apiService.getEntityCode().subscribe((resp) => {\r\n      console.log(resp);\r\n      for(let i=0; i<resp.length;i++){\r\n        if(resp[i].authStatus==='A'){\r\n          this.entity.push(resp[i]);\r\n        }\r\n      }\r\n      console.log(this.entity);\r\n      // this.entity = resp;\r\n    });\r\n  }\r\n  dataByBankCode(index,item){\r\n    return item.bankCode;\r\n  }\r\n  dataByBranchCode(index,item){\r\n    return item.branchCode;\r\n  }\r\n  dataByEntityCode(index,item){\r\n    return item.entityCode;\r\n  }\r\n  dataByCurrencyCode(index,item){\r\n    return item.currencyCode;\r\n  }\r\n  dataByTillVaultCode(index,item){\r\n    return item.currencyCode;\r\n  }\r\n  \r\n\r\n}\r\n","<h1 class=\"main-head\"><small class=\"small-head\">Home > Maintenance Summary > Till Vault Configuration Maintenance > <span *ngIf=\"!isEdit\">Add</span> <span *ngIf=\"isEdit\">Edit</span> Till Vault Configuration Details</small></h1>\r\n<div fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"mt-16\">\r\n  <button mat-icon-button (click)=\"goBack()\">\r\n    <mat-icon>arrow_back</mat-icon>\r\n  </button>\r\n  <h1 *ngIf=\"!isEdit\" class=\"add-text\">Add Till Vault Configuration Details</h1>\r\n  <h1 *ngIf=\"isEdit\" class=\"add-text\">Edit Till Vault Configuration Details</h1>\r\n</div>\r\n\r\n<mat-card>\r\n  <mat-card-content>\r\n    <!-- <div *ngIf=\"!isEdit\">\r\n      <h1 matDialogTitle>Add Till Vault Configuration Details</h1>\r\n    </div>\r\n    <div *ngIf=\"isEdit\">\r\n      <h1 matDialogTitle>Edit Till Vault Configuration Details</h1>\r\n    </div> -->\r\n    <form [formGroup]=\"tillVaultForm\" *ngIf=\"tillVaultForm\" class=\"m-333\">\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\" fxLayoutGap=\"15px\">\r\n        <div fxFlex=\"33.33\">\r\n          <mat-label>Entity Code *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <!-- <mat-select *ngIf=\"readorWrite\" name=\"entityCode\" formControlName=\"entityCode\"\r\n              class=\"selectOption\">\r\n              <mat-option *ngFor=\"let data of entity; trackBy:dataByEntityCode\" [value]=\"data.entityCode\">\r\n                {{data?.entityCode}}\r\n              </mat-option>\r\n            </mat-select> -->\r\n            <mat-select name=\"entityCode\" formControlName=\"entityCode\"\r\n            class=\"selectOption\">\r\n            <mat-option *ngFor=\"let data of entity; trackBy:dataByEntityCode\" [value]=\"data.entityCode\">\r\n              {{data?.entityCode}}\r\n            </mat-option>\r\n          </mat-select>\r\n          \r\n            <mat-error\r\n            *ngIf=\"tillVaultForm.get('entityCode').touched && !tillVaultForm.get('entityCode').valid\">\r\n            Entity Code is Required!\r\n        </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n\r\n        <div fxFlex=\"33.33\">\r\n          <mat-label>Bank Code *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <mat-select name=\"bankCode\" formControlName=\"bankCode\" class=\"selectOption\">\r\n              <mat-option *ngFor=\"let data of bankCode; trackBy:dataByBankCode\" [value]=\"data.bankCode\">\r\n                {{data?.bankCode}}\r\n              </mat-option>\r\n            </mat-select>\r\n            <mat-error *ngIf=\"tillVaultForm.get('bankCode').touched && !tillVaultForm.get('bankCode').valid\">\r\n              Bank Code is Required!\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n\r\n        <div fxFlex=\"33.33\">\r\n          <mat-label>Branch Code *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <mat-select name=\"branchCode\" formControlName=\"branchCode\"  class=\"selectOption\">\r\n              <mat-option *ngFor=\"let data of branchCode; trackBy:dataByBranchCode\" [value]=\"data.branchCode\">\r\n                {{data?.branchCode}}\r\n              </mat-option>\r\n            </mat-select>\r\n            <mat-error *ngIf=\"tillVaultForm.get('branchCode').touched && !tillVaultForm.get('branchCode').valid\">\r\n              Branch Code is Required!\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n\r\n\r\n      </div>\r\n\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\" fxLayoutGap=\"15px\">\r\n        <div fxFlex=\"33.33\">\r\n          <mat-label>Currency *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <mat-select name=\"currency\" formControlName=\"currency\" class=\"selectOption\">\r\n              <mat-option *ngFor=\"let data of currency; trackBy:dataByCurrencyCode\" [value]=\"data.currencyCode\">\r\n                {{data.currencyCode}}\r\n              </mat-option>\r\n            </mat-select>\r\n            <mat-error *ngIf=\"tillVaultForm.get('currency').touched && !tillVaultForm.get('currency').valid\">\r\n              Currency is Required!\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n\r\n        <div fxFlex=\"33.33\">\r\n          <mat-label>Min Cash Holding *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input matInput name=\"minCashHolding\" #minCash (keyup)=getValue(minCash.value)\r\n              (keypress)=\"numericValidation($event)\" formControlName=\"minCashHolding\" >\r\n            <mat-error\r\n              *ngIf=\"tillVaultForm.get('minCashHolding').touched && !tillVaultForm.get('minCashHolding').valid\">\r\n              Min Cash Holding is Required!\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n\r\n        <div fxFlex=\"33.33\">\r\n          <mat-label>Max Cash Holding *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input matInput name=\"maxCashHolding\" (keypress)=\"numericValidation($event)\"\r\n              formControlName=\"maxCashHolding\" min=\"tillVaultForm.controls['minCashHolding']\">\r\n            <mat-error\r\n              *ngIf=\"tillVaultForm.get('maxCashHolding').touched && !tillVaultForm.get('maxCashHolding').valid\">\r\n              Max Cash Holding should be greater than min cash holding!\r\n            </mat-error>\r\n            <!-- <mat-error *ngIf=\"tillVaultForm.controls['maxCashHolding'].errors?.min\">\r\n              Max Cash Holding should greater than min cash holding!\r\n            </mat-error> -->\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n\r\n      <div fxLayoutAlign=\"space-between center\" fxLayoutGap=\"15px\">\r\n        <div fxFlex=\"33.33\">\r\n          <mat-label>Till Id *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <mat-select name=\"tillId\" formControlName=\"tillId\" class=\"selectOption\">\r\n              <mat-option *ngFor=\"let data of till\" [value]=\"data.tillVaultCode\">\r\n                {{data?.tillVaultCode}}\r\n              </mat-option>\r\n            </mat-select>\r\n            <mat-error *ngIf=\"tillVaultForm.get('tillId').touched && !tillVaultForm.get('tillId').valid\">\r\n              Till Id is Required!\r\n            </mat-error>\r\n          </mat-form-field>\r\n\r\n        </div>\r\n\r\n      </div>\r\n\r\n\r\n      <div fxLayout=\"row wrap\" fxLayout.lt-sm=\"column\">\r\n        <div fxFlex=\"100\" class=\"mt-16\" fxLayoutAlign=\"end center\">\r\n          <button *ngIf=\"!isEdit\" mat-raised-button color=\"primary\" [disabled]=\"tillVaultForm.invalid\"\r\n            (click)=\"submit()\">SAVE</button>\r\n          &nbsp;\r\n          \r\n\r\n        </div>\r\n\r\n      </div>\r\n    </form>\r\n\r\n\r\n  </mat-card-content>\r\n</mat-card>\r\n\r\n<div class=\"mt-32\">\r\n  <app-audit-log *ngIf=\"isAuditData\" #auditLog></app-audit-log>\r\n</div>","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MatSort, Sort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { Router } from '@angular/router';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { AppConfirmService } from 'app/shared/services/app-confirm/app-confirm.service';\r\nimport { AppLoaderService } from 'app/shared/services/app-loader/app-loader.service';\r\nimport { DataService } from 'app/shared/services/data.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { Location } from '@angular/common';\r\nimport { LiveAnnouncer } from '@angular/cdk/a11y';\r\n\r\n\r\n@Component({\r\n  selector: 'app-menus',\r\n  templateUrl: './menus.component.html',\r\n  styleUrls: ['./menus.component.scss']\r\n})\r\nexport class MenusComponent implements OnInit {\r\n  @ViewChild('searchVal') searchVal: ElementRef;\r\n  selectedFilterIndex : number = 0;\r\n  currentUser: any;\r\n  menus: any;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  dataSource = new MatTableDataSource();\r\n  loading: boolean;\r\n  displayedColumns: string[] = ['id', 'screenName', 'routing', 'parentId', 'authStatus', 'recordStatus', 'action'];\r\n\r\n  filterByOption: { key: string, value: string }[] = [\r\n    { key: 'screenName', value: 'Screen Name' },\r\n    { key: 'routing', value: 'Routing' },\r\n   \r\n  ];\r\n  \r\n  constructor(private snack: MatSnackBar,\r\n    private confirmService: AppConfirmService,\r\n    private loader: AppLoaderService,\r\n    private apiService: ApiService,\r\n    private router:Router,\r\n    private dataService:DataService,\r\n    private _location: Location,\r\n    private _liveAnnouncer: LiveAnnouncer,\r\n    private ls: LocalStoreService,) { }\r\n\r\n  ngOnInit(): void {\r\n    this.currentUser = this.ls.getItem(\"ICUST_USER\");\r\n    console.log(this.currentUser);\r\n    this.getAllNavs();\r\n  }\r\n\r\n  getAllNavs(){\r\n    this.loader.open();\r\n      this.apiService.getMaintenanceMenu().subscribe((data: any) => {\r\n        console.log(\"Menus ??\", data);\r\n        this.loader.close();\r\n        this.menus = data;\r\n        for(let i=0;i<data.length;i++){\r\n\r\n          if(data[i].authStatus == 'U'){\r\n            data[i].authStatus = 'Unauthorized'\r\n          }\r\n          if(data[i].authStatus == 'A') {\r\n            data[i].authStatus = 'Authorized'\r\n          } \r\n          if(data[i].recordStatus == 'O'){\r\n            data[i].recordStatus = 'Open'\r\n          } \r\n          if(data[i].recordStatus == 'C'){\r\n            data[i].recordStatus = 'Closed'\r\n          }\r\n  \r\n        }\r\n        this.dataSource = new MatTableDataSource(data);\r\n        this.dataSource.paginator = this.paginator;\r\n        this.dataSource.sort = this.sort;\r\n      }, (err: any) => {\r\n        console.error();\r\n        this.loader.close();\r\n      })\r\n  }\r\n\r\n  goToDetails(row) {\r\n    console.log(row);\r\n    this.dataService.changeNav(row);\r\n    this.router.navigate([`/maintenance/main/menu-config/${row.id}`]);\r\n    // this.router.navigate([`/maintenance/main/menu-config/addEditMenu`],{ queryParams: { id: data.id, isEdit : isEdit } });\r\n  }\r\n\r\n  openDialogue() {\r\n    this.router.navigate([`/maintenance/main/addEditMenu`]);\r\n  }\r\n\r\n  deleteItem(row) {\r\n    this.confirmService.confirm({ message: `Are you sure, you want to delete ${row.screenName}?` })\r\n      .subscribe(res => {\r\n      console.log(res)\r\n      console.log(row)\r\n        if (res) {\r\n          this.loader.open();\r\n          this.apiService.deleteMenu(row.id)\r\n            .subscribe(data => {\r\n            },\r\n              err => {\r\n                if (err.status == 200) {\r\n                  this.loader.close();\r\n                  this.snack.open('Record Deleted Successfully', 'OK', {\r\n                    duration: 4000,\r\n                    verticalPosition: 'top',\r\n                    horizontalPosition: 'right'\r\n                  });\r\n                }\r\n                this.getAllNavs();\r\n\r\n              })\r\n        }\r\n\r\n      });\r\n  }\r\n\r\n  goBack(){\r\n    // this._location.back();\r\n    this.router.navigate([`/maintenance/main`]);\r\n  }\r\n\r\n  doFilter(filterBy, e){\r\n    this.filterTable(filterBy);\r\n    this.applyFilter(e);\r\n  }\r\n  \r\n  filterTable(filterBy) {\r\n   \r\n    this.dataSource.filterPredicate = (data: any, filter: string): boolean => {\r\n      if(data[filterBy] !=null){\r\n      return (\r\n        data[filterBy].trim().toLocaleLowerCase().includes(filter)\r\n      )}\r\n    }\r\n  }\r\n  \r\n  clearFilter(){\r\n    this.dataSource.filter = '';\r\n    this.searchVal.nativeElement.value = '';\r\n    this.selectedFilterIndex = 0;\r\n   }\r\n \r\n \r\n   applyFilter(event: Event) {\r\n     \r\n     const filterValue = (event.target as HTMLInputElement).value;\r\n     this.dataSource.filter = filterValue.trim().toLocaleLowerCase();\r\n   }\r\n   announceSortChange(sortState: Sort) {\r\n     if (sortState.direction) {\r\n       this._liveAnnouncer.announce(`Sorted ${sortState.direction}ending`);\r\n     } else {\r\n       this._liveAnnouncer.announce('Sorting cleared');\r\n     }\r\n   }\r\n\r\n}\r\n","<h1 class=\"main-head\"><small class=\"small-head\">Home >  Maintenance Summary > Menu Maintenance </small></h1>\r\n<div fxLayoutAlign=\"center\">\r\n  <mat-spinner *ngIf=\"loading\"></mat-spinner>\r\n</div>\r\n<div fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"mt-24\">\r\n  <button mat-icon-button (click)=\"goBack()\">\r\n    <mat-icon>arrow_back</mat-icon>\r\n  </button>\r\n  <span class=\"text-large\"> Menu Maintenance </span>\r\n  <span fxFlex></span>\r\n  <!-- <button mat-button (click)=\"openDialogue()\">\r\n    <mat-icon>add</mat-icon>Add New\r\n  </button> -->\r\n</div>\r\n\r\n<mat-card class=\"mt-32\">\r\n  <table style=\"margin: 18px;\">\r\n    <tr>\r\n      <td>\r\n        <h2>\r\n          Menus\r\n        </h2>\r\n      </td>\r\n    </tr>\r\n    <tr>\r\n      <td>\r\n        <div class=\"highlight\">\r\n        </div>\r\n      </td>\r\n    </tr>\r\n  </table>  \r\n  <div class=\"w-full\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n    <div class=\"w-full\" fxLayout=\"row\" fxLayoutGap='20px'>\r\n      <div>\r\n        <mat-form-field appearance=\"fill\">\r\n          <mat-label>Filter By</mat-label>\r\n          <!-- <mat-select name=\"filterBy\" #filterBy [(ngModel)]=\"selectedFilterIndex\" placeholder=\"Filter By\"> -->\r\n          <mat-select name=\"filterBy\" #filterBy [(ngModel)]=\"selectedFilterIndex\">\r\n\r\n            <mat-option value=\"0\">Select</mat-option>\r\n            <mat-option *ngFor=\"let filter of filterByOption\" value=\"{{filter.key}}\">\r\n              {{filter.value}}\r\n            </mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n      </div>\r\n      <div>\r\n        <mat-form-field appearance=\"fill\">\r\n          <mat-label>Search</mat-label>\r\n          <!-- <input matInput #searchVal (keyup)=\"doFilter(filterBy.value,$event)\" placeholder=\"Search\"> -->\r\n          <input matInput #searchVal (keyup)=\"doFilter(filterBy.value,$event)\">\r\n          <mat-icon matSuffix>search</mat-icon>\r\n        </mat-form-field>\r\n      </div>\r\n      <div style=\"padding-top: 3px;\">\r\n        <button mat-flat-button color=\"warn\" (click)=\"clearFilter()\" style=\"height: 45px;\">Clear Filter</button>\r\n      </div>\r\n      <div>\r\n       <button mat-flat-button color=\"primary\" class=\"mr-38\" (click)=\"openDialogue()\"   style=\"height: 45px; margin-left: 15cm;\" >ADD NEW\r\n  \r\n           </button>\r\n     </div>\r\n    </div>\r\n  </div>\r\n\r\n\r\n  <div class=\"mat-elevation-z0\">\r\n    <mat-table class=\"w-full\" [dataSource]=\"dataSource\" matSort>\r\n      <ng-container matColumnDef=\"id\">\r\n        <mat-header-cell\r\n          *matHeaderCellDef\r\n          mat-sort-header\r\n          sortActionDescription=\"\"\r\n        >\r\n          #\r\n        </mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\"> {{ element.id }} </mat-cell>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"screenName\">\r\n        <mat-header-cell\r\n          *matHeaderCellDef\r\n          mat-sort-header\r\n          sortActionDescription=\"Sort by Screen Name\"\r\n          >Screen Name\r\n        </mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\">\r\n          {{ element.screenName }}\r\n        </mat-cell>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"routing\">\r\n        <mat-header-cell\r\n          *matHeaderCellDef\r\n          mat-sort-header\r\n          sortActionDescription=\"Sort by Routing\"\r\n        >\r\n          Routing\r\n        </mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\"> {{ element.routing }} </mat-cell>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"parentId\">\r\n        <mat-header-cell\r\n          *matHeaderCellDef\r\n          mat-sort-header\r\n          sortActionDescription=\"Sort by Parent ID\"\r\n        >\r\n          Parent ID\r\n        </mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\"> {{ element.parentId }} </mat-cell>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"authStatus\">\r\n        <mat-header-cell\r\n          *matHeaderCellDef\r\n          mat-sort-header\r\n          sortActionDescription=\"Sort by Auth Status\"\r\n        >\r\n          Auth Status\r\n        </mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\">\r\n          {{ element.authStatus }}\r\n        </mat-cell>\r\n      </ng-container>\r\n      <ng-container matColumnDef=\"recordStatus\">\r\n        <mat-header-cell\r\n          *matHeaderCellDef\r\n          mat-sort-header\r\n          sortActionDescription=\"Sort by Record Status\"\r\n        >\r\n          Record Status\r\n        </mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\">\r\n          {{ element.recordStatus }}\r\n        </mat-cell>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"action\">\r\n        <mat-header-cell *matHeaderCellDef>Action</mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\">\r\n          <button\r\n            mat-icon-button\r\n            mat-sm-button\r\n            color=\"primary\"\r\n            class=\"mr-16\"\r\n            (click)=\"goToDetails(element)\"\r\n          >\r\n            <mat-icon>edit</mat-icon>\r\n          </button>\r\n          <button\r\n            mat-icon-button\r\n            mat-sm-button\r\n            color=\"warn\"\r\n            [disabled]=\"element.oneTimeAuth == 'Y'\"\r\n            (click)=\"deleteItem(element)\"\r\n          >\r\n            <mat-icon>delete</mat-icon>\r\n          </button>\r\n        </mat-cell>\r\n      </ng-container>\r\n\r\n      <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n      <mat-row *matRowDef=\"let row; columns: displayedColumns\"></mat-row>\r\n    </mat-table>\r\n    <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\"></mat-paginator>\r\n  </div>\r\n</mat-card>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { AppLoaderService } from 'app/shared/services/app-loader/app-loader.service';\r\nimport { DataService } from 'app/shared/services/data.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { MenuDialogComponent } from '../menu-dialog/menu-dialog.component';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-menu-details',\r\n  templateUrl: './menu-details.component.html',\r\n  styleUrls: ['./menu-details.component.scss']\r\n})\r\nexport class MenuDetailsComponent implements OnInit {\r\n  currentUser: any;\r\n  menuForm: FormGroup;\r\n  navItem: any;\r\n  auditLogData: any;\r\n  parentMenus: any = [];\r\n\r\n  loggedInUser: any;\r\n  id: any;\r\n  readorWrite: boolean=true;\r\n  isEdit: boolean = false;\r\n  isAuditData: boolean = false;\r\n  parentId: any;\r\n\r\n  constructor(private apiService: ApiService,\r\n    private fb: FormBuilder,\r\n    private dialogue: MatDialog,\r\n    private dataService: DataService,\r\n    private ls: LocalStoreService,\r\n    private loader: AppLoaderService,\r\n    private snack: MatSnackBar,\r\n    private router: Router,\r\n    private route: ActivatedRoute,) { }\r\n\r\n  ngOnInit(): void {\r\n    this.currentUser = this.ls.getItem(\"ICUST_USER\");\r\n    this.loggedInUser = this.ls.getItem('ICUST_USER');\r\n    this.getParentMenu();\r\n\r\n    this.dataService.currentNav.subscribe((data: any) => {\r\n      if (!this.isEmpty(data)) {\r\n        this.navItem = data;\r\n        this.id = data.id;\r\n        this.auditLogData = data;\r\n        this.isEdit = true;\r\n        this.isAuditData = true;\r\n        this.buildMenuForm(this.navItem);\r\n        this.dataService.setAuditLogData(this.auditLogData);\r\n      } else {\r\n        this.readorWrite=false;\r\n        this.goBack();\r\n      }\r\n    });\r\n    this.route.queryParamMap.subscribe((params: any) => {\r\n      this.parentId=params.get('id');\r\n      if(this.parentId){\r\n        this.apiService.editMenuMaintenance(this.parentId).subscribe((resp)=>{\r\n          console.log(resp);\r\n          })\r\n      }\r\n    \r\n      console.log(\"param\",params)\r\n     \r\n    })\r\n  }\r\n\r\n  buildMenuForm(item: any) {\r\n    this.menuForm = this.fb.group({\r\n      id: [item.id || null],\r\n      screenCode: [item.screenCode || \"\"],\r\n      screenName: [item.screenName || \"\"],\r\n      parentId: [item.parentId || \"\"],\r\n      routing: [item.routing || \"\"],\r\n      status: true,\r\n    });\r\n  }\r\n\r\n  isEmpty(obj) {\r\n    for (var prop in obj) {\r\n      if (Object.prototype.hasOwnProperty.call(obj, prop)) {\r\n        return false;\r\n      }\r\n    }\r\n\r\n    return JSON.stringify(obj) === JSON.stringify({});\r\n  }\r\n\r\n  getParentMenu() {\r\n    this.apiService.getMaintenanceParentMenu().subscribe((res: any) => {\r\n      this.parentMenus = res;\r\n      console.log(this.parentMenus)\r\n    }, (err: any) => {\r\n\r\n    })\r\n  }\r\n\r\n  onSubmit() {\r\n    if (this.menuForm.invalid) {\r\n      return;\r\n    }\r\n    console.log(this.menuForm.value);\r\n\r\n    let payload: any = {};\r\n    payload = this.menuForm.value;\r\n    payload.loggedInUser = this.loggedInUser.userName;\r\n    this.loader.open();\r\n    this.apiService.upsertMenu(payload).subscribe(res => {\r\n      this.loader.close();\r\n      this.goBack();\r\n    }, err => {\r\n      this.loader.close();\r\n    })\r\n\r\n  }\r\n  deleteRecord(operation){\r\n    Swal.fire(\r\n      {\r\n        //text: 'Unable to process' + 'Error ' + this.responseforfileupload.errorMessage + 'Do you want to Proceed??',\r\n        text: 'You are trying to '+ operation +' record.' + ' Do you want to proceed?',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        // confirmButtonText: 'PROCEED.'\r\n        cancelButtonText: 'NO',\r\n        confirmButtonText: 'YES', 'icon': 'info'\r\n      }\r\n    ).then((result => {\r\n      if(result.isConfirmed==true){\r\n        this.apiService.deleteMenu(this.auditLogData.id)\r\n        .subscribe(data => {\r\n          this.router.navigate([`/maintenance/main/tillVaultStatus`]);\r\n        },\r\n        err=>{\r\n          if (err.status == 200) {\r\n            this.snack.open('Record Deleted Successfully', 'OK', {\r\n              duration: 4000,\r\n              verticalPosition: 'top',\r\n              horizontalPosition: 'right'\r\n            });\r\n          }\r\n          this.router.navigate([`/maintenance/main/tillVaultStatus`]);\r\n        \r\n      })\r\n      }}))\r\n   \r\n         \r\n       \r\n  }\r\n  editRecord(){\r\n    this.readorWrite=false;\r\n  }\r\n\r\n  updateRecord(operation) {\r\n    Swal.fire(\r\n      {\r\n        //text: 'Unable to process' + 'Error ' + this.responseforfileupload.errorMessage + 'Do you want to Proceed??',\r\n        text: 'You are trying to '+ operation +' record.' + ' Do you want to proceed?',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        // confirmButtonText: 'PROCEED.'\r\n        cancelButtonText: 'NO',\r\n        confirmButtonText: 'YES', 'icon': 'info'\r\n      }\r\n    ).then((result => {\r\n      if(result.isConfirmed==true){\r\n        let payload: any = {};\r\n    payload.id = this.id;\r\n    payload.operation = operation;\r\n    payload.loggedInUser = this.loggedInUser.userName;\r\n    this.apiService.getAuditLogsForMenu(payload).subscribe((data) => {\r\n      console.log(data);\r\n      this.auditLogData = data;\r\n      this.dataService.setAuditLogData(this.auditLogData);\r\n      this.isAuditData = true;\r\n      this.dataService.sendClickEvent();\r\n\r\n      let message = '';\r\n      switch (operation) {\r\n        case 'open':\r\n          message = 'opened'\r\n          break;\r\n        case 'close':\r\n          message = 'closed'\r\n          break;\r\n        case 'auth':\r\n          message = 'authorized'\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n      this.snack.open(`Record ${message} successfully!'`, \"OK\", {\r\n        duration: 2000,\r\n        verticalPosition: \"top\",\r\n        horizontalPosition: \"right\",\r\n      });\r\n    });\r\n      }}))\r\n    \r\n  }\r\n\r\n  openDialogue(data: any = {},isEdit : string) {\r\n    this.dataService.setchildMenuDetails(data);\r\n    this.router.navigate(['/maintenance/main/addEditMenu/menuDialog'],{ queryParams: { id: data.id, parenId : this.id,isEdit:true } });\r\n  }\r\n\r\n  goBack() {\r\n    this.router.navigate([`/maintenance/main/menu-config`]);\r\n  }\r\n\r\n}\r\n","<h1 class=\"main-head\"><small class=\"small-head\">Home >  Maintenance Summary > Menu Maintenance > Edit Menu Maintenance</small></h1>\r\n<div fxLayout=\"row\">\r\n  <button mat-icon-button (click)=\"goBack()\">\r\n    <mat-icon>arrow_back</mat-icon>\r\n  </button>\r\n  <h1 class=\"add-text\">Edit Menu</h1>\r\n  <span fxFlex></span>\r\n</div>\r\n\r\n<mat-card>\r\n  <!-- <h1>Edit Menu Information</h1> -->\r\n  <mat-card-content>\r\n    <form class=\"mt-32\" [formGroup]=\"menuForm\">\r\n      <div fxLayout=\"row wrap\" fxLayout.lt-sm=\"column\">\r\n        <div fxFlex=\"33.33\" class=\"pr-16\">\r\n          <mat-label>ScreenName </mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input  [readonly]=\"readorWrite\" matInput name=\"name\" formControlName=\"screenName\" />\r\n          </mat-form-field>\r\n        </div>\r\n\r\n        <div fxFlex=\"33.33\" class=\"pr-16\">\r\n          <mat-label>ScreenCode </mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input  [readonly]=\"readorWrite\" matInput name=\"code\" formControlName=\"screenCode\" />\r\n          </mat-form-field>\r\n        </div>\r\n\r\n        <div fxFlex=\"33.33\" class=\"pr-16\">\r\n          <mat-label>Route *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input  [readonly]=\"readorWrite\" matInput name=\"route\" formControlName=\"routing\" />\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- <div fxLayout=\"row wrap\">\r\n          <div fxFlex=\"33.33\" class=\"pr-16\">\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                <mat-label>Parent Menu</mat-label>\r\n                <mat-select formControlName=\"parentId\">\r\n                  <mat-option *ngFor=\"let item of parentMenus\" [value]=\"item.id\">\r\n                    {{item.screenName}}\r\n                  </mat-option>\r\n                </mat-select>\r\n              </mat-form-field>\r\n          </div>\r\n      </div> -->\r\n\r\n      <div fxLayout=\"row wrap\" fxLayout.lt-sm=\"column\">\r\n        <div fxFlex=\"100\" class=\"mt-16\" fxLayoutAlign=\"end center\">\r\n          <button \r\n            color=\"primary\" *ngIf=\"!isEdit\"\r\n            [disabled]= \"menuForm.invalid\"\r\n            mat-raised-button \r\n            (click)=\"onSubmit()\"\r\n          >\r\n            Save\r\n          </button>\r\n          <div [hidden]=\"readorWrite\" >\r\n            <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\"  [disabled]= \"!(menuForm.invalid || menuForm.dirty)\"(click)=\"onSubmit()\">\r\n               Save\r\n              </button>&nbsp;&nbsp;\r\n          </div>\r\n          \r\n          \r\n          <div [hidden]=\"!readorWrite || auditLogData?.recordStatus == 'Close'\">\r\n            <button *ngIf=\"isEdit\" type=\"button\"  mat-raised-button color=\"primary\" (click)=\"editRecord()\">\r\n              Edit\r\n            </button>&nbsp;&nbsp;\r\n          </div>\r\n          <div *ngIf=\"auditLogData?.authStatus == 'Unauthorized' && readorWrite\" [hidden]=\"!readorWrite\">\r\n            <button *ngIf=\"isEdit\" type=\"button\"  mat-raised-button color=\"primary\" (click)=\"updateRecord('auth')\">\r\n              Authorize\r\n            </button>&nbsp;&nbsp;\r\n          </div> \r\n          <div *ngIf=\"auditLogData?.recordStatus == 'Close' && auditLogData?.oneTimeAuth != 'No'\" [hidden]=\"!readorWrite\">\r\n            <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"updateRecord('open')\">\r\n              Reopen\r\n            </button>&nbsp;&nbsp;\r\n          </div>\r\n          <div *ngIf=\"auditLogData?.recordStatus == 'Open' && auditLogData?.oneTimeAuth != 'No'\" [hidden]=\"!readorWrite\">\r\n            <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"updateRecord('close')\">\r\n              Close\r\n            </button>&nbsp;&nbsp;\r\n          </div>\r\n          <div *ngIf=\"auditLogData?.oneTimeAuth == 'No'\" [hidden]=\"!readorWrite\">\r\n            <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"deleteRecord('delete')\">\r\n              Delete\r\n            </button> &nbsp;&nbsp;\r\n          </div>\r\n         \r\n          <button\r\n            mat-raised-button\r\n            color=\"warn\"\r\n            type=\"button\"\r\n            (click)=\"goBack()\"\r\n          >\r\n            Exit\r\n          </button>\r\n        </div>\r\n      </div>     \r\n    </form>\r\n\r\n    <div class=\"margin-333 mt-16\">\r\n      <table\r\n        class=\"cart-table default-bg mat-elevation-z1 mt-16\"\r\n        *ngIf=\"navItem?.sub != null\"\r\n      >\r\n        <thead>\r\n          <tr>\r\n            <th class=\"text-muted\">ID</th>\r\n            <th class=\"text-muted\">ScreenCode</th>\r\n            <th class=\"text-muted\">ScreenName</th>\r\n            <th class=\"text-muted\">Routing</th>\r\n            <th class=\"text-muted\">Parent ID</th>\r\n            <th class=\"text-muted\">Edit</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <ng-container *ngFor=\"let child of navItem?.sub; let i = index\">\r\n            <tr>\r\n              <td>{{ child.id }}</td>\r\n              <td>{{ child.screenName }}</td>\r\n              <td>{{ child.screenCode }}</td>\r\n              <td>{{ child.routing }}</td>\r\n              <td>{{ child.id }}</td>\r\n              <td>\r\n                <button\r\n                  mat-icon-button\r\n                  color=\"primary\"\r\n                  (click)=\"openDialogue(child)\"\r\n                >\r\n                  <mat-icon>edit</mat-icon>\r\n                </button>\r\n              </td>\r\n            </tr>\r\n            <tr *ngFor=\"let item of child?.sub; let i = index\">\r\n              <td>{{ child.id }}</td>\r\n              <td>{{ item.screenName }}</td>\r\n              <td>{{ item.screenCode }}</td>\r\n              <td>{{ item.routing }}</td>\r\n              <td>{{ item.id }}</td>\r\n              <td>\r\n                <button\r\n                  mat-icon-button\r\n                  color=\"primary\"\r\n                  (click)=\"openDialogue(item,'YES')\"\r\n                >\r\n                  <mat-icon>edit</mat-icon>\r\n                </button>\r\n              </td>\r\n            </tr>\r\n            <tr *ngFor=\"let item2 of item?.sub; let i = index\">\r\n              <td>{{ child.id }}</td>\r\n              <td>{{ item2.screenName }}</td>\r\n              <td>{{ item2.screenCode }}</td>\r\n              <td>{{ item2.routing }}</td>\r\n              <td>{{ item2.id }}</td>\r\n              <td>\r\n                <button\r\n                  mat-icon-button\r\n                  color=\"primary\"\r\n                  (click)=\"openDialogue(item2,'YES')\"\r\n                >\r\n                  <mat-icon>edit</mat-icon>\r\n                </button>\r\n              </td>\r\n            </tr>\r\n            <tr *ngFor=\"let item3 of item2?.sub; let i = index\">\r\n              <td>{{ child.id }}</td>\r\n              <td>{{ item3?.screenName }}</td>\r\n              <td>{{ item3?.screenCode }}</td>\r\n              <td>{{ item3?.routing }}</td>\r\n              <td>{{ item3.id }}</td>\r\n              <td>\r\n                <button\r\n                  mat-icon-button\r\n                  color=\"primary\"\r\n                  (click)=\"openDialogue(item3,'YES')\"\r\n                >\r\n                  <mat-icon>edit</mat-icon>\r\n                </button>\r\n              </td>\r\n            </tr>\r\n          </ng-container>\r\n        </tbody>\r\n      </table>\r\n      <div *ngIf=\"navItem?.sub == null\">\r\n        <span>Not Nested Menu</span>\r\n      </div>\r\n    </div>\r\n  </mat-card-content>\r\n</mat-card>\r\n\r\n<div *ngIf=\"isAuditData\" class=\"mt-32\">\r\n  <app-audit-log #auditLog></app-audit-log>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { PerfectScrollbarModule } from 'ngx-perfect-scrollbar';\r\nimport { SharedMaterialModule } from 'app/shared/shared-material.module';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { SharedDirectivesModule } from 'app/shared/directives/shared-directives.module';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { SharedPipesModule } from 'app/shared/pipes/shared-pipes.module';\r\nimport { MaintenanceHomeComponent } from './maintenance-home.component';\r\nimport { RouterModule } from '@angular/router';\r\nimport { maintenanceRoutes } from './maintenance-routing.module';\r\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\r\n\r\nimport { HttpClientModule } from '@angular/common/http'\r\n\r\nimport { TransactionTypeCrudTableComponent } from './transaction-type/transaction-type-crud-table/transaction-type-crud-table.component';\r\nimport { TransactionTypePopupTableComponent } from './transaction-type/transaction-type-table-popup/transaction-type-popup-table/transaction-type-popup-table.component';\r\nimport { AccountTypeTablePopupComponent } from './account-type/account-type-table-popup/account-type-table-popup.component';\r\nimport { AccountTypeCrudTableComponent } from './account-type/account-type-crud-table/account-type-crud-table.component';\r\nimport { TillVaultSummaryComponent } from './till-vault-config/till-vault-summary/till-vault-summary.component';\r\nimport { TillVaultPopupComponent } from './till-vault-config/till-vault-popup/till-vault-popup.component';\r\nimport { TillVaultDenominationComponent } from './tillVaultDenomination/till-vault-denomination/till-vault-denomination.component';\r\nimport { TillVaultDenominationSummaryComponent } from './tillVaultDenomination/till-vault-denomination-summary/till-vault-denomination-summary.component';\r\nimport { TillVaultCcyPopupComponent } from './till-vault-ccy-bal/till-vault-ccy-popup/till-vault-ccy-popup.component';\r\nimport { TillVaultCcySummryComponent } from './till-vault-ccy-bal/till-vault-ccy-summry/till-vault-ccy-summry.component';\r\nimport { TransactionDenominationHistoryComponent } from './TransactionDenominationHistory/transaction-denomination-history/transaction-denomination-history.component';\r\nimport { TransactionDenominationSummaryComponent } from './TransactionDenominationHistory/transaction-denomination-summary/transaction-denomination-summary.component';\r\nimport { BaseDenominationSummaryComponent } from './base-denomination/base-denomination-summary/base-denomination-summary.component';\r\nimport { BaseDenominationPopupComponent } from './base-denomination/base-denomination-popup/base-denomination-popup.component';\r\nimport { DemonMasterCrudNgxTableComponent } from './denominationMaster/demon-master-crud-ngx-table/demon-master-crud-ngx-table.component';\r\nimport { DenomMasterTablePopupComponent } from './denominationMaster/demon-master-crud-ngx-table/denom-master-table-popup/denom-master-table-popup.component';\r\nimport { TillVaultStatusSummaryComponent } from './till-vault-status/till-vault-status-summary/till-vault-status-summary.component';\r\nimport { TillVaultStatusComponent } from './till-vault-status/till-vault-status/till-vault-status.component';\r\nimport { TxnCashMasterCrudTableComponent } from './transaction-cash-master/txn-cash-master-crud-table/txn-cash-master-crud-table.component';\r\nimport { TxnCashMasterTablePopupComponent } from './transaction-cash-master/txn-cash-master-table-popup/txn-cash-master-table-popup.component';\r\nimport { TillVaultMasterPopupComponent } from './till-vault-master/till-vault-master-popup/till-vault-master-popup/till-vault-master-popup.component';\r\nimport { TillVaultMasterSummaryComponent } from './till-vault-master/till-vault-master-summary/till-vault-master-summary/till-vault-master-summary.component';\r\nimport { CrudNgxTableComponent } from './branch/crud-ngx-table.component';\r\nimport { NgxTablePopupComponent } from './branch/ngx-table-popup/ngx-table-popup.component';\r\nimport { TillVaultBranchMapComponent } from './tillVaultBranchMap/till-vault-branch-map/till-vault-branch-map.component';\r\nimport { TillVaultBranchMapSummaryComponent } from './tillVaultBranchMap/till-vault-branch-map-summary/till-vault-branch-map-summary.component';\r\nimport { TillVaultCcybalHispopupComponent } from './till-vault-ccy-bal-history/till-vault-ccybal-hispopup/till-vault-ccybal-hispopup.component';\r\nimport { TillVaultCcybalHisSummaryComponent } from './till-vault-ccy-bal-history/till-vault-ccybal-his-summary/till-vault-ccybal-his-summary.component';\r\nimport { BankDetailsComponent } from './bank/bank-details/bank-details.component';\r\nimport { BankListComponent } from './bank/bank-list/bank-list.component';\r\nimport { MainHomeComponent } from './main-home/main-home.component';\r\nimport { AuditLogComponent } from './audit-log/audit-log.component';\r\nimport { CountryStateMaintenanceComponent } from './country-state-maintenance/country-state-maintenance.component';\r\nimport { CountryStatePopupComponent } from './country-state-maintenance/country-state-popup/country-state-popup.component';\r\nimport { HolidayMaintenanceComponent } from './holiday-maintenance/holiday-maintenance.component';\r\nimport { BranchHolidayComponent } from './holiday-maintenance/branch-holiday/branch-holiday.component';\r\nimport { CurrencyHolidayComponent } from './holiday-maintenance/currency-holiday/currency-holiday.component';\r\nimport { ClearingHolidayComponent } from './holiday-maintenance/clearing-holiday/clearing-holiday.component';\r\nimport { AddHolidayComponent } from './holiday-maintenance/branch-holiday/add-holiday/add-holiday.component';\r\nimport { EntityMaintenanceComponent } from './entity-maintenance/entity-maintenance.component';\r\nimport { StateMaintenanceComponent } from './state-maintenance/state-maintenance.component';\r\nimport { StatePopupComponent } from './state-maintenance/state-popup/state-popup.component';\r\nimport { AddEntityDetailsComponent } from './entity-maintenance/add-entity-details/add-entity-details.component';\r\nimport { BranchHolidayPopupComponent } from './holiday-maintenance/branch-holiday/branch-holiday-popup/branch-holiday-popup.component';\r\nimport { SubMenuComponent } from './main-home/sub-menu/sub-menu.component';\r\nimport { CommonHolidayComponent } from './holiday-maintenance/branch-holiday/common-holiday/common-holiday.component';\r\nimport { FilterPipe } from 'app/shared/pipes/filter.pipe';\r\nimport { BillerInfoMaintenanceComponent } from './biller-info-maintenance/biller-info-maintenance.component';\r\nimport { AddOrEditBillerInfoComponent } from './biller-info-maintenance/add-or-edit-biller-info/add-or-edit-biller-info.component';\r\nimport { AddBranchComponent } from './holiday-maintenance/branch-holiday/add-branch/add-branch.component';\r\nimport { TxnchargesMaintenanceComponent } from './txncharges-maintenance/txncharges-maintenance.component';\r\nimport { AddTxnchargesComponent } from './txncharges-maintenance/add-txncharges/add-txncharges.component';\r\nimport { TillVaultCcyDemonBalComponent } from './till-vault-ccy-demon-bal/till-vault-ccy-demon-bal.component';\r\nimport { AddTillvaultCcyDemonbalComponent } from './till-vault-ccy-demon-bal/add-tillvault-ccy-demonbal/add-tillvault-ccy-demonbal.component';\r\nimport { ProductMaintenanceComponent } from './product-maintenance/product-maintenance.component';\r\nimport { AddProductMaintenanceComponent } from './product-maintenance/add-product-maintenance/add-product-maintenance.component';\r\nimport { CustomCalenderComponent } from './holiday-maintenance/branch-holiday/custom-calender/custom-calender.component';\r\nimport { HolidayListDialogComponent } from './holiday-maintenance/branch-holiday/holiday-list-dialog/holiday-list-dialog.component';\r\nimport { CustomCalendarArrTypeComponent } from './holiday-maintenance/branch-holiday/custom-calendar-arr-type/custom-calendar-arr-type.component';\r\nimport { CurrencyMaintSummaryComponent } from './currency-maint-summary/currency-maint-summary.component';\r\nimport { AddCurrencyMaintComponent } from './currency-maint-summary/add-currency-maint/add-currency-maint.component';\r\nimport { CurrencyPairMaintenanceComponent } from './currency-pair-maintenance/currency-pair-maintenance.component';\r\nimport { AddCurrencyPairMaintanenceComponent } from './currency-pair-maintenance/add-currency-pair-maintanence/add-currency-pair-maintanence.component';\r\nimport { CurrencyPairaRatesMaintenanceComponent } from './currency-paira-rates-maintenance/currency-paira-rates-maintenance.component';\r\nimport { AddCurrencyPairRatesMaintenanceComponent } from './currency-paira-rates-maintenance/add-currency-pair-rates-maintenance/add-currency-pair-rates-maintenance.component';\r\nimport { MenusComponent } from './menus/menus.component';\r\nimport { MenuDetailsComponent } from './menus/menu-details/menu-details.component';\r\nimport { MenuDialogComponent } from './menus/menu-dialog/menu-dialog.component';\r\nimport { UserMaintenanceComponent } from './user-maintenance/user-maintenance.component';\r\nimport { AddUserMaintenanceComponent } from './user-maintenance/add-user-maintenance/add-user-maintenance.component';\r\nimport { AddEditMenuDetailsComponent } from './menus/add-edit-menu-details/add-edit-menu-details.component';\r\nimport { RoleMaintenanceSummaryComponent } from './role-maintenance-summary/role-maintenance-summary.component';\r\nimport { RoleMaintenanceComponent } from './role-maintenance/role-maintenance.component';\r\nimport { SecurityPolicyComponent } from './security-policy/security-policy.component';\r\nimport { AddSecuritypolicyComponent } from './add-securitypolicy/add-securitypolicy.component';\r\nimport { AddEditSecurityPolicyComponent } from './add-edit-security-policy/add-edit-security-policy.component';\r\nimport { CustomerCategoryComponent } from './customer-category/customer-category.component';\r\nimport { CustomerChargeCategoryComponent } from './customer-charge-category/customer-charge-category.component';\r\nimport { CutomerCategoryCreateComponent } from './customer-category/cutomer-category-create/cutomer-category-create.component';\r\nimport { CutomerChargeCategoryCreateComponent } from './customer-charge-category/cutomer-charge-category-create/cutomer-charge-category-create.component';\r\nimport { CityMaintenanceComponent } from './city-maintenance/city-maintenance.component';\r\nimport { AddEditCityComponent } from './city-maintenance/add-edit-city/add-edit-city.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    MaintenanceHomeComponent,\r\n    CrudNgxTableComponent,\r\n    NgxTablePopupComponent,\r\n    TransactionTypeCrudTableComponent,\r\n    TransactionTypePopupTableComponent,\r\n    AccountTypeTablePopupComponent,\r\n    AccountTypeCrudTableComponent,\r\n    TillVaultSummaryComponent,\r\n    TillVaultPopupComponent,\r\n    TillVaultDenominationComponent,\r\n    TillVaultDenominationSummaryComponent,\r\n    TillVaultCcyPopupComponent,\r\n    TillVaultCcySummryComponent,\r\n    TransactionDenominationHistoryComponent,\r\n    TransactionDenominationSummaryComponent,\r\n    BaseDenominationSummaryComponent,\r\n    BaseDenominationPopupComponent,\r\n    DemonMasterCrudNgxTableComponent,\r\n    DenomMasterTablePopupComponent,\r\n    TillVaultStatusSummaryComponent,\r\n    TillVaultStatusComponent,\r\n    TxnCashMasterCrudTableComponent,\r\n    TxnCashMasterTablePopupComponent,\r\n    TillVaultMasterPopupComponent,\r\n    TillVaultMasterSummaryComponent,\r\n    TillVaultBranchMapComponent,\r\n    TillVaultBranchMapSummaryComponent,\r\n    TillVaultCcybalHispopupComponent,\r\n    TillVaultCcybalHisSummaryComponent,\r\n    BankListComponent,\r\n    BankDetailsComponent,\r\n    MainHomeComponent,\r\n    AuditLogComponent,\r\n    CountryStateMaintenanceComponent,\r\n    CountryStatePopupComponent,\r\n    HolidayMaintenanceComponent,\r\n    BranchHolidayComponent,\r\n    CurrencyHolidayComponent,\r\n    ClearingHolidayComponent,\r\n    AddHolidayComponent,\r\n    EntityMaintenanceComponent,\r\n    StateMaintenanceComponent,\r\n    StatePopupComponent,\r\n    AddEntityDetailsComponent,\r\n    BranchHolidayPopupComponent,\r\n    SubMenuComponent,\r\n    CommonHolidayComponent,\r\n    BillerInfoMaintenanceComponent,\r\n    AddOrEditBillerInfoComponent,\r\n    AddTillvaultCcyDemonbalComponent,\r\n    ProductMaintenanceComponent,\r\n    AddProductMaintenanceComponent,\r\n    HolidayListDialogComponent,\r\n    AddCurrencyMaintComponent,\r\n    CurrencyPairaRatesMaintenanceComponent,\r\n    AddCurrencyPairRatesMaintenanceComponent,\r\n    FilterPipe,\r\n    AddBranchComponent,\r\n    TxnchargesMaintenanceComponent,\r\n    AddTxnchargesComponent,\r\n    TillVaultCcyDemonBalComponent,\r\n    CustomCalenderComponent,\r\n    CurrencyMaintSummaryComponent,\r\n    CurrencyPairMaintenanceComponent,\r\n    AddCurrencyPairMaintanenceComponent,\r\n    CustomCalendarArrTypeComponent,\r\n    MenusComponent,\r\n    MenuDetailsComponent,\r\n    MenuDialogComponent,\r\n    UserMaintenanceComponent,\r\n    AddUserMaintenanceComponent,\r\n    AddEditMenuDetailsComponent,\r\n    RoleMaintenanceSummaryComponent,\r\n    RoleMaintenanceComponent,\r\n    SecurityPolicyComponent,\r\n    AddSecuritypolicyComponent,\r\n    AddEditSecurityPolicyComponent,\r\n    CustomerCategoryComponent,\r\n    CustomerChargeCategoryComponent,\r\n    CutomerCategoryCreateComponent,\r\n    CutomerChargeCategoryCreateComponent,\r\n    CityMaintenanceComponent,\r\n    AddEditCityComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    HttpClientModule,\r\n    ReactiveFormsModule,\r\n    FlexLayoutModule,\r\n    NgxDatatableModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    PerfectScrollbarModule,\r\n    SharedPipesModule,\r\n    SharedDirectivesModule,\r\n    SharedMaterialModule,\r\n    RouterModule.forChild(maintenanceRoutes)\r\n  ]\r\n})\r\nexport class MaintenanceModule { }\r\n","import { LiveAnnouncer } from '@angular/cdk/a11y';\r\nimport { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MatSort, Sort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { Router } from '@angular/router';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { AppConfirmService } from 'app/shared/services/app-confirm/app-confirm.service';\r\n\r\n@Component({\r\n  selector: 'app-till-vault-ccy-demon-bal',\r\n  templateUrl: './till-vault-ccy-demon-bal.component.html',\r\n  styleUrls: ['./till-vault-ccy-demon-bal.component.scss']\r\n})\r\nexport class TillVaultCcyDemonBalComponent implements OnInit {\r\n\r\n  @ViewChild('searchVal') searchVal: ElementRef;\r\n  selectedFilterIndex : number = 0;\r\n\r\n  dataSource = new MatTableDataSource();\r\n  displayedColumns: string[] = ['denomCode', 'openUnitsBal', 'unitsBal', 'authStatus', 'recordStatus', 'action'];\r\n\r\n  filterByOption: { key: string, value: string }[] = [\r\n    { key: 'denomCode', value: 'Denomination Code' },\r\n  ];\r\n\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  users: string[] = [];\r\n  public items: any[];\r\n\r\n  constructor(private router:Router,private snack: MatSnackBar,\r\n    private apiService:ApiService,private confirmService: AppConfirmService,\r\n    private _liveAnnouncer: LiveAnnouncer) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getTillVaultDetails();\r\n    this.getItems();\r\n  }\r\n  getItems() {\r\n    this.items = this.users;\r\n  }\r\n  getTillVaultDetails(){\r\n    this.apiService.fetchTillVaultCcyDemonBal().subscribe((data: any) => {\r\n  \r\n      for(let i=0;i<data.length;i++){\r\n        if(data[i].authStatus == 'U'){\r\n          data[i].authStatus = 'Unauthorized'\r\n        }\r\n        if(data[i].authStatus == 'A') {\r\n          data[i].authStatus = 'Authorized'\r\n        } \r\n        if(data[i].recordStatus == 'O'){\r\n          data[i].recordStatus = 'Open'\r\n        } \r\n        if(data[i].recordStatus == 'C'){\r\n          data[i].recordStatus = 'Closed'\r\n        }\r\n      }\r\n      this.users = data;\r\n      this.items = this.users;\r\n      this.dataSource = new MatTableDataSource(data);\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    });\r\n  }\r\n  doFilter(filterBy, e){\r\n    this.filterTable(filterBy);\r\n    this.applyFilter(e);\r\n  }\r\n  \r\n  filterTable(filterBy) {\r\n    this.dataSource.filterPredicate = (data: any, filter: string): boolean => {\r\n      return (\r\n        data[filterBy].toLocaleLowerCase().includes(filter)\r\n      )\r\n    }\r\n  }\r\n  addNew(){\r\n    this.router.navigate([\"/maintenance/main/tillVaultCcyDenomBal/addTillVaultCcyDenomBal\"]);\r\n  }\r\n  openEdit(data: any = {},isEdit : string) {\r\n    this.router.navigate([\"/maintenance/main/tillVaultCcyDenomBal/addTillVaultCcyDenomBal\"],{ queryParams: { id: data.id, isEdit : isEdit } });\r\n  }\r\n\r\n  clearFilter(){\r\n   this.dataSource.filter = '';\r\n   this.searchVal.nativeElement.value = '';\r\n   this.selectedFilterIndex = 0;\r\n  }\r\n\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n  announceSortChange(sortState: Sort) {\r\n    if (sortState.direction) {\r\n      this._liveAnnouncer.announce(`Sorted ${sortState.direction}ending`);\r\n    } else {\r\n      this._liveAnnouncer.announce('Sorting cleared');\r\n    }\r\n  }\r\n  onFileChange(event) {\r\n    console.log('event', event.path[0].files[0]);\r\n    const file: File = event.path[0].files[0];\r\n    const uploadData = new FormData();\r\n    uploadData.append('screenType', 'tillVaultCcyDenomBal');\r\n    uploadData.append('file', file);\r\n    this.apiService.uploadExelFile(uploadData).subscribe((response) => {\r\n      console.log(response);\r\n      this.getTillVaultDetails();\r\n      this.snack.open(`File Uploaded Successfully`, \"OK\", {\r\n        duration: 4000,\r\n        verticalPosition: \"top\",\r\n        horizontalPosition: \"right\",\r\n      });\r\n    });\r\n  }\r\n\r\n  goBack(){\r\n    this.router.navigate([\"/maintenance/main\"]);\r\n  }\r\n  deleteItem(element) {\r\n    this.confirmService.confirm({message: `Delete Transaction Charges?`})\r\n      .subscribe(res => {\r\n        if (res) {\r\n          this.apiService.deleteTillVaultCcyDemonById(element.id)\r\n            .subscribe(data => {\r\n            },\r\n              err=>{\r\n                if (err.status == 200) {\r\n                  this.snack.open('Record Deleted Successfully', 'OK', {\r\n                    duration: 4000,\r\n                    verticalPosition: 'top',\r\n                    horizontalPosition: 'right'\r\n                  });\r\n                }\r\n      \r\n                this.getTillVaultDetails();\r\n              \r\n            })\r\n        }\r\n        \r\n      });\r\n  }\r\n  dataByFilter(index,filter){\r\n    return filter.value;\r\n  }\r\n}\r\n","<h1 class=\"main-head\"><small class=\"small-head\">Home > Maintenance Summary > Till/Vault Currency Denomination Balance  </small></h1>\r\n  <div fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"mt-24\">\r\n    <button mat-icon-button (click)=\"goBack()\">\r\n        <mat-icon>arrow_back</mat-icon>\r\n      </button> \r\n      <span class=\"text-large\">\r\n        Till/Vault Currency Denomination Balance \r\n      </span>\r\n  </div>\r\n  \r\n  \r\n  \r\n  <mat-card class=\"mt-32\">\r\n   <div fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"mt-24\">\r\n    \r\n    <table>\r\n      <tr>\r\n        <td>\r\n          <h2>\r\n            Till/Vault Currency Denomination Balance \r\n          </h2>\r\n        </td>\r\n      </tr>\r\n      <tr>\r\n        <td>\r\n          <div class=\"highlight\">\r\n          </div>\r\n        </td>\r\n      </tr>\r\n    </table>\r\n       <span fxFlex></span>\r\n       <button mat-icon-button [matMenuTriggerFor]=\"menu\">\r\n         <mat-icon>more_vert</mat-icon>\r\n       </button>\r\n       <mat-menu #menu=\"matMenu\">\r\n        <div class=\"upload_botton\">\r\n          <button type=\"button\" mat-menu-item>Upload</button>\r\n          <input\r\n            type=\"file\"\r\n            accept=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\"\r\n            class=\"btn btn-success\"\r\n            (change)=\"onFileChange($event)\"\r\n          />\r\n        </div>\r\n         <button mat-menu-item>\r\n           <span>Download</span>\r\n         </button>\r\n       </mat-menu>\r\n    </div>\r\n   <div class=\"w-full\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n     <div class=\"w-full\" fxLayout=\"row\" fxLayoutGap='20px'>\r\n       <div>\r\n         <mat-form-field appearance=\"fill\">\r\n           <mat-label>Filter By</mat-label>\r\n           <mat-select name=\"filterBy\" #filterBy [(ngModel)]=\"selectedFilterIndex\" placeholder=\"Filter By\">\r\n            <!-- <mat-select name=\"filterBy\" #filterBy [(ngModel)]=\"selectedFilterIndex\"> -->\r\n             <mat-option value=\"0\">Select</mat-option>\r\n             <mat-option *ngFor=\"let filter of filterByOption; trackBy:dataByFilter\" value=\"{{filter.key}}\">\r\n               {{filter.value}}\r\n             </mat-option>\r\n           </mat-select>\r\n         </mat-form-field>\r\n       </div>\r\n       <div>\r\n         <mat-form-field appearance=\"fill\">\r\n           <mat-label>Search</mat-label>\r\n           <input matInput #searchVal (keyup)=\"doFilter(filterBy.value,$event)\" placeholder=\"Search\">\r\n           <!-- <input matInput #searchVal (keyup)=\"doFilter(filterBy.value,$event)\"> -->\r\n           <mat-icon matSuffix>search</mat-icon>\r\n         </mat-form-field>\r\n       </div>\r\n       <div style=\"padding-top: 3px;\">\r\n         <button mat-flat-button color=\"warn\" (click)=\"clearFilter()\" style=\"height: 45px;\">Clear Filter</button>\r\n       </div>\r\n       <div>\r\n        <button mat-flat-button color=\"primary\" class=\"mr-38\" (click)=\"addNew()\"  style=\"height: 45px; margin-left: 15cm;\" >ADD NEW\r\n\r\n            </button>\r\n      </div>\r\n     </div>\r\n   </div>\r\n   <div class=\"mat-elevation-z0\">\r\n     <mat-table class=\"w-full\" [dataSource]=\"dataSource\" matSort (matSortChange)=\"announceSortChange($event)\">\r\n  \r\n       <ng-container matColumnDef=\"denomCode\">\r\n         <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Denomination Code\"> Denomination Code\r\n         </mat-header-cell>\r\n         <mat-cell *matCellDef=\"let element\"> {{element.denomCode}} </mat-cell>\r\n       </ng-container>\r\n  \r\n       <ng-container matColumnDef=\"openUnitsBal\">\r\n         <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Open Units Balance\"> Open Units Balance\r\n         </mat-header-cell>\r\n         <mat-cell *matCellDef=\"let element\"> {{element.openUnitsBal}} </mat-cell>\r\n       </ng-container>\r\n  \r\n       <ng-container matColumnDef=\"unitsBal\">\r\n         <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Unit Balance\"> Unit Balance\r\n            </mat-header-cell>\r\n         <mat-cell *matCellDef=\"let element\"> {{element.unitsBal}} </mat-cell>\r\n       </ng-container>\r\n       <!--<ng-container matColumnDef=\"oneTimeAuth\">\r\n         <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by One Time Auth\"> One Time Auth\r\n          </mat-header-cell>\r\n         <mat-cell *matCellDef=\"let element\"> {{element.oneTimeAuth}} </mat-cell>\r\n       </ng-container>-->\r\n       <ng-container matColumnDef=\"authStatus\">\r\n         <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Auth Status\"> Auth Status\"\r\n          </mat-header-cell>\r\n         <mat-cell *matCellDef=\"let element\"> {{element.authStatus}} </mat-cell>\r\n       </ng-container>\r\n       <ng-container matColumnDef=\"recordStatus\">\r\n         <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Record Status\"> Record Status\r\n          </mat-header-cell>\r\n         <mat-cell *matCellDef=\"let element\"> {{element.recordStatus}} </mat-cell>\r\n       </ng-container>\r\n  \r\n       <ng-container matColumnDef=\"action\">\r\n         <mat-header-cell *matHeaderCellDef>Action</mat-header-cell>\r\n         <mat-cell *matCellDef=\"let element\">\r\n           <!--<div>\r\n              <mat-icon color=\"primary\" style=\"cursor: pointer;\" [disableRipple]=\"false\" (click)=\"openEdit(element)\">edit</mat-icon>\r\n           </div>&nbsp;&nbsp;\r\n           <div>\r\n            <mat-icon color=\"warn\" style=\"cursor: pointer;\" (click)=\"deleteItem(element)\">delete</mat-icon>\r\n           </div>-->\r\n           <div>\r\n            <mat-icon color=\"primary\" style=\"cursor: pointer;\"  (click)=\"openEdit(element)\" >edit</mat-icon>\r\n         </div>&nbsp;&nbsp;\r\n         <div>\r\n          <mat-icon color=\"warn\" style=\"cursor: pointer;\"  (click)=\"deleteItem(element)\" >delete</mat-icon>\r\n         </div>\r\n         </mat-cell>\r\n       </ng-container>\r\n  \r\n       <mat-header-row *matHeaderRowDef=\"displayedColumns;\"></mat-header-row>\r\n       <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\r\n     </mat-table>\r\n     <mat-paginator [pageSizeOptions]=\"[10,20,30]\" showFirstLastButtons></mat-paginator>\r\n   </div>\r\n  </mat-card>\r\n     \r\n  \r\n\r\n\r\n","import { Component, OnInit,ElementRef, OnDestroy } from '@angular/core';\r\nimport { MatDialogRef, MatDialog } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { NgxTablePopupComponent } from './ngx-table-popup/ngx-table-popup.component';\r\nimport { Subscription } from 'rxjs';\r\nimport { rumangoAnimations } from 'app/shared/animations/rumango-animations';\r\nimport { AppConfirmService } from 'app/shared/services/app-confirm/app-confirm.service';\r\nimport { AppLoaderService } from 'app/shared/services/app-loader/app-loader.service';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { Location } from '@angular/common';\r\nimport { Router } from '@angular/router';\r\nimport { ViewChild } from '@angular/core';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatSort, Sort } from '@angular/material/sort';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { LiveAnnouncer } from '@angular/cdk/a11y';\r\nimport { DownloadService } from 'app/shared/services/download.service';\r\n\r\n@Component({\r\n  selector: 'app-crud-ngx-table',\r\n  templateUrl: './crud-ngx-table.component.html',\r\n  styleUrls: ['./crud-ngx-table.component.scss'],\r\n  animations: rumangoAnimations\r\n})\r\nexport class CrudNgxTableComponent implements OnInit, OnDestroy {\r\n  @ViewChild('searchVal') searchVal: ElementRef;\r\n  selectedFilterIndex : number = 0;\r\n\r\n  dataSource = new MatTableDataSource();\r\n  displayedColumns: string[] = ['branchName', 'branchCode', 'city', 'authStatus', 'recordStatus', 'action'];\r\n\r\n  filterByOption: { key: string, value: string }[] = [\r\n    { key: 'branchName', value: 'Branch Name' },\r\n    { key: 'branchCode', value: 'Branch Code' },\r\n    { key: 'city', value: ' City' }\r\n  ];\r\n\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  branchCode:string[]=[];\r\n  bankCode:string[]=[];\r\n  entityCode:string[]=[];\r\n  public items: any[];\r\n  users: any[] = [];\r\n  public getItemSub: Subscription;\r\n  currentUser: any;\r\n  loading: boolean;\r\n \r\n  constructor(\r\n    private dialog: MatDialog,\r\n    private snack: MatSnackBar,\r\n    private confirmService: AppConfirmService,\r\n    private loader: AppLoaderService,\r\n    private apiService:ApiService,\r\n    private ls:LocalStoreService,\r\n    private _location: Location,\r\n    private router:Router,\r\n    private _liveAnnouncer: LiveAnnouncer,\r\n    private downloadService: DownloadService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.loading = true;\r\n    this.getItemSub = this.apiService.getAllBranch()\r\n      .subscribe(data => {\r\n        this.items = data;\r\n        this.getBranches();\r\n    this.loading = false;\r\n      })\r\n    this.currentUser = this.ls.getItem(\"ICUST_USER\");\r\n    }\r\n  ngOnDestroy() {\r\n    if (this.getItemSub) {\r\n      this.getItemSub.unsubscribe()\r\n    }\r\n  }\r\n  onFileChange(event) {\r\n    console.log('event', event.path[0].files[0]);\r\n    const file: File = event.path[0].files[0];\r\n    const uploadData = new FormData();\r\n    uploadData.append('screenType', 'branch');\r\n    uploadData.append('file', file);\r\n    this.apiService.uploadExelFile(uploadData).subscribe((response) => {\r\n\r\n      console.log(response);\r\n      this.getBranches();\r\n      this.snack.open(`File Uploaded Successfully`, \"OK\", {\r\n        duration: 4000,\r\n        verticalPosition: \"top\",\r\n        horizontalPosition: \"right\",\r\n      });\r\n    });\r\n  }\r\n\r\n  getBranches() {\r\n    this.getItemSub = this.apiService.getAllBranch()\r\n      .subscribe(data => {\r\n        for(let i=0;i<data.length;i++){\r\n          if(data[i].authStatus == 'U'){\r\n            data[i].authStatus = 'Unauthorized'\r\n          }\r\n          if(data[i].authStatus == 'A') {\r\n            data[i].authStatus = 'Authorized'\r\n          } \r\n          if(data[i].recordStatus == 'O'){\r\n            data[i].recordStatus = 'Open'\r\n          } \r\n          if(data[i].recordStatus == 'C'){\r\n            data[i].recordStatus = 'Closed'\r\n          }\r\n        }\r\n        this.items = data;\r\n        this.dataSource = new MatTableDataSource(data);\r\n        this.users = data;\r\n        this.dataSource.paginator = this.paginator;\r\n        this.dataSource.sort = this.sort;\r\n      })\r\n  }\r\n  branchMaintenance(){\r\n\r\n    this.downloadService.downloadFiles(\"branchMaintenance\" , this.users);\r\n\r\n  }\r\n  \r\n  trackByFn(index, item) {\r\n    return index; \r\n  }\r\n\r\n  \r\n\r\n  addNew(){\r\n    this.router.navigate([\"/maintenance/main/branch/add\"]);\r\n  }\r\n\r\n  openPopUp(data: any = {},isEdit : string) {\r\n    this.router.navigate([\"/maintenance/main/branch/add\"],{ queryParams: { id: data.id, isEdit : isEdit } });\r\n  }\r\n\r\n\r\n  deleteItem(row) {\r\n    this.confirmService.confirm({message: `Are you sure? You want to delete?`})\r\n      .subscribe(res => {\r\n        if (res) {\r\n          this.loader.open();\r\n          this.apiService.deleteBranch(row.id,this.currentUser.userName)\r\n            .subscribe(data => {\r\n              this.getBranches();\r\n              this.loader.close();\r\n              this.snack.open('Branch deleted!', 'OK', { duration: 4000 })\r\n            })\r\n        }\r\n      })\r\n  }\r\n  goBack(){\r\n    this.router.navigate([`/maintenance/main`]);\r\n  }\r\n  doFilter(filterBy, e){\r\n    this.filterTable(filterBy);\r\n    this.applyFilter(e);\r\n  }\r\n \r\n\r\n  filterTable(filterBy) {\r\n    this.dataSource.filterPredicate = (data: any, filter: string): boolean => {\r\n      return (\r\n        data[filterBy].toLocaleLowerCase().includes(filter)\r\n      )\r\n    }\r\n  }\r\n\r\n  clearFilter(){\r\n   this.dataSource.filter = '';\r\n   this.searchVal.nativeElement.value = '';\r\n   this.selectedFilterIndex = 0;\r\n  }\r\n\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n  announceSortChange(sortState: Sort) {\r\n    if (sortState.direction) {\r\n      this._liveAnnouncer.announce(`Sorted ${sortState.direction}ending`);\r\n    } else {\r\n      this._liveAnnouncer.announce('Sorting cleared');\r\n    }\r\n  }\r\n}\r\n\r\n","<h1 class=\"main-head\"><small class=\"small-head\">Home >  Maintenance Summary > Branch Maintenance </small></h1>\r\n<div fxLayoutAlign=\"center\">\r\n <mat-spinner *ngIf=\"loading\"></mat-spinner>\r\n</div>\r\n<div fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"mt-24\">\r\n  <button mat-icon-button (click)=\"goBack()\">\r\n      <mat-icon>arrow_back</mat-icon>\r\n    </button> \r\n    <span class=\"text-large\">\r\n      Branch Maintenance\r\n    </span>\r\n   </div>\r\n <mat-card class=\"mt-32\">\r\n  <div>\r\n    <table style=\"margin: 18px;\">\r\n      <tr>\r\n        <td>\r\n          <h2>\r\n            Branches\r\n          </h2>\r\n        </td>\r\n      </tr>\r\n      <tr>\r\n        <td>\r\n          <div class=\"highlight\">\r\n          </div>\r\n        </td>\r\n      </tr>\r\n    </table>  \r\n    <span fxFlex></span>\r\n    <button mat-icon-button [matMenuTriggerFor]=\"menu\">\r\n      <mat-icon>more_vert</mat-icon>\r\n    </button>\r\n    <mat-menu #menu=\"matMenu\">\r\n      <div class=\"upload_botton\">\r\n        <button type=\"button\" mat-menu-item>Upload</button>\r\n        <input\r\n          type=\"file\"\r\n          accept=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\"\r\n          class=\"btn btn-success\"\r\n          (change)=\"onFileChange($event)\"\r\n        />\r\n      </div>\r\n      <button (click)=\"branchMaintenance()\" mat-menu-item>\r\n        <span>Download</span>\r\n      </button>\r\n    </mat-menu>\r\n  </div>  \r\n<mat-card-content>\r\n  <div fxLayout=\"row\" class=\"w-full\" fxLayoutAlign=\"space-arround center\" class=\"ml-16 mt-32\">\r\n    <div fxLayout=\"row\" class=\"w-full\" fxLayoutGap=\"10px\">\r\n      <div>\r\n        <mat-form-field appearance=\"outline\">\r\n          <mat-label>Filter By</mat-label>\r\n          <mat-select name=\"filterBy\" #filterBy [(ngModel)]=\"selectedFilterIndex\" placeholder=\"Filter By\">\r\n            <!-- <mat-select name=\"filterBy\" #filterBy [(ngModel)]=\"selectedFilterIndex\"> -->\r\n            <mat-option value=\"0\">Select</mat-option>\r\n            <mat-option *ngFor=\"let filter of filterByOption; trackBy: trackByFn\" value=\"{{filter.key}}\">\r\n              {{filter.value}}\r\n            </mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n      </div>\r\n      <div>\r\n        <mat-form-field appearance=\"outline\">\r\n          <mat-label>Search</mat-label>\r\n          <input matInput #searchVal (keyup)=\"doFilter(filterBy.value,$event)\" placeholder=\"Search\">\r\n          <!-- <input matInput #searchVal (keyup)=\"doFilter(filterBy.value,$event)\"> -->\r\n          <mat-icon matSuffix>search</mat-icon>\r\n        </mat-form-field>\r\n      </div>\r\n    <div *ngIf=\"searchVal.value || filterBy.value\" class=\"resetDiv\">\r\n      <button mat-stroked-button class=\"clearBtn\" (click)=\"clearFilter()\">RESET\r\n      </button>\r\n    </div>\r\n    <div class=\"filterDiv\">\r\n     <button mat-flat-button color=\"primary\" class=\"addNewBtn\" (click)=\"addNew()\" >ADD NEW\r\n     </button>\r\n   </div>\r\n\r\n  </div>\r\n  </div>\r\n  <div class=\"mat-elevation-z0\">\r\n    <mat-table class=\"w-full\" [dataSource]=\"dataSource\" matSort (matSortChange)=\"announceSortChange($event)\">\r\n  \r\n      <ng-container matColumnDef=\"branchName\">\r\n        <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by branch name\"> Branch\r\n          Name\r\n        </mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\"> {{element.branchName}} </mat-cell>\r\n      </ng-container>\r\n  \r\n      <ng-container matColumnDef=\"branchCode\">\r\n        <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by branch code \">Branch Code\r\n        </mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\"> {{element.branchCode}} </mat-cell>\r\n      </ng-container>\r\n  \r\n      <ng-container matColumnDef=\"city\">\r\n        <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by city\"> City\r\n           </mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\"> {{element.city}} </mat-cell>\r\n      </ng-container>\r\n      <ng-container matColumnDef=\"authStatus\">\r\n        <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Auth Status\"> Auth Status\r\n        </mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\"> {{element.authStatus}} </mat-cell>\r\n      </ng-container>\r\n      <ng-container matColumnDef=\"recordStatus\">\r\n        <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Record Status\"> Record Status\r\n        </mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\"> {{element.recordStatus}} </mat-cell>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"action\">\r\n        <mat-header-cell *matHeaderCellDef>Action</mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\">\r\n          <div>\r\n           <mat-icon class=\"actionIcons\" matTooltip=\"Edit\" (click)=\"openPopUp(element,'Yes')\" >edit</mat-icon>\r\n        </div>&nbsp;&nbsp;&nbsp;&nbsp;\r\n        <div>\r\n         <mat-icon class=\"actionIcons\" matTooltip=\"Delete\" [disabled]=\"element.oneTimeAuth =='Y'\"  (click)=\"deleteItem(element)\" >delete</mat-icon>\r\n        </div>\r\n        </mat-cell>\r\n      </ng-container>\r\n  \r\n      <mat-header-row *matHeaderRowDef=\"displayedColumns;\"></mat-header-row>\r\n      <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\r\n    </mat-table>\r\n    <mat-paginator class=\"mt-16\" [pageSizeOptions]=\"[5, 10, 20]\" aria-label=\"Select page of users\"></mat-paginator>\r\n  </div>\r\n</mat-card-content>\r\n </mat-card>\r\n\r\n","import { Component, EventEmitter, Input, OnInit, Output, SimpleChanges } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport * as moment from 'moment';\r\nimport { Subject } from 'rxjs';\r\nimport { HolidayListDialogComponent } from '../holiday-list-dialog/holiday-list-dialog.component';\r\n\r\n@Component({\r\n  selector: 'app-custom-calender',\r\n  templateUrl: './custom-calender.component.html',\r\n  styleUrls: ['./custom-calender.component.scss']\r\n})\r\nexport class CustomCalenderComponent implements OnInit {\r\n  monthArr: string[][] = [\r\n    ['January', 'February', 'March'],\r\n    ['April', 'May', 'June'],\r\n    ['July', 'August', 'September'],\r\n    ['October', 'November', 'December'],\r\n  ];\r\n  newYearArrayany: any[] = [];\r\n  months: string[] = [\r\n    'January',\r\n    'February',\r\n    'March',\r\n    'April',\r\n    'May',\r\n    'June',\r\n    'July',\r\n    'August',\r\n    'September',\r\n    'October',\r\n    'November',\r\n    'December',\r\n  ];\r\n  weekdays: string[] = [\r\n    'Sunday',\r\n    'Monday',\r\n    'Tuesday',\r\n    'Wednsday',\r\n    'Thursday',\r\n    'Friday',\r\n    'Saturday',\r\n  ];\r\n  monthEnds = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\r\n  viewDate: Date = new Date();\r\n  yearlyCalendarArr = [];\r\n  currentMonth: string;\r\n  currentMonthDate: number;\r\n  calendarDate: string[] = [];\r\n  dateAlreadyActive : string;\r\n  year: number;\r\n  constructor(public dialog: MatDialog) { }\r\n  @Input() public addBranchHolidayFormData: any;\r\n  @Input() resetFormSubject: Subject<boolean> = new Subject<boolean>();\r\n  @Output() onDatePicked = new EventEmitter<any>();\r\n  ngOnInit() {\r\n    // this.fillInYear(2022);\r\n    // console.log(this.yearlyCalendarArr);\r\n    // console.log(this.newYearArrayany);\r\n    // console.log('calendarDate :: ', this.calendarDate);\r\n    this.onDatePicked.emit(this.calendarDate);\r\n    this.currentMonth = this.months[this.viewDate.getMonth()];\r\n    this.currentMonthDate = this.viewDate.getDate();\r\n  }\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    console.log('addBranchHolidayFormData :: ',this.addBranchHolidayFormData);\r\n    if(this.addBranchHolidayFormData !=null){\r\n      this.fillInYear(this.addBranchHolidayFormData.data.year);\r\n      this.currentMonth = this.months[this.viewDate.getMonth()];\r\n      this.currentMonthDate = this.viewDate.getDate();\r\n    }\r\n  }\r\n\r\n  fillInMonth(year: number, month: string, dayAmount: number) {\r\n    this.year=year;\r\n    //do leep year too\r\n    let monthNumsArr = [];\r\n    let endOffSet = 42 - dayAmount;\r\n    //let month_name = document.getElementsByClassName(\"month-name\")[0];\r\n    //if(month_name.innerHTML === month){\r\n    //let calendar_day = document.getElementsByClassName(\"calendar-box\")\r\n    let date = new Date(month + '1, ' + year);\r\n    // console.log('date :: ', date, ' month :: ', month);\r\n    let dateOffSet = date.getDay();\r\n\r\n    for (let i = 0; i < dayAmount + endOffSet; i++) {\r\n      // console.log('i :: ', i);\r\n\r\n      if (i < dateOffSet) {\r\n        //calendar_day[i].innerHTML = \" \";\r\n        monthNumsArr.push(' ');\r\n      } else if (i > dayAmount + dateOffSet - 1) {\r\n        //calendar_day[i].innerHTML = \" \";\r\n        monthNumsArr.push(' ');\r\n      } else {\r\n        monthNumsArr.push((i + 1 - dateOffSet).toString());\r\n        //calendar_day[i].innerHTML = ((i+1) - dateOffSet).toString();\r\n      }\r\n    }\r\n    monthNumsArr.forEach((V, K) => {\r\n      if ((K % 7 == 0) || ((8 + K) % 7 == 0)) {\r\n        if (V != ' ') {\r\n          let dateValue = (+V);\r\n          var d = new Date(year, date.getMonth(), dateValue);\r\n          var responseDate = moment(d).format('YYYY-MM-DD');\r\n          this.calendarDate.push(responseDate);\r\n        }\r\n      }\r\n    });\r\n    return monthNumsArr;\r\n    //}\r\n  }\r\n\r\n\r\n  fillInYear(year: number) {\r\n    let tempMonthArr = [];\r\n    this.yearlyCalendarArr=[];\r\n    this.newYearArrayany=[];\r\n    for (let i = 0; i < 12; i++) {\r\n      // console.log('i-> ', (i + 1) % 3)\r\n      this.yearlyCalendarArr.push(\r\n        this.fillInMonth(year, this.months[i], this.monthEnds[i])\r\n      );\r\n\r\n      if ((i + 1) % 3 == 0) {\r\n        this.newYearArrayany.push(this.yearlyCalendarArr);\r\n        this.yearlyCalendarArr = [];\r\n      }\r\n    }\r\n  }\r\n\r\n  captureDate(dateFromForm,month,year) {\r\n    // console.log('date :: ', dateFromForm,' m :: ',month, ' y:: ', year);\r\n    let date = new Date(month + '1, ' + year);\r\n    let dateValue = (+dateFromForm);\r\n    var d = new Date(year, date.getMonth(), dateValue);\r\n    var responseDate = moment(d).format('YYYY-MM-DD');\r\n    if(responseDate == this.dateAlreadyActive){\r\n        return\r\n    }\r\n    this.dateAlreadyActive = responseDate;\r\n    this.calendarDate.push(responseDate);\r\n    this.onDatePicked.emit(this.calendarDate);\r\n    // console.log('captured :: ',this.calendarDate);\r\n    const dialogRef = this.dialog.open(HolidayListDialogComponent, {\r\n      data: { date: d},\r\n      position: { right: '0' },\r\n      panelClass: 'customHolidayListStyle',\r\n      hasBackdrop: false\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      this.dateAlreadyActive = null;\r\n      // this.animal = result;\r\n    });\r\n  }\r\n\r\n\r\n\r\n}\r\n","<table>\r\n\t<tr *ngFor=\"let arr of newYearArrayany; let i = index\">\r\n\t\t<td *ngFor=\"let days of arr; let j = index\">\r\n\t\t\t<mat-card class=\"mat-elevation-z0\"\r\n\t\t\t\tstyle=\"width: 400px;background-color: transparent;display: flow-root;padding: 0px;\">\r\n\t\t\t\t<mat-card-header>\r\n\t\t\t\t\t<div style=\"margin-left: 120px;margin-top: 10px;\">{{ monthArr[i][j] }}</div>\r\n\t\t\t\t</mat-card-header>\r\n\t\t\t\t<mat-card-content>\r\n\t\t\t\t\t<div class=\"month-body\">\r\n\t\t\t\t\t\t<div class=\"month-divider\">\r\n\t\t\t\t\t\t\t<div class=\"item\" *ngFor=\"let d of days; let di = index\">\r\n\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t<button mat-button class=\"button\" *ngIf=\"di % 7 == 0\"\r\n\t\t\t\t\t\t\t\t\t\tstyle=\"color:red;padding-left: 15px;\">{{ d }}\r\n\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t<button mat-button class=\"button\" *ngIf=\"(8 + di) % 7 == 0\"\r\n\t\t\t\t\t\t\t\t\t\tstyle=\"color:red;\">{{ d }} </button>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div *ngIf=\"di % 7 != 0 && (8 + di) % 7 != 0\">\r\n\t\t\t\t\t\t\t\t\t<button mat-raised-button color=\"warn\" class=\"button4\" *ngIf=\"\r\n\t\t\t\t\t\t  monthArr[i][j] == currentMonth && d == currentMonthDate\" (click)=\" captureDate(d,monthArr[i][j],year)\">\r\n\t\t\t\t\t\t\t\t\t\t{{ d }}\r\n\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t<button mat-button class=\"button\" *ngIf=\"\r\n\t\t\t\t\t\t  monthArr[i][j] == currentMonth && d != currentMonthDate\r\n\t\t\t\t\t\t\" (click)=\" captureDate(d,monthArr[i][j],year)\">\r\n\t\t\t\t\t\t\t\t\t\t{{ d }}\r\n\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t<button mat-button class=\"button\" *ngIf=\"monthArr[i][j] != currentMonth\" (click)=\" captureDate(d,monthArr[i][j],year)\">\r\n\t\t\t\t\t\t\t\t\t\t{{ d }} </button>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"week-divider\">\r\n\t\t\t\t\t\t<div class=\"weekday\" *ngFor=\"let w of weekdays\">\r\n\t\t\t\t\t\t\t<button mat-button class=\"button\" [disabled]=\"true\" color=\"warn\"> {{ w[0] }} </button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</mat-card-content>\r\n\t\t\t</mat-card>\r\n\t\t</td>\r\n\t</tr>\r\n</table>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-add-securitypolicy',\r\n  templateUrl: './add-securitypolicy.component.html',\r\n  styleUrls: ['./add-securitypolicy.component.scss']\r\n})\r\nexport class AddSecuritypolicyComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>add-securitypolicy works!</p>\r\n","import { Component, OnInit, ElementRef, ViewChild } from \"@angular/core\";\r\nimport { LiveAnnouncer } from \"@angular/cdk/a11y\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\r\nimport { MatSort, Sort } from \"@angular/material/sort\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { Router } from \"@angular/router\";\r\nimport { ApiService } from \"app/shared/services/api.service\";\r\nimport { AppConfirmService } from \"app/shared/services/app-confirm/app-confirm.service\";\r\nimport { DataService } from \"app/shared/services/data.service\";\r\nimport { Subscription } from \"rxjs\";\r\n\r\n@Component({\r\n  selector: \"app-currency-paira-rates-maintenance\",\r\n  templateUrl: \"./currency-paira-rates-maintenance.component.html\",\r\n  styleUrls: [\"./currency-paira-rates-maintenance.component.scss\"],\r\n})\r\nexport class CurrencyPairaRatesMaintenanceComponent implements OnInit {\r\n  @ViewChild(\"searchVal\") searchVal: ElementRef;\r\n  selectedFilterIndex: number = 0;\r\n\r\n  dataSource = new MatTableDataSource();\r\n  displayedColumns: string[] = ['pairRateId', 'branchCode', 'rateType', 'rateDate','oneTimeAuth', 'authStatus', 'recordStatus','action'];\r\n\r\n  filterByOption: { key: string; value: string }[] = [\r\n    { key: \"pairRateId\", value: \"Currency Pair Rate Id\" },\r\n    { key: \"branchCode\", value: \"Branch Code\" },\r\n  ];\r\n\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  currencyPairId: any = [];\r\n  branchCode: string[] = [];\r\n  rateType: string[] = [];\r\n  users: any[] = [];\r\n  public items: any[];\r\n  entity: any;\r\n  tillVaultMasterValues: any;\r\n  fetchTillVault: any;\r\n  fetchCurrencyPairRates: any;\r\n  currencyPairMaintValues: any;\r\n  public getItemSub: Subscription;\r\n  id: any;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private _liveAnnouncer: LiveAnnouncer,\r\n    private confirmService: AppConfirmService,\r\n    private apiService: ApiService,\r\n    private snack: MatSnackBar,\r\n    private dataService: DataService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.fetchCurrencyPair();\r\n    this.getBranchCode();\r\n    this.getItems();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.getItemSub) {\r\n      this.getItemSub.unsubscribe();\r\n    }\r\n  }\r\n\r\n  getItems() {\r\n    this.apiService.getCurrencyPairRates().subscribe((currencyPairRatesInfo: any) => {\r\n        if (currencyPairRatesInfo) {\r\n          for(let i=0;i<currencyPairRatesInfo.length;i++){\r\n            if(currencyPairRatesInfo[i].authStatus == 'U'){\r\n              currencyPairRatesInfo[i].authStatus = 'Unauthorized'\r\n            }\r\n            if(currencyPairRatesInfo[i].authStatus == 'A') {\r\n              currencyPairRatesInfo[i].authStatus = 'Authorized'\r\n            } \r\n            if(currencyPairRatesInfo[i].recordStatus == 'O'){\r\n              currencyPairRatesInfo[i].recordStatus = 'Open'\r\n            } \r\n            if(currencyPairRatesInfo[i].recordStatus == 'C'){\r\n              currencyPairRatesInfo[i].recordStatus = 'Closed'\r\n            }\r\n          }\r\n          this.currencyPairMaintValues = currencyPairRatesInfo;\r\n          this.items = this.currencyPairMaintValues;\r\n          console.log(\"items4::\", this.items);\r\n          this.dataSource = new MatTableDataSource(currencyPairRatesInfo);\r\n          this.dataSource.paginator = this.paginator;\r\n          this.dataSource.sort = this.sort;\r\n        }\r\n      });\r\n  }\r\n\r\n  onFileChange(event) {\r\n    console.log('event', event.path[0].files[0]);\r\n    const file: File = event.path[0].files[0];\r\n    const uploadData = new FormData();\r\n    uploadData.append('screenType', 'currencyPairRate');\r\n    uploadData.append('file', file);\r\n    this.apiService.uploadExelFile(uploadData).subscribe((response) => {\r\n      this.getItems();\r\n      console.log(response);\r\n      this.snack.open(`File Uploaded Successfully`, \"OK\", {\r\n        duration: 4000,\r\n        verticalPosition: \"top\",\r\n        horizontalPosition: \"right\",\r\n      });\r\n    });\r\n   \r\n  }\r\n\r\n  fetchCurrencyPair(){\r\n    this.apiService.getCurrencyPair().subscribe((resp) =>{\r\n     console.log(\"currencyPairById\",resp);\r\n     this.currencyPairId=resp;\r\n    })\r\n  }\r\n\r\n  getBranchCode(){\r\n    this.apiService.getBranchCode().subscribe(branchCodeResp=>{\r\n      this.branchCode=branchCodeResp;\r\n    });\r\n  }\r\n\r\n  fetchCurrencyPairRatesById() {\r\n    this.apiService.getCurrencyPairRatesById(this.id).subscribe((resp) => {\r\n      console.log(\"currencyPairRatesById\", resp);\r\n      this.fetchCurrencyPairRates = resp;\r\n    });\r\n    console.log(this.fetchCurrencyPairRates);\r\n    this.dataService.sendNavParam(this.fetchCurrencyPairRates);\r\n    this.router.navigate([`/maintenance/main/addCurrencyPair/${this.id}`]);\r\n  }\r\n\r\n  addNew() {\r\n    this.router.navigate([\"/maintenance/main/addCurrencyPairRates\"]);\r\n  }\r\n\r\n  doFilter(filterBy, e) {\r\n    console.log(filterBy, e);\r\n    this.filterTable(filterBy);\r\n    this.applyFilter(e);\r\n  }\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    console.log(\"filterValue\", filterValue);\r\n    this.dataSource.filter = filterValue.trim().toLocaleLowerCase();\r\n  }\r\n\r\n  clearFilter() {\r\n    this.dataSource.filter = \"\";\r\n    this.searchVal.nativeElement.value = \"\";\r\n    this.selectedFilterIndex = 0;\r\n  }\r\n\r\n  filterTable(filterBy) {\r\n    this.dataSource.filterPredicate = (data: any, filter: string): boolean => {\r\n      console.log(\"data :: \", data[filterBy]);\r\n      if (data[filterBy] != null) {\r\n        return data[filterBy].trim().toLocaleLowerCase().includes(filter);\r\n      }\r\n    };\r\n  }\r\n\r\n  announceSortChange(sortState: Sort) {\r\n    if (sortState.direction) {\r\n      this._liveAnnouncer.announce(`Sorted ${sortState.direction}ending`);\r\n    } else {\r\n      this._liveAnnouncer.announce(\"Sorting cleared\");\r\n    }\r\n  }\r\n  openEdit(data: any = {}, isEdit: string) {\r\n    console.log(\"data\", isEdit);\r\n    console.log(\".id\", data.pairRateId);\r\n    console.log(\"item1::\", data);\r\n\r\n    this.router.navigate([\"/maintenance/main/addCurrencyPairRates\"], {\r\n      queryParams: { id: data.pairRateId, isEdit: isEdit },\r\n    });\r\n  }\r\n\r\n  deleteItem(element) {\r\n    console.log(\"element\", element.pairRateId);\r\n    this.confirmService\r\n      .confirm({ message: `Delete  ${element.pairRateId}?` })\r\n      .subscribe((res) => {\r\n        if (res) {\r\n          this.apiService.deleteCurrencyPairRates(element.pairRateId).subscribe(\r\n            (data) => {\r\n              this.getItems();\r\n            },\r\n            (err) => {\r\n              if (err.status == 200) {\r\n                this.snack.open(\"Record Deleted Successfully\", \"OK\", {\r\n                  duration: 4000,\r\n                  verticalPosition: \"top\",\r\n                  horizontalPosition: \"right\",\r\n                });\r\n              }\r\n            }\r\n          );\r\n        }\r\n      });\r\n  }\r\n\r\n  goBack() {\r\n    this.router.navigate([\"/maintenance/main\"]);\r\n  }\r\n}\r\n","<h1 class=\"main-head\"><small class=\"small-head\">Home > Maintenance Summary > Currency Pair Rate Maintenance </small></h1>\r\n<div fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"mt-24\">\r\n    <button mat-icon-button (click)=\"goBack()\">\r\n        <mat-icon>arrow_back</mat-icon>\r\n    </button>\r\n    <span class=\"text-large\">\r\n        Currency Pair Rate Maintenance\r\n    </span>\r\n</div>\r\n\r\n<mat-card class=\"mt-32\">\r\n    <div>\r\n        <table>\r\n            <tr>\r\n                <td>\r\n                    <h2>\r\n                        Currency Pair Rates\r\n                    </h2>\r\n                </td>\r\n            </tr>\r\n            <tr>\r\n                <td>\r\n                    <div class=\"highlight\">\r\n                    </div>\r\n                </td>\r\n            </tr>\r\n        </table>\r\n        <span fxFlex></span>\r\n        <button mat-icon-button [matMenuTriggerFor]=\"menu\">\r\n            <mat-icon>more_vert</mat-icon>\r\n        </button>\r\n        <mat-menu #menu=\"matMenu\">\r\n            <div class=\"upload_botton\">\r\n                <button type=\"button\" mat-menu-item>Upload</button>\r\n                <input\r\n                  type=\"file\"\r\n                  accept=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\"\r\n                  class=\"btn btn-success\"\r\n                  (change)=\"onFileChange($event)\"\r\n                />\r\n              </div>\r\n            <button mat-menu-item>\r\n                <span>Download</span>\r\n            </button>\r\n        </mat-menu>\r\n    </div>\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"space-arround center\" class=\"ml-16 mt-32\">\r\n        <div fxLayout=\"row\" fxLayoutGap=\"10px\">\r\n            <div>\r\n                <mat-form-field appearance=\"fill\">\r\n                    <mat-label>Filter By</mat-label>\r\n                    <mat-select name=\"filterBy\" #filterBy [(ngModel)]=\"selectedFilterIndex\" placeholder=\"Filter By\">\r\n                        <!-- <mat-select name=\"filterBy\" #filterBy [(ngModel)]=\"selectedFilterIndex\"> -->\r\n                        <mat-option value=\"0\">Select</mat-option>\r\n                        <mat-option *ngFor=\"let filter of filterByOption\" value=\"{{filter.key}}\">\r\n                            {{filter.value}}\r\n                        </mat-option>\r\n                    </mat-select>\r\n                </mat-form-field>\r\n            </div>\r\n            <div>\r\n                <mat-form-field appearance=\"fill\">\r\n                    <mat-label>Search</mat-label>\r\n                    <input matInput #searchVal (keyup)=\"doFilter(filterBy.value,$event)\" placeholder=\"Search\">\r\n                    <!-- <input matInput #searchVal (keyup)=\"doFilter(filterBy.value,$event)\"> -->\r\n                    <mat-icon matSuffix>search</mat-icon>\r\n                </mat-form-field>\r\n            </div>\r\n            <div style=\"padding-top: 3px;\">\r\n                <button mat-flat-button color=\"warn\" (click)=\"clearFilter()\" style=\"height: 45px;\">Clear Filter</button>\r\n            </div>\r\n            <div>\r\n                <button mat-flat-button color=\"primary\" class=\"mr-38\" (click)=\"addNew()\"\r\n                    style=\"height: 45px; margin-left: 15cm;\">ADD NEW\r\n                </button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"mat-elevation-z0\">\r\n        <mat-table class=\"w-full\" [dataSource]=\"dataSource\" matSort (matSortChange)=\"announceSortChange($event)\">\r\n\r\n            <ng-container matColumnDef=\"pairRateId\">\r\n                <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Currency Pair\"> Currency Pair Rate Id\r\n                </mat-header-cell>\r\n                <mat-cell *matCellDef=\"let element\"> {{element.pairRateId}} </mat-cell>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"branchCode\">\r\n                <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Branch Code\"> Branch Code\r\n                </mat-header-cell>\r\n                <mat-cell *matCellDef=\"let element\"> {{element.branchCode}} </mat-cell>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"rateType\">\r\n                <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Rate Type\"> Rate Type\r\n                </mat-header-cell>\r\n                <mat-cell *matCellDef=\"let element\"> {{element.rateType}} </mat-cell>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"rateDate\">\r\n                <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Rate Date\">Rate Date\r\n                </mat-header-cell>\r\n                <mat-cell *matCellDef=\"let element\"> {{element.rateDate}} </mat-cell>\r\n            </ng-container>\r\n\r\n            <!-- <ng-container matColumnDef=\"rateSeq\">\r\n                <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Rate Seq\">Rate Seq\r\n                </mat-header-cell>\r\n                <mat-cell *matCellDef=\"let element\"> {{element.rateSeq}} </mat-cell>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"buySpread\">\r\n                <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Buy Spread\"> Buy Spread\r\n                </mat-header-cell>\r\n                <mat-cell *matCellDef=\"let element\"> {{element.buySpread}} </mat-cell>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"sellSpread\">\r\n                <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Sell Spread\"> Sell Spread\r\n                </mat-header-cell>\r\n                <mat-cell *matCellDef=\"let element\"> {{element.sellSpread}} </mat-cell>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"midRate\">\r\n                <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Mid Rate\"> Mid Rate\r\n                </mat-header-cell>\r\n                <mat-cell *matCellDef=\"let element\"> {{element.midRate}} </mat-cell>\r\n            </ng-container>\r\n            \r\n            <ng-container matColumnDef=\"buyRate\">\r\n                <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Buy Rate\"> Buy Rate\r\n                </mat-header-cell>\r\n                <mat-cell *matCellDef=\"let element\"> {{element.buyRate}} </mat-cell>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"sellRate\">\r\n                <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Sell Rate\"> Sell Rate\r\n                </mat-header-cell>\r\n                <mat-cell *matCellDef=\"let element\"> {{element.sellRate}} </mat-cell>\r\n            </ng-container> -->\r\n\r\n            <ng-container matColumnDef=\"oneTimeAuth\">\r\n                <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by One Time Auth\"> One Time Auth\r\n                 </mat-header-cell>\r\n                <mat-cell *matCellDef=\"let element\"> {{element.oneTimeAuth}} </mat-cell>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"authStatus\">\r\n                <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Auth Status\"> Auth Status\r\n                 </mat-header-cell>\r\n                <mat-cell *matCellDef=\"let element\"> {{element.authStatus}} </mat-cell>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"recordStatus\">\r\n                <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Record Status\"> Record Status\r\n                 </mat-header-cell>\r\n                <mat-cell *matCellDef=\"let element\"> {{element.recordStatus}} </mat-cell>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"action\">\r\n                <mat-header-cell *matHeaderCellDef>Action</mat-header-cell>\r\n                <mat-cell *matCellDef=\"let element\">\r\n                    <div>\r\n                        <mat-icon color=\"primary\" style=\"cursor: pointer;\" (click)=\"openEdit(element)\">edit</mat-icon>\r\n                    </div>&nbsp;&nbsp;\r\n                    <div>\r\n                        <mat-icon color=\"warn\" style=\"cursor: pointer;\" (click)=\"deleteItem(element)\">delete</mat-icon>\r\n                    </div>\r\n                </mat-cell>\r\n            </ng-container>\r\n\r\n            <mat-header-row *matHeaderRowDef=\"displayedColumns;\"></mat-header-row>\r\n            <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\r\n        </mat-table>\r\n        <mat-paginator [pageSizeOptions]=\"[5,10,20]\" showFirstLastButtons></mat-paginator>\r\n    </div>\r\n</mat-card>","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { DataService } from 'app/shared/services/data.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport Swal from 'sweetalert2';\r\nimport { AuditLogComponent } from '../../audit-log/audit-log.component';\r\n\r\n@Component({\r\n  selector: 'app-add-edit-city',\r\n  templateUrl: './add-edit-city.component.html',\r\n  styleUrls: ['./add-edit-city.component.scss']\r\n})\r\nexport class AddEditCityComponent implements OnInit {\r\n  cityId: any;\r\n  cityMaintenance: FormGroup;\r\n  countryArr: any;\r\n  readorWrite: boolean = true;\r\n  stateArr: any;\r\n  loggedInUser: any;\r\n  countryId: number;\r\n  auditLogData: any;\r\n\r\n  @ViewChild('auditLog') auditLog: AuditLogComponent\r\n  constructor(\r\n    private router: Router,\r\n    private fb: FormBuilder,\r\n    private apiService: ApiService,\r\n    private route: ActivatedRoute,\r\n    private ls: LocalStoreService,\r\n    private dataService: DataService,\r\n    private snack: MatSnackBar\r\n\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.loggedInUser = this.ls.getItem('ICUST_USER');\r\n    this.getAllCountries();\r\n    this.route.queryParamMap.subscribe((params: any) => {\r\n      if (params.get('cityId')) {\r\n        this.cityId = params.get('cityId');\r\n        this.apiService.getCityById(this.cityId).subscribe(resp => {\r\n          console.log(resp.countryName);\r\n          setTimeout(() => {\r\n            this.getStateName(resp.countryName)\r\n          }, 100);\r\n          this.buildCityForm(resp);\r\n          console.log(this.cityMaintenance);\r\n          this.auditLogData = resp;\r\n          this.dataService.setAuditLogData(this.auditLogData);\r\n        })\r\n      }\r\n      else {\r\n        console.log('else');\r\n        this.readorWrite = false;\r\n        this.buildCityForm({})\r\n      }\r\n    })\r\n\r\n  }\r\n\r\n  buildCityForm(item) {\r\n    this.cityMaintenance = this.fb.group({\r\n      id: [item ? item.id : ''],\r\n      countryName: [item ? item.countryName : '', Validators.required],\r\n      cityName: [item ? item.cityName : '', Validators.required],\r\n      stateName: [item ? item.stateName : '', Validators.required],\r\n      recordStatus: [item ? item.recordStatus : ''],\r\n      pinCode: [item ? item.pinCode : '', Validators.required]\r\n    });\r\n  }\r\n\r\n  getAllCountries() {\r\n    this.apiService.getAllCountries().subscribe(resp => {\r\n      this.countryArr = resp.filter(res => res.authStatus == 'A');\r\n    })\r\n  }\r\n\r\n  getStateName(countryName) {\r\n    this.countryId = this.countryArr[this.countryArr.findIndex(country => country.countryName == countryName)].id\r\n    this.apiService.getStateByCountry(this.countryId).subscribe(resp => {\r\n      this.stateArr = resp.filter(res => res.authStatus == 'A')\r\n    })\r\n  }\r\n\r\n  _keyPress(event) {\r\n    var inp = String.fromCharCode(event.keyCode);\r\n    if (/[a-zA-Z\\s]/.test(inp)) {\r\n      return true;\r\n    } else {\r\n      event.preventDefault();\r\n      return false;\r\n    }\r\n  }\r\n\r\n  _keyPress1(event) {\r\n    const charCode = (event.which) ? event.which : event.keyCode;\r\n    if (charCode > 31 && (charCode < 48 || charCode > 57)) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n  editRecord() {\r\n    this.readorWrite = false;\r\n  }\r\n  submit(data: any) {\r\n    data.loggedInUser = this.loggedInUser.userName;\r\n    data.countryId = this.countryId\r\n    if (this.cityId) {\r\n      data.cityId = this.cityId;\r\n    }\r\n    console.log(data);\r\n\r\n    this.apiService.upsertCities(data).subscribe((resp) => {\r\n      if (resp) {\r\n        this.router.navigate([\"/maintenance/main/cityMaintenance\"]);\r\n      }\r\n    });\r\n  }\r\n  updateRecord(operation) {\r\n    Swal.fire(\r\n      {\r\n        text: 'You are trying to ' + operation + ' record.' + ' Do you want to proceed?',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        cancelButtonText: 'NO',\r\n        confirmButtonText: 'YES', 'icon': 'info'\r\n      }\r\n    ).then((result => {\r\n      if (result.isConfirmed == true) {\r\n        let payload: any = {};\r\n        payload.id = this.cityId;\r\n        payload.operation = operation;\r\n        payload.loggedInUser = this.loggedInUser;\r\n        this.apiService.getAuditLogsForBranch(payload).subscribe((data) => {\r\n\r\n          this.auditLogData = data;\r\n          this.dataService.setAuditLogData(this.auditLogData);\r\n          this.dataService.sendClickEvent();\r\n          let message = '';\r\n          switch (operation) {\r\n            case 'open':\r\n              message = 'opened'\r\n              break;\r\n            case 'close':\r\n              message = 'closed'\r\n              break;\r\n            case 'auth':\r\n              message = 'authorized'\r\n              break;\r\n            default:\r\n              break;\r\n          }\r\n          this.snack.open(`Record ${message} successful!'`, \"OK\", {\r\n            duration: 2000,\r\n            verticalPosition: \"top\",\r\n            horizontalPosition: \"right\",\r\n          });\r\n        });\r\n      }\r\n    }))\r\n\r\n  }\r\n  goBack() {\r\n    this.router.navigate([\"/maintenance/main/cityMaintenance\"]);\r\n  }\r\n}\r\n","<h1 class=\"main-head\"><small class=\"small-head\">Home > Maintenance Summary > City Maintenance</small></h1>\r\n<div fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"mt-16\">\r\n  <button mat-icon-button (click)=\"goBack()\">\r\n    <mat-icon>arrow_back</mat-icon>\r\n  </button>\r\n  <span class=\"text-large\">\r\n    {{cityId? 'Edit State' : 'Add City'}}\r\n  </span>\r\n</div>\r\n\r\n<mat-card>\r\n  <mat-card-content>\r\n    <form [formGroup]=\"cityMaintenance\" class=\"mt-32\">\r\n      <div fxLayout=\"row wrap\" fxLayout.lt-sm=\"column\">\r\n\r\n        <div fxFlex=\"33.33\" class=\"pr-16\">\r\n          <mat-label>Country Name <span class=\"pl-4 \">*</span></mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <mat-select readonly=\"readorWrite\" [formControl]=\"cityMaintenance.controls['countryName']\"\r\n              (selectionChange)=\"getStateName($event.value)\">\r\n              <mat-option *ngFor=\"let country of countryArr\"\r\n                [value]=\"country.countryName\">{{country.countryName}}</mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n        </div>\r\n\r\n        <div fxFlex=\"33.33\" class=\"pr-16\">\r\n          <mat-label>State Name<span class=\"pl-4 \">*</span></mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <mat-select readonly=\"readorWrite\" [formControl]=\"cityMaintenance.controls['stateName']\">\r\n              <mat-option *ngFor=\"let state of stateArr\" [value]=\"state.stateName\">{{state.stateName}}</mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n        </div>\r\n\r\n        <div fxFlex=\"33.33\" class=\"pr-16\">\r\n          <mat-label>City Name <span class=\"pl-4 \">*</span></mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input matInput minlength=\"3\" [readonly]=\"readorWrite\" (keypress)=_keyPress($event)\r\n              [formControl]=\"cityMaintenance.controls['cityName']\" />\r\n          </mat-form-field>\r\n        </div>\r\n\r\n        <div fxFlex=\"33.33\" class=\"pr-16\">\r\n          <mat-label>Pin Code<span class=\"pl-4 \">*</span></mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input matInput maxlength=\"10\" minlength=\"6\" [readonly]=\"readorWrite\" (keypress)=_keyPress1($event)\r\n              [formControl]=\"cityMaintenance.controls['pinCode']\" />\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n\r\n      <div fxLayout=\"row wrap\" fxLayout.lt-sm=\"column\">\r\n        <div fxFlex=\"100\" class=\"mt-16\" fxLayoutAlign=\"end center\">\r\n          <button mat-raised-button *ngIf=\"!cityId\" color=\"primary\" [disabled]=\"cityMaintenance.invalid\"\r\n            (click)=\"submit(cityMaintenance.value)\">SAVE</button>\r\n          &nbsp;\r\n          <div [hidden]=\"readorWrite\">\r\n            <button *ngIf=\"cityId\" type=\"button\" mat-raised-button color=\"primary\"\r\n              [disabled]=\"!(cityMaintenance.invalid || cityMaintenance.dirty)\" (click)=\"submit(cityMaintenance.value)\">\r\n              Save\r\n            </button>&nbsp;&nbsp;\r\n          </div>\r\n          <div [hidden]=\"!readorWrite\">\r\n            <button *ngIf=\"cityId\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"editRecord()\">\r\n              Edit\r\n            </button>&nbsp;&nbsp;\r\n          </div>\r\n          <div *ngIf=\"auditLogData?.authStatus == 'Unauthorized' && readorWrite\" [hidden]=\"!readorWrite\">\r\n            <button *ngIf=\"cityId\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"updateRecord('auth')\">\r\n              Authorize\r\n            </button>&nbsp;&nbsp;\r\n          </div>\r\n          <div *ngIf=\"auditLogData?.recordStatus == 'Close' && auditLogData?.oneTimeAuth != 'No'\"\r\n            [hidden]=\"!readorWrite\">\r\n            <button *ngIf=\"cityId\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"updateRecord('open')\">\r\n              Reopen\r\n            </button>&nbsp;&nbsp;\r\n          </div>\r\n          <div *ngIf=\"auditLogData?.recordStatus == 'Open' && auditLogData?.oneTimeAuth != 'No'\"\r\n            [hidden]=\"!readorWrite\">\r\n            <button *ngIf=\"cityId\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"updateRecord('close')\">\r\n              Close\r\n            </button>&nbsp;&nbsp;\r\n          </div>\r\n          <div *ngIf=\"auditLogData?.oneTimeAuth == 'No'\" [hidden]=\"!readorWrite\">\r\n            <button *ngIf=\"cityId\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"deleteRecord('delete')\">\r\n              Delete\r\n            </button> &nbsp;&nbsp;\r\n          </div>\r\n\r\n          <button mat-raised-button color=\"warn\" type=\"button\" (click)=\"goBack()\">\r\n            Exit\r\n          </button>\r\n\r\n        </div>\r\n      </div>\r\n    </form>\r\n  </mat-card-content>\r\n</mat-card>\r\n<div *ngIf=\"auditLogData\" class=\"mt-32\">\r\n  <app-audit-log></app-audit-log>\r\n</div>","import { ChangeDetectorRef, Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { tillVaultCcyDenomBal } from 'app/shared/models/tillVaultCcy-denomBal';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { DataService } from 'app/shared/services/data.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-add-tillvault-ccy-demonbal',\r\n  templateUrl: './add-tillvault-ccy-demonbal.component.html',\r\n  styleUrls: ['./add-tillvault-ccy-demonbal.component.scss']\r\n})\r\nexport class AddTillvaultCcyDemonbalComponent implements OnInit {\r\n  addTillVaultCcyForm:FormGroup;\r\n  isEdit: boolean = false;\r\n  id: number;\r\n  loggedInUser: any;\r\n  denom:  string[] = [];\r\n  tillVaultCcyDenomBal:tillVaultCcyDenomBal[] = [];\r\n  auditData: any;\r\n  isAuditData: boolean = false;\r\n  readorWrite: boolean=true;\r\n  constructor(private formBuilder: FormBuilder,private apiService:ApiService,\r\n    private router:Router,private snack: MatSnackBar, private route : ActivatedRoute,\r\n    private ls:LocalStoreService, private dataService:DataService,\r\n    private cdr: ChangeDetectorRef) { this.addTillVaultCcyForm = this.formBuilder.group({\r\n      denomCode: [ '',[Validators.required]],\r\n      openUnitsBal: [ '',[Validators.required]],\r\n      unitsBal: [ '',[Validators.required]],\r\n      loggedInuser : [''],\r\n    idtvcId: [ ''],\r\n    id: [ ''],\r\n\r\n  })}\r\n\r\n  ngOnInit(): void {\r\n    this.loggedInUser = this.ls.getItem('ICUST_USER').userName;\r\n    this.route.queryParamMap.subscribe((params: any) => {\r\n      if(params.get('id')){\r\n        this.isEdit = true;\r\n        this.id = params.get('id');\r\n        this.apiService.getTillVaultCcyDemonById(params.get('id')).subscribe((resp) =>{\r\n           this.buildItemForm(resp);\r\n           this.auditData = resp;\r\n           console.log( this.auditData)\r\n           this.isEdit = true;\r\n           this.isAuditData = true;\r\n           this.dataService.setAuditLogData(this.auditData);\r\n           \r\n        });\r\n      }\r\n      else{\r\n        this.readorWrite=false;\r\n        this.buildItemForm({});\r\n      }\r\n    }\r\n    );\r\n    this.getDenomCode();\r\n  }\r\n  buildItemForm(item) {\r\n    this.addTillVaultCcyForm = this.formBuilder.group({\r\n      denomCode: [item.denomCode || '',[Validators.required]],\r\n      openUnitsBal: [item.openUnitsBal ||'',[Validators.required]],\r\n      unitsBal: [item.unitsBal ||'',[Validators.required]],\r\n      id: [ item.id ||''],\r\n      tvcId: [ item.tvcId ||''],\r\n\r\n    })\r\n  }\r\n  goBack(){\r\n    this.router.navigate([\"/maintenance/main/tillVaultCcyDenomBal\"]);\r\n  }\r\n  submit(){\r\n    this.addTillVaultCcyForm.value.unitsBal=parseInt(this.addTillVaultCcyForm.value.unitsBal);\r\n    this.addTillVaultCcyForm.value.openUnitsBal=parseInt(this.addTillVaultCcyForm.value.openUnitsBal);\r\n   \r\n   \r\n    let payload={\r\n      denomCode: this.addTillVaultCcyForm.value.denomCode,\r\n      openUnitsBal: this.addTillVaultCcyForm.value.openUnitsBal,\r\n      unitsBal: this.addTillVaultCcyForm.value.unitsBal,\r\n      id:this.addTillVaultCcyForm.value.id,\r\n      tvcId:this.addTillVaultCcyForm.value.tvcId,\r\n      loggedInUser:this.loggedInUser,\r\n      //txnId:101,\r\n\r\n    }\r\n    console.log(payload)\r\n  \r\n  this.apiService.updateTillVaultCcyDemonBalDetails(payload).subscribe(response => {\r\n    if(response != null){\r\n      this.snack.open(`Record Added!'`, \"OK\", {\r\n        duration: 2000,\r\n        verticalPosition: \"top\",\r\n        horizontalPosition: \"right\",\r\n      });\r\n      this.cdr.markForCheck();\r\n    }\r\n    this.router.navigate([\"/maintenance/main/tillVaultCcyDenomBal\"]);\r\n  });\r\n\r\n  \r\n  }\r\n  deleteRecord(operation){\r\n    Swal.fire(\r\n      {\r\n        //text: 'Unable to process' + 'Error ' + this.responseforfileupload.errorMessage + 'Do you want to Proceed??',\r\n        text: 'You are trying to '+ operation +' record.' + ' Do you want to proceed?',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        // confirmButtonText: 'PROCEED.'\r\n        cancelButtonText: 'NO',\r\n        confirmButtonText: 'YES', 'icon': 'info'\r\n      }\r\n    ).then((result => {\r\n      if(result.isConfirmed==true){\r\n        this.apiService.deleteTillVaultCcyDemonById(this.auditData.id)\r\n        .subscribe(data => {\r\n          this.router.navigate([\"/maintenance/main/tillVaultCcyDenomBal\"]);\r\n        },\r\n        err=>{\r\n          if (err.status == 200) {\r\n            this.snack.open('Record Deleted Successfully', 'OK', {\r\n              duration: 4000,\r\n              verticalPosition: 'top',\r\n              horizontalPosition: 'right'\r\n            });\r\n          }\r\n          this.router.navigate([\"/maintenance/main/tillVaultCcyDenomBal\"]);\r\n        \r\n      })\r\n      }}))\r\n   \r\n         \r\n       \r\n  }\r\n  editRecord(){\r\n    this.readorWrite=false;\r\n  }\r\n  updateRecord(operation) {\r\n    Swal.fire(\r\n      {\r\n        //text: 'Unable to process' + 'Error ' + this.responseforfileupload.errorMessage + 'Do you want to Proceed??',\r\n        text: 'You are trying to '+ operation +' record.' + ' Do you want to proceed?',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        // confirmButtonText: 'PROCEED.'\r\n        cancelButtonText: 'NO',\r\n        confirmButtonText: 'YES', 'icon': 'info'\r\n      }\r\n    ).then((result => {\r\n      if(result.isConfirmed==true){\r\n        let payload: any = {};\r\n    payload.id = this.id;\r\n    payload.operation = operation;\r\n    payload.loggedInUser = this.loggedInUser.userName;\r\n    this.apiService.getAuditLogsForTillVaultCcyDenomBal(payload).subscribe((data) => {\r\n      this.auditData = data;\r\n      this.dataService.setAuditLogData(this.auditData);\r\n      this.isAuditData = true;\r\n      this.dataService.sendClickEvent();\r\n      let message = '';\r\n      switch (operation) {\r\n        case 'open':\r\n          message = 'opened'\r\n          break;\r\n        case 'close':\r\n          message = 'closed'\r\n          break;\r\n        case 'auth':\r\n          message = 'authorized'\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n      this.snack.open(`Record ${message} successfully!'`, \"OK\", {\r\n        duration: 2000,\r\n        verticalPosition: \"top\",\r\n        horizontalPosition: \"right\",\r\n      });\r\n    });\r\n      }}))\r\n    \r\n  }\r\n  getDenomCode() {\r\n    this.apiService.fetchDenomMasterAuthRecs().subscribe((resp: any) => {\r\n      console.log(resp);\r\n      for(let i=0; i<resp.length;i++){\r\n        if(resp[i].authStatus==='A'){\r\n          this.denom.push(resp[i]);\r\n        }\r\n      }\r\n      console.log(this.denom);\r\n    });\r\n  }\r\n\r\n}\r\n","<h1 class=\"main-head\" *ngIf=\"!isEdit\"><small class=\"small-head\">Home > Maintenance Summary > Till/Vault Currency Denomination Balance >Add Till/Vault Currency Denomination Balance  </small></h1>\r\n<h1 class=\"main-head\" *ngIf=\"isEdit\"><small class=\"small-head\">Home > Maintenance Summary > Till/Vault Currency Denomination Balance >Edit Till/Vault Currency Denomination Balance  </small></h1>\r\n<div fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"mt-16\">\r\n    <button mat-icon-button (click)=\"goBack()\" >\r\n        <mat-icon>arrow_back</mat-icon>\r\n    </button>\r\n    <h1 *ngIf=\"!isEdit\" class=\"add-text\">Add Till/Vault Currency Denomination Balance </h1>\r\n    <h1 *ngIf=\"isEdit\" class=\"add-text\">Edit Till/Vault Currency Denomination Balance </h1>\r\n</div>\r\n\r\n<mat-card>\r\n    <mat-card-content>\r\n        <form [formGroup]=\"addTillVaultCcyForm\"   class=\"m-333\">\r\n            <!-- <h1 *ngIf=\"!isEdit\">Add Till/Vault Currency Denomination Balance </h1>\r\n            <h1 *ngIf=\"isEdit\">Edit Till/Vault Currency Denomination Balance </h1> -->\r\n                <div fxLayoutAlign=\"space-between center\" fxLayoutGap=\"15px\">\r\n                    <div fxFlex=\"33.33\"  *ngIf=\"!readorWrite\">\r\n                        <mat-label>Denomination Code *</mat-label>\r\n                        <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                            <!-- <input \r\n                                matInput name=\"denomCode\"\r\n                                maxlength=\"6\"\r\n                                formControlName=\"denomCode\"\r\n                            /> -->\r\n                            <mat-select name=\"denomCode\"  formControlName=\"denomCode\">\r\n                                <mat-option value=\"\">Select</mat-option>\r\n                                <mat-option *ngFor=\"let data of denom;\"  [value]=\"data.denomCode\">\r\n                              {{data?.denomCode}}\r\n                              </mat-option>\r\n                          </mat-select>\r\n                                  <!--<mat-error *ngIf=\"BranchHolidayForm.get('entityCode').hasError('required')\">\r\n                                     Entity Code is Required!\r\n                                  </mat-error>-->\r\n                        </mat-form-field>\r\n                    </div>\r\n                    <div fxFlex=\"33.33\"  *ngIf=\"readorWrite\">\r\n                        <mat-label>Denomination Code *</mat-label>\r\n                        <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                           <input \r\n                                matInput name=\"denomCode\"\r\n                                maxlength=\"6\"\r\n                                formControlName=\"denomCode\"/>\r\n                            \r\n                        </mat-form-field>\r\n                    </div>\r\n\r\n                    <div fxFlex=\"33.33\">\r\n                        <mat-label>Open Units Balance *</mat-label>\r\n                        <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                           \r\n                            <input [readonly]=\"readorWrite\"\r\n                            matInput name=\"openUnitsBal\"\r\n                            maxlength=\"6\"\r\n                            formControlName=\"openUnitsBal\"\r\n                        />\r\n                           <!--<mat-error *ngIf=\"BranchHolidayForm.get('bankCode').hasError('required')\">\r\n                                Entity Name is Required!\r\n                            </mat-error>-->\r\n                        </mat-form-field>\r\n                    </div>\r\n\r\n                    <div fxFlex=\"33.33\">\r\n                        <mat-label>Unit Balance</mat-label>\r\n                        <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                            <input [readonly]=\"readorWrite\"\r\n                                matInput name=\"unitsBal\"\r\n                                type=\"text\"\r\n                                formControlName=\"unitsBal\"\r\n                            />\r\n                            <!--<mat-error *ngIf=\"BranchHolidayForm.get('branchCode').hasError('required')\">\r\n                                Branch Code is Required!\r\n                            </mat-error>-->\r\n                        </mat-form-field>\r\n                        \r\n                    </div>\r\n\r\n                </div>\r\n\r\n            <!-- </div> -->\r\n            <div fxLayout=\"row wrap\" fxLayout.lt-sm=\"column\">\r\n                <div fxFlex=\"100\" class=\"mt-16\" fxLayoutAlign=\"end center\">\r\n                  <button mat-raised-button *ngIf=\"!isEdit\" color=\"primary\" [disabled]=\"addTillVaultCcyForm.invalid\" (click)=\"submit()\">SAVE</button>\r\n                  &nbsp;\r\n                  <div [hidden]=\"readorWrite\" >\r\n                    <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\"  [disabled]= \"!(addTillVaultCcyForm.invalid || addTillVaultCcyForm.dirty)\"(click)=\"submit()\">\r\n                       Save\r\n                      </button>&nbsp;&nbsp;\r\n                  </div>\r\n                  <div [hidden]=\"!readorWrite || auditData?.recordStatus == 'Close'\">\r\n                    <button *ngIf=\"isEdit\" type=\"button\"  mat-raised-button color=\"primary\" (click)=\"editRecord()\">\r\n                      Edit\r\n                    </button>&nbsp;&nbsp;\r\n                  </div>\r\n                  <div *ngIf=\"auditData?.authStatus == 'Unauthorized' && readorWrite\" [hidden]=\"!readorWrite\">\r\n                    <button *ngIf=\"isEdit\" type=\"button\"  mat-raised-button color=\"primary\" (click)=\"updateRecord('auth')\">\r\n                      Authorize\r\n                    </button>&nbsp;&nbsp;\r\n                  </div> \r\n                  <div *ngIf=\"auditData?.recordStatus == 'Close' && auditData?.oneTimeAuth != 'No'\" [hidden]=\"!readorWrite\">\r\n                    <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"updateRecord('open')\">\r\n                      Reopen\r\n                    </button>&nbsp;&nbsp;\r\n                  </div>\r\n                  <div *ngIf=\"auditData?.recordStatus == 'Open' && auditData?.oneTimeAuth != 'No'\" [hidden]=\"!readorWrite\">\r\n                    <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"updateRecord('close')\">\r\n                      Close\r\n                    </button>&nbsp;&nbsp;\r\n                  </div>\r\n                  <div *ngIf=\"auditData?.oneTimeAuth == 'No'\" [hidden]=\"!readorWrite\">\r\n                    <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"deleteRecord('delete')\">\r\n                      Delete\r\n                    </button> &nbsp;&nbsp;\r\n                  </div>\r\n                 \r\n                  <button\r\n                    mat-raised-button\r\n                    color=\"warn\"\r\n                    type=\"button\"\r\n                    (click)=\"goBack()\"\r\n                  >\r\n                    Exit\r\n                  </button>\r\n        \r\n                </div>\r\n              </div>\r\n        </form>\r\n\r\n        \r\n    </mat-card-content>\r\n</mat-card>\r\n<div class=\"mt-32\">\r\n    <app-audit-log *ngIf=\"isAuditData\" #auditLog></app-audit-log>\r\n  </div>\r\n\r\n","import {\r\n  Component,\r\n  ElementRef,\r\n  OnInit,\r\n  ViewChild,\r\n  OnDestroy,\r\n} from \"@angular/core\";\r\nimport { MatDialogRef, MatDialog } from \"@angular/material/dialog\";\r\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\r\nimport { Subscription } from \"rxjs\";\r\nimport { AppConfirmService } from \"app/shared/services/app-confirm/app-confirm.service\";\r\nimport { AppLoaderService } from \"app/shared/services/app-loader/app-loader.service\";\r\nimport { ApiService } from \"app/shared/services/api.service\";\r\nimport { DataService } from \"app/shared/services/data.service\";\r\nimport { Router } from \"@angular/router\";\r\nimport { LocalStoreService } from \"app/shared/services/local-store.service\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort, Sort } from \"@angular/material/sort\";\r\nimport { LiveAnnouncer } from \"@angular/cdk/a11y\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { rumangoAnimations } from \"app/shared/animations/rumango-animations\";\r\nimport { DownloadService } from \"app/shared/services/download.service\";\r\nimport { fetchTrxnStatus } from \"app/shared/models/fetchTrxnStatus\";\r\n\r\n@Component({\r\n  selector: \"app-txn-cash-master-crud-table\",\r\n  templateUrl: \"./txn-cash-master-crud-table.component.html\",\r\n  styleUrls: [\"./txn-cash-master-crud-table.component.scss\"],\r\n  animations: rumangoAnimations\r\n})\r\nexport class TxnCashMasterCrudTableComponent implements OnInit, OnDestroy {\r\n  @ViewChild(\"searchVal\") searchVal: ElementRef;\r\n  selectedFilterIndex: number = 0;\r\n  displayedColumns: string[] = ['entityCode', 'bankCode', 'branchCode','authStatus','recordStatus','action'];\r\n  filterByOption: { key: string; value: string }[] = [\r\n    { key: \"entityCode\", value: \"Entity Code\" },\r\n  ];\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n\r\n  dataSource = new MatTableDataSource();\r\n\r\n  public items: any[];\r\n  public getItemSub: Subscription;\r\n  currency: string[] = [];\r\n  till: any[] = [];\r\n  branchCode: string[] = [];\r\n  bankCode: string[] = [];\r\n  entity: string[] = [];\r\n  fetchTrxnCashStatus: fetchTrxnStatus;\r\n  loading: boolean;\r\n  data: any;\r\n  tillData: any;\r\n\r\n  constructor(\r\n    private dialog: MatDialog,\r\n    private snack: MatSnackBar,\r\n    private confirmService: AppConfirmService,\r\n    private loader: AppLoaderService,\r\n    private api: ApiService,\r\n    private dataService: DataService,\r\n    private router: Router,\r\n    private ls: LocalStoreService,\r\n    private _liveAnnouncer: LiveAnnouncer,\r\n    private downloadService: DownloadService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.getItems();\r\n    this.getEntityCode();\r\n    this.getCurrency();\r\n    this.getBankCode();\r\n    this.getBranchCode();\r\n    this.getTillId();\r\n  }\r\n  ngOnDestroy() {\r\n    if (this.getItemSub) {\r\n      this.getItemSub.unsubscribe();\r\n    }\r\n  }\r\n  getItems() {\r\n    // this.items = transactionType;\r\n    this.loading = true;\r\n    this.getItemSub = this.api.fetchTxnCashMasterInfo().subscribe((data) => {\r\n    \r\n      for(let i=0;i<data.length;i++){\r\n        if(data[i].authStatus == 'U'){\r\n          data[i].authStatus = 'Unauthorized'\r\n        }\r\n        if(data[i].authStatus == 'A') {\r\n          data[i].authStatus = 'Authorized'\r\n        } \r\n        if(data[i].recordStatus == 'O'){\r\n          data[i].recordStatus = 'Open'\r\n        } \r\n        if(data[i].recordStatus == 'C'){\r\n          data[i].recordStatus = 'Closed'\r\n        }\r\n      }\r\n      this.items = data;\r\n      this.dataSource = new MatTableDataSource(data);\r\n      this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n      this.loading = false;\r\n    });\r\n  }\r\n\r\n  onFileChange(event) {\r\n    console.log('event', event.path[0].files[0]);\r\n    const file: File = event.path[0].files[0];\r\n    const uploadData = new FormData();\r\n    uploadData.append('screenType', 'transactionCashMaster');\r\n    uploadData.append('file', file);\r\n    this.api.uploadExelFile(uploadData).subscribe((response) => {\r\n      this.getItems();\r\n      console.log(response);\r\n      this.snack.open(`File Uploaded Successfully`, \"OK\", {\r\n        duration: 4000,\r\n        verticalPosition: \"top\",\r\n        horizontalPosition: \"right\",\r\n      });\r\n    });\r\n  }\r\n\r\n  getCurrency() {\r\n    this.api.getCountryValues().subscribe((resp) => {\r\n      this.currency = resp;\r\n    });\r\n  }\r\n  getBankCode() {\r\n    this.api.getBankCode().subscribe((resp) => {\r\n      this.bankCode = resp;\r\n    });\r\n  }\r\n  getBranchCode() {\r\n    this.api.getBranchCode().subscribe((resp) => {\r\n      this.branchCode = resp;\r\n    });\r\n  }\r\n  getEntityCode() {\r\n    this.api.getEntityCode().subscribe((resp) => {\r\n      this.entity = resp;\r\n    });\r\n  }\r\n  getTillId() {\r\n    let tillOrVault = \"T\";\r\n    this.api.getTillData(tillOrVault).subscribe((resp) => {\r\n      this.till = resp;\r\n    });\r\n  }\r\n\r\n  doFilter(filterBy, e) {\r\n    this.filterTable(filterBy);\r\n    this.applyFilter(e);\r\n  }\r\n\r\n  filterTable(filterBy) {\r\n    this.dataSource.filterPredicate = (data: any, filter: string): boolean => {\r\n      return data[filterBy].toLocaleLowerCase().includes(filter);\r\n    };\r\n  }\r\n\r\n  clearFilter() {\r\n    this.dataSource.filter = \"\";\r\n    this.searchVal.nativeElement.value = \"\";\r\n    this.selectedFilterIndex = 0;\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n\r\n  announceSortChange(sortState: Sort) {\r\n    if (sortState.direction) {\r\n      this._liveAnnouncer.announce(`Sorted ${sortState.direction}ending`);\r\n    } else {\r\n      this._liveAnnouncer.announce(\"Sorting cleared\");\r\n    }\r\n  }\r\n\r\n  txnCashMaster(){\r\n    this.downloadService.downloadFiles(\"txnCashMaster\" , this.items);\r\n  }\r\n\r\n  deleteItem(row) {\r\n    this.confirmService\r\n      .confirm({ message: `Delete ${row.entityCode}?` })\r\n      .subscribe((res) => {\r\n        if (res) {\r\n          this.loader.open();\r\n          this.api.deleteTxnCashMaster(row.id).subscribe((data) => {\r\n            this.getItems();\r\n            this.loader.close();\r\n            this.snack.open(\"Record deleted!\", \"OK\", { duration: 4000 });\r\n          });\r\n        }\r\n      });\r\n  }\r\n\r\n  openPopUp(row) {\r\n    this.getTxnCashMasterById(row);\r\n    // this.dataService.sendNavParam(this.fetchTrxnCashStatus);\r\n    this.router.navigate([`/maintenance/main/transactionCashMaster/${row.id}`]);\r\n  }\r\n\r\n  getTxnCashMasterById(row) {\r\n    this.loader.open();\r\n    this.api.fetchTxnCashMasterById(row.id).subscribe((result) => {\r\n      this.fetchTrxnCashStatus = result;\r\n\r\n      // this.data = result;\r\n      // if(this.data != null){\r\n      //   console.log(\"this.till::\",this.till)\r\n      //   console.log(\"this.data::\",this.data)\r\n\r\n      //   this.tillData = this.till.find(x => x.id == this.data.tillId);\r\n      //   console.log(\"this.data::\",this.tillData)\r\n      //   if(this.tillData != null){\r\n      //     this.data.tillId = this.tillData.tillVaultCode;\r\n      //   }\r\n      //   this.fetchTrxnCashStatus =  this.data;\r\n      // }\r\n\r\n      if (this.fetchTrxnCashStatus != null) {\r\n        localStorage.setItem(\r\n          \"fetchTrxnCashStatus\",\r\n          JSON.stringify(this.fetchTrxnCashStatus)\r\n        );\r\n        console.log(this.fetchTrxnCashStatus);\r\n        this.loader.close();\r\n      }\r\n    });\r\n  }\r\n\r\n  addNew() {\r\n    this.router.navigate([\"/maintenance/main/transactionCashMaster/add\"]);\r\n  }\r\n\r\n  goBack() {\r\n    this.router.navigate([\"/maintenance/main/\"]);\r\n  }\r\n  dataByFilter(index,item){\r\n    return item.key\r\n\r\n  }\r\n}\r\n","<h1 class=\"main-head\"><small class=\"small-head\">Home > Maintenance Summary > Transaction Cash Master Maintenance </small>\r\n</h1>\r\n<div fxLayoutAlign=\"center\">\r\n  <mat-spinner *ngIf=\"loading\"></mat-spinner>\r\n</div>\r\n<div fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"mt-24\">\r\n  <button mat-icon-button (click)=\"goBack()\">\r\n    <mat-icon>arrow_back</mat-icon>\r\n  </button>\r\n  <span class=\"text-large\">\r\n    Transaction Cash Master Maintenance\r\n  </span>\r\n  </div>\r\n<mat-card class=\"mt-32\">\r\n  <div >    \r\n    <table style=\"margin: 18px;\">\r\n      <tr>\r\n        <td>\r\n          <h2>\r\n            Transaction Cash Master Details\r\n          </h2>\r\n        </td>\r\n      </tr>\r\n      <tr>\r\n        <td>\r\n          <div class=\"highlight\">\r\n          </div>\r\n        </td>\r\n      </tr>\r\n    </table>\r\n    <span fxFlex></span>\r\n  <button mat-icon-button [matMenuTriggerFor]=\"menu\">\r\n    <mat-icon>more_vert</mat-icon>\r\n  </button>\r\n  <mat-menu #menu=\"matMenu\">\r\n    <div class=\"upload_botton\">\r\n      <button type=\"button\" mat-menu-item>Upload</button>\r\n      <input\r\n        type=\"file\"\r\n        accept=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\"\r\n        class=\"btn btn-success\"\r\n        (change)=\"onFileChange($event)\"\r\n      />\r\n    </div>\r\n    <button (click)=\"txnCashMaster()\" mat-menu-item>\r\n      <span>Download</span>\r\n    </button>\r\n  </mat-menu>\r\n  </div>\r\n  <mat-card-content class=\"p-0\">\r\n    <div fxLayout=\"row\" class=\"w-full\" fxLayoutAlign=\"space-arround center\" class=\"ml-16 mt-32\">\r\n      <div fxLayout=\"row\" class=\"w-full\" fxLayoutGap=\"10px\">\r\n        <div>\r\n          <mat-form-field appearance=\"outline\">\r\n            <mat-label>Filter By</mat-label>\r\n            <mat-select name=\"filterBy\" #filterBy [(ngModel)]=\"selectedFilterIndex\" placeholder=\"Filter By\">\r\n              <!-- <mat-select name=\"filterBy\" #filterBy [(ngModel)]=\"selectedFilterIndex\"> -->\r\n              <mat-option value=\"0\">Select</mat-option>\r\n              <mat-option *ngFor=\"let filter of filterByOption;trackBy:dataByFilter\" value=\"{{filter.key}}\">\r\n\r\n                {{filter.value}}\r\n              </mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n        </div>\r\n        <div>\r\n          <mat-form-field appearance=\"outline\">\r\n            <mat-label>Search</mat-label>\r\n            <input matInput #searchVal (keyup)=\"doFilter(filterBy.value,$event)\" placeholder=\"Search\">\r\n            <!-- <input matInput #searchVal (keyup)=\"doFilter(filterBy.value,$event)\"> -->\r\n            <mat-icon matSuffix>search</mat-icon>\r\n          </mat-form-field>\r\n        </div>\r\n        <div *ngIf=\"searchVal.value || filterBy.value\" class=\"resetDiv\">\r\n          <button mat-stroked-button class=\"clearBtn\" (click)=\"clearFilter()\">RESET\r\n          </button>\r\n        </div>\r\n        <div class=\"filterDiv\">\r\n         <button mat-flat-button color=\"primary\" class=\"addNewBtn\" (click)=\"addNew()\" >ADD NEW\r\n         </button>\r\n       </div> \r\n      \r\n    </div>\r\n    </div>\r\n    <div class=\"mat-elevation-z0\">\r\n      <mat-table class=\"w-full\" [dataSource]=\"dataSource\" matSort (matSortChange)=\"announceSortChange($event)\">\r\n        <ng-container matColumnDef=\"entityCode\">\r\n          <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by state code\"> Entity\r\n            Code\r\n          </mat-header-cell>\r\n          <mat-cell *matCellDef=\"let element\"> {{element.entityCode}} </mat-cell>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"bankCode\">\r\n          <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Bank Code\"> Bank Code\r\n          </mat-header-cell>\r\n          <mat-cell *matCellDef=\"let element\"> {{element.bankCode}} </mat-cell>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"branchCode\">\r\n          <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Branch Code\"> Branch Code\r\n            \r\n          </mat-header-cell>\r\n          <mat-cell *matCellDef=\"let element\"> {{element.branchCode}} </mat-cell>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"authStatus\">\r\n          <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Auth Status\"> Auth Status\r\n          </mat-header-cell>\r\n          <mat-cell *matCellDef=\"let element\"> {{element.authStatus}} </mat-cell>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"recordStatus\">\r\n          <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Record Status\"> Record\r\n            Status\r\n          </mat-header-cell>\r\n          <mat-cell *matCellDef=\"let element\"> {{element.recordStatus}} </mat-cell>\r\n        </ng-container>\r\n\r\n\r\n        <ng-container matColumnDef=\"action\">\r\n          <mat-header-cell *matHeaderCellDef>Action</mat-header-cell>\r\n          <mat-cell *matCellDef=\"let element\">\r\n            <div>\r\n             <mat-icon class=\"actionIcons\" matTooltip=\"Edit\" (click)=\"openPopUp(element,'Yes')\"  >edit</mat-icon>\r\n          </div>&nbsp;&nbsp;&nbsp;&nbsp;\r\n          <div>\r\n           <mat-icon class=\"actionIcons\" matTooltip=\"Delete\" [disabled]=\"element.oneTimeAuth =='Y'\" (click)=\"deleteItem(element)\" >delete</mat-icon>\r\n          </div>\r\n          </mat-cell>\r\n        </ng-container>\r\n\r\n        <mat-header-row *matHeaderRowDef=\"displayedColumns;\"></mat-header-row>\r\n        <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\r\n      </mat-table>\r\n      <mat-paginator class=\"mt-16\" [pageSizeOptions]=\"[5, 10, 20]\" aria-label=\"Select page of users\"></mat-paginator>\r\n    </div>\r\n    <!-- <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\" aria-label=\"Select page of users\"></mat-paginator> -->\r\n  </mat-card-content>\r\n</mat-card>","import { LiveAnnouncer } from '@angular/cdk/a11y';\r\nimport { ChangeDetectorRef, Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MatSort, Sort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { Router } from '@angular/router';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { AppConfirmService } from 'app/shared/services/app-confirm/app-confirm.service';\r\nimport { AppLoaderService } from 'app/shared/services/app-loader/app-loader.service';\r\nimport { DownloadService } from 'app/shared/services/download.service';\r\n\r\n@Component({\r\n  selector: 'app-biller-info-maintenance',\r\n  templateUrl: './biller-info-maintenance.component.html',\r\n  styleUrls: ['./biller-info-maintenance.component.scss']\r\n})\r\nexport class BillerInfoMaintenanceComponent implements OnInit {\r\n\r\n  @ViewChild('searchVal') searchVal: ElementRef;\r\n  selectedFilterIndex: number = 0;\r\n  public users: any[];\r\n  dataSource = new MatTableDataSource();\r\n  displayedColumns: string[] = ['entityCode', 'billerCode', 'billerName', 'billerAccBrn', 'authStatus', 'recordStatus', 'action'];\r\n\r\n  filterByOption: { key: string, value: string }[] = [\r\n    { key: 'entityCode', value: 'Entity Code' },\r\n    { key: 'billerCode', value: 'Biller Code' }\r\n  ];\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  data: any = [];\r\n  // { id: number; entityCode: string; bankCode: string; billerCode: string; billerName: string; billerAccBrn: string; billerAccount: string; createdDate: string; lastModifiedDate: string; oneTimeAuth: string; authStatus: string; recordStatus: string; version: number; authBy: string; authDate: string; modifiedBy: string; createdBy: string; noOfModification: number; }[];\r\n\r\n  constructor(private confirmService: AppConfirmService,\r\n     private snack: MatSnackBar,\r\n    private apiService: ApiService, \r\n    private router: Router,\r\n    private cdr: ChangeDetectorRef, \r\n    private _liveAnnouncer: LiveAnnouncer,\r\n    private loader: AppLoaderService,\r\n    private downloadService: DownloadService\r\n    ) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.fetchBillerInfo();\r\n\r\n  }\r\n\r\n  onFileChange(event) {\r\n    console.log('event', event.path[0].files[0]);\r\n    const file: File = event.path[0].files[0];\r\n    const uploadData = new FormData();\r\n    uploadData.append('screenType', 'billerInfoMaint');\r\n    uploadData.append('file', file);\r\n    this.apiService.uploadExelFile(uploadData).subscribe((response) => {\r\n      console.log(response);\r\n      this.fetchBillerInfo();\r\n      this.snack.open(`File Uploaded Successfully`, \"OK\", {\r\n        duration: 4000,\r\n        verticalPosition: \"top\",\r\n        horizontalPosition: \"right\",\r\n      });\r\n    });\r\n   \r\n  }\r\n\r\n  fetchBillerInfo() {\r\n    this.apiService.getAllBillerInfoId().subscribe((resp) => {\r\n      for(let i=0;i<resp.length;i++){\r\n        if(resp[i].authStatus == 'U'){\r\n          resp[i].authStatus = 'Unauthorized'\r\n        }\r\n        if(resp[i].authStatus == 'A') {\r\n          resp[i].authStatus = 'Authorized'\r\n        } \r\n        if(resp[i].recordStatus == 'O'){\r\n          resp[i].recordStatus = 'Open'\r\n        } \r\n        if(resp[i].recordStatus == 'C'){\r\n          resp[i].recordStatus = 'Closed'\r\n        }\r\n      }\r\n      this.data = resp;\r\n      this.dataSource = new MatTableDataSource(this.data);\r\n      console.log(this.dataSource);\r\n      this.users = this.data;\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    });\r\n  }\r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n  addNew() {\r\n    this.router.navigate([\"/maintenance/main/addOrEditBillerInfo\"]);\r\n  }\r\n\r\n  goBack() {\r\n    this.router.navigate([`/maintenance/main`]);\r\n  }\r\n  doFilter(filterBy, e) {\r\n    this.filterTable(filterBy);\r\n    this.applyFilter(e);\r\n  }\r\n  filterTable(filterBy) {\r\n    this.dataSource.filterPredicate = (data: any=[], filter: string): boolean => {\r\n      return (\r\n        data[filterBy]?.toLocaleLowerCase().includes(filter)\r\n      )      \r\n    }\r\n  }\r\n  clearFilter() {\r\n    this.dataSource.filter = '';\r\n    this.searchVal.nativeElement.value = '';\r\n    this.selectedFilterIndex = 0;\r\n  }\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n\r\n  announceSortChange(sortState: Sort) {\r\n    if (sortState.direction) {\r\n      this._liveAnnouncer.announce(`Sorted ${sortState.direction}ending`);\r\n    } else {\r\n      this._liveAnnouncer.announce('Sorting cleared');\r\n    }\r\n  }\r\n\r\n  editItem(data: any = {}, isEdit: string) {\r\n    console.log(\"data to edit:: \", data);\r\n    this.router.navigate([\"/maintenance/main/addOrEditBillerInfo\"], { queryParams: { id: data.id, isEdit: isEdit } });\r\n  }\r\n\r\n  billerInfo(){\r\n\r\n    this.downloadService.downloadFiles(\"billerInfo\" , this.users);\r\n  }\r\n  deleteItem(row) {\r\n    this.confirmService.confirm({ message: `Are you sure? You want to delete?` })\r\n      .subscribe(res => {\r\n        if (res) {\r\n          console.log(\"data to delete :: \", row);\r\n          this.loader.open();\r\n          this.apiService.deleteBillerInfo(row.id)\r\n            .subscribe(data => {\r\n              this.loader.close();\r\n              this.fetchBillerInfo();\r\n            },\r\n              err => {\r\n                if (err.status == 200) {\r\n                  this.snack.open('Record Deleted Successfully', 'OK', {\r\n                    duration: 4000,\r\n                    verticalPosition: 'top',\r\n                    horizontalPosition: 'right'\r\n                  });\r\n                  \r\n                }  \r\n              })\r\n        }\r\n      });\r\n  }\r\n\r\n  dataByFilterByOption(index, filter){\r\n    return filter.value; \r\n }\r\n\r\n}\r\n","<h1 class=\"main-head\"><small class=\"small-head\">Home > Maintenance Summary > Biller Maintenance </small></h1>\r\n<div fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"mt-24\">\r\n\t<button mat-icon-button (click)=\"goBack()\">\r\n\t  <mat-icon>arrow_back</mat-icon>\r\n\t</button>\r\n\t<span class=\"text-large\">\r\n\t  Biller Maintenance\r\n\t</span>\r\n</div>\r\n  <!-- <div fxLayoutAlign=\"center\">\r\n\t<mat-spinner *ngIf=\"loading\"></mat-spinner>\r\n  </div> -->\r\n  <mat-card class=\"mt-32\">\r\n\t<div>\r\n\t\t<table style=\"margin: 18px;\">\r\n\t\t  <tr>\r\n\t\t\t<td>\r\n\t\t\t  <h2>\r\n\t\t\t\tBillers\r\n\t\t\t  </h2>\r\n\t\t\t</td>\r\n\t\t  </tr>\r\n\t\t  <tr>\r\n\t\t\t<td>\r\n\t\t\t  <div class=\"highlight\">\r\n\t\t\t  </div>\r\n\t\t\t</td>\r\n\t\t  </tr>\r\n\t\t</table>  \r\n\t\t<span fxFlex></span>\r\n\t\t<button mat-icon-button [matMenuTriggerFor]=\"menu\">\r\n\t\t  <mat-icon>more_vert</mat-icon>\r\n\t\t</button>\r\n\t\t<mat-menu #menu=\"matMenu\">\r\n\t\t  <div class=\"upload_botton\">\r\n\t\t\t<button type=\"button\" mat-menu-item>Upload</button>\r\n\t\t\t<input\r\n\t\t\t  type=\"file\"\r\n\t\t\t  accept=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\"\r\n\t\t\t  class=\"btn btn-success\"\r\n\t\t\t  (change)=\"onFileChange($event)\"\r\n\t\t\t/>\r\n\t\t  </div>\r\n\t\t  <button (click)=\"billerInfo()\" mat-menu-item>\r\n\t\t\t<span>Download</span>\r\n\t\t  </button>\r\n\t\t</mat-menu>\r\n\t\t</div>\r\n\t   <mat-card-content>\r\n\t\t<div fxLayout=\"row\" class=\"w-full\" fxLayoutAlign=\"space-arround center\" class=\"ml-16 mt-32\">\r\n\t\t\t<div fxLayout=\"row\"class=\"w-full\" fxLayoutGap=\"10px\">\r\n\t\t\t  <div>\r\n\t\t\t\t<mat-form-field appearance=\"outline\">\r\n\t\t\t\t  <mat-label>Filter By</mat-label>\r\n\t\t\t\t  <mat-select name=\"filterBy\" #filterBy [(ngModel)]=\"selectedFilterIndex\" placeholder=\"Filter By\">\r\n\t\t\t\t\t<!-- <mat-select name=\"filterBy\" #filterBy [(ngModel)]=\"selectedFilterIndex\"> -->\r\n\t\t\t\t\t<mat-option value=\"0\">Select</mat-option>\r\n\t\t\t\t\t<mat-option *ngFor=\"let filter of filterByOption; trackBy:dataByFilterByOption\" value=\"{{filter.key}}\">\r\n\t\t\t\t\t  {{filter.value}}\r\n\t\t\t\t\t</mat-option>\r\n\t\t\t\t  </mat-select>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t  </div>\r\n\t\t\t  <div>\r\n\t\t\t\t<mat-form-field appearance=\"outline\">\r\n\t\t\t\t  <mat-label>Search</mat-label>\r\n\t\t\t\t  <input matInput #searchVal (keyup)=\"doFilter(filterBy.value,$event)\" placeholder=\"Search\">\r\n\t\t\t\t  <!-- <input matInput #searchVal (keyup)=\"doFilter(filterBy.value,$event)\"> -->\r\n\t\t\t\t  <mat-icon matSuffix>search</mat-icon>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t  </div>\r\n\t\t\t<div *ngIf=\"searchVal.value || filterBy.value\" class=\"resetDiv\">\r\n\t\t\t\t<button mat-stroked-button class=\"clearBtn\" (click)=\"clearFilter()\">RESET\r\n\t\t\t\t</button>\r\n\t\t\t  </div>\r\n\t\t\t  <div class=\"filterDiv\">\r\n\t\t\t   <button mat-flat-button color=\"primary\" class=\"addNewBtn\" (click)=\"addNew()\" >ADD NEW\r\n\t\t\t   </button>\r\n\t\t\t </div>\r\n\t\t\t  \r\n\t\t\t</div>\r\n\t\t  </div>\r\n\t\t  <div class=\"mat-elevation-z0\">\r\n\t\t\t<mat-table class=\"w-full\" [dataSource]=\"dataSource\" matSort (matSortChange)=\"announceSortChange($event)\">      \r\n\t\t  <ng-container matColumnDef=\"entityCode\">\r\n\t\t  <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by state code\"> Entity\r\n\t\t\tCode\r\n\t\t</mat-header-cell>\r\n\t\t<mat-cell *matCellDef=\"let element\"> {{element.entityCode}} </mat-cell>\r\n\t  </ng-container>\r\n  \r\n\t  <ng-container matColumnDef=\"billerCode\">\r\n\t\t<mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by state name\"> Biller Code\r\n\t\t</mat-header-cell>\r\n\t\t<mat-cell *matCellDef=\"let element\"> {{element.billerCode}} </mat-cell>\r\n\t  </ng-container>\r\n  \r\n\t  <ng-container matColumnDef=\"billerName\">\r\n\t\t<mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by state code 2\"> Biller Name\r\n\t\t   </mat-header-cell>\r\n\t\t<mat-cell *matCellDef=\"let element\"> {{element.billerName}} </mat-cell>\r\n\t  </ng-container>\r\n  \r\n\t  <ng-container matColumnDef=\"billerAccBrn\">\r\n\t\t<mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by state Numric Code\"> Biller Account Brn\r\n\t\t</mat-header-cell>\r\n\t\t<mat-cell *matCellDef=\"let element\"> {{element.billerAccBrn}} </mat-cell>\r\n\t  </ng-container>\r\n\t  <ng-container matColumnDef=\"authStatus\">\r\n\t\t<mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Auth Status\"> Auth Status\r\n\t\t</mat-header-cell>\r\n\t\t<mat-cell *matCellDef=\"let element\"> {{element.authStatus}} </mat-cell>\r\n\t  </ng-container>\r\n\t  <ng-container matColumnDef=\"recordStatus\">\r\n\t\t<mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Record Status\"> Record Status\r\n\t\t</mat-header-cell>\r\n\t\t<mat-cell *matCellDef=\"let element\"> {{element.recordStatus}} </mat-cell>\r\n\t  </ng-container>\r\n\t  <ng-container matColumnDef=\"action\">\r\n        <mat-header-cell *matHeaderCellDef>Action</mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\">\r\n          <div>\r\n           <mat-icon class=\"actionIcons\" matTooltip=\"Edit\" (click)=\"editItem(element,'yes')\" >edit</mat-icon>\r\n        </div>&nbsp;&nbsp;&nbsp;&nbsp;\r\n        <div>\r\n         <mat-icon class=\"actionIcons\" matTooltip=\"Delete\" [disabled]=\"element.oneTimeAuth =='Y'\"  (click)=\"deleteItem(element)\" >delete</mat-icon>\r\n        </div>\r\n        </mat-cell>\r\n      </ng-container>\r\n  \r\n\t  <mat-header-row *matHeaderRowDef=\"displayedColumns;\"></mat-header-row>\r\n\t  <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\r\n\t</mat-table>\r\n\t<mat-paginator  class=\"mt-16\" [pageSizeOptions]=\"[5, 10, 20]\" aria-label=\"Select page of users\"></mat-paginator>\r\n\t</div>\r\n\t   </mat-card-content>\r\n  </mat-card>","import { Component, Input, OnInit } from '@angular/core';\r\nimport { DataService } from 'app/shared/services/data.service';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-audit-log',\r\n  templateUrl: './audit-log.component.html',\r\n  styleUrls: ['./audit-log.component.scss']\r\n})\r\nexport class AuditLogComponent implements OnInit {\r\n\r\n  clickEventsubscription: Subscription;\r\n\r\n  constructor(private dataService: DataService) {\r\n    this.dataService.getClickEvent().subscribe(() => {\r\n      console.log(\"test\");\r\n      this.auditLogDataObject = this.dataService.getAuditLogData();\r\n      if (this.auditLogDataObject.oneTimeAuth == \"N\") {\r\n        this.auditLogDataObject.oneTimeAuth = \"No\"\r\n      }\r\n      else if (this.auditLogDataObject.oneTimeAuth == \"Y\") {\r\n        this.auditLogDataObject.oneTimeAuth = \"Yes\"\r\n      }\r\n      if (this.auditLogDataObject.authStatus == \"U\") {\r\n        this.auditLogDataObject.authStatus = \"Unauthorized\"\r\n      }\r\n      else if (this.auditLogDataObject.authStatus == \"A\") {\r\n        this.auditLogDataObject.authStatus = \"Authorized\"\r\n      }\r\n      if (this.auditLogDataObject.recordStatus == \"O\") {\r\n        this.auditLogDataObject.recordStatus = \"Open\"\r\n      }\r\n      else if (this.auditLogDataObject.recordStatus == \"C\") {\r\n        this.auditLogDataObject.recordStatus = \"Close\"\r\n      }\r\n    })\r\n  }\r\n  auditLogDataObject: any = {};\r\n\r\n  ngOnInit(): void {\r\n    this.auditLogDataObject = this.dataService.getAuditLogData();\r\n    console.log(this.auditLogDataObject);\r\n    if (this.auditLogDataObject.oneTimeAuth == \"N\") {\r\n      this.auditLogDataObject.oneTimeAuth = \"No\"\r\n    }\r\n    else if (this.auditLogDataObject.oneTimeAuth == \"Y\") {\r\n      this.auditLogDataObject.oneTimeAuth = \"Yes\"\r\n    }\r\n    if (this.auditLogDataObject.authStatus == \"U\") {\r\n      this.auditLogDataObject.authStatus = \"Unauthorized\"\r\n    }\r\n    else if (this.auditLogDataObject.authStatus == \"A\") {\r\n      this.auditLogDataObject.authStatus = \"Authorized\"\r\n    }\r\n    if (this.auditLogDataObject.recordStatus == \"O\") {\r\n      this.auditLogDataObject.recordStatus = \"Open\"\r\n    }\r\n    else if (this.auditLogDataObject.recordStatus == \"C\") {\r\n      this.auditLogDataObject.recordStatus = \"Close\"\r\n    }\r\n  }\r\n\r\n}\r\n","<div class=\"table pb-32\">\r\n    <div class=\"table-header\">\r\n        <div class=\"header__item\"><a id=\"name\" class=\"\">Onetime Auth</a></div>\r\n        <div class=\"header__item\"><a id=\"wins\" class=\"\">Authorization Status</a></div>\r\n        <div class=\"header__item\"><a id=\"draws\" class=\"\">Record Status</a></div>\r\n        <div class=\"header__item\"><a id=\"losses\" class=\"\">Maker ID</a></div>\r\n        <div class=\"header__item\"><a id=\"total\" class=\"\">Maker Time</a></div>\r\n        <div class=\"header__item\"><a id=\"total\" class=\"\">Authorized By</a></div>\r\n        <div class=\"header__item\"><a id=\"total\" class=\"\">Authorizer Time</a></div>\r\n        <div class=\"header__item\"><a id=\"total\" class=\"\">Modification No</a></div>\r\n    </div>\r\n    <div class=\"table-content\">\t\r\n        <div class=\"table-row\">\t\t\r\n            <div class=\"table-data\">{{auditLogDataObject?.oneTimeAuth}}</div>\r\n            <div class=\"table-data\">{{auditLogDataObject?.authStatus}}</div>\r\n            <div class=\"table-data\">{{auditLogDataObject?.recordStatus}}</div>\r\n            <div class=\"table-data\">{{auditLogDataObject?.createdBy}}</div>\r\n            <div class=\"table-data\">{{auditLogDataObject?.lastModifiedDate}}</div>\r\n            <div class=\"table-data\">{{auditLogDataObject?.authBy}}</div>\r\n            <div class=\"table-data\">{{auditLogDataObject?.authDate}}</div>\r\n            <div class=\"table-data\">{{auditLogDataObject?.noOfModification}}</div>\r\n        </div>\r\n    </div>\t\r\n</div>","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { FormBuilder, Validators, FormGroup, FormControl } from '@angular/forms';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { Location } from '@angular/common';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatSort, Sort } from '@angular/material/sort';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { LiveAnnouncer } from '@angular/cdk/a11y';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { AppLoaderService } from 'app/shared/services/app-loader/app-loader.service';\r\nimport { AppConfirmService } from 'app/shared/services/app-confirm/app-confirm.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { DataService } from 'app/shared/services/data.service';\r\nimport { AuditLogComponent } from '../../audit-log/audit-log.component';\r\nimport {Observable} from 'rxjs';\r\nimport {map, startWith} from 'rxjs/operators';\r\nimport { auditLogInterface, loggedInUserInterface } from './country-state-popup';\r\nimport Swal from 'sweetalert2';\r\n\r\nexport interface PeriodicElement {\r\n  name: string;\r\n  CountryCode: string;\r\n  countryIsoCode2: string;\r\n  RegionCode: string;\r\n  IBAN : String;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-country-state-popup',\r\n  templateUrl: './country-state-popup.component.html',\r\n  styleUrls: ['./country-state-popup.component.scss']\r\n})\r\nexport class CountryStatePopupComponent implements OnInit {\r\n\r\n  public countryMaintenance: FormGroup;\r\n  banks: string[] = [];\r\n  currencies: string[] = [];\r\n  countries: string[] = [];\r\n  states: string[] = [];\r\n  cities: string[] = [];\r\n  countryCodeList: any[] = [];\r\n  filteredOptions: Observable<string[]>;\r\n  id: any;\r\n  loggedInUser : any;\r\n  auditLogData : auditLogInterface;\r\n  isEdit: boolean = false;\r\n  isCountrycode: boolean = false;\r\n  isCountrycode2: boolean = false;\r\n  isReadOnly: boolean = true;\r\n  show = false;\r\n  editNow : boolean = false;\r\n    showLoader : boolean = false;\r\n    readorWrite: boolean=true;\r\n  selectedCountryCode : string;\r\n  @ViewChild('searchVal') searchVal: ElementRef;\r\n  selectedFilterIndex : number = 0;\r\n\r\n  dataSource = new MatTableDataSource();\r\n  displayedColumns: string[] = ['stateCode', 'stateName', 'stateCode2', 'stateNumCode','recordStatus', 'action'];\r\n\r\n  filterByOption: { key: string, value: string }[] = [\r\n    { key: 'stateCode', value: 'State Code' },\r\n    { key: 'stateName', value: 'State Name' },\r\n    { key: 'stateNumCode', value: 'State Numric Code' },\r\n    { key: 'recordStatus', value: 'Record Status' },\r\n  ];\r\n\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild('auditLog') auditLog : AuditLogComponent\r\n  countryIsEdit: string;\r\n  userdata: any;\r\n  downloadService: any;\r\n\r\n  constructor(\r\n\r\n    private fb: FormBuilder,\r\n    private apiService: ApiService,\r\n    private _location: Location,\r\n    private router:Router,\r\n    private route : ActivatedRoute,\r\n    private _liveAnnouncer: LiveAnnouncer,\r\n    private snack: MatSnackBar,\r\n    private dataService : DataService,\r\n    private ls : LocalStoreService,\r\n    private loader: AppLoaderService,\r\n      private confirmService: AppConfirmService,\r\n      \r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    //  this.getAllState();\r\n     this.allCountryCode();\r\n    this.route.queryParamMap.subscribe((params: any) => {\r\n      this.countryIsEdit = params.get('isEdit');\r\n      if(params.get('isEdit') == 'Yes'){\r\n        this.isReadOnly = false;\r\n        this.editNow = true;\r\n      }\r\n      else if(params.get('isEdit') == 'No'){\r\n        this.isReadOnly = true;\r\n        this.editNow = false;\r\n      }\r\n      else if(params.get('isEdit') == 'false'){\r\n        this.isReadOnly = false;\r\n        this.editNow = false;\r\n      }\r\n      if(params.get('id')){\r\n        this.isEdit = true;\r\n        this.id = params.get('id');\r\n        this.apiService.getCountryById(params.get('id')).subscribe((resp:any) =>{\r\n           this.showLoader = true;\r\n           this.buildItemForm(resp);\r\n           this.showLoader = false;\r\n           this.selectedCountryCode = resp.countryCode;\r\n           this.auditLogData = resp;\r\n           this.getAllState();\r\n           this.dataService.setAuditLogData(this.auditLogData);\r\n        });\r\n      }\r\n      else{\r\n        this.readorWrite=false;\r\n        this.showLoader = true;\r\n        this.buildItemForm({});\r\n        this.showLoader = false;\r\n\r\n      }\r\n    }\r\n    );\r\n    this.loggedInUser = this.ls.getItem('ICUST_USER');\r\n  }\r\n  editItem(){\r\n    this.isReadOnly = false;\r\n    this.editNow = true;\r\n  }\r\n\r\n  Onlynumber(event): boolean {\r\n    const charCode = (event.which) ? event.which : event.keyCode;\r\n    if (charCode > 31 && (charCode < 48 || charCode > 57)) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  keyPressAlphanumeric(event) {\r\n    var inp = String.fromCharCode(event.keyCode);\r\n    if (/[0-9a-zA-Z]/.test(inp)) {\r\n      return true;\r\n    } else {\r\n      event.preventDefault();\r\n      return false;\r\n    }\r\n  }\r\n\r\n  _keyPress(event: any) {\r\n    const pattern = /[+,1-9]/;\r\n    let inputChar = String.fromCharCode(event.charCode);\r\n    if (!pattern.test(inputChar)) {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n  onFileChange(event) {\r\n    console.log('event', event.path[0].files[0]);\r\n    const file: File = event.path[0].files[0];\r\n    const uploadData = new FormData();\r\n    uploadData.append('screenType', 'countryMaint');\r\n    uploadData.append('file', file);\r\n    this.apiService.uploadExelFile(uploadData).subscribe((response) => {\r\n      console.log(response);\r\n      this.getAllCountries();\r\n      this.snack.open(`File Uploaded Successfully`, \"OK\", {\r\n        duration: 4000,\r\n        verticalPosition: \"top\",\r\n        horizontalPosition: \"right\",\r\n      });\r\n    });\r\n  }\r\n\r\n  buildItemForm(item) {\r\n    this.countryMaintenance = this.fb.group({\r\n      countryCode: [item.countryCode || '', Validators.required], //dropdown\r\n      countryName: [item.countryName || '', Validators.required],\r\n      countryIsoCode2: [item.countryIsoCode2 || '', Validators.required],  //dropdown\r\n      numericCode: [item.numericCode || '', Validators.required],\r\n      // ibanCheckReqd: [item.ibanCheckReqd || false, Validators.required],\r\n      // blacklisted: [item.blacklisted || false, Validators.required],\r\n      ibanCheckReqd: [item.ibanCheckReqd === \"Y\" ? true : false || \"\", false],\r\n      blacklisted: [item. blacklisted === \"Y\" ? true : false || \"\", false],\r\n      region: [item.region || '', Validators.required],\r\n      isdCode: [item.isdCode || '', Validators.required]\r\n    });\r\n  }\r\n\r\n\r\n  submit(data : any) {\r\n    let details: any = {};\r\n    details = data;\r\n    data.ibanCheckReqd? details.ibanCheckReqd = 'Y' : details.ibanCheckReqd = 'N';\r\n    data.blacklisted? details.blacklisted = 'Y' : details.blacklisted = 'N';\r\n    details.id = this.id;\r\n    data.loggedInUser=this.loggedInUser.userName;\r\n    this.apiService.upsertCountryDetails(details).subscribe((resp) =>{\r\n      this.loader.close();\r\n      this.router.navigate(['/maintenance/main/countryState']).then(_=>{\r\n        this.snack.open('Data Saved Successfully!', 'OK', \r\n        { duration: 4000 , \r\n          verticalPosition: \"top\",\r\n          horizontalPosition: \"right\",});\r\n      });\r\n    },(err:any) =>{\r\n      this.loader.close();\r\n      this.snack.open(`Error!`, 'OK', { duration: 4000 });\r\n    })\r\n  }\r\n  isCountryPresent(data){\r\n    this.apiService.isCountryCodePresent(data).subscribe((res) =>{\r\n      if(res == true){\r\n        this.isCountrycode = true;\r\n      }else{\r\n        this.isCountrycode = false;\r\n      }\r\n    });\r\n  }\r\n  isCountryCode2Present(data){\r\n    this.apiService.isCountryCode2Present(data).subscribe((respo) =>{\r\n      if(respo == true){\r\n        this.isCountrycode2 = true;\r\n      }else{\r\n        this.isCountrycode2 = false;\r\n      }\r\n    });\r\n  }\r\n  \r\n\r\n  goBack() {\r\n     this.router.navigate([`/maintenance/main/countryState`]);\r\n     \r\n  }\r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n\r\n  getAllState() {\r\n    this.apiService.getStateByCountry(this.id).subscribe((data: any) => {\r\n      for(let i=0;i<data.length;i++){\r\n        if(data[i].authStatus == 'U'){\r\n          data[i].authStatus = 'Unauthorized'\r\n        }\r\n        if(data[i].authStatus == 'A') {\r\n          data[i].authStatus = 'Authorized'\r\n        } \r\n        if(data[i].recordStatus == 'O'){\r\n          data[i].recordStatus = 'Open'\r\n        } \r\n        if(data[i].recordStatus == 'C'){\r\n          data[i].recordStatus = 'Closed'\r\n        }\r\n      }\r\n      this.dataSource = new MatTableDataSource(data);\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    });\r\n  }\r\n\r\n  \r\n\r\n  openPopUp(data: any = {}) {\r\n\r\n    this.router.navigate([\"/maintenance/main/statepopup\"],{ queryParams: { id: data.id, countryId : this.id, countryIsEdit : this.countryIsEdit,  SelectedCountryCode :this.selectedCountryCode } });\r\n  }\r\n\r\n  doFilter(filterBy, e){\r\n    this.filterTable(filterBy);\r\n    this.applyFilter(e);\r\n  }\r\n\r\n  filterTable(filterBy) {\r\n    this.dataSource.filterPredicate = (data: any, filter: string): boolean => {\r\n      return (\r\n        data[filterBy].toLocaleLowerCase().includes(filter)\r\n      )\r\n    }\r\n  }\r\n\r\n  clearFilter(){\r\n    this.dataSource.filter = '';\r\n    this.searchVal.nativeElement.value = '';\r\n    this.selectedFilterIndex = 0;\r\n   }\r\n   getAllCountries() {\r\n    this.apiService.getAllCountries().subscribe((data: any) => {\r\n      this.dataSource = new MatTableDataSource(data);\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    });\r\n  }\r\n\r\n  onSelectOfCountryCode(obj){\r\n    this.countryMaintenance.get('countryCode').setValue(obj.iso2);\r\n    if(obj.iso2){\r\n      this.isCountryPresent(this.countryMaintenance.get('countryCode').value);\r\n    }\r\n    this.countryMaintenance.get('countryName').setValue(obj.name);\r\n    this.countryMaintenance.get('countryIsoCode2').setValue(obj.iso3);\r\n    if(obj.iso3){\r\n      this.isCountryCode2Present(this.countryMaintenance.get('countryIsoCode2').value);\r\n    }\r\n    this.countryMaintenance.get('numericCode').setValue(obj.numericCode);\r\n    this.countryMaintenance.get('ibanCheckReqd').setValue(true);\r\n    this.countryMaintenance.get('blacklisted').setValue(true);\r\n    this.countryMaintenance.get('region').setValue(obj.region);\r\n    this.countryMaintenance.get('isdCode').setValue(obj.phonecode);\r\n\r\n  }\r\n  deleteRecord(operation){\r\n    Swal.fire(\r\n      {\r\n        //text: 'Unable to process' + 'Error ' + this.responseforfileupload.errorMessage + 'Do you want to Proceed??',\r\n        text: 'You are trying to '+ operation +' record.' + ' Do you want to proceed?',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        // confirmButtonText: 'PROCEED.'\r\n        cancelButtonText: 'NO',\r\n        confirmButtonText: 'YES', 'icon': 'info'\r\n      }\r\n    ).then((result => {\r\n      if(result.isConfirmed==true){\r\n        this.apiService.deleteCountry(this.auditLogData.id)\r\n        .subscribe(data => {\r\n          this.router.navigate([`/maintenance/main/countryState`]);\r\n        },\r\n        err=>{\r\n          if (err.status == 200) {\r\n            this.snack.open('Record Deleted Successfully', 'OK', {\r\n              duration: 4000,\r\n              verticalPosition: 'top',\r\n              horizontalPosition: 'right'\r\n            });\r\n          }\r\n          this.router.navigate([`/maintenance/main/countryState`]);\r\n        \r\n      })\r\n      }}))\r\n   \r\n         \r\n       \r\n  }\r\n  editRecord(){\r\n    this.readorWrite=false;\r\n  }\r\n\r\n  updateRecord(operation) {\r\n    Swal.fire(\r\n      {\r\n        //text: 'Unable to process' + 'Error ' + this.responseforfileupload.errorMessage + 'Do you want to Proceed??',\r\n        text: 'You are trying to '+ operation +' record.' + ' Do you want to proceed?',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        // confirmButtonText: 'PROCEED.'\r\n        cancelButtonText: 'NO',\r\n        confirmButtonText: 'YES', 'icon': 'info'\r\n      }\r\n    ).then((result => {\r\n      if(result.isConfirmed==true){\r\n        let payload: any = {};\r\n    payload.id = this.id;\r\n    payload.operation = operation;\r\n    payload.loggedInUser = this.loggedInUser.userName;\r\n    this.apiService.getAuditLogsForCountry(payload).subscribe((data) => {\r\n      this.auditLogData = data;\r\n      this.dataService.setAuditLogData(this.auditLogData);\r\n      this.dataService.sendClickEvent();\r\n      let message = '';\r\n      switch (operation) {\r\n        case 'open':\r\n          message = 'opened'\r\n          break;\r\n        case 'close':\r\n          message = 'closed'\r\n          break;\r\n        case 'auth':\r\n          message = 'authorized'\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n      this.snack.open(`Record ${message} successful!'`, \"OK\", {\r\n        duration: 2000,\r\n        verticalPosition: \"top\",\r\n        horizontalPosition: \"right\",\r\n      });\r\n    });\r\n      }}))\r\n    \r\n  }\r\n\r\n  allCountryCode(){\r\n    this.apiService.allCountryCode().subscribe((data) =>{\r\n      this.countryCodeList = data;\r\n    })\r\n  }\r\n\r\n  filter(value: string): string[] {\r\n\r\n    const filterValue = value.toLowerCase();\r\n    return this.countryCodeList.filter(option => option.iso2.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n  // deleteCountry() {\r\n  //   this.confirmService.confirm({message: `Are you sure? You want to delete?`})\r\n  //     .subscribe(res => {\r\n  //       if (res) {\r\n  //         this.loader.open();\r\n  //         this.apiService.deleteCountry(this.id)\r\n  //           .subscribe(data => {\r\n              \r\n  //           },    err=>{\r\n  //             if (err.status == 200) {\r\n  //               this.loader.close();\r\n  //               this.snack.open('Record Deleted Successfully', 'OK', {\r\n  //                 duration: 4000,\r\n  //                 verticalPosition: 'top',\r\n  //                 horizontalPosition: 'right'\r\n  //               });\r\n  //             }\r\n    \r\n            \r\n  //           this.getAllCountries();\r\n  //         this.router.navigate([`/maintenance/main/countryState`]);\r\n\r\n            \r\n  //         })\r\n  //       }\r\n  //     })\r\n  // }\r\n\r\n  countryStateMaintenance(){\r\n    this.downloadService.downloadFiles(\"countryStateMaintenance\", this.userdata);\r\n  }\r\n   \r\n  deleteItem(row) {\r\n    this.confirmService.confirm({message: `Delete ${row.stateName}?`})\r\n      .subscribe(res => {\r\n        if (res) {\r\n          this.loader.open();\r\n          this.apiService.deleteState(row.id)\r\n            .subscribe(data => {\r\n              \r\n            },    err=>{\r\n              if (err.status == 200) {\r\n                this.loader.close();\r\n                this.snack.open('Record Deleted Successfully', 'OK', {\r\n                  duration: 4000,\r\n                  verticalPosition: 'top',\r\n                  horizontalPosition: 'right'\r\n                });\r\n              }\r\n            this.getAllState();\r\n            \r\n          })\r\n        }\r\n      })\r\n  }\r\n\r\n   \r\n\r\n   applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n\r\n  announceSortChange(sortState: Sort) {\r\n    if (sortState.direction) {\r\n      this._liveAnnouncer.announce(`Sorted ${sortState.direction}ending`);\r\n    } else {\r\n      this._liveAnnouncer.announce('Sorting cleared');\r\n    }\r\n  }\r\n\r\n  addNew(){\r\n    this.router.navigate([\"/maintenance/main/statepopup\"],{ queryParams: {countryId : this.id, countryIsEdit : this.countryIsEdit, selectedCountryCode :this.selectedCountryCode } });\r\n\r\n  }\r\n  dataByIso(index,item){\r\n    return item.iso2\r\n  }\r\n  dataByKey(index,item){\r\n    return item.key\r\n  }\r\n}\r\n","<h1 class=\"main-head\"><small class=\"small-head\">Home > Maintenance Summary > Country and State Maintenance >\r\n   <span *ngIf=\"isEdit && editNow\">Edit</span><span *ngIf=\"isEdit && !editNow\">View</span><span *ngIf=\"!isEdit && !editNow\">Add</span> Country</small></h1>\r\n  <div fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"mt-16\">\r\n    <button mat-icon-button (click)=\"goBack()\">\r\n        <mat-icon>arrow_back</mat-icon>\r\n      </button> \r\n      <span *ngIf=\"isEdit && editNow\" class=\"text-large\">\r\n        Edit Country\r\n      </span>\r\n      <span *ngIf=\"isEdit && !editNow\" class=\"text-large\">\r\n        View Country\r\n      </span>\r\n      <span *ngIf=\"!isEdit && !editNow\" class=\"text-large\">\r\n        New Country\r\n      </span>\r\n      <span fxFlex></span>\r\n      <!-- <button mat-button (click)=\"editItem()\">\r\n        <mat-icon>edit</mat-icon>\r\n        Edit\r\n      </button>\r\n      <button\r\n      mat-button\r\n        type=\"button\"\r\n        (click)=\"deleteCountry()\"\r\n      >\r\n      <mat-icon>delete</mat-icon>\r\n        Delete\r\n      </button> -->\r\n   </div>\r\n   <!-- {{showLoader}} -->\r\n   <div *ngIf=\"showLoader\">\r\n    <mat-spinner [diameter]=\"25\"></mat-spinner>\r\n  </div>\r\n   <mat-card >\r\n    <mat-card-content>\r\n      <form [formGroup]=\"countryMaintenance\"  class=\"mt-32\">\r\n        <table class=\"pb-32\">\r\n          <tr>\r\n            <td>\r\n              <h1 *ngIf=\"isEdit && !editNow\">{{countryMaintenance.controls['countryName'].value}}</h1>\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td>\r\n              <div *ngIf=\"countryMaintenance && countryMaintenance.controls['countryName'].value && isEdit && !editNow\" class=\"highlight\">\r\n              </div>\r\n            </td>\r\n          </tr>\r\n        </table>\r\n        <div fxLayout=\"row wrap\" fxLayout.lt-sm=\"column\">\r\n          <div fxFlex=\"33.33\" class=\"pr-16\">\r\n            \r\n            <mat-label>Country Code *</mat-label>\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n              <input type=\"text\"\r\n                     matInput\r\n                     [readonly]=\"readorWrite\" \r\n                     maxlength=\"3\"\r\n                     minlength=\"1\"\r\n                     name=\"countryCode\"\r\n                     (keyup)=\"filter($event.target.value);isCountryPresent($event.target.value)\"\r\n                     [formControl]=\"countryMaintenance.controls['countryCode']\"\r\n                     required\r\n                     [matAutocomplete]=\"auto\">\r\n                <mat-autocomplete #auto=\"matAutocomplete\">\r\n                    <mat-option (click)=\"onSelectOfCountryCode(code)\" *ngFor=\"let code of countryCodeList;trackBy:dataByIso\" [value]=\"code.iso2\">\r\n                      {{code.iso2}}\r\n                    </mat-option>\r\n              </mat-autocomplete>\r\n            </mat-form-field>\r\n\r\n            <mat-error *ngIf=\"isCountrycode\">this is an existing country code</mat-error>\r\n            <mat-error\r\n            *ngIf=\"countryMaintenance.get('countryCode').touched && !countryMaintenance.get('countryCode').valid\">\r\n            Country Code is Required!\r\n        </mat-error>\r\n          </div>\r\n\r\n          <div fxFlex=\"33.33\" class=\"pr-16\">\r\n            <mat-label>Country Code 2 *</mat-label>\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n              \r\n              <input\r\n              (keyup)=\"isCountryCode2Present($event.target.value)\"\r\n                matInput\r\n                [readonly]=\"readorWrite\" \r\n                maxlength=\"3\"\r\n                minlength=\"1\"\r\n                name=\"countryIsoCode2\"\r\n                (keypress)=keyPressAlphanumeric($event)\r\n                [formControl]=\"countryMaintenance.controls['countryIsoCode2']\"\r\n                \r\n              />\r\n            </mat-form-field>\r\n            <mat-error *ngIf=\"isCountrycode2\">this is an existing country code 2</mat-error>\r\n            <mat-error\r\n            *ngIf=\"countryMaintenance.get('countryIsoCode2').touched && !countryMaintenance.get('countryIsoCode2').valid\">\r\n            Country code 2 is Required!\r\n        </mat-error>\r\n          </div>\r\n      \r\n          <div fxFlex=\"33.33\" class=\"pr-16\">\r\n            <mat-label>Country Name  *</mat-label>\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n              \r\n              <input\r\n                matInput\r\n                [readonly]=\"readorWrite\" \r\n                name=\"countryName\"\r\n                (keypress)=keyPressAlphanumeric($event)\r\n                [formControl]=\"countryMaintenance.controls['countryName']\"\r\n               \r\n              />\r\n            </mat-form-field>\r\n            <mat-error\r\n            *ngIf=\"countryMaintenance.get('countryName').touched && !countryMaintenance.get('countryName').valid\">\r\n            Country Name is Required!\r\n        </mat-error>\r\n          </div>\r\n      \r\n          <div fxFlex=\"33.33\" class=\"pr-16\">\r\n            <mat-label>ISO Numeric Code *</mat-label>\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n              \r\n              <input\r\n                matInput\r\n                [readonly]=\"readorWrite\" \r\n                (keypress)=\"Onlynumber($event)\"\r\n                maxlength=\"3\"\r\n                minlength=\"1\"\r\n                name=\"numericCode\"\r\n                [formControl]=\"countryMaintenance.controls['numericCode']\"\r\n                \r\n              />\r\n            </mat-form-field>\r\n            <mat-error\r\n            *ngIf=\"countryMaintenance.get('numericCode').touched && !countryMaintenance.get('numericCode').valid\">\r\n            ISO numeric Code is Required!\r\n        </mat-error>\r\n          </div>\r\n          <div fxFlex=\"33.33\" class=\"pr-16\">\r\n            <mat-label>Region *</mat-label>\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n              \r\n              <input\r\n                matInput\r\n                [readonly]=\"readorWrite\" \r\n                maxlength=\"20\"\r\n                minlength=\"1\"\r\n                name=\"region\"\r\n                (keypress)=keyPressAlphanumeric($event)\r\n                [formControl]=\"countryMaintenance.controls['region']\"\r\n                \r\n              />\r\n            </mat-form-field>\r\n            <mat-error\r\n            *ngIf=\"countryMaintenance.get('region').touched && !countryMaintenance.get('region').valid\">\r\n            Region Code is Required!\r\n          </mat-error>\r\n          </div>\r\n\r\n          <div fxFlex=\"33.33\" class=\"pr-16\">\r\n            <mat-label>Country Telephone ISD Code *</mat-label>\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n              \r\n              <input\r\n                matInput\r\n                maxlength=\"10\"\r\n                minlength=\"1\"\r\n                (keyup)=\"filter($event.target.value)\"\r\n                name=\"isdCode\"\r\n                [formControl]=\"countryMaintenance.controls['isdCode']\"\r\n                [readonly]=\"readorWrite\" \r\n              />\r\n            </mat-form-field>\r\n            <mat-error\r\n            *ngIf=\"countryMaintenance.get('isdCode').touched && !countryMaintenance.get('isdCode').valid\">\r\n            Telephone ISD code is Required!\r\n        </mat-error>\r\n          </div>\r\n      \r\n          <div fxFlex=\"33.33\" class=\"pr-16\">\r\n            <mat-label>IBAN Check Required <span *ngIf=\"!isReadOnly\" class=\"pl-4 \">?</span></mat-label><br>\r\n        <mat-slide-toggle [formControl]=\"countryMaintenance.controls['ibanCheckReqd']\" [disabled]=\"readorWrite\"\r\n        ></mat-slide-toggle>\r\n          </div>\r\n\r\n          <div fxFlex=\"33.33\" class=\"pr-16\">\r\n            <mat-label>blacklisted <span *ngIf=\"!isReadOnly\" class=\"pl-4 \">?</span></mat-label><br>\r\n        <mat-slide-toggle [formControl]=\"countryMaintenance.controls['blacklisted']\" [disabled]=\"readorWrite\"></mat-slide-toggle>\r\n          </div>\r\n        </div>\r\n\r\n        <div fxLayout=\"row wrap\" fxLayout.lt-sm=\"column\">\r\n          <div fxFlex=\"100\" class=\"mt-16\" fxLayoutAlign=\"end center\">\r\n            <button *ngIf=\"!isEdit\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"submit(countryMaintenance.value)\" [disabled]=\"!(countryMaintenance.valid && countryMaintenance.dirty && !isCountrycode && !isCountrycode2 )\">\r\n              SAVE\r\n            </button>\r\n            &nbsp;\r\n            <div [hidden]=\"readorWrite\" >\r\n              <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\"  [disabled]= \"!(countryMaintenance.invalid || countryMaintenance.dirty)\"(click)=\"submit(countryMaintenance.value)\">\r\n                 Save\r\n                </button>&nbsp;&nbsp;\r\n            </div>\r\n            <div [hidden]=\"!readorWrite || auditLogData?.recordStatus == 'Close'\">\r\n              <button *ngIf=\"isEdit\" type=\"button\"  mat-raised-button color=\"primary\" (click)=\"editRecord()\">\r\n                Edit\r\n              </button>&nbsp;&nbsp;\r\n            </div>\r\n            <div *ngIf=\"auditLogData?.authStatus == 'Unauthorized' && readorWrite\" [hidden]=\"!readorWrite\">\r\n              <button *ngIf=\"isEdit\" type=\"button\"  mat-raised-button color=\"primary\" (click)=\"updateRecord('auth')\">\r\n                Authorize\r\n              </button>&nbsp;&nbsp;\r\n            </div> \r\n            <div *ngIf=\"auditLogData?.recordStatus == 'Close' && auditLogData?.oneTimeAuth != 'No'\" [hidden]=\"!readorWrite\">\r\n              <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"updateRecord('open')\">\r\n                Reopen\r\n              </button>&nbsp;&nbsp;\r\n            </div>\r\n            <div *ngIf=\"auditLogData?.recordStatus == 'Open' && auditLogData?.oneTimeAuth != 'No'\" [hidden]=\"!readorWrite\">\r\n              <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"updateRecord('close')\">\r\n                Close\r\n              </button>&nbsp;&nbsp;\r\n            </div>\r\n            <div *ngIf=\"auditLogData?.oneTimeAuth == 'No'\" [hidden]=\"!readorWrite\">\r\n              <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"deleteRecord('delete')\">\r\n                Delete\r\n              </button> &nbsp;&nbsp;\r\n            </div>\r\n           \r\n            <button\r\n              mat-raised-button\r\n              color=\"warn\"\r\n              type=\"button\"\r\n              (click)=\"goBack()\"\r\n            >\r\n              Exit\r\n            </button>\r\n  \r\n          </div>\r\n        </div>\r\n        \r\n      </form>\r\n    </mat-card-content>\r\n  </mat-card>\r\n\r\n  <div *ngIf=\"auditLogData\" class=\"mt-32\">\r\n    <app-audit-log #auditLog></app-audit-log>\r\n  </div>\r\n\r\n<div *ngIf=\"!(!isEdit && !editNow)\">\r\n  <div  fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"mt-24\">\r\n    \r\n  </div>\r\n  <mat-card class=\"mt-32\">\r\n    <div>\r\n    <table>\r\n      <tr>\r\n        <td>\r\n          <h2>\r\n            States\r\n          </h2>\r\n        </td>\r\n      </tr>\r\n      <tr>\r\n        <td>\r\n          <div class=\"highlight\">\r\n          </div>\r\n        </td>\r\n      </tr>\r\n    </table>\r\n    <span fxFlex></span>\r\n    <button mat-icon-button [matMenuTriggerFor]=\"menu\">\r\n      <mat-icon>more_vert</mat-icon>\r\n    </button>\r\n    <mat-menu #menu=\"matMenu\">\r\n      <div class=\"upload_botton\">\r\n      <button type=\"button\" mat-menu-item>Upload</button>\r\n      <input\r\n        type=\"file\"\r\n        accept=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\"\r\n        class=\"btn btn-success\"\r\n        (change)=\"onFileChange($event)\"\r\n      />\r\n    </div>\r\n      <button mat-menu-item>\r\n        <span>Download</span>\r\n      </button>\r\n    </mat-menu>\r\n  </div><br>\r\n    \r\n    <div class=\"w-full\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n      <div class=\"w-full\" fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap='20px'>\r\n        <div>\r\n          <mat-form-field appearance=\"fill\">\r\n            <mat-label>By</mat-label>\r\n            <mat-select name=\"filterBy\" #filterBy [(ngModel)]=\"selectedFilterIndex\">\r\n              <mat-option value=\"0\">Select</mat-option>\r\n              <mat-option *ngFor=\"let filter of filterByOption;trackBy:dataByKey\" value=\"{{filter.key}}\">\r\n                {{filter.value}}\r\n              </mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n        </div>\r\n        <div>\r\n          <mat-form-field appearance=\"fill\">\r\n            <mat-label>Search</mat-label>\r\n            <input matInput #searchVal (keyup)=\"doFilter(filterBy.value,$event)\" placeholder=\"Search\">\r\n            <mat-icon matSuffix>search</mat-icon>\r\n          </mat-form-field>\r\n        </div>\r\n        <div>\r\n          <button mat-flat-button color=\"warn\" (click)=\"clearFilter()\">Clear Filter</button>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <button mat-flat-button color=\"primary\" (click)=\"addNew()\" class=\"mr-38\">ADD NEW</button>\r\n      </div>\r\n    </div>\r\n    <div class=\"mat-elevation-z0\">\r\n      <mat-table class=\"w-full\" [dataSource] = \"dataSource\" matSort (matSortChange)=\"announceSortChange($event)\">\r\n  \r\n        <ng-container matColumnDef=\"stateCode\">\r\n          <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by state code\"> State\r\n            Code\r\n          </mat-header-cell>\r\n          <mat-cell *matCellDef=\"let element\"> {{element.stateCode}} </mat-cell>\r\n        </ng-container>\r\n  \r\n        <ng-container matColumnDef=\"stateName\">\r\n          <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by state name\"> State Name\r\n          </mat-header-cell>\r\n          <mat-cell *matCellDef=\"let element\"> {{element.stateName}} </mat-cell>\r\n        </ng-container>\r\n  \r\n        <ng-container matColumnDef=\"stateCode2\">\r\n          <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by state code 2\"> State Code 2\r\n             </mat-header-cell>\r\n          <mat-cell *matCellDef=\"let element\"> {{element.stateCode2}} </mat-cell>\r\n        </ng-container>\r\n  \r\n        <ng-container matColumnDef=\"stateNumCode\">\r\n          <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by state Numric Code\"> State Numric Code\r\n          </mat-header-cell>\r\n          <mat-cell *matCellDef=\"let element\"> {{element.stateNumCode}} </mat-cell>\r\n        </ng-container>\r\n  \r\n        <ng-container matColumnDef=\"recordStatus\">\r\n          <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by state Numric Code\"> Record Status\r\n          </mat-header-cell>\r\n          <mat-cell *matCellDef=\"let element\"> {{element.recordStatus}} </mat-cell>\r\n        </ng-container>\r\n  \r\n        <ng-container matColumnDef=\"action\">\r\n          <mat-header-cell *matHeaderCellDef>Action</mat-header-cell>\r\n          <mat-cell *matCellDef=\"let element\">\r\n            <button mat-icon-button mat-sm-button color=\"primary\" class=\"mr-16\" (click)=\"openPopUp(element)\">\r\n              <mat-icon>edit</mat-icon>\r\n            </button>\r\n            <button mat-icon-button mat-sm-button color=\"warn\" (click)=\"deleteItem(element)\">\r\n              <mat-icon>delete</mat-icon>\r\n            </button>\r\n          </mat-cell>\r\n        </ng-container>\r\n  \r\n        <mat-header-row *matHeaderRowDef=\"displayedColumns;\"></mat-header-row>\r\n        <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\r\n      </mat-table>\r\n      <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\" aria-label=\"Select page of users\"></mat-paginator>\r\n    </div>\r\n  </mat-card>\r\n</div>\r\n\r\n\r\n  \r\n   \r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { Router } from '@angular/router';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { AppConfirmService } from 'app/shared/services/app-confirm/app-confirm.service';\r\nimport { AppLoaderService } from 'app/shared/services/app-loader/app-loader.service';\r\n\r\n@Component({\r\n  selector: 'app-security-policy',\r\n  templateUrl: './security-policy.component.html',\r\n  styleUrls: ['./security-policy.component.scss']\r\n})\r\nexport class SecurityPolicyComponent implements OnInit {\r\n\r\n  dataSource = new MatTableDataSource();\r\n  recordExist : number = 0;\r\n  displayedColumns: string[] = [ 'version', 'createdBy', 'authStatus', 'recordStatus','authDate' ,'action'];\r\n\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n\r\n  constructor(private router: Router,private apiService: ApiService,private confirmService: AppConfirmService,\r\n    private loader: AppLoaderService,private snack: MatSnackBar,) { }\r\n\r\n  ngOnInit(): void {\r\n    this.fetchSecurityPolicy();\r\n  }\r\n  \r\n\r\n  goBack(){\r\n    this.router.navigate([\"/maintenance/main\"]);\r\n  }\r\n\r\n  addNew(){\r\n    this.router.navigate([\"/maintenance/main/addEditsecurityPolicy\"]);\r\n  }\r\n\r\n  editPolicy(id){\r\n    this.router.navigate([\"/maintenance/main/addEditsecurityPolicy\"],{ queryParams: { id: id } });\r\n  }\r\n    \r\n  deleteItem(Record) {\r\n    this.confirmService.confirm({message: `Delete ${Record.version}?`})\r\n      .subscribe(res => {\r\n        if (res) {\r\n          console.log(res)\r\n          this.apiService.deleteSecurityPolicy(Record.version)\r\n            .subscribe(data => {\r\n            },    err=>{\r\n              if (err.status == 200) {\r\n                this.snack.open('Record Deleted Successfully', 'OK', {\r\n                  duration: 4000,\r\n                  verticalPosition: 'top',\r\n                  horizontalPosition: 'right'\r\n                });\r\n              } \r\n              this.fetchSecurityPolicy();\r\n          })\r\n        }\r\n      })\r\n  }\r\n  \r\n\r\n  fetchSecurityPolicy(){\r\n    this.apiService.getSecurityPolicyDetails().subscribe((resp) =>{\r\n      console.log(\"SecurityPolicy---\",resp);\r\n      this.dataSource = resp;\r\n      this.recordExist = resp.length;\r\n     })\r\n\r\n\r\n}\r\n}\r\n","<h1 class=\"main-head\"><small class=\"small-head\">Home > Retail Operations > Security Policy  </small></h1>\r\n  <div fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"mt-24\">\r\n    <button mat-icon-button (click)=\"goBack()\">\r\n        <mat-icon>arrow_back</mat-icon>\r\n      </button> \r\n      <span class=\"text-large\">\r\n        Security Policy\r\n      </span>\r\n  </div>\r\n\r\n  <div fxLayout=\"row\" *ngIf=\"recordExist == 0\" fxLayoutAlign=\"end end\" class=\"mt-32\" class=\"filterDiv\">\r\n    <button mat-flat-button color=\"primary\" class=\"addNewBtn\" (click)=\"addNew()\" >ADD NEW\r\n    </button>\r\n  </div>\r\n  \r\n\r\n\r\n  <mat-card class=\"mt-32\">\r\n    <div class=\"mat-elevation-z0\">\r\n        <mat-table class=\"w-full\" [dataSource]=\"dataSource\" matSort>\r\n          <ng-container matColumnDef=\"version\">\r\n            <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Version\"> Version\r\n            </mat-header-cell>\r\n            <mat-cell *matCellDef=\"let element\"> {{element.version}} </mat-cell>\r\n          </ng-container>\r\n     \r\n          <ng-container matColumnDef=\"createdBy\">\r\n            <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Created By\">Created By\r\n               </mat-header-cell>\r\n            <mat-cell *matCellDef=\"let element\"> {{element.createdBy}} </mat-cell>\r\n          </ng-container>\r\n          <!-- <ng-container matColumnDef=\"childPermission\">\r\n           <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Currency 2\">Child Permission\r\n              </mat-header-cell>\r\n           <mat-cell *matCellDef=\"let element\"> {{element.childPermission}} </mat-cell>\r\n         </ng-container> -->\r\n          <!-- <ng-container matColumnDef=\"oneTimeAuth\">\r\n            <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by One Time Auth\"> One Time Auth\r\n             </mat-header-cell>\r\n            <mat-cell *matCellDef=\"let element\"> {{element.oneTimeAuth}} </mat-cell>\r\n          </ng-container> -->\r\n          <ng-container matColumnDef=\"authStatus\">\r\n            <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Auth Status\"> Auth Status\r\n             </mat-header-cell>\r\n            <mat-cell *matCellDef=\"let element\"> {{element.authStatus}} </mat-cell>\r\n          </ng-container>\r\n          <ng-container matColumnDef=\"recordStatus\">\r\n            <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Record Status\"> Record Status\r\n             </mat-header-cell>\r\n            <mat-cell *matCellDef=\"let element\"> {{element.recordStatus}} </mat-cell>\r\n          </ng-container>\r\n\r\n          <ng-container matColumnDef=\"authDate\">\r\n            <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Date\"> Date\r\n             </mat-header-cell>\r\n            <mat-cell *matCellDef=\"let element\"> {{element.authDate}} </mat-cell>\r\n          </ng-container>\r\n     \r\n     \r\n          <ng-container matColumnDef=\"action\">\r\n            <mat-header-cell *matHeaderCellDef>Action</mat-header-cell>\r\n            <mat-cell *matCellDef=\"let element\">\r\n              <div>\r\n               <mat-icon class=\"actionIcons\" matTooltip=\"Edit\" (click)=\"editPolicy(element.version)\" >edit</mat-icon>\r\n            </div>&nbsp;&nbsp;&nbsp;&nbsp;\r\n            <div>\r\n             <mat-icon class=\"actionIcons\" matTooltip=\"Delete\" (click)=\"deleteItem(element)\"   >delete</mat-icon>\r\n            </div>\r\n            </mat-cell>\r\n          </ng-container>\r\n     \r\n          <mat-header-row *matHeaderRowDef=\"displayedColumns;\"></mat-header-row>\r\n          <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\r\n        </mat-table>\r\n        <!-- <mat-paginator class=\"mt-16\" [pageSizeOptions]=\"[10,20,30]\" showFirstLastButtons></mat-paginator> -->\r\n      </div>\r\n   </mat-card>  \r\n","import { ChangeDetectorRef, Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { DataService } from 'app/shared/services/data.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { AuditLogComponent } from '../../audit-log/audit-log.component';\r\nimport Swal from 'sweetalert2';\r\n\r\n\r\n@Component({\r\n  selector: 'app-add-currency-maint',\r\n  templateUrl: './add-currency-maint.component.html',\r\n  styleUrls: ['./add-currency-maint.component.scss']\r\n})\r\nexport class AddCurrencyMaintComponent implements OnInit {\r\n  public currencyMaint: FormGroup;\r\n  @ViewChild('auditLog') auditLog : AuditLogComponent\r\n  currencyMaintIsEdit: any;\r\n  isEdit: boolean = false;\r\n  \r\n  loggedInUser : any;\r\n  auditLogData : any;\r\n  countries: string[] = [];\r\n  currencyId: any;\r\n  readorWrite: boolean = true;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private route : ActivatedRoute,\r\n    private apiService: ApiService,\r\n    private dataService : DataService,\r\n    private ls : LocalStoreService,\r\n    private snack: MatSnackBar,\r\n    private cdr: ChangeDetectorRef,\r\n    private router:Router,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.buildItemForm({});\r\n    this.route.queryParamMap.subscribe((params: any) => {\r\n      console.log(params);\r\n      this.currencyId = JSON.parse(params.get('currencyId'));\r\n      this.currencyMaintIsEdit = params.get('isEdit');\r\n      console.log(\"this.currencyMaintIsEdit\",this.currencyMaintIsEdit);\r\n      if(this.currencyId){\r\n        this.isEdit = true;\r\n        console.log(this.currencyId);\r\n        this.apiService.editCurrencyMaintById(this.currencyId).subscribe((resp) =>{\r\n           console.log(resp);\r\n           this.buildItemForm(resp);\r\n           this.auditLogData = resp;\r\n           this.dataService.setAuditLogData(this.auditLogData);\r\n           this.dataService.sendClickEvent();\r\n        });\r\n      }\r\n      else{\r\n        this.readorWrite=false;\r\n        this.buildItemForm({});\r\n      }\r\n    });\r\n    this.getCountryName(\"country\");\r\n    this.cdr.markForCheck();\r\n    this.loggedInUser = this.ls.getItem('ICUST_USER');\r\n    console.log(this.loggedInUser);\r\n  }\r\n\r\n  buildItemForm(item) {\r\n    this.currencyMaint = this.fb.group({\r\n      currencyCode: [item.currencyId ? item.currencyId.currencyCode : '', Validators.required],\r\n      currencyName: [item ? item.currencyName : '', Validators.required],\r\n      country: [item.currencyId ? item.currencyId.country : '', Validators.required],\r\n      isoCcyCode: [item ? item.isoCcyCode : '', Validators.required]\r\n    });\r\n  }\r\n\r\n  getCountryName(key: string) {\r\n    this.apiService.getAllCountries().subscribe((data: any) => {\r\n      console.log('resp',data)\r\n      for(let i=0; i<data.length;i++){\r\n        if(data[i].authStatus==='A'){\r\n          this.countries.push(data[i].countryName);\r\n        }\r\n      }\r\n      // this.countries = data;\r\n    });\r\n  }\r\n\r\n  submit() {\r\n    this.currencyMaint.value.loggedInUser = this.loggedInUser.userName;\r\n    console.log(this.currencyMaint.value);\r\n    this.apiService.upsertCurrencyMaintDetails(this.currencyMaint.value).subscribe(data => {\r\n      console.log(\"data\",data);\r\n      if(data && this.isEdit == false ){\r\n        this.snack.open('Data Created Successfully!', 'OK', {\r\n          duration: 4000,\r\n          verticalPosition: 'top',\r\n          horizontalPosition: 'right'\r\n        });\r\n        this.router.navigate([`/maintenance/main/currencyMaint`]);\r\n        this.cdr.markForCheck();\r\n      }\r\n     else if(data != null && this.isEdit == true){\r\n        this.snack.open('Data Updated!', 'OK', {\r\n          duration: 4000,\r\n          verticalPosition: 'top',\r\n          horizontalPosition: 'right'\r\n        });\r\n        this.router.navigate([`/maintenance/main/currencyMaint`]);\r\n        this.cdr.markForCheck();\r\n      }\r\n      else if(data != null && this.isEdit == false){\r\n        this.snack.open('Data Saved!', 'OK', {\r\n          duration: 4000,\r\n          verticalPosition: 'top',\r\n          horizontalPosition: 'right'\r\n        });\r\n        this.router.navigate([`/maintenance/main/currencyMaint`]);\r\n        this.cdr.markForCheck();\r\n\r\n      }\r\n      else {\r\n        this.snack.open('Save Failed! Cannot add duplicate records', 'OK', {\r\n          duration: 4000,\r\n          verticalPosition: 'top',\r\n          horizontalPosition: 'right'\r\n        });\r\n      }\r\n    })\r\n    \r\n  }\r\n\r\n  goBack() {\r\n    this.router.navigate([`/maintenance/main/currencyMaint`]);\r\n  }\r\n\r\n  trackByCountry(country){\r\n    return country;\r\n  }\r\n  deleteRecord(operation){\r\n    Swal.fire(\r\n      {\r\n        //text: 'Unable to process' + 'Error ' + this.responseforfileupload.errorMessage + 'Do you want to Proceed??',\r\n        text: 'You are trying to '+ operation +' record.' + ' Do you want to proceed?',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        // confirmButtonText: 'PROCEED.'\r\n        cancelButtonText: 'NO',\r\n        confirmButtonText: 'YES', 'icon': 'info'\r\n      }\r\n    ).then((result => {\r\n      if(result.isConfirmed==true){\r\n        this.apiService.deleteCurrencyMaint(this.auditLogData.currencyId)\r\n        .subscribe(data => {\r\n            this.router.navigate([`/maintenance/main/currencyMaint`]);\r\n        },\r\n        err=>{\r\n          if (err.status == 200) {\r\n            this.snack.open('Record Deleted Successfully', 'OK', {\r\n              duration: 4000,\r\n              verticalPosition: 'top',\r\n              horizontalPosition: 'right'\r\n            });\r\n          }\r\n            this.router.navigate([`/maintenance/main/currencyMaint`]);\r\n        \r\n      })\r\n      }}))\r\n   \r\n         \r\n       \r\n  }\r\n\r\n editRecord(){\r\n this.readorWrite=false;\r\n }\r\n\r\n  updateRecord(operation) {\r\n    Swal.fire(\r\n      {\r\n        //text: 'Unable to process' + 'Error ' + this.responseforfileupload.errorMessage + 'Do you want to Proceed??',\r\n        text: 'You are trying to '+ operation +' record.' + ' Do you want to proceed?',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        // confirmButtonText: 'PROCEED.'\r\n        cancelButtonText: 'NO',\r\n        confirmButtonText: 'YES', 'icon': 'info'\r\n      }\r\n    ).then((result => {\r\n      if(result.isConfirmed==true){\r\n        console.log(\"operation::\",operation);\r\n        console.log(this.currencyMaint.value.currencyCode);\r\n        let payload: any = {};\r\n        payload.operation = operation;\r\n        payload.loggedInUser = this.loggedInUser.userName;\r\n        payload.currencyId = {};\r\n        payload.currencyId.currencyCode = this.currencyMaint.value.currencyCode;\r\n        payload.currencyId.country = this.currencyMaint.value.country;\r\n        console.log(\"payload -- \",payload);\r\n        this.apiService.updateAuditLogForCurrencyMaint(payload).subscribe((data) => {\r\n          console.log(data);\r\n          this.auditLogData = data;\r\n          this.dataService.setAuditLogData(this.auditLogData);\r\n          this.dataService.sendClickEvent();\r\n          let message = '';\r\n          switch (operation) {\r\n            case 'open':\r\n              message = 'opened'\r\n              break;\r\n            case 'close':\r\n              message = 'closed'\r\n              break;\r\n            case 'auth':\r\n              message = 'authorized'\r\n              break;\r\n            default:\r\n              break;\r\n          }\r\n          this.snack.open(`Record ${message} successful!'`, \"OK\", {\r\n            duration: 2000,\r\n            verticalPosition: \"top\",\r\n            horizontalPosition: \"right\",\r\n          });\r\n        });\r\n      }}))\r\n    \r\n  }\r\n}\r\n","<h1 class=\"main-head\"><small class=\"small-head\">Home > Maintenance Summary > Currency Maintenance > <span *ngIf=\"!isEdit\">Add</span> <span *ngIf=\"isEdit\">Edit</span> Currency Information</small></h1>\r\n<div fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"mt-16\">\r\n    <button mat-icon-button (click)=\"goBack()\">\r\n        <mat-icon>arrow_back</mat-icon>\r\n    </button>\r\n    <h1 *ngIf=\"!isEdit\" class=\"add-text\">Add Currency Information</h1>\r\n    <h1 *ngIf=\"isEdit\" class=\"add-text\">Edit Currency Information</h1>\r\n</div>\r\n\r\n<mat-card>\r\n    <mat-card-content>\r\n        <div [formGroup]=\"currencyMaint\" class=\"m-333\">\r\n            <!-- <h1>Currency Maintenance Information</h1> -->\r\n            <div fxLayoutAlign=\"space-between center\" fxLayoutGap=\"15px\">\r\n                <div fxFlex=\"33.33\">\r\n                    <mat-label>Currency Code *</mat-label>\r\n                    <mat-form-field class=\"full-width\" appearance=\"fill\" >\r\n                        <input [readonly]=\"readorWrite\" matInput name=\"currencyCode\" minlength=\"3\" maxlength=\"3\" type=\"text\"\r\n                            formControlName=\"currencyCode\" required />\r\n                        <mat-error *ngIf=\"currencyMaint?.get('currencyCode').hasError('required')\">\r\n                            Currency Code is Required!\r\n                        </mat-error>\r\n\r\n                    </mat-form-field>\r\n                </div>\r\n\r\n                <div fxFlex=\"33.33\">\r\n                    <mat-label>Currency Name *</mat-label>\r\n                    <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                        <input [readonly]=\"readorWrite\" matInput name=\"currencyName\" type=\"text\" formControlName=\"currencyName\" required/>\r\n                        <mat-error *ngIf=\"currencyMaint.get('currencyName').hasError('required')\">\r\n                            Currency Name is Required!\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n                <div fxFlex=\"33.33\" *ngIf=\"!readorWrite\">\r\n                    <mat-label>Country *</mat-label>\r\n                    <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                        <mat-select name=\"country\" formControlName=\"country\" required >\r\n                            <mat-option *ngFor=\"let country of countries; trackBy: trackByCountry\" [value]=\"country\">\r\n                                {{ country }}\r\n                            </mat-option>\r\n                        </mat-select>\r\n                        <mat-error *ngIf=\"currencyMaint?.get('country').hasError('required')\">\r\n                            Country is Required!\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n                <div fxFlex=\"33.33\" *ngIf=\"readorWrite\">\r\n                    <mat-label>Country *</mat-label>\r\n                    <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                        <input [readonly]=\"readorWrite\" matInput name=\"isoCcyCode\" type=\"text\" formControlName=\"country\" required />\r\n                    </mat-form-field>\r\n                </div>\r\n            </div>\r\n            <div fxLayoutAlign=\"space-between center\" fxLayoutGap=\"15px\">\r\n                \r\n\r\n                <div fxFlex=\"32.5\">\r\n                    <mat-label>ISO Currency Code *</mat-label>\r\n                    <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                        <input [readonly]=\"readorWrite\" matInput name=\"isoCcyCode\" type=\"text\" formControlName=\"isoCcyCode\" required />\r\n                        <mat-error *ngIf=\"currencyMaint?.get('isoCcyCode').hasError('required')\">\r\n                            Iso currency code is Required!\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n            </div>\r\n            <div fxLayout=\"row wrap\" fxLayout.lt-sm=\"column\">\r\n                <div fxFlex=\"100\" class=\"mt-16\" fxLayoutAlign=\"end center\">\r\n                    <button color=\"primary\" *ngIf=\"!isEdit\"  [disabled]= \"currencyMaint.invalid\" mat-raised-button (click)=\"submit()\">\r\n                        SAVE\r\n                    </button>\r\n                    <div [hidden]=\"readorWrite\" >\r\n                        <button *ngIf=\"isEdit\" type=\"button\"  [disabled]= \"!(currencyMaint.invalid || currencyMaint.dirty)\" mat-raised-button color=\"primary\" (click)=\"submit()\">\r\n                            Save\r\n                        </button>\r\n                        &nbsp;&nbsp;\r\n                    </div>\r\n                    \r\n                    <!-- <div *ngIf=\"(auditLogData?.authStatus == 'Authorized' || auditLogData?.authStatus == 'A')\r\n                    && (auditLogData?.recordStatus == 'Close' || auditLogData?.recordStatus == 'C')\">\r\n                        <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\"\r\n                            (click)=\"updateRecord('open')\" [disabled]=\"!currencyMaint.valid\">\r\n                            Open\r\n                        </button>\r\n                    </div>\r\n                    &nbsp;\r\n                    <div *ngIf=\"(auditLogData?.authStatus == 'Authorized' || auditLogData?.authStatus == 'A')\r\n                    && (auditLogData?.recordStatus == 'Open' || auditLogData?.recordStatus == 'O')\">\r\n                        <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\"\r\n                            (click)=\"updateRecord('close')\">\r\n                            Close\r\n                        </button>\r\n                    </div>\r\n                    &nbsp;\r\n                    <div *ngIf=\"auditLogData?.authStatus == 'Unauthorized' || auditLogData?.authStatus == 'U'\">\r\n                        <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\"\r\n                            (click)=\"updateRecord('auth')\">\r\n                            Authorize\r\n                        </button>\r\n                    </div> -->\r\n                    <div [hidden]=\"!readorWrite || auditLogData?.recordStatus == 'Close'\">\r\n                        <button *ngIf=\"isEdit\" type=\"button\"  mat-raised-button color=\"primary\" (click)=\"editRecord()\">\r\n                          Edit\r\n                        </button>&nbsp;&nbsp;\r\n                      </div>\r\n                      <div *ngIf=\"auditLogData?.authStatus == 'Unauthorized' && readorWrite\" [hidden]=\"!readorWrite\">\r\n                        <button *ngIf=\"isEdit\" type=\"button\"  mat-raised-button color=\"primary\" (click)=\"updateRecord('auth')\">\r\n                          Authorize\r\n                        </button>&nbsp;&nbsp;\r\n                      </div> \r\n                      <div *ngIf=\"auditLogData?.recordStatus == 'Close' && auditLogData?.oneTimeAuth != 'No'\" [hidden]=\"!readorWrite\">\r\n                        <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"updateRecord('open')\">\r\n                          Reopen\r\n                        </button>&nbsp;&nbsp;\r\n                      </div>\r\n                      <div *ngIf=\"auditLogData?.recordStatus == 'Open' && auditLogData?.oneTimeAuth != 'No'\" [hidden]=\"!readorWrite\">\r\n                        <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"updateRecord('close')\">\r\n                          Close\r\n                        </button>&nbsp;&nbsp;\r\n                      </div>\r\n                      <div *ngIf=\"auditLogData?.oneTimeAuth == 'No'\" [hidden]=\"!readorWrite\">\r\n                        <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"deleteRecord()\">\r\n                          Delete\r\n                        </button> &nbsp;&nbsp;\r\n                      </div>\r\n                     \r\n                      <button\r\n                        mat-raised-button\r\n                        color=\"warn\"\r\n                        type=\"button\"\r\n                        (click)=\"goBack()\"\r\n                      >\r\n                        Exit\r\n                      </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </mat-card-content>\r\n</mat-card>\r\n\r\n<div *ngIf=\"auditLogData\" class=\"mt-32\">\r\n    <app-audit-log #auditLog></app-audit-log>\r\n</div> ","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { AppLoaderService } from 'app/shared/services/app-loader/app-loader.service';\r\n@Component({\r\n  selector: 'app-till-vault-ccybal-hispopup',\r\n  templateUrl: './till-vault-ccybal-hispopup.component.html',\r\n  styleUrls: ['./till-vault-ccybal-hispopup.component.scss']\r\n})\r\nexport class TillVaultCcybalHispopupComponent implements OnInit {\r\n  arrayCurrency: string[] = [];\r\n  countryCurrency: string[]=[];\r\n  tillId:number[]=[];\r\n  branchCode:string[]=[];\r\n  bankCode:string[]=[];\r\n  public ccybalHistoryForm: FormGroup;\r\n  \r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    public dialogRef: MatDialogRef<TillVaultCcybalHispopupComponent>,\r\n    private fb: FormBuilder,\r\n    private apiService: ApiService,\r\n    private loader: AppLoaderService,\r\n    private snack: MatSnackBar,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.buildItemForm(this.data.payload);\r\n    this.countryCurrency=this.data.currency;\r\n    this.tillId=this.data.till;\r\n    this.branchCode=this.data.branchCode;\r\n    this.bankCode=this.data.bankCode;\r\n  }\r\n\r\n  buildItemForm(item) {\r\n    this.ccybalHistoryForm = this.fb.group({\r\n      entityCode: [item.entityCode || '',Validators.required],\r\n      bankCode: [item.bankCode || '', Validators.required], \r\n      branchCode: [item.branchCode || '',Validators.required],\r\n      tillId: [item.tillId || '',Validators.required],\r\n      currency: [item.currency || '',[Validators.required]],\r\n      glAccount: [item.glAccount || '',Validators.required],\r\n      txnDate:[item.txnDate || '',Validators.required],\r\n      openBalInAcy: [item.openBalInAcy || '',Validators.required],\r\n      openBalInLcy: [item.openBalInLcy || '',Validators.required],\r\n      balInAcy: [item.balInAcy || '',Validators.required],\r\n      balInLcy: [item.balInLcy || '',Validators.required],\r\n    })\r\n  }\r\n  numericValidation(event){\r\n    var inp = String.fromCharCode(event.keyCode);\r\n    if (/[0-9]/.test(inp)) {\r\n      return true;\r\n    } else {\r\n      event.preventDefault();\r\n      return false;\r\n    }\r\n  }\r\n  alhanumericValidation(event){\r\n    var inp = String.fromCharCode(event.keyCode);\r\n    if (/[a-zA-Z0-9]/.test(inp)) {\r\n      return true;\r\n    } else {\r\n      event.preventDefault();\r\n      return false;\r\n    }\r\n  }\r\n// Save of tillVaultCurrencyBalHistory\r\n  submit() {\r\n    let payload = {\r\n      \"entityCode\": this.ccybalHistoryForm.value.entityCode,\r\n      \"bankCode\": this.ccybalHistoryForm.value.bankCode,\r\n      \"branchCode\": this.ccybalHistoryForm.value.branchCode,\r\n      \"currency\": this.ccybalHistoryForm.value.currency,\r\n      \"tillId\": this.ccybalHistoryForm.value.tillId,\r\n      \"glAccount\": this.ccybalHistoryForm.value.glAccount,\r\n      \"txnDate\": this.ccybalHistoryForm.value.txnDate,\r\n      \"openBalInAcy\": this.ccybalHistoryForm.value.openBalInAcy,\r\n      \"openBalInLcy\": this.ccybalHistoryForm.value.glAccount,\r\n      \"balInAcy\": this.ccybalHistoryForm.value.openBalInAcy,\r\n      \"balInLcy\": this.ccybalHistoryForm.value.openBalInAcy,\r\n      \r\n    };\r\n      this.dialogRef.close(this.ccybalHistoryForm.value);\r\n      }\r\n      dataByBankCode(index,item){\r\n        return item.bankCode;\r\n      }\r\n      dataByBranchCode(index,item){\r\n        return item.branchCode;\r\n      }\r\n      dataBytillId(index,item){\r\n        return item.tellerId;\r\n      }\r\n      dataByCountry(index,item){\r\n        return item.countryCode;\r\n      }\r\n}\r\n","\r\n<h1 matDialogTitle>{{data.title}}</h1>\r\n<form [formGroup]=\"ccybalHistoryForm\" (ngSubmit)=\"submit()\">\r\n<div fxLayout=\"row wrap\" fxLayout.lt-sm=\"column\">\r\n    <div fxFlex=\"50\"  class=\"pr-16\">\r\n        <mat-form-field class=\"full-width\">\r\n          <input\r\n          matInput\r\n          name=\"entityCode\"\r\n          (keypress)=\"alhanumericValidation($event)\"\r\n          [formControl]=\"ccybalHistoryForm.controls['entityCode']\"\r\n          placeholder=\"Entity Code\">\r\n          <mat-error\r\n          *ngIf=\"ccybalHistoryForm.get('entityCode').touched && !ccybalHistoryForm.get('entityCode').valid\">\r\n          Enter the Entity Code\r\n      </mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n  <div fxFlex=\"50\"  class=\"pr-16\">\r\n    <mat-form-field class=\"full-width\">\r\n      <mat-label>Bank Code *</mat-label>\r\n      <mat-select name=\"bankCode\" [formControl]=\"ccybalHistoryForm.controls['bankCode']\" class=\"selectOption\">\r\n        <mat-option *ngFor=\"let data of bankCode; trackBy:dataByBankCode\" [value]=\"data.bankCode\">\r\n          {{data.bankCode}}\r\n        </mat-option>\r\n      </mat-select>\r\n      <mat-error\r\n      *ngIf=\"ccybalHistoryForm.get('bankCode').touched && !ccybalHistoryForm.get('bankCode').valid\">\r\n      Bank Code is Required\r\n  </mat-error>\r\n    </mat-form-field>\r\n  </div>\r\n  <div fxFlex=\"50\"  class=\"pr-16\">\r\n    <mat-form-field class=\"full-width\">\r\n      <mat-label>Branch Code *</mat-label>\r\n      <mat-select name=\"branchCode\" [formControl]=\"ccybalHistoryForm.controls['branchCode']\" class=\"selectOption\">\r\n        <mat-option *ngFor=\"let data of branchCode; trackBy:dataByBranchCode\" [value]=\"data.branchCode\">\r\n          {{data.branchCode}}\r\n        </mat-option>\r\n      </mat-select>\r\n      <mat-error\r\n        *ngIf=\"ccybalHistoryForm.get('branchCode').touched && !ccybalHistoryForm.get('branchCode').valid\">\r\n        Branch Code is Required!\r\n    </mat-error>\r\n    </mat-form-field>\r\n  </div>\r\n  <div fxFlex=\"50\"  class=\"pr-16\">\r\n    <mat-form-field class=\"full-width\">\r\n      <mat-label>Till Id *</mat-label>\r\n      <mat-select name=\"tillId\" [formControl]=\"ccybalHistoryForm.controls['tillId']\" class=\"selectOption\">\r\n        <mat-option *ngFor=\"let data of tillId; trackBy:dataBytillId\" [value]=\"data.tellerId\">\r\n          {{data.tellerId}}\r\n        </mat-option>\r\n      </mat-select>\r\n      <mat-error\r\n      *ngIf=\"ccybalHistoryForm.get('tillId').touched && !ccybalHistoryForm.get('tillId').valid\">\r\n      Till Id is Required!\r\n  </mat-error>\r\n    </mat-form-field>\r\n  </div>\r\n  <div fxFlex=\"50\"  class=\"pr-16\">\r\n    <mat-form-field class=\"full-width\">\r\n      <mat-label>Currency *</mat-label>\r\n      <mat-select name=\"currency\" [formControl]=\"ccybalHistoryForm.controls['currency']\" class=\"selectOption\">\r\n        <mat-option *ngFor=\"let data of countryCurrency; trackBy:dataByCountry\" [value]=\"data.countryCode\">\r\n          {{data.countryCode}}\r\n        </mat-option>\r\n      </mat-select>\r\n      <mat-error\r\n      *ngIf=\"ccybalHistoryForm.get('currency').touched && !ccybalHistoryForm.get('currency').valid\">\r\n      Currency is Required!\r\n  </mat-error>\r\n    </mat-form-field>\r\n  </div>\r\n\r\n  <div fxFlex=\"50\"  class=\"pr-16\">\r\n    <mat-form-field class=\"full-width\">\r\n      <input\r\n      matInput\r\n      name=\"glAccount\"\r\n      maxlength=\"20\"\r\n      (keypress)=\"alhanumericValidation($event)\"\r\n      [formControl]=\"ccybalHistoryForm.controls['glAccount']\"\r\n      placeholder=\"GL Account\">\r\n      <mat-error\r\n      *ngIf=\"ccybalHistoryForm.get('glAccount').touched && !ccybalHistoryForm.get('glAccount').valid\">\r\n       GL Account is required!\r\n  </mat-error>\r\n    </mat-form-field>\r\n  </div>\r\n  <div fxFlex=\"50\"  class=\"pr-16\">\r\n    <mat-form-field class=\"full-width\">\r\n        <input \r\n        [formControl]=\"ccybalHistoryForm.controls['txnDate']\" \r\n        matInput \r\n        name=\"txnDate\"\r\n        [matDatepicker]=\"picker\" \r\n        placeholder=\"Transaction Date\" \r\n        readonly>\r\n        <mat-datepicker-toggle matSuffix [for]=\"picker\">\r\n            <mat-icon matDatepickerToggleIcon>keyboard_arrow_down</mat-icon>\r\n          </mat-datepicker-toggle>\r\n          <mat-datepicker #picker></mat-datepicker> \r\n      <mat-error\r\n      *ngIf=\"ccybalHistoryForm.get('txnDate').touched && !ccybalHistoryForm.get('txnDate').valid\">\r\n      Transaction Date is Required!\r\n  </mat-error>\r\n    </mat-form-field>\r\n  </div>\r\n  <div fxFlex=\"50\"  class=\"pr-16\">\r\n    <mat-form-field class=\"full-width\">\r\n      <input\r\n      matInput\r\n      name=\"openBalInAcy\"\r\n      (keypress)=\"numericValidation($event)\"\r\n      [formControl]=\"ccybalHistoryForm.controls['openBalInAcy']\"\r\n      placeholder=\"Open Balance In Acy \">\r\n      <mat-error\r\n      *ngIf=\"ccybalHistoryForm.get('openBalInAcy').touched && !ccybalHistoryForm.get('openBalInAcy').valid\">\r\n      Open Balance In Acy is Required!\r\n  </mat-error>\r\n    </mat-form-field>\r\n  </div>\r\n  <div fxFlex=\"50\"  class=\"pr-16\">\r\n      <mat-form-field class=\"full-width\">\r\n        <input\r\n        matInput\r\n        name=\"openBalInLcy\"\r\n        (keypress)=\"numericValidation($event)\"\r\n        [formControl]=\"ccybalHistoryForm.controls['openBalInLcy']\"\r\n        placeholder=\"Open Balance In Lcy \">\r\n        <mat-error\r\n        *ngIf=\"ccybalHistoryForm.get('openBalInLcy').touched && !ccybalHistoryForm.get('openBalInLcy').valid\">\r\n        Open Balance In Lcy is Required!\r\n    </mat-error>\r\n      </mat-form-field>\r\n    </div>\r\n    <div fxFlex=\"50\"  class=\"pr-16\">\r\n        <mat-form-field class=\"full-width\">\r\n          <input\r\n          matInput\r\n          name=\"balInAcy\"\r\n          (keypress)=\"numericValidation($event)\"\r\n          [formControl]=\"ccybalHistoryForm.controls['balInAcy']\"\r\n          placeholder=\"Balance In Acy\">\r\n          <mat-error\r\n          *ngIf=\"ccybalHistoryForm.get('balInAcy').touched && !ccybalHistoryForm.get('balInAcy').valid\">\r\n        Balance In Acy is Required!\r\n      </mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n      <div fxFlex=\"50\"  class=\"pr-16\">\r\n        <mat-form-field class=\"full-width\">\r\n          <input\r\n          matInput\r\n          name=\"balInLcy\"\r\n          (keypress)=\"numericValidation($event)\"\r\n          [formControl]=\"ccybalHistoryForm.controls['balInLcy']\"\r\n          placeholder=\"Balance In Lcy\">\r\n          <mat-error\r\n          *ngIf=\"ccybalHistoryForm.get('balInLcy').touched && !ccybalHistoryForm.get('balInLcy').valid\">\r\n        Balance In Lcy is Required!\r\n      </mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n   \r\n  <div fxFlex=\"100\" class=\"mt-16\">\r\n    <button mat-raised-button color=\"primary\" [disabled]=\"!(ccybalHistoryForm.valid && ccybalHistoryForm.dirty)\">{{\"SAVE\" }}</button>\r\n    <span fxFlex></span>\r\n    <button mat-button color=\"warn\" type=\"button\" (click)=\"dialogRef.close(false)\">Cancel</button>\r\n  </div>\r\n</div>\r\n</form>\r\n\r\n\r\n","import { map } from 'rxjs/operators';\r\nimport { AppConfirmService } from 'app/shared/services/app-confirm/app-confirm.service';\r\nimport { Component, OnInit, ChangeDetectorRef, EventEmitter, Input, Output, SimpleChanges } from '@angular/core';\r\nimport { FormGroup, FormArray, FormControl, FormBuilder, Validators } from '@angular/forms';\r\nimport { MatCheckboxChange } from '@angular/material/checkbox';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport * as moment from 'moment';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { Subject } from 'rxjs';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { HolidayListDialogComponent } from '../holiday-list-dialog/holiday-list-dialog.component';\r\n\r\n@Component({\r\n  selector: 'app-custom-calendar-arr-type',\r\n  templateUrl: './custom-calendar-arr-type.component.html',\r\n  styleUrls: ['./custom-calendar-arr-type.component.scss']\r\n})\r\nexport class CustomCalendarArrTypeComponent implements OnInit {\r\n\r\n  calenderArr: any[];\r\n  selectedItem: boolean = false;\r\n  selectedItemRow: boolean = false;\r\n  disabled: boolean = true;\r\n  dateAlreadyActive: any;\r\n  monthArr: any = [\r\n    ['January', 'February', 'March'],\r\n    ['April', 'May', 'June'],\r\n    ['July', 'August', 'September'],\r\n    ['October', 'November', 'December'],\r\n  ];\r\n  monthArrIndex: any = [\r\n    ['0', '1', '2'],\r\n    ['3', '4', '5'],\r\n    ['6', '7', '8'],\r\n    ['9', '10', '11'],\r\n  ];\r\n  newYearArrayany: any[] = [];\r\n  months: string[] = [\r\n    'January',\r\n    'February',\r\n    'March',\r\n    'April',\r\n    'May',\r\n    'June',\r\n    'July',\r\n    'August',\r\n    'September',\r\n    'October',\r\n    'November',\r\n    'December',\r\n  ];\r\n  weekdaysInWords: string[] = [\r\n    'Sunday',\r\n    'Monday',\r\n    'Tuesday',\r\n    'Wednsday',\r\n    'Thursday',\r\n    'Friday',\r\n    'Saturday',\r\n  ];\r\n  weekdays: string[] = [\r\n    'S',\r\n    'M',\r\n    'T',\r\n    'W',\r\n    'T',\r\n    'F',\r\n    'S',\r\n  ];\r\n  monthEnds = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\r\n  viewDate: Date = new Date();\r\n  yearlyCalendarArr = [];\r\n  currentMonth: any;\r\n  currentMonthDate: any;\r\n  calendarDate: any[] = [];\r\n  year: number;\r\n  daysFinalArr: any[] = [];\r\n  calendarArrFinal: any[] = [];\r\n  confirmRes: boolean = false;\r\n  daysFinalArrNew: any[] = [];\r\n  calendarArrFinalNew: any[] = [];\r\n  dynamicObject: { value: string; disabled: boolean; };\r\n  selected = new FormControl('', [Validators.required]);\r\n  yearArr: any[] = [2022, 2021, 2020, 2019, 2018, 2017];\r\n  disableSave: boolean = true;\r\n  isEdit: boolean = false;\r\n  @Input() public addBranchHolidayFormData: any;\r\n  @Input() resetFormSubject: Subject<boolean> = new Subject<boolean>();\r\n  @Output() onDatePicked = new EventEmitter<any>();\r\n  currentMonthYear: number;\r\n  constructor(\r\n    private router: Router, private snack: MatSnackBar, private cdr: ChangeDetectorRef, private apiService: ApiService,\r\n    public dialog: MatDialog\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    // this.fillInYear(2023);\r\n    this.onDatePicked.emit(this.calendarDate);\r\n    this.currentMonth = this.months[this.viewDate.getMonth()];\r\n    this.currentMonthDate = this.viewDate.getDate();\r\n    this.currentMonthYear = this.viewDate.getFullYear();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (this.addBranchHolidayFormData != null) {\r\n      this.fillInYear(this.addBranchHolidayFormData.data.calenderYear);\r\n      this.updateCalendar(this.addBranchHolidayFormData.holidayModel);\r\n      this.currentMonth = this.months[this.viewDate.getMonth()];\r\n      this.currentMonthDate = this.viewDate.getDate();\r\n    }\r\n  }\r\n  updateCalendar(holidayModel) {\r\n    if (holidayModel != '' && holidayModel != null) {\r\n      holidayModel.forEach((v, k) => {\r\n        let newDate = new Date(v.calenderDate);\r\n        this.monthArrIndex.forEach((iV, iK) => {\r\n          iV.forEach((iV1, iK1) => {\r\n            if (newDate.getMonth() == iV1) {\r\n              this.calendarArrFinalNew[iK][iK1].map((cV, cK) => {\r\n                cV.map((cV1, cK1) => {\r\n                  if (newDate.getDate() == cV1.value) {\r\n                    cV1.disabled = true;\r\n                    cV1.holidayType=v.holidayType;\r\n                  }\r\n                })\r\n              })\r\n            }\r\n          });\r\n        });\r\n        this.cdr.markForCheck();\r\n        this.cdr.detectChanges();\r\n      });\r\n    }\r\n  }\r\n  fillInMonth(year: number, month: string, dayAmount: number) {\r\n    this.year = year;\r\n    let monthNumsArr = [];\r\n    let daysArrNew = [];\r\n    let daysFinalArrNew = [];\r\n    let endOffSet = 42 - dayAmount;\r\n    let date = new Date(month + '1, ' + year);\r\n    let dateOffSet = date.getDay();\r\n\r\n    for (let i = 0; i < dayAmount + endOffSet; i++) {\r\n      if (i < dateOffSet) {\r\n        monthNumsArr.push(' ');\r\n        daysArrNew.push({ value: '', disabled: false,holidayType:''  });\r\n      } else if (i > dayAmount + dateOffSet - 1) {\r\n        monthNumsArr.push(' ');\r\n        daysArrNew.push({ value: '', disabled: false ,holidayType:'' });\r\n      } else {\r\n        monthNumsArr.push((i + 1 - dateOffSet).toString());\r\n        let dateValue1 = (+(i + 1 - dateOffSet).toString());\r\n        var d1 = new Date(year, date.getMonth(), dateValue1);\r\n        var responseDate = moment(d1).format('YYYY-MM-DD');\r\n        var currentDate = moment(this.viewDate).format('YYYY-MM-DD');\r\n        if (responseDate < currentDate) {\r\n          daysArrNew.push({ value: (i + 1 - dateOffSet).toString(), disabled: true,holidayType:'' });\r\n        } else {\r\n          daysArrNew.push({ value: (i + 1 - dateOffSet).toString(), disabled: false,holidayType:'' });\r\n        }\r\n\r\n      }\r\n\r\n      if (((8 + i) % 7 == 0)) {\r\n        daysFinalArrNew.push(daysArrNew);\r\n        daysArrNew = [];\r\n      }\r\n\r\n    }\r\n    this.daysFinalArrNew.push(daysFinalArrNew);\r\n\r\n    return monthNumsArr;\r\n  }\r\n\r\n\r\n  fillInYear(year: number) {\r\n    this.yearlyCalendarArr = [];\r\n    this.calenderArr = [];\r\n    this.daysFinalArrNew = [];\r\n    this.newYearArrayany = [];\r\n    this.calendarArrFinal = [];\r\n    this.calendarArrFinalNew = [];\r\n    for (let i = 0; i < 12; i++) {\r\n      this.yearlyCalendarArr.push(\r\n        this.fillInMonth(year, this.months[i], this.monthEnds[i])\r\n      );\r\n\r\n      if ((i + 1) % 3 == 0) {\r\n        this.newYearArrayany.push(this.yearlyCalendarArr);\r\n        this.calenderArr = this.daysFinalArr;\r\n        this.calendarArrFinal.push(this.calenderArr);\r\n        this.calendarArrFinalNew.push(this.daysFinalArrNew);\r\n        this.calenderArr = [];\r\n        this.daysFinalArrNew = [];\r\n        this.yearlyCalendarArr = [];\r\n      }\r\n      if (i == 11) {\r\n      }\r\n    }\r\n  }\r\n\r\n  assignFormValue(event) {\r\n    this.currentMonth = this.months[this.viewDate.getMonth()];\r\n    this.currentMonthDate = this.viewDate.getFullYear();\r\n    if (this.viewDate.getFullYear() == event.value) {\r\n\r\n    }\r\n    this.fillInYear(event.value);\r\n  }\r\n\r\n\r\n  goBack() {\r\n    this.router.navigate(['/maintenance/main/holiday/BranchHoliday']);\r\n  }\r\n\r\n  captureDate(dateFromForm, month, year) {\r\n    let date = new Date(month + '1, ' + year);\r\n    let dateValue = (+dateFromForm);\r\n    var d = new Date(year, date.getMonth(), dateValue);\r\n    var responseDate = moment(d).format('YYYY-MM-DD');\r\n    if (responseDate == this.dateAlreadyActive) {\r\n      return\r\n    }\r\n    this.dateAlreadyActive = responseDate;\r\n    this.calendarDate.push(responseDate);\r\n    this.onDatePicked.emit(this.calendarDate);\r\n    if(dateFromForm){\r\n      const dialogRef = this.dialog.open(HolidayListDialogComponent, {\r\n        data: { date: d , holidayData:this.addBranchHolidayFormData.data,action:this.addBranchHolidayFormData.action},\r\n        position: { right: '0' },\r\n        panelClass: 'customHolidayListStyle',\r\n        hasBackdrop: false\r\n      });\r\n  \r\n      dialogRef.afterClosed().subscribe(result => {\r\n        this.apiService.getHolidayData().subscribe(data=>{\r\n          this.updateCalendar(data);\r\n        })\r\n        this.dateAlreadyActive = null;\r\n        if(result.dateUpdated){\r\n          console.log('dateUpdated:: ',result.dateUpdated)\r\n          this. updateCalendar(result.dateUpdated)\r\n        }\r\n      });\r\n    }\r\n   \r\n  }\r\n\r\n}\r\n","<div class=\"d-flex flex-row\">\r\n\t<div fxLayout=\"row\" fxLayoutAlign=\"start start\" fxLayoutGap=\"40px\">\r\n\t\t<button mat-icon-button aria-label=\"bank\">\r\n\t\t\t<mat-icon style=\"color: #AF7AC5 ;\">fiber_manual_record</mat-icon> Bank\r\n\t\t  </button>\r\n\t\t  <button mat-icon-button aria-label=\"common\" >\r\n\t\t\t<mat-icon style=\"color: #E6B0AA ;\">fiber_manual_record</mat-icon> Common\r\n\t\t  </button>\r\n\t\t  <button mat-icon-button aria-label=\"national\">\r\n\t\t\t<mat-icon style=\"color: orange ;\">fiber_manual_record</mat-icon> National\r\n\t\t  </button>\r\n\t\t  <button mat-icon-button aria-label=\"regional\">\r\n\t\t\t<mat-icon style=\"color: #52BE80 ;\">fiber_manual_record</mat-icon>Regional\r\n\t\t  </button>\r\n\t</div> \r\n</div>\r\n<table *ngFor=\"let cArr of calendarArrFinalNew; let i1 = index\" style=\"margin-left: 100px;\">\r\n\t<tr>\r\n\t\t<td *ngFor=\"let cArr1 of cArr; let i2 = index\">\r\n\t\t\t<table>\r\n\t\t\t\t<caption style=\"background-color: #D4E6F1;height: 40px;border-radius:5px;\">\r\n\t\t\t\t\t<h3 style=\"margin-top: 15px;\">{{monthArr[i1][i2]}}</h3>\r\n\t\t\t\t</caption>\r\n\r\n\t\t\t\t<tbody>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<td *ngFor=\"let weekDay of weekdays; let i4 = index\" class=\"childTd\">\r\n\t\t\t\t\t\t\t<button mat-button [disabled]=\"cArr3?.disabled\"\r\n\t\t\t\t\t\t\t\t[ngClass]=\"!cArr3?.disabled ? 'dateButton' : 'dateButtonDisabled'\">\r\n\t\t\t\t\t\t\t\t<h3 style=\"color: #808B96;\">{{weekDay}}</h3>\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t\t<tr *ngFor=\"let cArr2 of cArr1; let i3 = index\">\r\n\t\t\t\t\t\t<td *ngFor=\"let cArr3 of cArr2; let i4 = index\" class=\"childTd\">\r\n\t\t\t\t\t\t\t<button mat-button [ngClass]=\"[cArr3.holidayType=='Common'? 'commonHoliBtn' : 'dateButton', \r\n\t\t\t\t\t\t\tcArr3.holidayType=='Regional'? 'RegionalHoliBtn' : 'dateButton', \r\n\t\t\t\t\t\t\tcArr3.holidayType=='Bank'? 'BankHoliBtn' : 'dateButton', \r\n\t\t\t\t\t\t\tcArr3.holidayType=='National'? 'NationalHoliBtn' : 'dateButton', \r\n\t\t\t\t\t\t\t!cArr3?.disabled ? 'dateButton' : 'dateButtonDisabled']\"\r\n\t\t\t\t\t\t\t\t[disabled]=\"cArr3?.disabled\" *ngIf=\"i4 % 7 == 0\"\r\n\t\t\t\t\t\t\t\t(click)=\" captureDate( cArr3.value,monthArr[i1][i2],year)\">\r\n\t\t\t\t\t\t\t\t<h5 [ngClass]=\"!cArr3?.disabled ? 'h5Red' : 'h5RedDisabled'\">{{ cArr3.value}}</h5>\r\n\t\t\t\t\t\t\t</button>\r\n\r\n\t\t\t\t\t\t\t<button mat-button  [disabled]=\"cArr3?.disabled\"\r\n\t\t\t\t\t\t\t\t[ngClass]=\"[cArr3.holidayType=='Common'? 'commonHoliBtn' : 'dateButton', \r\n\t\t\t\t\t\t\t\tcArr3.holidayType=='Regional'? 'RegionalHoliBtn' : 'dateButton', \r\n\t\t\t\t\t\t\t\tcArr3.holidayType=='Bank'? 'BankHoliBtn' : 'dateButton', \r\n\t\t\t\t\t\t\t\tcArr3.holidayType=='National'? 'NationalHoliBtn' : 'dateButton', \r\n\t\t\t\t\t\t\t\t!cArr3?.disabled ? 'dateButton' : 'dateButtonDisabled']\"\r\n\t\t\t\t\t\t\t\t*ngIf=\"(8 + i4) % 7 == 0\" (click)=\" captureDate( cArr3.value,monthArr[i1][i2],year)\">\r\n\t\t\t\t\t\t\t\t<h5 [ngClass]=\"!cArr3?.disabled ? 'h5Red' : 'h5RedDisabled'\">{{ cArr3.value}}</h5>\r\n\t\t\t\t\t\t\t</button>\r\n\r\n\t\t\t\t\t\t\t<button mat-button *ngIf=\"i4 % 7 != 0 && (8 + i4) % 7 != 0 && monthArr[i1][i2]==currentMonth \r\n\t\t\t\t\t\t\t&& cArr3.value == currentMonthDate\" [disabled]=\"cArr3?.disabled\"\r\n\t\t\t\t\t\t\t\t[ngClass]=\"!cArr3?.disabled ? '' : 'dateButtonDisabled'\"\r\n\t\t\t\t\t\t\t\t(click)=\" captureDate( cArr3.value,monthArr[i1][i2],year)\">\r\n\t\t\t\t\t\t\t\t<h5 style=\"color:black;\"> {{ cArr3.value }}</h5>\r\n\t\t\t\t\t\t\t</button>\r\n\r\n\t\t\t\t\t\t\t<button mat-button *ngIf=\"i4 % 7 != 0 && (8 + i4) % 7 != 0 && monthArr[i1][i2]==currentMonth \r\n\t\t\t\t\t\t\t&& cArr3.value != currentMonthDate\" [disabled]=\"cArr3?.disabled\"\r\n\t\t\t\t\t\t\t\t[ngClass]=\"[cArr3.holidayType=='Common'? 'commonHoliBtn' : 'dateButton', \r\n\t\t\t\t\t\t\t\tcArr3.holidayType=='Regional'? 'RegionalHoliBtn' : 'dateButton', \r\n\t\t\t\t\t\t\t\tcArr3.holidayType=='Bank'? 'BankHoliBtn' : 'dateButton', \r\n\t\t\t\t\t\t\t\tcArr3.holidayType=='National'? 'NationalHoliBtn' : 'dateButton', \r\n\t\t\t\t\t\t\t\t!cArr3?.disabled ? 'dateButton' : 'dateButtonDisabled']\"\r\n\t\t\t\t\t\t\t\t(click)=\" captureDate( cArr3.value,monthArr[i1][i2],year)\">\r\n\t\t\t\t\t\t\t\t<h5 style=\"color:black;\"> {{ cArr3.value }}</h5>\r\n\t\t\t\t\t\t\t</button>\r\n\r\n\t\t\t\t\t\t\t<button mat-button\r\n\t\t\t\t\t\t\t\t*ngIf=\"i4 % 7 != 0 && (8 + i4) % 7 != 0 && monthArr[i1][i2]!=currentMonth\"\r\n\t\t\t\t\t\t\t\t[disabled]=\"cArr3?.disabled\"\r\n\t\t\t\t\t\t\t\t[ngClass]=\"[cArr3.holidayType=='Common'? 'commonHoliBtn' : 'dateButton', \r\n\t\t\t\t\t\t\t\tcArr3.holidayType=='Regional'? 'RegionalHoliBtn' : 'dateButton', \r\n\t\t\t\t\t\t\t\tcArr3.holidayType=='Bank'? 'BankHoliBtn' : 'dateButton', \r\n\t\t\t\t\t\t\t\tcArr3.holidayType=='National'? 'NationalHoliBtn' : 'dateButton', \r\n\t\t\t\t\t\t\t\t!cArr3?.disabled ? 'dateButton' : 'dateButtonDisabled']\"\r\n\t\t\t\t\t\t\t\t(click)=\" captureDate( cArr3.value,monthArr[i1][i2],year)\">\r\n\t\t\t\t\t\t\t\t<h5 style=\"color:black;\"> {{ cArr3.value }}</h5>\r\n\t\t\t\t\t\t\t</button>\r\n\r\n\r\n\r\n\t\t\t\t\t\t</td>\r\n\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t\t\r\n\r\n\t\t\t\t</tbody>\r\n\t\t\t</table>\r\n\t\t</td>\r\n\t</tr>\r\n</table>","import { Component, OnInit } from '@angular/core';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { AppConfirmService } from 'app/shared/services/app-confirm/app-confirm.service';\r\nimport { AppLoaderService } from 'app/shared/services/app-loader/app-loader.service';\r\nimport { Subscription } from 'rxjs';\r\nimport { TillVaultCcybalHispopupComponent } from '../till-vault-ccybal-hispopup/till-vault-ccybal-hispopup.component';\r\n\r\n@Component({\r\n  selector: 'app-till-vault-ccybal-his-summary',\r\n  templateUrl: './till-vault-ccybal-his-summary.component.html',\r\n  styleUrls: ['./till-vault-ccybal-his-summary.component.scss']\r\n})\r\nexport class TillVaultCcybalHisSummaryComponent implements OnInit {\r\n\r\n  public items: any[];\r\n  users: string[] = [];\r\n  currency: string[] = [];\r\n  till: string[] = [];\r\n  branchCode: string[] = [];\r\n  bankCode: string[] = [];\r\n  public getItemSub: Subscription;\r\n  constructor(\r\n    private dialog: MatDialog,\r\n    private snack: MatSnackBar,\r\n    private confirmService: AppConfirmService,\r\n    private loader: AppLoaderService,\r\n    private apiService: ApiService,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.getItems();\r\n    this.getvaulCurrencyBalHistory();\r\n    this.getCurrency();\r\n    this.getBankCode();\r\n    this.getBranchCode();\r\n    this.getTillId();\r\n\r\n  }\r\n  ngOnDestroy() {\r\n    if (this.getItemSub) {\r\n      this.getItemSub.unsubscribe()\r\n    }\r\n  }\r\n  getItems() {\r\n    this.items = this.users;\r\n  }\r\n  openPopUp(data: any = {}, isNew?) {\r\n    let title = isNew ? 'Add new Till Vault Currency Balance History' : 'Update Till Vault Currency Balance History';\r\n    let dialogRef: MatDialogRef<any> = this.dialog.open(TillVaultCcybalHispopupComponent, {\r\n      width: '720px',\r\n      disableClose: true,\r\n      data: {\r\n        title: title,\r\n        payload: data,\r\n        currency: this.currency,\r\n        till: this.till,\r\n        branchCode: this.branchCode,\r\n        bankCode: this.bankCode,\r\n      },\r\n    })\r\n    dialogRef.afterClosed().subscribe(res => {\r\n        if(!res) {\r\n          // If user press cancel\r\n          return;\r\n        }\r\n        if (isNew) {\r\n          this.loader.open();\r\n          this.apiService.saveoftillVaultCurrencyBalHistory(res)\r\n            .subscribe(data => {\r\n              this.items = data;\r\n              this.getvaulCurrencyBalHistory();\r\n              this.loader.close();\r\n              this.snack.open('Record Added!', 'OK', { duration: 4000 })  \r\n            })\r\n        } else {\r\n          this.loader.open();\r\n          this.apiService.saveoftillVaultCurrencyBalHistory( res)\r\n            .subscribe(data => {\r\n              this.items = data;\r\n              this.getvaulCurrencyBalHistory();\r\n              this.loader.close();\r\n              this.snack.open('Record Updated!', 'OK', { duration: 4000 })\r\n            })\r\n        }\r\n      })\r\n  }\r\n  deleteItem(row) {\r\n    this.confirmService.confirm({message: `Delete ${row.entityCode}?`})\r\n      .subscribe(res => {\r\n        if (res) {\r\n          this.loader.open();\r\n          this.apiService.removetillVaultCurrencyBalHistory(row.id)\r\n            .subscribe((res: any) => {        \r\n                }, (err: any) => {''\r\n             \r\n              if (err.status == 200) {\r\n                this.loader.close();\r\n                this.getvaulCurrencyBalHistory();\r\n                this.snack.open('Record deleted!', 'OK', { duration: 4000})\r\n              \r\n                 } })\r\n        }\r\n      })\r\n  }\r\n  getvaulCurrencyBalHistory() {\r\n    this.apiService.gettillCurrencyBalHistoryResp().subscribe((resp) => {\r\n      this.users = resp;\r\n      this.items = this.users;\r\n    });\r\n  }\r\n  getCurrency() {\r\n    this.apiService.getCountryValues().subscribe((resp) => {\r\n      this.currency = resp;\r\n    });\r\n  }\r\n  getBankCode() {\r\n    this.apiService.getBankCode().subscribe((resp) => {\r\n      this.bankCode = resp;\r\n    });\r\n  }\r\n  getBranchCode() {\r\n    this.apiService.getBranchCode().subscribe((resp) => {\r\n      this.branchCode = resp;\r\n    });\r\n  }\r\n  getTillId() {\r\n    this.apiService.getTillId().subscribe((resp) => {\r\n      this.till = resp;\r\n    });\r\n  }\r\n\r\n\r\n}\r\n","<div fxLayout=\"row\" fxLayoutAlign=\"space-arround center\" class=\"ml-16\">\r\n    <span class=\"mat-heading-label \">Till Vault Currency Balance History</span>\r\n    <span fxFlex></span>\r\n    <button mat-flat-button color=\"primary\" (click)=\"openPopUp({}, true)\" class=\"mr-38\">ADD VAULT CURRENCY BALANCE HISTORY</button>\r\n  </div>\r\n  <mat-card class=\"p-0\" > \r\n    <mat-card-content class=\"p-0\">\r\n      <ngx-datatable\r\n            class=\"material ml-0 mr-0\"\r\n            [rows]=\"items\"\r\n            [columnMode]=\"'force'\"\r\n            [headerHeight]=\"50\"\r\n            [footerHeight]=\"50\"\r\n            [scrollbarH]=\"true\"\r\n            [limit]=\"6\"\r\n            [rowHeight]=\"50\">\r\n            <ngx-datatable-column name=\"Entity Code\" [flexGrow]=\"1\">\r\n              <ng-template let-row=\"row\" ngx-datatable-cell-template>\r\n                {{ row?.entityCode }}\r\n              </ng-template>\r\n            </ngx-datatable-column>\r\n            <ngx-datatable-column name=\"Status\" [flexGrow]=\"1\">\r\n              <ng-template let-row=\"row\" ngx-datatable-cell-template>\r\n                <mat-chip mat-sm-chip [color]=\"'primary'\" [selected]=\"row.isActive\">{{row.isActive ? 'active' : 'inactive'}}</mat-chip>\r\n              </ng-template>\r\n            </ngx-datatable-column>\r\n            <ngx-datatable-column name=\"Actions\" [flexGrow]=\"1\">\r\n              <ng-template let-row=\"row\" ngx-datatable-cell-template>\r\n                <button mat-icon-button mat-sm-button color=\"primary\" class=\"mr-16\" (click)=\"openPopUp(row)\"><mat-icon>edit</mat-icon></button>\r\n                <button mat-icon-button mat-sm-button color=\"warn\" (click)=\"deleteItem(row)\"><mat-icon>delete</mat-icon></button>\r\n              </ng-template>\r\n            </ngx-datatable-column>\r\n          </ngx-datatable>\r\n    </mat-card-content>\r\n  </mat-card>\r\n  \r\n\r\n\r\n","import { Component, Inject, OnInit, ɵCodegenComponentFactoryResolver } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { tillDetails } from 'app/shared/models/tillvaultdenom';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { DataService } from 'app/shared/services/data.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-till-vault-denomination',\r\n  templateUrl: './till-vault-denomination.component.html',\r\n  styleUrls: ['./till-vault-denomination.component.scss']\r\n})\r\nexport class TillVaultDenominationComponent implements OnInit {\r\n\r\n  public itemForm: FormGroup;\r\n  countryCurrency: string[]=[];\r\n  // tillId:any[]=[];\r\n  branchCode:string[]=[];\r\n  bankCode:string[]=[];\r\n  denom:  string[] = [];\r\n  currency: string[] = [];\r\n  till: any[] = [];\r\n  currentUser: string;\r\n  vaultStatus: any={};\r\n \r\n  entity: tillDetails[] = [];\r\n  tillData: tillDetails;\r\n  loggedInUser : string;\r\n  auditData : tillDetails;\r\n  isAuditData : boolean = false;\r\n  id: number;\r\n  isEdit: boolean = false;\r\n  readorWrite: boolean=true;\r\n  constructor(\r\n    // @Inject(MAT_DIALOG_DATA) public data: any,\r\n    // public dialogRef: MatDialogRef<TillVaultDenominationComponent>,\r\n    private fb: FormBuilder,\r\n    private router:Router,\r\n    private apiService: ApiService,\r\n    private ls:LocalStoreService,\r\n    private dataService:DataService,\r\n    private snack: MatSnackBar,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.currentUser = this.ls.getItem(\"ICUST_USER\");\r\n    // this.dataService.getTillVaultStatus.subscribe(data =>{\r\n   \r\n    //   this.vaultStatus = typeof this.vaultStatus === 'object' ? data : {};\r\n    // });\r\n    \r\n    setTimeout(() => {  \r\n\r\n      \r\n      this.vaultStatus = JSON.parse(localStorage.getItem('fetchVaultDenom'));\r\n     \r\n      if(this.vaultStatus == null || this.vaultStatus == undefined){\r\n        this.readorWrite=false;\r\n        this.buildItemForm({})\r\n      }       \r\n      else if(this.vaultStatus.id != null || this.vaultStatus.id != undefined){\r\n      // this.loader.open();\r\n      this.isEdit = true;\r\n     \r\n      this.id = this.vaultStatus.id;\r\n      this.auditData = this.vaultStatus\r\n      this.buildItemForm(this.vaultStatus)\r\n  \r\n      this.isAuditData = true;\r\n      this.dataService.setAuditLogData(this.auditData);\r\n    \r\n      // this.loader.close();\r\n      }\r\n    }, 500)\r\n\r\n    this.getCurrency();\r\n    this.getBankCode();\r\n    this.getBranchCode();\r\n    this.getEntityCode();\r\n    this.getDenomCode();\r\n    this.getTillId();\r\n    this.loggedInUser = this.ls.getItem('ICUST_USER').userName;\r\n   \r\n    \r\n  }\r\n  buildItemForm(item) {\r\n    this.itemForm = this.fb.group({\r\n      bankCode: [item?.bankCode || '', Validators.required],\r\n      branchCode: [item?.branchCode || '', Validators.required],\r\n      currency: [item?.currency || '', Validators.required],\r\n      denomCode: [item?.denomCode || '', Validators.required],\r\n      entityCode: [item?.entityCode || '', Validators.required],\r\n      tillId: [item?.tillId || '', Validators.required],\r\n      units: [item?.units || '', Validators.required],\r\n      id: [item?.id || null],\r\n      loggedInuser : [item.loggedInUser || '']\r\n      // isActive: [item.isActive || false]\r\n    })\r\n  }\r\n\r\n  submit() {\r\n    // this.dialogRef.close(this.itemForm.value)\r\n    if(this.itemForm.invalid){\r\n      return;\r\n    }else{\r\n      this.tillData = this.till.find(x => x.tillVaultCode == this.itemForm.value.tillId);\r\n      this.itemForm.value.tillId = this.tillData.id;\r\n      this.itemForm.value.loggedInUser=this.loggedInUser;\r\n      this.apiService.saveTellerVaultDenomination(this.itemForm.value).subscribe((resp) => {\r\n     \r\n      this.router.navigate([`/maintenance/main/tillVaultDenom`]).then(_=>{\r\n          this.snack.open('Data Saved Successfully!', 'OK', \r\n          { duration: 4000 , \r\n            verticalPosition: \"top\",\r\n            horizontalPosition: \"right\",});\r\n        });\r\n      },(err:any) =>{\r\n        this.snack.open(`Error!`, 'OK', { duration: 4000,  \r\n          verticalPosition: \"top\",\r\n          horizontalPosition: \"right\",});\r\n        }\r\n      )\r\n    }  \r\n  }\r\n  deleteRecord(operation){\r\n    Swal.fire(\r\n      {\r\n        //text: 'Unable to process' + 'Error ' + this.responseforfileupload.errorMessage + 'Do you want to Proceed??',\r\n        text: 'You are trying to '+ operation +' record.' + ' Do you want to proceed?',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        // confirmButtonText: 'PROCEED.'\r\n        cancelButtonText: 'NO',\r\n        confirmButtonText: 'YES', 'icon': 'info'\r\n      }\r\n    ).then((result => {\r\n      if(result.isConfirmed==true){\r\n        this.apiService.deleteTellerVaultDenomination(this.auditData.id)\r\n        .subscribe(data => {\r\n          this.router.navigate([`/maintenance/main/tillVaultStatus`]);\r\n        },\r\n        err=>{\r\n          if (err.status == 200) {\r\n            this.snack.open('Record Deleted Successfully', 'OK', {\r\n              duration: 4000,\r\n              verticalPosition: 'top',\r\n              horizontalPosition: 'right'\r\n            });\r\n          }\r\n          this.router.navigate([`/maintenance/main/tillVaultStatus`]);\r\n        \r\n      })\r\n      }}))\r\n   \r\n         \r\n       \r\n  }\r\n  editRecord(){\r\n    this.readorWrite=false;\r\n  }\r\n\r\n  updateRecord(operation) {\r\n    Swal.fire(\r\n      {\r\n        //text: 'Unable to process' + 'Error ' + this.responseforfileupload.errorMessage + 'Do you want to Proceed??',\r\n        text: 'You are trying to '+ operation +' record.' + ' Do you want to proceed?',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        // confirmButtonText: 'PROCEED.'\r\n        cancelButtonText: 'NO',\r\n        confirmButtonText: 'YES', 'icon': 'info'\r\n      }\r\n    ).then((result => {\r\n      if(result.isConfirmed==true){\r\n\r\n        let payload: any = {};\r\n        payload.id = this.id;\r\n        payload.operation = operation;\r\n        payload.loggedInUser = this.loggedInUser;\r\n        this.apiService.getAuditLogsFortillvaultdenomination(payload).subscribe((data) => {\r\n         \r\n          this.auditData = data;\r\n          this.dataService.setAuditLogData(this.auditData);\r\n          this.isAuditData = true;\r\n          this.dataService.sendClickEvent();\r\n          let message = '';\r\n          switch (operation) {\r\n            case 'open':\r\n              message = 'opened'\r\n              break;\r\n            case 'close':\r\n              message = 'closed'\r\n              break;\r\n            case 'auth':\r\n              message = 'authorized'\r\n              break;\r\n            default:\r\n              break;\r\n          }\r\n          this.snack.open(`Record ${message} successfully!'`, \"OK\", {\r\n            duration: 2000,\r\n            verticalPosition: \"top\",\r\n            horizontalPosition: \"right\",\r\n          });\r\n        });\r\n      }}))\r\n  \r\n  }\r\n\r\n  getCurrency() {\r\n    // this.apiService.getCountryValues().subscribe((resp) => {\r\n     \r\n    //   this.currency = resp;\r\n    // });\r\n    this.apiService.getCurrencyDetails().subscribe(data=>{\r\n      console.log(\"Auth currecy details\", data)\r\n      for(let i=0; i<data.length;i++){\r\n        this.currency.push(data[i].currencyId)\r\n      }\r\n      console.log(this.currency);\r\n    })\r\n  }\r\n  getBankCode() {\r\n    this.apiService.getBankCode().subscribe((resp) => {\r\n   //   this.bankCode = resp;\r\n      for(let i=0;i<resp.length;i++){\r\n        if(resp[i].authStatus == 'A'){\r\n          this.bankCode.push(resp[i]);\r\n        }\r\n      }\r\n    });\r\n  }\r\n  getBranchCode() {\r\n    this.apiService.getBranchCode().subscribe((resp) => {\r\n     // this.branchCode = resp;\r\n        for(let i=0;i<resp.length;i++){\r\n        if(resp[i].authStatus == 'A'){\r\n          this.branchCode.push(resp[i]);\r\n        }\r\n      }\r\n    });\r\n  }\r\n  getTillId() {\r\n    let tillOrVault =\"T\";\r\n    this.apiService.getTillData(tillOrVault).subscribe((resp) => {\r\n     \r\n      this.till = resp;\r\n    });\r\n  }\r\n  getEntityCode() {\r\n    this.apiService.getEntityCode().subscribe((resp) => {\r\n     \r\n     // this.entity = resp;\r\n      for(let i=0;i<resp.length;i++){\r\n        if(resp[i].authStatus == 'A'){\r\n          this.entity.push(resp[i]);\r\n        }\r\n      }\r\n    });\r\n  }\r\n  getDenomCode() {\r\n    this.apiService.fetchDenomMasterAuthRecs().subscribe((resp: any) => {\r\n      console.log(resp);\r\n      for(let i=0; i<resp.length;i++){\r\n        if(resp[i].authStatus==='A'){\r\n          this.denom.push(resp[i]);\r\n        }\r\n      }\r\n      console.log(this.denom);\r\n    });\r\n  }\r\n  alhanumericValidation(event){\r\n    var inp = String.fromCharCode(event.keyCode);\r\n    if (/[a-zA-Z0-9]/.test(inp)) {\r\n      return true;\r\n    } else {\r\n      event.preventDefault();\r\n      return false;\r\n    }\r\n  }\r\n  goBack() {\r\n    localStorage.removeItem('fetchVaultDenom');\r\n  \r\n\r\n    this.router.navigate([\"/maintenance/main/tillVaultDenom\"]);\r\n  }\r\n  dataByEntityCode(index,data){\r\n    return data.bankCode;\r\n  }\r\n}\r\n","<h1 class=\"main-head\"><small class=\"small-head\">Home > Maintenance Summary > Till Vault Denomination Maintenance > <span *ngIf=\"!isEdit\">Add</span><span *ngIf=\"isEdit\">Edit</span> Till Vault Denomination Details</small>\r\n</h1>\r\n<div fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"mt-16\">\r\n  <button mat-icon-button (click)=\"goBack()\">\r\n    <mat-icon>arrow_back</mat-icon>\r\n  </button>\r\n  <h1 *ngIf=\"!isEdit\" class=\"add-text\">Add Till Vault Denomination Details</h1>\r\n    <h1 *ngIf=\"isEdit\" class=\"add-text\">Edit Till Vault Denomination Details</h1>\r\n</div>\r\n\r\n<mat-card>\r\n  <mat-card-content>\r\n    <!-- <h1 *ngIf=\"!isEdit\" matDialogTitle>Add Denomination Details</h1>\r\n    <h1 *ngIf=\"isEdit\" matDialogTitle>Edit Denomination Details</h1> -->\r\n    <form [formGroup]=\"itemForm\" *ngIf=\"itemForm\" class=\"m-333\">\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\" fxLayoutGap=\"15px\">\r\n        <div fxFlex=\"33.33\" *ngIf=\"!readorWrite\">\r\n          <mat-label>Entity Code *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <!-- <mat-select name=\"entityCode\"  (keypress)=\"alhanumericValidation($event)\" [formControl]=\"itemForm.controls['entityCode']\" class=\"selectOption\"> -->\r\n              <mat-select name=\"entityCode\" formControlName=\"entityCode\">\r\n                <mat-option value=\"\">Select</mat-option>\r\n              <mat-option *ngFor=\"let data of entity\"  [value]=\"data.entityCode\">\r\n              {{data?.entityCode}}\r\n              </mat-option>\r\n          </mat-select>\r\n            <mat-error\r\n            *ngIf=\"itemForm.get('entityCode').touched && !itemForm.get('entityCode').valid\">\r\n            Entity Code is Required!\r\n        </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n        <div fxFlex=\"33.33\" *ngIf=\"readorWrite\">\r\n          <mat-label>Entity Code *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input matInput readonly\r\n            formControlName=\"entityCode\">\r\n          </mat-form-field>\r\n        </div>\r\n        <div fxFlex=\"33.33\" *ngIf=\"!readorWrite\">\r\n          <mat-label>Bank Code *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">       \r\n            <!-- <mat-select name=\"bankCode\" [formControl]=\"itemForm.controls['bankCode']\" class=\"selectOption\"> -->\r\n              <mat-select name=\"bankCode\" formControlName=\"bankCode\">\r\n                <mat-option value=\"\">Select</mat-option>\r\n              <mat-option *ngFor=\"let data of bankCode; trackBy:dataByBank\" [value]=\"data.bankCode\">\r\n                {{data?.bankCode}}\r\n              </mat-option>\r\n            </mat-select>\r\n            <mat-error\r\n            *ngIf=\"itemForm.get('bankCode').touched && !itemForm.get('bankCode').valid\">\r\n           Bank code is Required\r\n        </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n        <div fxFlex=\"33.33\" *ngIf=\"readorWrite\">\r\n          <mat-label>Bank Code *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input matInput readonly\r\n            formControlName=\"bankCode\">\r\n          </mat-form-field>\r\n        </div>\r\n\r\n        <div fxFlex=\"33.33\" *ngIf=\"!readorWrite\">\r\n          <mat-label>Branch Code *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">           \r\n            <!-- <mat-select name=\"branchCode\" [formControl]=\"itemForm.controls['branchCode']\" class=\"selectOption\"> -->\r\n              <mat-select name=\"branchCode\" formControlName=\"branchCode\">\r\n                <mat-option value=\"\">Select</mat-option>\r\n              <mat-option *ngFor=\"let data of branchCode\" [value]=\"data.branchCode\">\r\n                {{data?.branchCode}}\r\n              </mat-option>\r\n            </mat-select>\r\n            <mat-error\r\n            *ngIf=\"itemForm.get('branchCode').touched && !itemForm.get('branchCode').valid\">\r\n           Branch code is Required!\r\n        </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n        <div fxFlex=\"33.33\" *ngIf=\"readorWrite\">\r\n          <mat-label>Branch Code *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input matInput readonly\r\n            formControlName=\"branchCode\">\r\n          </mat-form-field>\r\n        </div>\r\n\r\n      </div>\r\n\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\" fxLayoutGap=\"15px\">\r\n        <div fxFlex=\"33.33\" *ngIf=\"!readorWrite\" >\r\n          <mat-label>Till Id *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">          \r\n            <!-- <mat-select name=\"tillId\" [formControl]=\"itemForm.controls['tillId']\" class=\"selectOption\"> -->\r\n              <mat-select name=\"tillId\" formControlName=\"tillId\">\r\n                <mat-option value=\"\">Select</mat-option>\r\n              <mat-option *ngFor=\"let data of till\" [value]=\"data.tillVaultCode\">\r\n                {{data?.tillVaultCode}}\r\n              </mat-option>\r\n            </mat-select>\r\n            <mat-error\r\n              *ngIf=\"itemForm.get('tillId').touched && !itemForm.get('tillId').valid\">\r\n              Till Id is Required!\r\n          </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n        <div fxFlex=\"33.33\" *ngIf=\"readorWrite\">\r\n          <mat-label>Till Id *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input matInput readonly\r\n            formControlName=\"tillId\">\r\n          </mat-form-field>\r\n        </div>\r\n       \r\n        <div fxFlex=\"33.33\" *ngIf=\"!readorWrite\">\r\n          <mat-label>Currency *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">            \r\n            <!-- <mat-select name=\"currency\" [formControl]=\"itemForm.controls['currency']\" class=\"selectOption\"> -->\r\n              <mat-select name=\"currency\" formControlName=\"currency\">\r\n              <mat-option value=\"\">Select</mat-option>\r\n              <mat-option *ngFor=\"let data of currency\" [value]=\"data.currencyCode\">\r\n                {{data?.currencyCode}}\r\n              </mat-option>\r\n            </mat-select>\r\n            <mat-error\r\n            *ngIf=\"itemForm.get('currency').touched && !itemForm.get('currency').valid\">\r\n            Currency is Required!\r\n        </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n        <div fxFlex=\"33.33\" *ngIf=\"readorWrite\">\r\n          <mat-label>Currency *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input matInput readonly\r\n            formControlName=\"currency\">\r\n          </mat-form-field>\r\n        </div>\r\n\r\n        <div fxFlex=\"33.33\" *ngIf=\"!readorWrite\">\r\n          <mat-label>Denomination Code *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <!-- <input matInput name=\"denomCode\" [formControl]=\"itemForm.controls['denomCode']\"> -->\r\n            <mat-select name=\"denomCode\"  formControlName=\"denomCode\">\r\n              <mat-option value=\"\">Select</mat-option>\r\n              <mat-option *ngFor=\"let data of denom;\"  [value]=\"data.denomValue\">\r\n            {{data?.denomValue}}\r\n            </mat-option>\r\n            </mat-select>\r\n              <mat-error\r\n              *ngIf=\"itemForm.get('denomCode').touched && !itemForm.get('denomCode').valid\">\r\n              Denomination Code is Required\r\n          </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n        <div fxFlex=\"33.33\" *ngIf=\"readorWrite\">\r\n          <mat-label>Denomination Code *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input matInput readonly\r\n            formControlName=\"denomCode\">\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n\r\n      <div fxLayoutAlign=\"space-between center\" fxLayoutGap=\"15px\">\r\n        <div fxFlex=\"33.33\" >\r\n          <mat-label>Units *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input matInput type=\"number\" [readonly]=\"readorWrite\" name=\"units\" min=\"0\" [formControl]=\"itemForm.controls['units']\">\r\n            <mat-error\r\n              *ngIf=\"itemForm.get('units').touched && !itemForm.get('units').valid\">\r\n              Units is Required!\r\n            </mat-error>\r\n          </mat-form-field>\r\n          \r\n        </div>\r\n\r\n      </div>\r\n\r\n     \r\n      <div fxLayout=\"row wrap\" fxLayout.lt-sm=\"column\">\r\n        <div fxFlex=\"100\" class=\"mt-16\" fxLayoutAlign=\"end center\">\r\n          <button mat-raised-button *ngIf=\"!isEdit\" color=\"primary\" [disabled]=\"itemForm.invalid\" (click)=\"submit()\">SAVE</button>\r\n          &nbsp;\r\n          <div [hidden]=\"readorWrite\" >\r\n            <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\"  [disabled]= \"!(itemForm.invalid || itemForm.dirty)\"(click)=\"submit()\">\r\n               Save\r\n              </button>&nbsp;&nbsp;\r\n          </div>\r\n          <div [hidden]=\"!readorWrite || auditData?.recordStatus == 'Close'\">\r\n            <button *ngIf=\"isEdit\" type=\"button\"  mat-raised-button color=\"primary\" (click)=\"editRecord()\">\r\n              Edit\r\n            </button>&nbsp;&nbsp;\r\n          </div>\r\n          <div *ngIf=\"auditData?.authStatus == 'Unauthorized' && readorWrite\" [hidden]=\"!readorWrite\">\r\n            <button *ngIf=\"isEdit\" type=\"button\"  mat-raised-button color=\"primary\" (click)=\"updateRecord('auth')\">\r\n              Authorize\r\n            </button>&nbsp;&nbsp;\r\n          </div> \r\n          <div *ngIf=\"auditData?.recordStatus == 'Close' && auditData?.oneTimeAuth != 'No'\" [hidden]=\"!readorWrite\">\r\n            <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"updateRecord('open')\">\r\n              Reopen\r\n            </button>&nbsp;&nbsp;\r\n          </div>\r\n          <div *ngIf=\"auditData?.recordStatus == 'Open' && auditData?.oneTimeAuth != 'No'\" [hidden]=\"!readorWrite\">\r\n            <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"updateRecord('close')\">\r\n              Close\r\n            </button>&nbsp;&nbsp;\r\n          </div>\r\n          <div *ngIf=\"auditData?.oneTimeAuth == 'No'\" [hidden]=\"!readorWrite\">\r\n            <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"deleteRecord('delete')\">\r\n              Delete\r\n            </button> &nbsp;&nbsp;\r\n          </div>\r\n         \r\n          <button\r\n            mat-raised-button\r\n            color=\"warn\"\r\n            type=\"button\"\r\n            (click)=\"goBack()\"\r\n          >\r\n            Exit\r\n          </button>\r\n\r\n        </div>\r\n      </div>\r\n    </form>\r\n\r\n\r\n  </mat-card-content>\r\n</mat-card>\r\n\r\n<div class=\"mt-32\">\r\n  <app-audit-log *ngIf=\"isAuditData\" #auditLog></app-audit-log>\r\n</div>\r\n","import { Routes } from '@angular/router';\r\nimport { BaseDenominationSummaryComponent } from './base-denomination/base-denomination-summary/base-denomination-summary.component';\r\nimport { AccountTypeCrudTableComponent } from './account-type/account-type-crud-table/account-type-crud-table.component';\r\n\r\nimport { DemonMasterCrudNgxTableComponent } from './denominationMaster/demon-master-crud-ngx-table/demon-master-crud-ngx-table.component';\r\nimport { MaintenanceHomeComponent } from './maintenance-home.component';\r\nimport { TillVaultCcySummryComponent } from './till-vault-ccy-bal/till-vault-ccy-summry/till-vault-ccy-summry.component';\r\nimport { TillVaultSummaryComponent } from './till-vault-config/till-vault-summary/till-vault-summary.component';\r\nimport { TillVaultMasterSummaryComponent } from './till-vault-master/till-vault-master-summary/till-vault-master-summary/till-vault-master-summary.component';\r\nimport { TillVaultDenominationSummaryComponent } from './tillVaultDenomination/till-vault-denomination-summary/till-vault-denomination-summary.component';\r\nimport { TxnCashMasterCrudTableComponent } from './transaction-cash-master/txn-cash-master-crud-table/txn-cash-master-crud-table.component';\r\nimport { TransactionDenominationSummaryComponent } from './TransactionDenominationHistory/transaction-denomination-summary/transaction-denomination-summary.component';\r\nimport { TransactionTypeCrudTableComponent } from './transaction-type/transaction-type-crud-table/transaction-type-crud-table.component';\r\nimport { TillVaultStatusSummaryComponent } from './till-vault-status/till-vault-status-summary/till-vault-status-summary.component';\r\nimport { CrudNgxTableComponent } from './branch/crud-ngx-table.component';\r\nimport { TillVaultBranchMapSummaryComponent } from './tillVaultBranchMap/till-vault-branch-map-summary/till-vault-branch-map-summary.component';\r\nimport { TillVaultCcybalHispopupComponent } from './till-vault-ccy-bal-history/till-vault-ccybal-hispopup/till-vault-ccybal-hispopup.component';\r\nimport { TillVaultCcybalHisSummaryComponent } from './till-vault-ccy-bal-history/till-vault-ccybal-his-summary/till-vault-ccybal-his-summary.component';\r\nimport { BankDetailsComponent } from './bank/bank-details/bank-details.component';\r\nimport { BankListComponent } from './bank/bank-list/bank-list.component';\r\nimport { MainHomeComponent } from './main-home/main-home.component';\r\nimport { NgxTablePopupComponent } from './branch/ngx-table-popup/ngx-table-popup.component';\r\nimport { CountryStateMaintenanceComponent } from './country-state-maintenance/country-state-maintenance.component';\r\nimport { CountryStatePopupComponent } from './country-state-maintenance/country-state-popup/country-state-popup.component';\r\n\r\nimport { HolidayMaintenanceComponent } from './holiday-maintenance/holiday-maintenance.component';\r\nimport { BranchHolidayComponent } from './holiday-maintenance/branch-holiday/branch-holiday.component';\r\nimport { CurrencyHolidayComponent } from './holiday-maintenance/currency-holiday/currency-holiday.component';\r\nimport { ClearingHolidayComponent } from './holiday-maintenance/clearing-holiday/clearing-holiday.component';\r\nimport { AddHolidayComponent } from './holiday-maintenance/branch-holiday/add-holiday/add-holiday.component';\r\nimport { EntityMaintenanceComponent } from './entity-maintenance/entity-maintenance.component';\r\nimport { StateMaintenanceComponent } from './state-maintenance/state-maintenance.component';\r\nimport { StatePopupComponent } from './state-maintenance/state-popup/state-popup.component';\r\nimport { AddEntityDetailsComponent } from './entity-maintenance/add-entity-details/add-entity-details.component';\r\nimport { BranchHolidayPopupComponent } from './holiday-maintenance/branch-holiday/branch-holiday-popup/branch-holiday-popup.component';\r\nimport { SubMenuComponent } from './main-home/sub-menu/sub-menu.component';\r\nimport { CommonHolidayComponent } from './holiday-maintenance/branch-holiday/common-holiday/common-holiday.component';\r\nimport { TransactionTypePopupTableComponent } from './transaction-type/transaction-type-table-popup/transaction-type-popup-table/transaction-type-popup-table.component';\r\nimport { AccountTypeTablePopupComponent } from './account-type/account-type-table-popup/account-type-table-popup.component';\r\nimport { TillVaultBranchMapComponent } from './tillVaultBranchMap/till-vault-branch-map/till-vault-branch-map.component';\r\nimport { TillVaultStatusComponent } from './till-vault-status/till-vault-status/till-vault-status.component';\r\nimport { AddBranchComponent } from './holiday-maintenance/branch-holiday/add-branch/add-branch.component';\r\nimport { DenomMasterTablePopupComponent } from './denominationMaster/demon-master-crud-ngx-table/denom-master-table-popup/denom-master-table-popup.component';\r\nimport { TillVaultCcyPopupComponent } from './till-vault-ccy-bal/till-vault-ccy-popup/till-vault-ccy-popup.component';\r\nimport { TxnCashMasterTablePopupComponent } from './transaction-cash-master/txn-cash-master-table-popup/txn-cash-master-table-popup.component';\r\nimport { TillVaultDenominationComponent } from './tillVaultDenomination/till-vault-denomination/till-vault-denomination.component';\r\nimport { TillVaultPopupComponent } from './till-vault-config/till-vault-popup/till-vault-popup.component';\r\nimport { BillerInfoMaintenanceComponent } from './biller-info-maintenance/biller-info-maintenance.component';\r\nimport { AddOrEditBillerInfoComponent } from './biller-info-maintenance/add-or-edit-biller-info/add-or-edit-biller-info.component';\r\nimport { BaseDenominationPopupComponent } from './base-denomination/base-denomination-popup/base-denomination-popup.component';\r\nimport { TillVaultMasterPopupComponent } from './till-vault-master/till-vault-master-popup/till-vault-master-popup/till-vault-master-popup.component';\r\nimport { TxnchargesMaintenanceComponent } from './txncharges-maintenance/txncharges-maintenance.component';\r\nimport { AddTxnchargesComponent } from './txncharges-maintenance/add-txncharges/add-txncharges.component';\r\nimport { TillVaultCcyDemonBalComponent } from './till-vault-ccy-demon-bal/till-vault-ccy-demon-bal.component';\r\nimport { AddTillvaultCcyDemonbalComponent } from './till-vault-ccy-demon-bal/add-tillvault-ccy-demonbal/add-tillvault-ccy-demonbal.component';\r\nimport { ProductMaintenanceComponent } from './product-maintenance/product-maintenance.component';\r\nimport { AddProductMaintenanceComponent } from './product-maintenance/add-product-maintenance/add-product-maintenance.component';\r\nimport { CurrencyMaintSummaryComponent } from './currency-maint-summary/currency-maint-summary.component';\r\nimport { AddCurrencyMaintComponent } from './currency-maint-summary/add-currency-maint/add-currency-maint.component';\r\nimport { CurrencyPairMaintenanceComponent } from './currency-pair-maintenance/currency-pair-maintenance.component';\r\nimport { AddCurrencyPairMaintanenceComponent } from './currency-pair-maintenance/add-currency-pair-maintanence/add-currency-pair-maintanence.component';\r\nimport { CustomCalendarArrTypeComponent } from './holiday-maintenance/branch-holiday/custom-calendar-arr-type/custom-calendar-arr-type.component';\r\nimport { CurrencyPairaRatesMaintenanceComponent } from './currency-paira-rates-maintenance/currency-paira-rates-maintenance.component';\r\nimport { AddCurrencyPairRatesMaintenanceComponent } from './currency-paira-rates-maintenance/add-currency-pair-rates-maintenance/add-currency-pair-rates-maintenance.component';\r\nimport { MenusComponent } from './menus/menus.component';\r\nimport { MenuDetailsComponent } from './menus/menu-details/menu-details.component';\r\nimport { UserMaintenanceComponent } from './user-maintenance/user-maintenance.component';\r\nimport { AddUserMaintenanceComponent } from './user-maintenance/add-user-maintenance/add-user-maintenance.component';\r\nimport { MenuDialogComponent } from './menus/menu-dialog/menu-dialog.component';\r\nimport { AddEditMenuDetailsComponent } from './menus/add-edit-menu-details/add-edit-menu-details.component';\r\nimport { RoleMaintenanceSummaryComponent } from './role-maintenance-summary/role-maintenance-summary.component';\r\nimport { RoleMaintenanceComponent } from './role-maintenance/role-maintenance.component';\r\nimport { SecurityPolicyComponent } from './security-policy/security-policy.component';\r\nimport { AddSecuritypolicyComponent } from './add-securitypolicy/add-securitypolicy.component';\r\nimport { AddEditSecurityPolicyComponent } from './add-edit-security-policy/add-edit-security-policy.component';\r\nimport { CustomerCategoryComponent } from './customer-category/customer-category.component';\r\nimport { CustomerChargeCategoryComponent } from './customer-charge-category/customer-charge-category.component';\r\nimport { CutomerCategoryCreateComponent } from './customer-category/cutomer-category-create/cutomer-category-create.component';\r\nimport { CutomerChargeCategoryCreateComponent } from './customer-charge-category/cutomer-charge-category-create/cutomer-charge-category-create.component';\r\nimport { CityMaintenanceComponent } from './city-maintenance/city-maintenance.component';\r\nimport { AddEditCityComponent } from './city-maintenance/add-edit-city/add-edit-city.component';\r\nexport const maintenanceRoutes: Routes = [\r\n  {\r\n    path: '',\r\n    component: MaintenanceHomeComponent,\r\n    children: [\r\n      {\r\n        path: '',\r\n        redirectTo: 'main',\r\n        pathMatch: 'full'\r\n      }, {\r\n        path: 'main',\r\n        component: MainHomeComponent,\r\n        data: { title: 'Branch Maintenance', breadcrumb: '' }\r\n      }, {\r\n        path: 'main/sub/:id',\r\n        component: SubMenuComponent,\r\n        data: { title: 'Sub Menu', breadcrumb: '' }\r\n      }, {\r\n        path: 'main/branch',\r\n        component: CrudNgxTableComponent,\r\n        data: { title: 'Branch Summary', breadcrumb: '' }\r\n      }, \r\n      {\r\n        path: 'main/securityPolicy',\r\n        component: SecurityPolicyComponent,\r\n        data: { title: 'Security Policy', breadcrumb: '' }\r\n      },\r\n      {\r\n        path: 'main/addEditsecurityPolicy',\r\n        component: AddEditSecurityPolicyComponent,\r\n        data: { title: 'Add Security Policy', breadcrumb: '' }\r\n      },\r\n     {\r\n        path: 'main/branch/add',\r\n        component: NgxTablePopupComponent,\r\n        data: { title: 'Branch New', breadcrumb: '' }\r\n      },\r\n      //  {\r\n      //   path: 'main/branch/edit/:id',\r\n      //   component: NgxTablePopupComponent,\r\n      //   data: { title: 'Branch Edit', breadcrumb: '' }\r\n      // },\r\n      {\r\n        path: 'main/countryState',\r\n        component: CountryStateMaintenanceComponent,\r\n        data: { title: 'CountryState Summary', breadcrumb: '' }\r\n      },\r\n      {\r\n        path: 'main/countryStatepopup',\r\n        component: CountryStatePopupComponent,\r\n        data: { title: 'CountryState popup', breadcrumb: '' }\r\n      },\r\n      {\r\n        path: 'main/State',\r\n        component: StateMaintenanceComponent,\r\n        data: { title: 'StateMaintenance', breadcrumb: '' }\r\n      },\r\n      {\r\n        path: 'main/statepopup',\r\n        component: StatePopupComponent,\r\n        data: { title: 'statePopup', breadcrumb: '' }\r\n      },\r\n      {\r\n        path: 'main/cityMaintenance',\r\n        component: CityMaintenanceComponent,\r\n        data: { title: 'City Maintenance', breadcrumb: '' }\r\n      },\r\n      {\r\n        path: 'main/addEditCity',\r\n        component: AddEditCityComponent,\r\n        data: { title: 'Add/Edit City', breadcrumb: '' }\r\n      },\r\n\r\n      {\r\n        path: 'till-vault-config',\r\n        component: TillVaultSummaryComponent,\r\n        data: { title: 'Till Vault Configuration Summary', breadcrumb: '' }\r\n      },\r\n      {\r\n        path: 'home/till-Vault',\r\n        component: TillVaultDenominationSummaryComponent,\r\n        data: { title: 'Till Vault Summary', breadcrumb: '' }\r\n      },\r\n      {\r\n        path: 'home/till-vault-ccy-bal',\r\n        component: TillVaultCcySummryComponent,\r\n        data: { title: 'Till Vault Currency Balance Summary', breadcrumb: '' }\r\n      },\r\n      {\r\n        path: 'home/till-vault-ccybal-history',\r\n        component: TillVaultCcybalHisSummaryComponent,\r\n        data: { title: 'Till Vault Currency Balance History Summary', breadcrumb: '' }\r\n      },\r\n      {\r\n        path: 'home/till-Vault-branch-map',\r\n        component: TillVaultBranchMapSummaryComponent,\r\n        data: { title: 'Till Vault Branch Map Summary', breadcrumb: '' }\r\n      },\r\n      {\r\n        path: 'transaction-denom',\r\n        component: TransactionDenominationSummaryComponent,\r\n        data: { title: 'Transaction Denomination Summary', breadcrumb: '' }\r\n      },\r\n      {\r\n        path: 'home/base-denom-summary',\r\n        component: BaseDenominationSummaryComponent,\r\n        data: { title: 'Base Denomination Summary', breadcrumb: '' }\r\n      },\r\n      {\r\n        path: 'denomMaster',\r\n        component: DemonMasterCrudNgxTableComponent,\r\n        data: { title: 'Denom Summary', breadcrumb: '' }\r\n      },\r\n      {\r\n        path: 'transaction-type',\r\n        component: TransactionTypeCrudTableComponent,\r\n        data: { title: 'Transaction Type Summary', breadcrumb: '' }\r\n      },\r\n      {\r\n        path: 'account-type',\r\n        component: AccountTypeCrudTableComponent,\r\n        data: { title: 'Account Type Summary', breadcrumb: '' }\r\n      },\r\n      {\r\n        path: 'till-vault-master',\r\n        component: TillVaultMasterSummaryComponent,\r\n        data: { title: 'Account Type Summary', breadcrumb: '' }\r\n      },\r\n      {\r\n        path: 'home/till-vault-status',\r\n        component: TillVaultStatusSummaryComponent,\r\n        data: { title: 'Till Vault Status', breadcrumb: '' }\r\n      },\r\n      {\r\n        path: 'txn-cash-master',\r\n        component: TxnCashMasterCrudTableComponent,\r\n        data: { title: 'Transaction Cash Master Summary', breadcrumb: '' }\r\n      },\r\n      {\r\n        path: 'main/holiday',\r\n        component: HolidayMaintenanceComponent,\r\n        data: { title: 'Holiday Maintenance', breadcrumb: '' }\r\n      },\r\n      {\r\n        path: 'main/holiday/BranchHoliday',\r\n        component: BranchHolidayComponent,\r\n        data: { title: 'Branch Holiday', breadcrumb: '' }\r\n      },\r\n      {\r\n        path: 'main/holiday/BranchHoliday/branchPopup',\r\n        component: BranchHolidayPopupComponent,\r\n        data: { title: 'Update Branch Holiday', breadcrumb: '' }\r\n      },\r\n      {\r\n        path: 'main/holiday/currencyholiday',\r\n        component: CurrencyHolidayComponent,\r\n        data: { title: 'Currency Holiday', breadcrumb: '' }\r\n      },\r\n      {\r\n        path: 'main/holiday/clearingholiday',\r\n        component: ClearingHolidayComponent,\r\n        data: { title: 'Clearing Holiday', breadcrumb: '' }\r\n      },\r\n      {\r\n        path: 'main/holiday/BranchHoliday/addHoliday',\r\n        component: AddHolidayComponent,\r\n        data: { title: 'New Holiday', breadcrumb: '' }\r\n      },\r\n      {\r\n        path: 'main/holiday/BranchHoliday/commonHoliday',\r\n        component: CommonHolidayComponent,\r\n        data: { title: 'Common Holiday', breadcrumb: '' }\r\n      },\r\n      {\r\n        path: 'main/holiday/BranchHoliday/addBranch',\r\n        component: AddBranchComponent,\r\n        data: { title: 'Add Branch Holiday', breadcrumb: '' }\r\n      },\r\n      {\r\n        path: 'main/bank/list',\r\n        component: BankListComponent\r\n      },\r\n      {\r\n        path: 'main/bank/add',\r\n        component: BankDetailsComponent\r\n      },\r\n      {\r\n        path: 'bank/:id',\r\n        component: BankDetailsComponent\r\n      },\r\n      {\r\n        path: 'main/entity/list',\r\n        component: EntityMaintenanceComponent\r\n      },\r\n      {\r\n        path: 'main/entity/add',\r\n        component: AddEntityDetailsComponent\r\n      },\r\n      {\r\n        path: 'main/tillVaultltMaster',\r\n        component: TillVaultMasterSummaryComponent\r\n      },\r\n      {\r\n        path: 'main/tillVaultltMaster/add',\r\n        component: TillVaultMasterPopupComponent\r\n      },\r\n      {\r\n        path: 'main/tillVaultltBranchMap/add',\r\n        component: TillVaultBranchMapComponent\r\n      },\r\n      {\r\n        path: 'main/tillVaultltBranchMap/:id',\r\n        component: TillVaultBranchMapComponent\r\n      },\r\n      {\r\n        path: 'main/tillVaultltBranch',\r\n        component: TillVaultBranchMapSummaryComponent\r\n      },\r\n      {\r\n        path: 'main/tillVaultConfig',\r\n        component: TillVaultSummaryComponent\r\n      },\r\n      {\r\n        path: 'main/tillVaultConfig/add',\r\n        component: TillVaultPopupComponent\r\n      },\r\n      {\r\n        path: 'main/tillVaultConfig/:id',\r\n        component: TillVaultPopupComponent\r\n      },\r\n      {\r\n        path: 'main/denominationMaster',\r\n        component: DemonMasterCrudNgxTableComponent\r\n      },\r\n      {\r\n        path: 'main/denominationMaster/add',\r\n        component: DenomMasterTablePopupComponent\r\n      },\r\n      {\r\n        path: 'main/denominationMaster/:id',\r\n        component: DenomMasterTablePopupComponent\r\n      },\r\n      {\r\n        path: 'main/tillVaultCcyBal',\r\n        component: TillVaultCcySummryComponent\r\n      },\r\n\r\n      {\r\n        path: 'main/tillVaultCcyBal/add',\r\n        component: TillVaultCcyPopupComponent,\r\n      },\r\n      {\r\n        path: 'main/tillVaultCcyBal/:id',\r\n        component: TillVaultCcyPopupComponent,\r\n      },\r\n      {\r\n        path: 'main/tillVaultStatus',\r\n        component: TillVaultStatusSummaryComponent\r\n      },\r\n      {\r\n        path: 'main/tillVaultStatus/:id',\r\n        component: TillVaultStatusComponent\r\n      },\r\n      {\r\n        path: 'main/tillVaultStatus/add',\r\n        component: TillVaultStatusComponent\r\n      },\r\n      {\r\n        path: 'main/tillVaultDenom',\r\n        component: TillVaultDenominationSummaryComponent\r\n      },\r\n      {\r\n        path: 'main/tillVaultDenom/add',\r\n        component: TillVaultDenominationComponent\r\n      },\r\n      {\r\n        path: 'main/tillVaultDenom/:id',\r\n        component: TillVaultDenominationComponent\r\n      },\r\n      {\r\n        path: 'main/transactionCashMaster',\r\n        component: TxnCashMasterCrudTableComponent\r\n      },\r\n      {\r\n        path: 'main/transactionCashMaster/add',\r\n        component: TxnCashMasterTablePopupComponent\r\n      },\r\n      {\r\n        path: 'main/transactionCashMaster/:id',\r\n        component: TxnCashMasterTablePopupComponent\r\n      },\r\n      {\r\n        path: 'main/accountType',\r\n        component: AccountTypeCrudTableComponent\r\n      },\r\n      {\r\n        path: 'main/accountType/add',\r\n        component: AccountTypeTablePopupComponent\r\n      },\r\n      {\r\n        path: 'main/accountType/:id',\r\n        component: AccountTypeTablePopupComponent\r\n      },\r\n      {\r\n        path: 'main/baseDenomination',\r\n        component: BaseDenominationSummaryComponent\r\n      },\r\n      {\r\n        path: 'main/billerInfoMaint',\r\n        component: BillerInfoMaintenanceComponent\r\n      },\r\n      {\r\n        path: 'main/addOrEditBillerInfo',\r\n        component: AddOrEditBillerInfoComponent\r\n      },\r\n      {\r\n        path: 'main/baseDenomination/add',\r\n        component: BaseDenominationPopupComponent\r\n      },\r\n      {\r\n        path: 'main/baseDenomination/:id',\r\n        component: BaseDenominationPopupComponent\r\n      },\r\n      {\r\n        path: 'main/transactionCharges',\r\n        component: TxnchargesMaintenanceComponent,\r\n      },\r\n      {\r\n        path: 'main/transactionCharges/addtxnCharges',\r\n        component: AddTxnchargesComponent,\r\n      },\r\n      {\r\n        path: 'main/tillVaultCcyDenomBal/addTillVaultCcyDenomBal',\r\n        component: AddTillvaultCcyDemonbalComponent,\r\n      }\r\n      ,\r\n      {\r\n        path: 'main/tillVaultCcyDenomBal',\r\n        component: TillVaultCcyDemonBalComponent,\r\n      },\r\n      {\r\n        path: 'main/product',\r\n        component: ProductMaintenanceComponent,\r\n      },\r\n      {\r\n        path: 'main/product/addProduct',\r\n        component: AddProductMaintenanceComponent,\r\n      },\r\n      {\r\n        path: 'main/currencyMaint',\r\n        component: CurrencyMaintSummaryComponent\r\n      },\r\n      {\r\n        path: 'main/currencyMaint/add',\r\n        component: AddCurrencyMaintComponent\r\n      },\r\n      {\r\n        path: 'main/currencyPairMaintenance',\r\n        component: CurrencyPairMaintenanceComponent,\r\n      },\r\n      {\r\n        path: 'main/currencyPairMaintenance/addCurrencyPair',\r\n        component: AddCurrencyPairMaintanenceComponent,\r\n      },\r\n      {\r\n        path: 'main/currencyPairRateMaintenance',\r\n        component: CurrencyPairaRatesMaintenanceComponent,\r\n      },\r\n      {\r\n        path: 'main/addCurrencyPairRates',\r\n        component: AddCurrencyPairRatesMaintenanceComponent,\r\n      },\r\n      {\r\n        path: 'main/holiday/addHolidayNew',\r\n        component: CustomCalendarArrTypeComponent,\r\n      }, {\r\n        path: \"main/menu-config\",\r\n        component: MenusComponent,\r\n        data: { title: \"Menu List\" }\r\n      },\r\n      {\r\n        path: \"main/menu-config/:id\",\r\n        component: MenuDetailsComponent,\r\n        data: { title: \"Menu Modification\" }\r\n      },\r\n      {\r\n        path: 'main/userMaintenance',\r\n        component: UserMaintenanceComponent\r\n      },\r\n      {\r\n        path: 'main/customerCategory',\r\n        component: CustomerCategoryComponent\r\n      },\r\n      {\r\n        path: 'main/customerCreateCategory',\r\n        component: CutomerCategoryCreateComponent\r\n      },\r\n      {\r\n        path: 'main/customerChargeCategory',\r\n        component: CustomerChargeCategoryComponent\r\n      },\r\n      {\r\n        path: 'main/customerChargeCategoryCreate',\r\n        component: CutomerChargeCategoryCreateComponent\r\n      },\r\n      {\r\n        path: 'main/userMaintenance/addUserMaintenance',\r\n        component: AddUserMaintenanceComponent\r\n      },\r\n      {\r\n        path: 'main/addEditMenu/menuDialog',\r\n        component: MenuDialogComponent\r\n      },\r\n      {\r\n        path: 'main/addEditMenu',\r\n        component: AddEditMenuDetailsComponent\r\n      },\r\n      {\r\n        path: 'main/roleMaintenance',\r\n        component: RoleMaintenanceSummaryComponent,\r\n      },\r\n      {\r\n        path: 'main/addRoleMaintenance',\r\n        component:RoleMaintenanceComponent,\r\n      }\r\n    ]\r\n  }\r\n];\r\n\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { baseDenom } from 'app/shared/models/auditlogs';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { AppLoaderService } from 'app/shared/services/app-loader/app-loader.service';\r\nimport { DataService } from 'app/shared/services/data.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport Swal from 'sweetalert2';\r\n\r\n\r\n@Component({\r\n  selector: 'app-base-denomination-popup',\r\n  templateUrl: './base-denomination-popup.component.html',\r\n  styleUrls: ['./base-denomination-popup.component.scss']\r\n})\r\n\r\nexport class BaseDenominationPopupComponent implements OnInit {\r\n  arrayCurrency: string[] = [];\r\n  public baseDenomForm: FormGroup;\r\n  baseDenominationId: number;\r\n  baseDenomStatus: any = {};\r\n  id: number;\r\n  loggedInUser : string;\r\n  auditData : baseDenom;\r\n  isAuditData : boolean = false;\r\n  show = false;\r\n  isEdit: boolean = false;\r\n  currency: string[] = [];\r\n  readorWrite: boolean=true;\r\n  denom: string[] = [];\r\n  \r\n  constructor(\r\n    // @Inject(MAT_DIALOG_DATA) public data: any,\r\n    // public dialogRef: MatDialogRef<BaseDenominationPopupComponent>,\r\n    private fb: FormBuilder,\r\n    private apiService: ApiService,\r\n    private loader: AppLoaderService,\r\n    private snack: MatSnackBar,\r\n    private router:Router,\r\n    private ls:LocalStoreService,\r\n    private dataService:DataService,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    // this.currentUser = this.ls.getItem(\"ICUST_USER\");\r\n    // this.dataService.getBaseDenom.subscribe(data =>{\r\n    //   this.baseDenomStatus = typeof this.baseDenomStatus === 'object' ? data : {};\r\n    // });\r\n    \r\n    setTimeout(() => {  \r\n      this.baseDenomStatus = JSON.parse(localStorage.getItem('fetchBaseDenomValue'));\r\n      if(this.baseDenomStatus == null || this.baseDenomStatus == undefined){\r\n        this.readorWrite=false;\r\n        this.buildItemForm({})\r\n      }       \r\n      else if(this.baseDenomStatus.baseDenominationId != null || this.baseDenomStatus.baseDenominationId != undefined) {\r\n        this.loader.open();\r\n        this.isEdit = true;\r\n      this.id = this.baseDenomStatus.baseDenominationId;\r\n      this.buildItemForm(this.baseDenomStatus)\r\n      this.auditData = this.baseDenomStatus;\r\n      this.isAuditData = true;\r\n      this.dataService.setAuditLogData(this.auditData);\r\n      this.loader.close();\r\n      }\r\n    }, 1000)\r\n    this.getDenomCode();\r\n    this.getCurrencyValue();\r\n    this.loggedInUser = this.ls.getItem('ICUST_USER').userName;\r\n  }\r\n  getCurrencyValue(){\r\n    // this.apiService.getCountryValues().subscribe((currencyValues : any)=> {\r\n    //   this.currency=currencyValues;\r\n    //   });\r\n    this.apiService.getCurrencyDetails().subscribe(data=>{\r\n      console.log(\"Auth currecy details\", data)\r\n      for(let i=0; i<data.length;i++){\r\n        this.currency.push(data[i].currencyId)\r\n      }\r\n      console.log(this.currency);\r\n    })\r\n  }\r\n  getDenomCode() {\r\n    this.apiService.fetchDenomMasterAuthRecs().subscribe((resp: any) => {\r\n      console.log(resp);\r\n      for(let i=0; i<resp.length;i++){\r\n        if(resp[i].authStatus==='A'){\r\n          this.denom.push(resp[i].denomCode);\r\n        }\r\n      }\r\n      console.log(this.denom);\r\n    });\r\n  }\r\n  buildItemForm(item) {\r\n    this.baseDenomForm = this.fb.group({\r\n      denomination: [item?.denomination || '', [Validators.required, Validators.minLength(1), Validators.maxLength(5)]],\r\n      currency: [item?.currency || '', [Validators.required]],\r\n      isActive: [item?.isActive || false],\r\n      baseDenominationId: [item?.baseDenominationId || null],\r\n      loggedInuser : [item.loggedInUser || '']\r\n    })\r\n  }\r\n\r\n  // alphakeyPress(event: any) {\r\n  //   const pattern = /[0-9a-zA-Z]/;\r\n  //   let inputChar = String.fromCharCode(event.charCode);\r\n  //   if (!pattern.test(inputChar)) {\r\n  //     event.preventDefault();\r\n  //   }\r\n  // }\r\n  deleteRecord(operation){\r\n    Swal.fire(\r\n      {\r\n        //text: 'Unable to process' + 'Error ' + this.responseforfileupload.errorMessage + 'Do you want to Proceed??',\r\n        text: 'You are trying to '+ operation +' record.' + ' Do you want to proceed?',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        // confirmButtonText: 'PROCEED.'\r\n        cancelButtonText: 'NO',\r\n        confirmButtonText: 'YES', 'icon': 'info'\r\n      }\r\n    ).then((result => {\r\n      if(result.isConfirmed==true){\r\n        this.apiService.removeBaseDenominationById(this.auditData.baseDenominationId)\r\n        .subscribe(data => {\r\n          this.router.navigate([`/maintenance/main/tillVaultStatus`]);\r\n        },\r\n        err=>{\r\n          if (err.status == 200) {\r\n            this.snack.open('Record Deleted Successfully', 'OK', {\r\n              duration: 4000,\r\n              verticalPosition: 'top',\r\n              horizontalPosition: 'right'\r\n            });\r\n          }\r\n          this.router.navigate([`/maintenance/main/tillVaultStatus`]);\r\n        \r\n      })\r\n      }}))\r\n   \r\n         \r\n       \r\n  }\r\n  editRecord(){\r\n    this.readorWrite=false;\r\n  }\r\n\r\n  updateRecord(operation) {\r\n    Swal.fire(\r\n      {\r\n        //text: 'Unable to process' + 'Error ' + this.responseforfileupload.errorMessage + 'Do you want to Proceed??',\r\n        text: 'You are trying to '+ operation +' record.' + ' Do you want to proceed?',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        // confirmButtonText: 'PROCEED.'\r\n        cancelButtonText: 'NO',\r\n        confirmButtonText: 'YES', 'icon': 'info'\r\n      }\r\n    ).then((result => {\r\n      if(result.isConfirmed==true){\r\n        let payload: any = {};\r\n        payload.id = this.id;\r\n        payload.operation = operation;\r\n        payload.loggedInUser = this.loggedInUser;\r\n        this.apiService.getAuditLogsForBaseDenomination(payload).subscribe((data) => {\r\n          this.auditData = data;\r\n          this.dataService.setAuditLogData(this.auditData);\r\n          this.isAuditData = true;\r\n          this.dataService.sendClickEvent();\r\n          let message = '';\r\n          switch (operation) {\r\n            case 'open':\r\n              message = 'opened'\r\n              break;\r\n            case 'close':\r\n              message = 'closed'\r\n              break;\r\n            case 'auth':\r\n              message = 'authorized'\r\n              break;\r\n            default:\r\n              break;\r\n          }\r\n          this.snack.open(`Record ${message} successfully!'`, \"OK\", {\r\n            duration: 2000,\r\n            verticalPosition: \"top\",\r\n            horizontalPosition: \"right\",\r\n          });\r\n        });\r\n      }}))\r\n   \r\n  }\r\n\r\n  submit() {\r\n    if(this.baseDenomForm.invalid){\r\n      return;\r\n    }else{\r\n      this.loader.open();\r\n      this.baseDenomForm.value.loggedInUser = this.loggedInUser;\r\n      this.apiService.saveBaseDenomination(this.baseDenomForm.value).subscribe((resp) => {\r\n      this.loader.close();\r\n      this.router.navigate([`/maintenance/main/baseDenomination`]).then(_=>{\r\n          this.snack.open('Data Saved Successfully!', 'OK', \r\n          { duration: 4000 , \r\n            verticalPosition: \"top\",\r\n            horizontalPosition: \"right\",});\r\n        });\r\n      },(err:any) =>{\r\n        this.loader.close();\r\n        this.snack.open(`Error!`, 'OK', { duration: 4000,  \r\n          verticalPosition: \"top\",\r\n          horizontalPosition: \"right\",});\r\n        }\r\n      )\r\n    }\r\n    \r\n  }\r\n  _keyPress(event: any) {\r\n    const pattern = /[0-9]/;\r\n    let inputChar = String.fromCharCode(event.charCode);\r\n    if (!pattern.test(inputChar)) {\r\n      event.preventDefault();\r\n\r\n    }\r\n  }\r\n\r\n  goBack(){\r\n    localStorage.removeItem('fetchBaseDenomValue');\r\n    this.router.navigate([`/maintenance/main/baseDenomination`]);\r\n  }\r\n \r\n\r\n  dataByCurrency(index,data){\r\n    return data.currencyCode;\r\n  }\r\n\r\n}\r\n","<h1 class=\"main-head\"><small class=\"small-head\">Home > Maintenance Summary > Base Denomination Maintenance > <span *ngIf=\"!isEdit\">Add</span><span *ngIf=\"isEdit\">Edit</span> Base Denomination Details</small>\r\n<div fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"mt-16\">\r\n  <button mat-icon-button (click)=\"goBack()\">\r\n    <mat-icon>arrow_back</mat-icon>\r\n  </button>\r\n  <h1 *ngIf=\"!isEdit\" class=\"add-text\">Add Base Denomination Details</h1>\r\n  <h1 *ngIf=\"isEdit\" class=\"add-text\">Edit Base Denomination Details</h1>\r\n</div>\r\n\r\n<mat-card>\r\n  <mat-card-content>\r\n    <!-- <h1 *ngIf=\"!isEdit\" matDialogTitle>Add Base Denomination Details</h1>\r\n    <h1 *ngIf=\"isEdit\" matDialogTitle>Edit Base Denomination Details</h1> -->\r\n    <form [formGroup]=\"baseDenomForm\" *ngIf=\"baseDenomForm\" class=\"m-333\">\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\" fxLayoutGap=\"15px\">\r\n        <div fxFlex=\"50\" *ngIf=\"!readorWrite\">\r\n          <mat-label>Denomination *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n              \r\n              <mat-select name=\"denomination\" [formControl]=\"baseDenomForm.controls['denomination']\">\r\n                <mat-option value=\"\">Select</mat-option>\r\n                <mat-option *ngFor=\"let data of denom;\"  [value]=\"data\">\r\n              {{data}}\r\n              </mat-option>\r\n          </mat-select>\r\n            <mat-error *ngIf=\"baseDenomForm.get('denomination').touched && !baseDenomForm.get('denomination').valid\">\r\n              Denomination is Required!\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n        <div fxFlex=\"50\" *ngIf=\"readorWrite\">\r\n         <mat-label>Denomination *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n         <input readonly matInput name=\"denomination\"  maxlength=\"3\" (keypress)=_keyPress($event)\r\n              [formControl]=\"baseDenomForm.controls['denomination']\">\r\n            </mat-form-field>\r\n        </div>\r\n\r\n        <div fxFlex=\"50\" *ngIf=\"!readorWrite\">\r\n          <mat-label>Currency *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <!--<input matInput name=\"currency\" minlength=\"3\" maxlength=\"3\" (keypress)=alphakeyPress($event)\r\n              [formControl]=\"baseDenomForm.controls['currency']\">-->\r\n              <mat-select name=\"currency\" [formControl]=\"baseDenomForm.controls['currency']\" class=\"full-width\"\r\n               >\r\n                <mat-option *ngFor=\"let data of currency; trackBy:dataByCurrency\"  [value]=\"data.currencyCode\">\r\n                {{data?.currencyCode}}\r\n                </mat-option>\r\n            </mat-select>\r\n            <mat-error *ngIf=\"baseDenomForm.get('currency').touched && !baseDenomForm.get('currency').valid\">\r\n              Currency is Required!\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n        <div fxFlex=\"50\" *ngIf=\"readorWrite\">\r\n          <mat-label>Currency *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input matInput name=\"currency\" readonly\r\n              [formControl]=\"baseDenomForm.controls['currency']\">\r\n              \r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\" fxLayoutGap=\"15px\">\r\n        <div fxFlex=\"33.33\" appearance=\"fill\">\r\n          <mat-slide-toggle [formControl]=\"baseDenomForm.controls['isActive']\" [disabled]=\"readorWrite\">Active Customer</mat-slide-toggle>\r\n        </div>\r\n      </div>\r\n\r\n      <div fxLayout=\"row wrap\" fxLayout.lt-sm=\"column\">\r\n        <div fxFlex=\"100\" class=\"mt-16\" fxLayoutAlign=\"end center\">\r\n          <button mat-raised-button *ngIf=\"!isEdit\" color=\"primary\" [disabled]=\"baseDenomForm.invalid\" (click)=\"submit()\">SAVE</button>\r\n          &nbsp;\r\n          <div [hidden]=\"readorWrite\" >\r\n            <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\"  [disabled]= \"!(baseDenomForm.invalid || baseDenomForm.dirty)\"(click)=\"submit()\">\r\n               Save\r\n              </button>&nbsp;&nbsp;\r\n          </div>\r\n          <div [hidden]=\"!readorWrite || auditData?.recordStatus == 'Close'\">\r\n            <button *ngIf=\"isEdit\" type=\"button\"  mat-raised-button color=\"primary\" (click)=\"editRecord()\">\r\n              Edit\r\n            </button>&nbsp;&nbsp;\r\n          </div>\r\n          <div *ngIf=\"auditData?.authStatus == 'Unauthorized' && readorWrite\" [hidden]=\"!readorWrite\">\r\n            <button *ngIf=\"isEdit\" type=\"button\"  mat-raised-button color=\"primary\" (click)=\"updateRecord('auth')\">\r\n              Authorize\r\n            </button>&nbsp;&nbsp;\r\n          </div> \r\n          <div *ngIf=\"auditData?.recordStatus == 'Close' && auditData?.oneTimeAuth != 'No'\" [hidden]=\"!readorWrite\">\r\n            <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"updateRecord('open')\">\r\n              Reopen\r\n            </button>&nbsp;&nbsp;\r\n          </div>\r\n          <div *ngIf=\"auditData?.recordStatus == 'Open' && auditData?.oneTimeAuth != 'No'\" [hidden]=\"!readorWrite\">\r\n            <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"updateRecord('close')\">\r\n              Close\r\n            </button>&nbsp;&nbsp;\r\n          </div>\r\n          <div *ngIf=\"auditData?.oneTimeAuth == 'No'\" [hidden]=\"!readorWrite\">\r\n            <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"deleteRecord('delete')\">\r\n              Delete\r\n            </button> &nbsp;&nbsp;\r\n          </div>\r\n         \r\n          <button\r\n            mat-raised-button\r\n            color=\"warn\"\r\n            type=\"button\"\r\n            (click)=\"goBack()\"\r\n          >\r\n            Exit\r\n          </button>\r\n\r\n        </div>\r\n      </div>\r\n    </form>\r\n\r\n\r\n  </mat-card-content>\r\n</mat-card>\r\n\r\n<div class=\"mt-32\">\r\n  <app-audit-log *ngIf=\"isAuditData\" #auditLog></app-audit-log>\r\n</div>","import { Component, OnInit,ElementRef, ViewChild } from '@angular/core';\r\nimport { LiveAnnouncer } from '@angular/cdk/a11y';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MatSort, Sort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { Router } from '@angular/router';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { AppConfirmService } from 'app/shared/services/app-confirm/app-confirm.service';\r\nimport { DataService } from 'app/shared/services/data.service';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-currency-pair-maintenance',\r\n  templateUrl: './currency-pair-maintenance.component.html',\r\n  styleUrls: ['./currency-pair-maintenance.component.scss']\r\n})\r\nexport class CurrencyPairMaintenanceComponent implements OnInit {\r\n  @ViewChild('searchVal') searchVal: ElementRef;\r\n  selectedFilterIndex : number = 0;\r\n\r\n  dataSource = new MatTableDataSource();\r\n  displayedColumns: string[] = ['id','bankCode', 'entityCode', 'currency1', 'currency2',  'oneTimeAuth', 'authStatus', 'recordStatus', 'action'];\r\n\r\n  filterByOption: { key: string, value: string }[] = [\r\n    { key: 'bankCode', value: 'Bank Code' },\r\n    { key: 'entityCode', value: 'Entity Code' },\r\n    { key: 'currency1', value: 'Currency 1' },\r\n    { key: 'currency2', value: 'Currency 2'}\r\n  ];\r\n\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  // bankCode: any;\r\n  // entityCode: any;\r\n  // currencies: any;\r\n  currencies: string[] = [];\r\n  bankCode: string[] = [];\r\n  entityCode:string[] = [];\r\n  users: any[] = [];\r\n  public items: any[];\r\n  entity: any;\r\n  tillVaultMasterValues: any;\r\n  fetchTillVault: any;\r\n  fetchCurrencyPair:any;\r\n  currencyPairMaintValues:any;\r\n  public getItemSub: Subscription;\r\n  id:any;\r\n  constructor(private router: Router, private _liveAnnouncer: LiveAnnouncer, private confirmService: AppConfirmService, \r\n    private apiService: ApiService, private snack: MatSnackBar,private dataService:DataService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getBranchCurrency();\r\n    this.getBankCode();\r\n    this.getEntityDropdown();\r\n    this.getItems();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.getItemSub) {\r\n      this.getItemSub.unsubscribe()\r\n    }\r\n  }\r\n\r\n\r\n  getItems() {\r\n    this.apiService.getCurrencyPair().subscribe((currencyPairInfo : any)=> {\r\n      if(currencyPairInfo){  \r\n        for(let i=0;i<currencyPairInfo.length;i++){\r\n          if(currencyPairInfo[i].authStatus == 'U'){\r\n            currencyPairInfo[i].authStatus = 'Unauthorized'\r\n          }\r\n          if(currencyPairInfo[i].authStatus == 'A') {\r\n            currencyPairInfo[i].authStatus = 'Authorized'\r\n          } \r\n          if(currencyPairInfo[i].recordStatus == 'O'){\r\n            currencyPairInfo[i].recordStatus = 'Open'\r\n          } \r\n          if(currencyPairInfo[i].recordStatus == 'C'){\r\n            currencyPairInfo[i].recordStatus = 'Closed'\r\n          }\r\n        }\r\n      this.currencyPairMaintValues = currencyPairInfo;\r\n        this.items =  this.currencyPairMaintValues;\r\n        console.log(\"items4::\", this.items);\r\n        this.dataSource = new MatTableDataSource(currencyPairInfo);\r\n        this.dataSource.paginator = this.paginator;\r\n        this.dataSource.sort = this.sort;\r\n      }\r\n      });\r\n  \r\n  }\r\n\r\n  onFileChange(event) {\r\n    console.log('event', event.path[0].files[0]);\r\n    const file: File = event.path[0].files[0];\r\n    const uploadData = new FormData();\r\n    uploadData.append('screenType', 'currencyPair');\r\n    uploadData.append('file', file);\r\n    this.apiService.uploadExelFile(uploadData).subscribe((response) => {\r\n      this.getItems();\r\n      console.log(response);\r\n      this.snack.open(`File Uploaded Successfully`, \"OK\", {\r\n        duration: 4000,\r\n        verticalPosition: \"top\",\r\n        horizontalPosition: \"right\",\r\n      });\r\n    });\r\n    \r\n  }\r\n  fetchCurrencyPairById(){\r\n    this.apiService.getCurrencyPairById(this.id).subscribe((resp) =>{\r\n     console.log(\"currencyPairById\",resp);\r\n     this.fetchCurrencyPair=resp;\r\n    })\r\n    console.log(this.fetchCurrencyPair)\r\n    this.dataService.sendNavParam(this.fetchCurrencyPair);\r\n    this.router.navigate([`/maintenance/main/currencyPairMaintenance/addCurrencyPair/${this.id}`]);\r\n  }\r\n  getBankCode() {\r\n    this.apiService.getBankCode().subscribe((resp) => {\r\n      this.bankCode = resp;\r\n    });\r\n  }\r\n  getEntityDropdown(){\r\n    this.apiService.getEntityDropdown().subscribe((data) => {\r\n      this.entityCode = data;\r\n      console.log(\"Entity Code\",this.entityCode)  \r\n    });\r\n    \r\n  }\r\n\r\n  getBranchCurrency(){\r\n    this.apiService.getCountryValues().subscribe(_list =>{\r\n      this.currencies = _list;\r\n    },(err:any) =>{\r\n      console.error(\"Error\", err);\r\n    })\r\n  }\r\n  \r\n  addNew(){\r\n    this.router.navigate([\"/maintenance/main/currencyPairMaintenance/addCurrencyPair\"]);\r\n  }\r\n\r\n  doFilter(filterBy, e){\r\n    console.log(filterBy,e);\r\n    this.filterTable(filterBy);\r\n    this.applyFilter(e);\r\n  }\r\n  applyFilter(event: Event) {\r\n     \r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    console.log(\"filterValue\",filterValue)\r\n    this.dataSource.filter = filterValue.trim().toLocaleLowerCase();\r\n  }\r\n\r\n  clearFilter(){\r\n    this.dataSource.filter = '';\r\n    this.searchVal.nativeElement.value = '';\r\n    this.selectedFilterIndex = 0;\r\n   }\r\n\r\n   filterTable(filterBy) {\r\n   \r\n    this.dataSource.filterPredicate = (data: any, filter: string): boolean => {\r\n      console.log('data :: ',data[filterBy]);\r\n      if(data[filterBy] !=null){\r\n      return (\r\n        data[filterBy].trim().toLocaleLowerCase().includes(filter)\r\n      )}\r\n    }\r\n  }\r\n\r\n   announceSortChange(sortState: Sort) {\r\n    if (sortState.direction) {\r\n      this._liveAnnouncer.announce(`Sorted ${sortState.direction}ending`);\r\n    } else {\r\n      this._liveAnnouncer.announce('Sorting cleared');\r\n    }\r\n  }\r\n  openEdit(data: any = {},isEdit : string) {\r\n    console.log(\"data\",isEdit);\r\n    console.log(\".id\",data.id);\r\n    console.log(\"item1::\",data);\r\n    \r\n    this.router.navigate([\"/maintenance/main/currencyPairMaintenance/addCurrencyPair\"],{ queryParams: { id: data.id, isEdit : isEdit } });\r\n  }\r\n\r\n  deleteItem(element) {\r\n    console.log(\"element\",element.id);\r\n    this.confirmService.confirm({message: `Delete  ${element.id}?`})\r\n      .subscribe(res => {\r\n        if (res) {\r\n          this.apiService.deleteCurrencyPair(element.id)\r\n            .subscribe(data => {\r\n              this.getItems();\r\n            },\r\n              err=>{\r\n                if (err.status == 200) {\r\n                  this.snack.open('Record Deleted Successfully', 'OK', {\r\n                    duration: 4000,\r\n                    verticalPosition: 'top',\r\n                    horizontalPosition: 'right'\r\n                  });\r\n                 \r\n                }\r\n            })  \r\n        } \r\n      });\r\n  }\r\n  \r\n  goBack(){\r\n    this.router.navigate([\"/maintenance/main\"]);\r\n  }\r\n \r\n}\r\n","<h1 class=\"main-head\"><small class=\"small-head\">Home > Maintenance Summary > Currency Pair Maintenance  </small></h1>\r\n  <div fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"mt-24\">\r\n    <button mat-icon-button (click)=\"goBack()\">\r\n        <mat-icon>arrow_back</mat-icon>\r\n      </button> \r\n      <span class=\"text-large\">\r\n        Currency Pair Maintenance\r\n      </span>\r\n  </div>\r\n  \r\n  <mat-card class=\"mt-32\">\r\n   <div >\r\n    <table>\r\n      <tr>\r\n        <td>\r\n          <h2>\r\n            Currency Pairs\r\n          </h2>\r\n        </td>\r\n      </tr>\r\n      <tr>\r\n        <td>\r\n          <div class=\"highlight\">\r\n          </div>\r\n        </td>\r\n      </tr>\r\n    </table>\r\n       <span fxFlex></span>\r\n       <button mat-icon-button [matMenuTriggerFor]=\"menu\">\r\n         <mat-icon>more_vert</mat-icon>\r\n       </button>\r\n       <mat-menu #menu=\"matMenu\">\r\n         <div class=\"upload_botton\">\r\n          <button type=\"button\" mat-menu-item>Upload</button>\r\n          <input\r\n            type=\"file\"\r\n            accept=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\"\r\n            class=\"btn btn-success\"\r\n            (change)=\"onFileChange($event)\"\r\n          />\r\n        </div>\r\n         <button mat-menu-item>\r\n           <span>Download</span>\r\n         </button>\r\n       </mat-menu>\r\n    </div>\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"space-arround center\" class=\"ml-16 mt-32\">\r\n      <div fxLayout=\"row\" fxLayoutGap=\"10px\">\r\n       <div>\r\n         <mat-form-field appearance=\"fill\">\r\n           <mat-label>Filter By</mat-label>\r\n           <mat-select name=\"filterBy\" #filterBy [(ngModel)]=\"selectedFilterIndex\" placeholder=\"Filter By\">\r\n            <!-- <mat-select name=\"filterBy\" #filterBy [(ngModel)]=\"selectedFilterIndex\"> -->\r\n             <mat-option value=\"0\">Select</mat-option>\r\n             <mat-option *ngFor=\"let filter of filterByOption\" value=\"{{filter.key}}\">\r\n               {{filter.value}}\r\n             </mat-option>\r\n           </mat-select>\r\n         </mat-form-field>\r\n       </div>\r\n       <div>\r\n         <mat-form-field appearance=\"fill\">\r\n           <mat-label>Search</mat-label>\r\n           <input matInput #searchVal (keyup)=\"doFilter(filterBy.value,$event)\" placeholder=\"Search\">\r\n           <!-- <input matInput #searchVal (keyup)=\"doFilter(filterBy.value,$event)\"> -->\r\n           <mat-icon matSuffix>search</mat-icon>\r\n         </mat-form-field>\r\n       </div>\r\n       <div style=\"padding-top: 3px;\">\r\n         <button mat-flat-button color=\"warn\" (click)=\"clearFilter()\" style=\"height: 45px;\">Clear Filter</button>\r\n       </div>\r\n       <div>\r\n        <button mat-flat-button color=\"primary\" class=\"mr-38\" (click)=\"addNew()\"  style=\"height: 45px; margin-left: 15cm;\" >ADD NEW\r\n\r\n            </button>\r\n      </div>\r\n     </div>\r\n   </div>\r\n   <div class=\"mat-elevation-z0\">\r\n     <mat-table class=\"w-full\" [dataSource]=\"dataSource\" matSort (matSortChange)=\"announceSortChange($event)\">\r\n  \r\n      <ng-container matColumnDef=\"id\">\r\n        <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Currency Pair Id\"> Currency Pair Id\r\n        </mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\"> {{element.id}} </mat-cell>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"bankCode\">\r\n         <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Bank Code\"> Bank Code\r\n         </mat-header-cell>\r\n         <mat-cell *matCellDef=\"let element\"> {{element.bankCode}} </mat-cell>\r\n       </ng-container>\r\n  \r\n       <ng-container matColumnDef=\"entityCode\">\r\n         <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Entity Code\"> Entity Code\r\n         </mat-header-cell>\r\n         <mat-cell *matCellDef=\"let element\"> {{element.entityCode}} </mat-cell>\r\n       </ng-container>\r\n  \r\n       <ng-container matColumnDef=\"currency1\">\r\n         <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Currency 1\">Currency 1\r\n            </mat-header-cell>\r\n         <mat-cell *matCellDef=\"let element\"> {{element.currency1}} </mat-cell>\r\n       </ng-container>\r\n       <ng-container matColumnDef=\"currency2\">\r\n        <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Currency 2\">Currency 2\r\n           </mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\"> {{element.currency2}} </mat-cell>\r\n      </ng-container>\r\n       <ng-container matColumnDef=\"oneTimeAuth\">\r\n         <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by One Time Auth\"> One Time Auth\r\n          </mat-header-cell>\r\n         <mat-cell *matCellDef=\"let element\"> {{element.oneTimeAuth}} </mat-cell>\r\n       </ng-container>\r\n       <ng-container matColumnDef=\"authStatus\">\r\n         <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Auth Status\"> Auth Status\r\n          </mat-header-cell>\r\n         <mat-cell *matCellDef=\"let element\"> {{element.authStatus}} </mat-cell>\r\n       </ng-container>\r\n       <ng-container matColumnDef=\"recordStatus\">\r\n         <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Record Status\"> Record Status\r\n          </mat-header-cell>\r\n         <mat-cell *matCellDef=\"let element\"> {{element.recordStatus}} </mat-cell>\r\n       </ng-container>\r\n  \r\n       <ng-container matColumnDef=\"action\">\r\n         <mat-header-cell *matHeaderCellDef>Action</mat-header-cell>\r\n         <mat-cell *matCellDef=\"let element\">\r\n           <div>\r\n            <mat-icon color=\"primary\" style=\"cursor: pointer;\"  (click)=\"openEdit(element)\" >edit</mat-icon>\r\n         </div>&nbsp;&nbsp;\r\n         <div>\r\n          <mat-icon color=\"warn\" style=\"cursor: pointer;\"  (click)=\"deleteItem(element)\" >delete</mat-icon>\r\n         </div>\r\n         </mat-cell>\r\n       </ng-container>\r\n  \r\n       <mat-header-row *matHeaderRowDef=\"displayedColumns;\"></mat-header-row>\r\n       <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\r\n     </mat-table>\r\n     <mat-paginator [pageSizeOptions]=\"[10,20,30]\" showFirstLastButtons></mat-paginator>\r\n   </div>\r\n  </mat-card>\r\n     \r\n  \r\n\r\n\r\n\r\n","import { ChangeDetectorRef, Component, Inject, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { AppLoaderService } from 'app/shared/services/app-loader/app-loader.service';\r\nimport { DataService } from 'app/shared/services/data.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { TransactionTypeCrudTableComponent } from '../../transaction-type/transaction-type-crud-table/transaction-type-crud-table.component';\r\n\r\n@Component({\r\n  selector: 'app-menu-dialog',\r\n  templateUrl: './menu-dialog.component.html',\r\n  styleUrls: ['./menu-dialog.component.scss']\r\n})\r\nexport class MenuDialogComponent implements OnInit {\r\n  menuForm: FormGroup;\r\n  parentMenus: any = [];\r\n  loggedInUser: any;\r\n  isEdit:boolean=false;\r\n  parentId: number;\r\n\r\n  constructor(private cdr: ChangeDetectorRef,\r\n    private apiService: ApiService,\r\n    private fb: FormBuilder,\r\n    private dialogue: MatDialog,\r\n    private dataService: DataService,\r\n    private ls: LocalStoreService,\r\n    private loader: AppLoaderService,\r\n    private snack: MatSnackBar,\r\n    private router: Router,\r\n    private route: ActivatedRoute,) { }\r\n\r\n  ngOnInit(): void {\r\n    this.loggedInUser = this.ls.getItem('ICUST_USER');\r\n    this.dataService.getchildMenuDetails().subscribe((data: any)=>{\r\n      console.log(data);\r\n      if(data){\r\n        this.isEdit=true;\r\n        this.buildMenuForm(data);\r\n      }else{\r\n        this.isEdit=false;\r\n        this.buildMenuForm({});\r\n      }     \r\n    })\r\n    this.route.queryParamMap.subscribe((params: any) => {\r\n      this.parentId=params.get('parenId');\r\n      console.log(\"param\",params)\r\n     \r\n    })\r\n    // this.buildMenuForm(this.data);\r\n   \r\n    this.getParentMenus();\r\n  }\r\n\r\n  buildMenuForm(item: any) {\r\n    this.menuForm = this.fb.group({\r\n      id: [item.id || null],\r\n      screenCode: [item.screenCode || \"\", Validators.required],\r\n      screenName: [item.screenName || \"\", Validators.required],\r\n      parentId: [item.parentId || 0, Validators.required],\r\n      routing: [item.routing || \"\", Validators.required],\r\n      status: true,\r\n    });\r\n  }\r\n\r\n  getParentMenus() {\r\n    this.apiService.getMaintenanceParentMenu().subscribe((res: any) => {\r\n      this.parentMenus = res;\r\n    }, (err: any) => {\r\n\r\n    })\r\n  }\r\n  save() {\r\n    if (this.menuForm.invalid) {\r\n      return;\r\n    }\r\n    let payload: any = {};\r\n    payload = this.menuForm.value;\r\n    payload.loggedInUser = this.loggedInUser.userName;\r\n    this.loader.open();\r\n    this.apiService.upsertMenu(this.menuForm.value).subscribe(res => {\r\n      this.loader.close();\r\n      this.snack.open('Data Saved Successfully!', 'OK',\r\n        {\r\n          duration: 4000,\r\n          verticalPosition: \"top\",\r\n          horizontalPosition: \"right\",\r\n        });\r\n\r\n    }, err => {\r\n      this.loader.close();\r\n      this.snack.open('Unable to Save!', 'Error',\r\n        {\r\n          duration: 4000,\r\n          verticalPosition: \"top\",\r\n          horizontalPosition: \"right\",\r\n        });\r\n     \r\n    })\r\n  }\r\n\r\n  close() {\r\n   \r\n  }\r\n  goBack(){\r\n    this.router.navigate([`/maintenance/main/menu-config/:id`],{ queryParams: { id: this.parentId } });\r\n  }\r\n\r\n}\r\n","\r\n  <h1 class=\"main-head\"><small class=\"small-head\">Home >  Maintenance Summary > Menu Maintenance > Edit Menu Information</small></h1>\r\n  <div fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"mt-16\">\r\n    <button mat-icon-button (click)=\"goBack()\">\r\n        <mat-icon>arrow_back</mat-icon>\r\n    </button>\r\n    <h1>Edit Menu Information</h1>\r\n</div>\r\n  <form class=\"mt-32\" [formGroup]=\"menuForm\">\r\n    <div fxLayout=\"row wrap\" fxLayout.lt-sm=\"column\">\r\n      <div fxFlex=\"33.33\" class=\"pr-16\">\r\n        <mat-label>ScreenName </mat-label>\r\n        <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n          <input matInput name=\"name\" formControlName=\"screenName\" />\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <div fxFlex=\"33.33\" class=\"pr-16\">\r\n        <mat-label>ScreenCode </mat-label>\r\n        <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n          <input matInput name=\"code\" formControlName=\"screenCode\" />\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <div fxFlex=\"33.33\" class=\"pr-16\">\r\n        <mat-label>Route *</mat-label>\r\n        <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n          <input matInput name=\"route\" formControlName=\"routing\" />\r\n        </mat-form-field>\r\n      </div>\r\n    </div>\r\n\r\n    <div fxLayout=\"row wrap\">\r\n      <div fxFlex=\"33.33\" class=\"pr-16\">\r\n        <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n          <mat-label>Parent Menu</mat-label>\r\n          <mat-select formControlName=\"parentId\">\r\n            <mat-option [value]=\"'0'\">Main Menu</mat-option>\r\n            <mat-option *ngFor=\"let item of parentMenus\" [value]=\"item.id\">\r\n              {{ item.screenName }}\r\n            </mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n      </div>\r\n    </div>\r\n  </form>\r\n\r\n  <div fxLayout=\"row wrap\" fxLayout.lt-sm=\"column\">\r\n    <div fxFlex=\"100\" class=\"mt-16\" fxLayoutAlign=\"end center\">\r\n      <div *ngIf=\"!isEdit\">\r\n        <button  mat-raised-button   color=\"primary\" (click)=\"save()\" [disabled]=\"menuForm.invalid\">\r\n          Save\r\n        </button>&nbsp;&nbsp;\r\n      </div> \r\n      <div *ngIf=\"isEdit\">\r\n        <button mat-raised-button   color=\"primary\" (click)=\"save()\" [disabled]=\"!(menuForm.invalid || menuForm.dirty)\">\r\n          Save\r\n        </button>&nbsp;&nbsp;\r\n      </div>\r\n     \r\n      <button  mat-raised-button\r\n      color=\"warn\"\r\n      type=\"button\" (click)=\"goBack()\">Close</button>\r\n    </div>\r\n  </div>\r\n  \r\n\r\n","import {\r\n  Component,\r\n  ElementRef,\r\n  OnInit,\r\n  ViewChild,\r\n  OnDestroy,\r\n} from '@angular/core';\r\nimport jsPDF from 'jspdf';\r\nimport 'jspdf-autotable';\r\n//import * as XLSX from 'xlsx';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { rumangoAnimations } from 'app/shared/animations/rumango-animations';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { AppConfirmService } from 'app/shared/services/app-confirm/app-confirm.service';\r\nimport { AppLoaderService } from 'app/shared/services/app-loader/app-loader.service';\r\nimport { DataService } from 'app/shared/services/data.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { Subscription } from 'rxjs';\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort, Sort } from \"@angular/material/sort\";\r\nimport { LiveAnnouncer } from \"@angular/cdk/a11y\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport autoTable from 'jspdf-autotable';\r\nimport { DownloadService } from \"app/shared/services/download.service\";\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { denomMaster } from 'app/shared/models/denomMaster';\r\n\r\n\r\n@Component({\r\n  selector: 'app-demon-master-crud-ngx-table',\r\n  templateUrl: './demon-master-crud-ngx-table.component.html',\r\n  styleUrls: ['./demon-master-crud-ngx-table.component.scss'],\r\n  animations: rumangoAnimations,\r\n})\r\nexport class DemonMasterCrudNgxTableComponent implements OnInit {\r\n\r\n  @ViewChild('searchVal') searchVal: ElementRef;\r\n\r\n  selectedFilterIndex: number = 0;\r\n  displayedColumns: string[] = [\r\n    'entityCode',\r\n    'bankCode',\r\n    'denomCode',\r\n    'denomValue',\r\n    'currency',\r\n    'authStatus',\r\n    'recordStatus',\r\n    'action',\r\n  ];\r\n  filterByOption: { key: string; value: string }[] = [\r\n    { key: 'entityCode', value: 'Entity Code' },\r\n  ];\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  dataSource = new MatTableDataSource();\r\n  public items: any[];\r\n  public users: any[];\r\n  public getItemSub: Subscription;\r\n  denomvalues:string[] = [];\r\n  currency:string[] = [];\r\n  denomCode: string[] = [];\r\n  denomValue: string[] = [];\r\n  bankCode: string[] = [];\r\n  currentUser: string;\r\n  loading: boolean;\r\n  fetchdenomValue: denomMaster;\r\n  constructor(\r\n    private dialog: MatDialog,\r\n    private snack: MatSnackBar,\r\n    private confirmService: AppConfirmService,\r\n    private loader: AppLoaderService,\r\n    private api:ApiService,\r\n    private dataService:DataService,\r\n    private router:Router,\r\n    private ls:LocalStoreService,\r\n    private _liveAnnouncer: LiveAnnouncer,\r\n    private downloadService: DownloadService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.currentUser = this.ls.getItem('ICUST_USER');\r\n    this.getBankCode();\r\n    this.getCurrencyValue();\r\n    this.getItems();\r\n  }\r\n  ngOnDestroy() {\r\n    if (this.getItemSub) {\r\n      this.getItemSub.unsubscribe();\r\n    }\r\n  }\r\n  getItems() {\r\n    this.loading = true;\r\n    this.api.getDenomMaster().subscribe((allCountryValues: any) => {\r\n      if (allCountryValues) {\r\n        for(let i=0;i<allCountryValues.length;i++){\r\n          if(allCountryValues[i].authStatus == 'U'){\r\n            allCountryValues[i].authStatus = 'Unauthorized'\r\n          }\r\n          if(allCountryValues[i].authStatus == 'A') {\r\n            allCountryValues[i].authStatus = 'Authorized'\r\n          } \r\n          if(allCountryValues[i].recordStatus == 'O'){\r\n            allCountryValues[i].recordStatus = 'Open'\r\n          } \r\n          if(allCountryValues[i].recordStatus == 'C'){\r\n            allCountryValues[i].recordStatus = 'Closed'\r\n          }\r\n        }\r\n        this.dataSource = new MatTableDataSource(allCountryValues);\r\n        this.users = allCountryValues;\r\n        console.log(this.dataSource);\r\n        this.dataSource.paginator = this.paginator;\r\n        this.dataSource.sort = this.sort;\r\n        this.loading = false;\r\n      }\r\n    });\r\n  }\r\n  getCurrencyValue() {\r\n    this.api.getCountryValues().subscribe((currencyValues: any) => {\r\n      this.currency = currencyValues;\r\n    });\r\n  }\r\n  getBankCode() {\r\n    this.api.getBankCode().subscribe((bnkCode: any) => {\r\n      this.bankCode = bnkCode;\r\n    });\r\n  }\r\n\r\n  doFilter(filterBy, e) {\r\n    this.filterTable(filterBy);\r\n    this.applyFilter(e);\r\n  }\r\n\r\n  filterTable(filterBy) {\r\n    this.dataSource.filterPredicate = (data: any, filter: string): boolean => {\r\n      return data[filterBy].toLocaleLowerCase().includes(filter);\r\n    };\r\n  }\r\n\r\n  clearFilter() {\r\n    this.dataSource.filter = '';\r\n    this.searchVal.nativeElement.value = '';\r\n    this.selectedFilterIndex = 0;\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n\r\n  announceSortChange(sortState: Sort) {\r\n    if (sortState.direction) {\r\n      this._liveAnnouncer.announce(`Sorted ${sortState.direction}ending`);\r\n    } else {\r\n      this._liveAnnouncer.announce('Sorting cleared');\r\n    }\r\n  }\r\n  uploadCollateralType(event) {\r\n    console.log(\"event\",event);\r\n  }\r\n\r\n  denominationMaster(){\r\n   this.downloadService.downloadFiles(\"denominationMaster\", this.users);\r\n   \r\n\r\n}\r\n\r\n  deleteItem(row) {\r\n    this.confirmService\r\n      .confirm({ message: `Delete ${row.entityCode}?` })\r\n      .subscribe((res) => {\r\n        if (res) {\r\n          this.loader.open();\r\n\r\n          \r\n          this.api.deleteDenomMaster(row.id).subscribe(\r\n            (res: any) => {},\r\n            (err: any) => {\r\n              ('');\r\n\r\n              if (err.status == 200) {\r\n                this.loader.close();\r\n                this.getItems();\r\n                this.snack.open('Member deleted!', 'OK', { duration: 4000 });\r\n              }\r\n            }\r\n          );\r\n        }\r\n      });\r\n  }\r\n\r\n  addNew() {\r\n    this.router.navigate(['/maintenance/main/denominationMaster/add']);\r\n  }\r\n\r\n  openPopUp(row) {\r\n\r\n    this.getDenomMasterId(row)\r\n\r\n    // this.dataService.sendNavParam(this.fetchdenomValue);\r\n    this.router.navigate([`/maintenance/main/denominationMaster/${row.id}`]);\r\n  }\r\n\r\n  getDenomMasterId(row) {\r\n    this.loader.open();\r\n\r\n    this.api.fetchDenomMasterById(row.id).subscribe((data : any)=> {\r\n      this.fetchdenomValue=data\r\n\r\n      if(this.fetchdenomValue != null){\r\n        localStorage.setItem('fetchdenomValue',JSON.stringify(this.fetchdenomValue));\r\n         this.loader.close();\r\n       }\r\n      });\r\n\r\n  }\r\n  goBack() {\r\n    this.router.navigate(['/maintenance/main/']);\r\n  }\r\n\r\n\r\n  dataByFilter(index,filter){\r\n    return filter.key;\r\n  }\r\n\r\n\r\n}\r\n","<h1 class=\"main-head\"><small class=\"small-head\">Home > Maintenance Summary  > Denomination Master Maintenance </small></h1>\r\n<!-- <div fxLayoutAlign=\"center\">\r\n  <mat-spinner *ngIf=\"loading\"></mat-spinner>\r\n</div> -->\r\n<div fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"mt-24\">\r\n  <button mat-icon-button (click)=\"goBack()\">\r\n    <mat-icon>arrow_back</mat-icon>\r\n  </button>\r\n  <span class=\"text-large\"> Denomination Master Maintenance </span>\r\n  </div>\r\n<mat-card  class=\"mt-32\">\r\n  <div>\r\n    <table style=\"margin: 18px;\">\r\n      <tr>\r\n        <td>\r\n          <h2>\r\n            Denomination Master\r\n          </h2>\r\n        </td>\r\n      </tr>\r\n      <tr>\r\n        <td>\r\n          <div class=\"highlight\">\r\n          </div>\r\n        </td>\r\n      </tr>\r\n    </table>  \r\n    <span fxFlex></span>\r\n  <button mat-icon-button [matMenuTriggerFor]=\"menu\">\r\n    <mat-icon>more_vert</mat-icon>\r\n  </button>\r\n  <mat-menu #menu=\"matMenu\">\r\n    <button mat-menu-item>\r\n      <span><input style=\"display: none;\"\r\n        type=\"file\" name=\"documentUrl\"\r\n        #documentUrl \r\n        (change)=\"uploadCollateralType($event)\">\r\n        <a \r\n        (click)=\"documentUrl.click()\"\r\n        [routerLink]=\"\">Export</a></span>\r\n    </button>\r\n    <button  (click)=\"denominationMaster()\" mat-menu-item>\r\n      <span>Download</span>\r\n    </button>\r\n  </mat-menu>\r\n  </div>\r\n  <mat-card-content>\r\n    <div fxLayout=\"row\" class=\"w-full\" fxLayoutAlign=\"space-arround center\" class=\"ml-16 mt-32\">\r\n      <div fxLayout=\"row\" class=\"w-full\" fxLayoutGap=\"10px\">\r\n        <div>\r\n          <mat-form-field appearance=\"outline\">\r\n            <mat-label>Filter By</mat-label>\r\n            <mat-select\r\n              name=\"filterBy\"\r\n              #filterBy\r\n              [(ngModel)]=\"selectedFilterIndex\" placeholder=\"Filter By\"\r\n            >\r\n            <!-- <mat-select name=\"filterBy\" #filterBy [(ngModel)]=\"selectedFilterIndex\"> -->\r\n              <mat-option value=\"0\">Select</mat-option>\r\n\r\n              <mat-option *ngFor=\"let filter of filterByOption; trackBy:dataByFilter\" value=\"{{filter.key}}\">\r\n                {{filter.value}}\r\n\r\n              </mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n        </div>\r\n        <div>\r\n          <mat-form-field appearance=\"outline\">\r\n            <mat-label>Search</mat-label>\r\n            <input matInput #searchVal (keyup)=\"doFilter(filterBy.value, $event)\" placeholder=\"Search\">\r\n            <!-- <input matInput #searchVal (keyup)=\"doFilter(filterBy.value, $event)\"> -->\r\n            <mat-icon matSuffix>search</mat-icon>\r\n          </mat-form-field>\r\n        </div>   \r\n       <div *ngIf=\"searchVal.value || filterBy.value\" class=\"resetDiv\">\r\n        <button mat-stroked-button class=\"clearBtn\" (click)=\"clearFilter()\">RESET\r\n        </button>\r\n      </div>\r\n      <div class=\"filterDiv\">\r\n       <button mat-flat-button color=\"primary\" class=\"addNewBtn\" (click)=\"addNew()\" >ADD NEW\r\n       </button>\r\n     </div>\r\n       \r\n    </div>\r\n    </div>\r\n    <div class=\"mat-elevation-z0\">\r\n      <mat-table\r\n        class=\"w-full\"\r\n        [dataSource]=\"dataSource\"\r\n        matSort\r\n        (matSortChange)=\"announceSortChange($event)\"\r\n      >\r\n        <ng-container matColumnDef=\"entityCode\">\r\n          <mat-header-cell\r\n            *matHeaderCellDef\r\n            mat-sort-header\r\n            sortActionDescription=\"Sort by Entity code\"\r\n          >\r\n            Entity Code\r\n          </mat-header-cell>\r\n          <mat-cell *matCellDef=\"let element\">\r\n            {{ element.entityCode }}\r\n          </mat-cell>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"bankCode\">\r\n          <mat-header-cell\r\n            *matHeaderCellDef\r\n            mat-sort-header\r\n            sortActionDescription=\"Sort by Bank Code\"\r\n            >Bank Code\r\n          </mat-header-cell>\r\n          <mat-cell *matCellDef=\"let element\">\r\n            {{ element.bankCode }}\r\n          </mat-cell>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"denomCode\">\r\n          <mat-header-cell\r\n            *matHeaderCellDef\r\n            mat-sort-header\r\n            sortActionDescription=\"Sort by Denom Code\"\r\n            >Denom Code\r\n          </mat-header-cell>\r\n          <mat-cell *matCellDef=\"let element\">\r\n            {{ element.denomCode }}\r\n          </mat-cell>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"denomValue\">\r\n          <mat-header-cell\r\n            *matHeaderCellDef\r\n            mat-sort-header\r\n            sortActionDescription=\"Sort by Denom Value\"\r\n            >Denom Value\r\n          </mat-header-cell>\r\n          <mat-cell *matCellDef=\"let element\">\r\n            {{ element.denomValue }}\r\n          </mat-cell>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"currency\">\r\n          <mat-header-cell\r\n            *matHeaderCellDef\r\n            mat-sort-header\r\n            sortActionDescription=\"Sort by currency\"\r\n          >\r\n            Currency\r\n          </mat-header-cell>\r\n          <mat-cell *matCellDef=\"let element\">\r\n            {{ element.currency }}\r\n          </mat-cell>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"authStatus\">\r\n          <mat-header-cell\r\n            *matHeaderCellDef\r\n            mat-sort-header\r\n            sortActionDescription=\"Sort by Auth Status\"\r\n          >\r\n            Auth Status\r\n          </mat-header-cell>\r\n          <mat-cell *matCellDef=\"let element\">\r\n            {{ element.authStatus }}\r\n          </mat-cell>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"recordStatus\">\r\n          <mat-header-cell\r\n            *matHeaderCellDef\r\n            mat-sort-header\r\n            sortActionDescription=\"Sort by Record Status\"\r\n          >\r\n            Record Status\r\n          </mat-header-cell>\r\n          <mat-cell *matCellDef=\"let element\">\r\n            {{ element.recordStatus }}\r\n          </mat-cell>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"action\">\r\n          <mat-header-cell *matHeaderCellDef>Action</mat-header-cell>\r\n          <mat-cell *matCellDef=\"let element\">\r\n            <div>\r\n             <mat-icon class=\"actionIcons\" matTooltip=\"Edit\" (click)=\"openPopUp(element,'Yes')\" >edit</mat-icon>\r\n          </div>&nbsp;&nbsp;&nbsp;&nbsp;\r\n          <div>\r\n           <mat-icon class=\"actionIcons\" matTooltip=\"Delete\" [disabled]=\"element.oneTimeAuth =='Y'\"  (click)=\"deleteItem(element)\" >delete</mat-icon>\r\n          </div>\r\n          </mat-cell>\r\n        </ng-container>\r\n\r\n        <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n        <mat-row *matRowDef=\"let row; columns: displayedColumns\"></mat-row>\r\n      </mat-table>\r\n      <mat-paginator class=\"mt-16\"\r\n        [pageSizeOptions]=\"[5, 10, 20]\"\r\n        aria-label=\"Select page of users\"\r\n      ></mat-paginator>\r\n    </div>\r\n    <!-- <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\" aria-label=\"Select page of users\"></mat-paginator> -->\r\n  </mat-card-content>\r\n</mat-card>\r\n","import {\r\n  Component,\r\n  ElementRef,\r\n  OnInit,\r\n  ViewChild,\r\n  OnDestroy,\r\n} from \"@angular/core\";\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { AppConfirmService } from 'app/shared/services/app-confirm/app-confirm.service';\r\nimport { AppLoaderService } from 'app/shared/services/app-loader/app-loader.service';\r\nimport { DataService } from 'app/shared/services/data.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { Subscription } from 'rxjs';\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort, Sort } from \"@angular/material/sort\";\r\nimport { LiveAnnouncer } from \"@angular/cdk/a11y\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { rumangoAnimations } from \"app/shared/animations/rumango-animations\";\r\nimport { DownloadService } from \"app/shared/services/download.service\";\r\nimport { tillInterface } from \"./till-vault-ccy-summry\";\r\n\r\n@Component({\r\n  selector: 'app-till-vault-ccy-summry',\r\n  templateUrl: './till-vault-ccy-summry.component.html',\r\n  styleUrls: ['./till-vault-ccy-summry.component.scss'],\r\n  animations: rumangoAnimations\r\n})\r\nexport class TillVaultCcySummryComponent implements OnInit {\r\n\r\n  @ViewChild(\"searchVal\") searchVal: ElementRef;\r\n  selectedFilterIndex: number = 0;\r\n\r\n  filterByOption: { key: string; value: string }[] = [\r\n    { key: \"entityCode\", value: \"Entity Code\" },\r\n  ];\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  displayedColumns: string[] = ['entityCode', 'authStatus', 'recordStatus','action' ];\r\n  dataSource = new MatTableDataSource();\r\n\r\n  public items: string[];\r\n  users: string[]=[];\r\n  currency: string[] = [];\r\n  branchCode: string[] = [];\r\n  bankCode: string[] = [];\r\n  public getItemSub: Subscription;\r\n  currentUser: string;\r\n  fetchCcyBalValue: object;\r\n  loading: boolean;\r\n  entity: string;\r\n  tillData: tillInterface;\r\n\r\n  till: tillInterface[]=[];\r\n  data: tillInterface;\r\n  constructor(\r\n    private dialog: MatDialog,\r\n    private snack: MatSnackBar,\r\n    private confirmService: AppConfirmService,\r\n    private loader: AppLoaderService,\r\n    private apiService: ApiService,\r\n    private dataService:DataService,\r\n    private router:Router,\r\n    private ls:LocalStoreService,\r\n    private _liveAnnouncer: LiveAnnouncer,\r\n    private downloadService: DownloadService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.currentUser = this.ls.getItem(\"ICUST_USER\");\r\n    this.getTillId();\r\n    this.getItems();\r\n    this.getCurrency();\r\n    this.getBankCode();\r\n    this.getBranchCode();\r\n    this.getEntityCode();\r\n    this.getvaulCurrencyBal();\r\n  }\r\n  ngOnDestroy() {\r\n    if (this.getItemSub) {\r\n      this.getItemSub.unsubscribe()\r\n    }\r\n  }\r\n  getItems() {\r\n    this.items = this.users;\r\n  }\r\n  \r\n  doFilter(filterBy, e) {\r\n    this.filterTable(filterBy);\r\n    this.applyFilter(e);\r\n  }\r\n\r\n  filterTable(filterBy) {\r\n    this.dataSource.filterPredicate = (resp: any, filter: string): boolean => {\r\n      return resp[filterBy].toLocaleLowerCase().includes(filter);\r\n    };\r\n  }\r\n\r\n  clearFilter() {\r\n    this.dataSource.filter = \"\";\r\n    this.searchVal.nativeElement.value = \"\";\r\n    this.selectedFilterIndex = 0;\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n\r\n  announceSortChange(sortState: Sort) {\r\n    if (sortState.direction) {\r\n      this._liveAnnouncer.announce(`Sorted ${sortState.direction}ending`);\r\n    } else {\r\n      this._liveAnnouncer.announce(\"Sorting cleared\");\r\n    }\r\n  }\r\n\r\n  tillVaultCurrrencyBalance(){\r\n    this.downloadService.downloadFiles(\"tillVaultCurrrencyBalance\" , this.users);\r\n  }\r\n\r\n\r\n  deleteItem(element) {\r\n    \r\n    this.confirmService.confirm({message: `Delete ${element.entityCode}?`})\r\n      .subscribe(res => {\r\n        if (res) {\r\n          this.loader.open();\r\n          this.apiService.removetillVaultCurrencyBal(element.id)\r\n            .subscribe((res: any) => {        \r\n                }, (err: any) => {''\r\n              if (err.status == 200) {\r\n                this.loader.close();\r\n                this.getvaulCurrencyBal();\r\n                this.snack.open('Record deleted!', 'OK', { \r\n                  duration: 2000,\r\n                  verticalPosition: \"top\",\r\n                  horizontalPosition: \"right\",\r\n                });\r\n              }\r\n            }\r\n          );\r\n        }\r\n      });\r\n  }\r\n\r\n  openPopUp(element) {\r\n    this.getCurrencyBalId(element)\r\n    this.dataService.sendNavParam(this.fetchCcyBalValue);\r\n    this.router.navigate([`/maintenance/main/tillVaultCcyBal/${element.id}`]);\r\n  }\r\n\r\n  getCurrencyBalId(element){\r\n    this.loader.open();\r\n    this.apiService.fetchCurrencyBalId(element.id).subscribe((result : any)=> {\r\n      this.data = result;\r\n      this.tillData = this.till.find(x => x.id == this.data.tillId);\r\n      this.data.tillId = this.tillData.tillVaultCode;\r\n      this.fetchCcyBalValue=this.data\r\n\r\n      if(this.fetchCcyBalValue != null){\r\n        localStorage.setItem('fetchCcyBalValue',JSON.stringify(this.fetchCcyBalValue));\r\n         this.loader.close();\r\n       \r\n       }\r\n      });\r\n  }\r\n\r\n  addNew(){\r\n    this.router.navigate([\"/maintenance/main/tillVaultCcyBal/add\"]);\r\n  }\r\n\r\n  goBack(){\r\n    this.router.navigate([\"/maintenance/main\"]);\r\n  }\r\n  onFileChange(event) {\r\n    console.log('event', event.path[0].files[0]);\r\n    const file: File = event.path[0].files[0];\r\n    const uploadData = new FormData();\r\n    uploadData.append('screenType', 'tillVaultCcyBal');\r\n    uploadData.append('file', file);\r\n    this.apiService.uploadExelFile(uploadData).subscribe((response) => {\r\n      console.log(response);\r\n      this.snack.open(`File Uploaded Successfully`, \"OK\", {\r\n        duration: 4000,\r\n        verticalPosition: \"top\",\r\n        horizontalPosition: \"right\",\r\n      });\r\n    });\r\n    this.getvaulCurrencyBal();\r\n  }\r\n  getvaulCurrencyBal() {\r\n    this.loading = true;\r\n    this.apiService.gettillCurrencyBalResp().subscribe((resp:any) => {\r\n\r\n      for(let i=0;i<resp.length;i++){\r\n        if(resp[i].authStatus == 'U'){\r\n          resp[i].authStatus = 'Unauthorized'\r\n        }\r\n        if(resp[i].authStatus == 'A') {\r\n          resp[i].authStatus = 'Authorized'\r\n        } \r\n        if(resp[i].recordStatus == 'O'){\r\n          resp[i].recordStatus = 'Open'\r\n        } \r\n        if(resp[i].recordStatus == 'C'){\r\n          resp[i].recordStatus = 'Closed'\r\n        }\r\n      }\r\n      this.users = resp;\r\n      this.dataSource = new MatTableDataSource(resp);\r\n        this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n      this.items = this.users;\r\n      this.loading = false;\r\n    });\r\n  }\r\n  getCurrency() {\r\n    this.apiService.getCountryValues().subscribe((resp) => {\r\n      this.currency = resp;\r\n    });\r\n  }\r\n  getBankCode() {\r\n    this.apiService.getBankCode().subscribe((resp) => {\r\n      this.bankCode = resp;\r\n    });\r\n  }\r\n  getBranchCode() {\r\n    this.apiService.getBranchCode().subscribe((resp) => {\r\n      this.branchCode = resp;\r\n    });\r\n  }\r\n  getTillId() {\r\n    let tillOrVault =\"T\";\r\n    this.apiService.getTillData(tillOrVault).subscribe((resp) => {\r\n      this.till = resp;\r\n    });\r\n  }\r\n\r\n  getEntityCode() {\r\n    this.apiService.getEntityCode().subscribe((resp) => {\r\n      this.entity = resp;\r\n    });\r\n  }\r\n  dataByFilter(index,item){\r\n    return item.key\r\n  }\r\n}\r\n","<h1 class=\"main-head\"><small class=\"small-head\">Home > Maintenance Summary > Till Vault Currency Balance Maintenance </small></h1>\r\n<div fxLayoutAlign=\"center\">\r\n  <mat-spinner *ngIf=\"loading\"></mat-spinner>\r\n</div>\r\n<div fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"mt-24\">\r\n  <button mat-icon-button (click)=\"goBack()\">\r\n    <mat-icon>arrow_back</mat-icon>\r\n  </button>\r\n  <span class=\"text-large\">\r\n    Till Vault Currency Balance Maintenance\r\n  </span>\r\n  </div>\r\n\r\n<mat-card class=\"mt-32\">\r\n  <div>\r\n    <table style=\"margin: 18px;\">\r\n      <tr>\r\n        <td>\r\n          <h2>\r\n            Currencies\r\n          </h2>\r\n        </td>\r\n      </tr>\r\n      <tr>\r\n        <td>\r\n          <div class=\"highlight\">\r\n          </div>\r\n        </td>\r\n      </tr>\r\n    </table>  \r\n    <span fxFlex></span>\r\n  <button mat-icon-button [matMenuTriggerFor]=\"menu\">\r\n    <mat-icon>more_vert</mat-icon>\r\n  </button>\r\n  <mat-menu #menu=\"matMenu\">\r\n    <div class=\"upload_botton\">\r\n      <button type=\"button\" mat-menu-item>Upload</button>\r\n      <input\r\n        type=\"file\"\r\n        accept=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\"\r\n        class=\"btn btn-success\"\r\n        (change)=\"onFileChange($event)\"\r\n      />\r\n    </div>\r\n    <button (click)=\"tillVaultCurrrencyBalance()\" mat-menu-item>\r\n      <span>Download</span>\r\n    </button>\r\n  </mat-menu>\r\n  </div>\r\n  <mat-card-content>\r\n    <div fxLayout=\"row\" class=\"w-full\" fxLayoutAlign=\"space-arround center\" class=\"ml-16 mt-32\">\r\n      <div fxLayout=\"row\" class=\"w-full\" fxLayoutGap=\"10px\">\r\n        <div>\r\n          <mat-form-field appearance=\"outline\">\r\n            <mat-label>Filter By</mat-label>\r\n            <mat-select name=\"filterBy\" #filterBy [(ngModel)]=\"selectedFilterIndex\" placeholder=\"Filter By\">\r\n              <!-- <mat-select name=\"filterBy\" #filterBy [(ngModel)]=\"selectedFilterIndex\"> -->\r\n              <mat-option value=\"0\">Select</mat-option>\r\n              <mat-option *ngFor=\"let filter of filterByOption ; trackBy:dataByFilter\" value=\"{{filter.key}}\">\r\n                {{filter.value}}\r\n              </mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n        </div>\r\n        <div>\r\n          <mat-form-field appearance=\"outline\">\r\n            <mat-label>Search</mat-label>\r\n            <input matInput #searchVal (keyup)=\"doFilter(filterBy.value,$event)\" placeholder=\"Search\">\r\n            <!-- <input matInput #searchVal (keyup)=\"doFilter(filterBy.value,$event)\"> -->\r\n            <mat-icon matSuffix>search</mat-icon>\r\n          </mat-form-field>\r\n        </div>\r\n      <div *ngIf=\"searchVal.value || filterBy.value\" class=\"resetDiv\">\r\n        <button mat-stroked-button class=\"clearBtn\" (click)=\"clearFilter()\">RESET\r\n        </button>\r\n      </div>\r\n      <div class=\"filterDiv\">\r\n       <button mat-flat-button color=\"primary\" class=\"addNewBtn\" (click)=\"addNew()\" >ADD NEW\r\n       </button>\r\n     </div>\r\n      \r\n    </div>\r\n    </div>\r\n\r\n    <div class=\"mat-elevation-z0\">\r\n      <mat-table class=\"w-full\" [dataSource]=\"dataSource\" matSort (matSortChange)=\"announceSortChange($event)\">\r\n        <ng-container matColumnDef=\"entityCode\">\r\n          <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by EntityCode\"> Entity Code\r\n          </mat-header-cell>\r\n          <mat-cell *matCellDef=\"let element\"> {{element?.entityCode}} </mat-cell>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"authStatus\">\r\n          <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by authStatus\"> Auth Status\r\n          </mat-header-cell>\r\n          <mat-cell *matCellDef=\"let element\"> {{element?.authStatus}} </mat-cell>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"recordStatus\">\r\n          <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by recordStatus\"> Record Status\r\n          </mat-header-cell>\r\n          <mat-cell *matCellDef=\"let element\"> {{element?.recordStatus}} </mat-cell>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"status\">\r\n          <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Status \"> Status\r\n          </mat-header-cell>\r\n          <ng-template let-row=\"element\" ngx-datatable-cell-template>\r\n            <mat-chip mat-sm-chip [color]=\"'primary'\" [selected]=\"element.isActive\">{{element.isActive ? 'active' : 'inactive'}}</mat-chip>\r\n          </ng-template>\r\n        </ng-container>\r\n       \r\n        <ng-container matColumnDef=\"action\">\r\n          <mat-header-cell *matHeaderCellDef>Action</mat-header-cell>\r\n          <mat-cell *matCellDef=\"let element\">\r\n            <div>\r\n             <mat-icon class=\"actionIcons\" matTooltip=\"Edit\" (click)=\"openPopUp(element,'Yes')\"  >edit</mat-icon>\r\n          </div>&nbsp;&nbsp;&nbsp;&nbsp;\r\n          <div>\r\n           <mat-icon class=\"actionIcons\" matTooltip=\"Delete\" [disabled]=\"element.oneTimeAuth =='Y'\" (click)=\"deleteItem(element)\" >delete</mat-icon>\r\n          </div>\r\n          </mat-cell>\r\n        </ng-container>\r\n\r\n        <mat-header-row *matHeaderRowDef=\"displayedColumns;\"></mat-header-row>\r\n        <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\r\n      </mat-table>\r\n      <mat-paginator class=\"mt-16\" [pageSizeOptions]=\"[5, 10, 20]\" aria-label=\"Select page of users\"></mat-paginator>\r\n    </div>\r\n  </mat-card-content>\r\n</mat-card>\r\n  \r\n\r\n","import { Component, ElementRef, OnInit} from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { ViewChild } from '@angular/core';\r\nimport {MatSort, Sort} from '@angular/material/sort';\r\nimport {LiveAnnouncer} from '@angular/cdk/a11y';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport {AfterViewInit} from '@angular/core';\r\nimport { AppConfirmService } from 'app/shared/services/app-confirm/app-confirm.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { BranchHolidayPopupComponent } from '../branch-holiday/branch-holiday-popup/branch-holiday-popup.component';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { AppLoaderService } from 'app/shared/services/app-loader/app-loader.service';\r\nimport { Subscription } from 'rxjs';\r\nimport { SendHolidayScreenService } from 'app/shared/services/send-holiday-screen.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-branch-holiday',\r\n  templateUrl: './branch-holiday.component.html',\r\n  styleUrls: ['./branch-holiday.component.scss']\r\n})\r\nexport class BranchHolidayComponent implements OnInit {\r\n\r\n  @ViewChild('searchVal') searchVal: ElementRef;\r\n  selectedFilterIndex : number = 0;\r\n\r\n  dataSource = new MatTableDataSource();\r\n  displayedColumns: string[] = ['entityCode', 'bankCode', 'branchCode', 'calenderYear', 'authStatus', 'recordStatus', 'action'];\r\n\r\n  filterByOption: { key: string, value: string }[] = [\r\n    { key: 'entityCode', value: 'entityCode' },\r\n    { key: 'bankCode', value: 'Bank Code' },\r\n    { key: 'branchCode', value: 'Branch Code' }\r\n  ];\r\n\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  branchCode:string[]=[];\r\n  bankCode:string[]=[];\r\n  entityCode:string[]=[];\r\n  public items: any[];\r\n  users: any[] = [];\r\n  public getItemSub: Subscription;\r\n  screen: any;\r\n  // screen: string;\r\n\r\n  constructor(private router:Router,private snack: MatSnackBar,private loader: AppLoaderService, private screenService: SendHolidayScreenService, \r\n    private dialog: MatDialog,private apiService:ApiService,private confirmService: AppConfirmService,private _liveAnnouncer: LiveAnnouncer,\r\n    private ls:LocalStoreService) { }\r\n\r\n  ngOnInit(): void {\r\n   this.getBrancheHoliday(); \r\n   this.getItems();\r\n  //  this.screenService.holidayScr.subscribe(res=>{\r\n  //   console.log(res);\r\n  //   this.screen=res;\r\n  //   console.log(this.screen)\r\n  //  });\r\n  }\r\n  ngOnDestroy() {\r\n    if (this.getItemSub) {\r\n      this.getItemSub.unsubscribe()\r\n    }\r\n  }\r\n  getItems() {\r\n    this.items = this.users;\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n  addNew(res){\r\n    this.screenService.holidayScr.next(res);\r\n    this.router.navigate([\"/maintenance/main/holiday/BranchHoliday/addHoliday\"]);\r\n  }\r\n  onFileChange(event) {\r\n    console.log('event', event.path[0].files[0]);\r\n    const file: File = event.path[0].files[0];\r\n    const uploadData = new FormData();\r\n    uploadData.append('screenType', 'BranchHoliday');\r\n    uploadData.append('file', file);\r\n    this.apiService.uploadExelFile(uploadData).subscribe((response) => {\r\n      console.log(response);\r\n      this.snack.open(`File Uploaded Successfully`, \"OK\", {\r\n        duration: 4000,\r\n        verticalPosition: \"top\",\r\n        horizontalPosition: \"right\",\r\n      });\r\n    });\r\n    this.getBrancheHoliday();\r\n  }\r\n\r\n  getBrancheHoliday() {\r\n    this.apiService.getBranchHolidayInfo().subscribe((data: any) => {\r\n      for(let i=0;i<data.length;i++){\r\n        if(data[i].authStatus == 'U'){\r\n          data[i].authStatus = 'Unauthorized'\r\n        }\r\n        if(data[i].authStatus == 'A') {\r\n          data[i].authStatus = 'Authorized'\r\n        } \r\n        if(data[i].recordStatus == 'O'){\r\n          data[i].recordStatus = 'Open'\r\n        } \r\n        if(data[i].recordStatus == 'C'){\r\n          data[i].recordStatus = 'Closed'\r\n        }\r\n      }\r\n      this.users = data;\r\n      this.items = this.users;\r\n      this.dataSource = new MatTableDataSource(data);\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    });\r\n  }\r\n\r\n  \r\n  goBack(){\r\n    this.router.navigate([`/maintenance/main/holiday`]);\r\n  }\r\n\r\n  doFilter(filterBy, e){\r\n    this.filterTable(filterBy);\r\n    this.applyFilter(e);\r\n  }\r\n \r\n\r\n  filterTable(filterBy) {\r\n    this.dataSource.filterPredicate = (data: any, filter: string): boolean => {\r\n      return (\r\n        data[filterBy]?.toLocaleLowerCase().includes(filter)\r\n      )\r\n    }\r\n  }\r\n\r\n  clearFilter(){\r\n   this.dataSource.filter = '';\r\n   this.searchVal.nativeElement.value = '';\r\n   this.selectedFilterIndex = 0;\r\n  }\r\n\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n  openPopUp(data: any = {}, isNew?){\r\n    let title = isNew ? 'Add Branch Specific Holiday' : 'Edit Branch Specific Holiday';\r\n    let dialogRef: MatDialogRef<any> = this.dialog.open(BranchHolidayPopupComponent, {\r\n      width: '400px',\r\n      disableClose: true,\r\n      data: {\r\n        title: title, \r\n        payload: data,\r\n        branchCode: this.branchCode,\r\n        \r\n      }\r\n    })\r\n    dialogRef.afterClosed()\r\n      .subscribe(res => {\r\n        if(!res) {\r\n          return;\r\n        }\r\n        \r\n        if (isNew) {\r\n           this.apiService.updateBranchHolidayDetails(res,false).subscribe(response => {\r\n            \r\n            this.getBrancheHoliday();\r\n            this.snack.open(`Record Added!'`, \"OK\", {\r\n              duration: 2000,\r\n              verticalPosition: \"top\",\r\n              horizontalPosition: \"right\",\r\n            });\r\n          });\r\n        } else {\r\n          this.apiService.updateBranchHolidayDetails(res,false).subscribe(response => {\r\n            \r\n            this.items = response;\r\n            this.loader.close();\r\n            this.getBrancheHoliday();\r\n            this.snack.open(`Record Updated!'`, \"OK\", {\r\n              duration: 2000,\r\n              verticalPosition: \"top\",\r\n              horizontalPosition: \"right\",\r\n            });\r\n          });\r\n        }\r\n      })\r\n\r\n  }\r\n  getBranchCode() {\r\n    this.apiService.getBranchCode().subscribe((resp) => {\r\n      this.branchCode = resp;\r\n    });\r\n  }\r\n  \r\n  deleteItem(element) {\r\n    this.confirmService.confirm({message: `Delete ${element.entityCode}?`})\r\n      .subscribe(res => {\r\n        if (res) {\r\n          this.apiService.deleteCurrencyHoliday(element.id)\r\n            .subscribe(data => {\r\n            },\r\n              err=>{\r\n                if (err.status == 200) {\r\n                  this.snack.open('Record Deleted Successfully', 'OK', {\r\n                    duration: 4000,\r\n                    verticalPosition: 'top',\r\n                    horizontalPosition: 'right'\r\n                  });\r\n                }\r\n      \r\n              \r\n              this.getBrancheHoliday();\r\n              \r\n            })\r\n        }\r\n        \r\n      });\r\n  }\r\n  commonHoliday(){\r\n    this.ls.setItem('SCREEN_NAME','Branch');\r\n    this.router.navigate([\"/maintenance/main/holiday/BranchHoliday/commonHoliday\"]);\r\n  }\r\n  addBranch(){\r\n    this.router.navigate([\"/maintenance/main/holiday/BranchHoliday/addBranch\"]);\r\n    \r\n  }\r\n  openEdit(data: any = {},res,isEdit : string) {\r\n    console.log(res);\r\n    this.screenService.holidayScr.next(res);\r\n    this.router.navigate([\"/maintenance/main/holiday/BranchHoliday/addHoliday\"],{ queryParams: { id: data.id, isEdit : isEdit } });\r\n  }\r\n\r\n  announceSortChange(sortState: Sort) {\r\n    if (sortState.direction) {\r\n      this._liveAnnouncer.announce(`Sorted ${sortState.direction}ending`);\r\n    } else {\r\n      this._liveAnnouncer.announce('Sorting cleared');\r\n    }\r\n  }\r\n}\r\n","<h1 class=\"main-head\"><small class=\"small-head\">Home > Maintenance Summary > \r\n  Holiday Maintenance > Branch Holiday</small></h1>\r\n<div fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"mt-24\">\r\n  <button mat-icon-button (click)=\"goBack()\">\r\n      <mat-icon>arrow_back</mat-icon>\r\n    </button> \r\n    <span class=\"text-large\">\r\n      Branch Holidays\r\n    </span>\r\n    <span fxFlex></span>\r\n    <mat-button-toggle-group value=\"table\" appearance=\"legacy\" name=\"fontStyle\" aria-label=\"Font Style\" >\r\n      <mat-button-toggle value=\"table\"><span >TABLE</span></mat-button-toggle>\r\n      <mat-button-toggle value=\"calendar\" (click)=\"addNew('Branch')\" ><span >CALENDAR</span></mat-button-toggle>\r\n    </mat-button-toggle-group>\r\n</div>\r\n\r\n\r\n\r\n<mat-card class=\"mt-32\">\r\n <div fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"mt-24\">\r\n  \r\n  <table>\r\n    <tr>\r\n      <td>\r\n        <h2>\r\n          Branch Holidays\r\n        </h2>\r\n      </td>\r\n    </tr>\r\n    <tr>\r\n      <td>\r\n        <div class=\"highlight\">\r\n        </div>\r\n      </td>\r\n    </tr>\r\n  </table>\r\n     <span fxFlex></span>\r\n     <button mat-icon-button [matMenuTriggerFor]=\"menu\">\r\n       <mat-icon>more_vert</mat-icon>\r\n     </button>\r\n     <mat-menu #menu=\"matMenu\">\r\n       <div class=\"upload_botton\">\r\n        <button type=\"button\" mat-menu-item>Upload</button>\r\n        <input\r\n          type=\"file\"\r\n          accept=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\"\r\n          class=\"btn btn-success\"\r\n          (change)=\"onFileChange($event)\"\r\n        />\r\n      </div>\r\n       <button mat-menu-item>\r\n         <span>Download</span>\r\n       </button>\r\n     </mat-menu>\r\n  </div>\r\n <div class=\"w-full\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n   <div class=\"w-full\" fxLayout=\"row\" fxLayoutGap='20px'>\r\n     <div>\r\n       <mat-form-field appearance=\"outline\">\r\n        <mat-label>Filter By</mat-label>\r\n         <mat-select name=\"filterBy\" #filterBy [(ngModel)]=\"selectedFilterIndex\" placeholder=\"Filter By\">\r\n          <!-- <mat-select name=\"filterBy\" #filterBy [(ngModel)]=\"selectedFilterIndex\"> -->\r\n           <mat-option value=\"0\">Select</mat-option>\r\n           <mat-option *ngFor=\"let filter of filterByOption\" value=\"{{filter.key}}\">\r\n             {{filter.value}}\r\n           </mat-option>\r\n         </mat-select>\r\n       </mat-form-field>\r\n     </div>\r\n     <div>\r\n       <mat-form-field appearance=\"outline\">\r\n        <mat-label>Search</mat-label>\r\n         <input matInput #searchVal (keyup)=\"doFilter(filterBy.value,$event)\" placeholder=\"Search\">\r\n         <!-- <input matInput #searchVal (keyup)=\"doFilter(filterBy.value,$event)\"> -->\r\n         <mat-icon matSuffix>search</mat-icon>\r\n       </mat-form-field>\r\n     </div>\r\n     <div *ngIf=\"searchVal.value || filterBy.value\" class=\"resetDiv\">\r\n      <button mat-stroked-button class=\"clearBtn\" (click)=\"clearFilter()\">RESET\r\n      </button>\r\n    </div>\r\n   </div>\r\n   <div>\r\n     <button mat-flat-button color=\"primary\" class=\"filterDiv\"  class=\"mr-38\" style=\"height: 45px;\" >ADD NEW\r\n         <button mat-icon-button>\r\n           <mat-icon [matMenuTriggerFor]=\"accountMenu\"\r\n             >keyboard_arrow_down</mat-icon>\r\n         <mat-menu #accountMenu=\"matMenu\" style=\"width: 50ox;\" >\r\n           <mat-nav-list role=\"list\" class=\"notification-list branch_holiday\" >\r\n             <mat-list-item\r\n             role=\"listitem\"\r\n             class=\"notific-item branch_item\">\r\n             <div (click)=\"commonHoliday()\">\r\n               <small>\r\n                Common Holiday\r\n              </small>\r\n             </div>\r\n             </mat-list-item>\r\n             <mat-list-item\r\n             role=\"listitem\"\r\n             class=\"notific-item branch_item\">\r\n             <div (click)=\"addBranch()\">\r\n               <small >\r\n                 Branch Specific Holiday\r\n               </small>\r\n             </div>\r\n \r\n             </mat-list-item>\r\n \r\n           </mat-nav-list>\r\n         </mat-menu>\r\n         </button>\r\n         </button>\r\n   </div>\r\n </div>\r\n <div class=\"mat-elevation-z0\">\r\n   <mat-table class=\"w-full\" [dataSource]=\"dataSource\" matSort (matSortChange)=\"announceSortChange($event)\">\r\n\r\n     <ng-container matColumnDef=\"entityCode\">\r\n       <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Entity Code\"> Entity Code\r\n       </mat-header-cell>\r\n       <mat-cell *matCellDef=\"let element\"> {{element.entityCode}} </mat-cell>\r\n     </ng-container>\r\n\r\n     <ng-container matColumnDef=\"bankCode\">\r\n       <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Bank Code\"> Bank Code\r\n       </mat-header-cell>\r\n       <mat-cell *matCellDef=\"let element\"> {{element.bankCode}} </mat-cell>\r\n     </ng-container>\r\n\r\n     <ng-container matColumnDef=\"branchCode\">\r\n       <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Branch Code\"> Branch Code\r\n          </mat-header-cell>\r\n       <mat-cell *matCellDef=\"let element\"> {{element.branchCode}} </mat-cell>\r\n     </ng-container>\r\n\r\n     <ng-container matColumnDef=\"calenderYear\">\r\n       <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Year\"> Year\r\n       </mat-header-cell>\r\n       <mat-cell *matCellDef=\"let element\"> {{element.calenderYear}} </mat-cell>\r\n     </ng-container>\r\n     <ng-container matColumnDef=\"authStatus\">\r\n      <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Auth Status\"> Auth Status\r\n      </mat-header-cell>\r\n      <mat-cell *matCellDef=\"let element\"> {{element.authStatus}} </mat-cell>\r\n    </ng-container>\r\n    <ng-container matColumnDef=\"recordStatus\">\r\n      <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Record Status\"> Record Status\r\n      </mat-header-cell>\r\n      <mat-cell *matCellDef=\"let element\"> {{element.recordStatus}} </mat-cell>\r\n    </ng-container>\r\n     <ng-container matColumnDef=\"action\">\r\n      <mat-header-cell *matHeaderCellDef>Action</mat-header-cell>\r\n      <mat-cell *matCellDef=\"let element\">\r\n        <div>\r\n         <mat-icon class=\"actionIcons\" matTooltip=\"Edit\" (click)=\"openEdit(element,'Branch')\">edit</mat-icon>\r\n      </div>&nbsp;&nbsp;&nbsp;&nbsp;\r\n      <div>\r\n       <mat-icon class=\"actionIcons\" matTooltip=\"Delete\" [disabled]=\"element.oneTimeAuth =='Y'\"  (click)=\"deleteItem(element)\" >delete</mat-icon>\r\n      </div>\r\n      </mat-cell>\r\n    </ng-container>\r\n\r\n     <mat-header-row *matHeaderRowDef=\"displayedColumns;\"></mat-header-row>\r\n     <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\r\n   </mat-table>\r\n   <mat-paginator class=\"mt-16\" [pageSizeOptions]=\"[10,20,30]\" showFirstLastButtons></mat-paginator>\r\n </div>\r\n</mat-card>\r\n   \r\n","import { ChangeDetectorRef, Component, Inject, OnInit, OnDestroy, Input, ViewChild, HostListener, ElementRef } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { Subscription } from 'rxjs';\r\nimport { Data, Router } from '@angular/router';\r\nimport { FormArray, FormBuilder, FormGroup } from '@angular/forms';\r\nimport { Validators } from '@angular/forms';\r\nimport { BranchHolidayComponent } from '../branch-holiday.component';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport * as moment from 'moment';\r\n\r\n@Component({\r\n  selector: 'app-branch-holiday-popup',\r\n  templateUrl: './branch-holiday-popup.component.html',\r\n  styleUrls: ['./branch-holiday-popup.component.scss']\r\n})\r\nexport class BranchHolidayPopupComponent implements OnInit {\r\n  holidaypopupForm: FormGroup;\r\n  holidaypopupResponse: any;\r\n  branchCodeArr: string[] = ['SBIN123', 'SBIN231', 'SBIN212', 'SBIN235', 'SBIN879'];\r\n  bankCodeArr: string[] = ['BRDS1NCH', 'SBI2NJ', 'BOB66SS', 'SBI44GH', 'SBI21SJ'];\r\n  entityCodeArr: string[] = ['BRDS1NCH', 'SBI2NJ', 'BOB66SS', 'SBI44GH', 'SBI21SJ'];\r\n  month: string;\r\n  public getItemSub: Subscription;\r\n  public items: string[] = [];\r\n  branchCode:string[]=[];\r\n  bankCode:string[]=[];\r\n  entityCode:string[]=[];\r\n  branchHolidayDetails:string[] = [];\r\n\r\n  constructor(@Inject(MAT_DIALOG_DATA) public data: any,\r\n    public dialogRef: MatDialogRef<BranchHolidayComponent>,\r\n    private formBuilder: FormBuilder, private apiService: ApiService,\r\n    private router: Router,\r\n  ) {\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.buildItemForm(this.data.payload);\r\n    this.branchCode = this.data.branchCode;\r\n    this.bankCode = this.data.bankCode;\r\n    this.entityCode = this.data.entityCode;\r\n\r\n    this.getBranchCode();\r\n\r\n  }\r\n  getBranchCode() {\r\n    this.apiService.getBranchCode().subscribe((resp) => {\r\n      this.branchCode = resp;\r\n    });\r\n  }\r\n  buildItemForm(item) {\r\n    this.holidaypopupForm = this.formBuilder.group({\r\n      branchCode: [item.branchCode || '', [Validators.required]],\r\n      transactionDate: [item.transactionDate || '', [Validators.required]],\r\n      bankCode: [item.bankCode || '', [Validators.required]],\r\n      year: [''],\r\n      id: [item.id || ''],\r\n      entityCode: [item.entityCode || '', [Validators.required]],\r\n\r\n    })\r\n  }\r\n\r\n  trackByFnEntityCodeArr(index, item) {\r\n    return index; \r\n  }\r\n\r\n  trackByFnBankCodeArr(index, item) {\r\n    return index; \r\n  }\r\n\r\n  trackByFnBranchCode(index, item) {\r\n    return index; \r\n  }\r\n\r\n\r\n  goBack() {\r\n    this.router.navigate([`/maintenance/main/holiday/BranchHoliday`]);\r\n  }\r\n\r\n  saveHoliday() {\r\n    let now = new Date();\r\n    now = this.holidaypopupForm.value.transactionDate;\r\n    var dateStringWithTime = moment(now).format('YYYY-MM-DD HH:MM:SS');\r\n    var convertedyear = dateStringWithTime.slice(0, 4);\r\n    var convertMonth = dateStringWithTime.slice(5, 7);\r\n    var conv1Month = parseInt(convertMonth);\r\n    var convertCalender = dateStringWithTime.slice(8, 10);\r\n    var conv1Calender = parseInt(convertCalender);\r\n\r\n    let payload = [{\r\n      entityCode: this.holidaypopupForm.value.entityCode,\r\n      bankCode: this.holidaypopupForm.value.bankCode,\r\n      branchCode: this.holidaypopupForm.value.branchCode,\r\n      transactionDate: this.holidaypopupForm.value.transactionDate,\r\n      year: convertedyear,\r\n      id: this.holidaypopupForm.value.id,\r\n      month: conv1Month,\r\n      // calendar:calendar\r\n      calendar: conv1Calender.toString()\r\n\r\n    }\r\n    ]\r\n    this.dialogRef.close(payload);\r\n\r\n  }\r\n}\r\n","<div fxLayout=\"row\" fxLayoutAlign=\"space-around center\" >\r\n  <h1 matDialogTitle>{{data.title}}</h1>\r\n  <div  fxLayout=\"row\" fxLayoutAlign=\"end stretch\">\r\n    <mat-icon  class=\"mat-18\" (click)=\"dialogRef.close(false)\"  style=\"cursor: pointer;\">\r\n      close</mat-icon>\r\n  </div>\r\n\r\n \r\n</div>\r\n  <form [formGroup]=\"holidaypopupForm\" (ngSubmit)=\"saveHoliday()\" >\r\n  <div fxLayout=\"column wrap\" >\r\n    <mat-hint><small>Entity Code *</small></mat-hint>\r\n    <mat-form-field   appearance=\"outline\" >\r\n      <mat-select [formControl]=\"holidaypopupForm.controls['entityCode']\"\r\n      required >\r\n\r\n        <mat-option *ngFor=\"let entityCode of entityCodeArr; trackBy: trackByFnEntityCodeArr\" [value]=\"entityCode\"  >\r\n          {{entityCode}}\r\n        </mat-option>\r\n      </mat-select>\r\n    </mat-form-field>\r\n    <mat-error *ngIf=\"holidaypopupForm.get('entityCode').touched && !holidaypopupForm.get('entityCode').valid\">\r\n      <small>Entity Code is Required!</small>\r\n   </mat-error>\r\n\r\n    <mat-hint><small>Bank Code *</small></mat-hint>\r\n      <mat-form-field  appearance=\"outline\">\r\n        <mat-select [formControl]=\"holidaypopupForm.controls['bankCode']\"\r\n        required >\r\n\r\n          <mat-option *ngFor=\"let bankCode of bankCodeArr; trackBy: trackByFnBankCodeArr\" [value]=\"bankCode\"  >\r\n            {{bankCode}}\r\n          </mat-option>\r\n        </mat-select>\r\n      </mat-form-field>\r\n      <mat-error *ngIf=\"holidaypopupForm.get('bankCode').touched && !holidaypopupForm.get('bankCode').valid\">\r\n       <small>branchCode is Required!</small> \r\n     </mat-error>\r\n\r\n     <mat-hint>Branch Code *</mat-hint>\r\n        <mat-form-field class=\"full-width\" appearance=\"outline\">\r\n          <mat-select [formControl]=\"holidaypopupForm.controls['branchCode']\"\r\n          required >\r\n\r\n          <mat-option *ngFor=\"let data of branchCode; trackBy: trackByFnBranchCode\" [value]=\"data.branchCode\">\r\n            {{data.branchCode}}\r\n          </mat-option>\r\n          </mat-select>\r\n         \r\n        </mat-form-field>\r\n        <mat-error *ngIf=\"holidaypopupForm.get('branchCode').touched && !holidaypopupForm.get('branchCode').valid\">\r\n          branchCode is Required!\r\n       </mat-error>\r\n    \r\n\r\n       <mat-hint>Calendar *</mat-hint>\r\n       <mat-form-field appearance=\"fill\">\r\n        <input matInput [matDatepicker]=\"appDatepicker\"   name=\"date\" readonly formControlName=\"transactionDate\" placeholder=\"DD/MM/YYYY\">\r\n        <mat-datepicker-toggle matSuffix [for]=\"appDatepicker\" ></mat-datepicker-toggle>\r\n        <mat-datepicker #appDatepicker></mat-datepicker>\r\n      </mat-form-field>\r\n      \r\n          \r\n     <div>\r\n       <button mat-raised-button color=\"primary\" [disabled]=\"!(holidaypopupForm.valid && holidaypopupForm.dirty)\" click=\"save()\">{{\"SAVE\" }}</button>\r\n       <button mat-button color=\"warn\" type=\"button\" (click)=\"dialogRef.close(false)\">Cancel</button>\r\n      </div>\r\n\r\n\r\n\r\n    \r\n  </div>\r\n  </form>\r\n","import {\r\n  Component,\r\n  ElementRef,\r\n  OnInit,\r\n  ViewChild,\r\n  OnDestroy,\r\n} from \"@angular/core\";\r\nimport { MatDialog, MatDialogRef } from \"@angular/material/dialog\";\r\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\r\nimport { Router } from \"@angular/router\";\r\nimport { rumangoAnimations } from \"app/shared/animations/rumango-animations\";\r\nimport { ApiService } from \"app/shared/services/api.service\";\r\nimport { AppConfirmService } from \"app/shared/services/app-confirm/app-confirm.service\";\r\nimport { AppLoaderService } from \"app/shared/services/app-loader/app-loader.service\";\r\nimport { DataService } from \"app/shared/services/data.service\";\r\nimport { Subscription } from \"rxjs\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort, Sort } from \"@angular/material/sort\";\r\nimport { LiveAnnouncer } from \"@angular/cdk/a11y\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\n\r\nimport { BaseDenominationPopupComponent } from \"../../base-denomination/base-denomination-popup/base-denomination-popup.component\";\r\nimport { DownloadService } from \"app/shared/services/download.service\";\r\n\r\n\r\n\r\n@Component({\r\n  selector: \"app-till-vault-denomination-summary\",\r\n  templateUrl: \"./till-vault-denomination-summary.component.html\",\r\n  styleUrls: [\"./till-vault-denomination-summary.component.scss\"],\r\n  animations: rumangoAnimations,\r\n})\r\nexport class TillVaultDenominationSummaryComponent implements OnInit {\r\n  @ViewChild(\"searchVal\") searchVal: ElementRef;\r\n  selectedFilterIndex: number = 0;\r\n  displayedColumns: string[] = [ 'bankCode', 'entityCode', 'authStatus','recordStatus',  'action'];\r\n\r\n  filterByOption: { key: string; value: string }[] = [\r\n    { key: \"entityCode\", value: \"Entity Code\" },\r\n  ];\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n\r\n  dataSource = new MatTableDataSource();\r\n\r\n\r\n  public items: any[];\r\n  public getItemSub: Subscription;\r\n  users: any[] = [];\r\n  currency: string[] = [];\r\n  till: any;\r\n  branchCode: string[] = [];\r\n  bankCode: string[] = [];\r\n  fetchVaultDenom: object;\r\n  loading: boolean;\r\n  data: any;\r\n  tillData: any;\r\n  constructor(\r\n    private dialog: MatDialog,\r\n    private snack: MatSnackBar,\r\n    private confirmService: AppConfirmService,\r\n    private loader: AppLoaderService,\r\n    private apiService: ApiService,\r\n    private router: Router,\r\n    private dataService: DataService,\r\n    private _liveAnnouncer: LiveAnnouncer,\r\n    private downloadService: DownloadService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.getItems();\r\n    this.getTellVaultDenomination();\r\n\r\n    this.getCurrency();\r\n    this.getBankCode();\r\n    this.getBranchCode();\r\n    this.getTillId();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.getItemSub) {\r\n      this.getItemSub.unsubscribe();\r\n    }\r\n  }\r\n  getItems() {\r\n    this.items = this.users;\r\n  }\r\n\r\n  doFilter(filterBy, e) {\r\n    console.log(filterBy, e);\r\n    this.filterTable(filterBy);\r\n    this.applyFilter(e);\r\n  }\r\n\r\n  filterTable(filterBy) {\r\n    this.dataSource.filterPredicate = (data: any, filter: string): boolean => {\r\n      return data[filterBy].toLocaleLowerCase().includes(filter);\r\n    };\r\n  }\r\n\r\n  clearFilter() {\r\n    this.dataSource.filter = \"\";\r\n    this.searchVal.nativeElement.value = \"\";\r\n    this.selectedFilterIndex = 0;\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n\r\n  announceSortChange(sortState: Sort) {\r\n    if (sortState.direction) {\r\n      this._liveAnnouncer.announce(`Sorted ${sortState.direction}ending`);\r\n    } else {\r\n      this._liveAnnouncer.announce(\"Sorting cleared\");\r\n    }\r\n  }\r\n  onFileChange(event) {\r\n    console.log('event', event.path[0].files[0]);\r\n    const file: File = event.path[0].files[0];\r\n    const uploadData = new FormData();\r\n    uploadData.append('screenType', 'tillVaultDenom');\r\n    uploadData.append('file', file);\r\n    this.apiService.uploadExelFile(uploadData).subscribe((response) => {\r\n      console.log(response);\r\n      this.getTellVaultDenomination();\r\n      this.snack.open(`File Uploaded Successfully`, \"OK\", {\r\n        duration: 4000,\r\n        verticalPosition: \"top\",\r\n        horizontalPosition: \"right\",\r\n      });\r\n    });\r\n  }\r\n \r\n  tillVaultDenomination(){\r\n    \r\n    this.downloadService.downloadFiles(\"tillVaultDenomination\", this.users );\r\n    \r\n\r\n\r\n  }\r\n\r\n\r\n\r\n     \r\n\r\n  deleteItem(row) {\r\n    this.confirmService\r\n      .confirm({ message: `Delete ${row.bankCode}?` })\r\n      .subscribe((res) => {\r\n        if (res) {\r\n          this.loader.open();\r\n          this.apiService.deleteTellerVaultDenomination(row.id).subscribe(\r\n            (data) => {},\r\n            (err) => {\r\n              if (err.status === 200) {\r\n                this.loader.close();\r\n                this.snack.open(`Record Deleted!'`, \"OK\", {\r\n                  duration: 2000,\r\n                  verticalPosition: \"top\",\r\n                  horizontalPosition: \"right\",\r\n                });\r\n                this.getTellVaultDenomination();\r\n              }\r\n            }\r\n          );\r\n        }\r\n      });\r\n  }\r\n\r\n  addNew() {\r\n    this.router.navigate([\"/maintenance/main/tillVaultDenom/add\"]);\r\n  }\r\n\r\n  openPopUp(row) {\r\n    console.log(row);\r\n    this.fetchTellVaultDenomination(row);\r\n    // this.dataService.sendNavParam(this.fetchVaultDenom);\r\n    this.router.navigate([`/maintenance/main/tillVaultDenom/${row.id}`]);\r\n  }\r\n\r\n  goBack() {\r\n    this.router.navigate([\"/maintenance/main/\"]);\r\n  }\r\n\r\n  getTellVaultDenomination() {\r\n    this.loading = true;\r\n    this.apiService.getTellerVaultDenomination().subscribe((resp) => {\r\n     \r\n      for(let i=0;i<resp.length;i++){\r\n        if(resp[i].authStatus == 'U'){\r\n          resp[i].authStatus = 'Unauthorized'\r\n        }\r\n        if(resp[i].authStatus == 'A') {\r\n          resp[i].authStatus = 'Authorized'\r\n        } \r\n        if(resp[i].recordStatus == 'O'){\r\n          resp[i].recordStatus = 'Open'\r\n        } \r\n        if(resp[i].recordStatus == 'C'){\r\n          resp[i].recordStatus = 'Closed'\r\n        }\r\n      }\r\n      this.users = resp;\r\n      this.items = this.users;\r\n      this.dataSource = new MatTableDataSource(resp);\r\n      console.log(this.dataSource);\r\n      this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n      this.loading = false;\r\n    });\r\n  }\r\n\r\n  fetchTellVaultDenomination(row) {\r\n    this.loader.open();\r\n    this.apiService.getTellerVaultDenomById(row.id).subscribe((resp) => {\r\n      this.data = resp;\r\n      console.log(\"this.till::\", this.till);\r\n      console.log(\"this.data::\", this.data);\r\n      this.tillData = this.till.find((x) => x.id == this.data.tillId);\r\n      console.log(\"this.data::\", this.tillData);\r\n     // this.data.tillId = this.tillData.tillVaultCode;\r\n      this.fetchVaultDenom = this.data;\r\n      // console.log(resp);\r\n      // this.fetchVaultDenom = resp;\r\n\r\n      if (this.fetchVaultDenom != null) {\r\n        localStorage.setItem(\r\n          \"fetchVaultDenom\",\r\n          JSON.stringify(this.fetchVaultDenom)\r\n        );\r\n        console.log(this.fetchVaultDenom);\r\n        this.loader.close();\r\n        // this.dataService.shareAccTypeItem(JSON.stringify(this.fetchAccTypeValue));\r\n      }\r\n    });\r\n  }\r\n\r\n  getCurrency() {\r\n    this.apiService.getCountryValues().subscribe((resp) => {\r\n      this.currency = resp;\r\n    });\r\n  }\r\n  getBankCode() {\r\n    this.apiService.getBankCode().subscribe((resp) => {\r\n      this.bankCode = resp;\r\n    });\r\n  }\r\n  getBranchCode() {\r\n    this.apiService.getBranchCode().subscribe((resp) => {\r\n      this.branchCode = resp;\r\n    });\r\n  }\r\n  getTillId() {\r\n    let tillOrVault = \"T\";\r\n    this.apiService.getTillData(tillOrVault).subscribe((resp) => {\r\n      console.log(\"tillData\", resp);\r\n      this.till = resp;\r\n    });\r\n  }\r\n}\r\n","<h1 class=\"main-head\"><small class=\"small-head\">Home > Maintenance Summary > Till Vault Denomination Maintenance </small>\r\n</h1>\r\n<div fxLayoutAlign=\"center\">\r\n  <mat-spinner *ngIf=\"loading\"></mat-spinner>\r\n</div>\r\n<div fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"mt-24\">\r\n  <button mat-icon-button (click)=\"goBack()\">\r\n    <mat-icon>arrow_back</mat-icon>\r\n  </button>\r\n  <span class=\"text-large\">\r\n    Till Vault Denomination Maintenance\r\n  </span>\r\n  </div>\r\n<mat-card class=\"mt-32\">\r\n  <div >    \r\n    <table style=\"margin: 18px;\">\r\n      <tr>\r\n        <td>\r\n          <h2>\r\n            Denominations\r\n          </h2>\r\n        </td>\r\n      </tr>\r\n      <tr>\r\n        <td>\r\n          <div class=\"highlight\">\r\n          </div>\r\n        </td>\r\n      </tr>\r\n    </table>\r\n    <span fxFlex></span>\r\n  <button mat-icon-button [matMenuTriggerFor]=\"menu\">\r\n    <mat-icon>more_vert</mat-icon>\r\n  </button>\r\n  <mat-menu #menu=\"matMenu\">\r\n    <div class=\"upload_botton\">\r\n      <button type=\"button\" mat-menu-item>Upload</button>\r\n      <input\r\n        type=\"file\"\r\n        accept=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\"\r\n        class=\"btn btn-success\"\r\n        (change)=\"onFileChange($event)\"\r\n      />\r\n    </div>\r\n    <button (click)=\"tillVaultDenomination()\"  mat-menu-item>\r\n      <span>Download</span>\r\n    </button>\r\n  </mat-menu>\r\n  </div>\r\n  <mat-card-content class=\"p-0\">\r\n    <div fxLayout=\"row\" class=\"w-full\" fxLayoutAlign=\"space-arround center\" class=\"ml-16 mt-32\">\r\n      <div fxLayout=\"row\" class=\"w-full\" fxLayoutGap=\"10px\">\r\n        <div>\r\n          <mat-form-field appearance=\"outline\">\r\n            <mat-label>Filter By</mat-label>\r\n            <mat-select name=\"filterBy\" #filterBy [(ngModel)]=\"selectedFilterIndex\" placeholder=\"Filter By\">\r\n              <!-- <mat-select name=\"filterBy\" #filterBy [(ngModel)]=\"selectedFilterIndex\"> -->\r\n              <mat-option value=\"0\">Select</mat-option>\r\n              <mat-option *ngFor=\"let filter of filterByOption\" value=\"{{filter.key}}\">\r\n                {{filter.value}}\r\n              </mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n        </div>\r\n        <div>\r\n          <mat-form-field appearance=\"outline\">\r\n            <mat-label>Search</mat-label>\r\n            <input matInput #searchVal (keyup)=\"doFilter(filterBy.value,$event)\" placeholder=\"Search\">\r\n            <!-- <input matInput #searchVal (keyup)=\"doFilter(filterBy.value,$event)\"> -->\r\n            <mat-icon matSuffix>search</mat-icon>\r\n          </mat-form-field>\r\n        </div>\r\n        <div *ngIf=\"searchVal.value || filterBy.value\" class=\"resetDiv\">\r\n          <button mat-stroked-button class=\"clearBtn\" (click)=\"clearFilter()\">RESET\r\n          </button>\r\n        </div>\r\n        <div class=\"filterDiv\">\r\n         <button mat-flat-button color=\"primary\" class=\"addNewBtn\" (click)=\"addNew()\" >ADD NEW\r\n         </button>\r\n       </div>    \r\n    </div>\r\n    </div>\r\n \r\n    <div class=\"mat-elevation-z0\">\r\n      <mat-table class=\"w-full\" [dataSource]=\"dataSource\" matSort (matSortChange)=\"announceSortChange($event)\">\r\n\r\n        <ng-container matColumnDef=\"bankCode\">\r\n          <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Bannk Code \"> Bank Code\r\n          </mat-header-cell>\r\n          <mat-cell *matCellDef=\"let element\"> {{element.bankCode}} </mat-cell>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"entityCode\">\r\n          <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by state code\"> Entity\r\n            Code\r\n          </mat-header-cell>\r\n          <mat-cell *matCellDef=\"let element\"> {{element.entityCode}} </mat-cell>\r\n        </ng-container>\r\n        \r\n        <ng-container matColumnDef=\"authStatus\">\r\n          <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Auth Status\"> Auth Status\r\n          </mat-header-cell>\r\n          <mat-cell *matCellDef=\"let element\"> {{element.authStatus}} </mat-cell>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"recordStatus\">\r\n          <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Record Status\"> Record\r\n            Status\r\n          </mat-header-cell>\r\n          <mat-cell *matCellDef=\"let element\"> {{element.recordStatus}} </mat-cell>\r\n        </ng-container>\r\n\r\n        <!-- <ng-container matColumnDef=\"status\">\r\n          <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by status\"> Status         \r\n          </mat-header-cell>\r\n          <mat-cell *matCellDef=\"let element\">  <mat-chip mat-sm-chip [color]=\"'primary'\" [selected]=\"element.isActive\">{{element.isActive ? 'active' : 'inactive'}}\r\n          </mat-chip> </mat-cell>\r\n        </ng-container> -->\r\n        \r\n        <ng-container matColumnDef=\"action\">\r\n          <mat-header-cell *matHeaderCellDef>Action</mat-header-cell>\r\n          <mat-cell *matCellDef=\"let element\">\r\n            <div>\r\n             <mat-icon class=\"actionIcons\" matTooltip=\"Edit\" (click)=\"openPopUp(element,'Yes')\"  >edit</mat-icon>\r\n          </div>&nbsp;&nbsp;&nbsp;&nbsp;\r\n          <div>\r\n           <mat-icon class=\"actionIcons\" matTooltip=\"Delete\" [disabled]=\"element.oneTimeAuth =='Y'\" (click)=\"deleteItem(element)\" >delete</mat-icon>\r\n          </div>\r\n          </mat-cell>\r\n        </ng-container>\r\n\r\n        <mat-header-row *matHeaderRowDef=\"displayedColumns;\"></mat-header-row>\r\n        <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\r\n      </mat-table>\r\n      <mat-paginator class=\"mt-16\" [pageSizeOptions]=\"[5, 10, 20]\" aria-label=\"Select page of users\"></mat-paginator>\r\n    </div>\r\n    <!-- <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\" aria-label=\"Select page of users\"></mat-paginator> -->\r\n  </mat-card-content>\r\n</mat-card>"]}