{"version":3,"file":"src_app_views_excel-mapping_excel-mapping_module_ts-es2015.js","mappings":"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","sources":["./src/app/shared/services/toast.service.ts","./src/app/views/excel-mapping/excel-mapping-edit/excel-mapping-edit.component.ts","./src/app/views/excel-mapping/excel-mapping-edit/excel-mapping-edit.component.html","./src/app/views/excel-mapping/excel-mapping-new/excel-mapping-new.component.ts","./src/app/views/excel-mapping/excel-mapping-new/excel-mapping-new.component.html","./src/app/views/excel-mapping/excel-mapping-routing.module.ts","./src/app/views/excel-mapping/excel-mapping.module.ts","./src/app/views/excel-mapping/excel-mapping/excel-mapping.component.ts","./src/app/views/excel-mapping/excel-mapping/excel-mapping.component.html"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Ng2IzitoastService } from 'ng2-izitoast';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ToastService {\r\n\r\n  constructor(\r\n    public iziToast: Ng2IzitoastService\r\n  ) { }\r\n\r\n  successMessage(title: string, msg: string) {\r\n    this.iziToast.success({\r\n      title: title,\r\n      message: msg,\r\n      layout: 2,\r\n      balloon: false,\r\n      position: \"topRight\",\r\n      progressBarColor: \"red\",\r\n      pauseOnHover: true,\r\n    });\r\n  }\r\n\r\n  errorMessage(title: string, msg: string) {\r\n    this.iziToast.error({\r\n      title: title,\r\n      message: msg,\r\n      layout: 2,\r\n      balloon: false,\r\n      position: \"topRight\",\r\n      progressBarColor: \"red\",\r\n      pauseOnHover: true,\r\n    });\r\n  }\r\n\r\n  infoMessage(title: string, msg: string) {\r\n    this.iziToast.info({\r\n      title: title,\r\n      message: msg,\r\n      layout: 2,\r\n      balloon: false,\r\n      position: \"topRight\",\r\n      progressBarColor: \"red\",\r\n      pauseOnHover: true,\r\n    });\r\n  }\r\n\r\n}\r\n","import { HttpErrorResponse } from '@angular/common/http';\r\nimport { ChangeDetectorRef, Component, OnInit } from '@angular/core';\r\nimport { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { Observable, of, Subject } from 'rxjs';\r\nimport { CanDeactivateGuard, IDeactivateComponent } from 'src/app/shared/guards/can-deactivate.guard';\r\nimport { permissionsLabels } from 'src/app/shared/models/fmosNewRolePermissions';\r\nimport { ApiService } from 'src/app/shared/services/api.service';\r\nimport { RoleService } from 'src/app/shared/services/role.service';\r\nimport { ToastService } from 'src/app/shared/services/toast.service';\r\nimport Swal from 'sweetalert2';\r\nexport interface DTYPES {\r\n  id: number;\r\n  type: string;\r\n  value: string;\r\n  isActive: boolean;\r\n}\r\n\r\n@Component({\r\n  selector: 'npr-excel-mapping-edit',\r\n  templateUrl: './excel-mapping-edit.component.html',\r\n  styleUrls: ['./excel-mapping-edit.component.scss']\r\n})\r\nexport class ExcelMappingEditComponent implements OnInit,IDeactivateComponent {\r\n  roleCodes = new permissionsLabels();\r\n  updateMappingForm: FormGroup;\r\n  editFlag: boolean = false;\r\n  editFlag1: boolean = false;\r\n  showCurrencyDropdown : boolean = true;\r\n  showFieldCurrency : boolean = false;\r\n  showFieldsheetNum : boolean = false;\r\n  showFetch : boolean = true;\r\n  extSysData: string[];\r\n  processResp: any;\r\n  processName: string;\r\n  extNameValue: any;\r\n  extSysCode: any = null;\r\n  excelprocess: any = null;\r\n  addForm: FormGroup;\r\n  currentUser: any;\r\n  is_edit: boolean;\r\n  submitted: boolean = false;\r\n  currency: any;\r\n  excelMappingDisabled: boolean;\r\n  dataFromresponse: Object;\r\n  externalsysCode: any;\r\n  processCode: any;\r\n  curr: any;\r\n  tempStore: any = [];\r\n  disablefetchbtn: boolean = false;\r\n  fileNames: string[];\r\n  updateDataResp: Object;\r\n  extSysCodeFromsummary: any;\r\n  formTouched: boolean=true;\r\n  addformTouched: boolean=true;\r\n  ccyData: any;\r\n  extCodefromSummry: any;\r\n  extNamefromSummry: any;\r\n  sheetNumber: any;\r\n  formdata: any;\r\n  progress: boolean;\r\n  dataSource: any;\r\n  subscribe : any;\r\n  editafterfetch: boolean;\r\n  dataSaved : boolean = false;\r\n  copyData = true;\r\n  dataTypes: DTYPES[] = [\r\n    { id: 3, type: 'Clob', value: 'clob_901', isActive: false },\r\n    { id: 1, type: 'Date', value: 'date_751', isActive: true },\r\n    { id: 2, type: 'Number', value: 'number_600', isActive: false },\r\n    { id: 4, type: 'Varchar', value: 'varchar_0', isActive: false }\r\n  ];\r\n  // @ViewChildren('fetchBtn') fetchButton: MatButton;\r\n  // @ViewChildren('updateBtn') updateButton: MatButton;\r\n  startingValue: any;\r\n  extCodeValue: any;\r\n  isCheckedValue: any;\r\n  proCodeValue: any;\r\n  currencyValue: any;\r\n  sheetNumberValue: any;\r\n  summryResponse: any;\r\n  extCode: any;\r\n  mappingResponse: any;\r\n  authStatus: any;\r\n  recordStatus: any;\r\n  modifiedBy: any;\r\n  modifiedTime: any;\r\n  authorizedBy: any;\r\n  authorizedTime: any;\r\n  version: any;\r\n  verifiedStatus: any;\r\n  processNAme: any;\r\n  sheetNumb: any;\r\n  sheetData: any;\r\n  extSys: any;\r\n  newDataResponse: any;\r\n  firstTimeAuth: any;\r\n  showDialog = false;\r\n  subject = new Subject<boolean>();\r\n  externalSysData: any;\r\n  externalSystsemCodes: any;\r\n  \r\n  constructor(private apiService: ApiService, private cdr: ChangeDetectorRef,\r\n    private fb: FormBuilder, private toastService: ToastService,private router:Router,\r\n    private roleService: RoleService,private canDeactivateGuard: CanDeactivateGuard) { }\r\n\r\n  ngOnInit(): void {\r\n    this.currentUser = localStorage.getItem(\"userFromLogin\");\r\n    this.getExtCodeforDropdown();\r\n    setTimeout(() => {\r\n      this.newRolePermissions();\r\n    }, 2000);\r\n    this.roleService.screenLabelList.subscribe(message => this.roleCodes = message);\r\n    setTimeout(() => {\r\n      console.log(this.roleCodes);\r\n    }, 3000);\r\n   console.log(\"role codes\",this.roleCodes)\r\n\r\n    // this.updateMappingForm = this.fb.group({\r\n    //   extCode: [\"\"],\r\n    //   proCode: [\"\"],\r\n    //   startingRow: [\"\"],\r\n    //   currency: [\"\"],\r\n    //   sheetNumber: [\"\"],\r\n    //   headerRepeated: [\"\"],\r\n\r\n    // });\r\n    this.updateMappingForm = this.fb.group({\r\n      processName: [\"\"],\r\n      extSysCode: [\"\"],\r\n      extSys: [\"\"],\r\n      userId: [this.currentUser],\r\n      sheetNumber: [\"\"],\r\n      headerRepeated: [false],\r\n      startingRow:[\"\"],\r\n      currency:[\"\"]\r\n    });\r\n    this.addForm = this.fb.group({\r\n      excelMappingDetails: this.fb.array([this.getSubArray()])\r\n    });\r\n    this.gettingSummaryData();\r\n    \r\n    \r\n   \r\n  }\r\n  newRolePermissions()\r\n  {\r\n    this.roleService.fetchScreenPermissions('Template Mapping');\r\n  }\r\n  \r\n  canExit() : Promise<boolean> {\r\n    let isExit :boolean = false;\r\n    if ((this.updateMappingForm.touched || this.addForm.touched)  && this.formTouched==true) {\r\n    return Swal.fire({ \r\n      text: 'There are unsaved changes in the screen. Would you like to navigate to other screen?',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#E6224A',\r\n      cancelButtonColor: '#011945',\r\n      cancelButtonText: 'NO',\r\n      confirmButtonText: 'YES',\r\n      icon: 'info',\r\n    }).then((result) => {\r\n      if (result.isConfirmed === true) {\r\n        isExit=true;\r\n        this.cdr.markForCheck();\r\n           return isExit;\r\n      }\r\n      else{\r\n        isExit=false;\r\n        this.cdr.markForCheck();\r\n        return isExit;\r\n      }\r\n    \r\n    });\r\n  }\r\n else{\r\n  isExit=true;\r\n  return new Promise((resolve, reject) => {\r\n    if (isExit === true) {\r\n      isExit=true;\r\n      this.cdr.markForCheck();\r\n      resolve(true);\r\n    }\r\n  \r\n  })\r\n }\r\n    }\r\n  \r\n\r\n  getSubArray(): FormGroup {\r\n    return this.fb.group({\r\n      columnnName: ['', [Validators.required]],\r\n      dataType: [null, [Validators.required]],\r\n      mandatory: [false],\r\n      // mandatory: [\"\"],\r\n      headerName: ['',[Validators.required]],\r\n      dateFormat: [{ value: '', disabled: true }],\r\n      // dateFormat: [''],\r\n      // authStatus: [''],\r\n      // modifiedBy: [''],\r\n      // modifiedBy: ['JILU'],\r\n      // authorizedBy: [''],\r\n      // version: [''],\r\n      // modifiedTime: [''],\r\n      // authorizedTime: [''],\r\n      // recordStatus: [''],\r\n      delimeter: ['',],\r\n      defaultValue: ['',],\r\n      repeatedTillNextValue: ['',],\r\n      // excelMappingColumn:[''],\r\n      tableMappingColumn:[''],\r\n      mappingMasterId:[''],\r\n      mappingDetailId:[''],\r\n      excelMappingColumn: ['', [Validators.required,Validators.minLength(1), Validators.maxLength(3  ), Validators.pattern('^[a-zA-Z \\-#,@,%\\']+')]],\r\n\r\n      // columnnName: ['', [Validators.required]],\r\n      // dataType: [null, [Validators.required]],\r\n      // excelMappingColumn: ['', [Validators.minLength(1), Validators.maxLength(3), Validators.pattern('^[a-zA-Z \\-#,@,%\\']+')]],\r\n      // mandatory: false,\r\n      // id:[''],\r\n      // mandatory: [\"\"],\r\n      // headerName: [''],\r\n      // dateFormat: [{ value: '', disabled: true }],\r\n      // authStatus: [''],\r\n      // modifiedBy: [''],\r\n      // authorizedBy: [''],\r\n      // version: [''],\r\n      // modifiedTime: [''],\r\n      // authorizedTime: [''],\r\n      // recordStatus: [''],\r\n      // delimeter: [''],\r\n      // defaultValue: [''],\r\n      // repeatedTillNextValue: [''],\r\n      // firstTimeAuth:['']\r\n\r\n    });\r\n  }\r\n  gettingSummaryData() {\r\n      this.apiService.getexcelSummaryData().subscribe((resp) => {\r\n      this.summryResponse = resp;\r\n      console.log(\"this.summryResponse\",this.summryResponse);\r\n      var retrievedObject = localStorage.getItem('summryResponse');\r\n      this.summryResponse = JSON.parse(retrievedObject);\r\n    });\r\n      if (this.summryResponse) {\r\n        this.getExtSysNameByExtSysCode(this.summryResponse.extSysCode);\r\n        this.extSysCode = this.summryResponse.extSysCode;\r\n        this.processNAme = this.summryResponse.processName;\r\n        this.extSys = this.summryResponse.extSys;\r\n        this.currency=this.summryResponse.currency;\r\n        this.sheetNumber=this.summryResponse.sheetNumber;\r\n        this.updateMappingForm.controls.extSysCode.setValue(this.extSysCode);\r\n        this.updateMappingForm.controls.processName.setValue(this.processNAme);\r\n        //  this.apiService.getExcelMappingDataforEdit(this.extSysCode,this.processNAme,this.extSys).subscribe((editResp) =>{\r\n          this.apiService.getTemplateMappingDataforEdit(this.extSys,this.processNAme,this.currency,this.sheetNumber).subscribe((editResp) =>{\r\n          console.log(\"This. is new Resp\",editResp);\r\n          this.newDataResponse = editResp;\r\n          \r\n          localStorage.setItem('newDataResponse', JSON.stringify(this.newDataResponse));\r\n          // var retrievedObject = localStorage.getItem('newDataResponse');\r\n          // this.newDataResponse = JSON.parse(retrievedObject);\r\n          console.log(this.newDataResponse,\"After\");\r\n          this.showFieldCurrency = true;\r\n          this.showFieldsheetNum = true;\r\n          this.updateMappingForm.controls.currency.setValue(this.newDataResponse.currency);\r\n          this.updateMappingForm.controls.sheetNumber.setValue(this.newDataResponse.sheetNumber);\r\n          const startingRow = this.newDataResponse.startingRow;\r\n          const headerRepeated = this.newDataResponse.headerRepeated;\r\n          this.updateMappingForm.controls.startingRow.setValue(startingRow);\r\n          this.updateMappingForm.controls.headerRepeated.setValue(headerRepeated);\r\n          this.showCurrencyDropdown = false;\r\n          this.auditLog();\r\n          \r\n          this.patchData(this.newDataResponse.excelMappingDetails.sort((a,b)=>a.excelMappingColumn>b.excelMappingColumn? 1 : -1));\r\n          // this.cdr.markForCheck();\r\n          // this.cdr.markForCheck();\r\n          // this.getAllMappingData(this.extSysCode,this.processNAme,this.newDataResponse.currency,this.newDataResponse.sheetNumber);\r\n          // console.log(this.sheetData,this.ccyData);\r\n          // if(this.newDataResponse.currency.length === 1){\r\n          //   this.currency = this.newDataResponse.currency[0];\r\n          //   this.sheetNumb = this.newDataResponse.currencySheetMap[this.ccyData];\r\n          //   this.showFieldCurrency = true;\r\n          //   this.showFieldsheetNum = true;\r\n          //   this.showFetch = false;\r\n          //   this.updateMappingForm.controls.currency.setValue(this.currency);\r\n          //   this.updateMappingForm.controls.sheetNumber.setValue(this.sheetNumb);\r\n          //   this.getAllMappingData(this.extSysCode,this.processNAme,this.currency,this.sheetNumb);\r\n          // }\r\n          // else{\r\n          //   this.showFetch = true;\r\n          // }\r\n        })\r\n       \r\n        setTimeout(() => {\r\n          this.getProcess(this.extSysCode);\r\n        }, 100);\r\n       \r\n      }\r\n  }\r\n  getAllMappingData(extSysCode,processName,currenyVal,sheetNumber) {\r\n    console.log(\"Checking ?\",extSysCode,processName,currenyVal,sheetNumber);\r\n    this.apiService.fetchAllName(extSysCode, processName, currenyVal).subscribe(\r\n      filenames => {\r\n        this.fileNames = filenames;\r\n      });\r\n    this.apiService.getAllMappingByExtSysAndProcessCode(extSysCode, processName, currenyVal, sheetNumber)\r\n      .subscribe(mappingResponse => {\r\n        this.mappingResponse = mappingResponse;\r\n        localStorage.setItem('mappingResponse', JSON.stringify(this.mappingResponse));\r\n        var retrievedObject = localStorage.getItem('mappingResponse');\r\n        this.mappingResponse = JSON.parse(retrievedObject);\r\n        console.log(\"this.mappingResponse\",this.mappingResponse);\r\n        if (this.mappingResponse == null) {\r\n          Swal.fire({\r\n            title: 'Excel mapping is not available with this sheet number!',\r\n            text : 'Please enter the correct sheet number',\r\n            icon : 'warning'\r\n          });\r\n        }\r\n        else {\r\n          Swal.fire({\r\n            title: 'Data Fetched Successfully!',\r\n            icon : 'success'\r\n          });\r\n          const startingRow = this.mappingResponse[0].startingRow;\r\n          const headerRepeated = this.mappingResponse[0].headerRepeated;\r\n          this.updateMappingForm.controls.startingRow.setValue(startingRow);\r\n          this.updateMappingForm.controls.headerRepeated.setValue(headerRepeated);\r\n          this.showCurrencyDropdown = false;\r\n          this.auditLog();\r\n          this.patchData(this.mappingResponse);\r\n          this.cdr.markForCheck();\r\n          this.cdr.markForCheck();\r\n        }\r\n      });\r\n  }\r\n  getCurrencyData(event, type) {\r\n    console.log(event.target.value,type);\r\n    const selectedCurrency = event.target.value;\r\n    // const sheetNum = this.newDataResponse.currencySheetMap[selectedCurrency];   \r\n    this.updateMappingForm.controls.sheetNumber.setValue(this.sheetNumber);\r\n    this.showFieldsheetNum = true;\r\n    // if(data.sheetNumber != this.sheetNumber  && data.processCode != this.poojaprocess2 && data.currency != this.currency)\r\n    // {\r\n    //   this.disablefetchbtn = false;\r\n    // }\r\n    // if(data.sheetNumber != null  && data.processCode != null && data.currency != null)\r\n    // {\r\n    //   this.disablefetchbtn = false;\r\n    // }\r\n\r\n  }\r\n  getsheetNumData(event, type){\r\n    console.log(\"event\", event.target.value, type);\r\n  }\r\n  \r\n  getExtCodeforDropdown() {\r\n    // this.apiService.getAllExtsysNameAndProcessCodeOnAuthStatus()\r\n    //   .subscribe(response => {\r\n    //     this.externalSysData=response;\r\n    //     this.extSysData = response.extSysList.sort();\r\n    //     console.log(this.externalSysData);\r\n    //   });\r\n      this.apiService.getAllExtsysNameOnAuthStatus()\r\n      .subscribe(response => {\r\n        this.externalSysData=response;\r\n        this.extSysData = response.sort();\r\n        \r\n      });\r\n   \r\n  }\r\n  getProcess(extSysCode) {\r\n    console.log( this.externalSysData.map[extSysCode].extSysName);\r\n    this.externalSystsemCodes = this.externalSysData.map[extSysCode].extSysName;\r\n    this.updateMappingForm.value.extSys=this.externalSysData.map[extSysCode].extSysName;\r\n    this.updateMappingForm.get('processName').setValue(this.externalSysData.map[extSysCode].processCode);\r\n    this.processName=this.externalSysData.map[extSysCode].processCode;\r\n    // this.apiService.getProcessNameByExtSysCode(extSysCode).subscribe(response => {\r\n    //   this.processResp = response;\r\n    //   this.processName = this.processResp;\r\n      this.getExtSysNameByExtSysCode(extSysCode);\r\n    // });\r\n  }\r\n  getExtSysNameByExtSysCode(extSysCode) {\r\n    this.apiService.getExtSysNameByExtSysCode(extSysCode)\r\n      .subscribe(data => {\r\n        this.extNameValue = data;\r\n      });\r\n      console.log(this.extNameValue);\r\n  }\r\n  // getProcessName(processCode, extCodefromSummry) {\r\n  //   this.extSysCode = extCodefromSummry;\r\n  //   this.excelprocess = processCode;\r\n  //   this.apiService.getCurrencyOnExtNameAndProcssCode(this.extSysCode, this.excelprocess, this.extCode).subscribe(data => {\r\n  //     this.ccyData = data;\r\n  //     console.log(\"Currency\", this.ccyData);\r\n  //     if (this.ccyData.length == 0) {\r\n  //       Swal.fire({\r\n  //         title: 'No Currency Found For the Process code!',\r\n  //         icon: 'warning'\r\n  //       });\r\n  //       return;\r\n  //     }\r\n  //   });\r\n\r\n  // } \r\n   getProcessName(extSysCode, processCode,extNameValue) {\r\n    // this.extSysCode = extCodefromSummry;\r\n    // this.excelprocess = processCode;\r\n    this.apiService.getCurrencyOnExtNameAndProcssCode(extSysCode, processCode, extNameValue).subscribe(data => {\r\n      this.ccyData = data;\r\n      console.log(\"Currency\", this.ccyData);\r\n      if (this.ccyData.length == 0) {\r\n        Swal.fire({\r\n          title: 'No Currency Found For the Process code!',\r\n          icon: 'warning'\r\n        });\r\n        return;\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n \r\n  patchData(formdata) {\r\n    console.log(formdata);\r\n    const control = <FormArray>this.addForm.controls.excelMappingDetails;\r\n    control.controls = [];\r\n    for (let i = 0; i < formdata.length; i++) {\r\n\r\n      control.push(this.getSubArray());\r\n      console.log(\"Inside for loop\");\r\n    }\r\n    console.log(control);\r\n    console.log(this.addForm);\r\n    // console.log(\"Outside for loop\",this.addForm.controls.excelMappingDetails);\r\n    this.addForm.patchValue({excelMappingDetails: formdata});\r\n    console.log(this.addForm);\r\n  }\r\n  addSubArray() {\r\n    const control = <FormArray>this.addForm.controls['excelMappingDetails'];\r\n    control.push(this.getSubArray());\r\n  }\r\n  getSubArrayFormGroup(index): FormGroup {\r\n    const control = <FormArray>this.addForm.controls.excelMappingDetails;\r\n    const fg = control.get([index]);\r\n    return fg.value;\r\n  }\r\n  get f() { return this.addForm.controls; }\r\n  get t() { return this.f.excelMappingDetails as FormArray; }\r\n\r\n\r\n  auditLog(){\r\n    console.log(this.newDataResponse);\r\n    this.authStatus = this.newDataResponse?.authStatus;\r\n    this.recordStatus = this.newDataResponse?.recordStatus;\r\n    this.modifiedBy = this.newDataResponse?.inputBy;\r\n    this.modifiedTime = this.newDataResponse?.inputDtStamp;\r\n    this.authorizedBy = this.newDataResponse?.authorizedBy;\r\n    this.authorizedTime = this.newDataResponse?.authorizedDtStamp;\r\n    this.version = this.newDataResponse?.version;\r\n    this.firstTimeAuth=this.newDataResponse?.firstTimeAuth;\r\n    console.log(\"AuditLog\",this.authStatus,this.recordStatus,this.modifiedBy,this.authorizedBy);\r\n    if (this.authStatus === 'U') {\r\n      this.authStatus = 'UNAUTHORIZED';\r\n    }\r\n    if (this.authStatus === 'A') {\r\n      this.authStatus = 'AUTHORIZED';\r\n    }\r\n    if (this.recordStatus === 'C') {\r\n      this.recordStatus = 'CLOSED';\r\n    }\r\n    if (this.recordStatus === 'O') {\r\n      this.recordStatus = 'OPEN';\r\n    }\r\n    if (this.firstTimeAuth === 'Y') {\r\n      this.firstTimeAuth = 'YES';\r\n    }\r\n    if (this.firstTimeAuth === 'N') {\r\n      this.firstTimeAuth = 'NO';\r\n    }\r\n  }\r\n\r\n  checkTypeStatus(i) {\r\n    const control = <FormArray>this.addForm.controls['excelMappingDetails'];\r\n    let fg = control.get([i]);\r\n    if (fg.value.dataType == 'Date') {\r\n      this.is_edit = false;\r\n      fg.get('dateFormat').enable();\r\n    } else {\r\n      fg.get('dateFormat').disable();\r\n    }\r\n  }\r\n  mandatoryCheck(values: any,i) {\r\n    const value = values.currentTarget.checked;\r\n    const control = <FormArray>this.addForm.get('excelMappingDetails') as FormArray;\r\n    control.at(i).get('mandatory').setValue(value);\r\n    console.log(\"value\",value,i);\r\n  }\r\n  enableEditFlag() {\r\n    this.editFlag = true;\r\n    this.editFlag1 = false;\r\n    this.showCurrencyDropdown = true;\r\n    const control = <FormArray>this.addForm.controls['excelMappingDetails'];\r\n    // console.log(control);\r\n    for(let i = 0;i<this.addForm.get('excelMappingDetails')['controls'].length;i++){\r\n      let fg = control.get([i]);\r\n      if (fg.value.dataType == \"date_751\") {\r\n        console.log(\"Inside If\");\r\n        this.is_edit = false;\r\n        fg.get('dateFormat').enable();\r\n      } \r\n      else {\r\n        console.log(\"Inside else\");\r\n        fg.get('dateFormat').disable();\r\n      }\r\n    }\r\n\r\n\r\n  \r\n  }\r\n  clickFunction(i){\r\n    console.log(\"i\",i);\r\n  }\r\n  copyMaping(excelCopyData){\r\n    this.mappingResponse='';\r\n    this.editFlag=true;\r\n    this.copyData=false;\r\n    this.processResp =[];\r\n    this.excelprocess = '';\r\n    excelCopyData.excelMappingDetails.forEach(element => {\r\n          element.id = null;\r\n        });\r\n        console.log(excelCopyData.excelMappingDetails);\r\n  }\r\n  updateMappingData(subArrayForm,excelForm) {\r\n    console.log(this.extNameValue);\r\n    // excelForm.extSys=this.externalSystsemCodes;\r\n    this.submitted = true;\r\n    this.progress = true;\r\n    // this.extCodeValue =  excelForm.extSysCode;\r\n    // this.proCodeValue =  excelForm.processName;\r\n    // this.isCheckedValue =  excelForm.headerRepeated;\r\n    // this.startingValue = excelForm.startingRow;\r\n    // this.currencyValue = excelForm.currency;\r\n    // this.sheetNumberValue = excelForm.sheetNumber;\r\n    let modifiedBy = subArrayForm.excelMappingDetails[0].inputBy;\r\n    modifiedBy = this.currentUser;\r\n    if (this.addForm.invalid) {\r\n      Swal.fire({\r\n        text: 'Numeric values not allowed in mapping column!',\r\n        icon : 'warning'\r\n      });\r\n      return;\r\n    }\r\n    excelForm.extSys=this.extNameValue;\r\n    var obj = {\r\n\r\n      ...excelForm,\r\n\r\n      ...subArrayForm,\r\n\r\n    }\r\n   console.log(obj)\r\n    // this.apiService.updateMappingData(subArrayForm,this.extCodeValue,this.proCodeValue,this.extCodeValue,\r\n    //   this.startingValue,this.isCheckedValue,this.currentUser,this.currencyValue,this.sheetNumberValue)\r\n    this.apiService.excelMappingAuditLog(obj,'update').subscribe(\r\n        updateData => {\r\n          this.newDataResponse = updateData;\r\n          console.log(this.newDataResponse);\r\n          if (this.newDataResponse) {\r\n            this.editFlag = false;\r\n            this.showCurrencyDropdown = false;\r\n            this.dataSaved = true;\r\n            Swal.fire({\r\n              text: 'Record is Updated!',\r\n              icon : 'success'\r\n            }\r\n           \r\n            );\r\n            this.auditLog();\r\n            console.log(\"Record u[dated\");\r\n            \r\n            this.formTouched=!this.updateMappingForm.touched;\r\n            this.updateMappingForm.markAsUntouched();\r\n            this.updateMappingForm.markAsPristine();\r\n            // this.addformTouched=!this.addForm.touched;\r\n            this.addForm.markAsUntouched();\r\n            this.addForm.markAsPristine();\r\n            // this.cdr.markForCheck();\r\n          } else {\r\n            Swal.fire({\r\n              text: 'Failed to update ',\r\n              icon : 'error'\r\n            });\r\n          }\r\n        }\r\n      );\r\n  }\r\n  onClickOfAuth(addForm, updateForm){\r\n    this.currentUser = localStorage.getItem(\"userFromLogin\");\r\n    console.log(\"this.currentUser\",this.currentUser,addForm,updateForm );\r\n    // this.extCodeValue =  updateForm.extSysCode;\r\n    // this.extNameValue =  updateForm.extSysCode;\r\n    // this.proCodeValue =  updateForm.processName;\r\n    // this.currencyValue = updateForm.currency;\r\n    console.log(this.newDataResponse);\r\n    if (this.modifiedBy === this.currentUser) {\r\n      Swal.fire({\r\n        title: 'Maker Cannot Authorized the Record!',\r\n        icon: 'error'\r\n      });\r\n    } else {\r\n      Swal.fire(\r\n        {\r\n          text: 'You are trying to Authorize the record. ' + ' Do you want to proceed?',\r\n          showCancelButton: true,\r\n          confirmButtonColor: '#E6224A',\r\n          cancelButtonColor: '#011945',\r\n          // confirmButtonText: 'PROCEED.'\r\n          cancelButtonText: 'NO',\r\n          confirmButtonText: 'YES',\r\n          icon:'info'\r\n        }\r\n      ).then((result => {\r\n        if(result.isConfirmed=== true){\r\n          this.newDataResponse.userId=this.currentUser;\r\n      // this.apiService.onAuthorizingTheRecordOfExcelMApping(addForm,this.extNameValue,this.proCodeValue,this.extCodeValue, this.currentUser,this.currencyValue)\r\n      this.apiService.excelMappingAuditLog(this.newDataResponse,'authorize')\r\n\r\n      .subscribe(authResp => {\r\n        this.newDataResponse = authResp;\r\n        if(this.newDataResponse){\r\n          this.authStatus = this.newDataResponse?.authStatus;\r\n          this.recordStatus = this.newDataResponse?.recordStatus;\r\n          // this.modifiedBy = this.mappingResponse?.modifiedBy;\r\n          this.modifiedTime = this.newDataResponse?.inputDtStamp;\r\n          this.authorizedBy = this.newDataResponse?.authorizedBy;\r\n          this.authorizedTime = this.newDataResponse?.authorizedDtStamp;\r\n          this.version = this.newDataResponse?.version;\r\n          this.firstTimeAuth=this.newDataResponse?.firstTimeAuth;\r\n          this.modifiedBy = this.newDataResponse?.inputBy;\r\n          \r\n          if (this.authStatus === 'U') {\r\n            this.authStatus = 'UNAUTHORIZED';\r\n          }\r\n          if (this.authStatus === 'A') {\r\n            this.authStatus = 'AUTHORIZED';\r\n          }\r\n          if (this.recordStatus === 'C') {\r\n            this.recordStatus = 'CLOSED';\r\n          }\r\n          if (this.recordStatus === 'O') {\r\n            this.recordStatus = 'OPEN';\r\n          }\r\n          if (this.firstTimeAuth === 'Y') {\r\n            this.firstTimeAuth = 'YES';\r\n          }\r\n          if (this.firstTimeAuth === 'N') {\r\n            this.firstTimeAuth = 'NO';\r\n          }\r\n          Swal.fire({\r\n            title: 'Record is Authorized',\r\n            icon: 'success'\r\n          });\r\n\r\n        }\r\n      })\r\n    }}));\r\n    }\r\n\r\n  }\r\n  onClickDelete(addForm,updateForm){\r\n    console.log(this.newDataResponse);\r\n       Swal.fire(\r\n      {\r\n        text: 'You are trying to delete record. ' + ' Do you want to proceed?',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#E6224A',\r\n        cancelButtonColor: '#011945',\r\n        // confirmButtonText: 'PROCEED.'\r\n        cancelButtonText: 'NO',\r\n        confirmButtonText: 'YES',\r\n        icon:'info'\r\n      }\r\n    ).then((result => {\r\n      if(result.isConfirmed=== true){\r\n        \r\n        \r\n        this.apiService.deleteTemplateMapping(this.extSys,this.processNAme,this.currency,this.sheetNumber).subscribe(deleteRsp=>{\r\n          // console.log(deleteRsp);\r\n          if(deleteRsp == true){\r\n            Swal.fire({\r\n              title: 'Record is deleted',\r\n              icon: 'success'\r\n            }).then(result=>{\r\n              this.router.navigate(['/excel-mapping']);\r\n            });\r\n            // this.router.navigateByUrl('/excel-mapping');\r\n          }\r\n          else{\r\n            Swal.fire({\r\n              title: 'Failed to Delete the Recored!',\r\n              icon: 'error'\r\n            });\r\n\r\n          }\r\n          \r\n        })\r\n\r\n      }}))\r\n\r\n  }\r\n  onClickOfClose(addForm, updateForm){\r\n    // console.log(addForm);\r\n    // console.log(updateForm);\r\n    // this.extCodeValue =  updateForm.extSysCode;\r\n    // this.extNameValue =  updateForm.extSysCode;\r\n    // this.proCodeValue =  updateForm.processName;\r\n    // this.currencyValue = updateForm.currency;\r\n    //  this.currentUser = this.newDataResponse.inputBy;\r\n    //  console.log(this.extCodeValue);\r\n    //  console.log(this.extNameValue);\r\n    //  console.log(this.proCodeValue);\r\n    //  console.log(this.currencyValue);\r\n    //  console.log(this.currentUser);\r\n     console.log(this.newDataResponse);\r\n       Swal.fire(\r\n      {\r\n        text: 'You are trying to Close the record. ' + ' Do you want to proceed?',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#E6224A',\r\n        cancelButtonColor: '#011945',\r\n        // confirmButtonText: 'PROCEED.'\r\n        cancelButtonText: 'NO',\r\n        confirmButtonText: 'YES',\r\n        icon:'info'\r\n      }\r\n    ).then((result => {\r\n      if(result.isConfirmed=== true){\r\n    // this.apiService.onClcikOFCloseOfUpdateExcelMApping(addForm,this.extCodeValue,this.proCodeValue,this.extNameValue,this.currencyValue)\r\n    this.apiService.excelMappingAuditLog(this.newDataResponse,'close').subscribe(closeResp => {\r\n      \r\n      console.log(closeResp);\r\n      this.newDataResponse = closeResp;\r\n      if (this.newDataResponse) {\r\n        this.authStatus = this.newDataResponse?.authStatus;\r\n        this.recordStatus = this.newDataResponse?.recordStatus;\r\n        this.modifiedBy = this.newDataResponse?.inputBy;\r\n        this.modifiedTime = this.newDataResponse?.inputDtStamp;\r\n        this.authorizedBy = this.newDataResponse?.authorizedBy;\r\n        this.authorizedTime = this.newDataResponse?.authorizedTime;\r\n        this.version = this.newDataResponse?.version;\r\n        \r\n        if (this.authStatus === 'U') {\r\n          this.authStatus = 'UNAUTHORIZED';\r\n        }\r\n        if (this.authStatus === 'A') {\r\n          this.authStatus = 'AUTHORIZED';\r\n        }\r\n        if (this.recordStatus === 'C') {\r\n          this.recordStatus = 'CLOSED';\r\n        }\r\n        if (this.recordStatus === 'O') {\r\n          this.recordStatus = 'OPEN';\r\n        }\r\n        Swal.fire({\r\n          title: 'Record is Closed',\r\n          icon: 'success'\r\n        });\r\n        this.auditLog();\r\n      }\r\n      else {\r\n        Swal.fire({\r\n          title: 'Failed to Close the Recored!',\r\n          icon: 'error'\r\n        });\r\n      }\r\n    },\r\n      error => {\r\n        if (HttpErrorResponse) {\r\n          Swal.fire({\r\n            text: 'Server Error!',\r\n            icon: 'error'\r\n          });\r\n        }\r\n      });\r\n    }}));\r\n  }\r\n  onClickOfReopen(addForm, updateForm){\r\n    this.extCodeValue =  updateForm.extSysCode;\r\n    this.extNameValue =  updateForm.extSysCode;\r\n    this.proCodeValue =  updateForm.processName;\r\n    this.currencyValue = updateForm.currency;\r\n     this.currentUser = this.newDataResponse.inputBy;\r\n     Swal.fire(\r\n      {\r\n        //text: 'Unable to process' + 'Error ' + this.responseforfileupload.errorMessage + 'Do you want to Proceed??',\r\n        text: 'You are trying to re-open record. ' + ' Do you want to proceed?',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        // confirmButtonText: 'PROCEED.'\r\n        cancelButtonText: 'NO',\r\n        confirmButtonText: 'YES', 'icon': 'info'\r\n      }\r\n    ).then((result => {\r\n      console.log(\"this is reopen \", result);\r\n      if (result.isConfirmed === true) {\r\n    // this.apiService.onClcikOfReopenOfUpdateExcelMapping(addForm,this.extCodeValue,this.proCodeValue,this.extNameValue,this.currencyValue)\r\n    this.apiService.excelMappingAuditLog(this.newDataResponse,'reopen').subscribe(openResp => {\r\n      console.log(openResp);\r\n      this.newDataResponse = openResp;\r\n      if (this.newDataResponse) {\r\n        this.authStatus = this.newDataResponse?.authStatus;\r\n        this.recordStatus = this.newDataResponse?.recordStatus;\r\n        this.modifiedBy = this.newDataResponse?.inputBy;\r\n        this.modifiedTime = this.newDataResponse?.inputDtStamp;\r\n        this.authorizedBy = this.newDataResponse?.authorizedBy;\r\n        this.authorizedTime = this.newDataResponse?.authorizedTime;\r\n        this.version = this.newDataResponse?.version;\r\n        \r\n        if (this.authStatus === 'U') {\r\n          this.authStatus = 'UNAUTHORIZED';\r\n        }\r\n        if (this.authStatus === 'A') {\r\n          this.authStatus = 'AUTHORIZED';\r\n        }\r\n        if (this.recordStatus === 'C') {\r\n          this.recordStatus = 'CLOSED';\r\n        }\r\n        if (this.recordStatus === 'O') {\r\n          this.recordStatus = 'OPEN';\r\n        }\r\n        Swal.fire({\r\n          title: 'Record is Reopened',\r\n          icon: 'success'\r\n        });\r\n        this.auditLog();\r\n      }\r\n      else {\r\n        Swal.fire({\r\n          title: 'Failed to Reopen the Record!',\r\n          icon: 'error'\r\n        });\r\n      }\r\n    },\r\n      error => {\r\n        if (HttpErrorResponse) {\r\n          Swal.fire({\r\n            text: 'Server Error!',\r\n            icon: 'error'\r\n          });\r\n        }\r\n      });\r\n    }}));\r\n\r\n  }\r\n  removeSubArray(i: number, data) {\r\n    console.log(i,\"Deleted\");\r\n    // this.confirmService\r\n    //   .confirm({ title: 'Confirm', message: 'Are you sure to delete?', ok: 'Yes', cancel: 'No' })\r\n    //   .subscribe(res => {\r\n    //     if (res) {\r\n          this.getRowIdx(i);\r\n      //   } else { return; }\r\n      // });\r\n  }\r\n  private getRowIdx(i) {\r\n    const control = <FormArray>this.addForm.controls.excelMappingDetails;\r\n    const fg = control.get([i]);\r\n    // const idx = fg.get('id').value;\r\n    this.apiService.deleteMappingRow(fg.value.mappingDetailId)\r\n      .subscribe(e => {\r\n        // if (e) {\r\n        //   Swal.fire({\r\n        //     title: 'Record is Deleted',\r\n        //     icon: 'success'\r\n        //   });\r\n        //   // this.router.navigate(['/excel-mapping']);\r\n        // } else {\r\n        //   Swal.fire({\r\n        //     title: 'Failed to Delete the Record!',\r\n        //     icon: 'error'\r\n        //   });\r\n        // }\r\n        if (!e){\r\n          Swal.fire({\r\n            title: 'Failed to Delete the Record!',\r\n            icon: 'error'\r\n          });\r\n        }\r\n      \r\n        this.cdr.markForCheck();\r\n      });\r\n      control.removeAt(i);\r\n  }\r\n\r\n  finalSubmit(excelForm, subArrayForm) {\r\n    console.log(this.externalSystsemCodes);\r\n    excelForm.extSys=this.externalSystsemCodes;\r\n    console.log(\"Form\", excelForm,subArrayForm)\r\n    this.submitted = true;\r\n    this.extCodeValue =  excelForm.extSysCode;\r\n    this.proCodeValue =  excelForm.processName;\r\n    this.isCheckedValue =  excelForm.headerRepeated;\r\n    this.startingValue = excelForm.startingRow;\r\n    this.currencyValue = excelForm.currency;\r\n    this.sheetNumberValue = excelForm.sheetNumber;\r\n    if (this.addForm.controls.excelMappingDetails.invalid) {\r\n    }\r\n    this.apiService.columnData(subArrayForm,this.extCodeValue,this.proCodeValue,this.isCheckedValue,this.startingValue,this.extCodeValue,this.currencyValue,this.currentUser,this.sheetNumberValue)\r\n      .subscribe(response => {\r\n        this.newDataResponse = response;\r\n        console.log(\"this.mappingResponse\",this.newDataResponse);\r\n        if (this.newDataResponse) {\r\n          this.is_edit=true;\r\n          this.auditLog();\r\n          Swal.fire({\r\n            title: 'Mapped Successfully!',\r\n            icon: 'success'\r\n          });\r\n          this.updateMappingForm.reset();\r\n          this.addForm.reset();\r\n          return;\r\n        } else {\r\n          Swal.fire({\r\n            title: 'Failed ExternalSystem And ProcessCode Already Mapped.',\r\n            icon: 'error'\r\n          });\r\n            this.updateMappingForm.reset();\r\n            this.addForm.reset();\r\n      }\r\n      });\r\n  }\r\n\r\n}\r\n","<div class=\"pageContentMain\">\r\n  <div class=\"pageTitleCol\">\r\n    <h2 class=\"pageTitle\">Update/Copy Mapping</h2>\r\n  </div>\r\n  <div class=\"dbCardStyle\">\r\n    <form [formGroup]=\"updateMappingForm\" action=\"\" class=\"formStyle\">\r\n      <div class=\"row gy-4 align-items-end\">\r\n        \r\n        <!-- <div class=\"col-lg-2\">\r\n          <label for=\"extSystem\" class=\"formLbl\">External System<span class=\"colorRed\">*</span></label>\r\n          <select class=\"form-select\" [attr.disabled]=\"!editFlag ? '' : null\"\r\n            (change)=\"getProcess(updateMappingForm.get('extCode').value)\" formControlName=\"extCode\" required\r\n            aria-label=\"Default select example\">\r\n            <option class=\"form-class\" selected>Select External System<span class=\"colorRed\">*</span></option>\r\n            <option class=\"form-class\" *ngFor=\"let data of extSysData\" [value]=\"data\">{{data}}</option>\r\n          </select>\r\n        </div> -->\r\n        <!-- <div class=\"col-lg-2\">\r\n          <label for=\"proCode\" class=\"formLbl\">Process Code<span class=\"colorRed\">*</span></label>\r\n          <select class=\"form-select\"\r\n            (change)=\"getProcessName(updateMappingForm.get('proCode').value,updateMappingForm.get('extCode').value)\"\r\n            formControlName=\"proCode\" required aria-label=\"Default select example\">\r\n            <option class=\"form-class\" selected>Select Process Code</option>\r\n            <option class=\"form-class\" *ngFor=\"let data of processName\" [value]=\"data\">{{data}}</option>\r\n\r\n          </select>\r\n        </div> -->\r\n        <div class=\"col-lg-2\">\r\n          <label for=\"extSysCode\" class=\"formLbl\">External System<span class=\"colorRed\">*</span></label>\r\n          <input id=\"extSysCode\" type=\"text\" class=\"form-control\" required formControlName=\"extSysCode\" [readonly]=\"!editFlag1\"\r\n            placeholder=\"External System\" value=\"\">\r\n        </div>\r\n        <div class=\"col-lg-2\">\r\n          <label for=\"processName\" class=\"formLbl\">Process Code<span class=\"colorRed\">*</span></label>\r\n          <input id=\"processName\" type=\"text\" class=\"form-control\" required formControlName=\"processName\" [readonly]=\"!editFlag1\"\r\n            placeholder=\"Process Code\" value=\"\">\r\n        </div>\r\n        <div class=\"col-lg-2\" *ngIf=\"showFieldCurrency\">\r\n          <label for=\"currency\" class=\"formLbl\">Currency<span class=\"colorRed\">*</span></label>\r\n          <input id=\"currency\" type=\"text\" class=\"form-control\" [readonly]=\"!editFlag1\" required formControlName=\"currency\"\r\n            placeholder=\"Currency \" value=\"\">\r\n        </div>\r\n        <div class=\"col-lg-2\" *ngIf=\"!showFieldCurrency\">\r\n          <label for=\"currency\" class=\"formLbl\">Currency<span class=\"colorRed\">*</span></label>\r\n          <select class=\"form-select\" (change)=\"getCurrencyData($event, 'currency')\" formControlName=\"currency\" required\r\n          [attr.disabled]=\"!showCurrencyDropdown ? '' : null\" aria-label=\"Default select example\">\r\n            <!-- <option class=\"form-class\" selected>Select Currency</option> -->\r\n            <option hidden value=\"\" disabled selected >--Please select--</option>\r\n            <option class=\"form-class\" *ngFor=\"let data of ccyData\" [value]=\"data\">{{data}}</option>\r\n\r\n          </select>\r\n        </div>\r\n        <div class=\"col-lg-2\" *ngIf=\"showFieldsheetNum\">\r\n          <label for=\"sheetNumber\" class=\"formLbl\">Sheet Number<span class=\"colorRed\">*</span></label>\r\n          <input id=\"sheetNumber\" type=\"text\" class=\"form-control\" required formControlName=\"sheetNumber\" [readonly]=\"!editFlag1\"\r\n            placeholder=\"Sheet Number\" value=\"\">\r\n        </div>\r\n        <div class=\"col-lg-2\" *ngIf=\"!showFieldsheetNum\">\r\n          <label for=\"sheetNumber\" class=\"formLbl\">Sheet Number<span class=\"colorRed\">*</span></label>\r\n          <select class=\"form-select\" (change)=\"getsheetNumData($event, 'sheetNumber')\"  formControlName=\"sheetNumber\" required\r\n            aria-label=\"Default select example\">\r\n            <!-- <option class=\"form-class\" selected>Select Sheet Number</option> -->\r\n            <option hidden value=\"\" disabled selected >--Please select--</option>\r\n            <option class=\"form-class\" *ngFor=\"let data of sheetData\" [value]=\"data\">{{data}}</option>\r\n\r\n          </select>\r\n        </div>\r\n\r\n        <div class=\"row gy-4  col-lg-4 \" *ngIf=\"showFetch\">\r\n          <!-- <div class=\"col-lg-4\" >\r\n            <button href=\"excel-mapping-new.html\" (click)=\"getAllMappingData(updateMappingForm.get('extSysCode').value,\r\n            updateMappingForm.get('processName').value,updateMappingForm.get('currency').value,updateMappingForm.get('sheetNumber').value)\"\r\n              [disabled]=\"updateMappingForm.invalid\" class=\"btn smBtn minWdSmBtn btnPrimary\">Fetch\r\n            </button>\r\n          </div> -->\r\n          <div class=\"col-lg-4\">\r\n            <a href=\"javascript:void(0)\" [routerLink]=\"['/excel-mapping']\"\r\n              class=\"btn smBtn minWdSmBtn btnSecondary\">Exit</a>\r\n          </div>\r\n        </div>\r\n     \r\n        <div class=\"col-lg-2\" *ngIf=\"newDataResponse\">\r\n          <label for=\"startingRow\" class=\"formLbl\">Data Starting Row</label>\r\n          <input id=\"startingRow\" [readonly]=\"!editFlag\" type=\"text\" class=\"form-control\" \r\n            formControlName=\"startingRow\" placeholder=\"Data Starting Row\" value=\"\">\r\n        </div>\r\n        <div class=\"col-lg-2\" *ngIf=\"newDataResponse\">\r\n          <div class=\"checkStyle\">\r\n            <input type=\"checkbox\" [readonly]=\"!editFlag\" id=\"headerRepeated\" formControlName=\"headerRepeated\">\r\n            <label for=\"headerRepeated\">Is Header Present</label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  </div>\r\n  <div class=\"dbCardStyle\" *ngIf=\"newDataResponse\">\r\n    <form action=\"\" [formGroup]=\"addForm\" novalidate class=\"formStyle\">\r\n      <div class=\"table-responsive\">\r\n        <fieldset [disabled]=\"!editFlag\">\r\n        <table id=\"dbTable1\" class=\"table tableStyle1 responsive nowrap vAlignMdl\">\r\n          <thead>\r\n            <tr>\r\n              <th>Name</th>\r\n              <th>data type</th>\r\n              <th>mandatory</th>\r\n              <th>header name</th>\r\n              <th>date format</th>\r\n              <th>mapping column</th>\r\n              <th>delimeter</th>\r\n              <th>default value</th>\r\n              <th>repeated till next value</th>\r\n              <th>delete</th>\r\n            </tr>\r\n          </thead>\r\n      \r\n          <tbody formArrayName=\"excelMappingDetails\">\r\n          \r\n            <tr *ngFor=\"let item of addForm.get('excelMappingDetails')['controls']; let i=index\" [formGroupName]=\"i\">\r\n              <td>\r\n                <input id=\"sourceCode\" type=\"text\" [readonly]=\"!editFlag\" formControlName=\"columnnName\"\r\n                  class=\"form-control1\" placeholder=\"Name\" value=\"\">\r\n              </td>\r\n              <td>\r\n                <select class=\"form-select1\" formControlName=\"dataType\" [attr.disabled]=\"!editFlag ? '' : null\"\r\n                  placeholder=\"Choose DataType\" (change)=\"checkTypeStatus(i)\" aria-label=\"Default select example\">\r\n                  <!-- <option class=\"form-class\" value=\"\" disabled selected>&nbsp; Select DataType &nbsp; </option> -->\r\n                  <option hidden value=\"\" disabled selected >--Please select--</option>\r\n                  <option *ngFor=\"let item of dataTypes\" [value]=\"item.value\">{{item.type}}</option>\r\n                </select>\r\n              </td>\r\n  \r\n                <td>\r\n                  <div class=\"checkboxdiv\">\r\n                  <div class=\"checkStyle\">\r\n                    <input type=\"checkbox\" formControlName=\"mandatory\" id=\"mandatoryCheck_{{ i }}\" >\r\n                    <label for=\"mandatoryCheck_{{ i }}\"><span style=\"display:none\">Is Mandatory?</span></label>\r\n                  </div>\r\n                </div>\r\n                </td>\r\n       <td>\r\n                  <input id=\"headerName_{{ i }}\" type=\"text\" formControlName=\"headerName\" class=\"form-control1\" placeholder=\"Header Name\" value=\"\">\r\n                </td>\r\n                <td>\r\n                  <input id=\"dateFormat_{{ i }}\" type=\"text\" class=\"form-control1\"  formControlName=\"dateFormat\" placeholder=\"Date Format\" value=\"\">\r\n                </td>\r\n                <td>\r\n                  <input id=\"mappingColumn_{{ i }}\" type=\"text\" class=\"form-control1\" formControlName=\"excelMappingColumn\" placeholder=\"Mapping Column\" value=\"\">\r\n                </td>\r\n                <td>\r\n                  <input id=\"delimeter_{{ i }}\" type=\"text\" class=\"form-control1\" formControlName=\"delimeter\" placeholder=\"Delimeter\" value=\"\">\r\n                </td>\r\n                <td>\r\n                  <input id=\"defaultValue_{{ i }}\" type=\"text\" class=\"form-control1\" formControlName=\"defaultValue\"\r\n                      placeholder=\"Default Value\" value=\"\">\r\n              </td>\r\n              <td>\r\n                  <input id=\"repeatedTillNextValue_{{ i }}\" type=\"text\" class=\"form-control1\" formControlName=\"repeatedTillNextValue\"\r\n                      placeholder=\"Repeated Till Next Value\" value=\"\">\r\n              </td>\r\n              <td>\r\n                <a href=\"javascript:void(0)\" class=\"deleteIcon2\"  (click)=\"removeSubArray(i,item)\" *ngIf=\"editFlag\">\r\n                  <span><img src=\"assets/images/delete-icon.svg\" alt=\"...\"></span>\r\n                </a>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>\r\n                <a href=\"javascript:void(0)\" class=\"addIcon primarybg\"\r\n                *ngIf=\"editFlag\">\r\n                  <span (click)=\"addSubArray()\"><img src=\"assets/images/plus-icon.svg\" alt=\"...\"></span>\r\n                </a>\r\n              </td>\r\n            </tr>\r\n           \r\n          </tbody>\r\n       \r\n        </table>\r\n      </fieldset>\r\n      </div>\r\n    \r\n      <div class=\"col-lg-12\" *ngIf=\"newDataResponse\">\r\n        <div class=\"row g-3 pb-3 justify-content-end pt-3\">\r\n          <!-- <div class=\"col-auto\">\r\n            <button href=\"javascript:void(0)\" *ngIf=\"copyData\" class=\"btn smBtn minWdSmBtn btnPrimary\"\r\n              (click)=\"copyMaping(addForm.value)\">Copy</button>\r\n          </div> -->\r\n          <div class=\"col-auto\">\r\n            <button class=\"btn smBtn minWdSmBtn btnPrimary\" *ngIf=\"editFlag  && copyData\"\r\n              (click)=\"updateMappingData(addForm.value,updateMappingForm.value)\" [disabled]=\"(!addForm.dirty || !addForm.valid) && (addForm.controls.excelMappingEdit.invalid || !addForm.controls.excelMappingEdit.dirty)\" >Save</button>\r\n          </div>\r\n      \r\n          <div class=\"col-auto\" *ngIf=\"newDataResponse && !editFlag &&  recordStatus=='OPEN' && roleCodes.edit && copyData\">\r\n            <button class=\"btn smBtn minWdSmBtn btnUpdate\" color=\"primary\"\r\n            (click)=\"enableEditFlag()\">{{roleCodes.edit.labelDescription}}</button>\r\n          </div>\r\n          <div class=\"col-auto\" *ngIf=\"newDataResponse && !editFlag && authStatus=='UNAUTHORIZED'&& roleCodes.auth && copyData\"><button\r\n              class=\"btn smBtn minWdSmBtn btnAuth\" color=\"primary\" (click)=\"onClickOfAuth(addForm.value,updateMappingForm.value)\">{{roleCodes.auth.labelDescription}}</button>\r\n          </div>\r\n          <div class=\"col-auto\"\r\n            *ngIf=\"recordStatus=='OPEN' && !editFlag &&  copyData && firstTimeAuth == 'YES'\"><button\r\n              class=\"btn smBtn minWdSmBtn btnPrimary\" color=\"primary\" (click)=\"onClickOfClose(addForm.value,updateMappingForm.value)\">{{roleCodes.close.labelDescription}}</button>\r\n          </div>\r\n          <div class=\"col-auto\"\r\n          *ngIf=\"(firstTimeAuth == 'NO' && (recordStatus=='OPEN' || recordStatus=='O')  ) && !editFlag &&  copyData\"><button\r\n            class=\"btn smBtn minWdSmBtn btnPrimary\" color=\"primary\" (click)=\"onClickDelete(addForm.value,updateMappingForm.value)\">{{roleCodes.delete.labelDescription}}</button>\r\n        </div>\r\n          <div class=\"col-auto\"\r\n            *ngIf=\"recordStatus=='CLOSED' && !editFlag &&  copyData \"><button\r\n              class=\"btn smBtn minWdSmBtn btnPrimary\" color=\"warn\" (click)=\"onClickOfReopen(addForm.value,updateMappingForm.value)\">{{roleCodes.reopen.labelDescription}}</button>\r\n          </div>\r\n          <div class=\"col-auto\" *ngIf=\"newDataResponse && editFlag\">\r\n            <button class=\"btn smBtn minWdSmBtn btnUpdate\" color=\"primary\" *ngIf=\"!editFlag && !copyData \"\r\n            (click)=\"finalSubmit(updateMappingForm.value,addForm.value)\">Save</button>\r\n          </div>\r\n          <div class=\"col-auto\">\r\n            <a href=\"javascript:void(0)\" class=\"btn smBtn minWdSmBtn btnSecondary\"\r\n              [routerLink]=\"['/excel-mapping']\">Exit</a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"dbCardStyle\" *ngIf=\"newDataResponse\">\r\n        <div class=\"row\">\r\n          <div class=\"col-sm-6 col-md-4 col-lg-3\">\r\n            <div class=\"csCardStyle\">\r\n              <div class=\"row g-2 align-items-center\">\r\n                <div class=\"col-auto\">\r\n                  <div class=\"csCardStyleIcon csCardStyleIconBg1\">\r\n                    <i class=\"fa fa-edit faClass\"></i>\r\n                  </div>\r\n                </div>\r\n                <div class=\"col\">\r\n                  <div class=\"csCardStyleText\">\r\n                    <h2>Maker</h2>\r\n                    <p>{{modifiedBy}}</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-sm-6 col-md-4 col-lg-3\">\r\n            <div class=\"csCardStyle\">\r\n              <div class=\"row g-2 align-items-center\">\r\n                <div class=\"col-auto\">\r\n                  <div class=\"csCardStyleIcon csCardStyleIconBg2\">\r\n                    <img src=\"assets/images/time-stamp-icon.svg\" alt=\"...\">\r\n                  </div>\r\n                </div>\r\n                <div class=\"col\">\r\n                  <div class=\"csCardStyleText\">\r\n                    <h2>Maker Time Stamp</h2>\r\n                    <p>{{modifiedTime| date: 'MM/dd/yyyy, h:mm a'}}</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-sm-6 col-md-4 col-lg-3\">\r\n            <div class=\"csCardStyle\">\r\n              <div class=\"row g-2 align-items-center\">\r\n                <div class=\"col-auto\">\r\n                  <div class=\"csCardStyleIcon csCardStyleIconBg3\">\r\n                    <i class=\"fa fa-files-o faRecordStatus\" aria-hidden=\"true\"></i>\r\n                  </div>\r\n                </div>\r\n                <div class=\"col\">\r\n                  <div class=\"csCardStyleText\">\r\n                    <h2>Record Status</h2>\r\n                    <p>{{recordStatus}}</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-sm-6 col-md-4 col-lg-3\">\r\n            <div class=\"csCardStyle\">\r\n              <div class=\"row g-2 align-items-center\">\r\n                <div class=\"col-auto\">\r\n                  <div class=\"csCardStyleIcon csCardStyleIconBg4\">\r\n                  <i class=\"fa fa-check-square-o faClassChecker\"></i>\r\n                  </div>\r\n                </div>\r\n                <div class=\"col\">\r\n                  <div class=\"csCardStyleText\">\r\n                    <h2>Checker</h2>\r\n                    <p>{{authorizedBy}}</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-sm-6 col-md-4 col-lg-3\">\r\n            <div class=\"csCardStyle\">\r\n              <div class=\"row g-2 align-items-center\">\r\n                <div class=\"col-auto\">\r\n                  <div class=\"csCardStyleIcon csCardStyleIconBg5\">\r\n                    <img src=\"assets/images/checker-time-icon.svg\" alt=\"...\">\r\n                  </div>\r\n                </div>\r\n                <div class=\"col\">\r\n                  <div class=\"csCardStyleText\">\r\n                    <h2>Checker Time Stamp</h2>\r\n                    <p>{{authorizedTime| date: 'MM/dd/yyyy, h:mm a'}}</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-sm-6 col-md-4 col-lg-3\">\r\n            <div class=\"csCardStyle\">\r\n              <div class=\"row g-2 align-items-center\">\r\n                <div class=\"col-auto\">\r\n                  <div class=\"csCardStyleIcon csCardStyleIconBg6\">\r\n              <i class=\"fa fa-shield faClassFirstTimeAuth\"></i>\r\n                  </div>\r\n                </div>\r\n                <div class=\"col\">\r\n                  <div class=\"csCardStyleText\">\r\n                    <h2>First Time Authorization</h2>\r\n                    <p>{{firstTimeAuth}}</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-sm-6 col-md-4 col-lg-3\">\r\n            <div class=\"csCardStyle\">\r\n              <div class=\"row g-2 align-items-center\">\r\n                <div class=\"col-auto\">\r\n                  <div class=\"csCardStyleIcon csCardStyleIconBg7\">\r\n                   <img src=\"assets/images/authorize.svg\" alt=\"...\" class=\"modImage\">\r\n                  </div>\r\n                </div>\r\n                <div class=\"col\">\r\n                  <div class=\"csCardStyleText\">\r\n                    <h2>Authorization Status</h2>\r\n                    <p>{{authStatus}}</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-sm-6 col-md-4 col-lg-3\">\r\n            <div class=\"csCardStyle\">\r\n              <div class=\"row g-2 align-items-center\">\r\n                <div class=\"col-auto\">\r\n                  <div class=\"csCardStyleIcon csCardStyleIconBg7\">\r\n                     <img src=\"assets/images/modification.svg\" class=\"modImage\" alt=\"...\" >\r\n                  </div>\r\n                </div>\r\n                <div class=\"col\">\r\n                  <div class=\"csCardStyleText\">\r\n                    <h2>Modification Number</h2>\r\n                    <p>{{version}}</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          \r\n        </div>\r\n      </div>\r\n    </form>\r\n  </div>\r\n\r\n</div>","import { HttpErrorResponse } from '@angular/common/http';\r\nimport { ChangeDetectorRef, Component, OnInit } from '@angular/core';\r\nimport { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { Observable, of, Subject } from 'rxjs';\r\nimport { CanDeactivateGuard, IDeactivateComponent } from 'src/app/shared/guards/can-deactivate.guard';\r\nimport { ApiService } from 'src/app/shared/services/api.service';\r\nimport { ToastService } from 'src/app/shared/services/toast.service';\r\nimport Swal from 'sweetalert2';\r\nexport interface DTYPES {\r\n  id: number;\r\n  type: string;\r\n  isActive: boolean;\r\n}\r\n\r\n@Component({\r\n  selector: 'npr-excel-mapping-new',\r\n  templateUrl: './excel-mapping-new.component.html',\r\n  styleUrls: ['./excel-mapping-new.component.scss']\r\n})\r\nexport class ExcelMappingNewComponent implements OnInit ,IDeactivateComponent{\r\n  excelMappingForm: FormGroup;\r\n  extSysData: string[];\r\n  progress: boolean;\r\n  processResp: any;\r\n  processName: any;\r\n  extNameValue: any;\r\n  extSysCode: any = null;\r\n  excelprocess: any = null;\r\n  addForm: FormGroup;\r\n  currentUser: any;\r\n  is_edit: boolean;\r\n  submitted: boolean = false;\r\n  currency: any;\r\n  dataFromresponse:any;\r\n  editFlag: boolean = false;\r\n\r\n  dataTypes: DTYPES[] = [\r\n    { id: 3, type: 'Clob', isActive: false },\r\n    { id: 1, type: 'Date', isActive: true },\r\n    { id: 2, type: 'Number', isActive: false },\r\n    { id: 4, type: 'VarChar', isActive: false }\r\n  ];\r\n  extCodeValue: any;\r\n  proCodeValue: any;\r\n  isCheckedValue: any;\r\n  startingValue: any;\r\n  currencyValue: any;\r\n  sheetNumberValue: any;\r\n  mandatoryValue: any;\r\n  modifiedBy: any;\r\n  authStatus: any;\r\n  recordStatus: any;\r\n  modifiedTime: any;\r\n  authorizedBy: any;\r\n  authorizedTime: any;\r\n  version: any;\r\n  verifiedStatus: any;\r\n  dataSaved : boolean = false;\r\n  showUpdate : boolean = false;\r\n  formTouched: boolean=true;\r\n  showDialog = false;\r\n  subject = new Subject<boolean>();\r\n  externalSysData: any;\r\n  isoRespDataFiltered: any;\r\n  externalSystsemCodes: any;\r\n  checkMandatory: boolean=false;\r\n  isDateValid: boolean = false;\r\n  processNameField: string = 'text';\r\n  constructor(private apiService: ApiService, private fb: FormBuilder, private toastService: ToastService,private router:Router,\r\n    private cdr: ChangeDetectorRef,private canDeactivateGuard: CanDeactivateGuard) { }\r\n\r\n  ngOnInit(): void {\r\n    // this.excelMappingForm = this.fb.group({\r\n    //   extCode: [\"\"],\r\n    //   proCode: [\"\"],\r\n    //   startingRow: [\"\"],\r\n    //   currency: [\"\"],\r\n    //   sheetNumber: [\"\"],\r\n    //   headerRepeated: [false],\r\n    // });\r\n    this.currentUser = localStorage.getItem(\"userFromLogin\");\r\n\r\n    this.excelMappingForm = this.fb.group({\r\n      processName: [\"\"],\r\n      extSysCode: ['',[Validators.required]],\r\n      extSys: [\"\"],\r\n      userId: [this.currentUser],\r\n      sheetNumber: ['',[Validators.required]],\r\n      headerRepeated: [false],\r\n      startingRow:[\"\"],\r\n      currency:['',[Validators.required]]\r\n    });\r\n    this.addForm = this.fb.group({\r\n      excelMappingDetails: this.fb.array([this.getSubArray()])\r\n    });\r\n    this.getAllExtsysNameAndProcessCodeOnAuthStatus();\r\n    // localStorage.setItem(\"userIdForChangePassword\", localStorage.getItem(\"currentUser\"));\r\n    \r\n    console.log(this.currentUser);\r\n  }\r\n  auditLog(){\r\n    // this.authStatus = this.dataFromresponse[0]?.authStatus;\r\n    // this.recordStatus = this.dataFromresponse[0]?.recordStatus;\r\n    // this.modifiedBy = this.dataFromresponse[0]?.modifiedBy;\r\n    // this.modifiedTime = this.dataFromresponse[0]?.modifiedTime;\r\n    // this.authorizedBy = this.dataFromresponse[0]?.authorizedBy;\r\n    // this.authorizedTime = this.dataFromresponse[0]?.authorizedTime;\r\n    // this.version = this.dataFromresponse[0]?.version;\r\n    // console.log(\"AuditLog\",this.authStatus,this.recordStatus,this.modifiedBy,this.authorizedBy);\r\n    \r\n    if (this.dataFromresponse.authStatus === 'U') {\r\n      this.dataFromresponse.authStatus = 'UNAUTHORIZED';\r\n    }\r\n    if (this.dataFromresponse.authStatus === 'A') {\r\n      this.dataFromresponse.authStatus = 'AUTHORIZED';\r\n    }\r\n    if (this.dataFromresponse.recordStatus === 'C') {\r\n      this.dataFromresponse.recordStatus = 'CLOSED';\r\n    }\r\n    if (this.dataFromresponse.recordStatus === 'O') {\r\n      this.dataFromresponse.recordStatus = 'OPEN';\r\n    }\r\n    if (this.dataFromresponse.firstTimeAuth === 'N') {\r\n      this.dataFromresponse.firstTimeAuth = 'NO';\r\n    }\r\n    if (this.dataFromresponse.firstTimeAuth === 'Y') {\r\n      this.dataFromresponse.firstTimeAuth = 'YES';\r\n    }\r\n  }\r\n  getSubArray(): FormGroup {\r\n    return this.fb.group({\r\n      // id:[''],\r\n      columnnName: ['', [Validators.required]],\r\n      dataType: [null, [Validators.required]],\r\n      mandatory: [false],\r\n      // mandatory: [\"\"],\r\n      headerName: ['',[Validators.required]],\r\n      dateFormat: [{ value: '', disabled: true }],\r\n      // dateFormat: [''],\r\n      // authStatus: [''],\r\n      // modifiedBy: [''],\r\n      // modifiedBy: ['JILU'],\r\n      // authorizedBy: [''],\r\n      // version: [''],\r\n      // modifiedTime: [''],\r\n      // authorizedTime: [''],\r\n      // recordStatus: [''],\r\n      delimeter: ['',],\r\n      defaultValue: ['',],\r\n      repeatedTillNextValue: ['',],\r\n      // excelMappingColumn:[''],\r\n      tableMappingColumn:[''],\r\n      mappingMasterId:[''],\r\n      excelMappingColumn: ['', [Validators.required,Validators.minLength(1), Validators.maxLength(3), Validators.pattern('^[a-zA-Z \\-#,@,%\\']+')]],\r\n\r\n    });\r\n  }\r\n  mandatoryRequired(values: any,index) {\r\n    console.log(values);\r\n    console.log(index);\r\n    if(values == true){\r\n      console.log(\"Inside True\");\r\n      this.checkMandatory=false;\r\n    }\r\n    if(values== false){\r\n      console.log(\"Inside False\");\r\n    }\r\n    // const value = values.currentTarget.checked;\r\n   \r\n  }\r\n  getAllExternalSystem() {\r\n    this.apiService.getAllExtCode().subscribe(response => {\r\n      this.extSysData = response;\r\n      \r\n    });\r\n  }\r\n  getAllExtsysNameAndProcessCodeOnAuthStatus() {\r\n    // this.apiService.getAllExtsysNameAndProcessCodeOnAuthStatus()\r\n    //   .subscribe(response => {\r\n    //     this.externalSysData=response;\r\n    //     this.extSysData = response.extSysList.sort();\r\n    //     console.log(this.externalSysData);\r\n    //   });\r\n      this.apiService.getAllExtsysNameOnAuthStatus()\r\n      .subscribe(response => {\r\n        this.externalSysData=response;\r\n        this.extSysData = response.sort();\r\n        \r\n      });\r\n      // const val=this.externalSysData.map.filter(item=> item.map === data);\r\n      // console.log(val);\r\n// console.log(this.externalSysData.map.length);\r\n      // for(let i = 0 ;i<=this.externalSysData.map.length;i++){\r\n\r\n      // }\r\n      \r\n  }\r\n  getExtSysNameByExtSysCode(extSysCode) {\r\n    this.apiService.getExtSysNameByExtSysCode(extSysCode)\r\n      .subscribe(data => {\r\n        this.extNameValue = data;\r\n      });\r\n      console.log(this.extNameValue);\r\n  }\r\n  getProcess(extSysCode) {\r\n    // this.externalSystsemCodes = this.externalSysData.map[extSysCode].extSysName;\r\n    // this.excelMappingForm.value.extSys=this.externalSysData.map[extSysCode].extSysName;\r\n    // console.log(this.excelMappingForm.value.extSys)\r\n    // this.excelMappingForm.get('processName').setValue(this.externalSysData.map[extSysCode].processCode);\r\n  // this.processName=this.externalSysData.map[extSysCode].processCode;\r\n  this.excelMappingForm.get('processName').setValue('');\r\n  this.processNameField='text'\r\n  this.processName=[];\r\n    this.apiService.getProcessNameByExtSysCode(extSysCode).subscribe(response => {\r\n     \r\n      this.processResp = response;\r\n      this.processName = this.processResp;\r\n      if(this.processName.length  === 1 && this.processName != undefined){\r\n        this.processNameField='text';\r\n        this.excelMappingForm.get('processName').setValue(this.processName[0]);\r\n        this.excelMappingForm.value.extSys='';\r\n      }\r\n      if(this.processName.length  > 1){\r\n        this.processNameField='select';\r\n      }\r\n      this.getExtSysNameByExtSysCode(extSysCode);\r\n    });\r\n  }\r\n\r\n  getProcessName(processCode, extSysCode) {\r\n    this.extSysCode = extSysCode;\r\n    this.excelprocess = processCode;\r\n  }\r\n  mandatoryCheck(values: any,i) {\r\n    const value = values.currentTarget.checked;\r\n    const control = <FormArray>this.addForm.get('excelMappingDetails') as FormArray;\r\n    control.at(i).get('mandatory').setValue(value);\r\n    console.log(\"value\",value,i);\r\n  }\r\n\r\n  addSubArray() {\r\n    const control = <FormArray>this.addForm.controls['excelMappingDetails'];\r\n    console.log(\"const control\", control);\r\n    control.push(this.getSubArray());\r\n  }\r\n\r\n  patchData(formdata) {\r\n    console.log(\"formdata\");\r\n    const control = <FormArray>this.addForm.controls['excelMappingDetails'];\r\n    for (let i = 0; i < formdata.length; i++) {\r\n      control.push(this.getSubArray());\r\n    }\r\n    this.addForm.patchValue({ excelMappingDetails: formdata });\r\n  }\r\n  removeSubArray(i: number) {\r\n    const control = <FormArray>this.addForm.controls['excelMappingDetails'];\r\n    control.removeAt(i);\r\n  }\r\n  clearAllSubArray() {\r\n    const control = <FormArray>this.addForm.controls['excelMappingDetails'];\r\n    while (control.length) {\r\n      control.removeAt(control.length - 1);\r\n    }\r\n    control.clearValidators();\r\n  }\r\n  get f() { return this.addForm.controls; }\r\n  get t() { return this.f.excelMappingDetails as FormArray; }\r\n  checkTypeStatus(i,subArrayForm) {\r\n    //console.log(i);\r\n    const control = <FormArray>this.addForm.controls['excelMappingDetails'];\r\n    let fg = control.get([i]);\r\nconsole.log(fg.value.dataType);\r\n    if (fg.value.dataType == 'Date') {\r\n      console.log(\"Dates\");\r\n      this.is_edit = false;\r\n      fg.get('dateFormat').clearValidators();\r\n      fg.get('dateFormat').setValidators([Validators.required])\r\n      fg.get('dateFormat').updateValueAndValidity();\r\n      // this.addForm.controls['excelMappingDetails'].get('dateFormat').clearValidators();\r\n      // this.addForm.controls['excelMappingDetails'].get('dateFormat').updateValueAndValidity();\r\n      fg.get('dateFormat').enable();\r\n    } else {\r\n      fg.get('dateFormat').disable();\r\n    }\r\n  }\r\n  clickFunction(i){\r\n    console.log(\"i\",i);\r\n  }\r\n  finalSubmit(excelForm, subArrayForm) {\r\n    console.log(subArrayForm);\r\n    let mandCnt: number = 0;\r\n    for (let n = 0; n < subArrayForm.excelMappingDetails.length ; n++) {\r\n      console.log(subArrayForm.excelMappingDetails[n].mandatory);\r\n      if(subArrayForm.excelMappingDetails[n].mandatory == true) {\r\n        console.log(\"Inside If\")\r\n        mandCnt += 1;\r\n      }\r\n      console.log(mandCnt);\r\n  }\r\n  \r\n  if (mandCnt < 2) {\r\n    console.log(\"More than 2 rows\");\r\n    Swal.fire({\r\n      text: 'Add atleast two mininum rows with mandatory condition',\r\n      icon: 'info'\r\n    });\r\n    // this.toast.error(`Add atleast two min rows with mandatory condition`, '', {\r\n    //   timeOut: 3000,\r\n    //   progressBar: true,\r\n    //   tapToDismiss: true,\r\n    //   closeButton: true,\r\n    //   easeTime: 300,\r\n    //   extendedTimeOut: 1000\r\n    // });\r\n    // return;\r\n  }\r\n  else{\r\n    excelForm.extSys=this.extNameValue;\r\n    this.submitted = true;\r\n    subArrayForm.excelMappingDetails[0].modifiedBy = this.currentUser;\r\n    var obj = {\r\n\r\n      ...excelForm,\r\n\r\n      ...subArrayForm,\r\n\r\n    }\r\n    // console.log(obj);\r\n    // this.apiService.columnData(subArrayForm, this.extCodeValue, this.proCodeValue, this.isCheckedValue, this.startingValue, this.extCodeValue, this.currencyValue, this.currentUser, this.sheetNumberValue)\r\n    this.apiService.createTemplateMap(obj)\r\n\r\n      .subscribe(response => {\r\n        this.dataFromresponse = response;\r\n        console.log(\"this.dataFromresponse\", this.dataFromresponse);\r\n        if (this.dataFromresponse) {\r\n          this.is_edit = true;\r\n          console.log(\"sucess\");\r\n          this.auditLog();\r\n          this.formTouched=!this.excelMappingForm.touched;\r\n          Swal.fire({\r\n            title: 'Mapped Successfully!',\r\n            icon: 'success'\r\n          });\r\n          this.editFlag = true;\r\n\r\n          // this.excelMappingForm.reset();\r\n          // this.addForm.reset();\r\n          return;\r\n        } \r\n        else {\r\n          Swal.fire({\r\n            title: 'Mapping Failed!',\r\n            icon: 'error'\r\n          });\r\n        }\r\n        // Failed ExternalSystem And ProcessCode Already Mapped!\r\n      },error=>{\r\n        Swal.fire({\r\n          text: error.error.message,\r\n          icon: 'error'\r\n        });\r\n      })\r\n    }\r\n  }\r\n  enableEditFlag() {\r\n    this.editFlag = false;\r\n    this.showUpdate = true;\r\n    // this.showCurrencyDropdown = true;\r\n    \r\n  }\r\n\r\n  \r\n  canExit() : Promise<boolean> {\r\n    let isExit :boolean = false;\r\n    if (this.excelMappingForm.touched && this.formTouched==true) {\r\n    return Swal.fire({ \r\n      text: 'There are unsaved changes in the screen. Would you like to navigate to other screen?',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#E6224A',\r\n      cancelButtonColor: '#011945',\r\n      cancelButtonText: 'NO',\r\n      confirmButtonText: 'YES',\r\n      icon: 'info',\r\n    }).then((result) => {\r\n      if (result.isConfirmed === true) {\r\n        isExit=true;\r\n        this.cdr.markForCheck();\r\n           return isExit;\r\n      }\r\n      else{\r\n        isExit=false;\r\n        this.cdr.markForCheck();\r\n        return isExit;\r\n      }\r\n    \r\n    });\r\n  }\r\n else{\r\n  isExit=true;\r\n  return new Promise((resolve, reject) => {\r\n    if (isExit === true) {\r\n      isExit=true;\r\n      this.cdr.markForCheck();\r\n      resolve(true);\r\n    }\r\n  \r\n  })\r\n}\r\n    }\r\n \r\n    onClickOfReopen(addForm, updateForm){\r\n      this.extCodeValue =  updateForm.extSysCode;\r\n      this.extNameValue =  updateForm.extSysCode;\r\n      this.proCodeValue =  updateForm.processName;\r\n      this.currencyValue = updateForm.currency;\r\n       this.currentUser = this.dataFromresponse.inputBy;\r\n       Swal.fire(\r\n        {\r\n          //text: 'Unable to process' + 'Error ' + this.responseforfileupload.errorMessage + 'Do you want to Proceed??',\r\n          text: 'You are trying to re-open record. ' + ' Do you want to proceed?',\r\n          showCancelButton: true,\r\n          confirmButtonColor: '#3085d6',\r\n          cancelButtonColor: '#d33',\r\n          // confirmButtonText: 'PROCEED.'\r\n          cancelButtonText: 'NO',\r\n          confirmButtonText: 'YES', 'icon': 'info'\r\n        }\r\n      ).then((result => {\r\n        console.log(\"this is reopen \", result);\r\n        if (result.isConfirmed === true) {\r\n      // this.apiService.onClcikOfReopenOfUpdateExcelMapping(addForm,this.extCodeValue,this.proCodeValue,this.extNameValue,this.currencyValue)\r\n      this.apiService.excelMappingAuditLog(this.dataFromresponse,'reopen').subscribe(openResp => {\r\n        console.log(openResp);\r\n        this.dataFromresponse = openResp;\r\n        if (this.dataFromresponse) {\r\n          this.authStatus = this.dataFromresponse?.authStatus;\r\n          this.recordStatus = this.dataFromresponse?.recordStatus;\r\n          this.modifiedBy = this.dataFromresponse?.inputBy;\r\n          this.modifiedTime = this.dataFromresponse?.inputDtStamp;\r\n          this.authorizedBy = this.dataFromresponse?.authorizedBy;\r\n          this.authorizedTime = this.dataFromresponse?.authorizedTime;\r\n          this.version = this.dataFromresponse?.version;\r\n          \r\n          if (this.authStatus === 'U') {\r\n            this.authStatus = 'UNAUTHORIZED';\r\n          }\r\n          if (this.authStatus === 'A') {\r\n            this.authStatus = 'AUTHORIZED';\r\n          }\r\n          if (this.recordStatus === 'C') {\r\n            this.recordStatus = 'CLOSED';\r\n          }\r\n          if (this.recordStatus === 'O') {\r\n            this.recordStatus = 'OPEN';\r\n          }\r\n          Swal.fire({\r\n            title: 'Record is Reopened',\r\n            icon: 'success'\r\n          });\r\n          this.auditLog();\r\n        }\r\n        else {\r\n          Swal.fire({\r\n            title: 'Failed to Reopen the Record!',\r\n            icon: 'error'\r\n          });\r\n        }\r\n      },\r\n        error => {\r\n          if (HttpErrorResponse) {\r\n            Swal.fire({\r\n              text: 'Server Error!',\r\n              icon: 'error'\r\n            });\r\n          }\r\n        });\r\n      }}));\r\n  \r\n    }\r\n    onClickOfDelete(addForm , updateform){\r\n      console.log(this.dataFromresponse);\r\n      Swal.fire(\r\n        {\r\n          //text: 'Unable to process' + 'Error ' + this.responseforfileupload.errorMessage + 'Do you want to Proceed??',\r\n          text: 'You are trying to delete record. ' + ' Do you want to proceed?',\r\n          showCancelButton: true,\r\n          confirmButtonColor: '#3085d6',\r\n          cancelButtonColor: '#d33',\r\n          // confirmButtonText: 'PROCEED.'\r\n          cancelButtonText: 'NO',\r\n          confirmButtonText: 'YES', 'icon': 'info'\r\n        }\r\n      ).then((result => {\r\n        if(result.isConfirmed=== true){\r\n          this.apiService.deleteTemplateMapping(this.dataFromresponse.extSys,this.dataFromresponse.processName,this.dataFromresponse.currency,this.dataFromresponse.sheetNumber).subscribe(deleteRsp=>{\r\n            // console.log(deleteRsp);\r\n            if(deleteRsp == true){\r\n              // Swal.fire({\r\n              //   title: 'Record is Closed',\r\n              //   icon: 'success'\r\n              // });\r\n              // this.router.navigate(['/excel-mapping']);\r\n              console.log(this.excelMappingForm.touched);\r\n              console.log(this.formTouched==true);\r\n                            \r\n              Swal.fire(\r\n                { \r\n               text:\"Role is Deleted\",\r\n               icon:'success'\r\n             }\r\n                 \r\n               ).then((result=>{\r\n                this.router.navigate(['/excel-mapping'])}))\r\n             \r\n            }\r\n            else{\r\n              Swal.fire({\r\n                title: 'Failed to Delete the Recored!',\r\n                icon: 'error'\r\n              });\r\n  \r\n            }\r\n            \r\n          })\r\n  \r\n        }}))\r\n  \r\n\r\n      \r\n\r\n    }\r\n    onClickOfClose(addForm, updateForm){\r\n      // console.log(addForm);\r\n      // console.log(updateForm);\r\n      // this.extCodeValue =  updateForm.extSysCode;\r\n      // this.extNameValue =  updateForm.extSysCode;\r\n      // this.proCodeValue =  updateForm.processName;\r\n      // this.currencyValue = updateForm.currency;\r\n      //  this.currentUser = this.newDataResponse.inputBy;\r\n      //  console.log(this.extCodeValue);\r\n      //  console.log(this.extNameValue);\r\n      //  console.log(this.proCodeValue);\r\n      //  console.log(this.currencyValue);\r\n      //  console.log(this.currentUser);\r\n       console.log(this.dataFromresponse);\r\n         Swal.fire(\r\n        {\r\n          text: 'You are trying to Close the record. ' + ' Do you want to proceed?',\r\n          showCancelButton: true,\r\n          confirmButtonColor: '#E6224A',\r\n          cancelButtonColor: '#011945',\r\n          // confirmButtonText: 'PROCEED.'\r\n          cancelButtonText: 'NO',\r\n          confirmButtonText: 'YES',\r\n          icon:'info'\r\n        }\r\n      ).then((result => {\r\n        if(result.isConfirmed=== true){\r\n      // this.apiService.onClcikOFCloseOfUpdateExcelMApping(addForm,this.extCodeValue,this.proCodeValue,this.extNameValue,this.currencyValue)\r\n      this.apiService.excelMappingAuditLog(this.dataFromresponse,'close').subscribe(closeResp => {\r\n        \r\n        console.log(closeResp);\r\n        this.dataFromresponse = closeResp;\r\n        if (this.dataFromresponse) {\r\n          this.authStatus = this.dataFromresponse?.authStatus;\r\n          this.recordStatus = this.dataFromresponse?.recordStatus;\r\n          this.modifiedBy = this.dataFromresponse?.inputBy;\r\n          this.modifiedTime = this.dataFromresponse?.inputDtStamp;\r\n          this.authorizedBy = this.dataFromresponse?.authorizedBy;\r\n          this.authorizedTime = this.dataFromresponse?.authorizedTime;\r\n          this.version = this.dataFromresponse?.version;\r\n          \r\n          if (this.authStatus === 'U') {\r\n            this.authStatus = 'UNAUTHORIZED';\r\n          }\r\n          if (this.authStatus === 'A') {\r\n            this.authStatus = 'AUTHORIZED';\r\n          }\r\n          if (this.recordStatus === 'C') {\r\n            this.recordStatus = 'CLOSED';\r\n          }\r\n          if (this.recordStatus === 'O') {\r\n            this.recordStatus = 'OPEN';\r\n          }\r\n          Swal.fire({\r\n            title: 'Record is Closed',\r\n            icon: 'success'\r\n          });\r\n          this.auditLog();\r\n        }\r\n        else {\r\n          Swal.fire({\r\n            title: 'Failed to Close the Recored!',\r\n            icon: 'error'\r\n          });\r\n        }\r\n      },\r\n        error => {\r\n          if (HttpErrorResponse) {\r\n            Swal.fire({\r\n              text: 'Server Error!',\r\n              icon: 'error'\r\n            });\r\n          }\r\n        });\r\n      }}));\r\n    }\r\n  updateMappingData(subArrayForm,excelForm) {\r\n    this.submitted = true;\r\n    this.progress = true;\r\n    // this.extCodeValue =  excelForm.extSysCode;\r\n    // this.proCodeValue =  excelForm.processName;\r\n    // this.isCheckedValue =  excelForm.headerRepeated;\r\n    // this.startingValue = excelForm.startingRow;\r\n    // this.currencyValue = excelForm.currency;\r\n    // this.sheetNumberValue = excelForm.sheetNumber;\r\n    let modifiedBy = subArrayForm.excelMappingDetails[0].modifiedBy;\r\n    modifiedBy = this.currentUser;\r\n    subArrayForm.excelMappingDetails[0].excelMappingColumn = subArrayForm.excelMappingDetails[0].mappingColumn;\r\n     var obj = {\r\n\r\n      ...excelForm,\r\n\r\n      ...subArrayForm,\r\n\r\n    }\r\n    if (this.addForm.invalid) {\r\n      Swal.fire({\r\n        text: 'Numeric values not allowed in mapping column!',\r\n        icon : 'warning'\r\n      });\r\n      return;\r\n    }\r\n    // this.apiService.updateMappingData(subArrayForm,this.extCodeValue,this.proCodeValue,this.extCodeValue,\r\n    //   this.startingValue,this.isCheckedValue,this.currentUser,this.currencyValue,this.sheetNumberValue)\r\n    this.apiService.createTemplateMap(obj)\r\n    .subscribe(\r\n        updateData => {\r\n          this.dataFromresponse = updateData;\r\n          console.log(this.dataFromresponse);\r\n          if (this.dataFromresponse) {\r\n            this.editFlag = false;\r\n            // this.showCurrencyDropdown = false;\r\n            this.dataSaved = true;\r\n            // this.auditLog();\r\n            Swal.fire({\r\n              text: 'Record is Updated!',\r\n              icon : 'success'\r\n            }\r\n           \r\n            );\r\n            this.formTouched=!this.excelMappingForm.touched;\r\n            this.cdr.markForCheck();\r\n          } else {\r\n            Swal.fire({\r\n              text: 'Failed to update ',\r\n              icon : 'error'\r\n            });\r\n          }\r\n        }\r\n      );\r\n  }\r\n  onClickOfAuth(addForm, updateForm){\r\n    this.currentUser = localStorage.getItem(\"userFromLogin\");\r\n    console.log(\"this.currentUser\",this.currentUser,addForm,updateForm );\r\n    this.extCodeValue =  updateForm.extSysCode;\r\n    this.extNameValue =  updateForm.extSysCode;\r\n    this.proCodeValue =  updateForm.processName;\r\n    this.currencyValue = updateForm.currency;\r\n    this.modifiedBy = this.dataFromresponse[0]?.modifiedBy;\r\n    if (this.modifiedBy === this.currentUser) {\r\n      Swal.fire({\r\n        title: 'Maker Cannot Authorized the Record!',\r\n        icon: 'error'\r\n      });\r\n    } \r\n    // else {\r\n    //   Swal.fire(\r\n    //     {\r\n    //       text: 'You are trying to Authorize the record. ' + ' Do you want to proceed?',\r\n    //       showCancelButton: true,\r\n    //       confirmButtonColor: '#E6224A',\r\n    //       cancelButtonColor: '#011945',\r\n    //       cancelButtonText: 'NO',\r\n    //       confirmButtonText: 'YES',\r\n    //       icon:'info'\r\n    //     }\r\n    //   ).then((result => {\r\n    //     if(result.isConfirmed=== true){\r\n    //   this.apiService.onAuthorizingTheRecordOfExcelMApping(addForm,this.extNameValue,this.proCodeValue,this.extCodeValue, this.currentUser,this.currencyValue)\r\n    //   .subscribe(authResp => {\r\n    //     this.dataFromresponse = authResp;\r\n    //     if(this.dataFromresponse){\r\n    //       this.authStatus = this.dataFromresponse?.authStatus;\r\n    //       this.recordStatus = this.dataFromresponse?.recordStatus;\r\n    //       this.modifiedBy = this.dataFromresponse?.modifiedBy;\r\n    //       this.modifiedTime = this.dataFromresponse?.modifiedTime;\r\n    //       this.authorizedBy = this.dataFromresponse?.authorizedBy;\r\n    //       this.authorizedTime = this.dataFromresponse?.authorizedTime;\r\n    //       this.version = this.dataFromresponse?.version;\r\n    //       this.modifiedBy = this.dataFromresponse?.inputBy;\r\n          \r\n    //       if (this.authStatus === 'U') {\r\n    //         this.authStatus = 'UNAUTHORIZED';\r\n    //       }\r\n    //       if (this.authStatus === 'A') {\r\n    //         this.authStatus = 'AUTHORIZED';\r\n    //       }\r\n    //       if (this.recordStatus === 'C') {\r\n    //         this.recordStatus = 'CLOSED';\r\n    //       }\r\n    //       if (this.recordStatus === 'O') {\r\n    //         this.recordStatus = 'OPEN';\r\n    //       }\r\n    //       Swal.fire({\r\n    //         title: 'Record is Authorized',\r\n    //         icon: 'success'\r\n    //       });\r\n\r\n    //     }\r\n    //   })\r\n    // }}));\r\n    // }\r\n\r\n  }\r\n  letterOnly(event) {\r\n    var charCode = event.keyCode;\r\n    if ((charCode > 64 && charCode < 91) || (charCode > 96 && charCode < 123) || charCode == 8)\r\n      return true;\r\n    else\r\n      return false;\r\n  }\r\n}\r\n","<div class=\"pageContentMain\">\r\n  <div class=\"pageTitleCol\">\r\n    <h2 class=\"pageTitle\">Template Mapping</h2>\r\n  </div>\r\n  <div class=\"dbCardStyle\">\r\n    <div class=\"row g-3 pb-3 justify-content-end\">\r\n      <div class=\"col-auto\">\r\n        <a href=\"excel-mapping-new.html\" [routerLink]=\"['/excel-mapping/excel-mapping-edit']\"\r\n          routerLinkActive=\"router-link-active\" class=\"btn smBtn minWdSmBtn btnPrimary\">Update Mapping</a>\r\n      </div>\r\n      <div class=\"col-auto\">\r\n        <a href=\"javascript:void(0)\" [routerLink]=\"['/dashbaord']\" routerLinkActive=\"router-link-active\"\r\n          class=\"btn smBtn minWdSmBtn btnSecondary\">Exit</a>\r\n      </div>\r\n    </div>\r\n    <form [formGroup]=\"excelMappingForm\" action=\"\" class=\"formStyle\">\r\n      <div class=\"row gy-4 align-items-end\">\r\n        <div class=\"col-lg-4\">\r\n          <label for=\"extSystem\" class=\"formLbl\">External System Code<span class=\"colorRed\">*</span></label>\r\n          <ng-select \r\n          [clearable]=\"false\"\r\n          id=\"outlineNgSelect\" \r\n          [attr.disabled]=\"editFlag ? '' : null\" \r\n          (change)=\"getProcess(excelMappingForm.get('extSysCode').value)\"\r\n          formControlName=\"extSysCode\" \r\n          required aria-label=\"Default select example\"\r\n          style=\"width: 100% !important;\">\r\n          <!-- <ng-select \r\n          class=\"form-select\" \r\n          id=\"outlineNgSelect\" \r\n          [attr.disabled]=\"editFlag ? '' : null\" \r\n          (change)=\"getProcess(excelMappingForm.get('extSysCode').value)\"\r\n          formControlName=\"extSysCode\" \r\n          required aria-label=\"Default select example\"\r\n          style=\"width: 200px\"> -->\r\n          \r\n            <!-- <option class=\"form-class\" selected>Select External System </option> -->\r\n            <ng-option hidden value=\"\" disabled selected >Please select External System</ng-option>\r\n            <ng-option class=\"form-class\" *ngFor=\"let data of extSysData\" [value]=\"data\">{{data}}</ng-option>\r\n\r\n          </ng-select>\r\n        </div>\r\n        <div class=\"col-lg-4\">\r\n          <label for=\"processName\" class=\"formLbl\">Process Code<span class=\"colorRed\">*</span></label>\r\n          <select *ngIf=\"processNameField==='select'\" class=\"form-select\" [attr.disabled]=\"editFlag ? '' : null\"\r\n            (change)=\"getProcessName(excelMappingForm.get('processName').value,excelMappingForm.get('extSysCode').value)\"\r\n            formControlName=\"processName\"  required aria-label=\"Default select example\">\r\n            <!-- <option class=\"form-class\" selected>Process Code</option> -->\r\n            <option hidden value=\"\" disabled selected >--Please select--</option>\r\n            <option class=\"form-class\" *ngFor=\"let data of processName\" [value]=\"data\">{{data}}</option>\r\n\r\n          </select>\r\n          <input  *ngIf=\"processNameField==='text'\" type=\"text\" [readonly]=\"editFlag\" formControlName=\"processName\" required class=\"form-control\"\r\n            placeholder=\"Process Code\" value=\"\">\r\n        </div>\r\n        <!-- *ngFor=\"let data of processName\" -->\r\n        <div class=\"col-lg-4\">\r\n          <label for=\"startingRow\" class=\"formLbl\">Data Starting Row<span class=\"colorRed\">*</span></label>\r\n          <input id=\"startingRow\" type=\"number\" [readonly]=\"editFlag\" formControlName=\"startingRow\" required class=\"form-control\"\r\n            placeholder=\"Data Starting Row\" value=\"\">\r\n        </div>\r\n        <div class=\"col-lg-4\">\r\n          <label for=\"currency\" class=\"formLbl\">Currency<span class=\"colorRed\">*</span></label>\r\n          <input id=\"currency\" type=\"text\" class=\"form-control\" [readonly]=\"editFlag\" formControlName=\"currency\" name=\"currency\" required\r\n            placeholder=\"Currency\" value=\"\" minlength=\"1\" maxlength=\"3\" onkeydown=\"/[A-Z]/i.test(event.key)\" \r\n            (keypress)=\"letterOnly($event)\" oninput=\"this.value = this.value.toUpperCase()\">\r\n        </div>\r\n        <div class=\"col-lg-4\">\r\n          <label for=\"sheetNumber\" class=\"formLbl\">Sheet Number<span class=\"colorRed\">*</span></label>\r\n          <input id=\"sheetNumber\" type=\"number\" [readonly]=\"editFlag\" class=\"form-control\" formControlName=\"sheetNumber\"\r\n            placeholder=\"Sheet Number\" value=\"\" >\r\n        </div>\r\n        <div class=\"col-lg-4\">\r\n          <div class=\"checkStyle\"   >\r\n            <input [attr.disabled]=\"editFlag ? true : null\" type=\"checkbox\" id=\"fcyRate\" formControlName=\"headerRepeated\">\r\n            <label for=\"fcyRate\">Is Header Present</label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  </div>\r\n  <div class=\"dbCardStyle\">\r\n    <form action=\"\" [formGroup]=\"addForm\" novalidate class=\"formStyle\">\r\n      <div class=\"titleStyle mt-2 mb-4\">\r\n        <h2 class=\"pageTitle darkgreyClr\">Select Minimum two mandatory row</h2>\r\n      </div>\r\n      <div class=\"table-responsive\">\r\n        <table id=\"dbTable1\" class=\"table tableStyle1 responsive nowrap vAlignMdl\">\r\n          <thead>\r\n            <tr>\r\n              <th>Name</th>\r\n              <th>data type</th>\r\n              <th>mandatory</th>\r\n              <th>header name</th>\r\n              <th>date format</th>\r\n              <th>mapping column</th>\r\n              <th>delimeter</th>\r\n              <th>default value</th>\r\n              <th>repeated till next value</th>\r\n              <th>delete</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody formArrayName=\"excelMappingDetails\">\r\n            <tr *ngFor=\"let item of addForm.get('excelMappingDetails')['controls']; let i=index\">\r\n              <ng-container [formGroupName]=\"i\">\r\n                <td>\r\n                  <input id=\"sourceCode\" type=\"text\" [readonly]=\"editFlag\" formControlName=\"columnnName\" class=\"form-control\"\r\n                    placeholder=\"Name\" value=\"\">\r\n                </td>\r\n                <td>\r\n                  <select class=\"form-select\" [attr.disabled]=\"editFlag ? '' : null\" formControlName=\"dataType\" placeholder=\"Choose DataType\"\r\n                    (change)=\"checkTypeStatus(i,addForm.value)\" aria-label=\"Default select example\"> \r\n                    <option hidden value=\"\" disabled selected >--Please select--</option>\r\n                    <!-- <option class=\"form-class\" value=\"\" disabled selected>&nbsp; Select DataType &nbsp; </option> -->\r\n                    <option class=\"form-class\" *ngFor=\"let item of dataTypes\" [value]=\"item.type\">{{item.type}}</option>\r\n                  </select>\r\n                </td>\r\n                <td>\r\n                  <div class=\"checkboxdiv\" >\r\n                    <div class=\"checkStyle\" >\r\n                      <input  type=\"checkbox\"  formControlName=\"mandatory\" id=\"mandatoryCheck_{{ i }}\">\r\n                      <label for=\"mandatoryCheck_{{ i }}\"></label>\r\n                    </div>\r\n                    \r\n                  </div>\r\n                </td>\r\n                <td>\r\n                  <input id=\"headerName_{{ i }}\" type=\"text\" [readonly]=\"editFlag\" formControlName=\"headerName\" class=\"form-control\"\r\n                    placeholder=\"Header Name\" value=\"\">\r\n                </td>\r\n                <td>\r\n                  <input id=\"dateFormat_{{ i }}\" type=\"text\" [readonly]=\"editFlag\" class=\"form-control\" formControlName=\"dateFormat\"\r\n                    placeholder=\"Date Format\" value=\"\">\r\n                </td>\r\n                <td>\r\n                  <input id=\"excelMappingColumn{{ i }}\" type=\"text\" [readonly]=\"editFlag\" class=\"form-control\" formControlName=\"excelMappingColumn\"\r\n                    placeholder=\"Mapping Column\" value=\"\">\r\n                </td>\r\n                <td>\r\n                  <input id=\"delimeter_{{ i }}\" type=\"text\" [readonly]=\"editFlag\" class=\"form-control\" formControlName=\"delimeter\"\r\n                    placeholder=\"Delimeter\" value=\"\">\r\n                </td>\r\n                <td>\r\n                  <input id=\"defaultValue_{{ i }}\" type=\"text\" [readonly]=\"editFlag\" class=\"form-control\" formControlName=\"defaultValue\"\r\n                    placeholder=\"Default Value\" value=\"\">\r\n                </td>\r\n                <td>\r\n                  <input id=\"repeatedTillNextValue_{{ i }}\" [readonly]=\"editFlag\" type=\"text\" class=\"form-control\"\r\n                    formControlName=\"repeatedTillNextValue\" placeholder=\"Repeated Till Next Value\" value=\"\">\r\n                </td>\r\n                <td>\r\n                  <a class=\"deleteIcon2\" *ngIf=\"!editFlag\">\r\n                    <span (click)=\"removeSubArray(i)\"><img src=\"assets/images/delete-icon.svg\" alt=\"...\"></span>\r\n                  </a>\r\n                </td>\r\n              </ng-container>\r\n            </tr>\r\n            <tr>\r\n              <td>\r\n                <a class=\"addIcon primarybg\" *ngIf=\"!editFlag\" (click)=\"addSubArray()\">\r\n                  <span>\r\n                    <img src=\"assets/images/plus-icon.svg\" alt=\"...\">\r\n                  </span>\r\n                </a>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      <div class=\"row g-3 pb-3 justify-content-end pt-3\">\r\n        <div class=\"col-auto\"  *ngIf=\"showUpdate\">\r\n          <button class=\"btn smBtn minWdSmBtn btnPrimary\" [disabled]=\"dataSaved\" \r\n            (click)=\"updateMappingData(addForm.value,excelMappingForm.value)\">Save</button>\r\n        </div>\r\n        <div class=\"col-auto\" *ngIf=\"dataFromresponse && !showUpdate\" >\r\n          <button class=\"btn smBtn minWdSmBtn btnUpdate\" color=\"primary\"\r\n          (click)=\"enableEditFlag()\">Edit</button>\r\n        </div>\r\n\r\n        <div class=\"col-auto\"  *ngIf=\"dataFromresponse && (dataFromresponse.authStatus == 'U' ||dataFromresponse.authStatus == 'UNAUTHORIZED') && !showUpdate\">\r\n          <button class=\"btn smBtn minWdSmBtn btnAuth\" color=\"primary\" (click)=\"onClickOfAuth(addForm.value,excelMappingForm.value)\">Auth</button>\r\n        </div>\r\n          <div class=\"col-auto\"  *ngIf=\"(dataFromresponse && (dataFromresponse.firstTimeAuth == 'N' || dataFromresponse.firstTimeAuth == 'NO')  && (dataFromresponse.recordStatus=='O' || dataFromresponse.recordStatus=='OPEN')) && !showUpdate\">\r\n\r\n          <button  class=\"btn smBtn minWdSmBtn btnPrimary\" color=\"primary\" (click)=\"onClickOfDelete(addForm.value,excelMappingForm.value)\" >Delete</button>\r\n        </div>\r\n       <div class=\"col-auto\"  *ngIf=\"dataFromresponse && ((dataFromresponse.recordStatus=='O' || dataFromresponse.recordStatus=='OPEN')  && (dataFromresponse.firstTimeAuth == 'Y' || dataFromresponse.firstTimeAuth == 'YES')) && !showUpdate\">\r\n          <button class=\"btn smBtn minWdSmBtn btnUpdate\" (click)=\"onClickOfClose(addForm.value,excelMappingForm.value)\" color=\"primary\" >Close</button>\r\n        </div>\r\n        <div class=\"col-auto\"  *ngIf=\"dataFromresponse && ((dataFromresponse.recordStatus=='C' || dataFromresponse.recordStatus=='CLOSED') && (dataFromresponse.firstTimeAuth == 'Y' || dataFromresponse.firstTimeAuth == 'YES')) && !showUpdate\">\r\n          <button cclass=\"btn smBtn minWdSmBtn btnPrimary\" (click)=\"onClickOfReopen(addForm.value,excelMappingForm.value)\" color=\"primary\" >Reopen</button>\r\n        </div> \r\n        <div class=\"col-auto\" *ngIf=\"!dataFromresponse\">\r\n          <button [disabled]=\"(excelMappingForm.invalid ||  !excelMappingForm.dirty ) && (addForm.controls.excelMappingDetails.invalid || !addForm.controls.excelMappingDetails.dirty)\"   [attr.disabled]=\"editFlag\" (click)=\"finalSubmit(excelMappingForm.value,addForm.value)\"\r\n            class=\"btn smBtn minWdSmBtn btnPrimary\">\r\n            Save</button>\r\n        </div>\r\n        <div class=\"col-auto\">\r\n          <a [routerLink]=\"['/excel-mapping']\" routerLinkActive=\"router-link-active\"\r\n            class=\"btn smBtn minWdSmBtn btnSecondary\">Exit</a>\r\n        </div>\r\n      </div>\r\n     <div class=\"dbCardStyle\" *ngIf=\"dataFromresponse\">\r\n        <div class=\"row\">\r\n          <div class=\"col-sm-6 col-md-4 col-lg-3\">\r\n            <div class=\"csCardStyle\">\r\n              <div class=\"row g-2 align-items-center\">\r\n                <div class=\"col-auto\">\r\n                  <div class=\"csCardStyleIcon csCardStyleIconBg1\">\r\n                    <i class=\"fa fa-edit faClass\"></i>\r\n                  </div>\r\n                </div>\r\n                <div class=\"col\">\r\n                  <div class=\"csCardStyleText\">\r\n                    <h2>Maker</h2>\r\n                    <p>{{dataFromresponse.inputBy}}</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-sm-6 col-md-4 col-lg-3\">\r\n            <div class=\"csCardStyle\">\r\n              <div class=\"row g-2 align-items-center\">\r\n                <div class=\"col-auto\">\r\n                  <div class=\"csCardStyleIcon csCardStyleIconBg2\">\r\n                    <img src=\"assets/images/time-stamp-icon.svg\" alt=\"...\">\r\n                  </div>\r\n                </div>\r\n                <div class=\"col\">\r\n                  <div class=\"csCardStyleText\">\r\n                    <h2>Maker Time Stamp</h2>\r\n                    <p>{{dataFromresponse.inputDtStamp | date: 'MM/dd/yyyy, h:mm a'}}</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-sm-6 col-md-4 col-lg-3\">\r\n            <div class=\"csCardStyle\">\r\n              <div class=\"row g-2 align-items-center\">\r\n                <div class=\"col-auto\">\r\n                  <div class=\"csCardStyleIcon csCardStyleIconBg3\">\r\n                    <i class=\"fa fa-files-o faRecordStatus\" aria-hidden=\"true\"></i>\r\n                  </div>\r\n                </div>\r\n                <div class=\"col\">\r\n                  <div class=\"csCardStyleText\">\r\n                    <h2>Record Status</h2>\r\n                    <p>{{dataFromresponse.recordStatus}}</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-sm-6 col-md-4 col-lg-3\">\r\n            <div class=\"csCardStyle\">\r\n              <div class=\"row g-2 align-items-center\">\r\n                <div class=\"col-auto\">\r\n                  <div class=\"csCardStyleIcon csCardStyleIconBg4\">\r\n                  <i class=\"fa fa-check-square-o faClassChecker\"></i>\r\n                  </div>\r\n                </div>\r\n                <div class=\"col\">\r\n                  <div class=\"csCardStyleText\">\r\n                    <h2>Checker</h2>\r\n                    <p>{{dataFromresponse.authorizedBy}}</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-sm-6 col-md-4 col-lg-3\">\r\n            <div class=\"csCardStyle\">\r\n              <div class=\"row g-2 align-items-center\">\r\n                <div class=\"col-auto\">\r\n                  <div class=\"csCardStyleIcon csCardStyleIconBg5\">\r\n                    <img src=\"assets/images/checker-time-icon.svg\" alt=\"...\">\r\n                  </div>\r\n                </div>\r\n                <div class=\"col\">\r\n                  <div class=\"csCardStyleText\">\r\n                    <h2>Checker Time Stamp</h2>\r\n                    <p>{{dataFromresponse.authorizedDtStamp | date: 'MM/dd/yyyy, h:mm a'}}</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-sm-6 col-md-4 col-lg-3\">\r\n            <div class=\"csCardStyle\">\r\n              <div class=\"row g-2 align-items-center\">\r\n                <div class=\"col-auto\">\r\n                  <div class=\"csCardStyleIcon csCardStyleIconBg6\">\r\n              <i class=\"fa fa-shield faClassFirstTimeAuth\"></i>\r\n                  </div>\r\n                </div>\r\n                <div class=\"col\">\r\n                  <div class=\"csCardStyleText\">\r\n                    <h2>First Time Authorization</h2>\r\n                    <p>{{dataFromresponse.firstTimeAuth}}</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-sm-6 col-md-4 col-lg-3\">\r\n            <div class=\"csCardStyle\">\r\n              <div class=\"row g-2 align-items-center\">\r\n                <div class=\"col-auto\">\r\n                  <div class=\"csCardStyleIcon csCardStyleIconBg7\">\r\n                   <img src=\"assets/images/authorize.svg\" alt=\"...\" class=\"modImage\">\r\n                  </div>\r\n                </div>\r\n                <div class=\"col\">\r\n                  <div class=\"csCardStyleText\">\r\n                    <h2>Authorization Status</h2>\r\n                    <p>{{dataFromresponse.authStatus}}</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-sm-6 col-md-4 col-lg-3\">\r\n            <div class=\"csCardStyle\">\r\n              <div class=\"row g-2 align-items-center\">\r\n                <div class=\"col-auto\">\r\n                  <div class=\"csCardStyleIcon csCardStyleIconBg7\">\r\n                    <img src=\"assets/images/first-auth-icon.svg\" alt=\"...\" />\r\n                  </div>\r\n                </div>\r\n                <div class=\"col\">\r\n                  <div class=\"csCardStyleText\">\r\n                    <h2>Modification Number</h2>\r\n                    <p>{{dataFromresponse.version}}</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          \r\n        </div>\r\n      </div> \r\n    </form>\r\n  </div>\r\n</div>","import { NgModule } from \"@angular/core\";\r\nimport { RouterModule, Routes } from \"@angular/router\";\r\nimport { CanDeactivateGuard } from \"src/app/shared/guards/can-deactivate.guard\";\r\nimport { ExcelMappingEditComponent } from \"./excel-mapping-edit/excel-mapping-edit.component\";\r\nimport { ExcelMappingNewComponent } from \"./excel-mapping-new/excel-mapping-new.component\";\r\nimport { ExcelMappingComponent } from \"./excel-mapping/excel-mapping.component\";\r\nimport { AuthGuard } from \"src/app/shared/guards/auth.guard\";\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: \"\",\r\n    component: ExcelMappingComponent,\r\n    // canActivate: [AuthGuard],\r\n  },\r\n  {\r\n    path: \"excel-mapping-new\",\r\n    component: ExcelMappingNewComponent,\r\n    canActivate: [AuthGuard],\r\n  },\r\n  {\r\n    path: \"excel-mapping-edit\",\r\n    component: ExcelMappingEditComponent,\r\n    canActivate: [AuthGuard],\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class ExcelMappingRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { ExcelMappingRoutingModule } from './excel-mapping-routing.module';\r\nimport { ExcelMappingComponent } from './excel-mapping/excel-mapping.component';\r\nimport { DataTablesModule } from 'angular-datatables';\r\nimport { ExcelMappingNewComponent } from './excel-mapping-new/excel-mapping-new.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { ExcelMappingEditComponent } from './excel-mapping-edit/excel-mapping-edit.component';\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ExcelMappingComponent,\r\n    ExcelMappingNewComponent,\r\n    ExcelMappingEditComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    ExcelMappingRoutingModule,\r\n    DataTablesModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    NgSelectModule\r\n  ]\r\n})\r\nexport class ExcelMappingModule { }\r\n","import { HttpErrorResponse } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Subject } from 'rxjs';\r\nimport { permissionsLabels } from 'src/app/shared/models/fmosNewRolePermissions';\r\nimport { ApiService } from 'src/app/shared/services/api.service';\r\nimport { RoleService } from 'src/app/shared/services/role.service';\r\nimport { ToastService } from 'src/app/shared/services/toast.service';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'npr-excel-mapping',\r\n  templateUrl: './excel-mapping.component.html',\r\n  styleUrls: ['./excel-mapping.component.scss'],\r\n})\r\nexport class ExcelMappingComponent implements OnInit {\r\n  excelData: any;\r\n  dtOptions: DataTables.Settings = {};\r\n  dtTrigger: Subject<any> = new Subject<any>();\r\n  isLoading: boolean = false;\r\n  roleCodes = new permissionsLabels();\r\n  statusArr: String[] = ['Authorized', 'Unauthorized', 'Open', 'Close'];\r\n  excelMappingSummary: any;\r\n  extName: any;\r\n  currentUser: string;\r\n  extCodeValue: any;\r\n  extNameValue: any;\r\n  proCodeValue: any;\r\n  currencyValue: any;\r\n  authStatus: any;\r\n  recordStatus: any;\r\n  modifiedBy: any;\r\n  modifiedTime: any;\r\n  authorizedBy: any;\r\n  authorizedTime: any;\r\n  version: any;\r\n  mappingResponse: Object;\r\n  sheetNo: any;\r\n  firstTimeAuth: any;\r\n  newDataResponse: any;\r\n  \r\n\r\n  constructor(\r\n    private apiService: ApiService,\r\n    private roleService: RoleService,\r\n    private toastService: ToastService,\r\n    private router: Router\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.dtOptions = {\r\n      pagingType: 'full_numbers',\r\n      pageLength: 5,\r\n      columnDefs: [{ type: 'date', targets: [7] }],\r\n      order: [[7, 'desc']],\r\n      processing: true,\r\n      lengthMenu: [\r\n        [5, 10, 20, 30,-1],\r\n        [5, 10, 20, 30,\"ALL\"],\r\n      ],\r\n    };\r\n    this.currentUser = localStorage.getItem(\"userFromLogin\");\r\n    this.getexcelMappingSummary();\r\n    this.roleService.fetchScreenPermissions('Template Mapping');\r\n    this.roleService.screenLabelList.subscribe(\r\n      (message) => (this.roleCodes = message)\r\n    );\r\n    console.log(this.roleCodes);\r\n  }\r\n  auditLog() {\r\n    if (this.excelMappingSummary.authStatus =='U' || this.excelMappingSummary.authStatus =='Unauthorized') {\r\n      this.excelMappingSummary.authStatus = 'UNAUTHORIZED'\r\n    }\r\n    if (this.excelMappingSummary.authStatus == 'A' || this.excelMappingSummary.authStatus =='Authorized' ) {\r\n      this.excelMappingSummary.authStatus = 'AUTHORIZED'\r\n    }\r\n    if (this.excelMappingSummary.recordStatus == 'O') {\r\n      this.excelMappingSummary.recordStatus = 'OPEN'\r\n    }\r\n    if (this.excelMappingSummary.recordStatus == 'C') {\r\n      this.excelMappingSummary.recordStatus = 'CLOSED'\r\n    }\r\n    if (this.excelMappingSummary.verifiedOnce == 'N') {\r\n      console.log(\"NO\");\r\n      this.excelMappingSummary.verifiedOnce = 'NO'\r\n    }\r\n    if (this.excelMappingSummary.verifiedOnce == 'Y') {\r\n      this.excelMappingSummary.verifiedOnce = 'YES'\r\n    }\r\n  }\r\n  getexcelMappingSummary() {\r\n    this.isLoading = true;\r\n    this.apiService.getMappingSummary().subscribe((data) => {\r\n      console.log(data);\r\n      \r\n      this.mappingResponse = data;\r\n      for (let exdata of data.result) {\r\n        exdata.authStatus = this.statusArr.find((i) =>\r\n          i.startsWith(exdata.authStatus)\r\n        );\r\n\r\n        exdata.recordStatus = this.statusArr.find((i) =>\r\n          i.startsWith(exdata.recordStatus)\r\n        );\r\n      }\r\n     \r\n      this.excelData = data.result;\r\n      console.log(this.excelData);\r\n      this.isLoading = false;\r\n\r\n      this.dtTrigger.next();\r\n    });\r\n  }\r\n  close(exdata){\r\n\r\n   console.log(exdata)\r\n   \r\n \r\n  Swal.fire(\r\n      {\r\n        //text: 'Unable to process' + 'Error ' + this.responseforfileupload.errorMessage + 'Do you want to Proceed??',\r\n        text: 'You are trying to Close the record. ' + ' Do you want to proceed?',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        // confirmButtonText: 'PROCEED.'\r\n        cancelButtonText: 'NO',\r\n        confirmButtonText: 'YES', 'icon': 'info'\r\n      }\r\n    ).then((result => {\r\n      if(result.isConfirmed=== true){\r\n    // this.apiService.onClcikOFCloseOfUpdateExcelMApping(addForm,this.extCodeValue,this.proCodeValue,this.extNameValue,this.currencyValue)\r\n    this.apiService.excelMappingAuditLog(exdata,'close').subscribe(closeResp => {\r\n      \r\n      console.log(closeResp);\r\n      this.newDataResponse = closeResp;\r\n      if (this.newDataResponse) {\r\n        this.authStatus = this.newDataResponse?.authStatus;\r\n        this.recordStatus = this.newDataResponse?.recordStatus;\r\n        this.modifiedBy = this.newDataResponse?.inputBy;\r\n        this.modifiedTime = this.newDataResponse?.inputDtStamp;\r\n        this.authorizedBy = this.newDataResponse?.authorizedBy;\r\n        this.authorizedTime = this.newDataResponse?.authorizedTime;\r\n        this.version = this.newDataResponse?.version;\r\n        \r\n        if (this.authStatus === 'U') {\r\n          this.authStatus = 'UNAUTHORIZED';\r\n        }\r\n        if (this.authStatus === 'A') {\r\n          this.authStatus = 'AUTHORIZED';\r\n        }\r\n        if (this.recordStatus === 'C') {\r\n          this.recordStatus = 'CLOSED';\r\n        }\r\n        if (this.recordStatus === 'O') {\r\n          this.recordStatus = 'OPEN';\r\n        }\r\n        Swal.fire({\r\n          title: 'Record is  Closed',\r\n          icon: 'success'\r\n        }).then(() => window.location.reload());\r\n        // this.getexcelMappingSummary();\r\n        this.auditLog();\r\n      }\r\n      else {\r\n        Swal.fire({\r\n          title: 'Failed to Close the Recored!',\r\n          icon: 'error'\r\n        });\r\n      }\r\n    },\r\n      error => {\r\n        if (HttpErrorResponse) {\r\n          Swal.fire({\r\n            text: 'Server Error!',\r\n            icon: 'error'\r\n          });\r\n        }\r\n      });\r\n    }}));\r\n     \r\n     \r\n          \r\n      \r\n  }\r\n \r\n  open(exdata){\r\n    Swal.fire(\r\n      {\r\n        //text: 'Unable to process' + 'Error ' + this.responseforfileupload.errorMessage + 'Do you want to Proceed??',\r\n        text: 'You are trying to re-open record. ' + ' Do you want to proceed?',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        // confirmButtonText: 'PROCEED.'\r\n        cancelButtonText: 'NO',\r\n        confirmButtonText: 'YES', 'icon': 'info'\r\n      }\r\n    ).then((result => {\r\n      console.log(\"this is reopen \", result);\r\n      if (result.isConfirmed === true) {\r\n    // this.apiService.onClcikOfReopenOfUpdateExcelMapping(addForm,this.extCodeValue,this.proCodeValue,this.extNameValue,this.currencyValue)\r\n    this.apiService.excelMappingAuditLog(exdata,'reopen').subscribe(openResp => {\r\n      console.log(openResp);\r\n      this.newDataResponse = openResp;\r\n      if (this.newDataResponse) {\r\n        this.authStatus = this.newDataResponse?.authStatus;\r\n        this.recordStatus = this.newDataResponse?.recordStatus;\r\n        this.modifiedBy = this.newDataResponse?.inputBy;\r\n        this.modifiedTime = this.newDataResponse?.inputDtStamp;\r\n        this.authorizedBy = this.newDataResponse?.authorizedBy;\r\n        this.authorizedTime = this.newDataResponse?.authorizedTime;\r\n        this.version = this.newDataResponse?.version;\r\n        \r\n        if (this.authStatus === 'U') {\r\n          this.authStatus = 'UNAUTHORIZED';\r\n        }\r\n        if (this.authStatus === 'A') {\r\n          this.authStatus = 'AUTHORIZED';\r\n        }\r\n        if (this.recordStatus === 'C') {\r\n          this.recordStatus = 'CLOSED';\r\n        }\r\n        if (this.recordStatus === 'O') {\r\n          this.recordStatus = 'OPEN';\r\n        }\r\n        Swal.fire({\r\n          title: 'Record is Reopened',\r\n          icon: 'success'\r\n        }).then(() => window.location.reload());\r\n        this.auditLog();\r\n      }\r\n      else {\r\n        Swal.fire({\r\n          title: 'Failed to Reopen the Record!',\r\n          icon: 'error'\r\n        });\r\n      }\r\n    },\r\n      error => {\r\n        if (HttpErrorResponse) {\r\n          Swal.fire({\r\n            text: 'Server Error!',\r\n            icon: 'error'\r\n          });\r\n        }\r\n      });\r\n    }}));\r\n\r\n  }\r\n delete(exdata){\r\n  console.log(exdata);\r\n\r\n\r\n  }\r\n  auth(exdata){\r\n    console.log(exdata);\r\n    this.currentUser = localStorage.getItem(\"userFromLogin\");\r\n    if (this.modifiedBy === this.currentUser) {\r\n      Swal.fire({\r\n        title: 'Maker Cannot Authorized the Record!',\r\n        icon: 'error'\r\n      });\r\n    } else {\r\n      Swal.fire(\r\n        {\r\n          text: 'You are trying to Authorize the record. ' + ' Do you want to proceed?',\r\n          showCancelButton: true,\r\n          confirmButtonColor: '#E6224A',\r\n          cancelButtonColor: '#011945',\r\n          // confirmButtonText: 'PROCEED.'\r\n          cancelButtonText: 'NO',\r\n          confirmButtonText: 'YES',\r\n          icon:'info'\r\n        }\r\n      ).then((result => {\r\n        if(result.isConfirmed=== true){\r\n      // this.apiService.onAuthorizingTheRecordOfExcelMApping(addForm,this.extNameValue,this.proCodeValue,this.extCodeValue, this.currentUser,this.currencyValue)\r\n      this.apiService.excelMappingAuditLog(exdata,'authorize')\r\n\r\n      .subscribe(authResp => {\r\n        this.newDataResponse = authResp;\r\n        if(this.newDataResponse){\r\n          this.authStatus = this.newDataResponse?.authStatus;\r\n          this.recordStatus = this.newDataResponse?.recordStatus;\r\n          // this.modifiedBy = this.mappingResponse?.modifiedBy;\r\n          this.modifiedTime = this.newDataResponse?.inputDtStamp;\r\n          this.authorizedBy = this.newDataResponse?.authorizedBy;\r\n          this.authorizedTime = this.newDataResponse?.authorizedDtStamp;\r\n          this.version = this.newDataResponse?.version;\r\n          this.firstTimeAuth=this.newDataResponse?.firstTimeAuth;\r\n          this.modifiedBy = this.newDataResponse?.inputBy;\r\n          \r\n          if (this.authStatus === 'U') {\r\n            this.authStatus = 'UNAUTHORIZED';\r\n          }\r\n          if (this.authStatus === 'A') {\r\n            this.authStatus = 'AUTHORIZED';\r\n          }\r\n          if (this.recordStatus === 'C') {\r\n            this.recordStatus = 'CLOSED';\r\n          }\r\n          if (this.recordStatus === 'O') {\r\n            this.recordStatus = 'OPEN';\r\n          }\r\n          if (this.firstTimeAuth === 'Y') {\r\n            this.firstTimeAuth = 'YES';\r\n          }\r\n          if (this.firstTimeAuth === 'N') {\r\n            this.firstTimeAuth = 'NO';\r\n          }\r\n          Swal.fire({\r\n            title: 'Record is Authorized',\r\n            icon: 'success'\r\n          }).then(() => window.location.reload());\r\n\r\n        }\r\n      })\r\n    }}));\r\n    }\r\n\r\n  }\r\n\r\n  setDataFromSummaryToUpdateExcelMapping(element) {\r\n    \r\n    localStorage.setItem('summryResponse', JSON.stringify(element));\r\n    this.apiService.setexcelSummaryData({\r\n      extSysCode: element.extSysCode,\r\n      extSys: element.extSys,\r\n      processName: element.processName,\r\n      authStatus: element.authStatus,\r\n      currency:element.currency,\r\n      sheetNumber:element.sheetNumber\r\n    });\r\n    \r\n    this.router.navigate(['/excel-mapping/excel-mapping-edit']);\r\n  }\r\n}\r\nfunction addForm(addForm: any, extCodeValue: any, proCodeValue: any, extNameValue: any, currencyValue: any) {\r\n  throw new Error('Function not implemented.');\r\n}\r\n\r\n","<div class=\"pageContentMain\">\r\n    <div class=\"pageTitleCol\">\r\n      <h2 class=\"pageTitle\">Template Mapping Summary</h2>\r\n    </div>\r\n    <div class=\"dbCardStyle\">\r\n      <div class=\"row g-3 pb-3 justify-content-end\">\r\n        <div class=\"col-auto\"  *ngIf=\"roleCodes.new\">\r\n           \r\n          <a [routerLink]=\"[ '/excel-mapping/excel-mapping-new' ]\" class=\"btn smBtn minWdSmBtn btnPrimary\">{{roleCodes.new.labelDescription}}</a>\r\n        </div>\r\n        <div class=\"col-auto\">\r\n          <a  [routerLink]=\"['/dashboard']\" class=\"btn smBtn minWdSmBtn btnSecondary\">Exit</a>\r\n        </div>\r\n      </div>\r\n      <div class=\"table-responsive\">\r\n      <table id=\"dbTable1\" datatable [dtOptions]=\"dtOptions\" [dtTrigger]=\"dtTrigger\" class=\"dataTable table tableStyle nowrap vAlignMdl \" style=\"width:100%\">\r\n        <thead>\r\n          <tr> \r\n            <th>Process Code</th>\r\n            <th>External System Code</th>\r\n            <th>External system name</th>\r\n            <th>Currency</th>\r\n            <th>Sheet Number</th>\r\n            <th>Auth status</th>\r\n            <th>Record status</th>\r\n            <th>Date</th>\r\n            <th>Action</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr *ngFor=\"let exdata of excelData \">\r\n            <!-- <td>{{exdata.processName}}</td> -->\r\n            <td><a class=\"primaryColor\" style=\"cursor: pointer;\" (click)=\"setDataFromSummaryToUpdateExcelMapping(exdata)\">{{exdata.processName}}</a></td>\r\n            <td>{{exdata.extSysCode}}</td>\r\n            <td>{{exdata.extSys}}</td>\r\n            <td>{{exdata.currency}}</td>\r\n            <td>{{exdata.sheetNumber}}</td>\r\n            <!-- <td>{{exdata.inputBy}}</td> -->\r\n            <td>{{exdata.authStatus}}</td>\r\n            <td>{{exdata.recordStatus}}</td>\r\n            <td>{{exdata.inputDtStamp | date: 'medium'}}</td>\r\n            <td>\r\n              <button class=\"btn\" style=\"color: red\" title=\"Authorize\" [disabled]=\"!(exdata.authStatus== 'U' || exdata.authStatus== 'UNAUTHORIZED'||exdata.authStatus == 'Unauthorized')\" (click)=\"auth(exdata)\">\r\n                \r\n                <img class=\"summaryIcon\" src=\"assets/images/authorize.svg\" alt=\"Authorize\">\r\n              </button>\r\n              \r\n              <button   class=\"btn\" style=\"color: red\" title=\"Close\"\r\n              *ngIf=\"(exdata.recordStatus == 'O' || exdata.recordStatus == 'Open' || exdata.recordStatus == 'OPEN') \" (click)=\"close(exdata)\">\r\n                \r\n                <img class=\"summaryIcon\" src=\"assets/images/CROSS1.svg\"   alt=\"...\">\r\n              </button>\r\n              <button class=\"btn\" style=\"color: red\" title=\"Reopen\" *ngIf=\"(exdata.recordStatus == 'C'||exdata.recordStatus == 'CLOSED'||exdata.recordStatus == 'Close')\" (click)=\"open(exdata)\">\r\n                 \r\n                <img class=\"summaryIcon\" src=\"assets/images/open.svg\"  alt=\"...\">\r\n              </button>\r\n              <button class=\"btn\" style=\"color: red\" title=\"Delete\" *ngIf=\"exdata.firstTimeAuth == 'N' || exdata.firstTimeAuth == 'NO'\" (click)=\"delete(exdata)\">\r\n                 \r\n                <img class=\"summaryIcon\" src=\"assets/images/delete.svg\" alt=\"...\">\r\n              </button>\r\n             \r\n              \r\n            \r\n              \r\n            </td>\r\n          </tr>\r\n \r\n        </tbody>\r\n      </table>\r\n    </div>\r\n    \r\n\r\n      <ng-container *ngIf=\"isLoading\">\r\n        <div class=\"loading-page-center\">\r\n          <span class=\"indicator-progress\">Please wait...\r\n            <span class=\"spinner-border spinner-border-sm align-middle ms-2\"></span></span>\r\n        </div>\r\n      </ng-container>\r\n    </div>\r\n  </div>"],"names":[],"sourceRoot":"webpack:///"}