{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;oBA+B+GA;;AAAAA,uEAyM8V,CAzM9VA,EAyM8V,OAzM9VA,EAyM8V,CAzM9VA,EAyM8V,CAzM9VA;;AAAAA,mEAyMqW,OAzMrWA,EAyMqW;AAzMrWA,wEAyMqWC,GAzMrWD;;AAyMqW,yBAzMrWA,4DAyMqW,CAzMrWA,CAyMqW;;AAAA;AAAA,WAzMrWA,EAyMqW,OAzMrWA,EAyMqW;AAAA,8BAzMrWA,4DAyMqWC,GAzMrWD,CAyMqW;;AAAA;;AAAA,yBAzMrWA,4DAyMqW,CAzMrWA,CAyMqW;;AAAA;AAAA,WAzMrWA,EAyMqW,OAzMrWA,EAyMqW;AAzMrWA,wEAyMqWC,GAzMrWD;;AAyMqW,yBAzMrWA,4DAyMqW,CAzMrWA,CAyMqW;;AAAA;AAAA,WAzMrWA,EAyMqW,SAzMrWA,EAyMqW;AAAA,8BAzMrWA,4DAyMqWC,GAzMrWD,CAyMqW;;AAAA;;AAAA,yBAzMrWA,4DAyMqW,CAzMrWA,CAyMqW;;AAAA;AAAA,WAzMrWA;;AAAAA;;;;;;;uBAAAA;;AAAAA,+EAyM6iB,YAzM7iBA,EAyM6iBE,wBAzM7iBF,EAyM6iB,EAzM7iBA;;AAAAA,+EAyMuuB,IAzMvuBA,EAyMuuB,MAzMvuBA,EAyMuuBG,IAzMvuBH,EAyMuuB,GAzMvuBA,EAyMuuBE,mBAzMvuBF,EAyMuuB,EAzMvuBA;;AAAAA,mEAyMqY,SAzMrYA,EAyMqYE,4CAzMrYF,EAyMqY,MAzMrYA,EAyMqYE,gBAzMrYF,EAyMqY,aAzMrYA,EAyMqY,gEAzMrYA,EAyMqY,SAzMrYA,EAyMqYE,yBAzMrYF,EAyMqY,aAzMrYA,EAyMqYE,gCAzMrYF;;;;;;AAAAA,uEAyMkL,CAzMlLA,EAyMkL,KAzMlLA,EAyMkL,CAzMlLA;;AAAAA,mEAyM8V,CAzM9VA,EAyM8VI,0CAzM9VJ,EAyM8V,CAzM9VA,EAyM8V,EAzM9VA,EAyM8V,OAzM9VA,EAyM8V,CAzM9VA;;AAAAA;;AAAAA;;;;uBAAAA;;AAAAA,+EAyMuL,+BAzMvLA,EAyMuLK,4BAzMvLL,EAyMuL,EAzMvLA;;AAAAA,+EAyMwP,IAzMxPA,EAyMwP,IAzMxPA,EAyMwPK,mBAzMxPL,EAyMwP,EAzMxPA;;AAAAA,mEAyMmT,SAzMnTA,EAyMmTK,6BAzMnTL;;AAAAA,kEAyMwoB,CAzMxoBA;;AAAAA,mEAyMwoB,SAzMxoBA,4DAyMwoB,CAzMxoBA,EAyMwoB,CAzMxoBA,EAyMwoBK,uDAzMxoBL;;;;UAxBzGM;;;;;;;iBACwB,6BAACC,KAAD,EAAQ;AAC9B,mBAAO,KAAKC,KAAL,CAAWD,KAAX,EAAkB,sBAAlB,CAAP;AACH;;;iBACkB,sBAACA,KAAD,EAAQ;AACvB,mBAAO,KAAKC,KAAL,CAAWD,KAAX,EAAkB,kBAAlB,CAAP;AACH;;;iBACiB,qBAACA,KAAD,EAAQ;AACtB,mBAAO,KAAKC,KAAL,CAAWD,KAAX,EAAkB,gBAAlB,CAAP;AACH;;;iBACgB,oBAACA,KAAD,EAAQ;AACrB,mBAAO,KAAKC,KAAL,CAAWD,KAAX,EAAkB,YAAlB,CAAP,CADqB,CACmB;AAC3C;;;iBACW,eAACA,KAAD,EAAQE,IAAR,EAAc;AACtB,gBAAIC,WAAW,GAAGD,IAAI,CAACE,KAALF,CAAW,GAAXA,CAAlB;AACA,mBAAOC,WAAW,CAACE,IAAZF,CAAiBG,WAAC;AAAA,qBAAIA,CAAC,KAAKN,KAAK,CAACO,GAAhB;AAAA,aAAlBJ,CAAP;AACH;;;;;;UAGCK;;;;;;;iBACFC,mBAAUC,KAAVD,EAAiB;AACb,mBAAOE,MAAM,CAACT,IAAPS,CAAYD,KAAZC,CAAP;AACH;;;;;AAEL;;;AAAmBH,cAAQ,CAACI,IAATJ;AAAA,yBAAsGA,QAAtG;AAAA;AACnB;;;AAAmBA,cAAQ,CAACK,KAATL,kBAD4Ff,2DAC5F;AAAAqB;AAAAC,cAAoGP,QAApG;AAAAQ;AAAA,OAD4FvB,CAC5Fe;;AACnB;AAAA,2DAF+Gf,gEAEnBe,QAFmBf,EAEG,CAAC;AACvGsB,cAAI,EAAEE,+CADiG;AAEvGC,cAAI,EAAE,CAAC;AACCJ,gBAAI,EAAE;AADP,WAAD;AAFiG,SAAD,CAFHrB,EAE/G,IAF+GA,EAE/G,IAF+GA,CAE/G;AAAA;;UAOM0B;AACFC,sCAAYC,QAAZD,EAAsB;AAAA;;AAClB,eAAKC,QAAL,GAAgBA,QAAhB;AACA,eAAKC,MAAL,GAAc;AAAEC,kBAAM,EAAE;AAAV,WAAd,CAFkB,CAGlB;;AACA,eAAKC,aAAL,GAAqB,IAAIC,uDAAJ,EAArB;AACA,eAAKC,aAAL,GAAqB,IAAIC,KAAJ,CAAU,KAAKL,MAAL,CAAYC,MAAtB,CAArB;AACA,eAAKK,YAAL,GAAoBC,IAAI,CAACC,MAALD,GACfE,QADeF,CACN,EADMA,EAEfG,SAFeH,CAEL,CAFKA,IAEA,IAAII,IAAJ,GAAWC,OAAX,GAAqBH,QAArB,CAA8B,EAA9B,CAFpB;AAGH;;;;eACY,eAAG;AACZ,gBAAII,EAAJ,EAAQC,EAAR;;AACA,mBAAO,CAAC,CAACD,EAAE,GAAG,KAAKb,MAAX,MAAuB,IAAvB,IAA+Ba,EAAE,KAAK,KAAK,CAA3C,GAA+C,KAAK,CAApD,GAAwDA,EAAE,CAACE,eAA5D,IACD,UADC,GAED,CAAC,CAACD,EAAE,GAAG,KAAKd,MAAX,MAAuB,IAAvB,IAA+Bc,EAAE,KAAK,KAAK,CAA3C,GAA+C,KAAK,CAApD,GAAwDA,EAAE,CAACE,gBAA5D,IACI,KADJ,GAEI,MAJV;AAKH;;;iBACDC,oBAAW;AAAA;;AACP,iBAAKC,OAAL,GAAe,IAAIC,qDAAJ,CAAc,EAAd,CAAf;;AACA,iBAAK,IAAIC,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAG,KAAKpB,MAAL,CAAYC,MAAxC,EAAgDmB,KAAK,EAArD,EAAyD;AACrD,mBAAKF,OAAL,CAAaG,UAAb,CAAwB,KAAKC,cAAL,CAAoBF,KAApB,CAAxB,EAAoD,IAAIG,uDAAJ,EAApD;AACH;;AACD,iBAAKL,OAAL,CAAaM,YAAb,CAA0BC,SAA1B,CAAqCC,WAAD,EAAO;AACvC,oBAAK3B,QAAL,CAAcZ,SAAd,CAAwB,MAAK+B,OAAL,CAAaS,QAArC,EAA+CC,OAA/C,CAAwD5C,WAAD,EAAO;AAC1D,oBAAI6C,GAAG,GAAG,MAAKX,OAAL,CAAaS,QAAb,CAAsB3C,CAAtB,EAAyBI,KAAnC;;AACA,oBAAIyC,GAAG,IAAIA,GAAG,CAAC5B,MAAJ4B,GAAa,CAAxB,EAA2B;AACvB,sBAAIA,GAAG,CAAC5B,MAAJ4B,IAAc,MAAK7B,MAAL,CAAYC,MAA9B,EAAsC;AAClC,0BAAK6B,QAAL,CAAcD,GAAd;AADJ,yBAGK;AACD,0BAAKE,YAAL;AACH;AACJ;AATL;AADJ;AAaH;;;iBACDC,2BAAkB;AACd,gBAAI,CAAC,KAAKhC,MAAL,CAAYiC,gBAAjB,EAAmC;AAC/B,kBAAMC,aAAa,GAAGC,QAAQ,CAACC,cAATD,aAA6B,KAAK7B,YAAlC6B,EAAtB;;AACA,kBAAID,aAAJ,EAAmB;AACf,oBAAMG,GAAG,GAAGH,aAAa,CAACI,sBAAdJ,CAAqC,WAArCA,EAAkD,CAAlDA,CAAZ;;AACA,oBAAIG,GAAG,IAAIA,GAAG,CAACE,KAAf,EAAsB;AAClBF,qBAAG,CAACE,KAAJF;AACH;AACJ;AACJ;AACJ;;;iBACDf,wBAAekB,GAAflB,EAAoB;AAChB,kCAAekB,GAAf;AACH;;;iBACDC,mBAAUC,MAAVD,EAAkBE,QAAlBF,EAA4B;AACxB,gBAAIhE,YAAY,CAACmE,UAAbnE,CAAwBiE,MAAxBjE,CAAJ,EAAqC;AACjCiE,oBAAM,CAACG,cAAPH;AACA,qBAAO,KAAP;AACH;AACJ;;;iBACDI,iBAAQJ,MAARI,EAAgB;AACZ,gBAAIC,MAAM,GAAG,KAAKC,UAAL,aAAqB,KAAKA,UAA1B,SAAuCN,MAAM,CAACO,MAAPP,CAActD,KAArD,IAA+DsD,MAAM,CAACO,MAAPP,CAActD,KAA1F;;AACA,gBAAI,KAAKY,MAAL,CAAYgB,gBAAZ,IAAgC,CAAC,KAAKkC,cAAL,CAAoBH,MAApB,CAArC,EAAkE;AAC9DL,oBAAM,CAACO,MAAPP,CAActD,KAAdsD,GAAsB,EAAtBA;AACAA,oBAAM,CAACS,eAAPT;AACAA,oBAAM,CAACG,cAAPH;AACA;AACH;AACJ;;;iBACDU,iBAAQV,MAARU,EAAgBT,QAAhBS,EAA0B;AACtB,gBAAMC,WAAW,GAAG,KAAKC,SAAL,eAAsBX,QAAQ,GAAG,CAAjC,EAApB;AACA,gBAAMY,WAAW,GAAG,KAAKD,SAAL,eAAsBX,QAAQ,GAAG,CAAjC,EAApB;;AACA,gBAAIlE,YAAY,CAAC+E,YAAb/E,CAA0BiE,MAA1BjE,CAAJ,EAAuC;AACnCiE,oBAAM,CAACG,cAAPH;AACA,mBAAKe,WAAL,CAAiBJ,WAAjB;AACA;AACH;;AACD,gBAAI5E,YAAY,CAACiF,WAAbjF,CAAyBiE,MAAzBjE,CAAJ,EAAsC;AAClCiE,oBAAM,CAACG,cAAPH;AACA,mBAAKe,WAAL,CAAiBF,WAAjB;AACA;AACH;;AACD,gBAAI9E,YAAY,CAACkF,mBAAblF,CAAiCiE,MAAjCjE,KAA4C,CAACiE,MAAM,CAACO,MAAPP,CAActD,KAA/D,EAAsE;AAClE,mBAAKqE,WAAL,CAAiBF,WAAjB;AACA,mBAAKxB,YAAL;AACA;AACH;;AACD,gBAAI,CAACW,MAAM,CAACO,MAAPP,CAActD,KAAnB,EAA0B;AACtB;AACH;;AACD,gBAAI,KAAKwE,cAAL,CAAoBlB,MAApB,CAAJ,EAAiC;AAC7B,mBAAKe,WAAL,CAAiBJ,WAAjB;AACH;;AACD,iBAAKtB,YAAL;AACH;;;iBACDmB,wBAAerB,GAAfqB,EAAoB;AAChB,mBAAOrB,GAAG,IAAI,cAAcgC,IAAd,CAAmBhC,GAAnB,CAAd;AACH;;;iBACDyB,mBAAUQ,EAAVR,EAAc;AACV,6BAAUQ,EAAV,cAAgB,KAAKxD,YAArB;AACH;;;iBACDmD,qBAAYM,KAAZN,EAAmB;AACf,iBAAKO,OAAL,CAAaD,KAAb;AACA,gBAAM1B,GAAG,GAAGF,QAAQ,CAACC,cAATD,CAAwB4B,KAAxB5B,CAAZ;;AACA,gBAAIE,GAAG,IAAIA,GAAG,CAAC4B,iBAAf,EAAkC;AAC9BC,wBAAU,CAAC,YAAM;AACb7B,mBAAG,CAAC4B,iBAAJ5B,CAAsB,CAAtBA,EAAyB,CAAzBA;AADM,iBAEP,CAFO,CAAV6B;AAGH;AACJ;;;iBACDN,wBAAelF,KAAfkF,EAAsB;AAClB,gBAAMO,GAAG,GAAGzF,KAAK,CAACO,GAAlB;AACA,gBAAMmF,QAAQ,GAAG,4BAA4BP,IAA5B,CAAiCQ,SAAS,CAACC,SAA3C,CAAjB;AACA,mBAAQF,QAAQ,IACZ,gBAAgBP,IAAhB,CAAqBM,GAArB,CADIC,IAEH,KAAKpE,MAAL,CAAYuE,aAAZ,IACG,KAAKvE,MAAL,CAAYuE,aAAZ,CAA0BC,QAA1B,CAAmC9F,KAAK,CAAC+F,OAAzC,CAHR;AAIH;;;iBACDT,iBAAQD,KAARC,EAAe;AACX,gBAAM3B,GAAG,GAAGF,QAAQ,CAACC,cAATD,CAAwB4B,KAAxB5B,CAAZ;;AACA,gBAAIE,GAAJ,EAAS;AACLA,iBAAG,CAACE,KAAJF;AACH;AAxHiB,YA0HtB;;;;iBACAP,kBAAS1C,KAAT0C,EAAgB;AAAA;;AACZ,gBAAI,KAAK9B,MAAL,CAAYgB,gBAAZ,IAAgC0D,KAAK,CAACtF,KAAD,CAAzC,EAAkD;AAC9C;AACH;;AACD,iBAAK8B,OAAL,CAAayD,KAAb;;AACA,gBAAI,CAACvF,KAAL,EAAY;AACR,mBAAK2C,YAAL;AACA;AACH;;AACD3C,iBAAK,GAAGA,KAAK,CAACqB,QAANrB,GAAiBwF,OAAjBxF,CAAyB,KAAzBA,EAAgC,EAAhCA,CAARA,CATY,CASiC;;AAC7CiB,iBAAK,CAACwE,IAANxE,CAAWjB,KAAXiB,EAAkBuB,OAAlBvB,CAA0B,UAACyE,CAAD,EAAItC,GAAJ,EAAY;AAClC,kBAAI,OAAKtB,OAAL,CAAa6D,GAAb,CAAiB,OAAKzD,cAAL,CAAoBkB,GAApB,CAAjB,CAAJ,EAAgD;AAC5C,uBAAKtB,OAAL,CAAa6D,GAAb,CAAiB,OAAKzD,cAAL,CAAoBkB,GAApB,CAAjB,EAA2CV,QAA3C,CAAoDgD,CAApD;AACH;AAHL;;AAKA,gBAAI,CAAC,KAAK9E,MAAL,CAAYiC,gBAAjB,EAAmC;AAC/B,kBAAMC,aAAa,GAAGC,QAAQ,CAACC,cAATD,aAA6B,KAAK7B,YAAlC6B,EAAtB;AACA,kBAAI6C,qBAAqB,GAAG5F,KAAK,CAACa,MAANb,GAAe,KAAKY,MAAL,CAAYC,MAA3Bb,GAAoCA,KAAK,CAACa,MAA1Cb,GAAoD,KAAKY,MAAL,CAAYC,MAAZ,GAAqB,CAArG;AACA,kBAAIoC,GAAG,GAAGH,aAAa,CAACI,sBAAdJ,CAAqC,WAArCA,EAAkD8C,qBAAlD9C,CAAV;;AACA,kBAAIG,GAAG,IAAIA,GAAG,CAACE,KAAf,EAAsB;AAClBF,mBAAG,CAACE,KAAJF;AACH;AACJ;;AACD,iBAAKN,YAAL;AACH;;;iBACDA,wBAAe;AAAA;;AACX,gBAAIlB,EAAJ;;AACA,gBAAIgB,GAAG,GAAG,EAAV;AACA,iBAAK9B,QAAL,CAAcZ,SAAd,CAAwB,KAAK+B,OAAL,CAAaS,QAArC,EAA+CC,OAA/C,CAAuD5C,WAAC,EAAI;AACxD,kBAAI,OAAKkC,OAAL,CAAaS,QAAb,CAAsB3C,CAAtB,EAAyBI,KAA7B,EAAoC;AAChC,oBAAI6F,OAAO,GAAG,OAAK/D,OAAL,CAAaS,QAAb,CAAsB3C,CAAtB,EAAyBI,KAAvC;AACA,oBAAI8F,cAAc,GAAGD,OAAO,CAAChF,MAARgF,GAAiB,CAAtC;AACA,oBAAIE,sBAAsB,GAAG,CAAC,OAAKnF,MAAL,CAAYgB,gBAAb,IAAiC,OAAKhB,MAAL,CAAYoF,UAA7C,KAA4D,OAAKpF,MAAL,CAAYoF,UAAZ,CAAuBC,iBAAvB,MAA8C,OAA9C,IAAyD,OAAKrF,MAAL,CAAYoF,UAAZ,CAAuBC,iBAAvB,MAA8C,OAAnK,CAA7B;AACAJ,uBAAO,GAAGA,OAAO,CAAC,CAAD,CAAjBA;AACA,oBAAIK,cAAc,GAAGH,sBAAsB,GAAG,OAAKnF,MAAL,CAAYoF,UAAZ,CAAuBC,iBAAvB,MAA8C,OAA9C,GAAwDJ,OAAO,CAACM,WAARN,EAAxD,GAAgFA,OAAO,CAACO,WAARP,EAAnF,GAA2GA,OAAtJ;;AACA,oBAAIE,sBAAsB,IAAIG,cAAc,IAAIL,OAAhD,EAAyD;AACrDE,wCAAsB,GAAG,KAAzBA;AADJ,uBAGK;AACDF,yBAAO,GAAGK,cAAVL;AACH;;AACDpD,mBAAG,IAAIoD,OAAPpD;;AACA,oBAAIqD,cAAc,IAAIC,sBAAtB,EAA8C;AAC1C,yBAAKjE,OAAL,CAAaS,QAAb,CAAsB3C,CAAtB,EAAyB8C,QAAzB,CAAkCmD,OAAlC;AACH;AACJ;AAjBL;;AAmBA,gBAAI,CAACpE,EAAE,GAAG,KAAK4E,QAAX,MAAyB,IAAzB,IAAiC5E,EAAE,KAAK,KAAK,CAA7C,GAAiD,KAAK,CAAtD,GAA0DA,EAAE,CAACiB,QAAjE,EAA2E;AACvE,mBAAK2D,QAAL,CAAc3D,QAAd,CAAuBD,GAAvB;AACH;;AACD,iBAAK3B,aAAL,CAAmBwF,IAAnB,CAAwB7D,GAAxB;AACA,iBAAKmB,UAAL,GAAkBnB,GAAlB;AACH;;;iBACD8D,qBAAYC,CAAZD,EAAe;AACX;AACA,gBAAIE,aAAa,GAAGD,CAAC,CAACC,aAAFD,IAAmBE,MAAM,CAAC,eAAD,CAA7C;;AACA,gBAAID,aAAJ,EAAmB;AACf,kBAAIE,UAAU,GAAGF,aAAa,CAACG,OAAdH,CAAsB,MAAtBA,CAAjB;AAJO,cAMX;;;AACAD,aAAC,CAACzC,eAAFyC;AACAA,aAAC,CAAC/C,cAAF+C;;AACA,gBAAI,CAACG,UAAD,IAAgB,KAAK/F,MAAL,CAAYgB,gBAAZ,IAAgC,CAAC,KAAKkC,cAAL,CAAoB6C,UAApB,CAArD,EAAuF;AACnF;AACH;;AACD,iBAAKjE,QAAL,CAAciE,UAAd;AACH;;;;;AAEL;;;AAAmBlG,0BAAmB,CAACP,IAApBO;AAAA,yBAAiHA,oBAAjH,EAxM4F1B,gEAwM0De,QAxM1Df,CAwM5F;AAAA;AACnB;;;AAAmB0B,0BAAmB,CAACoG,IAApBpG,kBAzM4F1B,gEAyM5F;AAAAsB,cAAqGI,oBAArG;AAAAqG;AAAAC;AAAAnG;AAAAyF;AAAA;AAAAW;AAAAlG;AAAA;AAAAmG;AAAAC;AAAAC;AAAAC;AAAA;AAzM4FrI,qEAyMkL,CAzMlLA,EAyMkLsI,kCAzMlLtI,EAyMkL,CAzMlLA,EAyMkL,CAzMlLA,EAyMkL,KAzMlLA,EAyMkL,CAzMlLA;AAyM5F;;AAAA;AAzM4FA,qEAyMmR,MAzMnRA,EAyMmRuI,iDAzMnRvI;AAyM5F;AAAA;AAAAwI,qBAA21CC,iDAA31C,EAA46CA,oDAA56C,EAA8+CA,oDAA9+C,EAAwlDC,gEAAxlD,EAAq1DA,4DAAr1D,EAA29DA,2DAA39D,EAAgjEA,gEAAhjE;AAAAC,gBAA0tE5H,QAA1tE;AAAA6H;AAAA,OAzM4F5I,CAyM5F0B;;AACnB;AAAA,2DA1M+G1B,gEA0MnB0B,oBA1MmB1B,EA0Mc,CAAC;AAClHsB,cAAI,EAAEuH,oDAD4G;AAElHpH,cAAI,EAAE,CAAC;AACC;AACAqH,oBAAQ,EAAE,cAFX;AAGCC,uBAAW,EAAE,+BAHd;AAICC,qBAAS,EAAE,CAAC,+BAAD;AAJZ,WAAD;AAF4G,SAAD,CA1MdhJ,EAkNnF,YAAY;AAAE,iBAAO,CAAC;AAAEsB,gBAAI,EAAEP;AAAR,WAAD,CAAP;AAR1C,SA1M+Gf,EAkNrB;AAAE6B,gBAAM,EAAE,CAAC;AACrFP,gBAAI,EAAE2H;AAD+E,WAAD,CAAV;AAE1ElH,uBAAa,EAAE,CAAC;AAChBT,gBAAI,EAAE4H;AADU,WAAD,CAF2D;AAI1E5B,kBAAQ,EAAE,CAAC;AACXhG,gBAAI,EAAE2H;AADK,WAAD;AAJgE,SAlNqBjJ,CA0M/G;AAAA;;UAgBMmJ;;;AAEN;;;AAAmBA,uBAAgB,CAAChI,IAAjBgI;AAAA,yBAA8GA,iBAA9G;AAAA;AACnB;;;AAAmBA,uBAAgB,CAACC,IAAjBD,kBA7N4FnJ,+DA6N5F;AAAAsB,cAA+G6H;AAA/G,OA7N4FnJ,CA6N5FmJ;AAGnB;;AAAmBA,uBAAgB,CAACE,IAAjBF,kBAhO4FnJ,+DAgO5F;AAAAsJ,mBAA4I,CAACvI,QAAD,CAA5I;AAAAwI,kBAAkK,CACzKC,yDADyK,EAEzKC,uDAFyK,EAGzKC,+DAHyK,CAAlK;AAAA,OAhO4F1J,CAgO5FmJ;;AAKnB;AAAA,2DArO+GnJ,gEAqOnBmJ,iBArOmBnJ,EAqOW,CAAC;AAC/GsB,cAAI,EAAEqI,mDADyG;AAE/GlI,cAAI,EAAE,CAAC;AACC8H,mBAAO,EAAE,CACLC,yDADK,EAELC,uDAFK,EAGLC,+DAHK,CADV;AAMCE,wBAAY,EAAE,CAAClI,oBAAD,EAAsBX,QAAtB,CANf;AAOC8I,mBAAO,EAAE,CAACnI,oBAAD,CAPV;AAQC4H,qBAAS,EAAE,CAACvI,QAAD;AARZ,WAAD;AAFyG,SAAD,CArOXf,EAqO/G,IArO+GA,EAqO/G,IArO+GA,CAqO/G;AAAA;;UAcM8J;;;AAGN;AACA;AACA;;AAEA;AACA;AACA;;;;;","names":["i0","_r6","ctx_r1","i_r3","NgOtpInputComponent_div_0_input_1_Template","ctx_r0","KeyboardUtil","event","ifKey","keys","keysToCheck","split","some","k","key","KeysPipe","transform","value","Object","ɵfac","ɵpipe","name","type","pure","Pipe","args","NgOtpInputComponent","constructor","keysPipe","config","length","onInputChange","EventEmitter","inputControls","Array","componentKey","Math","random","toString","substring","Date","getTime","_a","_b","isPasswordInput","allowNumbersOnly","ngOnInit","otpForm","FormGroup","index","addControl","getControlName","FormControl","valueChanges","subscribe","v","controls","forEach","val","setValue","rebuildValue","ngAfterViewInit","disableAutoFocus","containerItem","document","getElementById","ele","getElementsByClassName","focus","idx","onKeyDown","$event","inputIdx","ifSpacebar","preventDefault","onInput","newVal","currentVal","target","validateNumber","stopPropagation","onKeyUp","nextInputId","appendKey","prevInputId","ifRightArrow","setSelected","ifLeftArrow","ifBackspaceOrDelete","ifValidKeyCode","test","id","eleId","focusTo","setSelectionRange","setTimeout","inp","isMobile","navigator","userAgent","allowKeyCodes","includes","keyCode","isNaN","reset","replace","from","c","get","indexOfElementToFocus","ctrlVal","isLengthExceed","isCaseTransformEnabled","letterCase","toLocaleLowerCase","transformedVal","toUpperCase","toLowerCase","formCtrl","emit","handlePaste","e","clipboardData","window","pastedData","getData","ɵcmp","selectors","inputs","outputs","decls","vars","consts","template","NgOtpInputComponent_div_0_Template","ctx","directives","i2","i3","pipes","styles","Component","selector","templateUrl","styleUrls","Input","Output","NgOtpInputModule","ɵmod","ɵinj","providers","imports","CommonModule","FormsModule","ReactiveFormsModule","NgModule","declarations","exports","Config"],"sources":["webpack:///node_modules/ng-otp-input/fesm2015/ng-otp-input.js"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { Pipe, EventEmitter, Component, Input, Output, NgModule } from '@angular/core';\nimport * as i3 from '@angular/forms';\nimport { FormGroup, FormControl, FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport * as i2 from '@angular/common';\nimport { CommonModule } from '@angular/common';\n\nclass KeyboardUtil {\r\n    static ifBackspaceOrDelete(event) {\r\n        return this.ifKey(event, 'Backspace;Delete;Del');\r\n    }\r\n    static ifRightArrow(event) {\r\n        return this.ifKey(event, 'ArrowRight;Right');\r\n    }\r\n    static ifLeftArrow(event) {\r\n        return this.ifKey(event, 'ArrowLeft;Left');\r\n    }\r\n    static ifSpacebar(event) {\r\n        return this.ifKey(event, 'Spacebar; '); //don't remove the space after ; as this will check for space key\r\n    }\r\n    static ifKey(event, keys) {\r\n        let keysToCheck = keys.split(';');\r\n        return keysToCheck.some(k => k === event.key);\r\n    }\r\n}\n\nclass KeysPipe {\r\n    transform(value) {\r\n        return Object.keys(value);\r\n    }\r\n}\r\n/** @nocollapse */ KeysPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: KeysPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });\r\n/** @nocollapse */ KeysPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: KeysPipe, name: \"keys\" });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: KeysPipe, decorators: [{\r\n            type: Pipe,\r\n            args: [{\r\n                    name: 'keys'\r\n                }]\r\n        }] });\n\nclass NgOtpInputComponent {\r\n    constructor(keysPipe) {\r\n        this.keysPipe = keysPipe;\r\n        this.config = { length: 4 };\r\n        // tslint:disable-next-line: no-output-on-prefix\r\n        this.onInputChange = new EventEmitter();\r\n        this.inputControls = new Array(this.config.length);\r\n        this.componentKey = Math.random()\r\n            .toString(36)\r\n            .substring(2) + new Date().getTime().toString(36);\r\n    }\r\n    get inputType() {\r\n        var _a, _b;\r\n        return ((_a = this.config) === null || _a === void 0 ? void 0 : _a.isPasswordInput)\r\n            ? 'password'\r\n            : ((_b = this.config) === null || _b === void 0 ? void 0 : _b.allowNumbersOnly)\r\n                ? 'tel'\r\n                : 'text';\r\n    }\r\n    ngOnInit() {\r\n        this.otpForm = new FormGroup({});\r\n        for (let index = 0; index < this.config.length; index++) {\r\n            this.otpForm.addControl(this.getControlName(index), new FormControl());\r\n        }\r\n        this.otpForm.valueChanges.subscribe((v) => {\r\n            this.keysPipe.transform(this.otpForm.controls).forEach((k) => {\r\n                var val = this.otpForm.controls[k].value;\r\n                if (val && val.length > 1) {\r\n                    if (val.length >= this.config.length) {\r\n                        this.setValue(val);\r\n                    }\r\n                    else {\r\n                        this.rebuildValue();\r\n                    }\r\n                }\r\n            });\r\n        });\r\n    }\r\n    ngAfterViewInit() {\r\n        if (!this.config.disableAutoFocus) {\r\n            const containerItem = document.getElementById(`c_${this.componentKey}`);\r\n            if (containerItem) {\r\n                const ele = containerItem.getElementsByClassName('otp-input')[0];\r\n                if (ele && ele.focus) {\r\n                    ele.focus();\r\n                }\r\n            }\r\n        }\r\n    }\r\n    getControlName(idx) {\r\n        return `ctrl_${idx}`;\r\n    }\r\n    onKeyDown($event, inputIdx) {\r\n        if (KeyboardUtil.ifSpacebar($event)) {\r\n            $event.preventDefault();\r\n            return false;\r\n        }\r\n    }\r\n    onInput($event) {\r\n        let newVal = this.currentVal ? `${this.currentVal}${$event.target.value}` : $event.target.value;\r\n        if (this.config.allowNumbersOnly && !this.validateNumber(newVal)) {\r\n            $event.target.value = '';\r\n            $event.stopPropagation();\r\n            $event.preventDefault();\r\n            return;\r\n        }\r\n    }\r\n    onKeyUp($event, inputIdx) {\r\n        const nextInputId = this.appendKey(`otp_${inputIdx + 1}`);\r\n        const prevInputId = this.appendKey(`otp_${inputIdx - 1}`);\r\n        if (KeyboardUtil.ifRightArrow($event)) {\r\n            $event.preventDefault();\r\n            this.setSelected(nextInputId);\r\n            return;\r\n        }\r\n        if (KeyboardUtil.ifLeftArrow($event)) {\r\n            $event.preventDefault();\r\n            this.setSelected(prevInputId);\r\n            return;\r\n        }\r\n        if (KeyboardUtil.ifBackspaceOrDelete($event) && !$event.target.value) {\r\n            this.setSelected(prevInputId);\r\n            this.rebuildValue();\r\n            return;\r\n        }\r\n        if (!$event.target.value) {\r\n            return;\r\n        }\r\n        if (this.ifValidKeyCode($event)) {\r\n            this.setSelected(nextInputId);\r\n        }\r\n        this.rebuildValue();\r\n    }\r\n    validateNumber(val) {\r\n        return val && /^\\d*\\.?\\d*$/.test(val);\r\n    }\r\n    appendKey(id) {\r\n        return `${id}_${this.componentKey}`;\r\n    }\r\n    setSelected(eleId) {\r\n        this.focusTo(eleId);\r\n        const ele = document.getElementById(eleId);\r\n        if (ele && ele.setSelectionRange) {\r\n            setTimeout(() => {\r\n                ele.setSelectionRange(0, 1);\r\n            }, 0);\r\n        }\r\n    }\r\n    ifValidKeyCode(event) {\r\n        const inp = event.key;\r\n        const isMobile = /iPhone|iPad|iPod|Android/i.test(navigator.userAgent);\r\n        return (isMobile ||\r\n            /[a-zA-Z0-9-_]/.test(inp) ||\r\n            (this.config.allowKeyCodes &&\r\n                this.config.allowKeyCodes.includes(event.keyCode)));\r\n    }\r\n    focusTo(eleId) {\r\n        const ele = document.getElementById(eleId);\r\n        if (ele) {\r\n            ele.focus();\r\n        }\r\n    }\r\n    // method to set component value\r\n    setValue(value) {\r\n        if (this.config.allowNumbersOnly && isNaN(value)) {\r\n            return;\r\n        }\r\n        this.otpForm.reset();\r\n        if (!value) {\r\n            this.rebuildValue();\r\n            return;\r\n        }\r\n        value = value.toString().replace(/\\s/g, ''); // remove whitespace\r\n        Array.from(value).forEach((c, idx) => {\r\n            if (this.otpForm.get(this.getControlName(idx))) {\r\n                this.otpForm.get(this.getControlName(idx)).setValue(c);\r\n            }\r\n        });\r\n        if (!this.config.disableAutoFocus) {\r\n            const containerItem = document.getElementById(`c_${this.componentKey}`);\r\n            var indexOfElementToFocus = value.length < this.config.length ? value.length : (this.config.length - 1);\r\n            let ele = containerItem.getElementsByClassName('otp-input')[indexOfElementToFocus];\r\n            if (ele && ele.focus) {\r\n                ele.focus();\r\n            }\r\n        }\r\n        this.rebuildValue();\r\n    }\r\n    rebuildValue() {\r\n        var _a;\r\n        let val = '';\r\n        this.keysPipe.transform(this.otpForm.controls).forEach(k => {\r\n            if (this.otpForm.controls[k].value) {\r\n                let ctrlVal = this.otpForm.controls[k].value;\r\n                let isLengthExceed = ctrlVal.length > 1;\r\n                let isCaseTransformEnabled = !this.config.allowNumbersOnly && this.config.letterCase && (this.config.letterCase.toLocaleLowerCase() == 'upper' || this.config.letterCase.toLocaleLowerCase() == 'lower');\r\n                ctrlVal = ctrlVal[0];\r\n                let transformedVal = isCaseTransformEnabled ? this.config.letterCase.toLocaleLowerCase() == 'upper' ? ctrlVal.toUpperCase() : ctrlVal.toLowerCase() : ctrlVal;\r\n                if (isCaseTransformEnabled && transformedVal == ctrlVal) {\r\n                    isCaseTransformEnabled = false;\r\n                }\r\n                else {\r\n                    ctrlVal = transformedVal;\r\n                }\r\n                val += ctrlVal;\r\n                if (isLengthExceed || isCaseTransformEnabled) {\r\n                    this.otpForm.controls[k].setValue(ctrlVal);\r\n                }\r\n            }\r\n        });\r\n        if ((_a = this.formCtrl) === null || _a === void 0 ? void 0 : _a.setValue) {\r\n            this.formCtrl.setValue(val);\r\n        }\r\n        this.onInputChange.emit(val);\r\n        this.currentVal = val;\r\n    }\r\n    handlePaste(e) {\r\n        // Get pasted data via clipboard API\r\n        let clipboardData = e.clipboardData || window['clipboardData'];\r\n        if (clipboardData) {\r\n            var pastedData = clipboardData.getData('Text');\r\n        }\r\n        // Stop data actually being pasted into div\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n        if (!pastedData || (this.config.allowNumbersOnly && !this.validateNumber(pastedData))) {\r\n            return;\r\n        }\r\n        this.setValue(pastedData);\r\n    }\r\n}\r\n/** @nocollapse */ NgOtpInputComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: NgOtpInputComponent, deps: [{ token: KeysPipe }], target: i0.ɵɵFactoryTarget.Component });\r\n/** @nocollapse */ NgOtpInputComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.16\", type: NgOtpInputComponent, selector: \"ng-otp-input\", inputs: { config: \"config\", formCtrl: \"formCtrl\" }, outputs: { onInputChange: \"onInputChange\" }, ngImport: i0, template: \"<div class=\\\"ng-otp-input-wrapper wrapper {{config.containerClass}}\\\" id=\\\"c_{{componentKey}}\\\" *ngIf=\\\"otpForm?.controls\\\"\\r\\n  [ngStyle]=\\\"config.containerStyles\\\">\\r\\n  <input (paste)=\\\"handlePaste($event)\\\" [pattern]=\\\"config.allowNumbersOnly ? '\\\\\\\\d*' : ''\\\" [type]=\\\"inputType\\\"  [placeholder]=\\\"config?.placeholder || ''\\\"\\r\\n    [ngStyle]=\\\"config.inputStyles\\\" \\r\\n    class=\\\"otp-input {{config.inputClass}}\\\" autocomplete=\\\"one-time-code\\\" *ngFor=\\\"let item of otpForm?.controls | keys;let i=index\\\"\\r\\n    [formControl]=\\\"otpForm.controls[item]\\\" #inp id=\\\"otp_{{i}}_{{componentKey}}\\\" \\r\\n    (keyup)=\\\"onKeyUp($event,i)\\\" (input)=\\\"onInput($event)\\\" (keydown)=\\\"onKeyDown($event,i)\\\" >\\r\\n</div>\", styles: [\".otp-input{width:50px;height:50px;border-radius:4px;border:solid 1px #c5c5c5;text-align:center;font-size:32px}.ng-otp-input-wrapper .otp-input:not(:last-child){margin-right:8px}@media screen and (max-width: 767px){.otp-input{width:40px;font-size:24px;height:40px}}@media screen and (max-width: 420px){.otp-input{width:30px;font-size:18px;height:30px}}\\n\"], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgStyle, selector: \"[ngStyle]\", inputs: [\"ngStyle\"] }, { type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: i3.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { type: i3.PatternValidator, selector: \"[pattern][formControlName],[pattern][formControl],[pattern][ngModel]\", inputs: [\"pattern\"] }, { type: i3.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { type: i3.FormControlDirective, selector: \"[formControl]\", inputs: [\"disabled\", \"formControl\", \"ngModel\"], outputs: [\"ngModelChange\"], exportAs: [\"ngForm\"] }], pipes: { \"keys\": KeysPipe } });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: NgOtpInputComponent, decorators: [{\r\n            type: Component,\r\n            args: [{\r\n                    // tslint:disable-next-line: component-selector\r\n                    selector: 'ng-otp-input',\r\n                    templateUrl: './ng-otp-input.component.html',\r\n                    styleUrls: ['./ng-otp-input.component.scss']\r\n                }]\r\n        }], ctorParameters: function () { return [{ type: KeysPipe }]; }, propDecorators: { config: [{\r\n                type: Input\r\n            }], onInputChange: [{\r\n                type: Output\r\n            }], formCtrl: [{\r\n                type: Input\r\n            }] } });\n\nclass NgOtpInputModule {\r\n}\r\n/** @nocollapse */ NgOtpInputModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: NgOtpInputModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\r\n/** @nocollapse */ NgOtpInputModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: NgOtpInputModule, declarations: [NgOtpInputComponent, KeysPipe], imports: [CommonModule,\r\n        FormsModule,\r\n        ReactiveFormsModule], exports: [NgOtpInputComponent] });\r\n/** @nocollapse */ NgOtpInputModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: NgOtpInputModule, providers: [KeysPipe], imports: [[\r\n            CommonModule,\r\n            FormsModule,\r\n            ReactiveFormsModule\r\n        ]] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: NgOtpInputModule, decorators: [{\r\n            type: NgModule,\r\n            args: [{\r\n                    imports: [\r\n                        CommonModule,\r\n                        FormsModule,\r\n                        ReactiveFormsModule\r\n                    ],\r\n                    declarations: [NgOtpInputComponent, KeysPipe],\r\n                    exports: [NgOtpInputComponent],\r\n                    providers: [KeysPipe]\r\n                }]\r\n        }] });\n\nclass Config {\r\n}\n\n/*\r\n * Public API Surface of ng-otp-input\r\n */\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { NgOtpInputComponent, Config as NgOtpInputConfig, NgOtpInputModule };\n"]}