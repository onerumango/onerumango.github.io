{"version":3,"mappings":"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","names":["ChangePasswordDTO","ChangePasswordRespDTO","routes","path","component","_change_password_component__WEBPACK_IMPORTED_MODULE_0__","ChangePasswordRoutingModule","_angular_router__WEBPACK_IMPORTED_MODULE_2__","imports","exports","_angular_core__WEBPACK_IMPORTED_MODULE_5__","ChangePasswordComponent","api","fb","router","apiService","_change_password_dto__WEBPACK_IMPORTED_MODULE_0__","loggedInUser","localStorage","getItem","otpEnableFlag","a","b","userForm","_angular_forms__WEBPACK_IMPORTED_MODULE_6__","userId","oldPassword","newPassword","passwordRegex","maxPass","minPass","confirmPassword","otp","fetchSecurityPolicyService","subscribe","security","resp","console","log","minPswdLength","maxPswdLength","buildForm","security1","ucase","pswdComplexUcase","lcase","pswdComplexLcase","num","pswdComplexNum","splc","pswdComplexSplc","errorMsg","group","changePassword","get","value","sweetalert2__WEBPACK_IMPORTED_MODULE_1___default","text","icon","encryptedAES","crypto_js__WEBPACK_IMPORTED_MODULE_2__","USERNAME","old","data","toString","uname","enableLoader","changePasswordService","var1","title","pswdReuseAft","submit","selectors","decls","vars","consts","template","ctx","ChangePasswordModule","_angular_common__WEBPACK_IMPORTED_MODULE_3__","_change_password_routing_module__WEBPACK_IMPORTED_MODULE_0__","_angular_forms__WEBPACK_IMPORTED_MODULE_4__","declarations","_change_password_component__WEBPACK_IMPORTED_MODULE_1__"],"sources":["webpack:///src/app/views/change-password/change-password-dto.ts","webpack:///src/app/views/change-password/change-password-routing.module.ts","webpack:///src/app/views/change-password/change-password.component.html","webpack:///src/app/views/change-password/change-password.component.ts","webpack:///src/app/views/change-password/change-password.module.ts"],"sourcesContent":["export class ChangePasswordDTO {\r\n    userId: string;\r\n    oldPassword: string;\r\n    newPassword: string;\r\n    confirmPassword: string;\r\n    otp: string;\r\n}\r\n\r\nexport class ChangePasswordRespDTO{\r\n    otpButtonStatus: boolean;\r\n    completedProcessStatus: boolean;\r\n    statusMessage: boolean;\r\n}","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { ChangePasswordComponent } from './change-password.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: ChangePasswordComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ChangePasswordRoutingModule { }\r\n","<div class=\"pageContentMain\" class=\"mt-1\">\r\n  <div class=\"pageTitleCol\">\r\n    <h2 class=\"pageTitle\">Password Management</h2>\r\n  </div>\r\n  <form action=\"\" class=\"formStyle\" [formGroup]=\"userForm\">\r\n\r\n    <div class=\"dbCardStyle fieldwidth\" style=\"width:400px;\">\r\n      <fieldset [disabled]=\"!submit\">\r\n        <div class=\"row gy-4\">\r\n         \r\n          <div class=\"col-12\">\r\n            <label class=\"formLbl\">Old Password<span class=\"colorRed\">*</span></label>\r\n       <div class=\"d-flex\">\r\n            <input id=\"oldPassword\" placeholder=\"Old Password\" required class=\"form-control\" value=\"\" #newPassword\r\n              name=\"oldPassword\" [type]=\"hide ? 'password' : 'text'\" formControlName=\"oldPassword\">\r\n            <span toggle=\"#pwdFld\" class=\"visibility\" (click)=\"hide = !hide\">\r\n              <img class=\"showPwd\" *ngIf=\"!hide\" src=\"assets/images/show-icon.svg\" alt=\"...\">\r\n              <img class=\"hidePwd\" *ngIf=\"hide\" src=\"assets/images/hide-icon.svg\" alt=\"...\">\r\n            </span>\r\n          </div>\r\n          </div>\r\n          <div class=\"col-12 \">\r\n            <label class=\"formLbl\">New Password<span class=\"colorRed\">*</span></label>\r\n            <div class=\"d-flex\">\r\n           \r\n              <input id=\"password\" placeholder=\"New Password\" required class=\"form-control\" value=\"\" #newPassword\r\n                name=\"password\" [type]=\"hide1 ? 'password' : 'text'\" formControlName=\"newPassword\">\r\n              <span toggle=\"#pwdFld\" class=\"visibility\" (click)=\"hide1 = !hide1\">\r\n                <img class=\"showPwd\" *ngIf=\"!hide1\" src=\"assets/images/show-icon.svg\" alt=\"...\">\r\n                <img class=\"hidePwd\" *ngIf=\"hide1\" src=\"assets/images/hide-icon.svg\" alt=\"...\">\r\n              </span>\r\n            </div>\r\n\r\n            <div class=\"invalid-feedback\"\r\n              *ngIf=\"userForm.get('newPassword').invalid &&\r\n              (userForm.get('newPassword').dirty ||\r\n                userForm.get('newPassword').touched)\">\r\n              <div *ngIf=\"userForm.get('newPassword').errors.pattern\">{{errorMsg}}</div>\r\n            </div>\r\n            <div *ngIf=\"userForm.get('newPassword').hasError('minlength') \" class=\"invalid-feedback\">\r\n              New Password must contain Minimum {{minPass}} digits.\r\n            </div>\r\n            <div *ngIf=\"userForm.get('newPassword').hasError('maxlength')\" class=\"invalid-feedback\">\r\n              New Password must contain Maximum {{maxPass}} digits.\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"col-12\">\r\n            <label class=\"formLbl\">Confirm Password<span class=\"colorRed\">*</span></label>\r\n            <div class=\"d-flex\">\r\n             \r\n              <input id=\"confirm password\" placeholder=\"Confirm Password\" required class=\"form-control\" value=\"\"\r\n                #confirmPassword name=\"confirmPassword\" [type]=\"hide2 ? 'password' : 'text'\"\r\n                formControlName=\"confirmPassword\">\r\n              <span toggle=\"#pwdFld\" class=\"visibility\" (click)=\"hide2 = !hide2\">\r\n                <img class=\"showPwd\" *ngIf=\"!hide2\" src=\"assets/images/show-icon.svg\" alt=\"...\">\r\n                <img class=\"hidePwd\" *ngIf=\"hide2\" src=\"assets/images/hide-icon.svg\" alt=\"...\">\r\n              </span>\r\n            </div>\r\n            <div class=\"invalid-feedback\"\r\n              *ngIf=\"userForm.get('confirmPassword').invalid &&\r\n              (userForm.get('confirmPassword').dirty ||\r\n                userForm.get('confirmPassword').touched)\">\r\n              <div *ngIf=\"userForm.get('confirmPassword').errors.pattern\">{{errorMsg}}</div>\r\n            </div>\r\n            <div *ngIf=\"userForm.get('confirmPassword').hasError('minlength') \" class=\"invalid-feedback\">\r\n              Confirm Password must contain Minimum {{minPass}} digits.\r\n            </div>\r\n            <div *ngIf=\"userForm.get('confirmPassword').hasError('maxlength')\" class=\"invalid-feedback\">\r\n              Confirm Password must contain Maximum {{maxPass}} digits.\r\n            </div>\r\n\r\n          </div>\r\n\r\n\r\n        </div>\r\n      </fieldset>\r\n      <div class=\"col-lg-12\">\r\n        <div class=\"row g-3 pt-3 mt-2 justify\">\r\n  \r\n          <div class=\"col-auto\">\r\n            <button href=\"javascript:void(0)\" (click)=\"onSubmit()\" [disabled]=\"!userForm.valid || !submit\"\r\n              class=\"btn smBtn minWdSmBtn btnPrimary\">Save</button>\r\n          </div>\r\n  \r\n          <div class=\"col-auto\">\r\n            <a href=\"javascript:void(0)\" class=\"btn smBtn minWdSmBtn btnSecondary\" [routerLink]=\"['/dashboard']\">Exit</a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n   \r\n\r\n\r\n  </form>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { SecurityDto } from '../auth/login/login.component';\r\nimport { ChangePasswordDTO, ChangePasswordRespDTO } from './change-password-dto';\r\nimport Swal from 'sweetalert2';\r\nimport { ApiService } from 'src/app/shared/services/api.service';\r\nimport { Router } from '@angular/router';\r\nimport * as CryptoJS from 'crypto-js';\r\nimport { SecurityPolicyService } from 'src/app/shared/services/security-policy.service';\r\n@Component({\r\n  selector: 'npr-change-password',\r\n  templateUrl: './change-password.component.html',\r\n  styleUrls: ['./change-password.component.scss']\r\n})\r\nexport class ChangePasswordComponent implements OnInit {\r\n\r\n  \r\n\r\n  otpEnableFlag: boolean;\r\n  changePassword = new ChangePasswordDTO();\r\n  changePasswordRespDTO: ChangePasswordRespDTO;\r\n  enableLoader = false;\r\n  passwordReset1: any;\r\n  minPass: any;\r\n  maxPass: any;\r\n  ucase: any;\r\n  lcase: any;\r\n  num: any;\r\n  splc: any;\r\n  errorMsg: string;\r\n  passwordRegex: string;\r\n   security: SecurityDto;\r\n  security1: any;\r\n  userObj = new ChangePasswordDTO();\r\n  loggedInUser:any;\r\n  var1: any;\r\n// added by vidya for issue id 776\r\n  hide1=true;\r\n  hide=true;\r\n  hide2=true;\r\n  userForm: FormGroup;\r\n  // userId: string;\r\n  // oldPassword: string;\r\n  // newPassword: string;\r\n  // confirmPassword: string;\r\n  // otp: string;\r\n  submit:boolean=true;\r\n  constructor(private api: ApiService,private fb: FormBuilder,private router: Router,private apiService: SecurityPolicyService,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.loggedInUser = localStorage.getItem('userFromLogin');\r\n    this.otpEnableFlag = false;\r\n    let a, b;\r\n    this.userForm = new FormGroup({\r\n      userId: new FormControl('', Validators.required),\r\n       oldPassword: new FormControl('', Validators.required),\r\n      newPassword: new FormControl('', [Validators.required,\r\n        Validators.compose([Validators.pattern(this.passwordRegex),\r\n        Validators.maxLength(this.maxPass),\r\n        Validators.minLength(this.minPass)])]),\r\n       confirmPassword: new FormControl('', [\r\n        Validators.required,\r\n        Validators.compose([\r\n          Validators.pattern(this.passwordRegex),\r\n          Validators.maxLength(this.maxPass),\r\n          Validators.minLength(this.minPass),\r\n        ]),\r\n      ]),\r\n      otp: new FormControl('', Validators.required),\r\n  \r\n  \r\n    })\r\n    this.apiService.fetchSecurityPolicyService().subscribe(resp => {\r\n      this.security = resp;\r\n      console.log(this.security);\r\n      this.minPass = this.security.minPswdLength;\r\n      this.maxPass = this.security.maxPswdLength;\r\n\r\n      this.buildForm(this.minPass, this.maxPass);\r\n      console.log(this.minPass, this.maxPass);\r\n      console.log(this.security);\r\n    });\r\n    this.buildForm(this.minPass ? this.minPass : a, this.maxPass ? this.maxPass : b);\r\n    \r\n  }\r\n  buildForm(a, b) {\r\n    // ---------- Password Policy Implementation (BEGIN) ----------\r\n    this.apiService.fetchSecurityPolicyService()\r\n      .subscribe(resp => {\r\n        this.security1 = resp;\r\n        this.ucase = this.security1.pswdComplexUcase;\r\n        this.lcase = this.security1.pswdComplexLcase;\r\n        this.num = this.security1.pswdComplexNum;\r\n        this.splc = this.security1.pswdComplexSplc;\r\n        this.errorMsg = '';\r\n        this.passwordRegex='';\r\n \r\n        console.log(\"Upper case\",this.ucase);\r\n        console.log(\"Lower case\",this.lcase);\r\n        console.log(\"num case\",this.num);\r\n        console.log(\"splc case\",this.splc);\r\n\r\n\r\n\r\n        if (this.security1.pswdComplexUcase==\"true\") {\r\n          this.passwordRegex = '(?=[^A-Z]*[A-Z])';\r\n          this.errorMsg = ' UpperCase';\r\n        }\r\n        if (this.security1.pswdComplexLcase==\"true\") {\r\n          this.passwordRegex = this.passwordRegex + '(?=[^a-z]*[a-z])';\r\n          if (this.errorMsg != '') {\r\n            this.errorMsg = this.errorMsg + ', LowerCase';\r\n          }\r\n          else {\r\n            this.errorMsg = this.errorMsg + ' LowerCase';\r\n          }\r\n        }\r\n        // if (this.security1.pswdComplexSplc==\"true\") {\r\n        //   this.passwordRegex = this.passwordRegex + '(?=[^!-@]*[!-@])';\r\n        //   if (this.errorMsg != '') {\r\n        //     this.errorMsg = this.errorMsg + ', Special Character';\r\n        //   }\r\n        //   else {\r\n        //     this.errorMsg = this.errorMsg + ' Special Character';\r\n        //   }\r\n        // }\r\n        if(this.splc==\"true\") {\r\n          this.passwordRegex = this.passwordRegex  + '(?=.*[!@#$%^&*])';\r\n          if(this.errorMsg != '') \r\n            this.errorMsg = this.errorMsg + \", Special Character\";  \r\n          else\r\n            this.errorMsg = this.errorMsg + \" Special Character\";\r\n        }\r\n        \r\n        if (this.security1.pswdComplexNum==\"true\") {\r\n          this.passwordRegex = this.passwordRegex + '(?=[^0-9]*[0-9])';\r\n          if (this.errorMsg != '') {\r\n            this.errorMsg = this.errorMsg + ', Number';\r\n          }\r\n          else {\r\n            this.errorMsg = this.errorMsg + ' Number';\r\n          }\r\n        }\r\n      \r\n\r\n        this.passwordRegex = this.passwordRegex + '.{' + this.minPass + ',' + this.maxPass + '}';\r\n        // this.passwordRegex = \"(?=[^A-Z]*[A-Z])(?=[^a-z]*[a-z])(?=[^!-@]*[!-@]).{10,15}\";\r\n        this.errorMsg = 'Password must contain atleast one ' + this.errorMsg + '.';\r\n        console.log(this.passwordRegex);\r\n        // ---------- Password Policy Implementation (END) ----------\r\n\r\n        this.userForm = this.fb.group({\r\n     \r\n          // password: new FormControl('', [Validators.required, Validators.pattern(this.passwordPattern)]),\r\n          // newPassword: new FormControl('', [Validators.required,\r\n          // Validators.compose([Validators.pattern(this.passwordRegex),\r\n          // Validators.maxLength(this.maxPass),\r\n          // Validators.minLength(this.minPass)])]),\r\n          \r\n          newPassword:new FormControl('', [Validators.required, Validators.compose([Validators.pattern(this.passwordRegex),Validators.maxLength(this.maxPass),\r\n            Validators.minLength(this.minPass)])]),\r\n          \r\n          oldPassword: new FormControl('', Validators.required),\r\n          confirmPassword: new FormControl(\"\", [\r\n            Validators.required,\r\n            Validators.compose([\r\n              Validators.pattern(this.passwordRegex),\r\n              Validators.maxLength(this.maxPass),\r\n              Validators.minLength(this.minPass),\r\n            ]),\r\n          ]),\r\n        });\r\n       \r\n      });\r\n\r\n    console.log(this.minPass, this.maxPass);\r\n    console.log('form', this.userForm);\r\n  }\r\n  onSubmit() {\r\n    this.changePassword.userId = this.loggedInUser;\r\n    this.changePassword.newPassword = this.userForm.get('newPassword').value;\r\n\r\n    this.changePassword.oldPassword = this.userForm.get('oldPassword').value;\r\n    this.changePassword.confirmPassword=this.userForm.get('confirmPassword').value;\r\n    // this.changePassword.otp=this.userForm.get('otp').value;\r\n\r\n\r\n    if (this.changePassword.newPassword != this.changePassword.confirmPassword) {\r\n      Swal.fire({\r\n     \r\n        text: 'New Password and Confirm Password values are not same ',\r\n        icon:'error'\r\n      });\r\n    }\r\n     else if (!this.changePassword.newPassword  || !this.changePassword.confirmPassword || !this.changePassword.oldPassword ) {\r\n       console.log(\"inside else if\");\r\n      \r\n      Swal.fire({\r\n      \r\n          text: 'Please enter all the fields ',\r\n          icon:'info'\r\n        });\r\n      }\r\n    else {\r\n      // if (this.changePassword.newPassword === null || this.changePassword.confirmPassword === null || this.changePassword.oldPassword === null) {\r\n      //   Swal.fire({\r\n      //     title: 'Oops...',\r\n      //     text: 'Please enter all the fields !!!',\r\n      //   });\r\n      // }\r\n      this.changePassword.userId = this.loggedInUser;\r\n      var encryptedAES = CryptoJS.AES.encrypt(this.changePassword.newPassword, \"@12#90!^*NPR*g&*()$34#$\");\r\n      var USERNAME = CryptoJS.AES.encrypt(this.changePassword.userId, \"@12#90!^*NPR*g&*()$34#$\");\r\n      var old= CryptoJS.AES.encrypt(this.changePassword.oldPassword, \"@12#90!^*NPR*g&*()$34#$\");\r\n      var data = encryptedAES.toString();\r\n      var uname = USERNAME.toString();\r\n      var oldPassword=encryptedAES.toString();\r\n      // console.log(data);\r\n      this.changePassword.newPassword = data;\r\n      this.changePassword.userId = uname;\r\n      // this.changePassword.oldPassword=oldPassword;\r\n      console.log(this.changePassword);\r\n      this.enableLoader = true;\r\n      this.api.changePasswordService(this.changePassword).subscribe(resp => {\r\n        this.var1 = resp;\r\n        // this.changePasswordRespDTO = resp;\r\n      console.log(resp[0]);\r\n        // //console.log('changePasswordRespDTO :' );\r\n        // //console.log( this.changePasswordRespDTO);\r\n        // this.enableLoader = false;\r\nif(resp==\"You cannot use your previous password. Please choose another password\")\r\n{\r\n  Swal.fire(\r\n    {\r\n      title:\"You can not use your last \"+ this.security.pswdReuseAft +\" passwords. Please choose another password.\",\r\n      icon:'error'\r\n    }\r\n  )\r\n}\r\nif(resp==\"Incorrect old Password\")\r\n{\r\n  Swal.fire(\r\n    {\r\n      title:\"Incorrect old password.\",\r\n      icon:\"error\"\r\n    }\r\n  )\r\n}\r\nif(resp==\"successfull\")\r\n{\r\n  Swal.fire(\r\n    {\r\n      title:\"Password Changed Successfully.\",\r\n      icon:'success'\r\n    }\r\n  )\r\n  this.submit = false;\r\n}\r\n\r\n\r\n//         // if(resp === true){\r\n//         //   this.otpEnableFlag = true;\r\n//         // }\r\n//         if(resp === true){\r\n//           Swal.fire(\r\n           \r\n//             'You Changed The Password ',\r\n            \r\n//           );\r\n//           this.router.navigate([\"/dashboard\"]);\r\n//         }\r\n       \r\n\r\n      });\r\n    }\r\n  }\r\n  // buildForm(a,b) {\r\n  //   // ---------- Password Policy Implementation (BEGIN) ----------\r\n  //   this.apiService.fetchSecurityPolicyService()\r\n  //     .subscribe(resp => {\r\n  //       resp = resp;\r\n  //       resp=this.security1;\r\n  //       this.passwordRegex='';\r\n  //       console.log(resp);\r\n  //       if (this.security1.pswdComplexUcase==\"true\") {\r\n  //         console.log(\"iniside if 1\");\r\n  //         console.log(\"resp pswdComplexUcase\",this.security1.pswdComplexUcase)\r\n  //         this.passwordRegex = '(?=[^A-Z]*[A-Z])';\r\n  //         this.errorMsg = ' UpperCase';\r\n  //       }\r\n  //       if (this.security1.pswdComplexLcase==\"true\") {\r\n  //         this.passwordRegex = this.passwordRegex + '(?=[^a-z]*[a-z])';\r\n  //         if (this.errorMsg != '') {\r\n  //           this.errorMsg = this.errorMsg + ', LowerCase';\r\n  //         }\r\n  //         else {\r\n  //           this.errorMsg = this.errorMsg + ' LowerCase';\r\n  //         }\r\n  //       }\r\n  //       if (this.security1.pswdComplexNum==\"true\") {\r\n  //         this.passwordRegex = this.passwordRegex + '(?=[^0-9]*[0-9])';\r\n  //         if (this.errorMsg != '') {\r\n  //           this.errorMsg = this.errorMsg + ', Number';\r\n  //         }\r\n  //         else {\r\n  //           this.errorMsg = this.errorMsg + ' Number';\r\n  //         }\r\n  //       }\r\n  //       if (this.security1.pswdComplexSplc==\"true\") {\r\n  //         this.passwordRegex = this.passwordRegex + '(?=[^!-@]*[!-@])';\r\n  //         if (this.errorMsg != '') {\r\n  //           this.errorMsg = this.errorMsg + ', Special Character';\r\n  //         }\r\n  //         else {\r\n  //           this.errorMsg = this.errorMsg + ' Special Character';\r\n  //         }\r\n  //       }\r\n\r\n  //       this.passwordRegex = this.passwordRegex + '.{' + this.minPass + ',' + this.maxPass + '}';\r\n  //       // this.passwordRegex = \"(?=[^A-Z]*[A-Z])(?=[^a-z]*[a-z])(?=[^!-@]*[!-@]).{10,15}\";\r\n  //       this.errorMsg = 'Password must contain atleast one ' + this.errorMsg + '.';\r\n  //       console.log(this.passwordRegex);\r\n        \r\n          \r\n        \r\n      \r\n      \r\n\r\n    \r\n   \r\n  //     });\r\n  // }\r\n}\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { ChangePasswordRoutingModule } from './change-password-routing.module';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { ChangePasswordComponent } from './change-password.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ChangePasswordComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    ChangePasswordRoutingModule,\r\n    ReactiveFormsModule\r\n  ]\r\n})\r\nexport class ChangePasswordModule { }\r\n"]}