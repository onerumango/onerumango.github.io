{"version":3,"mappings":"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","names":["API_URL","src_app_shared_config_app_constant__WEBPACK_IMPORTED_MODULE_0__","AddSystemService","http","rxjs__WEBPACK_IMPORTED_MODULE_1__","rxjs__WEBPACK_IMPORTED_MODULE_2__","index","referenceId","paramSource","asObservable","Index","next","Reference","addSsytem","user","post","get","operation","currentUser","put","id","params","subject","userIdLoggedIn","messageTranslationDto","transId","transIddel","_angular_common_http__WEBPACK_IMPORTED_MODULE_3__","append","console","log","systemId","files","formData","FormData","key","url","driverClassName","username","password","encodePwd","btoa","tablename","code","addSystem","api","value","_angular_core__WEBPACK_IMPORTED_MODULE_4__","factory","providedIn","_angular_core__WEBPACK_IMPORTED_MODULE_6__","AddSystemSummaryComponent","apiService","roleService","router","cdr","rxjs__WEBPACK_IMPORTED_MODULE_7__","src_app_shared_models_fmosNewRolePermissions__WEBPACK_IMPORTED_MODULE_1__","dtOptions","pagingType","pageLength","serverSide","columnDefs","type","targets","order","lengthMenu","ajax","dataTablesParameters","callback","minNumber","start","maxNumber","length","pageNo","Math","floor","pageSize","search","subscribe","resp","result","data","approvedStatus","statusArr","find","i","startsWith","recordStatus","totalPages","totalNoOfPages","totalRecords","respArray","isLoading","markForCheck","recordsTotal","recordsFiltered","localStorage","getItem","fetchScreenPermissions","screenLabelList","message","roleCodes","fecthingAddSystem","dataresp","dtTrigger","unsubscribe","sweetalert2__WEBPACK_IMPORTED_MODULE_2___default","text","showCancelButton","confirmButtonColor","cancelButtonColor","cancelButtonText","confirmButtonText","icon","iconColor","then","isConfirmed","editaddsystem","response","respData","window","location","reload","auditLog","deleteAddSystem","creatorId","approverId","approvedEver","removeItem","setIndex","setItem","navigateByUrl","selectors","decls","vars","consts","template","routes","path","component","_add_system_add_system_component__WEBPACK_IMPORTED_MODULE_2__","canDeactivate","src_app_shared_guards_can_deactivate_guard__WEBPACK_IMPORTED_MODULE_0__","_add_system_summary_add_system_summary_component__WEBPACK_IMPORTED_MODULE_1__","AddSystemRoutingModule","_angular_router__WEBPACK_IMPORTED_MODULE_4__","imports","exports","_angular_core__WEBPACK_IMPORTED_MODULE_5__","$event","mkey_r81","AddSystemComponent","fb","toastService","spinner","datePipe","src_app_shared_models_fmosNewRolePermissions__WEBPACK_IMPORTED_MODULE_0__","rxjs__WEBPACK_IMPORTED_MODULE_6__","idValue","tempArrayList","fetchingHeadertag","messsageTypeArray","queArray","encryptionArray","selections","serviceTypeArray","protocolArray","buildForm","tcpForm","group","sysService","array","createSysService","tcpForm1","createSysService1","messageConfigurationForm1","sysChannel","createSysChannel1","messageConfigurationForm","createSysChannel","getIndex","getRespBasedOnId","loading","setTimeout","item","basicInfoForm","createdTime","systemCode","_angular_forms__WEBPACK_IMPORTED_MODULE_7__","systemName","serviceType","messsageType","medianIp","sourceUri","medianUri","medianPort","sourceIp","sourcePort","isExit","touched","formTouched1","formTouched2","formTouched3","formTouched4","formTouched5","saved","sweetalert2__WEBPACK_IMPORTED_MODULE_1___default","Promise","resolve","reject","arg0","fileUploadClick","editFlag","arrayMessageConfig","filter","messageType","fileUploadClickAll","onProtocalSlection","messageChannel","fetchingIso","label2","fetchingMT","onHeaderSelection","headerTag","fetchingMX","messageFormat","fetchingXMl","formArrMessageConfig","removeAt","forEach","x","push","formArr","_a","_b","arrayMessageConfig1","onProtocalSlection1","formArrMessageConfig1","array1","formArr1","_c","_d","hide","channelId","dbConnectString","dbPassword","dbServiceName","dbUsername","queueChannel","queueConnFactory","queueManager","queueName","queueType","dataType","encryption","headerValue","messageBasis","messageKey","serviceId","systemChannelId","tab1","tab2","tab21","tab22","validateCode","isSysCodeAlreadyExist","exists","sysCodeError","undefined","title","all","ipAddressValidating","basicConfiguration","messageConfiguration","incomingMessageConfiguration","xml","mdbXml","incomingMdbXml","dbConnection","mdb","tableFlag","fetchDatabaseTable","tab11","tab12","headerValues","pingDataSource","table","filteredHomes","split","setValue","table2","event","tableDropDownClick","coulmnNameBasedonTableName","tabelData","tableDropDownClick1","tabelData1","payload","validatePort","error","tableFlag1","fetchingIso1","label3","fetchingXMl1","fetchDatabaseTable1","tableFlag2","obj_test","navigate","dataType1","enteredRecord","selectedHeaderTags","Set","map","d","headerArray","headerTagData","has","val","messageKeys","xmlRespDataFiltered","xmlRespData","xmlRespDataFiltered1","xmlRespData1","fieldNo","Number","fieldName","addSysResp","previous","submittingAddSystem","fetchingIsoForTcp","isoResp","isoRespData","isoRespDataFiltered","mKey","Object","formattedmKey","messageBasisIso","messageKeyIso","typeDataIso","headerValueIso","valFieldMapper","reduce","acc","selectedMessageKeys","isoRespData1","isoRespDataFiltered1","messageBasisIso1","messageKeyIso1","typeDataIso1","headerValueIso1","gettinXMLmsgIncoming","xmlResp","selectedMessageKeys1","selectedMessageKeySet","fetchingHeaderTag","document","getElementById","click","selectedFiles","target","sizeOfFile","size","currentFileUpload","fileName","name","fileUploadWrapper","nativeElement","setAttribute","gettingHederofXMl","uploadXmlResp","nodeTagList","selectedFiles1","sizeOfFile1","currentFileUpload1","fileName1","fileUploadWrapper1","uploadXmlResp1","keys","nodeValueMap","fileNameOut","err","some","mdmtSystemService","slice","submitFlagAll","deleteRecord","dbConnectionOption","splice","selectedMessageKeysSet","deleteRecord1","dateValue","transform","Date","getHours","getMinutes","jhnbn","opt","evt","inp","String","fromCharCode","keyCode","test","preventDefault","regex","clearValidators","updateValueAndValidity","externalPort","setValidators","fieldValues","viewQuery","_angular_common__WEBPACK_IMPORTED_MODULE_10__","AddSystemModule","_angular_common__WEBPACK_IMPORTED_MODULE_6__","angular_datatables__WEBPACK_IMPORTED_MODULE_0__","_add_system_routing_module__WEBPACK_IMPORTED_MODULE_1__","src_app_shared_components_components_module__WEBPACK_IMPORTED_MODULE_3__","ngx_spinner__WEBPACK_IMPORTED_MODULE_8__","_ng_select_ng_select__WEBPACK_IMPORTED_MODULE_9__","declarations","_add_system_component__WEBPACK_IMPORTED_MODULE_2__","_add_system_summary_add_system_summary_component__WEBPACK_IMPORTED_MODULE_4__"],"sources":["webpack:///src/app/shared/services/add-system.service.ts","webpack:///src/app/views/addSystem/add-system-summary/add-system-summary.component.html","webpack:///src/app/views/addSystem/add-system-summary/add-system-summary.component.ts","webpack:///src/app/views/addSystem/add-system/add-system-routing.module.ts","webpack:///src/app/views/addSystem/add-system/add-system.component.html","webpack:///src/app/views/addSystem/add-system/add-system.component.ts","webpack:///src/app/views/addSystem/add-system/add-system.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { AppConstants } from 'src/app/shared/config/app.constant';\r\nimport { Subject, Observable, BehaviorSubject } from 'rxjs';\r\n\r\n\r\n\r\nexport const API_URL = AppConstants.baseURL;\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AddSystemService {\r\n\r\n  api:any='http://192.168.0.14:8082'\r\n  constructor(private http: HttpClient) { }\r\n  private subject = new Subject<any>();\r\n  // Post\r\n  private Index = new BehaviorSubject<any>({\r\n    index: '',\r\n  })\r\n  setIndex(index: any) {\r\n    this.Index.next(index);\r\n  }\r\n\r\n  getIndex() {\r\n    return this.Index.asObservable();\r\n  }\r\n  private Reference = new BehaviorSubject<any>({\r\n    referenceId: '',\r\n  })\r\n  setReference(referenceId: any) {\r\n    this.Reference.next(referenceId);\r\n  }\r\n\r\n  getReference() {\r\n    return this.Reference.asObservable();\r\n  }\r\n  submittingAddSystem(addSsytem, user) {\r\n    return this.http.post<any>(`${API_URL}/newExtApi/create/${user}`, addSsytem);\r\n  }\r\n  //geting external System\r\n  fecthingAddSystem() {\r\n    return this.http.get<any>(`${API_URL}/newExtApi/getAllExternalSys/?pageNo=${0}&pageSize=${1000}`);\r\n  }\r\n  //update\r\n  editaddsystem(operation, currentUser, addSsytem) {\r\n    return this.http.put<any>(`${API_URL}/newExtApi/${operation}/${currentUser}`, addSsytem)\r\n  }\r\n  //fetching addsystem based on id\r\n\r\n  fetchingAddSysBasedonId(id) {\r\n    return this.http.get<any>(`${API_URL}/newExtApi/getExternalSysDetails/${id}`)\r\n  }\r\n  // delete\r\n  deleteingAddSystem() {\r\n    return this.http.delete<any>(`${API_URL}//`);\r\n  }\r\n  // sendingAddSystemDataToEditScreen\r\n  sendingAddSystemDataToEditScreen(params: any) {\r\n\r\n    this.subject.next(params);\r\n  }\r\n\r\n  editruleTranslation(operation, userIdLoggedIn, messageTranslationDto) {\r\n    return this.http.put<any>(`${API_URL}/msgApi/${operation}/${userIdLoggedIn}`, messageTranslationDto)\r\n  }\r\n\r\n  deleteRuleTranslation(userIdLoggedIn, transId) {\r\n    let transIddel = new HttpParams();\r\n    transId = transIddel.append('transId', transId);\r\n    console.log(\"tra\", transId);\r\n\r\n    return this.http.delete<any>(`${API_URL}/msgApi/deleteRecord/${userIdLoggedIn}`, {\r\n      params: transId\r\n    });\r\n  }\r\n\r\n  deleteAddSystem(userIdLoggedIn, systemId) {\r\n    return this.http.delete<any>(`${API_URL}/newExtApi/delete/${userIdLoggedIn}?systemId=${systemId}`);\r\n  }\r\n\r\n  getEditOfAddSystem(): Observable<any> {\r\n    return this.subject.asObservable();\r\n  }\r\n  private paramSource = new BehaviorSubject({});\r\n  getNavParam = this.paramSource.asObservable();\r\n\r\n  sendNavParam(params: object) {\r\n    this.paramSource.next(params)\r\n  }\r\n  // Audit log methods--->add System starts\r\n  onAuthofAddSystem(addSsytem, userIdLoggedIn) {\r\n    return this.http.put<any>(`${API_URL}/newExtApi/authorizetherecord/${userIdLoggedIn}`, addSsytem);\r\n  }\r\n  onCloseOfAddSystem(addSsytem, userIdLoggedIn) {\r\n    return this.http.put<any>(`${API_URL}/newExtApi/toClosingTheRecord/${userIdLoggedIn}`, addSsytem);\r\n  }\r\n  onopenOfAddSystem(addSsytem, userIdLoggedIn) {\r\n    return this.http.put<any>(`${API_URL}/newExtApi/closeRecord/${userIdLoggedIn}`, addSsytem);\r\n  }\r\n  onDeleteAddSystem(addSsytem, userIdLoggedIn) {\r\n    return this.http.put<any>(`${API_URL}/newExtApi/delete/${userIdLoggedIn}`, addSsytem);\r\n  }\r\n  // Audit log methods--->add System ends\r\n  // http and xml incoming\r\n  //add system screen uplaod xml\r\n  gettingHederofXMl(files: File) {\r\n    var formData = new FormData();\r\n    let key = 'header';\r\n    formData.append('file', files);\r\n    formData.append('key', key);\r\n\r\n    console.log(formData);\r\n    return this.http.post<any>(`${API_URL}/convertMsg/convertXmlToNodeTagList`, formData);\r\n  }\r\n  gettingBodyOfXml(files: File) {\r\n    var formData = new FormData();\r\n    let key = 'body';\r\n    formData.append('file', files);\r\n    formData.append('key', key);\r\n\r\n    console.log(formData);\r\n    return this.http.post<any>(`${API_URL}/convertMsg/convertXmlToNodeTagList`, formData);\r\n  }\r\n  // For rule transaltion upload xml\r\n  selectFileFORHTTPXMLIncoming(files: File) {\r\n    var formData = new FormData();\r\n\r\n    formData.append('file', files);\r\n    return this.http.post<any>(`${API_URL}/file/getHeaders`, formData);\r\n  }\r\n  fetchingXMLandHttp() {\r\n    return this.http.get<any>(`${API_URL}/msgApi/getXmlMsgField`);\r\n  }\r\n  fetchingIsoForTcp() {\r\n    return this.http.get<any>(`${API_URL}/msgApi/getIsoMsgField`);\r\n  }\r\n  gettinXMLmsgIncoming() {\r\n    return this.http.get<any>(`${API_URL}/msgApi/getXmlMsgField`);\r\n  }\r\n  // db cnnection-->credentials api\r\n  pingDataSource(url, driverClassName, username, password) {\r\n    let encodePwd = btoa(password);\r\n    return this.http.get<[]>(`${API_URL}/db/ping/${url}/${driverClassName}/${username}/${encodePwd}`)\r\n  }\r\n  // db connection -->column name\r\n  coulmnNameBasedonTableName(url, driverClassName, username, password, tablename) {\r\n    let encodePwd = btoa(password);\r\n    return this.http.get<any>(`${API_URL}/db/ping/${url}/${driverClassName}/${username}/${encodePwd}/${tablename}`)\r\n  }\r\n  //fetching header tag\r\n  fetchingHeaderTag() {\r\n    return this.http.get<any>(`${API_URL}/newExtApi/getAllHeadTag`);\r\n  }\r\n  validateCode(code: any) {\r\n    return this.http.get<any>(`${API_URL}/newExtApi/addSystem/validateCode/${code}`);\r\n  }\r\n  validatePort(addSystem) {\r\n    return this.http.post<any>(`${API_URL}/newExtApi/validate/addSystem`,addSystem);\r\n  }\r\n  \r\n  conversionApi(){\r\n    return this.http.get<any>(`${this.api}/MessageConverter/MT-MX`)\r\n  }\r\n  getMxApi(){\r\n    return this.http.get<any>(`${this.api}/MessageConverter/MXBodyInfo`)\r\n  }\r\n  getMtApi(){\r\n    return this.http.get<any>(`${this.api}/MessageConverter/MTBodyInfo`)\r\n  }\r\n  getIncomingOutgoingSummary(value){\r\n    // http://localhost:8001/fetchSummaryData?reqType=outgoing\r\n    return this.http.get<any>(`${this.api}/MessageConverter/fetchSummaryData?reqType=${value}`)\r\n  }\r\n  getRequestRespBody(value,referenceId){\r\n    return this.http.get<any>(`${this.api}/MessageConverter/fetchReqRes?reqType=${value}&referenceId=${referenceId}`);\r\n  }\r\n  fetchTableName(addSystem) {\r\n    return this.http.post<any>(`${API_URL}/newExtApi/validate/addSystem`,addSystem);\r\n  }\r\n}\r\n","\r\n<div class=\"pageContentMain\">\r\n    <div class=\"pageTitleCol\">\r\n      <h2 class=\"pageTitle\">Add System</h2>\r\n    </div>\r\n    <div class=\"dbCardStyle\">\r\n      <div class=\"row g-3 pb-3 justify-content-end\">\r\n        <div class=\"col-auto\" *ngIf=\"roleCodes.new\">\r\n          <a (click)=\"new()\" class=\"btn smBtn minWdSmBtn btnPrimary\">{{roleCodes.new.labelDescription}}</a>\r\n        </div>\r\n        <div class=\"col-auto\">\r\n          <a [routerLink]=\"['/dashboard']\" class=\"btn smBtn minWdSmBtn btnSecondary\">Exit</a>\r\n        </div>\r\n      </div>\r\n      <div class=\"table-responsive\" >\r\n      <table datatable  id=\"dbTable1\" [dtOptions]=\"dtOptions\" class=\"dataTable table tableStyleSelect tableStyle  nowrap vAlignMdl \" style=\"width:100%\">\r\n   \r\n        <thead>\r\n          <tr>\r\n            \r\n           <th> System Code</th>\r\n            <th>Name</th>\r\n            <th>Type</th>\r\n            <th>Auth Status</th>\r\n            <th>Record Status</th>\r\n            <th>Date</th>\r\n            <th>Action</th>\r\n  \r\n      \r\n          </tr>\r\n        </thead>\r\n        <tbody *ngIf=\"respArray?.length != 0\">\r\n          <tr *ngFor=\"let data of respArray \">\r\n\r\n            <td><a href=\"javascript:void(0)\" (click)=\"getResp(data)\" class=\"primaryColor\">{{data.systemCode}}</a></td>\r\n            <td>{{data.systemName}}</td>\r\n            <td>{{data.serviceType}}</td>\r\n\r\n            <td>{{data.approvedStatus}}</td>\r\n            <td>{{data.recordStatus}}</td>\r\n            <td>{{data.createdTime | date:'medium' }}</td>\r\n            <td>\r\n              <button  class=\"btn\" style=\"color: red\" title=\"Authorize\"  [disabled]=\"!(data.approvedStatus== 'U' || data.approvedStatus== 'Unauthorized')\" (click)=\"auth(data)\">\r\n                  \r\n                <img class=\"summaryIcon\" src=\"assets/images/authorize.svg\" alt=\"...\">\r\n              </button>\r\n              <button class=\"btn\" style=\"color: red\" title=\"Close\" *ngIf=\"(data.recordStatus== 'O' || data.recordStatus== 'Open' || data.recordStatus== 'OPEN') && (data.approvedEver== 'Y' || data.approvedEver== 'YES')\" (click)=\"close(data)\">\r\n                \r\n                <img class=\"summaryIcon\" src=\"assets/images/CROSS1.svg\"   alt=\"...\">\r\n                </button> \r\n               <button class=\"btn\" style=\"color: red\" title=\"Reopen\" *ngIf=\"data.recordStatus== 'C' || data.recordStatus== 'Close'\" (click)=\"open(data)\">\r\n                \r\n                <img class=\"summaryIcon\" src=\"assets/images/open.svg\"  alt=\"...\">\r\n                </button>\r\n                <button class=\"btn\" style=\"color: red\" title=\"Delete\" *ngIf=\"data.approvedEver== 'N' || data.approvedEver== 'NO'\" (click)=\"delete(data)\">\r\n                   \r\n                  <img class=\"summaryIcon\" src=\"assets/images/delete.svg\" alt=\"...\">\r\n                </button>\r\n           \r\n          </td>\r\n\r\n        </tr>\r\n      </tbody>\r\n      <tbody *ngIf=\"respArray?.length == 0\">\r\n        <tr>\r\n         <!-- <td colspan=\"3\" class=\"no-data-available\">No data!</td> -->\r\n        </tr>\r\n      </tbody>  \r\n    </table>\r\n    <ng-container *ngIf=\"isLoading\">\r\n      <div class=\"loading-page-center\">\r\n        <span class=\"indicator-progress\">Please wait...\r\n          <span class=\"spinner-border spinner-border-sm align-middle ms-2\"></span></span>\r\n      </div>\r\n    </ng-container>\r\n  </div>\r\n  </div>\r\n</div>\r\n\r\n","import { HttpClient } from \"@angular/common/http\";\r\nimport { ChangeDetectorRef, Component, OnInit } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport { Subject } from \"rxjs\";\r\nimport { AppConstants } from \"src/app/shared/config/app.constant\";\r\nimport { permissionsLabels } from \"src/app/shared/models/fmosNewRolePermissions\";\r\nimport { AddSystemService } from \"src/app/shared/services/add-system.service\";\r\nimport { ApiService } from \"src/app/shared/services/api.service\";\r\nimport { RoleService } from \"src/app/shared/services/role.service\";\r\nimport Swal from \"sweetalert2\";\r\n\r\n@Component({\r\n  selector: \"npr-add-system-summary\",\r\n  templateUrl: \"./add-system-summary.component.html\",\r\n  styleUrls: [\"./add-system-summary.component.scss\"],\r\n})\r\nexport class AddSystemSummaryComponent implements OnInit {\r\n  respArray: any[] = [];\r\n  dtOptions: DataTables.Settings = {};\r\n  dtTrigger: Subject<any> = new Subject<any>();\r\n  isLoading: boolean = false;\r\n  roleCodes = new permissionsLabels();\r\n  basicInfoForm: any;\r\n  messageConfigurationForm: any;\r\n  tcpForm: any;\r\n  messageConfigurationForm1: any;\r\n  tcpForm1: any;\r\n  addSystem: any;\r\n  currentUser: any;\r\n  totalPages: any;\r\n  totalRecords: any;\r\n  respData: any;\r\n  API_URL = AppConstants.baseURL;\r\n  statusArr: String[] = [\"Authorized\", \"Unauthorized\", \"Open\", \"Close\"];\r\n\r\n  constructor(\r\n    private apiService: AddSystemService,\r\n    private roleService: RoleService,\r\n    private router: Router,\r\n    private cdr: ChangeDetectorRef,\r\n    private http: HttpClient\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.dtOptions = {\r\n      pagingType: \"full_numbers\",\r\n      pageLength: 5,\r\n      serverSide: true,\r\n      // processing: true,\r\n      columnDefs: [{ type: \"date\", targets: [5] }],\r\n      order: [[5, \"desc\"]],\r\n      // lengthMenu: [[5, 10, 20, -1], [5, 10, 20, 30]],\r\n      lengthMenu: [\r\n        [5, 10, 20, 30, -1],\r\n        [5, 10, 20, 30, \"ALL\"],\r\n      ],\r\n      ajax: (dataTablesParameters: any, callback) => {\r\n        dataTablesParameters.minNumber = dataTablesParameters.start + 1;\r\n        dataTablesParameters.maxNumber =\r\n          dataTablesParameters.start + dataTablesParameters.length;\r\n        console.log(\r\n          dataTablesParameters.minNumber,\r\n          dataTablesParameters.maxNumber\r\n        );\r\n        const pageNo = Math.floor(\r\n          dataTablesParameters.minNumber / dataTablesParameters.length\r\n        );\r\n        const pageSize = dataTablesParameters.length;\r\n        const search = dataTablesParameters.search.value;\r\n        this.http\r\n          .get<any>(\r\n            `${this.API_URL}` +\r\n              `/newExtApi/getAllExternalSys?pageNo=${pageNo}&pageSize=${pageSize}&search=${search}`\r\n          )\r\n          .subscribe((resp) => {\r\n            console.log(resp);\r\n            for (let data of resp.result) {\r\n              data.approvedStatus = this.statusArr.find((i) =>\r\n                i.startsWith(data.approvedStatus)\r\n              );\r\n\r\n              data.recordStatus = this.statusArr.find((i) =>\r\n                i.startsWith(data.recordStatus)\r\n              );\r\n            }\r\n\r\n            this.totalPages = resp.totalNoOfPages;\r\n            this.totalRecords = resp.totalRecords;\r\n            this.respArray = resp.result;\r\n            this.isLoading = false;\r\n            this.cdr.markForCheck();\r\n\r\n            callback({\r\n              recordsTotal: resp.totalRecords,\r\n              recordsFiltered: resp.totalRecords,\r\n              data: [],\r\n            });\r\n          });\r\n      },\r\n    };\r\n    this.currentUser = localStorage.getItem(\"userFromLogin\");\r\n    // this.getDataForMonitor();\r\n    this.roleService.fetchScreenPermissions(\"Add System\");\r\n    this.roleService.screenLabelList.subscribe(\r\n      (message) => (this.roleCodes = message)\r\n    );\r\n    console.log(this.roleCodes);\r\n  }\r\n  getDataForMonitor() {\r\n    this.isLoading = true;\r\n    this.apiService.fecthingAddSystem().subscribe((dataresp) => {\r\n      for (let data of dataresp.result) {\r\n        data.approvedStatus = this.statusArr.find((i) =>\r\n          i.startsWith(data.approvedStatus)\r\n        );\r\n\r\n        data.recordStatus = this.statusArr.find((i) =>\r\n          i.startsWith(data.recordStatus)\r\n        );\r\n      }\r\n      // this.respArray = dataresp.result;\r\n      this.isLoading = false;\r\n      this.cdr.markForCheck();\r\n\r\n      this.dtTrigger.next();\r\n    });\r\n  }\r\n  ngOnDestroy(): void {\r\n    this.dtTrigger.unsubscribe();\r\n  }\r\n  close(data) {\r\n    Swal.fire({\r\n      //text: 'Unable to process' + 'Error ' + this.responseforfileupload.errorMessage + 'Do you want to Proceed??',\r\n      text: \"You are trying to Close record. \" + \" Do you want to proceed?\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3e54b8\",\r\n      cancelButtonColor: \"#d33\",\r\n      // confirmButtonText: 'PROCEED.'\r\n      cancelButtonText: \"NO\",\r\n      confirmButtonText: \"YES\",\r\n      icon: \"info\",\r\n      iconColor: \"#d33\",\r\n    }).then((result) => {\r\n      if (result.isConfirmed === true) {\r\n        this.apiService\r\n          .editaddsystem(\"close\", this.currentUser, data)\r\n          .subscribe((response) => {\r\n            if (response) {\r\n              this.respData = response;\r\n              Swal.fire({ text: \"Record is Closed\", icon: \"success\" }).then(\r\n                () => window.location.reload()\r\n              );\r\n            }\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n  open(data) {\r\n    Swal.fire({\r\n      //text: 'Unable to process' + 'Error ' + this.responseforfileupload.errorMessage + 'Do you want to Proceed??',\r\n      text: \"You are trying to Reopen record. \" + \" Do you want to proceed?\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3e54b8\",\r\n      cancelButtonColor: \"#d33\",\r\n      // confirmButtonText: 'PROCEED.'\r\n      cancelButtonText: \"NO\",\r\n      confirmButtonText: \"YES\",\r\n      icon: \"info\",\r\n      iconColor: \"#d33\",\r\n    }).then((result) => {\r\n      if (result.isConfirmed === true) {\r\n        //submitAll\r\n        this.apiService\r\n          .editaddsystem(\"open\", this.currentUser, data)\r\n          .subscribe((response) => {\r\n            if (response) {\r\n              this.respData = response;\r\n              this.auditLog();\r\n              Swal.fire({ text: \"Record is Reopened\", icon: \"success\" }).then(\r\n                () => window.location.reload()\r\n              );\r\n            }\r\n          });\r\n      }\r\n    });\r\n  }\r\n  delete(data) {\r\n    Swal.fire({\r\n      //text: 'Unable to process' + 'Error ' + this.responseforfileupload.errorMessage + 'Do you want to Proceed??',\r\n      text: \"You are trying to Delete record. \" + \" Do you want to proceed?\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3e54b8\",\r\n      cancelButtonColor: \"#d33\",\r\n      // confirmButtonText: 'PROCEED.'\r\n      cancelButtonText: \"NO\",\r\n      confirmButtonText: \"YES\",\r\n      icon: \"info\",\r\n      iconColor: \"#d33\",\r\n    }).then((result) => {\r\n      console.log(\"this is reopen \", result);\r\n      if (result.isConfirmed === true) {\r\n        this.apiService\r\n          .deleteAddSystem(this.currentUser, data.systemId)\r\n          .subscribe((response) => {\r\n            if (response) {\r\n              Swal.fire({ text: \"Record is Deleted\", icon: \"success\" }).then(\r\n                () => window.location.reload()\r\n              );\r\n            }\r\n          });\r\n      }\r\n    });\r\n  }\r\n  auth(data) {\r\n    Swal.fire({\r\n      //text: 'Unable to process' + 'Error ' + this.responseforfileupload.errorMessage + 'Do you want to Proceed??',\r\n      text: \"You are trying to Authorize record. \" + \" Do you want to proceed?\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3e54b8\",\r\n      cancelButtonColor: \"#d33\",\r\n      // confirmButtonText: 'PROCEED.'\r\n      cancelButtonText: \"NO\",\r\n      confirmButtonText: \"YES\",\r\n      icon: \"info\",\r\n      iconColor: \"#d33\",\r\n    }).then((result) => {\r\n      if (result.isConfirmed === true) {\r\n        if (this.currentUser === data.creatorId) {\r\n          Swal.fire({ text: \"Maker Cannot Authorize Record!\", icon: \"error\" });\r\n          return;\r\n        }\r\n        this.apiService\r\n          .editaddsystem(\"auth\", this.currentUser, data)\r\n          .subscribe((response) => {\r\n            if (response) {\r\n              this.respData = response;\r\n              this.auditLog();\r\n              Swal.fire({ text: \"Record is Authorized\", icon: \"success\" }).then(\r\n                () => window.location.reload()\r\n              );\r\n            }\r\n          });\r\n      }\r\n    });\r\n  }\r\n  auditLog() {\r\n    if (this.respData.approverId === \"null\") {\r\n      this.respData.approverId = \" \";\r\n    }\r\n    if (this.respData.approvedStatus === \"N\") {\r\n      this.respData.approvedStatus = \"UNAUTHORIZED\";\r\n    }\r\n    if (this.respData.approvedStatus === \"Y\") {\r\n      this.respData.approvedStatus = \"AUTHORIZED\";\r\n    }\r\n    if (this.respData.approvedStatus === \"A\") {\r\n      this.respData.approvedStatus = \"AUTHORIZED\";\r\n    }\r\n    if (this.respData.approvedStatus === \"U\") {\r\n      this.respData.approvedStatus = \"UNAUTHORIZED\";\r\n    }\r\n    if (this.respData.recordStatus === \"O\") {\r\n      this.respData.recordStatus = \"OPEN\";\r\n    }\r\n    if (this.respData.recordStatus === \"C\") {\r\n      this.respData.recordStatus = \"CLOSED\";\r\n    }\r\n    if (this.respData.approvedEver === \"N\") {\r\n      this.respData.approvedEver = \"NO\";\r\n    }\r\n    if (this.respData.approvedEver === \"Y\") {\r\n      this.respData.approvedEver = \"YES\";\r\n    }\r\n  }\r\n  getResp(data) {\r\n    localStorage.removeItem(\"idValue\");\r\n    console.log(data);\r\n    this.apiService.setIndex({\r\n      index: data.systemId,\r\n    });\r\n    localStorage.setItem(\"idValue\", data.systemId);\r\n    this.router.navigateByUrl(\"/addSystem\");\r\n  }\r\n  new() {\r\n    localStorage.removeItem(\"idValue\");\r\n    this.apiService.setIndex({\r\n      index: \"\",\r\n    });\r\n    this.router.navigateByUrl(\"/addSystem\");\r\n  }\r\n  refreshPage() {\r\n    window.location.reload();\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { CanDeactivateGuard } from 'src/app/shared/guards/can-deactivate.guard';\r\nimport { AddSystemSummaryComponent } from '../add-system-summary/add-system-summary.component';\r\nimport { AddSystemComponent } from '../add-system/add-system.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: AddSystemComponent,\r\n    canDeactivate: [CanDeactivateGuard]\r\n  },\r\n  {\r\n    path: 'summary',\r\n    component: AddSystemSummaryComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AddSystemRoutingModule { }\r\n\r\n\r\n\r\n","<ng-container *ngIf=\"loading\">\r\n  <span class=\"indicator-progress\"\r\n    >Please wait...\r\n    <span class=\"spinner-border spinner-border-sm align-middle ms-2\"></span\r\n  ></span>\r\n</ng-container>\r\n<div class=\"pageContentMain\" *ngIf=\"!loading\">\r\n  <div class=\"pageTitleCol\">\r\n    <h2 class=\"pageTitle\">Add System</h2>\r\n  </div>\r\n\r\n  <form\r\n    action=\"\"\r\n    class=\"formStyle\"\r\n    [formGroup]=\"basicInfoForm\"\r\n    *ngIf=\"basicConfiguration\"\r\n  >\r\n    <div class=\"dbCardStyle\">\r\n      <div class=\"titleStyle mt-2 mb-4\">\r\n        <h2 class=\"pageTitle\">System Information</h2>\r\n      </div>\r\n      <fieldset [disabled]=\"!editFlag\">\r\n        <div class=\"row gy-4\">\r\n          <div class=\"col-lg-3\">\r\n            <label for=\"codeLbl\" class=\"formLbl\"\r\n              >Code<span class=\"colorRed\">*</span></label\r\n            >\r\n            <input\r\n              id=\"codeLbl\"\r\n              type=\"text\"\r\n              (keypress)=\"keyPressAlphanumeric($event)\"\r\n              placeholder=\"code\"\r\n              [readonly]=\"!editFlag\"\r\n              formControlName=\"systemCode\"\r\n              class=\"form-control\"\r\n              value=\"\"\r\n            />\r\n          </div>\r\n          <div class=\"col-lg-3\">\r\n            <label for=\"name\" class=\"formLbl\"\r\n              >Name<span class=\"colorRed\">*</span></label\r\n            >\r\n            <input\r\n              id=\"name\"\r\n              type=\"text\"\r\n              (keydown.space)=\"$event.preventDefault()\"\r\n              placeholder=\"name\"\r\n              [readonly]=\"!editFlag\"\r\n              formControlName=\"systemName\"\r\n              class=\"form-control\"\r\n              value=\"\"\r\n            />\r\n          </div>\r\n          <div class=\"col-lg-3\">\r\n            <label for=\"name\" class=\"formLbl\"\r\n              >Type<span class=\"colorRed\">*</span></label\r\n            >\r\n            <select\r\n              class=\"form-select\"\r\n              formControlName=\"serviceType\"\r\n              aria-label=\"Default select example\"\r\n            >\r\n              <!-- <option *ngFor=\"let i of serviceTypeArray\" [ngValue]=\"i\">{{i}}</option> -->\r\n              <option hidden value=\"\" disabled selected>\r\n                --Please select--\r\n              </option>\r\n              <option value=\"client\">client</option>\r\n              <option value=\"server\">server</option>\r\n            </select>\r\n          </div>\r\n          <div class=\"col-lg-3\">\r\n            <label for=\"name\" class=\"formLbl\"\r\n              >Messages Type<span class=\"colorRed\">*</span></label\r\n            >\r\n\r\n            <select\r\n              class=\"form-select\"\r\n              formControlName=\"messsageType\"\r\n              aria-label=\"Default select example\"\r\n              placeholder=\"Please Select\"\r\n            >\r\n              <!-- <option *ngFor=\"let i of messsageTypeArray\" [value]=\"i\">{{\r\n              i\r\n              }}</option> -->\r\n              <option hidden value=\"\" disabled selected>\r\n                --Please select--\r\n              </option>\r\n              <option value=\"A\">All</option>\r\n              <option value=\"I\">Incoming</option>\r\n              <option value=\"O\">Outgoing</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n        <div class=\"row gy-4 mt-2\">\r\n          <div class=\"col-lg-3\">\r\n            <label for=\"externalIp\" class=\"formLbl\"\r\n              >External IP/Domain<span class=\"colorRed\">*</span></label\r\n            >\r\n            <input\r\n              id=\"externalIp\"\r\n              [readonly]=\"!editFlag\"\r\n              formControlName=\"sourceIp\"\r\n              placeholder=\"external IP/Domain\"\r\n              type=\"text\"\r\n              class=\"form-control\"\r\n              value=\"\"\r\n              (keyup)=\"extAddressValidation($event)\"\r\n            />\r\n            <!-- <div class=\"invalid-feedback\"\r\n            *ngIf=\"basicInfoForm.get('sourceIp').touched && !basicInfoForm.get('sourceIp').valid\">\r\n            <div *ngIf=\"\r\n          basicInfoForm.get('sourceIp').errors.pattern\r\n        \">\r\n              IP Address is not valid</div>\r\n          </div> -->\r\n          </div>\r\n          <div class=\"col-lg-3\">\r\n            <label for=\"externalPort\" class=\"formLbl\"\r\n              >External Port<span class=\"colorRed\" *ngIf=\"externalPort\"\r\n                >*</span\r\n              ></label\r\n            >\r\n            <input\r\n              id=\"externalPort\"\r\n              [readonly]=\"!editFlag\"\r\n              placeholder=\"external port\"\r\n              type=\"number\"\r\n              formControlName=\"sourcePort\"\r\n              type=\"text\"\r\n              class=\"form-control\"\r\n              value=\"\"\r\n            />\r\n            <!-- <div class=\"invalid-feedback\"\r\n            *ngIf=\"basicInfoForm.get('sourcePort').touched && !basicInfoForm.get('sourcePort').valid\">\r\n            <div *ngIf=\"\r\n            basicInfoForm.get('sourcePort').hasError('minlength')\r\n          \">\r\n\r\n              External Port must be at least 2 numbers.</div>\r\n          </div> -->\r\n          </div>\r\n          <!-- <div class=\"col-lg-3\">\r\n          <label for=\"medianPort\" class=\"formLbl\">External URI<span class=\"colorRed\">*</span></label>\r\n          <input id=\"medianPort\" [readonly]=\"!editFlag\" type=\"text\"  formControlName=\"sourceUri\" type=\"text\"\r\n            class=\"form-control\" value=\"\">\r\n\r\n       \r\n        </div> -->\r\n        </div>\r\n        <div class=\"row gy-4 mt-2\">\r\n          <div class=\"col-lg-3\">\r\n            <label for=\"medianIp\" class=\"formLbl\"\r\n              >Median IP/Domain<span class=\"colorRed\">*</span></label\r\n            >\r\n            <input\r\n              id=\"medianIp\"\r\n              [readonly]=\"!editFlag\"\r\n              formControlName=\"medianIp\"\r\n              type=\"text\"\r\n              placeholder=\"median Ip/Domain\"\r\n              class=\"form-control\"\r\n              value=\"\"\r\n              (keyup)=\"medAddressValidation($event)\"\r\n            />\r\n            <!-- <div class=\"invalid-feedback\"\r\n              *ngIf=\"basicInfoForm.get('medianIp').touched && !basicInfoForm.get('medianIp').valid\">\r\n              <div *ngIf=\"\r\n              basicInfoForm.get('medianIp').errors.pattern\r\n            \">\r\n                IP Address is not valid</div>\r\n            </div> -->\r\n          </div>\r\n          <div class=\"col-lg-3\">\r\n            <label for=\"medianPort\" class=\"formLbl\"\r\n              >Median Port<span class=\"colorRed\" *ngIf=\"medianPort\"\r\n                >*</span\r\n              ></label\r\n            >\r\n            <input\r\n              id=\"medianPort\"\r\n              [readonly]=\"!editFlag\"\r\n              placeholder=\"median Port\"\r\n              type=\"number\"\r\n              formControlName=\"medianPort\"\r\n              type=\"text\"\r\n              class=\"form-control\"\r\n              value=\"\"\r\n            />\r\n\r\n            <!-- <div class=\"invalid-feedback\"\r\n            *ngIf=\"basicInfoForm.get('medianPort').touched && !basicInfoForm.get('medianPort').valid\">\r\n            <div *ngIf=\"\r\n            basicInfoForm.get('medianPort').hasError('minlength')\r\n          \">\r\n\r\n              Median Port must be at least 2 numbers.</div>\r\n          </div> -->\r\n          </div>\r\n\r\n          <!-- <div class=\"col-lg-3\">\r\n          <label for=\"medianPort\" class=\"formLbl\">Median URI<span class=\"colorRed\">*</span></label>\r\n          <input id=\"medianPort\" [readonly]=\"!editFlag\" type=\"text\"  formControlName=\"medianUri\" type=\"text\"\r\n            class=\"form-control\" value=\"\">\r\n\r\n       \r\n        </div>\r\n         -->\r\n        </div>\r\n      </fieldset>\r\n    </div>\r\n  </form>\r\n  <form\r\n    action=\"\"\r\n    class=\"formStyle\"\r\n    [formGroup]=\"messageConfigurationForm\"\r\n    *ngIf=\"\r\n      (messageConfiguration && basicInfoForm.value.messsageType !== 'A') ||\r\n      (!editFlag && basicInfoForm.value.messsageType !== 'A')\r\n    \"\r\n  >\r\n    <div\r\n      class=\"dbCardStyle\"\r\n      formArrayName=\"sysChannel\"\r\n      *ngFor=\"\r\n        let item of messageConfigurationForm.get('sysChannel')['controls'];\r\n        let i = index\r\n      \"\r\n    >\r\n      <fieldset [disabled]=\"!editFlag\">\r\n        <div class=\"titleStyle mt-2 mb-4\">\r\n          <h2 class=\"pageTitle\">{{ messageType }} Message Configuration</h2>\r\n        </div>\r\n        <!-- <label for=\"name\" class=\"formLbl\">{{messageType}} Message Configuration</label> -->\r\n        <div class=\"row gy-4\" [formGroupName]=\"i\">\r\n          <div class=\"col-lg-4\">\r\n            <label for=\"name\" class=\"formLbl\"\r\n              >{{ messageType }} Message Protocol</label\r\n            >\r\n            <select\r\n              class=\"form-select\"\r\n              formControlName=\"messageChannel\"\r\n              aria-label=\"Default select example\"\r\n              (change)=\"onProtocalSlection($event.target.value)\"\r\n            >\r\n              <!-- <option *ngFor=\"let i of protocolArray\" [value]=\"i\">{{\r\n              i\r\n              }}</option> -->\r\n              <option hidden value=\"\" disabled selected>\r\n                --Please select--\r\n              </option>\r\n              <option value=\"MT\">MT</option>\r\n              <option value=\"MX\">MX</option>\r\n              <option value=\"TCP/IP\">TCP/IP</option>\r\n              <option value=\"Https/Http\">HTTPS/HTTP</option>\r\n              <option value=\"MDB\">MDB</option>\r\n              <option value=\"EJB\">EJB</option>\r\n              <option value=\"DB Connection\">DB Connection</option>\r\n            </select>\r\n          </div>\r\n          <div\r\n            class=\"col-lg-4\"\r\n            *ngIf=\"\r\n              messageConfigurationForm.value.sysChannel[0].messageChannel !==\r\n              'DB Connection'\r\n            \"\r\n          >\r\n            <label for=\"name\" class=\"formLbl\">Data Type</label>\r\n            <select\r\n              class=\"form-select\"\r\n              formControlName=\"messageFormat\"\r\n              aria-label=\"Default select example\"\r\n            >\r\n              <option hidden value=\"\" disabled selected>\r\n                --Please select--\r\n              </option>\r\n              <option *ngFor=\"let i of dataType\" [value]=\"i\">{{ i }}</option>\r\n            </select>\r\n          </div>\r\n          <div\r\n            class=\"col-lg-4\"\r\n            *ngIf=\"\r\n              messageConfigurationForm.value.sysChannel[0].messageChannel ===\r\n              'MDB'\r\n            \"\r\n          >\r\n            <label for=\"name\" class=\"formLbl\">Type of Queue</label>\r\n            <select\r\n              class=\"form-select\"\r\n              formControlName=\"queueType\"\r\n              aria-label=\"Default select example\"\r\n            >\r\n              <option *ngFor=\"let i of queArray\" [value]=\"i\">{{ i }}</option>\r\n            </select>\r\n          </div>\r\n          <div\r\n            class=\"col-lg-4\"\r\n            *ngIf=\"\r\n              messageConfigurationForm.value.sysChannel[0].messageChannel ===\r\n                'MDB' && messageConfigurationForm.value.sysChannel[0].queueType\r\n            \"\r\n          >\r\n            <label for=\"name\" class=\"formLbl\">Queue Manager</label>\r\n            <input\r\n              id=\"queueManager\"\r\n              type=\"text\"\r\n              formControlName=\"queueManager\"\r\n              class=\"form-control\"\r\n              placeholder=\"Queue manager\"\r\n              value=\"\"\r\n            />\r\n          </div>\r\n          <div\r\n            class=\"col-lg-4\"\r\n            *ngIf=\"\r\n              messageConfigurationForm.value.sysChannel[0].messageChannel ===\r\n                'MDB' && messageConfigurationForm.value.sysChannel[0].queueType\r\n            \"\r\n          >\r\n            <label for=\"name\" class=\"formLbl\">Queue Name</label>\r\n            <input\r\n              id=\"queueName\"\r\n              type=\"text\"\r\n              formControlName=\"queueName\"\r\n              class=\"form-control\"\r\n              placeholder=\"Queue Name\"\r\n              value=\"\"\r\n            />\r\n          </div>\r\n          <div\r\n            class=\"col-lg-4\"\r\n            *ngIf=\"\r\n              messageConfigurationForm.value.sysChannel[0].messageChannel ===\r\n                'MDB' &&\r\n              messageConfigurationForm.value.sysChannel[0].queueType === 'IBM'\r\n            \"\r\n          >\r\n            <label for=\"name\" class=\"formLbl\">Connection Factory</label>\r\n            <input\r\n              id=\"connectFactory\"\r\n              type=\"text\"\r\n              formControlName=\"queueConnFactory\"\r\n              class=\"form-control\"\r\n              placeholder=\"Connectiong Factory\"\r\n              value=\"\"\r\n            />\r\n          </div>\r\n          <div\r\n            class=\"col-lg-4\"\r\n            *ngIf=\"\r\n              messageConfigurationForm.value.sysChannel[0].messageChannel ===\r\n                'MDB' &&\r\n              messageConfigurationForm.value.sysChannel[0].queueType === 'JMS'\r\n            \"\r\n          >\r\n            <label for=\"name\" class=\"formLbl\">Connection Channel</label>\r\n            <input\r\n              id=\"queChannel\"\r\n              type=\"text\"\r\n              formControlName=\"queueChannel\"\r\n              class=\"form-control\"\r\n              placeholder=\"Queue Channel\"\r\n              value=\"\"\r\n            />\r\n          </div>\r\n          <div\r\n            class=\"col-lg-4\"\r\n            *ngIf=\"\r\n              messageConfigurationForm.value.sysChannel[0].messageChannel ===\r\n              'DB Connection'\r\n            \"\r\n          >\r\n            <label for=\"name\" class=\"formLbl\">User Name</label>\r\n            <input\r\n              id=\"userName\"\r\n              type=\"text\"\r\n              formControlName=\"dbUsername\"\r\n              class=\"form-control\"\r\n              placeholder=\"User Name\"\r\n              value=\"\"\r\n            />\r\n          </div>\r\n          <div\r\n            class=\"col-lg-4\"\r\n            *ngIf=\"\r\n              messageConfigurationForm.value.sysChannel[0].messageChannel ===\r\n              'DB Connection'\r\n            \"\r\n          >\r\n            <label for=\"name\" class=\"formLbl\">Password1</label>\r\n            <div class=\"inputField pwdFldCol d-flex\">\r\n              <input\r\n                id=\"password\"\r\n                [type]=\"hide ? 'password' : 'text'\"\r\n                formControlName=\"dbPassword\"\r\n                class=\"form-control\"\r\n                placeholder=\"Password\"\r\n                value=\"\"\r\n              />\r\n              <span toggle=\"#pwdFld\" class=\"alignSelf\" (click)=\"hide = !hide\">\r\n                <img\r\n                  class=\"showPwd\"\r\n                  *ngIf=\"!hide\"\r\n                  src=\"assets/images/show-icon.svg\"\r\n                  alt=\"...\"\r\n                />\r\n                <img\r\n                  class=\"hidePwd\"\r\n                  *ngIf=\"hide\"\r\n                  src=\"assets/images/hide-icon.svg\"\r\n                  alt=\"...\"\r\n                />\r\n              </span>\r\n            </div>\r\n          </div>\r\n          <div\r\n            class=\"col-lg-4\"\r\n            *ngIf=\"\r\n              messageConfigurationForm.value.sysChannel[0].messageChannel ===\r\n              'DB Connection'\r\n            \"\r\n          >\r\n            <label for=\"name\" class=\"formLbl\">Database</label>\r\n            <input\r\n              id=\"databaseName\"\r\n              type=\"text\"\r\n              formControlName=\"dbServiceName\"\r\n              class=\"form-control\"\r\n              placeholder=\"Database Name\"\r\n              value=\"\"\r\n            />\r\n          </div>\r\n          <div\r\n            class=\"col-lg-4\"\r\n            *ngIf=\"\r\n              messageConfigurationForm.value.sysChannel[0].messageChannel ===\r\n              'DB Connection'\r\n            \"\r\n          >\r\n            <label for=\"name\" class=\"formLbl\">Connecting String</label>\r\n            <input\r\n              id=\"connectString\"\r\n              type=\"text\"\r\n              formControlName=\"dbConnectString\"\r\n              class=\"form-control\"\r\n              placeholder=\"Connecting String\"\r\n              value=\"\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </fieldset>\r\n      <div class=\"row g-3 pb-3 pt-4 justify-content-end\" *ngIf=\"editFlag\">\r\n        <div class=\"col-auto\">\r\n          <button\r\n            type=\"button\"\r\n            (click)=\"next('messageConfiguration')\"\r\n            class=\"btn smBtn minWdSmBtn btnPrimary\"\r\n          >\r\n            Next\r\n          </button>\r\n        </div>\r\n        <div class=\"col-auto\">\r\n          <button\r\n            type=\"button\"\r\n            (click)=\"previous('messageConfiguration')\"\r\n            class=\"btn smBtn minWdSmBtn btnDarkGrey\"\r\n          >\r\n            Previous\r\n          </button>\r\n        </div>\r\n\r\n        <!-- <div class=\"col-auto\">\r\n          <button  type=\"button\" href=\"role-new.html\" class=\"btn smBtn minWdSmBtn btnSecondary\">Reset</button  >\r\n        </div> -->\r\n\r\n        <div class=\"col-auto\">\r\n          <button\r\n            type=\"button\"\r\n            href=\"javascript:void(0);\"\r\n            [routerLink]=\"['/addSystem/summary']\"\r\n            class=\"btn smBtn minWdSmBtn btnSecondary\"\r\n          >\r\n            Exit\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </form>\r\n\r\n  <div\r\n    action=\"\"\r\n    class=\"formStyle\"\r\n    *ngIf=\"\r\n      (mdb && basicInfoForm.value.messsageType !== 'A') ||\r\n      ((this.messageConfigurationForm.value.sysChannel[0].messageFormat ===\r\n        'FLATFILE' ||\r\n        this.messageConfigurationForm.value.sysChannel[0].messageFormat ===\r\n          'CSV/EXCEL') &&\r\n        this.basicInfoForm.value.messsageType != 'A' &&\r\n        !editFlag)\r\n    \"\r\n  >\r\n    <!-- <label for=\"name\" class=\"formLbl\">Header and Service Details</label> -->\r\n    <div class=\"col-lg-4\">\r\n      <label for=\"name\" class=\"formLbl\">Folder Name</label>\r\n      <input type=\"text\" class=\"form-control\" value=\"\" />\r\n    </div>\r\n    <div class=\"row g-3 pb-3 pt-4 justify-content-end\" *ngIf=\"editFlag\">\r\n      <div class=\"col-auto\">\r\n        <button type=\"button\" class=\"btn smBtn minWdSmBtn btnPrimary\">\r\n          Next\r\n        </button>\r\n      </div>\r\n      <div class=\"col-auto\">\r\n        <button\r\n          type=\"button\"\r\n          (click)=\"previous('incomingMessageConfiguration')\"\r\n          class=\"btn smBtn minWdSmBtn btnDarkGrey\"\r\n        >\r\n          Previous\r\n        </button>\r\n      </div>\r\n      <!-- <div class=\"col-auto\">\r\n        <button  type=\"button\" href=\"role-new.html\" class=\"btn smBtn minWdSmBtn btnSecondary\">Reset</button  >\r\n      </div> -->\r\n    </div>\r\n  </div>\r\n\r\n  <div\r\n    fxLayout=\"row wrap\"\r\n    class=\"file\"\r\n    *ngIf=\"\r\n      this.messageConfigurationForm.value.sysChannel[0].messageChannel ===\r\n        'DB Connection' && tableFlag\r\n    \"\r\n  >\r\n    <label for=\"name\" class=\"formLbl\">Table</label>\r\n    <select\r\n      class=\"form-select\"\r\n      (change)=\"onTableSlection($event.target.value)\"\r\n      aria-label=\"Default select example\"\r\n    >\r\n      <option hidden value=\"\" disabled selected>--Please select--</option>\r\n      <option *ngFor=\"let i of table\" [value]=\"i\">{{ i }}</option>\r\n    </select>\r\n  </div>\r\n\r\n  <div\r\n    fxLayout=\"row wrap\"\r\n    class=\"file\"\r\n    *ngIf=\"\r\n      (messageConfigurationForm.value.sysChannel[0].messageFormat == 'XML' &&\r\n        incomingMessageConfiguration === true) ||\r\n      (messageConfigurationForm.value.sysChannel[0].messageFormat == 'XML' &&\r\n        !editFlag)\r\n    \"\r\n  >\r\n    <div fxFlex=\"100\" class=\"width\">\r\n      <div class=\"titleStyle mt-2 mb-4\">\r\n        <h2 class=\"pageTitle\">Header and Service Details</h2>\r\n      </div>\r\n      <!-- <label for=\"name\" class=\"formLbl\">Header and Service Details</label> -->\r\n    </div>\r\n    <!-- <span class=\"flex\">{{fileName}}</span> -->\r\n  </div>\r\n\r\n  <form\r\n    class=\"formStyle dbCardStyle\"\r\n    [formGroup]=\"tcpForm\"\r\n    *ngIf=\"\r\n      incomingMessageConfiguration ||\r\n      (!editFlag && basicInfoForm.value.messsageType !== 'A')\r\n    \"\r\n  >\r\n    <div\r\n      style=\"width: 100%; margin-bottom: 20px\"\r\n      *ngIf=\"\r\n        messageConfigurationForm.value.sysChannel[0].messageFormat == 'XML'\r\n      \"\r\n    >\r\n      <!-- <input type=\"file\" id=\"chFile\" (change)=\"uploadFileXml($event)\"> -->\r\n      <!-- <button type=\"button\" mat-raised-button type=\"button\" class=\"btnFile\" (click)=\"chooseFile()\">\r\n        <i class=\"fa fa-upload\"></i>\r\n        File Upload\r\n      </button> -->\r\n      <div class=\"fileUpload\">\r\n        <div class=\"formS\">\r\n          <div class=\"file-upload-wrapper\" #fileWrapper data-text=\"File Upload\">\r\n            <input\r\n              (change)=\"uploadFileXml($event)\"\r\n              name=\"file-upload-field\"\r\n              type=\"file\"\r\n              class=\"file-upload-field\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <fieldset [disabled]=\"!submitFlag || !editFlag\">\r\n      <div\r\n        *ngIf=\"\r\n          messageConfigurationForm.value.sysChannel[0].messageFormat !== 'XML'\r\n        \"\r\n      >\r\n        <div class=\"titleStyle mt-2 mb-4\">\r\n          <h2 class=\"pageTitle\">Header and Service Details</h2>\r\n        </div>\r\n      </div>\r\n      <div class=\"row gy-4\">\r\n        <div class=\"col-lg-2\">\r\n          <label for=\"name\" class=\"formLbl\"\r\n            >Header <span class=\"colorRed\">*</span></label\r\n          >\r\n        </div>\r\n        <div class=\"col-lg-2\">\r\n          <label for=\"name\" class=\"formLbl\"\r\n            >{{ label2 }} <span class=\"colorRed\">*</span></label\r\n          >\r\n        </div>\r\n        <div class=\"col-lg-2\">\r\n          <label for=\"name\" class=\"formLbl\"\r\n            >Data Type <span class=\"colorRed\">*</span></label\r\n          >\r\n        </div>\r\n        <div class=\"col-lg-2\">\r\n          <label for=\"name\" class=\"formLbl\"\r\n            >Default Value <span class=\"colorRed\">*</span></label\r\n          >\r\n        </div>\r\n        <div class=\"col-lg-2\">\r\n          <label for=\"name\" class=\"formLbl\"\r\n            >Encryption Type <span class=\"colorRed\">*</span></label\r\n          >\r\n        </div>\r\n      </div>\r\n      <div\r\n        formArrayName=\"sysService\"\r\n        *ngFor=\"\r\n          let item of tcpForm.get('sysService')['controls'];\r\n          let i = index\r\n        \"\r\n      >\r\n        <div class=\"row gy-4\" [formGroupName]=\"i\" style=\"margin-bottom: 20px\">\r\n          <div class=\"col-lg-2\">\r\n            <!-- <label for=\"name\" class=\"formLbl\">Header</label> -->\r\n            <!-- <select class=\"form-select\" (change)=\"onHeaderTagSelect($event,i)\" formControlName=\"headerTag\" aria-label=\"Default select example\">\r\n            <option  [hidden]=\"shouldHideOption(header)\" *ngFor=\"let header of headerTagData\" [value]=\"header.headerTag\">\r\n              {{header.headerTag}}\r\n            </option>\r\n          </select> -->\r\n            <select\r\n              class=\"form-select\"\r\n              formControlName=\"headerTag\"\r\n              (change)=\"onHeaderSelection($event.target.value, i)\"\r\n              aria-label=\"Default select example\"\r\n            >\r\n              <option *ngFor=\"let header of headerValues\" [value]=\"header\">\r\n                {{ header }}\r\n              </option>\r\n            </select>\r\n          </div>\r\n          <div class=\"col-lg-2\">\r\n            <!-- <label for=\"name\" class=\"formLbl\">{{label2}}</label> -->\r\n            <!-- <ng-select id=\"outlineNgSelect\"\r\n            *ngIf='messageConfigurationForm.value.sysChannel[0].messageChannel=== \"TCP/IP\"'\r\n            class=\"form-select\" formControlName=\"messageKey\" aria-label=\"Default select example\"\r\n            (change)=\"onSelectingMessageBasis($event,i)\" [disabled]=\"!editFlag\"\r\n            >\r\n            <ng-option hidden value=\"\" disabled selected >Please Select Field No 123</ng-option>\r\n            <ng-option *ngFor=\"let mkey of isoRespData\" [ngClass]=\"'muthu'\" [value]=\"mkey.fieldNo\">\r\n              {{mkey.fieldNo}} {{mkey.fieldName}} </ng-option>\r\n          </ng-select> -->\r\n            <ng-select\r\n              [items]=\"isoRespDataFiltered\"\r\n              *ngIf=\"\r\n                messageConfigurationForm.value.sysChannel[0].messageChannel ===\r\n                'TCP/IP'\r\n              \"\r\n              aria-label=\"Default select example\"\r\n              [readonly]=\"!editFlag\"\r\n              bindLabel=\"formattedmKey\"\r\n              formControlName=\"messageKey\"\r\n              [disabled]=\"!editFlag\"\r\n              (change)=\"changeSelectedFieldNo($event, i)\"\r\n              placeholder=\"Select city\"\r\n            >\r\n              <!-- <ng-select [items]=\"isoRespDataFiltered\"\r\n          *ngIf='messageConfigurationForm.value.sysChannel[0].messageChannel=== \"TCP/IP\"'\r\n          aria-label=\"Default select example\"\r\n          class=\"form-select\"\r\n          bindLabel=\"formattedmKey\"\r\n          formControlName=\"messageKey\"\r\n          [disabled]=\"!editFlag\"\r\n          (change)=\"changeSelectedFieldNo($event, i)\"\r\n          placeholder=\"Select city\"> -->\r\n            </ng-select>\r\n\r\n            <ng-select\r\n              [items]=\"xmlRespDataFiltered\"\r\n              *ngIf=\"\r\n                messageConfigurationForm.value.sysChannel[0].messageFormat ===\r\n                  'XML' && !fileUploadClick\r\n              \"\r\n              aria-label=\"Default select example\"\r\n              [readonly]=\"!editFlag\"\r\n              bindLabel=\"messageKey\"\r\n              formControlName=\"messageKey\"\r\n              (change)=\"onselectingTag($event, i)\"\r\n            >\r\n              <!-- <ng-select [items]=\"xmlRespDataFiltered\"\r\n          *ngIf='messageConfigurationForm.value.sysChannel[0].messageFormat=== \"XML\" && !fileUploadClick' aria-label=\"Default select example\"\r\n          class=\"form-select\"\r\n          bindLabel=\"messageKey\"\r\n          formControlName=\"messageKey\"\r\n          (change)=\"onselectingTag($event,i)\"> -->\r\n            </ng-select>\r\n\r\n            <!-- <ng-select id=\"outlineNgSelect\" *ngIf='messageConfigurationForm.value.sysChannel[0].messageFormat=== \"XML\" && !fileUploadClick' class=\"form-select\"\r\n            formControlName=\"messageKey\" [readonly]=\"!editFlag\" aria-label=\"Default select example\" (change)=\"onselectingTag($event,i)\">\r\n            <ng-option hidden value=\"\" disabled selected >Please Select Tag</ng-option>\r\n            <ng-option *ngFor=\"let mkey of xmlRespData\" [hidden]=\"try(mkey)\" [value]=\"mkey\">\r\n              {{mkey}}\r\n            </ng-option>\r\n          </ng-select> -->\r\n            <select\r\n              (change)=\"onDbConnectionOption($event, i)\"\r\n              *ngIf=\"\r\n                this.messageConfigurationForm.value.sysChannel[0]\r\n                  .messageChannel === 'DB Connection' && tableDropDownClick\r\n              \"\r\n              class=\"form-select\"\r\n              formControlName=\"messageKey\"\r\n              aria-label=\"Default select example\"\r\n              (change)=\"onselectingColumnName($event.target.value, i)\"\r\n            >\r\n              <option hidden value=\"\" disabled selected>\r\n                Please Select Tag\r\n              </option>\r\n              <option\r\n                *ngFor=\"let mkey of tabelData\"\r\n                [hidden]=\"shouldHideOption(mkey)\"\r\n                [value]=\"mkey\"\r\n              >\r\n                {{ mkey[1] }}\r\n              </option>\r\n            </select>\r\n            <select\r\n              *ngIf=\"\r\n                this.messageConfigurationForm.value.sysChannel[0]\r\n                  .messageChannel === 'MT' ||\r\n                this.messageConfigurationForm.value.sysChannel[0]\r\n                  .messageChannel === 'MX'\r\n              \"\r\n              class=\"form-select\"\r\n              formControlName=\"messageKey\"\r\n              aria-label=\"Default select example\"\r\n              (change)=\"onselectingFieldName($event.target.value, i)\"\r\n            >\r\n              <option hidden value=\"\" disabled selected>\r\n                Please Select Tag\r\n              </option>\r\n              <option *ngFor=\"let mkey of fieldValues[i]\" [value]=\"mkey\">\r\n                {{ mkey }}\r\n              </option>\r\n            </select>\r\n            <input\r\n              id=\"externalIp\"\r\n              *ngIf=\"\r\n                this.messageConfigurationForm.value.sysChannel[0]\r\n                  .messageChannel === 'DB Connection' && !tableDropDownClick\r\n              \"\r\n              formControlName=\"messageKey\"\r\n              type=\"text\"\r\n              class=\"form-control\"\r\n              value=\"\"\r\n              readonly\r\n            />\r\n            <input\r\n              id=\"externalIp\"\r\n              *ngIf=\"\r\n                messageConfigurationForm.value.sysChannel[0].messageFormat ===\r\n                  'XML' && fileUploadClick\r\n              \"\r\n              formControlName=\"messageKey\"\r\n              type=\"text\"\r\n              class=\"form-control\"\r\n              value=\"\"\r\n              readonly\r\n            />\r\n            <input\r\n              id=\"externalIp\"\r\n              *ngIf=\"\r\n                messageConfigurationForm.value.sysChannel[0].messageFormat ===\r\n                'JSON'\r\n              \"\r\n              formControlName=\"messageKey\"\r\n              type=\"text\"\r\n              class=\"form-control\"\r\n              value=\"\"\r\n            />\r\n          </div>\r\n          <div class=\"col-lg-2\">\r\n            <!-- <label for=\"name\" class=\"formLbl\">Data Type</label> -->\r\n            <ng-select\r\n              id=\"outlineNgSelect\"\r\n              *ngIf=\"\r\n                messageConfigurationForm.value.sysChannel[0].messageChannel ===\r\n                'TCP/IP'\r\n              \"\r\n              formControlName=\"dataType\"\r\n              [readonly]=\"!editFlag\"\r\n              aria-label=\"Default select example\"\r\n            >\r\n              <!-- <ng-select id=\"outlineNgSelect\" class=\"form-select\" *ngIf='messageConfigurationForm.value.sysChannel[0].messageChannel=== \"TCP/IP\"'\r\n            formControlName=\"dataType\" [readonly]=\"!editFlag\" aria-label=\"Default select example\"> -->\r\n              <ng-option hidden value=\"\" disabled selected\r\n                >Please Select Data Type</ng-option\r\n              >\r\n              <ng-option *ngFor=\"let type of typeDataIso\" [value]=\"type\">{{\r\n                type\r\n              }}</ng-option>\r\n            </ng-select>\r\n\r\n            <select\r\n              class=\"form-select\"\r\n              name=\"dataType_{{ i }}\"\r\n              *ngIf=\"\r\n                messageConfigurationForm.value.sysChannel[0].messageFormat ===\r\n                  'XML' ||\r\n                messageConfigurationForm.value.sysChannel[0].messageFormat ===\r\n                  'JSON' ||\r\n                messageConfigurationForm.value.sysChannel[0].messageChannel ===\r\n                  'MX' ||\r\n                messageConfigurationForm.value.sysChannel[0].messageChannel ===\r\n                  'MT'\r\n              \"\r\n              formControlName=\"dataType\"\r\n              aria-label=\"Default select example\"\r\n            >\r\n              <option value=\"numeric\">Numeric</option>\r\n              <option value=\"alphaNumeric\">Alpha Numeric</option>\r\n              <option value=\"date\">Date</option>\r\n            </select>\r\n            <input\r\n              id=\"externalIp\"\r\n              *ngIf=\"\r\n                this.messageConfigurationForm.value.sysChannel[0]\r\n                  .messageChannel === 'DB Connection'\r\n              \"\r\n              formControlName=\"dataType\"\r\n              type=\"text\"\r\n              class=\"form-control\"\r\n              readonly\r\n              value=\"\"\r\n            />\r\n          </div>\r\n          <div class=\"col-lg-2\">\r\n            <!-- <label for=\"name\" class=\"formLbl\">Default Value</label> -->\r\n            <input\r\n              id=\"externalIp\"\r\n              formControlName=\"headerValue\"\r\n              type=\"text\"\r\n              class=\"form-control\"\r\n              value=\"\"\r\n            />\r\n          </div>\r\n          <div class=\"col-lg-2\">\r\n            <!-- <label for=\"name\" class=\"formLbl\">Encryption Type</label> -->\r\n            <select\r\n              class=\"form-select\"\r\n              formControlName=\"encryption\"\r\n              aria-label=\"Default select example\"\r\n            >\r\n              <!-- <option *ngFor=\"let type of encryptionArray\" [value]=\"type\">{{type}}\r\n            <option> -->\r\n              <option value=\"No Encryption\">No Encryption</option>\r\n              <option value=\"BASE64\">BASE 64</option>\r\n              <option value=\"SHA256\">SHA 256</option>\r\n              <option value=\"SHA512\">SHA 512</option>\r\n            </select>\r\n          </div>\r\n          <div class=\"col-lg-2\" *ngIf=\"editFlag\">\r\n            <label for=\"name\" class=\"formLbl\"></label>\r\n            <br />\r\n            <a\r\n              type=\"button\"\r\n              *ngIf=\"submitFlag\"\r\n              href=\"javascript:void(0);\"\r\n              (click)=\"delete(i)\"\r\n              class=\"deleteIcon2\"\r\n              ><img src=\"assets/images/delete-icon.svg\" alt=\"...\"\r\n            /></a>\r\n            <!-- <button  type=\"button\" *ngIf=\"submitFlag\" href=\"javascript:void(0)\" (click)=\"delete(i)\" class=\"addIcon deleteIcon\">\r\n            <img src=\"assets/images/delete-icon.png\" alt=\"...\"></button  > -->\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </fieldset>\r\n    <div class=\"row g-3 pt-4\" *ngIf=\"editFlag\">\r\n      <div class=\"col-auto\" (click)=\"addBioDocs()\">\r\n        <a *ngIf=\"submitFlag\" class=\"addIcon primarybg\">\r\n          <span><img src=\"assets/images/plus-icon.svg\" alt=\"...\" /></span>\r\n        </a>\r\n      </div>\r\n      <div class=\"row g-3 pb-3 pt-4 justify-content-end\" *ngIf=\"editFlag\">\r\n        <div class=\"col-auto\">\r\n          <button\r\n            type=\"button\"\r\n            (click)=\"next('incomingMessageConfiguration')\"\r\n            class=\"btn smBtn minWdSmBtn btnPrimary\"\r\n            (click)=\"submit2()\"\r\n            [disabled]=\"!submitFlag || !tcpForm.dirty || !tcpForm.valid\"\r\n          >\r\n            Save\r\n          </button>\r\n        </div>\r\n        <div class=\"col-auto\">\r\n          <button\r\n            type=\"button\"\r\n            (click)=\"previous('incomingMessageConfiguration')\"\r\n            [disabled]=\"!submitFlag\"\r\n            class=\"btn smBtn minWdSmBtn btnDarkGrey\"\r\n          >\r\n            Previous\r\n          </button>\r\n        </div>\r\n        <!-- <div class=\"col-auto\">\r\n          <button type=\"button\"   [disabled]=\"!submitFlag\" class=\"btn smBtn minWdSmBtn btnSecondary\">Reset</button>\r\n        </div> -->\r\n        <div class=\"col-auto\">\r\n          <button\r\n            type=\"button\"\r\n            href=\"javascript:void(0);\"\r\n            [routerLink]=\"['/addSystem/summary']\"\r\n            class=\"btn smBtn minWdSmBtn btnSecondary\"\r\n          >\r\n            Exit\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </form>\r\n\r\n  <form\r\n    action=\"\"\r\n    class=\"formStyle\"\r\n    *ngIf=\"\r\n      (basicInfoForm.value.messsageType == 'A' && all === true) ||\r\n      (basicInfoForm.value.messsageType == 'A' && !editFlag)\r\n    \"\r\n  >\r\n    <div class=\"tabStyleCol\" style=\"margin-top: 30px\">\r\n      <ul class=\"nav nav-tabs\" id=\"myTab\" role=\"tablist\">\r\n        <li class=\"nav-item\" role=\"presentation\" *ngIf=\"tab1\">\r\n          <button\r\n            type=\"button\"\r\n            class=\"nav-link active\"\r\n            id=\"home-tab\"\r\n            data-bs-toggle=\"tab\"\r\n            data-bs-target=\"#home\"\r\n            type=\"button\"\r\n            role=\"tab\"\r\n            aria-controls=\"home\"\r\n            (click)=\"value('1')\"\r\n            aria-selected=\"true\"\r\n          >\r\n            Incoming\r\n          </button>\r\n        </li>\r\n        <li class=\"nav-item\" role=\"presentation\" *ngIf=\"!tab1\">\r\n          <button\r\n            type=\"button\"\r\n            class=\"nav-link\"\r\n            id=\"home-tab\"\r\n            data-bs-toggle=\"tab\"\r\n            data-bs-target=\"#home\"\r\n            type=\"button\"\r\n            role=\"tab\"\r\n            aria-controls=\"home\"\r\n            aria-selected=\"true\"\r\n            (click)=\"value('1')\"\r\n          >\r\n            Incoming\r\n          </button>\r\n        </li>\r\n        <li class=\"nav-item\" role=\"presentation\" *ngIf=\"!tab2\">\r\n          <button\r\n            type=\"button\"\r\n            class=\"nav-link\"\r\n            id=\"profile-tab\"\r\n            data-bs-toggle=\"tab\"\r\n            data-bs-target=\"#profile\"\r\n            type=\"button\"\r\n            role=\"tab\"\r\n            aria-controls=\"profile\"\r\n            aria-selected=\"false\"\r\n            (click)=\"value('2')\"\r\n          >\r\n            Outgoing\r\n          </button>\r\n        </li>\r\n        <li class=\"nav-item\" role=\"presentation\" *ngIf=\"tab2\">\r\n          <button\r\n            type=\"button\"\r\n            class=\"nav-link active\"\r\n            id=\"profile-tab\"\r\n            data-bs-toggle=\"tab\"\r\n            data-bs-target=\"#profile\"\r\n            type=\"button\"\r\n            role=\"tab\"\r\n            aria-controls=\"profile\"\r\n            aria-selected=\"false\"\r\n            (click)=\"value('2')\"\r\n          >\r\n            Outgoing\r\n          </button>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n    <div class=\"dbCardStyle\">\r\n      <div class=\"tab-content\" id=\"myTabContent\">\r\n        <div\r\n          class=\"tab-pane fade show active\"\r\n          id=\"home\"\r\n          role=\"tabpanel\"\r\n          aria-labelledby=\"home-tab\"\r\n          *ngIf=\"tab1\"\r\n        >\r\n          <div\r\n            style=\"width: 60%\"\r\n            *ngIf=\"\r\n              messageConfigurationForm.value.sysChannel[0].messageFormat ==\r\n                'XML' && tab12\r\n            \"\r\n          >\r\n            <div fxFlex=\"60\">\r\n              <div class=\"fileUpload\">\r\n                <div class=\"formS\">\r\n                  <div\r\n                    class=\"file-upload-wrapper\"\r\n                    #fileWrapper\r\n                    data-text=\"File Upload\"\r\n                  >\r\n                    <input\r\n                      (change)=\"uploadFileXml($event)\"\r\n                      name=\"file-upload-field\"\r\n                      type=\"file\"\r\n                      class=\"file-upload-field\"\r\n                    />\r\n                    <button\r\n                      type=\"button\"\r\n                      type=\"button\"\r\n                      class=\"btnFile\"\r\n                      (click)=\"chooseFile()\"\r\n                    ></button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <form\r\n            action=\"\"\r\n            class=\"formStyle\"\r\n            [formGroup]=\"messageConfigurationForm\"\r\n            *ngIf=\"\r\n              (basicInfoForm.value.messsageType === 'A' && tab11) ||\r\n              (basicInfoForm.value.messsageType === 'A' && !editFlag)\r\n            \"\r\n          >\r\n            <div\r\n              class=\"dbCardStyle\"\r\n              formArrayName=\"sysChannel\"\r\n              *ngFor=\"\r\n                let item of messageConfigurationForm.get('sysChannel')[\r\n                  'controls'\r\n                ];\r\n                let i = index\r\n              \"\r\n            >\r\n              <div class=\"titleStyle mt-2 mb-4\">\r\n                <h2 class=\"pageTitle\">Incoming Message Configuration</h2>\r\n              </div>\r\n              <fieldset [disabled]=\"!editFlag\">\r\n                <div class=\"row gy-4\" [formGroupName]=\"i\">\r\n                  <div class=\"col-lg-4\">\r\n                    <label for=\"name\" class=\"formLbl\"\r\n                      >Incoming Message Protocol\r\n                      <span class=\"colorRed\">*</span></label\r\n                    >\r\n                    <select\r\n                      class=\"form-select\"\r\n                      formControlName=\"messageChannel\"\r\n                      aria-label=\"Default select example\"\r\n                      (change)=\"onProtocalSlection($event.target.value)\"\r\n                      required\r\n                    >\r\n                      <!-- <option *ngFor=\"let i of protocolArray\" [value]=\"i\">{{\r\n                      i\r\n                      }}</option> -->\r\n                      <option hidden value=\"\" disabled selected>\r\n                        --Please select--\r\n                      </option>\r\n                      <option value=\"MT\">MT</option>\r\n                      <option value=\"MX\">MX</option>\r\n                      <option value=\"TCP/IP\">TCP/IP</option>\r\n                      <option value=\"Https/Http\">HTTPS/HTTP</option>\r\n                      <option value=\"MDB\">MDB</option>\r\n                      <option value=\"EJB\">EJB</option>\r\n                      <option value=\"DB Connection\">DB Connection</option>\r\n                    </select>\r\n                  </div>\r\n                  <div\r\n                    class=\"col-lg-4\"\r\n                    *ngIf=\"\r\n                      messageConfigurationForm.value.sysChannel[0]\r\n                        .messageChannel !== 'DB Connection'\r\n                    \"\r\n                  >\r\n                    <label for=\"name\" class=\"formLbl\"\r\n                      >Data Type <span class=\"colorRed\">*</span></label\r\n                    >\r\n\r\n                    <select\r\n                      class=\"form-select\"\r\n                      formControlName=\"messageFormat\"\r\n                      aria-label=\"Default select example\"\r\n                      required\r\n                    >\r\n                      <option hidden value=\"\" disabled selected>\r\n                        --Please select--\r\n                      </option>\r\n                      <option *ngFor=\"let i of dataType\" [value]=\"i\">\r\n                        {{ i }}\r\n                      </option>\r\n                    </select>\r\n                  </div>\r\n                  <div\r\n                    class=\"col-lg-4\"\r\n                    *ngIf=\"\r\n                      messageConfigurationForm.value.sysChannel[0]\r\n                        .messageChannel === 'MDB'\r\n                    \"\r\n                  >\r\n                    <label for=\"name\" class=\"formLbl\">Type of Queue</label>\r\n                    <select\r\n                      class=\"form-select\"\r\n                      formControlName=\"queueType\"\r\n                      aria-label=\"Default select example\"\r\n                    >\r\n                      <option *ngFor=\"let i of queArray\" [value]=\"i\">\r\n                        {{ i }}\r\n                      </option>\r\n                    </select>\r\n                  </div>\r\n                  <div\r\n                    class=\"col-lg-4\"\r\n                    *ngIf=\"\r\n                      messageConfigurationForm.value.sysChannel[0]\r\n                        .messageChannel === 'MDB' &&\r\n                      messageConfigurationForm.value.sysChannel[0].queueType\r\n                    \"\r\n                  >\r\n                    <label for=\"name\" class=\"formLbl\">Queue Manager</label>\r\n                    <input\r\n                      id=\"queueManager\"\r\n                      type=\"text\"\r\n                      formControlName=\"queueManager\"\r\n                      class=\"form-control\"\r\n                      placeholder=\"Queue manager\"\r\n                      value=\"\"\r\n                    />\r\n                  </div>\r\n                  <div\r\n                    class=\"col-lg-4\"\r\n                    *ngIf=\"\r\n                      messageConfigurationForm.value.sysChannel[0]\r\n                        .messageChannel === 'MDB' &&\r\n                      messageConfigurationForm.value.sysChannel[0].queueType\r\n                    \"\r\n                  >\r\n                    <label for=\"name\" class=\"formLbl\">Queue Name</label>\r\n                    <input\r\n                      id=\"queueName\"\r\n                      type=\"text\"\r\n                      formControlName=\"queueName\"\r\n                      class=\"form-control\"\r\n                      placeholder=\"Queue Name\"\r\n                      value=\"\"\r\n                    />\r\n                  </div>\r\n                  <div\r\n                    class=\"col-lg-4\"\r\n                    *ngIf=\"\r\n                      messageConfigurationForm.value.sysChannel[0]\r\n                        .messageChannel === 'MDB' &&\r\n                      messageConfigurationForm.value.sysChannel[0].queueType ===\r\n                        'IBM'\r\n                    \"\r\n                  >\r\n                    <label for=\"name\" class=\"formLbl\">Connection Factory</label>\r\n                    <input\r\n                      id=\"connectFactory\"\r\n                      type=\"text\"\r\n                      formControlName=\"queueConnFactory\"\r\n                      class=\"form-control\"\r\n                      placeholder=\"Connectiong Factory\"\r\n                      value=\"\"\r\n                    />\r\n                  </div>\r\n                  <div\r\n                    class=\"col-lg-4\"\r\n                    *ngIf=\"\r\n                      messageConfigurationForm.value.sysChannel[0]\r\n                        .messageChannel === 'MDB' &&\r\n                      messageConfigurationForm.value.sysChannel[0].queueType ===\r\n                        'JMS'\r\n                    \"\r\n                  >\r\n                    <label for=\"name\" class=\"formLbl\">Connection Channel</label>\r\n                    <input\r\n                      id=\"queChannel\"\r\n                      type=\"text\"\r\n                      formControlName=\"queueChannel\"\r\n                      class=\"form-control\"\r\n                      placeholder=\"Queue Channel\"\r\n                      value=\"\"\r\n                    />\r\n                  </div>\r\n                  <div\r\n                    class=\"col-lg-4\"\r\n                    *ngIf=\"\r\n                      messageConfigurationForm.value.sysChannel[0]\r\n                        .messageChannel === 'DB Connection'\r\n                    \"\r\n                  >\r\n                    <label for=\"name\" class=\"formLbl\">User Name</label>\r\n                    <input\r\n                      id=\"userName\"\r\n                      type=\"text\"\r\n                      formControlName=\"dbUsername\"\r\n                      class=\"form-control\"\r\n                      placeholder=\"User Name\"\r\n                      value=\"\"\r\n                    />\r\n                  </div>\r\n                  <div\r\n                    class=\"col-lg-4\"\r\n                    *ngIf=\"\r\n                      messageConfigurationForm.value.sysChannel[0]\r\n                        .messageChannel === 'DB Connection'\r\n                    \"\r\n                  >\r\n                    <label for=\"name\" class=\"formLbl\">Password</label>\r\n                    <div class=\"inputField pwdFldCol d-flex\">\r\n                      <input\r\n                        id=\"password\"\r\n                        [type]=\"hide ? 'password' : 'text'\"\r\n                        formControlName=\"dbPassword\"\r\n                        class=\"form-control\"\r\n                        placeholder=\"Password\"\r\n                        value=\"\"\r\n                      />\r\n                      <span\r\n                        toggle=\"#pwdFld\"\r\n                        class=\"alignSelf\"\r\n                        (click)=\"hide = !hide\"\r\n                      >\r\n                        <img\r\n                          class=\"showPwd\"\r\n                          *ngIf=\"!hide\"\r\n                          src=\"assets/images/show-icon.svg\"\r\n                          alt=\"...\"\r\n                        />\r\n                        <img\r\n                          class=\"hidePwd\"\r\n                          *ngIf=\"hide\"\r\n                          src=\"assets/images/hide-icon.svg\"\r\n                          alt=\"...\"\r\n                        />\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                  <div\r\n                    class=\"col-lg-4\"\r\n                    *ngIf=\"\r\n                      messageConfigurationForm.value.sysChannel[0]\r\n                        .messageChannel === 'DB Connection'\r\n                    \"\r\n                  >\r\n                    <label for=\"name\" class=\"formLbl\">Database</label>\r\n                    <input\r\n                      id=\"databaseName\"\r\n                      formControlName=\"dbServiceName\"\r\n                      type=\"text\"\r\n                      class=\"form-control\"\r\n                      placeholder=\"Database Name\"\r\n                      value=\"\"\r\n                    />\r\n                  </div>\r\n                  <div\r\n                    class=\"col-lg-4\"\r\n                    *ngIf=\"\r\n                      messageConfigurationForm.value.sysChannel[0]\r\n                        .messageChannel === 'DB Connection'\r\n                    \"\r\n                  >\r\n                    <label for=\"name\" class=\"formLbl\">Connecting String</label>\r\n                    <input\r\n                      id=\"connectString\"\r\n                      formControlName=\"dbConnectString\"\r\n                      type=\"text\"\r\n                      class=\"form-control\"\r\n                      placeholder=\"Connecting String\"\r\n                      value=\"\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </fieldset>\r\n              <div\r\n                class=\"row g-3 pb-3 pt-4 justify-content-end\"\r\n                *ngIf=\"editFlag\"\r\n              >\r\n                <div class=\"col-auto\">\r\n                  <button\r\n                    type=\"button\"\r\n                    (click)=\"next1()\"\r\n                    [disabled]=\"!messageConfigurationForm1.valid\"\r\n                    class=\"btn smBtn minWdSmBtn btnPrimary\"\r\n                  >\r\n                    Next\r\n                  </button>\r\n                </div>\r\n                <div class=\"col-auto\">\r\n                  <button\r\n                    type=\"button\"\r\n                    (click)=\"previousAll('1')\"\r\n                    class=\"btn smBtn minWdSmBtn btnDarkGrey\"\r\n                  >\r\n                    Previous\r\n                  </button>\r\n                </div>\r\n                <!-- <div class=\"col-auto\">\r\n                  <button  type=\"button\" href=\"role-new.html\" class=\"btn smBtn minWdSmBtn btnSecondary\">Reset</button  >\r\n                </div> -->\r\n                <div class=\"col-auto\">\r\n                  <button\r\n                    type=\"button\"\r\n                    [routerLink]=\"['/addSystem/summary']\"\r\n                    class=\"btn smBtn minWdSmBtn btnSecondary\"\r\n                  >\r\n                    Exit\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </form>\r\n          <div\r\n            fxLayout=\"row wrap\"\r\n            class=\"file\"\r\n            *ngIf=\"\r\n              this.messageConfigurationForm.value.sysChannel[0]\r\n                .messageChannel === 'DB Connection' && tableFlag1\r\n            \"\r\n          >\r\n            <label for=\"name\" class=\"formLbl\">Table</label>\r\n            <select\r\n              class=\"form-select\"\r\n              (change)=\"onTableSlection($event.target.value)\"\r\n              aria-label=\"Default select example\"\r\n            >\r\n              <option hidden value=\"\" disabled selected>\r\n                --Please select--\r\n              </option>\r\n              <option *ngFor=\"let i of table\" [value]=\"i\">{{ i }}</option>\r\n            </select>\r\n          </div>\r\n          <form\r\n            action=\"\"\r\n            class=\"formStyle dbCardStyle\"\r\n            [formGroup]=\"tcpForm\"\r\n            *ngIf=\"tab12 || !editFlag\"\r\n            style=\"margin-bottom: 20px\"\r\n          >\r\n            <div\r\n              class=\"titleStyle mt-2 mb-4\"\r\n              *ngIf=\"\r\n                messageConfigurationForm.value.sysChannel[0].messageFormat !==\r\n                'XML'\r\n              \"\r\n            >\r\n              <h1 class=\"pageTitle\">Header and Service Details</h1>\r\n            </div>\r\n\r\n            <div class=\"row gy-4\">\r\n              <div class=\"col-lg-2\">\r\n                <label for=\"name\" class=\"formLbl\">Header</label>\r\n              </div>\r\n              <div class=\"col-lg-2\">\r\n                <label for=\"name\" class=\"formLbl\">{{ label2 }}</label>\r\n              </div>\r\n              <div class=\"col-lg-2\">\r\n                <label for=\"name\" class=\"formLbl\">Data Type</label>\r\n              </div>\r\n              <div class=\"col-lg-2\">\r\n                <label for=\"name\" class=\"formLbl\">Default Value</label>\r\n              </div>\r\n              <div class=\"col-lg-2\">\r\n                <label for=\"name\" class=\"formLbl\">Encryption Type</label>\r\n              </div>\r\n            </div>\r\n            <fieldset [disabled]=\"!editFlag\">\r\n              <div\r\n                formArrayName=\"sysService\"\r\n                *ngFor=\"\r\n                  let item of tcpForm.get('sysService')['controls'];\r\n                  let i = index\r\n                \"\r\n              >\r\n                <!-- <label for=\"name\" class=\"formLbl\">Header and Service Details</label> -->\r\n                <div\r\n                  class=\"row gy-4\"\r\n                  style=\"margin-bottom: 30px\"\r\n                  [formGroupName]=\"i\"\r\n                >\r\n                  <div class=\"col-lg-2\">\r\n                    <select\r\n                      class=\"form-select\"\r\n                      formControlName=\"headerTag\"\r\n                      aria-label=\"Default select example\"\r\n                    >\r\n                      <option\r\n                        *ngFor=\"let header of headerTagData\"\r\n                        [value]=\"header.headerTag\"\r\n                      >\r\n                        {{ header.headerTag }}\r\n                      </option>\r\n                    </select>\r\n                  </div>\r\n                  <div class=\"col-lg-2\">\r\n                    <!-- <ng-select id=\"outlineNgSelect\"\r\n                    *ngIf='(messageConfigurationForm.value.sysChannel[0].messageChannel=== \"TCP/IP\" || messageConfigurationForm.value.sysChannel[0].messageFormat=== \"JSON\")'\r\n                    class=\"form-select\" [readonly]=\"!editFlag\" formControlName=\"messageKey\" aria-label=\"Default select example\"\r\n                    (change)=\"onSelectingMessageBasis($event,i)\">\r\n                    <ng-option hidden value=\"\" disabled selected >Please Select Field No</ng-option>\r\n                    <ng-option *ngFor=\"let mkey of isoRespData\" [hidden]=\"try(mkey.fieldNo)\" [value]=\"mkey.fieldNo\">\r\n                      {{mkey.fieldNo}} {{mkey.fieldName}} </ng-option>\r\n                  </ng-select>\r\n                  <ng-select id=\"outlineNgSelect\" *ngIf='(messageConfigurationForm.value.sysChannel[0].messageFormat=== \"XML\")  && !fileUploadClick'\r\n                    class=\"form-select\" [readonly]=\"!editFlag\" formControlName=\"messageKey\" aria-label=\"Default select example\"\r\n                    (change)=\"onselectingTag($event,i)\">\r\n                    <ng-option hidden value=\"\" disabled selected >Please Select Tag</ng-option>\r\n                    <ng-option *ngFor=\"let mkey of xmlRespData\" [hidden]=\"try(mkey)\" [value]=\"mkey\">\r\n                      {{mkey}}\r\n                    </ng-option>\r\n                  </ng-select> -->\r\n                    <ng-select\r\n                      [items]=\"isoRespDataFiltered\"\r\n                      *ngIf=\"\r\n                        messageConfigurationForm.value.sysChannel[0]\r\n                          .messageChannel === 'TCP/IP'\r\n                      \"\r\n                      aria-label=\"Default select example\"\r\n                      bindLabel=\"formattedmKey\"\r\n                      formControlName=\"messageKey\"\r\n                      [disabled]=\"!editFlag\"\r\n                      (change)=\"changeSelectedFieldNo($event, i)\"\r\n                    >\r\n                      <ng-option hidden value=\"\" disabled selected\r\n                        >--Please Select--</ng-option\r\n                      >\r\n                      <!-- <ng-select [items]=\"isoRespDataFiltered\"\r\n                  *ngIf='messageConfigurationForm.value.sysChannel[0].messageChannel=== \"TCP/IP\"'\r\n                  aria-label=\"Default select example\"\r\n                  class=\"form-select\"\r\n                  bindLabel=\"formattedmKey\"\r\n                  formControlName=\"messageKey\"\r\n                  [disabled]=\"!editFlag\"\r\n                  (change)=\"changeSelectedFieldNo($event, i)\"\r\n                  placeholder=\"Select city\"> -->\r\n                    </ng-select>\r\n\r\n                    <ng-select\r\n                      [items]=\"xmlRespDataFiltered\"\r\n                      *ngIf=\"\r\n                        messageConfigurationForm.value.sysChannel[0]\r\n                          .messageFormat === 'XML' && !fileUploadClick\r\n                      \"\r\n                      aria-label=\"Default select example\"\r\n                      bindLabel=\"messageKey\"\r\n                      formControlName=\"messageKey\"\r\n                      (change)=\"onselectingTag($event, i)\"\r\n                    >\r\n                      <!-- <ng-select [items]=\"xmlRespDataFiltered\"\r\n                  *ngIf='messageConfigurationForm.value.sysChannel[0].messageFormat=== \"XML\" && !fileUploadClick' aria-label=\"Default select example\"\r\n                  class=\"form-select\"\r\n                  bindLabel=\"messageKey\"\r\n                  formControlName=\"messageKey\"\r\n                  (change)=\"onselectingTag($event,i)\"> -->\r\n                    </ng-select>\r\n                    <select\r\n                      *ngIf=\"\r\n                        this.messageConfigurationForm.value.sysChannel[0]\r\n                          .messageChannel === 'DB Connection' &&\r\n                        tableDropDownClick\r\n                      \"\r\n                      class=\"form-select\"\r\n                      formControlName=\"messageKey\"\r\n                      aria-label=\"Default select example\"\r\n                      (change)=\"onselectingColumnName($event.target.value, i)\"\r\n                    >\r\n                      <option hidden value=\"\" disabled selected>\r\n                        Please Select Tag\r\n                      </option>\r\n                      <option *ngFor=\"let mkey of tabelData\" [value]=\"mkey\">\r\n                        {{ mkey[1] }}\r\n                      </option>\r\n                    </select>\r\n                    <input\r\n                      id=\"externalIp\"\r\n                      *ngIf=\"\r\n                        this.messageConfigurationForm.value.sysChannel[0]\r\n                          .messageChannel === 'DB Connection' &&\r\n                        !tableDropDownClick\r\n                      \"\r\n                      formControlName=\"messageKey\"\r\n                      type=\"text\"\r\n                      class=\"form-control\"\r\n                      value=\"\"\r\n                      readonly\r\n                    />\r\n                    <input\r\n                      id=\"externalIp\"\r\n                      *ngIf=\"\r\n                        messageConfigurationForm.value.sysChannel[0]\r\n                          .messageFormat === 'XML' && fileUploadClick\r\n                      \"\r\n                      formControlName=\"messageKey\"\r\n                      type=\"text\"\r\n                      class=\"form-control\"\r\n                      value=\"\"\r\n                      readonly\r\n                    />\r\n                    <input\r\n                      id=\"externalIp\"\r\n                      *ngIf=\"\r\n                        messageConfigurationForm.value.sysChannel[0]\r\n                          .messageFormat === 'JSON'\r\n                      \"\r\n                      formControlName=\"messageKey\"\r\n                      type=\"text\"\r\n                      class=\"form-control\"\r\n                      value=\"\"\r\n                    />\r\n                  </div>\r\n                  <div class=\"col-lg-2\">\r\n                    <ng-select\r\n                      id=\"outlineNgSelect\"\r\n                      *ngIf=\"\r\n                        messageConfigurationForm.value.sysChannel[0]\r\n                          .messageChannel === 'TCP/IP'\r\n                      \"\r\n                      formControlName=\"dataType\"\r\n                      [readonly]=\"!editFlag\"\r\n                      aria-label=\"Default select example\"\r\n                    >\r\n                      <!-- <ng-select id=\"outlineNgSelect\" class=\"form-select\"\r\n                    *ngIf='messageConfigurationForm.value.sysChannel[0].messageChannel=== \"TCP/IP\" '\r\n                    formControlName=\"dataType\" [readonly]=\"!editFlag\" aria-label=\"Default select example\"> -->\r\n                      <ng-option hidden value=\"\" disabled selected\r\n                        >Please Select Data Type</ng-option\r\n                      >\r\n                      <ng-option *ngFor=\"let type of typeDataIso\" [value]=\"type\"\r\n                        >{{ type }}\r\n                      </ng-option>\r\n                    </ng-select>\r\n                    <select\r\n                      class=\"form-select\"\r\n                      *ngIf=\"\r\n                        messageConfigurationForm.value.sysChannel[0]\r\n                          .messageFormat === 'XML' ||\r\n                        messageConfigurationForm.value.sysChannel[0]\r\n                          .messageFormat === 'JSON'\r\n                      \"\r\n                      formControlName=\"dataType\"\r\n                      aria-label=\"Default select example\"\r\n                    >\r\n                      <option value=\"numeric\">Numeric</option>\r\n                      <option value=\"alphaNumeric\">Alpha Numeric</option>\r\n                      <option value=\"date\">Date</option>\r\n\r\n                      <option></option>\r\n                    </select>\r\n\r\n                    <input\r\n                      id=\"externalIp\"\r\n                      *ngIf=\"\r\n                        this.messageConfigurationForm.value.sysChannel[0]\r\n                          .messageChannel === 'DB Connection'\r\n                      \"\r\n                      formControlName=\"dataType\"\r\n                      type=\"text\"\r\n                      class=\"form-control\"\r\n                      readonly\r\n                      value=\"\"\r\n                    />\r\n                  </div>\r\n                  <div class=\"col-lg-2\">\r\n                    <input\r\n                      id=\"externalIp\"\r\n                      formControlName=\"headerValue\"\r\n                      type=\"text\"\r\n                      class=\"form-control\"\r\n                      value=\"\"\r\n                    />\r\n                  </div>\r\n                  <div class=\"col-lg-2\">\r\n                    <select\r\n                      class=\"form-select\"\r\n                      formControlName=\"encryption\"\r\n                      aria-label=\"Default select example\"\r\n                    >\r\n                      <!-- <option *ngFor=\"let type of encryptionArray\" [value]=\"type\">{{type}}\r\n                    <option> -->\r\n                      <option value=\"No Encryption\">No Encryption</option>\r\n                      <option value=\"BASE64\">BASE 64</option>\r\n                      <option value=\"SHA256\">SHA 256</option>\r\n                      <option value=\"SHA512\">SHA 512</option>\r\n                    </select>\r\n                  </div>\r\n                  <div class=\"col-lg-2\" *ngIf=\"editFlag\">\r\n                    <label for=\"name\" class=\"formLbl\"></label>\r\n                    <br />\r\n                    <a type=\"button\" (click)=\"delete(i)\" class=\"deleteIcon2\"\r\n                      ><img src=\"assets/images/delete-icon.svg\" alt=\"...\"\r\n                    /></a>\r\n                    <!-- <button  type=\"button\" href=\"javascript:void(0)\" (click)=\"delete(i)\" class=\"addIcon deleteIcon\">\r\n                    <img src=\"assets/images/delete-icon.png\" alt=\"...\"></button  > -->\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </fieldset>\r\n            <div class=\"row g-3 pt-4\" *ngIf=\"editFlag\">\r\n              <div class=\"col-auto\" (click)=\"addBioDocs()\">\r\n                <a class=\"addIcon primarybg\">\r\n                  <span\r\n                    ><img src=\"assets/images/plus-icon.svg\" alt=\"...\"\r\n                  /></span>\r\n                </a>\r\n              </div>\r\n              <div class=\"row g-3 pb-3 pt-4 justify-content-end\">\r\n                <div class=\"col-auto\">\r\n                  <button\r\n                    type=\"button\"\r\n                    [disabled]=\"!tcpForm.valid\"\r\n                    class=\"btn smBtn minWdSmBtn btnPrimary\"\r\n                    (click)=\"allMethod()\"\r\n                  >\r\n                    Next\r\n                  </button>\r\n                </div>\r\n                <div class=\"col-auto\">\r\n                  <button\r\n                    type=\"button\"\r\n                    (click)=\"previousAll('2')\"\r\n                    class=\"btn smBtn minWdSmBtn btnDarkGrey\"\r\n                  >\r\n                    Previous\r\n                  </button>\r\n                </div>\r\n                <!-- <div class=\"col-auto\">\r\n                  <button  type=\"button\" href=\"role-new.html\" class=\"btn smBtn minWdSmBtn btnSecondary\">Reset</button  >\r\n                </div> -->\r\n                <div class=\"col-auto\">\r\n                  <button\r\n                    type=\"button\"\r\n                    href=\"javascript:void(0);\"\r\n                    [routerLink]=\"['/addSystem/summary']\"\r\n                    class=\"btn smBtn minWdSmBtn btnSecondary\"\r\n                  >\r\n                    Exit\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n        <div\r\n          class=\"tab-pane fade show active\"\r\n          id=\"profile\"\r\n          role=\"tabpanel\"\r\n          aria-labelledby=\"profile-tab\"\r\n          *ngIf=\"tab2\"\r\n        >\r\n          <div\r\n            style=\"width: 60%\"\r\n            *ngIf=\"\r\n              messageConfigurationForm1.value.sysChannel[0].messageFormat ==\r\n                'XML' && tab22\r\n            \"\r\n          >\r\n            <div fxFlex=\"60\">\r\n              <div class=\"fileUpload\">\r\n                <div class=\"formS\">\r\n                  <div\r\n                    class=\"file-upload-wrapper\"\r\n                    #fileWrapper1\r\n                    data-text=\"File Upload\"\r\n                  >\r\n                    <input\r\n                      (change)=\"uploadFileXml1($event)\"\r\n                      name=\"file-upload-field\"\r\n                      type=\"file\"\r\n                      class=\"file-upload-field\"\r\n                      value=\"\"\r\n                    />\r\n                    <button\r\n                      type=\"button\"\r\n                      mat-raised-button\r\n                      type=\"button\"\r\n                      class=\"btnFile\"\r\n                      (click)=\"chooseFile1()\"\r\n                    ></button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <form\r\n            action=\"\"\r\n            class=\"formStyle\"\r\n            [formGroup]=\"messageConfigurationForm1\"\r\n            *ngIf=\"\r\n              (basicInfoForm.value.messsageType === 'A' && tab21) ||\r\n              (basicInfoForm.value.messsageType === 'A' && !editFlag)\r\n            \"\r\n          >\r\n            <div\r\n              class=\"dbCardStyle\"\r\n              formArrayName=\"sysChannel\"\r\n              *ngFor=\"\r\n                let item of messageConfigurationForm1.get('sysChannel')[\r\n                  'controls'\r\n                ];\r\n                let i = index\r\n              \"\r\n            >\r\n              <!-- <label for=\"name\" class=\"formLbl\">Outgoing Message Configuration</label> -->\r\n              <div class=\"titleStyle mt-2 mb-4\">\r\n                <h2 class=\"pageTitle\">Outgoing Message Configuration</h2>\r\n              </div>\r\n              <fieldset [disabled]=\"!editFlag\">\r\n                <div class=\"row gy-4\" [formGroupName]=\"i\">\r\n                  <div class=\"col-lg-4\">\r\n                    <label for=\"name\" class=\"formLbl\"\r\n                      >Outgoing Message Protocol <span class=\"colorRed\">*</span>\r\n                    </label>\r\n\r\n                    <select\r\n                      class=\"form-select\"\r\n                      formControlName=\"messageChannel\"\r\n                      aria-label=\"Default select example\"\r\n                      (change)=\"onProtocalSlection1($event.target.value)\"\r\n                    >\r\n                      <!-- <option *ngFor=\"let i of protocolArray\" [value]=\"i\">{{\r\n                      i\r\n                      }}</option> -->\r\n                      <option hidden value=\"\" disabled selected>\r\n                        --Please select--\r\n                      </option>\r\n                      <option value=\"MT\">MT</option>\r\n                      <option value=\"MX\">MX</option>\r\n                      <option value=\"TCP/IP\">TCP/IP</option>\r\n                      <option value=\"Https/Http\">HTTPS/HTTP</option>\r\n                      <option value=\"MDB\">MDB</option>\r\n                      <option value=\"EJB\">EJB</option>\r\n                      <option value=\"DB Connection\">DB Connection</option>\r\n                    </select>\r\n                  </div>\r\n                  <div\r\n                    class=\"col-lg-4\"\r\n                    *ngIf=\"\r\n                      messageConfigurationForm1.value.sysChannel[0]\r\n                        .messageChannel !== 'DB Connection'\r\n                    \"\r\n                  >\r\n                    <label for=\"name\" class=\"formLbl\"\r\n                      >Data Type <span class=\"colorRed\">*</span></label\r\n                    >\r\n\r\n                    <select\r\n                      class=\"form-select\"\r\n                      formControlName=\"messageFormat\"\r\n                      aria-label=\"Default select example\"\r\n                    >\r\n                      <option hidden value=\"\" disabled selected>\r\n                        --Please select--\r\n                      </option>\r\n                      <option *ngFor=\"let i of dataType1\" [value]=\"i\">\r\n                        {{ i }}\r\n                      </option>\r\n                    </select>\r\n                  </div>\r\n                  <div\r\n                    class=\"col-lg-4\"\r\n                    *ngIf=\"\r\n                      messageConfigurationForm1.value.sysChannel[0]\r\n                        .messageChannel === 'MDB'\r\n                    \"\r\n                  >\r\n                    <label for=\"name\" class=\"formLbl\">Type of Queue</label>\r\n                    <select\r\n                      class=\"form-select\"\r\n                      formControlName=\"queueType\"\r\n                      aria-label=\"Default select example\"\r\n                    >\r\n                      <option *ngFor=\"let i of queArray\" [value]=\"i\">\r\n                        {{ i }}\r\n                      </option>\r\n                    </select>\r\n                  </div>\r\n                  <div\r\n                    class=\"col-lg-4\"\r\n                    *ngIf=\"\r\n                      messageConfigurationForm1.value.sysChannel[0]\r\n                        .messageChannel === 'MDB' &&\r\n                      messageConfigurationForm1.value.sysChannel[0].queueType\r\n                    \"\r\n                  >\r\n                    <label for=\"name\" class=\"formLbl\">Queue Manager</label>\r\n                    <input\r\n                      id=\"queueManager\"\r\n                      type=\"text\"\r\n                      formControlName=\"queueManager\"\r\n                      class=\"form-control\"\r\n                      placeholder=\"Queue manager\"\r\n                      value=\"\"\r\n                    />\r\n                  </div>\r\n                  <div\r\n                    class=\"col-lg-4\"\r\n                    *ngIf=\"\r\n                      messageConfigurationForm1.value.sysChannel[0]\r\n                        .messageChannel === 'MDB' &&\r\n                      messageConfigurationForm1.value.sysChannel[0].queueType\r\n                    \"\r\n                  >\r\n                    <label for=\"name\" class=\"formLbl\">Queue Name</label>\r\n                    <input\r\n                      id=\"queueName\"\r\n                      type=\"text\"\r\n                      formControlName=\"queueName\"\r\n                      class=\"form-control\"\r\n                      placeholder=\"Queue Name\"\r\n                      value=\"\"\r\n                    />\r\n                  </div>\r\n                  <div\r\n                    class=\"col-lg-4\"\r\n                    *ngIf=\"\r\n                      messageConfigurationForm1.value.sysChannel[0]\r\n                        .messageChannel === 'MDB' &&\r\n                      messageConfigurationForm1.value.sysChannel[0]\r\n                        .queueType === 'IBM'\r\n                    \"\r\n                  >\r\n                    <label for=\"name\" class=\"formLbl\">Connection Factory</label>\r\n                    <input\r\n                      id=\"connectFactory\"\r\n                      type=\"text\"\r\n                      formControlName=\"queueConnFactory\"\r\n                      class=\"form-control\"\r\n                      placeholder=\"Connectiong Factory\"\r\n                      value=\"\"\r\n                    />\r\n                  </div>\r\n                  <div\r\n                    class=\"col-lg-4\"\r\n                    *ngIf=\"\r\n                      messageConfigurationForm1.value.sysChannel[0]\r\n                        .messageChannel === 'MDB' &&\r\n                      messageConfigurationForm1.value.sysChannel[0]\r\n                        .queueType === 'JMS'\r\n                    \"\r\n                  >\r\n                    <label for=\"name\" class=\"formLbl\">Connection Channel</label>\r\n                    <input\r\n                      id=\"queChannel\"\r\n                      type=\"text\"\r\n                      formControlName=\"queueChannel\"\r\n                      class=\"form-control\"\r\n                      placeholder=\"Queue Channel\"\r\n                      value=\"\"\r\n                    />\r\n                  </div>\r\n                  <div\r\n                    class=\"col-lg-4\"\r\n                    *ngIf=\"\r\n                      messageConfigurationForm1.value.sysChannel[0]\r\n                        .messageChannel === 'DB Connection'\r\n                    \"\r\n                  >\r\n                    <label for=\"name\" class=\"formLbl\">User Name</label>\r\n                    <input\r\n                      id=\"userName\"\r\n                      type=\"text\"\r\n                      formControlName=\"dbUsername\"\r\n                      class=\"form-control\"\r\n                      placeholder=\"User Name\"\r\n                      value=\"\"\r\n                    />\r\n                  </div>\r\n\r\n                  <div\r\n                    class=\"col-lg-4\"\r\n                    *ngIf=\"\r\n                      messageConfigurationForm1.value.sysChannel[0]\r\n                        .messageChannel === 'DB Connection'\r\n                    \"\r\n                  >\r\n                    <label for=\"name\" class=\"formLbl\">Password</label>\r\n\r\n                    <div class=\"password_container\">\r\n                      <input\r\n                        id=\"password\"\r\n                        type=\"password\"\r\n                        formControlName=\"dbPassword\"\r\n                        [type]=\"hide ? 'password' : 'text'\"\r\n                        class=\"form-control lineField loginInput\"\r\n                        placeholder=\"Password\"\r\n                      />\r\n\r\n                      <span\r\n                        toggle=\"#pwdFld\"\r\n                        class=\"alignSelf\"\r\n                        (click)=\"hide = !hide\"\r\n                      >\r\n                        <img\r\n                          class=\"showPwd\"\r\n                          *ngIf=\"!hide\"\r\n                          src=\"assets/images/show-icon.svg\"\r\n                          alt=\"...\"\r\n                        />\r\n                        <img\r\n                          class=\"hidePwd\"\r\n                          *ngIf=\"hide\"\r\n                          src=\"assets/images/hide-icon.svg\"\r\n                          alt=\"...\"\r\n                        />\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                  <div\r\n                    class=\"col-lg-4\"\r\n                    *ngIf=\"\r\n                      messageConfigurationForm1.value.sysChannel[0]\r\n                        .messageChannel === 'DB Connection'\r\n                    \"\r\n                  >\r\n                    <label for=\"name\" class=\"formLbl\">Database</label>\r\n                    <input\r\n                      id=\"databaseName\"\r\n                      type=\"text\"\r\n                      formControlName=\"dbServiceName\"\r\n                      class=\"form-control\"\r\n                      placeholder=\"Database Name\"\r\n                      value=\"\"\r\n                    />\r\n                  </div>\r\n                  <div\r\n                    class=\"col-lg-4\"\r\n                    *ngIf=\"\r\n                      messageConfigurationForm1.value.sysChannel[0]\r\n                        .messageChannel === 'DB Connection'\r\n                    \"\r\n                  >\r\n                    <label for=\"name\" class=\"formLbl\">Connecting String</label>\r\n                    <input\r\n                      id=\"connectString\"\r\n                      type=\"text\"\r\n                      formControlName=\"dbConnectString\"\r\n                      class=\"form-control\"\r\n                      placeholder=\"Connecting String\"\r\n                      value=\"\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </fieldset>\r\n              <div\r\n                class=\"row g-3 pb-3 pt-4 justify-content-end\"\r\n                *ngIf=\"editFlag\"\r\n              >\r\n                <div class=\"col-auto\">\r\n                  <button\r\n                    type=\"button\"\r\n                    (click)=\"next2()\"\r\n                    [disabled]=\"\r\n                      !messageConfigurationForm1.valid &&\r\n                      !messageConfigurationForm.valid\r\n                    \"\r\n                    class=\"btn smBtn minWdSmBtn btnPrimary\"\r\n                  >\r\n                    Next\r\n                  </button>\r\n                </div>\r\n                <div class=\"col-auto\">\r\n                  <button\r\n                    type=\"button\"\r\n                    (click)=\"previousAll('3')\"\r\n                    class=\"btn smBtn minWdSmBtn btnDarkGrey\"\r\n                  >\r\n                    Previous\r\n                  </button>\r\n                </div>\r\n                <!-- <div class=\"col-auto\">\r\n                  <button  type=\"button\" href=\"role-new.html\" class=\"btn smBtn minWdSmBtn btnSecondary\">Reset</button  >\r\n                </div> -->\r\n                <div class=\"col-auto\">\r\n                  <button\r\n                    type=\"button\"\r\n                    href=\"javascript:void(0);\"\r\n                    [routerLink]=\"['/addSystem/summary']\"\r\n                    class=\"btn smBtn minWdSmBtn btnSecondary\"\r\n                  >\r\n                    Exit\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </form>\r\n          <div\r\n            fxLayout=\"row wrap\"\r\n            class=\"file\"\r\n            *ngIf=\"\r\n              this.messageConfigurationForm1.value.sysChannel[0]\r\n                .messageChannel === 'DB Connection' && tableFlag2\r\n            \"\r\n          >\r\n            <label for=\"name\" class=\"formLbl\">Table</label>\r\n            <select\r\n              class=\"form-select\"\r\n              (change)=\"onTableSlection1($event.target.value)\"\r\n              aria-label=\"Default select example\"\r\n            >\r\n              <option hidden value=\"\" disabled selected>\r\n                --Please select--\r\n              </option>\r\n              <option *ngFor=\"let i of table2\" [value]=\"i\">{{ i }}</option>\r\n            </select>\r\n          </div>\r\n          <form\r\n            action=\"\"\r\n            class=\"formStyle dbCardStyle\"\r\n            [formGroup]=\"tcpForm1\"\r\n            style=\"margin-bottom: 20px\"\r\n            *ngIf=\"tab22 || !editFlag\"\r\n          >\r\n            <fieldset [disabled]=\"!submitFlagAll || !editFlag\">\r\n              <div\r\n                class=\"titleStyle mt-2 mb-4\"\r\n                *ngIf=\"\r\n                  messageConfigurationForm.value.sysChannel[0].messageFormat !==\r\n                  'XML'\r\n                \"\r\n              >\r\n                <h1 class=\"pageTitle\">Header and Service Details</h1>\r\n              </div>\r\n              <div class=\"row gy-4\">\r\n                <div class=\"col-lg-2\">\r\n                  <label for=\"name\" class=\"formLbl\"\r\n                    >Header <span class=\"colorRed\">*</span></label\r\n                  >\r\n                </div>\r\n                <div class=\"col-lg-2\">\r\n                  <label for=\"name\" class=\"formLbl\"\r\n                    >{{ label2 }} <span class=\"colorRed\">*</span></label\r\n                  >\r\n                </div>\r\n                <div class=\"col-lg-2\">\r\n                  <label for=\"name\" class=\"formLbl\"\r\n                    >Data Type <span class=\"colorRed\">*</span></label\r\n                  >\r\n                </div>\r\n                <div class=\"col-lg-2\">\r\n                  <label for=\"name\" class=\"formLbl\"\r\n                    >Default Value <span class=\"colorRed\">*</span></label\r\n                  >\r\n                </div>\r\n                <div class=\"col-lg-2\">\r\n                  <label for=\"name\" class=\"formLbl\"\r\n                    >Encryption Type <span class=\"colorRed\">*</span></label\r\n                  >\r\n                </div>\r\n              </div>\r\n              <div\r\n                formArrayName=\"sysService\"\r\n                *ngFor=\"\r\n                  let item of tcpForm1.get('sysService')['controls'];\r\n                  let i = index\r\n                \"\r\n              >\r\n                <!-- <label for=\"name\" class=\"formLbl\">Header and Service Details</label> -->\r\n                <div\r\n                  class=\"row gy-4\"\r\n                  style=\"margin-bottom: 30px\"\r\n                  [formGroupName]=\"i\"\r\n                >\r\n                  <div class=\"col-lg-2\">\r\n                    <select\r\n                      class=\"form-select\"\r\n                      formControlName=\"headerTag\"\r\n                      aria-label=\"Default select example\"\r\n                    >\r\n                      <option\r\n                        *ngFor=\"let header of headerTagData\"\r\n                        [value]=\"header.headerTag\"\r\n                      >\r\n                        {{ header.headerTag }}\r\n                      </option>\r\n                    </select>\r\n                  </div>\r\n                  <div class=\"col-lg-2\">\r\n                    <!-- <ng-select id=\"outlineNgSelect\"\r\n                    *ngIf='(messageConfigurationForm1.value.sysChannel[0].messageChannel=== \"TCP/IP\" || messageConfigurationForm1.value.sysChannel[0].messageFormat=== \"JSON\")'\r\n                    class=\"form-select\" [readonly]=\"!editFlag\" formControlName=\"messageKey\" aria-label=\"Default select example\"\r\n                    (change)=\"onSelectingMessageBasis1($event,i)\">\r\n                    <ng-option hidden value=\"\" disabled selected >Please Select Field No</ng-option>\r\n                    <ng-option *ngFor=\"let mkey of isoRespData1\"  [hidden]=\"try(mkey.fieldNo)\" [value]=\"mkey.fieldNo\">\r\n                      {{mkey.fieldNo}} {{mkey.fieldName}} </ng-option>\r\n                  </ng-select>\r\n                  <ng-select id=\"outlineNgSelect\" *ngIf='(messageConfigurationForm1.value.sysChannel[0].messageFormat=== \"XML\")   &&  !fileUploadClickAll'\r\n                    class=\"form-select\" [readonly]=\"!editFlag\" formControlName=\"messageKey\" aria-label=\"Default select example\"\r\n                    (change)=\"onselectingTag1($event,i)\">\r\n                    <ng-option hidden value=\"\" disabled selected >Please Select Tag</ng-option>\r\n                    <ng-option *ngFor=\"let mkey of xmlRespData1\" [hidden]=\"try(mkey)\" [value]=\"mkey\">\r\n                      {{mkey}}\r\n                    </ng-option>\r\n                  </ng-select> -->\r\n                    <ng-select\r\n                      [items]=\"isoRespDataFiltered1\"\r\n                      *ngIf=\"\r\n                        messageConfigurationForm1.value.sysChannel[0]\r\n                          .messageChannel === 'TCP/IP'\r\n                      \"\r\n                      aria-label=\"Default select example\"\r\n                      bindLabel=\"formattedmKey\"\r\n                      formControlName=\"messageKey\"\r\n                      [disabled]=\"!editFlag\"\r\n                      (change)=\"onSelectingMessageBasis1($event, i)\"\r\n                      placeholder=\"Select city\"\r\n                    >\r\n                      <!-- <ng-select [items]=\"isoRespDataFiltered1\"\r\n                  *ngIf='messageConfigurationForm1.value.sysChannel[0].messageChannel=== \"TCP/IP\"'\r\n                  aria-label=\"Default select example\"\r\n                  class=\"form-select\"\r\n                  bindLabel=\"formattedmKey\"\r\n                  formControlName=\"messageKey\"\r\n                  [disabled]=\"!editFlag\"\r\n                  (change)=\"onSelectingMessageBasis1($event,i)\"\r\n                  placeholder=\"Select city\"> -->\r\n                    </ng-select>\r\n\r\n                    <ng-select\r\n                      [items]=\"xmlRespDataFiltered1\"\r\n                      *ngIf=\"\r\n                        messageConfigurationForm1.value.sysChannel[0]\r\n                          .messageFormat === 'XML' && !fileUploadClick\r\n                      \"\r\n                      aria-label=\"Default select example\"\r\n                      bindLabel=\"messageKey\"\r\n                      formControlName=\"messageKey\"\r\n                      (change)=\"onselectingTag1($event, i)\"\r\n                    >\r\n                      <!-- <ng-select [items]=\"xmlRespDataFiltered1\"\r\n                  *ngIf='messageConfigurationForm1.value.sysChannel[0].messageFormat=== \"XML\" && !fileUploadClick' aria-label=\"Default select example\"\r\n                  class=\"form-select\"\r\n                  bindLabel=\"messageKey\"\r\n                  formControlName=\"messageKey\"\r\n                  (change)=\"onselectingTag1($event,i)\"> -->\r\n                    </ng-select>\r\n                    <select\r\n                      *ngIf=\"\r\n                        this.messageConfigurationForm1.value.sysChannel[0]\r\n                          .messageChannel === 'DB Connection' &&\r\n                        tableDropDownClick1\r\n                      \"\r\n                      class=\"form-select\"\r\n                      formControlName=\"messageKey\"\r\n                      aria-label=\"Default select example\"\r\n                      (change)=\"onselectingColumnName1($event.target.value, i)\"\r\n                    >\r\n                      <option hidden value=\"\" disabled selected>\r\n                        Please Select Tag\r\n                      </option>\r\n                      <option *ngFor=\"let mkey of tabelData1\" [value]=\"mkey\">\r\n                        {{ mkey[1] }}\r\n                      </option>\r\n                    </select>\r\n                    <input\r\n                      id=\"externalIp\"\r\n                      *ngIf=\"\r\n                        this.messageConfigurationForm1.value.sysChannel[0]\r\n                          .messageChannel === 'DB Connection' &&\r\n                        !tableDropDownClick1\r\n                      \"\r\n                      formControlName=\"messageKey\"\r\n                      type=\"text\"\r\n                      class=\"form-control\"\r\n                      value=\"\"\r\n                      readonly\r\n                    />\r\n\r\n                    <input\r\n                      id=\"externalIp\"\r\n                      *ngIf=\"\r\n                        messageConfigurationForm1.value.sysChannel[0]\r\n                          .messageFormat === 'XML' && fileUploadClickAll\r\n                      \"\r\n                      formControlName=\"messageKey\"\r\n                      type=\"text\"\r\n                      class=\"form-control\"\r\n                      value=\"\"\r\n                      readonly\r\n                    />\r\n                    <input\r\n                      id=\"externalIp\"\r\n                      *ngIf=\"\r\n                        messageConfigurationForm.value.sysChannel[0]\r\n                          .messageFormat === 'JSON'\r\n                      \"\r\n                      formControlName=\"messageKey\"\r\n                      type=\"text\"\r\n                      class=\"form-control\"\r\n                      value=\"\"\r\n                    />\r\n                  </div>\r\n                  <div class=\"col-lg-2\">\r\n                    <ng-select\r\n                      id=\"outlineNgSelect\"\r\n                      [readonly]=\"!editFlag\"\r\n                      *ngIf=\"\r\n                        messageConfigurationForm1.value.sysChannel[0]\r\n                          .messageChannel === 'TCP/IP'\r\n                      \"\r\n                      formControlName=\"dataType\"\r\n                      aria-label=\"Default select example\"\r\n                    >\r\n                      <!-- <ng-select id=\"outlineNgSelect\" class=\"form-select\" [readonly]=\"!editFlag\"\r\n                    *ngIf='(messageConfigurationForm1.value.sysChannel[0].messageChannel=== \"TCP/IP\")'\r\n                 formControlName=\"dataType\" aria-label=\"Default select example\"> -->\r\n                      <ng-option hidden value=\"\" disabled selected\r\n                        >Please Select Data Type</ng-option\r\n                      >\r\n                      <ng-option\r\n                        *ngFor=\"let type of typeDataIso1\"\r\n                        [value]=\"type\"\r\n                        >{{ type }}\r\n                      </ng-option>\r\n                    </ng-select>\r\n                    <select\r\n                      class=\"form-select\"\r\n                      *ngIf=\"\r\n                        messageConfigurationForm1.value.sysChannel[0]\r\n                          .messageFormat === 'XML' ||\r\n                        messageConfigurationForm1.value.sysChannel[0]\r\n                          .messageFormat === 'JSON'\r\n                      \"\r\n                      formControlName=\"dataType\"\r\n                      aria-label=\"Default select example\"\r\n                    >\r\n                      <option value=\"numeric\">Numeric</option>\r\n                      <option value=\"alphaNumeric\">Alpha Numeric</option>\r\n                      <option value=\"date\">Date</option>\r\n\r\n                      <option></option>\r\n                    </select>\r\n\r\n                    <input\r\n                      id=\"externalIp\"\r\n                      *ngIf=\"\r\n                        this.messageConfigurationForm1.value.sysChannel[0]\r\n                          .messageChannel === 'DB Connection'\r\n                      \"\r\n                      formControlName=\"dataType\"\r\n                      type=\"text\"\r\n                      class=\"form-control\"\r\n                      readonly\r\n                      value=\"\"\r\n                    />\r\n                  </div>\r\n                  <div class=\"col-lg-2\">\r\n                    <input\r\n                      id=\"externalIp\"\r\n                      formControlName=\"headerValue\"\r\n                      type=\"text\"\r\n                      class=\"form-control\"\r\n                      value=\"\"\r\n                    />\r\n                  </div>\r\n                  <div class=\"col-lg-2\">\r\n                    <select\r\n                      class=\"form-select\"\r\n                      formControlName=\"encryption\"\r\n                      aria-label=\"Default select example\"\r\n                    >\r\n                      <!-- <option *ngFor=\"let type of encryptionArray\" [value]=\"type\">{{type}}\r\n                    <option> -->\r\n                      <option value=\"No Encryption\">No Encryption</option>\r\n                      <option value=\"BASE64\">BASE 64</option>\r\n                      <option value=\"SHA256\">SHA 256</option>\r\n                      <option value=\"SHA512\">SHA 512</option>\r\n                    </select>\r\n                  </div>\r\n                  <div class=\"col-lg-2\" *ngIf=\"editFlag\">\r\n                    <label for=\"name\" class=\"formLbl\"></label>\r\n                    <br />\r\n                    <a\r\n                      style=\"margin-top: 50px\"\r\n                      type=\"button\"\r\n                      *ngIf=\"submitFlagAll\"\r\n                      (click)=\"delete1(i)\"\r\n                      class=\"tblIcon center\"\r\n                      ><img src=\"assets/images/delete-icon.svg\" alt=\"...\"\r\n                    /></a>\r\n                    <!-- <button  type=\"button\" *ngIf=\"submitFlagAll\" href=\"javascript:void(0)\" (click)=\"delete1(i)\" class=\"addIcon deleteIcon\">\r\n                    <img src=\"assets/images/delete-icon.png\" alt=\"...\"></button  > -->\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </fieldset>\r\n\r\n            <div class=\"row g-3 pt-4\" *ngIf=\"editFlag\">\r\n              <div class=\"col-auto\" (click)=\"addBioDocs1()\">\r\n                <a *ngIf=\"submitFlagAll\" class=\"addIcon primarybg\">\r\n                  <span\r\n                    ><img src=\"assets/images/plus-icon.svg\" alt=\"...\"\r\n                  /></span>\r\n                </a>\r\n              </div>\r\n              <div class=\"row g-3 pb-3 pt-4 justify-content-end\">\r\n                <div class=\"col-auto\">\r\n                  <button\r\n                    type=\"button\"\r\n                    class=\"btn smBtn minWdSmBtn btnPrimary\"\r\n                    (click)=\"submitAll()\"\r\n                    [disabled]=\"!submitFlagAll || !tcpForm1.valid\"\r\n                  >\r\n                    Save\r\n                  </button>\r\n                </div>\r\n                <div class=\"col-auto\">\r\n                  <button\r\n                    type=\"button\"\r\n                    (click)=\"previousAll('4')\"\r\n                    [disabled]=\"!submitFlagAll\"\r\n                    class=\"btn smBtn minWdSmBtn btnDarkGrey\"\r\n                  >\r\n                    Previous\r\n                  </button>\r\n                </div>\r\n                <!-- <div class=\"col-auto\">\r\n                  <button type=\"button\" [disabled]=\"!submitFlagAll\" class=\"btn smBtn minWdSmBtn btnSecondary\">Reset</button>\r\n                </div> -->\r\n                <div class=\"col-auto\">\r\n                  <button\r\n                    type=\"button\"\r\n                    [routerLink]=\"['/addSystem/summary']\"\r\n                    class=\"btn smBtn minWdSmBtn btnSecondary\"\r\n                  >\r\n                    Exit\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </form>\r\n  <div class=\"row g-3 pb-3 pt-4 justify-content-end\" *ngIf=\"basicConfiguration\">\r\n    <div class=\"col-auto\" *ngIf=\"editFlag\">\r\n      <button\r\n        type=\"button\"\r\n        (click)=\"next('basicConfiguration')\"\r\n        [disabled]=\"!basicInfoForm.valid\"\r\n        class=\"btn smBtn minWdSmBtn btnPrimary\"\r\n      >\r\n        Next\r\n      </button>\r\n    </div>\r\n    <div\r\n      class=\"col-auto\"\r\n      *ngIf=\"\r\n        respData &&\r\n        !editFlag &&\r\n        (respData.recordStatus == 'OPEN' || respData.recordStatus == 'O')\r\n      \"\r\n    >\r\n      <button\r\n        type=\"button\"\r\n        class=\"btn smBtn minWdSmBtn btnUpdate\"\r\n        color=\"primary\"\r\n        (click)=\"onSubmitEditAddSystem()\"\r\n      >\r\n        Edit\r\n      </button>\r\n    </div>\r\n    <div\r\n      class=\"col-auto\"\r\n      *ngIf=\"\r\n        respData &&\r\n        !editFlag &&\r\n        (respData.approvedStatus == 'UNAUTHORIZED' ||\r\n          respData.approvedStatus == 'U')\r\n      \"\r\n    >\r\n      <button\r\n        type=\"button\"\r\n        class=\"btn smBtn minWdSmBtn btnAuth\"\r\n        (click)=\"onClickOfAuth()\"\r\n      >\r\n        Auth\r\n      </button>\r\n    </div>\r\n    <div\r\n      class=\"col-auto\"\r\n      *ngIf=\"\r\n        respData &&\r\n        !editFlag &&\r\n        (respData.recordStatus == 'OPEN' || respData.recordStatus == 'O') &&\r\n        (respData.approvedEver == 'YES' || respData.approvedEver == 'Y')\r\n      \"\r\n    >\r\n      <button\r\n        type=\"button\"\r\n        class=\"btn smBtn minWdSmBtn btnPrimary\"\r\n        (click)=\"onClickOfClose()\"\r\n      >\r\n        Close\r\n      </button>\r\n    </div>\r\n    <div\r\n      class=\"col-auto\"\r\n      *ngIf=\"\r\n        respData &&\r\n        !editFlag &&\r\n        (respData.recordStatus == 'CLOSED' || respData.recordStatus == 'C') &&\r\n        (respData.approvedEver == 'YES' || respData.approvedEver == 'Y')\r\n      \"\r\n    >\r\n      <button\r\n        type=\"button\"\r\n        class=\"btn smBtn minWdSmBtn btnPrimary\"\r\n        (click)=\"onClickOfReopen()\"\r\n      >\r\n        Reopen\r\n      </button>\r\n    </div>\r\n\r\n    <div\r\n      class=\"col-auto\"\r\n      *ngIf=\"\r\n        !editFlag &&\r\n        respData &&\r\n        (respData.approvedEver == 'NO' || respData.approvedEver == 'N')\r\n      \"\r\n    >\r\n      <button\r\n        type=\"button\"\r\n        class=\"btn smBtn minWdSmBtn btnPrimary\"\r\n        (click)=\"OndeleteofUser()\"\r\n      >\r\n        Delete\r\n      </button>\r\n    </div>\r\n    <div class=\"col-auto\">\r\n      <button\r\n        type=\"button\"\r\n        href=\"javascript:void(0);\"\r\n        [routerLink]=\"['/addSystem/summary']\"\r\n        class=\"btn smBtn minWdSmBtn btnSecondary\"\r\n      >\r\n        Exit\r\n      </button>\r\n    </div>\r\n  </div>\r\n  <div class=\"dbCardStyle\" *ngIf=\"respData\">\r\n    <div class=\"row\">\r\n      <div class=\"col-sm-6 col-md-4 col-lg-3\">\r\n        <div class=\"csCardStyle\">\r\n          <div class=\"row g-2 align-items-center\">\r\n            <div class=\"col-auto\">\r\n              <div class=\"csCardStyleIcon csCardStyleIconBg1\">\r\n                <!-- <i class=\"fa fa-edit faClass\"></i> -->\r\n                <i class=\"fa fa-edit faClass\"></i>\r\n              </div>\r\n            </div>\r\n            <div class=\"col\">\r\n              <div class=\"csCardStyleText\">\r\n                <h2>Maker</h2>\r\n                <p>{{ respData.creatorId }}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-sm-6 col-md-4 col-lg-3\">\r\n        <div class=\"csCardStyle\">\r\n          <div class=\"row g-2 align-items-center\">\r\n            <div class=\"col-auto\">\r\n              <div class=\"csCardStyleIcon csCardStyleIconBg2\">\r\n                <img src=\"assets/images/time-stamp-icon.svg\" alt=\"...\" />\r\n              </div>\r\n            </div>\r\n            <div class=\"col\">\r\n              <div class=\"csCardStyleText\">\r\n                <h2>Maker Time Stamp</h2>\r\n                <p>{{ respData.createdTime | date : \"MM/dd/yyyy, h:mm a\" }}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-sm-6 col-md-4 col-lg-3\">\r\n        <div class=\"csCardStyle\">\r\n          <div class=\"row g-2 align-items-center\">\r\n            <div class=\"col-auto\">\r\n              <div class=\"csCardStyleIcon csCardStyleIconBg3\">\r\n                <i class=\"fa fa-files-o faRecordStatus\" aria-hidden=\"true\"></i>\r\n                <!-- <i class=\"fa fa-files-o faRecordStatus\" aria-hidden=\"true\"></i> -->\r\n              </div>\r\n            </div>\r\n            <div class=\"col\">\r\n              <div class=\"csCardStyleText\">\r\n                <h2>Record Status</h2>\r\n                <p>{{ respData.recordStatus }}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-sm-6 col-md-4 col-lg-3\">\r\n        <div class=\"csCardStyle\">\r\n          <div class=\"row g-2 align-items-center\">\r\n            <div class=\"col-auto\">\r\n              <div class=\"csCardStyleIcon csCardStyleIconBg4\">\r\n                <i class=\"fa fa-check-square-o faClassChecker\"></i>\r\n              </div>\r\n            </div>\r\n            <div class=\"col\">\r\n              <div class=\"csCardStyleText\">\r\n                <h2>Checker</h2>\r\n                <p>{{ respData.approverId }}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-sm-6 col-md-4 col-lg-3\">\r\n        <div class=\"csCardStyle\">\r\n          <div class=\"row g-2 align-items-center\">\r\n            <div class=\"col-auto\">\r\n              <div class=\"csCardStyleIcon csCardStyleIconBg5\">\r\n                <img src=\"assets/images/checker-time-icon.svg\" alt=\"...\" />\r\n              </div>\r\n            </div>\r\n            <div class=\"col\">\r\n              <div class=\"csCardStyleText\">\r\n                <h2>Checker Time Stamp</h2>\r\n                <p>{{ respData.approvedTime | date : \"MM/dd/yyyy, h:mm a\" }}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-sm-6 col-md-4 col-lg-3\">\r\n        <div class=\"csCardStyle\">\r\n          <div class=\"row g-2 align-items-center\">\r\n            <div class=\"col-auto\">\r\n              <div class=\"csCardStyleIcon csCardStyleIconBg6\">\r\n                <i class=\"fa fa-shield faClassFirstTimeAuth\"></i>\r\n              </div>\r\n            </div>\r\n            <div class=\"col\">\r\n              <div class=\"csCardStyleText\">\r\n                <h2>First Time Authorization</h2>\r\n                <p>{{ respData.approvedEver }}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-sm-6 col-md-4 col-lg-3\">\r\n        <div class=\"csCardStyle\">\r\n          <div class=\"row g-2 align-items-center\">\r\n            <div class=\"col-auto\">\r\n              <div class=\"csCardStyleIcon csCardStyleIconBg7\">\r\n                <img\r\n                  src=\"assets/images/authorize.svg\"\r\n                  alt=\"...\"\r\n                  class=\"modImage\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <div class=\"col\">\r\n              <div class=\"csCardStyleText\">\r\n                <h2>Authorization Status</h2>\r\n                <p>{{ respData.approvedStatus }}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-sm-6 col-md-4 col-lg-3\">\r\n        <div class=\"csCardStyle\">\r\n          <div class=\"row g-2 align-items-center\">\r\n            <div class=\"col-auto\">\r\n              <div class=\"csCardStyleIcon csCardStyleIconBg7\">\r\n                <img\r\n                  src=\"assets/images/modification.svg\"\r\n                  class=\"modImage\"\r\n                  alt=\"...\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <div class=\"col\">\r\n              <div class=\"csCardStyleText\">\r\n                <h2>Modification Number</h2>\r\n                <p>{{ respData.versionNo }}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { HttpErrorResponse } from \"@angular/common/http\";\r\nimport { THIS_EXPR } from \"@angular/compiler/src/output/output_ast\";\r\nimport {\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ElementRef,\r\n  OnInit,\r\n  ViewChild,\r\n} from \"@angular/core\";\r\nimport {\r\n  AbstractControl,\r\n  FormArray,\r\n  FormBuilder,\r\n  FormGroup,\r\n  Validators,\r\n} from \"@angular/forms\";\r\nimport { Router } from \"@angular/router\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { Observable, of, Subject } from \"rxjs\";\r\nimport {\r\n  CanDeactivateGuard,\r\n  IDeactivateComponent,\r\n} from \"src/app/shared/guards/can-deactivate.guard\";\r\nimport { permissionsLabels } from \"src/app/shared/models/fmosNewRolePermissions\";\r\nimport { AddSystemService } from \"src/app/shared/services/add-system.service\";\r\nimport { RoleService } from \"src/app/shared/services/role.service\";\r\nimport { ToastService } from \"src/app/shared/services/toast.service\";\r\nimport Swal from \"sweetalert2\";\r\nimport { DatePipe } from \"@angular/common\";\r\nimport { even } from \"@rxweb/reactive-form-validators\";\r\n@Component({\r\n  selector: \"npr-add-system\",\r\n  templateUrl: \"./add-system.component.html\",\r\n  styleUrls: [\"./add-system.component.scss\"],\r\n  providers: [DatePipe],\r\n})\r\nexport class AddSystemComponent implements OnInit, IDeactivateComponent {\r\n  currentUser: any;\r\n  hide: Boolean = true;\r\n  basicConfiguration: boolean = true;\r\n  messageConfiguration: boolean;\r\n  incomingMessageConfiguration: boolean;\r\n  xml: boolean;\r\n  mdbXml: boolean;\r\n  incomingMdbXml: boolean;\r\n  dbConnection: boolean;\r\n  basicInfoForm: FormGroup;\r\n  messsageTypeArray: string[];\r\n  messageKeyIso: any;\r\n  serviceTypeArray: string[];\r\n  protocolArray: string[];\r\n  messageConfigurationForm: FormGroup;\r\n  dataType: string[];\r\n  tcpForm: FormGroup;\r\n  sysService: any;\r\n  isoRespData: any[] = [];\r\n  typeDataIso: any;\r\n  outgomingTab: boolean;\r\n  messageBasisIso: any[] = [];\r\n  headerValueIso: any;\r\n  headerTagData: any[] = [];\r\n  encryptionArray: any[] = [];\r\n  header: any;\r\n  label2: string;\r\n  xmlRespData: any[] = [];\r\n  selectedFiles: any;\r\n  sizeOfFile: any;\r\n  currentFileUpload: any;\r\n  fileName: any;\r\n  uploadXmlResp: any;\r\n  tableDropDownClick1: boolean;\r\n  result: any[] = [];\r\n  fileNameOut: any;\r\n  queArray: string[];\r\n  tab1: boolean = true;\r\n  selections: any;\r\n  tab2: boolean;\r\n  messageConfigurationForm1: FormGroup;\r\n  tcpForm1: FormGroup;\r\n  dataType1: string[];\r\n  isoRespData1: any;\r\n  messageBasisIso1: any;\r\n  messageKeyIso1: any;\r\n  typeDataIso1: any;\r\n  headerValueIso1: any;\r\n  xmlRespData1: any;\r\n  tableDropDownClick: boolean;\r\n  selectedFiles1: any;\r\n  sizeOfFile1: any;\r\n  currentFileUpload1: any;\r\n  fileName1: any;\r\n  uploadXmlResp1: any;\r\n  label3: string;\r\n  array: any[] = [];\r\n  array1: any = [];\r\n  arrayMessageConfig: any[] = [];\r\n  arrayMessageConfig1: any;\r\n  submitFlag: boolean = true;\r\n  submitFlagAll: boolean = true;\r\n  messageType: string;\r\n  loading: boolean = true;\r\n  all: boolean;\r\n  tempArrayList: any[] = [];\r\n  index: any;\r\n  mdb: boolean;\r\n  respData: any;\r\n  editFlag: boolean = true;\r\n  fileUploadClick: boolean = false;\r\n  fileUploadClickAll: boolean = false;\r\n  sysCodeError: any;\r\n  isSysCodeAlreadyExist: boolean;\r\n  tab3: boolean;\r\n  tab11: boolean = true;\r\n  tab12: boolean;\r\n  tab21: boolean;\r\n  tab22: boolean;\r\n  @ViewChild(\"fileWrapper\") fileUploadWrapper: ElementRef;\r\n  @ViewChild(\"fileWrapper1\") fileUploadWrapper1: ElementRef;\r\n  roleCodes = new permissionsLabels();\r\n  table: any[] = [];\r\n  tableFlag: boolean;\r\n  tabelData: any[] = [];\r\n  tableFlag1: boolean;\r\n  tableFlag2: boolean;\r\n  table2: any[] = [];\r\n  tabelData1: any;\r\n  formTouched1: boolean = true;\r\n  formTouched2: boolean = true;\r\n  formTouched3: boolean = true;\r\n  formTouched4: boolean = true;\r\n  formTouched5: boolean = true;\r\n  headerArray: any[] = [];\r\n  dbConnectionOption: any[] = [];\r\n  isoRespDataFiltered: any[];\r\n  isoRespDataFiltered1: any[];\r\n  xmlRespDataFiltered: any[];\r\n  selectedMessageKeys: string[] = [];\r\n  xmlRespDataFiltered1: any[];\r\n  selectedMessageKeys1: any[] = [];\r\n  idValue: string;\r\n  showDialog = false;\r\n  subject = new Subject<boolean>();\r\n  selectedFilterData: any;\r\n  filteredHomes: any;\r\n  jhnbn: any;\r\n  externalPort: boolean;\r\n\r\n  medianPort: boolean;\r\n  saved: string = \"\";\r\n  headerValues: any[];\r\n  fieldValues: any[] = [];\r\n  // fieldValues: any[];\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private addSystem: AddSystemService,\r\n    private router: Router,\r\n    private roleService: RoleService,\r\n    private toastService: ToastService,\r\n    private spinner: NgxSpinnerService,\r\n    private cdr: ChangeDetectorRef,\r\n    private datePipe: DatePipe\r\n  ) {}\r\n  ngOnInit(): void {\r\n    this.idValue = localStorage.getItem(\"idValue\");\r\n    this.currentUser = localStorage.getItem(\"userFromLogin\");\r\n    this.tempArrayList = [];\r\n    this.fetchingHeadertag();\r\n    this.messsageTypeArray = [\"I\", \"O\", \"A\"];\r\n    this.queArray = [\"IBM\", \"JMS\"];\r\n    this.encryptionArray = [\"No Encryption\", \"BASE 64\", \"SHA 264\", \"SHA 512\"];\r\n    this.selections = \"No Encryption\";\r\n    this.serviceTypeArray = [\"server\", \"client\"];\r\n    this.protocolArray = [\r\n      \"TCP/IP\",\r\n      \"HTTPS/HTTP\",\r\n      \"MDB\",\r\n      \"EJB\",\r\n      \"DB Connection\",\r\n    ];\r\n    this.buildForm(null);\r\n    this.tcpForm = this.fb.group({\r\n      sysService: this.fb.array([this.createSysService()]),\r\n    });\r\n    this.tcpForm1 = this.fb.group({\r\n      sysService: this.fb.array([this.createSysService1()]),\r\n    });\r\n    this.messageConfigurationForm1 = this.fb.group({\r\n      sysChannel: this.fb.array([this.createSysChannel1()]),\r\n    });\r\n    this.messageConfigurationForm = this.fb.group({\r\n      sysChannel: this.fb.array([this.createSysChannel()]),\r\n    });\r\n    if (this.idValue != null) {\r\n      this.addSystem.setIndex({\r\n        index: this.idValue,\r\n      });\r\n    }\r\n    this.addSystem.getIndex().subscribe((resp) => {\r\n      if (resp.index) {\r\n        this.index = resp.index;\r\n        this.addSystem.fecthingAddSystem().subscribe((dataresp) => {\r\n          if (dataresp.result) {\r\n            this.getRespBasedOnId(dataresp.result, resp.index);\r\n          }\r\n        });\r\n      } else {\r\n        this.loading = false;\r\n      }\r\n    });\r\n    this.roleService.fetchScreenPermissions(\"Add System\");\r\n    this.roleService.screenLabelList.subscribe(\r\n      (message) => (this.roleCodes = message)\r\n    );\r\n    setTimeout(() => {\r\n      console.log(this.roleCodes);\r\n    }, 100);\r\n  }\r\n  buildForm(item) {\r\n    this.basicInfoForm = this.fb.group({\r\n      createdTime: [item ? item.createdTime : \"\"],\r\n      creatorId: [item ? item.creatorId : \"\"],\r\n      systemId: [item ? item.systemId : \"\"],\r\n      systemCode: [item ? item.systemCode : \"\", [Validators.required]],\r\n      systemName: [item ? item.systemName : \"\", [Validators.required]],\r\n      serviceType: [item ? item.serviceType : \"\", [Validators.required]],\r\n      messsageType: [item ? item.messsageType : \"\", [Validators.required]],\r\n      medianIp: [item ? item.medianIp : \"\", [Validators.required]],\r\n      sourceUri: [item ? item.sourceUri : \"\"],\r\n      medianUri: [item ? item.medianUri : \"\"],\r\n      medianPort: [item ? item.medianPort : \"\", [Validators.required]],\r\n      sourceIp: [item ? item.sourceIp : \"\", [Validators.required]],\r\n      sourcePort: [item ? item.sourcePort : \"\", [Validators.required]],\r\n    });\r\n  }\r\n  canExit(): Promise<boolean> {\r\n    let isExit: boolean = false;\r\n    if (\r\n      (this.basicInfoForm.touched ||\r\n        this.messageConfigurationForm.touched ||\r\n        this.tcpForm.touched ||\r\n        this.messageConfigurationForm1.touched ||\r\n        this.tcpForm1.touched) &&\r\n      (this.formTouched1 == true ||\r\n        this.formTouched2 == true ||\r\n        this.formTouched3 == true ||\r\n        this.formTouched4 == true ||\r\n        this.formTouched5 == true) &&\r\n      this.saved != \"saved\"\r\n    ) {\r\n      return Swal.fire({\r\n        text: \"There are unsaved changes in the screen. Would you like to navigate to other screen?\",\r\n        showCancelButton: true,\r\n        confirmButtonColor: \"#E6224A\",\r\n        cancelButtonColor: \"#011945\",\r\n        cancelButtonText: \"NO\",\r\n        confirmButtonText: \"YES\",\r\n        icon: \"info\",\r\n      }).then((result) => {\r\n        if (result.isConfirmed === true) {\r\n          isExit = true;\r\n          this.cdr.markForCheck();\r\n          return isExit;\r\n        } else {\r\n          isExit = false;\r\n          this.cdr.markForCheck();\r\n          return isExit;\r\n        }\r\n      });\r\n    } else {\r\n      isExit = true;\r\n      return new Promise((resolve, reject) => {\r\n        if (isExit === true) {\r\n          isExit = true;\r\n          this.cdr.markForCheck();\r\n          resolve(true);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  getRespBasedOnId(resp, arg0: string) {\r\n    this.fileUploadClick = true;\r\n    this.respData = resp.find((item) => item.systemId == arg0);\r\n    this.loading = false;\r\n    this.auditLog();\r\n    //messageConfiguration\r\n    this.editFlag = false;\r\n    this.arrayMessageConfig = this.respData.sysChannel;\r\n    this.arrayMessageConfig = this.respData.sysChannel;\r\n    if (this.respData.messsageType! == \"A\") {\r\n      this.arrayMessageConfig = this.arrayMessageConfig.filter(\r\n        (item) => item.messageType == \"I\" || item.messageType == \"O\"\r\n      );\r\n    }\r\n    if (this.respData.messsageType === \"A\") {\r\n      this.fileUploadClickAll = true;\r\n      this.arrayMessageConfig = this.arrayMessageConfig.filter(\r\n        (item) => item.messageType == \"I\"\r\n      );\r\n    }\r\n\r\n    this.onProtocalSlection(this.arrayMessageConfig[0].messageChannel);\r\n\r\n    if (this.arrayMessageConfig[0].messageChannel === \"TCP/IP\") {\r\n      this.fetchingIso();\r\n      this.label2 = \"Field No\";\r\n    }\r\n    if (this.arrayMessageConfig[0].messageChannel === \"MT\") {\r\n      this.fetchingMT();\r\n      for (\r\n        let index = 0;\r\n        index < this.arrayMessageConfig[0].sysService.length;\r\n        index++\r\n      ) {\r\n        this.onHeaderSelection(\r\n          this.arrayMessageConfig[0].sysService[index].headerTag,\r\n          index\r\n        );\r\n      }\r\n\r\n      this.label2 = \"Field No\";\r\n    }\r\n    if (this.arrayMessageConfig[0].messageChannel === \"MX\") {\r\n      this.fetchingMX();\r\n      for (\r\n        let index = 0;\r\n        index < this.arrayMessageConfig[0].sysService.length;\r\n        index++\r\n      ) {\r\n        this.onHeaderSelection(\r\n          this.arrayMessageConfig[0].sysService[index].headerTag,\r\n          index\r\n        );\r\n      }\r\n\r\n      this.label2 = \"Field No\";\r\n    }\r\n    if (this.arrayMessageConfig[0].messageFormat === \"XML\") {\r\n      this.fetchingXMl();\r\n      this.label2 = \"Tag\";\r\n    }\r\n    if (this.arrayMessageConfig[0].messageChannel === \"DB Connection\") {\r\n      this.label2 = \"Column Name\";\r\n    }\r\n    if (this.arrayMessageConfig[0].messageFormat === \"JSON\") {\r\n      this.label2 = \"Key\";\r\n    }\r\n    while (this.formArrMessageConfig.length > 0) {\r\n      this.formArrMessageConfig.removeAt(this.formArrMessageConfig.length - 1);\r\n    }\r\n    this.arrayMessageConfig.forEach((x) => {\r\n      this.formArrMessageConfig.push(this.fb.group(x));\r\n    });\r\n    //tcForm\r\n    this.array = this.arrayMessageConfig[0].sysService;\r\n    this.onProtocalSlection(this.arrayMessageConfig[0].messageChannel);\r\n    while (this.formArr.length > 0) {\r\n      this.formArr.removeAt(this.formArr.length - 1);\r\n    }\r\n\r\n    if (\r\n      this.messageConfigurationForm.value?.sysChannel[0]?.messageChannel !==\r\n      \"TCP/IP\"\r\n    ) {\r\n      this.array.forEach((x) => {\r\n        this.formArr.push(this.fb.group(x));\r\n      });\r\n    }\r\n    if (this.respData.sysChannel.length > 1) {\r\n      this.arrayMessageConfig1 = this.respData.sysChannel;\r\n      this.arrayMessageConfig1 = this.arrayMessageConfig1.filter(\r\n        (item) => item.messageType == \"O\"\r\n      );\r\n      this.onProtocalSlection1(this.arrayMessageConfig1[0].messageChannel);\r\n      while (this.formArrMessageConfig1.length > 0) {\r\n        this.formArrMessageConfig1.removeAt(\r\n          this.formArrMessageConfig1.length - 1\r\n        );\r\n      }\r\n      this.arrayMessageConfig1.forEach((x) => {\r\n        this.formArrMessageConfig1.push(this.fb.group(x));\r\n      });\r\n      //tcForm1\r\n      this.array1 = this.arrayMessageConfig1[0].sysService;\r\n      this.onProtocalSlection1(this.arrayMessageConfig1[0].messageChannel);\r\n      while (this.formArr1.length > 0) {\r\n        this.formArr1.removeAt(this.formArr1.length - 1);\r\n      }\r\n      if (\r\n        this.messageConfigurationForm1.value?.sysChannel[0]?.messageChannel !==\r\n        \"TCP/IP\"\r\n      ) {\r\n        this.array1.forEach((x) => {\r\n          this.formArr1.push(this.fb.group(x));\r\n        });\r\n      }\r\n    }\r\n    this.buildForm(this.respData);\r\n    this.auditLog();\r\n    this.spinner.hide();\r\n  }\r\n  get formArr() {\r\n    return this.tcpForm.get(\"sysService\") as FormArray;\r\n  }\r\n  get formArr1() {\r\n    return this.tcpForm1.get(\"sysService\") as FormArray;\r\n  }\r\n  get formArrMessageConfig() {\r\n    return this.messageConfigurationForm.get(\"sysChannel\") as FormArray;\r\n  }\r\n  get formArrMessageConfig1() {\r\n    return this.messageConfigurationForm1.get(\"sysChannel\") as FormArray;\r\n  }\r\n  createSysChannel() {\r\n    return this.fb.group({\r\n      channelId: [\"\"],\r\n      dbConnectString: [\"\"],\r\n      dbPassword: [\"\"],\r\n      dbServiceName: [\"\"],\r\n      dbUsername: [\"\"],\r\n      queueChannel: [\"\"],\r\n      queueConnFactory: [\"\"],\r\n      queueManager: [\"\"],\r\n      queueName: [\"\"],\r\n      queueType: [\"\"],\r\n      messageChannel: [\"\", [Validators.required]],\r\n      messageFormat: [\"\", [Validators.required]],\r\n      messageType: [\"\"],\r\n    });\r\n  }\r\n  createSysChannel1() {\r\n    return this.fb.group({\r\n      channelId: [\"\"],\r\n      dbConnectString: [\"\"],\r\n      dbPassword: [\"\"],\r\n      dbServiceName: [\"\"],\r\n      dbUsername: [\"\"],\r\n      queueChannel: [\"\"],\r\n      queueConnFactory: [\"\"],\r\n      queueManager: [\"\"],\r\n      queueName: [\"\"],\r\n      queueType: [\"\"],\r\n      messageChannel: [\"\", [Validators.required]],\r\n      messageFormat: [\"\", [Validators.required]],\r\n      messageType: [\"\"],\r\n    });\r\n  }\r\n  createSysService(): any {\r\n    return this.fb.group({\r\n      channelId: [\"\"],\r\n      dataType: [\"\", [Validators.required]],\r\n      encryption: [\"No Encryption\", [Validators.required]],\r\n      headerTag: [\"\", [Validators.required]],\r\n      headerValue: [\"\", [Validators.required]],\r\n      messageBasis: [\"\"],\r\n      messageKey: [\"\", [Validators.required]],\r\n      serviceId: [\"\"],\r\n      systemChannelId: [\"\"],\r\n    });\r\n  }\r\n  createSysService1(): any {\r\n    return this.fb.group({\r\n      channelId: [\"\"],\r\n      dataType: [\"\", [Validators.required]],\r\n      encryption: [\"No Encryption\", [Validators.required]],\r\n      headerTag: [\"\", [Validators.required]],\r\n      headerValue: [\"\", [Validators.required]],\r\n      messageBasis: [\"\"],\r\n      messageKey: [\"\", [Validators.required]],\r\n      serviceId: [\"\"],\r\n      systemChannelId: [\"\"],\r\n    });\r\n  }\r\n  allMethod() {\r\n    this.tab1 = false;\r\n    this.tab2 = true;\r\n    this.tab21 = true;\r\n    this.tab22 = false;\r\n  }\r\n  auditLog() {\r\n    if (this.respData.approverId === \"null\") {\r\n      this.respData.approverId = \" \";\r\n    }\r\n    if (this.respData.approvedStatus === \"N\") {\r\n      this.respData.approvedStatus = \"UNAUTHORIZED\";\r\n    }\r\n    if (this.respData.approvedStatus === \"Y\") {\r\n      this.respData.approvedStatus = \"AUTHORIZED\";\r\n    }\r\n    if (this.respData.approvedStatus === \"A\") {\r\n      this.respData.approvedStatus = \"AUTHORIZED\";\r\n    }\r\n    if (this.respData.approvedStatus === \"U\") {\r\n      this.respData.approvedStatus = \"UNAUTHORIZED\";\r\n    }\r\n    if (this.respData.recordStatus === \"O\") {\r\n      this.respData.recordStatus = \"OPEN\";\r\n    }\r\n    if (this.respData.recordStatus === \"C\") {\r\n      this.respData.recordStatus = \"CLOSED\";\r\n    }\r\n    if (this.respData.approvedEver === \"N\") {\r\n      this.respData.approvedEver = \"NO\";\r\n    }\r\n    if (this.respData.approvedEver === \"Y\") {\r\n      this.respData.approvedEver = \"YES\";\r\n    }\r\n  }\r\n  next(value) {\r\n    if (value === \"basicConfiguration\") {\r\n      console.log(this.index);\r\n      console.log(this.messageConfigurationForm.value);\r\n      console.log(this.basicInfoForm.value);\r\n      this.addSystem\r\n        .validateCode(this.basicInfoForm.value.systemCode)\r\n        .subscribe((result) => {\r\n          console.log(result);\r\n          this.isSysCodeAlreadyExist = result.exists;\r\n          this.sysCodeError = result.response;\r\n          if (this.isSysCodeAlreadyExist === true && this.index === undefined) {\r\n            Swal.fire({ title: this.sysCodeError + \" !\", icon: \"error\" });\r\n            this.all = false;\r\n\r\n            return;\r\n          } else {\r\n            if (this.index === undefined) {\r\n              this.ipAddressValidating();\r\n            } else {\r\n              if (this.basicInfoForm.value.messsageType == \"I\") {\r\n                this.messageType = \"Incoming\";\r\n              }\r\n              if (this.basicInfoForm.value.messsageType == \"O\") {\r\n                this.messageType = \"Outgoing\";\r\n              }\r\n              this.basicConfiguration = false;\r\n              this.messageConfiguration = true;\r\n              this.incomingMessageConfiguration = false;\r\n              this.xml = false;\r\n              this.mdbXml = false;\r\n              this.incomingMdbXml = false;\r\n              this.dbConnection = false;\r\n            }\r\n          }\r\n        });\r\n    }\r\n    if (\r\n      value === \"messageConfiguration\" &&\r\n      this.basicInfoForm.value.messsageType !== \"A\"\r\n    ) {\r\n      if (\r\n        (this.messageConfigurationForm.value.sysChannel[0].messageChannel ===\r\n          \"TCP/IP\" ||\r\n          this.messageConfigurationForm.value.sysChannel[0].messageChannel ===\r\n            \"Https/Http\" ||\r\n          this.messageConfigurationForm.value.sysChannel[0].messageFormat ===\r\n            \"JSON\" ||\r\n          this.messageConfigurationForm.value.sysChannel[0].messageFormat ===\r\n            \"XML\" ||\r\n          this.messageConfigurationForm.value.sysChannel[0].messageChannel ===\r\n            \"DB Connection\" ||\r\n          this.messageConfigurationForm.value.sysChannel[0].messageChannel ===\r\n            \"MT\" ||\r\n          this.messageConfigurationForm.value.sysChannel[0].messageChannel ===\r\n            \"MX\") &&\r\n        this.basicInfoForm.value.messsageType != \"A\"\r\n      ) {\r\n        this.messageConfigurationForm.value.sysChannel[0].messageType =\r\n          this.basicInfoForm.value.messsageType;\r\n        this.basicConfiguration = false;\r\n        this.messageConfiguration = false;\r\n        this.incomingMessageConfiguration = true;\r\n        this.xml = false;\r\n        this.mdb = false;\r\n        this.mdbXml = false;\r\n        this.incomingMdbXml = false;\r\n        this.dbConnection = false;\r\n        this.tableFlag = false;\r\n        if (\r\n          this.index === undefined &&\r\n          this.messageConfigurationForm.value.sysChannel[0].messageChannel ===\r\n            \"TCP/IP\"\r\n        ) {\r\n          this.fetchingIso();\r\n          this.label2 = \"Field No\";\r\n        }\r\n        if (\r\n          this.index !== undefined &&\r\n          this.messageConfigurationForm.value.sysChannel[0].messageChannel ===\r\n            \"TCP/IP\"\r\n        ) {\r\n          this.label2 = \"Field No\";\r\n        }\r\n\r\n        if (\r\n          this.messageConfigurationForm.value.sysChannel[0].messageFormat ===\r\n          \"XML\"\r\n        ) {\r\n          this.fetchingXMl();\r\n          this.label2 = \"Tag\";\r\n        }\r\n        if (\r\n          this.messageConfigurationForm.value.sysChannel[0].messageFormat ===\r\n          \"JSON\"\r\n        ) {\r\n          this.fetchingXMl();\r\n          this.label2 = \"Key\";\r\n        }\r\n      }\r\n      if (\r\n        (this.messageConfigurationForm.value.sysChannel[0].messageFormat ===\r\n          \"FLATFILE\" ||\r\n          this.messageConfigurationForm.value.sysChannel[0].messageFormat ===\r\n            \"CSV/EXCEL\") &&\r\n        this.basicInfoForm.value.messsageType != \"A\"\r\n      ) {\r\n        this.messageConfigurationForm.value.sysChannel[0].messageType =\r\n          this.basicInfoForm.value.messsageType;\r\n        this.basicConfiguration = false;\r\n        this.messageConfiguration = false;\r\n        this.incomingMessageConfiguration = false;\r\n        this.xml = false;\r\n        this.mdb = true;\r\n        this.mdbXml = false;\r\n        this.incomingMdbXml = false;\r\n        this.dbConnection = false;\r\n        this.tableFlag = false;\r\n      }\r\n      if (\r\n        this.messageConfigurationForm.value.sysChannel[0].messageChannel ===\r\n        \"DB Connection\"\r\n      ) {\r\n        this.fetchDatabaseTable();\r\n        this.label2 = \"Column Name\";\r\n        this.basicInfoForm.value.messsageType;\r\n        this.basicConfiguration = false;\r\n        this.messageConfiguration = false;\r\n        this.incomingMessageConfiguration = true;\r\n        this.xml = false;\r\n        this.mdb = false;\r\n        this.mdbXml = false;\r\n        this.incomingMdbXml = false;\r\n        this.dbConnection = false;\r\n        this.tableFlag = true;\r\n      }\r\n      if (\r\n        this.messageConfigurationForm.value.sysChannel[0].messageChannel ===\r\n        \"MT\"\r\n      ) {\r\n        this.fetchingMT();\r\n        this.label2 = \"Field No\";\r\n      }\r\n      if (\r\n        this.messageConfigurationForm.value.sysChannel[0].messageChannel ===\r\n        \"MX\"\r\n      ) {\r\n        this.fetchingMX();\r\n        this.label2 = \"Field No\";\r\n      }\r\n    }\r\n    if (\r\n      value === \"basicConfiguration\" &&\r\n      this.basicInfoForm.value.messsageType === \"A\"\r\n    ) {\r\n      this.all = true;\r\n      this.tab1 = true;\r\n      this.tab11 = true;\r\n      this.tab12 = false;\r\n      this.tab2 = false;\r\n    }\r\n  }\r\n  fetchingMX() {\r\n    this.headerValues = [];\r\n    this.headerValues = [\"AppHdr\"];\r\n  }\r\n  fetchingMT() {\r\n    this.headerValues = [];\r\n    this.headerValues = [\"Block 1\", \"Block 2\", \"Block 3\", \"Block 5\"];\r\n  }\r\n  fetchDatabaseTable() {\r\n    this.messageConfigurationForm.value.sysChannel[0].messageType =\r\n      this.basicInfoForm.value.messsageType;\r\n    console.log(this.messageConfigurationForm.value.sysChannel[0]);\r\n    this.addSystem\r\n      .pingDataSource(\r\n        this.messageConfigurationForm.value.sysChannel[0].dbConnectString,\r\n        this.messageConfigurationForm.value.sysChannel[0].dbServiceName,\r\n        this.messageConfigurationForm.value.sysChannel[0].dbUsername,\r\n        this.messageConfigurationForm.value.sysChannel[0].dbPassword\r\n      )\r\n      .subscribe((resp) => {\r\n        console.log(\"resp from backend for fetching database tables \", resp);\r\n        this.table = resp;\r\n      });\r\n\r\n    if (this.index !== undefined) {\r\n      for (\r\n        let index = 0;\r\n        index < this.tcpForm.value.sysService.length;\r\n        index++\r\n      ) {\r\n        const filteredHomes =\r\n          this.tcpForm.value.sysService[index].messageKey.split(\",\");\r\n        this.tcpForm\r\n          .get(\"sysService\")\r\n          [\"controls\"][index].get(\"messageKey\")\r\n          .setValue(filteredHomes[1]);\r\n      }\r\n    }\r\n    this.label2 = \"Column Name\";\r\n  }\r\n  fetchDatabaseTable1() {\r\n    console.log(this.messageConfigurationForm.value.sysChannel[0]);\r\n    this.addSystem\r\n      .pingDataSource(\r\n        this.messageConfigurationForm1.value.sysChannel[0].dbConnectString,\r\n        this.messageConfigurationForm1.value.sysChannel[0].dbServiceName,\r\n        this.messageConfigurationForm1.value.sysChannel[0].dbUsername,\r\n        this.messageConfigurationForm1.value.sysChannel[0].dbPassword\r\n      )\r\n      .subscribe((resp) => {\r\n        console.log(\"resp from backend for fetching database tables \", resp);\r\n        this.table2 = resp;\r\n      });\r\n\r\n    if (this.index !== undefined) {\r\n      for (\r\n        let index = 0;\r\n        index < this.tcpForm1.value.sysService.length;\r\n        index++\r\n      ) {\r\n        const filteredHomes =\r\n          this.tcpForm1.value.sysService[index].messageKey.split(\",\");\r\n        this.tcpForm1\r\n          .get(\"sysService\")\r\n          [\"controls\"][index].get(\"messageKey\")\r\n          .setValue(filteredHomes[1]);\r\n      }\r\n    }\r\n    this.label2 = \"Column Name\";\r\n  }\r\n  onTableSlection(event) {\r\n    this.tableDropDownClick = true;\r\n    this.addSystem\r\n      .coulmnNameBasedonTableName(\r\n        this.messageConfigurationForm.value.sysChannel[0].dbConnectString,\r\n        this.messageConfigurationForm.value.sysChannel[0].dbServiceName,\r\n        this.messageConfigurationForm.value.sysChannel[0].dbUsername,\r\n        this.messageConfigurationForm.value.sysChannel[0].dbPassword,\r\n        event\r\n      )\r\n      .subscribe((resp) => {\r\n        console.log(\"resp from backend for fetching database tables \", resp);\r\n        this.tabelData = resp;\r\n      });\r\n  }\r\n  onTableSlection1(event) {\r\n    this.tableDropDownClick1 = true;\r\n    this.addSystem\r\n      .coulmnNameBasedonTableName(\r\n        this.messageConfigurationForm1.value.sysChannel[0].dbConnectString,\r\n        this.messageConfigurationForm1.value.sysChannel[0].dbServiceName,\r\n        this.messageConfigurationForm1.value.sysChannel[0].dbUsername,\r\n        this.messageConfigurationForm1.value.sysChannel[0].dbPassword,\r\n        event\r\n      )\r\n      .subscribe((resp) => {\r\n        console.log(\"resp from backend for fetching database tables \", resp);\r\n        this.tabelData1 = resp;\r\n      });\r\n  }\r\n  ipAddressValidating() {\r\n    let payload: any = {};\r\n    (payload.sourceIp = this.basicInfoForm.value.sourceIp),\r\n      (payload.sourcePort = this.basicInfoForm.value.sourcePort),\r\n      (payload.medianIp = this.basicInfoForm.value.medianIp),\r\n      (payload.medianPort = this.basicInfoForm.value.medianPort);\r\n    this.addSystem.validatePort(payload).subscribe(\r\n      (resp) => {\r\n        if (resp == true) {\r\n          if (this.basicInfoForm.value.messsageType == \"I\") {\r\n            this.messageType = \"Incoming\";\r\n          }\r\n          if (this.basicInfoForm.value.messsageType == \"O\") {\r\n            this.messageType = \"Outgoing\";\r\n          }\r\n          this.basicConfiguration = false;\r\n          this.messageConfiguration = true;\r\n          this.incomingMessageConfiguration = false;\r\n          this.xml = false;\r\n          this.mdbXml = false;\r\n          this.incomingMdbXml = false;\r\n          this.dbConnection = false;\r\n          this.tableFlag = false;\r\n        }\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n        Swal.fire({ title: error.error.message + \" !\", icon: \"error\" });\r\n        this.all = false;\r\n        return;\r\n      }\r\n    );\r\n  }\r\n  next1() {\r\n    if (\r\n      (this.index === undefined &&\r\n        this.messageConfigurationForm.value.sysChannel[0].messageChannel ===\r\n          \"TCP/IP\") ||\r\n      this.messageConfigurationForm.value.sysChannel[0].messageFormat === \"JSON\"\r\n    ) {\r\n      this.fetchingIso();\r\n      this.label2 = \"Field No\";\r\n    }\r\n    if (\r\n      this.messageConfigurationForm.value.sysChannel[0].messageFormat === \"XML\"\r\n    ) {\r\n      this.fetchingXMl();\r\n      this.label2 = \"Tag\";\r\n    }\r\n    if (\r\n      this.messageConfigurationForm.value.sysChannel[0].messageChannel ===\r\n      \"DB Connection\"\r\n    ) {\r\n      // this.fetchingXMl();\r\n      this.label2 = \"Column name\";\r\n      this.tableFlag1 = true;\r\n      this.fetchDatabaseTable();\r\n    }\r\n    this.tab1 = true;\r\n    this.tab11 = false;\r\n    this.tab12 = true;\r\n    this.tab2 = false;\r\n  }\r\n  next2() {\r\n    if (\r\n      this.messageConfigurationForm1.value.sysChannel[0].messageChannel ===\r\n        \"TCP/IP\" ||\r\n      this.messageConfigurationForm.value.sysChannel[0].messageFormat === \"JSON\"\r\n    ) {\r\n      this.fetchingIso1();\r\n      this.label3 = \"Field No\";\r\n    }\r\n    if (\r\n      this.messageConfigurationForm1.value.sysChannel[0].messageFormat === \"XML\"\r\n    ) {\r\n      this.fetchingXMl1();\r\n      this.label3 = \"Tag\";\r\n    }\r\n    if (\r\n      this.messageConfigurationForm1.value.sysChannel[0].messageChannel ===\r\n      \"DB Connection\"\r\n    ) {\r\n      this.fetchDatabaseTable1();\r\n      (this.label3 = \"Column Name\"), (this.tableFlag2 = true);\r\n    }\r\n\r\n    this.tab1 = false;\r\n    this.tab2 = true;\r\n    this.tab21 = false;\r\n    this.tab22 = true;\r\n    this.basicConfiguration = false;\r\n  }\r\n  onClickOfAuth() {\r\n    Swal.fire({\r\n      //text: 'Unable to process' + 'Error ' + this.responseforfileupload.errorMessage + 'Do you want to Proceed??',\r\n      text: \"You are trying to Authorize record. \" + \" Do you want to proceed?\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3e54b8\",\r\n      cancelButtonColor: \"#d33\",\r\n      // confirmButtonText: 'PROCEED.'\r\n      cancelButtonText: \"NO\",\r\n      confirmButtonText: \"YES\",\r\n      icon: \"info\",\r\n      iconColor: \"#d33\",\r\n    }).then((result) => {\r\n      console.log(\"this is reopen \", result);\r\n      if (result.isConfirmed === true) {\r\n        if (this.currentUser === this.respData.creatorId) {\r\n          Swal.fire({ text: \"Maker Cannot Authorize Record!\", icon: \"error\" });\r\n          return;\r\n        }\r\n        let obj_test: any = {};\r\n        if (\r\n          this.basicInfoForm.value.messsageType === \"I\" ||\r\n          this.basicInfoForm.value.messsageType === \"O\"\r\n        ) {\r\n          obj_test = this.basicInfoForm.value;\r\n          obj_test.sysChannel = this.messageConfigurationForm.value.sysChannel;\r\n          for (let index = 0; index < obj_test.sysChannel.length; index++) {\r\n            obj_test.sysChannel[index].sysService =\r\n              this.tcpForm.value.sysService;\r\n          }\r\n        }\r\n        //submitAll\r\n        if (this.basicInfoForm.value.messsageType === \"A\") {\r\n          obj_test = this.basicInfoForm.value;\r\n          obj_test.sysChannel = this.messageConfigurationForm.value.sysChannel;\r\n          this.messageConfigurationForm.value.sysChannel[0].messageType = \"I\";\r\n          this.messageConfigurationForm1.value.sysChannel[0].messageType = \"O\";\r\n          obj_test.sysChannel.push(\r\n            this.messageConfigurationForm1.value.sysChannel[0]\r\n          );\r\n          obj_test.sysChannel[0].sysService = this.tcpForm.value.sysService;\r\n          obj_test.sysChannel[1].sysService = this.tcpForm1.value.sysService;\r\n        }\r\n        this.addSystem\r\n          .editaddsystem(\"auth\", this.currentUser, obj_test)\r\n          .subscribe((response) => {\r\n            if (response) {\r\n              this.respData = response;\r\n              this.auditLog();\r\n              Swal.fire({ text: \"Record is Authorized\", icon: \"success\" });\r\n            }\r\n          });\r\n      }\r\n    });\r\n  }\r\n  onClickOfClose() {\r\n    Swal.fire({\r\n      //text: 'Unable to process' + 'Error ' + this.responseforfileupload.errorMessage + 'Do you want to Proceed??',\r\n      text: \"You are trying to Close record. \" + \" Do you want to proceed?\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3e54b8\",\r\n      cancelButtonColor: \"#d33\",\r\n      // confirmButtonText: 'PROCEED.'\r\n      cancelButtonText: \"NO\",\r\n      confirmButtonText: \"YES\",\r\n      icon: \"info\",\r\n      iconColor: \"#d33\",\r\n    }).then((result) => {\r\n      console.log(\"this is reopen \", result);\r\n\r\n      if (result.isConfirmed === true) {\r\n        let obj_test: any = {};\r\n\r\n        if (\r\n          this.basicInfoForm.value.messsageType === \"I\" ||\r\n          this.basicInfoForm.value.messsageType === \"O\"\r\n        ) {\r\n          obj_test = this.basicInfoForm.value;\r\n          console.log(this.messageConfigurationForm);\r\n          console.log(this.messageConfigurationForm.value);\r\n          console.log(this.messageConfigurationForm.value.sysChannel);\r\n\r\n          obj_test.sysChannel = this.messageConfigurationForm.value.sysChannel;\r\n          for (let index = 0; index < obj_test.sysChannel.length; index++) {\r\n            obj_test.sysChannel[index].sysService =\r\n              this.tcpForm.value.sysService;\r\n          }\r\n        }\r\n        //submitAll\r\n        if (this.basicInfoForm.value.messsageType === \"A\") {\r\n          obj_test = this.basicInfoForm.value;\r\n          obj_test.sysChannel = this.messageConfigurationForm.value.sysChannel;\r\n          this.messageConfigurationForm.value.sysChannel[0].messageType = \"I\";\r\n          this.messageConfigurationForm1.value.sysChannel[0].messageType = \"O\";\r\n          obj_test.sysChannel.push(\r\n            this.messageConfigurationForm1.value.sysChannel[0]\r\n          );\r\n          obj_test.sysChannel[0].sysService = this.tcpForm.value.sysService;\r\n          obj_test.sysChannel[1].sysService = this.tcpForm1.value.sysService;\r\n        }\r\n        this.addSystem\r\n          .editaddsystem(\"close\", this.currentUser, obj_test)\r\n          .subscribe((response) => {\r\n            if (response) {\r\n              this.respData = response;\r\n              this.auditLog();\r\n              Swal.fire({ text: \"Record is Closed\", icon: \"success\" });\r\n            }\r\n          });\r\n      }\r\n    });\r\n  }\r\n  onClickOfReopen() {\r\n    Swal.fire({\r\n      //text: 'Unable to process' + 'Error ' + this.responseforfileupload.errorMessage + 'Do you want to Proceed??',\r\n      text: \"You are trying to Reopen record. \" + \" Do you want to proceed?\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3e54b8\",\r\n      cancelButtonColor: \"#d33\",\r\n      // confirmButtonText: 'PROCEED.'\r\n      cancelButtonText: \"NO\",\r\n      confirmButtonText: \"YES\",\r\n      icon: \"info\",\r\n      iconColor: \"#d33\",\r\n    }).then((result) => {\r\n      console.log(\"this is reopen \", result);\r\n      if (result.isConfirmed === true) {\r\n        let obj_test: any = {};\r\n        if (\r\n          this.basicInfoForm.value.messsageType === \"I\" ||\r\n          this.basicInfoForm.value.messsageType === \"O\"\r\n        ) {\r\n          obj_test = this.basicInfoForm.value;\r\n          obj_test.sysChannel = this.messageConfigurationForm.value.sysChannel;\r\n          for (let index = 0; index < obj_test.sysChannel.length; index++) {\r\n            obj_test.sysChannel[index].sysService =\r\n              this.tcpForm.value.sysService;\r\n          }\r\n        }\r\n        //submitAll\r\n        if (this.basicInfoForm.value.messsageType === \"A\") {\r\n          obj_test = this.basicInfoForm.value;\r\n          obj_test.sysChannel = this.messageConfigurationForm.value.sysChannel;\r\n          this.messageConfigurationForm.value.sysChannel[0].messageType = \"I\";\r\n          this.messageConfigurationForm1.value.sysChannel[0].messageType = \"O\";\r\n          obj_test.sysChannel.push(\r\n            this.messageConfigurationForm1.value.sysChannel[0]\r\n          );\r\n          obj_test.sysChannel[0].sysService = this.tcpForm.value.sysService;\r\n          obj_test.sysChannel[1].sysService = this.tcpForm1.value.sysService;\r\n        }\r\n        this.addSystem\r\n          .editaddsystem(\"open\", this.currentUser, obj_test)\r\n          .subscribe((response) => {\r\n            if (response) {\r\n              this.respData = response;\r\n              this.auditLog();\r\n              Swal.fire({ text: \"Record is Reopened\", icon: \"success\" });\r\n            }\r\n          });\r\n      }\r\n    });\r\n    //submit2\r\n  }\r\n  OndeleteofUser() {\r\n    Swal.fire({\r\n      //text: 'Unable to process' + 'Error ' + this.responseforfileupload.errorMessage + 'Do you want to Proceed??',\r\n      text: \"You are trying to Delete record. \" + \" Do you want to proceed?\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3e54b8\",\r\n      cancelButtonColor: \"#d33\",\r\n      // confirmButtonText: 'PROCEED.'\r\n      cancelButtonText: \"NO\",\r\n      confirmButtonText: \"YES\",\r\n      icon: \"info\",\r\n      iconColor: \"#d33\",\r\n    }).then((result) => {\r\n      console.log(\"this is reopen \", result);\r\n      if (result.isConfirmed === true) {\r\n        this.addSystem\r\n          .deleteAddSystem(this.currentUser, this.respData.systemId)\r\n          .subscribe((response) => {\r\n            if (response) {\r\n              Swal.fire({ text: \"Record is Deleted\", icon: \"success\" });\r\n              this.router.navigate([\"/addSystem/summary\"]);\r\n            }\r\n          });\r\n      }\r\n    });\r\n  }\r\n  previousAll(value) {\r\n    if (value === \"1\") {\r\n      this.basicConfiguration = true;\r\n      this.messageConfiguration = false;\r\n      this.incomingMessageConfiguration = false;\r\n      this.xml = false;\r\n      this.mdbXml = false;\r\n      this.incomingMdbXml = false;\r\n      this.dbConnection = false;\r\n      this.tab1 = false;\r\n      this.tab2 = false;\r\n      this.all = false;\r\n      this.tableFlag = false;\r\n    }\r\n    if (value === \"2\") {\r\n      this.basicConfiguration = false;\r\n      this.messageConfiguration = false;\r\n      this.incomingMessageConfiguration = false;\r\n      this.xml = false;\r\n      this.mdbXml = false;\r\n      this.incomingMdbXml = false;\r\n      this.dbConnection = false;\r\n      this.tab1 = true;\r\n      this.tab11 = true;\r\n      this.tab12 = false;\r\n      this.tab2 = false;\r\n      this.tableFlag = false;\r\n    }\r\n    if (value === \"3\") {\r\n      this.basicConfiguration = false;\r\n      this.messageConfiguration = false;\r\n      this.incomingMessageConfiguration = false;\r\n      this.xml = false;\r\n      this.mdbXml = false;\r\n      this.incomingMdbXml = false;\r\n      this.dbConnection = false;\r\n      this.tableFlag = false;\r\n      this.tab1 = true;\r\n      this.tab11 = false;\r\n      this.tab12 = true;\r\n      this.tab2 = false;\r\n    }\r\n    if (value === \"4\") {\r\n      this.tableFlag = false;\r\n      this.basicConfiguration = false;\r\n      this.messageConfiguration = false;\r\n      this.incomingMessageConfiguration = false;\r\n      this.xml = false;\r\n      this.mdbXml = false;\r\n      this.incomingMdbXml = false;\r\n      this.dbConnection = false;\r\n      this.tab1 = false;\r\n      this.tab2 = true;\r\n      this.tab21 = true;\r\n      this.tab22 = false;\r\n    }\r\n  }\r\n  previous(value) {\r\n    if (value === \"messageConfiguration\") {\r\n      this.basicConfiguration = true;\r\n      this.messageConfiguration = false;\r\n      this.incomingMessageConfiguration = false;\r\n      this.xml = false;\r\n      this.mdbXml = false;\r\n      this.incomingMdbXml = false;\r\n      this.dbConnection = false;\r\n      this.tableFlag = false;\r\n      this.all = false;\r\n      this.mdb = false;\r\n    }\r\n    if (value === \"incomingMessageConfiguration\") {\r\n      this.incomingMessageConfiguration = false;\r\n      this.xml = false;\r\n      this.basicConfiguration = false;\r\n      this.messageConfiguration = true;\r\n      this.mdbXml = false;\r\n      this.incomingMdbXml = false;\r\n      this.dbConnection = false;\r\n      this.mdb = false;\r\n      this.tableFlag = false;\r\n    }\r\n  }\r\n\r\n  onProtocalSlection(event) {\r\n    console.log(\"onProtocalSlection:\", event);\r\n\r\n    this.tempArrayList = [];\r\n    // this.messageConfigurationForm.get('messageFormat').setValue(\"\");\r\n    if (this.index === undefined) {\r\n      this.messageConfigurationForm\r\n        .get(\"sysChannel\")\r\n        [\"controls\"][0].get(\"messageFormat\")\r\n        .setValue(\"\");\r\n    }\r\n    if (event === \"TCP/IP\") {\r\n      this.dataType = [];\r\n      this.dataType = [\"ISO 8583 1987\", \"ISO 8583 1993\", \"ISO 8583 2003\"];\r\n    } else if (event === \"Https/Http\") {\r\n      this.dataType = [];\r\n      this.dataType = [\"XML\", \"JSON\"];\r\n    } else if (\r\n      event === \"EJB\" ||\r\n      event === \"DB Connection\" ||\r\n      event === \"MDB\"\r\n    ) {\r\n      this.dataType = [];\r\n      this.dataType = [\"XML\", \"JSON\", \"CSV/EXCEL\", \"FLATFILE\"];\r\n    } else if (event === \"MT\") {\r\n      this.dataType = [];\r\n      this.dataType = [\"MT103\"];\r\n    } else if (event === \"MX\") {\r\n      this.dataType = [];\r\n      this.dataType = [\"PAC008\"];\r\n    }\r\n    console.log(\"datatype-- \", this.dataType);\r\n  }\r\n  onProtocalSlection1(event) {\r\n    console.log(\"on protocol selection 1 \", event);\r\n\r\n    if (this.index === undefined) {\r\n      this.messageConfigurationForm1\r\n        .get(\"sysChannel\")\r\n        [\"controls\"][0].get(\"messageFormat\")\r\n        .setValue(\"\");\r\n    }\r\n\r\n    if (event === \"TCP/IP\") {\r\n      this.dataType1 = [];\r\n      this.dataType1 = [\"ISO 8583 1987\", \"ISO 8583 1993\", \"ISO 8583 2003\"];\r\n    } else if (event === \"Https/Http\") {\r\n      this.dataType1 = [];\r\n      this.dataType1 = [\"XML\", \"JSON\"];\r\n    } else if (\r\n      event === \"EJB\" ||\r\n      event === \"DB Connection\" ||\r\n      event === \"MDB\"\r\n    ) {\r\n      this.dataType1 = [];\r\n      this.dataType1 = [\"XML\", \"JSON\", \"CSV/EXCEL\", \"FLATFILE\"];\r\n    }\r\n  }\r\n  addBioDocs() {\r\n    this.sysService = this.tcpForm.get(\"sysService\") as FormArray;\r\n    console.log(this.sysService);\r\n    const enteredRecord = this.tcpForm.get(\"sysService\") as FormArray;\r\n    const selectedHeaderTags = new Set(\r\n      enteredRecord.value.map((d) => d.headerTag)\r\n    );\r\n    this.headerArray = this.headerTagData\r\n      .filter((data) => selectedHeaderTags.has(data.headerTag))\r\n      .map((val) => val.headerTag);\r\n    if (\r\n      this.messageConfigurationForm.value?.sysChannel[0]?.messageChannel !==\r\n      \"TCP/IP\"\r\n    ) {\r\n      console.log(this.tcpForm.value, \"Inside add bio\");\r\n      const messageKeys = new Set(\r\n        this.sysService.value.map((val) => val.messageKey)\r\n      );\r\n      this.xmlRespDataFiltered = this.xmlRespData.filter(\r\n        (val) => !messageKeys.has(val)\r\n      );\r\n    }\r\n    this.sysService.push(this.createSysService());\r\n  }\r\n  addBioDocs1() {\r\n    this.sysService = this.tcpForm1.get(\"sysService\") as FormArray;\r\n    this.sysService.push(this.createSysService());\r\n    if (\r\n      this.messageConfigurationForm.value?.sysChannel[0]?.messageChannel !==\r\n      \"TCP/IP\"\r\n    ) {\r\n      const messageKeys = new Set(\r\n        this.sysService.value.map((val) => val.messageKey)\r\n      );\r\n      this.xmlRespDataFiltered1 = this.xmlRespData1.filter(\r\n        (val) => !messageKeys.has(val)\r\n      );\r\n    }\r\n  }\r\n  submit2() {\r\n    let obj_test: any = {};\r\n    obj_test = this.basicInfoForm.value;\r\n    obj_test.sysChannel = this.messageConfigurationForm.value.sysChannel;\r\n    console.log(obj_test);\r\n    console.log(this.tcpForm.value);\r\n    for (let index = 0; index < obj_test.sysChannel.length; index++) {\r\n      obj_test.sysChannel[index].sysService = this.tcpForm.value.sysService.map(\r\n        (val) => {\r\n          console.log(val);\r\n          if (\r\n            this.messageConfigurationForm.value?.sysChannel[0]\r\n              ?.messageChannel !== \"TCP/IP\"\r\n          ) {\r\n            return { ...val };\r\n          }\r\n          return {\r\n            ...val,\r\n            messageKey: val.messageKey.fieldNo\r\n              ? val.messageKey.fieldNo\r\n              : Number(val.messageKey.split(\" \")[0]),\r\n            messageBasis: val.messageKey.fieldName\r\n              ? val.messageKey.fieldName\r\n              : val.messageKey,\r\n          };\r\n        }\r\n      );\r\n    }\r\n\r\n    if (this.index) {\r\n      this.addSystem\r\n        .editaddsystem(\"update\", this.currentUser, obj_test)\r\n        .subscribe(\r\n          (addSysResp) => {\r\n            if (addSysResp) {\r\n              this.saved = \"saved\";\r\n              this.index = addSysResp.systemId;\r\n              this.respData = addSysResp;\r\n              // this.respData.approvedEver = 'N'\r\n              // this.respData.createdTime=new Date();\r\n              this.auditLog();\r\n              this.previous(\"messageConfiguration\");\r\n              this.editFlag = false;\r\n              // this.submitFlag=false;\r\n              Swal.fire({ text: \"Record is Updated\", icon: \"success\" });\r\n\r\n              this.formTouched1 = !this.basicInfoForm.touched;\r\n              this.formTouched2 = !this.messageConfigurationForm.touched;\r\n              this.formTouched3 = !this.tcpForm.touched;\r\n              this.formTouched4 = !this.messageConfigurationForm1.touched;\r\n              this.formTouched5 = !this.tcpForm1.touched;\r\n            }\r\n          },\r\n          (error) => {\r\n            console.log(\"error resp :: \", error);\r\n            Swal.fire({ text: error.error, icon: \"error\" });\r\n          }\r\n        );\r\n    } else {\r\n      this.addSystem.submittingAddSystem(obj_test, this.currentUser).subscribe(\r\n        (addSysResp) => {\r\n          if (addSysResp) {\r\n            // this.submitFlag=false;\r\n            this.saved = \"saved\";\r\n            this.index = addSysResp.systemId;\r\n            this.respData = addSysResp;\r\n            //  this.respData.approvedEver = 'N'\r\n            // this.respData.createdTime=new Date();\r\n            this.auditLog();\r\n            this.previous(\"messageConfiguration\");\r\n            this.editFlag = false;\r\n            Swal.fire({ text: \"Record is Created\", icon: \"success\" });\r\n            this.formTouched1 = !this.basicInfoForm.touched;\r\n            this.formTouched2 = !this.messageConfigurationForm.touched;\r\n            this.formTouched3 = !this.tcpForm.touched;\r\n            this.formTouched4 = !this.messageConfigurationForm1.touched;\r\n            this.formTouched5 = !this.tcpForm1.touched;\r\n          }\r\n        },\r\n        (error) => {\r\n          console.log(\"error resp :: \", error);\r\n          Swal.fire({ text: error.error, icon: \"error\" });\r\n        }\r\n      );\r\n    }\r\n  }\r\n  fetchingIso() {\r\n    this.addSystem.fetchingIsoForTcp().subscribe((isoResp) => {\r\n      this.isoRespData = isoResp;\r\n      this.isoRespDataFiltered = this.isoRespData.map((mKey) => ({\r\n        ...mKey,\r\n        formattedmKey: `${mKey.fieldNo} ${mKey.fieldName}`,\r\n      }));\r\n      if (isoResp) {\r\n        this.messageBasisIso = isoResp.map((data) => {\r\n          return data.fieldName;\r\n        });\r\n        // for dropdown 1\r\n        this.messageKeyIso = isoResp.map((data) => {\r\n          return data.fieldNo;\r\n        });\r\n        this.typeDataIso = isoResp.map((data) => {\r\n          return data.dataType;\r\n        });\r\n        this.headerValueIso = isoResp.map((data) => {\r\n          return data.headerValue;\r\n        });\r\n        const valFieldMapper = this.isoRespData.reduce((acc, val) => {\r\n          acc[val.fieldNo] = val.fieldName;\r\n          return acc;\r\n        }, {});\r\n        const selectedMessageKeys = new Set(\r\n          this.array.map((x) => valFieldMapper[x.messageKey])\r\n        );\r\n        this.isoRespDataFiltered = this.isoRespDataFiltered.filter(\r\n          (val) => !selectedMessageKeys.has(val.fieldName)\r\n        );\r\n        this.array.forEach((x) => {\r\n          const data = this.isoRespData.find(\r\n            (val) => val.fieldNo == x.messageKey\r\n          );\r\n          x.messageKey = `${x.messageKey || \"\"} ${data?.fieldName || \"\"}`;\r\n          this.formArr.push(this.fb.group(x));\r\n        });\r\n      }\r\n    });\r\n  }\r\n  fetchingIso1() {\r\n    this.addSystem.fetchingIsoForTcp().subscribe((isoResp) => {\r\n      this.isoRespData1 = isoResp;\r\n      this.isoRespDataFiltered1 = this.isoRespData1.map((mKey) => ({\r\n        ...mKey,\r\n        formattedmKey: `${mKey.fieldNo} ${mKey.fieldName}`,\r\n      }));\r\n      if (isoResp) {\r\n        this.messageBasisIso1 = isoResp.map((data) => {\r\n          return data.fieldName;\r\n        });\r\n        // for dropdown 1\r\n        this.messageKeyIso1 = isoResp.map((data) => {\r\n          return data.fieldNo;\r\n        });\r\n        this.typeDataIso1 = isoResp.map((data) => {\r\n          return data.dataType;\r\n        });\r\n        this.headerValueIso1 = isoResp.map((data) => {\r\n          return data.headerValue;\r\n        });\r\n        const valFieldMapper = this.isoRespData1.reduce((acc, val) => {\r\n          acc[val.fieldNo] = val.fieldName;\r\n          return acc;\r\n        }, {});\r\n        const selectedMessageKeys = new Set(\r\n          this.array1?.map((x) => valFieldMapper[x.messageKey])\r\n        );\r\n        this.isoRespDataFiltered1 = this.isoRespDataFiltered1.filter(\r\n          (val) => !selectedMessageKeys.has(val.fieldName)\r\n        );\r\n        this.array1.forEach((x) => {\r\n          const data = this.isoRespData1.find(\r\n            (val) => val.fieldNo == x.messageKey\r\n          );\r\n          x.messageKey = `${x.messageKey || \"\"} ${data?.fieldName || \"\"}`;\r\n          this.formArr1.push(this.fb.group(x));\r\n        });\r\n      }\r\n    });\r\n  }\r\n  fetchingXMl() {\r\n    this.addSystem.gettinXMLmsgIncoming().subscribe((xmlResp) => {\r\n      this.xmlRespData = xmlResp;\r\n      this.xmlRespDataFiltered = [...this.xmlRespData];\r\n      if (xmlResp) {\r\n        this.messageBasisIso = xmlResp.map((data) => {\r\n          return data.messageBasis;\r\n        });\r\n        this.messageKeyIso = xmlResp.map((data) => {\r\n          return data.messageKey;\r\n        });\r\n        this.typeDataIso = xmlResp.map((data) => {\r\n          return data.dataType;\r\n        });\r\n        this.headerValueIso = xmlResp.map((data) => {\r\n          return data.headerValue;\r\n        });\r\n      }\r\n    });\r\n  }\r\n  onSubmitEditAddSystem() {\r\n    console.log(\"This is Edit Charge Maintenance\");\r\n    this.editFlag = true;\r\n    console.log(this.editFlag);\r\n  }\r\n  fetchingXMl1() {\r\n    this.addSystem.gettinXMLmsgIncoming().subscribe((xmlResp) => {\r\n      this.xmlRespData1 = xmlResp;\r\n      console.log(xmlResp);\r\n      this.xmlRespDataFiltered1 = [...this.xmlRespData1];\r\n\r\n      if (xmlResp) {\r\n        this.messageBasisIso = xmlResp.map((data) => {\r\n          return data.messageBasis;\r\n        });\r\n        this.messageKeyIso = xmlResp.map((data) => {\r\n          return data.messageKey;\r\n        });\r\n        this.typeDataIso = xmlResp.map((data) => {\r\n          return data.dataType;\r\n        });\r\n        this.headerValueIso = xmlResp.map((data) => {\r\n          return data.headerValue;\r\n        });\r\n      }\r\n    });\r\n  }\r\n  onSelectingMessageBasis(value: any, i) {\r\n    if (this.tempArrayList[i]) {\r\n      this.tempArrayList[i] = value;\r\n    } else {\r\n      this.tempArrayList.push(value);\r\n    }\r\n    var x = this.isoRespData.find((item) => item.fieldNo == value);\r\n    this.tcpForm\r\n      .get(\"sysService\")\r\n      [\"controls\"][i].get(\"messageBasis\")\r\n      .setValue(x.fieldName);\r\n    this.tcpForm\r\n      .get(\"sysService\")\r\n      [\"controls\"][i].get(\"dataType\")\r\n      .setValue(x.dataType);\r\n    console.log(this.tcpForm.get(\"sysService\"));\r\n  }\r\n  onSelectingMessageBasis1(event: any, i) {\r\n    this.selectedMessageKeys1[i] = event.fieldName;\r\n    const selectedMessageKeySet = new Set(this.selectedMessageKeys1);\r\n    this.isoRespDataFiltered1 = this.isoRespData1\r\n      .filter((val) => !selectedMessageKeySet.has(val.fieldName))\r\n      .map((mKey) => ({\r\n        ...mKey,\r\n        formattedmKey: `${mKey.fieldNo} ${mKey.fieldName}`,\r\n      }));\r\n    var x = this.isoRespData1.find((item) => item.fieldNo == event.fieldNo);\r\n    this.tcpForm1\r\n      .get(\"sysService\")\r\n      [\"controls\"][i].get(\"messageBasis\")\r\n      .setValue(x.fieldName);\r\n    this.tcpForm1\r\n      .get(\"sysService\")\r\n      [\"controls\"][i].get(\"dataType\")\r\n      .setValue(x.dataType);\r\n  }\r\n\r\n  try(value) {\r\n    return true;\r\n    /* if (this.tempArrayList.find(item=>item==value)) {\r\n    return true;\r\n  }\r\n  else {\r\n    return false;\r\n  }*/\r\n  }\r\n\r\n  fetchingHeadertag() {\r\n    this.addSystem.fetchingHeaderTag().subscribe((resp) => {\r\n      this.headerTagData = resp;\r\n    });\r\n  }\r\n  chooseFile() {\r\n    document.getElementById(\"chFile\").click();\r\n  }\r\n  chooseFile1() {\r\n    document.getElementById(\"chFile1\").click();\r\n  }\r\n  uploadFileXml(event) {\r\n    this.selectedFiles = event.target.files;\r\n    this.sizeOfFile = this.selectedFiles.item(0).size;\r\n    this.currentFileUpload = this.selectedFiles.item(0);\r\n    this.fileName = this.currentFileUpload.name;\r\n    this.fileUploadWrapper.nativeElement.setAttribute(\r\n      \"data-text\",\r\n      this.fileName\r\n    );\r\n    this.addSystem\r\n      .gettingHederofXMl(this.currentFileUpload)\r\n      .subscribe((xmlResp) => {\r\n        if (xmlResp) {\r\n          this.uploadXmlResp = xmlResp;\r\n          this.messageBasisIso = xmlResp.nodeTagList;\r\n          this.xmlRespData = xmlResp.nodeTagList;\r\n          this.xmlRespDataFiltered = this.xmlRespData;\r\n          Swal.fire({ text: \"File Uploaded Successfully\", icon: \"success\" });\r\n          this.fileUploadClick = false;\r\n        }\r\n      });\r\n  }\r\n  uploadFileXml1(event) {\r\n    this.selectedFiles1 = event.target.files;\r\n    this.sizeOfFile1 = this.selectedFiles1.item(0).size;\r\n    this.currentFileUpload1 = this.selectedFiles1.item(0);\r\n    this.fileName1 = this.currentFileUpload1.name;\r\n    this.fileUploadWrapper1.nativeElement.setAttribute(\r\n      \"data-text\",\r\n      this.fileName1\r\n    );\r\n    this.addSystem\r\n      .gettingHederofXMl(this.currentFileUpload1)\r\n      .subscribe((xmlResp) => {\r\n        if (xmlResp) {\r\n          this.uploadXmlResp1 = xmlResp;\r\n          this.messageBasisIso1 = xmlResp.nodeTagList;\r\n          this.xmlRespData1 = xmlResp.nodeTagList;\r\n          this.xmlRespDataFiltered1 = this.xmlRespData1;\r\n          Swal.fire({ text: \"File Uploaded Successfully\", icon: \"success\" });\r\n          this.fileUploadClickAll = false;\r\n        }\r\n      });\r\n  }\r\n  onselectingTag(event, i) {\r\n    if (this.tempArrayList[i]) {\r\n      this.tempArrayList[i] = event;\r\n    } else {\r\n      this.tempArrayList.push(event);\r\n    }\r\n    var result = Object.keys(this.uploadXmlResp.nodeValueMap).map((key) => [\r\n      key,\r\n      this.uploadXmlResp.nodeValueMap[key],\r\n    ]);\r\n    var x = result.find((item) => item[0] == event);\r\n    this.tcpForm\r\n      .get(\"sysService\")\r\n      [\"controls\"][i].get(\"headerValue\")\r\n      .setValue(x[1]);\r\n    this.selectedMessageKeys[i] = event;\r\n    const selectedMessageKeySet = new Set(this.selectedMessageKeys);\r\n    this.xmlRespDataFiltered = this.xmlRespData.filter(\r\n      (val) => !selectedMessageKeySet.has(val)\r\n    );\r\n  }\r\n  onselectingTag1(event, i) {\r\n    if (this.tempArrayList[i]) {\r\n      this.tempArrayList[i] = event;\r\n    } else {\r\n      this.tempArrayList.push(event);\r\n    }\r\n    var result = Object.keys(this.uploadXmlResp1.nodeValueMap).map((key) => [\r\n      key,\r\n      this.uploadXmlResp1.nodeValueMap[key],\r\n    ]);\r\n    var x = result.find((item) => item[0] == event);\r\n    this.tcpForm1\r\n      .get(\"sysService\")\r\n      [\"controls\"][i].get(\"headerValue\")\r\n      .setValue(x[1]);\r\n    this.selectedMessageKeys1[i] = event;\r\n    const selectedMessageKeySet = new Set(this.selectedMessageKeys1);\r\n    this.xmlRespDataFiltered1 = this.xmlRespData1.filter(\r\n      (val) => !selectedMessageKeySet.has(val)\r\n    );\r\n  }\r\n  uploadFileXmlOut(event) {\r\n    this.selectedFiles = event.target.files;\r\n    this.sizeOfFile = this.selectedFiles.item(0).size;\r\n    this.currentFileUpload = this.selectedFiles.item(0);\r\n    this.fileNameOut = this.currentFileUpload.name;\r\n    this.addSystem.gettingHederofXMl(this.currentFileUpload).subscribe(\r\n      (xmlResp) => {\r\n        if (xmlResp) {\r\n          this.uploadXmlResp = xmlResp;\r\n          this.messageBasisIso = xmlResp.nodeTagList;\r\n        }\r\n      },\r\n      (err) => {}\r\n    );\r\n  }\r\n  submitAll() {\r\n    if (\r\n      this.tcpForm.value.sysService.some(\r\n        (sysService) => sysService[\"headerTag\"] === \"OPERATION\"\r\n      ) &&\r\n      this.tcpForm.value.sysService.some(\r\n        (mdmtSystemService) => mdmtSystemService[\"headerTag\"] === \"SERVICE\"\r\n      ) &&\r\n      this.tcpForm1.value.sysService.some(\r\n        (sysService) => sysService[\"headerTag\"] === \"OPERATION\"\r\n      ) &&\r\n      this.tcpForm1.value.sysService.some(\r\n        (mdmtSystemService) => mdmtSystemService[\"headerTag\"] === \"SERVICE\"\r\n      )\r\n    ) {\r\n      let obj_test: any = {};\r\n      obj_test = this.basicInfoForm.value;\r\n      obj_test.sysChannel =\r\n        this.messageConfigurationForm.value.sysChannel.slice(0, 2);\r\n      this.messageConfigurationForm.value.sysChannel[0].messageType = \"I\";\r\n      this.messageConfigurationForm1.value.sysChannel[0].messageType = \"O\";\r\n      obj_test.sysChannel.push(\r\n        this.messageConfigurationForm1.value.sysChannel[0]\r\n      );\r\n\r\n      if (\r\n        this.messageConfigurationForm.value?.sysChannel[0]?.messageChannel !==\r\n        \"TCP/IP\"\r\n      ) {\r\n        obj_test.sysChannel[0].sysService = this.tcpForm.value.sysService;\r\n      } else {\r\n        obj_test.sysChannel[0].sysService = this.tcpForm.value.sysService.map(\r\n          (val) => {\r\n            return {\r\n              ...val,\r\n              messageKey: val.messageKey.fieldNo\r\n                ? val.messageKey.fieldNo\r\n                : Number(val.messageKey.split(\" \")[0]),\r\n            };\r\n          }\r\n        );\r\n      }\r\n\r\n      if (\r\n        this.messageConfigurationForm1.value?.sysChannel[0]?.messageChannel !==\r\n        \"TCP/IP\"\r\n      ) {\r\n        obj_test.sysChannel[1].sysService = this.tcpForm1.value.sysService;\r\n      } else {\r\n        obj_test.sysChannel[1].sysService = this.tcpForm1.value.sysService.map(\r\n          (val) => {\r\n            return {\r\n              ...val,\r\n              messageKey: val.messageKey.fieldNo\r\n                ? val.messageKey.fieldNo\r\n                : Number(val.messageKey.split(\" \")[0]),\r\n            };\r\n          }\r\n        );\r\n      }\r\n      console.log(\"obj_test \", obj_test);\r\n      this.addSystem\r\n        .submittingAddSystem(obj_test, this.currentUser)\r\n        .subscribe((addSysResp) => {\r\n          if (addSysResp) {\r\n            this.saved = \"saved\";\r\n            this.submitFlagAll = false;\r\n            Swal.fire({ text: \"Record is Created\", icon: \"success\" });\r\n          }\r\n        });\r\n    } else {\r\n      Swal.fire({\r\n        text: \"Header value OPERATION and SERVICE are mandatory !\",\r\n        icon: \"info\",\r\n      });\r\n    }\r\n  }\r\n  delete(index) {\r\n    const deleteRecord = this.tcpForm.get(\"sysService\") as FormArray;\r\n    deleteRecord.removeAt(index);\r\n    const selectedHeaderTags = new Set(\r\n      deleteRecord.value.map((d) => d.headerTag)\r\n    );\r\n    this.dbConnectionOption.splice(index, 1);\r\n    this.headerArray = this.headerTagData\r\n      .filter((data) => selectedHeaderTags.has(data.headerTag))\r\n      .map((val) => val.headerTag);\r\n    if (\r\n      this.messageConfigurationForm.value?.sysChannel[0]?.messageChannel !==\r\n      \"TCP/IP\"\r\n    ) {\r\n      this.selectedMessageKeys = deleteRecord.value.map((d) => d.messageKey);\r\n      const selectedMessageKeysSet = new Set(this.selectedMessageKeys);\r\n      this.xmlRespDataFiltered = this.xmlRespData.filter(\r\n        (val) => !selectedMessageKeysSet.has(val)\r\n      );\r\n    } else {\r\n      this.selectedMessageKeys = deleteRecord.value\r\n        .map((d) => d.messageKey?.fieldName)\r\n        .filter((val) => !!val);\r\n      const selectedMessageKeysSet = new Set(this.selectedMessageKeys);\r\n      this.isoRespDataFiltered = this.isoRespData\r\n        .filter((data) => !selectedMessageKeysSet.has(data.fieldName))\r\n        .map((mKey) => ({\r\n          ...mKey,\r\n          formattedmKey: `${mKey?.fieldNo || \"\"} ${mKey?.fieldName || \"\"}`,\r\n        }));\r\n    }\r\n  }\r\n  delete1(index) {\r\n    const deleteRecord1 = this.tcpForm1.get(\"sysService\") as FormArray;\r\n    deleteRecord1.removeAt(index);\r\n    if (\r\n      this.messageConfigurationForm1.value?.sysChannel[0]?.messageChannel !==\r\n      \"TCP/IP\"\r\n    ) {\r\n      this.selectedMessageKeys1 = deleteRecord1.value.map((d) => d.messageKey);\r\n      const selectedMessageKeysSet = new Set(this.selectedMessageKeys);\r\n      this.xmlRespDataFiltered1 = this.xmlRespData1.filter(\r\n        (val) => !selectedMessageKeysSet.has(val)\r\n      );\r\n    } else {\r\n      this.selectedMessageKeys1 = deleteRecord1.value\r\n        .map((d) => d.messageKey?.fieldName)\r\n        .filter((val) => !!val);\r\n      const selectedMessageKeysSet = new Set(this.selectedMessageKeys);\r\n      this.isoRespDataFiltered1 = this.isoRespData1\r\n        .filter((data) => !selectedMessageKeysSet.has(data.fieldName))\r\n        .map((mKey) => ({\r\n          ...mKey,\r\n          formattedmKey: `${mKey?.fieldNo || \"\"} ${mKey?.fieldName || \"\"}`,\r\n        }));\r\n    }\r\n  }\r\n  value(val) {\r\n    console.log(val);\r\n    if (val === \"1\") {\r\n      this.tab1 = true;\r\n      this.tab2 = false;\r\n      this.tab11 = true;\r\n      this.tab12 = false;\r\n    }\r\n    if (val === \"2\") {\r\n      this.tab1 = false;\r\n      this.tab2 = true;\r\n      this.tab21 = true;\r\n      this.tab22 = false;\r\n    }\r\n  }\r\n  onselectingFieldName(event, i) {\r\n    if (\r\n      event === \"MIRDate\" ||\r\n      event === \"ReceiverOutputDate\" ||\r\n      event === \"CreDt\"\r\n    ) {\r\n      const dateValue = this.datePipe.transform(new Date(), \"yyyy-MM-dd\");\r\n      this.tcpForm\r\n        .get(\"sysService\")\r\n        [\"controls\"][i].get(\"headerValue\")\r\n        .setValue(dateValue);\r\n    }\r\n    if (event === \"ReceiverOutputTime\" || event === \"SenderInputTime\") {\r\n      var d = new Date(); // for now\r\n      this.tcpForm\r\n        .get(\"sysService\")\r\n        [\"controls\"][i].get(\"headerValue\")\r\n        .setValue(d.getHours() + \":\" + d.getMinutes());\r\n    }\r\n    if (event === \"MessagePriority\") {\r\n      this.tcpForm\r\n        .get(\"sysService\")\r\n        [\"controls\"][i].get(\"headerValue\")\r\n        .setValue(\"N\");\r\n    }\r\n    if (event === \"MessageType\") {\r\n      this.tcpForm\r\n        .get(\"sysService\")\r\n        [\"controls\"][i].get(\"headerValue\")\r\n        .setValue(\"103\");\r\n    }\r\n    if (event === \"blockType\") {\r\n      this.tcpForm\r\n        .get(\"sysService\")\r\n        [\"controls\"][i].get(\"headerValue\")\r\n        .setValue(\"O\");\r\n    }\r\n    if (event === \"MsgDefIdr\") {\r\n      this.tcpForm\r\n        .get(\"sysService\")\r\n        [\"controls\"][i].get(\"headerValue\")\r\n        .setValue(\"pacs.008.001.07\");\r\n    }\r\n    if (event === \"PssblDplct\") {\r\n      this.tcpForm\r\n        .get(\"sysService\")\r\n        [\"controls\"][i].get(\"headerValue\")\r\n        .setValue(false);\r\n    }\r\n  }\r\n  onselectingColumnName(event, i) {\r\n    console.log(this.tabelData);\r\n    this.filteredHomes = event.split(\",\");\r\n    console.log(this.filteredHomes);\r\n    // this.selectedFilterData=filteredHomes;\r\n    // console.log(this.selectedFilterData);\r\n    this.tcpForm\r\n      .get(\"sysService\")\r\n      [\"controls\"][i].get(\"dataType\")\r\n      .setValue(this.filteredHomes[2]);\r\n    this.tcpForm\r\n      .get(\"sysService\")\r\n      [\"controls\"][i].get(\"headerValue\")\r\n      .setValue(this.filteredHomes[3]);\r\n    this.jhnbn = this.filteredHomes[1];\r\n    console.log(this.jhnbn);\r\n    // var stringWithoutCommas = this.tcpForm.value.sysService[0].messageKey.replace(/,/g, '');\r\n    // console.log(stringWithoutCommas);\r\n    // for(let j=0 ;j<this.tcpForm.value.sysService.length;j++){\r\n    //     this.tcpForm.value.sysService[j].messageKey=this.filteredHomes[1];\r\n    // }\r\n    // this.tcpForm.value.sysService[0].messageKey =this.filteredHomes[1];\r\n    // this.tcpForm.value.sysService[1].messageKey = this.filteredHomes[1];\r\n    // this.tcpForm.value.sysService[2].messageKey = this.filteredHomes[1];\r\n    // this.tcpForm.value.sysService[3].messageKey = this.filteredHomes[1];\r\n    console.log(this.tcpForm.value);\r\n  }\r\n  onselectingColumnName1(event, i) {\r\n    console.log(this.tabelData1);\r\n    const filteredHomes = event.split(\",\");\r\n    console.log(filteredHomes);\r\n    this.tcpForm1\r\n      .get(\"sysService\")\r\n      [\"controls\"][i].get(\"dataType\")\r\n      .setValue(filteredHomes[2]);\r\n    this.tcpForm1\r\n      .get(\"sysService\")\r\n      [\"controls\"][i].get(\"headerValue\")\r\n      .setValue(filteredHomes[3]);\r\n  }\r\n  onHeaderTagSelect(event, i) {\r\n    this.headerArray[i] = event.target.value;\r\n  }\r\n  onDbConnectionOption(event, i) {\r\n    this.dbConnectionOption[i] = event.target.value.split(\",\")[1];\r\n  }\r\n  shouldHideOption(value) {\r\n    return this.dbConnectionOption.some((opt) => opt === value[1]);\r\n  }\r\n  changeSelectedFieldNo(evt, index) {\r\n    this.selectedMessageKeys[index] = evt.fieldName;\r\n    const selectedMessageKeySet = new Set(this.selectedMessageKeys);\r\n    this.isoRespDataFiltered = this.isoRespData\r\n      .filter((val) => !selectedMessageKeySet.has(val.fieldName))\r\n      .map((mKey) => ({\r\n        ...mKey,\r\n        formattedmKey: `${mKey.fieldNo} ${mKey.fieldName}`,\r\n      }));\r\n  }\r\n  keyPressAlphanumeric(event) {\r\n    var inp = String.fromCharCode(event.keyCode);\r\n    if (/^[a-zA-Z0-9_ ]*$/.test(inp)) {\r\n      return true;\r\n    } else {\r\n      event.preventDefault();\r\n      return false;\r\n    }\r\n  }\r\n  extAddressValidation(event) {\r\n    const regex =\r\n      /^((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/;\r\n    if (regex.test(event.target.value) === false) {\r\n      this.basicInfoForm.get(\"sourcePort\").setValue(\"\");\r\n      this.basicInfoForm.get(\"sourcePort\").clearValidators();\r\n      this.basicInfoForm.get(\"sourcePort\").updateValueAndValidity();\r\n      this.externalPort = false;\r\n    } else {\r\n      this.basicInfoForm.get(\"sourcePort\").setValidators([Validators.required]);\r\n      this.basicInfoForm.get(\"sourcePort\").updateValueAndValidity();\r\n      this.externalPort = true;\r\n    }\r\n  }\r\n  medAddressValidation(event) {\r\n    const regex =\r\n      /^((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/;\r\n    if (regex.test(event.target.value) === false) {\r\n      this.basicInfoForm.get(\"medianPort\").setValue(\"\");\r\n      this.basicInfoForm.get(\"medianPort\").clearValidators();\r\n      this.basicInfoForm.get(\"medianPort\").updateValueAndValidity();\r\n      this.medianPort = false;\r\n    } else {\r\n      this.basicInfoForm.get(\"medianPort\").setValidators([Validators.required]);\r\n      this.basicInfoForm.get(\"medianPort\").updateValueAndValidity();\r\n      this.medianPort = true;\r\n    }\r\n  }\r\n  onHeaderSelection(event, i) {\r\n    this.fieldValues[i] = [];\r\n    if (event === \"Block 1\") {\r\n      this.fieldValues[i] = [\r\n        \"ApplicationId\",\r\n        \"LogicalTerminal\",\r\n        \"SequenceNumber\",\r\n        \"ServiceId\",\r\n        \"sSessionNumber\",\r\n      ];\r\n    }\r\n    if (event === \"Block 2\") {\r\n      this.fieldValues[i] = [\r\n        \"MIRDate\",\r\n        \"MIRLogicalTerminal\",\r\n        \"MIRSequenceNumber\",\r\n        \"MIRSessionNumber\",\r\n        \"ReceiverOutputDate\",\r\n        \"ReceiverOutputTime\",\r\n        \"SenderInputTime\",\r\n        \"MessagePriority\",\r\n        \"MessageType\",\r\n        \"blockType\",\r\n      ];\r\n    }\r\n    if (event === \"Block 3\") {\r\n      this.fieldValues[i] = [\"113\", \"108\", \"119\"];\r\n    }\r\n    if (event === \"Block 5\") {\r\n      this.fieldValues[i] = [\"MAC\", \"CHK\"];\r\n    }\r\n    if (event === \"AppHdr\") {\r\n      this.fieldValues[i] = [\r\n        \"Fr>FIId>FinInstnId>BICFI\",\r\n        \"To>FIId>FinInstnId>BICFI\",\r\n        \"BizMsgIdr\",\r\n        \"MsgDefIdr\",\r\n        \"CreDt\",\r\n        \"PssblDplct\",\r\n      ];\r\n    }\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { DataTablesModule } from 'angular-datatables';\r\nimport { AddSystemRoutingModule } from './add-system-routing.module';\r\nimport { AddSystemComponent } from './add-system.component';\r\nimport { ComponentsModule } from 'src/app/shared/components/components.module';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { AddSystemSummaryComponent } from '../add-system-summary/add-system-summary.component';\r\nimport { NgxSpinnerModule } from 'ngx-spinner';\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\n\r\n@NgModule({\r\n  declarations: [AddSystemComponent,AddSystemSummaryComponent],\r\n  imports: [\r\n    CommonModule,\r\n    DataTablesModule,\r\n    AddSystemRoutingModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    ComponentsModule,\r\n    NgxSpinnerModule,\r\n    NgSelectModule\r\n  ]\r\n})\r\nexport class AddSystemModule { }\r\n"]}