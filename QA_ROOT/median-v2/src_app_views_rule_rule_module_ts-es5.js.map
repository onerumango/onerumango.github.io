{"version":3,"mappings":"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AAAGA;;AAAwBA;;AAC7BA;;AACFA;;AACFA;;AACFA;;AACFA;;AACAA;;AACEA;;AACEA;;AACEA;;AACEA;;AACEA;;AACFA;;AACFA;;AACAA;;AACEA;;AACEA;;AAAIA;;AAAgBA;;AACpBA;;AAAGA;;;;AAAuDA;;AAC5DA;;AACFA;;AACFA;;AACFA;;AACFA;;AACAA;;AACEA;;AACEA;;AACEA;;AACEA;;AACEA;;AACFA;;AACFA;;AACAA;;AACEA;;AACEA;;AAAIA;;AAAaA;;AACjBA;;AAAGA;;AAAmHA;;AACxHA;;AACFA;;AACFA;;AACFA;;AACFA;;AACAA;;AACEA;;AACEA;;AACEA;;AACEA;;AACAA;;AACAA;;AACFA;;AACAA;;AACEA;;AACEA;;AAAIA;;AAAOA;;AACXA;;AAAGA;;AAAyBA;;AAC9BA;;AACFA;;AACFA;;AACFA;;AACFA;;AACAA;;AACEA;;AACEA;;AACEA;;AACEA;;AACEA;;AACFA;;AACFA;;AACAA;;AACEA;;AACEA;;AAAIA;;AAAkBA;;AACtBA;;AAAGA;;;;AAAwDA;;AAC7DA;;AACFA;;AACFA;;AACFA;;AACFA;;AACAA;;AACEA;;AACEA;;AACEA;;AACEA;;AACEA;;AACFA;;AACFA;;AACAA;;AACEA;;AACEA;;AAAIA;;AAAwBA;;AAC5BA;;AAAGA;;AAA4GA;;AACjHA;;AACFA;;AACFA;;AACFA;;AACFA;;AACAA;;AACEA;;AACEA;;AACEA;;AACEA;;AACCA;;AACDA;;AACFA;;AACAA;;AACEA;;AACEA;;AAAIA;;AAAoBA;;AACxBA;;AAAGA;;AAA6MA;;AAClNA;;AACFA;;AACFA;;AACFA;;AACFA;;AACAA;;AACEA;;AACEA;;AACEA;;AACEA;;AACGA;;AACHA;;AACFA;;AACAA;;AACEA;;AACEA;;AAAIA;;AAAmBA;;AACvBA;;AAAGA;;AAAwBA;;AAC7BA;;AACFA;;AACFA;;AACFA;;AACFA;;AACFA;;AACFA;;AACFA;;;;AAvvBSA;;AAAAA;;AAqkBiBA;;AAAAA;;AAmDPA;;AAAAA;;AAiBAA;;AAAAA;;AAiBA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A;;AAgBCA;;AAAAA;;;;;;AAUZA;;AACEA;;AACEA;;AACEA;;AACEA;;AACEA;;AACEA;;AACEA;;AACFA;;AACFA;;AACAA;;AACEA;;AACEA;;AAAIA;;AAAKA;;AACTA;;AAAGA;;AAA0BA;;AAC/BA;;AACFA;;AACFA;;AACFA;;AACFA;;AACAA;;AACEA;;AACEA;;AACEA;;AACEA;;AACEA;;AACFA;;AACFA;;AACAA;;AACEA;;AACEA;;AAAIA;;AAAgBA;;AACpBA;;AACEA;;;;AACFA;;AACFA;;AACFA;;AACFA;;AACFA;;AACFA;;AACAA;;AACEA;;AACEA;;AACEA;;AACEA;;AACEA;;AACFA;;AACFA;;AACAA;;AACEA;;AACEA;;AAAIA;;AAAaA;;AACjBA;;AAAGA;;AAA6BA;;AAClCA;;AACFA;;AACFA;;AACFA;;AACFA;;AACAA;;AACEA;;AACEA;;AACEA;;AACEA;;AACEA;;AACFA;;AACFA;;AACAA;;AACEA;;AACEA;;AAAIA;;AAAOA;;AACXA;;AAAGA;;AAA2BA;;AAChCA;;AACFA;;AACFA;;AACFA;;AACFA;;AACAA;;AACEA;;AACEA;;AACEA;;AACEA;;AACEA;;AACFA;;AACFA;;AACAA;;AACEA;;AACEA;;AAAIA;;AAAkBA;;AACtBA;;AACEA;;;;AACFA;;AACFA;;AACFA;;AACFA;;AACFA;;AACFA;;AACAA;;AACEA;;AACEA;;AACEA;;AACEA;;AACEA;;AACFA;;AACFA;;AACAA;;AACEA;;AACEA;;AAAIA;;AAAwBA;;AAC5BA;;AAAGA;;AAA6BA;;AAClCA;;AACFA;;AACFA;;AACFA;;AACFA;;AACAA;;AACEA;;AACEA;;AACEA;;AACEA;;AACEA;;AAKFA;;AACFA;;AACAA;;AACEA;;AACEA;;AAAIA;;AAAoBA;;AACxBA;;AAAGA;;AAA+BA;;AACpCA;;AACFA;;AACFA;;AACFA;;AACFA;;AACAA;;AACEA;;AACEA;;AACEA;;AACEA;;AACEA;;AAKFA;;AACFA;;AACAA;;AACEA;;AACEA;;AAAIA;;AAAmBA;;AACvBA;;AAAGA;;AAA0B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","names":["_angular_core__WEBPACK_IMPORTED_MODULE_8__","ctx_r52","ctx_r57","ctx_r62","ctx_r67","ctx_r72","validation_r77","ctx_r30","ctx_r3","RuleDetails2Component","cdr","_route","roleService","canDeactivateGuard","addsystem","rules","toastService","router","formBuilder","RuleConfig","RuleValidation","RuleDto","src_app_shared_models_fmosNewRolePermissions__WEBPACK_IMPORTED_MODULE_2__","rxjs__WEBPACK_IMPORTED_MODULE_9__","currentUser","localStorage","getItem","ruleForm","group","ruleId","_angular_forms__WEBPACK_IMPORTED_MODULE_10__","ruleName","sourceSystems","getSourceItem","destinationSystems","getDestinationItem","validationSystems","array","sysRuleDetails","console","log","snapshot","params","getRuleData","fetchScreenPermissions","screenLabelList","subscribe","roleCodes","message","setTimeout","disable","hideSubmit","enable","isExit","touched","formTouched","sweetalert2__WEBPACK_IMPORTED_MODULE_1___default","text","showCancelButton","confirmButtonColor","cancelButtonColor","cancelButtonText","confirmButtonText","icon","then","result","isConfirmed","markForCheck","Promise","resolve","reject","gettingCreateRuleById","resp","editRule","ruleConfig","approvedEver","recordStatus","approvedStatus","approverId","createdTime","creatorId","sysRuleId","versionNo","multipleValidationData","multipleValidation","arrRuleValidation","index","length","addSysRuleDetails","sysRule","selectedHttpMessageKeyValues","messageKey","selectedTcpMessageKeyValues","selectedDBMessageKeyValues","at","patchValue","addValidationGroup","validation","value","get","authBtnHide","reopenBtn","auditLog","gettingExternalSsytem","gettingSysCode","sourceresp","sourceTranslationId","systemCode","sourcedata","onSlectionExternalSystem","targetResp","targetTranslationId","destinationId","destinaltionSelection","forEach","el","i","onGetValidtion","validationSystem","sourceSystem","messageType","serviceName","operationName","destinationSystem","service","operation","id","validationMethod","validationDetail","event","val","push","getValidationItem","getSysRuleDetails","removeAt","selectedSystems","Set","map","filteredExternalSystems","externalsystem","filter","has","item","isEdit","gettingExternalsystem","extsysRes","sourcesystem","externalCreateSystemFiltered","system","desSystem","gettingTranslationData","sourceSysData","ruleMappDetails","msgTransDetails","transId","gettingoperationAndServiceFroSourceSystem","msgType","ssysName","gettingoperationAndService","sourceOperation","sourceResp","OPERATION","sourceService","SERVICE","sourceDetails","MdmtSystemChannel","messageChannel","messageFormat","messageBasisIso","MdmtSystemService","k","err","destination","srcSystem","destinationSysData","destiMsgType","operationAndservDstination","destinationRespOperation","destinatioRespService","gettingoperationSndservForValidation","validationData","valData","msg","valResp","valOperation","valService","valDeatils","xmlRespData","mdmtValidationSystemData","editRuleConfig","data","ModifyCreateRule","submit","showRuleValidation","fetchingIsoForTcp","isoRespData","isoResp","gettinXMLmsgIncoming","xmlResp","selectedExternalSystems","selectedMessageKeySet","validationTransData","authResp","authorizeDone","iconColor","closeResp","editBtn","authBtn","deleted","openResp","onDeleteRuleCongif","response","closeBtn","navigateByUrl","jquery__WEBPACK_IMPORTED_MODULE_0__","click","removeClass","parents","siblings","find","toggleClass","document","on","$trigger","target","includes","selectors","decls","vars","consts","template","MultipleValidation","_angular_core__WEBPACK_IMPORTED_MODULE_5__","ctx_r46","ctx_r84","ctx_r89","ctx_r94","ctx_r99","ctx_r104","ctx_r115","data_r124","ctx_r123","ctx_r133","ctx_r140","ctx_r58","ctx_r1","RuleDetailsComponent","ruleService","rxjs__WEBPACK_IMPORTED_MODULE_6__","headerTagData1","initForm","_angular_forms__WEBPACK_IMPORTED_MODULE_7__","removeSysRules","tempArrayList","splice","tempArrayList2","valid","controls","setErrors","invalid","dirty","sourceMsg","tempArrayData","I","O","keys","Object","x","y","translationDataService","multipleServiceSource","translationDataOperation","multipleOperationSource","translationDestDataOperation","translationDestDataService","multipleService","multipleOperation","destinationMsg","gettingoperationAndServiceFroDestinationSystem","selectedDocumentTypes2","validationMsg","res","sort","sourcesysdata","translationValDataService","translationValDataOperation","operationType","editFlag","e","regexp","ruleIdInvalid","search","ruleIdAfterSave","setValue","auditShowStatus","saveRuleconfig","col","row","RuleListComponent","addSystem","http","src_app_shared_models_fmosNewRolePermissions__WEBPACK_IMPORTED_MODULE_1__","src_app_shared_config_app_constant__WEBPACK_IMPORTED_MODULE_0__","dtOptions","pagingType","pageLength","serverSide","columnDefs","type","order","lengthMenu","ajax","dataTablesParameters","callback","minNumber","start","maxNumber","pageNo","Math","floor","pageSize","API_URL","statusArr","startsWith","totalPages","totalNoOfPages","totalRecords","rulesData","isLoading","recordsTotal","recordsFiltered","fetchingRules","dtTrigger","next","error","navigate","unsubscribe","sweetalert2__WEBPACK_IMPORTED_MODULE_2___default","window","location","reload","routes","path","component","_rule_list_rule_list_component__WEBPACK_IMPORTED_MODULE_2__","_rule_details_rule_details_component__WEBPACK_IMPORTED_MODULE_0__","_rule_details2_rule_details2_component__WEBPACK_IMPORTED_MODULE_1__","RuleRoutingModule","_angular_router__WEBPACK_IMPORTED_MODULE_4__","imports","exports","RuleModule","_angular_common__WEBPACK_IMPORTED_MODULE_6__","_rule_routing_module__WEBPACK_IMPORTED_MODULE_0__","angular_datatables__WEBPACK_IMPORTED_MODULE_3__","_ng_select_ng_select__WEBPACK_IMPORTED_MODULE_8__","declarations","_rule_details_rule_details_component__WEBPACK_IMPORTED_MODULE_1__","_rule_details2_rule_details2_component__WEBPACK_IMPORTED_MODULE_4__"],"sources":["webpack:///src/app/views/rule/rule-details2/rule-details2.component.html","webpack:///src/app/views/rule/rule-details2/rule-details2.component.ts","webpack:///src/app/views/rule/rule-details/rule-details.component.html","webpack:///src/app/views/rule/rule-details/rule-details.component.ts","webpack:///src/app/views/rule/rule-list/rule-list.component.html","webpack:///src/app/views/rule/rule-list/rule-list.component.ts","webpack:///src/app/views/rule/rule-routing.module.ts","webpack:///src/app/views/rule/rule.module.ts"],"sourcesContent":["<div class=\"pageContentMain\">\r\n  <div class=\"pageTitleCol\">\r\n    <h2 class=\"pageTitle\">Edit Rule</h2>\r\n  </div>\r\n  <form *ngIf=\"ruleForm\" class=\"formStyle\" [formGroup]=\"ruleForm\" novalidate>\r\n    <fieldset [disabled]=\"!submit || !hideSubmit\">\r\n    <div class=\"dbCardStyle\" *ngIf=\"!showRuleValidation\">\r\n      <div class=\"row gy-4\">\r\n        <div class=\"col-lg-4\">\r\n          <label class=\"formLbl\">Rule ID<span class=\"colorRed\">*</span></label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"ruleId\"\r\n            name=\"ruleId\"\r\n            class=\"form-control\"\r\n            formControlName=\"ruleId\"\r\n            placeholder=\"Rule ID\"\r\n            readonly\r\n          />\r\n        </div>\r\n        <div class=\"col-lg-4\">\r\n          <label class=\"formLbl\">Rule Name<span class=\"colorRed\">*</span></label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"ruleName\"\r\n            name=\"ruleName\"\r\n            class=\"form-control\"\r\n            placeholder=\"Rule Name\"\r\n            formControlName=\"ruleName\"\r\n            readonly\r\n          />\r\n        </div>\r\n        <div formGroupName=\"sourceSystems\" class=\"col-lg-12\">\r\n          <div class=\"formContent\">\r\n            <div class=\"titleStyle mb-3\">\r\n              <h2 class=\"pageTitle\">Source System</h2>\r\n            </div>\r\n            <div class=\"row gy-4\">\r\n              <div class=\"col-lg-3\">\r\n                <label for=\"sourceSystem\" class=\"formLbl\">System<span class=\"colorRed\">*</span></label>\r\n                <!-- <ng-select id=\"outlineNgSelect\"\r\n                  id=\"sourceSystem\"\r\n                  class=\"form-select\" [readonly]=\"!hideSubmit\"\r\n                  aria-label=\"Default select example\"\r\n                  formControlName=\"sourceSystem\"\r\n                  (change)=\"onSlectionExternalSystem($event)\"\r\n                >\r\n                  <ng-option hidden value=\"\" disabled selected >Please select System</ng-option>\r\n                  <ng-option\r\n                    *ngFor=\"let sys of externalsystem\"\r\n                    [value]=\"sys\"\r\n                    [hidden]=\"sys == desSystem || sys == validationData\"\r\n                  >\r\n                    {{ sys }}\r\n                  </ng-option>\r\n                </ng-select> -->\r\n                <ng-select [items]=\"externalCreateSystemFiltered\"\r\n                class=\"form-select\"\r\n                formControlName=\"sourceSystem\"\r\n                (change)=\"onSlectionExternalSystem($event)\">\r\n                </ng-select>\r\n              </div>\r\n              <div class=\"col-lg-3\">\r\n                <label for=\"messageType\" class=\"formLbl\">Message Type</label>\r\n                <select\r\n                  id=\"messageType\"\r\n                  class=\"form-select\"\r\n                  aria-label=\"Default select example\"\r\n                  formControlName=\"messageType\"\r\n                  disabled\r\n                >\r\n                  <!-- <option value=\"\" [selected]=\"isSelected\">\r\n                    --Please Select---\r\n                  </option> -->\r\n                  <option value=\"A\">All</option>\r\n                  <option value=\"I\">Incoming</option>\r\n                  <option value=\"O\">OutGoing</option>\r\n                \r\n                </select>\r\n              </div>\r\n              <div class=\"col-lg-3\">\r\n                <label for=\"operationName\" class=\"formLbl\">Operation</label>\r\n                <input\r\n                  id=\"operationName\"\r\n                  type=\"text\"\r\n                  class=\"form-control\"\r\n                  formControlName=\"operationName\"\r\n                  placeholder=\"Operation Name\"\r\n                  [readonly]=\"true\"\r\n                />\r\n              </div>\r\n              <div class=\"col-lg-3\">\r\n                <label for=\"serviceName\" class=\"formLbl\">Service</label>\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"serviceName\"\r\n                  class=\"form-control\"\r\n                  formControlName=\"serviceName\"\r\n                  placeholder=\"Service Name\"\r\n                  [readonly]=\"true\"\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div formGroupName=\"destinationSystems\" class=\"col-lg-12\">\r\n          <div class=\"formContent\">\r\n            <div class=\"titleStyle mb-3\">\r\n              <h2 class=\"pageTitle\">Destination System</h2>\r\n            </div>\r\n            <div class=\"row gy-4\">\r\n              <div class=\"col-lg-3\">\r\n                <label for=\"destinationSystem\" class=\"formLbl\">System<span class=\"colorRed\">*</span></label>\r\n                <!-- <ng-select id=\"outlineNgSelect\"\r\n                  class=\"form-select\" \r\n                  aria-label=\"Default select example\"\r\n                  formControlName=\"destinationSystem\"\r\n                  (change)=\"destinaltionSelection($event)\" [readonly]=\"!hideSubmit\"\r\n                  >\r\n                <ng-option hidden value=\"\" disabled selected >Please select System</ng-option>\r\n                  <ng-option\r\n                    *ngFor=\"let sys of externalsystem\"\r\n                    [hidden]=\"sys === srcSystem || sys == validationData\"\r\n                    [value]=\"sys\"\r\n                  >\r\n                    {{ sys }}\r\n                  </ng-option>\r\n                </ng-select> -->\r\n                <ng-select [items]=\"externalCreateSystemFiltered\"\r\n                class=\"form-select\"\r\n                formControlName=\"destinationSystem\"\r\n                (change)=\"destinaltionSelection($event)\">\r\n                </ng-select>\r\n\r\n\r\n                \r\n              </div>\r\n              <div class=\"col-lg-3\">\r\n                <label class=\"formLbl\">Message Type</label>\r\n                <select\r\n                  id=\"destinationSystem\"\r\n                  class=\"form-select\"\r\n                  aria-label=\"Default select example\"\r\n                  formControlName=\"messageType\"\r\n                >\r\n                <option hidden value=\"\" disabled selected >--Please select--</option>\r\n                  <!-- <option value=\"\" [selected]=\"isSelected\">\r\n                    --Please Select---\r\n                  </option> -->\r\n                  <option value=\"I\">Incoming</option>\r\n                  <option value=\"O\">OutGoing</option>\r\n                  <option value=\"A\">All</option>\r\n                </select>\r\n              </div>\r\n              <div class=\"col-lg-3\">\r\n                <label class=\"formLbl\">Operation</label>\r\n                <input\r\n                  id=\"operationName\"\r\n                  type=\"text\"\r\n                  class=\"form-control\"\r\n                  formControlName=\"operationName\"\r\n                  placeholder=\"Operation Name\"\r\n                  [readonly]=\"true\"\r\n                />\r\n              </div>\r\n              <div class=\"col-lg-3\">\r\n                <label class=\"formLbl\">Service</label>\r\n                <input\r\n                  id=\"serviceName\"\r\n                  type=\"text\"\r\n                  class=\"form-control\"\r\n                  formControlName=\"serviceName\"\r\n                  placeholder=\"Service Name\"\r\n                  [readonly]=\"true\"\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-lg-12\">\r\n          <div\r\n            class=\"formContent border-bottom-0 pb-0\"\r\n            formArrayName=\"validationSystems\"\r\n          >\r\n            <div class=\"titleStyle mb-3\">\r\n              <h2 class=\"pageTitle\">Validation System</h2>\r\n            </div>\r\n            <ng-container\r\n              *ngFor=\"let item of validationSystems.controls; let i = index\"\r\n            >\r\n              <ng-container [formGroupName]=\"i\">\r\n                <div class=\"row gy-4 align-items-center mt-1\">\r\n                  <div class=\"col-lg\">\r\n                    <label class=\"formLbl\" *ngIf=\"i==0\">System</label>\r\n                    <!-- <ng-select id=\"outlineNgSelect\"\r\n                      id=\"systemOne\"\r\n                      class=\"form-select\" [readonly]=\"!hideSubmit\"\r\n                      formControlName=\"validationSystem\"\r\n                      aria-label=\"Default select example\"\r\n                      (change)=\"onValidtion($event, i)\"\r\n                    >\r\n                    <ng-option hidden value=\"\" disabled selected >Please select System</ng-option>\r\n                      <ng-option\r\n                        *ngFor=\"let sys of externalsystem\"\r\n                        [value]=\"sys\"\r\n                        [hidden]=\"\r\n                          sys == desSystem ||\r\n                          sys == srcSystem\r\n                        \"\r\n                      >\r\n                        {{ sys }}\r\n                      </ng-option>\r\n                    </ng-select> -->\r\n                    <ng-select \r\n                    id=\"outlineNgSelect\"\r\n                    id=\"systemOne\"\r\n                    [items]=\"filteredExternalSystems\"\r\n                    class=\"form-select\"\r\n                    formControlName=\"validationSystem\"\r\n                    [readonly]=\"!hideSubmit\"\r\n                    (change)=\"onValidtion($event, i)\">\r\n                    </ng-select>\r\n\r\n                  </div>\r\n                  <div class=\"col-lg\">\r\n                    <label class=\"formLbl\" *ngIf=\"i==0\">Message Type</label>\r\n                    <select\r\n                      id=\"messageType\"\r\n                      formControlName=\"messageType\"\r\n                      class=\"form-select\"\r\n                      aria-label=\"Default select example\"\r\n                      disabled\r\n                    >\r\n                    <option hidden value=\"\" disabled selected >--Please select--</option>\r\n                      <!-- <option value=\"\" [selected]=\"isSelected\">\r\n                        --Please Select---\r\n                      </option> -->\r\n                      <option value=\"I\">Incoming</option>\r\n                      <option value=\"O\">OutGoing</option>\r\n                      <option value=\"A\">All</option>\r\n                    </select>\r\n                  </div>\r\n                  <div class=\"col\">\r\n                    <label class=\"formLbl\" *ngIf=\"i==0\">Operation</label>\r\n                    <input\r\n                      id=\"operationName\"\r\n                      type=\"text\"\r\n                      class=\"form-control\"\r\n                      formControlName=\"operation\"\r\n                      placeholder=\"Operation Name\"\r\n                      [readonly]=\"true\"\r\n                    />\r\n                  </div>\r\n                  <div class=\"col-lg\">\r\n                    <label class=\"formLbl\" *ngIf=\"i==0\">Service</label>\r\n                    <input\r\n                      id=\"serviceName\"\r\n                      type=\"text\"\r\n                      class=\"form-control\"\r\n                      formControlName=\"service\"\r\n                      placeholder=\"Service Name\"\r\n                      [readonly]=\"true\"\r\n                    />\r\n                  </div>\r\n                  <div class=\"col-auto\" [ngStyle]=\"{'margin-top':i === 0 ? '50px' : '20px' }\">\r\n                      <a *ngIf=\"hideSubmit\" (click)=\"deleteVFGroup(i)\" style=\"cursor: pointer;\">\r\n                        <span class=\"ddIcon\">\r\n                          <img\r\n                            src=\"assets/images/delete-icon.svg\"\r\n                            alt=\"...\"\r\n                          />\r\n                        </span>\r\n                      </a>\r\n                  </div>\r\n                </div>\r\n              </ng-container>\r\n            </ng-container>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-lg-12\" *ngIf=\"hideSubmit\">\r\n          <a (click)=\"hideSubmit ? addValidationGroup() : ''\" class=\"addIcon primarybg\" style=\"cursor: pointer;\">\r\n            <span\r\n              ><img src=\"assets/images/plus-icon.svg\" alt=\"...\"\r\n            /></span>\r\n          </a>\r\n        </div>\r\n\r\n        \r\n      </div>\r\n    </div>\r\n</fieldset>\r\n    <ng-container *ngIf=\"showRuleValidation || !hideSubmit\">\r\n      <div class=\"dbCardStyle\">\r\n        <fieldset [disabled]=\"!submit || !hideSubmit\">\r\n          <table\r\n            id=\"dbTable1\"\r\n            class=\"table tableStyle vAlignMdl responsive nowrap\"\r\n            style=\"border-spacing: 10px;\r\n            border-collapse: separate;\"\r\n          >   \r\n            <thead>\r\n              <tr class=\"tbleheadStyle\">\r\n                <th>Source System</th>\r\n                <th\r\n                  *ngFor=\"\r\n                    let validation of validationSystems.value;\r\n                    let i = index\r\n                  \">\r\n                  Validation System {{ i+1 }}\r\n                </th>\r\n                <th [attr.colspan]=\"validationSystems.value.length+2\" style=\"text-align: center;\">Validation Rule</th>\r\n              </tr>\r\n              <tr>\r\n                <td class=\"src-sys-style\">\r\n                  <p class=\"td-highlight\">{{ sourceSystems.sourceSystem }}</p>\r\n                    <!-- <input\r\n                      id=\"srcSys\"\r\n                      type=\"text\"\r\n                      class=\"form-control\"\r\n                      [value]=\"sourceSystems.sourceSystem\"\r\n                      [readonly]\r\n                    /> -->\r\n                </td>\r\n                <td class=\"src-sys-style\" *ngFor=\"let validation of validationSystems.value;let idx = index; trackBy:indexTracker\">\r\n                  <p class=\"td-highlight\">{{ validation.validationSystem }}</p>\r\n                  <!-- <input\r\n                  name=\"validSys{{ idx }}\"\r\n                  type=\"text\"\r\n                  class=\"form-control\"\r\n                  [value]=\"validation.validationSystem\"\r\n                  [readonly]\r\n                /> -->\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <th>\r\n                  <ng-container *ngIf=\"sourceDetails == 'TCP/IP' || sourceDetails == 'MT' || sourceDetails == 'MX'\"> Field No. </ng-container>\r\n                  <ng-container *ngIf=\"sourceDetails == 'JSON'\"> Key </ng-container>\r\n                  <ng-container *ngIf=\"sourceDetails == 'XML'\"> Tag </ng-container>\r\n                  <ng-container *ngIf=\"sourceDetails == 'DB Connection'\">  Column Name </ng-container>\r\n                </th>\r\n                <th\r\n                  *ngFor=\"\r\n                    let validation of validationSystems.value;\r\n                    let i = index\r\n                  \"\r\n                >\r\n                <ng-container *ngIf=\"valDeatils == 'TCP/IP'  || sourceDetails == 'MT' || sourceDetails == 'MX'\"> Field No. </ng-container>\r\n                <ng-container *ngIf=\"sourceDetails == 'JSON'\"> Key </ng-container>\r\n                <ng-container *ngIf=\"sourceDetails == 'XML'\"> Tag </ng-container>\r\n                <ng-container *ngIf=\"valDeatils == 'DB Connection'\">  Column Name </ng-container>\r\n                </th>\r\n                <th style=\"text-align: center;\">validation method</th>\r\n                <th style=\"text-align: center;\">validation details</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <ng-container formArrayName=\"sysRuleDetails\">\r\n                <tr *ngFor=\"let rule of sysRuleDetails.controls; let i = index\">\r\n                  <ng-container [formGroup]=\"rule\">\r\n                    <td>\r\n                      <ng-container *ngIf=\"sourceDetails == 'TCP/IP'\">\r\n                        <select id=\"outlineNgSelect\"\r\n                        id=\"susRuleMsg\" [disabled]=\"!hideSubmit\"\r\n                        (change)=\"handleTcpMessageKeyChange($event, i)\"\r\n                        formControlName=\"messageKey\"\r\n                        class=\"form-select\"\r\n                        aria-label=\"Default select example\"\r\n                      >\r\n                      <option hidden value=\"\" disabled selected >Please select Field No</option>\r\n                        <option\r\n                          *ngFor=\"let data of ruleMappDetails\"\r\n                          [value]=\"data.messagebasis\"\r\n                          [hidden]=\"shouldHideTcpMessageKeyOption(data.messageKey)\"\r\n                          required\r\n                        >\r\n                          {{ data.messageKey }} {{ data.messagebasis }}\r\n                        </option>\r\n                      </select>\r\n                      </ng-container>\r\n                      <ng-container *ngIf=\"sourceDetails=='XML'\">\r\n                        <select id=\"outlineNgSelect\"\r\n                        id=\"susRuleMsg\"\r\n                        (change)=\"handleHttpMessageKeyChange($event, i)\"\r\n                        formControlName=\"messageKey\"\r\n                        class=\"form-select\" [disabled]=\"!hideSubmit\"\r\n                        aria-label=\"Default select example\"\r\n                      >    <option hidden value=\"\" disabled selected >Please select Tag</option>\r\n                        <option\r\n                          *ngFor=\"let data of ruleMappDetails\"\r\n                          [value]=\"data.messagebasis\"\r\n                          [hidden]=\"shouldHideHttpMessageKeyOption(data.messageKey)\"\r\n                          required\r\n                        >\r\n                        {{ data.messageKey }} {{ data.messagebasis }}\r\n                        </option>\r\n                      </select>\r\n                      </ng-container>\r\n                      <ng-container *ngIf=\"sourceDetails=='JSON'\">\r\n                        <select id=\"outlineNgSelect\"\r\n                        id=\"susRuleMsg\"\r\n                        (change)=\"handleHttpMessageKeyChange($event, i)\"\r\n                        formControlName=\"messageKey\"\r\n                        class=\"form-select\" [disabled]=\"!hideSubmit\"\r\n                        aria-label=\"Default select example\"\r\n                      >    <option hidden value=\"\" disabled selected >Please select Key</option>\r\n                        <option\r\n                          *ngFor=\"let data of ruleMappDetails\"\r\n                          [value]=\"data.messagebasis\"\r\n                          [hidden]=\"shouldHideHttpMessageKeyOption(data.messageKey)\"\r\n                          required\r\n                        >\r\n                        {{ data.messageKey }} {{ data.messagebasis }}\r\n                        </option>\r\n                      </select>\r\n                      </ng-container>\r\n                      <ng-container *ngIf=\"sourceDetails == 'DB Connection'\">\r\n                        <select id=\"outlineNgSelect\"\r\n                        id=\"susRuleMsg\" [disabled]=\"!hideSubmit\"\r\n                        (change)=\"handleDBMessageKeyChange($event, i)\"\r\n                        formControlName=\"messageKey\"\r\n                        class=\"form-select\"\r\n                        aria-label=\"Default select example\"\r\n                      >\r\n                      <option hidden value=\"\" disabled selected >Please select Column Name</option>\r\n                        <option\r\n                          *ngFor=\"let data of ruleMappDetails\"\r\n                          [value]=\"data.messagebasis\"\r\n                          [hidden]=\"shouldHideDBMessageKeyOption(data.messageKey)\"\r\n                          required\r\n                        >\r\n                          {{ data.messageKey }} {{ data.messagebasis }}\r\n                        </option>\r\n                      </select>\r\n                      </ng-container>\r\n                      <ng-container *ngIf=\"sourceDetails == 'MT' || sourceDetails == 'MX' \">\r\n                        <select id=\"outlineNgSelect\"\r\n                        id=\"susRuleMsg\" [disabled]=\"!hideSubmit\"\r\n                        (change)=\"handleDBMessageKeyChange($event, i)\"\r\n                        formControlName=\"messageKey\"\r\n                        class=\"form-select\"\r\n                        aria-label=\"Default select example\"\r\n                      >\r\n                      <option hidden value=\"\" disabled selected >Please select Field No</option>\r\n                        <option\r\n                          *ngFor=\"let data of ruleMappDetails\"\r\n                          [value]=\"data.messagebasis\"\r\n                          [hidden]=\"shouldHideDBMessageKeyOption(data.messageKey)\"\r\n                          required\r\n                        >\r\n                          {{ data.messageKey }} {{ data.messagebasis }}\r\n                        </option>\r\n                      </select>\r\n                      </ng-container>\r\n                    </td>\r\n                    <td\r\n                      *ngFor=\"let validation of validationSystems.value;let idx = index; trackBy:indexTracker\">\r\n                        <ng-container *ngIf=\"valDeatils == 'TCP/IP'\">\r\n                          <select id=\"outlineNgSelect\"\r\n                          name=\"messageKey_{{idx}}\" \r\n                          required [disabled]=\"!hideSubmit\"\r\n                          #messageKey=\"ngModel\" \r\n                          [(ngModel)]=\"validation.messageKey\"\r\n                          class=\"form-select\"\r\n                        >\r\n                        <option hidden value=\"\" disabled selected >Please select Field No</option>\r\n                          <option\r\n                            *ngFor=\"let data of xmlRespData\"\r\n                            [value]=\"data.messagebasis\"\r\n                            required \r\n                          > \r\n                            {{ data.messageKey }} {{ data.messagebasis }}\r\n                          </option>\r\n                        </select>\r\n                        </ng-container>\r\n                        <ng-container *ngIf=\"valDeatils=='Https/Http'\">\r\n                          <select id=\"outlineNgSelect\"\r\n                          name=\"messageKey_{{idx}}\" \r\n                          required [disabled]=\"!hideSubmit\"\r\n                          #messageKey=\"ngModel\" \r\n                          [(ngModel)]=\"validation.messageKey\"\r\n                          class=\"form-select\"\r\n                        >\r\n                        <option hidden value=\"\" disabled selected >Please select Tag</option>\r\n                          <option\r\n                            *ngFor=\"let data of xmlRespData\"\r\n                            [value]=\"data.messagebasis\"\r\n                            required\r\n                          >\r\n                          {{ data.messageKey }} {{ data.messagebasis }}\r\n                          </option>\r\n                        </select>\r\n                        </ng-container>\r\n                        <ng-container *ngIf=\"valDeatils=='DB Connection'\">\r\n                          <select id=\"outlineNgSelect\"\r\n                          name=\"messageKey_{{idx}}\" \r\n                          required [disabled]=\"!hideSubmit\"\r\n                          #messageKey=\"ngModel\" \r\n                          [(ngModel)]=\"validation.messageKey\"\r\n                          class=\"form-select\"\r\n                        >\r\n                        <option hidden value=\"\" disabled selected >Please select Column Name</option>\r\n                          <option\r\n                            *ngFor=\"let data of xmlRespData\"\r\n                            [value]=\"data.messagebasis\"\r\n                            required\r\n                          >\r\n                          {{ data.messageKey }} {{ data.messagebasis }}\r\n                          </option>\r\n                        </select>\r\n                        </ng-container>\r\n                        <ng-container *ngIf=\"valDeatils=='MT' || valDeatils=='MX'\">\r\n                          <select id=\"outlineNgSelect\"\r\n                          name=\"messageKey_{{idx}}\" \r\n                          required [disabled]=\"!hideSubmit\"\r\n                          #messageKey=\"ngModel\" \r\n                          [(ngModel)]=\"validation.messageKey\"\r\n                          class=\"form-select\"\r\n                        >\r\n                        <option hidden value=\"\" disabled selected >Please select Field No</option>\r\n                          <option\r\n                            *ngFor=\"let data of xmlRespData\"\r\n                            [value]=\"data.messagebasis\"\r\n                            required\r\n                          >\r\n                          {{ data.messageKey }} {{ data.messagebasis }}\r\n                          </option>\r\n                        </select>\r\n                        </ng-container>\r\n                    </td>\r\n\r\n                    <td>\r\n                      <input style=\"background-color: #F8F9FA;\"\r\n                        formControlName=\"validationMethod\"\r\n                        id=\"validationMethod\"\r\n                        type=\"text\"\r\n                        class=\"form-control\"\r\n                        placeholder=\"Validation Method\"\r\n                      />\r\n                    </td>\r\n                    <td>\r\n                      <input style=\"background-color: #F8F9FA;\"\r\n                        formControlName=\"validationDetail\"\r\n                        id=\"validationDetails\"\r\n                        type=\"text\"\r\n                        class=\"form-control\"\r\n                        placeholder=\"Validation Details\"\r\n                      />\r\n                    </td>\r\n                    <td class=\"tblIcon\" *ngIf=\"hideSubmit\">\r\n                      <a *ngIf=\"submit\"  (click)=\"removeSysRules(i)\" class=\"deleteIcon2\"><img src=\"assets/images/delete-icon.svg\" alt=\"...\"></a>\r\n                    </td>\r\n                  </ng-container>\r\n                </tr>\r\n              </ng-container>\r\n            </tbody>\r\n          </table>\r\n    \r\n        <div class=\"row g-3 pb-3 justify-content-start pt-3\" *ngIf=\"hideSubmit\">\r\n          <a *ngIf=\"submit || hideSubmit\" (click)=\"addSysRuleDetails()\" class=\"addIcon primarybg\" style=\"cursor: pointer;margin-left: 20px;\">\r\n            <span\r\n              ><img src=\"assets/images/plus-icon.svg\" alt=\"...\"\r\n            /></span>\r\n          </a>\r\n        </div>\r\n      </fieldset>\r\n        <div class=\"row g-3 pb-3 justify-content-end pt-3\" *ngIf=\"hideSubmit\">\r\n          <div class=\"col-auto\">\r\n            <button (click)=\"Previous()\" [disabled]=\"!submit\" class=\"btn smBtn minWdSmBtn btnDarkGrey\"\r\n              >Previous</button\r\n            >\r\n          </div>\r\n          <div class=\"col-auto\">\r\n            <button (click)=\"submittingCreateRule()\" [disabled]=\"ruleForm.get('sysRuleDetails').invalid || ruleForm.get('validationSystems').invalid || !ruleForm.dirty\" class=\"btn smBtn minWdSmBtn btnPrimary\"\r\n              >Save</button>\r\n          </div>\r\n          <div class=\"col-auto\">\r\n            <button class=\"btn smBtn minWdSmBtn btnSecondary\" [routerLink]=\"['/createrule/list']\">Exit</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </ng-container>\r\n  </form>\r\n  <!-- *ngIf=\"auditShowStatus\" -->\r\n  <br>\r\n  <div class=\"col-lg-12\" *ngIf=\"!showRuleValidation\">\r\n    <div class=\"row g-3 pb-3 justify-content-end pt-3\">\r\n      <div class=\"col-auto\" [hidden]=\"!hideSubmit\">\r\n        <button (click)=\"next()\" class=\"btn smBtn minWdSmBtn btnPrimary\" [disabled]=\"ruleForm.get('sysRuleDetails').invalid || ruleForm.get('validationSystems').invalid || !ruleForm.dirty\"\r\n          >Next</button\r\n        >\r\n      </div>\r\n      <div class=\"col-auto\" *ngIf=\"!(ruleConfig.recordStatus=='C' || ruleConfig.recordStatus=='CLOSED')\">\r\n        <button class=\"btn smBtn minWdSmBtn btnUpdate\" [hidden]=\"hideSubmit\" (click)=\"editValues()\"\r\n          >Edit</button\r\n        >\r\n      </div>\r\n      <div class=\"col-auto\" *ngIf=\"(ruleConfig.approvedStatus =='U' || ruleConfig.approvedStatus =='UNAUTHORIZED' || ruleConfig.approvedStatus =='N' || ruleConfig.approvedEver == 'N' )\"  [hidden]=\"hideSubmit\">\r\n        <button (click)=\"onAuthOfRule()\" class=\"btn smBtn minWdSmBtn btnAuth\" \r\n          >Auth</button\r\n        >\r\n      </div>\r\n      <div class=\"col-auto\" *ngIf=\"(ruleConfig.recordStatus=='O' ||ruleConfig.recordStatus=='OPEN') && (ruleConfig.approvedEver != 'NO' && ruleConfig.approvedEver != 'N')\"  [hidden]=\"hideSubmit\">\r\n        <button  (click)=\"onCloseOfRule()\" class=\"btn smBtn minWdSmBtn btnPrimary\"\r\n          >Close</button\r\n        >\r\n      </div>\r\n      <div class=\"col-auto\" *ngIf=\" (ruleConfig.recordStatus=='C' || ruleConfig.recordStatus=='CLOSED') && (ruleConfig.approvedEver != 'NO' && ruleConfig.approvedEver != 'N')\" [hidden]=\"hideSubmit\">\r\n        <button (click)=\"onOpenRule()\" class=\"btn smBtn minWdSmBtn btnPrimary\"\r\n          >Reopen</button\r\n        >\r\n      </div>\r\n      <div class=\"col-auto\" *ngIf=\"(ruleConfig.approvedEver=='NO' )\" [hidden]=\"hideSubmit\">\r\n        <button (click)=\"deleteRule()\" class=\"btn smBtn minWdSmBtn btnPrimary\"\r\n          >Delete</button\r\n        >\r\n      </div>\r\n      \r\n      <div class=\"col-auto\">\r\n        <button class=\"btn smBtn minWdSmBtn btnSecondary\" [routerLink]=\"['/createrule/list']\">Exit</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"dbCardStyle\">\r\n    <div class=\"row\">\r\n      <div class=\"col-sm-6 col-md-4 col-lg-3\">\r\n        <div class=\"csCardStyle\">\r\n          <div class=\"row g-2 align-items-center\">\r\n            <div class=\"col-auto\">\r\n              <div class=\"csCardStyleIcon csCardStyleIconBg1\">\r\n                  <i class=\"fa fa-edit faClass\"></i>\r\n              </div>\r\n            </div>\r\n            <div class=\"col\">\r\n              <div class=\"csCardStyleText\">\r\n                <h2>Maker</h2>\r\n                <p>{{ruleConfig.creatorId}}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-sm-6 col-md-4 col-lg-3\">\r\n        <div class=\"csCardStyle\">\r\n          <div class=\"row g-2 align-items-center\">\r\n            <div class=\"col-auto\">\r\n              <div class=\"csCardStyleIcon csCardStyleIconBg2\">\r\n                <img src=\"assets/images/time-stamp-icon.svg\" alt=\"...\" />\r\n              </div>\r\n            </div>\r\n            <div class=\"col\">\r\n              <div class=\"csCardStyleText\">\r\n                <h2>Maker Time Stamp</h2>\r\n                <p>{{ruleConfig.createdTime | date: 'MM/dd/yyyy, h:mm a'}}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-sm-6 col-md-4 col-lg-3\">\r\n        <div class=\"csCardStyle\">\r\n          <div class=\"row g-2 align-items-center\">\r\n            <div class=\"col-auto\">\r\n              <div class=\"csCardStyleIcon csCardStyleIconBg3\">\r\n                <img src=\"assets/images/record-status-icon.svg\" alt=\"...\" />\r\n              </div>\r\n            </div>\r\n            <div class=\"col\">\r\n              <div class=\"csCardStyleText\">\r\n                <h2>Record Status</h2>\r\n                <p>{{ruleConfig.recordStatus == 'O' ? 'OPEN' : (ruleConfig.recordStatus == 'C' ? 'CLOSED' : ruleConfig.recordStatus)}}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-sm-6 col-md-4 col-lg-3\">\r\n        <div class=\"csCardStyle\">\r\n          <div class=\"row g-2 align-items-center\">\r\n            <div class=\"col-auto\">\r\n              <div class=\"csCardStyleIcon csCardStyleIconBg4\">\r\n              <i class=\"fa fa-check-square-o faClassChecker\"></i>\r\n              </div>\r\n            </div>\r\n            <div class=\"col\">\r\n              <div class=\"csCardStyleText\">\r\n                <h2>Checker</h2>\r\n                <p>{{ruleConfig.approverId}}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-sm-6 col-md-4 col-lg-3\">\r\n        <div class=\"csCardStyle\">\r\n          <div class=\"row g-2 align-items-center\">\r\n            <div class=\"col-auto\">\r\n              <div class=\"csCardStyleIcon csCardStyleIconBg5\">\r\n                <img src=\"assets/images/checker-time-icon.svg\" alt=\"...\" />\r\n              </div>\r\n            </div>\r\n            <div class=\"col\">\r\n              <div class=\"csCardStyleText\">\r\n                <h2>Checker Time Stamp</h2>\r\n                <p>{{ruleConfig.approvedTime | date: 'MM/dd/yyyy, h:mm a'}}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-sm-6 col-md-4 col-lg-3\">\r\n        <div class=\"csCardStyle\">\r\n          <div class=\"row g-2 align-items-center\">\r\n            <div class=\"col-auto\">\r\n              <div class=\"csCardStyleIcon csCardStyleIconBg6\">\r\n                <img src=\"assets/images/first-auth-icon.svg\" alt=\"...\" />\r\n              </div>\r\n            </div>\r\n            <div class=\"col\">\r\n              <div class=\"csCardStyleText\">\r\n                <h2>First Time Authorization</h2>\r\n                <p>{{ruleConfig.approvedEver == 'N'? 'NO' : (ruleConfig.approvedEver == 'Y'? 'YES' : ruleConfig.approvedEver)}}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-sm-6 col-md-4 col-lg-3\">\r\n        <div class=\"csCardStyle\">\r\n          <div class=\"row g-2 align-items-center\">\r\n            <div class=\"col-auto\">\r\n              <div class=\"csCardStyleIcon csCardStyleIconBg7\">\r\n               <img src=\"assets/images/authorize.svg\" alt=\"...\" class=\"modImage\">\r\n              </div>\r\n            </div>\r\n            <div class=\"col\">\r\n              <div class=\"csCardStyleText\">\r\n                <h2>Authorization Status</h2>\r\n                <p>{{ruleConfig.approvedStatus == 'N' || ruleConfig.approvedStatus == 'U' ? 'UNAUTHORIZED' : (ruleConfig.approvedStatus == 'Y' || ruleConfig.approvedStatus == 'A' ? 'AUTHORIZED' : ruleConfig.approvedStatus)}}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-sm-6 col-md-4 col-lg-3\">\r\n        <div class=\"csCardStyle\">\r\n          <div class=\"row g-2 align-items-center\">\r\n            <div class=\"col-auto\">\r\n              <div class=\"csCardStyleIcon csCardStyleIconBg7\">\r\n                 <img src=\"assets/images/modification.svg\" class=\"modImage\" alt=\"...\" >\r\n              </div>\r\n            </div>\r\n            <div class=\"col\">\r\n              <div class=\"csCardStyleText\">\r\n                <h2>Modification Number</h2>\r\n                <p>{{ruleConfig.versionNo}}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { ChangeDetectorRef, Component, OnInit } from '@angular/core';\r\nimport { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { AddSystemService } from 'src/app/shared/services/add-system.service';\r\nimport { RuleService } from 'src/app/shared/services/rule.service';\r\nimport * as $ from 'jquery';\r\nimport { ToastService } from 'src/app/shared/services/toast.service';\r\nimport Swal from 'sweetalert2';\r\nimport { RoleService } from 'src/app/shared/services/role.service';\r\nimport { permissionsLabels } from 'src/app/shared/models/fmosNewRolePermissions';\r\nimport { Observable, of, Subject } from 'rxjs';\r\nimport { CanDeactivateGuard, IDeactivateComponent } from 'src/app/shared/guards/can-deactivate.guard';\r\n\r\n@Component({\r\n  selector: 'npr-rule-details2',\r\n  templateUrl: './rule-details2.component.html',\r\n  styleUrls: ['./rule-details2.component.scss']\r\n})\r\nexport class RuleDetails2Component implements OnInit ,IDeactivateComponent{\r\n  ruleForm: FormGroup;\r\n  currentUser: string;\r\n  submit:boolean=true;\r\n  isSelected: boolean = true;\r\n  srcSystem: any;\r\n  desSystem: any;\r\n  validationSys: any;\r\n  externalsystem: any = [];\r\n  selectedExternalSystems: any = [];\r\n  filteredExternalSystems: any =[];\r\n  showRuleValidation: boolean = false;\r\n  validationData: any;\r\n  ruleValidtionNew: any;\r\n  formTouched: boolean=true;\r\n  showpBar: boolean = false;\r\n  isEdit: boolean = false;\r\n  ruleConfig = new RuleConfig();\r\n  systemName: any;\r\n  msgType: any;\r\n  sourceOperation: Object;\r\n  destination: any;\r\n  destiMsgType: any;\r\n  destinationRespOperation: Object;\r\n  authorizeDone: boolean = false;\r\n  deleted: boolean = false;\r\n  editBtn: boolean;\r\n  closeBtn: boolean;\r\n  authBtn: boolean;\r\n\r\n  ruleValidation = new RuleValidation();\r\n  arrRuleValidation: any = [];\r\n  ruleDto = new RuleDto();\r\n  sourceService: any;\r\n  destinatioRespService: any;\r\n  valOperation: any;\r\n  valService: any;\r\n  sourcesystem: any;\r\n  sourceDetails: any;\r\n  valDeatils: any;\r\n  isoRespData: any;\r\n  messageBasisIso: any = [];\r\n  xmlRespData: any = [];\r\n  multipleValidation: any = [];\r\n  multipleValidationData: any = [];\r\n  count: [{ count: number }];\r\n  valCount: number = 0;\r\n  // sourceSysData = new RuleConfig();\r\n  destinationSysData = new RuleConfig();\r\n  validationTransData: any;\r\n  navSubscription: any;\r\n  editRule: any = {};\r\n  sourceDataOfMsg: any;\r\n  sourcedata: any;\r\n  destinationId: any;\r\n  ModifyCreateRule: boolean = false;\r\n  reopenBtn: boolean;\r\n  authBtnHide: boolean;\r\n  hideSubmit:boolean=false;\r\n  roleCodes = new permissionsLabels();\r\n  externalCreateSystemFiltered: any[] = [];\r\n  selectedHttpMessageKeyValues: any[] =[];\r\n  selectedTcpMessageKeyValues: any[] = [];\r\n  selectedDBMessageKeyValues: any[] = [];\r\n  showDialog = false;\r\n  subject = new Subject<boolean>();\r\n  sourceSysData: any;\r\n  ruleMappDetails: any;\r\n\r\n  constructor(private cdr: ChangeDetectorRef,\r\n    private _route: ActivatedRoute,private roleService:RoleService,private canDeactivateGuard: CanDeactivateGuard,\r\n    private addsystem: AddSystemService, private rules: RuleService,private toastService:ToastService,private router: Router, private formBuilder: FormBuilder) { }\r\n\r\n  ngOnInit() {\r\n    this.currentUser = localStorage.getItem('userFromLogin');\r\n    this.ruleForm = this.formBuilder.group({\r\n      ruleId: [\"\", Validators.required],\r\n      ruleName: [\"\", Validators.required],\r\n      sourceSystems: this.getSourceItem(),\r\n      destinationSystems: this.getDestinationItem(),\r\n      validationSystems: this.formBuilder.array([]),\r\n      sysRuleDetails: this.formBuilder.array([]),\r\n    });\r\n\r\n    console.log(this._route.snapshot.params['id']);\r\n    this.getRuleData(this._route.snapshot.params['id']);\r\n    this.roleService.fetchScreenPermissions('Create Rule');\r\n    this.roleService.screenLabelList.subscribe(message => this.roleCodes = message);\r\n    setTimeout(() => {\r\n      console.log(this.roleCodes);\r\n    }, 100);\r\n    this.ruleForm.disable();\r\n  }\r\n\r\n  editValues(){\r\n    \r\n    this.hideSubmit=true;\r\n    this.ruleForm.enable();\r\n  }\r\n \r\n  canExit() : Promise<boolean> {\r\n    let isExit :boolean = false;\r\n    if (this.ruleForm.touched && this.formTouched==true){\r\n    return Swal.fire({ \r\n      text: 'There are unsaved changes in the screen. Would you like to navigate to other screen?',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#E6224A',\r\n      cancelButtonColor: '#011945',\r\n      cancelButtonText: 'NO',\r\n      confirmButtonText: 'YES',\r\n      icon: 'info',\r\n    }).then((result) => {\r\n      if (result.isConfirmed === true) {\r\n        isExit=true;\r\n        this.cdr.markForCheck();\r\n           return isExit;\r\n      }\r\n      else{\r\n        isExit=false;\r\n        this.cdr.markForCheck();\r\n        return isExit;\r\n      }\r\n    \r\n    });\r\n  }\r\n else{\r\n  isExit=true;\r\n  return new Promise((resolve, reject) => {\r\n    if (isExit === true) {\r\n      isExit=true;\r\n      this.cdr.markForCheck();\r\n      resolve(true);\r\n    }\r\n  \r\n  })\r\n }\r\n    }\r\n \r\n \r\n \r\n  getRuleData(ruleId: any) {\r\n    this.rules.gettingCreateRuleById(ruleId)\r\n      .subscribe((resp: any) => {\r\n        this.editRule = resp;\r\n        console.log(\"this.editRule \", this.editRule);\r\n        console.log(\"in edit\", this.editRule);\r\n        this.ruleConfig.ruleId = this.editRule[\"ruleId\"];\r\n        this.ruleConfig.ruleName = this.editRule[\"ruleName\"];\r\n        this.ruleConfig.approvedEver = this.editRule[\"approvedEver\"];\r\n        this.ruleConfig.recordStatus = this.editRule[\"recordStatus\"];\r\n        this.ruleConfig.approvedStatus = this.editRule[\"approvedStatus\"];\r\n        this.ruleConfig.approverId = this.editRule[\"approverId\"];\r\n        this.ruleConfig.createdTime = this.editRule[\"createdTime\"];\r\n        this.ruleConfig.creatorId = this.editRule[\"creatorId\"];\r\n        this.ruleConfig.sysRuleId = this.editRule[\"sysRuleId\"];\r\n        this.ruleConfig.versionNo = this.editRule[\"versionNo\"];\r\n        this.multipleValidationData = this.editRule[\"mdmtValidationSystemData\"];\r\n        this.multipleValidation = this.editRule[\"mdmtValidationSystemData\"];\r\n        console.log(\"multipleValidation\", this.editRule[\"multipleValidation\"]);\r\n        console.log(\"sysRuleDetails\", this.editRule[\"sysRuleDetails\"]);\r\n        this.arrRuleValidation = this.editRule[\"sysRuleDetails\"];\r\n\r\n        for (let index = 0; index < this.arrRuleValidation.length; index++) {\r\n          this.addSysRuleDetails();\r\n          const sysRule = this.arrRuleValidation[index];\r\n          console.log(\"sysRule\",sysRule);\r\n          this.selectedHttpMessageKeyValues[index] = sysRule.messageKey;\r\n          this.selectedTcpMessageKeyValues[index] = sysRule.messageKey;\r\n          this.selectedDBMessageKeyValues[index] = sysRule.messageKey\r\n          this.sysRuleDetails.at(index).patchValue(sysRule);\r\n        }\r\n\r\n        for (let index = 0; index < this.multipleValidationData.length; index++) {\r\n          this.addValidationGroup();\r\n          const validation = this.multipleValidationData[index];\r\n          console.log(\"validation\",validation);\r\n          this.validationSystems.at(index).patchValue(validation);\r\n          console.log(\"validationSystems?\",this.validationSystems.value);\r\n        }\r\n        \r\n        this.ruleForm.get('ruleId').patchValue(this.ruleConfig.ruleId);\r\n        this.ruleForm.get('ruleName').patchValue(this.ruleConfig.ruleName);\r\n        // this.validationSystems.patchValue(this.multipleValidationData);\r\n        // this.sysRuleDetails.patchValue(this.arrRuleValidation);\r\n        console.log(this.arrRuleValidation);\r\n        console.log(this.ruleConfig);\r\n\r\n        if (this.ruleConfig.recordStatus == \"C\") {\r\n          console.log(this.ruleConfig.recordStatus);\r\n          this.authBtnHide = true;\r\n          this.reopenBtn = false;\r\n\r\n        }\r\n\r\n        this.auditLog();\r\n        this.gettingExternalSsytem();\r\n        this.rules.gettingSysCode(this.editRule[\"sourceTranslationId\"]).subscribe(sourceresp => {\r\n          console.log(sourceresp);\r\n          if (sourceresp) {\r\n            this.ruleConfig.sourceTranslationId = \"\"\r\n            this.ruleConfig.sourceTranslationId = sourceresp.systemCode;\r\n            this.sourcedata = this.ruleConfig.sourceTranslationId;\r\n            this.ruleForm.get('sourceSystems').get('sourceSystem').patchValue(this.sourcedata);\r\n            this.cdr.markForCheck();\r\n            this.onSlectionExternalSystem(this.ruleConfig.sourceTranslationId);\r\n          }\r\n        });\r\n        this.rules.gettingSysCode(this.editRule[\"targetTranslationId\"]).subscribe(targetResp => {\r\n          console.log(targetResp);\r\n          this.ruleConfig.targetTranslationId = targetResp.systemCode;\r\n          this.destinationId = this.ruleConfig.targetTranslationId;\r\n          this.ruleForm.get('destinationSystems').get('destinationSystem').patchValue(this.destinationId);\r\n          this.destinaltionSelection(this.ruleConfig.targetTranslationId);\r\n        });\r\n        this.multipleValidation.forEach((el, i) => {\r\n          console.log(el);\r\n          // this.rules.gettingSysCode(el.id).subscribe(valReps => {\r\n          //   console.log(\"valReps\", valReps);\r\n          // });\r\n          this.onGetValidtion(el.validationSystem, i);\r\n        })\r\n        this.multipleValidationData.forEach((el, i) => {\r\n          console.log(\"Testing\",el,i);\r\n          // this.rules.gettingSysCode(el.id).subscribe(valReps => {\r\n          //   console.log(\"valReps vvvvvv\", valReps);\r\n          // });\r\n          this.onGetValidtion(el.validationSystem, i);\r\n        });\r\n        })\r\n  }\r\n\r\n  getSourceItem() {\r\n    return this.formBuilder.group({\r\n      sourceSystem: [\"\", Validators.required],\r\n      messageKey: [''],\r\n      messageType: [\"\", Validators.required],\r\n      serviceName: [\"\", Validators.required],\r\n      operationName: [\"\", Validators.required],\r\n    });\r\n  }\r\n\r\n  getDestinationItem() {\r\n    return this.formBuilder.group({\r\n      destinationSystem: [\"\", Validators.required],\r\n      messageType: [\"\", Validators.required],\r\n      serviceName: [\"\", Validators.required],\r\n      operationName: [\"\", Validators.required],\r\n    });\r\n  }\r\n  auditLog() {\r\n    if (this.ruleConfig.approvedStatus === 'U') {\r\n      this.ruleConfig.approvedStatus = 'UNAUTHORIZED'\r\n    }\r\n    if (this.ruleConfig.approvedStatus === 'A') {\r\n      this.ruleConfig.approvedStatus = 'AUTHORIZED'\r\n    }\r\n    if (this.ruleConfig.recordStatus === 'O') {\r\n      this.ruleConfig.recordStatus = 'OPEN'\r\n    }\r\n    if (this.ruleConfig.recordStatus === 'C') {\r\n      this.ruleConfig.recordStatus = 'CLOSE'\r\n    }\r\n    if (this.ruleConfig.approvedEver === 'N') {\r\n      this.ruleConfig.approvedEver = 'NO'\r\n    }\r\n    if (this.ruleConfig.approvedEver === 'Y') {\r\n      this.ruleConfig.approvedEver = 'YES'\r\n    }\r\n  }\r\n  getValidationItem() {\r\n    return this.formBuilder.group({\r\n      validationSystem: [\"\", Validators.required],\r\n      messageKey: [\"\"],\r\n      messageType: [\"\", Validators.required],\r\n      service: [\"\", Validators.required],\r\n      operation: [\"\", Validators.required],\r\n      id: [''],\r\n      ruleId: ['']\r\n    });\r\n  }\r\n\r\n  getSysRuleDetails() {\r\n    return this.formBuilder.group({\r\n      id: [\"\"],\r\n      ruleId: [\"\"],\r\n      messageKey: [\"\",Validators.required],\r\n      validationMethod: [\"\",Validators.required],\r\n      validationDetail: [\"\",Validators.required]\r\n    });\r\n  }\r\n  changeFieldNO(event,val){\r\n    console.log(event);\r\n    console.log(val);\r\n\r\n  }\r\n\r\n  indexTracker(index: number, value: any) {\r\n    return index;\r\n  }\r\n\r\n  get sourceSystems() {\r\n    return this.ruleForm.get('sourceSystems').value;\r\n  }\r\n\r\n  get validationSystems() {\r\n    return this.ruleForm.get('validationSystems') as FormArray;\r\n  }\r\n\r\n  get sysRuleDetails() {\r\n    return this.ruleForm.get('sysRuleDetails') as FormArray;\r\n  }\r\n\r\n  addValidationGroup() {\r\n    this.validationSystems.push(this.getValidationItem());\r\n  }\r\n\r\n  addSysRuleDetails() {\r\n    this.sysRuleDetails.push(this.getSysRuleDetails());\r\n    console.log(this.sysRuleDetails.value);\r\n  }\r\n\r\n  deleteVFGroup(index: number) {\r\n    this.validationSystems.removeAt(index);\r\n    const selectedSystems = new Set(this.validationSystems.value.map(val => val.validationSystem));\r\n    this.filteredExternalSystems = this.externalsystem.filter(val => !selectedSystems.has(val));\r\n  }\r\n\r\n  removeSysRules(index: number) {\r\n    this.sysRuleDetails.removeAt(index);\r\n    this.selectedTcpMessageKeyValues = this.sysRuleDetails.value.map(val => val.messageKey);\r\n    this.selectedHttpMessageKeyValues = this.sysRuleDetails.value.map(val => val.messageKey);\r\n    this.selectedDBMessageKeyValues = this.sysRuleDetails.value.map(val => val.messageKey);\r\n    \r\n  }\r\n\r\n  trackByFn(index: any, item: any) {\r\n    return index;\r\n  }\r\n\r\n\r\n  onEdit() {\r\n    this.isEdit = true;\r\n    if (this.ruleConfig.approvedStatus == \"U\") {\r\n      this.isEdit = false;\r\n      // Swal.fire(\"UnAuthorized record can't be edited.\");\r\n    }\r\n    if (this.ruleConfig.recordStatus == \"C\") {\r\n      this.isEdit = false;\r\n      // Swal.fire(\"Closed record can't be edited.\");\r\n    }\r\n  }\r\n  gettingExternalSsytem() {\r\n    this.rules.gettingExternalsystem().subscribe(extsysRes => {\r\n      console.log(extsysRes);\r\n      this.externalsystem = extsysRes;\r\n      this.filteredExternalSystems = this.externalsystem;\r\n    })\r\n  }\r\n  onSlectionExternalSystem(event) {\r\n    console.log(\"eve\", event);\r\n    // this.systemName = event.value;\r\n    this.sourcesystem = event;\r\n    this.externalCreateSystemFiltered = this.externalsystem.filter((system) => system !== this.sourcesystem && system !== this.desSystem)\r\n    this.rules.gettingTranslationData(this.sourcesystem).subscribe(resp => {\r\n      console.log(resp);\r\n      if (resp) {\r\n        this.sourceSysData = resp;\r\n        this.ruleMappDetails=this.sourceSysData.msgTransDetails;\r\n        this.ruleConfig.sourceTranslationId = resp.transId;\r\n        this.ruleForm.get('sourceSystems').patchValue(this.sourceSysData);\r\n        this.gettingoperationAndServiceFroSourceSystem(this.sourcesystem, resp.messageType);\r\n      }\r\n    })\r\n  }\r\n  onSelectionOFMessageType(event) {\r\n    this.msgType = event.value;\r\n    // this.gettingoperationAndServiceFroSourceSystem(this.sourcesystem, this.msgType);\r\n  }\r\n  // for source \r\n  gettingoperationAndServiceFroSourceSystem(ssysName, msgType) {\r\n    console.log(\"ssysName\", ssysName)\r\n    this.rules.gettingoperationAndService(ssysName, msgType, this.currentUser).subscribe(sourceResp => {\r\n      this.sourceOperation = sourceResp.OPERATION;\r\n      this.sourceService = sourceResp.SERVICE;\r\n      this.sourceDetails = sourceResp.MdmtSystemChannel[0].messageChannel;\r\n      if(this.sourceDetails ===  'Https/Http' ){\r\n        this.sourceDetails =sourceResp.MdmtSystemChannel[0].messageFormat;\r\n      }\r\n      this.messageBasisIso = sourceResp.MdmtSystemService;      \r\n      // this.selectedHttpMessageKeyValues = this.messageBasisIso.map(val => val.messageKey);\r\n      // this.selectedTcpMessageKeyValues = this.messageBasisIso.map(val => val.messageKey);\r\n      console.log(\"sourceResp.MdmtSystemService\", this.ruleMappDetails);\r\n      console.log(\"this.arrRuleValidation\", this.messageBasisIso);\r\n      // for(let g = 0 ; g< this.messageBasisIso.length;g++){\r\n      //   console.log(\"messageBasisIso\", this.messageBasisIso[g].dataType);\r\n      //   this.ruleMappDetails.push({\r\n      //     dataType: this.messageBasisIso[g].dataType,\r\n      //     defaultValue: null,\r\n      //     encryption: this.messageBasisIso[g].encryption,\r\n      //     id: this.messageBasisIso[g].channelId,\r\n      //     messageKey: this.messageBasisIso[g].messageKey,\r\n      //     messagebasis: this.messageBasisIso[g].messageBasis,\r\n      //     transId: this.messageBasisIso[g].serviceId,\r\n      //     translationId: 0,\r\n      //     versionNo: 1});\r\n        \r\n      //  }\r\n      //  console.log(this.ruleMappDetails);\r\n      for (let k = 0; k <= this.messageBasisIso.length; k++) {\r\n        // console.log(\"this.arrRuleValidation\", this.arrRuleValidation[0].validationDetail);\r\n        // console.log(\"this.arrRuleValidation\", this.arrRuleValidation[0].validationMethod);\r\n        // console.log(this.messageBasisIso[k].validationDetail);\r\n        if(this.messageBasisIso[k]) {\r\n          this.messageBasisIso[k].validationDetail = this.arrRuleValidation[0].validationDetail;\r\n          this.messageBasisIso[k].validationMethod = this.arrRuleValidation[0].validationMethod;  \r\n        }\r\n      }\r\n\r\n    }, (err => {\r\n      console.log(err);\r\n    }))\r\n  }\r\n  // For Destination\r\n  destinaltionSelection(event) {\r\n    console.log(\"ev\", event);\r\n    this.destination = event;\r\n    this.externalCreateSystemFiltered = this.externalsystem.filter((system) => system !== this.srcSystem && system !== this.destination)\r\n    this.rules.gettingTranslationData(this.destination).subscribe(resp => {\r\n      console.log(resp);\r\n      if (resp) {\r\n        this.destinationSysData = resp;\r\n        this.ruleForm.get('destinationSystems').patchValue(this.destinationSysData);\r\n        this.ruleConfig.targetTranslationId = resp.transId;\r\n      }\r\n    })\r\n  }\r\n  ondestinationMsgType(event) {\r\n    console.log(\"ev\", event.value);\r\n    this.destiMsgType = event.value;\r\n    this.operationAndservDstination(this.destination, this.destiMsgType);\r\n  }\r\n  operationAndservDstination(destination, msgType) {\r\n    this.rules.gettingoperationAndService(destination, msgType, this.currentUser).subscribe(destination => {\r\n      console.log(destination);\r\n      this.destinationRespOperation = destination.OPERATION;\r\n      this.destinatioRespService = destination.SERVICE\r\n      // console.log(this.destinationRespOperation);\r\n    }, (err => {\r\n      console.log(err);\r\n    }))\r\n  }\r\n  //validation sys\r\n  onvalidateMsgType(event) {\r\n    this.gettingoperationSndservForValidation(this.validationData, event.value);\r\n  }\r\n  gettingoperationSndservForValidation(valData, msg) {\r\n    this.rules.gettingoperationAndService(valData, msg, this.currentUser).subscribe(valResp => {\r\n      console.log(\"valResp\",valResp);\r\n      if (valResp) {\r\n        this.valOperation = valResp.OPERATION;\r\n        this.valService = valResp.SERVICE;\r\n        this.valDeatils = valResp.MdmtSystemChannel[0].messageChannel;\r\n        console.log(\"valDe\", this.valDeatils);\r\n        // this.xmlRespData = valResp.MdmtSystemService;\r\n        \r\n        console.log(this.xmlRespData.length);\r\n      }\r\n\r\n      // this.destinationRespOperation=destination[0];\r\n      // console.log(this.destinationRespOperation);\r\n    }, (err => {\r\n      console.log(err);\r\n    }))\r\n  }\r\n  // save\r\n  submittingCreateRule() {\r\n\r\n    this.multipleValidation = this.validationSystems.value;\r\n    this.ruleConfig.mdmtValidationSystemData = this.multipleValidation;\r\n    this.ruleConfig.mdmtValidationSystemData.forEach(el => {\r\n      el.ruleId = this.ruleForm.get('ruleId').value;\r\n    })\r\n    // console.log(this.ruleConfig);\r\n    this.sysRuleDetails.value.forEach(el => { el.ruleId = this.ruleForm.get('ruleId').value });\r\n    console.log(this.arrRuleValidation);\r\n    this.ruleConfig.sysRuleDetails = this.sysRuleDetails.value;\r\n    console.log(this.ruleConfig);\r\n   \r\n      if (this.ruleConfig.approvedStatus === 'UNAUTHORIZED') {\r\n        this.ruleConfig.approvedStatus = 'U'\r\n      }\r\n      if (this.ruleConfig.approvedStatus === 'AUTHORIZED') {\r\n        this.ruleConfig.approvedStatus = 'A'\r\n      }\r\n      if (this.ruleConfig.recordStatus === 'OPEN') {\r\n        this.ruleConfig.recordStatus = 'O'\r\n      }\r\n      if (this.ruleConfig.recordStatus === 'CLOSE') {\r\n        this.ruleConfig.recordStatus = 'C'\r\n      }\r\n      if (this.ruleConfig.approvedEver === 'NO') {\r\n        this.ruleConfig.approvedEver = 'N'\r\n      }\r\n      if (this.ruleConfig.approvedEver === 'YES') {\r\n        this.ruleConfig.approvedEver = 'Y'\r\n      }\r\n    \r\n    this.rules.editRuleConfig(\"update\", this.ruleConfig, this.currentUser).subscribe((data) => {\r\n      this.ruleConfig=data;\r\n      console.log(this.ruleConfig);\r\n      if (data) {\r\n        Swal.fire({text:'Record is Updated',\r\n    icon:'success'});\r\n    this.formTouched=!this.ruleForm.touched;\r\n        // this.toastService.successMessage('Record Saved Successfully!.', '');\r\n        this.ModifyCreateRule = true;\r\n        this.submit=false;\r\n        this.showRuleValidation = false;\r\n        this.hideSubmit=false;\r\n      }\r\n    }, err => {\r\n      Swal.fire({ text: 'Failed To Save the Record' ,icon:'error'});\r\n      // this.toastService.errorMessage('Failed To Save the Record', '');\r\n    });\r\n  }\r\n\r\n  onNext() {\r\n    // this.showpBar = true;\r\n    this.showRuleValidation = true;\r\n\r\n  }\r\n  Previous() {\r\n    this.showRuleValidation = false;\r\n  }\r\n  // fetching ISo\r\n  fetchingIso() {\r\n    this.addsystem.fetchingIsoForTcp().subscribe(isoResp => {\r\n      this.isoRespData = isoResp;\r\n      console.log(this.isoRespData);\r\n      this.messageBasisIso = isoResp.map((data) => {\r\n        return data.messageKey;\r\n      });\r\n    })\r\n  }\r\n  //fetching Xml\r\n  fetchingXMl() {\r\n    this.addsystem.gettinXMLmsgIncoming().subscribe(xmlResp => {\r\n      console.log(xmlResp);\r\n\r\n      // this.xmlRespData=xmlResp.map((data)=>{\r\n      //   return data.messageBasis;\r\n      // });\r\n\r\n\r\n    })\r\n  }\r\n\r\n\r\n  onPrevoius() {\r\n    this.showRuleValidation = false;\r\n  }\r\n\r\n  onValidtion(event, i) {\r\n    this.validationData = event;\r\n    this.selectedExternalSystems[i] = event;\r\n    const selectedMessageKeySet = new Set(this.selectedExternalSystems);\r\n    this.filteredExternalSystems = this.externalsystem.filter(system => !selectedMessageKeySet.has(system));\r\n    this.rules.gettingTranslationData(this.validationData).subscribe((resp:any) => {\r\n      console.log(resp);\r\n      this.validationTransData = resp;\r\n      this.xmlRespData=this.validationTransData.msgTransDetails;\r\n      if (resp) {\r\n        \r\n        (this.ruleForm.get('validationSystems') as FormArray).at(i).get('service').patchValue(this.validationTransData.serviceName);\r\n        (this.ruleForm.get('validationSystems') as FormArray).at(i).get('operation').patchValue(this.validationTransData.operationName);\r\n        (this.ruleForm.get('validationSystems') as FormArray).at(i).get('messageType').patchValue(this.validationTransData.messageType);\r\n        this.gettingoperationSndservForValidation(this.validationData, resp.messageType);\r\n      }\r\n    })\r\n  }\r\n\r\n  onGetValidtion(data, i) {\r\n    let validationData = data;\r\n    this.rules.gettingTranslationData(validationData).subscribe((resp:any) => {\r\n      console.log(resp);\r\n      if (resp) {\r\n        this.validationTransData = resp;\r\n        (this.ruleForm.get('validationSystems') as FormArray).at(i).get('service').patchValue(this.validationTransData.serviceName);\r\n        (this.ruleForm.get('validationSystems') as FormArray).at(i).get('operation').patchValue(this.validationTransData.operationName);\r\n        (this.ruleForm.get('validationSystems') as FormArray).at(i).get('messageType').patchValue(this.validationTransData.messageType);\r\n        this.gettingoperationSndservForValidation(validationData, resp.messageType);\r\n      }\r\n    })\r\n  }\r\n \r\n  onSubmitofValidtaion() {\r\n    if (this.validationData) {\r\n      // Swal.fire({ text: 'Record Saved SuccessFully' });\r\n    }\r\n  }\r\n\r\n\r\n onAuthOfRule() {\r\nconsole.log(this.currentUser)\r\n    Swal.fire(\r\n      {\r\n        //text: 'Unable to process' + 'Error ' + this.responseforfileupload.errorMessage + 'Do you want to Proceed??',\r\n        text: 'You are trying to Authorize record. ' + ' Do you want to proceed?',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        // confirmButtonText: 'PROCEED.'\r\n        cancelButtonText: 'NO',\r\n        confirmButtonText: 'YES', 'icon': 'info'\r\n      }\r\n    ).then((result => {\r\n      console.log(\"this is reopen \", result);\r\n      if (result.isConfirmed === true) {\r\n        if (this.ruleConfig.creatorId == this.currentUser) {\r\n          Swal.fire({ text: \"Maker cannot authorize the record!\" });\r\n        }\r\n        else {\r\n          this.ruleConfig.mdmtValidationSystemData = this.multipleValidation;\r\n          this.ruleConfig.mdmtValidationSystemData.forEach(el => {\r\n            el.ruleId = this.ruleConfig.ruleId;\r\n          })\r\n          // console.log(this.ruleConfig);\r\n          this.arrRuleValidation.forEach(el => { el.ruleId = this.ruleConfig.ruleId });\r\n          console.log(this.ruleConfig);\r\n          this.ruleConfig.sysRuleDetails = this.arrRuleValidation;\r\n          this.ruleConfig.approverId= this.currentUser;\r\n          // this.ruleConfig.approvedEver == 'NO'? this.ruleConfig.approvedEver = 'N' : (this.ruleConfig.approvedEver == 'YES'? this.ruleConfig.approvedEver = 'Y' : this.ruleConfig.approvedEver);\r\n          // this.ruleConfig.approvedStatus == 'UNAUTHORIZED'? this.ruleConfig.approvedStatus = 'U' : (this.ruleConfig.approvedStatus == 'AUTHORIZED'? this.ruleConfig.approvedStatus = 'A' : this.ruleConfig.approvedStatus);\r\n          // this.ruleConfig.recordStatus == \"OPEN\" ? this.ruleConfig.recordStatus = 'O' : (this.ruleConfig.recordStatus == 'CLOSE'? this.ruleConfig.recordStatus = 'C' : this.ruleConfig.recordStatus);\r\n         \r\n      if (this.ruleConfig.approvedStatus === 'UNAUTHORIZED') {\r\n        this.ruleConfig.approvedStatus = 'U'\r\n      }\r\n      if (this.ruleConfig.approvedStatus === 'AUTHORIZED') {\r\n        this.ruleConfig.approvedStatus = 'A'\r\n      }\r\n      if (this.ruleConfig.recordStatus === 'OPEN') {\r\n        this.ruleConfig.recordStatus = 'O'\r\n      }\r\n      if (this.ruleConfig.recordStatus === 'CLOSE') {\r\n        this.ruleConfig.recordStatus = 'C'\r\n      }\r\n      if (this.ruleConfig.approvedEver === 'NO') {\r\n        this.ruleConfig.approvedEver = 'N'\r\n      }\r\n      if (this.ruleConfig.approvedEver === 'YES') {\r\n        this.ruleConfig.approvedEver = 'Y'\r\n      }\r\n          console.log(this.ruleConfig);\r\n          this.rules.editRuleConfig(\"auth\", this.ruleConfig, this.currentUser).subscribe(authResp => {\r\n            console.log(authResp);\r\n            \r\n            if (authResp) {\r\n              this.ruleConfig = authResp;\r\n              this.authorizeDone = true;\r\n\r\n              Swal.fire({ text: \"Record is Authorized\" });\r\n            }\r\n\r\n          }, (err) => {\r\n            Swal.fire({ text: \"Failed To Authorize\" });\r\n          })\r\n        }\r\n      }\r\n    }))\r\n\r\n  }\r\n\r\n  onCloseOfRule() {\r\n    Swal.fire(\r\n      {\r\n        //text: 'Unable to process' + 'Error ' + this.responseforfileupload.errorMessage + 'Do you want to Proceed??',\r\n        text: 'You are trying to close record. ' + ' Do you want to proceed?',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3e54b8',\r\n        cancelButtonColor: '#d33',\r\n        // confirmButtonText: 'PROCEED.'\r\n        cancelButtonText: 'NO',\r\n        confirmButtonText: 'YES', 'icon': 'info', iconColor: \"#d33\"\r\n      }\r\n    ).then((result => {\r\n      console.log(\"this is reopen \", result);\r\n      console.log(this.multipleValidation);\r\n      console.log(this.arrRuleValidation);\r\n      // console.log(this.ruleConfig);\r\n      console.log(this.currentUser);\r\n      \r\n      if (result.isConfirmed === true) {\r\n        this.ruleConfig.mdmtValidationSystemData = this.multipleValidation;\r\n        this.ruleConfig.mdmtValidationSystemData.forEach(el => {\r\n          el.ruleId = this.ruleConfig.ruleId;\r\n        })\r\n        console.log(this.ruleConfig);\r\n        this.arrRuleValidation.forEach(el => { el.ruleId = this.ruleConfig.ruleId });\r\n        console.log(this.arrRuleValidation);\r\n        this.ruleConfig.sysRuleDetails = this.arrRuleValidation;\r\n        console.log(this.ruleConfig);\r\n        this.ruleConfig.approvedEver == 'NO'? this.ruleConfig.approvedEver = 'N' : (this.ruleConfig.approvedEver == 'YES'? this.ruleConfig.approvedEver = 'Y' : this.ruleConfig.approvedEver);\r\n        this.ruleConfig.approvedStatus == 'UNAUTHORIZED'? this.ruleConfig.approvedStatus = 'U' : (this.ruleConfig.approvedStatus == 'AUTHORIZED'? this.ruleConfig.approvedStatus = 'A' : this.ruleConfig.approvedStatus);\r\n        this.ruleConfig.recordStatus == 'OPEN'? this.ruleConfig.recordStatus = 'O' : (this.ruleConfig.recordStatus == 'CLOSED'? this.ruleConfig.recordStatus = 'C' : this.ruleConfig.recordStatus);\r\n        console.log(this.ruleConfig);\r\n        \r\n\r\n        console.log(this.reopenBtn);\r\n        this.rules.editRuleConfig(\"close\", this.ruleConfig, this.currentUser).subscribe(closeResp => {\r\n          console.log(closeResp);\r\n          \r\n          if (closeResp) {\r\n            this.ruleConfig = closeResp;\r\n            this.editBtn = true;\r\n            this.authBtn = true;\r\n            this.deleted = false;\r\n            this.reopenBtn = false;\r\n            Swal.fire({ text: \"Record is Closed\" });\r\n          }\r\n        }, err => {\r\n          Swal.fire({ text: \"Failed to close the Record\" });\r\n        })\r\n      }\r\n    }))\r\n  }\r\n\r\n\r\n  next() {\r\n    this.showRuleValidation = true;\r\n    console.log(this.ruleForm.value);\r\n  }\r\n\r\n  onOpenRule() {\r\n    Swal.fire(\r\n      {\r\n        //text: 'Unable to process' + 'Error ' + this.responseforfileupload.errorMessage + 'Do you want to Proceed??',\r\n        text: 'You are trying to re-open record. ' + ' Do you want to proceed?',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3e54b8',\r\n        cancelButtonColor: '#d33',\r\n        // confirmButtonText: 'PROCEED.'\r\n        cancelButtonText: 'NO',\r\n        confirmButtonText: 'YES', 'icon': 'info', iconColor: \"#d33\"\r\n      }\r\n    ).then((result => {\r\n      console.log(\"this is reopen \", result);\r\n      console.log(this.multipleValidation);\r\n      console.log(this.arrRuleValidation);\r\n      console.log(this.ruleConfig);\r\n      console.log(this.currentUser);\r\n      \r\n      if (result.isConfirmed === true) {\r\n        this.ruleConfig.mdmtValidationSystemData = this.multipleValidation;\r\n        this.ruleConfig.mdmtValidationSystemData.forEach(el => {\r\n          el.ruleId = this.ruleConfig.ruleId;\r\n        })\r\n        // console.log(this.ruleConfig);\r\n        this.arrRuleValidation.forEach(el => { el.ruleId = this.ruleConfig.ruleId });\r\n        console.log(this.arrRuleValidation);\r\n        this.ruleConfig.sysRuleDetails = this.arrRuleValidation;\r\n        console.log(this.ruleConfig);\r\n        this.ruleConfig.approvedEver == 'NO'? this.ruleConfig.approvedEver = 'N' : (this.ruleConfig.approvedEver == 'YES'? this.ruleConfig.approvedEver = 'Y' : this.ruleConfig.approvedEver);\r\n        this.ruleConfig.approvedStatus == 'UNAUTHORIZED'? this.ruleConfig.approvedStatus = 'U' : (this.ruleConfig.approvedStatus == 'AUTHORIZED'? this.ruleConfig.approvedStatus = 'A' : this.ruleConfig.approvedStatus);\r\n        this.ruleConfig.recordStatus == 'OPEN'? this.ruleConfig.recordStatus = 'O' : (this.ruleConfig.recordStatus == 'CLOSED'? this.ruleConfig.recordStatus = 'C' : this.ruleConfig.recordStatus);\r\n        console.log(this.ruleConfig);\r\n         \r\n\r\n        this.rules.editRuleConfig(\"open\", this.ruleConfig, this.currentUser).subscribe(openResp => {\r\n          console.log(openResp);\r\n          if (openResp) {\r\n            this.ruleConfig = openResp;\r\n            this.authBtnHide = false;\r\n            this.editBtn = false;\r\n            this.authBtn = false;\r\n            Swal.fire({ text: \"Record is Reopened\" });\r\n          }\r\n        }, err => {\r\n          Swal.fire({ text: \"Failed to open the Record\" });\r\n        })\r\n      }\r\n    }))\r\n  }\r\n\r\n  deleteRule() {\r\n    console.log(this.ruleConfig);\r\n    \r\n    console.log(this.arrRuleValidation);\r\n    \r\n    Swal.fire(\r\n      {\r\n        //text: 'Unable to process' + 'Error ' + this.responseforfileupload.errorMessage + 'Do you want to Proceed??',\r\n        text: 'You are trying to delete record. ' + ' Do you want to proceed?',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3e54b8',\r\n        cancelButtonColor: '#d33',\r\n        // confirmButtonText: 'PROCEED.'\r\n        cancelButtonText: 'NO',\r\n        confirmButtonText: 'YES', 'icon': 'info', iconColor: \"#d33\"\r\n      }\r\n    ).then((result => {\r\n      console.log(\"this is reopen \", result);\r\n      \r\n      if (result.isConfirmed === true) {\r\n        this.ruleConfig.mdmtValidationSystemData = this.multipleValidation;\r\n        this.ruleConfig.mdmtValidationSystemData.forEach(el => {\r\n          el.ruleId = this.ruleConfig.ruleId;\r\n          console.log( this.ruleConfig.mdmtValidationSystemData);\r\n        });\r\n        \r\n        console.log(this.arrRuleValidation);\r\n        \r\n      \r\n        \r\n        this.arrRuleValidation.forEach(el => { el.ruleId = this.ruleConfig.ruleId });\r\n        console.log(this.arrRuleValidation);\r\n        this.ruleConfig.sysRuleDetails = this.arrRuleValidation;\r\n        console.log(this.ruleConfig);\r\n        this.rules.onDeleteRuleCongif(this.ruleConfig.sysRuleId, this.currentUser).subscribe(\r\n          (response) => {\r\n            if (response) {\r\n              this.deleted = true;\r\n              this.editBtn = true;\r\n              this.authBtn = true;\r\n              this.closeBtn = true;\r\n\r\n              Swal.fire({\r\n                text: 'Record is Deleted',\r\n                icon: 'success'\r\n              }).then((result) => {\r\n                if (result) {\r\n                  this.router.navigateByUrl('/createrule/list')\r\n                }\r\n              });\r\n\r\n            }\r\n            else {\r\n              Swal.fire(\"Failed to delete the reocrd\");\r\n            }\r\n          });\r\n      }\r\n    }))\r\n  }\r\n\r\n  openPopUp() {\r\n    $('.ddTrigger').click(function () {\r\n      $('.ddParent').removeClass('actDD');\r\n      $(this).parents('li').siblings().find('.ddParent').removeClass('actDD');\r\n      $(this).parents('.ddParent').toggleClass('actDD');\r\n      $(this).removeClass('actUnread');\r\n    })\r\n  }\r\n\r\n  closeAll() {\r\n    $(document).on(\"click\", function (event: any) {\r\n      var $trigger = $(\".ddParent\");\r\n      if ($trigger !== event.target && !$trigger.has(event.target).length) {\r\n        $(\".ddParent\").removeClass(\"actDD\");\r\n      }\r\n    });\r\n  }\r\n\r\n  close() {\r\n    $('.ddCloseTrigger').click(function () {\r\n      $(\".ddParent\").removeClass(\"actDD\");\r\n    });\r\n  }\r\n\r\n  handleHttpMessageKeyChange(event, i) {\r\n    this.selectedHttpMessageKeyValues[i] = event.target.value;\r\n  }\r\n  handleTcpMessageKeyChange(event, i) {\r\n    this.selectedTcpMessageKeyValues[i] = event.target.value;\r\n  }\r\n  handleDBMessageKeyChange(event, i) {\r\n    this.selectedDBMessageKeyValues[i] = event.target.value;\r\n  }\r\n  shouldHideHttpMessageKeyOption(messageKey) {\r\n    return this.selectedHttpMessageKeyValues.includes(messageKey)\r\n  }\r\n  shouldHideTcpMessageKeyOption(messageKey) {\r\n    return this.selectedTcpMessageKeyValues.includes(messageKey)\r\n  }\r\n  shouldHideDBMessageKeyOption(messageKey) {\r\n    return this.selectedDBMessageKeyValues.includes(messageKey)\r\n  }\r\n}\r\n\r\n\r\nexport class RuleConfig {\r\n  id: any;\r\n  sysRuleId: any;\r\n  ruleId: any;\r\n  ruleName: any;\r\n  sourceTranslationId: any;\r\n  targetTranslationId: any;\r\n  validationSystems: any;\r\n  creatorId: any;\r\n  createdTime: any;\r\n  approverId: any;\r\n  approvedTime: any;\r\n  versionNo: any;\r\n  approvedStatus: string;\r\n  approvedEver: string;\r\n  recordStatus: string;\r\n  mdmtValidationSystemData: Array<MultipleValidation>;\r\n  sysRuleDetails: Array<RuleValidation>;\r\n}\r\nexport class RuleValidation {\r\n  id: any;\r\n  ruleId: any;\r\n  validationMethod: any;\r\n  validationDetail: any;\r\n}\r\nexport class RuleDto {\r\n  msgRule: RuleConfig;\r\n  msgValidation: Array<RuleValidation>;\r\n}\r\nexport class MultipleValidation {\r\n  validationSystem: any;\r\n  messageType: any;\r\n  service: any;\r\n  operation: any;\r\n  id: any;\r\n  ruleId: any;\r\n}","<div class=\"pageContentMain\">\r\n  <div class=\"pageTitleCol\">\r\n    <h2 class=\"pageTitle\">Create Rule</h2>\r\n  </div>\r\n  <form class=\"formStyle\" [formGroup]=\"ruleForm\" novalidate>\r\n    <fieldset [disabled]=\"!editFlag\">\r\n      <div class=\"dbCardStyle\" *ngIf=\"!showRuleValidation\">\r\n        <div class=\"row gy-4\">\r\n          <div class=\"col-lg-4\">\r\n            <label class=\"formLbl\"\r\n              >Rule ID<span class=\"colorRed\">*</span></label\r\n            >\r\n            <input\r\n              type=\"text\"\r\n              id=\"ruleId\"\r\n              name=\"ruleId\"\r\n              class=\"form-control\"\r\n              formControlName=\"ruleId\"\r\n              placeholder=\"Rule ID\"\r\n              (keyup)=\"ruleIdInvalidOrNot(ruleForm.get('ruleId').value)\"\r\n              [readonly]=\"!submit\"\r\n            />\r\n            <span *ngIf=\"ruleIdInvalid\" class=\"danger\">Invalid RuleId</span>\r\n          </div>\r\n          <div class=\"col-lg-4\">\r\n            <label class=\"formLbl\"\r\n              >Rule Name<span class=\"colorRed\">*</span></label\r\n            >\r\n            <input\r\n              type=\"text\"\r\n              id=\"ruleName\"\r\n              name=\"ruleName\"\r\n              class=\"form-control\"\r\n              placeholder=\"Rule Name\"\r\n              formControlName=\"ruleName\"\r\n              [readonly]=\"!submit\"\r\n            />\r\n          </div>\r\n          <div formGroupName=\"sourceSystems\" class=\"col-lg-12\">\r\n            <div class=\"formContent\">\r\n              <div class=\"titleStyle mb-3\">\r\n                <h2 class=\"pageTitle\">Source System</h2>\r\n              </div>\r\n              <div class=\"row gy-4\">\r\n                <div class=\"col-lg-3\">\r\n                  <label for=\"sourceSystem\" class=\"formLbl\"\r\n                    >System<span class=\"colorRed\">*</span></label\r\n                  >\r\n\r\n                  <!-- <ng-select [items]=\"externalCreateSystemFiltered\"\r\n                class=\"form-select\"\r\n                formControlName=\"sourceSystem\"\r\n                (change)=\"onSlectionExternalSystem($event)\"> -->\r\n                  <ng-select\r\n                    [items]=\"externalCreateSystemFiltered\"\r\n                    [clearable]=\"false\"\r\n                    formControlName=\"sourceSystem\"\r\n                    (change)=\"onSlectionExternalSystem($event)\"\r\n                  >\r\n                  </ng-select>\r\n                </div>\r\n                <div class=\"col-lg-3\">\r\n                  <label for=\"messageType\" class=\"formLbl\">Message Type</label>\r\n                  <div *ngIf=\"sourceMsg\">\r\n                    <select\r\n                      id=\"messageType\"\r\n                      class=\"form-select\"\r\n                      aria-label=\"Default select example\"\r\n                      formControlName=\"messageType\"\r\n                    >\r\n                      <option hidden value=\"\" disabled selected>\r\n                        --Please select--\r\n                      </option>\r\n                      <option value=\"A\">All</option>\r\n                      <option value=\"I\">Incoming</option>\r\n                      <option value=\"O\">OutGoing</option>\r\n                    </select>\r\n                  </div>\r\n                  <div *ngIf=\"!sourceMsg\">\r\n                    <input\r\n                      id=\"messageType\"\r\n                      type=\"text\"\r\n                      class=\"form-control\"\r\n                      formControlName=\"messageType\"\r\n                      placeholder=\"Message Type\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n\r\n                <div class=\"col-lg-3\">\r\n                  <label for=\"roleName\" class=\"formLbl\">Operation</label>\r\n                  <div *ngIf=\"!multipleOperationSource\">\r\n                    <select\r\n                      id=\"operationName\"\r\n                      formControlName=\"operationName\"\r\n                      class=\"form-select\"\r\n                      aria-label=\"Default select example\"\r\n                    >\r\n                      <option hidden value=\"\" disabled selected>\r\n                        --Please select--\r\n                      </option>\r\n                      <option\r\n                        *ngFor=\"let opt of translationDataOperation\"\r\n                        [value]=\"opt.headerValue\"\r\n                      >\r\n                        {{ opt.headerValue }}\r\n                      </option>\r\n                    </select>\r\n                  </div>\r\n                  <div *ngIf=\"multipleOperationSource\">\r\n                    <input\r\n                      id=\"operationName\"\r\n                      type=\"text\"\r\n                      formControlName=\"operationName\"\r\n                      class=\"form-control\"\r\n                      value=\"\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <!-- <div class=\"col-lg-3\">\r\n                <label for=\"operationName\" class=\"formLbl\">Operation</label>\r\n                <input\r\n                  id=\"operationName\"\r\n                  type=\"text\"\r\n                  class=\"form-control\"\r\n                  formControlName=\"operationName\"\r\n                  placeholder=\"Operation Name\"\r\n               \r\n                />\r\n              </div> -->\r\n                <div class=\"col-lg-3\">\r\n                  <label for=\"roleName\" class=\"formLbl\">Service</label>\r\n                  <div *ngIf=\"!multipleServiceSource\">\r\n                    <select\r\n                      id=\"serviceName\"\r\n                      formControlName=\"serviceName\"\r\n                      class=\"form-select\"\r\n                      aria-label=\"Default select example\"\r\n                    >\r\n                      <option hidden value=\"\" disabled selected>\r\n                        --Please select--\r\n                      </option>\r\n                      <option\r\n                        *ngFor=\"let serv of translationDataService\"\r\n                        [value]=\"serv.headerValue\"\r\n                      >\r\n                        {{ serv.headerValue }}\r\n                      </option>\r\n                    </select>\r\n                  </div>\r\n\r\n                  <div *ngIf=\"multipleServiceSource\">\r\n                    <input\r\n                      id=\"serviceName\"\r\n                      type=\"text\"\r\n                      formControlName=\"serviceName\"\r\n                      class=\"form-control\"\r\n                      value=\"\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <!-- <div class=\"col-lg-3\">\r\n                <label for=\"serviceName\" class=\"formLbl\">Service</label>\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"serviceName\"\r\n                  class=\"form-control\"\r\n                  formControlName=\"serviceName\"\r\n                  placeholder=\"Service Name\"\r\n                  \r\n                />\r\n              </div> -->\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div formGroupName=\"destinationSystems\" class=\"col-lg-12\">\r\n            <div class=\"formContent\">\r\n              <div class=\"titleStyle mb-3\">\r\n                <h2 class=\"pageTitle\">Destination System</h2>\r\n              </div>\r\n              <div class=\"row gy-4\">\r\n                <div class=\"col-lg-3\">\r\n                  <label for=\"destinationSystem\" class=\"formLbl\"\r\n                    >System<span class=\"colorRed\">*</span></label\r\n                  >\r\n                  <!-- <ng-select id=\"outlineNgSelect\" \r\n                  id=\"destinationSystem\"\r\n                  class=\"form-select\"\r\n                  aria-label=\"Default select example\"\r\n                  formControlName=\"destinationSystem\"\r\n                  (change)=\"destinaltionSelection($event)\"\r\n                >\r\n                  <ng-option hidden value=\"\" disabled selected >Please select System</ng-option>\r\n                  <ng-option\r\n                    *ngFor=\"let sys of externalsystem\" [disabled]=\"!submit\"\r\n                    [hidden]=\"sys === srcSystem || sys == validationData\"\r\n                    [value]=\"sys\"\r\n                  >\r\n                    {{ sys }}\r\n                  </ng-option>\r\n                </ng-select> -->\r\n                  <!-- <ng-select [items]=\"externalCreateSystemFiltered\"\r\n                class=\"form-select\"\r\n                formControlName=\"destinationSystem\"\r\n                (change)=\"destinaltionSelection($event)\"> -->\r\n                  <ng-select\r\n                    [items]=\"externalCreateSystemFiltered\"\r\n                    formControlName=\"destinationSystem\"\r\n                    (change)=\"destinaltionSelection($event)\"\r\n                    [clearable]=\"false\"\r\n                  >\r\n                  </ng-select>\r\n                </div>\r\n                <div class=\"col-lg-3\">\r\n                  <label class=\"formLbl\">Message Type</label>\r\n                  <div *ngIf=\"destinationMsg\">\r\n                    <select\r\n                      id=\"destinationSystem\"\r\n                      class=\"form-select\"\r\n                      aria-label=\"Default select example\"\r\n                      formControlName=\"messageType\"\r\n                    >\r\n                      <option hidden value=\"\" disabled selected>\r\n                        --Please select--\r\n                      </option>\r\n                      <option value=\"I\">Incoming</option>\r\n                      <option value=\"O\">OutGoing</option>\r\n                      <option value=\"A\">All</option>\r\n                    </select>\r\n                  </div>\r\n                  <div *ngIf=\"!destinationMsg\">\r\n                    <input\r\n                      id=\"destinationSystem\"\r\n                      type=\"text\"\r\n                      class=\"form-control\"\r\n                      formControlName=\"messageType\"\r\n                      placeholder=\"Message Type\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-lg-3\">\r\n                  <label for=\"roleName\" class=\"formLbl\">Operation</label>\r\n                  <div *ngIf=\"!multipleOperation\">\r\n                    <select\r\n                      id=\"operationName\"\r\n                      formControlName=\"operationName\"\r\n                      class=\"form-select\"\r\n                      aria-label=\"Default select example\"\r\n                    >\r\n                      <option hidden value=\"\" disabled selected>\r\n                        --Please select--\r\n                      </option>\r\n                      <option\r\n                        *ngFor=\"let opt of translationDestDataOperation\"\r\n                        [value]=\"opt.headerValue\"\r\n                      >\r\n                        {{ opt.headerValue }}\r\n                      </option>\r\n                    </select>\r\n                  </div>\r\n                  <div *ngIf=\"multipleOperation\">\r\n                    <input\r\n                      id=\"operationName\"\r\n                      type=\"text\"\r\n                      formControlName=\"operationName\"\r\n                      class=\"form-control\"\r\n                      value=\"\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <!-- <div class=\"col-lg-3\">\r\n                <label class=\"formLbl\">Operation</label>\r\n                <input\r\n                  id=\"operationName\"\r\n                  type=\"text\"\r\n                  class=\"form-control\"\r\n                  formControlName=\"operationName\"\r\n                  placeholder=\"Operation Name\"\r\n                 \r\n                />\r\n              </div> -->\r\n                <!-- <div class=\"col-lg-3\">\r\n                <label class=\"formLbl\">Service</label>\r\n                <input\r\n                  id=\"serviceName\"\r\n                  type=\"text\"\r\n                  class=\"form-control\"\r\n                  formControlName=\"serviceName\"\r\n                  placeholder=\"Service Name\"\r\n                  \r\n                />\r\n              </div> -->\r\n                <div class=\"col-lg-3\">\r\n                  <label for=\"roleName\" class=\"formLbl\">Service</label>\r\n                  <div *ngIf=\"!multipleService\">\r\n                    <select\r\n                      id=\"serviceName\"\r\n                      formControlName=\"serviceName\"\r\n                      class=\"form-select\"\r\n                      aria-label=\"Default select example\"\r\n                    >\r\n                      <option hidden value=\"\" disabled selected>\r\n                        --Please select--\r\n                      </option>\r\n                      <option\r\n                        *ngFor=\"let serv of translationDestDataService\"\r\n                        [value]=\"serv.headerValue\"\r\n                      >\r\n                        {{ serv.headerValue }}\r\n                      </option>\r\n                    </select>\r\n                  </div>\r\n\r\n                  <div *ngIf=\"multipleService\">\r\n                    <input\r\n                      id=\"serviceName\"\r\n                      type=\"text\"\r\n                      formControlName=\"serviceName\"\r\n                      class=\"form-control\"\r\n                      value=\"\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-lg-12\">\r\n            <div\r\n              class=\"formContent border-bottom-0 pb-0\"\r\n              formArrayName=\"validationSystems\"\r\n            >\r\n              <div class=\"titleStyle mb-3\">\r\n                <h2 class=\"pageTitle\">Validation System</h2>\r\n              </div>\r\n              <ng-container\r\n                *ngFor=\"let item of validationSystems.controls; let i = index\"\r\n              >\r\n                <ng-container [formGroupName]=\"i\">\r\n                  <div class=\"row gy-4 align-items-center mt-1\">\r\n                    <div class=\"col-lg\">\r\n                      <label class=\"formLbl\">System</label>\r\n                      <!-- <ng-select id=\"outlineNgSelect\" placeholder=\"Please select System\"\r\n                      id=\"systemOne\"\r\n                      class=\"form-select\"\r\n                      formControlName=\"validationSystem\"\r\n                      aria-label=\"Default select example\"\r\n                      (change)=\"onValidtion($event, i)\"\r\n                    >\r\n                    <ng-option hidden value=\"\" disabled selected >--Please select--</ng-option>\r\n                    <ng-option hidden value=\"\" disabled selected >Please select System</ng-option> \r\n                    <ng-option\r\n                        *ngFor=\"let sys of externalsystem\" [disabled]=\"!submit\"\r\n                        [value]=\"sys\"\r\n                        [hidden]=\"\r\n                          issourceSysDisabled(sys) ||\r\n                          sys == desSystem ||\r\n                          sys == srcSystem\r\n                        \"\r\n                      >\r\n                        {{ sys }}\r\n                      </ng-option>\r\n                    </ng-select> -->\r\n\r\n                      <ng-select\r\n                        [items]=\"externalCreateSystemFiltered\"\r\n                        class=\"form-select\"\r\n                        formControlName=\"validationSystem\"\r\n                        (change)=\"onValidtion($event, i)\"\r\n                      >\r\n                      </ng-select>\r\n                    </div>\r\n                    <div class=\"col-lg\">\r\n                      <label class=\"formLbl\">Message Type</label>\r\n                      <div *ngIf=\"validationMsg\">\r\n                        <select\r\n                          id=\"msgType\"\r\n                          formControlName=\"messageType\"\r\n                          class=\"form-select\"\r\n                          aria-label=\"Default select example\"\r\n                        >\r\n                          <option hidden value=\"\" disabled selected>\r\n                            --Please select--\r\n                          </option>\r\n                          <option value=\"I\">Incoming</option>\r\n                          <option value=\"O\">OutGoing</option>\r\n                          <option value=\"A\">All</option>\r\n                        </select>\r\n                      </div>\r\n                      <div *ngIf=\"!validationMsg\">\r\n                        <input\r\n                          id=\"msgType\"\r\n                          type=\"text\"\r\n                          class=\"form-control\"\r\n                          formControlName=\"messageType\"\r\n                          placeholder=\"Message Type\"\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"col-lg-3\">\r\n                      <label for=\"roleName\" class=\"formLbl\">Operation</label>\r\n                      <div *ngIf=\"!multipleOperation\">\r\n                        <select\r\n                          id=\"operationName\"\r\n                          formControlName=\"operation\"\r\n                          class=\"form-select\"\r\n                          aria-label=\"Default select example\"\r\n                        >\r\n                          <option hidden value=\"\" disabled selected>\r\n                            --Please select--\r\n                          </option>\r\n                          <option\r\n                            *ngFor=\"let opt of translationValDataOperation\"\r\n                            [value]=\"opt.headerValue\"\r\n                          >\r\n                            {{ opt.headerValue }}\r\n                          </option>\r\n                        </select>\r\n                      </div>\r\n                      <div *ngIf=\"multipleOperation\">\r\n                        <input\r\n                          id=\"operationName\"\r\n                          type=\"text\"\r\n                          formControlName=\"operation\"\r\n                          class=\"form-control\"\r\n                          value=\"\"\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <!-- <div class=\"col\">\r\n                    <label class=\"formLbl\">Operation</label>\r\n                    <input\r\n                      id=\"operationName\"\r\n                      type=\"text\"\r\n                      class=\"form-control\"\r\n                      formControlName=\"operation\"\r\n                      placeholder=\"Operation Name\"\r\n                     \r\n                    />\r\n                  </div> -->\r\n                    <!-- <div class=\"col-lg\">\r\n                    <label class=\"formLbl\">Service</label>\r\n                    <input\r\n                      id=\"serviceName\"\r\n                      type=\"text\"\r\n                      class=\"form-control\"\r\n                      formControlName=\"service\"\r\n                      placeholder=\"Service Name\"\r\n                     \r\n                    />\r\n                  </div> -->\r\n                    <div class=\"col-lg-3\">\r\n                      <label for=\"roleName\" class=\"formLbl\">Service</label>\r\n                      <div *ngIf=\"!multipleService\">\r\n                        <select\r\n                          id=\"serviceName\"\r\n                          formControlName=\"service\"\r\n                          class=\"form-select\"\r\n                          aria-label=\"Default select example\"\r\n                        >\r\n                          <option hidden value=\"\" disabled selected>\r\n                            --Please select--\r\n                          </option>\r\n                          <option\r\n                            *ngFor=\"let serv of translationValDataService\"\r\n                            [value]=\"serv.headerValue\"\r\n                          >\r\n                            {{ serv.headerValue }}\r\n                          </option>\r\n                        </select>\r\n                      </div>\r\n\r\n                      <div *ngIf=\"multipleService\">\r\n                        <input\r\n                          id=\"serviceName\"\r\n                          type=\"text\"\r\n                          formControlName=\"service\"\r\n                          class=\"form-control\"\r\n                          value=\"\"\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"col-auto\" style=\"margin-top: 50px\">\r\n                      <a\r\n                        *ngIf=\"submit\"\r\n                        (click)=\"deleteVFGroup(i)\"\r\n                        class=\"tblIcon\"\r\n                      >\r\n                        <img src=\"assets/images/delete-icon.svg\" alt=\"...\" />\r\n                      </a>\r\n                    </div>\r\n                  </div>\r\n                </ng-container>\r\n              </ng-container>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-lg-12\">\r\n            <a\r\n              (click)=\"addValidationGroup()\"\r\n              *ngIf=\"submit\"\r\n              class=\"addIcon primarybg\"\r\n              style=\"cursor: pointer\"\r\n            >\r\n              <span><img src=\"assets/images/plus-icon.svg\" alt=\"...\" /></span>\r\n            </a>\r\n          </div>\r\n\r\n          <div class=\"col-lg-12\">\r\n            <div class=\"row g-3 pb-3 justify-content-end pt-3\">\r\n              <div class=\"col-auto\">\r\n                <button\r\n                  [disabled]=\"\r\n                    ruleForm.get('ruleName').invalid ||\r\n                    ruleForm.get('ruleId').invalid ||\r\n                    ruleForm.get('sourceSystems').invalid ||\r\n                    ruleForm.get('destinationSystems').invalid\r\n                  \"\r\n                  (click)=\"next()\"\r\n                  class=\"btn smBtn minWdSmBtn btnPrimary\"\r\n                >\r\n                  Next\r\n                </button>\r\n              </div>\r\n              <div class=\"col-auto\">\r\n                <button\r\n                  class=\"btn smBtn minWdSmBtn btnSecondary\"\r\n                  [routerLink]=\"['/createrule/list']\"\r\n                >\r\n                  Exit\r\n                </button>\r\n              </div>\r\n              <!-- <div class=\"col-auto\">\r\n              <a\r\n                class=\"btn smBtn minWdSmBtn btnSecondary\"\r\n                >Reset</a\r\n              >\r\n            </div> -->\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </fieldset>\r\n\r\n    <ng-container *ngIf=\"showRuleValidation\">\r\n      <div class=\"dbCardStyle\">\r\n        <fieldset [disabled]=\"!editFlag\">\r\n          <table\r\n            id=\"dbTable1\"\r\n            class=\"table tableStyle responsive nowrap vAlignMdl\"\r\n            style=\"border-spacing: 10px; border-collapse: separate\"\r\n          >\r\n            <thead>\r\n              <tr class=\"tbleheadStyle\">\r\n                <th>Source System</th>\r\n                <th\r\n                  *ngFor=\"\r\n                    let validation of validationSystems.value;\r\n                    let i = index\r\n                  \"\r\n                >\r\n                  Validation System {{ i + 1 }}\r\n                </th>\r\n                <th\r\n                  [attr.colspan]=\"validationSystems.value.length + 2\"\r\n                  style=\"text-align: center\"\r\n                >\r\n                  Validation Rule\r\n                </th>\r\n              </tr>\r\n              <tr>\r\n                <td style=\"padding: 0 !important; border-bottom-style: dashed\">\r\n                  <p class=\"td-highlight\">{{ sourceSystems.sourceSystem }}</p>\r\n                  <!-- <input\r\n                      id=\"srcSys\"\r\n                      type=\"text\"\r\n                      class=\"form-control\"\r\n                      [value]=\"sourceSystems.sourceSystem\"\r\n                      readonly\r\n                    /> -->\r\n                </td>\r\n                <td\r\n                  style=\"padding: 0 !important; border-bottom-style: dashed\"\r\n                  *ngFor=\"\r\n                    let validation of validationSystems.value;\r\n                    let idx = index;\r\n                    trackBy: indexTracker\r\n                  \"\r\n                >\r\n                  <p class=\"td-highlight\">{{ validation.validationSystem }}</p>\r\n                  <!-- <input\r\n                  name=\"validSys{{ idx }}\"\r\n                  type=\"text\"\r\n                  class=\"form-control\"\r\n                  [value]=\"validation.validationSystem\"\r\n                  readonly\r\n                /> -->\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <th>\r\n                  <ng-container\r\n                    *ngIf=\"\r\n                      sourceDetails == 'TCP/IP' ||\r\n                      sourceDetails == 'MT' ||\r\n                      sourceDetails == 'MX'\r\n                    \"\r\n                  >\r\n                    Field No.<span class=\"colorRed\">*</span>\r\n                  </ng-container>\r\n                  <ng-container *ngIf=\"sourceDetails == 'JSON'\">\r\n                    Key\r\n                  </ng-container>\r\n                  <ng-container *ngIf=\"sourceDetails == 'XML'\">\r\n                    Tag\r\n                  </ng-container>\r\n                  <ng-container *ngIf=\"sourceDetails == 'DB Connection'\">\r\n                    Column Name\r\n                  </ng-container>\r\n                </th>\r\n                <th\r\n                  *ngFor=\"\r\n                    let validation of validationSystems.value;\r\n                    let i = index\r\n                  \"\r\n                >\r\n                  <ng-container\r\n                    *ngIf=\"\r\n                      sourceDetails == 'TCP/IP' ||\r\n                      sourceDetails == 'MT' ||\r\n                      sourceDetails == 'MX'\r\n                    \"\r\n                  >\r\n                    Field No.<span class=\"colorRed\">*</span>\r\n                  </ng-container>\r\n                  <ng-container *ngIf=\"sourceDetails == 'JSON'\">\r\n                    Key\r\n                  </ng-container>\r\n                  <ng-container *ngIf=\"sourceDetails == 'XML'\">\r\n                    Tag\r\n                  </ng-container>\r\n                  <ng-container *ngIf=\"valDeatils == 'DB Connection'\">\r\n                    Column Name\r\n                  </ng-container>\r\n                </th>\r\n                <!-- <th style=\"text-align: center\">validation method</th>\r\n                <th style=\"text-align: center\">validation details</th> -->\r\n                <th style=\"text-align: center\">\r\n                  validation method<span class=\"colorRed\">*</span>\r\n                </th>\r\n                <th style=\"text-align: center\">\r\n                  validation details<span class=\"colorRed\">*</span>\r\n                </th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <ng-container formArrayName=\"sysRuleDetails\">\r\n                <tr *ngFor=\"let rule of sysRuleDetails.controls; let i = index\">\r\n                  <ng-container [formGroup]=\"rule\">\r\n                    <td>\r\n                      <ng-container *ngIf=\"sourceDetails == 'TCP/IP'\">\r\n                        <select\r\n                          id=\"outlineNgSelect\"\r\n                          id=\"susRuleMsg\"\r\n                          formControlName=\"messageKey\"\r\n                          class=\"form-select\"\r\n                          aria-label=\"Default select example\"\r\n                          (change)=\"onselectOfFieldNo($event, i)\"\r\n                        >\r\n                          <option hidden value=\"\" disabled selected>\r\n                            Please select Field No\r\n                          </option>\r\n                          <option\r\n                            *ngFor=\"let data of ruleMappDetails\"\r\n                            [value]=\"data.messagebasis\"\r\n                            hidden\r\n                            [disabled]=\"!submit\"\r\n                            [hidden]=\"try(data.messagebasis)\"\r\n                            required\r\n                          >\r\n                            {{ data.messageKey }} {{ data.messagebasis }}\r\n                          </option>\r\n                        </select>\r\n                      </ng-container>\r\n                      <ng-container *ngIf=\"sourceDetails == 'XML'\">\r\n                        <select\r\n                          id=\"outlineNgSelect\"\r\n                          formControlName=\"messageKey\"\r\n                          class=\"form-select\"\r\n                          (change)=\"onselectOfFieldNo($event, i)\"\r\n                          aria-label=\"Default select example\"\r\n                        >\r\n                          <option hidden value=\"\" disabled selected>\r\n                            Please select Tag\r\n                          </option>\r\n                          <option\r\n                            *ngFor=\"let data of ruleMappDetails\"\r\n                            [value]=\"data.messagebasis\"\r\n                            [disabled]=\"!submit\"\r\n                            [hidden]=\"try(data.messagebasis)\"\r\n                            required\r\n                          >\r\n                            {{ data.messageKey }} {{ data.messagebasis }}\r\n                          </option>\r\n                        </select>\r\n                      </ng-container>\r\n                      <ng-container *ngIf=\"sourceDetails == 'JSON'\">\r\n                        <select\r\n                          id=\"outlineNgSelect\"\r\n                          formControlName=\"messageKey\"\r\n                          class=\"form-select\"\r\n                          (change)=\"onselectOfFieldNo($event, i)\"\r\n                          aria-label=\"Default select example\"\r\n                        >\r\n                          <option hidden value=\"\" disabled selected>\r\n                            Please select Key\r\n                          </option>\r\n                          <option\r\n                            *ngFor=\"let data of ruleMappDetails\"\r\n                            [value]=\"data.messagebasis\"\r\n                            [disabled]=\"!submit\"\r\n                            [hidden]=\"try(data.messagebasis)\"\r\n                            required\r\n                          >\r\n                            {{ data.messageKey }} {{ data.messagebasis }}\r\n                          </option>\r\n                        </select>\r\n                      </ng-container>\r\n                      <ng-container *ngIf=\"sourceDetails == 'DB Connection'\">\r\n                        <select\r\n                          id=\"outlineNgSelect\"\r\n                          id=\"susRuleMsg\"\r\n                          formControlName=\"messageKey\"\r\n                          class=\"form-select\"\r\n                          aria-label=\"Default select example\"\r\n                          (change)=\"onselectOfFieldNo($event, i)\"\r\n                        >\r\n                          <option hidden value=\"\" disabled selected>\r\n                            Please select Column Name\r\n                          </option>\r\n                          <option\r\n                            *ngFor=\"let data of ruleMappDetails\"\r\n                            [value]=\"data.messagebasis\"\r\n                            hidden\r\n                            [disabled]=\"!submit\"\r\n                            [hidden]=\"try(data.messagebasis)\"\r\n                            required\r\n                          >\r\n                            {{ data.messageKey }} {{ data.messagebasis }}\r\n                          </option>\r\n                        </select>\r\n                      </ng-container>\r\n                      <ng-container\r\n                        *ngIf=\"sourceDetails == 'MT' || sourceDetails == 'MX'\"\r\n                      >\r\n                        <select\r\n                          id=\"outlineNgSelect\"\r\n                          id=\"susRuleMsg\"\r\n                          formControlName=\"messageKey\"\r\n                          class=\"form-select\"\r\n                          (change)=\"onselectOfFieldNo($event, i)\"\r\n                          aria-label=\"Default select example\"\r\n                        >\r\n                          <option hidden value=\"\" disabled selected>\r\n                            Please select Field No\r\n                          </option>\r\n                          <option\r\n                            *ngFor=\"let data of ruleMappDetails\"\r\n                            [value]=\"data.messagebasis\"\r\n                            hidden\r\n                            [disabled]=\"!submit\"\r\n                            [hidden]=\"try(data.messagebasis)\"\r\n                            required\r\n                          >\r\n                            {{ data.messageKey }} {{ data.messagebasis }}\r\n                          </option>\r\n                        </select>\r\n                      </ng-container>\r\n                    </td>\r\n                    <td\r\n                      *ngFor=\"\r\n                        let validation of validationSystems.value;\r\n                        let idx = index;\r\n                        trackBy: indexTracker\r\n                      \"\r\n                    >\r\n                      <ng-container *ngIf=\"valDeatils == 'TCP/IP'\">\r\n                        <select\r\n                          id=\"outlineNgSelect\"\r\n                          class=\"form-select\"\r\n                          aria-label=\"Default select example\"\r\n                          required\r\n                          (change)=\"onselectOfFieldNo2($event, i, idx)\"\r\n                        >\r\n                          <option hidden value=\"\" disabled selected>\r\n                            Please select Field No\r\n                          </option>\r\n                          <option\r\n                            *ngFor=\"let data of xmlRespData\"\r\n                            [value]=\"data.messagebasis\"\r\n                            [hidden]=\"try2(data.messagebasis, idx)\"\r\n                            [disabled]=\"!submit\"\r\n                            required\r\n                          >\r\n                            {{ data.messageKey }} {{ data.messagebasis }}\r\n                          </option>\r\n                        </select>\r\n                      </ng-container>\r\n                      <ng-container *ngIf=\"valDeatils == 'Https/Http'\">\r\n                        <select\r\n                          id=\"outlineNgSelect\"\r\n                          (change)=\"onselectOfFieldNo2($event, i, idx)\"\r\n                          name=\"messageKey_{{ idx }}\"\r\n                          required\r\n                          #messageKey=\"ngModel\"\r\n                          [(ngModel)]=\"validation.messageKey\"\r\n                          class=\"form-select\"\r\n                          aria-label=\"Default select example\"\r\n                        >\r\n                          <option hidden value=\"\" disabled selected>\r\n                            Please select Tag\r\n                          </option>\r\n                          <option\r\n                            *ngFor=\"let data of xmlRespData\"\r\n                            [disabled]=\"!submit\"\r\n                            [value]=\"data.messagebasis\"\r\n                            [hidden]=\"try2(data.messagebasis, idx)\"\r\n                            required\r\n                          >\r\n                            {{ data.messageKey }} {{ data.messagebasis }}\r\n                          </option>\r\n                        </select>\r\n                      </ng-container>\r\n                      <ng-container *ngIf=\"valDeatils == 'DB Connection'\">\r\n                        <select\r\n                          id=\"outlineNgSelect\"\r\n                          class=\"form-select\"\r\n                          aria-label=\"Default select example\"\r\n                          required\r\n                          (change)=\"onselectOfFieldNo2($event, i, idx)\"\r\n                        >\r\n                          <option hidden value=\"\" disabled selected>\r\n                            Please select Column Name\r\n                          </option>\r\n                          <option\r\n                            *ngFor=\"let data of xmlRespData\"\r\n                            [value]=\"data.messagebasis\"\r\n                            [hidden]=\"try2(data.messagebasis, idx)\"\r\n                            [disabled]=\"!submit\"\r\n                            required\r\n                          >\r\n                            {{ data.messageKey }} {{ data.messagebasis }}\r\n                          </option>\r\n                        </select>\r\n                      </ng-container>\r\n                      <ng-container\r\n                        *ngIf=\"valDeatils == 'MT' || valDeatils == 'MX'\"\r\n                      >\r\n                        <select\r\n                          id=\"outlineNgSelect\"\r\n                          class=\"form-select\"\r\n                          aria-label=\"Default select example\"\r\n                          required\r\n                          (change)=\"onselectOfFieldNo2($event, i, idx)\"\r\n                        >\r\n                          <option hidden value=\"\" disabled selected>\r\n                            Please select Field No\r\n                          </option>\r\n                          <option\r\n                            *ngFor=\"let data of xmlRespData\"\r\n                            [value]=\"data.messagebasis\"\r\n                            [hidden]=\"try2(data.messagebasis, idx)\"\r\n                            [disabled]=\"!submit\"\r\n                            required\r\n                          >\r\n                            {{ data.messageKey }} {{ data.messagebasis }}\r\n                          </option>\r\n                        </select>\r\n                      </ng-container>\r\n                    </td>\r\n\r\n                    <td>\r\n                      <input\r\n                        formControlName=\"validationMethod\"\r\n                        id=\"validationMethod\"\r\n                        type=\"text\"\r\n                        class=\"form-control\"\r\n                        placeholder=\"Validation Method\"\r\n                        value=\"\"\r\n                        [readonly]=\"!submit\"\r\n                      />\r\n                    </td>\r\n                    <td>\r\n                      <input\r\n                        formControlName=\"validationDetail\"\r\n                        id=\"validationDetails\"\r\n                        type=\"text\"\r\n                        class=\"form-control\"\r\n                        placeholder=\"Validation Details\"\r\n                        value=\"\"\r\n                        [readonly]=\"!submit\"\r\n                      />\r\n                    </td>\r\n                    <td class=\"tblIcon\">\r\n                      <a\r\n                        *ngIf=\"submit\"\r\n                        (click)=\"removeSysRules(i)\"\r\n                        class=\"tblIcon\"\r\n                        ><img src=\"assets/images/delete-icon.svg\" alt=\"...\"\r\n                      /></a>\r\n                    </td>\r\n                  </ng-container>\r\n                </tr>\r\n              </ng-container>\r\n            </tbody>\r\n          </table>\r\n\r\n          <div class=\"row g-3\">\r\n            <div class=\"col-lg-12\">\r\n              <a\r\n                *ngIf=\"submit\"\r\n                (click)=\"addSysRuleDetails()\"\r\n                class=\"addIcon primarybg\"\r\n                style=\"cursor: pointer\"\r\n              >\r\n                <span><img src=\"assets/images/plus-icon.svg\" alt=\"...\" /></span>\r\n              </a>\r\n            </div>\r\n          </div>\r\n        </fieldset>\r\n        <div class=\"row g-3 pb-3 justify-content-end pt-3\">\r\n          <div class=\"col-auto\">\r\n            <button\r\n              [hidden]=\"!submit\"\r\n              (click)=\"Previous()\"\r\n              class=\"btn smBtn minWdSmBtn btnDarkGrey\"\r\n            >\r\n              Previous\r\n            </button>\r\n          </div>\r\n          <div\r\n            class=\"col-auto\"\r\n            *ngIf=\"\r\n              !(\r\n                ruleConfig?.recordStatus == 'C' ||\r\n                ruleConfig?.recordStatus == 'CLOSED'\r\n              )\r\n            \"\r\n          >\r\n            <button\r\n              class=\"btn smBtn minWdSmBtn btnUpdate\"\r\n              [hidden]=\"hideSubmit || submit\"\r\n              (click)=\"editValues()\"\r\n            >\r\n              Edit\r\n            </button>\r\n          </div>\r\n          <div class=\"col-auto\">\r\n            <button\r\n              (click)=\"onSubmit()\"\r\n              [hidden]=\"!submit\"\r\n              [disabled]=\"ruleForm.invalid \"\r\n              class=\"btn smBtn minWdSmBtn btnPrimary\"\r\n            >\r\n              Save\r\n            </button>\r\n          </div>\r\n          <div\r\n            class=\"col-auto\"\r\n            *ngIf=\"\r\n              ruleConfig?.approvedStatus == 'U' ||\r\n              ruleConfig?.approvedStatus == 'UNAUTHORIZED' ||\r\n              ruleConfig?.approvedStatus == 'N' ||\r\n              ruleConfig?.approvedEver == 'N'\r\n            \"\r\n            [hidden]=\"hideSubmit\"\r\n          >\r\n            <button\r\n              (click)=\"auditChangeRuleTranslation('auth')\"\r\n              class=\"btn smBtn minWdSmBtn btnAuth\"\r\n            >\r\n              Auth\r\n            </button>\r\n          </div>\r\n          <div\r\n            class=\"col-auto\"\r\n            *ngIf=\"\r\n              (ruleConfig?.recordStatus == 'O' ||\r\n                ruleConfig?.recordStatus == 'OPEN') &&\r\n              ruleConfig?.approvedEver != 'NO' &&\r\n              ruleConfig?.approvedEver != 'N'\r\n            \"\r\n            [hidden]=\"hideSubmit\"\r\n          >\r\n            <button\r\n              (click)=\"auditChangeRuleTranslation('close')\"\r\n              class=\"btn smBtn minWdSmBtn btnPrimary\"\r\n            >\r\n              Close\r\n            </button>\r\n          </div>\r\n          <div\r\n            class=\"col-auto\"\r\n            *ngIf=\"\r\n              (ruleConfig?.recordStatus == 'C' ||\r\n                ruleConfig?.recordStatus == 'CLOSED') &&\r\n              ruleConfig?.approvedEver != 'NO' &&\r\n              ruleConfig?.approvedEver != 'N'\r\n            \"\r\n            [hidden]=\"hideSubmit\"\r\n          >\r\n            <button\r\n              (click)=\"auditChangeRuleTranslation('open')\"\r\n              class=\"btn smBtn minWdSmBtn btnPrimary\"\r\n            >\r\n              Reopen\r\n            </button>\r\n          </div>\r\n          <div\r\n            class=\"col-auto\"\r\n            *ngIf=\"\r\n              ruleConfig?.approvedEver == 'NO' ||\r\n              ruleConfig?.approvedEver == 'N'\r\n            \"\r\n            [hidden]=\"hideSubmit\"\r\n          >\r\n            <button\r\n              (click)=\"deleteRule()\"\r\n              class=\"btn smBtn minWdSmBtn btnPrimary\"\r\n            >\r\n              Delete\r\n            </button>\r\n          </div>\r\n          <div class=\"col-auto\">\r\n            <button\r\n              class=\"btn smBtn minWdSmBtn btnSecondary\"\r\n              [routerLink]=\"['/createrule/list']\"\r\n            >\r\n              Exit\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </ng-container>\r\n  </form>\r\n  <!-- *ngIf=\"auditShowStatus\" -->\r\n  <div class=\"dbCardStyle\" *ngIf=\"auditShowStatus\">\r\n    <div class=\"row\">\r\n      <div class=\"col-sm-6 col-md-4 col-lg-3\">\r\n        <div class=\"csCardStyle\">\r\n          <div class=\"row g-2 align-items-center\">\r\n            <div class=\"col-auto\">\r\n              <div class=\"csCardStyleIcon csCardStyleIconBg1\">\r\n                <i class=\"fa fa-edit faClass\"></i>\r\n              </div>\r\n            </div>\r\n            <div class=\"col\">\r\n              <div class=\"csCardStyleText\">\r\n                <h2>Maker</h2>\r\n                <p>{{ ruleConfig.creatorId }}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-sm-6 col-md-4 col-lg-3\">\r\n        <div class=\"csCardStyle\">\r\n          <div class=\"row g-2 align-items-center\">\r\n            <div class=\"col-auto\">\r\n              <div class=\"csCardStyleIcon csCardStyleIconBg2\">\r\n                <img src=\"assets/images/time-stamp-icon.svg\" alt=\"...\" />\r\n              </div>\r\n            </div>\r\n            <div class=\"col\">\r\n              <div class=\"csCardStyleText\">\r\n                <h2>Maker Time Stamp</h2>\r\n                <p>\r\n                  {{ ruleConfig.createdTime | date : \"MM/dd/yyyy, h:mm a\" }}\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-sm-6 col-md-4 col-lg-3\">\r\n        <div class=\"csCardStyle\">\r\n          <div class=\"row g-2 align-items-center\">\r\n            <div class=\"col-auto\">\r\n              <div class=\"csCardStyleIcon csCardStyleIconBg3\">\r\n                <img src=\"assets/images/record-status-icon.svg\" alt=\"...\" />\r\n              </div>\r\n            </div>\r\n            <div class=\"col\">\r\n              <div class=\"csCardStyleText\">\r\n                <h2>Record Status</h2>\r\n                <p>{{ ruleConfig.recordStatus }}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-sm-6 col-md-4 col-lg-3\">\r\n        <div class=\"csCardStyle\">\r\n          <div class=\"row g-2 align-items-center\">\r\n            <div class=\"col-auto\">\r\n              <div class=\"csCardStyleIcon csCardStyleIconBg4\">\r\n                <i class=\"fa fa-check-square-o faClassChecker\"></i>\r\n              </div>\r\n            </div>\r\n            <div class=\"col\">\r\n              <div class=\"csCardStyleText\">\r\n                <h2>Checker</h2>\r\n                <p>{{ ruleConfig.approverId }}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-sm-6 col-md-4 col-lg-3\">\r\n        <div class=\"csCardStyle\">\r\n          <div class=\"row g-2 align-items-center\">\r\n            <div class=\"col-auto\">\r\n              <div class=\"csCardStyleIcon csCardStyleIconBg5\">\r\n                <img src=\"assets/images/checker-time-icon.svg\" alt=\"...\" />\r\n              </div>\r\n            </div>\r\n            <div class=\"col\">\r\n              <div class=\"csCardStyleText\">\r\n                <h2>Checker Time Stamp</h2>\r\n                <p>\r\n                  {{ ruleConfig.approvedTime | date : \"MM/dd/yyyy, h:mm a\" }}\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-sm-6 col-md-4 col-lg-3\">\r\n        <div class=\"csCardStyle\">\r\n          <div class=\"row g-2 align-items-center\">\r\n            <div class=\"col-auto\">\r\n              <div class=\"csCardStyleIcon csCardStyleIconBg6\">\r\n                <img src=\"assets/images/first-auth-icon.svg\" alt=\"...\" />\r\n              </div>\r\n            </div>\r\n            <div class=\"col\">\r\n              <div class=\"csCardStyleText\">\r\n                <h2>First Time Authorization</h2>\r\n                <p>{{ ruleConfig.approvedEver }}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-sm-6 col-md-4 col-lg-3\">\r\n        <div class=\"csCardStyle\">\r\n          <div class=\"row g-2 align-items-center\">\r\n            <div class=\"col-auto\">\r\n              <div class=\"csCardStyleIcon csCardStyleIconBg7\">\r\n                <img\r\n                  src=\"assets/images/authorize.svg\"\r\n                  alt=\"...\"\r\n                  class=\"modImage\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <div class=\"col\">\r\n              <div class=\"csCardStyleText\">\r\n                <h2>Authorization Status</h2>\r\n                <p>{{ ruleConfig.approvedStatus }}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-sm-6 col-md-4 col-lg-3\">\r\n        <div class=\"csCardStyle\">\r\n          <div class=\"row g-2 align-items-center\">\r\n            <div class=\"col-auto\">\r\n              <div class=\"csCardStyleIcon csCardStyleIconBg7\">\r\n                <img\r\n                  src=\"assets/images/modification.svg\"\r\n                  class=\"modImage\"\r\n                  alt=\"...\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <div class=\"col\">\r\n              <div class=\"csCardStyleText\">\r\n                <h2>Modification Number</h2>\r\n                <p>{{ ruleConfig.versionNo }}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { ChangeDetectorRef, Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators, FormArray } from '@angular/forms';\r\nimport { RuleService } from 'src/app/shared/services/rule.service';\r\nimport * as $ from 'jquery';\r\nimport { ToastService } from 'src/app/shared/services/toast.service';\r\nimport { tr } from 'date-fns/locale';\r\nimport Swal from 'sweetalert2';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { Observable, of, Subject } from 'rxjs';\r\nimport { CanDeactivateGuard, IDeactivateComponent } from 'src/app/shared/guards/can-deactivate.guard';\r\n\r\n@Component({\r\n  selector: 'npr-rule-details',\r\n  templateUrl: './rule-details.component.html',\r\n  styleUrls: ['./rule-details.component.scss']\r\n})\r\nexport class RuleDetailsComponent implements OnInit ,IDeactivateComponent {\r\n  ruleForm: FormGroup;\r\n  // saveDisabled = true;\r\n  submit:boolean=true;\r\n  showRuleValidation: boolean = false;\r\n  externalsystem: any = [];\r\n  selectedExternalSystems: any = [];\r\n  filteredExternalSystems: any =[];\r\n  sourcesysdata: any = [];\r\n  tempArrayData: any = [];\r\n  headerTagData1: any[] = [];\r\n  validationData: any;\r\n  srcSystem: any;\r\n  externalCreateSystemFiltered: any[] = [];\r\n  sourcesystem: any;\r\n  sourceSysData: any;\r\n  isSelected:boolean =true;\r\n  hideSubmit : boolean = false;\r\n  deleted: boolean = false;\r\n  editBtn: boolean;\r\n  closeBtn: boolean;\r\n  authBtn: boolean;\r\n\r\n  tempArrayList : any[] = [];\r\n  tempArrayList2 : any[] = [];\r\n\r\n  ruleConfig = new RuleConfig();\r\n  selectedDocumentTypes2: any[] = [];\r\n  x;\r\n  currentUser: string;\r\n  sourceOperation: any;\r\n  sourceService: any;\r\n  sourceDetails: any;\r\n  messageBasisIso: any = [];\r\n  destination: any;\r\n  destinationSysData: any;\r\n  validationTransData: any;\r\n  valOperation: any;\r\n  valService: any;\r\n  valDeatils: any;\r\n  xmlRespData: any = [];\r\n  auditShowStatus: boolean;\r\n  editFlag :boolean= true;\r\n  ruleIdInvalid : boolean = false;\r\n  ruleIdAfterSave : any;\r\n  formTouched: boolean=true;\r\n  showDialog = false;\r\n  subject = new Subject<boolean>();\r\n  ruleMappDetails: any;\r\n  destinationMsg: boolean = true;\r\n  sourceMsg: boolean = true;\r\n  validationMsg: boolean = true;\r\n  desSystem: any;\r\n  sourseSys: any;\r\n  translationDataService: any;\r\n  translationDataOperation: any;\r\n  translationDestDataOperation:any;\r\n  translationValDataOperation:any;\r\n  translationValDataService:any;\r\n  translationDestDataService:any;\r\n  multipleOperation: boolean;\r\n  multipleService: boolean;\r\n  multipleOperationSource: boolean;\r\n  multipleServiceSource: boolean;\r\n\r\n  constructor(private formBuilder: FormBuilder, private router: Router,private canDeactivateGuard: CanDeactivateGuard,\r\n    private ruleService: RuleService, private toastService:ToastService,private cdr: ChangeDetectorRef) { }\r\n\r\n  ngOnInit(): void {\r\n    this.initForm();\r\n    this.currentUser = localStorage.getItem('userFromLogin');\r\n\r\n    this.gettingExternalSsytem();\r\n  }\r\n\r\n  initForm() {\r\n    this.ruleForm = this.formBuilder.group({\r\n      ruleId: [\"\", Validators.required],\r\n      ruleName: [\"\", Validators.required],\r\n      sourceSystems: this.getSourceItem(),\r\n      destinationSystems: this.getDestinationItem(),\r\n      validationSystems: this.formBuilder.array([]),\r\n      sysRuleDetails: this.formBuilder.array([]),\r\n    });\r\n\r\n    // this.addValidationGroup();\r\n  }\r\n\r\n  getSourceItem() {\r\n    return this.formBuilder.group({\r\n      sourceSystem: [\"\", Validators.required],\r\n      messageKey:[''],\r\n      messageType: [\"\", Validators.required],\r\n      serviceName: [\"\", Validators.required],\r\n      operationName: [\"\", Validators.required],\r\n    });\r\n  }\r\n \r\n  canExit() : Promise<boolean> {\r\n    let isExit :boolean = false;\r\n    if (this.ruleForm.touched && this.formTouched==true) {\r\n    return Swal.fire({ \r\n      text: 'There are unsaved changes in the screen. Would you like to navigate to other screen?',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#E6224A',\r\n      cancelButtonColor: '#011945',\r\n      cancelButtonText: 'NO',\r\n      confirmButtonText: 'YES',\r\n      icon: 'info',\r\n    }).then((result) => {\r\n      if (result.isConfirmed === true) {\r\n        isExit=true;\r\n        this.cdr.markForCheck();\r\n           return isExit;\r\n      }\r\n      else{\r\n        isExit=false;\r\n        this.cdr.markForCheck();\r\n        return isExit;\r\n      }\r\n    \r\n    });\r\n  }\r\n else{\r\n  isExit=true;\r\n  return new Promise((resolve, reject) => {\r\n    if (isExit === true) {\r\n      isExit=true;\r\n      this.cdr.markForCheck();\r\n      resolve(true);\r\n    }\r\n  \r\n  })\r\n }\r\n    }\r\n\r\n\r\n  getDestinationItem() {\r\n    return this.formBuilder.group({\r\n      destinationSystem: [\"\",Validators.required],\r\n      messageType: [\"\", Validators.required],\r\n      serviceName: [\"\", Validators.required],\r\n      operationName: [\"\", Validators.required],\r\n    });\r\n  }\r\n\r\n  getValidationItem() {\r\n    return this.formBuilder.group({\r\n      validationSystem: [\"\",Validators.required],\r\n      messageKey: [\"\"],\r\n      messageType: [\"\", Validators.required],\r\n      service: [\"\", Validators.required],\r\n      operation: [\"\", Validators.required],\r\n      id: [''],\r\n      ruleId: ['']\r\n    });\r\n  }\r\n\r\n  getSysRuleDetails() {\r\n    return this.formBuilder.group({\r\n      id: [\"\"],\r\n      ruleId: [\"\"],\r\n      messageKey: [\"\",Validators.required],\r\n      validationMethod: [\"\",Validators.required],\r\n      validationDetail: [\"\",Validators.required]\r\n    });\r\n  }\r\n\r\n  indexTracker(index: number, value: any) {\r\n    return index;\r\n  }\r\n\r\n  get sourceSystems() {\r\n    return this.ruleForm.get('sourceSystems').value;\r\n  }\r\n\r\n  get validationSystems() {\r\n    return this.ruleForm.get('validationSystems') as FormArray;\r\n  }\r\n\r\n  get sysRuleDetails() {\r\n    return this.ruleForm.get('sysRuleDetails') as FormArray;\r\n  }\r\n\r\n  addValidationGroup() {\r\n    this.validationSystems.push(this.getValidationItem());\r\n  }\r\n\r\n  addSysRuleDetails() {\r\n    this.sysRuleDetails.push(this.getSysRuleDetails());\r\n    console.log(this.sysRuleDetails.value);\r\n  }\r\n\r\n  deleteVFGroup(index: number) {\r\n    console.log(\"Inside delete\");\r\n    \r\n    this.validationSystems.removeAt(index);\r\n    const selectedSystems = new Set(this.validationSystems.value.map(val => val.validationSystem));\r\n    this.filteredExternalSystems = this.externalsystem.filter(val => !selectedSystems.has(val));\r\n  }\r\n\r\n  removeSysRules(index: number){\r\n    console.log(this.removeSysRules);\r\n    \r\n    if(this.tempArrayList[index]){\r\n      this.tempArrayList.splice(index, 1);\r\n    }\r\n    if(this.tempArrayList2[index]){\r\n      this.tempArrayList2.splice(index, 1);\r\n    }\r\n    this.sysRuleDetails.removeAt(index);\r\n    console.log(this.ruleForm.valid);\r\n    \r\n    this.ruleForm.controls['sysRuleDetails'].setErrors({'customeError':true})\r\n    console.log(this.ruleForm.valid);\r\n    console.log(this.ruleForm.invalid);\r\n    console.log(this.ruleForm.dirty);\r\n    console.log(this.ruleForm);\r\n    \r\n    \r\n    \r\n    // if (this.ruleForm.invalid){\r\n    //   console.log(this.ruleForm);\r\n      \r\n    //   this.disableButton();\r\n    // }\r\n  }\r\n  // disableButton() {\r\n  //   this.ruleForm.get('submitButton').disable();\r\n  // }\r\n  // enableButton() {\r\n  //   this.ruleForm.get('submitButton').enable();\r\n  // }\r\n\r\n  trackByFn(index: any, item: any) {\r\n    return index;\r\n   } \r\n\r\n  issourceSysDisabled = (value) => {\r\n    return this.headerTagData1.includes(value);\r\n  }\r\n\r\n  onSlectionExternalSystem(event) {\r\n    \r\n    this.srcSystem = event\r\n    this.externalCreateSystemFiltered = this.externalsystem.filter((system) => system !== this.srcSystem && system !== this.desSystem)\r\n    // this.systemName = event.value;\r\n    this.sourcesystem = event;\r\n    // console.log(this.sourcesystem);\r\n    this.ruleService.gettingTranslationData(this.sourcesystem).subscribe(resp => {\r\n      // console.log(resp);\r\n      if (resp) {\r\n        this.sourceSysData = resp;\r\n        this.ruleMappDetails=this.sourceSysData.msgTransDetails;\r\n        // console.log(this.ruleMappDetails,\"RuleMapping before\");\r\n        if(this.sourceSysData.messageType){\r\n          if(this.sourceSysData.messageType == 'I'){\r\n            this.sourceSysData.messageType='Incoming';\r\n          }\r\n          if(this.sourceSysData.messageType == 'O'){\r\n            this.sourceSysData.messageType='OutGoing';\r\n          }\r\n          this.sourceMsg=false;\r\n        }\r\n        // console.log(this.sourceSysData);\r\n        this.ruleForm.get('sourceSystems').patchValue(this.sourceSysData);\r\n        if(resp.messageType){\r\n          if(resp.messageType == 'Incoming'){\r\n            resp.messageType='I';\r\n          }\r\n          if(resp.messageType == 'OutGoing'){\r\n            resp.messageType='O';\r\n          }\r\n          this.sourceMsg=false;\r\n        }\r\n        this.ruleConfig.sourceTranslationId = resp.transId;\r\n        this.gettingoperationAndServiceFroSourceSystem(this.sourcesystem, resp.messageType);\r\n      }\r\n    })\r\n    this.externalsystem = this.tempArrayData;\r\n  }\r\n\r\n\r\n  gettingoperationAndServiceFroSourceSystem(ssysName, msgType) {\r\n    // console.log(\"ssysName\", ssysName)\r\n    this.ruleService.gettingoperationAndService(ssysName, msgType, this.currentUser)\r\n    .subscribe((sourceResp:any) => {\r\n      console.log(sourceResp);\r\n      if(sourceResp){\r\n        if(sourceResp.I){\r\n          sourceResp.I.OPERATION[0]='Conversion',\r\n          sourceResp.I.SERVICE[0]='Conversion'\r\n        this.sourceOperation = sourceResp.I.OPERATION;\r\n        this.sourceService = sourceResp.I.SERVICE;\r\n        this.sourceDetails = sourceResp.MdmtSystemChannel[0].messageChannel;\r\n        if(this.sourceDetails ===  'Https/Http' ){\r\n          this.sourceDetails =sourceResp.MdmtSystemChannel[0].messageFormat;\r\n        }\r\n        this.messageBasisIso = sourceResp.MdmtSystemService;\r\n        }\r\n        if(sourceResp.O){\r\n          sourceResp.O.OPERATION[0]='Conversion',\r\n          sourceResp.O.SERVICE[0]='Conversion'\r\n          this.sourceOperation = sourceResp.O.OPERATION;\r\n          this.sourceService = sourceResp.O.SERVICE;\r\n          this.sourceDetails = sourceResp.MdmtSystemChannel[0].messageChannel;\r\n          if(this.sourceDetails ===  'Https/Http' ){\r\n            this.sourceDetails =sourceResp.MdmtSystemChannel[0].messageFormat;\r\n          }\r\n          this.messageBasisIso = sourceResp.MdmtSystemService;\r\n          }\r\n        }\r\n      console.log(this.sourceSysData);\r\n      console.log(this.sourceService);\r\n      let keys = Object.keys(sourceResp);\r\n      let x = keys[2];\r\n      let y = keys[3];\r\n      if (x == 'I' && Object.keys(sourceResp).length == 3) {\r\n        // console.log(\"yes\", x);\r\n// console.log(this.ruleForm);\r\n        if (sourceResp.I.SERVICE.length !== 0) {\r\n          // this.msgTranslation.serviceName = sourceResp.I.SERVICE[0].headerValue\r\n          // console.log(sourceResp.I.SERVICE);\r\n          // this.ruleForm.get('sourceSystems').patchValue(this.sourceSysData);\r\n          // this.ruleForm.get('sysRuleDetails').setValue(sourceResp.I.SERVICE[0].headerValue);\r\n          // this.ruleForm.get('serviceName').patchValue(sourceResp.I.SERVICE[0].headerValue);\r\n          // (this.ruleForm.get('sysRuleDetails') as FormArray).at(0).get('serviceName').patchValue(sourceResp.I.SERVICE[0].headerValue);\r\n          this.translationDataService = sourceResp.I.SERVICE;\r\n          if(sourceResp.I.SERVICE.length  <= 1){\r\n            console.log(this.translationDataService ,\"1st if\");\r\n            this.multipleServiceSource = true;\r\n          }\r\n          if(sourceResp.I.SERVICE.length  >1){\r\n            console.log(this.translationDataService,\"2nd If\");\r\n            this.multipleServiceSource = false;\r\n          }\r\n        }\r\n        if (sourceResp.I.OPERATION.length !== 0) {\r\n          // this.msgTranslation.operationName = sourceResp.I.OPERATION[0].headerValue\r\n          // this.ruleForm.get('operationName').patchValue(sourceResp.I.OPERATION[0].headerValue);\r\n          this.translationDataOperation = sourceResp.I.OPERATION;\r\n       console.log(this.translationDataOperation);\r\n          if(this.translationDataOperation.length <= 1){\r\n            console.log(this.translationDataOperation ,\"1st if\");\r\n            this.multipleOperationSource = true;\r\n          }\r\n          if(this.translationDataOperation.length > 1){\r\n            console.log(this.translationDataOperation,\"2nd If\");\r\n            this.multipleOperationSource = false;\r\n          }\r\n        }\r\n        this.translationDataService = sourceResp.I.SERVICE\r\n      }\r\n      if (x == 'O' && Object.keys(sourceResp).length == 3) {\r\n        \r\n        if (sourceResp.O.SERVICE.length !== 0) {\r\n          this.translationDataService = sourceResp.O.SERVICE;\r\n          if(sourceResp.O.SERVICE.length  <= 1){\r\n            // console.log(this.translationDestDataService ,\"1st if\");\r\n            this.multipleServiceSource = true;\r\n          }\r\n          if(sourceResp.O.SERVICE.length  > 1){\r\n            // console.log(this.translationDestDataService,\"2nd If\");\r\n            this.multipleServiceSource = false;\r\n          }\r\n        }\r\n        if (sourceResp.O.OPERATION.length !== 0) {\r\n          // this.msgTranslation.operationName = sourceResp.O.OPERATION[0].headerValue\r\n          // this.ruleForm.get('operationName').patchValue(sourceResp.O.OPERATION[0].headerValue);\r\n          this.translationDataOperation = sourceResp.O.OPERATION;\r\n      //  console.log(this.translationDestDataOperation);\r\n          if(this.translationDataOperation.length <= 1){\r\n            // console.log(this.translationDestDataOperation ,\"1st if\");\r\n            this.multipleOperationSource = true;\r\n          }\r\n          if(this.translationDestDataOperation.length > 1){\r\n            // console.log(this.translationDestDataOperation,\"2nd If\");\r\n            this.multipleOperationSource = false;\r\n          }\r\n        }\r\n        this.translationDataService = sourceResp.O.SERVICE\r\n      }\r\n      // console.log(\"messageBasisIso\", this.messageBasisIso);\r\n     \r\n        // console.log(this.ruleMappDetails,\"Rule mapping before\");\r\n        //  for(let g = 0 ; g< this.messageBasisIso.length;g++){\r\n        //   // console.log(\"messageBasisIso\", this.messageBasisIso[g].dataType);\r\n        //   this.ruleMappDetails.push({\r\n        //     dataType: this.messageBasisIso[g].dataType,\r\n        //     defaultValue: null,\r\n        //     encryption: this.messageBasisIso[g].encryption,\r\n        //     id: this.messageBasisIso[g].channelId,\r\n        //     messageKey: this.messageBasisIso[g].messageKey,\r\n        //     messagebasis: this.messageBasisIso[g].messageBasis,\r\n        //     transId: this.messageBasisIso[g].serviceId,\r\n        //     translationId: 0,\r\n        //     versionNo: 1});\r\n          \r\n        //  }\r\n          // console.log(this.ruleMappDetails,\"Rule mapping after\");\r\n\r\n        // this.ruleMappDetails.patchValue({channelId: 16963,\r\n        //   dataType: \"numeric\",\r\n        //   encryption: \"No Encryption\",\r\n        //   headerTag: \"SERVICE\",\r\n        //   headerValue: \"009\",\r\n        //   messageBasis: null,\r\n        //   messageKey: \"FCUBS_HEADER>BRANCH\",\r\n        //   serviceId: 17974});\r\n    }, (err => {\r\n      console.log(err);\r\n    }))\r\n  }\r\n  gettingoperationAndServiceFroDestinationSystem(ssysName, msgType) {\r\n    // console.log(\"ssysName\", ssysName)\r\n    \r\n    this.ruleService.gettingoperationAndService(ssysName, msgType, this.currentUser)\r\n    .subscribe((sourceResp:any) => {\r\n      console.log(sourceResp);\r\n      if(sourceResp){\r\n      if(sourceResp.I){\r\n        sourceResp.I.OPERATION[0]='Conversion',\r\n        sourceResp.I.SERVICE[0]='Conversion'\r\n      this.sourceOperation = sourceResp.I.OPERATION;\r\n      this.sourceService = sourceResp.I.SERVICE;\r\n      // this.sourceDetails = sourceResp.MdmtSystemChannel[0].messageChannel;\r\n      // if(this.sourceDetails ===  'Https/Http' ){\r\n      //   this.sourceDetails =sourceResp.MdmtSystemChannel[0].messageFormat;\r\n      // }\r\n      this.messageBasisIso = sourceResp.MdmtSystemService;\r\n      }\r\n      if(sourceResp.O){\r\n        sourceResp.O.OPERATION[0]='Conversion',\r\n        sourceResp.O.SERVICE[0]='Conversion'\r\n        this.sourceOperation = sourceResp.O.OPERATION;\r\n        this.sourceService = sourceResp.O.SERVICE;\r\n        // this.sourceDetails = sourceResp.MdmtSystemChannel[0].messageChannel;\r\n        // if(this.sourceDetails ===  'Https/Http' ){\r\n        //   this.sourceDetails =sourceResp.MdmtSystemChannel[0].messageFormat;\r\n        // }\r\n        this.messageBasisIso = sourceResp.MdmtSystemService;\r\n        }\r\n      }\r\n      // console.log(this.sourceSysData);\r\n      // console.log(this.sourceService);\r\n      let keys = Object.keys(sourceResp);\r\n      let x = keys[2];\r\n      let y = keys[3];\r\n      if (x == 'I' && Object.keys(sourceResp).length == 3) {\r\n        if (sourceResp.I.SERVICE.length !== 0) {\r\n          this.translationDestDataService = sourceResp.I.SERVICE;\r\n          if(sourceResp.I.SERVICE.length  <= 1){\r\n            // console.log(this.translationDestDataService ,\"1st if\");\r\n            this.multipleService = true;\r\n          }\r\n          if(sourceResp.I.SERVICE.length  > 1){\r\n            // console.log(this.translationDestDataService,\"2nd If\");\r\n            this.multipleService = false;\r\n          }\r\n        }\r\n        if (sourceResp.I.OPERATION.length !== 0) {\r\n          // this.msgTranslation.operationName = sourceResp.I.OPERATION[0].headerValue\r\n          // this.ruleForm.get('operationName').patchValue(sourceResp.I.OPERATION[0].headerValue);\r\n          this.translationDestDataOperation = sourceResp.I.OPERATION;\r\n      //  console.log(this.translationDestDataOperation);\r\n          if(this.translationDestDataOperation.length <= 1){\r\n            // console.log(this.translationDestDataOperation ,\"1st if\");\r\n            this.multipleOperation = true;\r\n          }\r\n          if(this.translationDestDataOperation.length > 1){\r\n            // console.log(this.translationDestDataOperation,\"2nd If\");\r\n            this.multipleOperation = false;\r\n          }\r\n        }\r\n        this.translationDestDataService = sourceResp.I.SERVICE\r\n      }\r\n      \r\n      if (x == 'O' && Object.keys(sourceResp).length == 3) {\r\n        \r\n        if (sourceResp.O.SERVICE.length !== 0) {\r\n          this.translationDestDataService = sourceResp.O.SERVICE;\r\n          if(sourceResp.O.SERVICE.length  <= 1){\r\n            // console.log(this.translationDestDataService ,\"1st if\");\r\n            this.multipleService = true;\r\n          }\r\n          if(sourceResp.O.SERVICE.length  > 1){\r\n            // console.log(this.translationDestDataService,\"2nd If\");\r\n            this.multipleService = false;\r\n          }\r\n        }\r\n        if (sourceResp.O.OPERATION.length !== 0) {\r\n          // this.msgTranslation.operationName = sourceResp.O.OPERATION[0].headerValue\r\n          // this.ruleForm.get('operationName').patchValue(sourceResp.O.OPERATION[0].headerValue);\r\n          this.translationDestDataOperation = sourceResp.O.OPERATION;\r\n      //  console.log(this.translationDestDataOperation);\r\n          if(this.translationDestDataOperation.length <= 1){\r\n            // console.log(this.translationDestDataOperation ,\"1st if\");\r\n            this.multipleOperation = true;\r\n          }\r\n          if(this.translationDestDataOperation.length > 1){\r\n            // console.log(this.translationDestDataOperation,\"2nd If\");\r\n            this.multipleOperation = false;\r\n          }\r\n        }\r\n        this.translationDestDataService = sourceResp.O.SERVICE\r\n      }\r\n      // console.log(\"messageBasisIso\", this.messageBasisIso);\r\n     \r\n        // console.log(this.ruleMappDetails,\"Rule mapping before\");\r\n        //  for(let g = 0 ; g< this.messageBasisIso.length;g++){\r\n        //   // console.log(\"messageBasisIso\", this.messageBasisIso[g].dataType);\r\n        //   this.ruleMappDetails.push({\r\n        //     dataType: this.messageBasisIso[g].dataType,\r\n        //     defaultValue: null,\r\n        //     encryption: this.messageBasisIso[g].encryption,\r\n        //     id: this.messageBasisIso[g].channelId,\r\n        //     messageKey: this.messageBasisIso[g].messageKey,\r\n        //     messagebasis: this.messageBasisIso[g].messageBasis,\r\n        //     transId: this.messageBasisIso[g].serviceId,\r\n        //     translationId: 0,\r\n        //     versionNo: 1});\r\n          \r\n        //  }\r\n          // console.log(this.ruleMappDetails,\"Rule mapping after\");\r\n\r\n        // this.ruleMappDetails.patchValue({channelId: 16963,\r\n        //   dataType: \"numeric\",\r\n        //   encryption: \"No Encryption\",\r\n        //   headerTag: \"SERVICE\",\r\n        //   headerValue: \"009\",\r\n        //   messageBasis: null,\r\n        //   messageKey: \"FCUBS_HEADER>BRANCH\",\r\n        //   serviceId: 17974});\r\n    }, (err => {\r\n      console.log(err);\r\n    }))\r\n  }\r\n\r\n  destinaltionSelection(event) {\r\n    \r\n    this.translationDestDataOperation=[];\r\n    this.translationDestDataService=[];\r\n    console.log(this.externalsystem);\r\n    this.desSystem = event;\r\n    this.destination = event;\r\n    this.externalCreateSystemFiltered = this.externalsystem.filter((system) => system !== this.srcSystem && system !== this.desSystem)\r\n    console.log(this.externalCreateSystemFiltered);\r\n    this.ruleService.gettingTranslationData(this.destination).subscribe((resp:any) => {\r\n      console.log(resp);\r\n\r\n      if (resp) {\r\n        this.destinationSysData = resp;\r\n        if(this.destinationSysData.messageType){\r\n          if(this.destinationSysData.messageType == 'I'){\r\n            this.destinationSysData.messageType='Incoming';\r\n          }\r\n          if(this.destinationSysData.messageType == 'O'){\r\n            this.destinationSysData.messageType='OutGoing';\r\n          }\r\n          this.destinationMsg=false;\r\n        }\r\n        this.ruleConfig.targetTranslationId = resp.transId;\r\n        this.ruleForm.get('destinationSystems').patchValue(this.destinationSysData);\r\n      }\r\n      // console.log(this.destination,resp.messageType);\r\n      if(this.destinationSysData.messageType){\r\n        if(this.destinationSysData.messageType == 'Incoming'){\r\n          this.destinationSysData.messageType='I';\r\n        }\r\n        if(this.destinationSysData.messageType == 'OutGoing'){\r\n          this.destinationSysData.messageType='O';\r\n        }\r\n        this.destinationMsg=false;\r\n      }\r\n      this.gettingoperationAndServiceFroDestinationSystem(this.destination, resp.messageType);\r\n    })\r\n    this.externalsystem = this.tempArrayData;\r\n    \r\n  }\r\n\r\n\r\n  onValidtion(event, i) {\r\n    this.selectedExternalSystems[i] = event;\r\n    const selectedMessageKeySet = new Set(this.selectedExternalSystems);\r\n    this.externalCreateSystemFiltered = this.externalsystem.filter((system) => system !== this.srcSystem && system !== this.desSystem)\r\n\r\n    // this.filteredExternalSystems = this.externalsystem.filter(system => !selectedMessageKeySet.has(system));\r\n    this.validationData = event;\r\n    if (this.selectedDocumentTypes2[i]) {\r\n      this.headerTagData1 = this.externalsystem.filter(val => val !== this.selectedDocumentTypes2[i])\r\n    }\r\n    this.selectedDocumentTypes2[i] = this.validationData;\r\n    this.headerTagData1.push(this.validationData);\r\n    console.log(this.validationData);\r\n    this.ruleService.gettingTranslationData(this.validationData).subscribe((resp:any) => {\r\n      console.log(resp);\r\n      if (resp) {\r\n        this.validationTransData = resp;\r\n        this.xmlRespData=this.validationTransData.msgTransDetails;\r\n        if(this.validationTransData.messageType){\r\n          if(this.validationTransData.messageType == 'I'){\r\n            this.validationTransData.messageType='Incoming';\r\n          }\r\n          if(this.validationTransData.messageType == 'O'){\r\n            this.validationTransData.messageType='OutGoing';\r\n          }\r\n          this.validationMsg=false;\r\n        }\r\n        (this.ruleForm.get('validationSystems') as FormArray).at(i).get('service').patchValue(this.validationTransData.serviceName);\r\n        (this.ruleForm.get('validationSystems') as FormArray).at(i).get('operation').patchValue(this.validationTransData.operationName);\r\n        (this.ruleForm.get('validationSystems') as FormArray).at(i).get('messageType').patchValue(this.validationTransData.messageType);\r\n        if(resp.messageType){\r\n          if(resp.messageType == 'Incoming'){\r\n            resp.messageType='I';\r\n          }\r\n          if(resp.messageType == 'OutGoing'){\r\n            resp.messageType='O';\r\n          }\r\n          this.sourceMsg=false;\r\n        }\r\n        this.gettingoperationSndservForValidation(this.validationData, resp.messageType);\r\n      }\r\n    })\r\n    this.externalsystem = this.tempArrayData;\r\n  }\r\n\r\n  \r\n  gettingExternalSsytem() {\r\n    this.ruleService.gettingExternalsystem().subscribe((res: any) => {\r\n      console.log(\"Response ::\", res);\r\n      this.externalsystem = res.sort();\r\n      this.filteredExternalSystems = this.externalsystem;\r\n      this.sourcesysdata = this.externalsystem;\r\n      this.tempArrayData = this.externalsystem;\r\n      this.externalCreateSystemFiltered = this.externalsystem;\r\n    })\r\n  }\r\n\r\n  gettingoperationSndservForValidation(valData, msg) {\r\n    this.ruleService.gettingoperationAndService(valData, msg, this.currentUser)\r\n    .subscribe(valResp => {\r\n      console.log(valResp);\r\n      if (valResp) {\r\n        this.valOperation = valResp.OPERATION;\r\n        this.valService = valResp.SERVICE;\r\n        \r\n        this.valDeatils = valResp.MdmtSystemChannel[0].messageChannel;\r\n        // console.log(\"valDe\", this.valDeatils);\r\n        // this.xmlRespData = valResp.MdmtSystemService;\r\n        let keys = Object.keys(valResp);\r\n        let x = keys[2];\r\n        let y = keys[3];\r\n        if (x == 'I' && Object.keys(valResp).length == 3) {\r\n          if (valResp.I.SERVICE.length !== 0) {\r\n            this.translationValDataService = valResp.I.SERVICE;\r\n            if(valResp.I.SERVICE.length  < 1){\r\n              // console.log(this.translationValDataService ,\"1st if\");\r\n              this.multipleService = true;\r\n            }\r\n            if(valResp.I.SERVICE.length  >= 1){\r\n              // console.log(this.translationValDataService,\"2nd If\");\r\n              this.multipleService = false;\r\n            }\r\n          }\r\n          if (valResp.I.OPERATION.length !== 0) {\r\n            this.translationValDataOperation = valResp.I.OPERATION;\r\n        //  console.log(this.translationValDataOperation);\r\n            if(this.translationValDataOperation.length < 1){\r\n              // console.log(this.translationValDataOperation ,\"1st if\");\r\n              this.multipleOperation = true;\r\n            }\r\n            if(this.translationValDataOperation.length >= 1){\r\n              // console.log(this.translationValDataOperation,\"2nd If\");\r\n              this.multipleOperation = false;\r\n            }\r\n          }\r\n          this.translationValDataService = valResp.I.SERVICE\r\n        }\r\n        // console.log(this.xmlRespData.length);\r\n      }\r\n    }, (err => {\r\n      console.log(err);\r\n    }))\r\n  }\r\n\r\n  auditChangeRuleTranslation(operation) {\r\n    let message = '';\r\n    let operationType = '';\r\n    switch (operation) {\r\n      case 'open':\r\n        message = 'opened'\r\n        operationType = 'open'\r\n        break;\r\n      case 'close':\r\n        message = 'closed'\r\n        operationType = 'close'\r\n        break;\r\n      case 'auth':\r\n        message = 'authorized'\r\n        operationType = 'authorize'\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    Swal.fire(\r\n      {\r\n        text: `You are trying to ${operationType} record. ` + ' Do you want to proceed?',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        cancelButtonText: 'NO',\r\n        confirmButtonText: 'YES', 'icon': 'info'\r\n      }\r\n    ).then((result => {\r\n      if (result.isConfirmed === true) {\r\n        if (this.ruleConfig.creatorId == this.currentUser) {\r\n          Swal.fire({ text: `Maker cannot ${operationType} the record!` });\r\n        }\r\n        else {\r\n          this.ruleConfig.mdmtValidationSystemData = this.validationSystems.value;\r\n          this.ruleConfig.mdmtValidationSystemData.forEach(el => {\r\n            el.ruleId = this.ruleConfig.ruleId;\r\n          })\r\n          this.sysRuleDetails.value.forEach(el => { el.ruleId = this.ruleForm.get('ruleId').value });\r\n          this.ruleConfig.sysRuleDetails = this.sysRuleDetails.value;\r\n          this.ruleConfig.approvedEver == 'NO'? this.ruleConfig.approvedEver = 'N' : (this.ruleConfig.approvedEver == 'YES'? this.ruleConfig.approvedEver = 'Y' : this.ruleConfig.approvedEver);\r\n          this.ruleConfig.approvedStatus == 'UNAUTHORIZED'? this.ruleConfig.approvedStatus = 'U' : (this.ruleConfig.approvedStatus == 'AUTHORIZED'? this.ruleConfig.approvedStatus = 'A' : this.ruleConfig.approvedStatus);\r\n          this.ruleConfig.recordStatus == 'OPEN'? this.ruleConfig.recordStatus = 'O' : (this.ruleConfig.recordStatus == 'CLOSED'? this.ruleConfig.recordStatus = 'C' : this.ruleConfig.recordStatus);\r\n          console.log(this.ruleConfig);\r\n          this.ruleService.editRuleConfig(operation, this.ruleConfig, this.currentUser).subscribe(authResp => {\r\n            console.log(authResp);\r\n            if (authResp) {\r\n              this.ruleConfig = authResp;\r\n              Swal.fire(`Record is ${message}`);\r\n            }\r\n          }, (err) => {\r\n            Swal.fire({ text: `Failed To ${message}` });\r\n          })\r\n        }\r\n      }\r\n    }))\r\n  }\r\n\r\n  editValues(){\r\n    this.hideSubmit=true;\r\n    this.submit = true;\r\n    this.editFlag=true;\r\n    this.ruleForm.enable();\r\n  }\r\n\r\n  deleteRule() {\r\n    Swal.fire(\r\n      {\r\n        text: 'You are trying to delete record. ' + ' Do you want to proceed?',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3e54b8',\r\n        cancelButtonColor: '#d33',\r\n        cancelButtonText: 'NO',\r\n        confirmButtonText: 'YES', 'icon': 'info', iconColor: \"#d33\"\r\n      }\r\n    ).then((result => {\r\n      console.log(\"this is reopen \", result);\r\n      if (result.isConfirmed === true) {\r\n        this.ruleConfig.mdmtValidationSystemData = this.validationSystems.value;\r\n        this.ruleConfig.mdmtValidationSystemData.forEach(el => {\r\n          el.ruleId = this.ruleConfig.ruleId;\r\n        })\r\n        this.sysRuleDetails.value.forEach(el => { el.ruleId = this.ruleForm.get('ruleId').value });\r\n        this.ruleConfig.sysRuleDetails = this.sysRuleDetails.value;\r\n        console.log(this.ruleConfig);\r\n        this.ruleService.onDeleteRuleCongif(this.ruleConfig.sysRuleId, this.currentUser).subscribe(\r\n          (response) => {\r\n            if (response) {\r\n              this.deleted = true;\r\n              this.editBtn = true;\r\n              this.authBtn = true;\r\n              this.closeBtn = true;\r\n\r\n              Swal.fire({\r\n                text: 'Record is Deleted',\r\n                icon: 'success'\r\n              }).then((result) => {\r\n                if (result) {\r\n                  this.router.navigateByUrl('/createrule/list')\r\n                }\r\n              });\r\n\r\n            }\r\n            else {\r\n              Swal.fire(\"Failed to delete the reocrd\");\r\n            }\r\n          });\r\n      }\r\n    }))\r\n  }\r\n\r\n  ruleIdInvalidOrNot(e: any) {\r\n    console.log(e);\r\n    var regexp = /^[a-zA-Z0-9-_]+$/;\r\n    console.log(this.ruleIdInvalid);\r\n    if (e) {\r\n      if (e.search(regexp) === -1) {\r\n        this.ruleIdInvalid = true;\r\n        console.log(\"1\" + \" \" +this.ruleIdInvalid);\r\n      }\r\n      else {\r\n        this.ruleIdInvalid = false;\r\n        console.log(\"2\" + \" \" +this.ruleIdInvalid);\r\n      }\r\n    }\r\n  }\r\n\r\n  next() {\r\n    this.showRuleValidation = !this.showRuleValidation;\r\n    if(this.sysRuleDetails.length == 0){\r\n      this.addSysRuleDetails();\r\n    }\r\n\r\n    if(this.ruleForm.value.validationSystems.length > 0){\r\n       for (let i = 0; i < this.ruleForm.value.validationSystems.length; i++){\r\n          if (this.ruleForm.value.validationSystems[i].validationSystem == \"\" || this.ruleForm.value.validationSystems[i].validationSystem == ''){\r\n            //  this.ruleForm.value.validationSystems.removeAt(i);\r\n            this.validationSystems.removeAt(i);\r\n          }\r\n       }\r\n    }\r\n    console.log(\"RuleForm value\",this.ruleForm.value);\r\n  }\r\n\r\n  onSubmit(){\r\n    this.ruleConfig.mdmtValidationSystemData = this.validationSystems.value;\r\n    this.ruleConfig.mdmtValidationSystemData.forEach(el => {\r\n      el.ruleId = this.ruleForm.get('ruleId').value;\r\n    })\r\n    this.sysRuleDetails.value.forEach(el => { el.ruleId = this.ruleForm.get('ruleId').value });\r\n    this.ruleConfig.sysRuleDetails = this.sysRuleDetails.value;\r\n    this.ruleConfig.ruleId = this.ruleForm.get('ruleId').value;\r\n    this.ruleConfig.ruleName = this.ruleForm.get('ruleName').value;\r\n    if(this.ruleIdAfterSave){\r\n      this.ruleConfig.approvedEver == 'NO'? this.ruleConfig.approvedEver = 'N' : this.ruleConfig.approvedEver;\r\n      this.ruleConfig.recordStatus == 'OPEN'? this.ruleConfig.recordStatus = 'O' : this.ruleConfig.recordStatus;\r\n      this.ruleConfig.approvedStatus == 'UNAUTHORIZED'? this.ruleConfig.approvedStatus = 'U' : this.ruleConfig.approvedStatus;\r\n      this.ruleService.editRuleConfig(\"update\",this.ruleConfig, this.currentUser).subscribe((data) => {\r\n        if (data) {\r\n          console.log(data);\r\n          this.ruleConfig = data;\r\n          this.ruleIdAfterSave = data.ruleId;\r\n          this.ruleForm.get('sysRuleDetails').setValue(data?.sysRuleDetails);\r\n          this.ruleForm.get('validationSystems').setValue(data?.mdmtValidationSystemData);\r\n          Swal.fire({ text: 'Record is Updated.',icon:'success' });\r\n          this.submit=false;\r\n          this.formTouched=!this.ruleForm.touched;\r\n          this.ruleForm.disable();\r\n          this.auditShowStatus = true;\r\n          this.editFlag=false;\r\n          this.auditLog();\r\n        }\r\n      }, err => {\r\n        Swal.fire({ text: 'Failed To update the Record',icon:'error' });\r\n      });\r\n    }\r\n    else{\r\n      this.ruleService.saveRuleconfig(this.ruleConfig, this.currentUser).subscribe((data) => {\r\n        if (data) {\r\n          this.ruleConfig = data;\r\n          this.ruleIdAfterSave = data.ruleId;\r\n          this.ruleForm.get('sysRuleDetails').setValue(data.sysRuleDetails);\r\n          this.ruleForm.get('validationSystems').setValue(data.mdmtValidationSystemData);\r\n          Swal.fire({ text: 'Record is Created.',icon:'success' });\r\n          this.formTouched=!this.ruleForm.touched;\r\n          this.submit=false;\r\n          this.ruleForm.disable();\r\n          this.auditShowStatus = true;\r\n          this.editFlag=false;\r\n          this.auditLog();\r\n        }\r\n      }, err => {\r\n        Swal.fire({ text: 'Failed To Save the Record',icon:'error' });\r\n      });\r\n    }\r\n\r\n\r\n  }\r\n\r\n\r\n  auditLog() {\r\n    if (this.ruleConfig.approvedStatus === 'U') {\r\n      this.ruleConfig.approvedStatus = 'UNAUTHORIZED'\r\n    }\r\n    if (this.ruleConfig.approvedStatus === 'A') {\r\n      this.ruleConfig.approvedStatus = 'AUTHORIZED'\r\n    }\r\n    if (this.ruleConfig.recordStatus === 'O') {\r\n      this.ruleConfig.recordStatus = 'OPEN'\r\n    }\r\n    if (this.ruleConfig.recordStatus === 'C') {\r\n      this.ruleConfig.recordStatus = 'CLOSE'\r\n    }\r\n    if (this.ruleConfig.approvedEver === 'N') {\r\n      this.ruleConfig.approvedEver = 'NO'\r\n    }\r\n    if (this.ruleConfig.approvedEver === 'Y') {\r\n      this.ruleConfig.approvedEver = 'YES'\r\n    }\r\n  }\r\n  Previous() {\r\n    this.showRuleValidation = !this.showRuleValidation;\r\n    console.log(\"Rule form value\",this.ruleForm.value);\r\n  }\r\n\r\n  openPopUp() {\r\n    $('.ddTrigger').click(function () {\r\n      $('.ddParent').removeClass('actDD');\r\n      $(this).parents('li').siblings().find('.ddParent').removeClass('actDD');\r\n      $(this).parents('.ddParent').toggleClass('actDD');\r\n      $(this).removeClass('actUnread');\r\n    })\r\n  }\r\n\r\n  closeAll() {\r\n    $(document).on(\"click\", function (event: any) {\r\n      var $trigger = $(\".ddParent\");\r\n      if ($trigger !== event.target && !$trigger.has(event.target).length) {\r\n        $(\".ddParent\").removeClass(\"actDD\");\r\n      }\r\n    });\r\n  }\r\n\r\n  close() {\r\n    $('.ddCloseTrigger').click(function () {\r\n      $(\".ddParent\").removeClass(\"actDD\");\r\n    });\r\n  }  \r\n  \r\n  \r\n  // try(value) {\r\n  //   console.log(value);\r\n  //   if (this.tempArrayList.find(item=>item==value)) {\r\n  //     return true;\r\n  //   }\r\n  //   else {\r\n  //     return false;\r\n  //   }\r\n  // }\r\n\r\n  try2(value, col) {\r\n    for(let row = 0; row < this.tempArrayList2.length; row++) {\r\n      if(this.tempArrayList2[row][col] === value) return true;\r\n    }\r\n    return false;\r\n  }\r\n  \r\n \r\n  \r\n  // try(option) {\r\n  //   console.log(option);\r\n  //   this.desSystems.includes(option);\r\n    \r\n  //   // this.desSystems.push(event.target.value);\r\n  //   console.log(this.desSystems);\r\n  //   // return this.desSystems\r\n    \r\n  // }\r\n  try(value) {\r\n    if (this.tempArrayList.find(item=>item==value)) {\r\n      return true;\r\n    }\r\n    else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  onselectOfFieldNo(event, i){\r\n    console.log(event.target.value);\r\n    // this.sourseSys = event.target.value;\r\n    console.log(this.tempArrayList[i]);\r\n    if(this.tempArrayList[i]){\r\n      this.tempArrayList[i] = event.target.value;\r\n    }\r\n    else{\r\n      this.tempArrayList.push(event.target.value);\r\n    }\r\n    console.log( this.tempArrayList);\r\n  }\r\n\r\n  onselectOfFieldNo2(event, row, col){\r\n    if(!this.tempArrayList2[row]) this.tempArrayList2[row] = [];\r\n    this.tempArrayList2[row][col] = event.target.value;\r\n  }\r\n}\r\n\r\nexport class RuleConfig {\r\n  id: any;\r\n  sysRuleId: any;\r\n  ruleId: any;\r\n  ruleName: any;\r\n  sourceTranslationId: any;\r\n  targetTranslationId: any;\r\n  validationSystems: any;\r\n  creatorId: any;\r\n  createdTime: any;\r\n  approverId: any;\r\n  approvedTime: any;\r\n  versionNo: any;\r\n  approvedStatus: string;\r\n  approvedEver: string;\r\n  recordStatus: string;\r\n  mdmtValidationSystemData: Array<MultipleValidation>;\r\n  sysRuleDetails: Array<RuleValidation>;\r\n}\r\n\r\nexport class RuleValidation {\r\n  id: any;\r\n  ruleId: any;\r\n  messageKey: any;\r\n  validationMethod: any;\r\n  validationDetail: any;\r\n}\r\nexport class RuleDto {\r\n  msgRule: RuleConfig;\r\n  msgValidation: Array<RuleValidation>;\r\n}\r\nexport class MultipleValidation {\r\n  validationSystem: any;\r\n  messageType: any;\r\n  messageKey: any;\r\n  service: any;\r\n  operation: any;\r\n  id: any;\r\n  ruleId: any;\r\n}","<div class=\"pageContentMain\">\r\n    <div class=\"pageTitleCol\">\r\n      <h2 class=\"pageTitle\">Create Rule</h2>\r\n    </div>\r\n    <div class=\"dbCardStyle\">\r\n      <div class=\"row g-3 pb-3 justify-content-end\">\r\n        <div class=\"col-auto\" *ngIf=\"roleCodes.new\">\r\n          <a [routerLink]=\"['/createrule/create']\" [routerLinkActive]=\"['active']\" class=\"btn smBtn minWdSmBtn btnPrimary\">{{roleCodes.new.labelDescription}}</a>\r\n        </div>\r\n        <div class=\"col-auto\">\r\n          <a [routerLink]=\"['/dashboard']\" class=\"btn smBtn minWdSmBtn btnSecondary\">Exit</a>\r\n        </div>\r\n      </div>\r\n      <div class=\"table-responsive\">\r\n      <table datatable id=\"dbTable1\" [dtOptions]=\"dtOptions\"  class=\"dataTable table tableStyle  nowrap vAlignMdl\" style=\"width:100%\">\r\n        <thead>\r\n          <tr>\r\n            <th>Rule Id</th>\r\n            <th>Rule Name</th>\r\n            <th>Auth Status</th>\r\n            <th>Record Status</th>\r\n            <th>Date</th>\r\n            <th>Action</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody *ngIf=\"rulesData?.length != 0\">\r\n          <tr *ngFor=\"let data of rulesData\">\r\n            <td><a style=\"cursor: pointer;\" class=\"primaryColor\" (click)=\"editRule(data)\">\r\n              {{data.ruleId}}</a>\r\n            </td>\r\n            <td> {{ data.ruleName }}</td>\r\n            <td>{{ data.approvedStatus}}</td>\r\n            <td>{{ data.recordStatus }}</td>\r\n            <td>{{ data.createdTime | date:'medium' }}</td>\r\n            <td>\r\n              <button  class=\"btn\" style=\"color: red\" title=\"Authorize\" [disabled]=\"!(data.approvedStatus== 'U' || data.approvedStatus== 'UNAUTHORIZED' ||data.approvedStatus == 'Unauthorized')\" (click)=\"auth(data)\">\r\n                  \r\n                <img class=\"summaryIcon\" src=\"assets/images/authorize.svg\" alt=\"Authorize\">\r\n                </button>\r\n              <button class=\"btn\" style=\"color: red\" title=\"Close\" *ngIf=\"(data.recordStatus== 'O' || data.recordStatus== 'Open' || data.recordStatus== 'OPEN') && (data.approvedEver== 'Y' || data.approvedEver== 'YES')\" (click)=\"close(data)\">\r\n                \r\n                <img class=\"summaryIcon\" src=\"assets/images/CROSS1.svg\"   alt=\"...\">\r\n                </button> \r\n               <button class=\"btn\" style=\"color: red\" title=\"Reopen\" *ngIf=\"(data.recordStatus == 'CLOSED' || data.recordStatus == 'Close'||data.recordStatus=='c'||data.recordStatus=='C') && (data.approvedEver == 'YES' || data.approvedEver == 'Y')\" (click)=\"open(data)\">\r\n                \r\n                <img class=\"summaryIcon\" src=\"assets/images/open.svg\"  alt=\"...\">\r\n                </button>\r\n                <button class=\"btn\" style=\"color: red\" title=\"Delete\" *ngIf=\"data.approvedEver== 'N' || data.approvedEver== 'NO'\" (click)=\"delete(data)\">\r\n                   \r\n                  <img class=\"summaryIcon\" src=\"assets/images/delete.svg\" alt=\"...\">\r\n                </button>\r\n                \r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n        <tbody *ngIf=\"rulesData?.length == 0\">\r\n          <tr>\r\n           <!-- <td colspan=\"3\" class=\"no-data-available\">No data!</td> -->\r\n          </tr>\r\n        </tbody> \r\n      </table>\r\n    </div>\r\n\r\n      <ng-container *ngIf=\"isLoading\">\r\n        <div class=\"loading-page-center\">\r\n          <span class=\"indicator-progress\">Please wait...\r\n            <span class=\"spinner-border spinner-border-sm align-middle ms-2\"></span></span>\r\n        </div>\r\n      </ng-container>\r\n    </div>\r\n\r\n\r\n</div>\r\n \r\n","import { HttpClient } from '@angular/common/http';\r\nimport { ChangeDetectorRef, Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Subject } from 'rxjs';\r\nimport { AppConstants } from 'src/app/shared/config/app.constant';\r\nimport { permissionsLabels } from 'src/app/shared/models/fmosNewRolePermissions';\r\nimport { AddSystemService } from 'src/app/shared/services/add-system.service';\r\nimport { RoleService } from 'src/app/shared/services/role.service';\r\nimport { RuleService } from 'src/app/shared/services/rule.service';\r\nimport { ToastService } from 'src/app/shared/services/toast.service';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'npr-rule-list',\r\n  templateUrl: './rule-list.component.html',\r\n  styleUrls: ['./rule-list.component.scss']\r\n})\r\nexport class RuleListComponent implements OnInit {\r\n  rulesData: any = [];\r\n  dtTrigger: any = new Subject();\r\n  dtOptions: DataTables.Settings = {};\r\n  isLoading:boolean = false;\r\n  roleCodes = new permissionsLabels();\r\n  currentUser: string;\r\n  ruleDto = new RuleDto();\r\n  ruleConfig = new RuleConfig();\r\n  validationSystems: any;\r\n  sysRuleDetails: any;\r\n  ruleForm: any;\r\n  closeBtn: boolean;\r\n  authBtn: boolean;\r\n  editBtn: boolean;\r\n  deleted: boolean;\r\n  arrRuleValidation: any;\r\n  multipleValidation: MultipleValidation[];\r\n  authBtnHide: boolean;\r\n  reopenBtn: boolean;\r\n  authorizeDone: boolean;\r\n  statusArr: String[] = ['Authorized', 'Unauthorized', 'Open', 'Close'];\r\n  totalPages: any;\r\n  totalRecords: any;\r\n  API_URL = AppConstants.baseURL;\r\n  constructor(private ruleService: RuleService,private roleService:RoleService,\r\n              private toastService: ToastService,\r\n              private router:Router,\r\n              private addSystem:AddSystemService,\r\n              private cdr:ChangeDetectorRef,\r\n              private http: HttpClient) { }\r\n\r\n  ngOnInit(): void {\r\n    this.dtOptions = {\r\n      pagingType: 'full_numbers',\r\n      pageLength : 5,\r\n      serverSide: true,\r\n      columnDefs: [ { type: 'date', 'targets': [4] } ],\r\n      order: [[4, 'desc']],\r\n      // processing: true,\r\n      lengthMenu: [\r\n        [5, 10, 20, 30,-1],\r\n        [5, 10, 20, 30,\"ALL\"],\r\n      ],\r\n      // columnDefs: [ { type: 'date', 'targets': [5] } ],\r\n      // order: [[5, 'desc']],\r\n      ajax: (dataTablesParameters: any, callback) => {\r\n        \r\n        dataTablesParameters.minNumber = dataTablesParameters.start + 1;\r\n        dataTablesParameters.maxNumber =\r\n          dataTablesParameters.start + dataTablesParameters.length;\r\n        console.log(\r\n          dataTablesParameters.minNumber,\r\n          dataTablesParameters.maxNumber\r\n        );\r\n        const pageNo = Math.floor(dataTablesParameters.minNumber / dataTablesParameters.length);\r\n        const pageSize = dataTablesParameters.length;\r\n        const search=dataTablesParameters.search.value\r\n        this.http.get<any>(`${this.API_URL}`+`/ruleConfig/getRuleConfigSummary?pageNo=${pageNo}&pageSize=${pageSize}&search=${search}`)\r\n          .subscribe(resp => {\r\n            ;\r\n            console.log(resp);\r\n            for (let item of resp.result) {\r\n              item.recordStatus = this.statusArr.find((i) =>\r\n                i.startsWith(item.recordStatus)\r\n              );\r\n              item.approvedStatus = this.statusArr.find((i)=>\r\n              i.startsWith(item.approvedStatus)\r\n              );\r\n            }\r\n            \r\n            this.totalPages = resp.totalNoOfPages;\r\n            this.totalRecords = resp.totalRecords;\r\n            this.rulesData = resp.result;\r\n            this.isLoading = false;\r\n            this.cdr.markForCheck();\r\n\r\n            callback({\r\n              recordsTotal: resp.totalRecords,\r\n              recordsFiltered: resp.totalRecords,\r\n              data: [],\r\n            });\r\n          });\r\n      },\r\n    };\r\n    this.currentUser = localStorage.getItem('userFromLogin');\r\n\r\n    // this.fetchRules();\r\n    this.roleService.fetchScreenPermissions('Create Rule');\r\n    this.roleService.screenLabelList.subscribe(message => this.roleCodes = message);\r\n    console.log(this.roleCodes);\r\n  }\r\n\r\n  fetchRules() {\r\n    this.isLoading = true;\r\n    this.ruleService.fetchingRules()\r\n      .subscribe((resp: any) => {\r\n        console.log(resp);\r\n        // this.toastService.successMessage('Data Fetched Successfully!.', '');\r\n        for (let data of resp.result) {\r\n          data.approvedStatus = this.statusArr.find((i) =>\r\n            i.startsWith(data.approvedStatus)\r\n          );\r\n  \r\n          data.recordStatus = this.statusArr.find((i) =>\r\n            i.startsWith(data.recordStatus)\r\n          );\r\n        }\r\n\r\n        this.rulesData = resp.result;\r\n        this.isLoading = false;\r\n        this.cdr.markForCheck();\r\n        \r\n        this.dtTrigger.next();\r\n      }, (err: any) => {\r\n        console.error(\"Error!\");\r\n        // this.toastService.errorMessage('Failed to Fetch Data!.', '');\r\n      })\r\n  }\r\n\r\n  editRule(row) {\r\n    console.log(row);\r\n    this.router.navigate([\"/createrule/edit\", row.ruleId])\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    // Do not forget to unsubscribe the event\r\n    this.dtTrigger.unsubscribe();\r\n  }\r\n  close(data){\r\n    console.log(data);\r\n    this.ruleConfig = data;\r\n\r\n    this.arrRuleValidation = [data];\r\n    this.multipleValidation = [];\r\n    Swal.fire(\r\n      {\r\n        //text: 'Unable to process' + 'Error ' + this.responseforfileupload.errorMessage + 'Do you want to Proceed??',\r\n        text: 'You are trying to close record. ' + ' Do you want to proceed?',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3e54b8',\r\n        cancelButtonColor: '#d33',\r\n        // confirmButtonText: 'PROCEED.'\r\n        cancelButtonText: 'NO',\r\n        confirmButtonText: 'YES', 'icon': 'info', iconColor: \"#d33\"\r\n      }\r\n    ).then((result => {\r\n      console.log(\"this is reopen \", result);\r\n      console.log(this.multipleValidation);\r\n      console.log(this.arrRuleValidation);\r\n      console.log(this.ruleConfig);\r\n      console.log(this.currentUser);\r\n      \r\n      if (result.isConfirmed === true) {\r\n        this.ruleService.editRuleConfig(\"close\", data, this.currentUser).subscribe(closeResp => {\r\n          console.log(closeResp);\r\n          \r\n          if (closeResp) {\r\n            this.ruleConfig = closeResp;\r\n            this.editBtn = true;\r\n            this.authBtn = true;\r\n            this.deleted = false;\r\n            this.reopenBtn = false;\r\n            Swal.fire({ text: \"Record is Closed\" }).then(() => window.location.reload());\r\n          }\r\n        }, err => {\r\n          Swal.fire({ text: \"Failed to close the Record\" });\r\n        })\r\n      }\r\n    }))\r\n\r\n  }\r\n  open(data){\r\n    this.ruleConfig = data;\r\n\r\n    this.arrRuleValidation = [data];\r\n    this.multipleValidation = [];\r\n    \r\n    Swal.fire(\r\n      {\r\n        //text: 'Unable to process' + 'Error ' + this.responseforfileupload.errorMessage + 'Do you want to Proceed??',\r\n        text: 'You are trying to re-open record. ' + ' Do you want to proceed?',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3e54b8',\r\n        cancelButtonColor: '#d33',\r\n        // confirmButtonText: 'PROCEED.'\r\n        cancelButtonText: 'NO',\r\n        confirmButtonText: 'YES', 'icon': 'info', iconColor: \"#d33\"\r\n      }\r\n    ).then((result => {\r\n      console.log(\"this is reopen \", result);\r\n      console.log(this.multipleValidation);\r\n      console.log(this.arrRuleValidation);\r\n      console.log(this.ruleConfig);\r\n      console.log(this.currentUser);\r\n      \r\n      if (result.isConfirmed === true) {\r\n       \r\n       \r\n\r\n        this.ruleService.editRuleConfig(\"open\", data, this.currentUser).subscribe(openResp => {\r\n          console.log(openResp);\r\n          \r\n          if (openResp) {\r\n            this.ruleConfig = openResp;\r\n            this.authBtnHide = false;\r\n            this.editBtn = false;\r\n            this.authBtn = false;\r\n            Swal.fire({ text: \"Record is Reopened\" }).then(() => window.location.reload());\r\n          }\r\n        }, err => {\r\n          Swal.fire({ text: \"Failed to open the Record\" });\r\n        })\r\n      }\r\n    }))\r\n\r\n  }\r\n  delete(data){\r\n    console.log(data);\r\n    \r\n     this.ruleConfig = data;\r\n\r\n     this.arrRuleValidation = [data];\r\n     this.multipleValidation = [];\r\n     \r\n    \r\n    Swal.fire(\r\n      {\r\n        //text: 'Unable to process' + 'Error ' + this.responseforfileupload.errorMessage + 'Do you want to Proceed??',\r\n        text: 'You are trying to delete record. ' + ' Do you want to proceed?',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3e54b8',\r\n        cancelButtonColor: '#d33',\r\n        // confirmButtonText: 'PROCEED.'\r\n        cancelButtonText: 'NO',\r\n        confirmButtonText: 'YES', 'icon': 'info', iconColor: \"#d33\"\r\n      }\r\n    ).then((result => {\r\n      console.log(\"this is reopen \", result);\r\n      if (result.isConfirmed === true) {\r\n        this.ruleConfig.mdmtValidationSystemData = this.multipleValidation;\r\n        this.ruleConfig.mdmtValidationSystemData.forEach(el => {\r\n          \r\n          \r\n          el.ruleId = this.ruleConfig.ruleId;\r\n        });\r\n       \r\n        \r\n        this.arrRuleValidation.forEach(el => { el.ruleId = this.ruleConfig.ruleId });\r\n        console.log(this.arrRuleValidation);\r\n        this.ruleConfig.sysRuleDetails = this.arrRuleValidation;\r\n        console.log(this.ruleConfig);\r\n        this.ruleService.onDeleteRuleCongif(this.ruleConfig.sysRuleId, this.currentUser).subscribe(\r\n          (response) => {\r\n            if (response) {\r\n              this.deleted = true;\r\n              this.editBtn = true;\r\n              this.authBtn = true;\r\n              this.closeBtn = true;\r\n\r\n              Swal.fire({\r\n                text: 'Record is Deleted',\r\n                icon: 'success'\r\n              }).then(() => window.location.reload());\r\n\r\n            }\r\n            else {\r\n              Swal.fire(\"Failed to delete the reocrd\");\r\n            }\r\n          });\r\n      }\r\n    }))\r\n\r\n  }\r\n\r\n  auth(data){\r\n    this.ruleConfig = data;\r\n    console.log(data);\r\n    \r\n    console.log(this.ruleConfig.creatorId);\r\n\r\n\r\n     this.arrRuleValidation = [data];\r\n     this.multipleValidation = [];\r\n    console.log(this.currentUser)\r\n    Swal.fire(\r\n      {\r\n        //text: 'Unable to process' + 'Error ' + this.responseforfileupload.errorMessage + 'Do you want to Proceed??',\r\n        text: 'You are trying to Authorize record. ' + ' Do you want to proceed?',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        // confirmButtonText: 'PROCEED.'\r\n        cancelButtonText: 'NO',\r\n        confirmButtonText: 'YES', 'icon': 'info'\r\n      }\r\n    ).then((result => {\r\n      console.log(\"this is reopen \", result);\r\n      if (result.isConfirmed === true) {\r\n        if (this.ruleConfig.creatorId == this.currentUser) {\r\n          Swal.fire({ text: \"Maker cannot authorize the record!\" });\r\n        }\r\n        else {\r\n          // this.ruleConfig.mdmtValidationSystemData = this.multipleValidation;\r\n          // this.ruleConfig.mdmtValidationSystemData.forEach(el => {\r\n          //   el.ruleId = this.ruleConfig.ruleId;\r\n          // })\r\n          // // console.log(this.ruleConfig);\r\n          // this.arrRuleValidation.forEach(el => { el.ruleId = this.ruleConfig.ruleId });\r\n          // console.log(this.ruleConfig);\r\n          // this.ruleConfig.sysRuleDetails = this.arrRuleValidation;\r\n          // this.ruleConfig.approverId= this.currentUser;\r\n          // this.ruleConfig.approvedEver == 'NO'? this.ruleConfig.approvedEver = 'N' : (this.ruleConfig.approvedEver == 'YES'? this.ruleConfig.approvedEver = 'Y' : this.ruleConfig.approvedEver);\r\n          // this.ruleConfig.approvedStatus == 'UNAUTHORIZED'? this.ruleConfig.approvedStatus = 'U' : (this.ruleConfig.approvedStatus == 'AUTHORIZED'? this.ruleConfig.approvedStatus = 'A' : this.ruleConfig.approvedStatus);\r\n          // this.ruleConfig.recordStatus == \"OPEN\" ? this.ruleConfig.recordStatus = 'O' : (this.ruleConfig.recordStatus == 'CLOSE'? this.ruleConfig.recordStatus = 'C' : this.ruleConfig.recordStatus);\r\n         \r\n      if (this.ruleConfig.approvedStatus === \"Unauthorized\") {\r\n        this.ruleConfig.approvedStatus = 'U'\r\n      }\r\n      if (this.ruleConfig.approvedStatus === 'Authorized') {\r\n        this.ruleConfig.approvedStatus = 'A'\r\n      }\r\n      if (this.ruleConfig.recordStatus === 'Open') {\r\n        this.ruleConfig.recordStatus = 'O'\r\n      }\r\n      if (this.ruleConfig.recordStatus === 'Close') {\r\n        this.ruleConfig.recordStatus = 'C'\r\n      }\r\n      if (this.ruleConfig.approvedEver === 'NO') {\r\n        this.ruleConfig.approvedEver = 'N'\r\n      }\r\n      if (this.ruleConfig.approvedEver === 'YES') {\r\n        this.ruleConfig.approvedEver = 'Y'\r\n      }\r\n          console.log(this.ruleConfig);\r\n          this.ruleService.editRuleConfig(\"auth\", data, this.currentUser).subscribe(authResp => {\r\n            console.log(authResp);\r\n            \r\n            if (authResp) {\r\n              this.ruleConfig = authResp;\r\n              this.authorizeDone = true;\r\n\r\n              Swal.fire({ text: \"Record is Authorized\" }).then(() => window.location.reload());\r\n            }\r\n\r\n          }, (err) => {\r\n            Swal.fire({ text: \"Failed To Authorize\" });\r\n          })\r\n        }\r\n      }\r\n    }))\r\n\r\n  }\r\n    \r\n  \r\n}\r\n\r\nexport class RuleConfig {\r\n  id: any;\r\n  sysRuleId: any;\r\n  ruleId: any;\r\n  ruleName: any;\r\n  sourceTranslationId: any;\r\n  targetTranslationId: any;\r\n  validationSystems: any;\r\n  creatorId: any;\r\n  createdTime: any;\r\n  approverId: any;\r\n  approvedTime: any;\r\n  versionNo: any;\r\n  approvedStatus: string;\r\n  approvedEver: string;\r\n  recordStatus: string;\r\n  mdmtValidationSystemData: Array<MultipleValidation>;\r\n  sysRuleDetails: Array<RuleValidation>;\r\n}\r\nexport class RuleValidation {\r\n  id: any;\r\n  ruleId: any;\r\n  validationMethod: any;\r\n  validationDetail: any;\r\n}\r\nexport class RuleDto {\r\n  msgRule: RuleConfig;\r\n  msgValidation: Array<RuleValidation>;\r\n}\r\nexport class MultipleValidation {\r\n  validationSystem: any;\r\n  messageType: any;\r\n  service: any;\r\n  operation: any;\r\n  id: any;\r\n  ruleId: any;\r\n}\r\n","import { NgModule } from \"@angular/core\";\r\nimport { RouterModule, Routes } from \"@angular/router\";\r\nimport { CanDeactivateGuard } from \"src/app/shared/guards/can-deactivate.guard\";\r\nimport { RuleDetailsComponent } from \"./rule-details/rule-details.component\";\r\nimport { RuleDetails2Component } from \"./rule-details2/rule-details2.component\";\r\nimport { RuleListComponent } from \"./rule-list/rule-list.component\";\r\nimport { AuthGuard } from \"src/app/shared/guards/auth.guard\";\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: \"list\",\r\n    component: RuleListComponent,\r\n    // canActivate: [AuthGuard],\r\n  },\r\n  {\r\n    path: \"create\",\r\n    component: RuleDetailsComponent,\r\n    // canActivate: [AuthGuard],\r\n  },\r\n  {\r\n    path: \"edit/:id\",\r\n    component: RuleDetails2Component,\r\n    // canActivate: [AuthGuard],\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class RuleRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\nimport { RuleRoutingModule } from './rule-routing.module';\r\nimport { RuleDetailsComponent } from './rule-details/rule-details.component';\r\nimport { RuleListComponent } from './rule-list/rule-list.component';\r\nimport { DataTablesModule } from 'angular-datatables';\r\nimport { RuleDetails2Component } from './rule-details2/rule-details2.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    RuleDetailsComponent,\r\n    RuleListComponent,\r\n    RuleDetails2Component\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    RuleRoutingModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    DataTablesModule,\r\n    NgSelectModule\r\n  ]\r\n})\r\nexport class RuleModule { }\r\n"]}