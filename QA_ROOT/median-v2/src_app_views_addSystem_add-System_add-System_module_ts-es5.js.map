{"version":3,"mappings":"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AACEA;;AAAIA;;AAAKA;;AACTA;;AAAGA;;AAAsBA;;AAC3BA;;AACFA;;AACFA;;AACFA;;AACFA;;AACAA;;AACEA;;AACEA;;AACEA;;AACEA;;AACEA;;AACFA;;AACFA;;AACAA;;AACEA;;AACEA;;AAAIA;;AAAgBA;;AACpBA;;AAAGA;;;;AAAoDA;;AACzDA;;AACFA;;AACFA;;AACFA;;AACFA;;AACAA;;AACEA;;AACEA;;AACEA;;AACEA;;AACEA;;AAEFA;;AACFA;;AACAA;;AACEA;;AACEA;;AAAIA;;AAAaA;;AACjBA;;AAAGA;;AAAyBA;;AAC9BA;;AACFA;;AACFA;;AACFA;;AACFA;;AACAA;;AACEA;;AACEA;;AACEA;;AACEA;;AACAA;;AACAA;;AACFA;;AACAA;;AACEA;;AACEA;;AAAIA;;AAAOA;;AACXA;;AAAGA;;AAAuBA;;AAC5BA;;AACFA;;AACFA;;AACFA;;AACFA;;AACAA;;AACEA;;AACEA;;AACEA;;AACEA;;AACEA;;AACFA;;AACFA;;AACAA;;AACEA;;AACEA;;AAAIA;;AAAkBA;;AACtBA;;AAAGA;;;;AAAqDA;;AAC1DA;;AACFA;;AACFA;;AACFA;;AACFA;;AACAA;;AACEA;;AACEA;;AACEA;;AACEA;;AACJA;;AACIA;;AACFA;;AACAA;;AACEA;;AACEA;;AAAIA;;AAAwBA;;AAC5BA;;AAAGA;;AAAyBA;;AAC9BA;;AACFA;;AACFA;;AACFA;;AACFA;;AACAA;;AACEA;;AACEA;;AACEA;;AACEA;;AACEA;;AACFA;;AACFA;;AACAA;;AACEA;;AACEA;;AAAIA;;AAAoBA;;AACxBA;;AAAGA;;AAA2BA;;AAChCA;;AACFA;;AACFA;;AACFA;;AACFA;;AACAA;;AACEA;;AACEA;;AACEA;;AACEA;;AACEA;;AACFA;;AACFA;;AACAA;;AACEA;;AACEA;;AAAIA;;AAAmBA;;AACvBA;;AAAGA;;AAAsBA;;AAC3BA;;AACFA;;AACFA;;AACFA;;AACFA;;AACFA;;AAEFA;;;;;;AAhIiBA;;AAAAA;;AAiBAA;;AAAAA;;AAkBAA;;AAAAA;;AAiBAA;;AAAAA;;AAiBAA;;AAAAA;;AAiBAA;;AAAAA;;AAiBAA;;AAAAA;;AAiBAA;;AAAAA;;;;;;AAvwCnBA;;AACEA;;AACEA;;AAAsBA;;AAAUA;;AAClCA;;AAEAA;;AAwHAA;;AA0GAA;;AAoBAA;;AAWAA;;AAaAA;;AAmMAA;;AA6oBAA;;AA8BAA;;AA+IFA;;;;;;AA3wCiEA;;AAAAA;;AAyH5DA;;AAAAA;;AAyG+BA;;AAAAA;;AAqB/BA;;AAAAA;;AAWAA;;AAAAA;;AAYwDA;;AAAAA;;AAmMxBA;;AAAAA;;AA6oBiBA;;AAAAA;;AA8B1BA;;AAAAA;;;;UClnCfE;AA+GX,qCACUC,EADV,EAEU7B,SAFV,EAGU8B,MAHV,EAIUC,WAJV,EAKUC,YALV,EAMUC,OANV,EAM6CC,GAN7C,EAMmE;AAAA;;AALzD;AACA;AACA;AACA;AACA;AACA;AAAmC;AAnH7C,oCAA8B,IAA9B;AAgBA,6BAAqB,EAArB;AAGA,iCAAyB,EAAzB;AAEA,+BAAuB,EAAvB;AACA,iCAAyB,EAAzB;AAGA,6BAAqB,EAArB;AAOA,wBAAgB,EAAhB;AAGA,sBAAgB,IAAhB;AAmBA,uBAAe,EAAf;AACA,wBAAc,EAAd;AACA,oCAA4B,EAA5B;AAEA,4BAAsB,IAAtB;AACA,+BAAyB,IAAzB;AAEA,yBAAmB,IAAnB;AAEA,+BAAuB,EAAvB;AAIA,0BAAoB,IAApB;AACA,iCAA2B,KAA3B;AACA,oCAA8B,KAA9B;AAIA,uBAAiB,IAAjB;AAMA,2BAAY,IAAIC,2FAAJ,EAAZ;AACA,uBAAe,EAAf;AAEA,2BAAmB,EAAnB;AAGA,wBAAgB,EAAhB;AAEA,8BAAwB,IAAxB;AACA,8BAAwB,IAAxB;AACA,8BAAwB,IAAxB;AACA,8BAAwB,IAAxB;AACA,8BAAwB,IAAxB;AACA,6BAAqB,EAArB;AACA,oCAA4B,EAA5B;AAIA,qCAAgC,EAAhC;AAEA,sCAA8B,EAA9B;AAEA,4BAAa,KAAb;AACA,yBAAU,IAAIC,yCAAJ,EAAV;AAMA,uBAAa,EAAb;AAQI;;;;iBACJ,oBAAQ;AAAA;;AAGN,iBAAKC,OAAL,GAAaC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAb;AACA,iBAAKjE,WAAL,GAAmBgE,YAAY,CAACC,OAAb,CAAqB,eAArB,CAAnB;AACA,iBAAKC,aAAL,GAAqB,EAArB;AACA,iBAAKC,iBAAL;AACA,iBAAKC,iBAAL,GAAyB,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,CAAzB;AACA,iBAAKC,QAAL,GAAgB,CAAC,KAAD,EAAQ,KAAR,CAAhB;AACA,iBAAKC,eAAL,GAAuB,CAAC,eAAD,EAAkB,SAAlB,EAA6B,SAA7B,EAAwC,SAAxC,CAAvB;AACA,iBAAKC,UAAL,GAAkB,eAAlB;AACA,iBAAKC,gBAAL,GAAwB,CAAC,QAAD,EAAW,QAAX,CAAxB;AACA,iBAAKC,aAAL,GAAqB,CACnB,QADmB,EAEnB,YAFmB,EAGnB,KAHmB,EAInB,KAJmB,EAKnB,eALmB,CAArB;AAOA,iBAAKC,SAAL,CAAe,IAAf;AACA,iBAAKC,OAAL,GAAe,KAAKpB,EAAL,CAAQqB,KAAR,CAAc;AAC3BC,wBAAU,EAAE,KAAKtB,EAAL,CAAQuB,KAAR,CAAc,CAAC,KAAKC,gBAAL,EAAD,CAAd;AADe,aAAd,CAAf;AAGA,iBAAKC,QAAL,GAAgB,KAAKzB,EAAL,CAAQqB,KAAR,CAAc;AAC5BC,wBAAU,EAAE,KAAKtB,EAAL,CAAQuB,KAAR,CAAc,CAAC,KAAKG,iBAAL,EAAD,CAAd;AADgB,aAAd,CAAhB;AAGA,iBAAKC,yBAAL,GAAiC,KAAK3B,EAAL,CAAQqB,KAAR,CAAc;AAC7CO,wBAAU,EAAE,KAAK5B,EAAL,CAAQuB,KAAR,CAAc,CAAC,KAAKM,iBAAL,EAAD,CAAd;AADiC,aAAd,CAAjC;AAGA,iBAAKC,wBAAL,GAAgC,KAAK9B,EAAL,CAAQqB,KAAR,CAAc;AAC5CO,wBAAU,EAAE,KAAK5B,EAAL,CAAQuB,KAAR,CAAc,CAAC,KAAKQ,gBAAL,EAAD,CAAd;AADgC,aAAd,CAAhC;;AAGA,gBAAG,KAAKvB,OAAL,IAAgB,IAAnB,EAAwB;AACtB,mBAAKrC,SAAL,CAAe6D,QAAf,CAAwB;AACtBjG,qBAAK,EAAE,KAAKyE;AADU,eAAxB;AAGD;;AACD,iBAAKrC,SAAL,CAAe8D,QAAf,GAA0BC,SAA1B,CAAoC,UAACC,IAAD,EAAS;AAC3C,kBAAIA,IAAI,CAACpG,KAAT,EAAgB;AACd,qBAAI,CAACA,KAAL,GAAaoG,IAAI,CAACpG,KAAlB;;AACA,qBAAI,CAACoC,SAAL,CAAeiE,iBAAf,GAAmCF,SAAnC,CAA6C,UAACG,QAAD,EAAa;AACxD,sBAAIA,QAAQ,CAACC,MAAb,EAAqB;AACnB,yBAAI,CAACC,gBAAL,CAAsBF,QAAQ,CAACC,MAA/B,EAAuCH,IAAI,CAACpG,KAA5C;AACD;AACF,iBAJD;AAKD,eAPD,MAOO;AACL,qBAAI,CAACyG,OAAL,GAAe,KAAf;AACD;AACF,aAXD;AAYA,iBAAKtC,WAAL,CAAiBuC,sBAAjB,CAAwC,YAAxC;AACA,iBAAKvC,WAAL,CAAiBwC,eAAjB,CAAiCR,SAAjC,CACE,UAACS,OAAD;AAAA,qBAAc,KAAI,CAACC,SAAL,GAAiBD,OAA/B;AAAA,aADF;AAGAE,sBAAU,CAAC,YAAK;AACdzF,qBAAO,CAACC,GAAR,CAAY,KAAI,CAACuF,SAAjB;AACD,aAFS,EAEP,GAFO,CAAV;AAGD;;;iBACD,mBAAUE,IAAV,EAAc;AACZ,iBAAKC,aAAL,GAAqB,KAAK/C,EAAL,CAAQqB,KAAR,CAAc;AACjC2B,yBAAW,EAAE,CAACF,IAAI,GAAGA,IAAI,CAACE,WAAR,GAAsB,EAA3B,CADoB;AAEjCC,uBAAS,EAAE,CAACH,IAAI,GAAGA,IAAI,CAACG,SAAR,GAAoB,EAAzB,CAFsB;AAGjC3F,sBAAQ,EAAE,CAACwF,IAAI,GAAGA,IAAI,CAACxF,QAAR,GAAmB,EAAxB,CAHuB;AAIjC4F,wBAAU,EAAE,CAACJ,IAAI,GAAGA,IAAI,CAACI,UAAR,GAAqB,EAA1B,EAA8B,CAACtE,+DAAD,CAA9B,CAJqB;AAKjCuE,wBAAU,EAAE,CAACL,IAAI,GAAGA,IAAI,CAACK,UAAR,GAAqB,EAA1B,EAA8B,CAACvE,+DAAD,CAA9B,CALqB;AAMjCwE,yBAAW,EAAE,CAACN,IAAI,GAAGA,IAAI,CAACM,WAAR,GAAsB,EAA3B,EAA+B,CAACxE,+DAAD,CAA/B,CANoB;AAOjCyE,0BAAY,EAAE,CAACP,IAAI,GAAGA,IAAI,CAACO,YAAR,GAAuB,EAA5B,EAAgC,CAACzE,+DAAD,CAAhC,CAPmB;AAQjC0E,sBAAQ,EAAE,CAACR,IAAI,GAAGA,IAAI,CAACQ,QAAR,GAAmB,EAAxB,EAA4B,CAAC1E,+DAAD,CAA5B,CARuB;AASjC2E,uBAAS,EAAE,CAACT,IAAI,GAAGA,IAAI,CAACS,SAAR,GAAoB,EAAzB,CATsB;AAUjCC,uBAAS,EAAE,CAACV,IAAI,GAAGA,IAAI,CAACU,SAAR,GAAoB,EAAzB,CAVsB;AAWjCC,wBAAU,EAAE,CACVX,IAAI,GAAGA,IAAI,CAACW,UAAR,GAAqB,EADf,EAEV,CAAC7E,+DAAD,EAAsBA,iEAAqB,CAArB,CAAtB,CAFU,CAXqB;AAejC8E,sBAAQ,EAAE,CACRZ,IAAI,GAAGA,IAAI,CAACY,QAAR,GAAmB,EADf,EAER,CACE9E,+DADF,CAFQ,CAfuB;AAqBjC+E,wBAAU,EAAE,CACVb,IAAI,GAAGA,IAAI,CAACa,UAAR,GAAqB,EADf,EAEV,CAAC/E,+DAAD,EAAsBA,iEAAqB,CAArB,CAAtB,CAFU;AArBqB,aAAd,CAArB;AA0BD;;;iBACD,mBAAO;AAAA;;AACL,gBAAIgF,MAAM,GAAY,KAAtB;;AACA,gBACG,CAAC,KAAKb,aAAL,CAAmBc,OAAnB,IACA,KAAK/B,wBAAL,CAA8B+B,OAD9B,IAEA,KAAKzC,OAAL,CAAayC,OAFb,IAGA,KAAKlC,yBAAL,CAA+BkC,OAH/B,IAIA,KAAKpC,QAAL,CAAcoC,OAJf,MAKA,KAAKC,YAAL,IAAqB,IAArB,IACC,KAAKC,YAAL,IAAqB,IADtB,IAEC,KAAKC,YAAL,IAAqB,IAFtB,IAGC,KAAKC,YAAL,IAAqB,IAHtB,IAIC,KAAKC,YAAL,IAAqB,IATtB,CAAD,IASiC,KAAKC,KAAL,IAAY,OAV/C,EAWG;AACH,qBAAOC,wDAAU;AACfC,oBAAI,EAAE,sFADS;AAEfC,gCAAgB,EAAE,IAFH;AAGfC,kCAAkB,EAAE,SAHL;AAIfC,iCAAiB,EAAE,SAJJ;AAKfC,gCAAgB,EAAE,IALH;AAMfC,iCAAiB,EAAE,KANJ;AAOfC,oBAAI,EAAE;AAPS,eAAV,EAQJC,IARI,CAQC,UAACtC,MAAD,EAAW;AACjB,oBAAIA,MAAM,CAACuC,WAAP,KAAuB,IAA3B,EAAiC;AAC/BjB,wBAAM,GAAC,IAAP;;AACA,wBAAI,CAACvD,GAAL,CAASyE,YAAT;;AACG,yBAAOlB,MAAP;AACJ,iBAJD,MAKI;AACFA,wBAAM,GAAC,KAAP;;AACA,wBAAI,CAACvD,GAAL,CAASyE,YAAT;;AACA,yBAAOlB,MAAP;AACD;AAEF,eApBM,CAAP;AAqBD,aAjCC,MAkCC;AACHA,oBAAM,GAAC,IAAP;AACA,qBAAO,IAAImB,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAoB;AACrC,oBAAIrB,MAAM,KAAK,IAAf,EAAqB;AACnBA,wBAAM,GAAC,IAAP;;AACA,wBAAI,CAACvD,GAAL,CAASyE,YAAT;;AACAE,yBAAO,CAAC,IAAD,CAAP;AACD;AAEF,eAPM,CAAP;AAQA;AACG;;;iBAEH,0BAAiB7C,IAAjB,EAAuB+C,IAAvB,EAAmC;AAAA;;;;AACjC,iBAAKC,eAAL,GAAuB,IAAvB;AACA,iBAAKC,QAAL,GAAgBjD,IAAI,CAACkD,IAAL,CAAU,UAACvC,IAAD;AAAA,qBAAUA,IAAI,CAACxF,QAAL,IAAiB4H,IAA3B;AAAA,aAAV,CAAhB;AACA,iBAAK1C,OAAL,GAAe,KAAf;AACA,iBAAK8C,QAAL,GAJiC,CAKjC;;AACA,iBAAKC,QAAL,GAAgB,KAAhB;AACA,iBAAKC,kBAAL,GAA0B,KAAKJ,QAAL,CAAcxD,UAAxC;AACA,iBAAK4D,kBAAL,GAA0B,KAAKJ,QAAL,CAAcxD,UAAxC;;AACA,gBAAI,KAAKwD,QAAL,CAAc/B,YAAd,IAA+B,GAAnC,EAAwC;AACtC,mBAAKmC,kBAAL,GAA0B,KAAKA,kBAAL,CAAwBC,MAAxB,CACxB,UAAC3C,IAAD;AAAA,uBAAUA,IAAI,CAAC4C,WAAL,IAAoB,GAApB,IAA2B5C,IAAI,CAAC4C,WAAL,IAAoB,GAAzD;AAAA,eADwB,CAA1B;AAGD;;AACD,gBAAI,KAAKN,QAAL,CAAc/B,YAAd,KAA+B,GAAnC,EAAwC;AACtC,mBAAKsC,kBAAL,GAA0B,IAA1B;AACA,mBAAKH,kBAAL,GAA0B,KAAKA,kBAAL,CAAwBC,MAAxB,CACxB,UAAC3C,IAAD;AAAA,uBAAUA,IAAI,CAAC4C,WAAL,IAAoB,GAA9B;AAAA,eADwB,CAA1B;AAGD;;AAED,iBAAKE,kBAAL,CAAwB,KAAKJ,kBAAL,CAAwB,CAAxB,EAA2BK,cAAnD;;AAEA,gBAAI,KAAKL,kBAAL,CAAwB,CAAxB,EAA2BK,cAA3B,KAA8C,QAAlD,EAA4D;AAC1D,mBAAKC,WAAL;AACA,mBAAKC,MAAL,GAAc,UAAd;AACD;;AACD,gBAAI,KAAKP,kBAAL,CAAwB,CAAxB,EAA2BQ,aAA3B,KAA6C,KAAjD,EAAwD;AACtD,mBAAKC,WAAL;AACA,mBAAKF,MAAL,GAAc,KAAd;AACD;;AACD,gBAAI,KAAKP,kBAAL,CAAwB,CAAxB,EAA2BK,cAA3B,KAA8C,eAAlD,EAAmE;AACjE,mBAAKE,MAAL,GAAc,aAAd;AACD;;AACD,gBAAI,KAAKP,kBAAL,CAAwB,CAAxB,EAA2BQ,aAA3B,KAA6C,MAAjD,EAAyD;AACvD,mBAAKD,MAAL,GAAc,KAAd;AACD;;AACD,mBAAO,KAAKG,oBAAL,CAA0BC,MAA1B,GAAmC,CAA1C,EAA6C;AAC3C,mBAAKD,oBAAL,CAA0BE,QAA1B,CAAmC,KAAKF,oBAAL,CAA0BC,MAA1B,GAAmC,CAAtE;AACD;;AACD,iBAAKX,kBAAL,CAAwBa,OAAxB,CAAgC,UAACC,CAAD,EAAM;AACpC,oBAAI,CAACJ,oBAAL,CAA0BK,IAA1B,CAA+B,MAAI,CAACvG,EAAL,CAAQqB,KAAR,CAAciF,CAAd,CAA/B;AACD,aAFD,EAxCiC,CA2CjC;;AACA,iBAAK/E,KAAL,GAAa,KAAKiE,kBAAL,CAAwB,CAAxB,EAA2BlE,UAAxC;AACA,iBAAKsE,kBAAL,CAAwB,KAAKJ,kBAAL,CAAwB,CAAxB,EAA2BK,cAAnD;;AACA,mBAAO,KAAKW,OAAL,CAAaL,MAAb,GAAsB,CAA7B,EAAgC;AAC9B,mBAAKK,OAAL,CAAaJ,QAAb,CAAsB,KAAKI,OAAL,CAAaL,MAAb,GAAsB,CAA5C;AACD;;AACD,gBACE,kBAAKrE,wBAAL,CAA8B2E,KAA9B,MAAmC,IAAnC,IAAmCC,aAAnC,GAAmC,MAAnC,GAAmCA,GAAE9E,UAAF,CAAa,CAAb,CAAnC,MAAkD,IAAlD,IAAkD+E,aAAlD,GAAkD,MAAlD,GAAkDA,GAAEd,cAApD,MACA,QAFF,EAGE;AACA,mBAAKtE,KAAL,CAAW8E,OAAX,CAAmB,UAACC,CAAD,EAAM;AACvB,sBAAI,CAACE,OAAL,CAAaD,IAAb,CAAkB,MAAI,CAACvG,EAAL,CAAQqB,KAAR,CAAciF,CAAd,CAAlB;AACD,eAFD;AAGD;;AACD,gBAAI,KAAKlB,QAAL,CAAcxD,UAAd,CAAyBuE,MAAzB,GAAkC,CAAtC,EAAyC;AACvC,mBAAKS,mBAAL,GAA2B,KAAKxB,QAAL,CAAcxD,UAAzC;AACA,mBAAKgF,mBAAL,GAA2B,KAAKA,mBAAL,CAAyBnB,MAAzB,CACzB,UAAC3C,IAAD;AAAA,uBAAUA,IAAI,CAAC4C,WAAL,IAAoB,GAA9B;AAAA,eADyB,CAA3B;AAGA,mBAAKmB,mBAAL,CAAyB,KAAKD,mBAAL,CAAyB,CAAzB,EAA4Bf,cAArD;;AACA,qBAAO,KAAKiB,qBAAL,CAA2BX,MAA3B,GAAoC,CAA3C,EAA8C;AAC5C,qBAAKW,qBAAL,CAA2BV,QAA3B,CACE,KAAKU,qBAAL,CAA2BX,MAA3B,GAAoC,CADtC;AAGD;;AACD,mBAAKS,mBAAL,CAAyBP,OAAzB,CAAiC,UAACC,CAAD,EAAM;AACrC,sBAAI,CAACQ,qBAAL,CAA2BP,IAA3B,CAAgC,MAAI,CAACvG,EAAL,CAAQqB,KAAR,CAAciF,CAAd,CAAhC;AACD,eAFD,EAXuC,CAcvC;;AACA,mBAAKS,MAAL,GAAc,KAAKH,mBAAL,CAAyB,CAAzB,EAA4BtF,UAA1C;AACA,mBAAKuF,mBAAL,CAAyB,KAAKD,mBAAL,CAAyB,CAAzB,EAA4Bf,cAArD;;AACA,qBAAO,KAAKmB,QAAL,CAAcb,MAAd,GAAuB,CAA9B,EAAiC;AAC/B,qBAAKa,QAAL,CAAcZ,QAAd,CAAuB,KAAKY,QAAL,CAAcb,MAAd,GAAuB,CAA9C;AACD;;AACD,kBACE,kBAAKxE,yBAAL,CAA+B8E,KAA/B,MAAoC,IAApC,IAAoCQ,aAApC,GAAoC,MAApC,GAAoCA,GAAErF,UAAF,CAAa,CAAb,CAApC,MAAmD,IAAnD,IAAmDsF,aAAnD,GAAmD,MAAnD,GAAmDA,GAAErB,cAArD,MACA,QAFF,EAGE;AACA,qBAAKkB,MAAL,CAAYV,OAAZ,CAAoB,UAACC,CAAD,EAAM;AACxB,wBAAI,CAACU,QAAL,CAAcT,IAAd,CAAmB,MAAI,CAACvG,EAAL,CAAQqB,KAAR,CAAciF,CAAd,CAAnB;AACD,iBAFD;AAGD;AACF;;AACD,iBAAKnF,SAAL,CAAe,KAAKiE,QAApB;AACA,iBAAKE,QAAL;AACA,iBAAKlF,OAAL,CAAa+G,IAAb;AACD;;;eACD,eAAW;AACT,mBAAO,KAAK/F,OAAL,CAAa7E,GAAb,CAAiB,YAAjB,CAAP;AACD;;;eACD,eAAY;AACV,mBAAO,KAAKkF,QAAL,CAAclF,GAAd,CAAkB,YAAlB,CAAP;AACD;;;eACD,eAAwB;AACtB,mBAAO,KAAKuF,wBAAL,CAA8BvF,GAA9B,CAAkC,YAAlC,CAAP;AACD;;;eACD,eAAyB;AACvB,mBAAO,KAAKoF,yBAAL,CAA+BpF,GAA/B,CAAmC,YAAnC,CAAP;AACD;;;iBACD,4BAAgB;AACd,mBAAO,KAAKyD,EAAL,CAAQqB,KAAR,CAAc;AACnB+F,uBAAS,EAAE,CAAC,EAAD,CADQ;AAEnBC,6BAAe,EAAE,CAAC,EAAD,CAFE;AAGnBC,wBAAU,EAAE,CAAC,EAAD,CAHO;AAInBC,2BAAa,EAAE,CAAC,EAAD,CAJI;AAKnBC,wBAAU,EAAE,CAAC,EAAD,CALO;AAMnBC,0BAAY,EAAE,CAAC,EAAD,CANK;AAOnBC,8BAAgB,EAAE,CAAC,EAAD,CAPC;AAQnBC,0BAAY,EAAE,CAAC,EAAD,CARK;AASnBC,uBAAS,EAAE,CAAC,EAAD,CATQ;AAUnBC,uBAAS,EAAE,CAAC,EAAD,CAVQ;AAWnBhC,4BAAc,EAAE,CAAC,EAAD,EAAK,CAACjH,+DAAD,CAAL,CAXG;AAYnBoH,2BAAa,EAAE,CAAC,EAAD,EAAK,CAACpH,+DAAD,CAAL,CAZI;AAanB8G,yBAAW,EAAE,CAAC,EAAD;AAbM,aAAd,CAAP;AAeD;;;iBACD,6BAAiB;AACf,mBAAO,KAAK1F,EAAL,CAAQqB,KAAR,CAAc;AACnB+F,uBAAS,EAAE,CAAC,EAAD,CADQ;AAEnBC,6BAAe,EAAE,CAAC,EAAD,CAFE;AAGnBC,wBAAU,EAAE,CAAC,EAAD,CAHO;AAInBC,2BAAa,EAAE,CAAC,EAAD,CAJI;AAKnBC,wBAAU,EAAE,CAAC,EAAD,CALO;AAMnBC,0BAAY,EAAE,CAAC,EAAD,CANK;AAOnBC,8BAAgB,EAAE,CAAC,EAAD,CAPC;AAQnBC,0BAAY,EAAE,CAAC,EAAD,CARK;AASnBC,uBAAS,EAAE,CAAC,EAAD,CATQ;AAUnBC,uBAAS,EAAE,CAAC,EAAD,CAVQ;AAWnBhC,4BAAc,EAAE,CAAC,EAAD,EAAK,CAACjH,+DAAD,CAAL,CAXG;AAYnBoH,2BAAa,EAAE,CAAC,EAAD,EAAK,CAACpH,+DAAD,CAAL,CAZI;AAanB8G,yBAAW,EAAE,CAAC,EAAD;AAbM,aAAd,CAAP;AAeD;;;iBACD,4BAAgB;AACd,mBAAO,KAAK1F,EAAL,CAAQqB,KAAR,CAAc;AACnB+F,uBAAS,EAAE,CAAC,EAAD,CADQ;AAEnBU,sBAAQ,EAAE,CAAC,EAAD,EAAK,CAAClJ,+DAAD,CAAL,CAFS;AAGnBmJ,wBAAU,EAAE,CAAC,eAAD,EAAkB,CAACnJ,+DAAD,CAAlB,CAHO;AAInBoJ,uBAAS,EAAE,CAAC,EAAD,EAAK,CAACpJ,+DAAD,CAAL,CAJQ;AAKnBqJ,yBAAW,EAAE,CAAC,EAAD,EAAK,CAACrJ,+DAAD,CAAL,CALM;AAMnBsJ,0BAAY,EAAE,CAAC,EAAD,CANK;AAOnBC,wBAAU,EAAE,CAAC,EAAD,EAAK,CAACvJ,+DAAD,CAAL,CAPO;AAQnBwJ,uBAAS,EAAE,CAAC,EAAD,CARQ;AASnBC,6BAAe,EAAE,CAAC,EAAD;AATE,aAAd,CAAP;AAWD;;;iBACD,6BAAiB;AACf,mBAAO,KAAKrI,EAAL,CAAQqB,KAAR,CAAc;AACnB+F,uBAAS,EAAE,CAAC,EAAD,CADQ;AAEnBU,sBAAQ,EAAE,CAAC,EAAD,EAAK,CAAClJ,+DAAD,CAAL,CAFS;AAGnBmJ,wBAAU,EAAE,CAAC,eAAD,EAAkB,CAACnJ,+DAAD,CAAlB,CAHO;AAInBoJ,uBAAS,EAAE,CAAC,EAAD,EAAK,CAACpJ,+DAAD,CAAL,CAJQ;AAKnBqJ,yBAAW,EAAE,CAAC,EAAD,EAAK,CAACrJ,+DAAD,CAAL,CALM;AAMnBsJ,0BAAY,EAAE,CAAC,EAAD,CANK;AAOnBC,wBAAU,EAAE,CAAC,EAAD,EAAK,CAACvJ,+DAAD,CAAL,CAPO;AAQnBwJ,uBAAS,EAAE,CAAC,EAAD,CARQ;AASnBC,6BAAe,EAAE,CAAC,EAAD;AATE,aAAd,CAAP;AAWD;;;iBACD,qBAAS;AACP,iBAAKC,IAAL,GAAY,KAAZ;AACA,iBAAKC,IAAL,GAAY,IAAZ;AACA,iBAAKC,KAAL,GAAa,IAAb;AACA,iBAAKC,KAAL,GAAa,KAAb;AACD;;;iBACD,oBAAQ;AACN,gBAAI,KAAKrD,QAAL,CAAcsD,UAAd,KAA6B,MAAjC,EAAyC;AACvC,mBAAKtD,QAAL,CAAcsD,UAAd,GAA2B,GAA3B;AACD;;AACD,gBAAI,KAAKtD,QAAL,CAAcuD,cAAd,KAAiC,GAArC,EAA0C;AACxC,mBAAKvD,QAAL,CAAcuD,cAAd,GAA+B,cAA/B;AACD;;AACD,gBAAI,KAAKvD,QAAL,CAAcuD,cAAd,KAAiC,GAArC,EAA0C;AACxC,mBAAKvD,QAAL,CAAcuD,cAAd,GAA+B,YAA/B;AACD;;AACD,gBAAI,KAAKvD,QAAL,CAAcuD,cAAd,KAAiC,GAArC,EAA0C;AACxC,mBAAKvD,QAAL,CAAcuD,cAAd,GAA+B,YAA/B;AACD;;AACD,gBAAI,KAAKvD,QAAL,CAAcuD,cAAd,KAAiC,GAArC,EAA0C;AACxC,mBAAKvD,QAAL,CAAcuD,cAAd,GAA+B,cAA/B;AACD;;AACD,gBAAI,KAAKvD,QAAL,CAAcwD,YAAd,KAA+B,GAAnC,EAAwC;AACtC,mBAAKxD,QAAL,CAAcwD,YAAd,GAA6B,MAA7B;AACD;;AACD,gBAAI,KAAKxD,QAAL,CAAcwD,YAAd,KAA+B,GAAnC,EAAwC;AACtC,mBAAKxD,QAAL,CAAcwD,YAAd,GAA6B,QAA7B;AACD;;AACD,gBAAI,KAAKxD,QAAL,CAAcyD,YAAd,KAA+B,GAAnC,EAAwC;AACtC,mBAAKzD,QAAL,CAAcyD,YAAd,GAA6B,IAA7B;AACD;;AACD,gBAAI,KAAKzD,QAAL,CAAcyD,YAAd,KAA+B,GAAnC,EAAwC;AACtC,mBAAKzD,QAAL,CAAcyD,YAAd,GAA6B,KAA7B;AACD;AACF;;;iBACD,cAAKpC,KAAL,EAAU;AAAA;;AACR,gBAAIA,KAAK,KAAK,oBAAd,EAAoC;AAClCrJ,qBAAO,CAACC,GAAR,CAAY,KAAKtB,KAAjB;AACAqB,qBAAO,CAACC,GAAR,CAAY,KAAKyE,wBAAL,CAA8B2E,KAA1C;AACArJ,qBAAO,CAACC,GAAR,CAAY,KAAK0F,aAAL,CAAmB0D,KAA/B;AACA,mBAAKtI,SAAL,CACG2K,YADH,CACgB,KAAK/F,aAAL,CAAmB0D,KAAnB,CAAyBvD,UADzC,EAEGhB,SAFH,CAEa,UAACI,MAAD,EAAW;AACpBlF,uBAAO,CAACC,GAAR,CAAYiF,MAAZ;AACA,sBAAI,CAACyG,qBAAL,GAA6BzG,MAAM,CAAC0G,MAApC;AACA,sBAAI,CAACC,YAAL,GAAoB3G,MAAM,CAAC4G,QAA3B;;AACA,oBAAI,MAAI,CAACH,qBAAL,KAA+B,IAA/B,IAAuC,MAAI,CAAChN,KAAL,KAAeoN,SAA1D,EAAqE;AACnE/E,0EAAU;AAAEgF,yBAAK,EAAE,MAAI,CAACH,YAAL,GAAoB,IAA7B;AAAmCtE,wBAAI,EAAE;AAAzC,mBAAV;AACA,wBAAI,CAAC0E,GAAL,GAAW,KAAX;AAEA;AACD,iBALD,MAKO;AACL,sBAAI,MAAI,CAACtN,KAAL,KAAeoN,SAAnB,EAA8B;AAC5B,0BAAI,CAACG,mBAAL;AACD,mBAFD,MAEO;AACL,wBAAI,MAAI,CAACvG,aAAL,CAAmB0D,KAAnB,CAAyBpD,YAAzB,IAAyC,GAA7C,EAAkD;AAChD,4BAAI,CAACqC,WAAL,GAAmB,UAAnB;AACD;;AACD,wBAAI,MAAI,CAAC3C,aAAL,CAAmB0D,KAAnB,CAAyBpD,YAAzB,IAAyC,GAA7C,EAAkD;AAChD,4BAAI,CAACqC,WAAL,GAAmB,UAAnB;AACD;;AACD,0BAAI,CAAC6D,kBAAL,GAA0B,KAA1B;AACA,0BAAI,CAACC,oBAAL,GAA4B,IAA5B;AACA,0BAAI,CAACC,4BAAL,GAAoC,KAApC;AACA,0BAAI,CAACC,GAAL,GAAW,KAAX;AACA,0BAAI,CAACC,MAAL,GAAc,KAAd;AACA,0BAAI,CAACC,cAAL,GAAsB,KAAtB;AACA,0BAAI,CAACC,YAAL,GAAoB,KAApB;AACD;AACF;AACF,eA9BH;AA+BD;;AACD,gBACEpD,KAAK,KAAK,sBAAV,IACA,KAAK1D,aAAL,CAAmB0D,KAAnB,CAAyBpD,YAAzB,KAA0C,GAF5C,EAGE;AACA,kBACE,CAAC,KAAKvB,wBAAL,CAA8B2E,KAA9B,CAAoC7E,UAApC,CAA+C,CAA/C,EAAkDiE,cAAlD,KACC,QADD,IAEC,KAAK/D,wBAAL,CAA8B2E,KAA9B,CAAoC7E,UAApC,CAA+C,CAA/C,EAAkDiE,cAAlD,KACE,YAHH,IAIC,KAAK/D,wBAAL,CAA8B2E,KAA9B,CAAoC7E,UAApC,CAA+C,CAA/C,EAAkDoE,aAAlD,KACE,MALH,IAMC,KAAKlE,wBAAL,CAA8B2E,KAA9B,CAAoC7E,UAApC,CAA+C,CAA/C,EAAkDoE,aAAlD,KACE,KAPH,IAQG,KAAKlE,wBAAL,CAA8B2E,KAA9B,CAAoC7E,UAApC,CAA+C,CAA/C,EAAkDiE,cAAlD,KACA,eATJ,KAUA,KAAK9C,aAAL,CAAmB0D,KAAnB,CAAyBpD,YAAzB,IAAyC,GAX3C,EAYE;AACA,qBAAKvB,wBAAL,CAA8B2E,KAA9B,CAAoC7E,UAApC,CAA+C,CAA/C,EAAkD8D,WAAlD,GACE,KAAK3C,aAAL,CAAmB0D,KAAnB,CAAyBpD,YAD3B;AAEA,qBAAKkG,kBAAL,GAA0B,KAA1B;AACA,qBAAKC,oBAAL,GAA4B,KAA5B;AACA,qBAAKC,4BAAL,GAAoC,IAApC;AACA,qBAAKC,GAAL,GAAW,KAAX;AACA,qBAAKI,GAAL,GAAW,KAAX;AACA,qBAAKH,MAAL,GAAc,KAAd;AACA,qBAAKC,cAAL,GAAsB,KAAtB;AACA,qBAAKC,YAAL,GAAoB,KAApB;AACA,qBAAKE,SAAL,GAAiB,KAAjB;;AACA,oBACE,KAAKhO,KAAL,KAAeoN,SAAf,IACA,KAAKrH,wBAAL,CAA8B2E,KAA9B,CAAoC7E,UAApC,CAA+C,CAA/C,EAAkDiE,cAAlD,KACE,QAHJ,EAIE;AACA,uBAAKC,WAAL;AACA,uBAAKC,MAAL,GAAc,UAAd;AACD;;AACD,oBACE,KAAKhK,KAAL,KAAeoN,SAAf,IACA,KAAKrH,wBAAL,CAA8B2E,KAA9B,CAAoC7E,UAApC,CAA+C,CAA/C,EAAkDiE,cAAlD,KACE,QAHJ,EAIE;AACA,uBAAKE,MAAL,GAAc,UAAd;AACD;;AAED,oBACE,KAAKjE,wBAAL,CAA8B2E,KAA9B,CAAoC7E,UAApC,CAA+C,CAA/C,EAAkDoE,aAAlD,KACA,KAFF,EAGE;AACA,uBAAKC,WAAL;AACA,uBAAKF,MAAL,GAAc,KAAd;AACD;;AACD,oBACE,KAAKjE,wBAAL,CAA8B2E,KAA9B,CAAoC7E,UAApC,CAA+C,CAA/C,EAAkDoE,aAAlD,KACA,MAFF,EAGE;AACA5I,yBAAO,CAACC,GAAR,CAAY,aAAZ;AACA,uBAAK4I,WAAL;AACA,uBAAKF,MAAL,GAAc,KAAd;AACD;AACF;;AACD,kBACE,CAAC,KAAKjE,wBAAL,CAA8B2E,KAA9B,CAAoC7E,UAApC,CAA+C,CAA/C,EAAkDoE,aAAlD,KACC,UADD,IAEC,KAAKlE,wBAAL,CAA8B2E,KAA9B,CAAoC7E,UAApC,CAA+C,CAA/C,EAAkDoE,aAAlD,KACE,WAHJ,KAIA,KAAKjD,aAAL,CAAmB0D,KAAnB,CAAyBpD,YAAzB,IAAyC,GAL3C,EAME;AACA,qBAAKvB,wBAAL,CAA8B2E,KAA9B,CAAoC7E,UAApC,CAA+C,CAA/C,EAAkD8D,WAAlD,GACE,KAAK3C,aAAL,CAAmB0D,KAAnB,CAAyBpD,YAD3B;AAEA,qBAAKkG,kBAAL,GAA0B,KAA1B;AACA,qBAAKC,oBAAL,GAA4B,KAA5B;AACA,qBAAKC,4BAAL,GAAoC,KAApC;AACA,qBAAKC,GAAL,GAAW,KAAX;AACA,qBAAKI,GAAL,GAAW,IAAX;AACA,qBAAKH,MAAL,GAAc,KAAd;AACA,qBAAKC,cAAL,GAAsB,KAAtB;AACA,qBAAKC,YAAL,GAAoB,KAApB;AACA,qBAAKE,SAAL,GAAiB,KAAjB;AACD;;AACD,kBACE,KAAKjI,wBAAL,CAA8B2E,KAA9B,CAAoC7E,UAApC,CAA+C,CAA/C,EAAkDiE,cAAlD,KACA,eAFF,EAGE;AACA,qBAAKmE,kBAAL;AACA,qBAAKjE,MAAL,GAAY,aAAZ;AACA,qBAAKhD,aAAL,CAAmB0D,KAAnB,CAAyBpD,YAAzB;AACA,qBAAKkG,kBAAL,GAA0B,KAA1B;AACA,qBAAKC,oBAAL,GAA4B,KAA5B;AACA,qBAAKC,4BAAL,GAAoC,IAApC;AACA,qBAAKC,GAAL,GAAW,KAAX;AACA,qBAAKI,GAAL,GAAW,KAAX;AACA,qBAAKH,MAAL,GAAc,KAAd;AACA,qBAAKC,cAAL,GAAsB,KAAtB;AACA,qBAAKC,YAAL,GAAoB,KAApB;AACA,qBAAKE,SAAL,GAAiB,IAAjB;AACD;AACF;;AACD,gBACEtD,KAAK,KAAK,oBAAV,IACA,KAAK1D,aAAL,CAAmB0D,KAAnB,CAAyBpD,YAAzB,KAA0C,GAF5C,EAGE;AACA,mBAAKgG,GAAL,GAAW,IAAX;AACA,mBAAKf,IAAL,GAAY,IAAZ;AACA,mBAAK2B,KAAL,GAAa,IAAb;AACA,mBAAKC,KAAL,GAAa,KAAb;AACA,mBAAK3B,IAAL,GAAY,KAAZ;AACD;AACF;;;iBACD,8BAAkB;AAAA;;AAChB,iBAAKzG,wBAAL,CAA8B2E,KAA9B,CAAoC7E,UAApC,CAA+C,CAA/C,EAAkD8D,WAAlD,GAA8D,KAAK3C,aAAL,CAAmB0D,KAAnB,CAAyBpD,YAAvF;AACAjG,mBAAO,CAACC,GAAR,CAAY,KAAKyE,wBAAL,CAA8B2E,KAA9B,CAAoC7E,UAApC,CAA+C,CAA/C,CAAZ;AACA,iBAAKzD,SAAL,CACGgM,cADH,CAEI,KAAKrI,wBAAL,CAA8B2E,KAA9B,CAAoC7E,UAApC,CAA+C,CAA/C,EAAkDyF,eAFtD,EAGI,KAAKvF,wBAAL,CAA8B2E,KAA9B,CAAoC7E,UAApC,CAA+C,CAA/C,EAAkD2F,aAHtD,EAII,KAAKzF,wBAAL,CAA8B2E,KAA9B,CAAoC7E,UAApC,CAA+C,CAA/C,EAAkD4F,UAJtD,EAKI,KAAK1F,wBAAL,CAA8B2E,KAA9B,CAAoC7E,UAApC,CAA+C,CAA/C,EAAkD0F,UALtD,EAOGpF,SAPH,CAOa,UAACC,IAAD,EAAS;AAClB/E,qBAAO,CAACC,GAAR,CAAY,iDAAZ,EAA+D8E,IAA/D;AACA,oBAAI,CAACiI,KAAL,GAAajI,IAAb;AACD,aAVH;;AAYA,gBAAI,KAAKpG,KAAL,KAAeoN,SAAnB,EAA8B;AAC5B,mBACE,IAAIpN,KAAK,GAAG,CADd,EAEEA,KAAK,GAAG,KAAKqF,OAAL,CAAaqF,KAAb,CAAmBnF,UAAnB,CAA8B6E,MAFxC,EAGEpK,KAAK,EAHP,EAIE;AACA,oBAAMsO,aAAa,GACjB,KAAKjJ,OAAL,CAAaqF,KAAb,CAAmBnF,UAAnB,CAA8BvF,KAA9B,EAAqCoM,UAArC,CAAgDmC,KAAhD,CAAsD,GAAtD,CADF;AAEA,qBAAKlJ,OAAL,CACG7E,GADH,CACO,YADP,EAEG,UAFH,EAEeR,KAFf,EAEsBQ,GAFtB,CAE0B,YAF1B,EAGGgO,QAHH,CAGYF,aAAa,CAAC,CAAD,CAHzB;AAID;AACF;;AACD,iBAAKtE,MAAL,GAAc,aAAd;AACD;;;iBACD,+BAAmB;AAAA;;AACjB3I,mBAAO,CAACC,GAAR,CAAY,KAAKyE,wBAAL,CAA8B2E,KAA9B,CAAoC7E,UAApC,CAA+C,CAA/C,CAAZ;AACA,iBAAKzD,SAAL,CACGgM,cADH,CAEI,KAAKxI,yBAAL,CAA+B8E,KAA/B,CAAqC7E,UAArC,CAAgD,CAAhD,EAAmDyF,eAFvD,EAGI,KAAK1F,yBAAL,CAA+B8E,KAA/B,CAAqC7E,UAArC,CAAgD,CAAhD,EAAmD2F,aAHvD,EAII,KAAK5F,yBAAL,CAA+B8E,KAA/B,CAAqC7E,UAArC,CAAgD,CAAhD,EAAmD4F,UAJvD,EAKI,KAAK7F,yBAAL,CAA+B8E,KAA/B,CAAqC7E,UAArC,CAAgD,CAAhD,EAAmD0F,UALvD,EAOGpF,SAPH,CAOa,UAACC,IAAD,EAAS;AAClB/E,qBAAO,CAACC,GAAR,CAAY,iDAAZ,EAA+D8E,IAA/D;AACA,oBAAI,CAACqI,MAAL,GAAcrI,IAAd;AACD,aAVH;;AAYA,gBAAI,KAAKpG,KAAL,KAAeoN,SAAnB,EAA8B;AAC5B,mBACE,IAAIpN,KAAK,GAAG,CADd,EAEEA,KAAK,GAAG,KAAK0F,QAAL,CAAcgF,KAAd,CAAoBnF,UAApB,CAA+B6E,MAFzC,EAGEpK,KAAK,EAHP,EAIE;AACA,oBAAMsO,aAAa,GACjB,KAAK5I,QAAL,CAAcgF,KAAd,CAAoBnF,UAApB,CAA+BvF,KAA/B,EAAsCoM,UAAtC,CAAiDmC,KAAjD,CAAuD,GAAvD,CADF;AAEA,qBAAK7I,QAAL,CACGlF,GADH,CACO,YADP,EAEG,UAFH,EAEeR,KAFf,EAEsBQ,GAFtB,CAE0B,YAF1B,EAGGgO,QAHH,CAGYF,aAAa,CAAC,CAAD,CAHzB;AAID;AACF;;AACD,iBAAKtE,MAAL,GAAc,aAAd;AACD;;;iBACD,yBAAgB0E,KAAhB,EAAqB;AAAA;;AACnB,iBAAKC,kBAAL,GAA0B,IAA1B;AACA,iBAAKvM,SAAL,CACGwM,0BADH,CAEI,KAAK7I,wBAAL,CAA8B2E,KAA9B,CAAoC7E,UAApC,CAA+C,CAA/C,EAAkDyF,eAFtD,EAGI,KAAKvF,wBAAL,CAA8B2E,KAA9B,CAAoC7E,UAApC,CAA+C,CAA/C,EAAkD2F,aAHtD,EAII,KAAKzF,wBAAL,CAA8B2E,KAA9B,CAAoC7E,UAApC,CAA+C,CAA/C,EAAkD4F,UAJtD,EAKI,KAAK1F,wBAAL,CAA8B2E,KAA9B,CAAoC7E,UAApC,CAA+C,CAA/C,EAAkD0F,UALtD,EAMImD,KANJ,EAQGvI,SARH,CAQa,UAACC,IAAD,EAAS;AAClB/E,qBAAO,CAACC,GAAR,CAAY,iDAAZ,EAA+D8E,IAA/D;AACA,oBAAI,CAACyI,SAAL,GAAiBzI,IAAjB;AACD,aAXH;AAYD;;;iBACD,0BAAiBsI,KAAjB,EAAsB;AAAA;;AACpB,iBAAKI,mBAAL,GAA2B,IAA3B;AACA,iBAAK1M,SAAL,CACGwM,0BADH,CAEI,KAAKhJ,yBAAL,CAA+B8E,KAA/B,CAAqC7E,UAArC,CAAgD,CAAhD,EAAmDyF,eAFvD,EAGI,KAAK1F,yBAAL,CAA+B8E,KAA/B,CAAqC7E,UAArC,CAAgD,CAAhD,EAAmD2F,aAHvD,EAII,KAAK5F,yBAAL,CAA+B8E,KAA/B,CAAqC7E,UAArC,CAAgD,CAAhD,EAAmD4F,UAJvD,EAKI,KAAK7F,yBAAL,CAA+B8E,KAA/B,CAAqC7E,UAArC,CAAgD,CAAhD,EAAmD0F,UALvD,EAMImD,KANJ,EAQGvI,SARH,CAQa,UAACC,IAAD,EAAS;AAClB/E,qBAAO,CAACC,GAAR,CAAY,iDAAZ,EAA+D8E,IAA/D;AACA,oBAAI,CAAC2I,UAAL,GAAkB3I,IAAlB;AACD,aAXH;AAYD;;;iBACD,+BAAmB;AAAA;;AACjB,gBAAI4I,OAAO,GAAQ,EAAnB;AACCA,mBAAO,CAACrH,QAAR,GAAmB,KAAKX,aAAL,CAAmB0D,KAAnB,CAAyB/C,QAA7C,EACGqH,OAAO,CAACpH,UAAR,GAAqB,KAAKZ,aAAL,CAAmB0D,KAAnB,CAAyB9C,UADjD,EAEGoH,OAAO,CAACzH,QAAR,GAAmB,KAAKP,aAAL,CAAmB0D,KAAnB,CAAyBnD,QAF/C,EAGGyH,OAAO,CAACtH,UAAR,GAAqB,KAAKV,aAAL,CAAmB0D,KAAnB,CAAyBhD,UAHjD;AAIA,iBAAKtF,SAAL,CAAe6M,YAAf,CAA4BD,OAA5B,EAAqC7I,SAArC,CACE,UAACC,IAAD,EAAS;AACP,kBAAIA,IAAI,IAAI,IAAZ,EAAkB;AAChB,oBAAI,MAAI,CAACY,aAAL,CAAmB0D,KAAnB,CAAyBpD,YAAzB,IAAyC,GAA7C,EAAkD;AAChD,wBAAI,CAACqC,WAAL,GAAmB,UAAnB;AACD;;AACD,oBAAI,MAAI,CAAC3C,aAAL,CAAmB0D,KAAnB,CAAyBpD,YAAzB,IAAyC,GAA7C,EAAkD;AAChD,wBAAI,CAACqC,WAAL,GAAmB,UAAnB;AACD;;AACD,sBAAI,CAAC6D,kBAAL,GAA0B,KAA1B;AACA,sBAAI,CAACC,oBAAL,GAA4B,IAA5B;AACA,sBAAI,CAACC,4BAAL,GAAoC,KAApC;AACA,sBAAI,CAACC,GAAL,GAAW,KAAX;AACA,sBAAI,CAACC,MAAL,GAAc,KAAd;AACA,sBAAI,CAACC,cAAL,GAAsB,KAAtB;AACA,sBAAI,CAACC,YAAL,GAAoB,KAApB;AACA,sBAAI,CAACE,SAAL,GAAiB,KAAjB;AACD;AACF,aAlBH,EAmBE,UAACkB,KAAD,EAAU;AACR7N,qBAAO,CAACC,GAAR,CAAY4N,KAAZ;AACA7G,sEAAU;AAAEgF,qBAAK,EAAE6B,KAAK,CAACA,KAAN,CAAYtI,OAAZ,GAAsB,IAA/B;AAAqCgC,oBAAI,EAAE;AAA3C,eAAV;AACA,oBAAI,CAAC0E,GAAL,GAAW,KAAX;AACA;AACD,aAxBH;AA0BD;;;iBACD,iBAAK;AACH,gBACG,KAAKtN,KAAL,KAAeoN,SAAf,IACC,KAAKrH,wBAAL,CAA8B2E,KAA9B,CAAoC7E,UAApC,CAA+C,CAA/C,EAAkDiE,cAAlD,KACE,QAFJ,IAGA,KAAK/D,wBAAL,CAA8B2E,KAA9B,CAAoC7E,UAApC,CAA+C,CAA/C,EAAkDoE,aAAlD,KAAoE,MAJtE,EAKE;AACA,mBAAKF,WAAL;AACA,mBAAKC,MAAL,GAAc,UAAd;AACD;;AACD,gBACE,KAAKjE,wBAAL,CAA8B2E,KAA9B,CAAoC7E,UAApC,CAA+C,CAA/C,EAAkDoE,aAAlD,KAAoE,KADtE,EAEE;AACA,mBAAKC,WAAL;AACA,mBAAKF,MAAL,GAAc,KAAd;AACD;;AACD,gBACE,KAAKjE,wBAAL,CAA8B2E,KAA9B,CAAoC7E,UAApC,CAA+C,CAA/C,EAAkDiE,cAAlD,KACA,eAFF,EAGE;AACA;AACA,mBAAKE,MAAL,GAAc,aAAd;AACA,mBAAKmF,UAAL,GAAkB,IAAlB;AACA,mBAAKlB,kBAAL;AACD;;AACD,iBAAK1B,IAAL,GAAY,IAAZ;AACA,iBAAK2B,KAAL,GAAa,KAAb;AACA,iBAAKC,KAAL,GAAa,IAAb;AACA,iBAAK3B,IAAL,GAAY,KAAZ;AACD;;;iBACD,iBAAK;AACH,gBACE,KAAK5G,yBAAL,CAA+B8E,KAA/B,CAAqC7E,UAArC,CAAgD,CAAhD,EAAmDiE,cAAnD,KACE,QADF,IAEA,KAAK/D,wBAAL,CAA8B2E,KAA9B,CAAoC7E,UAApC,CAA+C,CAA/C,EAAkDoE,aAAlD,KAAoE,MAHtE,EAIE;AACA,mBAAKmF,YAAL;AACA,mBAAKC,MAAL,GAAc,UAAd;AACD;;AACD,gBACE,KAAKzJ,yBAAL,CAA+B8E,KAA/B,CAAqC7E,UAArC,CAAgD,CAAhD,EAAmDoE,aAAnD,KAAqE,KADvE,EAEE;AACA,mBAAKqF,YAAL;AACA,mBAAKD,MAAL,GAAc,KAAd;AACD;;AACD,gBACE,KAAKzJ,yBAAL,CAA+B8E,KAA/B,CAAqC7E,UAArC,CAAgD,CAAhD,EAAmDiE,cAAnD,KACA,eAFF,EAGE;AACA,mBAAKyF,mBAAL;AACC,mBAAKF,MAAL,GAAc,aAAf,EAAgC,KAAKG,UAAL,GAAkB,IAAlD;AACD;;AAED,iBAAKjD,IAAL,GAAY,KAAZ;AACA,iBAAKC,IAAL,GAAY,IAAZ;AACA,iBAAKC,KAAL,GAAa,KAAb;AACA,iBAAKC,KAAL,GAAa,IAAb;AACA,iBAAKc,kBAAL,GAA0B,KAA1B;AACD;;;iBACD,yBAAa;AAAA;;AACXnF,oEAAU;AACR;AACAC,kBAAI,EAAE,yCAAyC,0BAFvC;AAGRC,8BAAgB,EAAE,IAHV;AAIRC,gCAAkB,EAAE,SAJZ;AAKRC,+BAAiB,EAAE,MALX;AAMR;AACAC,8BAAgB,EAAE,IAPV;AAQRC,+BAAiB,EAAE,KARX;AASRC,kBAAI,EAAE,MATE;AAUR6G,uBAAS,EAAE;AAVH,aAAV,EAWG5G,IAXH,CAWQ,UAACtC,MAAD,EAAW;AACjBlF,qBAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BiF,MAA/B;;AACA,kBAAIA,MAAM,CAACuC,WAAP,KAAuB,IAA3B,EAAiC;AAC/B,oBAAI,OAAI,CAACpI,WAAL,KAAqB,OAAI,CAAC2I,QAAL,CAAcnC,SAAvC,EAAkD;AAChDmB,0EAAU;AAAEC,wBAAI,EAAE,gCAAR;AAA0CM,wBAAI,EAAE;AAAhD,mBAAV;AACA;AACD;;AACD,oBAAI8G,QAAQ,GAAQ,EAApB;;AACA,oBACE,OAAI,CAAC1I,aAAL,CAAmB0D,KAAnB,CAAyBpD,YAAzB,KAA0C,GAA1C,IACA,OAAI,CAACN,aAAL,CAAmB0D,KAAnB,CAAyBpD,YAAzB,KAA0C,GAF5C,EAGE;AACAoI,0BAAQ,GAAG,OAAI,CAAC1I,aAAL,CAAmB0D,KAA9B;AACAgF,0BAAQ,CAAC7J,UAAT,GAAsB,OAAI,CAACE,wBAAL,CAA8B2E,KAA9B,CAAoC7E,UAA1D;;AACA,uBAAK,IAAI7F,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAG0P,QAAQ,CAAC7J,UAAT,CAAoBuE,MAAhD,EAAwDpK,KAAK,EAA7D,EAAiE;AAC/D0P,4BAAQ,CAAC7J,UAAT,CAAoB7F,KAApB,EAA2BuF,UAA3B,GACE,OAAI,CAACF,OAAL,CAAaqF,KAAb,CAAmBnF,UADrB;AAED;AACF,iBAhB8B,CAiB/B;;;AACA,oBAAI,OAAI,CAACyB,aAAL,CAAmB0D,KAAnB,CAAyBpD,YAAzB,KAA0C,GAA9C,EAAmD;AACjDoI,0BAAQ,GAAG,OAAI,CAAC1I,aAAL,CAAmB0D,KAA9B;AACAgF,0BAAQ,CAAC7J,UAAT,GAAsB,OAAI,CAACE,wBAAL,CAA8B2E,KAA9B,CAAoC7E,UAA1D;AACA,yBAAI,CAACE,wBAAL,CAA8B2E,KAA9B,CAAoC7E,UAApC,CAA+C,CAA/C,EAAkD8D,WAAlD,GAAgE,GAAhE;AACA,yBAAI,CAAC/D,yBAAL,CAA+B8E,KAA/B,CAAqC7E,UAArC,CAAgD,CAAhD,EAAmD8D,WAAnD,GAAiE,GAAjE;AACA+F,0BAAQ,CAAC7J,UAAT,CAAoB2E,IAApB,CACE,OAAI,CAAC5E,yBAAL,CAA+B8E,KAA/B,CAAqC7E,UAArC,CAAgD,CAAhD,CADF;AAGA6J,0BAAQ,CAAC7J,UAAT,CAAoB,CAApB,EAAuBN,UAAvB,GAAoC,OAAI,CAACF,OAAL,CAAaqF,KAAb,CAAmBnF,UAAvD;AACAmK,0BAAQ,CAAC7J,UAAT,CAAoB,CAApB,EAAuBN,UAAvB,GAAoC,OAAI,CAACG,QAAL,CAAcgF,KAAd,CAAoBnF,UAAxD;AACD;;AACD,uBAAI,CAACnD,SAAL,CACGuN,aADH,CACiB,MADjB,EACyB,OAAI,CAACjP,WAD9B,EAC2CgP,QAD3C,EAEGvJ,SAFH,CAEa,UAACgH,QAAD,EAAa;AACtB,sBAAIA,QAAJ,EAAc;AACZ,2BAAI,CAAC9D,QAAL,GAAgB8D,QAAhB;;AACA,2BAAI,CAAC5D,QAAL;;AACAlB,4EAAU;AAAEC,0BAAI,EAAE,sBAAR;AAAgCM,0BAAI,EAAE;AAAtC,qBAAV;AACD;AACF,iBARH;AASD;AACF,aApDD;AAsDD;;;iBACD,0BAAc;AAAA;;AACZP,oEAAU;AACR;AACAC,kBAAI,EAAE,qCAAqC,0BAFnC;AAGRC,8BAAgB,EAAE,IAHV;AAIRC,gCAAkB,EAAE,SAJZ;AAKRC,+BAAiB,EAAE,MALX;AAMR;AACAC,8BAAgB,EAAE,IAPV;AAQRC,+BAAiB,EAAE,KARX;AASRC,kBAAI,EAAE,MATE;AAUR6G,uBAAS,EAAE;AAVH,aAAV,EAWG5G,IAXH,CAWQ,UAACtC,MAAD,EAAW;AACjBlF,qBAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BiF,MAA/B;;AAEA,kBAAIA,MAAM,CAACuC,WAAP,KAAuB,IAA3B,EAAiC;AAC/B,oBAAI4G,QAAQ,GAAQ,EAApB;;AAGA,oBACE,OAAI,CAAC1I,aAAL,CAAmB0D,KAAnB,CAAyBpD,YAAzB,KAA0C,GAA1C,IACA,OAAI,CAACN,aAAL,CAAmB0D,KAAnB,CAAyBpD,YAAzB,KAA0C,GAF5C,EAGE;AACAoI,0BAAQ,GAAG,OAAI,CAAC1I,aAAL,CAAmB0D,KAA9B;AACArJ,yBAAO,CAACC,GAAR,CAAY,OAAI,CAACyE,wBAAjB;AACA1E,yBAAO,CAACC,GAAR,CAAY,OAAI,CAACyE,wBAAL,CAA8B2E,KAA1C;AACArJ,yBAAO,CAACC,GAAR,CAAY,OAAI,CAACyE,wBAAL,CAA8B2E,KAA9B,CAAoC7E,UAAhD;AAGA6J,0BAAQ,CAAC7J,UAAT,GAAsB,OAAI,CAACE,wBAAL,CAA8B2E,KAA9B,CAAoC7E,UAA1D;;AACA,uBAAK,IAAI7F,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAG0P,QAAQ,CAAC7J,UAAT,CAAoBuE,MAAhD,EAAwDpK,KAAK,EAA7D,EAAiE;AAC/D0P,4BAAQ,CAAC7J,UAAT,CAAoB7F,KAApB,EAA2BuF,UAA3B,GACE,OAAI,CAACF,OAAL,CAAaqF,KAAb,CAAmBnF,UADrB;AAED;AACF,iBAnB8B,CAoB/B;;;AACA,oBAAI,OAAI,CAACyB,aAAL,CAAmB0D,KAAnB,CAAyBpD,YAAzB,KAA0C,GAA9C,EAAmD;AACjDoI,0BAAQ,GAAG,OAAI,CAAC1I,aAAL,CAAmB0D,KAA9B;AACAgF,0BAAQ,CAAC7J,UAAT,GAAsB,OAAI,CAACE,wBAAL,CAA8B2E,KAA9B,CAAoC7E,UAA1D;AACA,yBAAI,CAACE,wBAAL,CAA8B2E,KAA9B,CAAoC7E,UAApC,CAA+C,CAA/C,EAAkD8D,WAAlD,GAAgE,GAAhE;AACA,yBAAI,CAAC/D,yBAAL,CAA+B8E,KAA/B,CAAqC7E,UAArC,CAAgD,CAAhD,EAAmD8D,WAAnD,GAAiE,GAAjE;AACA+F,0BAAQ,CAAC7J,UAAT,CAAoB2E,IAApB,CACE,OAAI,CAAC5E,yBAAL,CAA+B8E,KAA/B,CAAqC7E,UAArC,CAAgD,CAAhD,CADF;AAGA6J,0BAAQ,CAAC7J,UAAT,CAAoB,CAApB,EAAuBN,UAAvB,GAAoC,OAAI,CAACF,OAAL,CAAaqF,KAAb,CAAmBnF,UAAvD;AACAmK,0BAAQ,CAAC7J,UAAT,CAAoB,CAApB,EAAuBN,UAAvB,GAAoC,OAAI,CAACG,QAAL,CAAcgF,KAAd,CAAoBnF,UAAxD;AACD;;AACD,uBAAI,CAACnD,SAAL,CACGuN,aADH,CACiB,OADjB,EAC0B,OAAI,CAACjP,WAD/B,EAC4CgP,QAD5C,EAEGvJ,SAFH,CAEa,UAACgH,QAAD,EAAa;AACtB,sBAAIA,QAAJ,EAAc;AACZ,2BAAI,CAAC9D,QAAL,GAAgB8D,QAAhB;;AACA,2BAAI,CAAC5D,QAAL;;AACAlB,4EAAU;AAAEC,0BAAI,EAAE,kBAAR;AAA4BM,0BAAI,EAAE;AAAlC,qBAAV;AACD;AACF,iBARH;AASD;AACF,aAxDD;AAyDD;;;iBACD,2BAAe;AAAA;;AACbP,oEAAU;AACR;AACAC,kBAAI,EAAE,sCAAsC,0BAFpC;AAGRC,8BAAgB,EAAE,IAHV;AAIRC,gCAAkB,EAAE,SAJZ;AAKRC,+BAAiB,EAAE,MALX;AAMR;AACAC,8BAAgB,EAAE,IAPV;AAQRC,+BAAiB,EAAE,KARX;AASRC,kBAAI,EAAE,MATE;AAUR6G,uBAAS,EAAE;AAVH,aAAV,EAWG5G,IAXH,CAWQ,UAACtC,MAAD,EAAW;AACjBlF,qBAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BiF,MAA/B;;AACA,kBAAIA,MAAM,CAACuC,WAAP,KAAuB,IAA3B,EAAiC;AAC/B,oBAAI4G,QAAQ,GAAQ,EAApB;;AACA,oBACE,OAAI,CAAC1I,aAAL,CAAmB0D,KAAnB,CAAyBpD,YAAzB,KAA0C,GAA1C,IACA,OAAI,CAACN,aAAL,CAAmB0D,KAAnB,CAAyBpD,YAAzB,KAA0C,GAF5C,EAGE;AACAoI,0BAAQ,GAAG,OAAI,CAAC1I,aAAL,CAAmB0D,KAA9B;AACAgF,0BAAQ,CAAC7J,UAAT,GAAsB,OAAI,CAACE,wBAAL,CAA8B2E,KAA9B,CAAoC7E,UAA1D;;AACA,uBAAK,IAAI7F,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAG0P,QAAQ,CAAC7J,UAAT,CAAoBuE,MAAhD,EAAwDpK,KAAK,EAA7D,EAAiE;AAC/D0P,4BAAQ,CAAC7J,UAAT,CAAoB7F,KAApB,EAA2BuF,UAA3B,GACE,OAAI,CAACF,OAAL,CAAaqF,KAAb,CAAmBnF,UADrB;AAED;AACF,iBAZ8B,CAa/B;;;AACA,oBAAI,OAAI,CAACyB,aAAL,CAAmB0D,KAAnB,CAAyBpD,YAAzB,KAA0C,GAA9C,EAAmD;AACjDoI,0BAAQ,GAAG,OAAI,CAAC1I,aAAL,CAAmB0D,KAA9B;AACAgF,0BAAQ,CAAC7J,UAAT,GAAsB,OAAI,CAACE,wBAAL,CAA8B2E,KAA9B,CAAoC7E,UAA1D;AACA,yBAAI,CAACE,wBAAL,CAA8B2E,KAA9B,CAAoC7E,UAApC,CAA+C,CAA/C,EAAkD8D,WAAlD,GAAgE,GAAhE;AACA,yBAAI,CAAC/D,yBAAL,CAA+B8E,KAA/B,CAAqC7E,UAArC,CAAgD,CAAhD,EAAmD8D,WAAnD,GAAiE,GAAjE;AACA+F,0BAAQ,CAAC7J,UAAT,CAAoB2E,IAApB,CACE,OAAI,CAAC5E,yBAAL,CAA+B8E,KAA/B,CAAqC7E,UAArC,CAAgD,CAAhD,CADF;AAGA6J,0BAAQ,CAAC7J,UAAT,CAAoB,CAApB,EAAuBN,UAAvB,GAAoC,OAAI,CAACF,OAAL,CAAaqF,KAAb,CAAmBnF,UAAvD;AACAmK,0BAAQ,CAAC7J,UAAT,CAAoB,CAApB,EAAuBN,UAAvB,GAAoC,OAAI,CAACG,QAAL,CAAcgF,KAAd,CAAoBnF,UAAxD;AACD;;AACD,uBAAI,CAACnD,SAAL,CACGuN,aADH,CACiB,MADjB,EACyB,OAAI,CAACjP,WAD9B,EAC2CgP,QAD3C,EAEGvJ,SAFH,CAEa,UAACgH,QAAD,EAAa;AACtB,sBAAIA,QAAJ,EAAc;AACZ,2BAAI,CAAC9D,QAAL,GAAgB8D,QAAhB;;AACA,2BAAI,CAAC5D,QAAL;;AACAlB,4EAAU;AAAEC,0BAAI,EAAE,oBAAR;AAA8BM,0BAAI,EAAE;AAApC,qBAAV;AACD;AACF,iBARH;AASD;AACF,aAhDD,EADa,CAkDb;AACD;;;iBACD,0BAAc;AAAA;;AACZP,oEAAU;AACR;AACAC,kBAAI,EAAE,sCAAsC,0BAFpC;AAGRC,8BAAgB,EAAE,IAHV;AAIRC,gCAAkB,EAAE,SAJZ;AAKRC,+BAAiB,EAAE,MALX;AAMR;AACAC,8BAAgB,EAAE,IAPV;AAQRC,+BAAiB,EAAE,KARX;AASRC,kBAAI,EAAE,MATE;AAUR6G,uBAAS,EAAE;AAVH,aAAV,EAWG5G,IAXH,CAWQ,UAACtC,MAAD,EAAW;AACjBlF,qBAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BiF,MAA/B;;AACA,kBAAIA,MAAM,CAACuC,WAAP,KAAuB,IAA3B,EAAiC;AAC/B,uBAAI,CAAC1G,SAAL,CACGwN,eADH,CACmB,OAAI,CAAClP,WADxB,EACqC,OAAI,CAAC2I,QAAL,CAAc9H,QADnD,EAEG4E,SAFH,CAEa,UAACgH,QAAD,EAAa;AACtB,sBAAIA,QAAJ,EAAc;AACZ9E,4EAAU;AAAEC,0BAAI,EAAE,mBAAR;AAA6BM,0BAAI,EAAE;AAAnC,qBAAV;;AACA,2BAAI,CAAC1E,MAAL,CAAY2L,QAAZ,CAAqB,CAAC,oBAAD,CAArB;AACD;AACF,iBAPH;AAQD;AACF,aAvBD;AAwBD;;;iBACD,qBAAYnF,KAAZ,EAAiB;AACf,gBAAIA,KAAK,KAAK,GAAd,EAAmB;AACjB,mBAAK8C,kBAAL,GAA0B,IAA1B;AACA,mBAAKC,oBAAL,GAA4B,KAA5B;AACA,mBAAKC,4BAAL,GAAoC,KAApC;AACA,mBAAKC,GAAL,GAAW,KAAX;AACA,mBAAKC,MAAL,GAAc,KAAd;AACA,mBAAKC,cAAL,GAAsB,KAAtB;AACA,mBAAKC,YAAL,GAAoB,KAApB;AACA,mBAAKvB,IAAL,GAAY,KAAZ;AACA,mBAAKC,IAAL,GAAY,KAAZ;AACA,mBAAKc,GAAL,GAAW,KAAX;AACA,mBAAKU,SAAL,GAAiB,KAAjB;AACD;;AACD,gBAAItD,KAAK,KAAK,GAAd,EAAmB;AACjB,mBAAK8C,kBAAL,GAA0B,KAA1B;AACA,mBAAKC,oBAAL,GAA4B,KAA5B;AACA,mBAAKC,4BAAL,GAAoC,KAApC;AACA,mBAAKC,GAAL,GAAW,KAAX;AACA,mBAAKC,MAAL,GAAc,KAAd;AACA,mBAAKC,cAAL,GAAsB,KAAtB;AACA,mBAAKC,YAAL,GAAoB,KAApB;AACA,mBAAKvB,IAAL,GAAY,IAAZ;AACA,mBAAK2B,KAAL,GAAa,IAAb;AACA,mBAAKC,KAAL,GAAa,KAAb;AACA,mBAAK3B,IAAL,GAAY,KAAZ;AACA,mBAAKwB,SAAL,GAAiB,KAAjB;AACD;;AACD,gBAAItD,KAAK,KAAK,GAAd,EAAmB;AACjB,mBAAK8C,kBAAL,GAA0B,KAA1B;AACA,mBAAKC,oBAAL,GAA4B,KAA5B;AACA,mBAAKC,4BAAL,GAAoC,KAApC;AACA,mBAAKC,GAAL,GAAW,KAAX;AACA,mBAAKC,MAAL,GAAc,KAAd;AACA,mBAAKC,cAAL,GAAsB,KAAtB;AACA,mBAAKC,YAAL,GAAoB,KAApB;AACA,mBAAKE,SAAL,GAAiB,KAAjB;AACA,mBAAKzB,IAAL,GAAY,IAAZ;AACA,mBAAK2B,KAAL,GAAa,KAAb;AACA,mBAAKC,KAAL,GAAa,IAAb;AACA,mBAAK3B,IAAL,GAAY,KAAZ;AACD;;AACD,gBAAI9B,KAAK,KAAK,GAAd,EAAmB;AACjB,mBAAKsD,SAAL,GAAiB,KAAjB;AACA,mBAAKR,kBAAL,GAA0B,KAA1B;AACA,mBAAKC,oBAAL,GAA4B,KAA5B;AACA,mBAAKC,4BAAL,GAAoC,KAApC;AACA,mBAAKC,GAAL,GAAW,KAAX;AACA,mBAAKC,MAAL,GAAc,KAAd;AACA,mBAAKC,cAAL,GAAsB,KAAtB;AACA,mBAAKC,YAAL,GAAoB,KAApB;AACA,mBAAKvB,IAAL,GAAY,KAAZ;AACA,mBAAKC,IAAL,GAAY,IAAZ;AACA,mBAAKC,KAAL,GAAa,IAAb;AACA,mBAAKC,KAAL,GAAa,KAAb;AACD;AACF;;;iBACD,kBAAShC,KAAT,EAAc;AACZ,gBAAIA,KAAK,KAAK,sBAAd,EAAsC;AACpC,mBAAK8C,kBAAL,GAA0B,IAA1B;AACA,mBAAKC,oBAAL,GAA4B,KAA5B;AACA,mBAAKC,4BAAL,GAAoC,KAApC;AACA,mBAAKC,GAAL,GAAW,KAAX;AACA,mBAAKC,MAAL,GAAc,KAAd;AACA,mBAAKC,cAAL,GAAsB,KAAtB;AACA,mBAAKC,YAAL,GAAoB,KAApB;AACA,mBAAKE,SAAL,GAAiB,KAAjB;AACA,mBAAKV,GAAL,GAAW,KAAX;AACA,mBAAKS,GAAL,GAAW,KAAX;AACD;;AACD,gBAAIrD,KAAK,KAAK,8BAAd,EAA8C;AAC5C,mBAAKgD,4BAAL,GAAoC,KAApC;AACA,mBAAKC,GAAL,GAAW,KAAX;AACA,mBAAKH,kBAAL,GAA0B,KAA1B;AACA,mBAAKC,oBAAL,GAA4B,IAA5B;AACA,mBAAKG,MAAL,GAAc,KAAd;AACA,mBAAKC,cAAL,GAAsB,KAAtB;AACA,mBAAKC,YAAL,GAAoB,KAApB;AACA,mBAAKC,GAAL,GAAW,KAAX;AACA,mBAAKC,SAAL,GAAiB,KAAjB;AACD;AACF;;;iBAED,4BAAmBU,KAAnB,EAAwB;AACtB,iBAAK9J,aAAL,GAAqB,EAArB,CADsB,CAEtB;;AACA,gBAAI,KAAK5E,KAAL,KAAeoN,SAAnB,EAA8B;AAC5B,mBAAKrH,wBAAL,CACGvF,GADH,CACO,YADP,EAEG,UAFH,EAEe,CAFf,EAEkBA,GAFlB,CAEsB,eAFtB,EAGGgO,QAHH,CAGY,EAHZ;AAID;;AACD,gBAAIE,KAAK,KAAK,QAAd,EAAwB;AACtB,mBAAK3C,QAAL,GAAgB,EAAhB;AACA,mBAAKA,QAAL,GAAgB,CAAC,eAAD,EAAkB,eAAlB,EAAmC,eAAnC,CAAhB;AACD,aAHD,MAGO,IAAI2C,KAAK,KAAK,YAAd,EAA4B;AACjC,mBAAK3C,QAAL,GAAgB,EAAhB;AACA,mBAAKA,QAAL,GAAgB,CAAC,KAAD,EAAQ,MAAR,CAAhB;AACD,aAHM,MAGA,IACL2C,KAAK,KAAK,KAAV,IACAA,KAAK,KAAK,eADV,IAEAA,KAAK,KAAK,KAHL,EAIL;AACA,mBAAK3C,QAAL,GAAgB,EAAhB;AACA,mBAAKA,QAAL,GAAgB,CAAC,KAAD,EAAQ,MAAR,EAAgB,WAAhB,EAA6B,UAA7B,CAAhB;AACD;AACF;;;iBACD,6BAAoB2C,KAApB,EAAyB;AACvB,gBAAI,KAAK1O,KAAL,KAAeoN,SAAnB,EAA8B;AAC5B,mBAAKxH,yBAAL,CACGpF,GADH,CACO,YADP,EAEG,UAFH,EAEe,CAFf,EAEkBA,GAFlB,CAEsB,eAFtB,EAGGgO,QAHH,CAGY,EAHZ;AAID;;AAED,gBAAIE,KAAK,KAAK,QAAd,EAAwB;AACtB,mBAAKoB,SAAL,GAAiB,EAAjB;AACA,mBAAKA,SAAL,GAAiB,CAAC,eAAD,EAAkB,eAAlB,EAAmC,eAAnC,CAAjB;AACD,aAHD,MAGO,IAAIpB,KAAK,KAAK,YAAd,EAA4B;AACjC,mBAAKoB,SAAL,GAAiB,EAAjB;AACA,mBAAKA,SAAL,GAAiB,CAAC,KAAD,EAAQ,MAAR,CAAjB;AACD,aAHM,MAGA,IACLpB,KAAK,KAAK,KAAV,IACAA,KAAK,KAAK,eADV,IAEAA,KAAK,KAAK,KAHL,EAIL;AACA,mBAAKoB,SAAL,GAAiB,EAAjB;AACA,mBAAKA,SAAL,GAAiB,CAAC,KAAD,EAAQ,MAAR,EAAgB,WAAhB,EAA6B,UAA7B,CAAjB;AACD;AACF;;;iBACD,sBAAU;;;AACR,iBAAKvK,UAAL,GAAkB,KAAKF,OAAL,CAAa7E,GAAb,CAAiB,YAAjB,CAAlB;AACAa,mBAAO,CAACC,GAAR,CAAY,KAAKiE,UAAjB;AACA,gBAAMwK,aAAa,GAAG,KAAK1K,OAAL,CAAa7E,GAAb,CAAiB,YAAjB,CAAtB;AACA,gBAAMwP,kBAAkB,GAAG,IAAIC,GAAJ,CACzBF,aAAa,CAACrF,KAAd,CAAoBwF,GAApB,CAAwB,UAACC,CAAD;AAAA,qBAAOA,CAAC,CAAClE,SAAT;AAAA,aAAxB,CADyB,CAA3B;AAGA,iBAAKmE,WAAL,GAAmB,KAAKC,aAAL,CAChB3G,MADgB,CACT,UAACrH,IAAD;AAAA,qBAAU2N,kBAAkB,CAACM,GAAnB,CAAuBjO,IAAI,CAAC4J,SAA5B,CAAV;AAAA,aADS,EAEhBiE,GAFgB,CAEZ,UAACK,GAAD;AAAA,qBAASA,GAAG,CAACtE,SAAb;AAAA,aAFY,CAAnB;;AAGA,gBACE,kBAAKlG,wBAAL,CAA8B2E,KAA9B,MAAmC,IAAnC,IAAmCC,aAAnC,GAAmC,MAAnC,GAAmCA,GAAE9E,UAAF,CAAa,CAAb,CAAnC,MAAkD,IAAlD,IAAkD+E,aAAlD,GAAkD,MAAlD,GAAkDA,GAAEd,cAApD,MACA,QAFF,EAGE;AACAzI,qBAAO,CAACC,GAAR,CAAY,KAAK+D,OAAL,CAAaqF,KAAzB,EAA+B,gBAA/B;AACA,kBAAM8F,WAAW,GAAG,IAAIP,GAAJ,CAClB,KAAK1K,UAAL,CAAgBmF,KAAhB,CAAsBwF,GAAtB,CAA0B,UAACK,GAAD;AAAA,uBAASA,GAAG,CAACnE,UAAb;AAAA,eAA1B,CADkB,CAApB;AAGA,mBAAKqE,mBAAL,GAA2B,KAAKC,WAAL,CAAiBhH,MAAjB,CACzB,UAAC6G,GAAD;AAAA,uBAAS,CAACC,WAAW,CAACF,GAAZ,CAAgBC,GAAhB,CAAV;AAAA,eADyB,CAA3B;AAGD;;AACD,iBAAKhL,UAAL,CAAgBiF,IAAhB,CAAqB,KAAK/E,gBAAL,EAArB;AACD;;;iBACD,uBAAW;;;AACT,iBAAKF,UAAL,GAAkB,KAAKG,QAAL,CAAclF,GAAd,CAAkB,YAAlB,CAAlB;AACA,iBAAK+E,UAAL,CAAgBiF,IAAhB,CAAqB,KAAK/E,gBAAL,EAArB;;AACA,gBACE,kBAAKM,wBAAL,CAA8B2E,KAA9B,MAAmC,IAAnC,IAAmCC,aAAnC,GAAmC,MAAnC,GAAmCA,GAAE9E,UAAF,CAAa,CAAb,CAAnC,MAAkD,IAAlD,IAAkD+E,aAAlD,GAAkD,MAAlD,GAAkDA,GAAEd,cAApD,MACA,QAFF,EAGE;AACA,kBAAM0G,WAAW,GAAG,IAAIP,GAAJ,CAClB,KAAK1K,UAAL,CAAgBmF,KAAhB,CAAsBwF,GAAtB,CAA0B,UAACK,GAAD;AAAA,uBAASA,GAAG,CAACnE,UAAb;AAAA,eAA1B,CADkB,CAApB;AAGA,mBAAKuE,oBAAL,GAA4B,KAAKC,YAAL,CAAkBlH,MAAlB,CAC1B,UAAC6G,GAAD;AAAA,uBAAS,CAACC,WAAW,CAACF,GAAZ,CAAgBC,GAAhB,CAAV;AAAA,eAD0B,CAA5B;AAGD;AACF;;;iBACD,mBAAO;AAAA;;AACL,gBACE,KAAKlL,OAAL,CAAaqF,KAAb,CAAmBnF,UAAnB,CAA8BsL,IAA9B,CACE,UAACtL,UAAD;AAAA,qBAAgBA,UAAU,CAAC,WAAD,CAAV,KAA4B,WAA5C;AAAA,aADF,KAGA,KAAKF,OAAL,CAAaqF,KAAb,CAAmBnF,UAAnB,CAA8BsL,IAA9B,CACE,UAACC,iBAAD;AAAA,qBAAuBA,iBAAiB,CAAC,WAAD,CAAjB,KAAmC,SAA1D;AAAA,aADF,CAJF,EAOE;AACA,kBAAIpB,QAAQ,GAAQ,EAApB;AACAA,sBAAQ,GAAG,KAAK1I,aAAL,CAAmB0D,KAA9B;AACAgF,sBAAQ,CAAC7J,UAAT,GAAsB,KAAKE,wBAAL,CAA8B2E,KAA9B,CAAoC7E,UAA1D;AACAxE,qBAAO,CAACC,GAAR,CAAYoO,QAAZ;AACArO,qBAAO,CAACC,GAAR,CAAY,KAAK+D,OAAL,CAAaqF,KAAzB;;AACA,mBAAK,IAAI1K,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAG0P,QAAQ,CAAC7J,UAAT,CAAoBuE,MAAhD,EAAwDpK,KAAK,EAA7D,EAAiE;AAG/D0P,wBAAQ,CAAC7J,UAAT,CAAoB7F,KAApB,EAA2BuF,UAA3B,GACE,KAAKF,OAAL,CAAaqF,KAAb,CAAmBnF,UAAnB,CAA8B2K,GAA9B,CAAkC,UAACK,GAAD,EAAQ;;;AACxClP,yBAAO,CAACC,GAAR,CAAYiP,GAAZ;;AACA,sBACE,oBAAI,CAACxK,wBAAL,CAA8B2E,KAA9B,MAAmC,IAAnC,IAAmCC,aAAnC,GAAmC,MAAnC,GAAmCA,GAAE9E,UAAF,CAAa,CAAb,CAAnC,MAAkD,IAAlD,IAAkD+E,aAAlD,GAAkD,MAAlD,GAAkDA,GAC9Cd,cADJ,MACuB,QAFzB,EAGE;AACA,6CAAYyG,GAAZ;AACD;;AACD,yDACKA,GADL,GACQ;AACNnE,8BAAU,EAAEmE,GAAG,CAACnE,UAAJ,CAAe2E,OAAf,GACRR,GAAG,CAACnE,UAAJ,CAAe2E,OADP,GAERC,MAAM,CAACT,GAAG,CAACnE,UAAJ,CAAemC,KAAf,CAAqB,GAArB,EAA0B,CAA1B,CAAD,CAHJ;AAIJpC,gCAAY,EAAEoE,GAAG,CAACnE,UAAJ,CAAe6E,SAAf,GACZV,GAAG,CAACnE,UAAJ,CAAe6E,SADH,GAEZV,GAAG,CAACnE;AANF,mBADR;AASD,iBAjBD,CADF;AAmBD;;AAED,kBAAI,KAAKpM,KAAT,EAAgB;AACd,qBAAKoC,SAAL,CACGuN,aADH,CACiB,QADjB,EAC2B,KAAKjP,WADhC,EAC6CgP,QAD7C,EAEGvJ,SAFH,CAGI,UAAC+K,UAAD,EAAe;AACb,sBAAIA,UAAJ,EAAgB;AACd,2BAAI,CAAC9I,KAAL,GAAa,OAAb;AACA,2BAAI,CAACpI,KAAL,GAAakR,UAAU,CAAC3P,QAAxB;AACA,2BAAI,CAAC8H,QAAL,GAAgB6H,UAAhB,CAHc,CAId;AACA;;AACA,2BAAI,CAAC3H,QAAL;;AACA,2BAAI,CAAC4H,QAAL,CAAc,sBAAd;;AACA,2BAAI,CAAC3H,QAAL,GAAgB,KAAhB,CARc,CASd;;AACAnB,4EAAU;AAAEC,0BAAI,EAAE,mBAAR;AAA6BM,0BAAI,EAAE;AAAnC,qBAAV;AAEA,2BAAI,CAACb,YAAL,GAAoB,CAAC,OAAI,CAACf,aAAL,CAAmBc,OAAxC;AACA,2BAAI,CAACE,YAAL,GAAoB,CAAC,OAAI,CAACjC,wBAAL,CAA8B+B,OAAnD;AACA,2BAAI,CAACG,YAAL,GAAoB,CAAC,OAAI,CAAC5C,OAAL,CAAayC,OAAlC;AACA,2BAAI,CAACI,YAAL,GAAoB,CAAC,OAAI,CAACtC,yBAAL,CAA+BkC,OAApD;AACA,2BAAI,CAACK,YAAL,GAAoB,CAAC,OAAI,CAACzC,QAAL,CAAcoC,OAAnC;AACD;AACF,iBAtBL,EAuBI,UAACoH,KAAD,EAAU;AACR7N,yBAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8B4N,KAA9B;AACA7G,0EAAU;AAAEC,wBAAI,EAAE4G,KAAK,CAACA,KAAd;AAAqBtG,wBAAI,EAAE;AAA3B,mBAAV;AACD,iBA1BL;AA4BD,eA7BD,MA6BO;AAEL,qBAAKxG,SAAL,CACGgP,mBADH,CACuB1B,QADvB,EACiC,KAAKhP,WADtC,EAEGyF,SAFH,CAGI,UAAC+K,UAAD,EAAe;AACb,sBAAIA,UAAJ,EAAgB;AACd;AACA,2BAAI,CAAC9I,KAAL,GAAa,OAAb;AACA,2BAAI,CAACpI,KAAL,GAAakR,UAAU,CAAC3P,QAAxB;AACA,2BAAI,CAAC8H,QAAL,GAAgB6H,UAAhB,CAJc,CAKd;AACA;;AACA,2BAAI,CAAC3H,QAAL;;AACA,2BAAI,CAAC4H,QAAL,CAAc,sBAAd;;AACA,2BAAI,CAAC3H,QAAL,GAAgB,KAAhB;AACAnB,4EAAU;AAAEC,0BAAI,EAAE,mBAAR;AAA6BM,0BAAI,EAAE;AAAnC,qBAAV;AACA,2BAAI,CAACb,YAAL,GAAoB,CAAC,OAAI,CAACf,aAAL,CAAmBc,OAAxC;AACA,2BAAI,CAACE,YAAL,GAAoB,CAAC,OAAI,CAACjC,wBAAL,CAA8B+B,OAAnD;AACA,2BAAI,CAACG,YAAL,GAAoB,CAAC,OAAI,CAAC5C,OAAL,CAAayC,OAAlC;AACA,2BAAI,CAACI,YAAL,GAAoB,CAAC,OAAI,CAACtC,yBAAL,CAA+BkC,OAApD;AACA,2BAAI,CAACK,YAAL,GAAoB,CAAC,OAAI,CAACzC,QAAL,CAAcoC,OAAnC;AACD;AACF,iBArBL,EAsBI,UAACoH,KAAD,EAAU;AACR7N,yBAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8B4N,KAA9B;AACA7G,0EAAU;AAAEC,wBAAI,EAAE4G,KAAK,CAACA,KAAd;AAAqBtG,wBAAI,EAAE;AAA3B,mBAAV;AACD,iBAzBL;AA2BD;AACF,aAhGD,MAgGO;AACLP,sEAAU;AACRC,oBAAI,EAAE,oDADE;AAERM,oBAAI,EAAE;AAFE,eAAV;AAID;AACF;;;iBACD,uBAAW;AAAA;;AACT,iBAAKxG,SAAL,CAAeiP,iBAAf,GAAmClL,SAAnC,CAA6C,UAACmL,OAAD,EAAY;AACvD,qBAAI,CAACC,WAAL,GAAmBD,OAAnB;AACA,qBAAI,CAACE,mBAAL,GAA2B,OAAI,CAACD,WAAL,CAAiBrB,GAAjB,CAAqB,UAACuB,IAAD;AAAA,uBAAUC,gCACrDD,IADqD,GACjD;AACPE,+BAAa,YAAKF,IAAI,CAACV,OAAV,cAAqBU,IAAI,CAACR,SAA1B;AADN,iBADiD,CAAV;AAAA,eAArB,CAA3B;;AAIA,kBAAIK,OAAJ,EAAa;AACX,uBAAI,CAACM,eAAL,GAAuBN,OAAO,CAACpB,GAAR,CAAY,UAAC7N,IAAD,EAAS;AAC1C,yBAAOA,IAAI,CAAC4O,SAAZ;AACD,iBAFsB,CAAvB,CADW,CAIX;;AACA,uBAAI,CAACY,aAAL,GAAqBP,OAAO,CAACpB,GAAR,CAAY,UAAC7N,IAAD,EAAS;AACxC,yBAAOA,IAAI,CAAC0O,OAAZ;AACD,iBAFoB,CAArB;AAGA,uBAAI,CAACe,WAAL,GAAmBR,OAAO,CAACpB,GAAR,CAAY,UAAC7N,IAAD,EAAS;AACtC,yBAAOA,IAAI,CAAC0J,QAAZ;AACD,iBAFkB,CAAnB;AAGA,uBAAI,CAACgG,cAAL,GAAsBT,OAAO,CAACpB,GAAR,CAAY,UAAC7N,IAAD,EAAS;AACzC,yBAAOA,IAAI,CAAC6J,WAAZ;AACD,iBAFqB,CAAtB;;AAGA,oBAAM8F,cAAc,GAAG,OAAI,CAACT,WAAL,CAAiBU,MAAjB,CAAwB,UAACC,GAAD,EAAM3B,GAAN,EAAa;AAC1D2B,qBAAG,CAAC3B,GAAG,CAACQ,OAAL,CAAH,GAAmBR,GAAG,CAACU,SAAvB;AACA,yBAAOiB,GAAP;AACD,iBAHsB,EAGpB,EAHoB,CAAvB;;AAIA,oBAAMC,mBAAmB,GAAG,IAAIlC,GAAJ,CAC1B,OAAI,CAACzK,KAAL,CAAW0K,GAAX,CAAe,UAAC3F,CAAD;AAAA,yBAAOyH,cAAc,CAACzH,CAAC,CAAC6B,UAAH,CAArB;AAAA,iBAAf,CAD0B,CAA5B;AAGA,uBAAI,CAACoF,mBAAL,GAA2B,OAAI,CAACA,mBAAL,CAAyB9H,MAAzB,CACzB,UAAC6G,GAAD;AAAA,yBAAS,CAAC4B,mBAAmB,CAAC7B,GAApB,CAAwBC,GAAG,CAACU,SAA5B,CAAV;AAAA,iBADyB,CAA3B;;AAGA,uBAAI,CAACzL,KAAL,CAAW8E,OAAX,CAAmB,UAACC,CAAD,EAAM;AACvB,sBAAMlI,IAAI,GAAG,OAAI,CAACkP,WAAL,CAAiBjI,IAAjB,CACX,UAACiH,GAAD;AAAA,2BAASA,GAAG,CAACQ,OAAJ,IAAexG,CAAC,CAAC6B,UAA1B;AAAA,mBADW,CAAb;;AAGA7B,mBAAC,CAAC6B,UAAF,aAAkB7B,CAAC,CAAC6B,UAAF,IAAgB,EAAlC,cAAwC,KAAI,SAAJ,QAAI,WAAJ,GAAI,MAAJ,OAAI,CAAE6E,SAAN,KAAmB,EAA3D;;AACA,yBAAI,CAACxG,OAAL,CAAaD,IAAb,CAAkB,OAAI,CAACvG,EAAL,CAAQqB,KAAR,CAAciF,CAAd,CAAlB;AACD,iBAND;AAOD;AACF,aAtCD;AAuCD;;;iBACD,wBAAY;AAAA;;AACV,iBAAKnI,SAAL,CAAeiP,iBAAf,GAAmClL,SAAnC,CAA6C,UAACmL,OAAD,EAAY;;;AACvD,qBAAI,CAACc,YAAL,GAAoBd,OAApB;AACA,qBAAI,CAACe,oBAAL,GAA4B,OAAI,CAACD,YAAL,CAAkBlC,GAAlB,CAAsB,UAACuB,IAAD;AAAA,uBAAUC,gCACvDD,IADuD,GACnD;AACPE,+BAAa,YAAKF,IAAI,CAACV,OAAV,cAAqBU,IAAI,CAACR,SAA1B;AADN,iBADmD,CAAV;AAAA,eAAtB,CAA5B;;AAIA,kBAAIK,OAAJ,EAAa;AACX,uBAAI,CAACgB,gBAAL,GAAwBhB,OAAO,CAACpB,GAAR,CAAY,UAAC7N,IAAD,EAAS;AAC3C,yBAAOA,IAAI,CAAC4O,SAAZ;AACD,iBAFuB,CAAxB,CADW,CAIX;;AACA,uBAAI,CAACsB,cAAL,GAAsBjB,OAAO,CAACpB,GAAR,CAAY,UAAC7N,IAAD,EAAS;AACzC,yBAAOA,IAAI,CAAC0O,OAAZ;AACD,iBAFqB,CAAtB;AAGA,uBAAI,CAACyB,YAAL,GAAoBlB,OAAO,CAACpB,GAAR,CAAY,UAAC7N,IAAD,EAAS;AACvC,yBAAOA,IAAI,CAAC0J,QAAZ;AACD,iBAFmB,CAApB;AAGA,uBAAI,CAAC0G,eAAL,GAAuBnB,OAAO,CAACpB,GAAR,CAAY,UAAC7N,IAAD,EAAS;AAC1C,yBAAOA,IAAI,CAAC6J,WAAZ;AACD,iBAFsB,CAAvB;;AAGA,oBAAM8F,cAAc,GAAG,OAAI,CAACI,YAAL,CAAkBH,MAAlB,CAAyB,UAACC,GAAD,EAAM3B,GAAN,EAAa;AAC3D2B,qBAAG,CAAC3B,GAAG,CAACQ,OAAL,CAAH,GAAmBR,GAAG,CAACU,SAAvB;AACA,yBAAOiB,GAAP;AACD,iBAHsB,EAGpB,EAHoB,CAAvB;;AAIA,oBAAMC,mBAAmB,GAAG,IAAIlC,GAAJ,CAC1B,aAAI,CAACjF,MAAL,MAAW,IAAX,IAAWL,aAAX,GAAW,MAAX,GAAWA,GAAEuF,GAAF,CAAM,UAAC3F,CAAD;AAAA,yBAAOyH,cAAc,CAACzH,CAAC,CAAC6B,UAAH,CAArB;AAAA,iBAAN,CADe,CAA5B;AAGA,uBAAI,CAACiG,oBAAL,GAA4B,OAAI,CAACA,oBAAL,CAA0B3I,MAA1B,CAC1B,UAAC6G,GAAD;AAAA,yBAAS,CAAC4B,mBAAmB,CAAC7B,GAApB,CAAwBC,GAAG,CAACU,SAA5B,CAAV;AAAA,iBAD0B,CAA5B;;AAGA,uBAAI,CAACjG,MAAL,CAAYV,OAAZ,CAAoB,UAACC,CAAD,EAAM;AACxB,sBAAMlI,IAAI,GAAG,OAAI,CAAC+P,YAAL,CAAkB9I,IAAlB,CACX,UAACiH,GAAD;AAAA,2BAASA,GAAG,CAACQ,OAAJ,IAAexG,CAAC,CAAC6B,UAA1B;AAAA,mBADW,CAAb;;AAGA7B,mBAAC,CAAC6B,UAAF,aAAkB7B,CAAC,CAAC6B,UAAF,IAAgB,EAAlC,cAAwC,KAAI,SAAJ,QAAI,WAAJ,GAAI,MAAJ,OAAI,CAAE6E,SAAN,KAAmB,EAA3D;;AACA,yBAAI,CAAChG,QAAL,CAAcT,IAAd,CAAmB,OAAI,CAACvG,EAAL,CAAQqB,KAAR,CAAciF,CAAd,CAAnB;AACD,iBAND;AAOD;AACF,aAtCD;AAuCD;;;iBACD,uBAAW;AAAA;;AACT,iBAAKnI,SAAL,CAAesQ,oBAAf,GAAsCvM,SAAtC,CAAgD,UAACwM,OAAD,EAAY;AAC1D,qBAAI,CAACjC,WAAL,GAAmBiC,OAAnB;AACA,qBAAI,CAAClC,mBAAL,sBAA+B,OAAI,CAACC,WAApC;;AACA,kBAAIiC,OAAJ,EAAa;AACX,uBAAI,CAACf,eAAL,GAAuBe,OAAO,CAACzC,GAAR,CAAY,UAAC7N,IAAD,EAAS;AAC1C,yBAAOA,IAAI,CAAC8J,YAAZ;AACD,iBAFsB,CAAvB;AAGA,uBAAI,CAAC0F,aAAL,GAAqBc,OAAO,CAACzC,GAAR,CAAY,UAAC7N,IAAD,EAAS;AACxC,yBAAOA,IAAI,CAAC+J,UAAZ;AACD,iBAFoB,CAArB;AAGA,uBAAI,CAAC0F,WAAL,GAAmBa,OAAO,CAACzC,GAAR,CAAY,UAAC7N,IAAD,EAAS;AACtC,yBAAOA,IAAI,CAAC0J,QAAZ;AACD,iBAFkB,CAAnB;AAGA,uBAAI,CAACgG,cAAL,GAAsBY,OAAO,CAACzC,GAAR,CAAY,UAAC7N,IAAD,EAAS;AACzC,yBAAOA,IAAI,CAAC6J,WAAZ;AACD,iBAFqB,CAAtB;AAGD;AACF,aAjBD;AAkBD;;;iBACD,iCAAqB;AACnB7K,mBAAO,CAACC,GAAR,CAAY,iCAAZ;AACA,iBAAKkI,QAAL,GAAgB,IAAhB;AACAnI,mBAAO,CAACC,GAAR,CAAY,KAAKkI,QAAjB;AACD;;;iBACD,wBAAY;AAAA;;AACV,iBAAKpH,SAAL,CAAesQ,oBAAf,GAAsCvM,SAAtC,CAAgD,UAACwM,OAAD,EAAY;AAC1D,qBAAI,CAAC/B,YAAL,GAAoB+B,OAApB;AACAtR,qBAAO,CAACC,GAAR,CAAYqR,OAAZ;AACA,qBAAI,CAAChC,oBAAL,sBAAgC,OAAI,CAACC,YAArC;;AAEA,kBAAI+B,OAAJ,EAAa;AACX,uBAAI,CAACf,eAAL,GAAuBe,OAAO,CAACzC,GAAR,CAAY,UAAC7N,IAAD,EAAS;AAC1C,yBAAOA,IAAI,CAAC8J,YAAZ;AACD,iBAFsB,CAAvB;AAGA,uBAAI,CAAC0F,aAAL,GAAqBc,OAAO,CAACzC,GAAR,CAAY,UAAC7N,IAAD,EAAS;AACxC,yBAAOA,IAAI,CAAC+J,UAAZ;AACD,iBAFoB,CAArB;AAGA,uBAAI,CAAC0F,WAAL,GAAmBa,OAAO,CAACzC,GAAR,CAAY,UAAC7N,IAAD,EAAS;AACtC,yBAAOA,IAAI,CAAC0J,QAAZ;AACD,iBAFkB,CAAnB;AAGA,uBAAI,CAACgG,cAAL,GAAsBY,OAAO,CAACzC,GAAR,CAAY,UAAC7N,IAAD,EAAS;AACzC,yBAAOA,IAAI,CAAC6J,WAAZ;AACD,iBAFqB,CAAtB;AAGD;AACF,aAnBD;AAoBD;;;iBACD,iCAAwBxB,KAAxB,EAAoCkI,CAApC,EAAqC;AACnC,gBAAI,KAAKhO,aAAL,CAAmBgO,CAAnB,CAAJ,EAA2B;AACzB,mBAAKhO,aAAL,CAAmBgO,CAAnB,IAAwBlI,KAAxB;AACD,aAFD,MAEO;AACL,mBAAK9F,aAAL,CAAmB4F,IAAnB,CAAwBE,KAAxB;AACD;;AACD,gBAAIH,CAAC,GAAG,KAAKgH,WAAL,CAAiBjI,IAAjB,CAAsB,UAACvC,IAAD;AAAA,qBAAUA,IAAI,CAACgK,OAAL,IAAgBrG,KAA1B;AAAA,aAAtB,CAAR;AACA,iBAAKrF,OAAL,CACG7E,GADH,CACO,YADP,EAEG,UAFH,EAEeoS,CAFf,EAEkBpS,GAFlB,CAEsB,cAFtB,EAGGgO,QAHH,CAGYjE,CAAC,CAAC0G,SAHd;AAIA,iBAAK5L,OAAL,CACG7E,GADH,CACO,YADP,EAEG,UAFH,EAEeoS,CAFf,EAEkBpS,GAFlB,CAEsB,UAFtB,EAGGgO,QAHH,CAGYjE,CAAC,CAACwB,QAHd;AAIA1K,mBAAO,CAACC,GAAR,CAAY,KAAK+D,OAAL,CAAa7E,GAAb,CAAiB,YAAjB,CAAZ;AACD;;;iBACD,kCAAyBkO,KAAzB,EAAqCkE,CAArC,EAAsC;AACpC,iBAAKC,oBAAL,CAA0BD,CAA1B,IAA+BlE,KAAK,CAACuC,SAArC;AACA,gBAAM6B,qBAAqB,GAAG,IAAI7C,GAAJ,CAAQ,KAAK4C,oBAAb,CAA9B;AACA,iBAAKR,oBAAL,GAA4B,KAAKD,YAAL,CACzB1I,MADyB,CAClB,UAAC6G,GAAD;AAAA,qBAAS,CAACuC,qBAAqB,CAACxC,GAAtB,CAA0BC,GAAG,CAACU,SAA9B,CAAV;AAAA,aADkB,EAEzBf,GAFyB,CAErB,UAACuB,IAAD;AAAA,qBAAUC,gCACVD,IADU,GACN;AACPE,6BAAa,YAAKF,IAAI,CAACV,OAAV,cAAqBU,IAAI,CAACR,SAA1B;AADN,eADM,CAAV;AAAA,aAFqB,CAA5B;AAMA,gBAAI1G,CAAC,GAAG,KAAK6H,YAAL,CAAkB9I,IAAlB,CAAuB,UAACvC,IAAD;AAAA,qBAAUA,IAAI,CAACgK,OAAL,IAAgBrC,KAAK,CAACqC,OAAhC;AAAA,aAAvB,CAAR;AACA,iBAAKrL,QAAL,CACGlF,GADH,CACO,YADP,EAEG,UAFH,EAEeoS,CAFf,EAEkBpS,GAFlB,CAEsB,cAFtB,EAGGgO,QAHH,CAGYjE,CAAC,CAAC0G,SAHd;AAIA,iBAAKvL,QAAL,CACGlF,GADH,CACO,YADP,EAEG,UAFH,EAEeoS,CAFf,EAEkBpS,GAFlB,CAEsB,UAFtB,EAGGgO,QAHH,CAGYjE,CAAC,CAACwB,QAHd;AAID;;;iBAED,cAAIrB,KAAJ,EAAS;AACP,mBAAO,IAAP;AACA;;;;;;AAMD;;;iBAED,6BAAiB;AAAA;;AACf,iBAAKtI,SAAL,CAAe2Q,iBAAf,GAAmC5M,SAAnC,CAA6C,UAACC,IAAD,EAAS;AACpD,qBAAI,CAACiK,aAAL,GAAqBjK,IAArB;AACD,aAFD;AAGD;;;iBACD,sBAAU;AACR4M,oBAAQ,CAACC,cAAT,CAAwB,QAAxB,EAAkCC,KAAlC;AACD;;;iBACD,uBAAW;AACTF,oBAAQ,CAACC,cAAT,CAAwB,SAAxB,EAAmCC,KAAnC;AACD;;;iBACD,uBAAcxE,KAAd,EAAmB;AAAA;;AACjB,iBAAKyE,aAAL,GAAqBzE,KAAK,CAAC0E,MAAN,CAAa5R,KAAlC;AACA,iBAAK6R,UAAL,GAAkB,KAAKF,aAAL,CAAmBpM,IAAnB,CAAwB,CAAxB,EAA2BuM,IAA7C;AACA,iBAAKC,iBAAL,GAAyB,KAAKJ,aAAL,CAAmBpM,IAAnB,CAAwB,CAAxB,CAAzB;AACA,iBAAKyM,QAAL,GAAgB,KAAKD,iBAAL,CAAuBE,IAAvC;AACA,iBAAKC,iBAAL,CAAuBC,aAAvB,CAAqCC,YAArC,CACE,WADF,EAEE,KAAKJ,QAFP;AAIA,iBAAKpR,SAAL,CACGyR,iBADH,CACqB,KAAKN,iBAD1B,EAEGpN,SAFH,CAEa,UAACwM,OAAD,EAAY;AACrB,kBAAIA,OAAJ,EAAa;AACX,uBAAI,CAACmB,aAAL,GAAqBnB,OAArB;AACA,uBAAI,CAACf,eAAL,GAAuBe,OAAO,CAACoB,WAA/B;AACA,uBAAI,CAACrD,WAAL,GAAmBiC,OAAO,CAACoB,WAA3B;AACA,uBAAI,CAACtD,mBAAL,GAA2B,OAAI,CAACC,WAAhC;AACArI,wEAAU;AAAEC,sBAAI,EAAE,4BAAR;AAAsCM,sBAAI,EAAE;AAA5C,iBAAV;AACA,uBAAI,CAACQ,eAAL,GAAuB,KAAvB;AACD;AACF,aAXH;AAYD;;;iBACD,wBAAesF,KAAf,EAAoB;AAAA;;AAClB,iBAAKsF,cAAL,GAAsBtF,KAAK,CAAC0E,MAAN,CAAa5R,KAAnC;AACA,iBAAKyS,WAAL,GAAmB,KAAKD,cAAL,CAAoBjN,IAApB,CAAyB,CAAzB,EAA4BuM,IAA/C;AACA,iBAAKY,kBAAL,GAA0B,KAAKF,cAAL,CAAoBjN,IAApB,CAAyB,CAAzB,CAA1B;AACA,iBAAKoN,SAAL,GAAiB,KAAKD,kBAAL,CAAwBT,IAAzC;AACA,iBAAKW,kBAAL,CAAwBT,aAAxB,CAAsCC,YAAtC,CACE,WADF,EAEE,KAAKO,SAFP;AAIA,iBAAK/R,SAAL,CACGyR,iBADH,CACqB,KAAKK,kBAD1B,EAEG/N,SAFH,CAEa,UAACwM,OAAD,EAAY;AACrB,kBAAIA,OAAJ,EAAa;AACX,uBAAI,CAAC0B,cAAL,GAAsB1B,OAAtB;AACA,uBAAI,CAACL,gBAAL,GAAwBK,OAAO,CAACoB,WAAhC;AACA,uBAAI,CAACnD,YAAL,GAAoB+B,OAAO,CAACoB,WAA5B;AACA,uBAAI,CAACpD,oBAAL,GAA4B,OAAI,CAACC,YAAjC;AACAvI,wEAAU;AAAEC,sBAAI,EAAE,4BAAR;AAAsCM,sBAAI,EAAE;AAA5C,iBAAV;AACA,uBAAI,CAACgB,kBAAL,GAA0B,KAA1B;AACD;AACF,aAXH;AAYD;;;iBACD,wBAAe8E,KAAf,EAAsBkE,CAAtB,EAAuB;AAAA;;AACrB,gBAAI,KAAKhO,aAAL,CAAmBgO,CAAnB,CAAJ,EAA2B;AACzB,mBAAKhO,aAAL,CAAmBgO,CAAnB,IAAwBlE,KAAxB;AACD,aAFD,MAEO;AACL,mBAAK9J,aAAL,CAAmB4F,IAAnB,CAAwBkE,KAAxB;AACD;;AACD,gBAAInI,MAAM,GAAGmL,MAAM,CAAC4C,IAAP,CAAY,KAAKR,aAAL,CAAmBS,YAA/B,EAA6CrE,GAA7C,CAAiD,UAACvO,GAAD;AAAA,qBAAS,CACrEA,GADqE,EAErE,OAAI,CAACmS,aAAL,CAAmBS,YAAnB,CAAgC5S,GAAhC,CAFqE,CAAT;AAAA,aAAjD,CAAb;AAIA,gBAAI4I,CAAC,GAAGhE,MAAM,CAAC+C,IAAP,CAAY,UAACvC,IAAD;AAAA,qBAAUA,IAAI,CAAC,CAAD,CAAJ,IAAW2H,KAArB;AAAA,aAAZ,CAAR;AACA,iBAAKrJ,OAAL,CACG7E,GADH,CACO,YADP,EAEG,UAFH,EAEeoS,CAFf,EAEkBpS,GAFlB,CAEsB,aAFtB,EAGGgO,QAHH,CAGYjE,CAAC,CAAC,CAAD,CAHb;AAIA,iBAAK4H,mBAAL,CAAyBS,CAAzB,IAA8BlE,KAA9B;AACA,gBAAMoE,qBAAqB,GAAG,IAAI7C,GAAJ,CAAQ,KAAKkC,mBAAb,CAA9B;AACA,iBAAK1B,mBAAL,GAA2B,KAAKC,WAAL,CAAiBhH,MAAjB,CACzB,UAAC6G,GAAD;AAAA,qBAAS,CAACuC,qBAAqB,CAACxC,GAAtB,CAA0BC,GAA1B,CAAV;AAAA,aADyB,CAA3B;AAGD;;;iBACD,yBAAgB7B,KAAhB,EAAuBkE,CAAvB,EAAwB;AAAA;;AACtB,gBAAI,KAAKhO,aAAL,CAAmBgO,CAAnB,CAAJ,EAA2B;AACzB,mBAAKhO,aAAL,CAAmBgO,CAAnB,IAAwBlE,KAAxB;AACD,aAFD,MAEO;AACL,mBAAK9J,aAAL,CAAmB4F,IAAnB,CAAwBkE,KAAxB;AACD;;AACD,gBAAInI,MAAM,GAAGmL,MAAM,CAAC4C,IAAP,CAAY,KAAKD,cAAL,CAAoBE,YAAhC,EAA8CrE,GAA9C,CAAkD,UAACvO,GAAD;AAAA,qBAAS,CACtEA,GADsE,EAEtE,OAAI,CAAC0S,cAAL,CAAoBE,YAApB,CAAiC5S,GAAjC,CAFsE,CAAT;AAAA,aAAlD,CAAb;AAIA,gBAAI4I,CAAC,GAAGhE,MAAM,CAAC+C,IAAP,CAAY,UAACvC,IAAD;AAAA,qBAAUA,IAAI,CAAC,CAAD,CAAJ,IAAW2H,KAArB;AAAA,aAAZ,CAAR;AACA,iBAAKhJ,QAAL,CACGlF,GADH,CACO,YADP,EAEG,UAFH,EAEeoS,CAFf,EAEkBpS,GAFlB,CAEsB,aAFtB,EAGGgO,QAHH,CAGYjE,CAAC,CAAC,CAAD,CAHb;AAIA,iBAAKsI,oBAAL,CAA0BD,CAA1B,IAA+BlE,KAA/B;AACA,gBAAMoE,qBAAqB,GAAG,IAAI7C,GAAJ,CAAQ,KAAK4C,oBAAb,CAA9B;AACA,iBAAKlC,oBAAL,GAA4B,KAAKC,YAAL,CAAkBlH,MAAlB,CAC1B,UAAC6G,GAAD;AAAA,qBAAS,CAACuC,qBAAqB,CAACxC,GAAtB,CAA0BC,GAA1B,CAAV;AAAA,aAD0B,CAA5B;AAGD;;;iBACD,0BAAiB7B,KAAjB,EAAsB;AAAA;;AACpB,iBAAKyE,aAAL,GAAqBzE,KAAK,CAAC0E,MAAN,CAAa5R,KAAlC;AACA,iBAAK6R,UAAL,GAAkB,KAAKF,aAAL,CAAmBpM,IAAnB,CAAwB,CAAxB,EAA2BuM,IAA7C;AACA,iBAAKC,iBAAL,GAAyB,KAAKJ,aAAL,CAAmBpM,IAAnB,CAAwB,CAAxB,CAAzB;AACA,iBAAKyN,WAAL,GAAmB,KAAKjB,iBAAL,CAAuBE,IAA1C;AACA,iBAAKrR,SAAL,CAAeyR,iBAAf,CAAiC,KAAKN,iBAAtC,EAAyDpN,SAAzD,CACE,UAACwM,OAAD,EAAY;AACV,kBAAIA,OAAJ,EAAa;AACX,uBAAI,CAACmB,aAAL,GAAqBnB,OAArB;AACA,uBAAI,CAACf,eAAL,GAAuBe,OAAO,CAACoB,WAA/B;AACD;AACF,aANH,EAOE,UAACU,GAAD,EAAQ,CAAG,CAPb;AASD;;;iBACD,qBAAS;AAAA;;;;AACP,gBACE,KAAKpP,OAAL,CAAaqF,KAAb,CAAmBnF,UAAnB,CAA8BsL,IAA9B,CACE,UAACtL,UAAD;AAAA,qBAAgBA,UAAU,CAAC,WAAD,CAAV,KAA4B,WAA5C;AAAA,aADF,KAGA,KAAKF,OAAL,CAAaqF,KAAb,CAAmBnF,UAAnB,CAA8BsL,IAA9B,CACE,UAACC,iBAAD;AAAA,qBAAuBA,iBAAiB,CAAC,WAAD,CAAjB,KAAmC,SAA1D;AAAA,aADF,CAHA,IAMA,KAAKpL,QAAL,CAAcgF,KAAd,CAAoBnF,UAApB,CAA+BsL,IAA/B,CACE,UAACtL,UAAD;AAAA,qBAAgBA,UAAU,CAAC,WAAD,CAAV,KAA4B,WAA5C;AAAA,aADF,CANA,IASA,KAAKG,QAAL,CAAcgF,KAAd,CAAoBnF,UAApB,CAA+BsL,IAA/B,CACE,UAACC,iBAAD;AAAA,qBAAuBA,iBAAiB,CAAC,WAAD,CAAjB,KAAmC,SAA1D;AAAA,aADF,CAVF,EAaE;AACA,kBAAIpB,QAAQ,GAAQ,EAApB;AACAA,sBAAQ,GAAG,KAAK1I,aAAL,CAAmB0D,KAA9B;AACAgF,sBAAQ,CAAC7J,UAAT,GACE,KAAKE,wBAAL,CAA8B2E,KAA9B,CAAoC7E,UAApC,CAA+C6O,KAA/C,CAAqD,CAArD,EAAwD,CAAxD,CADF;AAEA,mBAAK3O,wBAAL,CAA8B2E,KAA9B,CAAoC7E,UAApC,CAA+C,CAA/C,EAAkD8D,WAAlD,GAAgE,GAAhE;AACA,mBAAK/D,yBAAL,CAA+B8E,KAA/B,CAAqC7E,UAArC,CAAgD,CAAhD,EAAmD8D,WAAnD,GAAiE,GAAjE;AACA+F,sBAAQ,CAAC7J,UAAT,CAAoB2E,IAApB,CACE,KAAK5E,yBAAL,CAA+B8E,KAA/B,CAAqC7E,UAArC,CAAgD,CAAhD,CADF;;AAIA,kBACE,kBAAKE,wBAAL,CAA8B2E,KAA9B,MAAmC,IAAnC,IAAmCC,aAAnC,GAAmC,MAAnC,GAAmCA,GAAE9E,UAAF,CAAa,CAAb,CAAnC,MAAkD,IAAlD,IAAkD+E,aAAlD,GAAkD,MAAlD,GAAkDA,GAAEd,cAApD,MACA,QAFF,EAGE;AACA4F,wBAAQ,CAAC7J,UAAT,CAAoB,CAApB,EAAuBN,UAAvB,GAAoC,KAAKF,OAAL,CAAaqF,KAAb,CAAmBnF,UAAvD;AACD,eALD,MAKO;AACLmK,wBAAQ,CAAC7J,UAAT,CAAoB,CAApB,EAAuBN,UAAvB,GAAoC,KAAKF,OAAL,CAAaqF,KAAb,CAAmBnF,UAAnB,CAA8B2K,GAA9B,CAClC,UAACK,GAAD,EAAQ;AACN,yDACKA,GADL,GACQ;AACNnE,8BAAU,EAAEmE,GAAG,CAACnE,UAAJ,CAAe2E,OAAf,GACRR,GAAG,CAACnE,UAAJ,CAAe2E,OADP,GAERC,MAAM,CAACT,GAAG,CAACnE,UAAJ,CAAemC,KAAf,CAAqB,GAArB,EAA0B,CAA1B,CAAD;AAHJ,mBADR;AAMD,iBARiC,CAApC;AAUD;;AAED,kBACE,kBAAK3I,yBAAL,CAA+B8E,KAA/B,MAAoC,IAApC,IAAoCQ,aAApC,GAAoC,MAApC,GAAoCA,GAAErF,UAAF,CAAa,CAAb,CAApC,MAAmD,IAAnD,IAAmDsF,aAAnD,GAAmD,MAAnD,GAAmDA,GAAErB,cAArD,MACA,QAFF,EAGE;AACA4F,wBAAQ,CAAC7J,UAAT,CAAoB,CAApB,EAAuBN,UAAvB,GAAoC,KAAKG,QAAL,CAAcgF,KAAd,CAAoBnF,UAAxD;AACD,eALD,MAKO;AACLmK,wBAAQ,CAAC7J,UAAT,CAAoB,CAApB,EAAuBN,UAAvB,GAAoC,KAAKG,QAAL,CAAcgF,KAAd,CAAoBnF,UAApB,CAA+B2K,GAA/B,CAClC,UAACK,GAAD,EAAQ;AACN,yDACKA,GADL,GACQ;AACNnE,8BAAU,EAAEmE,GAAG,CAACnE,UAAJ,CAAe2E,OAAf,GACRR,GAAG,CAACnE,UAAJ,CAAe2E,OADP,GAERC,MAAM,CAACT,GAAG,CAACnE,UAAJ,CAAemC,KAAf,CAAqB,GAArB,EAA0B,CAA1B,CAAD;AAHJ,mBADR;AAMD,iBARiC,CAApC;AAUD;;AACDlN,qBAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBoO,QAAzB;AACA,mBAAKtN,SAAL,CACGgP,mBADH,CACuB1B,QADvB,EACiC,KAAKhP,WADtC,EAEGyF,SAFH,CAEa,UAAC+K,UAAD,EAAe;AACxB,oBAAIA,UAAJ,EAAgB;AACd,yBAAI,CAAC9I,KAAL,GAAa,OAAb;AACA,yBAAI,CAACuM,aAAL,GAAqB,KAArB;AACAtM,0EAAU;AAAEC,wBAAI,EAAE,mBAAR;AAA6BM,wBAAI,EAAE;AAAnC,mBAAV;AACD;AACF,eARH;AASD,aArED,MAqEO;AACLP,sEAAU;AACRC,oBAAI,EAAE,oDADE;AAERM,oBAAI,EAAE;AAFE,eAAV;AAID;AACF;;;iBACD,iBAAO5I,KAAP,EAAY;;;AACV,gBAAM4U,YAAY,GAAG,KAAKvP,OAAL,CAAa7E,GAAb,CAAiB,YAAjB,CAArB;AACAoU,wBAAY,CAACvK,QAAb,CAAsBrK,KAAtB;AACA,gBAAMgQ,kBAAkB,GAAG,IAAIC,GAAJ,CACzB2E,YAAY,CAAClK,KAAb,CAAmBwF,GAAnB,CAAuB,UAACC,CAAD;AAAA,qBAAOA,CAAC,CAAClE,SAAT;AAAA,aAAvB,CADyB,CAA3B;AAGA,iBAAK4I,kBAAL,CAAwBC,MAAxB,CAA+B9U,KAA/B,EAAsC,CAAtC;AACA,iBAAKoQ,WAAL,GAAmB,KAAKC,aAAL,CAChB3G,MADgB,CACT,UAACrH,IAAD;AAAA,qBAAU2N,kBAAkB,CAACM,GAAnB,CAAuBjO,IAAI,CAAC4J,SAA5B,CAAV;AAAA,aADS,EAEhBiE,GAFgB,CAEZ,UAACK,GAAD;AAAA,qBAASA,GAAG,CAACtE,SAAb;AAAA,aAFY,CAAnB;;AAGA,gBACE,kBAAKlG,wBAAL,CAA8B2E,KAA9B,MAAmC,IAAnC,IAAmCC,aAAnC,GAAmC,MAAnC,GAAmCA,GAAE9E,UAAF,CAAa,CAAb,CAAnC,MAAkD,IAAlD,IAAkD+E,aAAlD,GAAkD,MAAlD,GAAkDA,GAAEd,cAApD,MACA,QAFF,EAGE;AACA,mBAAKqI,mBAAL,GAA2ByC,YAAY,CAAClK,KAAb,CAAmBwF,GAAnB,CAAuB,UAACC,CAAD;AAAA,uBAAOA,CAAC,CAAC/D,UAAT;AAAA,eAAvB,CAA3B;AACA,kBAAM2I,sBAAsB,GAAG,IAAI9E,GAAJ,CAAQ,KAAKkC,mBAAb,CAA/B;AACA,mBAAK1B,mBAAL,GAA2B,KAAKC,WAAL,CAAiBhH,MAAjB,CACzB,UAAC6G,GAAD;AAAA,uBAAS,CAACwE,sBAAsB,CAACzE,GAAvB,CAA2BC,GAA3B,CAAV;AAAA,eADyB,CAA3B;AAGD,aATD,MASO;AACL,mBAAK4B,mBAAL,GAA2ByC,YAAY,CAAClK,KAAb,CACxBwF,GADwB,CACpB,UAACC,CAAD,EAAM;AAAA;;AAAC,8BAAC,CAAC/D,UAAF,MAAY,IAAZ,IAAYzB,aAAZ,GAAY,MAAZ,GAAYA,GAAEsG,SAAd;AAAuB,eADV,EAExBvH,MAFwB,CAEjB,UAAC6G,GAAD;AAAA,uBAAS,CAAC,CAACA,GAAX;AAAA,eAFiB,CAA3B;;AAGA,kBAAMwE,uBAAsB,GAAG,IAAI9E,GAAJ,CAAQ,KAAKkC,mBAAb,CAA/B;;AACA,mBAAKX,mBAAL,GAA2B,KAAKD,WAAL,CACxB7H,MADwB,CACjB,UAACrH,IAAD;AAAA,uBAAU,CAAC0S,uBAAsB,CAACzE,GAAvB,CAA2BjO,IAAI,CAAC4O,SAAhC,CAAX;AAAA,eADiB,EAExBf,GAFwB,CAEpB,UAACuB,IAAD;AAAA,uBAAUC,gCACVD,IADU,GACN;AACPE,+BAAa,YAAK,KAAI,SAAJ,QAAI,WAAJ,GAAI,MAAJ,OAAI,CAAEZ,OAAN,KAAiB,EAAtB,cAA4B,KAAI,SAAJ,QAAI,WAAJ,GAAI,MAAJ,OAAI,CAAEE,SAAN,KAAmB,EAA/C;AADN,iBADM,CAAV;AAAA,eAFoB,CAA3B;AAMD;AACF;;;iBACD,iBAAQjR,KAAR,EAAa;;;AACX,gBAAMgV,aAAa,GAAG,KAAKtP,QAAL,CAAclF,GAAd,CAAkB,YAAlB,CAAtB;AACAwU,yBAAa,CAAC3K,QAAd,CAAuBrK,KAAvB;;AACA,gBACE,kBAAK4F,yBAAL,CAA+B8E,KAA/B,MAAoC,IAApC,IAAoCC,aAApC,GAAoC,MAApC,GAAoCA,GAAE9E,UAAF,CAAa,CAAb,CAApC,MAAmD,IAAnD,IAAmD+E,aAAnD,GAAmD,MAAnD,GAAmDA,GAAEd,cAArD,MACA,QAFF,EAGE;AACA,mBAAK+I,oBAAL,GAA4BmC,aAAa,CAACtK,KAAd,CAAoBwF,GAApB,CAAwB,UAACC,CAAD;AAAA,uBAAOA,CAAC,CAAC/D,UAAT;AAAA,eAAxB,CAA5B;AACA,kBAAM2I,sBAAsB,GAAG,IAAI9E,GAAJ,CAAQ,KAAKkC,mBAAb,CAA/B;AACA,mBAAKxB,oBAAL,GAA4B,KAAKC,YAAL,CAAkBlH,MAAlB,CAC1B,UAAC6G,GAAD;AAAA,uBAAS,CAACwE,sBAAsB,CAACzE,GAAvB,CAA2BC,GAA3B,CAAV;AAAA,eAD0B,CAA5B;AAGD,aATD,MASO;AACL,mBAAKsC,oBAAL,GAA4BmC,aAAa,CAACtK,KAAd,CACzBwF,GADyB,CACrB,UAACC,CAAD,EAAM;AAAA;;AAAC,8BAAC,CAAC/D,UAAF,MAAY,IAAZ,IAAYzB,aAAZ,GAAY,MAAZ,GAAYA,GAAEsG,SAAd;AAAuB,eADT,EAEzBvH,MAFyB,CAElB,UAAC6G,GAAD;AAAA,uBAAS,CAAC,CAACA,GAAX;AAAA,eAFkB,CAA5B;;AAGA,kBAAMwE,wBAAsB,GAAG,IAAI9E,GAAJ,CAAQ,KAAKkC,mBAAb,CAA/B;;AACA,mBAAKE,oBAAL,GAA4B,KAAKD,YAAL,CACzB1I,MADyB,CAClB,UAACrH,IAAD;AAAA,uBAAU,CAAC0S,wBAAsB,CAACzE,GAAvB,CAA2BjO,IAAI,CAAC4O,SAAhC,CAAX;AAAA,eADkB,EAEzBf,GAFyB,CAErB,UAACuB,IAAD;AAAA,uBAAUC,gCACVD,IADU,GACN;AACPE,+BAAa,YAAK,KAAI,SAAJ,QAAI,WAAJ,GAAI,MAAJ,OAAI,CAAEZ,OAAN,KAAiB,EAAtB,cAA4B,KAAI,SAAJ,QAAI,WAAJ,GAAI,MAAJ,OAAI,CAAEE,SAAN,KAAmB,EAA/C;AADN,iBADM,CAAV;AAAA,eAFqB,CAA5B;AAMD;AACF;;;iBACD,eAAMV,GAAN,EAAS;AACPlP,mBAAO,CAACC,GAAR,CAAYiP,GAAZ;;AACA,gBAAIA,GAAG,KAAK,GAAZ,EAAiB;AACf,mBAAKhE,IAAL,GAAY,IAAZ;AACA,mBAAKC,IAAL,GAAY,KAAZ;AACA,mBAAK0B,KAAL,GAAa,IAAb;AACA,mBAAKC,KAAL,GAAa,KAAb;AACD;;AACD,gBAAIoC,GAAG,KAAK,GAAZ,EAAiB;AACf,mBAAKhE,IAAL,GAAY,KAAZ;AACA,mBAAKC,IAAL,GAAY,IAAZ;AACA,mBAAKC,KAAL,GAAa,IAAb;AACA,mBAAKC,KAAL,GAAa,KAAb;AACD;AACF;;;iBACD,+BAAsBgC,KAAtB,EAA6BkE,CAA7B,EAA8B;AAC5BvR,mBAAO,CAACC,GAAR,CAAY,KAAKuN,SAAjB;AACA,iBAAKP,aAAL,GAAqBI,KAAK,CAACH,KAAN,CAAY,GAAZ,CAArB;AACAlN,mBAAO,CAACC,GAAR,CAAY,KAAKgN,aAAjB,EAH4B,CAI5B;AACA;;AACA,iBAAKjJ,OAAL,CACG7E,GADH,CACO,YADP,EAEG,UAFH,EAEeoS,CAFf,EAEkBpS,GAFlB,CAEsB,UAFtB,EAGGgO,QAHH,CAGY,KAAKF,aAAL,CAAmB,CAAnB,CAHZ;AAIA,iBAAKjJ,OAAL,CACG7E,GADH,CACO,YADP,EAEG,UAFH,EAEeoS,CAFf,EAEkBpS,GAFlB,CAEsB,aAFtB,EAGGgO,QAHH,CAGY,KAAKF,aAAL,CAAmB,CAAnB,CAHZ;AAIE,iBAAK2G,KAAL,GAAW,KAAK3G,aAAL,CAAmB,CAAnB,CAAX;AACAjN,mBAAO,CAACC,GAAR,CAAY,KAAK2T,KAAjB,EAf0B,CAgB1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA5T,mBAAO,CAACC,GAAR,CAAY,KAAK+D,OAAL,CAAaqF,KAAzB;AAEH;;;iBACD,gCAAuBgE,KAAvB,EAA8BkE,CAA9B,EAA+B;AAC7BvR,mBAAO,CAACC,GAAR,CAAY,KAAKyN,UAAjB;AACA,gBAAMT,aAAa,GAAGI,KAAK,CAACH,KAAN,CAAY,GAAZ,CAAtB;AACAlN,mBAAO,CAACC,GAAR,CAAYgN,aAAZ;AACA,iBAAK5I,QAAL,CACGlF,GADH,CACO,YADP,EAEG,UAFH,EAEeoS,CAFf,EAEkBpS,GAFlB,CAEsB,UAFtB,EAGGgO,QAHH,CAGYF,aAAa,CAAC,CAAD,CAHzB;AAIA,iBAAK5I,QAAL,CACGlF,GADH,CACO,YADP,EAEG,UAFH,EAEeoS,CAFf,EAEkBpS,GAFlB,CAEsB,aAFtB,EAGGgO,QAHH,CAGYF,aAAa,CAAC,CAAD,CAHzB;AAID;;;iBACD,2BAAkBI,KAAlB,EAAyBkE,CAAzB,EAA0B;AACxB,iBAAKxC,WAAL,CAAiBwC,CAAjB,IAAsBlE,KAAK,CAAC0E,MAAN,CAAa1I,KAAnC;AACD;;;iBACD,8BAAqBgE,KAArB,EAA4BkE,CAA5B,EAA6B;AAC3B,iBAAKiC,kBAAL,CAAwBjC,CAAxB,IAA6BlE,KAAK,CAAC0E,MAAN,CAAa1I,KAAb,CAAmB6D,KAAnB,CAAyB,GAAzB,EAA8B,CAA9B,CAA7B;AACD;;;iBACD,0BAAiB7D,KAAjB,EAAsB;AACpB,mBAAO,KAAKmK,kBAAL,CAAwBhE,IAAxB,CAA6B,aAAG;AAAA,qBAAIqE,GAAG,KAAKxK,KAAK,CAAC,CAAD,CAAjB;AAAA,aAAhC,CAAP;AACD;;;iBACD,+BAAsByK,GAAtB,EAA2BnV,KAA3B,EAAgC;AAC9B,iBAAKmS,mBAAL,CAAyBnS,KAAzB,IAAkCmV,GAAG,CAAClE,SAAtC;AACA,gBAAM6B,qBAAqB,GAAG,IAAI7C,GAAJ,CAAQ,KAAKkC,mBAAb,CAA9B;AACA,iBAAKX,mBAAL,GAA2B,KAAKD,WAAL,CACxB7H,MADwB,CACjB,UAAC6G,GAAD;AAAA,qBAAS,CAACuC,qBAAqB,CAACxC,GAAtB,CAA0BC,GAAG,CAACU,SAA9B,CAAV;AAAA,aADiB,EAExBf,GAFwB,CAEpB,UAACuB,IAAD;AAAA,qBAAUC,gCACVD,IADU,GACN;AACPE,6BAAa,YAAKF,IAAI,CAACV,OAAV,cAAqBU,IAAI,CAACR,SAA1B;AADN,eADM,CAAV;AAAA,aAFoB,CAA3B;AAMD;;;iBACD,8BAAqBvC,KAArB,EAA0B;AAEzB,gBAAM0G,KAAK,GAAG,uFAAd;;AACA,gBAAGA,KAAK,CAACC,IAAN,CAAW3G,KAAK,CAAC0E,MAAN,CAAa1I,KAAxB,MAAmC,KAAtC,EAA4C;AAC3C,mBAAK1D,aAAL,CAAmBxG,GAAnB,CAAuB,YAAvB,EAAqCgO,QAArC,CAA8C,EAA9C;AACA,mBAAKxH,aAAL,CAAmBxG,GAAnB,CAAuB,YAAvB,EAAqC8U,eAArC;AACA,mBAAKtO,aAAL,CAAmBxG,GAAnB,CAAuB,YAAvB,EAAqC+U,sBAArC;AACA,mBAAKC,YAAL,GAAkB,KAAlB;AACA,aALD,MAMI;AACH,mBAAKxO,aAAL,CAAmBxG,GAAnB,CAAuB,YAAvB,EAAqCiV,aAArC,CAAmD,CAAC5S,+DAAD,CAAnD;AACA,mBAAKmE,aAAL,CAAmBxG,GAAnB,CAAuB,YAAvB,EAAqC+U,sBAArC;AACA,mBAAKC,YAAL,GAAkB,IAAlB;AACH;AACE;;;iBACD,8BAAqB9G,KAArB,EAA0B;AAE1B,gBAAM0G,KAAK,GAAG,uFAAd;;AACC,gBAAGA,KAAK,CAACC,IAAN,CAAW3G,KAAK,CAAC0E,MAAN,CAAa1I,KAAxB,MAAmC,KAAtC,EAA4C;AAC3C,mBAAK1D,aAAL,CAAmBxG,GAAnB,CAAuB,YAAvB,EAAqCgO,QAArC,CAA8C,EAA9C;AACC,mBAAKxH,aAAL,CAAmBxG,GAAnB,CAAuB,YAAvB,EAAqC8U,eAArC;AACA,mBAAKtO,aAAL,CAAmBxG,GAAnB,CAAuB,YAAvB,EAAqC+U,sBAArC;AACA,mBAAK7N,UAAL,GAAgB,KAAhB;AACD,aALD,MAMG;AACF,mBAAKV,aAAL,CAAmBxG,GAAnB,CAAuB,YAAvB,EAAqCiV,aAArC,CAAmD,CAAC5S,+DAAD,CAAnD;AACA,mBAAKmE,aAAL,CAAmBxG,GAAnB,CAAuB,YAAvB,EAAqC+U,sBAArC;AACA,mBAAK7N,UAAL,GAAgB,IAAhB;AACG;AACJ;;;;;;;yBA1uDU1D,qBAAkBF;AAAA;;;cAAlBE;AAAkB0R;AAAAC;AAAA;;;;;;;;;;;;;;;;;;ADnB/B7R;;AAIAA;;;;AAJeA;;AAIeA;;AAAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEGtB8R;;AACEA;;AAAGA;AAAAA;;AAAA;;AAAA;AAAA;;AAAwDA;;AAAkCA;;AAC/FA;;;;;;AAD6DA;;AAAAA;;;;;;;;AAsCvDA;;AAA6MA;AAAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAE3MA;;AACAA;;;;;;;;AACDA;;AAAqHA;AAAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAEpHA;;AACAA;;;;;;;;AACAA;;AAAkHA;AAAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAEhHA;;AACFA;;;;;;;;AAzBNA;;AAEEA;;AAAIA;;AAA6BA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA6CA;;AAAmBA;;AAAIA;;AACrGA;;AAAIA;;AAAmBA;;AACvBA;;AAAIA;;AAAoBA;;AAExBA;;AAAIA;;AAAuBA;;AAC3BA;;AAAIA;;AAAqBA;;AACzBA;;AAAIA;;;;AAAqCA;;AACzCA;;AACEA;;AAA6IA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAE3IA;;AACFA;;AACAA;;AAICA;;AAICA;;AAKNA;;AAEFA;;;;;;AA3BkFA;;AAAAA;;AAC1EA;;AAAAA;;AACAA;;AAAAA;;AAEAA;;AAAAA;;AACAA;;AAAAA;;AACAA;;AAAAA;;AAEyDA;;AAAAA;;AAILA;;AAAAA;;AAIEA;;AAAAA;;AAICA;;AAAAA;;;;;;AAvB/DA;;AACEA;;AA8BJA;;;;;;AA9ByBA;;AAAAA;;;;;;AA+BzBA;;AACEA;;AAGFA;;;;;;AAEFA;;AACEA;;AACEA;;AAAiCA;;AAC/BA;;AAAwEA;;AAC5EA;;AACFA;;;;;;;;UC1DSC;AAmBX,4CAAoBC,UAApB,EAA0D3R,WAA1D,EACoBD,MADpB,EAEoBI,GAFpB,EAEkDzE,IAFlD,EAEkE;AAAA;;AAF9C;AAAsC;AACtC;AACA;AAA8B;AApBlD,2BAAmB,EAAnB;AACA,2BAAiC,EAAjC;AACA,2BAA0B,IAAIkW,yCAAJ,EAA1B;AACA,2BAAoB,KAApB;AACA,2BAAY,IAAIC,2FAAJ,EAAZ;AAWA,yBAAUrW,oFAAV;AACA,2BAAsB,CAAC,YAAD,EAAe,cAAf,EAA+B,MAA/B,EAAuC,OAAvC,CAAtB;AAIuE;;;;iBAEvE,oBAAQ;AAAA;;AAEN,iBAAKsW,SAAL,GAAiB;AACfC,wBAAU,EAAE,cADG;AAEfC,wBAAU,EAAG,CAFE;AAGfC,wBAAU,EAAE,IAHG;AAIf;AACAC,wBAAU,EAAE,CAAE;AAAEC,oBAAI,EAAE,MAAR;AAAgB,2BAAW,CAAC,CAAD;AAA3B,eAAF,CALG;AAMfC,mBAAK,EAAE,CAAC,CAAC,CAAD,EAAI,MAAJ,CAAD,CANQ;AAOf;AACAC,wBAAU,EAAE,CACV,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,EAAY,EAAZ,EAAe,CAAC,CAAhB,CADU,EAEV,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,EAAY,EAAZ,EAAe,KAAf,CAFU,CARG;AAYfC,kBAAI,EAAE,cAACC,oBAAD,EAA4BC,QAA5B,EAAwC;AAE5CD,oCAAoB,CAACE,SAArB,GAAiCF,oBAAoB,CAACG,KAArB,GAA6B,CAA9D;AACAH,oCAAoB,CAACI,SAArB,GACEJ,oBAAoB,CAACG,KAArB,GAA6BH,oBAAoB,CAACtM,MADpD;AAEA/I,uBAAO,CAACC,GAAR,CACEoV,oBAAoB,CAACE,SADvB,EAEEF,oBAAoB,CAACI,SAFvB;AAIA,oBAAMC,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAWP,oBAAoB,CAACE,SAArB,GAAiCF,oBAAoB,CAACtM,MAAjE,CAAf;AACA,oBAAM8M,QAAQ,GAAGR,oBAAoB,CAACtM,MAAtC;AACA,oBAAM+M,MAAM,GAACT,oBAAoB,CAACS,MAArB,CAA4BzM,KAAzC;;AACA,uBAAI,CAAC7K,IAAL,CAAUW,GAAV,CAAmB,UAAG,OAAI,CAACd,OAAR,kDAAyDqX,MAAzD,uBAA4EG,QAA5E,qBAA+FC,MAA/F,CAAnB,EACGhR,SADH,CACa,cAAI,EAAG;AAChB;AACA9E,yBAAO,CAACC,GAAR,CAAY8E,IAAZ;;AAFgB,6DAGCA,IAAI,CAACG,MAHN;AAAA;;AAAA;AAAA;AAAA,0BAGPlE,IAHO;AAIdA,0BAAI,CAACuK,cAAL,GAAsB,OAAI,CAACwK,SAAL,CAAe9N,IAAf,CAAoB,UAACsJ,CAAD;AAAA,+BACxCA,CAAC,CAACyE,UAAF,CAAahV,IAAI,CAACuK,cAAlB,CADwC;AAAA,uBAApB,CAAtB;AAIAvK,0BAAI,CAACwK,YAAL,GAAoB,OAAI,CAACuK,SAAL,CAAe9N,IAAf,CAAoB,UAACsJ,CAAD;AAAA,+BACtCA,CAAC,CAACyE,UAAF,CAAahV,IAAI,CAACwK,YAAlB,CADsC;AAAA,uBAApB,CAApB;AARc;;AAGhB,wEAA8B;AAAA;AAQ7B;AAXe;AAAA;AAAA;AAAA;AAAA;;AAahB,yBAAI,CAACyK,UAAL,GAAkBlR,IAAI,CAACmR,cAAvB;AACA,yBAAI,CAACC,YAAL,GAAoBpR,IAAI,CAACoR,YAAzB;AACA,yBAAI,CAACC,SAAL,GAAiBrR,IAAI,CAACG,MAAtB;AACA,yBAAI,CAACmR,SAAL,GAAiB,KAAjB;;AACA,yBAAI,CAACpT,GAAL,CAASyE,YAAT;;AAEA4N,0BAAQ,CAAC;AACPgB,gCAAY,EAAEvR,IAAI,CAACoR,YADZ;AAEPI,mCAAe,EAAExR,IAAI,CAACoR,YAFf;AAGPnV,wBAAI,EAAE;AAHC,mBAAD,CAAR;AAKD,iBAzBH;AA0BD;AAlDc,aAAjB;AAqDA,iBAAK3B,WAAL,GAAmBgE,YAAY,CAACC,OAAb,CAAqB,eAArB,CAAnB,CAvDM,CAwDN;;AACA,iBAAKR,WAAL,CAAiBuC,sBAAjB,CAAwC,YAAxC;AACA,iBAAKvC,WAAL,CAAiBwC,eAAjB,CAAiCR,SAAjC,CAA2C,iBAAO;AAAA,qBAAI,OAAI,CAACU,SAAL,GAAiBD,OAArB;AAAA,aAAlD;AACAvF,mBAAO,CAACC,GAAR,CAAY,KAAKuF,SAAjB;AACD;;;iBACD,6BAAiB;AAAA;;AACf,iBAAK6Q,SAAL,GAAiB,IAAjB;AACA,iBAAK5B,UAAL,CAAgBzP,iBAAhB,GAAoCF,SAApC,CAA8C,kBAAQ,EAAG;AAAA,0DAEtCG,QAAQ,CAACC,MAF6B;AAAA;;AAAA;AAAA;AAAA,sBAE9ClE,IAF8C;AAGrDA,sBAAI,CAACuK,cAAL,GAAsB,OAAI,CAACwK,SAAL,CAAe9N,IAAf,CAAoB,UAACsJ,CAAD;AAAA,2BACxCA,CAAC,CAACyE,UAAF,CAAahV,IAAI,CAACuK,cAAlB,CADwC;AAAA,mBAApB,CAAtB;AAIAvK,sBAAI,CAACwK,YAAL,GAAoB,OAAI,CAACuK,SAAL,CAAe9N,IAAf,CAAoB,UAACsJ,CAAD;AAAA,2BACtCA,CAAC,CAACyE,UAAF,CAAahV,IAAI,CAACwK,YAAlB,CADsC;AAAA,mBAApB,CAApB;AAPqD;;AAEvD,uEAAkC;AAAA;AAQjC,iBAVsD,CAWvD;;AAXuD;AAAA;AAAA;AAAA;AAAA;;AAYvD,qBAAI,CAAC6K,SAAL,GAAiB,KAAjB;;AACA,qBAAI,CAACpT,GAAL,CAASyE,YAAT;;AAEA,qBAAI,CAAC8O,SAAL,CAAezX,IAAf;AACD,aAhBD;AAiBD;;;iBACD,uBAAW;AACT,iBAAKyX,SAAL,CAAeC,WAAf;AACD;;;iBACD,eAAMzV,IAAN,EAAU;AAAA;;AACR0V,oEAAU;AACR;AACAzP,kBAAI,EAAE,qCAAqC,0BAFnC;AAGRC,8BAAgB,EAAE,IAHV;AAIRC,gCAAkB,EAAE,SAJZ;AAKRC,+BAAiB,EAAE,MALX;AAMR;AACAC,8BAAgB,EAAE,IAPV;AAQRC,+BAAiB,EAAE,KARX;AASRC,kBAAI,EAAE,MATE;AAUR6G,uBAAS,EAAE;AAVH,aAAV,EAWG5G,IAXH,CAWQ,UAACtC,MAAD,EAAW;AACjB,kBAAIA,MAAM,CAACuC,WAAP,KAAuB,IAA3B,EAAiC;AAC/B,uBAAI,CAACgN,UAAL,CACGnG,aADH,CACiB,OADjB,EAC0B,OAAI,CAACjP,WAD/B,EAC4C2B,IAD5C,EAEG8D,SAFH,CAEa,UAACgH,QAAD,EAAa;AACtB,sBAAIA,QAAJ,EAAc;AACZ,2BAAI,CAAC9D,QAAL,GAAgB8D,QAAhB;AACA4K,4EAAU;AAAEzP,0BAAI,EAAE,kBAAR;AAA4BM,0BAAI,EAAE;AAAlC,qBAAV,EAAyDC,IAAzD,CAA8D;AAAA,6BAAMmP,MAAM,CAACC,QAAP,CAAgBC,MAAhB,EAAN;AAAA,qBAA9D;AACD;AACF,iBAPH;AAQC;AACF,aAtBH;AAwBC;;;iBAEH,cAAK7V,IAAL,EAAS;AAAA;;AACP0V,oEAAU;AACR;AACAzP,kBAAI,EAAE,sCAAsC,0BAFpC;AAGRC,8BAAgB,EAAE,IAHV;AAIRC,gCAAkB,EAAE,SAJZ;AAKRC,+BAAiB,EAAE,MALX;AAMR;AACAC,8BAAgB,EAAE,IAPV;AAQRC,+BAAiB,EAAE,KARX;AASRC,kBAAI,EAAE,MATE;AAUR6G,uBAAS,EAAE;AAVH,aAAV,EAWG5G,IAXH,CAWQ,UAACtC,MAAD,EAAW;AACjB,kBAAIA,MAAM,CAACuC,WAAP,KAAuB,IAA3B,EAAiC;AAC/B;AACA,uBAAI,CAACgN,UAAL,CACGnG,aADH,CACiB,MADjB,EACyB,OAAI,CAACjP,WAD9B,EAC2C2B,IAD3C,EAEG8D,SAFH,CAEa,UAACgH,QAAD,EAAa;AACtB,sBAAIA,QAAJ,EAAc;AACZ,2BAAI,CAAC9D,QAAL,GAAgB8D,QAAhB;;AACA,2BAAI,CAAC5D,QAAL;;AACAwO,4EAAU;AAAEzP,0BAAI,EAAE,oBAAR;AAA8BM,0BAAI,EAAE;AAApC,qBAAV,EAA2DC,IAA3D,CAAgE;AAAA,6BAAMmP,MAAM,CAACC,QAAP,CAAgBC,MAAhB,EAAN;AAAA,qBAAhE;AACD;AACF,iBARH;AASD;AACF,aAxBD;AAyBD;;;iBACD,iBAAO7V,IAAP,EAAW;AAAA;;AACT0V,oEAAU;AACR;AACAzP,kBAAI,EAAE,sCAAsC,0BAFpC;AAGRC,8BAAgB,EAAE,IAHV;AAIRC,gCAAkB,EAAE,SAJZ;AAKRC,+BAAiB,EAAE,MALX;AAMR;AACAC,8BAAgB,EAAE,IAPV;AAQRC,+BAAiB,EAAE,KARX;AASRC,kBAAI,EAAE,MATE;AAUR6G,uBAAS,EAAE;AAVH,aAAV,EAWG5G,IAXH,CAWQ,UAACtC,MAAD,EAAW;AACjBlF,qBAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BiF,MAA/B;;AACA,kBAAIA,MAAM,CAACuC,WAAP,KAAuB,IAA3B,EAAiC;AAC/B,uBAAI,CAACgN,UAAL,CACGlG,eADH,CACmB,OAAI,CAAClP,WADxB,EACqC2B,IAAI,CAACd,QAD1C,EAEG4E,SAFH,CAEa,UAACgH,QAAD,EAAa;AACtB,sBAAIA,QAAJ,EAAc;AACZ4K,4EAAU;AAAEzP,0BAAI,EAAE,mBAAR;AAA6BM,0BAAI,EAAE;AAAnC,qBAAV,EAA0DC,IAA1D,CAA+D;AAAA,6BAAMmP,MAAM,CAACC,QAAP,CAAgBC,MAAhB,EAAN;AAAA,qBAA/D;AACD;AACF,iBANH;AAOD;AACF,aAtBD;AAuBD;;;iBACD,cAAK7V,IAAL,EAAS;AAAA;;AACP0V,oEAAU;AACR;AACAzP,kBAAI,EAAE,yCAAyC,0BAFvC;AAGRC,8BAAgB,EAAE,IAHV;AAIRC,gCAAkB,EAAE,SAJZ;AAKRC,+BAAiB,EAAE,MALX;AAMR;AACAC,8BAAgB,EAAE,IAPV;AAQRC,+BAAiB,EAAE,KARX;AASRC,kBAAI,EAAE,MATE;AAUR6G,uBAAS,EAAE;AAVH,aAAV,EAWG5G,IAXH,CAWQ,UAACtC,MAAD,EAAW;AACjB,kBAAIA,MAAM,CAACuC,WAAP,KAAuB,IAA3B,EAAiC;AAC/B,oBAAI,OAAI,CAACpI,WAAL,KAAqB2B,IAAI,CAAC6E,SAA9B,EAAyC;AACvC6Q,0EAAU;AAAEzP,wBAAI,EAAE,gCAAR;AAA0CM,wBAAI,EAAE;AAAhD,mBAAV;AACA;AACD;;AACD,uBAAI,CAACkN,UAAL,CACGnG,aADH,CACiB,MADjB,EACyB,OAAI,CAACjP,WAD9B,EAC2C2B,IAD3C,EAEG8D,SAFH,CAEa,UAACgH,QAAD,EAAa;AACtB,sBAAIA,QAAJ,EAAc;AACZ,2BAAI,CAAC9D,QAAL,GAAgB8D,QAAhB;;AACA,2BAAI,CAAC5D,QAAL;;AACAwO,4EAAU;AAAEzP,0BAAI,EAAE,sBAAR;AAAgCM,0BAAI,EAAE;AAAtC,qBAAV,EAA6DC,IAA7D,CAAkE;AAAA,6BAAMmP,MAAM,CAACC,QAAP,CAAgBC,MAAhB,EAAN;AAAA,qBAAlE;AACD;AACF,iBARH;AASD;AACF,aA3BD;AA4BD;;;iBACD,oBAAQ;AACN,gBAAI,KAAK7O,QAAL,CAAcsD,UAAd,KAA6B,MAAjC,EAAyC;AACvC,mBAAKtD,QAAL,CAAcsD,UAAd,GAA2B,GAA3B;AACD;;AACD,gBAAI,KAAKtD,QAAL,CAAcuD,cAAd,KAAiC,GAArC,EAA0C;AACxC,mBAAKvD,QAAL,CAAcuD,cAAd,GAA+B,cAA/B;AACD;;AACD,gBAAI,KAAKvD,QAAL,CAAcuD,cAAd,KAAiC,GAArC,EAA0C;AACxC,mBAAKvD,QAAL,CAAcuD,cAAd,GAA+B,YAA/B;AACD;;AACD,gBAAI,KAAKvD,QAAL,CAAcuD,cAAd,KAAiC,GAArC,EAA0C;AACxC,mBAAKvD,QAAL,CAAcuD,cAAd,GAA+B,YAA/B;AACD;;AACD,gBAAI,KAAKvD,QAAL,CAAcuD,cAAd,KAAiC,GAArC,EAA0C;AACxC,mBAAKvD,QAAL,CAAcuD,cAAd,GAA+B,cAA/B;AACD;;AACD,gBAAI,KAAKvD,QAAL,CAAcwD,YAAd,KAA+B,GAAnC,EAAwC;AACtC,mBAAKxD,QAAL,CAAcwD,YAAd,GAA6B,MAA7B;AACD;;AACD,gBAAI,KAAKxD,QAAL,CAAcwD,YAAd,KAA+B,GAAnC,EAAwC;AACtC,mBAAKxD,QAAL,CAAcwD,YAAd,GAA6B,QAA7B;AACD;;AACD,gBAAI,KAAKxD,QAAL,CAAcyD,YAAd,KAA+B,GAAnC,EAAwC;AACtC,mBAAKzD,QAAL,CAAcyD,YAAd,GAA6B,IAA7B;AACD;;AACD,gBAAI,KAAKzD,QAAL,CAAcyD,YAAd,KAA+B,GAAnC,EAAwC;AACtC,mBAAKzD,QAAL,CAAcyD,YAAd,GAA6B,KAA7B;AACD;AACF;;;iBACD,iBAAQzK,IAAR,EAAY;AACVqC,wBAAY,CAACyT,UAAb,CAAwB,SAAxB;AACA9W,mBAAO,CAACC,GAAR,CAAYe,IAAZ;AACA,iBAAKyT,UAAL,CAAgB7P,QAAhB,CAAyB;AACvBjG,mBAAK,EAAEqC,IAAI,CAACd;AADW,aAAzB;AAGAmD,wBAAY,CAAC0T,OAAb,CAAqB,SAArB,EAA+B/V,IAAI,CAACd,QAApC;AACA,iBAAK2C,MAAL,CAAYmU,aAAZ,CAA0B,YAA1B;AACD;;;iBACD,gBAAG;AACD3T,wBAAY,CAACyT,UAAb,CAAwB,SAAxB;AACA,iBAAKrC,UAAL,CAAgB7P,QAAhB,CAAyB;AACvBjG,mBAAK,EAAE;AADgB,aAAzB;AAGA,iBAAKkE,MAAL,CAAYmU,aAAZ,CAA0B,YAA1B;AACD;;;iBACD,uBAAW;AACTL,kBAAM,CAACC,QAAP,CAAgBC,MAAhB;AACA;;;;;;;yBAvQSrC,4BAAyBD;AAAA;;;cAAzBC;AAAyBH;AAAA4C;AAAAC;AAAAC;AAAAC;AAAA;ADftC7C;;AACIA;;AACEA;;AAAsBA;;AAAUA;;AAClCA;;AACAA;;AACEA;;AACEA;;AAGAA;;AACEA;;AAA2EA;;AAAIA;;AACjFA;;AACFA;;AACAA;;AACAA;;AAEEA;;AACEA;;AAECA;;AAAKA;;AAAWA;;AACfA;;AAAIA;;AAAIA;;AACRA;;AAAIA;;AAAIA;;AACRA;;AAAIA;;AAAWA;;AACfA;;AAAIA;;AAAaA;;AACjBA;;AAAIA;;AAAIA;;AACRA;;AAAIA;;AAAMA;;AAGZA;;AACFA;;AACAA;;AAgCFA;;AAKFA;;AACAA;;AAMFA;;AACAA;;AACFA;;;;AAtE+BA;;AAAAA;;AAIlBA;;AAAAA;;AAIyBA;;AAAAA;;AAgBtBA;;AAAAA;;AAgCFA;;AAAAA;;AAMKA;;AAAAA;;;;;;;;;","names":["API_URL","src_app_shared_config_app_constant__WEBPACK_IMPORTED_MODULE_0__","AddSystemService","http","rxjs__WEBPACK_IMPORTED_MODULE_1__","rxjs__WEBPACK_IMPORTED_MODULE_2__","index","paramSource","asObservable","Index","next","addSsytem","user","post","get","operation","currentUser","put","id","params","subject","userIdLoggedIn","messageTranslationDto","transId","transIddel","_angular_common_http__WEBPACK_IMPORTED_MODULE_3__","append","console","log","systemId","files","formData","FormData","key","url","driverClassName","username","password","encodePwd","btoa","tablename","code","addSystem","data","_angular_core__WEBPACK_IMPORTED_MODULE_4__","factory","providedIn","AddSystemModule","_angular_common__WEBPACK_IMPORTED_MODULE_6__","angular_datatables__WEBPACK_IMPORTED_MODULE_0__","_add_system_routing_module__WEBPACK_IMPORTED_MODULE_1__","_angular_forms__WEBPACK_IMPORTED_MODULE_7__","src_app_shared_components_components_module__WEBPACK_IMPORTED_MODULE_3__","ngx_spinner__WEBPACK_IMPORTED_MODULE_8__","_ng_select_ng_select__WEBPACK_IMPORTED_MODULE_9__","declarations","_add_system_component__WEBPACK_IMPORTED_MODULE_2__","_add_system_summary_add_system_summary_component__WEBPACK_IMPORTED_MODULE_4__","imports","routes","path","component","canDeactivate","src_app_shared_guards_can_deactivate_guard__WEBPACK_IMPORTED_MODULE_0__","_add_system_summary_add_system_summary_component__WEBPACK_IMPORTED_MODULE_1__","AddSystemRoutingModule","_angular_router__WEBPACK_IMPORTED_MODULE_4__","exports","_angular_core__WEBPACK_IMPORTED_MODULE_5__","mkey_r74","AddSystemComponent","fb","router","roleService","toastService","spinner","cdr","src_app_shared_models_fmosNewRolePermissions__WEBPACK_IMPORTED_MODULE_0__","rxjs__WEBPACK_IMPORTED_MODULE_6__","idValue","localStorage","getItem","tempArrayList","fetchingHeadertag","messsageTypeArray","queArray","encryptionArray","selections","serviceTypeArray","protocolArray","buildForm","tcpForm","group","sysService","array","createSysService","tcpForm1","createSysService1","messageConfigurationForm1","sysChannel","createSysChannel1","messageConfigurationForm","createSysChannel","setIndex","getIndex","subscribe","resp","fecthingAddSystem","dataresp","result","getRespBasedOnId","loading","fetchScreenPermissions","screenLabelList","message","roleCodes","setTimeout","item","basicInfoForm","createdTime","creatorId","systemCode","systemName","serviceType","messsageType","medianIp","sourceUri","medianUri","medianPort","sourceIp","sourcePort","isExit","touched","formTouched1","formTouched2","formTouched3","formTouched4","formTouched5","saved","sweetalert2__WEBPACK_IMPORTED_MODULE_1___default","text","showCancelButton","confirmButtonColor","cancelButtonColor","cancelButtonText","confirmButtonText","icon","then","isConfirmed","markForCheck","Promise","resolve","reject","arg0","fileUploadClick","respData","find","auditLog","editFlag","arrayMessageConfig","filter","messageType","fileUploadClickAll","onProtocalSlection","messageChannel","fetchingIso","label2","messageFormat","fetchingXMl","formArrMessageConfig","length","removeAt","forEach","x","push","formArr","value","_a","_b","arrayMessageConfig1","onProtocalSlection1","formArrMessageConfig1","array1","formArr1","_c","_d","hide","channelId","dbConnectString","dbPassword","dbServiceName","dbUsername","queueChannel","queueConnFactory","queueManager","queueName","queueType","dataType","encryption","headerTag","headerValue","messageBasis","messageKey","serviceId","systemChannelId","tab1","tab2","tab21","tab22","approverId","approvedStatus","recordStatus","approvedEver","validateCode","isSysCodeAlreadyExist","exists","sysCodeError","response","undefined","title","all","ipAddressValidating","basicConfiguration","messageConfiguration","incomingMessageConfiguration","xml","mdbXml","incomingMdbXml","dbConnection","mdb","tableFlag","fetchDatabaseTable","tab11","tab12","pingDataSource","table","filteredHomes","split","setValue","table2","event","tableDropDownClick","coulmnNameBasedonTableName","tabelData","tableDropDownClick1","tabelData1","payload","validatePort","error","tableFlag1","fetchingIso1","label3","fetchingXMl1","fetchDatabaseTable1","tableFlag2","iconColor","obj_test","editaddsystem","deleteAddSystem","navigate","dataType1","enteredRecord","selectedHeaderTags","Set","map","d","headerArray","headerTagData","has","val","messageKeys","xmlRespDataFiltered","xmlRespData","xmlRespDataFiltered1","xmlRespData1","some","mdmtSystemService","fieldNo","Number","fieldName","addSysResp","previous","submittingAddSystem","fetchingIsoForTcp","isoResp","isoRespData","isoRespDataFiltered","mKey","Object","formattedmKey","messageBasisIso","messageKeyIso","typeDataIso","headerValueIso","valFieldMapper","reduce","acc","selectedMessageKeys","isoRespData1","isoRespDataFiltered1","messageBasisIso1","messageKeyIso1","typeDataIso1","headerValueIso1","gettinXMLmsgIncoming","xmlResp","i","selectedMessageKeys1","selectedMessageKeySet","fetchingHeaderTag","document","getElementById","click","selectedFiles","target","sizeOfFile","size","currentFileUpload","fileName","name","fileUploadWrapper","nativeElement","setAttribute","gettingHederofXMl","uploadXmlResp","nodeTagList","selectedFiles1","sizeOfFile1","currentFileUpload1","fileName1","fileUploadWrapper1","uploadXmlResp1","keys","nodeValueMap","fileNameOut","err","slice","submitFlagAll","deleteRecord","dbConnectionOption","splice","selectedMessageKeysSet","deleteRecord1","jhnbn","opt","evt","regex","test","clearValidators","updateValueAndValidity","externalPort","setValidators","selectors","viewQuery","_angular_core__WEBPACK_IMPORTED_MODULE_6__","AddSystemSummaryComponent","apiService","rxjs__WEBPACK_IMPORTED_MODULE_7__","src_app_shared_models_fmosNewRolePermissions__WEBPACK_IMPORTED_MODULE_1__","dtOptions","pagingType","pageLength","serverSide","columnDefs","type","order","lengthMenu","ajax","dataTablesParameters","callback","minNumber","start","maxNumber","pageNo","Math","floor","pageSize","search","statusArr","startsWith","totalPages","totalNoOfPages","totalRecords","respArray","isLoading","recordsTotal","recordsFiltered","dtTrigger","unsubscribe","sweetalert2__WEBPACK_IMPORTED_MODULE_2___default","window","location","reload","removeItem","setItem","navigateByUrl","decls","vars","consts","template"],"sources":["webpack:///src/app/shared/services/add-system.service.ts","webpack:///src/app/views/addSystem/add-System/add-System.module.ts","webpack:///src/app/views/addSystem/add-System/add-system-routing.module.ts","webpack:///src/app/views/addSystem/add-System/add-system.component.html","webpack:///src/app/views/addSystem/add-System/add-system.component.ts","webpack:///src/app/views/addSystem/add-system-summary/add-system-summary.component.html","webpack:///src/app/views/addSystem/add-system-summary/add-system-summary.component.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { AppConstants } from 'src/app/shared/config/app.constant';\r\nimport { Subject, Observable, BehaviorSubject } from 'rxjs';\r\n\r\n\r\n\r\nexport const API_URL = AppConstants.baseURL;\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AddSystemService {\r\n\r\n\r\n  constructor(private http: HttpClient) { }\r\n  private subject = new Subject<any>();\r\n  // Post\r\n  private Index = new BehaviorSubject<any>({\r\n    index: '',\r\n  })\r\n  setIndex(index: any) {\r\n    this.Index.next(index);\r\n  }\r\n\r\n  getIndex() {\r\n    return this.Index.asObservable();\r\n  }\r\n  submittingAddSystem(addSsytem, user) {\r\n    return this.http.post<any>(`${API_URL}/newExtApi/create/${user}`, addSsytem);\r\n  }\r\n  //geting external System\r\n  fecthingAddSystem() {\r\n    return this.http.get<any>(`${API_URL}/newExtApi/getAllExternalSys/?pageNo=${0}&pageSize=${1000}`);\r\n  }\r\n  //update\r\n  editaddsystem(operation, currentUser, addSsytem) {\r\n    return this.http.put<any>(`${API_URL}/newExtApi/${operation}/${currentUser}`, addSsytem)\r\n  }\r\n  //fetching addsystem based on id\r\n\r\n  fetchingAddSysBasedonId(id) {\r\n    return this.http.get<any>(`${API_URL}/newExtApi/getExternalSysDetails/${id}`)\r\n  }\r\n  // delete\r\n  deleteingAddSystem() {\r\n    return this.http.delete<any>(`${API_URL}//`);\r\n  }\r\n  // sendingAddSystemDataToEditScreen\r\n  sendingAddSystemDataToEditScreen(params: any) {\r\n\r\n    this.subject.next(params);\r\n  }\r\n\r\n  editruleTranslation(operation, userIdLoggedIn, messageTranslationDto) {\r\n    return this.http.put<any>(`${API_URL}/msgApi/${operation}/${userIdLoggedIn}`, messageTranslationDto)\r\n  }\r\n\r\n  deleteRuleTranslation(userIdLoggedIn, transId) {\r\n    let transIddel = new HttpParams();\r\n    transId = transIddel.append('transId', transId);\r\n    console.log(\"tra\", transId);\r\n\r\n    return this.http.delete<any>(`${API_URL}/msgApi/deleteRecord/${userIdLoggedIn}`, {\r\n      params: transId\r\n    });\r\n  }\r\n\r\n  deleteAddSystem(userIdLoggedIn, systemId) {\r\n    return this.http.delete<any>(`${API_URL}/newExtApi/delete/${userIdLoggedIn}?systemId=${systemId}`);\r\n  }\r\n\r\n  getEditOfAddSystem(): Observable<any> {\r\n    return this.subject.asObservable();\r\n  }\r\n  private paramSource = new BehaviorSubject({});\r\n  getNavParam = this.paramSource.asObservable();\r\n\r\n  sendNavParam(params: object) {\r\n    this.paramSource.next(params)\r\n  }\r\n  // Audit log methods--->add System starts\r\n  onAuthofAddSystem(addSsytem, userIdLoggedIn) {\r\n    return this.http.put<any>(`${API_URL}/newExtApi/authorizetherecord/${userIdLoggedIn}`, addSsytem);\r\n  }\r\n  onCloseOfAddSystem(addSsytem, userIdLoggedIn) {\r\n    return this.http.put<any>(`${API_URL}/newExtApi/toClosingTheRecord/${userIdLoggedIn}`, addSsytem);\r\n  }\r\n  onopenOfAddSystem(addSsytem, userIdLoggedIn) {\r\n    return this.http.put<any>(`${API_URL}/newExtApi/closeRecord/${userIdLoggedIn}`, addSsytem);\r\n  }\r\n  onDeleteAddSystem(addSsytem, userIdLoggedIn) {\r\n    return this.http.put<any>(`${API_URL}/newExtApi/delete/${userIdLoggedIn}`, addSsytem);\r\n  }\r\n  // Audit log methods--->add System ends\r\n  // http and xml incoming\r\n  //add system screen uplaod xml\r\n  gettingHederofXMl(files: File) {\r\n    var formData = new FormData();\r\n    let key = 'header';\r\n    formData.append('file', files);\r\n    formData.append('key', key);\r\n\r\n    console.log(formData);\r\n    return this.http.post<any>(`${API_URL}/convertMsg/convertXmlToNodeTagList`, formData);\r\n  }\r\n  gettingBodyOfXml(files: File) {\r\n    var formData = new FormData();\r\n    let key = 'body';\r\n    formData.append('file', files);\r\n    formData.append('key', key);\r\n\r\n    console.log(formData);\r\n    return this.http.post<any>(`${API_URL}/convertMsg/convertXmlToNodeTagList`, formData);\r\n  }\r\n  // For rule transaltion upload xml\r\n  selectFileFORHTTPXMLIncoming(files: File) {\r\n    var formData = new FormData();\r\n\r\n    formData.append('file', files);\r\n    return this.http.post<any>(`${API_URL}/file/getHeaders`, formData);\r\n  }\r\n  fetchingXMLandHttp() {\r\n    return this.http.get<any>(`${API_URL}/msgApi/getXmlMsgField`);\r\n  }\r\n  fetchingIsoForTcp() {\r\n    return this.http.get<any>(`${API_URL}/msgApi/getIsoMsgField`);\r\n  }\r\n  gettinXMLmsgIncoming() {\r\n    return this.http.get<any>(`${API_URL}/msgApi/getXmlMsgField`);\r\n  }\r\n  // db cnnection-->credentials api\r\n  pingDataSource(url, driverClassName, username, password) {\r\n    let encodePwd = btoa(password);\r\n    return this.http.get<[]>(`${API_URL}/db/ping/${url}/${driverClassName}/${username}/${encodePwd}`)\r\n  }\r\n  // db connection -->column name\r\n  coulmnNameBasedonTableName(url, driverClassName, username, password, tablename) {\r\n    let encodePwd = btoa(password);\r\n    return this.http.get<any>(`${API_URL}/db/ping/${url}/${driverClassName}/${username}/${encodePwd}/${tablename}`)\r\n  }\r\n  //fetching header tag\r\n  fetchingHeaderTag() {\r\n    return this.http.get<any>(`${API_URL}/newExtApi/getAllHeadTag`);\r\n  }\r\n  validateCode(code: any) {\r\n    return this.http.get<any>(`${API_URL}/newExtApi/addSystem/validateCode/${code}`);\r\n  }\r\n  validatePort(addSystem) {\r\n    return this.http.post<any>(`${API_URL}/newExtApi/validate/addSystem`,addSystem);\r\n  }\r\n  \r\n  conversionApi(data){\r\n//     const httpOptions = {\r\n//       headers: new HttpHeaders({\r\n//         'Content-Type':  'application/xml',\r\n//         'Accept':  'application/xml',\r\n//         'Response-Type':'text'\r\n//       }),\r\n//     };\r\n//     var payload=\t`<Cust-Account-IO>\r\n// \t\t<ACC>5211388001</ACC>\r\n// \t\t<BRN>009</BRN>\r\n// \t</Cust-Account-IO>\r\n// </FCUBS_BODY>\r\n// <xmlns>http://fcubs.ofss.com/service/FCUBSAccService</xmlns>\r\n// <destination_ip>123.32.23.36</destination_ip>\r\n// <outgoing_msg>xml</outgoing_msg>\r\n// <destination_port>4353</destination_port>\r\n// <source_port>4342</source_port>\r\n// <incoming_msg>json</incoming_msg>\r\n// <FCUBS_HEADER>\r\n// \t<BRANCH>009</BRANCH>\r\n// \t<SOURCE_OPERATION>QueryCustAcc</SOURCE_OPERATION>\r\n// \t<CORRELID>RMDE73275143</CORRELID>\r\n// \t<PASSWORD>+sysgQGeOcA=</PASSWORD>\r\n// \t<OPERATION>QueryCustAcc</OPERATION>\r\n// \t<MODULEID>ST</MODULEID>\r\n// \t<UBSCOMP>FCUBS</UBSCOMP>\r\n// \t<SOURCE>XMLMEDACCLOSE</SOURCE>\r\n// \t<USERID>XMLMEDIANUSR</USERID>\r\n// \t<FUNCTIONID>STQCUSAC</FUNCTIONID>\r\n// \t<SERVICE>FCUBSAccService</SERVICE>\r\n// \t<MSGID>RMDE73275143</MSGID>\r\n// </FCUBS_HEADER>\r\n// <source_ip>123.32.23.34</source_ip>`\r\n   \r\n    return this.http.post<any>(`${API_URL}/message/readMessage` , data)\r\n  }\r\n  fetchTableName(addSystem) {\r\n    return this.http.post<any>(`${API_URL}/newExtApi/validate/addSystem`,addSystem);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { DataTablesModule } from 'angular-datatables';\r\nimport { AddSystemRoutingModule } from './add-system-routing.module';\r\nimport { AddSystemComponent } from './add-system.component';\r\nimport { ComponentsModule } from 'src/app/shared/components/components.module';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { AddSystemSummaryComponent } from '../add-system-summary/add-system-summary.component';\r\nimport { NgxSpinnerModule } from 'ngx-spinner';\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\n\r\n@NgModule({\r\n  declarations: [AddSystemComponent,AddSystemSummaryComponent],\r\n  imports: [\r\n    CommonModule,\r\n    DataTablesModule,\r\n    AddSystemRoutingModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    ComponentsModule,\r\n    NgxSpinnerModule,\r\n    NgSelectModule\r\n  ]\r\n})\r\nexport class AddSystemModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { CanDeactivateGuard } from 'src/app/shared/guards/can-deactivate.guard';\r\nimport { AddSystemSummaryComponent } from '../add-system-summary/add-system-summary.component';\r\nimport { AddSystemComponent } from './add-system.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: AddSystemComponent,\r\n    canDeactivate: [CanDeactivateGuard]\r\n  },\r\n  {\r\n    path: 'summary',\r\n    component: AddSystemSummaryComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AddSystemRoutingModule { }\r\n\r\n\r\n\r\n","<ng-container *ngIf=\"loading\">\r\n  <span class=\"indicator-progress\">Please wait...\r\n    <span class=\"spinner-border spinner-border-sm align-middle ms-2\"></span></span>\r\n</ng-container>\r\n<div class=\"pageContentMain\" *ngIf=\"!loading\">\r\n  <div class=\"pageTitleCol\">\r\n    <h2 class=\"pageTitle\">Add System</h2>\r\n  </div>\r\n\r\n  <form action=\"\" class=\"formStyle\" [formGroup]=\"basicInfoForm\" *ngIf=\"basicConfiguration\">\r\n    <div class=\"dbCardStyle\">\r\n      <div class=\"titleStyle mt-2 mb-4\">\r\n        <h2 class=\"pageTitle\">System Information</h2>\r\n      </div>\r\n      <fieldset [disabled]=\"!editFlag\">\r\n      <div class=\"row gy-4\">\r\n        <div class=\"col-lg-3\">\r\n          <label for=\"codeLbl\" class=\"formLbl\">Code<span class=\"colorRed\">*</span></label>\r\n          <input id=\"codeLbl\" type=\"text\" [readonly]=\"!editFlag\" formControlName=\"systemCode\" class=\"form-control\" value=\"\">\r\n        </div>\r\n        <div class=\"col-lg-3\">\r\n          <label for=\"name\" class=\"formLbl\">Name<span class=\"colorRed\">*</span></label>\r\n          <input id=\"name\" type=\"text\" [readonly]=\"!editFlag\" formControlName=\"systemName\" class=\"form-control\" value=\"\">\r\n        </div>\r\n        <div class=\"col-lg-3\">\r\n          <label for=\"name\" class=\"formLbl\">Type<span class=\"colorRed\">*</span></label>\r\n          <select class=\"form-select\" formControlName=\"serviceType\" aria-label=\"Default select example\">\r\n            <!-- <option *ngFor=\"let i of serviceTypeArray\" [ngValue]=\"i\">{{i}}</option> -->\r\n            <option hidden value=\"\" disabled selected >--Please select--</option>\r\n            <option value=\"client\">client</option>\r\n            <option value=\"server\">server</option>\r\n            \r\n        \r\n\r\n          </select>\r\n        </div>\r\n        <div class=\"col-lg-3\" >\r\n\r\n          <label for=\"name\" class=\"formLbl\">Messages Type<span class=\"colorRed\">*</span></label>\r\n\r\n          <select class=\"form-select\"  formControlName=\"messsageType\" aria-label=\"Default select example\" placeholder=\"Please Select\">\r\n            <!-- <option *ngFor=\"let i of messsageTypeArray\" [value]=\"i\">{{\r\n              i\r\n              }}</option> -->\r\n            <option hidden value=\"\" disabled selected >--Please select--</option>\r\n            <option value=\"A\">All</option>\r\n            <option value=\"I\">Incoming</option>\r\n            <option value=\"O\">Outgoing</option>\r\n           \r\n          </select>\r\n        </div>\r\n        </div>\r\n        <div class=\"row gy-4 mt-2\">\r\n        <div class=\"col-lg-3\">\r\n          <label for=\"externalIp\" class=\"formLbl\">External IP/Domain<span class=\"colorRed\">*</span></label>\r\n          <input id=\"externalIp\" [readonly]=\"!editFlag\"\r\n            formControlName=\"sourceIp\" type=\"text\" class=\"form-control\" value=\"\" (keyup)=\"extAddressValidation($event)\">\r\n          <!-- <div class=\"invalid-feedback\"\r\n            *ngIf=\"basicInfoForm.get('sourceIp').touched && !basicInfoForm.get('sourceIp').valid\">\r\n            <div *ngIf=\"\r\n          basicInfoForm.get('sourceIp').errors.pattern\r\n        \">\r\n              IP Address is not valid</div>\r\n          </div> -->\r\n        </div>\r\n        <div class=\"col-lg-3\">\r\n          <label for=\"externalPort\" class=\"formLbl\">External Port<span class=\"colorRed\" *ngIf=\"externalPort\">*</span></label>\r\n          <input id=\"externalPort\" [readonly]=\"!editFlag\" type=\"number\" maxlength=\"4\" minlength=\"2\" formControlName=\"sourcePort\" type=\"text\"\r\n            class=\"form-control\" value=\"\">\r\n          <!-- <div class=\"invalid-feedback\"\r\n            *ngIf=\"basicInfoForm.get('sourcePort').touched && !basicInfoForm.get('sourcePort').valid\">\r\n            <div *ngIf=\"\r\n            basicInfoForm.get('sourcePort').hasError('minlength')\r\n          \">\r\n\r\n              External Port must be at least 2 numbers.</div>\r\n          </div> -->\r\n        </div>\r\n        <!-- <div class=\"col-lg-3\">\r\n          <label for=\"medianPort\" class=\"formLbl\">External URI<span class=\"colorRed\">*</span></label>\r\n          <input id=\"medianPort\" [readonly]=\"!editFlag\" type=\"text\"  formControlName=\"sourceUri\" type=\"text\"\r\n            class=\"form-control\" value=\"\">\r\n\r\n       \r\n        </div> -->\r\n        </div>\r\n        <div class=\"row gy-4 mt-2\">\r\n          <div class=\"col-lg-3\">\r\n            <label for=\"medianIp\" class=\"formLbl\">Median IP/Domain<span class=\"colorRed\">*</span></label>\r\n            <input id=\"medianIp\" [readonly]=\"!editFlag\" formControlName=\"medianIp\" type=\"text\" class=\"form-control\" value=\"\" (keyup)=\"medAddressValidation($event)\">\r\n            <!-- <div class=\"invalid-feedback\"\r\n              *ngIf=\"basicInfoForm.get('medianIp').touched && !basicInfoForm.get('medianIp').valid\">\r\n              <div *ngIf=\"\r\n              basicInfoForm.get('medianIp').errors.pattern\r\n            \">\r\n                IP Address is not valid</div>\r\n            </div> -->\r\n          </div>\r\n        <div class=\"col-lg-3\">\r\n          <label for=\"medianPort\" class=\"formLbl\">Median Port<span class=\"colorRed\" *ngIf=\"medianPort\">*</span></label>\r\n          <input id=\"medianPort\" [readonly]=\"!editFlag\" type=\"number\" maxlength=\"4\" minlength=\"2\" formControlName=\"medianPort\" type=\"text\"\r\n            class=\"form-control\" value=\"\">\r\n\r\n          <!-- <div class=\"invalid-feedback\"\r\n            *ngIf=\"basicInfoForm.get('medianPort').touched && !basicInfoForm.get('medianPort').valid\">\r\n            <div *ngIf=\"\r\n            basicInfoForm.get('medianPort').hasError('minlength')\r\n          \">\r\n\r\n              Median Port must be at least 2 numbers.</div>\r\n          </div> -->\r\n        </div>\r\n\r\n        <!-- <div class=\"col-lg-3\">\r\n          <label for=\"medianPort\" class=\"formLbl\">Median URI<span class=\"colorRed\">*</span></label>\r\n          <input id=\"medianPort\" [readonly]=\"!editFlag\" type=\"text\"  formControlName=\"medianUri\" type=\"text\"\r\n            class=\"form-control\" value=\"\">\r\n\r\n       \r\n        </div>\r\n         -->\r\n     \r\n        </div>\r\n      \r\n      </fieldset>\r\n      \r\n    </div>\r\n   \r\n  </form>\r\n  <form action=\"\" class=\"formStyle\" [formGroup]=\"messageConfigurationForm\"\r\n    *ngIf=\"(messageConfiguration && basicInfoForm.value.messsageType !== 'A') || (!editFlag && basicInfoForm.value.messsageType !== 'A')\">\r\n    <div class=\"dbCardStyle\" formArrayName=\"sysChannel\"\r\n      *ngFor=\"let item of messageConfigurationForm.get('sysChannel')['controls']; let i = index;\">\r\n      <fieldset [disabled]=\"!editFlag\">\r\n      <div class=\"titleStyle mt-2 mb-4\">\r\n        <h2 class=\"pageTitle\">{{messageType}} Message Configuration</h2>\r\n      </div>\r\n      <!-- <label for=\"name\" class=\"formLbl\">{{messageType}} Message Configuration</label> -->\r\n      <div class=\"row gy-4\" [formGroupName]=\"i\">\r\n        <div class=\"col-lg-4\">\r\n          <label for=\"name\" class=\"formLbl\">{{messageType}} Message Protocol</label>\r\n          <select class=\"form-select\" formControlName=\"messageChannel\" aria-label=\"Default select example\"\r\n            (change)=\"onProtocalSlection($event.target.value)\">\r\n            <!-- <option *ngFor=\"let i of protocolArray\" [value]=\"i\">{{\r\n              i\r\n              }}</option> -->\r\n              <option hidden value=\"\" disabled selected >--Please select--</option>\r\n            <option value=\"TCP/IP\">TCP/IP</option>\r\n            <option value=\"Https/Http\">HTTPS/HTTP\r\n            </option>\r\n            <option value=\"MDB\">MDB</option>\r\n            <option value=\"EJB\">EJB</option>\r\n            <option value=\"DB Connection\">DB Connection\r\n            </option>\r\n          </select>\r\n        </div>\r\n        <div class=\"col-lg-4\" *ngIf=\"messageConfigurationForm.value.sysChannel[0].messageChannel !== 'DB Connection'\">\r\n          <label for=\"name\" class=\"formLbl\">Data Type</label>\r\n          <select class=\"form-select\" formControlName=\"messageFormat\" aria-label=\"Default select example\" >\r\n            <option hidden value=\"\" disabled selected >--Please select--</option>\r\n            <option *ngFor=\"let i of dataType\"  [value]=\"i\">{{\r\n              i\r\n              }}</option>\r\n          </select>\r\n        </div>\r\n        <div class=\"col-lg-4\" *ngIf=\"messageConfigurationForm.value.sysChannel[0].messageChannel === 'MDB' \">\r\n          <label for=\"name\" class=\"formLbl\">Type of Queue</label>\r\n          <select class=\"form-select\" formControlName=\"queueType\" aria-label=\"Default select example\">\r\n            <option *ngFor=\"let i of queArray\" [value]=\"i\">{{i}}</option>\r\n\r\n          </select>\r\n        </div>\r\n        <div class=\"col-lg-4\"\r\n          *ngIf=\"messageConfigurationForm.value.sysChannel[0].messageChannel === 'MDB' && messageConfigurationForm.value.sysChannel[0].queueType\">\r\n          <label for=\"name\" class=\"formLbl\">Queue Manager</label>\r\n          <input id=\"queueManager\" type=\"text\" formControlName=\"queueManager\" class=\"form-control\"\r\n            placeholder=\"Queue manager\" value=\"\">\r\n        </div>\r\n        <div class=\"col-lg-4\"\r\n          *ngIf=\"messageConfigurationForm.value.sysChannel[0].messageChannel === 'MDB' && messageConfigurationForm.value.sysChannel[0].queueType\">\r\n          <label for=\"name\" class=\"formLbl\">Queue Name</label>\r\n          <input id=\"queueName\" type=\"text\" formControlName=\"queueName\" class=\"form-control\" placeholder=\"Queue Name\"\r\n            value=\"\">\r\n        </div>\r\n        <div class=\"col-lg-4\"\r\n          *ngIf=\"messageConfigurationForm.value.sysChannel[0].messageChannel === 'MDB' && messageConfigurationForm.value.sysChannel[0].queueType === 'IBM' \">\r\n          <label for=\"name\" class=\"formLbl\">Connection Factory</label>\r\n          <input id=\"connectFactory\" type=\"text\" formControlName=\"queueConnFactory\" class=\"form-control\"\r\n            placeholder=\"Connectiong Factory\" value=\"\">\r\n        </div>\r\n        <div class=\"col-lg-4\"\r\n          *ngIf=\"messageConfigurationForm.value.sysChannel[0].messageChannel === 'MDB' && messageConfigurationForm.value.sysChannel[0].queueType === 'JMS' \">\r\n          <label for=\"name\" class=\"formLbl\">Connection Channel</label>\r\n          <input id=\"queChannel\" type=\"text\" formControlName=\"queueChannel\" class=\"form-control\"\r\n            placeholder=\"Queue Channel\" value=\"\">\r\n        </div>\r\n        <div class=\"col-lg-4\" *ngIf=\"messageConfigurationForm.value.sysChannel[0].messageChannel === 'DB Connection'\">\r\n          <label for=\"name\" class=\"formLbl\" >User Name</label>\r\n          <input id=\"userName\" type=\"text\" formControlName=\"dbUsername\" class=\"form-control\" placeholder=\"User Name\" value=\"\">\r\n        </div>\r\n        <div class=\"col-lg-4\" *ngIf=\"messageConfigurationForm.value.sysChannel[0].messageChannel === 'DB Connection'\">\r\n          <label for=\"name\" class=\"formLbl\" >Password</label>\r\n          <input id=\"password\" type=\"password\" formControlName=\"dbPassword\" class=\"form-control\" placeholder=\"Password\" value=\"\">\r\n        </div>\r\n        <div class=\"col-lg-4\" *ngIf=\"messageConfigurationForm.value.sysChannel[0].messageChannel === 'DB Connection'\">\r\n          <label for=\"name\" class=\"formLbl\" >Database</label>\r\n          <input id=\"databaseName\" type=\"text\" formControlName=\"dbServiceName\" class=\"form-control\" placeholder=\"Database Name\" value=\"\">\r\n        </div>\r\n        <div class=\"col-lg-4\" *ngIf=\"messageConfigurationForm.value.sysChannel[0].messageChannel === 'DB Connection'\">\r\n          <label for=\"name\" class=\"formLbl\" >Connecting String</label>\r\n          <input id=\"connectString\" type=\"text\" formControlName=\"dbConnectString\" class=\"form-control\" placeholder=\"Connecting String\" value=\"\">\r\n        </div>\r\n      </div>\r\n      </fieldset>\r\n      <div class=\"row g-3 pb-3 pt-4 justify-content-end\" *ngIf=\"editFlag\">\r\n        <div class=\"col-auto\">\r\n          <button type=\"button\" (click)=\"next('messageConfiguration')\" \r\n            class=\"btn smBtn minWdSmBtn btnPrimary\">Next</button>\r\n        </div>\r\n        <div class=\"col-auto\">\r\n          <button  type=\"button\" (click)=\"previous('messageConfiguration')\" class=\"btn smBtn minWdSmBtn btnDarkGrey\">Previous</button  >\r\n        </div>\r\n\r\n        <!-- <div class=\"col-auto\">\r\n          <button  type=\"button\" href=\"role-new.html\" class=\"btn smBtn minWdSmBtn btnSecondary\">Reset</button  >\r\n        </div> -->\r\n\r\n        <div class=\"col-auto\">\r\n          <button  type=\"button\" href=\"javascript:void(0);\" [routerLink]=\"['/addSystem/summary']\" class=\"btn smBtn minWdSmBtn btnSecondary\">Exit</button  >\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n  </form>\r\n  \r\n  <div action=\"\" class=\"formStyle\" *ngIf=\"(mdb && basicInfoForm.value.messsageType !== 'A') || ((this.messageConfigurationForm.value.sysChannel[0].messageFormat==='FLATFILE' || this.messageConfigurationForm.value.sysChannel[0].messageFormat==='CSV/EXCEL' ) &&  this.basicInfoForm.value.messsageType != 'A'  && !editFlag)\">\r\n    \r\n    <!-- <label for=\"name\" class=\"formLbl\">Header and Service Details</label> -->\r\n    <div class=\"col-lg-4\">\r\n      <label for=\"name\" class=\"formLbl\">Folder Name</label>\r\n      <input type=\"text\" class=\"form-control\" value=\"\">\r\n    </div>\r\n    <div class=\"row g-3 pb-3 pt-4 justify-content-end\" *ngIf=\"editFlag\">\r\n      <div class=\"col-auto\">\r\n        <button type=\"button\" class=\"btn smBtn minWdSmBtn btnPrimary\">Next</button>\r\n      </div>\r\n      <div class=\"col-auto\">\r\n        <button  type=\"button\" (click)=\"previous('incomingMessageConfiguration')\" class=\"btn smBtn minWdSmBtn btnDarkGrey\">Previous</button  >\r\n      </div>\r\n      <!-- <div class=\"col-auto\">\r\n        <button  type=\"button\" href=\"role-new.html\" class=\"btn smBtn minWdSmBtn btnSecondary\">Reset</button  >\r\n      </div> -->\r\n    </div>\r\n  </div>\r\n\r\n  <div fxLayout=\"row wrap\" class=\"file\"\r\n    *ngIf=\"this.messageConfigurationForm.value.sysChannel[0].messageChannel==='DB Connection' && tableFlag\">\r\n    <label for=\"name\" class=\"formLbl\">Table</label>\r\n    <select class=\"form-select\"  (change)=\"onTableSlection($event.target.value)\" aria-label=\"Default select example\">\r\n      <option hidden value=\"\" disabled selected >--Please select--</option>\r\n      <option *ngFor=\"let i of table\" [value]=\"i\">{{\r\n        i\r\n        }}</option>\r\n    </select>\r\n    </div>\r\n\r\n  <div fxLayout=\"row wrap\" class=\"file\"\r\n    *ngIf=\"(messageConfigurationForm.value.sysChannel[0].messageFormat=='XML' && incomingMessageConfiguration === true) || (messageConfigurationForm.value.sysChannel[0].messageFormat=='XML' && !editFlag)\">\r\n    <div fxFlex=\"100\" class=\"width\">\r\n      <div class=\"titleStyle mt-2 mb-4\">\r\n        <h2 class=\"pageTitle\">Header and Service Details</h2>\r\n      </div>\r\n      <!-- <label for=\"name\" class=\"formLbl\">Header and Service Details</label> -->\r\n      \r\n    \r\n    </div>\r\n    <!-- <span class=\"flex\">{{fileName}}</span> -->\r\n  </div>\r\n  \r\n  <form class=\"formStyle dbCardStyle\" [formGroup]=\"tcpForm\" *ngIf=\"incomingMessageConfiguration || (!editFlag &&  basicInfoForm.value.messsageType !== 'A')\">\r\n    <div style=\"width:100%;margin-bottom:20px\" *ngIf=\"messageConfigurationForm.value.sysChannel[0].messageFormat=='XML' \">\r\n      <!-- <input type=\"file\" id=\"chFile\" (change)=\"uploadFileXml($event)\"> -->\r\n      <!-- <button type=\"button\" mat-raised-button type=\"button\" class=\"btnFile\" (click)=\"chooseFile()\">\r\n        <i class=\"fa fa-upload\"></i>\r\n        File Upload\r\n      </button> -->\r\n      <div class=\"fileUpload\">\r\n        <div class=\"formS\" >\r\n      <div class=\"file-upload-wrapper\" #fileWrapper data-text=\"File Upload\">\r\n        <input (change)=\"uploadFileXml($event)\" name=\"file-upload-field\"  type=\"file\" class=\"file-upload-field\">\r\n\r\n      </div>\r\n      </div>\r\n      </div>\r\n     \r\n    </div>\r\n     <fieldset [disabled]=\"!submitFlag || !editFlag\">\r\n    <div *ngIf=\"messageConfigurationForm.value.sysChannel[0].messageFormat!=='XML' \">\r\n      <div class=\"titleStyle mt-2 mb-4\">\r\n        <h2 class=\"pageTitle\">Header and Service Details</h2>\r\n      </div>\r\n    </div>\r\n    <div class=\"row gy-4\">\r\n      <div class=\"col-lg-2\">\r\n        <label for=\"name\" class=\"formLbl\">Header</label>\r\n      \r\n      </div>\r\n      <div class=\"col-lg-2\">\r\n        \r\n        <label for=\"name\" class=\"formLbl\">{{label2}}</label>\r\n     \r\n      \r\n   \r\n      </div>\r\n      <div class=\"col-lg-2\">\r\n        <label for=\"name\" class=\"formLbl\">Data Type</label>\r\n      \r\n      </div>\r\n      <div class=\"col-lg-2\">\r\n        <label for=\"name\" class=\"formLbl\">Default Value</label>\r\n      \r\n      </div>\r\n      <div class=\"col-lg-2\">\r\n        <label for=\"name\" class=\"formLbl\">Encryption Type</label>\r\n       \r\n      </div>\r\n    \r\n    </div>\r\n    <div  formArrayName=\"sysService\"\r\n      *ngFor=\"let item of tcpForm.get('sysService')['controls']; let i = index;\">\r\n      \r\n      <div class=\"row gy-4\" [formGroupName]=\"i\" style=\"margin-bottom: 20px;\">\r\n        <div class=\"col-lg-2\">\r\n          <!-- <label for=\"name\" class=\"formLbl\">Header</label> -->\r\n          <!-- <select class=\"form-select\" (change)=\"onHeaderTagSelect($event,i)\" formControlName=\"headerTag\" aria-label=\"Default select example\">\r\n            <option  [hidden]=\"shouldHideOption(header)\" *ngFor=\"let header of headerTagData\" [value]=\"header.headerTag\">\r\n              {{header.headerTag}}\r\n            </option>\r\n          </select> -->\r\n          <select class=\"form-select\" formControlName=\"headerTag\" aria-label=\"Default select example\">\r\n            <option *ngFor=\"let header of headerTagData\" [value]=\"header.headerTag\">\r\n              {{header.headerTag}}\r\n            </option>\r\n          </select>\r\n        </div>\r\n        <div class=\"col-lg-2\">\r\n          \r\n          <!-- <label for=\"name\" class=\"formLbl\">{{label2}}</label> -->\r\n          <!-- <ng-select id=\"outlineNgSelect\"\r\n            *ngIf='messageConfigurationForm.value.sysChannel[0].messageChannel=== \"TCP/IP\"'\r\n            class=\"form-select\" formControlName=\"messageKey\" aria-label=\"Default select example\"\r\n            (change)=\"onSelectingMessageBasis($event,i)\" [disabled]=\"!editFlag\"\r\n            >\r\n            <ng-option hidden value=\"\" disabled selected >Please Select Field No 123</ng-option>\r\n            <ng-option *ngFor=\"let mkey of isoRespData\" [ngClass]=\"'muthu'\" [value]=\"mkey.fieldNo\">\r\n              {{mkey.fieldNo}} {{mkey.fieldName}} </ng-option>\r\n          </ng-select> -->\r\n          <ng-select [items]=\"isoRespDataFiltered\"\r\n          *ngIf='messageConfigurationForm.value.sysChannel[0].messageChannel=== \"TCP/IP\"'\r\n          aria-label=\"Default select example\"\r\n          class=\"form-select\"\r\n          bindLabel=\"formattedmKey\"\r\n          formControlName=\"messageKey\"\r\n          [disabled]=\"!editFlag\"\r\n          (change)=\"changeSelectedFieldNo($event, i)\"\r\n          placeholder=\"Select city\">\r\n          </ng-select>\r\n\r\n          <ng-select [items]=\"xmlRespDataFiltered\"\r\n          *ngIf='messageConfigurationForm.value.sysChannel[0].messageFormat=== \"XML\" && !fileUploadClick' aria-label=\"Default select example\"\r\n          class=\"form-select\"\r\n          bindLabel=\"messageKey\"\r\n          formControlName=\"messageKey\"\r\n          (change)=\"onselectingTag($event,i)\">\r\n          </ng-select>\r\n\r\n          <!-- <ng-select id=\"outlineNgSelect\" *ngIf='messageConfigurationForm.value.sysChannel[0].messageFormat=== \"XML\" && !fileUploadClick' class=\"form-select\"\r\n            formControlName=\"messageKey\" [readonly]=\"!editFlag\" aria-label=\"Default select example\" (change)=\"onselectingTag($event,i)\">\r\n            <ng-option hidden value=\"\" disabled selected >Please Select Tag</ng-option>\r\n            <ng-option *ngFor=\"let mkey of xmlRespData\" [hidden]=\"try(mkey)\" [value]=\"mkey\">\r\n              {{mkey}}\r\n            </ng-option>\r\n          </ng-select> -->\r\n          <select (change)=\"onDbConnectionOption($event,i)\" *ngIf=\"this.messageConfigurationForm.value.sysChannel[0].messageChannel==='DB Connection' && tableDropDownClick\" class=\"form-select\"\r\n          formControlName=\"messageKey\"  aria-label=\"Default select example\" (change)=\"onselectingColumnName($event.target.value,i)\">\r\n          <option hidden value=\"\" disabled selected >Please Select Tag</option>\r\n          <option *ngFor=\"let mkey of tabelData\"  [hidden]=\"shouldHideOption(mkey)\"  [value]=\"mkey\">\r\n            {{mkey[1]}}\r\n          </option>\r\n        </select>\r\n        <input id=\"externalIp\" *ngIf=\"this.messageConfigurationForm.value.sysChannel[0].messageChannel==='DB Connection' && !tableDropDownClick\" formControlName=\"messageKey\" type=\"text\" class=\"form-control\" value=\"\" readonly>\r\n          <input id=\"externalIp\" *ngIf='messageConfigurationForm.value.sysChannel[0].messageFormat=== \"XML\" && fileUploadClick' formControlName=\"messageKey\" type=\"text\" class=\"form-control\" value=\"\" readonly>\r\n          <input id=\"externalIp\" *ngIf='messageConfigurationForm.value.sysChannel[0].messageFormat=== \"JSON\"' formControlName=\"messageKey\" type=\"text\" class=\"form-control\" value=\"\">\r\n        </div>\r\n        <div class=\"col-lg-2\">\r\n          <!-- <label for=\"name\" class=\"formLbl\">Data Type</label> -->\r\n          <ng-select id=\"outlineNgSelect\" class=\"form-select\" *ngIf='messageConfigurationForm.value.sysChannel[0].messageChannel=== \"TCP/IP\"'\r\n            formControlName=\"dataType\" [readonly]=\"!editFlag\" aria-label=\"Default select example\">\r\n            <ng-option hidden value=\"\" disabled selected >Please Select Data Type</ng-option>\r\n            <ng-option *ngFor=\"let type of typeDataIso\" [value]=\"type\">{{type}}</ng-option>\r\n            </ng-select>\r\n         \r\n          <select class=\"form-select\" name=\"dataType_{{i}}\"\r\n            *ngIf='messageConfigurationForm.value.sysChannel[0].messageFormat=== \"XML\" || messageConfigurationForm.value.sysChannel[0].messageFormat=== \"JSON\"'\r\n            formControlName=\"dataType\" aria-label=\"Default select example\">\r\n            <option value=\"numeric\">\r\n              Numeric\r\n            </option>\r\n            <option value=\"alphaNumeric\">\r\n              Alpha Numeric\r\n            </option>\r\n            <option value=\"date\">\r\n              Date\r\n            </option>\r\n          </select>\r\n          <input id=\"externalIp\"  *ngIf=\"this.messageConfigurationForm.value.sysChannel[0].messageChannel==='DB Connection'\" formControlName=\"dataType\" type=\"text\" class=\"form-control\" readonly value=\"\">\r\n        </div>\r\n        <div class=\"col-lg-2\">\r\n          <!-- <label for=\"name\" class=\"formLbl\">Default Value</label> -->\r\n          <input id=\"externalIp\" formControlName=\"headerValue\" type=\"text\" class=\"form-control\" value=\"\">\r\n        </div>\r\n        <div class=\"col-lg-2\">\r\n          <!-- <label for=\"name\" class=\"formLbl\">Encryption Type</label> -->\r\n          <select class=\"form-select\"  formControlName=\"encryption\" aria-label=\"Default select example\">\r\n            <!-- <option *ngFor=\"let type of encryptionArray\" [value]=\"type\">{{type}}\r\n            <option> -->\r\n              <option value=\"No Encryption\">No Encryption</option>\r\n                    <option value=\"BASE64\">\r\n                      BASE 64\r\n                    </option>\r\n                    <option value=\"SHA256\">\r\n                      SHA 256\r\n                    </option>\r\n                    <option value=\"SHA512\">\r\n                      SHA 512\r\n                    </option>\r\n          </select>\r\n        </div>\r\n        <div class=\"col-lg-2\" *ngIf=\"editFlag\">\r\n          <label for=\"name\" class=\"formLbl\"></label>\r\n          <br>\r\n          <a  type=\"button\" *ngIf=\"submitFlag\" href=\"javascript:void(0);\"(click)=\"delete(i)\" class=\"deleteIcon2\"><img src=\"assets/images/delete-icon.svg\" alt=\"...\"></a>\r\n          <!-- <button  type=\"button\" *ngIf=\"submitFlag\" href=\"javascript:void(0)\" (click)=\"delete(i)\" class=\"addIcon deleteIcon\">\r\n            <img src=\"assets/images/delete-icon.png\" alt=\"...\"></button  > -->\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </fieldset>\r\n    <div class=\"row g-3 pt-4\" *ngIf=\"editFlag\">\r\n      <div class=\"col-auto\" (click)=\"addBioDocs()\">\r\n        <a *ngIf=\"submitFlag\" class=\"addIcon primarybg\">\r\n          <span><img src=\"assets/images/plus-icon.svg\" alt=\"...\"></span>\r\n        </a >\r\n      </div>\r\n      <div class=\"row g-3 pb-3 pt-4 justify-content-end\" *ngIf=\"editFlag\">\r\n        <div class=\"col-auto\">\r\n          <button type=\"button\" (click)=\"next('incomingMessageConfiguration')\" class=\"btn smBtn minWdSmBtn btnPrimary\"\r\n            (click)=\"submit2()\" [disabled]=\"!submitFlag || !tcpForm.dirty|| !tcpForm.valid\" >Save</button>\r\n\r\n        </div>\r\n        <div class=\"col-auto\">\r\n          <button type=\"button\" (click)=\"previous('incomingMessageConfiguration')\"  [disabled]=\"!submitFlag\" class=\"btn smBtn minWdSmBtn btnDarkGrey\">Previous</button>\r\n        </div>\r\n        <!-- <div class=\"col-auto\">\r\n          <button type=\"button\"   [disabled]=\"!submitFlag\" class=\"btn smBtn minWdSmBtn btnSecondary\">Reset</button>\r\n        </div> -->\r\n        <div class=\"col-auto\">\r\n          <button  type=\"button\" href=\"javascript:void(0);\" [routerLink]=\"['/addSystem/summary']\" class=\"btn smBtn minWdSmBtn btnSecondary\">Exit</button  >\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n  </form>\r\n \r\n  <form action=\"\" class=\"formStyle\" *ngIf=\"(basicInfoForm.value.messsageType == 'A' && all === true) || (basicInfoForm.value.messsageType == 'A' && !editFlag)\">\r\n    <div class=\"tabStyleCol\" style=\"margin-top:30px\">\r\n      <ul class=\"nav nav-tabs\" id=\"myTab\" role=\"tablist\">\r\n        <li class=\"nav-item\" role=\"presentation\" *ngIf=\"tab1\">\r\n          <button type=\"button\" class=\"nav-link active\" id=\"home-tab\" data-bs-toggle=\"tab\" data-bs-target=\"#home\" type=\"button\"\r\n            role=\"tab\" aria-controls=\"home\" (click)=\"value('1')\" aria-selected=\"true\">Incoming</button>\r\n        </li>\r\n        <li class=\"nav-item\" role=\"presentation\" *ngIf=\"!tab1\">\r\n          <button type=\"button\" class=\"nav-link\" id=\"home-tab\" data-bs-toggle=\"tab\" data-bs-target=\"#home\" type=\"button\" role=\"tab\"\r\n            aria-controls=\"home\" aria-selected=\"true\" (click)=\"value('1')\">Incoming</button>\r\n        </li> \r\n         <li class=\"nav-item\" role=\"presentation\" *ngIf=\"!tab2\">\r\n          <button type=\"button\" class=\"nav-link\" id=\"profile-tab\" data-bs-toggle=\"tab\" data-bs-target=\"#profile\" type=\"button\"\r\n            role=\"tab\" aria-controls=\"profile\" aria-selected=\"false\" (click)=\"value('2')\">Outgoing</button>\r\n        </li>\r\n        <li class=\"nav-item\" role=\"presentation\" *ngIf=\"tab2\">\r\n          <button type=\"button\" class=\"nav-link active\" id=\"profile-tab\" data-bs-toggle=\"tab\" data-bs-target=\"#profile\" type=\"button\"\r\n            role=\"tab\" aria-controls=\"profile\" aria-selected=\"false\" (click)=\"value('2')\">Outgoing</button>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n    <div class=\"dbCardStyle\">\r\n      <div class=\"tab-content\" id=\"myTabContent\">\r\n        <div class=\"tab-pane fade show active\" id=\"home\" role=\"tabpanel\" aria-labelledby=\"home-tab\" *ngIf=\"tab1\">\r\n\r\n          <div style=\"width: 60%;\"\r\n            *ngIf=\"messageConfigurationForm.value.sysChannel[0].messageFormat=='XML' && tab12\">\r\n           \r\n              <div fxFlex=\"60\">\r\n                <div class=\"fileUpload\">\r\n                  <div class=\"formS\" >\r\n                <div class=\"file-upload-wrapper\" #fileWrapper data-text=\"File Upload\">\r\n                  <input (change)=\"uploadFileXml($event)\" name=\"file-upload-field\"  type=\"file\" class=\"file-upload-field\">\r\n                   <button type=\"button\" type=\"button\" class=\"btnFile\" (click)=\"chooseFile()\"></button>\r\n                    \r\n                </div>\r\n                \r\n                </div>\r\n              </div>\r\n            </div>\r\n          \r\n          </div>\r\n      \r\n          <form action=\"\" class=\"formStyle\" [formGroup]=\"messageConfigurationForm\"\r\n            *ngIf=\"(basicInfoForm.value.messsageType === 'A' && tab11) || (basicInfoForm.value.messsageType === 'A' && !editFlag)\">\r\n            <div class=\"dbCardStyle\" formArrayName=\"sysChannel\"\r\n              *ngFor=\"let item of messageConfigurationForm.get('sysChannel')['controls']; let i = index;\">\r\n              <div class=\"titleStyle mt-2 mb-4\">\r\n                <h2 class=\"pageTitle\">Incoming Message Configuration</h2>\r\n              </div>\r\n              <fieldset [disabled]=\"!editFlag\">\r\n              <div class=\"row gy-4\" [formGroupName]=\"i\">\r\n                \r\n                <div class=\"col-lg-4\">\r\n                \r\n                  <label for=\"name\" class=\"formLbl\">Incoming Message Protocol</label>\r\n                  <select class=\"form-select\" formControlName=\"messageChannel\" aria-label=\"Default select example\"\r\n                    (change)=\"onProtocalSlection($event.target.value)\">\r\n                    <!-- <option *ngFor=\"let i of protocolArray\" [value]=\"i\">{{\r\n                      i\r\n                      }}</option> -->\r\n                      <option hidden value=\"\" disabled selected >--Please select--</option>\r\n                    <option value=\"TCP/IP\">TCP/IP</option>\r\n                    <option value=\"Https/Http\">HTTPS/HTTP\r\n                    </option>\r\n                    <option value=\"MDB\">MDB</option>\r\n                    <option value=\"EJB\">EJB</option>\r\n                    <option value=\"DB Connection\">DB Connection\r\n                    </option>\r\n                  </select>\r\n                </div>\r\n                <div class=\"col-lg-4\" *ngIf=\"messageConfigurationForm.value.sysChannel[0].messageChannel !== 'DB Connection'\">\r\n                  <label for=\"name\" class=\"formLbl\">Data Type</label>\r\n                  <select class=\"form-select\" formControlName=\"messageFormat\" aria-label=\"Default select example\">\r\n                    <option hidden value=\"\" disabled selected >--Please select--</option>\r\n                    <option *ngFor=\"let i of dataType\" [value]=\"i\">{{\r\n                      i\r\n                      }}</option>\r\n                  </select>\r\n                </div>\r\n                <div class=\"col-lg-4\" *ngIf=\"messageConfigurationForm.value.sysChannel[0].messageChannel === 'MDB' \">\r\n                  <label for=\"name\" class=\"formLbl\">Type of Queue</label>\r\n                  <select class=\"form-select\" formControlName=\"queueType\" aria-label=\"Default select example\">\r\n                    <option *ngFor=\"let i of queArray\" [value]=\"i\">{{i}}</option>\r\n\r\n                  </select>\r\n                </div>\r\n                <div class=\"col-lg-4\"\r\n                  *ngIf=\"messageConfigurationForm.value.sysChannel[0].messageChannel === 'MDB' && messageConfigurationForm.value.sysChannel[0].queueType\">\r\n                  <label for=\"name\" class=\"formLbl\">Queue Manager</label>\r\n                  <input id=\"queueManager\" type=\"text\" formControlName=\"queueManager\" class=\"form-control\"\r\n                    placeholder=\"Queue manager\" value=\"\">\r\n                </div>\r\n                <div class=\"col-lg-4\"\r\n                  *ngIf=\"messageConfigurationForm.value.sysChannel[0].messageChannel === 'MDB' && messageConfigurationForm.value.sysChannel[0].queueType\">\r\n                  <label for=\"name\" class=\"formLbl\">Queue Name</label>\r\n                  <input id=\"queueName\" type=\"text\" formControlName=\"queueName\" class=\"form-control\"\r\n                    placeholder=\"Queue Name\" value=\"\">\r\n                </div>\r\n                <div class=\"col-lg-4\"\r\n                  *ngIf=\"messageConfigurationForm.value.sysChannel[0].messageChannel === 'MDB' && messageConfigurationForm.value.sysChannel[0].queueType === 'IBM' \">\r\n                  <label for=\"name\" class=\"formLbl\">Connection Factory</label>\r\n                  <input id=\"connectFactory\" type=\"text\" formControlName=\"queueConnFactory\" class=\"form-control\"\r\n                    placeholder=\"Connectiong Factory\" value=\"\">\r\n                </div>\r\n                <div class=\"col-lg-4\"\r\n                  *ngIf=\"messageConfigurationForm.value.sysChannel[0].messageChannel === 'MDB' && messageConfigurationForm.value.sysChannel[0].queueType === 'JMS' \">\r\n                  <label for=\"name\" class=\"formLbl\">Connection Channel</label>\r\n                  <input id=\"queChannel\" type=\"text\" formControlName=\"queueChannel\" class=\"form-control\"\r\n                    placeholder=\"Queue Channel\" value=\"\">\r\n                </div>\r\n                <div class=\"col-lg-4\"\r\n                  *ngIf=\"messageConfigurationForm.value.sysChannel[0].messageChannel === 'DB Connection'\">\r\n                  <label for=\"name\" class=\"formLbl\">User Name</label>\r\n                  <input id=\"userName\" type=\"text\"  formControlName=\"dbUsername\" class=\"form-control\" placeholder=\"User Name\" value=\"\">\r\n                </div>\r\n                <div class=\"col-lg-4\"\r\n                  *ngIf=\"messageConfigurationForm.value.sysChannel[0].messageChannel === 'DB Connection'\">\r\n                  <label for=\"name\" class=\"formLbl\">Password</label>\r\n                  <input id=\"password\" type=\"password\" formControlName=\"dbPassword\" class=\"form-control\" placeholder=\"Password\" value=\"\">\r\n                </div>\r\n                <div class=\"col-lg-4\"\r\n                  *ngIf=\"messageConfigurationForm.value.sysChannel[0].messageChannel === 'DB Connection'\">\r\n                  <label for=\"name\" class=\"formLbl\">Database</label>\r\n                  <input id=\"databaseName\" formControlName=\"dbServiceName\" type=\"text\" class=\"form-control\" placeholder=\"Database Name\" value=\"\">\r\n                </div>\r\n                <div class=\"col-lg-4\"\r\n                  *ngIf=\"messageConfigurationForm.value.sysChannel[0].messageChannel === 'DB Connection'\">\r\n                  <label for=\"name\" class=\"formLbl\">Connecting String</label>\r\n                  <input id=\"connectString\" formControlName=\"dbConnectString\" type=\"text\" class=\"form-control\" placeholder=\"Connecting String\" value=\"\">\r\n                </div>\r\n               \r\n              </div>\r\n            </fieldset>\r\n              <div class=\"row g-3 pb-3 pt-4 justify-content-end\" *ngIf=\"editFlag\">\r\n                <div class=\"col-auto\">\r\n                  <button type=\"button\" (click)=\"next1()\"\r\n                    class=\"btn smBtn minWdSmBtn btnPrimary\">Next</button>\r\n                </div>\r\n                <div class=\"col-auto\">\r\n                  <button  type=\"button\" (click)=\"previousAll('1')\" class=\"btn smBtn minWdSmBtn btnDarkGrey\">Previous</button  >\r\n                </div>\r\n                <!-- <div class=\"col-auto\">\r\n                  <button  type=\"button\" href=\"role-new.html\" class=\"btn smBtn minWdSmBtn btnSecondary\">Reset</button  >\r\n                </div> -->\r\n                <div class=\"col-auto\">\r\n                  <button  type=\"button\"  [routerLink]=\"['/addSystem/summary']\" class=\"btn smBtn minWdSmBtn btnSecondary\">Exit</button  >\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n          </form>\r\n          <div fxLayout=\"row wrap\" class=\"file\"\r\n          *ngIf=\"this.messageConfigurationForm.value.sysChannel[0].messageChannel==='DB Connection' && tableFlag1\">\r\n          <label for=\"name\" class=\"formLbl\">Table</label>\r\n          <select class=\"form-select\"  (change)=\"onTableSlection($event.target.value)\" aria-label=\"Default select example\">\r\n            <option hidden value=\"\" disabled selected >--Please select--</option>\r\n            <option *ngFor=\"let i of table\" [value]=\"i\">{{\r\n              i\r\n              }}</option>\r\n          </select>\r\n          </div>\r\n          <form action=\"\"  class=\"formStyle dbCardStyle\" [formGroup]=\"tcpForm\" *ngIf=\"tab12 || !editFlag\" style=\"margin-bottom: 20px;\">\r\n            <div class=\"titleStyle mt-2 mb-4\" *ngIf=\"messageConfigurationForm.value.sysChannel[0].messageFormat!=='XML' \">\r\n              <h1 class=\"pageTitle\">Header and Service Details</h1>\r\n            </div>\r\n           \r\n            <div class=\"row gy-4\">\r\n              <div class=\"col-lg-2\">\r\n                <label for=\"name\" class=\"formLbl\">Header</label>\r\n              \r\n              </div>\r\n              <div class=\"col-lg-2\">\r\n                \r\n                <label for=\"name\" class=\"formLbl\">{{label2}}</label>\r\n             \r\n              \r\n           \r\n              </div>\r\n              <div class=\"col-lg-2\">\r\n                <label for=\"name\" class=\"formLbl\">Data Type</label>\r\n              \r\n              </div>\r\n              <div class=\"col-lg-2\">\r\n                <label for=\"name\" class=\"formLbl\">Default Value</label>\r\n              \r\n              </div>\r\n              <div class=\"col-lg-2\">\r\n                <label for=\"name\" class=\"formLbl\">Encryption Type</label>\r\n               \r\n              </div>\r\n            \r\n            </div>\r\n            <fieldset [disabled]=\"!editFlag\">\r\n            <div  formArrayName=\"sysService\"\r\n              *ngFor=\"let item of tcpForm.get('sysService')['controls']; let i = index;\">\r\n              <!-- <label for=\"name\" class=\"formLbl\">Header and Service Details</label> -->\r\n              <div class=\"row gy-4\" style=\"margin-bottom: 30px;\" [formGroupName]=\"i\">\r\n              \r\n                <div class=\"col-lg-2\">\r\n                \r\n                  <select class=\"form-select\" formControlName=\"headerTag\" aria-label=\"Default select example\">\r\n                    <option *ngFor=\"let header of headerTagData\" [value]=\"header.headerTag\">\r\n                      {{header.headerTag}}\r\n                    </option>\r\n                  </select>\r\n                </div>\r\n                <div class=\"col-lg-2\">\r\n                \r\n                  <!-- <ng-select id=\"outlineNgSelect\"\r\n                    *ngIf='(messageConfigurationForm.value.sysChannel[0].messageChannel=== \"TCP/IP\" || messageConfigurationForm.value.sysChannel[0].messageFormat=== \"JSON\")'\r\n                    class=\"form-select\" [readonly]=\"!editFlag\" formControlName=\"messageKey\" aria-label=\"Default select example\"\r\n                    (change)=\"onSelectingMessageBasis($event,i)\">\r\n                    <ng-option hidden value=\"\" disabled selected >Please Select Field No</ng-option>\r\n                    <ng-option *ngFor=\"let mkey of isoRespData\" [hidden]=\"try(mkey.fieldNo)\" [value]=\"mkey.fieldNo\">\r\n                      {{mkey.fieldNo}} {{mkey.fieldName}} </ng-option>\r\n                  </ng-select>\r\n                  <ng-select id=\"outlineNgSelect\" *ngIf='(messageConfigurationForm.value.sysChannel[0].messageFormat=== \"XML\")  && !fileUploadClick'\r\n                    class=\"form-select\" [readonly]=\"!editFlag\" formControlName=\"messageKey\" aria-label=\"Default select example\"\r\n                    (change)=\"onselectingTag($event,i)\">\r\n                    <ng-option hidden value=\"\" disabled selected >Please Select Tag</ng-option>\r\n                    <ng-option *ngFor=\"let mkey of xmlRespData\" [hidden]=\"try(mkey)\" [value]=\"mkey\">\r\n                      {{mkey}}\r\n                    </ng-option>\r\n                  </ng-select> -->\r\n                  <ng-select [items]=\"isoRespDataFiltered\"\r\n                  *ngIf='messageConfigurationForm.value.sysChannel[0].messageChannel=== \"TCP/IP\"'\r\n                  aria-label=\"Default select example\"\r\n                  class=\"form-select\"\r\n                  bindLabel=\"formattedmKey\"\r\n                  formControlName=\"messageKey\"\r\n                  [disabled]=\"!editFlag\"\r\n                  (change)=\"changeSelectedFieldNo($event, i)\"\r\n                  placeholder=\"Select city\">\r\n                  </ng-select>\r\n        \r\n                  <ng-select [items]=\"xmlRespDataFiltered\"\r\n                  *ngIf='messageConfigurationForm.value.sysChannel[0].messageFormat=== \"XML\" && !fileUploadClick' aria-label=\"Default select example\"\r\n                  class=\"form-select\"\r\n                  bindLabel=\"messageKey\"\r\n                  formControlName=\"messageKey\"\r\n                  (change)=\"onselectingTag($event,i)\">\r\n                  </ng-select>\r\n                  <select  *ngIf=\"this.messageConfigurationForm.value.sysChannel[0].messageChannel==='DB Connection' && tableDropDownClick\" class=\"form-select\"\r\n                  formControlName=\"messageKey\"  aria-label=\"Default select example\" (change)=\"onselectingColumnName($event.target.value,i)\">\r\n                  <option hidden value=\"\" disabled selected >Please Select Tag</option>\r\n                  <option *ngFor=\"let mkey of tabelData\"  [value]=\"mkey\">\r\n                    {{mkey[1]}}\r\n                  </option>\r\n                </select>\r\n            <input id=\"externalIp\" *ngIf=\"this.messageConfigurationForm.value.sysChannel[0].messageChannel==='DB Connection' && !tableDropDownClick\" formControlName=\"messageKey\" type=\"text\" class=\"form-control\" value=\"\" readonly>\r\n                  <input id=\"externalIp\" *ngIf='messageConfigurationForm.value.sysChannel[0].messageFormat=== \"XML\" && fileUploadClick' formControlName=\"messageKey\" type=\"text\" class=\"form-control\" value=\"\" readonly>\r\n                  <input id=\"externalIp\" *ngIf='messageConfigurationForm.value.sysChannel[0].messageFormat=== \"JSON\"' formControlName=\"messageKey\" type=\"text\" class=\"form-control\" value=\"\" >\r\n                </div>\r\n                <div class=\"col-lg-2\">\r\n               \r\n                  <ng-select id=\"outlineNgSelect\" class=\"form-select\"\r\n                    *ngIf='messageConfigurationForm.value.sysChannel[0].messageChannel=== \"TCP/IP\" '\r\n                    formControlName=\"dataType\" [readonly]=\"!editFlag\" aria-label=\"Default select example\">\r\n                    <ng-option hidden value=\"\" disabled selected >Please Select Data Type</ng-option>\r\n                    <ng-option *ngFor=\"let type of typeDataIso\" [value]=\"type\">{{type}}\r\n                    </ng-option>\r\n                  </ng-select>\r\n                  <select class=\"form-select\"\r\n                    *ngIf='messageConfigurationForm.value.sysChannel[0].messageFormat=== \"XML\" || messageConfigurationForm.value.sysChannel[0].messageFormat=== \"JSON\"'\r\n                    formControlName=\"dataType\" aria-label=\"Default select example\">\r\n                    <option value=\"numeric\">\r\n                      Numeric\r\n                    </option>\r\n                    <option value=\"alphaNumeric\">\r\n                      Alpha Numeric\r\n                    </option>\r\n                    <option value=\"date\">\r\n                      Date\r\n                    <option>\r\n                  </select>\r\n                  <input id=\"externalIp\"  *ngIf=\"this.messageConfigurationForm.value.sysChannel[0].messageChannel==='DB Connection'\" formControlName=\"dataType\" type=\"text\" class=\"form-control\" readonly value=\"\">\r\n                </div>\r\n                <div class=\"col-lg-2\">\r\n                \r\n                  <input id=\"externalIp\" formControlName=\"headerValue\" type=\"text\" class=\"form-control\" value=\"\">\r\n                </div>\r\n                <div class=\"col-lg-2\">\r\n                  \r\n                  <select class=\"form-select\" formControlName=\"encryption\" aria-label=\"Default select example\">\r\n                    <!-- <option *ngFor=\"let type of encryptionArray\" [value]=\"type\">{{type}}\r\n                    <option> -->\r\n                      <option value=\"No Encryption\">No Encryption</option>\r\n                    <option value=\"BASE64\">\r\n                      BASE 64\r\n                    </option>\r\n                    <option value=\"SHA256\">\r\n                      SHA 256\r\n                    </option>\r\n                    <option value=\"SHA512\">\r\n                      SHA 512\r\n                    </option>\r\n                  </select>\r\n                </div>\r\n                <div class=\"col-lg-2\" *ngIf=\"editFlag\">\r\n                  <label for=\"name\" class=\"formLbl\"></label>\r\n                  <br>\r\n                  <a type=\"button\" (click)=\"delete(i)\" class=\"deleteIcon2\"><img src=\"assets/images/delete-icon.svg\" alt=\"...\"></a>\r\n                  <!-- <button  type=\"button\" href=\"javascript:void(0)\" (click)=\"delete(i)\" class=\"addIcon deleteIcon\">\r\n                    <img src=\"assets/images/delete-icon.png\" alt=\"...\"></button  > -->\r\n                </div>\r\n\r\n              </div>\r\n            </div>\r\n            </fieldset>\r\n            <div class=\"row g-3 pt-4\" *ngIf=\"editFlag\">\r\n              <div class=\"col-auto\" (click)=\"addBioDocs()\">\r\n                <a class=\"addIcon primarybg\">\r\n                  <span><img src=\"assets/images/plus-icon.svg\" alt=\"...\"></span>\r\n                </a>\r\n              </div>\r\n              <div class=\"row g-3 pb-3 pt-4 justify-content-end\">\r\n                <div class=\"col-auto\">\r\n                  <button type=\"button\" [disabled]=\"!tcpForm.valid\" class=\"btn smBtn minWdSmBtn btnPrimary\"\r\n                     (click)=\"allMethod()\">Next</button>\r\n                </div>\r\n                <div class=\"col-auto\">\r\n                  <button  type=\"button\" (click)=\"previousAll('2')\" class=\"btn smBtn minWdSmBtn btnDarkGrey\">Previous</button  >\r\n                </div>\r\n                <!-- <div class=\"col-auto\">\r\n                  <button  type=\"button\" href=\"role-new.html\" class=\"btn smBtn minWdSmBtn btnSecondary\">Reset</button  >\r\n                </div> -->\r\n                <div class=\"col-auto\">\r\n                  <button  type=\"button\" href=\"javascript:void(0);\" [routerLink]=\"['/addSystem/summary']\" class=\"btn smBtn minWdSmBtn btnSecondary\">Exit</button  >\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n        <div class=\"tab-pane fade show active\" id=\"profile\" role=\"tabpanel\" aria-labelledby=\"profile-tab\" *ngIf=\"tab2\">\r\n          <div style=\"width: 60%;\"\r\n            *ngIf=\"messageConfigurationForm1.value.sysChannel[0].messageFormat=='XML' && tab22\">\r\n          \r\n             \r\n              <div fxFlex=\"60\">\r\n                <div class=\"fileUpload\">\r\n                  <div class=\"formS\" >\r\n                <div class=\"file-upload-wrapper\" #fileWrapper1 data-text=\"File Upload\">\r\n                  <input  (change)=\"uploadFileXml1($event)\" name=\"file-upload-field\"  type=\"file\" class=\"file-upload-field\"\r\n                   value=\"\">\r\n                   <button type=\"button\" mat-raised-button type=\"button\" class=\"btnFile\" (click)=\"chooseFile1()\">\r\n                  \r\n                   </button>\r\n                    \r\n                \r\n                \r\n                </div>\r\n              </div>\r\n            </div>\r\n            </div>\r\n          </div>\r\n          <form action=\"\" class=\"formStyle\" [formGroup]=\"messageConfigurationForm1\"\r\n            *ngIf=\"(basicInfoForm.value.messsageType === 'A' && tab21) || (basicInfoForm.value.messsageType === 'A' && !editFlag)\">\r\n            <div class=\"dbCardStyle\" formArrayName=\"sysChannel\"\r\n              *ngFor=\"let item of messageConfigurationForm1.get('sysChannel')['controls']; let i = index;\">\r\n              <!-- <label for=\"name\" class=\"formLbl\">Outgoing Message Configuration</label> -->\r\n              <div class=\"titleStyle mt-2 mb-4\">\r\n                <h2 class=\"pageTitle\">Outgoing Message Configuration</h2>\r\n              </div>\r\n              <fieldset [disabled]=\"!editFlag\">\r\n              <div class=\"row gy-4\" [formGroupName]=\"i\">\r\n                \r\n                <div class=\"col-lg-4\">\r\n                  <label for=\"name\" class=\"formLbl\">Outgoing Message Protocol</label>\r\n                  <select class=\"form-select\" formControlName=\"messageChannel\" aria-label=\"Default select example\"\r\n                    (change)=\"onProtocalSlection1($event.target.value)\">\r\n                    <!-- <option *ngFor=\"let i of protocolArray\" [value]=\"i\">{{\r\n                      i\r\n                      }}</option> -->\r\n                      <option hidden value=\"\" disabled selected >--Please select--</option>\r\n                    <option value=\"TCP/IP\">TCP/IP</option>\r\n                    <option value=\"Https/Http\">HTTPS/HTTP\r\n                    </option>\r\n                    <option value=\"MDB\">MDB</option>\r\n                    <option value=\"EJB\">EJB</option>\r\n                    <option value=\"DB Connection\">DB Connection\r\n                    </option>\r\n                  </select>\r\n                </div>\r\n                <div class=\"col-lg-4\" *ngIf=\"messageConfigurationForm1.value.sysChannel[0].messageChannel !== 'DB Connection'\">\r\n                  <label for=\"name\" class=\"formLbl\">Data Type</label>\r\n                  <select class=\"form-select\" formControlName=\"messageFormat\" aria-label=\"Default select example\">\r\n                    <option hidden value=\"\" disabled selected >--Please select--</option>\r\n                    <option *ngFor=\"let i of dataType1\" [value]=\"i\">{{\r\n                      i\r\n                      }}</option>\r\n                  </select>\r\n                </div>\r\n                <div class=\"col-lg-4\" *ngIf=\"messageConfigurationForm1.value.sysChannel[0].messageChannel === 'MDB' \">\r\n                  <label for=\"name\" class=\"formLbl\">Type of Queue</label>\r\n                  <select class=\"form-select\" formControlName=\"queueType\" aria-label=\"Default select example\">\r\n                    <option *ngFor=\"let i of queArray\" [value]=\"i\">{{i}}</option>\r\n\r\n                  </select>\r\n                </div>\r\n                <div class=\"col-lg-4\"\r\n                  *ngIf=\"messageConfigurationForm1.value.sysChannel[0].messageChannel === 'MDB' && messageConfigurationForm1.value.sysChannel[0].queueType\">\r\n                  <label for=\"name\" class=\"formLbl\">Queue Manager</label>\r\n                  <input id=\"queueManager\" type=\"text\" formControlName=\"queueManager\" class=\"form-control\"\r\n                    placeholder=\"Queue manager\" value=\"\">\r\n                </div>\r\n                <div class=\"col-lg-4\"\r\n                  *ngIf=\"messageConfigurationForm1.value.sysChannel[0].messageChannel === 'MDB' && messageConfigurationForm1.value.sysChannel[0].queueType\">\r\n                  <label for=\"name\" class=\"formLbl\">Queue Name</label>\r\n                  <input id=\"queueName\" type=\"text\" formControlName=\"queueName\" class=\"form-control\"\r\n                    placeholder=\"Queue Name\" value=\"\">\r\n                </div>\r\n                <div class=\"col-lg-4\"\r\n                  *ngIf=\"messageConfigurationForm1.value.sysChannel[0].messageChannel === 'MDB' && messageConfigurationForm1.value.sysChannel[0].queueType === 'IBM' \">\r\n                  <label for=\"name\" class=\"formLbl\">Connection Factory</label>\r\n                  <input id=\"connectFactory\" type=\"text\" formControlName=\"queueConnFactory\" class=\"form-control\"\r\n                    placeholder=\"Connectiong Factory\" value=\"\">\r\n                </div>\r\n                <div class=\"col-lg-4\"\r\n                  *ngIf=\"messageConfigurationForm1.value.sysChannel[0].messageChannel === 'MDB' && messageConfigurationForm1.value.sysChannel[0].queueType === 'JMS' \">\r\n                  <label for=\"name\" class=\"formLbl\">Connection Channel</label>\r\n                  <input id=\"queChannel\" type=\"text\" formControlName=\"queueChannel\" class=\"form-control\"\r\n                    placeholder=\"Queue Channel\" value=\"\">\r\n                </div>\r\n                <div class=\"col-lg-4\"\r\n                  *ngIf=\"messageConfigurationForm1.value.sysChannel[0].messageChannel === 'DB Connection'\">\r\n                  <label for=\"name\" class=\"formLbl\">User Name</label>\r\n                  <input id=\"userName\" type=\"text\"   formControlName=\"dbUsername\" class=\"form-control\" placeholder=\"User Name\" value=\"\">\r\n                </div>\r\n                <div class=\"col-lg-4\"\r\n                  *ngIf=\"messageConfigurationForm1.value.sysChannel[0].messageChannel === 'DB Connection'\">\r\n                  <label for=\"name\" class=\"formLbl\">Password</label>\r\n                  <input id=\"password\" type=\"password\" formControlName=\"dbPassword\" class=\"form-control\" placeholder=\"Password\" value=\"\">\r\n                </div>\r\n                <div class=\"col-lg-4\"\r\n                  *ngIf=\"messageConfigurationForm1.value.sysChannel[0].messageChannel === 'DB Connection'\">\r\n                  <label for=\"name\" class=\"formLbl\">Database</label>\r\n                  <input id=\"databaseName\" type=\"text\" formControlName=\"dbServiceName\" class=\"form-control\" placeholder=\"Database Name\" value=\"\">\r\n                </div>\r\n                <div class=\"col-lg-4\"\r\n                  *ngIf=\"messageConfigurationForm1.value.sysChannel[0].messageChannel === 'DB Connection'\">\r\n                  <label for=\"name\" class=\"formLbl\">Connecting String</label>\r\n                  <input id=\"connectString\" type=\"text\"  formControlName=\"dbConnectString\" class=\"form-control\" placeholder=\"Connecting String\" value=\"\">\r\n                </div>\r\n               \r\n              </div>\r\n            </fieldset>\r\n              <div class=\"row g-3 pb-3 pt-4 justify-content-end\" *ngIf=\"editFlag\">\r\n                <div class=\"col-auto\">\r\n                  <button type=\"button\" (click)=\"next2()\"\r\n                    class=\"btn smBtn minWdSmBtn btnPrimary\">Next</button>\r\n                </div>\r\n                <div class=\"col-auto\">\r\n                  <button  type=\"button\" (click)=\"previousAll('3')\" class=\"btn smBtn minWdSmBtn btnDarkGrey\">Previous</button  >\r\n                </div>\r\n                <!-- <div class=\"col-auto\">\r\n                  <button  type=\"button\" href=\"role-new.html\" class=\"btn smBtn minWdSmBtn btnSecondary\">Reset</button  >\r\n                </div> -->\r\n                <div class=\"col-auto\">\r\n                  <button  type=\"button\" href=\"javascript:void(0);\" [routerLink]=\"['/addSystem/summary']\" class=\"btn smBtn minWdSmBtn btnSecondary\">Exit</button  >\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n          </form>\r\n          <div fxLayout=\"row wrap\" class=\"file\"\r\n          *ngIf=\"this.messageConfigurationForm1.value.sysChannel[0].messageChannel==='DB Connection' && tableFlag2\">\r\n          <label for=\"name\" class=\"formLbl\">Table</label>\r\n          <select class=\"form-select\"  (change)=\"onTableSlection1($event.target.value)\" aria-label=\"Default select example\">\r\n            <option hidden value=\"\" disabled selected >--Please select--</option>\r\n            <option *ngFor=\"let i of table2\" [value]=\"i\">{{\r\n              i\r\n              }}</option>\r\n          </select>\r\n          </div>\r\n          <form action=\"\" class=\"formStyle dbCardStyle\" [formGroup]=\"tcpForm1\" style=\"margin-bottom: 20px;\" *ngIf=\"tab22 || !editFlag\">\r\n            <fieldset [disabled]=\"!submitFlagAll || !editFlag\">\r\n              <div class=\"titleStyle mt-2 mb-4\" *ngIf=\"messageConfigurationForm.value.sysChannel[0].messageFormat!=='XML' \">\r\n                <h1 class=\"pageTitle\">Header and Service Details</h1>\r\n              </div>\r\n              <div class=\"row gy-4\">\r\n                <div class=\"col-lg-2\">\r\n                  <label for=\"name\" class=\"formLbl\">Header</label>\r\n                \r\n                </div>\r\n                <div class=\"col-lg-2\">\r\n                  \r\n                  <label for=\"name\" class=\"formLbl\">{{label2}}</label>\r\n               \r\n                \r\n             \r\n                </div>\r\n                <div class=\"col-lg-2\">\r\n                  <label for=\"name\" class=\"formLbl\">Data Type</label>\r\n                \r\n                </div>\r\n                <div class=\"col-lg-2\">\r\n                  <label for=\"name\" class=\"formLbl\">Default Value</label>\r\n                \r\n                </div>\r\n                <div class=\"col-lg-2\">\r\n                  <label for=\"name\" class=\"formLbl\">Encryption Type</label>\r\n                 \r\n                </div>\r\n              \r\n              </div>\r\n            <div  formArrayName=\"sysService\"\r\n              *ngFor=\"let item of tcpForm1.get('sysService')['controls']; let i = index;\">\r\n              <!-- <label for=\"name\" class=\"formLbl\">Header and Service Details</label> -->\r\n              <div  class=\"row gy-4\" style=\"margin-bottom: 30px;\" [formGroupName]=\"i\">\r\n                \r\n                <div class=\"col-lg-2\">\r\n                \r\n                  <select class=\"form-select\" formControlName=\"headerTag\" aria-label=\"Default select example\">\r\n                    <option *ngFor=\"let header of headerTagData\" [value]=\"header.headerTag\">\r\n                      {{header.headerTag}}\r\n                    </option>\r\n                  </select>\r\n                </div>\r\n                <div class=\"col-lg-2\">\r\n                  \r\n                  <!-- <ng-select id=\"outlineNgSelect\"\r\n                    *ngIf='(messageConfigurationForm1.value.sysChannel[0].messageChannel=== \"TCP/IP\" || messageConfigurationForm1.value.sysChannel[0].messageFormat=== \"JSON\")'\r\n                    class=\"form-select\" [readonly]=\"!editFlag\" formControlName=\"messageKey\" aria-label=\"Default select example\"\r\n                    (change)=\"onSelectingMessageBasis1($event,i)\">\r\n                    <ng-option hidden value=\"\" disabled selected >Please Select Field No</ng-option>\r\n                    <ng-option *ngFor=\"let mkey of isoRespData1\"  [hidden]=\"try(mkey.fieldNo)\" [value]=\"mkey.fieldNo\">\r\n                      {{mkey.fieldNo}} {{mkey.fieldName}} </ng-option>\r\n                  </ng-select>\r\n                  <ng-select id=\"outlineNgSelect\" *ngIf='(messageConfigurationForm1.value.sysChannel[0].messageFormat=== \"XML\")   &&  !fileUploadClickAll'\r\n                    class=\"form-select\" [readonly]=\"!editFlag\" formControlName=\"messageKey\" aria-label=\"Default select example\"\r\n                    (change)=\"onselectingTag1($event,i)\">\r\n                    <ng-option hidden value=\"\" disabled selected >Please Select Tag</ng-option>\r\n                    <ng-option *ngFor=\"let mkey of xmlRespData1\" [hidden]=\"try(mkey)\" [value]=\"mkey\">\r\n                      {{mkey}}\r\n                    </ng-option>\r\n                  </ng-select> -->\r\n                  <ng-select [items]=\"isoRespDataFiltered1\"\r\n                  *ngIf='messageConfigurationForm1.value.sysChannel[0].messageChannel=== \"TCP/IP\"'\r\n                  aria-label=\"Default select example\"\r\n                  class=\"form-select\"\r\n                  bindLabel=\"formattedmKey\"\r\n                  formControlName=\"messageKey\"\r\n                  [disabled]=\"!editFlag\"\r\n                  (change)=\"onSelectingMessageBasis1($event,i)\"\r\n                  placeholder=\"Select city\">\r\n                  </ng-select>\r\n        \r\n                  <ng-select [items]=\"xmlRespDataFiltered1\"\r\n                  *ngIf='messageConfigurationForm1.value.sysChannel[0].messageFormat=== \"XML\" && !fileUploadClick' aria-label=\"Default select example\"\r\n                  class=\"form-select\"\r\n                  bindLabel=\"messageKey\"\r\n                  formControlName=\"messageKey\"\r\n                  (change)=\"onselectingTag1($event,i)\">\r\n                  </ng-select>\r\n                  <select  *ngIf=\"this.messageConfigurationForm1.value.sysChannel[0].messageChannel==='DB Connection' && tableDropDownClick1\" class=\"form-select\"\r\n          formControlName=\"messageKey\"  aria-label=\"Default select example\" (change)=\"onselectingColumnName1($event.target.value,i)\">\r\n          <option hidden value=\"\" disabled selected >Please Select Tag</option>\r\n          <option *ngFor=\"let mkey of tabelData1\"  [value]=\"mkey\">\r\n            {{mkey[1]}}\r\n          </option>\r\n        </select>\r\n\t\t<input id=\"externalIp\" *ngIf=\"this.messageConfigurationForm1.value.sysChannel[0].messageChannel==='DB Connection' && !tableDropDownClick1\" formControlName=\"messageKey\" type=\"text\" class=\"form-control\" value=\"\" readonly>\r\n\t\t\r\n                  <input id=\"externalIp\" *ngIf='messageConfigurationForm1.value.sysChannel[0].messageFormat=== \"XML\" && fileUploadClickAll' formControlName=\"messageKey\" type=\"text\" class=\"form-control\" value=\"\" readonly>\r\n                  <input id=\"externalIp\" *ngIf='messageConfigurationForm.value.sysChannel[0].messageFormat=== \"JSON\"' formControlName=\"messageKey\" type=\"text\" class=\"form-control\" value=\"\" >\r\n                </div>\r\n                <div class=\"col-lg-2\">\r\n                  \r\n                  <ng-select id=\"outlineNgSelect\" class=\"form-select\" [readonly]=\"!editFlag\"\r\n                    *ngIf='(messageConfigurationForm1.value.sysChannel[0].messageChannel=== \"TCP/IP\")'\r\n                 formControlName=\"dataType\" aria-label=\"Default select example\">\r\n                 <ng-option hidden value=\"\" disabled selected >Please Select Data Type</ng-option>\r\n                    <ng-option *ngFor=\"let type of typeDataIso1\" [value]=\"type\">{{type}}\r\n                    </ng-option>\r\n                  </ng-select>\r\n                  <select class=\"form-select\"\r\n                    *ngIf='messageConfigurationForm1.value.sysChannel[0].messageFormat=== \"XML\" || messageConfigurationForm1.value.sysChannel[0].messageFormat=== \"JSON\"'\r\n                    formControlName=\"dataType\" aria-label=\"Default select example\">\r\n                    <option value=\"numeric\">\r\n                      Numeric\r\n                    </option>\r\n                    <option value=\"alphaNumeric\">\r\n                      Alpha Numeric\r\n                    </option>\r\n                    <option value=\"date\">\r\n                      Date\r\n                    <option>\r\n                  </select>\r\n                  <input id=\"externalIp\"  *ngIf=\"this.messageConfigurationForm1.value.sysChannel[0].messageChannel==='DB Connection'\" formControlName=\"dataType\" type=\"text\" class=\"form-control\" readonly value=\"\">\r\n                </div>\r\n                <div class=\"col-lg-2\">\r\n            \r\n                  <input id=\"externalIp\" formControlName=\"headerValue\" type=\"text\" class=\"form-control\" value=\"\">\r\n                </div>\r\n                <div class=\"col-lg-2\">\r\n                  \r\n                  <select class=\"form-select\" formControlName=\"encryption\" aria-label=\"Default select example\">\r\n                    <!-- <option *ngFor=\"let type of encryptionArray\" [value]=\"type\">{{type}}\r\n                    <option> -->\r\n                      <option value=\"No Encryption\">No Encryption</option>\r\n                    <option value=\"BASE64\">\r\n                      BASE 64\r\n                    </option>\r\n                    <option value=\"SHA256\">\r\n                      SHA 256\r\n                    </option>\r\n                    <option value=\"SHA512\">\r\n                      SHA 512\r\n                    </option>\r\n                  </select>\r\n                </div>\r\n                <div class=\"col-lg-2\" *ngIf=\"editFlag\">\r\n                  <label for=\"name\" class=\"formLbl\"></label>\r\n                  <br>\r\n                  <a  type=\"button\"  *ngIf=\"submitFlagAll\" (click)=\"delete1(i)\" class=\"deleteIcon2\"><img src=\"assets/images/delete-icon.svg\" alt=\"...\"></a >\r\n                  <!-- <button  type=\"button\" *ngIf=\"submitFlagAll\" href=\"javascript:void(0)\" (click)=\"delete1(i)\" class=\"addIcon deleteIcon\">\r\n                    <img src=\"assets/images/delete-icon.png\" alt=\"...\"></button  > -->\r\n                </div>\r\n                \r\n              </div>\r\n            </div>\r\n            </fieldset>\r\n            \r\n            <div class=\"row g-3 pt-4\" *ngIf=\"editFlag\">\r\n              <div class=\"col-auto\" (click)=\"addBioDocs1()\">\r\n                <a *ngIf=\"submitFlagAll\" class=\"addIcon primarybg\">\r\n                  <span><img src=\"assets/images/plus-icon.svg\" alt=\"...\"></span>\r\n                </a>\r\n              </div>\r\n              <div class=\"row g-3 pb-3 pt-4 justify-content-end\">\r\n                <div class=\"col-auto\">\r\n                  <button type=\"button\" class=\"btn smBtn minWdSmBtn btnPrimary\" (click)=\"submitAll()\"\r\n                    [disabled]=\"!submitFlagAll ||  !tcpForm1.valid \">Save</button>\r\n                </div>\r\n                <div class=\"col-auto\">\r\n                  <button type=\"button\" (click)=\"previousAll('4')\" [disabled]=\"!submitFlagAll\" class=\"btn smBtn minWdSmBtn btnDarkGrey\">Previous</button>\r\n                </div>\r\n                <!-- <div class=\"col-auto\">\r\n                  <button type=\"button\" [disabled]=\"!submitFlagAll\" class=\"btn smBtn minWdSmBtn btnSecondary\">Reset</button>\r\n                </div> -->\r\n                <div class=\"col-auto\">\r\n                  <button type=\"button\"  [routerLink]=\"['/addSystem/summary']\" class=\"btn smBtn minWdSmBtn btnSecondary\">Exit</button  >\r\n                </div>\r\n              </div>\r\n            </div>\r\n           \r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n  </form>\r\n  <div class=\"row g-3 pb-3 pt-4 justify-content-end\" *ngIf=\"basicConfiguration\">\r\n    <div class=\"col-auto\"  *ngIf=\"editFlag\">\r\n      <button type=\"button\" (click)=\"next('basicConfiguration')\" [disabled]=\"!basicInfoForm.valid\"\r\n        class=\"btn smBtn minWdSmBtn btnPrimary\">Next</button>\r\n    </div>\r\n    <div class=\"col-auto\" *ngIf=\"respData && !editFlag && (respData.recordStatus =='OPEN' || respData.recordStatus =='O')\">\r\n      <button type=\"button\" class=\"btn smBtn minWdSmBtn btnUpdate\" color=\"primary\"\r\n        (click)=onSubmitEditAddSystem()>Edit</button>\r\n    </div>\r\n    <div class=\"col-auto\"  *ngIf=\"respData && !editFlag && (respData.approvedStatus == 'UNAUTHORIZED' || respData.approvedStatus == 'U')\">\r\n      <button type=\"button\" class=\"btn smBtn minWdSmBtn btnAuth\" (click)=\"onClickOfAuth()\"\r\n        >Auth</button>\r\n    </div>\r\n    <div class=\"col-auto\"  *ngIf=\"respData && !editFlag && (respData.recordStatus =='OPEN' || respData.recordStatus =='O') && (respData.approvedEver == 'YES' || respData.approvedEver == 'Y')\">\r\n      <button type=\"button\" class=\"btn smBtn minWdSmBtn btnPrimary\" (click)=\"onClickOfClose()\"\r\n       >Close</button>\r\n    </div>\r\n    <div class=\"col-auto\"  *ngIf=\" respData && !editFlag && (respData.recordStatus =='CLOSED' || respData.recordStatus =='C') && (respData.approvedEver == 'YES' || respData.approvedEver == 'Y')\">\r\n      <button type=\"button\" class=\"btn smBtn minWdSmBtn btnPrimary\" (click)=\"onClickOfReopen()\"\r\n       >Reopen</button>\r\n    </div>\r\n\r\n    <div class=\"col-auto\" *ngIf=\"!editFlag && respData && (respData.approvedEver == 'NO' || respData.approvedEver == 'N')\">\r\n      <button type=\"button\" class=\"btn smBtn minWdSmBtn btnPrimary\" \r\n        (click)=\"OndeleteofUser()\">Delete</button>\r\n    </div>\r\n    <div class=\"col-auto\" >\r\n      <button  type=\"button\" href=\"javascript:void(0);\" [routerLink]=\"['/addSystem/summary']\" class=\"btn smBtn minWdSmBtn btnSecondary\">Exit</button  >\r\n    </div>\r\n  </div>\r\n  <div class=\"dbCardStyle\" *ngIf=\"respData\">\r\n    <div class=\"row\">\r\n      <div class=\"col-sm-6 col-md-4 col-lg-3\">\r\n        <div class=\"csCardStyle\">\r\n          <div class=\"row g-2 align-items-center\">\r\n            <div class=\"col-auto\">\r\n              <div class=\"csCardStyleIcon csCardStyleIconBg1\">\r\n                <!-- <i class=\"fa fa-edit faClass\"></i> -->\r\n               <i class=\"fa fa-edit faClass\"></i>\r\n              </div>\r\n            </div>\r\n            <div class=\"col\">\r\n              <div class=\"csCardStyleText\">\r\n                <h2>Maker</h2>\r\n                <p>{{respData.creatorId}}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-sm-6 col-md-4 col-lg-3\">\r\n        <div class=\"csCardStyle\">\r\n          <div class=\"row g-2 align-items-center\">\r\n            <div class=\"col-auto\">\r\n              <div class=\"csCardStyleIcon csCardStyleIconBg2\">\r\n                <img src=\"assets/images/time-stamp-icon.svg\" alt=\"...\">\r\n              </div>\r\n            </div>\r\n            <div class=\"col\">\r\n              <div class=\"csCardStyleText\">\r\n                <h2>Maker Time Stamp</h2>\r\n                <p>{{respData.createdTime| date: 'MM/dd/yyyy, h:mm a'}}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-sm-6 col-md-4 col-lg-3\">\r\n        <div class=\"csCardStyle\">\r\n          <div class=\"row g-2 align-items-center\">\r\n            <div class=\"col-auto\">\r\n              <div class=\"csCardStyleIcon csCardStyleIconBg3\">\r\n                <i class=\"fa fa-files-o faRecordStatus\" aria-hidden=\"true\"></i>\r\n                <!-- <i class=\"fa fa-files-o faRecordStatus\" aria-hidden=\"true\"></i> -->\r\n              </div>\r\n            </div>\r\n            <div class=\"col\">\r\n              <div class=\"csCardStyleText\">\r\n                <h2>Record Status</h2>\r\n                <p>{{respData.recordStatus}}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-sm-6 col-md-4 col-lg-3\">\r\n        <div class=\"csCardStyle\">\r\n          <div class=\"row g-2 align-items-center\">\r\n            <div class=\"col-auto\">\r\n              <div class=\"csCardStyleIcon csCardStyleIconBg4\">\r\n              <i class=\"fa fa-check-square-o faClassChecker\"></i>\r\n              </div>\r\n            </div>\r\n            <div class=\"col\">\r\n              <div class=\"csCardStyleText\">\r\n                <h2>Checker</h2>\r\n                <p>{{respData.approverId}}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-sm-6 col-md-4 col-lg-3\">\r\n        <div class=\"csCardStyle\">\r\n          <div class=\"row g-2 align-items-center\">\r\n            <div class=\"col-auto\">\r\n              <div class=\"csCardStyleIcon csCardStyleIconBg5\">\r\n                <img src=\"assets/images/checker-time-icon.svg\" alt=\"...\">\r\n              </div>\r\n            </div>\r\n            <div class=\"col\">\r\n              <div class=\"csCardStyleText\">\r\n                <h2>Checker Time Stamp</h2>\r\n                <p>{{respData.approvedTime| date: 'MM/dd/yyyy, h:mm a'}}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-sm-6 col-md-4 col-lg-3\">\r\n        <div class=\"csCardStyle\">\r\n          <div class=\"row g-2 align-items-center\">\r\n            <div class=\"col-auto\">\r\n              <div class=\"csCardStyleIcon csCardStyleIconBg6\">\r\n          <i class=\"fa fa-shield faClassFirstTimeAuth\"></i>\r\n              </div>\r\n            </div>\r\n            <div class=\"col\">\r\n              <div class=\"csCardStyleText\">\r\n                <h2>First Time Authorization</h2>\r\n                <p>{{respData.approvedEver}}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-sm-6 col-md-4 col-lg-3\">\r\n        <div class=\"csCardStyle\">\r\n          <div class=\"row g-2 align-items-center\">\r\n            <div class=\"col-auto\">\r\n              <div class=\"csCardStyleIcon csCardStyleIconBg7\">\r\n                <img src=\"assets/images/authorize.svg\" alt=\"...\" class=\"modImage\">\r\n              </div>\r\n            </div>\r\n            <div class=\"col\">\r\n              <div class=\"csCardStyleText\">\r\n                <h2>Authorization Status</h2>\r\n                <p>{{respData.approvedStatus}}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-sm-6 col-md-4 col-lg-3\">\r\n        <div class=\"csCardStyle\">\r\n          <div class=\"row g-2 align-items-center\">\r\n            <div class=\"col-auto\">\r\n              <div class=\"csCardStyleIcon csCardStyleIconBg7\">\r\n                <img src=\"assets/images/modification.svg\" class=\"modImage\" alt=\"...\" >\r\n              </div>\r\n            </div>\r\n            <div class=\"col\">\r\n              <div class=\"csCardStyleText\">\r\n                <h2>Modification Number</h2>\r\n                <p>{{respData.versionNo}}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  \r\n  </div>\r\n</div>","import { HttpErrorResponse } from \"@angular/common/http\";\r\nimport { THIS_EXPR } from \"@angular/compiler/src/output/output_ast\";\r\nimport { ChangeDetectorRef, Component, ElementRef, OnInit, ViewChild } from \"@angular/core\";\r\nimport { AbstractControl, FormArray, FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { Router } from \"@angular/router\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { Observable, of, Subject } from \"rxjs\";\r\nimport { CanDeactivateGuard, IDeactivateComponent } from \"src/app/shared/guards/can-deactivate.guard\";\r\nimport { permissionsLabels } from \"src/app/shared/models/fmosNewRolePermissions\";\r\nimport { AddSystemService } from \"src/app/shared/services/add-system.service\";\r\nimport { RoleService } from \"src/app/shared/services/role.service\";\r\nimport { ToastService } from \"src/app/shared/services/toast.service\";\r\nimport Swal from \"sweetalert2\";\r\n\r\n@Component({\r\n  selector: \"npr-add-system\",\r\n  templateUrl: \"./add-system.component.html\",\r\n  styleUrls: [\"./add-system.component.scss\"],\r\n})\r\nexport class AddSystemComponent implements OnInit ,IDeactivateComponent{\r\n  currentUser: any;\r\n  basicConfiguration: boolean = true;\r\n  messageConfiguration: boolean;\r\n  incomingMessageConfiguration: boolean;\r\n  xml: boolean;\r\n  mdbXml: boolean;\r\n  incomingMdbXml: boolean;\r\n  dbConnection: boolean;\r\n  basicInfoForm: FormGroup;\r\n  messsageTypeArray: string[];\r\n  messageKeyIso: any;\r\n  serviceTypeArray: string[];\r\n  protocolArray: string[];\r\n  messageConfigurationForm: FormGroup;\r\n  dataType: string[];\r\n  tcpForm: FormGroup;\r\n  sysService: any;\r\n  isoRespData: any[] = [];\r\n  typeDataIso: any;\r\n  outgomingTab: boolean;\r\n  messageBasisIso: any[] = [];\r\n  headerValueIso: any;\r\n  headerTagData: any[] = [];\r\n  encryptionArray: any[] = [];\r\n  header: any;\r\n  label2: string;\r\n  xmlRespData: any[] = [];\r\n  selectedFiles: any;\r\n  sizeOfFile: any;\r\n  currentFileUpload: any;\r\n  fileName: any;\r\n  uploadXmlResp: any;\r\n  tableDropDownClick1: boolean;\r\n  result: any[] = [];\r\n  fileNameOut: any;\r\n  queArray: string[];\r\n  tab1: boolean = true;\r\n  selections: any;\r\n  tab2: boolean;\r\n  messageConfigurationForm1: FormGroup;\r\n  tcpForm1: FormGroup;\r\n  dataType1: string[];\r\n  isoRespData1: any;\r\n  messageBasisIso1: any;\r\n  messageKeyIso1: any;\r\n  typeDataIso1: any;\r\n  headerValueIso1: any;\r\n  xmlRespData1: any;\r\n  tableDropDownClick: boolean;\r\n  selectedFiles1: any;\r\n  sizeOfFile1: any;\r\n  currentFileUpload1: any;\r\n  fileName1: any;\r\n  uploadXmlResp1: any;\r\n  label3: string;\r\n  array: any[] = [];\r\n  array1: any = [];\r\n  arrayMessageConfig: any[] = [];\r\n  arrayMessageConfig1: any;\r\n  submitFlag: boolean = true;\r\n  submitFlagAll: boolean = true;\r\n  messageType: string;\r\n  loading: boolean = true;\r\n  all: boolean;\r\n  tempArrayList: any[] = [];\r\n  index: any;\r\n  mdb: boolean;\r\n  respData: any;\r\n  editFlag: boolean = true;\r\n  fileUploadClick: boolean = false;\r\n  fileUploadClickAll: boolean = false;\r\n  sysCodeError: any;\r\n  isSysCodeAlreadyExist: boolean;\r\n  tab3: boolean;\r\n  tab11: boolean = true;\r\n  tab12: boolean;\r\n  tab21: boolean;\r\n  tab22: boolean;\r\n  @ViewChild(\"fileWrapper\") fileUploadWrapper: ElementRef;\r\n  @ViewChild(\"fileWrapper1\") fileUploadWrapper1: ElementRef;\r\n  roleCodes = new permissionsLabels();\r\n  table: any[] = [];\r\n  tableFlag: boolean;\r\n  tabelData: any[] = [];\r\n  tableFlag1: boolean;\r\n  tableFlag2: boolean;\r\n  table2: any[] = [];\r\n  tabelData1: any;\r\n  formTouched1: boolean = true;\r\n  formTouched2: boolean = true;\r\n  formTouched3: boolean = true;\r\n  formTouched4: boolean = true;\r\n  formTouched5: boolean = true;\r\n  headerArray: any[] = [];\r\n  dbConnectionOption: any[] = [];\r\n  isoRespDataFiltered: any[];\r\n  isoRespDataFiltered1: any[];\r\n  xmlRespDataFiltered: any[];\r\n  selectedMessageKeys: string[] = [];\r\n  xmlRespDataFiltered1: any[];\r\n  selectedMessageKeys1: any[] = [];\r\n  idValue: string;\r\n  showDialog = false;\r\n  subject = new Subject<boolean>();\r\n  selectedFilterData: any;\r\n  filteredHomes: any;\r\n  jhnbn: any;\r\n  externalPort: boolean;\r\n  medianPort: boolean;\r\n  saved:string='';\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private addSystem: AddSystemService,\r\n    private router: Router,\r\n    private roleService: RoleService,\r\n    private toastService: ToastService,\r\n    private spinner: NgxSpinnerService,private cdr: ChangeDetectorRef\r\n  ) {}\r\n  ngOnInit(): void {\r\n    \r\n\r\n    this.idValue=localStorage.getItem('idValue')\r\n    this.currentUser = localStorage.getItem(\"userFromLogin\");\r\n    this.tempArrayList = [];\r\n    this.fetchingHeadertag();\r\n    this.messsageTypeArray = [\"I\", \"O\", \"A\"];\r\n    this.queArray = [\"IBM\", \"JMS\"];\r\n    this.encryptionArray = [\"No Encryption\", \"BASE 64\", \"SHA 264\", \"SHA 512\"];\r\n    this.selections = \"No Encryption\";\r\n    this.serviceTypeArray = [\"server\", \"client\"];\r\n    this.protocolArray = [\r\n      \"TCP/IP\",\r\n      \"HTTPS/HTTP\",\r\n      \"MDB\",\r\n      \"EJB\",\r\n      \"DB Connection\",\r\n    ];\r\n    this.buildForm(null);\r\n    this.tcpForm = this.fb.group({\r\n      sysService: this.fb.array([this.createSysService()]),\r\n    });\r\n    this.tcpForm1 = this.fb.group({\r\n      sysService: this.fb.array([this.createSysService1()]),\r\n    });\r\n    this.messageConfigurationForm1 = this.fb.group({\r\n      sysChannel: this.fb.array([this.createSysChannel1()]),\r\n    });\r\n    this.messageConfigurationForm = this.fb.group({\r\n      sysChannel: this.fb.array([this.createSysChannel()]),\r\n    });\r\n    if(this.idValue != null){\r\n      this.addSystem.setIndex({\r\n        index: this.idValue,\r\n      });\r\n    }\r\n    this.addSystem.getIndex().subscribe((resp) => {\r\n      if (resp.index) {\r\n        this.index = resp.index;\r\n        this.addSystem.fecthingAddSystem().subscribe((dataresp) => {\r\n          if (dataresp.result) {\r\n            this.getRespBasedOnId(dataresp.result, resp.index);\r\n          }\r\n        });\r\n      } else {\r\n        this.loading = false;\r\n      }\r\n    });\r\n    this.roleService.fetchScreenPermissions(\"Add System\");\r\n    this.roleService.screenLabelList.subscribe(\r\n      (message) => (this.roleCodes = message)\r\n    );\r\n    setTimeout(() => {\r\n      console.log(this.roleCodes);\r\n    }, 100);\r\n  }\r\n  buildForm(item) {\r\n    this.basicInfoForm = this.fb.group({\r\n      createdTime: [item ? item.createdTime : \"\"],\r\n      creatorId: [item ? item.creatorId : \"\"],\r\n      systemId: [item ? item.systemId : \"\"],\r\n      systemCode: [item ? item.systemCode : \"\", [Validators.required]],\r\n      systemName: [item ? item.systemName : \"\", [Validators.required]],\r\n      serviceType: [item ? item.serviceType : \"\", [Validators.required]],\r\n      messsageType: [item ? item.messsageType : \"\", [Validators.required]],\r\n      medianIp: [item ? item.medianIp : \"\", [Validators.required]],\r\n      sourceUri: [item ? item.sourceUri : \"\"],\r\n      medianUri: [item ? item.medianUri : \"\"],\r\n      medianPort: [\r\n        item ? item.medianPort : \"\",\r\n        [Validators.required, Validators.minLength(2)],\r\n      ],\r\n      sourceIp: [\r\n        item ? item.sourceIp : \"\",\r\n        [\r\n          Validators.required,\r\n        ],\r\n      ],\r\n      sourcePort: [\r\n        item ? item.sourcePort : \"\",\r\n        [Validators.required, Validators.minLength(2)],\r\n      ],\r\n    });\r\n  }\r\n  canExit() : Promise<boolean> {\r\n    let isExit :boolean = false;\r\n    if (\r\n      ((this.basicInfoForm.touched ||\r\n        this.messageConfigurationForm.touched ||\r\n        this.tcpForm.touched ||\r\n        this.messageConfigurationForm1.touched ||\r\n        this.tcpForm1.touched) &&\r\n      (this.formTouched1 == true ||\r\n        this.formTouched2 == true ||\r\n        this.formTouched3 == true ||\r\n        this.formTouched4 == true ||\r\n        this.formTouched5 == true)) && this.saved!=\"saved\"\r\n    )  {\r\n    return Swal.fire({ \r\n      text: 'There are unsaved changes in the screen. Would you like to navigate to other screen?',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#E6224A',\r\n      cancelButtonColor: '#011945',\r\n      cancelButtonText: 'NO',\r\n      confirmButtonText: 'YES',\r\n      icon: 'info',\r\n    }).then((result) => {\r\n      if (result.isConfirmed === true) {\r\n        isExit=true;\r\n        this.cdr.markForCheck();\r\n           return isExit;\r\n      }\r\n      else{\r\n        isExit=false;\r\n        this.cdr.markForCheck();\r\n        return isExit;\r\n      }\r\n    \r\n    });\r\n  }\r\n else{\r\n  isExit=true;\r\n  return new Promise((resolve, reject) => {\r\n    if (isExit === true) {\r\n      isExit=true;\r\n      this.cdr.markForCheck();\r\n      resolve(true);\r\n    }\r\n  \r\n  })\r\n }\r\n    }\r\n\r\n  getRespBasedOnId(resp, arg0: string) {\r\n    this.fileUploadClick = true;\r\n    this.respData = resp.find((item) => item.systemId == arg0);\r\n    this.loading = false;\r\n    this.auditLog();\r\n    //messageConfiguration\r\n    this.editFlag = false;\r\n    this.arrayMessageConfig = this.respData.sysChannel;\r\n    this.arrayMessageConfig = this.respData.sysChannel;\r\n    if (this.respData.messsageType! == \"A\") {\r\n      this.arrayMessageConfig = this.arrayMessageConfig.filter(\r\n        (item) => item.messageType == \"I\" || item.messageType == \"O\"\r\n      );\r\n    }\r\n    if (this.respData.messsageType === \"A\") {\r\n      this.fileUploadClickAll = true;\r\n      this.arrayMessageConfig = this.arrayMessageConfig.filter(\r\n        (item) => item.messageType == \"I\"\r\n      );\r\n    }\r\n\r\n    this.onProtocalSlection(this.arrayMessageConfig[0].messageChannel);\r\n    \r\n    if (this.arrayMessageConfig[0].messageChannel === \"TCP/IP\") {\r\n      this.fetchingIso();\r\n      this.label2 = \"Field No\";\r\n    }\r\n    if (this.arrayMessageConfig[0].messageFormat === \"XML\") {\r\n      this.fetchingXMl();\r\n      this.label2 = \"Tag\";\r\n    }\r\n    if (this.arrayMessageConfig[0].messageChannel === \"DB Connection\") {\r\n      this.label2 = \"Column Name\";\r\n    }\r\n    if (this.arrayMessageConfig[0].messageFormat === \"JSON\") {\r\n      this.label2 = \"Key\";\r\n    }\r\n    while (this.formArrMessageConfig.length > 0) {\r\n      this.formArrMessageConfig.removeAt(this.formArrMessageConfig.length - 1);\r\n    }\r\n    this.arrayMessageConfig.forEach((x) => {\r\n      this.formArrMessageConfig.push(this.fb.group(x));\r\n    });\r\n    //tcForm\r\n    this.array = this.arrayMessageConfig[0].sysService;\r\n    this.onProtocalSlection(this.arrayMessageConfig[0].messageChannel);\r\n    while (this.formArr.length > 0) {\r\n      this.formArr.removeAt(this.formArr.length - 1);\r\n    }\r\n    if (\r\n      this.messageConfigurationForm.value?.sysChannel[0]?.messageChannel !==\r\n      \"TCP/IP\"\r\n    ) {\r\n      this.array.forEach((x) => {\r\n        this.formArr.push(this.fb.group(x));\r\n      });\r\n    }\r\n    if (this.respData.sysChannel.length > 1) {\r\n      this.arrayMessageConfig1 = this.respData.sysChannel;\r\n      this.arrayMessageConfig1 = this.arrayMessageConfig1.filter(\r\n        (item) => item.messageType == \"O\"\r\n      );\r\n      this.onProtocalSlection1(this.arrayMessageConfig1[0].messageChannel);\r\n      while (this.formArrMessageConfig1.length > 0) {\r\n        this.formArrMessageConfig1.removeAt(\r\n          this.formArrMessageConfig1.length - 1\r\n        );\r\n      }\r\n      this.arrayMessageConfig1.forEach((x) => {\r\n        this.formArrMessageConfig1.push(this.fb.group(x));\r\n      });\r\n      //tcForm1\r\n      this.array1 = this.arrayMessageConfig1[0].sysService;\r\n      this.onProtocalSlection1(this.arrayMessageConfig1[0].messageChannel);\r\n      while (this.formArr1.length > 0) {\r\n        this.formArr1.removeAt(this.formArr1.length - 1);\r\n      }\r\n      if (\r\n        this.messageConfigurationForm1.value?.sysChannel[0]?.messageChannel !==\r\n        \"TCP/IP\"\r\n      ) {\r\n        this.array1.forEach((x) => {\r\n          this.formArr1.push(this.fb.group(x));\r\n        });\r\n      }\r\n    }\r\n    this.buildForm(this.respData);\r\n    this.auditLog();\r\n    this.spinner.hide();\r\n  }\r\n  get formArr() {\r\n    return this.tcpForm.get(\"sysService\") as FormArray;\r\n  }\r\n  get formArr1() {\r\n    return this.tcpForm1.get(\"sysService\") as FormArray;\r\n  }\r\n  get formArrMessageConfig() {\r\n    return this.messageConfigurationForm.get(\"sysChannel\") as FormArray;\r\n  }\r\n  get formArrMessageConfig1() {\r\n    return this.messageConfigurationForm1.get(\"sysChannel\") as FormArray;\r\n  }\r\n  createSysChannel() {\r\n    return this.fb.group({\r\n      channelId: [\"\"],\r\n      dbConnectString: [\"\"],\r\n      dbPassword: [\"\"],\r\n      dbServiceName: [\"\"],\r\n      dbUsername: [\"\"],\r\n      queueChannel: [\"\"],\r\n      queueConnFactory: [\"\"],\r\n      queueManager: [\"\"],\r\n      queueName: [\"\"],\r\n      queueType: [\"\"],\r\n      messageChannel: [\"\", [Validators.required]],\r\n      messageFormat: [\"\", [Validators.required]],\r\n      messageType: [\"\"],\r\n    });\r\n  }\r\n  createSysChannel1() {\r\n    return this.fb.group({\r\n      channelId: [\"\"],\r\n      dbConnectString: [\"\"],\r\n      dbPassword: [\"\"],\r\n      dbServiceName: [\"\"],\r\n      dbUsername: [\"\"],\r\n      queueChannel: [\"\"],\r\n      queueConnFactory: [\"\"],\r\n      queueManager: [\"\"],\r\n      queueName: [\"\"],\r\n      queueType: [\"\"],\r\n      messageChannel: [\"\", [Validators.required]],\r\n      messageFormat: [\"\", [Validators.required]],\r\n      messageType: [\"\"],\r\n    });\r\n  }\r\n  createSysService(): any {\r\n    return this.fb.group({\r\n      channelId: [\"\"],\r\n      dataType: [\"\", [Validators.required]],\r\n      encryption: [\"No Encryption\", [Validators.required]],\r\n      headerTag: [\"\", [Validators.required]],\r\n      headerValue: [\"\", [Validators.required]],\r\n      messageBasis: [\"\"],\r\n      messageKey: [\"\", [Validators.required]],\r\n      serviceId: [\"\"],\r\n      systemChannelId: [\"\"],\r\n    });\r\n  }\r\n  createSysService1(): any {\r\n    return this.fb.group({\r\n      channelId: [\"\"],\r\n      dataType: [\"\", [Validators.required]],\r\n      encryption: [\"No Encryption\", [Validators.required]],\r\n      headerTag: [\"\", [Validators.required]],\r\n      headerValue: [\"\", [Validators.required]],\r\n      messageBasis: [\"\"],\r\n      messageKey: [\"\", [Validators.required]],\r\n      serviceId: [\"\"],\r\n      systemChannelId: [\"\"],\r\n    });\r\n  }\r\n  allMethod() {\r\n    this.tab1 = false;\r\n    this.tab2 = true;\r\n    this.tab21 = true;\r\n    this.tab22 = false;\r\n  }\r\n  auditLog() {\r\n    if (this.respData.approverId === \"null\") {\r\n      this.respData.approverId = \" \";\r\n    }\r\n    if (this.respData.approvedStatus === \"N\") {\r\n      this.respData.approvedStatus = \"UNAUTHORIZED\";\r\n    }\r\n    if (this.respData.approvedStatus === \"Y\") {\r\n      this.respData.approvedStatus = \"AUTHORIZED\";\r\n    }\r\n    if (this.respData.approvedStatus === \"A\") {\r\n      this.respData.approvedStatus = \"AUTHORIZED\";\r\n    }\r\n    if (this.respData.approvedStatus === \"U\") {\r\n      this.respData.approvedStatus = \"UNAUTHORIZED\";\r\n    }\r\n    if (this.respData.recordStatus === \"O\") {\r\n      this.respData.recordStatus = \"OPEN\";\r\n    }\r\n    if (this.respData.recordStatus === \"C\") {\r\n      this.respData.recordStatus = \"CLOSED\";\r\n    }\r\n    if (this.respData.approvedEver === \"N\") {\r\n      this.respData.approvedEver = \"NO\";\r\n    }\r\n    if (this.respData.approvedEver === \"Y\") {\r\n      this.respData.approvedEver = \"YES\";\r\n    }\r\n  }\r\n  next(value) {\r\n    if (value === \"basicConfiguration\") {\r\n      console.log(this.index);\r\n      console.log(this.messageConfigurationForm.value);\r\n      console.log(this.basicInfoForm.value);\r\n      this.addSystem\r\n        .validateCode(this.basicInfoForm.value.systemCode)\r\n        .subscribe((result) => {\r\n          console.log(result);\r\n          this.isSysCodeAlreadyExist = result.exists;\r\n          this.sysCodeError = result.response;\r\n          if (this.isSysCodeAlreadyExist === true && this.index === undefined) {\r\n            Swal.fire({ title: this.sysCodeError + \" !\", icon: \"error\" });\r\n            this.all = false;\r\n\r\n            return;\r\n          } else {\r\n            if (this.index === undefined) {\r\n              this.ipAddressValidating();\r\n            } else {\r\n              if (this.basicInfoForm.value.messsageType == \"I\") {\r\n                this.messageType = \"Incoming\";\r\n              }\r\n              if (this.basicInfoForm.value.messsageType == \"O\") {\r\n                this.messageType = \"Outgoing\";\r\n              }\r\n              this.basicConfiguration = false;\r\n              this.messageConfiguration = true;\r\n              this.incomingMessageConfiguration = false;\r\n              this.xml = false;\r\n              this.mdbXml = false;\r\n              this.incomingMdbXml = false;\r\n              this.dbConnection = false;\r\n            }\r\n          }\r\n        });\r\n    }\r\n    if (\r\n      value === \"messageConfiguration\" &&\r\n      this.basicInfoForm.value.messsageType !== \"A\"\r\n    ) {\r\n      if (\r\n        (this.messageConfigurationForm.value.sysChannel[0].messageChannel ===\r\n          \"TCP/IP\" ||\r\n          this.messageConfigurationForm.value.sysChannel[0].messageChannel ===\r\n            \"Https/Http\" ||\r\n          this.messageConfigurationForm.value.sysChannel[0].messageFormat ===\r\n            \"JSON\" ||\r\n          this.messageConfigurationForm.value.sysChannel[0].messageFormat ===\r\n            \"XML\" ||\r\n            this.messageConfigurationForm.value.sysChannel[0].messageChannel ===\r\n            \"DB Connection\") &&\r\n        this.basicInfoForm.value.messsageType != \"A\"\r\n      ) {\r\n        this.messageConfigurationForm.value.sysChannel[0].messageType =\r\n          this.basicInfoForm.value.messsageType;\r\n        this.basicConfiguration = false;\r\n        this.messageConfiguration = false;\r\n        this.incomingMessageConfiguration = true;\r\n        this.xml = false;\r\n        this.mdb = false;\r\n        this.mdbXml = false;\r\n        this.incomingMdbXml = false;\r\n        this.dbConnection = false;\r\n        this.tableFlag = false;\r\n        if (\r\n          this.index === undefined &&\r\n          this.messageConfigurationForm.value.sysChannel[0].messageChannel ===\r\n            \"TCP/IP\"\r\n        ) {\r\n          this.fetchingIso();\r\n          this.label2 = \"Field No\";\r\n        }\r\n        if (\r\n          this.index !== undefined &&\r\n          this.messageConfigurationForm.value.sysChannel[0].messageChannel ===\r\n            \"TCP/IP\"\r\n        ) {\r\n          this.label2 = \"Field No\";\r\n        }\r\n\r\n        if (\r\n          this.messageConfigurationForm.value.sysChannel[0].messageFormat ===\r\n          \"XML\"\r\n        ) {\r\n          this.fetchingXMl();\r\n          this.label2 = \"Tag\";\r\n        }\r\n        if (\r\n          this.messageConfigurationForm.value.sysChannel[0].messageFormat ===\r\n          \"JSON\"\r\n        ) {\r\n          console.log(\"tfghvhjgyug\")\r\n          this.fetchingXMl();\r\n          this.label2 = \"Key\";\r\n        }\r\n      }\r\n      if (\r\n        (this.messageConfigurationForm.value.sysChannel[0].messageFormat ===\r\n          \"FLATFILE\" ||\r\n          this.messageConfigurationForm.value.sysChannel[0].messageFormat ===\r\n            \"CSV/EXCEL\") &&\r\n        this.basicInfoForm.value.messsageType != \"A\"\r\n      ) {\r\n        this.messageConfigurationForm.value.sysChannel[0].messageType =\r\n          this.basicInfoForm.value.messsageType;\r\n        this.basicConfiguration = false;\r\n        this.messageConfiguration = false;\r\n        this.incomingMessageConfiguration = false;\r\n        this.xml = false;\r\n        this.mdb = true;\r\n        this.mdbXml = false;\r\n        this.incomingMdbXml = false;\r\n        this.dbConnection = false;\r\n        this.tableFlag = false;\r\n      }\r\n      if (\r\n        this.messageConfigurationForm.value.sysChannel[0].messageChannel ===\r\n        \"DB Connection\"\r\n      ) {\r\n        this.fetchDatabaseTable();\r\n        this.label2=\"Column Name\"\r\n        this.basicInfoForm.value.messsageType;\r\n        this.basicConfiguration = false;\r\n        this.messageConfiguration = false;\r\n        this.incomingMessageConfiguration = true;\r\n        this.xml = false;\r\n        this.mdb = false;\r\n        this.mdbXml = false;\r\n        this.incomingMdbXml = false;\r\n        this.dbConnection = false;\r\n        this.tableFlag = true;\r\n      }\r\n    }\r\n    if (\r\n      value === \"basicConfiguration\" &&\r\n      this.basicInfoForm.value.messsageType === \"A\"\r\n    ) {\r\n      this.all = true;\r\n      this.tab1 = true;\r\n      this.tab11 = true;\r\n      this.tab12 = false;\r\n      this.tab2 = false;\r\n    }\r\n  }\r\n  fetchDatabaseTable() {\r\n    this.messageConfigurationForm.value.sysChannel[0].messageType=this.basicInfoForm.value.messsageType\r\n    console.log(this.messageConfigurationForm.value.sysChannel[0]);\r\n    this.addSystem\r\n      .pingDataSource(\r\n        this.messageConfigurationForm.value.sysChannel[0].dbConnectString,\r\n        this.messageConfigurationForm.value.sysChannel[0].dbServiceName,\r\n        this.messageConfigurationForm.value.sysChannel[0].dbUsername,\r\n        this.messageConfigurationForm.value.sysChannel[0].dbPassword\r\n      )\r\n      .subscribe((resp) => {\r\n        console.log(\"resp from backend for fetching database tables \", resp);\r\n        this.table = resp;\r\n      });\r\n\r\n    if (this.index !== undefined) {\r\n      for (\r\n        let index = 0;\r\n        index < this.tcpForm.value.sysService.length;\r\n        index++\r\n      ) {\r\n        const filteredHomes =\r\n          this.tcpForm.value.sysService[index].messageKey.split(\",\");\r\n        this.tcpForm\r\n          .get(\"sysService\")\r\n          [\"controls\"][index].get(\"messageKey\")\r\n          .setValue(filteredHomes[1]);\r\n      }\r\n    }\r\n    this.label2 = \"Column Name\";\r\n  }\r\n  fetchDatabaseTable1() {\r\n    console.log(this.messageConfigurationForm.value.sysChannel[0]);\r\n    this.addSystem\r\n      .pingDataSource(\r\n        this.messageConfigurationForm1.value.sysChannel[0].dbConnectString,\r\n        this.messageConfigurationForm1.value.sysChannel[0].dbServiceName,\r\n        this.messageConfigurationForm1.value.sysChannel[0].dbUsername,\r\n        this.messageConfigurationForm1.value.sysChannel[0].dbPassword\r\n      )\r\n      .subscribe((resp) => {\r\n        console.log(\"resp from backend for fetching database tables \", resp);\r\n        this.table2 = resp;\r\n      });\r\n\r\n    if (this.index !== undefined) {\r\n      for (\r\n        let index = 0;\r\n        index < this.tcpForm1.value.sysService.length;\r\n        index++\r\n      ) {\r\n        const filteredHomes =\r\n          this.tcpForm1.value.sysService[index].messageKey.split(\",\");\r\n        this.tcpForm1\r\n          .get(\"sysService\")\r\n          [\"controls\"][index].get(\"messageKey\")\r\n          .setValue(filteredHomes[1]);\r\n      }\r\n    }\r\n    this.label2 = \"Column Name\";\r\n  }\r\n  onTableSlection(event) {\r\n    this.tableDropDownClick = true;\r\n    this.addSystem\r\n      .coulmnNameBasedonTableName(\r\n        this.messageConfigurationForm.value.sysChannel[0].dbConnectString,\r\n        this.messageConfigurationForm.value.sysChannel[0].dbServiceName,\r\n        this.messageConfigurationForm.value.sysChannel[0].dbUsername,\r\n        this.messageConfigurationForm.value.sysChannel[0].dbPassword,\r\n        event\r\n      )\r\n      .subscribe((resp) => {\r\n        console.log(\"resp from backend for fetching database tables \", resp);\r\n        this.tabelData = resp;\r\n      });\r\n  }\r\n  onTableSlection1(event) {\r\n    this.tableDropDownClick1 = true;\r\n    this.addSystem\r\n      .coulmnNameBasedonTableName(\r\n        this.messageConfigurationForm1.value.sysChannel[0].dbConnectString,\r\n        this.messageConfigurationForm1.value.sysChannel[0].dbServiceName,\r\n        this.messageConfigurationForm1.value.sysChannel[0].dbUsername,\r\n        this.messageConfigurationForm1.value.sysChannel[0].dbPassword,\r\n        event\r\n      )\r\n      .subscribe((resp) => {\r\n        console.log(\"resp from backend for fetching database tables \", resp);\r\n        this.tabelData1 = resp;\r\n      });\r\n  }\r\n  ipAddressValidating() {\r\n    let payload: any = {};\r\n    (payload.sourceIp = this.basicInfoForm.value.sourceIp),\r\n      (payload.sourcePort = this.basicInfoForm.value.sourcePort),\r\n      (payload.medianIp = this.basicInfoForm.value.medianIp),\r\n      (payload.medianPort = this.basicInfoForm.value.medianPort);\r\n    this.addSystem.validatePort(payload).subscribe(\r\n      (resp) => {\r\n        if (resp == true) {\r\n          if (this.basicInfoForm.value.messsageType == \"I\") {\r\n            this.messageType = \"Incoming\";\r\n          }\r\n          if (this.basicInfoForm.value.messsageType == \"O\") {\r\n            this.messageType = \"Outgoing\";\r\n          }\r\n          this.basicConfiguration = false;\r\n          this.messageConfiguration = true;\r\n          this.incomingMessageConfiguration = false;\r\n          this.xml = false;\r\n          this.mdbXml = false;\r\n          this.incomingMdbXml = false;\r\n          this.dbConnection = false;\r\n          this.tableFlag = false;\r\n        }\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n        Swal.fire({ title: error.error.message + \" !\", icon: \"error\" });\r\n        this.all = false;\r\n        return;\r\n      }\r\n    );\r\n  }\r\n  next1() {\r\n    if (\r\n      (this.index === undefined &&\r\n        this.messageConfigurationForm.value.sysChannel[0].messageChannel ===\r\n          \"TCP/IP\") ||\r\n      this.messageConfigurationForm.value.sysChannel[0].messageFormat === \"JSON\"\r\n    ) {\r\n      this.fetchingIso();\r\n      this.label2 = \"Field No\";\r\n    }\r\n    if (\r\n      this.messageConfigurationForm.value.sysChannel[0].messageFormat === \"XML\"\r\n    ) {\r\n      this.fetchingXMl();\r\n      this.label2 = \"Tag\";\r\n    }\r\n    if (\r\n      this.messageConfigurationForm.value.sysChannel[0].messageChannel ===\r\n      \"DB Connection\"\r\n    ) {\r\n      // this.fetchingXMl();\r\n      this.label2 = \"Column name\";\r\n      this.tableFlag1 = true;\r\n      this.fetchDatabaseTable();\r\n    }\r\n    this.tab1 = true;\r\n    this.tab11 = false;\r\n    this.tab12 = true;\r\n    this.tab2 = false;\r\n  }\r\n  next2() {\r\n    if (\r\n      this.messageConfigurationForm1.value.sysChannel[0].messageChannel ===\r\n        \"TCP/IP\" ||\r\n      this.messageConfigurationForm.value.sysChannel[0].messageFormat === \"JSON\"\r\n    ) {\r\n      this.fetchingIso1();\r\n      this.label3 = \"Field No\";\r\n    }\r\n    if (\r\n      this.messageConfigurationForm1.value.sysChannel[0].messageFormat === \"XML\"\r\n    ) {\r\n      this.fetchingXMl1();\r\n      this.label3 = \"Tag\";\r\n    }\r\n    if (\r\n      this.messageConfigurationForm1.value.sysChannel[0].messageChannel ===\r\n      \"DB Connection\"\r\n    ) {\r\n      this.fetchDatabaseTable1();\r\n      (this.label3 = \"Column Name\"), (this.tableFlag2 = true);\r\n    }\r\n\r\n    this.tab1 = false;\r\n    this.tab2 = true;\r\n    this.tab21 = false;\r\n    this.tab22 = true;\r\n    this.basicConfiguration = false;\r\n  }\r\n  onClickOfAuth() {\r\n    Swal.fire({\r\n      //text: 'Unable to process' + 'Error ' + this.responseforfileupload.errorMessage + 'Do you want to Proceed??',\r\n      text: \"You are trying to Authorize record. \" + \" Do you want to proceed?\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3e54b8\",\r\n      cancelButtonColor: \"#d33\",\r\n      // confirmButtonText: 'PROCEED.'\r\n      cancelButtonText: \"NO\",\r\n      confirmButtonText: \"YES\",\r\n      icon: \"info\",\r\n      iconColor: \"#d33\",\r\n    }).then((result) => {\r\n      console.log(\"this is reopen \", result);\r\n      if (result.isConfirmed === true) {\r\n        if (this.currentUser === this.respData.creatorId) {\r\n          Swal.fire({ text: \"Maker Cannot Authorize Record!\", icon: \"error\" });\r\n          return;\r\n        }\r\n        let obj_test: any = {};\r\n        if (\r\n          this.basicInfoForm.value.messsageType === \"I\" ||\r\n          this.basicInfoForm.value.messsageType === \"O\"\r\n        ) {\r\n          obj_test = this.basicInfoForm.value;\r\n          obj_test.sysChannel = this.messageConfigurationForm.value.sysChannel;\r\n          for (let index = 0; index < obj_test.sysChannel.length; index++) {\r\n            obj_test.sysChannel[index].sysService =\r\n              this.tcpForm.value.sysService;\r\n          }\r\n        }\r\n        //submitAll\r\n        if (this.basicInfoForm.value.messsageType === \"A\") {\r\n          obj_test = this.basicInfoForm.value;\r\n          obj_test.sysChannel = this.messageConfigurationForm.value.sysChannel;\r\n          this.messageConfigurationForm.value.sysChannel[0].messageType = \"I\";\r\n          this.messageConfigurationForm1.value.sysChannel[0].messageType = \"O\";\r\n          obj_test.sysChannel.push(\r\n            this.messageConfigurationForm1.value.sysChannel[0]\r\n          );\r\n          obj_test.sysChannel[0].sysService = this.tcpForm.value.sysService;\r\n          obj_test.sysChannel[1].sysService = this.tcpForm1.value.sysService;\r\n        }\r\n        this.addSystem\r\n          .editaddsystem(\"auth\", this.currentUser, obj_test)\r\n          .subscribe((response) => {\r\n            if (response) {\r\n              this.respData = response;\r\n              this.auditLog();\r\n              Swal.fire({ text: \"Record is Authorized\", icon: \"success\" });\r\n            }\r\n          });\r\n      }\r\n    });\r\n    \r\n  }\r\n  onClickOfClose() {\r\n    Swal.fire({\r\n      //text: 'Unable to process' + 'Error ' + this.responseforfileupload.errorMessage + 'Do you want to Proceed??',\r\n      text: \"You are trying to Close record. \" + \" Do you want to proceed?\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3e54b8\",\r\n      cancelButtonColor: \"#d33\",\r\n      // confirmButtonText: 'PROCEED.'\r\n      cancelButtonText: \"NO\",\r\n      confirmButtonText: \"YES\",\r\n      icon: \"info\",\r\n      iconColor: \"#d33\",\r\n    }).then((result) => {\r\n      console.log(\"this is reopen \", result);\r\n       \r\n      if (result.isConfirmed === true) {\r\n        let obj_test: any = {};\r\n       \r\n        \r\n        if (\r\n          this.basicInfoForm.value.messsageType === \"I\" ||\r\n          this.basicInfoForm.value.messsageType === \"O\"\r\n        ) {\r\n          obj_test = this.basicInfoForm.value;\r\n          console.log(this.messageConfigurationForm);\r\n          console.log(this.messageConfigurationForm.value);\r\n          console.log(this.messageConfigurationForm.value.sysChannel);\r\n          \r\n\r\n          obj_test.sysChannel = this.messageConfigurationForm.value.sysChannel;\r\n          for (let index = 0; index < obj_test.sysChannel.length; index++) {\r\n            obj_test.sysChannel[index].sysService =\r\n              this.tcpForm.value.sysService;\r\n          }\r\n        }\r\n        //submitAll\r\n        if (this.basicInfoForm.value.messsageType === \"A\") {\r\n          obj_test = this.basicInfoForm.value;\r\n          obj_test.sysChannel = this.messageConfigurationForm.value.sysChannel;\r\n          this.messageConfigurationForm.value.sysChannel[0].messageType = \"I\";\r\n          this.messageConfigurationForm1.value.sysChannel[0].messageType = \"O\";\r\n          obj_test.sysChannel.push(\r\n            this.messageConfigurationForm1.value.sysChannel[0]\r\n          );\r\n          obj_test.sysChannel[0].sysService = this.tcpForm.value.sysService;\r\n          obj_test.sysChannel[1].sysService = this.tcpForm1.value.sysService;\r\n        }\r\n        this.addSystem\r\n          .editaddsystem(\"close\", this.currentUser, obj_test)\r\n          .subscribe((response) => {\r\n            if (response) {\r\n              this.respData = response;\r\n              this.auditLog();\r\n              Swal.fire({ text: \"Record is Closed\", icon: \"success\" });\r\n            }\r\n          });\r\n      }\r\n    });\r\n  }\r\n  onClickOfReopen() {\r\n    Swal.fire({\r\n      //text: 'Unable to process' + 'Error ' + this.responseforfileupload.errorMessage + 'Do you want to Proceed??',\r\n      text: \"You are trying to Reopen record. \" + \" Do you want to proceed?\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3e54b8\",\r\n      cancelButtonColor: \"#d33\",\r\n      // confirmButtonText: 'PROCEED.'\r\n      cancelButtonText: \"NO\",\r\n      confirmButtonText: \"YES\",\r\n      icon: \"info\",\r\n      iconColor: \"#d33\",\r\n    }).then((result) => {\r\n      console.log(\"this is reopen \", result);\r\n      if (result.isConfirmed === true) {\r\n        let obj_test: any = {};\r\n        if (\r\n          this.basicInfoForm.value.messsageType === \"I\" ||\r\n          this.basicInfoForm.value.messsageType === \"O\"\r\n        ) {\r\n          obj_test = this.basicInfoForm.value;\r\n          obj_test.sysChannel = this.messageConfigurationForm.value.sysChannel;\r\n          for (let index = 0; index < obj_test.sysChannel.length; index++) {\r\n            obj_test.sysChannel[index].sysService =\r\n              this.tcpForm.value.sysService;\r\n          }\r\n        }\r\n        //submitAll\r\n        if (this.basicInfoForm.value.messsageType === \"A\") {\r\n          obj_test = this.basicInfoForm.value;\r\n          obj_test.sysChannel = this.messageConfigurationForm.value.sysChannel;\r\n          this.messageConfigurationForm.value.sysChannel[0].messageType = \"I\";\r\n          this.messageConfigurationForm1.value.sysChannel[0].messageType = \"O\";\r\n          obj_test.sysChannel.push(\r\n            this.messageConfigurationForm1.value.sysChannel[0]\r\n          );\r\n          obj_test.sysChannel[0].sysService = this.tcpForm.value.sysService;\r\n          obj_test.sysChannel[1].sysService = this.tcpForm1.value.sysService;\r\n        }\r\n        this.addSystem\r\n          .editaddsystem(\"open\", this.currentUser, obj_test)\r\n          .subscribe((response) => {\r\n            if (response) {\r\n              this.respData = response;\r\n              this.auditLog();\r\n              Swal.fire({ text: \"Record is Reopened\", icon: \"success\" });\r\n            }\r\n          });\r\n      }\r\n    });\r\n    //submit2\r\n  }\r\n  OndeleteofUser() {\r\n    Swal.fire({\r\n      //text: 'Unable to process' + 'Error ' + this.responseforfileupload.errorMessage + 'Do you want to Proceed??',\r\n      text: \"You are trying to Delete record. \" + \" Do you want to proceed?\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3e54b8\",\r\n      cancelButtonColor: \"#d33\",\r\n      // confirmButtonText: 'PROCEED.'\r\n      cancelButtonText: \"NO\",\r\n      confirmButtonText: \"YES\",\r\n      icon: \"info\",\r\n      iconColor: \"#d33\",\r\n    }).then((result) => {\r\n      console.log(\"this is reopen \", result);\r\n      if (result.isConfirmed === true) {\r\n        this.addSystem\r\n          .deleteAddSystem(this.currentUser, this.respData.systemId)\r\n          .subscribe((response) => {\r\n            if (response) {\r\n              Swal.fire({ text: \"Record is Deleted\", icon: \"success\" });\r\n              this.router.navigate([\"/addSystem/summary\"]);\r\n            }\r\n          });\r\n      }\r\n    });\r\n  }\r\n  previousAll(value) {\r\n    if (value === \"1\") {\r\n      this.basicConfiguration = true;\r\n      this.messageConfiguration = false;\r\n      this.incomingMessageConfiguration = false;\r\n      this.xml = false;\r\n      this.mdbXml = false;\r\n      this.incomingMdbXml = false;\r\n      this.dbConnection = false;\r\n      this.tab1 = false;\r\n      this.tab2 = false;\r\n      this.all = false;\r\n      this.tableFlag = false;\r\n    }\r\n    if (value === \"2\") {\r\n      this.basicConfiguration = false;\r\n      this.messageConfiguration = false;\r\n      this.incomingMessageConfiguration = false;\r\n      this.xml = false;\r\n      this.mdbXml = false;\r\n      this.incomingMdbXml = false;\r\n      this.dbConnection = false;\r\n      this.tab1 = true;\r\n      this.tab11 = true;\r\n      this.tab12 = false;\r\n      this.tab2 = false;\r\n      this.tableFlag = false;\r\n    }\r\n    if (value === \"3\") {\r\n      this.basicConfiguration = false;\r\n      this.messageConfiguration = false;\r\n      this.incomingMessageConfiguration = false;\r\n      this.xml = false;\r\n      this.mdbXml = false;\r\n      this.incomingMdbXml = false;\r\n      this.dbConnection = false;\r\n      this.tableFlag = false;\r\n      this.tab1 = true;\r\n      this.tab11 = false;\r\n      this.tab12 = true;\r\n      this.tab2 = false;\r\n    }\r\n    if (value === \"4\") {\r\n      this.tableFlag = false;\r\n      this.basicConfiguration = false;\r\n      this.messageConfiguration = false;\r\n      this.incomingMessageConfiguration = false;\r\n      this.xml = false;\r\n      this.mdbXml = false;\r\n      this.incomingMdbXml = false;\r\n      this.dbConnection = false;\r\n      this.tab1 = false;\r\n      this.tab2 = true;\r\n      this.tab21 = true;\r\n      this.tab22 = false;\r\n    }\r\n  }\r\n  previous(value) {\r\n    if (value === \"messageConfiguration\") {\r\n      this.basicConfiguration = true;\r\n      this.messageConfiguration = false;\r\n      this.incomingMessageConfiguration = false;\r\n      this.xml = false;\r\n      this.mdbXml = false;\r\n      this.incomingMdbXml = false;\r\n      this.dbConnection = false;\r\n      this.tableFlag = false;\r\n      this.all = false;\r\n      this.mdb = false;\r\n    }\r\n    if (value === \"incomingMessageConfiguration\") {\r\n      this.incomingMessageConfiguration = false;\r\n      this.xml = false;\r\n      this.basicConfiguration = false;\r\n      this.messageConfiguration = true;\r\n      this.mdbXml = false;\r\n      this.incomingMdbXml = false;\r\n      this.dbConnection = false;\r\n      this.mdb = false;\r\n      this.tableFlag = false;\r\n    }\r\n  }\r\n\r\n  onProtocalSlection(event) {\r\n    this.tempArrayList = [];\r\n    // this.messageConfigurationForm.get('messageFormat').setValue(\"\");\r\n    if (this.index === undefined) {\r\n      this.messageConfigurationForm\r\n        .get(\"sysChannel\")\r\n        [\"controls\"][0].get(\"messageFormat\")\r\n        .setValue(\"\");\r\n    }\r\n    if (event === \"TCP/IP\") {\r\n      this.dataType = [];\r\n      this.dataType = [\"ISO 8583 1987\", \"ISO 8583 1993\", \"ISO 8583 2003\"];\r\n    } else if (event === \"Https/Http\") {\r\n      this.dataType = [];\r\n      this.dataType = [\"XML\", \"JSON\"];\r\n    } else if (\r\n      event === \"EJB\" ||\r\n      event === \"DB Connection\" ||\r\n      event === \"MDB\"\r\n    ) {\r\n      this.dataType = [];\r\n      this.dataType = [\"XML\", \"JSON\", \"CSV/EXCEL\", \"FLATFILE\"];\r\n    }\r\n  }\r\n  onProtocalSlection1(event) {\r\n    if (this.index === undefined) {\r\n      this.messageConfigurationForm1\r\n        .get(\"sysChannel\")\r\n        [\"controls\"][0].get(\"messageFormat\")\r\n        .setValue(\"\");\r\n    }\r\n\r\n    if (event === \"TCP/IP\") {\r\n      this.dataType1 = [];\r\n      this.dataType1 = [\"ISO 8583 1987\", \"ISO 8583 1993\", \"ISO 8583 2003\"];\r\n    } else if (event === \"Https/Http\") {\r\n      this.dataType1 = [];\r\n      this.dataType1 = [\"XML\", \"JSON\"];\r\n    } else if (\r\n      event === \"EJB\" ||\r\n      event === \"DB Connection\" ||\r\n      event === \"MDB\"\r\n    ) {\r\n      this.dataType1 = [];\r\n      this.dataType1 = [\"XML\", \"JSON\", \"CSV/EXCEL\", \"FLATFILE\"];\r\n    }\r\n  }\r\n  addBioDocs() {\r\n    this.sysService = this.tcpForm.get(\"sysService\") as FormArray;\r\n    console.log(this.sysService);\r\n    const enteredRecord = this.tcpForm.get(\"sysService\") as FormArray;\r\n    const selectedHeaderTags = new Set(\r\n      enteredRecord.value.map((d) => d.headerTag)\r\n    );\r\n    this.headerArray = this.headerTagData\r\n      .filter((data) => selectedHeaderTags.has(data.headerTag))\r\n      .map((val) => val.headerTag);\r\n    if (\r\n      this.messageConfigurationForm.value?.sysChannel[0]?.messageChannel !==\r\n      \"TCP/IP\"\r\n    ) {\r\n      console.log(this.tcpForm.value,\"Inside add bio\");\r\n      const messageKeys = new Set(\r\n        this.sysService.value.map((val) => val.messageKey)\r\n      );\r\n      this.xmlRespDataFiltered = this.xmlRespData.filter(\r\n        (val) => !messageKeys.has(val)\r\n      );\r\n    }\r\n    this.sysService.push(this.createSysService());\r\n  }\r\n  addBioDocs1() {\r\n    this.sysService = this.tcpForm1.get(\"sysService\") as FormArray;\r\n    this.sysService.push(this.createSysService());\r\n    if (\r\n      this.messageConfigurationForm.value?.sysChannel[0]?.messageChannel !==\r\n      \"TCP/IP\"\r\n    ) {\r\n      const messageKeys = new Set(\r\n        this.sysService.value.map((val) => val.messageKey)\r\n      );\r\n      this.xmlRespDataFiltered1 = this.xmlRespData1.filter(\r\n        (val) => !messageKeys.has(val)\r\n      );\r\n    }\r\n  }\r\n  submit2() {\r\n    if (\r\n      this.tcpForm.value.sysService.some(\r\n        (sysService) => sysService[\"headerTag\"] === \"OPERATION\"\r\n      ) &&\r\n      this.tcpForm.value.sysService.some(\r\n        (mdmtSystemService) => mdmtSystemService[\"headerTag\"] === \"SERVICE\"\r\n      )\r\n    ) {\r\n      let obj_test: any = {};\r\n      obj_test = this.basicInfoForm.value;\r\n      obj_test.sysChannel = this.messageConfigurationForm.value.sysChannel;\r\n      console.log(obj_test);\r\n      console.log(this.tcpForm.value);\r\n      for (let index = 0; index < obj_test.sysChannel.length; index++) {\r\n\r\n        \r\n        obj_test.sysChannel[index].sysService =\r\n          this.tcpForm.value.sysService.map((val) => {\r\n            console.log(val);\r\n            if (\r\n              this.messageConfigurationForm.value?.sysChannel[0]\r\n                ?.messageChannel !== \"TCP/IP\"\r\n            ) {\r\n              return { ...val };\r\n            }\r\n            return {\r\n              ...val,\r\n              messageKey: val.messageKey.fieldNo\r\n                ? val.messageKey.fieldNo\r\n                : Number(val.messageKey.split(\" \")[0]),\r\n                messageBasis: val.messageKey.fieldName\r\n                ? val.messageKey.fieldName\r\n                : val.messageKey,\r\n            };\r\n          });\r\n      }\r\n     \r\n      if (this.index) {\r\n        this.addSystem\r\n          .editaddsystem(\"update\", this.currentUser, obj_test)\r\n          .subscribe(\r\n            (addSysResp) => {\r\n              if (addSysResp) {\r\n                this.saved = \"saved\"\r\n                this.index = addSysResp.systemId;\r\n                this.respData = addSysResp;\r\n                // this.respData.approvedEver = 'N'\r\n                // this.respData.createdTime=new Date();\r\n                this.auditLog();\r\n                this.previous(\"messageConfiguration\");\r\n                this.editFlag = false;\r\n                // this.submitFlag=false;\r\n                Swal.fire({ text: \"Record is Updated\", icon: \"success\" });\r\n\r\n                this.formTouched1 = !this.basicInfoForm.touched;\r\n                this.formTouched2 = !this.messageConfigurationForm.touched;\r\n                this.formTouched3 = !this.tcpForm.touched;\r\n                this.formTouched4 = !this.messageConfigurationForm1.touched;\r\n                this.formTouched5 = !this.tcpForm1.touched;\r\n              }\r\n            },\r\n            (error) => {\r\n              console.log(\"error resp :: \", error);\r\n              Swal.fire({ text: error.error, icon: \"error\" });\r\n            }\r\n          );\r\n      } else {\r\n        \r\n        this.addSystem\r\n          .submittingAddSystem(obj_test, this.currentUser)\r\n          .subscribe(\r\n            (addSysResp) => {\r\n              if (addSysResp) {\r\n                // this.submitFlag=false;\r\n                this.saved = \"saved\"\r\n                this.index = addSysResp.systemId;\r\n                this.respData = addSysResp;\r\n                //  this.respData.approvedEver = 'N'\r\n                // this.respData.createdTime=new Date();\r\n                this.auditLog();\r\n                this.previous(\"messageConfiguration\");\r\n                this.editFlag = false;\r\n                Swal.fire({ text: \"Record is Created\", icon: \"success\" });\r\n                this.formTouched1 = !this.basicInfoForm.touched;\r\n                this.formTouched2 = !this.messageConfigurationForm.touched;\r\n                this.formTouched3 = !this.tcpForm.touched;\r\n                this.formTouched4 = !this.messageConfigurationForm1.touched;\r\n                this.formTouched5 = !this.tcpForm1.touched;\r\n              }\r\n            },\r\n            (error) => {\r\n              console.log(\"error resp :: \", error);\r\n              Swal.fire({ text: error.error, icon: \"error\" });\r\n            }\r\n          );\r\n      }\r\n    } else {\r\n      Swal.fire({\r\n        text: \"Header value OPERATION and SERVICE are mandatory !\",\r\n        icon: \"info\",\r\n      });\r\n    }\r\n  }\r\n  fetchingIso() {\r\n    this.addSystem.fetchingIsoForTcp().subscribe((isoResp) => {\r\n      this.isoRespData = isoResp;\r\n      this.isoRespDataFiltered = this.isoRespData.map((mKey) => ({\r\n        ...mKey,\r\n        formattedmKey: `${mKey.fieldNo} ${mKey.fieldName}`,\r\n      }));\r\n      if (isoResp) {\r\n        this.messageBasisIso = isoResp.map((data) => {\r\n          return data.fieldName;\r\n        });\r\n        // for dropdown 1\r\n        this.messageKeyIso = isoResp.map((data) => {\r\n          return data.fieldNo;\r\n        });\r\n        this.typeDataIso = isoResp.map((data) => {\r\n          return data.dataType;\r\n        });\r\n        this.headerValueIso = isoResp.map((data) => {\r\n          return data.headerValue;\r\n        });\r\n        const valFieldMapper = this.isoRespData.reduce((acc, val) => {\r\n          acc[val.fieldNo] = val.fieldName;\r\n          return acc;\r\n        }, {});\r\n        const selectedMessageKeys = new Set(\r\n          this.array.map((x) => valFieldMapper[x.messageKey])\r\n        );\r\n        this.isoRespDataFiltered = this.isoRespDataFiltered.filter(\r\n          (val) => !selectedMessageKeys.has(val.fieldName)\r\n        );\r\n        this.array.forEach((x) => {\r\n          const data = this.isoRespData.find(\r\n            (val) => val.fieldNo == x.messageKey\r\n          );\r\n          x.messageKey = `${x.messageKey || \"\"} ${data?.fieldName || \"\"}`;\r\n          this.formArr.push(this.fb.group(x));\r\n        });\r\n      }\r\n    });\r\n  }\r\n  fetchingIso1() {\r\n    this.addSystem.fetchingIsoForTcp().subscribe((isoResp) => {\r\n      this.isoRespData1 = isoResp;\r\n      this.isoRespDataFiltered1 = this.isoRespData1.map((mKey) => ({\r\n        ...mKey,\r\n        formattedmKey: `${mKey.fieldNo} ${mKey.fieldName}`,\r\n      }));\r\n      if (isoResp) {\r\n        this.messageBasisIso1 = isoResp.map((data) => {\r\n          return data.fieldName;\r\n        });\r\n        // for dropdown 1\r\n        this.messageKeyIso1 = isoResp.map((data) => {\r\n          return data.fieldNo;\r\n        });\r\n        this.typeDataIso1 = isoResp.map((data) => {\r\n          return data.dataType;\r\n        });\r\n        this.headerValueIso1 = isoResp.map((data) => {\r\n          return data.headerValue;\r\n        });\r\n        const valFieldMapper = this.isoRespData1.reduce((acc, val) => {\r\n          acc[val.fieldNo] = val.fieldName;\r\n          return acc;\r\n        }, {});\r\n        const selectedMessageKeys = new Set(\r\n          this.array1?.map((x) => valFieldMapper[x.messageKey])\r\n        );\r\n        this.isoRespDataFiltered1 = this.isoRespDataFiltered1.filter(\r\n          (val) => !selectedMessageKeys.has(val.fieldName)\r\n        );\r\n        this.array1.forEach((x) => {\r\n          const data = this.isoRespData1.find(\r\n            (val) => val.fieldNo == x.messageKey\r\n          );\r\n          x.messageKey = `${x.messageKey || \"\"} ${data?.fieldName || \"\"}`;\r\n          this.formArr1.push(this.fb.group(x));\r\n        });\r\n      }\r\n    });\r\n  }\r\n  fetchingXMl() {\r\n    this.addSystem.gettinXMLmsgIncoming().subscribe((xmlResp) => {\r\n      this.xmlRespData = xmlResp;\r\n      this.xmlRespDataFiltered = [...this.xmlRespData];\r\n      if (xmlResp) {\r\n        this.messageBasisIso = xmlResp.map((data) => {\r\n          return data.messageBasis;\r\n        });\r\n        this.messageKeyIso = xmlResp.map((data) => {\r\n          return data.messageKey;\r\n        });\r\n        this.typeDataIso = xmlResp.map((data) => {\r\n          return data.dataType;\r\n        });\r\n        this.headerValueIso = xmlResp.map((data) => {\r\n          return data.headerValue;\r\n        });\r\n      }\r\n    });\r\n  }\r\n  onSubmitEditAddSystem() {\r\n    console.log(\"This is Edit Charge Maintenance\");\r\n    this.editFlag = true;\r\n    console.log(this.editFlag);\r\n  }\r\n  fetchingXMl1() {\r\n    this.addSystem.gettinXMLmsgIncoming().subscribe((xmlResp) => {\r\n      this.xmlRespData1 = xmlResp;\r\n      console.log(xmlResp);\r\n      this.xmlRespDataFiltered1 = [...this.xmlRespData1];\r\n\r\n      if (xmlResp) {\r\n        this.messageBasisIso = xmlResp.map((data) => {\r\n          return data.messageBasis;\r\n        });\r\n        this.messageKeyIso = xmlResp.map((data) => {\r\n          return data.messageKey;\r\n        });\r\n        this.typeDataIso = xmlResp.map((data) => {\r\n          return data.dataType;\r\n        });\r\n        this.headerValueIso = xmlResp.map((data) => {\r\n          return data.headerValue;\r\n        });\r\n      }\r\n    });\r\n  }\r\n  onSelectingMessageBasis(value: any, i) {\r\n    if (this.tempArrayList[i]) {\r\n      this.tempArrayList[i] = value;\r\n    } else {\r\n      this.tempArrayList.push(value);\r\n    }\r\n    var x = this.isoRespData.find((item) => item.fieldNo == value);\r\n    this.tcpForm\r\n      .get(\"sysService\")\r\n      [\"controls\"][i].get(\"messageBasis\")\r\n      .setValue(x.fieldName);\r\n    this.tcpForm\r\n      .get(\"sysService\")\r\n      [\"controls\"][i].get(\"dataType\")\r\n      .setValue(x.dataType);\r\n    console.log(this.tcpForm.get(\"sysService\"));\r\n  }\r\n  onSelectingMessageBasis1(event: any, i) {\r\n    this.selectedMessageKeys1[i] = event.fieldName;\r\n    const selectedMessageKeySet = new Set(this.selectedMessageKeys1);\r\n    this.isoRespDataFiltered1 = this.isoRespData1\r\n      .filter((val) => !selectedMessageKeySet.has(val.fieldName))\r\n      .map((mKey) => ({\r\n        ...mKey,\r\n        formattedmKey: `${mKey.fieldNo} ${mKey.fieldName}`,\r\n      }));\r\n    var x = this.isoRespData1.find((item) => item.fieldNo == event.fieldNo);\r\n    this.tcpForm1\r\n      .get(\"sysService\")\r\n      [\"controls\"][i].get(\"messageBasis\")\r\n      .setValue(x.fieldName);\r\n    this.tcpForm1\r\n      .get(\"sysService\")\r\n      [\"controls\"][i].get(\"dataType\")\r\n      .setValue(x.dataType);\r\n  }\r\n\r\n  try(value) {\r\n    return true;\r\n    /* if (this.tempArrayList.find(item=>item==value)) {\r\n    return true;\r\n  }\r\n  else {\r\n    return false;\r\n  }*/\r\n  }\r\n\r\n  fetchingHeadertag() {\r\n    this.addSystem.fetchingHeaderTag().subscribe((resp) => {\r\n      this.headerTagData = resp;\r\n    });\r\n  }\r\n  chooseFile() {\r\n    document.getElementById(\"chFile\").click();\r\n  }\r\n  chooseFile1() {\r\n    document.getElementById(\"chFile1\").click();\r\n  }\r\n  uploadFileXml(event) {\r\n    this.selectedFiles = event.target.files;\r\n    this.sizeOfFile = this.selectedFiles.item(0).size;\r\n    this.currentFileUpload = this.selectedFiles.item(0);\r\n    this.fileName = this.currentFileUpload.name;\r\n    this.fileUploadWrapper.nativeElement.setAttribute(\r\n      \"data-text\",\r\n      this.fileName\r\n    );\r\n    this.addSystem\r\n      .gettingHederofXMl(this.currentFileUpload)\r\n      .subscribe((xmlResp) => {\r\n        if (xmlResp) {\r\n          this.uploadXmlResp = xmlResp;\r\n          this.messageBasisIso = xmlResp.nodeTagList;\r\n          this.xmlRespData = xmlResp.nodeTagList;\r\n          this.xmlRespDataFiltered = this.xmlRespData;\r\n          Swal.fire({ text: \"File Uploaded Successfully\", icon: \"success\" });\r\n          this.fileUploadClick = false;\r\n        }\r\n      });\r\n  }\r\n  uploadFileXml1(event) {\r\n    this.selectedFiles1 = event.target.files;\r\n    this.sizeOfFile1 = this.selectedFiles1.item(0).size;\r\n    this.currentFileUpload1 = this.selectedFiles1.item(0);\r\n    this.fileName1 = this.currentFileUpload1.name;\r\n    this.fileUploadWrapper1.nativeElement.setAttribute(\r\n      \"data-text\",\r\n      this.fileName1\r\n    );\r\n    this.addSystem\r\n      .gettingHederofXMl(this.currentFileUpload1)\r\n      .subscribe((xmlResp) => {\r\n        if (xmlResp) {\r\n          this.uploadXmlResp1 = xmlResp;\r\n          this.messageBasisIso1 = xmlResp.nodeTagList;\r\n          this.xmlRespData1 = xmlResp.nodeTagList;\r\n          this.xmlRespDataFiltered1 = this.xmlRespData1;\r\n          Swal.fire({ text: \"File Uploaded Successfully\", icon: \"success\" });\r\n          this.fileUploadClickAll = false;\r\n        }\r\n      });\r\n  }\r\n  onselectingTag(event, i) {\r\n    if (this.tempArrayList[i]) {\r\n      this.tempArrayList[i] = event;\r\n    } else {\r\n      this.tempArrayList.push(event);\r\n    }\r\n    var result = Object.keys(this.uploadXmlResp.nodeValueMap).map((key) => [\r\n      key,\r\n      this.uploadXmlResp.nodeValueMap[key],\r\n    ]);\r\n    var x = result.find((item) => item[0] == event);\r\n    this.tcpForm\r\n      .get(\"sysService\")\r\n      [\"controls\"][i].get(\"headerValue\")\r\n      .setValue(x[1]);\r\n    this.selectedMessageKeys[i] = event;\r\n    const selectedMessageKeySet = new Set(this.selectedMessageKeys);\r\n    this.xmlRespDataFiltered = this.xmlRespData.filter(\r\n      (val) => !selectedMessageKeySet.has(val)\r\n    );\r\n  }\r\n  onselectingTag1(event, i) {\r\n    if (this.tempArrayList[i]) {\r\n      this.tempArrayList[i] = event;\r\n    } else {\r\n      this.tempArrayList.push(event);\r\n    }\r\n    var result = Object.keys(this.uploadXmlResp1.nodeValueMap).map((key) => [\r\n      key,\r\n      this.uploadXmlResp1.nodeValueMap[key],\r\n    ]);\r\n    var x = result.find((item) => item[0] == event);\r\n    this.tcpForm1\r\n      .get(\"sysService\")\r\n      [\"controls\"][i].get(\"headerValue\")\r\n      .setValue(x[1]);\r\n    this.selectedMessageKeys1[i] = event;\r\n    const selectedMessageKeySet = new Set(this.selectedMessageKeys1);\r\n    this.xmlRespDataFiltered1 = this.xmlRespData1.filter(\r\n      (val) => !selectedMessageKeySet.has(val)\r\n    );\r\n  }\r\n  uploadFileXmlOut(event) {\r\n    this.selectedFiles = event.target.files;\r\n    this.sizeOfFile = this.selectedFiles.item(0).size;\r\n    this.currentFileUpload = this.selectedFiles.item(0);\r\n    this.fileNameOut = this.currentFileUpload.name;\r\n    this.addSystem.gettingHederofXMl(this.currentFileUpload).subscribe(\r\n      (xmlResp) => {\r\n        if (xmlResp) {\r\n          this.uploadXmlResp = xmlResp;\r\n          this.messageBasisIso = xmlResp.nodeTagList;\r\n        }\r\n      },\r\n      (err) => {}\r\n    );\r\n  }\r\n  submitAll() {\r\n    if (\r\n      this.tcpForm.value.sysService.some(\r\n        (sysService) => sysService[\"headerTag\"] === \"OPERATION\"\r\n      ) &&\r\n      this.tcpForm.value.sysService.some(\r\n        (mdmtSystemService) => mdmtSystemService[\"headerTag\"] === \"SERVICE\"\r\n      ) &&\r\n      this.tcpForm1.value.sysService.some(\r\n        (sysService) => sysService[\"headerTag\"] === \"OPERATION\"\r\n      ) &&\r\n      this.tcpForm1.value.sysService.some(\r\n        (mdmtSystemService) => mdmtSystemService[\"headerTag\"] === \"SERVICE\"\r\n      )\r\n    ) {\r\n      let obj_test: any = {};\r\n      obj_test = this.basicInfoForm.value;\r\n      obj_test.sysChannel =\r\n        this.messageConfigurationForm.value.sysChannel.slice(0, 2);\r\n      this.messageConfigurationForm.value.sysChannel[0].messageType = \"I\";\r\n      this.messageConfigurationForm1.value.sysChannel[0].messageType = \"O\";\r\n      obj_test.sysChannel.push(\r\n        this.messageConfigurationForm1.value.sysChannel[0]\r\n      );\r\n\r\n      if (\r\n        this.messageConfigurationForm.value?.sysChannel[0]?.messageChannel !==\r\n        \"TCP/IP\"\r\n      ) {\r\n        obj_test.sysChannel[0].sysService = this.tcpForm.value.sysService;\r\n      } else {\r\n        obj_test.sysChannel[0].sysService = this.tcpForm.value.sysService.map(\r\n          (val) => {\r\n            return {\r\n              ...val,\r\n              messageKey: val.messageKey.fieldNo\r\n                ? val.messageKey.fieldNo\r\n                : Number(val.messageKey.split(\" \")[0]),\r\n            };\r\n          }\r\n        );\r\n      }\r\n\r\n      if (\r\n        this.messageConfigurationForm1.value?.sysChannel[0]?.messageChannel !==\r\n        \"TCP/IP\"\r\n      ) {\r\n        obj_test.sysChannel[1].sysService = this.tcpForm1.value.sysService;\r\n      } else {\r\n        obj_test.sysChannel[1].sysService = this.tcpForm1.value.sysService.map(\r\n          (val) => {\r\n            return {\r\n              ...val,\r\n              messageKey: val.messageKey.fieldNo\r\n                ? val.messageKey.fieldNo\r\n                : Number(val.messageKey.split(\" \")[0]),\r\n            };\r\n          }\r\n        );\r\n      }\r\n      console.log(\"obj_test \", obj_test);\r\n      this.addSystem\r\n        .submittingAddSystem(obj_test, this.currentUser)\r\n        .subscribe((addSysResp) => {\r\n          if (addSysResp) {\r\n            this.saved = \"saved\"\r\n            this.submitFlagAll = false;\r\n            Swal.fire({ text: \"Record is Created\", icon: \"success\" });\r\n          }\r\n        });\r\n    } else {\r\n      Swal.fire({\r\n        text: \"Header value OPERATION and SERVICE are mandatory !\",\r\n        icon: \"info\",\r\n      });\r\n    }\r\n  }\r\n  delete(index) {\r\n    const deleteRecord = this.tcpForm.get(\"sysService\") as FormArray;\r\n    deleteRecord.removeAt(index);\r\n    const selectedHeaderTags = new Set(\r\n      deleteRecord.value.map((d) => d.headerTag)\r\n    );\r\n    this.dbConnectionOption.splice(index, 1);\r\n    this.headerArray = this.headerTagData\r\n      .filter((data) => selectedHeaderTags.has(data.headerTag))\r\n      .map((val) => val.headerTag);\r\n    if (\r\n      this.messageConfigurationForm.value?.sysChannel[0]?.messageChannel !==\r\n      \"TCP/IP\"\r\n    ) {\r\n      this.selectedMessageKeys = deleteRecord.value.map((d) => d.messageKey);\r\n      const selectedMessageKeysSet = new Set(this.selectedMessageKeys);\r\n      this.xmlRespDataFiltered = this.xmlRespData.filter(\r\n        (val) => !selectedMessageKeysSet.has(val)\r\n      );\r\n    } else {\r\n      this.selectedMessageKeys = deleteRecord.value\r\n        .map((d) => d.messageKey?.fieldName)\r\n        .filter((val) => !!val);\r\n      const selectedMessageKeysSet = new Set(this.selectedMessageKeys);\r\n      this.isoRespDataFiltered = this.isoRespData\r\n        .filter((data) => !selectedMessageKeysSet.has(data.fieldName))\r\n        .map((mKey) => ({\r\n          ...mKey,\r\n          formattedmKey: `${mKey?.fieldNo || \"\"} ${mKey?.fieldName || \"\"}`,\r\n        }));\r\n    }\r\n  }\r\n  delete1(index) {\r\n    const deleteRecord1 = this.tcpForm1.get(\"sysService\") as FormArray;\r\n    deleteRecord1.removeAt(index);\r\n    if (\r\n      this.messageConfigurationForm1.value?.sysChannel[0]?.messageChannel !==\r\n      \"TCP/IP\"\r\n    ) {\r\n      this.selectedMessageKeys1 = deleteRecord1.value.map((d) => d.messageKey);\r\n      const selectedMessageKeysSet = new Set(this.selectedMessageKeys);\r\n      this.xmlRespDataFiltered1 = this.xmlRespData1.filter(\r\n        (val) => !selectedMessageKeysSet.has(val)\r\n      );\r\n    } else {\r\n      this.selectedMessageKeys1 = deleteRecord1.value\r\n        .map((d) => d.messageKey?.fieldName)\r\n        .filter((val) => !!val);\r\n      const selectedMessageKeysSet = new Set(this.selectedMessageKeys);\r\n      this.isoRespDataFiltered1 = this.isoRespData1\r\n        .filter((data) => !selectedMessageKeysSet.has(data.fieldName))\r\n        .map((mKey) => ({\r\n          ...mKey,\r\n          formattedmKey: `${mKey?.fieldNo || \"\"} ${mKey?.fieldName || \"\"}`,\r\n        }));\r\n    }\r\n  }\r\n  value(val) {\r\n    console.log(val);\r\n    if (val === \"1\") {\r\n      this.tab1 = true;\r\n      this.tab2 = false;\r\n      this.tab11 = true;\r\n      this.tab12 = false;\r\n    }\r\n    if (val === \"2\") {\r\n      this.tab1 = false;\r\n      this.tab2 = true;\r\n      this.tab21 = true;\r\n      this.tab22 = false;\r\n    }\r\n  }\r\n  onselectingColumnName(event, i) {\r\n    console.log(this.tabelData);\r\n    this.filteredHomes = event.split(\",\");\r\n    console.log(this.filteredHomes);\r\n    // this.selectedFilterData=filteredHomes;\r\n    // console.log(this.selectedFilterData);\r\n    this.tcpForm\r\n      .get(\"sysService\")\r\n      [\"controls\"][i].get(\"dataType\")\r\n      .setValue(this.filteredHomes[2]);\r\n    this.tcpForm\r\n      .get(\"sysService\")\r\n      [\"controls\"][i].get(\"headerValue\")\r\n      .setValue(this.filteredHomes[3]);\r\n      this.jhnbn=this.filteredHomes[1];\r\n      console.log(this.jhnbn);\r\n      // var stringWithoutCommas = this.tcpForm.value.sysService[0].messageKey.replace(/,/g, '');\r\n      // console.log(stringWithoutCommas);\r\n      // for(let j=0 ;j<this.tcpForm.value.sysService.length;j++){\r\n      //     this.tcpForm.value.sysService[j].messageKey=this.filteredHomes[1];\r\n      // }\r\n      // this.tcpForm.value.sysService[0].messageKey =this.filteredHomes[1];\r\n      // this.tcpForm.value.sysService[1].messageKey = this.filteredHomes[1];\r\n      // this.tcpForm.value.sysService[2].messageKey = this.filteredHomes[1];\r\n      // this.tcpForm.value.sysService[3].messageKey = this.filteredHomes[1];\r\n      console.log(this.tcpForm.value);\r\n\r\n  }\r\n  onselectingColumnName1(event, i) {\r\n    console.log(this.tabelData1);\r\n    const filteredHomes = event.split(\",\");\r\n    console.log(filteredHomes);\r\n    this.tcpForm1\r\n      .get(\"sysService\")\r\n      [\"controls\"][i].get(\"dataType\")\r\n      .setValue(filteredHomes[2]);\r\n    this.tcpForm1\r\n      .get(\"sysService\")\r\n      [\"controls\"][i].get(\"headerValue\")\r\n      .setValue(filteredHomes[3]);\r\n  }\r\n  onHeaderTagSelect(event, i) {\r\n    this.headerArray[i] = event.target.value;\r\n  }\r\n  onDbConnectionOption(event, i) {\r\n    this.dbConnectionOption[i] = event.target.value.split(',')[1];\r\n  }\r\n  shouldHideOption(value) {\r\n    return this.dbConnectionOption.some(opt => opt === value[1]);\r\n  }\r\n  changeSelectedFieldNo(evt, index) {\r\n    this.selectedMessageKeys[index] = evt.fieldName;\r\n    const selectedMessageKeySet = new Set(this.selectedMessageKeys);\r\n    this.isoRespDataFiltered = this.isoRespData\r\n      .filter((val) => !selectedMessageKeySet.has(val.fieldName))\r\n      .map((mKey) => ({\r\n        ...mKey,\r\n        formattedmKey: `${mKey.fieldNo} ${mKey.fieldName}`,\r\n      }));\r\n  }\r\n  extAddressValidation(event){\r\n    \r\n   const regex = /^((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/;\r\n   if(regex.test(event.target.value) === false){\r\n    this.basicInfoForm.get('sourcePort').setValue(\"\");\r\n    this.basicInfoForm.get('sourcePort').clearValidators();\r\n    this.basicInfoForm.get('sourcePort').updateValueAndValidity();\r\n    this.externalPort=false;\r\n   }\r\n   else{\r\n    this.basicInfoForm.get('sourcePort').setValidators([Validators.required])\r\n    this.basicInfoForm.get('sourcePort').updateValueAndValidity();\r\n    this.externalPort=true;\r\n}\r\n  }\r\n  medAddressValidation(event){\r\n    \r\n  const regex = /^((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/;\r\n   if(regex.test(event.target.value) === false){\r\n    this.basicInfoForm.get('medianPort').setValue(\"\");\r\n     this.basicInfoForm.get('medianPort').clearValidators();\r\n     this.basicInfoForm.get('medianPort').updateValueAndValidity();\r\n     this.medianPort=false;\r\n   }\r\n  else{\r\n    this.basicInfoForm.get('medianPort').setValidators([Validators.required])\r\n    this.basicInfoForm.get('medianPort').updateValueAndValidity();\r\n    this.medianPort=true;\r\n      }\r\n  }\r\n}\r\n","\r\n<div class=\"pageContentMain\">\r\n    <div class=\"pageTitleCol\">\r\n      <h2 class=\"pageTitle\">Add System</h2>\r\n    </div>\r\n    <div class=\"dbCardStyle\">\r\n      <div class=\"row g-3 pb-3 justify-content-end\">\r\n        <div class=\"col-auto\" *ngIf=\"roleCodes.new\">\r\n          <a (click)=\"new()\" class=\"btn smBtn minWdSmBtn btnPrimary\">{{roleCodes.new.labelDescription}}</a>\r\n        </div>\r\n        <div class=\"col-auto\">\r\n          <a [routerLink]=\"['/dashboard']\" class=\"btn smBtn minWdSmBtn btnSecondary\">Exit</a>\r\n        </div>\r\n      </div>\r\n      <div class=\"table-responsive\" >\r\n      <table datatable  id=\"dbTable1\" [dtOptions]=\"dtOptions\" class=\"dataTable table tableStyleSelect tableStyle  nowrap vAlignMdl \" style=\"width:100%\">\r\n   \r\n        <thead>\r\n          <tr>\r\n            \r\n           <th> System Code</th>\r\n            <th>Name</th>\r\n            <th>Type</th>\r\n            <th>Auth Status</th>\r\n            <th>Record Status</th>\r\n            <th>Date</th>\r\n            <th>Action</th>\r\n  \r\n      \r\n          </tr>\r\n        </thead>\r\n        <tbody *ngIf=\"respArray?.length != 0\">\r\n          <tr *ngFor=\"let data of respArray \">\r\n\r\n            <td><a href=\"javascript:void(0)\" (click)=\"getResp(data)\" class=\"primaryColor\">{{data.systemCode}}</a></td>\r\n            <td>{{data.systemName}}</td>\r\n            <td>{{data.serviceType}}</td>\r\n\r\n            <td>{{data.approvedStatus}}</td>\r\n            <td>{{data.recordStatus}}</td>\r\n            <td>{{data.createdTime | date:'medium' }}</td>\r\n            <td>\r\n              <button  class=\"btn\" style=\"color: red\" title=\"Authorize\"  [disabled]=\"!(data.approvedStatus== 'U' || data.approvedStatus== 'Unauthorized')\" (click)=\"auth(data)\">\r\n                  \r\n                <img class=\"summaryIcon\" src=\"assets/images/authorize.svg\" alt=\"...\">\r\n              </button>\r\n              <button class=\"btn\" style=\"color: red\" title=\"Close\" *ngIf=\"(data.recordStatus== 'O' || data.recordStatus== 'Open' || data.recordStatus== 'OPEN') && (data.approvedEver== 'Y' || data.approvedEver== 'YES')\" (click)=\"close(data)\">\r\n                \r\n                <img class=\"summaryIcon\" src=\"assets/images/CROSS1.svg\"   alt=\"...\">\r\n                </button> \r\n               <button class=\"btn\" style=\"color: red\" title=\"Reopen\" *ngIf=\"data.recordStatus== 'C' || data.recordStatus== 'Close'\" (click)=\"open(data)\">\r\n                \r\n                <img class=\"summaryIcon\" src=\"assets/images/open.svg\"  alt=\"...\">\r\n                </button>\r\n                <button class=\"btn\" style=\"color: red\" title=\"Delete\" *ngIf=\"data.approvedEver== 'N' || data.approvedEver== 'NO'\" (click)=\"delete(data)\">\r\n                   \r\n                  <img class=\"summaryIcon\" src=\"assets/images/delete.svg\" alt=\"...\">\r\n                </button>\r\n           \r\n          </td>\r\n\r\n        </tr>\r\n      </tbody>\r\n      <tbody *ngIf=\"respArray?.length == 0\">\r\n        <tr>\r\n         <!-- <td colspan=\"3\" class=\"no-data-available\">No data!</td> -->\r\n        </tr>\r\n      </tbody>  \r\n    </table>\r\n    <ng-container *ngIf=\"isLoading\">\r\n      <div class=\"loading-page-center\">\r\n        <span class=\"indicator-progress\">Please wait...\r\n          <span class=\"spinner-border spinner-border-sm align-middle ms-2\"></span></span>\r\n      </div>\r\n    </ng-container>\r\n  </div>\r\n  </div>\r\n</div>\r\n\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { ChangeDetectorRef, Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Subject } from 'rxjs'; \r\nimport { AppConstants } from 'src/app/shared/config/app.constant';\r\nimport { permissionsLabels } from 'src/app/shared/models/fmosNewRolePermissions';\r\nimport { AddSystemService } from 'src/app/shared/services/add-system.service';\r\nimport { ApiService } from 'src/app/shared/services/api.service';\r\nimport { RoleService } from 'src/app/shared/services/role.service';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'npr-add-system-summary',\r\n  templateUrl: './add-system-summary.component.html',\r\n  styleUrls: ['./add-system-summary.component.scss']\r\n})\r\nexport class AddSystemSummaryComponent implements OnInit {\r\n  respArray: any[] = [];\r\n  dtOptions: DataTables.Settings = {};\r\n  dtTrigger: Subject<any> = new Subject<any>();\r\n  isLoading:boolean = false;\r\n  roleCodes = new permissionsLabels();\r\n  basicInfoForm: any;\r\n  messageConfigurationForm: any;\r\n  tcpForm: any;\r\n  messageConfigurationForm1: any;\r\n  tcpForm1: any;\r\n  addSystem: any;\r\n  currentUser: any;\r\n  totalPages: any;\r\n  totalRecords: any;\r\n  respData: any;\r\n  API_URL = AppConstants.baseURL;\r\n  statusArr: String[] = ['Authorized', 'Unauthorized', 'Open', 'Close'];\r\n\r\n  constructor(private apiService: AddSystemService, private roleService:RoleService,\r\n              private router: Router,\r\n              private cdr:ChangeDetectorRef,private http: HttpClient) { }\r\n\r\n  ngOnInit(): void {\r\n    \r\n    this.dtOptions = {\r\n      pagingType: 'full_numbers',\r\n      pageLength : 5,\r\n      serverSide: true,\r\n      // processing: true,\r\n      columnDefs: [ { type: 'date', 'targets': [5] } ],\r\n      order: [[5, 'desc']],\r\n      // lengthMenu: [[5, 10, 20, -1], [5, 10, 20, 30]],\r\n      lengthMenu: [\r\n        [5, 10, 20, 30,-1],\r\n        [5, 10, 20, 30,\"ALL\"],\r\n      ],\r\n      ajax: (dataTablesParameters: any, callback) => {\r\n        \r\n        dataTablesParameters.minNumber = dataTablesParameters.start + 1;\r\n        dataTablesParameters.maxNumber =\r\n          dataTablesParameters.start + dataTablesParameters.length;\r\n        console.log(\r\n          dataTablesParameters.minNumber,\r\n          dataTablesParameters.maxNumber\r\n        );\r\n        const pageNo = Math.floor(dataTablesParameters.minNumber / dataTablesParameters.length);\r\n        const pageSize = dataTablesParameters.length;\r\n        const search=dataTablesParameters.search.value\r\n        this.http.get<any>(`${this.API_URL}`+`/newExtApi/getAllExternalSys?pageNo=${pageNo}&pageSize=${pageSize}&search=${search}`)\r\n          .subscribe(resp => {\r\n            ;\r\n            console.log(resp);\r\n            for (let data of resp.result) {\r\n              data.approvedStatus = this.statusArr.find((i) =>\r\n                i.startsWith(data.approvedStatus)\r\n              );\r\n      \r\n              data.recordStatus = this.statusArr.find((i) =>\r\n                i.startsWith(data.recordStatus)\r\n              );\r\n            }\r\n            \r\n            this.totalPages = resp.totalNoOfPages;\r\n            this.totalRecords = resp.totalRecords;\r\n            this.respArray = resp.result;\r\n            this.isLoading = false;\r\n            this.cdr.markForCheck();\r\n\r\n            callback({\r\n              recordsTotal: resp.totalRecords,\r\n              recordsFiltered: resp.totalRecords,\r\n              data: [],\r\n            });\r\n          });\r\n      },\r\n\r\n    };\r\n    this.currentUser = localStorage.getItem(\"userFromLogin\");\r\n    // this.getDataForMonitor();\r\n    this.roleService.fetchScreenPermissions('Add System');\r\n    this.roleService.screenLabelList.subscribe(message => this.roleCodes = message);\r\n    console.log(this.roleCodes);\r\n  }\r\n  getDataForMonitor() {\r\n    this.isLoading = true;\r\n    this.apiService.fecthingAddSystem().subscribe(dataresp => {\r\n\r\n      for (let data of dataresp.result) {\r\n        data.approvedStatus = this.statusArr.find((i) =>\r\n          i.startsWith(data.approvedStatus)\r\n        );\r\n\r\n        data.recordStatus = this.statusArr.find((i) =>\r\n          i.startsWith(data.recordStatus)\r\n        );\r\n      }\r\n      // this.respArray = dataresp.result;\r\n      this.isLoading = false;\r\n      this.cdr.markForCheck();\r\n\r\n      this.dtTrigger.next();\r\n    });\r\n  }\r\n  ngOnDestroy(): void {\r\n    this.dtTrigger.unsubscribe();\r\n  }\r\n  close(data){\r\n    Swal.fire({\r\n      //text: 'Unable to process' + 'Error ' + this.responseforfileupload.errorMessage + 'Do you want to Proceed??',\r\n      text: \"You are trying to Close record. \" + \" Do you want to proceed?\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3e54b8\",\r\n      cancelButtonColor: \"#d33\",\r\n      // confirmButtonText: 'PROCEED.'\r\n      cancelButtonText: \"NO\",\r\n      confirmButtonText: \"YES\",\r\n      icon: \"info\",\r\n      iconColor: \"#d33\",\r\n    }).then((result) => {\r\n      if (result.isConfirmed === true) {\r\n        this.apiService\r\n          .editaddsystem(\"close\", this.currentUser, data)\r\n          .subscribe((response) => {\r\n            if (response) {\r\n              this.respData = response;\r\n              Swal.fire({ text: \"Record is Closed\", icon: \"success\" }).then(() => window.location.reload());\r\n            }\r\n          });\r\n        }\r\n      })\r\n    \r\n    }\r\n    \r\n  open(data){\r\n    Swal.fire({\r\n      //text: 'Unable to process' + 'Error ' + this.responseforfileupload.errorMessage + 'Do you want to Proceed??',\r\n      text: \"You are trying to Reopen record. \" + \" Do you want to proceed?\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3e54b8\",\r\n      cancelButtonColor: \"#d33\",\r\n      // confirmButtonText: 'PROCEED.'\r\n      cancelButtonText: \"NO\",\r\n      confirmButtonText: \"YES\",\r\n      icon: \"info\",\r\n      iconColor: \"#d33\",\r\n    }).then((result) => {\r\n      if (result.isConfirmed === true) {\r\n        //submitAll\r\n        this.apiService\r\n          .editaddsystem(\"open\", this.currentUser, data)\r\n          .subscribe((response) => {\r\n            if (response) {\r\n              this.respData = response;\r\n              this.auditLog();\r\n              Swal.fire({ text: \"Record is Reopened\", icon: \"success\" }).then(() => window.location.reload());\r\n            }\r\n          });\r\n      }\r\n    });\r\n  }\r\n  delete(data){\r\n    Swal.fire({\r\n      //text: 'Unable to process' + 'Error ' + this.responseforfileupload.errorMessage + 'Do you want to Proceed??',\r\n      text: \"You are trying to Delete record. \" + \" Do you want to proceed?\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3e54b8\",\r\n      cancelButtonColor: \"#d33\",\r\n      // confirmButtonText: 'PROCEED.'\r\n      cancelButtonText: \"NO\",\r\n      confirmButtonText: \"YES\",\r\n      icon: \"info\",\r\n      iconColor: \"#d33\",\r\n    }).then((result) => {\r\n      console.log(\"this is reopen \", result);\r\n      if (result.isConfirmed === true) {\r\n        this.apiService\r\n          .deleteAddSystem(this.currentUser, data.systemId)\r\n          .subscribe((response) => {\r\n            if (response) {\r\n              Swal.fire({ text: \"Record is Deleted\", icon: \"success\" }).then(() => window.location.reload());\r\n            }\r\n          });\r\n      }\r\n    });\r\n  }\r\n  auth(data){\r\n    Swal.fire({\r\n      //text: 'Unable to process' + 'Error ' + this.responseforfileupload.errorMessage + 'Do you want to Proceed??',\r\n      text: \"You are trying to Authorize record. \" + \" Do you want to proceed?\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3e54b8\",\r\n      cancelButtonColor: \"#d33\",\r\n      // confirmButtonText: 'PROCEED.'\r\n      cancelButtonText: \"NO\",\r\n      confirmButtonText: \"YES\",\r\n      icon: \"info\",\r\n      iconColor: \"#d33\",\r\n    }).then((result) => {\r\n      if (result.isConfirmed === true) {\r\n        if (this.currentUser === data.creatorId) {\r\n          Swal.fire({ text: \"Maker Cannot Authorize Record!\", icon: \"error\" });\r\n          return;\r\n        }\r\n        this.apiService\r\n          .editaddsystem(\"auth\", this.currentUser, data)\r\n          .subscribe((response) => {\r\n            if (response) {\r\n              this.respData = response;\r\n              this.auditLog();\r\n              Swal.fire({ text: \"Record is Authorized\", icon: \"success\" }).then(() => window.location.reload());\r\n            }\r\n          });\r\n      }\r\n    });\r\n  }\r\n  auditLog() {\r\n    if (this.respData.approverId === \"null\") {\r\n      this.respData.approverId = \" \";\r\n    }\r\n    if (this.respData.approvedStatus === \"N\") {\r\n      this.respData.approvedStatus = \"UNAUTHORIZED\";\r\n    }\r\n    if (this.respData.approvedStatus === \"Y\") {\r\n      this.respData.approvedStatus = \"AUTHORIZED\";\r\n    }\r\n    if (this.respData.approvedStatus === \"A\") {\r\n      this.respData.approvedStatus = \"AUTHORIZED\";\r\n    }\r\n    if (this.respData.approvedStatus === \"U\") {\r\n      this.respData.approvedStatus = \"UNAUTHORIZED\";\r\n    }\r\n    if (this.respData.recordStatus === \"O\") {\r\n      this.respData.recordStatus = \"OPEN\";\r\n    }\r\n    if (this.respData.recordStatus === \"C\") {\r\n      this.respData.recordStatus = \"CLOSED\";\r\n    }\r\n    if (this.respData.approvedEver === \"N\") {\r\n      this.respData.approvedEver = \"NO\";\r\n    }\r\n    if (this.respData.approvedEver === \"Y\") {\r\n      this.respData.approvedEver = \"YES\";\r\n    }\r\n  }\r\n  getResp(data){\r\n    localStorage.removeItem('idValue');\r\n    console.log(data);\r\n    this.apiService.setIndex({\r\n      index: data.systemId,\r\n    });\r\n    localStorage.setItem('idValue',data.systemId)\r\n    this.router.navigateByUrl(\"/addSystem\");\r\n  }\r\n  new(){\r\n    localStorage.removeItem('idValue')\r\n    this.apiService.setIndex({\r\n      index: \"\",\r\n    });\r\n    this.router.navigateByUrl(\"/addSystem\");\r\n  }\r\n  refreshPage() {\r\n    window.location.reload();\r\n   }\r\n}\r\n"]}