{"version":3,"file":"src_app_views_auth_login_login_module_ts-es2015.js","mappings":"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","sources":["./src/@npr/animations/fade-in-up.animation.ts","./src/app/views/auth/login/DEMO_USER.ts","./src/app/views/auth/login/login-routing.module.ts","./src/app/views/auth/login/login.component.ts","./src/app/views/auth/login/login.component.html","./src/app/views/auth/login/login.module.ts"],"sourcesContent":["import { animate, style, transition, trigger } from '@angular/animations';\r\n\r\nexport function fadeInUpAnimation(duration: number) {\r\n  return trigger('fadeInUp', [\r\n    transition(':enter', [\r\n      style({\r\n        transform: 'translateY(20px)',\r\n        opacity: 0\r\n      }),\r\n      animate(`${duration}ms cubic-bezier(0.35, 0, 0.25, 1)`, style({\r\n        transform: 'translateY(0)',\r\n        opacity: 1\r\n      }))\r\n    ])\r\n  ]);\r\n}\r\n\r\nexport const fadeInUp400ms = fadeInUpAnimation(400);\r\n","export class DEMO_USER {\r\n    currentUser: string;\r\n    userPermissions: any;\r\n    department: string;\r\n    LoggedInUser: string;\r\n    userobj: string;\r\n    usercompleteobj: any;\r\n\r\n    constructor() {\r\n        this.currentUser = \"SAKTHI\";\r\n        // this.userPermissions = { \"screenAndPermissionsDTO\": [{ \"permissions\": \"1111111111\", \"screenId\": 2, \"screenName\": \"Users\" }, { \"permissions\": \"1111111111\", \"screenId\": 3, \"screenName\": \"Roles\" }, { \"permissions\": \"1111111111\", \"screenId\": 4, \"screenName\": \"Audit Logs\" }, { \"permissions\": \"1111111111\", \"screenId\": 5, \"screenName\": \"Password Policy\" }, { \"permissions\": \"1111111111\", \"screenId\": 6, \"screenName\": \"Process Monitoring\" }, { \"permissions\": \"1111111111\", \"screenId\": 7, \"screenName\": \"External Systems\" }, { \"permissions\": \"1111111111\", \"screenId\": 8, \"screenName\": \"Process Code Mapping\" }, { \"permissions\": \"1111111111\", \"screenId\": 9, \"screenName\": \"Excel Mapping\" }, { \"permissions\": \"1111111111\", \"screenId\": 10, \"screenName\": \"Upload Excel\" }, { \"permissions\": \"1111111111\", \"screenId\": 11, \"screenName\": \"Authorize Excel\" }, { \"permissions\": \"1111111111\", \"screenId\": 12, \"screenName\": \"Rejection Queue\" }, { \"permissions\": \"1111111111\", \"screenId\": 13, \"screenName\": \"Authorize Modifications\" }, { \"permissions\": \"1111111111\", \"screenId\": 14, \"screenName\": \"Excel Processing Summary\" }, { \"permissions\": \"1111111111\", \"screenId\": 15, \"screenName\": \"Customer search\" }, { \"permissions\": \"1111111111\", \"screenId\": 16, \"screenName\": \"Email-Management\" }, { \"permissions\": \"1111111111\", \"screenId\": 17, \"screenName\": \"Transaction Code Maint\" }, { \"permissions\": \"1111111111\", \"screenId\": 18, \"screenName\": \"Initiate Account Closure\" }, { \"permissions\": \"1111111111\", \"screenId\": 19, \"screenName\": \"Process Account Closure\" }, { \"permissions\": \"1111111111\", \"screenId\": 20, \"screenName\": \"Acc Closure Maintenance\" }, { \"permissions\": \"1111111111\", \"screenId\": 21, \"screenName\": \"Charge Maintenance\" }, { \"permissions\": \"1111111111\", \"screenId\": 22, \"screenName\": \"GlobalCodeMaintenance\" }, { \"permissions\": \"1111111111\", \"screenId\": 23, \"screenName\": \"UserCodeMaintenance\" }, { \"permissions\": \"1111111111\", \"screenId\": 24, \"screenName\": \"AcumenJournal\" }, { \"permissions\": \"1111111111\", \"screenId\": 25, \"screenName\": \"Treasury Reference\" }, { \"permissions\": \"1111111111\", \"screenId\": 26, \"screenName\": \"Cash Payments\" }, { \"permissions\": \"1111111111\", \"screenId\": 27, \"screenName\": \"Authorize Cash Payments\" }], \"labels\": [{ \"labelId\": 1, \"labelName\": \"NEW\", \"labelDescription\": \"New\", \"language\": \"EN\" }, { \"labelId\": 2, \"labelName\": \"EDIT\", \"labelDescription\": \"Edit\", \"language\": \"EN\" }, { \"labelId\": 3, \"labelName\": \"DELETE\", \"labelDescription\": \"Delete\", \"language\": \"EN\" }, { \"labelId\": 4, \"labelName\": \"CLOSE\", \"labelDescription\": \"Close\", \"language\": \"EN\" }, { \"labelId\": 5, \"labelName\": \"REOPEN\", \"labelDescription\": \"Reopen\", \"language\": \"EN\" }, { \"labelId\": 6, \"labelName\": \"UNLOCK\", \"labelDescription\": \"Unlock\", \"language\": \"EN\" }, { \"labelId\": 7, \"labelName\": \"PRINT\", \"labelDescription\": \"Print\", \"language\": \"EN\" }, { \"labelId\": 8, \"labelName\": \"AUTH\", \"labelDescription\": \"Auth\", \"language\": \"EN\" }, { \"labelId\": 9, \"labelName\": \"VIEW\", \"labelDescription\": \"View\", \"language\": \"EN\" }, { \"labelId\": 10, \"labelName\": \"REJECT\", \"labelDescription\": \"Reject\", \"language\": \"EN\" }] };\r\n        this.department = null;\r\n        this.LoggedInUser = \"SAKTHI\";\r\n        this.userobj = \"28/12/2021 10:51:30\";\r\n        this.usercompleteobj = { \"pwdChangeDate\": 1640597099000, \"intime\": \"09:00\", \"outtime\": \"22:55\", \"userId\": \"SAKTHI\", \"verifiedStatus\": \"A\", \"creatorDtStamp\": 1593082262162, \"creatorId\": \"TEST1\", \"email\": \"sakthivel.m@rumango.com\", \"emailNotification\": null, \"encryptedPassword\": \"$2a$10$7qdgqLg6lANIjAIu/45I6.s/ydmtHjzjbhEkN25H1e779uaiWtyue\", \"failedAttempts\": 0, \"verifiedOnce\": \"Y\", \"firstTimeLogin\": \"true\", \"ldapUserId\": null, \"logoutTime\": \"Tue Dec 28 10:51:28 IST 2021\", \"mobile\": \"1234567890\", \"msadUserId\": null, \"newRoleForUser\": [\"ROLE_NEW_ADMIN\"], \"passwordAge\": 54563535663, \"recordStatus\": \"O\", \"smsNotification\": null, \"updatedAt\": null, \"updatedBy\": null, \"userName\": \"PRABHAT\", \"userRole\": \"ROLE1\", \"verifierDtStamp\": null, \"verifierId\": null, \"versionNo\": 1, \"modNo\": 6, \"disableUser\": \"N\", \"statusForUser\": \"Enable\", \"department\": null };\r\n    }\r\n}","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { LoginComponent } from './login.component';\r\n\r\n\r\nconst loginRoutes: Routes = [\r\n  {\r\n    path: \"\",\r\n    children: [\r\n      {\r\n        path: 'login',\r\n        component: LoginComponent\r\n      }\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(loginRoutes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class LoginRoutingModule {\r\n}\r\n","import {\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  NgZone,\r\n  OnInit,\r\n  ViewChild,\r\n} from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { Router } from \"@angular/router\";\r\nimport { Ng2IzitoastService } from \"ng2-izitoast\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { fadeInUp400ms } from \"src/@npr/animations/fade-in-up.animation\";\r\nimport { JwtAuthService } from \"src/app/shared/services/jwt-auth.service\";\r\nimport { LocalStoreService } from \"src/app/shared/services/local-store.service\";\r\nimport { DEMO_USER } from \"./DEMO_USER\";\r\nimport Speech from \"speak-tts\";\r\nimport * as CryptoJS from \"crypto-js\";\r\nimport { ApiService } from \"src/app/shared/services/api.service\";\r\nimport { ToastService } from \"src/app/shared/services/toast.service\";\r\nimport Swal from \"sweetalert2\";\r\nimport { RoleService } from \"src/app/shared/services/role.service\";\r\n@Component({\r\n  selector: \"npr-login\",\r\n  templateUrl: \"./login.component.html\",\r\n  styleUrls: [\"./login.component.scss\"],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  animations: [fadeInUp400ms],\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  lastBg: string;\r\n  user1: string;\r\n  hide: Boolean = true;\r\n  signinForm: FormGroup;\r\n  otp: string;\r\n  copyRightDate: Date = new Date();\r\n  isValid: boolean;\r\n  showOtpComponent: boolean = false;\r\n  inputType = \"password\";\r\n  visible = false;\r\n  @ViewChild(\"ngOtpInput\", { static: false }) ngOtpInput: any;\r\n  config = {\r\n    allowNumbersOnly: true,\r\n    length: 6,\r\n    isPasswordInput: false,\r\n    disableAutoFocus: false,\r\n    placeholder: \"*\",\r\n    inputStyles: { width: \"50px\", height: \"50px\" },\r\n  };\r\n  m: any;\r\n  s: any;\r\n  timeOutOtp: boolean;\r\n  user: User;\r\n  security: SecurityDto;\r\n  notifyPswdExpry: number;\r\n  pswdExpiry: number;\r\n  currentDate: any;\r\n  changePwdDate: any;\r\n  differnceInTime: number;\r\n  differnceInDays: number;\r\n  finalDiff: number;\r\n  check: boolean;\r\n  variable: any;\r\n  otpreceivedtime: Date;\r\n  invLogins: number;\r\n  loginProcessing: boolean;\r\n  verifyOTP: boolean;\r\n  progress: boolean;\r\n  responseforotp: User;\r\n  userEntity: User;\r\n  email: string;\r\n  arrayOfAuthStatus:any[]=[];\r\n  passwordGenerationType: any;\r\n  auto: boolean;\r\n  loginCount: number;\r\n  count: number=0;\r\n  // currentDate: any;\r\n  // changePwdDate: any;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private jwtAuth: JwtAuthService,\r\n    private toastService: ToastService,\r\n    private fb: FormBuilder,\r\n    private cd: ChangeDetectorRef,\r\n    private ls: LocalStoreService,\r\n    private demoUser: DEMO_USER,\r\n    public iziToast: Ng2IzitoastService,\r\n    private spinner: NgxSpinnerService,\r\n    private apiService: ApiService,\r\n    public roleService: RoleService\r\n  ) {}\r\n  currentUser: string;\r\n  userPermissions: any;\r\n  department: string;\r\n  LoggedInUser: string;\r\n  userobj: string;\r\n  usercompleteobj: any;\r\n\r\n  ngOnInit() {\r\n    this.signinForm = this.fb.group({\r\n      username: [\"\", Validators.required],\r\n      password: [\"\", [Validators.required, Validators.min(3)]],\r\n    });\r\n    this.count = 0 ;\r\n  }\r\n\r\n  toggle() {\r\n    setTimeout(() => {\r\n      //  this.spinner.hide();\r\n      this.showOtpComponent = !this.showOtpComponent;\r\n      this.showTimer(60);\r\n    }, 2500);\r\n  }\r\n  getOtp() {\r\n    this.count ++;\r\n    console.log(this.count);\r\n    if(this.count === 1){\r\n    //  this.spinner.show();\r\n    localStorage.setItem(\"getOtpClicked\", \"true\");\r\n    let login: any = {};\r\n    login.username = this.signinForm.value.username;\r\n    login.password = this.signinForm.value.password;\r\n    var encryptedAES = CryptoJS.AES.encrypt(\r\n      this.signinForm.value.password,\r\n      \"@12#90!^*NPR*g&*()$34#$\"\r\n    );\r\n    var USERNAME = CryptoJS.AES.encrypt(\r\n      this.signinForm.value.username,\r\n      \"@12#90!^*NPR*g&*()$34#$\"\r\n    );\r\n    var data = encryptedAES.toString();\r\n    var uname = USERNAME.toString();\r\n    // this.skipLoginUser();\r\n\r\n    console.log(\"jygjh\");\r\n    this.apiService.fetchMedUser(this.signinForm.value.username).subscribe(\r\n      (response) => {\r\n        \r\n        console.log(response);\r\n        this.user = response;\r\n        if(this.user.verifiedStatus == \"U\"){\r\n          Swal.fire({text:\"User Is Unauthorized\",'icon':\"error\"})\r\n          this.count = 0;\r\n          return;\r\n          \r\n        }\r\n        if(this.user.statusForUser == \"Disable\"){\r\n          Swal.fire({text:\"User Is Disabled\",'icon':\"error\"})\r\n          this.count = 0;\r\n          return;\r\n          \r\n        }\r\n        this.ls.setItem(\"departmentHeader\", this.user.department);\r\n        this.ls.setItem(\"LoggedInUserHeader\", this.user.logoutTime);\r\n        this.email = this.user.email;\r\n        localStorage.setItem(\"userFromLogin\", this.user.userId);\r\n        sessionStorage.setItem(\"user_id\", this.user.userId);\r\n        if (\r\n          this.user.statusForUser === \"Enable\" &&\r\n          this.user.verifiedStatus === \"A\"\r\n        ) {\r\n          //---------- Password Policy Implementation (BEGIN) ----------\r\n         \r\n          this.apiService.fetchSecurityPolicyService().subscribe((resp) => {\r\n            this.security = resp;\r\n            console.log(resp);\r\n            this.notifyPswdExpry = this.security.notifyPasswordExpiryInDays;\r\n            this.pswdExpiry = this.security.pswdExpiry;\r\n            if (this.pswdExpiry === 0 && this.notifyPswdExpry === 0) {\r\n              console.log(\"Hitting dashboard\");\r\n              // this.router\r\n              //   .navigate([\"/dashboard\"])\r\n              //   .then((data) => console.log(\"dashboard hit\", data));\r\n            } else {\r\n              this.currentDate = new Date();\r\n              this.changePwdDate = new Date(this.user.pwdChangeDate);\r\n              this.differnceInTime = this.currentDate - this.changePwdDate;\r\n              this.differnceInDays = Math.floor(\r\n                this.differnceInTime / (1000 * 3600 * 24)\r\n              );\r\n              this.finalDiff = this.pswdExpiry - this.differnceInDays;\r\n      \r\n              if (this.finalDiff === 0 || this.finalDiff <= 0) {\r\n                this.toastService.errorMessage(\r\n                  \"Your Password is expired. Please reset your password.\",\r\n                  \"\"\r\n                );\r\n                this.count = 0;\r\n              } else {\r\n                this.check = true;\r\n      \r\n                if (\r\n                  this.signinForm.value.password === \"\" ||\r\n                  this.signinForm.value.username === \"\"\r\n                ) {\r\n                  this.toastService.errorMessage(\r\n                    \"Please enter login credentials.\",\r\n                    \"\"\r\n                  );\r\n                  this.count = 0;\r\n                } else {\r\n                  var encryptedAES = CryptoJS.AES.encrypt(\r\n                    login.password,\r\n                    \"@12#90!^*NPR*g&*()$34#$\"\r\n                  );\r\n                  var USERNAME = CryptoJS.AES.encrypt(\r\n                    login.username,\r\n                    \"@12#90!^*NPR*g&*()$34#$\"\r\n                  );\r\n      \r\n                  var data = encryptedAES.toString();\r\n                  var uname = USERNAME.toString();\r\n      \r\n                  login.password = data;\r\n                  login.username = uname;\r\n                  this.apiService.getOtp(login).subscribe(\r\n                    (res) => {\r\n                      this.variable = res;\r\n                      this.otpreceivedtime = new Date();\r\n                      if (this.variable) {\r\n                        if (this.variable[0] === \"Username or password wrong\") {\r\n                          // this.toastService.errorMessage(\r\n                          //   \"Invalid UserId or Password !!!\",\r\n                          //   \"\"\r\n                          // );\r\n                          this.count = 0;\r\n                        }\r\n                        if (res.failLgnCounter != 0) {\r\n                          this.apiService\r\n                            .fetchSecurityPolicyService()\r\n                            .subscribe((sp) => {\r\n                              this.security = sp;\r\n                              this.invLogins = this.security.maxInvLogins;\r\n                              if (this.invLogins !== 0) {\r\n                                this.invLogins = this.invLogins - 1;\r\n                                if (this.invLogins === res.failLgnCounter) {\r\n                                  this.toastService.errorMessage(\r\n                                    \"Contact Admin, User Account locked after \" +\r\n                                      `${res.failLgnCounter + 1}` +\r\n                                      \" wrong attempts.\",\r\n                                    \"\"\r\n                                  );\r\n                                  this.count = 0;\r\n                                }\r\n                              }\r\n                            });\r\n                        }\r\n                        // ---------- Password Policy Implementation (END) ----------\r\n      \r\n                        if (this.variable[0] === \"true\") {\r\n                          this.progress = true;\r\n                          this.toggle();\r\n                          this.toastService.successMessage(\r\n                            \"OTP sent successfully to \" + this.email,\r\n                            \"\"\r\n                          );\r\n                          this.loginProcessing = false;\r\n                          this.verifyOTP = true;\r\n                        } else {\r\n                          if(this.variable[0]=== \"Username or password wrong\" || this.variable[0]=== \"User not found\"){\r\n                             Swal.fire(\"Username or Password is wrong\");\r\n                             this.count = 0;\r\n                          }\r\n                          else {\r\n                          // Swal.fire(this.variable[0]);\r\n                          Swal.fire('Account blocked, maximum failed attempts reached. To login, please do Forgot Password and then try for login.');\r\n                          this.loginProcessing = false;\r\n                          this.count = 0;\r\n                          }\r\n                        }\r\n                      }\r\n                    },\r\n      \r\n                    (err) => {\r\n                      this.toastService.errorMessage(\"Server Error\", \"\");\r\n                      this.loginProcessing = false;\r\n                      this.count = 0;\r\n                    }\r\n                  ),error=>{\r\n                    \r\n                  };\r\n                }\r\n              }\r\n            }\r\n          });\r\n        \r\n\r\n        \r\n        \r\n        }\r\n      },\r\n      (err: any) => {\r\n        console.log(err);\r\n        Swal.fire(err.error.message);\r\n        this.count = 0;\r\n        // this.toastService.errorMessage('Unable to update the record, server error!', '');\r\n      }\r\n    )\r\n  }\r\n }\r\nroles(user){\r\n  let remainingRolesToFetch = user.newRoleForUser.length;\r\n  for (let index = 0; index < (user.newRoleForUser).length; index++) {\r\n    this.roleService.fetchdynamicrolesdata(user.newRoleForUser[index]).subscribe(data => {\r\n       this.arrayOfAuthStatus[index]=data.roleDto.authStatus;\r\n       remainingRolesToFetch --;\r\n       if(remainingRolesToFetch === 0) {\r\n        this.isUserRoleAuthorized();\r\n       }\r\n      }),error=>{\r\n    \r\n      }\r\n  }\r\n}\r\n  isUserRoleAuthorized() {\r\n    if(this.arrayOfAuthStatus.includes('A') !== true){\r\n      Swal.fire({text:\"Role is not authorized for the user\",icon:\"error\"}).then((result => {\r\n        localStorage.clear();\r\n        sessionStorage.clear();\r\n        this.signinForm.reset();\r\n        this.backToLogin();\r\n      }))\r\n    }\r\n    else{\r\n      this.showToast();\r\n    }\r\n  this.arrayOfAuthStatus = [];\r\n  }\r\n\r\n  skipLoginUser() {\r\n    this.ls.setItem(\"currentUser\", this.demoUser.currentUser);\r\n    this.ls.setItem(\"userPermissions\", this.demoUser.userPermissions);\r\n    this.ls.setItem(\"department\", this.demoUser.department);\r\n    this.ls.setItem(\"LoggedInUser\", this.demoUser.LoggedInUser);\r\n    this.ls.setItem(\"userobj\", this.demoUser.userobj);\r\n    this.ls.setItem(\"usercompleteobj\", this.demoUser.usercompleteobj);\r\n    sessionStorage.setItem(\"user_id\", this.demoUser.currentUser);\r\n    this.router.navigate([\"/dashboard\"]);\r\n    this.jwtAuth.setUserAndToken(\"affsff\", {}, true);\r\n    // Skip login Section end\r\n  }\r\n\r\n  resendOtpMethod() {\r\n    this.isValid = false;\r\n    this.ngOtpInput.setValue('');\r\n    let login: any = {};\r\n    login.username = this.signinForm.value.username;\r\n    login.password = this.signinForm.value.password;\r\n    var encryptedAES = CryptoJS.AES.encrypt(\r\n      this.signinForm.value.password,\r\n      \"@12#90!^*NPR*g&*()$34#$\"\r\n    );\r\n    var USERNAME = CryptoJS.AES.encrypt(\r\n      this.signinForm.value.username,\r\n      \"@12#90!^*NPR*g&*()$34#$\"\r\n    );\r\n    var data = encryptedAES.toString();\r\n    var uname = USERNAME.toString();\r\n    this.apiService\r\n      .fetchMedUser(this.signinForm.value.username)\r\n      .subscribe((response) => {\r\n        this.user = response;\r\n        this.email = this.user.email;\r\n        localStorage.setItem(\"userFromLogin\", this.user.userId);\r\n        sessionStorage.setItem(\"user_id\", this.user.userId);\r\n        if (\r\n          this.user.statusForUser === \"Enable\" &&\r\n          this.user.verifiedStatus === \"A\"\r\n        ) {\r\n          //---------- Password Policy Implementation (BEGIN) ----------\r\n          this.apiService.fetchSecurityPolicyService().subscribe((resp) => {\r\n            this.security = resp;\r\n            this.notifyPswdExpry = this.security.notifyPasswordExpiryInDays;\r\n            this.pswdExpiry = this.security.pswdExpiry;\r\n            if (this.pswdExpiry === 0 && this.notifyPswdExpry === 0) {\r\n             \r\n            } else {\r\n              this.currentDate = new Date();\r\n              this.changePwdDate = new Date(this.user.pwdChangeDate);\r\n              this.differnceInTime = this.currentDate - this.changePwdDate;\r\n              this.differnceInDays = Math.floor(\r\n                this.differnceInTime / (1000 * 3600 * 24)\r\n              );\r\n              this.finalDiff = this.pswdExpiry - this.differnceInDays;\r\n\r\n              if (this.finalDiff === 0 || this.finalDiff <= 0) {\r\n                this.toastService.errorMessage(\r\n                  \"Your Password is expired. Please reset your password.\",\r\n                  \"\"\r\n                );\r\n              } else {\r\n                this.check = true;\r\n\r\n                if (\r\n                  this.signinForm.value.password === \"\" ||\r\n                  this.signinForm.value.username === \"\"\r\n                ) {\r\n                  this.toastService.errorMessage(\r\n                    \"Please enter login credentials.\",\r\n                    \"\"\r\n                  );\r\n                } else {\r\n                  var encryptedAES = CryptoJS.AES.encrypt(\r\n                    login.password,\r\n                    \"@12#90!^*NPR*g&*()$34#$\"\r\n                  );\r\n                  var USERNAME = CryptoJS.AES.encrypt(\r\n                    login.username,\r\n                    \"@12#90!^*NPR*g&*()$34#$\"\r\n                  );\r\n\r\n                  var data = encryptedAES.toString();\r\n                  var uname = USERNAME.toString();\r\n\r\n                  login.password = data;\r\n                  login.username = uname;\r\n                  this.apiService.getOtp(login).subscribe(\r\n                    (res) => {\r\n                      this.variable = res;\r\n                      this.otpreceivedtime = new Date();\r\n                      if (this.variable) {\r\n                        if (this.variable[0] === \"Username or password wrong\") {\r\n                          this.toastService.errorMessage(\r\n                            \"Invalid UserId or Password !!!\",\r\n                            \"\"\r\n                          );\r\n                        }\r\n                        if (res.failLgnCounter != 0) {\r\n                          this.apiService\r\n                            .fetchSecurityPolicyService()\r\n                            .subscribe((sp) => {\r\n                              this.security = sp;\r\n                              this.invLogins = this.security.maxInvLogins;\r\n                              if (this.invLogins !== 0) {\r\n                                this.invLogins = this.invLogins - 1;\r\n                                if (this.invLogins === res.failLgnCounter) {\r\n                                  this.toastService.errorMessage(\r\n                                    \"Contact Admin, User Account locked after \" +\r\n                                      `${res.failLgnCounter + 1}` +\r\n                                      \" wrong attempts.\",\r\n                                    \"\"\r\n                                  );\r\n                                }\r\n                              }\r\n                            });\r\n                        }\r\n                        // ---------- Password Policy Implementation (END) ----------\r\n\r\n                        if (this.variable[0] === \"true\") {\r\n                          this.progress = true;\r\n                          this.toastService.successMessage(\r\n                            \"OTP sent successfully to \" + this.email,\r\n                            \"\"\r\n                          );\r\n                          this.loginProcessing = false;\r\n                          this.verifyOTP = true;\r\n                        } else {\r\n                        }\r\n                      }\r\n                    },\r\n\r\n                    (err) => {\r\n                      this.toastService.errorMessage(\"Server Error\", \"\");\r\n                      this.loginProcessing = false;\r\n                    }\r\n                  );\r\n                }\r\n              }\r\n            }\r\n          });\r\n        }\r\n      });\r\n  }\r\n  signin() {\r\n    let otp: any = {};\r\n    otp.username = this.signinForm.value.username;\r\n    otp.otp = this.otp;\r\n    this.apiService.loginService(otp).subscribe(\r\n      (res) => {\r\n        this.responseforotp = res;\r\n\r\n        if (this.responseforotp[0] == \"OTP is invalid\") {\r\n          this.toastService.errorMessage(\"Enter the Valid OTP.\", \"\");\r\n        }\r\n\r\n        this.apiService.fetchMedUser(otp.username).subscribe((response) => {\r\n          this.user = response;\r\n\r\n          // if (this.responseforotp) {\r\n          if (this.user != null) {\r\n            if (this.responseforotp[0] == \"Time Expired\") {\r\n              this.toastService.errorMessage(\r\n                \"This OTP is expired. Please click on Resend OTP to get a new OTP.\",\r\n                \"\"\r\n              );\r\n              this.check = false;\r\n            }\r\n\r\n            this.loginProcessing = false;\r\n            this.user = this.responseforotp[1];\r\n\r\n            this.loginProcessing = false;\r\n\r\n            localStorage.setItem(\"userFromLogin\", this.user.userId);\r\n            sessionStorage.setItem(\"user_id\", this.user.userId);\r\n\r\n            if (\r\n              this.user.statusForUser === \"Enable\" &&\r\n              this.user.verifiedStatus === \"A\"\r\n            ) {\r\n              //---------- Password Policy Implementation (BEGIN) ----------\r\n\r\n              this.apiService.fetchSecurityPolicyService().subscribe((resp) => {\r\n                this.security = resp;\r\n                this.notifyPswdExpry = this.security.notifyPasswordExpiryInDays;\r\n                this.pswdExpiry = this.security.pswdExpiry;\r\n                if (this.pswdExpiry === 0 && this.notifyPswdExpry === 0) {\r\n                  // this.router\r\n                  //   .navigate([\"/dashboard\"])\r\n                  //   .then((data) => console.log(\"dashboard hit\", data));\r\n                  this.count = 0 ; \r\n                } else {\r\n                  this.currentDate = new Date();\r\n\r\n                  this.changePwdDate = new Date(this.user.pwdChangeDate);\r\n                  this.differnceInTime = this.currentDate - this.changePwdDate;\r\n                  this.differnceInDays = Math.floor(\r\n                    this.differnceInTime / (1000 * 3600 * 24)\r\n                  );\r\n\r\n                  this.finalDiff = this.pswdExpiry - this.differnceInDays;\r\n                  if (this.finalDiff === 0 || this.finalDiff <= 0) {\r\n                    this.toastService.errorMessage(\r\n                      \"Your password expired, Please change your password\",\r\n                      \"\"\r\n                    );\r\n                    this.router\r\n                      .navigate([\"/forget-password\"])\r\n                      .then((data) => console.log(\"Forget password hit\", data));\r\n                  } else {\r\n                    //---------- Password Policy Implementation (END) ----------\r\n\r\n                    // this.router.navigate([\"/dashboard\"])\r\n\r\n                    //---------- Password Policy Implementation (BEGIN) ----------\r\n\r\n                    this.currentUser = localStorage.getItem(\"currentUser\");\r\n                    this.apiService\r\n                      .fetchMedUser(otp.username)\r\n                      .subscribe((response) => {\r\n                        this.userEntity = response;\r\n                        console.log(\"userEntity \", this.userEntity);\r\n                        this.apiService.fetchSecurityPolicyService().subscribe(resp => {\r\n                          this.security = resp;\r\n                          this.notifyPswdExpry = this.security.notifyPasswordExpiryInDays;\r\n                          this.pswdExpiry = this.security.pswdExpiry;\r\n  \r\n                          if (this.pswdExpiry !== 0 && this.notifyPswdExpry !== 0) {\r\n                            this.currentDate = new Date();\r\n                            this.changePwdDate = new Date(this.userEntity.pwdChangeDate);\r\n                            this.differnceInTime = this.currentDate - this.changePwdDate;\r\n                            this.differnceInDays = Math.floor(this.differnceInTime / (1000 * 3600 * 24));\r\n                            console.log(\"today's date \", this.currentDate);\r\n                            console.log(\"pswd created date \", this.changePwdDate);\r\n                            console.log(\"no of days diff \", this.differnceInDays);\r\n                            this.finalDiff = this.pswdExpiry - this.differnceInDays;\r\n                            console.log(\"notify user on password expiry\", this.notifyPswdExpry);\r\n                            console.log(\"pwd expiry \", this.security.pswdExpiry);\r\n                            console.log(\"final diff\", this.finalDiff);\r\n  \r\n                            if (this.finalDiff > 0 && this.finalDiff <= this.notifyPswdExpry) {\r\n                              this.toastService.errorMessage(\r\n                                \"Your password will expire in \" +\r\n                                  `${this.finalDiff}` +\r\n                                  \" day(s)\",\r\n                                \"\"\r\n                              );\r\n                            \r\n                            }\r\n                            this.roles(this.user)\r\n                          }\r\n                        });\r\n                      });\r\n                    //  ---------- Password Policy Implementation (END) ----------\r\n                  }\r\n                }\r\n              });\r\n            }\r\n            this.roleService.fetchNewRolePermissions(this.user.userId);\r\n           \r\n          }\r\n        });\r\n      },\r\n      (err) => {\r\n        this.loginProcessing = false;\r\n\r\n        this.toastService.errorMessage(\"Server Error \", \"\");\r\n      }\r\n    );\r\n  }\r\n  routing() {\r\n    console.log(this.userEntity);\r\n    this.jwtAuth.signin().subscribe(\r\n      (response) => {\r\n        setTimeout(() => {\r\n          this.ls.setItem(\"currentUser\", this.userEntity.userId);\r\n          this.ls.setItem(\"userobj\", this.userEntity);\r\n          this.ls.setItem(\"usercompleteobj\", this.userEntity);\r\n          this.router.navigate([\"/dashboard\"]);\r\n          this.iziToast.show({\r\n            title: `DTB - Median!`,\r\n            message: `Welcome, ${this.userEntity.userId}!`,\r\n            image: \"assets/images/user.png\",\r\n            icon: \"ico ico-success\",\r\n            // theme:\"dark\",\r\n            layout: 2,\r\n            // imageWidth:50,\r\n            balloon: false,\r\n            position: \"topRight\",\r\n            progressBarColor: \"red\",\r\n            pauseOnHover: true,\r\n          });\r\n        }, 2500);\r\n      },\r\n      (err) => {\r\n        // console.log(err);\r\n      }\r\n    );\r\n  }\r\n  getUser() {\r\n    this.user1 = localStorage.getItem(\"userobj\");\r\n    this.apiService.fetchMedUser(JSON.parse(this.user1).userId).subscribe(\r\n      (response) => {\r\n        this.initTheme(response.screenThemeSelected);\r\n      })\r\n  }\r\n  initTheme(bgClass) {\r\n    var lastBg = bgClass === \"theme2\" ? \"theme2\" : \"theme1\";\r\n    $('body').removeClass(lastBg).addClass(bgClass);\r\n    this.lastBg = bgClass;\r\n    $('.ddParent').removeClass('actDD');\r\n    ;\r\n    if(bgClass === \"theme1\") {\r\n      console.log($('#themeChangeRadio:nth-child(1)'));\r\n      $('[data-id=\"theme1\"]').addClass('active');\r\n      $('[data-id=\"theme2\"]').removeClass('active');\r\n    } else {\r\n      $('[data-id=\"theme1\"]').removeClass('active');\r\n      $('[data-id=\"theme2\"]').addClass('active');\r\n    }\r\n  }\r\n  showToast() {\r\n   \r\n    this.ls.setItem(\"currentUser\", this.userEntity.userId);\r\n    this.ls.setItem(\"userobj\", this.userEntity);\r\n    this.ls.setItem(\"usercompleteobj\", this.userEntity);\r\n    if(this.userEntity.logoutTime === null && this.userEntity.passwordGenerationType === 'Auto'){\r\n      this.router.navigate([\"/change-password\"]);\r\n    }\r\n    else{\r\n     this.router.navigate([\"/dashboard\"]);\r\n    }\r\n    this.iziToast.show({\r\n      title: `DTB - Median!`,\r\n      message: `Welcome, ${this.userEntity.userId}!`,\r\n      image: \"assets/images/user.png\",\r\n      icon: \"ico ico-success\",\r\n      // theme:\"dark\",\r\n      layout: 2,\r\n      // imageWidth:50,\r\n      balloon: false,\r\n      position: \"topRight\",\r\n      progressBarColor: \"red\",\r\n      pauseOnHover: true,\r\n    });\r\n  }\r\n  backToLogin() {\r\n    this.showOtpComponent = false;\r\n    this.count = 0 ; \r\n  }\r\n  onOtpChange(otp: string) {\r\n    this.otp = otp;\r\n    if (this.otp.length === 6) {\r\n      this.isValid = true;\r\n      const signinData = this.signinForm.value;\r\n    }\r\n  }\r\n\r\n  showTimer(remaining) {\r\n    let timerOn = true;\r\n    this.m = Math.floor(remaining / 60);\r\n    this.s = remaining % 60;\r\n\r\n    this.m = this.m < 10 ? \"0\" + this.m : this.m;\r\n    this.s = this.s < 10 ? \"0\" + this.s : this.s;\r\n    this.cd.detectChanges();\r\n\r\n    remaining -= 1;\r\n\r\n    if (remaining >= 0 && timerOn) {\r\n      setTimeout(() => {\r\n        this.showTimer(remaining);\r\n      }, 1000);\r\n      return;\r\n    }\r\n\r\n    if (!timerOn) {\r\n      // Do validate stuff here\r\n      return;\r\n    }\r\n\r\n    // Do timeout stuff here\r\n    this.timeOutOtp = true;\r\n    this.m = null;\r\n    this.s = null;\r\n    this.cd.markForCheck();\r\n  }\r\n\r\n  toggleVisibility() {\r\n    if (this.visible) {\r\n      this.inputType = \"password\";\r\n      this.visible = false;\r\n      this.cd.markForCheck();\r\n    } else {\r\n      this.inputType = \"text\";\r\n      this.visible = true;\r\n      this.cd.markForCheck();\r\n    }\r\n  }\r\n\r\n  resendOtp() {\r\n    this.timeOutOtp = false;\r\n    this.showTimer(60);\r\n  }\r\n\r\n  obscureEmail(email) {\r\n    const [name, domain] = email.split(\"@\");\r\n    return `${name.substring(0, 5)}${new Array(name.length).join(\r\n      \"*\"\r\n    )}@${domain}`;\r\n  }\r\n}\r\nexport class User {\r\n  //  id: number;\r\n  applications: string;\r\n  changePassword: boolean;\r\n  createdAt: Date;\r\n  creatorDtStamp: Date;\r\n  creatorId: string;\r\n  currentSignInAt: Date;\r\n  currentSignInIp: string;\r\n  email: string;\r\n  emailNotification: string;\r\n  encryptedPassword: string;\r\n  failedAttempts: number;\r\n  lastSignInAt: Date;\r\n  ldapUserId: string;\r\n  lockedAt: Date;\r\n  mobile: number;\r\n  msadUserId: string;\r\n  notificationEmails: string;\r\n  notificationMobiles: boolean;\r\n  rememberCreatedAt: Date;\r\n  resetPasswordSentAt: Date;\r\n  resetPasswordToken: string;\r\n  recordStatus: string;\r\n  signInCount: number;\r\n  smsNotification: boolean;\r\n  unlockToken: string;\r\n  updatedAt: Date;\r\n  userId: string;\r\n  userName: string;\r\n  verified: boolean;\r\n  verifierDtStamp: Date;\r\n  verifierId: string;\r\n  // authStatus: string;\r\n  passwordGenerationType:string;\r\n  verifiedStatus: string;\r\n  autoAuth: boolean;\r\n  maintAllowed: boolean;\r\n  userAccessOption: string;\r\n  roleForUser: string;\r\n  versionNo: string;\r\n  updatedBy: string;\r\n  logoutTime: string;\r\n  fristTimeAuth: string;\r\n  fristTimeLogin: string;\r\n  newRoleForUser: any;\r\n  statusForUser: string;\r\n  disableUser: string;\r\n  pwdChangeDate: Date;\r\n  department: any;\r\n}\r\nexport class SecurityDto {\r\n  clientId: number;\r\n  maxInvLogins: number;\r\n  maxPswdLength: number;\r\n  minPswdLength: number;\r\n  pswdExpiry: number;\r\n  notifyPasswordExpiryInDays: number;\r\n  pswdReuseAft: number;\r\n  pswdComplexLcase: any;\r\n  pswdComplexNum: any;\r\n  pswdComplexSplc: any;\r\n  passwordGenerationType:any\r\n  pswdComplexUcase: any;\r\n  authStatus: string;\r\n  authorizedBy: string;\r\n  authorizedTime: Date;\r\n  modifiedBy: string;\r\n  modifiedTime: Date;\r\n  pswdComplexity: string;\r\n  version: number;\r\n}\r\n","<section class=\"bg-white\">\r\n  <div class=\"loginLogoCol text-center text-lg-start\">\r\n    <a href=\"JavaScript:void(0)\">\r\n      <img src=\"assets/images/logo.png\" alt=\"logo\">\r\n    </a>\r\n  </div>\r\n  <div class=\"container\" >\r\n    <div class=\"row g-0 loginRow align-items-center\" >\r\n      <div class=\"col-lg-6\" style=\"margin-top: 3%;\">\r\n        <div class=\"loginFormCol\" *ngIf=\"!showOtpComponent\">\r\n          <div class=\"loginCol\">\r\n            <h2 class=\"lgTitle secondaryColor\">Log in</h2>\r\n       \r\n            <div class=\"loginFormStyle\">\r\n              <form class=\"row g-4\" [formGroup]=\"signinForm\">\r\n                <div class=\"col-12\">\r\n                  <label for=\"exampleInputEmail1\" class=\"form-label lblStyles\">User ID*</label>\r\n                  <input type=\"text\" autofocus=\"autofocus\"  oninput=\"this.value = this.value.toUpperCase()\" formControlName=\"username\" class=\"form-control lineField loginInput\" id=\"exampleInputEmail1\" placeholder=\"Your User Id\">\r\n                  \r\n                </div>\r\n                <div class=\"col-12\">\r\n                  <div class=\"row\">\r\n                    <div class=\"col\">\r\n                      <label for=\"exampleInputPassword1\" class=\"form-label lblStyles\">Password</label>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"inputField \">\r\n                    <div class=\"inputField pwdFldCol d-flex\">\r\n                      <input type=\"password\"  formControlName=\"password\" [type]=\"hide ? 'password' : 'text'\" class=\"form-control lineField loginInput\" id=\"pwdFld\" placeholder=\"Your Password\">\r\n                      <span toggle=\"#pwdFld\" class=\"alignSelf\" (click)=\"hide = !hide\">\r\n                        <img class=\"showPwd\" *ngIf=\"!hide\" src=\"assets/images/show-icon.svg\" alt=\"...\">\r\n                        <img class=\"hidePwd\"  *ngIf=\"hide\" src=\"assets/images/hide-icon.svg\" alt=\"...\">\r\n                      </span>\r\n                    </div>\r\n                    <!-- <input type=\"password\" class=\"form-control lineField\" id=\"exampleInputPassword1\" placeholder=\"Your Password\">\r\n                    <span toggle=\"#pwdFld\" class=\"fieldIcon toggle-password fa-eye\"><img class=\"showPwd\" src=\"images/show-icon.svg\" alt=\"...\"><img class=\"hidePwd\" src=\"images/hide-icon.svg\" alt=\"...\"></span> -->\r\n                  </div>\r\n                 \r\n                </div>\r\n                <div class=\"col-12\">\r\n                  <button type=\"submit\" [disabled]=\"!signinForm.valid\" (click)=\"getOtp()\" class=\"btn btnPrimary w-100 btnLg roundedBorder\">Get OTP</button>\r\n                </div>\r\n                \r\n              </form>\r\n              <div class=\"float\">\r\n                <a  [routerLink]=\"['/forget-password']\" class=\"primaryColor fpLink\">Forgot Password?</a>\r\n              </div>\r\n              <div class=\"rumanogoCol text-center pt-3\">\r\n                <img src=\"assets/images/rumango-img.png\" alt=\"rumango-img\">\r\n                <span class=\"medainStyle mt-3\">MEDIAN {{ copyRightDate | date:'YYYY' }} - Connecting Systems</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"loginFormCol\">\r\n          <!--begin::Wrapper-->\r\n          <div class=\"loginCol\" *ngIf=showOtpComponent>\r\n            <!--begin::Form-->\r\n            <form class=\"form w-100 mb-10\">\r\n              <!--begin::Icon-->\r\n              <div class=\"text-center mb-10\">\r\n                <img alt=\"Logo\" class=\"mh-125px\" src=\"assets/images/smartphone.svg\" />\r\n              </div>\r\n              <!--end::Icon-->\r\n              <!--begin::Heading-->\r\n              <div class=\"text-center mb-10\">\r\n                <!--begin::Title-->\r\n                <h1 class=\"text-dark mb-3\">Two Step Verification</h1>\r\n                <!--end::Title-->\r\n                <!--begin::Sub-title-->\r\n                <div class=\"text-muted fw-bold fs-5 mb-5\">Enter the verification code we sent to</div>\r\n                <!--end::Sub-title-->\r\n                <!--begin::Mobile no-->\r\n                <div class=\"fw-bolder text-dark fs-3\">{{ email }}</div>\r\n                <!--end::Mobile no-->\r\n              </div>\r\n              <!--end::Heading-->\r\n              <!--begin::Section-->\r\n              <div class=\"mb-10 px-md-10\">\r\n                <!--begin::Label-->\r\n                <div class=\"fw-bolder text-start text-dark fs-6 mb-1 ms-1\">Type your 6 digit security code</div>\r\n                <!--end::Label-->\r\n                <!--begin::Input group-->\r\n                <div class=\"d-flex flex-wrap flex-stack\">\r\n                  <ng-otp-input #ngOtpInput   (onInputChange)=\"onOtpChange($event)\" [config]=\"config\" inputControls=\"6\"></ng-otp-input>\r\n                </div> \r\n                <!--begin::Input group-->\r\n              </div>\r\n              <!--end::Section-->\r\n              <!--begin::Submit-->\r\n              <div class=\"d-flex\" style=\"gap: 10px;\">\r\n                <button type=\"button\"  [disabled]=\"!isValid\" \r\n                   class=\"btn btn-lg btnPrimary fw-bolder \" (click)=\"signin()\">\r\n                  <!-- <ng-container *ngIf=\"isValid; else showText\">\r\n                    <span class=\"indicator-progress\">Please wait... \r\n                      <span class=\"spinner-border spinner-border-sm align-middle ms-2\"></span></span>\r\n                  </ng-container> -->\r\n                  <!-- <ng-template #showText> -->\r\n                    Verify\r\n                  <!-- </ng-template> -->\r\n                </button>\r\n                <button type=\"button\" \r\n                class=\"btn smBtn minWdSmBtn btnUpdate\" (click)=\"resendOtpMethod()\">\r\n               <!-- <ng-container *ngIf=\"isValid; else showText\">\r\n                 <span class=\"indicator-progress\">Please wait... \r\n                   <span class=\"spinner-border spinner-border-sm align-middle ms-2\"></span></span>\r\n               </ng-container> -->\r\n               <!-- <ng-template #showText> -->\r\n                 Resend OTP\r\n               <!-- </ng-template> -->\r\n             </button>\r\n             <button type=\"button\"  \r\n             class=\"btn smBtn minWdSmBtn btnSecondary\" (click)=\"backToLogin()\">\r\n            <!-- <ng-container *ngIf=\"isValid; else showText\">\r\n              <span class=\"indicator-progress\">Please wait... \r\n                <span class=\"spinner-border spinner-border-sm align-middle ms-2\"></span></span>\r\n            </ng-container> -->\r\n            <!-- <ng-template #showText> -->\r\n              Exit\r\n            <!-- </ng-template> -->\r\n          </button>\r\n              </div>\r\n              <!--end::Submit-->\r\n            </form>\r\n            <!--end::Form-->\r\n            <!--begin::Notice-->\r\n            <!-- <div class=\"text-center fw-bold fs-5\">\r\n              <span class=\"text-muted me-1\">Resend OTP in : </span>\r\n              <ng-container *ngIf=\"timeOutOtp; else showTimer\">\r\n                <a class=\"fw-bolder fs-5 me-1 primaryColor fpLink\" (click)=\"resendOtp()\">Resend</a>\r\n              </ng-container>\r\n              <ng-template #showTimer>\r\n                <span id=\"timer\">{{ m + ':' + s }}</span>\r\n              </ng-template>\r\n            \r\n               <span class=\"text-muted me-1\">or</span> \r\n              <a href=\"#\" class=\"link-primary fw-bolder fs-5\">Call Us</a> -->\r\n            <!-- </div> --> \r\n            <!--end::Notice-->\r\n          </div>\r\n\t\t\t\t\t\t<!--end::Wrapper-->\r\n        </div>\r\n      </div>\r\n      <div class=\"col-lg-6\">\r\n        <div class=\"loginImgCol d-none d-lg-block\">\r\n          <img src=\"assets/images/login-img.svg\" alt=\"loginimg\">\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</section>   \r\n<ngx-spinner size=\"small\" type=\"square-loader\"></ngx-spinner>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import { CUSTOM_ELEMENTS_SCHEMA, NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { LoginRoutingModule } from './login-routing.module';\r\nimport { LoginComponent } from './login.component';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { DEMO_USER } from './DEMO_USER';\r\nimport { NgOtpInputModule } from 'ng-otp-input';\r\nimport { NgxSpinnerModule } from \"ngx-spinner\";\r\nimport { Ng2IziToastModule } from 'ng2-izitoast';\r\n\r\n@NgModule({\r\n  declarations: [LoginComponent],\r\n  imports: [\r\n    CommonModule,\r\n    LoginRoutingModule,\r\n    ReactiveFormsModule,\r\n    NgOtpInputModule,\r\n    NgxSpinnerModule,\r\n    Ng2IziToastModule\r\n  ],\r\n  providers:[DEMO_USER],\r\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\r\n})\r\nexport class LoginModule {\r\n}\r\n"],"names":[],"sourceRoot":"webpack:///"}