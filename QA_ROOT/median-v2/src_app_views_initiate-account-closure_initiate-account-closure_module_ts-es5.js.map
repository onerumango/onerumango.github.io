{"version":3,"mappings":"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","names":["FetchUserForSingleAccClosureReqDTO","arg0","Error","_angular_core__WEBPACK_IMPORTED_MODULE_7__","ctx_r4","AccountClosureDetailsComponent","formBuilder","cdr","router","accClosure","canDeactivateGuard","iziToast","route","roleService","src_app_shared_models_FetchUserForSingleAccClosureReqDTO__WEBPACK_IMPORTED_MODULE_0__","src_app_shared_models_fmosNewRolePermissions__WEBPACK_IMPORTED_MODULE_1__","rxjs__WEBPACK_IMPORTED_MODULE_8__","accClosureNavObj","localStorage","getItem","accClosureNavigationObject","JSON","parse","getIndexValue","subscribe","paramScreen","resp","index","createAccClosure","currentUser","replace","navSubscription","getNavParam","initiateAccClosure","data","console","log","fetchUserSingle","id","queryParams","modNo","closureType","accountNumber","accountType","recordStatus","verifiedStatus","inputBy","inputTime","verifiedOnce","verifiedfirst","verifiedBy","fileName","branchCode","branch","reasonForClosure","reason","processStatus","accountLinkageDesc","Desc","closeStatusInputBy","closeStatusInputTime","closeStatus","icliqAvlBal","icliqBalance","icliqStatus","makerId","makerInputTime","accls","lastTransactionDetail","blockedAmount","deStatus","linkedAccounts","checkerId","checkerInputTime","roleCodes","singleCall","markForCheck","selected","radioSelectred","undefined","buildAccClosureForm","bulk","accountClosureForm","disable","get","setValue","setItem","value","screenLabelList","message","setTimeout","auditLog","isResponse","group","_angular_forms__WEBPACK_IMPORTED_MODULE_9__","event","sweetalert2__WEBPACK_IMPORTED_MODULE_2___default","text","icon","selectedFiles","target","files","sizeOfFile","item","size","name","submitFile","onSingleClosure","singleClosureData","responseMsg","errorDesc","formTouched","touched","editFlag","enable","navigationExtras","verifiedTime","sendNavParam","navigate","onViewOfSingleClsureType","fetch","viewReportOfSingleResp","acyCurrBalance","frozen","dorm","lcyCurrBalance","acSatNoCr","acyAvlBal","accountStatus","recordStatusFromFlexCube","customerId","valueDate","acStatNoDr","controls","sendAccountType","sendClosureType","currentFileUpload","showSubmitProgressBar","onFileUpload","fileResp","enableView","showAuditlog","isExit","showCancelButton","confirmButtonColor","cancelButtonColor","cancelButtonText","confirmButtonText","then","result","isConfirmed","Promise","resolve","reject","closureTypeViewBulk","fileNmaeBulk","accountTypeBulk","record","authorizer","authFirsTime","authStatus","authDate","creator","creatorDate","modficationNo","submiitingSingleClosureRecordAfterEdit","backendResp","title","onAuthorizingTheRecord","authResp","onClosingTheRecord","recordStatusResp","onReopningTheRecord","openResp","selectors","decls","vars","consts","template","ctx","routes","path","component","_initiate_account_closure_initiate_account_closure_component__WEBPACK_IMPORTED_MODULE_2__","_account_closure_details_account_closure_details_component__WEBPACK_IMPORTED_MODULE_1__","canDeactivate","src_app_shared_guards_can_deactivate_guard__WEBPACK_IMPORTED_MODULE_0__","_view_report_acc_closure_view_report_acc_closure_component__WEBPACK_IMPORTED_MODULE_3__","InitiateAccountClosureRoutingModule","_angular_router__WEBPACK_IMPORTED_MODULE_5__","imports","exports","InitiateAccountClosureModule","_angular_common__WEBPACK_IMPORTED_MODULE_6__","_initiate_account_closure_routing_module__WEBPACK_IMPORTED_MODULE_0__","angular_datatables__WEBPACK_IMPORTED_MODULE_3__","_angular_forms__WEBPACK_IMPORTED_MODULE_7__","declarations","_initiate_account_closure_initiate_account_closure_component__WEBPACK_IMPORTED_MODULE_1__","_account_closure_details_account_closure_details_component__WEBPACK_IMPORTED_MODULE_2__","_view_report_acc_closure_view_report_acc_closure_component__WEBPACK_IMPORTED_MODULE_4__","_angular_core__WEBPACK_IMPORTED_MODULE_5__","InitiateAccountClosureComponent","accClosureServiceSum","src_app_shared_models_fmosNewRolePermissions__WEBPACK_IMPORTED_MODULE_0__","rxjs__WEBPACK_IMPORTED_MODULE_6__","newRolePermissions","dtOptions","pagingType","pageLength","columnDefs","type","order","processing","lengthMenu","gettingAccClosureSummary","fetchScreenPermissions","setIndexValue","row","viewAccountType","modifyNo","authorizedTime","stringify","gettingAccountClosureSummary","SummaryData","users","statusArr","find","i","startsWith","summaryDetails","dtTrigger","next","sweetalert2__WEBPACK_IMPORTED_MODULE_1___default","window","location","reload","_angular_core__WEBPACK_IMPORTED_MODULE_8__","ctx_r1","ViewReportAccClosureComponent","excelService","ref","rxjs__WEBPACK_IMPORTED_MODULE_9__","Array","closureTypes","ViewAccClosure","fin","split","slice","join","getExcel","excel","forEach","exportAsExcelFile","doc","jspdf__WEBPACK_IMPORTED_MODULE_1___default","col","rows","itemNew","date","Date","element","timeForExport","toLocaleDateString","temp","accountNo","closureReason","push","autoTable","head","body","save","convert","exportAsXLSX","processTheBulkRecord","processResp","msg","var1","process","sweetalert2__WEBPACK_IMPORTED_MODULE_3___default","onDeletingTheReocrd","deleteResp","processTheSingleRecord","onDeletingSingle","singledeleteResp","deleteSingle","singleExcel","exportAsExcelForSingleAccount","Object","keys","values","entries","objectArray","mapped","map","key"],"sources":["webpack:///src/app/shared/models/FetchUserForSingleAccClosureReqDTO.ts","webpack:///src/app/views/initiate-account-closure/account-closure-details/account-closure-details.component.html","webpack:///src/app/views/initiate-account-closure/account-closure-details/account-closure-details.component.ts","webpack:///src/app/views/initiate-account-closure/initiate-account-closure-routing.module.ts","webpack:///src/app/views/initiate-account-closure/initiate-account-closure.module.ts","webpack:///src/app/views/initiate-account-closure/initiate-account-closure/initiate-account-closure.component.html","webpack:///src/app/views/initiate-account-closure/initiate-account-closure/initiate-account-closure.component.ts","webpack:///src/app/views/initiate-account-closure/view-report-acc-closure/view-report-acc-closure.component.html","webpack:///src/app/views/initiate-account-closure/view-report-acc-closure/view-report-acc-closure.component.ts"],"sourcesContent":["export class FetchUserForSingleAccClosureReqDTO\r\n{\r\n    map(arg0: (p: any) => any): any {\r\n      throw new Error(\"Method not implemented.\");\r\n    }\r\n    id:string;\r\n    closureType:string;\r\n    accountType:string;\r\n    accountNumber:string;\r\n    inputBy:string;\r\n    inputTime:string;\r\n    modNo:string;\r\n    acyCurrBalance:number;\r\n    recordStatus:string;\r\n    verifiedBy:string;\r\n    verifiedTime:string;\r\n    verifiedOnce:string\r\n    verifiedStatus:string;\r\n    frozen:string;\r\n    branchCode:string;\r\n    dorm:string;\r\n    lcyCurrBalance:string;\r\n    fileName:string;\r\n    acSatNoCr : string;\r\n    acStatNoDr : string;\r\n    acStatStPay : string;\r\n    acyAvlBal : number;\r\n    currency:string;\r\n    accountStatus:string;\r\n    customerId:string;\r\n    recordStatusFromFlexCube:string;\r\n    valueDate:Date;\r\n    processStatus:string;\r\n    rejectStatus:string;\r\n    processInputBy:string;\r\n    processInputTime:string;\r\n    reasonForClosure:string;\r\n    accountTypeBulk:string\r\n    var1 : boolean;\r\n\r\n    // closeCustAccErrorDesc : string;\r\n    errorDesc:string;\r\n    accountLinkageDesc:string;\r\n\r\n    //-----------------------------------------------\r\n    closeStatusInputBy:string;\r\n\r\n\t\r\n\tcloseStatusInputTime:Date;\r\n    closeStatus:string;\r\n\ticliqAvlBal:number; // From ICLIQ Response this balance will moved for authorisation and zerorised\r\n\r\n\ticliqBalance:number; // From ICLIQ Response this balance will reamin same to show in final report\r\n\r\n\ticliqStatus:string;\r\n\r\n    makerId:string;\r\n\r\n\tmakerInputTime:Date;\r\n\r\n    accls:string;\r\n\r\n\tlastTransactionDetail:string;\r\n\r\n\tblockedAmount:number;\r\n\r\n\tdeStatus:string;\r\n\r\n\t\r\n\r\n\tlinkedAccounts:string;\r\n\r\n\tcheckerId:string;\r\n\r\n  checkerInputTime:Date;\r\n  \r\n  status:string;\r\n     \r\n}","<div class=\"pageContentMain\">\r\n  <div class=\"pageTitleCol\">\r\n    <h2 class=\"pageTitle\">Initiate Account Closure</h2>\r\n  </div>\r\n  <form action=\"\" class=\"formStyle\" [formGroup]=\"accountClosureForm\">\r\n    <div class=\"dbCardStyle cardWidth\">\r\n      <div class=\"row gy-4 justify-content-center\">\r\n        <div class=\"col-12\">\r\n          <div class=\"row g-2 justify-content-center\">\r\n            <div class=\"col-sm-4 col-5\">\r\n              <div class=\"radio radioStyle\">\r\n                <input [readonly]=\"editFlag\" id=\"radio-1\" name=\"radio\" type=\"radio\" [checked]=\"bulk\" (click)=\"onClickOfBulk()\">\r\n                <label for=\"radio-1\" class=\"radio-label\">Bulk</label>\r\n              </div>\r\n            </div>\r\n            <div class=\"col-sm-4 col-5\">\r\n              <div class=\"radio radioStyle\">\r\n                <input [readonly]=\"editFlag\" id=\"radio-2\" name=\"radio\" type=\"radio\" [checked]=\"!bulk\" (click)=\"onclickOfSingle()\">\r\n                <label  for=\"radio-2\" class=\"radio-label\">Single</label>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-12\">\r\n          <label for=\"roleName\" class=\"formLbl\">Account Type<span class=\"colorRed\">*</span></label>\r\n          <select class=\"form-select\" formControlName=\"accountType\"  aria-label=\"Default select example\">\r\n            <option hidden value=\"\" disabled selected >--Please select--</option>\r\n            <option value=\"dormant\">Dormant </option>\r\n            <option value=\"overDrawn\">OverDrawn Accounts</option> \r\n            <option value=\"unclaimed\">Unclaimed </option>\r\n          </select>\r\n          <div class=\"errorColor\" *ngIf=\"accountClosureForm.get('accountType').invalid && (accountClosureForm.get('accountType').dirty || accountClosureForm.get('accountType').touched)\">\r\n            <div *ngIf=\"accountClosureForm.get('accountType').errors.required\">\r\n            Please Select Account Type\r\n          </div>\r\n        </div>\r\n        </div>\r\n        <div class=\"col-12\" *ngIf=\"singleCall\">\r\n          <label for=\"roleName\" class=\"formLbl\">Account Number<span class=\"colorRed\">*</span></label>\r\n          <input id=\"accountNumber\" placeholder=\"Account Number\" required [readonly]=\"editFlag\"\r\n          formControlName=\"accountNumber\" class=\"form-control\" value=\"\">\r\n          <div class=\"errorColor\" *ngIf=\"accountClosureForm.get('accountNumber').invalid && (accountClosureForm.get('accountNumber').dirty || accountClosureForm.get('accountNumber').touched)\">\r\n            <div *ngIf=\"accountClosureForm.get('accountNumber').errors.required\">\r\n            Please Enter Account Number\r\n          </div>\r\n        </div>\r\n        </div>\r\n        <div class=\"col-12\" *ngIf=\"singleCall\">\r\n          <label for=\"roleName\" class=\"formLbl\">Branch Code<span class=\"colorRed\">*</span></label>\r\n          <input id=\"branchCode\" placeholder=\"Branch Code\" required [readonly]=\"editFlag\"\r\n          formControlName=\"branchCode\" class=\"form-control\" value=\"\">\r\n          <div class=\"errorColor\" *ngIf=\"accountClosureForm.get('branchCode').invalid && (accountClosureForm.get('branchCode').dirty || accountClosureForm.get('branchCode').touched)\">\r\n            <div *ngIf=\"accountClosureForm.get('branchCode').errors.required\">\r\n            Please Enter Branch Code\r\n          </div>\r\n        </div>\r\n        </div>\r\n\r\n        <div class=\"col-12\" *ngIf=\"singleCall\">\r\n          <label for=\"roleName\" class=\"formLbl\">Reason For Closure<span class=\"colorRed\">*</span></label>\r\n          <input id=\"\" placeholder=\"Reason For Closure\" required [readonly]=\"editFlag\"\r\n          formControlName=\"reasonForClosure\"  class=\"form-control\" value=\"\">\r\n          <div class=\"errorColor\" *ngIf=\"accountClosureForm.get('reasonForClosure').invalid && (accountClosureForm.get('reasonForClosure').dirty || accountClosureForm.get('reasonForClosure').touched)\">\r\n            <div *ngIf=\"accountClosureForm.get('reasonForClosure').errors.required\">\r\n            Please Enter Reason For Closure\r\n          </div>\r\n        </div>\r\n        </div>\r\n        <div class=\"col-12\" *ngIf=\"!singleCall\">\r\n          <div class=\"fileUpload\">\r\n           <div class=\"formS\">\r\n              <div class=\"file-upload-wrapper upIcon\" [style]=\"{'--display': fileName ? 'none' : 'flex'}\" [attr.data-text]=\"fetchUserSingle.fileName ? fetchUserSingle.fileName : fileName ? fileName: 'Upload File'\">\r\n                <input [readonly]=\"editFlag\" [disabled]=\"accountClosureForm.disabled\" (change)=\"selectFile($event)\" name=\"file-upload-field\" type=\"file\" class=\"file-upload-field\" value=\"\">\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <!-- <p *ngIf=\" fetchUserSingle.closureType ==undefined\" style=\"font-size: 11px;color:#a30202\">file: {{fileName}}</p> -->\r\n          <!-- <p *ngIf=\" fetchUserSingle.closureType!=undefined\" style=\"font-size: 11px;color:#a30202\">filename: {{fetchUserSingle.fileName}}</p> -->\r\n        </div>\r\n        <div class=\"col-12\"  *ngIf=\" fetchUserSingle.closureType==null\">\r\n          <div class=\"row g-3 pb-3 justify-content-center pt-3\">\r\n            <div class=\"col-auto\" *ngIf=\"!singleCall\">\r\n              <button href=\"javascript:void(0)\" class=\"btn smBtn minWdSmBtn btnPrimary\" [disabled]=\"submitFile &&accountClosureForm.controls['accountType'].invalid\" (click)=\"onSubmitFile()\">Submit File</button>\r\n            </div>\r\n            <div class=\"col-auto\" *ngIf=\"singleCall\">\r\n              <button href=\"javascript:void(0)\" class=\"btn smBtn minWdSmBtn btnPrimary\" [disabled]=\"accountClosureForm.invalid\" (click)=\"onSubmitSingle($event)\">Submit</button>\r\n            </div>\r\n            <div class=\"col-auto\">\r\n              <button (click)=\"generateExcel()\" class=\"btn smBtn minWdSmBtn btnPrimary\">View Report</button>\r\n            </div>\r\n            <div class=\"col-auto\">\r\n              <button routerLink=\"/initiate-account-closure\" class=\"btn smBtn minWdSmBtn btnSecondary\">Exit</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-12\"  *ngIf=\"fetchUserSingle.closureType!=null\">\r\n          <div class=\"row g-3 pb-3 justify-content-center pt-3\">\r\n        \r\n            \r\n            <div class=\"col-auto\" *ngIf=\"!editFlag\">\r\n              <button class=\"btn smBtn minWdSmBtn btnUpdate\"  (click)=\"editValues()\"> Edit</button>\r\n            </div>\r\n            <div class=\"col-auto\" *ngIf=\"!singleCall && editFlag\">\r\n              <button href=\"javascript:void(0)\" class=\"btn smBtn minWdSmBtn btnPrimary\" [disabled]=\"submitFile &&accountClosureForm.controls['accountType'].invalid\" (click)=\"onSubmitFile()\">Submit File</button>\r\n            </div>\r\n            <div class=\"col-auto\" *ngIf=\"singleCall && editFlag\">\r\n              <button href=\"javascript:void(0)\" class=\"btn smBtn minWdSmBtn btnPrimary\" [disabled]=\"accountClosureForm.invalid\" (click)=\"onSubmitOfSingleClosure()\">Submit</button>\r\n            </div>\r\n            <div class=\"col-auto\" *ngIf=\"(fetchUserSingle.verifiedStatus == 'UNAUTHORIZED' || fetchUserSingle.verifiedStatus == 'U' || fetchUserSingle.verifiedStatus == 'Unauthorized') && roleCodes.auth\">\r\n              <button class=\"btn smBtn minWdSmBtn btnAuth\" (click)=\"onclickOfAuth()\" > {{roleCodes.auth.labelDescription}}</button>\r\n            </div>\r\n            <!-- [disabled]=\"authBtn\" [disabled]=\"openBtn\"-->\r\n            <div class=\"col-auto\" *ngIf=\"(fetchUserSingle.recordStatus == 'CLOSE' || fetchUserSingle.recordStatus == 'C' || fetchUserSingle.recordStatus == 'Close')  && (fetchUserSingle.verifiedOnce == 'YES' || fetchUserSingle.verifiedOnce == 'Y' ) && roleCodes.reopen\">\r\n              <button class=\"btn smBtn minWdSmBtn btnPrimary\" (click)=\"onclickOfReopen()\" > {{roleCodes.reopen.labelDescription}}</button>\r\n            </div>\r\n            <div class=\"col-auto\"  *ngIf=\"(fetchUserSingle.recordStatus == 'OPEN' || fetchUserSingle.recordStatus == 'O' || fetchUserSingle.recordStatus == 'Open') && (fetchUserSingle.verifiedOnce == 'YES' || fetchUserSingle.verifiedOnce == 'Y') && roleCodes.close\">\r\n              <button class=\"btn smBtn minWdSmBtn btnPrimary\" (click)=\"onclickOfClose()\" > {{roleCodes.close.labelDescription}}</button>\r\n            </div>\r\n            <div class=\"col-auto\" *ngIf=\"(fetchUserSingle.verifiedOnce == 'NO' || fetchUserSingle.verifiedOnce == 'N' ) && roleCodes.delete\">\r\n              <button class=\"btn smBtn minWdSmBtn btnPrimary\">{{roleCodes.delete.labelDescription}}</button>\r\n            </div>\r\n            <div class=\"col-auto\" *ngIf=\"fetchUserSingle.closureType=='SINGLE'\">\r\n              <button class=\"btn smBtn minWdSmBtn btnPrimary\" (click)=\"onClickOfViewToData()\">View Report</button>\r\n            </div>\r\n            <div class=\"col-auto\" *ngIf=\"fetchUserSingle.closureType=='BULK'\">\r\n              <button type=\"button\"  (click)=\"onClickOfViewToDatabulk()\" class=\"btn smBtn minWdSmBtn btnPrimary\">View Report</button>\r\n            </div>\r\n            <div class=\"col-auto\">\r\n              <button routerLink=\"/initiate-account-closure\" class=\"btn smBtn minWdSmBtn btnSecondary\" >Exit</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </form>\r\n</div>\r\n<br>\r\n\r\n<!-- <div class=\"dbCardStyle\" *ngIf=\"initiateAccClosure.queryParams.accountType!=null\">\r\n\r\n  <div class=\"row\">\r\n    <div class=\"col-sm-6 col-md-4 col-lg-3\">\r\n      <div class=\"csCardStyle\">\r\n        <div class=\"row g-2 align-items-center\">\r\n          <div class=\"col-auto\">\r\n            <div class=\"csCardStyleIcon csCardStyleIconBg1\">\r\n              <i class=\"fa fa-edit faClass\"></i>\r\n            </div>\r\n          </div>\r\n          <div class=\"col\">\r\n            <div class=\"csCardStyleText\">\r\n              <h2>Maker</h2>\r\n              <p>{{fetchUserSingle.makerId}}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-sm-6 col-md-4 col-lg-3\">\r\n      <div class=\"csCardStyle\">\r\n        <div class=\"row g-2 align-items-center\">\r\n          <div class=\"col-auto\">\r\n            <div class=\"csCardStyleIcon csCardStyleIconBg2\">\r\n              <img src=\"assets/images/time-stamp-icon.svg\" alt=\"...\">\r\n            </div>\r\n          </div>\r\n          <div class=\"col\">\r\n            <div class=\"csCardStyleText\">\r\n              <h2>Maker Time Stamp</h2>\r\n              <p>{{fetchUserSingle.makerInputTime | date: 'MM/dd/yyyy, h:mm a'}}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-sm-6 col-md-4 col-lg-3\">\r\n      <div class=\"csCardStyle\">\r\n        <div class=\"row g-2 align-items-center\">\r\n          <div class=\"col-auto\">\r\n            <div class=\"csCardStyleIcon csCardStyleIconBg3\">\r\n              <i class=\"fa fa-files-o faRecordStatus\" aria-hidden=\"true\"></i>\r\n            </div>\r\n          </div>\r\n          <div class=\"col\">\r\n            <div class=\"csCardStyleText\">\r\n              <h2>Record Status</h2>\r\n              <p>{{fetchUserSingle.recordStatus }}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-sm-6 col-md-4 col-lg-3\">\r\n      <div class=\"csCardStyle\">\r\n        <div class=\"row g-2 align-items-center\">\r\n          <div class=\"col-auto\">\r\n            <div class=\"csCardStyleIcon csCardStyleIconBg4\">\r\n            <i class=\"fa fa-check-square-o faClassChecker\"></i>\r\n            </div>\r\n          </div>\r\n          <div class=\"col\">\r\n            <div class=\"csCardStyleText\">\r\n              <h2>Checker</h2>\r\n              <p>{{fetchUserSingle.verifiedBy}}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-sm-6 col-md-4 col-lg-3\">\r\n      <div class=\"csCardStyle\">\r\n        <div class=\"row g-2 align-items-center\">\r\n          <div class=\"col-auto\">\r\n            <div class=\"csCardStyleIcon csCardStyleIconBg5\">\r\n              <img src=\"assets/images/checker-time-icon.svg\" alt=\"...\">\r\n            </div>\r\n          </div>\r\n          <div class=\"col\">\r\n            <div class=\"csCardStyleText\">\r\n              <h2>Checker Time Stamp</h2>\r\n              <p>{{fetchUserSingle.makerInputTime | date: 'MM/dd/yyyy, h:mm a'}}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-sm-6 col-md-4 col-lg-3\">\r\n      <div class=\"csCardStyle\">\r\n        <div class=\"row g-2 align-items-center\">\r\n          <div class=\"col-auto\">\r\n            <div class=\"csCardStyleIcon csCardStyleIconBg6\">\r\n        <i class=\"fa fa-shield faClassFirstTimeAuth\"></i>\r\n            </div>\r\n          </div>\r\n          <div class=\"col\">\r\n            <div class=\"csCardStyleText\">\r\n              <h2>First Time Authorization</h2>\r\n              <p>{{fetchUserSingle.verifiedOnce}}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-sm-6 col-md-4 col-lg-3\">\r\n      <div class=\"csCardStyle\">\r\n        <div class=\"row g-2 align-items-center\">\r\n          <div class=\"col-auto\">\r\n            <div class=\"csCardStyleIcon csCardStyleIconBg7\">\r\n             <img src=\"assets/images/authorize.svg\" alt=\"...\" class=\"modImage\">\r\n            </div>\r\n          </div>\r\n          <div class=\"col\">\r\n            <div class=\"csCardStyleText\">\r\n              <h2>Authorization Status</h2>\r\n              <p>{{fetchUserSingle.verifiedStatus }}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-sm-6 col-md-4 col-lg-3\">\r\n      <div class=\"csCardStyle\">\r\n        <div class=\"row g-2 align-items-center\">\r\n          <div class=\"col-auto\">\r\n            <div class=\"csCardStyleIcon csCardStyleIconBg7\">\r\n              <img src=\"assets/images/first-auth-icon.svg\" alt=\"...\" />\r\n            </div>\r\n          </div>\r\n          <div class=\"col\">\r\n            <div class=\"csCardStyleText\">\r\n              <h2>Modification Number</h2>\r\n              <p></p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div> -->","import { ChangeDetectorRef, Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, NavigationExtras, Router } from '@angular/router';\r\nimport { tr } from 'date-fns/locale';\r\nimport { Ng2IzitoastService } from 'ng2-izitoast';\r\nimport { Observable, of, Subject } from 'rxjs';\r\nimport { CanDeactivateGuard, IDeactivateComponent } from 'src/app/shared/guards/can-deactivate.guard';\r\nimport { FetchUserForSingleAccClosureReqDTO } from 'src/app/shared/models/FetchUserForSingleAccClosureReqDTO';\r\nimport { permissionsLabels } from 'src/app/shared/models/fmosNewRolePermissions';\r\nimport { AccountClosureServiceService } from 'src/app/shared/services/account-closure-service.service';\r\nimport { RoleService } from 'src/app/shared/services/role.service';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'npr-account-closure-details',\r\n  templateUrl: './account-closure-details.component.html',\r\n  styleUrls: ['./account-closure-details.component.scss']\r\n})\r\nexport class AccountClosureDetailsComponent implements OnInit ,IDeactivateComponent{\r\n  singleCall: boolean;\r\n  accountClosureForm: FormGroup;\r\n  sendAccountType: any;\r\n  sendClosureType: any;\r\n  currentFileUpload: any;\r\n  selectedFiles: any;\r\n  showSubmitProgressBar: boolean;\r\n  currentUser: string;\r\n  fetchUserSingle = new FetchUserForSingleAccClosureReqDTO();\r\n  fetch=new FetchUserForSingleAccClosureReqDTO();\r\n  showAuditlog: boolean;\r\n  editFlag: boolean=false;\r\n  id: any;\r\n  data: any;\r\n  selected = 'dormant';\r\n  sizeOfFile: any;\r\n  fileName: any;\r\n  radioSelectred: any;\r\n  accountClosure = new FetchUserForSingleAccClosureReqDTO();\r\n  submitFile: boolean=true;\r\n  enableView: boolean;\r\n  navSubscription: any;\r\n  initiateAccClosure: any;\r\n  bulk: boolean = true;\r\n  roleCodes = new permissionsLabels();\r\n  formTouched: boolean=true;\r\n  accClosureNavObj: string;\r\n  accClosureNavigationObject: any;\r\n  paramScreen: any;\r\n  showDialog = false;\r\n  subject = new Subject<boolean>();\r\n  constructor(private formBuilder: FormBuilder,private cdr: ChangeDetectorRef,private router: Router,private accClosure: AccountClosureServiceService, private canDeactivateGuard: CanDeactivateGuard,\r\n     public iziToast: Ng2IzitoastService, private route: ActivatedRoute,private roleService:RoleService) { }\r\n  modifyScreen: boolean=false;\r\n  ngOnInit(): void {\r\n    this.accClosureNavObj=localStorage.getItem('AccountClosureNavObj');\r\n    this.accClosureNavigationObject = JSON.parse(this.accClosureNavObj); \r\n    this.accClosure.getIndexValue().subscribe(resp=>{\r\n      this.paramScreen=resp;\r\n      if(resp.index === ''){\r\n        this.createAccClosure();\r\n      }\r\n    })\r\n    this.currentUser=localStorage.getItem('currentUser').replace(/['\"]+/g, '');\r\n    this.navSubscription = this.roleService.getNavParam.subscribe(data =>this.initiateAccClosure =data);\r\n \r\n    console.log(this.initiateAccClosure,\"Initiate Account Closure\");\r\n    console.log(this.accClosureNavigationObject,\"accClosureNavigationObject\");\r\n   \r\n      this.fetchUserSingle.id =this.initiateAccClosure.queryParams.id;\r\n      this.fetchUserSingle.modNo = this.initiateAccClosure.queryParams.modNo;\r\n      this.fetchUserSingle.closureType =this.initiateAccClosure.queryParams.closureType;\r\n      this.fetchUserSingle.accountNumber = this.initiateAccClosure.queryParams.accountNumber;\r\n      this.fetchUserSingle.accountType = this.initiateAccClosure.queryParams.accountType;\r\n      this.fetchUserSingle.recordStatus = this.initiateAccClosure.queryParams.recordStatus;\r\n      this.fetchUserSingle.verifiedStatus=this.initiateAccClosure.queryParams.verifiedStatus;\r\n      this.fetchUserSingle.inputBy = this.initiateAccClosure.queryParams.inputBy;\r\n      this.fetchUserSingle.inputTime = this.initiateAccClosure.queryParams.inputTime;\r\n      // this.fetchUserSingle.modNo = params.modNo\r\n      this.fetchUserSingle.verifiedOnce = this.initiateAccClosure.queryParams.verifiedfirst;\r\n      this.fetchUserSingle.verifiedBy = this.initiateAccClosure.queryParams.verifiedBy;\r\n      this.fetchUserSingle.fileName=this.initiateAccClosure.queryParams.fileName;\r\n      this.fetchUserSingle.branchCode=this.initiateAccClosure.queryParams.branch;\r\n      this.fetchUserSingle.reasonForClosure=this.initiateAccClosure.queryParams.reason;\r\n      this.fetchUserSingle.processStatus=this.initiateAccClosure.queryParams.processStatus;\r\n      this.fetchUserSingle.accountLinkageDesc=this.initiateAccClosure.queryParams.Desc;\r\n\r\n      //--------------------------------------------\r\n        this.fetchUserSingle.closeStatusInputBy=this.initiateAccClosure.queryParams.closeStatusInputBy;\r\n        this.fetchUserSingle.closeStatusInputTime=this.initiateAccClosure.queryParams.closeStatusInputTime;\r\n        this.fetchUserSingle.closeStatus=this.initiateAccClosure.queryParams.closeStatus;\r\n        this.fetchUserSingle.icliqAvlBal=this.initiateAccClosure.queryParams.icliqAvlBal;\r\n        this.fetchUserSingle.icliqBalance=this.initiateAccClosure.queryParams.icliqBalance;\r\n        this.fetchUserSingle.icliqStatus=this.initiateAccClosure.queryParams.icliqStatus;\r\n        this.fetchUserSingle.makerId=this.initiateAccClosure.queryParams.makerId;\r\n        this.fetchUserSingle.makerInputTime=this.initiateAccClosure.queryParams.makerInputTime;\r\n        this.fetchUserSingle.accls=this.initiateAccClosure.queryParams.accls;\r\n        this.fetchUserSingle.lastTransactionDetail=this.initiateAccClosure.queryParams.lastTransactionDetail;\r\n        this.fetchUserSingle.blockedAmount=this.initiateAccClosure.queryParams.blockedAmount;\r\n        this.fetchUserSingle.deStatus=this.initiateAccClosure.queryParams.deStatus;\r\n        this.fetchUserSingle.linkedAccounts=this.initiateAccClosure.queryParams.linkedAccounts;\r\n        this.fetchUserSingle.checkerId=this.initiateAccClosure.queryParams.checkerId;\r\n        this.fetchUserSingle.checkerInputTime=this.initiateAccClosure.queryParams.checkerInputTime;\r\n      //--------------------------------------------\r\n      console.log(this.roleCodes);\r\n    if (this.fetchUserSingle.closureType == 'SINGLE') {\r\n      this.data = 'SINGLE';\r\n\r\n   \r\n    } else {\r\n      this.data = 'BULK';\r\n      this.data = this.singleCall;\r\n    }\r\n    this.cdr.markForCheck();\r\n    this.selected = this.fetchUserSingle.accountType;\r\n    this.radioSelectred = this.fetchUserSingle.closureType;\r\n    console.log('inside bulk', this.fetchUserSingle);\r\n   \r\n    this.cdr.markForCheck();\r\n    if(this.fetchUserSingle.closureType == undefined){\r\n      this.buildAccClosureForm(this.fetchUserSingle,false);\r\n    }\r\n   \r\n    if(this.fetchUserSingle.closureType == 'BULK' || this.fetchUserSingle.closureType == 'SINGLE' || this.fetchUserSingle.closureType == undefined){\r\n      if(this.fetchUserSingle.closureType == 'BULK'){\r\n        this.bulk=true;\r\n      }\r\n      if(this.fetchUserSingle.closureType == 'SINGLE'){\r\n        this.bulk=false;\r\n      }\r\n  console.log(\"YJHGJH\")\r\n      this.buildAccClosureForm(this.fetchUserSingle,true);\r\n    }\r\n    console.log(this.initiateAccClosure);\r\n    if((this.initiateAccClosure.queryParams.closureType != 'BULK' || this.initiateAccClosure.queryParams.closureType != 'SINGLE')){\r\n    \r\n      if((JSON.parse(this.accClosureNavObj) != null && this.paramScreen.index != 'new')){\r\n        this.fetchUserSingle=this.accClosureNavigationObject;\r\n        console.log(\"YJHGJH\")\r\n        this.buildAccClosureForm(this.accClosureNavigationObject);\r\n        this.fileName = this.accClosureNavigationObject.fileName;\r\n        this.accountClosureForm.disable();\r\n      }\r\n     } \r\n    this.accountClosureForm.get('closureType').setValue('BULK');\r\n    localStorage.setItem('CLOSURETYPE', this.accountClosureForm.value.closureType);\r\n\r\n    this.roleService.screenLabelList.subscribe(message => this.roleCodes = message);\r\n    setTimeout(() => {\r\n      \r\n    }, 100);\r\n    console.log(this.fetchUserSingle);\r\n    this.auditLog();\r\n  }\r\n  auditLog(){\r\n    if(this.fetchUserSingle.recordStatus=='C' || this.fetchUserSingle.recordStatus=='CLOSE')\r\n    {\r\n      this.fetchUserSingle.recordStatus='CLOSE'\r\n    }\r\n   if(this.fetchUserSingle.recordStatus=='O' || this.fetchUserSingle.recordStatus=='OPEN')\r\n   {\r\n     this.fetchUserSingle.recordStatus='OPEN'\r\n   }\r\n   if(this.fetchUserSingle.verifiedStatus=='U')\r\n   {\r\n     this.fetchUserSingle.verifiedStatus='UNAUTHORIZED'\r\n\r\n   }\r\n   if(this.fetchUserSingle.verifiedOnce=='A')\r\n   {\r\n     this.fetchUserSingle.verifiedOnce='AUTHORIZED'\r\n   }\r\n   if(this.fetchUserSingle.verifiedOnce=='Y')\r\n   {\r\n     this.fetchUserSingle.verifiedOnce='YES'\r\n   }\r\n   if(this.fetchUserSingle.verifiedOnce=='N')\r\n   {\r\n     this.fetchUserSingle.verifiedOnce='NO'\r\n   }\r\n  }\r\n  onClickOfBulk() {\r\n    this.singleCall = false;\r\n    this.accountClosureForm.get('closureType').setValue('BULK');\r\n    localStorage.setItem('CLOSURETYPE', this.accountClosureForm.value.closureType);\r\n  }\r\n  onclickOfSingle() {\r\n    this.singleCall = true;\r\n    this.accountClosureForm.get('closureType').setValue('SINGLE');\r\n    localStorage.setItem('CLOSURETYPE', this.accountClosureForm.value.closureType);\r\n  }\r\n  buildAccClosureForm(data?, isResponse?: boolean){\r\n    console.log(data);\r\n    this.accountClosureForm = this.formBuilder.group({\r\n      closureType: [data.closureType ? data.closureType : '', Validators.required],\r\n      accountType: [data.accountType ? data.accountType : '', Validators.required],\r\n      accountNumber: [data.accountNumber ? data.accountNumber : '', [Validators.required, Validators.pattern('^[0-9 \\-\\']+')]],\r\n      branchCode:[data.branchCode ? data.branchCode : '',[Validators.required, Validators.pattern('^[0-9 \\-\\']+')]],\r\n      reasonForClosure:[data.reasonForClosure ? data.reasonForClosure :'',Validators.required],\r\n    });\r\n  }\r\n  selectFile(event) {\r\n    if(!this.accountClosureForm.get('accountType').value)\r\n    {\r\n      Swal.fire(\r\n        {\r\n          text:\"Please enter Account Type\",\r\n          icon:'error'\r\n        }\r\n     \r\n      \r\n      )}\r\n    else{\r\n    this.selectedFiles = event.target.files;\r\n    this.sizeOfFile = this.selectedFiles.item(0).size;\r\n    this.fileName = this.selectedFiles[0].name;\r\n    // Swal.fire(\r\n    //   {\r\n    //     text:\"File Uploaded Successfully\",\r\n    //     icon:'success'\r\n    //   });\r\n    // this.showProgressBar=true;\r\n    setTimeout(()=>{\r\n      // this.showProgressBar=false;\r\n    },8000)\r\n    \r\n      this.submitFile=false;  \r\n    \r\n \r\n\r\n  }\r\n\r\n  }\r\n  \r\n  onSubmitSingle(data) {\r\n    // this.accountClosure.accountNumber = this.accountClosureForm.get('accountNumber').value;\r\n    // this.accountClosure.accountType = this.accountClosureForm.get('accountType').value;\r\n    // this.accountClosure.branchCode = this.accountClosureForm.get('branchCode').value;\r\n    // this.accountClosure.reasonForClosure = this.accountClosureForm.get('reasonForClosure').value;\r\n    this.fetchUserSingle.inputBy = this.currentUser;\r\n    // this.showProgressBarSingle=true;\r\n   \r\n    this.accClosure.onSingleClosure(this.accountClosureForm.value, this.fetchUserSingle.inputBy).subscribe(singleClosureData => {\r\n  \r\n      if(singleClosureData){\r\n        let responseMsg = singleClosureData.errorDesc;\r\n\r\n        if(responseMsg == 'S'  || responseMsg === \"S\"){\r\n      \r\n          this.fetchUserSingle = singleClosureData;\r\n          this.auditLog();\r\n    \r\n          // if(this.fetchUserSingle.recordStatus=='O')\r\n          // {\r\n          //   this.fetchUserSingle.recordStatus='OPEN'\r\n          // }\r\n          // if(this.fetchUserSingle.verifiedStatus=='U')\r\n          // {\r\n          //   this.fetchUserSingle.verifiedStatus='UNAUTHORIZED'\r\n          // }\r\n          // if(this.fetchUserSingle.verifiedOnce=='N')\r\n          // {\r\n          //   this.fetchUserSingle.verifiedOnce='NO'\r\n          // }\r\n         \r\n          Swal.fire({\r\n            text: \"Record Successfully Uploaded\",\r\n            // type: \"success\"\r\n          })\r\n          this.formTouched=!this.accountClosureForm.touched;\r\n        } else {\r\n          Swal.fire({\r\n            text: responseMsg,\r\n            icon: \"warning\"\r\n          })\r\n         \r\n        }\r\n      }\r\n      else{\r\n        Swal.fire({\r\n          text: \"Server Error\",\r\n          icon: \"error\"\r\n        })\r\n      }\r\n    \r\n\r\n      // this.showProgressBarSingle=false; \r\n    })\r\n  \r\n  \r\n  }\r\n  editValues(){\r\n    this.editFlag=true;\r\n    this.accountClosureForm.enable();\r\n  }\r\n  onClickOfViewToDatabulk()\r\n  {\r\n    // else{\r\n      if(this.fetchUserSingle.closureType=='BULK'){\r\n\r\n        const navigationExtras: NavigationExtras = {\r\n          queryParams: {\r\n       \r\n            'closureTypeViewBulk':this.fetchUserSingle.closureType,\r\n            'fileName':this.fetchUserSingle.fileName,\r\n            'accountTypeBulk':this.fetchUserSingle.accountType,\r\n            'record':this.fetchUserSingle.recordStatus,\r\n            'authorizer':this.fetchUserSingle.verifiedBy,\r\n            'authFirsTime':this.fetchUserSingle.verifiedOnce,\r\n            'authStatus':this.fetchUserSingle.verifiedStatus,\r\n            'authDate':this.fetchUserSingle.verifiedTime,\r\n            'creator':this.fetchUserSingle.inputBy,\r\n            'creatorDate':this.fetchUserSingle.inputTime,\r\n            'modficationNo':this.fetchUserSingle.modNo,\r\n            'processStatus':this.fetchUserSingle.processStatus,\r\n            'Desc':this.fetchUserSingle.accountLinkageDesc,\r\n            'closeStatusInputBy':this.fetchUserSingle.closeStatusInputBy,\r\n            'closeStatusInputTime':this.fetchUserSingle.closeStatusInputTime,\r\n            'closeStatus':this.fetchUserSingle.closeStatus,\r\n            'icliqAvlBal':this.fetchUserSingle.icliqAvlBal,\r\n            'icliqBalance':this.fetchUserSingle.icliqBalance,\r\n            'icliqStatus':this.fetchUserSingle.icliqStatus,\r\n            'makerId':this.fetchUserSingle.makerId,\r\n            'makerInputTime':this.fetchUserSingle.makerInputTime,\r\n            'accls':this.fetchUserSingle.accls,\r\n            'lastTransactionDetail':this.fetchUserSingle.lastTransactionDetail,\r\n            'blockedAmount':this.fetchUserSingle.blockedAmount,\r\n            'deStatus':this.fetchUserSingle.deStatus,\r\n            'linkedAccounts':this.fetchUserSingle.linkedAccounts,\r\n            'checkerId':this.fetchUserSingle.checkerId,\r\n            'checkerInputTime':this.fetchUserSingle.checkerInputTime,\r\n            //----------------------------------\r\n\r\n\r\n          }\r\n          \r\n        };\r\n\r\n        this.accClosure.sendNavParam(navigationExtras);\r\n    this.router.navigate(['initiate-account-closure/viewReport']);\r\n        // this.router.navigate(['account-closure/viewReportOfAccountClosure'],navigationExtras);\r\n  }\r\n\r\n     \r\n    \r\n  }\r\n  \r\n  onClickOfViewToData()\r\n  {\r\n    localStorage.setItem(\"accountTypeForProcess\",this.fetchUserSingle.accountType);\r\n    localStorage.setItem(\"closureTypeForBulk\",this.fetchUserSingle.closureType);\r\n\r\n    if(this.fetchUserSingle.closureType==\"SINGLE\")\r\n    {\r\n    \r\n    this.accClosure.onViewOfSingleClsureType(this.fetchUserSingle.accountType,this.fetchUserSingle.closureType,this.fetchUserSingle.accountNumber).subscribe(viewReportOfSingleResp=>{\r\n    \r\n      this.fetch=viewReportOfSingleResp;\r\n    \r\n     \r\n      const navigationExtras: NavigationExtras = {\r\n        queryParams: {\r\n     \r\n          'closureTypeView':this.fetch.closureType,\r\n          'accountNumberView':this.fetch.accountNumber,\r\n          'accountTypeview':this.fetch.accountType,\r\n          'creator':this.fetch.inputBy,\r\n          'record':this.fetch.recordStatus,\r\n          'authStatus':this.fetch.verifiedStatus,\r\n          'modficationNo':this.fetch.modNo,\r\n          'creatorDate':this.fetch.inputTime,\r\n          'authDate':this.fetch.verifiedTime,\r\n          'authFirsTime':this.fetch.verifiedOnce,\r\n          'authorizer':this.fetch.verifiedBy,\r\n          'acyCurrBalance':this.fetch.acyCurrBalance,\r\n          'frozenView':this.fetch.frozen,\r\n          'branchCode':this.fetch.branchCode,\r\n          'dorm':this.fetch.dorm,\r\n          'lcyCurrBalance':this.fetch.lcyCurrBalance,\r\n          'acSatNoCr':this.fetch.acSatNoCr,\r\n          'acyAvlBal':this.fetch.acyAvlBal,\r\n          'fileName':this.fetch.fileName,\r\n          'accStatus':this.fetch.accountStatus,\r\n          'flexRecord':this.fetch.recordStatusFromFlexCube,\r\n          'custId':this.fetch.customerId,\r\n          'valueDate':this.fetch.valueDate,\r\n          'debit':this.fetch.acStatNoDr,\r\n          'file':this.fetch.fileName,\r\n          'processStatus':this.fetch.processStatus,\r\n          'Desc':this.fetch.accountLinkageDesc,\r\n          'closeStatusInputBy':this.fetch.closeStatusInputBy,\r\n            'closeStatusInputTime':this.fetch.closeStatusInputTime,\r\n            'closeStatus':this.fetch.closeStatus,\r\n            'icliqAvlBal':this.fetch.icliqAvlBal,\r\n            'icliqBalance':this.fetch.icliqBalance,\r\n            'icliqStatus':this.fetch.icliqStatus,\r\n            'makerId':this.fetch.makerId,\r\n            'makerInputTime':this.fetch.makerInputTime,\r\n            'accls':this.fetch.accls,\r\n            'lastTransactionDetail':this.fetch.lastTransactionDetail,\r\n            'blockedAmount':this.fetch.blockedAmount,\r\n            'deStatus':this.fetch.deStatus,\r\n            'linkedAccounts':this.fetch.linkedAccounts,\r\n            'checkerId':this.fetch.checkerId,\r\n            'checkerInputTime':this.fetch.checkerInputTime,\r\n          //------------------------------\r\n        }\r\n       \r\n      };\r\n    \r\n      // console.log(\"edit data\",this.fetch);\r\n      // localStorage.setItem('singledta',JSON.stringify(this.fetch));\r\n      // this.router.navigate(['account-closure/viewReportOfAccountClosure']);\r\n      this.router.navigate(['initiate-account-closure/viewReport']);\r\n  }\r\n    )};\r\n  }\r\n  onSubmitFile() {\r\n    \r\n   \r\n\r\n      this.accountClosureForm.get('closureType').setValue('BULK');\r\n    console.log(this.accountClosureForm.value);\r\n    console.log(this.accountClosureForm.controls.accountType.value)\r\n    this.sendAccountType=this.accountClosureForm.controls.accountType.value\r\n    console.log(this.accountClosureForm.controls.closureType.value)\r\n    this.sendClosureType=this.accountClosureForm.controls.closureType.value\r\n     this.currentFileUpload = this.selectedFiles.item(0);\r\n \r\n    this.showSubmitProgressBar=true;\r\n    if(!this.sendAccountType)\r\n    {\r\n      Swal.fire(\r\n        {\r\n          text:\"AccountType is Mandatory\",\r\n          icon:'warning'\r\n        }\r\n      );\r\n      // this.iziToast.show({\r\n      //   message: `AccountType is Mandatory`,\r\n      //   image: \"assets/images/user.png\",\r\n      //   icon: 'ico ico-success',\r\n      //   theme:\"dark\",\r\n      //   layout: 2,\r\n      //   // imageWidth:50,\r\n      //   balloon: false,\r\n      //   position: \"topRight\",\r\n      //   progressBarColor: \"red\",\r\n      //   pauseOnHover: true,\r\n      // });\r\n      this.showSubmitProgressBar=false;\r\n    }\r\n   else{\r\n    this.accClosure.onFileUpload(this.currentFileUpload,this.sendAccountType,this.sendClosureType,this.currentUser).subscribe(fileResp => {\r\n      // ------------For upload Percentage------------\r\n      // if (fileResp.type === HttpEventType.UploadProgress) {\r\n      //   this.percentDone = Math.round(100 * fileResp.loaded / fileResp.total);\r\n      // } else if (event instanceof HttpResponse) {\r\n      //   this.uploadSuccess = true;\r\n      // }\r\n      if(fileResp){\r\n   \r\n      \r\n      this.fetchUserSingle=fileResp;\r\n      console.log(this.fetchUserSingle)\r\n      if(this.fetchUserSingle.errorDesc == 'S')\r\n      {\r\n        this.enableView=true;\r\n        this.submitFile=true;\r\n        // this.iziToast.show({\r\n        //   message: `File uploaded sucessfully`,\r\n        //   image: \"assets/images/user.png\",\r\n        //   icon: 'ico ico-success',\r\n        //   theme:\"dark\",\r\n        //   layout: 2,\r\n        //   // imageWidth:50,\r\n        //   balloon: false,\r\n        //   position: \"topRight\",\r\n        //   progressBarColor: \"green\",\r\n        //   pauseOnHover: true,\r\n        // });\r\n        Swal.fire(\r\n          {\r\n            text:\"File uploaded sucessfully\",\r\n            icon:'success'\r\n        });\r\n        this.formTouched=!this.accountClosureForm.touched;\r\n        this.showSubmitProgressBar=false;\r\n        this.showAuditlog=true;\r\n      }\r\n      else{\r\n        \r\n        this.accountClosureForm.get('accountType').setValue(this.sendAccountType)\r\n        Swal.fire(\r\n          {\r\n            text:this.fetchUserSingle.errorDesc,\r\n            icon:'error'\r\n          }\r\n        );\r\n        // this.iziToast.show({\r\n        //   message: this.fetchUserSingle.errorDesc,\r\n        //   image: \"assets/images/user.png\",\r\n        //   icon: 'ico ico-error',\r\n        //   theme:\"dark\",\r\n        //   layout: 2,\r\n        //   // imageWidth:50,\r\n        //   balloon: false,\r\n        //   position: \"topRight\",\r\n        //   progressBarColor: \"red\",\r\n        //   pauseOnHover: true,\r\n        // });\r\n        this.showSubmitProgressBar=false;\r\n      }\r\n      }\r\n      else{\r\n        Swal.fire({\r\n          text:\"Server Error\",\r\n          icon:\"error\"\r\n        })\r\n      }\r\n    })\r\n  }\r\n  }\r\n\r\n \r\n  canExit() : Promise<boolean> {\r\n    let isExit :boolean = false;\r\n    if (this.accountClosureForm.touched && this.formTouched==true) {\r\n    return Swal.fire({ \r\n      text: 'There are unsaved changes in the screen. Would you like to navigate to other screen?',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#E6224A',\r\n      cancelButtonColor: '#011945',\r\n      cancelButtonText: 'NO',\r\n      confirmButtonText: 'YES',\r\n      icon: 'info',\r\n    }).then((result) => {\r\n      if (result.isConfirmed === true) {\r\n        isExit=true;\r\n        this.cdr.markForCheck();\r\n           return isExit;\r\n      }\r\n      else{\r\n        isExit=false;\r\n        this.cdr.markForCheck();\r\n        return isExit;\r\n      }\r\n    \r\n    });\r\n  }\r\n else{\r\n  isExit=true;\r\n  return new Promise((resolve, reject) => {\r\n    if (isExit === true) {\r\n      isExit=true;\r\n      this.cdr.markForCheck();\r\n      resolve(true);\r\n    }\r\n  \r\n  })\r\n }\r\n    }\r\n \r\n  generateExcel() {\r\n    this.router.navigate(['initiate-account-closure/viewReport']);\r\n    // this.accClosure.generateExcel(this.excel);\r\n    // else{\r\n      if(this.fetchUserSingle.closureType=='BULK'){\r\n        console.log(\"insdie bulk\",this.fetchUserSingle);\r\n        console.log(\"accont Type\",this.fetchUserSingle.accountType);\r\n        console.log(\"closure Tpye\",this.fetchUserSingle.closureType);\r\n        console.log(\"finle Name\",this.fetchUserSingle.fileName);\r\n\r\n        const navigationExtras: NavigationExtras = {\r\n          queryParams: {\r\n       \r\n            closureTypeViewBulk:this.fetchUserSingle.closureType,\r\n            fileNmaeBulk:this.fetchUserSingle.fileName,\r\n            accountTypeBulk:this.fetchUserSingle.accountType,\r\n            record:this.fetchUserSingle.recordStatus,\r\n            authorizer:this.fetchUserSingle.verifiedBy,\r\n            authFirsTime:this.fetchUserSingle.verifiedOnce,\r\n            authStatus:this.fetchUserSingle.verifiedStatus,\r\n            authDate:this.fetchUserSingle.verifiedTime,\r\n            creator:this.fetchUserSingle.inputBy,\r\n            creatorDate:this.fetchUserSingle.inputTime,\r\n            modficationNo:this.fetchUserSingle.modNo,\r\n            processStatus:this.fetchUserSingle.processStatus\r\n          \r\n\r\n\r\n          }\r\n          \r\n        };\r\n      \r\n        this.router.navigate(['initiate-account-closure/viewReport'],navigationExtras);\r\n  }\r\n\r\n     \r\n    \r\n  \r\n  }\r\n  onSubmitOfSingleClosure() {\r\n    // this.editFalg=false;\r\n   \r\n    this.accClosure.submiitingSingleClosureRecordAfterEdit(this.fetchUserSingle,this.currentUser,this.fetchUserSingle.id).subscribe(backendResp => {\r\n      console.log(backendResp.errorDesc);\r\n      this.fetchUserSingle=backendResp;\r\n    \r\n\r\n      /****if bckend Resp.closeCustAcErrorDesc == 's' print success else direct print the backend response*/\r\n      if(this.fetchUserSingle.errorDesc == 'S'){\r\n        Swal.fire({\r\n          title:'Record successfuly modified and uploaded',\r\n          // type:'success'\r\n        })\r\n\r\n\r\n      }else{\r\n        /** */\r\n        let responseMsg = backendResp.errorDesc\r\n        Swal.fire({\r\n          title:responseMsg,\r\n          icon:'warning'\r\n        })\r\n      }\r\n\r\n     \r\n      this.cdr.markForCheck();\r\n    })\r\n\r\n  }\r\n  onclickOfAuth() {\r\n    console.log(\"this is auth\");\r\n    console.log(this.fetchUserSingle.accountNumber);\r\n   \r\n    this.accClosure.onAuthorizingTheRecord(this.fetchUserSingle.accountNumber,this.currentUser).subscribe(authResp=>{\r\n      console.log(authResp);\r\n      \r\n      if(!authResp)\r\n      {\r\n        Swal.fire({\r\n                title: 'Authorization Failed',\r\n             \r\n                icon: 'warning',\r\n              });\r\n      }\r\n      else{\r\n        Swal.fire({\r\n          title: 'Record is Authorized',\r\n    \r\n          // type: 'success',\r\n        });\r\n        }\r\n  });\r\n  }\r\n  onclickOfClose() {\r\n    console.log(\"this is close\");\r\n    this.accClosure.onClosingTheRecord(this.fetchUserSingle.accountNumber,this.currentUser).subscribe(recordStatusResp=>{\r\n      console.log(recordStatusResp);\r\n      this.fetchUserSingle=recordStatusResp;\r\n      this.auditLog();\r\n      // if(this.fetchUserSingle.recordStatus=='C')\r\n      // {\r\n      //   this.fetchUserSingle.recordStatus='CLOSE'\r\n      // }\r\n      // if(this.fetchUserSingle.recordStatus=='O')\r\n      // {\r\n      //   this.fetchUserSingle.recordStatus='OPEN'\r\n      // }\r\n      // if(this.fetchUserSingle.verifiedStatus=='A')\r\n      // {\r\n      //   this.fetchUserSingle.verifiedStatus='AUTHORIZED'\r\n      // }\r\n      // if(this.fetchUserSingle.verifiedStatus=='U')\r\n      // {\r\n      //   this.fetchUserSingle.verifiedStatus='UNAUTHORIZED'\r\n      // }\r\n      // if(this.fetchUserSingle.verifiedOnce=='Y')\r\n      // {\r\n      //   this.fetchUserSingle.verifiedOnce='YES'\r\n      // }\r\n      // if(this.fetchUserSingle.verifiedOnce=='N')\r\n      // {\r\n      //   this.fetchUserSingle.verifiedOnce='NO'\r\n      // }\r\n    })\r\n  }\r\n  onclickOfReopen() {\r\n    console.log(\"this is reopen\");\r\n    this.accClosure.onReopningTheRecord(this.fetchUserSingle.accountNumber,this.currentUser).subscribe(openResp=>{\r\n      console.log(openResp);\r\n      this.fetchUserSingle=openResp;\r\n      if(this.fetchUserSingle.recordStatus=='C')\r\n      {\r\n        this.fetchUserSingle.recordStatus='CLOSE'\r\n      }\r\n      if(this.fetchUserSingle.recordStatus=='O')\r\n      {\r\n        this.fetchUserSingle.recordStatus='OPEN'\r\n      }\r\n    })\r\n  }\r\n  createAccClosure(){\r\n  \r\n    const navigationExtras: NavigationExtras = {\r\n      queryParams: {}\r\n    }\r\n\r\n    \r\n    this.roleService.sendNavParam(navigationExtras);\r\n    \r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { CanDeactivateGuard } from 'src/app/shared/guards/can-deactivate.guard';\r\nimport { AccountClosureDetailsComponent } from './account-closure-details/account-closure-details.component';\r\nimport { InitiateAccountClosureComponent } from './initiate-account-closure/initiate-account-closure.component';\r\nimport { ViewReportAccClosureComponent } from './view-report-acc-closure/view-report-acc-closure.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path:\"\",\r\n    component:InitiateAccountClosureComponent\r\n  },\r\n  {\r\n    path:\"create\",\r\n    component:AccountClosureDetailsComponent,\r\n    canDeactivate: [CanDeactivateGuard]\r\n  },\r\n  {\r\n    path:\"viewReport\",\r\n    component:ViewReportAccClosureComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class InitiateAccountClosureRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { InitiateAccountClosureRoutingModule } from './initiate-account-closure-routing.module';\r\nimport { InitiateAccountClosureComponent } from './initiate-account-closure/initiate-account-closure.component';\r\nimport { AccountClosureDetailsComponent } from './account-closure-details/account-closure-details.component';\r\nimport { DataTablesModule } from 'angular-datatables';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { ViewReportAccClosureComponent } from './view-report-acc-closure/view-report-acc-closure.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    InitiateAccountClosureComponent,\r\n    AccountClosureDetailsComponent,\r\n    ViewReportAccClosureComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    InitiateAccountClosureRoutingModule,\r\n    DataTablesModule,\r\n    ReactiveFormsModule\r\n  ]\r\n})\r\nexport class InitiateAccountClosureModule { }\r\n","<div class=\"pageContentMain\">\r\n  <div class=\"pageTitleCol\">\r\n    <h2 class=\"pageTitle\">Initiate Account Closure </h2>\r\n  </div>\r\n  <div class=\"dbCardStyle\">\r\n    <div class=\"row g-3 pb-3 justify-content-end\">\r\n      <div class=\"col-auto\" *ngIf=\"roleCodes.new\">\r\n        <a (click)=\"createAccClosure()\" class=\"btn smBtn minWdSmBtn btnPrimary\">{{roleCodes.new.labelDescription}}</a>\r\n      </div>\r\n      <div class=\"col-auto\">\r\n        <a [routerLink]=\"[ '/dashboard' ]\" class=\"btn smBtn minWdSmBtn btnSecondary\">Exit</a>\r\n      </div>\r\n    </div>\r\n    <div class=\"table-responsive\">\r\n    <table datatable [dtOptions]=\"dtOptions\" [dtTrigger]=\"dtTrigger\"\r\n     class=\"dataTable table tableStyle  nowrap vAlignMdl\" style=\"width:100%\">\r\n    <!-- <table id=\"dbTable1\" datatable class=\"dataTable table tableStyle responsive nowrap\" style=\"width:100%\"> -->\r\n      <thead>\r\n        <tr>\r\n          <th>closure type</th>\r\n          <th>account type</th>\r\n          <th>status</th>\r\n          <th>maker id</th>\r\n          <th>auth status</th>\r\n          <th>record status</th>\r\n          <th>date</th>\r\n          <th>action</th>\r\n\r\n          \r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <!-- <tr> -->\r\n        <tr *ngFor=\"let users of summaryDetails\">\r\n          <td>\r\n            <a routerLink=\"/initiate-account-closure/create/{{users.closureType}}\" (click)=\"getDataFromSummary(users)\" class=\"primaryColor\">{{users.closureType}}</a></td>\r\n          <td>{{users.accountType}}</td>\r\n          <td>{{users.status}}</td>\r\n          <td>{{users.makerId}}</td>\r\n          <td>{{users.verifiedStatus}}</td>\r\n          <td>{{users.recordStatus}}</td>\r\n          <td>{{users.inputTime | date:'medium'}}</td>\r\n          <td>\r\n            <button  class=\"btn\" style=\"color: red\" title=\"Authorize\"\r\n            [disabled]=\"!(users.verifiedStatus== 'U' || users.verifiedStatus== 'UNAUTHORIZED'||users.verifiedStatus == 'Unauthorized')\" \r\n            (click)=\"auth(users)\">\r\n             \r\n             <img class=\"summaryIcon\" src=\"assets/images/authorize.svg\" alt=\"Authorize\">\r\n           </button>\r\n           <button class=\"btn\" style=\"color: red\" title=\"Close\"\r\n            *ngIf=\"(users.recordStatus== 'O' || users.recordStatus== 'Open' || users.recordStatus== 'OPEN') && (users.verifiedOnce== 'Y' || users.verifiedOnce== 'YES')\"\r\n             (click)=\"close(users)\">\r\n             \r\n             <img class=\"summaryIcon\" src=\"assets/images/CROSS1.svg\"   alt=\"...\">\r\n           </button>\r\n\r\n           <button class=\"btn\" style=\"color: red\" title=\"Reopen\" \r\n           *ngIf=\"(users.recordStatus == 'CLOSED' ||users.recordStatus == 'Close'|| users.recordStatus == 'C') &&(users.verifiedOnce == 'YES' || users.verifiedOnce == 'Y')\" \r\n           (click)=\"open(users)\">\r\n\r\n             \r\n             <img class=\"summaryIcon\" src=\"assets/images/open.svg\"  alt=\"...\">\r\n           </button>\r\n           <button class=\"btn\" style=\"color: red\" title=\"Delete\" *ngIf=\"users.verifiedOnce== 'N' || users.verifiedOnce== 'NO'\" (click)=\"delete(users)\">\r\n             \r\n             <img class=\"summaryIcon\" src=\"assets/images/delete.svg\" alt=\"...\">\r\n           </button>\r\n          </td>\r\n         \r\n        </tr>\r\n \r\n      </tbody>\r\n    </table>\r\n  </div>\r\n  </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { NavigationExtras, Router } from '@angular/router';\r\nimport { Subject } from 'rxjs';\r\nimport { permissionsLabels } from 'src/app/shared/models/fmosNewRolePermissions';\r\nimport { AccountClosureServiceService } from 'src/app/shared/services/account-closure-service.service';\r\nimport { RoleService } from 'src/app/shared/services/role.service';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'npr-initiate-account-closure',\r\n  templateUrl: './initiate-account-closure.component.html',\r\n  styleUrls: ['./initiate-account-closure.component.scss']\r\n})\r\nexport class InitiateAccountClosureComponent implements OnInit {\r\n  currentUser: string;\r\n  summaryDetails: Object;\r\n  dtOptions: DataTables.Settings = {};\r\n  roleCodes = new permissionsLabels();\r\n  // this.dtOptions = {};\r\n  dtTrigger: Subject<any> = new Subject<any>();\r\n  fileName: any;\r\n  viewAccountType: any;\r\n  SummaryData:any;\r\n  statusArr: String[] = ['Authorized', 'Unauthorized', 'Open', 'Close'];\r\n  fetchUserSingle: any;\r\n  constructor(private accClosureServiceSum: AccountClosureServiceService,\r\n    private roleService:RoleService,private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n    setTimeout(() => {\r\n      this.newRolePermissions();\r\n    }, 2000);\r\n    this.dtOptions = {\r\n      pagingType: 'full_numbers',\r\n      pageLength : 5,\r\n      columnDefs: [ { type: 'date', 'targets': [6] } ],\r\n      order: [[6, 'desc']],\r\n      processing: true,\r\n      lengthMenu: [\r\n        [5, 10, 20, 30,-1],\r\n        [5, 10, 20, 30,\"ALL\"],\r\n      ],\r\n    };\r\n    this.currentUser=localStorage.getItem('currentUser').replace(/['\"]+/g, '');\r\n    this.gettingAccClosureSummary(this.currentUser);\r\n    this.roleService.fetchScreenPermissions('Initiate Account Closure');\r\n    this.roleService.screenLabelList.subscribe(message => this.roleCodes = message);\r\n    console.log(this.roleCodes);\r\n  }\r\n  createAccClosure(){\r\n    this.router.navigate(['/initiate-account-closure/create']);\r\n    const navigationExtras: NavigationExtras = {\r\n      queryParams: {}\r\n    }\r\n\r\n    \r\n    this.roleService.sendNavParam(navigationExtras);\r\n    this.accClosureServiceSum.setIndexValue({\r\n      index: \"new\",\r\n    });\r\n  }\r\n  getDataFromSummary(row) {\r\n    console.log(\"this is row\", row)\r\n   this.fileName= row.fileName;\r\n   localStorage.setItem(\"fileName\",this.fileName);\r\n   this.viewAccountType=row.accountType;\r\n   localStorage.setItem(\"typeOfAccount\",this.viewAccountType)\r\n\r\n\r\n  //  if(row.closureType==\"SINGLE\")\r\n  //  {\r\n     \r\n  //  }\r\n    const navigationExtras: NavigationExtras = {\r\n      queryParams: {\r\n        modifyNo:row.modNo,\r\n        closureType:row.closureType,\r\n        accountNumber:row.accountNumber,\r\n        accountType:row.accountType,\r\n        recordStatus:row.recordStatus,\r\n        verifiedStatus:row.verifiedStatus,\r\n        inputBy:row.inputBy,\r\n        inputTime:row.inputTime,\r\n        modNo:row.modNo,\r\n        authorizedTime:row.authorizedTime,\r\n        verifiedfirst:row.verifiedOnce,\r\n        verifiedBy:row.verifiedBy,\r\n        fileName:row.fileName,\r\n        branch:row.branchCode,\r\n        reason:row.reasonForClosure,\r\n        id:row.id,\r\n        processStatus:row.processStatus,\r\n        Desc:row.accountLinkageDesc,\r\n        //-----------------------------------------\r\n        closeStatusInputBy:row.closeStatusInputBy,\r\n        closeStatusInputTime:row.closeStatusInputTime,\r\n        closeStatus:row.closeStatus,\r\n        icliqAvlBal:row.icliqAvlBal,\r\n        icliqBalance:row.icliqBalance,\r\n        icliqStatus:row.icliqStatus,\r\n        makerId:row.makerId,\r\n        makerInputTime:row.makerInputTime,\r\n        accls:row.accls,\r\n        lastTransactionDetail:row.lastTransactionDetail,\r\n        blockedAmount:row.blockedAmount,\r\n        deStatus:row.deStatus,\r\n        linkedAccounts:row.linkedAccounts,\r\n        checkerId:row.checkerId,\r\n        checkerInputTime:row.checkerInputTime,\r\n        //-------------------------------------\r\n      }\r\n      \r\n    };\r\n   \r\n    console.log('navigationExtras', navigationExtras);\r\n    localStorage.setItem('AccountClosureNavObj',JSON.stringify(row))\r\n    this.roleService.sendNavParam(navigationExtras);\r\n    this.router.navigate(['/initiate-account-closure/create']);\r\n    this.accClosureServiceSum.setIndexValue({\r\n      index: \"edit\",\r\n    });\r\n  }\r\n  newRolePermissions()\r\n  {\r\n    this.roleService.fetchScreenPermissions('Initiate Account Closure');\r\n  }\r\n\r\n  gettingAccClosureSummary(currentUser) {\r\n    console.log(\"this account closure Summary\");\r\n    this.accClosureServiceSum.gettingAccountClosureSummary(currentUser).subscribe(backendResp => {\r\n      console.log(backendResp);\r\n      this.SummaryData=backendResp;\r\n      \r\n      for (let users of this.SummaryData ) {\r\n        users.verifiedStatus = this.statusArr.find((i) =>\r\n          i.startsWith(users.verifiedStatus)\r\n        );\r\n\r\n        users.recordStatus = this.statusArr.find((i) =>\r\n          i.startsWith(users.recordStatus)\r\n        );\r\n      }\r\n      this.summaryDetails = backendResp;\r\n      this.dtTrigger.next();\r\n      // this.dataSource = new MatTableDataSource<FetchUserForSingleAccClosureReqDTO>(this.summaryDetails);\r\n      // this.dataSource.paginator = this.paginator.toArray()[0];;\r\n      // console.log(this.summaryDetails);\r\n    })\r\n\r\n  }\r\n  auth(users){\r\n    console.log(users);\r\n    console.log(\"this is auth\");\r\n    console.log(users.accountNumber)\r\n    \r\n    this.accClosureServiceSum.onAuthorizingTheRecord(users.accountNumber,this.currentUser).subscribe(authResp=>{\r\n      console.log(authResp);\r\n      if(!authResp)\r\n      {\r\n        Swal.fire({\r\n                title: 'Authorization Failed',\r\n             \r\n                icon: 'warning',\r\n              });\r\n      }\r\n      else{\r\n        Swal.fire({\r\n          title: 'Record is Authorized',\r\n    \r\n          // type: 'success',\r\n        }).then(() => window.location.reload());\r\n        }\r\n  });\r\n\r\n  }\r\n  open(users){\r\n    console.log(\"this is reopen\");\r\n    this.accClosureServiceSum.onReopningTheRecord(this.fetchUserSingle.accountNumber,this.currentUser).subscribe(openResp=>{\r\n      console.log(openResp);\r\n      this.fetchUserSingle=openResp;\r\n      if(this.fetchUserSingle.recordStatus=='C')\r\n      {\r\n        this.fetchUserSingle.recordStatus='CLOSE'\r\n      }\r\n      if(this.fetchUserSingle.recordStatus=='O')\r\n      {\r\n        this.fetchUserSingle.recordStatus='OPEN'\r\n      }\r\n    })\r\n\r\n  }\r\n  close(users){\r\n    console.log(\"this is close\");\r\n    this.accClosureServiceSum.onClosingTheRecord(users.accountNumber,this.currentUser).subscribe(recordStatusResp=>{\r\n      console.log(recordStatusResp);\r\n      this.fetchUserSingle=recordStatusResp;\r\n      this.auditLog();\r\n      // if(this.fetchUserSingle.recordStatus=='C')\r\n      // {\r\n      //   this.fetchUserSingle.recordStatus='CLOSE'\r\n      // }\r\n      // if(this.fetchUserSingle.recordStatus=='O')\r\n      // {\r\n      //   this.fetchUserSingle.recordStatus='OPEN'\r\n      // }\r\n      // if(this.fetchUserSingle.verifiedStatus=='A')\r\n      // {\r\n      //   this.fetchUserSingle.verifiedStatus='AUTHORIZED'\r\n      // }\r\n      // if(this.fetchUserSingle.verifiedStatus=='U')\r\n      // {\r\n      //   this.fetchUserSingle.verifiedStatus='UNAUTHORIZED'\r\n      // }\r\n      // if(this.fetchUserSingle.verifiedOnce=='Y')\r\n      // {\r\n      //   this.fetchUserSingle.verifiedOnce='YES'\r\n      // }\r\n      // if(this.fetchUserSingle.verifiedOnce=='N')\r\n      // {\r\n      //   this.fetchUserSingle.verifiedOnce='NO'\r\n      // }\r\n    })\r\n\r\n  }\r\n  delete(users){\r\n\r\n  }\r\n  auditLog(){\r\n    if(this.fetchUserSingle.recordStatus=='C' || this.fetchUserSingle.recordStatus=='CLOSE')\r\n    {\r\n      this.fetchUserSingle.recordStatus='CLOSE'\r\n    }\r\n   if(this.fetchUserSingle.recordStatus=='O' || this.fetchUserSingle.recordStatus=='OPEN')\r\n   {\r\n     this.fetchUserSingle.recordStatus='OPEN'\r\n   }\r\n   if(this.fetchUserSingle.verifiedStatus=='U')\r\n   {\r\n     this.fetchUserSingle.verifiedStatus='UNAUTHORIZED'\r\n\r\n   }\r\n   if(this.fetchUserSingle.verifiedOnce=='A')\r\n   {\r\n     this.fetchUserSingle.verifiedOnce='AUTHORIZED'\r\n   }\r\n   if(this.fetchUserSingle.verifiedOnce=='Y')\r\n   {\r\n     this.fetchUserSingle.verifiedOnce='YES'\r\n   }\r\n   if(this.fetchUserSingle.verifiedOnce=='N')\r\n   {\r\n     this.fetchUserSingle.verifiedOnce='NO'\r\n   }\r\n  }\r\n \r\n \r\n}\r\n","<div class=\"pageContentMain\">\r\n    <div class=\"pageTitleCol\">\r\n      <h2 class=\"pageTitle\">View Report</h2>\r\n    </div>\r\n    <form action=\"\" class=\"formStyle\">\r\n      <div class=\"dbCardStyle cardWidth\" *ngIf=\"fetchUserSingle.closureType!='SINGLE'\">\r\n        <div class=\"col-12\">\r\n            <label for=\"roleName\" class=\"formLbl\">Export As</label>\r\n            <select class=\"form-select\"  aria-label=\"Default select example\" (change)=\"modo($event.target.value)\">\r\n              <option value=\"Excel\">Excel</option>\r\n              <option value=\"PDF\">PDF</option>\r\n            </select>\r\n          \r\n          </div>\r\n          <div class=\"col-12\" >\r\n            <div class=\"row g-3 pb-3 justify-content-center pt-3\">\r\n              <div class=\"col-auto\" *ngIf=\"closureTypes=='BULK'\">\r\n                <button type=\"button\" (click)=\"onProcessingTheBulkAccount()\" class=\"btn smBtn minWdSmBtn btnPrimary\">Process</button>\r\n              </div>\r\n              <div class=\"col-auto\" *ngIf=\"closureTypes=='SINGLE'\">\r\n                <button type=\"button\" (click)=\"onProcessingTheSingleAccount()\" class=\"btn smBtn minWdSmBtn btnPrimary\">Process</button>\r\n              </div>\r\n              <div class=\"col-auto\">\r\n                <a (click)=\"onCancelingTheRecord()\" class=\"btn smBtn minWdSmBtn btnPrimary\" >Delete</a>\r\n              </div>\r\n              <div class=\"col-auto\">\r\n                <button routerLink=\"/initiate-account-closure\" class=\"btn smBtn minWdSmBtn btnSecondary\">Exit</button>\r\n              </div>\r\n             \r\n            </div>\r\n          </div>\r\n      </div>\r\n\r\n      <div class=\"dbCardStyle\" *ngIf=\"fetchUserSingle.closureType=='SINGLE'\">\r\n        <div class=\"row g-3 pb-3 justify-content-end\">\r\n\r\n        <table datatable [dtOptions]=\"dtOptions\" [dtTrigger]=\"dtTrigger\"\r\n        class=\"dataTable table tableStyle responsive nowrap\" style=\"width:100%\">\r\n         <thead>\r\n           <tr>\r\n            <th>Account Type</th>\r\n            <th>Closure Type</th>\r\n            <th>Branch Code</th>\r\n           <th>Account Number</th>\r\n           </tr>\r\n         </thead>\r\n         <tbody>\r\n            <tr>\r\n                <td>{{fetchUserSingle.accountType}}</td>\r\n                <td>{{fetchUserSingle.closureType}}</td>\r\n                <td>{{fetchUserSingle.branchCode}}</td>\r\n                <td>{{fetchUserSingle.accountNumber}}</td>\r\n                </tr>\r\n         </tbody>\r\n       </table>\r\n\r\n       <table datatable [dtOptions]=\"dtOptions\" [dtTrigger]=\"dtTrigger\"\r\n       class=\"dataTable table tableStyle responsive nowrap\">\r\n        <thead>\r\n          <tr>\r\n            <th>Current Balance [ACY]</th>\r\n        <th>Current Balance [LCY]</th>\r\n        <th>Available Balance</th>\r\n        <th> No Debit</th>\r\n        <th>No Credit</th>\r\n        <th>Frozen</th>\r\n        <th>Dormant</th>\r\n        <th>Account Status</th>\r\n        <th>Record Status</th>\r\n        <th>Customer Id</th>\r\n        <th>Value Date</th>\r\n        <th>Account Block</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n           <tr>\r\n            <td>{{fetchUserSingle.acyCurrBalance}}</td>\r\n            <td> {{fetchUserSingle.lcyCurrBalance}}</td>   \r\n            <td>{{fetchUserSingle.acyAvlBal}}</td>\r\n            <td>{{fetchUserSingle.acStatNoDr}}</td>\r\n            <td>{{fetchUserSingle.acSatNoCr}}</td>\r\n            <td>{{fetchUserSingle.frozen}}</td>\r\n            <td>{{fetchUserSingle.dorm}}</td>\r\n            <td>{{fetchUserSingle.accountStatus}}</td>\r\n            <td>{{fetchUserSingle.recordStatusFromFlexCube}}</td>\r\n            <td>{{fetchUserSingle.customerId}}</td>\r\n            <td>{{fetchUserSingle.valueDate}}</td>\r\n               </tr>\r\n        </tbody>\r\n      </table>\r\n        </div>\r\n        \r\n          <div class=\"col-12\" >\r\n            <div class=\"row g-3 pb-3 justify-content-center pt-3\">\r\n              <div class=\"col-auto\">\r\n                <button (click)=\"onProcessingTheSingleAccount()\" class=\"btn smBtn minWdSmBtn btnPrimary\">Process</button>\r\n              </div>\r\n              <div class=\"col-auto\">\r\n                <button (click)=\"onCancelingTheSingleRecord()\" class=\"btn smBtn minWdSmBtn btnPrimary\" >Delete</button>\r\n              </div>\r\n              <div class=\"col-auto\">\r\n                <button routerLink=\"/initiate-account-closure\" class=\"btn smBtn minWdSmBtn btnSecondary\">Exit</button>\r\n              </div>\r\n             \r\n            </div>\r\n          </div>\r\n          <div class=\"col-12\">\r\n            <label for=\"roleName\" class=\"formLbl\">Export As</label>\r\n            <select class=\"form-select\"  aria-label=\"Default select example\">\r\n              <option value=\"1\" (click)=\"downloadReportForSingle()\">Excel</option>\r\n              <option value=\"2\" (click)=\"convertReportForSingle()\">PDF</option>\r\n            </select>\r\n          \r\n          </div>\r\n      </div>\r\n    </form>\r\n  </div>\r\n","import { ChangeDetectorRef, Component, OnInit } from '@angular/core';\r\nimport { FetchUserForSingleAccClosureReqDTO } from 'src/app/shared/models/FetchUserForSingleAccClosureReqDTO';\r\nimport { AccountClosureServiceService } from 'src/app/shared/services/account-closure-service.service';\r\nimport jsPDF from 'jspdf';\r\nimport 'jspdf-autotable';\r\nimport { Observable, of, Subject } from 'rxjs';\r\nimport { DataTableDirective } from 'angular-datatables';\r\nimport { Ng2IzitoastService } from 'ng2-izitoast';\r\nimport { RoleService } from 'src/app/shared/services/role.service';\r\nimport Swal from 'sweetalert2';\r\nimport { Router } from '@angular/router';\r\n@Component({\r\n  selector: 'npr-view-report-acc-closure',\r\n  templateUrl: './view-report-acc-closure.component.html',\r\n  styleUrls: ['./view-report-acc-closure.component.scss']\r\n})\r\nexport class ViewReportAccClosureComponent implements OnInit {\r\n  fetchUserSingle = new FetchUserForSingleAccClosureReqDTO();\r\n  accountTypeForBulk: string = \"\";\r\n  excel = [];\r\n  sendFileName: string = \"\";\r\n  process: boolean;\r\n  delete: boolean;\r\n  dtTrigger: Subject<any> = new Subject<any>();\r\n  dtOptions: DataTables.Settings = {};\r\n  processSingle: boolean;\r\n  deleteSingle: boolean;\r\n  singleExcel = Array<any>();\r\n  navSubscription: any;\r\n  ViewAccClosure: any;\r\n  closureTypes: string;\r\n  constructor(private excelService: AccountClosureServiceService,private ref:ChangeDetectorRef,\r\n    public iziToast: Ng2IzitoastService,private roleService : RoleService,private router: Router,) { }\r\n\r\n  ngOnInit(): void {\r\n    console.log(\"Inside View Report\");\r\n    this.closureTypes = localStorage.getItem(\"CLOSURETYPE\");\r\n    console.log(this.closureTypes);\r\n    this.navSubscription = this.excelService.getNavParam.subscribe(data =>this.ViewAccClosure =data);\r\n   console.log(this.ViewAccClosure);\r\n   this.fetchUserSingle.accountTypeBulk=this.ViewAccClosure.queryParams.accountTypeBulk\r\n    this.fetchUserSingle.modNo = this.ViewAccClosure.queryParams.modNo;\r\n    this.fetchUserSingle.closureType =this.ViewAccClosure.queryParams.closureType;\r\n    this.fetchUserSingle.accountNumber = this.ViewAccClosure.queryParams.accountNumber;\r\n    this.fetchUserSingle.accountType = this.ViewAccClosure.queryParams.accountType;\r\n    this.fetchUserSingle.recordStatus = this.ViewAccClosure.queryParams.record;\r\n    this.fetchUserSingle.verifiedStatus=this.ViewAccClosure.queryParams.verifiedStatus;\r\n    this.fetchUserSingle.inputBy = this.ViewAccClosure.queryParams.inputBy;\r\n    this.fetchUserSingle.inputTime = this.ViewAccClosure.queryParams.inputTime;\r\n    // this.fetchUserSingle.modNo = params.modNo\r\n    this.fetchUserSingle.verifiedOnce = this.ViewAccClosure.queryParams.verifiedfirst;\r\n    this.fetchUserSingle.verifiedBy = this.ViewAccClosure.queryParams.verifiedBy;\r\n    this.fetchUserSingle.fileName=this.ViewAccClosure.queryParams.fileName;\r\n    this.fetchUserSingle.branchCode=this.ViewAccClosure.queryParams.branch;\r\n    this.fetchUserSingle.reasonForClosure=this.ViewAccClosure.queryParams.reason;\r\n    this.fetchUserSingle.processStatus=this.ViewAccClosure.queryParams.processStatus;\r\n    this.fetchUserSingle.accountLinkageDesc=this.ViewAccClosure.queryParams.Desc;\r\n\r\n    //--------------------------------------------\r\n    this.fetchUserSingle.closeStatusInputBy=this.ViewAccClosure.queryParams.closeStatusInputBy;\r\n      this.fetchUserSingle.closeStatusInputTime=this.ViewAccClosure.queryParams.closeStatusInputTime;\r\n      this.fetchUserSingle.closeStatus=this.ViewAccClosure.queryParams.closeStatus;\r\n      this.fetchUserSingle.icliqAvlBal=this.ViewAccClosure.queryParams.icliqAvlBal;\r\n      this.fetchUserSingle.icliqBalance=this.ViewAccClosure.queryParams.icliqBalance;\r\n      this.fetchUserSingle.icliqStatus=this.ViewAccClosure.queryParams.icliqStatus;\r\n      this.fetchUserSingle.makerId=this.ViewAccClosure.queryParams.makerId;\r\n      this.fetchUserSingle.makerInputTime=this.ViewAccClosure.queryParams.makerInputTime;\r\n      this.fetchUserSingle.accls=this.ViewAccClosure.queryParams.accls;\r\n      this.fetchUserSingle.lastTransactionDetail=this.ViewAccClosure.queryParams.lastTransactionDetail;\r\n      this.fetchUserSingle.blockedAmount=this.ViewAccClosure.queryParams.blockedAmount;\r\n      this.fetchUserSingle.deStatus=this.ViewAccClosure.queryParams.deStatus;\r\n      this.fetchUserSingle.linkedAccounts=this.ViewAccClosure.queryParams.linkedAccounts;\r\n      this.fetchUserSingle.checkerId=this.ViewAccClosure.queryParams.checkerId;\r\n      this.fetchUserSingle.checkerInputTime=this.ViewAccClosure.queryParams.checkerInputTime;\r\n\r\n      console.log(this.fetchUserSingle);\r\n  }\r\n  exportAsXLSX(): void {\r\n    console.log(\"this is on click of download\");\r\n    // this.showProgressBar = true;\r\n    setTimeout(() => {\r\n      // this.showProgressBar = false;\r\n    }, 2000);\r\n    \r\n    \r\n    // console.log(this.excel);\r\n    // this.bulkDataInExcel=this.excel;\r\n    // console.log(\"bulkDataInExcel\",this.bulkDataInExcel);\r\n    //let fin=this.sendFileName.split('.').slice(0, -1).join('.');\r\n    console.log(this.fetchUserSingle.fileName);\r\n\t  let fin=this.fetchUserSingle.fileName.split('.').slice(0, -1).join('.');\r\n    this.excelService.getExcel(fin, this.fetchUserSingle.accountType).subscribe(data=>{\r\n      console.log(\"this is backend data for excel\",data); \r\n\r\n      this.excel=data;\r\n      data.forEach(element => {\r\n         //this.excel.push(element);\r\n        \r\n      });\r\n      //console.log(\"vidya\",this.excel);\r\n      this.excelService.exportAsExcelFile(this.excel, 'BULK_ACCOUNT_CLOSURE');\r\n    })\r\n   \r\n\r\n    console.log(this.excel)\r\n    // --passing two arguments --1)is getting data from backend --i.e is excel data\r\n    // 2)what name i should give for file\r\n  }\r\n     //downloding records in pdf\r\n     convert() {\r\n\r\n      var doc = new jsPDF();\r\n      var col = [[\"AccountNo\", \"branchCode\", \"closureReason\", \"customerId\", \"fileName\", \"frozen\"]];\r\n      var rows = [];\r\n    console.log(this.fetchUserSingle);\r\n      /* The following array of object as response from the API req  */\r\n      let fin=this.fetchUserSingle.fileName.split('.').slice(0, -1).join('.');\r\n      //let fin=this.fetchUserSingle.fileName.split('.').slice(0, -1).join('.');\r\n      this.excelService.getExcel(fin, this.fetchUserSingle.accountType).subscribe(data=>{\r\n        console.log(\"this is backend data for excel\"); \r\n    \r\n        this.excel=data;\r\n        \r\n       \r\n      var itemNew=this.excel;\r\n    \r\n    \r\n      itemNew.forEach(element => {\r\n        var date = new Date(element.timeForExport).toLocaleDateString(\"en-us\");\r\n         console.log(date)\r\n        var temp = [element.accountNo, element.branchCode,element.closureReason,element.customerId,element.fileName,element.frozen];\r\n        rows.push(temp);\r\n    \r\n      });\r\n      var doc = new jsPDF();\r\n      //doc.autoTable(col, rows);\r\n      doc.autoTable({\r\n          head: col,\r\n          body: rows\r\n      });\r\n      doc.save('BULK_Account_Closure.pdf');\r\n    });\r\n    }\r\n    modo(event){\r\n      console.log(event);\r\n      if(event=='PDF'){\r\nthis.convert();\r\n      }\r\n      if(event=='Excel'){\r\n        this.exportAsXLSX();\r\n      }\r\n\r\n    }\r\n     // ---------------------Process The Bulk-----------------------------\r\n  onProcessingTheBulkAccount() {\r\n    console.log(\"this is bulk process\", this.fetchUserSingle.fileName);\r\n    this.excelService.processTheBulkRecord(this.fetchUserSingle.fileName,this.fetchUserSingle.accountType, this.fetchUserSingle.inputBy).subscribe(processResp => {\r\n      console.log(processResp);\r\n     \r\n      let msg = processResp.errorDesc;\r\n      if (processResp.var1 == true) {\r\n        this.process=true;\r\n        this.ref.markForCheck();\r\n        Swal.fire({\r\n          text: 'Record Processed SuccessFully',\r\n          icon: \"success\"\r\n        });\r\n       \r\n      }\r\n      else {\r\n    \r\n        Swal.fire({\r\n          text: msg,\r\n          icon: \"warning\"\r\n        });\r\n        // this.process=true;\r\n      \r\n      }\r\n    });\r\n  }\r\n\r\n  onCancelingTheRecord() {\r\n    console.log(\"this is deleteing the record\", this.fetchUserSingle.fileName);\r\n    this.excelService.onDeletingTheReocrd(this.fetchUserSingle.fileName,this.fetchUserSingle.accountTypeBulk,this.fetchUserSingle.makerId).subscribe(deleteResp => {\r\n      console.log(deleteResp);\r\n      if (deleteResp == true) {\r\n        this.delete=true;\r\n    \r\n        Swal.fire({\r\n          text: 'Record is Deleted',\r\n          icon: \"success\"\r\n        });\r\n        this.router.navigate(['/initiate-account-closure']);\r\n\r\n      }\r\n      else {\r\n        Swal.fire({\r\n          text: 'Failed To Delete The Record',\r\n          icon: \"warning\"\r\n        });\r\n    \r\n      }\r\n\r\n    });\r\n\r\n  }\r\n  onProcessingTheSingleAccount(){\r\n    console.log(\"this is single process\",this.fetchUserSingle.accountNumber);\r\n    this.excelService.processTheSingleRecord(this.fetchUserSingle.accountNumber, this.fetchUserSingle.inputBy).subscribe(processResp => {\r\n      console.log(processResp);\r\n     \r\n      let msg = processResp.errorDesc;\r\n      if (processResp.var1 == true) {\r\n        this.process=true;\r\n        this.ref.markForCheck();\r\n        Swal.fire({\r\n          text: 'Record Processed SuccessFully',\r\n          icon: \"success\"\r\n        });\r\n       \r\n      }\r\n      else {\r\n    \r\n        Swal.fire({\r\n          text: msg,\r\n          icon: \"warning\"\r\n        });\r\n        // this.process=true;\r\n      \r\n      }\r\n    });\r\n\r\n  }\r\n  onCancelingTheSingleRecord() {\r\n    console.log(\"deleting Single\", this.fetchUserSingle.accountNumber);\r\n    console.log(\"deleting Single\", this.fetchUserSingle.accountType);\r\n    console.log(\"deleting Single\", this.fetchUserSingle.closureType);\r\n    console.log(\"deleting Single\", this.fetchUserSingle.inputBy);\r\n\r\n    this.excelService.onDeletingSingle(this.fetchUserSingle.accountNumber, this.fetchUserSingle.accountType, this.fetchUserSingle.closureType, this.fetchUserSingle.inputBy).subscribe(singledeleteResp => {\r\n      console.log(singledeleteResp);\r\n      this.deleteSingle=true;\r\n      if (singledeleteResp == true) {\r\n        // this.iziToast.show({\r\n        //   message: `Record Deleted successFully`,\r\n        //   image: \"assets/images/user.png\",\r\n        //   icon: 'ico ico-success',\r\n        //   theme:\"dark\",\r\n        //   layout: 2,\r\n        //   // imageWidth:50,\r\n        //   balloon: false,\r\n        //   position: \"topRight\",\r\n        //   progressBarColor: \"green\",\r\n        //   pauseOnHover: true,\r\n        // });\r\n        Swal.fire({\r\n          text: 'Record is Deleted',\r\n          icon: \"success\"\r\n        });\r\n        this.router.navigate(['/initiate-account-closure']);\r\n      }\r\n      else {\r\n        // this.iziToast.show({\r\n        //   message: `Failed To Delete The Record`,\r\n        //   image: \"assets/images/user.png\",\r\n        //   icon: 'ico ico-warning',\r\n        //   theme:\"dark\",\r\n        //   layout: 2,\r\n        //   // imageWidth:50,\r\n        //   balloon: false,\r\n        //   position: \"topRight\",\r\n        //   progressBarColor: \"green\",\r\n        //   pauseOnHover: true,\r\n        // });\r\n        Swal.fire({\r\n          text: 'Failed To Delete The Record',\r\n          icon: \"warning\"\r\n        });\r\n      }\r\n    });\r\n  }\r\n  // ================geneerate Excel For Single==================\r\n  downloadReportForSingle(): void {\r\n    console.log(\"download for single\");\r\n    this.singleExcel.push(this.fetchUserSingle);\r\n    console.log(this.fetchUserSingle);\r\n    console.log(this.singleExcel);\r\n    this.excelService.exportAsExcelForSingleAccount(this.singleExcel, 'SINGLE_ACCOUNT_CLOSURE')\r\n    console.log(\"this is single\", this.singleExcel);\r\n  }\r\n   // ================geneerate PDF For Single==================\r\n   convertReportForSingle()\r\n   {\r\n console.log(this.fetchUserSingle);\r\n var doc = new jsPDF();\r\n     var col = [[\"Conolidated Report\"]];\r\n     var rows=[]\r\n     \r\n     var itemNew=this.fetchUserSingle;\r\n     Object.keys(itemNew);\r\n     Object.values(itemNew);\r\n     Object.entries(itemNew);\r\n     console.log(Object.entries(itemNew))\r\n     // console.log(\"obj\",obj);\r\n \r\n \r\n     const objectArray = Object.entries(itemNew);\r\n   \r\n     \r\n const mapped = Object.keys(this.fetchUserSingle).map(key => ({type: key, value: this.fetchUserSingle[key]}));\r\n \r\n console.log(mapped);\r\n doc.autoTable({\r\n   // head: col,\r\n   body: mapped\r\n });\r\n doc.save('Single_Account_Closure.pdf');\r\n   }\r\n}\r\n"]}