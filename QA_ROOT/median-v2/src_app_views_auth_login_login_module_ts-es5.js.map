{"version":3,"mappings":"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","names":["__webpack_exports__","getRandomValues","i","byteToHex","uuid","stringify","options","_rng_js__WEBPACK_IMPORTED_MODULE_0__","rnds","offset","buf","v4","_regex_js__WEBPACK_IMPORTED_MODULE_0__","validate","fadeInUpAnimation","duration","transform","opacity","fadeInUp400ms","DEMO_USER","currentUser","department","LoggedInUser","userobj","usercompleteobj","loginRoutes","path","children","component","_login_component__WEBPACK_IMPORTED_MODULE_0__","LoginRoutingModule","_angular_router__WEBPACK_IMPORTED_MODULE_2__","imports","exports","_angular_core__WEBPACK_IMPORTED_MODULE_10__","LoginComponent","router","jwtAuth","toastService","fb","cd","ls","demoUser","iziToast","spinner","apiService","roleService","Date","allowNumbersOnly","length","isPasswordInput","disableAutoFocus","placeholder","inputStyles","width","height","browserKey","signinForm","group","username","_angular_forms__WEBPACK_IMPORTED_MODULE_12__","password","count","setTimeout","showOtpComponent","showTimer","console","log","localStorage","setItem","login","value","encryptedAES","crypto_js__WEBPACK_IMPORTED_MODULE_1__","USERNAME","data","toString","uname","fetchMedUser","subscribe","response","user","verifiedStatus","sweetalert2__WEBPACK_IMPORTED_MODULE_2___default","text","icon","statusForUser","logoutTime","email","userId","sessionStorage","fetchSecurityPolicyService","resp","security","notifyPswdExpry","notifyPasswordExpiryInDays","pswdExpiry","currentDate","changePwdDate","pwdChangeDate","differnceInTime","differnceInDays","Math","floor","finalDiff","errorMessage","check","getOtp","res","variable","otpreceivedtime","failLgnCounter","sp","invLogins","maxInvLogins","roles","loginProcessing","err","error","remainingRolesToFetch","newRoleForUser","fetchdynamicrolesdata","index","arrayOfAuthStatus","roleDto","authStatus","isUserRoleAuthorized","includes","then","result","clear","reset","backToLogin","progress","toggle","successMessage","verifyOTP","userPermissions","navigate","setUserAndToken","isValid","ngOtpInput","setValue","otp","loginService","responseforotp","getItem","userEntity","showToast","fetchNewRolePermissions","signin","show","title","message","image","layout","balloon","position","progressBarColor","pauseOnHover","user1","JSON","parse","initTheme","screenThemeSelected","bgClass","lastBg","$","removeClass","addClass","_a","_b","_c","passwordGenerationType","_d","signinData","remaining","timerOn","m","s","detectChanges","timeOutOtp","markForCheck","visible","inputType","split","name","domain","substring","Array","join","selectors","viewQuery","src_npr_animations_fade_in_up_animation__WEBPACK_IMPORTED_MODULE_0__","changeDetection","User","SecurityDto","LoginModule","_DEMO_USER__WEBPACK_IMPORTED_MODULE_2__","_angular_common__WEBPACK_IMPORTED_MODULE_5__","_login_routing_module__WEBPACK_IMPORTED_MODULE_0__","_angular_forms__WEBPACK_IMPORTED_MODULE_6__","ng_otp_input__WEBPACK_IMPORTED_MODULE_7__","ngx_spinner__WEBPACK_IMPORTED_MODULE_8__","ng2_izitoast__WEBPACK_IMPORTED_MODULE_3__","declarations","_login_component__WEBPACK_IMPORTED_MODULE_1__"],"sources":["webpack:///node_modules/uuid/dist/esm-browser/regex.js","webpack:///node_modules/uuid/dist/esm-browser/rng.js","webpack:///node_modules/uuid/dist/esm-browser/stringify.js","webpack:///node_modules/uuid/dist/esm-browser/v4.js","webpack:///node_modules/uuid/dist/esm-browser/validate.js","webpack:///src/@npr/animations/fade-in-up.animation.ts","webpack:///src/app/views/auth/login/DEMO_USER.ts","webpack:///src/app/views/auth/login/login-routing.module.ts","webpack:///src/app/views/auth/login/login.component.html","webpack:///src/app/views/auth/login/login.component.ts","webpack:///src/app/views/auth/login/login.module.ts"],"sourcesContent":["export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import { animate, style, transition, trigger } from '@angular/animations';\r\n\r\nexport function fadeInUpAnimation(duration: number) {\r\n  return trigger('fadeInUp', [\r\n    transition(':enter', [\r\n      style({\r\n        transform: 'translateY(20px)',\r\n        opacity: 0\r\n      }),\r\n      animate(`${duration}ms cubic-bezier(0.35, 0, 0.25, 1)`, style({\r\n        transform: 'translateY(0)',\r\n        opacity: 1\r\n      }))\r\n    ])\r\n  ]);\r\n}\r\n\r\nexport const fadeInUp400ms = fadeInUpAnimation(400);\r\n","export class DEMO_USER {\r\n    currentUser: string;\r\n    userPermissions: any;\r\n    department: string;\r\n    LoggedInUser: string;\r\n    userobj: string;\r\n    usercompleteobj: any;\r\n\r\n    constructor() {\r\n        this.currentUser = \"SAKTHI\";\r\n        // this.userPermissions = { \"screenAndPermissionsDTO\": [{ \"permissions\": \"1111111111\", \"screenId\": 2, \"screenName\": \"Users\" }, { \"permissions\": \"1111111111\", \"screenId\": 3, \"screenName\": \"Roles\" }, { \"permissions\": \"1111111111\", \"screenId\": 4, \"screenName\": \"Audit Logs\" }, { \"permissions\": \"1111111111\", \"screenId\": 5, \"screenName\": \"Password Policy\" }, { \"permissions\": \"1111111111\", \"screenId\": 6, \"screenName\": \"Process Monitoring\" }, { \"permissions\": \"1111111111\", \"screenId\": 7, \"screenName\": \"External Systems\" }, { \"permissions\": \"1111111111\", \"screenId\": 8, \"screenName\": \"Process Code Mapping\" }, { \"permissions\": \"1111111111\", \"screenId\": 9, \"screenName\": \"Excel Mapping\" }, { \"permissions\": \"1111111111\", \"screenId\": 10, \"screenName\": \"Upload Excel\" }, { \"permissions\": \"1111111111\", \"screenId\": 11, \"screenName\": \"Authorize Excel\" }, { \"permissions\": \"1111111111\", \"screenId\": 12, \"screenName\": \"Rejection Queue\" }, { \"permissions\": \"1111111111\", \"screenId\": 13, \"screenName\": \"Authorize Modifications\" }, { \"permissions\": \"1111111111\", \"screenId\": 14, \"screenName\": \"Excel Processing Summary\" }, { \"permissions\": \"1111111111\", \"screenId\": 15, \"screenName\": \"Customer search\" }, { \"permissions\": \"1111111111\", \"screenId\": 16, \"screenName\": \"Email-Management\" }, { \"permissions\": \"1111111111\", \"screenId\": 17, \"screenName\": \"Transaction Code Maint\" }, { \"permissions\": \"1111111111\", \"screenId\": 18, \"screenName\": \"Initiate Account Closure\" }, { \"permissions\": \"1111111111\", \"screenId\": 19, \"screenName\": \"Process Account Closure\" }, { \"permissions\": \"1111111111\", \"screenId\": 20, \"screenName\": \"Acc Closure Maintenance\" }, { \"permissions\": \"1111111111\", \"screenId\": 21, \"screenName\": \"Charge Maintenance\" }, { \"permissions\": \"1111111111\", \"screenId\": 22, \"screenName\": \"GlobalCodeMaintenance\" }, { \"permissions\": \"1111111111\", \"screenId\": 23, \"screenName\": \"UserCodeMaintenance\" }, { \"permissions\": \"1111111111\", \"screenId\": 24, \"screenName\": \"AcumenJournal\" }, { \"permissions\": \"1111111111\", \"screenId\": 25, \"screenName\": \"Treasury Reference\" }, { \"permissions\": \"1111111111\", \"screenId\": 26, \"screenName\": \"Cash Payments\" }, { \"permissions\": \"1111111111\", \"screenId\": 27, \"screenName\": \"Authorize Cash Payments\" }], \"labels\": [{ \"labelId\": 1, \"labelName\": \"NEW\", \"labelDescription\": \"New\", \"language\": \"EN\" }, { \"labelId\": 2, \"labelName\": \"EDIT\", \"labelDescription\": \"Edit\", \"language\": \"EN\" }, { \"labelId\": 3, \"labelName\": \"DELETE\", \"labelDescription\": \"Delete\", \"language\": \"EN\" }, { \"labelId\": 4, \"labelName\": \"CLOSE\", \"labelDescription\": \"Close\", \"language\": \"EN\" }, { \"labelId\": 5, \"labelName\": \"REOPEN\", \"labelDescription\": \"Reopen\", \"language\": \"EN\" }, { \"labelId\": 6, \"labelName\": \"UNLOCK\", \"labelDescription\": \"Unlock\", \"language\": \"EN\" }, { \"labelId\": 7, \"labelName\": \"PRINT\", \"labelDescription\": \"Print\", \"language\": \"EN\" }, { \"labelId\": 8, \"labelName\": \"AUTH\", \"labelDescription\": \"Auth\", \"language\": \"EN\" }, { \"labelId\": 9, \"labelName\": \"VIEW\", \"labelDescription\": \"View\", \"language\": \"EN\" }, { \"labelId\": 10, \"labelName\": \"REJECT\", \"labelDescription\": \"Reject\", \"language\": \"EN\" }] };\r\n        this.department = null;\r\n        this.LoggedInUser = \"SAKTHI\";\r\n        this.userobj = \"28/12/2021 10:51:30\";\r\n        this.usercompleteobj = { \"pwdChangeDate\": 1640597099000, \"intime\": \"09:00\", \"outtime\": \"22:55\", \"userId\": \"SAKTHI\", \"verifiedStatus\": \"A\", \"creatorDtStamp\": 1593082262162, \"creatorId\": \"TEST1\", \"email\": \"sakthivel.m@rumango.com\", \"emailNotification\": null, \"encryptedPassword\": \"$2a$10$7qdgqLg6lANIjAIu/45I6.s/ydmtHjzjbhEkN25H1e779uaiWtyue\", \"failedAttempts\": 0, \"verifiedOnce\": \"Y\", \"firstTimeLogin\": \"true\", \"ldapUserId\": null, \"logoutTime\": \"Tue Dec 28 10:51:28 IST 2021\", \"mobile\": \"1234567890\", \"msadUserId\": null, \"newRoleForUser\": [\"ROLE_NEW_ADMIN\"], \"passwordAge\": 54563535663, \"recordStatus\": \"O\", \"smsNotification\": null, \"updatedAt\": null, \"updatedBy\": null, \"userName\": \"PRABHAT\", \"userRole\": \"ROLE1\", \"verifierDtStamp\": null, \"verifierId\": null, \"versionNo\": 1, \"modNo\": 6, \"disableUser\": \"N\", \"statusForUser\": \"Enable\", \"department\": null };\r\n    }\r\n}","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { LoginComponent } from './login.component';\r\n\r\n\r\nconst loginRoutes: Routes = [\r\n  {\r\n    path: \"\",\r\n    children: [\r\n      {\r\n        path: 'login',\r\n        component: LoginComponent\r\n      }\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(loginRoutes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class LoginRoutingModule {\r\n}\r\n","<section class=\"bg-white\">\r\n  <div class=\"loginLogoCol text-center text-lg-start\">\r\n    <a href=\"JavaScript:void(0)\">\r\n      <img src=\"assets/images/logo.png\" alt=\"logo\">\r\n    </a>\r\n  </div>\r\n  <div class=\"container\" >\r\n    <div class=\"row g-0 loginRow align-items-center\" >\r\n      <div class=\"col-lg-6\" style=\"margin-top: 3%;\">\r\n        <div class=\"loginFormCol\" *ngIf=\"!showOtpComponent\">\r\n          <div class=\"loginCol\">\r\n            <h2 class=\"lgTitle secondaryColor\">Log in</h2>\r\n       \r\n            <div class=\"loginFormStyle\">\r\n              <form class=\"row g-4\" [formGroup]=\"signinForm\">\r\n                <div class=\"col-12\">\r\n                  <label for=\"exampleInputEmail1\" class=\"form-label lblStyles\">User ID*</label>\r\n                  <input type=\"text\" autofocus=\"autofocus\"  oninput=\"this.value = this.value.toUpperCase()\" formControlName=\"username\" class=\" lineField loginInput fieldSize\" id=\"exampleInputEmail1\" placeholder=\"Your User Id\">\r\n                  \r\n                </div>\r\n                <div class=\"col-12\">\r\n                  <div class=\"row\">\r\n                    <div class=\"col\">\r\n                      <label for=\"exampleInputPassword1\" class=\"form-label lblStyles\">Password</label>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"inputField \">\r\n                    <div class=\"inputField pwdFldCol d-flex\">\r\n                      <input type=\"password\"  formControlName=\"password\" [type]=\"hide ? 'password' : 'text'\" class=\" lineField loginInput fieldWidth\" id=\"pwdFld\" placeholder=\"Your Password\">\r\n                      <span toggle=\"#pwdFld\" class=\"alignSelf\" (click)=\"hide = !hide\">\r\n                        <img class=\"showPwd\" *ngIf=\"!hide\" src=\"assets/images/show-icon.svg\" alt=\"...\">\r\n                        <img class=\"hidePwd\"  *ngIf=\"hide\" src=\"assets/images/hide-icon.svg\" alt=\"...\">\r\n                      </span>\r\n                    </div>\r\n                    <!-- <input type=\"password\" class=\"form-control lineField\" id=\"exampleInputPassword1\" placeholder=\"Your Password\">\r\n                    <span toggle=\"#pwdFld\" class=\"fieldIcon toggle-password fa-eye\"><img class=\"showPwd\" src=\"images/show-icon.svg\" alt=\"...\"><img class=\"hidePwd\" src=\"images/hide-icon.svg\" alt=\"...\"></span> -->\r\n                  </div>\r\n                 \r\n                </div>\r\n                <div class=\"col-12\">\r\n                  <button type=\"submit\" [disabled]=\"!signinForm.valid\" (click)=\"getOtp()\" class=\"btn btnPrimary w-100 btnLg roundedBorder\">Get OTP</button>\r\n                </div>\r\n                \r\n              </form>\r\n              <div class=\"float\">\r\n                <a  [routerLink]=\"['/forget-password']\" class=\"primaryColor fpLink\">Forgot Password?</a>\r\n              </div>\r\n              <div class=\"rumanogoCol text-center pt-3\">\r\n                <img src=\"assets/images/rumango-img.png\" alt=\"rumango-img\">\r\n                <span class=\"medainStyle mt-3\">MEDIAN {{ copyRightDate | date:'YYYY' }} - Connecting Systems</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"loginFormCol\">\r\n          <!--begin::Wrapper-->\r\n          <div class=\"loginCol\" *ngIf=showOtpComponent>\r\n            <!--begin::Form-->\r\n            <form class=\"form w-100 mb-10\">\r\n              <!--begin::Icon-->\r\n              <div class=\"text-center mb-10\">\r\n                <img alt=\"Logo\" class=\"mh-125px\" src=\"assets/images/smartphone.svg\" />\r\n              </div>\r\n              <!--end::Icon-->\r\n              <!--begin::Heading-->\r\n              <div class=\"text-center mb-10\">\r\n                <!--begin::Title-->\r\n                <h1 class=\"text-dark mb-3\">Two Step Verification</h1>\r\n                <!--end::Title-->\r\n                <!--begin::Sub-title-->\r\n                <div class=\"text-muted fw-bold fs-5 mb-5\">Enter the verification code we sent to</div>\r\n                <!--end::Sub-title-->\r\n                <!--begin::Mobile no-->\r\n                <div class=\"fw-bolder text-dark fs-3\">{{ email }}</div>\r\n                <!--end::Mobile no-->\r\n              </div>\r\n              <!--end::Heading-->\r\n              <!--begin::Section-->\r\n              <div class=\"mb-10 px-md-10\">\r\n                <!--begin::Label-->\r\n                <div class=\"fw-bolder text-start text-dark fs-6 mb-1 ms-1\">Type your 6 digit security code</div>\r\n                <!--end::Label-->\r\n                <!--begin::Input group-->\r\n                <div class=\"d-flex flex-wrap flex-stack\">\r\n                  <ng-otp-input #ngOtpInput   (onInputChange)=\"onOtpChange($event)\" [config]=\"config\" inputControls=\"6\"></ng-otp-input>\r\n                </div> \r\n                <!--begin::Input group-->\r\n              </div>\r\n              <!--end::Section-->\r\n              <!--begin::Submit-->\r\n              <div class=\"d-flex\" style=\"gap: 10px;\">\r\n                <button type=\"button\"  [disabled]=\"!isValid\" \r\n                   class=\"btn btn-lg btnPrimary fw-bolder \" (click)=\"signin()\">\r\n                  <!-- <ng-container *ngIf=\"isValid; else showText\">\r\n                    <span class=\"indicator-progress\">Please wait... \r\n                      <span class=\"spinner-border spinner-border-sm align-middle ms-2\"></span></span>\r\n                  </ng-container> -->\r\n                  <!-- <ng-template #showText> -->\r\n                    Verify\r\n                  <!-- </ng-template> -->\r\n                </button>\r\n                <button type=\"button\" \r\n                class=\"btn smBtn minWdSmBtn btnUpdate\" (click)=\"resendOtpMethod()\">\r\n               <!-- <ng-container *ngIf=\"isValid; else showText\">\r\n                 <span class=\"indicator-progress\">Please wait... \r\n                   <span class=\"spinner-border spinner-border-sm align-middle ms-2\"></span></span>\r\n               </ng-container> -->\r\n               <!-- <ng-template #showText> -->\r\n                 Resend OTP\r\n               <!-- </ng-template> -->\r\n             </button>\r\n             <button type=\"button\"  \r\n             class=\"btn smBtn minWdSmBtn btnSecondary\" (click)=\"backToLogin()\">\r\n            <!-- <ng-container *ngIf=\"isValid; else showText\">\r\n              <span class=\"indicator-progress\">Please wait... \r\n                <span class=\"spinner-border spinner-border-sm align-middle ms-2\"></span></span>\r\n            </ng-container> -->\r\n            <!-- <ng-template #showText> -->\r\n              Exit\r\n            <!-- </ng-template> -->\r\n          </button>\r\n              </div>\r\n              <!--end::Submit-->\r\n            </form>\r\n            <!--end::Form-->\r\n            <!--begin::Notice-->\r\n            <!-- <div class=\"text-center fw-bold fs-5\">\r\n              <span class=\"text-muted me-1\">Resend OTP in : </span>\r\n              <ng-container *ngIf=\"timeOutOtp; else showTimer\">\r\n                <a class=\"fw-bolder fs-5 me-1 primaryColor fpLink\" (click)=\"resendOtp()\">Resend</a>\r\n              </ng-container>\r\n              <ng-template #showTimer>\r\n                <span id=\"timer\">{{ m + ':' + s }}</span>\r\n              </ng-template>\r\n            \r\n               <span class=\"text-muted me-1\">or</span> \r\n              <a href=\"#\" class=\"link-primary fw-bolder fs-5\">Call Us</a> -->\r\n            <!-- </div> --> \r\n            <!--end::Notice-->\r\n          </div>\r\n\t\t\t\t\t\t<!--end::Wrapper-->\r\n        </div>\r\n      </div>\r\n      <div class=\"col-lg-6\">\r\n        <div class=\"loginImgCol d-none d-lg-block\">\r\n          <img src=\"assets/images/login-img.svg\" alt=\"loginimg\">\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</section>   \r\n<ngx-spinner size=\"small\" type=\"square-loader\"></ngx-spinner>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import {\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  NgZone,\r\n  OnInit,\r\n  ViewChild,\r\n} from \"@angular/core\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { Router } from \"@angular/router\";\r\nimport { Ng2IzitoastService } from \"ng2-izitoast\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { fadeInUp400ms } from \"src/@npr/animations/fade-in-up.animation\";\r\nimport { JwtAuthService } from \"src/app/shared/services/jwt-auth.service\";\r\nimport { LocalStoreService } from \"src/app/shared/services/local-store.service\";\r\nimport { DEMO_USER } from \"./DEMO_USER\";\r\nimport Speech from \"speak-tts\";\r\nimport * as CryptoJS from \"crypto-js\";\r\nimport { ApiService } from \"src/app/shared/services/api.service\";\r\nimport { ToastService } from \"src/app/shared/services/toast.service\";\r\nimport Swal from \"sweetalert2\";\r\nimport { RoleService } from \"src/app/shared/services/role.service\";\r\n@Component({\r\n  selector: \"npr-login\",\r\n  templateUrl: \"./login.component.html\",\r\n  styleUrls: [\"./login.component.scss\"],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  animations: [fadeInUp400ms],\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  lastBg: string;\r\n  user1: string;\r\n  hide: Boolean = true;\r\n  signinForm: FormGroup;\r\n  otp: string;\r\n  copyRightDate: Date = new Date();\r\n  isValid: boolean;\r\n  showOtpComponent: boolean = false;\r\n  inputType = \"password\";\r\n  visible = false;\r\n  browserKey: any;\r\n  @ViewChild(\"ngOtpInput\", { static: false }) ngOtpInput: any;\r\n  config = {\r\n    allowNumbersOnly: true,\r\n    length: 6,\r\n    isPasswordInput: false,\r\n    disableAutoFocus: false,\r\n    placeholder: \"*\",\r\n    inputStyles: { width: \"50px\", height: \"50px\" },\r\n  };\r\n  m: any;\r\n  s: any;\r\n  timeOutOtp: boolean;\r\n  user: User;\r\n  security: SecurityDto;\r\n  notifyPswdExpry: number;\r\n  pswdExpiry: number;\r\n  currentDate: any;\r\n  changePwdDate: any;\r\n  differnceInTime: number;\r\n  differnceInDays: number;\r\n  finalDiff: number;\r\n  check: boolean;\r\n  variable: any;\r\n  otpreceivedtime: Date;\r\n  invLogins: number;\r\n  loginProcessing: boolean;\r\n  verifyOTP: boolean;\r\n  progress: boolean;\r\n  responseforotp: User;\r\n  userEntity: User;\r\n  email: string;\r\n  arrayOfAuthStatus: any[] = [];\r\n  passwordGenerationType: any;\r\n  auto: boolean;\r\n  loginCount: number;\r\n  count: number = 0;\r\n  // currentDate: any;\r\n  // changePwdDate: any;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private jwtAuth: JwtAuthService,\r\n    private toastService: ToastService,\r\n    private fb: FormBuilder,\r\n    private cd: ChangeDetectorRef,\r\n    private ls: LocalStoreService,\r\n    private demoUser: DEMO_USER,\r\n    public iziToast: Ng2IzitoastService,\r\n    private spinner: NgxSpinnerService,\r\n    private apiService: ApiService,\r\n    public roleService: RoleService\r\n  ) { }\r\n  currentUser: string;\r\n  userPermissions: any;\r\n  department: string;\r\n  LoggedInUser: string;\r\n  userobj: string;\r\n  usercompleteobj: any;\r\n\r\n  ngOnInit() {\r\n    this.browserKey = uuid();\r\n    this.signinForm = this.fb.group({\r\n      username: [\"\", Validators.required],\r\n      password: [\"\", [Validators.required, Validators.min(3)]],\r\n    });\r\n    this.count = 0;\r\n  }\r\n\r\n  toggle() {\r\n    setTimeout(() => {\r\n      //  this.spinner.hide();\r\n      this.showOtpComponent = !this.showOtpComponent;\r\n      this.showTimer(60);\r\n    }, 2500);\r\n  }\r\n  getOtp() {\r\n    this.count++;\r\n    console.log(this.count);\r\n    if (this.count === 1) {\r\n      //  this.spinner.show();\r\n      localStorage.setItem(\"getOtpClicked\", \"true\");\r\n      let login: any = {};\r\n      login.username = this.signinForm.value.username;\r\n      login.password = this.signinForm.value.password;\r\n      var encryptedAES = CryptoJS.AES.encrypt(\r\n        this.signinForm.value.password,\r\n        \"@12#90!^*NPR*g&*()$34#$\"\r\n      );\r\n      var USERNAME = CryptoJS.AES.encrypt(\r\n        this.signinForm.value.username,\r\n        \"@12#90!^*NPR*g&*()$34#$\"\r\n      );\r\n      var data = encryptedAES.toString();\r\n      var uname = USERNAME.toString();\r\n      // this.skipLoginUser();\r\n\r\n      console.log(\"jygjh\");\r\n      this.apiService.fetchMedUser(this.signinForm.value.username).subscribe(\r\n        (response) => {\r\n          console.log(response);\r\n          this.user = response;\r\n          if (this.user.verifiedStatus == \"U\") {\r\n            Swal.fire({ text: \"User Is Unauthorized\", icon: \"error\" });\r\n            this.count = 0;\r\n            return;\r\n          }\r\n          if (this.user.statusForUser == \"Disable\") {\r\n            Swal.fire({ text: \"User Is Disabled\", icon: \"error\" });\r\n            this.count = 0;\r\n            return;\r\n          }\r\n          this.ls.setItem(\"departmentHeader\", this.user.department);\r\n          this.ls.setItem(\"LoggedInUserHeader\", this.user.logoutTime);\r\n          this.email = this.user.email;\r\n          localStorage.setItem(\"userFromLogin\", this.user.userId);\r\n          sessionStorage.setItem(\"user_id\", this.user.userId);\r\n          if (\r\n            this.user.statusForUser === \"Enable\" &&\r\n            this.user.verifiedStatus === \"A\"\r\n          ) {\r\n            //---------- Password Policy Implementation (BEGIN) ----------\r\n\r\n            this.apiService.fetchSecurityPolicyService().subscribe((resp) => {\r\n              this.security = resp;\r\n              console.log(resp);\r\n              this.notifyPswdExpry = this.security.notifyPasswordExpiryInDays;\r\n              this.pswdExpiry = this.security.pswdExpiry;\r\n              if (this.pswdExpiry === 0 && this.notifyPswdExpry === 0) {\r\n                console.log(\"Hitting dashboard\");\r\n                // this.router\r\n                //   .navigate([\"/dashboard\"])\r\n                //   .then((data) => console.log(\"dashboard hit\", data));\r\n              } else {\r\n                this.currentDate = new Date();\r\n                this.changePwdDate = new Date(this.user.pwdChangeDate);\r\n                this.differnceInTime = this.currentDate - this.changePwdDate;\r\n                this.differnceInDays = Math.floor(\r\n                  this.differnceInTime / (1000 * 3600 * 24)\r\n                );\r\n                this.finalDiff = this.pswdExpiry - this.differnceInDays;\r\n\r\n                if (this.finalDiff === 0 || this.finalDiff <= 0) {\r\n                  this.toastService.errorMessage(\r\n                    \"Your Password is expired. Please reset your password.\",\r\n                    \"\"\r\n                  );\r\n                  this.count = 0;\r\n                } else {\r\n                  this.check = true;\r\n\r\n                  if (\r\n                    this.signinForm.value.password === \"\" ||\r\n                    this.signinForm.value.username === \"\"\r\n                  ) {\r\n                    this.toastService.errorMessage(\r\n                      \"Please enter login credentials.\",\r\n                      \"\"\r\n                    );\r\n                    this.count = 0;\r\n                  } else {\r\n                    var encryptedAES = CryptoJS.AES.encrypt(\r\n                      login.password,\r\n                      \"@12#90!^*NPR*g&*()$34#$\"\r\n                    );\r\n                    var USERNAME = CryptoJS.AES.encrypt(\r\n                      login.username,\r\n                      \"@12#90!^*NPR*g&*()$34#$\"\r\n                    );\r\n\r\n                    var data = encryptedAES.toString();\r\n                    var uname = USERNAME.toString();\r\n\r\n                    login.password = data;\r\n                    login.username = uname;\r\n                    this.apiService.getOtp(login).subscribe(\r\n                      (res) => {\r\n                        this.variable = res;\r\n                        this.otpreceivedtime = new Date();\r\n                        if (this.variable) {\r\n                          if (\r\n                            this.variable[0] === \"Username or password wrong\"\r\n                          ) {\r\n                            // this.toastService.errorMessage(\r\n                            //   \"Invalid UserId or Password !!!\",\r\n                            //   \"\"\r\n                            // );\r\n                            this.count = 0;\r\n                          }\r\n                          if (res.failLgnCounter != 0) {\r\n                            this.apiService\r\n                              .fetchSecurityPolicyService()\r\n                              .subscribe((sp) => {\r\n                                this.security = sp;\r\n                                this.invLogins = this.security.maxInvLogins;\r\n                                if (this.invLogins !== 0) {\r\n                                  this.invLogins = this.invLogins - 1;\r\n                                  if (this.invLogins === res.failLgnCounter) {\r\n                                    this.toastService.errorMessage(\r\n                                      \"Contact Admin, User Account locked after \" +\r\n                                      `${res.failLgnCounter + 1}` +\r\n                                      \" wrong attempts.\",\r\n                                      \"\"\r\n                                    );\r\n                                    this.count = 0;\r\n                                  }\r\n                                }\r\n                              });\r\n                          }\r\n                          // ---------- Password Policy Implementation (END) ----------\r\n                          if (this.variable[0] === \"true\") {\r\n                            this.roles(this.user);\r\n                          } else {\r\n                            if (\r\n                              this.variable[0] ===\r\n                              \"Username or password wrong\" ||\r\n                              this.variable[0] === \"User not found\"\r\n                            ) {\r\n                              Swal.fire(\"Username or Password is wrong\");\r\n                              this.count = 0;\r\n                            } else {\r\n                              // Swal.fire(this.variable[0]);\r\n                              Swal.fire(\r\n                                \"Account blocked, maximum failed attempts reached. To login, please do Forgot Password and then try for login.\"\r\n                              );\r\n                              this.loginProcessing = false;\r\n                              this.count = 0;\r\n                            }\r\n                          }\r\n                        }\r\n                      },\r\n\r\n                      (err) => {\r\n                        this.toastService.errorMessage(\"Server Error\", \"\");\r\n                        this.loginProcessing = false;\r\n                        this.count = 0;\r\n                      }\r\n                    ),\r\n                      (error) => { };\r\n                  }\r\n                }\r\n              }\r\n            });\r\n          }\r\n        },\r\n        (err: any) => {\r\n          console.log(err);\r\n          // Swal.fire(err.error.message);\r\n          Swal.fire(\"Username or Password is wrong\");\r\n          this.count = 0;\r\n          // this.toastService.errorMessage('Unable to update the record, server error!', '');\r\n        }\r\n      );\r\n    }\r\n  }\r\n  roles(user) {\r\n    let remainingRolesToFetch = user.newRoleForUser.length;\r\n    for (let index = 0; index < user.newRoleForUser.length; index++) {\r\n      this.roleService\r\n        .fetchdynamicrolesdata(user.newRoleForUser[index])\r\n        .subscribe((data) => {\r\n          this.arrayOfAuthStatus[index] = data.roleDto.authStatus;\r\n          remainingRolesToFetch--;\r\n          if (remainingRolesToFetch === 0) {\r\n            this.isUserRoleAuthorized();\r\n          } else {\r\n            console.log(\"roles----\");\r\n          }\r\n        }),\r\n        (error) => { };\r\n    }\r\n  }\r\n  isUserRoleAuthorized() {\r\n    if (this.arrayOfAuthStatus.includes(\"A\") !== true) {\r\n      Swal.fire({\r\n        text: \"Role is not authorized for the user\",\r\n        icon: \"error\",\r\n      }).then((result) => {\r\n        localStorage.clear();\r\n        sessionStorage.clear();\r\n        this.signinForm.reset();\r\n        this.backToLogin();\r\n      });\r\n    } else {\r\n      console.log(\"else part isUserRoleAuthorized--- \");\r\n      this.progress = true;\r\n      this.toggle();\r\n      this.toastService.successMessage(\r\n        \"OTP sent successfully to \" + this.email,\r\n        \"\"\r\n      );\r\n      this.loginProcessing = false;\r\n      this.verifyOTP = true;\r\n    }\r\n    this.arrayOfAuthStatus = [];\r\n  }\r\n\r\n  skipLoginUser() {\r\n    this.ls.setItem(\"currentUser\", this.demoUser.currentUser);\r\n    this.ls.setItem(\"userPermissions\", this.demoUser.userPermissions);\r\n    this.ls.setItem(\"department\", this.demoUser.department);\r\n    this.ls.setItem(\"LoggedInUser\", this.demoUser.LoggedInUser);\r\n    this.ls.setItem(\"userobj\", this.demoUser.userobj);\r\n    this.ls.setItem(\"usercompleteobj\", this.demoUser.usercompleteobj);\r\n    sessionStorage.setItem(\"user_id\", this.demoUser.currentUser);\r\n    this.router.navigate([\"/dashboard\"]);\r\n    this.jwtAuth.setUserAndToken(\"affsff\", {}, true);\r\n    // Skip login Section end\r\n  }\r\n\r\n  resendOtpMethod() {\r\n    this.isValid = false;\r\n    this.ngOtpInput.setValue(\"\");\r\n    let login: any = {};\r\n    login.username = this.signinForm.value.username;\r\n    login.password = this.signinForm.value.password;\r\n    var encryptedAES = CryptoJS.AES.encrypt(\r\n      this.signinForm.value.password,\r\n      \"@12#90!^*NPR*g&*()$34#$\"\r\n    );\r\n    var USERNAME = CryptoJS.AES.encrypt(\r\n      this.signinForm.value.username,\r\n      \"@12#90!^*NPR*g&*()$34#$\"\r\n    );\r\n    var data = encryptedAES.toString();\r\n    var uname = USERNAME.toString();\r\n    this.apiService\r\n      .fetchMedUser(this.signinForm.value.username)\r\n      .subscribe((response) => {\r\n        this.user = response;\r\n        this.email = this.user.email;\r\n        localStorage.setItem(\"userFromLogin\", this.user.userId);\r\n        sessionStorage.setItem(\"user_id\", this.user.userId);\r\n        if (\r\n          this.user.statusForUser === \"Enable\" &&\r\n          this.user.verifiedStatus === \"A\"\r\n        ) {\r\n          //---------- Password Policy Implementation (BEGIN) ----------\r\n          this.apiService.fetchSecurityPolicyService().subscribe((resp) => {\r\n            this.security = resp;\r\n            this.notifyPswdExpry = this.security.notifyPasswordExpiryInDays;\r\n            this.pswdExpiry = this.security.pswdExpiry;\r\n            if (this.pswdExpiry === 0 && this.notifyPswdExpry === 0) {\r\n            } else {\r\n              this.currentDate = new Date();\r\n              this.changePwdDate = new Date(this.user.pwdChangeDate);\r\n              this.differnceInTime = this.currentDate - this.changePwdDate;\r\n              this.differnceInDays = Math.floor(\r\n                this.differnceInTime / (1000 * 3600 * 24)\r\n              );\r\n              this.finalDiff = this.pswdExpiry - this.differnceInDays;\r\n\r\n              if (this.finalDiff === 0 || this.finalDiff <= 0) {\r\n                this.toastService.errorMessage(\r\n                  \"Your Password is expired. Please reset your password.\",\r\n                  \"\"\r\n                );\r\n              } else {\r\n                this.check = true;\r\n\r\n                if (\r\n                  this.signinForm.value.password === \"\" ||\r\n                  this.signinForm.value.username === \"\"\r\n                ) {\r\n                  this.toastService.errorMessage(\r\n                    \"Please enter login credentials.\",\r\n                    \"\"\r\n                  );\r\n                } else {\r\n                  var encryptedAES = CryptoJS.AES.encrypt(\r\n                    login.password,\r\n                    \"@12#90!^*NPR*g&*()$34#$\"\r\n                  );\r\n                  var USERNAME = CryptoJS.AES.encrypt(\r\n                    login.username,\r\n                    \"@12#90!^*NPR*g&*()$34#$\"\r\n                  );\r\n\r\n                  var data = encryptedAES.toString();\r\n                  var uname = USERNAME.toString();\r\n\r\n                  login.password = data;\r\n                  login.username = uname;\r\n                  this.apiService.getOtp(login).subscribe(\r\n                    (res) => {\r\n                      this.variable = res;\r\n                      this.otpreceivedtime = new Date();\r\n                      if (this.variable) {\r\n                        if (this.variable[0] === \"Username or password wrong\") {\r\n                          this.toastService.errorMessage(\r\n                            \"Invalid UserId or Password !!!\",\r\n                            \"\"\r\n                          );\r\n                        }\r\n                        if (res.failLgnCounter != 0) {\r\n                          this.apiService\r\n                            .fetchSecurityPolicyService()\r\n                            .subscribe((sp) => {\r\n                              this.security = sp;\r\n                              this.invLogins = this.security.maxInvLogins;\r\n                              if (this.invLogins !== 0) {\r\n                                this.invLogins = this.invLogins - 1;\r\n                                if (this.invLogins === res.failLgnCounter) {\r\n                                  this.toastService.errorMessage(\r\n                                    \"Contact Admin, User Account locked after \" +\r\n                                    `${res.failLgnCounter + 1}` +\r\n                                    \" wrong attempts.\",\r\n                                    \"\"\r\n                                  );\r\n                                }\r\n                              }\r\n                            });\r\n                        }\r\n                        // ---------- Password Policy Implementation (END) ----------\r\n\r\n                        if (this.variable[0] === \"true\") {\r\n                          this.progress = true;\r\n                          this.toastService.successMessage(\r\n                            \"OTP sent successfully to \" + this.email,\r\n                            \"\"\r\n                          );\r\n                          this.loginProcessing = false;\r\n                          this.verifyOTP = true;\r\n                        } else {\r\n                        }\r\n                      }\r\n                    },\r\n\r\n                    (err) => {\r\n                      this.toastService.errorMessage(\"Server Error\", \"\");\r\n                      this.loginProcessing = false;\r\n                    }\r\n                  );\r\n                }\r\n              }\r\n            }\r\n          });\r\n        }\r\n      });\r\n  }\r\n  signin() {\r\n    let otp: any = {};\r\n    otp.username = this.signinForm.value.username;\r\n    otp.otp = this.otp;\r\n    // otp.systemCode=this.browserKey;\r\n    this.apiService.loginService(otp).subscribe(\r\n      (res) => {\r\n        this.responseforotp = res;\r\n\r\n        if (this.responseforotp[0] == \"OTP is invalid\") {\r\n          this.toastService.errorMessage(\"Enter the Valid OTP.\", \"\");\r\n        }\r\n\r\n        this.apiService.fetchMedUser(otp.username).subscribe((response) => {\r\n          this.user = response;\r\n\r\n          // if (this.responseforotp) {\r\n          if (this.user != null) {\r\n            if (this.responseforotp[0] == \"Time Expired\") {\r\n              this.toastService.errorMessage(\r\n                \"This OTP is expired. Please click on Resend OTP to get a new OTP.\",\r\n                \"\"\r\n              );\r\n              this.check = false;\r\n            }\r\n\r\n            this.loginProcessing = false;\r\n            this.user = this.responseforotp[0];\r\n\r\n            this.loginProcessing = false;\r\n\r\n            localStorage.setItem(\"userFromLogin\", this.user.userId);\r\n            sessionStorage.setItem(\"user_id\", this.user.userId);\r\n\r\n            if (\r\n              this.user.statusForUser === \"Enable\" &&\r\n              this.user.verifiedStatus === \"A\"\r\n            ) {\r\n              //---------- Password Policy Implementation (BEGIN) ----------\r\n\r\n              this.apiService.fetchSecurityPolicyService().subscribe((resp) => {\r\n                this.security = resp;\r\n                this.notifyPswdExpry = this.security.notifyPasswordExpiryInDays;\r\n                this.pswdExpiry = this.security.pswdExpiry;\r\n                if (this.pswdExpiry === 0 && this.notifyPswdExpry === 0) {\r\n                  // this.router\r\n                  //   .navigate([\"/dashboard\"])\r\n                  //   .then((data) => console.log(\"dashboard hit\", data));\r\n                  this.count = 0;\r\n                } else {\r\n                  this.currentDate = new Date();\r\n\r\n                  this.changePwdDate = new Date(this.user.pwdChangeDate);\r\n                  this.differnceInTime = this.currentDate - this.changePwdDate;\r\n                  this.differnceInDays = Math.floor(\r\n                    this.differnceInTime / (1000 * 3600 * 24)\r\n                  );\r\n\r\n                  this.finalDiff = this.pswdExpiry - this.differnceInDays;\r\n                  if (this.finalDiff === 0 || this.finalDiff <= 0) {\r\n                    this.toastService.errorMessage(\r\n                      \"Your password expired, Please change your password\",\r\n                      \"\"\r\n                    );\r\n                    this.router\r\n                      .navigate([\"/forget-password\"])\r\n                      .then((data) => console.log(\"Forget password hit\", data));\r\n                  } else {\r\n                    //---------- Password Policy Implementation (END) ----------\r\n\r\n                    // this.router.navigate([\"/dashboard\"])\r\n\r\n                    //---------- Password Policy Implementation (BEGIN) ----------\r\n\r\n                    this.currentUser = localStorage.getItem(\"currentUser\");\r\n                    this.apiService\r\n                      .fetchMedUser(otp.username)\r\n                      .subscribe((response) => {\r\n                        this.userEntity = response;\r\n                        console.log(\"userEntity \", this.userEntity);\r\n                        this.apiService\r\n                          .fetchSecurityPolicyService()\r\n                          .subscribe((resp) => {\r\n                            this.security = resp;\r\n                            this.notifyPswdExpry =\r\n                              this.security.notifyPasswordExpiryInDays;\r\n                            this.pswdExpiry = this.security.pswdExpiry;\r\n\r\n                            if (\r\n                              this.pswdExpiry !== 0 &&\r\n                              this.notifyPswdExpry !== 0\r\n                            ) {\r\n                              this.currentDate = new Date();\r\n                              this.changePwdDate = new Date(\r\n                                this.userEntity.pwdChangeDate\r\n                              );\r\n                              this.differnceInTime =\r\n                                this.currentDate - this.changePwdDate;\r\n                              this.differnceInDays = Math.floor(\r\n                                this.differnceInTime / (1000 * 3600 * 24)\r\n                              );\r\n                              console.log(\"today's date \", this.currentDate);\r\n                              console.log(\r\n                                \"pswd created date \",\r\n                                this.changePwdDate\r\n                              );\r\n                              console.log(\r\n                                \"no of days diff \",\r\n                                this.differnceInDays\r\n                              );\r\n                              this.finalDiff =\r\n                                this.pswdExpiry - this.differnceInDays;\r\n                              console.log(\r\n                                \"notify user on password expiry\",\r\n                                this.notifyPswdExpry\r\n                              );\r\n                              console.log(\r\n                                \"pwd expiry \",\r\n                                this.security.pswdExpiry\r\n                              );\r\n                              console.log(\"final diff\", this.finalDiff);\r\n\r\n                              if (\r\n                                this.finalDiff > 0 &&\r\n                                this.finalDiff <= this.notifyPswdExpry\r\n                              ) {\r\n                                this.toastService.errorMessage(\r\n                                  \"Your password will expire in \" +\r\n                                  `${this.finalDiff}` +\r\n                                  \" day(s)\",\r\n                                  \"\"\r\n                                );\r\n                              }\r\n                              // this.roles(this.user);\r\n                              this.showToast();\r\n                            }\r\n                          });\r\n                      });\r\n                    //  ---------- Password Policy Implementation (END) ----------\r\n                  }\r\n                }\r\n              });\r\n            }\r\n            this.roleService.fetchNewRolePermissions(this.user.userId);\r\n          }\r\n        });\r\n      },\r\n      (err) => {\r\n        this.loginProcessing = false;\r\n\r\n        this.toastService.errorMessage(\"Server Error \", \"\");\r\n      }\r\n    );\r\n  }\r\n  routing() {\r\n    console.log(this.userEntity);\r\n    this.jwtAuth.signin().subscribe(\r\n      (response) => {\r\n        setTimeout(() => {\r\n          this.ls.setItem(\"currentUser\", this.userEntity.userId);\r\n          this.ls.setItem(\"userobj\", this.userEntity);\r\n          this.ls.setItem(\"usercompleteobj\", this.userEntity);\r\n          this.router.navigate([\"/dashboard\"]);\r\n          this.iziToast.show({\r\n            title: `DTB - Median!`,\r\n            message: `Welcome, ${this.userEntity.userId}!`,\r\n            image: \"assets/images/user.png\",\r\n            icon: \"ico ico-success\",\r\n            // theme:\"dark\",\r\n            layout: 2,\r\n            // imageWidth:50,\r\n            balloon: false,\r\n            position: \"topRight\",\r\n            progressBarColor: \"red\",\r\n            pauseOnHover: true,\r\n          });\r\n        }, 2500);\r\n      },\r\n      (err) => {\r\n        // console.log(err);\r\n      }\r\n    );\r\n  }\r\n  getUser() {\r\n    this.user1 = localStorage.getItem(\"userobj\");\r\n    this.apiService\r\n      .fetchMedUser(JSON.parse(this.user1).userId)\r\n      .subscribe((response) => {\r\n        this.initTheme(response.screenThemeSelected);\r\n      });\r\n  }\r\n  initTheme(bgClass) {\r\n    var lastBg = bgClass === \"theme2\" ? \"theme2\" : \"theme1\";\r\n    $(\"body\").removeClass(lastBg).addClass(bgClass);\r\n    this.lastBg = bgClass;\r\n    $(\".ddParent\").removeClass(\"actDD\");\r\n    if (bgClass === \"theme1\") {\r\n      console.log($(\"#themeChangeRadio:nth-child(1)\"));\r\n      $('[data-id=\"theme1\"]').addClass(\"active\");\r\n      $('[data-id=\"theme2\"]').removeClass(\"active\");\r\n    } else {\r\n      $('[data-id=\"theme1\"]').removeClass(\"active\");\r\n      $('[data-id=\"theme2\"]').addClass(\"active\");\r\n    }\r\n  }\r\n  showToast() {\r\n    this.ls.setItem(\"currentUser\", this.userEntity?.userId);\r\n    this.ls.setItem(\"userobj\", this.userEntity);\r\n    this.ls.setItem(\"usercompleteobj\", this.userEntity);\r\n    if (\r\n      this.userEntity?.logoutTime === null &&\r\n      this.userEntity?.passwordGenerationType === \"Auto\"\r\n    ) {\r\n      this.router.navigate([\"/change-password\"]);\r\n    } else {\r\n      this.router.navigate([\"/dashboard\"]);\r\n    }\r\n    this.iziToast.show({\r\n      title: `DTB - Median!`,\r\n      message: `Welcome, ${this.userEntity?.userId}!`,\r\n      image: \"assets/images/user.png\",\r\n      icon: \"ico ico-success\",\r\n      // theme:\"dark\",\r\n      layout: 2,\r\n      // imageWidth:50,\r\n      balloon: false,\r\n      position: \"topRight\",\r\n      progressBarColor: \"red\",\r\n      pauseOnHover: true,\r\n    });\r\n  }\r\n  backToLogin() {\r\n    this.showOtpComponent = false;\r\n    this.count = 0;\r\n  }\r\n  onOtpChange(otp: string) {\r\n    this.otp = otp;\r\n    if (this.otp.length === 6) {\r\n      this.isValid = true;\r\n      const signinData = this.signinForm.value;\r\n    }\r\n  }\r\n\r\n  showTimer(remaining) {\r\n    let timerOn = true;\r\n    this.m = Math.floor(remaining / 60);\r\n    this.s = remaining % 60;\r\n\r\n    this.m = this.m < 10 ? \"0\" + this.m : this.m;\r\n    this.s = this.s < 10 ? \"0\" + this.s : this.s;\r\n    this.cd.detectChanges();\r\n\r\n    remaining -= 1;\r\n\r\n    if (remaining >= 0 && timerOn) {\r\n      setTimeout(() => {\r\n        this.showTimer(remaining);\r\n      }, 1000);\r\n      return;\r\n    }\r\n\r\n    if (!timerOn) {\r\n      // Do validate stuff here\r\n      return;\r\n    }\r\n\r\n    // Do timeout stuff here\r\n    this.timeOutOtp = true;\r\n    this.m = null;\r\n    this.s = null;\r\n    this.cd.markForCheck();\r\n  }\r\n\r\n  toggleVisibility() {\r\n    if (this.visible) {\r\n      this.inputType = \"password\";\r\n      this.visible = false;\r\n      this.cd.markForCheck();\r\n    } else {\r\n      this.inputType = \"text\";\r\n      this.visible = true;\r\n      this.cd.markForCheck();\r\n    }\r\n  }\r\n\r\n  resendOtp() {\r\n    this.timeOutOtp = false;\r\n    this.showTimer(60);\r\n  }\r\n\r\n  obscureEmail(email) {\r\n    const [name, domain] = email.split(\"@\");\r\n    return `${name.substring(0, 5)}${new Array(name.length).join(\r\n      \"*\"\r\n    )}@${domain}`;\r\n  }\r\n}\r\nexport class User {\r\n  //  id: number;\r\n  applications: string;\r\n  changePassword: boolean;\r\n  createdAt: Date;\r\n  creatorDtStamp: Date;\r\n  creatorId: string;\r\n  currentSignInAt: Date;\r\n  currentSignInIp: string;\r\n  email: string;\r\n  emailNotification: string;\r\n  encryptedPassword: string;\r\n  failedAttempts: number;\r\n  lastSignInAt: Date;\r\n  ldapUserId: string;\r\n  lockedAt: Date;\r\n  mobile: number;\r\n  msadUserId: string;\r\n  notificationEmails: string;\r\n  notificationMobiles: boolean;\r\n  rememberCreatedAt: Date;\r\n  resetPasswordSentAt: Date;\r\n  resetPasswordToken: string;\r\n  recordStatus: string;\r\n  signInCount: number;\r\n  smsNotification: boolean;\r\n  unlockToken: string;\r\n  updatedAt: Date;\r\n  userId: string;\r\n  userName: string;\r\n  verified: boolean;\r\n  verifierDtStamp: Date;\r\n  verifierId: string;\r\n  // authStatus: string;\r\n  passwordGenerationType: string;\r\n  verifiedStatus: string;\r\n  autoAuth: boolean;\r\n  maintAllowed: boolean;\r\n  userAccessOption: string;\r\n  roleForUser: string;\r\n  versionNo: string;\r\n  updatedBy: string;\r\n  logoutTime: string;\r\n  fristTimeAuth: string;\r\n  fristTimeLogin: string;\r\n  newRoleForUser: any;\r\n  statusForUser: string;\r\n  disableUser: string;\r\n  pwdChangeDate: Date;\r\n  department: any;\r\n}\r\nexport class SecurityDto {\r\n  clientId: number;\r\n  maxInvLogins: number;\r\n  maxPswdLength: number;\r\n  minPswdLength: number;\r\n  pswdExpiry: number;\r\n  notifyPasswordExpiryInDays: number;\r\n  pswdReuseAft: number;\r\n  pswdComplexLcase: any;\r\n  pswdComplexNum: any;\r\n  pswdComplexSplc: any;\r\n  passwordGenerationType: any;\r\n  pswdComplexUcase: any;\r\n  authStatus: string;\r\n  authorizedBy: string;\r\n  authorizedTime: Date;\r\n  modifiedBy: string;\r\n  modifiedTime: Date;\r\n  pswdComplexity: string;\r\n  version: number;\r\n}\r\n","import { CUSTOM_ELEMENTS_SCHEMA, NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { LoginRoutingModule } from './login-routing.module';\r\nimport { LoginComponent } from './login.component';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { DEMO_USER } from './DEMO_USER';\r\nimport { NgOtpInputModule } from 'ng-otp-input';\r\nimport { NgxSpinnerModule } from \"ngx-spinner\";\r\nimport { Ng2IziToastModule } from 'ng2-izitoast';\r\n\r\n@NgModule({\r\n  declarations: [LoginComponent],\r\n  imports: [\r\n    CommonModule,\r\n    LoginRoutingModule,\r\n    ReactiveFormsModule,\r\n    NgOtpInputModule,\r\n    NgxSpinnerModule,\r\n    Ng2IziToastModule\r\n  ],\r\n  providers:[DEMO_USER],\r\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\r\n})\r\nexport class LoginModule {\r\n}\r\n"]}