{"version":3,"file":"src_app_views_forget-password_forget-password_module_ts-es2015.js","mappings":"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","sources":["./src/app/shared/services/login.service.ts","./src/app/shared/services/toast.service.ts","./src/app/views/forget-password/forget-password-routing.module.ts","./src/app/views/forget-password/forget-password.component.ts","./src/app/views/forget-password/forget-password.component.html","./src/app/views/forget-password/forget-password.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { AppConstants } from 'src/app/shared/config/app.constant';\r\n// import { any } from 'src/app/shared/models/user';\r\n// import  } from 'src/app/shared/models/login';\r\n// import { any } from '../security-policy/security-policy/security-dto';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LoginService {\r\n  private uri = AppConstants.baseURL;\r\n  dashboardapi =  AppConstants.baseURL + '/dashboard';\r\n  userapi= AppConstants.baseURL + '/users';\r\n  public departmentname:BehaviorSubject<any> = new BehaviorSubject<any>('');\r\n  public logouttime:BehaviorSubject<any> = new BehaviorSubject<any>('');\r\n\r\n  constructor(private http: HttpClient) { }\r\n  getOtp(login) {\r\n    return this.http.post<any>(`${this.uri}/login/otp`, login);\r\n  }\r\n  loginService(login) {\r\n    return this.http.post<any>(`${this.uri}/login/credentials`, login);\r\n  }\r\n  forgetPassword(login) {\r\n    return this.http.post<any>(`${this.uri}/login/forgetPsw`, login);\r\n  }\r\n  fristTimePassword(login) {\r\n    return this.http.post<any>(`${this.uri}/user/passwordReset`, login);\r\n  }\r\n  getOtpForReset(login) {\r\n    return this.http.post<any>(`${this.uri}/users/otpForReset`, login);\r\n  }\r\n  userPasswordExpireNotif(user_id) {\r\n    return this.http.get(`${this.uri}/login/pwdNotif/${user_id}`);\r\n  }\r\n   \r\n  fetchSecurityPolicyService() {\r\n    return this.http.get<any>(`${this.uri}/securityPolicy/fetch`);\r\n  }\r\n  fetchMedUser(userId) {\r\n    return this.http.get<any>(`${this.uri}/login/getUserByUserId/${userId}`);\r\n  }\r\n\r\n  settingdepartmentlogged(department, lastloggedin)\r\n  {\r\n     this.departmentname.next(department);\r\n     this.logouttime.next(lastloggedin);\r\n  }\r\n\r\n  gettingloginTimeandDepartment(userName)\r\n  {\r\n    return this.http.get<any>(`${this.userapi}/loganddept/${userName}`)\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Ng2IzitoastService } from 'ng2-izitoast';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ToastService {\r\n\r\n  constructor(\r\n    public iziToast: Ng2IzitoastService\r\n  ) { }\r\n\r\n  successMessage(title: string, msg: string) {\r\n    this.iziToast.success({\r\n      title: title,\r\n      message: msg,\r\n      layout: 2,\r\n      balloon: false,\r\n      position: \"topRight\",\r\n      progressBarColor: \"red\",\r\n      pauseOnHover: true,\r\n    });\r\n  }\r\n\r\n  errorMessage(title: string, msg: string) {\r\n    this.iziToast.error({\r\n      title: title,\r\n      message: msg,\r\n      layout: 2,\r\n      balloon: false,\r\n      position: \"topRight\",\r\n      progressBarColor: \"red\",\r\n      pauseOnHover: true,\r\n    });\r\n  }\r\n\r\n  infoMessage(title: string, msg: string) {\r\n    this.iziToast.info({\r\n      title: title,\r\n      message: msg,\r\n      layout: 2,\r\n      balloon: false,\r\n      position: \"topRight\",\r\n      progressBarColor: \"red\",\r\n      pauseOnHover: true,\r\n    });\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { ForgetPasswordComponent } from './forget-password.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: ForgetPasswordComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ForgetPasswordRoutingModule { }\r\n","import { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport {\r\n  FormBuilder,\r\n  FormControl,\r\n  FormGroup,\r\n  Validators,\r\n} from \"@angular/forms\";\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\nimport { ApiService } from \"src/app/shared/services/api.service\";\r\nimport { ToastService } from \"src/app/shared/services/toast.service\";\r\nimport { SecurityDto, User } from \"../auth/login/login.component\";\r\nimport * as CryptoJS from \"crypto-js\";\r\nimport { SecurityPolicyService } from \"src/app/shared/services/security-policy.service\";\r\nimport { LoginService } from \"src/app/shared/services/login.service\";\r\nimport Swal from 'sweetalert2';\r\n@Component({\r\n  selector: \"npr-forget-password\",\r\n  templateUrl: \"./forget-password.component.html\",\r\n  styleUrls: [\"./forget-password.component.scss\"],\r\n})\r\nexport class ForgetPasswordComponent implements OnInit {\r\n  @ViewChild(\"ngOtpInput\", { static: false }) ngOtpInput: any;\r\n  config = {\r\n    allowNumbersOnly: true,\r\n    length: 6,\r\n    isPasswordInput: false,\r\n    disableAutoFocus: false,\r\n    placeholder: \"*\",\r\n    inputStyles: { width: \"40px\", height: \"40px\"},\r\n    \r\n  };\r\n  loginProcessing = false;\r\n  passwordReset1: any;\r\n  login = new Login();\r\n  res: any;\r\n  editable: boolean = false;\r\n  finalpattern: string;\r\n  responseMsg: any;\r\n  responseError: any;\r\n  passwordDTO: any;\r\n  passwordStatus: boolean;\r\n  msg: any;\r\n  userId: string;\r\n  lowerCase: string;\r\n  security: SecurityDto;\r\n  security1: SecurityDto;\r\n  minPass: any;\r\n  maxPass: any;\r\n  ucase: any;\r\n  lcase: any;\r\n  num: any;\r\n  splc: any;\r\n\r\n  reactiveForm: FormGroup;\r\n  passwordRegex: any;\r\n  errorMsg: any = \"\";\r\n  username: string;\r\n  password: string;\r\n  otp: string;\r\n\r\n  hide = true;\r\n  hide1 = true;\r\n  hideConfirm = true;\r\n  modifyUserObject = new Login();\r\n  variable: any;\r\n  user: User;\r\n  var: any;\r\n  var1: any;\r\n  isReadOnly: any;\r\n  button1: any;\r\n  spinnerbutton: boolean;\r\n  button2: any;\r\n  login1 = new Login();\r\n  otpBtn:boolean=false;\r\n  submitBtn:boolean=false;\r\n  email: string;\r\n  getOtpButtonEnable: boolean=true;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private apiService: LoginService,\r\n    private fb: FormBuilder,\r\n\r\n    private toastService: ToastService,\r\n    private securityService: SecurityPolicyService\r\n  ) {\r\n    this.route.queryParams.subscribe((params) => {\r\n\r\n      this.modifyUserObject.username = params.userId;\r\n   \r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n  \r\n    this.isReadOnly = false;\r\n    this.button2 = true;\r\n    this.reactiveForm = this.fb.group({\r\n      userId: new FormControl(\"\"), // added\r\n      otp: new FormControl(\"\", [Validators.required]),\r\n      password: new FormControl(\"\", [\r\n        Validators.required,\r\n        Validators.compose([\r\n          Validators.pattern(this.passwordRegex),\r\n          Validators.maxLength(this.maxPass),\r\n          Validators.minLength(this.minPass),\r\n        ]),\r\n      ]),\r\n      confirmPassword: new FormControl(\"\", [\r\n        Validators.required,\r\n        Validators.compose([\r\n          Validators.pattern(this.passwordRegex),\r\n          Validators.maxLength(this.maxPass),\r\n          Validators.minLength(this.minPass),\r\n        ]),\r\n      ]),\r\n    });\r\n\r\n    this.userId = localStorage.getItem(\"userIdForChangePassword\");\r\n    let a, b;\r\n    this.securityService.fetchSecurityPolicyService().subscribe((resp) => {\r\n      this.security = resp;\r\n      console.log(this.security);\r\n      this.minPass = this.security.minPswdLength;\r\n      this.maxPass = this.security.maxPswdLength;\r\n\r\n      this.buildForm(this.minPass, this.maxPass);\r\n      console.log(this.minPass, this.maxPass);\r\n      console.log(this.security);\r\n    });\r\n    this.buildForm(\r\n      this.minPass ? this.minPass : a,\r\n      this.maxPass ? this.maxPass : b\r\n    );\r\n  }\r\n  buildForm(a, b) {\r\n    this.securityService.fetchSecurityPolicyService().subscribe((resp) => {\r\n      this.security1 = resp;\r\n      this.ucase = this.security1.pswdComplexUcase;\r\n      this.lcase = this.security1.pswdComplexLcase;\r\n      this.num = this.security1.pswdComplexNum;\r\n      this.splc = this.security1.pswdComplexSplc;\r\n\r\n      if (this.security1.pswdComplexUcase==\"true\") {\r\n        this.passwordRegex = '(?=[^A-Z]*[A-Z])';\r\n        this.errorMsg = ' UpperCase';\r\n      }\r\n      if (this.security1.pswdComplexLcase==\"true\") {\r\n        this.passwordRegex = this.passwordRegex + '(?=[^a-z]*[a-z])';\r\n        if (this.errorMsg != '') {\r\n          this.errorMsg = this.errorMsg + ', LowerCase';\r\n        }\r\n        else {\r\n          this.errorMsg = this.errorMsg + ' LowerCase';\r\n        }\r\n      }\r\n      if(this.splc==\"true\") {\r\n        this.passwordRegex = this.passwordRegex  + '(?=.*[!@#$%^&*])';\r\n        if(this.errorMsg != '') \r\n          this.errorMsg = this.errorMsg + \", Special Character\";  \r\n        else\r\n          this.errorMsg = this.errorMsg + \" Special Character\";\r\n      }\r\n      \r\n      if (this.security1.pswdComplexNum==\"true\") {\r\n        this.passwordRegex = this.passwordRegex + '(?=[^0-9]*[0-9])';\r\n        if (this.errorMsg != '') {\r\n          this.errorMsg = this.errorMsg + ', Number';\r\n        }\r\n        else {\r\n          this.errorMsg = this.errorMsg + ' Number';\r\n        }\r\n      }\r\n    \r\n      this.passwordRegex =\r\n        this.passwordRegex + \".{\" + this.minPass + \",\" + this.maxPass + \"}\";\r\n      this.errorMsg =\r\n        \"Password must contain atleast one \" + this.errorMsg + \".\";\r\n      console.log(this.passwordRegex);\r\n\r\n\r\n      this.reactiveForm = this.fb.group({\r\n        userId: new FormControl(\"\"),\r\n        otp: new FormControl(\"\", [Validators.required]),\r\n        password: new FormControl(\"\", [\r\n          Validators.required,\r\n          Validators.compose([\r\n            Validators.pattern(this.passwordRegex),\r\n            Validators.maxLength(this.maxPass),\r\n            Validators.minLength(this.minPass),\r\n          ]),\r\n        ]),\r\n        confirmPassword: new FormControl(\"\", [\r\n          Validators.required,\r\n          Validators.compose([\r\n            Validators.pattern(this.passwordRegex),\r\n            Validators.maxLength(this.maxPass),\r\n            Validators.minLength(this.minPass),\r\n          ]),\r\n        ]),\r\n      });\r\n    });\r\n\r\n    console.log(this.minPass, this.maxPass);\r\n    console.log(\"form\", this.reactiveForm);\r\n  }\r\n  resetButton(){\r\n    this.reactiveForm.reset();\r\n  }\r\n  reset(login: Login) {\r\n    if (!login.username) {\r\n     this.toastService.infoMessage(\"Enter User Id.\", \"\");\r\n      return;\r\n    }\r\n\r\n    var encryptedAES = CryptoJS.AES.encrypt(\r\n      login.password,\r\n      \"@12#90!^*NPR*g&*()$34#$\"\r\n    );\r\n    var USERNAME = CryptoJS.AES.encrypt(\r\n      login.username,\r\n      \"@12#90!^*NPR*g&*()$34#$\"\r\n    );\r\n\r\n    var data = encryptedAES.toString();\r\n    var uname = USERNAME.toString();\r\n    this.login1.password = data;\r\n    this.login1.username = uname;\r\n\r\n    this.login1.otp = this.otp;\r\n    console.log(this.login1);\r\n    this.spinnerbutton = true;\r\n    this.apiService.forgetPassword(this.login1).subscribe((res) => {\r\n      this.var1 = res;\r\n      console.log(this.var1);\r\n      if (this.var1) {\r\n        this.spinnerbutton = false;\r\n        if (this.var1[0] === \"Login success.\") {\r\n          this.otpBtn=true;\r\n          this.submitBtn=true;\r\n          Swal.fire({text:\r\n            \"password Changed Successfully.\"}\r\n           \r\n          );\r\n        } else {\r\n          Swal.fire({text:this.var1[0]});\r\n        }\r\n      } else {\r\n        this.spinnerbutton = false;\r\n\r\n        Swal.fire({\r\n         text: \"Choose Other Password or otp is invalid.\"\r\n        }\r\n        );\r\n      }\r\n    });\r\n  }\r\n  getOtp(username) {\r\n    this.loginProcessing = true;\r\n    if (!username) {\r\n      Swal.fire({text:\"Enter User Id.\"});\r\n      return;\r\n    }\r\n    this.apiService.fetchMedUser(username).subscribe(\r\n      (response) => {\r\n        console.log(response);\r\n        this.user = response;\r\n     \r\n        this.email = this.user.email;\r\n        localStorage.setItem(\"userFromLogin\", this.user.userId);\r\n        sessionStorage.setItem(\"user_id\", this.user.userId);\r\n      \r\n\r\n    var USERNAME = CryptoJS.AES.encrypt(username, \"@12#90!^*NPR*g&*()$34#$\");\r\n    var uname = USERNAME.toString();\r\n    console.log(uname);\r\n\r\n    this.spinnerbutton = true;\r\n    this.passwordReset1 = uname;\r\n    console.log(\"uname\", uname);\r\n    this.apiService.getOtpForReset(this.passwordReset1).subscribe(\r\n      (res) => {\r\n        this.loginProcessing = false;\r\n        this.var = res;\r\n        if (this.var) {\r\n          this.button1 = true;\r\n          this.button2 = false;\r\n          this.isReadOnly = true;\r\n          this.spinnerbutton = false;\r\n          this.toastService.successMessage(\r\n            \"OTP sent successfully to \" + this.email,\r\n            \"\"\r\n          );\r\n          this.getOtpButtonEnable=false;\r\n        } else {\r\n          Swal.fire(\r\n           {text: \"Unable to find User details.Verify your userid.\"}\r\n          );\r\n          this.button1 = false;\r\n          this.button2 = true;\r\n          this.isReadOnly = true;\r\n          this.spinnerbutton = false;\r\n        }\r\n      })\r\n      },\r\n      (err: any) => {\r\n        // Swal.fire(\r\n        // {text:  \"Server Error,Unable to connect server.\"}\r\n        Swal.fire(err.error.message\r\n        );\r\n      }\r\n    );\r\n  }\r\n  goHome() {\r\n    this.router.navigate([\"/login\"]);\r\n  }\r\n  onOtpChange(otp: string) {\r\n    this.otp = otp;\r\n    if (this.otp.length === 6) {\r\n     this.reactiveForm.get('otp').setValue(this.otp);\r\n    }\r\n  }\r\n  public changePassword(\r\n    newPassword: string,\r\n    confirmPassword: string,\r\n    userId: string,\r\n    otp\r\n  ) {\r\n    console.log(newPassword, confirmPassword, userId, otp);\r\n    if (newPassword != confirmPassword) {\r\n      Swal.fire({text:\"Password Not Matched.\"});\r\n    } else {\r\n      this.loginProcessing = true;\r\n      let encryptedAES = CryptoJS.AES.encrypt(\r\n        newPassword,\r\n        \"@12#90!^*NPR*g&*()$34#$\"\r\n      );\r\n      let USERNAME = CryptoJS.AES.encrypt(userId, \"@12#90!^*NPR*g&*()$34#$\");\r\n\r\n      var data = encryptedAES.toString();\r\n      let uname = USERNAME.toString();\r\n      this.login.password = data;\r\n      this.login.username = uname;\r\n      this.login.otp = otp;\r\n      console.log(this.login);\r\n      this.apiService.forgetPassword(this.login).subscribe((res) => {\r\n        this.loginProcessing = false;\r\n        this.res = res;\r\n        console.log(this.res);\r\n        if (this.res) {\r\n          // this.spinnerbutton = false;\r\n          if (this.res[0] === \"Login success.\") {\r\n            this.otpBtn=true;\r\n            this.submitBtn=true;\r\n            Swal.fire(\r\n            { text: \"Password Changed Successfully.\"}\r\n            \r\n            );\r\n          } if (this.res[0] == \"Time Expired\") {\r\n            Swal.fire({text:\"This OTP is expired. Please click on Resend OTP to get a new OTP.\"\r\n            });\r\n            \r\n          }\r\n          if (\r\n            res[0] ==\r\n            \"You cannot use your previous password. Please choose another password\"\r\n          ) {\r\n            Swal.fire(\r\n              \"You can not use your last \" +this.security.pswdReuseAft +\r\n                \" passwords. Please choose another password.\",\r\n              \"\"\r\n            );\r\n          }\r\n          if (res[0] == \"OTP is invalid\") {\r\n            Swal.fire({text:\"Otp is invalid.\"});\r\n          }\r\n          if (res[0] == \"successfull\") {\r\n            this.otpBtn=true;\r\n            this.submitBtn=true;\r\n            Swal.fire(\r\n              {text:\"Password Changed Successfully.\"},\r\n             \r\n            );\r\n          }\r\n        } else {\r\n          Swal.fire(\r\n            {text:\"Choose Other Password or otp is invalid.\"}\r\n          );\r\n        }\r\n      });\r\n    }\r\n  }\r\n  exit()\r\n  {\r\n      localStorage.clear();\r\n      sessionStorage.clear();\r\n      this.router.navigate(['/session/login']);\r\n  }\r\n}\r\nexport class Login {\r\n  username: string;\r\n  password: string;\r\n  otp: string;\r\n}\r\n","<div class=\"pageContentMain\" class=\"mt-4\">\r\n\r\n  <form action=\"\" class=\"formStyle\" [formGroup]=\"reactiveForm\">\r\n    <div class=\"dbCardStyle fieldwidth\">\r\n      <h2 class=\"pageTitle text-center mb-md-4 mb-3\">Reset Password</h2>\r\n      <div class=\"row gy-4\">\r\n        <div class=\"col-12\">\r\n          <label class=\"formLbl\">User ID<span class=\"colorRed\">*</span></label>\r\n          <input id=\"User Id\" placeholder=\"User Id\" required class=\"form-control\" value=\"\" #user name=\"userId\"\r\n            formControlName=\"userId\" oninput=\"this.value = this.value.toUpperCase()\">\r\n        </div>\r\n        <!-- <div class=\"col-12\">\r\n          <label class=\"formLbl\">OTP<span class=\"colorRed\">*</span></label>\r\n          <input id=\"Otp\" placeholder=\"OTP\" required class=\"form-control\" value=\"\" #otp name=\"otp\"\r\n            formControlName=\"otp\">\r\n        </div> -->\r\n        <div class=\"mb-10 px-md-10\">\r\n          <!--begin::Label-->\r\n          <label class=\"formLbl\">OTP<span class=\"colorRed\">*</span></label>\r\n          <!--end::Label-->\r\n          <!--begin::Input group-->\r\n          <div class=\"d-flex flex-wrap flex-stack\">\r\n            <ng-otp-input #ngOtpInput [config]=\"config\" style=\"font-size: 20px;\" (onInputChange)=\"onOtpChange($event)\"  inputControls=\"9\"></ng-otp-input>\r\n          </div>\r\n          <!--begin::Input group-->\r\n        </div>\r\n        <div class=\"col-12\">\r\n          <div class=\"row\">\r\n            <div class=\"col\">\r\n          <label class=\"formLbl\">New Password<span class=\"colorRed\">*</span></label>\r\n        </div>\r\n      </div>\r\n          <div class=\"inputField \">\r\n          <div class=\"inputField pwdFldCol d-flex\">\r\n          <input id=\"password\" [type]=\"hide ? 'password' : 'text'\" placeholder=\"New Password\" required class=\"form-control\"\r\n          type=\"password\"  value=\"\" #newPassword name=\"password\" formControlName=\"password\">\r\n            <span toggle=\"#pwdFld\" class=\"alignSelf\" (click)=\"hide = !hide\">\r\n              <img class=\"showPwd\" *ngIf=\"!hide\" src=\"assets/images/show-icon.svg\" alt=\"...\">\r\n              <img class=\"hidePwd\"  *ngIf=\"hide\" src=\"assets/images/hide-icon.svg\" alt=\"...\">\r\n            </span>\r\n          </div>\r\n          </div>\r\n            <div class=\"invalid-feedback\"\r\n            *ngIf=\"reactiveForm.get('password').touched && !reactiveForm.get('password').valid\">\r\n            <div *ngIf=\"reactiveForm.get('password').errors.pattern\">{{errorMsg}}</div>\r\n          </div>\r\n          <div *ngIf=\"reactiveForm.get('password').hasError('minlength') \" class=\"invalid-feedback\">\r\n            New Password Password must contain Minimum {{minPass}} digits.\r\n          </div>\r\n          <div *ngIf=\"reactiveForm.get('password').hasError('maxlength')\" class=\"invalid-feedback\">\r\n            New Password must contain Maximum {{maxPass}} digits.\r\n          </div>\r\n        </div>\r\n     \r\n        <div class=\"col-12\">\r\n          <div class=\"row\">\r\n            <div class=\"col\">\r\n          <label class=\"formLbl\">Confirm Password<span class=\"colorRed\">*</span></label>\r\n        </div>\r\n      </div>\r\n      <div class=\"inputField \">\r\n        <div class=\"inputField pwdFldCol d-flex\">\r\n          <input id=\"confirm password\" placeholder=\"Confirm Password\" required class=\"form-control\" value=\"\"\r\n            #confirmPassword name=\"confirmPassword\" formControlName=\"confirmPassword\" [type]=\"hide1 ? 'password' : 'text'\" />\r\n            <span toggle=\"#pwdFld\" class=\"alignSelf\" (click)=\"hide1 = !hide1\">\r\n              <img class=\"showPwd\" *ngIf=\"!hide1\" src=\"assets/images/show-icon.svg\" alt=\"...\">\r\n              <img class=\"hidePwd\"  *ngIf=\"hide1\" src=\"assets/images/hide-icon.svg\" alt=\"...\">\r\n            </span>\r\n          </div>\r\n          </div>\r\n            <div class=\"invalid-feedback\"\r\n            *ngIf=\"reactiveForm.get('confirmPassword').touched && !reactiveForm.get('confirmPassword').valid\">\r\n            <div *ngIf=\"reactiveForm.get('confirmPassword').errors.pattern\">{{errorMsg}}</div>\r\n          </div>\r\n          <div *ngIf=\"reactiveForm.get('confirmPassword').hasError('minlength') \" class=\"invalid-feedback\">\r\n            Confirm Password must contain Minimum {{minPass}} digits.\r\n          </div>\r\n          <div *ngIf=\"reactiveForm.get('confirmPassword').hasError('maxlength')\" class=\"invalid-feedback\">\r\n            Confirm Password must contain Maximum {{maxPass}} digits.\r\n          </div>\r\n\r\n        </div>\r\n\r\n        <div class=\"col-lg-12\">\r\n          <div class=\"row g-3 pb-3 pt-3 justify\">\r\n            <div class=\"col-auto\">\r\n              <button (click)=\"getOtp(user.value)\" [disabled]=\"otpBtn || !getOtpButtonEnable\" class=\"btn smBtn minWdSmBtn btnPrimary\">Get\r\n                OTP</button>\r\n            </div>\r\n            <div class=\"col-auto\">\r\n              <button [disabled]=\"!reactiveForm.valid || submitBtn\"\r\n                (click)=\"changePassword(newPassword.value,confirmPassword.value,user.value,otp)\"\r\n                class=\"btn smBtn minWdSmBtn btnSecondary\">Save</button>\r\n            </div>\r\n            <!-- <div class=\"col-auto\">\r\n              <a  type=\"reset\" (click)=\"resetButton()\" class=\"btn smBtn minWdSmBtn btnPrimary\">Reset</a>\r\n            </div> -->\r\n            <div class=\"col-auto\">\r\n              <a class=\"btn smBtn minWdSmBtn btnSecondary\" (click)=\"exit()\">Exit</a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n  </form>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { ForgetPasswordRoutingModule } from './forget-password-routing.module';\r\nimport { ForgetPasswordComponent } from './forget-password.component';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { NgOtpInputModule } from 'ng-otp-input';\r\n\r\n\r\n@NgModule({\r\n  declarations: [ForgetPasswordComponent],\r\n  imports: [\r\n    CommonModule,\r\n    ForgetPasswordRoutingModule,\r\n    ReactiveFormsModule,\r\n    NgOtpInputModule\r\n  ]\r\n})\r\nexport class ForgetPasswordModule { }\r\n"],"names":[],"sourceRoot":"webpack:///"}