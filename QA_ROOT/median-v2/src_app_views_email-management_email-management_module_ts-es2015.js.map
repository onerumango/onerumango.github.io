{"version":3,"file":"src_app_views_email-management_email-management_module_ts-es2015.js","mappings":"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","sources":["./src/app/shared/models/EmailAuditLog.ts","./src/app/views/email-management/email-management-create/email-management-create.component.ts","./src/app/views/email-management/email-management-create/email-management-create.component.html","./src/app/views/email-management/email-management-routing.module.ts","./src/app/views/email-management/email-management.module.ts","./src/app/views/email-management/email-management/email-management.component.ts","./src/app/views/email-management/email-management/email-management.component.html"],"sourcesContent":["export class EamilAuditLog\r\n{\r\n    emailType:string;\r\n    inputBy:string;\r\n    inputTime:Date;\r\n    modNo:number;\r\n    recordStatus:string;\r\n    verifiedBy:string\r\n    verifiedOnce:string\r\n    verifiedStatus:string\r\n    verifiedTime:string    \r\n\r\n}","import { ChangeDetectorRef, Component, OnInit } from '@angular/core';\r\nimport { FormArray, FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, NavigationExtras, Router } from '@angular/router';\r\nimport { Ng2IzitoastService } from 'ng2-izitoast';\r\nimport { empty, Observable, of, Subject } from 'rxjs';\r\nimport { CanDeactivateGuard, IDeactivateComponent } from 'src/app/shared/guards/can-deactivate.guard';\r\nimport { EamilAuditLog } from 'src/app/shared/models/EmailAuditLog';\r\nimport { permissionsLabels } from 'src/app/shared/models/fmosNewRolePermissions';\r\nimport { AccountBlockingServiceService } from 'src/app/shared/services/account-blocking-service.service';\r\nimport { RoleService } from 'src/app/shared/services/role.service';\r\nimport Swal from 'sweetalert2';\r\nimport { UsersService } from '../../users/users.service';\r\n\r\n@Component({\r\n  selector: 'npr-email-management-create',\r\n  templateUrl: './email-management-create.component.html',\r\n  styleUrls: ['./email-management-create.component.scss']\r\n})\r\nexport class EmailManagementCreateComponent implements OnInit, IDeactivateComponent{\r\n  masterresponse: any;\r\n  masterDatapermission: boolean;\r\n  selected: any;\r\n  allDetails: any;\r\n  // interface email\r\n  // {\r\n  //   emailId: '',\r\n  //   emailType: '',\r\n  //   emailRequired:'',\r\n  //   id:'',\r\n  // }\r\n  public emailList: any = []\r\n  loggedInUser: string;\r\n  user_id: string;\r\n  role: string;\r\n  eamilAuditLog = new EamilAuditLog();\r\n  screenName: string;\r\n  button_permission: any = {};\r\n  rolepermission: any;\r\n  rowId: any;\r\n  editFlag = false;\r\n  modifyScreen: boolean = false;\r\n  emailForm: FormGroup;\r\n  navSubscription: any;\r\n  editAddSysResp: any;\r\n  submitBtn: boolean=true;\r\n  roleCodes = new permissionsLabels();\r\n  emailTypes: string;\r\n  formTouched: boolean=true;\r\n  emailNavObj: string;\r\n  showDialog = false;\r\n  subject = new Subject<boolean>();\r\n  emailCheckForSameEmail:boolean = false;\r\n\r\n  emailNavigationObject: any;\r\n  // allDetails: import(\"d:/GITHUB REPOSITORY_UI/median_v2/src/app/shared/models/EmailDetails\").EmailDetails;\r\n  constructor(private accountBlockingService: AccountBlockingServiceService, private ref: ChangeDetectorRef,\r\n    private userApi: UsersService, private route: ActivatedRoute,\r\n    public iziToast: Ng2IzitoastService,public roleService:RoleService,\r\n    private formBuilder: FormBuilder,private cdr: ChangeDetectorRef,\r\n    private router:Router) { }\r\n  ngOnInit(): void {\r\n    this.emailNavObj=localStorage.getItem('emailManagementNavObj');\r\n    this.emailNavigationObject = JSON.parse(this.emailNavObj); \r\n    this.accountBlockingService.getIndexValue().subscribe(resp=>{\r\n      if(resp.index=== ''){\r\n        this.createEmail();\r\n      }\r\n    })\r\n    this.loggedInUser = localStorage.getItem('userFromLogin').replace(/['\"]+/g, '');\r\n    this.navSubscription = this.accountBlockingService.getNavParam.subscribe(data =>this.editAddSysResp =data);\r\n\r\n    this.emailTypes = localStorage.getItem('EmailType');\r\n    this.emailForm = this.formBuilder.group({\r\n      accountType: ['', Validators.required],\r\n      emails: this.formBuilder.array([])\r\n    });\r\n    this.user_id = sessionStorage.getItem('user_id');\r\n    this.role = sessionStorage.getItem('user_role');\r\n \r\n        this.eamilAuditLog.modNo =this.editAddSysResp.queryParams.modNo;\r\n        this.eamilAuditLog.inputBy =this.editAddSysResp.queryParams.creator;\r\n        this.eamilAuditLog.recordStatus = this.editAddSysResp.queryParams.rstatus;\r\n        this.eamilAuditLog.verifiedOnce = this.editAddSysResp.queryParams.vStatus;\r\n        this.eamilAuditLog.inputTime = this.editAddSysResp.queryParams.inputDate;\r\n        this.eamilAuditLog.verifiedStatus =this.editAddSysResp.queryParams.vDate;\r\n        this.eamilAuditLog.verifiedTime =this.editAddSysResp.queryParams.authtym;\r\n        this.eamilAuditLog.verifiedBy =this.editAddSysResp.queryParams.authBy;\r\n        this.eamilAuditLog.emailType = this.editAddSysResp.queryParams.emailType;\r\n\r\n        console.log(this.eamilAuditLog);\r\n    \r\n      if(this.editAddSysResp.queryParams.emailType=='Account_Block'){\r\n        this.buildEmailForm(this.eamilAuditLog);\r\n        this.getScreenDetails();\r\n     }\r\n  \r\n     if(this.editAddSysResp.queryParams.emailType != 'Account_Block'){\r\n  \r\n      if(JSON.parse(this.emailNavObj) != null){\r\n        this.buildEmailForm(this.emailNavigationObject);\r\n        this.getScreenDetails();\r\n        this.modifyScreen = true;\r\n        this.editFlag = true;\r\n      }\r\n     } \r\n\r\n      if ( this.eamilAuditLog.emailType) {\r\n        this.modifyScreen = true;\r\n        this.editFlag = true;\r\n      }\r\n      this.auditLog();\r\n\r\n    if(this.eamilAuditLog.emailType==null){\r\n      this.addAddress();\r\n    }\r\n    this.roleService.screenLabelList.subscribe(message => this.roleCodes = message);\r\n  \r\n  }\r\nauditLog() {\r\n    if (this.eamilAuditLog.verifiedStatus === 'U') {\r\n      this.eamilAuditLog.verifiedStatus = 'UNAUTHORIZED'\r\n    }\r\n    if (this.eamilAuditLog.verifiedStatus === 'A') {\r\n      this.eamilAuditLog.verifiedStatus = 'AUTHORIZED'\r\n    }\r\n    if (this.eamilAuditLog.recordStatus === 'O') {\r\n      this.eamilAuditLog.recordStatus = 'OPEN'\r\n    }\r\n    if (this.eamilAuditLog.recordStatus === 'C') {\r\n      this.eamilAuditLog.recordStatus = 'CLOSED'\r\n    }\r\n    if (this.eamilAuditLog.verifiedOnce === 'N') {\r\n      this.eamilAuditLog.verifiedOnce = 'NO'\r\n    }\r\n    if (this.eamilAuditLog.verifiedOnce === 'Y') {\r\n      this.eamilAuditLog.verifiedOnce = 'YES'\r\n    }\r\n  }\r\n  getEmailItem() {\r\n    return this.formBuilder.group({\r\n      emailType: ['Account_Block'],\r\n      emailId: [''],\r\n      emailRequired: ['Y'],\r\n      id:[''],\r\n      // modNo:['']\r\n    });\r\n  }\r\n\r\n  get emails() {\r\n    return this.emailForm.get('emails') as FormArray;\r\n  }\r\n\r\n  buildEmailForm(data?, isResponse?: boolean){\r\n    this.emailForm = this.formBuilder.group({\r\n      accountType: [data.emailType ? data.emailType : '',   [\r\n        Validators.required,\r\n        Validators.pattern(\r\n          \"^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$\"\r\n        ),\r\n      ]],\r\n      emails: this.formBuilder.array([])\r\n    }); \r\n   \r\n  }\r\n  \r\n  canExit() : Promise<boolean> {\r\n    let isExit :boolean = false;\r\n    if (this.emailForm.touched  && this.formTouched==true) {\r\n    return Swal.fire({ \r\n      text: 'There are unsaved changes in the screen. Would you like to navigate to other screen?',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#E6224A',\r\n      cancelButtonColor: '#011945',\r\n      cancelButtonText: 'NO',\r\n      confirmButtonText: 'YES',\r\n      icon: 'info',\r\n    }).then((result) => {\r\n      if (result.isConfirmed === true) {\r\n        isExit=true;\r\n        this.cdr.markForCheck();\r\n           return isExit;\r\n      }\r\n      else{\r\n        isExit=false;\r\n        this.cdr.markForCheck();\r\n        return isExit;\r\n      }\r\n    \r\n    });\r\n  }\r\n else{\r\n  isExit=true;\r\n  return new Promise((resolve, reject) => {\r\n    if (isExit === true) {\r\n      isExit=true;\r\n      this.cdr.markForCheck();\r\n      resolve(true);\r\n    }\r\n  \r\n  })\r\n }\r\n    }\r\n\r\n \r\n\r\n  getScreenDetails() {\r\n// this.eamilAuditLog=this.emailNavigationObject;\r\n   \r\n    if(this.eamilAuditLog.emailType == undefined){\r\n      this.eamilAuditLog=this.emailNavigationObject;\r\n    }\r\n    this.selected=this.eamilAuditLog.emailType;\r\n    \r\n    this.accountBlockingService.sendAccType(this.eamilAuditLog.emailType).subscribe((resp: any) => {\r\n     \r\n      this.emailList = resp;\r\n      for (let index = 0; index < this.emailList.length; index++) {\r\n        this.addAddress();\r\n        const email = this.emailList[index];\r\n        // this.emails.at(index).get('emails').patchValue(email);\r\n        this.emails.at(index).patchValue(email);\r\n        \r\n      }\r\n     \r\n    });\r\n\r\n\r\n  }\r\n  screenpermission() {\r\n    this.screenName = 'roles';\r\n    // this.role='ROLE1';\r\n    this.userApi.getRoleScreenPermission(this.loggedInUser, this.screenName, this.role).subscribe(res => {\r\n      this.rolepermission = res;\r\n      //console.log(this.rolepermission);\r\n      if (this.rolepermission) {\r\n        this.button_permission = this.rolepermission[0];\r\n        //console.log( this.button_permission);\r\n      }\r\n    });\r\n\r\n  }\r\n  editValues() {\r\n    this.editFlag = false;\r\n\r\n  }\r\n \r\n  selectedChk(e) {\r\n   \r\n    this.selected = e;\r\n  }\r\n\r\n  // TODO\r\n  addAddress() {\r\n    this.emails.push(this.getEmailItem());\r\n  }\r\n\r\n  removeAddress(i,row) {\r\n    // if(i=== 0){\r\n    //   this.emailForm.controls.emails.reset()\r\n    // }\r\n    // else{\r\n    //  console.log(this.eamilAuditLog);\r\n      // if(this.eamilAuditLog.emailType==undefined){\r\n        // console.log(row,i,\"If\");\r\n          this.emails.removeAt(i);\r\n      // }\r\n    \r\n    // else{\r\n    this.accountBlockingService.deleteingParticluarRow(this.eamilAuditLog.emailType, this.loggedInUser, row.value.id)\r\n      .subscribe(deleteResp => {\r\n        if (deleteResp == true) {\r\n          this.emails.removeAt(i);\r\n          Swal.fire({\r\n\r\n            text: 'Record is Deleted',\r\n            icon: 'success',\r\n\r\n          })\r\n          this.router.navigate(['/email-management']);\r\n        } else {\r\n          \r\n          Swal.fire({\r\n\r\n            text: 'Once Verifed Record Cannot Be Deleted',\r\n            icon: 'warning',\r\n\r\n          });\r\n        }\r\n        this.ref.markForCheck();\r\n      });\r\n    // }\r\n  }\r\n  \r\n  onClickOfDeleteOfEmailManagement() {\r\n    //console.log('this is delete call');\r\n    //  this.eamilAuditLog.inputBy = this.loggedInUser;\r\n    Swal.fire({\r\n      text: 'You are trying to Delete record. ' + ' Do you want to proceed?',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#E6224A',\r\n      cancelButtonColor: '#011945',\r\n      // confirmButtonText: 'PROCEED.'\r\n      cancelButtonText: 'NO',\r\n      confirmButtonText: 'YES',\r\n      icon: 'info',\r\n    }).then((result) => {\r\n      if (result.isConfirmed === true) {\r\n    this.accountBlockingService.onclickOfDeleteOfEmailManagement(this.selected, this.loggedInUser).subscribe(deletedRecord => {\r\n      console.log(deletedRecord);\r\n      if (deletedRecord == false) {\r\n        Swal.fire({\r\n\r\n          text: 'Record Deletion Failed',\r\n          icon: 'error',\r\n\r\n        });\r\n      \r\n      } else {\r\n        Swal.fire({\r\n          text:'Record Deleted SuccessFully',\r\n        icon:'success'\r\n      });\r\n      }\r\n    });\r\n    this.ref.markForCheck();\r\n      }\r\n});\r\n}\r\n  onClickOfAuthOfEmailManagement() {\r\n    // if(this.loggedInUser === this.eamilAuditLog.inputBy){\r\n    //   Swal.fire({\r\n    //     text:  \"Maker cannot authorize the record\",\r\n    //    icon:'error'\r\n    //     });\r\n    //     return\r\n    // } else {\r\n      Swal.fire({\r\n        text:\r\n          'You are trying to Authorize record. ' + ' Do you want to proceed?',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#E6224A',\r\n        cancelButtonColor: '#011945',\r\n        // confirmButtonText: 'PROCEED.'\r\n        cancelButtonText: 'NO',\r\n        confirmButtonText: 'YES',\r\n        icon: 'info',\r\n      }).then((result) => {\r\n        // if (result.isConfirmed === true) {\r\n        //   this.accountBlockingService.onClickOfAuthOfEmailManagement('Verify','Account_Block',this.loggedInUser).subscribe(authresp => {\r\n        //     if (authresp) {\r\n        //       Swal.fire({\r\n        //         text: 'Record is Authorized',  \r\n        //         icon:'success'\r\n        //       });\r\n        //       this.eamilAuditLog=authresp;\r\n        //       this.auditLog();\r\n        //     } else {\r\n        //       Swal.fire({\r\n        //         text: 'Record Authorization is Failed',  \r\n        //         icon:'error'\r\n        //       });\r\n        //     }\r\n        //   });\r\n        // }\r\n        if(this.loggedInUser === this.eamilAuditLog.inputBy){\r\n            Swal.fire({\r\n              text:  \"Maker cannot authorize the record\",\r\n             icon:'error'\r\n              });\r\n              return\r\n          }\r\n      });\r\n\r\n    \r\n    this.ref.markForCheck();\r\n  }\r\n  onclickOfReopenOfEamilManagement() {\r\n    //console.log('this is Reopen');\r\n    // this.eamilAuditLog.inputBy = this.loggedInUser;\r\n\r\n    Swal.fire({\r\n      text: 'You are trying to Reopen record. ' + ' Do you want to proceed?',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#E6224A',\r\n      cancelButtonColor: '#011945',\r\n      // confirmButtonText: 'PROCEED.'\r\n      cancelButtonText: 'NO',\r\n      confirmButtonText: 'YES',\r\n      icon: 'info',\r\n    }).then((result) => {\r\n      if (result.isConfirmed === true) {\r\n    this.accountBlockingService.onClickOfAuthOfEmailManagement('reopen','Account_Block',this.loggedInUser).subscribe(reopenResp => {\r\n \r\n      if (reopenResp == false) {\r\n        // this.iziToast.show({\r\n        //   message: `UnAuthorized Records Cannot Be Reopen`,\r\n        //   image: \"assets/images/user.png\",\r\n        //   icon: 'ico ico-success',\r\n        //   theme: \"dark\",\r\n        //   layout: 2,\r\n        //   // imageWidth:50,\r\n        //   balloon: false,\r\n        //   position: \"topRight\",\r\n        //   progressBarColor: \"green\",\r\n        //   pauseOnHover: true,\r\n        // });\r\n        Swal.fire({\r\n\r\n          text: 'UnAuthorized Records Cannot Be Reopen',\r\n          icon: 'warning',\r\n\r\n        });\r\n      } else {\r\n        this.eamilAuditLog=reopenResp;\r\n        this.auditLog();\r\n        Swal.fire({\r\n\r\n          text: 'Record is Reopened',\r\n          icon: 'success',\r\n\r\n        });\r\n        // this.iziToast.show({\r\n        //   message: `You Opened the record`,\r\n        //   image: \"assets/images/user.png\",\r\n        //   icon: 'ico ico-success',\r\n        //   theme: \"dark\",\r\n        //   layout: 2,\r\n        //   // imageWidth:50,\r\n        //   balloon: false,\r\n        //   position: \"topRight\",\r\n        //   progressBarColor: \"green\",\r\n        //   pauseOnHover: true,\r\n        // });\r\n      }\r\n\r\n    });\r\n  }\r\n});\r\n}\r\n  onclickOfCloseOfEmailManagement() {\r\n    //  this.eamilAuditLog.inputBy = this.loggedInUser;\r\n    Swal.fire({\r\n      text: 'You are trying to Close record. ' + ' Do you want to proceed?',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#E6224A',\r\n      cancelButtonColor: '#011945',\r\n      // confirmButtonText: 'PROCEED.'\r\n      cancelButtonText: 'NO',\r\n      confirmButtonText: 'YES',\r\n      icon: 'info',\r\n    }).then((result) => {\r\n      if (result.isConfirmed === true) {\r\n    this.accountBlockingService.onClickOfAuthOfEmailManagement('close','Account_Block',this.loggedInUser).subscribe(closeResp => {\r\n      \r\n      if (closeResp == false) {\r\n        Swal.fire({\r\n\r\n          text: 'UnAuthorized Records Cannot Be Closed',\r\n          icon: 'warning',\r\n\r\n        });\r\n\r\n        // this.iziToast.show({\r\n        //   message: `UnAuthorized Records Cannot Be Closed`,\r\n        //   image: \"assets/images/user.png\",\r\n        //   icon: 'ico ico-success',\r\n        //   theme: \"dark\",\r\n        //   layout: 2,\r\n        //   // imageWidth:50,\r\n        //   balloon: false,\r\n        //   position: \"topRight\",\r\n        //   progressBarColor: \"green\",\r\n        //   pauseOnHover: true,\r\n        // });\r\n      } else {\r\n        this.eamilAuditLog=closeResp\r\n        this.auditLog();\r\n        Swal.fire({\r\n\r\n          text: 'Record is Closed',\r\n          icon: 'success',\r\n\r\n        });\r\n        // this.iziToast.show({\r\n        //   message: `You Closed The Record`,\r\n        //   image: \"assets/images/user.png\",\r\n        //   icon: 'ico ico-success',\r\n        //   theme: \"dark\",\r\n        //   layout: 2,\r\n        //   // imageWidth:50,\r\n        //   balloon: false,\r\n        //   position: \"topRight\",\r\n        //   progressBarColor: \"green\",\r\n        //   pauseOnHover: true,\r\n        // });\r\n      }\r\n    });\r\n  }\r\n});\r\n}\r\n  \r\n  logValue() {\r\n    \r\n   \r\n  //   console.log(this.emailNavigationObject.detailNotif);\r\n  //   for(var i = 0 ;i < this.emailNavigationObject.detailNotif.length ;i++){\r\n  //     console.log(this.emailNavigationObject.detailNotif[i].emailId);\r\n  //     // elements = this.emailNavigationObject.detailNotif[i].emailId;\r\n  //     values.push(this.emailNavigationObject.detailNotif[i].emailId)\r\n      \r\n  //   }\r\n  // console.log(values);\r\n    \r\n    var elements = document.getElementsByTagName(\"input\");\r\n    console.log(elements);\r\n    \r\n\r\n    var values = [];\r\n    for (var i = 0; i < elements.length; i++) {\r\n        values.push(elements[i].value);\r\n    }\r\n    console.log(values);\r\n    var sortedValues = values.sort();\r\n    for (var o = 2; o < values.length-1; o++) {\r\n        if (values[o] === values[o+1]){\r\n          this.emailCheckForSameEmail = true;\r\n        }\r\n            \r\n          \r\n    }\r\n    // if (this.eamilAuditLog.emailType != null || this.eamilAuditLog.emailType != undefined) {\r\n      console.log(this.eamilAuditLog.inputBy);\r\n      console.log(this.emailTypes);\r\n      if(this.emailCheckForSameEmail){\r\n        Swal.fire('Please Enter Different Email Id').then(()=>{\r\n          this.emailCheckForSameEmail = false});\r\n\r\n      }\r\n       if((this.eamilAuditLog.inputBy !=null || this.emailTypes == 'Account_Block')&&this.emailCheckForSameEmail == false){\r\n      this.accountBlockingService.onclickOfEditOfEmailManagement(this.selected, this.loggedInUser, this.emails.value).subscribe(editResp => {\r\n        console.log(editResp,\"If\");\r\n        if (editResp == null) {\r\n          Swal.fire({\r\n\r\n            text: 'Failed To Uppdate The Record',\r\n            icon: 'warning',\r\n\r\n          });\r\n        } else {\r\n          this.eamilAuditLog = editResp;\r\n          this.auditLog();\r\n          this.formTouched=!this.emailForm.touched;\r\n          this.modifyScreen=true;\r\n          this.submitBtn=false;\r\n          this.editFlag=true;\r\n          Swal.fire({\r\n\r\n            text: 'Record is Updated',\r\n            icon:'success'\r\n\r\n          }).then((result=>{\r\n            this.router.navigateByUrl(\"/email-management\")\r\n          }));\r\n        \r\n        }\r\n      });\r\n\r\n    }\r\n   if(this.emailTypes != 'Account_Block') {\r\n      console.log(\"else\");\r\n\r\n      this.accountBlockingService.emailMaintenance(this.selected,this.loggedInUser,this.emails.value).subscribe(resp => {\r\n        this.masterresponse=resp;\r\n        this.eamilAuditLog=this.masterresponse;\r\n        if(resp){\r\n           this.masterDatapermission=true;\r\n           this.auditLog();\r\n          this.formTouched=!this.emailForm.touched;\r\n          this.modifyScreen=true;\r\n          this.submitBtn=false;\r\n           Swal.fire({\r\n\r\n            text: 'Record is Created',\r\n            icon:'success'\r\n\r\n          }).then((result=>{\r\n            this.router.navigateByUrl(\"/email-management\")\r\n          }));\r\n          \r\n        }\r\n        else if(resp==null)\r\n        {\r\n         // this.masterDatapermission=false;\r\n         Swal.fire('Email Id Already Exit ');\r\n        }\r\n        else{\r\n          Swal.fire('Unable to Save the Record ');\r\n        }\r\n        \r\n       });\r\n      }\r\n    // }\r\n    // this.accountBlockingService.emailMaintenance(this.selected, this.loggedInUser, this.emails.value).subscribe(resp => {\r\n    //   this.masterresponse = resp;\r\n    //   console.log(resp);\r\n    //   if (resp) {\r\n    //     this.editFlag=true;\r\n    //     this.submitBtn=false;\r\n    //     this.masterDatapermission = true;\r\n    //      Swal.fire({\r\n    //        text:'Success ',\r\n    //        icon:'success'});\r\n    //   }\r\n    //   else if (resp == null) {\r\n    //     Swal.fire({\r\n    //       text:'Email Id Already Exit ',\r\n    //       icon:'warning'}\r\n    //       );\r\n    //   }\r\n    //   else {\r\n    //      Swal.fire({\r\n    //        text:'Unable to Save the Record ',\r\n    //        icon:'error'});\r\n    //   }\r\n\r\n    // });\r\n  }\r\n  createEmail(){\r\n    const navigationExtras: NavigationExtras = {\r\n      queryParams: {}\r\n    }\r\n    this.accountBlockingService.sendNavParam(navigationExtras);\r\n\r\n  }\r\n\r\n}\r\n","<div class=\"pageContentMain\">\r\n    <div class=\"pageTitleCol\">\r\n      <h2 class=\"pageTitle\">Email Management</h2>\r\n    </div>\r\n    <form [formGroup]=\"emailForm\" class=\"formStyle\"  novalidate>\r\n      <div class=\"dbCardStyle cardWidth\">\r\n        <h2 class=\"pageTitle text-center mb-md-4 mb-3\">Email IDs for Email-Notification</h2>\r\n        <div class=\"row gy-4\">\r\n          <div class=\"col-10\">\r\n            <label for=\"roleName\" class=\"formLbl\">Select an option<span class=\"colorRed\">*</span></label>\r\n           \r\n            <select [(value)]=\"selected\" [attr.disabled]=\"editFlag ? '' : null\"  class=\"form-select\" aria-label=\"Default select example\" \r\n            formControlName=\"accountType\" \r\n            (change)=\"selectedChk($event.target.value)\"\r\n           >\r\n            <option hidden value=\"\" disabled selected >--Please select--</option>\r\n              <option value=\"Account_Block\" [disabled]=\"editFlag\">Account_Block</option>\r\n              <!-- <option value=\"{{selected}}\">Account Type</option> -->\r\n\r\n              <!-- <option>None</option> -->\r\n              <!-- <mat-option value=\"option2\">Option 2</mat-option>\r\n          <mat-option value=\"option3\">Option 3</mat-option> -->\r\n              </select>\r\n              <div class=\"errorColor\" *ngIf=\"emailForm.get('accountType').invalid && (emailForm.get('accountType').dirty || emailForm.get('accountType').touched)\">\r\n                <div *ngIf=\"emailForm.get('accountType').errors.required\">\r\n                Please Select Account Type\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <ng-container formArrayName=\"emails\">\r\n            <label for=\"\" class=\"formLbl\">Email Id<span class=\"colorRed\">*</span></label>\r\n            <div class=\"col-12\" *ngFor=\"let email of emails.controls;let i = index\">\r\n              <div class=\"row align-items-center\">\r\n                <ng-container [formGroup]=\"email\">\r\n                 \r\n                   <div class=\"col-10\">\r\n                     <input type=\"email\"  id=\"emailId\" class=\"form-control\" [readonly]=\"editFlag\"\r\n                          formControlName=\"emailId\" name=\"address_{{i}} \" \r\n                       pattern=\"[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$\" required [email]=\"true\" placeholder=\"example@gmail.com\" >\r\n                     <div class=\"errorColor\" *ngIf=\"email.get('emailId').invalid && (email.get('emailId').dirty || email.get('emailId').touched)\">\r\n                       <div *ngIf=\"email.get('emailId').errors.required\">\r\n                       Please Enter Email Id\r\n                     </div>\r\n                     <div *ngIf=\"emailForm.controls.emails.invalid && !email.get('emailId').errors.required \">\r\n                      Please Enter Valid Email Id\r\n                    </div>\r\n                   </div>\r\n                   </div>\r\n                   <div class=\"col-2\">\r\n                     <div class=\"inputHide\" >\r\n                       <a [ngClass]=\"{'isDisabled':emailForm.controls.emails.invalid || editFlag }\" (click)=\"removeAddress(i,email)\"> <img src=\"assets/images/delete-icon.svg\" alt=\"...\"> </a>\r\n                     </div>\r\n                   </div>\r\n                </ng-container>\r\n              </div>\r\n            </div>\r\n          </ng-container>\r\n          <div class=\"col-auto\">\r\n            <a class=\"addIcon primarybg\" (click)=\"addAddress()\" [ngClass]=\"{'isDisabled': editFlag }\">\r\n              <span><img src=\"assets/images/plus-icon.svg\" alt=\"...\"></span>\r\n            </a>\r\n          </div>\r\n          <div class=\"col-lg-12\" *ngIf=\"!modifyScreen\">\r\n            <div class=\"row g-3 pb-3 pt-3\">\r\n              <div class=\"col-auto\">\r\n                <button  class=\"btn smBtn minWdSmBtn btnPrimary\" (click)=\"logValue()\" [disabled]=\"emailForm.controls.emails.invalid ||!emailForm.value.accountType || !submitBtn\">Save</button>\r\n              </div>\r\n              <div class=\"col-auto\">\r\n                <button  routerLink=\"/email-management\" class=\"btn smBtn minWdSmBtn btnSecondary\">Exit</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n       \r\n        </div>\r\n        <div class=\"\" *ngIf=\"modifyScreen\">\r\n          <div class=\"row  pb-3 justify-content-center pt-3\">\r\n            <div class=\"col-auto\" style=\"margin-top: 10px;\" *ngIf=\"editFlag && (eamilAuditLog.recordStatus == 'OPEN' || eamilAuditLog.recordStatus == 'Open')\">\r\n              <button class=\"btn smBtn minWdSmBtn btnUpdate\" (click)=\"editValues()\">Edit</button>\r\n            </div>\r\n            <div class=\"col-auto\" style=\"margin-top: 10px;\" *ngIf=\"!editFlag\">\r\n              <button  class=\"btn smBtn minWdSmBtn btnUpdate\" (click)=\"logValue()\" [disabled]=\"emailForm.controls.emails.invalid ||!emailForm.value.accountType || !emailForm.dirty\"\r\n             >Save</button>\r\n            </div>\r\n            <div class=\"col-auto\" style=\"margin-top: 10px;\" *ngIf=\"(eamilAuditLog.verifiedStatus == 'U' || eamilAuditLog.verifiedStatus == 'UNAUTHORIZED' || eamilAuditLog.verifiedStatus == 'Unauthorized' ) && editFlag\">\r\n              <button class=\"btn smBtn minWdSmBtn btnAuth\"  (click)=\"onClickOfAuthOfEmailManagement()\">Auth</button>\r\n            </div>\r\n            <div class=\"col-auto\" style=\"margin-top: 10px;\" *ngIf=\"(eamilAuditLog.recordStatus == 'C' || eamilAuditLog.recordStatus == 'CLOSED' || eamilAuditLog.recordStatus == 'Close') && editFlag && eamilAuditLog.verifiedOnce == 'YES'\">\r\n              <button class=\"btn smBtn minWdSmBtn btnPrimary\" (click)=\"onclickOfReopenOfEamilManagement()\">Reopen</button>\r\n            </div>\r\n            <div class=\"col-auto\"style=\"margin-top: 10px;\"  *ngIf=\"(eamilAuditLog.recordStatus == 'O' || eamilAuditLog.recordStatus == 'OPEN' ||  eamilAuditLog.recordStatus == 'Open') && editFlag && eamilAuditLog.verifiedOnce == 'YES'\">\r\n              <button class=\"btn smBtn minWdSmBtn btnPrimary\" (click)=\"onclickOfCloseOfEmailManagement()\">Close</button>\r\n            </div>\r\n            <div class=\"col-auto\"  style=\"margin-top: 10px;\" *ngIf=\"editFlag && roleCodes.delete && (eamilAuditLog.verifiedOnce == 'NO' || eamilAuditLog.verifiedOnce == 'N') && (eamilAuditLog.verifiedStatus == 'U' || eamilAuditLog.verifiedStatus == 'UNAUTHORIZED')\">\r\n              <button [disabled]=\"emails.value.length != 0\" class=\"btn smBtn minWdSmBtn btnPrimary\" (click)=\"onClickOfDeleteOfEmailManagement()\">Delete</button>\r\n            </div>\r\n            <div class=\"col-auto\" style=\"margin-top: 10px;\">\r\n              <button routerLink=\"/email-management\" class=\"btn smBtn minWdSmBtn btnSecondary\">Exit</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n      <div class=\"dbCardStyle\" *ngIf=\"eamilAuditLog.emailType!=null\">\r\n        <div class=\"row\">\r\n          <div class=\"col-sm-6 col-md-4 col-lg-3\">\r\n            <div class=\"csCardStyle\">\r\n              <div class=\"row g-2 align-items-center\">\r\n                <div class=\"col-auto\">\r\n                  <div class=\"csCardStyleIcon csCardStyleIconBg1\">\r\n                    <i class=\"fa fa-edit faClass\"></i>\r\n                  </div>\r\n                </div>\r\n                <div class=\"col\">\r\n                  <div class=\"csCardStyleText\">\r\n                    <h2>Maker</h2>\r\n                    <p>{{eamilAuditLog.inputBy}}</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-sm-6 col-md-4 col-lg-3\">\r\n            <div class=\"csCardStyle\">\r\n              <div class=\"row g-2 align-items-center\">\r\n                <div class=\"col-auto\">\r\n                  <div class=\"csCardStyleIcon csCardStyleIconBg2\">\r\n                    <img src=\"assets/images/time-stamp-icon.svg\" alt=\"...\">\r\n                  </div>\r\n                </div>\r\n                <div class=\"col\">\r\n                  <div class=\"csCardStyleText\">\r\n                    <h2>Maker Time Stamp</h2>\r\n                    <p>{{eamilAuditLog.inputTime | date: 'MM/dd/yyyy, h:mm a'}}</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-sm-6 col-md-4 col-lg-3\">\r\n            <div class=\"csCardStyle\">\r\n              <div class=\"row g-2 align-items-center\">\r\n                <div class=\"col-auto\">\r\n                  <div class=\"csCardStyleIcon csCardStyleIconBg3\">\r\n                    <i class=\"fa fa-files-o faRecordStatus\" aria-hidden=\"true\"></i>\r\n                  </div>\r\n                </div>\r\n                <div class=\"col\">\r\n                  <div class=\"csCardStyleText\">\r\n                    <h2>Record Status</h2>\r\n                    <p>{{eamilAuditLog.recordStatus}}</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-sm-6 col-md-4 col-lg-3\">\r\n            <div class=\"csCardStyle\">\r\n              <div class=\"row g-2 align-items-center\">\r\n                <div class=\"col-auto\">\r\n                  <div class=\"csCardStyleIcon csCardStyleIconBg4\">\r\n                  <i class=\"fa fa-check-square-o faClassChecker\"></i>\r\n                  </div>\r\n                </div>\r\n                <div class=\"col\">\r\n                  <div class=\"csCardStyleText\">\r\n                    <h2>Checker</h2>\r\n                    <p>{{eamilAuditLog.verifiedBy}}</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-sm-6 col-md-4 col-lg-3\">\r\n            <div class=\"csCardStyle\">\r\n              <div class=\"row g-2 align-items-center\">\r\n                <div class=\"col-auto\">\r\n                  <div class=\"csCardStyleIcon csCardStyleIconBg5\">\r\n                    <img src=\"assets/images/checker-time-icon.svg\" alt=\"...\">\r\n                  </div>\r\n                </div>\r\n                <div class=\"col\">\r\n                  <div class=\"csCardStyleText\">\r\n                    <h2>Checker Time Stamp</h2>\r\n\r\n                    <p>{{eamilAuditLog.verifiedTime | date: 'MM/dd/yyyy, h:mm a'}}</p>\r\n\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-sm-6 col-md-4 col-lg-3\">\r\n            <div class=\"csCardStyle\">\r\n              <div class=\"row g-2 align-items-center\">\r\n                <div class=\"col-auto\">\r\n                  <div class=\"csCardStyleIcon csCardStyleIconBg6\">\r\n              <i class=\"fa fa-shield faClassFirstTimeAuth\"></i>\r\n                  </div>\r\n                </div>\r\n                <div class=\"col\">\r\n                  <div class=\"csCardStyleText\">\r\n                    <h2>First Time Authorization</h2>\r\n                    <p>{{eamilAuditLog.verifiedOnce}}</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-sm-6 col-md-4 col-lg-3\">\r\n            <div class=\"csCardStyle\">\r\n              <div class=\"row g-2 align-items-center\">\r\n                <div class=\"col-auto\">\r\n                  <div class=\"csCardStyleIcon csCardStyleIconBg7\">\r\n                   <img src=\"assets/images/authorize.svg\" alt=\"...\" class=\"modImage\">\r\n                  </div>\r\n                </div>\r\n                <div class=\"col\">\r\n                  <div class=\"csCardStyleText\">\r\n                    <h2>Authorization Status</h2>\r\n                    <p>{{eamilAuditLog.verifiedStatus}}</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-sm-6 col-md-4 col-lg-3\">\r\n            <div class=\"csCardStyle\">\r\n              <div class=\"row g-2 align-items-center\">\r\n                <div class=\"col-auto\">\r\n                  <div class=\"csCardStyleIcon csCardStyleIconBg7\">\r\n                     <img src=\"assets/images/modification.svg\" class=\"modImage\" alt=\"...\" >\r\n                  </div>\r\n                </div>\r\n                <div class=\"col\">\r\n                  <div class=\"csCardStyleText\">\r\n                    <h2>Modification Number</h2>\r\n                    <p>{{eamilAuditLog.modNo }}</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  </div>","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { CanDeactivateGuard } from 'src/app/shared/guards/can-deactivate.guard';\r\nimport { EmailManagementCreateComponent } from './email-management-create/email-management-create.component';\r\nimport { EmailManagementComponent } from './email-management/email-management.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path:\"\",\r\n    component:EmailManagementComponent\r\n  },\r\n  {\r\n    path:\"create\",\r\n    component:EmailManagementCreateComponent,\r\n    canDeactivate: [CanDeactivateGuard]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class EmailManagementRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { EmailManagementRoutingModule } from './email-management-routing.module';\r\nimport { EmailManagementComponent } from './email-management/email-management.component';\r\nimport { DataTablesModule } from 'angular-datatables';\r\nimport { EmailManagementCreateComponent } from './email-management-create/email-management-create.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    EmailManagementComponent,\r\n    EmailManagementCreateComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    EmailManagementRoutingModule,\r\n    DataTablesModule,\r\n    ReactiveFormsModule,\r\n    FormsModule\r\n  ]\r\n})\r\nexport class EmailManagementModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { NavigationExtras, Router } from '@angular/router';\r\nimport { Subject } from 'rxjs';\r\nimport { EamilAuditLog } from 'src/app/shared/models/EmailAuditLog';\r\nimport { permissionsLabels } from 'src/app/shared/models/fmosNewRolePermissions';\r\nimport { AccountBlockingServiceService } from 'src/app/shared/services/account-blocking-service.service';\r\nimport { RoleService } from 'src/app/shared/services/role.service';\r\nimport { UsersService } from 'src/app/shared/services/user.service';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'npr-email-management',\r\n  templateUrl: './email-management.component.html',\r\n  styleUrls: ['./email-management.component.scss']\r\n})\r\nexport class EmailManagementComponent implements OnInit {\r\n  emaildata: any;\r\n  user_id: string;\r\n  role: string;\r\n  dtOptions: DataTables.Settings = {};\r\n  dtTrigger: Subject<any> = new Subject<any>();\r\n  roleCodes = new permissionsLabels();\r\n  emaildetails: any;\r\n  eamilAuditLog = new EamilAuditLog();\r\n  loggedInUser: string;\r\n  ref: any;\r\n  selected: string;\r\n  currentUser: any;\r\n  statusArr: string[]=  ['Open' , 'Close'];\r\n\r\n  constructor(private accountBlockingService: AccountBlockingServiceService,private roleService:RoleService,\r\n    private router: Router,private userApi:UsersService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.user_id=sessionStorage.getItem('user_id');\r\n    this.role=sessionStorage.getItem('user_role');\r\n    this.getAllData();\r\n   \r\n    this.dtOptions = {\r\n      pagingType: 'full_numbers',\r\n      pageLength : 5,\r\n      columnDefs: [ { type: 'date', 'targets': [3] } ],\r\n      order: [[3, 'desc']],\r\n      processing: true,\r\n      lengthMenu: [\r\n        [5, 10, 20, 30,-1],\r\n        [5, 10, 20, 30,\"ALL\"],\r\n      ],\r\n      // columnDefs: [ { type: 'date', 'targets': [5] } ],\r\n      // order: [[5, 'desc']],\r\n\r\n    };\r\n    this.loggedInUser = localStorage.getItem('userFromLogin').replace(/['\"]+/g, '');\r\n    this.roleService.fetchScreenPermissions('Email-Management');\r\n    this.roleService.screenLabelList.subscribe(message => this.roleCodes = message);\r\n  }\r\n  ngOnDestroy(): void {\r\n    // Do not forget to unsubscribe the event\r\n    this.dtTrigger.unsubscribe();\r\n  }\r\n  getEmail(email) {\r\n    console.log(\"email\",email);\r\n    this.emaildetails=email;\r\n    //console.log(row.modNO);\r\n    this.accountBlockingService.setIndexValue({\r\n      index: 'edit',\r\n    });\r\n    const navigationExtras: NavigationExtras = {\r\n      queryParams: {\r\n        modNo:email.modNO,\r\n        creator:email.inputBy,\r\n        rstatus:email.recordStatus,\r\n        vStatus:email.verifiedOnce,\r\n        inputDate:email.inputTime,\r\n        vDate:email.verifiedStatus,\r\n        authtym:email.verifiedTime,\r\n        authBy:email.verifiedBy,\r\n        emailType:email.emailType\r\n      }\r\n\r\n    };\r\n    localStorage.setItem('emailManagementNavObj',JSON.stringify(this.emaildetails))\r\n    this.accountBlockingService.sendNavParam(navigationExtras);\r\n      this.router.navigate(['email-management/create']);\r\n      // this.router.navigate(['email-management/create'],navigationExtras);\r\n      console.log(navigationExtras);\r\n  }\r\n  getAllData() {\r\n    this.accountBlockingService.getAllEmail().subscribe(emaildata => {\r\n      this.emaildata = emaildata.result;\r\n      console.log(this.emaildata[0].emailType);\r\n      for(let item of emaildata.result){\r\n        item.recordStatus = this.statusArr.find((i)=>\r\n        i.startsWith(item.recordStatus)\r\n        );\r\n      }\r\n      localStorage.setItem(\"EmailType\",this.emaildata[0].emailType );\r\n      this.dtTrigger.next();\r\n      console.log(this.emaildata);\r\n      this.auditlog();\r\n    })\r\n    localStorage.setItem(\"EmailSwitch\", \"existing\");\r\n    localStorage.setItem(\"responseFromEmailSummary\", this.emaildata);\r\n  \r\n  }\r\n  createEmail(){\r\n    localStorage.removeItem('emailManagementNavObj');\r\n    this.router.navigate(['/email-management/create']);\r\n    const navigationExtras: NavigationExtras = {\r\n      queryParams: {}\r\n      \r\n    }\r\n    this.accountBlockingService.sendNavParam(navigationExtras);\r\n      \r\n   \r\n    this.accountBlockingService.setIndexValue({\r\n      index: 'new',\r\n    });\r\n  }\r\n  auth(email) {\r\n    Swal.fire({\r\n      //text: 'Unable to process' + 'Error ' + this.responseforfileupload.errorMessage + 'Do you want to Proceed??',\r\n      text: 'You are trying to Authorize record. ' + ' Do you want to proceed?',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3e54b8',\r\n      cancelButtonColor: '#d33',\r\n      // confirmButtonText: 'PROCEED.'\r\n      cancelButtonText: 'NO',\r\n      confirmButtonText: 'YES',\r\n      icon: 'info',\r\n      iconColor: '#d33',\r\n    }).then((result) => {\r\n      console.log('this is reopen ', result);\r\n      if (result.isConfirmed === true) {\r\n        if (email.createdBy === localStorage.getItem('userFromLogin')) {\r\n          Swal.fire({ text: 'Maker Cannot Authorize Record!', icon: 'error' });\r\n          return;\r\n        }\r\n        console.log('this is authorzation');\r\n        email.loggedInUser = this.currentUser;\r\n        this.accountBlockingService.onClickOfAuthOfEmailManagement('Verify','Account_Block',this.loggedInUser).subscribe(\r\n          (resp) => {\r\n            console.log(resp);\r\n            this.eamilAuditLog = resp;\r\n            this.auditlog();\r\n            if (resp) {\r\n              Swal.fire({\r\n                text: 'Record is Authorized',\r\n                icon: 'success',\r\n              }).then(() => window.location.reload());\r\n            }\r\n          }\r\n          // (error) => {\r\n          //   Swal.fire({ text: error.error.message, icon: 'error' });\r\n          // }\r\n        );\r\n      }\r\n    });\r\n  }\r\n  close(email) {\r\n    Swal.fire({\r\n      //text: 'Unable to process' + 'Error ' + this.responseforfileupload.errorMessage + 'Do you want to Proceed??',\r\n      text: 'You are trying to Close record. ' + ' Do you want to proceed?',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3e54b8',\r\n      cancelButtonColor: '#d33',\r\n      // confirmButtonText: 'PROCEED.'\r\n      cancelButtonText: 'NO',\r\n      confirmButtonText: 'YES',\r\n      icon: 'info',\r\n      iconColor: '#d33',\r\n    }).then((result) => {\r\n      console.log('this is reopen ', result);\r\n      if (result.isConfirmed === true) {\r\n        console.log('this is close');\r\n        this.accountBlockingService.onClickOfAuthOfEmailManagement('close', this.loggedInUser,email).subscribe(\r\n          (resp) => {\r\n            console.log(resp);\r\n            this.eamilAuditLog = resp;\r\n            this.auditlog();\r\n            if (this.eamilAuditLog) {\r\n              Swal.fire({ text: 'Record is Closed' }).then(() =>\r\n                window.location.reload()\r\n              );\r\n            }\r\n          },\r\n          (error) => {\r\n            Swal.fire(error.error.message);\r\n          }\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n  reopen(email) {\r\n    Swal.fire({\r\n      //text: 'Unable to process' + 'Error ' + this.responseforfileupload.errorMessage + 'Do you want to Proceed??',\r\n      text: 'You are trying to Reopen record. ' + ' Do you want to proceed?',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3e54b8',\r\n      cancelButtonColor: '#d33',\r\n      // confirmButtonText: 'PROCEED.'\r\n      cancelButtonText: 'NO',\r\n      confirmButtonText: 'YES',\r\n      icon: 'info',\r\n      iconColor: '#d33',\r\n    }).then((result) => {\r\n      console.log('this is reopen ', result);\r\n      if (result.isConfirmed === true) {\r\n        this.accountBlockingService.onClickOfAuthOfEmailManagement('reopen',this.loggedInUser, email).subscribe(\r\n          (resp) => {\r\n            console.log(resp);\r\n            this.eamilAuditLog = resp;\r\n            this.auditlog();\r\n            if (this.eamilAuditLog) {\r\n              this.auditlog();\r\n              Swal.fire({\r\n                text: 'Record is Reopened',\r\n              }).then(() => window.location.reload());\r\n            } else {\r\n              Swal.fire({ text: 'Record cannot be opened ' });\r\n            }\r\n          },\r\n          (error) => {\r\n            Swal.fire(error.error.message);\r\n          }\r\n        );\r\n      }\r\n    });\r\n  }\r\n  auditlog() {\r\n    if (this.eamilAuditLog.verifiedStatus == 'U' || this.emaildata[0].verifiedStatus ==\"U\") {\r\n      this.eamilAuditLog.verifiedStatus = 'UNAUTHORIZED';\r\n      this.emaildata[0].verifiedStatus ='Unauthorized';\r\n    }\r\n    if (this.eamilAuditLog.verifiedStatus == 'A' || this.emaildata[0].verifiedStatus ==\"A\") {\r\n      this.emaildata[0].verifiedStatus ='Authorized';\r\n      this.eamilAuditLog.verifiedStatus = 'AUTHORIZED'\r\n    }\r\n    if (this.eamilAuditLog.recordStatus == 'O') {\r\n      this.eamilAuditLog.recordStatus = 'OPEN'\r\n    }\r\n    if (this.eamilAuditLog.recordStatus =='C') {\r\n      this.eamilAuditLog.recordStatus = 'CLOSED'\r\n    }\r\n    if (this.eamilAuditLog.verifiedOnce == 'N') {\r\n      this.eamilAuditLog.verifiedOnce = 'NO'\r\n    }\r\n    if (this.eamilAuditLog.verifiedOnce == 'Y') {\r\n      this.eamilAuditLog.verifiedOnce = 'YES'\r\n    }\r\n  }\r\n\r\n}\r\n","<div class=\"pageContentMain\">\r\n    <div class=\"pageTitleCol\">\r\n      <h2 class=\"pageTitle\">Email Management</h2>\r\n    </div>\r\n    <div class=\"dbCardStyle\">\r\n      <div class=\"row g-3 pb-3 justify-content-end\">\r\n        <div class=\"col-auto\" *ngIf=\"roleCodes.new\">\r\n          <a (click)=\"createEmail()\" class=\"btn smBtn minWdSmBtn btnPrimary\">{{roleCodes.new.labelDescription}}</a>\r\n        </div>\r\n        <div class=\"col-auto\">\r\n          <a href=\"javascript:void(0)\" class=\"btn smBtn minWdSmBtn btnSecondary\">Exit</a>\r\n        </div>\r\n      </div>\r\n      <div class=\"table-responsive\">\r\n      <table datatable [dtOptions]=\"dtOptions\" [dtTrigger]=\"dtTrigger\"\r\n      class=\"dataTable table tableStyle  nowrap vAlignMdl\" style=\"width:100%\">\r\n      <!-- <table id=\"dbTable1\" datatable class=\"dataTable table tableStyle responsive nowrap\" style=\"width:100%\"> -->\r\n        <thead>\r\n          <tr>\r\n            <th>account type </th>\r\n            <th>maker id</th>\r\n            <th>Auth Status</th>\r\n            <th>Record Status</th>\r\n            <th>Date</th>\r\n            <th>Action</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr *ngFor=\"let email of emaildata\">\r\n            <td>\r\n              <a routerLink=\"/email-management/create/{{email.emailType}}\" (click)=\"getEmail(email)\" class=\"primaryColor\">{{email.emailType}}</a>\r\n            </td>\r\n            <!-- <td routerLink=\"/email-management/create\" class=\"primaryColor\">{{email.emailType}}</td> -->\r\n            <td>{{email.inputBy}}</td>\r\n            <td>{{email.verifiedStatus}}</td>\r\n            <td>{{email.recordStatus }}</td>\r\n            <td>{{email.inputTime | date:'medium'}}</td>\r\n            <td>\r\n              \r\n                 <button  class=\"btn\"\r\n                 style=\"color: red\"\r\n                 title=\"Authorize\" [disabled]=\"email.verifiedStatus != 'U' || email.verifiedStatus != 'UNAUTHORIZED' || email.verifiedStatus != 'Unauthorized' \" (click)=\" auth(email)\">\r\n                  <img class=\"summaryIcon\" src=\"assets/images/authorize.svg\" alt=\"Authorize\">\r\n                  </button>\r\n\r\n                  <button class=\"btn\"\r\n                  style=\"color: red\"\r\n                  title=\"Delete\" *ngIf=\"email.verifiedOnce== 'N' || email.verifiedOnce== 'NO'\">\r\n                    <img class=\"summaryIcon\" src=\"assets/images/delete.svg\" alt=\"...\">\r\n                  </button>\r\n\r\n                  <button class=\"btn\"\r\n                  style=\"color: red\"\r\n                  title=\"Close\" *ngIf=\"(email.recordStatus== 'O' || email.recordStatus== 'Open' || email.recordStatus== 'OPEN') && (email.verifiedOnce== 'Y' || email.verifiedOnce== 'YES')\" \r\n                  (click)=\"  close(email) \">\r\n                    <img class=\"summaryIcon\" src=\"assets/images/CROSS1.svg\"   alt=\"...\">\r\n                    </button> \r\n\r\n                    <button class=\"btn\"\r\n                    style=\"color: red\"\r\n                    title=\"Reopen\" *ngIf=\"email.recordStatus== 'C' || email.recordStatus == 'CLOSED' || email.recordStatus == 'Close' || email.recordStatus=='c'\" (click)=\"reopen(email)\">\r\n                     <img class=\"summaryIcon\" src=\"assets/images/open.svg\"  alt=\"...\">\r\n                     </button>\r\n     \r\n\r\n\r\n          </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n    \r\n    </div>\r\n  </div>"],"names":[],"sourceRoot":"webpack:///"}