{"version":3,"mappings":"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","names":["EamilAuditLog","_angular_core__WEBPACK_IMPORTED_MODULE_7__","EmailManagementCreateComponent","accountBlockingService","ref","userApi","route","iziToast","roleService","formBuilder","cdr","router","src_app_shared_models_EmailAuditLog__WEBPACK_IMPORTED_MODULE_0__","src_app_shared_models_fmosNewRolePermissions__WEBPACK_IMPORTED_MODULE_1__","rxjs__WEBPACK_IMPORTED_MODULE_8__","emailNavObj","localStorage","getItem","emailNavigationObject","JSON","parse","getIndexValue","subscribe","resp","index","createEmail","loggedInUser","replace","navSubscription","getNavParam","editAddSysResp","data","emailTypes","emailForm","group","accountType","_angular_forms__WEBPACK_IMPORTED_MODULE_9__","emails","array","user_id","sessionStorage","role","eamilAuditLog","modNo","queryParams","inputBy","creator","recordStatus","rstatus","verifiedOnce","vStatus","inputTime","inputDate","verifiedStatus","vDate","verifiedTime","authtym","verifiedBy","authBy","emailType","console","log","buildEmailForm","getScreenDetails","modifyScreen","editFlag","auditLog","addAddress","screenLabelList","roleCodes","message","emailId","emailRequired","id","get","isResponse","isExit","touched","formTouched","sweetalert2__WEBPACK_IMPORTED_MODULE_2___default","text","showCancelButton","confirmButtonColor","cancelButtonColor","cancelButtonText","confirmButtonText","icon","then","result","isConfirmed","markForCheck","Promise","resolve","reject","undefined","selected","sendAccType","emailList","length","email","at","patchValue","screenName","getRoleScreenPermission","rolepermission","res","button_permission","e","push","getEmailItem","i","row","removeAt","deleteingParticluarRow","value","deleteResp","navigate","onclickOfDeleteOfEmailManagement","deletedRecord","onClickOfAuthOfEmailManagement","authresp","reopenResp","closeResp","elements","document","getElementsByTagName","values","sortedValues","sort","o","emailCheckForSameEmail","onclickOfEditOfEmailManagement","editResp","submitBtn","navigateByUrl","emailMaintenance","masterresponse","masterDatapermission","navigationExtras","sendNavParam","selectors","decls","vars","consts","template","ctx","routes","path","component","_email_management_email_management_component__WEBPACK_IMPORTED_MODULE_2__","_email_management_create_email_management_create_component__WEBPACK_IMPORTED_MODULE_1__","canDeactivate","src_app_shared_guards_can_deactivate_guard__WEBPACK_IMPORTED_MODULE_0__","EmailManagementRoutingModule","_angular_router__WEBPACK_IMPORTED_MODULE_4__","imports","exports","EmailManagementModule","_angular_common__WEBPACK_IMPORTED_MODULE_5__","_email_management_routing_module__WEBPACK_IMPORTED_MODULE_0__","angular_datatables__WEBPACK_IMPORTED_MODULE_2__","_angular_forms__WEBPACK_IMPORTED_MODULE_6__","declarations","_email_management_email_management_component__WEBPACK_IMPORTED_MODULE_1__","_email_management_create_email_management_create_component__WEBPACK_IMPORTED_MODULE_3__","EmailManagementComponent","getAllData","dtOptions","pagingType","pageLength","columnDefs","type","order","processing","lengthMenu","fetchScreenPermissions","dtTrigger","unsubscribe","emaildetails","setIndexValue","modNO","setItem","stringify","getAllEmail","emaildata","item","statusArr","find","startsWith","next","auditlog","removeItem","iconColor","createdBy","currentUser","window","location","reload","error"],"sources":["webpack:///src/app/shared/models/EmailAuditLog.ts","webpack:///src/app/views/email-management/email-management-create/email-management-create.component.html","webpack:///src/app/views/email-management/email-management-create/email-management-create.component.ts","webpack:///src/app/views/email-management/email-management-routing.module.ts","webpack:///src/app/views/email-management/email-management.module.ts","webpack:///src/app/views/email-management/email-management/email-management.component.html","webpack:///src/app/views/email-management/email-management/email-management.component.ts"],"sourcesContent":["export class EamilAuditLog\r\n{\r\n    emailType:string;\r\n    inputBy:string;\r\n    inputTime:Date;\r\n    modNo:number;\r\n    recordStatus:string;\r\n    verifiedBy:string\r\n    verifiedOnce:string\r\n    verifiedStatus:string\r\n    verifiedTime:string    \r\n\r\n}","<div class=\"pageContentMain\">\r\n    <div class=\"pageTitleCol\">\r\n      <h2 class=\"pageTitle\">Email Management</h2>\r\n    </div>\r\n    <form [formGroup]=\"emailForm\" class=\"formStyle\"  novalidate>\r\n      <div class=\"dbCardStyle cardWidth\">\r\n        <h2 class=\"pageTitle text-center mb-md-4 mb-3\">Email IDs for Email-Notification</h2>\r\n        <div class=\"row gy-4\">\r\n          <div class=\"col-10\">\r\n            <label for=\"roleName\" class=\"formLbl\">Select an option<span class=\"colorRed\">*</span></label>\r\n           \r\n            <select [(value)]=\"selected\" [attr.disabled]=\"editFlag ? '' : null\"  class=\"form-select\" aria-label=\"Default select example\" \r\n            formControlName=\"accountType\" \r\n            (change)=\"selectedChk($event.target.value)\"\r\n           >\r\n            <option hidden value=\"\" disabled selected >--Please select--</option>\r\n              <option value=\"Account_Block\" [disabled]=\"editFlag\">Account_Block</option>\r\n              <!-- <option value=\"{{selected}}\">Account Type</option> -->\r\n\r\n              <!-- <option>None</option> -->\r\n              <!-- <mat-option value=\"option2\">Option 2</mat-option>\r\n          <mat-option value=\"option3\">Option 3</mat-option> -->\r\n              </select>\r\n              <div class=\"errorColor\" *ngIf=\"emailForm.get('accountType').invalid && (emailForm.get('accountType').dirty || emailForm.get('accountType').touched)\">\r\n                <div *ngIf=\"emailForm.get('accountType').errors.required\">\r\n                Please Select Account Type\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <ng-container formArrayName=\"emails\">\r\n            <label for=\"\" class=\"formLbl\">Email Id<span class=\"colorRed\">*</span></label>\r\n            <div class=\"col-12\" *ngFor=\"let email of emails.controls;let i = index\">\r\n              <div class=\"row align-items-center\">\r\n                <ng-container [formGroup]=\"email\">\r\n                 \r\n                   <div class=\"col-10\">\r\n                     <input type=\"email\"  id=\"emailId\" class=\"form-control\" [readonly]=\"editFlag\"\r\n                          formControlName=\"emailId\" name=\"address_{{i}} \" \r\n                       pattern=\"[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$\" required [email]=\"true\" placeholder=\"example@gmail.com\" >\r\n                     <div class=\"errorColor\" *ngIf=\"email.get('emailId').invalid && (email.get('emailId').dirty || email.get('emailId').touched)\">\r\n                       <div *ngIf=\"email.get('emailId').errors.required\">\r\n                       Please Enter Email Id\r\n                     </div>\r\n                     <div *ngIf=\"emailForm.controls.emails.invalid && !email.get('emailId').errors.required \">\r\n                      Please Enter Valid Email Id\r\n                    </div>\r\n                   </div>\r\n                   </div>\r\n                   <div class=\"col-2\">\r\n                     <div class=\"inputHide\" >\r\n                       <a [ngClass]=\"{'isDisabled':emailForm.controls.emails.invalid || editFlag }\" (click)=\"removeAddress(i,email)\"> <img src=\"assets/images/delete-icon.svg\" alt=\"...\"> </a>\r\n                     </div>\r\n                   </div>\r\n                </ng-container>\r\n              </div>\r\n            </div>\r\n          </ng-container>\r\n          <div class=\"col-auto\">\r\n            <a class=\"addIcon primarybg\" (click)=\"addAddress()\" [ngClass]=\"{'isDisabled': editFlag }\">\r\n              <span><img src=\"assets/images/plus-icon.svg\" alt=\"...\"></span>\r\n            </a>\r\n          </div>\r\n          <div class=\"col-lg-12\" *ngIf=\"!modifyScreen\">\r\n            <div class=\"row g-3 pb-3 pt-3\">\r\n              <div class=\"col-auto\">\r\n                <button  class=\"btn smBtn minWdSmBtn btnPrimary\" (click)=\"logValue()\" [disabled]=\"emailForm.controls.emails.invalid ||!emailForm.value.accountType || !submitBtn\">Save</button>\r\n              </div>\r\n              <div class=\"col-auto\">\r\n                <button  routerLink=\"/email-management\" class=\"btn smBtn minWdSmBtn btnSecondary\">Exit</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n       \r\n        </div>\r\n        <div class=\"\" *ngIf=\"modifyScreen\">\r\n          <div class=\"row  pb-3 justify-content-center pt-3\">\r\n            <div class=\"col-auto\" style=\"margin-top: 10px;\" *ngIf=\"editFlag && (eamilAuditLog.recordStatus == 'OPEN' || eamilAuditLog.recordStatus == 'Open')\">\r\n              <button class=\"btn smBtn minWdSmBtn btnUpdate\" (click)=\"editValues()\">Edit</button>\r\n            </div>\r\n            <div class=\"col-auto\" style=\"margin-top: 10px;\" *ngIf=\"!editFlag\">\r\n              <button  class=\"btn smBtn minWdSmBtn btnUpdate\" (click)=\"logValue()\" [disabled]=\"emailForm.controls.emails.invalid ||!emailForm.value.accountType || !emailForm.dirty\"\r\n             >Save</button>\r\n            </div>\r\n            <div class=\"col-auto\" style=\"margin-top: 10px;\" *ngIf=\"(eamilAuditLog.verifiedStatus == 'U' || eamilAuditLog.verifiedStatus == 'UNAUTHORIZED' || eamilAuditLog.verifiedStatus == 'Unauthorized' ) && editFlag\">\r\n              <button class=\"btn smBtn minWdSmBtn btnAuth\"  (click)=\"onClickOfAuthOfEmailManagement()\">Auth</button>\r\n            </div>\r\n            <div class=\"col-auto\" style=\"margin-top: 10px;\" *ngIf=\"(eamilAuditLog.recordStatus == 'C' || eamilAuditLog.recordStatus == 'CLOSED' || eamilAuditLog.recordStatus == 'Close') && editFlag && eamilAuditLog.verifiedOnce == 'YES'\">\r\n              <button class=\"btn smBtn minWdSmBtn btnPrimary\" (click)=\"onclickOfReopenOfEamilManagement()\">Reopen</button>\r\n            </div>\r\n            <div class=\"col-auto\"style=\"margin-top: 10px;\"  *ngIf=\"(eamilAuditLog.recordStatus == 'O' || eamilAuditLog.recordStatus == 'OPEN' ||  eamilAuditLog.recordStatus == 'Open') && editFlag && eamilAuditLog.verifiedOnce == 'YES'\">\r\n              <button class=\"btn smBtn minWdSmBtn btnPrimary\" (click)=\"onclickOfCloseOfEmailManagement()\">Close</button>\r\n            </div>\r\n            <div class=\"col-auto\"  style=\"margin-top: 10px;\" *ngIf=\"editFlag && roleCodes.delete && (eamilAuditLog.verifiedOnce == 'NO' || eamilAuditLog.verifiedOnce == 'N') && (eamilAuditLog.verifiedStatus == 'U' || eamilAuditLog.verifiedStatus == 'UNAUTHORIZED')\">\r\n              <button [disabled]=\"emails.value.length != 0\" class=\"btn smBtn minWdSmBtn btnPrimary\" (click)=\"onClickOfDeleteOfEmailManagement()\">Delete</button>\r\n            </div>\r\n            <div class=\"col-auto\" style=\"margin-top: 10px;\">\r\n              <button routerLink=\"/email-management\" class=\"btn smBtn minWdSmBtn btnSecondary\">Exit</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n      <div class=\"dbCardStyle\" *ngIf=\"eamilAuditLog.emailType!=null\">\r\n        <div class=\"row\">\r\n          <div class=\"col-sm-6 col-md-4 col-lg-3\">\r\n            <div class=\"csCardStyle\">\r\n              <div class=\"row g-2 align-items-center\">\r\n                <div class=\"col-auto\">\r\n                  <div class=\"csCardStyleIcon csCardStyleIconBg1\">\r\n                    <i class=\"fa fa-edit faClass\"></i>\r\n                  </div>\r\n                </div>\r\n                <div class=\"col\">\r\n                  <div class=\"csCardStyleText\">\r\n                    <h2>Maker</h2>\r\n                    <p>{{eamilAuditLog.inputBy}}</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-sm-6 col-md-4 col-lg-3\">\r\n            <div class=\"csCardStyle\">\r\n              <div class=\"row g-2 align-items-center\">\r\n                <div class=\"col-auto\">\r\n                  <div class=\"csCardStyleIcon csCardStyleIconBg2\">\r\n                    <img src=\"assets/images/time-stamp-icon.svg\" alt=\"...\">\r\n                  </div>\r\n                </div>\r\n                <div class=\"col\">\r\n                  <div class=\"csCardStyleText\">\r\n                    <h2>Maker Time Stamp</h2>\r\n                    <p>{{eamilAuditLog.inputTime | date: 'MM/dd/yyyy, h:mm a'}}</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-sm-6 col-md-4 col-lg-3\">\r\n            <div class=\"csCardStyle\">\r\n              <div class=\"row g-2 align-items-center\">\r\n                <div class=\"col-auto\">\r\n                  <div class=\"csCardStyleIcon csCardStyleIconBg3\">\r\n                    <i class=\"fa fa-files-o faRecordStatus\" aria-hidden=\"true\"></i>\r\n                  </div>\r\n                </div>\r\n                <div class=\"col\">\r\n                  <div class=\"csCardStyleText\">\r\n                    <h2>Record Status</h2>\r\n                    <p>{{eamilAuditLog.recordStatus}}</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-sm-6 col-md-4 col-lg-3\">\r\n            <div class=\"csCardStyle\">\r\n              <div class=\"row g-2 align-items-center\">\r\n                <div class=\"col-auto\">\r\n                  <div class=\"csCardStyleIcon csCardStyleIconBg4\">\r\n                  <i class=\"fa fa-check-square-o faClassChecker\"></i>\r\n                  </div>\r\n                </div>\r\n                <div class=\"col\">\r\n                  <div class=\"csCardStyleText\">\r\n                    <h2>Checker</h2>\r\n                    <p>{{eamilAuditLog.verifiedBy}}</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-sm-6 col-md-4 col-lg-3\">\r\n            <div class=\"csCardStyle\">\r\n              <div class=\"row g-2 align-items-center\">\r\n                <div class=\"col-auto\">\r\n                  <div class=\"csCardStyleIcon csCardStyleIconBg5\">\r\n                    <img src=\"assets/images/checker-time-icon.svg\" alt=\"...\">\r\n                  </div>\r\n                </div>\r\n                <div class=\"col\">\r\n                  <div class=\"csCardStyleText\">\r\n                    <h2>Checker Time Stamp</h2>\r\n\r\n                    <p>{{eamilAuditLog.verifiedTime | date: 'MM/dd/yyyy, h:mm a'}}</p>\r\n\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-sm-6 col-md-4 col-lg-3\">\r\n            <div class=\"csCardStyle\">\r\n              <div class=\"row g-2 align-items-center\">\r\n                <div class=\"col-auto\">\r\n                  <div class=\"csCardStyleIcon csCardStyleIconBg6\">\r\n              <i class=\"fa fa-shield faClassFirstTimeAuth\"></i>\r\n                  </div>\r\n                </div>\r\n                <div class=\"col\">\r\n                  <div class=\"csCardStyleText\">\r\n                    <h2>First Time Authorization</h2>\r\n                    <p>{{eamilAuditLog.verifiedOnce}}</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-sm-6 col-md-4 col-lg-3\">\r\n            <div class=\"csCardStyle\">\r\n              <div class=\"row g-2 align-items-center\">\r\n                <div class=\"col-auto\">\r\n                  <div class=\"csCardStyleIcon csCardStyleIconBg7\">\r\n                   <img src=\"assets/images/authorize.svg\" alt=\"...\" class=\"modImage\">\r\n                  </div>\r\n                </div>\r\n                <div class=\"col\">\r\n                  <div class=\"csCardStyleText\">\r\n                    <h2>Authorization Status</h2>\r\n                    <p>{{eamilAuditLog.verifiedStatus}}</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-sm-6 col-md-4 col-lg-3\">\r\n            <div class=\"csCardStyle\">\r\n              <div class=\"row g-2 align-items-center\">\r\n                <div class=\"col-auto\">\r\n                  <div class=\"csCardStyleIcon csCardStyleIconBg7\">\r\n                     <img src=\"assets/images/modification.svg\" class=\"modImage\" alt=\"...\" >\r\n                  </div>\r\n                </div>\r\n                <div class=\"col\">\r\n                  <div class=\"csCardStyleText\">\r\n                    <h2>Modification Number</h2>\r\n                    <p>{{eamilAuditLog.modNo }}</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  </div>","import { ChangeDetectorRef, Component, OnInit } from '@angular/core';\r\nimport { FormArray, FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, NavigationExtras, Router } from '@angular/router';\r\nimport { Ng2IzitoastService } from 'ng2-izitoast';\r\nimport { empty, Observable, of, Subject } from 'rxjs';\r\nimport { CanDeactivateGuard, IDeactivateComponent } from 'src/app/shared/guards/can-deactivate.guard';\r\nimport { EamilAuditLog } from 'src/app/shared/models/EmailAuditLog';\r\nimport { permissionsLabels } from 'src/app/shared/models/fmosNewRolePermissions';\r\nimport { AccountBlockingServiceService } from 'src/app/shared/services/account-blocking-service.service';\r\nimport { RoleService } from 'src/app/shared/services/role.service';\r\nimport Swal from 'sweetalert2';\r\nimport { UsersService } from '../../users/users.service';\r\n\r\n@Component({\r\n  selector: 'npr-email-management-create',\r\n  templateUrl: './email-management-create.component.html',\r\n  styleUrls: ['./email-management-create.component.scss']\r\n})\r\nexport class EmailManagementCreateComponent implements OnInit, IDeactivateComponent{\r\n  masterresponse: any;\r\n  masterDatapermission: boolean;\r\n  selected: any;\r\n  allDetails: any;\r\n  // interface email\r\n  // {\r\n  //   emailId: '',\r\n  //   emailType: '',\r\n  //   emailRequired:'',\r\n  //   id:'',\r\n  // }\r\n  public emailList: any = []\r\n  loggedInUser: string;\r\n  user_id: string;\r\n  role: string;\r\n  eamilAuditLog = new EamilAuditLog();\r\n  screenName: string;\r\n  button_permission: any = {};\r\n  rolepermission: any;\r\n  rowId: any;\r\n  editFlag = false;\r\n  modifyScreen: boolean = false;\r\n  emailForm: FormGroup;\r\n  navSubscription: any;\r\n  editAddSysResp: any;\r\n  submitBtn: boolean=true;\r\n  roleCodes = new permissionsLabels();\r\n  emailTypes: string;\r\n  formTouched: boolean=true;\r\n  emailNavObj: string;\r\n  showDialog = false;\r\n  subject = new Subject<boolean>();\r\n  emailCheckForSameEmail:boolean = false;\r\n\r\n  emailNavigationObject: any;\r\n  // allDetails: import(\"d:/GITHUB REPOSITORY_UI/median_v2/src/app/shared/models/EmailDetails\").EmailDetails;\r\n  constructor(private accountBlockingService: AccountBlockingServiceService, private ref: ChangeDetectorRef,\r\n    private userApi: UsersService, private route: ActivatedRoute,\r\n    public iziToast: Ng2IzitoastService,public roleService:RoleService,\r\n    private formBuilder: FormBuilder,private cdr: ChangeDetectorRef,\r\n    private router:Router) { }\r\n  ngOnInit(): void {\r\n    this.emailNavObj=localStorage.getItem('emailManagementNavObj');\r\n    this.emailNavigationObject = JSON.parse(this.emailNavObj); \r\n    this.accountBlockingService.getIndexValue().subscribe(resp=>{\r\n      if(resp.index=== ''){\r\n        this.createEmail();\r\n      }\r\n    })\r\n    this.loggedInUser = localStorage.getItem('userFromLogin').replace(/['\"]+/g, '');\r\n    this.navSubscription = this.accountBlockingService.getNavParam.subscribe(data =>this.editAddSysResp =data);\r\n\r\n    this.emailTypes = localStorage.getItem('EmailType');\r\n    this.emailForm = this.formBuilder.group({\r\n      accountType: ['', Validators.required],\r\n      emails: this.formBuilder.array([])\r\n    });\r\n    this.user_id = sessionStorage.getItem('user_id');\r\n    this.role = sessionStorage.getItem('user_role');\r\n \r\n        this.eamilAuditLog.modNo =this.editAddSysResp.queryParams.modNo;\r\n        this.eamilAuditLog.inputBy =this.editAddSysResp.queryParams.creator;\r\n        this.eamilAuditLog.recordStatus = this.editAddSysResp.queryParams.rstatus;\r\n        this.eamilAuditLog.verifiedOnce = this.editAddSysResp.queryParams.vStatus;\r\n        this.eamilAuditLog.inputTime = this.editAddSysResp.queryParams.inputDate;\r\n        this.eamilAuditLog.verifiedStatus =this.editAddSysResp.queryParams.vDate;\r\n        this.eamilAuditLog.verifiedTime =this.editAddSysResp.queryParams.authtym;\r\n        this.eamilAuditLog.verifiedBy =this.editAddSysResp.queryParams.authBy;\r\n        this.eamilAuditLog.emailType = this.editAddSysResp.queryParams.emailType;\r\n\r\n        console.log(this.eamilAuditLog);\r\n    \r\n      if(this.editAddSysResp.queryParams.emailType=='Account_Block'){\r\n        this.buildEmailForm(this.eamilAuditLog);\r\n        this.getScreenDetails();\r\n     }\r\n  \r\n     if(this.editAddSysResp.queryParams.emailType != 'Account_Block'){\r\n  \r\n      if(JSON.parse(this.emailNavObj) != null){\r\n        this.buildEmailForm(this.emailNavigationObject);\r\n        this.getScreenDetails();\r\n        this.modifyScreen = true;\r\n        this.editFlag = true;\r\n      }\r\n     } \r\n\r\n      if ( this.eamilAuditLog.emailType) {\r\n        this.modifyScreen = true;\r\n        this.editFlag = true;\r\n      }\r\n      this.auditLog();\r\n\r\n    if(this.eamilAuditLog.emailType==null){\r\n      this.addAddress();\r\n    }\r\n    this.roleService.screenLabelList.subscribe(message => this.roleCodes = message);\r\n  \r\n  }\r\nauditLog() {\r\n    if (this.eamilAuditLog.verifiedStatus === 'U') {\r\n      this.eamilAuditLog.verifiedStatus = 'UNAUTHORIZED'\r\n    }\r\n    if (this.eamilAuditLog.verifiedStatus === 'A') {\r\n      this.eamilAuditLog.verifiedStatus = 'AUTHORIZED'\r\n    }\r\n    if (this.eamilAuditLog.recordStatus === 'O') {\r\n      this.eamilAuditLog.recordStatus = 'OPEN'\r\n    }\r\n    if (this.eamilAuditLog.recordStatus === 'C') {\r\n      this.eamilAuditLog.recordStatus = 'CLOSED'\r\n    }\r\n    if (this.eamilAuditLog.verifiedOnce === 'N') {\r\n      this.eamilAuditLog.verifiedOnce = 'NO'\r\n    }\r\n    if (this.eamilAuditLog.verifiedOnce === 'Y') {\r\n      this.eamilAuditLog.verifiedOnce = 'YES'\r\n    }\r\n  }\r\n  getEmailItem() {\r\n    return this.formBuilder.group({\r\n      emailType: ['Account_Block'],\r\n      emailId: [''],\r\n      emailRequired: ['Y'],\r\n      id:[''],\r\n      // modNo:['']\r\n    });\r\n  }\r\n\r\n  get emails() {\r\n    return this.emailForm.get('emails') as FormArray;\r\n  }\r\n\r\n  buildEmailForm(data?, isResponse?: boolean){\r\n    this.emailForm = this.formBuilder.group({\r\n      accountType: [data.emailType ? data.emailType : '',   [\r\n        Validators.required,\r\n        Validators.pattern(\r\n          \"^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$\"\r\n        ),\r\n      ]],\r\n      emails: this.formBuilder.array([])\r\n    }); \r\n   \r\n  }\r\n  \r\n  canExit() : Promise<boolean> {\r\n    let isExit :boolean = false;\r\n    if (this.emailForm.touched  && this.formTouched==true) {\r\n    return Swal.fire({ \r\n      text: 'There are unsaved changes in the screen. Would you like to navigate to other screen?',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#E6224A',\r\n      cancelButtonColor: '#011945',\r\n      cancelButtonText: 'NO',\r\n      confirmButtonText: 'YES',\r\n      icon: 'info',\r\n    }).then((result) => {\r\n      if (result.isConfirmed === true) {\r\n        isExit=true;\r\n        this.cdr.markForCheck();\r\n           return isExit;\r\n      }\r\n      else{\r\n        isExit=false;\r\n        this.cdr.markForCheck();\r\n        return isExit;\r\n      }\r\n    \r\n    });\r\n  }\r\n else{\r\n  isExit=true;\r\n  return new Promise((resolve, reject) => {\r\n    if (isExit === true) {\r\n      isExit=true;\r\n      this.cdr.markForCheck();\r\n      resolve(true);\r\n    }\r\n  \r\n  })\r\n }\r\n    }\r\n\r\n \r\n\r\n  getScreenDetails() {\r\n// this.eamilAuditLog=this.emailNavigationObject;\r\n   \r\n    if(this.eamilAuditLog.emailType == undefined){\r\n      this.eamilAuditLog=this.emailNavigationObject;\r\n    }\r\n    this.selected=this.eamilAuditLog.emailType;\r\n    \r\n    this.accountBlockingService.sendAccType(this.eamilAuditLog.emailType).subscribe((resp: any) => {\r\n     \r\n      this.emailList = resp;\r\n      for (let index = 0; index < this.emailList.length; index++) {\r\n        this.addAddress();\r\n        const email = this.emailList[index];\r\n        // this.emails.at(index).get('emails').patchValue(email);\r\n        this.emails.at(index).patchValue(email);\r\n        \r\n      }\r\n     \r\n    });\r\n\r\n\r\n  }\r\n  screenpermission() {\r\n    this.screenName = 'roles';\r\n    // this.role='ROLE1';\r\n    this.userApi.getRoleScreenPermission(this.loggedInUser, this.screenName, this.role).subscribe(res => {\r\n      this.rolepermission = res;\r\n      //console.log(this.rolepermission);\r\n      if (this.rolepermission) {\r\n        this.button_permission = this.rolepermission[0];\r\n        //console.log( this.button_permission);\r\n      }\r\n    });\r\n\r\n  }\r\n  editValues() {\r\n    this.editFlag = false;\r\n\r\n  }\r\n \r\n  selectedChk(e) {\r\n   \r\n    this.selected = e;\r\n  }\r\n\r\n  // TODO\r\n  addAddress() {\r\n    this.emails.push(this.getEmailItem());\r\n  }\r\n\r\n  removeAddress(i,row) {\r\n    // if(i=== 0){\r\n    //   this.emailForm.controls.emails.reset()\r\n    // }\r\n    // else{\r\n    //  console.log(this.eamilAuditLog);\r\n      // if(this.eamilAuditLog.emailType==undefined){\r\n        // console.log(row,i,\"If\");\r\n          this.emails.removeAt(i);\r\n      // }\r\n    \r\n    // else{\r\n    this.accountBlockingService.deleteingParticluarRow(this.eamilAuditLog.emailType, this.loggedInUser, row.value.id)\r\n      .subscribe(deleteResp => {\r\n        if (deleteResp == true) {\r\n          this.emails.removeAt(i);\r\n          Swal.fire({\r\n\r\n            text: 'Record is Deleted',\r\n            icon: 'success',\r\n\r\n          })\r\n          this.router.navigate(['/email-management']);\r\n        } else {\r\n          \r\n          Swal.fire({\r\n\r\n            text: 'Once Verifed Record Cannot Be Deleted',\r\n            icon: 'warning',\r\n\r\n          });\r\n        }\r\n        this.ref.markForCheck();\r\n      });\r\n    // }\r\n  }\r\n  \r\n  onClickOfDeleteOfEmailManagement() {\r\n    //console.log('this is delete call');\r\n    //  this.eamilAuditLog.inputBy = this.loggedInUser;\r\n    Swal.fire({\r\n      text: 'You are trying to Delete record. ' + ' Do you want to proceed?',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#E6224A',\r\n      cancelButtonColor: '#011945',\r\n      // confirmButtonText: 'PROCEED.'\r\n      cancelButtonText: 'NO',\r\n      confirmButtonText: 'YES',\r\n      icon: 'info',\r\n    }).then((result) => {\r\n      if (result.isConfirmed === true) {\r\n    this.accountBlockingService.onclickOfDeleteOfEmailManagement(this.selected, this.loggedInUser).subscribe(deletedRecord => {\r\n      console.log(deletedRecord);\r\n      if (deletedRecord == false) {\r\n        Swal.fire({\r\n\r\n          text: 'Record Deletion Failed',\r\n          icon: 'error',\r\n\r\n        });\r\n      \r\n      } else {\r\n        Swal.fire({\r\n          text:'Record Deleted SuccessFully',\r\n        icon:'success'\r\n      });\r\n      }\r\n    });\r\n    this.ref.markForCheck();\r\n      }\r\n});\r\n}\r\n  onClickOfAuthOfEmailManagement() {\r\n    // if(this.loggedInUser === this.eamilAuditLog.inputBy){\r\n    //   Swal.fire({\r\n    //     text:  \"Maker cannot authorize the record\",\r\n    //    icon:'error'\r\n    //     });\r\n    //     return\r\n    // } else {\r\n      Swal.fire({\r\n        text:\r\n          'You are trying to Authorize record. ' + ' Do you want to proceed?',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#E6224A',\r\n        cancelButtonColor: '#011945',\r\n        // confirmButtonText: 'PROCEED.'\r\n        cancelButtonText: 'NO',\r\n        confirmButtonText: 'YES',\r\n        icon: 'info',\r\n      }).then((result) => {\r\n        if (result.isConfirmed === true) {\r\n          this.accountBlockingService.onClickOfAuthOfEmailManagement('Verify','Account_Block',this.loggedInUser).subscribe(authresp => {\r\n            if (authresp) {\r\n              Swal.fire({\r\n                text: 'Record is Authorized',  \r\n                icon:'success'\r\n              });\r\n              this.eamilAuditLog=authresp;\r\n              this.auditLog();\r\n            } else {\r\n              Swal.fire({\r\n                text: 'Record Authorization is Failed',  \r\n                icon:'error'\r\n              });\r\n            }\r\n          });\r\n        }\r\n        if(this.loggedInUser === this.eamilAuditLog.inputBy){\r\n            Swal.fire({\r\n              text:  \"Maker cannot authorize the record\",\r\n             icon:'error'\r\n              });\r\n              return\r\n          }\r\n      });\r\n\r\n    \r\n    this.ref.markForCheck();\r\n  }\r\n  onclickOfReopenOfEamilManagement() {\r\n    //console.log('this is Reopen');\r\n    // this.eamilAuditLog.inputBy = this.loggedInUser;\r\n\r\n    Swal.fire({\r\n      text: 'You are trying to Reopen record. ' + ' Do you want to proceed?',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#E6224A',\r\n      cancelButtonColor: '#011945',\r\n      // confirmButtonText: 'PROCEED.'\r\n      cancelButtonText: 'NO',\r\n      confirmButtonText: 'YES',\r\n      icon: 'info',\r\n    }).then((result) => {\r\n      if (result.isConfirmed === true) {\r\n    this.accountBlockingService.onClickOfAuthOfEmailManagement('reopen','Account_Block',this.loggedInUser).subscribe(reopenResp => {\r\n \r\n      if (reopenResp == false) {\r\n        // this.iziToast.show({\r\n        //   message: `UnAuthorized Records Cannot Be Reopen`,\r\n        //   image: \"assets/images/user.png\",\r\n        //   icon: 'ico ico-success',\r\n        //   theme: \"dark\",\r\n        //   layout: 2,\r\n        //   // imageWidth:50,\r\n        //   balloon: false,\r\n        //   position: \"topRight\",\r\n        //   progressBarColor: \"green\",\r\n        //   pauseOnHover: true,\r\n        // });\r\n        Swal.fire({\r\n\r\n          text: 'UnAuthorized Records Cannot Be Reopen',\r\n          icon: 'warning',\r\n\r\n        });\r\n      } else {\r\n        this.eamilAuditLog=reopenResp;\r\n        this.auditLog();\r\n        Swal.fire({\r\n\r\n          text: 'Record is Reopened',\r\n          icon: 'success',\r\n\r\n        });\r\n        // this.iziToast.show({\r\n        //   message: `You Opened the record`,\r\n        //   image: \"assets/images/user.png\",\r\n        //   icon: 'ico ico-success',\r\n        //   theme: \"dark\",\r\n        //   layout: 2,\r\n        //   // imageWidth:50,\r\n        //   balloon: false,\r\n        //   position: \"topRight\",\r\n        //   progressBarColor: \"green\",\r\n        //   pauseOnHover: true,\r\n        // });\r\n      }\r\n\r\n    });\r\n  }\r\n});\r\n}\r\n  onclickOfCloseOfEmailManagement() {\r\n    //  this.eamilAuditLog.inputBy = this.loggedInUser;\r\n    Swal.fire({\r\n      text: 'You are trying to Close record. ' + ' Do you want to proceed?',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#E6224A',\r\n      cancelButtonColor: '#011945',\r\n      // confirmButtonText: 'PROCEED.'\r\n      cancelButtonText: 'NO',\r\n      confirmButtonText: 'YES',\r\n      icon: 'info',\r\n    }).then((result) => {\r\n      if (result.isConfirmed === true) {\r\n    this.accountBlockingService.onClickOfAuthOfEmailManagement('close','Account_Block',this.loggedInUser).subscribe(closeResp => {\r\n      \r\n      if (closeResp == false) {\r\n        Swal.fire({\r\n\r\n          text: 'UnAuthorized Records Cannot Be Closed',\r\n          icon: 'warning',\r\n\r\n        });\r\n\r\n        // this.iziToast.show({\r\n        //   message: `UnAuthorized Records Cannot Be Closed`,\r\n        //   image: \"assets/images/user.png\",\r\n        //   icon: 'ico ico-success',\r\n        //   theme: \"dark\",\r\n        //   layout: 2,\r\n        //   // imageWidth:50,\r\n        //   balloon: false,\r\n        //   position: \"topRight\",\r\n        //   progressBarColor: \"green\",\r\n        //   pauseOnHover: true,\r\n        // });\r\n      } else {\r\n        this.eamilAuditLog=closeResp\r\n        this.auditLog();\r\n        Swal.fire({\r\n\r\n          text: 'Record is Closed',\r\n          icon: 'success',\r\n\r\n        });\r\n        // this.iziToast.show({\r\n        //   message: `You Closed The Record`,\r\n        //   image: \"assets/images/user.png\",\r\n        //   icon: 'ico ico-success',\r\n        //   theme: \"dark\",\r\n        //   layout: 2,\r\n        //   // imageWidth:50,\r\n        //   balloon: false,\r\n        //   position: \"topRight\",\r\n        //   progressBarColor: \"green\",\r\n        //   pauseOnHover: true,\r\n        // });\r\n      }\r\n    });\r\n  }\r\n});\r\n}\r\n  \r\n  logValue() {\r\n    \r\n   \r\n  //   console.log(this.emailNavigationObject.detailNotif);\r\n  //   for(var i = 0 ;i < this.emailNavigationObject.detailNotif.length ;i++){\r\n  //     console.log(this.emailNavigationObject.detailNotif[i].emailId);\r\n  //     // elements = this.emailNavigationObject.detailNotif[i].emailId;\r\n  //     values.push(this.emailNavigationObject.detailNotif[i].emailId)\r\n      \r\n  //   }\r\n  // console.log(values);\r\n    \r\n    var elements = document.getElementsByTagName(\"input\");\r\n    console.log(elements);\r\n    \r\n\r\n    var values = [];\r\n    for (var i = 0; i < elements.length; i++) {\r\n        values.push(elements[i].value);\r\n    }\r\n    console.log(values);\r\n    var sortedValues = values.sort();\r\n    for (var o = 2; o < values.length-1; o++) {\r\n        if (values[o] === values[o+1]){\r\n          this.emailCheckForSameEmail = true;\r\n        }\r\n            \r\n          \r\n    }\r\n    // if (this.eamilAuditLog.emailType != null || this.eamilAuditLog.emailType != undefined) {\r\n      console.log(this.eamilAuditLog.inputBy);\r\n      console.log(this.emailTypes);\r\n      if(this.emailCheckForSameEmail){\r\n        Swal.fire('Please Enter Different Email Id').then(()=>{\r\n          this.emailCheckForSameEmail = false});\r\n\r\n      }\r\n       if((this.eamilAuditLog.inputBy !=null || this.emailTypes == 'Account_Block')&&this.emailCheckForSameEmail == false){\r\n      this.accountBlockingService.onclickOfEditOfEmailManagement(this.selected, this.loggedInUser, this.emails.value).subscribe(editResp => {\r\n        console.log(editResp,\"If\");\r\n        if (editResp == null) {\r\n          Swal.fire({\r\n\r\n            text: 'Failed To Uppdate The Record',\r\n            icon: 'warning',\r\n\r\n          });\r\n        } else {\r\n          this.eamilAuditLog = editResp;\r\n          this.auditLog();\r\n          this.formTouched=!this.emailForm.touched;\r\n          this.modifyScreen=true;\r\n          this.submitBtn=false;\r\n          this.editFlag=true;\r\n          Swal.fire({\r\n\r\n            text: 'Record is Updated',\r\n            icon:'success'\r\n\r\n          }).then((result=>{\r\n            this.router.navigateByUrl(\"/email-management\")\r\n          }));\r\n        \r\n        }\r\n      });\r\n\r\n    }\r\n   if(this.emailTypes != 'Account_Block') {\r\n      console.log(\"else\");\r\n\r\n      this.accountBlockingService.emailMaintenance(this.selected,this.loggedInUser,this.emails.value).subscribe(resp => {\r\n        this.masterresponse=resp;\r\n        this.eamilAuditLog=this.masterresponse;\r\n        if(resp){\r\n           this.masterDatapermission=true;\r\n           this.auditLog();\r\n          this.formTouched=!this.emailForm.touched;\r\n          this.modifyScreen=true;\r\n          this.submitBtn=false;\r\n           Swal.fire({\r\n\r\n            text: 'Record is Created',\r\n            icon:'success'\r\n\r\n          }).then((result=>{\r\n            this.router.navigateByUrl(\"/email-management\")\r\n          }));\r\n          \r\n        }\r\n        else if(resp==null)\r\n        {\r\n         // this.masterDatapermission=false;\r\n         Swal.fire('Email Id Already Exit ');\r\n        }\r\n        else{\r\n          Swal.fire('Unable to Save the Record ');\r\n        }\r\n        \r\n       });\r\n      }\r\n    // }\r\n    // this.accountBlockingService.emailMaintenance(this.selected, this.loggedInUser, this.emails.value).subscribe(resp => {\r\n    //   this.masterresponse = resp;\r\n    //   console.log(resp);\r\n    //   if (resp) {\r\n    //     this.editFlag=true;\r\n    //     this.submitBtn=false;\r\n    //     this.masterDatapermission = true;\r\n    //      Swal.fire({\r\n    //        text:'Success ',\r\n    //        icon:'success'});\r\n    //   }\r\n    //   else if (resp == null) {\r\n    //     Swal.fire({\r\n    //       text:'Email Id Already Exit ',\r\n    //       icon:'warning'}\r\n    //       );\r\n    //   }\r\n    //   else {\r\n    //      Swal.fire({\r\n    //        text:'Unable to Save the Record ',\r\n    //        icon:'error'});\r\n    //   }\r\n\r\n    // });\r\n  }\r\n  createEmail(){\r\n    const navigationExtras: NavigationExtras = {\r\n      queryParams: {}\r\n    }\r\n    this.accountBlockingService.sendNavParam(navigationExtras);\r\n\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { CanDeactivateGuard } from 'src/app/shared/guards/can-deactivate.guard';\r\nimport { EmailManagementCreateComponent } from './email-management-create/email-management-create.component';\r\nimport { EmailManagementComponent } from './email-management/email-management.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path:\"\",\r\n    component:EmailManagementComponent\r\n  },\r\n  {\r\n    path:\"create\",\r\n    component:EmailManagementCreateComponent,\r\n    canDeactivate: [CanDeactivateGuard]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class EmailManagementRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { EmailManagementRoutingModule } from './email-management-routing.module';\r\nimport { EmailManagementComponent } from './email-management/email-management.component';\r\nimport { DataTablesModule } from 'angular-datatables';\r\nimport { EmailManagementCreateComponent } from './email-management-create/email-management-create.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    EmailManagementComponent,\r\n    EmailManagementCreateComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    EmailManagementRoutingModule,\r\n    DataTablesModule,\r\n    ReactiveFormsModule,\r\n    FormsModule\r\n  ]\r\n})\r\nexport class EmailManagementModule { }\r\n","<div class=\"pageContentMain\">\r\n    <div class=\"pageTitleCol\">\r\n      <h2 class=\"pageTitle\">Email Management</h2>\r\n    </div>\r\n    <div class=\"dbCardStyle\">\r\n      <div class=\"row g-3 pb-3 justify-content-end\">\r\n        <div class=\"col-auto\" *ngIf=\"roleCodes.new\">\r\n          <a (click)=\"createEmail()\" class=\"btn smBtn minWdSmBtn btnPrimary\">{{roleCodes.new.labelDescription}}</a>\r\n        </div>\r\n        <div class=\"col-auto\">\r\n          <a href=\"javascript:void(0)\" class=\"btn smBtn minWdSmBtn btnSecondary\">Exit</a>\r\n        </div>\r\n      </div>\r\n      <div class=\"table-responsive\">\r\n      <table datatable [dtOptions]=\"dtOptions\" [dtTrigger]=\"dtTrigger\"\r\n      class=\"dataTable table tableStyle  nowrap vAlignMdl\" style=\"width:100%\">\r\n      <!-- <table id=\"dbTable1\" datatable class=\"dataTable table tableStyle responsive nowrap\" style=\"width:100%\"> -->\r\n        <thead>\r\n          <tr>\r\n            <th>account type </th>\r\n            <th>maker id</th>\r\n            <th>Auth Status</th>\r\n            <th>Record Status</th>\r\n            <th>Date</th>\r\n            <th>Action</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr *ngFor=\"let email of emaildata\">\r\n            <td>\r\n              <a routerLink=\"/email-management/create/{{email.emailType}}\" (click)=\"getEmail(email)\" class=\"primaryColor\">{{email.emailType}}</a>\r\n            </td>\r\n            <!-- <td routerLink=\"/email-management/create\" class=\"primaryColor\">{{email.emailType}}</td> -->\r\n            <td>{{email.inputBy}}</td>\r\n            <td>{{email.verifiedStatus}}</td>\r\n            <td>{{email.recordStatus }}</td>\r\n            <td>{{email.inputTime | date:'medium'}}</td>\r\n            <td>\r\n              \r\n                 <button  class=\"btn\"\r\n                 style=\"color: red\"\r\n                 title=\"Authorize\" [disabled]=\"email.verifiedStatus != 'U' || email.verifiedStatus != 'UNAUTHORIZED' || email.verifiedStatus != 'Unauthorized' \" (click)=\" auth(email)\">\r\n                  <img class=\"summaryIcon\" src=\"assets/images/authorize.svg\" alt=\"Authorize\">\r\n                  </button>\r\n\r\n                  <button class=\"btn\"\r\n                  style=\"color: red\"\r\n                  title=\"Delete\" *ngIf=\"email.verifiedOnce== 'N' || email.verifiedOnce== 'NO'\">\r\n                    <img class=\"summaryIcon\" src=\"assets/images/delete.svg\" alt=\"...\">\r\n                  </button>\r\n\r\n                  <button class=\"btn\"\r\n                  style=\"color: red\"\r\n                  title=\"Close\" *ngIf=\"(email.recordStatus== 'O' || email.recordStatus== 'Open' || email.recordStatus== 'OPEN') && (email.verifiedOnce== 'Y' || email.verifiedOnce== 'YES')\" \r\n                  (click)=\"  close(email) \">\r\n                    <img class=\"summaryIcon\" src=\"assets/images/CROSS1.svg\"   alt=\"...\">\r\n                    </button> \r\n\r\n                    <button class=\"btn\"\r\n                    style=\"color: red\"\r\n                    title=\"Reopen\" *ngIf=\"email.recordStatus== 'C' || email.recordStatus == 'CLOSED' || email.recordStatus == 'Close' || email.recordStatus=='c'\" (click)=\"reopen(email)\">\r\n                     <img class=\"summaryIcon\" src=\"assets/images/open.svg\"  alt=\"...\">\r\n                     </button>\r\n     \r\n\r\n\r\n          </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n    \r\n    </div>\r\n  </div>","import { Component, OnInit } from '@angular/core';\r\nimport { NavigationExtras, Router } from '@angular/router';\r\nimport { Subject } from 'rxjs';\r\nimport { EamilAuditLog } from 'src/app/shared/models/EmailAuditLog';\r\nimport { permissionsLabels } from 'src/app/shared/models/fmosNewRolePermissions';\r\nimport { AccountBlockingServiceService } from 'src/app/shared/services/account-blocking-service.service';\r\nimport { RoleService } from 'src/app/shared/services/role.service';\r\nimport { UsersService } from 'src/app/shared/services/user.service';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'npr-email-management',\r\n  templateUrl: './email-management.component.html',\r\n  styleUrls: ['./email-management.component.scss']\r\n})\r\nexport class EmailManagementComponent implements OnInit {\r\n  emaildata: any;\r\n  user_id: string;\r\n  role: string;\r\n  dtOptions: DataTables.Settings = {};\r\n  dtTrigger: Subject<any> = new Subject<any>();\r\n  roleCodes = new permissionsLabels();\r\n  emaildetails: any;\r\n  eamilAuditLog = new EamilAuditLog();\r\n  loggedInUser: string;\r\n  ref: any;\r\n  selected: string;\r\n  currentUser: any;\r\n  statusArr: string[]=  ['Open' , 'Close'];\r\n\r\n  constructor(private accountBlockingService: AccountBlockingServiceService,private roleService:RoleService,\r\n    private router: Router,private userApi:UsersService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.user_id=sessionStorage.getItem('user_id');\r\n    this.role=sessionStorage.getItem('user_role');\r\n    this.getAllData();\r\n   \r\n    this.dtOptions = {\r\n      pagingType: 'full_numbers',\r\n      pageLength : 5,\r\n      columnDefs: [ { type: 'date', 'targets': [3] } ],\r\n      order: [[3, 'desc']],\r\n      processing: true,\r\n      lengthMenu: [\r\n        [5, 10, 20, 30,-1],\r\n        [5, 10, 20, 30,\"ALL\"],\r\n      ],\r\n      // columnDefs: [ { type: 'date', 'targets': [5] } ],\r\n      // order: [[5, 'desc']],\r\n\r\n    };\r\n    this.loggedInUser = localStorage.getItem('userFromLogin').replace(/['\"]+/g, '');\r\n    this.roleService.fetchScreenPermissions('Email-Management');\r\n    this.roleService.screenLabelList.subscribe(message => this.roleCodes = message);\r\n  }\r\n  ngOnDestroy(): void {\r\n    // Do not forget to unsubscribe the event\r\n    this.dtTrigger.unsubscribe();\r\n  }\r\n  getEmail(email) {\r\n    console.log(\"email\",email);\r\n    this.emaildetails=email;\r\n    //console.log(row.modNO);\r\n    this.accountBlockingService.setIndexValue({\r\n      index: 'edit',\r\n    });\r\n    const navigationExtras: NavigationExtras = {\r\n      queryParams: {\r\n        modNo:email.modNO,\r\n        creator:email.inputBy,\r\n        rstatus:email.recordStatus,\r\n        vStatus:email.verifiedOnce,\r\n        inputDate:email.inputTime,\r\n        vDate:email.verifiedStatus,\r\n        authtym:email.verifiedTime,\r\n        authBy:email.verifiedBy,\r\n        emailType:email.emailType\r\n      }\r\n\r\n    };\r\n    localStorage.setItem('emailManagementNavObj',JSON.stringify(this.emaildetails))\r\n    this.accountBlockingService.sendNavParam(navigationExtras);\r\n      this.router.navigate(['email-management/create']);\r\n      // this.router.navigate(['email-management/create'],navigationExtras);\r\n      console.log(navigationExtras);\r\n  }\r\n  getAllData() {\r\n    this.accountBlockingService.getAllEmail().subscribe(emaildata => {\r\n      this.emaildata = emaildata.result;\r\n      console.log(this.emaildata[0].emailType);\r\n      for(let item of emaildata.result){\r\n        item.recordStatus = this.statusArr.find((i)=>\r\n        i.startsWith(item.recordStatus)\r\n        );\r\n      }\r\n      localStorage.setItem(\"EmailType\",this.emaildata[0].emailType );\r\n      this.dtTrigger.next();\r\n      console.log(this.emaildata);\r\n      this.auditlog();\r\n    })\r\n    localStorage.setItem(\"EmailSwitch\", \"existing\");\r\n    localStorage.setItem(\"responseFromEmailSummary\", this.emaildata);\r\n  \r\n  }\r\n  createEmail(){\r\n    localStorage.removeItem('emailManagementNavObj');\r\n    this.router.navigate(['/email-management/create']);\r\n    const navigationExtras: NavigationExtras = {\r\n      queryParams: {}\r\n      \r\n    }\r\n    this.accountBlockingService.sendNavParam(navigationExtras);\r\n      \r\n   \r\n    this.accountBlockingService.setIndexValue({\r\n      index: 'new',\r\n    });\r\n  }\r\n  auth(email) {\r\n    Swal.fire({\r\n      //text: 'Unable to process' + 'Error ' + this.responseforfileupload.errorMessage + 'Do you want to Proceed??',\r\n      text: 'You are trying to Authorize record. ' + ' Do you want to proceed?',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3e54b8',\r\n      cancelButtonColor: '#d33',\r\n      // confirmButtonText: 'PROCEED.'\r\n      cancelButtonText: 'NO',\r\n      confirmButtonText: 'YES',\r\n      icon: 'info',\r\n      iconColor: '#d33',\r\n    }).then((result) => {\r\n      console.log('this is reopen ', result);\r\n      if (result.isConfirmed === true) {\r\n        if (email.createdBy === localStorage.getItem('userFromLogin')) {\r\n          Swal.fire({ text: 'Maker Cannot Authorize Record!', icon: 'error' });\r\n          return;\r\n        }\r\n        console.log('this is authorzation');\r\n        email.loggedInUser = this.currentUser;\r\n        this.accountBlockingService.onClickOfAuthOfEmailManagement('Verify','Account_Block',this.loggedInUser).subscribe(\r\n          (resp) => {\r\n            console.log(resp);\r\n            this.eamilAuditLog = resp;\r\n            this.auditlog();\r\n            if (resp) {\r\n              Swal.fire({\r\n                text: 'Record is Authorized',\r\n                icon: 'success',\r\n              }).then(() => window.location.reload());\r\n            }\r\n          }\r\n          // (error) => {\r\n          //   Swal.fire({ text: error.error.message, icon: 'error' });\r\n          // }\r\n        );\r\n      }\r\n    });\r\n  }\r\n  close(email) {\r\n    Swal.fire({\r\n      //text: 'Unable to process' + 'Error ' + this.responseforfileupload.errorMessage + 'Do you want to Proceed??',\r\n      text: 'You are trying to Close record. ' + ' Do you want to proceed?',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3e54b8',\r\n      cancelButtonColor: '#d33',\r\n      // confirmButtonText: 'PROCEED.'\r\n      cancelButtonText: 'NO',\r\n      confirmButtonText: 'YES',\r\n      icon: 'info',\r\n      iconColor: '#d33',\r\n    }).then((result) => {\r\n      console.log('this is reopen ', result);\r\n      if (result.isConfirmed === true) {\r\n        console.log('this is close');\r\n        this.accountBlockingService.onClickOfAuthOfEmailManagement('close', this.loggedInUser,email).subscribe(\r\n          (resp) => {\r\n            console.log(resp);\r\n            this.eamilAuditLog = resp;\r\n            this.auditlog();\r\n            if (this.eamilAuditLog) {\r\n              Swal.fire({ text: 'Record is Closed' }).then(() =>\r\n                window.location.reload()\r\n              );\r\n            }\r\n          },\r\n          (error) => {\r\n            Swal.fire(error.error.message);\r\n          }\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n  reopen(email) {\r\n    Swal.fire({\r\n      //text: 'Unable to process' + 'Error ' + this.responseforfileupload.errorMessage + 'Do you want to Proceed??',\r\n      text: 'You are trying to Reopen record. ' + ' Do you want to proceed?',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3e54b8',\r\n      cancelButtonColor: '#d33',\r\n      // confirmButtonText: 'PROCEED.'\r\n      cancelButtonText: 'NO',\r\n      confirmButtonText: 'YES',\r\n      icon: 'info',\r\n      iconColor: '#d33',\r\n    }).then((result) => {\r\n      console.log('this is reopen ', result);\r\n      if (result.isConfirmed === true) {\r\n        this.accountBlockingService.onClickOfAuthOfEmailManagement('reopen',this.loggedInUser, email).subscribe(\r\n          (resp) => {\r\n            console.log(resp);\r\n            this.eamilAuditLog = resp;\r\n            this.auditlog();\r\n            if (this.eamilAuditLog) {\r\n              this.auditlog();\r\n              Swal.fire({\r\n                text: 'Record is Reopened',\r\n              }).then(() => window.location.reload());\r\n            } else {\r\n              Swal.fire({ text: 'Record cannot be opened ' });\r\n            }\r\n          },\r\n          (error) => {\r\n            Swal.fire(error.error.message);\r\n          }\r\n        );\r\n      }\r\n    });\r\n  }\r\n  auditlog() {\r\n    if (this.eamilAuditLog.verifiedStatus == 'U' || this.emaildata[0].verifiedStatus ==\"U\") {\r\n      this.eamilAuditLog.verifiedStatus = 'UNAUTHORIZED';\r\n      this.emaildata[0].verifiedStatus ='Unauthorized';\r\n    }\r\n    if (this.eamilAuditLog.verifiedStatus == 'A' || this.emaildata[0].verifiedStatus ==\"A\") {\r\n      this.emaildata[0].verifiedStatus ='Authorized';\r\n      this.eamilAuditLog.verifiedStatus = 'AUTHORIZED'\r\n    }\r\n    if (this.eamilAuditLog.recordStatus == 'O') {\r\n      this.eamilAuditLog.recordStatus = 'OPEN'\r\n    }\r\n    if (this.eamilAuditLog.recordStatus =='C') {\r\n      this.eamilAuditLog.recordStatus = 'CLOSED'\r\n    }\r\n    if (this.eamilAuditLog.verifiedOnce == 'N') {\r\n      this.eamilAuditLog.verifiedOnce = 'NO'\r\n    }\r\n    if (this.eamilAuditLog.verifiedOnce == 'Y') {\r\n      this.eamilAuditLog.verifiedOnce = 'YES'\r\n    }\r\n  }\r\n\r\n}\r\n"]}