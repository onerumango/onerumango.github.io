{"version":3,"mappings":"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","names":["routes","path","component","_audit_logs_component__WEBPACK_IMPORTED_MODULE_0__","AuditLogsRoutingModule","_angular_router__WEBPACK_IMPORTED_MODULE_2__","imports","exports","_angular_core__WEBPACK_IMPORTED_MODULE_9__","AuditLogsComponent","api","http","excelService","cdr","roleService","_angular_common__WEBPACK_IMPORTED_MODULE_10__","src_app_shared_models_fmosNewRolePermissions__WEBPACK_IMPORTED_MODULE_3__","src_app_shared_config_app_constant__WEBPACK_IMPORTED_MODULE_4__","dtOptions","pagingType","pageLength","serverSide","processing","columnDefs","type","order","lengthMenu","ajax","dataTablesParameters","callback","minNumber","start","maxNumber","length","console","log","pageNo","Math","floor","pageSize","get","API_URL","subscribe","resp","totalPages","totalNoOfPages","totalRecords","auditlogdata","result","isLoading","markForCheck","recordsTotal","recordsFiltered","data","fetchScreenPermissions","screenLabelList","roleCodes","message","event","format","nativeElement","value","downloadLog","exportAsXLSX","arrayData","forEach","element","timeForExport","pipe","transform","updatedAt","creatorDtStamp","verifierDtStamp","exportAsExcelFile","convert","doc","jspdf__WEBPACK_IMPORTED_MODULE_0___default","col","rows","itemNew","date","Date","toLocaleDateString","temp","creatorId","actionPerformBy","record","action","push","autoTable","head","body","save","selectors","viewQuery","AuditLogsModule","_angular_common__WEBPACK_IMPORTED_MODULE_4__","_audit_logs_routing_module__WEBPACK_IMPORTED_MODULE_0__","angular_datatables__WEBPACK_IMPORTED_MODULE_2__","declarations","_audit_logs_component__WEBPACK_IMPORTED_MODULE_1__"],"sources":["webpack:///src/app/views/audit-logs/audit-logs-routing.module.ts","webpack:///src/app/views/audit-logs/audit-logs.component.html","webpack:///src/app/views/audit-logs/audit-logs.component.ts","webpack:///src/app/views/audit-logs/audit-logs.module.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AuditLogsComponent } from './audit-logs.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: AuditLogsComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AuditLogsRoutingModule { }\r\n","<div class=\"pageContentMain\">\r\n    <div class=\"pageTitleCol\">\r\n      <h2 class=\"pageTitle\">Audit Logs</h2>\r\n    </div>\r\n   \r\n      <div class=\"col-2\" *ngIf=\"!isLoading\">\r\n        <label for=\"roleName\" class=\"formLbl\">Export As</label>\r\n        <select class=\"form-select\"  aria-label=\"Default select example\" #format >\r\n          <!-- <option>--Choose file type--</option> -->\r\n          <option selected value=\"Excel\">Excel</option>\r\n          <option value=\"PDF\">PDF</option>\r\n          \r\n        </select>\r\n        <button class=\"downloadForAuditLog\" (click)=\"modo($event)\" >Download</button>\r\n         \r\n      \r\n      </div><br>\r\n      <div class=\"dbCardStyle table-responsive\">\r\n        <table id=\"auditLogsTable\" datatable [dtOptions]=\"dtOptions\" class=\"table tableStyle tableStyleSelect  nowrap vAlignMdl\" \r\n            style=\"width:100%\">\r\n          <thead>\r\n            <tr>\r\n              <th>Screen</th>\r\n              <th>Creator</th>\r\n              <th>Action Perform By</th>\r\n              <th>Record</th>\r\n              <th>Action</th>\r\n              <th>Date</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody *ngIf=\"auditlogdata?.length != 0\">\r\n            <tr *ngFor=\"let audits of auditlogdata\">\r\n              <td>{{audits.log}}</td>\r\n              <td>{{audits.creatorId}}</td>\r\n              <td>{{audits.actionPerformBy}}</td>\r\n              <td>{{audits.record}}</td>\r\n              <td>{{audits.action}}</td>\r\n              <td>{{audits.creatorDtStamp | date:'medium'}}</td>\r\n            </tr>\r\n          </tbody>\r\n          <tbody *ngIf=\"auditlogdata?.length == 0\">\r\n            <tr>\r\n              <td colspan=\"3\" class=\"no-data-available\">No data!</td>\r\n            </tr>\r\n          </tbody>        \r\n        </table>\r\n        <ng-container *ngIf=\"isLoading\">\r\n          <div class=\"loading-page-center\">\r\n            <span class=\"indicator-progress\">Please wait...\r\n              <span class=\"spinner-border spinner-border-sm align-middle ms-2\"></span></span>\r\n          </div>\r\n        </ng-container>\r\n      </div>\r\n\r\n</div>\r\n","import { ChangeDetectorRef, Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\nimport { ApiService } from 'src/app/shared/services/api.service';\r\nimport jsPDF from 'jspdf';\r\nimport 'jspdf-autotable';\r\nimport 'rxjs/add/operator/map';\r\nimport { DatePipe } from '@angular/common';\r\nimport { AccountClosureServiceService } from 'src/app/shared/services/account-closure-service.service';\r\nimport { RoleService } from 'src/app/shared/services/role.service';\r\nimport { permissionsLabels } from 'src/app/shared/models/fmosNewRolePermissions';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { AppConstants } from 'src/app/shared/config/app.constant';\r\nimport * as XLSX from \"xlsx\";\r\n\r\n@Component({\r\n  selector: 'npr-audit-logs',\r\n  templateUrl: './audit-logs.component.html',\r\n  styleUrls: ['./audit-logs.component.scss']\r\n})\r\nexport class AuditLogsComponent implements OnInit {\r\n  isLoading:boolean = false;\r\n  isSelected: boolean = true;\r\n  dtOptions: DataTables.Settings = {};\r\n  auditlogdata: any;\r\n  pipe = new DatePipe('en-US');\r\n  roleCodes = new permissionsLabels();\r\n  API_URL = AppConstants.baseURL;\r\n  @ViewChild(\"format\") format: ElementRef;\r\n  totalPages: any;\r\n  totalRecords: any;\r\n  arrayData: any;\r\n\r\n\r\n  constructor(private api: ApiService,private http: HttpClient, private excelService: AccountClosureServiceService, private cdr:ChangeDetectorRef,private roleService:RoleService) { }\r\n\r\n  ngOnInit(): void {\r\n    \r\n    this.dtOptions = {\r\n      pagingType: 'full_numbers',\r\n      pageLength : 5,\r\n      serverSide: true,\r\n      processing: true,\r\n      columnDefs: [ { type: 'date', 'targets': [5] } ],\r\n      order: [[5, 'desc']],\r\n      // lengthMenu: [[5, 10, 20, 30], [5, 10, 20, 30]],\r\n      lengthMenu: [\r\n        [5, 10, 20, 30,-1],\r\n        [5, 10, 20, 30,\"ALL\"],\r\n      ],\r\n       \r\n      ajax: (dataTablesParameters: any, callback) => {\r\n        ;\r\n        dataTablesParameters.minNumber = dataTablesParameters.start + 1;\r\n        dataTablesParameters.maxNumber =\r\n          dataTablesParameters.start + dataTablesParameters.length;\r\n        console.log(\r\n          dataTablesParameters.minNumber,\r\n          dataTablesParameters.maxNumber\r\n        );\r\n        const pageNo = Math.floor(dataTablesParameters.minNumber / dataTablesParameters.length);\r\n        const pageSize = dataTablesParameters.length;\r\n        \r\n        this.http.get<any>(`${this.API_URL}`+`/auditLogs/getAllAuditLogs?pageNo=${pageNo}&pageSize=${pageSize}`)\r\n          .subscribe(resp => {\r\n            ;\r\n            console.log(resp);\r\n            this.totalPages = resp.totalNoOfPages;\r\n            this.totalRecords = resp.totalRecords;\r\n            this.auditlogdata = resp.result;\r\n            this.isLoading = false;\r\n            this.cdr.markForCheck();\r\n\r\n            callback({\r\n              recordsTotal: resp.totalRecords,\r\n              recordsFiltered: resp.totalRecords,\r\n              data: [],\r\n            });\r\n          });\r\n      },\r\n    };\r\n\r\n    // this.getAuditLogList();\r\n    this.roleService.fetchScreenPermissions('Audit Logs');\r\n  \r\n    this.roleService.screenLabelList.subscribe(message => this.roleCodes = message);\r\n    console.log(this.roleCodes);\r\n  }\r\n\r\n\r\n  modo(event) {\r\n    console.log(event);\r\n    if (this.format.nativeElement.value == 'PDF') {\r\n     this.downloadLog(this.totalRecords,this.totalPages);\r\n    }\r\n    if (this.format.nativeElement.value === 'Excel') {\r\n      this.exportAsXLSX();\r\n    }\r\n\r\n  }\r\n  exportAsXLSX(): void {\r\n    console.log(this.auditlogdata);\r\n    this.http.get<any>(`${this.API_URL}`+`/auditLogs/getAllAuditLogs?pageNo=${0}&pageSize=${this.totalRecords}`)\r\n    .subscribe(resp => {\r\n      this.arrayData=resp.result;\r\n      this.arrayData.forEach(element => {\r\n        element.timeForExport = this.pipe.transform(element.timeForExport, 'dd-MMM-yy');\r\n        element.updatedAt = this.pipe.transform(element.updatedAt, 'dd-MMM-yy');\r\n        element.creatorDtStamp = this.pipe.transform(element.creatorDtStamp, 'dd-MMM-yy');\r\n        element.verifierDtStamp=this.pipe.transform(element.verifierDtStamp,'dd-MMM-yy')\r\n      });\r\n      this.excelService.exportAsExcelFile(this.arrayData, 'Audit_Report');\r\n    });\r\n   \r\n  }\r\n\r\n  downloadLog(totalRecords,totalNoOfPages){\r\n    // getSecurityPolicies?pageNo=${0}&pageSize=${1000}&sortBy=${sortBy}`\r\n    this.http.get<any>(`${this.API_URL}`+`/auditLogs/getAllAuditLogs?pageNo=${0}&pageSize=${totalRecords}`)\r\n          .subscribe(resp => {\r\n            this.convert(resp.result)\r\n          });\r\n  }\r\n  convert(data) {\r\n\r\n    var doc = new jsPDF();\r\n    var col = [[\"Screen\", \"creatorId\", \"ActionPerformBy\", \"Record\", \"Action\", \"Time\"]];\r\n    var rows = [];\r\n\r\n  \r\n    var itemNew = data;\r\n\r\n    itemNew.forEach(element => {\r\n      var date = new Date(element.creatorDtStamp).toLocaleDateString(\"en-us\");\r\n      console.log(date)\r\n      var temp = [element.log, element.creatorId, element.actionPerformBy, element.record, element.action, date];\r\n      rows.push(temp);\r\n    });\r\n\r\n    //doc.autoTable(col, rows);\r\n    doc.autoTable({\r\n      head: col,\r\n      body: rows\r\n    });\r\n    doc.save('AuditLog.pdf');\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { AuditLogsRoutingModule } from './audit-logs-routing.module';\r\nimport { AuditLogsComponent } from './audit-logs.component';\r\nimport { DataTablesModule } from 'angular-datatables';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AuditLogsComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    AuditLogsRoutingModule,\r\n    DataTablesModule\r\n  ]\r\n})\r\nexport class AuditLogsModule { }\r\n"]}