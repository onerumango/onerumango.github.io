{"version":3,"mappings":"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;AAAAA;;AAMnBA;;AAAAA;;;;;;AAIRA;;AACEA;;AACEA;;AACEA;;AACEA;;AACEA;;AACEA;;AACEA;;AACFA;;AACFA;;AACAA;;AACEA;;AACEA;;AAAIA;;AAAKA;;AACTA;;AAAGA;;AAAcA;;AACnBA;;AACFA;;AACFA;;AACFA;;AACFA;;AACAA;;AACEA;;AACEA;;AACEA;;AACEA;;AACEA;;AACFA;;AACFA;;AACAA;;AACEA;;AACEA;;AAAIA;;AAAgBA;;AACpBA;;AAAGA;;;;AAA4CA;;AACjDA;;AACFA;;AACFA;;AACFA;;AACFA;;AACAA;;AACEA;;AACEA;;AACEA;;AACEA;;AACEA;;AACFA;;AACFA;;AACAA;;AACEA;;AACEA;;AAAIA;;AAAaA;;AACjBA;;AAAGA;;AAAgBA;;AACrBA;;AACFA;;AACFA;;AACFA;;AACFA;;AACAA;;AACEA;;AACEA;;AACEA;;AACEA;;AACAA;;AACAA;;AACFA;;AACAA;;AACEA;;AACEA;;AAAIA;;AAAOA;;AACXA;;AAAGA;;AAAgBA;;AACrBA;;AACFA;;AACFA;;AACFA;;AACFA;;AACAA;;AACEA;;AACEA;;AACEA;;AACEA;;AACEA;;AACFA;;AACFA;;AACAA;;AACEA;;AACEA;;AAAIA;;AAAkBA;;AACtBA;;AAAGA;;;;AAA8CA;;AACnDA;;AACFA;;AACFA;;AACFA;;AACFA;;AACAA;;AACEA;;AACEA;;AACEA;;AACEA;;AACJA;;AACIA;;AACFA;;AACAA;;AACEA;;AACEA;;AAAIA;;AAAwBA;;AAC5BA;;AAAGA;;AAAiBA;;AACtBA;;AACFA;;AACFA;;AACFA;;AACFA;;AACAA;;AACEA;;AACEA;;AACEA;;AACEA;;AACCA;;AACDA;;AACFA;;AACAA;;AACEA;;AACEA;;AAAIA;;AAAoBA;;AACxBA;;AAAGA;;AAAcA;;AACnBA;;AACFA;;AACFA;;AACFA;;AACFA;;AACAA;;AACEA;;AACEA;;AACEA;;AACEA;;AACGA;;AACHA;;AACFA;;AACAA;;AACEA;;AACEA;;AAAIA;;AAAmBA;;AACvBA;;AAAGA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","names":["ToastService","iziToast","title","msg","success","message","layout","balloon","position","progressBarColor","pauseOnHover","error","info","_angular_core__WEBPACK_IMPORTED_MODULE_1__","factory","providedIn","_angular_core__WEBPACK_IMPORTED_MODULE_6__","ExcelMappingEditComponent","apiService","cdr","fb","toastService","router","roleService","canDeactivateGuard","src_app_shared_models_fmosNewRolePermissions__WEBPACK_IMPORTED_MODULE_0__","id","type","value","isActive","rxjs__WEBPACK_IMPORTED_MODULE_7__","currentUser","localStorage","getItem","getExtCodeforDropdown","setTimeout","newRolePermissions","screenLabelList","subscribe","roleCodes","console","log","updateMappingForm","group","processName","extSysCode","extSys","userId","sheetNumber","headerRepeated","startingRow","currency","addForm","excelMappingDetails","array","getSubArray","gettingSummaryData","fetchScreenPermissions","isExit","touched","formTouched","sweetalert2__WEBPACK_IMPORTED_MODULE_1___default","text","showCancelButton","confirmButtonColor","cancelButtonColor","cancelButtonText","confirmButtonText","icon","then","result","isConfirmed","markForCheck","Promise","resolve","reject","columnnName","_angular_forms__WEBPACK_IMPORTED_MODULE_8__","dataType","mandatory","headerName","dateFormat","disabled","delimeter","defaultValue","repeatedTillNextValue","tableMappingColumn","mappingMasterId","mappingDetailId","excelMappingColumn","getexcelSummaryData","resp","summryResponse","retrievedObject","JSON","parse","getExtSysNameByExtSysCode","processNAme","controls","setValue","getTemplateMappingDataforEdit","editResp","newDataResponse","setItem","stringify","showFieldCurrency","showFieldsheetNum","showCurrencyDropdown","auditLog","patchData","sort","a","b","getProcess","currenyVal","fetchAllName","fileNames","filenames","getAllMappingByExtSysAndProcessCode","mappingResponse","event","target","selectedCurrency","getAllExtsysNameOnAuthStatus","externalSysData","response","extSysData","map","extSysName","externalSystsemCodes","get","processCode","extNameValue","data","getCurrencyOnExtNameAndProcssCode","ccyData","length","formdata","control","i","push","patchValue","index","fg","f","authStatus","_a","recordStatus","_b","modifiedBy","_c","inputBy","modifiedTime","_d","inputDtStamp","authorizedBy","_e","authorizedTime","_f","authorizedDtStamp","version","_g","firstTimeAuth","_h","is_edit","enable","disable","values","currentTarget","checked","at","editFlag","editFlag1","excelCopyData","copyData","processResp","excelprocess","forEach","element","subArrayForm","excelForm","submitted","progress","invalid","obj","excelMappingAuditLog","updateData","dataSaved","markAsUntouched","markAsPristine","updateForm","authResp","deleteTemplateMapping","deleteRsp","navigate","closeResp","_angular_common_http__WEBPACK_IMPORTED_MODULE_9__","extCodeValue","proCodeValue","currencyValue","openResp","getRowIdx","deleteMappingRow","e","removeAt","isCheckedValue","startingValue","sheetNumberValue","columnData","reset","selectors","decls","vars","consts","template","_angular_core__WEBPACK_IMPORTED_MODULE_4__","ctx_r16","ExcelMappingNewComponent","rxjs__WEBPACK_IMPORTED_MODULE_5__","excelMappingForm","getAllExtsysNameAndProcessCodeOnAuthStatus","dataFromresponse","_angular_forms__WEBPACK_IMPORTED_MODULE_6__","checkMandatory","getAllExtCode","processNameField","getProcessNameByExtSysCode","undefined","clearValidators","setValidators","updateValueAndValidity","mandCnt","n","sweetalert2__WEBPACK_IMPORTED_MODULE_0___default","createTemplateMap","showUpdate","_angular_common_http__WEBPACK_IMPORTED_MODULE_7__","updateform","mappingColumn","charCode","keyCode","ctx","routes","path","component","_excel_mapping_excel_mapping_component__WEBPACK_IMPORTED_MODULE_3__","_excel_mapping_new_excel_mapping_new_component__WEBPACK_IMPORTED_MODULE_2__","canDeactivate","src_app_shared_guards_can_deactivate_guard__WEBPACK_IMPORTED_MODULE_0__","_excel_mapping_edit_excel_mapping_edit_component__WEBPACK_IMPORTED_MODULE_1__","ExcelMappingRoutingModule","_angular_router__WEBPACK_IMPORTED_MODULE_5__","imports","exports","ExcelMappingModule","_angular_common__WEBPACK_IMPORTED_MODULE_6__","_excel_mapping_routing_module__WEBPACK_IMPORTED_MODULE_0__","angular_datatables__WEBPACK_IMPORTED_MODULE_2__","_angular_forms__WEBPACK_IMPORTED_MODULE_7__","_ng_select_ng_select__WEBPACK_IMPORTED_MODULE_8__","declarations","_excel_mapping_excel_mapping_component__WEBPACK_IMPORTED_MODULE_1__","_excel_mapping_new_excel_mapping_new_component__WEBPACK_IMPORTED_MODULE_3__","_excel_mapping_edit_excel_mapping_edit_component__WEBPACK_IMPORTED_MODULE_4__","ExcelMappingComponent","dtOptions","pagingType","pageLength","columnDefs","targets","order","processing","lengthMenu","getexcelMappingSummary","excelMappingSummary","verifiedOnce","isLoading","getMappingSummary","exdata","statusArr","find","startsWith","excelData","dtTrigger","next","window","location","reload","_angular_common_http__WEBPACK_IMPORTED_MODULE_8__","setexcelSummaryData","Error"],"sources":["webpack:///src/app/shared/services/toast.service.ts","webpack:///src/app/views/excel-mapping/excel-mapping-edit/excel-mapping-edit.component.html","webpack:///src/app/views/excel-mapping/excel-mapping-edit/excel-mapping-edit.component.ts","webpack:///src/app/views/excel-mapping/excel-mapping-new/excel-mapping-new.component.html","webpack:///src/app/views/excel-mapping/excel-mapping-new/excel-mapping-new.component.ts","webpack:///src/app/views/excel-mapping/excel-mapping-routing.module.ts","webpack:///src/app/views/excel-mapping/excel-mapping.module.ts","webpack:///src/app/views/excel-mapping/excel-mapping/excel-mapping.component.html","webpack:///src/app/views/excel-mapping/excel-mapping/excel-mapping.component.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Ng2IzitoastService } from 'ng2-izitoast';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ToastService {\r\n\r\n  constructor(\r\n    public iziToast: Ng2IzitoastService\r\n  ) { }\r\n\r\n  successMessage(title: string, msg: string) {\r\n    this.iziToast.success({\r\n      title: title,\r\n      message: msg,\r\n      layout: 2,\r\n      balloon: false,\r\n      position: \"topRight\",\r\n      progressBarColor: \"red\",\r\n      pauseOnHover: true,\r\n    });\r\n  }\r\n\r\n  errorMessage(title: string, msg: string) {\r\n    this.iziToast.error({\r\n      title: title,\r\n      message: msg,\r\n      layout: 2,\r\n      balloon: false,\r\n      position: \"topRight\",\r\n      progressBarColor: \"red\",\r\n      pauseOnHover: true,\r\n    });\r\n  }\r\n\r\n  infoMessage(title: string, msg: string) {\r\n    this.iziToast.info({\r\n      title: title,\r\n      message: msg,\r\n      layout: 2,\r\n      balloon: false,\r\n      position: \"topRight\",\r\n      progressBarColor: \"red\",\r\n      pauseOnHover: true,\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"pageContentMain\">\r\n  <div class=\"pageTitleCol\">\r\n    <h2 class=\"pageTitle\">Update/Copy Mapping</h2>\r\n  </div>\r\n  <div class=\"dbCardStyle\">\r\n    <form [formGroup]=\"updateMappingForm\" action=\"\" class=\"formStyle\">\r\n      <div class=\"row gy-4 align-items-end\">\r\n        \r\n        <!-- <div class=\"col-lg-2\">\r\n          <label for=\"extSystem\" class=\"formLbl\">External System<span class=\"colorRed\">*</span></label>\r\n          <select class=\"form-select\" [attr.disabled]=\"!editFlag ? '' : null\"\r\n            (change)=\"getProcess(updateMappingForm.get('extCode').value)\" formControlName=\"extCode\" required\r\n            aria-label=\"Default select example\">\r\n            <option class=\"form-class\" selected>Select External System<span class=\"colorRed\">*</span></option>\r\n            <option class=\"form-class\" *ngFor=\"let data of extSysData\" [value]=\"data\">{{data}}</option>\r\n          </select>\r\n        </div> -->\r\n        <!-- <div class=\"col-lg-2\">\r\n          <label for=\"proCode\" class=\"formLbl\">Process Code<span class=\"colorRed\">*</span></label>\r\n          <select class=\"form-select\"\r\n            (change)=\"getProcessName(updateMappingForm.get('proCode').value,updateMappingForm.get('extCode').value)\"\r\n            formControlName=\"proCode\" required aria-label=\"Default select example\">\r\n            <option class=\"form-class\" selected>Select Process Code</option>\r\n            <option class=\"form-class\" *ngFor=\"let data of processName\" [value]=\"data\">{{data}}</option>\r\n\r\n          </select>\r\n        </div> -->\r\n        <div class=\"col-lg-2\">\r\n          <label for=\"extSysCode\" class=\"formLbl\">External System<span class=\"colorRed\">*</span></label>\r\n          <input id=\"extSysCode\" type=\"text\" class=\"form-control\" required formControlName=\"extSysCode\" [readonly]=\"!editFlag1\"\r\n            placeholder=\"External System\" value=\"\">\r\n        </div>\r\n        <div class=\"col-lg-2\">\r\n          <label for=\"processName\" class=\"formLbl\">Process Code<span class=\"colorRed\">*</span></label>\r\n          <input id=\"processName\" type=\"text\" class=\"form-control\" required formControlName=\"processName\" [readonly]=\"!editFlag1\"\r\n            placeholder=\"Process Code\" value=\"\">\r\n        </div>\r\n        <div class=\"col-lg-2\" *ngIf=\"showFieldCurrency\">\r\n          <label for=\"currency\" class=\"formLbl\">Currency<span class=\"colorRed\">*</span></label>\r\n          <input id=\"currency\" type=\"text\" class=\"form-control\" [readonly]=\"!editFlag1\" required formControlName=\"currency\"\r\n            placeholder=\"Currency \" value=\"\">\r\n        </div>\r\n        <div class=\"col-lg-2\" *ngIf=\"!showFieldCurrency\">\r\n          <label for=\"currency\" class=\"formLbl\">Currency<span class=\"colorRed\">*</span></label>\r\n          <select class=\"form-select\" (change)=\"getCurrencyData($event, 'currency')\" formControlName=\"currency\" required\r\n          [attr.disabled]=\"!showCurrencyDropdown ? '' : null\" aria-label=\"Default select example\">\r\n            <!-- <option class=\"form-class\" selected>Select Currency</option> -->\r\n            <option hidden value=\"\" disabled selected >--Please select--</option>\r\n            <option class=\"form-class\" *ngFor=\"let data of ccyData\" [value]=\"data\">{{data}}</option>\r\n\r\n          </select>\r\n        </div>\r\n        <div class=\"col-lg-2\" *ngIf=\"showFieldsheetNum\">\r\n          <label for=\"sheetNumber\" class=\"formLbl\">Sheet Number<span class=\"colorRed\">*</span></label>\r\n          <input id=\"sheetNumber\" type=\"text\" class=\"form-control\" required formControlName=\"sheetNumber\" [readonly]=\"!editFlag1\"\r\n            placeholder=\"Sheet Number\" value=\"\">\r\n        </div>\r\n        <div class=\"col-lg-2\" *ngIf=\"!showFieldsheetNum\">\r\n          <label for=\"sheetNumber\" class=\"formLbl\">Sheet Number<span class=\"colorRed\">*</span></label>\r\n          <select class=\"form-select\" (change)=\"getsheetNumData($event, 'sheetNumber')\"  formControlName=\"sheetNumber\" required\r\n            aria-label=\"Default select example\">\r\n            <!-- <option class=\"form-class\" selected>Select Sheet Number</option> -->\r\n            <option hidden value=\"\" disabled selected >--Please select--</option>\r\n            <option class=\"form-class\" *ngFor=\"let data of sheetData\" [value]=\"data\">{{data}}</option>\r\n\r\n          </select>\r\n        </div>\r\n\r\n        <div class=\"row gy-4  col-lg-4 \" *ngIf=\"showFetch\">\r\n          <!-- <div class=\"col-lg-4\" >\r\n            <button href=\"excel-mapping-new.html\" (click)=\"getAllMappingData(updateMappingForm.get('extSysCode').value,\r\n            updateMappingForm.get('processName').value,updateMappingForm.get('currency').value,updateMappingForm.get('sheetNumber').value)\"\r\n              [disabled]=\"updateMappingForm.invalid\" class=\"btn smBtn minWdSmBtn btnPrimary\">Fetch\r\n            </button>\r\n          </div> -->\r\n          <div class=\"col-lg-4\">\r\n            <a href=\"javascript:void(0)\" [routerLink]=\"['/excel-mapping']\"\r\n              class=\"btn smBtn minWdSmBtn btnSecondary\">Exit</a>\r\n          </div>\r\n        </div>\r\n     \r\n        <div class=\"col-lg-2\" *ngIf=\"newDataResponse\">\r\n          <label for=\"startingRow\" class=\"formLbl\">Data Starting Row</label>\r\n          <input id=\"startingRow\" [readonly]=\"!editFlag\" type=\"text\" class=\"form-control\" \r\n            formControlName=\"startingRow\" placeholder=\"Data Starting Row\" value=\"\">\r\n        </div>\r\n        <div class=\"col-lg-2\" *ngIf=\"newDataResponse\">\r\n          <div class=\"checkStyle\">\r\n            <input type=\"checkbox\" [readonly]=\"!editFlag\" id=\"headerRepeated\" formControlName=\"headerRepeated\">\r\n            <label for=\"headerRepeated\">Is Header Present</label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  </div>\r\n  <div class=\"dbCardStyle\" *ngIf=\"newDataResponse\">\r\n    <form action=\"\" [formGroup]=\"addForm\" novalidate class=\"formStyle\">\r\n      <div class=\"table-responsive\">\r\n        <fieldset [disabled]=\"!editFlag\">\r\n        <table id=\"dbTable1\" class=\"table tableStyle1 responsive nowrap vAlignMdl\">\r\n          <thead>\r\n            <tr>\r\n              <th>Name</th>\r\n              <th>data type</th>\r\n              <th>mandatory</th>\r\n              <th>header name</th>\r\n              <th>date format</th>\r\n              <th>mapping column</th>\r\n              <th>delimeter</th>\r\n              <th>default value</th>\r\n              <th>repeated till next value</th>\r\n              <th>delete</th>\r\n            </tr>\r\n          </thead>\r\n      \r\n          <tbody formArrayName=\"excelMappingDetails\">\r\n          \r\n            <tr *ngFor=\"let item of addForm.get('excelMappingDetails')['controls']; let i=index\" [formGroupName]=\"i\">\r\n              <td>\r\n                <input id=\"sourceCode\" type=\"text\" [readonly]=\"!editFlag\" formControlName=\"columnnName\"\r\n                  class=\"form-control1\" placeholder=\"Name\" value=\"\">\r\n              </td>\r\n              <td>\r\n                <select class=\"form-select1\" formControlName=\"dataType\" [attr.disabled]=\"!editFlag ? '' : null\"\r\n                  placeholder=\"Choose DataType\" (change)=\"checkTypeStatus(i)\" aria-label=\"Default select example\">\r\n                  <!-- <option class=\"form-class\" value=\"\" disabled selected>&nbsp; Select DataType &nbsp; </option> -->\r\n                  <option hidden value=\"\" disabled selected >--Please select--</option>\r\n                  <option *ngFor=\"let item of dataTypes\" [value]=\"item.value\">{{item.type}}</option>\r\n                </select>\r\n              </td>\r\n  \r\n                <td>\r\n                  <div class=\"checkboxdiv\">\r\n                  <div class=\"checkStyle\">\r\n                    <input type=\"checkbox\" formControlName=\"mandatory\" id=\"mandatoryCheck_{{ i }}\" >\r\n                    <label for=\"mandatoryCheck_{{ i }}\"><span style=\"display:none\">Is Mandatory?</span></label>\r\n                  </div>\r\n                </div>\r\n                </td>\r\n       <td>\r\n                  <input id=\"headerName_{{ i }}\" type=\"text\" formControlName=\"headerName\" class=\"form-control1\" placeholder=\"Header Name\" value=\"\">\r\n                </td>\r\n                <td>\r\n                  <input id=\"dateFormat_{{ i }}\" type=\"text\" class=\"form-control1\"  formControlName=\"dateFormat\" placeholder=\"Date Format\" value=\"\">\r\n                </td>\r\n                <td>\r\n                  <input id=\"mappingColumn_{{ i }}\" type=\"text\" class=\"form-control1\" formControlName=\"excelMappingColumn\" placeholder=\"Mapping Column\" value=\"\">\r\n                </td>\r\n                <td>\r\n                  <input id=\"delimeter_{{ i }}\" type=\"text\" class=\"form-control1\" formControlName=\"delimeter\" placeholder=\"Delimeter\" value=\"\">\r\n                </td>\r\n                <td>\r\n                  <input id=\"defaultValue_{{ i }}\" type=\"text\" class=\"form-control1\" formControlName=\"defaultValue\"\r\n                      placeholder=\"Default Value\" value=\"\">\r\n              </td>\r\n              <td>\r\n                  <input id=\"repeatedTillNextValue_{{ i }}\" type=\"text\" class=\"form-control1\" formControlName=\"repeatedTillNextValue\"\r\n                      placeholder=\"Repeated Till Next Value\" value=\"\">\r\n              </td>\r\n              <td>\r\n                <a href=\"javascript:void(0)\" class=\"deleteIcon2\"  (click)=\"removeSubArray(i,item)\" *ngIf=\"editFlag\">\r\n                  <span><img src=\"assets/images/delete-icon.svg\" alt=\"...\"></span>\r\n                </a>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>\r\n                <a href=\"javascript:void(0)\" class=\"addIcon primarybg\"\r\n                *ngIf=\"editFlag\">\r\n                  <span (click)=\"addSubArray()\"><img src=\"assets/images/plus-icon.svg\" alt=\"...\"></span>\r\n                </a>\r\n              </td>\r\n            </tr>\r\n           \r\n          </tbody>\r\n       \r\n        </table>\r\n      </fieldset>\r\n      </div>\r\n    \r\n      <div class=\"col-lg-12\" *ngIf=\"newDataResponse\">\r\n        <div class=\"row g-3 pb-3 justify-content-end pt-3\">\r\n          <!-- <div class=\"col-auto\">\r\n            <button href=\"javascript:void(0)\" *ngIf=\"copyData\" class=\"btn smBtn minWdSmBtn btnPrimary\"\r\n              (click)=\"copyMaping(addForm.value)\">Copy</button>\r\n          </div> -->\r\n          <div class=\"col-auto\">\r\n            <button class=\"btn smBtn minWdSmBtn btnPrimary\" [disabled]=\"dataSaved\" *ngIf=\"editFlag  && copyData\"\r\n              (click)=\"updateMappingData(addForm.value,updateMappingForm.value)\" [disabled]=\"(!addForm.dirty || !addForm.valid)\">Save</button>\r\n          </div>\r\n      \r\n          <div class=\"col-auto\" *ngIf=\"newDataResponse && !editFlag &&  recordStatus=='OPEN' && roleCodes.edit && copyData\">\r\n            <button class=\"btn smBtn minWdSmBtn btnUpdate\" color=\"primary\"\r\n            (click)=\"enableEditFlag()\">{{roleCodes.edit.labelDescription}}</button>\r\n          </div>\r\n          <div class=\"col-auto\" *ngIf=\"newDataResponse && !editFlag && authStatus=='UNAUTHORIZED'&& roleCodes.auth && copyData\"><button\r\n              class=\"btn smBtn minWdSmBtn btnAuth\" color=\"primary\" (click)=\"onClickOfAuth(addForm.value,updateMappingForm.value)\">{{roleCodes.auth.labelDescription}}</button>\r\n          </div>\r\n          <div class=\"col-auto\"\r\n            *ngIf=\"recordStatus=='OPEN' && !editFlag &&  copyData && firstTimeAuth == 'YES'\"><button\r\n              class=\"btn smBtn minWdSmBtn btnPrimary\" color=\"primary\" (click)=\"onClickOfClose(addForm.value,updateMappingForm.value)\">{{roleCodes.close.labelDescription}}</button>\r\n          </div>\r\n          <div class=\"col-auto\"\r\n          *ngIf=\"(firstTimeAuth == 'NO' && (recordStatus=='OPEN' || recordStatus=='O')  ) && !editFlag &&  copyData\"><button\r\n            class=\"btn smBtn minWdSmBtn btnPrimary\" color=\"primary\" (click)=\"onClickDelete(addForm.value,updateMappingForm.value)\">{{roleCodes.delete.labelDescription}}</button>\r\n        </div>\r\n          <div class=\"col-auto\"\r\n            *ngIf=\"recordStatus=='CLOSED' && !editFlag &&  copyData \"><button\r\n              class=\"btn smBtn minWdSmBtn btnPrimary\" color=\"warn\" (click)=\"onClickOfReopen(addForm.value,updateMappingForm.value)\">{{roleCodes.reopen.labelDescription}}</button>\r\n          </div>\r\n          <div class=\"col-auto\" *ngIf=\"newDataResponse && editFlag\">\r\n            <button class=\"btn smBtn minWdSmBtn btnUpdate\" color=\"primary\" *ngIf=\"!editFlag && !copyData \"\r\n            (click)=\"finalSubmit(updateMappingForm.value,addForm.value)\">Save</button>\r\n          </div>\r\n          <div class=\"col-auto\">\r\n            <a href=\"javascript:void(0)\" class=\"btn smBtn minWdSmBtn btnSecondary\"\r\n              [routerLink]=\"['/excel-mapping']\">Exit</a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"dbCardStyle\" *ngIf=\"newDataResponse\">\r\n        <div class=\"row\">\r\n          <div class=\"col-sm-6 col-md-4 col-lg-3\">\r\n            <div class=\"csCardStyle\">\r\n              <div class=\"row g-2 align-items-center\">\r\n                <div class=\"col-auto\">\r\n                  <div class=\"csCardStyleIcon csCardStyleIconBg1\">\r\n                    <i class=\"fa fa-edit faClass\"></i>\r\n                  </div>\r\n                </div>\r\n                <div class=\"col\">\r\n                  <div class=\"csCardStyleText\">\r\n                    <h2>Maker</h2>\r\n                    <p>{{modifiedBy}}</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-sm-6 col-md-4 col-lg-3\">\r\n            <div class=\"csCardStyle\">\r\n              <div class=\"row g-2 align-items-center\">\r\n                <div class=\"col-auto\">\r\n                  <div class=\"csCardStyleIcon csCardStyleIconBg2\">\r\n                    <img src=\"assets/images/time-stamp-icon.svg\" alt=\"...\">\r\n                  </div>\r\n                </div>\r\n                <div class=\"col\">\r\n                  <div class=\"csCardStyleText\">\r\n                    <h2>Maker Time Stamp</h2>\r\n                    <p>{{modifiedTime| date: 'MM/dd/yyyy, h:mm a'}}</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-sm-6 col-md-4 col-lg-3\">\r\n            <div class=\"csCardStyle\">\r\n              <div class=\"row g-2 align-items-center\">\r\n                <div class=\"col-auto\">\r\n                  <div class=\"csCardStyleIcon csCardStyleIconBg3\">\r\n                    <i class=\"fa fa-files-o faRecordStatus\" aria-hidden=\"true\"></i>\r\n                  </div>\r\n                </div>\r\n                <div class=\"col\">\r\n                  <div class=\"csCardStyleText\">\r\n                    <h2>Record Status</h2>\r\n                    <p>{{recordStatus}}</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-sm-6 col-md-4 col-lg-3\">\r\n            <div class=\"csCardStyle\">\r\n              <div class=\"row g-2 align-items-center\">\r\n                <div class=\"col-auto\">\r\n                  <div class=\"csCardStyleIcon csCardStyleIconBg4\">\r\n                  <i class=\"fa fa-check-square-o faClassChecker\"></i>\r\n                  </div>\r\n                </div>\r\n                <div class=\"col\">\r\n                  <div class=\"csCardStyleText\">\r\n                    <h2>Checker</h2>\r\n                    <p>{{authorizedBy}}</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-sm-6 col-md-4 col-lg-3\">\r\n            <div class=\"csCardStyle\">\r\n              <div class=\"row g-2 align-items-center\">\r\n                <div class=\"col-auto\">\r\n                  <div class=\"csCardStyleIcon csCardStyleIconBg5\">\r\n                    <img src=\"assets/images/checker-time-icon.svg\" alt=\"...\">\r\n                  </div>\r\n                </div>\r\n                <div class=\"col\">\r\n                  <div class=\"csCardStyleText\">\r\n                    <h2>Checker Time Stamp</h2>\r\n                    <p>{{authorizedTime| date: 'MM/dd/yyyy, h:mm a'}}</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-sm-6 col-md-4 col-lg-3\">\r\n            <div class=\"csCardStyle\">\r\n              <div class=\"row g-2 align-items-center\">\r\n                <div class=\"col-auto\">\r\n                  <div class=\"csCardStyleIcon csCardStyleIconBg6\">\r\n              <i class=\"fa fa-shield faClassFirstTimeAuth\"></i>\r\n                  </div>\r\n                </div>\r\n                <div class=\"col\">\r\n                  <div class=\"csCardStyleText\">\r\n                    <h2>First Time Authorization</h2>\r\n                    <p>{{firstTimeAuth}}</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-sm-6 col-md-4 col-lg-3\">\r\n            <div class=\"csCardStyle\">\r\n              <div class=\"row g-2 align-items-center\">\r\n                <div class=\"col-auto\">\r\n                  <div class=\"csCardStyleIcon csCardStyleIconBg7\">\r\n                   <img src=\"assets/images/authorize.svg\" alt=\"...\" class=\"modImage\">\r\n                  </div>\r\n                </div>\r\n                <div class=\"col\">\r\n                  <div class=\"csCardStyleText\">\r\n                    <h2>Authorization Status</h2>\r\n                    <p>{{authStatus}}</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-sm-6 col-md-4 col-lg-3\">\r\n            <div class=\"csCardStyle\">\r\n              <div class=\"row g-2 align-items-center\">\r\n                <div class=\"col-auto\">\r\n                  <div class=\"csCardStyleIcon csCardStyleIconBg7\">\r\n                     <img src=\"assets/images/modification.svg\" class=\"modImage\" alt=\"...\" >\r\n                  </div>\r\n                </div>\r\n                <div class=\"col\">\r\n                  <div class=\"csCardStyleText\">\r\n                    <h2>Modification Number</h2>\r\n                    <p>{{version}}</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          \r\n        </div>\r\n      </div>\r\n    </form>\r\n  </div>\r\n\r\n</div>","import { HttpErrorResponse } from '@angular/common/http';\r\nimport { ChangeDetectorRef, Component, OnInit } from '@angular/core';\r\nimport { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { Observable, of, Subject } from 'rxjs';\r\nimport { CanDeactivateGuard, IDeactivateComponent } from 'src/app/shared/guards/can-deactivate.guard';\r\nimport { permissionsLabels } from 'src/app/shared/models/fmosNewRolePermissions';\r\nimport { ApiService } from 'src/app/shared/services/api.service';\r\nimport { RoleService } from 'src/app/shared/services/role.service';\r\nimport { ToastService } from 'src/app/shared/services/toast.service';\r\nimport Swal from 'sweetalert2';\r\nexport interface DTYPES {\r\n  id: number;\r\n  type: string;\r\n  value: string;\r\n  isActive: boolean;\r\n}\r\n\r\n@Component({\r\n  selector: 'npr-excel-mapping-edit',\r\n  templateUrl: './excel-mapping-edit.component.html',\r\n  styleUrls: ['./excel-mapping-edit.component.scss']\r\n})\r\nexport class ExcelMappingEditComponent implements OnInit,IDeactivateComponent {\r\n  roleCodes = new permissionsLabels();\r\n  updateMappingForm: FormGroup;\r\n  editFlag: boolean = false;\r\n  editFlag1: boolean = false;\r\n  showCurrencyDropdown : boolean = true;\r\n  showFieldCurrency : boolean = false;\r\n  showFieldsheetNum : boolean = false;\r\n  showFetch : boolean = true;\r\n  extSysData: string[];\r\n  processResp: any;\r\n  processName: string;\r\n  extNameValue: any;\r\n  extSysCode: any = null;\r\n  excelprocess: any = null;\r\n  addForm: FormGroup;\r\n  currentUser: any;\r\n  is_edit: boolean;\r\n  submitted: boolean = false;\r\n  currency: any;\r\n  excelMappingDisabled: boolean;\r\n  dataFromresponse: Object;\r\n  externalsysCode: any;\r\n  processCode: any;\r\n  curr: any;\r\n  tempStore: any = [];\r\n  disablefetchbtn: boolean = false;\r\n  fileNames: string[];\r\n  updateDataResp: Object;\r\n  extSysCodeFromsummary: any;\r\n  formTouched: boolean=true;\r\n  addformTouched: boolean=true;\r\n  ccyData: any;\r\n  extCodefromSummry: any;\r\n  extNamefromSummry: any;\r\n  sheetNumber: any;\r\n  formdata: any;\r\n  progress: boolean;\r\n  dataSource: any;\r\n  subscribe : any;\r\n  editafterfetch: boolean;\r\n  dataSaved : boolean = false;\r\n  copyData = true;\r\n  dataTypes: DTYPES[] = [\r\n    { id: 3, type: 'Clob', value: 'clob_901', isActive: false },\r\n    { id: 1, type: 'Date', value: 'date_751', isActive: true },\r\n    { id: 2, type: 'Number', value: 'number_600', isActive: false },\r\n    { id: 4, type: 'Varchar', value: 'varchar_0', isActive: false }\r\n  ];\r\n  // @ViewChildren('fetchBtn') fetchButton: MatButton;\r\n  // @ViewChildren('updateBtn') updateButton: MatButton;\r\n  startingValue: any;\r\n  extCodeValue: any;\r\n  isCheckedValue: any;\r\n  proCodeValue: any;\r\n  currencyValue: any;\r\n  sheetNumberValue: any;\r\n  summryResponse: any;\r\n  extCode: any;\r\n  mappingResponse: any;\r\n  authStatus: any;\r\n  recordStatus: any;\r\n  modifiedBy: any;\r\n  modifiedTime: any;\r\n  authorizedBy: any;\r\n  authorizedTime: any;\r\n  version: any;\r\n  verifiedStatus: any;\r\n  processNAme: any;\r\n  sheetNumb: any;\r\n  sheetData: any;\r\n  extSys: any;\r\n  newDataResponse: any;\r\n  firstTimeAuth: any;\r\n  showDialog = false;\r\n  subject = new Subject<boolean>();\r\n  externalSysData: any;\r\n  externalSystsemCodes: any;\r\n  \r\n  constructor(private apiService: ApiService, private cdr: ChangeDetectorRef,\r\n    private fb: FormBuilder, private toastService: ToastService,private router:Router,\r\n    private roleService: RoleService,private canDeactivateGuard: CanDeactivateGuard) { }\r\n\r\n  ngOnInit(): void {\r\n    this.currentUser = localStorage.getItem(\"userFromLogin\");\r\n    this.getExtCodeforDropdown();\r\n    setTimeout(() => {\r\n      this.newRolePermissions();\r\n    }, 2000);\r\n    this.roleService.screenLabelList.subscribe(message => this.roleCodes = message);\r\n    setTimeout(() => {\r\n      console.log(this.roleCodes);\r\n    }, 3000);\r\n   console.log(\"role codes\",this.roleCodes)\r\n\r\n    // this.updateMappingForm = this.fb.group({\r\n    //   extCode: [\"\"],\r\n    //   proCode: [\"\"],\r\n    //   startingRow: [\"\"],\r\n    //   currency: [\"\"],\r\n    //   sheetNumber: [\"\"],\r\n    //   headerRepeated: [\"\"],\r\n\r\n    // });\r\n    this.updateMappingForm = this.fb.group({\r\n      processName: [\"\"],\r\n      extSysCode: [\"\"],\r\n      extSys: [\"\"],\r\n      userId: [this.currentUser],\r\n      sheetNumber: [\"\"],\r\n      headerRepeated: [false],\r\n      startingRow:[\"\"],\r\n      currency:[\"\"]\r\n    });\r\n    this.addForm = this.fb.group({\r\n      excelMappingDetails: this.fb.array([this.getSubArray()])\r\n    });\r\n    this.gettingSummaryData();\r\n    \r\n    \r\n   \r\n  }\r\n  newRolePermissions()\r\n  {\r\n    this.roleService.fetchScreenPermissions('Template Mapping');\r\n  }\r\n  \r\n  canExit() : Promise<boolean> {\r\n    let isExit :boolean = false;\r\n    if ((this.updateMappingForm.touched || this.addForm.touched)  && this.formTouched==true) {\r\n    return Swal.fire({ \r\n      text: 'There are unsaved changes in the screen. Would you like to navigate to other screen?',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#E6224A',\r\n      cancelButtonColor: '#011945',\r\n      cancelButtonText: 'NO',\r\n      confirmButtonText: 'YES',\r\n      icon: 'info',\r\n    }).then((result) => {\r\n      if (result.isConfirmed === true) {\r\n        isExit=true;\r\n        this.cdr.markForCheck();\r\n           return isExit;\r\n      }\r\n      else{\r\n        isExit=false;\r\n        this.cdr.markForCheck();\r\n        return isExit;\r\n      }\r\n    \r\n    });\r\n  }\r\n else{\r\n  isExit=true;\r\n  return new Promise((resolve, reject) => {\r\n    if (isExit === true) {\r\n      isExit=true;\r\n      this.cdr.markForCheck();\r\n      resolve(true);\r\n    }\r\n  \r\n  })\r\n }\r\n    }\r\n  \r\n\r\n  getSubArray(): FormGroup {\r\n    return this.fb.group({\r\n      columnnName: ['', [Validators.required]],\r\n      dataType: [null, [Validators.required]],\r\n      mandatory: [false],\r\n      // mandatory: [\"\"],\r\n      headerName: ['',[Validators.required]],\r\n      dateFormat: [{ value: '', disabled: true }],\r\n      // dateFormat: [''],\r\n      // authStatus: [''],\r\n      // modifiedBy: [''],\r\n      // modifiedBy: ['JILU'],\r\n      // authorizedBy: [''],\r\n      // version: [''],\r\n      // modifiedTime: [''],\r\n      // authorizedTime: [''],\r\n      // recordStatus: [''],\r\n      delimeter: ['',],\r\n      defaultValue: ['',],\r\n      repeatedTillNextValue: ['',],\r\n      // excelMappingColumn:[''],\r\n      tableMappingColumn:[''],\r\n      mappingMasterId:[''],\r\n      mappingDetailId:[''],\r\n      excelMappingColumn: ['', [Validators.required,Validators.minLength(1), Validators.maxLength(3), Validators.pattern('^[a-zA-Z \\-#,@,%\\']+')]],\r\n\r\n      // columnnName: ['', [Validators.required]],\r\n      // dataType: [null, [Validators.required]],\r\n      // excelMappingColumn: ['', [Validators.minLength(1), Validators.maxLength(3), Validators.pattern('^[a-zA-Z \\-#,@,%\\']+')]],\r\n      // mandatory: false,\r\n      // id:[''],\r\n      // mandatory: [\"\"],\r\n      // headerName: [''],\r\n      // dateFormat: [{ value: '', disabled: true }],\r\n      // authStatus: [''],\r\n      // modifiedBy: [''],\r\n      // authorizedBy: [''],\r\n      // version: [''],\r\n      // modifiedTime: [''],\r\n      // authorizedTime: [''],\r\n      // recordStatus: [''],\r\n      // delimeter: [''],\r\n      // defaultValue: [''],\r\n      // repeatedTillNextValue: [''],\r\n      // firstTimeAuth:['']\r\n\r\n    });\r\n  }\r\n  gettingSummaryData() {\r\n      this.apiService.getexcelSummaryData().subscribe((resp) => {\r\n      this.summryResponse = resp;\r\n      console.log(\"this.summryResponse\",this.summryResponse);\r\n      var retrievedObject = localStorage.getItem('summryResponse');\r\n      this.summryResponse = JSON.parse(retrievedObject);\r\n    });\r\n      if (this.summryResponse) {\r\n        this.getExtSysNameByExtSysCode(this.summryResponse.extSysCode);\r\n        this.extSysCode = this.summryResponse.extSysCode;\r\n        this.processNAme = this.summryResponse.processName;\r\n        this.extSys = this.summryResponse.extSys;\r\n        this.currency=this.summryResponse.currency;\r\n        this.sheetNumber=this.summryResponse.sheetNumber;\r\n        this.updateMappingForm.controls.extSysCode.setValue(this.extSysCode);\r\n        this.updateMappingForm.controls.processName.setValue(this.processNAme);\r\n        //  this.apiService.getExcelMappingDataforEdit(this.extSysCode,this.processNAme,this.extSys).subscribe((editResp) =>{\r\n          this.apiService.getTemplateMappingDataforEdit(this.extSys,this.processNAme,this.currency,this.sheetNumber).subscribe((editResp) =>{\r\n          console.log(\"This. is new Resp\",editResp);\r\n          this.newDataResponse = editResp;\r\n          \r\n          localStorage.setItem('newDataResponse', JSON.stringify(this.newDataResponse));\r\n          // var retrievedObject = localStorage.getItem('newDataResponse');\r\n          // this.newDataResponse = JSON.parse(retrievedObject);\r\n          console.log(this.newDataResponse,\"After\");\r\n          this.showFieldCurrency = true;\r\n          this.showFieldsheetNum = true;\r\n          this.updateMappingForm.controls.currency.setValue(this.newDataResponse.currency);\r\n          this.updateMappingForm.controls.sheetNumber.setValue(this.newDataResponse.sheetNumber);\r\n          const startingRow = this.newDataResponse.startingRow;\r\n          const headerRepeated = this.newDataResponse.headerRepeated;\r\n          this.updateMappingForm.controls.startingRow.setValue(startingRow);\r\n          this.updateMappingForm.controls.headerRepeated.setValue(headerRepeated);\r\n          this.showCurrencyDropdown = false;\r\n          this.auditLog();\r\n          \r\n          this.patchData(this.newDataResponse.excelMappingDetails.sort((a,b)=>a.excelMappingColumn>b.excelMappingColumn? 1 : -1));\r\n          // this.cdr.markForCheck();\r\n          // this.cdr.markForCheck();\r\n          // this.getAllMappingData(this.extSysCode,this.processNAme,this.newDataResponse.currency,this.newDataResponse.sheetNumber);\r\n          // console.log(this.sheetData,this.ccyData);\r\n          // if(this.newDataResponse.currency.length === 1){\r\n          //   this.currency = this.newDataResponse.currency[0];\r\n          //   this.sheetNumb = this.newDataResponse.currencySheetMap[this.ccyData];\r\n          //   this.showFieldCurrency = true;\r\n          //   this.showFieldsheetNum = true;\r\n          //   this.showFetch = false;\r\n          //   this.updateMappingForm.controls.currency.setValue(this.currency);\r\n          //   this.updateMappingForm.controls.sheetNumber.setValue(this.sheetNumb);\r\n          //   this.getAllMappingData(this.extSysCode,this.processNAme,this.currency,this.sheetNumb);\r\n          // }\r\n          // else{\r\n          //   this.showFetch = true;\r\n          // }\r\n        })\r\n       \r\n        setTimeout(() => {\r\n          this.getProcess(this.extSysCode);\r\n        }, 100);\r\n       \r\n      }\r\n  }\r\n  getAllMappingData(extSysCode,processName,currenyVal,sheetNumber) {\r\n    console.log(\"Checking ?\",extSysCode,processName,currenyVal,sheetNumber);\r\n    this.apiService.fetchAllName(extSysCode, processName, currenyVal).subscribe(\r\n      filenames => {\r\n        this.fileNames = filenames;\r\n      });\r\n    this.apiService.getAllMappingByExtSysAndProcessCode(extSysCode, processName, currenyVal, sheetNumber)\r\n      .subscribe(mappingResponse => {\r\n        this.mappingResponse = mappingResponse;\r\n        localStorage.setItem('mappingResponse', JSON.stringify(this.mappingResponse));\r\n        var retrievedObject = localStorage.getItem('mappingResponse');\r\n        this.mappingResponse = JSON.parse(retrievedObject);\r\n        console.log(\"this.mappingResponse\",this.mappingResponse);\r\n        if (this.mappingResponse == null) {\r\n          Swal.fire({\r\n            title: 'Excel mapping is not available with this sheet number!',\r\n            text : 'Please enter the correct sheet number',\r\n            icon : 'warning'\r\n          });\r\n        }\r\n        else {\r\n          Swal.fire({\r\n            title: 'Data Fetched Successfully!',\r\n            icon : 'success'\r\n          });\r\n          const startingRow = this.mappingResponse[0].startingRow;\r\n          const headerRepeated = this.mappingResponse[0].headerRepeated;\r\n          this.updateMappingForm.controls.startingRow.setValue(startingRow);\r\n          this.updateMappingForm.controls.headerRepeated.setValue(headerRepeated);\r\n          this.showCurrencyDropdown = false;\r\n          this.auditLog();\r\n          this.patchData(this.mappingResponse);\r\n          this.cdr.markForCheck();\r\n          this.cdr.markForCheck();\r\n        }\r\n      });\r\n  }\r\n  getCurrencyData(event, type) {\r\n    console.log(event.target.value,type);\r\n    const selectedCurrency = event.target.value;\r\n    // const sheetNum = this.newDataResponse.currencySheetMap[selectedCurrency];   \r\n    this.updateMappingForm.controls.sheetNumber.setValue(this.sheetNumber);\r\n    this.showFieldsheetNum = true;\r\n    // if(data.sheetNumber != this.sheetNumber  && data.processCode != this.poojaprocess2 && data.currency != this.currency)\r\n    // {\r\n    //   this.disablefetchbtn = false;\r\n    // }\r\n    // if(data.sheetNumber != null  && data.processCode != null && data.currency != null)\r\n    // {\r\n    //   this.disablefetchbtn = false;\r\n    // }\r\n\r\n  }\r\n  getsheetNumData(event, type){\r\n    console.log(\"event\", event.target.value, type);\r\n  }\r\n  \r\n  getExtCodeforDropdown() {\r\n    // this.apiService.getAllExtsysNameAndProcessCodeOnAuthStatus()\r\n    //   .subscribe(response => {\r\n    //     this.externalSysData=response;\r\n    //     this.extSysData = response.extSysList.sort();\r\n    //     console.log(this.externalSysData);\r\n    //   });\r\n      this.apiService.getAllExtsysNameOnAuthStatus()\r\n      .subscribe(response => {\r\n        this.externalSysData=response;\r\n        this.extSysData = response.sort();\r\n        \r\n      });\r\n   \r\n  }\r\n  getProcess(extSysCode) {\r\n    console.log( this.externalSysData.map[extSysCode].extSysName);\r\n    this.externalSystsemCodes = this.externalSysData.map[extSysCode].extSysName;\r\n    this.updateMappingForm.value.extSys=this.externalSysData.map[extSysCode].extSysName;\r\n    this.updateMappingForm.get('processName').setValue(this.externalSysData.map[extSysCode].processCode);\r\n    this.processName=this.externalSysData.map[extSysCode].processCode;\r\n    // this.apiService.getProcessNameByExtSysCode(extSysCode).subscribe(response => {\r\n    //   this.processResp = response;\r\n    //   this.processName = this.processResp;\r\n      this.getExtSysNameByExtSysCode(extSysCode);\r\n    // });\r\n  }\r\n  getExtSysNameByExtSysCode(extSysCode) {\r\n    this.apiService.getExtSysNameByExtSysCode(extSysCode)\r\n      .subscribe(data => {\r\n        this.extNameValue = data;\r\n      });\r\n      console.log(this.extNameValue);\r\n  }\r\n  // getProcessName(processCode, extCodefromSummry) {\r\n  //   this.extSysCode = extCodefromSummry;\r\n  //   this.excelprocess = processCode;\r\n  //   this.apiService.getCurrencyOnExtNameAndProcssCode(this.extSysCode, this.excelprocess, this.extCode).subscribe(data => {\r\n  //     this.ccyData = data;\r\n  //     console.log(\"Currency\", this.ccyData);\r\n  //     if (this.ccyData.length == 0) {\r\n  //       Swal.fire({\r\n  //         title: 'No Currency Found For the Process code!',\r\n  //         icon: 'warning'\r\n  //       });\r\n  //       return;\r\n  //     }\r\n  //   });\r\n\r\n  // } \r\n   getProcessName(extSysCode, processCode,extNameValue) {\r\n    // this.extSysCode = extCodefromSummry;\r\n    // this.excelprocess = processCode;\r\n    this.apiService.getCurrencyOnExtNameAndProcssCode(extSysCode, processCode, extNameValue).subscribe(data => {\r\n      this.ccyData = data;\r\n      console.log(\"Currency\", this.ccyData);\r\n      if (this.ccyData.length == 0) {\r\n        Swal.fire({\r\n          title: 'No Currency Found For the Process code!',\r\n          icon: 'warning'\r\n        });\r\n        return;\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n \r\n  patchData(formdata) {\r\n    console.log(formdata);\r\n    const control = <FormArray>this.addForm.controls.excelMappingDetails;\r\n    control.controls = [];\r\n    for (let i = 0; i < formdata.length; i++) {\r\n\r\n      control.push(this.getSubArray());\r\n      console.log(\"Inside for loop\");\r\n    }\r\n    console.log(control);\r\n    console.log(this.addForm);\r\n    // console.log(\"Outside for loop\",this.addForm.controls.excelMappingDetails);\r\n    this.addForm.patchValue({excelMappingDetails: formdata});\r\n    console.log(this.addForm);\r\n  }\r\n  addSubArray() {\r\n    const control = <FormArray>this.addForm.controls['excelMappingDetails'];\r\n    control.push(this.getSubArray());\r\n  }\r\n  getSubArrayFormGroup(index): FormGroup {\r\n    const control = <FormArray>this.addForm.controls.excelMappingDetails;\r\n    const fg = control.get([index]);\r\n    return fg.value;\r\n  }\r\n  get f() { return this.addForm.controls; }\r\n  get t() { return this.f.excelMappingDetails as FormArray; }\r\n\r\n\r\n  auditLog(){\r\n    console.log(this.newDataResponse);\r\n    this.authStatus = this.newDataResponse?.authStatus;\r\n    this.recordStatus = this.newDataResponse?.recordStatus;\r\n    this.modifiedBy = this.newDataResponse?.inputBy;\r\n    this.modifiedTime = this.newDataResponse?.inputDtStamp;\r\n    this.authorizedBy = this.newDataResponse?.authorizedBy;\r\n    this.authorizedTime = this.newDataResponse?.authorizedDtStamp;\r\n    this.version = this.newDataResponse?.version;\r\n    this.firstTimeAuth=this.newDataResponse?.firstTimeAuth;\r\n    console.log(\"AuditLog\",this.authStatus,this.recordStatus,this.modifiedBy,this.authorizedBy);\r\n    if (this.authStatus === 'U') {\r\n      this.authStatus = 'UNAUTHORIZED';\r\n    }\r\n    if (this.authStatus === 'A') {\r\n      this.authStatus = 'AUTHORIZED';\r\n    }\r\n    if (this.recordStatus === 'C') {\r\n      this.recordStatus = 'CLOSED';\r\n    }\r\n    if (this.recordStatus === 'O') {\r\n      this.recordStatus = 'OPEN';\r\n    }\r\n    if (this.firstTimeAuth === 'Y') {\r\n      this.firstTimeAuth = 'YES';\r\n    }\r\n    if (this.firstTimeAuth === 'N') {\r\n      this.firstTimeAuth = 'NO';\r\n    }\r\n  }\r\n\r\n  checkTypeStatus(i) {\r\n    const control = <FormArray>this.addForm.controls['excelMappingDetails'];\r\n    let fg = control.get([i]);\r\n    if (fg.value.dataType == 'Date') {\r\n      this.is_edit = false;\r\n      fg.get('dateFormat').enable();\r\n    } else {\r\n      fg.get('dateFormat').disable();\r\n    }\r\n  }\r\n  mandatoryCheck(values: any,i) {\r\n    const value = values.currentTarget.checked;\r\n    const control = <FormArray>this.addForm.get('excelMappingDetails') as FormArray;\r\n    control.at(i).get('mandatory').setValue(value);\r\n    console.log(\"value\",value,i);\r\n  }\r\n  enableEditFlag() {\r\n    this.editFlag = true;\r\n    this.editFlag1 = false;\r\n    this.showCurrencyDropdown = true;\r\n    const control = <FormArray>this.addForm.controls['excelMappingDetails'];\r\n    // console.log(control);\r\n    for(let i = 0;i<this.addForm.get('excelMappingDetails')['controls'].length;i++){\r\n      let fg = control.get([i]);\r\n      if (fg.value.dataType == \"date_751\") {\r\n        console.log(\"Inside If\");\r\n        this.is_edit = false;\r\n        fg.get('dateFormat').enable();\r\n      } \r\n      else {\r\n        console.log(\"Inside else\");\r\n        fg.get('dateFormat').disable();\r\n      }\r\n    }\r\n\r\n\r\n  \r\n  }\r\n  clickFunction(i){\r\n    console.log(\"i\",i);\r\n  }\r\n  copyMaping(excelCopyData){\r\n    this.mappingResponse='';\r\n    this.editFlag=true;\r\n    this.copyData=false;\r\n    this.processResp =[];\r\n    this.excelprocess = '';\r\n    excelCopyData.excelMappingDetails.forEach(element => {\r\n          element.id = null;\r\n        });\r\n        console.log(excelCopyData.excelMappingDetails);\r\n  }\r\n  updateMappingData(subArrayForm,excelForm) {\r\n    console.log(this.extNameValue);\r\n    // excelForm.extSys=this.externalSystsemCodes;\r\n    this.submitted = true;\r\n    this.progress = true;\r\n    // this.extCodeValue =  excelForm.extSysCode;\r\n    // this.proCodeValue =  excelForm.processName;\r\n    // this.isCheckedValue =  excelForm.headerRepeated;\r\n    // this.startingValue = excelForm.startingRow;\r\n    // this.currencyValue = excelForm.currency;\r\n    // this.sheetNumberValue = excelForm.sheetNumber;\r\n    let modifiedBy = subArrayForm.excelMappingDetails[0].inputBy;\r\n    modifiedBy = this.currentUser;\r\n    if (this.addForm.invalid) {\r\n      Swal.fire({\r\n        text: 'Numeric values not allowed in mapping column!',\r\n        icon : 'warning'\r\n      });\r\n      return;\r\n    }\r\n    excelForm.extSys=this.extNameValue;\r\n    var obj = {\r\n\r\n      ...excelForm,\r\n\r\n      ...subArrayForm,\r\n\r\n    }\r\n   console.log(obj)\r\n    // this.apiService.updateMappingData(subArrayForm,this.extCodeValue,this.proCodeValue,this.extCodeValue,\r\n    //   this.startingValue,this.isCheckedValue,this.currentUser,this.currencyValue,this.sheetNumberValue)\r\n    this.apiService.excelMappingAuditLog(obj,'update').subscribe(\r\n        updateData => {\r\n          this.newDataResponse = updateData;\r\n          console.log(this.newDataResponse);\r\n          if (this.newDataResponse) {\r\n            this.editFlag = false;\r\n            this.showCurrencyDropdown = false;\r\n            this.dataSaved = true;\r\n            Swal.fire({\r\n              text: 'Record is Updated!',\r\n              icon : 'success'\r\n            }\r\n           \r\n            );\r\n            this.auditLog();\r\n            console.log(\"Record u[dated\");\r\n            \r\n            this.formTouched=!this.updateMappingForm.touched;\r\n            this.updateMappingForm.markAsUntouched();\r\n            this.updateMappingForm.markAsPristine();\r\n            // this.addformTouched=!this.addForm.touched;\r\n            this.addForm.markAsUntouched();\r\n            this.addForm.markAsPristine();\r\n            // this.cdr.markForCheck();\r\n          } else {\r\n            Swal.fire({\r\n              text: 'Failed to update ',\r\n              icon : 'error'\r\n            });\r\n          }\r\n        }\r\n      );\r\n  }\r\n  onClickOfAuth(addForm, updateForm){\r\n    this.currentUser = localStorage.getItem(\"userFromLogin\");\r\n    console.log(\"this.currentUser\",this.currentUser,addForm,updateForm );\r\n    // this.extCodeValue =  updateForm.extSysCode;\r\n    // this.extNameValue =  updateForm.extSysCode;\r\n    // this.proCodeValue =  updateForm.processName;\r\n    // this.currencyValue = updateForm.currency;\r\n    console.log(this.newDataResponse);\r\n    if (this.modifiedBy === this.currentUser) {\r\n      Swal.fire({\r\n        title: 'Maker Cannot Authorized the Record!',\r\n        icon: 'error'\r\n      });\r\n    } else {\r\n      Swal.fire(\r\n        {\r\n          text: 'You are trying to Authorize the record. ' + ' Do you want to proceed?',\r\n          showCancelButton: true,\r\n          confirmButtonColor: '#E6224A',\r\n          cancelButtonColor: '#011945',\r\n          // confirmButtonText: 'PROCEED.'\r\n          cancelButtonText: 'NO',\r\n          confirmButtonText: 'YES',\r\n          icon:'info'\r\n        }\r\n      ).then((result => {\r\n        if(result.isConfirmed=== true){\r\n          this.newDataResponse.userId=this.currentUser;\r\n      // this.apiService.onAuthorizingTheRecordOfExcelMApping(addForm,this.extNameValue,this.proCodeValue,this.extCodeValue, this.currentUser,this.currencyValue)\r\n      this.apiService.excelMappingAuditLog(this.newDataResponse,'authorize')\r\n\r\n      .subscribe(authResp => {\r\n        this.newDataResponse = authResp;\r\n        if(this.newDataResponse){\r\n          this.authStatus = this.newDataResponse?.authStatus;\r\n          this.recordStatus = this.newDataResponse?.recordStatus;\r\n          // this.modifiedBy = this.mappingResponse?.modifiedBy;\r\n          this.modifiedTime = this.newDataResponse?.inputDtStamp;\r\n          this.authorizedBy = this.newDataResponse?.authorizedBy;\r\n          this.authorizedTime = this.newDataResponse?.authorizedDtStamp;\r\n          this.version = this.newDataResponse?.version;\r\n          this.firstTimeAuth=this.newDataResponse?.firstTimeAuth;\r\n          this.modifiedBy = this.newDataResponse?.inputBy;\r\n          \r\n          if (this.authStatus === 'U') {\r\n            this.authStatus = 'UNAUTHORIZED';\r\n          }\r\n          if (this.authStatus === 'A') {\r\n            this.authStatus = 'AUTHORIZED';\r\n          }\r\n          if (this.recordStatus === 'C') {\r\n            this.recordStatus = 'CLOSED';\r\n          }\r\n          if (this.recordStatus === 'O') {\r\n            this.recordStatus = 'OPEN';\r\n          }\r\n          if (this.firstTimeAuth === 'Y') {\r\n            this.firstTimeAuth = 'YES';\r\n          }\r\n          if (this.firstTimeAuth === 'N') {\r\n            this.firstTimeAuth = 'NO';\r\n          }\r\n          Swal.fire({\r\n            title: 'Record is Authorized',\r\n            icon: 'success'\r\n          });\r\n\r\n        }\r\n      })\r\n    }}));\r\n    }\r\n\r\n  }\r\n  onClickDelete(addForm,updateForm){\r\n    console.log(this.newDataResponse);\r\n       Swal.fire(\r\n      {\r\n        text: 'You are trying to delete record. ' + ' Do you want to proceed?',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#E6224A',\r\n        cancelButtonColor: '#011945',\r\n        // confirmButtonText: 'PROCEED.'\r\n        cancelButtonText: 'NO',\r\n        confirmButtonText: 'YES',\r\n        icon:'info'\r\n      }\r\n    ).then((result => {\r\n      if(result.isConfirmed=== true){\r\n        \r\n        \r\n        this.apiService.deleteTemplateMapping(this.extSys,this.processNAme,this.currency,this.sheetNumber).subscribe(deleteRsp=>{\r\n          // console.log(deleteRsp);\r\n          if(deleteRsp == true){\r\n            Swal.fire({\r\n              title: 'Record is deleted',\r\n              icon: 'success'\r\n            }).then(result=>{\r\n              this.router.navigate(['/excel-mapping']);\r\n            });\r\n            // this.router.navigateByUrl('/excel-mapping');\r\n          }\r\n          else{\r\n            Swal.fire({\r\n              title: 'Failed to Delete the Recored!',\r\n              icon: 'error'\r\n            });\r\n\r\n          }\r\n          \r\n        })\r\n\r\n      }}))\r\n\r\n  }\r\n  onClickOfClose(addForm, updateForm){\r\n    // console.log(addForm);\r\n    // console.log(updateForm);\r\n    // this.extCodeValue =  updateForm.extSysCode;\r\n    // this.extNameValue =  updateForm.extSysCode;\r\n    // this.proCodeValue =  updateForm.processName;\r\n    // this.currencyValue = updateForm.currency;\r\n    //  this.currentUser = this.newDataResponse.inputBy;\r\n    //  console.log(this.extCodeValue);\r\n    //  console.log(this.extNameValue);\r\n    //  console.log(this.proCodeValue);\r\n    //  console.log(this.currencyValue);\r\n    //  console.log(this.currentUser);\r\n     console.log(this.newDataResponse);\r\n       Swal.fire(\r\n      {\r\n        text: 'You are trying to Close the record. ' + ' Do you want to proceed?',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#E6224A',\r\n        cancelButtonColor: '#011945',\r\n        // confirmButtonText: 'PROCEED.'\r\n        cancelButtonText: 'NO',\r\n        confirmButtonText: 'YES',\r\n        icon:'info'\r\n      }\r\n    ).then((result => {\r\n      if(result.isConfirmed=== true){\r\n    // this.apiService.onClcikOFCloseOfUpdateExcelMApping(addForm,this.extCodeValue,this.proCodeValue,this.extNameValue,this.currencyValue)\r\n    this.apiService.excelMappingAuditLog(this.newDataResponse,'close').subscribe(closeResp => {\r\n      \r\n      console.log(closeResp);\r\n      this.newDataResponse = closeResp;\r\n      if (this.newDataResponse) {\r\n        this.authStatus = this.newDataResponse?.authStatus;\r\n        this.recordStatus = this.newDataResponse?.recordStatus;\r\n        this.modifiedBy = this.newDataResponse?.inputBy;\r\n        this.modifiedTime = this.newDataResponse?.inputDtStamp;\r\n        this.authorizedBy = this.newDataResponse?.authorizedBy;\r\n        this.authorizedTime = this.newDataResponse?.authorizedTime;\r\n        this.version = this.newDataResponse?.version;\r\n        \r\n        if (this.authStatus === 'U') {\r\n          this.authStatus = 'UNAUTHORIZED';\r\n        }\r\n        if (this.authStatus === 'A') {\r\n          this.authStatus = 'AUTHORIZED';\r\n        }\r\n        if (this.recordStatus === 'C') {\r\n          this.recordStatus = 'CLOSED';\r\n        }\r\n        if (this.recordStatus === 'O') {\r\n          this.recordStatus = 'OPEN';\r\n        }\r\n        Swal.fire({\r\n          title: 'Record is Closed',\r\n          icon: 'success'\r\n        });\r\n        this.auditLog();\r\n      }\r\n      else {\r\n        Swal.fire({\r\n          title: 'Failed to Close the Recored!',\r\n          icon: 'error'\r\n        });\r\n      }\r\n    },\r\n      error => {\r\n        if (HttpErrorResponse) {\r\n          Swal.fire({\r\n            text: 'Server Error!',\r\n            icon: 'error'\r\n          });\r\n        }\r\n      });\r\n    }}));\r\n  }\r\n  onClickOfReopen(addForm, updateForm){\r\n    this.extCodeValue =  updateForm.extSysCode;\r\n    this.extNameValue =  updateForm.extSysCode;\r\n    this.proCodeValue =  updateForm.processName;\r\n    this.currencyValue = updateForm.currency;\r\n     this.currentUser = this.newDataResponse.inputBy;\r\n     Swal.fire(\r\n      {\r\n        //text: 'Unable to process' + 'Error ' + this.responseforfileupload.errorMessage + 'Do you want to Proceed??',\r\n        text: 'You are trying to re-open record. ' + ' Do you want to proceed?',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        // confirmButtonText: 'PROCEED.'\r\n        cancelButtonText: 'NO',\r\n        confirmButtonText: 'YES', 'icon': 'info'\r\n      }\r\n    ).then((result => {\r\n      console.log(\"this is reopen \", result);\r\n      if (result.isConfirmed === true) {\r\n    // this.apiService.onClcikOfReopenOfUpdateExcelMapping(addForm,this.extCodeValue,this.proCodeValue,this.extNameValue,this.currencyValue)\r\n    this.apiService.excelMappingAuditLog(this.newDataResponse,'reopen').subscribe(openResp => {\r\n      console.log(openResp);\r\n      this.newDataResponse = openResp;\r\n      if (this.newDataResponse) {\r\n        this.authStatus = this.newDataResponse?.authStatus;\r\n        this.recordStatus = this.newDataResponse?.recordStatus;\r\n        this.modifiedBy = this.newDataResponse?.inputBy;\r\n        this.modifiedTime = this.newDataResponse?.inputDtStamp;\r\n        this.authorizedBy = this.newDataResponse?.authorizedBy;\r\n        this.authorizedTime = this.newDataResponse?.authorizedTime;\r\n        this.version = this.newDataResponse?.version;\r\n        \r\n        if (this.authStatus === 'U') {\r\n          this.authStatus = 'UNAUTHORIZED';\r\n        }\r\n        if (this.authStatus === 'A') {\r\n          this.authStatus = 'AUTHORIZED';\r\n        }\r\n        if (this.recordStatus === 'C') {\r\n          this.recordStatus = 'CLOSED';\r\n        }\r\n        if (this.recordStatus === 'O') {\r\n          this.recordStatus = 'OPEN';\r\n        }\r\n        Swal.fire({\r\n          title: 'Record is Reopened',\r\n          icon: 'success'\r\n        });\r\n        this.auditLog();\r\n      }\r\n      else {\r\n        Swal.fire({\r\n          title: 'Failed to Reopen the Record!',\r\n          icon: 'error'\r\n        });\r\n      }\r\n    },\r\n      error => {\r\n        if (HttpErrorResponse) {\r\n          Swal.fire({\r\n            text: 'Server Error!',\r\n            icon: 'error'\r\n          });\r\n        }\r\n      });\r\n    }}));\r\n\r\n  }\r\n  removeSubArray(i: number, data) {\r\n    console.log(i,\"Deleted\");\r\n    // this.confirmService\r\n    //   .confirm({ title: 'Confirm', message: 'Are you sure to delete?', ok: 'Yes', cancel: 'No' })\r\n    //   .subscribe(res => {\r\n    //     if (res) {\r\n          this.getRowIdx(i);\r\n      //   } else { return; }\r\n      // });\r\n  }\r\n  private getRowIdx(i) {\r\n    const control = <FormArray>this.addForm.controls.excelMappingDetails;\r\n    const fg = control.get([i]);\r\n    // const idx = fg.get('id').value;\r\n    this.apiService.deleteMappingRow(fg.value.mappingDetailId)\r\n      .subscribe(e => {\r\n        // if (e) {\r\n        //   Swal.fire({\r\n        //     title: 'Record is Deleted',\r\n        //     icon: 'success'\r\n        //   });\r\n        //   // this.router.navigate(['/excel-mapping']);\r\n        // } else {\r\n        //   Swal.fire({\r\n        //     title: 'Failed to Delete the Record!',\r\n        //     icon: 'error'\r\n        //   });\r\n        // }\r\n        if (!e){\r\n          Swal.fire({\r\n            title: 'Failed to Delete the Record!',\r\n            icon: 'error'\r\n          });\r\n        }\r\n      \r\n        this.cdr.markForCheck();\r\n      });\r\n      control.removeAt(i);\r\n  }\r\n\r\n  finalSubmit(excelForm, subArrayForm) {\r\n    console.log(this.externalSystsemCodes);\r\n    excelForm.extSys=this.externalSystsemCodes;\r\n    console.log(\"Form\", excelForm,subArrayForm)\r\n    this.submitted = true;\r\n    this.extCodeValue =  excelForm.extSysCode;\r\n    this.proCodeValue =  excelForm.processName;\r\n    this.isCheckedValue =  excelForm.headerRepeated;\r\n    this.startingValue = excelForm.startingRow;\r\n    this.currencyValue = excelForm.currency;\r\n    this.sheetNumberValue = excelForm.sheetNumber;\r\n    if (this.addForm.controls.excelMappingDetails.invalid) {\r\n    }\r\n    this.apiService.columnData(subArrayForm,this.extCodeValue,this.proCodeValue,this.isCheckedValue,this.startingValue,this.extCodeValue,this.currencyValue,this.currentUser,this.sheetNumberValue)\r\n      .subscribe(response => {\r\n        this.newDataResponse = response;\r\n        console.log(\"this.mappingResponse\",this.newDataResponse);\r\n        if (this.newDataResponse) {\r\n          this.is_edit=true;\r\n          this.auditLog();\r\n          Swal.fire({\r\n            title: 'Mapped Successfully!',\r\n            icon: 'success'\r\n          });\r\n          this.updateMappingForm.reset();\r\n          this.addForm.reset();\r\n          return;\r\n        } else {\r\n          Swal.fire({\r\n            title: 'Failed ExternalSystem And ProcessCode Already Mapped.',\r\n            icon: 'error'\r\n          });\r\n            this.updateMappingForm.reset();\r\n            this.addForm.reset();\r\n      }\r\n      });\r\n  }\r\n\r\n}\r\n","<div class=\"pageContentMain\">\r\n  <div class=\"pageTitleCol\">\r\n    <h2 class=\"pageTitle\">Template Mapping</h2>\r\n  </div>\r\n  <div class=\"dbCardStyle\">\r\n    <div class=\"row g-3 pb-3 justify-content-end\">\r\n      <div class=\"col-auto\">\r\n        <a href=\"excel-mapping-new.html\" [routerLink]=\"['/excel-mapping/excel-mapping-edit']\"\r\n          routerLinkActive=\"router-link-active\" class=\"btn smBtn minWdSmBtn btnPrimary\">Update Mapping</a>\r\n      </div>\r\n      <div class=\"col-auto\">\r\n        <a href=\"javascript:void(0)\" [routerLink]=\"['/dashbaord']\" routerLinkActive=\"router-link-active\"\r\n          class=\"btn smBtn minWdSmBtn btnSecondary\">Exit</a>\r\n      </div>\r\n    </div>\r\n    <form [formGroup]=\"excelMappingForm\" action=\"\" class=\"formStyle\">\r\n      <div class=\"row gy-4 align-items-end\">\r\n        <div class=\"col-lg-4\">\r\n          <label for=\"extSystem\" class=\"formLbl\">External System Code<span class=\"colorRed\">*</span></label>\r\n          <ng-select \r\n          [clearable]=\"false\"\r\n          id=\"outlineNgSelect\" \r\n          [attr.disabled]=\"editFlag ? '' : null\" \r\n          (change)=\"getProcess(excelMappingForm.get('extSysCode').value)\"\r\n          formControlName=\"extSysCode\" \r\n          required aria-label=\"Default select example\"\r\n          style=\"width: 100% !important;\">\r\n          <!-- <ng-select \r\n          class=\"form-select\" \r\n          id=\"outlineNgSelect\" \r\n          [attr.disabled]=\"editFlag ? '' : null\" \r\n          (change)=\"getProcess(excelMappingForm.get('extSysCode').value)\"\r\n          formControlName=\"extSysCode\" \r\n          required aria-label=\"Default select example\"\r\n          style=\"width: 200px\"> -->\r\n          \r\n            <!-- <option class=\"form-class\" selected>Select External System </option> -->\r\n            <ng-option hidden value=\"\" disabled selected >Please select External System</ng-option>\r\n            <ng-option class=\"form-class\" *ngFor=\"let data of extSysData\" [value]=\"data\">{{data}}</ng-option>\r\n\r\n          </ng-select>\r\n        </div>\r\n        <div class=\"col-lg-4\">\r\n          <label for=\"processName\" class=\"formLbl\">Process Code<span class=\"colorRed\">*</span></label>\r\n          <select *ngIf=\"processNameField==='select'\" class=\"form-select\" [attr.disabled]=\"editFlag ? '' : null\"\r\n            (change)=\"getProcessName(excelMappingForm.get('processName').value,excelMappingForm.get('extSysCode').value)\"\r\n            formControlName=\"processName\"  required aria-label=\"Default select example\">\r\n            <!-- <option class=\"form-class\" selected>Process Code</option> -->\r\n            <option hidden value=\"\" disabled selected >--Please select--</option>\r\n            <option class=\"form-class\" *ngFor=\"let data of processName\" [value]=\"data\">{{data}}</option>\r\n\r\n          </select>\r\n          <input  *ngIf=\"processNameField==='text'\" type=\"text\" [readonly]=\"editFlag\" formControlName=\"processName\" required class=\"form-control\"\r\n            placeholder=\"Process Code\" value=\"\">\r\n        </div>\r\n        <!-- *ngFor=\"let data of processName\" -->\r\n        <div class=\"col-lg-4\">\r\n          <label for=\"startingRow\" class=\"formLbl\">Data Starting Row<span class=\"colorRed\">*</span></label>\r\n          <input id=\"startingRow\" type=\"number\" [readonly]=\"editFlag\" formControlName=\"startingRow\" required class=\"form-control\"\r\n            placeholder=\"Data Starting Row\" value=\"\">\r\n        </div>\r\n        <div class=\"col-lg-4\">\r\n          <label for=\"currency\" class=\"formLbl\">Currency<span class=\"colorRed\">*</span></label>\r\n          <input id=\"currency\" type=\"text\" class=\"form-control\" [readonly]=\"editFlag\" formControlName=\"currency\" name=\"currency\" required\r\n            placeholder=\"Currency\" value=\"\" minlength=\"1\" maxlength=\"3\" onkeydown=\"/[A-Z]/i.test(event.key)\" \r\n            (keypress)=\"letterOnly($event)\" oninput=\"this.value = this.value.toUpperCase()\">\r\n        </div>\r\n        <div class=\"col-lg-4\">\r\n          <label for=\"sheetNumber\" class=\"formLbl\">Sheet Number<span class=\"colorRed\">*</span></label>\r\n          <input id=\"sheetNumber\" type=\"number\" [readonly]=\"editFlag\" class=\"form-control\" formControlName=\"sheetNumber\"\r\n            placeholder=\"Sheet Number\" value=\"\" >\r\n        </div>\r\n        <div class=\"col-lg-4\">\r\n          <div class=\"checkStyle\"   >\r\n            <input [attr.disabled]=\"editFlag ? true : null\" type=\"checkbox\" id=\"fcyRate\" formControlName=\"headerRepeated\">\r\n            <label for=\"fcyRate\">Is Header Present</label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  </div>\r\n  <div class=\"dbCardStyle\">\r\n    <form action=\"\" [formGroup]=\"addForm\" novalidate class=\"formStyle\">\r\n      <div class=\"titleStyle mt-2 mb-4\">\r\n        <h2 class=\"pageTitle darkgreyClr\">Select Minimum two mandatory row</h2>\r\n      </div>\r\n      <div class=\"table-responsive\">\r\n        <table id=\"dbTable1\" class=\"table tableStyle1 responsive nowrap vAlignMdl\">\r\n          <thead>\r\n            <tr>\r\n              <th>Name</th>\r\n              <th>data type</th>\r\n              <th>mandatory</th>\r\n              <th>header name</th>\r\n              <th>date format</th>\r\n              <th>mapping column</th>\r\n              <th>delimeter</th>\r\n              <th>default value</th>\r\n              <th>repeated till next value</th>\r\n              <th>delete</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody formArrayName=\"excelMappingDetails\">\r\n            <tr *ngFor=\"let item of addForm.get('excelMappingDetails')['controls']; let i=index\">\r\n              <ng-container [formGroupName]=\"i\">\r\n                <td>\r\n                  <input id=\"sourceCode\" type=\"text\" [readonly]=\"editFlag\" formControlName=\"columnnName\" class=\"form-control\"\r\n                    placeholder=\"Name\" value=\"\">\r\n                </td>\r\n                <td>\r\n                  <select class=\"form-select\" [attr.disabled]=\"editFlag ? '' : null\" formControlName=\"dataType\" placeholder=\"Choose DataType\"\r\n                    (change)=\"checkTypeStatus(i,addForm.value)\" aria-label=\"Default select example\"> \r\n                    <option hidden value=\"\" disabled selected >--Please select--</option>\r\n                    <!-- <option class=\"form-class\" value=\"\" disabled selected>&nbsp; Select DataType &nbsp; </option> -->\r\n                    <option class=\"form-class\" *ngFor=\"let item of dataTypes\" [value]=\"item.type\">{{item.type}}</option>\r\n                  </select>\r\n                </td>\r\n                <td>\r\n                  <div class=\"checkboxdiv\" >\r\n                    <div class=\"checkStyle\" >\r\n                      <input  type=\"checkbox\"  formControlName=\"mandatory\" id=\"mandatoryCheck_{{ i }}\">\r\n                      <label for=\"mandatoryCheck_{{ i }}\"></label>\r\n                    </div>\r\n                    \r\n                  </div>\r\n                </td>\r\n                <td>\r\n                  <input id=\"headerName_{{ i }}\" type=\"text\" [readonly]=\"editFlag\" formControlName=\"headerName\" class=\"form-control\"\r\n                    placeholder=\"Header Name\" value=\"\">\r\n                </td>\r\n                <td>\r\n                  <input id=\"dateFormat_{{ i }}\" type=\"text\" [readonly]=\"editFlag\" class=\"form-control\" formControlName=\"dateFormat\"\r\n                    placeholder=\"Date Format\" value=\"\">\r\n                </td>\r\n                <td>\r\n                  <input id=\"excelMappingColumn{{ i }}\" type=\"text\" [readonly]=\"editFlag\" class=\"form-control\" formControlName=\"excelMappingColumn\"\r\n                    placeholder=\"Mapping Column\" value=\"\">\r\n                </td>\r\n                <td>\r\n                  <input id=\"delimeter_{{ i }}\" type=\"text\" [readonly]=\"editFlag\" class=\"form-control\" formControlName=\"delimeter\"\r\n                    placeholder=\"Delimeter\" value=\"\">\r\n                </td>\r\n                <td>\r\n                  <input id=\"defaultValue_{{ i }}\" type=\"text\" [readonly]=\"editFlag\" class=\"form-control\" formControlName=\"defaultValue\"\r\n                    placeholder=\"Default Value\" value=\"\">\r\n                </td>\r\n                <td>\r\n                  <input id=\"repeatedTillNextValue_{{ i }}\" [readonly]=\"editFlag\" type=\"text\" class=\"form-control\"\r\n                    formControlName=\"repeatedTillNextValue\" placeholder=\"Repeated Till Next Value\" value=\"\">\r\n                </td>\r\n                <td>\r\n                  <a class=\"deleteIcon2\" *ngIf=\"!editFlag\">\r\n                    <span (click)=\"removeSubArray(i)\"><img src=\"assets/images/delete-icon.svg\" alt=\"...\"></span>\r\n                  </a>\r\n                </td>\r\n              </ng-container>\r\n            </tr>\r\n            <tr>\r\n              <td>\r\n                <a class=\"addIcon primarybg\" *ngIf=\"!editFlag\" (click)=\"addSubArray()\">\r\n                  <span>\r\n                    <img src=\"assets/images/plus-icon.svg\" alt=\"...\">\r\n                  </span>\r\n                </a>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      <div class=\"row g-3 pb-3 justify-content-end pt-3\">\r\n        <div class=\"col-auto\"  *ngIf=\"showUpdate\">\r\n          <button class=\"btn smBtn minWdSmBtn btnPrimary\" [disabled]=\"dataSaved\" \r\n            (click)=\"updateMappingData(addForm.value,excelMappingForm.value)\">Save</button>\r\n        </div>\r\n        <div class=\"col-auto\" *ngIf=\"dataFromresponse && !showUpdate\" >\r\n          <button class=\"btn smBtn minWdSmBtn btnUpdate\" color=\"primary\"\r\n          (click)=\"enableEditFlag()\">Edit</button>\r\n        </div>\r\n\r\n        <div class=\"col-auto\"  *ngIf=\"dataFromresponse && (dataFromresponse.authStatus == 'U' ||dataFromresponse.authStatus == 'UNAUTHORIZED') && !showUpdate\">\r\n          <button class=\"btn smBtn minWdSmBtn btnAuth\" color=\"primary\" (click)=\"onClickOfAuth(addForm.value,excelMappingForm.value)\">Auth</button>\r\n        </div>\r\n          <div class=\"col-auto\"  *ngIf=\"(dataFromresponse && (dataFromresponse.firstTimeAuth == 'N' || dataFromresponse.firstTimeAuth == 'NO')  && (dataFromresponse.recordStatus=='O' || dataFromresponse.recordStatus=='OPEN')) && !showUpdate\">\r\n\r\n          <button  class=\"btn smBtn minWdSmBtn btnPrimary\" color=\"primary\" (click)=\"onClickOfDelete(addForm.value,excelMappingForm.value)\" >Delete</button>\r\n        </div>\r\n       <div class=\"col-auto\"  *ngIf=\"dataFromresponse && ((dataFromresponse.recordStatus=='O' || dataFromresponse.recordStatus=='OPEN')  && (dataFromresponse.firstTimeAuth == 'Y' || dataFromresponse.firstTimeAuth == 'YES')) && !showUpdate\">\r\n          <button class=\"btn smBtn minWdSmBtn btnUpdate\" (click)=\"onClickOfClose(addForm.value,excelMappingForm.value)\" color=\"primary\" >Close</button>\r\n        </div>\r\n        <div class=\"col-auto\"  *ngIf=\"dataFromresponse && ((dataFromresponse.recordStatus=='C' || dataFromresponse.recordStatus=='CLOSED') && (dataFromresponse.firstTimeAuth == 'Y' || dataFromresponse.firstTimeAuth == 'YES')) && !showUpdate\">\r\n          <button cclass=\"btn smBtn minWdSmBtn btnPrimary\" (click)=\"onClickOfReopen(addForm.value,excelMappingForm.value)\" color=\"primary\" >Reopen</button>\r\n        </div> \r\n        <div class=\"col-auto\" *ngIf=\"!dataFromresponse\">\r\n          <button [disabled]=\"excelMappingForm.invalid || addForm.controls.excelMappingDetails.invalid \"   [attr.disabled]=\"editFlag\" (click)=\"finalSubmit(excelMappingForm.value,addForm.value)\"\r\n            class=\"btn smBtn minWdSmBtn btnPrimary\">Save</button>\r\n        </div>\r\n        <div class=\"col-auto\">\r\n          <a [routerLink]=\"['/excel-mapping']\" routerLinkActive=\"router-link-active\"\r\n            class=\"btn smBtn minWdSmBtn btnSecondary\">Exit</a>\r\n        </div>\r\n      </div>\r\n     <div class=\"dbCardStyle\" *ngIf=\"dataFromresponse\">\r\n        <div class=\"row\">\r\n          <div class=\"col-sm-6 col-md-4 col-lg-3\">\r\n            <div class=\"csCardStyle\">\r\n              <div class=\"row g-2 align-items-center\">\r\n                <div class=\"col-auto\">\r\n                  <div class=\"csCardStyleIcon csCardStyleIconBg1\">\r\n                    <i class=\"fa fa-edit faClass\"></i>\r\n                  </div>\r\n                </div>\r\n                <div class=\"col\">\r\n                  <div class=\"csCardStyleText\">\r\n                    <h2>Maker</h2>\r\n                    <p>{{dataFromresponse.inputBy}}</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-sm-6 col-md-4 col-lg-3\">\r\n            <div class=\"csCardStyle\">\r\n              <div class=\"row g-2 align-items-center\">\r\n                <div class=\"col-auto\">\r\n                  <div class=\"csCardStyleIcon csCardStyleIconBg2\">\r\n                    <img src=\"assets/images/time-stamp-icon.svg\" alt=\"...\">\r\n                  </div>\r\n                </div>\r\n                <div class=\"col\">\r\n                  <div class=\"csCardStyleText\">\r\n                    <h2>Maker Time Stamp</h2>\r\n                    <p>{{dataFromresponse.inputDtStamp | date: 'MM/dd/yyyy, h:mm a'}}</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-sm-6 col-md-4 col-lg-3\">\r\n            <div class=\"csCardStyle\">\r\n              <div class=\"row g-2 align-items-center\">\r\n                <div class=\"col-auto\">\r\n                  <div class=\"csCardStyleIcon csCardStyleIconBg3\">\r\n                    <i class=\"fa fa-files-o faRecordStatus\" aria-hidden=\"true\"></i>\r\n                  </div>\r\n                </div>\r\n                <div class=\"col\">\r\n                  <div class=\"csCardStyleText\">\r\n                    <h2>Record Status</h2>\r\n                    <p>{{dataFromresponse.recordStatus}}</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-sm-6 col-md-4 col-lg-3\">\r\n            <div class=\"csCardStyle\">\r\n              <div class=\"row g-2 align-items-center\">\r\n                <div class=\"col-auto\">\r\n                  <div class=\"csCardStyleIcon csCardStyleIconBg4\">\r\n                  <i class=\"fa fa-check-square-o faClassChecker\"></i>\r\n                  </div>\r\n                </div>\r\n                <div class=\"col\">\r\n                  <div class=\"csCardStyleText\">\r\n                    <h2>Checker</h2>\r\n                    <p>{{dataFromresponse.authorizedBy}}</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-sm-6 col-md-4 col-lg-3\">\r\n            <div class=\"csCardStyle\">\r\n              <div class=\"row g-2 align-items-center\">\r\n                <div class=\"col-auto\">\r\n                  <div class=\"csCardStyleIcon csCardStyleIconBg5\">\r\n                    <img src=\"assets/images/checker-time-icon.svg\" alt=\"...\">\r\n                  </div>\r\n                </div>\r\n                <div class=\"col\">\r\n                  <div class=\"csCardStyleText\">\r\n                    <h2>Checker Time Stamp</h2>\r\n                    <p>{{dataFromresponse.authorizedDtStamp | date: 'MM/dd/yyyy, h:mm a'}}</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-sm-6 col-md-4 col-lg-3\">\r\n            <div class=\"csCardStyle\">\r\n              <div class=\"row g-2 align-items-center\">\r\n                <div class=\"col-auto\">\r\n                  <div class=\"csCardStyleIcon csCardStyleIconBg6\">\r\n              <i class=\"fa fa-shield faClassFirstTimeAuth\"></i>\r\n                  </div>\r\n                </div>\r\n                <div class=\"col\">\r\n                  <div class=\"csCardStyleText\">\r\n                    <h2>First Time Authorization</h2>\r\n                    <p>{{dataFromresponse.firstTimeAuth}}</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-sm-6 col-md-4 col-lg-3\">\r\n            <div class=\"csCardStyle\">\r\n              <div class=\"row g-2 align-items-center\">\r\n                <div class=\"col-auto\">\r\n                  <div class=\"csCardStyleIcon csCardStyleIconBg7\">\r\n                   <img src=\"assets/images/authorize.svg\" alt=\"...\" class=\"modImage\">\r\n                  </div>\r\n                </div>\r\n                <div class=\"col\">\r\n                  <div class=\"csCardStyleText\">\r\n                    <h2>Authorization Status</h2>\r\n                    <p>{{dataFromresponse.authStatus}}</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-sm-6 col-md-4 col-lg-3\">\r\n            <div class=\"csCardStyle\">\r\n              <div class=\"row g-2 align-items-center\">\r\n                <div class=\"col-auto\">\r\n                  <div class=\"csCardStyleIcon csCardStyleIconBg7\">\r\n                    <img src=\"assets/images/first-auth-icon.svg\" alt=\"...\" />\r\n                  </div>\r\n                </div>\r\n                <div class=\"col\">\r\n                  <div class=\"csCardStyleText\">\r\n                    <h2>Modification Number</h2>\r\n                    <p>{{dataFromresponse.version}}</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          \r\n        </div>\r\n      </div> \r\n    </form>\r\n  </div>\r\n</div>","import { HttpErrorResponse } from '@angular/common/http';\r\nimport { ChangeDetectorRef, Component, OnInit } from '@angular/core';\r\nimport { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { Observable, of, Subject } from 'rxjs';\r\nimport { CanDeactivateGuard, IDeactivateComponent } from 'src/app/shared/guards/can-deactivate.guard';\r\nimport { ApiService } from 'src/app/shared/services/api.service';\r\nimport { ToastService } from 'src/app/shared/services/toast.service';\r\nimport Swal from 'sweetalert2';\r\nexport interface DTYPES {\r\n  id: number;\r\n  type: string;\r\n  isActive: boolean;\r\n}\r\n\r\n@Component({\r\n  selector: 'npr-excel-mapping-new',\r\n  templateUrl: './excel-mapping-new.component.html',\r\n  styleUrls: ['./excel-mapping-new.component.scss']\r\n})\r\nexport class ExcelMappingNewComponent implements OnInit ,IDeactivateComponent{\r\n  excelMappingForm: FormGroup;\r\n  extSysData: string[];\r\n  progress: boolean;\r\n  processResp: any;\r\n  processName: any;\r\n  extNameValue: any;\r\n  extSysCode: any = null;\r\n  excelprocess: any = null;\r\n  addForm: FormGroup;\r\n  currentUser: any;\r\n  is_edit: boolean;\r\n  submitted: boolean = false;\r\n  currency: any;\r\n  dataFromresponse:any;\r\n  editFlag: boolean = false;\r\n\r\n  dataTypes: DTYPES[] = [\r\n    { id: 3, type: 'Clob', isActive: false },\r\n    { id: 1, type: 'Date', isActive: true },\r\n    { id: 2, type: 'Number', isActive: false },\r\n    { id: 4, type: 'VarChar', isActive: false }\r\n  ];\r\n  extCodeValue: any;\r\n  proCodeValue: any;\r\n  isCheckedValue: any;\r\n  startingValue: any;\r\n  currencyValue: any;\r\n  sheetNumberValue: any;\r\n  mandatoryValue: any;\r\n  modifiedBy: any;\r\n  authStatus: any;\r\n  recordStatus: any;\r\n  modifiedTime: any;\r\n  authorizedBy: any;\r\n  authorizedTime: any;\r\n  version: any;\r\n  verifiedStatus: any;\r\n  dataSaved : boolean = false;\r\n  showUpdate : boolean = false;\r\n  formTouched: boolean=true;\r\n  showDialog = false;\r\n  subject = new Subject<boolean>();\r\n  externalSysData: any;\r\n  isoRespDataFiltered: any;\r\n  externalSystsemCodes: any;\r\n  checkMandatory: boolean=false;\r\n  isDateValid: boolean = false;\r\n  processNameField: string = 'text';\r\n  constructor(private apiService: ApiService, private fb: FormBuilder, private toastService: ToastService,private router:Router,\r\n    private cdr: ChangeDetectorRef,private canDeactivateGuard: CanDeactivateGuard) { }\r\n\r\n  ngOnInit(): void {\r\n    // this.excelMappingForm = this.fb.group({\r\n    //   extCode: [\"\"],\r\n    //   proCode: [\"\"],\r\n    //   startingRow: [\"\"],\r\n    //   currency: [\"\"],\r\n    //   sheetNumber: [\"\"],\r\n    //   headerRepeated: [false],\r\n    // });\r\n    this.currentUser = localStorage.getItem(\"userFromLogin\");\r\n\r\n    this.excelMappingForm = this.fb.group({\r\n      processName: [\"\"],\r\n      extSysCode: [\"\"],\r\n      extSys: [\"\"],\r\n      userId: [this.currentUser],\r\n      sheetNumber: [\"\"],\r\n      headerRepeated: [false],\r\n      startingRow:[\"\"],\r\n      currency:[\"\"]\r\n    });\r\n    this.addForm = this.fb.group({\r\n      excelMappingDetails: this.fb.array([this.getSubArray()])\r\n    });\r\n    this.getAllExtsysNameAndProcessCodeOnAuthStatus();\r\n    // localStorage.setItem(\"userIdForChangePassword\", localStorage.getItem(\"currentUser\"));\r\n    \r\n    console.log(this.currentUser);\r\n  }\r\n  auditLog(){\r\n    // this.authStatus = this.dataFromresponse[0]?.authStatus;\r\n    // this.recordStatus = this.dataFromresponse[0]?.recordStatus;\r\n    // this.modifiedBy = this.dataFromresponse[0]?.modifiedBy;\r\n    // this.modifiedTime = this.dataFromresponse[0]?.modifiedTime;\r\n    // this.authorizedBy = this.dataFromresponse[0]?.authorizedBy;\r\n    // this.authorizedTime = this.dataFromresponse[0]?.authorizedTime;\r\n    // this.version = this.dataFromresponse[0]?.version;\r\n    // console.log(\"AuditLog\",this.authStatus,this.recordStatus,this.modifiedBy,this.authorizedBy);\r\n    \r\n    if (this.dataFromresponse.authStatus === 'U') {\r\n      this.dataFromresponse.authStatus = 'UNAUTHORIZED';\r\n    }\r\n    if (this.dataFromresponse.authStatus === 'A') {\r\n      this.dataFromresponse.authStatus = 'AUTHORIZED';\r\n    }\r\n    if (this.dataFromresponse.recordStatus === 'C') {\r\n      this.dataFromresponse.recordStatus = 'CLOSED';\r\n    }\r\n    if (this.dataFromresponse.recordStatus === 'O') {\r\n      this.dataFromresponse.recordStatus = 'OPEN';\r\n    }\r\n    if (this.dataFromresponse.firstTimeAuth === 'N') {\r\n      this.dataFromresponse.firstTimeAuth = 'NO';\r\n    }\r\n    if (this.dataFromresponse.firstTimeAuth === 'Y') {\r\n      this.dataFromresponse.firstTimeAuth = 'YES';\r\n    }\r\n  }\r\n  getSubArray(): FormGroup {\r\n    return this.fb.group({\r\n      // id:[''],\r\n      columnnName: ['', [Validators.required]],\r\n      dataType: [null, [Validators.required]],\r\n      mandatory: [false],\r\n      // mandatory: [\"\"],\r\n      headerName: ['',[Validators.required]],\r\n      dateFormat: [{ value: '', disabled: true }],\r\n      // dateFormat: [''],\r\n      // authStatus: [''],\r\n      // modifiedBy: [''],\r\n      // modifiedBy: ['JILU'],\r\n      // authorizedBy: [''],\r\n      // version: [''],\r\n      // modifiedTime: [''],\r\n      // authorizedTime: [''],\r\n      // recordStatus: [''],\r\n      delimeter: ['',],\r\n      defaultValue: ['',],\r\n      repeatedTillNextValue: ['',],\r\n      // excelMappingColumn:[''],\r\n      tableMappingColumn:[''],\r\n      mappingMasterId:[''],\r\n      excelMappingColumn: ['', [Validators.required,Validators.minLength(1), Validators.maxLength(3), Validators.pattern('^[a-zA-Z \\-#,@,%\\']+')]],\r\n\r\n    });\r\n  }\r\n  mandatoryRequired(values: any,index) {\r\n    console.log(values);\r\n    console.log(index);\r\n    if(values == true){\r\n      console.log(\"Inside True\");\r\n      this.checkMandatory=false;\r\n    }\r\n    if(values== false){\r\n      console.log(\"Inside False\");\r\n    }\r\n    // const value = values.currentTarget.checked;\r\n   \r\n  }\r\n  getAllExternalSystem() {\r\n    this.apiService.getAllExtCode().subscribe(response => {\r\n      this.extSysData = response;\r\n      \r\n    });\r\n  }\r\n  getAllExtsysNameAndProcessCodeOnAuthStatus() {\r\n    // this.apiService.getAllExtsysNameAndProcessCodeOnAuthStatus()\r\n    //   .subscribe(response => {\r\n    //     this.externalSysData=response;\r\n    //     this.extSysData = response.extSysList.sort();\r\n    //     console.log(this.externalSysData);\r\n    //   });\r\n      this.apiService.getAllExtsysNameOnAuthStatus()\r\n      .subscribe(response => {\r\n        this.externalSysData=response;\r\n        this.extSysData = response.sort();\r\n        \r\n      });\r\n      // const val=this.externalSysData.map.filter(item=> item.map === data);\r\n      // console.log(val);\r\n// console.log(this.externalSysData.map.length);\r\n      // for(let i = 0 ;i<=this.externalSysData.map.length;i++){\r\n\r\n      // }\r\n      \r\n  }\r\n  getExtSysNameByExtSysCode(extSysCode) {\r\n    this.apiService.getExtSysNameByExtSysCode(extSysCode)\r\n      .subscribe(data => {\r\n        this.extNameValue = data;\r\n      });\r\n      console.log(this.extNameValue);\r\n  }\r\n  getProcess(extSysCode) {\r\n    // this.externalSystsemCodes = this.externalSysData.map[extSysCode].extSysName;\r\n    // this.excelMappingForm.value.extSys=this.externalSysData.map[extSysCode].extSysName;\r\n    // console.log(this.excelMappingForm.value.extSys)\r\n    // this.excelMappingForm.get('processName').setValue(this.externalSysData.map[extSysCode].processCode);\r\n  // this.processName=this.externalSysData.map[extSysCode].processCode;\r\n  this.excelMappingForm.get('processName').setValue('');\r\n  this.processNameField='text'\r\n  this.processName=[];\r\n    this.apiService.getProcessNameByExtSysCode(extSysCode).subscribe(response => {\r\n     \r\n      this.processResp = response;\r\n      this.processName = this.processResp;\r\n      if(this.processName.length  === 1 && this.processName != undefined){\r\n        this.processNameField='text';\r\n        this.excelMappingForm.get('processName').setValue(this.processName[0]);\r\n        this.excelMappingForm.value.extSys='';\r\n      }\r\n      if(this.processName.length  > 1){\r\n        this.processNameField='select';\r\n      }\r\n      this.getExtSysNameByExtSysCode(extSysCode);\r\n    });\r\n  }\r\n\r\n  getProcessName(processCode, extSysCode) {\r\n    this.extSysCode = extSysCode;\r\n    this.excelprocess = processCode;\r\n  }\r\n  mandatoryCheck(values: any,i) {\r\n    const value = values.currentTarget.checked;\r\n    const control = <FormArray>this.addForm.get('excelMappingDetails') as FormArray;\r\n    control.at(i).get('mandatory').setValue(value);\r\n    console.log(\"value\",value,i);\r\n  }\r\n\r\n  addSubArray() {\r\n    const control = <FormArray>this.addForm.controls['excelMappingDetails'];\r\n    console.log(\"const control\", control);\r\n    control.push(this.getSubArray());\r\n  }\r\n\r\n  patchData(formdata) {\r\n    console.log(\"formdata\");\r\n    const control = <FormArray>this.addForm.controls['excelMappingDetails'];\r\n    for (let i = 0; i < formdata.length; i++) {\r\n      control.push(this.getSubArray());\r\n    }\r\n    this.addForm.patchValue({ excelMappingDetails: formdata });\r\n  }\r\n  removeSubArray(i: number) {\r\n    const control = <FormArray>this.addForm.controls['excelMappingDetails'];\r\n    control.removeAt(i);\r\n  }\r\n  clearAllSubArray() {\r\n    const control = <FormArray>this.addForm.controls['excelMappingDetails'];\r\n    while (control.length) {\r\n      control.removeAt(control.length - 1);\r\n    }\r\n    control.clearValidators();\r\n  }\r\n  get f() { return this.addForm.controls; }\r\n  get t() { return this.f.excelMappingDetails as FormArray; }\r\n  checkTypeStatus(i,subArrayForm) {\r\n    //console.log(i);\r\n    const control = <FormArray>this.addForm.controls['excelMappingDetails'];\r\n    let fg = control.get([i]);\r\nconsole.log(fg.value.dataType);\r\n    if (fg.value.dataType == 'Date') {\r\n      console.log(\"Dates\");\r\n      this.is_edit = false;\r\n      fg.get('dateFormat').clearValidators();\r\n      fg.get('dateFormat').setValidators([Validators.required])\r\n      fg.get('dateFormat').updateValueAndValidity();\r\n      // this.addForm.controls['excelMappingDetails'].get('dateFormat').clearValidators();\r\n      // this.addForm.controls['excelMappingDetails'].get('dateFormat').updateValueAndValidity();\r\n      fg.get('dateFormat').enable();\r\n    } else {\r\n      fg.get('dateFormat').disable();\r\n    }\r\n  }\r\n  clickFunction(i){\r\n    console.log(\"i\",i);\r\n  }\r\n  finalSubmit(excelForm, subArrayForm) {\r\n    console.log(subArrayForm);\r\n    let mandCnt: number = 0;\r\n    for (let n = 0; n < subArrayForm.excelMappingDetails.length ; n++) {\r\n      console.log(subArrayForm.excelMappingDetails[n].mandatory);\r\n      if(subArrayForm.excelMappingDetails[n].mandatory == true) {\r\n        console.log(\"Inside If\")\r\n        mandCnt += 1;\r\n      }\r\n      console.log(mandCnt);\r\n  }\r\n  \r\n  if (mandCnt < 2) {\r\n    console.log(\"More than 2 rows\");\r\n    Swal.fire({\r\n      text: 'Add atleast two mininum rows with mandatory condition',\r\n      icon: 'info'\r\n    });\r\n    // this.toast.error(`Add atleast two min rows with mandatory condition`, '', {\r\n    //   timeOut: 3000,\r\n    //   progressBar: true,\r\n    //   tapToDismiss: true,\r\n    //   closeButton: true,\r\n    //   easeTime: 300,\r\n    //   extendedTimeOut: 1000\r\n    // });\r\n    // return;\r\n  }\r\n  else{\r\n    excelForm.extSys=this.extNameValue;\r\n    this.submitted = true;\r\n    subArrayForm.excelMappingDetails[0].modifiedBy = this.currentUser;\r\n    var obj = {\r\n\r\n      ...excelForm,\r\n\r\n      ...subArrayForm,\r\n\r\n    }\r\n    // console.log(obj);\r\n    // this.apiService.columnData(subArrayForm, this.extCodeValue, this.proCodeValue, this.isCheckedValue, this.startingValue, this.extCodeValue, this.currencyValue, this.currentUser, this.sheetNumberValue)\r\n    this.apiService.createTemplateMap(obj)\r\n\r\n      .subscribe(response => {\r\n        this.dataFromresponse = response;\r\n        console.log(\"this.dataFromresponse\", this.dataFromresponse);\r\n        if (this.dataFromresponse) {\r\n          this.is_edit = true;\r\n          console.log(\"sucess\");\r\n          this.auditLog();\r\n          this.formTouched=!this.excelMappingForm.touched;\r\n          Swal.fire({\r\n            title: 'Mapped Successfully!',\r\n            icon: 'success'\r\n          });\r\n          this.editFlag = true;\r\n\r\n          // this.excelMappingForm.reset();\r\n          // this.addForm.reset();\r\n          return;\r\n        } \r\n        else {\r\n          Swal.fire({\r\n            title: 'Mapping Failed!',\r\n            icon: 'error'\r\n          });\r\n        }\r\n        // Failed ExternalSystem And ProcessCode Already Mapped!\r\n      },error=>{\r\n        Swal.fire({\r\n          text: error.error.message,\r\n          icon: 'error'\r\n        });\r\n      })\r\n    }\r\n  }\r\n  enableEditFlag() {\r\n    this.editFlag = false;\r\n    this.showUpdate = true;\r\n    // this.showCurrencyDropdown = true;\r\n    \r\n  }\r\n\r\n  \r\n  canExit() : Promise<boolean> {\r\n    let isExit :boolean = false;\r\n    if (this.excelMappingForm.touched && this.formTouched==true) {\r\n    return Swal.fire({ \r\n      text: 'There are unsaved changes in the screen. Would you like to navigate to other screen?',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#E6224A',\r\n      cancelButtonColor: '#011945',\r\n      cancelButtonText: 'NO',\r\n      confirmButtonText: 'YES',\r\n      icon: 'info',\r\n    }).then((result) => {\r\n      if (result.isConfirmed === true) {\r\n        isExit=true;\r\n        this.cdr.markForCheck();\r\n           return isExit;\r\n      }\r\n      else{\r\n        isExit=false;\r\n        this.cdr.markForCheck();\r\n        return isExit;\r\n      }\r\n    \r\n    });\r\n  }\r\n else{\r\n  isExit=true;\r\n  return new Promise((resolve, reject) => {\r\n    if (isExit === true) {\r\n      isExit=true;\r\n      this.cdr.markForCheck();\r\n      resolve(true);\r\n    }\r\n  \r\n  })\r\n}\r\n    }\r\n \r\n    onClickOfReopen(addForm, updateForm){\r\n      this.extCodeValue =  updateForm.extSysCode;\r\n      this.extNameValue =  updateForm.extSysCode;\r\n      this.proCodeValue =  updateForm.processName;\r\n      this.currencyValue = updateForm.currency;\r\n       this.currentUser = this.dataFromresponse.inputBy;\r\n       Swal.fire(\r\n        {\r\n          //text: 'Unable to process' + 'Error ' + this.responseforfileupload.errorMessage + 'Do you want to Proceed??',\r\n          text: 'You are trying to re-open record. ' + ' Do you want to proceed?',\r\n          showCancelButton: true,\r\n          confirmButtonColor: '#3085d6',\r\n          cancelButtonColor: '#d33',\r\n          // confirmButtonText: 'PROCEED.'\r\n          cancelButtonText: 'NO',\r\n          confirmButtonText: 'YES', 'icon': 'info'\r\n        }\r\n      ).then((result => {\r\n        console.log(\"this is reopen \", result);\r\n        if (result.isConfirmed === true) {\r\n      // this.apiService.onClcikOfReopenOfUpdateExcelMapping(addForm,this.extCodeValue,this.proCodeValue,this.extNameValue,this.currencyValue)\r\n      this.apiService.excelMappingAuditLog(this.dataFromresponse,'reopen').subscribe(openResp => {\r\n        console.log(openResp);\r\n        this.dataFromresponse = openResp;\r\n        if (this.dataFromresponse) {\r\n          this.authStatus = this.dataFromresponse?.authStatus;\r\n          this.recordStatus = this.dataFromresponse?.recordStatus;\r\n          this.modifiedBy = this.dataFromresponse?.inputBy;\r\n          this.modifiedTime = this.dataFromresponse?.inputDtStamp;\r\n          this.authorizedBy = this.dataFromresponse?.authorizedBy;\r\n          this.authorizedTime = this.dataFromresponse?.authorizedTime;\r\n          this.version = this.dataFromresponse?.version;\r\n          \r\n          if (this.authStatus === 'U') {\r\n            this.authStatus = 'UNAUTHORIZED';\r\n          }\r\n          if (this.authStatus === 'A') {\r\n            this.authStatus = 'AUTHORIZED';\r\n          }\r\n          if (this.recordStatus === 'C') {\r\n            this.recordStatus = 'CLOSED';\r\n          }\r\n          if (this.recordStatus === 'O') {\r\n            this.recordStatus = 'OPEN';\r\n          }\r\n          Swal.fire({\r\n            title: 'Record is Reopened',\r\n            icon: 'success'\r\n          });\r\n          this.auditLog();\r\n        }\r\n        else {\r\n          Swal.fire({\r\n            title: 'Failed to Reopen the Record!',\r\n            icon: 'error'\r\n          });\r\n        }\r\n      },\r\n        error => {\r\n          if (HttpErrorResponse) {\r\n            Swal.fire({\r\n              text: 'Server Error!',\r\n              icon: 'error'\r\n            });\r\n          }\r\n        });\r\n      }}));\r\n  \r\n    }\r\n    onClickOfDelete(addForm , updateform){\r\n      console.log(this.dataFromresponse);\r\n      Swal.fire(\r\n        {\r\n          //text: 'Unable to process' + 'Error ' + this.responseforfileupload.errorMessage + 'Do you want to Proceed??',\r\n          text: 'You are trying to delete record. ' + ' Do you want to proceed?',\r\n          showCancelButton: true,\r\n          confirmButtonColor: '#3085d6',\r\n          cancelButtonColor: '#d33',\r\n          // confirmButtonText: 'PROCEED.'\r\n          cancelButtonText: 'NO',\r\n          confirmButtonText: 'YES', 'icon': 'info'\r\n        }\r\n      ).then((result => {\r\n        if(result.isConfirmed=== true){\r\n          this.apiService.deleteTemplateMapping(this.dataFromresponse.extSys,this.dataFromresponse.processName,this.dataFromresponse.currency,this.dataFromresponse.sheetNumber).subscribe(deleteRsp=>{\r\n            // console.log(deleteRsp);\r\n            if(deleteRsp == true){\r\n              // Swal.fire({\r\n              //   title: 'Record is Closed',\r\n              //   icon: 'success'\r\n              // });\r\n              // this.router.navigate(['/excel-mapping']);\r\n              console.log(this.excelMappingForm.touched);\r\n              console.log(this.formTouched==true);\r\n                            \r\n              Swal.fire(\r\n                { \r\n               text:\"Role is Deleted\",\r\n               icon:'success'\r\n             }\r\n                 \r\n               ).then((result=>{\r\n                this.router.navigate(['/excel-mapping'])}))\r\n             \r\n            }\r\n            else{\r\n              Swal.fire({\r\n                title: 'Failed to Delete the Recored!',\r\n                icon: 'error'\r\n              });\r\n  \r\n            }\r\n            \r\n          })\r\n  \r\n        }}))\r\n  \r\n\r\n      \r\n\r\n    }\r\n    onClickOfClose(addForm, updateForm){\r\n      // console.log(addForm);\r\n      // console.log(updateForm);\r\n      // this.extCodeValue =  updateForm.extSysCode;\r\n      // this.extNameValue =  updateForm.extSysCode;\r\n      // this.proCodeValue =  updateForm.processName;\r\n      // this.currencyValue = updateForm.currency;\r\n      //  this.currentUser = this.newDataResponse.inputBy;\r\n      //  console.log(this.extCodeValue);\r\n      //  console.log(this.extNameValue);\r\n      //  console.log(this.proCodeValue);\r\n      //  console.log(this.currencyValue);\r\n      //  console.log(this.currentUser);\r\n       console.log(this.dataFromresponse);\r\n         Swal.fire(\r\n        {\r\n          text: 'You are trying to Close the record. ' + ' Do you want to proceed?',\r\n          showCancelButton: true,\r\n          confirmButtonColor: '#E6224A',\r\n          cancelButtonColor: '#011945',\r\n          // confirmButtonText: 'PROCEED.'\r\n          cancelButtonText: 'NO',\r\n          confirmButtonText: 'YES',\r\n          icon:'info'\r\n        }\r\n      ).then((result => {\r\n        if(result.isConfirmed=== true){\r\n      // this.apiService.onClcikOFCloseOfUpdateExcelMApping(addForm,this.extCodeValue,this.proCodeValue,this.extNameValue,this.currencyValue)\r\n      this.apiService.excelMappingAuditLog(this.dataFromresponse,'close').subscribe(closeResp => {\r\n        \r\n        console.log(closeResp);\r\n        this.dataFromresponse = closeResp;\r\n        if (this.dataFromresponse) {\r\n          this.authStatus = this.dataFromresponse?.authStatus;\r\n          this.recordStatus = this.dataFromresponse?.recordStatus;\r\n          this.modifiedBy = this.dataFromresponse?.inputBy;\r\n          this.modifiedTime = this.dataFromresponse?.inputDtStamp;\r\n          this.authorizedBy = this.dataFromresponse?.authorizedBy;\r\n          this.authorizedTime = this.dataFromresponse?.authorizedTime;\r\n          this.version = this.dataFromresponse?.version;\r\n          \r\n          if (this.authStatus === 'U') {\r\n            this.authStatus = 'UNAUTHORIZED';\r\n          }\r\n          if (this.authStatus === 'A') {\r\n            this.authStatus = 'AUTHORIZED';\r\n          }\r\n          if (this.recordStatus === 'C') {\r\n            this.recordStatus = 'CLOSED';\r\n          }\r\n          if (this.recordStatus === 'O') {\r\n            this.recordStatus = 'OPEN';\r\n          }\r\n          Swal.fire({\r\n            title: 'Record is Closed',\r\n            icon: 'success'\r\n          });\r\n          this.auditLog();\r\n        }\r\n        else {\r\n          Swal.fire({\r\n            title: 'Failed to Close the Recored!',\r\n            icon: 'error'\r\n          });\r\n        }\r\n      },\r\n        error => {\r\n          if (HttpErrorResponse) {\r\n            Swal.fire({\r\n              text: 'Server Error!',\r\n              icon: 'error'\r\n            });\r\n          }\r\n        });\r\n      }}));\r\n    }\r\n  updateMappingData(subArrayForm,excelForm) {\r\n    this.submitted = true;\r\n    this.progress = true;\r\n    // this.extCodeValue =  excelForm.extSysCode;\r\n    // this.proCodeValue =  excelForm.processName;\r\n    // this.isCheckedValue =  excelForm.headerRepeated;\r\n    // this.startingValue = excelForm.startingRow;\r\n    // this.currencyValue = excelForm.currency;\r\n    // this.sheetNumberValue = excelForm.sheetNumber;\r\n    let modifiedBy = subArrayForm.excelMappingDetails[0].modifiedBy;\r\n    modifiedBy = this.currentUser;\r\n    subArrayForm.excelMappingDetails[0].excelMappingColumn = subArrayForm.excelMappingDetails[0].mappingColumn;\r\n     var obj = {\r\n\r\n      ...excelForm,\r\n\r\n      ...subArrayForm,\r\n\r\n    }\r\n    if (this.addForm.invalid) {\r\n      Swal.fire({\r\n        text: 'Numeric values not allowed in mapping column!',\r\n        icon : 'warning'\r\n      });\r\n      return;\r\n    }\r\n    // this.apiService.updateMappingData(subArrayForm,this.extCodeValue,this.proCodeValue,this.extCodeValue,\r\n    //   this.startingValue,this.isCheckedValue,this.currentUser,this.currencyValue,this.sheetNumberValue)\r\n    this.apiService.createTemplateMap(obj)\r\n    .subscribe(\r\n        updateData => {\r\n          this.dataFromresponse = updateData;\r\n          console.log(this.dataFromresponse);\r\n          if (this.dataFromresponse) {\r\n            this.editFlag = false;\r\n            // this.showCurrencyDropdown = false;\r\n            this.dataSaved = true;\r\n            // this.auditLog();\r\n            Swal.fire({\r\n              text: 'Record is Updated!',\r\n              icon : 'success'\r\n            }\r\n           \r\n            );\r\n            this.formTouched=!this.excelMappingForm.touched;\r\n            this.cdr.markForCheck();\r\n          } else {\r\n            Swal.fire({\r\n              text: 'Failed to update ',\r\n              icon : 'error'\r\n            });\r\n          }\r\n        }\r\n      );\r\n  }\r\n  onClickOfAuth(addForm, updateForm){\r\n    this.currentUser = localStorage.getItem(\"userFromLogin\");\r\n    console.log(\"this.currentUser\",this.currentUser,addForm,updateForm );\r\n    this.extCodeValue =  updateForm.extSysCode;\r\n    this.extNameValue =  updateForm.extSysCode;\r\n    this.proCodeValue =  updateForm.processName;\r\n    this.currencyValue = updateForm.currency;\r\n    this.modifiedBy = this.dataFromresponse[0]?.modifiedBy;\r\n    if (this.modifiedBy === this.currentUser) {\r\n      Swal.fire({\r\n        title: 'Maker Cannot Authorized the Record!',\r\n        icon: 'error'\r\n      });\r\n    } \r\n    // else {\r\n    //   Swal.fire(\r\n    //     {\r\n    //       text: 'You are trying to Authorize the record. ' + ' Do you want to proceed?',\r\n    //       showCancelButton: true,\r\n    //       confirmButtonColor: '#E6224A',\r\n    //       cancelButtonColor: '#011945',\r\n    //       cancelButtonText: 'NO',\r\n    //       confirmButtonText: 'YES',\r\n    //       icon:'info'\r\n    //     }\r\n    //   ).then((result => {\r\n    //     if(result.isConfirmed=== true){\r\n    //   this.apiService.onAuthorizingTheRecordOfExcelMApping(addForm,this.extNameValue,this.proCodeValue,this.extCodeValue, this.currentUser,this.currencyValue)\r\n    //   .subscribe(authResp => {\r\n    //     this.dataFromresponse = authResp;\r\n    //     if(this.dataFromresponse){\r\n    //       this.authStatus = this.dataFromresponse?.authStatus;\r\n    //       this.recordStatus = this.dataFromresponse?.recordStatus;\r\n    //       this.modifiedBy = this.dataFromresponse?.modifiedBy;\r\n    //       this.modifiedTime = this.dataFromresponse?.modifiedTime;\r\n    //       this.authorizedBy = this.dataFromresponse?.authorizedBy;\r\n    //       this.authorizedTime = this.dataFromresponse?.authorizedTime;\r\n    //       this.version = this.dataFromresponse?.version;\r\n    //       this.modifiedBy = this.dataFromresponse?.inputBy;\r\n          \r\n    //       if (this.authStatus === 'U') {\r\n    //         this.authStatus = 'UNAUTHORIZED';\r\n    //       }\r\n    //       if (this.authStatus === 'A') {\r\n    //         this.authStatus = 'AUTHORIZED';\r\n    //       }\r\n    //       if (this.recordStatus === 'C') {\r\n    //         this.recordStatus = 'CLOSED';\r\n    //       }\r\n    //       if (this.recordStatus === 'O') {\r\n    //         this.recordStatus = 'OPEN';\r\n    //       }\r\n    //       Swal.fire({\r\n    //         title: 'Record is Authorized',\r\n    //         icon: 'success'\r\n    //       });\r\n\r\n    //     }\r\n    //   })\r\n    // }}));\r\n    // }\r\n\r\n  }\r\n  letterOnly(event) {\r\n    var charCode = event.keyCode;\r\n    if ((charCode > 64 && charCode < 91) || (charCode > 96 && charCode < 123) || charCode == 8)\r\n      return true;\r\n    else\r\n      return false;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { CanDeactivateGuard } from 'src/app/shared/guards/can-deactivate.guard';\r\nimport { ExcelMappingEditComponent } from './excel-mapping-edit/excel-mapping-edit.component';\r\nimport { ExcelMappingNewComponent } from './excel-mapping-new/excel-mapping-new.component';\r\nimport { ExcelMappingComponent } from './excel-mapping/excel-mapping.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path:\"\",\r\n    component:ExcelMappingComponent\r\n  }, {\r\n    path:\"excel-mapping-new\",\r\n    component:ExcelMappingNewComponent,\r\n    canDeactivate: [CanDeactivateGuard]\r\n  },\r\n  {\r\n    path:\"excel-mapping-edit\",\r\n    component:ExcelMappingEditComponent,\r\n    canDeactivate: [CanDeactivateGuard]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ExcelMappingRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { ExcelMappingRoutingModule } from './excel-mapping-routing.module';\r\nimport { ExcelMappingComponent } from './excel-mapping/excel-mapping.component';\r\nimport { DataTablesModule } from 'angular-datatables';\r\nimport { ExcelMappingNewComponent } from './excel-mapping-new/excel-mapping-new.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { ExcelMappingEditComponent } from './excel-mapping-edit/excel-mapping-edit.component';\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ExcelMappingComponent,\r\n    ExcelMappingNewComponent,\r\n    ExcelMappingEditComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    ExcelMappingRoutingModule,\r\n    DataTablesModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    NgSelectModule\r\n  ]\r\n})\r\nexport class ExcelMappingModule { }\r\n","<div class=\"pageContentMain\">\r\n    <div class=\"pageTitleCol\">\r\n      <h2 class=\"pageTitle\">Template Mapping Summary</h2>\r\n    </div>\r\n    <div class=\"dbCardStyle\">\r\n      <div class=\"row g-3 pb-3 justify-content-end\">\r\n        <div class=\"col-auto\"  *ngIf=\"roleCodes.new\">\r\n           \r\n          <a [routerLink]=\"[ '/excel-mapping/excel-mapping-new' ]\" class=\"btn smBtn minWdSmBtn btnPrimary\">{{roleCodes.new.labelDescription}}</a>\r\n        </div>\r\n        <div class=\"col-auto\">\r\n          <a  [routerLink]=\"['/dashboard']\" class=\"btn smBtn minWdSmBtn btnSecondary\">Exit</a>\r\n        </div>\r\n      </div>\r\n      <div class=\"table-responsive\">\r\n      <table id=\"dbTable1\" datatable [dtOptions]=\"dtOptions\" [dtTrigger]=\"dtTrigger\" class=\"dataTable table tableStyle nowrap vAlignMdl \" style=\"width:100%\">\r\n        <thead>\r\n          <tr> \r\n            <th>Process Code</th>\r\n            <th>External System Code</th>\r\n            <th>External system name</th>\r\n            <th>Currency</th>\r\n            <th>Sheet Number</th>\r\n            <th>Auth status</th>\r\n            <th>Record status</th>\r\n            <th>Date</th>\r\n            <th>Action</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr *ngFor=\"let exdata of excelData \">\r\n            <!-- <td>{{exdata.processName}}</td> -->\r\n            <td><a class=\"primaryColor\" style=\"cursor: pointer;\" (click)=\"setDataFromSummaryToUpdateExcelMapping(exdata)\">{{exdata.processName}}</a></td>\r\n            <td>{{exdata.extSysCode}}</td>\r\n            <td>{{exdata.extSys}}</td>\r\n            <td>{{exdata.currency}}</td>\r\n            <td>{{exdata.sheetNumber}}</td>\r\n            <!-- <td>{{exdata.inputBy}}</td> -->\r\n            <td>{{exdata.authStatus}}</td>\r\n            <td>{{exdata.recordStatus}}</td>\r\n            <td>{{exdata.inputDtStamp | date: 'medium'}}</td>\r\n            <td>\r\n              <button class=\"btn\" style=\"color: red\" title=\"Authorize\" [disabled]=\"!(exdata.authStatus== 'U' || exdata.authStatus== 'UNAUTHORIZED'||exdata.authStatus == 'Unauthorized')\" (click)=\"auth(exdata)\">\r\n                \r\n                <img class=\"summaryIcon\" src=\"assets/images/authorize.svg\" alt=\"Authorize\">\r\n              </button>\r\n              \r\n              <button   class=\"btn\" style=\"color: red\" title=\"Close\"\r\n              *ngIf=\"(exdata.recordStatus == 'O' || exdata.recordStatus == 'Open' || exdata.recordStatus == 'OPEN') \" (click)=\"close(exdata)\">\r\n                \r\n                <img class=\"summaryIcon\" src=\"assets/images/CROSS1.svg\"   alt=\"...\">\r\n              </button>\r\n              <button class=\"btn\" style=\"color: red\" title=\"Reopen\" *ngIf=\"(exdata.recordStatus == 'C'||exdata.recordStatus == 'CLOSED'||exdata.recordStatus == 'Close')\" (click)=\"open(exdata)\">\r\n                 \r\n                <img class=\"summaryIcon\" src=\"assets/images/open.svg\"  alt=\"...\">\r\n              </button>\r\n              <button class=\"btn\" style=\"color: red\" title=\"Delete\" *ngIf=\"exdata.firstTimeAuth == 'N' || exdata.firstTimeAuth == 'NO'\" (click)=\"delete(exdata)\">\r\n                 \r\n                <img class=\"summaryIcon\" src=\"assets/images/delete.svg\" alt=\"...\">\r\n              </button>\r\n             \r\n              \r\n            \r\n              \r\n            </td>\r\n          </tr>\r\n \r\n        </tbody>\r\n      </table>\r\n    </div>\r\n    \r\n\r\n      <ng-container *ngIf=\"isLoading\">\r\n        <div class=\"loading-page-center\">\r\n          <span class=\"indicator-progress\">Please wait...\r\n            <span class=\"spinner-border spinner-border-sm align-middle ms-2\"></span></span>\r\n        </div>\r\n      </ng-container>\r\n    </div>\r\n  </div>","import { HttpErrorResponse } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Subject } from 'rxjs';\r\nimport { permissionsLabels } from 'src/app/shared/models/fmosNewRolePermissions';\r\nimport { ApiService } from 'src/app/shared/services/api.service';\r\nimport { RoleService } from 'src/app/shared/services/role.service';\r\nimport { ToastService } from 'src/app/shared/services/toast.service';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'npr-excel-mapping',\r\n  templateUrl: './excel-mapping.component.html',\r\n  styleUrls: ['./excel-mapping.component.scss'],\r\n})\r\nexport class ExcelMappingComponent implements OnInit {\r\n  excelData: any;\r\n  dtOptions: DataTables.Settings = {};\r\n  dtTrigger: Subject<any> = new Subject<any>();\r\n  isLoading: boolean = false;\r\n  roleCodes = new permissionsLabels();\r\n  statusArr: String[] = ['Authorized', 'Unauthorized', 'Open', 'Close'];\r\n  excelMappingSummary: any;\r\n  extName: any;\r\n  currentUser: string;\r\n  extCodeValue: any;\r\n  extNameValue: any;\r\n  proCodeValue: any;\r\n  currencyValue: any;\r\n  authStatus: any;\r\n  recordStatus: any;\r\n  modifiedBy: any;\r\n  modifiedTime: any;\r\n  authorizedBy: any;\r\n  authorizedTime: any;\r\n  version: any;\r\n  mappingResponse: Object;\r\n  sheetNo: any;\r\n  firstTimeAuth: any;\r\n  newDataResponse: any;\r\n  \r\n\r\n  constructor(\r\n    private apiService: ApiService,\r\n    private roleService: RoleService,\r\n    private toastService: ToastService,\r\n    private router: Router\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.dtOptions = {\r\n      pagingType: 'full_numbers',\r\n      pageLength: 5,\r\n      columnDefs: [{ type: 'date', targets: [7] }],\r\n      order: [[7, 'desc']],\r\n      processing: true,\r\n      lengthMenu: [\r\n        [5, 10, 20, 30,-1],\r\n        [5, 10, 20, 30,\"ALL\"],\r\n      ],\r\n    };\r\n    this.currentUser = localStorage.getItem(\"userFromLogin\");\r\n    this.getexcelMappingSummary();\r\n    this.roleService.fetchScreenPermissions('Template Mapping');\r\n    this.roleService.screenLabelList.subscribe(\r\n      (message) => (this.roleCodes = message)\r\n    );\r\n    console.log(this.roleCodes);\r\n  }\r\n  auditLog() {\r\n    if (this.excelMappingSummary.authStatus =='U' || this.excelMappingSummary.authStatus =='Unauthorized') {\r\n      this.excelMappingSummary.authStatus = 'UNAUTHORIZED'\r\n    }\r\n    if (this.excelMappingSummary.authStatus == 'A' || this.excelMappingSummary.authStatus =='Authorized' ) {\r\n      this.excelMappingSummary.authStatus = 'AUTHORIZED'\r\n    }\r\n    if (this.excelMappingSummary.recordStatus == 'O') {\r\n      this.excelMappingSummary.recordStatus = 'OPEN'\r\n    }\r\n    if (this.excelMappingSummary.recordStatus == 'C') {\r\n      this.excelMappingSummary.recordStatus = 'CLOSED'\r\n    }\r\n    if (this.excelMappingSummary.verifiedOnce == 'N') {\r\n      console.log(\"NO\");\r\n      this.excelMappingSummary.verifiedOnce = 'NO'\r\n    }\r\n    if (this.excelMappingSummary.verifiedOnce == 'Y') {\r\n      this.excelMappingSummary.verifiedOnce = 'YES'\r\n    }\r\n  }\r\n  getexcelMappingSummary() {\r\n    this.isLoading = true;\r\n    this.apiService.getMappingSummary().subscribe((data) => {\r\n      console.log(data);\r\n      \r\n      this.mappingResponse = data;\r\n      for (let exdata of data.result) {\r\n        exdata.authStatus = this.statusArr.find((i) =>\r\n          i.startsWith(exdata.authStatus)\r\n        );\r\n\r\n        exdata.recordStatus = this.statusArr.find((i) =>\r\n          i.startsWith(exdata.recordStatus)\r\n        );\r\n      }\r\n     \r\n      this.excelData = data.result;\r\n      console.log(this.excelData);\r\n      this.isLoading = false;\r\n\r\n      this.dtTrigger.next();\r\n    });\r\n  }\r\n  close(exdata){\r\n\r\n   console.log(exdata)\r\n   \r\n \r\n  Swal.fire(\r\n      {\r\n        //text: 'Unable to process' + 'Error ' + this.responseforfileupload.errorMessage + 'Do you want to Proceed??',\r\n        text: 'You are trying to Close the record. ' + ' Do you want to proceed?',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        // confirmButtonText: 'PROCEED.'\r\n        cancelButtonText: 'NO',\r\n        confirmButtonText: 'YES', 'icon': 'info'\r\n      }\r\n    ).then((result => {\r\n      if(result.isConfirmed=== true){\r\n    // this.apiService.onClcikOFCloseOfUpdateExcelMApping(addForm,this.extCodeValue,this.proCodeValue,this.extNameValue,this.currencyValue)\r\n    this.apiService.excelMappingAuditLog(exdata,'close').subscribe(closeResp => {\r\n      \r\n      console.log(closeResp);\r\n      this.newDataResponse = closeResp;\r\n      if (this.newDataResponse) {\r\n        this.authStatus = this.newDataResponse?.authStatus;\r\n        this.recordStatus = this.newDataResponse?.recordStatus;\r\n        this.modifiedBy = this.newDataResponse?.inputBy;\r\n        this.modifiedTime = this.newDataResponse?.inputDtStamp;\r\n        this.authorizedBy = this.newDataResponse?.authorizedBy;\r\n        this.authorizedTime = this.newDataResponse?.authorizedTime;\r\n        this.version = this.newDataResponse?.version;\r\n        \r\n        if (this.authStatus === 'U') {\r\n          this.authStatus = 'UNAUTHORIZED';\r\n        }\r\n        if (this.authStatus === 'A') {\r\n          this.authStatus = 'AUTHORIZED';\r\n        }\r\n        if (this.recordStatus === 'C') {\r\n          this.recordStatus = 'CLOSED';\r\n        }\r\n        if (this.recordStatus === 'O') {\r\n          this.recordStatus = 'OPEN';\r\n        }\r\n        Swal.fire({\r\n          title: 'Record is  Closed',\r\n          icon: 'success'\r\n        }).then(() => window.location.reload());\r\n        // this.getexcelMappingSummary();\r\n        this.auditLog();\r\n      }\r\n      else {\r\n        Swal.fire({\r\n          title: 'Failed to Close the Recored!',\r\n          icon: 'error'\r\n        });\r\n      }\r\n    },\r\n      error => {\r\n        if (HttpErrorResponse) {\r\n          Swal.fire({\r\n            text: 'Server Error!',\r\n            icon: 'error'\r\n          });\r\n        }\r\n      });\r\n    }}));\r\n     \r\n     \r\n          \r\n      \r\n  }\r\n \r\n  open(exdata){\r\n    Swal.fire(\r\n      {\r\n        //text: 'Unable to process' + 'Error ' + this.responseforfileupload.errorMessage + 'Do you want to Proceed??',\r\n        text: 'You are trying to re-open record. ' + ' Do you want to proceed?',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        // confirmButtonText: 'PROCEED.'\r\n        cancelButtonText: 'NO',\r\n        confirmButtonText: 'YES', 'icon': 'info'\r\n      }\r\n    ).then((result => {\r\n      console.log(\"this is reopen \", result);\r\n      if (result.isConfirmed === true) {\r\n    // this.apiService.onClcikOfReopenOfUpdateExcelMapping(addForm,this.extCodeValue,this.proCodeValue,this.extNameValue,this.currencyValue)\r\n    this.apiService.excelMappingAuditLog(exdata,'reopen').subscribe(openResp => {\r\n      console.log(openResp);\r\n      this.newDataResponse = openResp;\r\n      if (this.newDataResponse) {\r\n        this.authStatus = this.newDataResponse?.authStatus;\r\n        this.recordStatus = this.newDataResponse?.recordStatus;\r\n        this.modifiedBy = this.newDataResponse?.inputBy;\r\n        this.modifiedTime = this.newDataResponse?.inputDtStamp;\r\n        this.authorizedBy = this.newDataResponse?.authorizedBy;\r\n        this.authorizedTime = this.newDataResponse?.authorizedTime;\r\n        this.version = this.newDataResponse?.version;\r\n        \r\n        if (this.authStatus === 'U') {\r\n          this.authStatus = 'UNAUTHORIZED';\r\n        }\r\n        if (this.authStatus === 'A') {\r\n          this.authStatus = 'AUTHORIZED';\r\n        }\r\n        if (this.recordStatus === 'C') {\r\n          this.recordStatus = 'CLOSED';\r\n        }\r\n        if (this.recordStatus === 'O') {\r\n          this.recordStatus = 'OPEN';\r\n        }\r\n        Swal.fire({\r\n          title: 'Record is Reopened',\r\n          icon: 'success'\r\n        }).then(() => window.location.reload());\r\n        this.auditLog();\r\n      }\r\n      else {\r\n        Swal.fire({\r\n          title: 'Failed to Reopen the Record!',\r\n          icon: 'error'\r\n        });\r\n      }\r\n    },\r\n      error => {\r\n        if (HttpErrorResponse) {\r\n          Swal.fire({\r\n            text: 'Server Error!',\r\n            icon: 'error'\r\n          });\r\n        }\r\n      });\r\n    }}));\r\n\r\n  }\r\n delete(exdata){\r\n  console.log(exdata);\r\n\r\n\r\n  }\r\n  auth(exdata){\r\n    console.log(exdata);\r\n    this.currentUser = localStorage.getItem(\"userFromLogin\");\r\n    if (this.modifiedBy === this.currentUser) {\r\n      Swal.fire({\r\n        title: 'Maker Cannot Authorized the Record!',\r\n        icon: 'error'\r\n      });\r\n    } else {\r\n      Swal.fire(\r\n        {\r\n          text: 'You are trying to Authorize the record. ' + ' Do you want to proceed?',\r\n          showCancelButton: true,\r\n          confirmButtonColor: '#E6224A',\r\n          cancelButtonColor: '#011945',\r\n          // confirmButtonText: 'PROCEED.'\r\n          cancelButtonText: 'NO',\r\n          confirmButtonText: 'YES',\r\n          icon:'info'\r\n        }\r\n      ).then((result => {\r\n        if(result.isConfirmed=== true){\r\n      // this.apiService.onAuthorizingTheRecordOfExcelMApping(addForm,this.extNameValue,this.proCodeValue,this.extCodeValue, this.currentUser,this.currencyValue)\r\n      this.apiService.excelMappingAuditLog(exdata,'authorize')\r\n\r\n      .subscribe(authResp => {\r\n        this.newDataResponse = authResp;\r\n        if(this.newDataResponse){\r\n          this.authStatus = this.newDataResponse?.authStatus;\r\n          this.recordStatus = this.newDataResponse?.recordStatus;\r\n          // this.modifiedBy = this.mappingResponse?.modifiedBy;\r\n          this.modifiedTime = this.newDataResponse?.inputDtStamp;\r\n          this.authorizedBy = this.newDataResponse?.authorizedBy;\r\n          this.authorizedTime = this.newDataResponse?.authorizedDtStamp;\r\n          this.version = this.newDataResponse?.version;\r\n          this.firstTimeAuth=this.newDataResponse?.firstTimeAuth;\r\n          this.modifiedBy = this.newDataResponse?.inputBy;\r\n          \r\n          if (this.authStatus === 'U') {\r\n            this.authStatus = 'UNAUTHORIZED';\r\n          }\r\n          if (this.authStatus === 'A') {\r\n            this.authStatus = 'AUTHORIZED';\r\n          }\r\n          if (this.recordStatus === 'C') {\r\n            this.recordStatus = 'CLOSED';\r\n          }\r\n          if (this.recordStatus === 'O') {\r\n            this.recordStatus = 'OPEN';\r\n          }\r\n          if (this.firstTimeAuth === 'Y') {\r\n            this.firstTimeAuth = 'YES';\r\n          }\r\n          if (this.firstTimeAuth === 'N') {\r\n            this.firstTimeAuth = 'NO';\r\n          }\r\n          Swal.fire({\r\n            title: 'Record is Authorized',\r\n            icon: 'success'\r\n          }).then(() => window.location.reload());\r\n\r\n        }\r\n      })\r\n    }}));\r\n    }\r\n\r\n  }\r\n\r\n  setDataFromSummaryToUpdateExcelMapping(element) {\r\n    \r\n    localStorage.setItem('summryResponse', JSON.stringify(element));\r\n    this.apiService.setexcelSummaryData({\r\n      extSysCode: element.extSysCode,\r\n      extSys: element.extSys,\r\n      processName: element.processName,\r\n      authStatus: element.authStatus,\r\n      currency:element.currency,\r\n      sheetNumber:element.sheetNumber\r\n    });\r\n    \r\n    this.router.navigate(['/excel-mapping/excel-mapping-edit']);\r\n  }\r\n}\r\nfunction addForm(addForm: any, extCodeValue: any, proCodeValue: any, extNameValue: any, currencyValue: any) {\r\n  throw new Error('Function not implemented.');\r\n}\r\n\r\n"]}