{"version":3,"mappings":"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","names":["DataTableDirective","el","vcr","renderer","dtOptions","prototype","ngOnInit","_this","dtTrigger","subscribe","options","displayTable","ngOnDestroy","unsubscribe","dt","destroy","dtInstance","Promise","resolve","reject","then","resolvedDTOptions","isTableEmpty","Object","keys","length","$","nativeElement","setTimeout","rowCallback","row","data","index","columns","applyNgPipeTransform","applyNgRefTemplate","assign","DataTable","colsWithPipe","filter","x","ngPipeInstance","ngTemplateRef","forEach","pipe","i","findIndex","e","rowFromCol","childNodes","item","rowVal","text","rowValAfter","transform","colsWithTemplate","_a","ref","context","cellFromIndex","html","_context","userData","adtData","instance","createEmbeddedView","appendChild","rootNodes","ɵfac","i0","ɵdir","type","selectors","inputs","Directive","args","selector","Input","DataTablesModule","forRoot","ngModule","ɵmod","ɵinj","imports","CommonModule","NgModule","declarations","exports","routes","path","component","_process_monitoring_component__WEBPACK_IMPORTED_MODULE_0__","ProcessMonitoringRoutingModule","_angular_router__WEBPACK_IMPORTED_MODULE_2__","_angular_core__WEBPACK_IMPORTED_MODULE_2__","ProcessMonitoringComponent","apiService","cdr","rxjs__WEBPACK_IMPORTED_MODULE_3__","pagingType","pageLength","columnDefs","order","processing","lengthMenu","getDataForMonitor","isLoading","getMonitorData","dataresp","console","log","respArray","result","markForCheck","next","decls","vars","consts","template","ctx","ProcessMonitoringModule","_angular_common__WEBPACK_IMPORTED_MODULE_4__","_process_monitoring_routing_module__WEBPACK_IMPORTED_MODULE_0__","angular_datatables__WEBPACK_IMPORTED_MODULE_2__","_process_monitoring_component__WEBPACK_IMPORTED_MODULE_1__"],"sources":["webpack:///node_modules/angular-datatables/index.js","webpack:///node_modules/angular-datatables/src/angular-datatables.directive.js","webpack:///node_modules/angular-datatables/src/angular-datatables.module.js","webpack:///src/app/views/process-monitoring/process-monitoring-routing.module.ts","webpack:///src/app/views/process-monitoring/process-monitoring.component.html","webpack:///src/app/views/process-monitoring/process-monitoring.component.ts","webpack:///src/app/views/process-monitoring/process-monitoring.module.ts"],"sourcesContent":["/**\n * @license\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://raw.githubusercontent.com/l-lin/angular-datatables/master/LICENSE\n */\n/**\n * @module\n * @description\n * Entry point from which you should import all public library APIs.\n */\nexport { DataTableDirective } from './src/angular-datatables.directive';\nexport { DataTablesModule } from './src/angular-datatables.module';\n","/**\n * @license\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://raw.githubusercontent.com/l-lin/angular-datatables/master/LICENSE\n */\nimport { Directive, ElementRef, Input, Renderer2, ViewContainerRef } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nvar DataTableDirective = /** @class */ (function () {\n    function DataTableDirective(el, vcr, renderer) {\n        this.el = el;\n        this.vcr = vcr;\n        this.renderer = renderer;\n        /**\n         * The DataTable option you pass to configure your table.\n         */\n        this.dtOptions = {};\n    }\n    DataTableDirective.prototype.ngOnInit = function () {\n        var _this = this;\n        if (this.dtTrigger) {\n            this.dtTrigger.subscribe(function (options) {\n                _this.displayTable(options);\n            });\n        }\n        else {\n            this.displayTable(null);\n        }\n    };\n    DataTableDirective.prototype.ngOnDestroy = function () {\n        if (this.dtTrigger) {\n            this.dtTrigger.unsubscribe();\n        }\n        if (this.dt) {\n            this.dt.destroy(true);\n        }\n    };\n    DataTableDirective.prototype.displayTable = function (dtOptions) {\n        var _this = this;\n        // assign new options if provided\n        if (dtOptions) {\n            this.dtOptions = dtOptions;\n        }\n        this.dtInstance = new Promise(function (resolve, reject) {\n            Promise.resolve(_this.dtOptions).then(function (resolvedDTOptions) {\n                // validate object\n                var isTableEmpty = Object.keys(resolvedDTOptions).length === 0 && $('tbody tr', _this.el.nativeElement).length === 0;\n                if (isTableEmpty) {\n                    reject('Both the table and dtOptions cannot be empty');\n                    return;\n                }\n                // Using setTimeout as a \"hack\" to be \"part\" of NgZone\n                setTimeout(function () {\n                    // Assign DT properties here\n                    var options = {\n                        rowCallback: function (row, data, index) {\n                            if (resolvedDTOptions.columns) {\n                                var columns = resolvedDTOptions.columns;\n                                _this.applyNgPipeTransform(row, columns);\n                                _this.applyNgRefTemplate(row, columns, data);\n                            }\n                            // run user specified row callback if provided.\n                            if (resolvedDTOptions.rowCallback) {\n                                resolvedDTOptions.rowCallback(row, data, index);\n                            }\n                        }\n                    };\n                    // merge user's config with ours\n                    options = Object.assign({}, resolvedDTOptions, options);\n                    _this.dt = $(_this.el.nativeElement).DataTable(options);\n                    resolve(_this.dt);\n                });\n            });\n        });\n    };\n    DataTableDirective.prototype.applyNgPipeTransform = function (row, columns) {\n        // Filter columns with pipe declared\n        var colsWithPipe = columns.filter(function (x) { return x.ngPipeInstance && !x.ngTemplateRef; });\n        colsWithPipe.forEach(function (el) {\n            var pipe = el.ngPipeInstance;\n            // find index of column using `data` attr\n            var i = columns.findIndex(function (e) { return e.data === el.data; });\n            // get <td> element which holds data using index\n            var rowFromCol = row.childNodes.item(i);\n            // Transform data with Pipe\n            var rowVal = $(rowFromCol).text();\n            var rowValAfter = pipe.transform(rowVal);\n            // Apply transformed string to <td>\n            $(rowFromCol).text(rowValAfter);\n        });\n    };\n    DataTableDirective.prototype.applyNgRefTemplate = function (row, columns, data) {\n        var _this = this;\n        // Filter columns using `ngTemplateRef`\n        var colsWithTemplate = columns.filter(function (x) { return x.ngTemplateRef && !x.ngPipeInstance; });\n        colsWithTemplate.forEach(function (el) {\n            var _a = el.ngTemplateRef, ref = _a.ref, context = _a.context;\n            // get <td> element which holds data using index\n            var i = columns.findIndex(function (e) { return e.data === el.data; });\n            var cellFromIndex = row.childNodes.item(i);\n            // reset cell before applying transform\n            $(cellFromIndex).html('');\n            // render onto DOM\n            // finalize context to be sent to user\n            var _context = Object.assign({}, context, context === null || context === void 0 ? void 0 : context.userData, {\n                adtData: data\n            });\n            var instance = _this.vcr.createEmbeddedView(ref, _context);\n            _this.renderer.appendChild(cellFromIndex, instance.rootNodes[0]);\n        });\n    };\n    DataTableDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: DataTableDirective, deps: [{ token: i0.ElementRef }, { token: i0.ViewContainerRef }, { token: i0.Renderer2 }], target: i0.ɵɵFactoryTarget.Directive });\n    DataTableDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.1\", type: DataTableDirective, selector: \"[datatable]\", inputs: { dtOptions: \"dtOptions\", dtTrigger: \"dtTrigger\" }, ngImport: i0 });\n    return DataTableDirective;\n}());\nexport { DataTableDirective };\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: DataTableDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[datatable]'\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.ViewContainerRef }, { type: i0.Renderer2 }]; }, propDecorators: { dtOptions: [{\n                type: Input\n            }], dtTrigger: [{\n                type: Input\n            }] } });\n","/**\n * @license\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://raw.githubusercontent.com/l-lin/angular-datatables/master/LICENSE\n */\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DataTableDirective } from './angular-datatables.directive';\nimport * as i0 from \"@angular/core\";\nvar DataTablesModule = /** @class */ (function () {\n    function DataTablesModule() {\n    }\n    DataTablesModule.forRoot = function () {\n        return {\n            ngModule: DataTablesModule\n        };\n    };\n    DataTablesModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: DataTablesModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    DataTablesModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: DataTablesModule, declarations: [DataTableDirective], imports: [CommonModule], exports: [DataTableDirective] });\n    DataTablesModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: DataTablesModule, imports: [[CommonModule]] });\n    return DataTablesModule;\n}());\nexport { DataTablesModule };\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: DataTablesModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule],\n                    declarations: [DataTableDirective],\n                    exports: [DataTableDirective]\n                }]\n        }] });\n","import { Component, NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { ProcessMonitoringComponent } from './process-monitoring.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: ProcessMonitoringComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ProcessMonitoringRoutingModule { }\r\n","<div class=\"pageContentMain\">\r\n    <div class=\"pageTitleCol\">\r\n      <h2 class=\"pageTitle\">Process Monitoring Screen</h2>\r\n    </div>\r\n    <div class=\"dbCardStyle table-responsive\">\r\n      <table datatable [dtOptions]=\"dtOptions\" [dtTrigger]=\"dtTrigger\" class=\"dataTable table tableStyle  nowrap vAlignMdl\" style=\"width:100%\">\r\n   \r\n        <thead>\r\n          <tr>\r\n            <th>Authorizer</th>\r\n            <th>Batch no</th>\r\n            <th>Related Process</th>\r\n            \r\n            <th>Total record</th>\r\n            <th>Success record</th>\r\n            <th>Failed record</th>\r\n            <th>Status</th>\r\n            <th>Date</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr *ngFor=\"let data of respArray \">\r\n            <td >{{data.userId}}</td>\r\n            <td>{{data.batchNo}}</td>\r\n            <td>{{data.relatedProcess}}</td>\r\n            \r\n            <td>{{data.totalNoOfRecord}}</td>\r\n            <td>{{data.success}}</td>\r\n            <td>{{data.failed}}</td>\r\n            <td>{{data.status}}</td>\r\n            <td>{{data.createdDate | date:'medium'}}</td>\r\n           \r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n\r\n      <ng-container *ngIf=\"isLoading\">\r\n        <div class=\"loading-page-center\">\r\n          <span class=\"indicator-progress\">Please wait...\r\n            <span class=\"spinner-border spinner-border-sm align-middle ms-2\"></span></span>\r\n        </div>\r\n      </ng-container>\r\n    </div>\r\n</div>\r\n\r\n","import { ChangeDetectorRef, Component, OnInit } from \"@angular/core\";\r\nimport { Subject } from \"rxjs\";\r\nimport { ApiService } from \"src/app/shared/services/api.service\";\r\n\r\n@Component({\r\n  selector: \"npr-process-monitoring\",\r\n  templateUrl: \"./process-monitoring.component.html\",\r\n  styleUrls: [\"./process-monitoring.component.scss\"],\r\n})\r\nexport class ProcessMonitoringComponent implements OnInit {\r\n  respArray: any[] = [];\r\n  dtOptions: DataTables.Settings = {};\r\n  dtTrigger: Subject<any> = new Subject<any>();\r\n  isLoading:boolean = false;\r\n\r\n  constructor(private apiService: ApiService, private cdr:ChangeDetectorRef) {}\r\n\r\n  ngOnInit(): void {\r\n    this.dtOptions = {\r\n      pagingType: 'full_numbers',\r\n      pageLength : 5,\r\n      columnDefs: [ { type: 'date', 'targets': [7] } ],\r\n      order: [[7, 'desc']],\r\n      processing: true,\r\n      lengthMenu: [[5, 10, 20, -1], [5, 10, 20, 30]],\r\n      // columnDefs: [ { type: 'date', 'targets': [5] } ],\r\n      // order: [[5, 'desc']],\r\n\r\n    };\r\n\r\n    this.getDataForMonitor();\r\n  }\r\n\r\n  getDataForMonitor() {\r\n    this.isLoading = true;\r\n    this.apiService.getMonitorData().subscribe((dataresp) => {\r\n      console.log(dataresp);\r\n      this.respArray = dataresp.result;\r\n      this.isLoading = false;\r\n      this.cdr.markForCheck();\r\n\r\n      this.dtTrigger.next();\r\n    });\r\n  }\r\n\r\n\r\n  ngOnDestroy(): void {\r\n    this.dtTrigger.unsubscribe();\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { ProcessMonitoringRoutingModule } from './process-monitoring-routing.module';\r\nimport { ProcessMonitoringComponent } from './process-monitoring.component';\r\nimport { DataTablesModule } from 'angular-datatables';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ProcessMonitoringComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    ProcessMonitoringRoutingModule,\r\n    DataTablesModule\r\n\r\n  ]\r\n})\r\nexport class ProcessMonitoringModule { }\r\n"]}