{"version":3,"file":"src_app_views_change-password_change-password_module_ts-es2015.js","mappings":"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","sources":["./src/app/views/change-password/change-password-dto.ts","./src/app/views/change-password/change-password-routing.module.ts","./src/app/views/change-password/change-password.component.ts","./src/app/views/change-password/change-password.component.html","./src/app/views/change-password/change-password.module.ts"],"sourcesContent":["export class ChangePasswordDTO {\r\n    userId: string;\r\n    oldPassword: string;\r\n    newPassword: string;\r\n    confirmPassword: string;\r\n    otp: string;\r\n}\r\n\r\nexport class ChangePasswordRespDTO{\r\n    otpButtonStatus: boolean;\r\n    completedProcessStatus: boolean;\r\n    statusMessage: boolean;\r\n}","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { ChangePasswordComponent } from './change-password.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: ChangePasswordComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ChangePasswordRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { SecurityDto } from '../auth/login/login.component';\r\nimport { ChangePasswordDTO, ChangePasswordRespDTO } from './change-password-dto';\r\nimport Swal from 'sweetalert2';\r\nimport { ApiService } from 'src/app/shared/services/api.service';\r\nimport { Router } from '@angular/router';\r\nimport * as CryptoJS from 'crypto-js';\r\nimport { SecurityPolicyService } from 'src/app/shared/services/security-policy.service';\r\n@Component({\r\n  selector: 'npr-change-password',\r\n  templateUrl: './change-password.component.html',\r\n  styleUrls: ['./change-password.component.scss']\r\n})\r\nexport class ChangePasswordComponent implements OnInit {\r\n\r\n  \r\n\r\n  otpEnableFlag: boolean;\r\n  changePassword = new ChangePasswordDTO();\r\n  changePasswordRespDTO: ChangePasswordRespDTO;\r\n  enableLoader = false;\r\n  passwordReset1: any;\r\n  minPass: any;\r\n  maxPass: any;\r\n  ucase: any;\r\n  lcase: any;\r\n  num: any;\r\n  splc: any;\r\n  errorMsg: string;\r\n  passwordRegex: string;\r\n   security: SecurityDto;\r\n  security1: any;\r\n  userObj = new ChangePasswordDTO();\r\n  loggedInUser:any;\r\n  var1: any;\r\n// added by vidya for issue id 776\r\n  hide1=true;\r\n  hide=true;\r\n  hide2=true;\r\n  userForm: FormGroup;\r\n  // userId: string;\r\n  // oldPassword: string;\r\n  // newPassword: string;\r\n  // confirmPassword: string;\r\n  // otp: string;\r\n  submit:boolean=true;\r\n  constructor(private api: ApiService,private fb: FormBuilder,private router: Router,private apiService: SecurityPolicyService,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.loggedInUser = localStorage.getItem('userFromLogin');\r\n    this.otpEnableFlag = false;\r\n    let a, b;\r\n    this.userForm = new FormGroup({\r\n      userId: new FormControl('', Validators.required),\r\n       oldPassword: new FormControl('', Validators.required),\r\n      newPassword: new FormControl('', [Validators.required,\r\n        Validators.compose([Validators.pattern(this.passwordRegex),\r\n        Validators.maxLength(this.maxPass),\r\n        Validators.minLength(this.minPass)])]),\r\n       confirmPassword: new FormControl('', [\r\n        Validators.required,\r\n        Validators.compose([\r\n          Validators.pattern(this.passwordRegex),\r\n          Validators.maxLength(this.maxPass),\r\n          Validators.minLength(this.minPass),\r\n        ]),\r\n      ]),\r\n      otp: new FormControl('', Validators.required),\r\n  \r\n  \r\n    })\r\n    this.apiService.fetchSecurityPolicyService().subscribe(resp => {\r\n      this.security = resp;\r\n      console.log(this.security);\r\n      this.minPass = this.security.minPswdLength;\r\n      this.maxPass = this.security.maxPswdLength;\r\n\r\n      this.buildForm(this.minPass, this.maxPass);\r\n      console.log(this.minPass, this.maxPass);\r\n      console.log(this.security);\r\n    });\r\n    this.buildForm(this.minPass ? this.minPass : a, this.maxPass ? this.maxPass : b);\r\n    \r\n  }\r\n  buildForm(a, b) {\r\n    // ---------- Password Policy Implementation (BEGIN) ----------\r\n    this.apiService.fetchSecurityPolicyService()\r\n      .subscribe(resp => {\r\n        this.security1 = resp;\r\n        this.ucase = this.security1.pswdComplexUcase;\r\n        this.lcase = this.security1.pswdComplexLcase;\r\n        this.num = this.security1.pswdComplexNum;\r\n        this.splc = this.security1.pswdComplexSplc;\r\n        this.errorMsg = '';\r\n        this.passwordRegex='';\r\n \r\n        console.log(\"Upper case\",this.ucase);\r\n        console.log(\"Lower case\",this.lcase);\r\n        console.log(\"num case\",this.num);\r\n        console.log(\"splc case\",this.splc);\r\n\r\n\r\n\r\n        if (this.security1.pswdComplexUcase==\"true\") {\r\n          this.passwordRegex = '(?=[^A-Z]*[A-Z])';\r\n          this.errorMsg = ' UpperCase';\r\n        }\r\n        if (this.security1.pswdComplexLcase==\"true\") {\r\n          this.passwordRegex = this.passwordRegex + '(?=[^a-z]*[a-z])';\r\n          if (this.errorMsg != '') {\r\n            this.errorMsg = this.errorMsg + ', LowerCase';\r\n          }\r\n          else {\r\n            this.errorMsg = this.errorMsg + ' LowerCase';\r\n          }\r\n        }\r\n        // if (this.security1.pswdComplexSplc==\"true\") {\r\n        //   this.passwordRegex = this.passwordRegex + '(?=[^!-@]*[!-@])';\r\n        //   if (this.errorMsg != '') {\r\n        //     this.errorMsg = this.errorMsg + ', Special Character';\r\n        //   }\r\n        //   else {\r\n        //     this.errorMsg = this.errorMsg + ' Special Character';\r\n        //   }\r\n        // }\r\n        if(this.splc==\"true\") {\r\n          this.passwordRegex = this.passwordRegex  + '(?=.*[!@#$%^&*])';\r\n          if(this.errorMsg != '') \r\n            this.errorMsg = this.errorMsg + \", Special Character\";  \r\n          else\r\n            this.errorMsg = this.errorMsg + \" Special Character\";\r\n        }\r\n        \r\n        if (this.security1.pswdComplexNum==\"true\") {\r\n          this.passwordRegex = this.passwordRegex + '(?=[^0-9]*[0-9])';\r\n          if (this.errorMsg != '') {\r\n            this.errorMsg = this.errorMsg + ', Number';\r\n          }\r\n          else {\r\n            this.errorMsg = this.errorMsg + ' Number';\r\n          }\r\n        }\r\n      \r\n\r\n        this.passwordRegex = this.passwordRegex + '.{' + this.minPass + ',' + this.maxPass + '}';\r\n        // this.passwordRegex = \"(?=[^A-Z]*[A-Z])(?=[^a-z]*[a-z])(?=[^!-@]*[!-@]).{10,15}\";\r\n        this.errorMsg = 'Password must contain atleast one ' + this.errorMsg + '.';\r\n        console.log(this.passwordRegex);\r\n        // ---------- Password Policy Implementation (END) ----------\r\n\r\n        this.userForm = this.fb.group({\r\n     \r\n          // password: new FormControl('', [Validators.required, Validators.pattern(this.passwordPattern)]),\r\n          // newPassword: new FormControl('', [Validators.required,\r\n          // Validators.compose([Validators.pattern(this.passwordRegex),\r\n          // Validators.maxLength(this.maxPass),\r\n          // Validators.minLength(this.minPass)])]),\r\n          \r\n          newPassword:new FormControl('', [Validators.required, Validators.compose([Validators.pattern(this.passwordRegex),Validators.maxLength(this.maxPass),\r\n            Validators.minLength(this.minPass)])]),\r\n          \r\n          oldPassword: new FormControl('', Validators.required),\r\n          confirmPassword: new FormControl(\"\", [\r\n            Validators.required,\r\n            Validators.compose([\r\n              Validators.pattern(this.passwordRegex),\r\n              Validators.maxLength(this.maxPass),\r\n              Validators.minLength(this.minPass),\r\n            ]),\r\n          ]),\r\n        });\r\n       \r\n      });\r\n\r\n    console.log(this.minPass, this.maxPass);\r\n    console.log('form', this.userForm);\r\n  }\r\n  onSubmit() {\r\n    this.changePassword.userId = this.loggedInUser;\r\n    this.changePassword.newPassword = this.userForm.get('newPassword').value;\r\n\r\n    this.changePassword.oldPassword = this.userForm.get('oldPassword').value;\r\n    this.changePassword.confirmPassword=this.userForm.get('confirmPassword').value;\r\n    // this.changePassword.otp=this.userForm.get('otp').value;\r\n\r\n\r\n    if (this.changePassword.newPassword != this.changePassword.confirmPassword) {\r\n      Swal.fire({\r\n     \r\n        text: 'New Password and Confirm Password values are not same ',\r\n        icon:'error'\r\n      });\r\n    }\r\n     else if (!this.changePassword.newPassword  || !this.changePassword.confirmPassword || !this.changePassword.oldPassword ) {\r\n       console.log(\"inside else if\");\r\n      \r\n      Swal.fire({\r\n      \r\n          text: 'Please enter all the fields ',\r\n          icon:'info'\r\n        });\r\n      }\r\n    else {\r\n      // if (this.changePassword.newPassword === null || this.changePassword.confirmPassword === null || this.changePassword.oldPassword === null) {\r\n      //   Swal.fire({\r\n      //     title: 'Oops...',\r\n      //     text: 'Please enter all the fields !!!',\r\n      //   });\r\n      // }\r\n      this.changePassword.userId = this.loggedInUser;\r\n      var encryptedAES = CryptoJS.AES.encrypt(this.changePassword.newPassword, \"@12#90!^*NPR*g&*()$34#$\");\r\n      var USERNAME = CryptoJS.AES.encrypt(this.changePassword.userId, \"@12#90!^*NPR*g&*()$34#$\");\r\n      var old= CryptoJS.AES.encrypt(this.changePassword.oldPassword, \"@12#90!^*NPR*g&*()$34#$\");\r\n      var data = encryptedAES.toString();\r\n      var uname = USERNAME.toString();\r\n      var oldPassword=encryptedAES.toString();\r\n      // console.log(data);\r\n      this.changePassword.newPassword = data;\r\n      this.changePassword.userId = uname;\r\n      // this.changePassword.oldPassword=oldPassword;\r\n      console.log(this.changePassword);\r\n      this.enableLoader = true;\r\n      this.api.changePasswordService(this.changePassword).subscribe(resp => {\r\n        this.var1 = resp;\r\n        // this.changePasswordRespDTO = resp;\r\n      console.log(resp[0]);\r\n        // //console.log('changePasswordRespDTO :' );\r\n        // //console.log( this.changePasswordRespDTO);\r\n        // this.enableLoader = false;\r\nif(resp==\"You cannot use your previous password. Please choose another password\")\r\n{\r\n  Swal.fire(\r\n    {\r\n      title:\"You can not use your last \"+ this.security.pswdReuseAft +\" passwords. Please choose another password.\",\r\n      icon:'error'\r\n    }\r\n  )\r\n}\r\nif(resp==\"Incorrect old Password\")\r\n{\r\n  Swal.fire(\r\n    {\r\n      title:\"Incorrect old password.\",\r\n      icon:\"error\"\r\n    }\r\n  )\r\n}\r\nif(resp==\"successfull\")\r\n{\r\n  Swal.fire(\r\n    {\r\n      title:\"Password Changed Successfully.\",\r\n      icon:'success'\r\n    }\r\n  )\r\n  this.submit = false;\r\n}\r\n\r\n\r\n//         // if(resp === true){\r\n//         //   this.otpEnableFlag = true;\r\n//         // }\r\n//         if(resp === true){\r\n//           Swal.fire(\r\n           \r\n//             'You Changed The Password ',\r\n            \r\n//           );\r\n//           this.router.navigate([\"/dashboard\"]);\r\n//         }\r\n       \r\n\r\n      });\r\n    }\r\n  }\r\n  // buildForm(a,b) {\r\n  //   // ---------- Password Policy Implementation (BEGIN) ----------\r\n  //   this.apiService.fetchSecurityPolicyService()\r\n  //     .subscribe(resp => {\r\n  //       resp = resp;\r\n  //       resp=this.security1;\r\n  //       this.passwordRegex='';\r\n  //       console.log(resp);\r\n  //       if (this.security1.pswdComplexUcase==\"true\") {\r\n  //         console.log(\"iniside if 1\");\r\n  //         console.log(\"resp pswdComplexUcase\",this.security1.pswdComplexUcase)\r\n  //         this.passwordRegex = '(?=[^A-Z]*[A-Z])';\r\n  //         this.errorMsg = ' UpperCase';\r\n  //       }\r\n  //       if (this.security1.pswdComplexLcase==\"true\") {\r\n  //         this.passwordRegex = this.passwordRegex + '(?=[^a-z]*[a-z])';\r\n  //         if (this.errorMsg != '') {\r\n  //           this.errorMsg = this.errorMsg + ', LowerCase';\r\n  //         }\r\n  //         else {\r\n  //           this.errorMsg = this.errorMsg + ' LowerCase';\r\n  //         }\r\n  //       }\r\n  //       if (this.security1.pswdComplexNum==\"true\") {\r\n  //         this.passwordRegex = this.passwordRegex + '(?=[^0-9]*[0-9])';\r\n  //         if (this.errorMsg != '') {\r\n  //           this.errorMsg = this.errorMsg + ', Number';\r\n  //         }\r\n  //         else {\r\n  //           this.errorMsg = this.errorMsg + ' Number';\r\n  //         }\r\n  //       }\r\n  //       if (this.security1.pswdComplexSplc==\"true\") {\r\n  //         this.passwordRegex = this.passwordRegex + '(?=[^!-@]*[!-@])';\r\n  //         if (this.errorMsg != '') {\r\n  //           this.errorMsg = this.errorMsg + ', Special Character';\r\n  //         }\r\n  //         else {\r\n  //           this.errorMsg = this.errorMsg + ' Special Character';\r\n  //         }\r\n  //       }\r\n\r\n  //       this.passwordRegex = this.passwordRegex + '.{' + this.minPass + ',' + this.maxPass + '}';\r\n  //       // this.passwordRegex = \"(?=[^A-Z]*[A-Z])(?=[^a-z]*[a-z])(?=[^!-@]*[!-@]).{10,15}\";\r\n  //       this.errorMsg = 'Password must contain atleast one ' + this.errorMsg + '.';\r\n  //       console.log(this.passwordRegex);\r\n        \r\n          \r\n        \r\n      \r\n      \r\n\r\n    \r\n   \r\n  //     });\r\n  // }\r\n}\r\n\r\n","<div class=\"pageContentMain\" class=\"mt-1\">\r\n  <div class=\"pageTitleCol\">\r\n    <h2 class=\"pageTitle\">Password Management</h2>\r\n  </div>\r\n  <form action=\"\" class=\"formStyle\" [formGroup]=\"userForm\">\r\n\r\n    <div class=\"dbCardStyle fieldwidth\" style=\"width:400px;\">\r\n      <fieldset [disabled]=\"!submit\">\r\n        <div class=\"row gy-4\">\r\n         \r\n          <div class=\"col-12\">\r\n            <label class=\"formLbl\">Old Password<span class=\"colorRed\">*</span></label>\r\n       <div class=\"d-flex\">\r\n            <input id=\"oldPassword\" placeholder=\"Old Password\" required class=\"form-control\" value=\"\" #newPassword\r\n              name=\"oldPassword\" [type]=\"hide ? 'password' : 'text'\" formControlName=\"oldPassword\">\r\n            <span toggle=\"#pwdFld\" class=\"visibility\" (click)=\"hide = !hide\">\r\n              <img class=\"showPwd\" *ngIf=\"!hide\" src=\"assets/images/show-icon.svg\" alt=\"...\">\r\n              <img class=\"hidePwd\" *ngIf=\"hide\" src=\"assets/images/hide-icon.svg\" alt=\"...\">\r\n            </span>\r\n          </div>\r\n          </div>\r\n          <div class=\"col-12 \">\r\n            <label class=\"formLbl\">New Password<span class=\"colorRed\">*</span></label>\r\n            <div class=\"d-flex\">\r\n           \r\n              <input id=\"password\" placeholder=\"New Password\" required class=\"form-control\" value=\"\" #newPassword\r\n                name=\"password\" [type]=\"hide1 ? 'password' : 'text'\" formControlName=\"newPassword\">\r\n              <span toggle=\"#pwdFld\" class=\"visibility\" (click)=\"hide1 = !hide1\">\r\n                <img class=\"showPwd\" *ngIf=\"!hide1\" src=\"assets/images/show-icon.svg\" alt=\"...\">\r\n                <img class=\"hidePwd\" *ngIf=\"hide1\" src=\"assets/images/hide-icon.svg\" alt=\"...\">\r\n              </span>\r\n            </div>\r\n\r\n            <div class=\"invalid-feedback\"\r\n              *ngIf=\"userForm.get('newPassword').invalid &&\r\n              (userForm.get('newPassword').dirty ||\r\n                userForm.get('newPassword').touched)\">\r\n              <div *ngIf=\"userForm.get('newPassword').errors.pattern\">{{errorMsg}}</div>\r\n            </div>\r\n            <div *ngIf=\"userForm.get('newPassword').hasError('minlength') \" class=\"invalid-feedback\">\r\n              New Password must contain Minimum {{minPass}} digits.\r\n            </div>\r\n            <div *ngIf=\"userForm.get('newPassword').hasError('maxlength')\" class=\"invalid-feedback\">\r\n              New Password must contain Maximum {{maxPass}} digits.\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"col-12\">\r\n            <label class=\"formLbl\">Confirm Password<span class=\"colorRed\">*</span></label>\r\n            <div class=\"d-flex\">\r\n             \r\n              <input id=\"confirm password\" placeholder=\"Confirm Password\" required class=\"form-control\" value=\"\"\r\n                #confirmPassword name=\"confirmPassword\" [type]=\"hide2 ? 'password' : 'text'\"\r\n                formControlName=\"confirmPassword\">\r\n              <span toggle=\"#pwdFld\" class=\"visibility\" (click)=\"hide2 = !hide2\">\r\n                <img class=\"showPwd\" *ngIf=\"!hide2\" src=\"assets/images/show-icon.svg\" alt=\"...\">\r\n                <img class=\"hidePwd\" *ngIf=\"hide2\" src=\"assets/images/hide-icon.svg\" alt=\"...\">\r\n              </span>\r\n            </div>\r\n            <div class=\"invalid-feedback\"\r\n              *ngIf=\"userForm.get('confirmPassword').invalid &&\r\n              (userForm.get('confirmPassword').dirty ||\r\n                userForm.get('confirmPassword').touched)\">\r\n              <div *ngIf=\"userForm.get('confirmPassword').errors.pattern\">{{errorMsg}}</div>\r\n            </div>\r\n            <div *ngIf=\"userForm.get('confirmPassword').hasError('minlength') \" class=\"invalid-feedback\">\r\n              Confirm Password must contain Minimum {{minPass}} digits.\r\n            </div>\r\n            <div *ngIf=\"userForm.get('confirmPassword').hasError('maxlength')\" class=\"invalid-feedback\">\r\n              Confirm Password must contain Maximum {{maxPass}} digits.\r\n            </div>\r\n\r\n          </div>\r\n\r\n\r\n        </div>\r\n      </fieldset>\r\n      <div class=\"col-lg-12\">\r\n        <div class=\"row g-3 pt-3 mt-2 justify\">\r\n  \r\n          <div class=\"col-auto\">\r\n            <button href=\"javascript:void(0)\" (click)=\"onSubmit()\" [disabled]=\"!userForm.valid || !submit\"\r\n              class=\"btn smBtn minWdSmBtn btnPrimary\">Save</button>\r\n          </div>\r\n  \r\n          <div class=\"col-auto\">\r\n            <a href=\"javascript:void(0)\" class=\"btn smBtn minWdSmBtn btnSecondary\" [routerLink]=\"['/dashboard']\">Exit</a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n   \r\n\r\n\r\n  </form>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { ChangePasswordRoutingModule } from './change-password-routing.module';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { ChangePasswordComponent } from './change-password.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ChangePasswordComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    ChangePasswordRoutingModule,\r\n    ReactiveFormsModule\r\n  ]\r\n})\r\nexport class ChangePasswordModule { }\r\n"],"names":[],"sourceRoot":"webpack:///"}