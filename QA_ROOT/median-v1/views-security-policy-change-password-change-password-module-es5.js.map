{"version":3,"sources":["src/app/views/security-policy/change-password/change-password.component.html","src/app/shared/models/login.ts","src/app/views/security-policy/change-password/change-password.component.scss","src/app/views/security-policy/change-password/change-password.component.ts","src/app/views/security-policy/change-password/change-password.module.ts","src/app/views/security-policy/change-password/change-password.routing.module.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<mat-toolbar>Process Monitoring Screen</mat-toolbar>\\r\\n\\r\\n\\r\\n\\r\\n<mat-card class=\\\"navigation\\\">\\r\\n  <mat-form-field>\\r\\n    <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Filter\\\">\\r\\n  </mat-form-field>\\r\\n  <div class=\\\"mat-elevation-z8\\\">\\r\\n    <table mat-table [dataSource]=\\\"dataSource\\\">\\r\\n\\r\\n      <!-- Position Column -->\\r\\n      <ng-container matColumnDef=\\\"userId\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef> Authorizer</th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.userId}} </td>\\r\\n      </ng-container>\\r\\n\\r\\n      <ng-container matColumnDef=\\\"batchNo\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef> Batch No</th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.batchNo}} </td>\\r\\n      </ng-container>\\r\\n\\r\\n      <ng-container matColumnDef=\\\"date\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef> Date</th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.date | date}} </td>\\r\\n      </ng-container>\\r\\n\\r\\n      <!-- Name Column -->\\r\\n      <ng-container matColumnDef=\\\"relatedProcess\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef> Related Process </th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.relatedProcess}} </td>\\r\\n      </ng-container>\\r\\n\\r\\n      <!-- Weight Column -->\\r\\n      <ng-container matColumnDef=\\\"totalNoOfRecord\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef> Total Record </th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.totalNoOfRecord}} </td>\\r\\n      </ng-container>\\r\\n\\r\\n      <!-- Symbol Column -->\\r\\n      <ng-container matColumnDef=\\\"success\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef> Success Record </th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.success}} </td>\\r\\n      </ng-container>\\r\\n      <ng-container matColumnDef=\\\"failed\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef> Failed Record </th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.failed}} </td>\\r\\n      </ng-container>\\r\\n      <ng-container matColumnDef=\\\"status\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef> Status </th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.status}} </td>\\r\\n      </ng-container>\\r\\n      <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n      <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n    </table>\\r\\n\\r\\n    <mat-paginator [pageSizeOptions]=\\\"[5, 10, 20]\\\" showFirstLastButtons></mat-paginator>\\r\\n  </div>\\r\\n\\r\\n</mat-card>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\"","export class Login {\r\nusername: string;\r\npassword: string;\r\notp:string;\r\n}\r\n","export default \"table {\\n  width: 100%;\\n}\\n\\n.navigation {\\n  /* width: 300px; */\\n  height: 475px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdmlld3Mvc2VjdXJpdHktcG9saWN5L2NoYW5nZS1wYXNzd29yZC9GOlxcbXV0aHUtb25ib2FyZFxcbWVkaWFuLXBoMi11aS9zcmNcXGFwcFxcdmlld3NcXHNlY3VyaXR5LXBvbGljeVxcY2hhbmdlLXBhc3N3b3JkXFxjaGFuZ2UtcGFzc3dvcmQuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL3ZpZXdzL3NlY3VyaXR5LXBvbGljeS9jaGFuZ2UtcGFzc3dvcmQvY2hhbmdlLXBhc3N3b3JkLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksV0FBQTtBQ0NKOztBREVBO0VBQ0ksa0JBQUE7RUFDQSxhQUFBO0FDQ0oiLCJmaWxlIjoic3JjL2FwcC92aWV3cy9zZWN1cml0eS1wb2xpY3kvY2hhbmdlLXBhc3N3b3JkL2NoYW5nZS1wYXNzd29yZC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbInRhYmxle1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbn1cclxuXHJcbi5uYXZpZ2F0aW9uIHtcclxuICAgIC8qIHdpZHRoOiAzMDBweDsgKi9cclxuICAgIGhlaWdodDogNDc1cHg7XHJcbiAgXHJcbiAgfSIsInRhYmxlIHtcbiAgd2lkdGg6IDEwMCU7XG59XG5cbi5uYXZpZ2F0aW9uIHtcbiAgLyogd2lkdGg6IDMwMHB4OyAqL1xuICBoZWlnaHQ6IDQ3NXB4O1xufSJdfQ== */\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { SecurityDto } from '../security-policy/security-dto';\r\nimport { ApiService } from 'src/app/shared/services/sias2-services/excel.api.service';\r\nimport { SecurityPolicyService } from '../security-policy/security-policy.service';\r\nimport Swal from 'sweetalert2';\r\nimport * as CryptoJS from 'crypto-js';\r\nimport { Login } from 'src/app/shared/models/login';\r\nimport { LoginService } from '../../login/login.service';\r\nimport { MatPaginator, MatTableDataSource } from '@angular/material';\r\nimport { PeriodicElement } from '../../roles-impl/new-role/new-role.component';\r\nimport { environment } from 'src/environments/environment.prod';\r\n\r\n\r\n@Component({\r\n  selector: 'app-change-password',\r\n  templateUrl: './change-password.component.html',\r\n  styleUrls: ['./change-password.component.scss']\r\n})\r\nexport class ChangePasswordComponent implements OnInit {\r\n  passwordReset1: any;\r\n  login = new Login();\r\n  res: any;\r\n  editable: boolean = false;\r\n  finalpattern: string;\r\n  responseMsg: any;\r\n  responseError: any;\r\n  passwordDTO: any;\r\n  passwordStatus: boolean;\r\n  msg: any;\r\n  userId: string;\r\n  lowerCase: string;\r\n  security: SecurityDto;\r\n  security1: SecurityDto;\r\n  minPass: any;\r\n  maxPass: any;\r\n  ucase: any;\r\n  lcase: any;\r\n  num: any;\r\n  splc: any;\r\n\r\n  reactiveForm: FormGroup;\r\n  passwordRegex: any;\r\n  errorMsg: any = '';\r\n  dataresp: any;\r\n  dataSource: any;\r\n  displayedColumns: string[] = ['userId', 'batchNo', 'relatedProcess', 'date', 'totalNoOfRecord', 'success', 'failed', 'status'];\r\n\r\n\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n\r\n  constructor(private apiService: SecurityPolicyService, private fb: FormBuilder, private toastr: ToastrService, private loginservice: LoginService) {\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getDataForMonitor();\r\n\r\n\r\n\r\n    this.reactiveForm = this.fb.group({\r\n      userId: new FormControl(''), // added\r\n      otp: new FormControl('', [Validators.required]),\r\n      password: new FormControl('', [Validators.required,\r\n      Validators.compose([Validators.pattern(this.passwordRegex),\r\n      Validators.maxLength(this.maxPass),\r\n      Validators.minLength(this.minPass)])]),\r\n      confirmPassword: new FormControl('', [Validators.required,\r\n      Validators.compose([Validators.pattern(this.passwordRegex),\r\n      Validators.maxLength(this.maxPass),\r\n      Validators.minLength(this.minPass)])])\r\n    });\r\n\r\n    this.userId = localStorage.getItem('userIdForChangePassword');\r\n    let a, b;\r\n    this.apiService.fetchSecurityPolicyService().subscribe(resp => {\r\n      this.security = resp;\r\n      console.log(this.security);\r\n      this.minPass = this.security.minPswdLength;\r\n      this.maxPass = this.security.maxPswdLength;\r\n\r\n      this.buildForm(this.minPass, this.maxPass);\r\n      console.log(this.minPass, this.maxPass);\r\n      console.log(this.security);\r\n    });\r\n    this.buildForm(this.minPass ? this.minPass : a, this.maxPass ? this.maxPass : b);\r\n  }\r\n\r\n  buildForm(a, b) {\r\n    // ---------- Password Policy Implementation (BEGIN) ----------\r\n    this.apiService.fetchSecurityPolicyService()\r\n      .subscribe(resp => {\r\n        this.security1 = resp;\r\n        this.ucase = this.security1.pswdComplexUcase;\r\n        this.lcase = this.security1.pswdComplexLcase;\r\n        this.num = this.security1.pswdComplexNum;\r\n        this.splc = this.security1.pswdComplexSplc;\r\n\r\n        if (this.security1.pswdComplexUcase) {\r\n          this.passwordRegex = '(?=[^A-Z]*[A-Z])';\r\n          this.errorMsg = ' UpperCase';\r\n        }\r\n        if (this.security1.pswdComplexLcase) {\r\n          this.passwordRegex = this.passwordRegex + '(?=[^a-z]*[a-z])';\r\n          if (this.errorMsg != null) {\r\n            this.errorMsg = this.errorMsg + ', LowerCase';\r\n          }\r\n          else {\r\n            this.errorMsg = this.errorMsg + ' LowerCase';\r\n          }\r\n        }\r\n        if (this.security1.pswdComplexNum) {\r\n          this.passwordRegex = this.passwordRegex + '(?=[^0-9]*[0-9])';\r\n          if (this.errorMsg != null) {\r\n            this.errorMsg = this.errorMsg + ', Number';\r\n          }\r\n          else {\r\n            this.errorMsg = this.errorMsg + ' Number';\r\n          }\r\n        }\r\n        if (this.security1.pswdComplexSplc) {\r\n          this.passwordRegex = this.passwordRegex + '(?=[^!-@]*[!-@])';\r\n          if (this.errorMsg != null) {\r\n            this.errorMsg = this.errorMsg + ', Special Character';\r\n          }\r\n          else {\r\n            this.errorMsg = this.errorMsg + ' Special Character';\r\n          }\r\n        }\r\n\r\n        this.passwordRegex = this.passwordRegex + '.{' + this.minPass + ',' + this.maxPass + '}';\r\n        // this.passwordRegex = \"(?=[^A-Z]*[A-Z])(?=[^a-z]*[a-z])(?=[^!-@]*[!-@]).{10,15}\";\r\n        this.errorMsg = 'Password must contain atleast one ' + this.errorMsg + '.';\r\n        console.log(this.passwordRegex);\r\n        // ---------- Password Policy Implementation (END) ----------\r\n\r\n        this.reactiveForm = this.fb.group({\r\n          userId: new FormControl(''),\r\n          otp: new FormControl('', [Validators.required]),\r\n          password: new FormControl('', [Validators.required,\r\n          Validators.compose([Validators.pattern(this.passwordRegex),\r\n          Validators.maxLength(this.maxPass),\r\n          Validators.minLength(this.minPass)])]),\r\n          confirmPassword: new FormControl('', [Validators.required,\r\n          Validators.compose([Validators.pattern(this.passwordRegex),\r\n          Validators.maxLength(this.maxPass),\r\n          Validators.minLength(this.minPass)])])\r\n        });\r\n      });\r\n\r\n    console.log(this.minPass, this.maxPass);\r\n    console.log('form', this.reactiveForm);\r\n  }\r\n\r\n  pwdMatchValidator(frm: FormGroup) {\r\n    return !this.passwordRegex ? null : { mismatch: true };\r\n  }\r\n\r\n  ngAfterViewInit() { }\r\n\r\n  reloadData() {\r\n    console.log('method invoked');\r\n    this.apiService.fetchSecurityPolicyService().subscribe(resp => {\r\n      this.security = resp;\r\n      console.log(this.security);\r\n    });\r\n  }\r\n  applyFilter(filterValue: string) {\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n\r\n  public changePassword(newPassword: string, confirmPassword: string, userId: string, otp) {\r\n    console.log(newPassword, confirmPassword, userId, otp);\r\n\r\n    if (newPassword === confirmPassword) {\r\n\r\n    } else {\r\n      Swal.fire('Password Not Matched.');\r\n    }\r\n    let encryptedAES = CryptoJS.AES.encrypt(newPassword, '@12#90!^*NPR*g&*()$34#$');\r\n    let USERNAME = CryptoJS.AES.encrypt(userId, '@12#90!^*NPR*g&*()$34#$');\r\n\r\n    var data = encryptedAES.toString();\r\n    let uname = USERNAME.toString();\r\n    this.login.password = data;\r\n    this.login.username = uname;\r\n    this.login.otp = otp;\r\n    console.log(this.login);\r\n    this.loginservice.forgetPassword(this.login).subscribe(res => {\r\n      this.res = res;\r\n      console.log(this.res);\r\n      if (this.res) {\r\n        // this.spinnerbutton = false;\r\n        if (this.res[0] === 'Login success.') {\r\n          Swal.fire('password Changed Successfully.');\r\n        } else {\r\n          Swal.fire(this.res[0]);\r\n        }\r\n\r\n        // this.router.navigate(['/dashboard']);\r\n      } else {\r\n        // this.spinnerbutton = false;\r\n        // this.snack.open('Choose Other Password Unable to Reset!', 'OK', { duration: 4000 });\r\n        Swal.fire('Choose Other Password ', 'or otp is invalid.');\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n  reset() {\r\n    this.responseError = null;\r\n    this.responseMsg = null;\r\n    this.passwordStatus = false;\r\n  }\r\n  getOtp1(userId) {\r\n    console.log(userId);\r\n    this.editable = true;\r\n  }\r\n\r\n  getDataForMonitor() {\r\n    this.apiService.getMonitorData().subscribe(dataresp => {\r\n      this.dataresp = dataresp;\r\n      console.log(this.dataresp);\r\n      this.dataSource = new MatTableDataSource<any>(this.dataresp);\r\n      this.dataSource.paginator = this.paginator;\r\n    })\r\n  }\r\n  //  submit(login: Login) {\r\n  //     if(!login.username){\r\n  //       Swal.fire('Enter User Id.');\r\n  //       return;\r\n  //     }\r\n\r\n  //       var encryptedAES = CryptoJS.AES.encrypt(login.password, \"@12#90!^*NPR*g&*()$34#$\");\r\n  //     var USERNAME = CryptoJS.AES.encrypt(login.username, \"@12#90!^*NPR*g&*()$34#$\");\r\n\r\n  //    var data=encryptedAES.toString();\r\n  //     var uname=USERNAME.toString();\r\n  //     this.login1.password=data;\r\n  //     this.login1.username=uname;\r\n  //     console.log(\"otp is\",this.otp);\r\n  //     this.login1.otp=this.otp;\r\n  //     console.log(this.login1);\r\n\r\n  //     this.spinnerbutton = true;\r\n  //     this.loginservice.forgetPassword(this.login1).subscribe(res => {\r\n  //       this.var1 = res;\r\n  //       console.log(this.var1);\r\n  //       if (this.var1) {\r\n  //         this.spinnerbutton = false;\r\n  //         if(this.var1[0] ==='Login success.'){\r\n  //           Swal.fire('password Changed Successfully.');\r\n  //         }else{\r\n  //           Swal.fire(this.var1[0]);\r\n  //         }\r\n\r\n  //         // this.router.navigate(['/dashboard']);\r\n  //       } else {\r\n  //         this.spinnerbutton = false;\r\n  //         // this.snack.open('Choose Other Password Unable to Reset!', 'OK', { duration: 4000 });\r\n  //         Swal.fire('Choose Other Password !','or otp is invalid.');\r\n  //       }\r\n  //     });\r\n\r\n  //   }\r\n  getOtp(userId) {\r\n    console.log(userId);\r\n    this.editable = true;\r\n    if (!userId) {\r\n      Swal.fire('Enter User Id.');\r\n      return;\r\n    }\r\n    // var encryptedAES = CryptoJS.AES.encrypt(login.password, \"@12#90!^*NPR*g&*()$34#$\");\r\n    const USERNAME = CryptoJS.AES.encrypt(userId, '@12#90!^*NPR*g&*()$34#$');\r\n\r\n    const uname = USERNAME.toString();\r\n\r\n    this.passwordReset1 = uname;\r\n    this.loginservice.getOtpForReset(this.passwordReset1).subscribe(res => {\r\n      this.res = res;\r\n      if (this.res) {\r\n        Swal.fire('Otp Send to user mail id.');\r\n      }\r\n    });\r\n\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\n\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { ChangePasswordComponent } from './change-password.component';\r\nimport { changePasswordRoutes } from './change-password.routing.module';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\nimport { SharedModule } from 'src/app/shared/shared.module';\r\n\r\n\r\n@NgModule({\r\n  declarations: [ChangePasswordComponent],\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    SharedModule,\r\n    FlexLayoutModule,\r\n\r\n    RouterModule.forChild(changePasswordRoutes)\r\n  ]\r\n})\r\nexport class ChangePasswordModule { }\r\n","import { Routes } from '@angular/router';\r\nimport { ChangePasswordComponent } from './change-password.component';\r\n\r\nexport const changePasswordRoutes: Routes = [\r\n  {\r\n      path:'',\r\n      component:ChangePasswordComponent\r\n  }\r\n];\r\n"],"sourceRoot":"webpack:///","file":"views-security-policy-change-password-change-password-module-es5.js"}