{"version":3,"sources":["src/app/views/excel-data-authorization-first/excel-data-authorization-first.component.html","src/app/views/excel-data-authorization-first/excel-data-authorization-first-routing.module.ts","src/app/views/excel-data-authorization-first/excel-data-authorization-first.component.scss","src/app/views/excel-data-authorization-first/excel-data-authorization-first.component.ts","src/app/views/excel-data-authorization-first/excel-data-authorization-first.module.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<!-- <div style=\\\"background-color:rgb(183, 247, 191)\\\">\\r\\n  <h1>Upload Process Authorization</h1>\\r\\n</div> -->\\r\\n<mat-toolbar color=\\\"primary\\\" style=\\\"height:30px; font-size: small;\\\">\\r\\n  <span>Authorize Excel</span>\\r\\n</mat-toolbar>\\r\\n<br />\\r\\n<div class=\\\"wrapper\\\">\\r\\n  <h3 style=\\\"font-size: large;\\\">Pending for Authorization</h3>\\r\\n</div>\\r\\n<br />\\r\\n\\r\\n\\r\\n\\r\\n<div class=\\\"mat-elevation-z8 \\\">\\r\\n  <mat-form-field>\\r\\n    <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Filter\\\">\\r\\n  </mat-form-field>\\r\\n\\r\\n  <table mat-table [dataSource]=\\\"dataSourcePendingForAuth\\\">\\r\\n    <!-- Position Column -->\\r\\n    <ng-container matColumnDef=\\\"detailsQueryToggle\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef>Process Details</th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n        <button mat-raised-button color=\\\"primary\\\" (click)=\\\"queryDetailsDataByParam(element)\\\">\\r\\n          Get Details\\r\\n        </button>\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"externalSysName\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef>External System</th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\">{{ element.externalSysName }}</td>\\r\\n    </ng-container>\\r\\n    <ng-container matColumnDef=\\\"currency\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef>Currency</th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\">{{ element.currency }}</td>\\r\\n    </ng-container>\\r\\n    <ng-container matColumnDef=\\\"inputBy\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef>Uploaded By</th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\">{{ element.inputBy }}</td>\\r\\n    </ng-container>\\r\\n    <ng-container matColumnDef=\\\"batchNumber\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef>Batch Number</th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\">{{ element.batchNumber }}</td>\\r\\n    </ng-container>\\r\\n    <ng-container matColumnDef=\\\"processName\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef>Process Name</th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\">{{ element.processName }}</td>\\r\\n    </ng-container>\\r\\n\\r\\n\\r\\n    <ng-container matColumnDef=\\\"processingDate\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef>Processing Date</th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n        {{ element.processingDate | date }}\\r\\n      </td>\\r\\n    </ng-container>\\r\\n    <ng-container matColumnDef=\\\"remarks\\\" style=\\\"display: none;\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef [style.display]=\\\"'none'\\\">Remarks</th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\" [style.display]=\\\"'none'\\\"><textarea>{{ element.remarks }}</textarea></td>\\r\\n    </ng-container>\\r\\n    <ng-container matColumnDef=\\\"overrides\\\" style=\\\"display: none;\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef [style.display]=\\\"'none'\\\">Override</th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\" [style.display]=\\\"'none'\\\"><textarea>{{ element.overrides }}</textarea></td>\\r\\n    </ng-container>\\r\\n    <ng-container matColumnDef=\\\"totalNoOfRecord\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef>Total Record</th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\">{{ element.totalNoOfRecord }}</td>\\r\\n    </ng-container>\\r\\n    <ng-container matColumnDef=\\\"totalCredit\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef>Total Credit</th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\">{{ element.totalCredit }}</td>\\r\\n    </ng-container>\\r\\n    <ng-container matColumnDef=\\\"totalDebit\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef>Total Debit</th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\">{{ element.totalDebit }}</td>\\r\\n    </ng-container>\\r\\n    <ng-container matColumnDef=\\\"authStatus\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef>Auth Status</th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\">{{ element.authStatus }}</td>\\r\\n    </ng-container>\\r\\n    <ng-container matColumnDef=\\\"uploadStatus\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef>Upload Status</th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\">{{ element.uploadStatus }}</td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"filename\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef>File Name</th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\">{{ element.fileName }}</td>\\r\\n    </ng-container>\\r\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumnsPendingAuth\\\"></tr>\\r\\n    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumnsPendingAuth\\\"></tr>\\r\\n  </table>\\r\\n  <mat-paginator [pageSizeOptions]=\\\"[5, 10, 20, 30, 40, 50, 60]\\\" showFirstLastButtons></mat-paginator>\\r\\n</div>\\r\\n<br />\\r\\n<mat-spinner *ngIf=\\\"spinner1\\\" radius=\\\"10px;\\\"> Please Wait Data is Loading.......</mat-spinner>\\r\\n<br />\\r\\n\\r\\n\\r\\n<div class=\\\"row\\\" *ngIf=\\\"flag\\\">\\r\\n  <div class=\\\"col-sm-6\\\">\\r\\n    <label>Remarks</label>\\r\\n    <textarea style=\\\"width: 100%;\\\">{{this.remarks}}</textarea>\\r\\n  </div>\\r\\n  <div class=\\\"col-sm-6\\\">\\r\\n    <label>Overrides</label>\\r\\n    <textarea style=\\\"width: 100%;\\\">{{this.overrides}}</textarea>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"mat-elevation-z8 \\\">\\r\\n  <!-- <button mat-raised-button color=\\\"primary\\\" (click)=\\\"downloadData()\\\" *ngIf=\\\"button1\\\">\\r\\n        Download Uploaded Data\\r\\n        </button> -->\\r\\n  <button mat-button>\\r\\n\\r\\n    <mat-label>Export As</mat-label>\\r\\n\\r\\n    <mat-select #select>\\r\\n      <mat-option (click)=\\\"downloadData()\\\" *ngIf=\\\"button1\\\">Excel</mat-option>\\r\\n      <mat-option (click)=\\\"convert()\\\" *ngIf=\\\"button1\\\">PDF</mat-option>\\r\\n    </mat-select>\\r\\n\\r\\n  </button>\\r\\n  <table mat-table [dataSource]=\\\"dataSource\\\">\\r\\n    <!-- Position Column -->\\r\\n    <ng-container matColumnDef=\\\"account\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef>Account</th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\">{{ element.account }}</td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Name Column Added By Fayaz -> AccountDescription column -->\\r\\n    <ng-container matColumnDef=\\\"accDesc\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef>Account Description</th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\">{{ element.accDesc}}</td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Name Column -->\\r\\n    <ng-container matColumnDef=\\\"ccyCd\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef>Currency</th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\">{{ element.ccyCd }}</td>\\r\\n    </ng-container>\\r\\n    <!-- Weight Column -->\\r\\n    <ng-container matColumnDef=\\\"branchCode\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef>Branch</th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\">{{ element.id.branchCode }}</td>\\r\\n    </ng-container>\\r\\n    <!-- Symbol Column -->\\r\\n    <ng-container matColumnDef=\\\"amount\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef>Amount</th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\">{{ element.amount }}</td>\\r\\n    </ng-container>\\r\\n    <!-- Position Column -->\\r\\n    <ng-container matColumnDef=\\\"lcyEquivalent\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef>Lcy Amount</th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\">{{ element.lcyEquivalent }}</td>\\r\\n    </ng-container>\\r\\n    <!-- Name Column -->\\r\\n    <ng-container matColumnDef=\\\"drCr\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef>Dr/Cr</th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\">{{ element.drCr }}</td>\\r\\n    </ng-container>\\r\\n    <!-- Weight Column -->\\r\\n    <ng-container matColumnDef=\\\"exchRate\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef>Exchange Rate</th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\">{{ element.exchRate }}</td>\\r\\n    </ng-container>\\r\\n    <!-- Symbol Column -->\\r\\n    <ng-container matColumnDef=\\\"relatedAccount\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef>Related Account</th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\">{{ element.relatedAccount }}</td>\\r\\n    </ng-container>\\r\\n    <!-- Weight Column -->\\r\\n    \\r\\n    <!-- Symbol Column -->\\r\\n    <ng-container matColumnDef=\\\"addlText\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef style=\\\"width:auto\\\">Addl Text</th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\">{{ element.addlText }}</td>\\r\\n    </ng-container>\\r\\n    <ng-container matColumnDef=\\\"treasuryReference\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef>Treasury Reference</th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\">{{element.acumenJournal}}</td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"view\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef>Process</th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\" [style.color]=\\\"element.color\\\" data-label=\\\"color\\\">\\r\\n        <button mat-raised-button class=\\\"hahaha\\\" color=\\\"primary\\\" (click)=\\\"openDialog(element)\\\">\\r\\n          View\\r\\n        </button>&nbsp;&nbsp;\\r\\n        <!-- <button mat-raised-button class=\\\"hahaha\\\" color=\\\"primary\\\" (click)=\\\"openAuditDetails(element)\\\">\\r\\n          Audit\\r\\n        </button> -->\\r\\n      </td>\\r\\n    </ng-container>\\r\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns\\\"></tr>\\r\\n  </table>\\r\\n  <mat-paginator [pageSizeOptions]=\\\"[5, 10, 20, 30, 40, 50, 60]\\\" showFirstLastButtons></mat-paginator>\\r\\n</div>\\r\\n<br />\\r\\n<mat-form-field *ngIf=\\\"reasonBoolean\\\">\\r\\n  <mat-label>Reject Reason</mat-label>\\r\\n  <textarea matInput cdkTextareaAutosize cdkAutosizeMinRows=\\\"1\\\" cdkAutosizeMaxRows=\\\"5\\\" name=\\\"rejectReason\\\"\\r\\n    [(ngModel)]=\\\"rejectReason\\\"></textarea>\\r\\n</mat-form-field>\\r\\n\\r\\n<div class=\\\"wrapper\\\">\\r\\n  <button mat-raised-button color=\\\"primary\\\" (click)=\\\"approveDetailsData()\\\" style=\\\"height : 90%\\\"\\r\\n    *ngIf=\\\"approveButtonStatus && roleCodes.auth\\\">Approve and Process </button>\\r\\n\\r\\n  &nbsp;\\r\\n  <!-- Earlier code <button mat-raised-button color=\\\"primary\\\" (click)=\\\"reject()\\\" style=\\\"height : 90%\\\"\\r\\n  *ngIf=\\\"approveButtonStatus && roleCodes.reject\\\">\\r\\n    {{roleCodes.reject.labelDescription}}\\r\\n  </button> -->\\r\\n  <button mat-raised-button color=\\\"primary\\\" (click)=\\\"reject()\\\" style=\\\"height : 90%\\\"\\r\\n    *ngIf=\\\"approveButtonStatus && roleCodes.auth\\\">\\r\\n    Reject\\r\\n  </button> &nbsp;\\r\\n  <!-- <button mat-raised-button color=\\\"primary\\\"  (click)=\\\"Process()\\\" style=\\\"height : 90%\\\" *ngIf=\\\"process && this.button_permission.newbutton=='T'\\\">\\r\\n   Process\\r\\n  </button> -->\\r\\n</div>\\r\\n<br>\\r\\n<mat-spinner [diameter]=\\\"70\\\" *ngIf=\\\"authprocess\\\"></mat-spinner>\\r\\n<!-- <h5 *ngIf=\\\"spinner\\\"> Connecting to Flexcube...Please Wait !!!</h5>\\r\\n<mat-spinner [diameter]=\\\"70\\\"  *ngIf=\\\"authprocess\\\"></mat-spinner> -->\\r\\n<!--<mat-progress-bar mode=\\\"indeterminate\\\" *ngIf=\\\"spinner\\\"></mat-progress-bar>-->\\r\\n<div fxLayout=\\\"row\\\">\\r\\n  <div fxFlex></div>\\r\\n  <div fxFlex=\\\"95\\\">\\r\\n    <mat-card style=\\\"width: 50%; margin-left:300px;\\\">\\r\\n      <mat-card-title>\\r\\n      </mat-card-title>\\r\\n      <mat-card-content>\\r\\n        <div fxLayout=\\\"row\\\">\\r\\n          <table id=\\\"customers\\\" *ngIf=\\\"flag\\\">\\r\\n            <tr>\\r\\n              <th>Input By:</th>\\r\\n              <td>\\r\\n                <mat-chip *ngIf=\\\"auth\\\">{{this.pendingForAuthDetailsDTOList[0].inputBy}}</mat-chip>\\r\\n              </td>\\r\\n              <th>Input Date:</th>\\r\\n              <td>\\r\\n                <mat-chip *ngIf=\\\"auth\\\">{{this.pendingForAuthDetailsDTOList[0].inputTime |  date: 'MM/dd/yyyy, h:mm a'}}\\r\\n                </mat-chip>\\r\\n              </td>\\r\\n            </tr>\\r\\n\\r\\n\\r\\n            <tr>\\r\\n              <th>Amend Auth By:</th>\\r\\n              <td>\\r\\n                <mat-chip *ngIf=\\\"auth\\\">{{this.pendingForAuthDetailsDTOList[0].secondTimeAuthorizer}}</mat-chip>\\r\\n              </td>\\r\\n              <th>Amend Auth Date:</th>\\r\\n              <td>\\r\\n                <mat-chip *ngIf=\\\"auth\\\">\\r\\n                  {{this.pendingForAuthDetailsDTOList[0].secondTimeAuthTimeStamp | date: 'MM/dd/yyyy, h:mm a'}}\\r\\n                </mat-chip>\\r\\n              </td>\\r\\n            </tr>\\r\\n            <tr>\\r\\n              <th>Frist Auth By:</th>\\r\\n              <td>\\r\\n                <mat-chip *ngIf=\\\"auth\\\">{{this.firstLevelAuthorizationStatus.authorizer}}</mat-chip>\\r\\n              </td>\\r\\n              <th> Frist Auth Date:</th>\\r\\n              <td>\\r\\n                <mat-chip *ngIf=\\\"auth\\\">{{this.firstLevelAuthorizationStatus.authDate}}</mat-chip>\\r\\n              </td>\\r\\n\\r\\n            </tr>\\r\\n          </table>\\r\\n        </div>\\r\\n      </mat-card-content>\\r\\n    </mat-card>\\r\\n  </div>\\r\\n</div>\\r\\n<!-- footer starts -->\\r\\n<br><br>\"","import { Routes, RouterModule } from \"@angular/router\";\r\nimport { ExcelDataAuthorizationFirstComponent } from \"./excel-data-authorization-first.component\";\r\n\r\nexport const firstAuthRoutes: Routes = [\r\n  {\r\n    path: \"\",\r\n    component: ExcelDataAuthorizationFirstComponent\r\n  }\r\n];\r\n","export default \"table {\\n  border-collapse: initial;\\n  width: 100%;\\n  text-align: center !important;\\n}\\n\\n.mat-header-cell {\\n  text-align: center;\\n  height: 22px !important;\\n}\\n\\n.mat-cell {\\n  text-align: center;\\n  height: 22px !important;\\n}\\n\\ntr:nth-child(even) {\\n  background-color: #f2f2f2;\\n  height: 22px !important;\\n  font-weight: lighter;\\n}\\n\\nth {\\n  background-color: #1b9ab9;\\n  color: #f4fcf6;\\n  font-weight: lighter;\\n  height: 22px !important;\\n}\\n\\ntr {\\n  background-color: #b8def0;\\n  color: #221d1d;\\n  font-weight: lighter;\\n  height: 22px !important;\\n  padding-top: 5px;\\n}\\n\\nmat-paginator {\\n  width: auto !important;\\n  height: 40px !important;\\n}\\n\\nmd-pagination-wrapper {\\n  width: auto !important;\\n  height: 40px !important;\\n}\\n\\nmd-row:nth-child(even) {\\n  background-color: #edf1f5;\\n}\\n\\nmd-row:nth-child(odd) {\\n  background-color: #fdfdfb;\\n}\\n\\np {\\n  padding-left: 510px;\\n}\\n\\nh1 {\\n  color: #b60c61;\\n  font-family: Impact, Charcoal, sans-serif;\\n  font-size: 32px;\\n  font-weight: bold;\\n  margin-top: 0px;\\n  margin-bottom: 1px;\\n}\\n\\nh3 {\\n  color: #06010e;\\n  font-family: Charcoal, sans-serif;\\n  font-size: 30px;\\n  font-weight: bold;\\n  margin-top: 0px;\\n  margin-bottom: 1px;\\n}\\n\\n/*footer*/\\n\\n.no-hover-effect.mat-raised-button {\\n  background-color: #4f39cf;\\n  color: #f3edf0;\\n}\\n\\n.no-hover-effect.mat-stroked-button {\\n  background-color: #4f39cf;\\n  color: #fffdfe;\\n}\\n\\nh5 {\\n  font-size: 14px;\\n}\\n\\n#customers {\\n  border-collapse: collapse;\\n  width: 100%;\\n}\\n\\n#customers td, #customers th {\\n  border: 1px solid #ddd;\\n  padding: 8px;\\n  text-align: center;\\n  font-size: x-small;\\n}\\n\\n#customers td mat-chip {\\n  font-size: x-small;\\n}\\n\\n#customers tr:nth-child(even) {\\n  background-color: #f2f2f2;\\n}\\n\\n#customers th {\\n  padding-top: 8px;\\n  padding-bottom: 9px;\\n  text-align: left;\\n  background-color: #61b2d8;\\n  color: white;\\n}\\n\\n.devDiv {\\n  align-items: center;\\n}\\n\\n.pendingAuthCss {\\n  background-color: #fcf9f9;\\n  right: 50px;\\n  left: 50px;\\n}\\n\\n.wrapper {\\n  text-align: center;\\n}\\n\\n.centeredButton mat-raised-button {\\n  position: absolute;\\n  top: 20%;\\n}\\n\\n/*\\n*css added by dev on 12/nov\\n*/\\n\\n.mat-raised-button {\\n  width: -webkit-fit-content;\\n  width: -moz-fit-content;\\n  width: fit-content;\\n  height: 0.2ch;\\n  line-height: 27px;\\n  min-height: 27px;\\n  vertical-align: top;\\n  font-size: 11px;\\n  padding: 0 0;\\n  margin: 0;\\n}\\n/*# sourceMappingURL=data:application/json;base64, */\"","import {\r\n  Component,\r\n  OnInit, \r\n  QueryList,\r\n  ViewChildren,\r\n  ɵConsole\r\n} from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { FormControl } from '@angular/forms';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport {\r\n  PendingForAuthDTO,\r\n  GetDetailsQueryToggleReqDTO,\r\n  DeUploadReqDTO,\r\n  DeUploadRespStatusEntity\r\n} from '../../shared/models/pending-for-auth-dto';\r\nimport { PendingForAuthDetailsDTO, PendingForAuthDetailsHistEntity } from '../../shared/models/pending-for-auth-datails-dto';\r\nimport { ApiService } from 'src/app/shared/services/api.service';\r\nimport { ModalExcelAuthFirstComponent } from '../modals/modal-excel-auth-first/modal-excel-auth-first.component';\r\nimport Swal from 'sweetalert2';\r\nimport { User } from 'src/app/shared/models/user';\r\nimport { FirstAndSecondAuthAuditLogRespDTO, DataForProcessScreen } from './audit-logs-dto-first-second';\r\nimport { ModalAuditTransactionDetailsComponent } from '../modals/modal-audit-transaction-details/modal-audit-transaction-details.component';\r\nimport { UsersService } from '../users/users.service';\r\nimport { analyzeAndValidateNgModules } from '@angular/compiler';\r\nimport { ExcelService } from 'src/app/shared/services/excel.service';\r\nimport { DatePipe } from '@angular/common';\r\nimport { RoleService } from '../roles1/roles.service';\r\nimport { permissionsLabels } from '../roles1/models/fmosNewRolePermissions';\r\nimport 'jspdf-autotable';\r\n\r\nimport jsPDF from 'jspdf';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-excel-data-authorization-first',\r\n  templateUrl: './excel-data-authorization-first.component.html',\r\n  styleUrls: ['./excel-data-authorization-first.component.scss']\r\n})\r\nexport class ExcelDataAuthorizationFirstComponent implements OnInit {\r\n  constructor(\r\n    private api: ApiService,\r\n    private roleService: RoleService,\r\n    public dialog: MatDialog,\r\n    private userApi: UsersService,\r\n    private snackBar: MatSnackBar,\r\n    private excelService: ExcelService,\r\n    public datepipe: DatePipe\r\n  ) { }\r\n  spinner1: boolean;\r\n  data2: any;\r\n  rejectReason: string;\r\n  roleCodes = new permissionsLabels();\r\n  @ViewChildren(MatPaginator) paginator = new QueryList<MatPaginator>();\r\n\r\n  medDeUploadDetailHistEntityList: Array<PendingForAuthDetailsHistEntity>;\r\n  button1: boolean;\r\n  approveButtonStatus = true;\r\n  // tslint:disable-next-line: no-inferrable-types\r\n  spinner: boolean = false;\r\n  authprocess: boolean;\r\n  firstAndSecondAuthAuditLogRespDTO: FirstAndSecondAuthAuditLogRespDTO = new FirstAndSecondAuthAuditLogRespDTO();\r\n  deUploadStatus: DeUploadRespStatusEntity;\r\n  responseforDE: any;\r\n  firstLevelAuthorizationStatus: any;\r\n  deUploadReqDTO: DeUploadReqDTO;\r\n  auth: boolean;\r\n  excelDataAuthFirstDetails = new User();\r\n  approval: boolean;\r\n  process: boolean;\r\n  flag = false;\r\n  reject1: boolean;\r\n  remarks: any;\r\n  reasonBoolean: boolean;\r\n  public pendingForAuthData: any;\r\n\r\n  public pendingForAuthDetailsDTOList: any;\r\n\r\n  public queriedPendingForAuthDetailsDTOList: any;\r\n  public dummyQenPMJNuqUwhg5W8UMFs66YBXrBVhhZzMFt = new Array<\r\n    PendingForAuthDetailsDTO\r\n  >();\r\n\r\n  public dummyPendingForAuthDataDetails: Array<PendingForAuthDetailsDTO>;\r\n\r\n  getDetailsQueryToggleReqDTO: GetDetailsQueryToggleReqDTO;\r\n\r\n  items: number[] = [10, 20, 30, 40];\r\n  name = new FormControl('');\r\n\r\n  deUploadPendingForAuthDTO: PendingForAuthDTO;\r\n\r\n  dataSource = new MatTableDataSource<PendingForAuthDetailsDTO>(\r\n    this.dummyPendingForAuthDataDetails\r\n  );\r\n  dataSourcePendingForAuth = new MatTableDataSource<PendingForAuthDTO>(\r\n    this.pendingForAuthData\r\n  );\r\n\r\n  displayedColumns: string[] = [\r\n    'account',\r\n    'ccyCd',\r\n    'branchCode',\r\n    'amount',\r\n    'lcyEquivalent',\r\n    'drCr',\r\n    'exchRate',\r\n    'relatedAccount',\r\n    \r\n    'addlText',\r\n    'accDesc',\r\n    'treasuryReference',\r\n    'view'\r\n  ];\r\n\r\n  displayedColumnsPendingAuth: string[] = [\r\n    'detailsQueryToggle',\r\n    'externalSysName',\r\n    'currency',\r\n    'inputBy',\r\n    'batchNumber',\r\n    'processName',\r\n    'processingDate',\r\n    'authStatus',\r\n    'uploadStatus',\r\n    'filename',\r\n    'remarks',\r\n    'overrides',\r\n    'totalNoOfRecord',\r\n    'totalCredit',\r\n    'totalDebit'\r\n\r\n  ];\r\n  user_id: any;\r\n  overrides: string;\r\n  screenName: any;\r\n  role: any;\r\n  res: any;\r\n  rolepermission: any;\r\n  button_permission: any = {};\r\n  responsefordown: any;\r\n  datarejection: any;\r\n  pipe = new DatePipe('en-US');\r\n  now = Date.now();\r\n  todaydate: string;\r\n  uploaddate: string;\r\n  credit: any;\r\n  debit: any;\r\n  pdfCreditVar: any;\r\n  pdfDebitVar: any;\r\n  valueDate:any;\r\n  dataForProcessScreen: DataForProcessScreen[] = new Array<DataForProcessScreen>();\r\n  dataForProcessScreenSingle: DataForProcessScreen = new DataForProcessScreen();\r\n  dataForProcessScreen1: any[] = [];\r\n\r\n\r\n  ngOnInit() {\r\n    setTimeout(() => {\r\n      this.newRolePermissions();\r\n    }, 2000);\r\n    this.roleService.screenLabelList.subscribe(message => this.roleCodes = message);\r\n    this.flag = false;\r\n    this.firstLevelAuthorizationStatus = {};\r\n    this.approveButtonStatus = false;\r\n    this.user_id = sessionStorage.getItem('user_id');\r\n    this.role = sessionStorage.getItem('user_role');\r\n    this.getPendingForAuthData();\r\n    // this.screenpermission();\r\n    this.dummyQenPMJNuqUwhg5W8UMFs66YBXrBVhhZzMFt = new Array<PendingForAuthDetailsDTO>();\r\n  }\r\n\r\n  screenpermission() {\r\n    this.screenName = 'UploadProcessAuthorization';\r\n    // this.role='ROLE1';\r\n    this.userApi.getRoleScreenPermission(this.user_id, this.screenName, this.role).subscribe(res => {\r\n      this.rolepermission = res;\r\n      // console.log(this.rolepermission);\r\n      if (this.rolepermission) {\r\n        this.button_permission = this.rolepermission[0];\r\n        // console.log( this.button_permission);\r\n      }\r\n    });\r\n\r\n  }\r\n  applyFilter(filterValue: string) {\r\n    this.dataSourcePendingForAuth.filter = filterValue.trim().toLowerCase();\r\n  }\r\n  reject() {\r\n    this.reasonBoolean = true;\r\n    if (!this.rejectReason) {\r\n      Swal.fire(\"Enter the reason for Rejection\");\r\n    }\r\n\r\n    console.log(\"rejectreason\" + this.rejectReason);\r\n    if (this.pendingForAuthDetailsDTOList[0].inputBy == this.user_id) {\r\n      Swal.fire('Maker cannot reject the record.');\r\n      return;\r\n    }\r\n    this.authprocess = true;\r\n    this.approveButtonStatus = false;\r\n    this.deUploadReqDTO = new DeUploadReqDTO();\r\n    this.deUploadReqDTO.pendingForAuthDTO = this.deUploadPendingForAuthDTO;\r\n    this.deUploadReqDTO.pendingForAuthDetailsDTOList = this.pendingForAuthDetailsDTOList;\r\n    this.api.rejectCallApi(this.deUploadReqDTO, this.user_id, this.rejectReason).subscribe(resp => {\r\n      this.datarejection = resp;\r\n      console.log(this.datarejection);\r\n      if (this.datarejection) {\r\n\r\n        Swal.fire('Rejection successful.');\r\n      } else {\r\n        Swal.fire('Rejection failed.');\r\n\r\n      }\r\n      this.reasonBoolean = false;\r\n      this.authprocess = false;\r\n    });\r\n    this.getPendingForAuthData();\r\n    this.dummyPendingForAuthDataDetails = [];\r\n    this.dataSource = new MatTableDataSource<PendingForAuthDetailsDTO>(\r\n      this.dummyPendingForAuthDataDetails\r\n    );\r\n  }\r\n\r\n  newRolePermissions() {\r\n    this.roleService.fetchScreenPermissions('Authorize Excel');\r\n  }\r\n  approveDetailsData() {\r\n\r\n    if (this.pendingForAuthDetailsDTOList) {\r\n\r\n      this.todaydate = this.pipe.transform(this.now, 'dd-MMM-yy');\r\n      this.uploaddate = this.pipe.transform(this.pendingForAuthDetailsDTOList[0].uploadDate, 'dd-MMM-yy');\r\n      console.log('date for compare', this.todaydate, this.uploaddate);\r\n      if (this.todaydate === this.uploaddate) {\r\n      } else {\r\n        console.log('inside if');\r\n        Swal.fire('Unable to authorized.', 'backdated authorization not allowed.');\r\n        return;\r\n      }\r\n\r\n    }\r\n\r\n    if (this.pendingForAuthDetailsDTOList[0].inputBy == this.user_id) {\r\n      Swal.fire('Maker cannot authorize and process the record.');\r\n      return;\r\n    }\r\n\r\n\r\n    this.authprocess = true;\r\n    this.approveButtonStatus = false;\r\n    this.deUploadReqDTO = new DeUploadReqDTO();\r\n    this.deUploadReqDTO.pendingForAuthDTO = this.deUploadPendingForAuthDTO;\r\n    this.deUploadReqDTO.pendingForAuthDetailsDTOList = this.pendingForAuthDetailsDTOList;\r\n\r\n    console.log('for authorization', this.deUploadReqDTO);\r\n    this.api.approveDetailsData(this.deUploadReqDTO, this.user_id).subscribe(resp => {\r\n      this.firstLevelAuthorizationStatus = resp;\r\n      console.log(this.firstLevelAuthorizationStatus);\r\n      this.authprocess = false;\r\n      if (!this.firstLevelAuthorizationStatus) {\r\n        // this.openSnackBarLongDuration('Data Failed for first Level authorization', '');\r\n        Swal.fire('Data authorization is failed.');\r\n        return;\r\n      }\r\n      if (this.firstLevelAuthorizationStatus) {\r\n\r\n        this.process = true;\r\n        // refresh the data\r\n        this.getPendingForAuthData();\r\n        this.approval = false;\r\n        // this.openSnackBarLongDuration('Data Successfully authorized to first level', '');\r\n        // console.log('Data Successfully authorized to first level');\r\n        // Swal.fire(\r\n        //   'Data Successfully authorized.',\r\n        //   'We are processing the data .....',\r\n        // );\r\n        // 2nd api calling FOR AUDIT LOG REFRESH\r\n        // console.log(this.getDetailsQueryToggleReqDTO);\r\n        // this.getDataWithAudit(this.getDetailsQueryToggleReqDTO);\r\n\r\n        // call the process.\r\n        this.Process();\r\n      }\r\n    },\r\n      error => {\r\n        Swal.fire({\r\n          type: 'error',\r\n          title: 'Server Error.',\r\n          text: 'Data authorization failed.',\r\n        });\r\n\r\n      });\r\n    this.getPendingForAuthData();\r\n    this.dummyPendingForAuthDataDetails = [];\r\n    this.dataSource = new MatTableDataSource<PendingForAuthDetailsDTO>(\r\n      this.dummyPendingForAuthDataDetails\r\n    );\r\n  }\r\n  // getDataWithAudit(getDetailsQueryToggleReqDTO){\r\n\r\n  //   this.api\r\n  //   .queryDetailsDataByParamService(getDetailsQueryToggleReqDTO)\r\n  //   .subscribe(resp => {\r\n  //     this.data2=resp;\r\n  //     console.log('for audit log',this.data2);\r\n  //   });\r\n  // }\r\n  Process() {\r\n    this.spinner = true;\r\n    this.deUploadReqDTO = new DeUploadReqDTO();\r\n    this.deUploadReqDTO.pendingForAuthDTO = this.deUploadPendingForAuthDTO;\r\n    this.deUploadReqDTO.pendingForAuthDetailsDTOList = this.pendingForAuthDetailsDTOList;\r\n    this.flag = false;\r\n    console.log(this.deUploadReqDTO);\r\n    // processDeUpload\r\n    this.api.processDeUploadt(this.deUploadReqDTO, this.user_id).subscribe(resp => {\r\n      // this.deUploadStatus = resp;\r\n      this.responseforDE = resp;\r\n      console.log('Response ::' + this.responseforDE);\r\n      if (!this.responseforDE) {\r\n        this.spinner = false;\r\n        // this.openSnackBarLongDuration('Data Failed to Upload In Demodule', '');\r\n        Swal.fire({\r\n          type: 'error',\r\n          title: 'Unable to connect core banking.',\r\n          text: 'Server Failed to process the request.',\r\n        });\r\n      } else {\r\n        this.spinner = false;\r\n        // Swal.fire(\r\n        //   'Response for the process : ' + this.responseforDE,\r\n\r\n        // );\r\n      }\r\n      // if (this.deUploadStatus.statusMessage == 'SUCCESS') {\r\n      //   this.spinner = false;\r\n      //   // this.openSnackBarLongDuration('Data Successfully Uploaded TO DeUpload', '');\r\n      //   Swal.fire(\r\n      //     \r\n      //     'Data Successfully Uploaded TO DeUpload ',\r\n      //     'success'\r\n      //   );\r\n      // }\r\n    },\r\n    );\r\n    // this.spinner = false;\r\n  }\r\n\r\n  getAuditLogData(getDetailsQueryToggleReqDTO: GetDetailsQueryToggleReqDTO) {\r\n    this.api\r\n      .getFirstAndSecondAuthAuditService(this.getDetailsQueryToggleReqDTO)\r\n      .subscribe(resp => {\r\n        this.firstAndSecondAuthAuditLogRespDTO = resp;\r\n      });\r\n  }\r\n\r\n  queryDetailsDataByParam(pendingForAuthDTO) {\r\n    this.process = false;\r\n    this.approveButtonStatus = false;\r\n    console.log(pendingForAuthDTO);\r\n    // if (pendingForAuthDTO.uploadStatus == 'U') {\r\n    //     this.approveButtonStatus = true;\r\n    // }\r\n    this.spinner1 = true;\r\n    this.remarks = pendingForAuthDTO.remarks;\r\n    //var arrayOfLines = $('#textAreaID').val().split('\\n');\r\n    this.overrides = pendingForAuthDTO.overrides;\r\n    this.deUploadPendingForAuthDTO = pendingForAuthDTO;\r\n\r\n    this.getDetailsQueryToggleReqDTO = new GetDetailsQueryToggleReqDTO();\r\n    this.getDetailsQueryToggleReqDTO.externalSysName =\r\n      pendingForAuthDTO.externalSysName;\r\n    this.getDetailsQueryToggleReqDTO.processName =\r\n      pendingForAuthDTO.processName;\r\n    this.getDetailsQueryToggleReqDTO.processingDate =\r\n      pendingForAuthDTO.processingDate;\r\n    this.getDetailsQueryToggleReqDTO.currency =\r\n      pendingForAuthDTO.currency;\r\n    this.getDetailsQueryToggleReqDTO.filename =\r\n      pendingForAuthDTO.fileName;\r\n    this.getDetailsQueryToggleReqDTO.batchNumber =\r\n      pendingForAuthDTO.batchNumber;\r\n    this.getDetailsQueryToggleReqDTO.overrides = this.overrides\r\n    console.log(this.getDetailsQueryToggleReqDTO);\r\n    // api call\r\n    this.api\r\n      .queryDetailsDataByParamService(this.getDetailsQueryToggleReqDTO)\r\n      .subscribe(resp => {\r\n        console.log(\"backend row data after query\", resp);\r\n        this.pendingForAuthDetailsDTOList = resp;\r\n        // console.log(this.pendingForAuthDetailsDTOList);\r\n        // console.log(this.pendingForAuthDetailsDTOList[0].secondTimeAuthorizer);\r\n        // edited by pbt\r\n        if (this.pendingForAuthDetailsDTOList[0].inputBy == this.user_id) {\r\n          console.log(this.user_id);\r\n          console.log(\"true\");\r\n          this.reject1 = true;\r\n        }\r\n\r\n        if (this.pendingForAuthDetailsDTOList.length > 0) {\r\n          this.approveButtonStatus = true;\r\n          this.auth = true;\r\n          this.spinner1 = false;\r\n          this.approval = true;\r\n          this.flag = true;\r\n          this.button1 = true;\r\n          this.dataSource = new MatTableDataSource<PendingForAuthDetailsDTO>(\r\n            this.pendingForAuthDetailsDTOList\r\n          );\r\n          this.dataSource.paginator = this.paginator.toArray()[1];\r\n        } else {\r\n          Swal.fire('Data Not Found ');\r\n        }\r\n      });\r\n    this.spinner1 = false;\r\n  }\r\n\r\n  getAllDetailsData() {\r\n    this.api.getDetailsListServiceFirst().subscribe(resp => {\r\n      this.queriedPendingForAuthDetailsDTOList = resp;\r\n      // console.log('data from getAllDetailsData');\r\n      // //console.log(this.queriedPendingForAuthDetailsDTOList.);\r\n      console.log(\"loged in user \", this.user_id);\r\n      // if(this.queriedPendingForAuthDetailsDTOList[0].inputBy== this.user_id)\r\n      // {\r\n      //   console.log(true);\r\n\r\n      // }\r\n      // if(this.queriedPendingForAuthDetailsDTOList[0].inputBy!= this.user_id)\r\n      // {\r\n      //   console.log(false);\r\n\r\n      // }\r\n      this.dataSource = new MatTableDataSource<PendingForAuthDetailsDTO>(\r\n        this.queriedPendingForAuthDetailsDTOList\r\n      );\r\n      this.dataSource.paginator = this.paginator.toArray()[1];\r\n    });\r\n  }\r\n\r\n  getPendingForAuthData() {\r\n    this.api.getPendingForAuthDataFirst(this.user_id).subscribe(resp => {\r\n      // console.log(resp);\r\n      this.pendingForAuthData = resp;\r\n      // console.log(this.pendingForAuthData);\r\n      // console.log(\"*** data will use for audit also\"+this.pendingForAuthData)\r\n      this.dataSourcePendingForAuth = new MatTableDataSource<PendingForAuthDTO>(\r\n        this.pendingForAuthData\r\n      );\r\n\r\n      if (this.pendingForAuthData) {\r\n\r\n        if (this.pendingForAuthData.authStatus === 'A') {\r\n          // detailed data for 2nd table\r\n          this.getAllDetailsData();\r\n          this.process = true;\r\n        } else {\r\n\r\n        }\r\n\r\n      }\r\n      this.dataSourcePendingForAuth.paginator = this.paginator.toArray()[0];\r\n    });\r\n  }\r\n\r\n  openSnackBar(message: string, action: string) {\r\n    this.snackBar.open(message, action, {\r\n      duration: 2000\r\n    });\r\n  }\r\n\r\n  openSnackBarLongDuration(message: string, action: string) {\r\n    this.snackBar.open(message, action, {\r\n      duration: 3000\r\n    });\r\n  }\r\n\r\n  findRowsPerExtSys(extSysName: string) {\r\n    this.dummyPendingForAuthDataDetails = new Array<PendingForAuthDetailsDTO>();\r\n\r\n    for (const entry of this.pendingForAuthDetailsDTOList) {\r\n      if (entry.sourceCode === extSysName) {\r\n        // console.log(entry); // 1, \"string\", false\r\n        this.dummyPendingForAuthDataDetails.push(entry);\r\n      }\r\n    }\r\n    this.dataSource = new MatTableDataSource<PendingForAuthDetailsDTO>(\r\n      this.dummyPendingForAuthDataDetails\r\n    );\r\n  }\r\n\r\n  openDialog(detailsDto: PendingForAuthDetailsDTO) {\r\n    const dialogRef = this.dialog.open(ModalExcelAuthFirstComponent, {\r\n      data: detailsDto\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      // console.log(`Dialog result: ${result}`);\r\n    });\r\n  }\r\n\r\n  openAuditDetails(detailsDto: PendingForAuthDetailsDTO) {\r\n    // //console.log(\"inside open audit details\");\r\n    this.api.getAuditDataOfDetailsRecord(detailsDto).subscribe(resp => {\r\n      this.medDeUploadDetailHistEntityList = resp;\r\n      // //console.log(this.medDeUploadDetailHistEntityList);\r\n\r\n      const dialogRef = this.dialog.open(ModalAuditTransactionDetailsComponent, {\r\n        data: this.medDeUploadDetailHistEntityList\r\n      });\r\n\r\n      dialogRef.afterClosed().subscribe(result => {\r\n        // console.log(`Dialog result: ${result}`);\r\n      });\r\n    });\r\n  }\r\n  \r\n  downloadData() {\r\n    this.button1 = false;\r\n    console.log(this.pendingForAuthDetailsDTOList);\r\n    this.pendingForAuthDetailsDTOList.forEach((element) => {\r\n      if (element.drCr == 'C') {\r\n        this.credit = element.lcyEquivalent;\r\n        this.debit = 0;\r\n      } else {\r\n        this.debit = element.lcyEquivalent;\r\n        this.credit = 0;\r\n      }\r\n      this.dataForProcessScreen1.push({\r\n        Batch_No: element.id.batchNo, //1\r\n        //Refrence No : element.id.refNo, // 2 skiiping this user can see this in FlexCube\r\n        Account_Branch: element.accountBranch, //3\r\n        Account: element.account, //4\r\n        Acc_Desc: element.accDesc, //5\r\n        DrCr: element.drCr, //6\r\n        Trn_Code: element.txnCode, //7\r\n        Transaction_Desc : element.trnDesc, //8\r\n        FcyAmount: element.amount, //9\r\n        Exch_Rate: element.exchRate, //10\r\n        DrLcyAmt : this.debit, //11\r\n        CrLcyAmt : this.credit, //12\r\n        Instr_code : element.instrumentNo, //13\r\n        Value_Date: this.pipe.transform(element.valueDate, 'dd-MMM-yy'), //14\r\n        User_Id: element.inputBy, //15\r\n        Authorizer_ID : element.firstTimeAuthorizer, //16\r\n      });  \r\n      console.log(this.dataForProcessScreen1);\r\n    });\r\n    console.log('final data', this.dataForProcessScreen1);\r\n    this.excelService.exportAsExcelFile(this.dataForProcessScreen1, 'Excel_Upload_Data'); // this.pendingForAuthDetailsDTOList[0]\r\n\t this.dataForProcessScreen1=[];\r\n  }\r\n\r\n//pdf download\r\n  convert() {\r\n    var doc = new jsPDF({\r\n      orientation: \"landscape\",\r\n      \r\n    });\r\n    doc.setFont(\"helvetica\");\r\n    doc.setFontType(\"bold\");\r\n    doc.setFontSize(9);\r\n    var col = [[\"BatchNo\",  // 1\r\n            //Refrence No : // 2 skiiping this, user can see this in FlexCube\r\n            \"AccBranch\", // 3\r\n            \"Acc\",  // 4\r\n            \"AccDesc\", // 5\r\n            \"DrCr\", // 6\r\n            \"TrnCode\", // 7,\r\n            \"TrnDesc\",  // 8\r\n            \"FcyAmt\", // 9\r\n            \"Rate\", // 10\r\n            \"DrLcyAmt\", // 11\r\n            \"CrLcyAmt\", // 12\r\n            \"InstrCode\", // 13\r\n            \"ValueDate\", // 14\r\n            \"UserId\" , // 15\r\n            \"AuthId\"]]; // 16\r\n\r\n    var rows = [];\r\n\r\n    /* The following array of object as response from the API req */\r\n    console.log(this.pendingForAuthDetailsDTOList);\r\n    var itemNew = this.pendingForAuthDetailsDTOList;\r\n\r\n    itemNew.forEach(element => {\r\n      /** For finding out is lcyAmount \r\n       * is debited or credited based on that will\r\n       * assign value to credit/debit field\r\n      */\r\n      if (element.drCr == 'C') {\r\n        this.pdfCreditVar = element.lcyEquivalent;\r\n        this.pdfDebitVar = 0;\r\n      } else {\r\n        this.pdfDebitVar = element.lcyEquivalent;\r\n        this.pdfCreditVar = 0;\r\n      }\r\n      this.valueDate = this.pipe.transform(element.valueDate, 'dd-MMM-yy'); //14\r\n      // this.valueDate = new Date(element.valueDate);\r\n      var date = new Date(element.timeForExport).toLocaleDateString(\"en-us\");\r\n      console.log(date)\r\n      var temp = [element.id.batchNo, // 1\r\n                  // Refrence No : element.id.refNo, // 2 skiiping this user can see this in FlexCube\r\n                  element.accountBranch, // 3\r\n                  element.account,  // 4\r\n                  element.accDesc, //5\r\n                  element.drCr, //6\r\n                  element.txnCode, //7\r\n                  element.trnDesc, //8\r\n                  element.amount, //9\r\n                  element.exchRate, //10\r\n                  this.pdfDebitVar, //11\r\n                  this.pdfCreditVar, //12\r\n                  element.instrumentNo, //13\r\n                  this.valueDate, //14\r\n                  element.inputBy, //15\r\n                  element.firstTimeAuthorizer]; //16\r\n      rows.push(temp);\r\n    });\r\n    //doc.autoTable(col, rows);\r\n    doc.autoTable({\r\n      head: col,\r\n      body: rows,\r\n      theme: 'striped',\r\n      margin: {top: 25, bottom: 15},\r\n      styles: {overflow: 'linebreak',\r\n              fontSize: 8},\r\n      showHeader: 'everyPage',\r\n    });\r\n    doc.save('ExcelDAtaAuthFirst.pdf');\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { ExcelDataAuthorizationFirstComponent } from './excel-data-authorization-first.component';\r\nimport { RouterModule } from '@angular/router';\r\nimport { SharedModule } from 'src/app/shared/shared.module';\r\nimport { firstAuthRoutes } from './excel-data-authorization-first-routing.module';\r\nimport { AngularMaterialModule } from 'src/app/shared/angular-material/angular-material.module';\r\nimport { ModalAuditTransactionDetailsComponent } from '../modals/modal-audit-transaction-details/modal-audit-transaction-details.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [ExcelDataAuthorizationFirstComponent],\r\n  entryComponents: [],\r\n  imports: [\r\n    CommonModule,\r\n    SharedModule,\r\n    AngularMaterialModule,\r\n    RouterModule.forChild(firstAuthRoutes),\r\n  ]\r\n})\r\nexport class ExcelDataAuthorizationFirstModule { }\r\n"],"sourceRoot":"webpack:///","file":"views-excel-data-authorization-first-excel-data-authorization-first-module-es5.js"}