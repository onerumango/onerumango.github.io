{"version":3,"sources":["./src/app/views/account-blocking/account-blocking.component.html","./src/app/views/account-blocking/account-customer-search/account-customer-search.component.html","./src/app/views/account-blocking/view-on-account-blocking/view-on-account-blocking.component.html","./node_modules/rxjs/internal/BehaviorSubject.js","./node_modules/rxjs/internal/Observable.js","./node_modules/rxjs/internal/Observer.js","./node_modules/rxjs/internal/Subject.js","./node_modules/rxjs/internal/SubjectSubscription.js","./node_modules/rxjs/internal/Subscriber.js","./node_modules/rxjs/internal/Subscription.js","./node_modules/rxjs/internal/config.js","./node_modules/rxjs/internal/symbol/observable.js","./node_modules/rxjs/internal/symbol/rxSubscriber.js","./node_modules/rxjs/internal/util/ObjectUnsubscribedError.js","./node_modules/rxjs/internal/util/UnsubscriptionError.js","./node_modules/rxjs/internal/util/canReportError.js","./node_modules/rxjs/internal/util/hostReportError.js","./node_modules/rxjs/internal/util/isArray.js","./node_modules/rxjs/internal/util/isFunction.js","./node_modules/rxjs/internal/util/isObject.js","./node_modules/rxjs/internal/util/noop.js","./node_modules/rxjs/internal/util/pipe.js","./node_modules/rxjs/internal/util/toSubscriber.js","./src/app/views/account-blocking/AccountBlocking.ts","./src/app/views/account-blocking/account-blocking-routing.module.ts","./src/app/views/account-blocking/account-blocking.component.css","./src/app/views/account-blocking/account-blocking.component.ts","./src/app/views/account-blocking/account-blocking.module.ts","./src/app/views/account-blocking/account-customer-search/FCUBSAccsCustomerQueryResDTO.ts","./src/app/views/account-blocking/account-customer-search/account-customer-search.component.css","./src/app/views/account-blocking/account-customer-search/account-customer-search.component.ts","./src/app/views/account-blocking/account-customer-search/dataservice.ts","./src/app/views/account-blocking/view-on-account-blocking/view-on-account-blocking.component.css","./src/app/views/account-blocking/view-on-account-blocking/view-on-account-blocking.component.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAe,mHAAoD,kBAAkB,sQAAsQ,gCAAgC,oDAAoD,8DAA8D,6zDAA6zD,0BAA0B,qiBAAqiB,+BAA+B,8DAA8D,iyDAAiyD,0BAA0B,g3FAAg3F,0GAA0G,QAAQ,oEAAoE,uT;;;;;;;;;;;;ACAvyP;AAAe,mHAAoD,kBAAkB,yXAAyX,mCAAmC,oCAAoC,qCAAqC,sCAAsC,kJAAkJ,6pLAA6pL,sPAAsP,MAAM,k7BAAk7B,sBAAsB,mOAAmO,wBAAwB,6OAA6O,uBAAuB,8OAA8O,YAAY,iPAAiP,oBAAoB,4OAA4O,qBAAqB,iPAAiP,kBAAkB,sQAAsQ,sBAAsB,qUAAqU,yBAAyB,2RAA2R,yBAAyB,oSAAoS,qBAAqB,2/BAA2/B,2BAA2B,ylBAAylB,iBAAiB,6PAA6P,kBAAkB,2OAA2O,gBAAgB,oOAAoO,cAAc,6NAA6N,SAAS,6OAA6O,eAAe,uOAAuO,YAAY,qOAAqO,eAAe,mOAAmO,cAAc,+NAA+N,wBAAwB,4NAA4N,WAAW,+NAA+N,WAAW,kOAAkO,YAAY,uNAAuN,cAAc,6MAA6M,aAAa,qMAAqM,aAAa,g4BAAg4B,cAAc,oQAAoQ,gBAAgB,orBAAorB,4BAA4B,4jBAA4jB,WAAW,kOAAkO,eAAe,qNAAqN,WAAW,6NAA6N,mBAAmB,mNAAmN,cAAc,oNAAoN,cAAc,kNAAkN,sBAAsB,wOAAwO,eAAe,kOAAkO,cAAc,8NAA8N,iBAAiB,oOAAoO,WAAW,yOAAyO,eAAe,kLAAkL,4BAA4B,gL;;;;;;;;;;;;ACAzmpB;AAAe,oiBAAqe,gBAAgB,yRAAyR,eAAe,wQAAwQ,gBAAgB,oRAAoR,uBAAuB,wQAAwQ,iBAAiB,iQAAiQ,cAAc,kWAAkW,4BAA4B,gMAAgM,2BAA2B,ga;;;;;;;;;;;;ACAn+E;AACb;AACA;AACA;AACA,cAAc,gBAAgB,sCAAsC,iBAAiB,EAAE;AACvF,6BAA6B,uDAAuD;AACpF;AACA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD,8CAA8C,cAAc;AAC5D,gBAAgB,mBAAO,CAAC,0DAAW;AACnC,gCAAgC,mBAAO,CAAC,oGAAgC;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,2C;;;;;;;;;;;;ACvDa;AACb,8CAA8C,cAAc;AAC5D,uBAAuB,mBAAO,CAAC,kFAAuB;AACtD,qBAAqB,mBAAO,CAAC,8EAAqB;AAClD,mBAAmB,mBAAO,CAAC,wFAA+B;AAC1D,aAAa,mBAAO,CAAC,8DAAa;AAClC,eAAe,mBAAO,CAAC,wDAAU;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,kBAAkB,EAAE,kBAAkB,oBAAoB,EAAE,eAAe,uBAAuB,EAAE;AAC9I,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sC;;;;;;;;;;;;ACpHa;AACb,8CAA8C,cAAc;AAC5D,eAAe,mBAAO,CAAC,wDAAU;AACjC,wBAAwB,mBAAO,CAAC,oFAAwB;AACxD;AACA;AACA,4BAA4B,EAAE;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,2BAA2B;AAC3B;AACA,oC;;;;;;;;;;;;ACjBa;AACb;AACA;AACA;AACA,cAAc,gBAAgB,sCAAsC,iBAAiB,EAAE;AACvF,6BAA6B,uDAAuD;AACpF;AACA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD,8CAA8C,cAAc;AAC5D,mBAAmB,mBAAO,CAAC,gEAAc;AACzC,mBAAmB,mBAAO,CAAC,gEAAc;AACzC,qBAAqB,mBAAO,CAAC,oEAAgB;AAC7C,gCAAgC,mBAAO,CAAC,oGAAgC;AACxE,4BAA4B,mBAAO,CAAC,kFAAuB;AAC3D,qBAAqB,mBAAO,CAAC,4FAAiC;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,SAAS;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,SAAS;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,SAAS;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,mC;;;;;;;;;;;;AC1Ka;AACb;AACA;AACA;AACA,cAAc,gBAAgB,sCAAsC,iBAAiB,EAAE;AACvF,6BAA6B,uDAAuD;AACpF;AACA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD,8CAA8C,cAAc;AAC5D,qBAAqB,mBAAO,CAAC,oEAAgB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,+C;;;;;;;;;;;;AC5Ca;AACb;AACA;AACA;AACA,cAAc,gBAAgB,sCAAsC,iBAAiB,EAAE;AACvF,6BAA6B,uDAAuD;AACpF;AACA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD,8CAA8C,cAAc;AAC5D,mBAAmB,mBAAO,CAAC,0EAAmB;AAC9C,iBAAiB,mBAAO,CAAC,4DAAY;AACrC,qBAAqB,mBAAO,CAAC,oEAAgB;AAC7C,qBAAqB,mBAAO,CAAC,4FAAiC;AAC9D,eAAe,mBAAO,CAAC,wDAAU;AACjC,wBAAwB,mBAAO,CAAC,oFAAwB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qEAAqE,aAAa;AAClmDAAmD,6CAA6C;AAChG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,sC;;;;;;;;;;;;ACvPa;AACb,8CAA8C,cAAc;AAC5D,gBAAgB,mBAAO,CAAC,oEAAgB;AACxC,iBAAiB,mBAAO,CAAC,sEAAiB;AAC1C,mBAAmB,mBAAO,CAAC,0EAAmB;AAC9C,4BAA4B,mBAAO,CAAC,4FAA4B;AAChmGAAmG,EAAE;AACpJ;AACA,wC;;;;;;;;;;;;AC/Ia;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA,kC;;;;;;;;;;;;ACnBa;AACb,8CAA8C,cAAc;AAC5D;AACA,sC;;;;;;;;;;;;ACHa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA,wC;;;;;;;;;;;;ACNa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mD;;;;;;;;;;;;ACVa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA,oGAAoG,sCAAsC,EAAE;AAC5I;AACA;AACA;AACA;AACA;AACA;AACA,+C;;;;;;;;;;;;ACZa;AACb,8CAA8C,cAAc;AAC5D,mBAAmB,mBAAO,CAAC,iEAAe;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0C;;;;;;;;;;;;ACnBa;AACb,8CAA8C,cAAc;AAC5D;AACA,4BAA4B,WAAW,EAAE;AACzC;AACA;AACA,2C;;;;;;;;;;;;ACNa;AACb,8CAA8C,cAAc;AAC5D,kDAAkD,0CAA0C,EAAE;AAC9F,mC;;;;;;;;;;;;ACHa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA,sC;;;;;;;;;;;;ACNa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA,oC;;;;;;;;;;;;ACNa;AACb,8CAA8C,cAAc;AAC5D,iBAAiB;AACjB;AACA,gC;;;;;;;;;;;;ACJa;AACb,8CAA8C,cAAc;AAC5D,aAAa,mBAAO,CAAC,yDAAQ;AAC7B;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,iBAAiB,EAAE;AAClE;AACA;AACA;AACA,gC;;;;;;;;;;;;ACvBa;AACb,8CAA8C,cAAc;AAC5D,mBAAmB,mBAAO,CAAC,iEAAe;AAC1C,qBAAqB,mBAAO,CAAC,mFAAwB;AACrD,iBAAiB,mBAAO,CAAC,6DAAa;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wC;;;;;;;;;;;;;;;;ACpBO,MAAM,uBAAuB;CAkBnC;;;;;;;;;;;;;;;;;;;AChBuE;AACqC;AAEtG,MAAM,WAAW,GAAW;IACjC;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,oFAAwB;KACpC;IACD;QACE,IAAI,EAAE,iBAAiB;QACvB,SAAS,EAAE,yHAA8B;QACzC,SAAS,EAAE,MAAM;QACjB,IAAI,EAAE,EAAE,KAAK,EAAE,kBAAkB,EAAE;KACpC;CACF,CAAC;;;;;;;;;;;;;AChBF;AAAe,iFAAkB,mBAAmB,0BAA0B,OAAO,sBAAsB,yBAAyB,4BAA4B,sCAAsC,4BAA4B,eAAe,oCAAoC,wBAAwB,OAAO,oBAAoB,wBAAwB,OAAO,oBAAoB,wBAAwB,OAAO,4BAA4B,oBAAoB,qBAAqB,0BAA0B,yBAAyB,4BAA4B,wBAAwB,OAAO,uDAAuD,2yC;;;;;;;;;;;;;;;;;;;;;;;;;ACAllB;AACU;AAEuD;AACpF;AAC0E;AAC9B;AAC2B;AAClC;AAOpE,IAAa,wBAAwB,GAArC,MAAa,wBAAwB;IASnC,YAAoB,WAAwB,EAAU,sBAAqD,EACvF,MAAc,EAAU,WAAwB,EAAe,KAAqB;QADpF,gBAAW,GAAX,WAAW,CAAa;QAAU,2BAAsB,GAAtB,sBAAsB,CAA+B;QACvF,WAAM,GAAN,MAAM,CAAQ;QAAU,gBAAW,GAAX,WAAW,CAAa;QAAe,UAAK,GAAL,KAAK,CAAgB;QATxG,kBAAa,GAA4B,IAAI,wEAAuB,EAAE,CAAC;QAOvE,eAAU,GAAE,IAAI,CAAC;QAGjB,gBAAW,GAAG,2BAA2B,CAAC;QAE1C,iBAAY,GAAG,IAAI,kHAA4B,EAAE,CAAC;IAH0D,CAAC;IAK7G,QAAQ;QACN,IAAI,CAAC,WAAW,GAAG,YAAY,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC;QACvD,IAAI,CAAC,WAAW,CAAC,cAAc,EAAE,CAAC,SAAS,CAAC,yBAAyB,CAAC,EAAE;YACvE,IAAI,CAAC,yBAAyB,GAAG,yBAAyB,CAAC;YAC3D,8CAA8C;QAChD,CAAC,CAAC,CAAC;QACH,+CAA+C;QAC9C,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YAC7C,YAAY,EAAE,CAAC,EAAE,CAAC;YAClB,cAAc,EAAE,CAAC,EAAE,CAAC;YACpB,qBAAqB,EAAE,CAAC,EAAE,CAAC;YAC3B,UAAU,EAAE,CAAC,EAAE,CAAC;YAChB,cAAc,EAAE,CAAC,IAAI,CAAC,WAAW,CAAC;YAClC,cAAc,EAAE,CAAC,EAAE,CAAC;YACpB,oBAAoB,EAAE,CAAC,EAAE,CAAC;YAC1B,YAAY,EAAE,CAAC,EAAE,CAAC;YAClB,gBAAgB,EAAE,CAAC,EAAE,CAAC;YACtB,iBAAiB,EAAE,CAAC,EAAE,CAAC;YACvB,kBAAkB,EAAE,CAAC,EAAE,CAAC;YACxB,OAAO,EAAE,CAAC,EAAE,EAAG;YACf,QAAQ,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACpC,0BAA0B;SAC1B,CAAC,CAAC;QAEH,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YACxC,IAAI,CAAC,YAAY,CAAC,SAAS,GAAG,IAAI,CAAC,yBAAyB,CAAC,SAAS,CAAC;YACxE,6CAA6C;YAC5C,IAAI,CAAC,YAAY,CAAC,QAAQ,GAAG,IAAI,CAAC,yBAAyB,CAAC,QAAQ,CAAC;YACrE,2CAA2C;YAC3C,IAAG,CAAC,IAAI,CAAC,YAAY,CAAC,SAAS,EAAC;gBAC9B,IAAI,CAAC,YAAY,CAAC,SAAS,GAAC,EAAE,CAAC;aAChC;YAAA,IAAG,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAC;gBAC7B,IAAI,CAAC,YAAY,CAAC,QAAQ,GAAC,EAAE,CAAC;aAC/B;YACD,IAAI,CAAC,YAAY,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC,SAAS,GAAG,EAAE,GAAG,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC;YAC/F,IAAI,CAAC,YAAY,CAAC,cAAc,GAAG,MAAM,CAAC,cAAc,CAAC;YACzD,IAAI,CAAC,YAAY,CAAC,aAAa,GAAG,MAAM,CAAC,aAAa,CAAC;YAEvD,IAAI,CAAC,YAAY,CAAC,UAAU,GAAG,MAAM,CAAC,UAAU,CAAC;YACjD,IAAI,CAAC,YAAY,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;YAC7C,IAAI,CAAC,YAAY,CAAC,YAAY,GAAG,MAAM,CAAC,KAAK,CAAC;YAC9C,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC;YACxB,oCAAoC;YACpC,iDAAiD;QAEnD,CAAC,CAAC,CAAC;QACH,iDAAiD;IAEnD,CAAC;IAED,eAAe;QACb,IAAI,CAAC,YAAY,CAAC,YAAY,GAAG,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,KAAK,CAAC;QACjF,kDAAkD;QAClD,IAAI,CAAC,YAAY,CAAC,cAAc,GAAG,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC,KAAK,CAAC;QACrF,kDAAkD;QAClD,IAAI,CAAC,aAAa,CAAC,OAAO,GAAG,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,KAAK,CAAC;QACxE,IAAI,CAAC,aAAa,CAAC,cAAc,GAAG,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC,KAAK,CAAC;QACtF,IAAI,CAAC,aAAa,CAAC,YAAY,GAAG,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,KAAK,CAAC;QAClF,IAAI,CAAC,aAAa,CAAC,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC,KAAK,CAAC;QAC1F,IAAI,CAAC,aAAa,CAAC,kBAAkB,GAAG,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,oBAAoB,CAAC,CAAC,KAAK,CAAC;QAC9F,IAAI,CAAC,aAAa,CAAC,iBAAiB,GAAG,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC,KAAK,CAAC;QAC5F,IAAI,CAAC,aAAa,CAAC,cAAc,GAAG,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC,KAAK,CAAC;QACtF,IAAI,CAAC,YAAY,CAAC,UAAU,GAAG,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,KAAK,CAAC;QAC/E,qCAAqC;QACnC,IAAI,CAAC,YAAY,CAAC,aAAa,GAAG,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC,KAAK,CAAC;QAC3F,IAAI,CAAC,YAAY,CAAC,QAAQ,GAAG,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,sBAAsB,CAAC,CAAC,KAAK,CAAC;QACrF,IAAI,CAAC,aAAa,CAAC,kBAAkB,GAAG,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC;QACpF,uDAAuD;QACvD,IAAI,CAAC,aAAa,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC;QACjE,IAAI,CAAC,aAAa,CAAC,oBAAoB,GAAG,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC;QACrE,IAAI,CAAC,aAAa,CAAC,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC;QAC7D,IAAI,CAAC,aAAa,CAAC,cAAc,GAAG,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC;QACrE,IAAI,CAAC,aAAa,CAAC,qBAAqB,GAAG,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC;QAC3E,IAAI,CAAC,aAAa,CAAC,gBAAgB,GAAG,IAAI,CAAC,IAAI,CAAC;QAEhD,mCAAmC;QACnC,oDAAoD;QACpD,IAAI,CAAC,WAAW,GAAG,YAAY,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC;QACvD,IAAI,CAAC,aAAa,CAAC,MAAM,GAAG,IAAI,CAAC,yBAAyB,CAAC,SAAS,CAAC;QACrE,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,kBAAkB,EAAE;YAC5C,+CAA+C;YAC/C,IAAI,CAAC,aAAa,CAAC,kBAAkB,GAAG,KAAK,CAAC;SAC7C;QACD,kCAAkC;QAClC,IAAI,IAAI,CAAC,aAAa,CAAC,YAAY,IAAI,IAAI,CAAC,aAAa,CAAC,cAAc,IAAI,IAAI,CAAC,aAAa,CAAC,gBAAgB,IAAI,IAAI,CAAC,aAAa,CAAC,iBAAiB,IAAI,IAAI,CAAC,aAAa,CAAC,kBAAkB,EAAE;YACjM,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;YAC1B,IAAI,CAAC,sBAAsB,CAAC,YAAY,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;gBAC3E,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;gBACjB,qBAAqB;gBACrB,IAAI,IAAI,CAAC,IAAI,EAAE;oBACb,kDAAI,CAAC,IAAI,CAAC;wBACR,KAAK,EAAE,8BAA8B;qBAGtC,CAAC,CAAC;iBAEJ;qBAAM;oBACL,kDAAI,CAAC,IAAI,CAAC,gCAAgC,CAAC,CAAC;iBAC7C;YACH,CAAC,CAAC,CAAC;YACJ,mDAAmD;YACnD,IAAI,CAAC,oBAAoB,EAAE,CAAC;YACjC,8CAA8C;SAEzC;aAAM;YACL,kDAAI,CAAC,IAAI,CAAE,0BAA0B,EAAE,2CAA2C,CAAC,CAAC;SACrF;IACH,CAAC;IACH,oBAAoB;QAClB,kCAAkC;QAClC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,gCAAgC,CAAC,CAAC;IACzD,CAAC;CAGA;;YAxHkC,0DAAW;YAAkC,sHAA6B;YAC/E,sDAAM;YAAuB,gFAAW;YAAsB,8DAAc;;AAV7F,wBAAwB;IALpC,+DAAS,CAAC;QACT,QAAQ,EAAE,sBAAsB;QAChC,0PAAgD;;KAEjD,CAAC;2EAUiC,0DAAW,EAAkC,sHAA6B;QAC/E,sDAAM,EAAuB,gFAAW,EAAsB,8DAAc;GAV7F,wBAAwB,CAiIpC;AAjIoC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACfI;AAEM;AAEmB;AAC8B;AACxC;AACT;AACyB;AACR;AACjB;AAC8D;AACE;AAC3C;AAkBpE,IAAa,qBAAqB,GAAlC,MAAa,qBAAqB;CAAI;AAAzB,qBAAqB;IAfjC,8DAAQ,CAAC;QACR,YAAY,EAAE,CAAC,oFAAwB,EAAE,0HAA8B,EAAE,4HAA8B,CAAC;QACxG,OAAO,EAAE;YACP,4DAAY;YACZ,0DAAW;YAEX,6GAAqB;YACrB,4DAAgB;YAChB,qEAAgB;YAChB,kEAAmB;YACnB,4DAAY,CAAC,QAAQ,CAAC,4EAAW,CAAC;SACnC;QACD,eAAe,EAAE,CAAC,4HAA8B,CAAC;QACjD,SAAS,EAAE,CAAC,iFAAW,CAAC;KACzB,CAAC;GACW,qBAAqB,CAAI;AAAJ;;;;;;;;;;;;;;;;;AC7B3B,MAAM,4BAA4B;CAWxC;;;;;;;;;;;;;ACbD;AAAe,oFAAqB,oBAAoB,2BAA2B,sBAAsB,8BAA8B,oCAAoC,2BAA2B,+BAA+B,KAAK,sBAAsB,oBAAoB,8BAA8B,8CAA8C,2BAA2B,+BAA+B,8CAA8C,oBAAoB,oBAAoB,0BAA0B,YAAY,YAAY,mBAAmB,0BAA0B,OAAO,cAAc,wCAAwC,4BAA4B,OAAO,0BAA0B,sBAAsB,OAAO,sBAAsB,2BAA2B,OAAO,eAAe,2BAA2B,OAAO,wBAAwB,kCAAkC,aAAa,QAAQ,uCAAuC,kCAAkC,4BAA4B,qBAAqB,2CAA2C,QAAQ,kCAAkC,+BAA+B,4BAA4B,wBAAwB,qBAAqB,OAAO,eAAe,mBAAmB,oBAAoB,KAAK,6BAA6B,sBAAsB,KAAK,iBAAiB,kBAAkB,KAAK,eAAe,0BAA0B,KAAK,+CAA+C,2+F;;;;;;;;;;;;;;;;;;;;;;;;;;ACAv3C;AACZ;AAClD;AAC0E;AAEzB;AACL;AAG/B;AACN;AAMtC,IAAa,8BAA8B,GAA3C,MAAa,8BAA8B;IAezC,YAAoB,sBAAqD,EAChE,MAAiB,EAChB,SAAsB,EACtB,KAAa,EACb,WAAwB,EACxB,UAA0B;QALhB,2BAAsB,GAAtB,sBAAsB,CAA+B;QAChE,WAAM,GAAN,MAAM,CAAW;QAChB,cAAS,GAAT,SAAS,CAAa;QACtB,UAAK,GAAL,KAAK,CAAQ;QACb,gBAAW,GAAX,WAAW,CAAa;QACxB,eAAU,GAAV,UAAU,CAAgB;QAnBpC,wDAAwD;QACxD,cAAS,GAAG,KAAK,CAAC;QAClB,UAAK,GAAG,KAAK,CAAC;QAqBd,cAAS,GAAG,KAAK,CAAC;QAClB,qBAAgB,GAAa,CAAC,eAAe,EAAE,eAAe,CAAC,CAAC;QAChE,4CAA4C;QAC5C,iPAAiP;QACjP,sBAAiB,GAAa,CAAC,aAAa,EAAE,YAAY,EAAE,UAAU,EAAE,KAAK,EAAE,QAAQ,EAAE,WAAW,EAAE,UAAU,EAAE,aAAa,EAAE,OAAO,EAAE,OAAO,EAAE,QAAQ,EAAE,UAAU,EAAE,SAAS,EAAE,SAAS,EAAE,eAAe,CAAC,CAAC;QAEhN,sBAAiB,GAAa,CAAC,OAAO,EAAE,WAAW,EAAE,OAAO,EAAE,WAAW,EAAE,eAAe,EAAE,UAAU,EAAE,UAAU,CAAC,CAAC;QAGpH,eAAU,GAAG,IAAI,oEAAkB,EAAE,CAAC;QAGV,cAAS,GAAG,IAAI,uDAAS,EAAgB,CAAC;IAhB9B,CAAC;IAmBzC,QAAQ;QAEN,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC;YACtC,SAAS,EAAE,CAAC,EAAE,CAAC;YACf,cAAc,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;YACxE,aAAa,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC,EAAE,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;YACzE,QAAQ,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC,EAAE,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC,EAAE,yDAAU,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC,CAAC;YACxG,QAAQ,EAAE,CAAC,EAAE,CAAC;YACd,YAAY,EAAE,CAAC,EAAE,CAAC;YAClB,UAAU,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;YACpE,UAAU,EAAE,CAAC,EAAE,CAAC;SACjB,CAAC,CAAC;QAEH,IAAI,CAAC,OAAO,GAAG,cAAc,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;IACnD,CAAC;IACD,OAAO,CAAC,QAAQ;QACd,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACvB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QACxB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QACxB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QACxB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QACxB,IAAI,QAAQ,EAAE;YACZ,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YACtB,uBAAuB;YACvB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;YACrC,0BAA0B;YAC1B,IAAI,SAAS,GAAG,6CAAY,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE,yBAAyB,CAAC,CAAC;YAE3E,IAAI,OAAO,GAAG,SAAS,CAAC,QAAQ,EAAE,CAAC;YACnC,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;YACrB,IAAI,CAAC,sBAAsB,CAAC,oBAAoB,CAAC,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC;iBACpE,SAAS,CAAC,MAAM,CAAC,EAAE;gBAElB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;gBACrB,4DAA4D;gBAC5D,IAAI,IAAI,CAAC,MAAM,EAAE;oBACf,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;oBACvB,sDAAsD;oBACtD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;oBACtB,IAAI,CAAC,UAAU,GAAG,IAAI,oEAAkB,CACtC,IAAI,CAAC,MAAM,CACZ,CAAC;oBACF,6DAA6D;iBAI9D;qBAAM;oBACL,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;oBACvB,kDAAI,CAAC,IAAI,CAAC;wBAER,IAAI,EAAE,oBAAoB;wBAC1B,IAAI,EAAE,SAAS;qBAChB,CAAC,CAAC;iBACJ;YAEH,CAAC,CAAC,CAAC;YAEL,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;SACnB;aAAM;YACL,kDAAI,CAAC,IAAI,CAAC,6BAA6B,CAAC,CAAC;SAC1C;IACH,CAAC;IACD,eAAe,CAAC,KAAK;QACnB,sBAAsB;QACtB,IAAI,CAAC,mBAAmB,GAAG,KAAK,CAAC;QACjC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,sBAAsB,CAAC,eAAe,EAAE;aAC1C,SAAS,CAAC,mBAAmB,CAAC,EAAE;YAE/B,IAAI,CAAC,mBAAmB,GAAG,mBAAmB,CAAC;YAC/C,0CAA0C;YAC1C,IAAI,IAAI,CAAC,mBAAmB,EAAE;gBAC5B,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;gBACvB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;gBACvB,IAAI,IAAI,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC,MAAM,KAAK,GAAG,EAAE;oBAC9C,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;iBAC1B;gBACD,IAAI,CAAC,WAAW,GAAG,IAAI,oEAAkB,CAAiB,IAAI,CAAC,mBAAmB,CAAC,CAAC;gBACpF,2EAA2E;aAC5E;iBAAM;gBACL,kDAAI,CAAC,IAAI,CAAC,mCAAmC,CAAC,CAAC;aAChD;QACH,CAAC,CAAC,CAAC;IACP,CAAC;IACD,cAAc,CAAC,GAAG;QAChB,6BAA6B;QAC7B,oBAAoB;QACpB,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC;QACrC,MAAM,gBAAgB,GAAqB;YACzC,WAAW,EAAE;gBACX,SAAS,EAAE,GAAG,CAAC,SAAS;gBACxB,QAAQ,EAAE,GAAG,CAAC,QAAQ;gBACtB,cAAc,EAAE,GAAG,CAAC,MAAM;gBAC1B,UAAU,EAAE,GAAG,CAAC,UAAU;gBAC1B,aAAa,EAAE,GAAG,CAAC,QAAQ;gBAC3B,QAAQ,EAAE,GAAG,CAAC,YAAY;gBAC1B,KAAK,EAAE,GAAG,CAAC,KAAK;gBAChB,IAAI,EAAE,IAAI,CAAC,mBAAmB;aAC/B;SAEF,CAAC;QACF,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,eAAe,CAAC,EAAE,gBAAgB,CAAC,CAAC;IAG3D,CAAC;IAED,kBAAkB,CAAC,GAAG;QAEpB,sCAAsC;QACtC,oBAAoB;QAEpB,yBAAyB;QAEzB,6BAA6B;QAC7B,+BAA+B;QAC/B,2BAA2B;QAC3B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,sBAAsB,CAAC,iBAAiB,CAAC,GAAG,CAAC,QAAQ,EAAE,GAAG,CAAC,UAAU,EAAE,GAAG,CAAC,MAAM,CAAC;aACpF,SAAS,CAAC,OAAO,CAAC,EAAE;YACnB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YACvB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;YACvB,8DAA8D;YAC9D,IAAI,IAAI,CAAC,OAAO,EAAE;gBAChB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;gBACvB,IAAI,CAAC,WAAW,GAAG,IAAI,oEAAkB,CAAM,IAAI,CAAC,OAAO,CAAC,CAAC;aAC9D;iBAAM;gBACL,kDAAI,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;aAClC;QACH,CAAC,CAAC,CAAC;IACP,CAAC;CAEF;;YA5J6C,sHAA6B;YACxD,2DAAS;YACL,0DAAW;YACf,sDAAM;YACA,wDAAW;YACZ,8DAAc;;AAgBR;IAA3B,kEAAY,CAAC,8DAAY,CAAC;;iEAA2C;AApC3D,8BAA8B;IAL1C,+DAAS,CAAC;QACT,QAAQ,EAAE,6BAA6B;QACvC,gSAAuD;;KAExD,CAAC;2EAgB4C,sHAA6B;QACxD,2DAAS;QACL,0DAAW;QACf,sDAAM;QACA,wDAAW;QACZ,8DAAc;GApBzB,8BAA8B,CA2K1C;AA3K0C;;;;;;;;;;;;;;;;;;;;AChBA;AACqB;AAIhE,IAAa,WAAW,GAAxB,MAAa,WAAW;IAEtB;QAEQ,YAAO,GAAG,IAAI,6EAAe,CAAM,EAC1C,CAAC,CAAC;IAHa,CAAC;IAKjB,cAAc,CAAC,IAAS;QACtB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC1B,CAAC;IAED,cAAc;QACZ,OAAO,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE,CAAC;IACrC,CAAC;CAKF;AAlBY,WAAW;IADvB,gEAAU,EAAE;;GACA,WAAW,CAkBvB;AAlBuB;;;;;;;;;;;;;ACLxB;AAAe,uEAAQ,oBAAoB,uCAAuC,OAAO,6BAA6B,wBAAwB,oBAAoB,OAAO,oBAAoB,mBAAmB,eAAe,gBAAgB,uCAAuC,kCAAkC,4BAA4B,oBAAoB,2CAA2C,gCAAgC,oBAAoB,qBAAqB,0BAA0B,yBAAyB,4BAA4B,wBAAwB,OAAO,+CAA+C,u5C;;;;;;;;;;;;;;;;;;;ACA9iB;AAC1B;AACmB;AAOpE,IAAa,8BAA8B,GAA3C,MAAa,8BAA8B;IAYzC,YAAoB,WAAuB;QAAvB,gBAAW,GAAX,WAAW,CAAY;QAV3C,qBAAgB,GAAa,CAAC,YAAY,EAAC,WAAW,EAAC,YAAY,EAAC,mBAAmB,EAAC,aAAa,EAAC,UAAU,EAAC,wBAAwB,CAAC,CAAC;QAI/G,cAAS,GAAE,IAAI,uDAAS,EAAgB,CAAC;QAiB7D,eAAU,GAAe,EAAE,CAAC;QAC5B,iBAAY,GAAQ,EAAE,CAAC;IAV/B,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YAC5C,OAAO,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAC,yDAAU,CAAC,KAAK,CAAC,CAAC;SACtD,CAAC,CAAC;IAEL,CAAC;IAKD,aAAa;QACT,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC;QACvC,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;IAC3B,CAAC;IAED,gBAAgB,CAAC,KAAK;QAClB,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;IACrC,CAAC;CAEF;;YAvBiC,0DAAW;;AANf;IAA3B,kEAAY,CAAC,8DAAY,CAAC;;iEAA0C;AAN1D,8BAA8B;IAL1C,+DAAS,CAAC;QACT,QAAQ,EAAE,8BAA8B;QACxC,mSAAwD;;KAEzD,CAAC;2EAagC,0DAAW;GAZhC,8BAA8B,CAmC1C;AAnC0C","file":"views-account-blocking-account-blocking-module-es2015.js","sourcesContent":["export default \"<mat-toolbar color=\\\"primary\\\" style=\\\"height:30px; font-size: small;\\\">\\r\\n    <span>Account Blocking</span>\\r\\n  </mat-toolbar>\\r\\n  <br>\\r\\n  <div fxLayout=\\\"row\\\">\\r\\n    <div fxflex></div>\\r\\n    <div fxFlex fxLayoutGap=\\\"10px\\\">\\r\\n        <form [formGroup]=\\\"accountBlockForm\\\"  >\\r\\n           <mat-card style=\\\"width: 70%;\\r\\n           margin-left: 15%;\\r\\n           background-color: rgb(241, 247, 246);\\\">\\r\\n           <mat-card-content style=\\\"text-align:center;\\\">\\r\\n            <div fxLayoutGap=\\\"20px\\\">\\r\\n  \\r\\n              <mat-form-field class=\\\"full-width\\\"  appearance=\\\"outline\\\">\\r\\n                <mat-label>Customer Name</mat-label>\\r\\n  \\r\\n                <input formControlName=\\\"customerName\\\" matInput placeholder=\\\"Customer Name\\\" readonly [(ngModel)]=accountBlock.customerName/>\\r\\n              </mat-form-field>\\r\\n              \\r\\n              <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\">\\r\\n                  <mat-label>Customer Number</mat-label>\\r\\n                  <input formControlName=\\\"customerNumber\\\" matInput placeholder=\\\"Customer Number\\\" readonly [(ngModel)]=accountBlock.customerNumber/>\\r\\n                  \\r\\n                </mat-form-field>\\r\\n                <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\">\\r\\n                    <mat-label>Account Number</mat-label>\\r\\n                    <input formControlName=\\\"customerAccountNumber\\\"  matInput placeholder=\\\"Account Number\\\" [(ngModel)]=accountBlock.accountNumber />\\r\\n                  </mat-form-field>\\r\\n            </div>\\r\\n            <div fxLayoutGap=\\\"20px\\\">\\r\\n                  <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\">\\r\\n                      <mat-label>Branch Code</mat-label>\\r\\n                      <input formControlName=\\\"branchCode\\\" matInput placeholder=\\\"Branch Code\\\" readonly [(ngModel)]=accountBlock.branchCode/>\\r\\n                    </mat-form-field>\\r\\n              \\r\\n            <mat-form-field appearance=\\\"outline\\\">\\r\\n              <mat-label>Mobile Number</mat-label>\\r\\n              <input formControlName=\\\"customerMobileNumber\\\" readonly #mbNum matInput placeholder=\\\"Mobile Number\\\" maxlength=\\\"15\\\"\\r\\n                minlength=\\\"10\\\" [(ngModel)]=accountBlock.mobileNo/>\\r\\n              <mat-hint align=\\\"end\\\">{{mbNum.value?.length || 0}}/15</mat-hint>\\r\\n            </mat-form-field>\\r\\n              <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\">\\r\\n                  <mat-label>Name of the Operator</mat-label>\\r\\n                  <input formControlName=\\\"nameOfOperator\\\" matInput placeholder=\\\"Name of the Operator\\\" readonly [(ngModel)]=\\\"currentUser\\\"/>\\r\\n                </mat-form-field>\\r\\n             \\r\\n            </div>\\r\\n            </mat-card-content>\\r\\n          </mat-card>\\r\\n          \\r\\n          <br>\\r\\n          <mat-card style=\\\"width: 70%;\\r\\n          margin-left: 15%;\\\">\\r\\n           <mat-card-content style=\\\"text-align:center;\\\">\\r\\n            <div fxLayoutGap=\\\"20px\\\">\\r\\n                <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\">\\r\\n                    <mat-label>Customer Name</mat-label>\\r\\n      \\r\\n                    <input formControlName=\\\"nameOfCustomer\\\" matInput placeholder=\\\"Customer Name\\\"  />\\r\\n                    <mat-error\\r\\n                      *ngIf=\\\"accountBlockForm.controls['nameOfCustomer'].hasError('required') && accountBlockForm.controls['nameOfCustomer'].touched\\\">\\r\\n                      Customer Name is required\\r\\n                    </mat-error>\\r\\n                  </mat-form-field>\\r\\n                \\r\\n                  <mat-form-field appearance=\\\"outline\\\">\\r\\n                    <mat-label>Mobile Number</mat-label>\\r\\n                    <input formControlName=\\\"mobileNumber\\\" #mbNum matInput placeholder=\\\"Mobile Number\\\" maxlength=\\\"15\\\"\\r\\n                      minlength=\\\"10\\\" required/>\\r\\n                    <mat-error *ngIf=\\\"accountBlockForm.controls['mobileNumber'].hasError('minlength')\\\">\\r\\n                      Minimum Length is 10\\r\\n                    </mat-error>\\r\\n                    <mat-error *ngIf=\\\"accountBlockForm.controls['mobileNumber'].hasError('maxlength')\\\">\\r\\n                      Maximum Length is 10\\r\\n                    </mat-error>\\r\\n                    <mat-error\\r\\n                      *ngIf=\\\"accountBlockForm.controls['mobileNumber'].hasError('required') && accountBlockForm.controls['mobileNumber'].touched\\\">\\r\\n                      Mobile Number is required\\r\\n                    </mat-error>\\r\\n                    <mat-error *ngIf=\\\"accountBlockForm.controls['mobileNumber'].hasError('pattern')\\\">\\r\\n                      Only Numbers\\r\\n                    </mat-error>\\r\\n                    <mat-hint align=\\\"end\\\">{{mbNum.value?.length || 0}}/10</mat-hint>\\r\\n                  </mat-form-field>\\r\\n                  <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\">\\r\\n                    <mat-label>Email ID</mat-label>\\r\\n                    <input formControlName=\\\"emailid\\\" matInput placeholder=\\\"Email\\\" [(ngModel)]=accountBlock.emailAddress />\\r\\n                  </mat-form-field>\\r\\n                  </div>\\r\\n                  <div fxLayoutGap=\\\"20px\\\">\\r\\n              <mat-form-field appearance=\\\"outline\\\">\\r\\n                <mat-label>Due Diligence</mat-label>\\r\\n                <textarea formControlName=\\\"dueDeligenceInfo\\\" rows=\\\"8\\\" matInput placeholder=\\\"Due Diligence\\\" required></textarea>\\r\\n                <mat-error\\r\\n                  *ngIf=\\\"accountBlockForm.controls['dueDeligenceInfo'].hasError('required') && accountBlockForm.controls['dueDeligenceInfo'].touched\\\">\\r\\n                  Due Diligence Info is required\\r\\n                </mat-error>\\r\\n              </mat-form-field>\\r\\n              <mat-form-field appearance=\\\"outline\\\">\\r\\n                <mat-label>Reason</mat-label>\\r\\n                <textarea formControlName=\\\"reasonForBlocking\\\" rows=\\\"8\\\" matInput placeholder=\\\"Reason\\\" required></textarea>\\r\\n                <mat-error\\r\\n                  *ngIf=\\\"accountBlockForm.controls['reasonForBlocking'].hasError('required') && accountBlockForm.controls['reasonForBlocking'].touched\\\">\\r\\n                  Reason is required\\r\\n                </mat-error>\\r\\n              </mat-form-field>\\r\\n               \\r\\n                \\r\\n              <mat-form-field appearance=\\\"outline\\\">\\r\\n                <mat-label>Comments</mat-label>\\r\\n                <textarea formControlName=\\\"commentsByOperator\\\" rows=\\\"8\\\"  matInput placeholder=\\\"Comments\\\" required></textarea>\\r\\n                <mat-error\\r\\n                  *ngIf=\\\"accountBlockForm.controls['commentsByOperator'].hasError('required') && accountBlockForm.controls['commentsByOperator'].touched\\\">\\r\\n                  Comments is required\\r\\n                </mat-error>\\r\\n              </mat-form-field>\\r\\n            \\r\\n</div>\\r\\n<br>\\r\\n<!-- <mat-radio-group aria-label=\\\"Select an option\\\">\\r\\n    <mat-radio-button value=\\\"1\\\">Option 1</mat-radio-button>\\r\\n    <mat-radio-button value=\\\"2\\\">Option 2</mat-radio-button>\\r\\n  </mat-radio-group> -->\\r\\n<!--<div>\\r\\n    <!-- <label>\\r\\n        <input type=\\\"radio\\\" [value]=\\\"true\\\" formControlName=\\\"sendmail\\\">\\r\\n          <span>Send mail</span>\\r\\n      </label>\\r\\n      <label>\\r\\n        <input type=\\\"radio\\\" value=\\\"false\\\" formControlName=\\\"sendmail\\\">\\r\\n          <span>Not Required</span>\\r\\n      </label> \\r\\n  <label>Do we need to send mail to customer ?</label>\\r\\n  <mat-checkbox type=\\\"checkbox\\\" [ngModel]=\\\"checkValue\\\" formControlName=\\\"sendmail\\\">Check me!</mat-checkbox>\\r\\n</div>-->\\r\\n\\r\\n         <button mat-raised-button style=\\\"font-size: 11px;\\\"  color=\\\"primary\\\" (click)=\\\"onClickOfSubmit()\\\" *ngIf=\\\"!submitdisable\\\"\\r\\n   >Submit</button> &nbsp;  &nbsp;\\r\\n              <button mat-raised-button style=\\\"font-size: 11px;\\\"  color=\\\"warn\\\" routerLink=\\\"/account-block/customer-search\\\"\\r\\n              >Exit</button>\\r\\n\\r\\n</mat-card-content>\\r\\n</mat-card>\\r\\n        </form>\\r\\n \\r\\n    </div>\\r\\n    <div fxflex></div>\\r\\n  </div>\\r\\n  \\r\\n  \\r\\n  \\r\\n  <br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br>\"","export default \"<mat-toolbar color=\\\"primary\\\" style=\\\"height:30px; font-size: small;\\\">\\r\\n    <span>Search the Customer</span>\\r\\n  </mat-toolbar>\\r\\n  \\r\\n  <div>\\r\\n      <div fxLayout=\\\"row\\\">\\r\\n        <div fxFlex class=\\\"margin-333\\\">\\r\\n          <form #fname [formGroup]=\\\"accountForm\\\" >\\r\\n            <div fxLayout=\\\"row\\\">\\r\\n              <span fxFlex></span>\\r\\n              <div fxFlex=\\\"100\\\">\\r\\n                <mat-card style=\\\"width: 40% ;\\r\\n                margin-top: 2%; \\r\\n                display: block;\\r\\n                margin-left:auto;\\r\\n                margin-right:auto;  \\r\\n                \\\">\\r\\n                  <mat-card-title></mat-card-title>\\r\\n                  <mat-card-content style=\\\"text-align:center; \\\">\\r\\n                    <div fxFlex=\\\"40\\\" fxFlex.gt-xs=\\\"50\\\" class=\\\"pr-1\\\">\\r\\n                        <div class=\\\"pb-1\\\">\\r\\n                            <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\">\\r\\n                                <mat-label>First name</mat-label>\\r\\n                              <input formControlName=\\\"firstName\\\" matInput placeholder=\\\"Frist Name\\\" />\\r\\n                            </mat-form-field>\\r\\n                          </div>\\r\\n                          <div class=\\\"pb-1\\\">\\r\\n                              <mat-form-field class=\\\"full-width\\\" fxLayoutGap=\\\"20px\\\" appearance=\\\"outline\\\">\\r\\n                                  <mat-label>Customer Number</mat-label>\\r\\n                                <input formControlName=\\\"customerNumber\\\" matInput placeholder=\\\"Minimum 10 Digit\\\" />\\r\\n                              \\r\\n                              </mat-form-field>\\r\\n                            </div>\\r\\n                         \\r\\n                        <div class=\\\"pb-1\\\">\\r\\n                            <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\">\\r\\n                                <mat-label>Customer Name</mat-label>\\r\\n                              <input formControlName=\\\"customerName\\\" matInput placeholder=\\\"Customer  Name\\\" />\\r\\n                            </mat-form-field>\\r\\n                          </div>\\r\\n                          <div class=\\\"pb-1\\\">\\r\\n                              <mat-form-field class=\\\"full-width\\\" fxLayoutGap=\\\"20px\\\" appearance=\\\"outline\\\">\\r\\n                                  <mat-label>Mobile Number</mat-label>\\r\\n                                <input formControlName=\\\"mobileNo\\\" matInput placeholder=\\\"Customer Phone\\\" />\\r\\n                                <mat-error *ngIf=\\\"accountForm.controls['mobileNo'].hasError('minlength')\\\">\\r\\n                                  Minimum Length is 10\\r\\n                                </mat-error>\\r\\n                                <mat-error *ngIf=\\\"accountForm.controls['mobileNo'].hasError('maxlength')\\\">\\r\\n                                  Maximum Length is 15\\r\\n                                </mat-error>\\r\\n        \\r\\n                                <mat-error *ngIf=\\\"accountForm.controls['mobileNo'].hasError('pattern')\\\">\\r\\n                                  Only Numbers\\r\\n                                </mat-error>\\r\\n        \\r\\n                              </mat-form-field>\\r\\n                            </div>\\r\\n                            \\r\\n                     \\r\\n  \\r\\n                    </div>\\r\\n  \\r\\n                    <div fxFlex=\\\"40\\\" fxFlex.gt-xs=\\\"50\\\">\\r\\n                        <div class=\\\"pb-1\\\">\\r\\n                            <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\">\\r\\n                                <mat-label>Last Name</mat-label>\\r\\n                              <input formControlName=\\\"lastName\\\" matInput placeholder=\\\"Last Name \\\" />\\r\\n                            </mat-form-field>\\r\\n                          </div>\\r\\n                          <div class=\\\"pb-1\\\">\\r\\n                              <mat-form-field class=\\\"full-width\\\" fxLayoutGap=\\\"20px\\\" appearance=\\\"outline\\\">\\r\\n                                  <mat-label>Account Number</mat-label>\\r\\n                                <input formControlName=\\\"accountNumber\\\" matInput placeholder=\\\"Account Number\\\" />\\r\\n                                <mat-error *ngIf=\\\"accountForm.controls['accountNumber'].hasError('minlength')\\\">\\r\\n                                  Minimum Length is 10\\r\\n                                </mat-error>\\r\\n                                <mat-error *ngIf=\\\"accountForm.controls['accountNumber'].hasError('maxlength')\\\">\\r\\n                                  Maximum Length is 15\\r\\n                                </mat-error>\\r\\n                                <mat-error *ngIf=\\\"accountForm.controls['accountNumber'].hasError('pattern')\\\">\\r\\n                                  Only Numbers\\r\\n                                </mat-error>\\r\\n                              </mat-form-field>\\r\\n                            </div>\\r\\n                            <div class=\\\"pb-1\\\">\\r\\n                                <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\">\\r\\n                                    <mat-label>National ID</mat-label>\\r\\n                                  <input formControlName=\\\"nationalId\\\" matInput placeholder=\\\"National ID \\\" />\\r\\n                                </mat-form-field>\\r\\n                              </div>\\r\\n                      <div class=\\\"pb-1\\\">\\r\\n                        <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\">\\r\\n                            \\r\\n                            <mat-label>Branch Code</mat-label>\\r\\n                          <input formControlName=\\\"branchCode\\\" matInput placeholder=\\\"Branch Code\\\"  />\\r\\n                          <mat-error *ngIf=\\\"accountForm.controls['branchCode'].hasError('minlength')\\\">\\r\\n                            Minimum Length is 3\\r\\n                          </mat-error>\\r\\n                          <mat-error *ngIf=\\\"accountForm.controls['branchCode'].hasError('maxlength')\\\">\\r\\n                            Maximum Length is 3\\r\\n                          </mat-error>\\r\\n                          <mat-error *ngIf=\\\"accountForm.controls['branchCode'].hasError('pattern')\\\">\\r\\n                            Only Numbers\\r\\n                          </mat-error>\\r\\n                        </mat-form-field>\\r\\n                      </div>\\r\\n                     \\r\\n                      <br>\\r\\n                     \\r\\n                      <div fxLayout=\\\"row\\\" style=\\\"margin-left: -43%;\\\"  fxLayoutGap=\\\"10px\\\">\\r\\n                          <button type=\\\"submit\\\" mat-raised-button  color=\\\"primary\\\" (click)=\\\"onFetch(accountForm.value)\\\" [disabled]=\\\"!accountForm.valid\\\">Get Customer</button>\\r\\n                          &nbsp;&nbsp;\\r\\n                          <button type=\\\"button\\\" mat-raised-button  color=\\\"warn\\\" routerLink=\\\"/dashboard\\\">Exit</button>\\r\\n                        \\r\\n                      </div>\\r\\n                    \\r\\n                      <mat-spinner  [diameter]=\\\"43\\\" *ngIf=\\\"showSpinn\\\"></mat-spinner>\\r\\n                    </div>\\r\\n                  </mat-card-content>\\r\\n                </mat-card>\\r\\n              </div>\\r\\n              <span fxFlex></span>\\r\\n            </div>\\r\\n            <br>\\r\\n           \\r\\n          </form>\\r\\n        </div>\\r\\n  \\r\\n    \\r\\n  </div>\\r\\n  </div>\\r\\n  <br><br>\\r\\n  \\r\\n  \\r\\n  <!--This is for customer details-->\\r\\n  <div *ngIf=\\\"showtable\\\" >\\r\\n      <table mat-table [dataSource]=\\\"result\\\" >\\r\\n\\r\\n        <!-- <ng-container matColumnDef=\\\"customerName\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef> Customer Name</th>\\r\\n          <td mat-cell *matCellDef=\\\"let element\\\"> {{element.customerName}} </td>\\r\\n        </ng-container>\\r\\n        <ng-container matColumnDef=\\\"customerNumber\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef> Customer Number </th>\\r\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.customerNumber}} </td>\\r\\n          </ng-container> -->\\r\\n          <ng-container matColumnDef=\\\"accountNumber\\\">\\r\\n              <th mat-header-cell *matHeaderCellDef> Account Number </th>\\r\\n              <td mat-cell *matCellDef=\\\"let element\\\"> {{element.accountNumber}} </td>\\r\\n            </ng-container>\\r\\n            \\r\\n          <!-- <ng-container matColumnDef=\\\"id\\\">\\r\\n              <th mat-header-cell *matHeaderCellDef> Id Name </th>\\r\\n              <td mat-cell *matCellDef=\\\"let element\\\"> {{element.id}} </td>\\r\\n            </ng-container> -->\\r\\n              <!-- <ng-container matColumnDef=\\\"branchCode\\\">\\r\\n              <th mat-header-cell *matHeaderCellDef>Branch Code </th>\\r\\n              <td mat-cell *matCellDef=\\\"let element\\\"> {{element.branchCode}} </td>\\r\\n            </ng-container>\\r\\n            <ng-container matColumnDef=\\\"dateOfBirth\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef>Date Of Birth</th>\\r\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.dateOfBirth}} </td>\\r\\n              </ng-container>\\r\\n              <ng-container matColumnDef=\\\"mobileNo\\\">\\r\\n                  <th mat-header-cell *matHeaderCellDef>Mobile Number</th>\\r\\n                  <td mat-cell *matCellDef=\\\"let element\\\"> {{element.mobileNo}} </td>\\r\\n                </ng-container> -->\\r\\n                <!-- <ng-container matColumnDef=\\\"emailAddress\\\">\\r\\n                    <th mat-header-cell *matHeaderCellDef>Email Address</th>\\r\\n                    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.emailAddress}} </td>\\r\\n                  </ng-container> -->\\r\\n                 \\r\\n                  \\r\\n                    <!-- <ng-container matColumnDef=\\\"customerAddress\\\">\\r\\n                        <th mat-header-cell *matHeaderCellDef>Customer Address</th>\\r\\n                        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.customerAddress}} </td>\\r\\n                      </ng-container>\\r\\n                      <ng-container matColumnDef=\\\"accountCurrency\\\">\\r\\n                          <th mat-header-cell *matHeaderCellDef>Account Currency</th>\\r\\n                          <td mat-cell *matCellDef=\\\"let element\\\"> {{element.accountCurrency}} </td>\\r\\n                        </ng-container> -->\\r\\n                        <!-- <ng-container matColumnDef=\\\"blockStatus\\\">\\r\\n                            <th mat-header-cell *matHeaderCellDef>Block Status</th>\\r\\n                            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.blockStatus}} </td>\\r\\n                          </ng-container> -->\\r\\n                          <ng-container matColumnDef=\\\"actionsColumn\\\">\\r\\n                              <th mat-header-cell *matHeaderCellDef></th>\\r\\n                              <mat-cell *matCellDef=\\\"let element\\\">\\r\\n                                                                  <td> <button mat-raised-button color=\\\"primary\\\" (click)=\\\"custMoreDetails(element.emailAddress)\\\">Customer Details</button></td>\\r\\n                                 <!--  <td> <button mat-raised-button color=\\\"primary\\\" (click)=\\\"transactiondetails(element)\\\">Transactions</button></td>\\r\\n                                    <td> <button mat-raised-button color=\\\"warn\\\" (click)=\\\"onClickOfBlock(element)\\\">Block</button></td> -->\\r\\n                              </mat-cell>\\r\\n                          </ng-container>\\r\\n                         \\r\\n        <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n        <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n        <!-- <mat-paginator [pageSizeOptions]=\\\"[5, 10, 20]\\\" showFirstLastButtons></mat-paginator> -->\\r\\n      </table>\\r\\n    \\r\\n      \\r\\n    </div>\\r\\n    <mat-spinner  [diameter]=\\\"43\\\" *ngIf=\\\"showSpinn\\\"></mat-spinner>\\r\\n    <!--detailed view for customer -->\\r\\n    <div class=\\\"mat-elevation-z8\\\" *ngIf=\\\"showtable1\\\"> \\r\\n        <table mat-table [dataSource]=\\\"dataSource1\\\" >\\r\\n\\r\\n            <ng-container matColumnDef=\\\"pnationalid\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef > National Id</th>\\r\\n                <td mat-cell *matCellDef=\\\"let row\\\"> {{row.pnationalid}} </td>\\r\\n            </ng-container>\\r\\n        \\r\\n            <!-- <ng-container matColumnDef=\\\"mobilenumber\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef > Mobile Number </th>\\r\\n                <td mat-cell *matCellDef=\\\"let row\\\"> {{row.mobilenumber}} </td>\\r\\n            </ng-container> -->\\r\\n            <ng-container matColumnDef=\\\"branchcode\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef > Branch Code</th>\\r\\n                <td mat-cell *matCellDef=\\\"let row\\\"> {{row.branchcode}} </td>\\r\\n            </ng-container>\\r\\n            <ng-container matColumnDef=\\\"custacno\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef >Cust Ac No </th>\\r\\n                <td mat-cell *matCellDef=\\\"let row\\\"> {{row.custacno}} </td>\\r\\n            </ng-container>\\r\\n            <ng-container matColumnDef=\\\"ccy\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef > Currency</th>\\r\\n                <td mat-cell *matCellDef=\\\"let row\\\"> {{row.ccy}} </td>\\r\\n            </ng-container>\\r\\n            <!-- <ng-container matColumnDef=\\\"accstatus\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef >Account Status</th>\\r\\n                <td mat-cell *matCellDef=\\\"let row\\\"> {{row.accstatus}} </td>\\r\\n            </ng-container> -->\\r\\n            <ng-container matColumnDef=\\\"custno\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef >Cust Number </th>\\r\\n                <td mat-cell *matCellDef=\\\"let row\\\"> {{row.custno}} </td>\\r\\n            </ng-container>\\r\\n            <ng-container matColumnDef=\\\"firstname\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef >First Name </th>\\r\\n                <td mat-cell *matCellDef=\\\"let row\\\"> {{row.firstname}} </td>\\r\\n            </ng-container>\\r\\n            <ng-container matColumnDef=\\\"lastname\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef >Last Name </th>\\r\\n                <td mat-cell *matCellDef=\\\"let row\\\"> {{row.lastname}} </td>\\r\\n            </ng-container>\\r\\n            <ng-container matColumnDef=\\\"dateofbirth\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef >DOB</th>\\r\\n                <td mat-cell *matCellDef=\\\"let row\\\"> {{row.dateofbirth | date}} </td>\\r\\n            </ng-container>\\r\\n            <ng-container matColumnDef=\\\"email\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef >Email </th>\\r\\n                <td mat-cell *matCellDef=\\\"let row\\\"> {{row.email}} </td>\\r\\n            </ng-container>\\r\\n            <ng-container matColumnDef=\\\"addr1\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef >Address1 </th>\\r\\n                <td mat-cell *matCellDef=\\\"let row\\\"> {{row.addr1}} </td>\\r\\n            </ng-container>\\r\\n            <ng-container matColumnDef=\\\"frozen\\\">\\r\\n              <th mat-header-cell *matHeaderCellDef > Frozen Status </th>\\r\\n              <td mat-cell *matCellDef=\\\"let row\\\"> {{row.frozen}} </td>\\r\\n          </ng-container>\\r\\n          <ng-container matColumnDef=\\\"noCredit\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef > No Credit</th>\\r\\n            <td mat-cell *matCellDef=\\\"let row\\\"> {{row.noCredit}} </td>\\r\\n        </ng-container>\\r\\n        <ng-container matColumnDef=\\\"noDebit\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef >No Debit </th>\\r\\n          <td mat-cell *matCellDef=\\\"let row\\\"> {{row.noDebit}} </td>\\r\\n      </ng-container>\\r\\n      <ng-container matColumnDef=\\\"dormant\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef > Dormant </th>\\r\\n        <td mat-cell *matCellDef=\\\"let row\\\"> {{row.dormant}} </td>\\r\\n    </ng-container>\\r\\n            <ng-container matColumnDef=\\\"actionsColumn\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef></th>\\r\\n                <mat-cell *matCellDef=\\\"let row\\\">\\r\\n                    <td> <button mat-raised-button color=\\\"primary\\\" (click)=\\\"transactiondetails(row)\\\">Transactions</button></td>\\r\\n                    <!-- <td> <button mat-raised-button color=\\\"primary\\\" (click)=\\\"custMoreDetails()\\\">Cust Details</button></td> -->\\r\\n                    <td> <button mat-raised-button color=\\\"warn\\\" (click)=\\\"onClickOfBlock(row)\\\" *ngIf='!freezebutton'> Freeze</button></td>\\r\\n                </mat-cell>\\r\\n            </ng-container>\\r\\n            <!-- <ng-container matColumnDef=\\\"mobileNo\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>mobileNo </th>\\r\\n                <td mat-cell *matCellDef=\\\"let row\\\"> {{row.mobileNo}} </td>\\r\\n            </ng-container>\\r\\n           \\r\\n            <ng-container matColumnDef=\\\"nationalId\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>nationalId </th>\\r\\n                <td mat-cell *matCellDef=\\\"let row\\\"> {{row.nationalId}} </td>\\r\\n            </ng-container> -->\\r\\n            <!-- <ng-container matColumnDef=\\\"actionsColumn\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef></th>\\r\\n                <mat-cell *matCellDef=\\\"let element\\\">\\r\\n                    <td> <button mat-raised-button color=\\\"primary\\\" (click)=\\\"onClcikOfViewOfCustomerSearch(row)\\\">View</button></td>\\r\\n                    <td> <button mat-raised-button color=\\\"warn\\\" (click)=\\\"onClickOfBlock()\\\">Block</button></td>\\r\\n                </mat-cell>\\r\\n            </ng-container> -->\\r\\n          \\r\\n            <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns1\\\"></tr>\\r\\n            <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns1;\\\">\\r\\n            </tr>\\r\\n        </table>\\r\\n        \\r\\n        <!-- <mat-paginator [pageSizeOptions]=\\\"[ 10, 25, 100]\\\"></mat-paginator> -->\\r\\n       </div>\\r\\n       <mat-spinner  [diameter]=\\\"43\\\" *ngIf=\\\"showSpinn\\\"></mat-spinner>\\r\\n  <!--Last 10 transaction-->\\r\\n  <div class=\\\"mat-elevation-z8\\\" *ngIf=\\\"showtable2\\\"> \\r\\n    <table mat-table [dataSource]=\\\"dataSource2\\\" >\\r\\n\\r\\n        <ng-container matColumnDef=\\\"refNo\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef > Reference Number</th>\\r\\n            <td mat-cell *matCellDef=\\\"let row\\\"> {{row.refNo}} </td>\\r\\n        </ng-container>\\r\\n    \\r\\n        <ng-container matColumnDef=\\\"accBranch\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef > Account Branch </th>\\r\\n            <td mat-cell *matCellDef=\\\"let row\\\"> {{row.accBranch}} </td>\\r\\n        </ng-container>\\r\\n        <ng-container matColumnDef=\\\"accNo\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef > Account number</th>\\r\\n            <td mat-cell *matCellDef=\\\"let row\\\"> {{row.accNo}} </td>\\r\\n        </ng-container>\\r\\n        <ng-container matColumnDef=\\\"drBrIndicator\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef >DR/CR Indicator</th>\\r\\n            <td mat-cell *matCellDef=\\\"let row\\\"> {{row.drBrIndicator}} </td>\\r\\n        </ng-container>\\r\\n       <ng-container matColumnDef=\\\"fCurrAmt\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef > FCY Amount</th>\\r\\n            <td mat-cell *matCellDef=\\\"let row\\\"> {{row.fCurrAmt}} </td>\\r\\n        </ng-container> \\r\\n        <ng-container matColumnDef=\\\"lCurrAmt\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef >LCY Amount</th>\\r\\n            <td mat-cell *matCellDef=\\\"let row\\\"> {{row.lCurrAmt}} </td>\\r\\n        </ng-container>\\r\\n       <ng-container matColumnDef=\\\"transDate\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef >Trn Date </th>\\r\\n            <td mat-cell *matCellDef=\\\"let row\\\"> {{row.transDate | date}} </td>\\r\\n        </ng-container>\\r\\n      <!--  <ng-container matColumnDef=\\\"firstname\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>Frist Name </th>\\r\\n            <td mat-cell *matCellDef=\\\"let row\\\"> {{row.firstname}} </td>\\r\\n        </ng-container>\\r\\n        <ng-container matColumnDef=\\\"lastname\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>Last Name </th>\\r\\n            <td mat-cell *matCellDef=\\\"let row\\\"> {{row.lastname}} </td>\\r\\n        </ng-container>\\r\\n        <ng-container matColumnDef=\\\"dateofbirth\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>DOB</th>\\r\\n            <td mat-cell *matCellDef=\\\"let row\\\"> {{row.dateofbirth}} </td>\\r\\n       </ng-container> --> \\r\\n        <!-- <ng-container matColumnDef=\\\"email\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>Email </th>\\r\\n            <td mat-cell *matCellDef=\\\"let row\\\"> {{row.email}} </td>\\r\\n        </ng-container> -->\\r\\n        <!-- <ng-container matColumnDef=\\\"accBranch\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>Branch </th>\\r\\n            <td mat-cell *matCellDef=\\\"let row\\\"> {{row.accBranch}} </td>\\r\\n        </ng-container>\\r\\n        -->\\r\\n      \\r\\n        <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns2\\\"></tr>\\r\\n        <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns2;\\\">\\r\\n        </tr>\\r\\n    </table>\\r\\n    \\r\\n    <!-- <mat-paginator [pageSizeOptions]=\\\"[ 10, 25, 100]\\\"></mat-paginator> -->\\r\\n   </div>\\r\\n   <br><br>\\r\\n  <br><br><br>\"","export default \"<!-- <mat-form-field>\\r\\n    <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Filter\\\">\\r\\n  </mat-form-field> -->\\r\\n\\r\\n<!-- <div class=\\\"mat-elevation-z8\\\"> -->\\r\\n        <table mat-table [dataSource]=\\\"dataSource\\\" matSort>\\r\\n\\r\\n                <ng-container matColumnDef=\\\"customerNo\\\">\\r\\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Customer Number </th>\\r\\n                    <td mat-cell *matCellDef=\\\"let row\\\"> {{row.customerNo}} </td>\\r\\n                </ng-container>\\r\\n            \\r\\n                <ng-container matColumnDef=\\\"accountNo\\\">\\r\\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Account Number </th>\\r\\n                    <td mat-cell *matCellDef=\\\"let row\\\"> {{row.accountNo}}% </td>\\r\\n                </ng-container>\\r\\n                <ng-container matColumnDef=\\\"branchCode\\\">\\r\\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Branch Code </th>\\r\\n                    <td mat-cell *matCellDef=\\\"let row\\\"> {{row.branchCode}} </td>\\r\\n                </ng-container>\\r\\n                <ng-container matColumnDef=\\\"transactionAmount\\\">\\r\\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>Transaction Amount </th>\\r\\n                    <td mat-cell *matCellDef=\\\"let row\\\"> {{row.transactionAmount}} </td>\\r\\n                </ng-container>\\r\\n                <ng-container matColumnDef=\\\"debitCredit\\\">\\r\\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Debit/Credit</th>\\r\\n                    <td mat-cell *matCellDef=\\\"let row\\\"> {{row.debitCredit}} </td>\\r\\n                </ng-container>\\r\\n                <ng-container matColumnDef=\\\"currency\\\">\\r\\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>Currency </th>\\r\\n                    <td mat-cell *matCellDef=\\\"let row\\\"> {{row.currency}} </td>\\r\\n                </ng-container>\\r\\n                <ng-container matColumnDef=\\\"transactionDescription\\\">\\r\\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Transaction Amount </th>\\r\\n                    <td mat-cell *matCellDef=\\\"let row\\\" [style.color]=\\\"row.transactionDescription\\\">\\r\\n                        {{row.transactionDescription}} </td>\\r\\n                </ng-container>\\r\\n            \\r\\n                <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n                <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\">\\r\\n                </tr>\\r\\n            </table>\\r\\n            \\r\\n            <!-- <mat-paginator [pageSizeOptions]=\\\"[ 10, 25, 100]\\\"></mat-paginator> -->\\r\\n            <!-- </div> -->\\r\\n            <button mat-raised-button color=\\\"warn\\\" class=\\\"no-hover-effect\\\" mat-dialog-close>\\r\\n                Exit\\r\\n            </button>\\r\\n            \\r\\n              \\r\\n            \\r\\n\\r\\n\\r\\n            \"","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Subject_1 = require(\"./Subject\");\nvar ObjectUnsubscribedError_1 = require(\"./util/ObjectUnsubscribedError\");\nvar BehaviorSubject = (function (_super) {\n    __extends(BehaviorSubject, _super);\n    function BehaviorSubject(_value) {\n        var _this = _super.call(this) || this;\n        _this._value = _value;\n        return _this;\n    }\n    Object.defineProperty(BehaviorSubject.prototype, \"value\", {\n        get: function () {\n            return this.getValue();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    BehaviorSubject.prototype._subscribe = function (subscriber) {\n        var subscription = _super.prototype._subscribe.call(this, subscriber);\n        if (subscription && !subscription.closed) {\n            subscriber.next(this._value);\n        }\n        return subscription;\n    };\n    BehaviorSubject.prototype.getValue = function () {\n        if (this.hasError) {\n            throw this.thrownError;\n        }\n        else if (this.closed) {\n            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n        }\n        else {\n            return this._value;\n        }\n    };\n    BehaviorSubject.prototype.next = function (value) {\n        _super.prototype.next.call(this, this._value = value);\n    };\n    return BehaviorSubject;\n}(Subject_1.Subject));\nexports.BehaviorSubject = BehaviorSubject;\n//# sourceMappingURL=BehaviorSubject.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar canReportError_1 = require(\"./util/canReportError\");\nvar toSubscriber_1 = require(\"./util/toSubscriber\");\nvar observable_1 = require(\"../internal/symbol/observable\");\nvar pipe_1 = require(\"./util/pipe\");\nvar config_1 = require(\"./config\");\nvar Observable = (function () {\n    function Observable(subscribe) {\n        this._isScalar = false;\n        if (subscribe) {\n            this._subscribe = subscribe;\n        }\n    }\n    Observable.prototype.lift = function (operator) {\n        var observable = new Observable();\n        observable.source = this;\n        observable.operator = operator;\n        return observable;\n    };\n    Observable.prototype.subscribe = function (observerOrNext, error, complete) {\n        var operator = this.operator;\n        var sink = toSubscriber_1.toSubscriber(observerOrNext, error, complete);\n        if (operator) {\n            sink.add(operator.call(sink, this.source));\n        }\n        else {\n            sink.add(this.source || (config_1.config.useDeprecatedSynchronousErrorHandling && !sink.syncErrorThrowable) ?\n                this._subscribe(sink) :\n                this._trySubscribe(sink));\n        }\n        if (config_1.config.useDeprecatedSynchronousErrorHandling) {\n            if (sink.syncErrorThrowable) {\n                sink.syncErrorThrowable = false;\n                if (sink.syncErrorThrown) {\n                    throw sink.syncErrorValue;\n                }\n            }\n        }\n        return sink;\n    };\n    Observable.prototype._trySubscribe = function (sink) {\n        try {\n            return this._subscribe(sink);\n        }\n        catch (err) {\n            if (config_1.config.useDeprecatedSynchronousErrorHandling) {\n                sink.syncErrorThrown = true;\n                sink.syncErrorValue = err;\n            }\n            if (canReportError_1.canReportError(sink)) {\n                sink.error(err);\n            }\n            else {\n                console.warn(err);\n            }\n        }\n    };\n    Observable.prototype.forEach = function (next, promiseCtor) {\n        var _this = this;\n        promiseCtor = getPromiseCtor(promiseCtor);\n        return new promiseCtor(function (resolve, reject) {\n            var subscription;\n            subscription = _this.subscribe(function (value) {\n                try {\n                    next(value);\n                }\n                catch (err) {\n                    reject(err);\n                    if (subscription) {\n                        subscription.unsubscribe();\n                    }\n                }\n            }, reject, resolve);\n        });\n    };\n    Observable.prototype._subscribe = function (subscriber) {\n        var source = this.source;\n        return source && source.subscribe(subscriber);\n    };\n    Observable.prototype[observable_1.observable] = function () {\n        return this;\n    };\n    Observable.prototype.pipe = function () {\n        var operations = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            operations[_i] = arguments[_i];\n        }\n        if (operations.length === 0) {\n            return this;\n        }\n        return pipe_1.pipeFromArray(operations)(this);\n    };\n    Observable.prototype.toPromise = function (promiseCtor) {\n        var _this = this;\n        promiseCtor = getPromiseCtor(promiseCtor);\n        return new promiseCtor(function (resolve, reject) {\n            var value;\n            _this.subscribe(function (x) { return value = x; }, function (err) { return reject(err); }, function () { return resolve(value); });\n        });\n    };\n    Observable.create = function (subscribe) {\n        return new Observable(subscribe);\n    };\n    return Observable;\n}());\nexports.Observable = Observable;\nfunction getPromiseCtor(promiseCtor) {\n    if (!promiseCtor) {\n        promiseCtor = config_1.config.Promise || Promise;\n    }\n    if (!promiseCtor) {\n        throw new Error('no Promise impl found');\n    }\n    return promiseCtor;\n}\n//# sourceMappingURL=Observable.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar config_1 = require(\"./config\");\nvar hostReportError_1 = require(\"./util/hostReportError\");\nexports.empty = {\n    closed: true,\n    next: function (value) { },\n    error: function (err) {\n        if (config_1.config.useDeprecatedSynchronousErrorHandling) {\n            throw err;\n        }\n        else {\n            hostReportError_1.hostReportError(err);\n        }\n    },\n    complete: function () { }\n};\n//# sourceMappingURL=Observer.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = require(\"./Observable\");\nvar Subscriber_1 = require(\"./Subscriber\");\nvar Subscription_1 = require(\"./Subscription\");\nvar ObjectUnsubscribedError_1 = require(\"./util/ObjectUnsubscribedError\");\nvar SubjectSubscription_1 = require(\"./SubjectSubscription\");\nvar rxSubscriber_1 = require(\"../internal/symbol/rxSubscriber\");\nvar SubjectSubscriber = (function (_super) {\n    __extends(SubjectSubscriber, _super);\n    function SubjectSubscriber(destination) {\n        var _this = _super.call(this, destination) || this;\n        _this.destination = destination;\n        return _this;\n    }\n    return SubjectSubscriber;\n}(Subscriber_1.Subscriber));\nexports.SubjectSubscriber = SubjectSubscriber;\nvar Subject = (function (_super) {\n    __extends(Subject, _super);\n    function Subject() {\n        var _this = _super.call(this) || this;\n        _this.observers = [];\n        _this.closed = false;\n        _this.isStopped = false;\n        _this.hasError = false;\n        _this.thrownError = null;\n        return _this;\n    }\n    Subject.prototype[rxSubscriber_1.rxSubscriber] = function () {\n        return new SubjectSubscriber(this);\n    };\n    Subject.prototype.lift = function (operator) {\n        var subject = new AnonymousSubject(this, this);\n        subject.operator = operator;\n        return subject;\n    };\n    Subject.prototype.next = function (value) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n        }\n        if (!this.isStopped) {\n            var observers = this.observers;\n            var len = observers.length;\n            var copy = observers.slice();\n            for (var i = 0; i < len; i++) {\n                copy[i].next(value);\n            }\n        }\n    };\n    Subject.prototype.error = function (err) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n        }\n        this.hasError = true;\n        this.thrownError = err;\n        this.isStopped = true;\n        var observers = this.observers;\n        var len = observers.length;\n        var copy = observers.slice();\n        for (var i = 0; i < len; i++) {\n            copy[i].error(err);\n        }\n        this.observers.length = 0;\n    };\n    Subject.prototype.complete = function () {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n        }\n        this.isStopped = true;\n        var observers = this.observers;\n        var len = observers.length;\n        var copy = observers.slice();\n        for (var i = 0; i < len; i++) {\n            copy[i].complete();\n        }\n        this.observers.length = 0;\n    };\n    Subject.prototype.unsubscribe = function () {\n        this.isStopped = true;\n        this.closed = true;\n        this.observers = null;\n    };\n    Subject.prototype._trySubscribe = function (subscriber) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n        }\n        else {\n            return _super.prototype._trySubscribe.call(this, subscriber);\n        }\n    };\n    Subject.prototype._subscribe = function (subscriber) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n        }\n        else if (this.hasError) {\n            subscriber.error(this.thrownError);\n            return Subscription_1.Subscription.EMPTY;\n        }\n        else if (this.isStopped) {\n            subscriber.complete();\n            return Subscription_1.Subscription.EMPTY;\n        }\n        else {\n            this.observers.push(subscriber);\n            return new SubjectSubscription_1.SubjectSubscription(this, subscriber);\n        }\n    };\n    Subject.prototype.asObservable = function () {\n        var observable = new Observable_1.Observable();\n        observable.source = this;\n        return observable;\n    };\n    Subject.create = function (destination, source) {\n        return new AnonymousSubject(destination, source);\n    };\n    return Subject;\n}(Observable_1.Observable));\nexports.Subject = Subject;\nvar AnonymousSubject = (function (_super) {\n    __extends(AnonymousSubject, _super);\n    function AnonymousSubject(destination, source) {\n        var _this = _super.call(this) || this;\n        _this.destination = destination;\n        _this.source = source;\n        return _this;\n    }\n    AnonymousSubject.prototype.next = function (value) {\n        var destination = this.destination;\n        if (destination && destination.next) {\n            destination.next(value);\n        }\n    };\n    AnonymousSubject.prototype.error = function (err) {\n        var destination = this.destination;\n        if (destination && destination.error) {\n            this.destination.error(err);\n        }\n    };\n    AnonymousSubject.prototype.complete = function () {\n        var destination = this.destination;\n        if (destination && destination.complete) {\n            this.destination.complete();\n        }\n    };\n    AnonymousSubject.prototype._subscribe = function (subscriber) {\n        var source = this.source;\n        if (source) {\n            return this.source.subscribe(subscriber);\n        }\n        else {\n            return Subscription_1.Subscription.EMPTY;\n        }\n    };\n    return AnonymousSubject;\n}(Subject));\nexports.AnonymousSubject = AnonymousSubject;\n//# sourceMappingURL=Subject.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Subscription_1 = require(\"./Subscription\");\nvar SubjectSubscription = (function (_super) {\n    __extends(SubjectSubscription, _super);\n    function SubjectSubscription(subject, subscriber) {\n        var _this = _super.call(this) || this;\n        _this.subject = subject;\n        _this.subscriber = subscriber;\n        _this.closed = false;\n        return _this;\n    }\n    SubjectSubscription.prototype.unsubscribe = function () {\n        if (this.closed) {\n            return;\n        }\n        this.closed = true;\n        var subject = this.subject;\n        var observers = subject.observers;\n        this.subject = null;\n        if (!observers || observers.length === 0 || subject.isStopped || subject.closed) {\n            return;\n        }\n        var subscriberIndex = observers.indexOf(this.subscriber);\n        if (subscriberIndex !== -1) {\n            observers.splice(subscriberIndex, 1);\n        }\n    };\n    return SubjectSubscription;\n}(Subscription_1.Subscription));\nexports.SubjectSubscription = SubjectSubscription;\n//# sourceMappingURL=SubjectSubscription.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar isFunction_1 = require(\"./util/isFunction\");\nvar Observer_1 = require(\"./Observer\");\nvar Subscription_1 = require(\"./Subscription\");\nvar rxSubscriber_1 = require(\"../internal/symbol/rxSubscriber\");\nvar config_1 = require(\"./config\");\nvar hostReportError_1 = require(\"./util/hostReportError\");\nvar Subscriber = (function (_super) {\n    __extends(Subscriber, _super);\n    function Subscriber(destinationOrNext, error, complete) {\n        var _this = _super.call(this) || this;\n        _this.syncErrorValue = null;\n        _this.syncErrorThrown = false;\n        _this.syncErrorThrowable = false;\n        _this.isStopped = false;\n        switch (arguments.length) {\n            case 0:\n                _this.destination = Observer_1.empty;\n                break;\n            case 1:\n                if (!destinationOrNext) {\n                    _this.destination = Observer_1.empty;\n                    break;\n                }\n                if (typeof destinationOrNext === 'object') {\n                    if (destinationOrNext instanceof Subscriber) {\n                        _this.syncErrorThrowable = destinationOrNext.syncErrorThrowable;\n                        _this.destination = destinationOrNext;\n                        destinationOrNext.add(_this);\n                    }\n                    else {\n                        _this.syncErrorThrowable = true;\n                        _this.destination = new SafeSubscriber(_this, destinationOrNext);\n                    }\n                    break;\n                }\n            default:\n                _this.syncErrorThrowable = true;\n                _this.destination = new SafeSubscriber(_this, destinationOrNext, error, complete);\n                break;\n        }\n        return _this;\n    }\n    Subscriber.prototype[rxSubscriber_1.rxSubscriber] = function () { return this; };\n    Subscriber.create = function (next, error, complete) {\n        var subscriber = new Subscriber(next, error, complete);\n        subscriber.syncErrorThrowable = false;\n        return subscriber;\n    };\n    Subscriber.prototype.next = function (value) {\n        if (!this.isStopped) {\n            this._next(value);\n        }\n    };\n    Subscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            this.isStopped = true;\n            this._error(err);\n        }\n    };\n    Subscriber.prototype.complete = function () {\n        if (!this.isStopped) {\n            this.isStopped = true;\n            this._complete();\n        }\n    };\n    Subscriber.prototype.unsubscribe = function () {\n        if (this.closed) {\n            return;\n        }\n        this.isStopped = true;\n        _super.prototype.unsubscribe.call(this);\n    };\n    Subscriber.prototype._next = function (value) {\n        this.destination.next(value);\n    };\n    Subscriber.prototype._error = function (err) {\n        this.destination.error(err);\n        this.unsubscribe();\n    };\n    Subscriber.prototype._complete = function () {\n        this.destination.complete();\n        this.unsubscribe();\n    };\n    Subscriber.prototype._unsubscribeAndRecycle = function () {\n        var _a = this, _parent = _a._parent, _parents = _a._parents;\n        this._parent = null;\n        this._parents = null;\n        this.unsubscribe();\n        this.closed = false;\n        this.isStopped = false;\n        this._parent = _parent;\n        this._parents = _parents;\n        return this;\n    };\n    return Subscriber;\n}(Subscription_1.Subscription));\nexports.Subscriber = Subscriber;\nvar SafeSubscriber = (function (_super) {\n    __extends(SafeSubscriber, _super);\n    function SafeSubscriber(_parentSubscriber, observerOrNext, error, complete) {\n        var _this = _super.call(this) || this;\n        _this._parentSubscriber = _parentSubscriber;\n        var next;\n        var context = _this;\n        if (isFunction_1.isFunction(observerOrNext)) {\n            next = observerOrNext;\n        }\n        else if (observerOrNext) {\n            next = observerOrNext.next;\n            error = observerOrNext.error;\n            complete = observerOrNext.complete;\n            if (observerOrNext !== Observer_1.empty) {\n                context = Object.create(observerOrNext);\n                if (isFunction_1.isFunction(context.unsubscribe)) {\n                    _this.add(context.unsubscribe.bind(context));\n                }\n                context.unsubscribe = _this.unsubscribe.bind(_this);\n            }\n        }\n        _this._context = context;\n        _this._next = next;\n        _this._error = error;\n        _this._complete = complete;\n        return _this;\n    }\n    SafeSubscriber.prototype.next = function (value) {\n        if (!this.isStopped && this._next) {\n            var _parentSubscriber = this._parentSubscriber;\n            if (!config_1.config.useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\n                this.__tryOrUnsub(this._next, value);\n            }\n            else if (this.__tryOrSetError(_parentSubscriber, this._next, value)) {\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            var _parentSubscriber = this._parentSubscriber;\n            var useDeprecatedSynchronousErrorHandling = config_1.config.useDeprecatedSynchronousErrorHandling;\n            if (this._error) {\n                if (!useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\n                    this.__tryOrUnsub(this._error, err);\n                    this.unsubscribe();\n                }\n                else {\n                    this.__tryOrSetError(_parentSubscriber, this._error, err);\n                    this.unsubscribe();\n                }\n            }\n            else if (!_parentSubscriber.syncErrorThrowable) {\n                this.unsubscribe();\n                if (useDeprecatedSynchronousErrorHandling) {\n                    throw err;\n                }\n                hostReportError_1.hostReportError(err);\n            }\n            else {\n                if (useDeprecatedSynchronousErrorHandling) {\n                    _parentSubscriber.syncErrorValue = err;\n                    _parentSubscriber.syncErrorThrown = true;\n                }\n                else {\n                    hostReportError_1.hostReportError(err);\n                }\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.complete = function () {\n        var _this = this;\n        if (!this.isStopped) {\n            var _parentSubscriber = this._parentSubscriber;\n            if (this._complete) {\n                var wrappedComplete = function () { return _this._complete.call(_this._context); };\n                if (!config_1.config.useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\n                    this.__tryOrUnsub(wrappedComplete);\n                    this.unsubscribe();\n                }\n                else {\n                    this.__tryOrSetError(_parentSubscriber, wrappedComplete);\n                    this.unsubscribe();\n                }\n            }\n            else {\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.__tryOrUnsub = function (fn, value) {\n        try {\n            fn.call(this._context, value);\n        }\n        catch (err) {\n            this.unsubscribe();\n            if (config_1.config.useDeprecatedSynchronousErrorHandling) {\n                throw err;\n            }\n            else {\n                hostReportError_1.hostReportError(err);\n            }\n        }\n    };\n    SafeSubscriber.prototype.__tryOrSetError = function (parent, fn, value) {\n        if (!config_1.config.useDeprecatedSynchronousErrorHandling) {\n            throw new Error('bad call');\n        }\n        try {\n            fn.call(this._context, value);\n        }\n        catch (err) {\n            if (config_1.config.useDeprecatedSynchronousErrorHandling) {\n                parent.syncErrorValue = err;\n                parent.syncErrorThrown = true;\n                return true;\n            }\n            else {\n                hostReportError_1.hostReportError(err);\n                return true;\n            }\n        }\n        return false;\n    };\n    SafeSubscriber.prototype._unsubscribe = function () {\n        var _parentSubscriber = this._parentSubscriber;\n        this._context = null;\n        this._parentSubscriber = null;\n        _parentSubscriber.unsubscribe();\n    };\n    return SafeSubscriber;\n}(Subscriber));\nexports.SafeSubscriber = SafeSubscriber;\n//# sourceMappingURL=Subscriber.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar isArray_1 = require(\"./util/isArray\");\nvar isObject_1 = require(\"./util/isObject\");\nvar isFunction_1 = require(\"./util/isFunction\");\nvar UnsubscriptionError_1 = require(\"./util/UnsubscriptionError\");\nvar Subscription = (function () {\n    function Subscription(unsubscribe) {\n        this.closed = false;\n        this._parent = null;\n        this._parents = null;\n        this._subscriptions = null;\n        if (unsubscribe) {\n            this._unsubscribe = unsubscribe;\n        }\n    }\n    Subscription.prototype.unsubscribe = function () {\n        var hasErrors = false;\n        var errors;\n        if (this.closed) {\n            return;\n        }\n        var _a = this, _parent = _a._parent, _parents = _a._parents, _unsubscribe = _a._unsubscribe, _subscriptions = _a._subscriptions;\n        this.closed = true;\n        this._parent = null;\n        this._parents = null;\n        this._subscriptions = null;\n        var index = -1;\n        var len = _parents ? _parents.length : 0;\n        while (_parent) {\n            _parent.remove(this);\n            _parent = ++index < len && _parents[index] || null;\n        }\n        if (isFunction_1.isFunction(_unsubscribe)) {\n            try {\n                _unsubscribe.call(this);\n            }\n            catch (e) {\n                hasErrors = true;\n                errors = e instanceof UnsubscriptionError_1.UnsubscriptionError ? flattenUnsubscriptionErrors(e.errors) : [e];\n            }\n        }\n        if (isArray_1.isArray(_subscriptions)) {\n            index = -1;\n            len = _subscriptions.length;\n            while (++index < len) {\n                var sub = _subscriptions[index];\n                if (isObject_1.isObject(sub)) {\n                    try {\n                        sub.unsubscribe();\n                    }\n                    catch (e) {\n                        hasErrors = true;\n                        errors = errors || [];\n                        if (e instanceof UnsubscriptionError_1.UnsubscriptionError) {\n                            errors = errors.concat(flattenUnsubscriptionErrors(e.errors));\n                        }\n                        else {\n                            errors.push(e);\n                        }\n                    }\n                }\n            }\n        }\n        if (hasErrors) {\n            throw new UnsubscriptionError_1.UnsubscriptionError(errors);\n        }\n    };\n    Subscription.prototype.add = function (teardown) {\n        var subscription = teardown;\n        switch (typeof teardown) {\n            case 'function':\n                subscription = new Subscription(teardown);\n            case 'object':\n                if (subscription === this || subscription.closed || typeof subscription.unsubscribe !== 'function') {\n                    return subscription;\n                }\n                else if (this.closed) {\n                    subscription.unsubscribe();\n                    return subscription;\n                }\n                else if (!(subscription instanceof Subscription)) {\n                    var tmp = subscription;\n                    subscription = new Subscription();\n                    subscription._subscriptions = [tmp];\n                }\n                break;\n            default: {\n                if (!teardown) {\n                    return Subscription.EMPTY;\n                }\n                throw new Error('unrecognized teardown ' + teardown + ' added to Subscription.');\n            }\n        }\n        if (subscription._addParent(this)) {\n            var subscriptions = this._subscriptions;\n            if (subscriptions) {\n                subscriptions.push(subscription);\n            }\n            else {\n                this._subscriptions = [subscription];\n            }\n        }\n        return subscription;\n    };\n    Subscription.prototype.remove = function (subscription) {\n        var subscriptions = this._subscriptions;\n        if (subscriptions) {\n            var subscriptionIndex = subscriptions.indexOf(subscription);\n            if (subscriptionIndex !== -1) {\n                subscriptions.splice(subscriptionIndex, 1);\n            }\n        }\n    };\n    Subscription.prototype._addParent = function (parent) {\n        var _a = this, _parent = _a._parent, _parents = _a._parents;\n        if (_parent === parent) {\n            return false;\n        }\n        else if (!_parent) {\n            this._parent = parent;\n            return true;\n        }\n        else if (!_parents) {\n            this._parents = [parent];\n            return true;\n        }\n        else if (_parents.indexOf(parent) === -1) {\n            _parents.push(parent);\n            return true;\n        }\n        return false;\n    };\n    Subscription.EMPTY = (function (empty) {\n        empty.closed = true;\n        return empty;\n    }(new Subscription()));\n    return Subscription;\n}());\nexports.Subscription = Subscription;\nfunction flattenUnsubscriptionErrors(errors) {\n    return errors.reduce(function (errs, err) { return errs.concat((err instanceof UnsubscriptionError_1.UnsubscriptionError) ? err.errors : err); }, []);\n}\n//# sourceMappingURL=Subscription.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar _enable_super_gross_mode_that_will_cause_bad_things = false;\nexports.config = {\n    Promise: undefined,\n    set useDeprecatedSynchronousErrorHandling(value) {\n        if (value) {\n            var error = new Error();\n            console.warn('DEPRECATED! RxJS was set to use deprecated synchronous error handling behavior by code at: \\n' + error.stack);\n        }\n        else if (_enable_super_gross_mode_that_will_cause_bad_things) {\n            console.log('RxJS: Back to a better error behavior. Thank you. <3');\n        }\n        _enable_super_gross_mode_that_will_cause_bad_things = value;\n    },\n    get useDeprecatedSynchronousErrorHandling() {\n        return _enable_super_gross_mode_that_will_cause_bad_things;\n    },\n};\n//# sourceMappingURL=config.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.observable = typeof Symbol === 'function' && Symbol.observable || '@@observable';\n//# sourceMappingURL=observable.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.rxSubscriber = typeof Symbol === 'function'\n    ? Symbol('rxSubscriber')\n    : '@@rxSubscriber_' + Math.random();\nexports.$$rxSubscriber = exports.rxSubscriber;\n//# sourceMappingURL=rxSubscriber.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction ObjectUnsubscribedErrorImpl() {\n    Error.call(this);\n    this.message = 'object unsubscribed';\n    this.name = 'ObjectUnsubscribedError';\n    return this;\n}\nObjectUnsubscribedErrorImpl.prototype = Object.create(Error.prototype);\nexports.ObjectUnsubscribedError = ObjectUnsubscribedErrorImpl;\n//# sourceMappingURL=ObjectUnsubscribedError.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction UnsubscriptionErrorImpl(errors) {\n    Error.call(this);\n    this.message = errors ?\n        errors.length + \" errors occurred during unsubscription:\\n\" + errors.map(function (err, i) { return i + 1 + \") \" + err.toString(); }).join('\\n  ') : '';\n    this.name = 'UnsubscriptionError';\n    this.errors = errors;\n    return this;\n}\nUnsubscriptionErrorImpl.prototype = Object.create(Error.prototype);\nexports.UnsubscriptionError = UnsubscriptionErrorImpl;\n//# sourceMappingURL=UnsubscriptionError.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Subscriber_1 = require(\"../Subscriber\");\nfunction canReportError(observer) {\n    while (observer) {\n        var _a = observer, closed_1 = _a.closed, destination = _a.destination, isStopped = _a.isStopped;\n        if (closed_1 || isStopped) {\n            return false;\n        }\n        else if (destination && destination instanceof Subscriber_1.Subscriber) {\n            observer = destination;\n        }\n        else {\n            observer = null;\n        }\n    }\n    return true;\n}\nexports.canReportError = canReportError;\n//# sourceMappingURL=canReportError.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction hostReportError(err) {\n    setTimeout(function () { throw err; });\n}\nexports.hostReportError = hostReportError;\n//# sourceMappingURL=hostReportError.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isArray = Array.isArray || (function (x) { return x && typeof x.length === 'number'; });\n//# sourceMappingURL=isArray.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction isFunction(x) {\n    return typeof x === 'function';\n}\nexports.isFunction = isFunction;\n//# sourceMappingURL=isFunction.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction isObject(x) {\n    return x !== null && typeof x === 'object';\n}\nexports.isObject = isObject;\n//# sourceMappingURL=isObject.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction noop() { }\nexports.noop = noop;\n//# sourceMappingURL=noop.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar noop_1 = require(\"./noop\");\nfunction pipe() {\n    var fns = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        fns[_i] = arguments[_i];\n    }\n    return pipeFromArray(fns);\n}\nexports.pipe = pipe;\nfunction pipeFromArray(fns) {\n    if (!fns) {\n        return noop_1.noop;\n    }\n    if (fns.length === 1) {\n        return fns[0];\n    }\n    return function piped(input) {\n        return fns.reduce(function (prev, fn) { return fn(prev); }, input);\n    };\n}\nexports.pipeFromArray = pipeFromArray;\n//# sourceMappingURL=pipe.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Subscriber_1 = require(\"../Subscriber\");\nvar rxSubscriber_1 = require(\"../symbol/rxSubscriber\");\nvar Observer_1 = require(\"../Observer\");\nfunction toSubscriber(nextOrObserver, error, complete) {\n    if (nextOrObserver) {\n        if (nextOrObserver instanceof Subscriber_1.Subscriber) {\n            return nextOrObserver;\n        }\n        if (nextOrObserver[rxSubscriber_1.rxSubscriber]) {\n            return nextOrObserver[rxSubscriber_1.rxSubscriber]();\n        }\n    }\n    if (!nextOrObserver && !error && !complete) {\n        return new Subscriber_1.Subscriber(Observer_1.empty);\n    }\n    return new Subscriber_1.Subscriber(nextOrObserver, error, complete);\n}\nexports.toSubscriber = toSubscriber;\n//# sourceMappingURL=toSubscriber.js.map","export class sendMailToOperationTeam\r\n{\r\n    statusChangeDate; // Todays Date of custAccount in FCUBS\r\n    customerNumber:string;\r\n    branchCode: number;\r\n    customerAccountNumber: string;\r\n    customerName: string; // as per core banking\r\n    customerMobileNumber: any; // as per core banking\r\n    nameOfOperator: string;\r\n    nameOfCustomer: string; // input by operator\r\n    mobileNumber : any; // input by operator\r\n    dueDeligenceInfo: string; // input by operator\r\n    reasonForBlocking: string; // input by operator\r\n    commentsByOperator:string; // Brief Info for Blocking\r\n    emailid:any; // input by operator\r\nscreenName; // need for getting mails of user where screenName is provided\r\nsendMailtoCustomer:boolean;\r\nstatus;\r\n}","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { AccountBlockingComponent } from './account-blocking.component';\r\nimport { AccountCustomerSearchComponent } from './account-customer-search/account-customer-search.component';\r\n\r\nexport const blockroutes: Routes = [\r\n  {\r\n    path: '',\r\n    component: AccountBlockingComponent,\r\n  },\r\n  {\r\n    path: 'customer-search',\r\n    component: AccountCustomerSearchComponent,\r\n    pathMatch: 'full',\r\n    data: { title: 'Account Blocking' }\r\n  }\r\n];\r\n\r\n","export default \"\\r\\n  /* .center{\\r\\n    width: 45%;\\r\\n    margin: 10px auto;\\r\\n  }\\r\\n  \\r\\n  .main-div{\\r\\n    /* height: 100vh; */\\r\\n    /* display: flex; */\\r\\n    /* justify-content: center;\\r\\n    align-items: center; */\\r\\n    /* } */\\r\\n    mat-card mat-form-field {\\r\\n    font-size: 10px;\\r\\n  }\\r\\n    mat-card a {\\r\\n    font-size: 11px;\\r\\n  }\\r\\n    mat-card p {\\r\\n    font-size: 11px;\\r\\n  }\\r\\n    .mat-raised-button {\\r\\n    width: 80px;\\r\\n    height: 27px;\\r\\n    line-height: 20px;\\r\\n    min-height: 20px;\\r\\n    vertical-align: top;\\r\\n    font-size: 11px;\\r\\n  }\\r\\n    \\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdmlld3MvYWNjb3VudC1ibG9ja2luZy9hY2NvdW50LWJsb2NraW5nLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtFQUNFOzs7Ozs7dUJBTXFCO0lBQ25CLG1CQUFtQjtJQUNuQjswQkFDc0I7SUFDeEIsTUFBTTtJQUNOO0lBQ0UsZUFBZTtFQUNqQjtJQUNBO0lBQ0UsZUFBZTtFQUNqQjtJQUNBO0lBQ0UsZUFBZTtFQUNqQjtJQUVBO0lBQ0UsV0FBVztJQUNYLFlBQVk7SUFDWixpQkFBaUI7SUFDakIsZ0JBQWdCO0lBQ2hCLG1CQUFtQjtJQUNuQixlQUFlO0VBQ2pCIiwiZmlsZSI6InNyYy9hcHAvdmlld3MvYWNjb3VudC1ibG9ja2luZy9hY2NvdW50LWJsb2NraW5nLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJcclxuICAvKiAuY2VudGVye1xyXG4gICAgd2lkdGg6IDQ1JTtcclxuICAgIG1hcmdpbjogMTBweCBhdXRvO1xyXG4gIH1cclxuICBcclxuICAubWFpbi1kaXZ7XHJcbiAgICAvKiBoZWlnaHQ6IDEwMHZoOyAqL1xyXG4gICAgLyogZGlzcGxheTogZmxleDsgKi9cclxuICAgIC8qIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjsgKi9cclxuICAvKiB9ICovIFxyXG4gIG1hdC1jYXJkIG1hdC1mb3JtLWZpZWxkIHtcclxuICAgIGZvbnQtc2l6ZTogMTBweDtcclxuICB9XHJcbiAgbWF0LWNhcmQgYSB7XHJcbiAgICBmb250LXNpemU6IDExcHg7XHJcbiAgfVxyXG4gIG1hdC1jYXJkIHAge1xyXG4gICAgZm9udC1zaXplOiAxMXB4O1xyXG4gIH1cclxuICBcclxuICAubWF0LXJhaXNlZC1idXR0b24ge1xyXG4gICAgd2lkdGg6IDgwcHg7XHJcbiAgICBoZWlnaHQ6IDI3cHg7XHJcbiAgICBsaW5lLWhlaWdodDogMjBweDtcclxuICAgIG1pbi1oZWlnaHQ6IDIwcHg7XHJcbiAgICB2ZXJ0aWNhbC1hbGlnbjogdG9wO1xyXG4gICAgZm9udC1zaXplOiAxMXB4O1xyXG4gIH1cclxuICAgICJdfQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { sendMailToOperationTeam } from './AccountBlocking';\r\nimport swal from 'sweetalert2';\r\nimport { FormsModule, ReactiveFormsModule, FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\r\nimport Swal from 'sweetalert2';\r\nimport { AccountBlockingServiceService } from 'src/app/shared/services/account-blocking-service.service';\r\nimport { NavigationExtras, Router, ActivatedRoute } from '@angular/router';\r\nimport { FCUBSAccsCustomerQueryResDTO } from './account-customer-search/FCUBSAccsCustomerQueryResDTO';\r\nimport { DataService } from './account-customer-search/dataservice';\r\n\r\n@Component({\r\n  selector: 'app-account-blocking',\r\n  templateUrl: './account-blocking.component.html',\r\n  styleUrls: ['./account-blocking.component.css']\r\n})\r\nexport class AccountBlockingComponent implements OnInit {\r\n  sendMailtoOpt: sendMailToOperationTeam = new sendMailToOperationTeam();\r\n  currentUser: string;\r\n  data: any;\r\n  resp: any;\r\n  customerdatafromcomponent: any;\r\n  respBackend: boolean;\r\n  submitdisable: boolean;\r\n  checkValue= true;\r\n  constructor(private formBuilder: FormBuilder, private accountBlockingService: AccountBlockingServiceService,\r\n              private router: Router, private dataService: DataService,      private route: ActivatedRoute) { }\r\n  phoneNumber = '^(\\+\\d{1,3}[- ]?)?\\d{10}$';\r\n  accountBlockForm: FormGroup;\r\n  accountBlock = new FCUBSAccsCustomerQueryResDTO();\r\n\r\n  ngOnInit() {\r\n    this.currentUser = localStorage.getItem('currentUser');\r\n    this.dataService.getNewUserInfo().subscribe(customerdatafromcomponent => {\r\n     this.customerdatafromcomponent = customerdatafromcomponent;\r\n     //console.log(this.customerdatafromcomponent);\r\n   });\r\n   // console.log(this.customerdatafromcomponent);\r\n    this.accountBlockForm = this.formBuilder.group({\r\n      customerName: [''],\r\n      customerNumber: [''],\r\n      customerAccountNumber: [''],\r\n      branchCode: [''],\r\n      nameOfOperator: [this.currentUser],\r\n      nameOfCustomer: [''],\r\n      customerMobileNumber: [''],  // , Validators.pattern('^[0-9 \\-\\']+')  //, [Validators.required, Validators.minLength(10), Validators.maxLength(15)]\r\n      mobileNumber: [''], // , Validators.pattern('^[0-9 \\-\\']+')  //, Validators.minLength(10), Validators.maxLength(15)]\r\n      dueDeligenceInfo: [''],\r\n      reasonForBlocking: [''],\r\n      commentsByOperator: [''],\r\n      emailid: ['', ],\r\n      sendmail: ['', Validators.required]\r\n     // dateforblockaccount: []\r\n    });\r\n\r\n    this.route.queryParams.subscribe(params => {\r\n      this.accountBlock.firstName = this.customerdatafromcomponent.firstname;\r\n     // console.log(this.accountBlock.firstName );\r\n      this.accountBlock.lastName = this.customerdatafromcomponent.lastname;\r\n      // console.log(this.accountBlock.lastName);\r\n      if(!this.accountBlock.firstName){\r\n        this.accountBlock.firstName='';\r\n      }if(this.accountBlock.lastName){\r\n        this.accountBlock.lastName='';\r\n      }\r\n      this.accountBlock.customerName = this.accountBlock.firstName + '' + this.accountBlock.lastName;\r\n      this.accountBlock.customerNumber = params.customerNumber;\r\n      this.accountBlock.accountNumber = params.accountNumber;\r\n\r\n      this.accountBlock.branchCode = params.branchCode;\r\n      this.accountBlock.mobileNo = params.mobileNo;\r\n      this.accountBlock.emailAddress = params.email;\r\n      this.data = params.date;\r\n      // //console.log(this.accountBlock);\r\n      // //console.log(this.accountBlock.customerName);\r\n\r\n    });\r\n    // //console.log(this.accountBlock.customerName);\r\n\r\n  }\r\n\r\n  onClickOfSubmit() {\r\n    this.accountBlock.customerName = this.accountBlockForm.get('customerName').value;\r\n    // console.log(  this.accountBlock.customerName );\r\n    this.accountBlock.customerNumber = this.accountBlockForm.get('customerNumber').value;\r\n    // console.log( this.accountBlock.customerNumber);\r\n    this.sendMailtoOpt.emailid = this.accountBlockForm.get('emailid').value;\r\n    this.sendMailtoOpt.nameOfCustomer = this.accountBlockForm.get('nameOfCustomer').value;\r\n    this.sendMailtoOpt.mobileNumber = this.accountBlockForm.get('mobileNumber').value;\r\n    this.sendMailtoOpt.dueDeligenceInfo = this.accountBlockForm.get('dueDeligenceInfo').value;\r\n    this.sendMailtoOpt.commentsByOperator = this.accountBlockForm.get('commentsByOperator').value;\r\n    this.sendMailtoOpt.reasonForBlocking = this.accountBlockForm.get('reasonForBlocking').value;\r\n    this.sendMailtoOpt.nameOfOperator = this.accountBlockForm.get('nameOfOperator').value;\r\n    this.accountBlock.branchCode = this.accountBlockForm.get('branchCode').value;\r\n  //  //console.log(this.accountBlock);\r\n    this.accountBlock.accountNumber = this.accountBlockForm.get('customerAccountNumber').value;\r\n    this.accountBlock.mobileNo = this.accountBlockForm.get('customerMobileNumber').value;\r\n    this.sendMailtoOpt.sendMailtoCustomer = this.accountBlockForm.get('sendmail').value;\r\n    // console.log( this.sendMailtoOpt.sendMailtoCustomer);\r\n    this.sendMailtoOpt.customerName = this.accountBlock.customerName;\r\n    this.sendMailtoOpt.customerMobileNumber = this.accountBlock.mobileNo;\r\n    this.sendMailtoOpt.branchCode = this.accountBlock.branchCode;\r\n    this.sendMailtoOpt.customerNumber = this.accountBlock.customerNumber;\r\n    this.sendMailtoOpt.customerAccountNumber = this.accountBlock.accountNumber;\r\n    this.sendMailtoOpt.statusChangeDate = this.data;\r\n\r\n    // console.log(this.sendMailtoOpt);\r\n    // console.log(localStorage.getItem('currentUser'));\r\n    this.currentUser = localStorage.getItem('currentUser');\r\n    this.sendMailtoOpt.status = this.customerdatafromcomponent.accstatus;\r\n    if (!this.sendMailtoOpt.sendMailtoCustomer) {\r\n    // console.log('send mail to customer enable');\r\n    this.sendMailtoOpt.sendMailtoCustomer = false;\r\n    }\r\n    //console.log(this.sendMailtoOpt);\r\n    if (this.sendMailtoOpt.mobileNumber && this.sendMailtoOpt.nameOfCustomer && this.sendMailtoOpt.dueDeligenceInfo && this.sendMailtoOpt.reasonForBlocking && this.sendMailtoOpt.commentsByOperator) {\r\n     this.submitdisable = true;\r\n     this.accountBlockingService.accountBlock(this.sendMailtoOpt).subscribe(resp => {\r\n        this.resp = resp;\r\n        // console.log(resp);\r\n        if (this.resp) {\r\n          Swal.fire({\r\n            title: 'Account frozen successfully.',\r\n\r\n            // type: 'success',\r\n          });\r\n\r\n        } else {\r\n          Swal.fire('Unable to process the request ');\r\n        }\r\n      });\r\n     // console.log(\"Response from backend \"+this.resp);\r\n     this.navigatetoCustSearch();\r\n// routerLink=\"/account-block/customer-search\"\r\n\r\n    } else {\r\n      Swal.fire ('All fields are mandatory', 'Ensure all fields are captured correctly.');\r\n    }\r\n  }\r\nnavigatetoCustSearch() {\r\n  // console.log('method nav call');\r\n  this.router.navigate['/account-block/customer-search'];\r\n}\r\n\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { QuillModule } from 'ngx-quill';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { AngularMaterialModule } from 'src/app/shared/angular-material/angular-material.module';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { RouterModule } from '@angular/router';\r\nimport { AccountBlockingComponent } from './account-blocking.component';\r\nimport { blockroutes } from './account-blocking-routing.module';\r\nimport { NgxSpinnerModule } from 'ngx-spinner';\r\nimport { AccountCustomerSearchComponent } from './account-customer-search/account-customer-search.component';\r\nimport { ViewOnAccountBlockingComponent } from './view-on-account-blocking/view-on-account-blocking.component';\r\nimport { DataService } from './account-customer-search/dataservice';\r\n\r\n\r\n@NgModule({\r\n  declarations: [AccountBlockingComponent, AccountCustomerSearchComponent, ViewOnAccountBlockingComponent],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n\r\n    AngularMaterialModule,\r\n    NgxSpinnerModule,\r\n    FlexLayoutModule,\r\n    ReactiveFormsModule,\r\n    RouterModule.forChild(blockroutes)\r\n  ],\r\n  entryComponents: [ViewOnAccountBlockingComponent],\r\n  providers: [DataService]\r\n})\r\nexport class AccountBlockingModule { }\r\n","import { AccountDetails } from './AccountDetails';\r\n\r\nexport class FCUBSAccsCustomerQueryResDTO  {\r\n     accountNumber;\r\n     mobileNo;\r\n     emailAddress;\r\n     customerNumber;\r\n     firstName;\r\n     lastName;\r\n     branchCode;\r\n     customerName:any;\r\n  accountDetails:  Array<any>;\r\n\r\n}\r\n","export default \"/* .mat-toolbar\\r\\n{\\r\\n    width: 100%;\\r\\n    padding: 12px 20px;\\r\\n    margin: 8px 0;\\r\\n    display: inline-block;\\r\\n    border: 1px solid \\t#bbbbbb;\\r\\n    border-radius: 4px;\\r\\n    box-sizing: border-box;\\r\\n} */\\r\\n.mat-table\\r\\n{\\r\\n    width: 100%;\\r\\n    /* padding: 12px 20px;\\r\\n  \\r\\n   */\\r\\n    border: 0px solid #ccc;\\r\\n    border-radius: 4px;\\r\\n    box-sizing: border-box; \\r\\n    background-color: rgb(235, 235, 222); \\r\\n   \\r\\n   \\r\\n}\\r\\nmat-spinner\\r\\n{\\r\\n    margin-left: -30%;\\r\\n   \\r\\n}\\r\\n.center{\\r\\n    width: 45%;\\r\\n    margin: 10px auto;\\r\\n  }\\r\\n.main-div{\\r\\n    \\r\\n    justify-content: center;\\r\\n    align-items: center;\\r\\n  }\\r\\n.md-dialog-container {\\r\\n    width: 1200px;\\r\\n  }\\r\\n.mat-header-cell {\\r\\n    text-align: center;\\r\\n  }\\r\\n.mat-cell {\\r\\n    text-align: center;\\r\\n  }\\r\\ntr:nth-child(even) {\\r\\n    background-color: #f2f2f2;\\r\\n  \\r\\n  }\\r\\nth {\\r\\n  \\r\\n    background-color:#1b9ab9;\\r\\n    color: rgb(244, 252, 246);\\r\\n    font-weight: normal;\\r\\n    width: 300px;\\r\\n    font-size: 11px\\r\\n   \\r\\n  \\r\\n  }\\r\\ntr {\\r\\n    background-color: #b8def0;\\r\\n    color: rgb(34, 29, 29);\\r\\n    font-weight: normal;\\r\\n    font-size: 11px;\\r\\n    width: 300px;\\r\\n  }\\r\\nmat-card  {\\r\\n  width: 500px;\\r\\n  height: 280px;\\r\\n}\\r\\nmat-card mat-form-field {\\r\\n  font-size: 10px;\\r\\n}\\r\\n.full-width {\\r\\n  width: 100%;\\r\\n}\\r\\n.mat-cell {\\r\\n\\r\\n  font-size: 10px;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdmlld3MvYWNjb3VudC1ibG9ja2luZy9hY2NvdW50LWN1c3RvbWVyLXNlYXJjaC9hY2NvdW50LWN1c3RvbWVyLXNlYXJjaC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7R0FTRztBQUNIOztJQUVJLFdBQVc7SUFDWDs7SUFFQTtJQUNBLHNCQUFzQjtJQUN0QixrQkFBa0I7SUFDbEIsc0JBQXNCO0lBQ3RCLG9DQUFvQzs7O0FBR3hDO0FBQ0E7O0lBRUksaUJBQWlCOztBQUVyQjtBQUVBO0lBQ0ksVUFBVTtJQUNWLGlCQUFpQjtFQUNuQjtBQUVBOztJQUVFLHVCQUF1QjtJQUN2QixtQkFBbUI7RUFDckI7QUFDQTtJQUNFLGFBQWE7RUFDZjtBQUVBO0lBQ0Usa0JBQWtCO0VBQ3BCO0FBQ0E7SUFDRSxrQkFBa0I7RUFDcEI7QUFHQTtJQUNFLHlCQUF5Qjs7RUFFM0I7QUFFQTs7SUFFRSx3QkFBd0I7SUFDeEIseUJBQXlCO0lBQ3pCLG1CQUFtQjtJQUNuQixZQUFZO0lBQ1o7OztFQUdGO0FBQ0E7SUFDRSx5QkFBeUI7SUFDekIsc0JBQXNCO0lBQ3RCLG1CQUFtQjtJQUNuQixlQUFlO0lBQ2YsWUFBWTtFQUNkO0FBRUQ7RUFDQyxZQUFZO0VBQ1osYUFBYTtBQUNmO0FBQ0E7RUFDRSxlQUFlO0FBQ2pCO0FBSUE7RUFDRSxXQUFXO0FBQ2I7QUFDQTs7RUFFRSxlQUFlO0FBQ2pCIiwiZmlsZSI6InNyYy9hcHAvdmlld3MvYWNjb3VudC1ibG9ja2luZy9hY2NvdW50LWN1c3RvbWVyLXNlYXJjaC9hY2NvdW50LWN1c3RvbWVyLXNlYXJjaC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLyogLm1hdC10b29sYmFyXHJcbntcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgcGFkZGluZzogMTJweCAyMHB4O1xyXG4gICAgbWFyZ2luOiA4cHggMDtcclxuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgIGJvcmRlcjogMXB4IHNvbGlkIFx0I2JiYmJiYjtcclxuICAgIGJvcmRlci1yYWRpdXM6IDRweDtcclxuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XHJcbn0gKi9cclxuLm1hdC10YWJsZVxyXG57XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIC8qIHBhZGRpbmc6IDEycHggMjBweDtcclxuICBcclxuICAgKi9cclxuICAgIGJvcmRlcjogMHB4IHNvbGlkICNjY2M7XHJcbiAgICBib3JkZXItcmFkaXVzOiA0cHg7XHJcbiAgICBib3gtc2l6aW5nOiBib3JkZXItYm94OyBcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYigyMzUsIDIzNSwgMjIyKTsgXHJcbiAgIFxyXG4gICBcclxufVxyXG5tYXQtc3Bpbm5lclxyXG57XHJcbiAgICBtYXJnaW4tbGVmdDogLTMwJTtcclxuICAgXHJcbn1cclxuXHJcbi5jZW50ZXJ7XHJcbiAgICB3aWR0aDogNDUlO1xyXG4gICAgbWFyZ2luOiAxMHB4IGF1dG87XHJcbiAgfVxyXG4gIFxyXG4gIC5tYWluLWRpdntcclxuICAgIFxyXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gIH1cclxuICAubWQtZGlhbG9nLWNvbnRhaW5lciB7XHJcbiAgICB3aWR0aDogMTIwMHB4O1xyXG4gIH1cclxuIFxyXG4gIC5tYXQtaGVhZGVyLWNlbGwge1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gIH1cclxuICAubWF0LWNlbGwge1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gIH1cclxuICBcclxuICBcclxuICB0cjpudGgtY2hpbGQoZXZlbikge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2YyZjJmMjtcclxuICBcclxuICB9XHJcbiAgXHJcbiAgdGgge1xyXG4gIFxyXG4gICAgYmFja2dyb3VuZC1jb2xvcjojMWI5YWI5O1xyXG4gICAgY29sb3I6IHJnYigyNDQsIDI1MiwgMjQ2KTtcclxuICAgIGZvbnQtd2VpZ2h0OiBub3JtYWw7XHJcbiAgICB3aWR0aDogMzAwcHg7XHJcbiAgICBmb250LXNpemU6IDExcHhcclxuICAgXHJcbiAgXHJcbiAgfVxyXG4gIHRyIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNiOGRlZjA7XHJcbiAgICBjb2xvcjogcmdiKDM0LCAyOSwgMjkpO1xyXG4gICAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcclxuICAgIGZvbnQtc2l6ZTogMTFweDtcclxuICAgIHdpZHRoOiAzMDBweDtcclxuICB9XHJcbiBcclxuIG1hdC1jYXJkICB7XHJcbiAgd2lkdGg6IDUwMHB4O1xyXG4gIGhlaWdodDogMjgwcHg7XHJcbn1cclxubWF0LWNhcmQgbWF0LWZvcm0tZmllbGQge1xyXG4gIGZvbnQtc2l6ZTogMTBweDtcclxufVxyXG5cclxuXHJcblxyXG4uZnVsbC13aWR0aCB7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbn1cclxuLm1hdC1jZWxsIHtcclxuXHJcbiAgZm9udC1zaXplOiAxMHB4O1xyXG59Il19 */\"","import { Component, OnInit, ViewChild, Input, ViewChildren, QueryList } from '@angular/core';\r\nimport { FormGroup, FormControl, FormBuilder, Validators } from '@angular/forms';\r\nimport Swal from 'sweetalert2';\r\nimport { AccountBlockingServiceService } from 'src/app/shared/services/account-blocking-service.service';\r\nimport { FCUBSAccsCustomerQueryResDTO } from './FCUBSAccsCustomerQueryResDTO';\r\nimport { MatTableDataSource, MatPaginator, MatDialog } from '@angular/material';\r\nimport { NavigationExtras, Router, ActivatedRoute } from '@angular/router';\r\nimport { ViewOnAccountBlockingComponent } from '../view-on-account-blocking/view-on-account-blocking.component';\r\nimport { AccountDetails } from './AccountDetails';\r\nimport { DataService } from './dataservice';\r\nimport * as CryptoJS from 'crypto-js';\r\n@Component({\r\n  selector: 'app-account-customer-search',\r\n  templateUrl: './account-customer-search.component.html',\r\n  styleUrls: ['./account-customer-search.component.css']\r\n})\r\nexport class AccountCustomerSearchComponent implements OnInit {\r\n  // respFromBackend = new FCUBSAccsCustomerQueryResDTO();\r\n  showSpinn = false;\r\n  fetch = false;\r\n  checkCust: boolean;\r\n  check: boolean;\r\n  res: any;\r\n  currentUser: string;\r\n  viewTbale: any;\r\n  showtable1: boolean;\r\n  showtable2: boolean;\r\n  freezebutton: boolean;\r\n  currentdataforblock: any;\r\n  //custMoreDetailsdata: Array<AccountDetails>;\r\n  custMoreDetailsdata: Array<any>;\r\n  constructor(private accountBlockingService: AccountBlockingServiceService,\r\n    public dialog: MatDialog,\r\n    private formBuild: FormBuilder,\r\n    private route: Router,\r\n    private dataService: DataService,\r\n    private routevidya: ActivatedRoute) { }\r\n  accountForm: FormGroup;\r\n\r\n  result: any;\r\n  showtable = false;\r\n  displayedColumns: string[] = ['accountNumber', 'actionsColumn'];\r\n  // 'accountNumber', 'branchCode', 'mobileNo'\r\n  // displayedColumns1: string[] = ['accountCurrency','accountNumber','blockStatus','branchCode','customerAddress','customerName','customerNumber','dateOfBirth','emailAddress','fcubsCurrentDate','firstName','lastName','mobileNo','nationalId'];\r\n  displayedColumns1: string[] = ['pnationalid', 'branchcode', 'custacno', 'ccy', 'custno', 'firstname', 'lastname', 'dateofbirth', 'email', 'addr1', 'frozen', 'noCredit', 'noDebit', 'dormant', 'actionsColumn'];\r\n\r\n  displayedColumns2: string[] = ['refNo', 'accBranch', 'accNo', 'transDate', 'drBrIndicator', 'fCurrAmt', 'lCurrAmt'];\r\n  dataSource1: any;\r\n  dataSource2: any;\r\n  dataSource = new MatTableDataSource();\r\n\r\n  trndata: any;\r\n  @ViewChildren(MatPaginator) paginator = new QueryList<MatPaginator>();\r\n  user_id: any;\r\n  data: string;\r\n  ngOnInit() {\r\n\r\n    this.accountForm = this.formBuild.group({\r\n      firstName: [''],\r\n      customerNumber: ['', [Validators.minLength(4), Validators.maxLength(9)]],\r\n      accountNumber: ['', [Validators.minLength(10), Validators.maxLength(15)]],\r\n      mobileNo: ['', [Validators.minLength(10), Validators.maxLength(15), Validators.pattern('^[0-9 \\-\\']+')]],\r\n      lastName: [''],\r\n      customerName: [''],\r\n      branchCode: ['', [Validators.minLength(3), Validators.maxLength(3)]],\r\n      nationalId: ['']\r\n    });\r\n\r\n    this.user_id = sessionStorage.getItem('user_id');\r\n  }\r\n  onFetch(formData) {\r\n    this.dataSource = null;\r\n    this.dataSource1 = null;\r\n    this.dataSource2 = null;\r\n    this.showtable = false;\r\n    this.showtable1 = false;\r\n    this.showtable2 = false;\r\n    if (formData) {\r\n      this.showSpinn = true;\r\n      //new code for security\r\n      this.data = JSON.stringify(formData);\r\n      // console.log(this.data);\r\n      var encrypted = CryptoJS.AES.encrypt(this.data, \"@12#90!^*NPR*g&*()$34#$\");\r\n\r\n      var dataenc = encrypted.toString();\r\n      console.log(dataenc);\r\n      this.accountBlockingService.accountBlockingQuery(dataenc, this.user_id)\r\n        .subscribe(result => {\r\n\r\n          this.result = result;\r\n          // console.log('Response for cust search ::' + this.result);\r\n          if (this.result) {\r\n            this.showSpinn = false;\r\n            // console.log('Response from backend' + this.result);\r\n            this.showtable = true;\r\n            this.dataSource = new MatTableDataSource(\r\n              this.result\r\n            );\r\n            //   this.dataSource.paginator = this.paginator.toArray()[0];\r\n\r\n\r\n\r\n          } else {\r\n            this.showSpinn = false;\r\n            Swal.fire({\r\n\r\n              text: 'Customer Not Found',\r\n              type: 'warning',\r\n            });\r\n          }\r\n\r\n        });\r\n\r\n      this.fetch = true;\r\n    } else {\r\n      Swal.fire('Enter Customer Information ');\r\n    }\r\n  }\r\n  custMoreDetails(email) {\r\n    // console.log(email);\r\n    this.currentdataforblock = email;\r\n    this.showSpinn = true;\r\n    this.accountBlockingService.custMoreDetails()\r\n      .subscribe(custMoreDetailsdata => {\r\n\r\n        this.custMoreDetailsdata = custMoreDetailsdata;\r\n        //  console.log(this.custMoreDetailsdata);\r\n        if (this.custMoreDetailsdata) {\r\n          this.showSpinn = false;\r\n          this.showtable1 = true;\r\n          if (this.custMoreDetailsdata[0].frozen === 'Y') {\r\n            this.freezebutton = true;\r\n          }\r\n          this.dataSource1 = new MatTableDataSource<AccountDetails>(this.custMoreDetailsdata);\r\n          // console.log('Cust Details more from backend'+ this.custMoreDetailsdata);\r\n        } else {\r\n          Swal.fire('No Data For Customer More Details');\r\n        }\r\n      });\r\n  }\r\n  onClickOfBlock(row) {\r\n    // console.log('block call');\r\n    // console.log(row);\r\n    this.dataService.setNewUserInfo(row);\r\n    const navigationExtras: NavigationExtras = {\r\n      queryParams: {\r\n        firstname: row.firstname,\r\n        lastname: row.lastname,\r\n        customerNumber: row.custno,\r\n        branchCode: row.branchcode,\r\n        accountNumber: row.custacno,\r\n        mobileNo: row.mobilenumber,\r\n        email: row.email,\r\n        date: this.currentdataforblock\r\n      }\r\n\r\n    };\r\n    this.route.navigate(['account-block'], navigationExtras);\r\n\r\n\r\n  }\r\n\r\n  transactiondetails(row) {\r\n\r\n    // get the backend dat for transaction\r\n    // console.log(row);\r\n\r\n    // branch code is missing\r\n\r\n    // console.log(row.custacno);\r\n    // console.log(row.branchcode);\r\n    // console.log(row.custno);\r\n    this.showSpinn = true;\r\n    this.accountBlockingService.last10Transaction(row.custacno, row.branchcode, row.custno)\r\n      .subscribe(trndata => {\r\n        this.showSpinn = false;\r\n        this.trndata = trndata;\r\n        // console.log('Transaction Data from backend'+ this.trndata);\r\n        if (this.trndata) {\r\n          this.showtable2 = true;\r\n          this.dataSource2 = new MatTableDataSource<any>(this.trndata);\r\n        } else {\r\n          Swal.fire('No data to display ');\r\n        }\r\n      });\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs/internal/BehaviorSubject';\r\n\r\n\r\n@Injectable()\r\nexport class DataService {\r\n\r\n  constructor() { }\r\n\r\n  private newUser = new BehaviorSubject<any>({\r\n  });\r\n\r\n  setNewUserInfo(user: any) {\r\n    this.newUser.next(user);\r\n  }\r\n\r\n  getNewUserInfo() {\r\n    return this.newUser.asObservable();\r\n  }\r\n\r\n\r\n\r\n\r\n}","export default \"table {\\r\\n    width: 100%;\\r\\n    background: rgb(235, 235, 222);\\r\\n  }\\r\\n  \\r\\n  .mat-form-field {\\r\\n    font-size: 14px;\\r\\n    width: 100%;\\r\\n  }\\r\\n  \\r\\n  td, th {\\r\\n    width: 25%;\\r\\n    \\r\\n  }\\r\\n  \\r\\n  th {\\r\\n  \\r\\n    background-color:#1b9ab9;\\r\\n    color: rgb(244, 252, 246);\\r\\n    font-weight: normal;\\r\\n    width: 80px;\\r\\n    font-size: 11px\\r\\n   \\r\\n  \\r\\n  }\\r\\n  \\r\\n  .mat-raised-button {\\r\\n    width: 80px;\\r\\n    height: 27px;\\r\\n    line-height: 20px;\\r\\n    min-height: 20px;\\r\\n    vertical-align: top;\\r\\n    font-size: 11px;\\r\\n  }\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdmlld3MvYWNjb3VudC1ibG9ja2luZy92aWV3LW9uLWFjY291bnQtYmxvY2tpbmcvdmlldy1vbi1hY2NvdW50LWJsb2NraW5nLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxXQUFXO0lBQ1gsOEJBQThCO0VBQ2hDOztFQUVBO0lBQ0UsZUFBZTtJQUNmLFdBQVc7RUFDYjs7RUFFQTtJQUNFLFVBQVU7O0VBRVo7O0VBQ0E7O0lBRUUsd0JBQXdCO0lBQ3hCLHlCQUF5QjtJQUN6QixtQkFBbUI7SUFDbkIsV0FBVztJQUNYOzs7RUFHRjs7RUFDQTtJQUNFLFdBQVc7SUFDWCxZQUFZO0lBQ1osaUJBQWlCO0lBQ2pCLGdCQUFnQjtJQUNoQixtQkFBbUI7SUFDbkIsZUFBZTtFQUNqQiIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL2FjY291bnQtYmxvY2tpbmcvdmlldy1vbi1hY2NvdW50LWJsb2NraW5nL3ZpZXctb24tYWNjb3VudC1ibG9ja2luZy5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsidGFibGUge1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBiYWNrZ3JvdW5kOiByZ2IoMjM1LCAyMzUsIDIyMik7XHJcbiAgfVxyXG4gIFxyXG4gIC5tYXQtZm9ybS1maWVsZCB7XHJcbiAgICBmb250LXNpemU6IDE0cHg7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICB9XHJcbiAgXHJcbiAgdGQsIHRoIHtcclxuICAgIHdpZHRoOiAyNSU7XHJcbiAgICBcclxuICB9XHJcbiAgdGgge1xyXG4gIFxyXG4gICAgYmFja2dyb3VuZC1jb2xvcjojMWI5YWI5O1xyXG4gICAgY29sb3I6IHJnYigyNDQsIDI1MiwgMjQ2KTtcclxuICAgIGZvbnQtd2VpZ2h0OiBub3JtYWw7XHJcbiAgICB3aWR0aDogODBweDtcclxuICAgIGZvbnQtc2l6ZTogMTFweFxyXG4gICBcclxuICBcclxuICB9XHJcbiAgLm1hdC1yYWlzZWQtYnV0dG9uIHtcclxuICAgIHdpZHRoOiA4MHB4O1xyXG4gICAgaGVpZ2h0OiAyN3B4O1xyXG4gICAgbGluZS1oZWlnaHQ6IDIwcHg7XHJcbiAgICBtaW4taGVpZ2h0OiAyMHB4O1xyXG4gICAgdmVydGljYWwtYWxpZ246IHRvcDtcclxuICAgIGZvbnQtc2l6ZTogMTFweDtcclxuICB9Il19 */\"","import { Component, OnInit, ViewChildren, QueryList } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-view-on-account-blocking',\r\n  templateUrl: './view-on-account-blocking.component.html',\r\n  styleUrls: ['./view-on-account-blocking.component.css']\r\n})\r\nexport class ViewOnAccountBlockingComponent implements OnInit {\r\n\r\n  displayedColumns: string[] = ['customerNo','accountNo','branchCode','transactionAmount','debitCredit','currency','transactionDescription'];\r\n  \r\n \r\n\r\n  @ViewChildren(MatPaginator) paginator= new QueryList<MatPaginator>();\r\n  \r\n  dataSource: any;\r\n  emailMaintenace:FormGroup;\r\n  \r\n\r\n  constructor(private formBuilder:FormBuilder) {\r\n   \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.emailMaintenace = this.formBuilder.group({\r\n      emailid: ['', [Validators.required,Validators.email]]\r\n    });\r\n\r\n  }\r\n \r\n  private fieldArray: Array<any> = [];\r\n  private newAttribute: any = {};\r\n\r\n  addFieldValue() {\r\n      this.fieldArray.push(this.newAttribute)\r\n      this.newAttribute = {};\r\n  }\r\n\r\n  deleteFieldValue(index) {\r\n      this.fieldArray.splice(index, 1);\r\n  }\r\n\r\n}\r\n"],"sourceRoot":"webpack:///"}