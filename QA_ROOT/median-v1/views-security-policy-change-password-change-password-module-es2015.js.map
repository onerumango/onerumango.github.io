{"version":3,"sources":["./src/app/views/security-policy/change-password/change-password.component.html","./src/app/shared/models/login.ts","./src/app/views/security-policy/change-password/change-password.component.scss","./src/app/views/security-policy/change-password/change-password.component.ts","./src/app/views/security-policy/change-password/change-password.module.ts","./src/app/views/security-policy/change-password/change-password.routing.module.ts"],"names":[],"mappings":"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","file":"views-security-policy-change-password-change-password-module-es2015.js","sourcesContent":["export default \"<mat-toolbar>Process Monitoring Screen</mat-toolbar>\\r\\n\\r\\n\\r\\n\\r\\n<mat-card class=\\\"navigation\\\">\\r\\n  <mat-form-field>\\r\\n    <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Filter\\\">\\r\\n  </mat-form-field>\\r\\n  <div class=\\\"mat-elevation-z8\\\">\\r\\n    <table mat-table [dataSource]=\\\"dataSource\\\">\\r\\n\\r\\n      <!-- Position Column -->\\r\\n      <ng-container matColumnDef=\\\"userId\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef> Authorizer</th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.userId}} </td>\\r\\n      </ng-container>\\r\\n\\r\\n      <ng-container matColumnDef=\\\"batchNo\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef> Batch No</th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.batchNo}} </td>\\r\\n      </ng-container>\\r\\n\\r\\n      <ng-container matColumnDef=\\\"date\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef> Date</th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.date | date}} </td>\\r\\n      </ng-container>\\r\\n\\r\\n      <!-- Name Column -->\\r\\n      <ng-container matColumnDef=\\\"relatedProcess\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef> Related Process </th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.relatedProcess}} </td>\\r\\n      </ng-container>\\r\\n\\r\\n      <!-- Weight Column -->\\r\\n      <ng-container matColumnDef=\\\"totalNoOfRecord\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef> Total Record </th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.totalNoOfRecord}} </td>\\r\\n      </ng-container>\\r\\n\\r\\n      <!-- Symbol Column -->\\r\\n      <ng-container matColumnDef=\\\"success\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef> Success Record </th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.success}} </td>\\r\\n      </ng-container>\\r\\n      <ng-container matColumnDef=\\\"failed\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef> Failed Record </th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.failed}} </td>\\r\\n      </ng-container>\\r\\n      <ng-container matColumnDef=\\\"status\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef> Status </th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.status}} </td>\\r\\n      </ng-container>\\r\\n      <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n      <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n    </table>\\r\\n\\r\\n    <mat-paginator [pageSizeOptions]=\\\"[5, 10, 20]\\\" showFirstLastButtons></mat-paginator>\\r\\n  </div>\\r\\n\\r\\n</mat-card>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\"","export class Login {\r\nusername: string;\r\npassword: string;\r\notp:string;\r\n}\r\n","export default \"table {\\n  width: 100%;\\n}\\n\\n.navigation {\\n  /* width: 300px; */\\n  height: 475px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdmlld3Mvc2VjdXJpdHktcG9saWN5L2NoYW5nZS1wYXNzd29yZC9GOlxcbXV0aHUtb25ib2FyZFxcbWVkaWFuLXBoMi11aS9zcmNcXGFwcFxcdmlld3NcXHNlY3VyaXR5LXBvbGljeVxcY2hhbmdlLXBhc3N3b3JkXFxjaGFuZ2UtcGFzc3dvcmQuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL3ZpZXdzL3NlY3VyaXR5LXBvbGljeS9jaGFuZ2UtcGFzc3dvcmQvY2hhbmdlLXBhc3N3b3JkLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksV0FBQTtBQ0NKOztBREVBO0VBQ0ksa0JBQUE7RUFDQSxhQUFBO0FDQ0oiLCJmaWxlIjoic3JjL2FwcC92aWV3cy9zZWN1cml0eS1wb2xpY3kvY2hhbmdlLXBhc3N3b3JkL2NoYW5nZS1wYXNzd29yZC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbInRhYmxle1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbn1cclxuXHJcbi5uYXZpZ2F0aW9uIHtcclxuICAgIC8qIHdpZHRoOiAzMDBweDsgKi9cclxuICAgIGhlaWdodDogNDc1cHg7XHJcbiAgXHJcbiAgfSIsInRhYmxlIHtcbiAgd2lkdGg6IDEwMCU7XG59XG5cbi5uYXZpZ2F0aW9uIHtcbiAgLyogd2lkdGg6IDMwMHB4OyAqL1xuICBoZWlnaHQ6IDQ3NXB4O1xufSJdfQ== */\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { SecurityDto } from '../security-policy/security-dto';\r\nimport { ApiService } from 'src/app/shared/services/sias2-services/excel.api.service';\r\nimport { SecurityPolicyService } from '../security-policy/security-policy.service';\r\nimport Swal from 'sweetalert2';\r\nimport * as CryptoJS from 'crypto-js';\r\nimport { Login } from 'src/app/shared/models/login';\r\nimport { LoginService } from '../../login/login.service';\r\nimport { MatPaginator, MatTableDataSource } from '@angular/material';\r\nimport { PeriodicElement } from '../../roles-impl/new-role/new-role.component';\r\nimport { environment } from 'src/environments/environment.prod';\r\n\r\n\r\n@Component({\r\n  selector: 'app-change-password',\r\n  templateUrl: './change-password.component.html',\r\n  styleUrls: ['./change-password.component.scss']\r\n})\r\nexport class ChangePasswordComponent implements OnInit {\r\n  passwordReset1: any;\r\n  login = new Login();\r\n  res: any;\r\n  editable: boolean = false;\r\n  finalpattern: string;\r\n  responseMsg: any;\r\n  responseError: any;\r\n  passwordDTO: any;\r\n  passwordStatus: boolean;\r\n  msg: any;\r\n  userId: string;\r\n  lowerCase: string;\r\n  security: SecurityDto;\r\n  security1: SecurityDto;\r\n  minPass: any;\r\n  maxPass: any;\r\n  ucase: any;\r\n  lcase: any;\r\n  num: any;\r\n  splc: any;\r\n\r\n  reactiveForm: FormGroup;\r\n  passwordRegex: any;\r\n  errorMsg: any = '';\r\n  dataresp: any;\r\n  dataSource: any;\r\n  displayedColumns: string[] = ['userId', 'batchNo', 'relatedProcess', 'date', 'totalNoOfRecord', 'success', 'failed', 'status'];\r\n\r\n\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n\r\n  constructor(private apiService: SecurityPolicyService, private fb: FormBuilder, private toastr: ToastrService, private loginservice: LoginService) {\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getDataForMonitor();\r\n\r\n\r\n\r\n    this.reactiveForm = this.fb.group({\r\n      userId: new FormControl(''), // added\r\n      otp: new FormControl('', [Validators.required]),\r\n      password: new FormControl('', [Validators.required,\r\n      Validators.compose([Validators.pattern(this.passwordRegex),\r\n      Validators.maxLength(this.maxPass),\r\n      Validators.minLength(this.minPass)])]),\r\n      confirmPassword: new FormControl('', [Validators.required,\r\n      Validators.compose([Validators.pattern(this.passwordRegex),\r\n      Validators.maxLength(this.maxPass),\r\n      Validators.minLength(this.minPass)])])\r\n    });\r\n\r\n    this.userId = localStorage.getItem('userIdForChangePassword');\r\n    let a, b;\r\n    this.apiService.fetchSecurityPolicyService().subscribe(resp => {\r\n      this.security = resp;\r\n      console.log(this.security);\r\n      this.minPass = this.security.minPswdLength;\r\n      this.maxPass = this.security.maxPswdLength;\r\n\r\n      this.buildForm(this.minPass, this.maxPass);\r\n      console.log(this.minPass, this.maxPass);\r\n      console.log(this.security);\r\n    });\r\n    this.buildForm(this.minPass ? this.minPass : a, this.maxPass ? this.maxPass : b);\r\n  }\r\n\r\n  buildForm(a, b) {\r\n    // ---------- Password Policy Implementation (BEGIN) ----------\r\n    this.apiService.fetchSecurityPolicyService()\r\n      .subscribe(resp => {\r\n        this.security1 = resp;\r\n        this.ucase = this.security1.pswdComplexUcase;\r\n        this.lcase = this.security1.pswdComplexLcase;\r\n        this.num = this.security1.pswdComplexNum;\r\n        this.splc = this.security1.pswdComplexSplc;\r\n\r\n        if (this.security1.pswdComplexUcase) {\r\n          this.passwordRegex = '(?=[^A-Z]*[A-Z])';\r\n          this.errorMsg = ' UpperCase';\r\n        }\r\n        if (this.security1.pswdComplexLcase) {\r\n          this.passwordRegex = this.passwordRegex + '(?=[^a-z]*[a-z])';\r\n          if (this.errorMsg != null) {\r\n            this.errorMsg = this.errorMsg + ', LowerCase';\r\n          }\r\n          else {\r\n            this.errorMsg = this.errorMsg + ' LowerCase';\r\n          }\r\n        }\r\n        if (this.security1.pswdComplexNum) {\r\n          this.passwordRegex = this.passwordRegex + '(?=[^0-9]*[0-9])';\r\n          if (this.errorMsg != null) {\r\n            this.errorMsg = this.errorMsg + ', Number';\r\n          }\r\n          else {\r\n            this.errorMsg = this.errorMsg + ' Number';\r\n          }\r\n        }\r\n        if (this.security1.pswdComplexSplc) {\r\n          this.passwordRegex = this.passwordRegex + '(?=[^!-@]*[!-@])';\r\n          if (this.errorMsg != null) {\r\n            this.errorMsg = this.errorMsg + ', Special Character';\r\n          }\r\n          else {\r\n            this.errorMsg = this.errorMsg + ' Special Character';\r\n          }\r\n        }\r\n\r\n        this.passwordRegex = this.passwordRegex + '.{' + this.minPass + ',' + this.maxPass + '}';\r\n        // this.passwordRegex = \"(?=[^A-Z]*[A-Z])(?=[^a-z]*[a-z])(?=[^!-@]*[!-@]).{10,15}\";\r\n        this.errorMsg = 'Password must contain atleast one ' + this.errorMsg + '.';\r\n        console.log(this.passwordRegex);\r\n        // ---------- Password Policy Implementation (END) ----------\r\n\r\n        this.reactiveForm = this.fb.group({\r\n          userId: new FormControl(''),\r\n          otp: new FormControl('', [Validators.required]),\r\n          password: new FormControl('', [Validators.required,\r\n          Validators.compose([Validators.pattern(this.passwordRegex),\r\n          Validators.maxLength(this.maxPass),\r\n          Validators.minLength(this.minPass)])]),\r\n          confirmPassword: new FormControl('', [Validators.required,\r\n          Validators.compose([Validators.pattern(this.passwordRegex),\r\n          Validators.maxLength(this.maxPass),\r\n          Validators.minLength(this.minPass)])])\r\n        });\r\n      });\r\n\r\n    console.log(this.minPass, this.maxPass);\r\n    console.log('form', this.reactiveForm);\r\n  }\r\n\r\n  pwdMatchValidator(frm: FormGroup) {\r\n    return !this.passwordRegex ? null : { mismatch: true };\r\n  }\r\n\r\n  ngAfterViewInit() { }\r\n\r\n  reloadData() {\r\n    console.log('method invoked');\r\n    this.apiService.fetchSecurityPolicyService().subscribe(resp => {\r\n      this.security = resp;\r\n      console.log(this.security);\r\n    });\r\n  }\r\n  applyFilter(filterValue: string) {\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n\r\n  public changePassword(newPassword: string, confirmPassword: string, userId: string, otp) {\r\n    console.log(newPassword, confirmPassword, userId, otp);\r\n\r\n    if (newPassword === confirmPassword) {\r\n\r\n    } else {\r\n      Swal.fire('Password Not Matched.');\r\n    }\r\n    let encryptedAES = CryptoJS.AES.encrypt(newPassword, '@12#90!^*NPR*g&*()$34#$');\r\n    let USERNAME = CryptoJS.AES.encrypt(userId, '@12#90!^*NPR*g&*()$34#$');\r\n\r\n    var data = encryptedAES.toString();\r\n    let uname = USERNAME.toString();\r\n    this.login.password = data;\r\n    this.login.username = uname;\r\n    this.login.otp = otp;\r\n    console.log(this.login);\r\n    this.loginservice.forgetPassword(this.login).subscribe(res => {\r\n      this.res = res;\r\n      console.log(this.res);\r\n      if (this.res) {\r\n        // this.spinnerbutton = false;\r\n        if (this.res[0] === 'Login success.') {\r\n          Swal.fire('password Changed Successfully.');\r\n        } else {\r\n          Swal.fire(this.res[0]);\r\n        }\r\n\r\n        // this.router.navigate(['/dashboard']);\r\n      } else {\r\n        // this.spinnerbutton = false;\r\n        // this.snack.open('Choose Other Password Unable to Reset!', 'OK', { duration: 4000 });\r\n        Swal.fire('Choose Other Password ', 'or otp is invalid.');\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n  reset() {\r\n    this.responseError = null;\r\n    this.responseMsg = null;\r\n    this.passwordStatus = false;\r\n  }\r\n  getOtp1(userId) {\r\n    console.log(userId);\r\n    this.editable = true;\r\n  }\r\n\r\n  getDataForMonitor() {\r\n    this.apiService.getMonitorData().subscribe(dataresp => {\r\n      this.dataresp = dataresp;\r\n      console.log(this.dataresp);\r\n      this.dataSource = new MatTableDataSource<any>(this.dataresp);\r\n      this.dataSource.paginator = this.paginator;\r\n    })\r\n  }\r\n  //  submit(login: Login) {\r\n  //     if(!login.username){\r\n  //       Swal.fire('Enter User Id.');\r\n  //       return;\r\n  //     }\r\n\r\n  //       var encryptedAES = CryptoJS.AES.encrypt(login.password, \"@12#90!^*NPR*g&*()$34#$\");\r\n  //     var USERNAME = CryptoJS.AES.encrypt(login.username, \"@12#90!^*NPR*g&*()$34#$\");\r\n\r\n  //    var data=encryptedAES.toString();\r\n  //     var uname=USERNAME.toString();\r\n  //     this.login1.password=data;\r\n  //     this.login1.username=uname;\r\n  //     console.log(\"otp is\",this.otp);\r\n  //     this.login1.otp=this.otp;\r\n  //     console.log(this.login1);\r\n\r\n  //     this.spinnerbutton = true;\r\n  //     this.loginservice.forgetPassword(this.login1).subscribe(res => {\r\n  //       this.var1 = res;\r\n  //       console.log(this.var1);\r\n  //       if (this.var1) {\r\n  //         this.spinnerbutton = false;\r\n  //         if(this.var1[0] ==='Login success.'){\r\n  //           Swal.fire('password Changed Successfully.');\r\n  //         }else{\r\n  //           Swal.fire(this.var1[0]);\r\n  //         }\r\n\r\n  //         // this.router.navigate(['/dashboard']);\r\n  //       } else {\r\n  //         this.spinnerbutton = false;\r\n  //         // this.snack.open('Choose Other Password Unable to Reset!', 'OK', { duration: 4000 });\r\n  //         Swal.fire('Choose Other Password !','or otp is invalid.');\r\n  //       }\r\n  //     });\r\n\r\n  //   }\r\n  getOtp(userId) {\r\n    console.log(userId);\r\n    this.editable = true;\r\n    if (!userId) {\r\n      Swal.fire('Enter User Id.');\r\n      return;\r\n    }\r\n    // var encryptedAES = CryptoJS.AES.encrypt(login.password, \"@12#90!^*NPR*g&*()$34#$\");\r\n    const USERNAME = CryptoJS.AES.encrypt(userId, '@12#90!^*NPR*g&*()$34#$');\r\n\r\n    const uname = USERNAME.toString();\r\n\r\n    this.passwordReset1 = uname;\r\n    this.loginservice.getOtpForReset(this.passwordReset1).subscribe(res => {\r\n      this.res = res;\r\n      if (this.res) {\r\n        Swal.fire('Otp Send to user mail id.');\r\n      }\r\n    });\r\n\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\n\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { ChangePasswordComponent } from './change-password.component';\r\nimport { changePasswordRoutes } from './change-password.routing.module';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\nimport { SharedModule } from 'src/app/shared/shared.module';\r\n\r\n\r\n@NgModule({\r\n  declarations: [ChangePasswordComponent],\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    SharedModule,\r\n    FlexLayoutModule,\r\n\r\n    RouterModule.forChild(changePasswordRoutes)\r\n  ]\r\n})\r\nexport class ChangePasswordModule { }\r\n","import { Routes } from '@angular/router';\r\nimport { ChangePasswordComponent } from './change-password.component';\r\n\r\nexport const changePasswordRoutes: Routes = [\r\n  {\r\n      path:'',\r\n      component:ChangePasswordComponent\r\n  }\r\n];\r\n"],"sourceRoot":"webpack:///"}