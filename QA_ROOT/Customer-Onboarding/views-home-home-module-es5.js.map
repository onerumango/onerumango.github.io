{"version":3,"sources":["webpack:///src/app/views/home/intrest-edit/intrest-edit.component.ts","webpack:///src/app/views/home/intrest-edit/intrest-edit.component.html","webpack:///src/app/views/home/application-enrichment/charges/charges.component.ts","webpack:///src/app/views/home/application-enrichment/charges/charges.component.html","webpack:///src/app/views/home/application-enrichment/interest/interest.component.ts","webpack:///src/app/views/home/application-enrichment/interest/interest.component.html","webpack:///src/app/views/home/limit-entry-stage/financial-details-summary/financial-details-summary.component.ts","webpack:///src/app/views/home/limit-entry-stage/financial-details-summary/financial-details-summary.component.html","webpack:///src/app/views/home/funding-stage/intial-funding-dialog/intial-funding-dialog.component.ts","webpack:///src/app/views/home/funding-stage/intial-funding-dialog/intial-funding-dialog.component.html","webpack:///src/app/views/home/application-entry-stage/account/account.component.ts","webpack:///src/app/views/home/application-entry-stage/account/account.component.html","webpack:///src/app/views/home/application-entry-stage/application-entry-stage.component.ts","webpack:///src/app/views/home/application-entry-stage/application-entry-stage.component.html","webpack:///src/app/views/home/application-assessment/report/report.component.ts","webpack:///src/app/views/home/application-assessment/report/report.component.html","webpack:///src/app/views/home/approval-stage/approval-stage.component.ts","webpack:///src/app/views/home/approval-stage/approval-stage.component.html","webpack:///src/app/views/home/application-entry-stage/account-service/account-service.component.ts","webpack:///src/app/views/home/application-entry-stage/account-service/account-service.component.html","webpack:///node_modules/rxjs-compat/operator/filter.js","webpack:///src/app/views/home/application-entry-stage/account-open/account-open.component.ts","webpack:///src/app/views/home/application-entry-stage/account-open/account-open.component.html","webpack:///src/app/views/home/digital-signing/digitalsign-summary/digitalsign-summary.component.ts","webpack:///src/app/views/home/digital-signing/digitalsign-summary/digitalsign-summary.component.html","webpack:///src/app/views/home/limit-entry-stage/view-summary/view-summary.component.ts","webpack:///src/app/views/home/limit-entry-stage/view-summary/view-summary.component.html","webpack:///src/app/views/home/approval-stage/approval-details/approval-details.component.ts","webpack:///src/app/views/home/approval-stage/approval-details/approval-details.component.html","webpack:///src/app/views/home/limit-entry-stage/financial-details/financial-details.component.ts","webpack:///src/app/views/home/limit-entry-stage/financial-details/financial-details.component.html","webpack:///src/app/views/home/application-assessment/application-assessment-summary/application-assessment-summary.component.ts","webpack:///src/app/views/home/application-assessment/application-assessment-summary/application-assessment-summary.component.html","webpack:///src/app/views/home/funding-stage/initial-fund/initial-fund.component.ts","webpack:///src/app/views/home/funding-stage/initial-fund/initial-fund.component.html","webpack:///src/app/views/home/application-entry-stage/account-open/account-open-popup/account-open-popup.component.ts","webpack:///src/app/views/home/application-entry-stage/account-open/account-open-popup/account-open-popup.component.html","webpack:///src/app/views/home/limit-entry-stage/unsecured-draft-summary/unsecured-draft-summary.component.ts","webpack:///src/app/views/home/limit-entry-stage/unsecured-draft-summary/unsecured-draft-summary.component.html","webpack:///src/app/views/home/limit-entry-stage/edit-financial-details/edit-financial-details.component.ts","webpack:///src/app/views/home/limit-entry-stage/edit-financial-details/edit-financial-details.component.html","webpack:///src/app/views/home/home.component.ts","webpack:///src/app/views/home/home.component.html","webpack:///src/app/views/home/funding-stage/funding-stage-summary/funding-stage-summary.component.ts","webpack:///src/app/views/home/funding-stage/funding-stage-summary/funding-stage-summary.component.html","webpack:///src/app/views/home/application-enrichment/application-enrichment.component.ts","webpack:///src/app/views/home/application-enrichment/application-enrichment.component.html","webpack:///src/app/views/home/approval-stage/summary-approval/summary-approval.component.ts","webpack:///src/app/views/home/approval-stage/summary-approval/summary-approval.component.html","webpack:///src/app/views/home/home.module.ts","webpack:///src/app/views/home/application-assessment/application-assessment.component.ts","webpack:///src/app/views/home/application-assessment/application-assessment.component.html","webpack:///src/app/views/home/application-assessment/qualitative/qualitative.component.ts","webpack:///src/app/views/home/application-assessment/qualitative/qualitative.component.html","webpack:///src/app/views/home/limit-entry-stage/limit-entry-stage.component.ts","webpack:///src/app/views/home/limit-entry-stage/limit-entry-stage.component.html","webpack:///src/app/views/home/home.routing.ts","webpack:///src/app/views/home/application-entry-stage/mandate/mandate.component.ts","webpack:///src/app/views/home/application-entry-stage/mandate/mandate.component.html","webpack:///src/app/views/home/funding-stage/funding-stage.component.ts","webpack:///src/app/views/home/funding-stage/funding-stage.component.html","webpack:///node_modules/rxjs/add/operator/filter.js","webpack:///src/app/views/home/limit-entry-stage/secured-draft-summary/secured-draft-summary.component.ts","webpack:///src/app/views/home/limit-entry-stage/secured-draft-summary/secured-draft-summary.component.html","webpack:///src/app/views/home/intrest-details-summary/intrest-details-summary.component.ts","webpack:///src/app/views/home/intrest-details-summary/intrest-details-summary.component.html","webpack:///node_modules/rxjs-compat/add/operator/filter.js","webpack:///src/app/views/home/approval-stage/view-approval-deatils/view-approval-deatils.component.ts","webpack:///src/app/views/home/approval-stage/view-approval-deatils/view-approval-deatils.component.html","webpack:///src/app/views/home/limit-entry-stage/secured-draft/secured-draft.component.ts","webpack:///src/app/views/home/limit-entry-stage/secured-draft/secured-draft.component.html","webpack:///src/app/views/home/digital-signing/digital-signing.component.ts","webpack:///src/app/views/home/digital-signing/digital-signing.component.html","webpack:///src/app/views/home/application-entry-stage/nominees/nominee-details/nominee-details.component.ts","webpack:///src/app/views/home/application-entry-stage/nominees/nominee-details/nominee-details.component.html","webpack:///src/app/views/home/application-entry-stage/application-entry-summary/application-entry-summary.component.ts","webpack:///src/app/views/home/application-entry-stage/application-entry-summary/application-entry-summary.component.html","webpack:///src/app/views/home/charge-details-summary/charge-details-summary.component.ts","webpack:///src/app/views/home/charge-details-summary/charge-details-summary.component.html","webpack:///src/app/views/home/application-entry-stage/nominees/add-nominee-dialog/add-nominee-dialog.component.ts","webpack:///src/app/views/home/application-entry-stage/nominees/add-nominee-dialog/add-nominee-dialog.component.html","webpack:///src/app/views/home/interest-charge-summary/interest-charge-summary.component.ts","webpack:///src/app/views/home/interest-charge-summary/interest-charge-summary.component.html","webpack:///src/app/views/home/charge-edit/charge-edit.component.ts","webpack:///src/app/views/home/charge-edit/charge-edit.component.html","webpack:///src/app/views/home/digital-signing/list/list.component.ts","webpack:///src/app/views/home/digital-signing/list/list.component.html","webpack:///src/app/views/home/limit-entry-stage/unsecured-draft/unsecured-draft.component.ts","webpack:///src/app/views/home/limit-entry-stage/unsecured-draft/unsecured-draft.component.html"],"names":["IntrestEditComponent","accountService","snack","ls","api","router","formBuilder","accountId","getItem","accountInfo","businessProductAccount","getIntrestValues","subscribe","resp","console","log","interestResp","check","length","onChangeInterest","patchValue","interestForm","group","interest","e","numberOfItems","i","push","intrestType","intrestRateApplicable","marginIn","required","max","min","effectiveRate","createdDate","createdBy","lastModifiedDate","lastModifiedBy","id","removeAt","controls","f","navigate","event","target","value","slice","form","map","intrestDetailsSave","open","duration","verticalPosition","horizontalPosition","setItem","refresh","next","err","accountType","onSubmit","selector","templateUrl","styleUrls","ChargesComponent","urlService","flag","isChargesScreen","isInterestScreen","previousUrl","currencytype","localStorage","currencySymbol","getFlexcubeDetails","response","c","getChargeValues","chargeForm","charges","previousUrl$","amount","waiver","craetedBy","chargeDetailsSave","checked","pattern","inputChar","String","fromCharCode","charCode","test","preventDefault","number","inputCharacter","keyCode","goBack","animations","InterestComponent","FinancialDetailsSummaryComponent","dataService","dialogRef","years","selectedYear","Date","getFullYear","curdate","getDay","getMonth","toString","setTimeout","getFinancialDetailsSummary","sendNavParam","financialdata","close","navigateByUrl","getFinancialDetails","result","income","applicantTotalIncome","exepse","applicantTotalExpense","chartOptions","series","chart","height","type","plotOptions","radialBar","hollow","size","labels","chartOptions1","series1","name","data","chart1","stroke1","curve","fill1","opacity","labels1","yaxis1","title","text","xaxis1","trim","edit","IntialFundingDialogComponent","cdr","loader","fundingStageService","fundStageFormGroup","viewFundsbyAccountId","item","addEditOrViewsummaryData","fundsEditResp","getFundByAccountId","fundResp","markForCheck","goToClose","goToDetail","accountForm","AccountComponent","apiService","appApiService","cifNumberForm","listOfCustByCif","formData","isAccountActive","showEditOption","customerDetails","minDate","isCifValid","onbackSpace","disableFundTheAccount","maxDate","nextbtn","setDate","getDate","userName","productaccountID","isAccountScreen","JSON","parse","getAccountType","validPattern","cifNumberPrimary","getAccountDetails","buildAccountForm","getAccountBranchDetails","get","setValue","branchName","onChanges","fetchByCif","customerId","clearTimeout","timer","res","customerInfoList","valueChanges","val","getAccountDetailsById","accountDetails","applicationDate","format","swiftCodeEnable","fundTheAccount","cifNumber","minLength","customerName","businessProductName","productImage","productDescription","accountBranch","accountCurrency","fundBy","overDraftRequested","status","swiftCode","reset","detectChanges","valid","invalid","key","getDropDownValues","arrayAccountType","getAccountBranch","arrayAccountBranch","currencyData","find","x","undefined","branchCcy","date","payload","convertDate","saveProductAccountInfo","assign","sessionStorage","fundStatus","isActive","overDraftStatus","cifnu","valueForaccId","setAccountId","setAccountType","showSpinn","custStatus","address","userAddress","addressType","queryParams","prefix","firstName","middleName","lastName","gender","dateOfBirth","placeOfBirth","residenceStatus","nationality","countryOfResidence","occupationType","custIdProofs","idType","idNumber","expiryDate","address1","address2","city","country","state","zipCode","phoneNumber","landlineNumber","primaryEmailAdress","assignCustomerName","sendCIF","ApplicationEntryStageComponent","dialogService","route","isAppEntryStageDone","isAccountDetailsScreen","isAccountOpenScreen","isAccountServiceScreen","isAccountMandateScreen","isAccountNomineesScreen","filter","params","account","accountDetailsSummaryDialog","customerInformationDetailsSummaryDialog","accountserviceDialog","mandateDialog","nomineeDialog","ReportComponent","fb","routeparams","isReportScreen","getAllData","buildReportForm","reportForm","limitId","overdraftLimitAmount","recommendedOverdraftLimit","limitStartDate","limitEndDate","getAssessmentReportDetails","saveAssessmentReports","which","saveReports","ApprovalStageComponent","dialog","informations","isApprovalStageDone","isApprovalDetailsScreen","isInitialFundScreen","width","afterClosed","AccountServiceComponent","show","selectedRow","statementList","bankList","communicationList","bankChannelPreferencesArray","arrayCardType","arrayModeOfOperation","commChannelPreferencesArray","AccStatementPreferenceArray","dailyLimit","domesticLimit","enableFinish","isDebitLimit","cardInfo","isAccountServiceDone","gettingAccountService","buildServiceForm","accountServiceForm","gettingAccountServiceDetails","statementPref","commChannelPref","bankChannelPref","debitCardRequired","statementFrequency","statementFrncy","bankChanlPref","accServiceId","productAccountId","flattenValues","chequebookNeeded","debitcardNeeded","passbookNeeded","cardType","modeOfOperation","debitCardLimit","debitCardType","getCardType","stringify","error","checkbox","checklist","forEach","index","splice","checkboxes","flattenedValues","join","Object","prototype","call","accountPayload","updateAccountService","createAccountService","defineProperty","exports","operators_1","predicate","thisArg","applicant","AccountOpenComponent","elRef","renderer","confirmService","submitted","customerIdProofs","arrayPrefix","arrayGender","arrayCountry","arrayState","arrayCity","arrayResidence","arrayDocumentType","arrayAddressType","applicantDetailsArray","toggle","applicantDetails","tomorrow","validDate","showNewForm","toggleClick","addFunc","removedButton","selectedApplicant","listOfAccounts","isAllSameDigitVal","pinCodeErr","applicantId","snapshot","getCustomerInformationDetails","buildCustomerForm","getListOfAccounts","getOwnershipValue","getPrefixValue","getGenderValue","getResidenceDetails","getCountryName","getAdressType","getAllAuthCities","getDocumentType","applicantForms","subscription","getaccParam","dispResponse","populatePrimaryApplicant","onlySelf","emitEvent","pipe","prev","doc","idProofs","getStateName","applicantData","existingCustomer","primaryCustomer","disable","payLoadModel","dependentId","closeDetails","enable","fetchAccountDependentInfo","_id","Math","round","random","element","numOfApplicants","toggleChanges","confirm","message","ok","cancel","deleteApplicant","isExistingCustomer","getCustomerInformationDetailsById","ownership","addCustFormGroup","setValidators","updateValueAndValidity","clearValidators","maxLength","email","inp","excludedKeys","includes","arrayOwnership","getAllCountries","authStatus","countryName","isAdd","getStateByCountryId","getAuthorizedCityInfo","r","cityName","payloadObj","control","addressObj","custIdProofsArray","addressObjArray","createAndUpdateAccountants","custDependentModel","goToNext","count","unsubscribe","zipcode","fetchStateCityByZipcode","stateName","progressBar","DigitalsignSummaryComponent","getDigitalsignById","fileUrl","imageUrl","ViewSummaryComponent","getViewSummary","getLimitEntrySummary","securedOverdraftList","secureOverdraft","financialDetails","secured","unsecureoverdraftdata","unsecuredOverdraft","limitEntryStageSummary","ApprovalDetailsComponent","isEdit","getAccountDetailsInfo","getAccountCurrency","getUserRecomendation","approvalForm","productCode","description","userRecommendation","approvalAccountFetch","app","arrayAccountCurrency","arrayUserRecomendation","approvalUpdate","removeItem","FinancialDetailsComponent","disableNext","loggedInUser","applicantName","isFinancialScreen","getEmploymentType","getEmploymentCategory","buildFinacialFormGroup","fincancialDetails","lastUpdatedon","limit_end_date","employmentType","employmentCategory","employeeNumber","officeName","designation","employmentStartDate","employmentEndDate","salary","interestIncome","bonus","cashGifts","business","pension","monthlyIncomeRentals","monthlyIncomeOthers","monthlyIncomeTotal","household","education","vehicleMaintenance","monthlyExpenseRentals","monthlyExpenseOthers","medical","travel","monthlyExpenseTotal","propertyLoan","vehicleLoan","personalLoans","overdraft","cardOutstandings","liabilityOthers","liabilityTotal","savingDeposits","properties","automobiles","fixedDeposits","lands","assetOthers","stocks","assetTotal","validator","formGroup","validateInputGroups","formgroup","incomeErrMsg","ExpensesErrMsg","LiabilitiesErrMsg","assetErrMsg","startDate","converDate","endDate","fire","upsertfinancialDetails","fincialResp","arrayEmploymentType","arrayEmploymentCategory","Number","calculateTotalIncomeAndExpense","expense","liability","asset","totalIncome","totalExpense","ApplicationAssessmentSummaryComponent","imagePath","overdraftStatus","overDraftByStatus","getQualitativeScorecardDetails","qualitativeScoreboardSummary","m","scoreCardMapping","scoreCardDetails","assessmentReportSummary","done","InitialFundComponent","addOrviewdetails","actionAddOrEdit","actionView","disabletellerTrxnRefNo","disableFundByAccount","disabletellerTrxnStatus","disablechequeNumber","chequeNoLenCheck","getFundsByAccountId","buildFundFormGroup","chno","chequeNumber","fundId","tellerTrxnRefNo","fundByAccount","branchCode","tellerTrxnStatus","createdTime","modifiedBy","modifiedTime","fetchAccountBalance","saveOrUpdateFundStageDetails","isSubmittedResp","enteredAmount","parseFloat","accBalance","isForce","fetchAccountBalanceByAccountId","submitButton","AccountOpenPopupComponent","addNew","isProductCustomerIdExist","productCustomerId","building","street","locality","entityName","getDropDownValues1","customerInfo","custAccount","saveCustomerDetails2","UnsecuredDraftSummaryComponent","getUnsecuredOverdraftSummary","UnsecuredOverdraftSummary","EditFinancialDetailsComponent","getFinacialDeatils","editResp","HomeComponent","mediaObserver","viewMode","isSidenavOpen","categories","isLimitEntryStageDone","isSecuredScreen","isUnSecuredScreen","isEnrichmentStageDone","isAssessmentStageDone","isQualitativeScreen","isfundingStage","isEsignScreen","currentUrl","enableApprovalStage","accountItemsSub","accountItems$","menuItem","accountItems","fundByStatus","self","isMobile","sideNav","mode","updateSidenav","screenSizeWatcher","media$","change","mqAlias","opened","stage","icon","tooltip","isOpen","submenu","FundingStageSummaryComponent","ApplicationEnrichmentComponent","isChargeStageDone","intrestFlag","disableClose","submit","SummaryApprovalComponent","appArr","getData","HomeModule","forChild","declarations","entryComponents","imports","ApplicationAssessmentComponent","getApplnAssessmentDetails","qualitativeSummaryDialog","assessmentSummaryDialog","QualitativeComponent","sbMultiSelectAnswer","scoreboardQuestionsArray","scoreCardMappingArray","numberOfApplicant","scoreCardId","isDataSaved","disableDoneBtn","anyErrorExist","sbSelectAnswer","isScoreCardScreen","isQualitative","no_of_applicants","getAllQualitative","loadData","Array","getScorecardQuestions","n","scorecardQuestion","mapDataAns","p","scoreCardQuestionId","scorecardAnswer","scoreCardMappingId","j","scAns","k","sbSwlwctAnswer","sbSelectAnswer1","answer","qtype","mapId","applcantId","dataUpdated","aplcntExists","dataOject","idx","answerIs","inputValue","validationName","eleid","setStyle","nativeElement","querySelector","isNaN","selectValue","submitData","saveQualitativeScorecard","LimitEntryStageComponent","HomeRoutes","path","component","children","redirectTo","pathMatch","breadcrumb","MandateComponent","panelOpenState","NoOfSignatories","isMandateScreen","getModeOfOperation","gettingMandateDetail","buildMandateForm","gettingMandateDetails","mandateOnLoad","isResponse","mandatesForms","mandates","array","addMFormGroup","addMandateToFormGroup","no_of_sig","flag1","numberOfMandates","mandateId","amountFrom","amountTo","totalSignaturesRequired","remarks","saveMandateDetails","clear","at","deleteMandateById","FundingStageComponent","detailsShowOrViewRef","processCompleted","isFundingStageDone","SecuredDraftSummaryComponent","getSecuredoverdraft","securedOverDrafts","securedOverdraftSummary","secureoverDraftDetails","IntrestDetailsSummaryComponent","savingForm","saving","loanForm","loan","is","iloan","fs","floan","setFlag","rxjs_1","filter_1","Observable","ViewApprovalDeatilsComponent","disableField","getApprovalDetails","toLowerCase","sendApprovalStgingData","onEditOfApprovalStging","SecuredDraftComponent","showDelete","issecurityValid","fileName","selectedOptions","branchArr","isSecureDraftScreen","getAllBranch","getCollateralType","getCurrencyDetails","getSecuredOverDraft","buildCollateralForm","otherDocForm","otherDoc_array","secureOverdraftData","docUrl","documentUrl","fileNam","collateralForms","collaterals","addCollateralFormGroup","addFormGroup","collateralType","collateralCurrency","collateralValue","attributes","dimensions","securityReferenceNumber","availableLinkageAccount","linkagePercentage","rateValue","rate","spread","finalAmount","numberOfCollaterals","percent","arrayCollateralType","fetchCurrencyMaintAuthRecs","currency","linkangePercent","toFixed","finalRatevalue","overDRaftValue","securityReferenceNum","showSpinner","fetchBySecurityNumber","branchData","branch","file","files","documentName","uploadData","FormData","append","uploadcollateralDoc","url","touched","_d","securedDraft","collateral","collateralID","deleteCollateral","onReset","getAuthorizedBranchInfo","DigitalSigningComponent","NomineeDetailsComponent","ageLimit","arrayRelationshipType","isSameAddress","expandAddress","prefixFlag","prefixFlag1","isNomineeScreen","getRelationShipType","gettingNomineeDetail","buildNomineeForm","nomineeForms","nominees","gettingNomineeDetails","data1","nominee","isAddrSameAsApplicant","isNomineeMinor","guardianDetails","addGroup","nomineeAddress","nomineeAddress1","relationshipType","getApplicantAddress","addGuardian","nomineeId","mobileNumber","guardianId","now","birthDate","underAgeValidate","birthday","diff","getTime","ageDate","age","abs","getUTCFullYear","isadd","updateNominee","createNominee","isActivee","alertDialog","deleteNomineeById","ApplicationEntrySummaryComponent","appEntryService","localstore","titleName","bankPreference","statementPreference","commChannel","swiftEnable","productaccountId","gettingallDetails","applicationEntryResp","allMandate","mandateInfo","allNominee","nomineeInfo","accounttype","businessproductName","accountbranch","accountcurrency","applicationdate","fundTheaccount","fundby","amounT","overdraftrequested","overdraftRequested","accountStatement","accServiceInfo","checkBook","bankChannel","passBook","statementPreferenceFetched","commChannelFetched","Custownership","CustnumOfApplicants","pickOneAddress","Address","allCustomernResp","customerSummary","ChargeDetailsSummaryComponent","chargeFormIT","chargeIT","form2","form1","setchargeFlag","chargeflag","AddNomineeDialogComponent","accountIdArray","getAccountIdByCusId","isNew","addNomineeFormGroup","dob","testUserId","InterestChargeSummaryComponent","onChangeInterestCharge","inCharge","fCharge","ChargeEditComponent","ListComponent","isDone","isSignLater","screen","getByAccountId","accountdetailsForStatusUpdate","updateAccountStatus","accData","updateAccountStatusService","updateResp","esignLink","subject","signInLater","alertForSignLater","alertForFinishButton","selectedFile","documentType","fileType","uploadDocument","op","openPopUp","onDone","UnsecuredDraftComponent","selectedDay","days","year","day","isUnSecureDraftScreen","months","buildUnsecuredForm","renewPeriod","renewalAmount","unsecuredForms","overdraftCurrency","unsecuredLimit","month","overdraftLimitRenewed","substring","selectedMonth","renewData","limitData","overdraftLAData","limitStartDateData","limitEndDateData","renewalAmountData","finalPayload","unsecuredDraft"],"mappings":"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","file":"views-home-home-module-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { AccountService } from '../account.service';\r\n\r\n@Component({\r\n  selector: 'app-intrest-edit',\r\n  templateUrl: './intrest-edit.component.html',\r\n  styleUrls: ['./intrest-edit.component.scss']\r\n})\r\nexport class IntrestEditComponent implements OnInit {\r\n\r\n  interestForm: FormGroup;\r\n  accountId: any;\r\n  intrestFlag: Boolean;\r\n  interestResp: any;\r\n  accountInfo: any;\r\n  constructor(private accountService: AccountService, private snack: MatSnackBar, private ls: LocalStoreService, private api: ApiService, private router: Router, private formBuilder: FormBuilder) { }\r\n\r\n  ngOnInit(): void {\r\n    this.accountId = this.ls.getItem('accountId');\r\n    this.accountInfo = this.ls.getItem('EDIT-CREATEACCCIF');\r\n    if(this.accountInfo){\r\n      this.accountId=this.accountInfo.businessProductAccount.accountId\r\n    }\r\n    this.api.getIntrestValues(this.accountId).subscribe(resp => {\r\n      console.log(\"backend resp\", resp)\r\n      this.interestResp = resp;\r\n      this.check(resp === null)\r\n      if (resp != null) {\r\n        console.log(\"backend resp\", resp.length);\r\n        this.onChangeInterest(resp.length);\r\n        this.in.patchValue(resp);\r\n      }\r\n    })\r\n\r\n\r\n    this.interestForm = this.formBuilder.group({\r\n      interest: new FormArray([]),\r\n    });\r\n    if (this.interestResp != null) {\r\n      this.onChangeInterest(this.interestResp.length);\r\n    }\r\n\r\n  }\r\n  assign(accountId) {\r\n    // this.accountId = accountId;\r\n  }\r\n  onChangeInterest(e) {\r\n\r\n    const numberOfItems = e || 0;\r\n    if (this.in.length < numberOfItems) {\r\n      for (let i = this.in.length; i < numberOfItems; i++) {\r\n        this.in.push(\r\n          this.formBuilder.group({\r\n            intrestType: [\"\"],\r\n            intrestRateApplicable: [\"\"],\r\n            marginIn: [\"\", [Validators.required, Validators.max(100), Validators.min(0)]],\r\n            effectiveRate: [\"\", [Validators.required, Validators.max(100), Validators.min(0)]],\r\n            accountId: [\"\"],\r\n            createdDate: [\"\"],\r\n            createdBy: [\"\"],\r\n            lastModifiedDate: [\"\"],\r\n            lastModifiedBy: [\"\"],\r\n            id: ['']\r\n          })\r\n        );\r\n      }\r\n    } else {\r\n      for (let i = this.in.length; i >= numberOfItems; i--) {\r\n        this.in.removeAt(i);\r\n      }\r\n    }\r\n  }\r\n\r\n  // convenience getters for easy access to form fields\r\n  get f() {\r\n    return this.interestForm.controls;\r\n  }\r\n  get in() {\r\n    return this.f.interest as FormArray;\r\n  }\r\n\r\n  goBack() {\r\n    console.log(this.accountId);\r\n    this.router.navigate([`/home/application/enrichment/list/${this.accountId}`]);\r\n  }\r\n  appendPercentage(event) {\r\n    // console.log(event.key)\r\n    console.log(event.target.value);\r\n\r\n    if (!event.target.value.length) return;\r\n\r\n    if (event.target.value.length === 1) {\r\n      event.target.value = `${event.target.value}%`\r\n\r\n    }\r\n    if (event.target.value.length > 1) {\r\n      event.target.value = `${event.target.value.slice(0, -1)}%`\r\n    }\r\n  }\r\n\r\n  onSubmit(form) {\r\n    console.log(\"form\", form.interest);\r\n    form.interest = form.interest.map(interest => ({\r\n      ...interest,\r\n      accountId: this.accountId,\r\n    }))\r\n    console.log(\"form value\", form);\r\n    console.log(\"form value\", this.interestForm.value);\r\n\r\n    this.api.intrestDetailsSave(form.interest).subscribe(resp => {\r\n      this.snack.open('Interest Details Saved!', 'OK', {\r\n        duration: 4000,\r\n        verticalPosition: 'top',\r\n        horizontalPosition: 'right'\r\n      });\r\n      console.log(\"backend response from intrest saving\", resp)\r\n      this.ls.setItem('ENRICHMENT_INTEREST_DONE', true);\r\n      this.accountService.refresh.next();\r\n      this.router.navigate([`/home/application/enrichment/chargeEdit/${this.accountId}`]);\r\n    }, err => {\r\n      this.snack.open('Not able to connect to server!', 'INTERNAL SERVER ERROR', {\r\n        duration: 4000,\r\n        verticalPosition: 'top',\r\n        horizontalPosition: 'right'\r\n      });\r\n    })\r\n  }\r\n  check(accountType) {\r\n\r\n    if (accountType) {\r\n\r\n      console.log(this.snack.open)\r\n      this.snack.open('Interest detail is empty', 'Error', {\r\n        duration: 4000,\r\n        verticalPosition: 'top',\r\n        horizontalPosition: 'right'\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\n\r\n","<div fxLayout=\"row wrap\">\r\n    <div fxFlex=\"100\">\r\n      <div class=\"propic text-center\">\r\n              <img src=\"assets/images/svg/undraw_statistic_chart_38b6.svg\" alt=\"\" class=\"w-80\" />\r\n            </div>\r\n   \r\n      <div class=\"profile-title text-center mt-8\">\r\n        <div class=\"main-title\"><b>Interest Details</b></div>\r\n      </div>\r\n    </div>\r\n    <div fxFlex=\"100\" class=\"m-333\">\r\n      <h5>Interest Details</h5>\r\n      <div class=\"mt-24\"></div>\r\n      <form *ngIf=\"interestForm\" [formGroup]=\"interestForm\">\r\n        <table\r\n          class=\"cart-table default-bg mat-elevation-z0\"\r\n        >\r\n          <thead>\r\n            <tr>\r\n              <th class=\"text-muted\">Interest Type</th>\r\n              <th class=\"text-muted\">Interest Rate Applicable</th>\r\n              <th class=\"text-muted\">Margin in %</th>\r\n              <th class=\"text-muted\">Effective Rate %</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr class=\"mt-4\" *ngFor=\"let interest of in.controls; let i = index\">\r\n              <ng-container [formGroup]=\"interest\">\r\n                <td>\r\n                  <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                    <mat-label>Interest Type</mat-label>\r\n                    <input\r\n                      matInput\r\n                      formControlName=\"intrestType\"\r\n                      name=\"account_branch\"\r\n                      placeholder=\"Interest Type\"\r\n                    />\r\n                    <mat-icon matSuffix>credit_card</mat-icon>\r\n                  </mat-form-field>\r\n                </td>\r\n                <td>\r\n                  <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                    <mat-label>Interest Rate Applicable</mat-label>\r\n                    <input\r\n                      matInput\r\n                      formControlName=\"intrestRateApplicable\"\r\n                      name=\"account_branch\"\r\n                      placeholder=\"Interest Rate Applicable\"\r\n                    />\r\n                    <!-- <mat-icon matSuffix>class</mat-icon> -->\r\n                  </mat-form-field>\r\n                </td>\r\n                <td>\r\n                  <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                    <mat-label>Margin in %</mat-label>\r\n                    <input\r\n                      matInput\r\n                      formControlName=\"marginIn\"\r\n                      name=\"account_branch\" type=\"number\"\r\n                      placeholder=\"Margin\"\r\n                    />\r\n                    <mat-error *ngIf=\"interest.controls['marginIn'].errors?.required\">\r\n                      Margin is <strong>required</strong>\r\n                      </mat-error>\r\n                      <mat-error *ngIf=\"interest.controls['marginIn'].errors?.max\">\r\n                        Max value allowed is 100\r\n                        </mat-error>\r\n                    <!-- <mat-icon matSuffix>class</mat-icon> -->\r\n                  </mat-form-field>\r\n                </td>\r\n                <td>\r\n                  <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                    <mat-label>Effective Rate %</mat-label>\r\n                    <input\r\n                      matInput\r\n                      formControlName=\"effectiveRate\"\r\n                      name=\"account_branch\"\r\n                      placeholder=\"Effective Rate\"\r\n                      value=\"\" \r\n                    />\r\n                    <!-- <mat-icon matSuffix>class</mat-icon> -->\r\n                    <mat-error *ngIf=\"interest.controls['effectiveRate'].errors?.required\">\r\n                      Effective Rate <strong>required</strong>\r\n                      </mat-error>\r\n                       \r\n                   <mat-error *ngIf=\"interest.controls['effectiveRate'].errors?.max\">\r\n                    Max value allowed is 100\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </td>\r\n              </ng-container>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </form>\r\n    </div>\r\n  \r\n    <div fxFlex=\"100\" class=\"mt-16\">\r\n      <a mat-button rounded [routerLink]=\"['/home/application/enrichment/list/', accountId ]\">BACK</a>\r\n      <span fxFlex></span>\r\n      <button mat-raised-button color=\"primary\" class=\"Nextbtn\" type=\"button\" [disabled]=\"interestForm.invalid\" (click)=\"onSubmit(interestForm.value)\">Next</button>\r\n    </div>\r\n  \r\n  </div>\r\n  ","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, FormArray, Validators } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { rumangoAnimations } from 'app/shared/animations/rumango-animations';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { AccountService } from '../../account.service';\r\nimport { UrlService } from '../../url.service';\r\n\r\n@Component({\r\n  selector: 'app-charges',\r\n  templateUrl: './charges.component.html',\r\n  styleUrls: ['./charges.component.scss'],\r\n  animations: rumangoAnimations\r\n})\r\nexport class ChargesComponent implements OnInit {\r\n\r\n  chargeForm: FormGroup;\r\n  charge: any;\r\n  flag: boolean = false;\r\n  accountType: any;\r\n  isChargesScreen: boolean = false;\r\n  isInterestScreen: boolean = false;\r\n  previousUrl: string = '';\r\n  // numberPattern: \"/^\\-?\\d+$/\";\r\n  constructor(private api: ApiService, private urlService:UrlService, private snack: MatSnackBar, private accountService: AccountService, private router: Router, private formBuilder: FormBuilder, private ls: LocalStoreService) { }\r\n  accountId: any;\r\n  currencytype:any;\r\n  currencySymbol: string;\r\n  ngOnInit(): void {\r\n\r\n    this.accountId = this.ls.getItem('accountId');\r\n    this.currencytype=localStorage.getItem('CurrencyType');\r\n    console.log(this.currencytype)\r\n    if(this.currencytype===\"INR\" || this.currencytype===\"inr\"){\r\n      this.currencySymbol=\"₹\"\r\n    }else if(this.currencytype===\"USD\" || this.currencytype===\"usd\" ){\r\n      this.currencySymbol=\"$\"\r\n    }else if(this.currencytype===\"CNY\" || this.currencytype===\"cny\"){\r\n      this.currencySymbol=\"¥\"\r\n    }else if(this.currencytype===\"GBP\" || this.currencytype===\"gbp\"){\r\n      this.currencySymbol=\"£\"\r\n    }else if(this.currencytype===\"ZAR\" || this.currencytype===\"zar\"){\r\n      this.currencySymbol=\"R\"\r\n    }\r\n\r\n    this.isChargesScreen = this.ls.getItem('ENRICHMENT_CHARGES_DONE');\r\n    console.log(\" this.isChargesScreen\", this.isChargesScreen)\r\n\r\n    this.accountType = this.ls.getItem('accountType');\r\n    console.log(this.accountType)\r\n    this.api.getFlexcubeDetails(\"chargeDetails\", this.accountType).subscribe(response => {\r\n      this.onChangeInterest(response.length);\r\n      console.log(response);\r\n      this.check(response=== null)\r\n      this.c.patchValue(response)\r\n    })\r\n\r\n    this.api.getChargeValues(this.accountId).subscribe(resp=>{\r\n      console.log(\"backend resp\",resp)\r\n      console.log(\"backend resp\",resp?.length);\r\n      this.onChangeInterest(resp.length);\r\n      this.c.patchValue(resp);\r\n    })\r\n\r\n    this.chargeForm = this.formBuilder.group({\r\n      charges: new FormArray([])\r\n    });\r\n    this.onChangeInterest(1);\r\n    // this.onChangeInterest(2);\r\n    this.urlService.previousUrl$\r\n    .subscribe((previousUrl: string) => {\r\n        this.previousUrl = previousUrl\r\n    });\r\n  }\r\n  assign(accountId: any) {\r\n    // this.accountId = accountId;\r\n  }\r\n\r\n  onChangeInterest(e) {\r\n    const numberOfItems = e || 0;\r\n    if (this.c.length < numberOfItems) {\r\n      for (let i = this.c.length; i < numberOfItems; i++) {\r\n        this.c.push(this.formBuilder.group({\r\n          //         private Long id;\r\n          // private String intrestType;\r\n          // private Double amount;\r\n          // private Boolean waiver;\r\n          // private String accountId;\r\n          // @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = \"yyyy-MMM-dd HH:mm:ss\")\r\n          // private Timestamp createdDate;\r\n          // private Long createdBy;\r\n          // @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = \"yyyy-MMM-dd HH:mm:ss\")\r\n          // private Timestamp lastModifiedDate;\r\n          // private Long lastModifiedBy;\r\n          intrestType: [''],\r\n          amount: ['', Validators.required],\r\n          waiver: [false],\r\n          accountId: [this.accountId],\r\n          createdDate: [''],\r\n          craetedBy: [''],\r\n          lastModifiedDate: [''],\r\n          lastModifiedBy: [''],\r\n          id: ['']\r\n\r\n        }));\r\n      }\r\n    } else {\r\n      for (let i = this.c.length; i >= numberOfItems; i--) {\r\n        this.c.removeAt(i);\r\n      }\r\n    }\r\n  }\r\n\r\n  // convenience getters for easy access to form fields\r\n  get f() { return this.chargeForm.controls; }\r\n  get c() { return this.f.charges as FormArray; }\r\n\r\n\r\n  goBack() {\r\n    this.router.navigate([`home/application/enrichment/interest/${this.accountId}`]);\r\n  }\r\n\r\n  onSubmit(form) {\r\n    form.charges = form.charges.map(charges => ({\r\n      ...charges,\r\n      accountId: this.accountId,\r\n    }))\r\n    form.waiver = this.flag\r\n    form.accountId = this.accountId\r\n    console.log(\"form value\", form.charges);\r\n    \r\n    this.api.chargeDetailsSave(form.charges).subscribe(resp => {\r\n      this.snack.open('Charge Details Saved!', 'OK', {\r\n        duration: 4000,\r\n        verticalPosition: 'top',\r\n        horizontalPosition: 'right'\r\n      });\r\n      console.log(\"resp from backend\", resp)\r\n      this.ls.setItem('enrichmentStage', true);\r\n      this.ls.setItem('ENRICHMENT_CHARGES_DONE', true);\r\n      this.accountService.refresh.next();\r\n      this.router.navigate([`/home/application/assessment/list/${this.accountId}`]);\r\n    }, err => {\r\n      this.snack.open('Server Error!', 'OK', {\r\n        duration: 4000,\r\n        verticalPosition: 'top',\r\n        horizontalPosition: 'right'\r\n      });\r\n    })\r\n\r\n  }\r\n  checkboxChanged(event) {\r\n    console.log(event.checked);\r\n    this.flag = event.checked;\r\n  }\r\n  check(accountType) {\r\n\r\n    if (accountType) {\r\n\r\n      console.log(this.snack.open)\r\n      this.snack.open('Account type is null!', 'Error', {\r\n        duration: 4000,\r\n        verticalPosition: 'top',\r\n        horizontalPosition: 'right'\r\n      });\r\n    }\r\n  }\r\n  _keyPress(event: any) {\r\n    const pattern = /[a-zA-Z]/;\r\n    let inputChar = String.fromCharCode(event.charCode);\r\n    if (!pattern.test(inputChar)) {\r\n      event.preventDefault();\r\n\r\n    }\r\n  }\r\n\r\n  onKeyPress(event: any) {\r\n    const number = /[0-9\\+\\-\\ ]/;\r\n    let inputCharacter = String.fromCharCode(event.charCode);\r\n    if (event.keyCode != 8 && !number.test(inputCharacter)) {\r\n      event.preventDefault();\r\n      console.log(\"event:\", event)\r\n    }\r\n  }\r\n}\r\n","<div fxLayout=\"row wrap\" class=\"matcard-size\">\r\n  <div fxFlex=\"100\">\r\n    <div class=\"propic text-center\">\r\n      <img src=\"assets/images/svg/undraw_Payments_re_77x0.svg\" alt=\"\" class=\"w-90\" />\r\n    </div>\r\n    <div class=\"profile-title text-center mt-8\">\r\n      <div class=\"main-title1\">Charge Details</div>\r\n    </div>\r\n  </div>\r\n\r\n  <div fxFlex=\"100\" class=\"m-333\">\r\n    <mat-card class=\"p-0\">\r\n      <mat-card-title>\r\n        <fieldset class=\"fieldset1\">\r\n          <legend visible=\"true\">Charge Details</legend>\r\n        </fieldset>\r\n      </mat-card-title>\r\n      <div class=\"mt-24\"></div>\r\n      <form *ngIf=\"chargeForm\" [formGroup]=\"chargeForm\">\r\n        <table class=\"cart-table default-bg mat-elevation-z0\">\r\n          <thead class=\"tr\">\r\n            <tr class=\"theadClass\">\r\n              <th>Interest Type</th>\r\n              <th>Amount</th>\r\n              <th class=\"waiever\">waiever</th>\r\n\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr *ngFor=\"let charge of c.controls; let i = index\" class=\"tableRow\">\r\n              <ng-container [formGroup]=\"charge\">\r\n                <td>\r\n                  <mat-form-field class=\"matCardBox-form\">\r\n                    <input class=\"input\" matInput formControlName=\"intrestType\" name=\"account_branch\" readonly />\r\n                  </mat-form-field>\r\n                </td>\r\n                <td>\r\n                  <mat-form-field class=\"matCardBox-form\">\r\n                    <span matPrefix>{{currencySymbol}}&nbsp;</span>\r\n                    <input class=\"input\" maxlength=\"10\" formControlName=\"amount\" (keypress)=\"onKeyPress($event)\"\r\n                      oninput=\"this.value = !!this.value && Math.abs(this.value) >= 0 ? Math.abs(this.value) : null\"\r\n                      matInput name=\"account_branch\" />\r\n                    <mat-error *ngIf=\"!amount\">\r\n                      Amount is <strong>required</strong>\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </td>\r\n                <td>\r\n                  <div class=\"waiver-pos\">\r\n                    <mat-checkbox formControlName=\"waiver\" (change)='checkbox($event)' color=\"primary\"></mat-checkbox>\r\n                  </div>\r\n                </td>\r\n              </ng-container>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </form>\r\n    </mat-card>  \r\n  </div>\r\n\r\n  <div fxFlex=\"100\" class=\"mt-16\">\r\n    <button mat-button class=\"Backbtn\" (click)=\"goBack()\">Back</button>\r\n    <span fxFlex></span>\r\n    <button mat-raised-button color=\"primary\" class=\"Nextbtn\" (click)=\"onSubmit(chargeForm.value)\"\r\n      [disabled]=\"chargeForm.invalid\">Next</button>\r\n  </div>\r\n\r\n</div>","import { Component, OnInit } from \"@angular/core\";\r\nimport { FormGroup, FormBuilder, FormArray, Validators } from \"@angular/forms\";\r\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\r\nimport { Router } from \"@angular/router\";\r\nimport { forceFillColumnWidths } from \"@swimlane/ngx-datatable\";\r\nimport { rumangoAnimations } from \"app/shared/animations/rumango-animations\";\r\nimport { ApiService } from \"app/shared/services/api.service\";\r\nimport { LocalStoreService } from \"app/shared/services/local-store.service\";\r\nimport { CustomValidators } from \"ngx-custom-validators\";\r\nimport { AccountService } from \"../../account.service\";\r\nimport { UrlService } from \"../../url.service\";\r\n\r\n@Component({\r\n  selector: \"app-interest\",\r\n  templateUrl: \"./interest.component.html\",\r\n  styleUrls: [\"./interest.component.scss\"],\r\n  animations: rumangoAnimations,\r\n})\r\nexport class InterestComponent implements OnInit {\r\n  interestForm: FormGroup;\r\n  accountId: any;\r\n  intrestFlag: Boolean;\r\n  accountType:any;\r\n  previousUrl:string = '';\r\n\r\n \r\n  \r\n  constructor(private accountService: AccountService,private urlService:UrlService,private snack: MatSnackBar, private ls: LocalStoreService, private api: ApiService, private router: Router, private formBuilder: FormBuilder) { }\r\n\r\n  ngOnInit(): void {\r\n    this.accountId = this.ls.getItem('accountId');\r\n    this.accountType=this.ls.getItem('accountType');\r\n    console.log(this.accountType)\r\n    this.api.getFlexcubeDetails(\"intrestDetails\",  this.accountType).subscribe(response => {\r\n    this.onChangeInterest(response.length);\r\n    console.log(response)\r\n    this.in.patchValue(response)\r\n    })\r\n\r\n  \r\n    this.interestForm = this.formBuilder.group({\r\n      interest: new FormArray([]),\r\n    });\r\n    this.onChangeInterest(1);\r\n\r\n    this.urlService.previousUrl$\r\n    .subscribe((previousUrl: string) => {\r\n        this.previousUrl = previousUrl\r\n    });\r\n\r\n  }\r\n  assign(accountId) {\r\n    // this.accountId = accountId;\r\n  }\r\n  onChangeInterest(e) {\r\n\r\n    const numberOfItems = e || 0;\r\n    if (this.in.length < numberOfItems) {\r\n      for (let i = this.in.length; i < numberOfItems; i++) {\r\n        this.in.push(\r\n          this.formBuilder.group({\r\n            intrestType: [\"\"],\r\n            intrestRateApplicable: [\"\"],\r\n            marginIn: [\"\",[Validators.required,Validators.max(100),Validators.min(0)]],\r\n            effectiveRate: [\"\",[Validators.required,Validators.max(100),Validators.min(0)]],\r\n            accountId: [\"\"],\r\n            createdDate: [\"\"],\r\n            createdBy: [\"\"],\r\n            lastModifiedDate: [\"\"],\r\n            lastModifiedBy: [\"\"],\r\n            id: ['']\r\n          })\r\n        );\r\n      }\r\n    } else {\r\n      for (let i = this.in.length; i >= numberOfItems; i--) {\r\n        this.in.removeAt(i);\r\n      }\r\n    }\r\n  }\r\n\r\n  // convenience getters for easy access to form fields\r\n  get f() {\r\n    return this.interestForm.controls;\r\n  }\r\n  get in() {\r\n    return this.f.interest as FormArray;\r\n  }\r\n\r\n  goBack() {\r\n    // this.router.navigate([`${this.previousUrl}`]);\r\n    this.router.navigate([`home/application/enrichment/list/${this.accountId}`]);\r\n  }\r\n\r\n  onSubmit(form) {\r\n    console.log(\"form\", form.interest);\r\n    form.interest = form.interest.map(interest => ({\r\n      ...interest,\r\n      accountId: this.accountId,\r\n    }))\r\n    console.log(\"form value\", form);\r\n    console.log(\"form value\", this.interestForm.value);\r\n\r\n    this.api.intrestDetailsSave(form.interest).subscribe(resp => {\r\n      this.snack.open('Interest Details Saved!', 'OK', {\r\n        duration: 4000,\r\n        verticalPosition: 'top',\r\n        horizontalPosition: 'right'\r\n      });\r\n      console.log(\"backend response from intrest saving\", resp)\r\n      this.ls.setItem('ENRICHMENT_INTEREST_DONE', true);\r\n      this.ls.setItem('intrestFlag', true);\r\n      this.accountService.refresh.next();\r\n      this.router.navigate([`/home/application/enrichment/charge/${this.accountId}`]);\r\n    }, err => {\r\n      this.snack.open('Not able to connect to server!', 'INTERNAL SERVER ERROR', {\r\n        duration: 4000,\r\n        verticalPosition: 'top',\r\n        horizontalPosition: 'right'\r\n      });\r\n    })\r\n  }\r\n\r\n  _keyPress(event: any) {\r\n    const pattern = /[0-9]/;\r\n    let inputChar = String.fromCharCode(event.charCode);\r\n    if (!pattern.test(inputChar)) {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n  \r\n  // check(accountType){\r\n\r\n  //   if(accountType){\r\n\r\n  //     console.log(this.snack.open)\r\n  //     this.snack.open('Account type is null!', 'Error', {\r\n  //       duration: 4000,\r\n  //       verticalPosition: 'top',\r\n  //       horizontalPosition: 'right'\r\n  //     });\r\n  //   }\r\n  // }\r\n}\r\n","<div fxLayout=\"row wrap\" class=\"matcard-size\">\r\n  <div fxFlex=\"100\">\r\n    <div class=\"propic text-center\">\r\n            <img src=\"assets/images/svg/undraw_statistic_chart_38b6.svg\" alt=\"\" class=\"w-90\" />\r\n          </div>\r\n \r\n    <div class=\"profile-title text-center mt-8\">\r\n      <div class=\"main-title1\">Interest Details</div>\r\n    </div>\r\n  </div>\r\n\r\n  <div fxFlex=\"100\" class=\"m-333\">\r\n    <mat-card class=\"p-0\">\r\n    <mat-card-title>\r\n      <fieldset class=\"fieldset1\">\r\n        <legend visible=\"true\">Interest Details</legend>\r\n      </fieldset>\r\n    </mat-card-title>\r\n\r\n    <div class=\"mt-24\"></div>\r\n    <form *ngIf=\"interestForm\" [formGroup]=\"interestForm\">\r\n      <table class=\"cart-table default-bg mat-elevation-z0\">\r\n        <thead class=\"tr\">\r\n          <tr class=\"theadClass\">\r\n            <!-- <th>Rate Code</th> -->\r\n            <th>Interest Type</th>\r\n            <th>Interest Rate Applicable</th>\r\n            <th>Margin in %</th>\r\n            <th>Effective Rate %</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr *ngFor=\"let interestInfo of in.controls; let i = index\" class=\"tableRow\">\r\n\r\n            <ng-container [formGroup]=\"interestInfo\">\r\n              <td>\r\n                <mat-card class=\"matCardBox-form\">\r\n                  <input class=\"input\" matInput formControlName=\"intrestType\" name=\"intrestType\"\r\n                    placeholder=\"Interest Type\" readonly />\r\n                </mat-card>\r\n              </td>\r\n              <td>\r\n                <mat-card class=\"matCardBox-form\" style=\"height: 55px;\">\r\n                  <input class=\"inputPercent\" matInput formControlName=\"intrestRateApplicable\" name=\"intrestRateApplicable\"\r\n                    placeholder=\"Interest Rate Applicable\"readonly />\r\n                    <span matSuffix class=\"percent\">%</span>\r\n                </mat-card>\r\n              </td>\r\n              <td>\r\n                <mat-card class=\"matCardBox-form\">\r\n                  <input class=\"input\" matInput formControlName=\"marginIn\" name=\"margin\" type=\"number\"\r\n                    placeholder=\"Margin\" (keypress)=_keyPress($event) maxlength=\"3\" readonly/>\r\n                </mat-card>\r\n              </td>\r\n              <td>\r\n                <mat-card class=\"matCardBox-form \" style=\"height: 55px;\">\r\n                  <input class=\"inputPercent\" matInput formControlName=\"effectiveRate\" name=\"effectiveRate\"\r\n                    placeholder=\"Effective Rate\" value=\"\" (keypress)=_keyPress($event) maxlength=\"3\" readonly/>\r\n                    <span matSuffix class=\"percent\">%</span>\r\n                </mat-card>\r\n              </td>\r\n            </ng-container>\r\n\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </form>\r\n    </mat-card>\r\n  </div>\r\n\r\n  <div fxFlex=\"100\" class=\"mt-16\">\r\n    <a mat-button class=\"Backbtn\" [routerLink]=\"['/home/application/enrichment/list/', accountId ]\">Back</a>\r\n    <span fxFlex></span>\r\n    <button mat-raised-button color=\"primary\" class=\"Nextbtn\" type=\"button\" [disabled]=\"interestForm.invalid\" (click)=\"onSubmit(interestForm.value)\">Next</button>\r\n  </div>\r\n\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { Router } from '@angular/router';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { DataService } from 'app/shared/services/data.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport {\r\n  ApexNonAxisChartSeries,\r\n  ApexPlotOptions,\r\n  ApexChart,\r\n  ChartComponent,\r\n  ApexAxisChartSeries,\r\n  ApexFill,\r\n  ApexStroke,\r\n  ApexYAxis,\r\n  ApexTooltip,\r\n  ApexMarkers,\r\n  ApexXAxis\r\n\r\n} from \"ng-apexcharts\";\r\nexport type ChartOptions = {\r\n  series: ApexNonAxisChartSeries;\r\n  chart: ApexChart;\r\n  labels: string[];\r\n  plotOptions: ApexPlotOptions;\r\n  series1: ApexAxisChartSeries;\r\n  \r\n  xaxis: ApexXAxis;\r\n  yaxis: ApexYAxis | ApexYAxis[];\r\n\r\n  stroke: ApexStroke;\r\n  markers: ApexMarkers;\r\n  fill: ApexFill;\r\n  tooltip: ApexTooltip;\r\n\r\n};\r\n\r\n\r\nexport type ChartOptions1 = {\r\n  series1: ApexNonAxisChartSeries;\r\n  chart1: ApexChart;\r\n  labels1: string[];\r\n  plotOptions1: ApexPlotOptions;\r\n  \r\n  \r\n  xaxis1: ApexXAxis;\r\n  yaxis1: ApexYAxis | ApexYAxis[];\r\n\r\n  stroke1: ApexStroke;\r\n  markers1: ApexMarkers;\r\n  fill1: ApexFill;\r\n  tooltip1: ApexTooltip;\r\n\r\n};\r\n@Component({\r\n  selector: 'app-financial-details-summary',\r\n  templateUrl: './financial-details-summary.component.html',\r\n  styleUrls: ['./financial-details-summary.component.scss']\r\n})\r\nexport class FinancialDetailsSummaryComponent implements OnInit {\r\n  \r\n  public chartOptions: Partial<ChartOptions> | any;\r\n  public chartOptions1: Partial<ChartOptions1>|any;\r\n  selectedYear: number;\r\nyears: number[] = [];\r\n  curdate: string;\r\n  financialdata: any;\r\n  accountId: any;\r\n  income: any; \r\n  exepse : any;\r\n  accountInfo: any;\r\n  constructor( private router: Router,private api: ApiService, private ls:LocalStoreService, private dataService:DataService,\r\n    public dialogRef: MatDialogRef<FinancialDetailsSummaryComponent>)\r\n     {\r\n    this.selectedYear = new Date().getFullYear();\r\n    this.curdate = new Date().getDay()+'/'+(new Date().getMonth() + 1).toString() + '/' + new Date().getFullYear().toString();\r\n  }\r\n \r\n  \r\n\r\n  ngOnInit(): void {\r\n \r\n    this.accountId = this.ls.getItem('accountId');\r\n    console.log(this.accountId);\r\n    this.accountInfo = this.ls.getItem('EDIT-CREATEACCCIF');\r\n    if(this.accountInfo){\r\n      console.log(this.accountInfo)\r\n      this.accountId=this.accountInfo.businessProductAccount.accountId\r\n    }\r\n    setTimeout(() => {\r\n      this.getFinancialDetailsSummary(); \r\n    }, 1);\r\n   \r\n  }\r\n   \r\n\r\n  edit(){\r\n    this.dataService.sendNavParam(this.financialdata);\r\n    this.dialogRef.close();\r\n    \r\n    this.router.navigate([`/home/application/limit-entry-stage/financial-details/${this.accountId}`]);\r\n  }\r\n  close(){\r\n    this.dialogRef.close();\r\n    this.router.navigateByUrl('/home/application/limit-entry-stage/list/');\r\n  }\r\n  getFinancialDetailsSummary(){\r\n   \r\n    // this.accountId = this.ls.getItem('accountId');\r\n    console.log(\"accountId\",this.accountId)\r\n    this.api.getFinancialDetails(this.accountId).subscribe(result=>\r\n      {\r\n        console.log(result);\r\n        this.financialdata=result;\r\n        this.income = this.financialdata.applicantTotalIncome;\r\n        this.exepse = this.financialdata.applicantTotalExpense;\r\n        console.log(\"income\",this.income);\r\n            this.chartOptions = {\r\n      series: [48],\r\n      \r\n      chart: {\r\n        \r\n        height: 200,\r\n        type: \"radialBar\"\r\n      },\r\n      plotOptions: {\r\n        radialBar: {\r\n          hollow: {\r\n            size: \"70%\"\r\n          }\r\n        }\r\n      },\r\n      labels: ['saved']\r\n    }\r\n    // chart 2\r\n  this.chartOptions1 = {\r\n    series1: [\r\n      {\r\n        name: \"Income :\"+ this.income,\r\n        type: \"line\",\r\n        data: [40,55, 50, 70, 65, 68, 50, 45, 35, 30, 38, 40]\r\n      },\r\n     \r\n      {\r\n        name: \"Expenses :\"+ this.exepse,\r\n        type: \"line\",\r\n        data: [55, 30, 25, 45, 46, 47, 48, 52, 44, 35, 30]\r\n      }\r\n    ],\r\n    chart1: {\r\n      height: 220,\r\n      type: \"line\"\r\n    },\r\n    stroke1: {\r\n      curve: \"smooth\"\r\n    },\r\n    fill1: {\r\n      type: \"solid\",\r\n      opacity: [0.35, 1]\r\n    },\r\n    labels1: [\r\n      \"JAN\",\r\n      \"\",\r\n      \"FEB\",\r\n      \"\",\r\n      \"MAR\",\r\n      \"\",\r\n      \"APR\",\r\n      \"\",\r\n      \"MAY \",\r\n      \"\",\r\n      \"JUN\"\r\n    ],\r\n    // markers1: {\r\n      // size: 0\r\n    // },\r\n    yaxis1: [\r\n      {\r\n        title: {\r\n          text: \"\"\r\n        }\r\n      },\r\n       ],\r\n    xaxis1: {\r\n      labels: {\r\n        trim: false\r\n      }\r\n    },\r\n   \r\n\r\n}\r\n      })\r\n      \r\n  }\r\n}\r\n\r\n\r\n","<!-- <p>financial-details-summary works!</p> -->\r\n<div class=\"full-width\">\r\n    <div fxLayout=\"row\" class=\"contain\">\r\n        <mat-icon class=\"backIcon\" (click)=\"close()\">close</mat-icon>\r\n    </div>\r\n    <div class=\"fullcard\">\r\n        <div fxLayout=\"row\">\r\n            <h4 class=\"paraFont\">Financial Details </h4>\r\n        </div>\r\n        <!-- fxLayoutAlign=\"center center\" -->\r\n        <div fxLayout=\"row\"  fxLayoutGap=\"2%\" >\r\n     \r\n       <mat-card class=\"chequecard\">\r\n          <mat-hint class=\"valueText\">Assets and Liabilities</mat-hint>\r\n          <h6 class=\"headingText\"> Last Updated on   {{financialdata.lastUpdatedon}}</h6>\r\n          <apx-chart\r\n            [labels]=\"chartOptions.labels\"\r\n            [series]=\"chartOptions.series\"\r\n            [chart]=\"chartOptions.chart\"\r\n            [plotOptions]=\"chartOptions.plotOptions\">\r\n        </apx-chart>\r\n\r\n\r\n       </mat-card>\r\n\r\n       <mat-card class=\"incomeCard\"> \r\n        <mat-hint class=\"valueText\">Income and Expenses</mat-hint>\r\n          <apx-chart\r\n          [series]=\"chartOptions1.series1\"\r\n          [chart]=\"chartOptions1.chart1\"\r\n          [yaxis]=\"chartOptions1.yaxis1\"\r\n          [xaxis]=\"chartOptions1.xaxis1\"\r\n          [labels]=\"chartOptions1.labels1\"\r\n          [stroke]=\"chartOptions1.stroke1\" \r\n          [markers]=\"chartOptions1.markers1\"\r\n          [fill]=\"chartOptions1.fill1\"\r\n          [tooltip]=\"chartOptions1.tooltip1\"\r\n        ></apx-chart>\r\n       </mat-card>\r\n\r\n    </div>\r\n<mat-card *ngIf=\"financialdata\">\r\n    <div  fxLayout=\"row wrap\" >\r\n        <mat-icon  class=\"accountIcon\" >account_circle</mat-icon>\r\n        <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n        <mat-hint class=\"valueTexting\">{{financialdata.designation}}</mat-hint>\r\n        <br>\r\n        <mat-hint class=\"headingTexting\">Emp ID {{financialdata.employeeNumber}} . {{financialdata.officeName}}</mat-hint>\r\n        </div>\r\n        <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n        <mat-hint class=\"headingText\">Employment Type</mat-hint>\r\n        <br>\r\n        <mat-hint class=\"valueText\">{{financialdata.employmentType}}</mat-hint>\r\n        </div>\r\n        <div fxFlex=\"20%\" fxFlex.xs=\"100%\">\r\n        <mat-hint class=\"headingText\">Employment Category</mat-hint>\r\n        <br>\r\n        <mat-hint class=\"valueText\">{{financialdata.employmentCategory}}</mat-hint>\r\n    </div>\r\n</div>\r\n\r\n\r\n</mat-card>\r\n     \r\n<p class=\"editButton\" (click)=\"edit();\"><u>Edit</u></p>\r\n</div>\r\n</div>\r\n<!-- </mat-card> -->\r\n","import { ChangeDetectorRef, Component, Inject, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { AppLoaderService } from 'app/shared/services/app-loader/app-loader.service';\r\nimport { FundingStageService } from 'app/shared/services/funding-stage.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { DialogData } from 'app/views/others/kyc-screening/kyc-screening.component';\r\n\r\n@Component({\r\n  selector: 'app-intial-funding-dialog',\r\n  templateUrl: './intial-funding-dialog.component.html',\r\n  styleUrls: ['./intial-funding-dialog.component.scss']\r\n})\r\nexport class IntialFundingDialogComponent implements OnInit {\r\n  fundStageFormGroup: FormGroup;\r\n  detailsShowOrViewRef: any;\r\n  accountId: string;\r\n  accountInfo: any;\r\n  constructor(private router: Router,\r\n    private formBuilder: FormBuilder,\r\n    private cdr: ChangeDetectorRef,\r\n    private ls: LocalStoreService,\r\n    private loader:AppLoaderService,\r\n    private fundingStageService: FundingStageService,\r\n    public dialogRef: MatDialogRef<IntialFundingDialogComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: DialogData,\r\n    private snack: MatSnackBar) { }\r\n\r\n  ngOnInit() {\r\n    /* For getting account id */\r\n    this.accountId = this.ls.getItem('accountId');\r\n    this.accountInfo = this.ls.getItem('EDIT-CREATEACCCIF');\r\n    if(this.accountInfo){\r\n      this.accountId=this.accountInfo.businessProductAccount.accountId\r\n    }\r\n    this.fundStageFormGroup = this.formBuilder.group({\r\n      \"fundId\": [''],\r\n      \"fundBy\": [''],\r\n      \"accountId\": [''],\r\n      \"amount\": [''],\r\n      \"tellerTrxnRefNo\": [''],\r\n      \"tellerTrxnStatus\": [''],\r\n      \"fundByAccount\": [''],\r\n      \"chequeNumber\":[''],\r\n      \"branchCode\":[''],\r\n      \"createdBy\": [''],\r\n      \"createdTime\": [''],\r\n      \"modifiedBy\": [''],\r\n      \"modifiedTime\": ['']\r\n    })\r\n     \r\nsetTimeout(() => {\r\n  this.viewFundsbyAccountId(this.accountId);\r\n}, 1);\r\n    \r\n  }\r\n\r\n  goToDetail(item) {\r\n    console.log(item);\r\n      this.fundingStageService.addEditOrViewsummaryData('EDIT');\r\n      console.log(this.fundingStageService.addEditOrViewsummaryData)\r\n      this.fundingStageService.fundsEditResp(item);\r\n      this.router.navigate([`/home/application/funding/details/${this.accountId}`]);\r\n      this.dialogRef.close();\r\n  }\r\n\r\n  viewFundsbyAccountId(accountId){\r\n    this.loader.open();\r\n    this.fundingStageService.getFundByAccountId(accountId)\r\n    .subscribe((fundResp:any) =>{\r\n      this.loader.close();\r\n      this.fundStageFormGroup.patchValue(fundResp);\r\n      this.cdr.markForCheck();\r\n    },(err:any) =>{\r\n      this.loader.close();\r\n    });\r\n  }\r\n\r\n  goToClose(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n}\r\n","<!-- view funding details -->\r\n<form [formGroup]=\"fundStageFormGroup\" novalidate >\r\n\t<div fxLayout=\"row wrap\">\r\n\t\t<div fxLayout=\"row\" class=\"contain\" >\r\n\t\t\t<mat-icon class=\"backIcon\" (click)=\"goToClose()\">close</mat-icon>\r\n\t\t  </div>\r\n\t\t<div fxFlex=\"100\" class=\"mt-20\">\r\n\t\t\t<fieldset>\r\n\t\t\t\t<legend visible=\"true\">Initial Funding Details</legend>\r\n\t\t\t\t</fieldset>\r\n\t\t\t<!-- <h1 class=\"IDF_title\">Initial Funding Details</h1> -->\r\n\t\t\t<!-- <mat-divider class=\"IDF_Div\"></mat-divider> -->\r\n\t\t\t<mat-card>\r\n\t\t\t\t<mat-card-content>\r\n\t\t\t\t\t<!-- Cash Mode -->\r\n\t\t\t\t\t<ng-container *ngIf=\"fundStageFormGroup.value.fundBy == 'Cash'\">\r\n\t\t\t\t\t\t<div fxLayout=\"row\" fxLayoutGap=\"25px\" fxLayoutAlign=\"center center\" class=\"mt-32\" > \r\n\t\t\t\t\t\t\t<div fxFlex=\"80\" fxFlexOffset=\"10px\">\r\n\t\t\t\t\t\t\t\t<div fxLayout=\"row\" fxLayoutGap=\"10px\" fxLayoutAlign=\"space-between center\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"Idf_ref\">\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"fz-12\">\r\n\t\t\t\t\t\t\t\t\t\t\t\tReference Number : {{fundStageFormGroup.value.tellerTrxnRefNo}}\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div class=\"Idf_status\">\r\n\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{{fundStageFormGroup.value.tellerTrxnStatus}}\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<br>\r\n\t\t\t\t\t\t\t\t<div fxLayout=\"row\" fxLayoutGap=\"10px\" fxLayoutAlign=\"space-between center\">\r\n\t\t\t\t\t\t\t\t\t<div fxFlex=\"50%\" class=\"Idf_amount\">\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"pb-1\">\r\n\t\t\t\t\t\t\t\t\t\t\t<!--<mat-hint class=\"mat-heading-label\">Amount : <span matPrefix>$&nbsp;</span>{{fundStageFormGroup.value.amount}}</mat-hint>-->\r\n\t\t\t\t\t\t\t\t\t\t\t<mat-hint>Amount : <h1 class=\"Idf_amount_h1\">$ {{fundStageFormGroup.value.amount}}</h1></mat-hint>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<!--<div fxFlex=\"50%\">\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"pb-1\">\r\n\t\t\t\t\t\t\t\t\t\t\t<mat-hint class=\"mat-heading-label\">Fund By : <span matPrefix></span>{{fundStageFormGroup.value.fundBy}}</mat-hint>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>-->\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</ng-container>\r\n\r\n\t\t\t\t\t<!-- Cheque Mode -->\r\n\t\t\t\t\t<ng-container *ngIf=\"fundStageFormGroup.value.fundBy == 'Cheque'\">\r\n\t\t\t\t\t\t<div fxLayout=\"row\" fxLayoutGap=\"25px\" fxLayoutAlign=\"center center\" class=\"mt-32\" > \r\n\t\t\t\t\t\t\t<div fxFlex=\"80\" fxFlexOffset=\"10px\">\r\n\t\t\t\t\t\t\t\t<div fxLayout=\"row\" fxLayoutGap=\"10px\" fxLayoutAlign=\"space-between center\">\r\n\t\t\t\t\t\t\t\t\t<div fxFlex=\"50%\">\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"pb-1\">\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"funding\">\r\n\t\t\t\t\t\t\t\t\t\t\t\tCheque No : #{{fundStageFormGroup.value.chequeNumber}}\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div fxFlex=\"50%\">\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"pb-1\">\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"funding\" >\r\n\t\t\t\t\t\t\t\t\t\t\t\tFund By Account : #{{fundStageFormGroup.value.fundByAccount}}\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div fxLayout=\"row\" fxLayoutGap=\"10px\" fxLayoutAlign=\"space-between center\">\r\n\t\t\t\t\t\t\t\t\t<div fxFlex=\"50%\">\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"pb-1\">\r\n\t\t\t\t\t\t\t\t\t\t\t<!--<mat-hint class=\"mat-heading-label\">Amount : <span matPrefix>$&nbsp;</span>{{fundStageFormGroup.value.amount}}</mat-hint>-->\r\n\t\t\t\t\t\t\t\t\t\t\t<mat-hint class=\"mat-heading-label\">Amount : <span matPrefix>&nbsp;</span>{{fundStageFormGroup.value.amount}}</mat-hint>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div fxFlex=\"50%\">\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"pb-1\">\r\n\t\t\t\t\t\t\t\t\t\t\t<mat-hint class=\"mat-heading-label\">Fund By : <span matPrefix></span>{{fundStageFormGroup.value.fundBy}}</mat-hint>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</ng-container>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<!-- Fund Transfer Mode -->\r\n\t\t\t\t\t<ng-container *ngIf=\"fundStageFormGroup.value.fundBy == 'Fund Transfer'\">\r\n\t\t\t\t\t\t<div fxLayout=\"row\" fxLayoutGap=\"25px\" fxLayoutAlign=\"center center\" class=\"mt-32\" > \r\n\t\t\t\t\t\t\t<div fxFlex=\"80\" fxFlexOffset=\"10px\">\r\n\t\t\t\t\t\t\t\t<div fxLayout=\"row\" fxLayoutGap=\"10px\" fxLayoutAlign=\"space-between center\">\r\n\t\t\t\t\t\t\t\t\t<div fxFlex=\"50%\">\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"pb-1\">\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"funding\">\r\n\t\t\t\t\t\t\t\t\t\t\t\tFund By Account : {{ fundStageFormGroup.value.fundByAccount }}\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div fxFlex=\"50%\">\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"pb-1\">\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"funding\" >\r\n\t\t\t\t\t\t\t\t\t\t\t\tBranch Code: {{ fundStageFormGroup.value.branchCode }}\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div fxLayout=\"row\" fxLayoutGap=\"10px\" fxLayoutAlign=\"space-between center\">\r\n\t\t\t\t\t\t\t\t\t<div fxFlex=\"50%\">\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"pb-1\">\r\n\t\t\t\t\t\t\t\t\t\t\t<!--<mat-hint class=\"mat-heading-label\">Amount : <span matPrefix>$&nbsp;</span>{{fundStageFormGroup.value.amount}}</mat-hint>-->\r\n\t\t\t\t\t\t\t\t\t\t\t<mat-hint class=\"mat-heading-label\">Amount : <span matPrefix>&nbsp;</span>{{fundStageFormGroup.value.amount}}</mat-hint>\r\n\t\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div fxFlex=\"50%\">\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"pb-1\">\r\n\t\t\t\t\t\t\t\t\t\t\t<mat-hint class=\"mat-heading-label\">Fund By : <span matPrefix></span>{{fundStageFormGroup.value.fundBy}}</mat-hint>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</ng-container>\r\n\t\t\t\t\t\r\n\t\t\t\t</mat-card-content>\r\n\r\n\t\t\t</mat-card>\r\n\t\t</div>\r\n\r\n\r\n\r\n\r\n\t\t<div fxFlex=\"100\" class=\"mt-16\">\r\n\t\t\t<button mat-stroked-button color=\"primary\" class=\"Idf_edit\" (click)=\"goToDetail(fundStageFormGroup.value)\" >Edit</button>\r\n\t\t</div>\r\n\r\n\t</div>\r\n</form>","import { ChangeDetectorRef, Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators, FormBuilder, FormArray } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { CustomValidators } from 'ngx-custom-validators';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\n// import { IcustProductAccountInfo } from 'app/shared/models/icustProductAccountInfo';\r\nimport { ApplicationEntryStageService } from 'app/shared/services/application-entry-stage.service';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { AccountService } from '../../account.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { DataService } from 'app/shared/services/data.service';\r\nimport * as moment from 'moment';\r\nimport { UrlService } from '../../url.service';\r\nimport { AppLoaderService } from 'app/shared/services/app-loader/app-loader.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-account',\r\n  templateUrl: './account.component.html',\r\n  styleUrls: ['./account.component.scss']\r\n})\r\nexport class AccountComponent implements OnInit {\r\n  cifNumberForm = new FormControl()\r\n  timer: any;\r\n  listOfCustByCif: any = [];\r\n\r\n  formData = {}\r\n  // console = console;\r\n  accountForm: FormGroup;\r\n  isAccountActive: boolean = false;\r\n  navSubscription: any;\r\n  routeparams: any;\r\n  showEditOption: boolean = false;\r\n  productaccountID: any;\r\n  customerDetails: any[] = [];\r\n  minDate = new Date();\r\n  previousUrl: string = '';\r\n  accountDetails: any;\r\n  accountFromByCif: FormGroup;\r\n  accountDetailsData: any;\r\n  idProof: any;\r\n  showSpinn: boolean;\r\n  userAdddress: any;\r\n  customerAdditionalInfo: any;\r\n  accountId: any;\r\n  dispResponse: {};\r\n  cifNumberPrimary: any;\r\n  isCifValid: boolean = false;\r\n  onbackSpace: boolean = false;\r\n  arrayAccountBranch: any;\r\n  currencyData: any;\r\n  branchName: any;\r\n  arrayAccountType: any;\r\n  userName: string;\r\n  disableFundTheAccount: boolean = false;\r\n  fundBy: string;\r\n  flag: boolean;\r\n  swiftCode: any;\r\n  customerName: any;\r\n  name: string;\r\n\r\n  validPattern: string;\r\n  maxDate = new Date();\r\n  nextbtn: boolean = false;\r\n  customerNumber: any;\r\n  accountInfo: any;\r\n\r\n\r\n\r\n  constructor(private api: ApiService, private router: Router, private cdr: ChangeDetectorRef, private dataService: DataService, private formBuilder: FormBuilder, private snack: MatSnackBar,\r\n    private apiService: ApplicationEntryStageService, private urlService: UrlService, private ls: LocalStoreService, private accountService: AccountService, private loader: AppLoaderService,\r\n    private appApiService: ApplicationEntryStageService,\r\n  ) {\r\n    this.maxDate.setDate(this.maxDate.getDate() + 13);\r\n  }\r\n\r\n\r\n  ngOnInit() {\r\n\r\n    this.userName = localStorage.getItem('userName');\r\n    this.productaccountID = this.ls.getItem('accountId');\r\n    this.accountInfo = this.ls.getItem('EDIT-CREATEACCCIF');\r\n    console.log(this.accountInfo);\r\n    let isAccountScreen: boolean = JSON.parse(this.ls.getItem('ACC_DONE'));\r\n    this.getAccountType(\"account_type\");\r\n    this.validPattern = \"^[a-zA-Z0-9]{8}$\";\r\n    this.urlService.previousUrl$\r\n      .subscribe((previousUrl: string) => {\r\n        this.previousUrl = previousUrl\r\n      });\r\n\r\n    console.log(this.showEditOption);\r\n\r\n    if (this.productaccountID != null && isAccountScreen) {\r\n      this.showEditOption = true;\r\n      this.cifNumberPrimary = this.ls.getItem(\"CIF_NUM_PRIMARY\");\r\n      this.isCifValid = true;\r\n      this.getAccountDetails();\r\n    } else {\r\n      console.log(\"else\");\r\n      this.showEditOption = false;\r\n      this.buildAccountForm();\r\n    }\r\n    this.getAccountBranchDetails();\r\n    if (this.accountForm && this.accountForm.get('accountBranch')) {\r\n      this.accountForm.get('accountBranch').setValue(this.branchName);\r\n    }\r\n    this.onChanges();\r\n    console.log(\"account branch::\", this.branchName)\r\n    if(this.accountInfo){\r\n      console.log(\"Inside Fetch\");\r\n      this.fetchByCif(this.accountInfo.businessProductAccount.customerId);\r\n    }\r\n  }\r\n\r\n  onKeyPress(event: any) {\r\n    const pattern = /[0-9]/;\r\n    let inputChar = String.fromCharCode(event.charCode);\r\n    if (!pattern.test(inputChar)) {\r\n      event.preventDefault();\r\n    }\r\n    console.log(event.target.value);\r\n    clearTimeout(this.timer)\r\n    if (!event.target.value) {\r\n      this.listOfCustByCif = []\r\n    } else {\r\n      this.timer = setTimeout(() => {\r\n        this.appApiService.fetchByCif(event.target.value).subscribe((res: any) => { \r\n          console.log(res);\r\n          if (res) {\r\n            this.listOfCustByCif = res.customerInfoList\r\n          }\r\n        })\r\n      }, 1000);\r\n    }\r\n  }\r\n\r\n\r\n  onChanges(): void {\r\n    this.accountForm.get('cifNumber').valueChanges.subscribe(val => {\r\n      if (val == null) {\r\n        this.isCifValid = false;\r\n      }\r\n      console.log(\"TEST CIF\", `My cifNumber is ${val}.`);\r\n    });\r\n\r\n    this.accountForm.get('fundBy').valueChanges.subscribe(val => {\r\n      if (val == 'yes') {\r\n        this.disableFundTheAccount = true;\r\n\r\n      } else {\r\n        this.disableFundTheAccount = false;\r\n\r\n      }\r\n\r\n    });\r\n  }\r\n\r\n\r\n  get f() { return this.accountForm.controls; }\r\n\r\n\r\n  getAccountDetails() {\r\n    this.loader.open();\r\n    this.api.getAccountDetailsById(this.productaccountID).subscribe((accountDetails) => {\r\n      this.loader.close();\r\n      this.accountDetails = accountDetails;\r\n      console.log(this.accountDetails);\r\n      this.buildAccountForm(this.accountDetails);\r\n    }, (err: any) => {\r\n      this.loader.close();\r\n    });\r\n\r\n\r\n  }\r\n\r\n  buildAccountForm(data?) {\r\n    console.log(data);\r\n    let applicationDate = data ? moment(data.applicationDate).format() : '';\r\n    this.flag = (data && data.swiftCodeEnable) ? true : false;\r\n    if (data) {\r\n      if (data.fundTheAccount != null) {\r\n        console.log(this.disableFundTheAccount, \"If\");\r\n        this.disableFundTheAccount = true;\r\n        console.log(this.disableFundTheAccount, \"If\");\r\n      }\r\n    }\r\n\r\n    this.accountForm = this.formBuilder.group({\r\n      cifNumber: [data ? this.cifNumberPrimary : '', [Validators.required, Validators.minLength(5)]],\r\n      customerName: [data ? this.ls.getItem('NAME') : ''],\r\n      accountId: [this.productaccountID],\r\n      accountType: [data ? data.accountType : '', Validators.required],\r\n      businessProductName: [data ? data.businessProductName : '', Validators.required],\r\n      productImage: [data ? data.productImage : ''],\r\n      productDescription: [data ? data.productDescription : '', Validators.required],\r\n      accountBranch: [data ? data.accountBranch : '', Validators.required],\r\n      accountCurrency: [data ? data.accountCurrency : '', Validators.required],\r\n      applicationDate: [data ? applicationDate : '', Validators.required],\r\n      fundTheAccount: [data ? data.fundTheAccount : '0'],\r\n      fundBy: [data ? data.fundBy : false],\r\n      amount: [data ? data.amount : '0'],\r\n      overDraftRequested: [data ? data.overDraftRequested : false],\r\n      status: [data ? data.status : ''],\r\n      swiftCodeEnable: [data ? data.swiftCodeEnable : false],\r\n      swiftCode: [data ? data.swiftCode : '', Validators.pattern(\"(?=.*[0-9])(?=.*[a-zA-Z])([a-zA-Z0-9]+){8,8}$\")],\r\n    });\r\n\r\n  }\r\n\r\n  //SWIFT Code\r\n  onToggle(event: any) {\r\n    if (event.checked == true) {\r\n      this.nextbtn = true;\r\n      //this.accountForm.get('swiftCode').disable({onlySelf:true, emitEvent:false});\r\n      this.flag = true;\r\n\r\n      // this.accountForm.get('swiftCode').setValue('');\r\n    }\r\n    else {\r\n      this.nextbtn = false;\r\n      this.flag = false;\r\n      this.accountForm.controls.swiftCode.reset();\r\n      this.cdr.detectChanges();\r\n      this.cdr.markForCheck();\r\n    }\r\n    console.log(\"acc\", this.accountForm)\r\n    console.log(\"accountForm\", this.accountForm.valid, this.nextbtn)\r\n  }\r\n\r\n\r\n  goBack() {\r\n    this.router.navigate([this.previousUrl]);\r\n  }\r\n\r\n  _keyPress(event: any) {\r\n    const pattern = /[0-9]/;\r\n    let inputChar = String.fromCharCode(event.charCode);\r\n    if (!pattern.test(inputChar)) {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n  _keyPress1(event: any) {\r\n    const pattern = /[a-zA-Z0-9]/;\r\n    let inputChar = String.fromCharCode(event.charCode);\r\n    if (!pattern.test(inputChar)) {\r\n      event.preventDefault();\r\n    }\r\n    if (this.accountForm.get('swiftCode')) {\r\n      this.nextbtn = false;\r\n    }\r\n    else {\r\n      this.nextbtn = true;\r\n    }\r\n    console.log(\"value\", this.accountForm.value.swiftCode)\r\n    console.log(\"acc\", this.accountForm.invalid)\r\n    console.log(\"nxt\", this.nextbtn)\r\n\r\n  }\r\n\r\n  keyUpevent(event) {\r\n    console.log(\"event\", event);\r\n    if (event.keyCode === 8) {\r\n      this.onbackSpace = true;\r\n      this.isCifValid = false;\r\n    }\r\n    else {\r\n      this.onbackSpace = false;\r\n    }\r\n  }\r\n\r\n\r\n  getAccountType(key: string) {\r\n    this.api.getDropDownValues(key).subscribe((data) => {\r\n      this.arrayAccountType = data;\r\n    });\r\n  }\r\n\r\n  getAccountBranchDetails() {\r\n    //debugger\r\n    this.api.getAccountBranch().subscribe((data) => {\r\n      console.log(\"data:: AccountBranch \", data)\r\n      this.arrayAccountBranch = data;\r\n      if (this.arrayAccountBranch.length == 0) {\r\n        this.arrayAccountBranch.push(this.branchName);\r\n      }\r\n      console.log(\"this.branchName::\", this.branchName, this.arrayAccountBranch)\r\n\r\n      this.currencyData = this.arrayAccountBranch.find(x => x.branchName == this.branchName);\r\n      console.log(\"Currency\", this.currencyData)\r\n\r\n      if (this.currencyData != null || this.currencyData != undefined) {\r\n        this.accountForm.get('accountCurrency').setValue(this.currencyData.branchCcy);\r\n      }\r\n\r\n    });\r\n  }\r\n\r\n\r\n  onChangeBranch(value) {\r\n    this.currencyData = this.arrayAccountBranch.find(x => x.branchName == value.value);\r\n    if (this.currencyData != null || this.currencyData != undefined) {\r\n      this.accountForm.get('accountCurrency').setValue(this.currencyData.branchCcy);\r\n    }\r\n\r\n  }\r\n  convertDate(value) {\r\n    let date = moment(value).format('YYYY-MMM-DD'); // ISO 8601 format\r\n    // let date = new Date(value).format('yyyy-MMM-dd');\r\n    console.log(\"date\", date);\r\n    if (date)\r\n      return date;\r\n  }\r\n\r\n  onSubmit() {\r\n    console.log(\"form value\", this.accountForm.value);\r\n    localStorage.setItem('CurrencyType', this.accountForm.value.accountCurrency);\r\n    console.log(\"fund::\", this.accountForm.value.fundBy);\r\n    let payload = {\r\n\r\n      \"accountId\": this.showEditOption ? this.productaccountID : null,\r\n      \"accountType\": this.accountForm.value.accountType,\r\n      \"businessProductName\": this.accountForm.value.businessProductName,\r\n      \"productImage\": this.accountForm.value.productImage,\r\n      \"productDescription\": this.accountForm.value.productDescription,\r\n      \"accountBranch\": this.accountForm.value.accountBranch,\r\n      \"accountCurrency\": this.accountForm.value.accountCurrency,\r\n      \"applicationDate\": this.convertDate(this.accountForm.value.applicationDate),\r\n      \"fundTheAccount\": this.accountForm.value.fundTheAccount,\r\n\r\n      \"fundBy\": this.accountForm.value.fundBy,\r\n      \"amount\": this.accountForm.value.amount,\r\n      \"overDraftRequested\": this.accountForm.value.overDraftRequested,\r\n      \"status\": this.accountForm.value.status,\r\n      \"createdBy\": this.userName,\r\n      \"swiftCode\": this.accountForm.value.swiftCode,\r\n      \"swiftCodeEnable\": this.accountForm.value.swiftCodeEnable,\r\n      \"customerName\": this.ls.getItem('NAME'),\r\n    };\r\n\r\n    if (this.isCifValid == false) {\r\n      this.snack.open('Kindly Enter Valid CifNumber to proceed!', 'OK', {\r\n        duration: 4000,\r\n        verticalPosition: 'top',\r\n        horizontalPosition: 'right'\r\n      });\r\n      return;\r\n    }\r\n\r\n    this.apiService.saveProductAccountInfo(payload).subscribe(response => {\r\n      console.log(\"Response ---> \", response);\r\n      console.log(response.accountId)\r\n      this.accountId = response.accountId;\r\n      this.accountForm.value.swiftCode;\r\n      console.log(\"swiftCode:\", this.accountForm.value.swiftCode)\r\n      this.assign(response.accountId, response.accountType)\r\n      if (response === 200 || response !== null) {\r\n        sessionStorage.setItem('accountId', response.accountId);\r\n        let fundStatus = {\r\n          accountId: response.accountId,\r\n          isActive: response.fundBy ? true : false\r\n        };\r\n        let overDraftStatus = {\r\n          accountId: response.accountId,\r\n          isActive: response.overDraftRequested\r\n        };\r\n\r\n        this.ls.setItem('fundByStatus', fundStatus);\r\n        this.ls.setItem('fundByStatusAccId', fundStatus.accountId);\r\n        console.log(fundStatus.isActive, \"fundByStatus\");\r\n        this.ls.setItem('overDraftByStatus', overDraftStatus);\r\n        console.log(overDraftStatus.isActive, \"overDraftStatus\");\r\n        this.ls.setItem('accountId', response.accountId);\r\n        this.ls.setItem('accountType', response.accountType);\r\n        this.ls.setItem(\"CIF_NUM_PRIMARY\", this.accountForm.value.cifNumber);\r\n        this.ls.setItem('Customer Name', this.name);\r\n        this.ls.setItem(\"SWIFTCode\", this.accountForm.value.swiftCode);\r\n        this.ls.setItem('ACC_DONE', true);\r\n        this.ls.setItem('ENRICHMENT_INTEREST_DONE', false);\r\n        this.ls.setItem('ENRICHMENT_CHARGES_DONE', false);\r\n        this.router.navigate([`/home/application/customer-information/${response.accountId}`]);\r\n        this.accountService.refresh.next();\r\n        this.snack.open('Account Details Saved!', 'OK', {\r\n          duration: 4000,\r\n          verticalPosition: 'top',\r\n          horizontalPosition: 'right'\r\n        });\r\n      }\r\n      else if (response === 500) {\r\n        this.snack.open('Not able to connect to server!', 'INTERNAL SERVER ERROR', {\r\n          duration: 4000,\r\n          verticalPosition: 'top',\r\n          horizontalPosition: 'right'\r\n        });\r\n        console.log(\"500 error\")\r\n      }\r\n    });\r\n    let cifnu = this.accountForm.get('cifNumber').value;\r\n    //this.fetchByCif(cifnu);\r\n  }\r\n\r\n\r\n  assign(valueForaccId, type) {\r\n    this.api.setAccountId({\r\n      accountId: valueForaccId\r\n    });\r\n    this.api.setAccountType({\r\n      accountType: type\r\n    });\r\n  }\r\n\r\n  fetchByCif(cifNumber) {\r\n\r\n    if (!!cifNumber) {\r\n      this.showSpinn = true;\r\n      console.log(\"Caling\", cifNumber);\r\n      this.apiService.fetchByCif(cifNumber).subscribe((res: any) => {\r\n        console.log('resp', res);\r\n        // this.accountForm.reset();\r\n      console.log(this.isCifValid);\r\n        if (res.customerInfoList[0].custStatus!=\"APPROVED\")  \r\n        {\r\n          this.isCifValid = false;\r\n            this.snack.open(\"CIF Number is not Approved :\" + cifNumber, \"\", {\r\n              duration: 4000,\r\n              verticalPosition: 'top',\r\n              horizontalPosition: 'right'\r\n            });\r\n          }\r\n  \r\n        this.accountForm.controls.cifNumber.setValue(cifNumber);\r\n        this.currencyData = this.arrayAccountBranch.find(x => x.branchName == this.branchName);\r\n        this.accountForm.get('accountBranch').setValue(this.branchName);\r\n        if (this.currencyData != null || this.currencyData != undefined) {\r\n          this.accountForm.get('accountCurrency').setValue(this.currencyData.branchCcy);\r\n        }\r\n        this.accountForm.get('amount').setValue(0);\r\n        this.accountForm.get('swiftCode').setValue(null);\r\n        // console.log('currencyData:: ',this.currencyData);\r\n        this.showSpinn = false;\r\n\r\n        if (!res) {\r\n          this.isCifValid = false;\r\n\r\n          this.snack.open('Invalid CIF Number', 'OK', {\r\n            duration: 4000,\r\n            verticalPosition: 'top',\r\n            horizontalPosition: 'right'\r\n          });\r\n          // this.accountForm.get('cifNumber').patchValue(\"\");\r\n          return;\r\n        } else {\r\n          if (res.customerInfoList[0].custStatus!=\"APPROVED\") {\r\n            this.isCifValid= false;\r\n          }\r\n          if (res.customerInfoList[0].custStatus==\"APPROVED\"){\r\n            this.isCifValid = true;\r\n          }\r\n           //console.log(this.isCifValid,\"else2 condition\");\r\n\r\n          let address: any;\r\n          console.log(res.customerInfoList[0].userAddress.length);\r\n          if (res.customerInfoList[0].userAddress.length > 1) {\r\n            address = res.customerInfoList[0].userAddress.find((item: any) => item.addressType == \"Permanent\" || item.addressType == \"permanent\");\r\n          } else {\r\n            address = res.customerInfoList[0].userAddress[0];\r\n          }\r\n          let queryParams = {\r\n            prefix: res.customerInfoList[0].prefix,\r\n            customerId: res.customerInfoList[0].customerId,\r\n            firstName: res.customerInfoList[0].firstName,\r\n            middleName: res.customerInfoList[0].middleName,\r\n            lastName: res.customerInfoList[0].lastName,\r\n            gender: res.customerInfoList[0].gender,\r\n            dateOfBirth: this.convertDate(res.customerInfoList[0].dateOfBirth),\r\n            placeOfBirth: res.customerInfoList[0].placeOfBirth,\r\n            residenceStatus: res.customerInfoList[0].residenceStatus,\r\n            nationality: res.customerInfoList[0].nationality,\r\n            countryOfResidence: res.customerInfoList[0].countryOfResidence,\r\n            occupationType: res.customerInfoList[0].occupationType,\r\n            custIdProofs: res.customerInfoList[0].custIdProofs,\r\n            idType: res.customerInfoList[0].custIdProofs.length > 0 ? res.customerInfoList[0].custIdProofs[0].idType : '',\r\n            idNumber: res.customerInfoList[0].custIdProofs.length > 0 ? res.customerInfoList[0].custIdProofs[0].idNumber : '',\r\n            expiryDate: res.customerInfoList[0].custIdProofs.length > 0 ? this.convertDate(res.customerInfoList[0].custIdProofs[0].expiryDate) : '',\r\n            addressType: address.addressType,\r\n            address1: address.address1,\r\n            address2: address.address2,\r\n            city: address.city,\r\n            country: address.country,\r\n            state: address.state,\r\n            zipCode: address.zipCode,\r\n            phoneNumber: res.customerInfoList[0].phoneNumber,\r\n            landlineNumber: res.customerInfoList[0].landlineNumber,\r\n            primaryEmailAdress: res.customerInfoList[0].primaryEmailAdress\r\n          };\r\n          if (this.accountForm.value.swiftCode == null || this.accountForm.value.swiftCodeEnable == null) {\r\n            console.log(this.accountForm.value.swiftCode);\r\n            this.flag = false;\r\n          }\r\n          console.log(\"queryParams\", queryParams);\r\n          console.log(\"Residence status:\", res.customerInfoList[0].residenceStatus);\r\n          console.log(\"name\", queryParams.firstName, \"\", queryParams.lastName);\r\n          if (res.customerInfoList[0].custStatus==\"APPROVED\"){\r\n            this.assignCustomerName(queryParams.firstName, queryParams.lastName, queryParams.middleName);\r\n          }\r\n          this.cifNumberPrimary = cifNumber;\r\n          console.log(\"cifNumberPrimary::\", this.cifNumberPrimary);\r\n          this.ls.setItem(\"CIF_NUM_PRIMARY\", this.cifNumberPrimary);\r\n          this.api.sendCIF(queryParams);\r\n        }\r\n        this.cdr.markForCheck();\r\n\r\n      });\r\n    }\r\n  }\r\n\r\n  assignCustomerName(firstName: any, lastName: any, middleName) {\r\n    if (middleName) {\r\n\r\n      this.name = firstName + \" \" + middleName + \" \" + lastName;\r\n      this.ls.setItem(\"NAME\", this.name);\r\n\r\n    }\r\n    else {\r\n      this.name = firstName + \" \" + lastName;\r\n      this.ls.setItem(\"NAME\", this.name);\r\n\r\n    }\r\n    console.log(\"this.name\", this.name);\r\n    this.accountForm.get('customerName').setValue(this.name);\r\n    console.log(\"Customer Name::\", this.name)\r\n    console.log(this.accountForm);\r\n\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.dataService.sendNavParam({});\r\n  }\r\n}\r\n","<div class=\"matcard-size\">\r\n<div fxLayout=\"row wrap\">\r\n  <div fxFlex=\"100\">\r\n    <div class=\"propic text-center\">\r\n      <img src=\"assets/images/svg/Group 673.svg\" alt=\"\" class=\"w-90\" />\r\n    </div>\r\n    <div class=\"profile-title text-center mt-8\">\r\n      <div class=\"main-title1\">Account Details</div>\r\n    </div>\r\n  </div>\r\n  <div fxFlex=\"100\">\r\n    <mat-card class=\"p-0\">\r\n      <mat-card-title>\r\n        <fieldset>\r\n        <legend visible=\"true\">Account Information</legend>\r\n        </fieldset>\r\n      </mat-card-title>\r\n      <mat-card-content>\r\n        <form *ngIf=\"accountForm\" [formGroup]=\"accountForm\">\r\n          <mat-spinner class=\"spinner\" [diameter]=\"80\" *ngIf=\"showSpinn\"></mat-spinner>\r\n          <div fxLayout=\"row\" fxLayoutGap=\"25px\">\r\n            <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-1\">\r\n              \r\n                <div class=\"pb-1\" >\r\n                  <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                     <mat-label>CIF Number</mat-label>    \r\n                     <mat-icon *ngIf=\"!isCifValid\" matSuffix class=\"search\">search</mat-icon>                 \r\n                     <input matInput (keypress)=_keyPress($event) \r\n                      (change)=\"fetchByCif(accountForm.get('cifNumber').value)\"\r\n                      (keyup)=keyUpevent($event) required\r\n                     formControlName=\"cifNumber\" name=\"cif\" placeholder=\"CIF Number\" \r\n                     (keyup)=\"onKeyPress($event)\" [formControl]=\"cifNumberForm\" [matAutocomplete]=\"auto\"\r\n                     [readonly]=\"cifNumberPrimary != null && showEditOption == true ? true : false\" />\r\n                     <mat-icon *ngIf=\"isCifValid\" matSuffix color=\"primary\">check_circle</mat-icon>\r\n                   <mat-error *ngIf=\"accountForm.get('cifNumber').hasError('required') && !isCifValid \">\r\n                     CIF Number is Required!\r\n                   </mat-error>\r\n                <mat-hint class=\"hintColor\"  *ngIf=\"!isCifValid && onbackSpace\" > \r\n                  Enter valid CIF Number!</mat-hint>\r\n\r\n                  <!-- accountForm.get('cifNumber').value.length >0 -->\r\n                 </mat-form-field>\r\n                <div>\r\n                  <mat-autocomplete #auto=\"matAutocomplete\">\r\n                    <mat-option *ngFor=\"let option of listOfCustByCif\" [value]=\"option.customerId\">\r\n                      <div fxLayout=\"row wrap\" style=\"margin-top: 20px;\">\r\n                        <div fxFlex=\" 100\">\r\n                          <div mat-card-avatar *ngIf=\"option?.profileImage =='not_available'\" class=\"example-header-image-dropdown\" fxFlex=\"10\">\r\n                            <h3 align=\"center\" style=\"margin-top: 5px;font-size: large;\">\r\n                              {{option?.firstName | slice:0:1 | uppercase}}\r\n                            </h3>\r\n                          </div>\r\n                          <div *ngIf=\"option?.profileImage !='not_available'\" mat-card-avatar fxFlex=\"10\">\r\n                            <img matListAvatar\r\n                              style=\"border-radius: 50%;height: 85%;margin-right: 20px;width: 90%;margin-bottom: 50px;\" align=\"center\"\r\n                              [src]=\"option?.profileImage\" alt=\"...\">\r\n                          </div>\r\n                          <div fxFlex=\"80\">\r\n                            <h5 style=\"margin-bottom: 0px;\">\r\n                              {{option?.firstName | uppercase}}\r\n                              {{option?.middleName | uppercase}}\r\n                              {{option?.lastName | uppercase}}\r\n                            </h5>\r\n                            <h6 style=\"margin-top: 0px;\" class=\"cif-0\">CIF#{{option?.cifNumber}}\r\n                              \r\n                            </h6>                            \r\n                          </div>\r\n                          <mat-icon class=\"right-arrow1\">keyboard_arrow_right</mat-icon>\r\n                        </div>\r\n                      </div>\r\n                    </mat-option>\r\n                  </mat-autocomplete>\r\n                </div>\r\n                  </div>\r\n    \r\n              <div class=\"pb-1\">\r\n                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                  <mat-label>Account Type*</mat-label>\r\n                  <mat-select name=\"accountType\" formControlName=\"accountType\">\r\n                    <mat-option *ngFor=\"let accountType of arrayAccountType\" [value]=\"accountType\"> \r\n                      {{accountType}} \r\n                    </mat-option> \r\n                  </mat-select>\r\n                  <mat-error *ngIf=\"accountForm.get('accountType').hasError('required')\">\r\n                    Account Type is Required!\r\n                  </mat-error>\r\n                </mat-form-field>\r\n\r\n              </div>\r\n\r\n              <div class=\"pb-1\">\r\n                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                  <mat-label>Product Image</mat-label>\r\n                  <input matInput name=\"product_image\" formControlName=\"productImage\" placeholder=\"Product Image\" value=\"\" />\r\n                  <!-- <mat-icon matSuffix>account_balance</mat-icon> -->\r\n                </mat-form-field>\r\n              </div>\r\n\r\n              <div class=\"pb-1\">\r\n                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                  <mat-label>Account Branch*</mat-label>\r\n                  <mat-select name=\"account_branch\" formControlName=\"accountBranch\" (selectionChange)=\"onChangeBranch($event)\">\r\n                    <mat-option *ngFor=\"let branch of arrayAccountBranch\" [value]=\"branch.branchName\"> \r\n                      {{branch.branchName}} \r\n                    </mat-option> \r\n                  </mat-select>\r\n                  <mat-error *ngIf=\"accountForm.get('accountBranch').hasError('required')\">\r\n                    Account Branch is Required!\r\n                  </mat-error>\r\n                </mat-form-field> \r\n                \r\n              </div>\r\n             \r\n              <div class=\"pb-1\">\r\n                <mat-form-field class=\"full-width\" appearance=\"outline\">\r\n                  <mat-label>Account Currency*</mat-label>\r\n                  <input matInput name=\"currency\" placeholder=\"Account Currency\" \r\n                  formControlName=\"accountCurrency\"  [readonly]=\"true\"/>\r\n                  <!-- <mat-icon matSuffix>branding_watermark</mat-icon> -->\r\n                  <mat-error *ngIf=\"accountForm.get('accountCurrency').hasError('required')\">\r\n                    Account Currency is Required!\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n              \r\n\r\n            <div fxLayout=\"row\" fxLayoutAlign=\"space-between\" fxLayoutGap=\"16px\">\r\n            <div class=\"pb-1\">\r\n              <label>Initial Funding?</label>\r\n              <div class=\"ml-12\"></div>\r\n              <mat-slide-toggle formControlName=\"fundBy\"></mat-slide-toggle>\r\n            </div>\r\n          </div>\r\n\r\n            \r\n<!-- \r\n              <div class=\"pb-1\">\r\n                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                  <mat-label>Fund By*</mat-label>\r\n                  <mat-select name=\"account\" formControlName=\"fundBy\">\r\n                    <mat-option value=\"yes\">Yes</mat-option>\r\n                    <mat-option value=\"no\">No</mat-option>\r\n                  </mat-select>\r\n                  <mat-error *ngIf=\"accountForm.get('fundBy').hasError('required')\">\r\n                    Fund By is Required!\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </div> -->\r\n            </div>\r\n\r\n            <div fxFlex=\"100\" fxFlex.gt-xs=\"50\">\r\n\r\n              <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                <mat-label>Customer Name</mat-label>\r\n                <input matInput (keypress)=_keyPress($event) \r\n                 (change)=\"fetchByCif(accountForm.get('cifNumber').value)\"\r\n                 (keyup)=keyUpevent($event) required\r\n                formControlName=\"customerName\" name=\"customerName\" placeholder=\"Customer Name\"\r\n                [readonly]=\"cifNumberPrimary != null && showEditOption == true ? true : false\" />\r\n                <mat-icon *ngIf=\"isCifValid\" matSuffix color=\"primary\">check_circle</mat-icon>\r\n              <mat-error *ngIf=\"accountForm.get('customerName').hasError('required')\">\r\n                    Valid Customer Name is Required!\r\n              </mat-error>\r\n           <!-- <mat-hint class=\"hintColor\"  *ngIf=\"!isCifValid && onbackSpace\" > Valid Customer Name is Required</mat-hint> -->\r\n  \r\n            </mat-form-field>\r\n            \r\n              <div fxLayout=\"row\" fxLayoutGap=\"25px\">\r\n                <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-1\">\r\n                  <div class=\"pb-1\" style=\"margin-top: 34px;\">\r\n                    Want to add SWIFT Code ? \r\n                    <mat-slide-toggle\r\n                    formControlName=\"swiftCodeEnable\" (change)=\"onToggle($event)\"></mat-slide-toggle>\r\n                  </div><br>\r\n                </div>\r\n              </div>\r\n              <div *ngIf=\"flag\">\r\n                <div class=\"pb-1\">\r\n                  <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                    <mat-label>SWIFT Code</mat-label>\r\n                    <input (keypress)=_keyPress1($event) minlength=\"8\" maxlength=\"11\" matInput name=\"swift_code\"\r\n                    \r\n                    [readonly]=\"swiftCode != null && swiftCodeEnable == true ? true : false\" required\r\n                     formControlName=\"swiftCode\" placeholder=\"SWIFT Code\" value=\"\" />\r\n                     <!-- <mat-icon matSuffix>account_balance</mat-icon> -->\r\n                     <!-- <mat-error *ngIf=\"accountForm.controls['swiftCode'].errors?.required\">\r\n                      SWIFT Code is Required!\r\n                      </mat-error> -->\r\n                    <mat-error *ngIf=\"accountForm.get('swiftCode').hasError('required')\">\r\n                      SWIFT Code is Required!\r\n                    </mat-error>\r\n                    <!-- <mat-error *ngIf=\"accountForm.get('swiftCode').hasError('pattern')\">\r\n                      SWIFT Code should be the combination of Alphanumeric characters\r\n                    </mat-error> -->\r\n                    <mat-error  *ngIf=\"accountForm.get('swiftCode').value && !accountForm.get('swiftCode').hasError('required')\" > SWIFT Code should be a combination of minimum of 8 alphanumeric characters</mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div> \r\n              \r\n              <div class=\"pb-1\">\r\n                <mat-form-field class=\"full-width\" appearance=\"outline\">\r\n                  <mat-label>Business Product Name*</mat-label>\r\n                  <input matInput name=\"business\" formControlName=\"businessProductName\" placeholder=\"Business Product Name\" />\r\n                  <!-- <mat-icon matSuffix>branding_watermark</mat-icon> -->\r\n                  <mat-error *ngIf=\"accountForm.get('businessProductName').hasError('required')\">\r\n                    Business Product Name is Required!\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n\r\n              <div class=\"pb-1\">\r\n                <mat-form-field class=\"full-width\" appearance=\"outline\">\r\n                  <mat-label>Product Description*</mat-label>\r\n                  <input matInput name=\"business\" placeholder=\"Product Description\" formControlName=\"productDescription\" />\r\n                  <!-- <mat-icon matSuffix>branding_watermark</mat-icon> -->\r\n                  <mat-error *ngIf=\"accountForm.get('productDescription').hasError('required')\">\r\n                    Product Description is Required!\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n\r\n              \r\n              <div class=\"pb-1\">\r\n                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                  <mat-label>Application Date*</mat-label>\r\n                  <input matInput name=\"date\" readonly formControlName=\"applicationDate\" placeholder=\"Application Date\"\r\n                    [matDatepicker]=\"appDatepicker\" [min]=\"minDate\" [max]=\"maxDate\" />\r\n\r\n                  <mat-datepicker-toggle matSuffix [for]=\"appDatepicker\"></mat-datepicker-toggle>\r\n                  <mat-error *ngIf=\"accountForm.get('applicationDate').hasError('required')\">\r\n                    Application Date is Required!\r\n                  </mat-error>\r\n                </mat-form-field>\r\n                <mat-datepicker #appDatepicker></mat-datepicker>\r\n              </div>\r\n              <div fxLayout=\"row\" fxLayoutAlign=\"space-between\" fxLayoutGap=\"16px\">\r\n                <div class=\"pb-1\">\r\n                  <label>Overdraft Requested?</label>\r\n                  <div class=\"ml-12\"></div>\r\n                  <mat-slide-toggle formControlName=\"overDraftRequested\"></mat-slide-toggle>\r\n                </div>\r\n              </div>\r\n    \r\n              \r\n\r\n\r\n                <!-- <div class=\"pb-1\">\r\n                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                  <mat-label>Application Date*</mat-label>\r\n                  <input matInput name=\"date\" readonly formControlName=\"applicationDate\" placeholder=\"Application Date\"\r\n                    [matDatepicker]=\"appDatepicker\" [min]=\"minDate\" [max]=\"maxDate\" />\r\n\r\n                  <mat-datepicker-toggle matSuffix [for]=\"appDatepicker\"></mat-datepicker-toggle>\r\n                  <mat-error *ngIf=\"accountForm.get('applicationDate').hasError('required')\">\r\n                    Application Date is Required!\r\n                  </mat-error>\r\n                </mat-form-field>\r\n                <mat-datepicker #appDatepicker></mat-datepicker>\r\n              </div> -->\r\n\r\n              <!-- <div class=\"pb-1\" *ngIf=\"disableFundTheAccount\">\r\n                <mat-form-field appearance=\"outline\" class=\"full-width\" >\r\n                  <mat-label>Fund the Account*</mat-label>\r\n                  <input  (keypress)=_keyPress($event)  name=\"account\" formControlName=\"fundTheAccount\" required matInput \r\n                    placeholder=\"Fund the Account\">\r\n                  <mat-error *ngIf=\"accountForm.get('fundTheAccount').hasError('required')\">\r\n                    Fund the Account is Required! \r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </div> -->\r\n\r\n              <!-- <div class=\"pb-1\">\r\n                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                  <mat-label>Amount*</mat-label>\r\n                  <input (keypress)=_keyPress($event) name=\"amount\" formControlName=\"amount\" matInput placeholder=\"Amount\" />\r\n                  <mat-icon matSuffix>account_balance_wallet</mat-icon>\r\n                  <mat-error *ngIf=\"accountForm.get('amount').hasError('required')\">\r\n                    Amount is Required!\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </div> -->\r\n            </div>\r\n          </div>\r\n\r\n        </form>\r\n      </mat-card-content>\r\n    </mat-card>\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\" fxLayoutGap=\"16px\" class=\"mt-32\">\r\n\r\n      <button mat-button class=\"Backbtn\" (click)=\"goBack()\">\r\n        Back\r\n      </button>\r\n      <button mat-raised-button color=\"primary\" class=\"Nextbtn\" [disabled]=\"!accountForm.get('amount').valid || !accountForm.get('cifNumber').valid || !accountForm.get('accountType').valid || !accountForm.get('businessProductName').valid || !accountForm.get('productImage').valid || !accountForm.get('accountBranch').valid || !accountForm.get('productDescription').valid ||\r\n      !accountForm.get('accountCurrency').valid || !accountForm.get('applicationDate').valid || !accountForm.get('fundTheAccount').valid || !accountForm.get('fundBy').valid || !accountForm.get('overDraftRequested').valid || !accountForm.get('swiftCodeEnable').valid || !accountForm.get('status').valid || nextbtn\"  (click)=\"onSubmit()\">\r\n        Next\r\n      </button>\r\n      <!-- [disabled]=\"accountForm.invalid\"  || isCifValid  -->\r\n    </div>\r\n\r\n  </div>\r\n</div>\r\n</div>\r\n\r\n\r\n","import { ChangeDetectorRef, Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { DialogService } from 'app/shared/services/dialogs/dialog.service';\r\nimport { rumangoAnimations } from 'app/shared/animations/rumango-animations';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { AccountService } from '../account.service';\r\nimport 'rxjs/add/operator/filter';\r\n\r\n@Component({\r\n  selector: 'app-application-entry-stage',\r\n  templateUrl: './application-entry-stage.component.html',\r\n  styleUrls: ['./application-entry-stage.component.scss'],\r\n  animations: rumangoAnimations\r\n})\r\nexport class ApplicationEntryStageComponent implements OnInit {\r\n\r\n  accountId: any;\r\n  isAppEntryStageDone: boolean = false;\r\n  isAccountDetailsScreen: boolean = false;\r\n  isAccountOpenScreen: boolean = false;\r\n  isAccountServiceScreen: boolean = false;\r\n  isAccountMandateScreen: boolean = false;\r\n  isAccountNomineesScreen: boolean = false;\r\n  accountInfo: any;\r\n  constructor(private router: Router,private dialogService : DialogService,private route: ActivatedRoute,private ls: LocalStoreService,private cdr:ChangeDetectorRef ,private accountService:AccountService) { }\r\n\r\n\r\n  ngOnInit() {\r\n    this.accountId = this.ls.getItem('accountId');\r\n    this.isAppEntryStageDone = this.ls.getItem('appEntryStage');\r\n    this.accountInfo = this.ls.getItem('EDIT-CREATEACCCIF');\r\n    console.log(this.accountInfo,\"AccountInfo\");\r\n    // if(this.accountInfo){\r\n    //   // this.isAppEntryStageDone = this.ls.getItem('appEntryStage');\r\n    //   this.ls.setItem('appEntryStage',true);\r\n    //   this.ls.setItem('ACC_OPEN_DONE', true);\r\n    //   this.ls.setItem('ACC_DONE', true);\r\n    //   this.ls.setItem('ACC_MANDATE_DONE', true);\r\n    //   this.ls.setItem('ACC_SERVICE_DONE', true);\r\n    //   this.ls.setItem('ACC_NOMINEE_DONE', true);\r\n    // }\r\n\r\n    this.route.queryParams\r\n      .filter(params => params.account)\r\n      .subscribe(params => {\r\n        console.log(params); // { order: \"popular\" }\r\n      }\r\n    );\r\n\r\n    // Parent 1 childs nav\r\n    this.isAccountDetailsScreen = this.ls.getItem('ACC_DONE');\r\n    this.isAccountOpenScreen = this.ls.getItem('ACC_OPEN_DONE');\r\n    this.isAccountServiceScreen = this.ls.getItem('ACC_SERVICE_DONE');\r\n    this.isAccountMandateScreen = this.ls.getItem('ACC_MANDATE_DONE');\r\n    this.isAccountNomineesScreen = this.ls.getItem('ACC_NOMINEE_DONE');\r\n    console.log(this.accountId);\r\n\r\n    this.accountService.refresh.subscribe((res: any) => {\r\n      this.accountId = this.ls.getItem('accountId');\r\n      // Parent 1\r\n      this.isAppEntryStageDone = this.ls.getItem('appEntryStage');\r\n      // Parent 1 childs nav\r\n      this.isAccountDetailsScreen = this.ls.getItem('ACC_DONE');\r\n      this.isAccountOpenScreen = this.ls.getItem('ACC_OPEN_DONE');\r\n      this.isAccountServiceScreen = this.ls.getItem('ACC_SERVICE_DONE');\r\n      this.isAccountMandateScreen = this.ls.getItem('ACC_MANDATE_DONE');\r\n      this.isAccountNomineesScreen = this.ls.getItem('ACC_NOMINEE_DONE');\r\n    \r\n      this.cdr.markForCheck();\r\n    });\r\n\r\n    console.log(\"Check??\",this.isAccountServiceScreen, this.isAccountNomineesScreen);\r\n    if(this.accountInfo){\r\n      this.accountId=this.accountInfo.businessProductAccount.accountId;\r\n    }\r\n  }\r\n  goToDetail(item){\r\n    console.log(item);\r\n    if(item.status == ''){\r\n      this.router.navigate([`/home/${item.state}`]);\r\n    }\r\n    else{\r\n      if(item.title == '1. Account Details'){\r\n        this.dialogService.accountDetailsSummaryDialog();\r\n      }\r\n      else if(item.title == '2. Customer Information Details'){\r\n        this.dialogService.customerInformationDetailsSummaryDialog();\r\n      }\r\n    }\r\n  }\r\n\r\n  goToAccountDetails(){\r\n    this.dialogService.accountDetailsSummaryDialog();\r\n  }\r\n  \r\n  goToAccont(){\r\n    this.dialogService.accountserviceDialog();\r\n  }\r\n  gotoMandate(){\r\n    this.dialogService.mandateDialog();\r\n  }\r\n  gotoNominee(){\r\n    this.dialogService.nomineeDialog();\r\n  }\r\n\r\n  goToCustomerInformation(){\r\n    this.dialogService.customerInformationDetailsSummaryDialog();\r\n  }\r\n  gotocustDetails(){\r\n    this.dialogService.customerInformationDetailsSummaryDialog();\r\n  }\r\n  gotoApplicationEntrySummary(){\r\n    this.router.navigate([`/home/application/application-entry-summary`, this.accountId]);\r\n  }\r\n\r\n}\r\n","<!-- <mat-card class=\"matcard-size\" style=\"margin-top: -30px\"> -->\r\n<div fxLayout=\"row wrap\">\r\n  <div fxFlex=\"100\">\r\n    <!-- <div class=\"propic text-center\">\r\n      <img src=\"assets/images/face-7.png\" alt=\"\" class=\"w-80\" />\r\n    </div> -->\r\n    <div class=\"profile-pic text-center\">\r\n      <img src=\"assets/images/face-7.png\" class=\"main-profile-img\" />\r\n\r\n      <!-- <i class=\"fa fa-edit upload-icon\"></i> -->\r\n      \r\n    </div>\r\n    <div class=\"profile-title text-center mt-8\">\r\n      <div class=\"main-title1\"><b>Create New Customer Account</b></div>\r\n      <div class=\"text-muted1\">\r\n        Create a new customer account with XYZ Bank in a better way.\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div fxFlex=\"100\" *ngIf=\"isAppEntryStageDone\" class=\"mt-8\">\r\n    <mat-card class=\"border-size\"\r\n      [@animate]=\"{ value: '*', params: { y: '50px', delay: '300ms' } }\"\r\n    >\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n        <div fxFlex=\"5\">\r\n          <mat-icon class=\"text-green\">check_circle</mat-icon>\r\n        </div>\r\n        <div fxFlex=\"30\">\r\n          <h3>Application Entry Stage Completed</h3>\r\n        </div>\r\n        <span fxFlex></span>\r\n        <button\r\n          mat-button\r\n          color=\"primary\"\r\n          class=\"btn-color\"\r\n          (click)=\"gotoApplicationEntrySummary()\"\r\n        >\r\n          View Summary\r\n          <mat-icon>chevron_right</mat-icon>\r\n        </button>\r\n      </div>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n<div fxLayout=\"row wrap\" class=\"mt-12\">\r\n  <div fxFlex=\"50\" fxFlex.gt-sm=\"50\" fxFlex.sm=\"50\">\r\n    <!-- [ngClass]=\"{'not-active':item.status == ''}\" -->\r\n    <!-- Card 1 start-->\r\n    <mat-card [ngClass]=\"{'border-size':isAccountDetailsScreen || !isAccountDetailsScreen}\" >\r\n      <mat-card-header>\r\n        <mat-card-title style=\"font-size: 16px\">1. Account Details</mat-card-title>\r\n        <!-- <mat-card-subtitle> {{ item?.content }}</mat-card-subtitle> -->\r\n      </mat-card-header>\r\n      <mat-card-content>\r\n        <div\r\n          fxLayout=\"row\"\r\n          fxLayoutGap=\"10px\"\r\n          fxLayoutAlign=\"space-between start\"\r\n          class=\"textSize\"\r\n        >\r\n          <div fxFlex=\"50%\" class=\"notActive\">\r\n            <p class=\"text-align\">\r\n              Details such as Branch name,account number.\r\n            </p>\r\n          </div>\r\n          <div fxFlex=\"50%\">\r\n            <img [src]=\"'assets/images/svg/Group 673.svg'\" class=\"card-img\" />\r\n          </div>\r\n        </div>\r\n        <!--begin::Progress-->\r\n        <div class=\"mb-1\" *ngIf=\"isAccountDetailsScreen\">\r\n          <mat-progress-bar\r\n            mode=\"determinate\"\r\n            [value]=\"100\"\r\n            class=\"rounded\"\r\n            style=\"height: 6px\"\r\n          >\r\n          </mat-progress-bar>\r\n          <p class=\"m-0 text-right\">Completed</p>\r\n          <!-- <span class=\"text-muted\">| {{ item.percentage }}%</span> -->\r\n        </div>\r\n        <!--end::Progress-->\r\n      </mat-card-content>\r\n      <!--begin:: Card body-->\r\n      <mat-divider></mat-divider>\r\n      <mat-card-actions>\r\n        <a\r\n          *ngIf=\"!isAccountDetailsScreen \"\r\n          mat-button\r\n          [routerLink]=\"['/home/application/create-customer-account']\"\r\n          color=\"primary\"\r\n          class=\"add-align\"\r\n        >\r\n          Add Details <mat-icon>chevron_right</mat-icon>\r\n        </a>\r\n        <a\r\n          *ngIf=\"isAccountDetailsScreen\"\r\n          mat-button\r\n          (click)=\"goToAccountDetails()\"\r\n          color=\"primary\"\r\n          class=\"add-align\"\r\n        >\r\n          View Details <mat-icon>chevron_right</mat-icon>\r\n        </a>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n    <!-- Card 1 end -->\r\n  </div>\r\n  <div fxFlex=\"50\" fxFlex.gt-sm=\"50\" fxFlex.sm=\"50\">\r\n    <!-- card 2 start-->\r\n    <mat-card [ngClass]=\"{'border-size':isAccountDetailsScreen || !isAccountDetailsScreen && isAccountOpenScreen}\">\r\n      <mat-card-header>\r\n        <mat-card-title style=\"font-size: 16px\">2. Customer Information Details</mat-card-title>\r\n        <!-- <mat-card-subtitle> {{ item?.content }}</mat-card-subtitle> -->\r\n      </mat-card-header>\r\n      <mat-card-content>\r\n        <div\r\n          fxLayout=\"row\"\r\n          fxLayoutGap=\"10px\"\r\n          fxLayoutAlign=\"space-between start\"\r\n          class=\"textSize\"\r\n        >\r\n          <div fxFlex=\"50%\" class=\"notActive\">\r\n            <p class=\"text-align\">\r\n              All the primary information about the customers account is\r\n              captured\r\n            </p>\r\n          </div>\r\n          <div fxFlex=\"50%\">\r\n            <img\r\n              [src]=\"\r\n                'assets/images/svg/undraw_personal_information_re_vw8a.svg'\r\n              \"\r\n              class=\"card-img\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <!--begin::Progress-->\r\n        <div class=\"mb-1\" *ngIf=\"isAccountOpenScreen\">\r\n          <mat-progress-bar\r\n            [color]=\"'primary'\"\r\n            mode=\"determinate\"\r\n            [value]=\"100\"\r\n            class=\"rounded\"\r\n            style=\"height: 6px\"\r\n          >\r\n          </mat-progress-bar>\r\n          <p class=\"m-0 text-right\">Completed</p>\r\n          <!-- <span class=\"text-muted\">| {{ item.percentage }}%</span> -->\r\n        </div>\r\n        <!--end::Progress-->\r\n      </mat-card-content>\r\n      <!--begin:: Card body-->\r\n      <mat-divider></mat-divider>\r\n      <mat-card-actions>\r\n        <ng-container *ngIf=\"isAccountDetailsScreen && isAccountOpenScreen; else showCustomer\">\r\n          <button\r\n          mat-button\r\n          (click)=\"goToCustomerInformation()\"\r\n          [disabled]=\"accountId == null\"\r\n          color=\"primary\"\r\n          class=\"add-align\"\r\n        >\r\n          View Details <mat-icon>chevron_right</mat-icon>\r\n        </button>\r\n        </ng-container>\r\n        <ng-template #showCustomer>\r\n          <button\r\n          mat-button\r\n          [routerLink]=\"['/home/application/customer-information/', accountId]\"\r\n          [disabled]=\"!isAccountDetailsScreen\"\r\n          color=\"primary\"\r\n          class=\"add-align\"\r\n        >\r\n          Add Details <mat-icon>chevron_right</mat-icon>\r\n        </button>\r\n        </ng-template>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n    <!-- Card 2 end-->\r\n  </div>\r\n  <!-- card 3 start -->\r\n  <div fxFlex=\"50\" fxFlex.gt-sm=\"50\" fxFlex.sm=\"50\">\r\n    <mat-card [ngClass]=\"{'border-size':isAccountOpenScreen || !isAccountOpenScreen && isAccountMandateScreen}\">\r\n      <mat-card-header>\r\n        <mat-card-title style=\"font-size: 16px\">3. Mandate Details</mat-card-title>\r\n        <!-- <mat-card-subtitle> {{ item?.content }}</mat-card-subtitle> -->\r\n      </mat-card-header>\r\n      <mat-card-content>\r\n        <div\r\n          fxLayout=\"row\"\r\n          fxLayoutGap=\"10px\"\r\n          fxLayoutAlign=\"space-between start\"\r\n          class=\"textSize\"\r\n        >\r\n          <div fxFlex=\"50%\" class=\"notActive\">\r\n            <p class=\"text-align\">Mode of operation, Signatory details of the customer is added</p>\r\n          </div>\r\n          <div fxFlex=\"50%\">\r\n            <img\r\n              [src]=\"'assets/images/svg/undraw_Terms_re_6ak_4.svg'\"\r\n              class=\"card-img\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <!--begin::Progress-->\r\n        <div class=\"mb-1\" *ngIf=\"isAccountMandateScreen\">\r\n          <mat-progress-bar\r\n            [color]=\"'primary'\"\r\n            mode=\"determinate\"\r\n            [value]=\"100\"\r\n            class=\"rounded\"\r\n            style=\"height: 6px\"\r\n          >\r\n          </mat-progress-bar>\r\n          <p class=\"m-0 text-right\">Completed</p>\r\n          <!-- <span class=\"text-muted\">| {{ item.percentage }}%</span> -->\r\n        </div>\r\n        <!--end::Progress-->\r\n      </mat-card-content>\r\n      <!--begin:: Card body-->\r\n      <mat-divider></mat-divider>\r\n      <mat-card-actions>\r\n        <ng-container *ngIf=\"isAccountOpenScreen && isAccountMandateScreen; else showMandate\">\r\n          <button\r\n          mat-button\r\n          (click)=\"gotoMandate()\"\r\n          color=\"primary\"\r\n          [disabled]=\"accountId == null\"\r\n          class=\"add-align\"\r\n        >\r\n          View Details <mat-icon>chevron_right</mat-icon>\r\n        </button>\r\n        </ng-container>\r\n        <ng-template #showMandate>\r\n          <button\r\n          mat-button\r\n          [routerLink]=\"['/home/application/mandate/', accountId]\"\r\n          color=\"primary\"\r\n          [disabled]=\"!isAccountOpenScreen\"\r\n          class=\"add-align\"\r\n          >\r\n          Add Details<mat-icon>chevron_right</mat-icon>\r\n          </button>\r\n        </ng-template>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n  <!-- Card 3 end -->\r\n  <!-- card 4 start -->\r\n  <div fxFlex=\"50\" fxFlex.gt-sm=\"50\" fxFlex.sm=\"50\">\r\n    <mat-card [ngClass]=\"{'border-size':isAccountMandateScreen || !isAccountMandateScreen && isAccountServiceScreen}\">\r\n      <mat-card-header>\r\n        <mat-card-title style=\"font-size: 16px\">4. Account Service</mat-card-title>\r\n        <!-- <mat-card-subtitle> {{ item?.content }}</mat-card-subtitle> -->\r\n      </mat-card-header>\r\n      <mat-card-content>\r\n        <div\r\n          fxLayout=\"row\"\r\n          fxLayoutGap=\"10px\"\r\n          fxLayoutAlign=\"space-between start\"\r\n          class=\"textSize\"\r\n        >\r\n          <div fxFlex=\"50%\" class=\"notActive\">\r\n            <p class=\"text-align\">\r\n              Information on the customers Account Statement, Passbook, Cheque\r\n              Books are added.\r\n            </p>\r\n          </div>\r\n          <div fxFlex=\"50%\">\r\n            <img\r\n              [src]=\"'assets/images/svg/undraw_opinion_dxp8.svg'\"\r\n              class=\"card-img\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <!--begin::Progress-->\r\n        <div class=\"mb-1\" *ngIf=\"isAccountServiceScreen\">\r\n          <mat-progress-bar\r\n            [color]=\"'primary'\"\r\n            mode=\"determinate\"\r\n            [value]=\"100\"\r\n            class=\"rounded\"\r\n            style=\"height: 6px\"\r\n          >\r\n          </mat-progress-bar>\r\n          <p class=\"m-0 text-right\">Completed</p>\r\n          <!-- <span class=\"text-muted\">| {{ item.percentage }}%</span> -->\r\n        </div>\r\n        <!--end::Progress-->\r\n      </mat-card-content>\r\n      <!--begin:: Card body-->\r\n      <mat-divider></mat-divider>\r\n      <mat-card-actions>\r\n        <ng-container *ngIf=\"isAccountMandateScreen && isAccountServiceScreen; else showAccount\">\r\n          <button\r\n          mat-button\r\n          (click)=\"goToAccont()\"\r\n          color=\"primary\"\r\n          [disabled]=\"accountId == null\"\r\n          class=\"add-align\"\r\n        >\r\n          View Details <mat-icon>chevron_right</mat-icon>\r\n        </button>\r\n        </ng-container>\r\n        <ng-template #showAccount>\r\n          <button\r\n          mat-button\r\n          [routerLink]=\"['/home/application/account-service/', accountId]\"\r\n          color=\"primary\"\r\n          [disabled]=\"!isAccountMandateScreen\"\r\n          class=\"add-align\"\r\n        >\r\n          Add Details<mat-icon>chevron_right</mat-icon>\r\n        </button>\r\n        </ng-template>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n  <!-- card 4 end -->\r\n  <!-- card -5 start -->\r\n  <div fxFlex=\"50\" fxFlex.gt-sm=\"50\" fxFlex.sm=\"50\">\r\n    <mat-card [ngClass]=\"{'border-size':isAccountServiceScreen || !isAccountServiceScreen && isAccountNomineesScreen}\">\r\n      <mat-card-header>\r\n        <mat-card-title style=\"font-size: 16px\">5. Nominee Details</mat-card-title>\r\n        <!-- <mat-card-subtitle> {{ item?.content }}</mat-card-subtitle> -->\r\n      </mat-card-header>\r\n      <mat-card-content>\r\n        <div\r\n          fxLayout=\"row\"\r\n          fxLayoutGap=\"10px\"\r\n          fxLayoutAlign=\"space-between start\"\r\n          class=\"textSize\"\r\n        >\r\n          <div fxFlex=\"50%\" class=\"notActive\">\r\n            <p class=\"text-align\">\r\n              Details such as name, relation address of the nominee is added.\r\n            </p>\r\n          </div>\r\n          <div fxFlex=\"50%\">\r\n            <img [src]=\"'assets/images/svg/Group 47.svg'\" class=\"card-img\" />\r\n          </div>\r\n        </div>\r\n        <!--begin::Progress-->\r\n        <div class=\"mb-1\" *ngIf=\"isAccountNomineesScreen\">\r\n          <mat-progress-bar\r\n            [color]=\"'primary'\"\r\n            mode=\"determinate\"\r\n            [value]=\"100\"\r\n            class=\"rounded\"\r\n            style=\"height: 6px\"\r\n          >\r\n          </mat-progress-bar>\r\n          <p class=\"m-0 text-right\">Completed</p>\r\n          <!-- <span class=\"text-muted\">| {{ item.percentage }}%</span> -->\r\n        </div>\r\n        <!--end::Progress-->\r\n      </mat-card-content>\r\n      <!--begin:: Card body-->\r\n      <mat-divider></mat-divider>\r\n      <mat-card-actions>\r\n        <ng-container\r\n          *ngIf=\"isAccountServiceScreen && isAccountNomineesScreen; else showNominee\">\r\n          <button\r\n            mat-button\r\n            (click)=\"gotoNominee()\"\r\n            color=\"primary\"\r\n            [disabled]=\"accountId == null\"\r\n            class=\"add-align\"\r\n          >\r\n            View Details <mat-icon>chevron_right</mat-icon>\r\n          </button>\r\n        </ng-container>\r\n        <ng-template #showNominee>\r\n          <button\r\n            mat-button\r\n            [routerLink]=\"['/home/application/nominee/add/', accountId]\"\r\n            color=\"primary\"\r\n            [disabled]=\"!isAccountServiceScreen\"\r\n            class=\"add-align\"\r\n          >\r\n            Add Details <mat-icon>chevron_right</mat-icon>\r\n          </button>\r\n        </ng-template>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n  <!-- card 5 end -->\r\n</div>\r\n<!-- </mat-card> -->","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { DataService } from 'app/shared/services/data.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { Subscription } from 'rxjs';\r\nimport { AccountService } from '../../account.service';\r\nimport { UrlService } from '../../url.service';\r\n\r\n@Component({\r\n  selector: 'app-report',\r\n  templateUrl: './report.component.html',\r\n  styleUrls: ['./report.component.scss']\r\n})\r\nexport class ReportComponent implements OnInit {\r\n  reportForm: FormGroup;\r\n  accountId: any;\r\n  navSubscription: Subscription;\r\n  routeparams: any = [];\r\n  previousUrl: string = '';\r\n  showEditOption: boolean = false;\r\n  minDate = new Date();\r\n  accountInfo: any;\r\n\r\n  constructor(private router: Router, private urlService:UrlService, private api: ApiService,  private dataService: DataService,\r\n    private snack: MatSnackBar, private fb: FormBuilder, private ls: LocalStoreService, private accountService: AccountService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.accountId = this.ls.getItem('accountId');\r\n    this.accountInfo = this.ls.getItem('EDIT-CREATEACCCIF');\r\n    if(this.accountInfo){\r\n      this.accountId=this.accountInfo.businessProductAccount.accountId\r\n    }\r\n    let isReportScreen: boolean = JSON.parse(this.ls.getItem('ASSESSMENT_REPORT_DONE'));\r\n   \r\n    this.urlService.previousUrl$\r\n    .subscribe((previousUrl: string) => {\r\n        this.previousUrl = previousUrl\r\n    });\r\n    setTimeout(() => {\r\n      if (this.accountId != null && isReportScreen) {\r\n        this.showEditOption = true;\r\n        this.getAllData();\r\n      } else {\r\n        this.showEditOption = false;\r\n        this.buildReportForm();\r\n      }\r\n    }, 1);\r\n  \r\n\r\n  }\r\n\r\n\r\n  buildReportForm(data?){\r\n    this.reportForm = this.fb.group({\r\n      customerId: [this.accountId != null ? this.accountId : ''],\r\n      limitId: [data ? data.limitId : '', [Validators.required]],\r\n      overdraftLimitAmount: [data ? data.overdraftLimitAmount : '', [Validators.required]],\r\n      recommendedOverdraftLimit: [data ? data.recommendedOverdraftLimit : '', [Validators.required]],\r\n      limitStartDate: [data? data.limitStartDate : '', [Validators.required]],\r\n      limitEndDate: [data ? data.limitEndDate : '', [Validators.required]],\r\n      accountId:[this.accountId != null ? this.accountId : '']\r\n    });\r\n  }\r\n\r\n  getReportData(){\r\n    this.api.getAssessmentReportDetails(this.accountId)\r\n      .subscribe((response:any) => {\r\n       console.log(response);\r\n       this.reportForm.patchValue(response);\r\n    });\r\n  }\r\n\r\n\r\n  goBack() {\r\n    this.router.navigate([`${this.previousUrl}`]);\r\n  }\r\n\r\n  saveReports(form) {\r\n    this.api.saveAssessmentReports(form).subscribe((resp) => {\r\n      if(resp){\r\n        this.snack.open('Assessment Report Saved!', 'OK', {\r\n          duration: 4000,\r\n          verticalPosition: 'top',\r\n          horizontalPosition: 'right'\r\n        });\r\n        this.ls.setItem('assessmentStage', true);\r\n        this.ls.setItem('ASSESSMENT_REPORT_DONE', true);\r\n        this.accountService.refresh.next();\r\n        let fundBy = this.ls.getItem('fundByStatus');\r\n        console.log(\"fund\",fundBy);\r\n        // if(fundBy == true){\r\n          if(fundBy.isActive == true){\r\n        this.router.navigate([`/home/application/funding/list/${this.accountId}`]);\r\n        }\r\n        else{\r\n          this.router.navigate([`/home/application/approval/list/${this.accountId}`]);\r\n        }\r\n      }\r\n      else{\r\n        this.ls.setItem('ASSESSMENT_REPORT_DONE', false);\r\n      }\r\n    }, err => {\r\n      this.snack.open('Server Error!', 'OK', {\r\n        duration: 4000,\r\n        verticalPosition: 'top',\r\n        horizontalPosition: 'right'\r\n      });\r\n    });\r\n  }\r\n\r\n  done() {}\r\n\r\n  getAllData(){\r\n    this.api.getAssessmentReportDetails(this.accountId)\r\n    .subscribe((response:any) => {\r\n     this.buildReportForm(response);\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.dataService.sendNavParam([]);\r\n  }\r\n\r\n  _keyPress(event: any) {\r\n    const pattern = /[0-9]/;\r\n    let inputChar = String.fromCharCode(event.charCode);\r\n    if (!pattern.test(inputChar)) {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n  numberOnly(event): boolean {\r\n    const charCode = (event.which) ? event.which : event.keyCode;\r\n    if (charCode > 31 && (charCode < 48 || charCode > 57)) {\r\n      return false;\r\n    }\r\n    return true;\r\n\r\n  }\r\n}\r\n","<div class=\"matcard-size\">\r\n<div fxLayout=\"row wrap\">\r\n\r\n    <div fxFlex=\"100\">\r\n      <div class=\"propic text-center\">\r\n        <img\r\n          src=\"assets/images/svg/undraw_report_mx0a.svg\"\r\n          alt=\"\"\r\n          class=\"w-90\"\r\n        />\r\n      </div>\r\n      <div class=\"profile-title text-center mt-8\">\r\n        <div class=\"f-28\"><b>Assessment Report</b></div>\r\n      </div>\r\n    </div>\r\n    <div fxFlex=\"100\" class=\"mt-24\">\r\n      <div class=\"mt-24\"></div>\r\n      <form *ngIf=\"reportForm\" [formGroup]=\"reportForm\">\r\n      <mat-card class=\"p-0\">\r\n        <mat-card-title>\r\n        <fieldset>\r\n        <legend visible=\"true\">Assessment Report</legend>\r\n        </fieldset>\r\n        </mat-card-title>\r\n          <mat-card-content>\r\n            <div fxLayout=\"row\" fxLayoutGap=\"25px\">\r\n              \r\n                <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-1\">\r\n                  <div class=\"pb-1\">\r\n                    <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                      <mat-label>Limit ID</mat-label>\r\n                      <!-- <mat-select\r\n                      name=\"limitId\"  \r\n                      formControlName=\"limitId\"\r\n                      required\r\n                      #limitId\r\n                      >\r\n                        <mat-option value=\"Savings\">Savings</mat-option>\r\n                        <mat-option value=\"Current\">Current</mat-option>\r\n                      </mat-select> -->\r\n                      <input matInput name=\"limitId\"  \r\n                      formControlName=\"limitId\"\r\n                      required\r\n                      maxlength=\"19\"\r\n                      #limitId onlyNumber (keypress)=\"numberOnly($event)\"\r\n>\r\n                      <mat-hint class=\"errorColor\" *ngIf=\"reportForm.get('limitId').touched && !reportForm.get('limitId').valid\">\r\n                        <div *ngIf=\"reportForm.get('limitId').errors.required\">Enter Limit ID </div>\r\n                      </mat-hint>\r\n                    </mat-form-field>\r\n                  </div>\r\n    \r\n                  <div class=\"pb-1\">\r\n                    <mat-form-field appearance=\"outline\" class=\"full-width\"  >\r\n                      <mat-label>Limit Start Date</mat-label>\r\n                      <input formControlName=\"limitStartDate\"\r\n                        matInput\r\n                        name=\"date\"\r\n                        readonly\r\n                        placeholder=\"Application Date\"\r\n                        [matDatepicker]=\"appDatepicker\"\r\n                        [min]=\"minDate\"\r\n                        required\r\n                        #limitStartDate\r\n                      />\r\n                      <mat-datepicker-toggle\r\n                        matSuffix\r\n                        [for]=\"appDatepicker\"\r\n                      ></mat-datepicker-toggle>\r\n                      <mat-hint class=\"errorColor\" *ngIf=\"reportForm.get('limitStartDate').touched && !reportForm.get('limitStartDate').valid\">\r\n                        <div *ngIf=\"reportForm.get('limitStartDate').errors.required\">Please select the date</div>\r\n                        <div *ngIf=\"reportForm.get('limitStartDate').errors.matDatepickerParse\">Invalid date</div>\r\n                      </mat-hint>\r\n                    </mat-form-field>\r\n                    <mat-datepicker #appDatepicker></mat-datepicker>\r\n                  </div>\r\n    \r\n                  <div class=\"pb-1\">\r\n                    <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                      <mat-label>Recommended Overdraft Limit</mat-label>\r\n                      <input \r\n                      formControlName=\"recommendedOverdraftLimit\" \r\n                      matInput name=\"recommendedOverdraftLimit\"\r\n                      placeholder=\"Recommended Overdraft Limit\" \r\n                      #recommendedOverdraftLimit\r\n                      maxlength=\"10\"\r\n                      minlength=\"2\"\r\n                      pattern=\"^[+]?([0-9]+(?:[\\.][0-9]*)?|\\.[0-9]+)$\" \r\n                      (keypress)=\"numberOnly($event)\"\r\n                      required />\r\n                      <mat-hint class=\"errorColor\" *ngIf=\"reportForm.get('recommendedOverdraftLimit').touched && !reportForm.get('recommendedOverdraftLimit').valid\">\r\n                        <div *ngIf=\"reportForm.get('recommendedOverdraftLimit').errors.required\">This field is required</div>\r\n                        <div *ngIf=\"reportForm.get('recommendedOverdraftLimit').errors.minlength\">Enter atleast {{reportForm.get('recommendedOverdraftLimit').errors.minlength.requiredLength}} digits</div>\r\n                        <div *ngIf=\"reportForm.get('recommendedOverdraftLimit').errors.pattern\">This is a numeric field</div>\r\n                      </mat-hint>\r\n                    </mat-form-field>\r\n                  </div>\r\n    \r\n            \r\n                </div>\r\n    \r\n                <div fxFlex=\"100\" fxFlex.gt-xs=\"50\">\r\n                  <div class=\"pb-1\">\r\n                    <mat-form-field class=\"full-width\" appearance=\"outline\" >\r\n                      <mat-label>Overdraft Limit Amount</mat-label>\r\n                      <input \r\n                      matInput \r\n                      name=\"overdraftLimitAmount\" \r\n                      formControlName=\"overdraftLimitAmount\" \r\n                      placeholder=\"Overdraft Limit Amount\"\r\n                      onlyNumber\r\n                      maxlength=\"10\"\r\n                      minlength=\"2\"\r\n                      #overdraftLimitAmount\r\n                      pattern=\"^[+]?([0-9]+(?:[\\.][0-9]*)?|\\.[0-9]+)$\"\r\n                      (keypress)=_keyPress($event) \r\n                      required  />\r\n                      <!-- <mat-icon matSuffix>branding_watermark</mat-icon> -->\r\n                      <mat-hint class=\"errorColor\" type=\"number\" *ngIf=\"reportForm.get('overdraftLimitAmount').touched && !reportForm.get('overdraftLimitAmount').valid\">\r\n                        <div *ngIf=\"reportForm.get('overdraftLimitAmount').errors.required\">This field is required</div>\r\n                        <div *ngIf=\"reportForm.get('overdraftLimitAmount').errors.minlength\">Enter atleast {{reportForm.get('overdraftLimitAmount').errors.minlength.requiredLength}} digits</div>\r\n                        <div *ngIf=\"reportForm.get('overdraftLimitAmount').errors.pattern\">This is a numeric field</div>\r\n                      </mat-hint>\r\n                    </mat-form-field>\r\n                  </div>\r\n    \r\n                  <div class=\"pb-1\">\r\n                    <mat-form-field appearance=\"outline\" class=\"full-width\" >\r\n                      <mat-label>Limit End Date</mat-label>\r\n                      <input\r\n                        matInput\r\n                        name=\"date\" \r\n                        readonly\r\n                        formControlName=\"limitEndDate\"\r\n                        [min]=\"reportForm.get('limitStartDate').value\"\r\n                        placeholder=\"Application Date\"\r\n                        [matDatepicker]=\"appDatepicker1\"\r\n                        #limitEndDate\r\n                        required\r\n                      />\r\n                      <mat-datepicker-toggle\r\n                        matSuffix\r\n                        [for]=\"appDatepicker1\"\r\n                      ></mat-datepicker-toggle>\r\n                      <mat-hint class=\"errorColor\" *ngIf=\"reportForm.get('limitEndDate').touched && !reportForm.get('limitEndDate').valid\">\r\n                        <div *ngIf=\"reportForm.get('limitEndDate').errors.required\">Please select the date</div>\r\n                        <div *ngIf=\"reportForm.get('limitEndDate').errors.matDatepickerParse\">Invalid date</div>\r\n                      </mat-hint>\r\n                    </mat-form-field>\r\n                    <mat-datepicker #appDatepicker1></mat-datepicker>\r\n                  </div>\r\n    \r\n        \r\n                  <div class=\"pb-1 mt-16\">\r\n                    <button class=\"changebtn\" mat-stroked-button color=\"primary\">Change</button>\r\n                  </div>\r\n                </div>\r\n            \r\n              </div>\r\n          </mat-card-content>\r\n      </mat-card>\r\n        </form>\r\n    </div>\r\n\r\n    <div fxFlex=\"100\" class=\"mt-16\">\r\n      <button mat-button class=\"Backbtn\" (click)=\"goBack()\">BACK</button>\r\n      <span fxFlex></span>\r\n      <button mat-raised-button class=\"Nextbtn\" color=\"primary\" [disabled]=\"reportForm.invalid\" type=\"button\"  \r\n      (click)=\"saveReports(reportForm.value)\">Next</button>\r\n    </div>\r\n  <!-- </form> -->\r\n  </div>\r\n  </div>\r\n","import { ChangeDetectorRef, Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { rumangoAnimations } from 'app/shared/animations/rumango-animations';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { AccountService } from '../account.service';\r\nimport { ViewApprovalDeatilsComponent } from './view-approval-deatils/view-approval-deatils.component';\r\nimport { MatDialog } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-approval-stage',\r\n  templateUrl: './approval-stage.component.html',\r\n  styleUrls: ['./approval-stage.component.scss'],\r\n  animations: rumangoAnimations\r\n})\r\nexport class ApprovalStageComponent implements OnInit {\r\n  informations = [\r\n    {\r\n      'id': 1,\r\n      'title': '1. Approval Details',\r\n      'content': \"Shows the Approval Details\",\r\n      'percentage': 70,\r\n      'status': 'Pending',\r\n      'state': 'application/approval/details',\r\n      'avatar': \"assets/images/svg/undraw_approve_qwp7.svg\"\r\n\r\n    }\r\n  ];\r\n\r\n\r\n  accountId: any;\r\n  isApprovalStageDone: boolean = false;\r\n  isApprovalDetailsScreen: boolean = false;\r\n  isInitialFundScreen:boolean = false;\r\n  accountInfo: any;\r\n\r\n  constructor(private router: Router,\r\n    private dialog: MatDialog, private ls: LocalStoreService, private cdr: ChangeDetectorRef, private accountService: AccountService) { }\r\n\r\n  ngOnInit() {\r\n    this.accountId = this.ls.getItem('accountId');\r\n    this.isApprovalStageDone = this.ls.getItem('approvalStage');\r\n    this.isApprovalDetailsScreen = this.ls.getItem('APPROVAL_DETAILS_DONE');\r\n    this.isInitialFundScreen = this.ls.getItem('FUNDING_INI_DONE');\r\n\r\n    this.accountService.refresh.subscribe((res: any) => {\r\n      this.accountId = this.ls.getItem('accountId');\r\n      // Parent 6\r\n      this.isApprovalStageDone = this.ls.getItem('approvalStage');\r\n      // Parent 6 childs nav\r\n      this.isApprovalDetailsScreen = this.ls.getItem('APPROVAL_DETAILS_DONE');\r\n      this.isInitialFundScreen = this.ls.getItem('FUNDING_INI_DONE');\r\n\r\n      this.cdr.markForCheck();\r\n    });\r\n    this.accountInfo = this.ls.getItem('EDIT-CREATEACCCIF');\r\n    console.log(this.accountInfo);\r\n    // if(this.accountInfo){\r\n    //   this.ls.setItem('approvalStage', true);\r\n    //   this.ls.setItem('APPROVAL_DETAILS_DONE', true);\r\n    //   this.ls.setItem('FUNDING_INI_DONE',true);\r\n    //   this.accountId=this.accountInfo.businessProductAccount.accountId;\r\n    // }\r\n  }\r\n\r\n  goToDetail() {\r\n    // console.log();\r\n    const dialogRef = this.dialog.open(ViewApprovalDeatilsComponent, {\r\n      width: '700px',\r\n      height:'437px'\r\n    });\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      console.log(`Dialog result: ${result}`);\r\n    });\r\n  }\r\n  \r\n  viewSummary() {\r\n    this.router.navigate([`/home/application/summary/approval/${this.accountId}`]);\r\n  }\r\n  // this.router.navigate([`/home/${item.state}`]);\r\n}\r\n\r\n\r\n","<div fxLayout=\"row wrap\" class=\"matcard-size\">\r\n    <div fxFlex=\"100\">\r\n      <!-- <div class=\"propic text-center\">\r\n          <img src=\"assets/images/face-7.png\" alt=\"\" class=\"w-80\" />\r\n        </div> -->\r\n      <div class=\"profile-pic text-center\">\r\n        <img src=\"assets/images/face-7.png\" class=\"main-profile-img\" />\r\n        <i class=\"fa fa-edit upload-icon\"></i>\r\n      </div>\r\n      <div class=\"profile-title text-center mt-8\">\r\n        <div class=\"main-title1\"><b>Create New Customer</b></div>\r\n        <div class=\"text-muted1\">\r\n          Create New Customer Account with bank XYZ bank in a better way.\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div fxFlex=\"100\" *ngIf=\"isApprovalStageDone && isApprovalDetailsScreen\" class=\"mt-8\">\r\n      <mat-card [@animate]=\"{ value: '*', params: { y: '50px', delay: '300ms' } }\">\r\n        <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n          <div fxFlex=\"5\"><mat-icon class=\"text-green\">check_circle</mat-icon></div>\r\n          <div fxFlex=\"30\">\r\n            <h3>Approval Stage Completed</h3>\r\n          </div>\r\n          <span fxFlex></span>\r\n          <button mat-button color=\"primary\" class=\"btn-color\" (click)=\"viewSummary()\">\r\n            View Summary\r\n            <mat-icon>chevron_right</mat-icon></button>\r\n        </div>\r\n      </mat-card>\r\n    </div>\r\n  </div>\r\n  <div fxLayout=\"row wrap\" class=\"mt-12\">\r\n    <div fxFlex=\"50\" fxFlex.gt-sm=\"50\" fxFlex.sm=\"50\">\r\n      <!-- Card 1 start-->\r\n      <mat-card>\r\n        <mat-card-header>\r\n          <mat-card-title>1. Approval Details</mat-card-title>\r\n        </mat-card-header>\r\n        <mat-card-content>\r\n          <div\r\n            fxLayout=\"row\"\r\n            fxLayoutGap=\"10px\"\r\n            fxLayoutAlign=\"space-between start\"\r\n          >\r\n            <div fxFlex=\"50%\" class=\"notActive\">\r\n              <p class=\"pl-18\">Shows the Approval Details</p>\r\n            </div>\r\n            <div fxFlex=\"50%\">\r\n              <img\r\n                [src]=\"'assets/images/svg/undraw_approve_qwp7.svg'\"\r\n                class=\"card-img\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <!--begin::Progress-->\r\n          <div class=\"mb-1\" *ngIf=\"isApprovalDetailsScreen\">\r\n            <mat-progress-bar\r\n              [color]=\"'primary'\"\r\n              mode=\"determinate\"\r\n              [value]=\"100\"\r\n              class=\"rounded\"\r\n              style=\"height: 6px\"\r\n            >\r\n            </mat-progress-bar>\r\n            <p class=\"m-0 text-right\">Completed</p>\r\n          </div>\r\n          <!--end::Progress-->\r\n        </mat-card-content>\r\n        <!--begin:: Card body-->\r\n        <mat-divider></mat-divider>\r\n\r\n        <mat-card-actions  class=\"pl-27\">\r\n          <button mat-button color=\"primary\" (click)=\"goToDetail()\" >\r\n\r\n              View Details\r\n            <mat-icon>chevron_right</mat-icon>\r\n          </button>\r\n        </mat-card-actions>\r\n      </mat-card>\r\n      <!-- Card 1 end -->\r\n    </div>\r\n  </div>\r\n","import { ChangeDetectorRef, Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl, FormArray, FormBuilder } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { DataService } from 'app/shared/services/data.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { AccountService } from '../../account.service';\r\nimport { flow } from 'lodash';\r\nimport { flatMap, filter } from 'lodash/fp';\r\nimport { UrlService } from '../../url.service';\r\n\r\n@Component({\r\n  selector: 'app-account-service',\r\n  templateUrl: './account-service.component.html',\r\n  styleUrls: ['./account-service.component.scss']\r\n})\r\nexport class AccountServiceComponent implements OnInit {\r\n  show: boolean = false;\r\n  selectedRow= false;\r\n  // selection = new SelectionModel<PeriodicElement>(true, []);\r\n  accountServiceForm: FormGroup;\r\n  statementList = [\r\n    {\r\n      \"id\": 1,\r\n      \"name\": \"EMAIL\",\r\n      \"checked\": false\r\n    },\r\n    {\r\n      \"id\": 2,\r\n      \"name\": \"POST\",\r\n      \"checked\": false\r\n    }\r\n  ];\r\n  bankList = [\r\n    {\r\n      \"id\": 1,\r\n      \"name\": \"Phone Banking\",\r\n      \"checked\": false\r\n    },\r\n    {\r\n      \"id\": 2,\r\n      \"name\": \"Kiosk Banking\",\r\n      \"checked\": false\r\n    },\r\n    {\r\n      \"id\": 3,\r\n      \"name\": \"Direct Banking\",\r\n      \"checked\": false\r\n    }\r\n  ];\r\n  communicationList = [\r\n    {\r\n      \"id\": 1,\r\n      \"name\": \"EMAIL\",\r\n      \"checked\": false\r\n    },\r\n    {\r\n      \"id\": 2,\r\n      \"name\": \"POST\",\r\n      \"checked\": false\r\n    },\r\n    {\r\n      \"id\": 3,\r\n      \"name\": \"SMS\",\r\n      \"checked\": false\r\n    }\r\n  ];\r\n  bankChannelPreferencesArray : any[] = [];\r\n  arrayCardType = [ \"Normal\",\"Silver\",\"Gold\",\"Diamond\",\"Platinum\" ];\r\n  arrayModeOfOperation = [\r\n    \"25000\",\r\n    \"50000\",\r\n    \"100000\",];\r\n  commChannelPreferencesArray : any[] = [];\r\n  AccStatementPreferenceArray : any[] = [];\r\n  accountId: any;\r\n  isNew: boolean;\r\n  navSubscription: any;\r\n  routeparams: any;\r\n  showEditOption: boolean = false;\r\n  dailyLimit: boolean = false;\r\n  domesticLimit: boolean = false;\r\n  // Normal:boolean=false;\r\n  // Silver:boolean=false;\r\n  previousUrl: string = '';\r\n  enableFinish: boolean=false;\r\n  statementFrncy: string;\r\n  bankChanlPref: string;\r\n  isDebitLimit:boolean=false;\r\n  accountInfo: any;\r\n  // Gold: boolean= false;\r\n  // Platinum:boolean=false;\r\n  // Diamond:boolean=false;\r\n  cardInfo: object;\r\n  \r\n  constructor(private router: Router, private urlService: UrlService, private dataService: DataService, private route: ActivatedRoute, private snack: MatSnackBar, private ls: LocalStoreService, private accountService: AccountService, private formBuilder: FormBuilder, private apiService: ApiService, private cdr:ChangeDetectorRef) { }\r\n\r\n  ngOnInit(): void {\r\n    this.cardInfo = JSON.parse(localStorage.getItem('cardInfo'));\r\n    this.accountId = this.ls.getItem('accountId');\r\n    this.accountInfo = this.ls.getItem('EDIT-CREATEACCCIF');\r\n    if(this.accountInfo){\r\n      this.accountId=this.accountInfo.businessProductAccount.accountId\r\n    }\r\n    let isAccountServiceDone:boolean = JSON.parse(this.ls.getItem('ACC_SERVICE_DONE'));\r\n\r\n    if(this.accountId != null && isAccountServiceDone){\r\n      console.log(\"editform is true\");\r\n      this.showEditOption = true;\r\n      this.gettingAccountService();\r\n      // call api service and build data with response\r\n    }else{\r\n      this.showEditOption = false;\r\n      this.buildServiceForm();\r\n      console.log(\"editform is false\");\r\n      // for(var i =0 ;i< this.bankList.length;i++){\r\n      \r\n      //   if(this.bankList[i].checked){\r\n      //     this.bankChannelPreferencesArray.push(this.bankList[i].name);\r\n      //   }\r\n      // }\r\n      this.accountServiceForm.controls['statementPref'].patchValue(this.statementList);\r\n      this.accountServiceForm.controls['commChannelPref'].patchValue(this.communicationList);\r\n      // build form without data for capturing\r\n    }\r\n  \r\n    console.log(\"showEditOption\", this.showEditOption);\r\n    this.urlService.previousUrl$\r\n    .subscribe((previousUrl: string) => {\r\n        this.previousUrl = previousUrl\r\n    });\r\n\r\n  }\r\n\r\n  gettingAccountService() {\r\n    this.apiService.gettingAccountServiceDetails(this.accountId)\r\n    .subscribe((resp: any) => {\r\n      console.log(\"All Account Service\", resp);\r\n      this.buildServiceForm(resp);\r\n      this.statementList = resp.statementPref;\r\n      this.communicationList = resp.commChannelPref;\r\n      this.bankList = resp.bankChannelPref;\r\n      if(resp.debitCardRequired){\r\n        this.isDebitLimit=true;\r\n      }\r\n      // console.log(\"showEditOption\", this.showEditOption);\r\n      this.cdr.markForCheck();\r\n      for(var i =0 ;i< this.bankList.length;i++){\r\n      \r\n        if(this.bankList[i].checked){\r\n          this.bankChannelPreferencesArray.push(this.bankList[i].name);\r\n        }\r\n      }\r\n\r\n      for(var i =0 ;i< this.communicationList.length;i++){\r\n      \r\n        if(this.communicationList[i].checked){\r\n          this.commChannelPreferencesArray.push(this.communicationList[i].name);\r\n        }\r\n      }\r\n      for(var i =0 ;i< this.statementList.length;i++){\r\n        if(this.statementList[i].checked){\r\n          this.AccStatementPreferenceArray.push(this.statementList[i].name);\r\n        }\r\n      }\r\n      \r\n      localStorage.setItem('statementFrequency', resp.statementFrequency);\r\n      this.enableFinish=true;\r\n      // localStorage.setItem('bankChannelPref', resp.bankChannelPref);\r\n    });\r\n  }\r\n  statementFrequency(e){\r\n    this.statementFrncy=localStorage.getItem('statementFrequency');\r\n    if(e!=this.statementFrncy){\r\n      this.enableFinish=true;\r\n    }\r\n  }\r\n  bankChannelPref(e){\r\n    this.bankChanlPref=localStorage.getItem('bankChannelPref');\r\n    if(e!=this.bankChanlPref){\r\n      this.enableFinish=true;\r\n    }\r\n  }\r\n\r\n  buildServiceForm(data?) {\r\n    this.accountServiceForm = this.formBuilder.group({\r\n      accServiceId: [data ? data.accServiceId : null],\r\n      productAccountId: [this.accountId != null ? this.accountId : null],\r\n      statementFrequency: [data ? data.statementFrequency : ''],\r\n      statementPref: [data ? this.flattenValues(data.statementPref) : ''],\r\n      bankChannelPref: [data ? data.bankChannelPref : ''],\r\n      commChannelPref: [data ? this.flattenValues(data.commChannelPref) : ''],\r\n      chequebookNeeded: [data ? data.chequebookNeeded : false],\r\n      debitcardNeeded: [data ? data.debitcardNeeded : false],\r\n      passbookNeeded: [data ? data.passbookNeeded : false],\r\n      cardType: [data ? data.cardType:''],\r\n      modeOfOperation:[data ? data.modeOfOperation :''],\r\n      debitCardRequired:[data ? data.debitCardRequired : false],\r\n      debitCardLimit:[data ? data.debitCardLimit : 0],\r\n      debitCardType:[data ? data.debitCardType:'']\r\n      \r\n    });\r\n  }\r\n  onToggle(event: any){\r\n     console.log(\"event\",event.checked);\r\n       if(event.checked==true){\r\n         this.isDebitLimit=true\r\n       }\r\n       else{\r\n         this.isDebitLimit=false;\r\n       }\r\n  }\r\n  limit(event: any){\r\n    console.log(event.value);\r\n    if(event.value==25000){\r\n      this.dailyLimit=true;\r\n      this.domesticLimit=false;\r\n    }else {\r\n      this.domesticLimit=true;\r\n      this.dailyLimit=false;\r\n    }\r\n  }\r\n  \r\n  cards(event: any){\r\n    console.log(event.value);\r\n    this.apiService.getCardType(event.value).subscribe(resp => {\r\n      console.log(resp);\r\n      this.cardInfo= resp;\r\n      localStorage.setItem('cardInfo', JSON.stringify(resp));\r\n    },error =>console.log(error));\r\n\r\n  //   if(event.value == \"Normal\"){\r\n  //     console.log(event.value);\r\n  //     this.Normal=true;\r\n  //     this.Silver=false;\r\n  //     this.Gold=false;\r\n  //     this.Diamond=false;\r\n  //     this.Platinum=false;\r\n  //   }\r\n  //   else if(event.value == \"Silver\") {\r\n  //     this.Silver=true;\r\n  //     this.Normal=false;\r\n  //     this.Gold=false;\r\n  //     this.Diamond=false;\r\n  //     this.Platinum=false;\r\n  //   }\r\n  //   else if(event.value == \"Gold\"){\r\n  //     this.Gold=true;\r\n  //     this.Silver=false;\r\n  //     this.Normal=false;\r\n  //     this.Diamond=false;\r\n  //     this.Platinum=false;\r\n\r\n  //   }\r\n  //   else if(event.value == \"Diamond\"){\r\n  //     this.Diamond=true;\r\n  //     this.Normal=false;\r\n  //     this.Silver=false;\r\n  //     this.Gold=false;\r\n  //     this.Platinum=false;\r\n  //   }\r\n  //   else if(event.value == \"Platinum\"){\r\n  //     this.Platinum=true;\r\n  //     this.Normal=false;\r\n  //     this.Silver=false;\r\n  //     this.Gold=false;\r\n  //     this.Diamond=false;\r\n  //   }\r\n  }\r\n  onChecklistChange(checked, checkbox) {\r\n    checkbox.checked = checked;\r\n    this.enableFinish=true;\r\n    const checklist = this.accountServiceForm.get('statementPref');\r\n    checklist.setValue(this.flattenValues(this.statementList));\r\n    if(checked){\r\n      this.AccStatementPreferenceArray.push(checkbox.name);\r\n    }\r\n    else{\r\n      this.AccStatementPreferenceArray.forEach( (item, index) => {\r\n        if(item === checkbox.name){\r\n          this.AccStatementPreferenceArray.splice(index,1);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  onCheckComChange(checked, checkbox) {\r\n    console.log(checked);\r\n    console.log(checkbox);\r\n    checkbox.checked = checked;\r\n    const checklist = this.accountServiceForm.get('commChannelPref');\r\n    checklist.setValue(this.flattenValues(this.communicationList));\r\n    if(checked){\r\n      this.commChannelPreferencesArray.push(checkbox.name);\r\n      console.log(\"checked\",checkbox.name);\r\n      this.enableFinish=true;\r\n    }\r\n    else{\r\n      this.commChannelPreferencesArray.forEach( (item, index) => {\r\n        if(item === checkbox.name){\r\n          this.commChannelPreferencesArray.splice(index,1);\r\n          console.log(\"checked\",checkbox.name);\r\n          this.enableFinish=true;\r\n        }\r\n      });\r\n    }\r\n  }\r\n  onCheckbankChange(checked, checkbox) {\r\n    console.log(checked);\r\n    console.log(checkbox);\r\n    checkbox.checked = checked;\r\n    const checklist = this.accountServiceForm.get('bankChannelPref');\r\n    checklist.setValue(this.flattenValues(this.bankList));\r\n    if(checked){\r\n      this.bankChannelPreferencesArray.push(checkbox.name);\r\n      console.log(\"checked\",checkbox.name);\r\n      this.enableFinish=true;\r\n    }\r\n    else{\r\n      this.bankChannelPreferencesArray.forEach( (item, index) => {\r\n        if(item === checkbox.name){\r\n          this.bankChannelPreferencesArray.splice(index,1);\r\n          console.log(\"checked\",checkbox.name);\r\n          this.enableFinish=true;\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  flattenValues(checkboxes) {\r\n    const flattenedValues = flow([\r\n      filter(checkbox => checkbox.checked),\r\n      flatMap(checkbox => checkbox.name)\r\n    ])(checkboxes);\r\n    return flattenedValues.join(',');\r\n  }\r\n\r\n  isObjectEmpty(value) {\r\n    return (\r\n      Object.prototype.toString.call(value) === '[object Object]' &&\r\n      JSON.stringify(value) === '{}'\r\n    );\r\n  }\r\n\r\n  togglePreference() {\r\n    this.show = !this.show;\r\n  }\r\n\r\n  goBack() {\r\n    // this.router.navigate([this.previousUrl]);\r\n    this.router.navigate([`home/application/mandate/${this.accountId}`]);\r\n  }\r\n\r\n  onSubmit() {\r\n  \r\n    let accountPayload = {\r\n      \"productAccountId\": this.accountId,\r\n      \"accServiceId\":this.accountServiceForm.value.accServiceId,\r\n      \"statementFrequency\": this.accountServiceForm.value.statementFrequency,\r\n      \"statementPref\": this.statementList,\r\n      \"bankChannelPref\" : this.bankList,\r\n      \"commChannelPref\": this.communicationList,\r\n      \"chequebookNeeded\": this.accountServiceForm.value.chequebookNeeded,\r\n      \"debitCardRequired\": this.accountServiceForm.value.debitCardRequired,\r\n      \"passbookNeeded\": this.accountServiceForm.value.passbookNeeded,\r\n      \"debitCardLimit\": this.accountServiceForm.value.debitCardLimit,\r\n      \"debitCardType\":this.accountServiceForm.value.debitCardType,      \r\n      \"accountType\": \"createAccount\"\r\n    };\r\n\r\n    if (this.accountServiceForm.invalid) {\r\n      return;\r\n    }\r\n\r\n    if (this.showEditOption) {\r\n      this.apiService.updateAccountService(this.accountId, accountPayload)\r\n        .subscribe((data: any) => {\r\n          console.log(data);\r\n          this.accountService.refresh.next();\r\n          this.router.navigate([`/home/application/nominee/add/${this.accountId}`]);\r\n          this.snack.open('Account Service Updated!', 'OK', { duration: 4000, verticalPosition: 'top', horizontalPosition: 'right' });\r\n        }, err => {\r\n          console.log(err);\r\n        });\r\n    } else {\r\n      this.apiService.createAccountService(this.accountId, accountPayload)\r\n        .subscribe((data: any) => {\r\n          console.log(data);\r\n          this.ls.setItem('ACC_SERVICE_DONE', true);\r\n          this.accountService.refresh.next();\r\n          this.router.navigate([`/home/application/nominee/add/${this.accountId}`]);\r\n          this.snack.open('Account Service Saved!', 'OK', { duration: 4000, verticalPosition: 'top', horizontalPosition: 'right' });\r\n        }, err => {\r\n          console.log(err);\r\n        });\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n  }\r\n\r\n}","<div  class=\"matcard-size\">\r\n<div fxLayout=\"row\">\r\n  <div fxFlex=\"100\">\r\n    <div class=\"propic text-center\">\r\n      <img\r\n        src=\"assets/images/svg/undraw_opinion_dxp8.svg\"\r\n        alt=\"\"\r\n        class=\"w-90\"\r\n      />\r\n    </div>\r\n    <div class=\"profile-title text-center mt-8\">\r\n      <div class=\"main-title1\">Account Services</div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<div fxLayout=\"row\">\r\n  <div fxFlex=\"100\">\r\n    <mat-card class=\"p-0\">\r\n      <mat-card-title>\r\n        <fieldset>\r\n        <legend visible=\"true\">Account Services</legend>\r\n        </fieldset>      \r\n        \r\n      </mat-card-title>\r\n      \r\n      <mat-card-content>\r\n        \r\n        <form *ngIf=\"accountServiceForm\" [formGroup]=\"accountServiceForm\">  \r\n        <mat-card class=\"borderStyle\">\r\n            <div class=\"card-title-text1\">Account Statement</div>    \r\n            <mat-divider class=\"design\"></mat-divider>    \r\n          <div fxLayout=\"row\" fxLayoutGap=\"25px\">\r\n            <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-1\">\r\n              <div class=\"pb-1\">                \r\n                <label class=\" p-3\"><strong>Account Statement Frequency*</strong></label>\r\n                <div class=\"m-16\"></div>\r\n                <mat-radio-group\r\n                  class=\"mt-12\"\r\n                  name=\"statementFreq\"\r\n                  formControlName=\"statementFrequency\" (change)=\"statementFrequency($event.value)\"\r\n                 \r\n                  required  \r\n                >  \r\n                  <mat-radio-button \r\n                  value=\"MONTHLY\" \r\n                  class=\"ml-8 pl-16\" \r\n                  color=\"primary\"\r\n                    >Monthly\r\n                    </mat-radio-button\r\n                  >\r\n                  <mat-radio-button\r\n                    value=\"BIANNUAL\"\r\n                    class=\"ml-16\"\r\n                    color=\"primary\"\r\n                    >Bi-Annual</mat-radio-button\r\n                  >\r\n                  <div class=\"m-16\"></div>\r\n                  <mat-radio-button\r\n                    value=\"QUATERLY\"\r\n                    class=\"ml-8 pl-16\"\r\n                    color=\"primary\"\r\n                    >Quaterly</mat-radio-button\r\n                  >\r\n                  <mat-radio-button \r\n                  value=\"ANNUAL\" \r\n                  class=\"ml-16\" \r\n                  color=\"primary\"\r\n                    >Annual\r\n                    </mat-radio-button\r\n                  >\r\n                </mat-radio-group>\r\n              </div>\r\n            </div>\r\n\r\n            <div fxFlex=\"100\" fxFlex.gt-xs=\"50\">\r\n              <div class=\"pb-1\">\r\n                <label class=\"p-3\"><strong>Account Statement Preference*</strong></label>\r\n                 <div class=\"m-16\"></div>\r\n                <p class=\"pl-16 mb-10\"\r\n                  *ngFor=\"let item of statementList\"\r\n                  formArrayName=\"statementPref\"\r\n                >\r\n                  <mat-checkbox\r\n                    class=\"checkbox-margin\"\r\n                    color=\"primary\"\r\n                    (change)=\"onChecklistChange($event.checked, item)\"\r\n                    [value]=\"item\"\r\n                    [checked]=\"item.checked\"\r\n                    >{{ item.name }}\r\n                  </mat-checkbox>\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <!-- <div fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"mt-32\">\r\n            <button\r\n              mat-button\r\n              rounded\r\n              color=\"primary\"\r\n             \r\n            >\r\n             MORE PREFERENCE  <mat-icon>keyboard_arrow_down</mat-icon>  \r\n             removed event from button  (click)=\"togglePreference()\"\r\n            </button>\r\n          </div> -->\r\n        </mat-card>\r\n          <div class=\"m-32\"></div>\r\n          <!--removing if condition for ng-container *ngIf=\"show\"-->\r\n          <ng-container >\r\n            <div fxLayout=\"row\" fxLayoutGap=\"25px\">\r\n              <!-- <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-1\">\r\n                <div class=\"pb-1\">\r\n                  <label><strong>Banking Channel Preferences*</strong></label>\r\n                  <div class=\"m-16\"></div>\r\n                  <mat-radio-group\r\n                    class=\"mt-12\"\r\n                    name=\"b_preference\"\r\n                    formControlName=\"bankChannelPref\" (change)=\"bankChannelPref($event.value)\"\r\n                    required\r\n                  >\r\n                    <mat-radio-button value=\"PHONE\" class=\"ml-8\" color=\"primary\"\r\n                      >Phone Banking</mat-radio-button\r\n                    >\r\n                    <mat-radio-button\r\n                      value=\"KIOSK\"\r\n                      class=\"ml-16\"\r\n                      color=\"primary\"\r\n                      >Kiosk Banking</mat-radio-button\r\n                    >\r\n                    <div class=\"m-16\"></div>\r\n                    <mat-radio-button\r\n                      value=\"DIRECT\"\r\n                      class=\"ml-8\"\r\n                      color=\"primary\"\r\n                      >Direct Banking</mat-radio-button\r\n                    >\r\n                  </mat-radio-group>\r\n                </div>\r\n              </div> -->\r\n              <div fxFlex=\"100\" fxFlex.gt-xs=\"50\">\r\n                <div fxLayout=\"row wrap\">\r\n                  <div fxFlex=\"100\">\r\n                    <label class=\"pl-3\"\r\n                      ><strong>Banking Channel Preferences*</strong></label\r\n                    >\r\n                    <div class=\"m-16\"></div>\r\n                  </div>\r\n                  <div fxFlex=\"100\" fxLayout=\"row wrap\">\r\n                    <p class=\"pl-5\"\r\n                      fxFlex=\"40\"\r\n                      *ngFor=\"let item of bankList\"\r\n                      formArrayName=\"bankChannelPref\"\r\n                    \r\n                    >\r\n                      <mat-checkbox\r\n                      color=\"primary\"\r\n                        class=\"checkbox-margin\"\r\n                        (change)=\"onCheckbankChange($event.checked, item)\"\r\n                        [value]=\"item\"\r\n                        [checked]=\"item.checked\"\r\n                        >{{ item.name }}\r\n                      </mat-checkbox>\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div fxFlex=\"100\" fxFlex.gt-xs=\"50\">\r\n                <div fxLayout=\"row wrap\">\r\n                  <div fxFlex=\"100\">\r\n                    <label\r\n                      ><strong>Communication Channel Preferences*</strong></label\r\n                    >\r\n                    <div class=\"m-16\"></div>\r\n                  </div>\r\n                  <div fxFlex=\"100\" fxLayout=\"row wrap\">\r\n                    <p class=\"pl-3\"\r\n                      fxFlex=\"40\"\r\n                      *ngFor=\"let item of communicationList\"\r\n                      formArrayName=\"commChannelPref\"\r\n                     \r\n                    >\r\n                      <mat-checkbox\r\n                      color=\"primary\"\r\n                        class=\"checkbox-margin\"\r\n                        (change)=\"onCheckComChange($event.checked, item)\"\r\n                        [value]=\"item\"\r\n                        [checked]=\"item.checked\"\r\n                        >{{ item.name }}\r\n                      </mat-checkbox>\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div fxLayout=\"row\" fxLayoutGap=\"25px\">\r\n              <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-1\">\r\n                <div class=\"m-32\"></div>\r\n                <div class=\"pb-1 mt-32 pl-3\">\r\n                  Do you need a cheque book?\r\n                  <mat-slide-toggle\r\n                    name=\"checqueBook\"\r\n                    formControlName=\"chequebookNeeded\"\r\n                  ></mat-slide-toggle>\r\n                </div>\r\n              </div>\r\n\r\n              <div fxFlex=\"100\" fxFlex.gt-xs=\"50\">\r\n                <div class=\"pb-1 mt-32\">\r\n                  Do you need a passbook book?\r\n                  <mat-slide-toggle\r\n                    name=\"passbook\"\r\n                    formControlName=\"passbookNeeded\"\r\n                  ></mat-slide-toggle>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div fxLayout=\"row\" fxLayoutGap=\"25px\">\r\n              <div fxFlex=\"100\" fxFlex.gt-xs=\"25\" class=\"pr-1\">\r\n                <div class=\"m-32\"></div>\r\n                <div class=\"pb-1 mt-32 pl-3\">\r\n                  Do you need a debit card?\r\n                  <mat-slide-toggle\r\n                    (change)=\"onToggle($event)\"\r\n                    name=\"debitCardRequired\"\r\n                   formControlName=\"debitCardRequired\" \r\n                  ></mat-slide-toggle>\r\n                </div>\r\n              </div>\r\n            \r\n                <div *ngIf=\"isDebitLimit\" fxFlex=\"100\" style=\"padding-top: 20px;\" fxFlex.gt-xs=\"20\" class=\"pr-1\">\r\n                  <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                  <mat-label>Card Type</mat-label>\r\n\r\n                  <mat-select formControlName=\"debitCardType\" name=\"debitCardType\" required  (selectionChange)=\"cards($event)\">\r\n                    <mat-option *ngFor=\"let cardType of arrayCardType\" [value]=\"cardType\"> \r\n                      {{cardType}} \r\n                    </mat-option>\r\n                  </mat-select>\r\n\r\n                </mat-form-field>               \r\n                <div>\r\n                <div *ngIf=\"cardInfo\">                \r\n                <table class=\"table table-bordered\">\r\n                  <thead style=\"color: #03a9f4;\">\r\n                  <tr>\r\n                    <th>Card Type</th>\r\n                    <th>Daily Limit</th>\r\n                    <th>Domestic Limit</th>\r\n                    <th>International Limit</th>\r\n                    <th>ATM Limit</th>\r\n                    <th>POS Limit </th>\r\n                    <th>Internet Limit </th>\r\n                  </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                  <tr>\r\n                    <td>{{cardInfo.cardType}}</td>\r\n                    <td>{{cardInfo.dailyLimit}}</td>\r\n                    <td>{{cardInfo.domesticLimit}}</td>\r\n                    <td>{{cardInfo.internationalLimit}}</td>\r\n                    <td>{{cardInfo.atmLimit}}</td>\r\n                    <td>{{cardInfo.posLimit}}</td>\r\n                    <td>{{cardInfo.internetLimit}}</td>\r\n                  </tr>\r\n                </tbody>                  \r\n                </table>\r\n              </div>\r\n              <!-- <div *ngIf=\"Silver\">                \r\n               <table class=\"table table-bordered\">\r\n                  <thead style=\"color: #03a9f4;\">\r\n                  <tr>\r\n                    <th>Card Type</th>\r\n                    <th>Daily Limit</th>\r\n                    <th>Domestic Limit</th>\r\n                    <th>International Limit</th>\r\n                    <th>ATM Limit</th>\r\n                    <th>POS Limit </th>\r\n                    <th>Internet Limit </th>\r\n                  </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                  <tr>\r\n                    <td>Silver</td>\r\n                    <td>40,000</td>\r\n                    <td>40,000</td>\r\n                    <td>20,000</td>\r\n                    <td>40,000</td>\r\n                    <td> </td>\r\n                    <td> </td>\r\n                  </tr>\r\n                  </tbody>\r\n                </table>\r\n              </div> -->\r\n\r\n              <!-- <div *ngIf=\"Gold\">                \r\n               <table class=\"table table-bordered\">\r\n                  <thead style=\"color: #03a9f4;\">\r\n                  <tr>\r\n                    <th>Card Type</th>\r\n                    <th>Daily Limit</th>\r\n                    <th>Domestic Limit</th>\r\n                    <th>International Limit</th>\r\n                    <th>ATM Limit</th>\r\n                    <th>POS Limit </th>\r\n                    <th>Internet Limit </th>\r\n                  </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                  <tr>\r\n                    <td>Gold</td>\r\n                    <td>50,000</td>\r\n                    <td>50,000</td>\r\n                    <td>30,000</td>\r\n                    <td>50,000</td>\r\n                    <td> </td>\r\n                    <td> </td>\r\n                  </tr>\r\n                  </tbody>\r\n                </table>\r\n              </div> -->\r\n\r\n              <!-- <div *ngIf=\"Diamond\">                \r\n               <table class=\"table table-bordered\">\r\n                  <thead style=\"color: #03a9f4;\">\r\n                  <tr>\r\n                    <th>Card Type</th>\r\n                    <th>Daily Limit</th>\r\n                    <th>Domestic Limit</th>\r\n                    <th>International Limit</th>\r\n                    <th>ATM Limit</th>\r\n                    <th>POS Limit </th>\r\n                    <th>Internet Limit </th>\r\n                  </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                  <tr>\r\n                    <td>Diamond</td>\r\n                    <td>75,000</td>\r\n                    <td>75,000</td>\r\n                    <td>50,000</td>\r\n                    <td>75,000</td>\r\n                    <td> </td>\r\n                    <td> </td>\r\n                  </tr>\r\n                  </tbody>\r\n                </table>\r\n              </div> -->\r\n              <!-- <div *ngIf=\"Platinum\">                \r\n               <table class=\"table table-bordered\">\r\n                  <thead style=\"color: #03a9f4;\">\r\n                  <tr>\r\n                    <th>Card Type</th>\r\n                    <th>Daily Limit</th>\r\n                    <th>Domestic Limit</th>\r\n                    <th>International Limit</th>\r\n                    <th>ATM Limit</th>\r\n                    <th>POS Limit </th>\r\n                    <th>Internet Limit </th>\r\n                  </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                  <tr>\r\n                    <td>Platinum</td>\r\n                    <td>1,00,000</td>\r\n                    <td>1,00,000</td>\r\n                    <td>1,00,000</td>\r\n                    <td>1,00,000</td>\r\n                    <td> </td>\r\n                    <td> </td>\r\n                  </tr>\r\n                  </tbody>\r\n                </table>\r\n              </div> -->\r\n            </div>              \r\n           </div>\r\n\r\n\r\n            </div>\r\n          </ng-container>\r\n          <!-- [disabled]=\" !enableFinish || !accountServiceForm.valid ||\r\n             commChannelPreferencesArray.length == 0 || AccStatementPreferenceArray.length == 0\" -->\r\n             <!-- [disabled]=\"!accountServiceForm.valid\" -->\r\n        </form>\r\n      </mat-card-content>\r\n    </mat-card>\r\n    <div\r\n            fxLayout=\"row\"\r\n            fxLayoutAlign=\"space-between center\"\r\n            fxLayoutGap=\"16px\"\r\n            class=\"mt-32\"\r\n          >\r\n            <button mat-button class=\"Backbtn\" (click)=\"goBack()\">\r\n              Back\r\n            </button>\r\n            <button mat-raised-button [disabled]=\"!accountServiceForm.valid || \r\n            bankChannelPreferencesArray.length == 0 ||\r\n            commChannelPreferencesArray.length == 0  || AccStatementPreferenceArray.length == 0 \"\r\n             color=\"primary\" class=\"Nextbtn\" (click)=\"onSubmit()\">\r\n              Next\r\n            </button>\r\n          </div>\r\n  </div>\r\n</div>\r\n</div>","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/* tslint:enable:max-line-length */\n/**\n * Filter items emitted by the source Observable by only emitting those that\n * satisfy a specified predicate.\n *\n * <span class=\"informal\">Like\n * [Array.prototype.filter()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter),\n * it only emits a value from the source if it passes a criterion function.</span>\n *\n * <img src=\"./img/filter.png\" width=\"100%\">\n *\n * Similar to the well-known `Array.prototype.filter` method, this operator\n * takes values from the source Observable, passes them through a `predicate`\n * function and only emits those values that yielded `true`.\n *\n * @example <caption>Emit only click events whose target was a DIV element</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var clicksOnDivs = clicks.filter(ev => ev.target.tagName === 'DIV');\n * clicksOnDivs.subscribe(x => console.log(x));\n *\n * @see {@link distinct}\n * @see {@link distinctUntilChanged}\n * @see {@link distinctUntilKeyChanged}\n * @see {@link ignoreElements}\n * @see {@link partition}\n * @see {@link skip}\n *\n * @param {function(value: T, index: number): boolean} predicate A function that\n * evaluates each value emitted by the source Observable. If it returns `true`,\n * the value is emitted, if `false` the value is not passed to the output\n * Observable. The `index` parameter is the number `i` for the i-th source\n * emission that has happened since the subscription, starting from the number\n * `0`.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {Observable} An Observable of values from the source that were\n * allowed by the `predicate` function.\n * @method filter\n * @owner Observable\n */\nfunction filter(predicate, thisArg) {\n    return operators_1.filter(predicate, thisArg)(this);\n}\nexports.filter = filter;\n//# sourceMappingURL=filter.js.map","import { ChangeDetectorRef, Component, OnInit, ViewChild, Renderer2, ElementRef, HostListener } from '@angular/core';\r\nimport { FormBuilder, FormGroup, FormArray, Validators } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { AppConfirmService } from 'app/shared/services/app-confirm/app-confirm.service';\r\nimport { ApplicationEntryStageService } from 'app/shared/services/application-entry-stage.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { AccountService } from '../../account.service';\r\nimport * as moment from 'moment';\r\nimport { DataService } from 'app/shared/services/data.service';\r\nimport { UrlService } from '../../url.service';\r\nimport { CustomValidators } from 'ngx-custom-validators';\r\nimport { MatProgressBar } from '@angular/material/progress-bar';\r\nimport { AccountOpenPopupComponent } from './account-open-popup/account-open-popup.component';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { AppLoaderService } from 'app/shared/services/app-loader/app-loader.service';\r\nimport { pairwise, startWith } from 'rxjs/operators';\r\nimport { Subscription } from 'rxjs';\r\ninterface CityType {\r\n  id: string;\r\n  cityName: string;\r\n}\r\ninterface StateType {\r\n  id: string;\r\n  stateName: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-account-open',\r\n  templateUrl: './account-open.component.html',\r\n  styleUrls: ['./account-open.component.scss'],\r\n})\r\nexport class AccountOpenComponent implements OnInit {\r\n  @ViewChild(MatProgressBar) progressBar: MatProgressBar;\r\n  submitted = false;\r\n  formData = {}\r\n  console = console;\r\n  applicantForms: FormGroup;\r\n  accountId: string;\r\n  data: any;\r\n  customerIdProofs: any = [];\r\n\r\n  arrayPrefix: any[] = [];\r\n  arrayGender: any[] = [];\r\n  arrayCountry: any[] = [];\r\n  arrayState: any[] = [];\r\n  arrayCity: any[] = [];\r\n  arrayResidence: any[] = [];\r\n  arrayDocumentType: any[] = [];\r\n  arrayAddressType: any[] = [];\r\n  applicantDetailsArray: any[] = [];\r\n  toggle: boolean = false;\r\n  // customerDetails: IcustProductCustomerInfo = new IcustProductCustomerInfo();\r\n  customerDetails: any = {};\r\n  applicantDetails = [];\r\n  navSubscription: any;\r\n  routeparams: any;\r\n  showEditOption: boolean = false;\r\n  custInfo: string[];\r\n  tomorrow = new Date();\r\n  maxDate = new Date();\r\n  minDate = new Date();\r\n  validDate= new Date();\r\n  showNewForm: boolean = true;\r\n  isCifValid: boolean = false;\r\n  toggleClick: boolean = false;\r\n  existingCustomer: boolean;\r\n  productCustomerId: any;\r\n  isAccountOpenScreen: boolean = false;\r\n  previousUrl: string = '';\r\n  addFunc: boolean = true;\r\n  index: any;\r\n  entityName: string;\r\n  removedButton: boolean = false;\r\n  selectedApplicant: any = null;\r\n  cifNumberPrimary: any;\r\n  listOfAccounts: any = [];\r\n  subscription: Subscription;\r\n  dispResponse: any;\r\n  arrayOwnership: string[];\r\n  cifNumber: any;\r\n  isAllSameDigitVal: boolean =false;\r\n  accountInfo: any;\r\n  pinCodeErr: boolean = false;\r\n  \r\n\r\n  constructor(private router: Router, private dialog: MatDialog, private route: ActivatedRoute, private accountService: AccountService, private elRef: ElementRef,\r\n    private renderer: Renderer2, private ls: LocalStoreService, private apiService: ApiService, private formBuilder: FormBuilder, private confirmService: AppConfirmService, private cdr: ChangeDetectorRef, private appApiService: ApplicationEntryStageService,\r\n    private snack: MatSnackBar, private dataService: DataService, private urlService: UrlService, private loader: AppLoaderService) {\r\n    this.tomorrow.setDate(this.tomorrow.getDate()),\r\n    this.validDate.setDate(this.validDate.getDate());\r\n  }\r\n\r\n  ngOnInit() {\r\n    \r\n    this.accountId = this.ls.getItem('accountId');\r\n    let applicantId = this.route.snapshot.params['id'];\r\n    console.log(\"applicantId\", applicantId);\r\n    this.accountInfo = this.ls.getItem('EDIT-CREATEACCCIF');\r\n    console.log(this.accountInfo);\r\n  \r\n    this.isAccountOpenScreen = JSON.parse(this.ls.getItem('ACC_OPEN_DONE'));\r\n    this.cifNumberPrimary =  this.ls.getItem(\"CIF_NUM_PRIMARY\");\r\n    console.log('cifNumber', this.cifNumberPrimary)\r\n    console.log(\"check if\", this.accountId, this.isAccountOpenScreen);\r\n   \r\n    \r\n    if(this.accountInfo){\r\n      this.getCustomerInformationDetails(this.accountInfo.businessProductAccount.accountId);\r\n    }\r\n    else{\r\n      this.getCustomerInformationDetails(this.accountId);\r\n    }\r\n    this.buildCustomerForm();\r\n    this.getListOfAccounts();\r\n    this.getOwnershipValue(\"ownership\");\r\n    this.getPrefixValue(\"prefix\");\r\n    this.getGenderValue(\"gender\");\r\n    this.getResidenceDetails(\"residence\");\r\n    this.getCountryName(\"country\");\r\n    this.getAdressType(\"address_type\");\r\n    this.getAllAuthCities();\r\n    // this.getStateName(\"state\");\r\n    // this.getCityName(\"city\");\r\n\r\n    this.getDocumentType(\"document_type\");\r\n    // this.onFocusOutEvent('783',0);\r\n\r\n\r\n    if (this.accountId != null && this.isAccountOpenScreen) {\r\n      this.showEditOption = true;\r\n    } else {\r\n      this.showEditOption = false;\r\n      this.applicantForms.get('ownership').patchValue('Self');\r\n      this.applicantForms.get('numOfApplicants').patchValue(1);\r\n      this.subscription = this.apiService.getaccParam.subscribe((data : any) => {\r\n        console.log(\"data::\",data);\r\n        sessionStorage.setItem('customerName', data.firstName + ' ' + data.lastName);\r\n        this.dispResponse = data;\r\n        this.customerIdProofs = data.custIdProofs;\r\n        console.log('this.listOfAccounts.length',this.listOfAccounts.length)\r\n       // if (this.isObjectEmpty(this.dispResponse)){\r\n          if(this.listOfAccounts.length == 0){\r\n            this.fetchByCif(this.cifNumberPrimary,true);\r\n          }\r\n        // }\r\n        else{\r\n          this.populatePrimaryApplicant(data);\r\n        }\r\n      });\r\n    }\r\n\r\n    this.applicantForms.get('ownership').valueChanges.subscribe(val => {\r\n      console.log(\"ownership ?\", val);\r\n      if (val == 'Joint') {\r\n        this.applicantForms.get('numOfApplicants').patchValue(2, {onlySelf:true, emitEvent:false});\r\n      } else {\r\n        this.applicantForms.get('numOfApplicants').patchValue(1, {onlySelf:true, emitEvent:false});\r\n      }\r\n    });\r\n\r\n    this.applicantForms.get('numOfApplicants').valueChanges.subscribe(val => {\r\n      console.log(\"ownership ?\", val);\r\n      if (val == 1) {\r\n        this.applicantForms.get('ownership').patchValue('Self', {onlySelf:true, emitEvent:false});\r\n      } else {\r\n        this.applicantForms.get('ownership').patchValue('Joint', {onlySelf:true, emitEvent:false});\r\n      }\r\n    });\r\n\r\n    this.applicant.get('idType')\r\n      .valueChanges\r\n      .pipe(pairwise())\r\n      .subscribe(([prev, next]: [any, any]) => {\r\n        this.applicant.get('idNumber').patchValue('');\r\n        this.applicant.get('expiryDate').patchValue('');\r\n      });\r\n\r\n    this.urlService.previousUrl$\r\n      .subscribe((previousUrl: string) => {\r\n        this.previousUrl = previousUrl\r\n      });\r\n\r\n    this.accountService.refresh.subscribe((res: any) => {\r\n      this.isAccountOpenScreen = JSON.parse(this.ls.getItem('ACC_OPEN_DONE'));\r\n      this.cdr.markForCheck();\r\n    });\r\n    this.cifNumber=this.ls.getItem('CIF_NUM_PRIMARY');\r\n    this.console.log(\"cifNumber=\",this.cifNumber);\r\n   \r\n  }\r\n  changeOwner(){\r\n      if (this.applicantForms.get('ownership').value == 'Joint') {\r\n        this.applicantForms.get('numOfApplicants').patchValue(2, {onlySelf:true, emitEvent:false});\r\n      } else {\r\n        this.applicantForms.get('numOfApplicants').patchValue(1, {onlySelf:true, emitEvent:false});\r\n      }\r\n  }\r\n  \r\n  changeIdType(doc){\r\n    console.log(\"doc::\",doc)\r\n    console.log(\"this.customerIdProofs::\",this.customerIdProofs)\r\n   let idProofs:any = this.customerIdProofs.filter(item =>{\r\n     return item.idType == doc;\r\n   })\r\n   console.log(\"idProofs::\",idProofs)\r\n   if(idProofs.length > 0){\r\n    this.applicant.get('idNumber').patchValue(idProofs[0].idNumber);\r\n    this.applicant.get('expiryDate').patchValue(this.convertDate(idProofs[0].expiryDate));\r\n   } else {\r\n    this.applicant.get('idNumber').patchValue('');\r\n    this.applicant.get('expiryDate').patchValue('');\r\n   }\r\n  }\r\n\r\n  populatePrimaryApplicant(data: any) {\r\n    this.getStateName(data.country);\r\n    // this.getCityName(data.state,true);\r\n    let applicantData = {\r\n      cifNumber:this.cifNumberPrimary,\r\n      prefix: data.prefix,\r\n      existingCustomer:true,\r\n      primaryCustomer:true,\r\n      customerId: data.customerId,\r\n      firstName: data.firstName,\r\n      middleName: data.middleName,\r\n      lastName: data.lastName,\r\n      gender: data.gender,\r\n      dateOfBirth: this.convertDate(data.dateOfBirth),\r\n      placeOfBirth: data.placeOfBirth,\r\n      residenceStatus: data.residenceStatus,\r\n      nationality: data.nationality,\r\n      countryOfResidence: data.countryOfResidence,\r\n      occupationType: data.occupationType,\r\n      idType: data.idType,\r\n      idNumber: data.idNumber,\r\n      expiryDate: this.convertDate(data.expiryDate),\r\n      addressType: data.addressType,\r\n      address1: data.address1,\r\n      address2: data.address2,\r\n      city: data.city,\r\n      country: data.country,\r\n      state: data.state,\r\n      zipCode: data.zipCode,\r\n      phoneNumber: data.phoneNumber,\r\n      landlineNumber: data.landlineNumber,\r\n      primaryEmailAdress: data.primaryEmailAdress\r\n      \r\n    }\r\n    \r\n    this.applicant.patchValue(applicantData);\r\n  }\r\n\r\n  isObjectEmpty(value) {\r\n    return (\r\n      Object.prototype.toString.call(value) === '[object Object]' &&\r\n      JSON.stringify(value) === '{}'\r\n    );\r\n  }\r\n\r\n  letterOnly(event) {\r\n    var charCode = event.keyCode;\r\n    if ((charCode > 64 && charCode < 91) || (charCode > 96 && charCode < 123) || charCode == 8)\r\n      return true;\r\n    else\r\n      return false;\r\n  }\r\n\r\n  toggleDetails(account) {\r\n    console.log(\"customerId incomming\", account);\r\n    this.applicantForms.get('numOfApplicants').disable({onlySelf:true, emitEvent:false});\r\n    // if (this.selectedApplicant && this.selectedApplicant._id === account._id) {\r\n    //   // Close the details\r\n    //   this.closeDetails();\r\n    //   return;\r\n    // }\r\n    let address: any;\r\n    this.console.log(account.userAddress.length);\r\n    if (account.userAddress.length > 1) {\r\n      address = account.userAddress.find((item: any) => item.addressType == \"Permanent\");\r\n    } else {\r\n      address = account.userAddress[0];\r\n    }\r\n    this.getStateName(address.country);\r\n    // this.getCityName(address.state,true);\r\n\r\n    let payLoadModel = {\r\n      existingCustomer: account.existingCustomer,\r\n      dependentId: account.dependentId,\r\n      primaryCustomer: account.primaryCustomer,\r\n      cifNumber: account.cifNumber,\r\n      prefix: account.prefix,\r\n      firstName: account.firstName,\r\n      \r\n      middleName: account.middleName,\r\n      lastName: account.lastName,\r\n      gender: account.gender,\r\n      dateOfBirth: account.dateOfBirth,\r\n      placeOfBirth: account.placeOfBirth,\r\n      residenceStatus: account.residenceStatus,\r\n      nationality: account.nationality,\r\n      countryOfResidence: account.countryOfResidence,\r\n      occupationType: account.occupationType,\r\n      idType: account.custIdProofs[0].idType,\r\n      idNumber: account.custIdProofs[0].idNumber,\r\n      expiryDate: account.custIdProofs[0].expiryDate,\r\n      addressType: address.addressType,\r\n      address1: address.address1,\r\n      address2: address.address2,\r\n      city: address.city,\r\n      state: address.state,\r\n      country: address.country,\r\n      zipCode: address.zipCode,\r\n      phoneNumber: account.phoneNumber,\r\n      landlineNumber: account.landlineNumber,\r\n      primaryEmailAdress: account.primaryEmailAdress\r\n    };\r\n    console.log(\"account.firstName=\",account.firstName);\r\n    //console.log(\"firstName=\",this.firstName);\r\n    this.selectedApplicant = account;\r\n    this.applicant.patchValue(payLoadModel, {onlySelf:false, emitEvent:false});\r\n    this.cdr.markForCheck();\r\n  }\r\n\r\n  resetAndClose(){\r\n    this.closeDetails();\r\n  }\r\n\r\n  /**\r\n   * Close the details\r\n   */\r\n  closeDetails(): void {\r\n    this.selectedApplicant = null;\r\n    this.applicant.reset();\r\n    this.applicantForms.get('numOfApplicants').enable({onlySelf:true});\r\n    \r\n  }\r\n\r\n  getListOfAccounts() {\r\n    let accountType ='savings';\r\n    this.loader.open();\r\n    this.appApiService.fetchAccountDependentInfo(this.accountId ?this.accountId : this.accountInfo.businessProductAccount.accountId,accountType)\r\n      .subscribe((resp: any) => {\r\n        this.listOfAccounts = resp.status == 200 ? resp.data.map(value => ({ ...value, _id: Math.round(Math.random() * 10000000000) })) : [];\r\n        this.loader.close();\r\n        console.log(\"All Customer Details\", this.listOfAccounts.length);\r\n        resp.status == 200 ? this.ls.setItem(\"cId\", resp.data[0].customerId) : null;\r\n        console.log(\"Length check??\",this.listOfAccounts.length);\r\n\r\n        if(this.listOfAccounts.length == 0){\r\n          this.applicant.get('existingCustomer').patchValue(true);\r\n          this.applicant.get('primaryCustomer').patchValue(true);\r\n        }else if(this.listOfAccounts.length == 1){\r\n          this.applicant.get('existingCustomer').patchValue(true);\r\n          this.applicant.get('primaryCustomer').patchValue(false);\r\n        }else if(this.listOfAccounts.length >= 2){\r\n          this.applicantForms.get('ownership').patchValue('Joint');\r\n          this.applicant.get('existingCustomer').patchValue(true);\r\n          this.applicant.get('primaryCustomer').patchValue(false);\r\n          for (let index = 0; index < resp.data.length; index++) {\r\n            const element = resp.data[index];\r\n            this.applicantForms.get('numOfApplicants').patchValue(resp.data[index].numOfApplicants);\r\n          }\r\n        }\r\n\r\n        this.cdr.markForCheck();\r\n\r\n        this.toggleChanges();\r\n      }, (err: any) => {\r\n        this.loader.close();\r\n      });\r\n  }\r\n\r\n  removeApplicant(account) {\r\n    this.confirmService\r\n      .confirm({ title: \"Confirm\", message: \"Are you sure want to delete?\", ok: \"Yes\", cancel: \"No\" })\r\n      .subscribe(res => {\r\n        console.log(\"res:: removed \", res);\r\n        if (res) {\r\n          this.appApiService.deleteApplicant(account.customerId, account.dependentId)\r\n            .subscribe((res: any) => {\r\n            }, (err: any) => {\r\n              console.log(err);\r\n              if (err.status == 200) {\r\n                this.snack.open(`Dependent ${account.firstName} ${err.error.text}!`, 'OK', {\r\n                  duration: 4000,\r\n                  verticalPosition: 'top',\r\n                  horizontalPosition: 'right'\r\n                });\r\n                this.getListOfAccounts();\r\n              }\r\n            })\r\n        } else return;\r\n      });\r\n  }\r\n\r\n  fetchByCif(cifNumber, isExistingCustomer) {\r\n    this.appApiService.fetchByCif(cifNumber).subscribe((res: any) => {\r\n      console.log(res);\r\n      if (!res) {\r\n        this.isCifValid = false;\r\n        this.snack.open('Invalid CIF Number', 'OK', {\r\n          duration: 4000,\r\n          verticalPosition: 'top',\r\n          horizontalPosition: 'right'\r\n        });\r\n        this.applicant.get('cifNumber').patchValue('');\r\n        return;\r\n      } else {\r\n        this.isCifValid = true;\r\n        this.ls.setItem(\"cId\", res.customerInfoList[0].customerId);\r\n        let address: any;\r\n        this.console.log(res.customerInfoList[0].userAddress.length);\r\n        if (res.customerInfoList[0].userAddress.length > 1) {\r\n          address = res.customerInfoList[0].userAddress.find((item: any) => item.addressType == \"Permanent\");\r\n        } else {\r\n          address = res.customerInfoList[0].userAddress[0];\r\n        }\r\n        this.getStateName(address.country);\r\n        // this.getCityName(address.state,true);\r\n        let applicantData = {\r\n          prefix: res.customerInfoList[0].prefix,\r\n          cifNumber: res.customerInfoList[0].cifNumber,\r\n          existingCustomer:isExistingCustomer,\r\n          customerId: res.customerInfoList[0].customerId,\r\n          firstName: res.customerInfoList[0].firstName,\r\n          middleName: res.customerInfoList[0].middleName,\r\n          lastName: res.customerInfoList[0].lastName,\r\n          gender: res.customerInfoList[0].gender,\r\n          dateOfBirth: this.convertDate(res.customerInfoList[0].dateOfBirth),\r\n          placeOfBirth: res.customerInfoList[0].placeOfBirth,\r\n          residenceStatus: res.customerInfoList[0].residenceStatus,\r\n          nationality: res.customerInfoList[0].nationality,\r\n          countryOfResidence: res.customerInfoList[0].countryOfResidence,\r\n          occupationType: res.customerInfoList[0].occupationType,\r\n          idType: res.customerInfoList[0].custIdProofs.length > 0 ? res.customerInfoList[0].custIdProofs[0].idType : '',\r\n          idNumber: res.customerInfoList[0].custIdProofs.length > 0 ? res.customerInfoList[0].custIdProofs[0].idNumber : '',\r\n          expiryDate: res.customerInfoList[0].custIdProofs.length > 0 ? this.convertDate(res.customerInfoList[0].custIdProofs[0].expiryDate) : '',\r\n          addressType: address.addressType,\r\n          address1: address.address1,\r\n          address2: address.address2,\r\n          city: address.city,\r\n          country: address.country,\r\n          state: address.state,\r\n          zipCode: address.zipCode,\r\n          phoneNumber: res.customerInfoList[0].phoneNumber,\r\n          landlineNumber: res.customerInfoList[0].landlineNumber,\r\n          primaryEmailAdress: res.customerInfoList[0].primaryEmailAdress\r\n        }\r\n        this.console.log(\"res.customerInfoList[0].firstName=\",res.customerInfoList[0].firstName);\r\n        this.applicant.patchValue(applicantData);\r\n        console.log(this.applicant);\r\n      }\r\n      this.cdr.markForCheck();\r\n    }, (err: any) => {\r\n      console.error(err);\r\n    })\r\n  }\r\n\r\n  getCustomerInformationDetails(accountId) {\r\n    this.apiService.getCustomerInformationDetailsById(accountId)\r\n      .subscribe((resp: any) => {\r\n        console.log(\"All Customer Details\", resp);\r\n        this.buildCustomerForm(resp);\r\n      }, (err: any) => {\r\n      });\r\n  }\r\n\r\n\r\n  convertDate(value) {\r\n    let date = moment(value).format('YYYY-MM-DD'); // ISO 8601 format\r\n    // let date = new Date(value).format('yyyy-MMM-dd');\r\n    console.log(\"date\", date);\r\n    if (date)\r\n      return date;\r\n  }\r\n\r\n\r\n  buildCustomerForm(data?) {\r\n    this.applicantForms = this.formBuilder.group({\r\n      productAccountId: data ? data.productAccountId : this.accountId,\r\n      ownership: data ? data.ownership : 'Self',\r\n      numOfApplicants: data ? data.numOfApplicants : 1,\r\n      applicantDetails: this.addCustFormGroup()\r\n    });\r\n  }\r\n\r\n  toggleChanges() {\r\n    if (this.applicant.get('existingCustomer').value == true) {\r\n      this.applicant.get('cifNumber').enable();\r\n      this.applicant.get('cifNumber').setValidators([Validators.required]);\r\n      this.applicant.get('cifNumber').updateValueAndValidity();\r\n    }\r\n    else {\r\n      this.applicant.get('cifNumber').disable();\r\n      this.applicant.get('cifNumber').clearValidators();\r\n      this.applicant.get('cifNumber').updateValueAndValidity();\r\n    }\r\n  }\r\n\r\n  toggleAddForm() {\r\n    this.showNewForm = !this.showNewForm;\r\n  }\r\n\r\n  addCustFormGroup(): FormGroup {\r\n    return this.formBuilder.group({\r\n      existingCustomer: [null, []],\r\n      primaryCustomer: [null, []],\r\n      cifNumber: [''],\r\n      customerId: [''],\r\n      dependentId: [null],\r\n      prefix: ['', Validators.required],\r\n      firstName: ['', Validators.required],\r\n      middleName: [''],\r\n      lastName: ['', Validators.required],\r\n      gender: ['', Validators.required],\r\n      dateOfBirth: ['', Validators.required],\r\n      placeOfBirth: ['', Validators.required],\r\n      residenceStatus: ['', Validators.required],\r\n      nationality: ['', Validators.required],\r\n      countryOfResidence: ['', Validators.required],\r\n      occupationType: ['', Validators.required],\r\n      idType: ['', Validators.required],\r\n      idNumber: ['', Validators.required],\r\n      expiryDate: [''],\r\n      addressType: ['', Validators.required],\r\n      address1: ['', [Validators.required,Validators.pattern('.*[a-zA-Z].*')]],\r\n      address2: ['', [Validators.required,Validators.pattern('.*[a-zA-Z].*')]],\r\n      city: ['', Validators.required],\r\n      state: ['', Validators.required],\r\n      country: ['', Validators.required],\r\n      zipCode: ['', [Validators.required]],\r\n      phoneNumber: ['', [Validators.required, Validators.minLength(3), Validators.maxLength(10), Validators.pattern(\"^[0-9]{10,12}$\")]],\r\n      landlineNumber: ['', [Validators.pattern(\"^[0-9]{10,12}$\")]],\r\n      primaryEmailAdress: ['', [Validators.required,\r\n      Validators.email]],\r\n    })\r\n  }\r\n\r\n\r\n  _keyPress(event: any) {\r\n    const pattern = /[0-9]/;\r\n    let inputChar = String.fromCharCode(event.charCode);\r\n    if (!pattern.test(inputChar)) {\r\n      event.preventDefault();\r\n\r\n    }\r\n  }\r\n\r\n  keyPressAlphanumeric(event) {\r\n    var inp = String.fromCharCode(event.keyCode);\r\n    if (/[a-zA-Z0-9]/.test(inp)) {\r\n      return true;\r\n    } else {\r\n      event.preventDefault();\r\n      return false;\r\n    }\r\n  }\r\n\r\n\r\n  validateNumber(event) {\r\n    const keyCode = event.keyCode;\r\n\r\n    const excludedKeys = [8, 37, 39, 46];\r\n\r\n    if (!((keyCode >= 48 && keyCode <= 57) ||\r\n      (keyCode >= 96 && keyCode <= 105) ||\r\n      (excludedKeys.includes(keyCode)))) {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n  // convenience getters for easy access to form fields\r\n  get f() { return this.applicantForms.controls; }\r\n  get applicantCount() { return this.f.numOfApplicants; }\r\n  get applicant() { return this.f.applicantDetails; }\r\n\r\n\r\n\r\n  getPrefixValue(key: string) {\r\n    this.apiService.getDropDownValues(key).subscribe((data) => {\r\n      this.arrayPrefix = data;\r\n    });\r\n  }\r\n\r\n  getOwnershipValue(key: string) {\r\n    this.apiService.getDropDownValues(key).subscribe((data) => {\r\n      this.arrayOwnership = data;\r\n    });\r\n  }\r\n\r\n  getGenderValue(key: string) {\r\n    this.apiService.getDropDownValues(key).subscribe((data) => {\r\n      this.arrayGender = data;\r\n    });\r\n  }\r\n\r\n  getCountryName(key: string) {\r\n    this.apiService.getAllCountries().subscribe((data: any) => {\r\n     for(let i=0; i<data.length;i++){\r\n       if(data[i].authStatus==='A'){     \r\n         this.arrayCountry.push(data[i].countryName);\r\n       }\r\n     }\r\n   });\r\n }\r\n  getAdressType(key: string) {\r\n    this.apiService.getDropDownValues(key).subscribe((data) => {\r\n      this.arrayAddressType = data;\r\n    });\r\n  }\r\n  \r\n\r\n  getStateName(country,isAdd?) {\r\n    if(isAdd){\r\nthis.applicant.get('zipCode').setValue('');\r\nthis.applicant.get('state').setValue('');\r\nthis.applicant.get('city').setValue('');\r\n    }\r\n    this.apiService.getAllCountries().subscribe((data: any) => {\r\n      for(let i=0; i<data.length;i++){       \r\n        if(data[i].countryName == country){\r\n          this.apiService.getStateByCountryId(data[i].id).subscribe((resp: any) => {\r\n          this.arrayState = resp\r\n          })\r\n          break;   \r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n\r\n  // getCityName(state: any,isEdit?) {\r\n  //   if(!isEdit){\r\n  //     this.applicant.get('zipCode')\r\n  //   }\r\n  //   this.entityName = \"city\";\r\n  //   console.log(state)\r\n  //   this.apiService.getDropDownValues1(this.entityName, state).subscribe((data) => {\r\n  //     this.arrayCity = data;\r\n  //     console.log(\"-->\", this.arrayCity)\r\n  //     // this.applicant.valueChanges.subscribe(data=>{\r\n  //     //   console.log('data :: before ',data.city)\r\n  //     //   data.city='';\r\n  //     //   console.log('data :: after ',data.city)\r\n  //     // })\r\n  //     // this.applicant.value.city='';\r\n  //     // this.applicant.get('city').reset();\r\n  //   console.log('this.applicant', this.applicant)\r\n  //   });\r\n  // }\r\n\r\n  getAllAuthCities(){\r\n    this.apiService.getAuthorizedCityInfo().subscribe(res => res.map(r => this.arrayCity.push(r.cityName)))\r\n  }\r\n\r\n  getResidenceDetails(key: string) {\r\n    this.apiService.getDropDownValues(key).subscribe((data) => {\r\n      this.arrayResidence = data;\r\n    });\r\n  }\r\n\r\n  getDocumentType(key: string) {\r\n    this.apiService.getDropDownValues(key).subscribe((data) => {\r\n      this.arrayDocumentType = data;\r\n    });\r\n  }\r\nonStateChange(){\r\n  this.applicant.get('city').setValue('');\r\n  this.applicant.get('zipCode').setValue('');\r\n}\r\nonCityChange(){\r\n  this.applicant.get('zipCode').setValue('');\r\n}\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    console.log('saveapplicant')\r\n    this.isCifValid= false;\r\n    if (this.applicantForms.invalid) {\r\n      console.log(\"test\");\r\n\r\n      return;\r\n    }\r\n    this.loader.open();\r\n\r\n    let payloadObj: any = {};\r\n    const control = this.applicantForms.controls['applicantDetails'].value;\r\n    let addressObj: any = {};\r\n    let custIdProofs: any = {};\r\n    let custIdProofsArray: any[] = [];\r\n    let addressObjArray: any[] = [];\r\n\r\n    payloadObj.customerId = this.ls.getItem(\"cId\");\r\n    payloadObj.cifNumber = control.cifNumber;\r\n    payloadObj.dependentId = control.dependentId;\r\n    payloadObj.existingCustomer = control.existingCustomer;\r\n    payloadObj.primaryCustomer = control.primaryCustomer;\r\n    payloadObj.residenceStatus = control.residenceStatus;\r\n    payloadObj.placeOfBirth = control.placeOfBirth;\r\n    payloadObj.countryOfResidence = control.countryOfResidence;\r\n    payloadObj.occupationType = control.occupationType;\r\n    payloadObj.phoneNumber = control.phoneNumber;\r\n    payloadObj.primaryEmailAdress = control.primaryEmailAdress;\r\n    payloadObj.prefix = control.prefix;\r\n    payloadObj.firstName = control.firstName;\r\n    payloadObj.middleName = control.middleName;\r\n    payloadObj.lastName = control.lastName;\r\n    payloadObj.cifNumber = control.cifNumber;\r\n    payloadObj.gender = control.gender;\r\n    payloadObj.dateOfBirth = this.convertDate(control.dateOfBirth);\r\n    payloadObj.nationality = control.nationality;\r\n    payloadObj.accountId = this.accountId;\r\n    payloadObj.landlineNumber = control.landlineNumber;\r\n    payloadObj.ownership = this.applicantForms.get('ownership').value;\r\n    payloadObj.numOfApplicants = this.applicantForms.get('numOfApplicants').value;\r\n    addressObj.address1 = control.address1;\r\n    addressObj.address2 = control.address2;\r\n    addressObj.country = control.country;\r\n    addressObj.state = control.state;\r\n    addressObj.city = control.city;\r\n    addressObj.zipCode = control.zipCode;\r\n    addressObj.addressType = control.addressType;\r\n    addressObjArray.push(addressObj);\r\n    if(control.idType=='Passport'){\r\n      custIdProofs.expiryDate = this.convertDate(control.expiryDate);\r\n    }\r\n    custIdProofs.idType = control.idType;\r\n    custIdProofs.idNumber = control.idNumber;\r\n    custIdProofsArray.push(custIdProofs);\r\n\r\n    payloadObj.userAddress = addressObjArray;\r\n    payloadObj.custIdProofs = custIdProofsArray;\r\n\r\n    console.log(\"payloadObj\",payloadObj);\r\n\r\n    this.appApiService.createAndUpdateAccountants(payloadObj)\r\n      .subscribe((data: any) => {\r\n        console.log(\"data::\",data)\r\n        this.closeDetails();\r\n        this.loader.close();\r\n        console.log(\"Response of service 2 ---> \", data)\r\n        if (data.status === 200) {\r\n          this.getListOfAccounts();\r\n          this.snack.open('Customer Information Details Saved!', 'OK', {\r\n            duration: 4000,\r\n            verticalPosition: 'top',\r\n            horizontalPosition: 'right'\r\n          });\r\n\r\n        this.applicantForms.get('ownership').patchValue(data.custDependentModel.ownership);\r\n        this.applicantForms.get('numOfApplicants').patchValue(data.custDependentModel.numOfApplicants);\r\n\r\n          if(this.applicantForms.get('ownership').value == 'Self'){\r\n            this.goToNext();\r\n          }\r\n        }\r\n      }, (err: any) => {\r\n        console.log(err);\r\n        this.loader.close();\r\n        this.snack.open('Error', 'INTERNAL SERVER ERROR', {\r\n          duration: 4000,\r\n          verticalPosition: 'top',\r\n          horizontalPosition: 'right'\r\n        });\r\n      })\r\n  }\r\n\r\n\r\n\r\n  uploadImage() {\r\n    console.log(\"Upload Image\");\r\n  }\r\n\r\n  onReset() {\r\n    // reset whole form back to initial state\r\n    this.submitted = false;\r\n    this.applicantForms.reset({});\r\n  }\r\n\r\n  onClear() {\r\n    // clear errors and reset ticket fields\r\n    this.submitted = false;\r\n  }\r\n\r\n  goBack() {\r\n    console.log(\"previousUrl ::\", this.previousUrl);\r\n    this.router.navigate([\"home/application/create-customer-account\"]);\r\n    // this.router.navigate([this.previousUrl]);\r\n  }\r\n\r\n  goToNext() {\r\n    this.ls.setItem('ACC_OPEN_DONE', true);\r\n    this.accountService.refresh.next();\r\n    this.ls.setItem('NO_OF_APPLICANTS', this.applicantForms.get('numOfApplicants').value);\r\n    this.router.navigate([`/home/application/mandate/${this.accountId ? this.accountId : this.accountInfo.businessProductAccount.accountId}`]);\r\n  }\r\n\r\n  onKeyPress(event: any) {\r\n    const number = /[0-9\\+\\-\\ ]/;\r\n    let inputCharacter = String.fromCharCode(event.charCode);\r\n    if (event.keyCode != 8 && !number.test(inputCharacter)) {\r\n      event.preventDefault();\r\n      console.log(\"event:\", event)\r\n    }\r\n  }\r\n  isAllSameDigit(event) {\r\n    let count = 0, number = event.target.value;\r\n    if (number != '') {\r\n      for (var i = 0; i < number.length; i++) {\r\n        if (0 == number[i]) {\r\n          count++;\r\n        }\r\n      }\r\n      console.log('number :: ', number);\r\n      console.log('isAllSameDigitVal :: ', count , number.length)\r\n      if (count == number.length) {\r\n        console.log('if loop')\r\n        this.isAllSameDigitVal = true;\r\n      }\r\n      else {\r\n        this.isAllSameDigitVal = false;\r\n      }\r\n    }else{\r\n      this.isAllSameDigitVal = false;\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.subscription) {\r\n      this.subscription.unsubscribe();\r\n    }\r\n    this.dataService.sendNavParam({});\r\n  }\r\n\r\n  getCityandStateByZipcode(countryName, zipcode) {    \r\n    if (countryName && zipcode.length >= 6) {\r\n      this.apiService.fetchStateCityByZipcode(countryName, zipcode).subscribe((res: any) => {\r\n        if(res){\r\n          this.applicant.get('state').setValue(res.stateName);\r\n          this.applicant.get('city').setValue(res.cityName)\r\n        }\r\n        else{\r\n          this.snack.open(\"Entered Zipcode does not exists\", \"OK\", {\r\n            duration: 4000,\r\n            verticalPosition: \"top\",\r\n            horizontalPosition: \"right\",\r\n          });\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n}\r\n","<div class=\"matcard-size\">\r\n<div fxLayout=\"row\">\r\n  <div fxFlex=\"100\">\r\n    <div class=\"propic text-center\">\r\n      <img src=\"assets/images/svg/undraw_personal_information_re_vw8a.svg\" alt=\"\" class=\"w-90\" />\r\n    </div>\r\n    <div class=\"profile-title text-center mt-8\">\r\n      <div class=\"main-title1\">Customer Information Details</div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<div fxLayout=\"row wrap\">\r\n  <div fxFlex=\"100\">\r\n    <!-- <mat-progress-bar [mode]=\"determinate\" class=\"session-progress\"></mat-progress-bar> -->\r\n    <mat-card class=\"p-0\">\r\n      <mat-card-title>\r\n        <fieldset>\r\n        <legend visible=\"true\">Customer Information</legend>\r\n        </fieldset>\r\n      </mat-card-title>\r\n      <mat-card-content>\r\n        <form *ngIf=\"applicantForms\" [formGroup]=\"applicantForms\" novalidate>\r\n          <div fxLayout=\"row\" fxLayoutGap=\"25px\">\r\n            <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-1\">\r\n              <div class=\"pb-1\">\r\n                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                  <mat-label>Ownership</mat-label>\r\n                  <mat-select (selectionChange)=\"changeOwner()\" formControlName=\"ownership\" name=\"owner\" required>\r\n                    <mat-option *ngFor=\"let ownership of arrayOwnership\" [value]=\"ownership\">\r\n                      {{ownership}}\r\n                    </mat-option>\r\n                  </mat-select>\r\n                  <mat-error *ngIf=\"applicantForms.get('ownership').hasError('required')\">\r\n                    Ownership is Required!\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n            <div fxFlex=\"100\" fxFlex.gt-xs=\"50\">\r\n              <div class=\"pb-1\">\r\n                <ng-container *ngIf=\"applicantForms.get('ownership').value == 'Joint'; else showAdd\">\r\n                  <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                    <mat-label>Number of Applicants*</mat-label>\r\n                    <mat-select formControlName=\"numOfApplicants\" name=\"account\">\r\n                      <mat-option [value]=\"1\">1</mat-option>\r\n                      <mat-option [value]=\"2\">2</mat-option>\r\n                      <mat-option [value]=\"3\">3</mat-option>\r\n                      <mat-option [value]=\"4\">4</mat-option>\r\n                      <mat-option [value]=\"5\">5</mat-option>\r\n                    </mat-select>\r\n                  </mat-form-field>\r\n                </ng-container>\r\n\r\n                <!-- <ng-template #showAdd>\r\n                  <div fxLayout=\"row\" fxLayout.lt-sm=\"column\" class=\"app-top-toolbar\" fxLayoutAlign=\"end end\">\r\n                    <span fxFlex></span>\r\n                    <button mat-button color=\"primary\" (click)=\"addFormGroup()\">\r\n                      <mat-icon>add</mat-icon> ADD APPLICANT\r\n                   </button> \r\n                  </div>\r\n                </ng-template> -->\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div fxLayout=\"row\" fxLayoutGap=\"16px\" fxLayoutAlign=\"end end\">\r\n            <div class=\"mb-1\">\r\n              <p class=\"m-0 text-right\">Completed {{ listOfAccounts.length }} /\r\n                {{ applicantForms.get('numOfApplicants').value }}</p>\r\n              <mat-progress-bar\r\n                [color]=\"applicantForms.get('numOfApplicants').value === listOfAccounts.length ? 'primary' : 'accent'\"\r\n                mode=\"determinate\"\r\n                [value]=\"applicantForms.get('numOfApplicants').value === listOfAccounts.length ? 100 : 50\"\r\n                class=\"rounded\" style=\"height: 5px\">\r\n              </mat-progress-bar>\r\n              <mat-hint><small> completed / total applicants </small></mat-hint>\r\n            </div>\r\n          </div>\r\n          <!-- TODO LATER  -->\r\n          <!-- <div fxLayout=\"row\" fxLayoutGap=\"16px\" fxLayoutAlign=\"space-between center\">\r\n            <h2>Details of the Applicants</h2>\r\n            <ng-container *ngIf=\"members?.length\">\r\n              <div class=\"box-holder\">\r\n                <ul class=\"list-unstyled users-list\">\r\n                    <li *ngFor=\"let member of members.slice(0, 5)\" class=\"avatar pull-up\">\r\n                            <div class=\"img media-object rounded-circle\">\r\n                              JS\r\n                          </div>\r\n                    </li>\r\n                    <li *ngIf=\"members.length > 5\" class=\"avatar\">\r\n                            <span class=\"badge badge-info\">\r\n                                +{{ members.slice(5).length }}\r\n                            </span>\r\n                    </li>\r\n                </ul>\r\n              </div>\r\n          </ng-container>\r\n          </div> -->\r\n          <!-- TODO LATER with reusable comp-->\r\n\r\n          <!-- *ngIf=\"!showNewForm\" -->\r\n          <div class=\"mt-12\">\r\n            <mat-accordion multi=\"true\">\r\n              <mat-expansion-panel class=\"mb-8\" *ngFor=\"let account of listOfAccounts; let i=index\" expanded=\"true\">\r\n                <mat-expansion-panel-header>\r\n                  <mat-panel-title>\r\n                    <mat-icon class=\"check-circle\">check_circle</mat-icon> <span class=\"ml-8\">Applicant {{ i+1 }}</span>\r\n                  </mat-panel-title>\r\n                </mat-expansion-panel-header>\r\n                <mat-card>\r\n                  <mat-card-header style=\"margin-bottom: -16px !important;\">\r\n                    <div mat-card-avatar>\r\n                      <app-avatar-photo [name]=\"account.firstName + ' ' + account.lastName\"></app-avatar-photo>\r\n                    </div>\r\n                    <mat-card-title>\r\n                      <div fxLayout=\"row\">\r\n                        <h6 class=\"m-0 mr-16\">{{ account.firstName + ' ' + account.lastName }}</h6>\r\n                        <span fxFlex></span>\r\n                        <mat-chip mat-sm-chip [color]=\"'warn'\" *ngIf=\"account.primaryCustomer\"\r\n                          [selected]=\"account.primaryCustomer\">{{account.primaryCustomer ? 'primary' : ''}}</mat-chip>\r\n                      </div>\r\n\r\n                    </mat-card-title>\r\n                    <mat-card-subtitle><span class=\"mat-caption\">CIF\r\n                        {{ account.cifNumber != null ? '#' + account.cifNumber : '- n/a' }}</span></mat-card-subtitle>\r\n                    <div fxLayout=\"row\" fxFlex=\"1 1 0%\" fxLayoutAlign=\"end end\">\r\n                      <span class=\"group-btn-bg\">\r\n                        <ng-container *ngIf=\"selectedApplicant?._id === account._id; else showEdit\">\r\n                          <a type=\"reset\" mat-icon-button color=\"primary\" (click)=\"resetAndClose()\">\r\n                            <mat-icon>close</mat-icon>\r\n                          </a>\r\n                        </ng-container>\r\n                        <ng-template #showEdit>\r\n                          <a type=\"submit\" mat-icon-button color=\"primary\" (click)=\"toggleDetails(account)\">\r\n                            <mat-icon>edit</mat-icon>\r\n                          </a>\r\n                        </ng-template>\r\n\r\n                        <a *ngIf=\"account.dependentId\" mat-icon-button color=\"warn\" (click)=\"removeApplicant(account)\">\r\n                          <mat-icon>delete</mat-icon>\r\n                        </a>\r\n                      </span>\r\n                    </div>\r\n                  </mat-card-header>\r\n                  <mat-card-container>\r\n                    <ng-container *ngIf=\"selectedApplicant?._id === account._id\">\r\n                      <ng-container *ngTemplateOutlet=\"detailApplicant; context: {$implicit: account}\"></ng-container>\r\n                    </ng-container>\r\n\r\n                    <ng-template #detailApplicant let-account>\r\n                      <form [formGroup]=\"applicantForms\" class=\"mt-32\">\r\n                        <div formGroupName=\"applicantDetails\">\r\n                          <div fxLayout=\"row\" fxLayoutGap=\"25px\">\r\n                            <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-1\">\r\n                              <div class=\"pb-1\">\r\n                                <label>Is the applicant an existing customer?</label>\r\n                                &nbsp;&nbsp;\r\n                                <mat-slide-toggle (change)=\"toggleChanges($event)\" formControlName=\"existingCustomer\">\r\n                                </mat-slide-toggle>\r\n                                <div class=\"mb-16\"></div>\r\n                              </div>\r\n\r\n                              <div class=\"pb-1\">\r\n                                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                  <mat-label>Customer Prefix*</mat-label>\r\n                                  <mat-select name=\"prefix\" formControlName=\"prefix\">\r\n                                    <mat-option *ngFor=\"let prefix of arrayPrefix\" [value]=\"prefix\">\r\n                                      {{prefix}}\r\n                                    </mat-option>\r\n                                  </mat-select>\r\n                                  <mat-error *ngIf=\"applicant.get('prefix').hasError('required')\">\r\n                                    Prefix is Required!\r\n                                  </mat-error>\r\n                                </mat-form-field>\r\n                              </div>\r\n\r\n                              <div class=\"pb-1\">\r\n                                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                  <mat-label>Middle Name</mat-label>\r\n                                  <input matInput name=\"mname\" formControlName=\"middleName\" placeholder=\"Middle Name\"\r\n                                    (keypress)=\"letterOnly($event)\" />\r\n                                </mat-form-field>\r\n                              </div>\r\n\r\n                              <div class=\"pb-1\">\r\n                                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                  <mat-label>Date of Birth*</mat-label>\r\n                                  <input matInput name=\"date\" readonly formControlName=\"dateOfBirth\"\r\n                                    placeholder=\"Date of birth\" [matDatepicker]=\"appDatepicker\" [max]=\"tomorrow\"\r\n                                    [max]=\"maxDate\" />\r\n\r\n                                  <mat-datepicker-toggle matSuffix [for]=\"appDatepicker\"></mat-datepicker-toggle>\r\n                                  <mat-error *ngIf=\"applicant.get('dateOfBirth').hasError('required')\">\r\n                                    Date of Birth is Required!\r\n                                  </mat-error>\r\n                                </mat-form-field>\r\n                                <mat-datepicker #appDatepicker></mat-datepicker>\r\n                              </div>\r\n\r\n                              <div class=\"pb-1\">\r\n                                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                  <mat-label>Resident Status*</mat-label>\r\n                                  <mat-select name=\"residenceType\" formControlName=\"residenceStatus\">\r\n                                    <mat-option *ngFor=\"let residence of arrayResidence\" [value]=\"residence\">\r\n                                      {{residence}}\r\n                                    </mat-option>\r\n                                  </mat-select>\r\n                                  <mat-error *ngIf=\"applicant.get('residenceStatus').hasError('required')\">\r\n                                    Resident Status is Required!\r\n                                  </mat-error>\r\n                                </mat-form-field>\r\n\r\n                              </div>\r\n\r\n                              <div class=\"pb-1\">\r\n                                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                  <mat-label>Country of Residence*</mat-label>\r\n                                  <mat-select name=\"resident\" formControlName=\"countryOfResidence\">\r\n                                    <mat-option *ngFor=\"let country of arrayCountry\" [value]=\"country\">\r\n                                      {{country}}\r\n                                    </mat-option>\r\n                                  </mat-select>\r\n                                  <mat-error *ngIf=\"applicant.get('countryOfResidence').hasError('required')\">\r\n                                    Country of Residence is Required!\r\n                                  </mat-error>\r\n                                </mat-form-field>\r\n                              </div>\r\n\r\n                              <div class=\"pb-1\">\r\n                                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                  <mat-label>ID Type*</mat-label>\r\n                                  <mat-select name=\"idtype\" formControlName=\"idType\"\r\n                                    (selectionChange)=\"changeIdType(applicant.get('idType').value)\">\r\n                                    <mat-option *ngFor=\"let doc of arrayDocumentType\" [value]=\"doc\">\r\n                                      {{doc}}\r\n                                    </mat-option>\r\n                                  </mat-select>\r\n                                  <mat-error *ngIf=\"applicant.get('idType').hasError('required')\">\r\n                                    ID Type is Required!\r\n                                  </mat-error>\r\n                                </mat-form-field>\r\n                              </div>\r\n\r\n                              <div class=\"pb-1\">\r\n                                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                  <mat-label>Unique ID Number *</mat-label>\r\n                                  <input matInput name=\"uniqueidentity\" formControlName=\"idNumber\"\r\n                                    placeholder=\"Unique ID Number\" maxlength=\"12\"\r\n                                    pattern=\"^[+]?([0-9]+(?:[\\.][0-9]*)?|\\.[0-9]+)$\" />\r\n                                  <mat-error\r\n                                    *ngIf=\"applicant.get('idNumber').touched && !applicant.get('idNumber').valid\">\r\n                                    <div *ngIf=\"applicant.get('idNumber').hasError('required')\">Unique ID Number is\r\n                                      Required!</div>\r\n                                    <div *ngIf=\"applicant.get('idNumber').hasError('pattern')\">This is a numeric field\r\n                                    </div>\r\n                                  </mat-error>\r\n                                </mat-form-field>\r\n                              </div>\r\n\r\n                              <div class=\"pb-1\" *ngIf=\"applicant.get('idType').value == 'Passport' || applicant.get('idType').value == 'DL'\">\r\n                                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                  <mat-label>ID Type Valid Till*</mat-label>\r\n                                  <input matInput name=\"date\" readonly formControlName=\"expiryDate\"\r\n                                    placeholder=\"ID Type Valid Till\" [matDatepicker]=\"appDatepicker1\" [min]=\"validDate\"/>\r\n\r\n                                  <mat-datepicker-toggle matSuffix [for]=\"appDatepicker1\"></mat-datepicker-toggle>\r\n                                  <mat-error *ngIf=\"applicant.get('expiryDate').hasError('required')\">\r\n                                    ID Type Valid Till is Required!\r\n                                  </mat-error>\r\n                                </mat-form-field>\r\n                                <mat-datepicker #appDatepicker1></mat-datepicker>\r\n                              </div>\r\n                            </div>\r\n                            <div fxFlex=\"100\" fxFlex.gt-xs=\"50\">\r\n                              <div class=\"pb-1\">\r\n                                <label>Is the applicant a primary customer?</label>\r\n                                &nbsp;&nbsp;\r\n                                <mat-slide-toggle formControlName=\"primaryCustomer\">\r\n                                </mat-slide-toggle>\r\n\r\n                                <div class=\"mb-16\"></div>\r\n                              </div>\r\n                              <div class=\"pb-1\">\r\n                                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                  <mat-label>First Name*</mat-label>\r\n                                  <input matInput name=\"fname\" formControlName=\"firstName\" placeholder=\"First Name\"\r\n                                    (keypress)=\"letterOnly($event)\" />\r\n                                  <mat-error *ngIf=\"applicant.get('firstName').hasError('required')\">\r\n                                    First Name is Required!\r\n                                  </mat-error>\r\n                                </mat-form-field>\r\n                              </div>\r\n\r\n                              <div class=\"pb-1\">\r\n                                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                  <mat-label>Last Name*</mat-label>\r\n                                  <input matInput name=\"lname\" formControlName=\"lastName\" placeholder=\"Last Name\"\r\n                                    (keypress)=\"letterOnly($event)\" />\r\n                                  <mat-error *ngIf=\"applicant.get('lastName').hasError('required')\">\r\n                                    Last Name is Required!\r\n                                  </mat-error>\r\n                                </mat-form-field>\r\n                              </div>\r\n\r\n                              <div class=\"pb-1\">\r\n                                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                  <mat-label>Gender*</mat-label>\r\n                                  <mat-select name=\"gender\" formControlName=\"gender\">\r\n                                    <mat-option *ngFor=\"let gender of arrayGender\" [value]=\"gender\">\r\n                                      {{gender}}\r\n                                    </mat-option>\r\n                                  </mat-select>\r\n                                  <mat-error *ngIf=\"applicant.get('gender').hasError('required')\">\r\n                                    Gender is Required!\r\n                                  </mat-error>\r\n                                </mat-form-field>\r\n                              </div>\r\n\r\n                              <div class=\"pb-1\">\r\n                                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                  <mat-label>Birth Place*</mat-label>\r\n                                  <input matInput name=\"bplace\" formControlName=\"placeOfBirth\"\r\n                                    placeholder=\"Birth Place\" />\r\n                                  <mat-error *ngIf=\"applicant.get('placeOfBirth').hasError('required')\">\r\n                                    Birth Place is Required!\r\n                                  </mat-error>\r\n                                </mat-form-field>\r\n                              </div>\r\n\r\n                              <div class=\"pb-1\">\r\n                                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                  <mat-label>Citizenship By*</mat-label>\r\n                                  <mat-select name=\"citizen\" formControlName=\"nationality\">\r\n                                    <mat-option *ngFor=\"let country of arrayCountry\" [value]=\"country\">\r\n                                      {{country}}\r\n                                    </mat-option>\r\n                                  </mat-select>\r\n                                  <mat-error *ngIf=\"applicant.get('nationality').hasError('required')\">\r\n                                    Citizenship By is Required!\r\n                                  </mat-error>\r\n                                </mat-form-field>\r\n                              </div>\r\n\r\n                              <div class=\"pb-1\">\r\n                                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                  <mat-label>Occupation Type*</mat-label>\r\n                                  <input matInput name=\"occupation\" formControlName=\"occupationType\"\r\n                                    placeholder=\"Occupation Type\" />\r\n                                  <mat-error *ngIf=\"applicant.get('occupationType').hasError('required')\">\r\n                                    Occupation Type is Required!\r\n                                  </mat-error>\r\n                                </mat-form-field>\r\n                              </div>\r\n\r\n\r\n                            </div>\r\n                          </div>\r\n                          <!-- Address Section start-->\r\n                          <mat-accordion>\r\n                            <mat-expansion-panel class=\"mb-8\" expanded=\"true\">\r\n                              <mat-expansion-panel-header>\r\n                                <mat-panel-title>Communication Address </mat-panel-title>\r\n                              </mat-expansion-panel-header>\r\n\r\n                              <div fxLayout=\"row\" fxLayoutGap=\"25px\">\r\n                                <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-1\">\r\n                                  <div class=\"pb-1\">\r\n                                    <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                      <mat-label>Address Line 1*</mat-label>\r\n                                      <textarea matInput formControlName=\"address1\" placeholder=\"Address 1\"></textarea>\r\n                                      <mat-error *ngIf=\"applicant.get('address1').hasError('required')\">\r\n                                        Address Line1 is Required!\r\n                                      </mat-error>\r\n                                      <mat-error *ngIf=\" applicant.get('address1').touched && applicant.get('address1').hasError('pattern')\">\r\n                                        Please Enter Valid Address \r\n                                       </mat-error>\r\n\r\n                                    </mat-form-field>\r\n                                  </div>\r\n                                  <div class=\"pb-1\">\r\n                                    <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                      <mat-label>Residence Type*</mat-label>\r\n                                      <mat-select name=\"addressType\" formControlName=\"addressType\">\r\n                                        <mat-option *ngFor=\"let addressType of arrayAddressType\" [value]=\"addressType\">\r\n                                          {{addressType}}\r\n                                        </mat-option>\r\n                                      </mat-select>\r\n                                      <mat-error *ngIf=\"applicant.get('addressType').hasError('required')\">\r\n                                        Residence Type is Required!\r\n                                      </mat-error>\r\n                                    </mat-form-field>\r\n                                  </div>\r\n\r\n                                  <div class=\"pb-1\">\r\n                                    <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                      <mat-label>Zip Code*</mat-label>\r\n                                      <input minlength=\"5\" maxlength=\"10\" (keypress)=\"onKeyPress($event)\" matInput name=\"a_zip\"\r\n                                        formControlName=\"zipCode\" onlyNumber placeholder=\"Zip Code\"\r\n                                        (keyup)=\"isAllSameDigit($event)\" (change)=\"getCityandStateByZipcode(applicant.get('country').value,$event.target.value)\"/>\r\n                                      <mat-error *ngIf=\"applicant.get('zipCode').hasError('required') &&\r\n                                        !applicant.controls['zipCode'].valid && applicant.controls['zipCode']?.touched\">\r\n                                        Please enter valid Zip Code!(5-10 digits)\r\n                                      </mat-error>\r\n                                    </mat-form-field>\r\n                                    <h5 *ngIf=\"isAllSameDigitVal\" style=\"color: #E74C3C;\">Please enter valid Zip Code!\r\n                                    </h5>\r\n\r\n                                  </div>\r\n\r\n                                  <div class=\"pb-1\">\r\n                                    <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                      <mat-label>City*</mat-label>\r\n                                      <mat-select name=\"city\" formControlName=\"city\">\r\n                                        <mat-option *ngFor=\"let city of arrayCity\" [value]=\"city\">{{city}}\r\n                                        </mat-option>\r\n                                      </mat-select>\r\n                                      <mat-error *ngIf=\"applicant.get('city').hasError('required')\">\r\n                                        City is Required!\r\n                                      </mat-error>\r\n                                    </mat-form-field>\r\n                                  </div>\r\n\r\n                                </div>\r\n                                <div fxFlex=\"100\" fxFlex.gt-xs=\"50\">\r\n                                  <div class=\"pb-1\">\r\n                                    <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                      <mat-label>Address 2*</mat-label>\r\n                                      <textarea matInput formControlName=\"address2\" placeholder=\"Address 2\"></textarea>\r\n                                      <mat-error *ngIf=\"applicant.get('address2').hasError('required')\">\r\n                                        Address 2 is Required!\r\n                                      </mat-error>\r\n                                      <mat-error *ngIf=\" applicant.get('address2').touched && applicant.get('address2').hasError('pattern')\">\r\n                                        Please Enter Valid Address \r\n                                       </mat-error>\r\n                                    </mat-form-field>\r\n                                  </div>\r\n                                  \r\n                                  <div class=\"pb-1\">\r\n                                    <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                      <mat-label>Country*</mat-label>\r\n                                      <mat-select name=\"country\" formControlName=\"country\"\r\n                                        (selectionChange)=\"getStateName($event.value,true)\">\r\n                                        <mat-option *ngFor=\"let country of arrayCountry\" [value]=\"country\">\r\n                                          {{country}}\r\n                                        </mat-option>\r\n                                      </mat-select>\r\n                                      <mat-error *ngIf=\"applicant.get('country').hasError('required')\">\r\n                                        Country is Required!\r\n                                      </mat-error>\r\n                                    </mat-form-field>\r\n                                  </div>\r\n\r\n                                  <div class=\"pb-1\">\r\n                                    <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                      <mat-label>State*</mat-label>\r\n                                      <mat-select name=\"state\" formControlName=\"state\"\r\n                                        >\r\n                                        <mat-option *ngFor=\"let state of arrayState\" [value]=\"state.stateName\">\r\n                                          {{state.stateName}}</mat-option>\r\n\r\n                                      </mat-select>\r\n                                      <mat-error *ngIf=\"applicant.get('state').hasError('required')\">\r\n                                        State is Required!\r\n                                      </mat-error>\r\n                                    </mat-form-field>\r\n                                  </div>\r\n                                \r\n\r\n\r\n                                </div>\r\n                              </div>\r\n                            </mat-expansion-panel>\r\n                          </mat-accordion>\r\n                          <!-- Address Section end -->\r\n                          <!-- Contact Information -->\r\n                          <mat-accordion>\r\n                            <mat-expansion-panel class=\"mb-8\" expanded=\"true\">\r\n                              <mat-expansion-panel-header>\r\n                                <mat-panel-title>Contact Information </mat-panel-title>\r\n                              </mat-expansion-panel-header>\r\n\r\n                              <div fxLayout=\"row\" fxLayoutGap=\"25px\">\r\n                                <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-1\">\r\n                                  <div class=\"pb-1\">\r\n                                    <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                      <mat-label>Mobile Number*</mat-label>\r\n                                      <input maxlength=\"10\" (keypress)=\"onKeyPress($event)\" matInput\r\n                                        formControlName=\"phoneNumber\" name=\"phone\" placeholder=\"Mobile Number\" />\r\n                                      <mat-error *ngIf=\"applicant.get('phoneNumber').hasError('required')\">\r\n                                        Mobile Number is Required!\r\n                                      </mat-error>\r\n                                      <mat-error *ngIf=\"applicant.get('phoneNumber').hasError('pattern')\">\r\n                                        Please, Enter 10 digit Mobile Number!\r\n                                      </mat-error>\r\n\r\n                                    </mat-form-field>\r\n                                    <mat-error style=\"margin-top:-20px\" *ngIf=\"applicant.get('phoneNumber').value == '0000000000'\">\r\n                                      &nbsp; &nbsp; Please Enter Correct Mobile Number\r\n                                   </mat-error>\r\n                                  </div>\r\n                                  <div class=\"pb-1\">\r\n                                    <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                      <mat-label>E-mail*</mat-label>\r\n                                      <input matInput name=\"email\" formControlName=\"primaryEmailAdress\"\r\n                                        placeholder=\"e-mail\" />\r\n                                      <mat-error *ngIf=\"applicant.get('primaryEmailAdress').hasError('required')\">\r\n                                        E-mail is Required!\r\n                                      </mat-error>\r\n                                    </mat-form-field>\r\n                                  </div>\r\n                                </div>\r\n                                <div fxFlex=\"100\" fxFlex.gt-xs=\"50\">\r\n                                  <div class=\"pb-1\">\r\n                                    <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                      <mat-label>Landline Number</mat-label>\r\n                                      <input maxlength=\"10\" (keypress)=\"onKeyPress($event)\" matInput name=\"mobile\"\r\n                                        formControlName=\"landlineNumber\" placeholder=\"Landline Number\" />\r\n                                      <!-- <mat-error *ngIf=\"applicant.get('landlineNumber').hasError('required')\">\r\n                                        Landline Number is Required!\r\n                                      </mat-error>\r\n                                      <mat-error *ngIf=\"applicant.get('landlineNumber').hasError('pattern')\">\r\n                                        Please, Enter 10 digit Landline Number!\r\n                                      </mat-error> -->\r\n                                    </mat-form-field>\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n\r\n                            </mat-expansion-panel>\r\n                            <div class=\"pb-1\">\r\n                              <button mat-button color=\"primary\" [disabled]=\"applicant.invalid\" class=\"place_1\" (click)=\"onSubmit()\">\r\n                                <mat-icon></mat-icon> UPDATE APPLICANT\r\n                              </button>\r\n\r\n\r\n                            </div>\r\n                          </mat-accordion>\r\n                          <!-- Contact Information -->\r\n                        </div>\r\n                      </form>\r\n                    </ng-template>\r\n                  </mat-card-container>\r\n                </mat-card>\r\n              </mat-expansion-panel>\r\n            </mat-accordion>\r\n\r\n          </div>\r\n          <!-- *ngIf=\"showNewForm\" -->\r\n          <div class=\"mt-16\"\r\n            *ngIf=\"selectedApplicant == null &&  applicantForms.get('numOfApplicants').value !== listOfAccounts.length\">\r\n            <mat-accordion>\r\n              <mat-expansion-panel class=\"mb-8\"\r\n                [expanded]=\"applicantForms.get('numOfApplicants').value === listOfAccounts.length ? false : true\">\r\n                <mat-expansion-panel-header>\r\n                  <mat-panel-title>Create Applicant </mat-panel-title>\r\n                </mat-expansion-panel-header>\r\n                <div formGroupName=\"applicantDetails\">\r\n                  <div fxLayout=\"row\" fxLayoutGap=\"25px\">\r\n                    <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-1\">\r\n                      <div class=\"pb-1\">\r\n                        <label>Is the applicant an existing customer? </label>\r\n                        &nbsp;&nbsp;\r\n                        <!-- {{ listOfAccounts.length }} -->\r\n                        <mat-slide-toggle (change)=\"toggleChanges($event)\" formControlName=\"existingCustomer\"\r\n                          [disabled]=\"listOfAccounts.length == 0 ? true : false\"></mat-slide-toggle>\r\n                        <div class=\"mb-16\"></div>\r\n                      </div>\r\n\r\n                      <div class=\"pb-1\" *ngIf=\"listOfAccounts.length != 0\">\r\n                        <div fxLayout=\"row\" fxLayoutGap=\"2px\" fxLayoutAlign=\"space-between\">\r\n                          <div fxFlex=\"85\" fxFlexAlign=\"center\">\r\n                            <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                              <mat-label>CIF Number</mat-label>\r\n                              <input matInput (keypress)=_keyPress($event)\r\n                                (change)=\"fetchByCif(applicant.get('cifNumber').value,applicant.get('existingCustomer').value)\"\r\n                                (keyup)=keyUpevent($event) required formControlName=\"cifNumber\" name=\"cif\"\r\n                                placeholder=\"CIF Number\"\r\n                                [readonly]=\"applicant.get('existingCustomer').value == true ? false : true\" />\r\n                              <mat-icon *ngIf=\"isCifValid\" matSuffix color=\"primary\">check_circle</mat-icon>\r\n                              <!-- <mat-icon *ngIf=\"applicant.get('existingCustomer').value && !isCifValid\" matSuffix color=\"warn\">report_problem</mat-icon> -->\r\n                              <mat-error *ngIf=\"applicant.get('cifNumber').hasError('required')  && !isCifValid\">\r\n                                CIF Number is Required!\r\n                              </mat-error>\r\n                              <mat-hint class=\"hintColor\" *ngIf=\"!isCifValid && onbackSpace\">\r\n                                Enter valid CIF Number!</mat-hint>\r\n\r\n                            </mat-form-field>\r\n                          </div>\r\n                          <!-- <div fxFlex=\"15\" fxFlexAlign=\"center\">\r\n                              <a class=\"mb-16\" mat-flat-button color=\"primary\" (click)=\"fetchByCif(applicant.get('cifNumber').value)\">fetch</a>\r\n                            </div> -->\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div class=\"pb-1\">\r\n                        <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                          <mat-label>Customer Prefix*</mat-label>\r\n                          <mat-select name=\"prefix\" formControlName=\"prefix\">\r\n                            <mat-option *ngFor=\"let prefix of arrayPrefix\" [value]=\"prefix\">\r\n                              {{prefix}}\r\n                            </mat-option>\r\n                          </mat-select>\r\n                          <mat-error *ngIf=\"applicant.get('prefix').hasError('required')\">\r\n                            Prefix is Required!\r\n                          </mat-error>\r\n                        </mat-form-field>\r\n                      </div>\r\n\r\n                      <div class=\"pb-1\">\r\n                        <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                          <mat-label>Middle Name</mat-label>\r\n                          <input matInput name=\"mname\" formControlName=\"middleName\" placeholder=\"Middle Name\"\r\n                            (keypress)=\"letterOnly($event)\" />\r\n                        </mat-form-field>\r\n                      </div>\r\n\r\n                      <div class=\"pb-1\">\r\n                        <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                          <mat-label>Date of Birth*</mat-label>\r\n                          <input matInput name=\"date\" readonly formControlName=\"dateOfBirth\" placeholder=\"Date of birth\"\r\n                            [matDatepicker]=\"appDatepicker\" [max]=\"tomorrow\" [max]=\"maxDate\" />\r\n\r\n                          <mat-datepicker-toggle matSuffix [for]=\"appDatepicker\"></mat-datepicker-toggle>\r\n                          <mat-error *ngIf=\"applicant.get('dateOfBirth').hasError('required')\">\r\n                            Date of Birth is Required!\r\n                          </mat-error>\r\n                        </mat-form-field>\r\n                        <mat-datepicker #appDatepicker></mat-datepicker>\r\n                      </div>\r\n\r\n                      <div class=\"pb-1\">\r\n                        <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                          <mat-label>Resident Status*</mat-label>\r\n                          <mat-select name=\"residenceType\" formControlName=\"residenceStatus\">\r\n                            <mat-option *ngFor=\"let residence of arrayResidence\" [value]=\"residence\">\r\n                              {{residence}}\r\n                            </mat-option>\r\n                          </mat-select>\r\n                          <mat-error *ngIf=\"applicant.get('residenceStatus').hasError('required')\">\r\n                            Resident Status is Required!\r\n                          </mat-error>\r\n                        </mat-form-field>\r\n\r\n                      </div>\r\n\r\n                      <div class=\"pb-1\">\r\n                        <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                          <mat-label>Country of Residence*</mat-label>\r\n                          <mat-select name=\"resident\" formControlName=\"countryOfResidence\">\r\n                            <mat-option *ngFor=\"let country of arrayCountry\" [value]=\"country\">\r\n                              {{country}}\r\n                            </mat-option>\r\n                          </mat-select>\r\n                          <mat-error *ngIf=\"applicant.get('countryOfResidence').hasError('required')\">\r\n                            Country of Residence is Required!\r\n                          </mat-error>\r\n                        </mat-form-field>\r\n                      </div>\r\n\r\n                      <div class=\"pb-1\">\r\n                        <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                          <mat-label>ID Type*</mat-label>\r\n                          <mat-select name=\"idtype\" formControlName=\"idType\"\r\n                            (selectionChange)=\"changeIdType(applicant.get('idType').value)\">\r\n                            <mat-option *ngFor=\"let doc of arrayDocumentType\" [value]=\"doc\">\r\n                              {{doc}}\r\n                            </mat-option>\r\n                          </mat-select>\r\n                          <mat-error *ngIf=\"applicant.get('idType').hasError('required')\">\r\n                            ID Type is Required!\r\n                          </mat-error>\r\n                        </mat-form-field>\r\n                      </div>\r\n\r\n                      <div class=\"pb-1\" *ngIf=\"applicant.get('idType').value == 'Passport' || applicant.get('idType').value == 'DL'\">\r\n                        <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                          <mat-label>ID Type Valid Till*</mat-label>\r\n                          <input matInput name=\"date\" readonly formControlName=\"expiryDate\"\r\n                            placeholder=\"ID Type Valid Till\" [matDatepicker]=\"appDatepicker1\" [min]=\"validDate\"  />\r\n\r\n                          <mat-datepicker-toggle matSuffix [for]=\"appDatepicker1\"></mat-datepicker-toggle>\r\n                          <mat-error *ngIf=\"applicant.get('expiryDate').hasError('required')\">\r\n                            ID Type Valid Till is Required!\r\n                          </mat-error>\r\n                        </mat-form-field>\r\n                        <mat-datepicker #appDatepicker1></mat-datepicker>\r\n                      </div>\r\n                    </div>\r\n                    <div fxFlex=\"100\" fxFlex.gt-xs=\"50\">\r\n                      <div class=\"pb-1\" *ngIf=\"listOfAccounts.length == 0\">\r\n                        <label>Is the applicant a primary customer?</label>\r\n                        &nbsp;&nbsp;\r\n                        <mat-slide-toggle formControlName=\"primaryCustomer\"\r\n                          [disabled]=\"listOfAccounts.length == 0 ? true : false\">\r\n                        </mat-slide-toggle>\r\n\r\n                        <div class=\"mb-16\"></div>\r\n                      </div>\r\n                      <div class=\"pb-1\">\r\n                        <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                          <mat-label>First Name*</mat-label>\r\n                          <input matInput name=\"fname\" formControlName=\"firstName\" placeholder=\"First Name\"\r\n                            (keypress)=\"letterOnly($event)\" />\r\n                          <mat-error *ngIf=\"applicant.get('firstName').hasError('required')\">\r\n                            First Name is Required!\r\n                          </mat-error>\r\n                        </mat-form-field>\r\n                      </div>\r\n\r\n                      <div class=\"pb-1\">\r\n                        <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                          <mat-label>Last Name*</mat-label>\r\n                          <input matInput name=\"lname\" formControlName=\"lastName\" placeholder=\"Last Name\"\r\n                            (keypress)=\"letterOnly($event)\" />\r\n                          <mat-error *ngIf=\"applicant.get('lastName').hasError('required')\">\r\n                            Last Name is Required!\r\n                          </mat-error>\r\n                        </mat-form-field>\r\n                      </div>\r\n                      <div class=\"pb-1\">\r\n                        <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                          <mat-label>Gender*</mat-label>\r\n                          <mat-select name=\"gender\" formControlName=\"gender\">\r\n                            <mat-option *ngFor=\"let gender of arrayGender\" [value]=\"gender\">\r\n                              {{gender}}\r\n                            </mat-option>\r\n                          </mat-select>\r\n                          <mat-error *ngIf=\"applicant.get('gender').hasError('required')\">\r\n                            Gender is Required!\r\n                          </mat-error>\r\n                        </mat-form-field>\r\n                      </div>\r\n\r\n                      <div class=\"pb-1\">\r\n                        <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                          <mat-label>Birth Place*</mat-label>\r\n                          <input matInput name=\"bplace\" formControlName=\"placeOfBirth\" placeholder=\"Birth Place\" />\r\n                          <mat-error *ngIf=\"applicant.get('placeOfBirth').hasError('required')\">\r\n                            Birth Place is Required!\r\n                          </mat-error>\r\n                        </mat-form-field>\r\n                      </div>\r\n\r\n                      <div class=\"pb-1\">\r\n                        <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                          <mat-label>Citizenship By*</mat-label>\r\n                          <mat-select name=\"citizen\" formControlName=\"nationality\">\r\n                            <mat-option *ngFor=\"let country of arrayCountry\" [value]=\"country\">\r\n                              {{country}}\r\n                            </mat-option></mat-select>\r\n                          <mat-error *ngIf=\"applicant.get('nationality').hasError('required')\">\r\n                          Citizenship By is Required!\r\n                        </mat-error>\r\n                        </mat-form-field>\r\n                      </div>\r\n\r\n                      <div class=\"pb-1\">\r\n                        <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                          <mat-label>Occupation Type*</mat-label>\r\n                          <input matInput name=\"occupation\" formControlName=\"occupationType\"\r\n                            placeholder=\"Occupation Type\" />\r\n                          <mat-error *ngIf=\"applicant.get('occupationType').hasError('required')\">\r\n                            Occupation Type is Required!\r\n                          </mat-error>\r\n                        </mat-form-field>\r\n                      </div>\r\n\r\n                      <div class=\"pb-1\">\r\n                        <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                          <mat-label>Unique ID *</mat-label>\r\n                          <input matInput name=\"uniqueidentity\" formControlName=\"idNumber\" placeholder=\"Unique ID\"\r\n                            maxlength=\"12\" (keypress)=\"keyPressAlphanumeric($event)\" />\r\n                          <mat-error *ngIf=\"applicant.get('idNumber').touched && !applicant.get('idNumber').valid\">\r\n                            <div *ngIf=\"applicant.get('idNumber').hasError('required')\">Unique ID is Required!</div>\r\n                            <div *ngIf=\"applicant.get('idNumber').hasError('pattern')\">This is a alphanumeric field\r\n                            </div>\r\n                          </mat-error>\r\n                        </mat-form-field>\r\n                      </div>\r\n\r\n\r\n\r\n                    </div>\r\n                  </div>\r\n                  <!-- Address Section start-->\r\n                  <mat-accordion>\r\n                    <mat-expansion-panel class=\"mb-8\" expanded=\"true\">\r\n                      <mat-expansion-panel-header>\r\n                        <mat-panel-title>Communication Address </mat-panel-title>\r\n                      </mat-expansion-panel-header>\r\n\r\n                      <div fxLayout=\"row\" fxLayoutGap=\"25px\">\r\n                        <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-1\">\r\n                          <div class=\"pb-1\">\r\n                            <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                              <mat-label>Address Line 1*</mat-label>\r\n                              <textarea matInput formControlName=\"address1\" placeholder=\"Address 1\"></textarea>\r\n                              <mat-error *ngIf=\"applicant.get('address1').hasError('required')\">\r\n                                Address Line 1 is Required!\r\n                              </mat-error>\r\n                              <mat-error *ngIf=\" applicant.get('address1').touched && applicant.get('address1').hasError('pattern')\">\r\n                                Please Enter Valid Address \r\n                               </mat-error>\r\n                            </mat-form-field>\r\n                          </div>\r\n\r\n                          <div class=\"pb-1\">\r\n                            <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                              <mat-label>Residence Type*</mat-label>\r\n                              <mat-select name=\"addressType\" formControlName=\"addressType\">\r\n                                <mat-option *ngFor=\"let addressType of arrayAddressType\" [value]=\"addressType\">\r\n                                  {{addressType}}\r\n                                </mat-option>\r\n                              </mat-select>\r\n                              <mat-error *ngIf=\"applicant.get('addressType').hasError('required')\">\r\n                                Residence Type is Required!\r\n                              </mat-error>\r\n                            </mat-form-field>\r\n                          </div>\r\n\r\n                         \r\n\r\n                          \r\n                          <div class=\"pb-1\">\r\n                            <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                              <mat-label>Zip Code*</mat-label>\r\n                              <input minlength=\"5\" maxlength=\"10\" (keypress)=\"onKeyPress($event)\" matInput name=\"a_zip\"\r\n                                formControlName=\"zipCode\" onlyNumber placeholder=\"Zip Code\"\r\n                                (keyup)=\"isAllSameDigit($event)\" (change)=\"getCityandStateByZipcode(applicant.get('country').value,$event.target.value)\"/>\r\n                            </mat-form-field>\r\n                            <mat-error *ngIf=\"applicant.get('zipCode').hasError('required') &&\r\n                              !applicant.controls['zipCode'].valid && \r\n                              applicant.controls['zipCode']?.touched\">\r\n                              Please enter valid Zip Code!(5-10 digits)\r\n                            </mat-error>\r\n                            <h5 *ngIf=\"isAllSameDigitVal\" style=\"color: red;\">Please\r\n                              enter valid Zip Code!(5-10 digits)</h5>\r\n                          </div>\r\n\r\n                          <div class=\"pb-1\">\r\n                            <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                              <mat-label>City*</mat-label>\r\n                              <mat-select name=\"city\" formControlName=\"city\" (selectionChange)=\"onCityChange()\">\r\n                                <mat-option *ngFor=\"let city of arrayCity\" [value]=\"city\">{{city}}\r\n                                </mat-option>\r\n                              </mat-select>\r\n                              <mat-error *ngIf=\"applicant.get('city').hasError('required')\">\r\n                                City is Required!\r\n                              </mat-error>\r\n                            </mat-form-field>\r\n                          </div>\r\n\r\n\r\n                         \r\n\r\n                          \r\n                   \r\n                        </div>\r\n                        <div fxFlex=\"100\" fxFlex.gt-xs=\"50\">\r\n                          <div class=\"pb-1\">\r\n                            <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                              <mat-label>Address Line 2*</mat-label>\r\n                              <textarea matInput formControlName=\"address2\" placeholder=\"Address 2\"></textarea>\r\n                              <mat-error *ngIf=\"applicant.get('address2').hasError('required')\">\r\n                                Address Line 2 is Required!\r\n                              </mat-error>\r\n                              <mat-error *ngIf=\" applicant.get('address2').touched && applicant.get('address2').hasError('pattern')\">\r\n                                Please Enter Valid Address \r\n                               </mat-error>\r\n                            </mat-form-field>\r\n                          </div>\r\n\r\n                          <div class=\"pb-1\">\r\n                            <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                              <mat-label>Country*</mat-label>\r\n                              <mat-select name=\"country\" formControlName=\"country\"\r\n                                (selectionChange)=\"getStateName($event.value,true)\">\r\n                                <mat-option *ngFor=\"let country of arrayCountry\" [value]=\"country\">\r\n                                  {{country}}\r\n                                </mat-option>\r\n                              </mat-select>\r\n                              <mat-error *ngIf=\"applicant.get('country').hasError('required')\">\r\n                                Country is Required!\r\n                              </mat-error>\r\n                            </mat-form-field>\r\n                          </div>\r\n                          \r\n                          <div class=\"pb-1\">\r\n                            <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                              <mat-label>State*</mat-label>\r\n                              <mat-select name=\"state\" formControlName=\"state\" (selectionChange)=\"onStateChange()\"\r\n                                >\r\n                                <mat-option *ngFor=\"let state of arrayState\" [value]=\"state.stateName\">{{state.stateName}}\r\n                                </mat-option>\r\n\r\n                              </mat-select>\r\n                              <mat-error *ngIf=\"applicant.get('state').hasError('required')\">\r\n                                State is Required!\r\n                              </mat-error>\r\n                            </mat-form-field>\r\n                          </div>\r\n                          \r\n\r\n\r\n\r\n\r\n                        </div>\r\n                      </div>\r\n                    </mat-expansion-panel>\r\n                  </mat-accordion>\r\n                  <!-- Address Section end -->\r\n                  <!-- Contact Information -->\r\n                  <mat-accordion>\r\n                    <mat-expansion-panel class=\"mb-8\" expanded=\"true\">\r\n                      <mat-expansion-panel-header>\r\n                        <mat-panel-title>Contact Information </mat-panel-title>\r\n                      </mat-expansion-panel-header>\r\n\r\n                      <div fxLayout=\"row\" fxLayoutGap=\"25px\">\r\n                        <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-1\">\r\n                          <div class=\"pb-1\">\r\n                            <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                              <mat-label>Mobile Number*</mat-label>\r\n                              <input maxlength=\"10\" (keypress)=\"onKeyPress($event)\" matInput\r\n                                formControlName=\"phoneNumber\" name=\"phone\" placeholder=\"Mobile Number\" />\r\n                              <mat-error *ngIf=\"applicant.get('phoneNumber').hasError('required')\">\r\n                                Mobile Number is Required!\r\n                              </mat-error>\r\n                              <mat-error *ngIf=\"applicant.get('phoneNumber').hasError('pattern')\">\r\n                                Please, Enter 10 digit Mobile Number!\r\n                              </mat-error>\r\n\r\n                            </mat-form-field>\r\n                            <mat-error style=\"margin-top:-20px\" *ngIf=\"applicant.get('phoneNumber').value == '0000000000'\">\r\n                              &nbsp; &nbsp; Please Enter Correct Mobile Number\r\n                           </mat-error>\r\n                          </div>\r\n                          <div class=\"pb-1\">\r\n                            <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                              <mat-label>E-mail*</mat-label>\r\n                              <input matInput name=\"email\" formControlName=\"primaryEmailAdress\" placeholder=\"e-mail\" />\r\n                              <mat-error *ngIf=\"applicant.get('primaryEmailAdress').hasError('required')\">\r\n                                E-mail is Required!\r\n                              </mat-error>\r\n                            </mat-form-field>\r\n                          </div>\r\n                        </div>\r\n                        <div fxFlex=\"100\" fxFlex.gt-xs=\"50\">\r\n                          <div class=\"pb-1\">\r\n                            <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                              <mat-label>Landline Number</mat-label>\r\n                              <input maxlength=\"10\" (keypress)=\"onKeyPress($event)\" matInput name=\"mobile\"\r\n                                formControlName=\"landlineNumber\" placeholder=\"Landline Number\" />\r\n                              <!-- <mat-error *ngIf=\"applicant.get('landlineNumber').hasError('required')\">\r\n                                Landline Number is Required!\r\n                              </mat-error>\r\n                              <mat-error *ngIf=\"applicant.get('landlineNumber').hasError('pattern')\">\r\n                                Please, Enter 10 digit Landline Number!\r\n                              </mat-error> -->\r\n                            </mat-form-field>\r\n                            <mat-error style=\"margin-top:-20px\" *ngIf=\"applicant.get('landlineNumber').value == '0000000000'\">\r\n                              &nbsp; &nbsp; Please Enter Correct Landline Number\r\n                           </mat-error>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n\r\n                    </mat-expansion-panel>\r\n                    <div class=\"pb-1\">\r\n\r\n                      <!-- <button\r\n                      mat-button\r\n                      color=\"warn\"\r\n                      (click)=\"removeApplicant()\"\r\n                    >\r\n                      <mat-icon></mat-icon> RESET APPLICANT\r\n                    </button> -->\r\n                    </div>\r\n                    <div class=\"pb-1\">\r\n                      <a mat-button color=\"primary\" [disabled]=\"applicant.invalid\" class=\"place\" (click)=\"onSubmit()\">\r\n                        <mat-icon></mat-icon> SAVE APPLICANT\r\n                      </a>\r\n\r\n                      <!-- <button\r\n                      mat-button\r\n                      color=\"warn\"\r\n                      (click)=\"removeApplicant()\"\r\n                    >\r\n                      <mat-icon></mat-icon> RESET APPLICANT\r\n                    </button> -->\r\n                    </div>\r\n\r\n                  </mat-accordion>\r\n                  <!-- Contact Information -->\r\n                </div>\r\n              </mat-expansion-panel>\r\n            </mat-accordion>\r\n\r\n          </div>\r\n\r\n          <!-- <pre><code>{{applicant.getRawValue() | json}}</code></pre> -->\r\n        </form>\r\n      </mat-card-content>\r\n    </mat-card>\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\" fxLayoutGap=\"16px\" class=\"mt-32\">\r\n      <button class=\"ml-12\" mat-button class=\"Backbtn\" (click)=\"goBack()\">\r\n        Back\r\n      </button>\r\n      <ng-container *ngIf=\"applicantForms.get('ownership').value == 'Joint'; else hideBtn\">\r\n        <button mat-raised-button color=\"primary\" class=\"Nextbtn\" (click)=\"goToNext()\"\r\n        [disabled]=\"applicantForms.get('numOfApplicants').value === listOfAccounts.length ? 'false' : 'true'\">\r\n          Next\r\n        </button>\r\n      </ng-container>\r\n      <ng-template #hideBtn>\r\n        <button mat-raised-button color=\"primary\" class=\"Nextbtn\" (click)=\"goToNext()\"\r\n        [disabled]=\"applicantForms.get('numOfApplicants').value === listOfAccounts.length ? 'false' : 'true'\">\r\n          Next\r\n        </button>\r\n      </ng-template>\r\n    </div>\r\n  </div>\r\n</div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { AppLoaderService } from 'app/shared/services/app-loader/app-loader.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\n\r\n@Component({\r\n  selector: 'app-digitalsign-summary',\r\n  templateUrl: './digitalsign-summary.component.html',\r\n  styleUrls: ['./digitalsign-summary.component.scss']\r\n})\r\nexport class DigitalsignSummaryComponent implements OnInit {\r\n  accountId:any;\r\n  accountInfo: any;\r\n  imageUrl: any;\r\n  constructor( private router: Router,private ls: LocalStoreService, private api: ApiService, private loader: AppLoaderService) { }\r\n\r\n  ngOnInit(): void {\r\n    \r\n    console.log(this.accountId)\r\n     this.accountId = this.ls.getItem('accountId');\r\n     console.log(this.accountId)\r\n     this.getDigitalsignById(this.accountId);\r\n     if(this.accountInfo){\r\n      this.accountId=this.accountInfo.businessProductAccount.accountId\r\n      }\r\n    \r\n  }\r\n  getDigitalsignById(accountId) {\r\n    this.api.getDigitalsignById(this.accountId).subscribe((resp) => {\r\n      console.log(resp)\r\n        console.log(resp[0].fileUrl);\r\n       this.imageUrl = resp[0].fileUrl\r\n      this.loader.close();\r\n    }, (err: any) => {\r\n      // this.loader.close();\r\n    }); \r\n  }\r\n\r\n  \r\n\r\n}\r\n","<div fxLayoutAlign=\"end stretch\" mat-dialog-close class=\"close\"><mat-icon>close</mat-icon></div>\r\n<div class=\"approval-details\">\r\n <fieldset>\r\n  <legend visible=\"true\" clas=\"paraFont\">Digital Signing</legend>\r\n </fieldset>\r\n <mat-card class=\"card\">\r\n    <div>\r\n        <div>\r\n            <img [src]=\" this.imageUrl\" alt=\"No Image\">\r\n        </div>\r\n       \r\n    </div>\r\n </mat-card>\r\n<p class=\"editButton\" mat-dialog-close \r\n[routerLink]=\"[\r\n'/home/application/digital-sign/options/',\r\naccountId]\">Edit</p>\r\n</div>","import { ChangeDetectorRef, Component, OnInit } from '@angular/core';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\r\nimport { Router } from '@angular/router';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport {\r\n  ApexNonAxisChartSeries,\r\n  ApexPlotOptions,\r\n  ApexChart,\r\n  ChartComponent,\r\n  ApexAxisChartSeries,\r\n  ApexFill,\r\n  ApexStroke,\r\n  ApexYAxis,\r\n  ApexTooltip,\r\n  ApexMarkers,\r\n  ApexXAxis\r\n\r\n} from \"ng-apexcharts\";\r\nimport { UrlService } from '../../url.service';\r\n\r\nimport { FinancialDetailsSummaryComponent } from '../financial-details-summary/financial-details-summary.component';\r\nimport { SecuredDraftSummaryComponent } from '../secured-draft-summary/secured-draft-summary.component';\r\nimport { UnsecuredDraftSummaryComponent } from '../unsecured-draft-summary/unsecured-draft-summary.component';\r\n\r\nexport type ChartOptions = {\r\n  series: ApexNonAxisChartSeries;\r\n  chart: ApexChart;\r\n  labels: string[];\r\n  plotOptions: ApexPlotOptions;\r\n  series1: ApexAxisChartSeries;\r\n  \r\n  xaxis: ApexXAxis;\r\n  yaxis: ApexYAxis | ApexYAxis[];\r\n\r\n  stroke: ApexStroke;\r\n  markers: ApexMarkers;\r\n  fill: ApexFill;\r\n  tooltip: ApexTooltip;\r\n\r\n};\r\n\r\n\r\nexport type ChartOptions1 = {\r\n  series1: ApexNonAxisChartSeries;\r\n  chart1: ApexChart;\r\n  labels1: string[];\r\n  plotOptions1: ApexPlotOptions;\r\n  \r\n  \r\n  xaxis1: ApexXAxis;\r\n  yaxis1: ApexYAxis | ApexYAxis[];\r\n\r\n  stroke1: ApexStroke;\r\n  markers1: ApexMarkers;\r\n  fill1: ApexFill;\r\n  tooltip1: ApexTooltip;\r\n\r\n};\r\n\r\n@Component({\r\n  selector: 'app-view-summary',\r\n  templateUrl: './view-summary.component.html',\r\n  styleUrls: ['./view-summary.component.scss']\r\n})\r\n\r\nexport class ViewSummaryComponent implements OnInit {\r\n  accountId:any;\r\n  public chartOptions: Partial<ChartOptions> | any;\r\n  public chartOptions1: Partial<ChartOptions1>|any;\r\n  selectedYear: number;\r\n  years: number[] = [];\r\n  curdate: string;\r\n  financialdata: any;\r\n  secureOverdraft:any;\r\n  unsecureoverdraftdata: any;\r\n  secured: any;\r\n  previousUrl: string = '';\r\n  income: any;\r\n  exepse: any;\r\n\r\n\r\n  constructor(private router: Router,private urlService:UrlService,private api: ApiService, private ls: LocalStoreService ,private cdr:ChangeDetectorRef) {\r\n    this.selectedYear = new Date().getFullYear();\r\n    this.curdate = new Date().getDay()+'/'+(new Date().getMonth() + 1).toString() + '/' + new Date().getFullYear().toString();\r\n\r\n  \r\n  }\r\n \r\n  \r\n  ngOnInit(): void {\r\n\r\n    this.cdr.markForCheck()\r\n    \r\n    this.accountId=this.ls.getItem('accountId');\r\n    this.getViewSummary();\r\n    \r\n    this.urlService.previousUrl$\r\n    .subscribe((previousUrl: string) => {\r\n      this.previousUrl = previousUrl\r\n    });\r\n    \r\n  }\r\n  \r\n  \r\n  goBack() {\r\n    this.router.navigate([`${this.previousUrl}`]);\r\n  }\r\n\r\n  limitEntryStageSummary(){\r\n    this.router.navigate([`/home/application/enrichment/list/${this.accountId}`]);\r\n  }\r\n\r\n  // goto(){\r\n  //   this.router.navigate([`/home/application/limit-entry-stage/list/${this.accountId}`]);\r\n  // }\r\n\r\n  getViewSummary(){\r\n    this.api.getLimitEntrySummary(this.accountId).subscribe(result=>\r\n      {\r\n\r\n        console.log(\"result\",result.securedOverdraftList);\r\n        this.secureOverdraft=result;\r\n        console.log(\"result\",result);\r\n        this.secureOverdraft=result.securedOverdraftList;\r\n\r\n        this.financialdata=result.financialDetails;\r\n        this.secured = result.securedOverdraftList;\r\n        this.unsecureoverdraftdata=result.unsecuredOverdraft;\r\n        console.log(\"secureOverdraft::\",this.secureOverdraft);\r\n        console.log(\"financialdata:\",this.financialdata)\r\n        console.log(\"unsecureoverdraftdata:\",this.unsecureoverdraftdata);\r\n        this.income = this.financialdata.applicantTotalIncome;\r\n        this.exepse = this.financialdata.applicantTotalExpense;\r\n        this.chartOptions = {\r\n          series: [48],\r\n          \r\n          chart: {\r\n            \r\n            height: 200,\r\n            type: \"radialBar\"\r\n          },\r\n          plotOptions: {\r\n            radialBar: {\r\n              hollow: {\r\n                size: \"70%\"\r\n              }\r\n            }\r\n          },\r\n          labels: ['saved']\r\n        };\r\n        // chart 2\r\n        \r\n       this.chartOptions1 = {\r\n        series1: [\r\n          {\r\n            name: \"Income :\"+ this.income,\r\n            type: \"line\",\r\n            data: [40,55, 50, 70, 65, 68, 50, 45, 35, 30, 38, 40]\r\n          },\r\n         \r\n          {\r\n            name: \"Expenses :\"+ this.exepse,\r\n            type: \"line\",\r\n            data: [55, 30, 25, 45, 46, 47, 48, 52, 44, 35, 30]\r\n          }\r\n        ],\r\n        chart1: {\r\n          height: 220,\r\n          type: \"line\"\r\n        },\r\n        stroke1: {\r\n          curve: \"smooth\"\r\n        },\r\n        fill1: {\r\n          type: \"solid\",\r\n          opacity: [0.35, 1]\r\n        },\r\n        labels1: [\r\n          \"JAN\",\r\n          \"\",\r\n          \"FEB\",\r\n          \"\",\r\n          \"MAR\",\r\n          \"\",\r\n          \"APR\",\r\n          \"\",\r\n          \"MAY \",\r\n          \"\",\r\n          \"JUN\"\r\n        ],\r\n        // markers1: {\r\n          // size: 0\r\n        // },\r\n        yaxis1: [\r\n          {\r\n            title: {\r\n              text: \"\"\r\n            }\r\n          },\r\n           ],\r\n        xaxis1: {\r\n          labels: {\r\n            trim: false\r\n          }\r\n        },\r\n       \r\n    \r\n       }\r\n    //     console.log(this.financialdata)\r\n    //     console.log(this.financialdata.employmentType);\r\n    //     console.log(this.financialdata.employmentCategory);\r\n    //     this.secureOverdraft.forEach(element => {\r\n    //   console.log(element);\r\n    //  console.log (element.accountId);\r\n    //  console.log ( element.attributes);\r\n    //  console.log (element.availableLinkageAccount);\r\n      \r\n    //     });\r\n    //     // this.secureOverdraft=result;\r\n    //     // console.log(\"secureOverdraft\",this.secureOverdraft.securedOverdraftList);\r\n    //     // this.financialdata=result;\r\n    //     // this.unsecureoverdraftdata;\r\n      })\r\n  }\r\n\r\n  \r\n}","<div>\r\n    <div fxLayout=\"row\">\r\n        <div fxFlex=\"100\">\r\n            <div class=\"propic text-center\">\r\n                <img src=\"assets/images/svg/undraw_secure_files_re_6vdh.svg\" alt=\"\" class=\"w-90\" />\r\n            </div>\r\n            <div class=\"profile-title text-center mt-8\">\r\n                <div class=\"main-title\"><b>Limit Entry Stage</b></div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<!-- Secured -->\r\n\r\n\r\n\r\n<div class=\"full-width\" *ngIf=\"secureOverdraft!=null\">\r\n        <div fxLayout=\"row\">\r\n            <h4 class=\"paraFont\">Secured Overdraft Details</h4>\r\n        </div>\r\n\r\n<div class=\"fullcard\">\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"center center\">\r\n        <div fxFlex=\"100%\">\r\n            <mat-card class=\"chequecard\" >\r\n                <mat-card-content>\r\n                    <div class=\"full-width\" >\r\n                            <div fxLayout=\"column\" fxLayoutGap=\"6%\" fxLayoutAlign=\"space-between none\">\r\n                                    <div fxLayout=\"row wrap\" class=\"flex-container stretch\">\r\n                                        <ng-container>\r\n                                            <div fxFlex fxFlex.xs=\"100%\" class=\"inputCardclass\">\r\n                                                    <mat-card class=\"inputCard\" *ngFor=\"let secure of secureOverdraft;let i=index\">\r\n                                                        <mat-hint class=\"headingText\">Collateral / Reference Number </mat-hint> <mat-hint class=\"headingText\">{{secure?.id}}</mat-hint><br><br>\r\n                                                     <div fxLayout=\"row wrap\" *ngIf=\"secure?.collateralType!=null\">   <mat-icon class=\"homeicon\" aria-hidden=\"false\" aria-label=\"Example home icon\">home</mat-icon>\r\n                                                        <mat-hint class=\"valueText\">{{secure?.collateralType}}</mat-hint><br> </div>\r\n                                                         <div fxLayout=\"column\" fxLayoutGap=\"6%\" fxLayoutAlign=\"space-between none\">\r\n                                                        <div fxLayout=\"row wrap\" class=\"flex-container stretch\">\r\n                                                            <ng-container>\r\n                                                                <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                                                    <mat-hint class=\"headingText\">Collateral Value</mat-hint><br>\r\n                                                                    <mat-hint class=\"valueText\">{{secure?.collateralValue}}</mat-hint></div>\r\n                                                                <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                                                    <mat-hint class=\"headingText\">Available Linkage Amount</mat-hint><br>\r\n                                                                    <mat-hint class=\"valueText\">{{secure?.availableLinkageAccount}}  </mat-hint>\r\n                                                                </div>\r\n                                                                <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                                                    <mat-hint class=\"headingText\">Overdraft Limit Amount</mat-hint><br>\r\n                                                                    <mat-hint class=\"valueText\">{{secure?.overdraftLimitAmount}} </mat-hint>\r\n                                                                </div>\r\n                                                            </ng-container>\r\n                                                        </div>\r\n                                                        <div fxLayout=\"row wrap\" class=\"flex-container stretch\">\r\n                                                            <ng-container>\r\n                                                                <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                                                    <mat-hint class=\"headingText\">Final Rate</mat-hint><br>\r\n                                                                    <mat-hint class=\"valueText\">{{secure?.finalAmount}}</mat-hint></div>\r\n                                                             \r\n                                                            </ng-container>\r\n                                                        </div>\r\n                                                      \r\n                                                        </div>\r\n                                                </mat-card>\r\n                                            </div>\r\n                                         \r\n                                        </ng-container>\r\n                                    </div>     \r\n                            </div>\r\n                    </div>\r\n                </mat-card-content>\r\n                </mat-card>\r\n                \r\n            </div>  \r\n         </div>\r\n </div>\r\n </div>\r\n<br>\r\n\r\n    <!-- unsecured-draft -->\r\n    <div fxLayout=\"row\">\r\n        <h4 class=\"paraFont\">Unsecured Overdraft Details</h4>\r\n    </div>\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"center center\">\r\n        <div fxFlex=\"100%\">\r\n            <mat-card class=\"chequecard\">\r\n                <mat-card-content>\r\n                    <div class=\"full-width\" >\r\n                            <div fxLayout=\"column\" fxLayoutGap=\"6%\" fxLayoutAlign=\"space-between none\">\r\n                                    <div fxLayout=\"row wrap\" class=\"flex-container stretch\">\r\n                                        <ng-container>\r\n                                            <div fxFlex=\"30%\" fxFlex.xs=\"100%\">\r\n                                                <mat-hint class=\"headingText\">Limit ID</mat-hint>\r\n                                                <br>\r\n                                                <mat-hint class=\"valueText\">{{unsecureoverdraftdata?.limitId}}</mat-hint>\r\n                                            </div>\r\n                                            <div fxFlex=\"30%\" fxFlex.xs=\"100%\">\r\n                                                <mat-hint class=\"headingText\">Overdraft Limit Amount</mat-hint>\r\n                                                <br>\r\n                                                <mat-hint class=\"valueText\">{{unsecureoverdraftdata?.overdraftCurrency}} {{unsecureoverdraftdata?.overdraftLimitAmount}} </mat-hint>\r\n                                            </div>\r\n                                            <div fxFlex=\"30%\" fxFlex.xs=\"100%\" *ngIf = \"unsecureoverdraftdata?.renewPeriod != null\">\r\n                                                <mat-hint class=\"headingText\">Renew Period</mat-hint>\r\n                                                <br>\r\n                                                <mat-hint class=\"valueText\">{{unsecureoverdraftdata?.renewPeriod}}</mat-hint>\r\n                                            </div>\r\n                                            <div fxFlex=\"30%\" fxFlex.xs=\"100%\" *ngIf = \"unsecureoverdraftdata?.overdraftCurrency && unsecureoverdraftdata?.renewalAmount != null\">\r\n                                                <mat-hint class=\"headingText\">Renewal Amount</mat-hint>\r\n                                                <br>\r\n                                                <mat-hint class=\"valueText\">{{unsecureoverdraftdata?.overdraftCurrency}} {{unsecureoverdraftdata?.renewalAmount}} </mat-hint>\r\n                                            </div>\r\n                                        </ng-container>\r\n                                    </div>\r\n                            </div>\r\n                    </div>\r\n                </mat-card-content>\r\n            </mat-card>\r\n        </div>\r\n    </div>\r\n<br>\r\n    <!-- financial-details-summary -->\r\n    <div class=\"fullcard\">\r\n        <div fxLayout=\"row\">\r\n            <h4 class=\"paraFont\">Financial Details </h4>\r\n        </div>\r\n        <!-- fxLayoutAlign=\"center center\" -->\r\n        <div fxLayout=\"row\"  fxLayoutGap=\"2%\" >\r\n     \r\n       <mat-card class=\"expenseCard\">\r\n          <mat-hint class=\"valueText\">Assets and Liabilities</mat-hint>\r\n          <h6 class=\"headingText\"> Last Updated on   {{financialdata?.lastUpdatedon}}</h6>\r\n          <apx-chart\r\n            [labels]=\"chartOptions.labels\"\r\n            [series]=\"chartOptions.series\"\r\n            [chart]=\"chartOptions.chart\"\r\n            [plotOptions]=\"chartOptions.plotOptions\">\r\n        </apx-chart>\r\n\r\n\r\n       </mat-card>\r\n\r\n       <mat-card class=\"incomeCard\"> \r\n        <mat-hint class=\"valueText\">Income and Expenses</mat-hint>\r\n          <apx-chart\r\n          [series]=\"chartOptions1.series1\"\r\n          [chart]=\"chartOptions1.chart1\"\r\n          [yaxis]=\"chartOptions1.yaxis1\"\r\n          [xaxis]=\"chartOptions1.xaxis1\"\r\n          [labels]=\"chartOptions1.labels1\"\r\n          [stroke]=\"chartOptions1.stroke1\" \r\n          [markers]=\"chartOptions1.markers1\"\r\n          [fill]=\"chartOptions1.fill1\"\r\n          [tooltip]=\"chartOptions1.tooltip1\"\r\n        ></apx-chart>\r\n       </mat-card>\r\n\r\n    </div>\r\n<mat-card *ngIf=\"financialdata\">\r\n    <div  fxLayout=\"row wrap\" >\r\n        <mat-icon  class=\"accountIcon\" >account_circle</mat-icon>\r\n        <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n        <mat-hint class=\"valueTexting\">{{financialdata?.designation}}</mat-hint>\r\n        <br>\r\n        <mat-hint class=\"headingTexting\">Emp ID {{financialdata?.employeeNumber}} . {{financialdata?.officeName}}</mat-hint>\r\n        </div>\r\n        <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n        <mat-hint class=\"headingText\">Employment Type</mat-hint>\r\n        <br>\r\n        <mat-hint class=\"valueText\">{{financialdata?.employmentType}}</mat-hint>\r\n        </div>\r\n        <div fxFlex=\"20%\" fxFlex.xs=\"100%\">\r\n        <mat-hint class=\"headingText\">Employment Category</mat-hint>\r\n        <br>\r\n        <mat-hint class=\"valueText\">{{financialdata?.employmentCategory}}</mat-hint>\r\n    </div>\r\n</div>\r\n\r\n\r\n</mat-card>\r\n<br>\r\n<div fxLayout=\"row\">\r\n    <div fxFlex=\"100\">\r\n        <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\" fxLayoutGap=\"16x\" class=\"mt-32\">\r\n            <button mat-button rounded color=\"grey\" (click)=\"goBack()\">\r\n                Back\r\n            </button>\r\n            <button mat-raised-button color=\"primary\" type=\"submit\" (click)=limitEntryStageSummary()>\r\n                Done\r\n            </button>\r\n        </div>\r\n    </div>\r\n</div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { AccountService } from '../../account.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { UrlService } from '../../url.service';\r\n\r\n@Component({\r\n  selector: 'app-approval-details',\r\n  templateUrl: './approval-details.component.html',\r\n  styleUrls: ['./approval-details.component.scss']\r\n})\r\nexport class ApprovalDetailsComponent implements OnInit {\r\n  approvalForm: FormGroup;\r\n  accountId: any;\r\n  isEdit:boolean = false;\r\n  app: any;\r\n  previousUrl: string = '';\r\n  arrayAccountType: string[];\r\n  arrayAccountCurrency: string[];\r\n  arrayUserRecomendation: string[];\r\n  userName: string;\r\n  accountInfo: any;\r\n  constructor(private router: Router,\r\n    private snack: MatSnackBar,private urlService:UrlService,private accountService: AccountService, private formBuilder: FormBuilder, private api: ApiService, private ls: LocalStoreService) { }\r\n\r\n\r\n  ngOnInit(): void {\r\n    this.userName = localStorage.getItem('userName');\r\n    this.accountId = this.ls.getItem('accountId');\r\n    this.accountInfo = this.ls.getItem('EDIT-CREATEACCCIF');\r\n    if(this.accountInfo){\r\n      this.accountId=this.accountInfo.businessProductAccount.accountId\r\n    }\r\n    setTimeout(() => {\r\n      this.getAccountDetailsInfo(this.accountId);\r\n    }, 1);\r\n    \r\n    this.getAccountType(\"account_type\");\r\n    this.getAccountCurrency(\"currency\");\r\n    this.getUserRecomendation(\"user_recomendation\")\r\n    this.urlService.previousUrl$\r\n    .subscribe((previousUrl: string) => {\r\n        this.previousUrl = previousUrl\r\n    });\r\n\r\n    // this.approvalForm.get('accountType').disable();\r\n    // this.approvalForm.get('accountBranch').disable();\r\n    // this.approvalForm.get('productAccountId').disable();\r\n    // this.approvalForm.get('businessProductName').disable();\r\n  }\r\n\r\n  buildAccountForm(item) {\r\n    this.approvalForm = this.formBuilder.group({\r\n      accountId: [item ? item.accountId : null,],\r\n      accountType: [item ? item.accountType : '',],\r\n      businessProductName: [item ? item.businessProductName : '',],\r\n      productCode: [item ? item.businessProductName : '',],\r\n      description: [item ? item.description : '',],\r\n      accountBranch: [item ? item.accountBranch : '',],\r\n      accountCurrency: [item ? item.accountCurrency : '',],\r\n      applicationDate: [item ? item.applicationDate : '',],\r\n      fundTheAccount: [item ? item.fundTheAccount : '',],\r\n      fundBy: [item ? item.fundBy : '',],\r\n      amount: [item ? item.amount : '',],\r\n      overDraftRequested: [item ? item.overDraftRequested : '',],\r\n      productDescription: [item ? item.productDescription : '',],\r\n      userRecommendation: [item ? item.userRecommendation : '',],\r\n      createdBy :[this.userName],\r\n    });\r\n\r\n  }\r\n\r\n  getAccountDetailsInfo(accountId) {\r\n    this.api.approvalAccountFetch(accountId).subscribe(resp => {\r\n      console.log(\"approval details\", resp);\r\n      this.buildAccountForm(resp);\r\n      this.app=resp\r\n      this.isEdit = true;\r\n    }, (err: any) => {\r\n      console.log(err);\r\n      this.snack.open('Not able to connect to server!', 'INTERNAL SERVER ERROR', {\r\n        duration: 4000,\r\n        verticalPosition: 'top',\r\n        horizontalPosition: 'right'\r\n      });\r\n    })\r\n  }\r\n\r\n  goBack() {\r\n    // this.router.navigate([`${this.previousUrl}`]);\r\n    this.router.navigate([`home/application/approval/list/${this.accountId}`]);\r\n\r\n  }\r\n\r\n  getAccountCurrency(key: string) {\r\n    this.api.getDropDownValues(key).subscribe((data) => {\r\n      this.arrayAccountCurrency = data;\r\n    });\r\n  }\r\n\r\n  getAccountType(key: string) {\r\n    this.api.getDropDownValues(key).subscribe((data) => {\r\n      this.arrayAccountType = data;\r\n    });\r\n  }\r\n  \r\n  getUserRecomendation(key: string) {\r\n    this.api.getDropDownValues(key).subscribe((data) => {\r\n      this.arrayUserRecomendation = data;\r\n    });\r\n  }\r\n\r\n  onSubmit(form) {\r\n    console.log(form);\r\n    // this.router.navigate([`/home/application/digital-sign/home/${this.accountId}`]);\r\n    this.api.approvalUpdate(form).subscribe(resp => {\r\n      console.log(\"resp after updating\", resp)\r\n      this.ls.setItem('approvalStage', true);\r\n      this.ls.setItem('APPROVAL_DETAILS_DONE', true);\r\n      \r\n      this.accountService.refresh.next();\r\n      this.snack.open('Approval Details Saved!', 'OK', {\r\n        duration: 4000,\r\n        verticalPosition: 'top',\r\n        horizontalPosition: 'right'\r\n      });\r\n      this.router.navigate([`/home/application/digital-sign/home/${this.accountId}`]);\r\n      \r\n\r\n    }) \r\n  }\r\n\r\n  done() {\r\n    this.ls.removeItem('appEntryStage');\r\n    this.ls.removeItem('ACC_DONE');\r\n    this.ls.removeItem('ACC_OPEN_DONE');\r\n    this.ls.removeItem('ACC_SERVICE_DONE');\r\n    this.ls.removeItem('ACC_MANDATE_DONE');\r\n    this.ls.removeItem('ACC_NOMINEE_DONE');\r\n\r\n    this.ls.removeItem('limitEntryStage');\r\n    this.ls.removeItem('LIMIT_SECURED_DONE');\r\n    this.ls.removeItem('LIMIT_UNSECURED_DONE');\r\n    this.ls.removeItem('LIMIT_FIN_DONE');\r\n\r\n    // Parent 3\r\n    this.ls.removeItem('enrichmentStage');\r\n    // Subnave of parent 3\r\n    this.ls.removeItem('ENRICHMENT_CHARGES_DONE');\r\n    this.ls.removeItem('ENRICHMENT_INTEREST_DONE');\r\n\r\n    // PArent 4\r\n    this.ls.removeItem('assessmentStage');\r\n    // Subnave of parent 4\r\n    this.ls.removeItem('ASSESSMENT_QA_DONE');\r\n    this.ls.removeItem('ASSESSMENT_REPORT_DONE');\r\n    // PArent 5\r\n    this.ls.removeItem('fundingStage');\r\n    // Subnave of parent 5\r\n    this.ls.removeItem('FUNDING_INI_DONE');\r\n\r\n    // Parent 6\r\n    this.ls.removeItem('approvalStage');\r\n    // Parent 6 childs nav\r\n    this.ls.removeItem('APPROVAL_DETAILS_DONE');\r\n    this.ls.removeItem('accountId');\r\n    this.ls.removeItem('eSignStage');\r\n    this.ls.removeItem('cId');\r\n    this.accountService.refresh.next();\r\n  }\r\n\r\n  ngOnDestroy(){\r\n    this.isEdit = false;\r\n  }\r\n\r\n}","<div fxLayout=\"row wrap\" class=\"matcard-size\">\r\n    <div fxFlex=\"100\">\r\n      <div class=\"propic text-center\">\r\n        <img\r\n          src=\"assets/images/svg/undraw_approve_qwp7.svg\"\r\n          alt=\"\"\r\n          class=\"w-90\"\r\n        />\r\n      </div>\r\n      <div class=\"profile-title text-center mt-8\">\r\n        <div class=\"main-title1\">Approval Details</div>\r\n      </div>\r\n    </div>\r\n    <div fxFlex=\"100\" class=\"mt-24\">\r\n      <mat-card class=\"p-0\">\r\n    <mat-card-title>\r\n      <fieldset>\r\n      <legend visible=\"true\">Approval Details</legend>\r\n      </fieldset>\r\n    </mat-card-title>\r\n      <div class=\"mt-24\"></div>\r\n  \r\n      <div *ngIf=\"approvalForm\" >\r\n        <form [formGroup]=\"approvalForm\">\r\n        <mat-card-content>\r\n          <div fxLayout=\"row\" fxLayoutGap=\"25px\">\r\n            <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-1\">\r\n              <div class=\"pb-1\" [ngClass]=\"{'readonly-wrapper' : isEdit}\">\r\n                <mat-form-field appearance=\"outline\" class=\"full-width\" [ngClass]=\"{'readonly-block' : isEdit}\">\r\n                  <mat-label>Account Type</mat-label>\r\n                  <mat-select name=\"account\" formControlName=\"accountType\">\r\n                    <mat-option *ngFor=\"let accountType of arrayAccountType\" [value]=\"accountType\"> \r\n                      {{accountType}} \r\n                    </mat-option> \r\n                  </mat-select>\r\n                </mat-form-field>\r\n              </div>\r\n  \r\n              <div class=\"pb-1\" [ngClass]=\"{'readonly-wrapper' : isEdit}\">\r\n                <mat-form-field appearance=\"outline\" class=\"full-width\"  [ngClass]=\"{'readonly-block' : isEdit}\">\r\n                  <mat-label>Product Code</mat-label>\r\n                  <input\r\n                    matInput\r\n                    name=\"account_branch\"\r\n                    placeholder=\"Product Image\"\r\n                    formControlName=\"productCode\" \r\n                    readonly\r\n                  />\r\n                  <!-- <mat-icon matSuffix>account_balance</mat-icon> -->\r\n                </mat-form-field>\r\n              </div>\r\n  \r\n              <div class=\"pb-1\" [ngClass]=\"{'readonly-wrapper' : isEdit}\">\r\n                <mat-form-field appearance=\"outline\" class=\"full-width\"  [ngClass]=\"{'readonly-block' : isEdit}\">\r\n                  <mat-label>Account Currency</mat-label>\r\n                  <mat-select name=\"owner\" formControlName=\"accountCurrency\" disabled>\r\n                    <mat-option *ngFor=\"let accountCurrency of arrayAccountCurrency\" [value]=\"accountCurrency\"> \r\n                      {{accountCurrency}} \r\n                    </mat-option> \r\n                  </mat-select>\r\n                </mat-form-field>\r\n              </div>\r\n  \r\n              <div class=\"pb-1\" >\r\n                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                  <mat-label>User Recomendation</mat-label>\r\n                  <mat-select name=\"owner\" placeholder=\"Recommended for Approval\" formControlName=\"userRecommendation\"  >\r\n                    <mat-option *ngFor=\"let userRecommendation of arrayUserRecomendation\" [value]=\"userRecommendation\"> \r\n                      {{userRecommendation}} \r\n                    </mat-option> \r\n                  </mat-select>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n  \r\n            <div fxFlex=\"100\" fxFlex.gt-xs=\"50\">\r\n              <div class=\"pb-1\" [ngClass]=\"{'readonly-wrapper' : isEdit}\">\r\n                <mat-form-field class=\"full-width\" appearance=\"outline\" [ngClass]=\"{'readonly-block' : isEdit}\">\r\n                  <mat-label>Account Branch</mat-label>\r\n                  <input\r\n                    matInput\r\n                    name=\"business\" readonly\r\n                    placeholder=\"Business Product Name\" formControlName=\"accountBranch\"\r\n                  />\r\n                  <!-- <mat-icon matSuffix>branding_watermark</mat-icon> -->\r\n                </mat-form-field>\r\n              </div>\r\n              <!-- <div class=\"pb-1\" [ngClass]=\"{'readonly-wrapper' : isEdit}\">\r\n                <mat-form-field class=\"full-width\" appearance=\"outline\" >\r\n                  <mat-label>Product Name</mat-label>\r\n                  <input\r\n                    matInput\r\n                    name=\"business\"\r\n                    readonly\r\n                    placeholder=\"Business Product Name\" formControlName=\"businessProductName\" [ngClass]=\"{'readonly-block' : isEdit}\"\r\n                  />\r\n                  <mat-icon matSuffix>branding_watermark</mat-icon>\r\n                </mat-form-field>\r\n              </div>-->\r\n            </div>\r\n          </div>\r\n        </mat-card-content>\r\n      </form>\r\n    </div>\r\n      <!-- if server error -->\r\n      <mat-card  *ngIf=\"!app\">\r\n        <form >\r\n        <mat-card-content>\r\n          <div fxLayout=\"row\" fxLayoutGap=\"25px\">\r\n            <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-1\">\r\n              <div class=\"pb-1\" [ngClass]=\"{'readonly-wrapper' : isEdit}\">\r\n                <mat-form-field appearance=\"outline\" class=\"full-width\" [ngClass]=\"{'readonly-block' : isEdit}\">\r\n                  <mat-label>Account Type</mat-label>\r\n                  <mat-select name=\"account\" >\r\n                    <mat-option *ngFor=\"let accountType of arrayAccountType\" [value]=\"accountType\"> \r\n                      {{accountType}} \r\n                    </mat-option> \r\n                  </mat-select>\r\n                </mat-form-field>\r\n              </div>\r\n  \r\n              <div class=\"pb-1\" [ngClass]=\"{'readonly-wrapper' : isEdit}\">\r\n                <mat-form-field appearance=\"outline\" class=\"full-width\"  [ngClass]=\"{'readonly-block' : isEdit}\">\r\n                  <mat-label>Product Code</mat-label>\r\n                  <input\r\n                    matInput\r\n                    name=\"account_branch\"\r\n                    placeholder=\"Product Image\"\r\n                    value=\"\"  readonly\r\n                  />\r\n                  <!-- <mat-icon matSuffix>account_balance</mat-icon> -->\r\n                </mat-form-field>\r\n              </div>\r\n  \r\n              <div class=\"pb-1\" [ngClass]=\"{'readonly-wrapper' : isEdit}\">\r\n                <mat-form-field appearance=\"outline\" class=\"full-width\"  [ngClass]=\"{'readonly-block' : isEdit}\">\r\n                  <mat-label>Account Currency</mat-label>\r\n                  <mat-select name=\"owner\"  disabled>\r\n                    <mat-option *ngFor=\"let accountCurrency of arrayAccountCurrency\" [value]=\"accountCurrency\"> \r\n                      {{accountCurrency}} \r\n                    </mat-option>\r\n                  </mat-select>\r\n                </mat-form-field>\r\n              </div>\r\n  \r\n              <div class=\"pb-1\" >\r\n                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                  <mat-label>User Recomendation</mat-label>\r\n                  <mat-select name=\"owner\" placeholder=\"Recommended for Approval\" >\r\n                    <mat-option *ngFor=\"let userRecommendation of arrayUserRecomendation\" [value]=\"userRecommendation\"> \r\n                      {{userRecommendation}} \r\n                    </mat-option> \r\n                  </mat-select>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n  \r\n            <div fxFlex=\"100\" fxFlex.gt-xs=\"50\">\r\n              <div class=\"pb-1\" [ngClass]=\"{'readonly-wrapper' : isEdit}\">\r\n                <mat-form-field class=\"full-width\" appearance=\"outline\" [ngClass]=\"{'readonly-block' : isEdit}\">\r\n                  <mat-label>Account Branch</mat-label>\r\n                  <input\r\n                    matInput\r\n                    name=\"business\" readonly\r\n                    placeholder=\"Business Product Name\" \r\n                  />\r\n                  <!-- <mat-icon matSuffix>branding_watermark</mat-icon> -->\r\n                </mat-form-field>\r\n              </div>\r\n  \r\n              <div class=\"pb-1\" [ngClass]=\"{'readonly-wrapper' : isEdit}\">\r\n                <mat-form-field class=\"full-width\" appearance=\"outline\" >\r\n                  <mat-label>Product Name</mat-label>\r\n                  <input\r\n                    matInput\r\n                    name=\"business\"\r\n                    readonly\r\n                    placeholder=\"Business Product Name\" [ngClass]=\"{'readonly-block' : isEdit}\"\r\n                  />\r\n                  <!-- <mat-icon matSuffix>branding_watermark</mat-icon> -->\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </mat-card-content>\r\n      </form>\r\n      </mat-card>\r\n    </mat-card>\r\n    </div>\r\n  \r\n    <div fxFlex=\"100\" class=\"mt-16\">\r\n      <button mat-button rounded class=\"Backbtn\" (click)=\"goBack()\">Back</button>\r\n      <span fxFlex></span>\r\n      <button mat-raised-button color=\"primary\" type=\"button\" class=\"Nextbtn\" (click)=\"onSubmit(approvalForm.value)\">Next</button>\r\n    </div>\r\n  </div>","import { ChangeDetectorRef, Component, OnInit } from '@angular/core';\r\nimport { FormArray, FormBuilder, FormGroup, ValidationErrors, ValidatorFn, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport * as moment from 'moment';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { AccountService } from '../../account.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { DataService } from 'app/shared/services/data.service';\r\nimport { Subscription } from 'rxjs';\r\nimport Swal from 'sweetalert2';\r\nimport { UrlService } from '../../url.service';\r\n\r\n@Component({\r\n  selector: 'app-financial-details',\r\n  templateUrl: './financial-details.component.html',\r\n  styleUrls: ['./financial-details.component.scss']\r\n})\r\nexport class FinancialDetailsComponent implements OnInit {\r\n  fincancialDetails: FormGroup;\r\n  accountId: any;\r\n  navSubscription: Subscription;\r\n  routeparams: any;\r\n  showEditOption: boolean = false;\r\n  disableNext: boolean = false;\r\n\r\n  loggedInUser: any = \"123456\";\r\n  previousUrl: string = '';\r\n  tomorrow = new Date();\r\n  incomeErrMsg: string;\r\n  ExpensesErrMsg: any;\r\n  LiabilitiesErrMsg: any;\r\n  assetErrMsg: string;\r\n  liabilitiesErrMsg: string;\r\n  expensesErrMsg: string;\r\n  arrayEmploymentType: string[];\r\n  arrayEmploymentCategory: string[];\r\n  applicantName: string;\r\n  accountInfo: any;\r\n\r\n  constructor(private formBuilder: FormBuilder, private cdr:ChangeDetectorRef,\r\n    private urlService: UrlService, private snack: MatSnackBar, private dataService: DataService, \r\n    private router: Router, private api: ApiService, private ls: LocalStoreService, \r\n    private accountService: AccountService) { \r\n    \r\n      this.tomorrow.setDate(this.tomorrow.getDate());\r\n    \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.accountId = this.ls.getItem('accountId');\r\n    this.accountInfo = this.ls.getItem('EDIT-CREATEACCCIF');\r\n    if(this.accountInfo){\r\n      this.accountId=this.accountInfo.businessProductAccount.accountId\r\n    }\r\n    this.applicantName = this.ls.getItem('NAME');\r\n    let isFinancialScreen: boolean = JSON.parse(this.ls.getItem('LIMIT_FIN_DONE'));\r\n    this.getEmploymentType(\"fin_employment_type\");\r\n    this.getEmploymentCategory(\"employment_category\");\r\n    this.urlService.previousUrl$\r\n      .subscribe((previousUrl: string) => {\r\n        this.previousUrl = previousUrl\r\n      });\r\n\r\n    if (this.accountId != null && isFinancialScreen) {\r\n      this.showEditOption = true;\r\n      this.getFinancialDetailsSummary();\r\n    } else {\r\n      this.showEditOption = false;\r\n      this.buildFinacialFormGroup();\r\n    }\r\n\r\n  }\r\n\r\n  getFinancialDetailsSummary() {\r\n    this.api.getFinancialDetails(this.accountId)\r\n      .subscribe((result: any) => {\r\n        console.log(result);\r\n        this.buildFinacialFormGroup(result);\r\n      })\r\n  }\r\n\r\n  buildFinacialFormGroup(data?) {\r\n    this.fincancialDetails = this.formBuilder.group({\r\n      // Financial Details\r\n      applicantName: [this.applicantName, Validators.required],\r\n      applicantTotalIncome: [data ? data.applicantTotalIncome : 0, Validators.required],\r\n      applicantTotalExpense: [data ? data.applicantTotalExpense : 0, Validators.required],\r\n      lastUpdatedon: [data ? new Date(data.lastUpdatedon) : ''],\r\n      limit_end_date: [data ? new Date(data.limit_end_date) : ''],\r\n      \r\n      // Employement Details\r\n      employmentType: [data ? data.employmentType : '', Validators.required],\r\n      employmentCategory: [data ? data.employmentCategory : '', Validators.required],\r\n      employeeNumber: [data ? data.employeeNumber : '', Validators.required],\r\n      officeName: [data ? data.officeName : '', Validators.required],\r\n      designation: [data ? data.designation : '', Validators.required],\r\n      employmentStartDate: [data ? new Date(data.employmentStartDate) : ''],\r\n      employmentEndDate: [data ? new Date(data.employmentEndDate) : ''],\r\n      \r\n      // Monthly Income\r\n      salary: [data ? data.salary : ''],\r\n      interestIncome: [data ? data.interestIncome : ''],\r\n      bonus: [data ? data.bonus : ''],\r\n      cashGifts: [data ? data.cashGifts : ''],\r\n      business: [data ? data.business : ''],\r\n      pension: [data ? data.pension : ''],\r\n      monthlyIncomeRentals: [data ? data.monthlyIncomeRentals : ''],\r\n      monthlyIncomeOthers: [data ? data.monthlyIncomeOthers : ''],\r\n      monthlyIncomeTotal: [data ? data.monthlyIncomeTotal : 0],\r\n            \r\n      // Monthly Expense\r\n      household: [data ? data.household : ''],\r\n      education: [data ? data.education : ''],\r\n      vehicleMaintenance: [data ? data.vehicleMaintenance : ''],\r\n      monthlyExpenseRentals: [data ? data.monthlyExpenseRentals : ''],\r\n      monthlyExpenseOthers: [data ? data.monthlyExpenseOthers : ''],\r\n      medical: [data ? data.medical : ''],\r\n      travel: [data ? data.travel : ''],\r\n      monthlyExpenseTotal: [data ? data.monthlyExpenseTotal : 0],\r\n      \r\n      // Annual Liability\r\n      propertyLoan: [data ? data.propertyLoan : ''],\r\n      vehicleLoan: [data ? data.vehicleLoan : ''],\r\n      personalLoans: [data ? data.personalLoans : ''],\r\n      overdraft: [data ? data.overdraft : ''],\r\n      cardOutstandings: [data ? data.cardOutstandings : ''],\r\n      liabilityOthers: [data ? data.liabilityOthers : ''],\r\n      liabilityTotal: [data ? data.liabilityTotal : 0],\r\n      \r\n      // Assets\r\n      savingDeposits: [data ? data.savingDeposits : ''],\r\n      properties: [data ? data.properties : ''],\r\n      automobiles: [data ? data.automobiles : ''],\r\n      fixedDeposits: [data ? data.fixedDeposits : ''],\r\n      lands: [data ? data.lands : ''],\r\n      assetOthers: [data ? data.assetOthers : ''],\r\n      stocks: [data ? data.stocks : ''],\r\n      assetTotal: [data ? data.assetTotal : 0],\r\n      \r\n      // accountId; -->need to get from other screens\r\n      accountId: this.accountId != null ? this.accountId : '',\r\n    }, {validator:(formGroup:FormGroup)=>{\r\n      return this.validateInputGroups(formGroup)\r\n    }\r\n  });\r\n\r\n  }\r\n  \r\n  validateInputGroups(formgroup:FormGroup) {\r\n    if(formgroup.controls[\"salary\"].value || formgroup.controls[\"interestIncome\"].value || \r\n    formgroup.controls[\"bonus\"].value || formgroup.controls[\"cashGifts\"].value || \r\n    formgroup.controls[\"business\"].value || formgroup.controls[\"pension\"].value || \r\n    formgroup.controls[\"monthlyIncomeRentals\"].value || formgroup.controls[\"monthlyIncomeOthers\"].value) {\r\n     \r\n      this.incomeErrMsg = null\r\n        this.disableNext = true;\r\n      \r\n    }\r\n    else {\r\n      this.incomeErrMsg = \"Entering any one field is mandatory for Monthly Income Section\";\r\n      this.disableNext = false;\r\n    }\r\n    \r\n    if(formgroup.controls[\"household\"].value || formgroup.controls[\"education\"].value ||\r\n    formgroup.controls[\"vehicleMaintenance\"].value || formgroup.controls[\"monthlyExpenseRentals\"].value ||\r\n    formgroup.controls[\"monthlyExpenseOthers\"].value || formgroup.controls[\"medical\"].value || \r\n    formgroup.controls[\"travel\"].value) {\r\n\r\n      this.ExpensesErrMsg = null;\r\n        this.disableNext = true;\r\n      \r\n    }\r\n    else {\r\n      this.ExpensesErrMsg = \"Entering any one field is mandatory for Monthly Expenses Section\";\r\n      this.disableNext = false;\r\n    }\r\n    \r\n    if(formgroup.controls[\"propertyLoan\"].value || formgroup.controls[\"vehicleLoan\"].value ||\r\n    formgroup.controls[\"personalLoans\"].value || formgroup.controls[\"overdraft\"].value ||\r\n    formgroup.controls[\"cardOutstandings\"].value || formgroup.controls[\"liabilityOthers\"].value) {\r\n      \r\n      this.LiabilitiesErrMsg = null;\r\n        this.disableNext = true;\r\n      \r\n    }\r\n    else {\r\n      this.LiabilitiesErrMsg = \"Entering any one field is mandatory for Annual Liabilities Section\";\r\n      this.disableNext = false;\r\n    }\r\n    \r\n    if(formgroup.controls[\"savingDeposits\"].value || formgroup.controls[\"properties\"].value ||\r\n    formgroup.controls[\"automobiles\"].value || formgroup.controls[\"fixedDeposits\"].value ||\r\n    formgroup.controls[\"lands\"].value || formgroup.controls[\"assetOthers\"].value || \r\n    formgroup.controls[\"stocks\"].value) {\r\n\r\n      this.assetErrMsg = null;\r\n        this.disableNext = true;\r\n      \r\n    }\r\n    else {\r\n      this.assetErrMsg = \"Entering any one field is mandatory for Asset Section\";\r\n      this.disableNext = false;\r\n    }\r\n  }\r\n  \r\n  onSubmit() {\r\n    let startDate = this.converDate(this.fincancialDetails.controls.employmentStartDate.value);\r\n    if(startDate && startDate!= \"Invalid date\"){\r\n    console.log(\"startDate\", startDate);\r\n    this.fincancialDetails.value['employmentStartDate'] = startDate;\r\n    }else{\r\n      this.fincancialDetails.value['employmentStartDate'] = null;\r\n    }\r\n    let endDate = this.converDate(this.fincancialDetails.controls.employmentEndDate.value);\r\n    if(endDate && endDate!= \"Invalid date\"){\r\n      console.log(\"startDate\", endDate);\r\n      this.fincancialDetails.value['employmentEndDate'] = endDate;\r\n    }else{\r\n      this.fincancialDetails.value['employmentEndDate'] = null;\r\n    }\r\n    \r\n    let lastUpdatedon = this.converDate(this.fincancialDetails.controls.lastUpdatedon.value);\r\n    if(lastUpdatedon && lastUpdatedon!= \"Invalid date\"){\r\n      console.log(\"startDate\", lastUpdatedon);\r\n      this.fincancialDetails.value['lastUpdatedon'] = lastUpdatedon;\r\n    }else{\r\n      this.fincancialDetails.value['lastUpdatedon'] = null;\r\n    }\r\n    \r\n\r\n\r\n\r\n    // this.fincancialDetails.value.controls.employmentEndDate=this.converDate(this.fincancialDetails.controls.employmentEndDate.value);\r\n    // this.fincancialDetails.value.controls.lastUpdatedon=this.converDate(this.fincancialDetails.controls.lastUpdatedon.value);\r\n    console.log(\"submit\", this.fincancialDetails.value);\r\n    //  let payload = {fincancialDetails:this.fincancialDetails.value, loggedInUser:this.loggedInUser};\r\n    // console.log(payload);\r\n    console.log(this.accountId)\r\n    console.log(this.fincancialDetails.value)\r\n    if (!this.fincancialDetails.value.applicantName || !this.fincancialDetails.value.employmentType || !this.fincancialDetails.value.employmentCategory) {\r\n      console.log(\"if--->\")\r\n      Swal.fire('Please Enter The Mandatory Fields !');\r\n      return false;\r\n    }\r\n    this.api.upsertfinancialDetails(this.fincancialDetails.value).subscribe(fincialResp => {\r\n\r\n      console.log(fincialResp);\r\n      this.snack.open('Financial Details Saved!', 'OK', {\r\n        duration: 4000,\r\n        verticalPosition: 'top',\r\n        horizontalPosition: 'right'\r\n      });\r\n\r\n      this.ls.setItem('limitEntryStage', 'true');\r\n      this.ls.setItem('LIMIT_FIN_DONE', true);\r\n      this.accountService.refresh.next();\r\n      // limit-entry-stage/view-summary\r\n      this.router.navigate([`/home/application/enrichment/list`, this.accountId]);\r\n\r\n    }, err => {\r\n      this.snack.open('Error Unable to Save!', 'OK', {\r\n        duration: 4000,\r\n        verticalPosition: 'top',\r\n        horizontalPosition: 'right'\r\n      });\r\n    })\r\n\r\n  }\r\n\r\n  goBack() {\r\n    // this.router.navigate([this.previousUrl]);\r\n    this.router.navigate([`/home/application/limit-entry-stage/list/${this.accountId}`]);\r\n\r\n  }\r\n\r\n  getEmploymentType(key: string) {\r\n    this.api.getDropDownValues(key).subscribe((data) => {\r\n      this.arrayEmploymentType = data;\r\n    });\r\n  }\r\n  getEmploymentCategory(key: string) {\r\n    this.api.getDropDownValues(key).subscribe((data) => {\r\n      this.arrayEmploymentCategory = data;\r\n    });\r\n  }\r\n  // date conversion\r\n  converDate(value) {\r\n    // let date = moment(value).format('YYYY-MM-DDThh:mm:ss');\r\n    let date = moment(value).format('YYYY-MMM-DD');\r\n    console.log(\"date\", date);\r\n    if (date)\r\n      return date;\r\n  }\r\n    \r\n  // Total Monthly Income\r\n  calculateTotalMonthlyIncome(value) {\r\n    let income:number = Number(value.salary) + Number(value.business) + \r\n    Number(value.interestIncome) + Number(value.pension) + \r\n    Number(value.bonus) + Number(value.monthlyIncomeOthers) + \r\n    Number(value.monthlyIncomeRentals) + Number(value.cashGifts);\r\n    \r\n    // this.fincancialDetails.controls.monthlyIncome.get('monthlyIncomeTotal').setValue(income);\r\n    this.fincancialDetails.controls.monthlyIncomeTotal.setValue(income);\r\n    this.cdr.markForCheck();\r\n    this.cdr.detectChanges();\r\n\r\n    this.calculateTotalIncomeAndExpense(this.fincancialDetails.value);\r\n  }\r\n\r\n  // Total Monthly Expense\r\n  calculateTotalMonthlyExpenses(value) {\r\n    let expense:number = Number(value.household) + Number(value.education) + \r\n      Number(value.vehicleMaintenance) + Number(value.monthlyExpenseOthers) + \r\n      Number(value.medical) + Number(value.travel) + \r\n      Number(value.monthlyExpenseRentals);\r\n\r\n    // this.fincancialDetails.controls.monthlyExpense.get('monthlyExpenseTotal').setValue(expense);\r\n    this.fincancialDetails.controls.monthlyExpenseTotal.setValue(expense);\r\n    this.cdr.markForCheck();\r\n    this.cdr.detectChanges();\r\n\r\n    this.calculateTotalIncomeAndExpense(this.fincancialDetails.value);\r\n  }\r\n\r\n  // Total Liabilities\r\n  calculateTotalLiabilities(value) {\r\n    let liability:number = Number(value.propertyLoan) + Number(value.personalLoans) + \r\n    Number(value.overdraft) + Number(value.vehicleLoan) + \r\n    Number(value.cardOutstandings) + Number(value.liabilityOthers);\r\n\r\n    // this.fincancialDetails.controls.annualLiability.get('liabilityTotal').setValue(liability);\r\n    this.fincancialDetails.controls.liabilityTotal.setValue(liability);\r\n    this.cdr.markForCheck();\r\n    this.cdr.detectChanges();\r\n    \r\n    this.calculateTotalIncomeAndExpense(this.fincancialDetails.value);\r\n  }\r\n\r\n  // Total Assets\r\n  calculateTotalAssets(value) {\r\n    let asset:number = Number(value.savingDeposits) + Number(value.properties) + \r\n    Number(value.fixedDeposits) + Number(value.stocks) + \r\n    Number(value.automobiles) + Number(value.lands) + Number(value.assetOthers);\r\n\r\n    // this.fincancialDetails.controls.assets.get('assetTotal').setValue(asset);\r\n    this.fincancialDetails.controls.assetTotal.setValue(asset);\r\n    this.cdr.markForCheck();\r\n    this.cdr.detectChanges();\r\n    \r\n    this.calculateTotalIncomeAndExpense(this.fincancialDetails.value);\r\n  }\r\n\r\n  // Total Income, Expense and Final Total\r\n  calculateTotalIncomeAndExpense(value) {\r\n\r\n    let totalIncome:number = (value.monthlyIncomeTotal*12) + value.assetTotal;\r\n    let totalExpense:number = (value.monthlyExpenseTotal*12) + value.liabilityTotal;\r\n\r\n    this.fincancialDetails.controls.applicantTotalIncome.setValue(totalIncome);\r\n    this.fincancialDetails.controls.applicantTotalExpense.setValue(totalExpense);\r\n    this.cdr.markForCheck();\r\n    this.cdr.detectChanges();\r\n   }\r\n\r\n  reset() {\r\n    this.fincancialDetails.reset();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.dataService.sendNavParam({});\r\n  }\r\n\r\n  letterOnly(event) {\r\n    var charCode = event.keyCode;\r\n            if ((charCode > 64 && charCode < 91) || (charCode > 96 && charCode < 123) || charCode == 8)\r\n                return true;\r\n            else\r\n                return false;\r\n  }\r\n  _keyPress(event: any) {\r\n    // console.log(\"key\",event);\r\n    const pattern = /[0-9]/;\r\n    let inputChar = String.fromCharCode(event.charCode);\r\n    if (!pattern.test(inputChar)) {\r\n        event.preventDefault();\r\n    }\r\n   }\r\n\r\n   \r\n\r\n}\r\n","<div class=\"matcard-size\">\r\n<div fxLayout=\"row\">\r\n  <div fxFlex=\"100\">\r\n    <div class=\"propic text-center\">\r\n      <img src=\"assets/images/svg/undraw_secure_files_re_6vdh.svg\" alt=\"\" class=\"w-90\" />\r\n    </div>\r\n    <div class=\"profile-title text-center mt-8\">\r\n      <div class=\"main-title1\">Financial Details</div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<div >\r\n  <form *ngIf=\"fincancialDetails\" [formGroup]=\"fincancialDetails\" >\r\n\r\n<div fxLayout=\"row\">\r\n  <div fxFlex=\"100\">\r\n    <mat-card class=\"p-0\">\r\n\r\n      <mat-card-title>\r\n        <fieldset>\r\n        <legend visible=\"true\">Financial Details</legend>\r\n        </fieldset>\r\n\r\n      </mat-card-title>\r\n      <mat-card-content>\r\n       \r\n         \r\n              <div fxLayout=\"row\" fxLayoutGap=\"25px\">\r\n                    <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-1\">\r\n                      <div class=\"pb-1\">\r\n                        <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                          <mat-label>Applicant Name</mat-label>\r\n                          <input\r\n                            matInput\r\n                            formControlName=\"applicantName\" readonly\r\n                            placeholder=\"Applicant Name\"\r\n                          />\r\n                        </mat-form-field>\r\n                      </div>\r\n\r\n                      <div class=\"pb-1\">\r\n                          <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                            <mat-label>Total Annual Income*</mat-label>\r\n                            <input\r\n                              matInput \r\n                              type=\"number\" readonly\r\n                              formControlName=\"applicantTotalIncome\"\r\n                              placeholder=\"Total Annual Income\"\r\n                            />\r\n                          </mat-form-field>\r\n                        </div>\r\n                      \r\n                    </div>\r\n                    <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-1\">\r\n                    \r\n                      <div class=\"pb-1\">\r\n                        <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                          <mat-label>Last Update On</mat-label>\r\n                          <input\r\n                            matInput\r\n                            formControlName=\"lastUpdatedon\"\r\n                            placeholder=\"Last Update On\"\r\n                            [matDatepicker]=\"appDatepicker\" readonly\r\n                            [max]=\"tomorrow\"\r\n                          />\r\n\r\n                          <mat-datepicker-toggle\r\n                            matSuffix\r\n                            [for]=\"appDatepicker\"\r\n                          ></mat-datepicker-toggle>\r\n                        </mat-form-field>\r\n                        <mat-datepicker #appDatepicker></mat-datepicker>\r\n                      </div>\r\n\r\n                       <div class=\"pb-1\">\r\n                          <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                            <mat-label>Total Annual Expenses*</mat-label>\r\n                            <input\r\n                              matInput \r\n                              type=\"number\" readonly\r\n                              formControlName=\"applicantTotalExpense\"\r\n                              placeholder=\"Total Annual Expenses\"\r\n                            />\r\n                          </mat-form-field>\r\n                        </div>\r\n\r\n                    </div>\r\n                  </div>\r\n          \r\n            \r\n        \r\n      </mat-card-content>\r\n\r\n      <mat-card-title class=\"\">\r\n        <div class=\"card-title-text\">Employment Details</div>\r\n        <mat-divider></mat-divider>\r\n      </mat-card-title>\r\n      <mat-card-content>\r\n        <!-- <form  [formGroup]=\"fincancialDetails\"> -->\r\n         \r\n              <div fxLayout=\"row\" fxLayoutGap=\"25px\">\r\n                    <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-1\">\r\n\r\n                      <div class=\"pb-1\">\r\n                          <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                              <mat-label>Employment Type*</mat-label>\r\n                              <mat-select formControlName=\"employmentType\">\r\n                                <mat-option *ngFor=\"let employmentType of arrayEmploymentType\" [value]=\"employmentType\"> \r\n                                  {{employmentType}} \r\n                                </mat-option>\r\n                              </mat-select>\r\n                              <mat-error *ngIf=\"fincancialDetails.get('employmentType').hasError('required')\" >\r\n                                Please select the Employment Type\r\n                              </mat-error>\r\n                            </mat-form-field>\r\n                      </div>                        \r\n\r\n                      <div class=\"pb-1\">\r\n                          <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                            <mat-label>Employee number*</mat-label>\r\n                            <input\r\n                              matInput \r\n                              maxLength=\"5\"\r\n                              (keypress)=_keyPress($event)\r\n                              formControlName=\"employeeNumber\" \r\n                              placeholder=\"Employee Number\"\r\n                            />\r\n                            <mat-error *ngIf=\"fincancialDetails.get('employeeNumber').hasError('required')\">\r\n                              Please enter the Employee Number\r\n                          </mat-error>\r\n                          </mat-form-field>\r\n                        </div>\r\n\r\n                        <div class=\"pb-1\">\r\n                          <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                            <mat-label>Designation*</mat-label>\r\n                            <input\r\n                              matInput maxlength=\"20\"\r\n                              name=\"Designation\"\r\n                              formControlName=\"designation\"\r\n                              placeholder=\"Designation\"\r\n                              oninput=\"this.value = this.value.replace(/[^A-Za-z0-9-,.;'&/.() ]|^ /g,'')\"\r\n                            />\r\n                            <mat-error *ngIf=\"fincancialDetails.get('designation').hasError('required')\">\r\n                              Please enter the Designation \r\n                          </mat-error>\r\n                          </mat-form-field>\r\n                        </div>\r\n\r\n\r\n                       <div class=\"pb-1\">\r\n                          <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                            <mat-label>Employment Start Date</mat-label>\r\n                            <input\r\n                              matInput\r\n                              formControlName=\"employmentStartDate\"\r\n                              placeholder=\"Employment Start Date\"\r\n                              [matDatepicker]=\"start\" readonly\r\n                            />\r\n  \r\n                            <mat-datepicker-toggle\r\n                              matSuffix\r\n                              [for]=\"start\"\r\n                            ></mat-datepicker-toggle>\r\n                          </mat-form-field>\r\n                          <mat-datepicker #start></mat-datepicker>\r\n                        </div>\r\n                      \r\n                    </div>\r\n                    <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-1\">\r\n                    \r\n\r\n                      <div class=\"pb-1\">\r\n                          <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                              <mat-label>Employment Category*</mat-label>\r\n                              <mat-select name=\"employmentCategory\" formControlName=\"employmentCategory\">\r\n                                <mat-option *ngFor=\"let employmentCategory of arrayEmploymentCategory\" [value]=\"employmentCategory\"> \r\n                                  {{employmentCategory}} \r\n                                </mat-option> \r\n                              </mat-select>\r\n                              <mat-error *ngIf=\"fincancialDetails.get('employmentCategory').hasError('required')\">\r\n                                Please select the Employment Category\r\n                              </mat-error>\r\n                            </mat-form-field>\r\n                      </div>  \r\n\r\n\r\n\r\n                      <div class=\"pb-1\">\r\n                        <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                          <mat-label>Office Name*</mat-label>\r\n                          <input\r\n                            matInput maxlength=\"20\"\r\n                            name=\"Office Name\"\r\n                            formControlName=\"officeName\"\r\n                            placeholder=\"Office Name\"\r\n                            oninput=\"this.value = this.value.replace(/[^A-Za-z0-9-,.;'&/.() ]|^ /g,'')\"\r\n                            />\r\n                            <mat-error *ngIf=\"fincancialDetails.get('officeName').hasError('required')\">\r\n                              Please enter the Office Name\r\n                          </mat-error>\r\n                          </mat-form-field>\r\n                      </div>\r\n\r\n                      <div class=\"pb-1\">\r\n                          <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                            <mat-label>Employment End Date</mat-label>\r\n                            <input\r\n                              matInput\r\n                              name=\"employmentEndDate\"\r\n                              formControlName=\"employmentEndDate\"\r\n                              [min]=\"fincancialDetails.get('employmentStartDate').value\"\r\n                              placeholder=\"Employment End Date\"\r\n                              [matDatepicker]=\"end\" readonly\r\n                            />\r\n  \r\n                            <mat-datepicker-toggle\r\n                              matSuffix\r\n                              [for]=\"end\"\r\n                            ></mat-datepicker-toggle>\r\n                          </mat-form-field>\r\n                          <mat-datepicker #end></mat-datepicker>\r\n                        </div>\r\n\r\n                      </div>\r\n                  </div>\r\n          \r\n        <!-- </form> -->\r\n      </mat-card-content>\r\n\r\n      <mat-card-title class=\"\">\r\n        <div class=\"card-title-text\">Monthly Income\r\n          <div class=\"ErrMsg\">{{incomeErrMsg}} </div>\r\n        </div>\r\n        <mat-divider></mat-divider>\r\n      </mat-card-title>\r\n      <mat-card-content>\r\n        <!-- <form *ngIf=\"unsecuredForms\" [formGroup]=\"unsecuredForms\"> -->\r\n         \r\n              <div fxLayout=\"row\" fxLayoutGap=\"25px\">\r\n                    <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-1\">\r\n                      <div class=\"pb-1\">\r\n                        <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                          <mat-label>Salary</mat-label>\r\n                          <input\r\n                            matInput \r\n                            maxlength=\"10\"\r\n                            type=\"text\" onlyNumber\r\n                            formControlName=\"salary\"\r\n                            name=\"salary\"\r\n                            placeholder=\"Salary\"\r\n                            (keypress)=_keyPress($event)\r\n                            (input)=\"calculateTotalMonthlyIncome(fincancialDetails.value)\"\r\n                          />\r\n                        </mat-form-field>\r\n                      </div>\r\n\r\n                      <div class=\"pb-1\">\r\n                          <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                            <mat-label>Interest Income</mat-label>\r\n                            <input\r\n                              matInput \r\n                              maxlength=\"10\"\r\n                              type=\"text\" onlyNumber\r\n                              formControlName=\"interestIncome\"\r\n                              name=\"interestIncome\"\r\n                              placeholder=\"Interest Income\"\r\n                              (keypress)=_keyPress($event)\r\n                              (input)=\"calculateTotalMonthlyIncome(fincancialDetails.value)\"\r\n                            />\r\n                          </mat-form-field>\r\n                        </div>\r\n\r\n                        <div class=\"pb-1\">\r\n                          <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                            <mat-label>Bonus</mat-label>\r\n                            <input\r\n                              matInput \r\n                              maxlength=\"10\"\r\n                              type=\"text\" onlyNumber\r\n                              formControlName=\"bonus\"\r\n                              name=\"bonus\"\r\n                              placeholder=\"Bonus\"\r\n                              (keypress)=_keyPress($event)\r\n                              (input)=\"calculateTotalMonthlyIncome(fincancialDetails.value)\"\r\n                            />\r\n                          </mat-form-field>\r\n                        </div>     \r\n                        \r\n                        <div class=\"pb-1\">\r\n                          <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                            <mat-label>Cash Gifts</mat-label>\r\n                            <input \r\n                              matInput \r\n                              maxlength=\"10\"\r\n                              type=\"text\" onlyNumber\r\n                              formControlName=\"cashGifts\"\r\n                              name=\"cashGifts\"\r\n                              placeholder=\"Cash Gifts\"\r\n                              (keypress)=_keyPress($event)\r\n                              (input)=\"calculateTotalMonthlyIncome(fincancialDetails.value)\"\r\n                            />\r\n                          </mat-form-field>\r\n                        </div>    \r\n\r\n                        <div class=\"pb-1\">\r\n                          <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                            <mat-label>Total</mat-label>\r\n                            <input\r\n                              matInput \r\n                              maxlength=\"10\"\r\n                              type=\"text\" onlyNumber\r\n                              formControlName=\"monthlyIncomeTotal\"\r\n                              placeholder=\"MonthlyIncomeTotal\" readonly\r\n                            />\r\n                          </mat-form-field>\r\n                        </div> \r\n\r\n                 </div>\r\n                    <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-1\">\r\n                    \r\n                       <div class=\"pb-1\">\r\n                          <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                            <mat-label>Business</mat-label>\r\n                            <input\r\n                              matInput \r\n                              maxlength=\"10\"\r\n                              type=\"text\" onlyNumber\r\n                              name=\"business\"\r\n                              formControlName=\"business\" autocomplete=\"off\"\r\n                              placeholder=\"Business\"\r\n                              (keypress)=_keyPress($event)\r\n                              (input)=\"calculateTotalMonthlyIncome(fincancialDetails.value)\"\r\n                            />\r\n                          </mat-form-field>\r\n                        </div>\r\n\r\n                        <div class=\"pb-1\">\r\n                          <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                            <mat-label>Pension</mat-label>\r\n                            <input\r\n                              matInput \r\n                              maxlength=\"10\"\r\n                              type=\"text\" onlyNumber\r\n                              name=\"pension\"\r\n                              formControlName=\"pension\"\r\n                              placeholder=\"Pension\"\r\n                              (keypress)=_keyPress($event)\r\n                              (input)=\"calculateTotalMonthlyIncome(fincancialDetails.value)\"\r\n                            />\r\n                          </mat-form-field>\r\n                        </div>\r\n\r\n                        <div class=\"pb-1\">\r\n                          <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                            <mat-label>Rentals</mat-label>\r\n                            <input \r\n                              matInput \r\n                              maxlength=\"10\"\r\n                              type=\"text\" onlyNumber\r\n                              name=\"monthlyIncomeRentals\"\r\n                              formControlName=\"monthlyIncomeRentals\"\r\n                              placeholder=\"Rentals\"\r\n                              (keypress)=_keyPress($event)\r\n                              (input)=\"calculateTotalMonthlyIncome(fincancialDetails.value)\"\r\n                            />\r\n                          </mat-form-field>\r\n                        </div>\r\n                        \r\n                        <div class=\"pb-1\">\r\n                          <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                            <mat-label>Others</mat-label>\r\n                            <input\r\n                              matInput \r\n                              maxlength=\"10\"\r\n                              type=\"text\" onlyNumber\r\n                              name=\"monthlyIncomeOthers\"\r\n                              formControlName=\"monthlyIncomeOthers\"\r\n                              placeholder=\"Others\"\r\n                              (keypress)=_keyPress($event)\r\n                              (input)=\"calculateTotalMonthlyIncome(fincancialDetails.value)\"\r\n                            />\r\n                          </mat-form-field>\r\n                        </div>\r\n\r\n\r\n                      </div>\r\n                  </div>\r\n          \r\n            \r\n        <!-- </form> -->\r\n      </mat-card-content>\r\n\r\n      <mat-card-title class=\"\">\r\n        <div class=\"card-title-text\">Monthly Expenses\r\n          <div class=\"ErrMsg\">{{ExpensesErrMsg}} </div>\r\n        </div>\r\n        <mat-divider></mat-divider>\r\n      </mat-card-title>\r\n      <mat-card-content>\r\n        <!-- <form *ngIf=\"unsecuredForms\" [formGroup]=\"unsecuredForms\"> -->\r\n         \r\n              <div fxLayout=\"row\" fxLayoutGap=\"25px\">\r\n                    <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-1\">\r\n\r\n                      <div class=\"pb-1\">\r\n                        <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                          <mat-label>Household</mat-label>\r\n                          <input\r\n                            matInput \r\n                            maxlength=\"10\"\r\n                            type=\"text\" onlyNumber\r\n                            formControlName=\"household\"\r\n                            name=\"household\"\r\n                            placeholder=\"Household\"\r\n                            (keypress)=_keyPress($event)\r\n                            (input)=\"calculateTotalMonthlyExpenses(fincancialDetails.value)\"\r\n                          />\r\n                        </mat-form-field>\r\n                      </div>\r\n\r\n                      <div class=\"pb-1\">\r\n                          <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                            <mat-label>Education</mat-label>\r\n                            <input\r\n                              matInput \r\n                              maxlength=\"10\"\r\n                              type=\"text\" onlyNumber\r\n                              formControlName=\"education\"\r\n                              name=\"mod\"\r\n                              placeholder=\"Education\"\r\n                              (keypress)=_keyPress($event)\r\n                              (input)=\"calculateTotalMonthlyExpenses(fincancialDetails.value)\"\r\n                            />\r\n                          </mat-form-field>\r\n                        </div>\r\n\r\n                        <div class=\"pb-1\">\r\n                          <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                            <mat-label>Vehicle Maintenance</mat-label>\r\n                            <input \r\n                              matInput \r\n                              maxlength=\"10\"\r\n                              type=\"text\" onlyNumber\r\n                              formControlName=\"vehicleMaintenance\"\r\n                              name=\"mod\"\r\n                              placeholder=\"Vehicle Maintenance\"\r\n                              (keypress)=_keyPress($event)\r\n                              (input)=\"calculateTotalMonthlyExpenses(fincancialDetails.value)\"\r\n                            />\r\n                          </mat-form-field>\r\n                        </div>     \r\n                        \r\n                        <div class=\"pb-1\">\r\n                          <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                            <mat-label>Others</mat-label>\r\n                            <input\r\n                              matInput \r\n                              maxlength=\"10\"\r\n                              type=\"text\" onlyNumber\r\n                              formControlName=\"monthlyExpenseOthers\"\r\n                              (keypress)=_keyPress($event)\r\n                              (input)=\"calculateTotalMonthlyExpenses(fincancialDetails.value)\"\r\n                              placeholder=\"monthlyExpenseOthers\"\r\n                            />\r\n                          </mat-form-field>\r\n                        </div>    \r\n\r\n                        <div class=\"pb-1\">\r\n                          <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                            <mat-label>Total</mat-label>\r\n                            <input\r\n                              matInput \r\n                              maxlength=\"10\"\r\n                              type=\"text\" onlyNumber\r\n                              formControlName=\"monthlyExpenseTotal\"\r\n                              name=\"monthlyExpenseTotal\"\r\n                              placeholder=\"Total\" readonly\r\n                            />\r\n                          </mat-form-field>\r\n                        </div> \r\n\r\n                 </div>\r\n                    <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-1\">\r\n                    \r\n                       <div class=\"pb-1\">\r\n                          <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                            <mat-label>Medical</mat-label>\r\n                            <input\r\n                              matInput \r\n                              maxlength=\"10\"\r\n                              type=\"text\" onlyNumber\r\n                              name=\"medical\"\r\n                              formControlName=\"medical\"\r\n                              placeholder=\"Medical\"\r\n                              (keypress)=_keyPress($event)\r\n                              (input)=\"calculateTotalMonthlyExpenses(fincancialDetails.value)\"\r\n                            />\r\n                          </mat-form-field>\r\n                        </div>\r\n\r\n                        <div class=\"pb-1\">\r\n                          <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                            <mat-label>Travel</mat-label>\r\n                            <input\r\n                              matInput \r\n                              maxlength=\"10\"\r\n                              type=\"text\" onlyNumber\r\n                              name=\"a_sig\"\r\n                              formControlName=\"travel\"\r\n                              placeholder=\"Travel\"\r\n                              (keypress)=_keyPress($event)\r\n                              (input)=\"calculateTotalMonthlyExpenses(fincancialDetails.value)\"\r\n                            />\r\n                          </mat-form-field>\r\n                        </div>\r\n\r\n                        <div class=\"pb-1\">\r\n                          <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                            <mat-label>Rentals</mat-label>\r\n                            <input\r\n                              matInput \r\n                              maxlength=\"10\"\r\n                              type=\"text\" onlyNumber\r\n                              name=\"a_sig\"\r\n                              formControlName=\"monthlyExpenseRentals\"\r\n                              placeholder=\"monthlyExpenseRentals\"\r\n                              (keypress)=_keyPress($event)\r\n                              (input)=\"calculateTotalMonthlyExpenses(fincancialDetails.value)\"\r\n                            />\r\n                          </mat-form-field>\r\n                        </div>\r\n\r\n                      </div>\r\n                  </div>\r\n          \r\n            \r\n        <!-- </form> -->\r\n      </mat-card-content>\r\n\r\n\r\n      <mat-card-title class=\"\">\r\n        <div class=\"card-title-text\">Annual Liabilities\r\n          <div class=\"ErrMsg\">{{LiabilitiesErrMsg}} </div>\r\n        </div>\r\n        <mat-divider></mat-divider>\r\n      </mat-card-title>\r\n      <mat-card-content>\r\n        <!-- <form> -->\r\n              <div fxLayout=\"row\" fxLayoutGap=\"25px\">\r\n                    <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-1\">\r\n\r\n                      <div class=\"pb-1\">\r\n                        <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                          <mat-label>Property Loans</mat-label>\r\n                          <input\r\n                            matInput \r\n                            maxlength=\"10\"\r\n                            type=\"text\" onlyNumber\r\n                            name=\"propertyLoan\"\r\n                            placeholder=\"Property Loan\"\r\n                            formControlName=\"propertyLoan\"\r\n                            (keypress)=_keyPress($event)\r\n                            (input)=\"calculateTotalLiabilities(fincancialDetails.value)\"\r\n                          />\r\n                        </mat-form-field>\r\n                      </div>\r\n\r\n                  \r\n\r\n                        <div class=\"pb-1\">\r\n                          <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                            <mat-label>Personal Loans</mat-label>\r\n                            <input\r\n                              matInput \r\n                              maxlength=\"10\"\r\n                              type=\"text\" onlyNumber\r\n                              name=\"personalLoans\"\r\n                              formControlName=\"personalLoans\"\r\n                              placeholder=\"Personal Loans\"\r\n                              (keypress)=_keyPress($event)\r\n                              (input)=\"calculateTotalLiabilities(fincancialDetails.value)\"\r\n                            />\r\n                          </mat-form-field>\r\n                        </div>     \r\n                        \r\n                      \r\n                        \r\n                        <div class=\"pb-1\">\r\n                          <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                            <mat-label>Overdrafts</mat-label>\r\n                            <input\r\n                              matInput\r\n                              maxlength=\"10\"\r\n                              name=\"overdraft\" \r\n                              type=\"text\" onlyNumber\r\n                              formControlName=\"overdraft\"\r\n                              placeholder=\"overdraft\"\r\n                              (keypress)=_keyPress($event)\r\n                              (input)=\"calculateTotalLiabilities(fincancialDetails.value)\"\r\n                            />\r\n                          </mat-form-field>\r\n                        </div>     \r\n\r\n                        <div class=\"pb-1\">\r\n                          <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                            <mat-label>Total</mat-label>\r\n                            <input\r\n                              matInput \r\n                              maxlength=\"10\"\r\n                              type=\"text\" onlyNumber\r\n                              name=\"liabilityTotal\"\r\n                              placeholder=\"Total\"\r\n                              formControlName=\"liabilityTotal\" readonly\r\n                            />\r\n                          </mat-form-field>\r\n                        </div> \r\n\r\n                 </div>\r\n                    <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-1\">\r\n\r\n                      <div class=\"pb-1\">\r\n                          <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                            <mat-label>Vehicle Loans</mat-label>\r\n                            <input\r\n                              matInput \r\n                              maxlength=\"10\"\r\n                              type=\"text\" onlyNumber\r\n                              formControlName=\"vehicleLoan\"\r\n                              name=\"vehicleLoan\"\r\n                              placeholder=\"vehicle Loan\"\r\n                              (keypress)=_keyPress($event)\r\n                              (input)=\"calculateTotalLiabilities(fincancialDetails.value)\"\r\n                            />\r\n                          </mat-form-field>\r\n                        </div>\r\n\r\n                        <div class=\"pb-1\">\r\n                          <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                            <mat-label>Cards Outstanding's</mat-label>\r\n                            <input\r\n                              matInput \r\n                              maxlength=\"10\" \r\n                              type=\"text\" onlyNumber\r\n                              name=\"cardOutstandings\"\r\n                              formControlName=\"cardOutstandings\"\r\n                              placeholder=\"cardOutstandings\"\r\n                              (keypress)=_keyPress($event)\r\n                              (input)=\"calculateTotalLiabilities(fincancialDetails.value)\"\r\n                            />\r\n                          </mat-form-field>\r\n                        </div>\r\n\r\n                        <div class=\"pb-1\">\r\n                          <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                            <mat-label>Others</mat-label>\r\n                            <input\r\n                              matInput \r\n                              maxlength=\"10\"\r\n                              type=\"text\" onlyNumber\r\n                              name=\"liabilityOthers\"\r\n                              formControlName=\"liabilityOthers\"\r\n                              placeholder=\"liabilityOthers\"\r\n                              (keypress)=_keyPress($event)\r\n                              (input)=\"calculateTotalLiabilities(fincancialDetails.value)\"\r\n                            />\r\n                          </mat-form-field>\r\n                        </div>\r\n                    \r\n                   \r\n                  \r\n                      </div>\r\n                  </div>\r\n          \r\n            \r\n        <!-- </form> -->\r\n      </mat-card-content>\r\n\r\n      <mat-card-title class=\"\">\r\n        <div class=\"card-title-text\">Asset\r\n          <div class=\"ErrMsg\">{{assetErrMsg}} </div>\r\n        </div>\r\n        <mat-divider></mat-divider>\r\n      </mat-card-title>\r\n      <mat-card-content>\r\n        <!-- <form> -->\r\n              <div fxLayout=\"row\" fxLayoutGap=\"25px\">\r\n                    <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-1\">\r\n\r\n                      <div class=\"pb-1\">\r\n                        <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                          <mat-label>Savings Deposits</mat-label>\r\n                          <input\r\n                            matInput \r\n                            maxlength=\"10\"\r\n                            type=\"text\" onlyNumber\r\n                            name=\"savingDeposits\"\r\n                            placeholder=\"saving Deposits\"\r\n                            formControlName=\"savingDeposits\"\r\n                            (keypress)=_keyPress($event)\r\n                            (input)=\"calculateTotalAssets(fincancialDetails.value)\"\r\n                          />\r\n                        </mat-form-field>\r\n                      </div>\r\n\r\n                  \r\n\r\n                        <div class=\"pb-1\">\r\n                          <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                            <mat-label>Properties</mat-label>\r\n                            <input\r\n                              matInput \r\n                              maxlength=\"10\"\r\n                              type=\"text\" onlyNumber\r\n                              name=\"properties\"\r\n                              formControlName=\"properties\"\r\n                              placeholder=\"Properties\"\r\n                              (keypress)=_keyPress($event)\r\n                              (input)=\"calculateTotalAssets(fincancialDetails.value)\"\r\n                            />\r\n                          </mat-form-field>\r\n                        </div>     \r\n                        \r\n                        \r\n                        <div class=\"pb-1\">\r\n                          <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                            <mat-label>Fixed Deposits</mat-label>\r\n                            <input\r\n                              matInput \r\n                              maxlength=\"10\"\r\n                              type=\"text\" onlyNumber\r\n                              name=\"fixedDeposits\"\r\n                              formControlName=\"fixedDeposits\"\r\n                              placeholder=\"fixedDeposits\"\r\n                              (keypress)=_keyPress($event)\r\n                              (input)=\"calculateTotalAssets(fincancialDetails.value)\"\r\n                            />\r\n                          </mat-form-field>\r\n                        </div>    \r\n\r\n                        <div class=\"pb-1\">\r\n                          <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                            <mat-label>Others</mat-label>\r\n                            <input\r\n                              matInput \r\n                              maxlength=\"10\"\r\n                              type=\"text\" onlyNumber\r\n                              name=\"assetOthers\"\r\n                              placeholder=\"assetOthers\"\r\n                              formControlName=\"assetOthers\"\r\n                              (keypress)=_keyPress($event)\r\n                              (input)=\"calculateTotalAssets(fincancialDetails.value)\"\r\n                            />\r\n                          </mat-form-field>\r\n                        </div>\r\n\r\n                        <div class=\"pb-1\">\r\n                          <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                            <mat-label>Total</mat-label>\r\n                            <input\r\n                              matInput \r\n                              maxlength=\"10\"\r\n                              type=\"text\" onlyNumber\r\n                              name=\"assetTotal\"\r\n                              formControlName=\"assetTotal\"\r\n                              placeholder=\"assetTotal\" readonly\r\n                            />\r\n                          </mat-form-field>\r\n                        </div> \r\n\r\n                 </div>\r\n                    <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-1\">\r\n\r\n                      <div class=\"pb-1\">\r\n                          <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                            <mat-label>Stocks/Funds</mat-label>\r\n                            <input\r\n                              matInput \r\n                              maxlength=\"10\"\r\n                              type=\"text\" onlyNumber\r\n                              placeholder=\"stocks\"\r\n                              formControlName=\"stocks\"\r\n                              (keypress)=_keyPress($event)\r\n                              (input)=\"calculateTotalAssets(fincancialDetails.value)\"\r\n                            />\r\n                          </mat-form-field>\r\n                        </div>\r\n\r\n                        <div class=\"pb-1\">\r\n                          <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                            <mat-label>Auto Mobiles</mat-label>\r\n                            <input\r\n                              matInput \r\n                              maxlength=\"10\"\r\n                              type=\"text\" onlyNumber\r\n                              name=\"automobiles\"\r\n                              placeholder=\"automobiles\"\r\n                              formControlName=\"automobiles\"\r\n                              (keypress)=_keyPress($event)\r\n                              (input)=\"calculateTotalAssets(fincancialDetails.value)\"\r\n                            />\r\n                          </mat-form-field>\r\n                        </div>\r\n\r\n                        <div class=\"pb-1\">\r\n                          <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                            <mat-label>Lands</mat-label>\r\n                            <input\r\n                              matInput  \r\n                              maxlength=\"10\"\r\n                              type=\"text\" onlyNumber\r\n                              name=\"lands\"\r\n                              placeholder=\"lands\"\r\n                              formControlName=\"lands\"\r\n                              (keypress)=_keyPress($event)\r\n                              (input)=\"calculateTotalAssets(fincancialDetails.value)\"\r\n                            />\r\n                          </mat-form-field>\r\n                        </div>\r\n                  \r\n                        \r\n                      </div>\r\n                  </div>\r\n        <!-- </form> -->\r\n      </mat-card-content>\r\n    </mat-card>\r\n\r\n\r\n  </div>\r\n \r\n\r\n</div>\r\n<div fxLayout=\"row\">\r\n  <div fxFlex=\"100\">    \r\n  </div>\r\n</div>\r\n</form>\r\n<div\r\n            fxLayout=\"row\"\r\n            fxLayoutAlign=\"space-between center\"\r\n            fxLayoutGap=\"16px\"\r\n            class=\"mt-32\"\r\n          >\r\n            <button mat-button class=\"Backbtn\" (click)=\"goBack()\">\r\n              Back\r\n            </button>\r\n            <button\r\n              mat-raised-button\r\n              color=\"primary\"\r\n              class=\"Nextbtn\"\r\n              type=\"submit\"\r\n              (click)=\"onSubmit()\"\r\n              [disabled]=\"!fincancialDetails.get('employeeNumber').valid || !fincancialDetails.get('employmentType').valid ||\r\n              !fincancialDetails.get('designation').valid || incomeErrMsg || !fincancialDetails.get('officeName').valid || incomeErrMsg ||\r\n              ExpensesErrMsg || LiabilitiesErrMsg || assetErrMsg \"\r\n            >\r\n              Next\r\n            </button>\r\n          </div>\r\n</div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { QualitativeScoreboardSummary } from 'app/shared/models/qualitativeScoreboardSummary';\r\nimport { AssessmentReportSummary } from 'app/shared/models/AssessmentReportSummary';\r\nimport { UrlService } from '../../url.service';\r\n\r\n@Component({\r\n  selector: 'app-application-assessment-summary',\r\n  templateUrl: './application-assessment-summary.component.html',\r\n  styleUrls: ['./application-assessment-summary.component.scss']\r\n})\r\nexport class ApplicationAssessmentSummaryComponent implements OnInit {\r\n  previousUrl: string = '';\r\n  accountId: any;\r\n  qualitativeScoreboardSummary: QualitativeScoreboardSummary;\r\n  assessmentReportSummary: AssessmentReportSummary;\r\n  imagePath = \"assets/images/assesment.png\";\r\n  overDraftByStatus: boolean;\r\n\r\n  constructor\r\n    (\r\n      private router: Router,\r\n      private ls: LocalStoreService,\r\n      private apiService: ApiService,\r\n      private urlService: UrlService\r\n    ) { }\r\n \r\n  ngOnInit(): void {\r\n    this.accountId = this.ls.getItem('accountId');\r\n    let overdraftStatus = this.ls.getItem('overDraftByStatus') || null;\r\n    this.overDraftByStatus = overdraftStatus != null ? overdraftStatus.isActive : false; \r\n    this.getAllData(this.accountId);\r\n\r\n    this.urlService.previousUrl$\r\n      .subscribe((previousUrl: string) => {\r\n        this.previousUrl = previousUrl\r\n      });\r\n\r\n\r\n  }\r\n\r\n  getAllData(id) {\r\n    this.apiService.getQualitativeScorecardDetails(id).subscribe((response) => {\r\n      this.qualitativeScoreboardSummary = response;\r\n      console.log(this.qualitativeScoreboardSummary)\r\n      for (let m = 0; m < this.qualitativeScoreboardSummary.scoreCardMapping.length; m++) {\r\n        console.log(this.qualitativeScoreboardSummary[m].scoreCardDetails)\r\n        for (let i = 0; i < this.qualitativeScoreboardSummary[m].scoreCardDetails.length; i++) {\r\n          console.log(this.qualitativeScoreboardSummary[m].scoreCardDetails)\r\n        }\r\n      }\r\n    });\r\n    this.apiService.getAssessmentReportDetails(id).subscribe((response) => {\r\n      this.assessmentReportSummary = response;\r\n      console.log(this.qualitativeScoreboardSummary);\r\n    });\r\n\r\n\r\n  }\r\n\r\n  goBack() {\r\n    this.router.navigate([`${this.previousUrl}`]);\r\n  }\r\n\r\n  done() {\r\n    this.router.navigate([`/home/application/assessment/list/${this.accountId}`]);\r\n  }\r\n\r\n}\r\n","<div class=\"matcard-size\">\r\n<div fxLayout=\"column\" style=\"padding: 3rem 0rem;\" fxLayoutAlign=\"space-around center\" fxLayoutGap=\"20px\"\r\n    class=\"full-width\">\r\n    <div>\r\n        <img [src]=\"imagePath\">\r\n    </div>\r\n    <div>\r\n        <h2 style=\"font-size: 24px;\">Application Assessment</h2>\r\n    </div>\r\n</div>\r\n<div fxLayout=\"column\" fxLayoutAlign=\"space-between start\" style=\"padding: 0rem 2rem;\" fxLayoutGap=\"10px\"\r\n    class=\"full-width\">\r\n    <div fxFlex=\"100%\" fxFlex.xs=\"100%\" class=\"full-width\">\r\n        <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n            <div>\r\n                <h3 style=\"padding: 1rem 1rem 0.5rem 1rem;font-size: large;\">\r\n                    Qualitative Scoreboard\r\n                </h3>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div fxFlex=\"100%\" fxFlex.xs=\"100%\" class=\"full-width\" \r\n        style=\"border:1px solid rgb(249 245 245);border-radius: 5px;\">\r\n        <div fxLayout=\"column\" fxLayoutAlign=\"space-evenly start\" class=\"full-width\">\r\n            <div class=\"full-width\">\r\n                <div fxLayout=\"row wrap\" class=\"full-width\" style=\"padding:2rem;\">\r\n                    <div fxFlex=\"100%\" fxFlex.xs=\"100%\">\r\n                        <div>\r\n                            <span\r\n                                style=\"color: #102245;opacity: 64%; font-size: small;font-family: sans-serif;\">Scorecard\r\n                                Id</span><br>\r\n                            <div *ngFor='let item of qualitativeScoreboardSummary?.scoreCardMapping;let k=index' style=\"padding-top: 5px;\">\r\n                                <span style=\"font-size: medium;\">ID #{{item?.scoreCardId}}</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                  \r\n                    <div fxFlex=\"100%\" fxFlex.xs=\"100%\">\r\n                        <div class=\"mt-32\">\r\n                            <span\r\n                                style=\"color: #102245;opacity: 64%; font-size: small;font-family: sans-serif;\">Number of Applicants\r\n                            </span><br>\r\n                            <div style=\"padding-top: 5px;\">\r\n                                <span style=\"font-size: medium;\">{{qualitativeScoreboardSummary?.numberOfApplicant}}</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"full-width\">\r\n                <mat-divider style=\"background-color: white\"></mat-divider>\r\n            </div>\r\n            <div fxLayout=\"row wrap\" style=\"padding: 0rem 1rem;\" class='qtnhd'>Questions</div>\r\n            <div class=\"full-width\" style=\"padding: 0rem 2rem;\">\r\n                <div fxLayout=\"row wrap\" class=\"full-width\">\r\n                    <div *ngFor='let item of qualitativeScoreboardSummary?.scoreCardMapping;let k=index'>\r\n                        <div class=\"applicanthd\" style=\"font-weight: bold;font-family: sans-serif;\">Applicant\r\n                            {{item.applicantId}}</div>\r\n                        <div class=\"row wrap\">\r\n                            <div fxLayout=\"row wrap\" class=\"qtncard row\" fxLayoutGap=\"30px\" fxFlex=\"50%\"\r\n                                fxFlex.gt-sm=\"50\" fxFlex.sm=\"50\" class=\"full-width\"\r\n                                *ngFor='let item of qualitativeScoreboardSummary?.scoreCardMapping[k].scoreCardDetails;let i=index'>\r\n                                <mat-card class=\"qtncard1 row\" style=\" justify-content:space-evenly;\">\r\n                                    <div>{{i+1}}.{{item.scorecardQuestion}}</div>\r\n                                    <div class='qtnval' style=\"opacity: 80%\">{{item?.scorecardAnswer}}</div>\r\n                                </mat-card>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<br><br>\r\n<div *ngIf=\"overDraftByStatus\" fxLayout=\"column\" fxLayoutAlign=\"space-between start\" style=\"padding: 0rem 2rem;\" fxLayoutGap=\"10px\"\r\n    class=\"full-width\">\r\n    <div fxFlex=\"100%\" fxFlex.xs=\"100%\" class=\"full-width\">\r\n        <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n            <div>\r\n                <h3 style=\"padding: 1rem 1rem 0.5rem 1rem;font-size: large;\">\r\n                    Assessment Report\r\n                </h3>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div fxFlex=\"100%\" fxFlex.xs=\"100%\" class=\"full-width\"\r\n        style=\"border:1px solid rgb(249 245 245);border-radius: 5px;\">\r\n        <div fxLayout=\"column\" fxLayoutAlign=\"space-evenly start\" class=\"full-width\">\r\n            <div class=\"full-width\">\r\n                <div fxLayout=\"row wrap\" class=\"full-width\" style=\"padding:2rem;\">\r\n                    <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                        <div>\r\n                            <span style=\"color: #102245;opacity: 64%; font-size: small;font-family: sans-serif;\">Limit\r\n                                Id</span><br>\r\n                            <div style=\"padding-top: 5px;\">\r\n                                <span style=\"font-size: medium;\">{{assessmentReportSummary?.limitId}}</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <!--amount-->\r\n                    <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                        <div>\r\n                            <span\r\n                                style=\"color: #102245;opacity: 64%; font-size: small;font-family: sans-serif;\">Overdraft\r\n                                Limit Amount</span><br>\r\n                            <div style=\"padding-top: 5px;\">\r\n                                <span style=\"font-size: medium;\">{{assessmentReportSummary?.overdraftLimitAmount}}</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <!--end of amount-->\r\n                    <!--recommended-->\r\n                    <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                        <div>\r\n                            <span\r\n                                style=\"color: #102245;opacity: 64%; font-size: small;font-family: sans-serif;\">Recommended\r\n                                OverDraft Limit</span><br>\r\n                            <div style=\"padding-top: 5px;\">\r\n                                <span\r\n                                    style=\"font-size: medium;\">{{assessmentReportSummary?.recommendedOverdraftLimit}}</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <!--end of recommended-->\r\n                </div>\r\n            </div>\r\n            <div class=\"full-width\">\r\n                <mat-divider style=\"background-color: white\"></mat-divider>\r\n            </div>\r\n            <div class=\"full-width\">\r\n                <div fxLayout=\"row wrap\" class=\"full-width\" style=\"padding:2rem;\">\r\n                    <!--start date-->\r\n                    <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                        <div>\r\n                            <span style=\"color: #102245;opacity: 64%; font-size: small;font-family: sans-serif;\">Limit\r\n                                Start Date</span><br>\r\n                            <div style=\"padding-top: 5px;\">\r\n                                <span style=\"font-size: medium;\">{{assessmentReportSummary?.limitStartDate}}</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <!--start date-->\r\n                    <!--end date-->\r\n                    <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                        <div>\r\n                            <span style=\"color: #102245;opacity: 64%; font-size: small;font-family: sans-serif;\">Limit\r\n                                End Date</span><br>\r\n                            <div style=\"padding-top: 5px;\">\r\n                                <span style=\"font-size: medium;\">{{assessmentReportSummary?.limitEndDate}}</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <!--end date-->\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<br/>\r\n<div >\r\n    <button mat-stroked-button color=\"primary\"\r\n            style=\"border-radius: 20px;width: 10rem;height: 2.5rem;font-family: sans-serif;\"\r\n            (click)=\"goBack()\"\r\n    >\r\n        Back\r\n    </button>\r\n    <span fxFlex></span>\r\n    <button\r\n        style=\"border-radius: 20px;width: 10rem;height: 2.5rem;background-color: #456EFE; float: right; color: white; font-family: sans-serif;\"\r\n        mat-raised-button type=\"button\" (click)=\"done()\"\r\n    >\r\n        Done\r\n    </button>   \r\n</div>\r\n</div>","import { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ChangeDetectorRef, Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatButton } from '@angular/material/button';\r\nimport { Router } from '@angular/router';\r\nimport { FundingStageService } from 'app/shared/services/funding-stage.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { AccountService } from '../../account.service';\r\nimport { UrlService } from '../../url.service';\r\nimport { AppLoaderService } from 'app/shared/services/app-loader/app-loader.service';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\n\r\n@Component({\r\n  selector: 'app-initial-fund',\r\n  templateUrl: './initial-fund.component.html',\r\n  styleUrls: ['./initial-fund.component.scss']\r\n})\r\nexport class InitialFundComponent implements OnInit {\r\n\r\n  fundStageFormGroup: FormGroup;\r\n  addOrviewdetails: any = '';\r\n  // formDirective: FormGroupDirective\r\n  @ViewChild('submitBtn') submitButton: MatButton;\r\n  actionAddOrEdit: boolean = true;\r\n  actionView: boolean = false;\r\n  accountId: any;\r\n  action: any;\r\n  previousUrl: string = '';\r\n  showEditOption: boolean = false;\r\n  disabletellerTrxnRefNo: boolean = false;\r\n  disableFundByAccount: boolean = false;\r\n  disabletellerTrxnStatus: boolean = false;\r\n  disablechequeNumber: boolean = false;\r\n  fundBy: any;\r\n  accountInfo: any;\r\n  chequeNoLenCheck: boolean=false;\r\n\r\n  constructor(private router: Router,\r\n    private formBuilder: FormBuilder,\r\n    private cdr: ChangeDetectorRef,\r\n    private accountService: AccountService,\r\n    private ls: LocalStoreService,\r\n    private fundingStageService: FundingStageService,\r\n    private snack: MatSnackBar,\r\n    private urlService: UrlService,\r\n    private loader: AppLoaderService,\r\n    private apiService: ApiService) { }\r\n\r\n  ngOnInit() {\r\n    /* For getting account id ,from local storage*/\r\n    this.accountId = this.ls.getItem('accountId');\r\n    this.accountInfo = this.ls.getItem('EDIT-CREATEACCCIF');\r\n    if(this.accountInfo){\r\n      this.accountId=this.accountInfo.businessProductAccount.accountId\r\n    }\r\n    let isInitialFundScreen: boolean = JSON.parse(this.ls.getItem('FUNDING_INI_DONE'));\r\n\r\n    this.urlService.previousUrl$\r\n      .subscribe((previousUrl: string) => {\r\n        this.previousUrl = previousUrl\r\n      });\r\nsetTimeout(() => {\r\n  if (this.accountId != null && isInitialFundScreen) {\r\n    this.showEditOption = true;\r\n    this.getFundsByAccountId();\r\n  } else {\r\n    this.showEditOption = false;\r\n    this.buildFundFormGroup();\r\n  }\r\n\r\n}, 1);\r\n   \r\n    this.fundStageFormGroup.valueChanges.subscribe(data => {\r\n      console.log('data :: ', data)\r\n      let chno=data.chequeNumber\r\n      if ((+chno) >0) {\r\n        console.log('in if :: ',data.chequeNumber)\r\n        var x = data.chequeNumber;\r\n\r\n        console.log(x.toString().length);\r\n        if(x.toString().length<6){\r\n          this.chequeNoLenCheck=true;\r\n        }else{\r\n          this.chequeNoLenCheck=false;\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  buildFundFormGroup(data?) {\r\n    this.fundStageFormGroup = this.formBuilder.group({\r\n      fundId: [data ? data.fundId : ''],\r\n      fundBy: [data ? data.fundBy : '', [Validators.required]],\r\n      amount: [data ? data.amount : ''],\r\n      tellerTrxnRefNo: [data ? data.tellerTrxnRefNo : ''],\r\n      fundByAccount: [data ? data.fundByAccount : ''],\r\n      chequeNumber: [data ? data.chequeNumber : '', [Validators.maxLength]],\r\n      branchCode: [data ? data.branchCode : ''],\r\n      tellerTrxnStatus: [data ? data.tellerTrxnStatus : ''],\r\n      createdBy: [data ? data.createdBy : ''],\r\n      createdTime: [data ? data.createdTime : ''],\r\n      modifiedBy: [data ? data.modifiedBy : ''],\r\n      modifiedTime: [data ? data.modifiedTime : ''],\r\n      accountId: [this.accountId != null ? this.accountId : ''],\r\n    });\r\n    if (data?.fundByAccount) {\r\n      this.fetchAccountBalance(data.fundByAccount, true);\r\n    }\r\n  }\r\n\r\n  goBack() {\r\n    this.router.navigate([`${this.previousUrl}`]);\r\n  }\r\n  selected(item) {\r\n    console.log(item);\r\n    if (item == \"Fund Transfer\") {\r\n      this.disableFundByAccount = true;\r\n      this.disabletellerTrxnStatus = true;\r\n      this.disabletellerTrxnRefNo = false;\r\n      this.disablechequeNumber = false;\r\n      if (this.accountInfo != null) {\r\n        this.fundStageFormGroup.get('branchCode').patchValue(this.accountInfo.branchCode);\r\n        this.fundStageFormGroup.get('fundByAccount').patchValue(this.accountInfo.accountId);\r\n      }\r\n      this.fundStageFormGroup.get('chequeNumber').patchValue(\"\");\r\n      this.fundStageFormGroup.get('tellerTrxnRefNo').patchValue(\"\");\r\n      this.fundStageFormGroup.get('amount').patchValue(\"\");\r\n      this.fundStageFormGroup.get('fundByAccount').patchValue(\"\");\r\n    }\r\n    if (item == \"Cheque\") {\r\n      this.disableFundByAccount = true;\r\n      this.disablechequeNumber = true;\r\n      this.disabletellerTrxnRefNo = false;\r\n      this.disabletellerTrxnStatus = false;\r\n      if (this.accountInfo != null) {\r\n        this.fundStageFormGroup.get('fundByAccount').patchValue(this.accountInfo.accountId);\r\n      }\r\n      this.fundStageFormGroup.get('branchCode').patchValue(\"\");\r\n      this.fundStageFormGroup.get('tellerTrxnRefNo').patchValue(\"\");\r\n      this.fundStageFormGroup.get('amount').patchValue(\"\");\r\n      this.fundStageFormGroup.get('fundByAccount').patchValue(\"\");\r\n    }\r\n    if (item == \"Cash\") {\r\n      this.disabletellerTrxnRefNo = true;\r\n      this.disableFundByAccount = false;\r\n      this.disablechequeNumber = false;\r\n      this.disabletellerTrxnStatus = false;\r\n      this.fundStageFormGroup.get('branchCode').patchValue(\"\");\r\n      this.fundStageFormGroup.get('chequeNumber').patchValue(\"\");\r\n      this.fundStageFormGroup.get('amount').patchValue(\"\");\r\n      this.fundStageFormGroup.get('fundByAccount').patchValue(\"\");\r\n    }\r\n    this.fundStageFormGroup.get('fundBy').setValue(item);\r\n  }\r\n\r\n  onSubmit(fundStageFormGroup) {\r\n\r\n    console.log(\"fund \", fundStageFormGroup);\r\n    /* TO-DO :: HERE WE NEED TO SET ACCOUNT ID FROM ACCOUNT DETAILS SCREEN */\r\n    fundStageFormGroup.accountId = this.accountId;//\"SID456\";\r\n    this.fundingStageService.saveOrUpdateFundStageDetails(fundStageFormGroup)\r\n      .subscribe(fundResp => {\r\n        console.log(\"fundResp :: \", fundResp)\r\n        if (fundResp.accountId != null || fundResp.accountId != '' || fundResp.accountId != \"\") {\r\n          this.fundingStageService.isSubmittedResp(true);\r\n          this.ls.setItem('fundingStage', true);\r\n          this.ls.setItem('FUNDING_INI_DONE', true);\r\n          this.accountService.refresh.next();\r\n          this.router.navigate([`/home/application/approval/list/${this.accountId}`]);\r\n          this.snack.open('Fund Saved!', 'OK', {\r\n            duration: 4000,\r\n            verticalPosition: 'top',\r\n            horizontalPosition: 'right'\r\n          });\r\n          this.cdr.markForCheck();\r\n        } else {\r\n          this.snack.open('Not able to connect to server!', 'INTERNAL SERVER ERROR', {\r\n            duration: 4000,\r\n            verticalPosition: 'top',\r\n            horizontalPosition: 'right'\r\n          });\r\n          console.log(\"500 error\")\r\n        }\r\n      }, error => {\r\n        console.log(\"error :: \", error);\r\n        this.snack.open('Not able to connect to server!', 'INTERNAL SERVER ERROR', {\r\n          duration: 4000,\r\n          verticalPosition: 'top',\r\n          horizontalPosition: 'right'\r\n        });\r\n      });\r\n  }\r\n\r\n  getFundsByAccountId() {\r\n    this.fundingStageService.getFundByAccountId(this.accountId)\r\n      .subscribe((fundResp: any) => {\r\n        if (fundResp != null) {\r\n          console.log(fundResp);\r\n          if (fundResp.fundBy == \"Fund Transfer\") {\r\n            this.disableFundByAccount = true;\r\n            this.disabletellerTrxnStatus = true;\r\n            this.disabletellerTrxnRefNo = false;\r\n            this.disablechequeNumber = false;\r\n          }\r\n          if (fundResp.fundBy == \"Cheque\") {\r\n            this.disableFundByAccount = true;\r\n            this.disablechequeNumber = true;\r\n            this.disabletellerTrxnRefNo = false;\r\n            this.disabletellerTrxnStatus = false;\r\n          }\r\n          if (fundResp.fundBy == \"Cash\") {\r\n            this.disabletellerTrxnRefNo = true;\r\n            this.disableFundByAccount = false;\r\n            this.disablechequeNumber = false;\r\n            this.disabletellerTrxnStatus = false;\r\n          }\r\n          this.buildFundFormGroup(fundResp);\r\n          // console.log(this.fundStageFormGroup);\r\n          // this.snack.open('Fund!', 'OK', {\r\n          //   duration: 4000,\r\n          //   verticalPosition: 'top',\r\n          //   horizontalPosition: 'right'\r\n          // });\r\n          this.cdr.markForCheck();\r\n        } else {\r\n          // this.snack.open('Not able to connect to server!', 'INTERNAL SERVER ERROR', {\r\n          //   duration: 4000,\r\n          //   verticalPosition: 'top',\r\n          //   horizontalPosition: 'right'\r\n          // });\r\n\r\n        }\r\n      }, (error: any) => {\r\n        // this.snack.open('Not able to connect to server!', 'INTERNAL SERVER ERROR', {\r\n        //   duration: 4000,\r\n        //   verticalPosition: 'top',\r\n        //   horizontalPosition: 'right'\r\n        // });\r\n\r\n      });\r\n  }\r\n\r\n  _keyPress(event: any) {\r\n    console.log(\"PRessed\", event);\r\n    const pattern = /[0-9]/;\r\n    let inputChar = String.fromCharCode(event.charCode);\r\n    if (!pattern.test(inputChar)) {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n  keyUp(e) {\r\n    console.log(\"key up Event ::\", e);\r\n  }\r\n\r\n  validateAmount(e: any) {\r\n    let enteredAmount = e.target.value;\r\n    console.log(\"amount\", enteredAmount);\r\n    if (this.fundStageFormGroup.get('fundBy').value == \"Fund Transfer\" || this.fundStageFormGroup.get('fundBy').value == \"Cheque\") {\r\n      if (parseFloat(this.accountInfo.accBalance) < parseFloat(enteredAmount)) {\r\n        this.snack.open(`Amount should not exceed than Account Balance`, 'OK', {\r\n          duration: 2000,\r\n          verticalPosition: 'top',\r\n          horizontalPosition: 'right'\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  onChangeEvent(accountId: any) {\r\n    console.log(\"Onchange event\", accountId);\r\n    this.fetchAccountBalance(accountId);\r\n  }\r\n\r\n  fetchAccountBalance(accountId, isForce?: boolean) {\r\n    this.loader.open();\r\n    this.apiService.fetchAccountBalanceByAccountId(accountId)\r\n      .subscribe(res => {\r\n        console.log(\"RES\", res);\r\n        this.accountInfo = res;\r\n        if (!isForce) {\r\n          if (this.fundStageFormGroup.get('fundBy').value == \"Fund Transfer\") {\r\n            this.fundStageFormGroup.get('fundByAccount').patchValue(res.accountId);\r\n            this.fundStageFormGroup.get('branchCode').patchValue(res.branchCode);\r\n          }\r\n        }\r\n        this.loader.close();\r\n        this.snack.open('Fetched!', 'OK', {\r\n          duration: 4000,\r\n          verticalPosition: 'top',\r\n          horizontalPosition: 'right'\r\n        });\r\n      }, (err: any) => {\r\n        this.loader.close();\r\n        this.snack.open('Invalid AccountId!', 'OK', {\r\n          duration: 4000,\r\n          verticalPosition: 'top',\r\n          horizontalPosition: 'right'\r\n        });\r\n      })\r\n  }\r\n\r\n}\r\n","<div class=\"matcard-size\">\r\n<form *ngIf=\"fundStageFormGroup\" [formGroup]=\"fundStageFormGroup\" novalidate>\r\n  <div fxLayout=\"row wrap\">\r\n    <div fxFlex=\"100\">\r\n      <div class=\"propic text-center\">\r\n        <img src=\"assets/images/svg/undraw_credit_card_payment_yb88.svg\" alt=\"\" class=\"propicture\"/>\r\n      </div>\r\n      <div class=\"profile-title text-center mt-8\">\r\n        <div class=\"screenTitle\"><b>Initial Funding Details</b></div>\r\n      </div>\r\n    </div>\r\n\r\n\r\n    <div fxFlex=\"100\" class=\"mt-24\">\r\n      <mat-card class=\"p-0\">\r\n        <mat-card-title>\r\n          <fieldset>\r\n          <legend visible=\"true\">Initial Funding Details</legend>\r\n          </fieldset>\r\n          </mat-card-title>\r\n\r\n\r\n        <mat-card-content *ngIf=\"actionAddOrEdit\">\r\n          <div fxLayout=\"row\" fxLayoutGap=\"25px\" fxLayoutAlign=\"left\" class=\"mt-32\">\r\n            <div fxFlex=\"100\" fxFlexOffset=\"20px\" class=\"pr-1\">\r\n\r\n              <div fxLayout=\"row\" fxLayoutGap=\"10px\" fxLayoutAlign=\"space-between start\">\r\n                <div fxFlex=\"50%\">\r\n                  <div class=\"pb-1\">\r\n                    <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                      <mat-label>Fund By*</mat-label>\r\n                      <!-- <input matInput formControlName=\"fundBy\" placeholder=\"Fund By\" required/> -->\r\n                      <mat-select class=\"full-width\" formControlName=\"fundBy\" placeholder=\"Fund By\" \r\n                       style=\"background-color: #FDFDFF; font-size: 16px;border: transparent;\" (selectionChange)=\"selected($event.value)\">\r\n                        <mat-option value=\"Cash\">Cash</mat-option>\r\n                        <mat-option value=\"Cheque\">Cheque</mat-option> \r\n                        <mat-option value=\"Fund Transfer\">Fund Transfer</mat-option>\r\n                      </mat-select>\r\n                        <mat-error *ngIf=\"fundStageFormGroup.controls['fundBy'].hasError('required')\">\r\n                        Enter Fund By\r\n                      </mat-error>\r\n                    </mat-form-field>\r\n                  </div>\r\n                </div>\r\n                <div fxFlex=\"50%\">\r\n                  <div class=\"pb-1\">\r\n                    <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                      <mat-label>Amount</mat-label>\r\n                      <input matInput formControlName=\"amount\" placeholder=\"Amount\" \r\n                      [value]=\"fundStageFormGroup.controls['amount'].value | removeComma\" \r\n                      (keyup)=\"validateAmount($event)\" \r\n                      (keypress)=_keyPress($event)\r\n                      maxlength=\"10\"\r\n                      minlength=\"0\"\r\n                      required/>\r\n                        <mat-error *ngIf=\"fundStageFormGroup.controls['amount'].hasError('required')\">\r\n                        Enter Amount\r\n                      </mat-error>\r\n                    </mat-form-field>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div fxLayout=\"row\" fxLayoutGap=\"10px\" fxLayoutAlign=\"space-between start\">\r\n                <div fxFlex=\"50%\" *ngIf=\"disabletellerTrxnRefNo\">\r\n                  <div class=\"pb-1\">\r\n                    <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                      <mat-label>Teller Transaction Reference Number</mat-label>\r\n                      <input matInput formControlName=\"tellerTrxnRefNo\" (keypress)=_keyPress($event)\r\n                        placeholder=\"Teller Transaction Reference Number\" maxlength=\"10\"\r\n                        minlength=\"0\"/>\r\n                        <mat-error *ngIf=\"fundStageFormGroup.controls['tellerTrxnRefNo'].hasError('required')\">\r\n                        Enter Teller Transaction Reference Number\r\n                      </mat-error>\r\n                    </mat-form-field>\r\n                  </div>\r\n                </div>\r\n                  <div fxFlex=\"50%\" *ngIf=\"disableFundByAccount\">\r\n                  <div class=\"pb-1\">\r\n                <mat-form-field appearance=\"outline\" class=\"full-width\" >\r\n                  <mat-label>Fund By Account</mat-label>\r\n                  <input (keypress)=\"_keyPress($event)\" \r\n                         (keyup)=\"keyUp($event)\" \r\n                         name=\"account\" \r\n                         formControlName=\"fundByAccount\" \r\n                         matInput \r\n                         placeholder=\"Fund By Account\"\r\n                         maxlength=\"10\"\r\n                         minlength=\"0\"\r\n                         (change)=\"onChangeEvent(fundStageFormGroup.get('fundByAccount').value)\">\r\n                    <mat-icon matSuffix>search</mat-icon>\r\n                    <mat-hint *ngIf=\"accountInfo !== null\">Available Balance : {{ accountInfo?.accBalance | currency:accountInfo?.currency:'symbol':'4.2-2'}}</mat-hint>\r\n                  <mat-error *ngIf=\"fundStageFormGroup.get('fundByAccount').hasError('required')\">\r\n                    Fund By Account is Required! \r\n                  </mat-error>\r\n                </mat-form-field>\r\n               </div>\r\n                </div>\r\n                <div fxFlex=\"50%\" *ngIf=\"disabletellerTrxnStatus\">\r\n                  <div class=\"pb-1\">\r\n                    <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                      <mat-label>Branch Code</mat-label>\r\n                      <input matInput formControlName=\"branchCode\" appUppercaseInput\r\n                        placeholder=\"Branch Code\"\r\n                        maxlength=\"11\"\r\n                         minlength=\"0\"/>\r\n                        <mat-error *ngIf=\"fundStageFormGroup.controls['branchCode'].hasError('required')\">\r\n                        Enter Branch Code\r\n                      </mat-error>\r\n                    </mat-form-field>\r\n                  </div>\r\n                </div>\r\n                <div fxFlex=\"50%\" *ngIf=\"disablechequeNumber\">\r\n                  <div class=\"pb-1\">\r\n                    <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                      <mat-label>Cheque Number</mat-label>\r\n                      <input matInput formControlName=\"chequeNumber\" placeholder=\"Cheque Number\" maxlength=\"12\" minlength=\"6\"\r\n                      (keypress)=\"_keyPress($event)\"/>\r\n                        <mat-error *ngIf=\"fundStageFormGroup.controls['chequeNumber'].hasError('required')\">\r\n                        Enter Cheque Number\r\n                      </mat-error>\r\n                     \r\n                    </mat-form-field>\r\n                    <small *ngIf=\"chequeNoLenCheck\" style=\"color: tomato;\">\r\n                      Cheque Number should be minmum 6 digits\r\n                    </small>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </mat-card-content>\r\n\r\n\r\n        <mat-card-content *ngIf=\"actionView\">\r\n          <div fxLayout=\"row\" fxLayoutGap=\"25px\" fxLayoutAlign=\"center center\" class=\"mt-32\">\r\n            <div fxFlex=\"70\" fxFlexOffset=\"20px\" class=\"pr-1\">\r\n              <div fxLayout=\"row\" fxLayoutGap=\"10px\" fxLayoutAlign=\"space-between start\"\r\n              style=\"margin-bottom: 20px;\">\r\n                <div fxFlex=\"50%\">\r\n                  <div class=\"pb-1\">\r\n                    <button mat-raised-button id=\"referenceNumber\" color=\"primary\" >\r\n                      ReferenceNumber : {{fundStageFormGroup.value.tellerTrxnRefNo}}\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n                <div fxFlex=\"50%\" align=\"right\">\r\n                  <div class=\"pb-1\">\r\n                    <button mat-raised-button id=\"status\" style=\"background-color: #1ABC9C ;\" type=\"button\">\r\n                      <!--{{fundStageFormGroup.value.tellerTrxnStatus}}-->\r\n                      Branch Code : {{fundStageFormGroup.value.tellerTrxnStatus}}\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div fxLayout=\"row\" fxLayoutGap=\"10px\" fxLayoutAlign=\"space-between start\">\r\n                <div fxFlex=\"50%\">\r\n                  <div class=\"pb-1\">\r\n                    <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                      <mat-label>Amount</mat-label>\r\n                      <span matPrefix>&nbsp;</span>\r\n                      <input matInput formControlName=\"amount\" placeholder=\"Amount\" readonly/>\r\n                    </mat-form-field>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </mat-card-content>\r\n\r\n      </mat-card>\r\n    </div>\r\n\r\n\r\n    <div fxFlex=\"100\" class=\"mt-16\">\r\n      <button mat-button class=\"Backbtn\" (click)=\"goBack()\">Back</button>\r\n      <span fxFlex></span>\r\n      \r\n      <button mat-raised-button color=\"primary\" class=\"Nextbtn\" [disabled]=\"fundStageFormGroup.invalid\"\r\n      (click)=\"onSubmit(fundStageFormGroup.value)\"\r\n        #submitBtn>Next</button>\r\n    </div>\r\n\r\n  </div>\r\n</form>\r\n</div>\r\n","import { ChangeDetectorRef, Component, OnInit, ViewChild, Renderer2, ElementRef, Inject } from '@angular/core';\r\nimport { FormBuilder, FormGroup, FormArray, Validators } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { AppConfirmService } from 'app/shared/services/app-confirm/app-confirm.service';\r\nimport { ApplicationEntryStageService } from 'app/shared/services/application-entry-stage.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { DataService } from 'app/shared/services/data.service';\r\nimport * as moment from 'moment';\r\nimport { AccountService } from 'app/views/home/account.service';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-account-open-popup',\r\n  templateUrl: './account-open-popup.component.html',\r\n  styleUrls: ['./account-open-popup.component.scss']\r\n})\r\nexport class AccountOpenPopupComponent implements OnInit {\r\n  submitted = false;\r\n  formData = {}\r\n  console = console;\r\n  applicantForms: FormGroup;\r\n  accountId: string;\r\n\r\n  arrayPrefix: any[] = [];\r\n  arrayGender: any[] = [];\r\n  arrayCountry: any[] = [];\r\n  arrayState: any[] = [];\r\n  arrayCity: any[] = [];\r\n  arrayResidence: any[] = [];\r\n  arrayDocumentType: any[] = [];\r\n  applicantDetailsArray: any[] = [];\r\n  toggle: boolean = false;\r\n  // customerDetails: IcustProductCustomerInfo = new IcustProductCustomerInfo();\r\n  customerDetails: any = {};\r\n  applicantDetails = [];\r\n  navSubscription: any;\r\n  routeparams: any;\r\n  showEditOption: boolean = false;\r\n  custInfo: string[];\r\n  tomorrow = new Date();\r\n  maxDate = new Date();\r\n  minDate = new Date();\r\n  addNew: boolean = true;\r\n\r\n  toggleClick: boolean = false;\r\n  existingCustomer: boolean;\r\n  productCustomerId: any;\r\n  isProductCustomerIdExist: boolean = false;\r\n  isAccountOpenScreen: boolean = false;\r\n  previousUrl: string = '';\r\n  addFunc: boolean = true;\r\n  index: any;\r\n  entityName: string;\r\n  arrayOwnership: string[];\r\n  isAllSameDigitVal: boolean= false;\r\n\r\n\r\n  constructor( @Inject(MAT_DIALOG_DATA) public data: any,\r\n  public dialogRef: MatDialogRef<AccountOpenPopupComponent>,private router: Router, private route: ActivatedRoute,private ls: LocalStoreService, private apiService: ApiService, private formBuilder: FormBuilder, private confirmService: AppConfirmService, private cdr: ChangeDetectorRef, private appApiService: ApplicationEntryStageService,\r\n    private snack: MatSnackBar, private accountService: AccountService) {\r\n    this.tomorrow.setDate(this.tomorrow.getDate());\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.accountId = this.ls.getItem('accountId');\r\n    console.log(this.accountId);\r\n    this.productCustomerId = this.ls.getItem('PRODUCT_CUSTOMER_ID');\r\n    this.isAccountOpenScreen = JSON.parse(this.ls.getItem('ACC_OPEN_DONE'));\r\n    console.log(\"check if\", this.accountId, this.isAccountOpenScreen);\r\n\r\n    this.getPrefixValue(\"prefix\");\r\n    this.getGenderValue(\"gender\");\r\n    this.getOwnershipValue(\"ownership\");\r\n    this.getResidenceDetails(\"residence\");\r\n    this.getCountryName(\"country\");\r\n    // this.getStateName(\"state\");\r\n    // this.getCityName(\"city\");\r\n\r\n    this.getDocumentType(\"document_type\");\r\n\r\n    this.buildCustomerForm();\r\n  }\r\n\r\n  buildCustomerForm(data?) {\r\n    console.log(\"data Check ??\", data);\r\n    this.applicantForms = this.formBuilder.group({\r\n      productAccountId: data ? data.productAccountId : this.accountId,\r\n      ownership: data ? data.ownership : 'Self',\r\n      numOfApplicants: data ? data.numOfApplicants.toString() : '',\r\n      applicantDetails: this.addCustFormGroup()\r\n    });\r\n  }\r\n\r\n  toggleChanges(i) {\r\n    // let control = this.a.controls[i] as FormGroup;\r\n    // console.log(control.get('existingCustomer').value);\r\n    // if (control.controls['existingCustomer'].value == true) {\r\n    //   control.controls['cifNumber'].setValidators([Validators.required]);\r\n    //   control.controls['cifNumber'].updateValueAndValidity();\r\n    //   control.controls['cifNumber'].markAsTouched();\r\n    //   // this.toggleClick = true;\r\n    //   // this.existingCustomer = true;\r\n    // }\r\n    // else {\r\n    //   // this.toggleClick = false;\r\n    //   control.controls['cifNumber'].clearValidators();\r\n    //   control.controls['cifNumber'].updateValueAndValidity();\r\n    //   control.controls['cifNumber'].markAsTouched();\r\n    // }\r\n  }\r\n\r\n  letterOnly(event) {\r\n    var charCode = event.keyCode;\r\n            if ((charCode > 64 && charCode < 91) || (charCode > 96 && charCode < 123) || charCode == 8)\r\n                return true;\r\n            else\r\n                return false;\r\n  }\r\n\r\n  onKeyPress(event: any) {\r\n    const number = /[0-9\\+\\-\\ ]/;\r\n    let inputCharacter = String.fromCharCode(event.charCode);\r\n    if (event.keyCode != 8 && !number.test(inputCharacter)) {\r\n      event.preventDefault();\r\n      console.log(\"event:\", event)\r\n    }\r\n  }\r\n\r\n  _keyPress(event: any) {\r\n    const pattern = /[0-9]/;\r\n    let inputChar = String.fromCharCode(event.charCode);\r\n    if (!pattern.test(inputChar)) {\r\n      event.preventDefault();\r\n\r\n    }\r\n  }\r\n\r\n  validateNumber(event) {\r\n    const keyCode = event.keyCode;\r\n    const excludedKeys = [8, 37, 39, 46];\r\n    if (!((keyCode >= 48 && keyCode <= 57) ||\r\n      (keyCode >= 96 && keyCode <= 105) ||\r\n      (excludedKeys.includes(keyCode)))) {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n\r\n  addCustFormGroup(): FormGroup {\r\n    return this.formBuilder.group({\r\n      existingCustomer: [false, []],\r\n      primaryCustomer: [false, []],\r\n      cifNumber: [],\r\n      prefix: ['', Validators.required],\r\n      firstName: ['', Validators.required],\r\n      middleName: [''],\r\n      lastName: ['', Validators.required],\r\n      gender: ['', Validators.required],\r\n      dateOfBirth: ['', Validators.required],\r\n      placeOfBirth: ['', Validators.required],\r\n      residenceStatus: ['', Validators.required],\r\n      nationality: ['', Validators.required],\r\n      countryOfResidence: ['', Validators.required],\r\n      occupationType: ['', Validators.required],\r\n      idNumber: ['', Validators.required],\r\n      idType: ['', Validators.required],\r\n      expiryDate: ['', Validators.required],\r\n      addressType: ['', Validators.required],\r\n      building: ['', Validators.required],\r\n      street: ['', Validators.required],\r\n      locality: ['', Validators.required],\r\n      city: ['', Validators.required],\r\n      state: ['', Validators.required],\r\n      country: ['', Validators.required],\r\n      zipCode: ['', [Validators.required]],\r\n      phoneNumber: ['', [Validators.required, Validators.minLength(3), Validators.maxLength(10), Validators.pattern(\"^[0-9]{10,12}$\")]],\r\n      landlineNumber: ['', [Validators.required, Validators.pattern(\"^[0-9]{10,12}$\")]],\r\n      primaryEmailAdress: ['', [Validators.required,\r\n      Validators.email]],\r\n    })\r\n  }\r\n\r\n  get f() { return this.applicantForms.controls; }\r\n  get applicant() { return this.f.applicantDetails; }\r\n\r\n\r\n  convertDate(value) {\r\n    let date = moment(value).format('YYYY-MM-DD'); // ISO 8601 format\r\n    // let date = new Date(value).format('yyyy-MMM-dd');\r\n    console.log(\"date\", date);\r\n    if (date)\r\n      return date;\r\n  }\r\n\r\n\r\n  getPrefixValue(key: string) {\r\n    this.apiService.getDropDownValues(key).subscribe((data) => {\r\n      this.arrayPrefix = data;\r\n    });\r\n  }\r\n\r\n  getGenderValue(key: string) {\r\n    this.apiService.getDropDownValues(key).subscribe((data) => {\r\n      this.arrayGender = data;\r\n    });\r\n  }\r\n\r\n  getCountryName(key: string) {\r\n    this.apiService.getDropDownValues(key).subscribe((data) => {\r\n      this.arrayCountry = data;\r\n      console.log(\"-->\", this.arrayCountry)\r\n    });\r\n  }\r\n\r\n  getOwnershipValue(key: string) {\r\n    this.apiService.getDropDownValues(key).subscribe((data) => {\r\n      this.arrayOwnership = data;\r\n    });\r\n  }\r\n\r\n  getStateName(country) {\r\n    this.entityName = \"state\";\r\n    console.log(\"State -- \", country)\r\n    this.apiService.getDropDownValues1(this.entityName, country).subscribe((data) => {\r\n      this.arrayState = data;\r\n      console.log(\"-->\", this.arrayState)\r\n    });\r\n  }\r\n\r\n  getCityName(state: any) {\r\n    this.entityName = \"city\";\r\n    console.log(state)\r\n    this.apiService.getDropDownValues1(this.entityName, state).subscribe((data) => {\r\n      this.arrayCity = data;\r\n      console.log(\"-->\", this.arrayCity)\r\n    });\r\n  }\r\n\r\n\r\n  getResidenceDetails(key: string) {\r\n    this.apiService.getDropDownValues(key).subscribe((data) => {\r\n      this.arrayResidence = data;\r\n    });\r\n  }\r\n\r\n  getDocumentType(key: string) {\r\n    this.apiService.getDropDownValues(key).subscribe((data) => {\r\n      this.arrayDocumentType = data;\r\n    });\r\n  }\r\n\r\n  onSubmit(index: any) {\r\n\r\n    this.submitted = true;\r\n\r\n    if (this.applicantForms.invalid) {\r\n      console.log(\"test\");\r\n      return;\r\n    }\r\n\r\n    let payloadObj: any = {};\r\n    const control = <FormArray>this.applicantForms.controls['applicantDetails'].value;\r\n\r\n    for (let i = 0; i < control.length; i++) {\r\n\r\n      let customerInfo: any = {}\r\n      let addressObj: any = {};\r\n      let custIdProofs: any = {};\r\n      let custIdProofsArray: any[] = [];\r\n      let addressObjArray: any[] = [];\r\n\r\n      addressObj.addressType = control[i].addressType;\r\n      addressObj.address1 = control[i].building + \",\" + control[i].street + \",\" + control[i].locality;\r\n      addressObj.address2 = control[i].state;\r\n      addressObj.city = control[i].city;\r\n      addressObj.country = control[i].country;\r\n      // addressObj.state = control[i].state;\r\n      addressObj.city = control[i].city;\r\n      addressObj.zipCode = control[i].zipCode;\r\n      addressObjArray.push(addressObj);\r\n\r\n      custIdProofs.expiryDate = this.convertDate(control[i].expiryDate);\r\n      custIdProofs.idType = control[i].idType;\r\n      custIdProofs.idNumber = control[i].idNumber;\r\n      custIdProofsArray.push(custIdProofs);\r\n\r\n      customerInfo.userAddress = addressObjArray;\r\n      customerInfo.custIdProofs = custIdProofsArray;\r\n      customerInfo.phoneNumber = control[i].phoneNumber;\r\n      customerInfo.primaryEmailAdress = control[i].primaryEmailAdress;\r\n      customerInfo.prefix = control[i].prefix;\r\n      customerInfo.firstName = control[i].firstName;\r\n      customerInfo.middleName = control[i].middleName;\r\n      customerInfo.lastName = control[i].lastName;\r\n      customerInfo.cifNumber = control[i].cifNumber;\r\n      customerInfo.gender = control[i].gender;\r\n      customerInfo.dateOfBirth = this.convertDate(control[i].dateOfBirth);\r\n      customerInfo.nationality = control[i].nationality;\r\n      customerInfo.custAccount = null;\r\n      customerInfo.landlineNumber = control[i].landlineNumber;\r\n      customerInfo.createdBy = \"ADMIN\";\r\n      customerInfo.createdTime = \"2021-Jul-21 00:34:39\";\r\n      customerInfo.modifiedBy = \"ADMIN\";\r\n      customerInfo.modifiedTime = \"2021-Jul-22 11:55:38\";\r\n\r\n\r\n      payloadObj.productCustomerId = this.ls.getItem('PRODUCT_CUSTOMER_ID');\r\n      payloadObj.existingCustomer = control[i].existingCustomer;\r\n      payloadObj.primaryCustomer = control[i].primaryCustomer;\r\n      payloadObj.residenceStatus = control[i].residenceStatus;\r\n      payloadObj.placeOfBirth = control[i].placeOfBirth;\r\n      payloadObj.countryOfResidence = control[i].countryOfResidence;\r\n      payloadObj.occupationType = control[i].occupationType;\r\n      // payloadObj.cifNumber = control[i].cifNumber;\r\n      payloadObj.customerInfo = customerInfo;\r\n\r\n    }\r\n    // payloadObj.applicantDetails = this.applicantDetailsArray;\r\n    console.log(payloadObj);\r\n\r\n\r\n    console.log(\"value of productCustomerId \", this.productCustomerId);\r\n\r\n    this.appApiService.saveCustomerDetails2(payloadObj)\r\n      .subscribe((data: any) => {\r\n        console.log(\"Response of service 2 ---> \", data);\r\n        this.ls.setItem('ACC_OPEN_DONE', true);\r\n        this.accountService.refresh.next();\r\n\r\n        if (data === 200 || data !== null) {\r\n          this.snack.open('Customer Information Details Saved!', 'OK', {\r\n            duration: 4000,\r\n            verticalPosition: 'top',\r\n            horizontalPosition: 'right'\r\n          });\r\n\r\n        }\r\n        else if (data === 500) {\r\n          this.snack.open('Not able to connect to server through 2 service', 'INTERNAL SERVER ERROR 2', {\r\n            duration: 4000,\r\n            verticalPosition: 'top',\r\n            horizontalPosition: 'right'\r\n          });\r\n        }\r\n      }, err => {\r\n        console.log(err);\r\n      })\r\n  }\r\n\r\n  onChange(event, i) {\r\n    console.log(\"toggle event\", event.checked, \"index\", i);\r\n\r\n    if (event.checked == true) {\r\n      this.toggle = true;\r\n      this.index = i;\r\n    }\r\n    if (event.checked == false && this.index === i) {\r\n      this.toggle = false;\r\n    }\r\n    console.log(\"this.toggle\", this.toggle)\r\n  }\r\n\r\n  onReset() {\r\n    // reset whole form back to initial state\r\n    this.submitted = false;\r\n    this.applicantForms.reset();\r\n  }\r\n\r\n  isAllSameDigit(event) {\r\n    let count = 0, number = event.target.value;\r\n    if (number != '') {\r\n      for (var i = 0; i < number.length; i++) {\r\n        if (0 == number[i]) {\r\n          count++;\r\n        }\r\n      }\r\n      console.log('number :: ', number);\r\n      console.log('isAllSameDigitVal :: ', count , number.length)\r\n      if (count == number.length) {\r\n        console.log('if loop')\r\n        this.isAllSameDigitVal = true;\r\n      }\r\n      else {\r\n        this.isAllSameDigitVal = false;\r\n      }\r\n    }else{\r\n      this.isAllSameDigitVal = false;\r\n    }\r\n  }\r\n\r\n}\r\n","\r\n    <div style=\"max-height: 500px;\">\r\n        <div fxLayout=\"row\" fxLayoutAlign=\"space-around center\">\r\n            <h1 matDialogTitle>{{data.title}}</h1>\r\n            <span fxFlex></span>\r\n            <button mat-icon-button (click)=\"dialogRef.close(false)\">\r\n                <mat-icon>close</mat-icon>\r\n              </button>\r\n        </div>\r\n       \r\n    <form *ngIf=\"applicantForms\" [formGroup]=\"applicantForms\">\r\n        <div fxLayout=\"row\" fxLayoutGap=\"25px\">\r\n          <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-1\">\r\n            <div class=\"pb-1\">\r\n              <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                <mat-label>Ownership</mat-label>\r\n                <mat-select formControlName=\"ownership\" name=\"owner\" required>\r\n                  <mat-option *ngFor=\"let ownership of arrayOwnership\" [value]=\"ownership\"> \r\n                    {{ownership}} \r\n                  </mat-option>\r\n                </mat-select>\r\n                <mat-error *ngIf=\"applicantForms.get('ownership').hasError('required')\">\r\n                  Ownership is Required!\r\n                </mat-error>\r\n              </mat-form-field>\r\n            </div>\r\n          </div>\r\n          <div fxFlex=\"100\" fxFlex.gt-xs=\"50\">\r\n            <div class=\"pb-1\">\r\n              <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                <mat-label>Number of Applicants</mat-label>\r\n                <input\r\n                  matInput\r\n                  type=\"number\"\r\n                  formControlName=\"numOfApplicants\"\r\n                  name=\"applicantCount\"\r\n                  placeholder=\"No of Applicant\"\r\n                  readonly\r\n                />\r\n              </mat-form-field>\r\n            </div>\r\n          </div>\r\n        </div>\r\n    <div formGroupName=\"applicantDetails\">\r\n        <div fxLayout=\"row\" fxLayoutGap=\"25px\">\r\n          <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-1\">\r\n            <div class=\"pb-1\">\r\n              <label>Is the applicant an existing customer?</label>\r\n              &nbsp;&nbsp;\r\n              <mat-slide-toggle\r\n                 (change)=\"toggleChanges($event)\"\r\n                formControlName=\"existingCustomer\"\r\n              ></mat-slide-toggle>\r\n              <div class=\"mb-16\"></div>\r\n            </div>\r\n    \r\n            <div class=\"pb-1\">\r\n              <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                <mat-label>CIF Number</mat-label>\r\n                <input\r\n                  matInput\r\n                  type=\"number\"\r\n                  formControlName=\"cifNumber\"\r\n                  name=\"cif\"\r\n                  placeholder=\"CIF Number\" (focusout)=\"onFocusOutEvent($event)\"\r\n                />\r\n                <mat-error *ngIf=\"applicant.get('cifNumber').hasError('required')\">\r\n                  CIF Number is Required!\r\n                </mat-error>\r\n              </mat-form-field>\r\n            </div>\r\n    \r\n            <div class=\"pb-1\">\r\n              <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                <mat-label>First Name*</mat-label>\r\n                <input\r\n                  matInput\r\n                  name=\"fname\"\r\n                  formControlName=\"firstName\"\r\n                  placeholder=\"First Name\"\r\n                  (keypress)=\"letterOnly($event)\"\r\n                />\r\n                <mat-error *ngIf=\"applicant.get('firstName').hasError('required')\">\r\n                  First Name is Required!\r\n                </mat-error>\r\n              </mat-form-field>\r\n            </div>\r\n    \r\n            <div class=\"pb-1\">\r\n              <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                <mat-label>Last Name*</mat-label>\r\n                <input\r\n                  matInput\r\n                  name=\"lname\"\r\n                  formControlName=\"lastName\"\r\n                  placeholder=\"Last Name\"\r\n                  (keypress)=\"letterOnly($event)\"\r\n                />\r\n                <mat-error *ngIf=\"applicant.get('lastName').hasError('required')\">\r\n                  Last Name is Required!\r\n                </mat-error>\r\n              </mat-form-field>\r\n            </div>\r\n    \r\n            <div class=\"pb-1\">\r\n              <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                <mat-label>Date of Birth*</mat-label>\r\n                <input\r\n                  matInput\r\n                  name=\"date\"\r\n                  readonly\r\n                  formControlName=\"dateOfBirth\"\r\n                            placeholder=\"Date of birth\"\r\n                            [matDatepicker]=\"appDatepicker\"\r\n                            [max]=\"tomorrow\" [max]=\"maxDate\"\r\n                />\r\n    \r\n                <mat-datepicker-toggle\r\n                  matSuffix\r\n                  [for]=\"appDatepicker\"\r\n                ></mat-datepicker-toggle>\r\n              <mat-error *ngIf=\"applicant.get('dateOfBirth').hasError('required')\">\r\n                            Date of Birth is Required!\r\n                          </mat-error>\r\n              </mat-form-field>\r\n              <mat-datepicker #appDatepicker></mat-datepicker>\r\n            </div>\r\n    \r\n            <div class=\"pb-1\">\r\n              <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                <mat-label>Resident Status*</mat-label>\r\n                <mat-select name=\"residenceType\" formControlName=\"residenceStatus\">\r\n                  <mat-option *ngFor=\"let residence of arrayResidence\" [value]=\"residence\"> \r\n                    {{residence}} \r\n                  </mat-option> \r\n                </mat-select>\r\n                <mat-error *ngIf=\"applicant.get('residenceStatus').hasError('required')\">\r\n                  Resident Status is Required!\r\n                </mat-error>\r\n              </mat-form-field>\r\n              \r\n            </div>\r\n    \r\n            <div class=\"pb-1\">\r\n              <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                <mat-label>Country of Residence*</mat-label>\r\n                <mat-select name=\"resident\" formControlName=\"countryOfResidence\">\r\n                  <mat-option *ngFor=\"let country of arrayCountry\" [value]=\"country\"> \r\n                    {{country}} \r\n                  </mat-option> \r\n                </mat-select>\r\n                <mat-error *ngIf=\"applicant.get('countryOfResidence').hasError('required')\">\r\n                  Country of Residence is Required!\r\n                </mat-error>\r\n              </mat-form-field>\r\n            </div>\r\n    \r\n            <div class=\"pb-1\">\r\n              <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                <mat-label>Unique ID Number *</mat-label>\r\n                <input\r\n                  matInput\r\n                  name=\"uniqueidentity\"\r\n                  formControlName=\"idNumber\"\r\n                  placeholder=\"Unique ID Number\"\r\n                  maxlength=\"12\"\r\n                  pattern=\"^[+]?([0-9]+(?:[\\.][0-9]*)?|\\.[0-9]+)$\" \r\n                />\r\n                <mat-error *ngIf=\"applicant.get('idNumber').touched && !applicant.get('idNumber').valid\">\r\n                  <div *ngIf=\"applicant.get('idNumber').hasError('required')\">Unique ID Number is Required!</div>\r\n                  <div *ngIf=\"applicant.get('idNumber').hasError('pattern')\">This is a numeric field</div>\r\n                </mat-error>\r\n              </mat-form-field>\r\n            </div>\r\n    \r\n            <div class=\"pb-1\">\r\n              <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                <mat-label>ID Type Valid Till*</mat-label>\r\n                <input\r\n                  matInput\r\n                  name=\"date\"\r\n                  readonly\r\n                  formControlName=\"expiryDate\"\r\n                  placeholder=\"ID Type Valid Till\"\r\n                  [matDatepicker]=\"appDatepicker1\"\r\n                 \r\n              \r\n                />\r\n    \r\n                <mat-datepicker-toggle\r\n                  matSuffix\r\n                  [for]=\"appDatepicker1\"\r\n                ></mat-datepicker-toggle>\r\n                <mat-error *ngIf=\"applicant.get('expiryDate').hasError('required')\">\r\n                  ID Type Valid Till is Required!\r\n                </mat-error>\r\n              </mat-form-field>\r\n              <mat-datepicker #appDatepicker1></mat-datepicker>\r\n            </div>\r\n          </div>\r\n          <div fxFlex=\"100\" fxFlex.gt-xs=\"50\">\r\n            <div class=\"pb-1\" *ngIf=\"this.index==i || !toggle\">\r\n              <label>Is the applicant a primary customer?</label>\r\n              &nbsp;&nbsp;\r\n              <mat-slide-toggle (change)=\"onChange($event,i)\"\r\n                formControlName=\"primaryCustomer\"\r\n              ></mat-slide-toggle>\r\n    \r\n              <div class=\"mb-16\"></div>\r\n            </div>\r\n            <div class=\"pb-1\">\r\n              <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                <mat-label>Customer Prefix*</mat-label>\r\n                <mat-select name=\"prefix\" formControlName=\"prefix\">\r\n                  <mat-option *ngFor=\"let prefix of arrayPrefix\" [value]=\"prefix\"> \r\n                    {{prefix}} \r\n                  </mat-option>                       \r\n                </mat-select>\r\n                <mat-error *ngIf=\"applicant.get('prefix').hasError('required')\">\r\n                  Prefix is Required!\r\n                </mat-error>\r\n              </mat-form-field>\r\n            </div>\r\n    \r\n            <div class=\"pb-1\">\r\n              <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                <mat-label>Middle Name</mat-label>\r\n                <input\r\n                  matInput\r\n                  name=\"mname\"\r\n                  formControlName=\"middleName\"\r\n                  placeholder=\"Middle Name\"\r\n                  (keypress)=\"letterOnly($event)\"\r\n                />\r\n              </mat-form-field>\r\n            </div>\r\n    \r\n            <div class=\"pb-1\">\r\n              <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                <mat-label>Gender*</mat-label>\r\n                <mat-select name=\"gender\" formControlName=\"gender\">\r\n                  <mat-option *ngFor=\"let gender of arrayGender\" [value]=\"gender\"> \r\n                    {{gender}} \r\n                  </mat-option> \r\n                </mat-select>\r\n                <mat-error *ngIf=\"applicant.get('gender').hasError('required')\">\r\n                  Gender is Required!\r\n                </mat-error>\r\n              </mat-form-field>\r\n            </div>\r\n    \r\n            <div class=\"pb-1\">\r\n              <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                <mat-label>Birth Place*</mat-label>\r\n                <input\r\n                  matInput\r\n                  name=\"bplace\"\r\n                  formControlName=\"placeOfBirth\"\r\n                  placeholder=\"Birth Place\"\r\n                />\r\n                <mat-error *ngIf=\"applicant.get('placeOfBirth').hasError('required')\">\r\n                  Birth Place is Required!\r\n                </mat-error>\r\n              </mat-form-field>\r\n            </div>\r\n    \r\n            <div class=\"pb-1\">\r\n              <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                <mat-label>Citizenship By*</mat-label>\r\n                <mat-select name=\"citizen\" formControlName=\"nationality\">\r\n                  <mat-option *ngFor=\"let country of arrayCountry\" [value]=\"country\"> \r\n                    {{country}} \r\n                  </mat-option> \r\n                </mat-select>\r\n                <mat-error *ngIf=\"applicant.get('nationality').hasError('required')\">\r\n                  Citizenship By is Required!\r\n                </mat-error>\r\n              </mat-form-field>\r\n            </div>\r\n    \r\n            <div class=\"pb-1\">\r\n              <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                <mat-label>Occupation Type*</mat-label>\r\n                <input\r\n                  matInput\r\n                  name=\"occupation\"\r\n                  formControlName=\"occupationType\"\r\n                  placeholder=\"Occupation Type\"\r\n                />\r\n                <mat-error *ngIf=\"applicant.get('occupationType').hasError('required')\">\r\n                  Occupation Type is Required!\r\n                </mat-error>\r\n              </mat-form-field>\r\n            </div>\r\n    \r\n            <div class=\"pb-1\">\r\n              <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                <mat-label>ID Type*</mat-label>\r\n                <mat-select name=\"idtype\" formControlName=\"idType\">\r\n                  <mat-option *ngFor=\"let doc of arrayDocumentType\" [value]=\"doc\"> \r\n                    {{doc}} \r\n                  </mat-option> \r\n                </mat-select>\r\n                <mat-error *ngIf=\"applicant.get('idType').hasError('required')\">\r\n                  ID Type is Required!\r\n                </mat-error>\r\n              </mat-form-field>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <!-- Address Section start-->\r\n        <mat-accordion>\r\n          <mat-expansion-panel class=\"mb-8\" expanded=\"true\">\r\n            <mat-expansion-panel-header>\r\n              <mat-panel-title>Address </mat-panel-title>\r\n            </mat-expansion-panel-header>\r\n    \r\n            <div fxLayout=\"row\" fxLayoutGap=\"25px\">\r\n              <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-1\">\r\n                <div class=\"pb-1\">\r\n                  <mat-form-field\r\n                    appearance=\"outline\"\r\n                    class=\"full-width\"\r\n                  >\r\n                    <mat-label>Address Type*</mat-label>\r\n                    <input\r\n                      matInput\r\n                      formControlName=\"addressType\"\r\n                      name=\"address_type\"\r\n                      placeholder=\"Address Type\"\r\n                    />\r\n                    <mat-error *ngIf=\"applicant.get('addressType').hasError('required')\">\r\n                      Address Type is Required!\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n    \r\n                <div class=\"pb-1\">\r\n                  <mat-form-field\r\n                    appearance=\"outline\"\r\n                    class=\"full-width\"\r\n                  >\r\n                    <mat-label>Street*</mat-label>\r\n                    <input\r\n                      matInput\r\n                      name=\"a_street\"\r\n                      formControlName=\"street\"\r\n                      placeholder=\"Street\"\r\n                    />\r\n                    <mat-error *ngIf=\"applicant.get('street').hasError('required')\">\r\n                      Street is Required!\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n              \r\n                <div class=\"pb-1\">\r\n                  <mat-form-field\r\n                    appearance=\"outline\"\r\n                    class=\"full-width\"\r\n                  >\r\n                    <mat-label>Country*</mat-label>\r\n                    <mat-select name=\"country\" formControlName=\"country\" (selectionChange)=\"getStateName($event.value)\" >\r\n                      <mat-option *ngFor=\"let country of arrayCountry\" [value]=\"country\"> \r\n                        {{country}} \r\n                      </mat-option> \r\n                    </mat-select>\r\n                    <mat-error *ngIf=\"applicant.get('country').hasError('required')\">\r\n                      Country is Required!\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n    \r\n                <div class=\"pb-1\">\r\n                  <mat-form-field\r\n                    appearance=\"outline\"\r\n                    class=\"full-width\"\r\n                  >\r\n                    <mat-label>City*</mat-label>\r\n                    <mat-select\r\n                      name=\"city\"\r\n                      formControlName=\"city\"\r\n                     \r\n                    >\r\n                    <mat-option  *ngFor=\"let city of arrayCity\" [value]=\"city.value1\">{{city.value1}}</mat-option>\r\n                    </mat-select>\r\n                    <mat-error *ngIf=\"applicant.get('city').hasError('required')\">\r\n                      City is Required!\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n    \r\n              </div>\r\n              <div fxFlex=\"100\" fxFlex.gt-xs=\"50\">\r\n                <div class=\"pb-1\">\r\n                  <mat-form-field\r\n                    appearance=\"outline\"\r\n                    class=\"full-width\"\r\n                  >\r\n                    <mat-label>Building*</mat-label>\r\n                    <input\r\n                      matInput\r\n                      name=\"a_building\"\r\n                      formControlName=\"building\"\r\n                      placeholder=\"Building\"\r\n                    />\r\n                    <mat-error *ngIf=\"applicant.get('building').hasError('required')\">\r\n                      Building is Required!\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n    \r\n                <div class=\"pb-1\">\r\n                  <mat-form-field\r\n                    appearance=\"outline\"\r\n                    class=\"full-width\"\r\n                  >\r\n                    <mat-label>Locality*</mat-label>\r\n                    <input\r\n                      matInput\r\n                      name=\"a_locality\"\r\n                      formControlName=\"locality\"\r\n                      placeholder=\"Locality\"\r\n                    />\r\n                    <mat-error *ngIf=\"applicant.get('locality').hasError('required')\">\r\n                      Locality is Required!\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n    \r\n                <div class=\"pb-1\">\r\n                  <mat-form-field\r\n                    appearance=\"outline\"\r\n                    class=\"full-width\"\r\n                  >\r\n                    <mat-label>State*</mat-label>\r\n                    <mat-select name=\"state\" formControlName=\"state\" (selectionChange)=\"getCityName($event.value)\">\r\n                      <mat-option *ngFor=\"let state of arrayState\" [value]=\"state.value1\">{{state.value1}}</mat-option>\r\n                     \r\n                    </mat-select>\r\n                    <mat-error *ngIf=\"applicant.get('state').hasError('required')\">\r\n                      State is Required!\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n    \r\n                <div class=\"pb-1\">\r\n                  <mat-form-field\r\n                    appearance=\"outline\"\r\n                    class=\"full-width\"\r\n                  >\r\n                    <mat-label>Zip Code*</mat-label>\r\n                    <input type=\"text\"  maxlength=\"10\" (keypress)=\"onKeyPress($event)\"    \r\n                      matInput\r\n                      name=\"a_zip\"\r\n                      onlyNumber\r\n                      formControlName=\"zipCode\"\r\n                      placeholder=\"Zip Code\"\r\n                      (keyup)=\"isAllSameDigit($event)\" \r\n                    />\r\n                    <mat-error *ngIf=\"applicant.get('zipCode').hasError('required') &&\r\n                    !applicant.controls['zipCode'].valid && applicant.controls['zipCode']?.touched\">\r\n                    Please enter Zip Code!\r\n                  </mat-error>\r\n                  </mat-form-field>\r\n                  <h5 *ngIf=\"isAllSameDigitVal\" style=\"color: #E74C3C;\">Please enter valid Zip Code!\r\n                  </h5>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </mat-expansion-panel>\r\n        </mat-accordion>\r\n        <!-- Address Section end -->\r\n        <!-- Contact Information -->\r\n        <mat-accordion>\r\n          <mat-expansion-panel class=\"mb-8\" expanded=\"true\">\r\n            <mat-expansion-panel-header>\r\n              <mat-panel-title>Contact Information </mat-panel-title>\r\n            </mat-expansion-panel-header>\r\n    \r\n            <div fxLayout=\"row\" fxLayoutGap=\"25px\">\r\n              <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-1\">\r\n                <div class=\"pb-1\">\r\n                  <mat-form-field\r\n                    appearance=\"outline\"\r\n                    class=\"full-width\"\r\n                  >\r\n                    <mat-label>Mobile Number*</mat-label>\r\n                    <input\r\n                      maxlength=\"10\"\r\n                      (keypress)=\"onKeyPress($event)\" \r\n                      matInput\r\n                      formControlName=\"phoneNumber\"\r\n                      name=\"phone\"\r\n                      placeholder=\"Mobile Number\"\r\n                    />\r\n                    <mat-error *ngIf=\"applicant.get('phoneNumber').hasError('required')\">\r\n                      Mobile Number is Required!\r\n                    </mat-error>\r\n                    <mat-error *ngIf=\"applicant.get('phoneNumber').hasError('pattern')\">\r\n                      Please, Enter 10 digit Mobile Number!\r\n                    </mat-error>\r\n                  \r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"pb-1\">\r\n                  <mat-form-field\r\n                    appearance=\"outline\"\r\n                    class=\"full-width\"\r\n                  >\r\n                    <mat-label>E-mail*</mat-label>\r\n                    <input\r\n                      matInput\r\n                      name=\"email\"\r\n                      formControlName=\"primaryEmailAdress\"\r\n                      placeholder=\"e-mail\"\r\n                    />\r\n                    <mat-error *ngIf=\"applicant.get('primaryEmailAdress').hasError('required')\">\r\n                      E-mail is Required!\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>                          \r\n              </div>\r\n              <div fxFlex=\"100\" fxFlex.gt-xs=\"50\">\r\n                <div class=\"pb-1\">\r\n                  <mat-form-field\r\n                    appearance=\"outline\"\r\n                    class=\"full-width\"\r\n                  >\r\n                    <mat-label>Mobile Number*</mat-label>\r\n                    <input\r\n                     maxlength=\"10\"\r\n                     (keypress)=\"onKeyPress($event)\" \r\n                      matInput\r\n                      name=\"mobile\"\r\n                      formControlName=\"landlineNumber\"\r\n                      placeholder=\"Mobile Number\"\r\n                    />\r\n                    <mat-error *ngIf=\"applicant.get('landlineNumber').hasError('required')\">\r\n                      Mobile Number is Required!\r\n                    </mat-error>\r\n                    <mat-error *ngIf=\"applicant.get('landlineNumber').hasError('pattern')\">\r\n                      Please, Enter 10 digit Mobile Number!\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n            </div>\r\n    \r\n          </mat-expansion-panel>\r\n          <div class=\"pb-1\">\r\n          <button\r\n          mat-button\r\n          color=\"primary\"\r\n          type=\"submit\"\r\n          (click)=\"onSubmit()\" \r\n           >\r\n          <mat-icon></mat-icon> SAVE APPLICANT\r\n          </button>\r\n    \r\n          <button\r\n          mat-button\r\n          color=\"warn\"\r\n          (click)=\"dialogRef.close(false)\"\r\n        >\r\n          <mat-icon></mat-icon> Cancel\r\n        </button>\r\n        </div>\r\n        </mat-accordion>\r\n        <!-- Contact Information -->\r\n      </div>\r\n    </form>\r\n    </div>\r\n\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { Router } from '@angular/router';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { DataService } from 'app/shared/services/data.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\n\r\n@Component({\r\n  selector: 'app-unsecured-draft-summary',\r\n  templateUrl: './unsecured-draft-summary.component.html',\r\n  styleUrls: ['./unsecured-draft-summary.component.scss']\r\n})\r\nexport class UnsecuredDraftSummaryComponent implements OnInit {\r\n\r\n  unsecureoverdraftdata: any;\r\n  accountId: any;\r\n\r\n  constructor(private router: Router,private api: ApiService, private ls:LocalStoreService,\r\n    public dialogRef: MatDialogRef<UnsecuredDraftSummaryComponent>,\r\n    private dataService:DataService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.accountId = this.ls.getItem('accountId');\r\n    this.getUnsecuredOverdraftSummary();\r\n  }\r\n  edit(){\r\n    this.dataService.sendNavParam(this.unsecureoverdraftdata); \r\n    this.dialogRef.close();\r\n    this.router.navigateByUrl('/home/application/limit-entry-stage/unsecured-draft/'+this.accountId);\r\n  }\r\n  close(){\r\n    this.dialogRef.close();\r\n    this.router.navigateByUrl('/home/application/limit-entry-stage/list/');\r\n  }\r\n  getUnsecuredOverdraftSummary(){\r\n    this.api.UnsecuredOverdraftSummary(this.accountId).subscribe(result=>{\r\n        console.log(result);\r\n        this.unsecureoverdraftdata=result;\r\n      })\r\n  }\r\n}\r\n","<!-- <p>unsecured-draft-summary works!</p> -->\r\n<!-- <mat-card> -->\r\n    <mat-icon style=\"color: darkgray;padding-left: 45pc;\" (click)=\"close()\">close</mat-icon>\r\n    <h3 class=\"algn\">Unsecured Overdraft Details</h3>\r\n   \r\n    <mat-card style=\"width: 95%;\" >\r\n        <div  fxLayout=\"row wrap\">\r\n            <div style=\"padding-left: 4%;\" >\r\n                <p class=\"textcolor\">Limit ID </p> \r\n                <span>{{unsecureoverdraftdata.limitId}}</span>\r\n            </div>\r\n                <div fxlayout=\"row\" style=\"padding-left: 12%;\r\n                width: 42%;\">\r\n                    <p class=\"textcolor\">Overdraft Limit Amount</p>\r\n                <span>{{unsecureoverdraftdata.overdraftCurrency}} {{unsecureoverdraftdata.overdraftLimitAmount}}</span></div>\r\n                <div *ngIf=\"unsecureoverdraftdata?.renewPeriod !=null\">\r\n                    <p class=\"textalgn\">Renew Period</p>\r\n                    <span>{{unsecureoverdraftdata?.renewPeriod}}</span>\r\n                </div>\r\n                <div style=\"padding-left: 10%;\" *ngIf=\"unsecureoverdraftdata?.renewalAmount && unsecureoverdraftdata?.overdraftCurrency !=null\"> \r\n                    <p class=\"textalgn\">Renewal Amount</p>\r\n                    <span>{{unsecureoverdraftdata?.overdraftCurrency}} {{unsecureoverdraftdata?.renewalAmount}}</span>\r\n                </div>\r\n            </div>\r\n\r\n    </mat-card>\r\n    <u class=\"editalgn\" (click)=\"edit()\">Edit</u>\r\n<!-- </mat-card> -->\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\n\r\n@Component({\r\n  selector: 'app-edit-financial-details',\r\n  templateUrl: './edit-financial-details.component.html',\r\n  styleUrls: ['./edit-financial-details.component.scss']\r\n})\r\nexport class EditFinancialDetailsComponent implements OnInit {\r\n  accountId:any;\r\n  constructor(private ls:LocalStoreService,private api: ApiService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.accountId = this.ls.getItem('accountId');\r\n    this.getFinacialDeatils(this.accountId);\r\n  }\r\n  getFinacialDeatils(accountId)\r\n  {\r\n    this.api.getFinancialDetails(accountId).subscribe(editResp=>\r\n      {\r\n        console.log(\"edit\",editResp);\r\n       \r\n      })\r\n  }\r\n}\r\n","<p>edit-financial-details works!</p>\r\n","import { ChangeDetectorRef, Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MediaChange, MediaObserver } from '@angular/flex-layout';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { MatSidenav } from '@angular/material/sidenav';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { NavigationEnd, Router } from '@angular/router';\r\nimport { AppLoaderService } from 'app/shared/services/app-loader/app-loader.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { Observable, of, Subscription } from 'rxjs';\r\nimport { filter } from 'rxjs/operators';\r\nimport { AccountService } from './account.service';\r\nimport { UrlService } from './url.service';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.scss']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n  isMobile;\r\n  public accountItems: any[];\r\n  private accountItemsSub: Subscription;\r\n  public viewMode: string = 'grid-view';\r\n  screenSizeWatcher: Subscription;\r\n  isSidenavOpen: Boolean = true;\r\n  @ViewChild(MatSidenav) private sideNav: MatSidenav;\r\n  public categories: any = [];\r\n  accountId: any;\r\n  // PArent 1\r\n  isAppEntryStageDone: boolean = false;\r\n  // SUB TREES\r\n  isAccountDetailsScreen: boolean = false;\r\n  isAccountOpenScreen: boolean = false;\r\n  isAccountServiceScreen: boolean = false;\r\n  isAccountMandateScreen: boolean = false;\r\n  isAccountNomineesScreen: boolean = false;\r\n\r\n  // PArent 2\r\n  isLimitEntryStageDone: boolean = false;\r\n  // Sub trees\r\n  isSecuredScreen: boolean = false;\r\n  isUnSecuredScreen: boolean = false;\r\n  isFinancialScreen: boolean = false;\r\n\r\n  // PArent 3\r\n  isEnrichmentStageDone: boolean = false;\r\n  // Sub trees\r\n  isChargesScreen: boolean = false;\r\n  isInterestScreen: boolean = false;\r\n\r\n  isAssessmentStageDone: boolean = false;\r\n  // Subnave of parent 3\r\n  isQualitativeScreen: boolean = false;\r\n  isReportScreen: boolean = false;\r\n\r\n  isfundingStage: boolean = false;\r\n  isInitialFundScreen: boolean = false;\r\n\r\n\r\n  isApprovalStageDone: boolean = false;\r\n  isApprovalDetailsScreen: boolean = false;\r\n\r\n  isEsignScreen:boolean = false;\r\n\r\n  previousUrl: string = null;\r\n  currentUrl: string = null;\r\n  fundByStatus:boolean;\r\n  overDraftByStatus:boolean;\r\n  enableApprovalStage: boolean = false;\r\n  accountInfo: any;\r\n\r\n  constructor(private mediaObserver: MediaObserver, private cdr: ChangeDetectorRef, private router: Router, private dialog: MatDialog,\r\n    private snack: MatSnackBar,  private urlService: UrlService, private loader: AppLoaderService, private accountService: AccountService, private ls: LocalStoreService) { }\r\n\r\n  ngOnInit() {\r\n    console.log(\"reset\");\r\n    this.accountItemsSub = this.accountService.accountItems$.subscribe(menuItem => {\r\n      this.accountItems = menuItem;\r\n    });\r\n    this.accountInfo = this.ls.getItem('EDIT-CREATEACCCIF');\r\n    console.log(this.accountInfo);\r\n    if(this.accountInfo){\r\n      this.ls.setItem('ACC_DONE',true);\r\n      this.ls.setItem('appEntryStage', true);\r\n      this.ls.setItem('ACC_OPEN_DONE', true);\r\n      this.ls.setItem('ACC_MANDATE_DONE', true);\r\n      this.ls.setItem('ACC_SERVICE_DONE', true);\r\n      this.ls.setItem('ACC_NOMINEE_DONE', true);\r\n      this.ls.setItem('limitEntryStage',true);\r\n      this.ls.setItem('LIMIT_SECURED_DONE',true);\r\n      this.ls.setItem('LIMIT_UNSECURED_DONE', true);\r\n      this.ls.setItem('LIMIT_FIN_DONE', true);\r\n      this.ls.setItem('ENRICHMENT_CHARGES_DONE', true);\r\n      this.ls.setItem('ENRICHMENT_INTEREST_DONE', true);\r\n      this.ls.setItem('enrichmentStage', true);\r\n      this.ls.setItem('assessmentStage', true);\r\n      this.ls.setItem('ASSESSMENT_QA_DONE', true);\r\n      this.ls.setItem('ASSESSMENT_REPORT_DONE', true);\r\n      this.ls.setItem('approvalStage', true);\r\n      this.ls.setItem('APPROVAL_DETAILS_DONE', true);\r\n      this.ls.setItem('FUNDING_INI_DONE',true);\r\n      this.ls.setItem('eSignStage',true);\r\n      this.ls.setItem('fundingStage',true);\r\n    }\r\n    this.accountId = this.ls.getItem('accountId');\r\n    // Parent 1\r\n    this.isAppEntryStageDone = this.ls.getItem('appEntryStage');\r\n    let fundStatus = this.ls.getItem('fundByStatus') || null;\r\n    console.log(\"fetch\",fundStatus);\r\n    this.fundByStatus = fundStatus != null ? fundStatus.isActive : false; \r\n    console.log(this.fundByStatus);\r\n    // OverDraft --\r\n    let overdraftStatus = this.ls.getItem('overDraftByStatus') || null;\r\n    console.log(\"fetch\",overdraftStatus);\r\n    this.overDraftByStatus = overdraftStatus != null ? overdraftStatus.isActive : false; \r\n    console.log(this.overDraftByStatus);\r\n\r\n\r\n    // Parent 1 childs nav\r\n    this.isAccountDetailsScreen = this.ls.getItem('ACC_DONE');\r\n    this.isAccountOpenScreen = this.ls.getItem('ACC_OPEN_DONE');\r\n    this.isAccountServiceScreen = this.ls.getItem('ACC_SERVICE_DONE');\r\n    this.isAccountMandateScreen = this.ls.getItem('ACC_MANDATE_DONE');\r\n    this.isAccountNomineesScreen = this.ls.getItem('ACC_NOMINEE_DONE');\r\n    // Parent 2\r\n    this.isLimitEntryStageDone = this.ls.getItem('limitEntryStage');\r\n    // Parent 2 childs nav\r\n    this.isSecuredScreen = this.ls.getItem('LIMIT_SECURED_DONE');\r\n    this.isUnSecuredScreen = this.ls.getItem('LIMIT_UNSECURED_DONE');\r\n    this.isFinancialScreen = this.ls.getItem('LIMIT_FIN_DONE');\r\n\r\n    // Parent 3\r\n    this.isEnrichmentStageDone = this.ls.getItem('enrichmentStage');\r\n    // Subnave of parent 3\r\n    this.isChargesScreen = this.ls.getItem('ENRICHMENT_CHARGES_DONE');\r\n    this.isInterestScreen = this.ls.getItem('ENRICHMENT_INTEREST_DONE');\r\n    console.log( this.isChargesScreen,this.isInterestScreen )\r\n    // PArent 4\r\n    this.isAssessmentStageDone = this.ls.getItem('assessmentStage');\r\n    console.log(this.isAssessmentStageDone);\r\n    // Subnave of parent 3\r\n    this.isQualitativeScreen = this.ls.getItem('ASSESSMENT_QA_DONE');\r\n    this.isReportScreen = this.ls.getItem('ASSESSMENT_REPORT_DONE');\r\n\r\n    // PArent 5\r\n    this.isfundingStage = this.ls.getItem('fundingStage');\r\n    // Subnave of parent 5\r\n    this.isInitialFundScreen = this.ls.getItem('FUNDING_INI_DONE');\r\n\r\n    // Parent 6\r\n    this.isApprovalStageDone = this.ls.getItem('approvalStage');\r\n    // Parent 6 childs nav\r\n    this.isApprovalDetailsScreen = this.ls.getItem('APPROVAL_DETAILS_DONE');\r\n    this.isEsignScreen = this.ls.getItem('eSignStage');\r\n\r\n    this.cdr.markForCheck();\r\n\r\n\r\n    this.accountService.refresh.subscribe((res: any) => {\r\n      this.accountId = this.ls.getItem('accountId');\r\n      // Parent 1\r\n      this.isAppEntryStageDone = this.ls.getItem('appEntryStage');\r\n      let fundStatus = this.ls.getItem('fundByStatus') || null;\r\n      console.log(\"fundStatus::\",fundStatus)\r\n      \r\n      if(fundStatus){\r\n      this.fundByStatus = fundStatus.isActive ? fundStatus.isActive : false; \r\n      }\r\n      let overdraftStatus = this.ls.getItem('overDraftByStatus') || null;\r\n      this.overDraftByStatus = overdraftStatus != null ? overdraftStatus.isActive : false; \r\n\r\n      // Parent 1 childs nav\r\n      this.isAccountDetailsScreen = this.ls.getItem('ACC_DONE');\r\n      this.isAccountOpenScreen = this.ls.getItem('ACC_OPEN_DONE');\r\n      this.isAccountServiceScreen = this.ls.getItem('ACC_SERVICE_DONE');\r\n      this.isAccountMandateScreen = this.ls.getItem('ACC_MANDATE_DONE');\r\n      this.isAccountNomineesScreen = this.ls.getItem('ACC_NOMINEE_DONE');\r\n\r\n      this.isLimitEntryStageDone = this.ls.getItem('limitEntryStage');\r\n      this.isSecuredScreen = this.ls.getItem('LIMIT_SECURED_DONE');\r\n      this.isUnSecuredScreen = this.ls.getItem('LIMIT_UNSECURED_DONE');\r\n      this.isFinancialScreen = this.ls.getItem('LIMIT_FIN_DONE');\r\n\r\n      // Parent 3\r\n      this.isEnrichmentStageDone = this.ls.getItem('enrichmentStage');\r\n      // Subnave of parent 3\r\n      this.isChargesScreen = this.ls.getItem('ENRICHMENT_CHARGES_DONE');\r\n      this.isInterestScreen = this.ls.getItem('ENRICHMENT_INTEREST_DONE');\r\n\r\n      // PArent 4\r\n      this.isAssessmentStageDone = this.ls.getItem('assessmentStage');\r\n      // Subnave of parent 4\r\n      this.isQualitativeScreen = this.ls.getItem('ASSESSMENT_QA_DONE');\r\n      this.isReportScreen = this.ls.getItem('ASSESSMENT_REPORT_DONE');\r\n      // PArent 5\r\n      this.isfundingStage = this.ls.getItem('fundingStage');\r\n      console.log(\"this.fundbystattus::\",this.fundByStatus)\r\n      if(this.fundByStatus){\r\n        if(this.isfundingStage){\r\n          this.enableApprovalStage = true;\r\n        }\r\n      } else {\r\n        if(this.isAssessmentStageDone){\r\n          this.enableApprovalStage = true;\r\n        } \r\n      }\r\n      // Subnave of parent 5\r\n      this.isInitialFundScreen = this.ls.getItem('FUNDING_INI_DONE');\r\n\r\n      // Parent 6\r\n      this.isApprovalStageDone = this.ls.getItem('approvalStage');\r\n      // Parent 6 childs nav\r\n      this.isApprovalDetailsScreen = this.ls.getItem('APPROVAL_DETAILS_DONE');\r\n\r\n      this.isEsignScreen = this.ls.getItem('eSignStage');\r\n\r\n      this.cdr.markForCheck();\r\n    });\r\n\r\n   \r\n\r\n  }\r\n\r\n  updateSidenav() {\r\n    let self = this;\r\n    setTimeout(() => {\r\n      self.isSidenavOpen = !self.isMobile;\r\n      self.sideNav.mode = self.isMobile ? 'over' : 'side';\r\n    })\r\n  }\r\n\r\n  sideNavInit() {\r\n    this.isMobile = this.mediaObserver.isActive('xs') || this.mediaObserver.isActive('sm');\r\n    this.updateSidenav();\r\n    this.screenSizeWatcher = this.mediaObserver.media$.subscribe((change: MediaChange) => {\r\n      this.isMobile = (change.mqAlias == 'xs') || (change.mqAlias == 'sm');\r\n      this.updateSidenav();\r\n    });\r\n  }\r\n\r\n  toggleSideNav() {\r\n    this.sideNav.opened = !this.sideNav.opened;\r\n  }\r\n\r\n  goToHomeRoute() {\r\n    this.router.navigate(['/others']);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.accountItemsSub) {\r\n      this.accountItemsSub.unsubscribe();\r\n    }\r\n  }\r\n\r\n  getActiveParentTab(stage: string) {\r\n    switch (stage) {\r\n      case \"Application_Entry_Stage\": {\r\n        this.isAppEntryStageDone = true;\r\n        this.cdr.markForCheck();\r\n        break;\r\n      }\r\n      case \"ON_BOARDING\": {\r\n        break;\r\n      }\r\n      default: {\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  public getCategories() {\r\n    this.categories = [\r\n      {\r\n        id: 1,\r\n        title: 'Application Entry Stage',\r\n        state: 'application/list',\r\n        icon: 'account_balance_wallet',\r\n        type: 'dropDown',\r\n        tooltip: 'Item',\r\n        isOpen: \"true\",\r\n        submenu: [\r\n          {\r\n            id: 111,\r\n            title: 'Home',\r\n            type: 'link',\r\n            state: 'application/list',\r\n          },\r\n          {\r\n            id: 11,\r\n            title: 'Account Details',\r\n            type: 'link',\r\n            state: 'application/create-customer-account',\r\n          }, {\r\n            id: 12,\r\n            title: 'Customer Information Details',\r\n            type: 'link',\r\n            state: 'application/customer-information',\r\n\r\n          },\r\n          {\r\n            id: 13,\r\n            title: 'Mandate Details',\r\n            type: 'link',\r\n            state: 'application/mandate',\r\n\r\n          }, {\r\n            id: 14,\r\n            title: 'Account Service',\r\n            type: 'link',\r\n            state: 'application/account-service',\r\n\r\n          }, {\r\n            id: 15,\r\n            title: 'Nominee Details',\r\n            type: 'link',\r\n            state: 'application/nominee',\r\n\r\n          }\r\n        ]\r\n      }, {\r\n        id: 2,\r\n        title: 'Limit Entry Stage',\r\n        state: 'application/limit-entry-stage',\r\n        icon: 'credit_card',\r\n        isOpen: \"false\",\r\n        type: 'dropDown',\r\n        submenu: [\r\n          {\r\n            id: 311212,\r\n            title: 'Home',\r\n            type: 'link',\r\n            state: 'application/limit-entry-stage/list',\r\n          },{\r\n            id: 312,\r\n            title: 'Secured Overdraft Details',\r\n            type: 'link',\r\n            state: 'application/limit-entry-stage/secured-draft',\r\n          },{\r\n            id: 11456,\r\n            title: 'Unsecured Overdraft Details',\r\n            type: 'link',\r\n            state: 'application/limit-entry-stage/unsecured-draft',\r\n          },{\r\n            id: 1122,\r\n            title: 'Financial Details',\r\n            type: 'link',\r\n            state: 'application/limit-entry-stage/financial-details',\r\n          },\r\n        ]\r\n      }, {\r\n        id: 3,\r\n        title: 'Application Enrichment',\r\n        state: 'create-customer-account',\r\n        icon: 'style',\r\n        isOpen: \"false\",\r\n        type: 'dropDown',\r\n        submenu: [\r\n          {\r\n            id: 311,\r\n            title: 'Home',\r\n            type: 'link',\r\n            state:\"application/enrichment/list\",\r\n          },{\r\n            id: 312,\r\n            title: 'Interest Details',\r\n            type: 'link',\r\n            state: 'application/enrichment/interest',\r\n          }, {\r\n            id: 313,\r\n            title: 'Charge Details',\r\n            type: 'link',\r\n            state: 'application/enrichment/charge',\r\n          },\r\n        ]\r\n      }, {\r\n        id: 4,\r\n        title: 'Application Assessment',\r\n        state: 'create-customer-account',\r\n        icon: 'assessment',\r\n        isOpen: \"false\",\r\n        type: 'dropDown', \r\n        submenu: [\r\n          {\r\n            id: 411,\r\n            title: 'Home',\r\n            type: 'link',\r\n            state: 'application/assessment/list',\r\n          },{\r\n            id: 412,\r\n            title: 'Qualitative Scoreboard',\r\n            type: 'link',\r\n            state: 'application/assessment/qualitative',\r\n          }, {\r\n            id: 413,\r\n            title: 'Assessment Report',\r\n            type: 'link',\r\n            state: 'application/assessment/report',\r\n          },\r\n        ]\r\n      }, {\r\n        id: 5,\r\n        title: 'Funding Stage',\r\n        state: 'create-customer-account',\r\n        icon: 'card_membership',\r\n        isOpen: \"false\",\r\n        type: 'dropDown',\r\n        submenu: [\r\n          {\r\n            id: 611,\r\n            title: 'Home',\r\n            type: 'link',\r\n            state: 'application/funding/list',\r\n          },{\r\n            id: 612,\r\n            title: 'Initial Funding Stage',\r\n            type: 'link',\r\n            state: 'application/funding/details',\r\n          }, \r\n        ]\r\n      }, {\r\n        id: 6,\r\n        title: 'Approval Stage',\r\n        state: 'create-customer-account',\r\n        icon: 'done_all',\r\n        isOpen: \"false\",\r\n        type: 'dropDown',\r\n        submenu: [\r\n          {\r\n            id: 511,\r\n            title: 'Home',\r\n            type: 'link',\r\n            state: 'application/approval/list',\r\n          },{\r\n            id: 512,\r\n            title: 'Approval Details',\r\n            type: 'link',\r\n            state: 'application/approval/details',\r\n          }, \r\n        ]\r\n      },{\r\n        id: 7,\r\n        title: 'Digital Signing',\r\n        state: 'create-customer-account',\r\n        icon: 'web_asset',\r\n        isOpen: \"false\",\r\n        type: 'dropDown',\r\n        submenu: [\r\n          {\r\n            id: 511,\r\n            title: 'Home',\r\n            type: 'link',\r\n            state: 'application/digital-sign/home',\r\n          },{\r\n            id: 512,\r\n            title: 'Digital Signing',\r\n            type: 'link',\r\n            state: 'application/digital-sign/options',\r\n          }, \r\n        ]\r\n      },\r\n    ];\r\n  }\r\n\r\n}\r\n","<div class=\"m-333\">\r\n  <mat-sidenav-container style=\"margin-top: 35px;\">\r\n    <mat-sidenav EgretSideNavToggle class=\"app-sidebar\" style=\"width: 300px;\">\r\n      <!-- <div class=\"app-filters-wrap\"> -->\r\n      <span class=\"sidenav-header\">Home > Create New Customer Account </span>\r\n      <div class=\"sidenav-hold\">\r\n        <ul appDropdown class=\"sidenav mt-32\">\r\n          <li appDropdownLink routerLinkActive=\"open\">\r\n            <div class=\"lvl1\">\r\n              <!-- [ngClass]=\"item.isActive ? 'active' : 'notActive'\" -->\r\n              <a appDropdownToggle [ngClass]=\"isAppEntryStageDone ? 'active' : 'notActive'\"\r\n              [routerLink]=\"['/home/application/list']\">\r\n                <mat-icon class=\"sidenav-mat-icon\" [ngClass]=\"isAppEntryStageDone ? 'active' : 'notActive'\">account_balance_wallet</mat-icon>\r\n                <span class=\"item-name lvl1\">Application Entry Stage</span>\r\n                <span fxFlex></span>\r\n                <mat-icon class=\"menu-caret\">keyboard_arrow_right</mat-icon>\r\n              </a>\r\n              <!-- LEVEL 2 -->\r\n              <ul class=\"lvl2\" appDropdown  style=\"margin-right: 8px;\">\r\n                <li routerLinkActive=\"open\">\r\n                  <a\r\n                    class=\"side-menu\"\r\n                    [style.color]=\"isAppEntryStageDone ? '#03a9f4' : ''\"\r\n                    [routerLink]=\"['/home/application/list']\">\r\n                    <span class=\"item-name lvl2\" style=\"margin-left: 10px\">Summary</span>\r\n                    <span fxFlex></span>\r\n                  </a>\r\n                </li>\r\n                <li routerLinkActive=\"open\">\r\n                  <a\r\n                    class=\"side-menu\"\r\n                    [routerLink]=\"['/home/application/create-customer-account']\"\r\n                    [ngClass]=\"isAccountDetailsScreen ? 'enable' : 'disable'\">\r\n                    <span class=\"item-name lvl2\" style=\"margin-left: 10px\">Account Details</span>\r\n                    <span fxFlex></span>\r\n                  </a>\r\n                </li>\r\n                <li routerLinkActive=\"open\">\r\n                  <a\r\n                    class=\"side-menu\"\r\n                    [routerLink]=\"['/home/application/customer-information/', accountId]\" \r\n                    [ngClass]=\"isAccountOpenScreen ? 'enable' : 'disable'\">\r\n                    <span class=\"item-name lvl2\" style=\"margin-left: 10px\">Customer Information Details</span>\r\n                    <span fxFlex></span>\r\n                  </a>\r\n                </li>\r\n                <li routerLinkActive=\"open\">\r\n                  <a\r\n                    class=\"side-menu\"\r\n                    [routerLink]=\"['/home/application/mandate/', accountId]\" \r\n                    [ngClass]=\"isAccountMandateScreen ? 'enable' : 'disable'\">\r\n                    <span class=\"item-name lvl2\" style=\"margin-left: 10px\">Mandate Details</span>\r\n                    <span fxFlex></span>\r\n                  </a>\r\n                </li>\r\n                <li routerLinkActive=\"open\">\r\n                  <a\r\n                    class=\"side-menu\"\r\n                    [routerLink]=\"['/home/application/account-service/', accountId]\" \r\n                    [ngClass]=\"isAccountServiceScreen ? 'enable' : 'disable'\">\r\n                    <span class=\"item-name lvl2\" style=\"margin-left: 10px\">Account Service</span>\r\n                    <span fxFlex></span>\r\n                  </a>\r\n                </li>\r\n                <li routerLinkActive=\"open\">\r\n                  <a\r\n                    class=\"side-menu\"\r\n                    [routerLink]=\"['/home/application/nominee/add/', accountId]\" \r\n                    [ngClass]=\"isAccountNomineesScreen ? 'enable' : 'disable'\">\r\n                    <span class=\"item-name lvl2\" style=\"margin-left: 10px\">Nominee Details</span>\r\n                    <span fxFlex></span>\r\n                  </a>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </li>\r\n          <!-- Entry satge end -->\r\n          <li appDropdownLink routerLinkActive=\"open\">\r\n            <div class=\"lvl1\">\r\n              <!-- [ngClass]=\"item.isActive ? 'active' : 'notActive'\" -->\r\n              <a appDropdownToggle [ngClass]=\"isAppEntryStageDone ? 'active' : 'notActive'\">\r\n                <mat-icon class=\"sidenav-mat-icon\" [ngClass]=\"isAppEntryStageDone ? 'active' : 'notActive'\">credit_card</mat-icon>\r\n                <span class=\"item-name lvl1\">Limit Entry Stage</span>\r\n                <span fxFlex></span>\r\n                <mat-icon class=\"menu-caret\">keyboard_arrow_right</mat-icon>\r\n              </a>\r\n              <!-- LEVEL 2 -->\r\n              <ul class=\"lvl2\" appDropdown  style=\"margin-right: 8px;\">\r\n                <li routerLinkActive=\"open\">\r\n                  <a\r\n                    class=\"side-menu\"\r\n                    [style.color]=\"isLimitEntryStageDone ? '#03a9f4' : ''\"\r\n                    [routerLink]=\"['/home/application/limit-entry-stage/list/', accountId]\">\r\n                    <span class=\"item-name lvl2\" style=\"margin-left: 10px\">Summary</span>\r\n                    <span fxFlex></span>\r\n                  </a>\r\n                </li>\r\n                <li routerLinkActive=\"open\" *ngIf=\"overDraftByStatus; else hideNav\">\r\n                  <a\r\n                    class=\"side-menu\"\r\n                    [ngClass]=\"isSecuredScreen ? 'enable' : 'disable'\"\r\n                    [routerLink]=\"['/home/application/limit-entry-stage/secured-draft/', accountId]\">\r\n                    <span class=\"item-name lvl2\" style=\"margin-left: 10px\">Secured Overdraft Details</span>\r\n                    <span fxFlex></span>\r\n                  </a>\r\n                </li>\r\n                <li routerLinkActive=\"open\" *ngIf=\"overDraftByStatus; else hideNav\">\r\n                  <a\r\n                    class=\"side-menu\"\r\n                    [ngClass]=\"isUnSecuredScreen ? 'enable' : 'disable'\"\r\n                    [routerLink]=\"['/home/application/limit-entry-stage/unsecured-draft/', accountId]\">\r\n                    <span class=\"item-name lvl2\" style=\"margin-left: 10px\">Unsecured Overdraft Details</span>\r\n                    <span fxFlex></span>\r\n                  </a>\r\n                </li>\r\n                <li routerLinkActive=\"open\">\r\n                  <a\r\n                    class=\"side-menu\"\r\n                    [ngClass]=\"isFinancialScreen ? 'enable' : 'disable'\"\r\n                    [routerLink]=\"['/home/application/limit-entry-stage/financial-details/', accountId]\">\r\n                    <span class=\"item-name lvl2\" style=\"margin-left: 10px\">Financial Details</span>\r\n                    <span fxFlex></span>\r\n                  </a>\r\n                </li>\r\n            \r\n              </ul>\r\n            </div>\r\n          </li>\r\n          <!-- Limit Entry satge end -->\r\n          <li appDropdownLink routerLinkActive=\"open\">\r\n            <div class=\"lvl1\">\r\n              <!-- [ngClass]=\"item.isActive ? 'active' : 'notActive'\" -->\r\n              <a appDropdownToggle [ngClass]=\"isLimitEntryStageDone ? 'active' : 'notActive'\">\r\n                <mat-icon class=\"sidenav-mat-icon\" [ngClass]=\"isLimitEntryStageDone ? 'active' : 'notActive'\">style</mat-icon>\r\n                <span class=\"item-name lvl1\">Application Enrichment</span>\r\n                <span fxFlex></span>\r\n                <mat-icon class=\"menu-caret\">keyboard_arrow_right</mat-icon>\r\n              </a>\r\n              <!-- LEVEL 2 -->\r\n              <ul class=\"lvl2\" appDropdown  style=\"margin-right: 8px;\">\r\n                <li routerLinkActive=\"open\">\r\n                  <a\r\n                    class=\"side-menu\"\r\n                    [routerLink]=\"['/home/application/enrichment/list/', accountId]\"\r\n                    [style.color]=\"isEnrichmentStageDone ? '#03a9f4' : ''\">\r\n                    <span class=\"item-name lvl2\" style=\"margin-left: 10px\">Summary</span>\r\n                    <span fxFlex></span>\r\n                  </a>\r\n                </li>\r\n                <li routerLinkActive=\"open\">\r\n                  <a\r\n                    class=\"side-menu\"\r\n                    [routerLink]=\"['/home/application/enrichment/interest', accountId]\"\r\n                    [ngClass]=\"isInterestScreen ? 'enable' : 'disable'\" *ngIf=!isInterestScreen>\r\n                    <span class=\"item-name lvl2\" style=\"margin-left: 10px\">Interest Details</span>\r\n                    <span fxFlex></span>\r\n                  </a>\r\n                  <a\r\n                    class=\"side-menu\"\r\n                    [routerLink]=\"['/home/application/enrichment/interest', accountId]\"\r\n                    [ngClass]=\"isInterestScreen ? 'enable' : 'disable'\" *ngIf=isInterestScreen>\r\n                    <span class=\"item-name lvl2\" style=\"margin-left: 10px\">Interest Details</span>\r\n                    <span fxFlex></span>\r\n                  </a>\r\n                </li>\r\n                <li routerLinkActive=\"open\">\r\n                  <a\r\n                    class=\"side-menu\"\r\n                    [routerLink]=\"['/home/application/enrichment/charge', accountId]\"\r\n                    [ngClass]=\"isChargesScreen ? 'enable' : 'disable'\"  *ngIf=!isChargesScreen>\r\n                    <span class=\"item-name lvl2\" style=\"margin-left: 10px\">Charge Details</span>\r\n                    <span fxFlex></span>\r\n                  </a>\r\n                  <a\r\n                  class=\"side-menu\"\r\n                  [routerLink]=\"['/home/application/enrichment/charge', accountId]\"\r\n                  [ngClass]=\"isChargesScreen ? 'enable' : 'disable'\" *ngIf=isChargesScreen>\r\n                  <span class=\"item-name lvl2\" style=\"margin-left: 10px\">Charge Details</span>\r\n                  <span fxFlex></span>\r\n                </a>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </li>\r\n          <!-- Application Enrichment END -->\r\n          <li appDropdownLink routerLinkActive=\"open\">\r\n            <div class=\"lvl1\">\r\n              <!-- [ngClass]=\"item.isActive ? 'active' : 'notActive'\" -->\r\n              <!--sneha comment for a tag \"[ngClass]=\"isAssessmentStageDone ? 'active' : 'notActive'\"\"-->\r\n              <a appDropdownToggle [ngClass]=\"isEnrichmentStageDone ? 'active' : 'notActive'\">\r\n                <mat-icon class=\"sidenav-mat-icon\" [ngClass]=\"isEnrichmentStageDone ? 'active' : 'notActive'\">assessment</mat-icon>\r\n                <span class=\"item-name lvl1\">Application Assessment</span>\r\n                <span fxFlex></span>\r\n                <mat-icon class=\"menu-caret\">keyboard_arrow_right</mat-icon>\r\n              </a>\r\n              <!-- LEVEL 2 -->\r\n              <ul class=\"lvl2\" appDropdown  style=\"margin-right: 8px;\">\r\n                <li routerLinkActive=\"open\">\r\n                  <a\r\n                    class=\"side-menu\"\r\n                    [routerLink]=\"['/home/application/assessment/list/', accountId]\"\r\n                    [style.color]=\"isAssessmentStageDone ? '#03a9f4' : ''\">\r\n                    <span class=\"item-name lvl2\" style=\"margin-left: 10px\">Summary</span>\r\n                    <span fxFlex></span>\r\n                  </a>\r\n                </li>\r\n                <li routerLinkActive=\"open\">\r\n                  <a\r\n                    class=\"side-menu\"\r\n                    [routerLink]=\"['/home/application/assessment/qualitative/', accountId]\"\r\n                    [ngClass]=\"isQualitativeScreen ? 'enable' : 'disable'\">\r\n                    <span class=\"item-name lvl2\" style=\"margin-left: 10px\">Qualitative Scoreboard</span>\r\n                    <span fxFlex></span>\r\n                  </a>\r\n                </li>\r\n                <li routerLinkActive=\"open\" *ngIf=\"overDraftByStatus; else hideNav\">\r\n                  <a\r\n                    class=\"side-menu\"\r\n                    [routerLink]=\"['/home/application/assessment/report/', accountId]\"\r\n                    [ngClass]=\"isReportScreen ? 'enable' : 'disable'\">\r\n                    <span class=\"item-name lvl2\" style=\"margin-left: 10px\">Assessment Report</span>\r\n                    <span fxFlex></span>\r\n                  </a>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </li>\r\n          <!-- Application Assessment END -->\r\n          <ng-container *ngIf=\"fundByStatus; else hideNav\">\r\n            <li appDropdownLink routerLinkActive=\"open\">\r\n              <div class=\"lvl1\">\r\n                <!-- [ngClass]=\"item.isActive ? 'active' : 'notActive'\" -->\r\n                <!-- <a appDropdownToggle [ngClass]=\"isAssessmentStageDone && fundStatus ? 'active' : 'notActive'\"> -->\r\n                <a appDropdownToggle [ngClass]=\"(isQualitativeScreen || isReportScreen) ? 'active' : 'notActive'\">\r\n                  <mat-icon class=\"sidenav-mat-icon\" [ngClass]=\"(isQualitativeScreen || isReportScreen) ? 'active' : 'notActive'\">copy_outlined</mat-icon>\r\n                  <span class=\"item-name lvl1\">Funding Stage</span>\r\n                  <span fxFlex></span>\r\n                  <mat-icon class=\"menu-caret\">keyboard_arrow_right</mat-icon>\r\n                </a>\r\n                <!-- LEVEL 2 -->\r\n                <ul class=\"lvl2\" appDropdown  style=\"margin-right: 8px;\">\r\n                  <li routerLinkActive=\"open\">\r\n                    <a\r\n                      class=\"side-menu\"\r\n                      [routerLink]=\"['/home/application/funding/list/', accountId]\"\r\n                      [style.color]=\"isfundingStage ? '#03a9f4' : ''\">\r\n                      <span class=\"item-name lvl2\" style=\"margin-left: 10px\">Summary</span>\r\n                      <span fxFlex></span>\r\n                    </a>\r\n                  </li>\r\n                  <li routerLinkActive=\"open\">\r\n                    <a\r\n                      class=\"side-menu\"\r\n                      [routerLink]=\"['/home/application/funding/details/', accountId]\"\r\n                      [ngClass]=\"isInitialFundScreen ? 'enable' : 'disable'\">\r\n                      <span class=\"item-name lvl2\" style=\"margin-left: 10px\">Initial Funding Stage</span>\r\n                      <span fxFlex></span>\r\n                    </a>\r\n                  </li>\r\n              \r\n                </ul>\r\n              </div>\r\n            </li>\r\n          </ng-container>\r\n          <ng-template #hideNav>\r\n            \r\n          </ng-template>\r\n          <!-- Funding Stage END -->\r\n          <li appDropdownLink routerLinkActive=\"open\">\r\n            <div class=\"lvl1\">\r\n              <!-- [ngClass]=\"item.isActive ? 'active' : 'notActive'\" -->\r\n              <a appDropdownToggle [ngClass]=\"isApprovalStageDone ? 'active' : 'notActive'\">\r\n                <mat-icon class=\"sidenav-mat-icon\" [ngClass]=\"isApprovalStageDone ? 'active' : 'notActive'\">done_all</mat-icon>\r\n                <span class=\"item-name lvl1\">Approval Stage</span>\r\n                <span fxFlex></span>\r\n                <mat-icon class=\"menu-caret\">keyboard_arrow_right</mat-icon>\r\n              </a>\r\n              <!-- LEVEL 2 -->\r\n              <ul class=\"lvl2\" appDropdown  style=\"margin-right: 8px;\">\r\n                <li routerLinkActive=\"open\">\r\n                  <a\r\n                    class=\"side-menu\"\r\n                    [routerLink]=\"['/home/application/approval/list/', accountId]\"\r\n                    [style.color]=\"isApprovalStageDone ? '#03a9f4' : ''\">\r\n                    <span class=\"item-name lvl2\" style=\"margin-left: 10px\">Summary</span>\r\n                    <span fxFlex></span>\r\n                  </a>\r\n                </li>\r\n                <li routerLinkActive=\"open\">\r\n                  <a\r\n                    class=\"side-menu\"\r\n                    [routerLink]=\"['/home/application/approval/details/', accountId]\"\r\n                    [ngClass]=\"isApprovalDetailsScreen ? 'enable' : 'disable'\">\r\n                    <span class=\"item-name lvl2\" style=\"margin-left: 10px\">Approval Details</span>\r\n                    <span fxFlex></span>\r\n                  </a>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </li>\r\n          <!-- Approval Stage END -->\r\n          <li appDropdownLink routerLinkActive=\"open\">\r\n            <div class=\"lvl1\">\r\n              <!-- [ngClass]=\"item.isActive ? 'active' : 'notActive'\" -->\r\n              <a appDropdownToggle [ngClass]=\"isApprovalStageDone ? 'active' : 'notActive'\">\r\n                <mat-icon class=\"sidenav-mat-icon digIcon\" [ngClass]=\"isApprovalStageDone ? 'active' : 'notActive'\">app_registration_outlined</mat-icon>\r\n                <span class=\"item-name lvl1\">Digital Signing</span>\r\n                <span fxFlex></span>\r\n                <mat-icon class=\"menu-caret\">keyboard_arrow_right</mat-icon>\r\n              </a>\r\n              <!-- LEVEL 2 -->\r\n              <ul class=\"lvl2\" appDropdown  style=\"margin-right: 8px;\">\r\n                <li routerLinkActive=\"open\">\r\n                  <a\r\n                    class=\"side-menu\"\r\n                    [routerLink]=\"['/home/application/digital-sign/home/', accountId]\"\r\n                    [style.color]=\"isEsignScreen ? '#03a9f4' : ''\">\r\n                    <span class=\"item-name lvl2\" style=\"margin-left: 10px\">Summary</span>\r\n                    <span fxFlex></span>\r\n                  </a>\r\n                </li>\r\n                <li routerLinkActive=\"open\">\r\n                  <a\r\n                    class=\"side-menu\"\r\n                    [routerLink]=\"['/home/application/digital-sign/options/', accountId]\"\r\n                    [ngClass]=\"isEsignScreen ? 'enable' : 'disable'\">\r\n                    <span class=\"item-name lvl2\" style=\"margin-left: 10px\">Digital Signing</span>\r\n                    <span fxFlex></span>\r\n                  </a>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </li>\r\n          <!-- Approval Stage END -->\r\n        </ul>\r\n      </div>\r\n\r\n    </mat-sidenav>\r\n    <div class=\"app-wrap\" fxLayout=\"row\" fxLayoutWrap=\"wrap\">\r\n      <!-- Right side -->\r\n      <div class=\"full-width mt-32\">\r\n        <router-outlet></router-outlet>\r\n      </div>\r\n    </div>\r\n  </mat-sidenav-container>\r\n</div>\r\n","\r\nimport { ChangeDetectorRef, Component, Inject, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { AppLoaderComponent } from 'app/shared/services/app-loader/app-loader.component';\r\nimport { AppLoaderService } from 'app/shared/services/app-loader/app-loader.service';\r\nimport { FundingStageService } from 'app/shared/services/funding-stage.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-funding-stage-summary',\r\n  templateUrl: './funding-stage-summary.component.html',\r\n  styleUrls: ['./funding-stage-summary.component.scss']\r\n})\r\nexport class FundingStageSummaryComponent implements OnInit {\r\n  fundStageFormGroup: FormGroup;\r\n  // detailsShowOrViewRef: any;\r\n  accountId: string;\r\n  previousUrl: string = '';\r\n  accountInfo: any;\r\n   constructor(\r\n    private router: Router,\r\n    private formBuilder: FormBuilder,\r\n    private ls: LocalStoreService,\r\n    private fundingStageService: FundingStageService,\r\n    private cdr:ChangeDetectorRef,\r\n    private loader:AppLoaderService\r\n    )\r\n   { }\r\n\r\n  ngOnInit(): void {\r\n     /* For getting account id */\r\n    // this.accountId = sessionStorage.getItem('accountId');\r\n    this.accountId = this.ls.getItem('accountId');\r\n    this.accountInfo = this.ls.getItem('EDIT-CREATEACCCIF');\r\n    if(this.accountInfo){\r\n      this.accountId=this.accountInfo.businessProductAccount.accountId\r\n    }\r\n    this.fundStageFormGroup = this.formBuilder.group({\r\n      \"fundId\": [''],\r\n      \"fundBy\": [''],\r\n      \"accountId\": [''],\r\n      \"amount\": [''],\r\n      \"tellerTrxnRefNo\": [''],\r\n      \"tellerTrxnStatus\": [''],\r\n      \"fundByAccount\": [''],\r\n      \"chequeNumber\":[''],\r\n      \"branchCode\":[''],\r\n      \"createdBy\": [''],\r\n      \"createdTime\": [''],\r\n      \"modifiedBy\": [''],\r\n      \"modifiedTime\": ['']\r\n    })\r\n     \r\n  setTimeout(() => {\r\n    this.viewFundsbyAccountId(this.accountId);\r\n  }, 1);\r\n   \r\n  }\r\n\r\n  viewFundsbyAccountId(accountId){\r\n    this.loader.open();\r\n    this.fundingStageService.getFundByAccountId(accountId)\r\n    .subscribe((fundResp:any) =>{\r\n      this.loader.close();\r\n      this.fundStageFormGroup.patchValue(fundResp);\r\n      this.cdr.markForCheck();\r\n    },(err:any) =>{\r\n      this.loader.close();\r\n    });\r\n  }\r\n\r\n  goBack() {\r\n    // this.router.navigate([`${this.previousUrl}`]);\r\n    this.router.navigate([`/home/application/funding/list/${this.accountId}`]);\r\n  }\r\n\r\n  done(){\r\n    // this.router.navigate([`${this.previousUrl}`]);\r\n    this.router.navigate([`/home/application/funding/list/${this.accountId}`]);\r\n  }\r\n}\r\n","<div fxLayout=\"column\">\r\n    <div fxLayout=\"row\">\r\n        <div fxFlex=\"100\">\r\n            <div class=\"propic text-center\">\r\n                <img src=\"assets/images/svg/undraw_credit_card_payment_yb88.svg\" alt=\"\" class=\"w-90\" />\r\n            </div>\r\n            <div class=\"profile-title text-center mt-8\">\r\n                <div class=\"main-title\"><b>Initial Funding Details</b></div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n\r\n    <div fxFlex=\"100\" class=\"mt-24\">\r\n    <mat-card>\r\n        <mat-card-title>Initial Funding Details</mat-card-title>\r\n        <mat-divider></mat-divider>\r\n        <mat-card-content >\r\n\r\n            <!-- Cash Mode -->\r\n\t\t\t\t\t<ng-container *ngIf=\"fundStageFormGroup.value.fundBy == 'Cash'\">\r\n\t\t\t\t\t\t<div fxLayout=\"row\" fxLayoutGap=\"25px\" fxLayoutAlign=\"center center\" class=\"mt-32\" > \r\n\t\t\t\t\t\t\t<div fxFlex=\"80\" fxFlexOffset=\"10px\">\r\n\t\t\t\t\t\t\t\t<div fxLayout=\"row\" fxLayoutGap=\"10px\" fxLayoutAlign=\"space-between center\">\r\n\t\t\t\t\t\t\t\t\t<div fxFlex=\"50%\">\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"pb-1\">\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"funding\">\r\n\t\t\t\t\t\t\t\t\t\t\t\tTeller Transaction Reference Number : #{{fundStageFormGroup.value.tellerTrxnRefNo}}\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div fxFlex=\"50%\">\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"pb-1\">\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"funding\">\r\n\t\t\t\t\t\t\t\t\t\t\t\tStatus:\r\n\t\t\t\t\t\t\t\t\t\t\t\t{{fundStageFormGroup.value.tellerTrxnStatus}}\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div fxLayout=\"row\" fxLayoutGap=\"10px\" fxLayoutAlign=\"space-between center\">\r\n\t\t\t\t\t\t\t\t\t<div fxFlex=\"50%\">\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"pb-1\">\r\n\t\t\t\t\t\t\t\t\t\t\t<!--<mat-hint class=\"mat-heading-label\">Amount : <span matPrefix>$&nbsp;</span>{{fundStageFormGroup.value.amount}}</mat-hint>-->\r\n\t\t\t\t\t\t\t\t\t\t\t<mat-hint class=\"mat-heading-label\">Amount : <span matPrefix>&nbsp;</span>{{fundStageFormGroup.value.amount}}</mat-hint>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div fxFlex=\"50%\">\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"pb-1\">\r\n\t\t\t\t\t\t\t\t\t\t\t<mat-hint class=\"mat-heading-label\">Fund By : <span matPrefix></span>{{fundStageFormGroup.value.fundBy}}</mat-hint>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</ng-container>\r\n\r\n\t\t\t\t\t<!-- Cheque Mode -->\r\n\t\t\t\t\t<ng-container *ngIf=\"fundStageFormGroup.value.fundBy == 'Cheque'\">\r\n\t\t\t\t\t\t<div fxLayout=\"row\" fxLayoutGap=\"25px\" fxLayoutAlign=\"center center\" class=\"mt-32\" > \r\n\t\t\t\t\t\t\t<div fxFlex=\"80\" fxFlexOffset=\"10px\">\r\n\t\t\t\t\t\t\t\t<div fxLayout=\"row\" fxLayoutGap=\"10px\" fxLayoutAlign=\"space-between center\">\r\n\t\t\t\t\t\t\t\t\t<div fxFlex=\"50%\">\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"pb-1\">\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"funding\">\r\n\t\t\t\t\t\t\t\t\t\t\t\tCheque No : #{{fundStageFormGroup.value.chequeNumber}}\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div fxFlex=\"50%\">\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"pb-1\">\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"funding\" >\r\n\t\t\t\t\t\t\t\t\t\t\t\tFund By Account : #{{fundStageFormGroup.value.fundByAccount}}\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div fxLayout=\"row\" fxLayoutGap=\"10px\" fxLayoutAlign=\"space-between center\">\r\n\t\t\t\t\t\t\t\t\t<div fxFlex=\"50%\">\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"pb-1\">\r\n\t\t\t\t\t\t\t\t\t\t\t<!--<mat-hint class=\"mat-heading-label\">Amount : <span matPrefix>$&nbsp;</span>{{fundStageFormGroup.value.amount}}</mat-hint>-->\r\n\t\t\t\t\t\t\t\t\t\t\t<mat-hint class=\"mat-heading-label\">Amount : <span matPrefix>&nbsp;</span>{{fundStageFormGroup.value.amount}}</mat-hint>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div fxFlex=\"50%\">\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"pb-1\">\r\n\t\t\t\t\t\t\t\t\t\t\t<mat-hint class=\"mat-heading-label\">Fund By : <span matPrefix></span>{{fundStageFormGroup.value.fundBy}}</mat-hint>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</ng-container>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<!-- Fund Transfer Mode -->\r\n\t\t\t\t\t<ng-container *ngIf=\"fundStageFormGroup.value.fundBy == 'Fund Transfer'\">\r\n\t\t\t\t\t\t<div fxLayout=\"row\" fxLayoutGap=\"25px\" fxLayoutAlign=\"center center\" class=\"mt-32\" > \r\n\t\t\t\t\t\t\t<div fxFlex=\"80\" fxFlexOffset=\"10px\">\r\n\t\t\t\t\t\t\t\t<div fxLayout=\"row\" fxLayoutGap=\"10px\" fxLayoutAlign=\"space-between center\">\r\n\t\t\t\t\t\t\t\t\t<div fxFlex=\"50%\">\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"pb-1\">\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"funding\">\r\n\t\t\t\t\t\t\t\t\t\t\t\tFund By Account : {{ fundStageFormGroup.value.fundByAccount }}\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div fxFlex=\"50%\">\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"pb-1\">\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"funding\" >\r\n\t\t\t\t\t\t\t\t\t\t\t\tBranch Code: {{ fundStageFormGroup.value.branchCode }}\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div fxLayout=\"row\" fxLayoutGap=\"10px\" fxLayoutAlign=\"space-between center\">\r\n\t\t\t\t\t\t\t\t\t<div fxFlex=\"50%\">\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"pb-1\">\r\n\t\t\t\t\t\t\t\t\t\t\t<!--<mat-hint class=\"mat-heading-label\">Amount : <span matPrefix>$&nbsp;</span>{{fundStageFormGroup.value.amount}}</mat-hint>-->\r\n\t\t\t\t\t\t\t\t\t\t\t<mat-hint class=\"mat-heading-label\">Amount : <span matPrefix>&nbsp;</span>{{fundStageFormGroup.value.amount}}</mat-hint>\r\n\t\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div fxFlex=\"50%\">\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"pb-1\">\r\n\t\t\t\t\t\t\t\t\t\t\t<mat-hint class=\"mat-heading-label\">Fund By : <span matPrefix></span>{{fundStageFormGroup.value.fundBy}}</mat-hint>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</ng-container>\r\n        </mat-card-content>\r\n\r\n    </mat-card>\r\n</div>\r\n\r\n\r\n<!-- <div fxLayout=\"row\">\r\n    <div fxFlex=\"100\">\r\n        <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\" fxLayoutGap=\"16px\" class=\"mt-32\">\r\n            <button mat-button rounded color=\"grey\" (click)=\"goBack()\">\r\n                Back\r\n            </button>\r\n            <button mat-raised-button  color=\"primary\" style=\"float: right;\" type=\"submit\" (click)=done()>\r\n                Done\r\n            </button>\r\n        </div>\r\n    </div>\r\n</div>  -->\r\n\r\n<div fxLayout=\"row \"  fxLayoutAlign=\"space-between center\" class=\"full-width\">\r\n    <!-- <div fxFlex=\"20\"></div> -->\r\n        <span style=\"padding: 3rem;\">\r\n            <button mat-stroked-button color=\"primary\"\r\n                style=\"border-radius: 20px;width: 10rem;height: 2.5rem;font-family: sans-serif;\"\r\n                (click)=\"goBack()\">Back</button>\r\n        </span>\r\n    \r\n    \r\n        <span style=\"padding: 3rem;\">\r\n            <button\r\n                style=\"border-radius: 20px;width: 10rem;height: 2.5rem;background-color: #456EFE; color: white; font-family: sans-serif;\"\r\n                mat-raised-button type=\"button\" (click)=done()>Done</button>\r\n        </span>\r\n    \r\n</div>\r\n\r\n</div>","import { ChangeDetectorRef, Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { AccountService } from '../account.service';\r\n\r\nimport { MatDialog } from '@angular/material/dialog';\r\n\r\nimport { rumangoAnimations } from 'app/shared/animations/rumango-animations';\r\nimport { ChargeDetailsSummaryComponent } from '../charge-details-summary/charge-details-summary.component';\r\nimport { IntrestDetailsSummaryComponent } from '../intrest-details-summary/intrest-details-summary.component';\r\n\r\n@Component({\r\n  selector: 'app-application-enrichment',\r\n  templateUrl: './application-enrichment.component.html',\r\n  styleUrls: ['./application-enrichment.component.scss'],\r\n  animations: rumangoAnimations\r\n})\r\nexport class ApplicationEnrichmentComponent implements OnInit {\r\n\r\n  informations = [\r\n    {\r\n      'id': 1,\r\n      'title': '1. Interest Details',\r\n      'content': \"All the Interest details are captured\",\r\n      'percentage': 70,\r\n      'status': 'Pending',\r\n      // 'state': 'application/enrichment/interest',\r\n      'avatar': \"assets/images/svg/undraw_statistic_chart_38b6.svg\"\r\n\r\n    }, {\r\n      'id': 2,\r\n      'title': '2. Charge Details',\r\n      'content': \"Charge Details are captured\",\r\n      'percentage': 100,\r\n      'status': 'Completed',\r\n      //'state': 'application/enrichment/charge',\r\n      'avatar': \"assets/images/svg/undraw_Payments_re_77x0.svg\"\r\n    },\r\n  ];\r\n\r\n  isChargesScreen: boolean = false;\r\n  isInterestScreen: boolean = false;\r\n  accountId: any;\r\n  isEnrichmentStageDone: boolean = false;\r\n  isChargeStageDone: boolean = false;\r\n  intrestFlag: any;\r\n  isFinancialScreen:boolean = false;\r\n  accountInfo: any;\r\n\r\n  constructor(public dialog: MatDialog, private router: Router, private ls: LocalStoreService, private cdr: ChangeDetectorRef, private accountService: AccountService) { }\r\n\r\n  ngOnInit() {\r\n    this.accountId = this.ls.getItem('accountId');\r\n    this.isEnrichmentStageDone = this.ls.getItem('enrichmentStage');\r\n\r\n    this.isChargesScreen = this.ls.getItem('ENRICHMENT_CHARGES_DONE');\r\n    this.isInterestScreen = this.ls.getItem('ENRICHMENT_INTEREST_DONE');\r\n    this.isFinancialScreen = this.ls.getItem('LIMIT_FIN_DONE');\r\n    console.log(\"this.isInterestScreen\", this.isInterestScreen)\r\n    console.log(\"this.intrestFlag\", this.intrestFlag)\r\n\r\n    this.accountService.refresh.subscribe((res: any) => {\r\n      this.accountId = this.ls.getItem('accountId');\r\n      // Parent 3\r\n      this.isEnrichmentStageDone = this.ls.getItem('enrichmentStage');\r\n      // Parent 3 childs nav\r\n      this.isChargesScreen = this.ls.getItem('ENRICHMENT_CHARGES_DONE');\r\n      this.isInterestScreen = this.ls.getItem('ENRICHMENT_INTEREST_DONE');\r\n      this.isFinancialScreen = this.ls.getItem('LIMIT_FIN_DONE');\r\n\r\n      this.cdr.markForCheck();\r\n    });\r\n\r\n    this.accountInfo = this.ls.getItem('EDIT-CREATEACCCIF');\r\n    console.log(this.accountInfo);\r\n    console.log(this.accountId);\r\n    if(this.accountInfo){\r\n    \r\n      this.ls.setItem('limitEntryStage',true);\r\n   \r\n      this.ls.setItem('ENRICHMENT_CHARGES_DONE', true);\r\n      this.ls.setItem('ENRICHMENT_INTEREST_DONE', true);\r\n      this.accountId=this.accountInfo.businessProductAccount.accountId;\r\n    }\r\n    console.log(this.accountId);\r\n   \r\n  }\r\n\r\n  goToDetail() {\r\n\r\n    const dialogRef = this.dialog.open(ChargeDetailsSummaryComponent, { data: { number: '9656849771', type: 'Mobile Number' }, disableClose: true });\r\n    dialogRef.afterClosed().subscribe((submit) => {\r\n\r\n\r\n    });\r\n\r\n\r\n  }\r\n  goToIntrest() {\r\n    const dialogRef = this.dialog.open(IntrestDetailsSummaryComponent, { data: { number: '9656849771', type: 'Mobile Number' }, disableClose: true });\r\n    dialogRef.afterClosed().subscribe((submit) => {\r\n    })\r\n\r\n  }\r\n  navigate() {\r\n    this.router.navigate([`/home/application/enrichment/fullSummary`, this.accountId]);\r\n  }\r\n}\r\n","<div class=\"matcard-size\">\r\n<div fxLayout=\"row wrap\">\r\n  <div fxFlex=\"100\">\r\n    <!-- <div class=\"propic text-center\">\r\n        <img src=\"assets/images/face-7.png\" alt=\"\" class=\"w-80\" />\r\n      </div> -->\r\n    <div class=\"profile-pic text-center\">\r\n      <img src=\"assets/images/face-7.png\" class=\"main-profile-img\" />\r\n      <i class=\"fa fa-edit upload-icon\"></i>\r\n    </div>\r\n    <div class=\"profile-title text-center mt-8\">\r\n      <div class=\"main-title1\"><b>Create New Customer</b></div>\r\n      <div class=\"text-muted1\">\r\n        Create New Customer Account with bank XYZ bank in a better way.\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div fxFlex=\"100\" *ngIf=\"isChargesScreen && isInterestScreen\" class=\"mt-8\">\r\n    <mat-card [@animate]=\"{ value: '*', params: { y: '50px', delay: '300ms' } }\">\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n        <div fxFlex=\"5\"><mat-icon class=\"text-green\">check_circle</mat-icon></div>\r\n        <div fxFlex=\"30\">\r\n          <h3>Application Enrichment Completed</h3>\r\n        </div>\r\n        <span fxFlex></span>\r\n        <button mat-button color=\"primary\" class=\"btn-color\" (click)=\"navigate()\">\r\n          View Summary\r\n          <mat-icon>chevron_right</mat-icon></button>\r\n      </div>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n<div fxLayout=\"row wrap\" class=\"mt-12\">\r\n  <div fxFlex=\"50\"  fxFlex.gt-sm=\"50\" fxFlex.sm=\"50\">\r\n    <!-- [ngClass]=\"{'not-active':item.status == ''}\" -->\r\n    <!-- Card 1 start-->\r\n    <mat-card [ngClass]=\"{'border-size':isInterestScreen || !isInterestScreen}\">\r\n    <mat-card-header>\r\n        <mat-card-title>1. Interest Details</mat-card-title>\r\n      </mat-card-header>\r\n      <mat-card-content>\r\n        <div fxLayout=\"row\" fxLayoutGap=\"10px\" fxLayoutAlign=\"space-between start\" >\r\n            <div fxFlex=\"50%\" class=\"notActive\">\r\n           <p class=\"pl-18\"> All the Interest details are captured.</p>\r\n            </div>\r\n            <div fxFlex=\"50%\">\r\n               \r\n          <img [src]=\"'assets/images/svg/undraw_statistic_chart_38b6.svg'\" class=\"card-img\">\r\n              </div>\r\n          </div>\r\n        <!--begin::Progress-->\r\n        <div class=\"mb-1\" *ngIf=\"isInterestScreen\">\r\n          <mat-progress-bar\r\n            [color]=\"'primary'\"\r\n            mode=\"determinate\"\r\n            [value]=\"100\"\r\n            class=\"rounded\"\r\n            style=\"height: 6px\"\r\n          >\r\n          </mat-progress-bar>\r\n          <p class=\"m-0 text-right\">Completed</p>\r\n          <!-- <span class=\"text-muted\">| {{ item.percentage }}%</span> -->\r\n        </div>\r\n        <!--end::Progress-->\r\n      </mat-card-content>\r\n      <!--begin:: Card body-->\r\n        <mat-divider></mat-divider>\r\n        <mat-card-actions>\r\n          <ng-container *ngIf=\"isFinancialScreen && isInterestScreen; else showInterest\">\r\n            <button\r\n            mat-button\r\n            (click)=\"goToIntrest()\"\r\n            [disabled]=\"accountId == null\"\r\n            color=\"primary\"\r\n\r\n            class=\"pl-27\"\r\n\r\n          >\r\n            View Details <mat-icon>chevron_right</mat-icon>\r\n          </button>\r\n          </ng-container>\r\n          <ng-template #showInterest>\r\n           <button\r\n            mat-button\r\n            [routerLink]=\"[ '/home/application/enrichment/interest/', accountId ]\"\r\n            [disabled]=\"!isFinancialScreen\"\r\n            color=\"primary\"\r\n            class=\"pl-27\"\r\n            >\r\n            Add Details <mat-icon>chevron_right</mat-icon>\r\n          </button>\r\n          </ng-template>\r\n        </mat-card-actions>\r\n    </mat-card>\r\n    <!-- Card 1 end -->\r\n    </div>\r\n    <div fxFlex=\"50\"  fxFlex.gt-sm=\"50\" fxFlex.sm=\"50\">\r\n    <!-- card 2 start-->\r\n    <mat-card [ngClass]=\"{'border-size':isChargesScreen || !isChargesScreen && isInterestScreen}\">\r\n      <mat-card-header>\r\n          <mat-card-title>2. Charge Details</mat-card-title>\r\n          <!-- <mat-card-subtitle> {{ item?.content }}</mat-card-subtitle> -->\r\n        </mat-card-header>\r\n        <mat-card-content>\r\n          <div fxLayout=\"row\" fxLayoutGap=\"10px\" fxLayoutAlign=\"space-between start\" >\r\n              <div fxFlex=\"50%\" class=\"notActive\">\r\n             <p class=\"pl-18\"> Charge Details are captured</p>\r\n              </div>\r\n              <div fxFlex=\"50%\">\r\n                 \r\n            <img [src]=\"'assets/images/svg/undraw_Payments_re_77x0.svg'\" class=\"card-img\">\r\n                </div>\r\n            </div>\r\n          <!--begin::Progress-->\r\n          <div class=\"mb-1\" *ngIf=\"isChargesScreen\">\r\n            <mat-progress-bar\r\n              [color]=\"'primary'\"\r\n              mode=\"determinate\"\r\n              [value]=\"100\"\r\n              class=\"rounded\"\r\n              style=\"height: 6px\"\r\n            >\r\n            </mat-progress-bar>\r\n            <p class=\"m-0 text-right\">Completed</p>\r\n            <!-- <span class=\"text-muted\">| {{ item.percentage }}%</span> -->\r\n          </div>\r\n          <!--end::Progress-->\r\n        </mat-card-content>\r\n        <!--begin:: Card body-->\r\n          <mat-divider></mat-divider>\r\n          <mat-card-actions>\r\n            <ng-container *ngIf=\"isInterestScreen && isChargesScreen; else showCharge\">\r\n              <button\r\n              mat-button\r\n              (click)=\"goToDetail()\"\r\n              [disabled]=\"accountId == null\"\r\n\r\n              color=\"primary\"\r\n              class=\"pl-27\"\r\n\r\n            >\r\n              View Details <mat-icon>chevron_right</mat-icon>\r\n            </button>\r\n            </ng-container>\r\n            <ng-template #showCharge>\r\n             <button\r\n              mat-button\r\n              [routerLink]=\"[ '/home/application/enrichment/charge/', accountId ]\"\r\n              [disabled]=\"!isInterestScreen\"\r\n              color=\"primary\"\r\n              class=\"pl-27\"\r\n              >\r\n              Add Details <mat-icon>chevron_right</mat-icon>\r\n            </button>\r\n            </ng-template>\r\n\r\n          </mat-card-actions>\r\n    </mat-card>\r\n    <!-- Card 2 end-->\r\n    </div>\r\n   \r\n   \r\n   \r\n</div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { AccountService } from '../../account.service';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { UrlService } from '../../url.service';\r\n\r\n@Component({\r\n  selector: 'app-summary-approval',\r\n  templateUrl: './summary-approval.component.html',\r\n  styleUrls: ['./summary-approval.component.scss']\r\n})\r\nexport class SummaryApprovalComponent implements OnInit {\r\n\r\n  approvalForm: FormGroup;\r\n  accountId: any;\r\n  appsummary: any;\r\n  appArr: any = [];\r\n  previousUrl: string = '';\r\n  constructor(private router: Router,\r\n    private snack: MatSnackBar,private urlService:UrlService,private accountService: AccountService, private formBuilder: FormBuilder, private api: ApiService, private ls: LocalStoreService) { }\r\n\r\n\r\n  ngOnInit(): void {\r\n    this.accountId = this.ls.getItem('accountId');\r\n    this.getData(this.accountId);\r\n    \r\n    this.urlService.previousUrl$\r\n    .subscribe((previousUrl: string) => {\r\n        this.previousUrl = previousUrl\r\n    });\r\n\r\n  }\r\n\r\n  getData(accountId) {\r\n    this.api.approvalAccountFetch(accountId).subscribe(resp => {\r\n      console.log(\"approval details\", resp)\r\n      // this.appArr=resp;\r\n      this.appArr = resp;\r\n\r\n      console.log(this.appArr);\r\n    }, (err: any) => {\r\n      console.log(\"err\",err);\r\n      this.snack.open('Not able to connect to server!', 'INTERNAL SERVER ERROR', {\r\n        duration: 4000,\r\n        verticalPosition: 'top',\r\n        horizontalPosition: 'right'\r\n      });\r\n    })\r\n  }\r\n\r\n  goBack() {\r\n    this.router.navigate([`${this.previousUrl}`]);\r\n  }\r\n\r\n  onSubmit() {\r\n  \r\n    this.router.navigate(['/home/application/approval/list/:id']);\r\n}\r\n \r\n\r\n}\r\n","<div class=\"matcard-size\">\r\n<div fxLayout=\"row wrap\">\r\n  <div fxFlex=\"100\">\r\n    <div class=\"propic text-center\">\r\n      <img src=\"assets/images/svg/undraw_approve_qwp7.svg\" alt=\"\" class=\"w-80\" />\r\n    </div>\r\n    <div class=\"profile-title text-center mt-8\">\r\n      <div class=\"main-title\"><b>Approval Details</b></div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<!-- <div fxLayout=\"row wrap\">\r\n  <div fxFlex=\"100\">\r\n     <div class=\"propic text-center\">\r\n        <img\r\n          src=\"assets/images/svg/undraw_approve_qwp7.svg\"\r\n          alt=\"\"\r\n          class=\"w-80\"\r\n        />\r\n      </div> \r\n    <div class=\"profile-title text-center mt-8\">\r\n        <div class=\"main-title\"><b>Approval Details</b></div>\r\n      </div> \r\n  </div>\r\n\r\n  <div fxFlex=\"100\" class=\"mt-24\">\r\n    <div>\r\n      <mat-icon fxLayoutAlign=\"end stretch\">close</mat-icon>\r\n    </div>\r\n    <h2 class=\"ml-16\">Approval Details</h2>\r\n    <div class=\"border\"></div>\r\n\r\n    <div class=\"mt-24\"></div>\r\n\r\n    <mat-card>\r\n\r\n      <form [formGroup]=\"approvalForm\">\r\n        <mat-card-content>\r\n          <div fxLayout=\"row\" fxLayoutGap=\"25px\">\r\n            <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-1\">\r\n              <div class=\"pb-1\">\r\n                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                  <mat-label>Account Type</mat-label>\r\n                  <mat-select name=\"account\" formControlName=\"accountType\" disabled>\r\n                    <mat-option value=\"saving\">Savings</mat-option>\r\n                    <mat-option value=\"current\">Current</mat-option>\r\n                  </mat-select>\r\n                </mat-form-field>\r\n              </div>\r\n\r\n              <div class=\"pb-1\">\r\n                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                  <mat-label>Product Code</mat-label>\r\n                  <input matInput [disabled]=\"true\" name=\"account_branch\" placeholder=\"Product Code\" value=\"\"\r\n                    formControlName=\"productAccountId\" />\r\n                  <mat-icon matSuffix>account_balance</mat-icon>\r\n                </mat-form-field>\r\n              </div>\r\n\r\n              <div class=\"pb-1\">\r\n                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                  <mat-label>Account Currency</mat-label>\r\n                  <mat-select name=\"owner\" formControlName=\"accountCurrency\" disabled>\r\n                    <mat-option value=\"USD\">USD</mat-option>\r\n                    <mat-option value=\"INR\">INR</mat-option>\r\n                    <mat-option value=\"ASD\">ASD</mat-option>\r\n                  </mat-select>\r\n                </mat-form-field>\r\n              </div>\r\n\r\n              <div class=\"pb-1\">\r\n                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                  <mat-label>User Recomendation</mat-label>\r\n                  <mat-select name=\"owner\" placeholder=\"Recommended for Approval\" formControlName=\"userRecommendation\"\r\n                    disabled>\r\n                    <mat-option value=\"Recommended for Approval\">Recommended for Approval</mat-option>\r\n                    <mat-option value=\"Recommended for Rejection\">Recommended for Rejection</mat-option>\r\n                  </mat-select>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n\r\n            <div fxFlex=\"100\" fxFlex.gt-xs=\"50\">\r\n              <div class=\"pb-1\">\r\n                <mat-form-field class=\"full-width\" appearance=\"outline\">\r\n                  <mat-label>Account Branch</mat-label>\r\n                  <input matInput name=\"business\" placeholder=\"Business Product Name\" formControlName=\"accountBranch\"\r\n                    disabled />\r\n                  <mat-icon matSuffix>branding_watermark</mat-icon>\r\n                </mat-form-field>\r\n              </div>\r\n\r\n              <div class=\"pb-1\">\r\n                <mat-form-field class=\"full-width\" appearance=\"outline\">\r\n                  <mat-label>Product Name</mat-label>\r\n                  <input matInput name=\"business\" placeholder=\"Business Product Name\"\r\n                    formControlName=\"businessProductName\" disabled />\r\n                  <mat-icon matSuffix>branding_watermark</mat-icon>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </mat-card-content>\r\n      </form>\r\n    </mat-card>\r\n  </div>\r\n\r\n  <div fxFlex=\"100\" class=\"mt-16\">\r\n    <button mat-stroked-button color=\"primary\" mat-dialog-close [routerLink]=\"'/home/application/approval/details'\"\r\n      (click)=\"onEditOfApprovalStging()\">Edit</button>\r\n    <a>Edit</a>\r\n    <span fxFlex></span>\r\n    <button mat-raised-button color=\"primary\" type=\"button\" (click)=\"onSubmit(approvalForm.value)\">DONE</button>\r\n  </div>\r\n</div> -->\r\n\r\n\r\n\r\n<h2 class=\"ml-16\">Approval Details</h2>\r\n<div class=\"border\"></div>\r\n<mat-card *ngIf=\"appArr\">\r\n  <div >\r\n    <div fxLayout=\"row wrap\" fxLayoutAlign=\"space-around stretch\">\r\n\r\n      <div fxFlex=\"100\" fxLayoutAlign=\"space-around stretch\">\r\n        <div fxFlex=\"50\" class=\"headingText\">Account Type</div>\r\n\r\n        <div fxFlex=\"50\" class=\"headingText\">Account Branch</div>\r\n        <div fxFlex=\"50\" class=\"headingText\">Product Code </div>\r\n      </div>\r\n      <div fxFlex=\"100\" fxLayoutAlign=\"space-around stretch\">\r\n        <div fxFlex=\"50\" class=\"valueText\"><b>{{appArr.accountType}}</b></div>\r\n        <div fxFlex=\"50\" class=\"valueText\"><b>{{appArr.accountBranch}}</b></div>\r\n        <div fxFlex=\"50\" class=\"valueText\"><b>{{appArr.businessProductName}}</b></div>\r\n      </div>\r\n      <br>\r\n      <div class=\"border1\"></div>\r\n      <!-- 2nd row -->\r\n      <div fxFlex=\"100\" fxLayoutAlign=\"space-around stretch\">\r\n        <!--<div fxFlex=\"50\" class=\"headingText\">Product Name</div>-->\r\n        <div fxFlex=\"50\" class=\"headingText\">Account Currency</div>\r\n        <div fxFlex=\"50\"></div>\r\n      </div>\r\n      <div fxFlex=\"100\" fxLayoutAlign=\"space-around stretch\">\r\n        <!--<div fxFlex=\"50\" class=\"valueText\"><b>{{appArr.businessProductName}}</b></div>-->\r\n        <div fxFlex=\"50\" class=\"valueText\"><b>{{appArr.accountCurrency}}</b></div>\r\n        <div fxFlex=\"50\"></div>\r\n      </div>\r\n      <!-- 3rd row -->\r\n      <br>\r\n      <div class=\"border1\"></div>\r\n      <div fxFlex=\"100\">\r\n        <br>\r\n        <div fxFlex=\"50\" class=\"headingText\">User Recommendation</div>\r\n\r\n      </div>\r\n      <div fxFlex=\"100\" *ngIf=\"appArr.userRecommendation\">\r\n        <p class=\"valueText\">\r\n          <mat-icon class=\"textIcon\">check_circle</mat-icon>&nbsp;&nbsp;\r\n          <br><br>\r\n          <div fxFlex=\"50\" class=\"valueText\"><b>{{appArr.userRecommendation}}</b></div>\r\n\r\n      </div>\r\n\r\n    </div>\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n      <!-- <button mat-stroked-button color=\"primary\" mat-dialog-close [routerLink]=\"'/home/application/approval/details'\"\r\n      (click)=\"onEditOfApprovalStging()\">Edit</button> -->\r\n      <!-- <p class=\"editButton\" (click)=\"onEditOfApprovalStging()\" mat-dialog-close>Edit</p> -->\r\n      <!-- <a>Edit</a> -->\r\n      <!-- <span fxFlex></span> -->\r\n      <button mat-raised-button (click)=\"goBack()\">Back</button>\r\n      <button mat-raised-button color=\"primary\" type=\"button\"  (click)=\"onSubmit()\">DONE</button>\r\n      \r\n    </div>\r\n\r\n  </div>\r\n\r\n</mat-card>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { RouterModule } from '@angular/router';\r\nimport { HomeRoutes } from './home.routing';\r\nimport { PerfectScrollbarModule } from 'ngx-perfect-scrollbar';\r\nimport { SharedMaterialModule } from 'app/shared/shared-material.module';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { SharedDirectivesModule } from 'app/shared/directives/shared-directives.module';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\n\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { SharedPipesModule } from 'app/shared/pipes/shared-pipes.module';\r\nimport { AccountOpenComponent } from './application-entry-stage/account-open/account-open.component';\r\nimport { AccountServiceComponent } from './application-entry-stage/account-service/account-service.component';\r\nimport { AccountComponent } from './application-entry-stage/account/account.component';\r\nimport { ApplicationEntryStageComponent } from './application-entry-stage/application-entry-stage.component';\r\nimport { MandateComponent } from './application-entry-stage/mandate/mandate.component';\r\nimport { HomeComponent } from './home.component';\r\nimport { LimitEntryStageComponent } from './limit-entry-stage/limit-entry-stage.component';\r\nimport { SecuredDraftComponent } from './limit-entry-stage/secured-draft/secured-draft.component';\r\nimport { ApplicationEnrichmentComponent } from './application-enrichment/application-enrichment.component';\r\nimport { InterestComponent } from './application-enrichment/interest/interest.component';\r\nimport { ChargesComponent } from './application-enrichment/charges/charges.component';\r\nimport { ApplicationAssessmentComponent } from './application-assessment/application-assessment.component';\r\nimport { QualitativeComponent } from './application-assessment/qualitative/qualitative.component';\r\nimport { ReportComponent } from './application-assessment/report/report.component';\r\nimport { ApprovalStageComponent } from './approval-stage/approval-stage.component';\r\nimport { ApprovalDetailsComponent } from './approval-stage/approval-details/approval-details.component';\r\nimport { DigitalSigningComponent } from './digital-signing/digital-signing.component';\r\nimport { ListComponent } from './digital-signing/list/list.component';\r\nimport { EsignPopComponent } from './digital-signing/esign-pop/esign-pop.component';\r\n\r\nimport { FundingStageComponent } from './funding-stage/funding-stage.component';\r\nimport { InitialFundComponent } from './funding-stage/initial-fund/initial-fund.component';\r\nimport { SignaturePadModule } from 'angular2-signaturepad';\r\nimport { UnsecuredDraftComponent } from './limit-entry-stage/unsecured-draft/unsecured-draft.component';\r\nimport { FinancialDetailsComponent } from './limit-entry-stage/financial-details/financial-details.component';\r\nimport { IntialFundingDialogComponent } from './funding-stage/intial-funding-dialog/intial-funding-dialog.component';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { NgApexchartsModule } from 'ng-apexcharts';\r\nimport { ApplicationAssessmentSummaryComponent } from './application-assessment/application-assessment-summary/application-assessment-summary.component';\r\nimport { ReportDetailsComponent } from './application-assessment/report-details/report-details.component';\r\nimport { ScoreboardDetailsComponent } from './application-assessment/scoreboard-details/scoreboard-details.component';\r\nimport { AccountDetailsSummaryComponent } from './application-entry-stage/account-details-summary/account-details-summary.component';\r\nimport { AccountServiceSummaryComponent } from './application-entry-stage/account-service-summary/account-service-summary.component';\r\nimport { CustomerInformationDetailsSummaryComponent } from './application-entry-stage/customer-information-details-summary/customer-information-details-summary.component';\r\nimport { MandateSummaryComponent } from './application-entry-stage/mandate-summary/mandate-summary.component';\r\nimport { NomineesSummaryComponent } from './application-entry-stage/nominees-summary/nominees-summary.component';\r\nimport { ViewApprovalDeatilsComponent } from './approval-stage/view-approval-deatils/view-approval-deatils.component';\r\nimport { ChargeDetailsSummaryComponent } from './charge-details-summary/charge-details-summary.component';\r\nimport { InterestChargeSummaryComponent } from './interest-charge-summary/interest-charge-summary.component';\r\nimport { IntrestDetailsSummaryComponent } from './intrest-details-summary/intrest-details-summary.component';\r\nimport { UnsecuredDraftSummaryComponent } from './limit-entry-stage/unsecured-draft-summary/unsecured-draft-summary.component';\r\nimport { ViewSummaryComponent } from './limit-entry-stage/view-summary/view-summary.component';\r\nimport { FinancialDetailsSummaryComponent } from './limit-entry-stage/financial-details-summary/financial-details-summary.component';\r\nimport { SecuredDraftSummaryComponent } from './limit-entry-stage/secured-draft-summary/secured-draft-summary.component';\r\nimport { NomineeDetailsComponent } from './application-entry-stage/nominees/nominee-details/nominee-details.component';\r\nimport { ApplicationEntrySummaryComponent } from './application-entry-stage/application-entry-summary/application-entry-summary.component';\r\nimport { ChargeEditComponent } from './charge-edit/charge-edit.component';\r\nimport { IntrestEditComponent } from './intrest-edit/intrest-edit.component';\r\nimport { EditFinancialDetailsComponent } from './limit-entry-stage/edit-financial-details/edit-financial-details.component';\r\nimport { SummaryApprovalComponent } from './approval-stage/summary-approval/summary-approval.component';\r\nimport { AddNomineeDialogComponent } from './application-entry-stage/nominees/add-nominee-dialog/add-nominee-dialog.component';\r\nimport { SharedComponentsModule } from 'app/shared/components/shared-components.module';\r\nimport { AvatarPhotoComponent } from './application-entry-stage/avatar-photo/avatar-photo.component';\r\nimport { AccountOpenPopupComponent } from './application-entry-stage/account-open/account-open-popup/account-open-popup.component';\r\nimport { FundingStageSummaryComponent } from './funding-stage/funding-stage-summary/funding-stage-summary.component';\r\nimport { AlertDiaglogComponent } from './limit-entry-stage/alert-diaglog/alert-diaglog.component';\r\nimport { UploadSignEsignComponent } from './digital-signing/upload-sign-esign/upload-sign-esign.component';\r\nimport { SucessAlertComponent } from './digital-signing/sucess-alert/sucess-alert.component';\r\nimport { SignLaterComponent } from './digital-signing/sign-later/sign-later.component';\r\nimport { DigitalsignSummaryComponent } from './digital-signing/digitalsign-summary/digitalsign-summary.component';\r\n@NgModule({\r\n  declarations: [\r\n    HomeComponent,\r\n    AccountComponent,\r\n    AccountOpenComponent,\r\n    ApplicationEntryStageComponent,\r\n    MandateComponent,\r\n    AccountServiceComponent,\r\n    NomineeDetailsComponent,\r\n    LimitEntryStageComponent,\r\n    SecuredDraftComponent,\r\n    ApplicationEnrichmentComponent,\r\n    InterestComponent,\r\n    ChargesComponent,\r\n    ApplicationAssessmentComponent,\r\n    QualitativeComponent,\r\n    ReportComponent,\r\n    ApprovalStageComponent,\r\n    ApprovalDetailsComponent,\r\n    DigitalSigningComponent,\r\n    ListComponent,\r\n    EsignPopComponent,\r\n    FundingStageComponent,\r\n    InitialFundComponent,\r\n    UnsecuredDraftComponent,\r\n    FinancialDetailsComponent,\r\n    IntialFundingDialogComponent,\r\n    AccountServiceSummaryComponent,\r\n    MandateSummaryComponent,\r\n    NomineesSummaryComponent,\r\n    AccountDetailsSummaryComponent,\r\n    CustomerInformationDetailsSummaryComponent,\r\n    ViewApprovalDeatilsComponent,\r\n    UnsecuredDraftSummaryComponent,\r\n    FinancialDetailsSummaryComponent,\r\n    ViewSummaryComponent,\r\n    IntrestDetailsSummaryComponent,\r\n    ChargeDetailsSummaryComponent,\r\n    InterestChargeSummaryComponent,\r\n    ReportDetailsComponent,\r\n    ScoreboardDetailsComponent,\r\n    SecuredDraftSummaryComponent,\r\n    ApplicationAssessmentSummaryComponent,\r\n    UnsecuredDraftSummaryComponent,\r\n    ApplicationEntrySummaryComponent,\r\n    ChargeEditComponent,\r\n    IntrestEditComponent,\r\n    EditFinancialDetailsComponent,\r\n    SummaryApprovalComponent,\r\n    AddNomineeDialogComponent,\r\n    AvatarPhotoComponent,\r\n    AccountOpenPopupComponent,\r\n    FundingStageSummaryComponent,\r\n    AlertDiaglogComponent,\r\n    UploadSignEsignComponent,\r\n    SucessAlertComponent,\r\n    SignLaterComponent,\r\n    DigitalsignSummaryComponent,   \r\n  ],\r\n  entryComponents: [\r\n   AccountServiceSummaryComponent,\r\n   NomineesSummaryComponent,\r\n   MandateSummaryComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    SharedMaterialModule,\r\n    FlexLayoutModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    PerfectScrollbarModule,\r\n    SharedPipesModule,\r\n    SharedDirectivesModule,\r\n    SharedMaterialModule,\r\n    SignaturePadModule,\r\n    MatIconModule,\r\n    NgApexchartsModule,\r\n    MatAutocompleteModule,\r\n    RouterModule.forChild(HomeRoutes)\r\n  ],\r\n  \r\n})\r\nexport class HomeModule { }\r\n","import { ChangeDetectorRef, Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { rumangoAnimations } from 'app/shared/animations/rumango-animations';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { DialogService } from 'app/shared/services/dialogs/dialog.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { AccountService } from '../account.service';\r\n\r\n@Component({\r\n  selector: 'app-application-assessment',\r\n  templateUrl: './application-assessment.component.html',\r\n  styleUrls: ['./application-assessment.component.scss'],\r\n  animations: rumangoAnimations\r\n})\r\nexport class ApplicationAssessmentComponent implements OnInit {\r\n \r\n  isQualitativeScreen:boolean = false;\r\n  isReportScreen:boolean = false;\r\n  accountId: any;\r\n  isAssessmentStageDone: boolean = false;\r\n  assessmentReportSummary:any;\r\n  isChargesScreen: boolean = false;\r\n  overDraftByStatus:boolean;\r\n  accountInfo: any;\r\n  \r\n  constructor(private router: Router, private dialogService: DialogService, \r\n    private ls: LocalStoreService, private cdr: ChangeDetectorRef,\r\n     private accountService: AccountService, private apiService: ApiService) { }\r\n\r\n  ngOnInit() {\r\n    this.accountId = this.ls.getItem('accountId');\r\n    let overdraftStatus = this.ls.getItem('overDraftByStatus') || null;\r\n    console.log(\"fetch\",overdraftStatus);\r\n    this.overDraftByStatus = overdraftStatus != null ? overdraftStatus.isActive : false; \r\n    console.log(this.overDraftByStatus);\r\n    this.isAssessmentStageDone = this.ls.getItem('assessmentStage');\r\n    this.isQualitativeScreen = this.ls.getItem('ASSESSMENT_QA_DONE');\r\n    this.isReportScreen = this.ls.getItem('ASSESSMENT_REPORT_DONE');\r\n    this.isChargesScreen = this.ls.getItem('ENRICHMENT_CHARGES_DONE');\r\n\r\n    this.accountService.refresh.subscribe((res: any) => {\r\n      this.accountId = this.ls.getItem('accountId');\r\n      let overdraftStatus = this.ls.getItem('overDraftByStatus') || null;\r\n      this.overDraftByStatus = overdraftStatus != null ? overdraftStatus.isActive : false; \r\n      this.isAssessmentStageDone = this.ls.getItem('assessmentStage');\r\n      this.isQualitativeScreen = this.ls.getItem('ASSESSMENT_QA_DONE');\r\n      this.isReportScreen = this.ls.getItem('ASSESSMENT_REPORT_DONE');\r\n      this.isChargesScreen = this.ls.getItem('ENRICHMENT_CHARGES_DONE');\r\n      this.cdr.markForCheck();\r\n    });\r\n   \r\n    this.accountInfo = this.ls.getItem('EDIT-CREATEACCCIF');\r\n    console.log(this.accountInfo);\r\n    // if(this.accountInfo){\r\n    //   this.ls.setItem('enrichmentStage', true);\r\n    //   this.ls.setItem('assessmentStage', true);\r\n    //   this.ls.setItem('ASSESSMENT_QA_DONE', true);\r\n    //   this.ls.setItem('ASSESSMENT_REPORT_DONE', true);\r\n    //   this.ls.setItem('ENRICHMENT_CHARGES_DONE', true);\r\n    //   this.accountId=this.accountInfo.businessProductAccount.accountId;\r\n    // }\r\n    setTimeout(() => {\r\n      this.getData(this.accountId);\r\n    }, 1);\r\n   \r\n  }\r\n\r\n\r\n  getData(id){\r\n    this.apiService.getApplnAssessmentDetails(id).subscribe((response) => {\r\n      this.assessmentReportSummary = response;\r\n      console.log( this.assessmentReportSummary);\r\n    });\r\n  }\r\n\r\n  viewSummary(){\r\n    this.router.navigate([`/home/application/assessment/summary/`, this.accountId]);\r\n  }\r\n\r\n  openQualitativeDialog(){\r\n    this.dialogService.qualitativeSummaryDialog();\r\n  }\r\n\r\n  openAssessmentDialog(){\r\n    this.dialogService.assessmentSummaryDialog();\r\n  }\r\n\r\n}\r\n","<div class=\"matcard-size\">\r\n<div fxLayout=\"row wrap\">\r\n  <div fxFlex=\"100\">\r\n    <!-- <div class=\"propic text-center\">\r\n        <img src=\"assets/images/face-7.png\" alt=\"\" class=\"w-80\" />\r\n      </div> -->\r\n    <div class=\"profile-pic text-center\">\r\n      <img src=\"assets/images/face-7.png\" class=\"main-profile-img\" />\r\n      <i class=\"fa fa-edit upload-icon\"></i>\r\n    </div>\r\n    <div class=\"profile-title text-center mt-8\">\r\n      <div class=\"main-title1\"><b>Create New Customer</b></div>\r\n      <div class=\"text-muted1\">\r\n        Create New Customer Account with bank XYZ bank in a better way.\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div fxFlex=\"100\" *ngIf=\"isQualitativeScreen || isReportScreen\" class=\"mt-8\">\r\n    <mat-card [@animate]=\"{ value: '*', params: { y: '50px', delay: '300ms' } }\">\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n        <div fxFlex=\"5\"><mat-icon class=\"text-green\">check_circle</mat-icon></div>\r\n        <div fxFlex=\"30\">\r\n          <h3>Application Assesment Completed</h3>\r\n        </div>\r\n        <span fxFlex></span>\r\n        <button mat-button color=\"primary\" class=\"btn-color\" (click)=\"viewSummary()\">\r\n          View Summary\r\n          <mat-icon>chevron_right</mat-icon></button>\r\n      </div>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n<div fxLayout=\"row wrap\" class=\"mt-12\">\r\n  <div fxFlex=\"50\"  fxFlex.gt-sm=\"50\" fxFlex.sm=\"50\">\r\n    <!-- [ngClass]=\"{'not-active':item.status == ''}\" -->\r\n    <!-- Card 1 start-->\r\n    <mat-card [ngClass]=\"{'border-size':isQualitativeScreen || !isQualitativeScreen}\">\r\n    <mat-card-header>\r\n        <mat-card-title>1. Qualitative Scoreboard</mat-card-title>\r\n      </mat-card-header>\r\n      <mat-card-content>\r\n        <div fxLayout=\"row\" fxLayoutGap=\"10px\" fxLayoutAlign=\"space-between start\" >\r\n            <div fxFlex=\"50%\" class=\"notActive\">\r\n           <p class=\"pl-18\"> All the Interest details are captured</p>\r\n            </div>\r\n            <div fxFlex=\"50%\">\r\n               \r\n          <img [src]=\"'assets/images/svg/undraw_Scrum_board_re_wk7v.svg'\" class=\"card-img\">\r\n              </div>\r\n          </div>\r\n        <!--begin::Progress-->\r\n        <div class=\"mb-1\" *ngIf=\"isQualitativeScreen\">\r\n          <mat-progress-bar\r\n            [color]=\"'primary'\"\r\n            mode=\"determinate\"\r\n            [value]=\"100\"\r\n            class=\"rounded\"\r\n            style=\"height: 6px\"\r\n          >\r\n          </mat-progress-bar>\r\n          <p class=\"m-0 text-right\">Completed</p>\r\n          <!-- <span class=\"text-muted\">| {{ item.percentage }}%</span> -->\r\n        </div>\r\n        <!--end::Progress-->\r\n      </mat-card-content>\r\n      <!--begin:: Card body-->\r\n        <mat-divider></mat-divider>\r\n        <mat-card-actions>\r\n          <ng-container *ngIf=\"isChargesScreen && isQualitativeScreen; else showQualitative\">\r\n            <button\r\n            mat-button\r\n            (click)=\"openQualitativeDialog()\"\r\n            [disabled]=\"accountId == null\"\r\n            color=\"primary\"\r\n\r\n            class=\"pl-27\"\r\n\r\n          >\r\n            View Details <mat-icon>chevron_right</mat-icon>\r\n          </button>\r\n          </ng-container>\r\n          <ng-template #showQualitative>\r\n           <button\r\n            mat-button\r\n            [routerLink]=\"[ '/home/application/assessment/qualitative/', accountId ]\"\r\n            [disabled]=\"!isChargesScreen\"\r\n            color=\"primary\"\r\n\r\n            class=\"pl-27\"\r\n\r\n            >\r\n            Add Details <mat-icon>chevron_right</mat-icon>\r\n          </button>\r\n          </ng-template>\r\n        </mat-card-actions>\r\n    </mat-card>\r\n    <!-- Card 1 end -->\r\n    </div>\r\n    <div fxFlex=\"50\"  fxFlex.gt-sm=\"50\" fxFlex.sm=\"50\">\r\n    <!-- card 2 start-->\r\n    <mat-card *ngIf=\"overDraftByStatus\">\r\n      <mat-card-header>\r\n          <mat-card-title>2. Assessment Report</mat-card-title>\r\n          <!-- <mat-card-subtitle> {{ item?.content }}</mat-card-subtitle> -->\r\n        </mat-card-header>\r\n        <mat-card-content>\r\n          <div fxLayout=\"row\" fxLayoutGap=\"10px\" fxLayoutAlign=\"space-between start\" >\r\n              <div fxFlex=\"50%\" class=\"notActive\">\r\n             <p class=\"pl-18\">Charge Details are captured</p>\r\n              </div>\r\n              <div fxFlex=\"50%\">\r\n                 \r\n            <img [src]=\"'assets/images/svg/undraw_report_mx0a.svg'\" class=\"card-img\">\r\n                </div>\r\n            </div>\r\n          <!--begin::Progress-->\r\n          <div class=\"mb-1\" *ngIf=\"isReportScreen\">\r\n            <mat-progress-bar\r\n              [color]=\"'primary'\"\r\n              mode=\"determinate\"\r\n              [value]=\"100\"\r\n              class=\"rounded\"\r\n              style=\"height: 6px\"\r\n            >\r\n            </mat-progress-bar>\r\n            <p class=\"m-0 text-right\">Completed</p>\r\n            <!-- <span class=\"text-muted\">| {{ item.percentage }}%</span> -->\r\n          </div>\r\n          <!--end::Progress-->\r\n        </mat-card-content>\r\n        <!--begin:: Card body-->\r\n          <mat-divider></mat-divider>\r\n          <mat-card-actions>\r\n            <ng-container *ngIf=\"isQualitativeScreen && isReportScreen; else showReport\">\r\n              <button\r\n              mat-button\r\n              (click)=\"openAssessmentDialog()\"\r\n              [disabled]=\"accountId == null\"\r\n              color=\"primary\"\r\n              class=\"pl-27\"\r\n            >\r\n              View Details <mat-icon>chevron_right</mat-icon>\r\n            </button>\r\n            </ng-container>\r\n            <ng-template #showReport>\r\n             <button\r\n              mat-button\r\n              [routerLink]=\"[ '/home/application/assessment/report/', accountId ]\"\r\n              [disabled]=\"!isQualitativeScreen\"\r\n              color=\"primary\"\r\n              class=\"pl-27\"\r\n              >\r\n              Add Details <mat-icon>chevron_right</mat-icon>\r\n            </button>\r\n            </ng-template>\r\n\r\n          </mat-card-actions>\r\n    </mat-card>\r\n    <!-- Card 2 end-->\r\n    </div>\r\n   \r\n   \r\n   \r\n</div>\r\n</div>\r\n","import { ChangeDetectorRef, Component, ElementRef, OnInit, Renderer2 } from '@angular/core';\r\nimport { FormArray, FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { AssessmentReportSummary } from 'app/shared/models/AssessmentReportSummary';\r\nimport { QualitativeScoreboardSummary } from 'app/shared/models/qualitativeScoreboardSummary';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { AccountService } from '../../account.service';\r\nimport { UrlService } from '../../url.service';\r\n\r\n@Component({\r\n  selector: 'app-qualitative',\r\n  templateUrl: './qualitative.component.html',\r\n  styleUrls: ['./qualitative.component.scss']\r\n})\r\nexport class QualitativeComponent implements OnInit {\r\n  qsForm: FormGroup;\r\n  qsFormArray: FormArray;\r\n  accountId: any;\r\n  accountType: any;\r\n  loggedInUser: any;\r\n  sbMultiSelectAnswer: any[] = [];\r\n  // scoreboardQuestionsArray: any[] = [];\r\n  // scoreCardMappingArray: { scoreCardQuestionId: any, scorecardAnswer: any, scoreCardMappingId: any }[] = [];\r\n  scoreboardQuestionsArray: { applicantId: any, scoreCardDetails: any[],scorecardQuestion:any }[] = [];\r\n  scoreCardMappingArray: { applicantId: any, scoreCardDetails: { scoreCardQuestionId: any, scorecardAnswer: any, scoreCardMappingId: any }[] }[] = [];\r\n  numberOfApplicant = new FormControl('');\r\n  scoreCardId = new FormControl('');\r\n  assessmentReportSummary: AssessmentReportSummary;\r\n  qualitativeScoreboardSummary: QualitativeScoreboardSummary;\r\n  isDataSaved: boolean = false;\r\n  disableDoneBtn: boolean = true;\r\n  anyErrorExist: boolean = false;\r\n  isQualitativeScreen: boolean = false;\r\n  isQualitative: any;\r\n  previousUrl: string = '';\r\n  showEditOption: boolean = false;\r\n  overDraftByStatus:boolean;\r\n  no_of_applicants: any;\r\n  accountInfo: any;\r\n  qualitative: any;\r\n  scoreCardDetails: any;\r\n  sbSwlwctAnswer: any[];\r\n  sbSelectAnswer1: any;\r\n  sbSelectAnswer: string=\"\";\r\n\r\n  constructor\r\n    (\r\n      private router: Router,\r\n      private api: ApiService,\r\n      private snack: MatSnackBar,\r\n      private fb: FormBuilder,\r\n      private ls: LocalStoreService,\r\n      private accountService: AccountService,\r\n      private elRef: ElementRef,\r\n      private renderer: Renderer2,\r\n      private urlService: UrlService,\r\n      private cdr:ChangeDetectorRef\r\n    ) { }\r\n\r\n  ngOnInit(): void {\r\n    console.log( this.sbSelectAnswer);\r\n    this.accountId = this.ls.getItem('accountId');\r\n    this.accountInfo = this.ls.getItem('EDIT-CREATEACCCIF');\r\n    if(this.accountInfo){\r\n      this.accountId=this.accountInfo.businessProductAccount.accountId\r\n    }\r\n    let overdraftStatus = this.ls.getItem('overDraftByStatus') || null;\r\n    console.log(\"fetch\",overdraftStatus);\r\n    this.overDraftByStatus = overdraftStatus != null ? overdraftStatus.isActive : false; \r\n    console.log(this.overDraftByStatus);\r\n    let isScoreCardScreen: boolean = JSON.parse(this.ls.getItem('ASSESSMENT_QA_DONE'));\r\n    this.accountType = this.ls.getItem('accountType');\r\n    this.loggedInUser = this.ls.getItem('ICUST_USER');\r\n    this.isQualitative = localStorage.getItem('Status');\r\n    this.no_of_applicants = this.ls.getItem('NO_OF_APPLICANTS');\r\n    console.log(this.no_of_applicants);\r\n    console.log(this.loggedInUser);\r\n    this.accountType == \"current\" ? this.accountType = \"savings\" : this.accountType = \"savings\";//This line because we have backend data only for savings. This line is temporary.\r\n    \r\n    this.urlService.previousUrl$\r\n      .subscribe((previousUrl: string) => {\r\n        this.previousUrl = previousUrl\r\n      });\r\nsetTimeout(() => {\r\n  if (this.accountId != null && isScoreCardScreen) {\r\n    this.showEditOption = true;\r\n    this.isQualitativeScreen = true;\r\n    this.getAllQualitative();\r\n  } else {\r\n    this.showEditOption = false;\r\n    this.loadData();\r\n  }\r\n}, 1);\r\n   \r\n\r\n  }\r\n  counter(i: number) {\r\n    return new Array(i);\r\n}\r\nloadData(){\r\n  this.api.getScorecardQuestions(this.accountType).subscribe((response) => {  \r\n    console.log(response);\r\n    for (let n = 0; n < 1; n++) {\r\n        this.scoreboardQuestionsArray.push({scorecardQuestion: response,applicantId: n + 1, scoreCardDetails: response});\r\n        let mapDataAns: any[] = [];\r\n        console.log(\"data\",this.scoreCardDetails);\r\n        for (let p = 0; p < response.length; p++){\r\n          mapDataAns.push({scoreCardQuestionId: response[p].scoreCardQuestionId, scorecardAnswer: null, scoreCardMappingId: null}); \r\n        }\r\n        this.scoreCardMappingArray.push({applicantId: n + 1, scoreCardDetails: mapDataAns});\r\n    }\r\n\r\n    console.log(\"data\",this.scoreCardDetails);\r\n    console.log(\"ques:\",this.scoreboardQuestionsArray)\r\n    this.cdr.markForCheck();\r\n  });\r\n}\r\n\r\ngetAllQualitative() {\r\n  console.log(this.isQualitativeScreen);\r\n  this.api.getQualitativeScorecardDetails(this.accountId).subscribe((response) => {\r\n    console.log(this.isQualitativeScreen);\r\n    this.qualitativeScoreboardSummary = response;\r\n    console.log(this.qualitativeScoreboardSummary?.scoreCardId + \" : \" + this.qualitativeScoreboardSummary?.numberOfApplicant);\r\n    this.scoreCardId.setValue(this.qualitativeScoreboardSummary.scoreCardId);\r\n    this.numberOfApplicant.setValue(this.qualitativeScoreboardSummary.numberOfApplicant);\r\n    console.log(\"scorecard id: \", this.scoreCardId)\r\n    console.log(\"numberOfApplicant : \", this.numberOfApplicant)\r\n\r\n    this.scoreboardQuestionsArray = [];\r\n    for (let i = 0; i < this.qualitativeScoreboardSummary.scoreCardMapping.length; i++) {\r\n      console.log(\"inside for\", this.qualitativeScoreboardSummary.scoreCardMapping)\r\n      this.api.getScorecardQuestions(this.accountType).subscribe((response) => {\r\n        console.log(response);\r\n\r\n        console.log(this.no_of_applicants);\r\n        if (!this.no_of_applicants && response) {\r\n          this.no_of_applicants = response.length;\r\n        }\r\n\r\n        for (let n = 0; n < this.no_of_applicants; n++) {\r\n          this.scoreboardQuestionsArray.push({ scorecardQuestion: response, applicantId: n + 1, scoreCardDetails: response });\r\n          console.log(this.qualitativeScoreboardSummary.scoreCardMapping[i].scoreCardDetails.length)\r\n          for (let j = 0; j < this.qualitativeScoreboardSummary.scoreCardMapping[i].scoreCardDetails.length; j++) {\r\n            console.log(this.qualitativeScoreboardSummary.scoreCardMapping[i].scoreCardDetails)\r\n            var scAns = this.qualitativeScoreboardSummary.scoreCardMapping[i].scoreCardDetails;\r\n            console.log(scAns)\r\n           \r\n            \r\n            this.sbMultiSelectAnswer.push(scAns[j].scorecardAnswer);\r\n            console.log( this.sbMultiSelectAnswer[2])\r\n            for(let k=0; k < this.sbMultiSelectAnswer.length; k++){\r\n              if(this.sbMultiSelectAnswer[2]){\r\n                this.sbSelectAnswer = this.sbMultiSelectAnswer[2];\r\n                console.log(this.sbSwlwctAnswer);\r\n              }\r\n              else if(this.sbMultiSelectAnswer[0]){\r\n                this.sbSelectAnswer1 = this.sbMultiSelectAnswer[0];\r\n                console.log(this.sbSelectAnswer1);\r\n              }\r\n            }\r\n            console.log(this.sbMultiSelectAnswer);\r\n          }\r\n        }\r\n\r\n        console.log(\"data\", this.scoreCardDetails);\r\n        console.log(\"ques:\", this.scoreboardQuestionsArray)\r\n        this.cdr.markForCheck();\r\n      });\r\n\r\n      this.scoreCardMappingArray = this.scoreboardQuestionsArray;\r\n    }\r\n\r\n    console.log(this.scoreboardQuestionsArray, \"scoreBoardQuestionArray\");\r\n    this.disableDoneBtn = false;\r\n    this.cdr.markForCheck();\r\n  });\r\n}\r\n\r\n  insertData(id: any, answer: any, qtype: string, mapId: any,index:any, applcantId: any) {\r\n    console.log(\"Answer: \", answer,index, applcantId);\r\n    if (qtype == 'checkbox') {\r\n      answer = answer.toString();\r\n    }\r\n    let dataUpdated: boolean = false ;\r\n    let aplcntExists: boolean = false ;\r\n    // this.scoreCardMappingArray\r\n    for (let m = 0; m < this.scoreCardMappingArray.length; m++) {\r\n      if (this.scoreCardMappingArray[m].applicantId == applcantId ) {\r\n        for (let n = 0; n < this.scoreCardMappingArray[m].scoreCardDetails.length; n++) {\r\n          console.log(n, this.scoreCardMappingArray[m].scoreCardDetails[n]);\r\n          if (this.scoreCardMappingArray[m].scoreCardDetails[n].scoreCardQuestionId == id) {\r\n            this.scoreCardMappingArray[m].scoreCardDetails[n].scorecardAnswer = answer;\r\n            console.log(this.scoreCardMappingArray[m].scoreCardDetails[n].scorecardAnswer)\r\n            dataUpdated = true;\r\n          }\r\n        }\r\n        aplcntExists = true ;\r\n      }\r\n    }\r\n    if (!dataUpdated) {\r\n      let dataOject: any = {};\r\n      dataOject.scoreCardQuestionId = id;\r\n      dataOject.scorecardAnswer = answer;\r\n      if (mapId != null) {\r\n        dataOject.scoreCardMappingId = mapId;\r\n\r\n      }\r\n      if (!aplcntExists) {\r\n        let idx = this.scoreCardMappingArray.length ;\r\n        this.scoreCardMappingArray.push({applicantId: applcantId, scoreCardDetails: dataOject});\r\n        // this.scoreCardMappingArray[idx].applicantId == applcantId ;\r\n        // this.scoreCardMappingArray[idx].scoreCardDetail.push(dataOject);\r\n        // this.scoreCardMappingArray.push(dataOject);\r\n      } else {\r\n        for (let m = 0; m < this.scoreCardMappingArray.length; m++) {\r\n          if (this.scoreCardMappingArray[m].applicantId == applcantId ) {\r\n              this.scoreCardMappingArray[m].scoreCardDetails.push(dataOject);\r\n              console.log(this.scoreCardMappingArray[m].scoreCardDetails);\r\n          }\r\n        }\r\n      }\r\n      // console.log(dataOject,\"Dataobject\");\r\n    }\r\n\r\n    if (this.scoreCardMappingArray.length == this.scoreboardQuestionsArray.length) {\r\n      let disableDoneBtn: number = 0;\r\n      for (let m = 0; m < this.scoreCardMappingArray.length; m++) {\r\n        for (let i = 0; i < this.scoreCardMappingArray[m].scoreCardDetails.length; i++) {\r\n          let answerIs: any = this.scoreCardMappingArray[m].scoreCardDetails[i].scorecardAnswer;\r\n          if (answerIs == '' || answerIs == null || answerIs == undefined) {\r\n            disableDoneBtn++;\r\n          }\r\n        }\r\n      }\r\n      if (disableDoneBtn > 0) {\r\n        this.disableDoneBtn = true;\r\n      }\r\n      else if (this.anyErrorExist == false && disableDoneBtn == 0) {\r\n        this.disableDoneBtn = false;\r\n      }\r\n    }\r\n    console.log(\"Map Array: \", this.scoreCardMappingArray)\r\n    // for (let i = 0; i < this.scoreCardMappingArray.length; i++) {\r\n    //   console.log(i, this.scoreCardMappingArray[i]);\r\n    //   if (this.scoreCardMappingArray[i].scoreCardQuestionId == id) {\r\n    //     this.scoreCardMappingArray[i].scorecardAnswer = answer;\r\n    //     dataUpdated = true;\r\n    //   }\r\n    // }\r\n    // if (!dataUpdated) {\r\n    //   let dataOject: any = {};\r\n    //   dataOject.scoreCardQuestionId = id;\r\n    //   dataOject.scorecardAnswer = answer;\r\n    //   if (mapId != null) {\r\n    //     dataOject.scoreCardMappingId = mapId;\r\n\r\n    //   }\r\n    //   this.scoreCardMappingArray.push(dataOject);\r\n    //   // console.log(dataOject,\"Dataobject\");\r\n    // }\r\n    // if (this.scoreCardMappingArray.length == this.scoreboardQuestionsArray.length) {\r\n    //   let disableDoneBtn: number = 0;\r\n    //   for (let i = 0; i < this.scoreCardMappingArray.length; i++) {\r\n    //     let answerIs: any = this.scoreCardMappingArray[i].scorecardAnswer;\r\n    //     if (answerIs == '' || answerIs == null || answerIs == undefined) {\r\n    //       disableDoneBtn++;\r\n    //     }\r\n    //   }\r\n    //   if (disableDoneBtn > 0) {\r\n    //     this.disableDoneBtn = true;\r\n    //   }\r\n    //   else if (this.anyErrorExist == false && disableDoneBtn == 0) {\r\n    //     this.disableDoneBtn = false;\r\n    //   }\r\n    // }\r\n    // console.log(this.scoreCardMappingArray);\r\n  }\r\n\r\n  validateInputValue(inputValue: any, index: any, validationName: string) {\r\n    // console.log(inputValue, index);\r\n    let eleid: any = '#inputError' + index;\r\n    if (inputValue == '' || inputValue == null || inputValue == undefined) {\r\n      this.renderer.setStyle(this.elRef.nativeElement.querySelector(eleid), 'visibility', 'visible');\r\n    }\r\n    else {\r\n      if (!isNaN(inputValue) && validationName == \"Name\") {\r\n        this.renderer.setStyle(this.elRef.nativeElement.querySelector(eleid), 'visibility', 'visible');\r\n        this.anyErrorExist = true;\r\n      }\r\n      else {\r\n        this.renderer.setStyle(this.elRef.nativeElement.querySelector(eleid), 'visibility', 'hidden');\r\n        this.anyErrorExist = false;\r\n      }\r\n    }\r\n  }\r\n\r\n  validateSelectValue(selectValue: any, index: any) {\r\n    // console.log(selectValue, index);\r\n    let eleid: any = '#selectError' + index;\r\n    if (selectValue == '' || selectValue == null || selectValue == undefined) {\r\n      this.renderer.setStyle(this.elRef.nativeElement.querySelector(eleid), 'visibility', 'visible');\r\n    }\r\n    else {\r\n      this.renderer.setStyle(this.elRef.nativeElement.querySelector(eleid), 'visibility', 'hidden');\r\n    }\r\n  }\r\n\r\n  goBack() {\r\n    // this.router.navigate([`${this.previousUrl}`]);\r\n    this.router.navigate([`home/application/assessment/list/${this.accountId}`]);\r\n\r\n  }\r\n\r\n  getAllData(id) {\r\n    this.api.getAssessmentReportDetails(id).subscribe((response) => {\r\n      this.assessmentReportSummary = response;\r\n      console.log(this.assessmentReportSummary);\r\n    });\r\n  }   \r\n  _keyPress1(event:any){\r\n    const pattern = /[a-zA-Z]/;\r\n    let inputChar = String.fromCharCode(event.charCode);\r\n    if (!pattern.test(inputChar)) {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n  saveReports() {\r\n    let submitData: any = {};\r\n    console.log(submitData);\r\n    console.log(this.no_of_applicants);\r\n    let numberOfApplicant = this.no_of_applicants;\r\n    submitData.accountId = this.accountId;\r\n    submitData.accountType = \"savings\";\r\n    submitData.numberOfApplicant = numberOfApplicant;\r\n    // console.log(this.scoreCardId.value);\r\n    submitData.scoreCardId = this.scoreCardId.value;\r\n    // submitData.loggedInUser = this.loggedInUser.id;\r\n    submitData.loggedInUser = 123;//This value is temporary and logged In User id has to be passed.\r\n    // console.log(this.scoreCardMappingArray);\r\n    submitData.scoreCardMapping = this.scoreCardMappingArray;\r\n    console.log(submitData);\r\n\r\n    this.api.saveQualitativeScorecard(submitData).subscribe((resp) => {\r\n      this.snack.open('Qualitative Scoreboard Saved!', 'OK', {\r\n        duration: 4000,\r\n        verticalPosition: 'top',\r\n        horizontalPosition: 'right'\r\n      });\r\n      // console.log(resp);\r\n      this.isDataSaved = true;\r\n      this.ls.setItem('ASSESSMENT_QA_DONE', true);\r\n      // this.disableDoneBtn=false\r\n      this.accountService.refresh.next();\r\n      if(this.overDraftByStatus == true){\r\n      this.router.navigate([`/home/application/assessment/report/${this.accountId}`]);\r\n      }\r\n      else{\r\n        let fundBy = this.ls.getItem('fundByStatus');\r\n        if(fundBy.isActive == true){\r\n          this.router.navigate([`/home/application/funding/list/${this.accountId}`]);\r\n          }\r\n          else{\r\n            this.router.navigate([`/home/application/approval/list/${this.accountId}`]);\r\n          }\r\n\r\n      }\r\n    }, err => {\r\n      this.snack.open('Server Error!', 'OK', {\r\n        duration: 4000,\r\n        verticalPosition: 'top',\r\n        horizontalPosition: 'right'\r\n      });\r\n    });\r\n  }\r\n\r\n  done() {\r\n    this.ls.setItem('ASSESSMENT_QA_DONE', true);\r\n    this.accountService.refresh.next();\r\n    this.router.navigate([`/home/application/assessment/report/${this.accountId}`]);\r\n  }\r\n  noOfApplicant(event){\r\n    console.log(event);\r\n\r\n  }\r\n\r\n}","\r\n<div fxLayout=\"row wrap\" class=\"matcard-size\">\r\n  <div fxFlex=\"100\">\r\n    <div class=\"propic text-center\">\r\n      <img src=\"assets/images/svg/undraw_Scrum_board_re_wk7v.svg\" alt=\"\" class=\"w-90\" />\r\n    </div>\r\n    <div class=\"profile-title text-center mt-8\">\r\n      <div class=\"main-title1\">Qualitative Scoreboard</div>\r\n    </div>\r\n  </div>\r\n  <form>\r\n    <mat-accordion multi=\"true\">\r\n      <mat-card class=\"p-0\">\r\n    <mat-expansion-panel class=\"mb-8\"  *ngFor=\"let sA of scoreboardQuestionsArray ; let ix = index\" expanded=\"true\">\r\n    <div fxFlex=\"100\" class=\"mt-24\">\r\n      <fieldset>\r\n      <legend visible=\"true\">Qualitative Scoreboard</legend>\r\n      </fieldset>\r\n      <div class=\"mt-24\"></div>\r\n      <mat-card>\r\n        <mat-card-title></mat-card-title>\r\n        <mat-card-content>\r\n          <h4><b>Scorecard ID</b></h4>\r\n          <h4>\r\n            <input matInput name=\"ScoreCardId\" onlyNumber placeholder=\"Enter ScoreCardId\" [formControl]=\"scoreCardId\"\r\n             />\r\n             <mat-error\r\n              *ngIf=\"scoreCardId.touched && scoreCardId.value == 0\">\r\n               Please Enter valid Scorecard ID\r\n              </mat-error>\r\n          </h4>\r\n          <h3 class=\"mt-32\">About the Qualitative Scorecard ID</h3>\r\n          <p class=\"text-color\">\r\n            Lorem Ipsum is simply dummy text of the printing and typesetting\r\n            industry. Lorem Ipsum has been the industry's standard dummy text ever\r\n            since the 1500s, when an unknown printer took a galley of type and\r\n            scrambled it to make a type specimen book.\r\n          </p>\r\n          <div class=\"mb-8\"  *ngFor='let sA of scoreboardQuestionsArray ; let ix = index'>\r\n            <div\r\n               class=\"ml-8\">Number of Applicant \r\n                <div>{{ sA.applicantId }}</div>\r\n            </div>\r\n          </div>\r\n        </mat-card-content>\r\n      </mat-card>\r\n  \r\n      <div class=\"mt-32\"></div>\r\n      \r\n        \r\n          <!-- <mat-expansion-panel-header> -->\r\n          <!-- <mat-panel-title><mat-icon class=\"check-circle\">check_circle</mat-icon> <span class=\"ml-8\">Applicant {{ sA.applicantId }}</span></mat-panel-title> -->\r\n          <!-- </mat-expansion-panel-header> -->\r\n            <!-- <mat-card class=\"questions-tab1\"> -->\r\n              <mat-card-content class=\"full-width\" class=\"mat-card-content\">\r\n                    <div class=\"div1\">\r\n                      <fieldset>\r\n                      <legend visible=\"true\">Questions</legend>\r\n                      </fieldset>\r\n                    </div>\r\n                    <div fxLayout=\"column\" class=\"div1\">\r\n                    <div fxLayout=\"column\">\r\n                      <div fxLayout=\"row wrap\" class=\"full-width\" *ngFor=\"let sQ of sA.scoreCardDetails; let i=index;\">\r\n                        <div class=\"full-width\">\r\n                          <div class=\"qDiv\">\r\n                            <mat-hint>{{i + 1 }}.{{sQ.scorecardQuestion}}<span class=\"redC\" *ngIf=\"sQ.isRequired\"> *</span></mat-hint>\r\n                          </div>\r\n                          <div class=\"questions-tab\" *ngIf=\"sQ.attributeType == 'textbox'\">\r\n                            <mat-form-field class=\"questions-tab\" appearance=\"outline\">\r\n                              <input matInput\r\n                              [required]=\"sQ.isRequired\"\r\n                              [autocomplete]=\"off\"\r\n                              [maxlength]=\"sQ.validationName == 'Name'? 25 : 50\"\r\n                              name=\"{{ 'input' + i }}\"\r\n                              id=\"{{ 'input' + i }}\"\r\n                            \r\n                              [value]=\"scoreCardMappingArray[ix].scoreCardDetails[i].scorecardAnswer == undefined? sbSelectAnswer : scoreCardMappingArray[ix].scoreCardDetails[i].scorecardAnswer\"\r\n                              (keyup)=\"validateInputValue($event.target.value,i,sQ.validationName);insertData(sQ.scoreCardQuestionId,$event.target.value,sQ.attributeType,sQ.scoreCardMappingId,i,sA.applicantId)\"\r\n                              (click)=\"validateInputValue($event.target.value,i,sQ.validationName)\"\r\n                              >\r\n                            </mat-form-field>\r\n                            <!-- [value]=\"sQ.scorecardAnswer\" -->\r\n                            <mat-error [style.visibility]=\"'hidden'\" id=\"{{ 'inputError' + i }}\">Enter {{sQ.validationName}}</mat-error>\r\n                          </div>\r\n                          <div class=\"questions-tab\" *ngIf=\"sQ.attributeType == 'drop-down' || sQ.attributeType == 'checkbox'\">\r\n                            <mat-form-field class=\"questions-tab\" appearance=\"outline\">\r\n                              <mat-select\r\n                              [required]=\"sQ.isRequired\"\r\n                              [name]=\"sQ.attributeType == 'checkbox'?  'multiSelect' + i  :  'select' + i \"\r\n                              [id]=\"sQ.attributeType == 'checkbox'?  'multiSelect' + i  :  'select' + i \"\r\n                              [value]=\"sQ.attributeType == 'checkbox'? sbMultiSelectAnswer : sbMultiSelectAnswer[i]\"\r\n                              (click)=\"validateSelectValue($event.target.value,i)\"\r\n                              (selectionChange)=\"validateSelectValue($event.value,i);insertData(sQ.scoreCardQuestionId,$event.value,sQ.attributeType,sQ.scoreCardMappingId,i,sA.applicantId)\"  \r\n                              [multiple]=\"sQ.attributeType == 'checkbox'\"\r\n                              >\r\n                                <mat-option *ngFor=\"let sA of sQ.scorecardAnswers\" [value]=\"sA\">\r\n                                  {{sA}}\r\n                                </mat-option>\r\n                              </mat-select>\r\n                            </mat-form-field>\r\n                            <mat-error [style.visibility]=\"'hidden'\" id=\"{{ 'selectError' + i }}\">Please select {{sQ.validationName}}</mat-error>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                     \r\n                      <!-- <div class=\"flex-grow-1\" fxFlex=\"50%\">\r\n                        <div class=\"qDiv\">\r\n                        <mat-hint>Score<span class=\"redC\" ></span></mat-hint>\r\n                       </div>\r\n                        <div class=\"full-width\">\r\n                        <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                          <input matInput name=\"ScoreId\" placeholder=\"Enter the Score\"\r\n                          />\r\n                           <input matInput name=\"ScoreId\" onlyNumber placeholder=\"Enter the Score\" [formControl]=\"scoreId\"\r\n                          /> \r\n                          </mat-form-field>\r\n                        </div>\r\n                      </div> -->\r\n                    </div>\r\n                  </div>\r\n              </mat-card-content>\r\n            <!-- </mat-card> -->\r\n          \r\n        \r\n    </div>\r\n  </mat-expansion-panel>\r\n</mat-card>\r\n  </mat-accordion>\r\n  </form>\r\n\r\n  <div fxFlex=\"100\" class=\"mt-16\">\r\n    <button mat-button rounded class=\"Backbtn\" (click)=\"goBack()\">Back</button>\r\n    <span fxFlex></span>\r\n    <button mat-raised-button color=\"primary\" class=\"Nextbtn\" [disabled]=\"disableDoneBtn || !numberOfApplicant.valid\" (click)=\"saveReports()\" type=\"button\">Next</button>\r\n  </div>\r\n</div>\r\n","import { ChangeDetectorRef, Component, OnInit } from '@angular/core';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { AccountService } from '../account.service';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { Router } from '@angular/router';\r\nimport { rumangoAnimations } from 'app/shared/animations/rumango-animations';\r\nimport { FinancialDetailsSummaryComponent } from './financial-details-summary/financial-details-summary.component';\r\nimport { SecuredDraftSummaryComponent } from './secured-draft-summary/secured-draft-summary.component';\r\nimport { UnsecuredDraftSummaryComponent } from './unsecured-draft-summary/unsecured-draft-summary.component';\r\n\r\n@Component({\r\n  selector: 'app-limit-entry-stage',\r\n  templateUrl: './limit-entry-stage.component.html',\r\n  styleUrls: ['./limit-entry-stage.component.scss'],\r\n  animations:rumangoAnimations\r\n})\r\nexport class LimitEntryStageComponent implements OnInit {\r\n  overDraftByStatus:boolean;\r\n\r\n  informations = [\r\n    {\r\n      'id':1,\r\n      'title': '1. Secured Overdraft Details',\r\n      'content':\"All the collateral details are captured.\",\r\n      'percentage':70,\r\n      'status':'Pending',\r\n      'state': 'application/limit-entry-stage/secured-draft',\r\n      'avatar':\"assets/images/svg/undraw_secure_files_re_6vdh.svg\",\r\n    \r\n\r\n\r\n    },{\r\n      'id':2,\r\n      'title': '2. Unsecured Overdraft Details',\r\n      'content':\"Unsecured Overdraft Limit Information's are collected.\",\r\n      'percentage':100,\r\n      'status':'Completed',\r\n      'state': 'application/limit-entry-stage/unsecured-draft/summary',\r\n      'avatar':\"assets/images/svg/undraw_Reviewed_docs_re_9lmr.svg\",\r\n      \r\n    },{\r\n      'id':3,\r\n      'title': '3. Financial Details',\r\n      'content':\"Financial Details such as Monthly Income, Monthly Expenses, Liabilities are captured. .\",\r\n      'percentage':100,\r\n      'status':'Completed',\r\n      'state': 'application/limit-entry-stage/financial-details/summary',\r\n      'avatar':\"assets/images/svg/undraw_Finance_re_gnv2.svg\",\r\n      \r\n    },\r\n  ];\r\n\r\n  isSecuredScreen:boolean = false;\r\n  isUnSecuredScreen:boolean = false;\r\n  isFinancialScreen:boolean = false;\r\n  accountId:any;\r\n  isLimitEntryStageDone:boolean = false;\r\n  isAccountNomineesScreen: boolean = false;\r\n  accountInfo: any;\r\n\r\n  constructor(private router:Router,private ls: LocalStoreService,private cdr:ChangeDetectorRef ,private accountService:AccountService,\r\n    public dialog: MatDialog) { }\r\n\r\n  ngOnInit(){\r\n\r\n    this.accountId = this.ls.getItem('accountId');\r\n    this.accountInfo = this.ls.getItem('EDIT-CREATEACCCIF');\r\n    console.log(this.accountInfo);\r\n    let overdraftStatus = this.ls.getItem('overDraftByStatus') || null;\r\n    console.log(\"fetch\",overdraftStatus);\r\n    this.overDraftByStatus = overdraftStatus != null ? overdraftStatus.isActive : false; \r\n    console.log(this.overDraftByStatus);\r\n    this.isLimitEntryStageDone = this.ls.getItem('limitEntryStage');\r\n    this.isAccountNomineesScreen = this.ls.getItem('ACC_NOMINEE_DONE');\r\n    this.isSecuredScreen = this.ls.getItem('LIMIT_SECURED_DONE');\r\n    this.isUnSecuredScreen = this.ls.getItem('LIMIT_UNSECURED_DONE');\r\n    this.isFinancialScreen = this.ls.getItem('LIMIT_FIN_DONE');\r\n  \r\n    if(this.accountInfo){\r\n      // this.isAppEntryStageDone = this.ls.getItem('appEntryStage');\r\n      // this.ls.setItem('LIMIT_SECURED_DONE',true);\r\n      // this.ls.setItem('LIMIT_UNSECURED_DONE', true);\r\n      // this.ls.setItem('LIMIT_FIN_DONE', true);\r\n      // this.ls.setItem('appEntryStage', true);\r\n      // this.ls.setItem('ACC_NOMINEE_DONE', true);\r\n    }\r\n\r\n\r\n    this.accountService.refresh.subscribe((res: any) => {\r\n      this.accountId = this.ls.getItem('accountId');\r\n      // Parent 1\r\n      let overdraftStatus = this.ls.getItem('overDraftByStatus') || null;\r\n      this.overDraftByStatus = overdraftStatus != null ? overdraftStatus.isActive : false; \r\n      this.isLimitEntryStageDone = this.ls.getItem('limitEntryStage');\r\n      // Parent 1 childs nav\r\n      this.isAccountNomineesScreen = this.ls.getItem('ACC_NOMINEE_DONE');\r\n      this.isSecuredScreen = this.ls.getItem('LIMIT_SECURED_DONE');\r\n      this.isUnSecuredScreen = this.ls.getItem('LIMIT_UNSECURED_DONE');\r\n      this.isFinancialScreen = this.ls.getItem('LIMIT_FIN_DONE');\r\n    \r\n      this.cdr.markForCheck();\r\n    });\r\n    if(this.accountInfo){\r\n      this.accountId=this.accountInfo.businessProductAccount.accountId;\r\n    }\r\n  }\r\n\r\n  goToDetail(item){\r\n    console.log(item);\r\n    this.router.navigate([`/home/${item.state}`]);\r\n  }\r\n  \r\n  openDialog(): void {\r\n    let dialogRef = this.dialog.open(SecuredDraftSummaryComponent, {\r\n      width: '800px',\r\n      height:'600px',\r\n      // data: { name: this.name, animal: this.animal }\r\n    });\r\n  }\r\n\r\n  openDialog1(): void {\r\n    let dialogRef = this.dialog.open(UnsecuredDraftSummaryComponent, {\r\n      width: '800px',\r\n      height:'300px'\r\n      // data: { name: this.name, animal: this.animal }\r\n    });\r\n  }\r\n  openDialog2(): void {\r\n    let dialogRef = this.dialog.open(FinancialDetailsSummaryComponent, {\r\n      width: '900px',\r\n      height:'550px'\r\n      // data: { name: this.name, animal: this.animal }\r\n    });\r\n  }\r\n  viewSummary(){\r\n    this.router.navigate([`/home/application/limit-entry-stage/view-summary/`, this.accountId]);\r\n  }\r\n}\r\n","<div fxLayout=\"row wrap\" class=\"matcard-size\">\r\n    <div fxFlex=\"100\">\r\n      <!-- <div class=\"propic text-center\">\r\n          <img src=\"assets/images/face-7.png\" alt=\"\" class=\"w-80\" />\r\n        </div> -->\r\n      <div class=\"profile-pic text-center\">\r\n        <img src=\"assets/images/face-7.png\" class=\"main-profile-img\" />\r\n        <i class=\"fa fa-edit upload-icon\"></i>\r\n      </div>\r\n      <div class=\"profile-title text-center mt-8\">\r\n        <div class=\"main-title1\"><b>Create New Customer</b></div>\r\n        <div class=\"text-muted1\">\r\n          Create New Customer Account with bank XYZ bank in a better way.\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div fxFlex=\"100\" *ngIf=\"isLimitEntryStageDone\" class=\"mt-8\">\r\n      <!-- <div fxFlex=\"100\" class=\"mt-8\"> -->\r\n      <mat-card class=\"border-size1\"\r\n      [@animate]=\"{ value: '*', params: { y: '50px', delay: '300ms' } }\">\r\n        <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n          <div fxFlex=\"5\"><mat-icon class=\"text-green\">check_circle</mat-icon></div>\r\n          <div fxFlex=\"30\">\r\n            <h3>Limit Entry Stage Completed</h3>\r\n          </div>\r\n          <span fxFlex></span>\r\n          <button mat-button  class=\"btn-color\" (click)=\"viewSummary()\">\r\n            View Summary\r\n            <mat-icon>chevron_right</mat-icon></button>\r\n        </div>\r\n      </mat-card>\r\n    </div>\r\n  </div>\r\n  \r\n  <div fxLayout=\"row wrap\" class=\"mt-12\">\r\n    <div fxFlex=\"50\"  fxFlex.gt-sm=\"50\" fxFlex.sm=\"50\">\r\n      <!-- [ngClass]=\"{'not-active':item.status == ''}\" -->\r\n      <!-- Card 1 start-->\r\n      <mat-card [ngClass]=\"{'border-size':overDraftByStatus || !overDraftByStatus}\" >\r\n      <mat-card-header>\r\n          <mat-card-title>1. Secured Overdraft Details</mat-card-title>\r\n          <!-- <mat-card-subtitle> {{ item?.content }}</mat-card-subtitle> -->\r\n        </mat-card-header>\r\n        <mat-card-content>\r\n          <div fxLayout=\"row\" fxLayoutGap=\"10px\" fxLayoutAlign=\"space-between start\" >\r\n              <div fxFlex=\"50%\" class=\"notActive\">\r\n             <p class=\"text-align\"> All the collateral details are captured.</p>\r\n              </div>\r\n              <div fxFlex=\"50%\">\r\n                 \r\n            <img [src]=\"'assets/images/svg/undraw_secure_files_re_6vdh.svg'\" class=\"card-img\">\r\n                </div>\r\n            </div>\r\n          <!--begin::Progress-->\r\n          <div class=\"mb-1\" *ngIf=\"isSecuredScreen\">\r\n            <mat-progress-bar\r\n              [color]=\"'primary'\"\r\n              mode=\"determinate\"\r\n              [value]=\"100\"\r\n              class=\"rounded\"\r\n              style=\"height: 6px\"\r\n            >\r\n            </mat-progress-bar>\r\n            <p class=\"m-0 text-right\">Completed</p>\r\n            <!-- <span class=\"text-muted\">| {{ item.percentage }}%</span> -->\r\n          </div>\r\n          <!--end::Progress-->\r\n        </mat-card-content>\r\n        <!--begin:: Card body-->\r\n          <mat-divider></mat-divider>\r\n          <mat-card-actions>\r\n            <ng-container *ngIf=\"isAccountNomineesScreen && isSecuredScreen; else showSecured\">\r\n              <button\r\n              mat-button\r\n              (click)=\"openDialog()\"\r\n              [disabled]=\"accountId == null\"\r\n              class=\"btn-color\"\r\n\r\n            >\r\n              View Details <mat-icon>chevron_right</mat-icon>\r\n            </button>\r\n            </ng-container>\r\n            <ng-template #showSecured>\r\n              <button\r\n              mat-button\r\n              [routerLink]=\"['/home/application/limit-entry-stage/secured-draft/', accountId]\"\r\n              [disabled]=\"!isAccountNomineesScreen\"\r\n              color=\"primary\"\r\n\r\n            >\r\n              Add Details <mat-icon>chevron_right</mat-icon>\r\n            </button>\r\n            </ng-template>\r\n          </mat-card-actions>\r\n      </mat-card>\r\n      <!-- Card 1 end -->\r\n      </div>\r\n      <div fxFlex=\"50\"  fxFlex.gt-sm=\"50\" fxFlex.sm=\"50\">\r\n      <!-- card 2 start-->\r\n      <mat-card [ngClass]=\"{'border-size':overDraftByStatus || !overDraftByStatus}\">\r\n        <mat-card-header>\r\n            <mat-card-title>2. Unsecured Overdraft Details</mat-card-title>\r\n            <!-- <mat-card-subtitle> {{ item?.content }}</mat-card-subtitle> -->\r\n          </mat-card-header>\r\n          <mat-card-content>\r\n            <div fxLayout=\"row\" fxLayoutGap=\"10px\" fxLayoutAlign=\"space-between start\" >\r\n                <div fxFlex=\"50%\" class=\"notActive\">\r\n               <p class=\"text-align\"> Unsecured Overdraft Limit Information's are collected.</p>\r\n                </div>\r\n                <div fxFlex=\"50%\">\r\n                   \r\n              <img [src]=\"'assets/images/svg/undraw_Reviewed_docs_re_9lmr.svg'\" class=\"card-img\">\r\n                  </div>\r\n              </div>\r\n            <!--begin::Progress-->\r\n            <div class=\"mb-1\" *ngIf=\"isUnSecuredScreen\">\r\n              <mat-progress-bar\r\n                [color]=\"'primary'\"\r\n                mode=\"determinate\"\r\n                [value]=\"100\"\r\n                class=\"rounded\"\r\n                style=\"height: 6px\"\r\n              >\r\n              </mat-progress-bar>\r\n              <p class=\"m-0 text-right\">Completed</p>\r\n              <!-- <span class=\"text-muted\">| {{ item.percentage }}%</span> -->\r\n            </div>\r\n            <!--end::Progress-->\r\n          </mat-card-content>\r\n          <!--begin:: Card body-->\r\n            <mat-divider></mat-divider>\r\n            <mat-card-actions>\r\n              <ng-container *ngIf=\"isUnSecuredScreen; else showUnSecured\">\r\n                <button\r\n                mat-button\r\n                (click)=\"openDialog1()\"\r\n                [disabled]=\"accountId == null\"\r\n\r\n                class=\"btn-color\"\r\n\r\n              >\r\n                View Details <mat-icon>chevron_right</mat-icon>\r\n              </button>\r\n              </ng-container>\r\n              <ng-template #showUnSecured>\r\n                <button\r\n                mat-button\r\n                [routerLink]=\"['/home/application/limit-entry-stage/unsecured-draft/', accountId]\"\r\n                [disabled]=\"(isSecuredScreen || isFinancialScreen ) &&  isUnSecuredScreen\"\r\n\r\n                 color=\"primary\"\r\n\r\n              >\r\n                Add Details <mat-icon>chevron_right</mat-icon>\r\n              </button>\r\n              </ng-template>\r\n            </mat-card-actions>\r\n      </mat-card>\r\n      <!-- Card 2 end-->\r\n      </div>\r\n      <!-- card 3 start -->\r\n      <div fxFlex=\"50\"  fxFlex.gt-sm=\"50\" fxFlex.sm=\"50\">\r\n        <mat-card [ngClass]=\"{'border-size':isFinancialScreen || !isFinancialScreen && (isUnSecuredScreen|| isSecuredScreen)}\">\r\n          <mat-card-header>\r\n              <mat-card-title>3. Financial Details</mat-card-title>\r\n              <!-- <mat-card-subtitle> {{ item?.content }}</mat-card-subtitle> -->\r\n            </mat-card-header>\r\n            <mat-card-content>\r\n              <div fxLayout=\"row\" fxLayoutGap=\"10px\" fxLayoutAlign=\"space-between start\" >\r\n                  <div fxFlex=\"50%\" class=\"notActive\">\r\n                 <p class=\"text-align\"> Financial Details such as Monthly Income, Monthly Expenses, Liabilities are captured. </p>\r\n                  </div>\r\n                  <div fxFlex=\"50%\">\r\n                     \r\n                <img [src]=\"'assets/images/svg/undraw_Finance_re_gnv2.svg'\" class=\"card-img\">\r\n                    </div>\r\n                </div>\r\n              <!--begin::Progress-->\r\n              <div class=\"mb-1\" *ngIf=\"isFinancialScreen\">\r\n                <mat-progress-bar\r\n                  [color]=\"'primary'\"\r\n                  mode=\"determinate\"\r\n                  [value]=\"100\"\r\n                  class=\"rounded\"\r\n                  style=\"height: 6px\"\r\n                >\r\n                </mat-progress-bar>\r\n                <p class=\"m-0 text-right\">Completed</p>\r\n                <!-- <span class=\"text-muted\">| {{ item.percentage }}%</span> -->\r\n              </div>\r\n              <!--end::Progress-->\r\n            </mat-card-content>\r\n            <!--begin:: Card body-->\r\n              <mat-divider></mat-divider>\r\n              <mat-card-actions>\r\n                <ng-container *ngIf=\"(isUnSecuredScreen|| isSecuredScreen) && isFinancialScreen ; else showFinancial\">\r\n                  <button\r\n                  mat-button\r\n                  (click)=\"openDialog2()\"\r\n                  [disabled]=\"accountId == null\"\r\n\r\n                  class=\"btn-color\"\r\n\r\n                >\r\n                  View Details <mat-icon>chevron_right</mat-icon>\r\n                </button>\r\n                </ng-container>\r\n                <ng-template #showFinancial>\r\n                 <button\r\n                  mat-button\r\n                  [routerLink]=\"['/home/application/limit-entry-stage/financial-details/', accountId]\"\r\n                  \r\n                  [disabled]=\"!(isSecuredScreen || isUnSecuredScreen )\"\r\n                   color=\"primary\"\r\n\r\n                  >\r\n                  Add Details <mat-icon>chevron_right</mat-icon>\r\n                </button>\r\n                </ng-template>\r\n              </mat-card-actions>\r\n        </mat-card>\r\n      </div>\r\n      <!-- Card 3 end -->\r\n     \r\n     \r\n  </div>","import { Routes } from '@angular/router';\r\nimport { ApplicationAssessmentComponent } from './application-assessment/application-assessment.component';\r\nimport { QualitativeComponent } from './application-assessment/qualitative/qualitative.component';\r\nimport { ReportComponent } from './application-assessment/report/report.component';\r\nimport { ApplicationEnrichmentComponent } from './application-enrichment/application-enrichment.component';\r\nimport { ChargesComponent } from './application-enrichment/charges/charges.component';\r\nimport { InterestComponent } from './application-enrichment/interest/interest.component';\r\nimport { AccountOpenComponent } from './application-entry-stage/account-open/account-open.component';\r\nimport { AccountServiceComponent } from './application-entry-stage/account-service/account-service.component';\r\nimport { AccountComponent } from './application-entry-stage/account/account.component';\r\nimport { ApplicationEntryStageComponent } from './application-entry-stage/application-entry-stage.component';\r\nimport { ApplicationEntrySummaryComponent } from './application-entry-stage/application-entry-summary/application-entry-summary.component';\r\nimport { MandateComponent } from './application-entry-stage/mandate/mandate.component';\r\n\r\nimport { ApprovalDetailsComponent } from './approval-stage/approval-details/approval-details.component';\r\nimport { ApprovalStageComponent } from './approval-stage/approval-stage.component';\r\nimport { DigitalSigningComponent } from './digital-signing/digital-signing.component';\r\nimport { ListComponent } from './digital-signing/list/list.component';\r\nimport { FundingStageComponent } from './funding-stage/funding-stage.component';\r\nimport { InitialFundComponent } from './funding-stage/initial-fund/initial-fund.component';\r\nimport { HomeComponent } from './home.component';\r\nimport { InterestChargeSummaryComponent } from './interest-charge-summary/interest-charge-summary.component';\r\n\r\nimport { FinancialDetailsComponent } from './limit-entry-stage/financial-details/financial-details.component';\r\nimport { LimitEntryStageComponent } from './limit-entry-stage/limit-entry-stage.component';\r\n\r\nimport { SecuredDraftComponent } from './limit-entry-stage/secured-draft/secured-draft.component';\r\nimport { UnsecuredDraftSummaryComponent } from './limit-entry-stage/unsecured-draft-summary/unsecured-draft-summary.component';\r\nimport { UnsecuredDraftComponent } from './limit-entry-stage/unsecured-draft/unsecured-draft.component';\r\n\r\n\r\n\r\nimport { ViewSummaryComponent } from './limit-entry-stage/view-summary/view-summary.component';\r\nimport { ApplicationAssessmentSummaryComponent } from './application-assessment/application-assessment-summary/application-assessment-summary.component';\r\nimport { NomineeDetailsComponent } from './application-entry-stage/nominees/nominee-details/nominee-details.component';\r\nimport { IntrestEditComponent } from './intrest-edit/intrest-edit.component';\r\nimport { ChargeEditComponent } from './charge-edit/charge-edit.component';\r\nimport { EditFinancialDetailsComponent } from './limit-entry-stage/edit-financial-details/edit-financial-details.component';\r\nimport { SummaryApprovalComponent } from './approval-stage/summary-approval/summary-approval.component';\r\nimport { FundingStageSummaryComponent } from './funding-stage/funding-stage-summary/funding-stage-summary.component';\r\n\r\n\r\nexport const HomeRoutes: Routes = [\r\n  {\r\n    path: '',\r\n    component: HomeComponent,\r\n    children: [\r\n      {\r\n        path: '',\r\n        redirectTo: 'application/list',\r\n        pathMatch: 'full'\r\n      },{\r\n        path: 'application/list',\r\n        component: ApplicationEntryStageComponent,\r\n        data: { title: 'Home', breadcrumb: 'Create Customer Account' }\r\n      },{\r\n        path: 'application/create-customer-account',\r\n        component: AccountComponent,\r\n        data: { title: 'Home', breadcrumb: 'Account Details' }\r\n      },{\r\n        path: 'application/customer-information/:id',\r\n        component: AccountOpenComponent,\r\n        data: { title: 'Home', breadcrumb: 'Customer Information Details' }\r\n      },{\r\n        path: 'application/customer-information/:id/:applicantId',\r\n        component: AccountOpenComponent,\r\n        data: { title: 'Home', breadcrumb: 'Customer Information Details' }\r\n      },{\r\n        path: 'application/mandate/:id',\r\n        component: MandateComponent,\r\n        data: { title: 'Home', breadcrumb: 'Create Customer Mandate' }\r\n      },{\r\n        path: 'application/account-service/:id',\r\n        component: AccountServiceComponent,\r\n        data: { title: 'Home', breadcrumb: 'Create Customer Mandate' }\r\n      },{\r\n        path: 'application/nominee/add/:id',\r\n        component: NomineeDetailsComponent,\r\n        data: { title: 'Home', breadcrumb: 'Create Customer Mandate' }\r\n      },{\r\n        path: 'application/application-entry-summary/:id',\r\n        component: ApplicationEntrySummaryComponent,\r\n        data: { title: 'Home', breadcrumb: 'Create Customer Account' }\r\n      },{\r\n        path: 'application/limit-entry-stage/list/:id',\r\n        component: LimitEntryStageComponent,\r\n        data: { title: 'Home', breadcrumb: 'Create Customer Account' }\r\n      },{\r\n        path: 'application/limit-entry-stage/secured-draft/:id',\r\n        component: SecuredDraftComponent,\r\n        data: { title: 'Home', breadcrumb: 'Create Customer Account' }\r\n      },{\r\n        path: 'application/limit-entry-stage/unsecured-draft/:id',\r\n        component: UnsecuredDraftComponent,\r\n        data: { title: 'Home', breadcrumb: 'Create Customer Account' }\r\n      },{\r\n        path: 'application/limit-entry-stage/financial-details/:id',\r\n        component: FinancialDetailsComponent,\r\n        data: { title: 'Home', breadcrumb: 'Create Customer Account' }\r\n      },{\r\n        path: 'application/limit-entry-stage/unsecured-draft-summary/:id',\r\n        component: UnsecuredDraftSummaryComponent,\r\n        data: { title: 'Home', breadcrumb: 'Create Customer Account' }\r\n      },{\r\n        path: 'application/limit-entry-stage/view-summary/:id',\r\n        component: ViewSummaryComponent,\r\n        data: { title: 'Home', breadcrumb: 'Create Customer Account' }\r\n      },{\r\n        path: 'application/enrichment/list/:id',\r\n        component: ApplicationEnrichmentComponent,\r\n        data: { title: 'Home', breadcrumb: 'Create Customer Account' }\r\n      },{\r\n        path: 'application/enrichment/interest/:id',\r\n        component: InterestComponent,\r\n        data: { title: 'Home', breadcrumb: 'Create Customer Account' }\r\n      },{\r\n        path: 'application/enrichment/charge/:id',\r\n        component: ChargesComponent,\r\n        data: { title: 'Home', breadcrumb: 'Create Customer Account' }\r\n      },{\r\n        path: 'application/assessment/list/:id',\r\n        component: ApplicationAssessmentComponent,\r\n        data: { title: 'Home', breadcrumb: 'Create Customer Account' }\r\n      },{\r\n        path: 'application/assessment/summary/:id',\r\n        component: ApplicationAssessmentSummaryComponent,\r\n        data: { title: 'Home', breadcrumb: 'Create Customer Account' }\r\n      },{\r\n        path: 'application/assessment/qualitative/:id',\r\n        component: QualitativeComponent,\r\n        data: { title: 'Home', breadcrumb: 'Create Customer Account' }\r\n      },{\r\n        path: 'application/assessment/report/:id',\r\n        component: ReportComponent,\r\n        data: { title: 'Home', breadcrumb: 'Create Customer Account' }\r\n      },{\r\n        path: 'application/approval/list/:id',\r\n        component: ApprovalStageComponent,\r\n        data: { title: 'Home', breadcrumb: 'Create Customer Account' }\r\n      },{\r\n        path: 'application/approval/details/:id',\r\n        component: ApprovalDetailsComponent,\r\n        data: { title: 'Home', breadcrumb: 'Create Customer Account' }\r\n      },{\r\n        path: 'application/approvalStage/:id',\r\n        component: ApprovalStageComponent,\r\n        data: { title: 'Home', breadcrumb: 'Create Customer Account' }\r\n      },{\r\n        path: 'application/digital-sign/home/:id',\r\n        component: DigitalSigningComponent,\r\n        data: { title: 'Home', breadcrumb: 'Create Customer Account' }\r\n      },{\r\n        path: 'application/digital-sign/options/:id',\r\n        component: ListComponent,\r\n        data: { title: 'Home', breadcrumb: 'Create Customer Account' }\r\n      },{\r\n        path: 'application/funding/list/:id',\r\n        component: FundingStageComponent,\r\n        data: { title: 'Home', breadcrumb: 'Create Customer Account' }\r\n      },{\r\n        path: 'application/funding/details/:id',\r\n        component: InitialFundComponent,\r\n        data: { title: 'Home', breadcrumb: 'Create Customer Account' }\r\n      },{\r\n        path: 'application/funding/summary/:id',\r\n        component: FundingStageSummaryComponent,\r\n        data: { title: 'Home', breadcrumb: 'Create Customer Account' }\r\n      },{\r\n        path: 'application/enrichment/fullSummary/:id',\r\n        component: InterestChargeSummaryComponent,\r\n        data: { title: 'Home', breadcrumb: 'Create Customer Account' }\r\n      },{\r\n        path: 'application/limit-entry-stage/unsecured-draft/summary/:id',\r\n        component: UnsecuredDraftSummaryComponent,\r\n        data: { title: 'Home', breadcrumb: 'Create Customer Account' }\r\n       },\r\n      //{\r\n      //   path: 'application/enrichment/interestEdit/:id',\r\n      //   component: IntrestEditComponent,\r\n      //   data: { title: 'Home', breadcrumb: 'Edit Intrest Detail' }\r\n      // },\r\n      // {\r\n      //   path: 'application/enrichment/chargeEdit/:id',\r\n      //   component: ChargeEditComponent,\r\n      //   data: { title: 'Home', breadcrumb: 'Edit Intrest Detail' }\r\n      // },\r\n      {\r\n        path: 'application/limit-entry-stage/financial-details/edit/:id',\r\n        component: EditFinancialDetailsComponent,\r\n        data: { title: 'Home', breadcrumb: 'Edit Intrest Detail' }\r\n      },{\r\n        path: 'application/summary/approval/:id',\r\n        component: SummaryApprovalComponent,\r\n        data: { title: 'Home', breadcrumb: 'Edit Intrest Detail' }\r\n      },\r\n    ]\r\n  }\r\n];","import { ChangeDetectorRef, Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators, FormArray } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { AppConfirmService } from 'app/shared/services/app-confirm/app-confirm.service';\r\nimport { ApplicationEntryStageService } from 'app/shared/services/application-entry-stage.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { AccountService } from '../../account.service';\r\nimport { DataService } from 'app/shared/services/data.service';\r\nimport { UrlService } from '../../url.service';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\n\r\n@Component({\r\n  selector: 'app-mandate',\r\n  templateUrl: './mandate.component.html',\r\n  styleUrls: ['./mandate.component.scss'],\r\n})\r\nexport class MandateComponent implements OnInit {\r\n  panelOpenState = false;\r\n  submitted = false;\r\n  formData = {};\r\n  console = console;\r\n  mandatesForms: FormGroup;\r\n  accountId: any;\r\n  navSubscription: any;\r\n  routeparams: any;\r\n  showEditOption: boolean = false;\r\n  previousUrl: string = '';\r\n  mandateOnLoad: any;\r\n  arrayModeOfOperation: any;\r\n  no_of_applicants: any;\r\n  flag: boolean;\r\n  flag1: boolean;\r\n  no_of_sig: any;\r\n  count: any = 0;\r\n\r\n  NoOfSignatories: any[] = [{ count: 1 }, { count: 2 }];\r\n  accountInfo: any;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private urlService: UrlService,\r\n    private dataService: DataService,\r\n    private apiService: ApplicationEntryStageService,\r\n    private accountService: AccountService,\r\n    private ls: LocalStoreService,\r\n    private formBuilder: FormBuilder,\r\n    private confirmService: AppConfirmService,\r\n    private cdr: ChangeDetectorRef,\r\n    private snack: MatSnackBar,\r\n    private api: ApiService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.accountId = this.ls.getItem('accountId');    \r\n    this.no_of_applicants = this.ls.getItem('NO_OF_APPLICANTS');\r\n    this.accountInfo = this.ls.getItem('EDIT-CREATEACCCIF');\r\n    console.log(this.accountInfo);\r\n    if (this.accountInfo) {\r\n      this.accountId = this.accountInfo.businessProductAccount.accountId;\r\n    }\r\n    console.log('no_of_applicants=', this.no_of_applicants);\r\n    let isMandateScreen: boolean = JSON.parse(\r\n      this.ls.getItem('ACC_MANDATE_DONE')\r\n    );\r\n    this.getModeOfOperation('opr_mode');\r\n    this.urlService.previousUrl$.subscribe((previousUrl: string) => {\r\n      this.previousUrl = previousUrl;\r\n    });\r\n\r\n    if (this.accountId != null && isMandateScreen) {\r\n      this.showEditOption = true;\r\n      this.gettingMandateDetail();\r\n    } else {\r\n      this.showEditOption = false;\r\n      this.buildMandateForm();\r\n    }\r\n  }\r\n\r\n  gettingMandateDetail() {\r\n    this.api.gettingMandateDetails(this.accountId).subscribe((resp: any) => {\r\n      this.mandateOnLoad = resp;\r\n      console.log('All Transaction Details', resp);\r\n      this.buildMandateForm(resp, true);\r\n    });\r\n  }\r\n\r\n  buildMandateForm(data?, isResponse?: boolean) {\r\n    this.mandatesForms = this.formBuilder.group({\r\n      mandates: this.formBuilder.array([this.addMFormGroup()]),\r\n    });\r\n    console.log(this.mandatesForms);\r\n    if (isResponse) {\r\n      this.addMandateToFormGroup(data);\r\n      this.m.patchValue(data);\r\n    }\r\n  }\r\n\r\n  _keyPress(event: any) {\r\n    const pattern = /[0-9]/;\r\n    let inputChar = String.fromCharCode(event.charCode);\r\n    if (!pattern.test(inputChar)) {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n  _keyPress2(event: any) {\r\n    //this.console.log(\"mandatesForms.get('totalSignaturesRequired')=\", this.mandatesForms.get('totalSignaturesRequired'));\r\n    console.log(\r\n      'event.key=',\r\n      event.key,\r\n      'no_of_applicants=',\r\n      this.no_of_applicants\r\n    );\r\n    this.no_of_sig = event.key;\r\n    if (isNaN(event.key)) {\r\n      console.log('input is invalid');\r\n    }else if (event.key > this.no_of_applicants) {\r\n      console.log('no of signatories is more than no of applicants');\r\n      this.flag = true;\r\n    } else if (event.key == 0) {\r\n      this.flag1 = true;\r\n    } else {\r\n      this.flag = false;\r\n      this.flag1 = false;\r\n    }\r\n    this.console.log(this.flag);\r\n    const pattern = /[0-9]/;\r\n    let inputChar = String.fromCharCode(event.charCode);\r\n    if (!pattern.test(inputChar)) {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n  changeNoOfSignatories(event: any) {\r\n    //this.console.log(\"mandatesForms.get('totalSignaturesRequired')=\", this.mandatesForms.get('totalSignaturesRequired'));\r\n    console.log(\r\n      'event.key=',\r\n      event,\r\n      'no_of_applicants=',\r\n      this.no_of_applicants\r\n    );\r\n    this.no_of_sig = event.key;\r\n    if (event.value > this.no_of_applicants) {\r\n      console.log('no of signatories is more than no of applicants');\r\n      this.flag = true;\r\n    } else {\r\n      this.flag = false;\r\n    }\r\n    // this.console.log(this.flag);\r\n    // const pattern = /[0-9]/;\r\n    // let inputChar = String.fromCharCode(event.charCode);\r\n    // if (!pattern.test(inputChar)) {\r\n    //   event.preventDefault();\r\n    // }\r\n  }\r\n\r\n  // convenience getters for easy access to form fields\r\n  get f() {\r\n    return this.mandatesForms.controls;\r\n  }\r\n  get m() {\r\n    return this.f.mandates as FormArray;\r\n  }\r\n\r\n  onChangeApplicants(e) {\r\n    console.log(e.value);\r\n    const numberOfMandates = e.value || 0;\r\n    if (this.m.length < numberOfMandates) {\r\n      for (let i = this.m.length; i < numberOfMandates; i++) {\r\n        this.m.push(\r\n          this.formBuilder.group({\r\n            mandateId: [null],\r\n            productAccountId: [this.accountId],\r\n            modeOfOperation: ['', Validators.required],\r\n            amountFrom: ['', Validators.required],\r\n            amountTo: ['', Validators.required],\r\n            //totalSignaturesRequired: ['', Validators.required],\r\n            totalSignaturesRequired: [\r\n              '',\r\n              [Validators.required, Validators.maxLength(1)],\r\n            ],\r\n            remarks: ['', []],\r\n          })\r\n        );\r\n      }\r\n    } else {\r\n      for (let i = this.m.length; i >= numberOfMandates; i--) {\r\n        this.m.removeAt(i);\r\n      }\r\n    }\r\n  }\r\n\r\n  addMFormGroup(): FormGroup {\r\n    return this.formBuilder.group({\r\n      mandateId: [null],\r\n      productAccountId: [this.accountId],\r\n      modeOfOperation: ['', Validators.required],\r\n      amountFrom: ['', Validators.required],\r\n      amountTo: ['', Validators.required],\r\n      totalSignaturesRequired: ['', Validators.required],\r\n      remarks: ['', []],\r\n    });\r\n  }\r\n\r\n  addFormGroup() {\r\n    this.m.push(\r\n      this.formBuilder.group({\r\n        mandateId: [null],\r\n        productAccountId: [this.accountId],\r\n        modeOfOperation: ['', Validators.required],\r\n        amountFrom: ['', Validators.required],\r\n        amountTo: ['', Validators.required],\r\n        totalSignaturesRequired: ['', Validators.required],\r\n        remarks: ['', []],\r\n      })\r\n    );\r\n  }\r\n\r\n  addMandateToFormGroup(data?) {\r\n    const numberOfItems = data.length;\r\n    console.log('numberOfItems', numberOfItems);\r\n    for (let index = 1; index < numberOfItems; index++) {\r\n      this.m.push(\r\n        this.formBuilder.group({\r\n          mandateId: [null],\r\n          productAccountId: [this.accountId],\r\n          modeOfOperation: ['', Validators.required],\r\n          amountFrom: ['', Validators.required],\r\n          amountTo: ['', Validators.required],\r\n          totalSignaturesRequired: ['', Validators.min(1), Validators.required],\r\n          remarks: ['', []],\r\n        })\r\n      );\r\n    }\r\n  }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    console.log('SUCCESS!! :-)\\n\\n', this.mandatesForms.value);\r\n    this.apiService.saveMandateDetails(this.mandatesForms.value).subscribe(\r\n      (data: any) => {\r\n        console.log(data);\r\n        if (data === 200 || data !== null) {\r\n          this.snack.open(' Mandate Details Saved!', 'OK', {\r\n            duration: 4000,\r\n            verticalPosition: 'top',\r\n            horizontalPosition: 'right',\r\n          });\r\n          this.ls.setItem('ACC_MANDATE_DONE', true);\r\n          this.accountService.refresh.next();\r\n          this.router.navigate([\r\n            `/home/application/account-service/${this.accountId}`,\r\n          ]);\r\n        } else if (data === 500) {\r\n          this.snack.open(\r\n            'Not able to connect to server!',\r\n            'INTERNAL SERVER ERROR',\r\n            {\r\n              duration: 4000,\r\n              verticalPosition: 'top',\r\n              horizontalPosition: 'right',\r\n            }\r\n          );\r\n        }\r\n      },\r\n      (err) => {\r\n        console.log(err);\r\n      }\r\n    );\r\n    // this.apiService.createCustomerInformation(this.mandatesForms.value)\r\n    //   .subscribe((data: any) => {\r\n    //     console.log(data);\r\n    //   }, err => {\r\n    //     console.log(err);\r\n    //   });\r\n  }\r\n\r\n  onReset() {\r\n    // reset whole form back to initial state\r\n    this.submitted = false;\r\n    this.mandatesForms.reset();\r\n    this.m.clear();\r\n  }\r\n\r\n  onClear() {\r\n    // clear errors and reset ticket fields\r\n    this.submitted = false;\r\n    this.m.reset();\r\n  }\r\n\r\n  getModeOfOperation(key: string) {\r\n    this.api.getDropDownValues(key).subscribe((data) => {\r\n      this.arrayModeOfOperation = data;\r\n    });\r\n  }\r\n\r\n  removeMandate(i: number) {\r\n    console.log('i', i);\r\n    console.log('id:::', this.m.at(i).get('mandateId').value);\r\n    let mandateId = this.m.at(i).get('mandateId').value;\r\n    this.confirmService\r\n      .confirm({\r\n        title: 'Confirm',\r\n        message: 'Are you sure want to remove?',\r\n        ok: 'Yes',\r\n        cancel: 'No',\r\n      })\r\n      .subscribe((res) => {\r\n        console.log('res:: removed ', res);\r\n        if (res) {\r\n          this.apiService.deleteMandateById(mandateId, 'ADMIN').subscribe(\r\n            (data: any) => {\r\n              console.log('data', data);\r\n            },\r\n            (err) => {\r\n              const control = <FormArray>(\r\n                this.mandatesForms.controls['mandates']\r\n              );\r\n              control.removeAt(i);\r\n              if (err.status === 200) {\r\n                this.snack.open('Record Deleted Successfully', 'OK', {\r\n                  duration: 4000,\r\n                  verticalPosition: 'top',\r\n                  horizontalPosition: 'right',\r\n                });\r\n              }\r\n            }\r\n          );\r\n        } else return;\r\n      });\r\n  }\r\n\r\n  goBack() {\r\n    // this.router.navigate([this.previousUrl]);\r\n    this.router.navigate([\r\n      `home/application/customer-information/${this.accountId}`,\r\n    ]);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    //Called once, before the instance is destroyed.\r\n    //Add 'implements OnDestroy' to the class.\r\n    this.dataService.sendNavParam({});\r\n  }\r\n}\r\n","<div class=\"matcard-size\">\r\n<div fxLayout=\"row\" fxLayout.lt-sm=\"column\" class=\"app-top-toolbar\">\r\n  <!-- <button mat-icon-button class=\"mr-1\" (click)=\"toggleSideNav()\"><mat-icon>short_text</mat-icon> </button> -->\r\n  <span fxFlex></span>\r\n  <!-- <span fxFlex=\"20px\"></span> -->\r\n  <!-- <button mat-button color=\"primary\" (click)=\"addFormGroup()\">\r\n    <mat-icon>add</mat-icon> ADD MANDATE\r\n  </button> -->\r\n</div>\r\n\r\n<div fxLayout=\"row\">\r\n  <div fxFlex=\"100\">\r\n    <div class=\"propic text-center\">\r\n      <img\r\n        src=\"assets/images/svg/undraw_Terms_re_6ak_4.svg\"\r\n        alt=\"\"\r\n        class=\"w-90\"\r\n      />\r\n    </div>\r\n    <div class=\"profile-title text-center mt-8\">\r\n      <div class=\"main-title1\">Mandate Details</div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<div fxLayout=\"row\">\r\n  <div fxFlex=\"100\">\r\n    <mat-card class=\"p-0\">\r\n      <mat-card-title>\r\n        <fieldset>\r\n        <legend visible=\"true\">Mandate </legend>\r\n        </fieldset>\r\n      </mat-card-title>\r\n      <div fxLayout=\"row\" class=\"pt-16\" fxLayoutGap=\"30px\" fxLayoutAlign=\"start center\">\r\n        <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-1\">\r\n            <div class=\"pb-1\">\r\n                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                    <mat-label>Number of Applicants</mat-label>\r\n                    <input matInput name=\"no_of_applicants\" [value]=\"no_of_applicants\" readonly\r\n                    placeholder=\"Number of Applicants\" required />\r\n                    <!-- {{no_of_applicants}} -->\r\n                </mat-form-field>\r\n            </div>\r\n        </div>\r\n      </div>\r\n      <mat-card-content>\r\n        <form [formGroup]=\"mandatesForms\" *ngIf=\"mandatesForms\">\r\n          <div *ngFor=\"let mandate of m.controls; let i = index\">\r\n            <mat-accordion>\r\n              <mat-expansion-panel\r\n                class=\"mb-8\"\r\n                expanded=\"true\"\r\n                (opened)=\"panelOpenState = true\"\r\n                (closed)=\"panelOpenState = false\"\r\n              >\r\n                <mat-expansion-panel-header>\r\n                  <mat-panel-title>\r\n                    <ng-container *ngIf=\"showEditOption; else createMandate\">\r\n                      Update Mandate {{ i + 1 }}\r\n                    </ng-container>\r\n                    <ng-template #createMandate>\r\n                      Create Mandate {{ i + 1 }}\r\n                    </ng-template>\r\n                  </mat-panel-title>\r\n                </mat-expansion-panel-header>\r\n                <div [formGroup]=\"mandate\">\r\n                  <!-- Mandate Section start-->\r\n                  <div fxLayout=\"row\" fxLayoutGap=\"25px\">\r\n                    <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-1\">\r\n                      <div class=\"pb-1\">\r\n                        <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                          <mat-label>Mode Of Operation</mat-label>\r\n\r\n                          <mat-select\r\n                            formControlName=\"modeOfOperation\"\r\n                            name=\"mod\"\r\n                            required\r\n                          >\r\n                            <mat-option\r\n                              *ngFor=\"\r\n                                let modeOfOperation of arrayModeOfOperation\r\n                              \"\r\n                              [value]=\"modeOfOperation\"\r\n                            >\r\n                              {{ modeOfOperation }}\r\n                            </mat-option>\r\n                          </mat-select>\r\n\r\n                          <!-- <input\r\n                            matInput\r\n                            formControlName=\"modeOfOperation\"\r\n                            name=\"mod\"\r\n                            placeholder=\"Mode Of Operation\"\r\n                          /> -->\r\n                          <mat-error\r\n                            *ngIf=\"\r\n                              mandate\r\n                                .get('modeOfOperation')\r\n                                .hasError('required')\r\n                            \"\r\n                          >\r\n                            Mode Of Operation is Required!\r\n                          </mat-error>\r\n                        </mat-form-field>\r\n                      </div>\r\n\r\n                      <div\r\n                        fxLayout=\"row\"\r\n                        fxLayoutGap=\"10px\"\r\n                        fxLayoutAlign=\"space-between start\"\r\n                      >\r\n                        <div fxFlex=\"50%\">\r\n                          <div class=\"pb-1\">\r\n                            <mat-form-field\r\n                              appearance=\"outline\"\r\n                              class=\"full-width\"\r\n                            >\r\n                              <mat-label>Amount From*</mat-label>\r\n                              <input\r\n                                matInput\r\n                                maxlength=\"10\"\r\n                                name=\"a_from\"\r\n                                formControlName=\"amountFrom\"\r\n                                placeholder=\"Amount From\"\r\n                                (keypress)=\"_keyPress($event)\"\r\n                              />\r\n                              <mat-error\r\n                                *ngIf=\"\r\n                                  mandate.get('amountFrom').hasError('required')\r\n                                \"\r\n                              >\r\n                                Amount From is Required!\r\n                              </mat-error>\r\n                            </mat-form-field>\r\n                          </div>\r\n                        </div>\r\n                        <div fxFlex=\"50%\">\r\n                          <div class=\"pb-1\">\r\n                            <mat-form-field\r\n                              appearance=\"outline\"\r\n                              class=\"full-width\"\r\n                            >\r\n                              <mat-label>Amount To*</mat-label>\r\n                              <input\r\n                                matInput\r\n                                maxlength=\"10\"\r\n                                name=\"a_to\"\r\n                                formControlName=\"amountTo\"\r\n                                placeholder=\"Amount To\"\r\n                                (keypress)=\"_keyPress($event)\"\r\n                              />\r\n                              <mat-error\r\n                                *ngIf=\"\r\n                                  mandate.get('amountTo').hasError('required')\r\n                                \"\r\n                              >\r\n                                Amount To is Required!\r\n                              </mat-error>\r\n                            </mat-form-field>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div class=\"pb-1\">\r\n                        <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                          <mat-label>Required No of Signatories*</mat-label>\r\n                          <!-- <mat-select\r\n                            name=\"a_sig\"\r\n                            formControlName=\"totalSignaturesRequired\"\r\n                            placeholder=\"Required No of Signatories\"\r\n                            (selectionChange)=\"changeNoOfSignatories($event)\">\r\n                            <mat-option *ngFor=\"let Signatories of NoOfSignatories\" [value]=\"Signatories.count\">\r\n                              {{Signatories.count}}\r\n                            </mat-option>\r\n                          </mat-select> -->\r\n                          <input\r\n                            matInput\r\n                            (keypress)=\"_keyPress2($event)\"\r\n                            name=\"a_sig\"\r\n                            formControlName=\"totalSignaturesRequired\"\r\n                            maxlength=\"1\"\r\n                            placeholder=\"Required No of Signatories\"\r\n                          />\r\n                          <mat-error\r\n                            *ngIf=\"\r\n                              mandate\r\n                                .get('totalSignaturesRequired')\r\n                                .hasError('required')\r\n                            \"\r\n                          >\r\n                            No of Signatories is Required!\r\n                          </mat-error>\r\n                        </mat-form-field>\r\n                        <div>\r\n                          <small style=\"color: red\" *ngIf=\"flag\">\r\n                            No of Signatories can not be more than no of\r\n                            applicants!\r\n                          </small>\r\n                        </div>\r\n                        <div>\r\n                          <small style=\"color: red\" *ngIf=\"flag1\">\r\n                            No of Signatories can not be Zero!\r\n                          </small>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div class=\"pb-1\">\r\n                        <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                          <mat-label>Leave a Remark</mat-label>\r\n                          <textarea\r\n                            matInput\r\n                            name=\"remark\"\r\n                            formControlName=\"remarks\"\r\n                            placeholder=\"Leave a Remark\"\r\n                          ></textarea>\r\n                        </mat-form-field>\r\n                        <button mat-button color=\"primary\" class=\"place\" (click)=\"addFormGroup()\">\r\n                          <!-- <mat-icon>add</mat-icon>  -->\r\n                          ADD MANDATE\r\n                        </button>\r\n                      </div>\r\n                      <div class=\"pb-1\">\r\n                        <button\r\n                          mat-button\r\n                          color=\"warn\"\r\n                          (click)=\"removeMandate(i)\"\r\n                          *ngIf=\"mandate.get('mandateId').value != null\"\r\n                        >\r\n                          <mat-icon></mat-icon> REMOVE MANDATE\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <!-- Mandate Section end -->\r\n                </div>\r\n              </mat-expansion-panel>\r\n            </mat-accordion>\r\n          </div>\r\n        </form>\r\n      </mat-card-content>\r\n    </mat-card>\r\n    <div\r\n            fxLayout=\"row\"\r\n            fxLayoutAlign=\"space-between center\"\r\n            fxLayoutGap=\"16px\"\r\n            class=\"mt-32\"\r\n          >\r\n            <button mat-button class=\"Backbtn\" (click)=\"goBack()\">\r\n              Back\r\n            </button>\r\n            <button\r\n              mat-raised-button\r\n              [disabled]=\"flag || !mandatesForms.valid || flag1\"\r\n              color=\"primary\"\r\n              class=\"Nextbtn\"\r\n              (click)=\"onSubmit()\"\r\n            >\r\n              Next\r\n            </button>\r\n          </div>\r\n  </div>\r\n</div>\r\n</div>","import { ChangeDetectorRef, Component, OnInit } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { Router } from '@angular/router';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { AccountService } from '../account.service';\r\nimport { IntialFundingDialogComponent } from './intial-funding-dialog/intial-funding-dialog.component';\r\n\r\n@Component({\r\n  selector: 'app-funding-stage',\r\n  templateUrl: './funding-stage.component.html',\r\n  styleUrls: ['./funding-stage.component.scss']\r\n})\r\nexport class FundingStageComponent implements OnInit {\r\n\r\n  objIndex: number;\r\n  detailsShowOrViewRef: any = 'Add Details';\r\n  processCompleted: boolean = false;\r\n  accountId:any;\r\n  isFundingStageDone:boolean = false;\r\n  isInitialFundScreen:boolean = false;\r\n  isReportScreen:boolean = false;\r\n  isQualitativeScreen:boolean = false;\r\n\r\n  constructor(private router: Router,\r\n    public dialog: MatDialog,\r\n    private ls: LocalStoreService,\r\n    private accountService:AccountService,\r\n    private cdr:ChangeDetectorRef) { }\r\n\r\n  ngOnInit(): void {\r\n// account id getting from local storage\r\n\r\n   this.accountId = this.ls.getItem('accountId');\r\n    this.isFundingStageDone = this.ls.getItem('fundingStage');\r\n    this.isInitialFundScreen = this.ls.getItem('FUNDING_INI_DONE');\r\n    this.isReportScreen = this.ls.getItem('ASSESSMENT_REPORT_DONE');\r\n    this.isQualitativeScreen = this.ls.getItem('ASSESSMENT_QA_DONE');\r\n\r\n    this.accountService.refresh.subscribe((res: any) => {\r\n      this.accountId = this.ls.getItem('accountId');\r\n      // Parent 5\r\n      this.isFundingStageDone = this.ls.getItem('fundingStage');\r\n      // Parent 5 childs nav\r\n      this.isInitialFundScreen = this.ls.getItem('FUNDING_INI_DONE');\r\n      this.isReportScreen = this.ls.getItem('ASSESSMENT_REPORT_DONE');\r\n      this.isQualitativeScreen = this.ls.getItem('ASSESSMENT_QA_DONE');\r\n    \r\n      this.cdr.markForCheck();\r\n    });\r\n\r\n \r\n  }\r\n  \r\n  goToViewSummary() {\r\n    \r\n    // this.router.navigate([`/home/application/funding/summary/`, this.accountId]);\r\n    console.log(\"efg\");\r\n    this.router.navigate([`/home/application/funding/summary/${this.accountId}`]);\r\n   // this.router.navigate([`/home/application/funding/testing/${this.accountId}`]);\r\n    console.log(\"abcd\");\r\n  }\r\n\r\n  goToAddDetail() {\r\n    this.router.navigate([`/home/application/funding/details/`, this.accountId]);\r\n  }\r\n\r\n\r\n  openDialog(): void {\r\n    const dialogRef = this.dialog.open(IntialFundingDialogComponent, {\r\n      width: '782px',\r\n      height: '380px'\r\n      // data: {name: this.name, animal: this.animal}\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      console.log('The dialog was closed');\r\n      // this.animal = result;\r\n    });\r\n  }\r\n\r\n}\r\n","<!--  -->\r\n\r\n<div fxLayout=\"row wrap\" class=\"matcard-size\">\r\n  <div fxFlex=\"100\">\r\n    <!-- <div class=\"propic text-center\">\r\n          <img src=\"assets/images/face-7.png\" alt=\"\" class=\"w-80\" />\r\n        </div> -->\r\n    <div class=\"profile-pic text-center\">\r\n      <img src=\"assets/images/face-7.png\" class=\"main-profile-img\" />\r\n      <i class=\"fa fa-edit upload-icon\"></i>\r\n    </div>\r\n    <div class=\"profile-title text-center mt-8\">\r\n      <div class=\"f-28\"><b>Create New Customer</b></div>\r\n      <div class=\"text-muted1\">\r\n        Create New Customer Account with bank XYZ bank in a better way.\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div fxFlex=\"100\" *ngIf=\"isFundingStageDone && isInitialFundScreen\" class=\"mt-8\">\r\n    <mat-card>\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n        <div fxFlex=\"10\">\r\n          <mat-icon class=\"text-green\">check_circle</mat-icon>\r\n        </div>\r\n        <div fxFlex=\"30\">\r\n          <h6>Funding Completed</h6>\r\n        </div>\r\n        <span fxFlex></span>\r\n        <button mat-button color=\"primary\" (click)=\"goToViewSummary()\">View Summary</button>\r\n      </div>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n<div fxLayout=\"row wrap\" class=\"mt-12\">\r\n  <div fxFlex=\"50\" fxFlex.gt-sm=\"50\" fxFlex.sm=\"50\">\r\n    <!-- [ngClass]=\"{'not-active':item.status == ''}\" -->\r\n    <!-- Card 1 start-->\r\n    <mat-card>\r\n      <mat-card-header>\r\n        <mat-card-title class=\"title-header\">1. Initial Funding Details</mat-card-title>\r\n        <!-- <mat-card-subtitle> {{ item?.content }}</mat-card-subtitle> -->\r\n      </mat-card-header>\r\n      <mat-card-content>\r\n        <div\r\n          fxLayout=\"row\"\r\n          fxLayoutGap=\"10px\"\r\n          fxLayoutAlign=\"space-between start\"\r\n          class=\"description\"\r\n        >\r\n          <div fxFlex=\"50%\" class=\"notActive\">\r\n            <p class=\"pl-18\">Shows the transaction details.</p>\r\n          </div>\r\n          <div fxFlex=\"50%\">\r\n            <img\r\n              [src]=\"'assets/images/svg/undraw_credit_card_payment_yb88.svg'\"\r\n              class=\"card-img\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <!--begin::Progress-->\r\n        <div class=\"mb-1\" *ngIf=\"isInitialFundScreen\">\r\n          <mat-progress-bar\r\n            [color]=\"'primary'\"\r\n            mode=\"determinate\"\r\n            [value]=\"100\"\r\n            class=\"rounded\"\r\n            style=\"height: 6px\"\r\n          >\r\n          </mat-progress-bar>\r\n          <p class=\"m-0 text-right\">Completed</p>\r\n          <!-- <span class=\"text-muted\">| {{ item.percentage }}%</span> -->\r\n        </div>\r\n        <!--end::Progress-->\r\n      </mat-card-content>\r\n      <!--begin:: Card body-->\r\n      <mat-divider></mat-divider>\r\n      <mat-card-actions>\r\n        <ng-container *ngIf=\"(isQualitativeScreen || isReportScreen) && isInitialFundScreen; else showFunding\">\r\n          <button\r\n          mat-button\r\n          (click)=\"openDialog()\"\r\n          [disabled]=\"accountId == null\"\r\n          color=\"primary\"\r\n          class=\"pl-27\"\r\n        >\r\n          View Details <mat-icon>chevron_right</mat-icon>\r\n        </button>\r\n        </ng-container>\r\n        <ng-template #showFunding>\r\n         <button\r\n          mat-button\r\n          (click)=\"goToAddDetail()\"\r\n          [disabled]=\"!isReportScreen && !isQualitativeScreen\"\r\n          color=\"primary\"\r\n          class=\"pl-27\"\r\n          >\r\n          Add Details <mat-icon>chevron_right</mat-icon>\r\n        </button>\r\n        </ng-template>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n    <!-- Card 1 end -->\r\n  </div>\r\n</div>\r\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nrequire(\"rxjs-compat/add/operator/filter\");\n//# sourceMappingURL=filter.js.map","import { Component, Inject, OnInit } from '@angular/core';\r\n\r\n\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { Router } from '@angular/router';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { DataService } from 'app/shared/services/data.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\n\r\n@Component({\r\n  selector: 'app-secured-draft-summary',\r\n  templateUrl: './secured-draft-summary.component.html',\r\n  styleUrls: ['./secured-draft-summary.component.scss']\r\n})\r\nexport class SecuredDraftSummaryComponent implements OnInit {\r\n \r\n  secureOverdraft:any;\r\n  accountId: any;\r\n  title: string = \"Secured Overdraft Details\";\r\n  secureoverDraftDetails: any;\r\n \r\n  constructor( private router: Router,private api: ApiService, private ls: LocalStoreService,public dialogRef: MatDialogRef<SecuredDraftSummaryComponent>,\r\n  private dataService:DataService  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.accountId = this.ls.getItem('accountId');\r\n    this.getSecuredoverdraft();\r\n  }\r\n  edit(){\r\n    \r\n    this.dataService.sendNavParam(this.secureOverdraft.securedOverDrafts); \r\n    this.dialogRef.close();\r\n    console.log(\"accountId in edit:\",this.accountId)\r\n    this.router.navigateByUrl('/home/application/limit-entry-stage/secured-draft/'+this.accountId);\r\n  }\r\n  close(){\r\n    this.dialogRef.close();\r\n    this.router.navigateByUrl('/home/application/limit-entry-stage/list/');\r\n  }\r\n  getSecuredoverdraft(){\r\n    \r\n    this.api.securedOverdraftSummary(this.accountId).subscribe(result=>{\r\n          this.secureOverdraft=result;\r\n          \r\n          this.secureoverDraftDetails =  this.secureOverdraft.securedOverDrafts;\r\n          console.log(this.accountId)\r\n          console.log(\"data::\",this.secureOverdraft);\r\n\r\n      })\r\n  }\r\n}\r\n","<!-- <p>secured-draft-summary works!</p> -->\r\n\r\n<!-- <mat-card> -->\r\n    <!-- <mat-icon class=\"closeicon\" (click)=\"close()\">close</mat-icon>\r\n    <h3 class=\"algn\">Secured Overdraft Details</h3>\r\n    <mat-card class=\"matcard-algn\" *ngFor=\"let secure of secureOverdraftDetails;let i=index\">\r\n        <mat-card >\r\n        <h6 class=\"halgn\">Collateral / Reference Number</h6>\r\n        <div style=\"padding-top: 20px;\" fxLayout=\"row wrap\">\r\n            <mat-icon class=\"homeicon\" aria-hidden=\"false\" aria-label=\"Example home icon\">home</mat-icon>\r\n            <span style=\"padding-right: 16pc;\">{{secure.collateralType}}</span>\r\n            <div>\r\n                <div>\r\n                    <button class=\"button-algn\" disabled='true'>2500 Sqft</button> &nbsp;&nbsp;&nbsp;&nbsp;\r\n                    <button class=\"button-algn\" disabled='true'>1.25Ac</button>\r\n                </div>\r\n            </div>\r\n\r\n        </div> -->\r\n        <!-- <div *ngIf=\"secureOverdraft && secureOverdraft.securedOverDrafts\">\r\n        <div style=\"padding-top: 26px;\" fxLayout=\"row wrap\" *ngFor=\"let information of secureOverdraft.securedOverDrafts\">\r\n            <div style=\"padding-right: 15%; \"  >\r\n                <p class=\"textcolor\">Collateral Value</p>\r\n                <span> {{information.collateralValue}}</span>\r\n\r\n               \r\n            </div>\r\n            <div style=\"padding-right: 15%;\" >\r\n                <p class=\"textcolor\">Available Linkage Amount</p>\r\n                <span>{{information.overdraftCurrency}} {{information.availableLinkageAccount}}</span>\r\n            </div>\r\n            <div >\r\n                <p class=\"textcolor\">Overdraft Limit Amount</p>\r\n                <span>{{information.overdraftCurrency}} {{information.overdraftLimitAmount}}</span>\r\n            </div>\r\n        </div>\r\n        <div style=\"padding-top: 26px;\" *ngFor=\"let information of secureOverdraft.securedOverDrafts\">\r\n            <p class=\"textcolor\">Final Rate</p>\r\n            <span>{{information.overdraftCurrency}} {{information.finalAmount}}</span>\r\n        </div>\r\n    </div> -->\r\n    <!-- </mat-card>\r\n    <u class=\"editalgn\" (click)=\"edit()\">Edit</u>\r\n</mat-card> -->\r\n<div class=\"full-width\">\r\n    <div fxLayout=\"row\" class=\"contain\">\r\n      <mat-icon class=\"backIcon\" (click)=\"close()\">close</mat-icon>\r\n    </div>\r\n        <div fxLayout=\"row\">\r\n            <h4 class=\"paraFont\">{{title}}</h4>\r\n        </div>\r\n\r\n<div class=\"fullcard\">\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"center center\">\r\n        <div fxFlex=\"100%\">\r\n            <mat-card class=\"chequecard\" *ngFor=\"let secure of secureoverDraftDetails;let i=index\">\r\n                <mat-card-content>\r\n                    <div class=\"full-width\" >\r\n                            <div fxLayout=\"column\" fxLayoutGap=\"6%\" fxLayoutAlign=\"space-between none\">\r\n                                    <div fxLayout=\"row wrap\" class=\"flex-container stretch\">\r\n                                        <ng-container>\r\n                                            <div fxFlex fxFlex.xs=\"100%\" class=\"inputCardclass\">\r\n                                                    <mat-card class=\"inputCard\">\r\n                                                        <mat-hint class=\"headingText\">Collateral / Reference Number </mat-hint> <mat-hint class=\"headingText\">{{secure?.id}}</mat-hint><br><br>\r\n                                                     <div fxLayout=\"row wrap\">   <mat-icon class=\"homeicon\" aria-hidden=\"false\" aria-label=\"Example home icon\">home</mat-icon>\r\n                                                        <mat-hint class=\"valueText\">{{secure?.collateralType}}</mat-hint><br> </div>\r\n                                                         <div fxLayout=\"column\" fxLayoutGap=\"6%\" fxLayoutAlign=\"space-between none\">\r\n                                                        <div fxLayout=\"row wrap\" class=\"flex-container stretch\">\r\n                                                            <ng-container>\r\n                                                                <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                                                    <mat-hint class=\"headingText\">Collateral Value</mat-hint><br>\r\n                                                                    <mat-hint class=\"valueText\">{{secure?.collateralValue}}</mat-hint></div>\r\n                                                                <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                                                    <mat-hint class=\"headingText\">Available Linkage Amount</mat-hint><br>\r\n                                                                    <mat-hint class=\"valueText\">{{secure?.availableLinkageAccount}}  </mat-hint>\r\n                                                                </div>\r\n                                                                <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                                                    <mat-hint class=\"headingText\">Overdraft Limit Amount</mat-hint><br>\r\n                                                                    <mat-hint class=\"valueText\">{{secure?.overdraftLimitAmount}} </mat-hint>\r\n                                                                </div>\r\n                                                            </ng-container>\r\n                                                        </div>\r\n                                                        <div fxLayout=\"row wrap\" class=\"flex-container stretch\">\r\n                                                            <ng-container>\r\n                                                                <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                                                    <mat-hint class=\"headingText\">Final Rate</mat-hint><br>\r\n                                                                    <mat-hint class=\"valueText\">{{secure?.finalAmount}}</mat-hint></div>\r\n                                                             \r\n                                                            </ng-container>\r\n                                                        </div>\r\n                                                      \r\n                                                        </div>\r\n                                                </mat-card>\r\n                                            </div>\r\n                                         \r\n                                        </ng-container>\r\n                                    </div>     \r\n                            </div>\r\n                    </div>\r\n                </mat-card-content>\r\n                </mat-card>\r\n                <p class=\"editButton\" (click)=\"edit()\" >Edit</p>\r\n            </div>  \r\n         </div>\r\n </div>\r\n </div>\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, FormArray } from \"@angular/forms\";\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\n\r\n@Component({\r\n  selector: 'app-intrest-details-summary',\r\n  templateUrl: './intrest-details-summary.component.html',\r\n  styleUrls: ['./intrest-details-summary.component.scss']\r\n})\r\nexport class IntrestDetailsSummaryComponent implements OnInit {\r\n  interestForm: FormGroup;\r\n  savingForm: FormGroup;\r\n  loanForm: FormGroup;\r\n  accountType: any;\r\n  accountId: any;\r\n  accountInfo: any;\r\n  constructor(private ls: LocalStoreService, private snack: MatSnackBar, private dialogRef: MatDialogRef<IntrestDetailsSummaryComponent>, private api: ApiService, private router: Router, private formBuilder: FormBuilder) { }\r\n\r\n  ngOnInit(): void {\r\n    this.accountId = this.ls.getItem('accountId');\r\n    this.accountInfo = this.ls.getItem('EDIT-CREATEACCCIF');\r\n    if (this.accountInfo) {\r\n      this.accountId = this.accountInfo.businessProductAccount.accountId\r\n    }\r\n    this.accountType = this.ls.getItem('accountType');\r\n    setTimeout(() => {\r\n      // this.api.getIntrestValues(this.accountId).subscribe(resp => {\r\n      //   console.log(\"backend resp\", resp)\r\n      //   this.check(resp === null)\r\n      //   console.log(\"backend resp\", resp.length);\r\n      //   this.onChangeInterest(resp.length);\r\n      //   this.in.patchValue(resp);\r\n\r\n        this.api.getFlexcubeDetails(\"intrestDetails\",  this.accountType).subscribe(resp => {\r\n          console.log(resp)\r\n          this.check(resp === null)\r\n          this.onChangeInterest(resp.length);\r\n          this.in.patchValue(resp)  \r\n        // const filteredResponse = resp.filter(res => res.intrestType === 'fixed');\r\n       \r\n\r\n        // const filteredResponseSave = resp.filter(res => res.intrestType === 'savings');\r\n        // this.onChangeSaving(filteredResponseSave.length);\r\n        // this.is.patchValue(filteredResponseSave);\r\n\r\n        // const filteredResponseLoan = resp.filter(res => res.intrestType === 'loan');\r\n        // this.onChangeLoan(filteredResponseLoan.length);\r\n        // this.iloan.patchValue(filteredResponseLoan);\r\n      })\r\n\r\n    }, 1);\r\n\r\n\r\n    this.interestForm = this.formBuilder.group({\r\n      interest: new FormArray([]),\r\n    });\r\n    this.savingForm = this.formBuilder.group({\r\n      saving: new FormArray([]),\r\n    });\r\n\r\n    this.loanForm = this.formBuilder.group({\r\n      loan: new FormArray([]),\r\n    });\r\n\r\n\r\n  }\r\n  assignAccountType(accountType) {\r\n    this.accountType = accountType\r\n  }\r\n\r\n  onChangeInterest(e) {\r\n    const numberOfItems = e || 0;\r\n    if (this.in.length < numberOfItems) {\r\n      for (let i = this.in.length; i < numberOfItems; i++) {\r\n        this.in.push(\r\n          this.formBuilder.group({\r\n\r\n            intrestType: [\"\"],\r\n            intrestRateApplicable: [\"\"],\r\n            marginIn: [\"\"],\r\n            effectiveRate: [\"\"],\r\n            accountId: [this.accountId],\r\n            createdDate: [\"\"],\r\n            createdBy: [\"\"],\r\n            lastModifiedDate: [\"\"],\r\n            lastModifiedBy: [\"\"],\r\n          })\r\n        );\r\n      }\r\n    } else {\r\n      for (let i = this.in.length; i >= numberOfItems; i--) {\r\n        this.in.removeAt(i);\r\n      }\r\n    }\r\n  }\r\n  onChangeSaving(e) {\r\n    const numberOfItems = e || 0;\r\n    if (this.is.length < numberOfItems) {\r\n      for (let i = this.is.length; i < numberOfItems; i++) {\r\n        this.is.push(\r\n          this.formBuilder.group({\r\n\r\n            intrestType: [\"\"],\r\n            intrestRateApplicable: [\"\"],\r\n            marginIn: [\"\"],\r\n            effectiveRate: [\"\"],\r\n            accountId: [this.accountId],\r\n            createdDate: [\"\"],\r\n            createdBy: [\"\"],\r\n            lastModifiedDate: [\"\"],\r\n            lastModifiedBy: [\"\"],\r\n          })\r\n        );\r\n      }\r\n    } else {\r\n      for (let i = this.is.length; i >= numberOfItems; i--) {\r\n        this.is.removeAt(i);\r\n      }\r\n    }\r\n  }\r\n  onChangeLoan(e) {\r\n    const numberOfItems = e || 0;\r\n    if (this.iloan.length < numberOfItems) {\r\n      for (let i = this.iloan.length; i < numberOfItems; i++) {\r\n        this.iloan.push(\r\n          this.formBuilder.group({\r\n\r\n            intrestType: [\"\"],\r\n            intrestRateApplicable: [\"\"],\r\n            marginIn: [\"\"],\r\n            effectiveRate: [\"\"],\r\n            accountId: [this.accountId],\r\n            createdDate: [\"\"],\r\n            createdBy: [\"\"],\r\n            lastModifiedDate: [\"\"],\r\n            lastModifiedBy: [\"\"],\r\n          })\r\n        );\r\n      }\r\n    } else {\r\n      for (let i = this.iloan.length; i >= numberOfItems; i--) {\r\n        this.iloan.removeAt(i);\r\n      }\r\n    }\r\n  }\r\n  // convenience getters for easy access to form fields\r\n  get f() {\r\n    return this.interestForm.controls;\r\n  }\r\n  get in() {\r\n    return this.f.interest as FormArray;\r\n  }\r\n  get fs() {\r\n    return this.savingForm.controls;\r\n  }\r\n  get is() {\r\n    return this.fs.saving as FormArray;\r\n  }\r\n  get floan() {\r\n    return this.loanForm.controls;\r\n  }\r\n  get iloan() {\r\n    return this.floan.loan as FormArray;\r\n  }\r\n\r\n\r\n  goBack() {\r\n    this.router.navigate([\"/home/application/enrichment/list\"]);\r\n  }\r\n\r\n  onSubmit(form) {\r\n    console.log(\"form\", form.interest);\r\n    console.log(\"form value\", form);\r\n    console.log(\"form value\", this.interestForm.value);\r\n    this.api.intrestDetailsSave(form.interest).subscribe(resp => {\r\n      console.log(\"backend response from intrest saving\", resp)\r\n    }\r\n\r\n    )\r\n    this.router.navigate(['/home/application/enrichment/charge']);\r\n  }\r\n  edit() {\r\n    this.dialogRef.close();\r\n    this.api.setFlag({\r\n      flag: true\r\n    })\r\n    this.router.navigate([`/home/application/enrichment/interest/${this.accountId}`]);\r\n  }\r\n  check(accountType) {\r\n\r\n    if (accountType) {\r\n\r\n      console.log(this.snack.open)\r\n      this.snack.open('Intrest detail is empty', 'Error', {\r\n        duration: 4000,\r\n        verticalPosition: 'top',\r\n        horizontalPosition: 'right'\r\n      });\r\n    }\r\n  }\r\n}\r\n","<!-- <mat-card class=\"matCard\"> -->\r\n<button mat-button id=\"close\" mat-dialog-close>\r\n  <mat-icon class=\"closeicon\">close</mat-icon>\r\n</button>\r\n<mat-card-title>\r\n  <fieldset class=\"fieldset1\">\r\n    <legend visible=\"true\">Interest Details</legend>\r\n  </fieldset>\r\n</mat-card-title>\r\n<div fxLayout=\"row wrap\" class=\"main\">\r\n  <div fxFlex=\"100\">\r\n    <!-- <div class=\"propic text-center\">\r\n              <img src=\"assets/images/svg/undraw_statistic_chart_38b6.svg\" alt=\"\" class=\"w-80\" />\r\n            </div> -->\r\n\r\n    <!-- <div class=\"profile-title text-center mt-8\">\r\n        <div class=\"main-title\"><b>Interest Details</b></div>\r\n      </div> -->\r\n  </div>\r\n  <div fxFlex=\"100\" class=\"m-333\" class=\"mainDiv\">\r\n    <!-- <h5>{{this.accountType}}</h5> -->\r\n    <div class=\"mt-24\"></div>\r\n    <form *ngIf=\"interestForm\" [formGroup]=\"interestForm\">\r\n      <table class=\"cart-table default-bg mat-elevation-z0\"\r\n        [@animate]=\"{ value: '*', params: { delay: '100ms', x: '-50px' } }\">\r\n        <!-- <thead>\r\n            <tr>\r\n              <th class=\"text-muted\">Interest Type</th>\r\n              <th class=\"text-muted\">Interest Rate Applicable</th>\r\n              <th class=\"text-muted\">Margin in %</th>\r\n              <th class=\"text-muted\">Effective Rate %</th>\r\n            </tr>\r\n          </thead> -->\r\n        <tbody>\r\n          <tr [formGroup]=\"interest\" class=\"mt-4\" *ngFor=\"let interest of in.controls; let i = index\"\r\n            style=\"display: flex;flex-wrap: wrap;\">\r\n            <div class=\"row\">\r\n              <ng-container>\r\n\r\n                <div class=\"heading\">\r\n                  <input matInput formControlName=\"intrestType\" name=\"account_branch\" id=\"headingInput\" readonly />\r\n                </div>\r\n\r\n                <td>\r\n                  <mat-card class=\"matCardBox\">\r\n                    <mat-label class=\"label\">Interest Rate Applicable</mat-label>\r\n                    <input matInput formControlName=\"intrestRateApplicable\" name=\"account_branch\" class=\"input\"\r\n                      readonly />\r\n                  </mat-card>\r\n                </td>\r\n                <td>\r\n                  <mat-card class=\"matCardBox\">\r\n                    <mat-label class=\"label\">Margin in %</mat-label>\r\n                    <input matInput formControlName=\"marginIn\" name=\"account_branch\" class=\"input\" readonly />\r\n                  </mat-card>\r\n                </td>\r\n                <td>\r\n                  <mat-card class=\"matCardBox\">\r\n                    <mat-label class=\"label\">Effective Rate %</mat-label>\r\n                    <input matInput formControlName=\"effectiveRate\" name=\"account_branch\" value=\"\" class=\"input\"\r\n                      readonly />\r\n\r\n                  </mat-card>\r\n                </td>\r\n              </ng-container>\r\n            </div>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </form>\r\n  </div>\r\n\r\n</div>\r\n\r\n\r\n<span class=\"spanDiv\" (click)=\"edit()\">Edit</span>\r\n<!-- </mat-card> -->","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar filter_1 = require(\"../../operator/filter\");\nrxjs_1.Observable.prototype.filter = filter_1.filter;\n//# sourceMappingURL=filter.js.map","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { Router } from '@angular/router';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\n@Component({\r\n  selector: 'app-view-approval-deatils',\r\n  templateUrl: './view-approval-deatils.component.html',\r\n  styleUrls: ['./view-approval-deatils.component.scss']\r\n})\r\nexport class ViewApprovalDeatilsComponent implements OnInit {\r\n  approvalForm: FormGroup;\r\n  disableField:boolean;\r\n  accountId:any;\r\n  appArr:any=[];\r\n  accountInfo: any;\r\n  constructor(private formBuilder: FormBuilder,\r\n    private api: ApiService,\r\n    private router: Router,\r\n    private ls:LocalStoreService,\r\n    private snack:MatSnackBar,\r\n    private dialogRef: MatDialogRef<ViewApprovalDeatilsComponent>,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.disableField=true;\r\n    this.accountId = this.ls.getItem('accountId');\r\n    this.accountInfo = this.ls.getItem('EDIT-CREATEACCCIF');\r\n    if(this.accountInfo){\r\n      this.accountId=this.accountInfo.businessProductAccount.accountId\r\n    }\r\n    this.approvalForm = this.formBuilder.group({\r\n      accountType: ['', []],\r\n      businessProductName: ['', []],\r\n      productImage: ['', []],\r\n      description: ['', []],\r\n      accountBranch: ['', []],\r\n      accountCurrency: ['', []],\r\n      applicationDate: ['', []],\r\n      fundTheAccount: ['', []],\r\n      fundBy: ['', []],\r\n      amount: ['', []],\r\n      overDraftRequested: ['', []],\r\n      productAccountId: ['', []],\r\n      productDescription: ['', []],\r\n      userRecommendation: ['', []]\r\n\r\n\r\n\r\n    });\r\n    setTimeout(() => {\r\n      this.getApprovalDetails(this.accountId);\r\n    }, 1);\r\n   \r\n   \r\n  }\r\n  getApprovalDetails(accountId)\r\n  {\r\n    this.api.approvalAccountFetch(accountId).subscribe(resp => {\r\n      console.log(\"approval details\", resp)\r\n      this.appArr=resp;\r\n      this.appArr.accountCurrency=this.appArr.accountCurrency.toLowerCase();\r\n      // if(resp)\r\n      // {console.log(\"inside if\");\r\n      // this.appArr.push(resp);\r\n      // }\r\n      // else{\r\n      //   console.log(\"no resp\");\r\n    \r\n      // console.log(\"inid else1\");\r\n      // this.snack.open('Not able to connect to server!', 'INTERNAL SERVER ERROR', {\r\n      //   duration: 4000,\r\n      //   verticalPosition: 'top',\r\n      //   horizontalPosition: 'right'\r\n      // });\r\n    \r\n      // }\r\n     \r\n\r\n    },\r\n    (err: any) => {\r\n      console.log(\"err\",err);\r\n      this.snack.open('Not able to connect to server!', 'INTERNAL SERVER ERROR', {\r\n        duration: 4000,\r\n        verticalPosition: 'top',\r\n        horizontalPosition: 'right'\r\n      });\r\n    })\r\n  }\r\n  \r\n  onEditOfApprovalStging() {\r\n    // this.router.navigateByUrl('/home/application/approval/details');\r\n    this.router.navigate([`/home/application/approval/details/${this.accountId}`]);\r\n    console.log(\"sending\", this.approvalForm);\r\n    this.api.sendApprovalStgingData(this.approvalForm.value);\r\n  }\r\n}\r\n","<!-- <div fxLayout=\"row wrap\">\r\n  <div fxFlex=\"100\">\r\n     <div class=\"propic text-center\">\r\n        <img\r\n          src=\"assets/images/svg/undraw_approve_qwp7.svg\"\r\n          alt=\"\"\r\n          class=\"w-80\"\r\n        />\r\n      </div> \r\n    <div class=\"profile-title text-center mt-8\">\r\n        <div class=\"main-title\"><b>Approval Details</b></div>\r\n      </div> \r\n  </div>\r\n\r\n  <div fxFlex=\"100\" class=\"mt-24\">\r\n    <div>\r\n      <mat-icon fxLayoutAlign=\"end stretch\">close</mat-icon>\r\n    </div>\r\n    <h2 class=\"ml-16\">Approval Details</h2>\r\n    <div class=\"border\"></div>\r\n\r\n    <div class=\"mt-24\"></div>\r\n\r\n    <mat-card>\r\n\r\n      <form [formGroup]=\"approvalForm\">\r\n        <mat-card-content>\r\n          <div fxLayout=\"row\" fxLayoutGap=\"25px\">\r\n            <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-1\">\r\n              <div class=\"pb-1\">\r\n                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                  <mat-label>Account Type</mat-label>\r\n                  <mat-select name=\"account\" formControlName=\"accountType\" disabled>\r\n                    <mat-option value=\"saving\">Savings</mat-option>\r\n                    <mat-option value=\"current\">Current</mat-option>\r\n                  </mat-select>\r\n                </mat-form-field>\r\n              </div>\r\n\r\n              <div class=\"pb-1\">\r\n                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                  <mat-label>Product Code</mat-label>\r\n                  <input matInput [disabled]=\"true\" name=\"account_branch\" placeholder=\"Product Code\" value=\"\"\r\n                    formControlName=\"productAccountId\" />\r\n                  <mat-icon matSuffix>account_balance</mat-icon>\r\n                </mat-form-field>\r\n              </div>\r\n\r\n              <div class=\"pb-1\">\r\n                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                  <mat-label>Account Currency</mat-label>\r\n                  <mat-select name=\"owner\" formControlName=\"accountCurrency\" disabled>\r\n                    <mat-option value=\"USD\">USD</mat-option>\r\n                    <mat-option value=\"INR\">INR</mat-option>\r\n                    <mat-option value=\"ASD\">ASD</mat-option>\r\n                  </mat-select>\r\n                </mat-form-field>\r\n              </div>\r\n\r\n              <div class=\"pb-1\">\r\n                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                  <mat-label>User Recomendation</mat-label>\r\n                  <mat-select name=\"owner\" placeholder=\"Recommended for Approval\" formControlName=\"userRecommendation\"\r\n                    disabled>\r\n                    <mat-option value=\"Recommended for Approval\">Recommended for Approval</mat-option>\r\n                    <mat-option value=\"Recommended for Rejection\">Recommended for Rejection</mat-option>\r\n                  </mat-select>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n\r\n            <div fxFlex=\"100\" fxFlex.gt-xs=\"50\">\r\n              <div class=\"pb-1\">\r\n                <mat-form-field class=\"full-width\" appearance=\"outline\">\r\n                  <mat-label>Account Branch</mat-label>\r\n                  <input matInput name=\"business\" placeholder=\"Business Product Name\" formControlName=\"accountBranch\"\r\n                    disabled />\r\n                  <mat-icon matSuffix>branding_watermark</mat-icon>\r\n                </mat-form-field>\r\n              </div>\r\n\r\n              <div class=\"pb-1\">\r\n                <mat-form-field class=\"full-width\" appearance=\"outline\">\r\n                  <mat-label>Product Name</mat-label>\r\n                  <input matInput name=\"business\" placeholder=\"Business Product Name\"\r\n                    formControlName=\"businessProductName\" disabled />\r\n                  <mat-icon matSuffix>branding_watermark</mat-icon>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </mat-card-content>\r\n      </form>\r\n    </mat-card>\r\n  </div>\r\n\r\n  <div fxFlex=\"100\" class=\"mt-16\">\r\n    <button mat-stroked-button color=\"primary\" mat-dialog-close [routerLink]=\"'/home/application/approval/details'\"\r\n      (click)=\"onEditOfApprovalStging()\">Edit</button>\r\n    <a>Edit</a>\r\n    <span fxFlex></span>\r\n    <button mat-raised-button color=\"primary\" type=\"button\" (click)=\"onSubmit(approvalForm.value)\">DONE</button>\r\n  </div>\r\n</div> -->\r\n\r\n\r\n<div fxLayoutAlign=\"end stretch\" mat-dialog-close class=\"close\"><mat-icon>close</mat-icon></div>\r\n<div class=\"approval-details\">\r\n <fieldset>\r\n  <legend visible=\"true\" clas=\"paraFont\">Approval Details</legend>\r\n </fieldset>\r\n    <mat-card >\r\n<div *ngIf=\"appArr\">\r\n<div fxLayout=\"row wrap\">\r\n\r\n<div fxFlex=\"100\" fxLayoutAlign=\"space-around stretch\" class=\"pt-7\">\r\n  <div fxFlex=\"50\" class=\"headingText text\">Account Type</div>\r\n  \r\n  <div fxFlex=\"50\" class=\"headingText text\">Account Branch</div>\r\n  <div fxFlex=\"50\" class=\"headingText text\">Product Code </div>\r\n</div>\r\n<div fxFlex=\"100\" fxLayoutAlign=\"space-around stretch\">\r\n    <div fxFlex=\"50\" class=\"valueText\"><b>{{appArr.accountType}}</b></div>\r\n    <div fxFlex=\"50\" class=\"valueText\"><b>{{appArr.accountBranch}}</b></div>\r\n    <div fxFlex=\"50\" class=\"valueText\"><b>{{appArr.businessProductName}}</b></div>\r\n  </div>\r\n\r\n  <!-- <br> -->\r\n  <div class=\"border1\" ></div>\r\n  \r\n  <!-- 2nd row -->\r\n  <div fxFlex=\"100\" fxLayoutAlign=\"space-around stretch\" class=\"pt-7\">\r\n     <!-- <div fxFlex=\"50\" class=\"headingText\">Product Name</div>-->\r\n      <div fxFlex=\"50\" class=\"headingText text\">Account Currency</div>\r\n      <div fxFlex=\"50\"></div>\r\n    </div>\r\n    <div fxFlex=\"100\" fxLayoutAlign=\"space-around stretch\">\r\n      <div fxFlex=\"7\" class=\"h-25 currency-flag currency-flag-{{appArr.accountCurrency}}\"></div>\r\n        <!--<div fxFlex=\"50\" class=\"valueText\"><b>{{appArr.businessProductName}}</b></div>-->\r\n        <div fxFlex=\"50\" class=\"valueText pt-7 ps-10\" style=\"text-transform:uppercase\"><b>{{appArr.accountCurrency}}</b></div>\r\n        <div fxFlex=\"40\"></div> \r\n      </div>\r\n      <!-- 3rd row -->\r\n      <br>\r\n      <br>\r\n      <div class=\"border1\" ></div>\r\n      <div >\r\n\r\n     <mat-card class=\"card\" >\r\n<div  >\r\n    <div fxFlex=\"50\" class=\"headingText mt-20\" style=\"white-space: nowrap\">User Recommendation </div>\r\n  </div>\r\n  <br>\r\n  <div>\r\n      <p class=\"valueText\"><mat-icon class=\"textIcon\" >check_circle</mat-icon>&nbsp;&nbsp;\r\n      <div fxFlex=\"50\"class=\"valueText\" style=\"white-space: nowrap\"><b>{{appArr.userRecommendation}}</b></div>\r\n    </div>\r\n    <!--  *ngIf=\"appArr.userRecommendation\" -->\r\n \r\n  </mat-card>\r\n</div>\r\n  \r\n</div>\r\n  <div>\r\n    <!-- <button mat-stroked-button color=\"primary\" mat-dialog-close [routerLink]=\"'/home/application/approval/details'\"\r\n      (click)=\"onEditOfApprovalStging()\">Edit</button> -->\r\n      \r\n    <!-- <a>Edit</a> -->\r\n    <span fxFlex></span>\r\n    <!-- <button mat-raised-button color=\"primary\" type=\"button\" (click)=\"onSubmit(approvalForm.value)\">DONE</button> -->\r\n  </div>\r\n\r\n</div>\r\n\r\n</mat-card>\r\n<p class=\"editButton\" (click)=\"onEditOfApprovalStging()\" mat-dialog-close>Edit</p>\r\n</div>","import { ChangeDetectorRef, Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, FormArray, Validators } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { AppConfirmService } from 'app/shared/services/app-confirm/app-confirm.service';\r\nimport { DataService } from 'app/shared/services/data.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport * as moment from 'moment';\r\nimport { Subscription } from 'rxjs';\r\nimport { AccountService } from '../../account.service';\r\nimport Swal from 'sweetalert2';\r\nimport { UrlService } from '../../url.service';\r\n\r\n@Component({\r\n  selector: 'app-secured-draft',\r\n  templateUrl: './secured-draft.component.html',\r\n  styleUrls: ['./secured-draft.component.scss']\r\n})\r\nexport class SecuredDraftComponent implements OnInit {\r\n  accountId: any\r\n  panelOpenState = false;\r\n  submitted = false;\r\n  formData = {}\r\n  console = console;\r\n  collateralForms: FormGroup;\r\n  otherDocForm: FormGroup;\r\n  secureOverdraft: any;\r\n  navSubscription: Subscription;\r\n  routeparams: any = [];\r\n  showEditOption: boolean = false;\r\n  showDelete : boolean = true;\r\n  pattern = \"([0-9]|1[0-9]|2[0-4])\";\r\n  loggedInUser: any = \"123456\";\r\n  previousUrl: string = '';\r\n  id: boolean;\r\n  issecurityValid: boolean = false;\r\n  minDate = new Date();\r\n  linkangePercent: number;\r\n // fileName = '';\r\n  fileName: any = [];\r\n  fileNam: any;\r\n  collateralID: any;\r\n  finalRatevalue: number;\r\n  arrayCollateralType: string[];\r\n  currency: any;\r\n  selectedOptions: any[] = [];\r\n  secureOverdraftData: any;\r\n  docUrl: any;\r\n  showSpinn: boolean;\r\n  showSpinner : boolean;\r\n  branchData: any;\r\n  branch: any;\r\n  onbackSpace : boolean = false;\r\n  branchArr: any[] = [];\r\n\r\n\r\n  constructor(private router: Router, private snack: MatSnackBar, private api: ApiService,\r\n    private ls: LocalStoreService, private accountService: AccountService, private dataService: DataService,\r\n    private formBuilder: FormBuilder, private urlService: UrlService, private confirmService: AppConfirmService, private cdr: ChangeDetectorRef,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n\r\n    this.accountId = this.ls.getItem('accountId');\r\n    this.loggedInUser = '1234578';\r\n    let isSecureDraftScreen: boolean = JSON.parse(this.ls.getItem('LIMIT_SECURED_DONE'));\r\n    this.getAllBranch();\r\n    this.getCollateralType(\"collateral_type\");\r\n    // this.getRateValue(\"currency\");\r\n    this.getCurrencyDetails();\r\n    this.urlService.previousUrl$\r\n      .subscribe((previousUrl: string) => {\r\n        this.previousUrl = previousUrl\r\n      });\r\n\r\n    if (this.accountId != null && isSecureDraftScreen) {\r\n      this.showEditOption = true;\r\n      this.getSecuredOverDraft();\r\n    } else {\r\n      this.showEditOption = false;\r\n      this.buildCollateralForm();\r\n    }\r\n    this.otherDocForm = this.formBuilder.group({\r\n      otherDoc_array: this.formBuilder.array([])\r\n    });\r\n\r\n  }\r\n\r\n  getSecuredOverDraft() {\r\n    this.api.securedOverdraftSummary(this.accountId)\r\n      .subscribe((result: any) => {\r\n        this.secureOverdraftData = result.securedOverDrafts;\r\n        this.secureOverdraftData.forEach((element,index)=>{\r\n          this.docUrl = this.secureOverdraftData[index].documentUrl;\r\n          this.fileNam = this.secureOverdraftData[index].fileName;\r\n          console.log(this.docUrl);\r\n       });  \r\n        console.log(\"data::\", this.secureOverdraftData, this.secureOverdraftData[0].documentUrl);\r\n        this.buildCollateralForm(this.secureOverdraftData, true);\r\n      })\r\n  }\r\n  keyPressAlphanumeric(event) {\r\n    var inp = String.fromCharCode(event.keyCode);\r\n    if (/[a-zA-Z0-9]/.test(inp)) {\r\n      return true;\r\n    } else {\r\n      event.preventDefault();\r\n      return false;\r\n    }\r\n  }\r\n\r\n  buildCollateralForm(data?, isResponse?: boolean) {\r\n    this.collateralForms = this.formBuilder.group({\r\n      collaterals: this.formBuilder.array([this.addCollateralFormGroup()])\r\n    });\r\n    \r\n    if (isResponse) {\r\n      this.addFormGroup(data);\r\n      this.c.patchValue(data);\r\n    }\r\n  }\r\n\r\n  // convenience getters for easy access to form fields\r\n  get f() { return this.collateralForms.controls; }\r\n  get c() { return this.f.collaterals as FormArray; }\r\n\r\n  addColletralFormGroup() {\r\n    this.c.push(this.formBuilder.group({\r\n      collateralType: [''],\r\n          collateralCurrency: [''],\r\n          accountId: this.accountId,\r\n          collateralValue: [''],\r\n          attributes: [''],\r\n          dimensions: [''],\r\n          securityReferenceNumber: ['',],\r\n          branchCode: [''],\r\n          availableLinkageAccount: [''],\r\n          linkagePercentage: [''],\r\n          overdraftLimitAmount: [''],\r\n          limitStartDate: [''],\r\n          limitEndDate: [''],\r\n          rateValue: [''],\r\n          rate: [''],\r\n          spread: [''],\r\n          finalAmount: [''],\r\n          documentUrl:  [''],\r\n          fileName:  ['']\r\n\r\n    }));\r\n  }\r\n\r\n\r\n  onChangeApplicants(e) {\r\n    console.log(e.value);\r\n    const numberOfCollaterals = e.value || 0;\r\n    if (this.c.length < numberOfCollaterals) {\r\n      for (let i = this.c.length; i < numberOfCollaterals; i++) {\r\n        this.c.push(this.formBuilder.group({\r\n          collateralType: [''],\r\n          collateralCurrency: [''],\r\n          accountId: this.accountId,\r\n          collateralValue: [''],\r\n          attributes: [''],\r\n          dimensions: [''],\r\n          securityReferenceNumber: [''],\r\n          branchCode: [''],\r\n          availableLinkageAccount: [''],\r\n          linkagePercentage: [''],\r\n          overdraftLimitAmount: [''],\r\n          limitStartDate: [''],\r\n          limitEndDate: [''],\r\n          rateValue: [''],\r\n          rate: [''],\r\n          spread: [''],\r\n          finalAmount: [''],\r\n          documentUrl:  [''],\r\n          fileName:  ['']\r\n        }));\r\n      }\r\n    } else {\r\n      for (let i = this.c.length; i >= numberOfCollaterals; i--) {\r\n        this.c.removeAt(i);\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  addCFormGroup(): FormGroup {\r\n    return this.formBuilder.group({\r\n      collateralType: [''],\r\n      collateralCurrency: [''],\r\n      accountId: this.accountId,\r\n      collateralValue: [''],\r\n      attributes: [''],\r\n      dimensions: [''],\r\n      securityReferenceNumber: [''],\r\n      branchCode: [''],\r\n      availableLinkageAccount: [''],\r\n      linkagePercentage: [''],\r\n      overdraftLimitAmount: [''],\r\n      limitStartDate: [''],\r\n      limitEndDate: [''],\r\n      rateValue: [''],\r\n      rate: [''],\r\n      spread: [''],\r\n      finalAmount: [''],   \r\n      documentUrl:  [''],\r\n      fileName:  ['']\r\n    },\r\n\r\n    );\r\n  }\r\n  public securedOverdraft: {\r\n    example: any[]\r\n  };\r\n\r\n  addFormGroup(data?) {\r\n    const numberOfItems = data.length;\r\n    console.log(\"numberOfItems\", numberOfItems);\r\n    for (let index = 1; index < numberOfItems; index++) {\r\n      this.c.push(this.formBuilder.group({\r\n        id:[this.ls.getItem(\"id\")],\r\n        collateralType: [data ? data.collateralType : ''],\r\n        collateralCurrency: [data ? data.collateralCurrency : ''],\r\n        accountId: this.accountId,\r\n        collateralValue: [data ? data.collateralValue : ''],\r\n        attributes: [data ? data.attributes : ''],\r\n        dimensions: [data ? data.dimensions : ''],\r\n        securityReferenceNumber: [data ? data.securityReferenceNumber : ''],\r\n        branchCode: [data ? data.branchCode : ''],\r\n        availableLinkageAccount: [data ? data.availableLinkageAccount : ''],\r\n        linkagePercentage: [data ? data.linkagePercentage : ''],\r\n        overdraftLimitAmount: [data ? data.overdraftLimitAmount : ''],\r\n        limitStartDate: [data ? data.limitStartDate : ''],\r\n        limitEndDate: [data ? data.limitEndDate : ''],\r\n        rateValue: [data ? data.rateValue : ''],\r\n        rate: [data ? data.rate : ''],\r\n        spread: [data ? data.spread : ''],\r\n        finalAmount: [data ? data.finalAmount : ''],\r\n        documentUrl:[data? data.documentUrl : ''],\r\n        fileName:  [data? data.documentUrl : '']\r\n        })\r\n      );\r\n    }\r\n  }\r\n\r\n  addCollateralFormGroup() {\r\n   return this.formBuilder.group({\r\n      id:[this.ls.getItem(\"id\")],\r\n      collateralType: [''],\r\n      collateralCurrency: [''],\r\n      accountId: this.accountId,\r\n      collateralValue: [''],\r\n      attributes: [''],\r\n      dimensions: [''],\r\n      securityReferenceNumber: [''],\r\n      branchCode: [''],\r\n      availableLinkageAccount: [''],\r\n      linkagePercentage: [''],\r\n      overdraftLimitAmount: [''],\r\n      limitStartDate: [''],\r\n      limitEndDate: [''],\r\n      rateValue: [''],\r\n      rate: [''],\r\n      spread: [''],\r\n      finalAmount: [''],\r\n      documentUrl:  [''],\r\n      fileName:  ['']\r\n    });\r\n  }\r\n\r\n  getCollatrl(event,percent){\r\n    console.log(\"percent\",event, percent.value)\r\n    if((percent.value > 10) && (event.keyCode != 8)) {\r\n      console.log(\"If Condition\");\r\n    return false;\r\n    }\r\n  }\r\n  getCollateralType(key: string) {\r\n    this.api.getDropDownValues(key).subscribe((data) => {\r\n      this.arrayCollateralType = data;\r\n    });\r\n  }\r\n  // getRateValue(key: string) {\r\n  //   this.api.getDropDownValues(key).subscribe((data) => {\r\n  //     this.arrayRateValue = data;\r\n  //   });\r\n  // }\r\n  getCurrencyDetails(){\r\n    this.api.fetchCurrencyMaintAuthRecs().subscribe(resp => {\r\n    this.currency = resp    \r\n    }) \r\n  }\r\n\r\n  getDate(date){\r\n    console.log(\"Date\",date);\r\n  }\r\n    // Available Linkage Amount\r\n    calculateLinkagePercent(value,i) {\r\n      this.linkangePercent = value.collateralValue * (value.linkagePercentage/100);\r\n      \r\n      this.c.at(i).get('availableLinkageAccount').setValue(this.linkangePercent.toFixed(2));\r\n    }\r\n\r\n    calculateFinalrate(value,i){\r\n      this.finalRatevalue = value.rate*1 + value.spread*1;\r\n      console.log(this.linkangePercent, this.c.controls[i]);\r\n      this.c.at(i).get('finalAmount').setValue(this.finalRatevalue);\r\n\r\n    }\r\n  _keyPress(event: any ) {\r\n    const pattern = /[0-9]/;\r\n    let inputChar = String.fromCharCode(event.charCode);\r\n    if (!pattern.test(inputChar)){\r\n      event.preventDefault();\r\n    }\r\n\r\n  }\r\n  overDraftCondition(event: any,i) {\r\n    let overDRaftValue:number = event.target.value;\r\n    console.log(overDRaftValue, this.linkangePercent);\r\n    if(overDRaftValue > this.linkangePercent){\r\n        console.log(\"Bigger\");\r\n        this.confirmService\r\n        .confirm({ title: \"Confirm\", message: \" Overdraft Limit Amount should be less than Available Linkage Amount. Do you want to Proceed?\", ok: \"Yes\", cancel: \"No\" })\r\n        .subscribe(res => {\r\n          console.log(\"Response\", res);\r\n          if (res === true) {\r\n            this.cdr.markForCheck();\r\n          } else {\r\n            this.c.at(i).get('overdraftLimitAmount').setValue('');\r\n          };\r\n        });\r\n    }\r\n  }\r\n  fetchBySecurityNum(securityReferenceNum,i) {\r\n   \r\n    if(!!securityReferenceNum){\r\n     this.showSpinner = true;\r\n     console.log(\"Caling\",securityReferenceNum);\r\n       this.api.fetchBySecurityNumber(securityReferenceNum).subscribe((res: any) => {\r\n         console.log(res);\r\n         this.showSpinner = false;\r\n         if (res == null) {\r\n           this.issecurityValid = false;\r\n           this.snack.open('Invalid Security Reference Number', 'OK', {\r\n             duration: 4000,\r\n             verticalPosition: 'top',\r\n             horizontalPosition: 'right'\r\n           });\r\n           this.c.at(i).get('securityReferenceNumber').setValue(''); \r\n           return;\r\n         } else {\r\n          this.issecurityValid = true;\r\n          this.branchData = res.securedOverDrafts;\r\n          console.log( this.branchData);\r\n          this.branchData.forEach((element,index)=>{\r\n            this.branch =  this.branchData[index].branchCode;\r\n            console.log(this.branch);\r\n           }); \r\n           \r\n           this.c.at(i).get('branchCode').setValue(this.branch); \r\n         }\r\n         this.cdr.markForCheck();\r\n        \r\n       });\r\n     }\r\n   }\r\n   keyUpevent(event,i){\r\n    console.log(\"event\",event);\r\n    if(event.keyCode === 8 ){\r\n      this.onbackSpace= true;\r\n      this.issecurityValid = false;\r\n      this.c.at(i).get('branchCode').setValue('');\r\n    }\r\n    else {\r\n      this.onbackSpace= false;\r\n    }\r\n  }\r\n  deleteDoc(i){\r\n    this.docUrl = ' ';\r\n    this.fileName =  ' ';\r\n    this.c.at(i).get('documentUrl').setValue('');\r\n    this.c.at(i).get('fileName').setValue('');\r\n    this.showDelete = false;\r\n  }\r\n    uploadCollateralType(event,i) {\r\n      this.console.log(\"event\",event);\r\n      this.console.log(\"i=\",i);\r\n      this.showSpinn = true;\r\n      const file:File = event.target.files[0];\r\n      this.fileName[i] = file.name;\r\n      console.log(\"File name=\",this.fileName[i] );\r\n      const data = {\r\n        accountId: this.accountId,\r\n        documentName: this.fileName[i],\r\n      };\r\n      const uploadData = new FormData();\r\n      uploadData.append(\"data\", JSON.stringify(data));\r\n      uploadData.append(\"file\", file);\r\n      this.api.uploadcollateralDoc(uploadData).subscribe((res:any) => {\r\n      console.log(\"Document Resp\",res, res.url);\r\n      if(res && res.url){\r\n       this.showSpinn = false;\r\n       this.snack.open('Document Saved Successfully!', 'OK', { duration: 4000, verticalPosition: 'top', horizontalPosition: 'right' });\r\n       this.c.at(i).get('documentUrl').setValue(res.url);\r\n       this.c.at(i).get('fileName').setValue(res.fileName);\r\n      }\r\n       });\r\n\r\n    \r\n    }\r\n  \r\n  Date(event){\r\n    console.log(\"date\",event)\r\n  }\r\n  onSubmit(i) {\r\n    console.log(\"this.collateralForms.touched\",this.collateralForms.touched)\r\n    if(this.collateralForms.touched==false){\r\n      \r\n      //this.ls.setItem('LIMIT_SECURED_DONE', true);\r\n     // this.accountService.refresh.next();\r\n      this.router.navigate([`/home/application/limit-entry-stage/unsecured-draft/${this.accountId}`]);\r\n\r\n    }\r\n  \r\n    console.log(\"form group index\", i)\r\n    this.submitted = true;\r\n  \r\n    // display form values on success\r\n    console.log('SUCCESS!! :-)\\n\\n', this.collateralForms.value);\r\n    this.c.value.forEach(data => {\r\n      console.log(\"data\",data)\r\n      // console.log(data.limitStartDate._d);\r\n      // console.log(data.limitEndDate._d);\r\n      if((data.linkagePercentage==\"\"||data.securityReferenceNumber==\"\"||data.collateralValue==\"\"\r\n        ||data.branchCode==\"\")&& this.collateralForms.touched==true)\r\n      {\r\n        this.snack.open('mandatory details are not filled so need to be filled!', 'OK', {\r\n          duration: 4000,\r\n          verticalPosition: 'top',\r\n          horizontalPosition: 'right'\r\n        });\r\n      }\r\n\r\n      if(data.limitStartDate!=null && data.limitStartDate._d != undefined && data.limitStartDate._d != null){\r\n         data.limitStartDate = this.convertDate(data.limitStartDate._d);\r\n      }\r\n\r\n      if(data.limitEndDate!=null && data.limitEndDate._d != undefined && data.limitEndDate._d != null){\r\n        data.limitEndDate = this.convertDate(data.limitEndDate._d);\r\n      }\r\n      console.log(data.limitStartDate); //ISO 8601 FORMATE\r\n      console.log(data.limitEndDate);\r\n\r\n  }\r\n    )\r\n    \r\n    \r\n    console.log(\"arr of form\", this.c.value);\r\n    // if(this.id == undefined){\r\n    //   this.id = null;\r\n    // }\r\n    let payload = { securedOverDrafts: this.c.value, loggedInUser: this.loggedInUser};\r\n    console.log(\"payload ??\",payload);\r\n    // if(this.c.value.collateralValue == null || this.c.value.collateralCurrency || this.c.value.collateralType || this.c.value.attributes ||\r\n    // this.c.value.dimensions || this.c.value.securityReferenceNumber || this.c.value.branchCode || this.c.value.availableLinkageAccount || \r\n    // this.c.value.linkagePercentage || this.c.value.limitEndDate || this.c.value.limitStartDate || this.c.value.overdraftLimitAmount ||\r\n    // this.c.value.overdraftCurrency || this.c.value.rateValue || this.c.value.finalAmount || this.c.value.rate\r\n    // )\r\n    // Validation For Form\r\n    // for (let i = 0; i < payload.securedOverDrafts.length; i++) {\r\n    //   console.log(payload.securedOverDrafts[i].collateralValue,payload.securedOverDrafts[i].securityReferenceNumber, payload.securedOverDrafts[i].branchCode)\r\n    //   if (!payload.securedOverDrafts[i].collateralValue || !payload.securedOverDrafts[i].securityReferenceNumber || !payload.securedOverDrafts[i].branchCode) {\r\n    //     Swal.fire('Please Enter The Mandatory Fields !');\r\n    //     return false;\r\n\r\n    //   }\r\n    // }\r\n\r\n    if(this.collateralForms.invalid){\r\n      console.log(\"this.collateralForms.touched\",this.collateralForms.touched)\r\n     \r\n      return;\r\n    }\r\n    this.api.securedDraft(payload).subscribe(resp => {\r\n      console.log(\"resp after saving basic info\", resp);\r\n      console.log(\"id after saving\",resp.id);\r\n      this.id = this.ls.setItem('id',resp.id);\r\n      this.snack.open('Secured Overdraft Details is already filled, click on Next button to continue!', 'OK', {\r\n        duration: 4000,\r\n        verticalPosition: 'top',\r\n        horizontalPosition: 'right'\r\n      });\r\n      this.ls.setItem('LIMIT_SECURED_DONE', true);\r\n      this.accountService.refresh.next();\r\n      this.router.navigate([`/home/application/limit-entry-stage/unsecured-draft/${this.accountId}`]);\r\n\r\n    }, err => {\r\n      this.snack.open('Error Unable to Save!', 'OK', {\r\n        duration: 4000,\r\n        verticalPosition: 'top',\r\n        horizontalPosition: 'right'\r\n      });\r\n    })\r\n\r\n  }\r\n  // this.api.securedDraft(this.collateralForms.value).subscribe(resp=>{\r\n  //   this.api.securedDraft(this.collateralForms.value).subscribe(resp=>{\r\n\r\n  convertDate(value) {\r\n    let date = moment(value).format('YYYY-MM-DDThh:mm:ss'); // ISO 8601 format\r\n    // let date = moment(value).format('YYYY-MMM-DD');\r\n    console.log(\"date\", date);\r\n    if (date)\r\n      return date;\r\n  }\r\n\r\n  onReset() {\r\n    // reset whole form back to initial state\r\n    this.submitted = false;\r\n    this.collateralForms.reset();\r\n    this.c.clear();\r\n  }\r\n\r\n  onClear() {\r\n    // clear errors and reset ticket fields\r\n    this.submitted = false;\r\n    this.c.reset();\r\n  }\r\n\r\n\r\n  removeCollateral(i: number) {\r\n   this.c.controls[i].reset()\r\n  }\r\n\r\n  deleteCollateral(collateral,i) {\r\n\r\n    console.log(\"Id\",collateral,collateral.id);\r\n    console.log(this.c.at(i).value.id);\r\n    let collateralID = this.c.at(i).value.id;\r\n    const control = <FormArray>this.collateralForms.controls['collaterals'];\r\n        \r\n    this.confirmService\r\n      .confirm({ title: \"Confirm\", message: \"Are you sure want to delete?\", ok: \"Yes\", cancel: \"No\" })\r\n      .subscribe(res => {\r\n        console.log(\"res:: removed \", res);\r\n        if (res)\r\n         {\r\n          this.api.deleteCollateral(collateralID)\r\n            .subscribe((res: any) => {\r\n            }, (err: any) => {''\r\n              console.log(err);\r\n              if (err.status == 200) {\r\n                  control.removeAt(i);\r\n                this.snack.open(`${err.error.text}!`, 'OK', {\r\n                  duration: 4000,\r\n                  verticalPosition: 'top',\r\n                  horizontalPosition: 'right'\r\n                });\r\n            console.log(\"Deleting length\",control.length);\r\n                if(control.length == 0){\r\n            \r\n                  this.ls.setItem('LIMIT_SECURED_DONE', false);\r\n                  this.accountService.refresh.next();\r\n                  this.router.navigate([`/home/application/limit-entry-stage/list/${this.accountId}`]);\r\n                }\r\n                else{\r\n                  this.onReset();\r\n                  this.getSecuredOverDraft();\r\n                }\r\n                \r\n              }\r\n           \r\n            })\r\n        }\r\n         else return;\r\n      });\r\n  }\r\n\r\n  goBack() {\r\n    this.router.navigate([`${this.previousUrl}`]);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.dataService.sendNavParam([]);\r\n  }\r\n  onKeyPress(event: any) {\r\n    const number = /[0-9\\+\\-\\ ]/;\r\n    let inputCharacter = String.fromCharCode(event.charCode);\r\n    if (event.keyCode != 8 && !number.test(inputCharacter)) {\r\n      event.preventDefault();\r\n      console.log(\"event:\", event)\r\n    }\r\n\r\n    console.log(this.collateralForms.controls.collaterals['collateralValue'])\r\n  }\r\ngetAllBranch(){\r\n  this.api.getAuthorizedBranchInfo().subscribe(res => {\r\n    res.map(r => this.branchArr.push(r.branchCode))\r\n  })\r\n}\r\n}\r\n","<div class=\"matcard-size\">\r\n<div fxLayout=\"row\" fxLayout.lt-sm=\"column\" class=\"app-top-toolbar\">\r\n  <!-- <button mat-icon-button class=\"mr-1\" (click)=\"toggleSideNav()\"><mat-icon>short_text</mat-icon> </button> -->\r\n  <span fxFlex></span>\r\n  <!-- <span fxFlex=\"20px\"></span> -->\r\n  <!-- <button mat-button color=\"primary\" *ngIf=\"!showEditOption\" (click)=\"addColletralFormGroup()\">\r\n    <mat-icon>add</mat-icon> Add Collateral\r\n</button> -->\r\n</div>\r\n\r\n<div fxLayout=\"row\">\r\n    <div fxFlex=\"100\">\r\n      <div class=\"propic text-center\">\r\n        <img src=\"assets/images/svg/undraw_secure_files_re_6vdh.svg\" alt=\"\" class=\"w-90\" />\r\n      </div>\r\n      <div class=\"profile-title text-center mt-8\">\r\n        <div class=\"main-title1\"><b>Secured Overdraft Details</b></div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div fxLayout=\"row\">\r\n    <div fxFlex=\"100\">\r\n      <mat-card class=\"p-0\">\r\n        <mat-card-title>\r\n          <fieldset>\r\n          <legend visible=\"true\">Secured Overdraft Details</legend>\r\n          </fieldset>\r\n        </mat-card-title>\r\n        <mat-card-content>\r\n          <form *ngIf=\"collateralForms\" [formGroup]=\"collateralForms\" >\r\n            <div *ngFor=\"let collateral of c.controls; let i = index\">\r\n              <mat-accordion>\r\n              \r\n                <mat-expansion-panel class=\"mb-8\" expanded=\"true\" (opened)=\"panelOpenState = true\"\r\n                (closed)=\"panelOpenState = false\">\r\n                  <mat-expansion-panel-header>\r\n                    <mat-panel-title>\r\n                      {{ showEditOption == true ? 'Edit' : 'Add' }} Collateral {{ i + 1 }}\r\n                    </mat-panel-title>\r\n                  </mat-expansion-panel-header>\r\n                 \r\n                    <div [formGroup]=\"collateral\">\r\n                      <!-- Colletral Section start-->\r\n                      <div fxLayout=\"row\" fxLayoutGap=\"25px\">\r\n                      <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-1\">\r\n  \r\n                        <div class=\"pb-1\">\r\n                          <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                            <mat-label>Collateral Type</mat-label>\r\n                            <mat-select name=\"collateralType\" formControlName=\"collateralType\">\r\n                              <mat-option *ngFor=\"let collateralType of arrayCollateralType\" [value]=\"collateralType\"> \r\n                                {{collateralType}} \r\n                              </mat-option> \r\n                            </mat-select>\r\n                            <mat-error *ngIf=\"collateral.get('collateralType').hasError('required')\">\r\n                              Please select Collateral Type\r\n                            </mat-error>\r\n                          </mat-form-field>\r\n   \r\n                        </div>\r\n    \r\n                     \r\n    \r\n                          <div class=\"pb-1\">\r\n                            <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                              <mat-label>Collateral Value </mat-label>\r\n                              <input  (keypress)=_keyPress($event)\r\n                                matInput\r\n                                name=\"a_sig\"\r\n                                id=\"collateralValue\"\r\n                                formControlName=\"collateralValue\"\r\n                                placeholder=\"Collateral Value\"\r\n                                required\r\n                                (input)=\"calculateLinkagePercent(collateral.value,i)\"\r\n                              />\r\n                              \r\n                              \r\n                            <!-- <mat-error *ngIf=\"collateralForms.controls['collaterals'].touched\" class=\"alert alert-danger\">\r\n                              Please enter the Value\r\n                          </mat-error> -->\r\n                          <mat-error *ngIf=\"collateral.get('collateralValue').hasError('required')\">\r\n                            Please enter Collateral Value\r\n                          </mat-error>\r\n                       \r\n                            </mat-form-field>\r\n                          </div>\r\n                          <div class=\"pb-1\">\r\n                            <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                              <mat-label>Available Linkage Amount</mat-label>\r\n                              <input readonly\r\n                                matInput (keypress)=_keyPress($event)\r\n                                name=\"a_sig\"\r\n                                formControlName=\"availableLinkageAccount\"\r\n                                placeholder=\"Available Linkage Amount\"\r\n                              />\r\n                              <mat-error *ngIf=\"collateral.get('availableLinkageAccount').hasError('required')\">\r\n                                Please enter Available Linkage Amount\r\n                              </mat-error>\r\n                            </mat-form-field>\r\n                          </div>\r\n\r\n                          <div class=\"pb-1\">\r\n                            <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                              <mat-label>Limit Start Date</mat-label>\r\n                              <input readonly\r\n                                matInput\r\n                                name=\"dob\"\r\n                                (selectedChange)=\"getDate(collateral.get('limitStartDate'))\"\r\n                                formControlName=\"limitStartDate\"\r\n                                placeholder=\"Limit Start Date\"\r\n                                [matDatepicker]=\"appDatepicker\"\r\n                                [min]=\"minDate\"\r\n                              />\r\n    \r\n                              <mat-datepicker-toggle\r\n                                matSuffix \r\n                                [for]=\"appDatepicker\"\r\n                              ></mat-datepicker-toggle>\r\n                            </mat-form-field>\r\n                            <mat-datepicker #appDatepicker></mat-datepicker>\r\n                          </div>\r\n\r\n                         \r\n    \r\n                          <div class=\"pb-1\">\r\n                            <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                <mat-label>Attributes</mat-label>\r\n                                <mat-select name=\"attributes\" formControlName=\"attributes\">\r\n                                  <mat-option value=\"1\">Attributes 1</mat-option>\r\n                                  <mat-option value=\"2\">Attributes 2</mat-option>\r\n                                  <mat-option value=\"3\">Attributes 3</mat-option>\r\n                                </mat-select>\r\n                                <mat-error *ngIf=\"collateral.get('attributes').hasError('required')\">\r\n                                  Please select Attributes\r\n                                </mat-error>\r\n                              </mat-form-field>\r\n                        </div>\r\n  \r\n                         \r\n                            <div class=\"pb-1\">\r\n                              <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                <mat-label>Security Reference Number </mat-label>\r\n                                <input\r\n                                  matInput \r\n                                  (keypress)=\"keyPressAlphanumeric($event)\"\r\n                                  name=\"a_sig\" \r\n                                  formControlName=\"securityReferenceNumber\"\r\n                                  placeholder=\"Security Reference Number\"\r\n                                  (change)=\"fetchBySecurityNum(collateral.get('securityReferenceNumber').value,i)\"\r\n                                  (keyup)=keyUpevent($event,i)\r\n                                />\r\n                                <mat-icon *ngIf=\"issecurityValid && collateral.get('securityReferenceNumber').value.length >0 \" matSuffix color=\"primary\">check_circle</mat-icon>\r\n                                <!-- <mat-error *ngIf=\"collateral.get('securityReferenceNumber').hasError('required')\">\r\n                                  Please enter Security Reference Number\r\n                                </mat-error> -->\r\n                                <mat-hint class=\"hintColor\"  *ngIf=\"!issecurityValid && collateral.get('securityReferenceNumber'.value)\" > \r\n                                  Enter valid Security Reference Number!</mat-hint>\r\n                              </mat-form-field>\r\n                            \r\n                            </div>\r\n                           \r\n                            <div class=\"pb-1\">\r\n                              <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                  <mat-label>Rate Value</mat-label>\r\n                                  <mat-select name=\"rateValue\" formControlName=\"rateValue\">\r\n                                    <mat-option *ngFor=\"let rateValue of arrayRateValue\" [value]=\"rateValue\"> \r\n                                      {{rateValue}} \r\n                                    </mat-option> \r\n                                  </mat-select>\r\n                                  <mat-error *ngIf=\"collateral.get('rateValue').hasError('required')\">\r\n                                    Please select Rate Value\r\n                                  </mat-error>\r\n                                </mat-form-field>\r\n                            </div>\r\n  \r\n                         \r\n  \r\n                            <div class=\"pb-1\">\r\n                              <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                <mat-label>Spread</mat-label>\r\n                                <input\r\n                                  matInput\r\n                                  type=\"number\"\r\n                                  name=\"a_sig\"\r\n                                  formControlName=\"spread\"\r\n                                  placeholder=\"Spread\"\r\n                                  (input)=\"calculateFinalrate(collateral.value,i)\"\r\n                                />\r\n                                <mat-error *ngIf=\"collateral.get('spread').hasError('required')\">\r\n                                  Please enter Spread\r\n                                </mat-error>\r\n                              </mat-form-field>\r\n                            </div>\r\n                            <div class=\"pb-1\">\r\n                              <input style=\"display: none;\"\r\n                                  type=\"file\" name=\"documentUrl\"\r\n                                  #documentUrl \r\n                                  (change)=\"uploadCollateralType($event,i)\">\r\n                                  <div fxLayout=\"row wrap\" class=\"flex-container stretch\">\r\n                                  <a class =\"UploadLink\" \r\n                                  (click)=\"documentUrl.click()\"\r\n                                  [routerLink]=\"\">Collateral Document Upload</a> &nbsp; \r\n                                  <mat-hint class=\"documentHint\">{{fileName[i]}}</mat-hint>\r\n                                  <a class=\"documentlink\" *ngIf=\"docUrl\" href=\"{{docUrl}}\" download>{{fileNam}} </a> &nbsp;\r\n                                  <mat-icon *ngIf=\"docUrl && showDelete\" class=\"docIcon\" (click)=\"deleteDoc(i)\">delete</mat-icon>\r\n                                  <mat-spinner class=\"spinner\" [diameter]=\"30\" *ngIf=\"showSpinn\"></mat-spinner>\r\n                                  </div>\r\n                            </div> \r\n                          <br>\r\n                          <div class=\"pb-1\">\r\n                          <button mat-button color=\"primary\" *ngIf=\"!showEditOption\" (click)=\"addColletralFormGroup()\">\r\n                            <mat-icon>add</mat-icon> Add Collateral\r\n                          </button>\r\n                        \r\n                            \r\n                              <button mat-button color=\"warn\" class=\"removebtn\"*ngIf=\"!showEditOption\" (click)=\"removeCollateral(i)\">\r\n                                  <mat-icon>delete</mat-icon> Reset Collateral\r\n                              </button>\r\n                              <button mat-button color=\"warn\" class=\"removebtn\"*ngIf=\"showEditOption\" (click)=\"deleteCollateral(collateral,i)\">\r\n                                <mat-icon>delete</mat-icon> Remove Collateral\r\n                            </button>\r\n                            \r\n                          </div>\r\n                        </div>\r\n\r\n\r\n\r\n\r\n                        <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-1\">\r\n                          <div class=\"pb-1\">\r\n                            <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                <mat-label>Currency</mat-label>\r\n                                <mat-select name=\"prefix\" formControlName=\"collateralCurrency\">\r\n                                  <mat-option *ngFor=\"let collateralCurrency of currency\" [value]=\"collateralCurrency.currencyCode\"> \r\n                                    {{collateralCurrency.currencyCode}} \r\n                                  </mat-option> \r\n                                </mat-select>\r\n                                <mat-error *ngIf=\"collateral.get('collateralCurrency').hasError('required')\">\r\n                                  Please select Currency \r\n                                </mat-error>\r\n                              </mat-form-field>\r\n                          </div>\r\n                       \r\n  \r\n                            <div class=\"pb-1\">\r\n                              <mat-form-field appearance=\"outline\" class=\"linkagePErcent\">\r\n                                <mat-label>Linkage percentage </mat-label>\r\n                                <input\r\n                                  matInput \r\n                                  (keypress)=_keyPress($event)\r\n                                  (keydown)=\"getCollatrl($event,collateral.get('linkagePercentage'))\"\r\n                                  name=\"a_sig\"\r\n                                  formControlName=\"linkagePercentage\"\r\n                                  placeholder=\"Linkage Percentage\"\r\n                                  required\r\n                                  (input)=\"calculateLinkagePercent(collateral.value,i)\"\r\n                                />\r\n                                <mat-error *ngIf=\"collateral.get('linkagePercentage').hasError('required')\">\r\n                                  Please enter Linkage Percentage\r\n                                </mat-error>\r\n                              </mat-form-field>\r\n                            </div>\r\n\r\n  \r\n                          <div class=\"pb-1\">\r\n                              <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                <mat-label>Overdraft Limit Amount</mat-label>\r\n                                <input\r\n                                  matInput (keypress)=_keyPress($event)\r\n                                  name=\"a_sig\"\r\n                                  formControlName=\"overdraftLimitAmount\"\r\n                                  placeholder=\"Overdraft Limit Amount\"\r\n                                  (keyup)=\"overDraftCondition($event,i)\"\r\n                                />\r\n                                <mat-error *ngIf=\"collateral.get('overdraftLimitAmount').hasError('required')\">\r\n                                  Please enter Overdraft Limit Amount\r\n                                </mat-error>\r\n                              </mat-form-field>\r\n                            </div>\r\n                            <!-- [min]=\"collateral.get('limitStartDate').value\" -->\r\n                            <div class=\"pb-1\">\r\n                              <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                <mat-label>Limit End Date</mat-label>\r\n                                <input readonly\r\n                                  matInput\r\n                                  name=\"led\"\r\n                                  [min]=\"collateral.get('limitStartDate').value \"\r\n                                  formControlName=\"limitEndDate\"\r\n                                  placeholder=\"Limit End Date\"\r\n                                  [matDatepicker]=\"appDatepicker1\"\r\n                                />\r\n      \r\n                                <mat-datepicker-toggle\r\n                                  matSuffix\r\n                                  [for]=\"appDatepicker1\"\r\n                                ></mat-datepicker-toggle>\r\n                              </mat-form-field>\r\n                              <mat-datepicker #appDatepicker1></mat-datepicker>\r\n                            </div>\r\n  \r\n  \r\n                            <div class=\"pb-1\">\r\n                              <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                  <mat-label>Dimensions</mat-label>\r\n                                  <mat-select name=\"dimensions\" formControlName=\"dimensions\">\r\n                                    <mat-option value=\"1\">Dimensions 1</mat-option>\r\n                                    <mat-option value=\"2\">Dimensions 2</mat-option>\r\n                                    <mat-option value=\"3\">Dimensions 3</mat-option>\r\n                                  </mat-select>\r\n                                  <mat-error *ngIf=\"collateral.get('dimensions').hasError('required')\">\r\n                                    Please select Dimensions\r\n                                  </mat-error>\r\n                                </mat-form-field>\r\n                          </div>\r\n  \r\n                          <mat-spinner  [diameter]=\"30\" *ngIf=\"showSpinner\"></mat-spinner>\r\n                          <div class=\"pb-1\">\r\n                            <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                              <mat-label>Branch Code </mat-label>\r\n                              <input *ngIf=\"collateral.get('securityReferenceNumber').value\"\r\n                              (keypress)=_keyPress($event)\r\n                                matInput\r\n                                name=\"a_sig\"\r\n                                formControlName=\"branchCode\"\r\n                                placeholder=\"Branch Code\"\r\n                                readonly\r\n                                required\r\n                              />\r\n                              <mat-select *ngIf=\"!collateral.get('securityReferenceNumber').value\"\r\n                              formControlName=\"branchCode\"\r\n                              placeholder=\"Branch Code\"\r\n                              required\r\n                              >\r\n                                <mat-option *ngFor=\"let branch of branchArr\" [value]=\"branch\">{{branch}}</mat-option>\r\n                              </mat-select>\r\n                              <mat-error *ngIf=\"collateral.get('branchCode').hasError('required')\">\r\n                                Please enter Branch Code\r\n                              </mat-error>\r\n                            </mat-form-field>\r\n                          </div>\r\n                          <div class=\"pb-1\">\r\n                            <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                              <mat-label>Rate in %</mat-label>\r\n                              <input  (keypress)=_keyPress($event)\r\n                                matInput\r\n                                name=\"a_sig\"\r\n                                formControlName=\"rate\"\r\n                                placeholder=\"Rate\"\r\n                                (keydown)=\"getCollatrl($event,collateral.get('rate'))\"\r\n                                (input)=\"calculateFinalrate(collateral.value,i)\"\r\n                              />\r\n                              <mat-error *ngIf=\"collateral.get('rate').hasError('required')\">\r\n                                Please enter Rate\r\n                              </mat-error>\r\n                            </mat-form-field>\r\n                          \r\n                          </div>\r\n                          <div class=\"pb-1\">\r\n                            <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                              <mat-label>Final Rate in %</mat-label>\r\n                              <input\r\n                                matInput (keypress)=_keyPress($event)\r\n                                name=\"a_sig\"\r\n                                formControlName=\"finalAmount\"\r\n                                placeholder=\"Rate\"\r\n                                (keydown)=\"getCollatrl($event,collateral.get('finalAmount'))\"\r\n                              />\r\n                              <mat-error *ngIf=\"collateral.get('finalAmount').hasError('required')\">\r\n                                Please enter Final Rate\r\n                              </mat-error>\r\n                            </mat-form-field>\r\n                          \r\n                          </div>\r\n                          <div class=\"pb-1\">\r\n                            </div>\r\n                      \r\n                      \r\n  \r\n                            \r\n  \r\n                        </div>\r\n                    \r\n                      </div>\r\n  \r\n                      <!-- Colletral Section end -->\r\n                    </div>\r\n                    \r\n                   </mat-expansion-panel>\r\n                 \r\n              </mat-accordion>\r\n\r\n            </div>\r\n  \r\n          </form>\r\n        </mat-card-content>\r\n      </mat-card>\r\n      <div\r\n              fxLayout=\"row\"\r\n              fxLayoutAlign=\"space-between center\"\r\n              fxLayoutGap=\"16px\"\r\n              class=\"mt-32\"\r\n            >\r\n              <button mat-button class=\"Backbtn\" (click)=\"goBack()\">\r\n                Back\r\n              </button>\r\n              <button\r\n                mat-raised-button\r\n                color=\"primary\"\r\n                class=\"Nextbtn\"\r\n                (click)=\"onSubmit(collateralForms.value)\"\r\n              >\r\n                Next\r\n              </button>\r\n              <!-- [disabled]=\"collateralForms.invalid\" -->\r\n            </div>\r\n    </div>\r\n  </div>\r\n  </div>\r\n","import { THIS_EXPR } from '@angular/compiler/src/output/output_ast';\r\nimport { ChangeDetectorRef, Component, OnInit } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { Router } from '@angular/router';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { AccountService } from '../account.service';\r\nimport { DigitalsignSummaryComponent } from './digitalsign-summary/digitalsign-summary.component';\r\n\r\n@Component({\r\n  selector: 'app-digital-signing',\r\n  templateUrl: './digital-signing.component.html',\r\n  styleUrls: ['./digital-signing.component.scss']\r\n})\r\nexport class DigitalSigningComponent implements OnInit {\r\n\r\n  informations = [\r\n    {\r\n      'id':1,\r\n      'title': '1. Digital Signing',\r\n      'content':\"Customer can either sign now or sign later\",\r\n      'percentage':70,\r\n      'status':'Pending',\r\n      'state': 'application/digital-sign/options',\r\n      'avatar':\"assets/images/esign.jpg\"\r\n\r\n    }\r\n  ];\r\n\r\n  accountId:any;\r\n  isEsignScreen:boolean = false;\r\n  accountInfo: any;\r\n  constructor(private router:Router,public dialog: MatDialog,private ls: LocalStoreService,private cdr:ChangeDetectorRef ,private accountService:AccountService) { }\r\n\r\n  ngOnInit(){\r\n    this.accountId = this.ls.getItem('accountId');\r\n    this.isEsignScreen = this.ls.getItem('eSignStage');\r\n\r\n    this.accountService.refresh.subscribe((res: any) => {\r\n      this.accountId = this.ls.getItem('accountId');\r\n      this.isEsignScreen = this.ls.getItem('eSignStage');\r\n    \r\n      this.cdr.markForCheck();\r\n    });\r\n    this.accountInfo = this.ls.getItem('EDIT-CREATEACCCIF');\r\n    console.log(this.accountInfo);\r\n    // if(this.accountInfo){\r\n     \r\n    //   this.ls.setItem('eSignStage',true);\r\n    //   this.ls.setItem('approvalStage',true);\r\n    //   this.accountId=this.accountInfo.businessProductAccount.accountId;\r\n    // // this.ls.removeItem('EDIT-CREATEACCCIF');\r\n    // }\r\n    \r\n  }\r\n\r\n  goToDetail(item){\r\n    console.log(item);\r\n    this.router.navigate([`/home/${item.state}`]);\r\n  }\r\n  goToDigitalSign() {\r\n    const dialogRef = this.dialog.open(DigitalsignSummaryComponent, { \r\n      height: '55%',\r\n      width: '40%',\r\n      disableClose: true });\r\n    dialogRef.afterClosed().subscribe((submit) => {\r\n    })\r\n\r\n  }\r\n}\r\n","<div fxLayout=\"row\" class=\"matcard-size\">\r\n  <div fxFlex=\"100\">\r\n    <!-- <div class=\"propic text-center\">\r\n          <img src=\"assets/images/face-7.png\" alt=\"\" class=\"w-80\" />\r\n        </div> -->\r\n    <div class=\"profile-pic text-center\">\r\n      <img src=\"assets/images/face-7.png\" class=\"main-profile-img\" />\r\n      <i class=\"fa fa-edit upload-icon\"></i>\r\n    </div>\r\n    <div class=\"profile-title text-center mt-8\">\r\n      <div class=\"main-title1\"><b>Create New Customer</b></div>\r\n      <div class=\"text-muted1\">\r\n        Create New Customer Account with bank XYZ bank in a better way.\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<div fxLayout=\"row wrap\" class=\"mt-12\">\r\n  <div fxFlex=\"50\" fxFlex.gt-sm=\"50\" fxFlex.sm=\"50\">\r\n    <!-- [ngClass]=\"{'not-active':item.status == ''}\" -->\r\n    <!-- Card 1 start-->\r\n    <mat-card>\r\n      <mat-card-header>\r\n        <mat-card-title class=\"title-header\">1. Digital Signing</mat-card-title>\r\n        <!-- <mat-card-subtitle> {{ item?.content }}</mat-card-subtitle> -->\r\n      </mat-card-header>\r\n      <mat-card-content>\r\n        <div fxLayout=\"row\" fxLayoutGap=\"10px\" fxLayoutAlign=\"space-between start\" class=\"description\">\r\n          <div fxFlex=\"50%\" class=\"notActive\">\r\n            <p class=\"pl-18\">Customer can either sign now or sign later</p>\r\n          </div>\r\n          <div fxFlex=\"50%\">\r\n            <img [src]=\"'assets/images/svg/digi.svg'\" class=\"card-img\" />\r\n          </div>\r\n        </div>\r\n        <!--begin::Progress-->\r\n        <div class=\"mb-1\" *ngIf=\"isEsignScreen\">\r\n          <mat-progress-bar [color]=\"'primary'\" mode=\"determinate\" [value]=\"100\" class=\"rounded\" style=\"height: 6px\">\r\n          </mat-progress-bar>\r\n          <p class=\"m-0 text-right\">Completed</p>\r\n          <!-- <span class=\"text-muted\">| {{ item.percentage }}%</span> -->\r\n        </div>\r\n        <!--end::Progress-->\r\n      </mat-card-content>\r\n      <!--begin:: Card body-->\r\n      <mat-divider></mat-divider>\r\n      <mat-card-actions>\r\n        <ng-container *ngIf=\"isEsignScreen\">\r\n          <button mat-button (click)=\"goToDigitalSign()\" color=\"primary\" class=\"pl-27\">\r\n            View Details <mat-icon>chevron_right</mat-icon>\r\n          </button>\r\n        </ng-container>\r\n\r\n        <a mat-button [routerLink]=\"[\r\n              '/home/application/digital-sign/options/',\r\n              accountId\r\n            ]\" *ngIf=\"!isEsignScreen\" color=\"primary\" class=\"pl-27\">\r\n          Add Details <mat-icon>chevron_right</mat-icon>\r\n        </a>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n    <!-- Card 1 end -->\r\n  </div>\r\n</div>","import { state } from '@angular/animations';\r\nimport { ChangeDetectorRef, Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, FormArray, Validators, FormControl } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { AppConfirmService } from 'app/shared/services/app-confirm/app-confirm.service';\r\nimport { DataService } from 'app/shared/services/data.service';\r\nimport { DialogService } from 'app/shared/services/dialogs/dialog.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { AccountService } from 'app/views/home/account.service';\r\nimport { UrlService } from 'app/views/home/url.service';\r\nimport * as moment from 'moment';\r\nimport { ApplicationEntryStageService } from 'app/shared/services/application-entry-stage.service';\r\nimport { date } from 'ngx-custom-validators/src/app/date/validator';\r\n\r\n@Component({\r\n  selector: 'app-nominee-details',\r\n  templateUrl: './nominee-details.component.html',\r\n  styleUrls: ['./nominee-details.component.scss']\r\n})\r\nexport class NomineeDetailsComponent implements OnInit {\r\n  panelOpenState = true;\r\n  submitted = false;\r\n  formData = {}\r\n  console = console;\r\n  nomineeForms: FormGroup;\r\n  accountForm: FormGroup;\r\n  accountId: any;\r\n  navSubscription: any;\r\n  routeparams: any;\r\n  showEditOption: boolean = false;\r\n  tomorrow = new Date();\r\n  ageLimit= new Date();\r\n  previousUrl: string = '';\r\n  arrayCountry: any[] = [];\r\n  arrayState: any[] = [];\r\n  arrayCity: any[] = [];\r\n  entityName: string;\r\n  arr: FormArray;\r\n  arrayRelationshipType: any[] = [];\r\n  arrayPrefix: string[];\r\n  arrayState1: string[];\r\n  isSameAddress: boolean= false;\r\n  cifNumber: any;\r\n  address: any;\r\n  existingCustomer: boolean;\r\n  expandAddress: any = false;\r\n  isAllSameDigitVal: boolean=false;\r\n  isActive: boolean = false;\r\n  overDraftByStatus: boolean = false;\r\n  accountInfo: any;\r\n  relationArr: any[];\r\n  prefixFlag: boolean=false;\r\n  prefixFlag1: boolean = false;\r\n\r\n\r\n  constructor(private router: Router, private dataService: DataService, private accountService: AccountService, private ls: LocalStoreService, private route: ActivatedRoute, private snack: MatSnackBar, private apiService: ApiService, private formBuilder: FormBuilder,private appApiService: ApplicationEntryStageService,\r\n    private confirmService: AppConfirmService, private cdr: ChangeDetectorRef, private urlService: UrlService,\r\n    private dialogService: DialogService,) {\r\n    this.tomorrow.setDate(this.tomorrow.getDate());\r\n    this.ageLimit.setDate(this.ageLimit.getDate()-6574)\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n    this.accountId = this.ls.getItem('accountId');\r\n    this.accountInfo = this.ls.getItem('EDIT-CREATEACCCIF');\r\n    if(this.accountInfo){\r\n      this.accountId=this.accountInfo.businessProductAccount.accountId\r\n    }\r\n    let isNomineeScreen: boolean = JSON.parse(this.ls.getItem('ACC_NOMINEE_DONE'));\r\n    this.getCountryName(\"country\");\r\n    this.getAllAuthCities();\r\n    this.getRelationShipType(\"relationship_type\");\r\n    this.getPrefixValue(\"prefix\");\r\n\r\n    if (this.accountId != null && isNomineeScreen) {\r\n      this.showEditOption = true;\r\n      this.gettingNomineeDetail();\r\n    } else {\r\n      this.showEditOption = false;\r\n      this.buildNomineeForm([], false);\r\n    }\r\n\r\n    this.urlService.previousUrl$\r\n      .subscribe((previousUrl: string) => {\r\n        this.previousUrl = previousUrl\r\n      });\r\n\r\n      this.cifNumber=this.ls.getItem('CIF_NUM_PRIMARY');\r\n    this.console.log(\"cifNumber=\", this.cifNumber);\r\n\r\n\r\n  }\r\n\r\n  // convenience getters for easy access to form fields\r\n  get f() { return this.nomineeForms.controls; }\r\n  get n() { return this.f.nominees as FormArray; }\r\n\r\n\r\n  gettingNomineeDetail() {\r\n    this.apiService.gettingNomineeDetails(this.accountId)\r\n      .subscribe((resp: any) => {\r\n        if(resp){\r\n          this.apiService.getDropDownValues1('state',resp.nominees[0].country).subscribe((data) => {\r\n            this.arrayState = data;\r\n            console.log(data);\r\n            this.apiService.getDropDownValues1('city',resp.nominees[0].state).subscribe((data1) => {\r\n              this.arrayCity = data1;\r\n               this.buildNomineeForm(resp,true);\r\n          });\r\n        });\r\n        }\r\n      });\r\n  }\r\n  buildNomineeForm(data?, isResponse?: boolean) {\r\n    this.nomineeForms = this.formBuilder.group({\r\n      nominees: this.formBuilder.array(isResponse ? [] : [this.addFormGroup()])\r\n    });\r\n    if (isResponse) {\r\n      for (let index = 0; index < data.nominees.length; index++) {\r\n        const nominee = data.nominees[index];\r\n        this.expandAddress = nominee.isAddrSameAsApplicant;\r\n        nominee.dateOfBirth = moment(nominee.dateOfBirth).format();\r\n        if(nominee.isNomineeMinor){\r\n          nominee.guardianDetails[0].dateOfBirth = moment(nominee.guardianDetails[0].dateOfBirth).format();\r\n        }\r\n      }\r\n      this.addGroup(data);\r\n    }\r\n  }\r\n\r\n  getApplicantAddress(){\r\n    this.appApiService.fetchByCif(this.cifNumber).subscribe((data: any)=>{\r\n       console.log(\"data for ADDRESS\", data)\r\n      this.address = data.customerInfoList[0].userAddress[0];\r\n      console.log(\"address\", this.address);\r\n      this.console.log(\"checking nominee\", this.nomineeForms.controls['nominees']);\r\n      let nomineeAddress=  <FormArray>this.nomineeForms.controls['nominees'];\r\n      this.console.log(\"length\", nomineeAddress.length);\r\n      let nomineeAddress1=nomineeAddress.controls[nomineeAddress.length-1];\r\n      // for(let i=0; i<nomineeAddress.length;i++){\r\n      //   let nomineeAddress1=nomineeAddress.controls[i];\r\n\r\n      // }\r\n      //calling selectstate dropdown\r\n      this.getStateName(this.address.country);\r\n      // this.getCityName(this.address.state);\r\n\r\n      nomineeAddress1.get('zipCode').setValue(this.address.zipCode);\r\n      nomineeAddress1.get('street').setValue(this.address.address1);\r\n      nomineeAddress1.get('locality').setValue(this.address.address2);\r\n      nomineeAddress1.get('building').setValue(this.address.address1);\r\n      nomineeAddress1.get('country').setValue(this.address.country);\r\n      nomineeAddress1.get('state').setValue(this.address.state);\r\n      nomineeAddress1.get('city').setValue(this.address.city);\r\n    });\r\n  }\r\n\r\n  changeClient(prefix,relationshipType,type){  \r\n    if(prefix && relationshipType){\r\n    if ((prefix == \"Mr\" && (relationshipType == \"Father\" ||relationshipType == \"Brother\" || relationshipType == \"Spouse\" )) || ((prefix==\"Ms\" || prefix==\"Mrs\") && (relationshipType==\"Mother\" || relationshipType==\"Sister\"))){\r\n      if(type == 'nominee'){\r\n        this.prefixFlag=false;\r\n      }\r\n       else if(type == 'guardian'){\r\n        this.prefixFlag1 = false\r\n       }\r\n    }  else {\r\n      if(type == 'nominee'){\r\n        this.prefixFlag=true;\r\n      }\r\n       else if(type == 'guardian'){\r\n        this.prefixFlag1 = true;\r\n    }\r\n    this.snack.open(\"Prefix and Relation Type does not match!\", \"OK\", {\r\n      duration: 4000,\r\n      verticalPosition: \"top\",\r\n      horizontalPosition: \"right\",\r\n    });\r\n    }\r\n  }  \r\n\r\n    \r\n  }\r\n\r\n\r\n  clickToggle(event){\r\n    this.expandAddress = event.checked;\r\n    if(event.checked==true){\r\n      this.getApplicantAddress();\r\n    }else{\r\n      let nomineeAddress=  <FormArray>this.nomineeForms.controls['nominees'];\r\n      this.console.log(\"length\", nomineeAddress.length);\r\n      let nomineeAddress1=nomineeAddress.controls[nomineeAddress.length-1];\r\n      nomineeAddress1.get('zipCode').reset();\r\n      nomineeAddress1.get('street').reset();      \r\n      nomineeAddress1.get('locality').reset();      \r\n      nomineeAddress1.get('building').reset();      \r\n      nomineeAddress1.get('country').reset();      \r\n      nomineeAddress1.get('state').reset();      \r\n      nomineeAddress1.get('city').reset();      \r\n    }\r\n    \r\n  }\r\n\r\n  // buildNomineeFormWithGuardian(data?, isResponse?: boolean) {\r\n  //   this.nomineeForms = this.formBuilder.group({\r\n  //     nominees: this.formBuilder.array([this.addNomineeFormGroup()])\r\n  //   });\r\n  //   if (isResponse) {\r\n  //     for(let i=0;i<this.nomineeForms.value.nominees.length;i++) {\r\n  //       data[i].dateOfBirth = moment(data[i].dateOfBirth).format();\r\n  //       if(data[i].isNomineeMinor) {\r\n  //         data[i].guardianDetails[0].dateOfBirth = moment(data[i].guardianDetails[0].dateOfBirth).format();\r\n  //       }\r\n  //     }\r\n  //     this.addGroup(data);\r\n  //     this.nomineeForms.get('nominees').patchValue(data);\r\n      \r\n  //   }\r\n  // }\r\n\r\n  onChange(control, e): void {\r\n    console.log(\"e,index\", control);\r\n    if (e.checked) {\r\n      this.addGuardian(control);\r\n      console.log(\"e,index\", e);\r\n    } else {\r\n      return control.removeAt(0)\r\n    }\r\n  }\r\n\r\n  addFormGroup(): FormGroup {\r\n    return this.formBuilder.group({\r\n      prefix: ['', Validators.required],\r\n      firstName: ['', Validators.required],\r\n      middleName: [''],\r\n      lastName: ['', Validators.required],\r\n      relationshipType: ['', Validators.required],\r\n      dateOfBirth: ['', Validators.required],\r\n      nomineeId: [''],\r\n      building: ['', Validators.required],\r\n      street: ['', Validators.required],\r\n      locality: ['', Validators.required],\r\n      city: ['', Validators.required],\r\n      state: ['', Validators.required],\r\n      country: ['', Validators.required],\r\n      zipCode: ['', [Validators.required,Validators.pattern(\"^[0-9]{5,10}$\")]],\r\n      phoneNumber: ['', Validators.pattern(\"^[0-9]{10,12}$\")],\r\n      mobileNumber: ['', [Validators.pattern(\"^[0-9]{10,12}$\")]],\r\n      isAddrSameAsApplicant: [false, Validators.required],\r\n       isNomineeMinor: [false, Validators.required],\r\n      email: ['', [Validators.required, Validators.pattern('^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\\\.[a-zA-Z]{2,4}$')]],\r\n      guardianDetails: this.formBuilder.array([]),\r\n    })\r\n  }\r\n\r\n\r\n  addNominee() {\r\n   this.n.push(this.addFormGroup());\r\n  }\r\n\r\n  addGroup(data?) {\r\n    for (let index = 0; index < data.nominees.length; index++) {\r\n      const nominee = data.nominees[index];\r\n      console.log(\"INDEX test\",nominee);\r\n      this.n.push(this.formBuilder.group({\r\n        prefix: ['', Validators.required],\r\n        firstName: ['', Validators.required],\r\n        middleName: ['',],\r\n        lastName: ['', Validators.required],\r\n        relationshipType: ['', Validators.required],\r\n        dateOfBirth: ['', Validators.required],\r\n        nomineeId: [''],\r\n        building: ['', Validators.required],\r\n        street: ['', Validators.required],\r\n        locality: ['', Validators.required],\r\n        city: ['', Validators.required],\r\n        state: ['', Validators.required],\r\n        country: ['', Validators.required],\r\n        zipCode: ['', [Validators.required,Validators.minLength(5), Validators.maxLength(10)]],\r\n        phoneNumber: ['',[Validators.required, Validators.pattern(\"^[0-9]{10,12}$\")]],\r\n        mobileNumber: ['', [Validators.pattern(\"^[0-9]{10,12}$\")]],\r\n        isAddrSameAsApplicant: [false, Validators.required],\r\n         isNomineeMinor: [false, Validators.required],\r\n        email: ['', [Validators.required, Validators.pattern('^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\\\.[a-zA-Z]{2,4}$')]],\r\n        guardianDetails: this.formBuilder.array(nominee.isNomineeMinor ? [this.formBuilder.group({\r\n          dateOfBirth: ['', Validators.required],\r\n          firstName: ['', Validators.required],\r\n          guardianId: [''],\r\n          lastName: ['', Validators.required],\r\n          middleName: ['',],\r\n          nomineeId: [''],\r\n          prefix: ['', Validators.required],\r\n          relationshipType: ['', Validators.required]\r\n        })] : [])\r\n      }));\r\n      this.n.at(index).patchValue(nominee);\r\n    }\r\n    \r\n  }\r\n\r\n  private addGuardian(control): FormGroup {\r\n    return control.push(\r\n      this.formBuilder.group({\r\n        prefix: ['', Validators.required],\r\n        firstName: ['', Validators.required],\r\n        middleName: [''],\r\n        nomineeId: [''],\r\n        guardianId: [''],\r\n        lastName: ['', Validators.required],\r\n        relationshipType: ['', Validators.required],\r\n        dateOfBirth: ['', Validators.required]\r\n      }))\r\n  }\r\n  getRelationShipType(key: string){\r\n    this.apiService.getDropDownValues(key).subscribe((data) => {\r\n      this.arrayRelationshipType = data;\r\n      console.log(\"-->\", this.arrayCountry)\r\n    });\r\n  }\r\n  addInput(event) {\r\n    console.log(\"event-------------->\", event, event.target.value);\r\n  }\r\n  addevent(controls, event) {\r\n    let now = new Date();\r\n    now = event.target.value;\r\n    console.log(moment(now).format('YYYY-MM-DD'));\r\n    var birthDate=new Date(moment(now).format('YYYY-MM-DD'))\r\n    this.n.controls[0].patchValue({isNomineeMinor:this.underAgeValidate(birthDate)})\r\n    // console.log(\"event-------------->\", this.nomineeForms, event, event.target.value);\r\n    if (this.underAgeValidate(birthDate)) {\r\n      this.addGuardian(controls);\r\n    } else {\r\n      return controls.removeAt(0)\r\n    }\r\n  }\r\n  underAgeValidate(birthday) {\r\n   // new Date(birthday);\r\n    const diff = Date.now() - birthday.getTime();\r\n    const ageDate = new Date(diff);\r\n    let age = Math.abs(ageDate.getUTCFullYear() - 1970);\r\n      return age < 18;\r\n  };\r\n\r\n  getPrefixValue(key: string) {\r\n    this.apiService.getDropDownValues(key).subscribe((data) => {\r\n      this.arrayPrefix = data;\r\n    });\r\n  }\r\n\r\n  getCountryName(key: string) {\r\n    this.apiService.getAllCountries().subscribe((data: any) => {\r\n     for(let i=0; i<data.length;i++){\r\n       if(data[i].authStatus==='A'){     \r\n         this.arrayCountry.push(data[i].countryName);\r\n       }\r\n     }\r\n   });\r\n }\r\n\r\n getStateName(country,isadd?,index?) {\r\n  console.log(index);\r\n  \r\n  if(isadd){\r\n    this.n.controls[index].get('zipCode').setValue('');\r\n    this.n.controls[index].get('state').setValue('');\r\n    this.n.controls[index].get('city').setValue('');\r\n  }\r\n  this.apiService.getAllCountries().subscribe((data: any) => {\r\n    for(let i=0; i<data.length;i++){       \r\n      if(data[i].countryName == country){\r\n        this.apiService.getStateByCountryId(data[i].id).subscribe((resp: any) => {\r\n        this.arrayState = resp\r\n        })\r\n        break;   \r\n      }\r\n    }\r\n  })\r\n}\r\n\r\n// getCityName(state: any) {\r\n//     this.entityName=\"city\";\r\n//     console.log(state)\r\n//     this.apiService.getDropDownValues1(this.entityName,state).subscribe((data) => {\r\n//       this.arrayCity = data;\r\n//       console.log(\"-->\", this.arrayCity)\r\n//     });\r\n//   }\r\ngetAllAuthCities(){\r\n  this.apiService.getAuthorizedCityInfo().subscribe(res => res.map(r => this.arrayCity.push(r.cityName)))\r\n}\r\nonStateChange(index){\r\n  this.n.controls[index].get('zipCode').setValue('');\r\n  this.n.controls[index].get('city').setValue('');\r\n}\r\nonCityChange(index){\r\n  this.n.controls[index].get('zipCode').setValue('');\r\n}\r\n  _keyPress(event: any) {\r\n    const pattern = /[0-9]/;\r\n    let inputChar = String.fromCharCode(event.charCode);\r\n    if (!pattern.test(inputChar)) {\r\n      event.preventDefault();\r\n\r\n    }\r\n  }\r\n  keyPressAlphanumeric(event) {\r\n    var inp = String.fromCharCode(event.keyCode);\r\n    if (/[a-zA-Z0-9]/.test(inp)) {\r\n      return true;\r\n    } else {\r\n      event.preventDefault();\r\n      return false;\r\n    }\r\n  }\r\n  letterOnly(event) {\r\n    var charCode = event.keyCode;\r\n            if ((charCode > 64 && charCode < 91) || (charCode > 96 && charCode < 123) || charCode == 8)\r\n                return true;\r\n            else\r\n                return false;\r\n  }\r\n\r\n  onSubmit() {\r\n    for(let i=0;i<this.nomineeForms.value.nominees.length;i++) {\r\n      this.nomineeForms.value.nominees[i].dateOfBirth = this.convertDate(this.nomineeForms.value.nominees[i].dateOfBirth);\r\n      if(this.nomineeForms.value.nominees[i].isNomineeMinor) {\r\n        this.nomineeForms.value.nominees[i].guardianDetails[0].dateOfBirth = \r\n            this.convertDate(this.nomineeForms.value.nominees[i].guardianDetails[0].dateOfBirth);\r\n      }\r\n    }\r\n    \r\n    this.submitted = true;\r\n\r\n    let payload = {\r\n      \"productAccountId\": this.accountId,\r\n      \"nominees\": this.nomineeForms.value.nominees\r\n    };\r\n    \r\n    if (this.nomineeForms.invalid) {\r\n      return;\r\n    }\r\n\r\n    if (this.showEditOption) {\r\n      console.log(\"to check nomineeId\",this.nomineeForms.value.nominees);\r\n      this.apiService.updateNominee(this.accountId, payload)\r\n        .subscribe((data: any) => {\r\n          console.log(data);\r\n          this.snack.open('Nominee Updated!', 'OK', { duration: 4000, verticalPosition: 'top', horizontalPosition: 'right' });\r\n          \r\n          this.router.navigate([`/home/application/limit-entry-stage/list/${this.accountId}`]);\r\n        }, (err: any) => {\r\n          console.log(err);\r\n        });\r\n\r\n    } else {\r\n      this.apiService.createNominee(this.accountId, payload)\r\n        .subscribe((data: any) => {\r\n          console.log(data);\r\n          this.snack.open('Nominee Details Saved!', 'OK', { duration: 4000, verticalPosition: 'top', horizontalPosition: 'right' });\r\n          // this.snack.open('Either Secured Overdraft or Unsecured Overdraft Details are Mandatory!', 'OK', { duration: 4000, verticalPosition: 'top', horizontalPosition: 'right' });\r\n          this.ls.setItem('appEntryStage', true);\r\n          this.ls.setItem('ACC_NOMINEE_DONE', true);\r\n          this.accountService.refresh.next();\r\n          let isActivee = this.ls.getItem('overDraftByStatus') || null;\r\n          this.overDraftByStatus = isActivee != null ? isActivee.isActive : false;\r\n          // this.isActive = this.overDraftByStatus;\r\n          this.console.log(\"this.overDraftByStatus\", this.overDraftByStatus)\r\n          \r\n          // console.log(this.isActive);\r\n          if( this.overDraftByStatus === true){\r\n            console.log( this.overDraftByStatus);\r\n            this.dialogService.alertDialog().subscribe((response) => {\r\n              console.log(\"response ::\", response)\r\n              console.log(\"active\", this.overDraftByStatus)\r\n            //   // if (response == \"No\") {\r\n            //   //   this.pancard=false;\r\n            //   //   this.changeValue2_Ocr(docVal);\r\n            //   // }\r\n            //   // if (response == \"Yes\") {\r\n            //   //   console.log(\"line 183\");\r\n            //   // }\r\n            });\r\n            this.router.navigate([`/home/application/limit-entry-stage/list/${this.accountId}`]);\r\n           }\r\n          else{\r\n            console.log(\"active\",isActivee)\r\n            this.router.navigate([`/home/application/limit-entry-stage/list/${this.accountId}`]);\r\n          }\r\n          \r\n        }, (err: any) => {\r\n          console.log(err);\r\n        });\r\n    }\r\n  }\r\n\r\n  onReset() {\r\n    // reset whole form back to initial state\r\n    this.submitted = false;\r\n    this.nomineeForms.reset();\r\n    this.n.clear();\r\n  }\r\n\r\n  onClear() {\r\n    // clear errors and reset ticket fields\r\n    this.submitted = false;\r\n    this.n.reset();\r\n  }\r\n\r\n  removeNominee(i: number) {\r\n    console.log(\"i\", i);\r\n    let nomineeId = this.n.at(i).get('nomineeId').value;\r\n    console.log(\"nomineeId ::\",nomineeId)\r\n    this.confirmService\r\n      .confirm({ title: \"Confirm\", message: \"Are you sure want to remove?\", ok: \"Yes\", cancel: \"No\" })\r\n      .subscribe(res => {\r\n        console.log(\"res:: removed \", res);\r\n        if (res) {\r\n          this.apiService.deleteNomineeById(nomineeId, 'ADMIN')\r\n          .subscribe((data:any) => {\r\n            console.log(\"data\", data);\r\n        },err=>{\r\n          const control = <FormArray>this.nomineeForms.controls['nominees'];\r\n          control.removeAt(i);\r\n          if (err.status === 200) {\r\n            this.snack.open('Record Deleted Successfully', 'OK', {\r\n              duration: 4000,\r\n              verticalPosition: 'top',\r\n              horizontalPosition: 'right'\r\n            });\r\n            console.log(\"Deleting length\",control.length);\r\n                if(control.length == 0){\r\n            \r\n                  this.ls.setItem('ACC_NOMINEE_DONE', false);\r\n                  this.accountService.refresh.next();\r\n                  // this.router.navigate([`/home/application/list/${this.accountId}`]);\r\n                  this.router.navigate([`/home/application/list`]);\r\n                }\r\n                else{\r\n                  this.onReset();\r\n                  this.gettingNomineeDetail();\r\n                }\r\n                \r\n              \r\n          }\r\n        });\r\n      } else return;\r\n      });\r\n  }\r\n\r\n  goBack() {\r\n    // this.router.navigate([this.previousUrl]);\r\n    this.router.navigate([`home/application/account-service/${this.accountId}`]);\r\n  }\r\n\r\n  convertDate(value) {\r\n    let date = moment(value).format('YYYY-MMM-DD'); // ISO 8601 format\r\n    // let date = new Date(value).format('yyyy-MMM-dd');\r\n    console.log(\"date\", date);\r\n    if (date)\r\n      return date;\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    //Called once, before the instance is destroyed.\r\n    //Add 'implements OnDestroy' to the class.\r\n    this.dataService.sendNavParam({});\r\n  }\r\n\r\n  isAllSameDigit(event) {\r\n    let count = 0, number = event.target.value;\r\n    if (number != '') {\r\n      for (var i = 0; i < number.length; i++) {\r\n        if (0 == number[i]) {\r\n          count++;\r\n        }\r\n      }\r\n      console.log('number :: ', number);\r\n      console.log('isAllSameDigitVal :: ', count , number.length)\r\n      if (count == number.length) {\r\n        console.log('if loop')\r\n        this.isAllSameDigitVal = true;\r\n      }\r\n      else {\r\n        this.isAllSameDigitVal = false;\r\n      }\r\n    }else{\r\n      this.isAllSameDigitVal = false;\r\n    }\r\n  }\r\n  getCityandStateByZipcode(countryName, zipcode, index) { \r\n    if (countryName && zipcode.length >= 6) {\r\n      this.apiService.fetchStateCityByZipcode(countryName, zipcode).subscribe((res: any) => {\r\n        if(res){\r\n          this.n.controls[index].get('state').setValue(res.stateName);\r\n          this.n.controls[index].get('city').setValue(res.cityName);\r\n        }\r\n        else{\r\n          this.snack.open(\"Entered Zipcode does not exists\", \"OK\", {\r\n            duration: 4000,\r\n            verticalPosition: \"top\",\r\n            horizontalPosition: \"right\",\r\n          });        }\r\n      })\r\n    }\r\n  }\r\n}\r\n","<div class=\"matcard-size\">\r\n<div fxLayout=\"row\" fxLayout.lt-sm=\"column\" class=\"app-top-toolbar\">\r\n  <!-- <button mat-icon-button class=\"mr-1\" (click)=\"toggleSideNav()\"><mat-icon>short_text</mat-icon> </button> -->\r\n  <span fxFlex></span>\r\n  <!-- <span fxFlex=\"20px\"></span> -->\r\n  <!-- <button mat-button rounded color=\"primary\" [disabled]=\"nomineeForms?.invalid\" (click)=\"addNominee()\">\r\n    <mat-icon>add</mat-icon> ADD NOMINEE\r\n  </button> -->\r\n\r\n</div>\r\n<div fxLayout=\"row\">\r\n  <div fxFlex=\"100\">\r\n    <div class=\"propic text-center\">\r\n      <img src=\"assets/images/svg/Group 47.svg\" alt=\"\" class=\"w-90\" />\r\n    </div>\r\n    <div class=\"profile-title text-center mt-8\">\r\n      <div class=\"main-title1\">Nominee Details</div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<div fxLayout=\"row\">\r\n  <div fxFlex=\"100\">\r\n    <mat-card class=\"p-0\">\r\n      <mat-card-title>\r\n        <fieldset>\r\n        <legend visible=\"true\">Nominee Details</legend>\r\n      </fieldset>\r\n      </mat-card-title>\r\n      <mat-card-content>\r\n        <form *ngIf=\"nomineeForms\" [formGroup]=\"nomineeForms\">\r\n          <div *ngFor=\"let nominee of n.controls; let i = index\">\r\n            <mat-accordion>\r\n              <mat-expansion-panel expanded=\"true\" class=\"mb-8\" (opened)=\"panelOpenState = true\"\r\n                (closed)=\"panelOpenState = false\">\r\n                <mat-expansion-panel-header>\r\n                  <mat-panel-title>\r\n                    {{ showEditOption == true ? 'Edit' :'Create' }} Nominee {{ i + 1 }}\r\n                  </mat-panel-title>\r\n                </mat-expansion-panel-header>\r\n                <div [formGroup]=\"nominee\">\r\n                  <!-- Nominee Section start-->\r\n                  <div fxLayout=\"row\" fxLayoutGap=\"25px\">\r\n                    <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-1\">\r\n                      <div class=\"pb-1\">\r\n                        <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                          <mat-label>Prefix*</mat-label>\r\n                          <mat-select name=\"prefix\" formControlName=\"prefix\" (selectionChange)=\"changeClient($event.value,nominee.get('relationshipType').value,'nominee')\">\r\n                            <mat-option *ngFor=\"let prefix of arrayPrefix\" [value]=\"prefix\" >\r\n                              {{prefix}}\r\n                            </mat-option>\r\n                          </mat-select>\r\n                          <mat-error *ngIf=\"nominee.get('prefix').hasError('required')\">\r\n                            Prefix is Required!\r\n                          </mat-error>\r\n\r\n                        </mat-form-field>\r\n                      </div>\r\n\r\n                      <div fxLayout=\"row\" fxLayoutGap=\"10px\" fxLayoutAlign=\"space-between start\">\r\n                        <div fxFlex=\"50%\">\r\n                          <div class=\"pb-1\">\r\n                            <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                              <mat-label>First Name*</mat-label>\r\n                              <input matInput name=\"fname\" formControlName=\"firstName\" placeholder=\"First Name\"\r\n                                (keypress)=\"letterOnly($event)\" />\r\n                              <mat-error *ngIf=\"nominee.get('firstName').hasError('required')\">\r\n                                First Name is Required!\r\n                              </mat-error>\r\n                              <mat-error *ngIf=\"nominee.get('firstName').hasError('pattern')\">\r\n                                Only Alphabets allowed\r\n                              </mat-error>\r\n                            </mat-form-field>\r\n                          </div>\r\n                        </div>\r\n                        <div fxFlex=\"50%\">\r\n                          <div class=\"pb-1\">\r\n                            <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                              <mat-label>Middle Name</mat-label>\r\n                              <input matInput name=\"mname\" formControlName=\"middleName\" placeholder=\"Middle Name\"\r\n                                (keypress)=\"letterOnly($event)\" />\r\n                              <mat-error *ngIf=\"nominee.get('middleName').hasError('pattern')\">\r\n                                Only Alphabets allowed\r\n                              </mat-error>\r\n                            </mat-form-field>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div fxLayout=\"row\" fxLayoutGap=\"10px\" fxLayoutAlign=\"space-between start\">\r\n                        <div fxFlex=\"50%\">\r\n                          <div class=\"pb-1\">\r\n                            <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                              <mat-label>Last Name*</mat-label>\r\n                              <input matInput name=\"lname\" formControlName=\"lastName\" placeholder=\"Last Name\"\r\n                                (keypress)=\"letterOnly($event)\" />\r\n                              <mat-error *ngIf=\"nominee.get('lastName').hasError('required')\">\r\n                                Last Name is Required!\r\n                              </mat-error>\r\n                              <mat-error *ngIf=\"nominee.get('lastName').hasError('pattern')\">\r\n                                Only Alphabets allowed\r\n                              </mat-error>\r\n                            </mat-form-field>\r\n                          </div>\r\n                        </div>\r\n                        <div fxFlex=\"50%\">\r\n                          <div class=\"pb-1\">\r\n                            <!-- <mat-form-field\r\n                                  appearance=\"outline\"\r\n                                  class=\"full-width\"\r\n                                >\r\n                                  <mat-label>Relationship Type*</mat-label>\r\n                                  <input\r\n                                    matInput\r\n                                    name=\"rtype\"\r\n                                    formControlName=\"relationshipType\"\r\n                                    placeholder=\"Relation Type\"\r\n                                  />\r\n                                  <mat-error *ngIf=\"nominee.get('relationshipType').hasError('required')\">\r\n                                    Relationship Type is Required!\r\n                                  </mat-error>\r\n                                </mat-form-field> -->\r\n\r\n                            <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                              <mat-label>Relationship Type*</mat-label>\r\n                              <mat-select name=\"rtype\" formControlName=\"relationshipType\" (selectionChange)=\"changeClient(nominee.get('prefix').value,$event.value,'nominee')\" [value]=\"relationshipType\">\r\n                                <mat-option *ngFor=\"let relationshipType of arrayRelationshipType\"\r\n                                  [value]=\"relationshipType\">\r\n                                  {{relationshipType}}\r\n                                </mat-option>\r\n\r\n                              </mat-select>\r\n                              <mat-error *ngIf=\"nominee.get('relationshipType').hasError('required')\">\r\n                                Relationship Type is Required!\r\n                              </mat-error>\r\n                              <mat-hint class=\"ErrMsg\" *ngIf=\"nominee.get('prefix').touched && prefixFlag\">\r\n                                &nbsp; Prefix and Relationship Type does not match!\r\n                             </mat-hint>\r\n                            </mat-form-field>\r\n\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div class=\"pb-1\">\r\n                        <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                          <mat-label>Date of Birth*</mat-label>\r\n                          <input matInput name=\"dob\" readonly formControlName=\"dateOfBirth\" placeholder=\"Date of Birth\"\r\n                            [matDatepicker]=\"appDatepicker\" [max]=\"tomorrow\" (dateInput)=\"addInput($event)\" (dateChange)=\"addevent(nominee.controls.guardianDetails,$event)\" />\r\n                          <mat-datepicker-toggle matSuffix [for]=\"appDatepicker\"></mat-datepicker-toggle>\r\n                          <mat-error *ngIf=\"nominee.get('dateOfBirth').hasError('required')\">\r\n                            Date of Birth is Required!\r\n                          </mat-error>\r\n                        </mat-form-field>\r\n                        <mat-datepicker #appDatepicker></mat-datepicker>\r\n                      </div>\r\n\r\n                      <div class=\"pb-1\">\r\n                        Is the Nominee a Minor?\r\n                        <mat-slide-toggle name=\"isNomineeMinor\" formControlName=\"isNomineeMinor\"\r\n                          (change)=\"onChange(nominee.controls.guardianDetails,$event,i)\" >\r\n                        </mat-slide-toggle>\r\n                      </div>\r\n\r\n                      <div class=\"mt-16\"></div>\r\n\r\n\r\n\r\n                    </div>\r\n                  </div>\r\n                  <!-- Nominee Section end -->\r\n                  <!-- Guardian section start -->\r\n                  <div formArrayName=\"guardianDetails\">\r\n                    <div *ngFor=\"let guardian of nominee.get('guardianDetails').controls; let j=index\">\r\n                      <div class=\"card-title-text\">\r\n                        <h3><strong>Guardians Details</strong></h3>\r\n                      </div>\r\n                      <div [formGroupName]=\"j\" fxLayout=\"row\" fxLayoutGap=\"25px\">\r\n\r\n                        <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-1\">\r\n                          <div class=\"pb-1\">\r\n                            <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                              <mat-label>Prefix*</mat-label>\r\n                              <mat-select name=\"g_prefix\" formControlName=\"prefix\" (selectionChange)=\"changeClient($event.value,guardian.get('relationshipType').value,'guardian')\">\r\n                                <mat-option *ngFor=\"let prefix of arrayPrefix\" [value]=\"prefix\">\r\n                                  {{prefix}}\r\n                                </mat-option>\r\n                              </mat-select>\r\n                              <mat-error *ngIf=\"guardian.get('prefix').hasError('required')\">\r\n                                Prefix is Required!\r\n                              </mat-error>\r\n                            </mat-form-field>\r\n                          </div>\r\n\r\n                          <div fxLayout=\"row\" fxLayoutGap=\"10px\" fxLayoutAlign=\"space-between start\">\r\n                            <div fxFlex=\"50%\">\r\n                              <div class=\"pb-1\">\r\n                                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                  <mat-label>First Name*</mat-label>\r\n                                  <input matInput name=\"g_fname\" formControlName=\"firstName\" placeholder=\"First Name\"\r\n                                    (keypress)=\"letterOnly($event)\" />\r\n                                  <mat-error *ngIf=\"guardian.get('firstName').hasError('required')\">\r\n                                    First Name is Required!\r\n                                  </mat-error>\r\n                                </mat-form-field>\r\n                              </div>\r\n                            </div>\r\n                            <div fxFlex=\"50%\">\r\n                              <div class=\"pb-1\">\r\n                                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                  <mat-label>Middle Name</mat-label>\r\n                                  <input matInput name=\"g_mname\" formControlName=\"middleName\" placeholder=\"Middle Name\"\r\n                                    (keypress)=\"letterOnly($event)\" />\r\n                                </mat-form-field>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n\r\n                          <div fxLayout=\"row\" fxLayoutGap=\"10px\" fxLayoutAlign=\"space-between start\">\r\n                            <div fxFlex=\"50%\">\r\n                              <div class=\"pb-1\">\r\n                                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                  <mat-label>Last Name*</mat-label>\r\n                                  <input matInput name=\"g_lname\" formControlName=\"lastName\" placeholder=\"Last Name\"\r\n                                    (keypress)=\"letterOnly($event)\" />\r\n                                  <mat-error *ngIf=\"guardian.get('lastName').hasError('required')\">\r\n                                    Last Name is Required!\r\n                                  </mat-error>\r\n                                </mat-form-field>\r\n                              </div>\r\n                            </div>\r\n                            <div fxFlex=\"50%\">\r\n                              <div class=\"pb-1\">\r\n                                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                  <mat-label>Relationship Type*</mat-label>\r\n                                  <mat-select name=\"rtype\" formControlName=\"relationshipType\" (selectionChange)=\"changeClient(guardian.get('prefix').value,$event.value,'guardian')\">\r\n                                    <mat-option *ngFor=\"let relationshipType of arrayRelationshipType\"\r\n                                      [value]=\"relationshipType\">\r\n                                      {{relationshipType}}\r\n                                    </mat-option>\r\n                                  </mat-select>\r\n                                  <mat-error *ngIf=\"guardian.get('relationshipType').hasError('required')\">\r\n                                    Relationship Type is Required!\r\n                                  </mat-error>\r\n                                  <mat-hint class=\"ErrMsg\" *ngIf=\"guardian.get('prefix').touched && prefixFlag1\">\r\n                                    &nbsp; Prefix and Relationship Type does not match!\r\n                                 </mat-hint>\r\n                                </mat-form-field>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n\r\n                          <div class=\"pb-1\">\r\n                            <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                              <mat-label>Date of Birth*</mat-label>\r\n                              <input matInput readonly name=\"g_dob\" formControlName=\"dateOfBirth\"\r\n                                placeholder=\"Date of Birth\" [matDatepicker]=\"appDatepicker1\" [max]=\"ageLimit\" />\r\n\r\n                              <mat-datepicker-toggle matSuffix [for]=\"appDatepicker1\"></mat-datepicker-toggle>\r\n                              <mat-error *ngIf=\"guardian.get('dateOfBirth').hasError('required')\">\r\n                                Date of Birth is Required!\r\n                              </mat-error>\r\n                            </mat-form-field>\r\n                            <mat-datepicker #appDatepicker1></mat-datepicker>\r\n                          </div>\r\n                          <div class=\"mt-16\"></div>\r\n\r\n                        </div>\r\n                      </div>\r\n\r\n                    </div>\r\n\r\n                  </div>\r\n                  <!-- Guardian section end -->\r\n                  <!-- Address Section start-->\r\n                  <div class=\"pb-1\">\r\n                    Same address as Applicant?\r\n                    <mat-slide-toggle name=\"isAddrSameAsApplicant\"\r\n                      formControlName=\"isAddrSameAsApplicant\" (change)=\"clickToggle($event)\">\r\n                    </mat-slide-toggle>\r\n                  </div>\r\n\r\n                  <mat-accordion>\r\n                    <mat-expansion-panel class=\"mb-8\" [expanded]=\"expandAddress\">\r\n                      <mat-expansion-panel-header>\r\n                        <mat-panel-title>Nominee Address </mat-panel-title>\r\n                      </mat-expansion-panel-header>\r\n                      <div fxLayout=\"row\" fxLayoutGap=\"25px\">\r\n                        <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-1\">\r\n                          <div class=\"pb-1\">\r\n                            <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                              <mat-label>Street*</mat-label>\r\n                              <input matInput name=\"a_street\" formControlName=\"street\" placeholder=\"Street\"  (keypress)=\"keyPressAlphanumeric($event)\"/>\r\n                              <mat-error *ngIf=\"nominee.get('street').hasError('required')\">\r\n                                Street is Required!\r\n                              </mat-error>\r\n                            </mat-form-field>\r\n                          </div>\r\n\r\n\r\n                          <div class=\"pb-1\">\r\n                            <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                              <mat-label>Locality*</mat-label>\r\n                              <input matInput name=\"a_locality\" formControlName=\"locality\" placeholder=\"Locality\" (keypress)=\"keyPressAlphanumeric($event)\" />\r\n                              <mat-error *ngIf=\"nominee.get('locality').hasError('required')\">\r\n                                Locality is Required!\r\n                              </mat-error>\r\n                            </mat-form-field>\r\n                          </div>\r\n\r\n                          <div class=\"pb-1\">\r\n                            <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                              <mat-label>Zip Code*</mat-label>\r\n                              <input matInput minlength=\"5\" maxlength=\"10\" onlyNumber type=\"text\"\r\n                                (keypress)=_keyPress($event) name=\"a_zip\" formControlName=\"zipCode\"\r\n                                placeholder=\"Zip Code\" (keyup)=\"isAllSameDigit($event)\" (change)=\"getCityandStateByZipcode(nominee.controls['country'].value,$event.target.value,i)\" />\r\n                              <mat-error *ngIf=\"nominee.get('zipCode').hasError('required') &&\r\n                                  !nominee.controls['zipCode'].valid && nominee.controls['zipCode']?.touched\">\r\n                                Please enter Zip Code!(5-10 digits)\r\n                              </mat-error>\r\n                            </mat-form-field>\r\n                            <h5 *ngIf=\"isAllSameDigitVal\" style=\"color: #E74C3C;\">Please enter valid Zip Code!\r\n                            </h5>\r\n                          </div>\r\n\r\n                          <div class=\"pb-1\">\r\n                            <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                              <mat-label>City*</mat-label>\r\n                              <mat-select name=\"city\" formControlName=\"city\" (selectionChange)=\"onCityChange(i)\">\r\n                                <mat-option *ngFor=\"let city of arrayCity\" [value]=\"city\">{{city}}\r\n                                </mat-option>\r\n                              </mat-select>\r\n                              <mat-error *ngIf=\"nominee.get('city').hasError('required')\">\r\n                                City is Required!\r\n                              </mat-error>\r\n                            </mat-form-field>\r\n                          </div>\r\n                        </div>\r\n                        <div fxFlex=\"100\" fxFlex.gt-xs=\"50\">\r\n                          <div class=\"pb-1\">\r\n                            <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                              <mat-label>Building*</mat-label>\r\n                              <input matInput name=\"a_building\" formControlName=\"building\" placeholder=\"Building\" (keypress)=\"keyPressAlphanumeric($event)\" />\r\n                              <mat-error *ngIf=\"nominee.get('building').hasError('required')\">\r\n                                Building is Required!\r\n                              </mat-error>\r\n                            </mat-form-field>\r\n                          </div>\r\n\r\n\r\n                          <div class=\"pb-1\">\r\n                            <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                              <mat-label>Country*</mat-label>\r\n                              <mat-select name=\"country\" formControlName=\"country\"\r\n                                (selectionChange)=\"getStateName($event.value,true,i)\"\r\n                                >\r\n                                <mat-option *ngFor=\"let country of arrayCountry\" [value]=\"country\">\r\n                                  {{country}}\r\n                                </mat-option>\r\n                              </mat-select>\r\n                              <mat-error *ngIf=\"nominee.get('country').hasError('required')\">\r\n                                Country is Required!\r\n                              </mat-error>\r\n                            </mat-form-field>\r\n                          </div>\r\n\r\n                          <div class=\"pb-1\">\r\n                            <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                              <mat-label>State*</mat-label>\r\n                              <mat-select name=\"state\" formControlName=\"state\" (selectionChange)=\"onStateChange(i)\">\r\n                                <mat-option *ngFor=\"let state of arrayState\" [value]=\"state.stateName\">{{state.stateName}}\r\n                                </mat-option>\r\n\r\n                              </mat-select>\r\n                              <mat-error *ngIf=\"nominee.get('state').hasError('required')\">\r\n                                State is Required!\r\n                              </mat-error>\r\n                            </mat-form-field>\r\n                          </div>\r\n\r\n                          \r\n\r\n                        </div>\r\n                      </div>\r\n                    </mat-expansion-panel>\r\n                  </mat-accordion>\r\n                  <!-- Address Section end -->\r\n                  <!-- Contact Information -->\r\n                  <mat-accordion>\r\n                    <mat-expansion-panel class=\"mb-8\" expanded=\"false\">\r\n                      <mat-expansion-panel-header>\r\n                        <mat-panel-title>Contact Information </mat-panel-title>\r\n                      </mat-expansion-panel-header>\r\n\r\n                      <div fxLayout=\"row\" fxLayoutGap=\"25px\">\r\n                        <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-1\">\r\n                          <div class=\"pb-1\">\r\n                            <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                              <mat-label>Mobile Number*</mat-label>\r\n                              <input matInput formControlName=\"phoneNumber\" name=\"phone\" placeholder=\"Mobile Number\"\r\n                                 maxlength=10 (keypress)=_keyPress($event) />\r\n                              <!-- <mat-error *ngIf=\"nominee.get('phoneNumber').hasError('required')\">\r\n                                Mobile Number is Required!\r\n                              </mat-error> -->\r\n                              <mat-error *ngIf=\"nominee.get('phoneNumber').hasError('pattern')\">\r\n                                Please Enter 10 Digit Mobile Number!\r\n                              </mat-error>\r\n\r\n                            </mat-form-field>\r\n                          </div>\r\n                          <div class=\"pb-1\">\r\n                            <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                              <mat-label>E-mail*</mat-label>\r\n                              <input matInput name=\"email\" formControlName=\"email\" placeholder=\"e-mail\" />\r\n                              <mat-error *ngIf=\"nominee.get('email').hasError('required')\">\r\n                                Email is Required!\r\n                              </mat-error>\r\n                              <mat-error *ngIf=\"nominee.get('email').hasError('pattern')\">\r\n                                Email must be a valid email address!\r\n                              </mat-error>\r\n                            </mat-form-field>\r\n                          </div>\r\n\r\n                          <!-- <div class=\"pb-1\">\r\n                                <button\r\n                                  mat-button\r\n                                  color=\"primary\"\r\n                                  (click)=\"addFormGroup()\"\r\n                                >\r\n                                  <mat-icon>add</mat-icon> ADD NOMINEE\r\n                                </button>\r\n        \r\n                                <button\r\n                                  mat-button\r\n                                  color=\"warn\"\r\n                                  (click)=\"removeNominee(i)\"\r\n                                >\r\n                                  <mat-icon>delete</mat-icon> REMOVE NOMINEE\r\n                                </button>\r\n                              </div> -->\r\n                        </div>\r\n                        <div fxFlex=\"100\" fxFlex.gt-xs=\"50\">\r\n                          <div class=\"pb-1\">\r\n                            <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                              <mat-label>Landline Number</mat-label>\r\n                              <input matInput formControlName=\"mobileNumber\" maxlength=\"10\"\r\n                                (keypress)=_keyPress($event)>\r\n                              <mat-error *ngIf=\"nominee.get('mobileNumber').hasError('pattern')\">\r\n                                It is not a valid mobile number.\r\n                              </mat-error>\r\n                            </mat-form-field>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </mat-expansion-panel>\r\n                  </mat-accordion>\r\n                  <!-- Contact Information -->\r\n                </div>\r\n                <button mat-button rounded color=\"primary\" [disabled]=\"nomineeForms?.invalid\" class=\"place\" (click)=\"addNominee()\">\r\n                  <mat-icon>add</mat-icon> ADD NOMINEE\r\n                </button>\r\n                <!-- <mat-action-row >\r\n                  <button mat-button color=\"warn\" [disabled]=\"i != 1\" (click)=\"removeNominee(i)\">\r\n                    <mat-icon>delete</mat-icon>REMOVE\r\n                  </button>\r\n                </mat-action-row> -->\r\n                <mat-action-row *ngIf=\"i != 0\">\r\n                  <button mat-button color=\"warn\"  (click)=\"removeNominee(i)\">\r\n                    <mat-icon>delete</mat-icon>REMOVE\r\n                  </button>\r\n                </mat-action-row>\r\n              </mat-expansion-panel>\r\n            </mat-accordion>\r\n          </div>\r\n\r\n        </form>\r\n      </mat-card-content>\r\n    </mat-card>\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\" fxLayoutGap=\"16px\" class=\"mt-32\">\r\n      <button class=\"ml-12\" mat-button class=\"Backbtn\" (click)=\"goBack()\">\r\n        Back\r\n      </button>\r\n      <button mat-raised-button [disabled]=\"nomineeForms.invalid || prefixFlag || prefixFlag1\" color=\"primary\" class=\"Nextbtn\" (click)=\"onSubmit()\">\r\n        Next\r\n      </button>\r\n    </div>\r\n  </div>\r\n</div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { Router } from '@angular/router';\r\nimport { AccountDetails } from 'app/shared/models/accountDetails';\r\nimport { CustomerInformationDetails } from 'app/shared/models/customerInformationDetails';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { AppLoaderService } from 'app/shared/services/app-loader/app-loader.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { UrlService } from '../../url.service';\r\nimport { AccountDetailsSummaryComponent } from '../account-details-summary/account-details-summary.component';\r\nimport { ApplicationEntryStageService } from 'app/shared/services/application-entry-stage.service';\r\n\r\n@Component({\r\n  selector: 'app-application-entry-summary',\r\n  templateUrl: './application-entry-summary.component.html',\r\n  styleUrls: ['./application-entry-summary.component.scss']\r\n})\r\nexport class ApplicationEntrySummaryComponent implements OnInit {\r\n  titleName = \"Application Entry Stage\";\r\n  // productaccountId = 1166;\r\n  bankPreference: any = [];\r\n  productaccountId : any;\r\n  accounttype: any;\r\n  businessproductName: any;\r\n  accountbranch: any;\r\n  accountcurrency: any;\r\n  applicationdate: any;\r\n  fundTheaccount: any;\r\n  fundby: any;\r\n  overdraftrequested: any;\r\n  amounT: any;\r\n  Custownership: any;\r\n  CustnumOfApplicants: any;\r\n  customerDetails : any [];\r\n  allMandate : any [];\r\n  accountStatement: any;\r\n  statementPreference: any = [];\r\n  statementPreferenceFetched: any[];\r\n  checkBook: any;\r\n  bankChannel: any;\r\n  commChannel: any = [];\r\n  commChannelFetched: any[];\r\n  passBook: any;\r\n  allNominee : any [];\r\n  previousUrl: string = '';\r\n  swiftEnable: boolean=false;\r\n  swiftCode: any;\r\n  swiftCodeEnable: any;\r\n  debitCardRequired: any;\r\n  productAccountIdCust: any;\r\n  customerId: any;\r\n  customerSummary: any;\r\n\r\n  constructor( \r\n    private router:Router,private apiService : ApiService, private loader:AppLoaderService, private appEntryService:ApplicationEntryStageService,\r\n    private localstore: LocalStoreService, private urlService:UrlService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.productaccountId = this.localstore.getItem('accountId');\r\n    console.log(\"Account ID from Local Storage\", this.productaccountId);\r\n    this.gettingallDetails(this.productaccountId);\r\n    this.getCustomerInformationDetails();\r\n    this.urlService.previousUrl$\r\n    .subscribe((previousUrl: string) => {\r\n        this.previousUrl = previousUrl\r\n    });\r\n    \r\n  }\r\n  \r\n  gettingallDetails(productaccountId) {\r\n    this.loader.open();\r\n    this.apiService.gettingallDetails(productaccountId).subscribe((applicationEntryResp : any) => {\r\n      this.loader.close();\r\n      console.log(\"Application Entry Details\",applicationEntryResp);\r\n      \r\n      this.allMandate = applicationEntryResp.mandateInfo;\r\n      this.allNominee = applicationEntryResp.nomineeInfo;\r\n\r\n      if(applicationEntryResp.accountInfo.swiftCodeEnable==true){\r\n        this.swiftEnable=true;\r\n      }\r\n       this.accounttype = applicationEntryResp.accountInfo.accountType;\r\n       this.businessproductName = applicationEntryResp.accountInfo.businessProductName;\r\n       this.accountbranch = applicationEntryResp.accountInfo.accountBranch;\r\n       this.accountcurrency = applicationEntryResp.accountInfo.accountCurrency;\r\n       this.applicationdate = applicationEntryResp.accountInfo.applicationDate;\r\n       this.fundTheaccount = applicationEntryResp.accountInfo.fundTheAccount;\r\n       this.fundby = applicationEntryResp.accountInfo.fundBy;\r\n       this.amounT = applicationEntryResp.accountInfo.amount;\r\n       this.overdraftrequested = applicationEntryResp.accountInfo.overdraftRequested;\r\n       this.swiftCodeEnable=applicationEntryResp.accountInfo.swiftCodeEnable;\r\n       this.swiftCode=applicationEntryResp.accountInfo.swiftCode\r\n       \r\n     \r\n\r\n\r\n\r\n       this.accountStatement = applicationEntryResp.accServiceInfo.statementFrequency;\r\n       this.checkBook = applicationEntryResp.accServiceInfo.chequebookNeeded; \r\n       this.debitCardRequired = applicationEntryResp.accServiceInfo.debitCardRequired;\r\n       this.bankChannel = applicationEntryResp.accServiceInfo.bankChannelPref;\r\n       for (let index = 0; index < this.bankChannel.length; index++) {\r\n        const element = this.bankChannel[index];\r\n        if(element.checked) {\r\n          this.bankPreference.push(element.name);\r\n        }\r\n      }\r\n       this.passBook = applicationEntryResp.accServiceInfo.passbookNeeded; \r\n       this.debitCardRequired = applicationEntryResp.accServiceInfo.debitCardRequired;\r\n       this.statementPreferenceFetched = applicationEntryResp.accServiceInfo.statementPref;\r\n       for (let index = 0; index < this.statementPreferenceFetched.length; index++) {\r\n         const element = this.statementPreferenceFetched[index];\r\n         if(element.checked) {\r\n           this.statementPreference.push(element.name);\r\n         }\r\n       }\r\n       this.commChannelFetched = applicationEntryResp.accServiceInfo.commChannelPref;\r\n       for (let index = 0; index < this.commChannelFetched.length; index++) {\r\n         const element = this.commChannelFetched[index];\r\n         if(element.checked) {\r\n           this.commChannel.push(element.name);\r\n         }\r\n       }\r\n      \r\n    \r\n       this.Custownership = applicationEntryResp.customerInfo.data[0].ownership;\r\n       this.CustnumOfApplicants = applicationEntryResp.customerInfo.data[0].numOfApplicants;\r\n       this.customerDetails =applicationEntryResp.customerInfo.data;\r\n       for (let i = 0; i < this.customerDetails.length; i++) {\r\n        let userAddress = this.customerDetails[i].userAddress;\r\n        let pickOneAddress: any;\r\n        let Address = \"\";\r\n        if (userAddress.length > 1) {\r\n          pickOneAddress = userAddress.find((item: any) => item.addressType == \"permanent\");\r\n        } else {\r\n          pickOneAddress = userAddress[0];\r\n        }\r\n        Address = pickOneAddress.city + \",\" + pickOneAddress.state + \",\" + pickOneAddress.zipCode + \",\" + pickOneAddress.country;\r\n        this.customerDetails[i].userAddress = Address;\r\n      }\r\n\r\n      }, (err:any) =>{\r\n        this.loader.close();\r\n      });\r\n      console.log(this.allNominee);\r\n  }\r\n\r\n  getCustomerInformationDetails() {\r\n    let accountType ='savings';\r\n   this.appEntryService.fetchAccountDependentInfo(this.productaccountId,accountType)\r\n      .subscribe((allCustomernResp: any) => {\r\n        console.log('resp',allCustomernResp)\r\n        this.customerSummary = allCustomernResp.data;\r\n        this.customerId = allCustomernResp.data[0].customerId;\r\n        this.Custownership = allCustomernResp.data[0].ownership;\r\n        this.CustnumOfApplicants = allCustomernResp.data[0].numOfApplicants;\r\n        this.customerDetails = allCustomernResp.data;\r\n\r\n        for (let i = 0; i < this.customerDetails.length; i++) {\r\n          let userAddress = this.customerDetails[i].userAddress;\r\n          let pickOneAddress: any;\r\n          let Address = \"\";\r\n          if (userAddress.length > 1) {\r\n            pickOneAddress = userAddress.find((item: any) => item.addressType == \"Permanent\");\r\n          } else {\r\n            pickOneAddress = userAddress[0];\r\n          }\r\n          Address = pickOneAddress.city + \",\" + pickOneAddress.state + \",\" + pickOneAddress.zipCode + \",\" + pickOneAddress.country;\r\n          this.customerDetails[i].userAddress = Address;\r\n        }\r\n      }, (err: any) => {\r\n        this.loader.close();\r\n      });\r\n  }\r\n\r\n\r\n  goBack() {\r\n    this.router.navigate([`${this.previousUrl}`]);\r\n  }\r\n\r\n\r\n  done() {\r\n    this.router.navigate([`/home/application/list`]);\r\n  }\r\n\r\n}\r\n","<div>\r\n    <img class=\"entryImg\" src=\"assets/images/entry.png\" alt=\"\">\r\n    <h4 class=\"para\">{{titleName}}</h4>\r\n        <!-- Account Details -->\r\n    <div class=\"full-width\">\r\n        <div class=\"fullcard\">\r\n            <div fxLayout=\"row\">\r\n                <h4 class=\"paraFont\">Account Details </h4>\r\n            </div>\r\n                <div fxLayout=\"row\" fxLayoutAlign=\"center center\">\r\n                    <div fxFlex=\"100%\">\r\n                        <mat-card class=\"chequecard\">\r\n                            <mat-card-content>\r\n                                <div class=\"full-width\" >\r\n                                        <div fxLayout=\"column\" fxLayoutGap=\"2%\" fxLayoutAlign=\"space-between none\" class=\"colAlign\">\r\n                                                <div fxLayout=\"row wrap\" class=\"flex-container stretch\" >\r\n                                                    <ng-container>\r\n                                                        <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                                            <mat-hint class=\"headingText\">Account Type</mat-hint>\r\n                                                            <br>\r\n                                                            <mat-hint class=\"valueText\">{{accounttype}}</mat-hint>\r\n                                                        </div>\r\n                                                        <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                                            <mat-hint class=\"headingText\">Business Product Name  </mat-hint>\r\n                                                            <br>\r\n                                                            <mat-hint class=\"valueText\">{{businessproductName}} </mat-hint>\r\n                                                        </div>\r\n                                                        <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                                            <mat-hint class=\"headingText\">Account Branch</mat-hint>\r\n                                                            <br>\r\n                                                            <mat-hint class=\"valueText\">{{accountbranch}} </mat-hint>\r\n                                                        </div>\r\n                                                    </ng-container>\r\n                                                </div>\r\n                                          \r\n                                            <div>\r\n                                                <span layout=\"row\">\r\n                                                    <hr class=\"line\" flex />\r\n                                                </span>\r\n                                            </div>\r\n                                         \r\n                                                <div fxLayout=\"row wrap\" class=\"flex-container stretch\">\r\n                                                    <ng-container>\r\n                                                        <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                                            <mat-hint class=\"headingText\">Account Currency </mat-hint>\r\n                                                            <br>\r\n                                                            <mat-hint class=\"valueText\">{{accountcurrency}} </mat-hint>\r\n                                                        </div>\r\n                                                        <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                                            <mat-hint class=\"headingText\">Application Date</mat-hint>\r\n                                                           <br>\r\n                                                            <mat-hint class=\"valueText\">{{applicationdate}} </mat-hint>\r\n                                                        </div>\r\n                                                        <div fxFlex=\"33%\" fxFlex.xs=\"100%\" *ngIf=\"swiftEnable\">\r\n                                                            <mat-hint class=\"headingText\">Swift Code </mat-hint>\r\n                                                            <br>\r\n                                                            <mat-hint class=\"valueText\">{{swiftCode}}\r\n                                                            </mat-hint>\r\n                                                        </div>\r\n                                                        <!-- <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                                            <mat-hint class=\"headingText\">Initial Funding </mat-hint>\r\n                                                            <br>\r\n                                                            <mat-hint class=\"valueText\">{{fundby}} </mat-hint>\r\n                                                        </div> -->\r\n                                                        <!-- <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                                            <mat-hint class=\"headingText\">Fund the Account</mat-hint>\r\n                                                            <br>\r\n                                                            <mat-hint class=\"valueText\">{{fundTheaccount}} </mat-hint>\r\n                                                           \r\n                                                        </div> -->\r\n                                                    </ng-container>\r\n                                                </div>\r\n                                                <div>\r\n                                                    <span layout=\"row\">\r\n                                                        <hr class=\"line\" flex />\r\n                                                    </span>\r\n                                                </div>\r\n                                             \r\n                                                    <div fxLayout=\"row wrap\" class=\"flex-container stretch\">\r\n                                                        <ng-container>\r\n                                                           \r\n                                                            <!-- <div fxFlex=\"33%\" fxFlex.xs=\"100%\" *ngIf=\"fundby ==='yes'\">\r\n                                                                <mat-hint class=\"headingText\">Amount</mat-hint>\r\n                                                               <br>\r\n                                                                <mat-hint class=\"valueText\">{{amounT}} </mat-hint>\r\n                                                            </div> -->\r\n                                                            <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                                                <mat-hint class=\"headingText\">Initial Funding</mat-hint>\r\n                                                                <br>\r\n                                                                <div class=\"toggle\">\r\n                                                                    <mat-slide-toggle disabled\r\n                                                                        [checked]=\"fundby\">\r\n                                                                    </mat-slide-toggle>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                                                <mat-hint class=\"headingText\">Overdraft requested?</mat-hint>\r\n                                                                <br>\r\n                                                                <div class=\"toggle\">\r\n                                                                <mat-slide-toggle disabled\r\n                                                                [checked]=\"overdraftrequested\">\r\n                                                            </mat-slide-toggle>\r\n                                                        </div>\r\n                                                            </div>\r\n                                                            <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                                                <mat-hint class=\"headingText\">Want to add SWIFT Code</mat-hint>\r\n                                                                <br>\r\n                                                                <div class=\"toggle\">\r\n                                                                    <mat-slide-toggle disabled\r\n                                                                        [checked]=\"swiftCodeEnable\" >\r\n                                                                    </mat-slide-toggle>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            \r\n                                                        </ng-container>\r\n                                                    </div>\r\n                                        </div>\r\n                                </div>\r\n                            </mat-card-content>\r\n                        </mat-card>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n    </div><br>\r\n <!--Customer Information Details -->\r\n    <div class=\"full-width\">\r\n            <div class=\"fullcard\">\r\n                <div fxLayout=\"row\">\r\n                    <h4 class=\"paraFont\">Customer Information Details</h4>\r\n                </div>\r\n                <div fxLayout=\"row\" fxLayoutAlign=\"center center\">\r\n                    <div fxFlex=\"100%\">\r\n                        <mat-card class=\"chequecard\">\r\n                            <mat-card-content>\r\n                                <div class=\"full-width\" >\r\n                                        <div fxLayout=\"column\" fxLayoutGap=\"6%\" fxLayoutAlign=\"space-between none\">\r\n                                                <div fxLayout=\"row wrap\" class=\"flex-container stretch\">\r\n                                                    <ng-container>\r\n                                                        <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                                            <mat-hint class=\"headingText\">Ownership</mat-hint>\r\n                                                            <br>\r\n                                                            <mat-hint class=\"valueText\">{{Custownership}}</mat-hint>\r\n                                                        </div>\r\n                                                        <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                                            <mat-hint class=\"headingText\">Number of Applicant </mat-hint>\r\n                                                            <br>\r\n                                                            <mat-hint class=\"valueText\">{{CustnumOfApplicants}} </mat-hint>\r\n                                                        </div>\r\n                                                        <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                                            \r\n                                                            \r\n                                                        </div>\r\n                                                    </ng-container>\r\n                                                </div>\r\n                                        </div>\r\n                                </div>\r\n                            </mat-card-content>\r\n                        </mat-card>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"fullcard\">\r\n                <div fxLayout=\"row\" fxLayoutAlign=\"center center\">\r\n                    <div fxFlex=\"100%\">\r\n                        <mat-card class=\"chequecard\" *ngFor=\"let customer of customerDetails;let i=index\">\r\n                            <mat-card-content>\r\n                                <div class=\"full-width\" >\r\n                                        <div fxLayout=\"column\" fxLayoutGap=\"6%\" fxLayoutAlign=\"space-between none\">\r\n                                                <div fxLayout=\"row wrap\" class=\"flex-container stretch\">\r\n                                                    <ng-container>\r\n                                                        <div fxFlex=\"5%\" fxFlex.xs=\"100%\" class=\"inputCardclass\" fxLayoutAlign=\"end start\">\r\n                                                            <div class=\"mt-24\">\r\n                                                                <app-avatar-photo [name]=\"customer?.firstName + ' ' + customer?.lastName\"></app-avatar-photo> \r\n                                                            </div>\r\n                                                         </div>\r\n                                                        <div fxFlex=\"30%\" fxFlex.xs=\"100%\" class=\"inputCardclass\">\r\n                                                            <mat-card class=\"inputCard\">\r\n                                                                <mat-hint class=\"valueTextName\">{{customer?.firstName + ' ' + customer?.lastName }} </mat-hint><br>\r\n                                                                     <mat-hint class=\"textSpanCIF\">CIF {{ customer?.cifNumber != null ? '#' + customer?.cifNumber : '- n/a' }}</mat-hint>\r\n                                                                     \r\n                                                                    <p class=\"valueText\"><mat-icon class=\"textIconCust\" >call</mat-icon>&nbsp;&nbsp;\r\n                                                                    <span class=\"textSpanCust\">{{customer?.phoneNumber}} </span></p>\r\n                                                                    <p class=\"valueText\"><mat-icon class=\"textIconCust\"  >email</mat-icon>&nbsp;&nbsp;\r\n                                                                    <span class=\"textSpanCust\">{{customer?.primaryEmailAdress}} </span></p>\r\n                                                                    <p class=\"valueText\"><mat-icon class=\"textIconCust\" >location_on</mat-icon>&nbsp;&nbsp;\r\n                                                                    <span class=\"textSpanCust\">{{customer.userAddress}} </span></p>\r\n                                                            </mat-card>\r\n                                                        </div>\r\n                                                        <div fxFlex fxFlex.xs=\"100%\" class=\"inputCardclass\">\r\n                                                                <mat-card class=\"inputCard\">\r\n                                                                    <mat-hint class=\"valueText\">Other Details</mat-hint><br>\r\n                                                                     <div fxLayout=\"column\" fxLayoutGap=\"6%\" fxLayoutAlign=\"space-between none\">\r\n                                                                    <div fxLayout=\"row wrap\" class=\"flex-container stretch\">\r\n                                                                        <ng-container>\r\n                                                                            <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                                                                <mat-hint class=\"headingText\">Date of Birth</mat-hint><br>\r\n                                                                                <mat-hint class=\"valueText\">{{customer?.dateOfBirth}}</mat-hint></div>\r\n                                                                            <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                                                                <mat-hint class=\"headingText\">Citizenship By</mat-hint><br>\r\n                                                                                <mat-hint class=\"valueText\">{{customer?.nationality}} </mat-hint>\r\n                                                                            </div>\r\n                                                                            <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                                                                <mat-hint class=\"headingText\">ID Type</mat-hint><br>\r\n                                                                                <mat-hint class=\"valueText\">{{customer?.custIdProofs[0].idType}} </mat-hint>\r\n                                                                            </div>\r\n                                                                        </ng-container>\r\n                                                                    </div>\r\n                                                                    <div fxLayout=\"row wrap\" class=\"flex-container stretch\">\r\n                                                                        <ng-container>\r\n                                                                            <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                                                                <mat-hint class=\"headingText\">Residence Status</mat-hint><br>\r\n                                                                                <mat-hint class=\"valueText\">{{customer.residenceStatus}}</mat-hint></div>\r\n                                                                            <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                                                                <mat-hint class=\"headingText\">Occupation Type</mat-hint><br>\r\n                                                                                <mat-hint class=\"valueText\"> {{customer.occupationType}}</mat-hint>\r\n                                                                            </div>\r\n                                                                            <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                                                                <mat-hint class=\"headingText\">Unique Id Number</mat-hint><br>\r\n                                                                                <mat-hint class=\"valueText\"> {{customer?.custIdProofs[0].idNumber}} </mat-hint>\r\n                                                                            </div>\r\n                                                                        </ng-container>\r\n                                                                    </div>\r\n                                                                    </div>\r\n                                                            </mat-card>\r\n                                                        </div>\r\n                                                    </ng-container>\r\n                                                </div>        \r\n                                        </div>\r\n                                </div>\r\n                            </mat-card-content>\r\n                        </mat-card>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    \r\n<br>\r\n<!-- Mandate Details -->\r\n    <div class=\"full-width\">\r\n      <div class=\"fullcard\">\r\n        <div fxLayout=\"row\">\r\n            <h4 class=\"paraFont\">Mandate Details</h4>\r\n        </div>\r\n          <div fxLayout=\"row\" fxLayoutAlign=\"center center\">\r\n              <div fxFlex=\"100%\">\r\n                  <mat-card class=\"chequecard\" *ngFor=\"let mandate of allMandate;let i=index\">\r\n                    <p class=\"valueText\"><mat-icon class=\"textIcon\" >check_circle</mat-icon>&nbsp;&nbsp;\r\n                        <span class=\"textSpan\">Mandate {{i+1}}</span></p>\r\n                      <mat-card-content>\r\n                          <div class=\"full-width\" >\r\n                                  <div fxLayout=\"column\" fxLayoutGap=\"10%\" fxLayoutAlign=\"space-between none\">\r\n                                          <div fxLayout=\"row wrap\" class=\"flex-container stretch\">\r\n                                              <ng-container>\r\n                                                  <div fxFlex=\"28%\" fxFlex.xs=\"100%\">\r\n                                                      <mat-hint class=\"headingText\">Mode of Opertaion</mat-hint>\r\n                                                      <br>\r\n                                                      <mat-hint class=\"valueText\">{{mandate.modeOfOperation}}</mat-hint>\r\n                                                  </div>\r\n                                                  <div fxFlex=\"20%\" fxFlex.xs=\"100%\">\r\n                                                      <mat-hint class=\"headingText\">Amount From</mat-hint>\r\n                                                      <br>\r\n                                                      <mat-hint class=\"valueText\">{{mandate.amountFrom}} </mat-hint>\r\n                                                  </div>\r\n                                                  <div fxFlex=\"20%\" fxFlex.xs=\"100%\">\r\n                                                      <mat-hint class=\"headingText\">Amount To</mat-hint>\r\n                                                      <br>\r\n                                                      <mat-hint class=\"valueText\"> {{mandate.amountTo}}</mat-hint>\r\n                                                  </div>\r\n                                                  <div fxFlex=\"30%\" fxFlex.xs=\"100%\">\r\n                                                    <mat-hint class=\"headingText\">Required No. of Signatories</mat-hint>\r\n                                                    <br>\r\n                                                    <mat-hint class=\"valueText\"> {{mandate.totalSignaturesRequired}}</mat-hint>\r\n                                                </div>\r\n                                              </ng-container>\r\n                                          </div>    \r\n                                  </div>\r\n                          </div>\r\n                      </mat-card-content>\r\n                  </mat-card>\r\n              </div>\r\n          </div>\r\n      </div>\r\n        </div>\r\n        <br>\r\n<!-- Account Service Details -->\r\n\r\n<div class=\"full-width\">\r\n        <div class=\"fullcard\">\r\n            <div fxLayout=\"row\">\r\n                <h4 class=\"paraFont\">Account Service Details</h4>\r\n            </div>\r\n            <div fxLayout=\"row\" fxLayoutAlign=\"center center\">\r\n                <div fxFlex=\"100%\">\r\n                    <mat-card class=\"chequecard\">\r\n                        <mat-card-content>\r\n                            <div class=\"full-width\" >\r\n                                    <div fxLayout=\"column\" fxLayoutGap=\"4%\" fxLayoutAlign=\"space-between none\" class=\"colAlign\">\r\n                                            <div fxLayout=\"row wrap\" class=\"flex-container stretch\" >\r\n                                                <ng-container>\r\n                                                    <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                                        <mat-hint class=\"headingText\">Account statement frequency</mat-hint>\r\n                                                        <br>\r\n                                                        <mat-hint class=\"valueText\">{{accountStatement}}</mat-hint>\r\n                                                    </div>\r\n                                                    <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                                        <mat-hint class=\"headingText\">Account Statement Preferences  </mat-hint>\r\n                                                        <br>\r\n                                                        <mat-hint class=\"valueText\" *ngFor=\"let statementPref of statementPreference;let i=index\">\r\n                                                            {{ statementPref  }} <span *ngIf=\"i !== statementPreference.length -1 \">,</span>\r\n                                                        </mat-hint>\r\n                                                    </div>\r\n                                                    <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                                        <mat-hint class=\"headingText\">Cheque Book</mat-hint>\r\n                                                        <br><div class=\"toggle\">\r\n                                                        <mat-slide-toggle disabled\r\n                                                        [checked]=\"checkBook\">\r\n                                                    </mat-slide-toggle></div>\r\n                                                    </div>\r\n                                                    <br>\r\n                                                    <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                                        <mat-hint class=\"headingText\">Debit Card</mat-hint>\r\n                                                        <br><div class=\"toggle\" >\r\n                                                            <mat-slide-toggle  style=\"cursor: not-allowed;pointer-events: none\"\r\n                                                            [checked]=\"debitCardRequired\">\r\n                                                        </mat-slide-toggle></div>\r\n                                                    </div>\r\n                                                </ng-container>\r\n                                            </div>\r\n                                      \r\n                                        <div>\r\n                                            <span layout=\"row\">\r\n                                                <hr class=\"line\" flex />\r\n                                            </span>\r\n                                        </div>\r\n                                     \r\n                                            <div fxLayout=\"row wrap\" class=\"flex-container stretch\">\r\n                                                <ng-container>\r\n                                                    <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                                        <mat-hint class=\"headingText\">Banking Channel Preferences </mat-hint>\r\n                                                        <br>\r\n                                                        <mat-hint class=\"valueText\" *ngFor=\"let bankPref of bankPreference;let i=index\">\r\n                                                            {{ bankPref  }} <span *ngIf=\"i !== bankPreference.length -1 \">,</span>\r\n                                                        </mat-hint>\r\n                                                    </div>\r\n                                                    <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                                        <mat-hint class=\"headingText\">Communication Channel Preferences </mat-hint>\r\n                                                       <br>\r\n                                                        <mat-hint class=\"valueText\"*ngFor=\"let comchanel of commChannel;let i=index\">{{comchanel}}\r\n                                                            <span *ngIf=\"i !== commChannel.length -1 \">,</span> </mat-hint>\r\n                                                    </div>\r\n                                                    <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                                        <mat-hint class=\"headingText\">Pass Book</mat-hint>\r\n                                                        <br><div class=\"toggle\">\r\n                                                        <mat-slide-toggle disabled\r\n                                                        [checked]=\"passBook\">\r\n                                                    </mat-slide-toggle></div>\r\n                                                    </div>\r\n                                                </ng-container>\r\n                                            </div>\r\n                                    </div>\r\n                            </div>\r\n                        </mat-card-content>\r\n                    </mat-card>\r\n                </div>\r\n            </div>\r\n        </div>\r\n</div>\r\n<br>\r\n<!-- Nominee Details -->\r\n<div class=\"full-width\">\r\n    <div class=\"fullcard\">\r\n        <div fxLayout=\"row\">\r\n            <h4 class=\"paraFont\">Nominee Details</h4>\r\n        </div>\r\n        <div fxLayout=\"row\" fxLayoutAlign=\"center center\">\r\n            <div fxFlex=\"100%\"> \r\n                <mat-card class=\"chequecard\" *ngFor=\"let nominee of allNominee;let i=index\">\r\n                    <p class=\"valueText\"><mat-icon class=\"nomineeIcon\" >check_circle</mat-icon>&nbsp;&nbsp;\r\n                        <span class=\"nomineeSpan\">Nominee {{i+1}}</span></p>\r\n                    <mat-card-content>\r\n                        <div class=\"full-width\" >\r\n                                <div fxLayout=\"column\" fxLayoutGap=\"6%\" fxLayoutAlign=\"space-between none\">\r\n                                        <div fxLayout=\"row wrap\" class=\"flex-container stretch\">\r\n                                            <ng-container>\r\n                                                <div fxFlex=\"50%\" fxFlex.xs=\"100%\" class=\"inputCardclass\">\r\n                                                    <mat-card class=\"inputCard\">\r\n                                                        <mat-hint class=\"valueText\">{{nominee.firstName + ' ' + nominee.lastName }} </mat-hint><br><br>\r\n                                                            <p class=\"valueText\"><mat-icon class=\"textIconCust\" >call</mat-icon>&nbsp;&nbsp;\r\n                                                            <span class=\"textSpanCust\">{{nominee.phoneNumber}} </span></p>\r\n                                                            <p class=\"valueText\"><mat-icon class=\"textIconCust\"  >email</mat-icon>&nbsp;&nbsp;\r\n                                                            <span class=\"textSpanCust\">{{nominee.email}} </span></p>\r\n                                                            <p class=\"valueText\"><mat-icon class=\"textIconCust\" >location_on</mat-icon>&nbsp;&nbsp;\r\n                                                            <span class=\"textSpanCust\">{{nominee.building + ',' + nominee.street + ',' + nominee.city + ',' + nominee.state+ ',' + nominee.country}} </span></p>\r\n                                                    </mat-card>\r\n                                                </div>\r\n                                                <div fxFlex=\"33%\" fxFlex.xs=\"100%\" class=\"inputCardclass\">\r\n                                                        <mat-card class=\"inputCard\">\r\n                                                        <mat-hint class=\"headingText\">Date of Birth</mat-hint>   <br>\r\n                                                        <mat-hint class=\"valueText\">{{nominee.dateOfBirth}}</mat-hint> <br><br>\r\n                                                        <mat-hint class=\"headingText\">Relationship Type</mat-hint><br>\r\n                                                        <mat-hint class=\"valueText\">{{nominee.relationshipType}}</mat-hint><br><br>\r\n                                                       \r\n                                                    </mat-card>\r\n                                                </div>\r\n                                                <div fxFlex=\"33%\" fxFlex.xs=\"100%\" class=\"inputCardclass\"  *ngIf=\"nominee.isNomineeMinor && nominee.guardianDetails?.length\"> \r\n                                                    <mat-card class=\"inputCard\" >\r\n                                                    <mat-hint class=\"valueText\">Gaurdian Details</mat-hint><br>\r\n                                                    <mat-hint class=\"valueText\">{{nominee.guardianDetails[0].firstName + ' ' + nominee.guardianDetails[0].lastName }}</mat-hint> <br>  <br>\r\n                                                    <mat-hint class=\"headingText\">Relationship Type</mat-hint><br>\r\n                                                    <mat-hint class=\"valueText\">{{nominee.guardianDetails[0].relationshipType}}</mat-hint><br><br>\r\n                                                    <mat-hint class=\"headingText\">Date of Birth</mat-hint><br>\r\n                                                    <mat-hint class=\"valueText\">{{nominee.guardianDetails[0].dateOfBirth}}</mat-hint>\r\n                                                </mat-card>\r\n                                            </div>\r\n                                            </ng-container>\r\n                                        </div>       \r\n                                </div>\r\n                        </div>\r\n                    </mat-card-content>\r\n                </mat-card>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    </div>\r\n    \r\n    <div\r\n    fxLayout=\"row\"\r\n    fxLayoutAlign=\"space-between center\"\r\n    fxLayoutGap=\"16px\"\r\n    class=\"mt-32\"\r\n  >\r\n    <button mat-button rounded color=\"primary\" (click)=\"goBack()\">\r\n      Back\r\n    </button>\r\n    <button\r\n      mat-raised-button\r\n      color=\"primary\"\r\n      (click)=\"done()\"\r\n    >\r\n      Done\r\n    </button>\r\n  </div>","import { Component, OnInit } from '@angular/core';\r\nimport { FormArray, FormBuilder, FormGroup } from '@angular/forms';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\n\r\n@Component({\r\n  selector: 'app-charge-details-summary',\r\n  templateUrl: './charge-details-summary.component.html',\r\n  styleUrls: ['./charge-details-summary.component.scss']\r\n})\r\nexport class ChargeDetailsSummaryComponent implements OnInit {\r\n\r\n  form1: Boolean;\r\n  form2: Boolean;\r\n\r\n  chargeFormIT: FormGroup;\r\n  savingForm: FormGroup;\r\n  accountId: any;\r\n  accountType: any;\r\n  accountInfo: any;\r\n\r\n  constructor(private ls: LocalStoreService, private snack: MatSnackBar, private dialogRef: MatDialogRef<ChargeDetailsSummaryComponent>, private api: ApiService, private router: Router, private formBuilder: FormBuilder) { }\r\n\r\n  ngOnInit(): void {\r\n    this.accountId = this.ls.getItem('accountId');\r\n    this.accountType = this.ls.getItem('accountType');\r\n    this.accountInfo = this.ls.getItem('EDIT-CREATEACCCIF');\r\n    \r\n    if(this.accountInfo){\r\n      this.accountId=this.accountInfo.businessProductAccount.accountId\r\n    }\r\n    setTimeout(() => {\r\n      this.api.getChargeValues(this.accountId).subscribe(resp => {\r\n        console.log(\"backend resp\", resp)\r\n        this.check(resp === null)\r\n        console.log(\"backend resp\", resp.length);\r\n  \r\n  \r\n        // const filteredResponse = resp.filter(res => res.intrestType === 'in hand');\r\n  \r\n        this.onChangeInterest(resp.length);\r\n        this.in.patchValue(resp);\r\n  \r\n        // const filteredResponseSave = resp.filter(res => res.intrestType === 'Handling Charge');\r\n        // console.log(filteredResponseSave.length)\r\n        // if(filteredResponseSave.length===0){\r\n        //   this.form2=false;\r\n        // }\r\n        // if(filteredResponseSave.length!=0){\r\n        //   this.form2=false;\r\n        // }\r\n        //       console.log(this.form2)\r\n        //       this.onChangeSaving(filteredResponseSave.length);\r\n        //       this.is.patchValue(filteredResponseSave);\r\n        // this.flagValue(filteredResponseSave.length,filteredResponse.length)\r\n  \r\n  \r\n  \r\n      })\r\n    }, 1);\r\n    \r\n\r\n    this.chargeFormIT = this.formBuilder.group({\r\n      chargeIT: new FormArray([]),\r\n    });\r\n    // this.savingForm = this.formBuilder.group({\r\n    //   saving: new FormArray([]),\r\n    // });\r\n\r\n\r\n\r\n\r\n  }\r\n  flagValue(form2, form1) {\r\n    if (form1 > 0) {\r\n      this.form1 = true;\r\n    }\r\n    if (form1 == 0) {\r\n      this.form1 = false;\r\n    }\r\n    if (form2 > 0) {\r\n      this.form2 = true;\r\n    }\r\n    if (form2 == 0) {\r\n      this.form2 = false;\r\n    }\r\n    console.log(this.form1, this.form2)\r\n  }\r\n\r\n  onChangeInterest(e) {\r\n    const numberOfItems = e || 0;\r\n    if (this.in.length < numberOfItems) {\r\n      for (let i = this.in.length; i < numberOfItems; i++) {\r\n        this.in.push(\r\n          this.formBuilder.group({\r\n            intrestType: [''],\r\n            amount: [''],\r\n            waiver: [false],\r\n            accountId: [''],\r\n            createdDate: [''],\r\n            craetedBy: [''],\r\n            lastModifiedDate: [''],\r\n            lastModifiedBy: ['']\r\n          })\r\n        );\r\n      }\r\n    } else {\r\n      for (let i = this.in.length; i >= numberOfItems; i--) {\r\n        this.in.removeAt(i);\r\n      }\r\n    }\r\n  }\r\n  // onChangeSaving(e) {\r\n  //   const numberOfItems = e || 0;\r\n  //   if (this.is.length < numberOfItems) {\r\n  //     for (let i = this.is.length; i < numberOfItems; i++) {\r\n  //       this.is.push(\r\n  //         this.formBuilder.group({\r\n\r\n  //           intrestType: [''],\r\n  //           amount: ['123456'],\r\n  //           waiver: [false],\r\n  //           accountId:[''],\r\n  //           createdDate:[''],\r\n  //           craetedBy:[''],\r\n  //           lastModifiedDate:[''],\r\n  //           lastModifiedBy:['']\r\n  //         })\r\n  //       );\r\n  //     }\r\n  //   } else {\r\n  //     for (let i = this.is.length; i >= numberOfItems; i--) {\r\n  //       this.is.removeAt(i);\r\n  //     }\r\n  //   }\r\n  // }\r\n\r\n  // convenience getters for easy access to form fields\r\n  get f() {\r\n    return this.chargeFormIT.controls;\r\n  }\r\n  get in() {\r\n    return this.f.chargeIT as FormArray;\r\n  }\r\n  // get fs() {\r\n  //   return this.savingForm.controls;\r\n  // }\r\n  // get is() {\r\n  //   return this.fs.saving as FormArray;\r\n  // }\r\n\r\n\r\n  goBack() {\r\n    this.router.navigate([\"/home/application/enrichment/list\"]);\r\n  }\r\n\r\n  onSubmit(form) {\r\n    console.log(\"form\", form.interest);\r\n    console.log(\"form value\", form);\r\n    console.log(\"form value\", this.chargeFormIT.value);\r\n    this.api.intrestDetailsSave(form.interest).subscribe(resp => {\r\n      console.log(\"backend response from intrest saving\", resp)\r\n    }\r\n\r\n    )\r\n    this.router.navigate(['/home/application/enrichment/charge']);\r\n  }\r\n  edit() {\r\n    this.dialogRef.close();\r\n    this.api.setchargeFlag({\r\n      chargeflag: true\r\n    })\r\n    this.router.navigate([`/home/application/enrichment/charge/${this.accountId}`]);\r\n  }\r\n\r\n  check(accountType) {\r\n    if (accountType) {\r\n      console.log(this.snack.open)\r\n      this.snack.open('charge detail is empty', 'Error', {\r\n        duration: 4000,\r\n        verticalPosition: 'top',\r\n        horizontalPosition: 'right'\r\n      });\r\n    }\r\n  }\r\n \r\n  _keyPress(event: any) {\r\n    const pattern = /[a-zA-Z]/;\r\n    let inputChar = String.fromCharCode(event.charCode);\r\n    if (!pattern.test(inputChar)) {\r\n      event.preventDefault();\r\n\r\n    }\r\n  }\r\n  \r\n}\r\n\r\n","<!-- <mat-card class=\"matCard\"> -->\r\n  <button mat-button id=\"close\" mat-dialog-close>\r\n    <mat-icon class=\"closeicon\">close</mat-icon>\r\n  </button>\r\n  <mat-card-title>\r\n    <fieldset class=\"fieldset1\">\r\n      <legend visible=\"true\">Charge Details</legend>\r\n    </fieldset>\r\n  </mat-card-title>\r\n  <div fxLayout=\"row wrap\" class=\"main\">\r\n    <div fxFlex=\"100\">\r\n      <!-- <div class=\"propic text-center\">\r\n              <img src=\"assets/images/svg/undraw_statistic_chart_38b6.svg\" alt=\"\" class=\"w-80\" />\r\n            </div> -->\r\n\r\n      <!-- <div class=\"profile-title text-center mt-8\">\r\n        <div class=\"main-title\"><b>Interest Details</b></div>\r\n      </div> -->\r\n    </div>\r\n    <div fxFlex=\"100\" class=\"m-333\" class=\"mainDiv\">\r\n      <!-- <h5>IT Charge</h5> -->\r\n      <div class=\"mt-24\"></div>\r\n      <form *ngIf=\"chargeFormIT\" [formGroup]=\"chargeFormIT\">\r\n        <table class=\"cart-table default-bg mat-elevation-z0\"\r\n          [@animate]=\"{ value: '*', params: { delay: '100ms', x: '-50px' } }\">\r\n          <!-- <thead>\r\n            <tr>\r\n              <th class=\"text-muted\">Interest Type</th>\r\n              <th class=\"text-muted\">Interest Rate Applicable</th>\r\n              <th class=\"text-muted\">Margin in %</th>\r\n              <th class=\"text-muted\">Effective Rate %</th>\r\n            </tr>\r\n          </thead> -->\r\n          <tbody>\r\n            <tr class=\"mt-4\" *ngFor=\"let chargeIT of in.controls; let i = index\" style=\"display: flex;flex-wrap: wrap;\">\r\n              <div class=\"row\" style=\"margin-left: 5px;\">\r\n                <ng-container [formGroup]=\"chargeIT\">\r\n                  <div class=\"heading\">\r\n                    <input matInput formControlName=\"intrestType\" name=\"account_branch\" id=\"headingInput\" readonly />\r\n                  </div>\r\n\r\n\r\n                  <td>\r\n                    <mat-card class=\"matCardBox\">\r\n                      <mat-label class=\"label\">Amount</mat-label>\r\n                      <input matInput formControlName=\"amount\" name=\"account_branch\" class=\"input\" readonly />\r\n                    </mat-card>\r\n                  </td>\r\n\r\n                </ng-container>\r\n              </div>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </form>\r\n    </div>\r\n\r\n    <!-- <div fxFlex=\"100\" class=\"mt-16\">\r\n      <span mat-stroked-button color=\"primary\" (click)=\"goBack()\">edit</span>\r\n      <span fxFlex></span>\r\n      <!-- <button mat-raised-button color=\"primary\" type=\"button\" [disabled]=\"interestForm.invalid\" (click)=\"onSubmit(interestForm.value)\">DONE</button> -->\r\n    <!-- </div> -->\r\n\r\n  </div>\r\n\r\n\r\n  <span class=\"spanDiv\" (click)=\"edit()\">Edit</span>\r\n<!-- </mat-card> -->","import { MatDialogRef } from '@angular/material/dialog';\r\nimport { ChangeDetectorRef, Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, FormArray, Validators, FormControl } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { AppConfirmService } from 'app/shared/services/app-confirm/app-confirm.service';\r\nimport { DataService } from 'app/shared/services/data.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { AccountService } from 'app/views/home/account.service';\r\nimport * as moment from 'moment';\r\n\r\n@Component({\r\n  selector: 'app-add-nominee-dialog',\r\n  templateUrl: './add-nominee-dialog.component.html',\r\n  styleUrls: ['./add-nominee-dialog.component.scss']\r\n})\r\nexport class AddNomineeDialogComponent implements OnInit {\r\n  panelOpenState = true;\r\n  submitted = false;\r\n  formData = {}\r\n  console = console;\r\n  nomineeForms: FormGroup;\r\n  accountId: any;\r\n  isNew: boolean;\r\n  navSubscription: any;\r\n  routeparams: any;\r\n  showEditOption: boolean = false;\r\n  tomorrow = new Date();\r\n  accountIdArray : any[] = [];\r\n  customerId : any;\r\n  arrayCountry: string[] = [];\r\n  entityName: string;\r\n  arrayState: string[] = [];\r\n  arrayCity: string[] = [];\r\n  dob: string;\r\n  arrayPrefix: string[];\r\n  isAllSameDigitVal: boolean= false;\r\n\r\n  constructor\r\n  (\r\n    public dialogRef: MatDialogRef<AddNomineeDialogComponent>,\r\n    private router: Router, \r\n    private dataService: DataService, \r\n    private accountService: AccountService, \r\n    private ls: LocalStoreService, \r\n    private route: ActivatedRoute, \r\n    private snack: MatSnackBar, \r\n    private apiService: ApiService, \r\n    private formBuilder: FormBuilder,\r\n    private confirmService: AppConfirmService, \r\n    private cdr: ChangeDetectorRef\r\n    ) \r\n    { \r\n     this.tomorrow.setDate(this.tomorrow.getDate() );\r\n    }\r\n\r\n  ngOnInit(): void {\r\n \r\n    this.accountId = this.ls.getItem('accountId');\r\n    this.customerId = this.ls.getItem('customerId');\r\n    this.getCountryName(\"country\");\r\n    this.getPrefixValue(\"prefix\");\r\n    this.apiService.getAccountIdByCusId(this.customerId).subscribe((resp) => {\r\n      this.accountIdArray = resp;\r\n      console.log(\"arr acc\",this.accountIdArray);\r\n    });\r\n\r\n    if (this.routeparams) {\r\n      this.showEditOption = true;\r\n      this.buildNomineeForm(this.routeparams);\r\n    } else {\r\n      this.showEditOption = false;\r\n      this.nomineeForms = this.formBuilder.group({\r\n        nominees: new FormArray([])\r\n      });\r\n      this.addFormGroup();\r\n    }\r\n\r\n\r\n    // FOR TESTING\r\n    this.isNew = true;\r\n\r\n  }\r\n  letterOnly(event) {\r\n    var charCode = event.keyCode;\r\n            if ((charCode > 64 && charCode < 91) || (charCode > 96 && charCode < 123) || charCode == 8)\r\n                return true;\r\n            else\r\n                return false;\r\n  }\r\n  goToClose() {\r\n    this.dialogRef.close(\"No\");\r\n  }\r\n\r\n  buildNomineeForm(data) {\r\n    this.nomineeForms = this.formBuilder.group({\r\n      nominees: new FormArray([this.addNomineeFormGroup()])\r\n    });\r\n    this.addGroup(data);\r\n    this.n.patchValue(data);\r\n  }\r\n\r\n\r\n  isObjectEmpty(value) {\r\n    return (\r\n      Object.prototype.toString.call(value) === '[object Object]' &&\r\n      JSON.stringify(value) === '{}'\r\n    );\r\n  }\r\n\r\n\r\n  onChange(control, e): void {\r\n    console.log(\"e,index\", e);\r\n    if (e.checked) {\r\n      this.addGuardian(control);\r\n    } else {\r\n      return control.removeAt(0)\r\n    }\r\n  }\r\n\r\n\r\n  // convenience getters for easy access to form fields\r\n  get f() { return this.nomineeForms.controls; }\r\n  get n() { return this.f.nominees as FormArray; }\r\n\r\n  addNomineeFormGroup(): FormGroup {\r\n    return this.formBuilder.group({\r\n      prefix: ['', Validators.required],\r\n      firstName: ['', Validators.required],\r\n      middleName: [''],\r\n      lastName: ['', Validators.required],\r\n      relationshipType: ['', Validators.required],\r\n      dateOfBirth: ['', Validators.required],\r\n      isNomineeMinor: [false, Validators.required],\r\n      building: ['', Validators.required],\r\n      street: ['', Validators.required],\r\n      locality: ['', Validators.required],\r\n      city: ['', Validators.required],\r\n      state: ['', Validators.required],\r\n      country: ['', Validators.required],\r\n      zipCode: ['',[Validators.required,Validators.pattern(\"[123456789]{1}[0-9]{5}\")]],\r\n      phoneNumber: ['', [Validators.required, Validators.pattern(\"^[0-9]{10,12}$\")]],\r\n      mobileNumber: ['', [Validators.required, Validators.pattern(\"^[0-9]{10,12}$\")]],\r\n      email: ['', [Validators.required, Validators.pattern('^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$')]],\r\n     \r\n      guardianDetails: this.formBuilder.array([]),\r\n    })\r\n  }\r\n\r\n  addFormGroup() {\r\n    this.n.push(this.formBuilder.group({\r\n      prefix: ['', Validators.required],\r\n      firstName: ['', Validators.required],\r\n      middleName: ['', ],\r\n      lastName: ['', Validators.required],\r\n      relationshipType: ['', Validators.required],\r\n      dateOfBirth: ['', Validators.required],\r\n      isNomineeMinor: [false, Validators.required],\r\n      building: ['', Validators.required],\r\n      street: ['', Validators.required],\r\n      locality: ['', Validators.required],\r\n      city: ['', Validators.required],\r\n      state: ['', Validators.required],\r\n      country: ['', Validators.required],\r\n      zipCode: ['', Validators.required],\r\n      phoneNumber: ['', [Validators.required, Validators.pattern(\"^[0-9]{10,12}$\")]],\r\n      mobileNumber: ['', [Validators.required, Validators.pattern(\"^[0-9]{10,12}$\")]],\r\n      email: ['', [Validators.required, Validators.pattern('^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$')]],\r\n      guardianDetails: this.formBuilder.array([]),\r\n    }));\r\n  }\r\n\r\n  addGroup(data?) {\r\n    const numberOfItems = data.length;\r\n    console.log(\"numberOfItems\", numberOfItems);\r\n    for (let index = 1; index < numberOfItems; index++) {\r\n      this.n.push(this.formBuilder.group({\r\n        prefix: ['', Validators.required],\r\n        firstName: ['', Validators.required],\r\n        middleName: ['', ],\r\n        lastName: ['', Validators.required],\r\n        relationshipType: ['', Validators.required],\r\n        dateOfBirth: ['', Validators.required],\r\n        isNomineeMinor: [false, Validators.required],\r\n        building: ['', Validators.required],\r\n        street: ['', Validators.required],\r\n        locality: ['', Validators.required],\r\n        city: ['', Validators.required],\r\n        state: ['', Validators.required],\r\n        country: ['', Validators.required],\r\n        zipCode: ['', Validators.required],\r\n        phoneNumber: ['', [Validators.required, Validators.pattern(\"^[0-9]{10,12}$\")]],\r\n        mobileNumber: ['', [Validators.required, Validators.pattern(\"^[0-9]{10,12}$\")]],\r\n        email: ['', [Validators.required, Validators.pattern('^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$')]],\r\n        guardianDetails: this.formBuilder.array([]),\r\n      }));\r\n    }\r\n  }\r\n\r\n  private addGuardian(control): FormGroup {\r\n    return control.push(\r\n      this.formBuilder.group({\r\n        prefix: ['', Validators.required],\r\n        firstName: ['', Validators.required],\r\n        middleName: [''],\r\n        lastName: ['', Validators.required],\r\n        relationshipType: ['', Validators.required],\r\n        dateOfBirth: ['', Validators.required]\r\n      }))\r\n  }\r\n\r\n\r\n  _keyPress(event: any) {\r\n    const pattern = /[0-9]/;\r\n    let inputChar = String.fromCharCode(event.charCode);\r\n    if (!pattern.test(inputChar)) {\r\n        event.preventDefault();\r\n\r\n    }\r\n}\r\n  onSubmit() {\r\n    this.submitted = true;\r\n   this.nomineeForms.value.nominees.forEach(element => {\r\n    console.log(\"in an arr\",element.dateOfBirth);\r\n    this.dob=this.converDate(element.dateOfBirth);\r\n    element.dateOfBirth=this.dob;\r\n   });\r\n  console.log(\"dob\",this.dob);\r\n   \r\n   \r\n    console.log(\"this.nomineeForms.value.nominees\",this.nomineeForms.value.nominees);\r\n    let testUserId = this.accountIdArray[0].accountId;\r\n    console.log(testUserId);\r\n    let payload = {\r\n      \"productAccountId\": this.accountIdArray[0].accountId,\r\n      \"nominees\": this.nomineeForms.value.nominees\r\n    };\r\n    console.log(\"save\",payload);\r\n    // display form values on success\r\n    console.log('SUCCESS!! :-)\\n\\n', this.nomineeForms.value);\r\n    if (this.nomineeForms.invalid) {\r\n      return;\r\n    }\r\n\r\n    if (this.isNew) {\r\n      this.apiService.createNominee(testUserId, payload)\r\n        .subscribe((data: any) => {\r\n          console.log(data);\r\n          this.snack.open('Nominee Saved!', 'OK', { duration: 4000, verticalPosition: 'top', horizontalPosition: 'right' });\r\n          this.ls.setItem('appEntryStage', true);\r\n          this.ls.setItem('ACC_NOMINEE_DONE', true);\r\n          this.accountService.refresh.next();\r\n          this.dialogRef.close(\"Yes\");\r\n        }, (err: any) => {\r\n          console.log(err);\r\n        });\r\n    } else {\r\n      this.apiService.updateNominee(testUserId, payload)\r\n        .subscribe((data: any) => {\r\n          console.log(data);\r\n          this.snack.open('Nominee Updated!', 'OK', { duration: 4000, verticalPosition: 'top', horizontalPosition: 'right' });\r\n        }, (err: any) => {\r\n          console.log(err);\r\n        });\r\n    }\r\n  }\r\n\r\n  onReset() {\r\n    // reset whole form back to initial state\r\n    this.submitted = false;\r\n    this.nomineeForms.reset();\r\n    this.n.clear();\r\n  }\r\n\r\n  onClear() {\r\n    // clear errors and reset ticket fields\r\n    this.submitted = false;\r\n    this.n.reset();\r\n  }\r\n\r\n  removeNominee(i: number) {\r\n    console.log(\"i\", i);\r\n    this.confirmService\r\n      .confirm({ title: \"Confirm\", message: \"Are you sure want to remove?\", ok: \"Yes\", cancel: \"No\" })\r\n      .subscribe(res => {\r\n        console.log(\"res:: removed \", res);\r\n        if (res) {\r\n          const control = <FormArray>this.nomineeForms.controls['nominees'];\r\n          control.removeAt(i);\r\n          this.cdr.markForCheck();\r\n        } else return;\r\n      });\r\n  }\r\n\r\n  goBack() {\r\n    this.router.navigate([`/home/application/nominee/`, this.accountId]);\r\n  }\r\n// added by vidya For country, state and city\r\ngetCountryName(key: string) {\r\n  this.apiService.getAllCountries().subscribe((data: any) => {\r\n   for(let i=0; i<data.length;i++){\r\n     if(data[i].authStatus==='A'){     \r\n       this.arrayCountry.push(data[i].countryName);\r\n     }\r\n   }\r\n });\r\n}\r\n  \r\ngetStateName(country) {\r\n  this.apiService.getAllCountries().subscribe((data: any) => {\r\n    for(let i=0; i<data.length;i++){       \r\n      if(data[i].countryName == country){\r\n        this.apiService.getStateByCountryId(data[i].id).subscribe((resp: any) => {\r\n        this.arrayState = resp\r\n        })\r\n        break;   \r\n      }\r\n    }\r\n  })\r\n}\r\n\r\n  getPrefixValue(key: string) {\r\n    this.apiService.getDropDownValues(key).subscribe((data) => {\r\n      this.arrayPrefix = data;\r\n    });\r\n  }\r\n\r\n  getCityName(state: any) {\r\n    this.entityName=\"city\";\r\n    console.log(state)\r\n    this.apiService.getDropDownValues1(this.entityName,state).subscribe((data) => {\r\n      this.arrayCity = data;\r\n      console.log(\"-->\", this.arrayCity)\r\n    });\r\n  }\r\n // date conversion\r\n converDate(value) {\r\n  // let date = moment(value).format('YYYY-MM-DDThh:mm:ss');\r\n  let date = moment(value).format('YYYY-MMM-DD');\r\n  console.log(\"date\", date);\r\n  if (date)\r\n    return date;\r\n}\r\n  ngOnDestroy(): void {\r\n    //Called once, before the instance is destroyed.\r\n    //Add 'implements OnDestroy' to the class.\r\n    this.dataService.sendNavParam({});\r\n  }\r\n\r\n  isAllSameDigit(event) {\r\n    let count = 0, number = event.target.value;\r\n    if (number != '') {\r\n      for (var i = 0; i < number.length; i++) {\r\n        if (0 == number[i]) {\r\n          count++;\r\n        }\r\n      }\r\n      console.log('number :: ', number);\r\n      console.log('isAllSameDigitVal :: ', count , number.length)\r\n      if (count == number.length) {\r\n        console.log('if loop')\r\n        this.isAllSameDigitVal = true;\r\n      }\r\n      else {\r\n        this.isAllSameDigitVal = false;\r\n      }\r\n    }else{\r\n      this.isAllSameDigitVal = false;\r\n    }\r\n  }\r\n\r\n}\r\n","<div fxLayout=\"row\" class=\"contain\">\r\n    <mat-icon class=\"backIcon\" (click)=\"goToClose()\">close</mat-icon>\r\n</div>\r\n\r\n<div fxLayout=\"row\" fxLayout.lt-sm=\"column\" class=\"app-top-toolbar\">\r\n    <!-- <button mat-icon-button class=\"mr-1\" (click)=\"toggleSideNav()\"><mat-icon>short_text</mat-icon> </button> -->\r\n    <span fxFlex></span>\r\n    <!-- <span fxFlex=\"20px\"></span> -->\r\n    <button *ngIf=\"!showEditOption\" tabindex=\"-1\" mat-button rounded color=\"primary\" (click)=\"addFormGroup()\">\r\n        <mat-icon>add</mat-icon> ADD NOMINEE\r\n    </button>\r\n</div>\r\n<div fxLayout=\"row\">\r\n    <div fxFlex=\"100\">\r\n        <div class=\"propic text-center\">\r\n            <img src=\"assets/images/svg/Group 47.svg\" alt=\"\" class=\"w-80\" />\r\n        </div>\r\n        <div class=\"profile-title text-center mt-8\">\r\n            <div class=\"main-title\"><b>Nominee Details</b></div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div fxLayout=\"row\">\r\n    <div fxFlex=\"100\">\r\n        <mat-card class=\"p-0\">\r\n            <mat-card-title class=\"\">\r\n                <div class=\"card-title-text\">Nominee Details</div>\r\n                <mat-divider></mat-divider>\r\n            </mat-card-title>\r\n            <mat-card-content>\r\n                <form *ngIf=\"nomineeForms\" [formGroup]=\"nomineeForms\">\r\n                    <div *ngFor=\"let nominee of n.controls; let i = index\">\r\n                        <mat-accordion>\r\n                            <mat-expansion-panel class=\"mb-8\" (opened)=\"panelOpenState = true\"\r\n                                (closed)=\"panelOpenState = false\">\r\n                                <mat-expansion-panel-header>\r\n                                    <mat-panel-title>\r\n                                        {{ showEditOption == true ? 'Edit' :'Create' }} Nominee {{ i + 1 }}\r\n                                    </mat-panel-title>\r\n                                </mat-expansion-panel-header>\r\n                                <div [formGroup]=\"nominee\">\r\n                                    <!-- Nominee Section start-->\r\n                                    <div fxLayout=\"row\" fxLayoutGap=\"25px\">\r\n                                        <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-1\">\r\n                                            <div class=\"pb-1\">\r\n                                                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                                    <mat-label>Prefix*</mat-label>\r\n                                                    <mat-select name=\"prefix\" formControlName=\"prefix\">\r\n                                                        <mat-option *ngFor=\"let prefix of arrayPrefix\" [value]=\"prefix\">\r\n                                                            {{prefix}}\r\n                                                        </mat-option>\r\n                                                    </mat-select>\r\n                                                    <mat-error *ngIf=\"nominee.get('prefix').hasError('required')\">\r\n                                                        Prefix is Required!\r\n                                                    </mat-error>\r\n                                                </mat-form-field>\r\n                                            </div>\r\n\r\n                                            <div fxLayout=\"row\" fxLayoutGap=\"10px\" fxLayoutAlign=\"space-between start\">\r\n                                                <div fxFlex=\"50%\">\r\n                                                    <div class=\"pb-1\">\r\n                                                        <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                                            <mat-label>First Name*</mat-label>\r\n                                                            <input matInput name=\"fname\" formControlName=\"firstName\"\r\n                                                                (keypress)=\"letterOnly($event)\"\r\n                                                                placeholder=\"First Name\" />\r\n                                                            <mat-error\r\n                                                                *ngIf=\"nominee.get('firstName').hasError('required')\">\r\n                                                                First Name is Required!\r\n                                                            </mat-error>\r\n                                                        </mat-form-field>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div fxFlex=\"50%\">\r\n                                                    <div class=\"pb-1\">\r\n                                                        <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                                            <mat-label>Middle Name</mat-label>\r\n                                                            <input matInput name=\"mname\" formControlName=\"middleName\"\r\n                                                                (keypress)=\"letterOnly($event)\"\r\n                                                                placeholder=\"Middle Name\" />\r\n                                                        </mat-form-field>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div fxLayout=\"row\" fxLayoutGap=\"10px\" fxLayoutAlign=\"space-between start\">\r\n                                                <div fxFlex=\"50%\">\r\n                                                    <div class=\"pb-1\">\r\n                                                        <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                                            <mat-label>Last Name*</mat-label>\r\n                                                            <input matInput name=\"lname\" formControlName=\"lastName\"\r\n                                                                (keypress)=\"letterOnly($event)\"\r\n                                                                placeholder=\"Last Name\" />\r\n                                                            <mat-error\r\n                                                                *ngIf=\"nominee.get('lastName').hasError('required')\">\r\n                                                                Last Name is Required!\r\n                                                            </mat-error>\r\n                                                        </mat-form-field>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div fxFlex=\"50%\">\r\n                                                    <div class=\"pb-1\">\r\n                                                        <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                                            <mat-label>Relationship Type*</mat-label>\r\n                                                            <input matInput name=\"rtype\"\r\n                                                                formControlName=\"relationshipType\"\r\n                                                                placeholder=\"Relation Type\" />\r\n                                                            <mat-error\r\n                                                                *ngIf=\"nominee.get('relationshipType').hasError('required')\">\r\n                                                                Relationship Type is Required!\r\n                                                            </mat-error>\r\n                                                        </mat-form-field>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div class=\"pb-1\">\r\n                                                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                                    <mat-label>Date of Birth*</mat-label>\r\n                                                    <input matInput name=\"dob\" readonly formControlName=\"dateOfBirth\"\r\n                                                        placeholder=\"Date of Birth\" [matDatepicker]=\"appDatepicker\"\r\n                                                        [max]=\"tomorrow\" />\r\n\r\n                                                    <mat-datepicker-toggle matSuffix [for]=\"appDatepicker\">\r\n                                                    </mat-datepicker-toggle>\r\n                                                    <mat-error *ngIf=\"nominee.get('dateOfBirth').hasError('required')\">\r\n                                                        Date of Birth is Required!\r\n                                                    </mat-error>\r\n                                                </mat-form-field>\r\n                                                <mat-datepicker #appDatepicker></mat-datepicker>\r\n                                            </div>\r\n\r\n                                            <div class=\"pb-1\">\r\n                                                is the Nominee a minor?\r\n                                                <mat-slide-toggle color=\"primary\" name=\"nominee\"\r\n                                                    formControlName=\"isNomineeMinor\"\r\n                                                    (change)=\"onChange(nominee.controls.guardianDetails,$event,i)\">\r\n                                                </mat-slide-toggle>\r\n                                            </div>\r\n\r\n                                            <div class=\"mt-16\"></div>\r\n\r\n\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                    <!-- Nominee Section end -->\r\n                                    <!-- Guardian section start -->\r\n                                    <div formArrayName=\"guardianDetails\">\r\n                                        <div\r\n                                            *ngFor=\"let guardian of nominee.get('guardianDetails').controls; let j=index\">\r\n                                            <div class=\"card-title-text\">\r\n                                                <h3><strong>Guardians Details</strong></h3>\r\n                                            </div>\r\n                                            <div [formGroupName]=\"j\" fxLayout=\"row\" fxLayoutGap=\"25px\">\r\n\r\n                                                <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-1\">\r\n                                                    <div class=\"pb-1\">\r\n                                                        <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                                            <mat-label>Prefix*</mat-label>\r\n                                                            <mat-select name=\"g_prefix\" formControlName=\"prefix\">\r\n                                                                <mat-option *ngFor=\"let prefix of arrayPrefix\"\r\n                                                                    [value]=\"prefix\">\r\n                                                                    {{prefix}}\r\n                                                                </mat-option>\r\n                                                            </mat-select>\r\n                                                            <mat-error\r\n                                                                *ngIf=\"guardian.get('prefix').hasError('required')\">\r\n                                                                Prefix is Required!\r\n                                                            </mat-error>\r\n                                                        </mat-form-field>\r\n                                                    </div>\r\n\r\n                                                    <div fxLayout=\"row\" fxLayoutGap=\"10px\"\r\n                                                        fxLayoutAlign=\"space-between start\">\r\n                                                        <div fxFlex=\"50%\">\r\n                                                            <div class=\"pb-1\">\r\n                                                                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                                                    <mat-label>First Name*</mat-label>\r\n                                                                    <input matInput name=\"g_fname\"\r\n                                                                        (keypress)=\"letterOnly($event)\"\r\n                                                                        formControlName=\"firstName\"\r\n                                                                        placeholder=\"First Name\" />\r\n                                                                    <mat-error\r\n                                                                        *ngIf=\"guardian.get('firstName').hasError('required')\">\r\n                                                                        First Name is Required!\r\n                                                                    </mat-error>\r\n                                                                </mat-form-field>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div fxFlex=\"50%\">\r\n                                                            <div class=\"pb-1\">\r\n                                                                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                                                    <mat-label>Middle Name</mat-label>\r\n                                                                    <input matInput name=\"g_mname\"\r\n                                                                        (keypress)=\"letterOnly($event)\"\r\n                                                                        formControlName=\"middleName\"\r\n                                                                        placeholder=\"Middle Name\" />\r\n                                                                </mat-form-field>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n\r\n                                                    <div fxLayout=\"row\" fxLayoutGap=\"10px\"\r\n                                                        fxLayoutAlign=\"space-between start\">\r\n                                                        <div fxFlex=\"50%\">\r\n                                                            <div class=\"pb-1\">\r\n                                                                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                                                    <mat-label>Last Name*</mat-label>\r\n                                                                    <input matInput name=\"g_lname\"\r\n                                                                        (keypress)=\"letterOnly($event)\"\r\n                                                                        formControlName=\"lastName\"\r\n                                                                        placeholder=\"Last Name\" />\r\n                                                                    <mat-error\r\n                                                                        *ngIf=\"guardian.get('lastName').hasError('required')\">\r\n                                                                        Last Name is Required!\r\n                                                                    </mat-error>\r\n                                                                </mat-form-field>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div fxFlex=\"50%\">\r\n                                                            <div class=\"pb-1\">\r\n                                                                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                                                    <mat-label>Relationship Type*</mat-label>\r\n                                                                    <input matInput name=\"g_rtype\"\r\n                                                                        formControlName=\"relationshipType\"\r\n                                                                        placeholder=\"Relation Type\" />\r\n                                                                    <mat-error\r\n                                                                        *ngIf=\"guardian.get('relationshipType').hasError('required')\">\r\n                                                                        Relationship Type is Required!\r\n                                                                    </mat-error>\r\n                                                                </mat-form-field>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n\r\n                                                    <div class=\"pb-1\">\r\n                                                        <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                                            <mat-label>Date of Birth*</mat-label>\r\n                                                            <input matInput readonly name=\"g_dob\"\r\n                                                                formControlName=\"dateOfBirth\"\r\n                                                                placeholder=\"Date of Birth\"\r\n                                                                [matDatepicker]=\"appDatepicker1\" [max]=\"tomorrow\" />\r\n\r\n                                                            <mat-datepicker-toggle matSuffix [for]=\"appDatepicker1\">\r\n                                                            </mat-datepicker-toggle>\r\n                                                            <mat-error\r\n                                                                *ngIf=\"guardian.get('dateOfBirth').hasError('required')\">\r\n                                                                Date of Birth is Required!\r\n                                                            </mat-error>\r\n                                                        </mat-form-field>\r\n                                                        <mat-datepicker #appDatepicker1></mat-datepicker>\r\n                                                    </div>\r\n                                                    <div class=\"mt-16\"></div>\r\n\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                    <!-- Guardian section end -->\r\n                                    <!-- Address Section start-->\r\n                                    <mat-accordion>\r\n                                        <mat-expansion-panel class=\"mb-8\" expanded=\"false\">\r\n                                            <mat-expansion-panel-header>\r\n                                                <mat-panel-title>Address </mat-panel-title>\r\n                                            </mat-expansion-panel-header>\r\n\r\n                                            <div fxLayout=\"row\" fxLayoutGap=\"25px\">\r\n                                                <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-1\">\r\n                                                    <div class=\"pb-1\">\r\n                                                        <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                                            <mat-label>Street*</mat-label>\r\n                                                            <input matInput name=\"a_street\" formControlName=\"street\"\r\n                                                                placeholder=\"Street\" />\r\n                                                            <mat-error\r\n                                                                *ngIf=\"nominee.get('street').hasError('required')\">\r\n                                                                Street is Required!\r\n                                                            </mat-error>\r\n                                                        </mat-form-field>\r\n                                                    </div>\r\n                                                    <div class=\"pb-1\">\r\n                                                        <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                                            <mat-label>Country*</mat-label>\r\n                                                            <mat-select name=\"country\" formControlName=\"country\"\r\n                                                                (selectionChange)=\"getStateName($event.value)\">\r\n                                                                <mat-option *ngFor=\"let country of arrayCountry\"\r\n                                                                    [value]=\"country\">\r\n                                                                    {{country}}\r\n                                                                </mat-option>\r\n                                                            </mat-select>\r\n                                                            <mat-error\r\n                                                                *ngIf=\"nominee.get('country').hasError('required')\">\r\n                                                                Country is Required!\r\n                                                            </mat-error>\r\n                                                        </mat-form-field>\r\n                                                    </div>\r\n                                                    <div class=\"pb-1\">\r\n                                                        <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                                            <mat-label>State*</mat-label>\r\n                                                            <mat-select name=\"state\" formControlName=\"state\"\r\n                                                                (selectionChange)=\"getCityName($event.value)\">\r\n                                                                <mat-option *ngFor=\"let state of arrayState\"\r\n                                                                    [value]=\"state.stateName\">{{state.stateName}}</mat-option>\r\n                                                            </mat-select>\r\n                                                            <mat-error\r\n                                                                *ngIf=\"nominee.get('state').hasError('required')\">\r\n                                                                State is Required!\r\n                                                            </mat-error>\r\n                                                        </mat-form-field>\r\n                                                    </div>\r\n\r\n\r\n\r\n\r\n                                                    <div class=\"pb-1\">\r\n                                                        <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                                            <mat-label>Zip Code*</mat-label>\r\n                                                            <input matInput (keypress)=_keyPress($event) name=\"a_zip\"\r\n                                                                formControlName=\"zipCode\" placeholder=\"Zip Code\"\r\n                                                                maxlength=\"10\" onlyNumber\r\n                                                                (keyup)=\"isAllSameDigit($event)\" />\r\n                                                           \r\n                                                            <mat-error *ngIf=\"nominee.get('zipCode').hasError('required') &&\r\n                                                            !nominee.controls['zipCode'].valid && nominee.controls['zipCode']?.touched\">\r\n                                                            Please enter Zip Code!\r\n                                                          </mat-error>\r\n                                                        </mat-form-field>\r\n                                                        <h5 *ngIf=\"isAllSameDigitVal\" style=\"color: #E74C3C;\">Please enter valid Zip Code!\r\n                                                        </h5>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div fxFlex=\"100\" fxFlex.gt-xs=\"50\">\r\n                                                    <div class=\"pb-1\">\r\n                                                        <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                                            <mat-label>Building*</mat-label>\r\n                                                            <input matInput name=\"a_building\" formControlName=\"building\"\r\n                                                                placeholder=\"Building\" />\r\n                                                            <mat-error\r\n                                                                *ngIf=\"nominee.get('building').hasError('required')\">\r\n                                                                Building is Required!\r\n                                                            </mat-error>\r\n                                                        </mat-form-field>\r\n                                                    </div>\r\n\r\n                                                    <div class=\"pb-1\">\r\n                                                        <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                                            <mat-label>Locality*</mat-label>\r\n                                                            <input matInput name=\"a_locality\" formControlName=\"locality\"\r\n                                                                placeholder=\"Locality\" />\r\n                                                            <mat-error\r\n                                                                *ngIf=\"nominee.get('locality').hasError('required')\">\r\n                                                                Locality is Required!\r\n                                                            </mat-error>\r\n                                                        </mat-form-field>\r\n                                                    </div>\r\n                                                    <div class=\"pb-1\">\r\n                                                        <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                                            <mat-label>City*</mat-label>\r\n                                                            <mat-select name=\"city\" formControlName=\"city\">\r\n                                                                <mat-option *ngFor=\"let city of arrayCity\"\r\n                                                                    [value]=\"city.value1\">{{city.value1}}</mat-option>\r\n                                                            </mat-select>\r\n                                                            <mat-error *ngIf=\"nominee.get('city').hasError('required')\">\r\n                                                                City is Required!\r\n                                                            </mat-error>\r\n                                                        </mat-form-field>\r\n                                                    </div>\r\n\r\n                                                </div>\r\n                                            </div>\r\n                                        </mat-expansion-panel>\r\n                                    </mat-accordion>\r\n                                    <!-- Address Section end -->\r\n                                    <!-- Contact Information -->\r\n                                    <mat-accordion>\r\n                                        <mat-expansion-panel class=\"mb-8\" expanded=\"false\">\r\n                                            <mat-expansion-panel-header>\r\n                                                <mat-panel-title>Contact Information </mat-panel-title>\r\n                                            </mat-expansion-panel-header>\r\n\r\n                                            <div fxLayout=\"row\" fxLayoutGap=\"25px\">\r\n                                                <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-1\">\r\n                                                    <div class=\"pb-1\">\r\n                                                        <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                                            <mat-label>Mobile Number</mat-label>\r\n                                                            <input matInput formControlName=\"phoneNumber\" name=\"phone\"\r\n                                                                placeholder=\"Mobile Number\" maxlength=\"10\"\r\n                                                                (keypress)=_keyPress($event) />\r\n                                                            <mat-error\r\n                                                                *ngIf=\"nominee.get('phoneNumber').hasError('required')\">\r\n                                                                Mobile number is Required!\r\n                                                            </mat-error>\r\n                                                            <mat-error\r\n                                                                *ngIf=\"nominee.get('phoneNumber').hasError('pattern')\">\r\n                                                                Not a valid Mobile number\r\n                                                            </mat-error>\r\n                                                        </mat-form-field>\r\n                                                    </div>\r\n                                                    <div class=\"pb-1\">\r\n                                                        <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                                            <mat-label>E-mail*</mat-label>\r\n                                                            <input matInput name=\"email\" formControlName=\"email\"\r\n                                                                placeholder=\"e-mail\" />\r\n                                                            <mat-error\r\n                                                                *ngIf=\"nominee.get('email').hasError('required')\">\r\n                                                                Email is Required!\r\n                                                            </mat-error>\r\n                                                            <mat-error *ngIf=\"nominee.get('email').hasError('pattern')\">\r\n                                                                Email must be a valid email address!\r\n                                                            </mat-error>\r\n                                                        </mat-form-field>\r\n                                                    </div>\r\n\r\n                                                    <!-- <div class=\"pb-1\">\r\n                                  <button\r\n                                    mat-button\r\n                                    color=\"primary\"\r\n                                    (click)=\"addFormGroup()\"\r\n                                  >\r\n                                    <mat-icon>add</mat-icon> ADD NOMINEE\r\n                                  </button>\r\n          \r\n                                  <button\r\n                                    mat-button\r\n                                    color=\"warn\"\r\n                                    (click)=\"removeNominee(i)\"\r\n                                  >\r\n                                    <mat-icon>delete</mat-icon> REMOVE NOMINEE\r\n                                  </button>\r\n                                </div> -->\r\n                                                </div>\r\n                                                <div fxFlex=\"100\" fxFlex.gt-xs=\"50\">\r\n                                                    <div class=\"pb-1\">\r\n                                                        <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                                            <mat-label> Mobile Number</mat-label>\r\n                                                            <input matInput formControlName=\"mobileNumber\"\r\n                                                                maxlength=\"10\" (keypress)=_keyPress($event)>\r\n                                                            <mat-error\r\n                                                                *ngIf=\"nominee.get('mobileNumber').hasError('required')\">\r\n                                                                Mobile Number is Required!\r\n                                                            </mat-error>\r\n                                                            <mat-error\r\n                                                                *ngIf=\"nominee.get('mobileNumber').hasError('pattern')\">\r\n                                                                It is not a valid mobile number.\r\n                                                            </mat-error>\r\n                                                        </mat-form-field>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </mat-expansion-panel>\r\n                                    </mat-accordion>\r\n                                    <!-- Contact Information -->\r\n                                </div>\r\n                                <mat-action-row>\r\n                                    <button mat-button color=\"warn\" (click)=\"removeNominee(i)\">\r\n                                        <mat-icon>delete</mat-icon>REMOVE\r\n                                    </button>\r\n                                </mat-action-row>\r\n                            </mat-expansion-panel>\r\n                        </mat-accordion>\r\n                    </div>\r\n\r\n                    <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\" fxLayoutGap=\"16px\" class=\"mt-32\">\r\n                        <button mat-button rounded color=\"primary\" (click)=\"goToClose()\">\r\n                            Back\r\n                        </button>\r\n                        <button mat-raised-button [disabled]=\"nomineeForms.invalid\" color=\"primary\"\r\n                            (click)=\"onSubmit()\">\r\n                            Save\r\n                        </button>\r\n                    </div>\r\n                </form>\r\n            </mat-card-content>\r\n        </mat-card>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { FormArray, FormBuilder, FormGroup } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\n\r\n@Component({\r\n  selector: 'app-interest-charge-summary',\r\n  templateUrl: './interest-charge-summary.component.html',\r\n  styleUrls: ['./interest-charge-summary.component.scss']\r\n})\r\nexport class InterestChargeSummaryComponent implements OnInit {\r\n  interestForm: FormGroup;\r\n  savingForm: FormGroup;\r\n  loanForm: FormGroup;\r\n  chargeFormIT: FormGroup;\r\n  accountType: any;\r\n  accountId: any;\r\n  accountInfo: any;\r\n  constructor(private ls: LocalStoreService, private snack: MatSnackBar, private api: ApiService, private router: Router, private formBuilder: FormBuilder) { }\r\n\r\n  ngOnInit(): void {\r\n    this.accountId = this.ls.getItem('accountId');\r\n    this.accountInfo = this.ls.getItem('EDIT-CREATEACCCIF');\r\n    if (this.accountInfo) {\r\n      this.accountId = this.accountInfo.businessProductAccount.accountId\r\n    }\r\n    this.accountType = this.ls.getItem('accountType');\r\n    setTimeout(() => {\r\n      this.api.getChargeValues(this.accountId).subscribe(resp => {\r\n        console.log(\"backend resp\", resp)\r\n        this.check(resp === null)\r\n        console.log(\"backend resp\", resp.length)\r\n        this.onChangeInterestCharge(resp.length);\r\n        this.inCharge.patchValue(resp);\r\n      })\r\n      // this.api.getIntrestValues(this.accountId).subscribe(resp => {\r\n      //   console.log(\"backend resp\", resp)\r\n      //   this.check1(resp === null)\r\n      //   console.log(\"backend resp\", resp.length);\r\n      //   this.onChangeInterest(resp.length);\r\n      //   this.in.patchValue(resp);\r\n      // })\r\n      this.api.getFlexcubeDetails(\"intrestDetails\",  this.accountType).subscribe(response => {\r\n        this.onChangeInterest(response.length);\r\n        console.log(response)\r\n        this.in.patchValue(response)\r\n        })\r\n    }, 1);\r\n\r\n    this.chargeFormIT = this.formBuilder.group({\r\n      chargeIT: new FormArray([]),\r\n    });\r\n\r\n    this.interestForm = this.formBuilder.group({\r\n      interest: new FormArray([]),\r\n    });\r\n    this.savingForm = this.formBuilder.group({\r\n      saving: new FormArray([]),\r\n    });\r\n\r\n    this.loanForm = this.formBuilder.group({\r\n      loan: new FormArray([]),\r\n    });\r\n    this.chargeFormIT = this.formBuilder.group({\r\n      chargeIT: new FormArray([]),\r\n    });\r\n\r\n  }\r\n\r\n  onChangeInterestCharge(e) {\r\n    const numberOfItems = e || 0;\r\n    if (this.inCharge.length < numberOfItems) {\r\n      for (let i = this.inCharge.length; i < numberOfItems; i++) {\r\n        this.inCharge.push(\r\n          this.formBuilder.group({\r\n            intrestType: [''],\r\n            amount: [''],\r\n            waiver: [false],\r\n            accountId: [''],\r\n            createdDate: [''],\r\n            craetedBy: [''],\r\n            lastModifiedDate: [''],\r\n            lastModifiedBy: ['']\r\n          })\r\n        );\r\n      }\r\n    } else {\r\n      for (let i = this.inCharge.length; i >= numberOfItems; i--) {\r\n        this.inCharge.removeAt(i);\r\n      }\r\n    }\r\n  }\r\n\r\n  assignAccountType(accountType) {\r\n    this.accountType = accountType\r\n  }\r\n\r\n  onChangeInterest(e) {\r\n    const numberOfItems = e || 0;\r\n    if (this.in.length < numberOfItems) {\r\n      for (let i = this.in.length; i < numberOfItems; i++) {\r\n        this.in.push(\r\n          this.formBuilder.group({\r\n\r\n            intrestType: [\"\"],\r\n            intrestRateApplicable: [\"\"],\r\n            marginIn: [\"\"],\r\n            effectiveRate: [\"\"],\r\n            accountId: [this.accountId],\r\n            createdDate: [\"\"],\r\n            createdBy: [\"\"],\r\n            lastModifiedDate: [\"\"],\r\n            lastModifiedBy: [\"\"],\r\n          })\r\n        );\r\n      }\r\n    } else {\r\n      for (let i = this.in.length; i >= numberOfItems; i--) {\r\n        this.in.removeAt(i);\r\n      }\r\n    }\r\n  }\r\n\r\n  onChangeSaving(e) {\r\n    const numberOfItems = e || 0;\r\n    if (this.is.length < numberOfItems) {\r\n      for (let i = this.is.length; i < numberOfItems; i++) {\r\n        this.is.push(\r\n          this.formBuilder.group({\r\n\r\n            intrestType: [\"\"],\r\n            intrestRateApplicable: [\"\"],\r\n            marginIn: [\"\"],\r\n            effectiveRate: [\"\"],\r\n            accountId: [this.accountId],\r\n            createdDate: [\"\"],\r\n            createdBy: [\"\"],\r\n            lastModifiedDate: [\"\"],\r\n            lastModifiedBy: [\"\"],\r\n          })\r\n        );\r\n      }\r\n    } else {\r\n      for (let i = this.is.length; i >= numberOfItems; i--) {\r\n        this.is.removeAt(i);\r\n      }\r\n    }\r\n  }\r\n\r\n  onChangeLoan(e) {\r\n    const numberOfItems = e || 0;\r\n    if (this.iloan.length < numberOfItems) {\r\n      for (let i = this.iloan.length; i < numberOfItems; i++) {\r\n        this.iloan.push(\r\n          this.formBuilder.group({\r\n            intrestType: [\"\"],\r\n            intrestRateApplicable: [\"\"],\r\n            marginIn: [\"\"],\r\n            effectiveRate: [\"\"],\r\n            accountId: [this.accountId],\r\n            createdDate: [\"\"],\r\n            createdBy: [\"\"],\r\n            lastModifiedDate: [\"\"],\r\n            lastModifiedBy: [\"\"],\r\n          })\r\n        );\r\n      }\r\n    } else {\r\n      for (let i = this.iloan.length; i >= numberOfItems; i--) {\r\n        this.iloan.removeAt(i);\r\n      }\r\n    }\r\n  }\r\n  // convenience getters for easy access to form fields\r\n  get f() {\r\n    return this.interestForm.controls;\r\n  }\r\n  get in() {\r\n    return this.f.interest as FormArray;\r\n  }\r\n  get fs() {\r\n    return this.savingForm.controls;\r\n  }\r\n  get is() {\r\n    return this.fs.saving as FormArray;\r\n  }\r\n  get floan() {\r\n    return this.loanForm.controls;\r\n  }\r\n  get iloan() {\r\n    return this.floan.loan as FormArray;\r\n  }\r\n  get fCharge() {\r\n    return this.chargeFormIT.controls;\r\n  }\r\n  get inCharge() {\r\n    return this.fCharge.chargeIT as FormArray;\r\n  }\r\n\r\n  goBack() {\r\n    this.router.navigate([\"/home/application/enrichment/list\"]);\r\n  }\r\n\r\n  onSubmit() {\r\n\r\n    this.router.navigate(['/home/application/enrichment/list/:id']);\r\n  }\r\n\r\n  check(accountType) {\r\n    if (accountType) {\r\n      console.log(this.snack.open)\r\n      this.snack.open('Charge detail is empty', 'Error', {\r\n        duration: 4000,\r\n        verticalPosition: 'top',\r\n        horizontalPosition: 'right'\r\n      });\r\n    }\r\n  }\r\n\r\n  check1(accountType) {\r\n    if (accountType) {\r\n      console.log(this.snack.open)\r\n      this.snack.open('Intrest detail is empty', 'Error', {\r\n        duration: 4000,\r\n        verticalPosition: 'top',\r\n        horizontalPosition: 'right'\r\n      });\r\n    }\r\n  }\r\n  // check12(){\r\n  //   console.log(this.snack.open)\r\n  //   this.snack.open('Intrest detail is empty', 'Error', {\r\n  //     duration: 4000,\r\n  //     verticalPosition: 'top',\r\n  //     horizontalPosition: 'right'\r\n  //   });\r\n  // }\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n","\r\n     <div class=\"propic text-center\">\r\n        <img src=\"assets/images/svg/undraw_statistic_chart_38b6.svg\" alt=\"\" class=\"w-80\" />\r\n      </div>\r\n<div class=\"profile-title text-center mt-8\">\r\n    <div class=\"main-title\"><b>Application Enrichment</b></div>\r\n  </div>\r\n   \r\n    <div class=\"spanDiv1\">\r\n        <span class=\"span\">Interest Details\r\n\r\n        </span>\r\n        <mat-divider class=\"divider\"></mat-divider>\r\n    </div>\r\n<div fxLayout=\"row wrap\" class=\"main\">\r\n    <div fxFlex=\"100\">\r\n      <!-- <div class=\"propic text-center\">\r\n              <img src=\"assets/images/svg/undraw_statistic_chart_38b6.svg\" alt=\"\" class=\"w-80\" />\r\n            </div> -->\r\n   \r\n      <!-- <div class=\"profile-title text-center mt-8\">\r\n        <div class=\"main-title\"><b>Interest Details</b></div>\r\n      </div> -->\r\n    </div>\r\n    <div fxFlex=\"100\" class=\"m-333\" class=\"mainDiv\">\r\n   \r\n      <div class=\"mt-24\"></div>\r\n      <form *ngIf=\"interestForm\" [formGroup]=\"interestForm\">\r\n        <table\r\n          class=\"cart-table default-bg mat-elevation-z0\"\r\n          [@animate]=\"{ value: '*', params: { delay: '100ms', x: '-50px' } }\"\r\n        >\r\n          <!-- <thead>\r\n            <tr>\r\n              <th class=\"text-muted\">Interest Type</th>\r\n              <th class=\"text-muted\">Interest Rate Applicable</th>\r\n              <th class=\"text-muted\">Margin in %</th>\r\n              <th class=\"text-muted\">Effective Rate %</th>\r\n            </tr>\r\n          </thead> -->\r\n          <tbody>\r\n            <tr class=\"mt-4\" *ngFor=\"let interest of in.controls; let i = index\" style=\"display: flex;flex-wrap: wrap;\">\r\n              <div class=\"row\">\r\n              <ng-container [formGroup]=\"interest\">\r\n                <div class=\"heading\">\r\n                  <input\r\n                    matInput\r\n                    formControlName=\"intrestType\"\r\n                    name=\"account_branch\" id=\"headingInput\"   readonly\r\n                 \r\n                  />\r\n                </div>\r\n                  <td>\r\n                      <mat-card class=\"matCardBox\">\r\n                      <mat-label class=\"label\">Interest Rate Applicable</mat-label>\r\n                      <input\r\n                        matInput\r\n                        formControlName=\"intrestRateApplicable\"\r\n                        name=\"account_branch\"\r\n                        class=\"input\" readonly\r\n                      />\r\n                   </mat-card>\r\n                  </td>\r\n                  <td>\r\n                      <mat-card class=\"matCardBox\">\r\n                      <mat-label class=\"label\">Margin in %</mat-label>\r\n                      <input\r\n                        matInput\r\n                        formControlName=\"marginIn\"\r\n                        name=\"account_branch\"\r\n                        class=\"input\"\r\n                        readonly\r\n                      />\r\n                  </mat-card>\r\n                  </td>\r\n                  <td>\r\n                      <mat-card class=\"matCardBox\">\r\n                      <mat-label class=\"label\">Effective Rate %</mat-label>\r\n                      <input\r\n                        matInput\r\n                        formControlName=\"effectiveRate\"\r\n                        name=\"account_branch\"\r\n                     \r\n                        value=\"\" class=\"input\"\r\n                        readonly\r\n                      />\r\n                   \r\n                    </mat-card>\r\n                  </td>\r\n              </ng-container>\r\n              </div>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </form>\r\n    </div>\r\n  \r\n    <!-- <div fxFlex=\"100\" class=\"mt-16\">\r\n      <span mat-stroked-button color=\"primary\" (click)=\"goBack()\">edit</span>\r\n      <span fxFlex></span>\r\n      <!-- <button mat-raised-button color=\"primary\" type=\"button\" [disabled]=\"interestForm.invalid\" (click)=\"onSubmit(interestForm.value)\">DONE</button> -->\r\n    <!-- </div> --> \r\n  \r\n  </div>\r\n  \r\n \r\n\r\n  <div class=\"spanDiv1\">\r\n    <span class=\"span\">Charge Details\r\n\r\n    </span>\r\n    <mat-divider class=\"divider\"></mat-divider>\r\n</div>\r\n\r\n  <div fxLayout=\"row wrap\" class=\"main\">\r\n    <div fxFlex=\"100\">\r\n      <!-- <div class=\"propic text-center\">\r\n              <img src=\"assets/images/svg/undraw_statistic_chart_38b6.svg\" alt=\"\" class=\"w-80\" />\r\n            </div> -->\r\n   \r\n      <!-- <div class=\"profile-title text-center mt-8\">\r\n        <div class=\"main-title\"><b>Interest Details</b></div>\r\n      </div> -->\r\n    </div>\r\n    <div fxFlex=\"100\" class=\"m-333\" class=\"mainDiv\">\r\n      <!-- <h5>IT Charge</h5> -->\r\n      <div class=\"mt-24\"></div>\r\n      <form *ngIf=\"chargeFormIT\" [formGroup]=\"chargeFormIT\">\r\n        <table\r\n          class=\"cart-table default-bg mat-elevation-z0\"\r\n          [@animate]=\"{ value: '*', params: { delay: '100ms', x: '-50px' } }\"\r\n        >\r\n          <!-- <thead>\r\n            <tr>\r\n              <th class=\"text-muted\">Interest Type</th>\r\n              <th class=\"text-muted\">Interest Rate Applicable</th>\r\n              <th class=\"text-muted\">Margin in %</th>\r\n              <th class=\"text-muted\">Effective Rate %</th>\r\n            </tr>\r\n          </thead> -->\r\n          <tbody>\r\n            <tr class=\"mt-4\" *ngFor=\"let chargeIT of inCharge.controls; let i = index\" style=\"display: flex;  flex-wrap: wrap;\">\r\n              <div class=\"row\" >\r\n              <ng-container [formGroup]=\"chargeIT\" >\r\n                <div class=\"heading\">\r\n                  <input\r\n                  matInput\r\n                  formControlName=\"intrestType\"\r\n                  name=\"account_branch\" id=\"headingInput\"    readonly\r\n                 \r\n                  />\r\n                </div>\r\n                  <td>\r\n                    <mat-card class=\"matCardBox\">\r\n                      <mat-label class=\"label\">Amount</mat-label>\r\n                      <input\r\n                        matInput\r\n                        formControlName=\"amount\"\r\n                        name=\"account_branch\" class=\"input\" readonly\r\n          \r\n                      />\r\n                    \r\n                   </mat-card>\r\n                  </td>\r\n             \r\n              </ng-container>\r\n              </div>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </form>\r\n    </div>\r\n  \r\n    <!-- <div fxFlex=\"100\" class=\"mt-16\">\r\n      <span mat-stroked-button color=\"primary\" (click)=\"goBack()\">edit</span>\r\n      <span fxFlex></span>\r\n     <button mat-raised-button color=\"primary\" type=\"button\" [disabled]=\"interestForm.invalid\" (click)=\"onSubmit(interestForm.value)\">DONE</button> -->\r\n    <!-- </div> --> \r\n \r\n  \r\n  </div>\r\n  <div >\r\n    <!-- <button mat-raised-button color=\"primary\" type=\"button\"  (click)=\"onSubmit()\" >DONE</button>\r\n   \r\n    <span fxFlex></span> -->\r\n  \r\n    <a mat-stroked-button color=\"primary\" [routerLink]=\"['/home/application/enrichment/list/', accountId ]\">BACK</a>\r\n      <span fxFlex></span>\r\n      <button mat-raised-button color=\"primary\" type=\"button\"  (click)=\"onSubmit()\">DONE</button>\r\n  </div>\r\n  <!-- <span class=\"spanDiv\">Edit</span> -->\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { rumangoAnimations } from 'app/shared/animations/rumango-animations';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { AccountService } from '../account.service';\r\n\r\n@Component({\r\n  selector: 'app-charge-edit',\r\n  templateUrl: './charge-edit.component.html',\r\n  styleUrls: ['./charge-edit.component.scss'],\r\n  animations:rumangoAnimations\r\n})\r\nexport class ChargeEditComponent implements OnInit {\r\n\r\n  chargeForm: FormGroup;\r\n  flag: boolean = false;\r\n  accountType: any;\r\n  accountInfo: any;\r\n  constructor(private api: ApiService, private snack: MatSnackBar, private accountService: AccountService, private router: Router, private formBuilder: FormBuilder, private ls: LocalStoreService) { }\r\n  accountId: any;\r\n  ngOnInit(): void {\r\n    this.accountId = this.ls.getItem('accountId');\r\n    this.accountInfo = this.ls.getItem('EDIT-CREATEACCCIF');\r\n    if(this.accountInfo){\r\n      this.accountId=this.accountInfo.businessProductAccount.accountId\r\n    }\r\n    this.accountType=this.ls.getItem('accountType');\r\n  \r\n    this.api.getChargeValues(this.accountId).subscribe(resp=>{\r\n      console.log(\"backend resp\",resp)\r\n      this.check(resp=== null)\r\n      console.log(\"backend resp\",resp.length);\r\n       \r\n       \r\n      // const filteredResponse = resp.filter(res => res.intrestType === 'in hand');\r\n  \r\n         this.onChangeInterest(resp.length);\r\n      this.c.patchValue(resp);\r\n     \r\n      // const filteredResponseSave = resp.filter(res => res.intrestType === 'Handling Charge');\r\n      // console.log(filteredResponseSave.length)\r\n      // if(filteredResponseSave.length===0){\r\n      //   this.form2=false;\r\n      // }\r\n      // if(filteredResponseSave.length!=0){\r\n      //   this.form2=false;\r\n      // }\r\n//       console.log(this.form2)\r\n//       this.onChangeSaving(filteredResponseSave.length);\r\n//       this.is.patchValue(filteredResponseSave);\r\n// this.flagValue(filteredResponseSave.length,filteredResponse.length)\r\n      \r\n      \r\n    \r\n    })\r\n\r\n  \r\n    this.chargeForm = this.formBuilder.group({\r\n      charges: new FormArray([])\r\n    });\r\n    this.onChangeInterest(2);\r\n    // this.onChangeInterest(2);\r\n  }\r\n  assign(accountId: any) {\r\n    // this.accountId = accountId;\r\n  }\r\n\r\n  onChangeInterest(e) {\r\n    const numberOfItems = e || 0;\r\n    if (this.c.length < numberOfItems) {\r\n      for (let i = this.c.length; i < numberOfItems; i++) {\r\n        this.c.push(this.formBuilder.group({\r\n          //         private Long id;\r\n          // private String intrestType;\r\n          // private Double amount;\r\n          // private Boolean waiver;\r\n          // private String accountId;\r\n          // @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = \"yyyy-MMM-dd HH:mm:ss\")\r\n          // private Timestamp createdDate;\r\n          // private Long createdBy;\r\n          // @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = \"yyyy-MMM-dd HH:mm:ss\")\r\n          // private Timestamp lastModifiedDate;\r\n          // private Long lastModifiedBy;\r\n          intrestType: [''],\r\n          amount: ['',Validators.required],\r\n          waiver: [false],\r\n          accountId: [this.accountId],\r\n          createdDate: [''],\r\n          craetedBy: [''],\r\n          lastModifiedDate: [''],\r\n          lastModifiedBy: [''],\r\n          id: ['']\r\n\r\n        }));\r\n      }\r\n    } else {\r\n      for (let i = this.c.length; i >= numberOfItems; i--) {\r\n        this.c.removeAt(i);\r\n      }\r\n    }\r\n  }\r\n\r\n  // convenience getters for easy access to form fields\r\n  get f() { return this.chargeForm.controls; }\r\n  get c() { return this.f.charges as FormArray; }\r\n\r\n\r\n  goBack() {\r\n    this.router.navigate([`/home/application/enrichment/interestEdit/${this.accountId}`]);\r\n  }\r\n\r\n  onSubmit(form) {\r\n    form.charges = form.charges.map(charges => ({\r\n      ...charges,\r\n      accountId: this.accountId,\r\n    }))\r\n    form.waiver = this.flag\r\n    form.accountId = '123456'\r\n    console.log(\"form value\", form.charges);\r\n\r\n    this.accountService.refresh.next();\r\n    this.api.chargeDetailsSave(form.charges).subscribe(resp => {\r\n      this.snack.open('Account Saved!', 'OK', {\r\n        duration: 4000,\r\n        verticalPosition: 'top',\r\n        horizontalPosition: 'right'\r\n      });\r\n      console.log(\"resp from backend\", resp)\r\n      this.ls.setItem('enrichmentStage', true);\r\n      this.ls.setItem('ENRICHMENT_CHARGES_DONE', true);\r\n      this.router.navigate([`/home/application/assessment/list/${this.accountId}`]);\r\n    }, err => {\r\n      this.snack.open('Server Error!', 'OK', {\r\n        duration: 4000,\r\n        verticalPosition: 'top',\r\n        horizontalPosition: 'right'\r\n      });\r\n    })\r\n\r\n  }\r\n  checkboxChanged(event) {\r\n    console.log(event.checked);\r\n    this.flag = event.checked;\r\n  }\r\n  check(accountType){\r\n\r\n    if(accountType){\r\n\r\n      console.log(this.snack.open)\r\n      this.snack.open('charge detail is empty', 'Error', {\r\n        duration: 4000,\r\n        verticalPosition: 'top',\r\n        horizontalPosition: 'right'\r\n      });\r\n    }\r\n  }\r\n\r\n  _keyPress(event: any) {\r\n    const pattern = /[a-zA-Z]/;\r\n    let inputChar = String.fromCharCode(event.charCode);\r\n    if (!pattern.test(inputChar)) {\r\n      event.preventDefault();\r\n\r\n    }\r\n  }\r\n\r\n}\r\n\r\n","<div fxLayout=\"row wrap\">\r\n    <div fxFlex=\"100\">\r\n      <div class=\"propic text-center\">\r\n              <img src=\"assets/images/svg/undraw_Payments_re_77x0.svg\" alt=\"\" class=\"w-80\" />\r\n      </div>\r\n      <div class=\"profile-title text-center mt-8\">\r\n        <div class=\"main-title\"><b>Charge Details</b></div>\r\n      </div>\r\n    </div>\r\n    <div fxFlex=\"100\" class=\"m-333\">\r\n      <h5>Charge Details</h5>\r\n      <div class=\"mt-24\"></div>\r\n      <form *ngIf=\"chargeForm\" [formGroup]=\"chargeForm\">\r\n        <table\r\n          class=\"cart-table default-bg mat-elevation-z0\"\r\n        >\r\n          <thead>\r\n            <tr>\r\n              <th class=\"text-muted\">Interest Type</th>\r\n              <th class=\"text-muted\">Amount*</th>\r\n              <th class=\"text-muted\">Waiver</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr class=\"mt-4\" *ngFor=\"let charge of c.controls; let i = index\">\r\n              <ng-container [formGroup]=\"charge\">\r\n                <td>\r\n                  <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                    <mat-label>Interest Type</mat-label>\r\n                    <input\r\n                      matInput\r\n                      formControlName=\"intrestType\"\r\n                      name=\"account_branch\"\r\n                      placeholder=\"Interest Type\" \r\n                      (keypress)=_keyPress($event) \r\n                    />\r\n                    <mat-icon matSuffix>credit_card</mat-icon>\r\n                  </mat-form-field>\r\n                </td>\r\n                <td>\r\n                  <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                    <mat-label>Amount*</mat-label>\r\n                    <input\r\n                      matInput\r\n                      formControlName=\"amount\" type=\"number\" \r\n                      name=\"account_branch\"\r\n                      placeholder=\"Amount\"\r\n                    />\r\n                    <mat-icon matSuffix>class</mat-icon>\r\n                    <mat-error *ngIf=\"charge.controls['amount'].errors?.required\">\r\n                    amount is <strong>required</strong>\r\n                    </mat-error>\r\n                 \r\n                  </mat-form-field>\r\n                </td>\r\n                <td>\r\n                    <div style=\"text-align: center;\" class=\"waiver-pos\">\r\n                        <mat-checkbox formControlName=\"waiver\" (change) = \"checkboxChanged($event)\" color=\"primary\"></mat-checkbox>\r\n                    </div>\r\n                    \r\n                </td>\r\n        \r\n              </ng-container>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </form>\r\n    </div>\r\n  \r\n    <div fxFlex=\"100\" class=\"mt-16\">\r\n      <button mat-button rounded (click)=\"goBack()\">BACK</button>\r\n      <span fxFlex></span>\r\n      <button mat-raised-button color=\"primary\" class=\"Nextbtn\" type=\"button\"  (click)=\"onSubmit(chargeForm.value)\" [disabled]=\"chargeForm.invalid\">Next</button>\r\n    </div>\r\n  \r\n  </div>\r\n  ","import { ApiService } from './../../../../shared/services/api.service';\r\nimport { Component, OnInit, ViewChildren } from '@angular/core';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { Router } from '@angular/router';\r\nimport { rumangoAnimations } from 'app/shared/animations/rumango-animations';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { AccountService } from '../../account.service';\r\nimport { AccountComponent } from '../../application-entry-stage/account/account.component';\r\nimport { EsignPopComponent } from '../esign-pop/esign-pop.component';\r\nimport { ApplicationEntryStageService } from 'app/shared/services/application-entry-stage.service';\r\nimport { UrlService } from '../../url.service';\r\nimport { UploadSignEsignComponent } from '../upload-sign-esign/upload-sign-esign.component';\r\nimport { DialogService } from 'app/shared/services/dialogs/dialog.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-list',\r\n  templateUrl: './list.component.html',\r\n  styleUrls: ['./list.component.scss'],\r\n  animations: rumangoAnimations\r\n})\r\nexport class ListComponent implements OnInit {\r\n  accountId: any;\r\n  accountdetailsForStatusUpdate: Object;\r\n  previousUrl: string = '';\r\n  show: boolean = false;\r\n  show1: any;\r\n  accountInfo: any;\r\n  selectedFile: any;\r\n  data: any;\r\n  res: Object = { 'enable': false, 'image': null };\r\n  isDone: boolean = false;\r\n\r\n  constructor(private dialog: MatDialog,\r\n    private router: Router,\r\n    private ls: LocalStoreService,\r\n    private dialogService: DialogService,\r\n    private accountService: AccountService,\r\n    private apiService: ApplicationEntryStageService,\r\n    private urlService: UrlService,\r\n    private api: ApiService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.accountId = this.ls.getItem('accountId');\r\n    this.accountInfo = this.ls.getItem('EDIT-CREATEACCCIF');\r\n    if(this.accountInfo){\r\n      this.accountId=this.accountInfo.businessProductAccount.accountId\r\n    }\r\n    this.urlService.previousUrl$\r\n      .subscribe((previousUrl: string) => {\r\n        this.previousUrl = previousUrl\r\n      });\r\n\r\n\r\n  }\r\n\r\n\r\n  openPopUp(data?: any) {\r\n    let response: any;\r\n    if (data === undefined || data === null) {\r\n      response = {\r\n        isSignLater: false,\r\n        screen: 'Create Account'\r\n      };\r\n    }\r\n    if (!this.show) {\r\n      let dialogRef: MatDialogRef<any> = this.dialog.open(UploadSignEsignComponent, {\r\n        width: '720px',\r\n        disableClose: true,\r\n        data: ((data === undefined || data === null) ? response : data)\r\n      })\r\n      dialogRef.afterClosed().subscribe(res => {\r\n        this.show = this.ls.getItem(\"enable\");\r\n        if (res) {\r\n          //  this.show=res;\r\n          setTimeout(() => {\r\n            this.getByAccountId(this.accountId);\r\n          }, 1);\r\n          \r\n          //  this.resetState();\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  getByAccountId(accountId: any) {\r\n    this.apiService.getByAccountId(accountId)\r\n      .subscribe(resp => {\r\n        this.accountdetailsForStatusUpdate = resp;\r\n        this.updateAccountStatus(resp);\r\n      });\r\n  }\r\n\r\n  updateAccountStatus(accData) {\r\n    accData.status = 'BACKLOG';\r\n    this.apiService.updateAccountStatusService(accData)\r\n      .subscribe(updateResp => {\r\n      });\r\n  }\r\n\r\n  goBack() {\r\n    // this.router.navigate([this.previousUrl]);\r\n    this.router.navigate([`/home/application/digital-sign/home/${this.accountId}`]);\r\n\r\n  }\r\n\r\n  resetState() {\r\n    this.ls.removeItem('appEntryStage');\r\n    this.ls.removeItem('ACC_DONE');\r\n    this.ls.removeItem('ACC_OPEN_DONE');\r\n    this.ls.removeItem('ACC_SERVICE_DONE');\r\n    this.ls.removeItem('ACC_MANDATE_DONE');\r\n    this.ls.removeItem('ACC_NOMINEE_DONE');\r\n\r\n    this.ls.removeItem('limitEntryStage');\r\n    this.ls.removeItem('LIMIT_SECURED_DONE');\r\n    this.ls.removeItem('LIMIT_UNSECURED_DONE');\r\n    this.ls.removeItem('LIMIT_FIN_DONE');\r\n\r\n    // Parent 3\r\n    this.ls.removeItem('enrichmentStage');\r\n    // Subnave of parent 3\r\n    this.ls.removeItem('ENRICHMENT_CHARGES_DONE');\r\n    this.ls.removeItem('ENRICHMENT_INTEREST_DONE');\r\n\r\n    // PArent 4\r\n    this.ls.removeItem('assessmentStage');\r\n    // Subnave of parent 4\r\n    this.ls.removeItem('ASSESSMENT_QA_DONE');\r\n    this.ls.removeItem('ASSESSMENT_REPORT_DONE');\r\n    // PArent 5\r\n    this.ls.removeItem('fundingStage');\r\n    // Subnave of parent 5\r\n    this.ls.removeItem('FUNDING_INI_DONE');\r\n\r\n    // Parent 6\r\n    this.ls.removeItem('approvalStage');\r\n    // Parent 6 childs nav\r\n    this.ls.removeItem('APPROVAL_DETAILS_DONE');\r\n    this.ls.removeItem('accountId');\r\n    this.ls.removeItem('eSignStage');\r\n    this.ls.removeItem('PRODUCT_CUSTOMER_ID');\r\n    this.ls.removeItem('accountType');\r\n    this.ls.removeItem('intrestFlag');\r\n    this.ls.removeItem('Status');\r\n    this.ls.removeItem(\"CIF_NUM_PRIMARY\");\r\n    this.ls.removeItem(\"cId\");\r\n    this.ls.removeItem(\"fundByStatus\");\r\n    this.ls.removeItem(\"overDraftByStatus\");\r\n    this.ls.removeItem(\"EDIT-CREATEACCCIF\");\r\n    this.ls.removeItem('signedImage');\r\n    sessionStorage.clear();\r\n    this.accountService.refresh.next();\r\n    this.router.navigate(['/home']);\r\n  }\r\n\r\n  onSubmit() {\r\n    let payload = {\r\n      accountId: this.accountId,\r\n      esignLink: \"gcom\",\r\n      subject: \"testing\"\r\n    };\r\n    this.api.signInLater(payload)\r\n      .subscribe((data: any) => {\r\n        this.getByAccountId(this.accountId);\r\n        this.ls.setItem('eSignStage', true);\r\n        this.ls.setItem('enable',true);\r\n        this.accountService.refresh.next();\r\n        let response: any = {\r\n          email: data.email,\r\n          customerId: data.customerId,\r\n          subject: data.subject,\r\n          isSignLater: true,\r\n          screen: 'Create Account'\r\n        };\r\n        this.isDone=true;\r\n    this.dialogService.alertForSignLater().subscribe((response) => {\r\n      console.log(\"response ::\", response);                 \r\n    });  \r\n    this.show = this.ls.getItem(\"enable\");\r\n        \r\n      }, (err: any) => {\r\n\r\n\r\n      })\r\n  }\r\n\r\n  onDone(){\r\n    this.isDone=true;\r\n    this.dialogService.alertForFinishButton().subscribe((response) => {\r\n      console.log(\"response ::\", response);                 \r\n    });    \r\n\r\n  }\r\n\r\n  onUpload(event) {\r\n    let data: any = {};\r\n    this.selectedFile = event.target.files[0];\r\n    if (this.data === undefined || this.data === null) {\r\n      this.data = {\r\n        isSignLater: true,\r\n        screen: 'Create Account'\r\n      };\r\n    }\r\n    this.isDone = false;\r\n\r\n    if (this.data.screen !== \"NewCustomerOnboarding\") {\r\n      data.accountId = this.ls.getItem('accountId');\r\n      this.getByAccountId(data.accountId);\r\n    }\r\n    else {\r\n      let customerId = this.data.customerId;\r\n      this.api.getAccountIdByCusId(customerId).subscribe(res => {\r\n        data.accountId = res;\r\n      })\r\n      // this.res = {enable:true, image:this.signaturePad.toDataURL()};\r\n    }\r\n    data.accountId = 14960;\r\n    data.customerId = this.data.customerId;\r\n    data.documentName = this.data.customerId + \"Signature\";\r\n    data.documentType = \"10\"\r\n    data.fileType = \"image/jpeg\";\r\n    data.fileName = \"signature\";\r\n\r\n    const uploadData = new FormData();\r\n    uploadData.append('data', JSON.stringify(data));\r\n    uploadData.append('file', this.selectedFile);\r\n    uploadData.append('accType', \"savings\")\r\n\r\n    this.api.uploadDocument(uploadData).subscribe((op) => {\r\n      if (op) {\r\n        this.show = true;\r\n        this.res = op;\r\n        data.isDone = true;\r\n        let dialogRef: MatDialogRef<any> = this.dialog.open(EsignPopComponent, {\r\n          width: '720px',\r\n          disableClose: true,\r\n          data: ((data === undefined ||data === null) ? this.data : data)\r\n        })\r\n        dialogRef.afterClosed().subscribe(res => {\r\n          if (res) {\r\n            this.show = this.ls.getItem(\"enable\");\r\n            this.getByAccountId(this.accountId);\r\n          }\r\n        })\r\n      }\r\n    });\r\n\r\n    if (this.data.screen !== \"NewCustomerOnboarding\") {\r\n      this.isDone = true;\r\n      this.ls.setItem('enable', true);\r\n    }\r\n    this.ls.setItem('eSignStage', true);\r\n  }\r\n\r\n}\r\n","<div class=\"matcard-size\">\r\n<div fxLayout=\"row wrap\">\r\n  <div fxFlex=\"100\">\r\n    <div class=\"propic text-center\">\r\n      <img src=\"assets/images/svg/digi.svg\" alt=\"\" class=\"w-80\" />\r\n    </div>\r\n    <div class=\"profile-title text-center mt-8\">\r\n      <div class=\"main-title1\">Digital Signing</div>\r\n\r\n    </div>\r\n  </div>\r\n  <mat-card class=\"mat-card-img\">\r\n    <div fxFlex=\"100\" class=\"mt-32\">\r\n      <!-- <mat-card class=\"sign-box hoveradd\" [@animate]=\"{ value: '*', params: { delay: '300ms', y: '50px' } }\" matRipple> -->\r\n        <mat-card class=\"sign-box hoverAdd\" (click)=\"openPopUp()\" [@animate]=\"{ value: '*', params: { delay: '300ms', y: '50px' } }\" matRipple>\r\n        <mat-card-content class=\"p-0\">\r\n          <mat-list class=\"compact-list mb-16\">\r\n            <mat-list-item class=\"\">\r\n              <img class=\"mr-16\" src=\"assets/images/svg/signnow.png\" alt=\"\" />\r\n              <!-- [ngClass]=\" show ? 'primary' : 'secondary'\" -->\r\n              <div fxLayout=\"column\" fxFlex=\"100\">\r\n                <h3 class=\"m-0 mr-16\">Sign Now</h3>\r\n                <span fxFlex></span>\r\n                <br>\r\n                <div fxFlex=\"40\" class=\"text\">\r\n                  Enables you to digitally sign the document. To e sign the\r\n                  document, click on it, create your eSignature, click on Done and\r\n                  it will add to your document.\r\n                </div>\r\n              </div>\r\n            </mat-list-item>\r\n          </mat-list>\r\n        </mat-card-content>\r\n      </mat-card>\r\n    </div>\r\n\r\n    <div fxFlex=\"100\">\r\n      <div class=\"text-center\">\r\n        <button mat-button class=\"text\">OR</button>\r\n      </div>\r\n    </div>\r\n    <!-- \r\n    <div fxFlex=\"100\">\r\n      <mat-card class=\"rounded-circle\" [@animate]=\"{ value: '*', params: { delay: '300ms', y: '50px' } }\" matRipple>\r\n        <mat-card-content class=\"p-0\">\r\n          <mat-list class=\"compact-list mb-16\">\r\n            <mat-list-item class=\"\">\r\n              <img mat-list-avatar class=\"mr-16\" src=\"assets/images/esign.jpg\" alt=\"\" />\r\n            \r\n              <div fxLayout=\"column\" fxFlex=\"100\">\r\n                <h3 class=\"m-0 mr-16\">Upload Signature</h3>\r\n                <input type=\"file\" class=\"changeInput\" (change)=\"onUpload($event)\" accept=\"image/*\">\r\n                <span fxFlex></span>\r\n                <div fxFlex=\"40\" class=\"mt-4\">\r\n                  Enables you to upload your signature. To uplaod, click\r\n                  here, upload your signature in image format and\r\n                  it will be added to your document.\r\n                </div>\r\n              </div>\r\n\r\n            </mat-list-item>\r\n          </mat-list>\r\n        </mat-card-content>\r\n      </mat-card>\r\n    </div> -->\r\n\r\n    <!-- <div fxFlex=\"100\">\r\n      <div class=\"text-center\">\r\n        <button mat-button class=\"full-width\">OR</button>\r\n      </div>\r\n    </div> -->\r\n\r\n    <div fxFlex=\"100\">\r\n      <!-- <mat-card class=\"sign-box hoveradd\" [@animate]=\"{ value: '*', params: { delay: '300ms', y: '50px' } }\" matRipple> -->\r\n        <mat-card class=\"sign-box hoverAdd\" (click)=\"onSubmit()\" [@animate]=\"{ value: '*', params: { delay: '300ms', y: '50px' } }\" matRipple>\r\n        <mat-card-content class=\"p-0\">\r\n          <mat-list class=\"compact-list mb-16\">\r\n            <mat-list-item class=\"\" >\r\n              <img  class=\"mr-16\" src=\"assets/images/svg/signlater.png\" alt=\"\" />\r\n              <!-- [ngClass]=\" show ? 'primary' : 'primary'\" -->\r\n              <div fxLayout=\"column\" fxFlex=\"100\">\r\n                <h3 class=\"m-0 mr-16\">Sign Later</h3>\r\n                <span fxFlex></span>\r\n                <br>\r\n                <div fxFlex=\"40\" class=\"text\">\r\n                  Enables you to sign the document later. To sign later, click\r\n                  here, an email will be sent to the respective email id provided\r\n                  with a sign link. You can verify and sign later.\r\n                </div>\r\n              </div>\r\n\r\n            </mat-list-item>\r\n          </mat-list>\r\n        </mat-card-content>\r\n      </mat-card>\r\n    </div>\r\n  </mat-card>\r\n  <div fxFlex=\"100\" class=\"mt-16\">\r\n    <button mat-button rounded class=\"Backbtn\"(click)=\"goBack()\">Back</button>\r\n    <span fxFlex></span>\r\n\r\n    <button mat-raised-button color=\"primary\" class=\"Nextbtn\" type=\"button\" [disabled]=\"!show\" (click)=\"onDone()\">Finish</button>\r\n  </div>\r\n\r\n</div>\r\n</div>\r\n","import { ChangeDetectorRef, Component, OnInit } from '@angular/core';\r\nimport { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport * as moment from 'moment';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { AccountService } from '../../account.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { DataService } from 'app/shared/services/data.service';\r\nimport { empty, Subscription } from 'rxjs';\r\nimport { Year } from '@syncfusion/ej2-schedule';\r\nimport Swal from 'sweetalert2';\r\nimport { UrlService } from '../../url.service';\r\nimport { minDate } from 'ngx-custom-validators/src/app/min-date/validator';\r\n\r\n\r\n@Component({\r\n  selector: 'app-unsecured-draft',\r\n  templateUrl: './unsecured-draft.component.html',\r\n  styleUrls: ['./unsecured-draft.component.scss']\r\n})\r\nexport class UnsecuredDraftComponent implements OnInit {\r\n  unsecuredForms: FormGroup;\r\n  submitted = false;\r\n  accountId: any;\r\n  months: any;\r\n  currency: any;\r\n  selectedYear: number;\r\n  years: number[] = [];\r\n  selectedDay: number = 1;\r\n  days: number[] = [];\r\n\r\n  tomorrow = new Date();\r\n  maxDate = new Date();\r\n  minDate = new Date();\r\n\r\n  unsecureoverdraftdata: any;\r\n\r\n  navSubscription: Subscription;\r\n  routeparams: any;\r\n  showEditOption: boolean = false;\r\n  loggedInUser: any = \"123456\";\r\n  previousUrl: string = '';\r\nflag:boolean;\r\n  isSecuredScreen: boolean;\r\n  isUnSecureDraftScreen: any;\r\n  constructor(private api: ApiService, private snack: MatSnackBar,\r\n    private formBuilder: FormBuilder, private router: Router,\r\n    private cdr: ChangeDetectorRef,\r\n    private ls: LocalStoreService, private accountService: AccountService,\r\n    private dataService: DataService, private urlService: UrlService) {\r\n\r\n    this.selectedYear = new Date().getFullYear();\r\n    for (let year = this.selectedYear; year >= 2000; year--) {\r\n      this.years.push(year);\r\n    }\r\n\r\n    // this.selectedDay = new Date().getDay();\r\n    for (let day = this.selectedDay; day <= 31; day++) {\r\n      this.days.push(day);\r\n    }\r\n\r\n    this.tomorrow.setDate(this.tomorrow.getDate());\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.accountId = this.ls.getItem('accountId');\r\n    console.log( this.ls.getItem('LIMIT_SECURED_DONE'));\r\n    this.isSecuredScreen = this.ls.getItem('LIMIT_SECURED_DONE');\r\n    console.log(this.isSecuredScreen);\r\n    if(this.isSecuredScreen!=null|| this.isSecuredScreen==true){\r\n      this.snack.open('Secured Overdraft Is Already Filled,so click next button to continue!', 'OK', {\r\n        duration: 4000,\r\n        verticalPosition: 'top',\r\n        horizontalPosition: 'right'\r\n      });\r\n    }\r\n    this.isUnSecureDraftScreen = JSON.parse(this.ls.getItem('LIMIT_UNSECURED_DONE'));\r\n\r\n    this.months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\r\n    // this.currency = ['USD', 'EUR', 'INR'];\r\n    this.getCurrencyDetails()\r\n\r\n    this.urlService.previousUrl$\r\n      .subscribe((previousUrl: string) => {\r\n        this.previousUrl = previousUrl\r\n      });\r\nconsole.log(this.isUnSecureDraftScreen);\r\n    if (this.accountId != null && this.isUnSecureDraftScreen) {\r\n      this.showEditOption = true;\r\n      this.getUnsecuredOverdraftSummary();\r\n    } else {\r\n      this.showEditOption = false;\r\n      this.buildUnsecuredForm();\r\n    }\r\n  }\r\n  _keyPress(event: any) {\r\n    const pattern = /[0-9]/;\r\n    let inputChar = String.fromCharCode(event.charCode);\r\n    if (!pattern.test(inputChar)) {\r\n      event.preventDefault();\r\n\r\n    }\r\n  }\r\n  \r\n\r\n  getUnsecuredOverdraftSummary() {\r\n    this.api.UnsecuredOverdraftSummary(this.accountId)\r\n      .subscribe((result: any) => {\r\n        console.log(result);\r\n        if(result.renewPeriod || result.renewalAmount){\r\n          this.flag=true;\r\n        }\r\n        this.buildUnsecuredForm(result, true);\r\n      })\r\n  }\r\n\r\n  buildUnsecuredForm(data?, isResponse?: boolean) {\r\n    this.unsecuredForms = this.formBuilder.group({\r\n      limitId: [data ? data.limitId : '', Validators.required],\r\n      accountId: this.accountId != null ? this.accountId : '',\r\n      overdraftCurrency: [data ? data.overdraftCurrency : '', Validators.required],\r\n      overdraftLimitAmount: [data ? data.overdraftLimitAmount : '', Validators.required],\r\n      limitStartDate: [data ? new Date(data.limitStartDate) : '',Validators.required],\r\n      limitEndDate: [data ? new Date(data.limitEndDate) : '',Validators.required],\r\n      unsecuredLimit: [''],\r\n      renewPeriod: [data ? data.renewPeriod : ''],\r\n      renewalAmount: [data ? data.renewalAmount : ''],\r\n      year: [data ? data.year : ''],\r\n      month: [data ? data.month : ''],\r\n      day: [data ? data.day : ''],\r\n      overdraftLimitRenewed: [data ? data.overdraftLimitRenewed : ''],\r\n    });\r\n\r\n    if (isResponse) {\r\n      console.log(\"values:\", data.renewPeriod);\r\n      if (data.renewPeriod) {\r\n        this.selectedYear = data.renewPeriod.substring(0, 4);\r\n        let selectedMonth = data.renewPeriod.substring(5, 8);\r\n        console.log(selectedMonth)\r\n        this.selectedDay = data.renewPeriod.substring(9, 11);\r\n        console.log(this.selectedDay);\r\n\r\n        this.unsecuredForms.get('year').setValue(Number(this.selectedYear));\r\n        this.unsecuredForms.get('month').setValue(selectedMonth);\r\n        this.unsecuredForms.get('day').setValue(Number(this.selectedDay));\r\n        this.cdr.markForCheck();\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  onToggle(event) {\r\n    if(event.checked=== true){\r\n    this.flag=true;\r\n    }\r\n    else{\r\n      this.flag=false;\r\n      this.unsecuredForms.get('renewalAmount').setValue('');\r\n    }\r\n    console.log(\"on toggle value\", event.checked)\r\n  }\r\n\r\n\r\n  onSubmit(form) {\r\n    if(this.unsecuredForms.value.overdraftLimitRenewed){\r\n      if(this.unsecuredForms.controls.day.value==null ||this.unsecuredForms.controls.year.value==null || this.unsecuredForms.controls.month.value==null){\r\n        this.snack.open('Please give Renew Period', 'OK', {\r\n          duration: 4000,\r\n          verticalPosition: 'top',\r\n          horizontalPosition: 'right'\r\n        });\r\n        return;\r\n      }\r\n    }\r\n    console.log(\"form values\", form)\r\n    this.submitted = true;\r\n\r\n    let startDate = this.convertDate(this.unsecuredForms.controls.limitStartDate.value);\r\n    this.unsecuredForms.value['limitStartDate'] = startDate;\r\n    let endDate = this.convertDate(this.unsecuredForms.controls.limitEndDate.value);\r\n    this.unsecuredForms.value['limitEndDate'] = endDate;\r\n    let renewData;\r\n\r\n    if (this.unsecuredForms.value.overdraftLimitRenewed) {\r\n      renewData = this.unsecuredForms.value.year + '-' + this.unsecuredForms.value.month + '-' + this.unsecuredForms.value.day;\r\n    } else {\r\n      renewData = '';\r\n    \r\n    }\r\n\r\n    let limitData = this.unsecuredForms.value.limitId;\r\n    let currencyData = this.unsecuredForms.value.overdraftCurrency;\r\n    let overdraftLAData = this.unsecuredForms.value.overdraftLimitAmount;\r\n    let limitStartDateData = this.unsecuredForms.value.limitStartDate;\r\n    let limitEndDateData = this.unsecuredForms.value.limitEndDate;\r\n    let overdraftLimitRenewed = this.unsecuredForms.value.overdraftLimitRenewed;\r\n    let renewalAmountData = this.unsecuredForms.value.renewalAmount;\r\n    let finalPayload = {\r\n      accountId: this.accountId,\r\n      limitId: limitData,\r\n      overdraftCurrency: currencyData,\r\n      overdraftLimitAmount: overdraftLAData,\r\n      limitStartDate: limitStartDateData,\r\n      limitEndDate: limitEndDateData,\r\n      renewPeriod: renewData,\r\n      renewalAmount: renewalAmountData,\r\n      overdraftLimitRenewed: overdraftLimitRenewed\r\n    };\r\n    console.log(\"finalPayload\", finalPayload);\r\n\r\n    console.log('SUCCESS!! :-)\\n\\n', this.unsecuredForms.value);\r\n  \r\n    console.log(this.isSecuredScreen)\r\n    // if(this.showEditOption){\r\n    // for update put\r\n    //  let payload = {UnsecuredOverdraftdeatils:finalPayload, loggedInUser:this.loggedInUser};\r\n    // console.log(payload);\r\n    if (finalPayload.limitId == null || finalPayload.overdraftLimitAmount == null) {\r\n      Swal.fire('Please Enter The Mandatory Fields !');\r\n      return false;\r\n    }\r\n    \r\n    // if ((finalPayload.renewPeriod == \"\" || finalPayload.renewalAmount == \"\") && this.flag==true) {\r\n    //   Swal.fire('Please Enter The Renewed Fields !');\r\n    //   return false;\r\n    // }\r\n \r\n    // if((this.isSecuredScreen==false  || this.isSecuredScreen==null) || (this.isUnSecureDraftScreen==false && this.isSecuredScreen==true && this.unsecuredForms.value!=null) ){\r\n \r\n    if(this.unsecuredForms.value.limitId!=''){\r\n    this.api.unsecuredDraft(finalPayload).subscribe(resp => {\r\n\r\n      console.log(\"resp after saving basic info\", resp)\r\n      this.snack.open('UnSecured Overdraft Details Saved!', 'OK', {\r\n        duration: 4000,\r\n        verticalPosition: 'top',\r\n        horizontalPosition: 'right'\r\n      });\r\n      this.ls.setItem('LIMIT_UNSECURED_DONE', true);\r\n      this.accountService.refresh.next();\r\n      this.router.navigate([`/home/application/limit-entry-stage/financial-details/${this.accountId}`]);\r\n\r\n    }, err => {\r\n      this.snack.open(err['message'], 'OK', {\r\n        duration: 4000,\r\n        verticalPosition: 'top',\r\n        horizontalPosition: 'right'\r\n      });\r\n      this.ls.setItem('LIMIT_UNSECURED_DONE', true);\r\n      this.accountService.refresh.next();\r\n      this.router.navigate([`/home/application/limit-entry-stage/financial-details/${this.accountId}`]);\r\n    })\r\n  }\r\n  // if(this.isUnSecureDraftScreen==false){\r\n    else{\r\n    console.log(\"Else partt\");\r\n    this.ls.setItem('LIMIT_UNSECURED_DONE', false);\r\n    this.accountService.refresh.next();\r\n    this.router.navigate([`/home/application/limit-entry-stage/financial-details/${this.accountId}`]);\r\n  }\r\n    // }\r\n    // else{\r\n    // }\r\n\r\n  }\r\n\r\n  convertDate(value) {\r\n    let date = moment(value).format('YYYY-MMM-DD');\r\n    // let date = moment(value).format('YYYY-MM-DDThh:mm:ss');\r\n    console.log(\"date\", date);\r\n    if (date)\r\n      return date;\r\n  }\r\n\r\n  goBack() {\r\n    this.router.navigate([this.previousUrl]);\r\n  }\r\n\r\n  onKeyPress(event: any) {\r\n    const number = /[0-9\\+\\-\\ ]/;\r\n    let inputCharacter = String.fromCharCode(event.charCode);\r\n    if (event.keyCode != 8 && !number.test(inputCharacter)) {\r\n      event.preventDefault();\r\n      console.log(\"event:\", event)\r\n    }\r\n    console.log(this.unsecuredForms.controls['limitId'])\r\n  }\r\n  reset() {\r\n    this.unsecuredForms.reset();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.dataService.sendNavParam({});\r\n  }\r\n  getCurrencyDetails(){\r\n  this.api.fetchCurrencyMaintAuthRecs().subscribe(resp => {\r\n  this.currency = resp    \r\n  }) \r\n}\r\n\r\n}\r\n","<div class=\"matcard-size\">\r\n<div fxLayout=\"row\">\r\n  <div fxFlex=\"100\">\r\n    <div class=\"propic text-center\">\r\n      <img src=\"assets/images/svg/undraw_secure_files_re_6vdh.svg\" alt=\"\" class=\"w-90\" />\r\n    </div>\r\n    <div class=\"profile-title text-center mt-8\">\r\n      <div class=\"main-title1\"><b>Unsecured Overdraft Details</b></div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<div fxLayout=\"row\">\r\n  <div fxFlex=\"100\">\r\n    <mat-card class=\"p-0\">\r\n      <mat-card-title>\r\n        <fieldset>\r\n        <legend visible=\"true\">Unsecured Overdraft Details</legend>\r\n      </fieldset>\r\n      </mat-card-title>\r\n      <mat-card-content>\r\n        <form *ngIf=\"unsecuredForms\" [formGroup]=\"unsecuredForms\">\r\n          <div fxLayout=\"row\" fxLayoutGap=\"25px\">\r\n            <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-1\">\r\n              <div class=\"pb-1\">\r\n                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                  <mat-label>Limit ID*</mat-label>\r\n                  <input matInput (keypress)=_keyPress($event) id=\"limitId\" formControlName=\"limitId\" name=\"mod\" placeholder=\"Limit ID\" />\r\n                  \r\n                  <!-- <mat-error *ngIf=\"unsecuredForms.controls['limitId'].touched\" class=\"alert alert-danger\">\r\n                    Please enter Limit Id\r\n                </mat-error> -->\r\n                <mat-error *ngIf=\"unsecuredForms.get('limitId').hasError('required')\">\r\n                  Please Enter Limit ID \r\n                </mat-error>\r\n\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n            <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-1\">\r\n            </div>\r\n          </div>\r\n          <div fxLayout=\"row\" fxLayoutGap=\"25px\">\r\n            <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-1\">\r\n              <div class=\"pb-1\">\r\n                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                  <mat-label>Currency*</mat-label>\r\n                  <mat-select name=\"prefix\" ([ngModel])=\"selectedCurrency\" formControlName=\"overdraftCurrency\">\r\n                    <mat-option *ngFor=\"let i of currency\" [value]=\"i.currencyCode\">{{ i.currencyCode }}</mat-option> \r\n                  </mat-select>\r\n                  <mat-error *ngIf=\"unsecuredForms.get('overdraftCurrency').hasError('required')\">\r\n                    Please select Currency \r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n            <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-1\">\r\n               <div class=\"pb-1\">\r\n              <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                <mat-label>Overdraft Limit Amount*</mat-label>\r\n                <input matInput name=\"a_sig\"  (keypress)=_keyPress($event) maxlength=\"15\" formControlName=\"overdraftLimitAmount\"\r\n                  placeholder=\"Overdraft Limit Amount\" />\r\n                  <mat-error *ngIf=\"unsecuredForms.controls['overdraftLimitAmount'].touched\">\r\n                    Please enter Overdraft Limit Amount\r\n                  </mat-error>\r\n              </mat-form-field>\r\n              </div>\r\n            </div>\r\n           \r\n          </div>\r\n          <div fxLayout=\"row\" fxLayoutGap=\"25px\">\r\n           \r\n            <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-1\">\r\n              <div class=\"pb-1\">\r\n                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                  <mat-label>Limit Start Date*</mat-label>\r\n                  <input readonly  \r\n                    matInput  \r\n                    name=\"dob\"\r\n                    formControlName=\"limitStartDate\" \r\n                    placeholder=\"Limit Start Date\"\r\n                    [matDatepicker]=\"appDatepicker\" \r\n                    [min]=\"minDate\" \r\n                    />\r\n\r\n                  <mat-datepicker-toggle matSuffix [for]=\"appDatepicker\"></mat-datepicker-toggle>\r\n                  <mat-error *ngIf=\"unsecuredForms.get('limitStartDate').hasError('required')\">\r\n                    Please select Limit Start Date\r\n                  </mat-error>\r\n                </mat-form-field>\r\n             \r\n                <mat-datepicker #appDatepicker></mat-datepicker>\r\n              </div>\r\n            </div>\r\n\r\n            <!-- Right column -->\r\n\r\n            <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-1\">\r\n              <div class=\"pb-1\">\r\n                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n\r\n                  <mat-label>Limit End Date*</mat-label>\r\n                  <input matInput name=\"dob\" formControlName=\"limitEndDate\" \r\n                         [min]=\"unsecuredForms.get('limitStartDate').value\"\r\n                         placeholder=\"Limit End Date\"\r\n                         [matDatepicker]=\"appDatepicker1\" \r\n                         readonly/>\r\n                  <mat-datepicker-toggle matSuffix [for]=\"appDatepicker1\"></mat-datepicker-toggle>\r\n                  <mat-error *ngIf=\"unsecuredForms.get('limitEndDate').hasError('required')\">\r\n                    Please select Limit End Date\r\n                  </mat-error>\r\n                </mat-form-field>\r\n            \r\n                <mat-datepicker #appDatepicker1></mat-datepicker>\r\n              </div>\r\n            </div>\r\n          </div>\r\n         \r\n          <div fxLayout=\"row\" fxLayoutGap=\"25px\">\r\n            <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-1\">\r\n              <div class=\"pb-1\">\r\n                Do your Unsecured Overdraft Limit has to be renewed ? <mat-slide-toggle\r\n                formControlName=\"overdraftLimitRenewed\" (change)=\"onToggle($event)\"></mat-slide-toggle>\r\n              </div><br>\r\n              </div>\r\n          </div>\r\n\r\n          <div *ngIf=\"flag\">\r\n            <div fxLayout=\"row\" fxLayoutGap=\"25px\">\r\n              <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-1\">\r\n                <mat-label>Renew Period</mat-label>\r\n                <div fxLayout=\"row wrap\" fxLayoutGap=\"5px\" fxLayoutAlign=\"space-between start\">\r\n                  <div fxFlex=\"25\">\r\n                    <div class=\"pb-1\">\r\n                      <mat-form-field class=\"full-width\" appearance=\"outline\">\r\n                        <!-- <mat-label>Years*</mat-label> -->\r\n                        <mat-label>Years</mat-label>\r\n                        <mat-select ([ngModel])=\"selectedYear\" required formControlName=\"year\">\r\n                          <mat-option *ngFor=\"let year of years\" [value]=\"year\">{{ year }}</mat-option> \r\n                        </mat-select>\r\n                        <mat-error *ngIf=\"unsecuredForms.get('year').hasError('required')\">\r\n                          Please select Year\r\n                        </mat-error>\r\n                      </mat-form-field>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div fxFlex=\"25\">\r\n                    <div class=\"pb-1\">\r\n                      <mat-form-field class=\"full-width\" appearance=\"outline\">\r\n                        <!-- <mat-label>Months*</mat-label> -->\r\n                        <mat-label>Months</mat-label>\r\n                        <mat-select ([ngModel])=\"selectedMonth\" required formControlName=\"month\">\r\n                          <mat-option *ngFor=\"let month of months\" [value]=\"month\">{{ month }}</mat-option> \r\n                        </mat-select>\r\n                        <mat-error *ngIf=\"unsecuredForms.get('month').hasError('required')\">\r\n                          Please select Month\r\n                        </mat-error>\r\n                      </mat-form-field>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div fxFlex=\"25\">\r\n                    <div class=\"pb-1\">\r\n                      <mat-form-field class=\"full-width\" appearance=\"outline\">\r\n                        <!-- <mat-label>Days*</mat-label> -->\r\n                        <mat-label>Days</mat-label>\r\n                        <mat-select ([ngModel])=\"selectedDay\" required formControlName=\"day\">\r\n                          <mat-option *ngFor=\"let day of days\" [value]=\"day\">{{ day }}</mat-option> \r\n                        </mat-select>\r\n                        <mat-error *ngIf=\"unsecuredForms.get('day').hasError('required')\">\r\n                          Please select Day\r\n                        </mat-error>\r\n                      </mat-form-field>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-1\">\r\n                <mat-label>Renewal Amount</mat-label>\r\n                <div class=\"pb-1\">\r\n                  <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                    <!-- <mat-label>Renewal Amount*</mat-label> -->\r\n                    <mat-label>Renewal Amount</mat-label>\r\n                    <input matInput maxlength=\"8\" name=\"a_sig\" (keypress)=_keyPress($event) \r\n                    required formControlName=\"renewalAmount\" placeholder=\"Renewal Amount\" />\r\n                    <mat-error *ngIf=\"unsecuredForms.get('renewalAmount').hasError('required')\">\r\n                      Please enter Renewal Amount\r\n                  </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n         \r\n\r\n        </form>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n<div fxLayout=\"row\" fxLayoutAlign=\"space-between center\" fxLayoutGap=\"16px\" class=\"mt-32\">\r\n  <button mat-button class=\"Backbtn\" (click)=\"goBack()\">\r\n    Back\r\n  </button>\r\n  <button mat-raised-button class=\"Nextbtn\" color=\"primary\" (click)=\"onSubmit(unsecuredForms.value)\" [disabled]=\"!isSecuredScreen && unsecuredForms.invalid \">\r\n    Next\r\n  </button>\r\n</div>\r\n</div>"]}