{"version":3,"sources":["webpack:///src/app/views/settings/report/report-details/report-details.component.ts","webpack:///src/app/views/settings/report/report-details/report-details.component.html","webpack:///src/app/views/settings/settings.routing.ts","webpack:///src/app/views/settings/theme-change/theme-change.component.ts","webpack:///src/app/views/settings/theme-change/theme-change.component.html","webpack:///src/app/views/settings/settings.module.ts","webpack:///src/app/views/settings/settings/change-email/change-email.component.ts","webpack:///src/app/views/settings/settings/change-email/change-email.component.html","webpack:///src/app/views/settings/change-password/change-password.component.ts","webpack:///src/app/views/settings/change-password/change-password.component.html","webpack:///src/app/views/settings/settings/settings.component.ts","webpack:///src/app/views/settings/settings/settings.component.html"],"names":["ReportDetailsComponent","formBuilder","ls","apiService","reprts","reportName","reportId","date","tellerId","localStorage","getItem","buildReportForm","resetForm","data","reportForm","group","branch","required","customerId","accountNo","report","fromDate","endDate","reset","reportName1","console","log","event","charCode","keyCode","pattern","inputChar","String","fromCharCode","toString","test","preventDefault","payload","value","format","reportupdate","filter","val","getReport","_keyPress","apply","selector","templateUrl","styleUrls","settingsRoutes","path","children","component","ThemeChangeComponent","layout","router","navService","themeService","translate","renderer","jwtAuth","dialog","layoutConf","rumangoThemes","theme","applyMatTheme","themeValue","onChangeTheme","changeTheme1","e","Error","SettingsModule","forChild","declarations","imports","ChangeEmailComponent","fb","dataService","currentUser","userName","changeEmailForm","language","email","fetchTellerProfileInfo","id","subscribe","result","profileInfo","formdata","updateTellerInfo","changePwsresp","obj","branchName","currency","tellerName","firstName","lastName","userId","setItem","onChangeOfIcustUser","navigateByUrl","getProfile","save","ChangePasswordComponent","snack","api","errorMsg","hideCurrentPW","hideNewPW","hideConfirmPW","changePasswordForm","currentPassword","newPassword","compose","passwordRegex","maxLength","maxPass","minLength","minPass","confirmnewPassword","getSecurityPolicyDetails","resp","security1","ucase","pswdComplexUcase","lcase","pswdComplexLcase","num","pswdComplexNum","splc","pswdComplexSplc","minPswdLength","maxPswdLength","changeTellerPassword","changePwsResp","setTimeout","open","duration","verticalPosition","horizontalPosition","SettingsComponent","getIcustUser","changeTheme","languagemail"],"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","file":"views-settings-settings-module-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport * as moment from 'moment';\r\n\r\n@Component({\r\n  selector: 'app-report-details',\r\n  templateUrl: './report-details.component.html',\r\n  styleUrls: ['./report-details.component.scss']\r\n})\r\nexport class ReportDetailsComponent implements OnInit {\r\n  reportForm: FormGroup;\r\n  reportName: any;\r\n  reprts: any[] = [\r\n    { reportName: \"Reports\",\r\n    reportId:\"ACRFXNB\" ,date:\"2019-11-29\"\r\n    },\r\n    // { reportName: \"Weekly Report\" , reportId:\"ITRWEEK\",date:\"2019-10-29\"},\r\n    // { reportName: \"Attendance Report\", reportId:\"HRRATTD\",date:\"2022-08-23\" },\r\n    // { reportName: \"Cash Flow Report\" , reportId:\"EPRCASH\",date:\"2020-02-01\"},\r\n    // { reportName: \"Statement Of Foreign Assets And Liabilities\", reportId:\"FINRSOFAL\" ,date:\"2022-01-31\"}\r\n  ];\r\n  report: any;\r\n  reportupdate: any[];\r\n  tellerId: string;\r\n  constructor(private formBuilder: FormBuilder, private ls: LocalStoreService, private apiService: ApiService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.reportName = this.reprts[0].reportName\r\n    this.tellerId =localStorage.getItem('tellerid');\r\n    this.buildReportForm();\r\n    this.resetForm();\r\n  }\r\n  buildReportForm(data?) {\r\n    this.reportForm = this.formBuilder.group({\r\n      branch: [data ? data.branch :'', Validators.required],\r\n      customerId: [data ? data.customerId : '', Validators.required],\r\n      accountNo: [data ? data.accountNo : null],\r\n      report: [data ? data.report : '', Validators.required],\r\n      fromDate: [data ? data.fromDate : '', Validators.required],\r\n      endDate: [data ? data.endDate : '',Validators.required],\r\n\r\n\r\n    });\r\n  }\r\n\r\n  resetForm() {\r\n    this.reportForm.reset();\r\n  }\r\n  gotoReport(reportName1: any) {\r\n    console.log(reportName1);\r\n    this.reportName = reportName1\r\n    this.resetForm();\r\n  }\r\n\r\n  letterOnly(event) {\r\n    var charCode = event.keyCode;\r\n    if ((charCode > 64 && charCode < 91) || (charCode > 96 && charCode < 123) || charCode == 8)\r\n      return true;\r\n    else\r\n      return false;\r\n  }\r\n  _keyPress(event: any) {\r\n    // console.log(\"key\",event);\r\n    const pattern = /[0-9]/;\r\n    let inputChar = String.fromCharCode(event.charCode);\r\n    inputChar = inputChar.toString();\r\n    inputChar = inputChar\r\n    if (!pattern.test(inputChar)) {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n  apply() {\r\n    let payload = [{\r\n      branch: this.reportForm.value.branch,\r\n      customerId: this.reportForm.value.customerId,\r\n      accountNo: this.reportForm.value.accountNo,\r\n      report: this.reportForm.value.report ,\r\n      fromDate: moment(this.reportForm.value.fromDate).format('YYYY-MM-DD'),\r\n      endDate:  moment(this.reportForm.value.endDate).format('YYYY-MM-DD'),\r\n      reportName: this.reportName\r\n    }]\r\n    this.reportupdate=this.reprts.filter(\r\n      (val) => val.reportName===this.reportName);\r\n      console.log(this.reportupdate);\r\n\r\n   /* this.apiService.getReport().subscribe(data => {\r\n      console.log(data)\r\n      window.open(data);\r\n    }) */\r\n    this.apiService.getReport(this.reportForm.value.report,this.reportForm.value.customerId,moment(this.reportForm.value.fromDate).format('YYYY-MM-DD'),moment(this.reportForm.value.endDate).format('YYYY-MM-DD'),this.reportForm.value.branch);\r\n  }\r\n}\r\n","<div fxLayout=\"row\">\r\n    <div  fxLayout=\"row\">\r\n        <div >\r\n            <mat-sidenav-container >\r\n              <mat-sidenav EgretSideNavToggle class=\"app-sidebar\" style=\"width: 300px;\">\r\n                <div class=\"sidenav-hold\">\r\n                  <ul appDropdown class=\"sidenav mt-32\">\r\n                    \r\n                    \r\n                    \r\n                    <!-- Approval Stage END -->\r\n                    <li appDropdownLink routerLinkActive=\"open\">\r\n                      <div class=\"lvl1\" *ngFor=\"let item of reprts; let m=index;\" (click)=\"gotoReport(item.reportName)\">\r\n                        <a [ngClass]=\"{'helight': item.reportName==reportName, \r\n                        'nothelight': true}\" (click)=\"gotoReport(item.reportName)\">\r\n                        <mat-icon>event_note</mat-icon>\r\n                         &nbsp;&nbsp;&nbsp; <span class=\"item-name lvl1\" >{{item.reportName}}</span>\r\n                          <span fxFlex></span>\r\n                          \r\n                        </a>\r\n                      \r\n                        \r\n                        \r\n                        \r\n                      </div>\r\n                    </li>\r\n                   \r\n                  </ul>\r\n                </div>\r\n          \r\n              </mat-sidenav>\r\n              <div class=\"app-wrap\" fxLayout=\"row\" fxLayoutWrap=\"wrap\">\r\n                <div class=\"full-width mt-32\">\r\n                  <router-outlet></router-outlet>\r\n                </div>\r\n              </div>\r\n            </mat-sidenav-container>\r\n          </div>\r\n    \r\n    </div>\r\n     \r\n    <!-- sidenav ended -->\r\n     <!-- Screen start -->\r\n    \r\n    \r\n      \r\n    \r\n        <div fxFlex=\"100\">\r\n          <mat-card class=\"p-0\">\r\n            <mat-card-title class=\"title\">\r\n              <div  class=\"card-title-text\">{{reportName}}</div>\r\n              <mat-divider></mat-divider>\r\n            </mat-card-title>\r\n            <mat-card-content>\r\n                <form  [formGroup]=\"reportForm\">\r\n                    \r\n                    <div fxLayout=\"column\" fxLayoutGap=\"25px\">\r\n                      \r\n                        <div fxFlex=\"70%\" fxLayoutGap=\"10px\">\r\n                          <div class=\"flex-grow-1\" fxFlex=\"50%\" >\r\n                            <label  class=\"hint\">Report *</label>\r\n                            <mat-card class=\"inputMatName\">\r\n                                <mat-select formControlName=\"report\" placeholder=\"Select Report\">\r\n                                    <mat-option disabled value=\"\">Select</mat-option>\r\n                                    <mat-option value=\"Uc_206\">Cash flow report</mat-option>\r\n                                    <mat-option value=\"Uc_307\">Rejected Transactions Report</mat-option>\r\n                                    <mat-option value=\"Uc_170\">Block And Unblock Report</mat-option>\r\n                                    <mat-option value=\"Uc_185\">Cash Limit Exceed</mat-option>\r\n                                    <mat-option value=\"TransactionDetails1\">Transaction Details</mat-option>\r\n                                    <!-- <mat-option value=\"Excel\">Excel</mat-option>  -->\r\n                                   \r\n                                  </mat-select>\r\n                            </mat-card>\r\n                           \r\n                           \r\n                          </div>\r\n                            <div class=\"flex-grow-1\" fxFlex=\"50%\" >\r\n                                <label  class=\"hint\">Customer Id *</label>\r\n                                <mat-card class=\"inputMatName\">\r\n                                    <input matInput class=\"alignment\" type=\"text\" autocomplete=\"off\"  formControlName=\"customerId\"  (keypress)=_keyPress($event)\r\n                                    placeholder=\"Enter Customer Id\" />\r\n                                </mat-card>\r\n                               \r\n                               \r\n                              </div>\r\n                              <div class=\"flex-grow-1\" fxFlex=\"50%\" >\r\n                                <label  class=\"hint\">Branch *</label>\r\n                                <mat-card class=\"inputMatName\">\r\n                                    <input matInput class=\"alignment\" type=\"text\" autocomplete=\"off\"  formControlName=\"branch\"  \r\n                                    placeholder=\"Enter Branch\" />\r\n                                </mat-card>\r\n                               \r\n                               \r\n                              </div>\r\n                              \r\n                        </div>\r\n                        <div  fxFlex=\"70%\" fxLayoutGap=\"10px\">\r\n                            <div  class=\"flex-grow-1\" fxFlex=\"50%\"   >\r\n                                <label class=\"hint\">From Date *</label>\r\n                                <mat-card class=\"inputMatNameDate\" fxLayout=\"row\">\r\n                                <input matInput [matDatepicker]=\"picker\" name=\"courseCommencementDate\" placeholder=\"Select From date\" formControlName=\"fromDate\" readonly >\r\n                                <mat-datepicker-toggle matSuffix style=\"float: right;\" [for]=\"picker\"></mat-datepicker-toggle>\r\n                                <mat-datepicker #picker></mat-datepicker>\r\n                                \r\n                            </mat-card>\r\n                            <mat-error\r\n                             *ngIf=\"!reportForm.get('fromDate').valid  && reportForm.get('fromDate').touched\">\r\n                              &nbsp;&nbsp;&nbsp;From Date is Required!\r\n                            </mat-error>\r\n                            </div>\r\n                            <div  class=\"flex-grow-1\" fxFlex=\"50%\" >\r\n                                <label class=\"hint\">End Date *</label>\r\n                                <mat-card class=\"inputMatNameDate\" fxLayout=\"row\">\r\n                                    <input matInput [matDatepicker]=\"picker1\" name=\"courseCommencementDate\" formControlName=\"endDate\" placeholder=\"Select End date\" readonly >\r\n                                    <mat-datepicker-toggle matSuffix style=\"float: right;\" [for]=\"picker1\"></mat-datepicker-toggle>\r\n                                    <mat-datepicker #picker1></mat-datepicker>\r\n                                </mat-card>\r\n                            </div>\r\n                        </div>\r\n          \r\n                      \r\n                    </div>\r\n    \r\n                  </form>\r\n            </mat-card-content>\r\n            <div fxLayout=\"row\" style=\"padding-bottom: 40px; padding-right: 40px; float: right;\" fxLayoutGap=\"25px\" >\r\n                <button mat-raised-button color=\"primary\" (click)=\"apply()\" [disabled]=\"!reportForm.valid\">\r\n                    Apply\r\n                  </button>&nbsp;&nbsp;&nbsp;\r\n                <button mat-raised-button color=\"warn\" (click)=\"resetForm()\">\r\n                    Reset\r\n                  </button>\r\n              </div>\r\n          </mat-card>\r\n        </div>\r\n     \r\n    </div>\r\n    ","\r\nimport {  Routes } from '@angular/router';\r\nimport { ChangePasswordComponent } from './change-password/change-password.component';\r\nimport { ReportDetailsComponent } from './report/report-details/report-details.component';\r\nimport { ChangeEmailComponent } from './settings/change-email/change-email.component';\r\nimport { SettingsComponent } from './settings/settings.component';\r\nimport { ThemeChangeComponent } from './theme-change/theme-change.component';\r\nexport const settingsRoutes: Routes = [\r\n  {\r\n    path: \"\",\r\n    children: [\r\n      {\r\n        path: \"profile\",\r\n        component: SettingsComponent,\r\n        // data: { title: 'Blank', breadcrumb: 'BLANK' }\r\n      },\r\n      {\r\n        path: \"report/reportDetails\",\r\n        component: ReportDetailsComponent,\r\n        // data: { title: 'Blank', breadcrumb: 'BLANK' }\r\n      },\r\n      {\r\n        path:\"change-password\",\r\n        component: ChangePasswordComponent\r\n      },\r\n      {\r\n        path:\"change-email\",\r\n        component:ChangeEmailComponent\r\n      },\r\n      {\r\n        path:\"theme-change\",\r\n        component:ThemeChangeComponent\r\n      }\r\n    ]\r\n  }\r\n];","import { Component, OnInit, Input, OnDestroy, Renderer2 } from '@angular/core';\r\nimport { NavigationService } from \"../../../shared/services/navigation.service\";\r\nimport { Subscription } from 'rxjs';\r\nimport { ITheme, ThemeService } from '../../../shared/services/theme.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { ILayoutConf, LayoutService } from '../../../shared//services/layout.service';\r\nimport { JwtAuthService } from 'app/shared/services/auth/jwt-auth.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { Router } from '@angular/router';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { theme } from 'highcharts';\r\nimport { themeValueInterface } from './theme-change';\r\n\r\n@Component({\r\n  selector: 'app-theme-change',\r\n  templateUrl: './theme-change.component.html',\r\n  styleUrls: ['./theme-change.component.scss']\r\n})\r\nexport class ThemeChangeComponent implements OnInit {\r\n  themeChangeForm: FormGroup;\r\n  theme: string;\r\n  themeValue: themeValueInterface;\r\n  rumangoThemes:ITheme[];\r\n  layoutConf: ILayoutConf;\r\n  constructor(\r\n    private layout: LayoutService,\r\n    private router: Router,\r\n    private navService: NavigationService,\r\n    public themeService: ThemeService,\r\n    public translate: TranslateService,\r\n    private renderer: Renderer2,\r\n    public jwtAuth: JwtAuthService,\r\n    private ls: LocalStoreService,\r\n    private dialog: MatDialog) { }\r\n\r\n  ngOnInit(): void {\r\n    this.layoutConf = this.layout.layoutConf;\r\n    this.rumangoThemes = this.themeService.rumangoThemes;\r\n  }\r\n  changeTheme(theme) {\r\n      this.layout.applyMatTheme(theme);\r\n  }\r\n  changeTheme1(theme) {\r\n      this.layout.applyMatTheme(theme);\r\n  }\r\n  onChangeTheme(value){\r\n  this.themeValue = value;\r\n  }\r\n\r\n  apply(onChangeTheme){\r\n      if (this.themeValue.value == 'light') {\r\n        this.themeService.changeTheme1('egret-navy');\r\n      } \r\n      if(this.themeValue.value == 'dark'){\r\n        this.themeService.changeTheme1('egret-dark-purple');\r\n      }\r\n      if(this.themeValue.value == 'yellow'){\r\n        this.themeService.changeTheme1('yellow');\r\n      }\r\n      if(this.themeValue.value == 'blue'){\r\n        this.themeService.changeTheme1('blue');\r\n      }\r\n      if(this.themeValue.value == 'red'){\r\n        this.themeService.changeTheme1('red');  \r\n      }\r\n     this.onChangeTheme(e);\r\n    this.changeTheme1(theme);\r\n   }\r\n}\r\nfunction e(e: any) {\r\n  throw new Error('Function not implemented.');\r\n}\r\n\r\n","<div class=\"text-center mat-bg-white pt-16 pb-16\">\r\n  <h2 class=\"m-0 text-blue\">Theme Change</h2>\r\n</div>\r\n<mat-nav-list class=\"notification-list\" role=\"list\">\r\n\r\n  \r\n  <form  [formGroup]=\"themeChangeForm\">\r\n    <div class=\"centeralign\" >\r\n      <div fxFlex=\"100\" fxFlex.gt-xs=\"50\">\r\n        <h3  style= \"padding-top: 5px;\">Default Theme Select</h3> \r\n        <mat-form-field class=\"half-width\" appearance=\"outline\">\r\n          <mat-label>Select Theme</mat-label>\r\n          <mat-select    name=\"themeChange\" (selectionChange)=\"onChangeTheme($event)\">\r\n            <mat-option value=\"light\">\r\n              Light\r\n            </mat-option>\r\n            <mat-option  value=\"dark\">\r\n              Dark\r\n            </mat-option>\r\n            <!-- <mat-option value=\"yellow\">\r\n              Yellow\r\n            </mat-option>\r\n            <mat-option value=\"blue\">\r\n              Blue\r\n            </mat-option>\r\n            <mat-option  value=\"red\">\r\n              Red\r\n            </mat-option> -->\r\n          </mat-select>\r\n        </mat-form-field>\r\n      \r\n  <div class=\"alignright\">\r\n   <button  mat-raised-button \r\n                        (click)=\"apply(onChangeTheme)\"\r\n         color=\"primary\" style=\"color: white;padding: 0.2rem 4rem; border-radius: 15px;\" \r\n                             >Apply</button>\r\n  </div>\r\n</div>\r\n</div>\r\n</form>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n\r\nimport { SettingsComponent } from './settings/settings.component';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { RouterModule } from '@angular/router';\r\nimport { SharedMaterialModule } from 'app/shared/shared-material.module';\r\nimport { SharedModule } from 'app/shared/shared.module';\r\nimport { settingsRoutes } from './settings.routing';\r\nimport { ChangePasswordComponent } from './change-password/change-password.component';\r\nimport { ChangeEmailComponent } from './settings/change-email/change-email.component';\r\nimport { ThemeChangeComponent } from './theme-change/theme-change.component';\r\nimport { ReportDetailsComponent } from './report/report-details/report-details.component';\r\n\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [SettingsComponent, ChangePasswordComponent, ChangeEmailComponent, ThemeChangeComponent,ReportDetailsComponent],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    FlexLayoutModule,\r\n   \r\n    SharedModule,\r\n    ReactiveFormsModule,\r\n    SharedMaterialModule,\r\n    \r\n    RouterModule.forChild(settingsRoutes)\r\n  ]\r\n})\r\nexport class SettingsModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,FormBuilder, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { DataService } from 'app/shared/services/data.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\n\r\n@Component({\r\n  selector: 'app-change-email',\r\n  templateUrl: './change-email.component.html',\r\n  styleUrls: ['./change-email.component.scss']\r\n})\r\nexport class ChangeEmailComponent implements OnInit {\r\n    changeEmailForm: FormGroup;\r\n    userName: string;\r\n    currentUser: any;\r\n  profileInfo: string;\r\n  \r\n  constructor(\r\n    public apiService: ApiService,private fb: FormBuilder,\r\n    private ls:LocalStoreService,\r\n    private router: Router,\r\n    private dataService:DataService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.currentUser=this.ls.getItem(\"ICUST_USER\");\r\n      this.userName = this.currentUser.userName;\r\n    this.changeEmailForm = this.fb.group({\r\n      language:[''],\r\n      email:['']\r\n    \r\n    })\r\n  }\r\n  getProfile(){\r\n    this.apiService.fetchTellerProfileInfo(this.currentUser.id).subscribe((result) => {\r\n      this.profileInfo =result\r\n    });\r\n    \r\n    \r\n  }\r\n\r\n  save(formdata){\r\n    let payload = {\r\n      \"userName\":this.userName,\r\n      \"email\": this.changeEmailForm.value.email,\r\n      \"language\": this.changeEmailForm.value.language\r\n    };\r\n        this.apiService.updateTellerInfo(payload).subscribe(changePwsresp=>{\r\n          console.log(changePwsresp);\r\n          if(changePwsresp){\r\n            let obj = {\r\n              branchName:changePwsresp.branchName,\r\n              currency:changePwsresp.currency,\r\n              email:changePwsresp.email,\r\n              language:changePwsresp.language,\r\n              tellerName:changePwsresp.firstName +\" \"+ changePwsresp.lastName,\r\n              userId:changePwsresp.userId,\r\n              userName:changePwsresp.userName\r\n            }\r\n            this.ls.setItem(\"ICUST_USER\",obj);\r\n            this.dataService.onChangeOfIcustUser(obj);\r\n            this.router.navigateByUrl(\"settings/profile\");\r\n          }\r\n        });\r\n       }\r\n  }\r\n\r\n\r\n  \r\n\r\n      \r\n  \r\n\r\n \r\n\r\n\r\n\r\n","<div class=\"text-center prof_header mat-bg-white pt-16 pb-16 my-8\">\r\n  <h2 class=\"m-0 text-blue\">Profile Information</h2>\r\n</div>\r\n<mat-nav-list class=\"notification-list\" role=\"list\">\r\n\r\n\r\n  <div fxLayout=\"column\" class=\"pl-35 pr-35\">\r\n    <div fxFlex=\"100%\">\r\n    <form fxLayout=\"column\" [formGroup]=\"changeEmailForm\">\r\n      <div fxLayout=\"column\" fxLayoutGap=\"25px\">\r\n        <div fxFlex=\"50\" fxLayout=\"column\" class=\"pr-1\">\r\n          <div class=\"pb-1\" fxFlex=\"50\" >\r\n          <h3 style=\"padding-top: 5px;\" (click)=\"getProfile()\">Change Email</h3>\r\n          <mat-form-field class=\"full-width\" appearance=\"outline\">\r\n            <mat-label> Email</mat-label>\r\n            <input matInput class=\"box\" formControlName=\"email\" placeholder=\"{{currentUser.email}}\" />\r\n            <mat-icon matSuffix>email</mat-icon>\r\n          </mat-form-field>\r\n        </div>\r\n\r\n        <div class=\"pb-1\" fxFlex=\"50\" >\r\n          <h3  (click)=\"getProfile()\">Select Language</h3>\r\n          <!-- <mat-icon matSuffix>language</mat-icon> -->\r\n          <mat-form-field class=\"full-width\" appearance=\"outline\">\r\n            <mat-select  class=\"box\" appearance=\"outline\" formControlName=\"language\">\r\n              <mat-option value=\"English\">English</mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n\r\n          <!-- <small class=\"time text-muted\">{{n.time}}</small> -->\r\n        </div>\r\n\r\n          <div class=\"alignright\">\r\n           \r\n              <button mat-raised-button (click)=\"save(changeEmailForm.value)\" color=\"primary\" class=\"save_btn\"\r\n              class=\"save_btn\">Save Changes</button>\r\n          </div>\r\n      </div>\r\n    </div>\r\n\r\n  </form>\r\n</div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,FormBuilder, Validators, FormControl } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { currentUser } from 'app/shared/models/cureentUser';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\r\nimport { SecurityDto } from 'app/views/maintenance/user-maintenance/add-user-maintenance/add-user-maintenance.component';\r\n\r\n\r\n@Component({\r\n  selector: 'app-change-password',\r\n  templateUrl: './change-password.component.html',\r\n  styleUrls: ['./change-password.component.scss']\r\n})\r\nexport class ChangePasswordComponent implements OnInit {\r\n  changePasswordForm: FormGroup;\r\n  userName: string;\r\n  currentUser: currentUser;\r\n  SecurityDto : SecurityDto;\r\n  userId: string;\r\n  lowerCase: string;\r\n  security1: SecurityDto;\r\n  minPass: any;\r\n  maxPass: any;\r\n  ucase: any;\r\n  lcase: any;\r\n  num: any;\r\n  splc: any;\r\n  passwordRegex: any\r\n  errorMsg: any = \"\";\r\n  id: number;\r\n  hideCurrentPW=true;\r\n  hideNewPW=true;\r\n  hideConfirmPW=true;\r\n\r\n  constructor(\r\n    public apiService: ApiService,private fb: FormBuilder,\r\n    private ls:LocalStoreService,\r\n    private snack: MatSnackBar,\r\n    private router: Router,\r\n    private api : ApiService\r\n  ) { \r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.currentUser=this.ls.getItem(\"ICUST_USER\");\r\n      this.userName = this.currentUser.userName;\r\n      this.changePasswordForm = new FormGroup({\r\n        currentPassword: new FormControl('', Validators.required),\r\n        newPassword: new FormControl('', [Validators.required,\r\n          Validators.compose([Validators.pattern(this.passwordRegex),\r\n          Validators.maxLength(this.maxPass),\r\n          Validators.minLength(this.minPass)])]),\r\n          confirmnewPassword: new FormControl('', Validators.required)\r\n      })\r\n      this.api.getSecurityPolicyDetails().subscribe((resp) => {\r\n        this.security1 = resp;\r\n        console.log(this.security1);\r\n        this.ucase = this.security1[0].pswdComplexUcase;\r\n        this.lcase = this.security1[0].pswdComplexLcase;\r\n        console.log(this.lcase);\r\n        this.num = this.security1[0].pswdComplexNum;\r\n        console.log(this.num);\r\n        this.splc = this.security1[0].pswdComplexSplc;\r\n        this.minPass = this.security1[0].minPswdLength;\r\n        this.maxPass = this.security1[0].maxPswdLength;\r\n        console.log(this.maxPass);\r\n  \r\n        if (this.security1[0].pswdComplexUcase==\"true\") {\r\n          this.passwordRegex = '(?=[^A-Z]*[A-Z])';\r\n          this.errorMsg = ' UpperCase';\r\n        }\r\n        if (this.security1[0].pswdComplexLcase==\"true\") {\r\n          this.passwordRegex = this.passwordRegex + '(?=[^a-z]*[a-z])';\r\n          if (this.errorMsg != '') {\r\n            this.errorMsg = this.errorMsg + ', LowerCase';\r\n          }\r\n          else {\r\n            this.errorMsg = this.errorMsg + ' LowerCase';\r\n          }\r\n        }\r\n        if(this.splc==\"true\") {\r\n          this.passwordRegex = this.passwordRegex  + '(?=.*[!@#$%^&*])';\r\n          if(this.errorMsg != '') \r\n            this.errorMsg = this.errorMsg + \", Special Character\";  \r\n          else\r\n            this.errorMsg = this.errorMsg + \" Special Character\";\r\n        }\r\n  \r\n        if (this.security1[0].pswdComplexNum==\"true\") {\r\n          this.passwordRegex = this.passwordRegex + '(?=[^0-9]*[0-9])';\r\n          if (this.errorMsg != '') {\r\n            this.errorMsg = this.errorMsg + ', Number';\r\n          }\r\n          else {\r\n            this.errorMsg = this.errorMsg + ' Number';\r\n          }\r\n        }\r\n  \r\n        this.passwordRegex =\r\n          this.passwordRegex + \".{\" + this.minPass + \",\" + this.maxPass + \"}\";\r\n        this.errorMsg =\r\n          \"Password must contain atleast one \" + this.errorMsg + \".\";\r\n        console.log(this.passwordRegex);\r\n      \r\n\r\n        this.changePasswordForm = this.fb.group({\r\n          currentPassword:[\"\", [Validators.required]],\r\n          \r\n          newPassword: new FormControl(\"\", [\r\n            Validators.required,\r\n            Validators.compose([\r\n              Validators.pattern(this.passwordRegex),\r\n              Validators.maxLength(this.maxPass),\r\n              Validators.minLength(this.minPass),\r\n            ]),\r\n          ]),\r\n          confirmnewPassword: new FormControl(\"\", [\r\n            Validators.required,\r\n            Validators.compose([\r\n              Validators.pattern(this.passwordRegex),\r\n              Validators.maxLength(this.maxPass),\r\n              Validators.minLength(this.minPass),\r\n            ]),\r\n          ]),\r\n        \r\n        })\r\n      });\r\n\r\n\r\n    }\r\n\r\n     \r\n    \r\n  \r\n\r\n    save(){\r\n  if(this.changePasswordForm.value.newPassword === this.changePasswordForm.value.confirmnewPassword){\r\n        let payload = {\r\n      \"username\":this.userName,\r\n      \"oldPassword\":this.changePasswordForm.value.currentPassword ,\r\n      \"password\": this.changePasswordForm.value.newPassword\r\n    };\r\n    console.log(\"payload\",payload);\r\n      this.apiService.changeTellerPassword(payload).subscribe(changePwsResp=>{\r\n        if(changePwsResp){\r\n          this.router.navigateByUrl(\"sessions/signin\");\r\n          setTimeout(() => {\r\n            this.snack.open(\"Password Changed Successfully!\", \"OK\", {\r\n              duration: 4000,\r\n              verticalPosition: \"top\",\r\n              horizontalPosition: \"right\",\r\n            });\r\n          }, 1000);\r\n        }\r\n      });\r\n  \r\n  }\r\n  else{\r\n    setTimeout(() => {\r\n      this.snack.open(\"New Password and Confirm Password values are not same!\", \"OK\", {\r\n        duration: 4000,\r\n        verticalPosition: \"top\",\r\n        horizontalPosition: \"right\",\r\n      });\r\n    }, 1000);\r\n    }\r\n     }\r\n    }\r\n    \r\n    \r\n\r\n","<div class=\"text-center mat-bg-white pt-16 pb-16\">\r\n  <h2 class=\"m-0 text-blue\">Password Change</h2>\r\n</div>\r\n\r\n<div fxLayout=\"column\" class=\"pl-35 pr-35\">\r\n  <div fxFlex=\"100%\">\r\n    <form fxLayout=\"column\" [formGroup]=\"changePasswordForm\">\r\n      <div fxLayout=\"column\" fxLayoutGap=\"25px\">\r\n        <div fxFlex=\"50\" fxLayout=\"column\" class=\"pr-1\">\r\n          <div class=\"pb-1\" fxFlex=\"50\">\r\n            <mat-form-field class=\"full-width\" appearance=\"outline\">\r\n              <mat-label>Current Password*</mat-label>\r\n              <input matInput [type]=\"hideCurrentPW ? 'password' : 'text'\" class=\"box\" formControlName=\"currentPassword\"\r\n                placeholder=\"Enter Current Password\" />\r\n              <mat-icon (click)=\"hideCurrentPW = !hideCurrentPW\" style=\"margin-top: -4%; margin-left: 95%; cursor: pointer;\">\r\n                {{hideCurrentPW ? 'visibility_off' :'visibility'}}</mat-icon>\r\n            </mat-form-field>\r\n          </div>\r\n\r\n          <div class=\"pb-1\" fxFlex=\"50\">\r\n            <mat-form-field class=\"full-width\" appearance=\"outline\">\r\n              <mat-label> New Password*</mat-label>\r\n              <input matInput [type]=\"hideNewPW ? 'password' : 'text'\" minlength={{minPass}} maxlength={{maxPass}} class=\"box\"\r\n                formControlName=\"newPassword\" placeholder=\"Enter confirm Password\" />\r\n              <mat-icon (click)=\"hideNewPW = !hideNewPW\" style=\"margin-top: -4%; margin-left: 95%; cursor: pointer;\">\r\n                {{hideNewPW ? 'visibility_off' :'visibility'}}</mat-icon>\r\n            </mat-form-field>\r\n            <mat-error\r\n              *ngIf=\"changePasswordForm.get('newPassword').touched && !changePasswordForm.get('newPassword').valid\">\r\n              <div *ngIf=\"changePasswordForm.get('newPassword').errors.pattern\">{{errorMsg}}</div>\r\n            </mat-error>\r\n\r\n            <mat-error *ngIf=\"changePasswordForm.get('newPassword').hasError('minlength')\">\r\n              New Password Password must contain Minimum {{minPass}} digits.\r\n            </mat-error>\r\n            <mat-error *ngIf=\"changePasswordForm.get('newPassword').hasError('maxlength')\">\r\n              New Password must contain Maximum {{maxPass}} digits.\r\n            </mat-error>\r\n          </div>\r\n\r\n          <div class=\"pb-1\" fxFlex=\"50\">\r\n            <mat-form-field class=\"full-width\" appearance=\"outline\">\r\n              <mat-label>Confirm New Password*</mat-label>\r\n              <input matInput [type]=\"hideConfirmPW ? 'password' : 'text'\" class=\"box\" formControlName=\"confirmnewPassword\"\r\n                placeholder=\"Enter confirm Password\" />\r\n              <mat-icon (click)=\"hideConfirmPW = !hideConfirmPW\" style=\"margin-top: -4%; margin-left: 95%; cursor: pointer;\">\r\n                {{hideConfirmPW ? 'visibility_off' :'visibility'}}</mat-icon>\r\n            </mat-form-field>\r\n            <mat-error\r\n              *ngIf=\"changePasswordForm.get('confirmnewPassword').touched && !changePasswordForm.get('confirmnewPassword').valid\">\r\n              <div *ngIf=\"changePasswordForm.get('confirmnewPassword').errors.pattern\">{{errorMsg}}</div>\r\n            </mat-error>\r\n            <mat-error *ngIf=\"changePasswordForm.get('confirmnewPassword').hasError('minlength')\">\r\n              New Password Password must contain Minimum {{minPass}} digits.\r\n            </mat-error>\r\n            <mat-error *ngIf=\"changePasswordForm.get('confirmnewPassword').hasError('maxlength')\">\r\n              New Password must contain Maximum {{maxPass}} digits.\r\n            </mat-error>\r\n          </div>\r\n          <div class=\"alignright\">\r\n            <button mat-raised-button [disabled]=\"changePasswordForm.invalid\" (click)=\"save()\" color=\"primary\"\r\n              class=\"save_btn\">Save</button>\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { currentUser } from 'app/shared/models/currentuser';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { ThemeService } from 'app/shared/services/theme.service';\r\n//import { resourceLimits } from 'worker_threads';\r\nimport { DataService } from 'app/shared/services/data.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\n\r\n\r\n@Component({\r\n  selector: 'app-settings',\r\n  templateUrl: './settings.component.html',\r\n  styleUrls: ['./settings.component.scss']\r\n})\r\nexport class SettingsComponent implements OnInit {\r\ncurrentUser:currentUser;\r\nprofileInfo:any;\r\nselectedTheme: string;\r\nemailId:any;\r\n\r\n  constructor(private ls:LocalStoreService, private snack: MatSnackBar, private dataService:DataService,private apiService:ApiService,public router:Router,  public themeService: ThemeService,) {\r\n    \r\n\r\n   }\r\n\r\n  ngOnInit(): void {\r\n    this.currentUser = this.ls.getItem(\"ICUST_USER\");\r\n    this.getProfile();\r\n    this.dataService.getIcustUser().subscribe((data) => {\r\n      if (data) {\r\n        this.currentUser = this.ls.getItem(\"ICUST_USER\");\r\n        setTimeout(() => {\r\n          this.snack.open(\"Email Changed Successfully!\", \"OK\", {\r\n            duration: 4000,\r\n            verticalPosition: \"top\",\r\n            horizontalPosition: \"right\",\r\n          });\r\n        }, 1000);\r\n      }\r\n    });\r\n  }\r\n\r\n  \r\n  \r\n  getProfile(){\r\n    this.apiService.fetchTellerProfileInfo(this.currentUser.userId).subscribe((result) => {\r\n      this.profileInfo =result;\r\n    });\r\n    \r\n    \r\n  }\r\n  language(){\r\n    this.apiService.fetchTellerProfileInfo(this.currentUser.userId).subscribe((result) => {\r\n      this.router.navigateByUrl('/settings/change-password');\r\n    });\r\n\r\n  }\r\n  languagemail(){\r\n    this.router.navigateByUrl('/settings/change-email');\r\n    }\r\n\r\n    onChangeTheme(e){\r\n      if (e.value == 'light') {\r\n        this.ls.setItem('theme', 'light');\r\n        this.themeService.changeTheme('egret-dark-purple','egret-navy');\r\n      } else {\r\n        this.ls.setItem('theme', 'dark');\r\n        this.themeService.changeTheme('egret-navy','egret-dark-purple');\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n\r\n\r\nfunction language(): void {\r\n  throw new Error('Function not implemented.');\r\n\r\n}\r\n\r\n\r\n","<div class=\"profilecontainer mt-8\">\r\n<div  class=\"text-center mat-bg-primary pt-16 pb-16\">\r\n  <h4 class=\"profilevalid\" class=\"m-0 text-white\">Profile</h4>\r\n</div>\r\n<mat-nav-list class=\"notification-list\" role=\"list\">\r\n  <!-- Notification item -->\r\n\r\n  <mat-list-item class=\"notific-item\" role=\"listitem\" routerLinkActive=\"open\">\r\n      <mat-icon color=\"primary\" class=\"notific-icon mr-16\">person</mat-icon>\r\n      <a>\r\n       <div class=\"mat-list-text\">\r\n         <h4 class=\"message\">{{currentUser.tellerName}}</h4>\r\n         <!-- <small class=\"time text-muted\">{{n.time}}</small> -->\r\n       </div>\r\n    </a>\r\n  </mat-list-item>\r\n  <mat-list-item class=\"notific-item\" role=\"listitem\" routerLinkActive=\"open\">\r\n    <mat-icon color=\"primary\" class=\"notific-icon mr-16\">language icon</mat-icon>\r\n      <a>\r\n      <div  class=\"mat-list-text\">\r\n        <h4 class=\"message\" >{{currentUser.language }}</h4>\r\n        </div>\r\n   </a>\r\n </mat-list-item>\r\n  <mat-list-item class=\"notific-item\" role=\"listitem\" routerLinkActive=\"open\">\r\n    <mat-icon color=\"primary\" class=\"notific-icon mr-16\">password</mat-icon>\r\n     <a>\r\n      <div class=\"mat-list-text\">\r\n        <h4 class=\"message\" (click)=\"language()\">Password Change</h4>\r\n        <!-- <small class=\"time text-muted\">{{n.time}}</small> -->\r\n      </div>\r\n    </a>\r\n  </mat-list-item>\r\n  <mat-list-item class=\"notific-item\" role=\"listitem\" routerLinkActive=\"open\">\r\n    <mat-icon color=\"primary\" class=\"notific-icon mr-16\">email</mat-icon>\r\n     <a>\r\n      <div class=\"mat-list-text\">\r\n        <h4 class=\"message\" >{{currentUser.email }}</h4>\r\n        <!-- <small class=\"time text-muted\">{{n.time}}</small> -->\r\n      </div>\r\n    </a>\r\n  </mat-list-item>\r\n  <mat-list-item class=\"notific-item\" role=\"listitem\" routerLinkActive=\"open\">\r\n    <mat-icon color=\"primary\" class=\"notific-icon mr-16\">adjust icon</mat-icon>\r\n     <a>\r\n      <div class=\"mat-list-text\">\r\n        <h4 class=\"message\" (click)=\"getProfile()\">Theme change</h4>\r\n        <!-- <small class=\"time text-muted\">{{n.time}}</small> -->\r\n      </div>\r\n    </a>\r\n    \r\n  </mat-list-item>\r\n  <div class=\"mx-60\">\r\n    <form class=\"mt-4\">\r\n      <mat-form-field>\r\n        <mat-label>Select Theme</mat-label>\r\n        <mat-select [(ngModel)]=\"selectedTheme\" name=\"theme\" (selectionChange)=\"onChangeTheme($event)\">\r\n          <mat-option value=\"light\">\r\n            Light\r\n          </mat-option>\r\n          <mat-option value=\"dark\">\r\n            Dark\r\n          </mat-option>\r\n        </mat-select>\r\n      </mat-form-field>\r\n    </form>\r\n  </div>\r\n\r\n\r\n  <mat-list-item class=\"notific-item\" role=\"listitem\" routerLinkActive=\"open\">\r\n    <mat-icon color=\"primary\" class=\"notific-icon mr-16\">edit</mat-icon>\r\n     <a>\r\n      <div class=\"mat-list-text\">\r\n        <h4 class=\"message\" (click)=\"languagemail()\">Edit Profile</h4>\r\n        <!-- <small class=\"time text-muted\">{{n.time}}</small> -->\r\n      </div>\r\n    </a>\r\n  </mat-list-item>\r\n</mat-nav-list>\r\n</div>"]}