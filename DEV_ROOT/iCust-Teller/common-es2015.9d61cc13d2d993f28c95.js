(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{rp8y:function(t,e,r){"use strict";r.d(e,"a",function(){return c});var o=r("tk/3"),n=r("AytR"),a=r("2Vo4"),i=r("vkgz"),s=r("fXoL"),p=r("dNgK");const l=n.a.DESKTOP_URL;let c=(()=>{class t{constructor(t,e){this.http=t,this.snack=e,this.userData=new a.a(""),this.getJSON_rd=function(t,e){var r=new XMLHttpRequest;r.open("RDSERVICE",t,!0),r.responseType="text",r.onload=function(){var t=r.status;200==t?e(null,r.response):e(t)},r.send()}}userDataService(t){this.userData.next(t)}CallingSGIFPGetData(){return this.http.get("http://localhost:8000/SGIFPCapture").pipe(Object(i.a)(t=>(console.log("result--\x3e",t),t)))}handleError(t,e){throw new Error("Method not implemented.")}rdservice(){this.getJSON_rd("http://localhost:11100/",function(t,e){null!=t?alert("Something went wrong: "+t):alert("Response:-"+String(e))})}saveBiometric(t,e,r,o){return this.http.post(`${l}/rest/upload/saveOrUpdateBio/${e}/${r}/${o}`,t)}uploadFingerPrint(t){return this.http.get(l+"/rest/upload/getCustomerDataByFp?fingerIndex=4",t)}errorCodeService(t){var e="";1==t&&(e="Creation failed : A driver is missing/not correctly configured"),3==t&&(e="Please check again. Either driver is corrupted or Device is not connected"),2==t&&(e="Function failed "),51==t&&(e="System file load failure"),52==t&&(e="Sensor chip initialization failed"),53==t&&(e="Sensor line dropped"),54==t&&(e="Timeout/Failed to scan. Clean your fingers and try again"),103!=t&&104!=t&&106!=t||(e="Match failed , try again"),console.log("error :: ",e),this.snack.open(""+e,"OK",{duration:4e3,verticalPosition:"top",horizontalPosition:"right"})}getCustInfoByFp(t,e,r){var n;return console.log(`fingerIndex ${r} and page ${t}`),n=(new o.c).append("fingerIndex",r),this.http.get(`${l}/rest/upload/getCustomerDataByFp?${n}`)}getCustInfoByCustomerId(t){var e;return console.log("customerId "+t),e=(new o.c).append("customerId",t),this.http.get(`${l}/rest/upload/getCustomerDataByFp?${e}`)}CallingSGIFPCapture(){return console.log(" in service "),this.http.get("https://localhost:8000/SGIFPCapture").pipe(Object(i.a)(t=>(console.log("result--\x3e",t),t)))}CallingSGIFPMatch(t,e){var r=(new o.c).append("template1",t).append("template2",e);return this.http.post("https://localhost:8000/SGIMatchScore",r).pipe(Object(i.a)(t=>t))}}return t.\u0275fac=function(e){return new(e||t)(s.Yb(o.a),s.Yb(p.a))},t.\u0275prov=s.Kb({token:t,factory:t.\u0275fac,providedIn:"root"}),t})()}}]);