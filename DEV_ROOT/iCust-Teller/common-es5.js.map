{"version":3,"sources":["webpack:///src/app/shared/services/finger-print-capture.service.ts"],"names":["baseUrl","DESKTOP_URL","FingerPrintCaptureService","http","snack","userData","getJSON_rd","url","callback","xhr","XMLHttpRequest","open","responseType","onload","status","response","send","data","next","get","pipe","result","console","log","arg0","arg1","Error","port","urlStr","err","alert","String","capFingerPrint","fingerName","cId","screen","post","errorCode","error","duration","verticalPosition","horizontalPosition","page","size","fingerIndex","params","append","customerId","templeData1","templeData2","secuLicc","providedIn"],"mappings":"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","file":"common-es5.js","sourcesContent":["import { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { environment } from 'environments/environment';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\nconst baseUrl = environment.DESKTOP_URL;\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FingerPrintCaptureService {\r\n\r\n  constructor(private http: HttpClient, private snack: MatSnackBar) {\r\n  }\r\n\r\n  userData: BehaviorSubject<any> = new BehaviorSubject<any>('');\r\n  userDataService(data: any) {\r\n    this.userData.next(data);\r\n  }\r\n\r\n  /* NOTE:\r\n  biometric call type: webapi\r\n  lisence: used 60 free trail version\r\n  desc: currently using this service for finger print capturing\r\n   */\r\n  CallingSGIFPGetData(): Observable<any> {\r\n    return this.http.get('http://localhost:8000/SGIFPCapture')\r\n      .pipe(\r\n        tap((result) => {\r\n          console.log('result-->', result)\r\n          return result;\r\n        })\r\n      );\r\n\r\n  }\r\n  handleError(arg0: string, arg1: undefined[]): (err: any, caught: Observable<any>) => import(\"rxjs\").ObservableInput<any> {\r\n    throw new Error('Method not implemented.');\r\n  }\r\n\r\n\r\n  /* NOTE:\r\n  biometric call type: registered device service\r\n  lisence: paid\r\n  desc: currently not using this service\r\n   */\r\n  rdservice() {\r\n    var port;\r\n    var urlStr = '';\r\n    urlStr = 'http://localhost:11100/';\r\n\r\n    this.getJSON_rd(urlStr,\r\n      function (err, data) {\r\n        if (err != null) {\r\n          alert('Something went wrong: ' + err);\r\n        } else {\r\n          alert('Response:-' + String(data));\r\n        }\r\n      }\r\n    );\r\n  }\r\n  getJSON_rd: any = function (url, callback) {\r\n    var xhr = new XMLHttpRequest();\r\n    xhr.open('RDSERVICE', url, true);\r\n    xhr.responseType = 'text';\r\n    xhr.onload = function () {\r\n      var status = xhr.status;\r\n      if (status == 200) {\r\n        callback(null, xhr.response);\r\n      } else {\r\n        callback(status);\r\n      }\r\n    };\r\n    xhr.send();\r\n  };\r\n\r\n  saveBiometric(capFingerPrint, fingerName, cId, screen) {\r\n    return this.http.post<any>(`${baseUrl}/rest/upload/saveOrUpdateBio/${fingerName}/${cId}/${screen}`, capFingerPrint);\r\n  }\r\n\r\n  errorCodeService(errorCode) {\r\n    var error = '';\r\n    if (errorCode == 1) {\r\n      error = 'Creation failed : A driver is missing/not correctly configured';\r\n    }\r\n\r\n    if (errorCode == 3) {\r\n      error = 'Please check again. Either driver is corrupted or Device is not connected';\r\n    }\r\n    if (errorCode == 2) {\r\n      error = 'Function failed ';\r\n    }\r\n\r\n    if (errorCode == 51) {\r\n      error = 'System file load failure';\r\n    }\r\n    if (errorCode == 52) {\r\n      error = 'Sensor chip initialization failed';\r\n    }\r\n    if (errorCode == 53) {\r\n      error = 'Sensor line dropped';\r\n    }\r\n\r\n    if (errorCode == 54) {\r\n      error = 'Timeout/Failed to scan. Clean your fingers and try again';\r\n    }\r\n\r\n    if (errorCode == 103 || errorCode == 104 || errorCode == 106) {\r\n      error = 'Match failed , try again'\r\n    }\r\n\r\n    console.log('error :: ', error);\r\n    this.snack.open(`${error}`, 'OK', {\r\n      duration: 4000,\r\n      verticalPosition: 'top',\r\n      horizontalPosition: 'right'\r\n    });\r\n\r\n  }\r\n\r\n  getCustInfoByFp(page, size, fingerIndex) {\r\n    var params;\r\n\r\n    console.log(`fingerIndex ${fingerIndex} and page ${page}`)\r\n    params = new HttpParams().append('fingerIndex', fingerIndex);//.append('page', page);\r\n\r\n    return this.http.get<any>(`${baseUrl}/rest/upload/getCustomerDataByFp?${params}`);\r\n  }\r\n\r\n  getCustInfoByCustomerId(customerId) {\r\n    var params;\r\n    console.log(`customerId ${customerId}`)\r\n    params = new HttpParams().append('customerId', customerId);\r\n    return this.http.get<any>(`${baseUrl}/rest/upload/getCustomerDataByFp?${params}`);\r\n  }\r\n\r\n  /* To-Do: https api capture */\r\n  CallingSGIFPCapture(): Observable<any> {\r\n    console.log(\" in service \")\r\n    return this.http.get('https://localhost:8443/SGIFPCapture')\r\n      .pipe(\r\n        tap((result) => {\r\n          console.log('result-->', result)\r\n          return result;\r\n        })\r\n      );\r\n  }\r\n\r\n   /* To-Do: https api capture */\r\n   CallingSGIFPMatch(templeData1: any, templeData2: any): Observable<any> {\r\n    var secuLicc = \"ae7VmpMA9ZwEGVYVr1LMWrqjCEx+eFmya9VX0v+vNfQ=\";\r\n    var params = new HttpParams()\r\n      .append('template1', templeData1)\r\n      .append('template2', templeData2)\r\n    //  .append('licstr',secuLicc);\r\n    //  .append('licstr',secuLicc);\r\n    // http://localhost:8000/SGIMatchScore\r\n    return this.http.post(`https://localhost:8443/SGIMatchScore`, params)\r\n      .pipe(\r\n        tap((result) => {\r\n          // console.log('result-->', result)\r\n          return result;\r\n        })\r\n\r\n      );\r\n  }\r\n\r\n}\r\n"]}