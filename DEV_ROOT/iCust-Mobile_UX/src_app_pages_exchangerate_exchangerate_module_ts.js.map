{"version":3,"file":"src_app_pages_exchangerate_exchangerate_module_ts.js","mappings":";;;;;;;;;;;;;;;;;;AAAyC;AACc;AAEA;AAEvD,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,gEAAgB;KAC5B;CACF,CAAC;IAMW,6BAA6B,SAA7B,6BAA6B;;AAA7B,6BAA6B;IAJzC,uDAAQ,CAAC;QACR,OAAO,EAAE,CAAC,kEAAqB,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,yDAAY,CAAC;KACxB,CAAC;GACW,6BAA6B;AAAA;;;;;;;;;;;;;;;;;;;;;;;;AChBD;AACM;AACkB;AACpB;AACiC;AACxB;AACC;IAa1C,sBAAsB,SAAtB,sBAAsB;;AAAtB,sBAAsB;IAXlC,uDAAQ,CAAC;QACR,OAAO,EAAE;YACP,yDAAY;YACZ,uDAAW;YACX,+DAAmB;YACnB,uDAAW;YACX,gEAAmB;YACnB,uFAA6B;SAC9B;QACD,YAAY,EAAE,CAAC,gEAAgB,CAAC;KACjC,CAAC;GACW,sBAAsB;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;ACnBe;AACT;AACiB;AAEkB;IAO/D,gBAAgB,SAAhB,gBAAgB;IAO3B,YAAoB,MAAc,EAAU,GAAe,EAAU,EAAe;QAAhE,WAAM,GAAN,MAAM,CAAQ;QAAU,QAAG,GAAH,GAAG,CAAY;QAAU,OAAE,GAAF,EAAE,CAAa;QANpF,wBAAmB,GAAG,IAAI,CAAC;QAC3B,WAAM,GAAY,IAAI,CAAC;IAKiE,CAAC;IAEzF,QAAQ;QACN,IAAI,CAAC,oBAAoB,EAAE,CAAC;QAC5B,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACpC,mBAAmB,EAAE,CAAC,EAAE,EAAE,CAAC,+DAAmB,CAAC,CAAC;SACjD,CAAC;IACJ,CAAC;IACD,aAAa;QACX,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC;IACrC,CAAC;IAED,oBAAoB;QAClB,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;QAC5B,IAAI,CAAC,GAAG,CAAC,iBAAiB,EAAE,CAAC,SAAS,CAAC,CAAC,iBAAsB,EAAE,EAAE;YAChE,IAAI,CAAC,UAAU,GAAG,iBAAiB,CAAC;YACpC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAC/B,CAAC,CAAC,CAAC;IACL,CAAC;IACD,kBAAkB,CAAC,QAAQ;;QACzB,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;QAC5B,IAAI,CAAC,YAAY;YACf,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,WAAW,IAAI,QAAQ,CAAC,CAAC;QAC5E,IAAI,CAAC,mBAAmB;YACtB,IAAI,CAAC,YAAY,KAAI,UAAI,CAAC,YAAY,0CAAE,WAAW,CAAC,WAAW,EAAE,EAAC;IACtE,CAAC;IACD,yBAAyB,CAAC,KAAa;QACrC,oCAAoC;IACtC,CAAC;;;;;;;AAnCU,gBAAgB;IAL5B,wDAAS,CAAC;QACT,QAAQ,EAAE,kBAAkB;QAC5B,yEAAuC;;KAExC,CAAC;GACW,gBAAgB;AAAA","sources":["./src/app/pages/exchangerate/exchangerate-routing.module.ts","./src/app/pages/exchangerate/exchangerate.module.ts","./src/app/pages/exchangerate/exchangerate.page.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { ExchangeratePage } from './exchangerate.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: ExchangeratePage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class ExchangeratePageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ReactiveFormsModule,FormsModule } from '@angular/forms';\r\nimport { IonicModule } from '@ionic/angular';\r\nimport { ExchangeratePageRoutingModule } from './exchangerate-routing.module';\r\nimport { NgxFlagPickerModule } from 'ngx-flag-picker';\r\nimport { ExchangeratePage } from './exchangerate.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    IonicModule,\r\n    NgxFlagPickerModule,\r\n    ExchangeratePageRoutingModule\r\n  ],\r\n  declarations: [ExchangeratePage]\r\n})\r\nexport class ExchangeratePageModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { ApiService } from 'src/app/services/api.service';\r\nimport { getCurrencySymbol } from '@angular/common';\r\nimport { FormBuilder, FormGroup, NgForm, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-exchangerate',\r\n  templateUrl: './exchangerate.page.html',\r\n  styleUrls: ['./exchangerate.page.scss'],\r\n})\r\nexport class ExchangeratePage implements OnInit {\r\n  selectedCountryCode = 'in';\r\n  isShow: boolean = true;\r\n  currencies: any;\r\n  exchangeRateForm: FormGroup;\r\n  currencyData: any;\r\n\r\n  constructor(private router: Router, private api: ApiService, private fb: FormBuilder) { }\r\n\r\n  ngOnInit() {\r\n    this.getCountrynameValues();\r\n    this.exchangeRateForm = this.fb.group({\r\n      transactionCurrency: ['', [Validators.required]]\r\n    })\r\n  }\r\n  goToDashboard() {\r\n    this.router.navigate(['dashboard'])\r\n  }\r\n\r\n  getCountrynameValues() {\r\n    console.log(\"All currency\");\r\n    this.api.getCurrencyValues().subscribe((allCurrencyValues: any) => {\r\n      this.currencies = allCurrencyValues;\r\n      console.log(this.currencies);\r\n    });\r\n  }\r\n  selectCurrencyCode(currency) {\r\n    console.log(currency.value);\r\n    this.currencyData =\r\n      this.currencies && this.currencies.find((x) => x.countryCode == currency);\r\n    this.selectedCountryCode =\r\n      this.currencyData && this.currencyData?.countryCode.toLowerCase();\r\n  }\r\n  changeSelectedCountryCode(value: string): void {\r\n    // this.selectedCountryCode = value;\r\n  }\r\n}\r\ninterface CountryType {\r\n  code: string;\r\n  countryName: string;\r\n  currency: string;\r\n  currencyName: string;\r\n\r\n}\r\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}