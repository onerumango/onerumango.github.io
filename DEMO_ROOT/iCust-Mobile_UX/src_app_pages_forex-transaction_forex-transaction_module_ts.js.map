{"version":3,"file":"src_app_pages_forex-transaction_forex-transaction_module_ts.js","mappings":"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","sources":["./src/app/pages/forex-transaction/forex-transaction-routing.module.ts","./src/app/pages/forex-transaction/forex-transaction.module.ts","./src/app/pages/forex-transaction/forex-transaction.page.ts","./src/app/services/loading.service.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { ForexTransactionPage } from './forex-transaction.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: ForexTransactionPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class ForexTransactionPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule, DatePipe } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { ForexTransactionPageRoutingModule } from './forex-transaction-routing.module';\r\n\r\nimport { ForexTransactionPage } from './forex-transaction.page';\r\nimport { NgxFlagPickerModule } from 'ngx-flag-picker';\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    ForexTransactionPageRoutingModule,\r\n    ReactiveFormsModule,\r\n    NgxFlagPickerModule,\r\n    \r\n    \r\n  ],\r\n  providers: [DatePipe],\r\n  declarations: [ForexTransactionPage]\r\n})\r\nexport class ForexTransactionPageModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { ModalController } from '@ionic/angular';\r\nimport { getCurrencySymbol } from '@angular/common';\r\nimport { BranchComponent } from 'src/app/components/branch/branch.component';\r\nimport { TimeSlotsComponent } from 'src/app/components/time-slots/time-slots.component';\r\nimport { ApiService } from 'src/app/services/api.service';\r\nimport { LoadingService } from 'src/app/services/loading.service';\r\nimport { isWeekend } from 'date-fns';\r\nimport { DataService } from 'src/app/services/data.service';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\n\r\n\r\n@Component({\r\n  selector: 'app-forex-transaction',\r\n  templateUrl: './forex-transaction.page.html',\r\n  styleUrls: ['./forex-transaction.page.scss'],\r\n\r\n\r\n})\r\nexport class ForexTransactionPage implements OnInit {\r\n  flag = true;\r\n  phoneNumber: any;\r\n  accountCurrencyFlag: string = 'in';\r\n  submitted: boolean = true;\r\n  submitted1: boolean = true;\r\n  users: any[] = [];\r\n  negotiated = ['0.98', '78.90'];\r\n  forexForm: FormGroup;\r\n  isShow: boolean = true;\r\n  currencyList = [\r\n    'BG',\r\n    'BN'\r\n\r\n  ]\r\n  selectedCountryCode: string = 'in';\r\n  transactionCurrencyModel: string;\r\n  countryCodes = ['us', 'lu', 'de', 'bs', 'br', 'pt'];\r\n  routerData: any;\r\n  curr: any;\r\n  currentBalance: any;\r\n  resp: any;\r\n  minDate = new Date().toISOString();\r\n  maxDate: any = \"2025\";\r\n  chargeAmount: any;\r\n  exchangeRateInfo: any;\r\n  currentUser: any;\r\n\r\n  nearestBrn: boolean;\r\n  accBranch: any;\r\n  brnflg: any;\r\n\r\n  // changeSelectedCountryCode(value: string): void {\r\n  //   this.selectedCountryCode = value;\r\n  // }\r\n  constructor(private fb: FormBuilder, private api: ApiService,\r\n    public loading: LoadingService,\r\n    private router: Router,\r\n    private modalController: ModalController,\r\n    private dataService: DataService) { }\r\n\r\n  ngOnInit() {\r\n    this.currentUser = this.dataService.getCurrentUser();\r\n    console.log(this.currentUser);\r\n\r\n    const dt = new Date();\r\n    this.minDate = dt.getFullYear() + '-' + (dt.getMonth() + 1) + '-' + (dt.getDate() < 10 ? ('0' + dt.getDate()) : dt.getDate());\r\n\r\n    this.phoneNumber = localStorage.getItem('customerPhonenum');\r\n    if (this.router.getCurrentNavigation() != null) {\r\n      this.routerData = this.router.getCurrentNavigation().extras.state;\r\n      console.log('>>get router data -- :', this.routerData);\r\n    }\r\n\r\n    this.forexForm = this.fb.group({\r\n      transactionId: ['', [Validators.required]],\r\n      customerId: ['', [Validators.required]],\r\n      productCode: ['FTX', [Validators.required]],\r\n      tokenOrigin: ['Mobile', [Validators.required]],\r\n      accountNumber: ['', [Validators.required]],\r\n      accountBalance: ['', [Validators.required]],\r\n      accountCurrency: ['', [Validators.required]],\r\n      transactionCurrency: ['', [Validators.required]],\r\n      transactionAmount: ['', [Validators.required]],\r\n      transactionType: ['buy', [Validators.required]],\r\n      branchFlag: [true, [Validators.required]],\r\n      accountBranch: ['', [Validators.required]],\r\n      transactionDate: ['', [Validators.required]],\r\n      transactionBranch: ['', [Validators.required]],\r\n      isMobileTrans: [true, [Validators.required]],\r\n      transactionTime: ['', [Validators.required]],\r\n      exchangeRate: ['', [Validators.required]],\r\n      accountAmount: ['', [Validators.required]],\r\n      totalChargeAmount: ['', [Validators.required]],\r\n      narrative: ['', [Validators.required]],\r\n      denomination: [null, [Validators.required]],\r\n      totalAmount: ['', [Validators.required]],\r\n      createdBy: ['', [Validators.required]],\r\n      createdTime: ['', [Validators.required]],\r\n      modifiedBy: ['', [Validators.required]],\r\n      modifiedTime: ['', [Validators.required]],\r\n      recordStatus: ['', [Validators.required]],\r\n      authStatus: ['', [Validators.required]],\r\n      version: ['', [Validators.required]],\r\n      totalTransactionAmount: ['', [Validators.required]],\r\n      remarks: ['', [Validators.required]]\r\n    });\r\n\r\n    this.forexForm.get('branchFlag').valueChanges.subscribe(val => {\r\n      localStorage.setItem(\"BranchFlag\", val);\r\n      this.brnflg = val;\r\n      if (this.brnflg == false && val == false) {\r\n        this.forexForm.controls.transactionBranch.patchValue(this.trnBrn);\r\n        this.nearestBrn = true;\r\n      } else {\r\n\r\n        this.nearestBrn = false;\r\n        this.accBranch = localStorage.getItem(\"AccBranch\");\r\n        this.forexForm.controls.transactionBranch.patchValue(this.accBranch);\r\n      }\r\n      if (this.brnflg == true && val == false) {\r\n        this.forexForm.controls.transactionBranch.patchValue(this.accBranch);\r\n        this.nearestBrn = true;\r\n      }\r\n\r\n    })\r\n\r\n\r\n    this.loadData();\r\n\r\n    let today = new Date().toISOString();\r\n    this.forexForm.get('transactionDate').patchValue(today);\r\n\r\n  }\r\n\r\n  trnBrn(trnBrn: any) {\r\n    throw new Error('Method not implemented.');\r\n  }\r\n\r\n\r\n  loadData() {\r\n    this.loading.present();\r\n    this.api.custpomerDetails(this.phoneNumber).subscribe(\r\n      (resp) => {\r\n        this.loading.dismiss();\r\n        resp.custAccount = resp.custAccount.filter(\r\n          (card) => card.status === 'APPROVED'\r\n        );\r\n        this.resp = resp;\r\n        console.log('backend resp in home', resp);\r\n        this.users = resp.custAccount;\r\n        this.forexForm.get('accountNumber').patchValue(this.users[0].accountId)\r\n        this.forexForm.get('accountBranch').patchValue(resp.custAccount[0].accountBranch);\r\n        this.currentBalance = this.users[0].amount;\r\n        this.selectedCountryCode = resp.countryCode.toLowerCase();\r\n        this.transactionCurrencyModel = resp.currencyCode;\r\n        this.curr = getCurrencySymbol(resp.custAccount[0].accountCurrency, 'narrow');\r\n\r\n        this.api.getChargeDetails(this.forexForm.get('accountNumber').value).subscribe(resp => {\r\n          console.log('getChargeDetails', resp);\r\n          this.chargeAmount = resp?.[0]?.amount || '';\r\n          this.forexForm.get('totalChargeAmount').patchValue(this.chargeAmount);\r\n        }, err => console.log('Error: ', err));\r\n      },\r\n      (err: any) => {\r\n        this.loading.dismiss();\r\n      }\r\n    );\r\n  }\r\n\r\n  handleExchangeRate(event) {\r\n    this.forexForm.get('totalTransactionAmount').patchValue(Number(event.target.value) + this.chargeAmount);\r\n  }\r\n\r\n  validateDisablebutton(button) {\r\n\r\n    this.forexForm.valueChanges.subscribe(v => {\r\n      // console.log(\"v:: \", v);\r\n      if (button === 'disable1') {\r\n        if (\r\n          v.accountBranch != '' &&\r\n          v.accountNumber != '' &&\r\n          v.transactionCurrency != '' &&\r\n          v.transactionAmount != 0\r\n        ) {\r\n          this.submitted = false;\r\n        } else {\r\n          this.submitted = true;\r\n        }\r\n      }\r\n\r\n      if (button === 'disable2') {\r\n        if (\r\n          v.transactionBranch != '' &&\r\n          v.transactionDate != '' &&\r\n          v.transactionTime != '' &&\r\n          v.accountNo != ''\r\n        ) {\r\n          this.submitted1 = false;\r\n        } else {\r\n          this.submitted1 = true;\r\n        }\r\n      }\r\n    });\r\n    if (this.routerData) {\r\n      this.submitted1 = false;\r\n    }\r\n  }\r\n\r\n  accountEvent(event) {\r\n    console.log('events::', event);\r\n    console.log('events details::', event.detail);\r\n    console.log('event', event.detail.value);\r\n    this.api.accountBalance(event.detail.value).subscribe((accbal) => {\r\n      this.currentBalance = accbal.amount;\r\n    });\r\n  }\r\n\r\n  // compareWith(o1: User, o2: User) {\r\n  //   return o1 && o2 ? o1.id === o2.id : o1 === o2;\r\n  // }\r\n  // isShow : boolean = true;\r\n\r\n  // selectedCountryCode = 'ad';\r\n  // // countryCodes = ['ad', 'ae', 'af', 'ag', 'al', 'ai'];\r\n\r\n  selectCurrencyCode(code) {\r\n    //console.log(code);\r\n    console.log(code);\r\n    const currencyCode = code.detail.value.currency;\r\n    this.selectedCountryCode = code.detail.value.code.toLowerCase();\r\n\r\n    localStorage.setItem(\"Transaction_Currency\", code.target.value.currency);\r\n    localStorage.setItem(\"Account_Currency\", this.forexForm.value.accountCurrency);\r\n    console.log(this.selectedCountryCode);\r\n    if (this.routerData) {\r\n      this.selectedCountryCode =\r\n        this.routerData.data.transactionCurrency.toLowerCase();\r\n      this.forexForm.controls.transactionCurrency.patchValue(this.routerData.data.transactionCurrency);\r\n    }\r\n    if (this.selectedCountryCode && !this.forexForm.get('accountCurrency')?.value.toLowerCase().includes(this.selectedCountryCode)) {\r\n      this.api.getCurrencyExRate(this.forexForm.get('accountCurrency').value, currencyCode).subscribe(resp => {\r\n        console.log(resp);\r\n        this.exchangeRateInfo = resp;\r\n        const transactionType = this.forexForm.get('transactionType').value;\r\n        if (transactionType) {\r\n          if (transactionType === 'buy') {\r\n            this.forexForm.get('exchangeRate').patchValue(resp?.[0]?.buyRate)\r\n          }\r\n          if (transactionType === 'sell') {\r\n            this.forexForm.get('exchangeRate').patchValue(resp?.[0]?.sellRate)\r\n          }\r\n        }\r\n      }, err => console.log('Error: ', err))\r\n    }\r\n  }\r\n\r\n  changeTransactionType(event: any) {\r\n    const transactionType = this.forexForm.get('transactionType').value;\r\n    if (transactionType && this.exchangeRateInfo) {\r\n      if (transactionType === 'buy') {\r\n        this.forexForm.get('exchangeRate').patchValue(this.exchangeRateInfo?.[0]?.buyRate)\r\n      }\r\n      if (transactionType === 'sell') {\r\n        this.forexForm.get('exchangeRate').patchValue(this.exchangeRateInfo?.[0]?.sellRate)\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  changeSelectedCountryCode(value: string): void {\r\n    // this.selectedCountryCode = value;\r\n  }\r\n  next() {\r\n    const accBranch = this.resp.custAccount.find(obj => obj.accountId == this.forexForm.get('accountNumber').value).accountBranch;\r\n    this.forexForm.get('transactionBranch').patchValue(accBranch);\r\n    this.flag = false;\r\n  }\r\n  previous() {\r\n    this.flag = true;\r\n  }\r\n  save(fb) {\r\n    console.log(fb)\r\n    this.router.navigate(['token-generation']);\r\n    //  this.router.navigate(['loan-payment']);\r\n  }\r\n\r\n  openPopup() {\r\n    console.log('popup');\r\n    this.modalController\r\n      .create({\r\n        component: TimeSlotsComponent,\r\n        componentProps: {\r\n          date: this.forexForm.get('transactionDate').value,\r\n        },\r\n      })\r\n      .then((modalResp) => {\r\n        modalResp.present();\r\n        modalResp.onDidDismiss().then((res) => {\r\n          if (res.data != null) {\r\n            console.log(res);\r\n            this.forexForm.get('transactionTime').patchValue(res.data);\r\n          }\r\n        });\r\n      });\r\n  }\r\n\r\n\r\n  previous1() {\r\n    this.router.navigate(['dashboard']);\r\n  }\r\n\r\n  async presentModal() {\r\n    const modal = await this.modalController.create({\r\n      component: BranchComponent,\r\n      id: \"branchModal\",\r\n      componentProps: {\r\n      }\r\n    });\r\n\r\n    modal.onDidDismiss().then((modelData) => {\r\n      if (modelData !== null) {\r\n        let branch = modelData.data;\r\n        console.log('Modal Data for branch: ', modelData.data);\r\n        this.forexForm.patchValue({\r\n          transactionBranch: modelData.data?.branchName\r\n        });\r\n      }\r\n    });\r\n\r\n    return await modal.present();\r\n  }\r\n  currencyScreen() {\r\n    // this.router.navigate(['/currencyconverter']);\r\n    this.router.navigateByUrl(\r\n      '/currencyconverter',\r\n      {\r\n        state: {\r\n          data: {\r\n            amount: this.forexForm.get('transactionAmount').value,\r\n            transType: this.forexForm.get('transactionType').value,\r\n            exchangeRate: this.forexForm.get('exchangeRate').value,\r\n            fromCurrencyFlag: this.accountCurrencyFlag,\r\n            toCurrencyFlag: this.selectedCountryCode,\r\n            fromCurrency: this.forexForm.get('accountCurrency').value,\r\n            toCurrency: this.forexForm.get('transactionCurrency').value?.currency,\r\n          }\r\n        },\r\n      }\r\n    );\r\n\r\n  }\r\n}\r\ninterface CountryType {\r\n  code: string;\r\n  countryName: string;\r\n  currency: string;\r\n  currencyName: string;\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { LoadingController } from '@ionic/angular';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LoadingService {\r\n\r\n  isLoading = false;\r\n\r\n  constructor(public loadingController: LoadingController) { }\r\n\r\n  async present() {\r\n    this.isLoading = true;\r\n    return await this.loadingController.create({\r\n      message: 'Fetching data.......',\r\n      duration: 2500,\r\n    }).then(a => {\r\n      a.present().then(() => {\r\n        console.log('presented');\r\n        if (!this.isLoading) {\r\n          a.dismiss().then(() => console.log('abort presenting'));\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  async dismiss() {\r\n    this.isLoading = false;\r\n    return await this.loadingController.dismiss().then(() => console.log('dismissed'));\r\n  }\r\n}"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}