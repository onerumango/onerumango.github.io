{"version":3,"file":"src_app_pages_success-message_success-message_module_ts.js","mappings":";;;;;;;;;;;;;;;;;;AAAyC;AACc;AAEK;AAE5D,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,qEAAkB;KAC9B;CACF,CAAC;IAMW,+BAA+B,SAA/B,+BAA+B;;AAA/B,+BAA+B;IAJ3C,uDAAQ,CAAC;QACR,OAAO,EAAE,CAAC,kEAAqB,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,yDAAY,CAAC;KACxB,CAAC;GACW,+BAA+B;AAAA;;;;;;;;;;;;;;;;;;;;;;;AChBH;AACM;AACF;AAEA;AAEsC;AAEvB;IAW/C,wBAAwB,SAAxB,wBAAwB;;AAAxB,wBAAwB;IATpC,uDAAQ,CAAC;QACR,OAAO,EAAE;YACP,yDAAY;YACZ,uDAAW;YACX,uDAAW;YACX,4FAA+B;SAChC;QACD,YAAY,EAAE,CAAC,qEAAkB,CAAC;KACnC,CAAC;GACW,wBAAwB;AAAA;;;;;;;;;;;;;;;;;;;;;;;;ACnBgC;AAC5B;AACiB;IAO7C,kBAAkB,SAAlB,kBAAkB;IAM7B,YACU,GAAe,EACf,MAAc,EACd,GAAsB;QAFtB,QAAG,GAAH,GAAG,CAAY;QACf,WAAM,GAAN,MAAM,CAAQ;QACd,QAAG,GAAH,GAAG,CAAmB;IAAI,CAAC;IAErC,QAAQ;QACN,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,SAAS,CACnD,CAAC,IAAS,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,CACzC,CAAC;QACF,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QAE9B,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,aAAa,CAAC;QACxD,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,iBAAiB,CAAC;QAElE,IAAI,CAAC,GAAG,CAAC,YAAY,EAAE,CAAC;IAC1B,CAAC;IAED,MAAM;QACJ,IAAI,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,UAAU,IAAI,SAAS,EAAE;YACxD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,EAAE,EAAE,UAAU,EAAE,IAAI,EAAE,CAAC,CAAC;SACzD;aAAM,IAAI,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,UAAU,IAAI,YAAY,EAAE;YAClE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,eAAe,CAAC,EAAE,EAAE,UAAU,EAAE,IAAI,EAAE,CAAC,CAAC;SAC/D;aAAM,IAAI,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,UAAU,IAAI,oBAAoB,EAAE;YAC1E,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,EAAE,EAAE,UAAU,EAAE,IAAI,EAAE,CAAC,CAAC;SACvD;aAAM;YACL,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC;SAC1C;IACH,CAAC;;;;;;;AAjCU,kBAAkB;IAL9B,wDAAS,CAAC;QACT,QAAQ,EAAE,qBAAqB;QAC/B,4EAA0C;;KAE3C,CAAC;GACW,kBAAkB;AAAA","sources":["./src/app/pages/success-message/success-message-routing.module.ts","./src/app/pages/success-message/success-message.module.ts","./src/app/pages/success-message/success-message.page.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { SuccessMessagePage } from './success-message.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: SuccessMessagePage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class SuccessMessagePageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { SuccessMessagePageRoutingModule } from './success-message-routing.module';\r\n\r\nimport { SuccessMessagePage } from './success-message.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    SuccessMessagePageRoutingModule\r\n  ],\r\n  declarations: [SuccessMessagePage]\r\n})\r\nexport class SuccessMessagePageModule {}\r\n","import { ChangeDetectorRef, Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { ApiService } from 'src/app/services/api.service';\r\n\r\n@Component({\r\n  selector: 'app-success-message',\r\n  templateUrl: './success-message.page.html',\r\n  styleUrls: ['./success-message.page.scss'],\r\n})\r\nexport class SuccessMessagePage implements OnInit {\r\n  navSubscription: any;\r\n  screenNames: any;\r\n  title: any;\r\n  description: any;\r\n\r\n  constructor(\r\n    private api: ApiService,\r\n    private router: Router,\r\n    private cdr: ChangeDetectorRef) { }\r\n\r\n  ngOnInit() {\r\n    this.navSubscription = this.api.getNavParam.subscribe(\r\n      (data: any) => (this.screenNames = data)\r\n    );\r\n    console.log(this.screenNames);\r\n\r\n    this.title = this.screenNames.queryParams.screenDetails;\r\n    this.description = this.screenNames.queryParams.screenDescription;\r\n\r\n    this.cdr.markForCheck();\r\n  }\r\n\r\n  goBack() {\r\n    if (this.screenNames.queryParams.screenName == \"setmpin\") {\r\n      this.router.navigate(['profile'], { replaceUrl: true });\r\n    } else if (this.screenNames.queryParams.screenName == \"forgotmpin\") {\r\n      this.router.navigate(['login-landing'], { replaceUrl: true });\r\n    } else if (this.screenNames.queryParams.screenName == \"new-passwordchange\") {\r\n      this.router.navigate(['login'], { replaceUrl: true });\r\n    } else {\r\n      this.router.navigate(['securitycenter']);\r\n    }\r\n  }\r\n\r\n}\r\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}