{"version":3,"sources":["webpack:///src/app/views/others/cheque-withdrawal/cheque-withdrawal.component.ts","webpack:///src/app/views/others/cheque-withdrawal/cheque-withdrawal.component.html","webpack:///src/app/views/others/loan-payment/loan-payment.component.ts","webpack:///src/app/views/others/loan-payment/loan-payment.component.html","webpack:///src/app/views/others/forex-transaction/forex-transaction.component.ts","webpack:///src/app/views/others/forex-transaction/forex-transaction.component.html","webpack:///src/app/views/others/others.module.ts","webpack:///src/app/views/others/select-service/select-service.component.ts","webpack:///src/app/views/others/select-service/select-service.component.html","webpack:///src/app/views/others/cash-deposit/cash-deposit.component.ts","webpack:///src/app/views/others/cash-deposit/cash-deposit.component.html","webpack:///src/app/views/others/utility-billpayment/utility-billpayment.component.ts","webpack:///src/app/views/others/utility-billpayment/utility-billpayment.component.html","webpack:///src/app/shared/directives/onlynumber.directive.ts","webpack:///src/app/views/others/cheque-withdrawal1/cheque-withdrawal1.component.ts","webpack:///src/app/views/others/cheque-withdrawal1/cheque-withdrawal1.component.html","webpack:///src/app/views/others/cheque-deposit/cheque-deposit.component.ts","webpack:///src/app/views/others/cheque-deposit/cheque-deposit.component.html","webpack:///src/app/views/others/others.routing.ts","webpack:///src/app/views/others/deposit-topup/deposit-topup.component.ts","webpack:///src/app/views/others/deposit-topup/deposit-topup.component.html","webpack:///src/app/views/others/app-blank/app-blank.component.ts","webpack:///src/app/views/others/app-blank/app-blank.component.html","webpack:///src/app/views/others/otp-verify/otp-verify.component.ts","webpack:///src/app/views/others/otp-verify/otp-verify.component.html","webpack:///src/app/views/others/cash-withdrawal/cash-withdrawal.component.ts","webpack:///src/app/views/others/cash-withdrawal/cash-withdrawal.component.html"],"names":["chequewithdrawForm","value","ChequeWithdrawalComponent","router","toast","formBuilder","dialogService","apiService","dialog","cdr","ls","snack","changeDef","ifQRvariable","countryFormControl","productCode","tokenOrigin","accountType","holderName","defaultValue","name","alpha2Code","alpha3Code","numericCode","callingCode","accounttypeArray","idList","tokenObjects","isedit","enableContinue","currencyImage","showAccountNum","showAccoutType","oTpModel","denomCodeArray","key","hideDetails","accountNoList","enableBtn","enableBtn1","accountDropdown","flag1","phoneNumber","localStorage","getItem","appointmentId","transBranch","qrData","JSON","parse","console","log","custValidation","custNameFromLogin","group","transactionId","required","chequeNumber","customerId","accountNumber","accountCurrency","totalAmount","transactionCurrency","transactionAmount","min","accountBalance","totalChargeAmount","totalTransactionAmount","createdBy","createdTime","modifiedBy","modifiedTime","recordStatus","authStatus","version","accountBranch","transactionBranch","gettingallTansactionDetails","accountId","controls","setValue","getChargeDetails","accountBal","customerID","toLowerCase","getAccountBranch","getCountrynameValues","gettransactionBranch","getBankInformation","data","cashWithdrawlData","accNum","reset","fetchByaccNum","subscribe","res","userName","accHolderName","accBalance","custmerID","curr","currency","custAmountBal","fetchByaccDeatilsoncustId","resp","phonenum","setItem","formData","type","cdForm","chequewithdrawValues","chequewithdrawtype","chequewithdrawform","source","source_key","source_value","amount","transamountwithoutcomma","replace","getOtp","otpResp","openDialogOTP","open","duration","verticalPosition","horizontalPosition","getOTPforSave","numbr","dialogRef","number","disableClose","afterClosed","submit","denominationData","denominationDataArray","denomRequired","i","length","denominationKey","denominationValue","push","accountNum","denomination","tokenBranch","transactionStatus","saveofCashDeposit","chequeWithrwResponse","tokenNum","tokenNumber","estimatedTime","estimatedWaitTime","tokenGenerationDialog","event","pattern","inputChar","String","fromCharCode","charCode","test","preventDefault","getTransactionBranch","branches","trasactionBranches","getBranchforKiosk","branchData","forEach","element","index","branch","branchName","getCountryValues","allCountryValues","countryValues","$event","navigateByUrl","removeItem","authenticationDialog","gettingTransactionDetails","allTransactionResp","firstName","middleName","lastName","custID","custAccountData","custAccount","filter","map","obj","includes","j","status","accTyp","custAccountNumber","accountNum1","accounNum","getData","custNum","val","item","custype","account","record","selectedAccountInfo","currentBalance","form","fetchBranchInfoByBranchName","response","qrBranchCode","stringify","a","parseInt","count2000","count500","count200","count100","count50","count20","count10","count1","transamount","toLocaleString","transAmt","target","savedInput","transAmount","lastCharIsPoint","charAt","num","Number","concat","detectChanges","balance","parseFloat","totalTransAmount","chargeDetails","markForCheck","country","currencyCode","branchCode","fetchBankInfoByBranchCode","toString","split","substring","getAppointmentId","cashData","fetchChargeDetails","setTimeout","selector","templateUrl","styleUrls","providedIn","title","LoanPaymentComponent","loanPayment","testing","viewValue","loanpaymentForm","loanAccount","currentArrears","currentDue","principalOutstanding","payFromAccount","repaymentAmount","goToServiceScreens","goToAuthenticate","ForexTransactionComponent","forexTransaction","forexForm","fxCurrency","fxAmount","negotiatedRate","disabled","get","valueChanges","onCountrySelected","goToToken","OthersModule","forRoot","forChild","imports","declarations","entryComponents","SelectServiceComponent","flag","active","folders","id","link","image","enableList","x","navigate","contentDiv","nativeElement","scrollLeft","scrollRight","goToOperations","read","widgetsContent","cashdepositForm","CashDepositComponent","titleName","accType","customerName","isLoading","selected","defaultId","cashDepositResp","cashDepositResponse","cashdepositValues","cashdeposiform","cashdepositType","tokenResp","UtilityBillpaymentComponent","utilityBillpayment","utilityBillPaymentForm","billerName","payFromAcc","billDate","billNumber","OnlynumberDirective","el","navigationKeys","inputElement","e","indexOf","ctrlKey","metaKey","shiftKey","keyCode","pastedInput","clipboardData","document","execCommand","textData","dataTransfer","focus","onKeyDown","onPaste","onDrop","ChequeWithdrawal1Component","goToOperation","chequedepositForm","ChequeDepositComponent","chequedepositValues","chequedepositype","chequedepositform","chequeDepositResp","chequeDepositResponse","OthersRoutes","path","children","component","DepositTopupComponent","depositTopUp","depositForm","depositAccount","revisedAmount","maturityAmount","topupAmount","AppBlankComponent","route","onClickOfButton1","onClickOfButton","onClickOfButton3","OtpVerifyComponent","fb","verifyOtpModel","afterSubmit","basicInformationForm","otp","close","otpValue","otpNumber","customerPhoneNum","sourceKey","sourceValue","verifyOtp","userId","emit","responseMessage","error","closeClick","validateOtp","cashwithdrawForm","CashWithdrawalComponent","elRef","renderer","cashWithdrawal","custPref","entityCode","bankCode","exchangeRate","accountAmount","narrative","customerCategory","cashwithDrwValues","cashwithDrwType","cashwithDrwform","saveofCashwithdraw","cashWithdrawResp","cashWithdrawResponse","resetForm"],"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","file":"views-others-others-module-es5.js","sourcesContent":["import { Country } from '@angular-material-extensions/select-country';\r\nimport { Component, Injectable, Input, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl, FormBuilder, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { ToastrComponent } from 'app/shared/components/toastr/toastr.component';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { DialogService, TokenObjects } from 'app/shared/services/Dialog/dialog.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { Toast } from 'ngx-toastr';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { getCurrencySymbol } from '@angular/common';\r\nimport { ChangeDetectorRef } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { ViewChild } from '@angular/core';\r\nimport { otpModel } from 'app/shared/models/otp.model';\r\nimport { OtpVerifyComponent } from '../otp-verify/otp-verify.component';\r\nimport { MatDialog } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-cheque-withdrawal',\r\n  templateUrl: './cheque-withdrawal.component.html',\r\n  styleUrls: ['./cheque-withdrawal.component.scss']\r\n})\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class ChequeWithdrawalComponent implements OnInit {\r\n  // chequeWithdrawDto = new chequeWithdrawDto();\r\n  // chequeWithdrawDto : any = 'Cash Withdrawal';\r\n  chequewithdrawForm: FormGroup;\r\n  @Input() title: any;\r\n  operation: string;\r\n  ifQRvariable = false;\r\n  countryFormControl = new FormControl();\r\n  productCode = \"CQW\";\r\n  tokenOrigin = \"Kiosk\";\r\n  accountType = ['Savings', 'Current', 'Deposit'];\r\n  accountNum: string;\r\n  holderName = ['Jane smith', 'Micheal smith'];\r\n  defaultValue: Country = {\r\n    name: 'Deutschland',\r\n    alpha2Code: 'DE',\r\n    alpha3Code: 'DEU',\r\n    numericCode: '276',\r\n    callingCode: '+49'\r\n  };\r\n  chequeWithrwResponse: any;\r\n  phoneNumber: string;\r\n  accountBal: any;\r\n  errorStatus: any;\r\n  custAccountData: any;\r\n  countryValues: any;\r\n  accounttypeArray = [];\r\n  idList = [];\r\n  noList: any[];\r\n  accNum: any;\r\n  tokenObjects = new TokenObjects();\r\n  accNumber: any;\r\n  tokResponse: any;\r\n  tokenNum: any;\r\n  estimatedTime: any;\r\n  isedit: boolean = true;\r\n  transAmt: any;\r\n  balance: string;\r\n  enableContinue: boolean = true;\r\n  curr: string;\r\n  transAmount: string;\r\n  currencyImage: any = \"\";\r\n  custID: any;\r\n  qrData: any;\r\n  userName: string;\r\n  customerID: any;\r\n  showAccountNum : boolean = true;\r\n  showAccoutType : boolean = true;\r\n  custValidation: string;\r\n  accountNumber: string;\r\n  custmerID: any;\r\n  phonenum: any;\r\n  appointmentId:any;\r\n  oTpModel = new otpModel();\r\n  denomCodeArray: any[] = [\r\n    { key: 'count2000', value: 2000 },\r\n    { key: 'count500', value: 500 },\r\n    { key: 'count200', value: 200 },\r\n    { key: 'count100', value: 100 },\r\n    { key: 'count50', value: 50 },\r\n    { key: 'count20', value: 20 },\r\n    { key: 'count10', value: 10 },\r\n    { key: 'count1', value: 1 }\r\n\r\n  ];\r\n  totalAmount: any;\r\n  transamount: any;\r\n  a: any;\r\n  branchNameFromLogin: string;\r\n  branchName: string;\r\n  arrayAccountBranch: any;\r\n  branchData: any;\r\n  trasactionBranches: any;\r\n  branch: any;\r\n  hideDetails:boolean=false;\r\n  custNameFromLogin: string;\r\n  @ViewChild('cdForm') cdForm: NgForm;\r\n  // accountNoList: any[];\r\n  accountNoList = [];\r\n  selectedAccountInfo: any;\r\n  chequewithdrawValues: any;\r\n  chequewithdrawtype: any;\r\n  chequewithdrawform: any;\r\n  enableBtn: boolean = true;\r\n  enableBtn1: boolean = false;\r\n  accountNum1: any[];\r\n  filteredAccoun: any[];\r\n  accountDropdown: boolean = false;\r\n  flag1:boolean=false;\r\n  denomRequired: any;\r\n  qrBranchCode: any;\r\n  totalTransAmount: number;\r\n  chargeDetails: any;\r\n  cashData: any;\r\n  accountCurrency: any;\r\n  transBranch: string;\r\n\r\n  constructor(private router: Router,\r\n    private toast: ToastrComponent,\r\n    private formBuilder: FormBuilder,\r\n    private dialogService: DialogService,\r\n    private apiService: ApiService,private dialog: MatDialog,\r\n    private cdr:ChangeDetectorRef,\r\n    private ls: LocalStoreService, private snack: MatSnackBar, private changeDef: ChangeDetectorRef) { }\r\n  ngOnInit() {\r\n    this.phoneNumber = localStorage.getItem(\"phonenumFromLogin\");\r\n    this.appointmentId = this.ls.getItem(\"TransactionType\");\r\n    this.transBranch=localStorage.getItem(\"TRANSACTIONBRANCH\") ;\r\n    this.qrData = JSON.parse(JSON.parse(localStorage.getItem('scannerData')));\r\n    console.log(\"QRData\", this.qrData);\r\n    this.custValidation = localStorage.getItem(\"customerValidation\");\r\n    this.custNameFromLogin = localStorage.getItem(\"FromLogin\");\r\n    if(this.custValidation == \"New Customer\"){\r\n      this.showAccountNum = false;\r\n      this.showAccoutType = false;\r\n    }\r\n    if(this.custNameFromLogin!=null){\r\n      this.showAccountNum=false;\r\n    } \r\n    this.chequewithdrawForm = this.formBuilder.group({\r\n      transactionId: ['', [Validators.required]],\r\n      chequeNumber: ['', [Validators.required]],\r\n      customerId: ['', [Validators.required]],\r\n      accountNumber: ['', [Validators.required]],\r\n      accountType: ['', [Validators.required]],\r\n      holderName: ['', [Validators.required]],\r\n      accountCurrency: ['', [Validators.required]],\r\n      totalAmount: ['', Validators.required],\r\n      transactionCurrency: ['', [Validators.required]],\r\n      transactionAmount: ['', [Validators.required, Validators.min(.1)]],\r\n      accountBalance: [''],\r\n      productCode: ['CQW', [Validators.required]],\r\n      tokenOrigin: ['Kiosk', [Validators.required]],\r\n      totalChargeAmount:['', [Validators.required]],\r\n      totalTransactionAmount:['',[Validators.required]],\r\n\r\n      // audit\r\n      createdBy: ['', [Validators.required]],\r\n      createdTime: ['', [Validators.required]],\r\n      modifiedBy: ['', [Validators.required]],\r\n      modifiedTime: ['', [Validators.required]],\r\n      recordStatus: ['', [Validators.required]],\r\n      authStatus: ['', [Validators.required]],\r\n      version: ['', [Validators.required]],\r\n      accountBranch: ['', [Validators.required]],\r\n      transactionBranch:['', [Validators.required]]\r\n\r\n    })\r\n    console.log(this.chequewithdrawForm.value);\r\n\r\n    if (this.phoneNumber && this.custNameFromLogin==null && this.appointmentId==null) {\r\n      this.ifQRvariable = false;\r\n      this.gettingallTansactionDetails(this.phoneNumber);\r\n    }\r\n    // else {\r\n      if(this.qrData!=null){\r\n      this.ifQRvariable = true;\r\n      console.log(\"Account\", this.qrData.accountId);\r\n      this.chequewithdrawForm.controls.holderName.setValue(this.qrData.holderName);\r\n      this.chequewithdrawForm.controls.accountType.setValue(this.qrData.accountType);\r\n      this.chequewithdrawForm.controls.accountNumber.setValue(this.qrData.accountId);\r\n      this.getChargeDetails(this.qrData.accountId,'');\r\n      this.chequewithdrawForm.controls.transactionAmount.setValue(this.qrData.transactionAmount);\r\n      this.chequewithdrawForm.controls.accountCurrency.setValue(this.qrData.accountCurrency);\r\n      this.chequewithdrawForm.controls.transactionCurrency.setValue(this.qrData.transactionCurrency);\r\n      this.accountBal = this.qrData.accountBalance;\r\n      this.customerID = this.qrData.customerId;\r\n      this.currencyImage = 'currency-flag-' + this.qrData.accountCurrency.toLowerCase();\r\n      this.currencyImage = 'currency-flag-' + this.qrData.transactionCurrency.toLowerCase();\r\n      this.chequewithdrawForm.controls.transactionBranch.setValue(this.qrData.transactionBranch);\r\n      if(this.qrData.transactionBranch !=null && this.qrData.transactionBranch !=''){\r\n        this.chequewithdrawForm.controls.transactionBranch.setValue(this.qrData.transactionBranch);\r\n      }else{\r\n        this.chequewithdrawForm.controls.transactionBranch.setValue('Kasturi Nagar');\r\n      }\r\n      this.getAccountBranch();\r\n    }\r\n    this.getCountrynameValues();\r\n    this.getAccountBranch();\r\n    this.gettransactionBranch(\"account_branch\");\r\n    this.getBankInformation(\"KN\");\r\n    if(this.appointmentId.data.appointmentId){\r\n      this.cashWithdrawlData();\r\n    }\r\n  }\r\n  fetchByAccountNum(accNum){\r\n    this.chequewithdrawForm.controls.transactionAmount.reset();\r\n    this.chequewithdrawForm.controls.totalTransactionAmount.setValue(this.chequewithdrawForm.controls.totalChargeAmount.value);\r\n    this.chequewithdrawForm.controls.chequeNumber.reset();\r\n    console.log(\"Account Numebr\",accNum);\r\n    this.apiService.fetchByaccNum(accNum).subscribe((res: any) => {\r\n      console.log('Account Number Rsp', res);\r\n      this.getChargeDetails(accNum,'');\r\n      this.userName = res.accHolderName;\r\n      this.accountBal = res.accBalance;\r\n      this.custmerID = res.customerId;\r\n      this.accountNumber = res.accountId;\r\n      this.accountCurrency = res.accountCurrency;\r\n      this.curr = getCurrencySymbol(res.currency, \"narrow\");\r\n      this.chequewithdrawForm.controls.accountType.setValue(res.accountType);\r\n      this.chequewithdrawForm.controls.accountCurrency.setValue(res.currency);\r\n      this.chequewithdrawForm.controls.accountBranch.setValue(res.accountBranch);\r\n      this.chequewithdrawForm.controls.holderName.setValue(this.userName); \r\n      this.currencyImage = 'currency-flag-'+res.currency.toLowerCase();\r\n      this.currencyImage = 'currency-flag-'+res.currency.toLowerCase();\r\n      this.getCountrynameValues();\r\n      this.chequewithdrawForm.controls.transactionCurrency.setValue(res.currency);\r\n      this.custAmountBal(accNum);\r\n      this.chequewithdrawForm.controls.transactionBranch.setValue('Kasturi Nagar');\r\n      this.apiService.fetchByaccDeatilsoncustId(res.customerId).subscribe((resp: any) => {\r\n        this.phonenum = resp[0].phoneNumber;\r\n        localStorage.setItem('otpPhoneNum', this.phonenum);\r\n      }) \r\n  });\r\n\r\n}\r\ngetOTP(formData, type, cdForm){\r\n  this.chequewithdrawValues =formData;\r\n  this.chequewithdrawtype = type;\r\n  this.chequewithdrawform = cdForm;\r\n  this.oTpModel.source = 'customer';\r\n  this.oTpModel.source_key = 'mobile';\r\n  this.oTpModel.source_value = this.phonenum;\r\n\r\n  let amount= 50000;\r\n  let transamountwithoutcomma=this.chequewithdrawValues.transactionAmount.replace(/,/g, \"\");\r\n  console.log( transamountwithoutcomma);\r\n  if(transamountwithoutcomma > amount){\r\n    this.apiService.getOtp(this.oTpModel).subscribe(otpResp => {\r\n      if (otpResp) {\r\n        this.openDialogOTP(this.phonenum);\r\n        this.snack.open(\"An OTP has been sent to the Registered Mobile Number.\" , \"\", {\r\n          duration: 4000,\r\n          verticalPosition: 'top',\r\n          horizontalPosition: 'right'\r\n        });\r\n      }\r\n    })\r\n  }\r\n  else{\r\n    this.getOTPforSave(   this.chequewithdrawValues,this.chequewithdrawtype,\r\n      this.chequewithdrawform);  }\r\n}\r\nopenDialogOTP(numbr) {\r\n  const dialogRef = this.dialog.open(OtpVerifyComponent, {\r\n    data: { number: numbr, type: \"numbr\" },\r\n    disableClose: true,\r\n  });\r\n  dialogRef.afterClosed().subscribe(submit => {\r\n    if(submit){\r\n      this.getOTPforSave(   this.chequewithdrawValues,this.chequewithdrawtype,\r\n        this.chequewithdrawform);\r\n    }\r\n   });\r\n}\r\ngetOTPforSave(formData, type, cdForm){\r\n  formData.transactionBranch = this.transBranch;\r\n  let denominationData: any = {};\r\n  let denominationDataArray: any[] = [];\r\n  if(this.denomRequired == 'yes'){\r\n  for (let i = 0; i < this.denomCodeArray.length; i++) {\r\n    if (cdForm.value[this.denomCodeArray[i].key]) {\r\n      // denominationData.transactionId = this.cashdepositFor;\r\n      denominationData.denominationKey = this.denomCodeArray[i].value;\r\n      denominationData.denominationValue = +cdForm.value[this.denomCodeArray[i].key];\r\n      denominationData.currency = this.chequewithdrawForm.value.transactionCurrency;\r\n      // denominationData.amountAvailiable = 15200 - (cdForm.value[this.denomCodeArray[i].key] * this.denomCodeArray[i].value);\r\n      denominationDataArray.push(denominationData);\r\n      console.log(denominationDataArray)\r\n      denominationData = {};\r\n    }\r\n  }\r\n}\r\n  if(this.custValidation == \"New Customer\"){\r\n    console.log(\"customer\",this.custmerID);\r\n   this.accountNum = formData.accountNumber;\r\n   formData.customerId = this.custmerID?this.custmerID:0;\r\n   formData.accountType = formData.accountType;\r\n   formData.accountNumber = this.accountNumber;\r\n   formData.holderName = formData.holderName;\r\n   formData.accountCurrency = formData.accountCurrency;\r\n   formData.transactionCurrency = formData.transactionCurrency;\r\n   formData.transactionAmount = formData.transactionAmount.replace(/,/g, '');\r\n   formData.productCode = this.productCode;\r\n   formData.tokenOrigin = this.tokenOrigin;\r\n   formData.accountBalance = this.accountBal;\r\n   if(this.denomRequired == 'yes'){\r\n   formData.denomination = denominationDataArray;\r\n   }\r\n  }\r\n  formData.tokenBranch = \"KN\";\r\n  if(this.appointmentId && this.appointmentId.data){\r\n    formData.transactionId = this.appointmentId.data.transactionId;\r\n    formData.transactionStatus = this.appointmentId.data.transactionStatus;\r\n  }\r\n  formData.customerId = this.custmerID?this.custmerID:0;\r\n  formData.accountType = formData.accountType;\r\n  formData.accountNumber = this.accountNumber;\r\n  formData.holderName = formData.holderName;\r\n  formData.accountCurrency = formData.accountCurrency;\r\n  formData.transactionCurrency = formData.transactionCurrency;\r\n  formData.transactionAmount = formData.transactionAmount.replace(/,/g, '');\r\n  formData.productCode = this.productCode;\r\n  formData.tokenOrigin = this.tokenOrigin;\r\n  formData.accountBalance = this.accountBal;\r\n  this.apiService.saveofCashDeposit(formData).subscribe((resp) => {\r\n    console.log('Response Success', resp);\r\n    this.chequeWithrwResponse = resp;\r\n    this.tokenNum = this.chequeWithrwResponse.tokenNumber;\r\n    this.estimatedTime = this.chequeWithrwResponse.estimatedWaitTime;\r\n    localStorage.setItem(\"tokenNumer\", this.tokenNum);\r\n    localStorage.setItem(\"estimatedTiming\", this.estimatedTime);\r\n    this.enableContinue = false;\r\n    if (this.chequeWithrwResponse) {\r\n      this.dialogService.tokenGenerationDialog();\r\n    }\r\n  }); \r\n}\r\n  _keyPress(event: any) {\r\n    const pattern = /[0-9 a-z A-Z]/;\r\n    let inputChar = String.fromCharCode(event.charCode);\r\n    if (!pattern.test(inputChar)) {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n  gettransactionBranch(key: string) {\r\n    this.apiService.getTransactionBranch(key)\r\n      .subscribe(branches => {\r\n        console.log('branches :: ', branches);\r\n        this.trasactionBranches = branches;\r\n       \r\n      })\r\n  }\r\n  getAccountBranch() {\r\n    this.apiService.getBranchforKiosk()\r\n      .subscribe((data: any) => {\r\n        this.branchData = data;\r\n          console.log( this.branchData);\r\n          data.forEach((element,index)=>{\r\n            this.branch = data[index].branchName;\r\n            console.log(this.branch);\r\n            // this.chequewithdrawForm.controls.accountBranch.setValue(this.branch);\r\n         });      \r\n      });\r\n  }\r\n  getCountrynameValues() {\r\n    this.apiService.getCountryValues().subscribe((allCountryValues: any) => {\r\n      this.countryValues = allCountryValues;\r\n    });\r\n  }\r\n \r\n  onCountrySelected($event: Country): void {\r\n    console.log($event);\r\n  }\r\n  goToServiceScreens() {\r\n    if(this.appointmentId){\r\n    if(this.appointmentId.data.appointmentId){\r\n      this.router.navigateByUrl('/sessions/login');\r\n      localStorage.removeItem(\"FromLogin\")\r\n      localStorage.removeItem(\"TransactionType\")\r\n      localStorage.removeItem(\"customerId\")\r\n      localStorage.removeItem(\"phonenumFromLogin\")\r\n      localStorage.removeItem(\"customerValidation\")\r\n      localStorage.removeItem(\"otpPhoneNum\")\r\n      localStorage.removeItem(\"AccountBal\")\r\n      localStorage.removeItem(\"AccountNumber\")\r\n      localStorage.removeItem(\"ProductCode\")\r\n      localStorage.removeItem(\"tokenNumer\")\r\n      localStorage.removeItem(\"estimatedTiming\")\r\n      localStorage.removeItem(\"userId\")\r\n      localStorage.removeItem(\"scannerData\")\r\n      localStorage.removeItem(\"custholderName\")\r\n    }\r\n  }\r\n    else{\r\n      this.router.navigateByUrl('/others/services');\r\n    }\r\n  }\r\n  goToAuthenticate() {\r\n    this.dialogService.authenticationDialog();\r\n  }\r\n  gettingallTansactionDetails(phoneNumber) {\r\n    this.phoneNumber = localStorage.getItem(\"phonenumFromLogin\");\r\n    this.apiService.gettingTransactionDetails(this.phoneNumber).subscribe((allTransactionResp: any) => {\r\n      console.log(\"All Transaction Details\", allTransactionResp);\r\n      this.userName = (allTransactionResp.firstName ? allTransactionResp.firstName + ' ' : ' ') +\r\n        (allTransactionResp.middleName ? allTransactionResp.middleName + ' ' : ' ') +\r\n        (allTransactionResp.lastName ? allTransactionResp.lastName : ' ');\r\n      this.chequewithdrawForm.controls.holderName.setValue(this.userName);\r\n      this.custID = allTransactionResp.customerId;\r\n      // this.setBalance(allTransactionResp.custAccount);\r\n      this.custAccountData = allTransactionResp.custAccount;\r\n      this.accounttypeArray = [...this.custAccountData].filter(({ accountType }, index) =>\r\n        ![...this.custAccountData].map(obj => obj.accountType).includes(accountType, index + 1))\r\n        for(let j = 0; j < this.custAccountData.length; j++){\r\n          if(this.custAccountData[j].status == 'APPROVED'){\r\n            this.accountNoList.push(this.custAccountData[j]);  \r\n          }\r\n        }\r\n      if(this.custAccountData && this.accountNoList.length<=1){\r\n        this.accountDropdown=false;\r\n        this.hideDetails=true;\r\n        const accTyp = allTransactionResp.custAccount[0].accountType;\r\n        this.chequewithdrawForm.controls.accountType.setValue(accTyp);\r\n        this.custAccountNumber(this.accountNoList[0]);\r\n      }\r\n      else{\r\n        this.accountDropdown=true;\r\n        this.hideDetails=true;\r\n        const accTyp = allTransactionResp.custAccount[0].accountType;\r\n        this.chequewithdrawForm.controls.accountType.setValue(accTyp);\r\n        this.custAccountNumber(allTransactionResp.custAccount[0]);\r\n      }\r\n    });\r\n  }\r\n  getAccountType(event:any){\r\n    this.chequewithdrawForm.controls.transactionAmount.reset();\r\n    this.chequewithdrawForm.controls.totalTransactionAmount.setValue(this.chequewithdrawForm.controls.totalChargeAmount.value);\r\n    this.chequewithdrawForm.controls.chequeNumber.reset();\r\n    this.accountNoList=[];\r\n    console.log(event);\r\n    this.isedit=false;\r\n    this.accountNum1=[...this.custAccountData].filter((accounNum,index)=>{\r\n      return accounNum.accountType==event;\r\n    });console.log(this.accountNum1)\r\n    // this.accountNoList=this.accountNum1\r\n    // this.accountNoList=this.accountNum1.map((acccount)=>\r\n    // {\r\n    //   return acccount.accountId\r\n    // })\r\n    for(let i = 0; i < this.custAccountData.length; i++){\r\n      if(this.custAccountData[i].status == 'APPROVED' && this.custAccountData[i].accountType == event){\r\n        this.accountNoList.push(this.custAccountData[i].accountId);    \r\n      }\r\n    }\r\n    console.log(this.accountNoList);\r\n    if(this.accountNoList.length<=1){\r\n      this.flag1=false; \r\n      this.chequewithdrawForm.controls.accountNumber.setValue(this.accountNoList[0]);\r\n      this.getData(this.accountNoList[0])   \r\n    }\r\n    else{\r\n      this.getData(this.accountNoList[0])  \r\n      this.flag1=true;   \r\n    }\r\n    this.getChargeDetails(this.accountNoList[0],'');\r\n  }\r\n  getData(custNum){\r\n    this.hideDetails=true;\r\n    console.log(custNum)\r\n    let val=this.accountNum1.filter((value)=>{\r\n    return value.accountId==custNum}\r\n    )\r\n    console.log(val)\r\n    this.idList = [...this.custAccountData].filter(item => item.accountType === val[0].accountType);\r\n    this.chequewithdrawForm.controls.accountCurrency.setValue(val[0].accountCurrency);\r\n   this.chequewithdrawForm.controls.accountBranch.setValue(this.branch);\r\n   this.curr = getCurrencySymbol(val[0].accountCurrency, \"narrow\");\r\n   this.chequewithdrawForm.controls.transactionCurrency.setValue(val[0].accountCurrency);\r\n  \r\n   this.currencyImage = 'currency-flag-'+val[0].accountCurrency.toLowerCase();\r\n   console.log('data :: ',this.idList[0]);\r\n  this.accountBal = this.idList[0].amount;\r\n  console.log(this.accountBal);\r\n  localStorage.setItem(\"AccountBal\",this.accountBal);\r\n  // this.chequewithdrawForm.controls.accountNumber.setValue(this.idList[0].accountId);\r\n  this.custAmountBal(this.idList[0].accountId);\r\n  this.chequewithdrawForm.controls.accountNumber.setValue(val[0].accountId);\r\n  this.chequewithdrawForm.controls.accountBranch.setValue(val[0].accountBranch);\r\n  this.getChargeDetails(val[0].accountId,'')\r\n  }\r\n  custAccountNumber(custype) {\r\n    this.isedit = false;\r\n    this.idList = [...this.custAccountData].filter(item => item.accountType === custype.accountType);\r\n    // const defaultId = this.idList ? this.idList[0] : null;\r\n\r\n    this.accountNoList = [];\r\n    for(let i = 0; i < this.idList.length; i++){\r\n       if(this.idList[i].status == 'APPROVED'){\r\n         this.accountNoList.push(this.idList[i].accountId)    \r\n       }\r\n     }\r\n     console.log(this.accountNoList);\r\n     if(this.accountNoList.length<=1){\r\n      // this.cashwithdrawForm.controls.accountNumber.patchValue(this.accountNoList[0]);\r\n      this.flag1=false; \r\n      // this.getData(this.accountNoList[0]);\r\n      this.chequewithdrawForm.controls.accountNumber.setValue(this.accountNoList[0]);\r\n    }\r\n    else{\r\n      this.chequewithdrawForm.controls.accountNumber.setValue(this.accountNoList[0]);\r\n      this.flag1=true;   \r\n    }\r\n    \r\n    // this.chequewithdrawForm.controls.accountNumber.setValue(defaultId);\r\n    this.chequewithdrawForm.controls.accountCurrency.setValue(custype.accountCurrency);\r\n    this.chequewithdrawForm.controls.accountBranch.setValue(this.branch);\r\n    //this.chequewithdrawForm.controls.transactionAmount.setValue(custype.amount);\r\n    this.curr = getCurrencySymbol(custype.accountCurrency, \"narrow\");\r\n    this.chequewithdrawForm.controls.transactionCurrency.setValue(custype.accountCurrency);\r\n    // this.chequewithdrawForm.controls.accountType.setValue(defaultId);\r\n\r\n    this.currencyImage = 'currency-flag-' + custype.accountCurrency.toLowerCase();\r\n    // this.accountBal = this.idList[0].amount;\r\n\r\n    console.log(this.accountBal);\r\n    localStorage.setItem(\"AccountBal\", this.accountBal);\r\n    // this.chequewithdrawForm.controls.accountNumber.setValue(this.idList[0].accountId);\r\n    this.custAmountBal(this.accountNoList[0]);\r\n    this.chequewithdrawForm.controls.accountBranch.setValue(custype.accountBranch);\r\n    this.getChargeDetails(this.accountNoList[0],custype.amount);\r\n  }\r\n  custAmountBal(custNum) {\r\n    console.log(custNum);\r\n    var account = this.idList.filter(function (record) {\r\n      if (record.accountId == custNum) {\r\n        return record;\r\n      }\r\n    });\r\n    this.accNum = account[0].accountId;\r\n    this.accountBal = account[0].amount;\r\n    this.selectedAccountInfo = account[0];\r\n  }\r\n  setBalance(accountBalance, index = 0) {\r\n    this.accountBal = accountBalance[index].currentBalance ? accountBalance[index].currentBalance : null;\r\n  }\r\n  onSaveofChequeWithdraw(form, type, cdForm) {\r\n    form.transactionBranch = this.transBranch;\r\n    let denominationData: any = {};\r\n    let denominationDataArray: any[] = [];\r\n    if(this.qrData){\r\n      if(this.qrData.transactionBranch){\r\n        this.apiService.fetchBranchInfoByBranchName(this.qrData.transactionBranch).subscribe(response=>{\r\n          this.qrBranchCode=response;\r\n          \r\n        })\r\n      }\r\n    }\r\n    if(this.denomRequired == 'yes'){\r\n    for (let i = 0; i < this.denomCodeArray.length; i++) {\r\n      if (cdForm.value[this.denomCodeArray[i].key]) {\r\n        // denominationData.transactionId = this.cashdepositFor;\r\n        denominationData.denominationKey = this.denomCodeArray[i].value;\r\n        denominationData.denominationValue = +cdForm.value[this.denomCodeArray[i].key];\r\n        denominationData.currency = this.chequewithdrawForm.value.transactionCurrency;\r\n        // denominationData.amountAvailiable = 15200 - (cdForm.value[this.denomCodeArray[i].key] * this.denomCodeArray[i].value);\r\n        denominationDataArray.push(denominationData);\r\n        console.log(denominationDataArray)\r\n        denominationData = {};\r\n      }\r\n    }\r\n  }\r\n    form.tokenBranch = \"KN\";\r\n    console.log(\"onSaveofChequeWithdraw\", form);\r\n    if (!this.ifQRvariable) {\r\n      this.accountNum = JSON.stringify( this.selectedAccountInfo.accountId);\r\n      localStorage.setItem(\"AccountNumber\", this.accountNum);\r\n      localStorage.setItem(\"ProductCode\", this.productCode);\r\n      form.customerId = this.custID;\r\n      form.transactionCurrency = form.transactionCurrency;\r\n      form.transactionAmount = form.transactionAmount.replace(/,/g, '');\r\n      form.accountNumber =  this.selectedAccountInfo.accountId;\r\n      form.accountType = form.accountType;\r\n      form.productCode = this.productCode;\r\n      form.tokenOrigin = this.tokenOrigin;\r\n      form.accountBalance = this.accountBal;\r\n      if(this.denomRequired == 'yes'){\r\n      form.denomination = denominationDataArray;\r\n      }\r\n    }\r\n    else {\r\n      form.customerId = this.custID;\r\n      form.accountType = form.accountType;\r\n      form.accountNumber =  form.accountNumber\r\n      form.holderName = form.holderName;\r\n      form.accountCurrency = form.accountCurrency;\r\n      form.transactionCurrency = form.transactionCurrency;\r\n      form.transactionAmount = form.transactionAmount;\r\n      form.productCode = this.productCode;\r\n      form.tokenOrigin = this.tokenOrigin;\r\n      form.accountBalance = this.accountBal;\r\n      if(this.denomRequired == 'yes'){\r\n      form.denomination = denominationDataArray;\r\n      }\r\n    }\r\n    if(this.qrData){\r\n      if(this.qrData.transactionBranch){\r\n        form.tokenBranch = this.qrBranchCode.transactionBranch;\r\n      }\r\n    }\r\n    console.log(\"this.appointmentId::\",this.appointmentId)\r\n    if(this.appointmentId && this.appointmentId.data){\r\n      form.transactionId = this.appointmentId.data.transactionId;\r\n      form.transactionStatus = this.appointmentId.data.transactionStatus;\r\n    }\r\n\r\n\r\n    console.log(form.transactionId,form.transactionStatus);\r\n\r\n    form.totalAmount = form.totalAmount.replace(/,/g, '');\r\n\r\n    this.apiService.saveofCashDeposit(form).subscribe((resp) => {\r\n      console.log('Response Success', resp);\r\n      this.chequeWithrwResponse = resp;\r\n      this.tokenNum = this.chequeWithrwResponse.tokenNumber;\r\n      this.estimatedTime = this.chequeWithrwResponse.estimatedWaitTime;\r\n      localStorage.setItem(\"tokenNumer\", this.tokenNum);\r\n      localStorage.setItem(\"estimatedTiming\", this.estimatedTime);\r\n      this.enableContinue = false;\r\n      if (this.chequeWithrwResponse) {\r\n        this.dialogService.tokenGenerationDialog();\r\n      }\r\n    });\r\n\r\n\r\n  }\r\n  omit_number(event) {\r\n    var key;\r\n    key = event.charCode;\r\n    return ((key > 47 && key < 58));\r\n  }\r\n  totalAmountValue(cdForm) {\r\n    this.a = this.chequewithdrawForm.value.transactionAmount;\r\n    this.a = this.a.replace(/\\,/g, ''); // 1125, but a string, so convert it to number\r\n    this.a = parseInt(this.a, 10);\r\n\r\n\r\n    this.chequewithdrawForm.value.totalAmount =\r\n      ((cdForm.value.count2000 ? cdForm.value.count2000 * 2000 : 0) +\r\n        (cdForm.value.count500 ? cdForm.value.count500 * 500 : 0) +\r\n        (cdForm.value.count200 ? cdForm.value.count200 * 200 : 0) +\r\n        (cdForm.value.count100 ? cdForm.value.count100 * 100 : 0) +\r\n        (cdForm.value.count50 ? cdForm.value.count50 * 50 : 0) +\r\n        (cdForm.value.count20 ? cdForm.value.count20 * 20 : 0) +\r\n        (cdForm.value.count10 ? cdForm.value.count10 * 10 : 0) +\r\n        (cdForm.value.count1 ? cdForm.value.count1 * 1 : 0)\r\n      );\r\n    this.chequewithdrawForm.value.totalAmount = this.chequewithdrawForm.value.totalAmount\r\n    console.log(this.chequewithdrawForm.value.totalAmount)\r\n    console.log(this.chequewithdrawForm.value.transactionAmount);\r\n    this.transamount = this.chequewithdrawForm.value.transactionAmount;\r\n    this.totalAmount = this.chequewithdrawForm.value.totalAmount.toLocaleString(\"en-US\");\r\n    if(this.transamount != this.totalAmount){\r\n      this.enableBtn = false;\r\n    }\r\n    else{\r\n      this.enableBtn = true;\r\n    }\r\n\r\n    if((this.transamount > this.totalAmount) || (this.transamount < this.totalAmount)){\r\n      this.enableBtn1 = true;\r\n    }\r\n    else{\r\n      this.enableBtn1 = false;\r\n    }\r\n    this.chequewithdrawForm.controls.totalAmount.setValue(this.chequewithdrawForm.value.totalAmount);\r\n\r\n  }\r\n  OnInput(event: any) {\r\n    this.transAmt = event.target.value;\r\n    console.log(event.target.value);\r\n    this.totalAmount = 0;\r\n    // comma separator using changeDetector\r\n    const savedInput = this.transAmount;\r\n    // this.transAmount = '';\r\n    // this.changeDef.detectChanges();\r\n\r\n\r\n    let lastCharIsPoint = false;\r\n    if (savedInput.charAt(savedInput.length - 1) === '.') {\r\n      lastCharIsPoint = true;\r\n    }\r\n    const num = savedInput.replace(/[^0-9.]/g, '');\r\n\r\n    this.transAmt = Number(num)||'';\r\n    this.transAmount = this.transAmt.toLocaleString('en-IN');\r\n    if (lastCharIsPoint) {\r\n      this.transAmount = this.transAmount.concat('.');\r\n    }\r\n    this.changeDef.detectChanges();\r\n\r\n    this.balance = localStorage.getItem(\"AccountBal\");\r\n    if (parseFloat(this.balance) < parseFloat(this.transAmt)) {\r\n      console.log(\"Bigger\")\r\n      this.snack.open(`Transaction Amount should not exceed than Account Balance`, 'OK', {\r\n        duration: 2000,\r\n        verticalPosition: 'top',\r\n        horizontalPosition: 'right'\r\n      });\r\n      this.enableContinue = false;\r\n    }\r\n    else {\r\n      this.enableContinue = true;\r\n    }\r\n    this.totalTransAmount=Number(this.transAmt) + Number(this.chargeDetails?this.chargeDetails[0].amount:'');\r\n    this.chequewithdrawForm.controls.totalTransactionAmount.setValue(this.totalTransAmount);\r\n    this.cdr.markForCheck();\r\n    this.cdr.detectChanges();\r\n  }\r\n\r\n  addCurrencyImage(currency) {\r\n    return currency.toLowerCase();\r\n  }\r\n\r\n  onCountryChange(country) {\r\n    let currency = country.currencyCode;\r\n    this.currencyImage = 'currency-flag-' + currency.toLowerCase();\r\n  }\r\n\r\n  accountCurrencyImage(accountCurrency) {\r\n    return accountCurrency ? 'currency-flag-' + accountCurrency.toLowerCase() : '';\r\n  }\r\n\r\n\r\n  clicked(event) {\r\n    console.log(event);\r\n  }\r\n  getBankInformation(branchCode:any){\r\n    this.apiService.fetchBankInfoByBranchCode(branchCode).subscribe(resp => {\r\n      console.log(resp)\r\n      this.denomRequired = resp.denomRequired\r\n      if(resp.denomRequired == 'yes'){\r\n        this.enableBtn = false;\r\n        this.enableBtn1 = false;\r\n       }\r\n      \r\n    })\r\n  }\r\n\r\nformatAmount(amount) {\r\n  if(amount){\r\n    return amount && amount.toString().split('.')[0].length > 3 ? amount.toString().substring(0,amount.toString().split('.')[0].length-3).replace(/\\B(?=(\\d{2})+(?!\\d))/g, \",\") + \",\" + amount.toString().substring(amount.toString().split('.')[0].length-3): amount.toString();\r\n   }\r\n  }\r\n  cashWithdrawlData(){\r\n    this.apiService.getAppointmentId(this.appointmentId.data.appointmentId).subscribe((resp : any)=> {\r\n      console.log(resp);\r\n      this.cashData=resp.data;\r\n      this.custID=resp.data.customerId;\r\n      this.ifQRvariable = true;\r\n      this.chequewithdrawForm.controls.accountType.setValue(resp.data.accountType);\r\n      this.chequewithdrawForm.controls.accountBranch.setValue(resp.data.accountBranch);\r\n      this.chequewithdrawForm.controls.accountNumber.setValue(resp.data.accountNumber);\r\n      this.chequewithdrawForm.controls.chequeNumber.setValue(resp.data.chequeNumber);\r\n      this.getChargeDetails(resp.data.accountNumber,resp.data.transactionAmount);\r\n      this.chequewithdrawForm.controls.accountCurrency.setValue(resp.data.accountCurrency);\r\n      this.chequewithdrawForm.controls.transactionCurrency.setValue(resp.data.transactionCurrency);\r\n      this.chequewithdrawForm.controls.transactionAmount.setValue(resp.data.transactionAmount);\r\n    \r\n      this.currencyImage = 'currency-flag-'+resp.data.transactionCurrency.toLowerCase();\r\n      this.currencyImage = 'currency-flag-'+resp.data.accountCurrency.toLowerCase();\r\n  \r\n  \r\n    });\r\n  }\r\n  getChargeDetails(accountId,amount){\r\n    this.apiService.fetchChargeDetails(accountId).subscribe(resp => {\r\n  console.log(resp);\r\n  this.chargeDetails=resp;\r\n  this.chequewithdrawForm.controls.totalChargeAmount.setValue(this.chargeDetails?this.chargeDetails[0].amount:'');\r\n    });\r\n    if(this.cashData){\r\n    setTimeout(() => {\r\n      this.totalTransAmount=Number(this.cashData.transactionAmount) + Number(this.chargeDetails?this.chargeDetails[0].amount:'');\r\n      this.chequewithdrawForm.controls.totalTransactionAmount.setValue(this.totalTransAmount);\r\n    }, 1000);\r\n    this.cdr.markForCheck();\r\n    this.cdr.detectChanges();\r\n  }\r\n  else{\r\n    console.log(this.chargeDetails)\r\n    amount=0;\r\n    console.log(amount);\r\n    setTimeout(() => {\r\n      this.totalTransAmount=Number(amount) + Number(this.chargeDetails?this.chargeDetails[0].amount:'');\r\n      console.log(this.totalTransAmount);\r\n      this.chequewithdrawForm.controls.totalTransactionAmount.setValue(this.totalTransAmount);\r\n    }, 1000);\r\n    this.cdr.markForCheck();\r\n    this.cdr.detectChanges();\r\n  }\r\n\r\n    // console.log(this.totalTransAmount);\r\n  \r\n  }\r\n\r\n\r\n}","<div class=\"fullcard\">\r\n    <div fxLayout=\"row\">\r\n        <div fxFlex=\"chequewithdrawForm.get('transactionAmount').value > 0? 70% : 100%\">\r\n            <h6 class=\"h1\"><span style=\"color:grey;padding-right: 4px;\">Services</span> <b>></b> <span style=\"padding-left: 4px;\"><b>Cheque Withdrawal</b></span></h6>\r\n            <mat-card class=\"chequecard topView\">\r\n                <mat-card-title style=\"padding: 2%;\">\r\n                    <div fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n                        <div>\r\n                            <mat-icon  *ngIf=\"phoneNumber\" class=\"backIcon\" (click)=\"goToServiceScreens()\">keyboard_backspace</mat-icon>\r\n                        </div>&nbsp;&nbsp;\r\n                        <div class=\"card-title\">Cheque Withdrawal</div>\r\n                    </div>\r\n                </mat-card-title>\r\n                <mat-card-content>\r\n                    <div class=\"full-width\" style=\"padding: 0% 0% 3% 2%;\">\r\n                        <form [formGroup]=\"chequewithdrawForm\">\r\n                            <div fxLayout=\"column\" fxLayoutGap=\"3%\" fxLayoutAlign=\"space-between none\">\r\n                                <div>\r\n                                    <div fxLayout=\"row wrap\" class=\"flex-container stretch\">\r\n                                        <ng-container>\r\n                                            <div fxFlex=\"25%\" fxFlex.xs=\"100%\" *ngIf=\"showAccountNum\" >\r\n                                                <mat-hint class=\"totalAmount\">Account Type*</mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                     <input matInput type=\"text\" *ngIf=\"phoneNumber && !accountDropdown\" [readonly]=\"true\" class=\"full-width\" formControlName=\"accountType\" >\r\n                                                     <mat-select *ngIf=\"phoneNumber && accountDropdown\" formControlName=\"accountType\" (selectionChange)=\"getAccountType($event.value)\"\r\n                                                        style=\"background-color: #f9fafb;\"\r\n                                                        placeholder=\"Select Account Type\">\r\n                                                        <mat-option *ngFor=\"let type of accounttypeArray \"\r\n                                                            \r\n                                                            [value]=\"type.accountType\">{{type.accountType}}</mat-option>\r\n                                                    </mat-select>\r\n                                                    <!-- <mat-select  *ngIf=\"phoneNumber  && !accountDropdown\" formControlName=\"accountType\" style=\"background-color: #f9fafb;\"  (selectionChange)=\"getAccountType($event.value)\" placeholder=\"Select Account Type\">\r\n                                                        <mat-option *ngFor=\"let type of accounttypeArray \"  (click)=\"custAccountNumber(type)\"  [value]=\"type.accountType\">{{type.accountType}}</mat-option>\r\n                                                    </mat-select> -->\r\n                                                    <!-- <input matInput type=\"text\"  [readonly]=\"true\" class=\"full-width\" formControlName=\"accountType\" > -->\r\n\r\n                                                </mat-card>\r\n                                            </div>\r\n                                            <div fxFlex=\"25%\" fxFlex.xs=\"100%\" *ngIf=\"!showAccountNum\" >\r\n                                                <mat-hint class=\"totalAmount\">Account Number*</mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <input matInput type=\"text\"  \r\n                                                        class=\"full-width\" formControlName=\"accountNumber\"\r\n                                                        (change)=\"fetchByAccountNum(chequewithdrawForm.get('accountNumber').value)\">\r\n                                                </mat-card>\r\n                                                    <!-- <mat-hint class=\"totalAmount\" *ngIf=\"!phoneNumber\" >Account Balance :{{curr }} {{accountBal | number: '2.' }}</mat-hint> -->\r\n                                                    <mat-hint class=\"totalAmount\" *ngIf=\"!showAccountNum\" >Account Balance\r\n                                                        : {{curr }}{{formatAmount(accountBal)}} </mat-hint>\r\n                                                    <br>\r\n                                                    <!-- <mat-hint  class=\"totalAmount\" *ngIf=\"!phoneNumber\"  [readonly]=\"true\"  formControlName=\"holderName\">Holder Name :{{userName}}</mat-hint> -->\r\n                                                    <mat-hint class=\"totalAmount\" *ngIf=\"!showAccountNum\" [readonly]=\"true\">\r\n                                                        Holder Name : {{userName}}</mat-hint>\r\n                                            </div>\r\n                                            <div fxFlex=\"25%\" fxFlex.xs=\"100%\" *ngIf=\"showAccountNum\">\r\n                                                <mat-hint class=\"totalAmount\">Account Number*</mat-hint>\r\n                                                <mat-card class=\"inputCard\" >\r\n                                                    <!-- <input matInput type=\"text\" *ngIf=\"!phoneNumber\"  [readonly]=\"true\" class=\"full-width\" formControlName=\"accountNumber\" > -->\r\n                                                    <input matInput type=\"text\" *ngIf=\"!flag1\"  [readonly]=\"true\" class=\"full-width\" formControlName=\"accountNumber\" >\r\n                                                    <!-- <mat-select *ngIf=\"phoneNumber\"  formControlName=\"accountNumber\" style=\"background-color: #f9fafb;\" > -->\r\n                                                        <mat-select *ngIf=\"flag1\" (selectionChange)=\"fetchByAccountNum($event.value)\" formControlName=\"accountNumber\" style=\"background-color: #f9fafb;\" >\r\n                                                        \r\n                                                            <mat-option>Select</mat-option>\r\n                                                            <mat-option  *ngFor=\"let id of accountNoList \"  [value]=\"id\">{{id}}</mat-option>\r\n                                                        \r\n                                                    </mat-select>\r\n                                                </mat-card>\r\n                                                <!-- <mat-hint class=\"totalAmount\" *ngIf=\"!phoneNumber\"  >Account Balance :{{curr }} {{accountBal | number: '2.' }}</mat-hint> -->\r\n                                                <mat-hint class=\"totalAmount\" *ngIf=\"hideDetails\" >Account Balance :{{curr }} {{formatAmount(accountBal)}}</mat-hint><br>\r\n                                                <mat-hint  class=\"totalAmount\"  *ngIf=\"hideDetails\" [readonly]=\"true\"  formControlName=\"holderName\">Holder Name :{{userName}}</mat-hint>\r\n                                            </div>\r\n                                            <div fxFlex=\"25%\" fxFlex.xs=\"100%\" *ngIf=\"!showAccountNum\" >\r\n                                                <mat-hint class=\"totalAmount\">Account Type*</mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <input matInput type=\"text\"  [readonly]=\"true\" \r\n                                                        class=\"full-width\" formControlName=\"accountType\">\r\n                                    \r\n                                                </mat-card>\r\n                                            </div>\r\n                                            <div fxFlex=\"25%\" fxFlex.xs=\"100%\">\r\n                                                <mat-hint class=\"accountBranch\">Account Branch*</mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <input matInput *ngIf=\"!phoneNumber\" type=\"text\"\r\n                                                    [readonly]=\"true\" class=\"full-width\"\r\n                                                    formControlName=\"accountBranch\">\r\n\r\n                                                <input matInput *ngIf=\"phoneNumber\" type=\"text\"\r\n                                                    [readonly]=\"true\" class=\"full-width\"\r\n                                                    formControlName=\"accountBranch\">\r\n                                                </mat-card>\r\n                                                <mat-error\r\n                                                    *ngIf=\"chequewithdrawForm.get('accountBranch').touched && !chequewithdrawForm.get('accountBranch').valid\">\r\n                                                    Account Branch is Required!\r\n                                                </mat-error>\r\n                                            </div>\r\n                                            <div fxFlex=\"25%\" fxFlex.xs=\"100%\">\r\n                                                <mat-hint class=\"totalAmount\">Account Currency*</mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <div fxLayout=\"row wrap\" class=\"full-width\">\r\n                                                        <div fxFlex=\"25%\">\r\n                                                            <div *ngIf=\"ifQRvariable\"\r\n                                                            class=\"currency-flag {{isedit?accountCurrencyImage(chequewithdrawForm.controls['accountCurrency'].value):currencyImage}}\"></div>\r\n                                                        <div *ngIf=\"!ifQRvariable\"\r\n                                                            class=\"currency-flag {{!isedit?accountCurrencyImage(chequewithdrawForm.controls['accountCurrency'].value):currencyImage}}\">\r\n                                                        </div>\r\n                                                        </div>\r\n                                                        <div fxFlex=\"75%\">\r\n                                                            <input matInput type=\"text\"  *ngIf=\"!phoneNumber\" [readonly]=\"true\" class=\"full-width\" style=\"font-size:110%\" formControlName=\"accountCurrency\">\r\n                                                            <input matInput type=\"text\"  *ngIf=\"phoneNumber\" [readonly]=\"true\" class=\"full-width\" style=\"font-size:110%\" formControlName=\"accountCurrency\">\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </mat-card>\r\n                                            </div>\r\n                                        </ng-container>\r\n                                    </div>\r\n                                </div>\r\n                                <div>\r\n                                    <div fxLayout=\"row wrap\" class=\"flex-container stretch\">\r\n                                        <ng-container>\r\n                                           \r\n                                            <div fxFlex=\"25%\" fxFlex.xs=\"100%\" *ngIf=\"showAccountNum\">\r\n                                                <mat-hint class=\"totalAmount\">Transaction Currency* </mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <div fxLayout=\"row wrap\" class=\"full-width\">\r\n                                                        <div fxFlex=\"30%\">\r\n                                                            <div class=\"currency-flag {{currencyImage}}\"></div>\r\n                                                        </div>\r\n                                                        <div fxFlex=\"70%\">\r\n                                                            <input matInput type=\"text\"  *ngIf=\"!phoneNumber\" [readonly]=\"true\" class=\"full-width\" formControlName=\"transactionCurrency\">\r\n                                                            <mat-select  *ngIf=\"phoneNumber\" formControlName=\"transactionCurrency\" placeholder=\"Select Transaction Currency\" id=\"testSelect\" style=\"background-color: #f9fafb;\" [disabled]=\"isedit\">\r\n                                                                <mat-option *ngFor=\"let country of countryValues; let i = index\" style=\"font-size:110%\" (click)=\"onCountryChange(country)\" [value]=\"country.currencyCode\">\r\n                                                                    <div fxLayout=\"row wrap\" class=\"full-width\">\r\n                                                                        <div fxFlex=\"15%\">{{country.currencyCode}}</div>\r\n                                                                        <div fxFlex=\"85%\">\r\n                                                                            <div class=\"currency-flag currency-flag-{{addCurrencyImage(country.currencyCode)}} alignImage\">\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </mat-option>\r\n                                                            </mat-select>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </mat-card>\r\n                                            </div>\r\n                                            <div fxFlex=\"25%\" fxFlex.xs=\"100%\" *ngIf=\"!showAccountNum\">\r\n                                                <mat-hint class=\"totalAmount\">Transaction Currency* </mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <div fxLayout=\"row wrap\" class=\"full-width\">\r\n                                                        <div fxFlex=\"25%\">\r\n                                                            <div class=\"currency-flag {{currencyImage}}\"></div>\r\n                                                        </div>\r\n                                                        <div fxFlex=\"75%\">\r\n                                                            <mat-select formControlName=\"transactionCurrency\"\r\n                                                                placeholder=\"Select Transaction Currency\"\r\n                                                                id=\"testSelect\" style=\"background-color: #f9fafb;\"\r\n                                                                >\r\n                                                                <mat-option\r\n                                                                    *ngFor=\"let country of countryValues; let i = index\"\r\n                                                                    (click)=\"onCountryChange(country)\" style=\"font-size:110%\"\r\n                                                                    [value]=\"country.currencyCode\">\r\n                                                                    <div fxLayout=\"row wrap\" class=\"full-width\">\r\n                                                                        <div fxFlex=\"15%\">{{country.currencyCode}}</div>\r\n                                                                        <div fxFlex=\"85%\">\r\n                                                                            <div\r\n                                                                                class=\"currency-flag currency-flag-{{addCurrencyImage(country.currencyCode)}} alignImage\">\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </mat-option>\r\n                                                            </mat-select>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </mat-card>\r\n                                            </div>\r\n                                            <div fxFlex=\"25%\" fxFlex.xs=\"100%\" *ngIf=\"showAccountNum\">\r\n                                                <mat-hint class=\"totalAmount\">Transaction Amount*</mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <input matInput type=\"text\"  *ngIf=\"!phoneNumber\" [readonly]=\"true\" class=\"full-width\" formControlName=\"transactionAmount\">\r\n                                                    <input matInput  class=\"full-width\" *ngIf=\"phoneNumber\" #myRef [(ngModel)]= \"transAmount\"  formControlName=\"transactionAmount\" [value]= \"transAmt | number: '1.'\" [readonly]=\"isedit\" \r\n                                                    (keyup)=\"OnInput($event)\" (focus)=\"clicked($event)\" >\r\n                                                </mat-card>\r\n                                                <mat-error *ngIf=\"chequewithdrawForm.get('transactionAmount').errors?.min\">\r\n                                                    Amount must be greater than zero\r\n                                                   </mat-error> \r\n                                            </div>\r\n                                            <div fxFlex=\"25%\" fxFlex.xs=\"100%\" *ngIf=\"!showAccountNum\">\r\n                                                <mat-hint class=\"totalAmount\">Transaction Amount*</mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <input matInput class=\"full-width\" #myRef\r\n                                                        [(ngModel)]=\"transAmount\" formControlName=\"transactionAmount\"\r\n                                                        [value]=\"transAmt | number: '1.'\" (keyup)=\"OnInput($event)\"\r\n                                                        (focus)=\"clicked($event)\" >\r\n                                                </mat-card>\r\n                                                <mat-error *ngIf=\"chequewithdrawForm.get('transactionAmount').errors?.min\">\r\n                                                    Amount must be greater than zero\r\n                                                </mat-error>\r\n                                            </div>\r\n                                            <div fxFlex=\"25%\" fxFlex.xs=\"100%\">\r\n                                                <mat-hint class=\"totalAmount\">Cheque Number*</mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                        <!-- <mat-select formControlName=\"holderName\" style=\"background-color: #f9fafb;\" >\r\n                                                            <mat-option *ngFor=\"let i of holderName\" [value]=\"i\">{{i}}</mat-option>\r\n                                                    </mat-select> -->\r\n                                                    <input matInput type=\"text\" *ngIf=\"!phoneNumber\" maxlength=\"6\" (keypress)=\"omit_number($event)\" class=\"full-width\" formControlName=\"chequeNumber\" >\r\n                                                    <input matInput type=\"text\" *ngIf=\"phoneNumber\" maxlength=\"6\" (keypress)=\"omit_number($event)\"  class=\"full-width\" formControlName=\"chequeNumber\" >\r\n\r\n                                                </mat-card>\r\n                                                <mat-error *ngIf=\"chequewithdrawForm.get('chequeNumber').touched && !chequewithdrawForm.get('chequeNumber').valid\">\r\n                                                    Cheque Number is Required!\r\n                                                   </mat-error>\r\n                                            </div>\r\n                                            <div fxFlex=\"25%\" fxFlex.xs=\"100%\">\r\n                                                <mat-hint class=\"totalAmount\">Total Charge Amount*</mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <input matInput class=\"full-width\" readonly formControlName=\"totalChargeAmount\">\r\n                                                </mat-card>\r\n\r\n                                            </div>\r\n                                            <div fxFlex=\"25%\" fxFlex.xs=\"100%\">\r\n                                                <mat-hint class=\"totalAmount\">Total Transaction Amount*</mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <input matInput type=\"text\" readonly onlyNumber formControlName=\"totalTransactionAmount\">\r\n\r\n                                                </mat-card>\r\n\r\n                                            </div>\r\n                                            <div class=\"tooltip\">\r\n                                                <img width=\"80%\"\r\n                                            [src]=\"'assets/images/info.svg'\"/>\r\n                                                <div class=\"tooltiptext\">\r\n                                                    <p class=\"totalAmount textcolor\" style=\"margin-top:10px; margin-bottom:6px\">Transaction Amount:{{chequewithdrawForm.get('transactionAmount').value}} </p>\r\n                                                    <p class=\"totalAmount textcolor\">Total Charge Amount:{{chequewithdrawForm.get('totalChargeAmount').value}} </p>\r\n                                                    <hr/>\r\n                                                    <p class=\"totalAmount textcolor\" style=\"margin-right:10px ;\">Total Transaction Amount:{{chequewithdrawForm.get('totalTransactionAmount').value}} </p>\r\n                                                </div>\r\n                                            </div>\r\n                                        </ng-container>\r\n                                    </div>\r\n                                </div>\r\n                           \r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </mat-card-content>\r\n            </mat-card>\r\n        </div>\r\n\r\n\r\n        <div *ngIf=\"(denomRequired == 'yes') && (chequewithdrawForm.get('transactionAmount').value > 0 || transAmt > 0)\" fxFlex=\"30%\">\r\n            <form #cdForm=\"ngForm\">\r\n        <mat-card class=\"border-align\" >  \r\n    <div fxLayout=\"row\" class=\"pH10 full-width\">\r\n        \r\n    <h4 class=\"title-Font\">Denomination</h4>\r\n    </div>\r\n    <div  class=\"pH10 full-width\" id=\"denominationDiv\">\r\n    <div class=\"paddingclass\" \r\n    fxLayoutAlign=\"center center\" *ngIf=\"chequewithdrawForm.value.transactionCurrency == 'INR'\">\r\n    <div fxFlex=\"20%\">\r\n    <p class=\"quantityClass text-small\">2000</p>\r\n    </div>\r\n    <div fxFlex=\"10%\">\r\n    <p class=\"operationTypeClass text-small\">x</p>\r\n    </div>\r\n    <div fxFlex=\"70%\">\r\n    <mat-card class=\"inputCard\">\r\n       <div>\r\n           <input class=\"full-width inputClass\" type=\"text\"\r\n               (keyup)=\"totalAmountValue(cdForm)\" (keypress)=\"omit_number($event)\"\r\n               matInput name=\"count2000\" ngModel #count2000>\r\n       </div>\r\n    </mat-card>\r\n    <div class=\"pl10\">\r\n       <mat-error *ngIf=\"denominationlimit && count2000.value > denominationLimit[2000]\">\r\n           Please enter <= {{denominationLimit[2000]}}\r\n       </mat-error>\r\n    </div>\r\n    </div>\r\n    </div>\r\n    <div  class=\"paddingclass\" \r\n    fxLayoutAlign=\"start center\" *ngIf=\"chequewithdrawForm.value.transactionCurrency == 'INR' || chequewithdrawForm.value.transactionCurrency == 'USD' || chequewithdrawForm.value.transactionCurrency == 'AED'\">\r\n    <div fxFlex=\"20%\">\r\n    <p class=\"quantityClass text-small\">500</p>\r\n    </div>\r\n    <div fxFlex=\"10%\">\r\n    <p class=\"operationTypeClass text-small\">x</p>\r\n    </div>\r\n    <div fxFlex=\"70%\">\r\n    <mat-card class=\"inputCard\">\r\n       <input class=\"full-width inputClass\" type=\"text\"\r\n           (keyup)=\"totalAmountValue(cdForm)\" (keypress)=\"omit_number($event)\"\r\n           matInput name=\"count500\" ngModel #count500>\r\n    </mat-card>\r\n    <div class=\"pl10\">\r\n       <mat-error *ngIf=\"denominationlimit && count500.value > denominationLimit[500]\">\r\n           Please enter <= {{denominationLimit[500]}}\r\n       </mat-error>\r\n    </div>\r\n    </div>\r\n    </div>\r\n    <div  class=\"paddingclass\" \r\n    fxLayoutAlign=\"start center\" *ngIf=\"chequewithdrawForm.value.transactionCurrency == 'INR'\">\r\n    <div fxFlex=\"20%\">\r\n    <p class=\"quantityClass text-small\">200</p>\r\n    </div>\r\n    <div fxFlex=\"10%\">\r\n    <p class=\"operationTypeClass text-small\">x</p>\r\n    </div>\r\n    <div fxFlex=\"70%\">\r\n    <mat-card class=\"inputCard\">\r\n       <input class=\"full-width inputClass\" type=\"text\"\r\n           (keyup)=\"totalAmountValue(cdForm)\" (keypress)=\"omit_number($event)\"\r\n           matInput name=\"count200\" ngModel #count200>\r\n    </mat-card>\r\n    <div class=\"pl10\">\r\n       <mat-error *ngIf=\"denominationlimit && count200.value > denominationLimit[200]\">\r\n           Please enter <= {{denominationLimit[200]}}\r\n       </mat-error>\r\n    </div>\r\n    </div>\r\n    </div>\r\n    <div  class=\"paddingclass\" \r\n    fxLayoutAlign=\"start center\" *ngIf=\"chequewithdrawForm.value.transactionCurrency == 'INR' || chequewithdrawForm.value.transactionCurrency == 'USD' || chequewithdrawForm.value.transactionCurrency == 'AED'\">\r\n    <div fxFlex=\"20%\">\r\n    <p class=\"quantityClass text-small\">100</p>\r\n    </div>\r\n    <div fxFlex=\"10%\">\r\n    <p class=\"operationTypeClass text-small\">x</p>\r\n    </div>\r\n    <div fxFlex=\"70%\">\r\n    <mat-card class=\"inputCard\">\r\n       <input class=\"full-width inputClass\" type=\"text\"\r\n           (keyup)=\"totalAmountValue(cdForm)\" (keypress)=\"omit_number($event)\"\r\n           matInput name=\"count100\" ngModel #count100>\r\n    </mat-card>\r\n    <div class=\"pl10\">\r\n       <mat-error *ngIf=\"denominationlimit && count100.value > denominationLimit[100]\">\r\n           Please enter <= {{denominationLimit[100]}}\r\n       </mat-error>\r\n    </div>\r\n    </div>\r\n    </div>\r\n    <div  class=\"paddingclass\" \r\n    fxLayoutAlign=\"start center\" *ngIf=\"chequewithdrawForm.value.transactionCurrency == 'INR' || chequewithdrawForm.value.transactionCurrency == 'USD'\">\r\n    <div fxFlex=\"20%\">\r\n    <p class=\"quantityClass text-small\">50</p>\r\n    </div>\r\n    <div fxFlex=\"10%\">\r\n    <p class=\"operationTypeClass text-small\">x</p>\r\n    </div>\r\n    <div fxFlex=\"70%\">\r\n    <mat-card class=\"inputCard\">\r\n       <input class=\"full-width inputClass\" type=\"text\"\r\n           (keyup)=\"totalAmountValue(cdForm)\" (keypress)=\"omit_number($event)\"\r\n           matInput name=\"count50\" ngModel #count50>\r\n    </mat-card>\r\n    <div class=\"pl10\">\r\n       <mat-error *ngIf=\"denominationlimit && count50.value > denominationLimit[50]\">\r\n           Please enter <= {{denominationLimit[50]}}\r\n       </mat-error>\r\n    </div>\r\n    </div>\r\n    </div>\r\n    <div  class=\"paddingclass\" \r\n    fxLayoutAlign=\"start center\" *ngIf=\"chequewithdrawForm.value.transactionCurrency == 'INR'\">\r\n    <div fxFlex=\"20%\">\r\n    <p class=\"quantityClass text-small\">20</p>\r\n    </div>\r\n    <div fxFlex=\"10%\">\r\n    <p class=\"operationTypeClass text-small\">x</p>\r\n    </div>\r\n    <div fxFlex=\"70%\">\r\n    <mat-card class=\"inputCard\">\r\n       <input class=\"full-width inputClass\" type=\"text\"\r\n           (keyup)=\"totalAmountValue(cdForm)\" (keypress)=\"omit_number($event)\"\r\n           matInput name=\"count20\" ngModel #count20>\r\n    </mat-card>\r\n    <div class=\"pl10\">\r\n       <mat-error *ngIf=\"denominationlimit && count20.value > denominationLimit[20]\">\r\n           Please enter <= {{denominationLimit[20]}}\r\n       </mat-error>\r\n    </div>\r\n    </div>\r\n    </div>\r\n    <div  class=\"paddingclass\" \r\n    fxLayoutAlign=\"start center\" *ngIf=\"chequewithdrawForm.value.transactionCurrency == 'INR'\">\r\n    <div fxFlex=\"20%\">\r\n    <p class=\"quantityClass text-small\">10</p>\r\n    </div>\r\n    <div fxFlex=\"10%\">\r\n    <p class=\"operationTypeClass text-small\">x</p>\r\n    </div>\r\n    <div fxFlex=\"70%\">\r\n    <mat-card class=\"inputCard\">\r\n       <input class=\"full-width inputClass\" type=\"text\"\r\n           (keyup)=\"totalAmountValue(cdForm)\" (keypress)=\"omit_number($event)\"\r\n           matInput name=\"count10\" ngModel #count10>\r\n    </mat-card>\r\n    <div class=\"pl10\">\r\n       <mat-error *ngIf=\"denominationlimit && count10.value > denominationLimit[10]\">\r\n           Please enter <= {{denominationLimit[10]}}\r\n       </mat-error>\r\n    </div>\r\n    </div>\r\n    </div>\r\n    <div class=\"paddingclass\" \r\n    fxLayoutAlign=\"start center\" *ngIf=\"chequewithdrawForm.value.transactionCurrency == 'INR' || chequewithdrawForm.value.transactionCurrency == 'USD' || chequewithdrawForm.value.transactionCurrency == 'AED'\">\r\n    <div fxFlex=\"20%\">\r\n    <p class=\"quantityClass text-small\">1</p>\r\n    </div>\r\n    <div fxFlex=\"10%\">\r\n    <p class=\"operationTypeClass text-small\">x</p>\r\n    </div>\r\n    <div fxFlex=\"70%\">\r\n    <mat-card class=\"inputCard\">\r\n    <input class=\"full-width inputClass\" type=\"text\"\r\n       (keyup)=\"totalAmountValue(cdForm)\" (keypress)=\"omit_number($event)\"\r\n       matInput name=\"count1\" ngModel #count10>\r\n    </mat-card>\r\n    </div>\r\n    </div>\r\n    </div>\r\n    <div fxLayout=\"row wrap\" class=\"pH10 full-width\">\r\n    <div fxFlex=\"53%\" fxFlex.xs=\"100%\">\r\n    <p class=\"totalAmount\">Total Amount</p>\r\n    <mat-card class=\"inputCard\">\r\n    <input class=\"full-width inputClass\"  [(ngModel)]=\"totalAmount\"\r\n       matInput name=\"totalAmount\"  readonly>\r\n    </mat-card>\r\n    <div class=\"pl10\" style=\"width: 150%;\">\r\n    <mat-error *ngIf=\"enableBtn1\">\r\n       Total amount should be equal to {{chequewithdrawForm.value.transactionAmount}}\r\n    </mat-error>\r\n    </div>\r\n    </div>\r\n    </div>\r\n           </mat-card>\r\n           </form>\r\n    </div>\r\n\r\n    </div>\r\n\r\n\r\n    <div>\r\n        <div fxLayout=\"row wrap\" class=\"flex-container stretch\" id=\"buttonDiv\">\r\n            <ng-container>\r\n                <div fxFlex=\"30%\" fxFlex.xs=\"100%\" class=\"paddingCls\">\r\n                    <button mat-flat-button *ngIf=\"phoneNumber\" class=\"buttonCancel full-width\"\r\n                        (click)=\"goToServiceScreens()\">CANCEL</button>\r\n                </div>\r\n                <div fxFlex=\"70%\" fxFlex.xs=\"100%\" class=\"paddingCls\" *ngIf=\"showAccountNum\">\r\n                    <button mat-flat-button class=\"buttonNext full-width\"\r\n                    [disabled]=\"!enableContinue\r\n                     ||!chequewithdrawForm.get('transactionCurrency').valid\r\n                     ||!chequewithdrawForm.get('accountNumber').valid\r\n                     ||!chequewithdrawForm.get('accountType').valid\r\n                     ||!chequewithdrawForm.get('accountCurrency').valid\r\n                     ||!chequewithdrawForm.get('transactionAmount').valid\r\n                     ||!chequewithdrawForm.get('chequeNumber').valid\r\n                     ||!chequewithdrawForm.get('totalChargeAmount').valid\r\n                     ||!chequewithdrawForm.get('totalTransactionAmount').valid\"\r\n                     \r\n                       (click)=\"onSaveofChequeWithdraw(chequewithdrawForm.value,ifQRvariable,cdForm)\">GENERATE TOKEN</button>\r\n                </div>\r\n                <div fxFlex=\"70%\" fxFlex.xs=\"100%\" class=\"paddingCls\" *ngIf=\"!showAccountNum\">\r\n                    <button mat-flat-button class=\"buttonNext full-width\"\r\n                    [disabled]=\"!enableContinue || !chequewithdrawForm.get('transactionAmount').valid\r\n                     ||!chequewithdrawForm.get('transactionCurrency').valid\r\n                     ||!chequewithdrawForm.get('accountNumber').valid\r\n                     ||!chequewithdrawForm.get('accountType').valid\r\n                     ||!chequewithdrawForm.get('accountCurrency').valid\r\n                     ||!chequewithdrawForm.get('transactionAmount').valid\r\n                     ||!chequewithdrawForm.get('chequeNumber').valid\r\n                     ||!chequewithdrawForm.get('totalChargeAmount').valid\r\n                     ||!chequewithdrawForm.get('totalTransactionAmount').valid\"\r\n                       (click)=\"getOTP(chequewithdrawForm.value,ifQRvariable,cdForm)\">CONTINUE</button>\r\n                </div>\r\n            </ng-container>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl, FormBuilder, Validators  } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { DialogService } from 'app/shared/services/Dialog/dialog.service';\r\n\r\ninterface Testing {\r\n  value: string;\r\n  viewValue: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-loan-payment',\r\n  templateUrl: './loan-payment.component.html',\r\n  styleUrls: ['./loan-payment.component.scss']\r\n})\r\nexport class LoanPaymentComponent implements OnInit {\r\n  loanpaymentForm: FormGroup;\r\n  loanPayment : any = 'Loan Payment';\r\n\r\n  constructor(private router : Router,private formBuilder: FormBuilder, private dialogService : DialogService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.loanpaymentForm = this.formBuilder.group({\r\n      loanAccount:['', [Validators.required]],\r\n      currentArrears:['', [Validators.required]],\r\n      currentDue:['', [Validators.required]],\r\n      principalOutstanding:['', [Validators.required]],\r\n      payFromAccount:['', [Validators.required]],\r\n      holderName:['', [Validators.required]],\r\n      repaymentAmount:['', [Validators.required]], \r\n    });\r\n  }\r\n  goToServiceScreens(){\r\n    this.router.navigateByUrl('/others/services');\r\n  }\r\n  goToAuthenticate(){\r\n    this.dialogService.authenticationDialog();\r\n  }\r\n\r\n  testing: Testing[] = [\r\n    { value: 'Demo', viewValue: 'Demo 1' },\r\n    { value: 'Demo', viewValue: 'Demo 2' },\r\n    { value: 'Demo', viewValue: 'Demo 3' }\r\n  ];\r\n\r\n}\r\n","<div class=\"fullcard\">\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"center center\">\r\n        <div fxFlex=\"80%\">\r\n            <mat-card class=\"chequecard\">\r\n                <mat-card-title style=\"padding: 2%;\">\r\n                    <div fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n                        <div>\r\n                            <mat-icon class=\"backIcon\" (click)=\"goToServiceScreens()\">keyboard_backspace</mat-icon>\r\n                        </div> &nbsp;&nbsp;\r\n                        <div class=\"card-title\">Loan Payment</div>\r\n                    </div>\r\n                </mat-card-title>\r\n                <mat-card-content>\r\n                    <div class=\"full-width\" style=\"padding: 0% 3% 3% 2%;\">\r\n                        <!-- <form #loanpaymentForm=\"ngForm\"> -->\r\n                        <form [formGroup]=\"loanpaymentForm\">    \r\n                            <div fxLayout=\"column\" fxLayoutGap=\"5%\" fxLayoutAlign=\"space-between none\">\r\n                                <div>\r\n                                    <div fxLayout=\"row wrap\" class=\"flex-container stretch\">\r\n                                        <ng-container>\r\n                                            <div fxFlex=\"31%\" fxFlex.xs=\"100%\">\r\n                                                <mat-hint class=\"totalAmount\">Loan Account*</mat-hint>\r\n                                                <mat-card class=\"firstCard\">\r\n                                                    <mat-select formControlName=\"loanAccount\" class=\"full-width\" style=\"background-color: #f9fafb;\">\r\n                                                        <mat-option *ngFor=\"let test of testing\" [value]=\"test.value\">\r\n                                                            {{test.viewValue}}\r\n                                                        </mat-option>\r\n                                                    </mat-select>\r\n                                                </mat-card>\r\n                                            </div>\r\n                                            <div fxFlex=\"23%\" fxFlex.xs=\"100%\">\r\n                                                <mat-hint class=\"totalAmount\">Current Arrears*</mat-hint>\r\n                                                <mat-card class=\"loanCard\">\r\n                                                    <input matInput formControlName=\"currentArrears\" type=\"text\" class=\"full-width inputClass\"\r\n                                                        name=\"currentArrears\">\r\n                                                </mat-card>\r\n                                            </div>\r\n                                            <div fxFlex=\"23%\" fxFlex.xs=\"100%\">\r\n                                                <mat-hint class=\"totalAmount\">Current Due*</mat-hint>\r\n                                                <mat-card class=\"loanCard\">\r\n                                                    <input matInput formControlName=\"currentDue\" type=\"text\" class=\"full-width inputClass\"\r\n                                                        name=\"currentDue\">\r\n                                                </mat-card>\r\n                                            </div>\r\n                                            <div fxFlex=\"23%\" fxFlex.xs=\"100%\">\r\n                                                <mat-hint class=\"totalAmount\">Principal Outstanding* </mat-hint>\r\n                                                <mat-card class=\"loanCard\">\r\n                                                    <input matInput formControlName=\"principalOutstanding\" type=\"text\" class=\"full-width inputClass\"\r\n                                                        name=\"principalOutstanding\">\r\n                                                </mat-card>\r\n                                            </div>\r\n                                        </ng-container>\r\n                                    </div>\r\n                                </div>\r\n                                <div>\r\n                                    <span layout=\"row\">\r\n                                        <hr class=\"line\" flex />\r\n                                    </span>\r\n                                </div>\r\n                                <div>\r\n                                    <div fxLayout=\"row wrap\" class=\"flex-container stretch\">\r\n                                        <ng-container>\r\n                                            <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                                <mat-hint class=\"totalAmount\">Pay from Account*</mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <mat-select formControlName=\"payFromAccount\" class=\"full-width\" style=\"background-color: #f9fafb;\">\r\n                                                        <mat-option *ngFor=\"let test of testing\" [value]=\"test.value\">\r\n                                                            {{test.viewValue}}\r\n                                                        </mat-option>\r\n                                                    </mat-select>\r\n                                                </mat-card>\r\n                                                <mat-hint class=\"totalAmount\">Account Balance : $12,09,98</mat-hint>\r\n                                            </div>\r\n                                            <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                                <mat-hint class=\"totalAmount\">Holder Name* </mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <mat-select formControlName=\"holderName\" class=\"full-width\" style=\"background-color: #f9fafb;\">\r\n                                                        <mat-option *ngFor=\"let test of testing\" [value]=\"test.value\">\r\n                                                            {{test.viewValue}}\r\n                                                        </mat-option>\r\n                                                    </mat-select>\r\n                                                </mat-card>\r\n                                            </div>\r\n                                            <div fxFlex=\"34%\" fxFlex.xs=\"100%\">\r\n                                                <mat-hint class=\"totalAmount\">Repayment Amount* </mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <input matInput formControlName=\"repaymentAmount\" type=\"text\" class=\"full-width inputClass\"\r\n                                                        name=\"repaymentAmount\">\r\n                                                </mat-card>\r\n                                            </div>\r\n                                        </ng-container>\r\n                                    </div>\r\n                                </div>\r\n                                <div>\r\n                                    <div fxLayout=\"row wrap\" class=\"flex-container stretch\">\r\n                                        <ng-container>\r\n                                            <div fxFlex=\"30%\" fxFlex.xs=\"100%\" style=\"padding: 0% 1%;\">\r\n                                                <button mat-flat-button class=\"buttonCancel full-width\"\r\n                                                    (click)=\"goToServiceScreens()\">CANCEL</button>\r\n                                            </div>\r\n                                            <div fxFlex=\"70%\" fxFlex.xs=\"100%\" style=\"padding: 0% 2%;\">\r\n                                                <button mat-flat-button class=\"buttonNext full-width\"\r\n                                                [disabled]=\" !loanpaymentForm.get('loanAccount').valid\r\n                                                || !loanpaymentForm.get('currentArrears').valid\r\n                                                || !loanpaymentForm.get('currentDue').valid\r\n                                                || !loanpaymentForm.get('principalOutstanding').valid\r\n                                                || !loanpaymentForm.get('payFromAccount').valid\r\n                                                || !loanpaymentForm.get('holderName').valid\r\n                                                || !loanpaymentForm.get('repaymentAmount').valid \"\r\n                                                    (click)=\"goToAuthenticate()\">CONTINUE</button>\r\n                                            </div>\r\n                                        </ng-container>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </mat-card-content>\r\n            </mat-card>\r\n        </div>\r\n    </div>\r\n</div>","import { Country } from '@angular-material-extensions/select-country';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl, FormBuilder, Validators  } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { DialogService } from 'app/shared/services/Dialog/dialog.service';\r\n\r\ninterface Testing {\r\n  value: string;\r\n  viewValue: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-forex-transaction',\r\n  templateUrl: './forex-transaction.component.html',\r\n  styleUrls: ['./forex-transaction.component.scss']\r\n})\r\nexport class ForexTransactionComponent implements OnInit {\r\n  forexForm: FormGroup;\r\n  countryFormControl = new FormControl();\r\n  defaultValue: Country = {\r\n    name: 'Deutschland',\r\n    alpha2Code: 'DE',\r\n    alpha3Code: 'DEU',\r\n    numericCode: '276',\r\n    callingCode: '+49'\r\n  };\r\n  forexTransaction : any = 'Forex Transaction';\r\n  constructor(private router : Router, private formBuilder: FormBuilder,private dialogService : DialogService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.forexForm = this.formBuilder.group({\r\n      accountNumber:['', [Validators.required]],\r\n      holderName:['', [Validators.required]],\r\n      fxCurrency:[''],\r\n      fxAmount:['', [Validators.required]],\r\n      negotiatedRate:['', [Validators.required]],\r\n      country: [\r\n        {\r\n          value: {\r\n            name: 'Deutschland',\r\n            alpha2Code: 'DE',\r\n            alpha3Code: 'DEU',\r\n            numericCode: '276',\r\n            callingCode: '+49'\r\n          },\r\n          disabled: false\r\n        }\r\n      ]\r\n    });\r\n\r\n    this.forexForm\r\n      .get('country')\r\n      .valueChanges.subscribe((country) =>\r\n      console.log(\r\n        'this.countryFormGroup.get(\\'country\\').valueChanges',\r\n        country\r\n      )\r\n    );\r\n\r\n    this.countryFormControl.valueChanges.subscribe((country) =>\r\n      console.log('this.countryFormControl.valueChanges', country)\r\n    );\r\n\r\n  }\r\n  onCountrySelected($event: Country): void {\r\n    console.log($event);\r\n  }\r\n  goToServiceScreens(){\r\n    this.router.navigateByUrl('/others/services');\r\n  }\r\n  goToToken(){\r\n     this.dialogService.tokenGenerationDialog();\r\n  }\r\n\r\n  testing: Testing[] = [\r\n    { value: 'Demo', viewValue: 'Demo 1' },\r\n    { value: 'Demo', viewValue: 'Demo 2' },\r\n    { value: 'Demo', viewValue: 'Demo 3' }\r\n  ];\r\n\r\n}\r\n","<div class=\"fullcard\">\r\n  <div fxLayout=\"row\" fxLayoutAlign=\"center center\">\r\n    <div fxFlex=\"80%\">\r\n      <mat-card class=\"chequecard\">\r\n        <mat-card-title style=\"padding: 2%;\">\r\n          <div fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n            <div>\r\n              <mat-icon class=\"backIcon\" (click)=\"goToServiceScreens()\">keyboard_backspace</mat-icon>\r\n            </div> &nbsp;&nbsp;\r\n            <div class=\"card-title\">Forex Transaction</div>\r\n          </div>\r\n        </mat-card-title>\r\n        <mat-card-content>\r\n          <div class=\"full-width\" style=\"padding: 0% 0% 3% 2%;\">\r\n            <!-- <form #forexForm=\"ngForm\"> -->\r\n              <form [formGroup]=\"forexForm\">\r\n              <div fxLayout=\"column\" fxLayoutGap=\"5%\" fxLayoutAlign=\"space-between none\">\r\n                <div>\r\n                  <div fxLayout=\"row wrap\" class=\"flex-container stretch\">\r\n                    <ng-container>\r\n                      <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                        <mat-hint class=\"totalAmount\">Account Number*</mat-hint>\r\n                        <mat-card class=\"inputCard\">\r\n                          <mat-select formControlName=\"accountNumber\" class=\"full-width\" style=\"background-color: #f9fafb;\">\r\n                            <mat-option *ngFor=\"let test of testing\" [value]=\"test.value\">\r\n                              {{test.viewValue}}\r\n                            </mat-option>\r\n                          </mat-select>\r\n                        </mat-card>\r\n                        <mat-hint class=\"totalAmount\">Account Balance : $12,09470</mat-hint>\r\n                      </div>\r\n                      <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                        <mat-hint class=\"totalAmount\">Holder Name*</mat-hint>\r\n                        <mat-card class=\"inputCard\">\r\n                          <mat-select formControlName=\"holderName\" class=\"full-width\" style=\"background-color: #f9fafb;\">\r\n                            <mat-option *ngFor=\"let test of testing\" [value]=\"test.value\">\r\n                              {{test.viewValue}}\r\n                            </mat-option>\r\n                          </mat-select>\r\n                        </mat-card>\r\n                      </div>\r\n                      <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                        <mat-hint class=\"totalAmount\"> Transaction Type*</mat-hint>\r\n                        <div class=\"radioDiv\">\r\n                          <mat-radio-group name=\"transactionType\">\r\n                            <mat-radio-button value=\"buy\" checked=\"true\">Buy</mat-radio-button> &nbsp; &nbsp;\r\n                            <mat-radio-button value=\"sell\">Sell</mat-radio-button>\r\n                          </mat-radio-group>\r\n                        </div>\r\n                      </div>\r\n                    </ng-container>\r\n                  </div>\r\n                </div>\r\n                <div>\r\n                  <span layout=\"row\">\r\n                    <hr class=\"line\" flex />\r\n                  </span>\r\n                </div>\r\n                <div>\r\n                  <div fxLayout=\"row wrap\" class=\"flex-container stretch\">\r\n                    <ng-container>\r\n                      <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                        <mat-hint class=\"totalAmount\">FX Currency*</mat-hint>\r\n                        <mat-card class=\"inputCard\" style=\"padding: 0% 6%;\">\r\n                          <mat-select-country formControlName=\"fxCurrency\" class=\"full-width fxCurrencyClass\" label=\"\" appearance=\"none\"\r\n                            [value]=\"defaultValue\" (onCountrySelected)=\"onCountrySelected($event)\">\r\n                          </mat-select-country>\r\n                        </mat-card>\r\n                      </div>\r\n                      <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                        <mat-hint class=\"totalAmount\"> FX Amount* </mat-hint>\r\n                        <mat-card class=\"inputCard\">\r\n                          <input matInput formControlName=\"fxAmount\" type=\"text\" class=\"full-width inputClass\" name=\"fxAmount\">\r\n                        </mat-card>\r\n                      </div>\r\n                      <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                        <mat-hint class=\"totalAmount\">Negotiated Rate*</mat-hint>\r\n                        <mat-card class=\"inputCard\">\r\n                          <input matInput formControlName=\"negotiatedRate\" class=\"full-width inputClass\" type=\"text\" name=\"accountNumber\">\r\n                        </mat-card>\r\n                        <mat-hint class=\"totalAmount\">Exchange Rate : 0.89</mat-hint>\r\n                      </div>\r\n                    </ng-container>\r\n                  </div>\r\n                </div>\r\n                <div>\r\n                  <div fxLayout=\"row wrap\" class=\"flex-container stretch\">\r\n                    <ng-container>\r\n                      <div fxFlex=\"30%\" fxFlex.xs=\"100%\" style=\"padding: 0% 1%;\">\r\n                        <button mat-flat-button class=\"buttonCancel full-width\"\r\n                          (click)=\"goToServiceScreens()\">CANCEL</button>\r\n                      </div>\r\n                      <div fxFlex=\"70%\" fxFlex.xs=\"100%\" style=\"padding: 0% 2%;\">\r\n                        <button mat-flat-button class=\"buttonNext full-width\"\r\n                        [disabled]=\" !forexForm.get('accountNumber').valid\r\n                        || !forexForm.get('holderName').valid\r\n                        || !forexForm.get('fxCurrency').valid\r\n                        || !forexForm.get('fxAmount').valid\r\n                        || !forexForm.get('negotiatedRate').valid \"                        \r\n                          (click)=\"goToToken()\">CONTINUE</button>\r\n                      </div>\r\n                    </ng-container>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </mat-card-content>\r\n      </mat-card>\r\n    </div>\r\n  </div>\r\n</div>","import { SharedDirectivesModule } from './../../shared/directives/shared-directives.module';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatChipsModule } from '@angular/material/chips';\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\r\nimport { ChartsModule } from 'ng2-charts';\r\nimport { SharedModule } from './../../shared/shared.module';\r\nimport { AppBlankComponent } from './app-blank/app-blank.component';\r\nimport { OthersRoutes } from \"./others.routing\";\r\nimport { ChequeWithdrawalComponent } from './cheque-withdrawal/cheque-withdrawal.component';\r\nimport { ChequeWithdrawal1Component } from './cheque-withdrawal1/cheque-withdrawal1.component';\r\nimport { CashWithdrawalComponent } from './cash-withdrawal/cash-withdrawal.component';\r\nimport { CashDepositComponent } from './cash-deposit/cash-deposit.component';\r\nimport { ChequeDepositComponent } from './cheque-deposit/cheque-deposit.component';\r\nimport { ForexTransactionComponent } from './forex-transaction/forex-transaction.component';\r\nimport { LoanPaymentComponent } from './loan-payment/loan-payment.component';\r\nimport { DepositTopupComponent } from './deposit-topup/deposit-topup.component';\r\nimport { UtilityBillpaymentComponent } from './utility-billpayment/utility-billpayment.component';\r\nimport { SelectServiceComponent } from './select-service/select-service.component';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { AuthenticateComponent } from './authenticate/authenticate.component';\r\nimport { MatSelectCountryModule } from '@angular-material-extensions/select-country';\r\nimport { MatDialogModule, MatDialogRef } from '@angular/material/dialog';\r\nimport { TokenGenerationComponent } from './token-generation/token-generation.component';\r\nimport { TokenInterceptor } from 'app/shared/interceptors/token.interceptor';\r\nimport { ZXingScannerModule } from '@zxing/ngx-scanner';\r\nimport { OnlynumberDirective } from 'app/shared/directives/onlynumber.directive';\r\nimport { SearchComponent } from './search/search.component';\r\nimport { OtpVerifyComponent } from './otp-verify/otp-verify.component';\r\nimport { AppointmentIdComponent } from './appointment-id/appointment-id.component'\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    MatListModule,\r\n    MatIconModule,\r\n\r\n    MatButtonModule,\r\n    MatCardModule,\r\n    MatMenuModule,\r\n    MatSlideToggleModule,\r\n    MatGridListModule,\r\n    MatChipsModule,\r\n    MatCheckboxModule,\r\n    MatDialogModule,\r\n    MatRadioModule,\r\n    MatTabsModule,\r\n    MatInputModule,\r\n    MatProgressBarModule,\r\n    FlexLayoutModule,\r\n    NgxDatatableModule,\r\n    ChartsModule,\r\n    SharedModule,\r\n    MatSelectModule,\r\n    ReactiveFormsModule,\r\n    MatDatepickerModule,\r\n    MatSelectCountryModule.forRoot('de'),\r\n    RouterModule.forChild(OthersRoutes),\r\n    ZXingScannerModule\r\n  ],\r\n  declarations: [\r\n    AppBlankComponent,\r\n    ChequeWithdrawalComponent,\r\n    ChequeWithdrawal1Component,\r\n    CashWithdrawalComponent,\r\n    CashDepositComponent,\r\n    ChequeDepositComponent,\r\n    ForexTransactionComponent,\r\n    LoanPaymentComponent,\r\n    DepositTopupComponent,\r\n    UtilityBillpaymentComponent,\r\n    SelectServiceComponent,\r\n    AuthenticateComponent,\r\n    TokenGenerationComponent,\r\n    OnlynumberDirective,\r\n    SearchComponent,\r\n    OtpVerifyComponent,\r\n    AppointmentIdComponent,\r\n   \r\n  ],\r\n  entryComponents: [\r\n    AuthenticateComponent,\r\n    TokenGenerationComponent\r\n  ]\r\n})\r\nexport class OthersModule { }\r\n","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\nimport { NavigationExtras, Router } from '@angular/router';\r\n\r\nexport interface Section {\r\n  title: string;\r\n  id : number;\r\n  flag: boolean;\r\n  link : string;\r\n  image : any;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-select-service',\r\n  templateUrl: './select-service.component.html',\r\n  styleUrls: ['./select-service.component.scss']\r\n})\r\nexport class SelectServiceComponent implements OnInit {\r\n\r\n  @ViewChild('contentDiv', { read: ElementRef }) public contentDiv: ElementRef<any>;\r\n  @ViewChild('widgetsContent') widgetsContent: ElementRef;\r\n\r\n\r\n  flag: boolean = true;\r\n  continue = \"CONTINUE\";\r\n  enableList : any [];\r\n  active : any = {};\r\n  folders: Section[] = [\r\n    {\r\n      title: \"Cash Withdrawal\",\r\n      id : 1,\r\n      flag : false,\r\n      link : 'others/cash-withdrawal',\r\n      image : \"assets/images/cash_withdrawal.png\"\r\n    },\r\n    {\r\n      title: \"Cash Deposit\",\r\n      id : 2,\r\n      flag : false,\r\n      link : 'others/cash-deposit',\r\n      image : \"assets/images/cash_deposit.png\"\r\n    },\r\n    {\r\n      title: \"Cheque Deposit\",\r\n      id : 3,\r\n      flag : false,\r\n      link : 'others/cheque-deposit',\r\n      image : \"assets/images/cheque_deposit.png\"\r\n    },\r\n    {\r\n      title: \"Cheque Withdrawal\",\r\n      id : 4,\r\n      flag : false,\r\n      link : 'others/cheque-withdrawal',\r\n      image : \"assets/images/check_withdrawal.png\"\r\n    },\r\n    {\r\n      title: \"Forex Transaction\",\r\n      id : 5,\r\n      flag : false,\r\n      link : 'others/forex-transaction',\r\n      image : \"assets/images/forex_transaction.png\"\r\n    },\r\n    {\r\n      title: \"Loan Payment\",\r\n      id : 6,\r\n      flag : false,\r\n      link : 'others/loan-payment',\r\n      image : \"assets/images/loan_payment.png\"\r\n    },\r\n    {\r\n      title: \"Deposit Top Up\",\r\n      id : 7,\r\n      flag : false,\r\n      link : 'others/deposit-topup',\r\n      image : \"assets/images/deposit_top_up.png\"\r\n    },\r\n    {\r\n      title: \"Utility Bill Payment\",\r\n      id : 8,\r\n      flag : false,\r\n      link : 'others/utility-billpayment',\r\n      image : \"assets/images/utility_billpayment.png\"\r\n    },\r\n\r\n  ]; \r\n  serviceTitle: any;\r\n  constructor(private router : Router,) { }\r\n  ngOnInit(): void {\r\n  }\r\n  goToService(index){\r\n    if(this.active !== index){\r\n      this.active = index;\r\n      this.folders.forEach(item => { item.flag = false});\r\n    } \r\n    this.folders[index].flag = !this.folders[index].flag;\r\n  }\r\n  contiueButton(){\r\n    // console.log(this.active);\r\n    this.enableList = this.folders.filter(x => x.flag === true)\r\n    console.log(this.enableList);\r\n    if(this.enableList.length > 0 )\r\n    return true;\r\n    else \r\n    return false;\r\n  }\r\n  goToOperations(){\r\n    this.router.navigate([this.enableList[0].link]);\r\n  }\r\n\r\n  public scrollLeft(): void {\r\n    this.contentDiv.nativeElement.scrollLeft  -= 640;\r\n    \r\n  }\r\n\r\n  public scrollRight(): void {\r\n    this.contentDiv.nativeElement.scrollLeft += 640;\r\n  }\r\n  \r\n\r\n}\r\n","<div class=\"fullcard\">\r\n  <br>\r\n  <div fxLayout=\"row-wrap\" fxLayoutAlign=\"center center\">\r\n    <div fxFlex=\"72%\">\r\n      <mat-card class=\"chequecard\">\r\n        <mat-card-title  class= \"matcard-title\">\r\n          <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n            <div>\r\n              <div class=\"card-title\">Services</div>\r\n              <div fxLayout=\"row wrap\">\r\n                <mat-hint class=\"totalAmount\">Select one and continue</mat-hint>\r\n              </div>\r\n            </div>\r\n            <div>\r\n              <mat-card class=\"slideCard\">\r\n                <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n                  <div>\r\n                    <button mat-icon-button (click)=\"scrollLeft()\">\r\n                      <mat-icon class= \"scrollIcon\">chevron_left</mat-icon>\r\n                    </button>\r\n                  </div>\r\n                  <div>\r\n                    <button mat-icon-button (click)=\"scrollRight()\">\r\n                      <mat-icon class= \"scrollIcon\">chevron_right</mat-icon>\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </mat-card>\r\n            </div>\r\n          </div>\r\n        </mat-card-title>\r\n        <mat-card-content>\r\n          <div #contentDiv class=\"full-width\" #widgetsContent class=\"custom-slider-main\">\r\n            <div fxLayout=\"row wrap\" fxLayoutGap=\"40px \" class=\"gapBtw\" *ngFor=\"let folder of folders; let i = index\">\r\n              <ng-container>\r\n                <mat-card (click)=\"goToService(i)\" [ngClass]=\" folder.flag ? 'borderCard' : 'inputCard'\">\r\n                  <div fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n                    <div *ngIf=\"folder.flag\">\r\n                      <img style=\"width: 23px;\" src=\"assets/images/checked.png\" alt=\"\" />\r\n                    </div>\r\n                  </div>\r\n                  <div fxLayout=\"column\" fxLayoutAlign=\"space-between center\">\r\n                    <div [ngClass]=\" folder.flag ? 'mt9' : 'mt25'\">\r\n                      <mat-card class=\"insideCard\">\r\n                        <div fxLayout=\"row\" fxLayoutAlign=\"center center\">\r\n                          <div>\r\n                            <mat-card style=\"background-color: transparent;\" class=\"matCardTransparent\">\r\n                              <img src=\"{{folder.image}}\" alt=\"\" />\r\n                            </mat-card>\r\n                          </div>\r\n                        </div>\r\n                      </mat-card>\r\n                    </div>\r\n                  </div>\r\n                  <div style=\"text-align: center;padding-top: 20%;\">\r\n                    <mat-hint class=\"insideTitle\">{{folder.title }}</mat-hint>\r\n                  </div>\r\n                </mat-card>\r\n              </ng-container>\r\n            </div>\r\n          </div>\r\n          <div fxLayout=\"row\" fxLayoutAlign=\"center center\" style=\"padding: 0% 2%;\">\r\n            <div class=\"full-width\" style=\"padding: 2% 0% 3.5% 0%;\">\r\n              <button mat-flat-button (click)=\"goToOperations()\"\r\n                [ngClass]=\"contiueButton() ? 'buttonActive' : 'buttonPassive'\">{{continue}}</button>\r\n            </div>\r\n          </div>\r\n        </mat-card-content>\r\n      </mat-card>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n","import { Country } from '@angular-material-extensions/select-country';\r\nimport { Component, Input, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl, FormBuilder, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { DialogService, TokenObjects } from 'app/shared/services/Dialog/dialog.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { Toast } from 'ngx-toastr';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { getCurrencySymbol } from '@angular/common';\r\nimport { ChangeDetectorRef } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { ViewChild } from '@angular/core';\r\nimport { otpModel } from 'app/shared/models/otp.model';\r\nimport { OtpVerifyComponent } from '../otp-verify/otp-verify.component';\r\nimport { MatDialog } from '@angular/material/dialog';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-cash-deposit',\r\n  templateUrl: './cash-deposit.component.html',\r\n  styleUrls: ['./cash-deposit.component.scss']\r\n})\r\nexport class CashDepositComponent implements OnInit {\r\n  titleName: any = 'Cash Deposit';\r\n  cashdepositForm: FormGroup;\r\n  accType = ['Savings', 'Deposit'];\r\n  accountNum: string;\r\n  customerName = ['Jane Smith', 'John Smith'];\r\n  productCode = \"CHD\";\r\n  tokenOrigin = \"Kiosk\";\r\n  @Input() tokenResp: any;\r\n  // countryFormControl = new FormControl();\r\n  defaultValue: Country = {\r\n    name: 'Deutschland',\r\n    alpha2Code: 'DE',\r\n    alpha3Code: 'DEU',\r\n    numericCode: '276',\r\n    callingCode: '+49'\r\n  };\r\n  ifQRvariable = false;\r\n  cashDepositResponse: any;\r\n  accountBal: any;\r\n  phoneNumber: string;\r\n  errorStatus: number;\r\n  custAccountData: any;\r\n  countryValues: any;\r\n  accounttypeArray = [];\r\n  idList = [];\r\n  noList: any[];\r\n  accNum: any;\r\n  tokenObjects = new TokenObjects();\r\n  accNumber: any;\r\n  tokResponse: any;\r\n  tokenNum: any;\r\n  isedit: boolean = true;\r\n  estimatedTime: any;\r\n  transAmt: any;\r\n  balance: string;\r\n  oTpModel = new otpModel();\r\n  enableContinue: boolean = true;\r\n  showAccountNum : boolean = true;\r\n  showAccoutType : boolean = true;\r\n  curr: string;\r\n  transAmount: string;\r\n  currencyImage: any = \"\";\r\n  custID: any;\r\n  custHolderName: string;\r\n  qrData: any;\r\n  customerID: any;\r\n  appointmentId:any;\r\n  userName: string;\r\n  denomCodeArray: any[] = [\r\n    { key: 'count2000', value: 2000 },\r\n    { key: 'count500', value: 500 },\r\n    { key: 'count200', value: 200 },\r\n    { key: 'count100', value: 100 },\r\n    { key: 'count50', value: 50 },\r\n    { key: 'count20', value: 20 },\r\n    { key: 'count10', value: 10 },\r\n    { key: 'count1', value: 1 }\r\n\r\n  ];\r\n  totalAmount: any;\r\n  transamount: any;\r\n  a: any;\r\n  branchNameFromLogin: string;\r\n  branchName: string;\r\n  arrayAccountBranch: any;\r\n  accBranch: any;\r\n  branchData: any;\r\n  trasactionBranches: any;\r\n  branch: any;\r\n  hideDetails:boolean=false;\r\n  totalTransAmount: number;\r\n  chargeDetails: any;\r\n  accountCurrency: any;\r\n  \r\n\r\n  @ViewChild('cdForm') cdForm: NgForm;\r\n  // accountNoList: any[];\r\n  accountNoList = [];\r\n  selectedAccountInfo: any;\r\n  custValidation: string;\r\n  accountNumber: string;\r\n  custmerID: any;\r\n  phonenum: any;\r\n  validateStatus: string;\r\n  cashdepositValues: any;\r\n  cashdeposiform: any;\r\n  cashdepositType: any;\r\n  isLoading = false;\r\n  enableBtn: boolean = true;\r\n  enableBtn1: boolean = false;\r\n  accountNum1: any[];\r\n  filteredAccoun: any[];\r\n  accountDropdown: boolean = false;\r\n  flag1: boolean = false;\r\n  denomRequired: any;\r\n  qrBranchCode: any;\r\n  custNameFromLogin: string;\r\n  selected: string;\r\n  transactionId: any;\r\n  transactionStatus: any;\r\n  cashData: any;\r\n  transBranch: string;\r\n  constructor(\r\n    private router: Router,\r\n    private formBuilder: FormBuilder,\r\n    private dialogService: DialogService,\r\n    private apiService: ApiService,\r\n    private dialog: MatDialog,\r\n    private cdr:ChangeDetectorRef,\r\n\r\n    private ls: LocalStoreService, private snack: MatSnackBar, private changeDef: ChangeDetectorRef) { }\r\n  ngOnInit(): void {\r\n    this.phoneNumber = localStorage.getItem(\"phonenumFromLogin\");\r\n    this.appointmentId = this.ls.getItem(\"TransactionType\");\r\n    this.transBranch=localStorage.getItem(\"TRANSACTIONBRANCH\") \r\n    this.custValidation = localStorage.getItem(\"customerValidation\");\r\n    this.custNameFromLogin = localStorage.getItem(\"FromLogin\");\r\n    if(this.custValidation == \"New Customer\"){\r\n      this.showAccountNum = false;\r\n      this.showAccoutType = false;\r\n    } \r\n    if(this.custNameFromLogin!=null){\r\n      this.showAccountNum=false;\r\n    } \r\n    this.qrData = JSON.parse(JSON.parse(localStorage.getItem('scannerData')));\r\n    console.log(\"QRData\", this.qrData);\r\n    this.cashdepositForm = this.formBuilder.group({\r\n      totalAmount: ['', Validators.required],\r\n      transactionId: ['', [Validators.required]],\r\n      customerId: ['', [Validators.required]],\r\n      accountType: ['', [Validators.required]],\r\n      accountNumber: ['', [Validators.required]],\r\n      holderName: ['', [Validators.required]],\r\n      accountCurrency: ['', [Validators.required]],\r\n      transactionCurrency: ['', [Validators.required]],\r\n      totalChargeAmount:['', [Validators.required]],\r\n      totalTransactionAmount:['',[Validators.required]],\r\n      transactionAmount: ['', [Validators.required, Validators.min(.1)]],\r\n      productCode: ['CHD', [Validators.required]],\r\n      tokenOrigin: ['Kiosk', [Validators.required]],\r\n      // audit\r\n      createdBy: ['', [Validators.required]],\r\n      createdTime: ['', [Validators.required]],\r\n      modifiedBy: ['', [Validators.required]],\r\n      modifiedTime: ['', [Validators.required]],\r\n      recordStatus: ['', [Validators.required]],\r\n      authStatus: ['', [Validators.required]],\r\n      version: ['', [Validators.required]],\r\n      accountBranch: ['', [Validators.required]],\r\n      transactionBranch: ['', [Validators.required]]\r\n    });\r\n    // this.cashdepositForm.get('transactionBranch').setValue(this.branchName);\r\n    if (this.phoneNumber  && this.custNameFromLogin==null && this.appointmentId==null) {\r\n      this.ifQRvariable = false;\r\n      this.gettingallTansactionDetails(this.phoneNumber);\r\n    }\r\n    // else {\r\n      if(this.qrData!=null){\r\n      this.ifQRvariable = true;\r\n      console.log(\"Account\", this.qrData.accountId);\r\n      this.cashdepositForm.controls.holderName.setValue(this.qrData.holderName);\r\n      this.cashdepositForm.controls.accountType.setValue(this.qrData.accountType);\r\n      this.cashdepositForm.controls.accountNumber.setValue(this.qrData.accountId);\r\n      this.getChargeDetails(this.qrData.accountId,'');\r\n      this.cashdepositForm.controls.transactionAmount.setValue(this.qrData.transactionAmount);\r\n      this.cashdepositForm.controls.accountCurrency.setValue(this.qrData.accountCurrency);\r\n      this.cashdepositForm.controls.transactionCurrency.setValue(this.qrData.transactionCurrency);\r\n      this.accountBal = this.qrData.accountBalance;\r\n      this.customerID = this.qrData.customerId;\r\n      this.currencyImage = 'currency-flag-' + this.qrData.accountCurrency.toLowerCase();\r\n      this.currencyImage = 'currency-flag-' + this.qrData.transactionCurrency.toLowerCase();\r\n      if(this.qrData.transactionBranch !=null && this.qrData.transactionBranch !=''){\r\n        this.cashdepositForm.controls.transactionBranch.setValue(this.qrData.transactionBranch);\r\n      }else{\r\n        this.cashdepositForm.controls.transactionBranch.setValue('Kasturi Nagar');\r\n      }\r\n      this.getAccountBranch();\r\n    }\r\n\r\n    this.getCountrynameValues();\r\n    this.getAccountBranch();\r\n    this.gettransactionBranch(\"account_branch\");\r\n    this.getBankInformation(\"KN\")\r\n    if(this.appointmentId.data.appointmentId){\r\n      this.cashWithdrawlData();\r\n    }\r\n  }\r\n  fetchByAccountNum(accNum){\r\n    this.cashdepositForm.controls.transactionAmount.reset();\r\n    this.cashdepositForm.controls.totalTransactionAmount.setValue(this.cashdepositForm.controls.totalChargeAmount.value);\r\n    console.log(\"Account Numebr\",accNum);\r\n    // this.isLoading = true;\r\n    this.apiService.fetchByaccNum(accNum).subscribe((res: any) => {\r\n      console.log('Account Number Rsp', res);\r\n      this.getChargeDetails(accNum,'');\r\n      // this.isLoading = false;\r\n      this.userName = res.accHolderName;\r\n      this.accountBal = res.accBalance;\r\n      this.custmerID = res.customerId;\r\n      this.accountNumber = res.accountId;\r\n      this.accountCurrency = res.accountCurrency;\r\n      this.curr = getCurrencySymbol(res.currency, \"narrow\");\r\n      this.cashdepositForm.controls.accountType.setValue(res.accountType);\r\n      this.cashdepositForm.controls.accountCurrency.setValue(res.currency);\r\n      this.cashdepositForm.controls.accountBranch.setValue(res.accountBranch);\r\n      this.cashdepositForm.controls.holderName.setValue(this.userName); \r\n      this.getCountrynameValues();\r\n      this.currencyImage = 'currency-flag-'+res.currency.toLowerCase();\r\n      this.currencyImage = 'currency-flag-'+res.currency.toLowerCase();\r\n      this.cashdepositForm.controls.transactionCurrency.setValue(res.currency);\r\n      this.custAmountBal(accNum);\r\n      this.cashdepositForm.controls.transactionBranch.setValue('Kasturi Nagar');\r\n      this.apiService.fetchByaccDeatilsoncustId(res.customerId).subscribe((resp: any) => {\r\n        this.phonenum = resp[0].phoneNumber;\r\n        localStorage.setItem('otpPhoneNum', this.phonenum);\r\n      }) \r\n  });\r\n\r\n}\r\n  getCountrynameValues() {\r\n    this.apiService.getCountryValues().subscribe((allCountryValues: any) => {\r\n      this.countryValues = allCountryValues;\r\n    });\r\n  }\r\n\r\n  gettransactionBranch(key: string) {\r\n    this.apiService.getTransactionBranch(key)\r\n      .subscribe(branches => {\r\n        console.log('branches :: ', branches);\r\n        this.trasactionBranches = branches;\r\n\r\n      })\r\n  }\r\n  getAccountBranch() {\r\n    this.apiService.getBranchforKiosk()\r\n      .subscribe((data: any) => {\r\n        this.branchData = data;\r\n        console.log(this.branchData);\r\n        data.forEach((element, index) => {\r\n          this.branch = data[index].branchName;\r\n          console.log(this.branch);\r\n          // this.cashdepositForm.controls.accountBranch.setValue(this.branch);\r\n        });\r\n      });\r\n  }\r\n  onCountrySelected($event: Country): void {\r\n    console.log($event);\r\n  }\r\n  goToServiceScreens() {\r\n    if(this.appointmentId){\r\n    if(this.appointmentId.data.appointmentId){\r\n      this.router.navigateByUrl('/sessions/login');\r\n      localStorage.removeItem(\"FromLogin\")\r\n      localStorage.removeItem(\"TransactionType\")\r\n      localStorage.removeItem(\"customerId\")\r\n      localStorage.removeItem(\"phonenumFromLogin\")\r\n      localStorage.removeItem(\"customerValidation\")\r\n      localStorage.removeItem(\"otpPhoneNum\")\r\n      localStorage.removeItem(\"AccountBal\")\r\n      localStorage.removeItem(\"AccountNumber\")\r\n      localStorage.removeItem(\"ProductCode\")\r\n      localStorage.removeItem(\"tokenNumer\")\r\n      localStorage.removeItem(\"estimatedTiming\")\r\n      localStorage.removeItem(\"userId\")\r\n      localStorage.removeItem(\"scannerData\")\r\n      localStorage.removeItem(\"custholderName\")\r\n    }\r\n  }\r\n    else{\r\n      this.router.navigateByUrl('/others/services');\r\n    }\r\n    // this.dialogService.tokenGenerationDialog();\r\n  }\r\n\r\n  gettingallTansactionDetails(phoneNumber) {\r\n    this.phoneNumber = localStorage.getItem(\"phonenumFromLogin\");\r\n    this.apiService.gettingTransactionDetails(this.phoneNumber).subscribe((allTransactionResp: any) => {\r\n      console.log(\"All Transaction Details\", allTransactionResp);\r\n      this.userName = (allTransactionResp.firstName ? allTransactionResp.firstName + ' ' : ' ') +\r\n        (allTransactionResp.middleName ? allTransactionResp.middleName + ' ' : ' ') +\r\n        (allTransactionResp.lastName ? allTransactionResp.lastName : ' ');\r\n      this.cashdepositForm.controls.holderName.setValue(this.userName);\r\n      this.custID = allTransactionResp.customerId;\r\n      // this.setBalance(allTransactionResp.custAccount);\r\n      this.custAccountData = allTransactionResp.custAccount;\r\n      this.accounttypeArray = [...this.custAccountData].filter(({ accountType }, index) =>\r\n        ![...this.custAccountData].map(obj => obj.accountType).includes(accountType, index + 1))\r\n        for(let j = 0; j < this.custAccountData.length; j++){\r\n          if(this.custAccountData[j].status == 'APPROVED'){\r\n            this.accountNoList.push(this.custAccountData[j]);  \r\n          }\r\n        }\r\n      if (this.custAccountData && this.accountNoList.length<=1) {\r\n        this.accountDropdown=false;\r\n        this.hideDetails=true;\r\n        const accTyp = allTransactionResp.custAccount[0].accountType;\r\n        this.cashdepositForm.controls.accountType.setValue(accTyp);\r\n        this.custAccountNumber(this.accountNoList[0]);\r\n      }else{\r\n        this.accountDropdown=true;\r\n        this.hideDetails=true;\r\n        const accTyp = allTransactionResp.custAccount[0].accountType;\r\n        this.cashdepositForm.controls.accountType.setValue(accTyp);\r\n        this.custAccountNumber(allTransactionResp.custAccount[0]); \r\n      }\r\n      \r\n    });\r\n  }\r\n  getAccountType(event:any){\r\n    this.cashdepositForm.controls.transactionAmount.reset();\r\n    this.cashdepositForm.controls.totalTransactionAmount.setValue(this.cashdepositForm.controls.totalChargeAmount.value);\r\n    this.accountNoList=[];\r\n    console.log(event);\r\n    this.isedit=false;\r\n    this.accountNum1=[...this.custAccountData].filter((accounNum,index)=>{\r\n      return accounNum.accountType==event;\r\n    });console.log(this.accountNum1)\r\n    // this.accountNoList=this.accountNum1\r\n    // this.accountNoList=this.accountNum1.map((acccount)=>\r\n    // {\r\n    //   return acccount.accountId\r\n    // })\r\n    for(let i = 0; i < this.custAccountData.length; i++){\r\n      if(this.custAccountData[i].status == 'APPROVED' && this.custAccountData[i].accountType == event){\r\n        this.accountNoList.push(this.custAccountData[i].accountId);    \r\n      }\r\n    }\r\n    console.log(this.accountNoList);\r\n    if(this.accountNoList.length<=1){\r\n      this.flag1=false; \r\n      // this.cashdepositForm.controls.accountNumber.setValue(this.accountNoList[0]);\r\n      this.getData(this.accountNoList[0])   \r\n    }\r\n    else{\r\n      this.getData(this.accountNoList[0]);\r\n      this.flag1=true;   \r\n    }\r\n    this.getChargeDetails(this.accountNoList[0],'');\r\n   \r\n  }\r\n\r\n  getData(custNum){\r\n    this.hideDetails=true;\r\n    console.log(custNum)\r\n    let val=this.accountNum1.filter((value)=>{\r\n    return value.accountId==custNum}\r\n    )\r\n    console.log(val)\r\n    this.idList = [...this.custAccountData].filter(item => item.accountType === val[0].accountType);\r\n    this.cashdepositForm.controls.accountCurrency.setValue(val[0].accountCurrency);\r\n   this.cashdepositForm.controls.accountBranch.setValue(this.branch);\r\n   this.selected=val[0].accountCurrency;\r\n   this.curr = getCurrencySymbol(val[0].accountCurrency, \"narrow\");\r\n   this.cashdepositForm.controls.transactionCurrency.setValue(val[0].accountCurrency);\r\n  \r\n   this.currencyImage = 'currency-flag-'+val[0].accountCurrency.toLowerCase();\r\n   console.log('data :: ',this.idList[0]);\r\n  this.accountBal = this.idList[0].amount;\r\n  console.log(this.accountBal);\r\n  localStorage.setItem(\"AccountBal\",this.accountBal);\r\n  // this.cashdepositForm.controls.accountNumber.setValue(this.idList[0].accountId);\r\n  this.custAmountBal(this.idList[0].accountId);\r\n\r\n  this.cashdepositForm.controls.accountNumber.setValue(val[0].accountId);\r\n  this.getChargeDetails(val[0].accountId,'')\r\n  this.cashdepositForm.controls.accountBranch.setValue(val[0].accountBranch);\r\n  }\r\n  custAccountNumber(custype) {\r\n    console.log(custype);\r\n    this.isedit = false;\r\n    this.idList = [...this.custAccountData].filter(item => item.accountType === custype.accountType);\r\n    const defaultId = this.idList ? this.idList[0] : null;\r\n    // this.cashdepositForm.controls.accountNumber.setValue(defaultId);\r\n\r\n    this.accountNoList = [];\r\n    for (let i = 0; i < this.idList.length; i++) {\r\n      if (this.idList[i].status == 'APPROVED') {\r\n        this.accountNoList.push(this.idList[i].accountId)\r\n      }\r\n    }\r\n    console.log(this.accountNoList);\r\n    if(this.accountNoList.length<=1){\r\n      // this.cashwithdrawForm.controls.accountNumber.patchValue(this.accountNoList[0]);\r\n      this.flag1=false; \r\n      // this.getData(this.accountNoList[0]);\r\n      this.cashdepositForm.controls.accountNumber.setValue(this.accountNoList[0]);\r\n    }\r\n    else{\r\n      this.cashdepositForm.controls.accountNumber.setValue(this.accountNoList[0]);\r\n      this.flag1=true;   \r\n    }\r\n \r\n    this.cashdepositForm.controls.accountCurrency.setValue(custype.accountCurrency);\r\n    this.cashdepositForm.controls.accountBranch.setValue(this.branch);\r\n    //this.cashdepositForm.controls.transactionAmount.setValue(custype.amount);\r\n    // this.cashdepositForm.controls.accountType.setValue(defaultId);\r\n    this.selected=custype.accountCurrency;\r\n    this.curr = getCurrencySymbol(custype.accountCurrency, \"narrow\");\r\n    // this.accountBal = this.idList[0].amount;\r\n    this.cashdepositForm.controls.transactionCurrency.setValue(custype.accountCurrency);\r\n    console.log(this.cashdepositForm.value.accountCurrency)\r\n    this.currencyImage = 'currency-flag-' + custype.accountCurrency.toLowerCase();\r\n    console.log(this.accountBal);\r\n    localStorage.setItem(\"AccountBal\", this.accountBal);\r\n   // this.cashdepositForm.controls.accountNumber.setValue(this.idList[0].accountId);\r\n    this.custAmountBal(this.accountNoList[0]);\r\n    this.cashdepositForm.controls.accountBranch.setValue(custype.accountBranch);\r\n    this.getChargeDetails(this.accountNoList[0],custype.amount);\r\n  }\r\n  custAmountBal(custNum) {\r\n    console.log(custNum);\r\n    var account = this.idList.filter(function (record) {\r\n      if (record.accountId == custNum) {\r\n        return record;\r\n      }\r\n    });\r\n    console.log(account);\r\n    this.accNum = account[0].accountId;\r\n    this.accountBal = account[0].amount;\r\n    this.selectedAccountInfo = account[0];\r\n    console.log(this.selectedAccountInfo);\r\n  }\r\n  setBalance(accountBalance, index = 0) {\r\n    this.accountBal = accountBalance[index].currentBalance ? accountBalance[index].currentBalance : null;\r\n  }\r\n  onSaveofcashDeposit(formData, type, cdForm) {\r\n    formData.transactionBranch = this.transBranch;\r\n    console.log(\"Data\",formData, type, cdForm )\r\n    if(this.qrData){\r\n      if(this.qrData.transactionBranch){\r\n        this.apiService.fetchBranchInfoByBranchName(this.qrData.transactionBranch).subscribe(response=>{\r\n          this.qrBranchCode=response;\r\n          \r\n        })\r\n      }\r\n    }\r\n    let denominationData: any = {};\r\n    let denominationDataArray: any[] = [];\r\n    if(this.denomRequired == 'yes'){\r\n    for (let i = 0; i < this.denomCodeArray.length; i++) {\r\n      if (cdForm.value[this.denomCodeArray[i].key]) {\r\n        // denominationData.transactionId = this.cashdepositFor;\r\n        denominationData.denominationKey = this.denomCodeArray[i].value;\r\n        denominationData.denominationValue = +cdForm.value[this.denomCodeArray[i].key];\r\n        denominationData.currency = this.cashdepositForm.value.transactionCurrency;\r\n        // denominationData.amountAvailiable = 15200 - (cdForm.value[this.denomCodeArray[i].key] * this.denomCodeArray[i].value);\r\n        denominationDataArray.push(denominationData);\r\n        console.log(denominationDataArray)\r\n        denominationData = {};\r\n      }\r\n    }\r\n  }\r\n    formData.tokenBranch = \"KN\";\r\n    if(this.qrData){\r\n      if(this.qrData.transactionBranch){\r\n        formData.tokenBranch = this.qrBranchCode.transactionBranch;\r\n      }\r\n    }\r\n    if (!this.ifQRvariable) {\r\n          this.accountNum = JSON.stringify(this.selectedAccountInfo.accountId);\r\n          formData.transactionCurrency = formData.transactionCurrency;\r\n          formData.accountNumber = this.selectedAccountInfo.accountId;;\r\n          formData.customerId = this.custID;\r\n          formData.productCode = this.productCode;\r\n          formData.tokenOrigin = this.tokenOrigin;\r\n          formData.accountBalance = this.accountBal;\r\n          // console.log(formData.transactionCurrency);\r\n          formData.transactionAmount = formData.transactionAmount.replace(/,/g, '');\r\n          formData.accountType = formData.accountType;\r\n          if(this.denomRequired == 'yes'){\r\n          formData.denomination = denominationDataArray;\r\n          }\r\n\r\n          localStorage.setItem(\"AccountNumber\", this.accountNum);\r\n          localStorage.setItem(\"ProductCode\", this.productCode);\r\n    }\r\n    else {\r\n      // debugger;\r\n      formData.customerId = this.custID;\r\n      formData.accountType = formData.accountType;\r\n      formData.accountNumber = formData.accountNumber;\r\n      formData.holderName = formData.holderName;\r\n      formData.accountCurrency = formData.accountCurrency;\r\n      formData.transactionCurrency = formData.transactionCurrency;\r\n      // formData.transactionAmount = formData.transactionAmount.replace(/,/g, '');\r\n      formData.transactionAmount = formData.transactionAmount;\r\n      formData.productCode = this.productCode;\r\n      formData.tokenOrigin = this.tokenOrigin;\r\n      formData.accountBalance = this.accountBal;\r\n      if(this.denomRequired == 'yes'){\r\n      formData.denomination = denominationDataArray;\r\n      }\r\n    }\r\n    console.log(\"data::\",this.appointmentId)\r\n    if(this.appointmentId && this.appointmentId.data){\r\n      formData.transactionId = this.appointmentId.data.transactionId;\r\n      formData.transactionStatus = this.appointmentId.data.transactionStatus;\r\n    }\r\n    formData.totalAmount = formData.totalAmount.replace(/,/g, '');\r\n    this.apiService.saveofCashDeposit(formData).subscribe(cashDepositResp => {\r\n      console.log(\"Response Success\", cashDepositResp);\r\n      this.cashDepositResponse = cashDepositResp;\r\n      this.tokenNum = this.cashDepositResponse.tokenNumber;\r\n      this.estimatedTime = this.cashDepositResponse.estimatedWaitTime;\r\n      localStorage.setItem(\"tokenNumer\", this.tokenNum);\r\n      localStorage.setItem(\"estimatedTiming\", this.estimatedTime);\r\n      this.enableContinue = false;\r\n      if (this.cashDepositResponse) {\r\n        this.dialogService.tokenGenerationDialog();\r\n      }\r\n    });\r\n  }\r\n  \r\n  // OTP And Save\r\n  getOTP(formData, type, cdForm){\r\n    this.cashdepositValues =formData;\r\n    this.cashdeposiform = type;\r\n    this.cashdepositType = cdForm;\r\n    this.oTpModel.source = 'customer';\r\n    this.oTpModel.source_key = 'mobile';\r\n    this.oTpModel.source_value = this.phonenum;\r\n    let amount= 50000;\r\n    let transamountwithoutcomma=this.cashdepositValues.transactionAmount.replace(/,/g, \"\");\r\n    console.log( transamountwithoutcomma);\r\n    if(transamountwithoutcomma > amount){\r\n      this.apiService.getOtp(this.oTpModel).subscribe(otpResp => {\r\n        if (otpResp) {\r\n          this.openDialogOTP(this.phonenum);\r\n          this.snack.open(\"An OTP has been sent to the Registered Mobile Number.\" , \"\", {\r\n            duration: 4000,\r\n            verticalPosition: 'top',\r\n            horizontalPosition: 'right'\r\n          });\r\n        }\r\n      })\r\n    }\r\n    else{\r\n      this.getOTPforSave( this.cashdepositValues,this.cashdeposiform,this.cashdepositType);\r\n    }\r\n  }\r\n  getOTPforSave(formData, type, cdForm){\r\n    formData.transactionBranch = this.transBranch;\r\n    let denominationData: any = {};\r\n    let denominationDataArray: any[] = [];\r\n    if(this.denomRequired == 'yes'){\r\n    for (let i = 0; i < this.denomCodeArray.length; i++) {\r\n      if (cdForm.value[this.denomCodeArray[i].key]) {\r\n        denominationData.denominationKey = this.denomCodeArray[i].value;\r\n        denominationData.denominationValue = +cdForm.value[this.denomCodeArray[i].key];\r\n        denominationData.currency = this.cashdepositForm.value.transactionCurrency;\r\n        // denominationData.amountAvailiable = 15200 - (cdForm.value[this.denomCodeArray[i].key] * this.denomCodeArray[i].value);\r\n        denominationDataArray.push(denominationData);\r\n        console.log(denominationDataArray)\r\n        denominationData = {};\r\n      }\r\n    }\r\n  }\r\n    if(this.custValidation == \"New Customer\"){\r\n      console.log(\"customer\",this.custmerID);\r\n     this.transactionId = localStorage.getItem('transactionId');\r\n     this.transactionStatus = localStorage.getItem('transactionStatus'); \r\n     this.accountNum = formData.accountNumber;\r\n     formData.customerId = this.custmerID?this.custmerID:0;\r\n     formData.accountType = formData.accountType;\r\n     formData.accountNumber = this.accountNumber;\r\n     formData.holderName = formData.holderName;\r\n     formData.accountCurrency = formData.accountCurrency;\r\n     formData.transactionCurrency = formData.transactionCurrency;\r\n     formData.transactionAmount = formData.transactionAmount.replace(/,/g, '');\r\n     formData.productCode = this.productCode;\r\n     formData.tokenOrigin = this.tokenOrigin;\r\n     formData.accountBalance = this.accountBal;\r\n     if(this.denomRequired == 'yes'){\r\n     formData.denomination = denominationDataArray;\r\n     }\r\n    }\r\n    formData.tokenBranch = \"KN\";\r\n    if(this.appointmentId && this.appointmentId.data){\r\n      formData.transactionId = this.appointmentId.data.transactionId;\r\n      formData.transactionStatus = this.appointmentId.data.transactionStatus;\r\n    }\r\n    formData.customerId = this.custmerID?this.custmerID:0;\r\n    formData.accountType = formData.accountType;\r\n    formData.accountNumber = this.accountNumber;\r\n    formData.holderName = formData.holderName;\r\n    formData.accountCurrency = formData.accountCurrency;\r\n    formData.transactionCurrency = formData.transactionCurrency;\r\n    formData.transactionAmount = formData.transactionAmount.replace(/,/g, '');\r\n    formData.productCode = this.productCode;\r\n    formData.tokenOrigin = this.tokenOrigin;\r\n    formData.accountBalance = this.accountBal;\r\n  console.log(formData.transactionId,formData.transactionStatus);\r\n  this.apiService.saveofCashDeposit(formData).subscribe(cashDepositResp => {\r\n  console.log(\"Response Success\", cashDepositResp);\r\n  this.cashDepositResponse = cashDepositResp;\r\n  this.tokenNum = this.cashDepositResponse.tokenNumber;\r\n  this.estimatedTime = this.cashDepositResponse.estimatedWaitTime;\r\n  localStorage.setItem(\"tokenNumer\", this.tokenNum);\r\n  localStorage.setItem(\"estimatedTiming\", this.estimatedTime);\r\n  this.enableContinue = false;\r\n  if (this.cashDepositResponse) {\r\n    this.dialogService.tokenGenerationDialog();\r\n  }\r\n});   \r\n  }\r\n  openDialogOTP(numbr) {\r\n    const dialogRef = this.dialog.open(OtpVerifyComponent, {\r\n      data: { number: numbr, type: \"numbr\" },\r\n      disableClose: true,\r\n    });\r\n    dialogRef.afterClosed().subscribe(submit => {\r\n      if(submit){\r\n        this.getOTPforSave( this.cashdepositValues,this.cashdeposiform,this.cashdepositType);\r\n      }\r\n     });\r\n  }\r\n\r\n  OnInput(event: any) {\r\n    this.transAmt = event.target.value;\r\n    console.log(event.target.value);\r\n    this.totalAmount = 0;\r\n    // comma separator using changeDetector\r\n    const savedInput = this.transAmount;\r\n    // this.transAmount = '';\r\n    // this.changeDef.detectChanges();\r\n    let lastCharIsPoint = false;\r\n    if (savedInput.charAt(savedInput.length - 1) === '.') {\r\n      lastCharIsPoint = true;\r\n    }\r\n    const num = savedInput.replace(/[^0-9.]/g, '');\r\n    this.transAmt = Number(num)||'';\r\n    this.transAmount = this.transAmt.toLocaleString('en-IN');\r\n    if (lastCharIsPoint) {\r\n      this.transAmount = this.transAmount.concat('.');\r\n    }\r\n    this.changeDef.detectChanges();\r\n\r\n    this.balance= localStorage.getItem(\"AccountBal\");\r\n    if(parseFloat(this.balance) < parseFloat(this.transAmt)){\r\n      console.log(\"Bigger\")\r\n      this.snack.open(`Transaction Amount should not exceed than Account Balance`, 'OK', {\r\n        duration: 2000,\r\n        verticalPosition: 'top',\r\n        horizontalPosition: 'right'\r\n      });\r\n      this.enableContinue=false;\r\n    }\r\n    else{\r\n      this.enableContinue=true;\r\n    }\r\n    this.totalTransAmount=Number(this.transAmt) + Number(this.chargeDetails?this.chargeDetails[0].amount:'');\r\n    this.cashdepositForm.controls.totalTransactionAmount.setValue(this.totalTransAmount);\r\n    this.cdr.markForCheck();\r\n    this.cdr.detectChanges();\r\n  }\r\n\r\n  clicked(event) {\r\n    console.log(event);\r\n  }\r\n\r\n  addCurrencyImage(currency) {\r\n    return currency.toLowerCase();\r\n  }\r\n  onCountryChange(country) {\r\n    let currency = country.currencyCode;\r\n    this.currencyImage = 'currency-flag-' + currency.toLowerCase();\r\n  }\r\n\r\n  accountCurrencyImage(accountCurrency) {\r\n    return accountCurrency ? 'currency-flag-' + accountCurrency.toLowerCase() : '';\r\n  }\r\n  omit_number(event) {\r\n    var key;\r\n    key = event.charCode;\r\n    return ((key > 47 && key < 58));\r\n  }\r\n  totalAmountValue(cdForm) {\r\n    this.a = this.cashdepositForm.value.transactionAmount;\r\n    this.a = this.a.replace(/\\,/g, ''); // 1125, but a string, so convert it to number\r\n    this.a = parseInt(this.a, 10);\r\n\r\n    this.cashdepositForm.value.totalAmount =\r\n      ((cdForm.value.count2000 ? cdForm.value.count2000 * 2000 : 0) +\r\n        (cdForm.value.count500 ? cdForm.value.count500 * 500 : 0) +\r\n        (cdForm.value.count200 ? cdForm.value.count200 * 200 : 0) +\r\n        (cdForm.value.count100 ? cdForm.value.count100 * 100 : 0) +\r\n        (cdForm.value.count50 ? cdForm.value.count50 * 50 : 0) +\r\n        (cdForm.value.count20 ? cdForm.value.count20 * 20 : 0) +\r\n        (cdForm.value.count10 ? cdForm.value.count10 * 10 : 0) +\r\n        (cdForm.value.count1 ? cdForm.value.count1 * 1 : 0)\r\n      );\r\n    this.cashdepositForm.value.totalAmount = this.cashdepositForm.value.totalAmount;  \r\n    console.log(this.cashdepositForm.value.totalAmount)\r\n    console.log(this.cashdepositForm.value.transactionAmount);\r\n    this.transamount = this.cashdepositForm.value.transactionAmount;\r\n    this.totalAmount = this.cashdepositForm.value.totalAmount.toLocaleString(\"en-US\");\r\n    if (this.transamount != this.totalAmount) {\r\n      this.enableBtn = false;\r\n    } else {\r\n      this.enableBtn = true;\r\n    }\r\n\r\n    if((this.transamount > this.totalAmount) || (this.transamount < this.totalAmount)){\r\n      this.enableBtn1 = true;\r\n    }\r\n    else{\r\n      this.enableBtn1 = false;\r\n    }\r\n\r\n    this.cashdepositForm.controls.totalAmount.setValue(this.cashdepositForm.value.totalAmount);\r\n\r\n  }\r\n  cashWithdrawlData(){\r\n    this.apiService.getAppointmentId(this.appointmentId.data.appointmentId).subscribe((resp : any)=> {\r\n      console.log(\"resp ::\",resp);\r\n      this.cashData=resp.data;\r\n      this.custID=resp.data.customerId;\r\n      this.ifQRvariable = true;\r\n      this.cashdepositForm.controls.accountType.setValue(resp.data.accountType);\r\n      this.cashdepositForm.controls.accountBranch.setValue(resp.data.accountBranch);\r\n      this.cashdepositForm.controls.accountNumber.setValue(resp.data.accountNumber);\r\n      this.getChargeDetails(resp.data.accountNumber,resp.data.transactionAmount);\r\n      this.cashdepositForm.controls.accountCurrency.setValue(resp.data.accountCurrency);\r\n      this.cashdepositForm.controls.transactionCurrency.setValue(resp.data.transactionCurrency);\r\n      this.cashdepositForm.controls.transactionAmount.setValue(resp.data.transactionAmount);\r\n      this.currencyImage = 'currency-flag-'+resp.data.accountCurrency.toLowerCase();\r\n      this.currencyImage = 'currency-flag-'+resp.data.transactionCurrency.toLowerCase();\r\n      console.log(\"amount::\",this.cashdepositForm.controls.transactionAmount.value)\r\n  \r\n  \r\n    });\r\n  }\r\n  getChargeDetails(accountId,amount){\r\n    this.apiService.fetchChargeDetails(accountId).subscribe(resp => {\r\n  console.log(resp);\r\n  this.chargeDetails=resp;\r\n  this.cashdepositForm.controls.totalChargeAmount.setValue(this.chargeDetails?this.chargeDetails[0].amount:'');\r\n    });\r\n    if(this.cashData){\r\n    setTimeout(() => {\r\n      this.totalTransAmount=Number(this.cashData.transactionAmount) + Number(this.chargeDetails[0].amount);\r\n      this.cashdepositForm.controls.totalTransactionAmount.setValue(this.totalTransAmount);\r\n    }, 1000);\r\n    this.cdr.markForCheck();\r\n    this.cdr.detectChanges();\r\n  }\r\n  else{\r\n    console.log(this.chargeDetails)\r\n    amount=0;\r\n    console.log(amount);\r\n    setTimeout(() => {\r\n      this.totalTransAmount=Number(amount) + Number(this.chargeDetails?this.chargeDetails[0].amount:'');\r\n      console.log(this.totalTransAmount);\r\n      this.cashdepositForm.controls.totalTransactionAmount.setValue(this.totalTransAmount);\r\n    }, 1000);\r\n    this.cdr.markForCheck();\r\n    this.cdr.detectChanges();\r\n  }\r\n\r\n    // console.log(this.totalTransAmount);\r\n  \r\n  }\r\n  onclickofConfirm(cdForm) {\r\n    let denominationData: any = {};\r\n    let denominationDataArray: any[] = [];\r\n\r\n    for (let i = 0; i < this.denomCodeArray.length; i++) {\r\n      if (cdForm.value[this.denomCodeArray[i].key]) {\r\n        // denominationData.transactionId = this.cashdepositFor;\r\n        denominationData.denominationKey = this.denomCodeArray[i].value;\r\n        denominationData.denominationValue = +cdForm.value[this.denomCodeArray[i].key];\r\n        denominationData.currency = this.cashDepositResponse.value.transactionCurrency;\r\n        // denominationData.amountAvailiable = 15200 - (cdForm.value[this.denomCodeArray[i].key] * this.denomCodeArray[i].value);\r\n        denominationDataArray.push(denominationData);\r\n        console.log(denominationDataArray)\r\n        denominationData = {};\r\n      }\r\n    }\r\n  }\r\n  getBankInformation(branchCode:any){\r\n    this.apiService.fetchBankInfoByBranchCode(branchCode).subscribe(resp => {\r\n      console.log(resp)\r\n      this.denomRequired = resp.denomRequired\r\n      if(resp.denomRequired == 'yes'){\r\n        this.enableBtn = false;\r\n        this.enableBtn1 = false;\r\n       }\r\n      \r\n    })\r\n  }\r\n  formatAmount(amount) {\r\n    if(amount){\r\n      return amount && amount.toString().split('.')[0].length > 3 ? amount.toString().substring(0,amount.toString().split('.')[0].length-3).replace(/\\B(?=(\\d{2})+(?!\\d))/g, \",\") + \",\" + amount.toString().substring(amount.toString().split('.')[0].length-3): amount.toString();\r\n     }\r\n  }\r\n}","<div class=\"fullcard\">\r\n    <div fxLayout=\"row\">\r\n        <div fxFlex=\"cashdepositForm.get('transactionAmount').value > 0? 70% : 100%\">\r\n            <h6 class=\"h1\"><span style=\"color:grey;padding-right: 4px;\">Services</span> <b>></b> <span style=\"padding-left: 4px;\"><b>Cash Deposit</b></span></h6>\r\n            <mat-card class=\"chequecard topView\">\r\n                <mat-card-title style=\"padding: 2%;\">\r\n                    <div fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n                        <div>\r\n                            <mat-icon *ngIf=\"phoneNumber\" class=\"backIcon\" (click)=\"goToServiceScreens()\">\r\n                                keyboard_backspace</mat-icon>\r\n                        </div>\r\n                        &nbsp;&nbsp;\r\n                        <div class=\"card-title\">{{titleName}}</div>\r\n                    </div>\r\n                </mat-card-title>\r\n                <mat-card-content>\r\n                    <div class=\"full-width\" style=\"padding: 0% 0% 3% 2%;\">\r\n                        <form [formGroup]=\"cashdepositForm\">\r\n                            <div fxLayout=\"column\" fxLayoutGap=\"3%\" fxLayoutAlign=\"space-between none\">\r\n                                <div>\r\n                                    <div fxLayout=\"row wrap\" class=\"flex-container stretch\">\r\n                                        <ng-container>\r\n\r\n                                            <div fxFlex=\"25%\" fxFlex.xs=\"100%\" *ngIf=\"showAccountNum\" >\r\n                                                <mat-hint class=\"totalAmount\">Account Type*</mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <input matInput type=\"text\" *ngIf=\"phoneNumber && !accountDropdown\" [readonly]=\"true\"\r\n                                                        class=\"full-width\" formControlName=\"accountType\">\r\n                                                        <mat-select *ngIf=\"phoneNumber && accountDropdown\" formControlName=\"accountType\" \r\n                                                        (selectionChange)=\"getAccountType($event.value)\"\r\n                                                        style=\"background-color: #f9fafb;\"\r\n                                                        placeholder=\"Select Account Type\">\r\n                                                        <mat-option *ngFor=\"let type of accounttypeArray \"\r\n                                                            \r\n                                                            [value]=\"type.accountType\">{{type.accountType}}</mat-option>\r\n                                                    </mat-select>\r\n                                                    <!-- <mat-select *ngIf=\"phoneNumber && !accountDropdown\" formControlName=\"accountType\"\r\n                                                        placeholder=\"Select Account Type\" (selectionChange)=\"getAccountType($event.value)\"\r\n                                                        style=\"background-color: #f9fafb;\">\r\n                                                        <mat-option>select</mat-option>\r\n                                                        <mat-option *ngFor=\"let type of accounttypeArray \" (click)=\"custAccountNumber(type)\" [value]=\"type.accountType\"> {{type.accountType}}</mat-option>\r\n                                                    </mat-select> -->\r\n                                                </mat-card>\r\n                                            </div>\r\n\r\n                                        <!-- Account Number Fisrt -->\r\n                                            <div fxFlex=\"25%\" fxFlex.xs=\"100%\" *ngIf=\"!showAccountNum\" >\r\n                                                <mat-hint class=\"totalAmount\">Account Number*</mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <input matInput type=\"text\"  \r\n                                                        class=\"full-width\" formControlName=\"accountNumber\"\r\n                                                        (change)=\"fetchByAccountNum(cashdepositForm.get('accountNumber').value)\">\r\n                                                </mat-card>\r\n                                                    <!-- <mat-hint class=\"totalAmount\" *ngIf=\"!phoneNumber\" >Account Balance :{{curr }} {{accountBal | number: '2.' }}</mat-hint> -->\r\n                                                    <mat-hint class=\"totalAmount\" *ngIf=\"!showAccountNum\" >Account Balance\r\n                                                        :{{curr }} {{formatAmount(accountBal)}}</mat-hint>\r\n                                                    <br>\r\n                                                    <!-- <mat-hint  class=\"totalAmount\" *ngIf=\"!phoneNumber\"  [readonly]=\"true\"  formControlName=\"holderName\">Holder Name :{{userName}}</mat-hint> -->\r\n                                                    <mat-hint class=\"totalAmount\" *ngIf=\"!showAccountNum\" [readonly]=\"true\">\r\n                                                        Holder Name :{{userName}}</mat-hint>\r\n                                            </div>\r\n                                            <div fxFlex=\"25%\" fxFlex.xs=\"100%\" *ngIf=\"showAccountNum\"   >\r\n                                                <mat-hint class=\"totalAmount\">Account Number*</mat-hint>\r\n                                                <mat-card class=\"inputCard\" >\r\n                                                    <input matInput type=\"text\" *ngIf=\"!flag1\" [readonly]=\"true\"\r\n                                                        class=\"full-width\" formControlName=\"accountNumber\">\r\n\r\n                                                    <!-- <mat-select *ngIf=\"phoneNumber\" formControlName=\"accountNumber\"\r\n                                                        style=\"background-color: #f9fafb;\"> -->\r\n                                                    <mat-select *ngIf=\"flag1\" formControlName=\"accountNumber\" (selectionChange)=\"fetchByAccountNum($event.value)\"\r\n                                                        style=\"background-color: #f9fafb;\">\r\n                                                       \r\n                                                            <mat-option>select</mat-option>\r\n                                                            <mat-option *ngFor=\"let id of accountNoList \"  [value]=\"id\">{{id}}</mat-option>\r\n\r\n                                                    </mat-select>\r\n                                                </mat-card>\r\n                                                <!-- <mat-hint class=\"totalAmount\" *ngIf=\"!phoneNumber\" >Account Balance :{{curr }} {{accountBal | number: '2.' }}</mat-hint> -->\r\n                                                <mat-hint class=\"totalAmount\" *ngIf=\"hideDetails\">Account Balance\r\n                                                    : {{curr }}{{formatAmount(accountBal)}}</mat-hint>\r\n                                                <br>\r\n                                                <!-- <mat-hint  class=\"totalAmount\" *ngIf=\"!phoneNumber\"  [readonly]=\"true\"  formControlName=\"holderName\">Holder Name :{{userName}}</mat-hint> -->\r\n                                                <mat-hint class=\"totalAmount\" *ngIf=\"hideDetails\" [readonly]=\"true\">\r\n                                                    Holder Name : {{userName}}</mat-hint>\r\n                                            </div>\r\n                                            <div fxFlex=\"25%\" fxFlex.xs=\"100%\" *ngIf=\"!showAccountNum\" >\r\n                                                <mat-hint class=\"totalAmount\">Account Type*</mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <input matInput type=\"text\"  [readonly]=\"true\" \r\n                                                        class=\"full-width\" formControlName=\"accountType\">\r\n                                    \r\n                                                </mat-card>\r\n                                            </div>\r\n                                            <!-- <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                                <mat-hint class=\"totalAmount\">Holder Name*</mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <!-- <mat-select formControlName=\"holderName\"  style=\"background-color: #f9fafb;\" >\r\n                                                        <mat-option *ngFor=\"let holder of customerName;\" [value]=\"holder\">{{holder}}</mat-option>\r\n                                                    </mat-select> -->\r\n                                            <!-- <input matInput type=\"text\" *ngIf=\"!phoneNumber\"  [readonly]=\"true\" class=\"full-width\" formControlName=\"holderName\" >\r\n                                                    <input matInput type=\"text\" *ngIf=\"phoneNumber\"  [readonly]=\"true\" class=\"full-width\" formControlName=\"holderName\" >\r\n                                                </mat-card> -->\r\n                                            <!-- </div>  -->\r\n                                            \r\n\r\n                                            <div fxFlex=\"25%\" fxFlex.xs=\"100%\">\r\n                                                <mat-hint class=\"accountBranch\">Account Branch*</mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <input matInput *ngIf=\"!phoneNumber\" type=\"text\"\r\n                                                    [readonly]=\"true\" class=\"full-width\"\r\n                                                    formControlName=\"accountBranch\">\r\n\r\n                                                <input matInput *ngIf=\"phoneNumber\" type=\"text\"\r\n                                                    [readonly]=\"true\" class=\"full-width\"\r\n                                                    formControlName=\"accountBranch\">\r\n                                                </mat-card>\r\n                                                <mat-error\r\n                                                    *ngIf=\"cashdepositForm.get('accountBranch').touched && !cashdepositForm.get('accountBranch').valid\">\r\n                                                    Account Branch is Required!\r\n                                                </mat-error>\r\n                                            </div>\r\n                                        </ng-container>\r\n                                    </div>\r\n                                </div>\r\n                                <div>\r\n                                    <div fxLayout=\"row wrap\" class=\"flex-container stretch\">\r\n                                        <ng-container>\r\n                                            <div fxFlex=\"25%\" fxFlex.xs=\"100%\">\r\n                                                <mat-hint class=\"totalAmount\">Account Currency*</mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <div fxLayout=\"row wrap\" class=\"full-width\">\r\n                                                        <div fxFlex=\"25%\">\r\n\r\n                                                            <div *ngIf=\"ifQRvariable\"\r\n                                                                class=\"currency-flag {{isedit?accountCurrencyImage(cashdepositForm.controls['accountCurrency'].value):currencyImage}}\"></div>\r\n                                                            <div *ngIf=\"!ifQRvariable\"\r\n                                                                class=\"currency-flag {{!isedit?accountCurrencyImage(cashdepositForm.controls['accountCurrency'].value):currencyImage}}\">\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div fxFlex=\"75%\">\r\n                                                            <input matInput *ngIf=\"!phoneNumber\" type=\"text\"\r\n                                                                [readonly]=\"true\" class=\"full-width\" style=\"font-size:110%\"\r\n                                                                formControlName=\"accountCurrency\">\r\n\r\n                                                            <input matInput *ngIf=\"phoneNumber\" type=\"text\"\r\n                                                                [readonly]=\"true\" class=\"full-width\" style=\"font-size:110%\"\r\n                                                                formControlName=\"accountCurrency\">\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </mat-card>\r\n                                            </div>\r\n                                            <div fxFlex=\"25%\" fxFlex.xs=\"100%\" *ngIf=\"showAccountNum\">\r\n                                                <mat-hint class=\"totalAmount\">Transaction Currency* </mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <div fxLayout=\"row wrap\" class=\"full-width\">\r\n                                                        <div fxFlex=\"25%\">\r\n                                                            <div class=\"currency-flag {{currencyImage}}\"></div>\r\n                                                        </div>\r\n                                                        <div fxFlex=\"75%\">\r\n                                                            <input matInput type=\"text\" *ngIf=\"!phoneNumber\"\r\n                                                                [readonly]=\"true\" class=\"full-width\"\r\n                                                                formControlName=\"transactionCurrency\">\r\n\r\n                                                            <mat-select formControlName=\"transactionCurrency\"\r\n                                                                *ngIf=\"phoneNumber\"\r\n                                                                placeholder=\"Select Transaction Currency\"\r\n                                                                id=\"testSelect\" style=\"background-color: #f9fafb;\"\r\n                                                                [disabled]=\"isedit\">\r\n                                                                <mat-option\r\n                                                                    *ngFor=\"let country of countryValues; let i = index\"\r\n                                                                    (click)=\"onCountryChange(country)\" style=\"font-size:110%\"\r\n                                                                    [value]=\"country.currencyCode\">\r\n                                                                    <div fxLayout=\"row wrap\" class=\"full-width\">\r\n                                                                        <div fxFlex=\"15%\">{{country.currencyCode}}</div>\r\n                                                                        <div fxFlex=\"85%\">\r\n                                                                            <div\r\n                                                                                class=\"currency-flag currency-flag-{{addCurrencyImage(country.currencyCode)}} alignImage\">\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </mat-option>\r\n                                                            </mat-select>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </mat-card>\r\n                                            </div>\r\n                                            <div fxFlex=\"25%\" fxFlex.xs=\"100%\" *ngIf=\"!showAccountNum\">\r\n                                                <mat-hint class=\"totalAmount\">Transaction Currency* </mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <div fxLayout=\"row wrap\" class=\"full-width\">\r\n                                                        <div fxFlex=\"25%\">\r\n                                                            <div class=\"currency-flag {{currencyImage}}\"></div>\r\n                                                        </div>\r\n                                                        <div fxFlex=\"75%\">\r\n                                                            <mat-select formControlName=\"transactionCurrency\"\r\n                                                                placeholder=\"Select Transaction Currency\"\r\n                                                                id=\"testSelect\" style=\"background-color: #f9fafb;\"\r\n                                                                >\r\n                                                                <mat-option\r\n                                                                    *ngFor=\"let country of countryValues; let i = index\"\r\n                                                                    (click)=\"onCountryChange(country)\" style=\"font-size:110%\"\r\n                                                                    [value]=\"country.currencyCode\">\r\n                                                                    <div fxLayout=\"row wrap\" class=\"full-width\">\r\n                                                                        <div fxFlex=\"15%\">{{country.currencyCode}}</div>\r\n                                                                        <div fxFlex=\"85%\">\r\n                                                                            <div\r\n                                                                                class=\"currency-flag currency-flag-{{addCurrencyImage(country.currencyCode)}} alignImage\">\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </mat-option>\r\n                                                            </mat-select>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </mat-card>\r\n                                            </div>\r\n                                            <div fxFlex=\"25.5%\" fxFlex.xs=\"100%\" *ngIf=\"showAccountNum\">\r\n                                                <mat-hint class=\"totalAmount\">Transaction Amount*</mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <input matInput type=\"text\" *ngIf=\"!phoneNumber\" [readonly]=\"true\"\r\n                                                        class=\"full-width\" formControlName=\"transactionAmount\">\r\n                                                    <input matInput *ngIf=\"phoneNumber\" class=\"full-width\" #myRef\r\n                                                        [(ngModel)]=\"transAmount\" formControlName=\"transactionAmount\"\r\n                                                        [value]=\"transAmt | number: '1.'\" (keyup)=\"OnInput($event)\"\r\n                                                        (focus)=\"clicked($event)\" [readonly]=\"isedit\">\r\n                                                </mat-card>\r\n                                                <mat-error *ngIf=\"cashdepositForm.get('transactionAmount').errors?.min\">\r\n                                                    Amount must be greater than zero\r\n                                                </mat-error>\r\n                                            </div>\r\n                                            <div fxFlex=\"25.5%\" fxFlex.xs=\"100%\" *ngIf=\"!showAccountNum\">\r\n                                                <mat-hint class=\"totalAmount\">Transaction Amount*</mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <input matInput class=\"full-width\" #myRef\r\n                                                        [(ngModel)]=\"transAmount\" formControlName=\"transactionAmount\"\r\n                                                        [value]=\"transAmt | number: '2.'\" (keyup)=\"OnInput($event)\"\r\n                                                        (focus)=\"clicked($event)\" >\r\n                                                </mat-card>\r\n                                                <mat-error *ngIf=\"cashdepositForm.get('transactionAmount').errors?.min\">\r\n                                                    Amount must be greater than zero\r\n                                                </mat-error>\r\n                                            </div>\r\n                                            <div fxFlex=\"25%\" fxFlex.xs=\"100%\">\r\n                                                <mat-hint class=\"totalAmount\">Total Charge Amount*</mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <input matInput class=\"full-width\" readonly formControlName=\"totalChargeAmount\">\r\n                                                </mat-card>\r\n                                               \r\n                                            </div>\r\n                                            <div fxFlex=\"25%\" fxFlex.xs=\"100%\">\r\n                                                <mat-hint class=\"totalAmount\">Total Transaction Amount*</mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <input matInput class=\"full-width\" readonly formControlName=\"totalTransactionAmount\">\r\n                                                </mat-card>\r\n                                               \r\n                                            </div>\r\n                                            <div class=\"tooltip\">\r\n                                                <img width=\"80%\"\r\n                                            [src]=\"'assets/images/info.svg'\"/>\r\n                                                <div class=\"tooltiptext\">\r\n                                                    <p class=\"totalAmount textcolor\" style=\"margin-top:10px; margin-bottom:6px\">Transaction Amount:{{cashdepositForm.get('transactionAmount').value}} </p>\r\n                                                    <p class=\"totalAmount textcolor\">Total Charge Amount:{{cashdepositForm.get('totalChargeAmount').value}} </p>\r\n                                                    <hr/>\r\n                                                    <p class=\"totalAmount textcolor\" style=\"margin-right:10px ;\">Total Transaction Amount:{{cashdepositForm.get('totalTransactionAmount').value}} </p>\r\n                                                </div>\r\n                                            </div>\r\n                                        </ng-container>\r\n                                    </div>\r\n                                </div>\r\n                                <!-- <div>\r\n                                    <div fxLayout=\"row wrap\" class=\"flex-container stretch\">\r\n                                        <ng-container>\r\n                                            <div fxFlex=\"30%\" fxFlex.xs=\"100%\" style=\"padding: 0% 1%;\">\r\n                                                <button mat-flat-button *ngIf=\"phoneNumber\" class=\"buttonCancel full-width\"\r\n                                                    (click)=\"goToServiceScreens()\">CANCEL</button>\r\n                                            </div>\r\n                                            <div fxFlex=\"70%\" fxFlex.xs=\"100%\" style=\"padding: 0% 2%;\">\r\n                                                <button mat-flat-button class=\"buttonNext full-width\"\r\n                                                [disabled]=\"!enableContinue || !cashdepositForm.get('transactionAmount').valid \r\n                                                ||!cashdepositForm.get('transactionCurrency').valid\r\n                                                ||!cashdepositForm.get('accountType').valid\r\n                                                ||!cashdepositForm.get('holderName').valid\r\n                                                ||!cashdepositForm.get('accountNumber').valid\r\n                                                ||!cashdepositForm.get('accountCurrency').valid ||!cashdepositForm.get('totalAmount').valid\"\r\n\r\n                                                    (click)=\"onSaveofcashDeposit(cashdepositForm.value,ifQRvariable)\">CONTINUE</button>\r\n                                            </div>\r\n                                        </ng-container>\r\n                                    </div>\r\n                                </div> -->\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </mat-card-content>\r\n            </mat-card>\r\n        </div>\r\n        <div *ngIf=\"(denomRequired == 'yes') && (cashdepositForm.get('transactionAmount').value > 0 || transAmt > 0)\" fxFlex=\"30%\">\r\n            <form #cdForm=\"ngForm\">\r\n                <mat-card class=\"border-align\">\r\n                    <div fxLayout=\"row\" class=\"pH10 full-width\">\r\n\r\n                        <h4 class=\"title-Font\">Denomination</h4>\r\n                    </div>\r\n                    <div class=\"pH10 full-width\" id=\"denominationDiv\">\r\n                        <div class=\"paddingclass\" fxLayoutAlign=\"center center\"\r\n                            *ngIf=\"cashdepositForm.value.transactionCurrency == 'INR'\">\r\n                            <div fxFlex=\"20%\">\r\n                                <p class=\"quantityClass text-small\">2000</p>\r\n                            </div>\r\n                            <div fxFlex=\"10%\">\r\n                                <p class=\"operationTypeClass text-small\">x</p>\r\n                            </div>\r\n                            <div fxFlex=\"70%\">\r\n                                <mat-card class=\"inputCard\">\r\n                                    <div>\r\n                                        <input class=\"full-width inputClass\" type=\"text\"\r\n                                            (keyup)=\"totalAmountValue(cdForm)\" (keypress)=\"omit_number($event)\" matInput\r\n                                            name=\"count2000\" ngModel #count2000>\r\n                                    </div>\r\n                                </mat-card>\r\n                                <div class=\"pl10\">\r\n                                    <mat-error *ngIf=\"denominationlimit && count2000.value > denominationLimit[2000]\">\r\n                                        Please enter <= {{denominationLimit[2000]}} </mat-error> </div> </div> </div>\r\n                                            <div class=\"paddingclass\" fxLayoutAlign=\"start center\"\r\n                                            *ngIf=\"cashdepositForm.value.transactionCurrency == 'INR' || cashdepositForm.value.transactionCurrency == 'USD' || cashdepositForm.value.transactionCurrency == 'AED'\">\r\n                                            <div fxFlex=\"20%\">\r\n                                                <p class=\"quantityClass text-small\">500</p>\r\n                                            </div>\r\n                                            <div fxFlex=\"10%\">\r\n                                                <p class=\"operationTypeClass text-small\">x</p>\r\n                                            </div>\r\n                                            <div fxFlex=\"70%\">\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <input class=\"full-width inputClass\" type=\"text\"\r\n                                                        (keyup)=\"totalAmountValue(cdForm)\"\r\n                                                        (keypress)=\"omit_number($event)\" matInput name=\"count500\"\r\n                                                        ngModel #count500>\r\n                                                </mat-card>\r\n                                                <div class=\"pl10\">\r\n                                                    <mat-error\r\n                                                        *ngIf=\"denominationlimit && count500.value > denominationLimit[500]\">\r\n                                                        Please enter <= {{denominationLimit[500]}} </mat-error> </div>\r\n                                                            </div> </div> <div class=\"paddingclass\"\r\n                                                            fxLayoutAlign=\"start center\"\r\n                                                            *ngIf=\"cashdepositForm.value.transactionCurrency == 'INR'\">\r\n                                                            <div fxFlex=\"20%\">\r\n                                                                <p class=\"quantityClass text-small\">200</p>\r\n                                                            </div>\r\n                                                            <div fxFlex=\"10%\">\r\n                                                                <p class=\"operationTypeClass text-small\">x</p>\r\n                                                            </div>\r\n                                                            <div fxFlex=\"70%\">\r\n                                                                <mat-card class=\"inputCard\">\r\n                                                                    <input class=\"full-width inputClass\" type=\"text\"\r\n                                                                        (keyup)=\"totalAmountValue(cdForm)\"\r\n                                                                        (keypress)=\"omit_number($event)\" matInput\r\n                                                                        name=\"count200\" ngModel #count200>\r\n                                                                </mat-card>\r\n                                                                <div class=\"pl10\">\r\n                                                                    <mat-error\r\n                                                                        *ngIf=\"denominationlimit && count200.value > denominationLimit[200]\">\r\n                                                                        Please enter <= {{denominationLimit[200]}}\r\n                                                                            </mat-error> </div> </div> </div> <div\r\n                                                                            class=\"paddingclass\"\r\n                                                                            fxLayoutAlign=\"start center\"\r\n                                                                            *ngIf=\"cashdepositForm.value.transactionCurrency == 'INR' || cashdepositForm.value.transactionCurrency == 'USD' || cashdepositForm.value.transactionCurrency == 'AED'\">\r\n                                                                            <div fxFlex=\"20%\">\r\n                                                                                <p class=\"quantityClass text-small\">100\r\n                                                                                </p>\r\n                                                                            </div>\r\n                                                                            <div fxFlex=\"10%\">\r\n                                                                                <p\r\n                                                                                    class=\"operationTypeClass text-small\">\r\n                                                                                    x</p>\r\n                                                                            </div>\r\n                                                                            <div fxFlex=\"70%\">\r\n                                                                                <mat-card class=\"inputCard\">\r\n                                                                                    <input class=\"full-width inputClass\"\r\n                                                                                        type=\"text\"\r\n                                                                                        (keyup)=\"totalAmountValue(cdForm)\"\r\n                                                                                        (keypress)=\"omit_number($event)\"\r\n                                                                                        matInput name=\"count100\" ngModel\r\n                                                                                        #count100>\r\n                                                                                </mat-card>\r\n                                                                                <div class=\"pl10\">\r\n                                                                                    <mat-error\r\n                                                                                        *ngIf=\"denominationlimit && count100.value > denominationLimit[100]\">\r\n                                                                                        Please enter <=\r\n                                                                                            {{denominationLimit[100]}}\r\n                                                                                            </mat-error> </div> </div>\r\n                                                                                            </div> <div\r\n                                                                                            class=\"paddingclass\"\r\n                                                                                            fxLayoutAlign=\"start center\"\r\n                                                                                            *ngIf=\"cashdepositForm.value.transactionCurrency == 'INR' || cashdepositForm.value.transactionCurrency == 'USD'\">\r\n                                                                                            <div fxFlex=\"20%\">\r\n                                                                                                <p\r\n                                                                                                    class=\"quantityClass text-small\">\r\n                                                                                                    50</p>\r\n                                                                                            </div>\r\n                                                                                            <div fxFlex=\"10%\">\r\n                                                                                                <p\r\n                                                                                                    class=\"operationTypeClass text-small\">\r\n                                                                                                    x</p>\r\n                                                                                            </div>\r\n                                                                                            <div fxFlex=\"70%\">\r\n                                                                                                <mat-card\r\n                                                                                                    class=\"inputCard\">\r\n                                                                                                    <input\r\n                                                                                                        class=\"full-width inputClass\"\r\n                                                                                                        type=\"text\"\r\n                                                                                                        (keyup)=\"totalAmountValue(cdForm)\"\r\n                                                                                                        (keypress)=\"omit_number($event)\"\r\n                                                                                                        matInput\r\n                                                                                                        name=\"count50\"\r\n                                                                                                        ngModel\r\n                                                                                                        #count50>\r\n                                                                                                </mat-card>\r\n                                                                                                <div class=\"pl10\">\r\n                                                                                                    <mat-error\r\n                                                                                                        *ngIf=\"denominationlimit && count50.value > denominationLimit[50]\">\r\n                                                                                                        Please enter <=\r\n                                                                                                            {{denominationLimit[50]}}\r\n                                                                                                            </mat-error>\r\n                                                                                                            </div>\r\n                                                                                                            </div>\r\n                                                                                                            </div> <div\r\n                                                                                                            class=\"paddingclass\"\r\n                                                                                                            fxLayoutAlign=\"start center\"\r\n                                                                                                            *ngIf=\"cashdepositForm.value.transactionCurrency == 'INR'\">\r\n                                                                                                            <div\r\n                                                                                                                fxFlex=\"20%\">\r\n                                                                                                                <p\r\n                                                                                                                    class=\"quantityClass text-small\">\r\n                                                                                                                    20\r\n                                                                                                                </p>\r\n                                                                                                            </div>\r\n                                                                                                            <div\r\n                                                                                                                fxFlex=\"10%\">\r\n                                                                                                                <p\r\n                                                                                                                    class=\"operationTypeClass text-small\">\r\n                                                                                                                    x\r\n                                                                                                                </p>\r\n                                                                                                            </div>\r\n                                                                                                            <div\r\n                                                                                                                fxFlex=\"70%\">\r\n                                                                                                                <mat-card\r\n                                                                                                                    class=\"inputCard\">\r\n                                                                                                                    <input\r\n                                                                                                                        class=\"full-width inputClass\"\r\n                                                                                                                        type=\"text\"\r\n                                                                                                                        (keyup)=\"totalAmountValue(cdForm)\"\r\n                                                                                                                        (keypress)=\"omit_number($event)\"\r\n                                                                                                                        matInput\r\n                                                                                                                        name=\"count20\"\r\n                                                                                                                        ngModel\r\n                                                                                                                        #count20>\r\n                                                                                                                </mat-card>\r\n                                                                                                                <div\r\n                                                                                                                    class=\"pl10\">\r\n                                                                                                                    <mat-error\r\n                                                                                                                        *ngIf=\"denominationlimit && count20.value > denominationLimit[20]\">\r\n                                                                                                                        Please\r\n                                                                                                                        enter\r\n                                                                                                                        <= {{denominationLimit[20]}}\r\n                                                                                                                            </mat-error>\r\n                                                                                                                            </div>\r\n                                                                                                                            </div>\r\n                                                                                                                            </div>\r\n                                                                                                                            <div\r\n                                                                                                                            class=\"paddingclass\"\r\n                                                                                                                            fxLayoutAlign=\"start center\"\r\n                                                                                                                            *ngIf=\"cashdepositForm.value.transactionCurrency == 'INR'\">\r\n                                                                                                                            <div\r\n                                                                                                                                fxFlex=\"20%\">\r\n                                                                                                                                <p\r\n                                                                                                                                    class=\"quantityClass text-small\">\r\n                                                                                                                                    10\r\n                                                                                                                                </p>\r\n                                                                                                                            </div>\r\n                                                                                                                            <div\r\n                                                                                                                                fxFlex=\"10%\">\r\n                                                                                                                                <p\r\n                                                                                                                                    class=\"operationTypeClass text-small\">\r\n                                                                                                                                    x\r\n                                                                                                                                </p>\r\n                                                                                                                            </div>\r\n                                                                                                                            <div\r\n                                                                                                                                fxFlex=\"70%\">\r\n                                                                                                                                <mat-card\r\n                                                                                                                                    class=\"inputCard\">\r\n                                                                                                                                    <input\r\n                                                                                                                                        class=\"full-width inputClass\"\r\n                                                                                                                                        type=\"text\"\r\n                                                                                                                                        (keyup)=\"totalAmountValue(cdForm)\"\r\n                                                                                                                                        (keypress)=\"omit_number($event)\"\r\n                                                                                                                                        matInput\r\n                                                                                                                                        name=\"count10\"\r\n                                                                                                                                        ngModel\r\n                                                                                                                                        #count10>\r\n                                                                                                                                </mat-card>\r\n                                                                                                                                <div\r\n                                                                                                                                    class=\"pl10\">\r\n                                                                                                                                    <mat-error\r\n                                                                                                                                        *ngIf=\"denominationlimit && count10.value > denominationLimit[10]\">\r\n                                                                                                                                        Please\r\n                                                                                                                                        enter\r\n                                                                                                                                        <= {{denominationLimit[10]}}\r\n                                                                                                                                            </mat-error>\r\n                                                                                                                                            </div>\r\n                                                                                                                                            </div>\r\n                                                                                                                                            </div>\r\n                                                                                                                                            <div\r\n                                                                                                                                            class=\"paddingclass\"\r\n                                                                                                                                            fxLayoutAlign=\"start center\"\r\n                                                                                                                                            *ngIf=\"cashdepositForm.value.transactionCurrency == 'INR' || cashdepositForm.value.transactionCurrency == 'USD' || cashdepositForm.value.transactionCurrency == 'AED'\">\r\n                                                                                                                                            <div\r\n                                                                                                                                                fxFlex=\"20%\">\r\n                                                                                                                                                <p\r\n                                                                                                                                                    class=\"quantityClass text-small\">\r\n                                                                                                                                                    1\r\n                                                                                                                                                </p>\r\n                                                                                                                                            </div>\r\n                                                                                                                                            <div\r\n                                                                                                                                                fxFlex=\"10%\">\r\n                                                                                                                                                <p\r\n                                                                                                                                                    class=\"operationTypeClass text-small\">\r\n                                                                                                                                                    x\r\n                                                                                                                                                </p>\r\n                                                                                                                                            </div>\r\n                                                                                                                                            <div\r\n                                                                                                                                                fxFlex=\"70%\">\r\n                                                                                                                                                <mat-card\r\n                                                                                                                                                    class=\"inputCard\">\r\n                                                                                                                                                    <input\r\n                                                                                                                                                        class=\"full-width inputClass\"\r\n                                                                                                                                                        type=\"text\"\r\n                                                                                                                                                        (keyup)=\"totalAmountValue(cdForm)\"\r\n                                                                                                                                                        (keypress)=\"omit_number($event)\"\r\n                                                                                                                                                        matInput\r\n                                                                                                                                                        name=\"count1\"\r\n                                                                                                                                                        ngModel\r\n                                                                                                                                                        #count10>\r\n                                                                                                                                                </mat-card>\r\n                                                                                                                                            </div>\r\n                                                                                                                                </div>\r\n                                                                                                                            </div>\r\n                                                                                                                            <div fxLayout=\"row wrap\"\r\n                                                                                                                                class=\"pH10 full-width\">\r\n                                                                                                                                <div fxFlex=\"53%\"\r\n                                                                                                                                    fxFlex.xs=\"100%\">\r\n                                                                                                                                    <p\r\n                                                                                                                                        class=\"totalAmount\">\r\n                                                                                                                                        Total\r\n                                                                                                                                        Amount\r\n                                                                                                                                    </p>\r\n                                                                                                                                    <mat-card\r\n                                                                                                                                        class=\"inputCard\">\r\n                                                                                                                                        <input\r\n                                                                                                                                            class=\"full-width inputClass\"\r\n                                                                                                                                            [(ngModel)]=\"totalAmount\"\r\n                                                                                                                                            matInput\r\n                                                                                                                                            name=\"totalAmount\"\r\n                                                                                                                                            readonly>\r\n                                                                                                                                    </mat-card>\r\n                                                                                                                                    <div\r\n                                                                                                                                        class=\"pl10\" style=\"width: 150%;\">\r\n                                                                                                                                        <mat-error\r\n                                                                                                                                        *ngIf=\"enableBtn1\">\r\n                                                                                                                                            Total\r\n                                                                                                                                            amount\r\n                                                                                                                                            should\r\n                                                                                                                                            be\r\n                                                                                                                                            equal\r\n                                                                                                                                            to\r\n                                                                                                                                            {{cashdepositForm.value.transactionAmount}}\r\n                                                                                                                                        </mat-error>\r\n                                                                                                                                    </div>\r\n                                                                                                                                </div>\r\n                                                                                                                            </div>\r\n                </mat-card>\r\n            </form>\r\n        </div>\r\n    </div>\r\n\r\n\r\n\r\n    <div>\r\n        <div fxLayout=\"row wrap\" class=\"flex-container stretch\" id=\"buttonDiv\">\r\n            <ng-container>\r\n                <div fxFlex=\"30%\" fxFlex.xs=\"100%\" class=\"paddingCls\">\r\n                    <button mat-flat-button *ngIf=\"phoneNumber\" class=\"buttonCancel full-width\"\r\n                        (click)=\"goToServiceScreens()\">CANCEL</button>\r\n                </div>\r\n                <div fxFlex=\"70%\" fxFlex.xs=\"100%\" class=\"paddingCls\" *ngIf=\"showAccountNum\" >\r\n                    <button mat-flat-button class=\"buttonNext full-width\" [disabled]=\"!enableContinue\r\n                    || !cashdepositForm.get('transactionAmount').valid \r\n                    ||!cashdepositForm.get('transactionCurrency').valid\r\n                    ||!cashdepositForm.get('accountType').valid\r\n                    ||!cashdepositForm.get('accountNumber').valid\r\n                    ||!cashdepositForm.get('accountCurrency').valid\r\n                    ||!cashdepositForm.get('totalChargeAmount').valid\r\n                    ||!cashdepositForm.get('totalTransactionAmount').valid\"\r\n                        (click)=\"onSaveofcashDeposit(cashdepositForm.value,ifQRvariable,cdForm)\">GENERATE TOKEN</button>\r\n                </div>\r\n\r\n                <div fxFlex=\"70%\" fxFlex.xs=\"100%\" class=\"paddingCls\" *ngIf=\"!showAccountNum\" >\r\n                    <button mat-flat-button class=\"buttonNext full-width\" [disabled]=\"!enableContinue \r\n                    || !cashdepositForm.get('transactionAmount').valid \r\n                    ||!cashdepositForm.get('transactionCurrency').valid\r\n                    ||!cashdepositForm.get('accountType').valid\r\n                    ||!cashdepositForm.get('accountNumber').valid\r\n                    ||!cashdepositForm.get('accountCurrency').valid\r\n                    ||!cashdepositForm.get('totalChargeAmount').valid\r\n                    ||!cashdepositForm.get('totalTransactionAmount').valid\" \r\n                        (click)=\"getOTP(cashdepositForm.value,ifQRvariable,cdForm);\" >CONTINUE</button>\r\n                </div>\r\n            </ng-container>\r\n        </div>\r\n    </div>\r\n\r\n\r\n\r\n\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl, FormBuilder, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { DialogService } from 'app/shared/services/Dialog/dialog.service';\r\n\r\ninterface Testing {\r\n  value: string;\r\n  viewValue: string;\r\n}\r\n\r\n\r\n@Component({\r\n  selector: 'app-utility-billpayment',\r\n  templateUrl: './utility-billpayment.component.html',\r\n  styleUrls: ['./utility-billpayment.component.scss']\r\n})\r\nexport class UtilityBillpaymentComponent implements OnInit {\r\n  utilityBillPaymentForm: FormGroup;\r\n  utilityBillpayment : any = 'Utility Bill Payment';\r\n  constructor(private router : Router, private formBuilder: FormBuilder,  private dialogService : DialogService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.utilityBillPaymentForm = this.formBuilder.group({\r\n      billerName:['', [Validators.required]],\r\n      amount:['', [Validators.required]],\r\n      payFromAcc:['', [Validators.required]],\r\n      billDate:['', [Validators.required]],\r\n      billNumber:['', [Validators.required]],\r\n    });\r\n  }\r\n  goToServiceScreens(){\r\n    this.router.navigateByUrl('/others/services');\r\n  }\r\n  goToAuthenticate(){\r\n    this.dialogService.authenticationDialog();\r\n  }\r\n\r\n  testing: Testing[] = [\r\n    { value: 'Demo', viewValue: 'Demo 1' },\r\n    { value: 'Demo', viewValue: 'Demo 2' },\r\n    { value: 'Demo', viewValue: 'Demo 3' }\r\n  ];\r\n\r\n}\r\n","<div class=\"fullcard\">\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"center center\">\r\n        <div fxFlex=\"80%\">\r\n            <mat-card class=\"chequecard\">\r\n                <mat-card-title style=\"padding: 2%;\">\r\n                    <div fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n                        <div>\r\n                            <mat-icon class=\"backIcon\" (click)=\"goToServiceScreens()\">keyboard_backspace</mat-icon>\r\n                        </div> &nbsp;&nbsp;\r\n                        <div class=\"card-title\">Utility Bill Payment</div>\r\n                    </div>\r\n                </mat-card-title>\r\n                <mat-card-content>\r\n                    <div class=\"full-width\" style=\"padding: 0% 3% 3% 2%;\">\r\n                        <!-- <form #utilityBillPaymentForm=\"ngForm\"> -->\r\n                        <form [formGroup]=\"utilityBillPaymentForm\">\r\n                            <div fxLayout=\"column\" fxLayoutGap=\"5%\" fxLayoutAlign=\"space-between none\">\r\n                                <div>\r\n                                    <div fxLayout=\"row wrap\" class=\"flex-container stretch\">\r\n                                        <ng-container>\r\n                                            <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                                <mat-hint class=\"totalAmount\">Biller Name*</mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <input matInput formControlName=\"billerName\" class=\"full-width inputClass\" type=\"text\"\r\n                                                        name=\"billerName\">\r\n                                                </mat-card>\r\n                                            </div>\r\n                                            <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                                <mat-hint class=\"totalAmount\"> Amount*</mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <input matInput formControlName=\"amount\" type=\"text\" class=\"full-width inputClass\"\r\n                                                        name=\"amount\">\r\n                                                </mat-card>\r\n                                            </div>\r\n                                            <div fxFlex=\"34%\" fxFlex.xs=\"100%\">\r\n                                                <mat-hint class=\"totalAmount\">Pay from Account* </mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <input matInput formControlName=\"payFromAcc\" type=\"text\" class=\"full-width inputClass\"\r\n                                                        name=\"payFromAcc\">\r\n                                                </mat-card>\r\n                                            </div>\r\n                                        </ng-container>\r\n                                    </div>\r\n                                </div>\r\n                                <div>\r\n                                    <span layout=\"row\">\r\n                                        <hr class=\"line\" flex />\r\n                                    </span>\r\n                                </div>\r\n                                <div>\r\n                                    <div fxLayout=\"row wrap\" class=\"flex-container stretch\">\r\n                                        <ng-container>\r\n                                            <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                                <mat-hint class=\"totalAmount\">Bill Date*</mat-hint>\r\n                                                <mat-card class=\"inputCard heightAdjust\">\r\n                                                    <input matInput formControlName=\"billDate\" [matDatepicker]=\"picker\"\r\n                                                        class=\"inputWidth inputClass\">\r\n                                                    <mat-datepicker-toggle style=\"margin-left: 15%;\" matSuffix\r\n                                                        [for]=\"picker\">\r\n                                                    </mat-datepicker-toggle>\r\n                                                    <mat-datepicker #picker></mat-datepicker>\r\n                                                </mat-card>\r\n                                            </div>\r\n                                            <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                                <mat-hint class=\"totalAmount\">Bill Number* </mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <mat-select formControlName=\"billNumber\" class=\"full-width\" style=\"background-color: #f9fafb;\">\r\n                                                        <mat-option *ngFor=\"let test of testing\" [value]=\"test.value\">\r\n                                                            {{test.viewValue}}\r\n                                                        </mat-option>\r\n                                                    </mat-select>\r\n                                                </mat-card>\r\n                                            </div>\r\n                                            <div fxFlex=\"34%\" fxFlex.xs=\"100%\">\r\n                                                <mat-hint class=\"totalAmount\">Remark</mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <textarea class=\"full-width inputClass\" rows=\"5\" cols=\"6\">\r\n                                                </textarea>\r\n                                                </mat-card>\r\n                                            </div>\r\n                                        </ng-container>\r\n                                    </div>\r\n                                </div>\r\n                                <div>\r\n                                    <div fxLayout=\"row wrap\" class=\"flex-container stretch\">\r\n                                        <ng-container>\r\n                                            <div fxFlex=\"30%\" fxFlex.xs=\"100%\" style=\"padding: 0% 1%;\">\r\n                                                <button mat-flat-button class=\"buttonCancel full-width\"\r\n                                                    (click)=\"goToServiceScreens()\">CANCEL</button>\r\n                                            </div>\r\n                                            <div fxFlex=\"100%\" fxFlex.xs=\"100%\" style=\"padding: 0% 2%;\">\r\n                                                <button mat-flat-button class=\"buttonNext full-width\"\r\n                                                [disabled]=\" !utilityBillPaymentForm.get('billerName').valid\r\n                                                || !utilityBillPaymentForm.get('amount').valid\r\n                                                || !utilityBillPaymentForm.get('payFromAcc').valid\r\n                                                || !utilityBillPaymentForm.get('billDate').valid\r\n                                                || !utilityBillPaymentForm.get('billNumber').valid \"\r\n                                                    (click)=\"goToAuthenticate()\">CONTINUE</button>\r\n                                            </div>\r\n                                        </ng-container>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </mat-card-content>\r\n            </mat-card>\r\n        </div>\r\n    </div>\r\n</div>","import { Directive, ElementRef, HostListener } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[appOnlynumber]'\r\n})\r\nexport class OnlynumberDirective {\r\n\r\n  private navigationKeys = [\r\n    'Backspace',\r\n    'Delete',\r\n    'Tab',\r\n    'Escape',\r\n    'Enter',\r\n    'Home',\r\n    'End',\r\n    'ArrowLeft',\r\n    'ArrowRight',\r\n    'Clear',\r\n    'Copy',\r\n    'Paste'\r\n  ];\r\n  inputElement: HTMLElement;\r\n  constructor(public el: ElementRef) {\r\n    this.inputElement = el.nativeElement;\r\n  }\r\n\r\n  @HostListener('keydown', ['$event'])\r\n  onKeyDown(e: KeyboardEvent) {\r\n    if (\r\n      this.navigationKeys.indexOf(e.key) > -1 || // Allow: navigation keys: backspace, delete, arrows etc.\r\n      (e.key === 'a' && e.ctrlKey === true) || // Allow: Ctrl+A\r\n      (e.key === 'c' && e.ctrlKey === true) || // Allow: Ctrl+C\r\n      (e.key === 'v' && e.ctrlKey === true) || // Allow: Ctrl+V\r\n      (e.key === 'x' && e.ctrlKey === true) || // Allow: Ctrl+X\r\n      (e.key === 'a' && e.metaKey === true) || // Allow: Cmd+A (Mac)\r\n      (e.key === 'c' && e.metaKey === true) || // Allow: Cmd+C (Mac)\r\n      (e.key === 'v' && e.metaKey === true) || // Allow: Cmd+V (Mac)\r\n      (e.key === 'x' && e.metaKey === true) // Allow: Cmd+X (Mac)\r\n    ) {\r\n      // let it happen, don't do anything\r\n      return;\r\n    }\r\n    // Ensure that it is a number and stop the keypress\r\n    if (\r\n      (e.shiftKey || (e.keyCode < 48 || e.keyCode > 57)) &&\r\n      (e.keyCode < 96 || e.keyCode > 105)\r\n    ) {\r\n      e.preventDefault();\r\n    }\r\n  }\r\n\r\n  @HostListener('paste', ['$event'])\r\n  onPaste(event: ClipboardEvent) {\r\n    event.preventDefault();\r\n    const pastedInput: string = event.clipboardData\r\n      .getData('text/plain')\r\n      .replace(/\\D/g, ''); // get a digit-only string\r\n    document.execCommand('insertText', false, pastedInput);\r\n  }\r\n\r\n  @HostListener('drop', ['$event'])\r\n  onDrop(event: DragEvent) {\r\n    event.preventDefault();\r\n    const textData = event.dataTransfer.getData('text').replace(/\\D/g, '');\r\n    this.inputElement.focus();\r\n    document.execCommand('insertText', false, textData);\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { NavigationExtras, Router } from '@angular/router';\r\nexport interface Section {\r\n  title: string;\r\n  id : number;\r\n  flag: boolean;\r\n  \r\n}\r\n\r\n@Component({\r\n  selector: 'app-cheque-withdrawal1',\r\n  templateUrl: './cheque-withdrawal1.component.html',\r\n  styleUrls: ['./cheque-withdrawal1.component.scss']\r\n})\r\n\r\nexport class ChequeWithdrawal1Component implements OnInit {\r\n  flag: boolean = true;\r\n  continue = \"CONTINUE\"\r\n  active : any = {};\r\n  folders: Section[] = [\r\n    {\r\n      title: \"Cash Withdrawal\",\r\n      id : 1,\r\n      flag : false,\r\n      \r\n    },\r\n    {\r\n      title: \"Cash Deposit\",\r\n      id : 2,\r\n      flag : false,\r\n      \r\n    },\r\n    {\r\n      title: \"Cheque Deposit\",\r\n      id : 3,\r\n      flag : false,\r\n    },\r\n    {\r\n      title: \"Cheque Withdrawal\",\r\n      id : 4,\r\n      flag : false,\r\n    },\r\n    {\r\n      title: \"Forex Transaction\",\r\n      id : 5,\r\n      flag : false,\r\n    },\r\n    {\r\n      title: \"Loan Payment\",\r\n      id : 6,\r\n      flag : false,\r\n    },\r\n    {\r\n      title: \"Deposit Top Up\",\r\n      id : 7,\r\n      flag : false,\r\n    },\r\n    {\r\n      title: \"Utility Bill Payment\",\r\n      id : 8,\r\n      flag : false,\r\n    },\r\n\r\n  ];\r\n  \r\n  serviceTitle: any;\r\n\r\n  constructor(private router : Router,) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n  trackByFn(index, item) {\r\n    return index; //or item.id\r\n  }\r\n  goToService(index){\r\n    if(this.active !== index){\r\n      this.active = index;\r\n      // console.log(this.active);\r\n      this.folders.forEach(item => { item.flag = false});\r\n    } \r\n    this.folders[index].flag = !this.folders[index].flag;\r\n  }\r\n  contiueButton(){\r\n    console.log(this.active);\r\n    const enableList = this.folders.filter(x => x.flag === true)\r\n    console.log(enableList);\r\n    if(enableList.length > 0 )\r\n    return true;\r\n    else \r\n    return false;\r\n  }\r\n  goToOperation(){\r\n    this.router.navigateByUrl('/others/master');\r\n  }\r\n\r\n}\r\n","<div class=\"fullcard\">\r\n    <br>\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"center center\">\r\n        <div fxFlex=\"72%\">\r\n          <mat-card class=\"chequecard\">\r\n            <mat-card-title >\r\n                <div class=\"card-title\">Services</div>\r\n                <div fxLayout=\"row wrap\" >\r\n                  <mat-hint class=\"totalAmount\" >Select one and continue</mat-hint>\r\n                <mat-card class=\"arrows\">\r\n                  <!-- <mat-icon class=\"arrowIcons\"> chevron_left</mat-icon> -->\r\n                  <!-- <mat-icon class=\"arrowIcons\">chevron_right</mat-icon> -->\r\n                 </mat-card>\r\n              </div>\r\n              </mat-card-title>\r\n              <mat-card-content>\r\n                <div class=\"full-width\">\r\n                    <div  fxLayout=\"row wrap\"  fxLayoutGap=\"40px \" class=\"gapBtw\" *ngFor=\"let folder of folders; let i = index\">\r\n                        <ng-container >\r\n                      <mat-card (click)=\"goToService(i)\" [ngClass]=\" folder.flag ? 'borderCard' : 'inputCard'\" >\r\n                        <div style=\"margin-top: 15%;\">\r\n                          <mat-card class=\"insideCard\" >\r\n                            <mat-icon class=\"serviceIcons\">payments</mat-icon>\r\n                            \r\n                            </mat-card>\r\n                            \r\n                            </div>\r\n                            <br>\r\n                             <mat-hint  class=\"insideTitle\">{{folder.title }}</mat-hint>\r\n                      </mat-card>\r\n                        </ng-container>\r\n                        </div></div>\r\n           <br><br>\r\n           <div fxLayout=\"row wrap\" fxLayoutGap=\"30px\" fxLayoutAlign=\"center center\">  \r\n               <button mat-flat-button (click) =\"goToOperation()\" [ngClass]=\"contiueButton() ? 'buttonActive' : 'buttonPassive'\" >{{continue}}</button>\r\n               </div> \r\n               <!-- (click) =\"goToOperation(i)\" -->\r\n               <br> \r\n                  </mat-card-content>\r\n              </mat-card>\r\n              </div>\r\n              </div>\r\n          </div>\r\n","\r\nimport { Country } from '@angular-material-extensions/select-country';\r\nimport { Component, Input, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl, FormBuilder, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { DialogService, TokenObjects } from 'app/shared/services/Dialog/dialog.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ChangeDetectorRef } from '@angular/core';\r\nimport { getCurrencySymbol } from '@angular/common';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { OtpVerifyComponent } from '../otp-verify/otp-verify.component';\r\nimport { otpModel } from 'app/shared/models/otp.model';\r\n\r\n\r\ninterface Testing {\r\n  value: string;\r\n  viewValue: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-cheque-deposit',\r\n  templateUrl: './cheque-deposit.component.html',\r\n  styleUrls: ['./cheque-deposit.component.scss']\r\n})\r\nexport class ChequeDepositComponent implements OnInit {\r\n  titleName : any = 'Cheque Deposit';\r\n  chequedepositForm: FormGroup;\r\n  accType = ['Savings','Deposit'];\r\n  \r\n  customerName = ['Jane Smith','John Smith'];\r\n  accountNum: any;\r\n  productCode = \"CQD\";\r\n  tokenOrigin = \"Kiosk\";\r\n  denomCodeArray: any[] = [\r\n    { key: 'count2000', value: 2000 },\r\n    { key: 'count500', value: 500 },\r\n    { key: 'count200', value: 200 },\r\n    { key: 'count100', value: 100 },\r\n    { key: 'count50', value: 50 },\r\n    { key: 'count20', value: 20 },\r\n    { key: 'count10', value: 10 },\r\n    { key: 'count1', value: 1 }\r\n\r\n  ];\r\n  totalAmount: any;\r\n  transamount: any;\r\n  a: any;\r\n  // @Input() title : any;\r\n  // countryFormControl = new FormControl();\r\n  defaultValue: Country = {\r\n    name: 'Deutschland',\r\n    alpha2Code: 'DE',\r\n    alpha3Code: 'DEU',\r\n    numericCode: '276',\r\n    callingCode: '+49'\r\n  };\r\n  cashDepositResponse: any;\r\n  chequeDepositResponse: any;\r\n  accountBal: any;\r\n  phoneNumber: string;\r\n  errorStatus: number;\r\n  custAccountData: any;\r\n  countryValues: any;\r\n  accounttypeArray =[];\r\n  idList = [];\r\n  noList: any[];\r\n  accNum: any;\r\n  tokenObjects =new TokenObjects();\r\n  accNumber: any;\r\n  tokResponse: any;\r\n  tokenNum: any;\r\n  estimatedTime: any;\r\n  isedit:boolean=true;\r\n  transAmt: any;\r\n  balance: string;\r\n  enableContinue: boolean=true;\r\n  curr: string;\r\n  transAmount: string;\r\n  currencyImage: any = \"\";\r\n  custID: any;\r\n  qrData: any;\r\n  ifQRvariable = false;\r\n  customerID: any;\r\n  branchNameFromLogin: string;\r\n  branchName: string;\r\n  arrayAccountBranch: any;\r\n  trasactionBranches: any;\r\n  branchData: any;\r\n  branch: any;\r\n  userName: string;\r\n  // accountNoList: any[];\r\n  accountNoList = [];\r\n  selectedAccountInfo: any;\r\n  showAccountNum : boolean = true;\r\n  showAccoutType : boolean = true;\r\n  custValidation: string;\r\n  custNameFromLogin: string;\r\n  accountNumber: string;\r\n  custmerID: any;\r\n  phonenum: any;\r\n  oTpModel = new otpModel();\r\n  chequedepositValues: any;\r\n  chequedepositype: any;\r\n  chequedepositform: any;\r\n  accountNum1: any[];\r\n  filteredAccoun: any[];\r\n  accountDropdown: boolean = false;\r\n  flag1:boolean=false;\r\n  hideDetails:boolean=false;\r\n  qrBranchCode: any;\r\n  appointmentId:any;\r\n  totalTransAmount: number;\r\n  chargeDetails: any;\r\n  cashData: any;\r\n  accountCurrency: any;\r\n  transBranch: string;\r\n\r\n  constructor(\r\n    private router : Router,\r\n    private formBuilder: FormBuilder,\r\n     private dialogService : DialogService,\r\n     private apiService:ApiService,\r\n     private dialog: MatDialog,\r\n     private cdr:ChangeDetectorRef,\r\n     private ls: LocalStoreService,  private snack: MatSnackBar, private changeDef: ChangeDetectorRef\r\n     ) { }\r\n  ngOnInit(): void {\r\n    this.phoneNumber = localStorage.getItem(\"phonenumFromLogin\");\r\n    this.appointmentId = this.ls.getItem(\"TransactionType\");\r\n    this.transBranch=localStorage.getItem(\"TRANSACTIONBRANCH\") ;\r\n    \r\n    this.custValidation = localStorage.getItem(\"customerValidation\");\r\n    this.custNameFromLogin = localStorage.getItem(\"FromLogin\");\r\n    if(this.custValidation == \"New Customer\"){\r\n      this.showAccountNum = false;\r\n      this.showAccoutType = false;\r\n    }\r\n    if(this.custNameFromLogin!=null){\r\n      this.showAccountNum=false;\r\n    } \r\n    this.qrData = JSON.parse(JSON.parse(localStorage.getItem('scannerData')));\r\n    console.log(\"QRData\", this.qrData);\r\n    this.chequedepositForm = this.formBuilder.group({\r\n      transactionId:['', [Validators.required]],\r\n      chequeNumber:['',[Validators.required]],\r\n      customerId:['', [Validators.required]],\r\n      accountType:['', [Validators.required]],\r\n      totalAmount:['',Validators.required],\r\n      accountNumber:['', [Validators.required]],\r\n      holderName:['', [Validators.required]],\r\n      accountCurrency:['', [Validators.required]],\r\n      transactionCurrency:['', [Validators.required]],\r\n      totalChargeAmount:['', [Validators.required]],\r\n      totalTransactionAmount:['',[Validators.required]],\r\n      transactionAmount:['', [Validators.required, Validators.min(.1)]],\r\n      accountBalance:['', [Validators.required]],\r\n      productCode:['CQD',[Validators.required]],\r\n      tokenOrigin : ['Kiosk',[Validators.required]],\r\n      // audit\r\n      createdBy:['', [Validators.required]],\r\n      createdTime:['', [Validators.required]],\r\n      modifiedBy:['', [Validators.required]],\r\n      modifiedTime:['', [Validators.required]],\r\n      recordStatus:['', [Validators.required]],\r\n      authStatus:['', [Validators.required]],\r\n      version:['', [Validators.required]],\r\n      accountBranch: ['', [Validators.required]],\r\n      transactionBranch:['', [Validators.required]]\r\n      \r\n    });\r\n    console.log(this.chequedepositForm.value);\r\n    if(this.phoneNumber && this.custNameFromLogin==null && this.appointmentId==null){\r\n      this.ifQRvariable = false;\r\n      this.gettingallTansactionDetails(this.phoneNumber);\r\n      }\r\n      // else{\r\n        if(this.qrData!=null){\r\n        this.ifQRvariable = true;\r\n        console.log(\"Account\", this.qrData.accountId);\r\n        this.chequedepositForm.controls.holderName.setValue(this.qrData.holderName);\r\n        this.chequedepositForm.controls.accountType.setValue(this.qrData.accountType);\r\n        this.chequedepositForm.controls.accountNumber.setValue(this.qrData.accountId);\r\n        this.getChargeDetails(this.qrData.accountId,'');\r\n        this.chequedepositForm.controls.transactionAmount.setValue(this.qrData.transactionAmount);\r\n        this.chequedepositForm.controls.accountCurrency.setValue(this.qrData.accountCurrency);\r\n        this.chequedepositForm.controls.transactionCurrency.setValue(this.qrData.transactionCurrency);\r\n        this.accountBal = this.qrData.accountBalance;\r\n        this.customerID = this.qrData.customerId;\r\n        this.currencyImage = 'currency-flag-'+this.qrData.accountCurrency.toLowerCase();\r\n        this.currencyImage = 'currency-flag-'+this.qrData.transactionCurrency.toLowerCase();\r\n        if(this.qrData.transactionBranch !=null && this.qrData.transactionBranch !=''){\r\n          this.chequedepositForm.controls.transactionBranch.setValue(this.qrData.transactionBranch);\r\n        }else{\r\n          this.chequedepositForm.controls.transactionBranch.setValue('Kasturi Nagar');\r\n        }\r\n        this.getAccountBranch();\r\n      }\r\n  \r\n    this.getCountrynameValues();\r\n    this.getAccountBranch();\r\n    this.gettransactionBranch(\"account_branch\");\r\n    if(this.appointmentId.data.appointmentId){\r\n      this.cashWithdrawlData();\r\n    }\r\n  }\r\n  fetchByAccountNum(accNum){\r\n    this.chequedepositForm.controls.transactionAmount.reset();\r\n    this.chequedepositForm.controls.totalTransactionAmount.setValue(this.chequedepositForm.controls.totalChargeAmount.value);\r\n    this.chequedepositForm.controls.chequeNumber.reset();\r\n    console.log(\"Account Numebr\",accNum);\r\n    this.apiService.fetchByaccNum(accNum).subscribe((res: any) => {\r\n      console.log('Account Number Rsp', res);\r\n      this.getChargeDetails(accNum,'');\r\n      this.userName = res.accHolderName;\r\n      this.accountBal = res.accBalance;\r\n      this.custmerID = res.customerId;\r\n      this.accountNumber = res.accountId;\r\n      this.accountCurrency = res.accountCurrency;\r\n      this.curr = getCurrencySymbol(res.currency, \"narrow\");\r\n      this.chequedepositForm.controls.accountType.setValue(res.accountType);\r\n      this.chequedepositForm.controls.accountCurrency.setValue(res.currency);\r\n      this.chequedepositForm.controls.accountBranch.setValue(res.accountBranch);\r\n      this.chequedepositForm.controls.holderName.setValue(this.userName); \r\n      this.currencyImage = 'currency-flag-'+res.currency.toLowerCase();\r\n      this.currencyImage = 'currency-flag-'+res.currency.toLowerCase();\r\n      this.getCountrynameValues();\r\n      this.chequedepositForm.controls.transactionCurrency.setValue(res.currency);\r\n      this.custAmountBal(accNum);\r\n      this.chequedepositForm.controls.transactionBranch.setValue('Kasturi Nagar');\r\n      this.apiService.fetchByaccDeatilsoncustId(res.customerId).subscribe((resp: any) => {\r\n        this.phonenum = resp[0].phoneNumber;\r\n        localStorage.setItem('otpPhoneNum', this.phonenum);\r\n      }) \r\n  });\r\n\r\n}\r\ngetOTP(formData, type, cdForm){\r\n  this.chequedepositValues =formData;\r\n  this.chequedepositype = type;\r\n  this.chequedepositform = cdForm;\r\n  this.oTpModel.source = 'customer';\r\n  this.oTpModel.source_key = 'mobile';\r\n  this.oTpModel.source_value = this.phonenum;\r\n  let amount= 50000;\r\n  let transamountwithoutcomma=this.chequedepositValues.transactionAmount.replace(/,/g, \"\");\r\n  console.log( transamountwithoutcomma);\r\n  if(transamountwithoutcomma > amount){\r\n    this.apiService.getOtp(this.oTpModel).subscribe(otpResp => {\r\n      if (otpResp) {\r\n        this.openDialogOTP(this.phonenum);\r\n        this.snack.open(\"An OTP has been sent to the Registered Mobile Number.\" , \"\", {\r\n          duration: 4000,\r\n          verticalPosition: 'top',\r\n          horizontalPosition: 'right'\r\n        });\r\n      }\r\n    })\r\n  }\r\n  else{\r\n    this.getOTPforSave( this.chequedepositValues,\r\n      this.chequedepositype,this.chequedepositform);\r\n  }\r\n}\r\nopenDialogOTP(numbr) {\r\n  const dialogRef = this.dialog.open(OtpVerifyComponent, {\r\n    data: { number: numbr, type: \"numbr\" },\r\n    disableClose: true,\r\n  });\r\n  dialogRef.afterClosed().subscribe(submit => {\r\n    if(submit){\r\n      this.getOTPforSave( this.chequedepositValues,\r\n        this.chequedepositype,this.chequedepositform);\r\n    }\r\n   });\r\n}\r\ngetOTPforSave(formData, type, cdForm){\r\n  formData.transactionBranch = this.transBranch;\r\n  if(this.custValidation == \"New Customer\"){\r\n    console.log(\"customer\",this.custmerID);\r\n   this.accountNum = formData.accountNumber;\r\n   formData.customerId = this.custmerID?this.custmerID:0;\r\n   formData.accountType = formData.accountType;\r\n   formData.accountNumber = this.accountNumber;\r\n   formData.holderName = formData.holderName;\r\n   formData.accountCurrency = formData.accountCurrency;\r\n   formData.transactionCurrency = formData.transactionCurrency;\r\n   formData.transactionAmount = formData.transactionAmount.replace(/,/g, '');\r\n   formData.productCode = this.productCode;\r\n   formData.tokenOrigin = this.tokenOrigin;\r\n   formData.accountBalance = this.accountBal;\r\n\r\n  }\r\n  formData.tokenBranch = \"KN\";\r\n  if(this.appointmentId && this.appointmentId.data){\r\n    formData.transactionId = this.appointmentId.data.transactionId;\r\n    formData.transactionStatus = this.appointmentId.data.transactionStatus;\r\n  }\r\n  formData.customerId = this.custmerID?this.custmerID:0;\r\n  formData.accountType = formData.accountType;\r\n  formData.accountNumber = this.accountNumber;\r\n  formData.holderName = formData.holderName;\r\n  formData.accountCurrency = formData.accountCurrency;\r\n  formData.transactionCurrency = formData.transactionCurrency;\r\n  formData.transactionAmount = formData.transactionAmount.replace(/,/g, '');\r\n  formData.productCode = this.productCode;\r\n  formData.tokenOrigin = this.tokenOrigin;\r\n  formData.accountBalance = this.accountBal;\r\nthis.apiService.saveofCashDeposit(formData).subscribe(cashDepositResp => {\r\nconsole.log(\"Response Success\", cashDepositResp);\r\nthis.cashDepositResponse = cashDepositResp;\r\nthis.tokenNum = this.cashDepositResponse.tokenNumber;\r\nthis.estimatedTime = this.cashDepositResponse.estimatedWaitTime;\r\nlocalStorage.setItem(\"tokenNumer\", this.tokenNum);\r\nlocalStorage.setItem(\"estimatedTiming\", this.estimatedTime);\r\nthis.enableContinue = false;\r\nif (this.cashDepositResponse) {\r\n  this.dialogService.tokenGenerationDialog();\r\n}\r\n});   \r\n}\r\n  _keyPress(event: any) {\r\n    const pattern = /[0-9 a-z A-Z]/;\r\n    let inputChar = String.fromCharCode(event.charCode);\r\n    if (!pattern.test(inputChar)) {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n  gettransactionBranch(key: string) {\r\n    this.apiService.getTransactionBranch(key)\r\n      .subscribe(branches => {\r\n        console.log('branches :: ', branches);\r\n        this.trasactionBranches = branches;\r\n       \r\n      })\r\n  }\r\n\r\n  getAccountBranch() {\r\n    this.apiService.getBranchforKiosk()\r\n      .subscribe((data: any) => {\r\n        this.branchData = data;\r\n          console.log( this.branchData);\r\n          data.forEach((element,index)=>{\r\n            this.branch = data[index].branchName;\r\n            console.log(this.branch);\r\n            // this.chequedepositForm.controls.accountBranch.setValue(this.branch);\r\n         });      \r\n      });\r\n  }\r\n  getCountrynameValues() {\r\n    this.apiService.getCountryValues().subscribe((allCountryValues : any)=> {\r\n      this.countryValues = allCountryValues;\r\n      console.log(this.countryValues);\r\n      });\r\n  }\r\n\r\n  onCountrySelected($event: Country): void {\r\n    console.log($event);\r\n  }\r\n  goToServiceScreens(){\r\n    if(this.appointmentId){\r\n    if(this.appointmentId.data.appointmentId){\r\n      this.router.navigateByUrl('/sessions/login');\r\n      localStorage.removeItem(\"FromLogin\")\r\n      localStorage.removeItem(\"TransactionType\")\r\n      localStorage.removeItem(\"customerId\")\r\n      localStorage.removeItem(\"phonenumFromLogin\")\r\n      localStorage.removeItem(\"customerValidation\")\r\n      localStorage.removeItem(\"otpPhoneNum\")\r\n      localStorage.removeItem(\"AccountBal\")\r\n      localStorage.removeItem(\"AccountNumber\")\r\n      localStorage.removeItem(\"ProductCode\")\r\n      localStorage.removeItem(\"tokenNumer\")\r\n      localStorage.removeItem(\"estimatedTiming\")\r\n      localStorage.removeItem(\"userId\")\r\n      localStorage.removeItem(\"scannerData\")\r\n      localStorage.removeItem(\"custholderName\")\r\n    }\r\n  }\r\n    else{\r\n      this.router.navigateByUrl('/others/services');\r\n    }\r\n  }  \r\n  goToAuthenticate(){\r\n    this.dialogService.authenticationDialog();\r\n  }\r\n  gettingallTansactionDetails(phoneNumber) {\r\n    this.phoneNumber = localStorage.getItem(\"phonenumFromLogin\");\r\n    this.apiService.gettingTransactionDetails(this.phoneNumber).subscribe((allTransactionResp : any)=> {\r\n    console.log(\"All Transaction Details\",allTransactionResp);\r\n    this.userName = (allTransactionResp.firstName ? allTransactionResp.firstName + ' ' : ' ') + \r\n    (allTransactionResp.middleName ? allTransactionResp.middleName + ' ' : ' ') +\r\n     (allTransactionResp.lastName ? allTransactionResp.lastName : ' ');\r\n    this.chequedepositForm.controls.holderName.setValue(this.userName);\r\n    this.custID = allTransactionResp.customerId;\r\n    // this.setBalance(allTransactionResp.custAccount);\r\n    this.custAccountData = allTransactionResp.custAccount;\r\n    this.accounttypeArray = [...this.custAccountData].filter(({accountType},index )=> \r\n    ![...this.custAccountData].map(obj=> obj.accountType).includes(accountType, index +1));\r\n    for(let j = 0; j < this.custAccountData.length; j++){\r\n      if(this.custAccountData[j].status == 'APPROVED'){\r\n        this.accountNoList.push(this.custAccountData[j]);  \r\n      }\r\n    }\r\n    if(this.custAccountData && this.accountNoList.length<=1){\r\n      this.accountDropdown=false;\r\n      this.hideDetails=true;\r\n      const accTyp = allTransactionResp.custAccount[0].accountType;\r\n      this.chequedepositForm.controls.accountType.setValue(accTyp);\r\n      this.custAccountNumber(this.accountNoList[0]);\r\n    }else{\r\n      this.accountDropdown=true;\r\n      this.hideDetails=true;\r\n      const accTyp = allTransactionResp.custAccount[0].accountType;\r\n      this.chequedepositForm.controls.accountType.setValue(accTyp);\r\n      this.custAccountNumber(allTransactionResp.custAccount[0]);\r\n    }\r\n   \r\n    });\r\n  }\r\n  getAccountType(event:any){\r\n    this.chequedepositForm.controls.transactionAmount.reset();\r\n    this.chequedepositForm.controls.totalTransactionAmount.setValue(this.chequedepositForm.controls.totalChargeAmount.value);\r\n    this.chequedepositForm.controls.chequeNumber.reset();\r\n    this.accountNoList=[];\r\n    this.isedit=false;\r\n    this.accountNum1=[...this.custAccountData].filter((accounNum,index)=>{\r\n      return accounNum.accountType==event;\r\n    });console.log(this.accountNum1)\r\n    // this.accountNoList=this.accountNum1\r\n    // this.accountNoList=this.accountNum1.map((acccount)=>\r\n    // {\r\n    //   return acccount.accountId\r\n    // })\r\n    for(let i = 0; i < this.custAccountData.length; i++){\r\n      if(this.custAccountData[i].status == 'APPROVED' && this.custAccountData[i].accountType == event){\r\n        this.accountNoList.push(this.custAccountData[i].accountId);    \r\n      }\r\n    }\r\n    console.log(this.accountNoList);\r\n    if(this.accountNoList.length<=1){\r\n      this.flag1=false; \r\n      this.chequedepositForm.controls.accountNumber.setValue(this.accountNoList[0]);\r\n      this.getData(this.accountNoList[0])   \r\n    }\r\n    else{\r\n      this.flag1=true;   \r\n      this.getData(this.accountNoList[0]) \r\n    }\r\n    this.getChargeDetails(this.accountNoList[0],'');\r\n  }\r\n  custAccountNumber(custype){\r\n    this.isedit=false;\r\n   this.idList = [...this.custAccountData].filter(item => item.accountType === custype.accountType);\r\n   const defaultId = this.idList ? this.idList[0] : null;\r\n\r\n   this.accountNoList = [];\r\n   for(let i = 0; i < this.idList.length; i++){\r\n      if(this.idList[i].status == 'APPROVED'){\r\n        this.accountNoList.push(this.idList[i].accountId)    \r\n      }\r\n    }\r\n    console.log(this.accountNoList);\r\n    if(this.accountNoList.length<=1){\r\n      // this.cashwithdrawForm.controls.accountNumber.patchValue(this.accountNoList[0]);\r\n      this.flag1=false; \r\n      // this.getData(this.accountNoList[0]);\r\n      this.chequedepositForm.controls.accountNumber.setValue(this.accountNoList[0]);\r\n    }\r\n    else{\r\n      this.chequedepositForm.controls.accountNumber.setValue(this.accountNoList[0]);\r\n      this.flag1=true;   \r\n    }\r\n \r\n  //  this.chequedepositForm.controls.accountNumber.setValue(defaultId);\r\n   this.chequedepositForm.controls.accountCurrency.setValue(custype.accountCurrency);\r\n   this.chequedepositForm.controls.accountBranch.setValue(this.branch);\r\n   //this.chequedepositForm.controls.transactionAmount.setValue(custype.amount);\r\n  //  this.chequedepositForm.controls.accountType.setValue(defaultId);\r\n   this.curr = getCurrencySymbol(custype.accountCurrency, \"narrow\");\r\n   this.chequedepositForm.controls.transactionCurrency.setValue(custype.accountCurrency);\r\n\r\n    this.currencyImage = 'currency-flag-'+custype.accountCurrency.toLowerCase();\r\n  //  this.accountBal = this.idList[0].amount;\r\n   console.log(this.accountBal);\r\n   localStorage.setItem(\"AccountBal\",this.accountBal);\r\n  //  this.chequedepositForm.controls.accountNumber.setValue(this.idList[0].accountId);\r\n   this.custAmountBal(this.accountNoList[0]);\r\n   this.chequedepositForm.controls.accountBranch.setValue(custype.accountBranch);\r\n   this.getChargeDetails(this.accountNoList[0],custype.amount);\r\n  }\r\n  getData(custNum){\r\n    this.hideDetails=true;\r\n    console.log(custNum)\r\n    let val=this.accountNum1.filter((value)=>{\r\n    return value.accountId==custNum}\r\n    )\r\n    console.log(val)\r\n    this.idList = [...this.custAccountData].filter(item => item.accountType === val[0].accountType);\r\n    this.chequedepositForm.controls.accountCurrency.setValue(val[0].accountCurrency);\r\n   this.chequedepositForm.controls.accountBranch.setValue(this.branch);\r\n   this.curr = getCurrencySymbol(val[0].accountCurrency, \"narrow\");\r\n   this.curr = getCurrencySymbol(val[0].accountCurrency, \"narrow\");\r\n   this.chequedepositForm.controls.transactionCurrency.setValue(val[0].accountCurrency);\r\n  \r\n   this.currencyImage = 'currency-flag-'+val[0].accountCurrency.toLowerCase();\r\n   console.log('data :: ',this.idList[0]);\r\n  this.accountBal = this.idList[0].amount;\r\n  \r\n  localStorage.setItem(\"AccountBal\",this.accountBal);\r\n  this.chequedepositForm.controls.accountNumber.setValue(this.idList[0].accountId);\r\n  this.custAmountBal(this.idList[0].accountId);\r\n  this.chequedepositForm.controls.accountNumber.setValue(val[0].accountId);\r\n  this.chequedepositForm.controls.accountBranch.setValue(val[0].accountBranch);\r\n  this.getChargeDetails(val[0].accountId,'')\r\n  }\r\n\r\n  custAmountBal(custNum){\r\n    console.log(custNum);\r\n    var account = this.idList.filter(function (record) {\r\n      if (record.accountId == custNum) {\r\n        return record;\r\n      }\r\n    });\r\n    console.log(account);\r\n    this.accNum = account[0].accountId;\r\n    this.accountBal = account[0].amount;\r\n    this.selectedAccountInfo = account[0]\r\n  }\r\n  setBalance(accountBalance, index = 0){\r\n    this.accountBal = accountBalance[index].currentBalance ? accountBalance[index].currentBalance:null;\r\n  }\r\n onSaveofchequeDeposit(formData,type){\r\n  formData.transactionBranch = this.transBranch;\r\n  formData.tokenBranch = \"KN\";\r\n  if(this.qrData){\r\n    if(this.qrData.transactionBranch){\r\n      this.apiService.fetchBranchInfoByBranchName(this.qrData.transactionBranch).subscribe(response=>{\r\n        this.qrBranchCode=response;\r\n        \r\n      })\r\n    }\r\n  }\r\n  if(!this.ifQRvariable){\r\n  console.log(\"chequedepositData\", formData);\r\n  this.accountNum=JSON.stringify(this.selectedAccountInfo.accountId);\r\n  console.log(\"this.accountNum \", this.accountNum);\r\n  localStorage.setItem(\"AccountNumber\",this.accountNum);\r\n  localStorage.setItem(\"ProductCode\",this.productCode);\r\n  formData.tokenBranch = \"KN\";\r\n  formData.customerId = this.custID;\r\n  formData.transactionCurrency = formData.transactionCurrency;\r\n  formData.transactionAmount = formData.transactionAmount.replace(/,/g, '');\r\n  formData.accountNumber = this.selectedAccountInfo.accountId;\r\n  formData.accountType = formData.accountType;\r\n  formData.productCode = this.productCode;\r\n  formData.tokenOrigin = this.tokenOrigin;\r\n  formData.accountBalance = this.accountBal;\r\n  \r\n  }\r\n  else{\r\n    console.log(formData)\r\n    formData.customerId = this.custID;\r\n    formData.accountType = formData.accountType;\r\n    formData.accountNumber =formData.accountNumber;\r\n    formData.holderName=  formData.holderName;\r\n    formData.accountCurrency  =formData.accountCurrency;\r\n    formData.transactionCurrency = formData.transactionCurrency;\r\n    formData.transactionAmount = formData.transactionAmount;\r\n    formData.totalAmount = formData.totalAmount;\r\n    formData.productCode = this.productCode;\r\n    formData.tokenOrigin = this.tokenOrigin;\r\n    formData.accountBalance = this.accountBal;\r\n    formData.transactionId = formData.transactionId;\r\n    formData.appointmentId = formData.appointmentId;\r\n\r\n    \r\n  }\r\n\r\n  if(this.qrData){\r\n    if(this.qrData.transactionBranch){\r\n      formData.tokenBranch = this.qrBranchCode.transactionBranch;\r\n    }\r\n  }\r\n \r\n  if(this.appointmentId && this.appointmentId.data){\r\n    formData.transactionId = this.appointmentId.data.transactionId;\r\n    formData.transactionStatus = this.appointmentId.data.transactionStatus;\r\n  }\r\n  console.log(formData.transactionId,formData.transactionStatus);\r\n\r\n  formData.totalAmount = formData.totalAmount.replace(/,/g, '');\r\n\r\n  this.apiService.saveofCashDeposit(formData).subscribe(chequeDepositResp=>{\r\n    console.log(\" Response Success\",chequeDepositResp);\r\n    this.chequeDepositResponse = chequeDepositResp;\r\n    this.tokenNum = this.chequeDepositResponse.tokenNumber;\r\n    this.estimatedTime = this.chequeDepositResponse.estimatedWaitTime;\r\n    localStorage.setItem(\"tokenNumer\",this.tokenNum);\r\n    localStorage.setItem(\"estimatedTiming\",this.estimatedTime);\r\n    this.enableContinue=false;\r\n    if(this.chequeDepositResponse){\r\n    this.dialogService.tokenGenerationDialog();\r\n    }\r\n  });\r\n//   this.tokenObjects.productCode = this.productCode;\r\n//   this.tokenObjects.accountNumber = formData.accountNumber;\r\n//   if(this.tokenObjects.productCode !== null || this.tokenObjects.accountNumber !==null){\r\n//   this.apiService.generateToken(this.tokenObjects).subscribe(tokenResp=>{\r\n//     console.log( \"Token Generated\", tokenResp);\r\n//     this.tokResponse = tokenResp;\r\n//     if(this.tokResponse){\r\n//       this.tokenNum = this.tokResponse.tokenNumber;\r\n//       this.estimatedTime = this.tokResponse.estimatedWaitTime;\r\n//       localStorage.setItem(\"tokenNumer\",this.tokenNum);\r\n//       localStorage.setItem(\"estimatedTiming\",this.estimatedTime);\r\n//       formData.tokenNo = this.tokenNum;\r\n//       formData.customerId = this.ls.getItem(\"customerId\");\r\n//       this.apiService.saveofCashDeposit(formData).subscribe(chequeDepositResp=>{\r\n//         console.log(\" Response Success\",chequeDepositResp);\r\n//         this.chequeDepositResponse = chequeDepositResp;\r\n//         this.enableContinue=false;\r\n//         this.dialogService.tokenGenerationDialog();\r\n//       });\r\n//     }\r\n//   });\r\n// }\r\n  }\r\n\r\n  omit_number(event) {\r\n    var key;\r\n    key = event.charCode;\r\n    return ((key > 47 && key < 58));\r\n  }\r\n  totalAmountValue(cdForm) {\r\n    this.a=this.chequedepositForm.value.transactionAmount;\r\n    this.a=this.a.replace(/\\,/g,''); // 1125, but a string, so convert it to number\r\n    this.a=parseInt(this.a,10);\r\n\r\n\r\n    this.chequedepositForm.value.totalAmount =\r\n      ((cdForm.value.count2000 ? cdForm.value.count2000 * 2000 : 0) +\r\n        (cdForm.value.count500 ? cdForm.value.count500 * 500 : 0) +\r\n        (cdForm.value.count200 ? cdForm.value.count200 * 200 : 0) +\r\n        (cdForm.value.count100 ? cdForm.value.count100 * 100 : 0) +\r\n        (cdForm.value.count50 ? cdForm.value.count50 * 50 : 0) +\r\n        (cdForm.value.count20 ? cdForm.value.count20 * 20 : 0) +\r\n        (cdForm.value.count10 ? cdForm.value.count10 * 10 : 0) +\r\n        (cdForm.value.count1 ? cdForm.value.count1 * 1 : 0)\r\n        );\r\n        console.log(this.chequedepositForm.value.totalAmount)\r\n        console.log(this.chequedepositForm.value.transactionAmount);\r\n        this.transamount=this.chequedepositForm.value.transactionAmount;\r\n        this.totalAmount=this.chequedepositForm.value.totalAmount;\r\n        this.chequedepositForm.controls.totalAmount.setValue(this.chequedepositForm.value.totalAmount);\r\n        \r\n  }\r\n  OnInput(event: any) {\r\n   this.transAmt= event.target.value;\r\n\r\n     // comma separator using changeDetector\r\n   const savedInput = this.transAmount;\r\n\r\n   let lastCharIsPoint = false;\r\n   if (savedInput.charAt(savedInput.length - 1) === '.') {\r\n     lastCharIsPoint = true;\r\n   }\r\n   const num = savedInput.replace(/[^0-9.]/g, '');\r\n   this.transAmt = Number(num) || '';\r\n   this.transAmount = this.transAmt.toLocaleString('en-IN');\r\n   if (lastCharIsPoint) {\r\n     this.transAmount = this.transAmount.concat('.');\r\n   }\r\n   this.changeDef.detectChanges();\r\n    this.balance= localStorage.getItem(\"AccountBal\");\r\n    if(parseFloat(this.balance) < parseFloat(this.transAmt)){\r\n      console.log(\"Bigger\")\r\n      this.snack.open(`Transaction Amount should not exceed than Account Balance`, 'OK', {\r\n        duration: 2000,\r\n        verticalPosition: 'top',\r\n        horizontalPosition: 'right'\r\n      });\r\n      this.enableContinue=false;\r\n    }\r\n    else{\r\n      this.enableContinue=true;\r\n    }\r\n    this.totalTransAmount=Number(this.transAmt) + Number(this.chargeDetails?this.chargeDetails[0].amount:'');\r\n    this.chequedepositForm.controls.totalTransactionAmount.setValue(this.totalTransAmount);\r\n    this.cdr.markForCheck();\r\n    this.cdr.detectChanges();\r\n    }\r\n    getChargeDetails(accountId,amount){\r\n      this.apiService.fetchChargeDetails(accountId).subscribe(resp => {\r\n    console.log(resp);\r\n    this.chargeDetails=resp;\r\n    this.chequedepositForm.controls.totalChargeAmount.setValue(this.chargeDetails?this.chargeDetails[0].amount:'');\r\n      });\r\n      if(this.cashData){\r\n      setTimeout(() => {\r\n        this.totalTransAmount=Number(this.cashData.transactionAmount) + Number(this.chargeDetails?this.chargeDetails[0].amount:'');\r\n        this.chequedepositForm.controls.totalTransactionAmount.setValue(this.totalTransAmount);\r\n      }, 1000);\r\n      this.cdr.markForCheck();\r\n      this.cdr.detectChanges();\r\n    }\r\n    else{\r\n      console.log(this.chargeDetails)\r\n      amount=0;\r\n      console.log(amount);\r\n      setTimeout(() => {\r\n        this.totalTransAmount=Number(amount) + Number(this.chargeDetails?this.chargeDetails[0].amount:'');\r\n        console.log(this.totalTransAmount);\r\n        this.chequedepositForm.controls.totalTransactionAmount.setValue(this.totalTransAmount);\r\n      }, 1000);\r\n      this.cdr.markForCheck();\r\n      this.cdr.detectChanges();\r\n    }\r\n  \r\n      // console.log(this.totalTransAmount);\r\n    \r\n    }\r\n \r\n\r\n    addCurrencyImage(currency) {\r\n      return currency.toLowerCase();\r\n    }\r\n\r\n    clicked(event){\r\n      console.log(event);\r\n    }\r\n  \r\n    onCountryChange(country) {\r\n      let currency = country.currencyCode;\r\n      this.currencyImage = 'currency-flag-'+currency.toLowerCase();\r\n    }\r\n  \r\n    accountCurrencyImage(accountCurrency){\r\n      return accountCurrency? 'currency-flag-'+accountCurrency.toLowerCase() : '';\r\n    }\r\n  \r\n  formatAmount(amount) {\r\n    if(amount){\r\n      return amount && amount.toString().split('.')[0].length > 3 ? amount.toString().substring(0,amount.toString().split('.')[0].length-3).replace(/\\B(?=(\\d{2})+(?!\\d))/g, \",\") + \",\" + amount.toString().substring(amount.toString().split('.')[0].length-3): amount.toString();\r\n     }\r\n  }\r\n  cashWithdrawlData(){\r\n    this.apiService.getAppointmentId(this.appointmentId.data.appointmentId).subscribe((resp : any)=> {\r\n      console.log(resp);\r\n      this.cashData=resp.data;\r\n      this.custID=resp.data.customerId;\r\n      this.ifQRvariable = true;\r\n      this.chequedepositForm.controls.accountType.setValue(resp.data.accountType);\r\n      this.chequedepositForm.controls.accountBranch.setValue(resp.data.accountBranch);\r\n      this.chequedepositForm.controls.accountNumber.setValue(resp.data.accountNumber);\r\n      this.chequedepositForm.controls.chequeNumber.setValue(resp.data.chequeNumber);\r\n      this.getChargeDetails(resp.data.accountNumber,resp.data.transactionAmount);\r\n      this.chequedepositForm.controls.accountCurrency.setValue(resp.data.accountCurrency);\r\n      this.chequedepositForm.controls.transactionCurrency.setValue(resp.data.transactionCurrency);\r\n      this.chequedepositForm.controls.transactionAmount.setValue(resp.data.transactionAmount);\r\n      this.currencyImage = 'currency-flag-'+resp.data.accountCurrency.toLowerCase();\r\n      this.currencyImage = 'currency-flag-'+resp.data.transactionCurrency.toLowerCase();\r\n  \r\n  \r\n    });\r\n  }\r\n  \r\n}\r\n\r\n\r\n","<div class=\"fullcard\">\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"center center\">\r\n        <div fxFlex=\"100%\">\r\n            <h6 class=\"h1\"><span style=\"color:grey;padding-right: 4px;\">Services</span> <b>></b> <span style=\"padding-left: 4px;\"><b>Cheque Deposit</b></span></h6>\r\n            <mat-card class=\"chequecard\">\r\n                <mat-card-title style=\"padding: 2%;\">\r\n                    <div fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n                        <div>\r\n                            <mat-icon *ngIf=\"phoneNumber\" class=\"backIcon\" (click)=\"goToServiceScreens()\">keyboard_backspace</mat-icon>\r\n                        </div>&nbsp;&nbsp;\r\n                        <div class=\"card-title\">{{titleName}}</div>\r\n                    </div>\r\n                </mat-card-title>\r\n                <mat-card-content>\r\n                    <div class=\"full-width\" style=\"padding: 0% 0% 3% 2%;\">\r\n                        <form [formGroup]=\"chequedepositForm\">\r\n                            <div fxLayout=\"column\" fxLayoutGap=\"3%\" fxLayoutAlign=\"space-between none\">\r\n                                <div>\r\n                                    <div fxLayout=\"row wrap\" class=\"flex-container stretch\">\r\n                                        <ng-container>\r\n                                            <div fxFlex=\"25%\" fxFlex.xs=\"100%\"  *ngIf=\"showAccountNum\">\r\n                                                <mat-hint class=\"totalAmount\">Account Type*</mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <input matInput  type=\"text\" *ngIf=\"phoneNumber && !accountDropdown\"  [readonly]=\"true\" class=\"full-width\" formControlName=\"accountType\" >\r\n                                                    <!-- <mat-select *ngIf=\"phoneNumber && accountDropdown\" formControlName=\"accountType\" (selectionChange)=\"getAccountType($event.value)\"\r\n                                                        style=\"background-color: #f9fafb;\"\r\n                                                        placeholder=\"Select Account Type\">\r\n                                                        <mat-option *ngFor=\"let type of accounttypeArray \"\r\n                                                            \r\n                                                            [value]=\"type.accountType\">{{type.accountType}}</mat-option>\r\n                                                    </mat-select> -->\r\n                                                    <mat-select formControlName=\"accountType\"  *ngIf=\"phoneNumber && accountDropdown\"   style=\"background-color: #f9fafb;\" (selectionChange)=\"getAccountType($event.value)\" placeholder=\"Select Account Type\">\r\n                                                        <mat-option *ngFor=\"let type of accounttypeArray \"  (click)=\"custAccountNumber(type)\"  [value]=\"type.accountType\">{{type.accountType}}</mat-option>\r\n                                                    </mat-select>\r\n                                                    <!-- <input matInput type=\"text\"  [readonly]=\"true\" class=\"full-width\" formControlName=\"accountType\" > -->\r\n\r\n                                                </mat-card>\r\n                                            </div>\r\n                                            <div fxFlex=\"25%\" fxFlex.xs=\"100%\" *ngIf=\"!showAccountNum\" >\r\n                                                <mat-hint class=\"totalAmount\">Account Number*</mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <input matInput type=\"text\"  \r\n                                                        class=\"full-width\" formControlName=\"accountNumber\"\r\n                                                        (change)=\"fetchByAccountNum(chequedepositForm.get('accountNumber').value)\">\r\n                                                </mat-card>\r\n                                                    <!-- <mat-hint class=\"totalAmount\" *ngIf=\"!phoneNumber\" >Account Balance :{{curr }} {{accountBal | number: '2.' }}</mat-hint> -->\r\n                                                    <mat-hint class=\"totalAmount\" *ngIf=\"!showAccountNum\" >Account Balance\r\n                                                        : {{curr }}{{formatAmount(accountBal)}}</mat-hint>\r\n                                                    <br>\r\n                                                    <!-- <mat-hint  class=\"totalAmount\" *ngIf=\"!phoneNumber\"  [readonly]=\"true\"  formControlName=\"holderName\">Holder Name :{{userName}}</mat-hint> -->\r\n                                                    <mat-hint class=\"totalAmount\" *ngIf=\"!showAccountNum\" [readonly]=\"true\">\r\n                                                        Holder Name : {{userName}}</mat-hint>\r\n                                            </div>\r\n                                            <div fxFlex=\"25%\" fxFlex.xs=\"100%\" *ngIf=\"showAccountNum\">\r\n                                                <mat-hint class=\"totalAmount\">Account Number*</mat-hint>\r\n                                                <mat-card class=\"inputCard\" >\r\n                                                    <!-- <input matInput type=\"text\" *ngIf=\"!phoneNumber\"  [readonly]=\"true\" class=\"full-width\" formControlName=\"accountNumber\" > -->\r\n                                                    <input matInput type=\"text\" *ngIf=\"!flag1\"  [readonly]=\"true\" class=\"full-width\" formControlName=\"accountNumber\" >\r\n                                                    <!-- <mat-select formControlName=\"accountNumber\" *ngIf=\"phoneNumber\"  style=\"background-color: #f9fafb;\" > -->\r\n                                                        <mat-select formControlName=\"accountNumber\" (selectionChange)=\"fetchByAccountNum($event.value)\" *ngIf=\"flag1\"  style=\"background-color: #f9fafb;\" >\r\n                                                        \r\n                                                            <mat-option>select</mat-option>\r\n                                                            <mat-option  *ngFor=\"let id of accountNoList \"   [value]=\"id\">{{id}}</mat-option>\r\n                                                           \r\n                                                    </mat-select>\r\n                                                </mat-card>\r\n                                                <!-- <mat-hint class=\"totalAmount\"  *ngIf=\"!phoneNumber\"  >Account Balance :{{curr }} {{accountBal | number: '2.' }}</mat-hint> -->\r\n                                                <mat-hint class=\"totalAmount\"  *ngIf=\"hideDetails\"  >Account Balance :{{curr }} {{formatAmount(accountBal)}}</mat-hint><br>\r\n                                                <mat-hint  class=\"totalAmount\"  *ngIf=\"hideDetails\" [readonly]=\"true\"  formControlName=\"holderName\">Holder Name :{{userName}}</mat-hint>\r\n                                            </div>\r\n                                            <div fxFlex=\"25%\" fxFlex.xs=\"100%\" *ngIf=\"!showAccountNum\" >\r\n                                                <mat-hint class=\"totalAmount\">Account Type*</mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <input matInput type=\"text\"  [readonly]=\"true\" \r\n                                                        class=\"full-width\" formControlName=\"accountType\">\r\n                                    \r\n                                                </mat-card>\r\n                                            </div>\r\n                                            <div fxFlex=\"25%\" fxFlex.xs=\"100%\">\r\n                                                <mat-hint class=\"accountBranch\">Account Branch*</mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <input matInput *ngIf=\"!phoneNumber\" type=\"text\"\r\n                                                    [readonly]=\"true\" class=\"full-width\"\r\n                                                    formControlName=\"accountBranch\">\r\n                                                <input matInput *ngIf=\"phoneNumber\" type=\"text\"\r\n                                                    [readonly]=\"true\" class=\"full-width\"\r\n                                                    formControlName=\"accountBranch\">\r\n                                                </mat-card>\r\n                                                <mat-error\r\n                                                    *ngIf=\"chequedepositForm.get('accountBranch').touched && !chequedepositForm.get('accountBranch').valid\">\r\n                                                    Account Branch is Required!\r\n                                                </mat-error>\r\n                                            </div>\r\n                                            <div fxFlex=\"25%\" fxFlex.xs=\"100%\">\r\n                                                <mat-hint class=\"totalAmount\">Account Currency*</mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <div fxLayout=\"row wrap\" class=\"full-width\">\r\n                                                        <div fxFlex=\"25%\">\r\n                                                            <div *ngIf=\"ifQRvariable\" class=\"currency-flag {{isedit?accountCurrencyImage(chequedepositForm.controls['accountCurrency'].value):currencyImage}}\"></div>\r\n                                                            <div *ngIf=\"!ifQRvariable\" class=\"currency-flag {{!isedit?accountCurrencyImage(chequedepositForm.controls['accountCurrency'].value):currencyImage}}\"></div>\r\n                                                        </div>\r\n                                                        <div fxFlex=\"75%\">\r\n                                                            <input matInput type=\"text\" *ngIf=\"!phoneNumber\" [readonly]=\"true\" class=\"full-width\" style=\"font-size:110%\" formControlName=\"accountCurrency\">\r\n                                                            <input matInput type=\"text\" *ngIf=\"phoneNumber\" [readonly]=\"true\" class=\"full-width\" style=\"font-size:110%\" formControlName=\"accountCurrency\">\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </mat-card>\r\n                                            </div>\r\n                                        </ng-container>\r\n                                    </div>\r\n                                </div>\r\n    \r\n                                <div>\r\n                                    <div fxLayout=\"row wrap\" class=\"flex-container stretch\">\r\n                                        <ng-container>\r\n                                           \r\n                                            <div fxFlex=\"25%\" fxFlex.xs=\"100%\" *ngIf=\"showAccountNum\">\r\n                                                <mat-hint class=\"totalAmount\">Transaction Currency* </mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <div fxLayout=\"row wrap\" class=\"full-width\">\r\n                                                        <div fxFlex=\"25%\">\r\n                                                            <div class=\"currency-flag {{currencyImage}}\"></div>\r\n                                                        </div>\r\n                                                        <div fxFlex=\"75%\">\r\n                                                            <input matInput type=\"text\" *ngIf=\"!phoneNumber\" [readonly]=\"true\" class=\"full-width\" formControlName=\"transactionCurrency\">\r\n                                                            <mat-select formControlName=\"transactionCurrency\" *ngIf=\"phoneNumber\"  placeholder=\"Select Transaction Currency\" id=\"testSelect\" style=\"background-color: #f9fafb;\" [disabled]=\"isedit\">\r\n                                                                <mat-option *ngFor=\"let country of countryValues; let i = index\" style=\"font-size:110%\" (click)=\"onCountryChange(country)\" [value]=\"country.currencyCode\">\r\n                                                                    <div fxLayout=\"row wrap\" class=\"full-width\">\r\n                                                                        <div fxFlex=\"15%\">{{country.currencyCode}}</div>\r\n                                                                        <div fxFlex=\"85%\">\r\n                                                                            <div class=\"currency-flag currency-flag-{{addCurrencyImage(country.currencyCode)}} alignImage\">\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </mat-option>\r\n                                                            </mat-select>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </mat-card>\r\n                                            </div>\r\n                                            <div fxFlex=\"25%\" fxFlex.xs=\"100%\" *ngIf=\"!showAccountNum\">\r\n                                                <mat-hint class=\"totalAmount\">Transaction Currency* </mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <div fxLayout=\"row wrap\" class=\"full-width\">\r\n                                                        <div fxFlex=\"25%\">\r\n                                                            <div class=\"currency-flag {{currencyImage}}\"></div>\r\n                                                        </div>\r\n                                                        <div fxFlex=\"75%\">\r\n                                                            <mat-select formControlName=\"transactionCurrency\"\r\n                                                                placeholder=\"Select Transaction Currency\"\r\n                                                                id=\"testSelect\" style=\"background-color: #f9fafb;\"\r\n                                                                >\r\n                                                                <mat-option\r\n                                                                    *ngFor=\"let country of countryValues; let i = index\"\r\n                                                                    (click)=\"onCountryChange(country)\" style=\"font-size:110%\"\r\n                                                                    [value]=\"country.currencyCode\">\r\n                                                                    <div fxLayout=\"row wrap\" class=\"full-width\">\r\n                                                                        <div fxFlex=\"15%\">{{country.currencyCode}}</div>\r\n                                                                        <div fxFlex=\"85%\">\r\n                                                                            <div\r\n                                                                                class=\"currency-flag currency-flag-{{addCurrencyImage(country.currencyCode)}} alignImage\">\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </mat-option>\r\n                                                            </mat-select>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </mat-card>\r\n                                            </div>\r\n\r\n                                            <div fxFlex=\"25%\" fxFlex.xs=\"100%\" *ngIf=\"showAccountNum\">\r\n                                                <mat-hint class=\"totalAmount\">Transaction Amount*</mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <input matInput type=\"text\" *ngIf=\"!phoneNumber\" [readonly]=\"true\" class=\"full-width\" formControlName=\"transactionAmount\">\r\n                                                    <input matInput class=\"full-width\" *ngIf=\"phoneNumber\"  #myRef [(ngModel)]= \"transAmount\"  formControlName=\"transactionAmount\" [value]= \"transAmt | number: '1.'\"\r\n                                                    (keyup)=\"OnInput($event)\" (focus)=\"clicked($event)\" [readonly]=\"isedit\" >\r\n                                                </mat-card>\r\n                                                <mat-error *ngIf=\"chequedepositForm.get('transactionAmount').errors?.min\">\r\n                                                    Amount must be greater than zero\r\n                                                   </mat-error>\r\n                                            </div>\r\n                                            <div fxFlex=\"25%\" fxFlex.xs=\"100%\" *ngIf=\"!showAccountNum\">\r\n                                                <mat-hint class=\"totalAmount\">Transaction Amount*</mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <input matInput class=\"full-width\" #myRef\r\n                                                        [(ngModel)]=\"transAmount\" formControlName=\"transactionAmount\"\r\n                                                        [value]=\"transAmt | number: '1.'\" (keyup)=\"OnInput($event)\"\r\n                                                        (focus)=\"clicked($event)\" >\r\n                                                </mat-card>\r\n                                                <mat-error *ngIf=\"chequedepositForm.get('transactionAmount').errors?.min\">\r\n                                                    Amount must be greater than zero\r\n                                                </mat-error>\r\n                                            </div>\r\n                                            <div fxFlex=\"25%\" fxFlex.xs=\"100%\">\r\n                                                <mat-hint class=\"totalAmount\">Cheque Number*</mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <!-- <mat-select formControlName=\"holderName\"  style=\"background-color: #f9fafb;\" >\r\n                                                        <mat-option *ngFor=\"let holder of customerName;\" [value]=\"holder\">{{holder}}</mat-option>\r\n                                                    </mat-select> -->\r\n                                                    <input matInput type=\"text\" maxlength=\"6\" (keypress)=\"omit_number($event)\"  *ngIf=\"!phoneNumber\"   class=\"full-width\" formControlName=\"chequeNumber\" >\r\n                                                    <input matInput type=\"text\" maxlength=\"6\" (keypress)=\"omit_number($event)\" *ngIf=\"phoneNumber\"  class=\"full-width\" formControlName=\"chequeNumber\" >\r\n                                                </mat-card>\r\n                                                <mat-error *ngIf=\"chequedepositForm.get('chequeNumber').touched && !chequedepositForm.get('chequeNumber').valid\">\r\n                                                    Cheque Number is Required!\r\n                                                   </mat-error>\r\n                                            </div>\r\n                                            <div fxFlex=\"25%\" fxFlex.xs=\"100%\">\r\n                                                <mat-hint class=\"totalAmount\">Total Charge Amount*</mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <input matInput class=\"full-width\" readonly formControlName=\"totalChargeAmount\">\r\n                                                </mat-card>\r\n\r\n                                            </div>\r\n                                            <div fxFlex=\"25%\" fxFlex.xs=\"100%\">\r\n                                                <mat-hint class=\"totalAmount\">Total Transaction Amount*</mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <input matInput type=\"text\" readonly onlyNumber formControlName=\"totalTransactionAmount\">\r\n\r\n                                                </mat-card>\r\n\r\n                                            </div>\r\n                                            <div class=\"tooltip\">\r\n                                                <img width=\"80%\"\r\n                                            [src]=\"'assets/images/info.svg'\"/>\r\n                                                <div class=\"tooltiptext\">\r\n                                                    <p class=\"totalAmount textcolor\" style=\"margin-top:10px; margin-bottom:6px\">Transaction Amount:{{chequedepositForm.get('transactionAmount').value}} </p>\r\n                                                    <p class=\"totalAmount textcolor\">Total Charge Amount:{{chequedepositForm.get('totalChargeAmount').value}} </p>\r\n                                                    <hr/>\r\n                                                    <p class=\"totalAmount textcolor\" style=\"margin-right:10px ;\">Total Transaction Amount:{{chequedepositForm.get('totalTransactionAmount').value}} </p>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                        </ng-container>\r\n                                    </div>\r\n                                </div>\r\n                             \r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </mat-card-content>\r\n            </mat-card>\r\n            <div>\r\n                <div fxLayout=\"row wrap\" class=\"flex-container stretch\">\r\n                    <ng-container>\r\n                        <div fxFlex=\"30%\" fxFlex.xs=\"100%\" class=\"paddingCls\">\r\n                            <button mat-flat-button *ngIf=\"phoneNumber\" class=\"buttonCancel full-width\"\r\n                                (click)=\"goToServiceScreens()\">CANCEL</button>\r\n                        </div>\r\n                        <div fxFlex=\"70%\" fxFlex.xs=\"100%\" class=\"paddingCls\" *ngIf=\"showAccountNum\">\r\n                            <button mat-flat-button class=\"buttonNext full-width\"\r\n                            [disabled]=\"!enableContinue || !chequedepositForm.get('transactionCurrency').valid\r\n                            ||!chequedepositForm.get('transactionAmount').valid\r\n                            ||!chequedepositForm.get('accountCurrency').valid\r\n                            ||!chequedepositForm.get('accountNumber').valid \r\n                            ||!chequedepositForm.get('accountType').valid\r\n                            ||!chequedepositForm.get('chequeNumber').valid\r\n                            ||!chequedepositForm.get('totalChargeAmount').valid\r\n                            ||!chequedepositForm.get('totalTransactionAmount').valid\"\r\n                                (click)=\"onSaveofchequeDeposit(chequedepositForm.value, ifQRvariable)\">GENERATE TOKEN</button>\r\n                        </div>\r\n                        <div fxFlex=\"70%\" fxFlex.xs=\"100%\" class=\"paddingCls\" *ngIf=\"!showAccountNum\">\r\n                            <button mat-flat-button class=\"buttonNext full-width\"\r\n                            [disabled]=\"!enableContinue || !chequedepositForm.get('transactionCurrency').valid\r\n                            ||!chequedepositForm.get('transactionAmount').valid\r\n                            ||!chequedepositForm.get('accountCurrency').valid\r\n                            ||!chequedepositForm.get('accountNumber').valid \r\n                            ||!chequedepositForm.get('accountType').valid\r\n                            ||!chequedepositForm.get('chequeNumber').valid\r\n                            ||!chequedepositForm.get('totalChargeAmount').valid\r\n                            ||!chequedepositForm.get('totalTransactionAmount').valid\"\r\n                                (click)=\"getOTP(chequedepositForm.value, ifQRvariable)\">CONTINUE</button>\r\n                        </div>\r\n                    </ng-container>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n       \r\n\r\n        \r\n    </div>\r\n</div>\r\n\r\n","import { Routes } from '@angular/router';\r\nimport { AppBlankComponent } from './app-blank/app-blank.component';\r\nimport { AuthenticateComponent } from './authenticate/authenticate.component';\r\nimport { CashDepositComponent } from './cash-deposit/cash-deposit.component';\r\nimport { CashWithdrawalComponent } from './cash-withdrawal/cash-withdrawal.component';\r\nimport { ChequeDepositComponent } from './cheque-deposit/cheque-deposit.component';\r\nimport { ChequeWithdrawalComponent } from './cheque-withdrawal/cheque-withdrawal.component';\r\nimport { ChequeWithdrawal1Component } from './cheque-withdrawal1/cheque-withdrawal1.component';\r\nimport { DepositTopupComponent } from './deposit-topup/deposit-topup.component';\r\nimport { ForexTransactionComponent } from './forex-transaction/forex-transaction.component';\r\nimport { LoanPaymentComponent } from './loan-payment/loan-payment.component';\r\nimport { SelectServiceComponent } from './select-service/select-service.component';\r\nimport { UtilityBillpaymentComponent } from './utility-billpayment/utility-billpayment.component';\r\n\r\nexport const OthersRoutes: Routes = [\r\n  {\r\n    path: \"\",\r\n    // component: DashboardComponent,\r\n\r\n    children: [\r\n      {\r\n        path: \"blank\",\r\n        component: AppBlankComponent,\r\n        // data: { title: 'Blank', breadcrumb: 'BLANK' }\r\n      },\r\n      {\r\n        path: \"cheque-withdrawal\" ,\r\n        component: ChequeWithdrawalComponent,\r\n        // data: { title: 'Blank', breadcrumb: 'BLANK' }\r\n      },\r\n      {\r\n        path: \"services\" ,\r\n        component: SelectServiceComponent,\r\n      },\r\n      {\r\n        path: \"authenticate\" ,\r\n        component: AuthenticateComponent,\r\n        // data: { title: 'Blank', breadcrumb: 'BLANK' }\r\n      },\r\n      {\r\n        path: \"cash-withdrawal\" ,\r\n        component: CashWithdrawalComponent,\r\n      },\r\n      {\r\n        path: \"cash-deposit\" ,\r\n        component: CashDepositComponent,\r\n      },\r\n      {\r\n        path: \"cheque-deposit\" ,\r\n        component: ChequeDepositComponent,\r\n      },\r\n      {\r\n        path: \"cheque-withdrawal\" ,\r\n        component: ChequeWithdrawal1Component,\r\n      },\r\n      {\r\n        path: \"forex-transaction\" ,\r\n        component: ForexTransactionComponent,\r\n      },\r\n      {\r\n        path: \"loan-payment\" ,\r\n        component: LoanPaymentComponent,\r\n      },\r\n      {\r\n        path: \"deposit-topup\" ,\r\n        component: DepositTopupComponent,\r\n      },\r\n      {\r\n        path: \"utility-billpayment\" ,\r\n        component: UtilityBillpaymentComponent,\r\n      },\r\n     \r\n    ]\r\n  } \r\n];\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl, FormBuilder, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { DialogService } from 'app/shared/services/Dialog/dialog.service';\r\n\r\ninterface Testing {\r\n  value: string;\r\n  viewValue: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-deposit-topup',\r\n  templateUrl: './deposit-topup.component.html',\r\n  styleUrls: ['./deposit-topup.component.scss']\r\n})\r\nexport class DepositTopupComponent implements OnInit {\r\n  depositForm: FormGroup;\r\n  depositTopUp : any = 'Deposit Top Up';\r\n  constructor(private router : Router,private formBuilder: FormBuilder, private dialogService : DialogService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.depositForm = this.formBuilder.group({\r\n      depositAccount:['', [Validators.required]],\r\n      revisedAmount:['', [Validators.required]],\r\n      maturityAmount:['', [Validators.required]],\r\n      payFromAccount:['', [Validators.required]],\r\n      holderName:['', [Validators.required]],\r\n      topupAmount:['', [Validators.required]], \r\n    });\r\n  }\r\n  goToServiceScreens(){\r\n    this.router.navigateByUrl('/others/services');\r\n  }\r\n  goToAuthenticate(){\r\n    this.dialogService.authenticationDialog();\r\n  }\r\n\r\n  testing: Testing[] = [\r\n    { value: 'Demo', viewValue: 'Demo 1' },\r\n    { value: 'Demo', viewValue: 'Demo 2' },\r\n    { value: 'Demo', viewValue: 'Demo 3' }\r\n  ];\r\n\r\n\r\n}\r\n","<div class=\"fullcard\">\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"center center\">\r\n        <div fxFlex=\"80%\">\r\n            <mat-card class=\"chequecard\">\r\n                <mat-card-title style=\"padding: 2%;\">\r\n                    <div fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n                        <div>\r\n                            <mat-icon class=\"backIcon\" (click)=\"goToServiceScreens()\">keyboard_backspace</mat-icon>\r\n                        </div> &nbsp;&nbsp;\r\n                        <div class=\"card-title\">Deposit Top Up</div>\r\n                    </div>\r\n                </mat-card-title>\r\n                <mat-card-content>\r\n                    <div class=\"full-width\" style=\"padding: 0% 3% 3% 2%;\">\r\n                        <!-- <form #depositForm=\"ngForm\"> -->\r\n                        <form [formGroup]=\"depositForm\">     \r\n                            <div fxLayout=\"column\" fxLayoutGap=\"5%\" fxLayoutAlign=\"space-between none\">\r\n                                <div>\r\n                                    <div fxLayout=\"row wrap\" class=\"flex-container stretch\">\r\n                                        <ng-container>\r\n                                            <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                                <mat-hint class=\"totalAmount\">Deposit Account* </mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <mat-select formControlName=\"depositAccount\" class=\"full-width\" style=\"background-color: #f9fafb;\">\r\n                                                        <mat-option *ngFor=\"let test of testing\" [value]=\"test.value\">\r\n                                                            {{test.viewValue}}\r\n                                                        </mat-option>\r\n                                                    </mat-select>\r\n                                                </mat-card>\r\n                                                <mat-hint class=\"totalAmount\">Account Balance : $12,09470</mat-hint>\r\n                                            </div>\r\n                                            <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                                <mat-hint class=\"totalAmount\">Revised Principal Amount*</mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <input matInput formControlName=\"revisedAmount\" class=\"full-width inputClass\" type=\"text\"\r\n                                                        name=\"revisedAmount\">\r\n                                                </mat-card>\r\n\r\n                                            </div>\r\n                                            <div fxFlex=\"34%\" fxFlex.xs=\"100%\">\r\n                                                <mat-hint class=\"totalAmount\">Revised Maturity Amount* </mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <input matInput formControlName=\"maturityAmount\" type=\"text\" class=\"full-width inputClass\"\r\n                                                        name=\"maturityAmount\">\r\n                                                </mat-card>\r\n                                            </div>\r\n                                        </ng-container>\r\n                                    </div>\r\n                                </div>\r\n                                <div>\r\n                                    <span layout=\"row\">\r\n                                        <hr class=\"line\" flex />\r\n                                    </span>\r\n                                </div>\r\n                                <div>\r\n                                    <div fxLayout=\"row wrap\" class=\"flex-container stretch\">\r\n                                        <ng-container>\r\n                                            <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                                <mat-hint class=\"totalAmount\">Pay from Account*</mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <mat-select formControlName=\"payFromAccount\" class=\"full-width\" style=\"background-color: #f9fafb;\">\r\n                                                        <mat-option *ngFor=\"let test of testing\" [value]=\"test.value\">\r\n                                                            {{test.viewValue}}\r\n                                                        </mat-option>\r\n                                                    </mat-select>\r\n                                                </mat-card>\r\n                                            </div>\r\n                                            <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                                <mat-hint class=\"totalAmount\"> Holder Name* </mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <mat-select formControlName=\"holderName\" class=\"full-width\" style=\"background-color: #f9fafb;\">\r\n                                                        <mat-option *ngFor=\"let test of testing\" [value]=\"test.value\">\r\n                                                            {{test.viewValue}}\r\n                                                        </mat-option>\r\n                                                    </mat-select>\r\n                                                </mat-card>\r\n                                            </div>\r\n                                            <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                                <mat-hint class=\"totalAmount\">Top Up Amount*</mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <input matInput formControlName=\"topupAmount\" type=\"text\" class=\"full-width inputClass\"\r\n                                                        name=\"topupAmount\">\r\n                                                </mat-card>\r\n                                            </div>\r\n                                        </ng-container>\r\n                                    </div>\r\n                                </div>\r\n                                <div>\r\n                                    <div fxLayout=\"row wrap\" class=\"flex-container stretch\">\r\n                                        <ng-container>\r\n                                            <div fxFlex=\"30%\" fxFlex.xs=\"100%\" style=\"padding: 0% 1%;\">\r\n                                                <button mat-flat-button class=\"buttonCancel full-width\"\r\n                                                    (click)=\"goToServiceScreens()\">CANCEL</button>\r\n                                            </div>\r\n                                            <div fxFlex=\"70%\" fxFlex.xs=\"100%\" style=\"padding: 0% 2%;\">\r\n                                                <button mat-flat-button class=\"buttonNext full-width\"\r\n                                                [disabled]=\" !depositForm.get('depositAccount').valid\r\n                                                || !depositForm.get('revisedAmount').valid\r\n                                                || !depositForm.get('maturityAmount').valid\r\n                                                || !depositForm.get('payFromAccount').valid\r\n                                                || !depositForm.get('holderName').valid\r\n                                                || !depositForm.get('topupAmount').valid \"\r\n                                                    (click)=\"goToAuthenticate()\">CONTINUE</button>\r\n                                            </div>\r\n                                        </ng-container>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </mat-card-content>\r\n            </mat-card>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-blank',\r\n  templateUrl: './app-blank.component.html',\r\n  styleUrls: ['./app-blank.component.css']\r\n})\r\nexport class AppBlankComponent implements OnInit {\r\n\r\n  constructor(private route:Router,) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n  onClickOfButton()\r\n  {\r\n    this.route.navigateByUrl('/others/cheque-withdrawal');\r\n  }\r\n  onClickOfButton1()\r\n  {\r\n    this.route.navigateByUrl('/others/cheque-withdrawal1');\r\n  }\r\n\r\n  onClickOfButton3()\r\n  {\r\n    this.route.navigateByUrl('/others/authenticate');\r\n  }\r\n\r\n}\r\n","<p class=\"m-333\">\r\n  <button mat-button (click)=\"onClickOfButton1()\" color=\"primary\">Cheque-Withdrawal 2</button>\r\n  <button mat-button (click)=\"onClickOfButton()\" color=\"primary\">Cheque-Withdrawal 3</button>\r\n  <button mat-button (click)=\"onClickOfButton3()\" color=\"primary\">Authentication</button>\r\n\r\n</p>","import { Component, EventEmitter, Inject, OnInit, Output } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { verifyotpModel } from 'app/shared/models/otp.model';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\n\r\n@Component({\r\n  selector: 'app-otp-verify',\r\n  templateUrl: './otp-verify.component.html',\r\n  styleUrls: ['./otp-verify.component.scss']\r\n})\r\nexport class OtpVerifyComponent implements OnInit {\r\n  errormsg : string;\r\n  basicInformationForm: FormGroup;\r\n  public number;\r\n  public type;\r\n  title: string;\r\n  customerPhoneNum: string;\r\n  verifyOtpModel = new verifyotpModel();\r\n  @Output() afterSubmit : EventEmitter<boolean> = new EventEmitter();\r\n  \r\n  constructor(private dialogRef: MatDialogRef<OtpVerifyComponent>, private apiService: ApiService,\r\n    private snack: MatSnackBar,private fb: FormBuilder,private router: Router,\r\n    @Inject(MAT_DIALOG_DATA) private data: any) { }\r\n\r\n  ngOnInit(): void {\r\n    this.title = \"An OTP has been sent to the Registered Mobile Number!\";\r\n    this.basicInformationForm = this.fb.group({\r\n      otp: ['',[Validators.required]],\r\n    \r\n    })\r\n  }\r\n  closeClick(){\r\n    this.dialogRef.close();\r\n  }\r\n  validateOtp(otpValue) {\r\n    console.log(\"OTP validaion\", otpValue);\r\n    if(otpValue.otpNumber ==\"\")\r\n    {\r\n      this.snack.open(`Please enter OTP to continue`, 'OK', {\r\n        duration: 4000,\r\n        verticalPosition: 'top',\r\n        horizontalPosition: 'right'\r\n      }); \r\n    }\r\n    else{\r\n    this.customerPhoneNum = localStorage.getItem(\"otpPhoneNum\");\r\n    console.log(\"Phonenumber from Local\", this.customerPhoneNum, otpValue);\r\n    this.verifyOtpModel.sourceKey = 'mobile';\r\n    this.verifyOtpModel.sourceValue = this.customerPhoneNum;\r\n    this.verifyOtpModel.otp = otpValue.otp;\r\n    this.verifyOtpModel.type = '';\r\n    console.log(\"model\", this.verifyOtpModel);\r\n    this.apiService.verifyOtp(this.verifyOtpModel).subscribe(otpResp => {\r\n      console.log('otpResp :: ',otpResp)\r\n      if (otpResp != null) {\r\n        if(otpResp.userId != '' && otpResp.userId !=null && otpResp.status =='SUCCESS' ){\r\n          this.afterSubmit.emit(true);\r\n          localStorage.setItem('userId',otpResp.userId);\r\n          this.snack.open(`Validation successful`, 'OK', {\r\n            duration: 4000,\r\n            verticalPosition: 'top',\r\n            horizontalPosition: 'right'\r\n          });\r\n          this.dialogRef.close(true);\r\n        }else{\r\n          this.dialogRef.close(false);\r\n          this.snack.open(`${otpResp.responseMessage}`, 'OK', {\r\n            duration: 4000,\r\n            verticalPosition: 'top',\r\n            horizontalPosition: 'right'\r\n          });\r\n        }\r\n      }\r\n    },\r\n      (error) => {\r\n        console.log(error.status);\r\n        // this.errorStatus = error.status;\r\n        this.snack.open(`Incorrect OTP. Please try again.`, 'OK', {\r\n          duration: 4000,\r\n          verticalPosition: 'top',\r\n          horizontalPosition: 'right'\r\n        });\r\n        // if (this.errorStatus == 200) {\r\n        //   // this.router.navigateByUrl('/others/services');\r\n        //   /* TO-DO: need to uncomment this for fingerprint verification */\r\n        //   // this.openDialog();\r\n        // }\r\n      });\r\n    }\r\n  }\r\n}\r\n","\r\n\r\n\r\n  <button mat-button id=\"close\" mat-dialog-close (click)=\"closeClick()\">\r\n    <mat-icon class=\"closeicon\">close</mat-icon>\r\n  </button>\r\n \r\n\r\n<form [formGroup]=\"basicInformationForm\">\r\n\r\n<div fxLayout=\"row\">\r\n \r\n  <div class=\"pd-2\" id=\"box\">\r\n    \r\n    <span class=\"verification\">{{title}}</span> \r\n  <span class=\"phoneNumber\">{{this.number}}</span>\r\n  <span class=\"verify\">Please enter the OTP  to verify</span>\r\n  <div class=\"flex-grow-1\">\r\n \r\n    <mat-card type=\"input\" class=\"inputMatcard\">\r\n        <input matInput  id=\"otp\" \r\n        class=\"alignment\"  \r\n        type=\"number\"  \r\n        maxlength=\"6\" \r\n        oninput=\"this.value = this.value.slice(0, this.maxLength);\" \r\n        formControlName=\"otp\">\r\n    </mat-card>\r\n    \r\n   \r\n</div>\r\n<span class=\"verify1\">Not Recieved?<span id=\"resend\" > &nbsp; Resend</span></span>\r\n<!-- (click)=\"getOtp()\" -->\r\n</div>\r\n \r\n</div>\r\n\r\n  <button class=\"button\" mat-stroked-button [disabled]=\"!basicInformationForm.valid\"\r\n   (click)=\"validateOtp(basicInformationForm.value)\">Proceed</button>\r\n</form>\r\n\r\n","import { Country } from '@angular-material-extensions/select-country';\r\nimport { CurrencyPipe, getCurrencySymbol } from '@angular/common';\r\nimport { Component, Input, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\n// import { cashWithdrawDto } from 'app/shared/models/cashWithdrawDTO';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { DialogService, TokenObjects } from 'app/shared/services/Dialog/dialog.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { formatNumber } from '@angular/common';\r\nimport { ChangeDetectorRef } from '@angular/core';\r\n\r\nimport { ElementRef, Renderer2 } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { ViewChild } from '@angular/core';\r\nimport { otpModel } from 'app/shared/models/otp.model';\r\nimport { OtpVerifyComponent } from '../otp-verify/otp-verify.component';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { ThrowStmt } from '@angular/compiler';\r\n\r\n@Component({\r\n  selector: 'app-cash-withdrawal',\r\n  templateUrl: './cash-withdrawal.component.html',\r\n  styleUrls: ['./cash-withdrawal.component.scss']\r\n})\r\nexport class CashWithdrawalComponent implements OnInit {\r\n  // cashWithdrawDto = new cashWithdrawDto();\r\n  cashWithdrawal : any = 'Cash Withdrawal';\r\n  cashwithdrawForm: FormGroup;\r\n\r\n  @Input() tokenResp : any;\r\n  operation : string;\r\n \r\n  countryFormControl = new FormControl();\r\n  defaultValue: Country = {\r\n    name: 'Deutschland',\r\n    alpha2Code: 'DE',\r\n    alpha3Code: 'DEU',\r\n    numericCode: '276',\r\n    callingCode: '+49'\r\n  };\r\n  ifQRvariable = false;\r\n  index: string[];\r\n  cashWithdrawResponse: any;\r\n  productCode = \"CHW\";\r\n  tokenOrigin = \"Kiosk\";\r\n  custPref = \"N\";\r\n  entityCode=\"ENTCD\";\r\n  bankCode = \"BNKC\" ;\r\n  tokenBranch = \"1234\" ;\r\n  accountNum: string;\r\n  accountBal: any;\r\n  phoneNumber: string;\r\n  errorStatus: number;\r\n  custAccountData: any;\r\n  countryValues: any;\r\n  accounttypeArray =[];\r\n\r\n  @ViewChild('cdForm') cdForm: NgForm;\r\n\r\n  \r\n  idList = [];\r\n  noList: any[];\r\n  accNum: any;\r\n  denomCodeArray: any[] = [\r\n    { key: 'count2000', value: 2000 },\r\n    { key: 'count500', value: 500 },\r\n    { key: 'count200', value: 200 },\r\n    { key: 'count100', value: 100 },\r\n    { key: 'count50', value: 50 },\r\n    { key: 'count20', value: 20 },\r\n    { key: 'count10', value: 10 },\r\n    { key: 'count1', value: 1 }\r\n\r\n  ];\r\n  totalAmount: any;\r\n  transamount: any;\r\n  a: any;\r\n  tokenObjects =new TokenObjects();\r\n  accNumber: any;\r\n  appointmentId:any;\r\n  tokResponse: any;\r\n  tokenNum: any;\r\n  estimatedTime: any;\r\n  transAmt: any;\r\n  balance: string;\r\n  enableContinue: boolean=true;\r\n  isedit:boolean=true;\r\n  accountCurrency: any;\r\n  curr: string;\r\n  transAmount:string;\r\n  currencyImage: any = \"\";\r\n  custID: any;\r\n  qrData: any;\r\n  customerID: any;\r\n  selected: string;\r\n  userName: string;\r\n  branchNameFromLogin: string;\r\n  branchName: string;\r\n  arrayAccountBranch: any;\r\n  trasactionBranches: any;\r\n  branchData: any;\r\n  branch: any;\r\n  resultStatus: any;\r\n  // accountNoList[]: any[];\r\n  accountNoList = [];\r\n  selectedAccountInfo: any;\r\n  showAccountNum : boolean = true;\r\n  showAccoutType : boolean = true;\r\n  custValidation: string;\r\n  accountNumber: string;\r\n  custmerID: any;\r\n  phonenum: any;\r\n  oTpModel = new otpModel();\r\n  cashwithDrwValues: any;\r\n  cashwithDrwform: any;\r\n  cashwithDrwType: any;\r\n  enableBtn: boolean = true;\r\n  enableBtn1: boolean = false;\r\n  accountNum1: any[];\r\n  filteredAccoun: any[];\r\n  accountDropdown: boolean = false;\r\n  flag1: boolean=false;\r\n  denomRequired: any = '';\r\n  hideDetails:boolean=false;\r\n  qrBranchCode: any;\r\n  custNameFromLogin: string;\r\n  totalTransAmount: number;\r\n  chargeDetails: any;\r\n  cashData: any;\r\n  transBranch: string;\r\n\r\n  constructor\r\n  (\r\n    private router : Router,\r\n    private formBuilder: FormBuilder, \r\n    private dialogService : DialogService,\r\n    private apiService:ApiService,\r\n    private fb: FormBuilder,\r\n    private ls: LocalStoreService,\r\n    private snack: MatSnackBar,\r\n    private changeDef: ChangeDetectorRef,\r\n    private elRef: ElementRef,\r\n    private renderer: Renderer2,\r\n    private dialog: MatDialog,\r\n    private cdr:ChangeDetectorRef,\r\n    ) { }\r\n  ngOnInit() {\r\n    this.phoneNumber = localStorage.getItem(\"phonenumFromLogin\");\r\n    this.appointmentId = this.ls.getItem(\"TransactionType\");\r\n    this.transBranch=localStorage.getItem(\"TRANSACTIONBRANCH\") ;\r\n    \r\n    \r\n    this.qrData = JSON.parse(JSON.parse(localStorage.getItem('scannerData')));\r\n    console.log(\"QRData\", this.qrData);\r\n    this.cashwithdrawForm = this.fb.group({\r\n    transactionId:['', [Validators.required]],\r\n    customerId:['', [Validators.required]],\r\n    accountNumber:['', [Validators.required]],\r\n    accountType:['', [Validators.required]],\r\n    holderName :['', [Validators.required]], \r\n    accountCurrency:['', [Validators.required]],\r\n    transactionCurrency: ['', [Validators.required]],\r\n    transactionAmount:['', [Validators.required, Validators.min(.1)]],\r\n    accountBalance:[''],\r\n    productCode:['CHW',[Validators.required]],\r\n    tokenOrigin : ['Kiosk',[Validators.required]],\r\n    exchangeRate:['', [Validators.required]],\r\n    accountAmount:['', [Validators.required]],\r\n    totalChargeAmount:['', [Validators.required]],\r\n    totalTransactionAmount:['',[Validators.required]],\r\n    narrative:['', [Validators.required]],\r\n    denomination:[null, [Validators.required]],\r\n    totalAmount:['', [Validators.required]],\r\n    entityCode:[this.entityCode,[Validators.required]],\r\n    bankCode:[this.bankCode,[Validators.required]],\r\n    tokenBranch:[this.tokenBranch,[Validators.required]],\r\n    customerCategory:[this.custPref,[Validators.required]],\r\n    tokenNumber:['', [Validators.required]],\r\n    estimatedWaitTime:['', [Validators.required]],\r\n     accountBranch: ['', [Validators.required]],\r\n      transactionBranch:['', [Validators.required]]\r\n    //transAmt: ['', [Validators.required, Validators.pattern(/\\B(?=(\\d{3})+(?!\\d))/g.',')]],\r\n    \r\n    });\r\n    this.custValidation = localStorage.getItem(\"customerValidation\");\r\n    this.custNameFromLogin = localStorage.getItem(\"FromLogin\");\r\n    if(this.custValidation == \"New Customer\"){\r\n      this.showAccountNum = false;\r\n      this.showAccoutType = false;\r\n    } \r\n    if(this.custNameFromLogin!=null){\r\n      this.showAccountNum=false;\r\n    } \r\n     console.log(\"CWH :: \" + this.cashwithdrawForm.value);\r\n     if(this.phoneNumber && this.custNameFromLogin==null && this.appointmentId==null){\r\n       this.ifQRvariable = false;\r\n      this.gettingallTansactionDetails(this.phoneNumber);\r\n      }\r\n      // else{\r\n        if(this.qrData!=null){\r\n        // ;\r\n        this.ifQRvariable = true;\r\n        console.log(\"Account\", this.qrData);\r\n        this.cashwithdrawForm.controls.holderName.setValue(this.qrData.holderName);\r\n        this.cashwithdrawForm.controls.accountType.setValue(this.qrData.accountType);\r\n        this.cashwithdrawForm.controls.accountNumber.setValue(this.qrData.accountId);\r\n        this.getChargeDetails(this.qrData.accountId,'');\r\n        this.cashwithdrawForm.controls.transactionAmount.setValue(this.qrData.transactionAmount);\r\n        this.cashwithdrawForm.controls.accountCurrency.setValue(this.qrData.accountCurrency);\r\n        this.cashwithdrawForm.controls.transactionCurrency.setValue(this.qrData.transactionCurrency);\r\n        this.accountBal = this.qrData.accountBalance;\r\n        this.customerID = this.qrData.customerId;\r\n        this.currencyImage = 'currency-flag-'+this.qrData.accountCurrency.toLowerCase();\r\n        this.currencyImage = 'currency-flag-'+this.qrData.transactionCurrency.toLowerCase();\r\n        if(this.qrData.transactionBranch !=null && this.qrData.transactionBranch !=''){\r\n          this.cashwithdrawForm.controls.transactionBranch.setValue(this.qrData.transactionBranch);\r\n        }else{\r\n          this.cashwithdrawForm.controls.transactionBranch.setValue('Kasturi Nagar');\r\n        }\r\n        \r\n        this.getAccountBranch();\r\n      }\r\n     this.getCountrynameValues();\r\n     this.getAccountBranch();\r\n    this.gettransactionBranch(\"account_branch\");\r\n    this.getBankInformation(\"KN\")\r\n    if(this.appointmentId.data.appointmentId){\r\n      this.cashWithdrawlData();\r\n    }\r\n  }\r\n  fetchByAccountNum(accNum){\r\n    this.cashwithdrawForm.controls.transactionAmount.reset();\r\n    this.cashwithdrawForm.controls.totalTransactionAmount.setValue(this.cashwithdrawForm.controls.totalChargeAmount.value);\r\n    console.log(\"Account Numebr\",accNum);\r\n    this.ifQRvariable = true;\r\n    this.apiService.fetchByaccNum(accNum).subscribe((res: any) => {\r\n      console.log('Account Number Rsp', res);\r\n      this.getChargeDetails(accNum,'');\r\n      this.userName = res.accHolderName;\r\n      this.accountBal = res.accBalance;\r\n      this.custmerID = res.customerId;\r\n      this.accountNumber = res.accountId;\r\n      this.accountCurrency = res.accountCurrency\r\n      this.curr = getCurrencySymbol(res.currency, \"narrow\");\r\n      this.cashwithdrawForm.controls.accountType.setValue(res.accountType);\r\n      this.cashwithdrawForm.controls.accountBranch.setValue(res.accountBranch);\r\n      this.cashwithdrawForm.controls.holderName.setValue(this.userName); \r\n      this.getCountrynameValues();\r\n      // this.currencyImage = 'currency-flag-'+res.currency.toLowerCase();\r\n      this.currencyImage = 'currency-flag-'+res.currency.toLowerCase();\r\n      this.cashwithdrawForm.controls.transactionCurrency.setValue(res.currency);\r\n      this.cashwithdrawForm.controls.accountCurrency.setValue(res.currency);\r\n\r\n      console.log(this.ifQRvariable);\r\n      this.custAmountBal(accNum);\r\n      this.cashwithdrawForm.controls.transactionBranch.setValue('Kasturi Nagar');\r\n      this.apiService.fetchByaccDeatilsoncustId(res.customerId).subscribe((resp: any) => {\r\n        this.phonenum = resp[0].phoneNumber;\r\n        localStorage.setItem('otpPhoneNum', this.phonenum);\r\n      }) \r\n  });\r\n\r\n}\r\n\r\n  \r\n//  numberWithCommas = (transAmt) => {\r\n//   return transAmt.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\r\n//   console.log(transAmt);\r\n//   }\r\n  gettransactionBranch(key: string) {\r\n    this.apiService.getTransactionBranch(key)\r\n      .subscribe(branches => {\r\n        console.log('branches :: ', branches);\r\n        this.trasactionBranches = branches;\r\n       \r\n      })\r\n  }\r\n  getAccountBranch() {\r\n    this.apiService.getBranchforKiosk()\r\n      .subscribe((data: any) => {\r\n        this.branchData = data;\r\n          console.log( this.branchData);\r\n          data.forEach((element,index)=>{\r\n            this.branch = data[index].branchName;\r\n            console.log(this.branch);\r\n            // this.cashwithdrawForm.controls.accountBranch.setValue(this.branch);\r\n         });      \r\n      });\r\n  }\r\n\r\n  \r\n  getCountrynameValues() {\r\n    this.apiService.getCountryValues().subscribe((allCountryValues : any)=> {\r\n      this.countryValues = allCountryValues;\r\n      console.log(this.countryValues);\r\n      });\r\n  }\r\n\r\n\r\n\r\n  onCountrySelected($event: Country): void {\r\n    // console.log($event.alpha3Code);\r\n  }\r\n  gettingallTansactionDetails(phoneNumber) {\r\n    \r\n    this.phoneNumber = localStorage.getItem(\"phonenumFromLogin\");\r\n    this.apiService.gettingTransactionDetails(this.phoneNumber).subscribe((allTransactionResp : any)=> {\r\n    console.log(\"All Transaction Details\",allTransactionResp);\r\n    this.userName = (allTransactionResp.firstName ? allTransactionResp.firstName + ' ' : ' ') + \r\n    (allTransactionResp.middleName ? allTransactionResp.middleName + ' ' : ' ') +\r\n     (allTransactionResp.lastName ? allTransactionResp.lastName : ' ');\r\n    this.cashwithdrawForm.controls.holderName.setValue(this.userName);\r\n    // this.setBalance(allTransactionResp.custAccount);\r\n    this.custID = allTransactionResp.customerId;\r\n    console.log(\"Cust\", this.custID);\r\n    this.custAccountData = allTransactionResp.custAccount;\r\n    this.accounttypeArray = [...this.custAccountData].filter(({accountType},index )=> \r\n    ![...this.custAccountData].map(obj=> obj.accountType).includes(accountType, index +1));\r\n    console.log(this.accounttypeArray)\r\n    for(let i = 0; i < this.custAccountData.length; i++){\r\n      if(this.custAccountData[i].status == 'APPROVED'){\r\n        this.accountNoList.push(this.custAccountData[i]);    \r\n      }\r\n    }\r\n    console.log(this.accountNoList);\r\n    if(this.custAccountData && this.accountNoList.length<=1){\r\n      this.accountDropdown=false;\r\n      this.hideDetails=true;\r\n      const accTyp = allTransactionResp.custAccount[0].accountType;\r\n      this.cashwithdrawForm.controls.accountType.setValue(accTyp);\r\n      this.custAccountNumber(this.accountNoList[0]);\r\n    }else{\r\n      this.accountDropdown=true;\r\n      this.hideDetails=true;\r\n      const accTyp = allTransactionResp.custAccount[0].accountType;\r\n      this.cashwithdrawForm.controls.accountType.setValue(accTyp);\r\n      this.custAccountNumber(allTransactionResp.custAccount[0]);\r\n    }\r\n  \r\n    });\r\n\r\n    \r\n  }\r\n  getAccountType(event:any){\r\n    this.cashwithdrawForm.controls.transactionAmount.reset();\r\n    this.cashwithdrawForm.controls.totalTransactionAmount.setValue(this.cashwithdrawForm.controls.totalChargeAmount.value);\r\n    this.accountNoList=[];\r\n    this.isedit=false;\r\n    this.accountNum1=[...this.custAccountData].filter((accounNum,index)=>{\r\n      return accounNum.accountType==event;\r\n    });\r\n    // this.accountNoList=this.accountNum1\r\n    // this.accountNoList=this.accountNum1.map((acccount)=>\r\n    // {\r\n    //   return acccount.accountId\r\n    // });\r\n    for(let i = 0; i < this.custAccountData.length; i++){\r\n      if(this.custAccountData[i].status == 'APPROVED' && this.custAccountData[i].accountType == event){\r\n        this.accountNoList.push(this.custAccountData[i].accountId);    \r\n      }\r\n    }\r\n   // this.accountNoList.push(12233)\r\n   console.log(this.accountNoList)\r\n   \r\n    if(this.accountNoList.length<=1){\r\n      // this.cashwithdrawForm.controls.accountNumber.patchValue(this.accountNoList[0]);\r\n      this.flag1=false; \r\n      this.getData(this.accountNoList[0]);\r\n     \r\n      this.cashwithdrawForm.controls.accountNumber.setValue(this.accountNoList[0]);\r\n    }\r\n    else{\r\n      this.getData(this.accountNoList[0]);\r\n      this.flag1=true;   \r\n    }\r\n    this.getChargeDetails(this.accountNoList[0],'');\r\n  }\r\n  custAccountNumber(custype){\r\n    console.log('custype :: ',custype);\r\n    this.isedit=false;\r\n   this.idList = [...this.custAccountData].filter(item => item.accountType === custype.accountType);\r\n  //  const defaultId = this.idList ? this.idList[0] : null;\r\n   console.log(\"idList :: \", this.idList);\r\n    this.accountNoList = [];\r\n   for(let i = 0; i < this.idList.length; i++){\r\n      if(this.idList[i].status == 'APPROVED'){\r\n        this.accountNoList.push(this.idList[i].accountId);    \r\n      }\r\n    }\r\n    console.log('accountNoList :: ',this.accountNoList);\r\n    if(this.accountNoList.length<=1){\r\n      // this.cashwithdrawForm.controls.accountNumber.patchValue(this.accountNoList[0]);\r\n      this.flag1=false; \r\n      // this.getData(this.accountNoList[0]);\r\n      this.cashwithdrawForm.controls.accountNumber.setValue(this.accountNoList[0]);\r\n    }\r\n    else{\r\n      this.cashwithdrawForm.controls.accountNumber.setValue(this.accountNoList[0]);\r\n      this.flag1=true;   \r\n    }\r\n  \r\n  //  this.cashwithdrawForm.controls.accountNumber.setValue(defaultId);\r\n  // this.cashwithdrawForm.controls.accountType.setValue(defaultId);\r\n   this.cashwithdrawForm.controls.accountCurrency.setValue(custype.accountCurrency);\r\n   this.cashwithdrawForm.controls.accountBranch.setValue(this.branch);\r\n   //this.cashwithdrawForm.controls.transactionAmount.setValue(custype.amount);\r\n  //  this.cashwithdrawForm.controls.accountType.setValue(custype.accountType);\r\n   console.log(\"AccountCurrency\",custype.accountCurrency);\r\n   \r\n   this.selected=custype.accountCurrency;\r\n    this.curr = getCurrencySymbol(custype.accountCurrency, \"narrow\");\r\n    this.cashwithdrawForm.controls.transactionCurrency.setValue(custype.accountCurrency);\r\n   \r\n    this.currencyImage = 'currency-flag-'+custype.accountCurrency.toLowerCase();\r\n    console.log('data :: ',this.idList[0]);\r\n  //  this.accountBal = this.idList[0].amount;\r\n   console.log(this.accountBal);\r\n   localStorage.setItem(\"AccountBal\",this.accountBal);\r\n  //  this.cashwithdrawForm.controls.accountNumber.setValue(this.idList[0].accountId);\r\n   this.custAmountBal(this.accountNoList[0]);\r\n   this.cashwithdrawForm.controls.accountBranch.setValue(custype.accountBranch);\r\n   this.getChargeDetails(this.accountNoList[0],custype.amount);\r\n  }\r\n  getData(custNum){\r\n    this.hideDetails=true;\r\n    let val=this.accountNum1.filter((value)=>{\r\n    return value.accountId==custNum}\r\n    )\r\n    \r\n    this.idList = [...this.custAccountData].filter(item => item.accountType === val[0].accountType);\r\n    this.cashwithdrawForm.controls.accountCurrency.setValue(val[0].accountCurrency);\r\n   this.cashwithdrawForm.controls.accountBranch.setValue(this.branch);\r\n   this.selected=val[0].accountCurrency;\r\n   this.curr = getCurrencySymbol(val[0].accountCurrency, \"narrow\");\r\n   this.cashwithdrawForm.controls.transactionCurrency.setValue(val[0].accountCurrency);\r\n  \r\n   this.currencyImage = 'currency-flag-'+val[0].accountCurrency.toLowerCase();\r\n  this.accountBal = val[0].amount;\r\n  localStorage.setItem(\"AccountBal\",this.accountBal);\r\n  this.cashwithdrawForm.controls.accountNumber.setValue(val[0].accountId);\r\n\r\n  this.custAmountBal(val[0].accountId);\r\n  this.cashwithdrawForm.controls.accountBranch.setValue(val[0].accountBranch);\r\n  this.getChargeDetails(val[0].accountId,'')\r\n  }\r\n  custAmountBal(custNum){\r\n    var account = this.idList.filter(function(record) {  \r\n      if(record.accountId == custNum){\r\n      return record;\r\n    }\r\n  });\r\n    this.accNum = account[0].accountId;\r\n    this.accountBal = account[0].amount;\r\n    this.selectedAccountInfo=account[0]\r\n    console.log(this.accountBal);\r\n    localStorage.setItem(\"AccountBal\",this.accountBal);\r\n  }\r\n  \r\n  getOTP(formData, type, cdForm){\r\n    this.cashwithDrwValues =formData;\r\n    this.cashwithDrwType = type;\r\n    this.cashwithDrwform = cdForm; \r\n    this.oTpModel.source = 'customer';\r\n    this.oTpModel.source_key = 'mobile';\r\n    this.oTpModel.source_value = this.phonenum;\r\nlet amount= 50000;\r\nlet transamountwithoutcomma=this.cashwithDrwValues.transactionAmount.replace(/,/g, \"\");\r\nconsole.log( transamountwithoutcomma);\r\nif(transamountwithoutcomma > amount){\r\n  this.apiService.getOtp(this.oTpModel).subscribe(otpResp => {\r\n    if (otpResp) {\r\n      this.openDialogOTP(this.phonenum);\r\n      this.snack.open(\"An OTP has been sent to the Registered Mobile Number.\" , \"\", {\r\n        duration: 4000,\r\n        verticalPosition: 'top',\r\n        horizontalPosition: 'right'\r\n      });\r\n    }\r\n  })\r\n}\r\nelse{\r\n  this.getOTPforSave(this.cashwithDrwValues,this.cashwithDrwType,this.cashwithDrwform);\r\n}\r\n  \r\n  }\r\n \r\n  openDialogOTP(numbr) {\r\n    const dialogRef = this.dialog.open(OtpVerifyComponent, {\r\n      data: { number: numbr, type: \"numbr\" },\r\n      disableClose: true,\r\n    });\r\n    dialogRef.afterClosed().subscribe(submit => {\r\n      console.log(\"submit\",submit);\r\n      if(submit){\r\n        this.getOTPforSave(this.cashwithDrwValues,this.cashwithDrwType,this.cashwithDrwform);\r\n      }\r\n     });\r\n  }\r\n  getOTPforSave(formData,type,cdForm){\r\n    let denominationData: any = {};\r\n        let denominationDataArray: any[] = [];\r\n        if(this.denomRequired == 'yes'){\r\n        for (let i = 0; i < this.denomCodeArray.length; i++) {\r\n          if (cdForm.value[this.denomCodeArray[i].key]) {\r\n            // denominationData.transactionId = this.cashdepositFor;\r\n            denominationData.denominationKey = this.denomCodeArray[i].value;\r\n            denominationData.denominationValue = +cdForm.value[this.denomCodeArray[i].key];\r\n            denominationData.currency = this.cashwithdrawForm.value.transactionCurrency;\r\n            // denominationData.amountAvailiable = 15200 - (cdForm.value[this.denomCodeArray[i].key] * this.denomCodeArray[i].value);\r\n            denominationDataArray.push(denominationData);\r\n            console.log(denominationDataArray)\r\n            denominationData = {};\r\n          }\r\n        }\r\n      }\r\n     if(this.custValidation == \"New Customer\"){\r\n     this.accountNum = formData.accountNumber;\r\n     formData.customerId = this.custmerID?this.custmerID:0;\r\n   \r\n     \r\n     formData.accountCurrency = formData.accountCurrency;\r\n     formData.transactionCurrency = formData.transactionCurrency;\r\n     formData.transactionAmount = formData.transactionAmount.replace(/,/g, '');\r\n   \r\n     formData.productCode = this.productCode;\r\n     formData.tokenOrigin = this.tokenOrigin;\r\n     formData.accountBalance = this.accountBal;\r\n\r\n     if(this.denomRequired == 'yes'){\r\n     formData.denomination = denominationDataArray;\r\n     }\r\n    }\r\n    if(this.appointmentId && this.appointmentId.data){\r\n      formData.transactionId = this.appointmentId.data.transactionId;\r\n      formData.transactionStatus = this.appointmentId.data.transactionStatus;\r\n    }\r\n    formData.customerId = this.custmerID?this.custmerID:0;\r\n    formData.transactionBranch = this.transBranch;\r\n    formData.transactionAmount = formData.transactionAmount.replace(/,/g, '');\r\n    formData.accountType = formData.accountType;\r\n    formData.accountNumber = this.accountNumber;\r\n    formData.holderName = formData.holderName;\r\n    formData.productCode = this.productCode;\r\n    formData.tokenOrigin = this.tokenOrigin;\r\n    formData.accountBalance = this.accountBal;\r\n    console.log(formData.transactionId,formData.transactionStatus)\r\n        console.log(\"before api call :: \",formData);\r\n      this.apiService.saveofCashwithdraw(formData).subscribe(cashWithdrawResp=>{\r\n        console.log( \"Response Success, Data Saved\", cashWithdrawResp);\r\n        this.cashWithdrawResponse = cashWithdrawResp;\r\n        this.tokenNum = this.cashWithdrawResponse.tokenNumber;\r\n        this.estimatedTime = this.cashWithdrawResponse.estimatedWaitTime;\r\n        localStorage.setItem(\"tokenNumer\",this.tokenNum);\r\n        localStorage.setItem(\"estimatedTiming\",this.estimatedTime);\r\n        this.enableContinue=false;\r\n        if(this.cashWithdrawResponse){\r\n        this.dialogService.tokenGenerationDialog();\r\n        }\r\n      });\r\n  \r\n     }\r\n\r\n  \r\n\r\n  goToServiceScreens(){\r\n    if(this.appointmentId){\r\n    if(this.appointmentId.data.appointmentId){\r\n      this.router.navigateByUrl('/sessions/login');\r\n      localStorage.removeItem(\"FromLogin\")\r\n      localStorage.removeItem(\"TransactionType\")\r\n      localStorage.removeItem(\"customerId\")\r\n      localStorage.removeItem(\"phonenumFromLogin\")\r\n      localStorage.removeItem(\"customerValidation\")\r\n      localStorage.removeItem(\"otpPhoneNum\")\r\n      localStorage.removeItem(\"AccountBal\")\r\n      localStorage.removeItem(\"AccountNumber\")\r\n      localStorage.removeItem(\"ProductCode\")\r\n      localStorage.removeItem(\"tokenNumer\")\r\n      localStorage.removeItem(\"estimatedTiming\")\r\n      localStorage.removeItem(\"userId\")\r\n      localStorage.removeItem(\"scannerData\")\r\n      localStorage.removeItem(\"custholderName\")\r\n    }\r\n  }\r\n    else{\r\n      this.router.navigateByUrl('/others/services');\r\n    }\r\n    \r\n  }  \r\n  goToAuthenticate(){\r\n    this.dialogService.authenticationDialog();\r\n  }\r\n \r\n  onSaveofCashWithdraw(form,type,cdForm){\r\n    form.transactionBranch = this.transBranch;\r\n    if(this.qrData){\r\n      if(this.qrData.transactionBranch){\r\n        this.apiService.fetchBranchInfoByBranchName(this.qrData.transactionBranch).subscribe(response=>{\r\n          this.qrBranchCode=response;\r\n          \r\n        })\r\n      }\r\n    }\r\n  \r\n  let denominationData: any = {};\r\n      let denominationDataArray: any[] = [];\r\n      if(this.denomRequired == 'yes'){\r\n        for (let i = 0; i < this.denomCodeArray.length; i++) {\r\n        if (cdForm.value[this.denomCodeArray[i].key]) {\r\n          // denominationData.transactionId = this.cashdepositFor;\r\n          denominationData.denominationKey = this.denomCodeArray[i].value;\r\n          denominationData.denominationValue = +cdForm.value[this.denomCodeArray[i].key];\r\n          denominationData.currency = this.cashwithdrawForm.value.transactionCurrency;\r\n          // denominationData.amountAvailiable = 15200 - (cdForm.value[this.denomCodeArray[i].key] * this.denomCodeArray[i].value);\r\n          denominationDataArray.push(denominationData);\r\n          console.log(denominationDataArray)\r\n          denominationData = {};\r\n        }\r\n      }\r\n      }\r\n      \r\n      form.tokenBranch = \"KN\";\r\n    if(!this.ifQRvariable){\r\n    this.accountNum=JSON.stringify(this.selectedAccountInfo.accountId);\r\n    form.transactionAmount=form.transactionAmount.replace(/,/g, '');\r\n    localStorage.setItem(\"AccountNumber\",this.accountNum);\r\n    localStorage.setItem(\"ProductCode\",this.productCode);\r\n    form.customerId = this.custID;\r\n    form.transactionCurrency = form.transactionCurrency;\r\n    form.accountNumber = this.selectedAccountInfo.accountId;\r\n    form.productCode = this.productCode;\r\n    form.tokenOrigin = this.tokenOrigin;\r\n    form.accountBalance = this.accountBal;\r\n    form.accountType = form.accountType;\r\n    if(this.denomRequired == 'yes'){\r\n form.denomination=denominationDataArray;\r\n    }\r\n   \r\n    }\r\n    else{\r\n      form.customerId = this.custID;\r\n      form.accountType = form.accountType;\r\n      // form.accountNumber = this.selectedAccountInfo.accountId\r\n      form.accountNumber = form.accountNumber;\r\n      form.holderName=  form.holderName;\r\n      form.accountCurrency  =form.accountCurrency;\r\n      form.transactionCurrency = form.transactionCurrency;\r\n      form.transactionAmount = form.transactionAmount;\r\n      form.productCode = this.productCode;\r\n      form.tokenOrigin = this.tokenOrigin;\r\n      if(this.denomRequired == 'yes'){\r\n        form.denomination=denominationDataArray;\r\n      }\r\n      if(this.qrData){\r\n        if(this.qrData.transactionBranch){\r\n          form.tokenBranch = this.qrBranchCode.transactionBranch;\r\n        }\r\n      }\r\n      \r\n      form.accountBalance = this.accountBal;\r\n    }\r\n    if(this.appointmentId && this.appointmentId.data){\r\n      form.transactionId = this.appointmentId.data.transactionId;\r\n      form.transactionStatus = this.appointmentId.data.transactionStatus;\r\n    }\r\n\r\n    console.log(form.transactionId,form.transactionStatus);\r\n\r\n    // form.totalAmount = form.totalAmount.replace(/,/g, '');\r\n\r\n    console.log(\"before api call :: \",form);\r\n    this.apiService.saveofCashDeposit(form).subscribe(cashWithdrawResp=>{\r\n      console.log( \"Response Success, Data Saved\", cashWithdrawResp);\r\n      this.cashWithdrawResponse = cashWithdrawResp;\r\n      this.tokenNum = this.cashWithdrawResponse.tokenNumber;\r\n      this.estimatedTime = this.cashWithdrawResponse.estimatedWaitTime;\r\n      localStorage.setItem(\"tokenNumer\",this.tokenNum);\r\n      localStorage.setItem(\"estimatedTiming\",this.estimatedTime);\r\n      this.enableContinue=false;\r\n      if(this.cashWithdrawResponse){\r\n      this.dialogService.tokenGenerationDialog();\r\n      }\r\n    });\r\n    \r\n  //   this.tokenObjects.productCode = this.productCode;\r\n  //   this.tokenObjects.accountNumber = form.accountNumber;\r\n  //   console.log(this.tokenObjects.accountNumber);\r\n  //   if(this.tokenObjects.productCode !== null || this.tokenObjects.accountNumber !==null){\r\n  //   this.apiService.generateToken(this.tokenObjects).subscribe(tokenResp=>{\r\n  //     console.log( \"Token Generated\", tokenResp);\r\n  //     this.tokResponse = tokenResp;\r\n  //     if(this.tokResponse){\r\n  //       this.tokenNum = this.tokResponse.tokenNumber;\r\n  //       this.estimatedTime = this.tokResponse.estimatedWaitTime;\r\n  //       localStorage.setItem(\"tokenNumer\",this.tokenNum);\r\n  //       localStorage.setItem(\"estimatedTiming\",this.estimatedTime);\r\n  //       form.tokenNo = this.tokenNum;\r\n  //       form.customerId = this.ls.getItem(\"customerId\");\r\n  //       this.apiService.saveofCashDeposit(form).subscribe(cashWithdrawResp=>{\r\n  //         console.log( \"Response Success, Data Saved\", cashWithdrawResp);\r\n  //         this.cashWithdrawResponse = cashWithdrawResp;\r\n  //         console.log(this.cashWithdrawResponse);\r\n  //         // this.cashwithdrawForm.reset();\r\n  //         this.enableContinue=false;\r\n  //         // this.ngOnInit();\r\n  //         this.dialogService.tokenGenerationDialog();\r\n  //       });\r\n  //     }\r\n  //   });\r\n  // }\r\n\r\n   }\r\n\r\n checkValue(event) {\r\n  if (event.target.value < 0) {\r\n    event.target.value = 0;\r\n  }\r\n}\r\n\r\nOnInput(event: any) {\r\n  this.transAmt= event.target.value;\r\nconsole.log(event.target.value);\r\nthis.totalAmount = 0;\r\n// this.denomRequired='yes';\r\n  // comma separator using changeDetector\r\n  const savedInput = this.transAmount;\r\n  // this.transAmount = '';\r\n  // this.changeDef.detectChanges();\r\n\r\n  \r\nlet lastCharIsPoint = false;\r\nif (savedInput.charAt(savedInput.length - 1) === '.') {\r\n  lastCharIsPoint = true;\r\n}\r\nconst num = savedInput.replace(/[^0-9.]/g, '');\r\n\r\n\r\nthis.transAmt = Number(num) || '';\r\nthis.transAmount = this.transAmt.toLocaleString('en-IN');\r\nif (lastCharIsPoint) {\r\n  this.transAmount = this.transAmount.concat('.');\r\n}\r\nthis.changeDef.detectChanges();\r\n\r\n  this.balance= localStorage.getItem(\"AccountBal\");\r\n  if(parseFloat(this.balance) < parseFloat(this.transAmt)){\r\n    console.log(\"Bigger\")\r\n    this.snack.open(`Transaction Amount should not exceed than Account Balance`, 'OK', {\r\n      duration: 2000,\r\n      verticalPosition: 'top',\r\n      horizontalPosition: 'right'\r\n    });\r\n    this.enableContinue=false;\r\n  }\r\n  else{\r\n    this.enableContinue=true;\r\n  }\r\n  this.totalTransAmount=Number(this.transAmt) + Number(this.chargeDetails?this.chargeDetails[0].amount:'');\r\n  this.cashwithdrawForm.controls.totalTransactionAmount.setValue(this.totalTransAmount);\r\n  this.cdr.markForCheck();\r\n  this.cdr.detectChanges();\r\n  }\r\n\r\n  clicked(event){\r\n    // console.log(event);\r\n  }\r\n  addCurrencyImage(currency) {\r\n    return currency.toLowerCase();\r\n  }\r\n\r\n  onCountryChange(country) {\r\n    let currency = country.currencyCode;\r\n    this.currencyImage = 'currency-flag-'+currency.toLowerCase();\r\n  }\r\n\r\n  accountCurrencyImage(accountCurrency){\r\n    return accountCurrency? 'currency-flag-'+accountCurrency.toLowerCase() : '';\r\n  }\r\n\r\n\r\n  omit_number(event) {\r\n    var key;\r\n    key = event.charCode;\r\n    return ((key > 47 && key < 58));\r\n  }\r\n  totalAmountValue(cdForm) {\r\n    this.a=this.cashwithdrawForm.value.transactionAmount;\r\n    this.a=this.a.replace(/\\,/g,''); // 1125, but a string, so convert it to number\r\n    this.a=parseInt(this.a,10);\r\n  \r\n\r\n\r\n    this.cashwithdrawForm.value.totalAmount =\r\n      ((cdForm.value.count2000 ? cdForm.value.count2000 * 2000 : 0) +\r\n        (cdForm.value.count500 ? cdForm.value.count500 * 500 : 0) +\r\n        (cdForm.value.count200 ? cdForm.value.count200 * 200 : 0) +\r\n        (cdForm.value.count100 ? cdForm.value.count100 * 100 : 0) +\r\n        (cdForm.value.count50 ? cdForm.value.count50 * 50 : 0) +\r\n        (cdForm.value.count20 ? cdForm.value.count20 * 20 : 0) +\r\n        (cdForm.value.count10 ? cdForm.value.count10 * 10 : 0) +\r\n        (cdForm.value.count1 ? cdForm.value.count1 * 1 : 0)\r\n      );\r\n        this.cashwithdrawForm.value.totalAmount = this.cashwithdrawForm.value.totalAmount;\r\n        console.log(this.cashwithdrawForm.value.totalAmount)\r\n        \r\n        this.transamount=this.cashwithdrawForm.value.transactionAmount;\r\n        this.totalAmount=this.cashwithdrawForm.value.totalAmount.toLocaleString('en-IN');\r\n        console.log(\"tran\",this.transAmount);\r\n        console.log(\"tot\",this.totalAmount);\r\n        \r\n          if(this.transamount != this.totalAmount){\r\n          this.enableBtn = false;\r\n        }\r\n        else{\r\n          this.enableBtn = true;\r\n        }\r\n\r\n           if((this.transamount > this.totalAmount) || (this.transamount < this.totalAmount)){\r\n          this.enableBtn1 = true;\r\n        }\r\n        else{\r\n          this.enableBtn1 = false;\r\n        }      \r\n        this.cashwithdrawForm.controls.totalAmount.setValue(this.cashwithdrawForm.value.totalAmount);\r\n      \r\n  }\r\n  cashWithdrawlData(){\r\n  this.apiService.getAppointmentId(this.appointmentId.data.appointmentId).subscribe((resp : any)=> {\r\n    console.log(\"resptest\",resp);\r\n    this.cashData=resp.data;\r\n    this.custID=resp.data.customerId;\r\n    this.ifQRvariable = true;\r\n    this.accountCurrency = resp.accountCurrency;\r\n    this.accountBal = resp.data.accountBalance;\r\n    this.userName = resp.data.holderName;\r\n    this.cashwithdrawForm.controls.accountBalance.setValue(this.accountBal);\r\n    this.cashwithdrawForm.controls.holderName.setValue(this.userName);\r\n    this.cashwithdrawForm.controls.accountType.setValue(resp.data.accountType);\r\n    this.cashwithdrawForm.controls.accountBranch.setValue(resp.data.accountBranch);\r\n    this.cashwithdrawForm.controls.accountNumber.setValue(resp.data.accountNumber);\r\n    this.getChargeDetails(resp.data.accountNumber,resp.data.transactionAmount);\r\n    this.cashwithdrawForm.controls.accountCurrency.setValue(resp.data.accountCurrency);\r\n    this.cashwithdrawForm.controls.transactionCurrency.setValue(resp.data.transactionCurrency);\r\n    this.cashwithdrawForm.controls.transactionAmount.setValue(resp.data.transactionAmount);\r\n    this.currencyImage = 'currency-flag-'+resp.data.accountCurrency.toLowerCase();\r\n    this.currencyImage = 'currency-flag-'+resp.data.transactionCurrency.toLowerCase();\r\n    \r\n  });\r\n  // this.denomRequired='yes';\r\n}\r\n\r\n\r\ngetChargeDetails(accountId,amount){\r\n  this.apiService.fetchChargeDetails(accountId).subscribe(resp => {\r\nconsole.log(resp);\r\nthis.chargeDetails=resp;\r\nthis.cashwithdrawForm.controls.totalChargeAmount.setValue(this.chargeDetails?this.chargeDetails[0].amount:'');\r\n  });\r\n  if(this.cashData){\r\n  setTimeout(() => {\r\n    this.totalTransAmount=Number(this.cashData.transactionAmount) + Number(this.chargeDetails[0].amount);\r\n    this.cashwithdrawForm.controls.totalTransactionAmount.setValue(this.totalTransAmount);\r\n  }, 1000);\r\n  this.cdr.markForCheck();\r\n  this.cdr.detectChanges();\r\n}\r\nelse{\r\n  console.log(this.chargeDetails)\r\n  amount = 0;\r\n  console.log(amount);\r\n  setTimeout(() => {\r\n    this.totalTransAmount=Number(amount) + Number(this.chargeDetails?this.chargeDetails[0].amount:'');\r\n    console.log(this.totalTransAmount);\r\n    this.cashwithdrawForm.controls.totalTransactionAmount.setValue(this.totalTransAmount);\r\n  }, 1000);\r\n  this.cdr.markForCheck();\r\n  this.cdr.detectChanges();\r\n}\r\n\r\n  // console.log(this.totalTransAmount);\r\n\r\n}\r\n\r\n  getBankInformation(branchCode:any){\r\n    this.apiService.fetchBankInfoByBranchCode(branchCode).subscribe(resp => {\r\n      console.log(resp)\r\n     this.denomRequired = resp.denomRequired\r\n     if(resp.denomRequired == 'yes'){\r\n      this.enableBtn = false;\r\n      this.enableBtn1 = false;\r\n     }\r\n\r\n    })\r\n  }\r\n\r\n  formatAmount(amount) {\r\n    // amount=amount.toString();\r\n    // var lastThree = amount.substring(amount.length - 3);\r\n    // var otherNumbers = amount.substring(0,amount.length-3);\r\n    // if(otherNumbers != '')\r\n    //     lastThree = ',' + lastThree;\r\n    // return String(amount).replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")+ lastThree;\r\n    // return String(amount).replace(en-IN,',');\r\n   if(amount){\r\n    return amount && amount.toString().split('.')[0].length > 3 ? amount.toString().substring(0,amount.toString().split('.')[0].length-3).replace(/\\B(?=(\\d{2})+(?!\\d))/g, \",\") + \",\" + amount.toString().substring(amount.toString().split('.')[0].length-3): amount.toString();\r\n   }\r\n\r\n  }\r\n\r\n  demonreset(){\r\n    if(this.a){\r\n      this.cdForm.resetForm();\r\n      this.enableBtn1=false;\r\n    }\r\n  }\r\n\r\n}\r\n//  function numberWithCommas(this.transAmt) {\r\n\r\n//    var transAmtArray[0] = transAmtArray[0].toString().split(\".\");\r\n//    transAmtArray[0] = transAmtArray[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n//    return transAmtArray[0].join(\".\");\r\n//  }\r\n//   throw new Error('Function not implemented.');\r\n\r\n\r\n// const numberWithCommas = (transAmt) => {\r\n//   return transAmt.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\r\n//   console.log(transAmt);\r\n//   }\r\n  //  var transAmtArray= numberWithCommas(this.transAmt);\r\n  //  console.log(transAmtArray);\r\n   \r\n  //using formatNumber for comma separator\r\n  //formatNumber(Number(this.transAmt.split(',')), 'en-US', '1.0-0')\r\n  ","<div class=\"fullcard\">\r\n    <div fxLayout=\"row\">\r\n        <div fxFlex=\"cashwithdrawForm.get('transactionAmount').value > 0? 70% : 100%\">\r\n            <h6 class=\"h1\"><span style=\"color:grey;padding-right: 4px;\">Services</span> <b>></b> <span style=\"padding-left: 4px;\"><b>Cash Withdrawal</b></span></h6>\r\n\r\n            <!-- <h6 class=\"h1\"><span style=\"color:grey\">Services</span> <b>&nbsp;&nbsp; >&nbsp;&nbsp; </b> <span><b>Cash Withdrawal</b></span></h6> -->\r\n            <mat-card  class=\"chequecard topView\">\r\n\r\n                \r\n\r\n                <mat-card-title style=\"padding: 2%;\">\r\n                    <div fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n                        <div>\r\n                            <!-- <img src=\"assets/images/arrow_back.png\" class=\"mat-elevation-z1\" alt=\"\"> -->\r\n                            <mat-icon *ngIf=\"phoneNumber\" class=\"backIcon\" (click)=\"goToServiceScreens()\">\r\n                            arrow_back</mat-icon>\r\n                        </div>&nbsp;&nbsp;\r\n                        <div class=\"card-title\">Cash Withdrawal</div>\r\n                    </div>\r\n                </mat-card-title>\r\n                <mat-card-content>\r\n                    <div class=\"full-width\" style=\"padding: 0% 0% 3% 2%;\">\r\n                        <form [formGroup]=\"cashwithdrawForm\">\r\n                            <div fxLayout=\"column\" fxLayoutGap=\"3%\" fxLayoutAlign=\"space-between none\">\r\n                                <div>\r\n                                    <div fxLayout=\"row wrap\" class=\"flex-container stretch\">\r\n                                        <ng-container>\r\n                                            <div fxFlex=\"25%\" fxFlex.xs=\"100%\" *ngIf=\"showAccountNum\">\r\n                                                <mat-hint class=\"totalAmount\">Account Type*</mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <input matInput type=\"text\" *ngIf=\"phoneNumber && !accountDropdown\"\r\n                                                        [readonly]=\"true\" class=\"full-width\" \r\n                                                        formControlName=\"accountType\">\r\n                                                    <mat-select *ngIf=\"phoneNumber && accountDropdown\"\r\n                                                        formControlName=\"accountType\"\r\n                                                        (selectionChange)=\"getAccountType($event.value)\"\r\n                                                        style=\"background-color: #f9fafb;\"\r\n                                                        placeholder=\"Select Account Type\">\r\n                                                        <mat-option *ngFor=\"let type of accounttypeArray \"\r\n                                                            [value]=\"type.accountType\">{{type.accountType}}</mat-option>\r\n                                                    </mat-select>\r\n                                                    <!-- <mat-select *ngIf=\"phoneNumber && !accountDropdown\" formControlName=\"accountType\" (selectionChange)=\"getAccountType($event.value)\"\r\n                                                        style=\"background-color: #f9fafb;\"\r\n                                                        placeholder=\"Select Account Type\">\r\n                                                        <mat-option *ngFor=\"let type of accounttypeArray \"\r\n                                                        (click)=\"custAccountNumber(type)\"\r\n                                                            [value]=\"type.accountType\">{{type.accountType}}</mat-option>\r\n                                                    </mat-select> -->\r\n                                                    <!-- <input matInput type=\"text\"  [readonly]=\"true\" class=\"full-width\" formControlName=\"accountType\" > -->\r\n\r\n                                                </mat-card>\r\n                                            </div>\r\n                                            <div fxFlex=\"25%\" fxFlex.xs=\"100%\" *ngIf=\"!showAccountNum\">\r\n                                                <mat-hint class=\"totalAmount\">Account Number*</mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <input matInput type=\"text\" class=\"full-width\"\r\n                                                        formControlName=\"accountNumber\"\r\n                                                        (change)=\"fetchByAccountNum(cashwithdrawForm.get('accountNumber').value)\">\r\n                                                </mat-card>\r\n                                                <!-- <mat-hint class=\"totalAmount\" *ngIf=\"!phoneNumber\" >Account Balance :{{curr }} {{accountBal | number: '2.' }}</mat-hint> -->\r\n                                                <mat-hint class=\"totalAmount\" *ngIf=\"!showAccountNum\">Account Balance: {{curr }}{{formatAmount(accountBal)}}</mat-hint>\r\n                                                <br>\r\n                                                <!-- <mat-hint  class=\"totalAmount\" *ngIf=\"!phoneNumber\"  [readonly]=\"true\"  formControlName=\"holderName\">Holder Name :{{userName}}</mat-hint> -->\r\n                                                <mat-hint class=\"totalAmount\" *ngIf=\"!showAccountNum\" [readonly]=\"true\">\r\n                                                    Holder Name : {{userName}}</mat-hint>\r\n                                            </div>\r\n                                            <div fxFlex=\"25%\" fxFlex.xs=\"100%\" *ngIf=\"showAccountNum\">\r\n                                                <mat-hint class=\"totalAmount\">Account Number*</mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <input *ngIf=\"!flag1\" matInput type=\"text\" [readonly]=\"true\"\r\n                                                        class=\"full-width\" formControlName=\"accountNumber\"\r\n                                                    >\r\n                                                    <mat-select *ngIf=\"flag1\" formControlName=\"accountNumber\" (selectionChange)=\"fetchByAccountNum($event.value)\"\r\n                                                        style=\"background-color: #f9fafb; \" placeholder=\"Select Account Number\">\r\n                                                        <!-- <mat-option>select</mat-option> -->\r\n                                                        <mat-option *ngFor=\"let id of accountNoList \"\r\n                                                             [value]=\"id\">{{id}}\r\n                                                        </mat-option>\r\n                                                    </mat-select>\r\n                                                </mat-card>\r\n                                                <!-- <mat-hint *ngIf=\"!phoneNumber\"  class=\"totalAmount\" >Account Balance :{{curr }} {{accountBal | number: '2.'}}</mat-hint> -->\r\n                                                <mat-hint *ngIf=\"!hideDetails\" class=\"totalAmount\" style=\"margin-left:-15px\">\r\n                                                    Account Balance : {{curr }}{{formatAmount(accountBal)}}</mat-hint>\r\n\r\n                                                <br>\r\n                                                <!-- <mat-hint  class=\"totalAmount\" *ngIf=\"!phoneNumber\"  [readonly]=\"true\"  formControlName=\"holderName\">Holder Name :{{userName}}</mat-hint> -->\r\n                                                <mat-hint class=\"totalAmount\" *ngIf=\"!hideDetails\" [readonly]=\"true\"\r\n                                                    formControlName=\"holderName\">Holder Name : {{userName}}</mat-hint>\r\n                                            </div>\r\n                                            <div fxFlex=\"25%\" fxFlex.xs=\"100%\" *ngIf=\"!showAccountNum\">\r\n                                                <mat-hint class=\"totalAmount\">Account Type*</mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <input matInput type=\"text\" [readonly]=\"true\" class=\"full-width\"\r\n                                                        formControlName=\"accountType\">\r\n\r\n                                                </mat-card>\r\n                                            </div>\r\n                                 \r\n                                            <div fxFlex=\"23%\" fxFlex.xs=\"100%\">\r\n                                                <mat-hint class=\"accountBranch\">Account Branch*</mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <input matInput *ngIf=\"!phoneNumber\" type=\"text\" [readonly]=\"true\"\r\n                                                        class=\"full-width\" formControlName=\"accountBranch\">\r\n\r\n                                                    <input matInput *ngIf=\"phoneNumber\" type=\"text\" [readonly]=\"true\"\r\n                                                        class=\"full-width\" formControlName=\"accountBranch\">\r\n                                                </mat-card>\r\n                                                <!-- <mat-hint class=\"totalAmount\">Account Currency\r\n                                                    : {{selected}}</mat-hint> -->\r\n                                                <mat-error\r\n                                                    *ngIf=\"cashwithdrawForm.get('accountBranch').touched && !cashwithdrawForm.get('accountBranch').valid\">\r\n                                                    Account Branch is Required!\r\n                                                </mat-error>\r\n                                            </div>\r\n                                           \r\n\r\n\r\n                                        </ng-container>\r\n                                    </div>\r\n                                </div>\r\n                                <div>\r\n                                    <div fxLayout=\"row wrap\" class=\"flex-container stretch\">\r\n                                        <ng-container>\r\n\r\n                                            <!-- <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                                <mat-hint class=\"transactionBranch\">Transaction Branch*</mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <mat-select *ngIf=\"phoneNumber\" formControlName=\"transactionBranch\">\r\n                                                        <mat-option *ngFor=\"let tranbranch of trasactionBranches\"\r\n                                                            [value]=\"tranbranch\">\r\n                                                            {{tranbranch}}\r\n                                                        </mat-option>\r\n                                                    </mat-select>\r\n                                                    <input matInput *ngIf=\"!phoneNumber\" type=\"text\"\r\n                                                    [readonly]=\"true\" class=\"full-width\"\r\n                                                    formControlName=\"transactionBranch\">\r\n                                                </mat-card>\r\n                                                <mat-error\r\n                                                    *ngIf=\"cashwithdrawForm.get('transactionBranch').touched && !cashwithdrawForm.get('transactionBranch').valid\">\r\n                                                    Transaction Branch is Required!\r\n                                                </mat-error>\r\n                                            </div> -->\r\n                                            <div fxFlex=\"25%\" fxFlex.xs=\"100%\">\r\n                                                <mat-hint class=\"totalAmount\">Account Currency*</mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <div fxLayout=\"row wrap\" class=\"full-width\">\r\n                                                        <div fxFlex=\"25%\">\r\n                                                            <div *ngIf=\"ifQRvariable\"\r\n                                                                class=\"currency-flag {{isedit?accountCurrencyImage(cashwithdrawForm.controls['accountCurrency'].value):currencyImage}}\"></div>\r\n                                                            <div *ngIf=\"!ifQRvariable\"\r\n                                                                class=\"currency-flag {{!isedit?accountCurrencyImage(cashwithdrawForm.controls['accountCurrency'].value):currencyImage}}\">\r\n                                                            </div>\r\n\r\n                                                        </div>\r\n                                                        <div fxFlex=\"75%\">\r\n                                                            <input matInput type=\"text\" *ngIf=\"!phoneNumber\"\r\n                                                                [readonly]=\"true\" class=\"full-width\"\r\n                                                                style=\"font-size:110%\"\r\n                                                                formControlName=\"accountCurrency\">\r\n                                                            <input matInput type=\"text\" *ngIf=\"phoneNumber\"\r\n                                                                style=\"font-size:110%\" [readonly]=\"true\"\r\n                                                                class=\"full-width\" formControlName=\"accountCurrency\">\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </mat-card>\r\n                                            </div>\r\n                                           \r\n                                            <div fxFlex=\"25%\" fxFlex.xs=\"100%\" *ngIf=\"showAccountNum\">\r\n                                                <mat-hint class=\"totalAmount\">Transaction Currency* </mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <div fxLayout=\"row wrap\" class=\"full-width\">\r\n                                                        <div fxFlex=\"25%\">\r\n                                                            <div class=\"currency-flag {{currencyImage}}\"></div>\r\n                                                        </div>\r\n                                                        <div fxFlex=\"75%\">\r\n                                                            <input matInput type=\"text\" *ngIf=\"!phoneNumber\"\r\n                                                                [readonly]=\"true\" formControlName=\"transactionCurrency\">\r\n                                                            <mat-select formControlName=\"transactionCurrency\"\r\n                                                                *ngIf=\"phoneNumber\"\r\n                                                                placeholder=\"Select Transaction Currency\"\r\n                                                                id=\"testSelect\" style=\"background-color: #f9fafb;font-weight: bold;\"\r\n                                                                [disabled]=\"isedit\">\r\n                                                                <mat-option\r\n                                                                    *ngFor=\"let country of countryValues; let i = index\"\r\n                                                                    (click)=\"onCountryChange(country)\"\r\n                                                                    style=\"font-size:110%\"\r\n                                                                    [value]=\"country.currencyCode\">\r\n                                                                    <div fxLayout=\"row wrap\" class=\"full-width\">\r\n                                                                        <div fxFlex=\"15%\">{{country.currencyCode}}</div>\r\n                                                                        <div fxFlex=\"85%\">\r\n                                                                            <div\r\n                                                                                class=\"currency-flag currency-flag-{{addCurrencyImage(country.currencyCode)}} alignImage\">\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </mat-option>\r\n                                                            </mat-select>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </mat-card>\r\n                                            </div>\r\n                                            <div fxFlex=\"25%\" fxFlex.xs=\"100%\" *ngIf=\"!showAccountNum\">\r\n                                                <mat-hint class=\"totalAmount\">Transaction Currency* </mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <div fxLayout=\"row wrap\" class=\"full-width\">\r\n                                                        <div fxFlex=\"25%\">\r\n                                                            <div class=\"currency-flag {{currencyImage}}\"></div>\r\n                                                        </div>\r\n                                                        <div fxFlex=\"75%\">\r\n                                                            <mat-select formControlName=\"transactionCurrency\"\r\n                                                                placeholder=\"Select Transaction Currency\"\r\n                                                                id=\"testSelect\" style=\"background-color: #f9fafb;font-weight: bold;\">\r\n                                                                <mat-option\r\n                                                                    *ngFor=\"let country of countryValues; let i = index\"\r\n                                                                    (click)=\"onCountryChange(country)\"\r\n                                                                    style=\"font-size:110%\"\r\n                                                                    [value]=\"country.currencyCode\">\r\n                                                                    <div fxLayout=\"row wrap\" class=\"full-width\">\r\n                                                                        <div fxFlex=\"15%\">{{country.currencyCode}}</div>\r\n                                                                        <div fxFlex=\"85%\">\r\n                                                                            <div\r\n                                                                                class=\"currency-flag currency-flag-{{addCurrencyImage(country.currencyCode)}} alignImage\">\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </mat-option>\r\n                                                            </mat-select>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </mat-card>\r\n                                            </div>\r\n                                            <div fxFlex=\"25.5%\" fxFlex.xs=\"100%\" *ngIf=\"!showAccountNum\">\r\n                                                <mat-hint class=\"totalAmount\">Transaction Amount*</mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <input matInput class=\"full-width\" #myRef [(ngModel)]=\"transAmount\"\r\n                                                        formControlName=\"transactionAmount\"\r\n                                                        [value]=\"transAmt | number: '2.'\" (keyup)=\"OnInput($event)\"\r\n                                                        (focus)=\"clicked($event)\" (keyup)=\"demonreset()\">\r\n                                                </mat-card>\r\n                                                <mat-error\r\n                                                    *ngIf=\"cashwithdrawForm.get('transactionAmount').errors?.min\">\r\n                                                    Amount must be greater than zero\r\n                                                </mat-error>\r\n                                            </div>\r\n                                            <div fxFlex=\"25.5%\" fxFlex.xs=\"100%\" *ngIf=\"showAccountNum\">\r\n                                                <mat-hint class=\"totalAmount\">Transaction Amount*</mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <input matInput type=\"text\" *ngIf=\"!phoneNumber\" [readonly]=\"true\"\r\n                                                        formControlName=\"transactionAmount\">\r\n                                                    <input matInput class=\"full-width\" *ngIf=\"phoneNumber\" #myRef\r\n                                                        [(ngModel)]=\"transAmount\" formControlName=\"transactionAmount\"\r\n                                                        [value]=\"transAmt | number: '1.'\" (keyup)=\"OnInput($event)\"\r\n                                                        (focus)=\"clicked($event)\" (keyup)=\"demonreset()\" [readonly]=\"isedit\">\r\n\r\n                                                </mat-card>\r\n                                                <mat-error\r\n                                                    *ngIf=\"cashwithdrawForm.get('transactionAmount').errors?.min\">\r\n                                                    Amount must be greater than zero\r\n                                                </mat-error>\r\n                                            </div>\r\n                                            <div fxFlex=\"25%\" fxFlex.xs=\"100%\">\r\n                                                <mat-hint class=\"totalAmount\">Total Charge Amount*</mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <input matInput class=\"full-width\" readonly formControlName=\"totalChargeAmount\">\r\n                                                </mat-card>\r\n\r\n                                            </div>\r\n                                            <div fxFlex=\"25%\" fxFlex.xs=\"100%\">\r\n                                                <mat-hint class=\"totalAmount\">Total Transaction Amount*</mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <input matInput type=\"text\" readonly onlyNumber formControlName=\"totalTransactionAmount\">\r\n\r\n                                                </mat-card>\r\n\r\n                                            </div>\r\n                                            <div class=\"tooltip\">\r\n                                                <!-- <mat-icon  fxFlex=\"50%\" fxFlex.xs=\"100%\" ><span class=\"material-symbols-sharp\">\r\n                                               info\r\n                                                </span>\r\n                                                </mat-icon> -->\r\n                                                <img width=\"80%\"\r\n                                            [src]=\"'assets/images/info.svg'\"/>\r\n                                                <div class=\"tooltiptext\">\r\n                                                    <p class=\"totalAmount textcolor\" style=\"margin-top:10px; margin-bottom:6px\">Transaction Amount:{{cashwithdrawForm.get('transactionAmount').value}} </p>\r\n                                                    <p class=\"totalAmount textcolor\">Total Charge Amount:{{cashwithdrawForm.get('totalChargeAmount').value}} </p>\r\n                                                    <hr/>\r\n                                                    <p class=\"totalAmount textcolor\" style=\"margin-right:10px ;\">Total Transaction Amount:{{cashwithdrawForm.get('totalTransactionAmount').value}} </p>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                        </ng-container>\r\n                                    </div>\r\n                                </div>\r\n                                 <div>\r\n                                    <div fxLayout=\"row wrap\" class=\"flex-container stretch\">\r\n                                        <ng-container>\r\n                                            \r\n                                             <!-- <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                                <mat-hint class=\"transactionBranch\">Transaction Branch*</mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <mat-select *ngIf=\"phoneNumber\" formControlName=\"transactionBranch\">\r\n                                                        <mat-option *ngFor=\"let tranbranch of trasactionBranches\"\r\n                                                            [value]=\"tranbranch\">\r\n                                                            {{tranbranch}}\r\n                                                        </mat-option>\r\n                                                    </mat-select>\r\n                                                    <input matInput *ngIf=\"!phoneNumber\" type=\"text\"\r\n                                                    [readonly]=\"true\" class=\"full-width\"\r\n                                                    formControlName=\"transactionBranch\">\r\n                                                </mat-card>\r\n                                                <mat-error\r\n                                                    *ngIf=\"cashwithdrawForm.get('transactionBranch').touched && !cashwithdrawForm.get('transactionBranch').valid\">\r\n                                                    Transaction Branch is Required!\r\n                                                </mat-error>\r\n                                            </div>  -->\r\n                                            <!-- <div fxFlex=\"23%\" fxFlex.xs=\"100%\">\r\n                                                <mat-hint class=\"totalAmount\">Account Currency*</mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <div fxLayout=\"row wrap\" class=\"full-width\">\r\n                                                        <div fxFlex=\"25%\">\r\n                                                            <div *ngIf=\"ifQRvariable\"\r\n                                                                class=\"currency-flag {{currencyImage}}\"></div>\r\n                                                            <div *ngIf=\"!ifQRvariable\"\r\n                                                                class=\"currency-flag {{!isedit?accountCurrencyImage(cashwithdrawForm.controls['accountCurrency'].value):''}}\">\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div fxFlex=\"75%\">\r\n                                                            <input matInput type=\"text\" *ngIf=\"!phoneNumber\"\r\n                                                                [readonly]=\"true\" class=\"full-width\" style=\"font-size:110%\"\r\n                                                                formControlName=\"accountCurrency\">\r\n                                                            <input matInput type=\"text\" *ngIf=\"phoneNumber\" style=\"font-size:110%\"\r\n                                                                [readonly]=\"true\" class=\"full-width\"\r\n                                                                formControlName=\"accountCurrency\">\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </mat-card>\r\n                                            </div> -->\r\n                                           \r\n                                          \r\n                                       \r\n                                    \r\n                                        </ng-container>\r\n                                    </div>\r\n                                </div> \r\n                                <!-- <div>\r\n                                    <div fxLayout=\"row wrap\" class=\"flex-container stretch\">\r\n                                        <ng-container>\r\n                                            <div fxFlex=\"30%\" fxFlex.xs=\"100%\" style=\"padding: 0% 1%;\">\r\n                                                <button mat-flat-button *ngIf=\"phoneNumber\" class=\"buttonCancel full-width\"\r\n                                                    (click)=\"goToServiceScreens()\">CANCEL</button>\r\n                                            </div>\r\n                                            <div fxFlex=\"70%\" fxFlex.xs=\"100%\" style=\"padding: 0% 2%;\">\r\n                                                <button mat-flat-button class=\"buttonNext full-width\" \r\n                                                    [disabled]=\"!enableContinue || !cashwithdrawForm.get('transactionAmount').valid\r\n                                                    ||!cashwithdrawForm.get('transactionCurrency').valid ||\r\n                                                    !cashwithdrawForm.get('holderName').valid ||!cashwithdrawForm.get('accountType').valid ||!cashwithdrawForm.get('accountNumber').valid ||!cashwithdrawForm.get('accountCurrency').valid\"\r\n                                                    (click)=\"onSaveofCashWithdraw(cashwithdrawForm.value,ifQRvariable,cdForm)\">CONTINUE</button>\r\n                                            </div>\r\n                                        </ng-container>\r\n                                    </div>\r\n                                </div> -->\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </mat-card-content>\r\n            </mat-card>\r\n        </div>\r\n        <div *ngIf=\"(denomRequired == 'yes') && (cashwithdrawForm.get('transactionAmount').value > 0 || transAmt > 0)\"\r\n            fxFlex=\"30%\">\r\n            <form #cdForm=\"ngForm\">\r\n                <mat-card class=\"border-align\">\r\n                    <div fxLayout=\"row\" class=\"pH10 full-width\">\r\n\r\n                        <h4 class=\"title-Font\">Denomination</h4>\r\n                    </div>\r\n                    <div class=\"pH10 full-width\" id=\"denominationDiv\">\r\n                        <div class=\"paddingclass\" fxLayoutAlign=\"center center\"\r\n                            *ngIf=\"cashwithdrawForm.value.transactionCurrency == 'INR'\">\r\n                            <div fxFlex=\"20%\">\r\n                                <p class=\"quantityClass text-small\">2000</p>\r\n                            </div>\r\n                            <div fxFlex=\"10%\">\r\n                                <p class=\"operationTypeClass text-small\">x</p>\r\n                            </div>\r\n                            <div fxFlex=\"70%\">\r\n                                <mat-card class=\"inputCard\">\r\n                                    <div>\r\n                                        <input class=\"full-width inputClass\" type=\"text\"\r\n                                            (keyup)=\"totalAmountValue(cdForm)\" (keypress)=\"omit_number($event)\" matInput\r\n                                            name=\"count2000\" ngModel #count2000>\r\n                                    </div>\r\n                                </mat-card>\r\n                                <div class=\"pl10\">\r\n                                    <mat-error *ngIf=\"denominationlimit && count2000.value > denominationLimit[2000]\">\r\n                                        Please enter <= {{denominationLimit[2000]}} </mat-error>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"paddingclass\" fxLayoutAlign=\"start center\"\r\n                            *ngIf=\"cashwithdrawForm.value.transactionCurrency == 'INR' || cashwithdrawForm.value.transactionCurrency == 'USD' || cashwithdrawForm.value.transactionCurrency == 'AED'\">\r\n                            <div fxFlex=\"20%\">\r\n                                <p class=\"quantityClass text-small\">500</p>\r\n                            </div>\r\n                            <div fxFlex=\"10%\">\r\n                                <p class=\"operationTypeClass text-small\">x</p>\r\n                            </div>\r\n                            <div fxFlex=\"70%\">\r\n                                <mat-card class=\"inputCard\">\r\n                                    <input class=\"full-width inputClass\" type=\"text\" (keyup)=\"totalAmountValue(cdForm)\"\r\n                                        (keypress)=\"omit_number($event)\" matInput name=\"count500\" ngModel #count500>\r\n                                </mat-card>\r\n                                <div class=\"pl10\">\r\n                                    <mat-error *ngIf=\"denominationlimit && count500.value > denominationLimit[500]\">\r\n                                        Please enter <= {{denominationLimit[500]}} </mat-error>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"paddingclass\" fxLayoutAlign=\"start center\"\r\n                            *ngIf=\"cashwithdrawForm.value.transactionCurrency == 'INR'\">\r\n                            <div fxFlex=\"20%\">\r\n                                <p class=\"quantityClass text-small\">200</p>\r\n                            </div>\r\n                            <div fxFlex=\"10%\">\r\n                                <p class=\"operationTypeClass text-small\">x</p>\r\n                            </div>\r\n                            <div fxFlex=\"70%\">\r\n                                <mat-card class=\"inputCard\">\r\n                                    <input class=\"full-width inputClass\" type=\"text\" (keyup)=\"totalAmountValue(cdForm)\"\r\n                                        (keypress)=\"omit_number($event)\" matInput name=\"count200\" ngModel #count200>\r\n                                </mat-card>\r\n                                <div class=\"pl10\">\r\n                                    <mat-error *ngIf=\"denominationlimit && count200.value > denominationLimit[200]\">\r\n                                        Please enter <= {{denominationLimit[200]}} </mat-error>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"paddingclass\" fxLayoutAlign=\"start center\"\r\n                            *ngIf=\"cashwithdrawForm.value.transactionCurrency == 'INR' || cashwithdrawForm.value.transactionCurrency == 'USD' || cashwithdrawForm.value.transactionCurrency == 'AED'\">\r\n                            <div fxFlex=\"20%\">\r\n                                <p class=\"quantityClass text-small\">100</p>\r\n                            </div>\r\n                            <div fxFlex=\"10%\">\r\n                                <p class=\"operationTypeClass text-small\">x</p>\r\n                            </div>\r\n                            <div fxFlex=\"70%\">\r\n                                <mat-card class=\"inputCard\">\r\n                                    <input class=\"full-width inputClass\" type=\"text\" (keyup)=\"totalAmountValue(cdForm)\"\r\n                                        (keypress)=\"omit_number($event)\" matInput name=\"count100\" ngModel #count100>\r\n                                </mat-card>\r\n                                <div class=\"pl10\">\r\n                                    <mat-error *ngIf=\"denominationlimit && count100.value > denominationLimit[100]\">\r\n                                        Please enter <= {{denominationLimit[100]}} </mat-error>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"paddingclass\" fxLayoutAlign=\"start center\"\r\n                            *ngIf=\"cashwithdrawForm.value.transactionCurrency== 'INR' || cashwithdrawForm.value.accountCurrency == 'USD'\">\r\n                            <div fxFlex=\"20%\">\r\n                                <p class=\"quantityClass text-small\">50</p>\r\n                            </div>\r\n                            <div fxFlex=\"10%\">\r\n                                <p class=\"operationTypeClass text-small\">x</p>\r\n                            </div>\r\n                            <div fxFlex=\"70%\">\r\n                                <mat-card class=\"inputCard\">\r\n                                    <input class=\"full-width inputClass\" type=\"text\" (keyup)=\"totalAmountValue(cdForm)\"\r\n                                        (keypress)=\"omit_number($event)\" matInput name=\"count50\" ngModel #count50>\r\n                                </mat-card>\r\n                                <div class=\"pl10\">\r\n                                    <mat-error *ngIf=\"denominationlimit && count50.value > denominationLimit[50]\">\r\n                                        Please enter <= {{denominationLimit[50]}} </mat-error>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"paddingclass\" fxLayoutAlign=\"start center\"\r\n                            *ngIf=\"cashwithdrawForm.value.transactionCurrency== 'INR'\">\r\n                            <div fxFlex=\"20%\">\r\n                                <p class=\"quantityClass text-small\">20</p>\r\n                            </div>\r\n                            <div fxFlex=\"10%\">\r\n                                <p class=\"operationTypeClass text-small\">x</p>\r\n                            </div>\r\n                            <div fxFlex=\"70%\">\r\n                                <mat-card class=\"inputCard\">\r\n                                    <input class=\"full-width inputClass\" type=\"text\" (keyup)=\"totalAmountValue(cdForm)\"\r\n                                        (keypress)=\"omit_number($event)\" matInput name=\"count20\" ngModel #count20>\r\n                                </mat-card>\r\n                                <div class=\"pl10\">\r\n                                    <mat-error *ngIf=\"denominationlimit && count20.value > denominationLimit[20]\">\r\n                                        Please enter <= {{denominationLimit[20]}} </mat-error>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"paddingclass\" fxLayoutAlign=\"start center\"\r\n                            *ngIf=\"cashwithdrawForm.value.transactionCurrency== 'INR'\">\r\n                            <div fxFlex=\"20%\">\r\n                                <p class=\"quantityClass text-small\">10</p>\r\n                            </div>\r\n                            <div fxFlex=\"10%\">\r\n                                <p class=\"operationTypeClass text-small\">x</p>\r\n                            </div>\r\n                            <div fxFlex=\"70%\">\r\n                                <mat-card class=\"inputCard\">\r\n                                    <input class=\"full-width inputClass\" type=\"text\" (keyup)=\"totalAmountValue(cdForm)\"\r\n                                        (keypress)=\"omit_number($event)\" matInput name=\"count10\" ngModel #count10>\r\n                                </mat-card>\r\n                                <div class=\"pl10\">\r\n                                    <mat-error *ngIf=\"denominationlimit && count10.value > denominationLimit[10]\">\r\n                                        Please enter <= {{denominationLimit[10]}} </mat-error>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"paddingclass\" fxLayoutAlign=\"start center\"\r\n                            *ngIf=\"cashwithdrawForm.value.transactionCurrency== 'INR' || cashwithdrawForm.value.transactionCurrency == 'USD' || cashwithdrawForm.value.transactionCurrency == 'AED'\">\r\n                            <div fxFlex=\"20%\">\r\n                                <p class=\"quantityClass text-small\">1</p>\r\n                            </div>\r\n                            <div fxFlex=\"10%\">\r\n                                <p class=\"operationTypeClass text-small\">x</p>\r\n                            </div>\r\n                            <div fxFlex=\"70%\">\r\n                                <mat-card class=\"inputCard\">\r\n                                    <input class=\"full-width inputClass\" type=\"text\" (keyup)=\"totalAmountValue(cdForm)\"\r\n                                        (keypress)=\"omit_number($event)\" matInput name=\"count1\" ngModel #count10>\r\n                                </mat-card>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div fxLayout=\"row wrap\" class=\"pH10 full-width\">\r\n                        <div fxFlex=\"53%\" fxFlex.xs=\"100%\">\r\n                            <p class=\"totalAmount\">Total Amount</p>\r\n                            <mat-card class=\"inputCard\">\r\n                                <input class=\"full-width inputClass\" [(ngModel)]=\"totalAmount\"  matInput\r\n                                    name=\"totalAmount\" readonly>\r\n                            </mat-card>\r\n                            <div class=\"pl10\" style=\"width: 150%;\">\r\n                                <mat-error *ngIf=\"enableBtn1\">\r\n                                    Total amount should be equal to {{cashwithdrawForm.value.transactionAmount}}\r\n                                </mat-error>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </mat-card>\r\n            </form>\r\n        </div>\r\n    </div>\r\n\r\n\r\n\r\n    <div>\r\n        <div fxLayout=\"row wrap\" class=\"flex-container stretch\" id=\"buttonDiv\">\r\n            <ng-container>\r\n                <div fxFlex=\"30%\" fxFlex.xs=\"100%\" class=\"paddingCls\">\r\n                    <button mat-flat-button *ngIf=\"phoneNumber\" class=\"buttonCancel full-width\"\r\n                        (click)=\"goToServiceScreens()\">CANCEL</button>\r\n                </div>\r\n                <div fxFlex=\"70%\" fxFlex.xs=\"100%\" class=\"paddingCls\" *ngIf=\"showAccountNum\">\r\n                    <button mat-flat-button class=\"buttonNext full-width\" [disabled]=\"!enableContinue\r\n                    ||!cashwithdrawForm.get('transactionCurrency').valid\r\n                    ||!cashwithdrawForm.get('accountType').valid\r\n                    ||!cashwithdrawForm.get('accountNumber').valid \r\n                    ||!cashwithdrawForm.get('accountCurrency').valid\r\n                    ||!cashwithdrawForm.get('transactionAmount').valid\r\n                    ||!cashwithdrawForm.get('totalChargeAmount').valid\r\n                    ||!cashwithdrawForm.get('totalTransactionAmount').valid\r\n                    || enableBtn1\"\r\n                        (click)=\"onSaveofCashWithdraw(cashwithdrawForm.value,ifQRvariable,cdForm)\">GENERATE TOKEN</button>\r\n                </div>\r\n                <div fxFlex=\"70%\" fxFlex.xs=\"100%\" class=\"paddingCls\" *ngIf=\"!showAccountNum\">\r\n                    <button mat-flat-button class=\"buttonNext full-width\" [disabled]=\"!enableContinue || !cashwithdrawForm.get('transactionAmount').valid \r\n                    ||!cashwithdrawForm.get('transactionCurrency').valid\r\n                    ||!cashwithdrawForm.get('accountType').valid\r\n                    ||!cashwithdrawForm.get('accountNumber').valid \r\n                    ||!cashwithdrawForm.get('accountCurrency').valid\r\n                    ||!cashwithdrawForm.get('transactionAmount').valid\r\n                    ||!cashwithdrawForm.get('totalChargeAmount').valid\r\n                    ||!cashwithdrawForm.get('totalTransactionAmount').valid\"\r\n                        (click)=\"getOTP(cashwithdrawForm.value,ifQRvariable,cdForm)\">CONTINUE</button>\r\n                </div>\r\n\r\n            </ng-container>\r\n        </div>\r\n    </div>\r\n    <!-- <div *ngIf=\"denomRequired == 'yes'\">\r\n        <div fxLayout=\"row wrap\" class=\"flex-container stretch\" id=\"buttonDiv\">\r\n            <ng-container>\r\n                <div fxFlex=\"30%\" fxFlex.xs=\"100%\" class=\"paddingCls\">\r\n                    <button mat-flat-button *ngIf=\"phoneNumber\" class=\"buttonCancel full-width\"\r\n                        (click)=\"goToServiceScreens()\">CANCEL</button>\r\n                </div>\r\n                <div fxFlex=\"70%\" fxFlex.xs=\"100%\" class=\"paddingCls\" *ngIf=\"showAccountNum\">\r\n                    <button mat-flat-button class=\"buttonNext full-width\" [disabled]=\"!enableContinue\r\n                    ||!cashwithdrawForm.get('transactionCurrency').valid\r\n                    ||!cashwithdrawForm.get('accountType').valid\r\n                    ||!cashwithdrawForm.get('holderName').valid\r\n                    ||!cashwithdrawForm.get('accountNumber').valid \r\n                    ||!cashwithdrawForm.get('accountCurrency').valid\r\n                    ||!cashwithdrawForm.get('transactionAmount').valid\"\r\n                        (click)=\"onSaveofCashWithdraw(cashwithdrawForm.value,ifQRvariable,cdForm)\">GENERATE\r\n                        TOKEN</button>\r\n                </div>\r\n                <div fxFlex=\"70%\" fxFlex.xs=\"100%\" class=\"paddingCls\" *ngIf=\"!showAccountNum\">\r\n                    <button mat-flat-button class=\"buttonNext full-width\" [disabled]=\"!enableContinue || !cashwithdrawForm.get('transactionAmount').valid \r\n                    ||!cashwithdrawForm.get('transactionCurrency').valid\r\n                    ||!cashwithdrawForm.get('accountType').valid\r\n                    ||!cashwithdrawForm.get('holderName').valid\r\n                    ||!cashwithdrawForm.get('accountNumber').valid \r\n                    ||!cashwithdrawForm.get('accountCurrency').valid\r\n                    ||!cashwithdrawForm.get('transactionAmount').valid\"\r\n                        (click)=\"getOTP(cashwithdrawForm.value,ifQRvariable,cdForm)\">CONTINUE</button>\r\n                </div>\r\n            </ng-container>\r\n        </div>\r\n    </div> -->\r\n\r\n</div>"]}