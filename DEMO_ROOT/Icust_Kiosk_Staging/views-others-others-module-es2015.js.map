{"version":3,"sources":["./src/app/views/others/cheque-withdrawal/cheque-withdrawal.component.ts","./src/app/views/others/cheque-withdrawal/cheque-withdrawal.component.html","./src/app/views/others/loan-payment/loan-payment.component.ts","./src/app/views/others/loan-payment/loan-payment.component.html","./src/app/views/others/forex-transaction/forex-transaction.component.ts","./src/app/views/others/forex-transaction/forex-transaction.component.html","./src/app/views/others/others.module.ts","./src/app/views/others/select-service/select-service.component.ts","./src/app/views/others/select-service/select-service.component.html","./src/app/views/others/cash-deposit/cash-deposit.component.ts","./src/app/views/others/cash-deposit/cash-deposit.component.html","./src/app/views/others/utility-billpayment/utility-billpayment.component.ts","./src/app/views/others/utility-billpayment/utility-billpayment.component.html","./src/app/shared/directives/onlynumber.directive.ts","./src/app/views/others/cheque-withdrawal1/cheque-withdrawal1.component.ts","./src/app/views/others/cheque-withdrawal1/cheque-withdrawal1.component.html","./src/app/views/others/cheque-deposit/cheque-deposit.component.ts","./src/app/views/others/cheque-deposit/cheque-deposit.component.html","./src/app/views/others/others.routing.ts","./src/app/views/others/deposit-topup/deposit-topup.component.ts","./src/app/views/others/deposit-topup/deposit-topup.component.html","./src/app/views/others/app-blank/app-blank.component.ts","./src/app/views/others/app-blank/app-blank.component.html","./src/app/views/others/otp-verify/otp-verify.component.ts","./src/app/views/others/otp-verify/otp-verify.component.html","./src/app/views/others/cash-withdrawal/cash-withdrawal.component.ts","./src/app/views/others/cash-withdrawal/cash-withdrawal.component.html"],"names":[],"mappings":"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","file":"views-others-others-module-es2015.js","sourcesContent":["import { Country } from '@angular-material-extensions/select-country';\r\nimport { Component, Injectable, Input, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl, FormBuilder, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { ToastrComponent } from 'app/shared/components/toastr/toastr.component';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { DialogService, TokenObjects } from 'app/shared/services/Dialog/dialog.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { Toast } from 'ngx-toastr';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { getCurrencySymbol } from '@angular/common';\r\nimport { ChangeDetectorRef } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { ViewChild } from '@angular/core';\r\nimport { otpModel } from 'app/shared/models/otp.model';\r\nimport { OtpVerifyComponent } from '../otp-verify/otp-verify.component';\r\nimport { MatDialog } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-cheque-withdrawal',\r\n  templateUrl: './cheque-withdrawal.component.html',\r\n  styleUrls: ['./cheque-withdrawal.component.scss']\r\n})\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class ChequeWithdrawalComponent implements OnInit {\r\n  // chequeWithdrawDto = new chequeWithdrawDto();\r\n  // chequeWithdrawDto : any = 'Cash Withdrawal';\r\n  chequewithdrawForm: FormGroup;\r\n  @Input() title: any;\r\n  operation: string;\r\n  ifQRvariable = false;\r\n  countryFormControl = new FormControl();\r\n  productCode = \"CQW\";\r\n  tokenOrigin = \"Kiosk\";\r\n  accountType = ['Savings', 'Current', 'Deposit'];\r\n  accountNum: string;\r\n  holderName = ['Jane smith', 'Micheal smith'];\r\n  defaultValue: Country = {\r\n    name: 'Deutschland',\r\n    alpha2Code: 'DE',\r\n    alpha3Code: 'DEU',\r\n    numericCode: '276',\r\n    callingCode: '+49'\r\n  };\r\n  chequeWithrwResponse: any;\r\n  phoneNumber: string;\r\n  accountBal: any;\r\n  errorStatus: any;\r\n  custAccountData: any;\r\n  countryValues: any;\r\n  accounttypeArray = [];\r\n  idList = [];\r\n  noList: any[];\r\n  accNum: any;\r\n  tokenObjects = new TokenObjects();\r\n  accNumber: any;\r\n  tokResponse: any;\r\n  tokenNum: any;\r\n  estimatedTime: any;\r\n  isedit: boolean = true;\r\n  transAmt: any;\r\n  balance: string;\r\n  enableContinue: boolean = true;\r\n  curr: string;\r\n  transAmount: string;\r\n  currencyImage: any = \"\";\r\n  custID: any;\r\n  qrData: any;\r\n  userName: string;\r\n  customerID: any;\r\n  showAccountNum : boolean = true;\r\n  showAccoutType : boolean = true;\r\n  custValidation: string;\r\n  accountNumber: string;\r\n  custmerID: any;\r\n  phonenum: any;\r\n  appointmentId:any;\r\n  oTpModel = new otpModel();\r\n  denomCodeArray: any[] = [\r\n    { key: 'count2000', value: 2000 },\r\n    { key: 'count500', value: 500 },\r\n    { key: 'count200', value: 200 },\r\n    { key: 'count100', value: 100 },\r\n    { key: 'count50', value: 50 },\r\n    { key: 'count20', value: 20 },\r\n    { key: 'count10', value: 10 },\r\n    { key: 'count1', value: 1 }\r\n\r\n  ];\r\n  totalAmount: any;\r\n  transamount: any;\r\n  a: any;\r\n  branchNameFromLogin: string;\r\n  branchName: string;\r\n  arrayAccountBranch: any;\r\n  branchData: any;\r\n  trasactionBranches: any;\r\n  branch: any;\r\n  hideDetails:boolean=false;\r\n  custNameFromLogin: string;\r\n  @ViewChild('cdForm') cdForm: NgForm;\r\n  // accountNoList: any[];\r\n  accountNoList = [];\r\n  selectedAccountInfo: any;\r\n  chequewithdrawValues: any;\r\n  chequewithdrawtype: any;\r\n  chequewithdrawform: any;\r\n  enableBtn: boolean = true;\r\n  enableBtn1: boolean = false;\r\n  accountNum1: any[];\r\n  filteredAccoun: any[];\r\n  accountDropdown: boolean = false;\r\n  flag1:boolean=false;\r\n  denomRequired: any;\r\n  qrBranchCode: any;\r\n  totalTransAmount: number;\r\n  chargeDetails: any;\r\n  cashData: any;\r\n  accountCurrency: any;\r\n  transBranch: string;\r\n\r\n  constructor(private router: Router,\r\n    private toast: ToastrComponent,\r\n    private formBuilder: FormBuilder,\r\n    private dialogService: DialogService,\r\n    private apiService: ApiService,private dialog: MatDialog,\r\n    private cdr:ChangeDetectorRef,\r\n    private ls: LocalStoreService, private snack: MatSnackBar, private changeDef: ChangeDetectorRef) { }\r\n  ngOnInit() {\r\n    this.phoneNumber = localStorage.getItem(\"phonenumFromLogin\");\r\n    this.appointmentId = this.ls.getItem(\"TransactionType\");\r\n    this.transBranch=localStorage.getItem(\"TRANSACTIONBRANCH\") ;\r\n    this.qrData = JSON.parse(JSON.parse(localStorage.getItem('scannerData')));\r\n    console.log(\"QRData\", this.qrData);\r\n    this.custValidation = localStorage.getItem(\"customerValidation\");\r\n    this.custNameFromLogin = localStorage.getItem(\"FromLogin\");\r\n    if(this.custValidation == \"New Customer\"){\r\n      this.showAccountNum = false;\r\n      this.showAccoutType = false;\r\n    }\r\n    if(this.custNameFromLogin!=null){\r\n      this.showAccountNum=false;\r\n    } \r\n    this.chequewithdrawForm = this.formBuilder.group({\r\n      transactionId: ['', [Validators.required]],\r\n      chequeNumber: ['', [Validators.required]],\r\n      customerId: ['', [Validators.required]],\r\n      accountNumber: ['', [Validators.required]],\r\n      accountType: ['', [Validators.required]],\r\n      holderName: ['', [Validators.required]],\r\n      accountCurrency: ['', [Validators.required]],\r\n      totalAmount: ['', Validators.required],\r\n      transactionCurrency: ['', [Validators.required]],\r\n      transactionAmount: ['', [Validators.required, Validators.min(.1)]],\r\n      accountBalance: [''],\r\n      productCode: ['CQW', [Validators.required]],\r\n      tokenOrigin: ['Kiosk', [Validators.required]],\r\n      totalChargeAmount:['', [Validators.required]],\r\n      totalTransactionAmount:['',[Validators.required]],\r\n\r\n      // audit\r\n      createdBy: ['', [Validators.required]],\r\n      createdTime: ['', [Validators.required]],\r\n      modifiedBy: ['', [Validators.required]],\r\n      modifiedTime: ['', [Validators.required]],\r\n      recordStatus: ['', [Validators.required]],\r\n      authStatus: ['', [Validators.required]],\r\n      version: ['', [Validators.required]],\r\n      accountBranch: ['', [Validators.required]],\r\n      transactionBranch:['', [Validators.required]]\r\n\r\n    })\r\n    console.log(this.chequewithdrawForm.value);\r\n\r\n    if (this.phoneNumber && this.custNameFromLogin==null && this.appointmentId==null) {\r\n      this.ifQRvariable = false;\r\n      this.gettingallTansactionDetails(this.phoneNumber);\r\n    }\r\n    // else {\r\n      if(this.qrData!=null){\r\n      this.ifQRvariable = true;\r\n      console.log(\"Account\", this.qrData.accountId);\r\n      this.chequewithdrawForm.controls.holderName.setValue(this.qrData.holderName);\r\n      this.chequewithdrawForm.controls.accountType.setValue(this.qrData.accountType);\r\n      this.chequewithdrawForm.controls.accountNumber.setValue(this.qrData.accountId);\r\n      this.getChargeDetails(this.qrData.accountId,'');\r\n      this.chequewithdrawForm.controls.transactionAmount.setValue(this.qrData.transactionAmount);\r\n      this.chequewithdrawForm.controls.accountCurrency.setValue(this.qrData.accountCurrency);\r\n      this.chequewithdrawForm.controls.transactionCurrency.setValue(this.qrData.transactionCurrency);\r\n      this.accountBal = this.qrData.accountBalance;\r\n      this.customerID = this.qrData.customerId;\r\n      this.currencyImage = 'currency-flag-' + this.qrData.accountCurrency.toLowerCase();\r\n      this.currencyImage = 'currency-flag-' + this.qrData.transactionCurrency.toLowerCase();\r\n      this.chequewithdrawForm.controls.transactionBranch.setValue(this.qrData.transactionBranch);\r\n      if(this.qrData.transactionBranch !=null && this.qrData.transactionBranch !=''){\r\n        this.chequewithdrawForm.controls.transactionBranch.setValue(this.qrData.transactionBranch);\r\n      }else{\r\n        this.chequewithdrawForm.controls.transactionBranch.setValue('Kasturi Nagar');\r\n      }\r\n      this.getAccountBranch();\r\n    }\r\n    this.getCountrynameValues();\r\n    this.getAccountBranch();\r\n    this.gettransactionBranch(\"account_branch\");\r\n    this.getBankInformation(\"KN\");\r\n    if(this.appointmentId.data.appointmentId){\r\n      this.cashWithdrawlData();\r\n    }\r\n  }\r\n  fetchByAccountNum(accNum){\r\n    this.chequewithdrawForm.controls.transactionAmount.reset();\r\n    this.chequewithdrawForm.controls.totalTransactionAmount.setValue(this.chequewithdrawForm.controls.totalChargeAmount.value);\r\n    this.chequewithdrawForm.controls.chequeNumber.reset();\r\n    console.log(\"Account Numebr\",accNum);\r\n    this.apiService.fetchByaccNum(accNum).subscribe((res: any) => {\r\n      console.log('Account Number Rsp', res);\r\n      this.getChargeDetails(accNum,'');\r\n      this.userName = res.accHolderName;\r\n      this.accountBal = res.accBalance;\r\n      this.custmerID = res.customerId;\r\n      this.accountNumber = res.accountId;\r\n      this.accountCurrency = res.accountCurrency;\r\n      this.curr = getCurrencySymbol(res.currency, \"narrow\");\r\n      this.chequewithdrawForm.controls.accountType.setValue(res.accountType);\r\n      this.chequewithdrawForm.controls.accountCurrency.setValue(res.currency);\r\n      this.chequewithdrawForm.controls.accountBranch.setValue(res.accountBranch);\r\n      this.chequewithdrawForm.controls.holderName.setValue(this.userName); \r\n      this.currencyImage = 'currency-flag-'+res.currency.toLowerCase();\r\n      this.currencyImage = 'currency-flag-'+res.currency.toLowerCase();\r\n      this.getCountrynameValues();\r\n      this.chequewithdrawForm.controls.transactionCurrency.setValue(res.currency);\r\n      this.custAmountBal(accNum);\r\n      this.chequewithdrawForm.controls.transactionBranch.setValue('Kasturi Nagar');\r\n      this.apiService.fetchByaccDeatilsoncustId(res.customerId).subscribe((resp: any) => {\r\n        this.phonenum = resp[0].phoneNumber;\r\n        localStorage.setItem('otpPhoneNum', this.phonenum);\r\n      }) \r\n  });\r\n\r\n}\r\ngetOTP(formData, type, cdForm){\r\n  this.chequewithdrawValues =formData;\r\n  this.chequewithdrawtype = type;\r\n  this.chequewithdrawform = cdForm;\r\n  this.oTpModel.source = 'customer';\r\n  this.oTpModel.source_key = 'mobile';\r\n  this.oTpModel.source_value = this.phonenum;\r\n\r\n  let amount= 50000;\r\n  let transamountwithoutcomma=this.chequewithdrawValues.transactionAmount.replace(/,/g, \"\");\r\n  console.log( transamountwithoutcomma);\r\n  if(transamountwithoutcomma > amount){\r\n    this.apiService.getOtp(this.oTpModel).subscribe(otpResp => {\r\n      if (otpResp) {\r\n        this.openDialogOTP(this.phonenum);\r\n        this.snack.open(\"An OTP has been sent to the Registered Mobile Number.\" , \"\", {\r\n          duration: 4000,\r\n          verticalPosition: 'top',\r\n          horizontalPosition: 'right'\r\n        });\r\n      }\r\n    })\r\n  }\r\n  else{\r\n    this.getOTPforSave(   this.chequewithdrawValues,this.chequewithdrawtype,\r\n      this.chequewithdrawform);  }\r\n}\r\nopenDialogOTP(numbr) {\r\n  const dialogRef = this.dialog.open(OtpVerifyComponent, {\r\n    data: { number: numbr, type: \"numbr\" },\r\n    disableClose: true,\r\n  });\r\n  dialogRef.afterClosed().subscribe(submit => {\r\n    if(submit){\r\n      this.getOTPforSave(   this.chequewithdrawValues,this.chequewithdrawtype,\r\n        this.chequewithdrawform);\r\n    }\r\n   });\r\n}\r\ngetOTPforSave(formData, type, cdForm){\r\n  formData.transactionBranch = this.transBranch;\r\n  let denominationData: any = {};\r\n  let denominationDataArray: any[] = [];\r\n  if(this.denomRequired == 'yes'){\r\n  for (let i = 0; i < this.denomCodeArray.length; i++) {\r\n    if (cdForm.value[this.denomCodeArray[i].key]) {\r\n      // denominationData.transactionId = this.cashdepositFor;\r\n      denominationData.denominationKey = this.denomCodeArray[i].value;\r\n      denominationData.denominationValue = +cdForm.value[this.denomCodeArray[i].key];\r\n      denominationData.currency = this.chequewithdrawForm.value.transactionCurrency;\r\n      // denominationData.amountAvailiable = 15200 - (cdForm.value[this.denomCodeArray[i].key] * this.denomCodeArray[i].value);\r\n      denominationDataArray.push(denominationData);\r\n      console.log(denominationDataArray)\r\n      denominationData = {};\r\n    }\r\n  }\r\n}\r\n  if(this.custValidation == \"New Customer\"){\r\n    console.log(\"customer\",this.custmerID);\r\n   this.accountNum = formData.accountNumber;\r\n   formData.customerId = this.custmerID?this.custmerID:0;\r\n   formData.accountType = formData.accountType;\r\n   formData.accountNumber = this.accountNumber;\r\n   formData.holderName = formData.holderName;\r\n   formData.accountCurrency = formData.accountCurrency;\r\n   formData.transactionCurrency = formData.transactionCurrency;\r\n   formData.transactionAmount = formData.transactionAmount.replace(/,/g, '');\r\n   formData.productCode = this.productCode;\r\n   formData.tokenOrigin = this.tokenOrigin;\r\n   formData.accountBalance = this.accountBal;\r\n   if(this.denomRequired == 'yes'){\r\n   formData.denomination = denominationDataArray;\r\n   }\r\n  }\r\n  formData.tokenBranch = \"KN\";\r\n  if(this.appointmentId && this.appointmentId.data){\r\n    formData.transactionId = this.appointmentId.data.transactionId;\r\n    formData.transactionStatus = this.appointmentId.data.transactionStatus;\r\n  }\r\n  formData.customerId = this.custmerID?this.custmerID:0;\r\n  formData.accountType = formData.accountType;\r\n  formData.accountNumber = this.accountNumber;\r\n  formData.holderName = formData.holderName;\r\n  formData.accountCurrency = formData.accountCurrency;\r\n  formData.transactionCurrency = formData.transactionCurrency;\r\n  formData.transactionAmount = formData.transactionAmount.replace(/,/g, '');\r\n  formData.productCode = this.productCode;\r\n  formData.tokenOrigin = this.tokenOrigin;\r\n  formData.accountBalance = this.accountBal;\r\n  this.apiService.saveofCashDeposit(formData).subscribe((resp) => {\r\n    console.log('Response Success', resp);\r\n    this.chequeWithrwResponse = resp;\r\n    this.tokenNum = this.chequeWithrwResponse.tokenNumber;\r\n    this.estimatedTime = this.chequeWithrwResponse.estimatedWaitTime;\r\n    localStorage.setItem(\"tokenNumer\", this.tokenNum);\r\n    localStorage.setItem(\"estimatedTiming\", this.estimatedTime);\r\n    this.enableContinue = false;\r\n    if (this.chequeWithrwResponse) {\r\n      this.dialogService.tokenGenerationDialog();\r\n    }\r\n  }); \r\n}\r\n  _keyPress(event: any) {\r\n    const pattern = /[0-9 a-z A-Z]/;\r\n    let inputChar = String.fromCharCode(event.charCode);\r\n    if (!pattern.test(inputChar)) {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n  gettransactionBranch(key: string) {\r\n    this.apiService.getTransactionBranch(key)\r\n      .subscribe(branches => {\r\n        console.log('branches :: ', branches);\r\n        this.trasactionBranches = branches;\r\n       \r\n      })\r\n  }\r\n  getAccountBranch() {\r\n    this.apiService.getBranchforKiosk()\r\n      .subscribe((data: any) => {\r\n        this.branchData = data;\r\n          console.log( this.branchData);\r\n          data.forEach((element,index)=>{\r\n            this.branch = data[index].branchName;\r\n            console.log(this.branch);\r\n            // this.chequewithdrawForm.controls.accountBranch.setValue(this.branch);\r\n         });      \r\n      });\r\n  }\r\n  getCountrynameValues() {\r\n    this.apiService.getCountryValues().subscribe((allCountryValues: any) => {\r\n      this.countryValues = allCountryValues;\r\n    });\r\n  }\r\n \r\n  onCountrySelected($event: Country): void {\r\n    console.log($event);\r\n  }\r\n  goToServiceScreens() {\r\n    if(this.appointmentId){\r\n    if(this.appointmentId.data.appointmentId){\r\n      this.router.navigateByUrl('/sessions/login');\r\n      localStorage.removeItem(\"FromLogin\")\r\n      localStorage.removeItem(\"TransactionType\")\r\n      localStorage.removeItem(\"customerId\")\r\n      localStorage.removeItem(\"phonenumFromLogin\")\r\n      localStorage.removeItem(\"customerValidation\")\r\n      localStorage.removeItem(\"otpPhoneNum\")\r\n      localStorage.removeItem(\"AccountBal\")\r\n      localStorage.removeItem(\"AccountNumber\")\r\n      localStorage.removeItem(\"ProductCode\")\r\n      localStorage.removeItem(\"tokenNumer\")\r\n      localStorage.removeItem(\"estimatedTiming\")\r\n      localStorage.removeItem(\"userId\")\r\n      localStorage.removeItem(\"scannerData\")\r\n      localStorage.removeItem(\"custholderName\")\r\n    }\r\n  }\r\n    else{\r\n      this.router.navigateByUrl('/others/services');\r\n    }\r\n  }\r\n  goToAuthenticate() {\r\n    this.dialogService.authenticationDialog();\r\n  }\r\n  gettingallTansactionDetails(phoneNumber) {\r\n    this.phoneNumber = localStorage.getItem(\"phonenumFromLogin\");\r\n    this.apiService.gettingTransactionDetails(this.phoneNumber).subscribe((allTransactionResp: any) => {\r\n      console.log(\"All Transaction Details\", allTransactionResp);\r\n      this.userName = (allTransactionResp.firstName ? allTransactionResp.firstName + ' ' : ' ') +\r\n        (allTransactionResp.middleName ? allTransactionResp.middleName + ' ' : ' ') +\r\n        (allTransactionResp.lastName ? allTransactionResp.lastName : ' ');\r\n      this.chequewithdrawForm.controls.holderName.setValue(this.userName);\r\n      this.custID = allTransactionResp.customerId;\r\n      // this.setBalance(allTransactionResp.custAccount);\r\n      this.custAccountData = allTransactionResp.custAccount;\r\n      this.accounttypeArray = [...this.custAccountData].filter(({ accountType }, index) =>\r\n        ![...this.custAccountData].map(obj => obj.accountType).includes(accountType, index + 1))\r\n        for(let j = 0; j < this.custAccountData.length; j++){\r\n          if(this.custAccountData[j].status == 'APPROVED'){\r\n            this.accountNoList.push(this.custAccountData[j]);  \r\n          }\r\n        }\r\n      if(this.custAccountData && this.accountNoList.length<=1){\r\n        this.accountDropdown=false;\r\n        this.hideDetails=true;\r\n        const accTyp = allTransactionResp.custAccount[0].accountType;\r\n        this.chequewithdrawForm.controls.accountType.setValue(accTyp);\r\n        this.custAccountNumber(this.accountNoList[0]);\r\n      }\r\n      else{\r\n        this.accountDropdown=true;\r\n        this.hideDetails=true;\r\n        const accTyp = allTransactionResp.custAccount[0].accountType;\r\n        this.chequewithdrawForm.controls.accountType.setValue(accTyp);\r\n        this.custAccountNumber(allTransactionResp.custAccount[0]);\r\n      }\r\n    });\r\n  }\r\n  getAccountType(event:any){\r\n    this.chequewithdrawForm.controls.transactionAmount.reset();\r\n    this.chequewithdrawForm.controls.totalTransactionAmount.setValue(this.chequewithdrawForm.controls.totalChargeAmount.value);\r\n    this.chequewithdrawForm.controls.chequeNumber.reset();\r\n    this.accountNoList=[];\r\n    console.log(event);\r\n    this.isedit=false;\r\n    this.accountNum1=[...this.custAccountData].filter((accounNum,index)=>{\r\n      return accounNum.accountType==event;\r\n    });console.log(this.accountNum1)\r\n    // this.accountNoList=this.accountNum1\r\n    // this.accountNoList=this.accountNum1.map((acccount)=>\r\n    // {\r\n    //   return acccount.accountId\r\n    // })\r\n    for(let i = 0; i < this.custAccountData.length; i++){\r\n      if(this.custAccountData[i].status == 'APPROVED' && this.custAccountData[i].accountType == event){\r\n        this.accountNoList.push(this.custAccountData[i].accountId);    \r\n      }\r\n    }\r\n    console.log(this.accountNoList);\r\n    if(this.accountNoList.length<=1){\r\n      this.flag1=false; \r\n      this.chequewithdrawForm.controls.accountNumber.setValue(this.accountNoList[0]);\r\n      this.getData(this.accountNoList[0])   \r\n    }\r\n    else{\r\n      this.getData(this.accountNoList[0])  \r\n      this.flag1=true;   \r\n    }\r\n    this.getChargeDetails(this.accountNoList[0],'');\r\n  }\r\n  getData(custNum){\r\n    this.hideDetails=true;\r\n    console.log(custNum)\r\n    let val=this.accountNum1.filter((value)=>{\r\n    return value.accountId==custNum}\r\n    )\r\n    console.log(val)\r\n    this.idList = [...this.custAccountData].filter(item => item.accountType === val[0].accountType);\r\n    this.chequewithdrawForm.controls.accountCurrency.setValue(val[0].accountCurrency);\r\n   this.chequewithdrawForm.controls.accountBranch.setValue(this.branch);\r\n   this.curr = getCurrencySymbol(val[0].accountCurrency, \"narrow\");\r\n   this.chequewithdrawForm.controls.transactionCurrency.setValue(val[0].accountCurrency);\r\n  \r\n   this.currencyImage = 'currency-flag-'+val[0].accountCurrency.toLowerCase();\r\n   console.log('data :: ',this.idList[0]);\r\n  this.accountBal = this.idList[0].amount;\r\n  console.log(this.accountBal);\r\n  localStorage.setItem(\"AccountBal\",this.accountBal);\r\n  // this.chequewithdrawForm.controls.accountNumber.setValue(this.idList[0].accountId);\r\n  this.custAmountBal(this.idList[0].accountId);\r\n  this.chequewithdrawForm.controls.accountNumber.setValue(val[0].accountId);\r\n  this.chequewithdrawForm.controls.accountBranch.setValue(val[0].accountBranch);\r\n  this.getChargeDetails(val[0].accountId,'')\r\n  }\r\n  custAccountNumber(custype) {\r\n    this.isedit = false;\r\n    this.idList = [...this.custAccountData].filter(item => item.accountType === custype.accountType);\r\n    // const defaultId = this.idList ? this.idList[0] : null;\r\n\r\n    this.accountNoList = [];\r\n    for(let i = 0; i < this.idList.length; i++){\r\n       if(this.idList[i].status == 'APPROVED'){\r\n         this.accountNoList.push(this.idList[i].accountId)    \r\n       }\r\n     }\r\n     console.log(this.accountNoList);\r\n     if(this.accountNoList.length<=1){\r\n      // this.cashwithdrawForm.controls.accountNumber.patchValue(this.accountNoList[0]);\r\n      this.flag1=false; \r\n      // this.getData(this.accountNoList[0]);\r\n      this.chequewithdrawForm.controls.accountNumber.setValue(this.accountNoList[0]);\r\n    }\r\n    else{\r\n      this.chequewithdrawForm.controls.accountNumber.setValue(this.accountNoList[0]);\r\n      this.flag1=true;   \r\n    }\r\n    \r\n    // this.chequewithdrawForm.controls.accountNumber.setValue(defaultId);\r\n    this.chequewithdrawForm.controls.accountCurrency.setValue(custype.accountCurrency);\r\n    this.chequewithdrawForm.controls.accountBranch.setValue(this.branch);\r\n    //this.chequewithdrawForm.controls.transactionAmount.setValue(custype.amount);\r\n    this.curr = getCurrencySymbol(custype.accountCurrency, \"narrow\");\r\n    this.chequewithdrawForm.controls.transactionCurrency.setValue(custype.accountCurrency);\r\n    // this.chequewithdrawForm.controls.accountType.setValue(defaultId);\r\n\r\n    this.currencyImage = 'currency-flag-' + custype.accountCurrency.toLowerCase();\r\n    // this.accountBal = this.idList[0].amount;\r\n\r\n    console.log(this.accountBal);\r\n    localStorage.setItem(\"AccountBal\", this.accountBal);\r\n    // this.chequewithdrawForm.controls.accountNumber.setValue(this.idList[0].accountId);\r\n    this.custAmountBal(this.accountNoList[0]);\r\n    this.chequewithdrawForm.controls.accountBranch.setValue(custype.accountBranch);\r\n    this.getChargeDetails(this.accountNoList[0],custype.amount);\r\n  }\r\n  custAmountBal(custNum) {\r\n    console.log(custNum);\r\n    var account = this.idList.filter(function (record) {\r\n      if (record.accountId == custNum) {\r\n        return record;\r\n      }\r\n    });\r\n    this.accNum = account[0].accountId;\r\n    this.accountBal = account[0].amount;\r\n    this.selectedAccountInfo = account[0];\r\n  }\r\n  setBalance(accountBalance, index = 0) {\r\n    this.accountBal = accountBalance[index].currentBalance ? accountBalance[index].currentBalance : null;\r\n  }\r\n  onSaveofChequeWithdraw(form, type, cdForm) {\r\n    form.transactionBranch = this.transBranch;\r\n    let denominationData: any = {};\r\n    let denominationDataArray: any[] = [];\r\n    if(this.qrData){\r\n      if(this.qrData.transactionBranch){\r\n        this.apiService.fetchBranchInfoByBranchName(this.qrData.transactionBranch).subscribe(response=>{\r\n          this.qrBranchCode=response;\r\n          \r\n        })\r\n      }\r\n    }\r\n    if(this.denomRequired == 'yes'){\r\n    for (let i = 0; i < this.denomCodeArray.length; i++) {\r\n      if (cdForm.value[this.denomCodeArray[i].key]) {\r\n        // denominationData.transactionId = this.cashdepositFor;\r\n        denominationData.denominationKey = this.denomCodeArray[i].value;\r\n        denominationData.denominationValue = +cdForm.value[this.denomCodeArray[i].key];\r\n        denominationData.currency = this.chequewithdrawForm.value.transactionCurrency;\r\n        // denominationData.amountAvailiable = 15200 - (cdForm.value[this.denomCodeArray[i].key] * this.denomCodeArray[i].value);\r\n        denominationDataArray.push(denominationData);\r\n        console.log(denominationDataArray)\r\n        denominationData = {};\r\n      }\r\n    }\r\n  }\r\n    form.tokenBranch = \"KN\";\r\n    console.log(\"onSaveofChequeWithdraw\", form);\r\n    if (!this.ifQRvariable) {\r\n      this.accountNum = JSON.stringify( this.selectedAccountInfo.accountId);\r\n      localStorage.setItem(\"AccountNumber\", this.accountNum);\r\n      localStorage.setItem(\"ProductCode\", this.productCode);\r\n      form.customerId = this.custID;\r\n      form.transactionCurrency = form.transactionCurrency;\r\n      form.transactionAmount = form.transactionAmount.replace(/,/g, '');\r\n      form.accountNumber =  this.selectedAccountInfo.accountId;\r\n      form.accountType = form.accountType;\r\n      form.productCode = this.productCode;\r\n      form.tokenOrigin = this.tokenOrigin;\r\n      form.accountBalance = this.accountBal;\r\n      if(this.denomRequired == 'yes'){\r\n      form.denomination = denominationDataArray;\r\n      }\r\n    }\r\n    else {\r\n      form.customerId = this.custID;\r\n      form.accountType = form.accountType;\r\n      form.accountNumber =  form.accountNumber\r\n      form.holderName = form.holderName;\r\n      form.accountCurrency = form.accountCurrency;\r\n      form.transactionCurrency = form.transactionCurrency;\r\n      form.transactionAmount = form.transactionAmount;\r\n      form.productCode = this.productCode;\r\n      form.tokenOrigin = this.tokenOrigin;\r\n      form.accountBalance = this.accountBal;\r\n      if(this.denomRequired == 'yes'){\r\n      form.denomination = denominationDataArray;\r\n      }\r\n    }\r\n    if(this.qrData){\r\n      if(this.qrData.transactionBranch){\r\n        form.tokenBranch = this.qrBranchCode.transactionBranch;\r\n      }\r\n    }\r\n    console.log(\"this.appointmentId::\",this.appointmentId)\r\n    if(this.appointmentId && this.appointmentId.data){\r\n      form.transactionId = this.appointmentId.data.transactionId;\r\n      form.transactionStatus = this.appointmentId.data.transactionStatus;\r\n    }\r\n\r\n\r\n    console.log(form.transactionId,form.transactionStatus);\r\n\r\n    form.totalAmount = form.totalAmount.replace(/,/g, '');\r\n\r\n    this.apiService.saveofCashDeposit(form).subscribe((resp) => {\r\n      console.log('Response Success', resp);\r\n      this.chequeWithrwResponse = resp;\r\n      this.tokenNum = this.chequeWithrwResponse.tokenNumber;\r\n      this.estimatedTime = this.chequeWithrwResponse.estimatedWaitTime;\r\n      localStorage.setItem(\"tokenNumer\", this.tokenNum);\r\n      localStorage.setItem(\"estimatedTiming\", this.estimatedTime);\r\n      this.enableContinue = false;\r\n      if (this.chequeWithrwResponse) {\r\n        this.dialogService.tokenGenerationDialog();\r\n      }\r\n    });\r\n\r\n\r\n  }\r\n  omit_number(event) {\r\n    var key;\r\n    key = event.charCode;\r\n    return ((key > 47 && key < 58));\r\n  }\r\n  totalAmountValue(cdForm) {\r\n    this.a = this.chequewithdrawForm.value.transactionAmount;\r\n    this.a = this.a.replace(/\\,/g, ''); // 1125, but a string, so convert it to number\r\n    this.a = parseInt(this.a, 10);\r\n\r\n\r\n    this.chequewithdrawForm.value.totalAmount =\r\n      ((cdForm.value.count2000 ? cdForm.value.count2000 * 2000 : 0) +\r\n        (cdForm.value.count500 ? cdForm.value.count500 * 500 : 0) +\r\n        (cdForm.value.count200 ? cdForm.value.count200 * 200 : 0) +\r\n        (cdForm.value.count100 ? cdForm.value.count100 * 100 : 0) +\r\n        (cdForm.value.count50 ? cdForm.value.count50 * 50 : 0) +\r\n        (cdForm.value.count20 ? cdForm.value.count20 * 20 : 0) +\r\n        (cdForm.value.count10 ? cdForm.value.count10 * 10 : 0) +\r\n        (cdForm.value.count1 ? cdForm.value.count1 * 1 : 0)\r\n      );\r\n    this.chequewithdrawForm.value.totalAmount = this.chequewithdrawForm.value.totalAmount\r\n    console.log(this.chequewithdrawForm.value.totalAmount)\r\n    console.log(this.chequewithdrawForm.value.transactionAmount);\r\n    this.transamount = this.chequewithdrawForm.value.transactionAmount;\r\n    this.totalAmount = this.chequewithdrawForm.value.totalAmount.toLocaleString(\"en-US\");\r\n    if(this.transamount != this.totalAmount){\r\n      this.enableBtn = false;\r\n    }\r\n    else{\r\n      this.enableBtn = true;\r\n    }\r\n\r\n    if((this.transamount > this.totalAmount) || (this.transamount < this.totalAmount)){\r\n      this.enableBtn1 = true;\r\n    }\r\n    else{\r\n      this.enableBtn1 = false;\r\n    }\r\n    this.chequewithdrawForm.controls.totalAmount.setValue(this.chequewithdrawForm.value.totalAmount);\r\n\r\n  }\r\n  OnInput(event: any) {\r\n    this.transAmt = event.target.value;\r\n    console.log(event.target.value);\r\n    this.totalAmount = 0;\r\n    // comma separator using changeDetector\r\n    const savedInput = this.transAmount;\r\n    // this.transAmount = '';\r\n    // this.changeDef.detectChanges();\r\n\r\n\r\n    let lastCharIsPoint = false;\r\n    if (savedInput.charAt(savedInput.length - 1) === '.') {\r\n      lastCharIsPoint = true;\r\n    }\r\n    const num = savedInput.replace(/[^0-9.]/g, '');\r\n\r\n    this.transAmt = Number(num)||'';\r\n    this.transAmount = this.transAmt.toLocaleString('en-IN');\r\n    if (lastCharIsPoint) {\r\n      this.transAmount = this.transAmount.concat('.');\r\n    }\r\n    this.changeDef.detectChanges();\r\n\r\n    this.balance = localStorage.getItem(\"AccountBal\");\r\n    if (parseFloat(this.balance) < parseFloat(this.transAmt)) {\r\n      console.log(\"Bigger\")\r\n      this.snack.open(`Transaction Amount should not exceed than Account Balance`, 'OK', {\r\n        duration: 2000,\r\n        verticalPosition: 'top',\r\n        horizontalPosition: 'right'\r\n      });\r\n      this.enableContinue = false;\r\n    }\r\n    else {\r\n      this.enableContinue = true;\r\n    }\r\n    this.totalTransAmount=Number(this.transAmt) + Number(this.chargeDetails?this.chargeDetails[0].amount:'');\r\n    this.chequewithdrawForm.controls.totalTransactionAmount.setValue(this.totalTransAmount);\r\n    this.cdr.markForCheck();\r\n    this.cdr.detectChanges();\r\n  }\r\n\r\n  addCurrencyImage(currency) {\r\n    return currency.toLowerCase();\r\n  }\r\n\r\n  onCountryChange(country) {\r\n    let currency = country.currencyCode;\r\n    this.currencyImage = 'currency-flag-' + currency.toLowerCase();\r\n  }\r\n\r\n  accountCurrencyImage(accountCurrency) {\r\n    return accountCurrency ? 'currency-flag-' + accountCurrency.toLowerCase() : '';\r\n  }\r\n\r\n\r\n  clicked(event) {\r\n    console.log(event);\r\n  }\r\n  getBankInformation(branchCode:any){\r\n    this.apiService.fetchBankInfoByBranchCode(branchCode).subscribe(resp => {\r\n      console.log(resp)\r\n      this.denomRequired = resp.denomRequired\r\n      if(resp.denomRequired == 'yes'){\r\n        this.enableBtn = false;\r\n        this.enableBtn1 = false;\r\n       }\r\n      \r\n    })\r\n  }\r\n\r\nformatAmount(amount) {\r\n  if(amount){\r\n    return amount && amount.toString().split('.')[0].length > 3 ? amount.toString().substring(0,amount.toString().split('.')[0].length-3).replace(/\\B(?=(\\d{2})+(?!\\d))/g, \",\") + \",\" + amount.toString().substring(amount.toString().split('.')[0].length-3): amount.toString();\r\n   }\r\n  }\r\n  cashWithdrawlData(){\r\n    this.apiService.getAppointmentId(this.appointmentId.data.appointmentId).subscribe((resp : any)=> {\r\n      console.log(resp);\r\n      this.cashData=resp.data;\r\n      this.custID=resp.data.customerId;\r\n      this.ifQRvariable = true;\r\n      this.chequewithdrawForm.controls.accountType.setValue(resp.data.accountType);\r\n      this.chequewithdrawForm.controls.accountBranch.setValue(resp.data.accountBranch);\r\n      this.chequewithdrawForm.controls.accountNumber.setValue(resp.data.accountNumber);\r\n      this.chequewithdrawForm.controls.chequeNumber.setValue(resp.data.chequeNumber);\r\n      this.getChargeDetails(resp.data.accountNumber,resp.data.transactionAmount);\r\n      this.chequewithdrawForm.controls.accountCurrency.setValue(resp.data.accountCurrency);\r\n      this.chequewithdrawForm.controls.transactionCurrency.setValue(resp.data.transactionCurrency);\r\n      this.chequewithdrawForm.controls.transactionAmount.setValue(resp.data.transactionAmount);\r\n    \r\n      this.currencyImage = 'currency-flag-'+resp.data.transactionCurrency.toLowerCase();\r\n      this.currencyImage = 'currency-flag-'+resp.data.accountCurrency.toLowerCase();\r\n  \r\n  \r\n    });\r\n  }\r\n  getChargeDetails(accountId,amount){\r\n    this.apiService.fetchChargeDetails(accountId).subscribe(resp => {\r\n  console.log(resp);\r\n  this.chargeDetails=resp;\r\n  this.chequewithdrawForm.controls.totalChargeAmount.setValue(this.chargeDetails?this.chargeDetails[0].amount:'');\r\n    });\r\n    if(this.cashData){\r\n    setTimeout(() => {\r\n      this.totalTransAmount=Number(this.cashData.transactionAmount) + Number(this.chargeDetails?this.chargeDetails[0].amount:'');\r\n      this.chequewithdrawForm.controls.totalTransactionAmount.setValue(this.totalTransAmount);\r\n    }, 1000);\r\n    this.cdr.markForCheck();\r\n    this.cdr.detectChanges();\r\n  }\r\n  else{\r\n    console.log(this.chargeDetails)\r\n    amount=0;\r\n    console.log(amount);\r\n    setTimeout(() => {\r\n      this.totalTransAmount=Number(amount) + Number(this.chargeDetails?this.chargeDetails[0].amount:'');\r\n      console.log(this.totalTransAmount);\r\n      this.chequewithdrawForm.controls.totalTransactionAmount.setValue(this.totalTransAmount);\r\n    }, 1000);\r\n    this.cdr.markForCheck();\r\n    this.cdr.detectChanges();\r\n  }\r\n\r\n    // console.log(this.totalTransAmount);\r\n  \r\n  }\r\n\r\n\r\n}","<div class=\"fullcard\">\r\n    <div fxLayout=\"row\">\r\n        <div fxFlex=\"chequewithdrawForm.get('transactionAmount').value > 0? 70% : 100%\">\r\n            <h6 class=\"h1\"><span style=\"color:grey;padding-right: 4px;\">Services</span> <b>></b> <span style=\"padding-left: 4px;\"><b>Cheque Withdrawal</b></span></h6>\r\n            <mat-card class=\"chequecard topView\">\r\n                <mat-card-title style=\"padding: 2%;\">\r\n                    <div fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n                        <div>\r\n                            <mat-icon  *ngIf=\"phoneNumber\" class=\"backIcon\" (click)=\"goToServiceScreens()\">keyboard_backspace</mat-icon>\r\n                        </div>&nbsp;&nbsp;\r\n                        <div class=\"card-title\">Cheque Withdrawal</div>\r\n                    </div>\r\n                </mat-card-title>\r\n                <mat-card-content>\r\n                    <div class=\"full-width\" style=\"padding: 0% 0% 3% 2%;\">\r\n                        <form [formGroup]=\"chequewithdrawForm\">\r\n                            <div fxLayout=\"column\" fxLayoutGap=\"3%\" fxLayoutAlign=\"space-between none\">\r\n                                <div>\r\n                                    <div fxLayout=\"row wrap\" class=\"flex-container stretch\">\r\n                                        <ng-container>\r\n                                            <div fxFlex=\"25%\" fxFlex.xs=\"100%\" *ngIf=\"showAccountNum\" >\r\n                                                <mat-hint class=\"totalAmount\">Account Type*</mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                     <input matInput type=\"text\" *ngIf=\"phoneNumber && !accountDropdown\" [readonly]=\"true\" class=\"full-width\" formControlName=\"accountType\" >\r\n                                                     <mat-select *ngIf=\"phoneNumber && accountDropdown\" formControlName=\"accountType\" (selectionChange)=\"getAccountType($event.value)\"\r\n                                                        style=\"background-color: #f9fafb;\"\r\n                                                        placeholder=\"Select Account Type\">\r\n                                                        <mat-option *ngFor=\"let type of accounttypeArray \"\r\n                                                            \r\n                                                            [value]=\"type.accountType\">{{type.accountType}}</mat-option>\r\n                                                    </mat-select>\r\n                                                    <!-- <mat-select  *ngIf=\"phoneNumber  && !accountDropdown\" formControlName=\"accountType\" style=\"background-color: #f9fafb;\"  (selectionChange)=\"getAccountType($event.value)\" placeholder=\"Select Account Type\">\r\n                                                        <mat-option *ngFor=\"let type of accounttypeArray \"  (click)=\"custAccountNumber(type)\"  [value]=\"type.accountType\">{{type.accountType}}</mat-option>\r\n                                                    </mat-select> -->\r\n                                                    <!-- <input matInput type=\"text\"  [readonly]=\"true\" class=\"full-width\" formControlName=\"accountType\" > -->\r\n\r\n                                                </mat-card>\r\n                                            </div>\r\n                                            <div fxFlex=\"25%\" fxFlex.xs=\"100%\" *ngIf=\"!showAccountNum\" >\r\n                                                <mat-hint class=\"totalAmount\">Account Number*</mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <input matInput type=\"text\"  \r\n                                                        class=\"full-width\" formControlName=\"accountNumber\"\r\n                                                        (change)=\"fetchByAccountNum(chequewithdrawForm.get('accountNumber').value)\">\r\n                                                </mat-card>\r\n                                                    <!-- <mat-hint class=\"totalAmount\" *ngIf=\"!phoneNumber\" >Account Balance :{{curr }} {{accountBal | number: '2.' }}</mat-hint> -->\r\n                                                    <mat-hint class=\"totalAmount\" *ngIf=\"!showAccountNum\" >Account Balance\r\n                                                        : {{curr }}{{formatAmount(accountBal)}} </mat-hint>\r\n                                                    <br>\r\n                                                    <!-- <mat-hint  class=\"totalAmount\" *ngIf=\"!phoneNumber\"  [readonly]=\"true\"  formControlName=\"holderName\">Holder Name :{{userName}}</mat-hint> -->\r\n                                                    <mat-hint class=\"totalAmount\" *ngIf=\"!showAccountNum\" [readonly]=\"true\">\r\n                                                        Holder Name : {{userName}}</mat-hint>\r\n                                            </div>\r\n                                            <div fxFlex=\"25%\" fxFlex.xs=\"100%\" *ngIf=\"showAccountNum\">\r\n                                                <mat-hint class=\"totalAmount\">Account Number*</mat-hint>\r\n                                                <mat-card class=\"inputCard\" >\r\n                                                    <!-- <input matInput type=\"text\" *ngIf=\"!phoneNumber\"  [readonly]=\"true\" class=\"full-width\" formControlName=\"accountNumber\" > -->\r\n                                                    <input matInput type=\"text\" *ngIf=\"!flag1\"  [readonly]=\"true\" class=\"full-width\" formControlName=\"accountNumber\" >\r\n                                                    <!-- <mat-select *ngIf=\"phoneNumber\"  formControlName=\"accountNumber\" style=\"background-color: #f9fafb;\" > -->\r\n                                                        <mat-select *ngIf=\"flag1\" (selectionChange)=\"fetchByAccountNum($event.value)\" formControlName=\"accountNumber\" style=\"background-color: #f9fafb;\" >\r\n                                                        \r\n                                                            <mat-option>Select</mat-option>\r\n                                                            <mat-option  *ngFor=\"let id of accountNoList \"  [value]=\"id\">{{id}}</mat-option>\r\n                                                        \r\n                                                    </mat-select>\r\n                                                </mat-card>\r\n                                                <!-- <mat-hint class=\"totalAmount\" *ngIf=\"!phoneNumber\"  >Account Balance :{{curr }} {{accountBal | number: '2.' }}</mat-hint> -->\r\n                                                <mat-hint class=\"totalAmount\" *ngIf=\"hideDetails\" >Account Balance :{{curr }} {{formatAmount(accountBal)}}</mat-hint><br>\r\n                                                <mat-hint  class=\"totalAmount\"  *ngIf=\"hideDetails\" [readonly]=\"true\"  formControlName=\"holderName\">Holder Name :{{userName}}</mat-hint>\r\n                                            </div>\r\n                                            <div fxFlex=\"25%\" fxFlex.xs=\"100%\" *ngIf=\"!showAccountNum\" >\r\n                                                <mat-hint class=\"totalAmount\">Account Type*</mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <input matInput type=\"text\"  [readonly]=\"true\" \r\n                                                        class=\"full-width\" formControlName=\"accountType\">\r\n                                    \r\n                                                </mat-card>\r\n                                            </div>\r\n                                            <div fxFlex=\"25%\" fxFlex.xs=\"100%\">\r\n                                                <mat-hint class=\"accountBranch\">Account Branch*</mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <input matInput *ngIf=\"!phoneNumber\" type=\"text\"\r\n                                                    [readonly]=\"true\" class=\"full-width\"\r\n                                                    formControlName=\"accountBranch\">\r\n\r\n                                                <input matInput *ngIf=\"phoneNumber\" type=\"text\"\r\n                                                    [readonly]=\"true\" class=\"full-width\"\r\n                                                    formControlName=\"accountBranch\">\r\n                                                </mat-card>\r\n                                                <mat-error\r\n                                                    *ngIf=\"chequewithdrawForm.get('accountBranch').touched && !chequewithdrawForm.get('accountBranch').valid\">\r\n                                                    Account Branch is Required!\r\n                                                </mat-error>\r\n                                            </div>\r\n                                            <div fxFlex=\"25%\" fxFlex.xs=\"100%\">\r\n                                                <mat-hint class=\"totalAmount\">Account Currency*</mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <div fxLayout=\"row wrap\" class=\"full-width\">\r\n                                                        <div fxFlex=\"25%\">\r\n                                                            <div *ngIf=\"ifQRvariable\"\r\n                                                            class=\"currency-flag {{isedit?accountCurrencyImage(chequewithdrawForm.controls['accountCurrency'].value):currencyImage}}\"></div>\r\n                                                        <div *ngIf=\"!ifQRvariable\"\r\n                                                            class=\"currency-flag {{!isedit?accountCurrencyImage(chequewithdrawForm.controls['accountCurrency'].value):currencyImage}}\">\r\n                                                        </div>\r\n                                                        </div>\r\n                                                        <div fxFlex=\"75%\">\r\n                                                            <input matInput type=\"text\"  *ngIf=\"!phoneNumber\" [readonly]=\"true\" class=\"full-width\" style=\"font-size:110%\" formControlName=\"accountCurrency\">\r\n                                                            <input matInput type=\"text\"  *ngIf=\"phoneNumber\" [readonly]=\"true\" class=\"full-width\" style=\"font-size:110%\" formControlName=\"accountCurrency\">\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </mat-card>\r\n                                            </div>\r\n                                        </ng-container>\r\n                                    </div>\r\n                                </div>\r\n                                <div>\r\n                                    <div fxLayout=\"row wrap\" class=\"flex-container stretch\">\r\n                                        <ng-container>\r\n                                           \r\n                                            <div fxFlex=\"25%\" fxFlex.xs=\"100%\" *ngIf=\"showAccountNum\">\r\n                                                <mat-hint class=\"totalAmount\">Transaction Currency* </mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <div fxLayout=\"row wrap\" class=\"full-width\">\r\n                                                        <div fxFlex=\"30%\">\r\n                                                            <div class=\"currency-flag {{currencyImage}}\"></div>\r\n                                                        </div>\r\n                                                        <div fxFlex=\"70%\">\r\n                                                            <input matInput type=\"text\"  *ngIf=\"!phoneNumber\" [readonly]=\"true\" class=\"full-width\" formControlName=\"transactionCurrency\">\r\n                                                            <mat-select  *ngIf=\"phoneNumber\" formControlName=\"transactionCurrency\" placeholder=\"Select Transaction Currency\" id=\"testSelect\" style=\"background-color: #f9fafb;\" [disabled]=\"isedit\">\r\n                                                                <mat-option *ngFor=\"let country of countryValues; let i = index\" style=\"font-size:110%\" (click)=\"onCountryChange(country)\" [value]=\"country.currencyCode\">\r\n                                                                    <div fxLayout=\"row wrap\" class=\"full-width\">\r\n                                                                        <div fxFlex=\"15%\">{{country.currencyCode}}</div>\r\n                                                                        <div fxFlex=\"85%\">\r\n                                                                            <div class=\"currency-flag currency-flag-{{addCurrencyImage(country.currencyCode)}} alignImage\">\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </mat-option>\r\n                                                            </mat-select>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </mat-card>\r\n                                            </div>\r\n                                            <div fxFlex=\"25%\" fxFlex.xs=\"100%\" *ngIf=\"!showAccountNum\">\r\n                                                <mat-hint class=\"totalAmount\">Transaction Currency* </mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <div fxLayout=\"row wrap\" class=\"full-width\">\r\n                                                        <div fxFlex=\"25%\">\r\n                                                            <div class=\"currency-flag {{currencyImage}}\"></div>\r\n                                                        </div>\r\n                                                        <div fxFlex=\"75%\">\r\n                                                            <mat-select formControlName=\"transactionCurrency\"\r\n                                                                placeholder=\"Select Transaction Currency\"\r\n                                                                id=\"testSelect\" style=\"background-color: #f9fafb;\"\r\n                                                                >\r\n                                                                <mat-option\r\n                                                                    *ngFor=\"let country of countryValues; let i = index\"\r\n                                                                    (click)=\"onCountryChange(country)\" style=\"font-size:110%\"\r\n                                                                    [value]=\"country.currencyCode\">\r\n                                                                    <div fxLayout=\"row wrap\" class=\"full-width\">\r\n                                                                        <div fxFlex=\"15%\">{{country.currencyCode}}</div>\r\n                                                                        <div fxFlex=\"85%\">\r\n                                                                            <div\r\n                                                                                class=\"currency-flag currency-flag-{{addCurrencyImage(country.currencyCode)}} alignImage\">\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </mat-option>\r\n                                                            </mat-select>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </mat-card>\r\n                                            </div>\r\n                                            <div fxFlex=\"25%\" fxFlex.xs=\"100%\" *ngIf=\"showAccountNum\">\r\n                                                <mat-hint class=\"totalAmount\">Transaction Amount*</mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <input matInput type=\"text\"  *ngIf=\"!phoneNumber\" [readonly]=\"true\" class=\"full-width\" formControlName=\"transactionAmount\">\r\n                                                    <input matInput  class=\"full-width\" *ngIf=\"phoneNumber\" #myRef [(ngModel)]= \"transAmount\"  formControlName=\"transactionAmount\" [value]= \"transAmt | number: '1.'\" [readonly]=\"isedit\" \r\n                                                    (keyup)=\"OnInput($event)\" (focus)=\"clicked($event)\" >\r\n                                                </mat-card>\r\n                                                <mat-error *ngIf=\"chequewithdrawForm.get('transactionAmount').errors?.min\">\r\n                                                    Amount must be greater than zero\r\n                                                   </mat-error> \r\n                                            </div>\r\n                                            <div fxFlex=\"25%\" fxFlex.xs=\"100%\" *ngIf=\"!showAccountNum\">\r\n                                                <mat-hint class=\"totalAmount\">Transaction Amount*</mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <input matInput class=\"full-width\" #myRef\r\n                                                        [(ngModel)]=\"transAmount\" formControlName=\"transactionAmount\"\r\n                                                        [value]=\"transAmt | number: '1.'\" (keyup)=\"OnInput($event)\"\r\n                                                        (focus)=\"clicked($event)\" >\r\n                                                </mat-card>\r\n                                                <mat-error *ngIf=\"chequewithdrawForm.get('transactionAmount').errors?.min\">\r\n                                                    Amount must be greater than zero\r\n                                                </mat-error>\r\n                                            </div>\r\n                                            <div fxFlex=\"25%\" fxFlex.xs=\"100%\">\r\n                                                <mat-hint class=\"totalAmount\">Cheque Number*</mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                        <!-- <mat-select formControlName=\"holderName\" style=\"background-color: #f9fafb;\" >\r\n                                                            <mat-option *ngFor=\"let i of holderName\" [value]=\"i\">{{i}}</mat-option>\r\n                                                    </mat-select> -->\r\n                                                    <input matInput type=\"text\" *ngIf=\"!phoneNumber\" maxlength=\"6\" (keypress)=\"omit_number($event)\" class=\"full-width\" formControlName=\"chequeNumber\" >\r\n                                                    <input matInput type=\"text\" *ngIf=\"phoneNumber\" maxlength=\"6\" (keypress)=\"omit_number($event)\"  class=\"full-width\" formControlName=\"chequeNumber\" >\r\n\r\n                                                </mat-card>\r\n                                                <mat-error *ngIf=\"chequewithdrawForm.get('chequeNumber').touched && !chequewithdrawForm.get('chequeNumber').valid\">\r\n                                                    Cheque Number is Required!\r\n                                                   </mat-error>\r\n                                            </div>\r\n                                            <div fxFlex=\"25%\" fxFlex.xs=\"100%\">\r\n                                                <mat-hint class=\"totalAmount\">Total Charge Amount*</mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <input matInput class=\"full-width\" readonly formControlName=\"totalChargeAmount\">\r\n                                                </mat-card>\r\n\r\n                                            </div>\r\n                                            <div fxFlex=\"25%\" fxFlex.xs=\"100%\">\r\n                                                <mat-hint class=\"totalAmount\">Total Transaction Amount*</mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <input matInput type=\"text\" readonly onlyNumber formControlName=\"totalTransactionAmount\">\r\n\r\n                                                </mat-card>\r\n\r\n                                            </div>\r\n                                            <div class=\"tooltip\">\r\n                                                <img width=\"80%\"\r\n                                            [src]=\"'assets/images/info.svg'\"/>\r\n                                                <div class=\"tooltiptext\">\r\n                                                    <p class=\"totalAmount textcolor\" style=\"margin-top:10px; margin-bottom:6px\">Transaction Amount:{{chequewithdrawForm.get('transactionAmount').value}} </p>\r\n                                                    <p class=\"totalAmount textcolor\">Total Charge Amount:{{chequewithdrawForm.get('totalChargeAmount').value}} </p>\r\n                                                    <hr/>\r\n                                                    <p class=\"totalAmount textcolor\" style=\"margin-right:10px ;\">Total Transaction Amount:{{chequewithdrawForm.get('totalTransactionAmount').value}} </p>\r\n                                                </div>\r\n                                            </div>\r\n                                        </ng-container>\r\n                                    </div>\r\n                                </div>\r\n                           \r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </mat-card-content>\r\n            </mat-card>\r\n        </div>\r\n\r\n\r\n        <div *ngIf=\"(denomRequired == 'yes') && (chequewithdrawForm.get('transactionAmount').value > 0 || transAmt > 0)\" fxFlex=\"30%\">\r\n            <form #cdForm=\"ngForm\">\r\n        <mat-card class=\"border-align\" >  \r\n    <div fxLayout=\"row\" class=\"pH10 full-width\">\r\n        \r\n    <h4 class=\"title-Font\">Denomination</h4>\r\n    </div>\r\n    <div  class=\"pH10 full-width\" id=\"denominationDiv\">\r\n    <div class=\"paddingclass\" \r\n    fxLayoutAlign=\"center center\" *ngIf=\"chequewithdrawForm.value.transactionCurrency == 'INR'\">\r\n    <div fxFlex=\"20%\">\r\n    <p class=\"quantityClass text-small\">2000</p>\r\n    </div>\r\n    <div fxFlex=\"10%\">\r\n    <p class=\"operationTypeClass text-small\">x</p>\r\n    </div>\r\n    <div fxFlex=\"70%\">\r\n    <mat-card class=\"inputCard\">\r\n       <div>\r\n           <input class=\"full-width inputClass\" type=\"text\"\r\n               (keyup)=\"totalAmountValue(cdForm)\" (keypress)=\"omit_number($event)\"\r\n               matInput name=\"count2000\" ngModel #count2000>\r\n       </div>\r\n    </mat-card>\r\n    <div class=\"pl10\">\r\n       <mat-error *ngIf=\"denominationlimit && count2000.value > denominationLimit[2000]\">\r\n           Please enter <= {{denominationLimit[2000]}}\r\n       </mat-error>\r\n    </div>\r\n    </div>\r\n    </div>\r\n    <div  class=\"paddingclass\" \r\n    fxLayoutAlign=\"start center\" *ngIf=\"chequewithdrawForm.value.transactionCurrency == 'INR' || chequewithdrawForm.value.transactionCurrency == 'USD' || chequewithdrawForm.value.transactionCurrency == 'AED'\">\r\n    <div fxFlex=\"20%\">\r\n    <p class=\"quantityClass text-small\">500</p>\r\n    </div>\r\n    <div fxFlex=\"10%\">\r\n    <p class=\"operationTypeClass text-small\">x</p>\r\n    </div>\r\n    <div fxFlex=\"70%\">\r\n    <mat-card class=\"inputCard\">\r\n       <input class=\"full-width inputClass\" type=\"text\"\r\n           (keyup)=\"totalAmountValue(cdForm)\" (keypress)=\"omit_number($event)\"\r\n           matInput name=\"count500\" ngModel #count500>\r\n    </mat-card>\r\n    <div class=\"pl10\">\r\n       <mat-error *ngIf=\"denominationlimit && count500.value > denominationLimit[500]\">\r\n           Please enter <= {{denominationLimit[500]}}\r\n       </mat-error>\r\n    </div>\r\n    </div>\r\n    </div>\r\n    <div  class=\"paddingclass\" \r\n    fxLayoutAlign=\"start center\" *ngIf=\"chequewithdrawForm.value.transactionCurrency == 'INR'\">\r\n    <div fxFlex=\"20%\">\r\n    <p class=\"quantityClass text-small\">200</p>\r\n    </div>\r\n    <div fxFlex=\"10%\">\r\n    <p class=\"operationTypeClass text-small\">x</p>\r\n    </div>\r\n    <div fxFlex=\"70%\">\r\n    <mat-card class=\"inputCard\">\r\n       <input class=\"full-width inputClass\" type=\"text\"\r\n           (keyup)=\"totalAmountValue(cdForm)\" (keypress)=\"omit_number($event)\"\r\n           matInput name=\"count200\" ngModel #count200>\r\n    </mat-card>\r\n    <div class=\"pl10\">\r\n       <mat-error *ngIf=\"denominationlimit && count200.value > denominationLimit[200]\">\r\n           Please enter <= {{denominationLimit[200]}}\r\n       </mat-error>\r\n    </div>\r\n    </div>\r\n    </div>\r\n    <div  class=\"paddingclass\" \r\n    fxLayoutAlign=\"start center\" *ngIf=\"chequewithdrawForm.value.transactionCurrency == 'INR' || chequewithdrawForm.value.transactionCurrency == 'USD' || chequewithdrawForm.value.transactionCurrency == 'AED'\">\r\n    <div fxFlex=\"20%\">\r\n    <p class=\"quantityClass text-small\">100</p>\r\n    </div>\r\n    <div fxFlex=\"10%\">\r\n    <p class=\"operationTypeClass text-small\">x</p>\r\n    </div>\r\n    <div fxFlex=\"70%\">\r\n    <mat-card class=\"inputCard\">\r\n       <input class=\"full-width inputClass\" type=\"text\"\r\n           (keyup)=\"totalAmountValue(cdForm)\" (keypress)=\"omit_number($event)\"\r\n           matInput name=\"count100\" ngModel #count100>\r\n    </mat-card>\r\n    <div class=\"pl10\">\r\n       <mat-error *ngIf=\"denominationlimit && count100.value > denominationLimit[100]\">\r\n           Please enter <= {{denominationLimit[100]}}\r\n       </mat-error>\r\n    </div>\r\n    </div>\r\n    </div>\r\n    <div  class=\"paddingclass\" \r\n    fxLayoutAlign=\"start center\" *ngIf=\"chequewithdrawForm.value.transactionCurrency == 'INR' || chequewithdrawForm.value.transactionCurrency == 'USD'\">\r\n    <div fxFlex=\"20%\">\r\n    <p class=\"quantityClass text-small\">50</p>\r\n    </div>\r\n    <div fxFlex=\"10%\">\r\n    <p class=\"operationTypeClass text-small\">x</p>\r\n    </div>\r\n    <div fxFlex=\"70%\">\r\n    <mat-card class=\"inputCard\">\r\n       <input class=\"full-width inputClass\" type=\"text\"\r\n           (keyup)=\"totalAmountValue(cdForm)\" (keypress)=\"omit_number($event)\"\r\n           matInput name=\"count50\" ngModel #count50>\r\n    </mat-card>\r\n    <div class=\"pl10\">\r\n       <mat-error *ngIf=\"denominationlimit && count50.value > denominationLimit[50]\">\r\n           Please enter <= {{denominationLimit[50]}}\r\n       </mat-error>\r\n    </div>\r\n    </div>\r\n    </div>\r\n    <div  class=\"paddingclass\" \r\n    fxLayoutAlign=\"start center\" *ngIf=\"chequewithdrawForm.value.transactionCurrency == 'INR'\">\r\n    <div fxFlex=\"20%\">\r\n    <p class=\"quantityClass text-small\">20</p>\r\n    </div>\r\n    <div fxFlex=\"10%\">\r\n    <p class=\"operationTypeClass text-small\">x</p>\r\n    </div>\r\n    <div fxFlex=\"70%\">\r\n    <mat-card class=\"inputCard\">\r\n       <input class=\"full-width inputClass\" type=\"text\"\r\n           (keyup)=\"totalAmountValue(cdForm)\" (keypress)=\"omit_number($event)\"\r\n           matInput name=\"count20\" ngModel #count20>\r\n    </mat-card>\r\n    <div class=\"pl10\">\r\n       <mat-error *ngIf=\"denominationlimit && count20.value > denominationLimit[20]\">\r\n           Please enter <= {{denominationLimit[20]}}\r\n       </mat-error>\r\n    </div>\r\n    </div>\r\n    </div>\r\n    <div  class=\"paddingclass\" \r\n    fxLayoutAlign=\"start center\" *ngIf=\"chequewithdrawForm.value.transactionCurrency == 'INR'\">\r\n    <div fxFlex=\"20%\">\r\n    <p class=\"quantityClass text-small\">10</p>\r\n    </div>\r\n    <div fxFlex=\"10%\">\r\n    <p class=\"operationTypeClass text-small\">x</p>\r\n    </div>\r\n    <div fxFlex=\"70%\">\r\n    <mat-card class=\"inputCard\">\r\n       <input class=\"full-width inputClass\" type=\"text\"\r\n           (keyup)=\"totalAmountValue(cdForm)\" (keypress)=\"omit_number($event)\"\r\n           matInput name=\"count10\" ngModel #count10>\r\n    </mat-card>\r\n    <div class=\"pl10\">\r\n       <mat-error *ngIf=\"denominationlimit && count10.value > denominationLimit[10]\">\r\n           Please enter <= {{denominationLimit[10]}}\r\n       </mat-error>\r\n    </div>\r\n    </div>\r\n    </div>\r\n    <div class=\"paddingclass\" \r\n    fxLayoutAlign=\"start center\" *ngIf=\"chequewithdrawForm.value.transactionCurrency == 'INR' || chequewithdrawForm.value.transactionCurrency == 'USD' || chequewithdrawForm.value.transactionCurrency == 'AED'\">\r\n    <div fxFlex=\"20%\">\r\n    <p class=\"quantityClass text-small\">1</p>\r\n    </div>\r\n    <div fxFlex=\"10%\">\r\n    <p class=\"operationTypeClass text-small\">x</p>\r\n    </div>\r\n    <div fxFlex=\"70%\">\r\n    <mat-card class=\"inputCard\">\r\n    <input class=\"full-width inputClass\" type=\"text\"\r\n       (keyup)=\"totalAmountValue(cdForm)\" (keypress)=\"omit_number($event)\"\r\n       matInput name=\"count1\" ngModel #count10>\r\n    </mat-card>\r\n    </div>\r\n    </div>\r\n    </div>\r\n    <div fxLayout=\"row wrap\" class=\"pH10 full-width\">\r\n    <div fxFlex=\"53%\" fxFlex.xs=\"100%\">\r\n    <p class=\"totalAmount\">Total Amount</p>\r\n    <mat-card class=\"inputCard\">\r\n    <input class=\"full-width inputClass\"  [(ngModel)]=\"totalAmount\"\r\n       matInput name=\"totalAmount\"  readonly>\r\n    </mat-card>\r\n    <div class=\"pl10\" style=\"width: 150%;\">\r\n    <mat-error *ngIf=\"enableBtn1\">\r\n       Total amount should be equal to {{chequewithdrawForm.value.transactionAmount}}\r\n    </mat-error>\r\n    </div>\r\n    </div>\r\n    </div>\r\n           </mat-card>\r\n           </form>\r\n    </div>\r\n\r\n    </div>\r\n\r\n\r\n    <div>\r\n        <div fxLayout=\"row wrap\" class=\"flex-container stretch\" id=\"buttonDiv\">\r\n            <ng-container>\r\n                <div fxFlex=\"30%\" fxFlex.xs=\"100%\" class=\"paddingCls\">\r\n                    <button mat-flat-button *ngIf=\"phoneNumber\" class=\"buttonCancel full-width\"\r\n                        (click)=\"goToServiceScreens()\">CANCEL</button>\r\n                </div>\r\n                <div fxFlex=\"70%\" fxFlex.xs=\"100%\" class=\"paddingCls\" *ngIf=\"showAccountNum\">\r\n                    <button mat-flat-button class=\"buttonNext full-width\"\r\n                    [disabled]=\"!enableContinue\r\n                     ||!chequewithdrawForm.get('transactionCurrency').valid\r\n                     ||!chequewithdrawForm.get('accountNumber').valid\r\n                     ||!chequewithdrawForm.get('accountType').valid\r\n                     ||!chequewithdrawForm.get('accountCurrency').valid\r\n                     ||!chequewithdrawForm.get('transactionAmount').valid\r\n                     ||!chequewithdrawForm.get('chequeNumber').valid\r\n                     ||!chequewithdrawForm.get('totalChargeAmount').valid\r\n                     ||!chequewithdrawForm.get('totalTransactionAmount').valid\"\r\n                     \r\n                       (click)=\"onSaveofChequeWithdraw(chequewithdrawForm.value,ifQRvariable,cdForm)\">GENERATE TOKEN</button>\r\n                </div>\r\n                <div fxFlex=\"70%\" fxFlex.xs=\"100%\" class=\"paddingCls\" *ngIf=\"!showAccountNum\">\r\n                    <button mat-flat-button class=\"buttonNext full-width\"\r\n                    [disabled]=\"!enableContinue || !chequewithdrawForm.get('transactionAmount').valid\r\n                     ||!chequewithdrawForm.get('transactionCurrency').valid\r\n                     ||!chequewithdrawForm.get('accountNumber').valid\r\n                     ||!chequewithdrawForm.get('accountType').valid\r\n                     ||!chequewithdrawForm.get('accountCurrency').valid\r\n                     ||!chequewithdrawForm.get('transactionAmount').valid\r\n                     ||!chequewithdrawForm.get('chequeNumber').valid\r\n                     ||!chequewithdrawForm.get('totalChargeAmount').valid\r\n                     ||!chequewithdrawForm.get('totalTransactionAmount').valid\"\r\n                       (click)=\"getOTP(chequewithdrawForm.value,ifQRvariable,cdForm)\">CONTINUE</button>\r\n                </div>\r\n            </ng-container>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl, FormBuilder, Validators  } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { DialogService } from 'app/shared/services/Dialog/dialog.service';\r\n\r\ninterface Testing {\r\n  value: string;\r\n  viewValue: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-loan-payment',\r\n  templateUrl: './loan-payment.component.html',\r\n  styleUrls: ['./loan-payment.component.scss']\r\n})\r\nexport class LoanPaymentComponent implements OnInit {\r\n  loanpaymentForm: FormGroup;\r\n  loanPayment : any = 'Loan Payment';\r\n\r\n  constructor(private router : Router,private formBuilder: FormBuilder, private dialogService : DialogService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.loanpaymentForm = this.formBuilder.group({\r\n      loanAccount:['', [Validators.required]],\r\n      currentArrears:['', [Validators.required]],\r\n      currentDue:['', [Validators.required]],\r\n      principalOutstanding:['', [Validators.required]],\r\n      payFromAccount:['', [Validators.required]],\r\n      holderName:['', [Validators.required]],\r\n      repaymentAmount:['', [Validators.required]], \r\n    });\r\n  }\r\n  goToServiceScreens(){\r\n    this.router.navigateByUrl('/others/services');\r\n  }\r\n  goToAuthenticate(){\r\n    this.dialogService.authenticationDialog();\r\n  }\r\n\r\n  testing: Testing[] = [\r\n    { value: 'Demo', viewValue: 'Demo 1' },\r\n    { value: 'Demo', viewValue: 'Demo 2' },\r\n    { value: 'Demo', viewValue: 'Demo 3' }\r\n  ];\r\n\r\n}\r\n","<div class=\"fullcard\">\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"center center\">\r\n        <div fxFlex=\"80%\">\r\n            <mat-card class=\"chequecard\">\r\n                <mat-card-title style=\"padding: 2%;\">\r\n                    <div fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n                        <div>\r\n                            <mat-icon class=\"backIcon\" (click)=\"goToServiceScreens()\">keyboard_backspace</mat-icon>\r\n                        </div> &nbsp;&nbsp;\r\n                        <div class=\"card-title\">Loan Payment</div>\r\n                    </div>\r\n                </mat-card-title>\r\n                <mat-card-content>\r\n                    <div class=\"full-width\" style=\"padding: 0% 3% 3% 2%;\">\r\n                        <!-- <form #loanpaymentForm=\"ngForm\"> -->\r\n                        <form [formGroup]=\"loanpaymentForm\">    \r\n                            <div fxLayout=\"column\" fxLayoutGap=\"5%\" fxLayoutAlign=\"space-between none\">\r\n                                <div>\r\n                                    <div fxLayout=\"row wrap\" class=\"flex-container stretch\">\r\n                                        <ng-container>\r\n                                            <div fxFlex=\"31%\" fxFlex.xs=\"100%\">\r\n                                                <mat-hint class=\"totalAmount\">Loan Account*</mat-hint>\r\n                                                <mat-card class=\"firstCard\">\r\n                                                    <mat-select formControlName=\"loanAccount\" class=\"full-width\" style=\"background-color: #f9fafb;\">\r\n                                                        <mat-option *ngFor=\"let test of testing\" [value]=\"test.value\">\r\n                                                            {{test.viewValue}}\r\n                                                        </mat-option>\r\n                                                    </mat-select>\r\n                                                </mat-card>\r\n                                            </div>\r\n                                            <div fxFlex=\"23%\" fxFlex.xs=\"100%\">\r\n                                                <mat-hint class=\"totalAmount\">Current Arrears*</mat-hint>\r\n                                                <mat-card class=\"loanCard\">\r\n                                                    <input matInput formControlName=\"currentArrears\" type=\"text\" class=\"full-width inputClass\"\r\n                                                        name=\"currentArrears\">\r\n                                                </mat-card>\r\n                                            </div>\r\n                                            <div fxFlex=\"23%\" fxFlex.xs=\"100%\">\r\n                                                <mat-hint class=\"totalAmount\">Current Due*</mat-hint>\r\n                                                <mat-card class=\"loanCard\">\r\n                                                    <input matInput formControlName=\"currentDue\" type=\"text\" class=\"full-width inputClass\"\r\n                                                        name=\"currentDue\">\r\n                                                </mat-card>\r\n                                            </div>\r\n                                            <div fxFlex=\"23%\" fxFlex.xs=\"100%\">\r\n                                                <mat-hint class=\"totalAmount\">Principal Outstanding* </mat-hint>\r\n                                                <mat-card class=\"loanCard\">\r\n                                                    <input matInput formControlName=\"principalOutstanding\" type=\"text\" class=\"full-width inputClass\"\r\n                                                        name=\"principalOutstanding\">\r\n                                                </mat-card>\r\n                                            </div>\r\n                                        </ng-container>\r\n                                    </div>\r\n                                </div>\r\n                                <div>\r\n                                    <span layout=\"row\">\r\n                                        <hr class=\"line\" flex />\r\n                                    </span>\r\n                                </div>\r\n                                <div>\r\n                                    <div fxLayout=\"row wrap\" class=\"flex-container stretch\">\r\n                                        <ng-container>\r\n                                            <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                                <mat-hint class=\"totalAmount\">Pay from Account*</mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <mat-select formControlName=\"payFromAccount\" class=\"full-width\" style=\"background-color: #f9fafb;\">\r\n                                                        <mat-option *ngFor=\"let test of testing\" [value]=\"test.value\">\r\n                                                            {{test.viewValue}}\r\n                                                        </mat-option>\r\n                                                    </mat-select>\r\n                                                </mat-card>\r\n                                                <mat-hint class=\"totalAmount\">Account Balance : $12,09,98</mat-hint>\r\n                                            </div>\r\n                                            <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                                <mat-hint class=\"totalAmount\">Holder Name* </mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <mat-select formControlName=\"holderName\" class=\"full-width\" style=\"background-color: #f9fafb;\">\r\n                                                        <mat-option *ngFor=\"let test of testing\" [value]=\"test.value\">\r\n                                                            {{test.viewValue}}\r\n                                                        </mat-option>\r\n                                                    </mat-select>\r\n                                                </mat-card>\r\n                                            </div>\r\n                                            <div fxFlex=\"34%\" fxFlex.xs=\"100%\">\r\n                                                <mat-hint class=\"totalAmount\">Repayment Amount* </mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <input matInput formControlName=\"repaymentAmount\" type=\"text\" class=\"full-width inputClass\"\r\n                                                        name=\"repaymentAmount\">\r\n                                                </mat-card>\r\n                                            </div>\r\n                                        </ng-container>\r\n                                    </div>\r\n                                </div>\r\n                                <div>\r\n                                    <div fxLayout=\"row wrap\" class=\"flex-container stretch\">\r\n                                        <ng-container>\r\n                                            <div fxFlex=\"30%\" fxFlex.xs=\"100%\" style=\"padding: 0% 1%;\">\r\n                                                <button mat-flat-button class=\"buttonCancel full-width\"\r\n                                                    (click)=\"goToServiceScreens()\">CANCEL</button>\r\n                                            </div>\r\n                                            <div fxFlex=\"70%\" fxFlex.xs=\"100%\" style=\"padding: 0% 2%;\">\r\n                                                <button mat-flat-button class=\"buttonNext full-width\"\r\n                                                [disabled]=\" !loanpaymentForm.get('loanAccount').valid\r\n                                                || !loanpaymentForm.get('currentArrears').valid\r\n                                                || !loanpaymentForm.get('currentDue').valid\r\n                                                || !loanpaymentForm.get('principalOutstanding').valid\r\n                                                || !loanpaymentForm.get('payFromAccount').valid\r\n                                                || !loanpaymentForm.get('holderName').valid\r\n                                                || !loanpaymentForm.get('repaymentAmount').valid \"\r\n                                                    (click)=\"goToAuthenticate()\">CONTINUE</button>\r\n                                            </div>\r\n                                        </ng-container>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </mat-card-content>\r\n            </mat-card>\r\n        </div>\r\n    </div>\r\n</div>","import { Country } from '@angular-material-extensions/select-country';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl, FormBuilder, Validators  } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { DialogService } from 'app/shared/services/Dialog/dialog.service';\r\n\r\ninterface Testing {\r\n  value: string;\r\n  viewValue: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-forex-transaction',\r\n  templateUrl: './forex-transaction.component.html',\r\n  styleUrls: ['./forex-transaction.component.scss']\r\n})\r\nexport class ForexTransactionComponent implements OnInit {\r\n  forexForm: FormGroup;\r\n  countryFormControl = new FormControl();\r\n  defaultValue: Country = {\r\n    name: 'Deutschland',\r\n    alpha2Code: 'DE',\r\n    alpha3Code: 'DEU',\r\n    numericCode: '276',\r\n    callingCode: '+49'\r\n  };\r\n  forexTransaction : any = 'Forex Transaction';\r\n  constructor(private router : Router, private formBuilder: FormBuilder,private dialogService : DialogService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.forexForm = this.formBuilder.group({\r\n      accountNumber:['', [Validators.required]],\r\n      holderName:['', [Validators.required]],\r\n      fxCurrency:[''],\r\n      fxAmount:['', [Validators.required]],\r\n      negotiatedRate:['', [Validators.required]],\r\n      country: [\r\n        {\r\n          value: {\r\n            name: 'Deutschland',\r\n            alpha2Code: 'DE',\r\n            alpha3Code: 'DEU',\r\n            numericCode: '276',\r\n            callingCode: '+49'\r\n          },\r\n          disabled: false\r\n        }\r\n      ]\r\n    });\r\n\r\n    this.forexForm\r\n      .get('country')\r\n      .valueChanges.subscribe((country) =>\r\n      console.log(\r\n        'this.countryFormGroup.get(\\'country\\').valueChanges',\r\n        country\r\n      )\r\n    );\r\n\r\n    this.countryFormControl.valueChanges.subscribe((country) =>\r\n      console.log('this.countryFormControl.valueChanges', country)\r\n    );\r\n\r\n  }\r\n  onCountrySelected($event: Country): void {\r\n    console.log($event);\r\n  }\r\n  goToServiceScreens(){\r\n    this.router.navigateByUrl('/others/services');\r\n  }\r\n  goToToken(){\r\n     this.dialogService.tokenGenerationDialog();\r\n  }\r\n\r\n  testing: Testing[] = [\r\n    { value: 'Demo', viewValue: 'Demo 1' },\r\n    { value: 'Demo', viewValue: 'Demo 2' },\r\n    { value: 'Demo', viewValue: 'Demo 3' }\r\n  ];\r\n\r\n}\r\n","<div class=\"fullcard\">\r\n  <div fxLayout=\"row\" fxLayoutAlign=\"center center\">\r\n    <div fxFlex=\"80%\">\r\n      <mat-card class=\"chequecard\">\r\n        <mat-card-title style=\"padding: 2%;\">\r\n          <div fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n            <div>\r\n              <mat-icon class=\"backIcon\" (click)=\"goToServiceScreens()\">keyboard_backspace</mat-icon>\r\n            </div> &nbsp;&nbsp;\r\n            <div class=\"card-title\">Forex Transaction</div>\r\n          </div>\r\n        </mat-card-title>\r\n        <mat-card-content>\r\n          <div class=\"full-width\" style=\"padding: 0% 0% 3% 2%;\">\r\n            <!-- <form #forexForm=\"ngForm\"> -->\r\n              <form [formGroup]=\"forexForm\">\r\n              <div fxLayout=\"column\" fxLayoutGap=\"5%\" fxLayoutAlign=\"space-between none\">\r\n                <div>\r\n                  <div fxLayout=\"row wrap\" class=\"flex-container stretch\">\r\n                    <ng-container>\r\n                      <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                        <mat-hint class=\"totalAmount\">Account Number*</mat-hint>\r\n                        <mat-card class=\"inputCard\">\r\n                          <mat-select formControlName=\"accountNumber\" class=\"full-width\" style=\"background-color: #f9fafb;\">\r\n                            <mat-option *ngFor=\"let test of testing\" [value]=\"test.value\">\r\n                              {{test.viewValue}}\r\n                            </mat-option>\r\n                          </mat-select>\r\n                        </mat-card>\r\n                        <mat-hint class=\"totalAmount\">Account Balance : $12,09470</mat-hint>\r\n                      </div>\r\n                      <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                        <mat-hint class=\"totalAmount\">Holder Name*</mat-hint>\r\n                        <mat-card class=\"inputCard\">\r\n                          <mat-select formControlName=\"holderName\" class=\"full-width\" style=\"background-color: #f9fafb;\">\r\n                            <mat-option *ngFor=\"let test of testing\" [value]=\"test.value\">\r\n                              {{test.viewValue}}\r\n                            </mat-option>\r\n                          </mat-select>\r\n                        </mat-card>\r\n                      </div>\r\n                      <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                        <mat-hint class=\"totalAmount\"> Transaction Type*</mat-hint>\r\n                        <div class=\"radioDiv\">\r\n                          <mat-radio-group name=\"transactionType\">\r\n                            <mat-radio-button value=\"buy\" checked=\"true\">Buy</mat-radio-button> &nbsp; &nbsp;\r\n                            <mat-radio-button value=\"sell\">Sell</mat-radio-button>\r\n                          </mat-radio-group>\r\n                        </div>\r\n                      </div>\r\n                    </ng-container>\r\n                  </div>\r\n                </div>\r\n                <div>\r\n                  <span layout=\"row\">\r\n                    <hr class=\"line\" flex />\r\n                  </span>\r\n                </div>\r\n                <div>\r\n                  <div fxLayout=\"row wrap\" class=\"flex-container stretch\">\r\n                    <ng-container>\r\n                      <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                        <mat-hint class=\"totalAmount\">FX Currency*</mat-hint>\r\n                        <mat-card class=\"inputCard\" style=\"padding: 0% 6%;\">\r\n                          <mat-select-country formControlName=\"fxCurrency\" class=\"full-width fxCurrencyClass\" label=\"\" appearance=\"none\"\r\n                            [value]=\"defaultValue\" (onCountrySelected)=\"onCountrySelected($event)\">\r\n                          </mat-select-country>\r\n                        </mat-card>\r\n                      </div>\r\n                      <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                        <mat-hint class=\"totalAmount\"> FX Amount* </mat-hint>\r\n                        <mat-card class=\"inputCard\">\r\n                          <input matInput formControlName=\"fxAmount\" type=\"text\" class=\"full-width inputClass\" name=\"fxAmount\">\r\n                        </mat-card>\r\n                      </div>\r\n                      <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                        <mat-hint class=\"totalAmount\">Negotiated Rate*</mat-hint>\r\n                        <mat-card class=\"inputCard\">\r\n                          <input matInput formControlName=\"negotiatedRate\" class=\"full-width inputClass\" type=\"text\" name=\"accountNumber\">\r\n                        </mat-card>\r\n                        <mat-hint class=\"totalAmount\">Exchange Rate : 0.89</mat-hint>\r\n                      </div>\r\n                    </ng-container>\r\n                  </div>\r\n                </div>\r\n                <div>\r\n                  <div fxLayout=\"row wrap\" class=\"flex-container stretch\">\r\n                    <ng-container>\r\n                      <div fxFlex=\"30%\" fxFlex.xs=\"100%\" style=\"padding: 0% 1%;\">\r\n                        <button mat-flat-button class=\"buttonCancel full-width\"\r\n                          (click)=\"goToServiceScreens()\">CANCEL</button>\r\n                      </div>\r\n                      <div fxFlex=\"70%\" fxFlex.xs=\"100%\" style=\"padding: 0% 2%;\">\r\n                        <button mat-flat-button class=\"buttonNext full-width\"\r\n                        [disabled]=\" !forexForm.get('accountNumber').valid\r\n                        || !forexForm.get('holderName').valid\r\n                        || !forexForm.get('fxCurrency').valid\r\n                        || !forexForm.get('fxAmount').valid\r\n                        || !forexForm.get('negotiatedRate').valid \"                        \r\n                          (click)=\"goToToken()\">CONTINUE</button>\r\n                      </div>\r\n                    </ng-container>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </mat-card-content>\r\n      </mat-card>\r\n    </div>\r\n  </div>\r\n</div>","import { SharedDirectivesModule } from './../../shared/directives/shared-directives.module';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatChipsModule } from '@angular/material/chips';\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\r\nimport { ChartsModule } from 'ng2-charts';\r\nimport { SharedModule } from './../../shared/shared.module';\r\nimport { AppBlankComponent } from './app-blank/app-blank.component';\r\nimport { OthersRoutes } from \"./others.routing\";\r\nimport { ChequeWithdrawalComponent } from './cheque-withdrawal/cheque-withdrawal.component';\r\nimport { ChequeWithdrawal1Component } from './cheque-withdrawal1/cheque-withdrawal1.component';\r\nimport { CashWithdrawalComponent } from './cash-withdrawal/cash-withdrawal.component';\r\nimport { CashDepositComponent } from './cash-deposit/cash-deposit.component';\r\nimport { ChequeDepositComponent } from './cheque-deposit/cheque-deposit.component';\r\nimport { ForexTransactionComponent } from './forex-transaction/forex-transaction.component';\r\nimport { LoanPaymentComponent } from './loan-payment/loan-payment.component';\r\nimport { DepositTopupComponent } from './deposit-topup/deposit-topup.component';\r\nimport { UtilityBillpaymentComponent } from './utility-billpayment/utility-billpayment.component';\r\nimport { SelectServiceComponent } from './select-service/select-service.component';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { AuthenticateComponent } from './authenticate/authenticate.component';\r\nimport { MatSelectCountryModule } from '@angular-material-extensions/select-country';\r\nimport { MatDialogModule, MatDialogRef } from '@angular/material/dialog';\r\nimport { TokenGenerationComponent } from './token-generation/token-generation.component';\r\nimport { TokenInterceptor } from 'app/shared/interceptors/token.interceptor';\r\nimport { ZXingScannerModule } from '@zxing/ngx-scanner';\r\nimport { OnlynumberDirective } from 'app/shared/directives/onlynumber.directive';\r\nimport { SearchComponent } from './search/search.component';\r\nimport { OtpVerifyComponent } from './otp-verify/otp-verify.component';\r\nimport { AppointmentIdComponent } from './appointment-id/appointment-id.component'\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    MatListModule,\r\n    MatIconModule,\r\n\r\n    MatButtonModule,\r\n    MatCardModule,\r\n    MatMenuModule,\r\n    MatSlideToggleModule,\r\n    MatGridListModule,\r\n    MatChipsModule,\r\n    MatCheckboxModule,\r\n    MatDialogModule,\r\n    MatRadioModule,\r\n    MatTabsModule,\r\n    MatInputModule,\r\n    MatProgressBarModule,\r\n    FlexLayoutModule,\r\n    NgxDatatableModule,\r\n    ChartsModule,\r\n    SharedModule,\r\n    MatSelectModule,\r\n    ReactiveFormsModule,\r\n    MatDatepickerModule,\r\n    MatSelectCountryModule.forRoot('de'),\r\n    RouterModule.forChild(OthersRoutes),\r\n    ZXingScannerModule\r\n  ],\r\n  declarations: [\r\n    AppBlankComponent,\r\n    ChequeWithdrawalComponent,\r\n    ChequeWithdrawal1Component,\r\n    CashWithdrawalComponent,\r\n    CashDepositComponent,\r\n    ChequeDepositComponent,\r\n    ForexTransactionComponent,\r\n    LoanPaymentComponent,\r\n    DepositTopupComponent,\r\n    UtilityBillpaymentComponent,\r\n    SelectServiceComponent,\r\n    AuthenticateComponent,\r\n    TokenGenerationComponent,\r\n    OnlynumberDirective,\r\n    SearchComponent,\r\n    OtpVerifyComponent,\r\n    AppointmentIdComponent,\r\n   \r\n  ],\r\n  entryComponents: [\r\n    AuthenticateComponent,\r\n    TokenGenerationComponent\r\n  ]\r\n})\r\nexport class OthersModule { }\r\n","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\nimport { NavigationExtras, Router } from '@angular/router';\r\n\r\nexport interface Section {\r\n  title: string;\r\n  id : number;\r\n  flag: boolean;\r\n  link : string;\r\n  image : any;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-select-service',\r\n  templateUrl: './select-service.component.html',\r\n  styleUrls: ['./select-service.component.scss']\r\n})\r\nexport class SelectServiceComponent implements OnInit {\r\n\r\n  @ViewChild('contentDiv', { read: ElementRef }) public contentDiv: ElementRef<any>;\r\n  @ViewChild('widgetsContent') widgetsContent: ElementRef;\r\n\r\n\r\n  flag: boolean = true;\r\n  continue = \"CONTINUE\";\r\n  enableList : any [];\r\n  active : any = {};\r\n  folders: Section[] = [\r\n    {\r\n      title: \"Cash Withdrawal\",\r\n      id : 1,\r\n      flag : false,\r\n      link : 'others/cash-withdrawal',\r\n      image : \"assets/images/cash_withdrawal.png\"\r\n    },\r\n    {\r\n      title: \"Cash Deposit\",\r\n      id : 2,\r\n      flag : false,\r\n      link : 'others/cash-deposit',\r\n      image : \"assets/images/cash_deposit.png\"\r\n    },\r\n    {\r\n      title: \"Cheque Deposit\",\r\n      id : 3,\r\n      flag : false,\r\n      link : 'others/cheque-deposit',\r\n      image : \"assets/images/cheque_deposit.png\"\r\n    },\r\n    {\r\n      title: \"Cheque Withdrawal\",\r\n      id : 4,\r\n      flag : false,\r\n      link : 'others/cheque-withdrawal',\r\n      image : \"assets/images/check_withdrawal.png\"\r\n    },\r\n    {\r\n      title: \"Forex Transaction\",\r\n      id : 5,\r\n      flag : false,\r\n      link : 'others/forex-transaction',\r\n      image : \"assets/images/forex_transaction.png\"\r\n    },\r\n    {\r\n      title: \"Loan Payment\",\r\n      id : 6,\r\n      flag : false,\r\n      link : 'others/loan-payment',\r\n      image : \"assets/images/loan_payment.png\"\r\n    },\r\n    {\r\n      title: \"Deposit Top Up\",\r\n      id : 7,\r\n      flag : false,\r\n      link : 'others/deposit-topup',\r\n      image : \"assets/images/deposit_top_up.png\"\r\n    },\r\n    {\r\n      title: \"Utility Bill Payment\",\r\n      id : 8,\r\n      flag : false,\r\n      link : 'others/utility-billpayment',\r\n      image : \"assets/images/utility_billpayment.png\"\r\n    },\r\n\r\n  ]; \r\n  serviceTitle: any;\r\n  constructor(private router : Router,) { }\r\n  ngOnInit(): void {\r\n  }\r\n  goToService(index){\r\n    if(this.active !== index){\r\n      this.active = index;\r\n      this.folders.forEach(item => { item.flag = false});\r\n    } \r\n    this.folders[index].flag = !this.folders[index].flag;\r\n  }\r\n  contiueButton(){\r\n    // console.log(this.active);\r\n    this.enableList = this.folders.filter(x => x.flag === true)\r\n    console.log(this.enableList);\r\n    if(this.enableList.length > 0 )\r\n    return true;\r\n    else \r\n    return false;\r\n  }\r\n  goToOperations(){\r\n    this.router.navigate([this.enableList[0].link]);\r\n  }\r\n\r\n  public scrollLeft(): void {\r\n    this.contentDiv.nativeElement.scrollLeft  -= 640;\r\n    \r\n  }\r\n\r\n  public scrollRight(): void {\r\n    this.contentDiv.nativeElement.scrollLeft += 640;\r\n  }\r\n  \r\n\r\n}\r\n","<div class=\"fullcard\">\r\n  <br>\r\n  <div fxLayout=\"row-wrap\" fxLayoutAlign=\"center center\">\r\n    <div fxFlex=\"72%\">\r\n      <mat-card class=\"chequecard\">\r\n        <mat-card-title  class= \"matcard-title\">\r\n          <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n            <div>\r\n              <div class=\"card-title\">Services</div>\r\n              <div fxLayout=\"row wrap\">\r\n                <mat-hint class=\"totalAmount\">Select one and continue</mat-hint>\r\n              </div>\r\n            </div>\r\n            <div>\r\n              <mat-card class=\"slideCard\">\r\n                <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n                  <div>\r\n                    <button mat-icon-button (click)=\"scrollLeft()\">\r\n                      <mat-icon class= \"scrollIcon\">chevron_left</mat-icon>\r\n                    </button>\r\n                  </div>\r\n                  <div>\r\n                    <button mat-icon-button (click)=\"scrollRight()\">\r\n                      <mat-icon class= \"scrollIcon\">chevron_right</mat-icon>\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </mat-card>\r\n            </div>\r\n          </div>\r\n        </mat-card-title>\r\n        <mat-card-content>\r\n          <div #contentDiv class=\"full-width\" #widgetsContent class=\"custom-slider-main\">\r\n            <div fxLayout=\"row wrap\" fxLayoutGap=\"40px \" class=\"gapBtw\" *ngFor=\"let folder of folders; let i = index\">\r\n              <ng-container>\r\n                <mat-card (click)=\"goToService(i)\" [ngClass]=\" folder.flag ? 'borderCard' : 'inputCard'\">\r\n                  <div fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n                    <div *ngIf=\"folder.flag\">\r\n                      <img style=\"width: 23px;\" src=\"assets/images/checked.png\" alt=\"\" />\r\n                    </div>\r\n                  </div>\r\n                  <div fxLayout=\"column\" fxLayoutAlign=\"space-between center\">\r\n                    <div [ngClass]=\" folder.flag ? 'mt9' : 'mt25'\">\r\n                      <mat-card class=\"insideCard\">\r\n                        <div fxLayout=\"row\" fxLayoutAlign=\"center center\">\r\n                          <div>\r\n                            <mat-card style=\"background-color: transparent;\" class=\"matCardTransparent\">\r\n                              <img src=\"{{folder.image}}\" alt=\"\" />\r\n                            </mat-card>\r\n                          </div>\r\n                        </div>\r\n                      </mat-card>\r\n                    </div>\r\n                  </div>\r\n                  <div style=\"text-align: center;padding-top: 20%;\">\r\n                    <mat-hint class=\"insideTitle\">{{folder.title }}</mat-hint>\r\n                  </div>\r\n                </mat-card>\r\n              </ng-container>\r\n            </div>\r\n          </div>\r\n          <div fxLayout=\"row\" fxLayoutAlign=\"center center\" style=\"padding: 0% 2%;\">\r\n            <div class=\"full-width\" style=\"padding: 2% 0% 3.5% 0%;\">\r\n              <button mat-flat-button (click)=\"goToOperations()\"\r\n                [ngClass]=\"contiueButton() ? 'buttonActive' : 'buttonPassive'\">{{continue}}</button>\r\n            </div>\r\n          </div>\r\n        </mat-card-content>\r\n      </mat-card>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n","import { Country } from '@angular-material-extensions/select-country';\r\nimport { Component, Input, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl, FormBuilder, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { DialogService, TokenObjects } from 'app/shared/services/Dialog/dialog.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { Toast } from 'ngx-toastr';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { getCurrencySymbol } from '@angular/common';\r\nimport { ChangeDetectorRef } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { ViewChild } from '@angular/core';\r\nimport { otpModel } from 'app/shared/models/otp.model';\r\nimport { OtpVerifyComponent } from '../otp-verify/otp-verify.component';\r\nimport { MatDialog } from '@angular/material/dialog';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-cash-deposit',\r\n  templateUrl: './cash-deposit.component.html',\r\n  styleUrls: ['./cash-deposit.component.scss']\r\n})\r\nexport class CashDepositComponent implements OnInit {\r\n  titleName: any = 'Cash Deposit';\r\n  cashdepositForm: FormGroup;\r\n  accType = ['Savings', 'Deposit'];\r\n  accountNum: string;\r\n  customerName = ['Jane Smith', 'John Smith'];\r\n  productCode = \"CHD\";\r\n  tokenOrigin = \"Kiosk\";\r\n  @Input() tokenResp: any;\r\n  // countryFormControl = new FormControl();\r\n  defaultValue: Country = {\r\n    name: 'Deutschland',\r\n    alpha2Code: 'DE',\r\n    alpha3Code: 'DEU',\r\n    numericCode: '276',\r\n    callingCode: '+49'\r\n  };\r\n  ifQRvariable = false;\r\n  cashDepositResponse: any;\r\n  accountBal: any;\r\n  phoneNumber: string;\r\n  errorStatus: number;\r\n  custAccountData: any;\r\n  countryValues: any;\r\n  accounttypeArray = [];\r\n  idList = [];\r\n  noList: any[];\r\n  accNum: any;\r\n  tokenObjects = new TokenObjects();\r\n  accNumber: any;\r\n  tokResponse: any;\r\n  tokenNum: any;\r\n  isedit: boolean = true;\r\n  estimatedTime: any;\r\n  transAmt: any;\r\n  balance: string;\r\n  oTpModel = new otpModel();\r\n  enableContinue: boolean = true;\r\n  showAccountNum : boolean = true;\r\n  showAccoutType : boolean = true;\r\n  curr: string;\r\n  transAmount: string;\r\n  currencyImage: any = \"\";\r\n  custID: any;\r\n  custHolderName: string;\r\n  qrData: any;\r\n  customerID: any;\r\n  appointmentId:any;\r\n  userName: string;\r\n  denomCodeArray: any[] = [\r\n    { key: 'count2000', value: 2000 },\r\n    { key: 'count500', value: 500 },\r\n    { key: 'count200', value: 200 },\r\n    { key: 'count100', value: 100 },\r\n    { key: 'count50', value: 50 },\r\n    { key: 'count20', value: 20 },\r\n    { key: 'count10', value: 10 },\r\n    { key: 'count1', value: 1 }\r\n\r\n  ];\r\n  totalAmount: any;\r\n  transamount: any;\r\n  a: any;\r\n  branchNameFromLogin: string;\r\n  branchName: string;\r\n  arrayAccountBranch: any;\r\n  accBranch: any;\r\n  branchData: any;\r\n  trasactionBranches: any;\r\n  branch: any;\r\n  hideDetails:boolean=false;\r\n  totalTransAmount: number;\r\n  chargeDetails: any;\r\n  accountCurrency: any;\r\n  \r\n\r\n  @ViewChild('cdForm') cdForm: NgForm;\r\n  // accountNoList: any[];\r\n  accountNoList = [];\r\n  selectedAccountInfo: any;\r\n  custValidation: string;\r\n  accountNumber: string;\r\n  custmerID: any;\r\n  phonenum: any;\r\n  validateStatus: string;\r\n  cashdepositValues: any;\r\n  cashdeposiform: any;\r\n  cashdepositType: any;\r\n  isLoading = false;\r\n  enableBtn: boolean = true;\r\n  enableBtn1: boolean = false;\r\n  accountNum1: any[];\r\n  filteredAccoun: any[];\r\n  accountDropdown: boolean = false;\r\n  flag1: boolean = false;\r\n  denomRequired: any;\r\n  qrBranchCode: any;\r\n  custNameFromLogin: string;\r\n  selected: string;\r\n  transactionId: any;\r\n  transactionStatus: any;\r\n  cashData: any;\r\n  transBranch: string;\r\n  constructor(\r\n    private router: Router,\r\n    private formBuilder: FormBuilder,\r\n    private dialogService: DialogService,\r\n    private apiService: ApiService,\r\n    private dialog: MatDialog,\r\n    private cdr:ChangeDetectorRef,\r\n\r\n    private ls: LocalStoreService, private snack: MatSnackBar, private changeDef: ChangeDetectorRef) { }\r\n  ngOnInit(): void {\r\n    this.phoneNumber = localStorage.getItem(\"phonenumFromLogin\");\r\n    this.appointmentId = this.ls.getItem(\"TransactionType\");\r\n    this.transBranch=localStorage.getItem(\"TRANSACTIONBRANCH\") \r\n    this.custValidation = localStorage.getItem(\"customerValidation\");\r\n    this.custNameFromLogin = localStorage.getItem(\"FromLogin\");\r\n    if(this.custValidation == \"New Customer\"){\r\n      this.showAccountNum = false;\r\n      this.showAccoutType = false;\r\n    } \r\n    if(this.custNameFromLogin!=null){\r\n      this.showAccountNum=false;\r\n    } \r\n    this.qrData = JSON.parse(JSON.parse(localStorage.getItem('scannerData')));\r\n    console.log(\"QRData\", this.qrData);\r\n    this.cashdepositForm = this.formBuilder.group({\r\n      totalAmount: ['', Validators.required],\r\n      transactionId: ['', [Validators.required]],\r\n      customerId: ['', [Validators.required]],\r\n      accountType: ['', [Validators.required]],\r\n      accountNumber: ['', [Validators.required]],\r\n      holderName: ['', [Validators.required]],\r\n      accountCurrency: ['', [Validators.required]],\r\n      transactionCurrency: ['', [Validators.required]],\r\n      totalChargeAmount:['', [Validators.required]],\r\n      totalTransactionAmount:['',[Validators.required]],\r\n      transactionAmount: ['', [Validators.required, Validators.min(.1)]],\r\n      productCode: ['CHD', [Validators.required]],\r\n      tokenOrigin: ['Kiosk', [Validators.required]],\r\n      // audit\r\n      createdBy: ['', [Validators.required]],\r\n      createdTime: ['', [Validators.required]],\r\n      modifiedBy: ['', [Validators.required]],\r\n      modifiedTime: ['', [Validators.required]],\r\n      recordStatus: ['', [Validators.required]],\r\n      authStatus: ['', [Validators.required]],\r\n      version: ['', [Validators.required]],\r\n      accountBranch: ['', [Validators.required]],\r\n      transactionBranch: ['', [Validators.required]]\r\n    });\r\n    // this.cashdepositForm.get('transactionBranch').setValue(this.branchName);\r\n    if (this.phoneNumber  && this.custNameFromLogin==null && this.appointmentId==null) {\r\n      this.ifQRvariable = false;\r\n      this.gettingallTansactionDetails(this.phoneNumber);\r\n    }\r\n    // else {\r\n      if(this.qrData!=null){\r\n      this.ifQRvariable = true;\r\n      console.log(\"Account\", this.qrData.accountId);\r\n      this.cashdepositForm.controls.holderName.setValue(this.qrData.holderName);\r\n      this.cashdepositForm.controls.accountType.setValue(this.qrData.accountType);\r\n      this.cashdepositForm.controls.accountNumber.setValue(this.qrData.accountId);\r\n      this.getChargeDetails(this.qrData.accountId,'');\r\n      this.cashdepositForm.controls.transactionAmount.setValue(this.qrData.transactionAmount);\r\n      this.cashdepositForm.controls.accountCurrency.setValue(this.qrData.accountCurrency);\r\n      this.cashdepositForm.controls.transactionCurrency.setValue(this.qrData.transactionCurrency);\r\n      this.accountBal = this.qrData.accountBalance;\r\n      this.customerID = this.qrData.customerId;\r\n      this.currencyImage = 'currency-flag-' + this.qrData.accountCurrency.toLowerCase();\r\n      this.currencyImage = 'currency-flag-' + this.qrData.transactionCurrency.toLowerCase();\r\n      if(this.qrData.transactionBranch !=null && this.qrData.transactionBranch !=''){\r\n        this.cashdepositForm.controls.transactionBranch.setValue(this.qrData.transactionBranch);\r\n      }else{\r\n        this.cashdepositForm.controls.transactionBranch.setValue('Kasturi Nagar');\r\n      }\r\n      this.getAccountBranch();\r\n    }\r\n\r\n    this.getCountrynameValues();\r\n    this.getAccountBranch();\r\n    this.gettransactionBranch(\"account_branch\");\r\n    this.getBankInformation(\"KN\")\r\n    if(this.appointmentId.data.appointmentId){\r\n      this.cashWithdrawlData();\r\n    }\r\n  }\r\n  fetchByAccountNum(accNum){\r\n    this.cashdepositForm.controls.transactionAmount.reset();\r\n    this.cashdepositForm.controls.totalTransactionAmount.setValue(this.cashdepositForm.controls.totalChargeAmount.value);\r\n    console.log(\"Account Numebr\",accNum);\r\n    // this.isLoading = true;\r\n    this.apiService.fetchByaccNum(accNum).subscribe((res: any) => {\r\n      console.log('Account Number Rsp', res);\r\n      this.getChargeDetails(accNum,'');\r\n      // this.isLoading = false;\r\n      this.userName = res.accHolderName;\r\n      this.accountBal = res.accBalance;\r\n      this.custmerID = res.customerId;\r\n      this.accountNumber = res.accountId;\r\n      this.accountCurrency = res.accountCurrency;\r\n      this.curr = getCurrencySymbol(res.currency, \"narrow\");\r\n      this.cashdepositForm.controls.accountType.setValue(res.accountType);\r\n      this.cashdepositForm.controls.accountCurrency.setValue(res.currency);\r\n      this.cashdepositForm.controls.accountBranch.setValue(res.accountBranch);\r\n      this.cashdepositForm.controls.holderName.setValue(this.userName); \r\n      this.getCountrynameValues();\r\n      this.currencyImage = 'currency-flag-'+res.currency.toLowerCase();\r\n      this.currencyImage = 'currency-flag-'+res.currency.toLowerCase();\r\n      this.cashdepositForm.controls.transactionCurrency.setValue(res.currency);\r\n      this.custAmountBal(accNum);\r\n      this.cashdepositForm.controls.transactionBranch.setValue('Kasturi Nagar');\r\n      this.apiService.fetchByaccDeatilsoncustId(res.customerId).subscribe((resp: any) => {\r\n        this.phonenum = resp[0].phoneNumber;\r\n        localStorage.setItem('otpPhoneNum', this.phonenum);\r\n      }) \r\n  });\r\n\r\n}\r\n  getCountrynameValues() {\r\n    this.apiService.getCountryValues().subscribe((allCountryValues: any) => {\r\n      this.countryValues = allCountryValues;\r\n    });\r\n  }\r\n\r\n  gettransactionBranch(key: string) {\r\n    this.apiService.getTransactionBranch(key)\r\n      .subscribe(branches => {\r\n        console.log('branches :: ', branches);\r\n        this.trasactionBranches = branches;\r\n\r\n      })\r\n  }\r\n  getAccountBranch() {\r\n    this.apiService.getBranchforKiosk()\r\n      .subscribe((data: any) => {\r\n        this.branchData = data;\r\n        console.log(this.branchData);\r\n        data.forEach((element, index) => {\r\n          this.branch = data[index].branchName;\r\n          console.log(this.branch);\r\n          // this.cashdepositForm.controls.accountBranch.setValue(this.branch);\r\n        });\r\n      });\r\n  }\r\n  onCountrySelected($event: Country): void {\r\n    console.log($event);\r\n  }\r\n  goToServiceScreens() {\r\n    if(this.appointmentId){\r\n    if(this.appointmentId.data.appointmentId){\r\n      this.router.navigateByUrl('/sessions/login');\r\n      localStorage.removeItem(\"FromLogin\")\r\n      localStorage.removeItem(\"TransactionType\")\r\n      localStorage.removeItem(\"customerId\")\r\n      localStorage.removeItem(\"phonenumFromLogin\")\r\n      localStorage.removeItem(\"customerValidation\")\r\n      localStorage.removeItem(\"otpPhoneNum\")\r\n      localStorage.removeItem(\"AccountBal\")\r\n      localStorage.removeItem(\"AccountNumber\")\r\n      localStorage.removeItem(\"ProductCode\")\r\n      localStorage.removeItem(\"tokenNumer\")\r\n      localStorage.removeItem(\"estimatedTiming\")\r\n      localStorage.removeItem(\"userId\")\r\n      localStorage.removeItem(\"scannerData\")\r\n      localStorage.removeItem(\"custholderName\")\r\n    }\r\n  }\r\n    else{\r\n      this.router.navigateByUrl('/others/services');\r\n    }\r\n    // this.dialogService.tokenGenerationDialog();\r\n  }\r\n\r\n  gettingallTansactionDetails(phoneNumber) {\r\n    this.phoneNumber = localStorage.getItem(\"phonenumFromLogin\");\r\n    this.apiService.gettingTransactionDetails(this.phoneNumber).subscribe((allTransactionResp: any) => {\r\n      console.log(\"All Transaction Details\", allTransactionResp);\r\n      this.userName = (allTransactionResp.firstName ? allTransactionResp.firstName + ' ' : ' ') +\r\n        (allTransactionResp.middleName ? allTransactionResp.middleName + ' ' : ' ') +\r\n        (allTransactionResp.lastName ? allTransactionResp.lastName : ' ');\r\n      this.cashdepositForm.controls.holderName.setValue(this.userName);\r\n      this.custID = allTransactionResp.customerId;\r\n      // this.setBalance(allTransactionResp.custAccount);\r\n      this.custAccountData = allTransactionResp.custAccount;\r\n      this.accounttypeArray = [...this.custAccountData].filter(({ accountType }, index) =>\r\n        ![...this.custAccountData].map(obj => obj.accountType).includes(accountType, index + 1))\r\n        for(let j = 0; j < this.custAccountData.length; j++){\r\n          if(this.custAccountData[j].status == 'APPROVED'){\r\n            this.accountNoList.push(this.custAccountData[j]);  \r\n          }\r\n        }\r\n      if (this.custAccountData && this.accountNoList.length<=1) {\r\n        this.accountDropdown=false;\r\n        this.hideDetails=true;\r\n        const accTyp = allTransactionResp.custAccount[0].accountType;\r\n        this.cashdepositForm.controls.accountType.setValue(accTyp);\r\n        this.custAccountNumber(this.accountNoList[0]);\r\n      }else{\r\n        this.accountDropdown=true;\r\n        this.hideDetails=true;\r\n        const accTyp = allTransactionResp.custAccount[0].accountType;\r\n        this.cashdepositForm.controls.accountType.setValue(accTyp);\r\n        this.custAccountNumber(allTransactionResp.custAccount[0]); \r\n      }\r\n      \r\n    });\r\n  }\r\n  getAccountType(event:any){\r\n    this.cashdepositForm.controls.transactionAmount.reset();\r\n    this.cashdepositForm.controls.totalTransactionAmount.setValue(this.cashdepositForm.controls.totalChargeAmount.value);\r\n    this.accountNoList=[];\r\n    console.log(event);\r\n    this.isedit=false;\r\n    this.accountNum1=[...this.custAccountData].filter((accounNum,index)=>{\r\n      return accounNum.accountType==event;\r\n    });console.log(this.accountNum1)\r\n    // this.accountNoList=this.accountNum1\r\n    // this.accountNoList=this.accountNum1.map((acccount)=>\r\n    // {\r\n    //   return acccount.accountId\r\n    // })\r\n    for(let i = 0; i < this.custAccountData.length; i++){\r\n      if(this.custAccountData[i].status == 'APPROVED' && this.custAccountData[i].accountType == event){\r\n        this.accountNoList.push(this.custAccountData[i].accountId);    \r\n      }\r\n    }\r\n    console.log(this.accountNoList);\r\n    if(this.accountNoList.length<=1){\r\n      this.flag1=false; \r\n      // this.cashdepositForm.controls.accountNumber.setValue(this.accountNoList[0]);\r\n      this.getData(this.accountNoList[0])   \r\n    }\r\n    else{\r\n      this.getData(this.accountNoList[0]);\r\n      this.flag1=true;   \r\n    }\r\n    this.getChargeDetails(this.accountNoList[0],'');\r\n   \r\n  }\r\n\r\n  getData(custNum){\r\n    this.hideDetails=true;\r\n    console.log(custNum)\r\n    let val=this.accountNum1.filter((value)=>{\r\n    return value.accountId==custNum}\r\n    )\r\n    console.log(val)\r\n    this.idList = [...this.custAccountData].filter(item => item.accountType === val[0].accountType);\r\n    this.cashdepositForm.controls.accountCurrency.setValue(val[0].accountCurrency);\r\n   this.cashdepositForm.controls.accountBranch.setValue(this.branch);\r\n   this.selected=val[0].accountCurrency;\r\n   this.curr = getCurrencySymbol(val[0].accountCurrency, \"narrow\");\r\n   this.cashdepositForm.controls.transactionCurrency.setValue(val[0].accountCurrency);\r\n  \r\n   this.currencyImage = 'currency-flag-'+val[0].accountCurrency.toLowerCase();\r\n   console.log('data :: ',this.idList[0]);\r\n  this.accountBal = this.idList[0].amount;\r\n  console.log(this.accountBal);\r\n  localStorage.setItem(\"AccountBal\",this.accountBal);\r\n  // this.cashdepositForm.controls.accountNumber.setValue(this.idList[0].accountId);\r\n  this.custAmountBal(this.idList[0].accountId);\r\n\r\n  this.cashdepositForm.controls.accountNumber.setValue(val[0].accountId);\r\n  this.getChargeDetails(val[0].accountId,'')\r\n  this.cashdepositForm.controls.accountBranch.setValue(val[0].accountBranch);\r\n  }\r\n  custAccountNumber(custype) {\r\n    console.log(custype);\r\n    this.isedit = false;\r\n    this.idList = [...this.custAccountData].filter(item => item.accountType === custype.accountType);\r\n    const defaultId = this.idList ? this.idList[0] : null;\r\n    // this.cashdepositForm.controls.accountNumber.setValue(defaultId);\r\n\r\n    this.accountNoList = [];\r\n    for (let i = 0; i < this.idList.length; i++) {\r\n      if (this.idList[i].status == 'APPROVED') {\r\n        this.accountNoList.push(this.idList[i].accountId)\r\n      }\r\n    }\r\n    console.log(this.accountNoList);\r\n    if(this.accountNoList.length<=1){\r\n      // this.cashwithdrawForm.controls.accountNumber.patchValue(this.accountNoList[0]);\r\n      this.flag1=false; \r\n      // this.getData(this.accountNoList[0]);\r\n      this.cashdepositForm.controls.accountNumber.setValue(this.accountNoList[0]);\r\n    }\r\n    else{\r\n      this.cashdepositForm.controls.accountNumber.setValue(this.accountNoList[0]);\r\n      this.flag1=true;   \r\n    }\r\n \r\n    this.cashdepositForm.controls.accountCurrency.setValue(custype.accountCurrency);\r\n    this.cashdepositForm.controls.accountBranch.setValue(this.branch);\r\n    //this.cashdepositForm.controls.transactionAmount.setValue(custype.amount);\r\n    // this.cashdepositForm.controls.accountType.setValue(defaultId);\r\n    this.selected=custype.accountCurrency;\r\n    this.curr = getCurrencySymbol(custype.accountCurrency, \"narrow\");\r\n    // this.accountBal = this.idList[0].amount;\r\n    this.cashdepositForm.controls.transactionCurrency.setValue(custype.accountCurrency);\r\n    console.log(this.cashdepositForm.value.accountCurrency)\r\n    this.currencyImage = 'currency-flag-' + custype.accountCurrency.toLowerCase();\r\n    console.log(this.accountBal);\r\n    localStorage.setItem(\"AccountBal\", this.accountBal);\r\n   // this.cashdepositForm.controls.accountNumber.setValue(this.idList[0].accountId);\r\n    this.custAmountBal(this.accountNoList[0]);\r\n    this.cashdepositForm.controls.accountBranch.setValue(custype.accountBranch);\r\n    this.getChargeDetails(this.accountNoList[0],custype.amount);\r\n  }\r\n  custAmountBal(custNum) {\r\n    console.log(custNum);\r\n    var account = this.idList.filter(function (record) {\r\n      if (record.accountId == custNum) {\r\n        return record;\r\n      }\r\n    });\r\n    console.log(account);\r\n    this.accNum = account[0].accountId;\r\n    this.accountBal = account[0].amount;\r\n    this.selectedAccountInfo = account[0];\r\n    console.log(this.selectedAccountInfo);\r\n  }\r\n  setBalance(accountBalance, index = 0) {\r\n    this.accountBal = accountBalance[index].currentBalance ? accountBalance[index].currentBalance : null;\r\n  }\r\n  onSaveofcashDeposit(formData, type, cdForm) {\r\n    formData.transactionBranch = this.transBranch;\r\n    console.log(\"Data\",formData, type, cdForm )\r\n    if(this.qrData){\r\n      if(this.qrData.transactionBranch){\r\n        this.apiService.fetchBranchInfoByBranchName(this.qrData.transactionBranch).subscribe(response=>{\r\n          this.qrBranchCode=response;\r\n          \r\n        })\r\n      }\r\n    }\r\n    let denominationData: any = {};\r\n    let denominationDataArray: any[] = [];\r\n    if(this.denomRequired == 'yes'){\r\n    for (let i = 0; i < this.denomCodeArray.length; i++) {\r\n      if (cdForm.value[this.denomCodeArray[i].key]) {\r\n        // denominationData.transactionId = this.cashdepositFor;\r\n        denominationData.denominationKey = this.denomCodeArray[i].value;\r\n        denominationData.denominationValue = +cdForm.value[this.denomCodeArray[i].key];\r\n        denominationData.currency = this.cashdepositForm.value.transactionCurrency;\r\n        // denominationData.amountAvailiable = 15200 - (cdForm.value[this.denomCodeArray[i].key] * this.denomCodeArray[i].value);\r\n        denominationDataArray.push(denominationData);\r\n        console.log(denominationDataArray)\r\n        denominationData = {};\r\n      }\r\n    }\r\n  }\r\n    formData.tokenBranch = \"KN\";\r\n    if(this.qrData){\r\n      if(this.qrData.transactionBranch){\r\n        formData.tokenBranch = this.qrBranchCode.transactionBranch;\r\n      }\r\n    }\r\n    if (!this.ifQRvariable) {\r\n          this.accountNum = JSON.stringify(this.selectedAccountInfo.accountId);\r\n          formData.transactionCurrency = formData.transactionCurrency;\r\n          formData.accountNumber = this.selectedAccountInfo.accountId;;\r\n          formData.customerId = this.custID;\r\n          formData.productCode = this.productCode;\r\n          formData.tokenOrigin = this.tokenOrigin;\r\n          formData.accountBalance = this.accountBal;\r\n          // console.log(formData.transactionCurrency);\r\n          formData.transactionAmount = formData.transactionAmount.replace(/,/g, '');\r\n          formData.accountType = formData.accountType;\r\n          if(this.denomRequired == 'yes'){\r\n          formData.denomination = denominationDataArray;\r\n          }\r\n\r\n          localStorage.setItem(\"AccountNumber\", this.accountNum);\r\n          localStorage.setItem(\"ProductCode\", this.productCode);\r\n    }\r\n    else {\r\n      // debugger;\r\n      formData.customerId = this.custID;\r\n      formData.accountType = formData.accountType;\r\n      formData.accountNumber = formData.accountNumber;\r\n      formData.holderName = formData.holderName;\r\n      formData.accountCurrency = formData.accountCurrency;\r\n      formData.transactionCurrency = formData.transactionCurrency;\r\n      // formData.transactionAmount = formData.transactionAmount.replace(/,/g, '');\r\n      formData.transactionAmount = formData.transactionAmount;\r\n      formData.productCode = this.productCode;\r\n      formData.tokenOrigin = this.tokenOrigin;\r\n      formData.accountBalance = this.accountBal;\r\n      if(this.denomRequired == 'yes'){\r\n      formData.denomination = denominationDataArray;\r\n      }\r\n    }\r\n    console.log(\"data::\",this.appointmentId)\r\n    if(this.appointmentId && this.appointmentId.data){\r\n      formData.transactionId = this.appointmentId.data.transactionId;\r\n      formData.transactionStatus = this.appointmentId.data.transactionStatus;\r\n    }\r\n    formData.totalAmount = formData.totalAmount.replace(/,/g, '');\r\n    this.apiService.saveofCashDeposit(formData).subscribe(cashDepositResp => {\r\n      console.log(\"Response Success\", cashDepositResp);\r\n      this.cashDepositResponse = cashDepositResp;\r\n      this.tokenNum = this.cashDepositResponse.tokenNumber;\r\n      this.estimatedTime = this.cashDepositResponse.estimatedWaitTime;\r\n      localStorage.setItem(\"tokenNumer\", this.tokenNum);\r\n      localStorage.setItem(\"estimatedTiming\", this.estimatedTime);\r\n      this.enableContinue = false;\r\n      if (this.cashDepositResponse) {\r\n        this.dialogService.tokenGenerationDialog();\r\n      }\r\n    });\r\n  }\r\n  \r\n  // OTP And Save\r\n  getOTP(formData, type, cdForm){\r\n    this.cashdepositValues =formData;\r\n    this.cashdeposiform = type;\r\n    this.cashdepositType = cdForm;\r\n    this.oTpModel.source = 'customer';\r\n    this.oTpModel.source_key = 'mobile';\r\n    this.oTpModel.source_value = this.phonenum;\r\n    let amount= 50000;\r\n    let transamountwithoutcomma=this.cashdepositValues.transactionAmount.replace(/,/g, \"\");\r\n    console.log( transamountwithoutcomma);\r\n    if(transamountwithoutcomma > amount){\r\n      this.apiService.getOtp(this.oTpModel).subscribe(otpResp => {\r\n        if (otpResp) {\r\n          this.openDialogOTP(this.phonenum);\r\n          this.snack.open(\"An OTP has been sent to the Registered Mobile Number.\" , \"\", {\r\n            duration: 4000,\r\n            verticalPosition: 'top',\r\n            horizontalPosition: 'right'\r\n          });\r\n        }\r\n      })\r\n    }\r\n    else{\r\n      this.getOTPforSave( this.cashdepositValues,this.cashdeposiform,this.cashdepositType);\r\n    }\r\n  }\r\n  getOTPforSave(formData, type, cdForm){\r\n    formData.transactionBranch = this.transBranch;\r\n    let denominationData: any = {};\r\n    let denominationDataArray: any[] = [];\r\n    if(this.denomRequired == 'yes'){\r\n    for (let i = 0; i < this.denomCodeArray.length; i++) {\r\n      if (cdForm.value[this.denomCodeArray[i].key]) {\r\n        denominationData.denominationKey = this.denomCodeArray[i].value;\r\n        denominationData.denominationValue = +cdForm.value[this.denomCodeArray[i].key];\r\n        denominationData.currency = this.cashdepositForm.value.transactionCurrency;\r\n        // denominationData.amountAvailiable = 15200 - (cdForm.value[this.denomCodeArray[i].key] * this.denomCodeArray[i].value);\r\n        denominationDataArray.push(denominationData);\r\n        console.log(denominationDataArray)\r\n        denominationData = {};\r\n      }\r\n    }\r\n  }\r\n    if(this.custValidation == \"New Customer\"){\r\n      console.log(\"customer\",this.custmerID);\r\n     this.transactionId = localStorage.getItem('transactionId');\r\n     this.transactionStatus = localStorage.getItem('transactionStatus'); \r\n     this.accountNum = formData.accountNumber;\r\n     formData.customerId = this.custmerID?this.custmerID:0;\r\n     formData.accountType = formData.accountType;\r\n     formData.accountNumber = this.accountNumber;\r\n     formData.holderName = formData.holderName;\r\n     formData.accountCurrency = formData.accountCurrency;\r\n     formData.transactionCurrency = formData.transactionCurrency;\r\n     formData.transactionAmount = formData.transactionAmount.replace(/,/g, '');\r\n     formData.productCode = this.productCode;\r\n     formData.tokenOrigin = this.tokenOrigin;\r\n     formData.accountBalance = this.accountBal;\r\n     if(this.denomRequired == 'yes'){\r\n     formData.denomination = denominationDataArray;\r\n     }\r\n    }\r\n    formData.tokenBranch = \"KN\";\r\n    if(this.appointmentId && this.appointmentId.data){\r\n      formData.transactionId = this.appointmentId.data.transactionId;\r\n      formData.transactionStatus = this.appointmentId.data.transactionStatus;\r\n    }\r\n    formData.customerId = this.custmerID?this.custmerID:0;\r\n    formData.accountType = formData.accountType;\r\n    formData.accountNumber = this.accountNumber;\r\n    formData.holderName = formData.holderName;\r\n    formData.accountCurrency = formData.accountCurrency;\r\n    formData.transactionCurrency = formData.transactionCurrency;\r\n    formData.transactionAmount = formData.transactionAmount.replace(/,/g, '');\r\n    formData.productCode = this.productCode;\r\n    formData.tokenOrigin = this.tokenOrigin;\r\n    formData.accountBalance = this.accountBal;\r\n  console.log(formData.transactionId,formData.transactionStatus);\r\n  this.apiService.saveofCashDeposit(formData).subscribe(cashDepositResp => {\r\n  console.log(\"Response Success\", cashDepositResp);\r\n  this.cashDepositResponse = cashDepositResp;\r\n  this.tokenNum = this.cashDepositResponse.tokenNumber;\r\n  this.estimatedTime = this.cashDepositResponse.estimatedWaitTime;\r\n  localStorage.setItem(\"tokenNumer\", this.tokenNum);\r\n  localStorage.setItem(\"estimatedTiming\", this.estimatedTime);\r\n  this.enableContinue = false;\r\n  if (this.cashDepositResponse) {\r\n    this.dialogService.tokenGenerationDialog();\r\n  }\r\n});   \r\n  }\r\n  openDialogOTP(numbr) {\r\n    const dialogRef = this.dialog.open(OtpVerifyComponent, {\r\n      data: { number: numbr, type: \"numbr\" },\r\n      disableClose: true,\r\n    });\r\n    dialogRef.afterClosed().subscribe(submit => {\r\n      if(submit){\r\n        this.getOTPforSave( this.cashdepositValues,this.cashdeposiform,this.cashdepositType);\r\n      }\r\n     });\r\n  }\r\n\r\n  OnInput(event: any) {\r\n    this.transAmt = event.target.value;\r\n    console.log(event.target.value);\r\n    this.totalAmount = 0;\r\n    // comma separator using changeDetector\r\n    const savedInput = this.transAmount;\r\n    // this.transAmount = '';\r\n    // this.changeDef.detectChanges();\r\n    let lastCharIsPoint = false;\r\n    if (savedInput.charAt(savedInput.length - 1) === '.') {\r\n      lastCharIsPoint = true;\r\n    }\r\n    const num = savedInput.replace(/[^0-9.]/g, '');\r\n    this.transAmt = Number(num)||'';\r\n    this.transAmount = this.transAmt.toLocaleString('en-IN');\r\n    if (lastCharIsPoint) {\r\n      this.transAmount = this.transAmount.concat('.');\r\n    }\r\n    this.changeDef.detectChanges();\r\n\r\n    this.balance= localStorage.getItem(\"AccountBal\");\r\n    if(parseFloat(this.balance) < parseFloat(this.transAmt)){\r\n      console.log(\"Bigger\")\r\n      this.snack.open(`Transaction Amount should not exceed than Account Balance`, 'OK', {\r\n        duration: 2000,\r\n        verticalPosition: 'top',\r\n        horizontalPosition: 'right'\r\n      });\r\n      this.enableContinue=false;\r\n    }\r\n    else{\r\n      this.enableContinue=true;\r\n    }\r\n    this.totalTransAmount=Number(this.transAmt) + Number(this.chargeDetails?this.chargeDetails[0].amount:'');\r\n    this.cashdepositForm.controls.totalTransactionAmount.setValue(this.totalTransAmount);\r\n    this.cdr.markForCheck();\r\n    this.cdr.detectChanges();\r\n  }\r\n\r\n  clicked(event) {\r\n    console.log(event);\r\n  }\r\n\r\n  addCurrencyImage(currency) {\r\n    return currency.toLowerCase();\r\n  }\r\n  onCountryChange(country) {\r\n    let currency = country.currencyCode;\r\n    this.currencyImage = 'currency-flag-' + currency.toLowerCase();\r\n  }\r\n\r\n  accountCurrencyImage(accountCurrency) {\r\n    return accountCurrency ? 'currency-flag-' + accountCurrency.toLowerCase() : '';\r\n  }\r\n  omit_number(event) {\r\n    var key;\r\n    key = event.charCode;\r\n    return ((key > 47 && key < 58));\r\n  }\r\n  totalAmountValue(cdForm) {\r\n    this.a = this.cashdepositForm.value.transactionAmount;\r\n    this.a = this.a.replace(/\\,/g, ''); // 1125, but a string, so convert it to number\r\n    this.a = parseInt(this.a, 10);\r\n\r\n    this.cashdepositForm.value.totalAmount =\r\n      ((cdForm.value.count2000 ? cdForm.value.count2000 * 2000 : 0) +\r\n        (cdForm.value.count500 ? cdForm.value.count500 * 500 : 0) +\r\n        (cdForm.value.count200 ? cdForm.value.count200 * 200 : 0) +\r\n        (cdForm.value.count100 ? cdForm.value.count100 * 100 : 0) +\r\n        (cdForm.value.count50 ? cdForm.value.count50 * 50 : 0) +\r\n        (cdForm.value.count20 ? cdForm.value.count20 * 20 : 0) +\r\n        (cdForm.value.count10 ? cdForm.value.count10 * 10 : 0) +\r\n        (cdForm.value.count1 ? cdForm.value.count1 * 1 : 0)\r\n      );\r\n    this.cashdepositForm.value.totalAmount = this.cashdepositForm.value.totalAmount;  \r\n    console.log(this.cashdepositForm.value.totalAmount)\r\n    console.log(this.cashdepositForm.value.transactionAmount);\r\n    this.transamount = this.cashdepositForm.value.transactionAmount;\r\n    this.totalAmount = this.cashdepositForm.value.totalAmount.toLocaleString(\"en-US\");\r\n    if (this.transamount != this.totalAmount) {\r\n      this.enableBtn = false;\r\n    } else {\r\n      this.enableBtn = true;\r\n    }\r\n\r\n    if((this.transamount > this.totalAmount) || (this.transamount < this.totalAmount)){\r\n      this.enableBtn1 = true;\r\n    }\r\n    else{\r\n      this.enableBtn1 = false;\r\n    }\r\n\r\n    this.cashdepositForm.controls.totalAmount.setValue(this.cashdepositForm.value.totalAmount);\r\n\r\n  }\r\n  cashWithdrawlData(){\r\n    this.apiService.getAppointmentId(this.appointmentId.data.appointmentId).subscribe((resp : any)=> {\r\n      console.log(\"resp ::\",resp);\r\n      this.cashData=resp.data;\r\n      this.custID=resp.data.customerId;\r\n      this.ifQRvariable = true;\r\n      this.cashdepositForm.controls.accountType.setValue(resp.data.accountType);\r\n      this.cashdepositForm.controls.accountBranch.setValue(resp.data.accountBranch);\r\n      this.cashdepositForm.controls.accountNumber.setValue(resp.data.accountNumber);\r\n      this.getChargeDetails(resp.data.accountNumber,resp.data.transactionAmount);\r\n      this.cashdepositForm.controls.accountCurrency.setValue(resp.data.accountCurrency);\r\n      this.cashdepositForm.controls.transactionCurrency.setValue(resp.data.transactionCurrency);\r\n      this.cashdepositForm.controls.transactionAmount.setValue(resp.data.transactionAmount);\r\n      this.currencyImage = 'currency-flag-'+resp.data.accountCurrency.toLowerCase();\r\n      this.currencyImage = 'currency-flag-'+resp.data.transactionCurrency.toLowerCase();\r\n      console.log(\"amount::\",this.cashdepositForm.controls.transactionAmount.value)\r\n  \r\n  \r\n    });\r\n  }\r\n  getChargeDetails(accountId,amount){\r\n    this.apiService.fetchChargeDetails(accountId).subscribe(resp => {\r\n  console.log(resp);\r\n  this.chargeDetails=resp;\r\n  this.cashdepositForm.controls.totalChargeAmount.setValue(this.chargeDetails?this.chargeDetails[0].amount:'');\r\n    });\r\n    if(this.cashData){\r\n    setTimeout(() => {\r\n      this.totalTransAmount=Number(this.cashData.transactionAmount) + Number(this.chargeDetails[0].amount);\r\n      this.cashdepositForm.controls.totalTransactionAmount.setValue(this.totalTransAmount);\r\n    }, 1000);\r\n    this.cdr.markForCheck();\r\n    this.cdr.detectChanges();\r\n  }\r\n  else{\r\n    console.log(this.chargeDetails)\r\n    amount=0;\r\n    console.log(amount);\r\n    setTimeout(() => {\r\n      this.totalTransAmount=Number(amount) + Number(this.chargeDetails?this.chargeDetails[0].amount:'');\r\n      console.log(this.totalTransAmount);\r\n      this.cashdepositForm.controls.totalTransactionAmount.setValue(this.totalTransAmount);\r\n    }, 1000);\r\n    this.cdr.markForCheck();\r\n    this.cdr.detectChanges();\r\n  }\r\n\r\n    // console.log(this.totalTransAmount);\r\n  \r\n  }\r\n  onclickofConfirm(cdForm) {\r\n    let denominationData: any = {};\r\n    let denominationDataArray: any[] = [];\r\n\r\n    for (let i = 0; i < this.denomCodeArray.length; i++) {\r\n      if (cdForm.value[this.denomCodeArray[i].key]) {\r\n        // denominationData.transactionId = this.cashdepositFor;\r\n        denominationData.denominationKey = this.denomCodeArray[i].value;\r\n        denominationData.denominationValue = +cdForm.value[this.denomCodeArray[i].key];\r\n        denominationData.currency = this.cashDepositResponse.value.transactionCurrency;\r\n        // denominationData.amountAvailiable = 15200 - (cdForm.value[this.denomCodeArray[i].key] * this.denomCodeArray[i].value);\r\n        denominationDataArray.push(denominationData);\r\n        console.log(denominationDataArray)\r\n        denominationData = {};\r\n      }\r\n    }\r\n  }\r\n  getBankInformation(branchCode:any){\r\n    this.apiService.fetchBankInfoByBranchCode(branchCode).subscribe(resp => {\r\n      console.log(resp)\r\n      this.denomRequired = resp.denomRequired\r\n      if(resp.denomRequired == 'yes'){\r\n        this.enableBtn = false;\r\n        this.enableBtn1 = false;\r\n       }\r\n      \r\n    })\r\n  }\r\n  formatAmount(amount) {\r\n    if(amount){\r\n      return amount && amount.toString().split('.')[0].length > 3 ? amount.toString().substring(0,amount.toString().split('.')[0].length-3).replace(/\\B(?=(\\d{2})+(?!\\d))/g, \",\") + \",\" + amount.toString().substring(amount.toString().split('.')[0].length-3): amount.toString();\r\n     }\r\n  }\r\n}","<div class=\"fullcard\">\r\n    <div fxLayout=\"row\">\r\n        <div fxFlex=\"cashdepositForm.get('transactionAmount').value > 0? 70% : 100%\">\r\n            <h6 class=\"h1\"><span style=\"color:grey;padding-right: 4px;\">Services</span> <b>></b> <span style=\"padding-left: 4px;\"><b>Cash Deposit</b></span></h6>\r\n            <mat-card class=\"chequecard topView\">\r\n                <mat-card-title style=\"padding: 2%;\">\r\n                    <div fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n                        <div>\r\n                            <mat-icon *ngIf=\"phoneNumber\" class=\"backIcon\" (click)=\"goToServiceScreens()\">\r\n                                keyboard_backspace</mat-icon>\r\n                        </div>\r\n                        &nbsp;&nbsp;\r\n                        <div class=\"card-title\">{{titleName}}</div>\r\n                    </div>\r\n                </mat-card-title>\r\n                <mat-card-content>\r\n                    <div class=\"full-width\" style=\"padding: 0% 0% 3% 2%;\">\r\n                        <form [formGroup]=\"cashdepositForm\">\r\n                            <div fxLayout=\"column\" fxLayoutGap=\"3%\" fxLayoutAlign=\"space-between none\">\r\n                                <div>\r\n                                    <div fxLayout=\"row wrap\" class=\"flex-container stretch\">\r\n                                        <ng-container>\r\n\r\n                                            <div fxFlex=\"25%\" fxFlex.xs=\"100%\" *ngIf=\"showAccountNum\" >\r\n                                                <mat-hint class=\"totalAmount\">Account Type*</mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <input matInput type=\"text\" *ngIf=\"phoneNumber && !accountDropdown\" [readonly]=\"true\"\r\n                                                        class=\"full-width\" formControlName=\"accountType\">\r\n                                                        <mat-select *ngIf=\"phoneNumber && accountDropdown\" formControlName=\"accountType\" \r\n                                                        (selectionChange)=\"getAccountType($event.value)\"\r\n                                                        style=\"background-color: #f9fafb;\"\r\n                                                        placeholder=\"Select Account Type\">\r\n                                                        <mat-option *ngFor=\"let type of accounttypeArray \"\r\n                                                            \r\n                                                            [value]=\"type.accountType\">{{type.accountType}}</mat-option>\r\n                                                    </mat-select>\r\n                                                    <!-- <mat-select *ngIf=\"phoneNumber && !accountDropdown\" formControlName=\"accountType\"\r\n                                                        placeholder=\"Select Account Type\" (selectionChange)=\"getAccountType($event.value)\"\r\n                                                        style=\"background-color: #f9fafb;\">\r\n                                                        <mat-option>select</mat-option>\r\n                                                        <mat-option *ngFor=\"let type of accounttypeArray \" (click)=\"custAccountNumber(type)\" [value]=\"type.accountType\"> {{type.accountType}}</mat-option>\r\n                                                    </mat-select> -->\r\n                                                </mat-card>\r\n                                            </div>\r\n\r\n                                        <!-- Account Number Fisrt -->\r\n                                            <div fxFlex=\"25%\" fxFlex.xs=\"100%\" *ngIf=\"!showAccountNum\" >\r\n                                                <mat-hint class=\"totalAmount\">Account Number*</mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <input matInput type=\"text\"  \r\n                                                        class=\"full-width\" formControlName=\"accountNumber\"\r\n                                                        (change)=\"fetchByAccountNum(cashdepositForm.get('accountNumber').value)\">\r\n                                                </mat-card>\r\n                                                    <!-- <mat-hint class=\"totalAmount\" *ngIf=\"!phoneNumber\" >Account Balance :{{curr }} {{accountBal | number: '2.' }}</mat-hint> -->\r\n                                                    <mat-hint class=\"totalAmount\" *ngIf=\"!showAccountNum\" >Account Balance\r\n                                                        :{{curr }} {{formatAmount(accountBal)}}</mat-hint>\r\n                                                    <br>\r\n                                                    <!-- <mat-hint  class=\"totalAmount\" *ngIf=\"!phoneNumber\"  [readonly]=\"true\"  formControlName=\"holderName\">Holder Name :{{userName}}</mat-hint> -->\r\n                                                    <mat-hint class=\"totalAmount\" *ngIf=\"!showAccountNum\" [readonly]=\"true\">\r\n                                                        Holder Name :{{userName}}</mat-hint>\r\n                                            </div>\r\n                                            <div fxFlex=\"25%\" fxFlex.xs=\"100%\" *ngIf=\"showAccountNum\"   >\r\n                                                <mat-hint class=\"totalAmount\">Account Number*</mat-hint>\r\n                                                <mat-card class=\"inputCard\" >\r\n                                                    <input matInput type=\"text\" *ngIf=\"!flag1\" [readonly]=\"true\"\r\n                                                        class=\"full-width\" formControlName=\"accountNumber\">\r\n\r\n                                                    <!-- <mat-select *ngIf=\"phoneNumber\" formControlName=\"accountNumber\"\r\n                                                        style=\"background-color: #f9fafb;\"> -->\r\n                                                    <mat-select *ngIf=\"flag1\" formControlName=\"accountNumber\" (selectionChange)=\"fetchByAccountNum($event.value)\"\r\n                                                        style=\"background-color: #f9fafb;\">\r\n                                                       \r\n                                                            <mat-option>select</mat-option>\r\n                                                            <mat-option *ngFor=\"let id of accountNoList \"  [value]=\"id\">{{id}}</mat-option>\r\n\r\n                                                    </mat-select>\r\n                                                </mat-card>\r\n                                                <!-- <mat-hint class=\"totalAmount\" *ngIf=\"!phoneNumber\" >Account Balance :{{curr }} {{accountBal | number: '2.' }}</mat-hint> -->\r\n                                                <mat-hint class=\"totalAmount\" *ngIf=\"hideDetails\">Account Balance\r\n                                                    : {{curr }}{{formatAmount(accountBal)}}</mat-hint>\r\n                                                <br>\r\n                                                <!-- <mat-hint  class=\"totalAmount\" *ngIf=\"!phoneNumber\"  [readonly]=\"true\"  formControlName=\"holderName\">Holder Name :{{userName}}</mat-hint> -->\r\n                                                <mat-hint class=\"totalAmount\" *ngIf=\"hideDetails\" [readonly]=\"true\">\r\n                                                    Holder Name : {{userName}}</mat-hint>\r\n                                            </div>\r\n                                            <div fxFlex=\"25%\" fxFlex.xs=\"100%\" *ngIf=\"!showAccountNum\" >\r\n                                                <mat-hint class=\"totalAmount\">Account Type*</mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <input matInput type=\"text\"  [readonly]=\"true\" \r\n                                                        class=\"full-width\" formControlName=\"accountType\">\r\n                                    \r\n                                                </mat-card>\r\n                                            </div>\r\n                                            <!-- <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                                <mat-hint class=\"totalAmount\">Holder Name*</mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <!-- <mat-select formControlName=\"holderName\"  style=\"background-color: #f9fafb;\" >\r\n                                                        <mat-option *ngFor=\"let holder of customerName;\" [value]=\"holder\">{{holder}}</mat-option>\r\n                                                    </mat-select> -->\r\n                                            <!-- <input matInput type=\"text\" *ngIf=\"!phoneNumber\"  [readonly]=\"true\" class=\"full-width\" formControlName=\"holderName\" >\r\n                                                    <input matInput type=\"text\" *ngIf=\"phoneNumber\"  [readonly]=\"true\" class=\"full-width\" formControlName=\"holderName\" >\r\n                                                </mat-card> -->\r\n                                            <!-- </div>  -->\r\n                                            \r\n\r\n                                            <div fxFlex=\"25%\" fxFlex.xs=\"100%\">\r\n                                                <mat-hint class=\"accountBranch\">Account Branch*</mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <input matInput *ngIf=\"!phoneNumber\" type=\"text\"\r\n                                                    [readonly]=\"true\" class=\"full-width\"\r\n                                                    formControlName=\"accountBranch\">\r\n\r\n                                                <input matInput *ngIf=\"phoneNumber\" type=\"text\"\r\n                                                    [readonly]=\"true\" class=\"full-width\"\r\n                                                    formControlName=\"accountBranch\">\r\n                                                </mat-card>\r\n                                                <mat-error\r\n                                                    *ngIf=\"cashdepositForm.get('accountBranch').touched && !cashdepositForm.get('accountBranch').valid\">\r\n                                                    Account Branch is Required!\r\n                                                </mat-error>\r\n                                            </div>\r\n                                        </ng-container>\r\n                                    </div>\r\n                                </div>\r\n                                <div>\r\n                                    <div fxLayout=\"row wrap\" class=\"flex-container stretch\">\r\n                                        <ng-container>\r\n                                            <div fxFlex=\"25%\" fxFlex.xs=\"100%\">\r\n                                                <mat-hint class=\"totalAmount\">Account Currency*</mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <div fxLayout=\"row wrap\" class=\"full-width\">\r\n                                                        <div fxFlex=\"25%\">\r\n\r\n                                                            <div *ngIf=\"ifQRvariable\"\r\n                                                                class=\"currency-flag {{isedit?accountCurrencyImage(cashdepositForm.controls['accountCurrency'].value):currencyImage}}\"></div>\r\n                                                            <div *ngIf=\"!ifQRvariable\"\r\n                                                                class=\"currency-flag {{!isedit?accountCurrencyImage(cashdepositForm.controls['accountCurrency'].value):currencyImage}}\">\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div fxFlex=\"75%\">\r\n                                                            <input matInput *ngIf=\"!phoneNumber\" type=\"text\"\r\n                                                                [readonly]=\"true\" class=\"full-width\" style=\"font-size:110%\"\r\n                                                                formControlName=\"accountCurrency\">\r\n\r\n                                                            <input matInput *ngIf=\"phoneNumber\" type=\"text\"\r\n                                                                [readonly]=\"true\" class=\"full-width\" style=\"font-size:110%\"\r\n                                                                formControlName=\"accountCurrency\">\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </mat-card>\r\n                                            </div>\r\n                                            <div fxFlex=\"25%\" fxFlex.xs=\"100%\" *ngIf=\"showAccountNum\">\r\n                                                <mat-hint class=\"totalAmount\">Transaction Currency* </mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <div fxLayout=\"row wrap\" class=\"full-width\">\r\n                                                        <div fxFlex=\"25%\">\r\n                                                            <div class=\"currency-flag {{currencyImage}}\"></div>\r\n                                                        </div>\r\n                                                        <div fxFlex=\"75%\">\r\n                                                            <input matInput type=\"text\" *ngIf=\"!phoneNumber\"\r\n                                                                [readonly]=\"true\" class=\"full-width\"\r\n                                                                formControlName=\"transactionCurrency\">\r\n\r\n                                                            <mat-select formControlName=\"transactionCurrency\"\r\n                                                                *ngIf=\"phoneNumber\"\r\n                                                                placeholder=\"Select Transaction Currency\"\r\n                                                                id=\"testSelect\" style=\"background-color: #f9fafb;\"\r\n                                                                [disabled]=\"isedit\">\r\n                                                                <mat-option\r\n                                                                    *ngFor=\"let country of countryValues; let i = index\"\r\n                                                                    (click)=\"onCountryChange(country)\" style=\"font-size:110%\"\r\n                                                                    [value]=\"country.currencyCode\">\r\n                                                                    <div fxLayout=\"row wrap\" class=\"full-width\">\r\n                                                                        <div fxFlex=\"15%\">{{country.currencyCode}}</div>\r\n                                                                        <div fxFlex=\"85%\">\r\n                                                                            <div\r\n                                                                                class=\"currency-flag currency-flag-{{addCurrencyImage(country.currencyCode)}} alignImage\">\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </mat-option>\r\n                                                            </mat-select>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </mat-card>\r\n                                            </div>\r\n                                            <div fxFlex=\"25%\" fxFlex.xs=\"100%\" *ngIf=\"!showAccountNum\">\r\n                                                <mat-hint class=\"totalAmount\">Transaction Currency* </mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <div fxLayout=\"row wrap\" class=\"full-width\">\r\n                                                        <div fxFlex=\"25%\">\r\n                                                            <div class=\"currency-flag {{currencyImage}}\"></div>\r\n                                                        </div>\r\n                                                        <div fxFlex=\"75%\">\r\n                                                            <mat-select formControlName=\"transactionCurrency\"\r\n                                                                placeholder=\"Select Transaction Currency\"\r\n                                                                id=\"testSelect\" style=\"background-color: #f9fafb;\"\r\n                                                                >\r\n                                                                <mat-option\r\n                                                                    *ngFor=\"let country of countryValues; let i = index\"\r\n                                                                    (click)=\"onCountryChange(country)\" style=\"font-size:110%\"\r\n                                                                    [value]=\"country.currencyCode\">\r\n                                                                    <div fxLayout=\"row wrap\" class=\"full-width\">\r\n                                                                        <div fxFlex=\"15%\">{{country.currencyCode}}</div>\r\n                                                                        <div fxFlex=\"85%\">\r\n                                                                            <div\r\n                                                                                class=\"currency-flag currency-flag-{{addCurrencyImage(country.currencyCode)}} alignImage\">\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </mat-option>\r\n                                                            </mat-select>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </mat-card>\r\n                                            </div>\r\n                                            <div fxFlex=\"25.5%\" fxFlex.xs=\"100%\" *ngIf=\"showAccountNum\">\r\n                                                <mat-hint class=\"totalAmount\">Transaction Amount*</mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <input matInput type=\"text\" *ngIf=\"!phoneNumber\" [readonly]=\"true\"\r\n                                                        class=\"full-width\" formControlName=\"transactionAmount\">\r\n                                                    <input matInput *ngIf=\"phoneNumber\" class=\"full-width\" #myRef\r\n                                                        [(ngModel)]=\"transAmount\" formControlName=\"transactionAmount\"\r\n                                                        [value]=\"transAmt | number: '1.'\" (keyup)=\"OnInput($event)\"\r\n                                                        (focus)=\"clicked($event)\" [readonly]=\"isedit\">\r\n                                                </mat-card>\r\n                                                <mat-error *ngIf=\"cashdepositForm.get('transactionAmount').errors?.min\">\r\n                                                    Amount must be greater than zero\r\n                                                </mat-error>\r\n                                            </div>\r\n                                            <div fxFlex=\"25.5%\" fxFlex.xs=\"100%\" *ngIf=\"!showAccountNum\">\r\n                                                <mat-hint class=\"totalAmount\">Transaction Amount*</mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <input matInput class=\"full-width\" #myRef\r\n                                                        [(ngModel)]=\"transAmount\" formControlName=\"transactionAmount\"\r\n                                                        [value]=\"transAmt | number: '2.'\" (keyup)=\"OnInput($event)\"\r\n                                                        (focus)=\"clicked($event)\" >\r\n                                                </mat-card>\r\n                                                <mat-error *ngIf=\"cashdepositForm.get('transactionAmount').errors?.min\">\r\n                                                    Amount must be greater than zero\r\n                                                </mat-error>\r\n                                            </div>\r\n                                            <div fxFlex=\"25%\" fxFlex.xs=\"100%\">\r\n                                                <mat-hint class=\"totalAmount\">Total Charge Amount*</mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <input matInput class=\"full-width\" readonly formControlName=\"totalChargeAmount\">\r\n                                                </mat-card>\r\n                                               \r\n                                            </div>\r\n                                            <div fxFlex=\"25%\" fxFlex.xs=\"100%\">\r\n                                                <mat-hint class=\"totalAmount\">Total Transaction Amount*</mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <input matInput class=\"full-width\" readonly formControlName=\"totalTransactionAmount\">\r\n                                                </mat-card>\r\n                                               \r\n                                            </div>\r\n                                            <div class=\"tooltip\">\r\n                                                <img width=\"80%\"\r\n                                            [src]=\"'assets/images/info.svg'\"/>\r\n                                                <div class=\"tooltiptext\">\r\n                                                    <p class=\"totalAmount textcolor\" style=\"margin-top:10px; margin-bottom:6px\">Transaction Amount:{{cashdepositForm.get('transactionAmount').value}} </p>\r\n                                                    <p class=\"totalAmount textcolor\">Total Charge Amount:{{cashdepositForm.get('totalChargeAmount').value}} </p>\r\n                                                    <hr/>\r\n                                                    <p class=\"totalAmount textcolor\" style=\"margin-right:10px ;\">Total Transaction Amount:{{cashdepositForm.get('totalTransactionAmount').value}} </p>\r\n                                                </div>\r\n                                            </div>\r\n                                        </ng-container>\r\n                                    </div>\r\n                                </div>\r\n                                <!-- <div>\r\n                                    <div fxLayout=\"row wrap\" class=\"flex-container stretch\">\r\n                                        <ng-container>\r\n                                            <div fxFlex=\"30%\" fxFlex.xs=\"100%\" style=\"padding: 0% 1%;\">\r\n                                                <button mat-flat-button *ngIf=\"phoneNumber\" class=\"buttonCancel full-width\"\r\n                                                    (click)=\"goToServiceScreens()\">CANCEL</button>\r\n                                            </div>\r\n                                            <div fxFlex=\"70%\" fxFlex.xs=\"100%\" style=\"padding: 0% 2%;\">\r\n                                                <button mat-flat-button class=\"buttonNext full-width\"\r\n                                                [disabled]=\"!enableContinue || !cashdepositForm.get('transactionAmount').valid \r\n                                                ||!cashdepositForm.get('transactionCurrency').valid\r\n                                                ||!cashdepositForm.get('accountType').valid\r\n                                                ||!cashdepositForm.get('holderName').valid\r\n                                                ||!cashdepositForm.get('accountNumber').valid\r\n                                                ||!cashdepositForm.get('accountCurrency').valid ||!cashdepositForm.get('totalAmount').valid\"\r\n\r\n                                                    (click)=\"onSaveofcashDeposit(cashdepositForm.value,ifQRvariable)\">CONTINUE</button>\r\n                                            </div>\r\n                                        </ng-container>\r\n                                    </div>\r\n                                </div> -->\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </mat-card-content>\r\n            </mat-card>\r\n        </div>\r\n        <div *ngIf=\"(denomRequired == 'yes') && (cashdepositForm.get('transactionAmount').value > 0 || transAmt > 0)\" fxFlex=\"30%\">\r\n            <form #cdForm=\"ngForm\">\r\n                <mat-card class=\"border-align\">\r\n                    <div fxLayout=\"row\" class=\"pH10 full-width\">\r\n\r\n                        <h4 class=\"title-Font\">Denomination</h4>\r\n                    </div>\r\n                    <div class=\"pH10 full-width\" id=\"denominationDiv\">\r\n                        <div class=\"paddingclass\" fxLayoutAlign=\"center center\"\r\n                            *ngIf=\"cashdepositForm.value.transactionCurrency == 'INR'\">\r\n                            <div fxFlex=\"20%\">\r\n                                <p class=\"quantityClass text-small\">2000</p>\r\n                            </div>\r\n                            <div fxFlex=\"10%\">\r\n                                <p class=\"operationTypeClass text-small\">x</p>\r\n                            </div>\r\n                            <div fxFlex=\"70%\">\r\n                                <mat-card class=\"inputCard\">\r\n                                    <div>\r\n                                        <input class=\"full-width inputClass\" type=\"text\"\r\n                                            (keyup)=\"totalAmountValue(cdForm)\" (keypress)=\"omit_number($event)\" matInput\r\n                                            name=\"count2000\" ngModel #count2000>\r\n                                    </div>\r\n                                </mat-card>\r\n                                <div class=\"pl10\">\r\n                                    <mat-error *ngIf=\"denominationlimit && count2000.value > denominationLimit[2000]\">\r\n                                        Please enter <= {{denominationLimit[2000]}} </mat-error> </div> </div> </div>\r\n                                            <div class=\"paddingclass\" fxLayoutAlign=\"start center\"\r\n                                            *ngIf=\"cashdepositForm.value.transactionCurrency == 'INR' || cashdepositForm.value.transactionCurrency == 'USD' || cashdepositForm.value.transactionCurrency == 'AED'\">\r\n                                            <div fxFlex=\"20%\">\r\n                                                <p class=\"quantityClass text-small\">500</p>\r\n                                            </div>\r\n                                            <div fxFlex=\"10%\">\r\n                                                <p class=\"operationTypeClass text-small\">x</p>\r\n                                            </div>\r\n                                            <div fxFlex=\"70%\">\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <input class=\"full-width inputClass\" type=\"text\"\r\n                                                        (keyup)=\"totalAmountValue(cdForm)\"\r\n                                                        (keypress)=\"omit_number($event)\" matInput name=\"count500\"\r\n                                                        ngModel #count500>\r\n                                                </mat-card>\r\n                                                <div class=\"pl10\">\r\n                                                    <mat-error\r\n                                                        *ngIf=\"denominationlimit && count500.value > denominationLimit[500]\">\r\n                                                        Please enter <= {{denominationLimit[500]}} </mat-error> </div>\r\n                                                            </div> </div> <div class=\"paddingclass\"\r\n                                                            fxLayoutAlign=\"start center\"\r\n                                                            *ngIf=\"cashdepositForm.value.transactionCurrency == 'INR'\">\r\n                                                            <div fxFlex=\"20%\">\r\n                                                                <p class=\"quantityClass text-small\">200</p>\r\n                                                            </div>\r\n                                                            <div fxFlex=\"10%\">\r\n                                                                <p class=\"operationTypeClass text-small\">x</p>\r\n                                                            </div>\r\n                                                            <div fxFlex=\"70%\">\r\n                                                                <mat-card class=\"inputCard\">\r\n                                                                    <input class=\"full-width inputClass\" type=\"text\"\r\n                                                                        (keyup)=\"totalAmountValue(cdForm)\"\r\n                                                                        (keypress)=\"omit_number($event)\" matInput\r\n                                                                        name=\"count200\" ngModel #count200>\r\n                                                                </mat-card>\r\n                                                                <div class=\"pl10\">\r\n                                                                    <mat-error\r\n                                                                        *ngIf=\"denominationlimit && count200.value > denominationLimit[200]\">\r\n                                                                        Please enter <= {{denominationLimit[200]}}\r\n                                                                            </mat-error> </div> </div> </div> <div\r\n                                                                            class=\"paddingclass\"\r\n                                                                            fxLayoutAlign=\"start center\"\r\n                                                                            *ngIf=\"cashdepositForm.value.transactionCurrency == 'INR' || cashdepositForm.value.transactionCurrency == 'USD' || cashdepositForm.value.transactionCurrency == 'AED'\">\r\n                                                                            <div fxFlex=\"20%\">\r\n                                                                                <p class=\"quantityClass text-small\">100\r\n                                                                                </p>\r\n                                                                            </div>\r\n                                                                            <div fxFlex=\"10%\">\r\n                                                                                <p\r\n                                                                                    class=\"operationTypeClass text-small\">\r\n                                                                                    x</p>\r\n                                                                            </div>\r\n                                                                            <div fxFlex=\"70%\">\r\n                                                                                <mat-card class=\"inputCard\">\r\n                                                                                    <input class=\"full-width inputClass\"\r\n                                                                                        type=\"text\"\r\n                                                                                        (keyup)=\"totalAmountValue(cdForm)\"\r\n                                                                                        (keypress)=\"omit_number($event)\"\r\n                                                                                        matInput name=\"count100\" ngModel\r\n                                                                                        #count100>\r\n                                                                                </mat-card>\r\n                                                                                <div class=\"pl10\">\r\n                                                                                    <mat-error\r\n                                                                                        *ngIf=\"denominationlimit && count100.value > denominationLimit[100]\">\r\n                                                                                        Please enter <=\r\n                                                                                            {{denominationLimit[100]}}\r\n                                                                                            </mat-error> </div> </div>\r\n                                                                                            </div> <div\r\n                                                                                            class=\"paddingclass\"\r\n                                                                                            fxLayoutAlign=\"start center\"\r\n                                                                                            *ngIf=\"cashdepositForm.value.transactionCurrency == 'INR' || cashdepositForm.value.transactionCurrency == 'USD'\">\r\n                                                                                            <div fxFlex=\"20%\">\r\n                                                                                                <p\r\n                                                                                                    class=\"quantityClass text-small\">\r\n                                                                                                    50</p>\r\n                                                                                            </div>\r\n                                                                                            <div fxFlex=\"10%\">\r\n                                                                                                <p\r\n                                                                                                    class=\"operationTypeClass text-small\">\r\n                                                                                                    x</p>\r\n                                                                                            </div>\r\n                                                                                            <div fxFlex=\"70%\">\r\n                                                                                                <mat-card\r\n                                                                                                    class=\"inputCard\">\r\n                                                                                                    <input\r\n                                                                                                        class=\"full-width inputClass\"\r\n                                                                                                        type=\"text\"\r\n                                                                                                        (keyup)=\"totalAmountValue(cdForm)\"\r\n                                                                                                        (keypress)=\"omit_number($event)\"\r\n                                                                                                        matInput\r\n                                                                                                        name=\"count50\"\r\n                                                                                                        ngModel\r\n                                                                                                        #count50>\r\n                                                                                                </mat-card>\r\n                                                                                                <div class=\"pl10\">\r\n                                                                                                    <mat-error\r\n                                                                                                        *ngIf=\"denominationlimit && count50.value > denominationLimit[50]\">\r\n                                                                                                        Please enter <=\r\n                                                                                                            {{denominationLimit[50]}}\r\n                                                                                                            </mat-error>\r\n                                                                                                            </div>\r\n                                                                                                            </div>\r\n                                                                                                            </div> <div\r\n                                                                                                            class=\"paddingclass\"\r\n                                                                                                            fxLayoutAlign=\"start center\"\r\n                                                                                                            *ngIf=\"cashdepositForm.value.transactionCurrency == 'INR'\">\r\n                                                                                                            <div\r\n                                                                                                                fxFlex=\"20%\">\r\n                                                                                                                <p\r\n                                                                                                                    class=\"quantityClass text-small\">\r\n                                                                                                                    20\r\n                                                                                                                </p>\r\n                                                                                                            </div>\r\n                                                                                                            <div\r\n                                                                                                                fxFlex=\"10%\">\r\n                                                                                                                <p\r\n                                                                                                                    class=\"operationTypeClass text-small\">\r\n                                                                                                                    x\r\n                                                                                                                </p>\r\n                                                                                                            </div>\r\n                                                                                                            <div\r\n                                                                                                                fxFlex=\"70%\">\r\n                                                                                                                <mat-card\r\n                                                                                                                    class=\"inputCard\">\r\n                                                                                                                    <input\r\n                                                                                                                        class=\"full-width inputClass\"\r\n                                                                                                                        type=\"text\"\r\n                                                                                                                        (keyup)=\"totalAmountValue(cdForm)\"\r\n                                                                                                                        (keypress)=\"omit_number($event)\"\r\n                                                                                                                        matInput\r\n                                                                                                                        name=\"count20\"\r\n                                                                                                                        ngModel\r\n                                                                                                                        #count20>\r\n                                                                                                                </mat-card>\r\n                                                                                                                <div\r\n                                                                                                                    class=\"pl10\">\r\n                                                                                                                    <mat-error\r\n                                                                                                                        *ngIf=\"denominationlimit && count20.value > denominationLimit[20]\">\r\n                                                                                                                        Please\r\n                                                                                                                        enter\r\n                                                                                                                        <= {{denominationLimit[20]}}\r\n                                                                                                                            </mat-error>\r\n                                                                                                                            </div>\r\n                                                                                                                            </div>\r\n                                                                                                                            </div>\r\n                                                                                                                            <div\r\n                                                                                                                            class=\"paddingclass\"\r\n                                                                                                                            fxLayoutAlign=\"start center\"\r\n                                                                                                                            *ngIf=\"cashdepositForm.value.transactionCurrency == 'INR'\">\r\n                                                                                                                            <div\r\n                                                                                                                                fxFlex=\"20%\">\r\n                                                                                                                                <p\r\n                                                                                                                                    class=\"quantityClass text-small\">\r\n                                                                                                                                    10\r\n                                                                                                                                </p>\r\n                                                                                                                            </div>\r\n                                                                                                                            <div\r\n                                                                                                                                fxFlex=\"10%\">\r\n                                                                                                                                <p\r\n                                                                                                                                    class=\"operationTypeClass text-small\">\r\n                                                                                                                                    x\r\n                                                                                                                                </p>\r\n                                                                                                                            </div>\r\n                                                                                                                            <div\r\n                                                                                                                                fxFlex=\"70%\">\r\n                                                                                                                                <mat-card\r\n                                                                                                                                    class=\"inputCard\">\r\n                                                                                                                                    <input\r\n                                                                                                                                        class=\"full-width inputClass\"\r\n                                                                                                                                        type=\"text\"\r\n                                                                                                                                        (keyup)=\"totalAmountValue(cdForm)\"\r\n                                                                                                                                        (keypress)=\"omit_number($event)\"\r\n                                                                                                                                        matInput\r\n                                                                                                                                        name=\"count10\"\r\n                                                                                                                                        ngModel\r\n                                                                                                                                        #count10>\r\n                                                                                                                                </mat-card>\r\n                                                                                                                                <div\r\n                                                                                                                                    class=\"pl10\">\r\n                                                                                                                                    <mat-error\r\n                                                                                                                                        *ngIf=\"denominationlimit && count10.value > denominationLimit[10]\">\r\n                                                                                                                                        Please\r\n                                                                                                                                        enter\r\n                                                                                                                                        <= {{denominationLimit[10]}}\r\n                                                                                                                                            </mat-error>\r\n                                                                                                                                            </div>\r\n                                                                                                                                            </div>\r\n                                                                                                                                            </div>\r\n                                                                                                                                            <div\r\n                                                                                                                                            class=\"paddingclass\"\r\n                                                                                                                                            fxLayoutAlign=\"start center\"\r\n                                                                                                                                            *ngIf=\"cashdepositForm.value.transactionCurrency == 'INR' || cashdepositForm.value.transactionCurrency == 'USD' || cashdepositForm.value.transactionCurrency == 'AED'\">\r\n                                                                                                                                            <div\r\n                                                                                                                                                fxFlex=\"20%\">\r\n                                                                                                                                                <p\r\n                                                                                                                                                    class=\"quantityClass text-small\">\r\n                                                                                                                                                    1\r\n                                                                                                                                                </p>\r\n                                                                                                                                            </div>\r\n                                                                                                                                            <div\r\n                                                                                                                                                fxFlex=\"10%\">\r\n                                                                                                                                                <p\r\n                                                                                                                                                    class=\"operationTypeClass text-small\">\r\n                                                                                                                                                    x\r\n                                                                                                                                                </p>\r\n                                                                                                                                            </div>\r\n                                                                                                                                            <div\r\n                                                                                                                                                fxFlex=\"70%\">\r\n                                                                                                                                                <mat-card\r\n                                                                                                                                                    class=\"inputCard\">\r\n                                                                                                                                                    <input\r\n                                                                                                                                                        class=\"full-width inputClass\"\r\n                                                                                                                                                        type=\"text\"\r\n                                                                                                                                                        (keyup)=\"totalAmountValue(cdForm)\"\r\n                                                                                                                                                        (keypress)=\"omit_number($event)\"\r\n                                                                                                                                                        matInput\r\n                                                                                                                                                        name=\"count1\"\r\n                                                                                                                                                        ngModel\r\n                                                                                                                                                        #count10>\r\n                                                                                                                                                </mat-card>\r\n                                                                                                                                            </div>\r\n                                                                                                                                </div>\r\n                                                                                                                            </div>\r\n                                                                                                                            <div fxLayout=\"row wrap\"\r\n                                                                                                                                class=\"pH10 full-width\">\r\n                                                                                                                                <div fxFlex=\"53%\"\r\n                                                                                                                                    fxFlex.xs=\"100%\">\r\n                                                                                                                                    <p\r\n                                                                                                                                        class=\"totalAmount\">\r\n                                                                                                                                        Total\r\n                                                                                                                                        Amount\r\n                                                                                                                                    </p>\r\n                                                                                                                                    <mat-card\r\n                                                                                                                                        class=\"inputCard\">\r\n                                                                                                                                        <input\r\n                                                                                                                                            class=\"full-width inputClass\"\r\n                                                                                                                                            [(ngModel)]=\"totalAmount\"\r\n                                                                                                                                            matInput\r\n                                                                                                                                            name=\"totalAmount\"\r\n                                                                                                                                            readonly>\r\n                                                                                                                                    </mat-card>\r\n                                                                                                                                    <div\r\n                                                                                                                                        class=\"pl10\" style=\"width: 150%;\">\r\n                                                                                                                                        <mat-error\r\n                                                                                                                                        *ngIf=\"enableBtn1\">\r\n                                                                                                                                            Total\r\n                                                                                                                                            amount\r\n                                                                                                                                            should\r\n                                                                                                                                            be\r\n                                                                                                                                            equal\r\n                                                                                                                                            to\r\n                                                                                                                                            {{cashdepositForm.value.transactionAmount}}\r\n                                                                                                                                        </mat-error>\r\n                                                                                                                                    </div>\r\n                                                                                                                                </div>\r\n                                                                                                                            </div>\r\n                </mat-card>\r\n            </form>\r\n        </div>\r\n    </div>\r\n\r\n\r\n\r\n    <div>\r\n        <div fxLayout=\"row wrap\" class=\"flex-container stretch\" id=\"buttonDiv\">\r\n            <ng-container>\r\n                <div fxFlex=\"30%\" fxFlex.xs=\"100%\" class=\"paddingCls\">\r\n                    <button mat-flat-button *ngIf=\"phoneNumber\" class=\"buttonCancel full-width\"\r\n                        (click)=\"goToServiceScreens()\">CANCEL</button>\r\n                </div>\r\n                <div fxFlex=\"70%\" fxFlex.xs=\"100%\" class=\"paddingCls\" *ngIf=\"showAccountNum\" >\r\n                    <button mat-flat-button class=\"buttonNext full-width\" [disabled]=\"!enableContinue\r\n                    || !cashdepositForm.get('transactionAmount').valid \r\n                    ||!cashdepositForm.get('transactionCurrency').valid\r\n                    ||!cashdepositForm.get('accountType').valid\r\n                    ||!cashdepositForm.get('accountNumber').valid\r\n                    ||!cashdepositForm.get('accountCurrency').valid\r\n                    ||!cashdepositForm.get('totalChargeAmount').valid\r\n                    ||!cashdepositForm.get('totalTransactionAmount').valid\"\r\n                        (click)=\"onSaveofcashDeposit(cashdepositForm.value,ifQRvariable,cdForm)\">GENERATE TOKEN</button>\r\n                </div>\r\n\r\n                <div fxFlex=\"70%\" fxFlex.xs=\"100%\" class=\"paddingCls\" *ngIf=\"!showAccountNum\" >\r\n                    <button mat-flat-button class=\"buttonNext full-width\" [disabled]=\"!enableContinue \r\n                    || !cashdepositForm.get('transactionAmount').valid \r\n                    ||!cashdepositForm.get('transactionCurrency').valid\r\n                    ||!cashdepositForm.get('accountType').valid\r\n                    ||!cashdepositForm.get('accountNumber').valid\r\n                    ||!cashdepositForm.get('accountCurrency').valid\r\n                    ||!cashdepositForm.get('totalChargeAmount').valid\r\n                    ||!cashdepositForm.get('totalTransactionAmount').valid\" \r\n                        (click)=\"getOTP(cashdepositForm.value,ifQRvariable,cdForm);\" >CONTINUE</button>\r\n                </div>\r\n            </ng-container>\r\n        </div>\r\n    </div>\r\n\r\n\r\n\r\n\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl, FormBuilder, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { DialogService } from 'app/shared/services/Dialog/dialog.service';\r\n\r\ninterface Testing {\r\n  value: string;\r\n  viewValue: string;\r\n}\r\n\r\n\r\n@Component({\r\n  selector: 'app-utility-billpayment',\r\n  templateUrl: './utility-billpayment.component.html',\r\n  styleUrls: ['./utility-billpayment.component.scss']\r\n})\r\nexport class UtilityBillpaymentComponent implements OnInit {\r\n  utilityBillPaymentForm: FormGroup;\r\n  utilityBillpayment : any = 'Utility Bill Payment';\r\n  constructor(private router : Router, private formBuilder: FormBuilder,  private dialogService : DialogService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.utilityBillPaymentForm = this.formBuilder.group({\r\n      billerName:['', [Validators.required]],\r\n      amount:['', [Validators.required]],\r\n      payFromAcc:['', [Validators.required]],\r\n      billDate:['', [Validators.required]],\r\n      billNumber:['', [Validators.required]],\r\n    });\r\n  }\r\n  goToServiceScreens(){\r\n    this.router.navigateByUrl('/others/services');\r\n  }\r\n  goToAuthenticate(){\r\n    this.dialogService.authenticationDialog();\r\n  }\r\n\r\n  testing: Testing[] = [\r\n    { value: 'Demo', viewValue: 'Demo 1' },\r\n    { value: 'Demo', viewValue: 'Demo 2' },\r\n    { value: 'Demo', viewValue: 'Demo 3' }\r\n  ];\r\n\r\n}\r\n","<div class=\"fullcard\">\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"center center\">\r\n        <div fxFlex=\"80%\">\r\n            <mat-card class=\"chequecard\">\r\n                <mat-card-title style=\"padding: 2%;\">\r\n                    <div fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n                        <div>\r\n                            <mat-icon class=\"backIcon\" (click)=\"goToServiceScreens()\">keyboard_backspace</mat-icon>\r\n                        </div> &nbsp;&nbsp;\r\n                        <div class=\"card-title\">Utility Bill Payment</div>\r\n                    </div>\r\n                </mat-card-title>\r\n                <mat-card-content>\r\n                    <div class=\"full-width\" style=\"padding: 0% 3% 3% 2%;\">\r\n                        <!-- <form #utilityBillPaymentForm=\"ngForm\"> -->\r\n                        <form [formGroup]=\"utilityBillPaymentForm\">\r\n                            <div fxLayout=\"column\" fxLayoutGap=\"5%\" fxLayoutAlign=\"space-between none\">\r\n                                <div>\r\n                                    <div fxLayout=\"row wrap\" class=\"flex-container stretch\">\r\n                                        <ng-container>\r\n                                            <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                                <mat-hint class=\"totalAmount\">Biller Name*</mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <input matInput formControlName=\"billerName\" class=\"full-width inputClass\" type=\"text\"\r\n                                                        name=\"billerName\">\r\n                                                </mat-card>\r\n                                            </div>\r\n                                            <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                                <mat-hint class=\"totalAmount\"> Amount*</mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <input matInput formControlName=\"amount\" type=\"text\" class=\"full-width inputClass\"\r\n                                                        name=\"amount\">\r\n                                                </mat-card>\r\n                                            </div>\r\n                                            <div fxFlex=\"34%\" fxFlex.xs=\"100%\">\r\n                                                <mat-hint class=\"totalAmount\">Pay from Account* </mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <input matInput formControlName=\"payFromAcc\" type=\"text\" class=\"full-width inputClass\"\r\n                                                        name=\"payFromAcc\">\r\n                                                </mat-card>\r\n                                            </div>\r\n                                        </ng-container>\r\n                                    </div>\r\n                                </div>\r\n                                <div>\r\n                                    <span layout=\"row\">\r\n                                        <hr class=\"line\" flex />\r\n                                    </span>\r\n                                </div>\r\n                                <div>\r\n                                    <div fxLayout=\"row wrap\" class=\"flex-container stretch\">\r\n                                        <ng-container>\r\n                                            <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                                <mat-hint class=\"totalAmount\">Bill Date*</mat-hint>\r\n                                                <mat-card class=\"inputCard heightAdjust\">\r\n                                                    <input matInput formControlName=\"billDate\" [matDatepicker]=\"picker\"\r\n                                                        class=\"inputWidth inputClass\">\r\n                                                    <mat-datepicker-toggle style=\"margin-left: 15%;\" matSuffix\r\n                                                        [for]=\"picker\">\r\n                                                    </mat-datepicker-toggle>\r\n                                                    <mat-datepicker #picker></mat-datepicker>\r\n                                                </mat-card>\r\n                                            </div>\r\n                                            <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                                <mat-hint class=\"totalAmount\">Bill Number* </mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <mat-select formControlName=\"billNumber\" class=\"full-width\" style=\"background-color: #f9fafb;\">\r\n                                                        <mat-option *ngFor=\"let test of testing\" [value]=\"test.value\">\r\n                                                            {{test.viewValue}}\r\n                                                        </mat-option>\r\n                                                    </mat-select>\r\n                                                </mat-card>\r\n                                            </div>\r\n                                            <div fxFlex=\"34%\" fxFlex.xs=\"100%\">\r\n                                                <mat-hint class=\"totalAmount\">Remark</mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <textarea class=\"full-width inputClass\" rows=\"5\" cols=\"6\">\r\n                                                </textarea>\r\n                                                </mat-card>\r\n                                            </div>\r\n                                        </ng-container>\r\n                                    </div>\r\n                                </div>\r\n                                <div>\r\n                                    <div fxLayout=\"row wrap\" class=\"flex-container stretch\">\r\n                                        <ng-container>\r\n                                            <div fxFlex=\"30%\" fxFlex.xs=\"100%\" style=\"padding: 0% 1%;\">\r\n                                                <button mat-flat-button class=\"buttonCancel full-width\"\r\n                                                    (click)=\"goToServiceScreens()\">CANCEL</button>\r\n                                            </div>\r\n                                            <div fxFlex=\"100%\" fxFlex.xs=\"100%\" style=\"padding: 0% 2%;\">\r\n                                                <button mat-flat-button class=\"buttonNext full-width\"\r\n                                                [disabled]=\" !utilityBillPaymentForm.get('billerName').valid\r\n                                                || !utilityBillPaymentForm.get('amount').valid\r\n                                                || !utilityBillPaymentForm.get('payFromAcc').valid\r\n                                                || !utilityBillPaymentForm.get('billDate').valid\r\n                                                || !utilityBillPaymentForm.get('billNumber').valid \"\r\n                                                    (click)=\"goToAuthenticate()\">CONTINUE</button>\r\n                                            </div>\r\n                                        </ng-container>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </mat-card-content>\r\n            </mat-card>\r\n        </div>\r\n    </div>\r\n</div>","import { Directive, ElementRef, HostListener } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[appOnlynumber]'\r\n})\r\nexport class OnlynumberDirective {\r\n\r\n  private navigationKeys = [\r\n    'Backspace',\r\n    'Delete',\r\n    'Tab',\r\n    'Escape',\r\n    'Enter',\r\n    'Home',\r\n    'End',\r\n    'ArrowLeft',\r\n    'ArrowRight',\r\n    'Clear',\r\n    'Copy',\r\n    'Paste'\r\n  ];\r\n  inputElement: HTMLElement;\r\n  constructor(public el: ElementRef) {\r\n    this.inputElement = el.nativeElement;\r\n  }\r\n\r\n  @HostListener('keydown', ['$event'])\r\n  onKeyDown(e: KeyboardEvent) {\r\n    if (\r\n      this.navigationKeys.indexOf(e.key) > -1 || // Allow: navigation keys: backspace, delete, arrows etc.\r\n      (e.key === 'a' && e.ctrlKey === true) || // Allow: Ctrl+A\r\n      (e.key === 'c' && e.ctrlKey === true) || // Allow: Ctrl+C\r\n      (e.key === 'v' && e.ctrlKey === true) || // Allow: Ctrl+V\r\n      (e.key === 'x' && e.ctrlKey === true) || // Allow: Ctrl+X\r\n      (e.key === 'a' && e.metaKey === true) || // Allow: Cmd+A (Mac)\r\n      (e.key === 'c' && e.metaKey === true) || // Allow: Cmd+C (Mac)\r\n      (e.key === 'v' && e.metaKey === true) || // Allow: Cmd+V (Mac)\r\n      (e.key === 'x' && e.metaKey === true) // Allow: Cmd+X (Mac)\r\n    ) {\r\n      // let it happen, don't do anything\r\n      return;\r\n    }\r\n    // Ensure that it is a number and stop the keypress\r\n    if (\r\n      (e.shiftKey || (e.keyCode < 48 || e.keyCode > 57)) &&\r\n      (e.keyCode < 96 || e.keyCode > 105)\r\n    ) {\r\n      e.preventDefault();\r\n    }\r\n  }\r\n\r\n  @HostListener('paste', ['$event'])\r\n  onPaste(event: ClipboardEvent) {\r\n    event.preventDefault();\r\n    const pastedInput: string = event.clipboardData\r\n      .getData('text/plain')\r\n      .replace(/\\D/g, ''); // get a digit-only string\r\n    document.execCommand('insertText', false, pastedInput);\r\n  }\r\n\r\n  @HostListener('drop', ['$event'])\r\n  onDrop(event: DragEvent) {\r\n    event.preventDefault();\r\n    const textData = event.dataTransfer.getData('text').replace(/\\D/g, '');\r\n    this.inputElement.focus();\r\n    document.execCommand('insertText', false, textData);\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { NavigationExtras, Router } from '@angular/router';\r\nexport interface Section {\r\n  title: string;\r\n  id : number;\r\n  flag: boolean;\r\n  \r\n}\r\n\r\n@Component({\r\n  selector: 'app-cheque-withdrawal1',\r\n  templateUrl: './cheque-withdrawal1.component.html',\r\n  styleUrls: ['./cheque-withdrawal1.component.scss']\r\n})\r\n\r\nexport class ChequeWithdrawal1Component implements OnInit {\r\n  flag: boolean = true;\r\n  continue = \"CONTINUE\"\r\n  active : any = {};\r\n  folders: Section[] = [\r\n    {\r\n      title: \"Cash Withdrawal\",\r\n      id : 1,\r\n      flag : false,\r\n      \r\n    },\r\n    {\r\n      title: \"Cash Deposit\",\r\n      id : 2,\r\n      flag : false,\r\n      \r\n    },\r\n    {\r\n      title: \"Cheque Deposit\",\r\n      id : 3,\r\n      flag : false,\r\n    },\r\n    {\r\n      title: \"Cheque Withdrawal\",\r\n      id : 4,\r\n      flag : false,\r\n    },\r\n    {\r\n      title: \"Forex Transaction\",\r\n      id : 5,\r\n      flag : false,\r\n    },\r\n    {\r\n      title: \"Loan Payment\",\r\n      id : 6,\r\n      flag : false,\r\n    },\r\n    {\r\n      title: \"Deposit Top Up\",\r\n      id : 7,\r\n      flag : false,\r\n    },\r\n    {\r\n      title: \"Utility Bill Payment\",\r\n      id : 8,\r\n      flag : false,\r\n    },\r\n\r\n  ];\r\n  \r\n  serviceTitle: any;\r\n\r\n  constructor(private router : Router,) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n  trackByFn(index, item) {\r\n    return index; //or item.id\r\n  }\r\n  goToService(index){\r\n    if(this.active !== index){\r\n      this.active = index;\r\n      // console.log(this.active);\r\n      this.folders.forEach(item => { item.flag = false});\r\n    } \r\n    this.folders[index].flag = !this.folders[index].flag;\r\n  }\r\n  contiueButton(){\r\n    console.log(this.active);\r\n    const enableList = this.folders.filter(x => x.flag === true)\r\n    console.log(enableList);\r\n    if(enableList.length > 0 )\r\n    return true;\r\n    else \r\n    return false;\r\n  }\r\n  goToOperation(){\r\n    this.router.navigateByUrl('/others/master');\r\n  }\r\n\r\n}\r\n","<div class=\"fullcard\">\r\n    <br>\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"center center\">\r\n        <div fxFlex=\"72%\">\r\n          <mat-card class=\"chequecard\">\r\n            <mat-card-title >\r\n                <div class=\"card-title\">Services</div>\r\n                <div fxLayout=\"row wrap\" >\r\n                  <mat-hint class=\"totalAmount\" >Select one and continue</mat-hint>\r\n                <mat-card class=\"arrows\">\r\n                  <!-- <mat-icon class=\"arrowIcons\"> chevron_left</mat-icon> -->\r\n                  <!-- <mat-icon class=\"arrowIcons\">chevron_right</mat-icon> -->\r\n                 </mat-card>\r\n              </div>\r\n              </mat-card-title>\r\n              <mat-card-content>\r\n                <div class=\"full-width\">\r\n                    <div  fxLayout=\"row wrap\"  fxLayoutGap=\"40px \" class=\"gapBtw\" *ngFor=\"let folder of folders; let i = index\">\r\n                        <ng-container >\r\n                      <mat-card (click)=\"goToService(i)\" [ngClass]=\" folder.flag ? 'borderCard' : 'inputCard'\" >\r\n                        <div style=\"margin-top: 15%;\">\r\n                          <mat-card class=\"insideCard\" >\r\n                            <mat-icon class=\"serviceIcons\">payments</mat-icon>\r\n                            \r\n                            </mat-card>\r\n                            \r\n                            </div>\r\n                            <br>\r\n                             <mat-hint  class=\"insideTitle\">{{folder.title }}</mat-hint>\r\n                      </mat-card>\r\n                        </ng-container>\r\n                        </div></div>\r\n           <br><br>\r\n           <div fxLayout=\"row wrap\" fxLayoutGap=\"30px\" fxLayoutAlign=\"center center\">  \r\n               <button mat-flat-button (click) =\"goToOperation()\" [ngClass]=\"contiueButton() ? 'buttonActive' : 'buttonPassive'\" >{{continue}}</button>\r\n               </div> \r\n               <!-- (click) =\"goToOperation(i)\" -->\r\n               <br> \r\n                  </mat-card-content>\r\n              </mat-card>\r\n              </div>\r\n              </div>\r\n          </div>\r\n","\r\nimport { Country } from '@angular-material-extensions/select-country';\r\nimport { Component, Input, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl, FormBuilder, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { DialogService, TokenObjects } from 'app/shared/services/Dialog/dialog.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ChangeDetectorRef } from '@angular/core';\r\nimport { getCurrencySymbol } from '@angular/common';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { OtpVerifyComponent } from '../otp-verify/otp-verify.component';\r\nimport { otpModel } from 'app/shared/models/otp.model';\r\n\r\n\r\ninterface Testing {\r\n  value: string;\r\n  viewValue: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-cheque-deposit',\r\n  templateUrl: './cheque-deposit.component.html',\r\n  styleUrls: ['./cheque-deposit.component.scss']\r\n})\r\nexport class ChequeDepositComponent implements OnInit {\r\n  titleName : any = 'Cheque Deposit';\r\n  chequedepositForm: FormGroup;\r\n  accType = ['Savings','Deposit'];\r\n  \r\n  customerName = ['Jane Smith','John Smith'];\r\n  accountNum: any;\r\n  productCode = \"CQD\";\r\n  tokenOrigin = \"Kiosk\";\r\n  denomCodeArray: any[] = [\r\n    { key: 'count2000', value: 2000 },\r\n    { key: 'count500', value: 500 },\r\n    { key: 'count200', value: 200 },\r\n    { key: 'count100', value: 100 },\r\n    { key: 'count50', value: 50 },\r\n    { key: 'count20', value: 20 },\r\n    { key: 'count10', value: 10 },\r\n    { key: 'count1', value: 1 }\r\n\r\n  ];\r\n  totalAmount: any;\r\n  transamount: any;\r\n  a: any;\r\n  // @Input() title : any;\r\n  // countryFormControl = new FormControl();\r\n  defaultValue: Country = {\r\n    name: 'Deutschland',\r\n    alpha2Code: 'DE',\r\n    alpha3Code: 'DEU',\r\n    numericCode: '276',\r\n    callingCode: '+49'\r\n  };\r\n  cashDepositResponse: any;\r\n  chequeDepositResponse: any;\r\n  accountBal: any;\r\n  phoneNumber: string;\r\n  errorStatus: number;\r\n  custAccountData: any;\r\n  countryValues: any;\r\n  accounttypeArray =[];\r\n  idList = [];\r\n  noList: any[];\r\n  accNum: any;\r\n  tokenObjects =new TokenObjects();\r\n  accNumber: any;\r\n  tokResponse: any;\r\n  tokenNum: any;\r\n  estimatedTime: any;\r\n  isedit:boolean=true;\r\n  transAmt: any;\r\n  balance: string;\r\n  enableContinue: boolean=true;\r\n  curr: string;\r\n  transAmount: string;\r\n  currencyImage: any = \"\";\r\n  custID: any;\r\n  qrData: any;\r\n  ifQRvariable = false;\r\n  customerID: any;\r\n  branchNameFromLogin: string;\r\n  branchName: string;\r\n  arrayAccountBranch: any;\r\n  trasactionBranches: any;\r\n  branchData: any;\r\n  branch: any;\r\n  userName: string;\r\n  // accountNoList: any[];\r\n  accountNoList = [];\r\n  selectedAccountInfo: any;\r\n  showAccountNum : boolean = true;\r\n  showAccoutType : boolean = true;\r\n  custValidation: string;\r\n  custNameFromLogin: string;\r\n  accountNumber: string;\r\n  custmerID: any;\r\n  phonenum: any;\r\n  oTpModel = new otpModel();\r\n  chequedepositValues: any;\r\n  chequedepositype: any;\r\n  chequedepositform: any;\r\n  accountNum1: any[];\r\n  filteredAccoun: any[];\r\n  accountDropdown: boolean = false;\r\n  flag1:boolean=false;\r\n  hideDetails:boolean=false;\r\n  qrBranchCode: any;\r\n  appointmentId:any;\r\n  totalTransAmount: number;\r\n  chargeDetails: any;\r\n  cashData: any;\r\n  accountCurrency: any;\r\n  transBranch: string;\r\n\r\n  constructor(\r\n    private router : Router,\r\n    private formBuilder: FormBuilder,\r\n     private dialogService : DialogService,\r\n     private apiService:ApiService,\r\n     private dialog: MatDialog,\r\n     private cdr:ChangeDetectorRef,\r\n     private ls: LocalStoreService,  private snack: MatSnackBar, private changeDef: ChangeDetectorRef\r\n     ) { }\r\n  ngOnInit(): void {\r\n    this.phoneNumber = localStorage.getItem(\"phonenumFromLogin\");\r\n    this.appointmentId = this.ls.getItem(\"TransactionType\");\r\n    this.transBranch=localStorage.getItem(\"TRANSACTIONBRANCH\") ;\r\n    \r\n    this.custValidation = localStorage.getItem(\"customerValidation\");\r\n    this.custNameFromLogin = localStorage.getItem(\"FromLogin\");\r\n    if(this.custValidation == \"New Customer\"){\r\n      this.showAccountNum = false;\r\n      this.showAccoutType = false;\r\n    }\r\n    if(this.custNameFromLogin!=null){\r\n      this.showAccountNum=false;\r\n    } \r\n    this.qrData = JSON.parse(JSON.parse(localStorage.getItem('scannerData')));\r\n    console.log(\"QRData\", this.qrData);\r\n    this.chequedepositForm = this.formBuilder.group({\r\n      transactionId:['', [Validators.required]],\r\n      chequeNumber:['',[Validators.required]],\r\n      customerId:['', [Validators.required]],\r\n      accountType:['', [Validators.required]],\r\n      totalAmount:['',Validators.required],\r\n      accountNumber:['', [Validators.required]],\r\n      holderName:['', [Validators.required]],\r\n      accountCurrency:['', [Validators.required]],\r\n      transactionCurrency:['', [Validators.required]],\r\n      totalChargeAmount:['', [Validators.required]],\r\n      totalTransactionAmount:['',[Validators.required]],\r\n      transactionAmount:['', [Validators.required, Validators.min(.1)]],\r\n      accountBalance:['', [Validators.required]],\r\n      productCode:['CQD',[Validators.required]],\r\n      tokenOrigin : ['Kiosk',[Validators.required]],\r\n      // audit\r\n      createdBy:['', [Validators.required]],\r\n      createdTime:['', [Validators.required]],\r\n      modifiedBy:['', [Validators.required]],\r\n      modifiedTime:['', [Validators.required]],\r\n      recordStatus:['', [Validators.required]],\r\n      authStatus:['', [Validators.required]],\r\n      version:['', [Validators.required]],\r\n      accountBranch: ['', [Validators.required]],\r\n      transactionBranch:['', [Validators.required]]\r\n      \r\n    });\r\n    console.log(this.chequedepositForm.value);\r\n    if(this.phoneNumber && this.custNameFromLogin==null && this.appointmentId==null){\r\n      this.ifQRvariable = false;\r\n      this.gettingallTansactionDetails(this.phoneNumber);\r\n      }\r\n      // else{\r\n        if(this.qrData!=null){\r\n        this.ifQRvariable = true;\r\n        console.log(\"Account\", this.qrData.accountId);\r\n        this.chequedepositForm.controls.holderName.setValue(this.qrData.holderName);\r\n        this.chequedepositForm.controls.accountType.setValue(this.qrData.accountType);\r\n        this.chequedepositForm.controls.accountNumber.setValue(this.qrData.accountId);\r\n        this.getChargeDetails(this.qrData.accountId,'');\r\n        this.chequedepositForm.controls.transactionAmount.setValue(this.qrData.transactionAmount);\r\n        this.chequedepositForm.controls.accountCurrency.setValue(this.qrData.accountCurrency);\r\n        this.chequedepositForm.controls.transactionCurrency.setValue(this.qrData.transactionCurrency);\r\n        this.accountBal = this.qrData.accountBalance;\r\n        this.customerID = this.qrData.customerId;\r\n        this.currencyImage = 'currency-flag-'+this.qrData.accountCurrency.toLowerCase();\r\n        this.currencyImage = 'currency-flag-'+this.qrData.transactionCurrency.toLowerCase();\r\n        if(this.qrData.transactionBranch !=null && this.qrData.transactionBranch !=''){\r\n          this.chequedepositForm.controls.transactionBranch.setValue(this.qrData.transactionBranch);\r\n        }else{\r\n          this.chequedepositForm.controls.transactionBranch.setValue('Kasturi Nagar');\r\n        }\r\n        this.getAccountBranch();\r\n      }\r\n  \r\n    this.getCountrynameValues();\r\n    this.getAccountBranch();\r\n    this.gettransactionBranch(\"account_branch\");\r\n    if(this.appointmentId.data.appointmentId){\r\n      this.cashWithdrawlData();\r\n    }\r\n  }\r\n  fetchByAccountNum(accNum){\r\n    this.chequedepositForm.controls.transactionAmount.reset();\r\n    this.chequedepositForm.controls.totalTransactionAmount.setValue(this.chequedepositForm.controls.totalChargeAmount.value);\r\n    this.chequedepositForm.controls.chequeNumber.reset();\r\n    console.log(\"Account Numebr\",accNum);\r\n    this.apiService.fetchByaccNum(accNum).subscribe((res: any) => {\r\n      console.log('Account Number Rsp', res);\r\n      this.getChargeDetails(accNum,'');\r\n      this.userName = res.accHolderName;\r\n      this.accountBal = res.accBalance;\r\n      this.custmerID = res.customerId;\r\n      this.accountNumber = res.accountId;\r\n      this.accountCurrency = res.accountCurrency;\r\n      this.curr = getCurrencySymbol(res.currency, \"narrow\");\r\n      this.chequedepositForm.controls.accountType.setValue(res.accountType);\r\n      this.chequedepositForm.controls.accountCurrency.setValue(res.currency);\r\n      this.chequedepositForm.controls.accountBranch.setValue(res.accountBranch);\r\n      this.chequedepositForm.controls.holderName.setValue(this.userName); \r\n      this.currencyImage = 'currency-flag-'+res.currency.toLowerCase();\r\n      this.currencyImage = 'currency-flag-'+res.currency.toLowerCase();\r\n      this.getCountrynameValues();\r\n      this.chequedepositForm.controls.transactionCurrency.setValue(res.currency);\r\n      this.custAmountBal(accNum);\r\n      this.chequedepositForm.controls.transactionBranch.setValue('Kasturi Nagar');\r\n      this.apiService.fetchByaccDeatilsoncustId(res.customerId).subscribe((resp: any) => {\r\n        this.phonenum = resp[0].phoneNumber;\r\n        localStorage.setItem('otpPhoneNum', this.phonenum);\r\n      }) \r\n  });\r\n\r\n}\r\ngetOTP(formData, type, cdForm){\r\n  this.chequedepositValues =formData;\r\n  this.chequedepositype = type;\r\n  this.chequedepositform = cdForm;\r\n  this.oTpModel.source = 'customer';\r\n  this.oTpModel.source_key = 'mobile';\r\n  this.oTpModel.source_value = this.phonenum;\r\n  let amount= 50000;\r\n  let transamountwithoutcomma=this.chequedepositValues.transactionAmount.replace(/,/g, \"\");\r\n  console.log( transamountwithoutcomma);\r\n  if(transamountwithoutcomma > amount){\r\n    this.apiService.getOtp(this.oTpModel).subscribe(otpResp => {\r\n      if (otpResp) {\r\n        this.openDialogOTP(this.phonenum);\r\n        this.snack.open(\"An OTP has been sent to the Registered Mobile Number.\" , \"\", {\r\n          duration: 4000,\r\n          verticalPosition: 'top',\r\n          horizontalPosition: 'right'\r\n        });\r\n      }\r\n    })\r\n  }\r\n  else{\r\n    this.getOTPforSave( this.chequedepositValues,\r\n      this.chequedepositype,this.chequedepositform);\r\n  }\r\n}\r\nopenDialogOTP(numbr) {\r\n  const dialogRef = this.dialog.open(OtpVerifyComponent, {\r\n    data: { number: numbr, type: \"numbr\" },\r\n    disableClose: true,\r\n  });\r\n  dialogRef.afterClosed().subscribe(submit => {\r\n    if(submit){\r\n      this.getOTPforSave( this.chequedepositValues,\r\n        this.chequedepositype,this.chequedepositform);\r\n    }\r\n   });\r\n}\r\ngetOTPforSave(formData, type, cdForm){\r\n  formData.transactionBranch = this.transBranch;\r\n  if(this.custValidation == \"New Customer\"){\r\n    console.log(\"customer\",this.custmerID);\r\n   this.accountNum = formData.accountNumber;\r\n   formData.customerId = this.custmerID?this.custmerID:0;\r\n   formData.accountType = formData.accountType;\r\n   formData.accountNumber = this.accountNumber;\r\n   formData.holderName = formData.holderName;\r\n   formData.accountCurrency = formData.accountCurrency;\r\n   formData.transactionCurrency = formData.transactionCurrency;\r\n   formData.transactionAmount = formData.transactionAmount.replace(/,/g, '');\r\n   formData.productCode = this.productCode;\r\n   formData.tokenOrigin = this.tokenOrigin;\r\n   formData.accountBalance = this.accountBal;\r\n\r\n  }\r\n  formData.tokenBranch = \"KN\";\r\n  if(this.appointmentId && this.appointmentId.data){\r\n    formData.transactionId = this.appointmentId.data.transactionId;\r\n    formData.transactionStatus = this.appointmentId.data.transactionStatus;\r\n  }\r\n  formData.customerId = this.custmerID?this.custmerID:0;\r\n  formData.accountType = formData.accountType;\r\n  formData.accountNumber = this.accountNumber;\r\n  formData.holderName = formData.holderName;\r\n  formData.accountCurrency = formData.accountCurrency;\r\n  formData.transactionCurrency = formData.transactionCurrency;\r\n  formData.transactionAmount = formData.transactionAmount.replace(/,/g, '');\r\n  formData.productCode = this.productCode;\r\n  formData.tokenOrigin = this.tokenOrigin;\r\n  formData.accountBalance = this.accountBal;\r\nthis.apiService.saveofCashDeposit(formData).subscribe(cashDepositResp => {\r\nconsole.log(\"Response Success\", cashDepositResp);\r\nthis.cashDepositResponse = cashDepositResp;\r\nthis.tokenNum = this.cashDepositResponse.tokenNumber;\r\nthis.estimatedTime = this.cashDepositResponse.estimatedWaitTime;\r\nlocalStorage.setItem(\"tokenNumer\", this.tokenNum);\r\nlocalStorage.setItem(\"estimatedTiming\", this.estimatedTime);\r\nthis.enableContinue = false;\r\nif (this.cashDepositResponse) {\r\n  this.dialogService.tokenGenerationDialog();\r\n}\r\n});   \r\n}\r\n  _keyPress(event: any) {\r\n    const pattern = /[0-9 a-z A-Z]/;\r\n    let inputChar = String.fromCharCode(event.charCode);\r\n    if (!pattern.test(inputChar)) {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n  gettransactionBranch(key: string) {\r\n    this.apiService.getTransactionBranch(key)\r\n      .subscribe(branches => {\r\n        console.log('branches :: ', branches);\r\n        this.trasactionBranches = branches;\r\n       \r\n      })\r\n  }\r\n\r\n  getAccountBranch() {\r\n    this.apiService.getBranchforKiosk()\r\n      .subscribe((data: any) => {\r\n        this.branchData = data;\r\n          console.log( this.branchData);\r\n          data.forEach((element,index)=>{\r\n            this.branch = data[index].branchName;\r\n            console.log(this.branch);\r\n            // this.chequedepositForm.controls.accountBranch.setValue(this.branch);\r\n         });      \r\n      });\r\n  }\r\n  getCountrynameValues() {\r\n    this.apiService.getCountryValues().subscribe((allCountryValues : any)=> {\r\n      this.countryValues = allCountryValues;\r\n      console.log(this.countryValues);\r\n      });\r\n  }\r\n\r\n  onCountrySelected($event: Country): void {\r\n    console.log($event);\r\n  }\r\n  goToServiceScreens(){\r\n    if(this.appointmentId){\r\n    if(this.appointmentId.data.appointmentId){\r\n      this.router.navigateByUrl('/sessions/login');\r\n      localStorage.removeItem(\"FromLogin\")\r\n      localStorage.removeItem(\"TransactionType\")\r\n      localStorage.removeItem(\"customerId\")\r\n      localStorage.removeItem(\"phonenumFromLogin\")\r\n      localStorage.removeItem(\"customerValidation\")\r\n      localStorage.removeItem(\"otpPhoneNum\")\r\n      localStorage.removeItem(\"AccountBal\")\r\n      localStorage.removeItem(\"AccountNumber\")\r\n      localStorage.removeItem(\"ProductCode\")\r\n      localStorage.removeItem(\"tokenNumer\")\r\n      localStorage.removeItem(\"estimatedTiming\")\r\n      localStorage.removeItem(\"userId\")\r\n      localStorage.removeItem(\"scannerData\")\r\n      localStorage.removeItem(\"custholderName\")\r\n    }\r\n  }\r\n    else{\r\n      this.router.navigateByUrl('/others/services');\r\n    }\r\n  }  \r\n  goToAuthenticate(){\r\n    this.dialogService.authenticationDialog();\r\n  }\r\n  gettingallTansactionDetails(phoneNumber) {\r\n    this.phoneNumber = localStorage.getItem(\"phonenumFromLogin\");\r\n    this.apiService.gettingTransactionDetails(this.phoneNumber).subscribe((allTransactionResp : any)=> {\r\n    console.log(\"All Transaction Details\",allTransactionResp);\r\n    this.userName = (allTransactionResp.firstName ? allTransactionResp.firstName + ' ' : ' ') + \r\n    (allTransactionResp.middleName ? allTransactionResp.middleName + ' ' : ' ') +\r\n     (allTransactionResp.lastName ? allTransactionResp.lastName : ' ');\r\n    this.chequedepositForm.controls.holderName.setValue(this.userName);\r\n    this.custID = allTransactionResp.customerId;\r\n    // this.setBalance(allTransactionResp.custAccount);\r\n    this.custAccountData = allTransactionResp.custAccount;\r\n    this.accounttypeArray = [...this.custAccountData].filter(({accountType},index )=> \r\n    ![...this.custAccountData].map(obj=> obj.accountType).includes(accountType, index +1));\r\n    for(let j = 0; j < this.custAccountData.length; j++){\r\n      if(this.custAccountData[j].status == 'APPROVED'){\r\n        this.accountNoList.push(this.custAccountData[j]);  \r\n      }\r\n    }\r\n    if(this.custAccountData && this.accountNoList.length<=1){\r\n      this.accountDropdown=false;\r\n      this.hideDetails=true;\r\n      const accTyp = allTransactionResp.custAccount[0].accountType;\r\n      this.chequedepositForm.controls.accountType.setValue(accTyp);\r\n      this.custAccountNumber(this.accountNoList[0]);\r\n    }else{\r\n      this.accountDropdown=true;\r\n      this.hideDetails=true;\r\n      const accTyp = allTransactionResp.custAccount[0].accountType;\r\n      this.chequedepositForm.controls.accountType.setValue(accTyp);\r\n      this.custAccountNumber(allTransactionResp.custAccount[0]);\r\n    }\r\n   \r\n    });\r\n  }\r\n  getAccountType(event:any){\r\n    this.chequedepositForm.controls.transactionAmount.reset();\r\n    this.chequedepositForm.controls.totalTransactionAmount.setValue(this.chequedepositForm.controls.totalChargeAmount.value);\r\n    this.chequedepositForm.controls.chequeNumber.reset();\r\n    this.accountNoList=[];\r\n    this.isedit=false;\r\n    this.accountNum1=[...this.custAccountData].filter((accounNum,index)=>{\r\n      return accounNum.accountType==event;\r\n    });console.log(this.accountNum1)\r\n    // this.accountNoList=this.accountNum1\r\n    // this.accountNoList=this.accountNum1.map((acccount)=>\r\n    // {\r\n    //   return acccount.accountId\r\n    // })\r\n    for(let i = 0; i < this.custAccountData.length; i++){\r\n      if(this.custAccountData[i].status == 'APPROVED' && this.custAccountData[i].accountType == event){\r\n        this.accountNoList.push(this.custAccountData[i].accountId);    \r\n      }\r\n    }\r\n    console.log(this.accountNoList);\r\n    if(this.accountNoList.length<=1){\r\n      this.flag1=false; \r\n      this.chequedepositForm.controls.accountNumber.setValue(this.accountNoList[0]);\r\n      this.getData(this.accountNoList[0])   \r\n    }\r\n    else{\r\n      this.flag1=true;   \r\n      this.getData(this.accountNoList[0]) \r\n    }\r\n    this.getChargeDetails(this.accountNoList[0],'');\r\n  }\r\n  custAccountNumber(custype){\r\n    this.isedit=false;\r\n   this.idList = [...this.custAccountData].filter(item => item.accountType === custype.accountType);\r\n   const defaultId = this.idList ? this.idList[0] : null;\r\n\r\n   this.accountNoList = [];\r\n   for(let i = 0; i < this.idList.length; i++){\r\n      if(this.idList[i].status == 'APPROVED'){\r\n        this.accountNoList.push(this.idList[i].accountId)    \r\n      }\r\n    }\r\n    console.log(this.accountNoList);\r\n    if(this.accountNoList.length<=1){\r\n      // this.cashwithdrawForm.controls.accountNumber.patchValue(this.accountNoList[0]);\r\n      this.flag1=false; \r\n      // this.getData(this.accountNoList[0]);\r\n      this.chequedepositForm.controls.accountNumber.setValue(this.accountNoList[0]);\r\n    }\r\n    else{\r\n      this.chequedepositForm.controls.accountNumber.setValue(this.accountNoList[0]);\r\n      this.flag1=true;   \r\n    }\r\n \r\n  //  this.chequedepositForm.controls.accountNumber.setValue(defaultId);\r\n   this.chequedepositForm.controls.accountCurrency.setValue(custype.accountCurrency);\r\n   this.chequedepositForm.controls.accountBranch.setValue(this.branch);\r\n   //this.chequedepositForm.controls.transactionAmount.setValue(custype.amount);\r\n  //  this.chequedepositForm.controls.accountType.setValue(defaultId);\r\n   this.curr = getCurrencySymbol(custype.accountCurrency, \"narrow\");\r\n   this.chequedepositForm.controls.transactionCurrency.setValue(custype.accountCurrency);\r\n\r\n    this.currencyImage = 'currency-flag-'+custype.accountCurrency.toLowerCase();\r\n  //  this.accountBal = this.idList[0].amount;\r\n   console.log(this.accountBal);\r\n   localStorage.setItem(\"AccountBal\",this.accountBal);\r\n  //  this.chequedepositForm.controls.accountNumber.setValue(this.idList[0].accountId);\r\n   this.custAmountBal(this.accountNoList[0]);\r\n   this.chequedepositForm.controls.accountBranch.setValue(custype.accountBranch);\r\n   this.getChargeDetails(this.accountNoList[0],custype.amount);\r\n  }\r\n  getData(custNum){\r\n    this.hideDetails=true;\r\n    console.log(custNum)\r\n    let val=this.accountNum1.filter((value)=>{\r\n    return value.accountId==custNum}\r\n    )\r\n    console.log(val)\r\n    this.idList = [...this.custAccountData].filter(item => item.accountType === val[0].accountType);\r\n    this.chequedepositForm.controls.accountCurrency.setValue(val[0].accountCurrency);\r\n   this.chequedepositForm.controls.accountBranch.setValue(this.branch);\r\n   this.curr = getCurrencySymbol(val[0].accountCurrency, \"narrow\");\r\n   this.curr = getCurrencySymbol(val[0].accountCurrency, \"narrow\");\r\n   this.chequedepositForm.controls.transactionCurrency.setValue(val[0].accountCurrency);\r\n  \r\n   this.currencyImage = 'currency-flag-'+val[0].accountCurrency.toLowerCase();\r\n   console.log('data :: ',this.idList[0]);\r\n  this.accountBal = this.idList[0].amount;\r\n  \r\n  localStorage.setItem(\"AccountBal\",this.accountBal);\r\n  this.chequedepositForm.controls.accountNumber.setValue(this.idList[0].accountId);\r\n  this.custAmountBal(this.idList[0].accountId);\r\n  this.chequedepositForm.controls.accountNumber.setValue(val[0].accountId);\r\n  this.chequedepositForm.controls.accountBranch.setValue(val[0].accountBranch);\r\n  this.getChargeDetails(val[0].accountId,'')\r\n  }\r\n\r\n  custAmountBal(custNum){\r\n    console.log(custNum);\r\n    var account = this.idList.filter(function (record) {\r\n      if (record.accountId == custNum) {\r\n        return record;\r\n      }\r\n    });\r\n    console.log(account);\r\n    this.accNum = account[0].accountId;\r\n    this.accountBal = account[0].amount;\r\n    this.selectedAccountInfo = account[0]\r\n  }\r\n  setBalance(accountBalance, index = 0){\r\n    this.accountBal = accountBalance[index].currentBalance ? accountBalance[index].currentBalance:null;\r\n  }\r\n onSaveofchequeDeposit(formData,type){\r\n  formData.transactionBranch = this.transBranch;\r\n  formData.tokenBranch = \"KN\";\r\n  if(this.qrData){\r\n    if(this.qrData.transactionBranch){\r\n      this.apiService.fetchBranchInfoByBranchName(this.qrData.transactionBranch).subscribe(response=>{\r\n        this.qrBranchCode=response;\r\n        \r\n      })\r\n    }\r\n  }\r\n  if(!this.ifQRvariable){\r\n  console.log(\"chequedepositData\", formData);\r\n  this.accountNum=JSON.stringify(this.selectedAccountInfo.accountId);\r\n  console.log(\"this.accountNum \", this.accountNum);\r\n  localStorage.setItem(\"AccountNumber\",this.accountNum);\r\n  localStorage.setItem(\"ProductCode\",this.productCode);\r\n  formData.tokenBranch = \"KN\";\r\n  formData.customerId = this.custID;\r\n  formData.transactionCurrency = formData.transactionCurrency;\r\n  formData.transactionAmount = formData.transactionAmount.replace(/,/g, '');\r\n  formData.accountNumber = this.selectedAccountInfo.accountId;\r\n  formData.accountType = formData.accountType;\r\n  formData.productCode = this.productCode;\r\n  formData.tokenOrigin = this.tokenOrigin;\r\n  formData.accountBalance = this.accountBal;\r\n  \r\n  }\r\n  else{\r\n    console.log(formData)\r\n    formData.customerId = this.custID;\r\n    formData.accountType = formData.accountType;\r\n    formData.accountNumber =formData.accountNumber;\r\n    formData.holderName=  formData.holderName;\r\n    formData.accountCurrency  =formData.accountCurrency;\r\n    formData.transactionCurrency = formData.transactionCurrency;\r\n    formData.transactionAmount = formData.transactionAmount;\r\n    formData.totalAmount = formData.totalAmount;\r\n    formData.productCode = this.productCode;\r\n    formData.tokenOrigin = this.tokenOrigin;\r\n    formData.accountBalance = this.accountBal;\r\n    formData.transactionId = formData.transactionId;\r\n    formData.appointmentId = formData.appointmentId;\r\n\r\n    \r\n  }\r\n\r\n  if(this.qrData){\r\n    if(this.qrData.transactionBranch){\r\n      formData.tokenBranch = this.qrBranchCode.transactionBranch;\r\n    }\r\n  }\r\n \r\n  if(this.appointmentId && this.appointmentId.data){\r\n    formData.transactionId = this.appointmentId.data.transactionId;\r\n    formData.transactionStatus = this.appointmentId.data.transactionStatus;\r\n  }\r\n  console.log(formData.transactionId,formData.transactionStatus);\r\n\r\n  formData.totalAmount = formData.totalAmount.replace(/,/g, '');\r\n\r\n  this.apiService.saveofCashDeposit(formData).subscribe(chequeDepositResp=>{\r\n    console.log(\" Response Success\",chequeDepositResp);\r\n    this.chequeDepositResponse = chequeDepositResp;\r\n    this.tokenNum = this.chequeDepositResponse.tokenNumber;\r\n    this.estimatedTime = this.chequeDepositResponse.estimatedWaitTime;\r\n    localStorage.setItem(\"tokenNumer\",this.tokenNum);\r\n    localStorage.setItem(\"estimatedTiming\",this.estimatedTime);\r\n    this.enableContinue=false;\r\n    if(this.chequeDepositResponse){\r\n    this.dialogService.tokenGenerationDialog();\r\n    }\r\n  });\r\n//   this.tokenObjects.productCode = this.productCode;\r\n//   this.tokenObjects.accountNumber = formData.accountNumber;\r\n//   if(this.tokenObjects.productCode !== null || this.tokenObjects.accountNumber !==null){\r\n//   this.apiService.generateToken(this.tokenObjects).subscribe(tokenResp=>{\r\n//     console.log( \"Token Generated\", tokenResp);\r\n//     this.tokResponse = tokenResp;\r\n//     if(this.tokResponse){\r\n//       this.tokenNum = this.tokResponse.tokenNumber;\r\n//       this.estimatedTime = this.tokResponse.estimatedWaitTime;\r\n//       localStorage.setItem(\"tokenNumer\",this.tokenNum);\r\n//       localStorage.setItem(\"estimatedTiming\",this.estimatedTime);\r\n//       formData.tokenNo = this.tokenNum;\r\n//       formData.customerId = this.ls.getItem(\"customerId\");\r\n//       this.apiService.saveofCashDeposit(formData).subscribe(chequeDepositResp=>{\r\n//         console.log(\" Response Success\",chequeDepositResp);\r\n//         this.chequeDepositResponse = chequeDepositResp;\r\n//         this.enableContinue=false;\r\n//         this.dialogService.tokenGenerationDialog();\r\n//       });\r\n//     }\r\n//   });\r\n// }\r\n  }\r\n\r\n  omit_number(event) {\r\n    var key;\r\n    key = event.charCode;\r\n    return ((key > 47 && key < 58));\r\n  }\r\n  totalAmountValue(cdForm) {\r\n    this.a=this.chequedepositForm.value.transactionAmount;\r\n    this.a=this.a.replace(/\\,/g,''); // 1125, but a string, so convert it to number\r\n    this.a=parseInt(this.a,10);\r\n\r\n\r\n    this.chequedepositForm.value.totalAmount =\r\n      ((cdForm.value.count2000 ? cdForm.value.count2000 * 2000 : 0) +\r\n        (cdForm.value.count500 ? cdForm.value.count500 * 500 : 0) +\r\n        (cdForm.value.count200 ? cdForm.value.count200 * 200 : 0) +\r\n        (cdForm.value.count100 ? cdForm.value.count100 * 100 : 0) +\r\n        (cdForm.value.count50 ? cdForm.value.count50 * 50 : 0) +\r\n        (cdForm.value.count20 ? cdForm.value.count20 * 20 : 0) +\r\n        (cdForm.value.count10 ? cdForm.value.count10 * 10 : 0) +\r\n        (cdForm.value.count1 ? cdForm.value.count1 * 1 : 0)\r\n        );\r\n        console.log(this.chequedepositForm.value.totalAmount)\r\n        console.log(this.chequedepositForm.value.transactionAmount);\r\n        this.transamount=this.chequedepositForm.value.transactionAmount;\r\n        this.totalAmount=this.chequedepositForm.value.totalAmount;\r\n        this.chequedepositForm.controls.totalAmount.setValue(this.chequedepositForm.value.totalAmount);\r\n        \r\n  }\r\n  OnInput(event: any) {\r\n   this.transAmt= event.target.value;\r\n\r\n     // comma separator using changeDetector\r\n   const savedInput = this.transAmount;\r\n\r\n   let lastCharIsPoint = false;\r\n   if (savedInput.charAt(savedInput.length - 1) === '.') {\r\n     lastCharIsPoint = true;\r\n   }\r\n   const num = savedInput.replace(/[^0-9.]/g, '');\r\n   this.transAmt = Number(num) || '';\r\n   this.transAmount = this.transAmt.toLocaleString('en-IN');\r\n   if (lastCharIsPoint) {\r\n     this.transAmount = this.transAmount.concat('.');\r\n   }\r\n   this.changeDef.detectChanges();\r\n    this.balance= localStorage.getItem(\"AccountBal\");\r\n    if(parseFloat(this.balance) < parseFloat(this.transAmt)){\r\n      console.log(\"Bigger\")\r\n      this.snack.open(`Transaction Amount should not exceed than Account Balance`, 'OK', {\r\n        duration: 2000,\r\n        verticalPosition: 'top',\r\n        horizontalPosition: 'right'\r\n      });\r\n      this.enableContinue=false;\r\n    }\r\n    else{\r\n      this.enableContinue=true;\r\n    }\r\n    this.totalTransAmount=Number(this.transAmt) + Number(this.chargeDetails?this.chargeDetails[0].amount:'');\r\n    this.chequedepositForm.controls.totalTransactionAmount.setValue(this.totalTransAmount);\r\n    this.cdr.markForCheck();\r\n    this.cdr.detectChanges();\r\n    }\r\n    getChargeDetails(accountId,amount){\r\n      this.apiService.fetchChargeDetails(accountId).subscribe(resp => {\r\n    console.log(resp);\r\n    this.chargeDetails=resp;\r\n    this.chequedepositForm.controls.totalChargeAmount.setValue(this.chargeDetails?this.chargeDetails[0].amount:'');\r\n      });\r\n      if(this.cashData){\r\n      setTimeout(() => {\r\n        this.totalTransAmount=Number(this.cashData.transactionAmount) + Number(this.chargeDetails?this.chargeDetails[0].amount:'');\r\n        this.chequedepositForm.controls.totalTransactionAmount.setValue(this.totalTransAmount);\r\n      }, 1000);\r\n      this.cdr.markForCheck();\r\n      this.cdr.detectChanges();\r\n    }\r\n    else{\r\n      console.log(this.chargeDetails)\r\n      amount=0;\r\n      console.log(amount);\r\n      setTimeout(() => {\r\n        this.totalTransAmount=Number(amount) + Number(this.chargeDetails?this.chargeDetails[0].amount:'');\r\n        console.log(this.totalTransAmount);\r\n        this.chequedepositForm.controls.totalTransactionAmount.setValue(this.totalTransAmount);\r\n      }, 1000);\r\n      this.cdr.markForCheck();\r\n      this.cdr.detectChanges();\r\n    }\r\n  \r\n      // console.log(this.totalTransAmount);\r\n    \r\n    }\r\n \r\n\r\n    addCurrencyImage(currency) {\r\n      return currency.toLowerCase();\r\n    }\r\n\r\n    clicked(event){\r\n      console.log(event);\r\n    }\r\n  \r\n    onCountryChange(country) {\r\n      let currency = country.currencyCode;\r\n      this.currencyImage = 'currency-flag-'+currency.toLowerCase();\r\n    }\r\n  \r\n    accountCurrencyImage(accountCurrency){\r\n      return accountCurrency? 'currency-flag-'+accountCurrency.toLowerCase() : '';\r\n    }\r\n  \r\n  formatAmount(amount) {\r\n    if(amount){\r\n      return amount && amount.toString().split('.')[0].length > 3 ? amount.toString().substring(0,amount.toString().split('.')[0].length-3).replace(/\\B(?=(\\d{2})+(?!\\d))/g, \",\") + \",\" + amount.toString().substring(amount.toString().split('.')[0].length-3): amount.toString();\r\n     }\r\n  }\r\n  cashWithdrawlData(){\r\n    this.apiService.getAppointmentId(this.appointmentId.data.appointmentId).subscribe((resp : any)=> {\r\n      console.log(resp);\r\n      this.cashData=resp.data;\r\n      this.custID=resp.data.customerId;\r\n      this.ifQRvariable = true;\r\n      this.chequedepositForm.controls.accountType.setValue(resp.data.accountType);\r\n      this.chequedepositForm.controls.accountBranch.setValue(resp.data.accountBranch);\r\n      this.chequedepositForm.controls.accountNumber.setValue(resp.data.accountNumber);\r\n      this.chequedepositForm.controls.chequeNumber.setValue(resp.data.chequeNumber);\r\n      this.getChargeDetails(resp.data.accountNumber,resp.data.transactionAmount);\r\n      this.chequedepositForm.controls.accountCurrency.setValue(resp.data.accountCurrency);\r\n      this.chequedepositForm.controls.transactionCurrency.setValue(resp.data.transactionCurrency);\r\n      this.chequedepositForm.controls.transactionAmount.setValue(resp.data.transactionAmount);\r\n      this.currencyImage = 'currency-flag-'+resp.data.accountCurrency.toLowerCase();\r\n      this.currencyImage = 'currency-flag-'+resp.data.transactionCurrency.toLowerCase();\r\n  \r\n  \r\n    });\r\n  }\r\n  \r\n}\r\n\r\n\r\n","<div class=\"fullcard\">\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"center center\">\r\n        <div fxFlex=\"100%\">\r\n            <h6 class=\"h1\"><span style=\"color:grey;padding-right: 4px;\">Services</span> <b>></b> <span style=\"padding-left: 4px;\"><b>Cheque Deposit</b></span></h6>\r\n            <mat-card class=\"chequecard\">\r\n                <mat-card-title style=\"padding: 2%;\">\r\n                    <div fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n                        <div>\r\n                            <mat-icon *ngIf=\"phoneNumber\" class=\"backIcon\" (click)=\"goToServiceScreens()\">keyboard_backspace</mat-icon>\r\n                        </div>&nbsp;&nbsp;\r\n                        <div class=\"card-title\">{{titleName}}</div>\r\n                    </div>\r\n                </mat-card-title>\r\n                <mat-card-content>\r\n                    <div class=\"full-width\" style=\"padding: 0% 0% 3% 2%;\">\r\n                        <form [formGroup]=\"chequedepositForm\">\r\n                            <div fxLayout=\"column\" fxLayoutGap=\"3%\" fxLayoutAlign=\"space-between none\">\r\n                                <div>\r\n                                    <div fxLayout=\"row wrap\" class=\"flex-container stretch\">\r\n                                        <ng-container>\r\n                                            <div fxFlex=\"25%\" fxFlex.xs=\"100%\"  *ngIf=\"showAccountNum\">\r\n                                                <mat-hint class=\"totalAmount\">Account Type*</mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <input matInput  type=\"text\" *ngIf=\"phoneNumber && !accountDropdown\"  [readonly]=\"true\" class=\"full-width\" formControlName=\"accountType\" >\r\n                                                    <!-- <mat-select *ngIf=\"phoneNumber && accountDropdown\" formControlName=\"accountType\" (selectionChange)=\"getAccountType($event.value)\"\r\n                                                        style=\"background-color: #f9fafb;\"\r\n                                                        placeholder=\"Select Account Type\">\r\n                                                        <mat-option *ngFor=\"let type of accounttypeArray \"\r\n                                                            \r\n                                                            [value]=\"type.accountType\">{{type.accountType}}</mat-option>\r\n                                                    </mat-select> -->\r\n                                                    <mat-select formControlName=\"accountType\"  *ngIf=\"phoneNumber && accountDropdown\"   style=\"background-color: #f9fafb;\" (selectionChange)=\"getAccountType($event.value)\" placeholder=\"Select Account Type\">\r\n                                                        <mat-option *ngFor=\"let type of accounttypeArray \"  (click)=\"custAccountNumber(type)\"  [value]=\"type.accountType\">{{type.accountType}}</mat-option>\r\n                                                    </mat-select>\r\n                                                    <!-- <input matInput type=\"text\"  [readonly]=\"true\" class=\"full-width\" formControlName=\"accountType\" > -->\r\n\r\n                                                </mat-card>\r\n                                            </div>\r\n                                            <div fxFlex=\"25%\" fxFlex.xs=\"100%\" *ngIf=\"!showAccountNum\" >\r\n                                                <mat-hint class=\"totalAmount\">Account Number*</mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <input matInput type=\"text\"  \r\n                                                        class=\"full-width\" formControlName=\"accountNumber\"\r\n                                                        (change)=\"fetchByAccountNum(chequedepositForm.get('accountNumber').value)\">\r\n                                                </mat-card>\r\n                                                    <!-- <mat-hint class=\"totalAmount\" *ngIf=\"!phoneNumber\" >Account Balance :{{curr }} {{accountBal | number: '2.' }}</mat-hint> -->\r\n                                                    <mat-hint class=\"totalAmount\" *ngIf=\"!showAccountNum\" >Account Balance\r\n                                                        : {{curr }}{{formatAmount(accountBal)}}</mat-hint>\r\n                                                    <br>\r\n                                                    <!-- <mat-hint  class=\"totalAmount\" *ngIf=\"!phoneNumber\"  [readonly]=\"true\"  formControlName=\"holderName\">Holder Name :{{userName}}</mat-hint> -->\r\n                                                    <mat-hint class=\"totalAmount\" *ngIf=\"!showAccountNum\" [readonly]=\"true\">\r\n                                                        Holder Name : {{userName}}</mat-hint>\r\n                                            </div>\r\n                                            <div fxFlex=\"25%\" fxFlex.xs=\"100%\" *ngIf=\"showAccountNum\">\r\n                                                <mat-hint class=\"totalAmount\">Account Number*</mat-hint>\r\n                                                <mat-card class=\"inputCard\" >\r\n                                                    <!-- <input matInput type=\"text\" *ngIf=\"!phoneNumber\"  [readonly]=\"true\" class=\"full-width\" formControlName=\"accountNumber\" > -->\r\n                                                    <input matInput type=\"text\" *ngIf=\"!flag1\"  [readonly]=\"true\" class=\"full-width\" formControlName=\"accountNumber\" >\r\n                                                    <!-- <mat-select formControlName=\"accountNumber\" *ngIf=\"phoneNumber\"  style=\"background-color: #f9fafb;\" > -->\r\n                                                        <mat-select formControlName=\"accountNumber\" (selectionChange)=\"fetchByAccountNum($event.value)\" *ngIf=\"flag1\"  style=\"background-color: #f9fafb;\" >\r\n                                                        \r\n                                                            <mat-option>select</mat-option>\r\n                                                            <mat-option  *ngFor=\"let id of accountNoList \"   [value]=\"id\">{{id}}</mat-option>\r\n                                                           \r\n                                                    </mat-select>\r\n                                                </mat-card>\r\n                                                <!-- <mat-hint class=\"totalAmount\"  *ngIf=\"!phoneNumber\"  >Account Balance :{{curr }} {{accountBal | number: '2.' }}</mat-hint> -->\r\n                                                <mat-hint class=\"totalAmount\"  *ngIf=\"hideDetails\"  >Account Balance :{{curr }} {{formatAmount(accountBal)}}</mat-hint><br>\r\n                                                <mat-hint  class=\"totalAmount\"  *ngIf=\"hideDetails\" [readonly]=\"true\"  formControlName=\"holderName\">Holder Name :{{userName}}</mat-hint>\r\n                                            </div>\r\n                                            <div fxFlex=\"25%\" fxFlex.xs=\"100%\" *ngIf=\"!showAccountNum\" >\r\n                                                <mat-hint class=\"totalAmount\">Account Type*</mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <input matInput type=\"text\"  [readonly]=\"true\" \r\n                                                        class=\"full-width\" formControlName=\"accountType\">\r\n                                    \r\n                                                </mat-card>\r\n                                            </div>\r\n                                            <div fxFlex=\"25%\" fxFlex.xs=\"100%\">\r\n                                                <mat-hint class=\"accountBranch\">Account Branch*</mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <input matInput *ngIf=\"!phoneNumber\" type=\"text\"\r\n                                                    [readonly]=\"true\" class=\"full-width\"\r\n                                                    formControlName=\"accountBranch\">\r\n                                                <input matInput *ngIf=\"phoneNumber\" type=\"text\"\r\n                                                    [readonly]=\"true\" class=\"full-width\"\r\n                                                    formControlName=\"accountBranch\">\r\n                                                </mat-card>\r\n                                                <mat-error\r\n                                                    *ngIf=\"chequedepositForm.get('accountBranch').touched && !chequedepositForm.get('accountBranch').valid\">\r\n                                                    Account Branch is Required!\r\n                                                </mat-error>\r\n                                            </div>\r\n                                            <div fxFlex=\"25%\" fxFlex.xs=\"100%\">\r\n                                                <mat-hint class=\"totalAmount\">Account Currency*</mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <div fxLayout=\"row wrap\" class=\"full-width\">\r\n                                                        <div fxFlex=\"25%\">\r\n                                                            <div *ngIf=\"ifQRvariable\" class=\"currency-flag {{isedit?accountCurrencyImage(chequedepositForm.controls['accountCurrency'].value):currencyImage}}\"></div>\r\n                                                            <div *ngIf=\"!ifQRvariable\" class=\"currency-flag {{!isedit?accountCurrencyImage(chequedepositForm.controls['accountCurrency'].value):currencyImage}}\"></div>\r\n                                                        </div>\r\n                                                        <div fxFlex=\"75%\">\r\n                                                            <input matInput type=\"text\" *ngIf=\"!phoneNumber\" [readonly]=\"true\" class=\"full-width\" style=\"font-size:110%\" formControlName=\"accountCurrency\">\r\n                                                            <input matInput type=\"text\" *ngIf=\"phoneNumber\" [readonly]=\"true\" class=\"full-width\" style=\"font-size:110%\" formControlName=\"accountCurrency\">\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </mat-card>\r\n                                            </div>\r\n                                        </ng-container>\r\n                                    </div>\r\n                                </div>\r\n    \r\n                                <div>\r\n                                    <div fxLayout=\"row wrap\" class=\"flex-container stretch\">\r\n                                        <ng-container>\r\n                                           \r\n                                            <div fxFlex=\"25%\" fxFlex.xs=\"100%\" *ngIf=\"showAccountNum\">\r\n                                                <mat-hint class=\"totalAmount\">Transaction Currency* </mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <div fxLayout=\"row wrap\" class=\"full-width\">\r\n                                                        <div fxFlex=\"25%\">\r\n                                                            <div class=\"currency-flag {{currencyImage}}\"></div>\r\n                                                        </div>\r\n                                                        <div fxFlex=\"75%\">\r\n                                                            <input matInput type=\"text\" *ngIf=\"!phoneNumber\" [readonly]=\"true\" class=\"full-width\" formControlName=\"transactionCurrency\">\r\n                                                            <mat-select formControlName=\"transactionCurrency\" *ngIf=\"phoneNumber\"  placeholder=\"Select Transaction Currency\" id=\"testSelect\" style=\"background-color: #f9fafb;\" [disabled]=\"isedit\">\r\n                                                                <mat-option *ngFor=\"let country of countryValues; let i = index\" style=\"font-size:110%\" (click)=\"onCountryChange(country)\" [value]=\"country.currencyCode\">\r\n                                                                    <div fxLayout=\"row wrap\" class=\"full-width\">\r\n                                                                        <div fxFlex=\"15%\">{{country.currencyCode}}</div>\r\n                                                                        <div fxFlex=\"85%\">\r\n                                                                            <div class=\"currency-flag currency-flag-{{addCurrencyImage(country.currencyCode)}} alignImage\">\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </mat-option>\r\n                                                            </mat-select>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </mat-card>\r\n                                            </div>\r\n                                            <div fxFlex=\"25%\" fxFlex.xs=\"100%\" *ngIf=\"!showAccountNum\">\r\n                                                <mat-hint class=\"totalAmount\">Transaction Currency* </mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <div fxLayout=\"row wrap\" class=\"full-width\">\r\n                                                        <div fxFlex=\"25%\">\r\n                                                            <div class=\"currency-flag {{currencyImage}}\"></div>\r\n                                                        </div>\r\n                                                        <div fxFlex=\"75%\">\r\n                                                            <mat-select formControlName=\"transactionCurrency\"\r\n                                                                placeholder=\"Select Transaction Currency\"\r\n                                                                id=\"testSelect\" style=\"background-color: #f9fafb;\"\r\n                                                                >\r\n                                                                <mat-option\r\n                                                                    *ngFor=\"let country of countryValues; let i = index\"\r\n                                                                    (click)=\"onCountryChange(country)\" style=\"font-size:110%\"\r\n                                                                    [value]=\"country.currencyCode\">\r\n                                                                    <div fxLayout=\"row wrap\" class=\"full-width\">\r\n                                                                        <div fxFlex=\"15%\">{{country.currencyCode}}</div>\r\n                                                                        <div fxFlex=\"85%\">\r\n                                                                            <div\r\n                                                                                class=\"currency-flag currency-flag-{{addCurrencyImage(country.currencyCode)}} alignImage\">\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </mat-option>\r\n                                                            </mat-select>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </mat-card>\r\n                                            </div>\r\n\r\n                                            <div fxFlex=\"25%\" fxFlex.xs=\"100%\" *ngIf=\"showAccountNum\">\r\n                                                <mat-hint class=\"totalAmount\">Transaction Amount*</mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <input matInput type=\"text\" *ngIf=\"!phoneNumber\" [readonly]=\"true\" class=\"full-width\" formControlName=\"transactionAmount\">\r\n                                                    <input matInput class=\"full-width\" *ngIf=\"phoneNumber\"  #myRef [(ngModel)]= \"transAmount\"  formControlName=\"transactionAmount\" [value]= \"transAmt | number: '1.'\"\r\n                                                    (keyup)=\"OnInput($event)\" (focus)=\"clicked($event)\" [readonly]=\"isedit\" >\r\n                                                </mat-card>\r\n                                                <mat-error *ngIf=\"chequedepositForm.get('transactionAmount').errors?.min\">\r\n                                                    Amount must be greater than zero\r\n                                                   </mat-error>\r\n                                            </div>\r\n                                            <div fxFlex=\"25%\" fxFlex.xs=\"100%\" *ngIf=\"!showAccountNum\">\r\n                                                <mat-hint class=\"totalAmount\">Transaction Amount*</mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <input matInput class=\"full-width\" #myRef\r\n                                                        [(ngModel)]=\"transAmount\" formControlName=\"transactionAmount\"\r\n                                                        [value]=\"transAmt | number: '1.'\" (keyup)=\"OnInput($event)\"\r\n                                                        (focus)=\"clicked($event)\" >\r\n                                                </mat-card>\r\n                                                <mat-error *ngIf=\"chequedepositForm.get('transactionAmount').errors?.min\">\r\n                                                    Amount must be greater than zero\r\n                                                </mat-error>\r\n                                            </div>\r\n                                            <div fxFlex=\"25%\" fxFlex.xs=\"100%\">\r\n                                                <mat-hint class=\"totalAmount\">Cheque Number*</mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <!-- <mat-select formControlName=\"holderName\"  style=\"background-color: #f9fafb;\" >\r\n                                                        <mat-option *ngFor=\"let holder of customerName;\" [value]=\"holder\">{{holder}}</mat-option>\r\n                                                    </mat-select> -->\r\n                                                    <input matInput type=\"text\" maxlength=\"6\" (keypress)=\"omit_number($event)\"  *ngIf=\"!phoneNumber\"   class=\"full-width\" formControlName=\"chequeNumber\" >\r\n                                                    <input matInput type=\"text\" maxlength=\"6\" (keypress)=\"omit_number($event)\" *ngIf=\"phoneNumber\"  class=\"full-width\" formControlName=\"chequeNumber\" >\r\n                                                </mat-card>\r\n                                                <mat-error *ngIf=\"chequedepositForm.get('chequeNumber').touched && !chequedepositForm.get('chequeNumber').valid\">\r\n                                                    Cheque Number is Required!\r\n                                                   </mat-error>\r\n                                            </div>\r\n                                            <div fxFlex=\"25%\" fxFlex.xs=\"100%\">\r\n                                                <mat-hint class=\"totalAmount\">Total Charge Amount*</mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <input matInput class=\"full-width\" readonly formControlName=\"totalChargeAmount\">\r\n                                                </mat-card>\r\n\r\n                                            </div>\r\n                                            <div fxFlex=\"25%\" fxFlex.xs=\"100%\">\r\n                                                <mat-hint class=\"totalAmount\">Total Transaction Amount*</mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <input matInput type=\"text\" readonly onlyNumber formControlName=\"totalTransactionAmount\">\r\n\r\n                                                </mat-card>\r\n\r\n                                            </div>\r\n                                            <div class=\"tooltip\">\r\n                                                <img width=\"80%\"\r\n                                            [src]=\"'assets/images/info.svg'\"/>\r\n                                                <div class=\"tooltiptext\">\r\n                                                    <p class=\"totalAmount textcolor\" style=\"margin-top:10px; margin-bottom:6px\">Transaction Amount:{{chequedepositForm.get('transactionAmount').value}} </p>\r\n                                                    <p class=\"totalAmount textcolor\">Total Charge Amount:{{chequedepositForm.get('totalChargeAmount').value}} </p>\r\n                                                    <hr/>\r\n                                                    <p class=\"totalAmount textcolor\" style=\"margin-right:10px ;\">Total Transaction Amount:{{chequedepositForm.get('totalTransactionAmount').value}} </p>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                        </ng-container>\r\n                                    </div>\r\n                                </div>\r\n                             \r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </mat-card-content>\r\n            </mat-card>\r\n            <div>\r\n                <div fxLayout=\"row wrap\" class=\"flex-container stretch\">\r\n                    <ng-container>\r\n                        <div fxFlex=\"30%\" fxFlex.xs=\"100%\" class=\"paddingCls\">\r\n                            <button mat-flat-button *ngIf=\"phoneNumber\" class=\"buttonCancel full-width\"\r\n                                (click)=\"goToServiceScreens()\">CANCEL</button>\r\n                        </div>\r\n                        <div fxFlex=\"70%\" fxFlex.xs=\"100%\" class=\"paddingCls\" *ngIf=\"showAccountNum\">\r\n                            <button mat-flat-button class=\"buttonNext full-width\"\r\n                            [disabled]=\"!enableContinue || !chequedepositForm.get('transactionCurrency').valid\r\n                            ||!chequedepositForm.get('transactionAmount').valid\r\n                            ||!chequedepositForm.get('accountCurrency').valid\r\n                            ||!chequedepositForm.get('accountNumber').valid \r\n                            ||!chequedepositForm.get('accountType').valid\r\n                            ||!chequedepositForm.get('chequeNumber').valid\r\n                            ||!chequedepositForm.get('totalChargeAmount').valid\r\n                            ||!chequedepositForm.get('totalTransactionAmount').valid\"\r\n                                (click)=\"onSaveofchequeDeposit(chequedepositForm.value, ifQRvariable)\">GENERATE TOKEN</button>\r\n                        </div>\r\n                        <div fxFlex=\"70%\" fxFlex.xs=\"100%\" class=\"paddingCls\" *ngIf=\"!showAccountNum\">\r\n                            <button mat-flat-button class=\"buttonNext full-width\"\r\n                            [disabled]=\"!enableContinue || !chequedepositForm.get('transactionCurrency').valid\r\n                            ||!chequedepositForm.get('transactionAmount').valid\r\n                            ||!chequedepositForm.get('accountCurrency').valid\r\n                            ||!chequedepositForm.get('accountNumber').valid \r\n                            ||!chequedepositForm.get('accountType').valid\r\n                            ||!chequedepositForm.get('chequeNumber').valid\r\n                            ||!chequedepositForm.get('totalChargeAmount').valid\r\n                            ||!chequedepositForm.get('totalTransactionAmount').valid\"\r\n                                (click)=\"getOTP(chequedepositForm.value, ifQRvariable)\">CONTINUE</button>\r\n                        </div>\r\n                    </ng-container>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n       \r\n\r\n        \r\n    </div>\r\n</div>\r\n\r\n","import { Routes } from '@angular/router';\r\nimport { AppBlankComponent } from './app-blank/app-blank.component';\r\nimport { AuthenticateComponent } from './authenticate/authenticate.component';\r\nimport { CashDepositComponent } from './cash-deposit/cash-deposit.component';\r\nimport { CashWithdrawalComponent } from './cash-withdrawal/cash-withdrawal.component';\r\nimport { ChequeDepositComponent } from './cheque-deposit/cheque-deposit.component';\r\nimport { ChequeWithdrawalComponent } from './cheque-withdrawal/cheque-withdrawal.component';\r\nimport { ChequeWithdrawal1Component } from './cheque-withdrawal1/cheque-withdrawal1.component';\r\nimport { DepositTopupComponent } from './deposit-topup/deposit-topup.component';\r\nimport { ForexTransactionComponent } from './forex-transaction/forex-transaction.component';\r\nimport { LoanPaymentComponent } from './loan-payment/loan-payment.component';\r\nimport { SelectServiceComponent } from './select-service/select-service.component';\r\nimport { UtilityBillpaymentComponent } from './utility-billpayment/utility-billpayment.component';\r\n\r\nexport const OthersRoutes: Routes = [\r\n  {\r\n    path: \"\",\r\n    // component: DashboardComponent,\r\n\r\n    children: [\r\n      {\r\n        path: \"blank\",\r\n        component: AppBlankComponent,\r\n        // data: { title: 'Blank', breadcrumb: 'BLANK' }\r\n      },\r\n      {\r\n        path: \"cheque-withdrawal\" ,\r\n        component: ChequeWithdrawalComponent,\r\n        // data: { title: 'Blank', breadcrumb: 'BLANK' }\r\n      },\r\n      {\r\n        path: \"services\" ,\r\n        component: SelectServiceComponent,\r\n      },\r\n      {\r\n        path: \"authenticate\" ,\r\n        component: AuthenticateComponent,\r\n        // data: { title: 'Blank', breadcrumb: 'BLANK' }\r\n      },\r\n      {\r\n        path: \"cash-withdrawal\" ,\r\n        component: CashWithdrawalComponent,\r\n      },\r\n      {\r\n        path: \"cash-deposit\" ,\r\n        component: CashDepositComponent,\r\n      },\r\n      {\r\n        path: \"cheque-deposit\" ,\r\n        component: ChequeDepositComponent,\r\n      },\r\n      {\r\n        path: \"cheque-withdrawal\" ,\r\n        component: ChequeWithdrawal1Component,\r\n      },\r\n      {\r\n        path: \"forex-transaction\" ,\r\n        component: ForexTransactionComponent,\r\n      },\r\n      {\r\n        path: \"loan-payment\" ,\r\n        component: LoanPaymentComponent,\r\n      },\r\n      {\r\n        path: \"deposit-topup\" ,\r\n        component: DepositTopupComponent,\r\n      },\r\n      {\r\n        path: \"utility-billpayment\" ,\r\n        component: UtilityBillpaymentComponent,\r\n      },\r\n     \r\n    ]\r\n  } \r\n];\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl, FormBuilder, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { DialogService } from 'app/shared/services/Dialog/dialog.service';\r\n\r\ninterface Testing {\r\n  value: string;\r\n  viewValue: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-deposit-topup',\r\n  templateUrl: './deposit-topup.component.html',\r\n  styleUrls: ['./deposit-topup.component.scss']\r\n})\r\nexport class DepositTopupComponent implements OnInit {\r\n  depositForm: FormGroup;\r\n  depositTopUp : any = 'Deposit Top Up';\r\n  constructor(private router : Router,private formBuilder: FormBuilder, private dialogService : DialogService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.depositForm = this.formBuilder.group({\r\n      depositAccount:['', [Validators.required]],\r\n      revisedAmount:['', [Validators.required]],\r\n      maturityAmount:['', [Validators.required]],\r\n      payFromAccount:['', [Validators.required]],\r\n      holderName:['', [Validators.required]],\r\n      topupAmount:['', [Validators.required]], \r\n    });\r\n  }\r\n  goToServiceScreens(){\r\n    this.router.navigateByUrl('/others/services');\r\n  }\r\n  goToAuthenticate(){\r\n    this.dialogService.authenticationDialog();\r\n  }\r\n\r\n  testing: Testing[] = [\r\n    { value: 'Demo', viewValue: 'Demo 1' },\r\n    { value: 'Demo', viewValue: 'Demo 2' },\r\n    { value: 'Demo', viewValue: 'Demo 3' }\r\n  ];\r\n\r\n\r\n}\r\n","<div class=\"fullcard\">\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"center center\">\r\n        <div fxFlex=\"80%\">\r\n            <mat-card class=\"chequecard\">\r\n                <mat-card-title style=\"padding: 2%;\">\r\n                    <div fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n                        <div>\r\n                            <mat-icon class=\"backIcon\" (click)=\"goToServiceScreens()\">keyboard_backspace</mat-icon>\r\n                        </div> &nbsp;&nbsp;\r\n                        <div class=\"card-title\">Deposit Top Up</div>\r\n                    </div>\r\n                </mat-card-title>\r\n                <mat-card-content>\r\n                    <div class=\"full-width\" style=\"padding: 0% 3% 3% 2%;\">\r\n                        <!-- <form #depositForm=\"ngForm\"> -->\r\n                        <form [formGroup]=\"depositForm\">     \r\n                            <div fxLayout=\"column\" fxLayoutGap=\"5%\" fxLayoutAlign=\"space-between none\">\r\n                                <div>\r\n                                    <div fxLayout=\"row wrap\" class=\"flex-container stretch\">\r\n                                        <ng-container>\r\n                                            <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                                <mat-hint class=\"totalAmount\">Deposit Account* </mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <mat-select formControlName=\"depositAccount\" class=\"full-width\" style=\"background-color: #f9fafb;\">\r\n                                                        <mat-option *ngFor=\"let test of testing\" [value]=\"test.value\">\r\n                                                            {{test.viewValue}}\r\n                                                        </mat-option>\r\n                                                    </mat-select>\r\n                                                </mat-card>\r\n                                                <mat-hint class=\"totalAmount\">Account Balance : $12,09470</mat-hint>\r\n                                            </div>\r\n                                            <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                                <mat-hint class=\"totalAmount\">Revised Principal Amount*</mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <input matInput formControlName=\"revisedAmount\" class=\"full-width inputClass\" type=\"text\"\r\n                                                        name=\"revisedAmount\">\r\n                                                </mat-card>\r\n\r\n                                            </div>\r\n                                            <div fxFlex=\"34%\" fxFlex.xs=\"100%\">\r\n                                                <mat-hint class=\"totalAmount\">Revised Maturity Amount* </mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <input matInput formControlName=\"maturityAmount\" type=\"text\" class=\"full-width inputClass\"\r\n                                                        name=\"maturityAmount\">\r\n                                                </mat-card>\r\n                                            </div>\r\n                                        </ng-container>\r\n                                    </div>\r\n                                </div>\r\n                                <div>\r\n                                    <span layout=\"row\">\r\n                                        <hr class=\"line\" flex />\r\n                                    </span>\r\n                                </div>\r\n                                <div>\r\n                                    <div fxLayout=\"row wrap\" class=\"flex-container stretch\">\r\n                                        <ng-container>\r\n                                            <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                                <mat-hint class=\"totalAmount\">Pay from Account*</mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <mat-select formControlName=\"payFromAccount\" class=\"full-width\" style=\"background-color: #f9fafb;\">\r\n                                                        <mat-option *ngFor=\"let test of testing\" [value]=\"test.value\">\r\n                                                            {{test.viewValue}}\r\n                                                        </mat-option>\r\n                                                    </mat-select>\r\n                                                </mat-card>\r\n                                            </div>\r\n                                            <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                                <mat-hint class=\"totalAmount\"> Holder Name* </mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <mat-select formControlName=\"holderName\" class=\"full-width\" style=\"background-color: #f9fafb;\">\r\n                                                        <mat-option *ngFor=\"let test of testing\" [value]=\"test.value\">\r\n                                                            {{test.viewValue}}\r\n                                                        </mat-option>\r\n                                                    </mat-select>\r\n                                                </mat-card>\r\n                                            </div>\r\n                                            <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                                <mat-hint class=\"totalAmount\">Top Up Amount*</mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <input matInput formControlName=\"topupAmount\" type=\"text\" class=\"full-width inputClass\"\r\n                                                        name=\"topupAmount\">\r\n                                                </mat-card>\r\n                                            </div>\r\n                                        </ng-container>\r\n                                    </div>\r\n                                </div>\r\n                                <div>\r\n                                    <div fxLayout=\"row wrap\" class=\"flex-container stretch\">\r\n                                        <ng-container>\r\n                                            <div fxFlex=\"30%\" fxFlex.xs=\"100%\" style=\"padding: 0% 1%;\">\r\n                                                <button mat-flat-button class=\"buttonCancel full-width\"\r\n                                                    (click)=\"goToServiceScreens()\">CANCEL</button>\r\n                                            </div>\r\n                                            <div fxFlex=\"70%\" fxFlex.xs=\"100%\" style=\"padding: 0% 2%;\">\r\n                                                <button mat-flat-button class=\"buttonNext full-width\"\r\n                                                [disabled]=\" !depositForm.get('depositAccount').valid\r\n                                                || !depositForm.get('revisedAmount').valid\r\n                                                || !depositForm.get('maturityAmount').valid\r\n                                                || !depositForm.get('payFromAccount').valid\r\n                                                || !depositForm.get('holderName').valid\r\n                                                || !depositForm.get('topupAmount').valid \"\r\n                                                    (click)=\"goToAuthenticate()\">CONTINUE</button>\r\n                                            </div>\r\n                                        </ng-container>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </mat-card-content>\r\n            </mat-card>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-blank',\r\n  templateUrl: './app-blank.component.html',\r\n  styleUrls: ['./app-blank.component.css']\r\n})\r\nexport class AppBlankComponent implements OnInit {\r\n\r\n  constructor(private route:Router,) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n  onClickOfButton()\r\n  {\r\n    this.route.navigateByUrl('/others/cheque-withdrawal');\r\n  }\r\n  onClickOfButton1()\r\n  {\r\n    this.route.navigateByUrl('/others/cheque-withdrawal1');\r\n  }\r\n\r\n  onClickOfButton3()\r\n  {\r\n    this.route.navigateByUrl('/others/authenticate');\r\n  }\r\n\r\n}\r\n","<p class=\"m-333\">\r\n  <button mat-button (click)=\"onClickOfButton1()\" color=\"primary\">Cheque-Withdrawal 2</button>\r\n  <button mat-button (click)=\"onClickOfButton()\" color=\"primary\">Cheque-Withdrawal 3</button>\r\n  <button mat-button (click)=\"onClickOfButton3()\" color=\"primary\">Authentication</button>\r\n\r\n</p>","import { Component, EventEmitter, Inject, OnInit, Output } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { verifyotpModel } from 'app/shared/models/otp.model';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\n\r\n@Component({\r\n  selector: 'app-otp-verify',\r\n  templateUrl: './otp-verify.component.html',\r\n  styleUrls: ['./otp-verify.component.scss']\r\n})\r\nexport class OtpVerifyComponent implements OnInit {\r\n  errormsg : string;\r\n  basicInformationForm: FormGroup;\r\n  public number;\r\n  public type;\r\n  title: string;\r\n  customerPhoneNum: string;\r\n  verifyOtpModel = new verifyotpModel();\r\n  @Output() afterSubmit : EventEmitter<boolean> = new EventEmitter();\r\n  \r\n  constructor(private dialogRef: MatDialogRef<OtpVerifyComponent>, private apiService: ApiService,\r\n    private snack: MatSnackBar,private fb: FormBuilder,private router: Router,\r\n    @Inject(MAT_DIALOG_DATA) private data: any) { }\r\n\r\n  ngOnInit(): void {\r\n    this.title = \"An OTP has been sent to the Registered Mobile Number!\";\r\n    this.basicInformationForm = this.fb.group({\r\n      otp: ['',[Validators.required]],\r\n    \r\n    })\r\n  }\r\n  closeClick(){\r\n    this.dialogRef.close();\r\n  }\r\n  validateOtp(otpValue) {\r\n    console.log(\"OTP validaion\", otpValue);\r\n    if(otpValue.otpNumber ==\"\")\r\n    {\r\n      this.snack.open(`Please enter OTP to continue`, 'OK', {\r\n        duration: 4000,\r\n        verticalPosition: 'top',\r\n        horizontalPosition: 'right'\r\n      }); \r\n    }\r\n    else{\r\n    this.customerPhoneNum = localStorage.getItem(\"otpPhoneNum\");\r\n    console.log(\"Phonenumber from Local\", this.customerPhoneNum, otpValue);\r\n    this.verifyOtpModel.sourceKey = 'mobile';\r\n    this.verifyOtpModel.sourceValue = this.customerPhoneNum;\r\n    this.verifyOtpModel.otp = otpValue.otp;\r\n    this.verifyOtpModel.type = '';\r\n    console.log(\"model\", this.verifyOtpModel);\r\n    this.apiService.verifyOtp(this.verifyOtpModel).subscribe(otpResp => {\r\n      console.log('otpResp :: ',otpResp)\r\n      if (otpResp != null) {\r\n        if(otpResp.userId != '' && otpResp.userId !=null && otpResp.status =='SUCCESS' ){\r\n          this.afterSubmit.emit(true);\r\n          localStorage.setItem('userId',otpResp.userId);\r\n          this.snack.open(`Validation successful`, 'OK', {\r\n            duration: 4000,\r\n            verticalPosition: 'top',\r\n            horizontalPosition: 'right'\r\n          });\r\n          this.dialogRef.close(true);\r\n        }else{\r\n          this.dialogRef.close(false);\r\n          this.snack.open(`${otpResp.responseMessage}`, 'OK', {\r\n            duration: 4000,\r\n            verticalPosition: 'top',\r\n            horizontalPosition: 'right'\r\n          });\r\n        }\r\n      }\r\n    },\r\n      (error) => {\r\n        console.log(error.status);\r\n        // this.errorStatus = error.status;\r\n        this.snack.open(`Incorrect OTP. Please try again.`, 'OK', {\r\n          duration: 4000,\r\n          verticalPosition: 'top',\r\n          horizontalPosition: 'right'\r\n        });\r\n        // if (this.errorStatus == 200) {\r\n        //   // this.router.navigateByUrl('/others/services');\r\n        //   /* TO-DO: need to uncomment this for fingerprint verification */\r\n        //   // this.openDialog();\r\n        // }\r\n      });\r\n    }\r\n  }\r\n}\r\n","\r\n\r\n\r\n  <button mat-button id=\"close\" mat-dialog-close (click)=\"closeClick()\">\r\n    <mat-icon class=\"closeicon\">close</mat-icon>\r\n  </button>\r\n \r\n\r\n<form [formGroup]=\"basicInformationForm\">\r\n\r\n<div fxLayout=\"row\">\r\n \r\n  <div class=\"pd-2\" id=\"box\">\r\n    \r\n    <span class=\"verification\">{{title}}</span> \r\n  <span class=\"phoneNumber\">{{this.number}}</span>\r\n  <span class=\"verify\">Please enter the OTP  to verify</span>\r\n  <div class=\"flex-grow-1\">\r\n \r\n    <mat-card type=\"input\" class=\"inputMatcard\">\r\n        <input matInput  id=\"otp\" \r\n        class=\"alignment\"  \r\n        type=\"number\"  \r\n        maxlength=\"6\" \r\n        oninput=\"this.value = this.value.slice(0, this.maxLength);\" \r\n        formControlName=\"otp\">\r\n    </mat-card>\r\n    \r\n   \r\n</div>\r\n<span class=\"verify1\">Not Recieved?<span id=\"resend\" > &nbsp; Resend</span></span>\r\n<!-- (click)=\"getOtp()\" -->\r\n</div>\r\n \r\n</div>\r\n\r\n  <button class=\"button\" mat-stroked-button [disabled]=\"!basicInformationForm.valid\"\r\n   (click)=\"validateOtp(basicInformationForm.value)\">Proceed</button>\r\n</form>\r\n\r\n","import { Country } from '@angular-material-extensions/select-country';\r\nimport { CurrencyPipe, getCurrencySymbol } from '@angular/common';\r\nimport { Component, Input, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\n// import { cashWithdrawDto } from 'app/shared/models/cashWithdrawDTO';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { DialogService, TokenObjects } from 'app/shared/services/Dialog/dialog.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { formatNumber } from '@angular/common';\r\nimport { ChangeDetectorRef } from '@angular/core';\r\n\r\nimport { ElementRef, Renderer2 } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { ViewChild } from '@angular/core';\r\nimport { otpModel } from 'app/shared/models/otp.model';\r\nimport { OtpVerifyComponent } from '../otp-verify/otp-verify.component';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { ThrowStmt } from '@angular/compiler';\r\n\r\n@Component({\r\n  selector: 'app-cash-withdrawal',\r\n  templateUrl: './cash-withdrawal.component.html',\r\n  styleUrls: ['./cash-withdrawal.component.scss']\r\n})\r\nexport class CashWithdrawalComponent implements OnInit {\r\n  // cashWithdrawDto = new cashWithdrawDto();\r\n  cashWithdrawal : any = 'Cash Withdrawal';\r\n  cashwithdrawForm: FormGroup;\r\n\r\n  @Input() tokenResp : any;\r\n  operation : string;\r\n \r\n  countryFormControl = new FormControl();\r\n  defaultValue: Country = {\r\n    name: 'Deutschland',\r\n    alpha2Code: 'DE',\r\n    alpha3Code: 'DEU',\r\n    numericCode: '276',\r\n    callingCode: '+49'\r\n  };\r\n  ifQRvariable = false;\r\n  index: string[];\r\n  cashWithdrawResponse: any;\r\n  productCode = \"CHW\";\r\n  tokenOrigin = \"Kiosk\";\r\n  custPref = \"N\";\r\n  entityCode=\"ENTCD\";\r\n  bankCode = \"BNKC\" ;\r\n  tokenBranch = \"1234\" ;\r\n  accountNum: string;\r\n  accountBal: any;\r\n  phoneNumber: string;\r\n  errorStatus: number;\r\n  custAccountData: any;\r\n  countryValues: any;\r\n  accounttypeArray =[];\r\n\r\n  @ViewChild('cdForm') cdForm: NgForm;\r\n\r\n  \r\n  idList = [];\r\n  noList: any[];\r\n  accNum: any;\r\n  denomCodeArray: any[] = [\r\n    { key: 'count2000', value: 2000 },\r\n    { key: 'count500', value: 500 },\r\n    { key: 'count200', value: 200 },\r\n    { key: 'count100', value: 100 },\r\n    { key: 'count50', value: 50 },\r\n    { key: 'count20', value: 20 },\r\n    { key: 'count10', value: 10 },\r\n    { key: 'count1', value: 1 }\r\n\r\n  ];\r\n  totalAmount: any;\r\n  transamount: any;\r\n  a: any;\r\n  tokenObjects =new TokenObjects();\r\n  accNumber: any;\r\n  appointmentId:any;\r\n  tokResponse: any;\r\n  tokenNum: any;\r\n  estimatedTime: any;\r\n  transAmt: any;\r\n  balance: string;\r\n  enableContinue: boolean=true;\r\n  isedit:boolean=true;\r\n  accountCurrency: any;\r\n  curr: string;\r\n  transAmount:string;\r\n  currencyImage: any = \"\";\r\n  custID: any;\r\n  qrData: any;\r\n  customerID: any;\r\n  selected: string;\r\n  userName: string;\r\n  branchNameFromLogin: string;\r\n  branchName: string;\r\n  arrayAccountBranch: any;\r\n  trasactionBranches: any;\r\n  branchData: any;\r\n  branch: any;\r\n  resultStatus: any;\r\n  // accountNoList[]: any[];\r\n  accountNoList = [];\r\n  selectedAccountInfo: any;\r\n  showAccountNum : boolean = true;\r\n  showAccoutType : boolean = true;\r\n  custValidation: string;\r\n  accountNumber: string;\r\n  custmerID: any;\r\n  phonenum: any;\r\n  oTpModel = new otpModel();\r\n  cashwithDrwValues: any;\r\n  cashwithDrwform: any;\r\n  cashwithDrwType: any;\r\n  enableBtn: boolean = true;\r\n  enableBtn1: boolean = false;\r\n  accountNum1: any[];\r\n  filteredAccoun: any[];\r\n  accountDropdown: boolean = false;\r\n  flag1: boolean=false;\r\n  denomRequired: any = '';\r\n  hideDetails:boolean=false;\r\n  qrBranchCode: any;\r\n  custNameFromLogin: string;\r\n  totalTransAmount: number;\r\n  chargeDetails: any;\r\n  cashData: any;\r\n  transBranch: string;\r\n\r\n  constructor\r\n  (\r\n    private router : Router,\r\n    private formBuilder: FormBuilder, \r\n    private dialogService : DialogService,\r\n    private apiService:ApiService,\r\n    private fb: FormBuilder,\r\n    private ls: LocalStoreService,\r\n    private snack: MatSnackBar,\r\n    private changeDef: ChangeDetectorRef,\r\n    private elRef: ElementRef,\r\n    private renderer: Renderer2,\r\n    private dialog: MatDialog,\r\n    private cdr:ChangeDetectorRef,\r\n    ) { }\r\n  ngOnInit() {\r\n    this.phoneNumber = localStorage.getItem(\"phonenumFromLogin\");\r\n    this.appointmentId = this.ls.getItem(\"TransactionType\");\r\n    this.transBranch=localStorage.getItem(\"TRANSACTIONBRANCH\") ;\r\n    \r\n    \r\n    this.qrData = JSON.parse(JSON.parse(localStorage.getItem('scannerData')));\r\n    console.log(\"QRData\", this.qrData);\r\n    this.cashwithdrawForm = this.fb.group({\r\n    transactionId:['', [Validators.required]],\r\n    customerId:['', [Validators.required]],\r\n    accountNumber:['', [Validators.required]],\r\n    accountType:['', [Validators.required]],\r\n    holderName :['', [Validators.required]], \r\n    accountCurrency:['', [Validators.required]],\r\n    transactionCurrency: ['', [Validators.required]],\r\n    transactionAmount:['', [Validators.required, Validators.min(.1)]],\r\n    accountBalance:[''],\r\n    productCode:['CHW',[Validators.required]],\r\n    tokenOrigin : ['Kiosk',[Validators.required]],\r\n    exchangeRate:['', [Validators.required]],\r\n    accountAmount:['', [Validators.required]],\r\n    totalChargeAmount:['', [Validators.required]],\r\n    totalTransactionAmount:['',[Validators.required]],\r\n    narrative:['', [Validators.required]],\r\n    denomination:[null, [Validators.required]],\r\n    totalAmount:['', [Validators.required]],\r\n    entityCode:[this.entityCode,[Validators.required]],\r\n    bankCode:[this.bankCode,[Validators.required]],\r\n    tokenBranch:[this.tokenBranch,[Validators.required]],\r\n    customerCategory:[this.custPref,[Validators.required]],\r\n    tokenNumber:['', [Validators.required]],\r\n    estimatedWaitTime:['', [Validators.required]],\r\n     accountBranch: ['', [Validators.required]],\r\n      transactionBranch:['', [Validators.required]]\r\n    //transAmt: ['', [Validators.required, Validators.pattern(/\\B(?=(\\d{3})+(?!\\d))/g.',')]],\r\n    \r\n    });\r\n    this.custValidation = localStorage.getItem(\"customerValidation\");\r\n    this.custNameFromLogin = localStorage.getItem(\"FromLogin\");\r\n    if(this.custValidation == \"New Customer\"){\r\n      this.showAccountNum = false;\r\n      this.showAccoutType = false;\r\n    } \r\n    if(this.custNameFromLogin!=null){\r\n      this.showAccountNum=false;\r\n    } \r\n     console.log(\"CWH :: \" + this.cashwithdrawForm.value);\r\n     if(this.phoneNumber && this.custNameFromLogin==null && this.appointmentId==null){\r\n       this.ifQRvariable = false;\r\n      this.gettingallTansactionDetails(this.phoneNumber);\r\n      }\r\n      // else{\r\n        if(this.qrData!=null){\r\n        // ;\r\n        this.ifQRvariable = true;\r\n        console.log(\"Account\", this.qrData);\r\n        this.cashwithdrawForm.controls.holderName.setValue(this.qrData.holderName);\r\n        this.cashwithdrawForm.controls.accountType.setValue(this.qrData.accountType);\r\n        this.cashwithdrawForm.controls.accountNumber.setValue(this.qrData.accountId);\r\n        this.getChargeDetails(this.qrData.accountId,'');\r\n        this.cashwithdrawForm.controls.transactionAmount.setValue(this.qrData.transactionAmount);\r\n        this.cashwithdrawForm.controls.accountCurrency.setValue(this.qrData.accountCurrency);\r\n        this.cashwithdrawForm.controls.transactionCurrency.setValue(this.qrData.transactionCurrency);\r\n        this.accountBal = this.qrData.accountBalance;\r\n        this.customerID = this.qrData.customerId;\r\n        this.currencyImage = 'currency-flag-'+this.qrData.accountCurrency.toLowerCase();\r\n        this.currencyImage = 'currency-flag-'+this.qrData.transactionCurrency.toLowerCase();\r\n        if(this.qrData.transactionBranch !=null && this.qrData.transactionBranch !=''){\r\n          this.cashwithdrawForm.controls.transactionBranch.setValue(this.qrData.transactionBranch);\r\n        }else{\r\n          this.cashwithdrawForm.controls.transactionBranch.setValue('Kasturi Nagar');\r\n        }\r\n        \r\n        this.getAccountBranch();\r\n      }\r\n     this.getCountrynameValues();\r\n     this.getAccountBranch();\r\n    this.gettransactionBranch(\"account_branch\");\r\n    this.getBankInformation(\"KN\")\r\n    if(this.appointmentId.data.appointmentId){\r\n      this.cashWithdrawlData();\r\n    }\r\n  }\r\n  fetchByAccountNum(accNum){\r\n    this.cashwithdrawForm.controls.transactionAmount.reset();\r\n    this.cashwithdrawForm.controls.totalTransactionAmount.setValue(this.cashwithdrawForm.controls.totalChargeAmount.value);\r\n    console.log(\"Account Numebr\",accNum);\r\n    this.ifQRvariable = true;\r\n    this.apiService.fetchByaccNum(accNum).subscribe((res: any) => {\r\n      console.log('Account Number Rsp', res);\r\n      this.getChargeDetails(accNum,'');\r\n      this.userName = res.accHolderName;\r\n      this.accountBal = res.accBalance;\r\n      this.custmerID = res.customerId;\r\n      this.accountNumber = res.accountId;\r\n      this.accountCurrency = res.accountCurrency\r\n      this.curr = getCurrencySymbol(res.currency, \"narrow\");\r\n      this.cashwithdrawForm.controls.accountType.setValue(res.accountType);\r\n      this.cashwithdrawForm.controls.accountBranch.setValue(res.accountBranch);\r\n      this.cashwithdrawForm.controls.holderName.setValue(this.userName); \r\n      this.getCountrynameValues();\r\n      // this.currencyImage = 'currency-flag-'+res.currency.toLowerCase();\r\n      this.currencyImage = 'currency-flag-'+res.currency.toLowerCase();\r\n      this.cashwithdrawForm.controls.transactionCurrency.setValue(res.currency);\r\n      this.cashwithdrawForm.controls.accountCurrency.setValue(res.currency);\r\n\r\n      console.log(this.ifQRvariable);\r\n      this.custAmountBal(accNum);\r\n      this.cashwithdrawForm.controls.transactionBranch.setValue('Kasturi Nagar');\r\n      this.apiService.fetchByaccDeatilsoncustId(res.customerId).subscribe((resp: any) => {\r\n        this.phonenum = resp[0].phoneNumber;\r\n        localStorage.setItem('otpPhoneNum', this.phonenum);\r\n      }) \r\n  });\r\n\r\n}\r\n\r\n  \r\n//  numberWithCommas = (transAmt) => {\r\n//   return transAmt.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\r\n//   console.log(transAmt);\r\n//   }\r\n  gettransactionBranch(key: string) {\r\n    this.apiService.getTransactionBranch(key)\r\n      .subscribe(branches => {\r\n        console.log('branches :: ', branches);\r\n        this.trasactionBranches = branches;\r\n       \r\n      })\r\n  }\r\n  getAccountBranch() {\r\n    this.apiService.getBranchforKiosk()\r\n      .subscribe((data: any) => {\r\n        this.branchData = data;\r\n          console.log( this.branchData);\r\n          data.forEach((element,index)=>{\r\n            this.branch = data[index].branchName;\r\n            console.log(this.branch);\r\n            // this.cashwithdrawForm.controls.accountBranch.setValue(this.branch);\r\n         });      \r\n      });\r\n  }\r\n\r\n  \r\n  getCountrynameValues() {\r\n    this.apiService.getCountryValues().subscribe((allCountryValues : any)=> {\r\n      this.countryValues = allCountryValues;\r\n      console.log(this.countryValues);\r\n      });\r\n  }\r\n\r\n\r\n\r\n  onCountrySelected($event: Country): void {\r\n    // console.log($event.alpha3Code);\r\n  }\r\n  gettingallTansactionDetails(phoneNumber) {\r\n    \r\n    this.phoneNumber = localStorage.getItem(\"phonenumFromLogin\");\r\n    this.apiService.gettingTransactionDetails(this.phoneNumber).subscribe((allTransactionResp : any)=> {\r\n    console.log(\"All Transaction Details\",allTransactionResp);\r\n    this.userName = (allTransactionResp.firstName ? allTransactionResp.firstName + ' ' : ' ') + \r\n    (allTransactionResp.middleName ? allTransactionResp.middleName + ' ' : ' ') +\r\n     (allTransactionResp.lastName ? allTransactionResp.lastName : ' ');\r\n    this.cashwithdrawForm.controls.holderName.setValue(this.userName);\r\n    // this.setBalance(allTransactionResp.custAccount);\r\n    this.custID = allTransactionResp.customerId;\r\n    console.log(\"Cust\", this.custID);\r\n    this.custAccountData = allTransactionResp.custAccount;\r\n    this.accounttypeArray = [...this.custAccountData].filter(({accountType},index )=> \r\n    ![...this.custAccountData].map(obj=> obj.accountType).includes(accountType, index +1));\r\n    console.log(this.accounttypeArray)\r\n    for(let i = 0; i < this.custAccountData.length; i++){\r\n      if(this.custAccountData[i].status == 'APPROVED'){\r\n        this.accountNoList.push(this.custAccountData[i]);    \r\n      }\r\n    }\r\n    console.log(this.accountNoList);\r\n    if(this.custAccountData && this.accountNoList.length<=1){\r\n      this.accountDropdown=false;\r\n      this.hideDetails=true;\r\n      const accTyp = allTransactionResp.custAccount[0].accountType;\r\n      this.cashwithdrawForm.controls.accountType.setValue(accTyp);\r\n      this.custAccountNumber(this.accountNoList[0]);\r\n    }else{\r\n      this.accountDropdown=true;\r\n      this.hideDetails=true;\r\n      const accTyp = allTransactionResp.custAccount[0].accountType;\r\n      this.cashwithdrawForm.controls.accountType.setValue(accTyp);\r\n      this.custAccountNumber(allTransactionResp.custAccount[0]);\r\n    }\r\n  \r\n    });\r\n\r\n    \r\n  }\r\n  getAccountType(event:any){\r\n    this.cashwithdrawForm.controls.transactionAmount.reset();\r\n    this.cashwithdrawForm.controls.totalTransactionAmount.setValue(this.cashwithdrawForm.controls.totalChargeAmount.value);\r\n    this.accountNoList=[];\r\n    this.isedit=false;\r\n    this.accountNum1=[...this.custAccountData].filter((accounNum,index)=>{\r\n      return accounNum.accountType==event;\r\n    });\r\n    // this.accountNoList=this.accountNum1\r\n    // this.accountNoList=this.accountNum1.map((acccount)=>\r\n    // {\r\n    //   return acccount.accountId\r\n    // });\r\n    for(let i = 0; i < this.custAccountData.length; i++){\r\n      if(this.custAccountData[i].status == 'APPROVED' && this.custAccountData[i].accountType == event){\r\n        this.accountNoList.push(this.custAccountData[i].accountId);    \r\n      }\r\n    }\r\n   // this.accountNoList.push(12233)\r\n   console.log(this.accountNoList)\r\n   \r\n    if(this.accountNoList.length<=1){\r\n      // this.cashwithdrawForm.controls.accountNumber.patchValue(this.accountNoList[0]);\r\n      this.flag1=false; \r\n      this.getData(this.accountNoList[0]);\r\n     \r\n      this.cashwithdrawForm.controls.accountNumber.setValue(this.accountNoList[0]);\r\n    }\r\n    else{\r\n      this.getData(this.accountNoList[0]);\r\n      this.flag1=true;   \r\n    }\r\n    this.getChargeDetails(this.accountNoList[0],'');\r\n  }\r\n  custAccountNumber(custype){\r\n    console.log('custype :: ',custype);\r\n    this.isedit=false;\r\n   this.idList = [...this.custAccountData].filter(item => item.accountType === custype.accountType);\r\n  //  const defaultId = this.idList ? this.idList[0] : null;\r\n   console.log(\"idList :: \", this.idList);\r\n    this.accountNoList = [];\r\n   for(let i = 0; i < this.idList.length; i++){\r\n      if(this.idList[i].status == 'APPROVED'){\r\n        this.accountNoList.push(this.idList[i].accountId);    \r\n      }\r\n    }\r\n    console.log('accountNoList :: ',this.accountNoList);\r\n    if(this.accountNoList.length<=1){\r\n      // this.cashwithdrawForm.controls.accountNumber.patchValue(this.accountNoList[0]);\r\n      this.flag1=false; \r\n      // this.getData(this.accountNoList[0]);\r\n      this.cashwithdrawForm.controls.accountNumber.setValue(this.accountNoList[0]);\r\n    }\r\n    else{\r\n      this.cashwithdrawForm.controls.accountNumber.setValue(this.accountNoList[0]);\r\n      this.flag1=true;   \r\n    }\r\n  \r\n  //  this.cashwithdrawForm.controls.accountNumber.setValue(defaultId);\r\n  // this.cashwithdrawForm.controls.accountType.setValue(defaultId);\r\n   this.cashwithdrawForm.controls.accountCurrency.setValue(custype.accountCurrency);\r\n   this.cashwithdrawForm.controls.accountBranch.setValue(this.branch);\r\n   //this.cashwithdrawForm.controls.transactionAmount.setValue(custype.amount);\r\n  //  this.cashwithdrawForm.controls.accountType.setValue(custype.accountType);\r\n   console.log(\"AccountCurrency\",custype.accountCurrency);\r\n   \r\n   this.selected=custype.accountCurrency;\r\n    this.curr = getCurrencySymbol(custype.accountCurrency, \"narrow\");\r\n    this.cashwithdrawForm.controls.transactionCurrency.setValue(custype.accountCurrency);\r\n   \r\n    this.currencyImage = 'currency-flag-'+custype.accountCurrency.toLowerCase();\r\n    console.log('data :: ',this.idList[0]);\r\n  //  this.accountBal = this.idList[0].amount;\r\n   console.log(this.accountBal);\r\n   localStorage.setItem(\"AccountBal\",this.accountBal);\r\n  //  this.cashwithdrawForm.controls.accountNumber.setValue(this.idList[0].accountId);\r\n   this.custAmountBal(this.accountNoList[0]);\r\n   this.cashwithdrawForm.controls.accountBranch.setValue(custype.accountBranch);\r\n   this.getChargeDetails(this.accountNoList[0],custype.amount);\r\n  }\r\n  getData(custNum){\r\n    this.hideDetails=true;\r\n    let val=this.accountNum1.filter((value)=>{\r\n    return value.accountId==custNum}\r\n    )\r\n    \r\n    this.idList = [...this.custAccountData].filter(item => item.accountType === val[0].accountType);\r\n    this.cashwithdrawForm.controls.accountCurrency.setValue(val[0].accountCurrency);\r\n   this.cashwithdrawForm.controls.accountBranch.setValue(this.branch);\r\n   this.selected=val[0].accountCurrency;\r\n   this.curr = getCurrencySymbol(val[0].accountCurrency, \"narrow\");\r\n   this.cashwithdrawForm.controls.transactionCurrency.setValue(val[0].accountCurrency);\r\n  \r\n   this.currencyImage = 'currency-flag-'+val[0].accountCurrency.toLowerCase();\r\n  this.accountBal = val[0].amount;\r\n  localStorage.setItem(\"AccountBal\",this.accountBal);\r\n  this.cashwithdrawForm.controls.accountNumber.setValue(val[0].accountId);\r\n\r\n  this.custAmountBal(val[0].accountId);\r\n  this.cashwithdrawForm.controls.accountBranch.setValue(val[0].accountBranch);\r\n  this.getChargeDetails(val[0].accountId,'')\r\n  }\r\n  custAmountBal(custNum){\r\n    var account = this.idList.filter(function(record) {  \r\n      if(record.accountId == custNum){\r\n      return record;\r\n    }\r\n  });\r\n    this.accNum = account[0].accountId;\r\n    this.accountBal = account[0].amount;\r\n    this.selectedAccountInfo=account[0]\r\n    console.log(this.accountBal);\r\n    localStorage.setItem(\"AccountBal\",this.accountBal);\r\n  }\r\n  \r\n  getOTP(formData, type, cdForm){\r\n    this.cashwithDrwValues =formData;\r\n    this.cashwithDrwType = type;\r\n    this.cashwithDrwform = cdForm; \r\n    this.oTpModel.source = 'customer';\r\n    this.oTpModel.source_key = 'mobile';\r\n    this.oTpModel.source_value = this.phonenum;\r\nlet amount= 50000;\r\nlet transamountwithoutcomma=this.cashwithDrwValues.transactionAmount.replace(/,/g, \"\");\r\nconsole.log( transamountwithoutcomma);\r\nif(transamountwithoutcomma > amount){\r\n  this.apiService.getOtp(this.oTpModel).subscribe(otpResp => {\r\n    if (otpResp) {\r\n      this.openDialogOTP(this.phonenum);\r\n      this.snack.open(\"An OTP has been sent to the Registered Mobile Number.\" , \"\", {\r\n        duration: 4000,\r\n        verticalPosition: 'top',\r\n        horizontalPosition: 'right'\r\n      });\r\n    }\r\n  })\r\n}\r\nelse{\r\n  this.getOTPforSave(this.cashwithDrwValues,this.cashwithDrwType,this.cashwithDrwform);\r\n}\r\n  \r\n  }\r\n \r\n  openDialogOTP(numbr) {\r\n    const dialogRef = this.dialog.open(OtpVerifyComponent, {\r\n      data: { number: numbr, type: \"numbr\" },\r\n      disableClose: true,\r\n    });\r\n    dialogRef.afterClosed().subscribe(submit => {\r\n      console.log(\"submit\",submit);\r\n      if(submit){\r\n        this.getOTPforSave(this.cashwithDrwValues,this.cashwithDrwType,this.cashwithDrwform);\r\n      }\r\n     });\r\n  }\r\n  getOTPforSave(formData,type,cdForm){\r\n    let denominationData: any = {};\r\n        let denominationDataArray: any[] = [];\r\n        if(this.denomRequired == 'yes'){\r\n        for (let i = 0; i < this.denomCodeArray.length; i++) {\r\n          if (cdForm.value[this.denomCodeArray[i].key]) {\r\n            // denominationData.transactionId = this.cashdepositFor;\r\n            denominationData.denominationKey = this.denomCodeArray[i].value;\r\n            denominationData.denominationValue = +cdForm.value[this.denomCodeArray[i].key];\r\n            denominationData.currency = this.cashwithdrawForm.value.transactionCurrency;\r\n            // denominationData.amountAvailiable = 15200 - (cdForm.value[this.denomCodeArray[i].key] * this.denomCodeArray[i].value);\r\n            denominationDataArray.push(denominationData);\r\n            console.log(denominationDataArray)\r\n            denominationData = {};\r\n          }\r\n        }\r\n      }\r\n     if(this.custValidation == \"New Customer\"){\r\n     this.accountNum = formData.accountNumber;\r\n     formData.customerId = this.custmerID?this.custmerID:0;\r\n   \r\n     \r\n     formData.accountCurrency = formData.accountCurrency;\r\n     formData.transactionCurrency = formData.transactionCurrency;\r\n     formData.transactionAmount = formData.transactionAmount.replace(/,/g, '');\r\n   \r\n     formData.productCode = this.productCode;\r\n     formData.tokenOrigin = this.tokenOrigin;\r\n     formData.accountBalance = this.accountBal;\r\n\r\n     if(this.denomRequired == 'yes'){\r\n     formData.denomination = denominationDataArray;\r\n     }\r\n    }\r\n    if(this.appointmentId && this.appointmentId.data){\r\n      formData.transactionId = this.appointmentId.data.transactionId;\r\n      formData.transactionStatus = this.appointmentId.data.transactionStatus;\r\n    }\r\n    formData.customerId = this.custmerID?this.custmerID:0;\r\n    formData.transactionBranch = this.transBranch;\r\n    formData.transactionAmount = formData.transactionAmount.replace(/,/g, '');\r\n    formData.accountType = formData.accountType;\r\n    formData.accountNumber = this.accountNumber;\r\n    formData.holderName = formData.holderName;\r\n    formData.productCode = this.productCode;\r\n    formData.tokenOrigin = this.tokenOrigin;\r\n    formData.accountBalance = this.accountBal;\r\n    console.log(formData.transactionId,formData.transactionStatus)\r\n        console.log(\"before api call :: \",formData);\r\n      this.apiService.saveofCashwithdraw(formData).subscribe(cashWithdrawResp=>{\r\n        console.log( \"Response Success, Data Saved\", cashWithdrawResp);\r\n        this.cashWithdrawResponse = cashWithdrawResp;\r\n        this.tokenNum = this.cashWithdrawResponse.tokenNumber;\r\n        this.estimatedTime = this.cashWithdrawResponse.estimatedWaitTime;\r\n        localStorage.setItem(\"tokenNumer\",this.tokenNum);\r\n        localStorage.setItem(\"estimatedTiming\",this.estimatedTime);\r\n        this.enableContinue=false;\r\n        if(this.cashWithdrawResponse){\r\n        this.dialogService.tokenGenerationDialog();\r\n        }\r\n      });\r\n  \r\n     }\r\n\r\n  \r\n\r\n  goToServiceScreens(){\r\n    if(this.appointmentId){\r\n    if(this.appointmentId.data.appointmentId){\r\n      this.router.navigateByUrl('/sessions/login');\r\n      localStorage.removeItem(\"FromLogin\")\r\n      localStorage.removeItem(\"TransactionType\")\r\n      localStorage.removeItem(\"customerId\")\r\n      localStorage.removeItem(\"phonenumFromLogin\")\r\n      localStorage.removeItem(\"customerValidation\")\r\n      localStorage.removeItem(\"otpPhoneNum\")\r\n      localStorage.removeItem(\"AccountBal\")\r\n      localStorage.removeItem(\"AccountNumber\")\r\n      localStorage.removeItem(\"ProductCode\")\r\n      localStorage.removeItem(\"tokenNumer\")\r\n      localStorage.removeItem(\"estimatedTiming\")\r\n      localStorage.removeItem(\"userId\")\r\n      localStorage.removeItem(\"scannerData\")\r\n      localStorage.removeItem(\"custholderName\")\r\n    }\r\n  }\r\n    else{\r\n      this.router.navigateByUrl('/others/services');\r\n    }\r\n    \r\n  }  \r\n  goToAuthenticate(){\r\n    this.dialogService.authenticationDialog();\r\n  }\r\n \r\n  onSaveofCashWithdraw(form,type,cdForm){\r\n    form.transactionBranch = this.transBranch;\r\n    if(this.qrData){\r\n      if(this.qrData.transactionBranch){\r\n        this.apiService.fetchBranchInfoByBranchName(this.qrData.transactionBranch).subscribe(response=>{\r\n          this.qrBranchCode=response;\r\n          \r\n        })\r\n      }\r\n    }\r\n  \r\n  let denominationData: any = {};\r\n      let denominationDataArray: any[] = [];\r\n      if(this.denomRequired == 'yes'){\r\n        for (let i = 0; i < this.denomCodeArray.length; i++) {\r\n        if (cdForm.value[this.denomCodeArray[i].key]) {\r\n          // denominationData.transactionId = this.cashdepositFor;\r\n          denominationData.denominationKey = this.denomCodeArray[i].value;\r\n          denominationData.denominationValue = +cdForm.value[this.denomCodeArray[i].key];\r\n          denominationData.currency = this.cashwithdrawForm.value.transactionCurrency;\r\n          // denominationData.amountAvailiable = 15200 - (cdForm.value[this.denomCodeArray[i].key] * this.denomCodeArray[i].value);\r\n          denominationDataArray.push(denominationData);\r\n          console.log(denominationDataArray)\r\n          denominationData = {};\r\n        }\r\n      }\r\n      }\r\n      \r\n      form.tokenBranch = \"KN\";\r\n    if(!this.ifQRvariable){\r\n    this.accountNum=JSON.stringify(this.selectedAccountInfo.accountId);\r\n    form.transactionAmount=form.transactionAmount.replace(/,/g, '');\r\n    localStorage.setItem(\"AccountNumber\",this.accountNum);\r\n    localStorage.setItem(\"ProductCode\",this.productCode);\r\n    form.customerId = this.custID;\r\n    form.transactionCurrency = form.transactionCurrency;\r\n    form.accountNumber = this.selectedAccountInfo.accountId;\r\n    form.productCode = this.productCode;\r\n    form.tokenOrigin = this.tokenOrigin;\r\n    form.accountBalance = this.accountBal;\r\n    form.accountType = form.accountType;\r\n    if(this.denomRequired == 'yes'){\r\n form.denomination=denominationDataArray;\r\n    }\r\n   \r\n    }\r\n    else{\r\n      form.customerId = this.custID;\r\n      form.accountType = form.accountType;\r\n      // form.accountNumber = this.selectedAccountInfo.accountId\r\n      form.accountNumber = form.accountNumber;\r\n      form.holderName=  form.holderName;\r\n      form.accountCurrency  =form.accountCurrency;\r\n      form.transactionCurrency = form.transactionCurrency;\r\n      form.transactionAmount = form.transactionAmount;\r\n      form.productCode = this.productCode;\r\n      form.tokenOrigin = this.tokenOrigin;\r\n      if(this.denomRequired == 'yes'){\r\n        form.denomination=denominationDataArray;\r\n      }\r\n      if(this.qrData){\r\n        if(this.qrData.transactionBranch){\r\n          form.tokenBranch = this.qrBranchCode.transactionBranch;\r\n        }\r\n      }\r\n      \r\n      form.accountBalance = this.accountBal;\r\n    }\r\n    if(this.appointmentId && this.appointmentId.data){\r\n      form.transactionId = this.appointmentId.data.transactionId;\r\n      form.transactionStatus = this.appointmentId.data.transactionStatus;\r\n    }\r\n\r\n    console.log(form.transactionId,form.transactionStatus);\r\n\r\n    // form.totalAmount = form.totalAmount.replace(/,/g, '');\r\n\r\n    console.log(\"before api call :: \",form);\r\n    this.apiService.saveofCashDeposit(form).subscribe(cashWithdrawResp=>{\r\n      console.log( \"Response Success, Data Saved\", cashWithdrawResp);\r\n      this.cashWithdrawResponse = cashWithdrawResp;\r\n      this.tokenNum = this.cashWithdrawResponse.tokenNumber;\r\n      this.estimatedTime = this.cashWithdrawResponse.estimatedWaitTime;\r\n      localStorage.setItem(\"tokenNumer\",this.tokenNum);\r\n      localStorage.setItem(\"estimatedTiming\",this.estimatedTime);\r\n      this.enableContinue=false;\r\n      if(this.cashWithdrawResponse){\r\n      this.dialogService.tokenGenerationDialog();\r\n      }\r\n    });\r\n    \r\n  //   this.tokenObjects.productCode = this.productCode;\r\n  //   this.tokenObjects.accountNumber = form.accountNumber;\r\n  //   console.log(this.tokenObjects.accountNumber);\r\n  //   if(this.tokenObjects.productCode !== null || this.tokenObjects.accountNumber !==null){\r\n  //   this.apiService.generateToken(this.tokenObjects).subscribe(tokenResp=>{\r\n  //     console.log( \"Token Generated\", tokenResp);\r\n  //     this.tokResponse = tokenResp;\r\n  //     if(this.tokResponse){\r\n  //       this.tokenNum = this.tokResponse.tokenNumber;\r\n  //       this.estimatedTime = this.tokResponse.estimatedWaitTime;\r\n  //       localStorage.setItem(\"tokenNumer\",this.tokenNum);\r\n  //       localStorage.setItem(\"estimatedTiming\",this.estimatedTime);\r\n  //       form.tokenNo = this.tokenNum;\r\n  //       form.customerId = this.ls.getItem(\"customerId\");\r\n  //       this.apiService.saveofCashDeposit(form).subscribe(cashWithdrawResp=>{\r\n  //         console.log( \"Response Success, Data Saved\", cashWithdrawResp);\r\n  //         this.cashWithdrawResponse = cashWithdrawResp;\r\n  //         console.log(this.cashWithdrawResponse);\r\n  //         // this.cashwithdrawForm.reset();\r\n  //         this.enableContinue=false;\r\n  //         // this.ngOnInit();\r\n  //         this.dialogService.tokenGenerationDialog();\r\n  //       });\r\n  //     }\r\n  //   });\r\n  // }\r\n\r\n   }\r\n\r\n checkValue(event) {\r\n  if (event.target.value < 0) {\r\n    event.target.value = 0;\r\n  }\r\n}\r\n\r\nOnInput(event: any) {\r\n  this.transAmt= event.target.value;\r\nconsole.log(event.target.value);\r\nthis.totalAmount = 0;\r\n// this.denomRequired='yes';\r\n  // comma separator using changeDetector\r\n  const savedInput = this.transAmount;\r\n  // this.transAmount = '';\r\n  // this.changeDef.detectChanges();\r\n\r\n  \r\nlet lastCharIsPoint = false;\r\nif (savedInput.charAt(savedInput.length - 1) === '.') {\r\n  lastCharIsPoint = true;\r\n}\r\nconst num = savedInput.replace(/[^0-9.]/g, '');\r\n\r\n\r\nthis.transAmt = Number(num) || '';\r\nthis.transAmount = this.transAmt.toLocaleString('en-IN');\r\nif (lastCharIsPoint) {\r\n  this.transAmount = this.transAmount.concat('.');\r\n}\r\nthis.changeDef.detectChanges();\r\n\r\n  this.balance= localStorage.getItem(\"AccountBal\");\r\n  if(parseFloat(this.balance) < parseFloat(this.transAmt)){\r\n    console.log(\"Bigger\")\r\n    this.snack.open(`Transaction Amount should not exceed than Account Balance`, 'OK', {\r\n      duration: 2000,\r\n      verticalPosition: 'top',\r\n      horizontalPosition: 'right'\r\n    });\r\n    this.enableContinue=false;\r\n  }\r\n  else{\r\n    this.enableContinue=true;\r\n  }\r\n  this.totalTransAmount=Number(this.transAmt) + Number(this.chargeDetails?this.chargeDetails[0].amount:'');\r\n  this.cashwithdrawForm.controls.totalTransactionAmount.setValue(this.totalTransAmount);\r\n  this.cdr.markForCheck();\r\n  this.cdr.detectChanges();\r\n  }\r\n\r\n  clicked(event){\r\n    // console.log(event);\r\n  }\r\n  addCurrencyImage(currency) {\r\n    return currency.toLowerCase();\r\n  }\r\n\r\n  onCountryChange(country) {\r\n    let currency = country.currencyCode;\r\n    this.currencyImage = 'currency-flag-'+currency.toLowerCase();\r\n  }\r\n\r\n  accountCurrencyImage(accountCurrency){\r\n    return accountCurrency? 'currency-flag-'+accountCurrency.toLowerCase() : '';\r\n  }\r\n\r\n\r\n  omit_number(event) {\r\n    var key;\r\n    key = event.charCode;\r\n    return ((key > 47 && key < 58));\r\n  }\r\n  totalAmountValue(cdForm) {\r\n    this.a=this.cashwithdrawForm.value.transactionAmount;\r\n    this.a=this.a.replace(/\\,/g,''); // 1125, but a string, so convert it to number\r\n    this.a=parseInt(this.a,10);\r\n  \r\n\r\n\r\n    this.cashwithdrawForm.value.totalAmount =\r\n      ((cdForm.value.count2000 ? cdForm.value.count2000 * 2000 : 0) +\r\n        (cdForm.value.count500 ? cdForm.value.count500 * 500 : 0) +\r\n        (cdForm.value.count200 ? cdForm.value.count200 * 200 : 0) +\r\n        (cdForm.value.count100 ? cdForm.value.count100 * 100 : 0) +\r\n        (cdForm.value.count50 ? cdForm.value.count50 * 50 : 0) +\r\n        (cdForm.value.count20 ? cdForm.value.count20 * 20 : 0) +\r\n        (cdForm.value.count10 ? cdForm.value.count10 * 10 : 0) +\r\n        (cdForm.value.count1 ? cdForm.value.count1 * 1 : 0)\r\n      );\r\n        this.cashwithdrawForm.value.totalAmount = this.cashwithdrawForm.value.totalAmount;\r\n        console.log(this.cashwithdrawForm.value.totalAmount)\r\n        \r\n        this.transamount=this.cashwithdrawForm.value.transactionAmount;\r\n        this.totalAmount=this.cashwithdrawForm.value.totalAmount.toLocaleString('en-IN');\r\n        console.log(\"tran\",this.transAmount);\r\n        console.log(\"tot\",this.totalAmount);\r\n        \r\n          if(this.transamount != this.totalAmount){\r\n          this.enableBtn = false;\r\n        }\r\n        else{\r\n          this.enableBtn = true;\r\n        }\r\n\r\n           if((this.transamount > this.totalAmount) || (this.transamount < this.totalAmount)){\r\n          this.enableBtn1 = true;\r\n        }\r\n        else{\r\n          this.enableBtn1 = false;\r\n        }      \r\n        this.cashwithdrawForm.controls.totalAmount.setValue(this.cashwithdrawForm.value.totalAmount);\r\n      \r\n  }\r\n  cashWithdrawlData(){\r\n  this.apiService.getAppointmentId(this.appointmentId.data.appointmentId).subscribe((resp : any)=> {\r\n    console.log(\"resptest\",resp);\r\n    this.cashData=resp.data;\r\n    this.custID=resp.data.customerId;\r\n    this.ifQRvariable = true;\r\n    this.accountCurrency = resp.accountCurrency;\r\n    this.accountBal = resp.data.accountBalance;\r\n    this.userName = resp.data.holderName;\r\n    this.cashwithdrawForm.controls.accountBalance.setValue(this.accountBal);\r\n    this.cashwithdrawForm.controls.holderName.setValue(this.userName);\r\n    this.cashwithdrawForm.controls.accountType.setValue(resp.data.accountType);\r\n    this.cashwithdrawForm.controls.accountBranch.setValue(resp.data.accountBranch);\r\n    this.cashwithdrawForm.controls.accountNumber.setValue(resp.data.accountNumber);\r\n    this.getChargeDetails(resp.data.accountNumber,resp.data.transactionAmount);\r\n    this.cashwithdrawForm.controls.accountCurrency.setValue(resp.data.accountCurrency);\r\n    this.cashwithdrawForm.controls.transactionCurrency.setValue(resp.data.transactionCurrency);\r\n    this.cashwithdrawForm.controls.transactionAmount.setValue(resp.data.transactionAmount);\r\n    this.currencyImage = 'currency-flag-'+resp.data.accountCurrency.toLowerCase();\r\n    this.currencyImage = 'currency-flag-'+resp.data.transactionCurrency.toLowerCase();\r\n    \r\n  });\r\n  // this.denomRequired='yes';\r\n}\r\n\r\n\r\ngetChargeDetails(accountId,amount){\r\n  this.apiService.fetchChargeDetails(accountId).subscribe(resp => {\r\nconsole.log(resp);\r\nthis.chargeDetails=resp;\r\nthis.cashwithdrawForm.controls.totalChargeAmount.setValue(this.chargeDetails?this.chargeDetails[0].amount:'');\r\n  });\r\n  if(this.cashData){\r\n  setTimeout(() => {\r\n    this.totalTransAmount=Number(this.cashData.transactionAmount) + Number(this.chargeDetails[0].amount);\r\n    this.cashwithdrawForm.controls.totalTransactionAmount.setValue(this.totalTransAmount);\r\n  }, 1000);\r\n  this.cdr.markForCheck();\r\n  this.cdr.detectChanges();\r\n}\r\nelse{\r\n  console.log(this.chargeDetails)\r\n  amount = 0;\r\n  console.log(amount);\r\n  setTimeout(() => {\r\n    this.totalTransAmount=Number(amount) + Number(this.chargeDetails?this.chargeDetails[0].amount:'');\r\n    console.log(this.totalTransAmount);\r\n    this.cashwithdrawForm.controls.totalTransactionAmount.setValue(this.totalTransAmount);\r\n  }, 1000);\r\n  this.cdr.markForCheck();\r\n  this.cdr.detectChanges();\r\n}\r\n\r\n  // console.log(this.totalTransAmount);\r\n\r\n}\r\n\r\n  getBankInformation(branchCode:any){\r\n    this.apiService.fetchBankInfoByBranchCode(branchCode).subscribe(resp => {\r\n      console.log(resp)\r\n     this.denomRequired = resp.denomRequired\r\n     if(resp.denomRequired == 'yes'){\r\n      this.enableBtn = false;\r\n      this.enableBtn1 = false;\r\n     }\r\n\r\n    })\r\n  }\r\n\r\n  formatAmount(amount) {\r\n    // amount=amount.toString();\r\n    // var lastThree = amount.substring(amount.length - 3);\r\n    // var otherNumbers = amount.substring(0,amount.length-3);\r\n    // if(otherNumbers != '')\r\n    //     lastThree = ',' + lastThree;\r\n    // return String(amount).replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")+ lastThree;\r\n    // return String(amount).replace(en-IN,',');\r\n   if(amount){\r\n    return amount && amount.toString().split('.')[0].length > 3 ? amount.toString().substring(0,amount.toString().split('.')[0].length-3).replace(/\\B(?=(\\d{2})+(?!\\d))/g, \",\") + \",\" + amount.toString().substring(amount.toString().split('.')[0].length-3): amount.toString();\r\n   }\r\n\r\n  }\r\n\r\n  demonreset(){\r\n    if(this.a){\r\n      this.cdForm.resetForm();\r\n      this.enableBtn1=false;\r\n    }\r\n  }\r\n\r\n}\r\n//  function numberWithCommas(this.transAmt) {\r\n\r\n//    var transAmtArray[0] = transAmtArray[0].toString().split(\".\");\r\n//    transAmtArray[0] = transAmtArray[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n//    return transAmtArray[0].join(\".\");\r\n//  }\r\n//   throw new Error('Function not implemented.');\r\n\r\n\r\n// const numberWithCommas = (transAmt) => {\r\n//   return transAmt.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\r\n//   console.log(transAmt);\r\n//   }\r\n  //  var transAmtArray= numberWithCommas(this.transAmt);\r\n  //  console.log(transAmtArray);\r\n   \r\n  //using formatNumber for comma separator\r\n  //formatNumber(Number(this.transAmt.split(',')), 'en-US', '1.0-0')\r\n  ","<div class=\"fullcard\">\r\n    <div fxLayout=\"row\">\r\n        <div fxFlex=\"cashwithdrawForm.get('transactionAmount').value > 0? 70% : 100%\">\r\n            <h6 class=\"h1\"><span style=\"color:grey;padding-right: 4px;\">Services</span> <b>></b> <span style=\"padding-left: 4px;\"><b>Cash Withdrawal</b></span></h6>\r\n\r\n            <!-- <h6 class=\"h1\"><span style=\"color:grey\">Services</span> <b>&nbsp;&nbsp; >&nbsp;&nbsp; </b> <span><b>Cash Withdrawal</b></span></h6> -->\r\n            <mat-card  class=\"chequecard topView\">\r\n\r\n                \r\n\r\n                <mat-card-title style=\"padding: 2%;\">\r\n                    <div fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n                        <div>\r\n                            <!-- <img src=\"assets/images/arrow_back.png\" class=\"mat-elevation-z1\" alt=\"\"> -->\r\n                            <mat-icon *ngIf=\"phoneNumber\" class=\"backIcon\" (click)=\"goToServiceScreens()\">\r\n                            arrow_back</mat-icon>\r\n                        </div>&nbsp;&nbsp;\r\n                        <div class=\"card-title\">Cash Withdrawal</div>\r\n                    </div>\r\n                </mat-card-title>\r\n                <mat-card-content>\r\n                    <div class=\"full-width\" style=\"padding: 0% 0% 3% 2%;\">\r\n                        <form [formGroup]=\"cashwithdrawForm\">\r\n                            <div fxLayout=\"column\" fxLayoutGap=\"3%\" fxLayoutAlign=\"space-between none\">\r\n                                <div>\r\n                                    <div fxLayout=\"row wrap\" class=\"flex-container stretch\">\r\n                                        <ng-container>\r\n                                            <div fxFlex=\"25%\" fxFlex.xs=\"100%\" *ngIf=\"showAccountNum\">\r\n                                                <mat-hint class=\"totalAmount\">Account Type*</mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <input matInput type=\"text\" *ngIf=\"phoneNumber && !accountDropdown\"\r\n                                                        [readonly]=\"true\" class=\"full-width\" \r\n                                                        formControlName=\"accountType\">\r\n                                                    <mat-select *ngIf=\"phoneNumber && accountDropdown\"\r\n                                                        formControlName=\"accountType\"\r\n                                                        (selectionChange)=\"getAccountType($event.value)\"\r\n                                                        style=\"background-color: #f9fafb;\"\r\n                                                        placeholder=\"Select Account Type\">\r\n                                                        <mat-option *ngFor=\"let type of accounttypeArray \"\r\n                                                            [value]=\"type.accountType\">{{type.accountType}}</mat-option>\r\n                                                    </mat-select>\r\n                                                    <!-- <mat-select *ngIf=\"phoneNumber && !accountDropdown\" formControlName=\"accountType\" (selectionChange)=\"getAccountType($event.value)\"\r\n                                                        style=\"background-color: #f9fafb;\"\r\n                                                        placeholder=\"Select Account Type\">\r\n                                                        <mat-option *ngFor=\"let type of accounttypeArray \"\r\n                                                        (click)=\"custAccountNumber(type)\"\r\n                                                            [value]=\"type.accountType\">{{type.accountType}}</mat-option>\r\n                                                    </mat-select> -->\r\n                                                    <!-- <input matInput type=\"text\"  [readonly]=\"true\" class=\"full-width\" formControlName=\"accountType\" > -->\r\n\r\n                                                </mat-card>\r\n                                            </div>\r\n                                            <div fxFlex=\"25%\" fxFlex.xs=\"100%\" *ngIf=\"!showAccountNum\">\r\n                                                <mat-hint class=\"totalAmount\">Account Number*</mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <input matInput type=\"text\" class=\"full-width\"\r\n                                                        formControlName=\"accountNumber\"\r\n                                                        (change)=\"fetchByAccountNum(cashwithdrawForm.get('accountNumber').value)\">\r\n                                                </mat-card>\r\n                                                <!-- <mat-hint class=\"totalAmount\" *ngIf=\"!phoneNumber\" >Account Balance :{{curr }} {{accountBal | number: '2.' }}</mat-hint> -->\r\n                                                <mat-hint class=\"totalAmount\" *ngIf=\"!showAccountNum\">Account Balance: {{curr }}{{formatAmount(accountBal)}}</mat-hint>\r\n                                                <br>\r\n                                                <!-- <mat-hint  class=\"totalAmount\" *ngIf=\"!phoneNumber\"  [readonly]=\"true\"  formControlName=\"holderName\">Holder Name :{{userName}}</mat-hint> -->\r\n                                                <mat-hint class=\"totalAmount\" *ngIf=\"!showAccountNum\" [readonly]=\"true\">\r\n                                                    Holder Name : {{userName}}</mat-hint>\r\n                                            </div>\r\n                                            <div fxFlex=\"25%\" fxFlex.xs=\"100%\" *ngIf=\"showAccountNum\">\r\n                                                <mat-hint class=\"totalAmount\">Account Number*</mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <input *ngIf=\"!flag1\" matInput type=\"text\" [readonly]=\"true\"\r\n                                                        class=\"full-width\" formControlName=\"accountNumber\"\r\n                                                    >\r\n                                                    <mat-select *ngIf=\"flag1\" formControlName=\"accountNumber\" (selectionChange)=\"fetchByAccountNum($event.value)\"\r\n                                                        style=\"background-color: #f9fafb; \" placeholder=\"Select Account Number\">\r\n                                                        <!-- <mat-option>select</mat-option> -->\r\n                                                        <mat-option *ngFor=\"let id of accountNoList \"\r\n                                                             [value]=\"id\">{{id}}\r\n                                                        </mat-option>\r\n                                                    </mat-select>\r\n                                                </mat-card>\r\n                                                <!-- <mat-hint *ngIf=\"!phoneNumber\"  class=\"totalAmount\" >Account Balance :{{curr }} {{accountBal | number: '2.'}}</mat-hint> -->\r\n                                                <mat-hint *ngIf=\"!hideDetails\" class=\"totalAmount\" style=\"margin-left:-15px\">\r\n                                                    Account Balance : {{curr }}{{formatAmount(accountBal)}}</mat-hint>\r\n\r\n                                                <br>\r\n                                                <!-- <mat-hint  class=\"totalAmount\" *ngIf=\"!phoneNumber\"  [readonly]=\"true\"  formControlName=\"holderName\">Holder Name :{{userName}}</mat-hint> -->\r\n                                                <mat-hint class=\"totalAmount\" *ngIf=\"!hideDetails\" [readonly]=\"true\"\r\n                                                    formControlName=\"holderName\">Holder Name : {{userName}}</mat-hint>\r\n                                            </div>\r\n                                            <div fxFlex=\"25%\" fxFlex.xs=\"100%\" *ngIf=\"!showAccountNum\">\r\n                                                <mat-hint class=\"totalAmount\">Account Type*</mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <input matInput type=\"text\" [readonly]=\"true\" class=\"full-width\"\r\n                                                        formControlName=\"accountType\">\r\n\r\n                                                </mat-card>\r\n                                            </div>\r\n                                 \r\n                                            <div fxFlex=\"23%\" fxFlex.xs=\"100%\">\r\n                                                <mat-hint class=\"accountBranch\">Account Branch*</mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <input matInput *ngIf=\"!phoneNumber\" type=\"text\" [readonly]=\"true\"\r\n                                                        class=\"full-width\" formControlName=\"accountBranch\">\r\n\r\n                                                    <input matInput *ngIf=\"phoneNumber\" type=\"text\" [readonly]=\"true\"\r\n                                                        class=\"full-width\" formControlName=\"accountBranch\">\r\n                                                </mat-card>\r\n                                                <!-- <mat-hint class=\"totalAmount\">Account Currency\r\n                                                    : {{selected}}</mat-hint> -->\r\n                                                <mat-error\r\n                                                    *ngIf=\"cashwithdrawForm.get('accountBranch').touched && !cashwithdrawForm.get('accountBranch').valid\">\r\n                                                    Account Branch is Required!\r\n                                                </mat-error>\r\n                                            </div>\r\n                                           \r\n\r\n\r\n                                        </ng-container>\r\n                                    </div>\r\n                                </div>\r\n                                <div>\r\n                                    <div fxLayout=\"row wrap\" class=\"flex-container stretch\">\r\n                                        <ng-container>\r\n\r\n                                            <!-- <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                                <mat-hint class=\"transactionBranch\">Transaction Branch*</mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <mat-select *ngIf=\"phoneNumber\" formControlName=\"transactionBranch\">\r\n                                                        <mat-option *ngFor=\"let tranbranch of trasactionBranches\"\r\n                                                            [value]=\"tranbranch\">\r\n                                                            {{tranbranch}}\r\n                                                        </mat-option>\r\n                                                    </mat-select>\r\n                                                    <input matInput *ngIf=\"!phoneNumber\" type=\"text\"\r\n                                                    [readonly]=\"true\" class=\"full-width\"\r\n                                                    formControlName=\"transactionBranch\">\r\n                                                </mat-card>\r\n                                                <mat-error\r\n                                                    *ngIf=\"cashwithdrawForm.get('transactionBranch').touched && !cashwithdrawForm.get('transactionBranch').valid\">\r\n                                                    Transaction Branch is Required!\r\n                                                </mat-error>\r\n                                            </div> -->\r\n                                            <div fxFlex=\"25%\" fxFlex.xs=\"100%\">\r\n                                                <mat-hint class=\"totalAmount\">Account Currency*</mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <div fxLayout=\"row wrap\" class=\"full-width\">\r\n                                                        <div fxFlex=\"25%\">\r\n                                                            <div *ngIf=\"ifQRvariable\"\r\n                                                                class=\"currency-flag {{isedit?accountCurrencyImage(cashwithdrawForm.controls['accountCurrency'].value):currencyImage}}\"></div>\r\n                                                            <div *ngIf=\"!ifQRvariable\"\r\n                                                                class=\"currency-flag {{!isedit?accountCurrencyImage(cashwithdrawForm.controls['accountCurrency'].value):currencyImage}}\">\r\n                                                            </div>\r\n\r\n                                                        </div>\r\n                                                        <div fxFlex=\"75%\">\r\n                                                            <input matInput type=\"text\" *ngIf=\"!phoneNumber\"\r\n                                                                [readonly]=\"true\" class=\"full-width\"\r\n                                                                style=\"font-size:110%\"\r\n                                                                formControlName=\"accountCurrency\">\r\n                                                            <input matInput type=\"text\" *ngIf=\"phoneNumber\"\r\n                                                                style=\"font-size:110%\" [readonly]=\"true\"\r\n                                                                class=\"full-width\" formControlName=\"accountCurrency\">\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </mat-card>\r\n                                            </div>\r\n                                           \r\n                                            <div fxFlex=\"25%\" fxFlex.xs=\"100%\" *ngIf=\"showAccountNum\">\r\n                                                <mat-hint class=\"totalAmount\">Transaction Currency* </mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <div fxLayout=\"row wrap\" class=\"full-width\">\r\n                                                        <div fxFlex=\"25%\">\r\n                                                            <div class=\"currency-flag {{currencyImage}}\"></div>\r\n                                                        </div>\r\n                                                        <div fxFlex=\"75%\">\r\n                                                            <input matInput type=\"text\" *ngIf=\"!phoneNumber\"\r\n                                                                [readonly]=\"true\" formControlName=\"transactionCurrency\">\r\n                                                            <mat-select formControlName=\"transactionCurrency\"\r\n                                                                *ngIf=\"phoneNumber\"\r\n                                                                placeholder=\"Select Transaction Currency\"\r\n                                                                id=\"testSelect\" style=\"background-color: #f9fafb;font-weight: bold;\"\r\n                                                                [disabled]=\"isedit\">\r\n                                                                <mat-option\r\n                                                                    *ngFor=\"let country of countryValues; let i = index\"\r\n                                                                    (click)=\"onCountryChange(country)\"\r\n                                                                    style=\"font-size:110%\"\r\n                                                                    [value]=\"country.currencyCode\">\r\n                                                                    <div fxLayout=\"row wrap\" class=\"full-width\">\r\n                                                                        <div fxFlex=\"15%\">{{country.currencyCode}}</div>\r\n                                                                        <div fxFlex=\"85%\">\r\n                                                                            <div\r\n                                                                                class=\"currency-flag currency-flag-{{addCurrencyImage(country.currencyCode)}} alignImage\">\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </mat-option>\r\n                                                            </mat-select>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </mat-card>\r\n                                            </div>\r\n                                            <div fxFlex=\"25%\" fxFlex.xs=\"100%\" *ngIf=\"!showAccountNum\">\r\n                                                <mat-hint class=\"totalAmount\">Transaction Currency* </mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <div fxLayout=\"row wrap\" class=\"full-width\">\r\n                                                        <div fxFlex=\"25%\">\r\n                                                            <div class=\"currency-flag {{currencyImage}}\"></div>\r\n                                                        </div>\r\n                                                        <div fxFlex=\"75%\">\r\n                                                            <mat-select formControlName=\"transactionCurrency\"\r\n                                                                placeholder=\"Select Transaction Currency\"\r\n                                                                id=\"testSelect\" style=\"background-color: #f9fafb;font-weight: bold;\">\r\n                                                                <mat-option\r\n                                                                    *ngFor=\"let country of countryValues; let i = index\"\r\n                                                                    (click)=\"onCountryChange(country)\"\r\n                                                                    style=\"font-size:110%\"\r\n                                                                    [value]=\"country.currencyCode\">\r\n                                                                    <div fxLayout=\"row wrap\" class=\"full-width\">\r\n                                                                        <div fxFlex=\"15%\">{{country.currencyCode}}</div>\r\n                                                                        <div fxFlex=\"85%\">\r\n                                                                            <div\r\n                                                                                class=\"currency-flag currency-flag-{{addCurrencyImage(country.currencyCode)}} alignImage\">\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </mat-option>\r\n                                                            </mat-select>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </mat-card>\r\n                                            </div>\r\n                                            <div fxFlex=\"25.5%\" fxFlex.xs=\"100%\" *ngIf=\"!showAccountNum\">\r\n                                                <mat-hint class=\"totalAmount\">Transaction Amount*</mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <input matInput class=\"full-width\" #myRef [(ngModel)]=\"transAmount\"\r\n                                                        formControlName=\"transactionAmount\"\r\n                                                        [value]=\"transAmt | number: '2.'\" (keyup)=\"OnInput($event)\"\r\n                                                        (focus)=\"clicked($event)\" (keyup)=\"demonreset()\">\r\n                                                </mat-card>\r\n                                                <mat-error\r\n                                                    *ngIf=\"cashwithdrawForm.get('transactionAmount').errors?.min\">\r\n                                                    Amount must be greater than zero\r\n                                                </mat-error>\r\n                                            </div>\r\n                                            <div fxFlex=\"25.5%\" fxFlex.xs=\"100%\" *ngIf=\"showAccountNum\">\r\n                                                <mat-hint class=\"totalAmount\">Transaction Amount*</mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <input matInput type=\"text\" *ngIf=\"!phoneNumber\" [readonly]=\"true\"\r\n                                                        formControlName=\"transactionAmount\">\r\n                                                    <input matInput class=\"full-width\" *ngIf=\"phoneNumber\" #myRef\r\n                                                        [(ngModel)]=\"transAmount\" formControlName=\"transactionAmount\"\r\n                                                        [value]=\"transAmt | number: '1.'\" (keyup)=\"OnInput($event)\"\r\n                                                        (focus)=\"clicked($event)\" (keyup)=\"demonreset()\" [readonly]=\"isedit\">\r\n\r\n                                                </mat-card>\r\n                                                <mat-error\r\n                                                    *ngIf=\"cashwithdrawForm.get('transactionAmount').errors?.min\">\r\n                                                    Amount must be greater than zero\r\n                                                </mat-error>\r\n                                            </div>\r\n                                            <div fxFlex=\"25%\" fxFlex.xs=\"100%\">\r\n                                                <mat-hint class=\"totalAmount\">Total Charge Amount*</mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <input matInput class=\"full-width\" readonly formControlName=\"totalChargeAmount\">\r\n                                                </mat-card>\r\n\r\n                                            </div>\r\n                                            <div fxFlex=\"25%\" fxFlex.xs=\"100%\">\r\n                                                <mat-hint class=\"totalAmount\">Total Transaction Amount*</mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <input matInput type=\"text\" readonly onlyNumber formControlName=\"totalTransactionAmount\">\r\n\r\n                                                </mat-card>\r\n\r\n                                            </div>\r\n                                            <div class=\"tooltip\">\r\n                                                <!-- <mat-icon  fxFlex=\"50%\" fxFlex.xs=\"100%\" ><span class=\"material-symbols-sharp\">\r\n                                               info\r\n                                                </span>\r\n                                                </mat-icon> -->\r\n                                                <img width=\"80%\"\r\n                                            [src]=\"'assets/images/info.svg'\"/>\r\n                                                <div class=\"tooltiptext\">\r\n                                                    <p class=\"totalAmount textcolor\" style=\"margin-top:10px; margin-bottom:6px\">Transaction Amount:{{cashwithdrawForm.get('transactionAmount').value}} </p>\r\n                                                    <p class=\"totalAmount textcolor\">Total Charge Amount:{{cashwithdrawForm.get('totalChargeAmount').value}} </p>\r\n                                                    <hr/>\r\n                                                    <p class=\"totalAmount textcolor\" style=\"margin-right:10px ;\">Total Transaction Amount:{{cashwithdrawForm.get('totalTransactionAmount').value}} </p>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                        </ng-container>\r\n                                    </div>\r\n                                </div>\r\n                                 <div>\r\n                                    <div fxLayout=\"row wrap\" class=\"flex-container stretch\">\r\n                                        <ng-container>\r\n                                            \r\n                                             <!-- <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                                <mat-hint class=\"transactionBranch\">Transaction Branch*</mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <mat-select *ngIf=\"phoneNumber\" formControlName=\"transactionBranch\">\r\n                                                        <mat-option *ngFor=\"let tranbranch of trasactionBranches\"\r\n                                                            [value]=\"tranbranch\">\r\n                                                            {{tranbranch}}\r\n                                                        </mat-option>\r\n                                                    </mat-select>\r\n                                                    <input matInput *ngIf=\"!phoneNumber\" type=\"text\"\r\n                                                    [readonly]=\"true\" class=\"full-width\"\r\n                                                    formControlName=\"transactionBranch\">\r\n                                                </mat-card>\r\n                                                <mat-error\r\n                                                    *ngIf=\"cashwithdrawForm.get('transactionBranch').touched && !cashwithdrawForm.get('transactionBranch').valid\">\r\n                                                    Transaction Branch is Required!\r\n                                                </mat-error>\r\n                                            </div>  -->\r\n                                            <!-- <div fxFlex=\"23%\" fxFlex.xs=\"100%\">\r\n                                                <mat-hint class=\"totalAmount\">Account Currency*</mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <div fxLayout=\"row wrap\" class=\"full-width\">\r\n                                                        <div fxFlex=\"25%\">\r\n                                                            <div *ngIf=\"ifQRvariable\"\r\n                                                                class=\"currency-flag {{currencyImage}}\"></div>\r\n                                                            <div *ngIf=\"!ifQRvariable\"\r\n                                                                class=\"currency-flag {{!isedit?accountCurrencyImage(cashwithdrawForm.controls['accountCurrency'].value):''}}\">\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div fxFlex=\"75%\">\r\n                                                            <input matInput type=\"text\" *ngIf=\"!phoneNumber\"\r\n                                                                [readonly]=\"true\" class=\"full-width\" style=\"font-size:110%\"\r\n                                                                formControlName=\"accountCurrency\">\r\n                                                            <input matInput type=\"text\" *ngIf=\"phoneNumber\" style=\"font-size:110%\"\r\n                                                                [readonly]=\"true\" class=\"full-width\"\r\n                                                                formControlName=\"accountCurrency\">\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </mat-card>\r\n                                            </div> -->\r\n                                           \r\n                                          \r\n                                       \r\n                                    \r\n                                        </ng-container>\r\n                                    </div>\r\n                                </div> \r\n                                <!-- <div>\r\n                                    <div fxLayout=\"row wrap\" class=\"flex-container stretch\">\r\n                                        <ng-container>\r\n                                            <div fxFlex=\"30%\" fxFlex.xs=\"100%\" style=\"padding: 0% 1%;\">\r\n                                                <button mat-flat-button *ngIf=\"phoneNumber\" class=\"buttonCancel full-width\"\r\n                                                    (click)=\"goToServiceScreens()\">CANCEL</button>\r\n                                            </div>\r\n                                            <div fxFlex=\"70%\" fxFlex.xs=\"100%\" style=\"padding: 0% 2%;\">\r\n                                                <button mat-flat-button class=\"buttonNext full-width\" \r\n                                                    [disabled]=\"!enableContinue || !cashwithdrawForm.get('transactionAmount').valid\r\n                                                    ||!cashwithdrawForm.get('transactionCurrency').valid ||\r\n                                                    !cashwithdrawForm.get('holderName').valid ||!cashwithdrawForm.get('accountType').valid ||!cashwithdrawForm.get('accountNumber').valid ||!cashwithdrawForm.get('accountCurrency').valid\"\r\n                                                    (click)=\"onSaveofCashWithdraw(cashwithdrawForm.value,ifQRvariable,cdForm)\">CONTINUE</button>\r\n                                            </div>\r\n                                        </ng-container>\r\n                                    </div>\r\n                                </div> -->\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </mat-card-content>\r\n            </mat-card>\r\n        </div>\r\n        <div *ngIf=\"(denomRequired == 'yes') && (cashwithdrawForm.get('transactionAmount').value > 0 || transAmt > 0)\"\r\n            fxFlex=\"30%\">\r\n            <form #cdForm=\"ngForm\">\r\n                <mat-card class=\"border-align\">\r\n                    <div fxLayout=\"row\" class=\"pH10 full-width\">\r\n\r\n                        <h4 class=\"title-Font\">Denomination</h4>\r\n                    </div>\r\n                    <div class=\"pH10 full-width\" id=\"denominationDiv\">\r\n                        <div class=\"paddingclass\" fxLayoutAlign=\"center center\"\r\n                            *ngIf=\"cashwithdrawForm.value.transactionCurrency == 'INR'\">\r\n                            <div fxFlex=\"20%\">\r\n                                <p class=\"quantityClass text-small\">2000</p>\r\n                            </div>\r\n                            <div fxFlex=\"10%\">\r\n                                <p class=\"operationTypeClass text-small\">x</p>\r\n                            </div>\r\n                            <div fxFlex=\"70%\">\r\n                                <mat-card class=\"inputCard\">\r\n                                    <div>\r\n                                        <input class=\"full-width inputClass\" type=\"text\"\r\n                                            (keyup)=\"totalAmountValue(cdForm)\" (keypress)=\"omit_number($event)\" matInput\r\n                                            name=\"count2000\" ngModel #count2000>\r\n                                    </div>\r\n                                </mat-card>\r\n                                <div class=\"pl10\">\r\n                                    <mat-error *ngIf=\"denominationlimit && count2000.value > denominationLimit[2000]\">\r\n                                        Please enter <= {{denominationLimit[2000]}} </mat-error>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"paddingclass\" fxLayoutAlign=\"start center\"\r\n                            *ngIf=\"cashwithdrawForm.value.transactionCurrency == 'INR' || cashwithdrawForm.value.transactionCurrency == 'USD' || cashwithdrawForm.value.transactionCurrency == 'AED'\">\r\n                            <div fxFlex=\"20%\">\r\n                                <p class=\"quantityClass text-small\">500</p>\r\n                            </div>\r\n                            <div fxFlex=\"10%\">\r\n                                <p class=\"operationTypeClass text-small\">x</p>\r\n                            </div>\r\n                            <div fxFlex=\"70%\">\r\n                                <mat-card class=\"inputCard\">\r\n                                    <input class=\"full-width inputClass\" type=\"text\" (keyup)=\"totalAmountValue(cdForm)\"\r\n                                        (keypress)=\"omit_number($event)\" matInput name=\"count500\" ngModel #count500>\r\n                                </mat-card>\r\n                                <div class=\"pl10\">\r\n                                    <mat-error *ngIf=\"denominationlimit && count500.value > denominationLimit[500]\">\r\n                                        Please enter <= {{denominationLimit[500]}} </mat-error>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"paddingclass\" fxLayoutAlign=\"start center\"\r\n                            *ngIf=\"cashwithdrawForm.value.transactionCurrency == 'INR'\">\r\n                            <div fxFlex=\"20%\">\r\n                                <p class=\"quantityClass text-small\">200</p>\r\n                            </div>\r\n                            <div fxFlex=\"10%\">\r\n                                <p class=\"operationTypeClass text-small\">x</p>\r\n                            </div>\r\n                            <div fxFlex=\"70%\">\r\n                                <mat-card class=\"inputCard\">\r\n                                    <input class=\"full-width inputClass\" type=\"text\" (keyup)=\"totalAmountValue(cdForm)\"\r\n                                        (keypress)=\"omit_number($event)\" matInput name=\"count200\" ngModel #count200>\r\n                                </mat-card>\r\n                                <div class=\"pl10\">\r\n                                    <mat-error *ngIf=\"denominationlimit && count200.value > denominationLimit[200]\">\r\n                                        Please enter <= {{denominationLimit[200]}} </mat-error>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"paddingclass\" fxLayoutAlign=\"start center\"\r\n                            *ngIf=\"cashwithdrawForm.value.transactionCurrency == 'INR' || cashwithdrawForm.value.transactionCurrency == 'USD' || cashwithdrawForm.value.transactionCurrency == 'AED'\">\r\n                            <div fxFlex=\"20%\">\r\n                                <p class=\"quantityClass text-small\">100</p>\r\n                            </div>\r\n                            <div fxFlex=\"10%\">\r\n                                <p class=\"operationTypeClass text-small\">x</p>\r\n                            </div>\r\n                            <div fxFlex=\"70%\">\r\n                                <mat-card class=\"inputCard\">\r\n                                    <input class=\"full-width inputClass\" type=\"text\" (keyup)=\"totalAmountValue(cdForm)\"\r\n                                        (keypress)=\"omit_number($event)\" matInput name=\"count100\" ngModel #count100>\r\n                                </mat-card>\r\n                                <div class=\"pl10\">\r\n                                    <mat-error *ngIf=\"denominationlimit && count100.value > denominationLimit[100]\">\r\n                                        Please enter <= {{denominationLimit[100]}} </mat-error>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"paddingclass\" fxLayoutAlign=\"start center\"\r\n                            *ngIf=\"cashwithdrawForm.value.transactionCurrency== 'INR' || cashwithdrawForm.value.accountCurrency == 'USD'\">\r\n                            <div fxFlex=\"20%\">\r\n                                <p class=\"quantityClass text-small\">50</p>\r\n                            </div>\r\n                            <div fxFlex=\"10%\">\r\n                                <p class=\"operationTypeClass text-small\">x</p>\r\n                            </div>\r\n                            <div fxFlex=\"70%\">\r\n                                <mat-card class=\"inputCard\">\r\n                                    <input class=\"full-width inputClass\" type=\"text\" (keyup)=\"totalAmountValue(cdForm)\"\r\n                                        (keypress)=\"omit_number($event)\" matInput name=\"count50\" ngModel #count50>\r\n                                </mat-card>\r\n                                <div class=\"pl10\">\r\n                                    <mat-error *ngIf=\"denominationlimit && count50.value > denominationLimit[50]\">\r\n                                        Please enter <= {{denominationLimit[50]}} </mat-error>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"paddingclass\" fxLayoutAlign=\"start center\"\r\n                            *ngIf=\"cashwithdrawForm.value.transactionCurrency== 'INR'\">\r\n                            <div fxFlex=\"20%\">\r\n                                <p class=\"quantityClass text-small\">20</p>\r\n                            </div>\r\n                            <div fxFlex=\"10%\">\r\n                                <p class=\"operationTypeClass text-small\">x</p>\r\n                            </div>\r\n                            <div fxFlex=\"70%\">\r\n                                <mat-card class=\"inputCard\">\r\n                                    <input class=\"full-width inputClass\" type=\"text\" (keyup)=\"totalAmountValue(cdForm)\"\r\n                                        (keypress)=\"omit_number($event)\" matInput name=\"count20\" ngModel #count20>\r\n                                </mat-card>\r\n                                <div class=\"pl10\">\r\n                                    <mat-error *ngIf=\"denominationlimit && count20.value > denominationLimit[20]\">\r\n                                        Please enter <= {{denominationLimit[20]}} </mat-error>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"paddingclass\" fxLayoutAlign=\"start center\"\r\n                            *ngIf=\"cashwithdrawForm.value.transactionCurrency== 'INR'\">\r\n                            <div fxFlex=\"20%\">\r\n                                <p class=\"quantityClass text-small\">10</p>\r\n                            </div>\r\n                            <div fxFlex=\"10%\">\r\n                                <p class=\"operationTypeClass text-small\">x</p>\r\n                            </div>\r\n                            <div fxFlex=\"70%\">\r\n                                <mat-card class=\"inputCard\">\r\n                                    <input class=\"full-width inputClass\" type=\"text\" (keyup)=\"totalAmountValue(cdForm)\"\r\n                                        (keypress)=\"omit_number($event)\" matInput name=\"count10\" ngModel #count10>\r\n                                </mat-card>\r\n                                <div class=\"pl10\">\r\n                                    <mat-error *ngIf=\"denominationlimit && count10.value > denominationLimit[10]\">\r\n                                        Please enter <= {{denominationLimit[10]}} </mat-error>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"paddingclass\" fxLayoutAlign=\"start center\"\r\n                            *ngIf=\"cashwithdrawForm.value.transactionCurrency== 'INR' || cashwithdrawForm.value.transactionCurrency == 'USD' || cashwithdrawForm.value.transactionCurrency == 'AED'\">\r\n                            <div fxFlex=\"20%\">\r\n                                <p class=\"quantityClass text-small\">1</p>\r\n                            </div>\r\n                            <div fxFlex=\"10%\">\r\n                                <p class=\"operationTypeClass text-small\">x</p>\r\n                            </div>\r\n                            <div fxFlex=\"70%\">\r\n                                <mat-card class=\"inputCard\">\r\n                                    <input class=\"full-width inputClass\" type=\"text\" (keyup)=\"totalAmountValue(cdForm)\"\r\n                                        (keypress)=\"omit_number($event)\" matInput name=\"count1\" ngModel #count10>\r\n                                </mat-card>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div fxLayout=\"row wrap\" class=\"pH10 full-width\">\r\n                        <div fxFlex=\"53%\" fxFlex.xs=\"100%\">\r\n                            <p class=\"totalAmount\">Total Amount</p>\r\n                            <mat-card class=\"inputCard\">\r\n                                <input class=\"full-width inputClass\" [(ngModel)]=\"totalAmount\"  matInput\r\n                                    name=\"totalAmount\" readonly>\r\n                            </mat-card>\r\n                            <div class=\"pl10\" style=\"width: 150%;\">\r\n                                <mat-error *ngIf=\"enableBtn1\">\r\n                                    Total amount should be equal to {{cashwithdrawForm.value.transactionAmount}}\r\n                                </mat-error>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </mat-card>\r\n            </form>\r\n        </div>\r\n    </div>\r\n\r\n\r\n\r\n    <div>\r\n        <div fxLayout=\"row wrap\" class=\"flex-container stretch\" id=\"buttonDiv\">\r\n            <ng-container>\r\n                <div fxFlex=\"30%\" fxFlex.xs=\"100%\" class=\"paddingCls\">\r\n                    <button mat-flat-button *ngIf=\"phoneNumber\" class=\"buttonCancel full-width\"\r\n                        (click)=\"goToServiceScreens()\">CANCEL</button>\r\n                </div>\r\n                <div fxFlex=\"70%\" fxFlex.xs=\"100%\" class=\"paddingCls\" *ngIf=\"showAccountNum\">\r\n                    <button mat-flat-button class=\"buttonNext full-width\" [disabled]=\"!enableContinue\r\n                    ||!cashwithdrawForm.get('transactionCurrency').valid\r\n                    ||!cashwithdrawForm.get('accountType').valid\r\n                    ||!cashwithdrawForm.get('accountNumber').valid \r\n                    ||!cashwithdrawForm.get('accountCurrency').valid\r\n                    ||!cashwithdrawForm.get('transactionAmount').valid\r\n                    ||!cashwithdrawForm.get('totalChargeAmount').valid\r\n                    ||!cashwithdrawForm.get('totalTransactionAmount').valid\r\n                    || enableBtn1\"\r\n                        (click)=\"onSaveofCashWithdraw(cashwithdrawForm.value,ifQRvariable,cdForm)\">GENERATE TOKEN</button>\r\n                </div>\r\n                <div fxFlex=\"70%\" fxFlex.xs=\"100%\" class=\"paddingCls\" *ngIf=\"!showAccountNum\">\r\n                    <button mat-flat-button class=\"buttonNext full-width\" [disabled]=\"!enableContinue || !cashwithdrawForm.get('transactionAmount').valid \r\n                    ||!cashwithdrawForm.get('transactionCurrency').valid\r\n                    ||!cashwithdrawForm.get('accountType').valid\r\n                    ||!cashwithdrawForm.get('accountNumber').valid \r\n                    ||!cashwithdrawForm.get('accountCurrency').valid\r\n                    ||!cashwithdrawForm.get('transactionAmount').valid\r\n                    ||!cashwithdrawForm.get('totalChargeAmount').valid\r\n                    ||!cashwithdrawForm.get('totalTransactionAmount').valid\"\r\n                        (click)=\"getOTP(cashwithdrawForm.value,ifQRvariable,cdForm)\">CONTINUE</button>\r\n                </div>\r\n\r\n            </ng-container>\r\n        </div>\r\n    </div>\r\n    <!-- <div *ngIf=\"denomRequired == 'yes'\">\r\n        <div fxLayout=\"row wrap\" class=\"flex-container stretch\" id=\"buttonDiv\">\r\n            <ng-container>\r\n                <div fxFlex=\"30%\" fxFlex.xs=\"100%\" class=\"paddingCls\">\r\n                    <button mat-flat-button *ngIf=\"phoneNumber\" class=\"buttonCancel full-width\"\r\n                        (click)=\"goToServiceScreens()\">CANCEL</button>\r\n                </div>\r\n                <div fxFlex=\"70%\" fxFlex.xs=\"100%\" class=\"paddingCls\" *ngIf=\"showAccountNum\">\r\n                    <button mat-flat-button class=\"buttonNext full-width\" [disabled]=\"!enableContinue\r\n                    ||!cashwithdrawForm.get('transactionCurrency').valid\r\n                    ||!cashwithdrawForm.get('accountType').valid\r\n                    ||!cashwithdrawForm.get('holderName').valid\r\n                    ||!cashwithdrawForm.get('accountNumber').valid \r\n                    ||!cashwithdrawForm.get('accountCurrency').valid\r\n                    ||!cashwithdrawForm.get('transactionAmount').valid\"\r\n                        (click)=\"onSaveofCashWithdraw(cashwithdrawForm.value,ifQRvariable,cdForm)\">GENERATE\r\n                        TOKEN</button>\r\n                </div>\r\n                <div fxFlex=\"70%\" fxFlex.xs=\"100%\" class=\"paddingCls\" *ngIf=\"!showAccountNum\">\r\n                    <button mat-flat-button class=\"buttonNext full-width\" [disabled]=\"!enableContinue || !cashwithdrawForm.get('transactionAmount').valid \r\n                    ||!cashwithdrawForm.get('transactionCurrency').valid\r\n                    ||!cashwithdrawForm.get('accountType').valid\r\n                    ||!cashwithdrawForm.get('holderName').valid\r\n                    ||!cashwithdrawForm.get('accountNumber').valid \r\n                    ||!cashwithdrawForm.get('accountCurrency').valid\r\n                    ||!cashwithdrawForm.get('transactionAmount').valid\"\r\n                        (click)=\"getOTP(cashwithdrawForm.value,ifQRvariable,cdForm)\">CONTINUE</button>\r\n                </div>\r\n            </ng-container>\r\n        </div>\r\n    </div> -->\r\n\r\n</div>"],"sourceRoot":"webpack:///"}