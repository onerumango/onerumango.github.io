{"version":3,"sources":["./src/app/views/settings/report/report-details/report-details.component.ts","./src/app/views/settings/report/report-details/report-details.component.html","./src/app/views/settings/settings.routing.ts","./src/app/views/settings/theme-change/theme-change.component.ts","./src/app/views/settings/theme-change/theme-change.component.html","./src/app/views/settings/settings.module.ts","./src/app/views/settings/settings/change-email/change-email.component.ts","./src/app/views/settings/settings/change-email/change-email.component.html","./src/app/views/settings/change-password/change-password.component.ts","./src/app/views/settings/change-password/change-password.component.html","./src/app/views/settings/settings/settings.component.ts","./src/app/views/settings/settings/settings.component.html"],"names":[],"mappings":"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","file":"views-settings-settings-module-es2015.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport * as moment from 'moment';\r\n\r\n@Component({\r\n  selector: 'app-report-details',\r\n  templateUrl: './report-details.component.html',\r\n  styleUrls: ['./report-details.component.scss']\r\n})\r\nexport class ReportDetailsComponent implements OnInit {\r\n  reportForm: FormGroup;\r\n  reportName: any;\r\n  reprts: any[] = [\r\n    { reportName: \"FX Nostro Balances by Currency Report\",\r\n    reportId:\"ACRFXNB\" ,date:\"2019-11-29\"\r\n    },\r\n    { reportName: \"Weekly Report\" , reportId:\"ITRWEEK\",date:\"2019-10-29\"},\r\n    { reportName: \"Attendance Report\", reportId:\"HRRATTD\",date:\"2022-08-23\" },\r\n    { reportName: \"Cash Flow Report\" , reportId:\"EPRCASH\",date:\"2020-02-01\"},\r\n    { reportName: \"Statement Of Foreign Assets And Liabilities\", reportId:\"FINRSOFAL\" ,date:\"2022-01-31\"}\r\n  ];\r\n  report: any;\r\n  reportupdate: any[];\r\n  tellerId: string;\r\n  constructor(private formBuilder: FormBuilder, private ls: LocalStoreService, private apiService: ApiService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.reportName = this.reprts[0].reportName\r\n    this.tellerId =localStorage.getItem('tellerid');\r\n    this.buildReportForm();\r\n    this.resetForm();\r\n  }\r\n  buildReportForm(data?) {\r\n    this.reportForm = this.formBuilder.group({\r\n      branch: [data ? data.branch : ''],\r\n      customerId: [data ? data.customerId : null],\r\n      accountNo: [data ? data.accountNo : null],\r\n      fileType: [data ? data.fileType : ''],\r\n      fromDate: [data ? data.fromDate : '', Validators.required],\r\n      endDate: [data ? data.endDate : '',Validators.required],\r\n\r\n\r\n    });\r\n  }\r\n\r\n  resetForm() {\r\n    this.reportForm.reset();\r\n  }\r\n  gotoReport(reportName1: any) {\r\n    console.log(reportName1);\r\n    this.reportName = reportName1\r\n    this.resetForm();\r\n  }\r\n\r\n  letterOnly(event) {\r\n    var charCode = event.keyCode;\r\n    if ((charCode > 64 && charCode < 91) || (charCode > 96 && charCode < 123) || charCode == 8)\r\n      return true;\r\n    else\r\n      return false;\r\n  }\r\n  _keyPress(event: any) {\r\n    // console.log(\"key\",event);\r\n    const pattern = /[0-9]/;\r\n    let inputChar = String.fromCharCode(event.charCode);\r\n    inputChar = inputChar.toString();\r\n    inputChar = inputChar\r\n    if (!pattern.test(inputChar)) {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n  apply() {\r\n    let payload = [{\r\n      branch: this.reportForm.value.branch,\r\n      customerId: this.reportForm.value.customerId,\r\n      accountNo: this.reportForm.value.accountNo,\r\n      fileType: this.reportForm.value.fileType ,\r\n      fromDate: moment(this.reportForm.value.fromDate).format('YYYY-MM-DD'),\r\n      endDate:  moment(this.reportForm.value.endDate).format('YYYY-MM-DD'),\r\n      reportName: this.reportName\r\n    }]\r\n    this.reportupdate=this.reprts.filter(\r\n      (val) => val.reportName===this.reportName);\r\n      console.log(this.reportupdate);\r\n\r\n   /* this.apiService.getReport().subscribe(data => {\r\n      console.log(data)\r\n      window.open(data);\r\n    }) */\r\n    this.apiService.getReport(this.tellerId,moment(this.reportForm.value.fromDate).format('YYYY-MM-DD'),moment(this.reportForm.value.endDate).format('YYYY-MM-DD'));\r\n  }\r\n}\r\n","<div fxLayout=\"row\">\r\n    <div  fxLayout=\"row\">\r\n        <div >\r\n            <mat-sidenav-container >\r\n              <mat-sidenav EgretSideNavToggle class=\"app-sidebar\" style=\"width: 300px;\">\r\n                <div class=\"sidenav-hold\">\r\n                  <ul appDropdown class=\"sidenav mt-32\">\r\n                    \r\n                    \r\n                    \r\n                    <!-- Approval Stage END -->\r\n                    <li appDropdownLink routerLinkActive=\"open\">\r\n                      <div class=\"lvl1\" *ngFor=\"let item of reprts; let m=index;\" (click)=\"gotoReport(item.reportName)\">\r\n                        <a [ngClass]=\"{'helight': item.reportName==reportName, \r\n                        'nothelight': true}\" (click)=\"gotoReport(item.reportName)\">\r\n                        <mat-icon>event_note</mat-icon>\r\n                         &nbsp;&nbsp;&nbsp; <span class=\"item-name lvl1\" >{{item.reportName}}</span>\r\n                          <span fxFlex></span>\r\n                          \r\n                        </a>\r\n                      \r\n                        \r\n                        \r\n                        \r\n                      </div>\r\n                    </li>\r\n                   \r\n                  </ul>\r\n                </div>\r\n          \r\n              </mat-sidenav>\r\n              <div class=\"app-wrap\" fxLayout=\"row\" fxLayoutWrap=\"wrap\">\r\n                <div class=\"full-width mt-32\">\r\n                  <router-outlet></router-outlet>\r\n                </div>\r\n              </div>\r\n            </mat-sidenav-container>\r\n          </div>\r\n    \r\n    </div>\r\n     \r\n    <!-- sidenav ended -->\r\n     <!-- Screen start -->\r\n    \r\n    \r\n      \r\n    \r\n        <div fxFlex=\"100\">\r\n          <mat-card class=\"p-0\">\r\n            <mat-card-title class=\"title\">\r\n              <div  class=\"card-title-text\">{{reportName}}</div>\r\n              <mat-divider></mat-divider>\r\n            </mat-card-title>\r\n            <mat-card-content>\r\n                <form  [formGroup]=\"reportForm\">\r\n                    \r\n                    <div fxLayout=\"column\" fxLayoutGap=\"25px\">\r\n                        <div fxFlex=\"70%\" fxLayoutGap=\"10px\">\r\n                            <div class=\"flex-grow-1\" fxFlex=\"50%\" >\r\n                                <label  class=\"hint\">Branch </label>\r\n                                <mat-card class=\"inputMatName\">\r\n                                    <input matInput class=\"alignment\" type=\"text\" autocomplete=\"off\" formControlName=\"branch\"  \r\n                                    placeholder=\"Enter Branch\" />\r\n                                </mat-card>\r\n                               \r\n                               \r\n                              </div>\r\n                              <div class=\"flex-grow-1\" fxFlex=\"50%\" >\r\n                                <label  class=\"hint\">Customer Id</label>\r\n                                <mat-card class=\"inputMatName\">\r\n                                  <input matInput  class=\"alignment\" type=\"text\" autocomplete=\"off\" name=\"assetType\" placeholder=\"Enter Customer Id\"  (keypress)=_keyPress($event)\r\n                                      formControlName=\"customerId\" />\r\n                                </mat-card>\r\n                               \r\n                               \r\n                              </div>\r\n                        </div>\r\n                        <div fxFlex=\"70%\" fxLayoutGap=\"10px\">\r\n                            <div class=\"flex-grow-1\" fxFlex=\"50%\" >\r\n                                <label  class=\"hint\">Account Number </label>\r\n                                <mat-card class=\"inputMatName\">\r\n                                    <input matInput class=\"alignment\" type=\"text\" autocomplete=\"off\"  formControlName=\"accountNo\"  (keypress)=_keyPress($event)\r\n                                    placeholder=\"Enter Account Number\" />\r\n                                </mat-card>\r\n                               \r\n                               \r\n                              </div>\r\n                              <div class=\"flex-grow-1\" fxFlex=\"50%\" >\r\n                                <label  class=\"hint\">Report Format</label>\r\n                                <mat-card class=\"inputMatName\">\r\n                                    <mat-select formControlName=\"fileType\" placeholder=\"Select Report Format\">\r\n                                        <mat-option disabled value=\"\">Select</mat-option>\r\n                                        <mat-option value=\"doc\">PDF</mat-option>\r\n                                        <!-- <mat-option value=\"Excel\">Excel</mat-option>  -->\r\n                                       \r\n                                      </mat-select>\r\n                                </mat-card>\r\n                               \r\n                               \r\n                              </div>\r\n                        </div>\r\n                        <div  fxFlex=\"70%\" fxLayoutGap=\"10px\">\r\n                            <div  class=\"flex-grow-1\" fxFlex=\"50%\"   >\r\n                                <mat-label class=\"hint\">From Date *</mat-label>\r\n                                <mat-card class=\"inputMatName\" fxLayout=\"row\">\r\n                                <input matInput [matDatepicker]=\"picker\" name=\"courseCommencementDate\" placeholder=\"Select From date\" formControlName=\"fromDate\" readonly >\r\n                                <mat-datepicker-toggle matSuffix style=\"float: right;\" [for]=\"picker\"></mat-datepicker-toggle>\r\n                                <mat-datepicker #picker></mat-datepicker>\r\n                                \r\n                            </mat-card>\r\n                            <mat-error\r\n                             *ngIf=\"!reportForm.get('fromDate').valid  && reportForm.get('fromDate').touched\">\r\n                              &nbsp;&nbsp;&nbsp;From Date is Required!\r\n                            </mat-error>\r\n                            </div>\r\n                            <div  class=\"flex-grow-1\" fxFlex=\"50%\" >\r\n                                <mat-label class=\"hint\">End Date *</mat-label>\r\n                                <mat-card class=\"inputMatName\" fxLayout=\"row\">\r\n                                    <input matInput [matDatepicker]=\"picker1\" name=\"courseCommencementDate\" formControlName=\"endDate\" placeholder=\"Select End date\" readonly >\r\n                                    <mat-datepicker-toggle matSuffix style=\"float: right;\" [for]=\"picker1\"></mat-datepicker-toggle>\r\n                                    <mat-datepicker #picker1></mat-datepicker>\r\n                                </mat-card>\r\n                            </div>\r\n                        </div>\r\n          \r\n                      \r\n                    </div>\r\n    \r\n                  </form>\r\n            </mat-card-content>\r\n            <div fxLayout=\"row\" style=\"padding-bottom: 40px; padding-right: 40px; float: right;\" fxLayoutGap=\"25px\" >\r\n                <button mat-raised-button color=\"primary\" (click)=\"apply()\" [disabled]=\"!reportForm.valid\">\r\n                    Apply\r\n                  </button>&nbsp;&nbsp;&nbsp;\r\n                <button mat-raised-button color=\"warn\" (click)=\"resetForm()\">\r\n                    Reset\r\n                  </button>\r\n              </div>\r\n          </mat-card>\r\n        </div>\r\n     \r\n    </div>\r\n    ","\r\nimport {  Routes } from '@angular/router';\r\nimport { ChangePasswordComponent } from './change-password/change-password.component';\r\nimport { ReportDetailsComponent } from './report/report-details/report-details.component';\r\nimport { ChangeEmailComponent } from './settings/change-email/change-email.component';\r\nimport { SettingsComponent } from './settings/settings.component';\r\nimport { ThemeChangeComponent } from './theme-change/theme-change.component';\r\nexport const settingsRoutes: Routes = [\r\n  {\r\n    path: \"\",\r\n    children: [\r\n      {\r\n        path: \"profile\",\r\n        component: SettingsComponent,\r\n        // data: { title: 'Blank', breadcrumb: 'BLANK' }\r\n      },\r\n      {\r\n        path: \"report/reportDetails\",\r\n        component: ReportDetailsComponent,\r\n        // data: { title: 'Blank', breadcrumb: 'BLANK' }\r\n      },\r\n      {\r\n        path:\"change-password\",\r\n        component: ChangePasswordComponent\r\n      },\r\n      {\r\n        path:\"change-email\",\r\n        component:ChangeEmailComponent\r\n      },\r\n      {\r\n        path:\"theme-change\",\r\n        component:ThemeChangeComponent\r\n      }\r\n    ]\r\n  }\r\n];","import { Component, OnInit, Input, OnDestroy, Renderer2 } from '@angular/core';\r\nimport { NavigationService } from \"../../../shared/services/navigation.service\";\r\nimport { Subscription } from 'rxjs';\r\nimport { ITheme, ThemeService } from '../../../shared/services/theme.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { ILayoutConf, LayoutService } from '../../../shared//services/layout.service';\r\nimport { JwtAuthService } from 'app/shared/services/auth/jwt-auth.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { Router } from '@angular/router';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { theme } from 'highcharts';\r\nimport { themeValueInterface } from './theme-change';\r\n\r\n@Component({\r\n  selector: 'app-theme-change',\r\n  templateUrl: './theme-change.component.html',\r\n  styleUrls: ['./theme-change.component.scss']\r\n})\r\nexport class ThemeChangeComponent implements OnInit {\r\n  themeChangeForm: FormGroup;\r\n  theme: string;\r\n  themeValue: themeValueInterface;\r\n  rumangoThemes:ITheme[];\r\n  layoutConf: ILayoutConf;\r\n  constructor(\r\n    private layout: LayoutService,\r\n    private router: Router,\r\n    private navService: NavigationService,\r\n    public themeService: ThemeService,\r\n    public translate: TranslateService,\r\n    private renderer: Renderer2,\r\n    public jwtAuth: JwtAuthService,\r\n    private ls: LocalStoreService,\r\n    private dialog: MatDialog) { }\r\n\r\n  ngOnInit(): void {\r\n    this.layoutConf = this.layout.layoutConf;\r\n    this.rumangoThemes = this.themeService.rumangoThemes;\r\n  }\r\n  changeTheme(theme) {\r\n      this.layout.applyMatTheme(theme);\r\n  }\r\n  changeTheme1(theme) {\r\n      this.layout.applyMatTheme(theme);\r\n  }\r\n  onChangeTheme(value){\r\n  this.themeValue = value;\r\n  }\r\n\r\n  apply(onChangeTheme){\r\n      if (this.themeValue.value == 'light') {\r\n        this.themeService.changeTheme1('egret-navy');\r\n      } \r\n      if(this.themeValue.value == 'dark'){\r\n        this.themeService.changeTheme1('egret-dark-purple');\r\n      }\r\n      if(this.themeValue.value == 'yellow'){\r\n        this.themeService.changeTheme1('yellow');\r\n      }\r\n      if(this.themeValue.value == 'blue'){\r\n        this.themeService.changeTheme1('blue');\r\n      }\r\n      if(this.themeValue.value == 'red'){\r\n        this.themeService.changeTheme1('red');  \r\n      }\r\n     this.onChangeTheme(e);\r\n    this.changeTheme1(theme);\r\n   }\r\n}\r\nfunction e(e: any) {\r\n  throw new Error('Function not implemented.');\r\n}\r\n\r\n","<div class=\"text-center mat-bg-white pt-16 pb-16\">\r\n  <h2 class=\"m-0 text-blue\">Theme Change</h2>\r\n</div>\r\n<mat-nav-list class=\"notification-list\" role=\"list\">\r\n\r\n  \r\n  <form  [formGroup]=\"themeChangeForm\">\r\n    <div class=\"centeralign\" >\r\n      <div fxFlex=\"100\" fxFlex.gt-xs=\"50\">\r\n        <h3  style= \"padding-top: 5px;\">Default Theme Select</h3> \r\n        <mat-form-field class=\"half-width\" appearance=\"outline\">\r\n          <mat-label>Select Theme</mat-label>\r\n          <mat-select    name=\"themeChange\" (selectionChange)=\"onChangeTheme($event)\">\r\n            <mat-option value=\"light\">\r\n              Light\r\n            </mat-option>\r\n            <mat-option  value=\"dark\">\r\n              Dark\r\n            </mat-option>\r\n            <!-- <mat-option value=\"yellow\">\r\n              Yellow\r\n            </mat-option>\r\n            <mat-option value=\"blue\">\r\n              Blue\r\n            </mat-option>\r\n            <mat-option  value=\"red\">\r\n              Red\r\n            </mat-option> -->\r\n          </mat-select>\r\n        </mat-form-field>\r\n      \r\n  <div class=\"alignright\">\r\n   <button  mat-raised-button \r\n                        (click)=\"apply(onChangeTheme)\"\r\n         color=\"primary\" style=\"color: white;padding: 0.2rem 4rem; border-radius: 15px;\" \r\n                             >Apply</button>\r\n  </div>\r\n</div>\r\n</div>\r\n</form>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n\r\nimport { SettingsComponent } from './settings/settings.component';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { RouterModule } from '@angular/router';\r\nimport { SharedMaterialModule } from 'app/shared/shared-material.module';\r\nimport { SharedModule } from 'app/shared/shared.module';\r\nimport { settingsRoutes } from './settings.routing';\r\nimport { ChangePasswordComponent } from './change-password/change-password.component';\r\nimport { ChangeEmailComponent } from './settings/change-email/change-email.component';\r\nimport { ThemeChangeComponent } from './theme-change/theme-change.component';\r\nimport { ReportDetailsComponent } from './report/report-details/report-details.component';\r\n\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [SettingsComponent, ChangePasswordComponent, ChangeEmailComponent, ThemeChangeComponent,ReportDetailsComponent],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    FlexLayoutModule,\r\n   \r\n    SharedModule,\r\n    ReactiveFormsModule,\r\n    SharedMaterialModule,\r\n    \r\n    RouterModule.forChild(settingsRoutes)\r\n  ]\r\n})\r\nexport class SettingsModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,FormBuilder, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { DataService } from 'app/shared/services/data.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\n\r\n@Component({\r\n  selector: 'app-change-email',\r\n  templateUrl: './change-email.component.html',\r\n  styleUrls: ['./change-email.component.scss']\r\n})\r\nexport class ChangeEmailComponent implements OnInit {\r\n    changeEmailForm: FormGroup;\r\n    userName: string;\r\n    currentUser: any;\r\n  profileInfo: string;\r\n  \r\n  constructor(\r\n    public apiService: ApiService,private fb: FormBuilder,\r\n    private ls:LocalStoreService,\r\n    private router: Router,\r\n    private dataService:DataService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.currentUser=this.ls.getItem(\"ICUST_USER\");\r\n      this.userName = this.currentUser.userName;\r\n    this.changeEmailForm = this.fb.group({\r\n      language:[''],\r\n      email:['']\r\n    \r\n    })\r\n  }\r\n  getProfile(){\r\n    this.apiService.fetchTellerProfileInfo(this.currentUser.userId).subscribe((result) => {\r\n      this.profileInfo =result\r\n    });\r\n    \r\n    \r\n  }\r\n\r\n  save(formdata){\r\n    let payload = {\r\n      \"userName\":this.userName,\r\n      \"email\": this.changeEmailForm.value.email,\r\n      \"language\": this.changeEmailForm.value.language\r\n    };\r\n        this.apiService.updateTellerInfo(payload).subscribe(changePwsresp=>{\r\n          console.log(changePwsresp);\r\n          if(changePwsresp){\r\n            let obj = {\r\n              branchName:changePwsresp.branchName,\r\n              currency:changePwsresp.currency,\r\n              email:changePwsresp.email,\r\n              language:changePwsresp.language,\r\n              tellerName:changePwsresp.firstName +\" \"+ changePwsresp.lastName,\r\n              userId:changePwsresp.userId,\r\n              userName:changePwsresp.userName\r\n            }\r\n            this.ls.setItem(\"ICUST_USER\",obj);\r\n            this.dataService.onChangeOfIcustUser(obj);\r\n            this.router.navigateByUrl(\"settings/profile\");\r\n          }\r\n        });\r\n       }\r\n  }\r\n\r\n\r\n  \r\n\r\n      \r\n  \r\n\r\n \r\n\r\n\r\n\r\n","<div class=\"text-center prof_header mat-bg-white pt-16 pb-16 my-8\">\r\n  <h2 class=\"m-0 text-blue\">Profile Information</h2>\r\n</div>\r\n<mat-nav-list class=\"notification-list\" role=\"list\">\r\n\r\n\r\n  <div fxLayout=\"column\" class=\"pl-35 pr-35\">\r\n    <div fxFlex=\"100%\">\r\n    <form fxLayout=\"column\" [formGroup]=\"changeEmailForm\">\r\n      <div fxLayout=\"column\" fxLayoutGap=\"25px\">\r\n        <div fxFlex=\"50\" fxLayout=\"column\" class=\"pr-1\">\r\n          <div class=\"pb-1\" fxFlex=\"50\" >\r\n          <h3 style=\"padding-top: 5px;\" (click)=\"getProfile()\">Change Email</h3>\r\n          <mat-form-field class=\"full-width\" appearance=\"outline\">\r\n            <mat-label> Email</mat-label>\r\n            <input matInput class=\"box\" formControlName=\"email\" placeholder=\"{{currentUser.email}}\" />\r\n            <mat-icon matSuffix>email</mat-icon>\r\n          </mat-form-field>\r\n        </div>\r\n\r\n        <div class=\"pb-1\" fxFlex=\"50\" >\r\n          <h3  (click)=\"getProfile()\">Select Language</h3>\r\n          <!-- <mat-icon matSuffix>language</mat-icon> -->\r\n          <mat-form-field class=\"full-width\" appearance=\"outline\">\r\n            <mat-select  class=\"box\" appearance=\"outline\" formControlName=\"language\">\r\n              <mat-option value=\"English\">English</mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n\r\n          <!-- <small class=\"time text-muted\">{{n.time}}</small> -->\r\n        </div>\r\n\r\n          <div class=\"alignright\">\r\n           \r\n              <button mat-raised-button (click)=\"save(changeEmailForm.value)\" color=\"primary\" class=\"save_btn\"\r\n              class=\"save_btn\">Save Changes</button>\r\n          </div>\r\n      </div>\r\n    </div>\r\n\r\n  </form>\r\n</div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,FormBuilder, Validators, FormControl } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { currentUser } from 'app/shared/models/cureentUser';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\r\nimport { SecurityDto } from 'app/views/maintenance/user-maintenance/add-user-maintenance/add-user-maintenance.component';\r\n\r\n\r\n@Component({\r\n  selector: 'app-change-password',\r\n  templateUrl: './change-password.component.html',\r\n  styleUrls: ['./change-password.component.scss']\r\n})\r\nexport class ChangePasswordComponent implements OnInit {\r\n  changePasswordForm: FormGroup;\r\n  userName: string;\r\n  currentUser: currentUser;\r\n  SecurityDto : SecurityDto;\r\n  userId: string;\r\n  lowerCase: string;\r\n  security1: SecurityDto;\r\n  minPass: any;\r\n  maxPass: any;\r\n  ucase: any;\r\n  lcase: any;\r\n  num: any;\r\n  splc: any;\r\n  passwordRegex: any\r\n  errorMsg: any = \"\";\r\n  id: number;\r\n  hideCurrentPW=true;\r\n  hideNewPW=true;\r\n  hideConfirmPW=true;\r\n\r\n  constructor(\r\n    public apiService: ApiService,private fb: FormBuilder,\r\n    private ls:LocalStoreService,\r\n    private snack: MatSnackBar,\r\n    private router: Router,\r\n    private api : ApiService\r\n  ) { \r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.currentUser=this.ls.getItem(\"ICUST_USER\");\r\n      this.userName = this.currentUser.userName;\r\n      this.changePasswordForm = new FormGroup({\r\n        currentPassword: new FormControl('', Validators.required),\r\n        newPassword: new FormControl('', [Validators.required,\r\n          Validators.compose([Validators.pattern(this.passwordRegex),\r\n          Validators.maxLength(this.maxPass),\r\n          Validators.minLength(this.minPass)])]),\r\n          confirmnewPassword: new FormControl('', Validators.required)\r\n      })\r\n      this.api.getSecurityPolicyDetails().subscribe((resp) => {\r\n        this.security1 = resp;\r\n        console.log(this.security1);\r\n        this.ucase = this.security1[0].pswdComplexUcase;\r\n        this.lcase = this.security1[0].pswdComplexLcase;\r\n        console.log(this.lcase);\r\n        this.num = this.security1[0].pswdComplexNum;\r\n        console.log(this.num);\r\n        this.splc = this.security1[0].pswdComplexSplc;\r\n        this.minPass = this.security1[0].minPswdLength;\r\n        this.maxPass = this.security1[0].maxPswdLength;\r\n        console.log(this.maxPass);\r\n  \r\n        if (this.security1[0].pswdComplexUcase==\"true\") {\r\n          this.passwordRegex = '(?=[^A-Z]*[A-Z])';\r\n          this.errorMsg = ' UpperCase';\r\n        }\r\n        if (this.security1[0].pswdComplexLcase==\"true\") {\r\n          this.passwordRegex = this.passwordRegex + '(?=[^a-z]*[a-z])';\r\n          if (this.errorMsg != '') {\r\n            this.errorMsg = this.errorMsg + ', LowerCase';\r\n          }\r\n          else {\r\n            this.errorMsg = this.errorMsg + ' LowerCase';\r\n          }\r\n        }\r\n        if(this.splc==\"true\") {\r\n          this.passwordRegex = this.passwordRegex  + '(?=.*[!@#$%^&*])';\r\n          if(this.errorMsg != '') \r\n            this.errorMsg = this.errorMsg + \", Special Character\";  \r\n          else\r\n            this.errorMsg = this.errorMsg + \" Special Character\";\r\n        }\r\n  \r\n        if (this.security1[0].pswdComplexNum==\"true\") {\r\n          this.passwordRegex = this.passwordRegex + '(?=[^0-9]*[0-9])';\r\n          if (this.errorMsg != '') {\r\n            this.errorMsg = this.errorMsg + ', Number';\r\n          }\r\n          else {\r\n            this.errorMsg = this.errorMsg + ' Number';\r\n          }\r\n        }\r\n  \r\n        this.passwordRegex =\r\n          this.passwordRegex + \".{\" + this.minPass + \",\" + this.maxPass + \"}\";\r\n        this.errorMsg =\r\n          \"Password must contain atleast one \" + this.errorMsg + \".\";\r\n        console.log(this.passwordRegex);\r\n      \r\n\r\n        this.changePasswordForm = this.fb.group({\r\n          currentPassword:[\"\", [Validators.required]],\r\n          \r\n          newPassword: new FormControl(\"\", [\r\n            Validators.required,\r\n            Validators.compose([\r\n              Validators.pattern(this.passwordRegex),\r\n              Validators.maxLength(this.maxPass),\r\n              Validators.minLength(this.minPass),\r\n            ]),\r\n          ]),\r\n          confirmnewPassword: new FormControl(\"\", [\r\n            Validators.required,\r\n            Validators.compose([\r\n              Validators.pattern(this.passwordRegex),\r\n              Validators.maxLength(this.maxPass),\r\n              Validators.minLength(this.minPass),\r\n            ]),\r\n          ]),\r\n        \r\n        })\r\n      });\r\n\r\n\r\n    }\r\n\r\n     \r\n    \r\n  \r\n\r\n    save(){\r\n  if(this.changePasswordForm.value.newPassword === this.changePasswordForm.value.confirmnewPassword){\r\n        let payload = {\r\n      \"username\":this.userName,\r\n      \"oldPassword\":this.changePasswordForm.value.currentPassword ,\r\n      \"password\": this.changePasswordForm.value.newPassword\r\n    };\r\n    console.log(\"payload\",payload);\r\n      this.apiService.changeTellerPassword(payload).subscribe(changePwsResp=>{\r\n        if(changePwsResp){\r\n          this.router.navigateByUrl(\"sessions/signin\");\r\n          setTimeout(() => {\r\n            this.snack.open(\"Password Changed Successfully!\", \"OK\", {\r\n              duration: 4000,\r\n              verticalPosition: \"top\",\r\n              horizontalPosition: \"right\",\r\n            });\r\n          }, 1000);\r\n        }\r\n      });\r\n  \r\n  }\r\n  else{\r\n    setTimeout(() => {\r\n      this.snack.open(\"New Password and Confirm Password values are not same!\", \"OK\", {\r\n        duration: 4000,\r\n        verticalPosition: \"top\",\r\n        horizontalPosition: \"right\",\r\n      });\r\n    }, 1000);\r\n    }\r\n     }\r\n    }\r\n    \r\n    \r\n\r\n","<div class=\"text-center mat-bg-white pt-16 pb-16\">\r\n  <h2 class=\"m-0 text-blue\">Password Change</h2>\r\n</div>\r\n\r\n<div fxLayout=\"column\" class=\"pl-35 pr-35\">\r\n  <div fxFlex=\"100%\">\r\n    <form fxLayout=\"column\" [formGroup]=\"changePasswordForm\">\r\n      <div fxLayout=\"column\" fxLayoutGap=\"25px\">\r\n        <div fxFlex=\"50\" fxLayout=\"column\" class=\"pr-1\">\r\n          <div class=\"pb-1\" fxFlex=\"50\">\r\n            <mat-form-field class=\"full-width\" appearance=\"outline\">\r\n              <mat-label>Current Password*</mat-label>\r\n              <input matInput [type]=\"hideCurrentPW ? 'password' : 'text'\" class=\"box\" formControlName=\"currentPassword\"\r\n                placeholder=\"Enter Current Password\" />\r\n              <mat-icon (click)=\"hideCurrentPW = !hideCurrentPW\" style=\"margin-top: -4%; margin-left: 95%; cursor: pointer;\">\r\n                {{hideCurrentPW ? 'visibility_off' :'visibility'}}</mat-icon>\r\n            </mat-form-field>\r\n          </div>\r\n\r\n          <div class=\"pb-1\" fxFlex=\"50\">\r\n            <mat-form-field class=\"full-width\" appearance=\"outline\">\r\n              <mat-label> New Password*</mat-label>\r\n              <input matInput [type]=\"hideNewPW ? 'password' : 'text'\" minlength={{minPass}} maxlength={{maxPass}} class=\"box\"\r\n                formControlName=\"newPassword\" placeholder=\"Enter confirm Password\" />\r\n              <mat-icon (click)=\"hideNewPW = !hideNewPW\" style=\"margin-top: -4%; margin-left: 95%; cursor: pointer;\">\r\n                {{hideNewPW ? 'visibility_off' :'visibility'}}</mat-icon>\r\n            </mat-form-field>\r\n            <mat-error\r\n              *ngIf=\"changePasswordForm.get('newPassword').touched && !changePasswordForm.get('newPassword').valid\">\r\n              <div *ngIf=\"changePasswordForm.get('newPassword').errors.pattern\">{{errorMsg}}</div>\r\n            </mat-error>\r\n\r\n            <mat-error *ngIf=\"changePasswordForm.get('newPassword').hasError('minlength')\">\r\n              New Password Password must contain Minimum {{minPass}} digits.\r\n            </mat-error>\r\n            <mat-error *ngIf=\"changePasswordForm.get('newPassword').hasError('maxlength')\">\r\n              New Password must contain Maximum {{maxPass}} digits.\r\n            </mat-error>\r\n          </div>\r\n\r\n          <div class=\"pb-1\" fxFlex=\"50\">\r\n            <mat-form-field class=\"full-width\" appearance=\"outline\">\r\n              <mat-label>Confirm New Password*</mat-label>\r\n              <input matInput [type]=\"hideConfirmPW ? 'password' : 'text'\" class=\"box\" formControlName=\"confirmnewPassword\"\r\n                placeholder=\"Enter confirm Password\" />\r\n              <mat-icon (click)=\"hideConfirmPW = !hideConfirmPW\" style=\"margin-top: -4%; margin-left: 95%; cursor: pointer;\">\r\n                {{hideConfirmPW ? 'visibility_off' :'visibility'}}</mat-icon>\r\n            </mat-form-field>\r\n            <mat-error\r\n              *ngIf=\"changePasswordForm.get('confirmnewPassword').touched && !changePasswordForm.get('confirmnewPassword').valid\">\r\n              <div *ngIf=\"changePasswordForm.get('confirmnewPassword').errors.pattern\">{{errorMsg}}</div>\r\n            </mat-error>\r\n            <mat-error *ngIf=\"changePasswordForm.get('confirmnewPassword').hasError('minlength')\">\r\n              New Password Password must contain Minimum {{minPass}} digits.\r\n            </mat-error>\r\n            <mat-error *ngIf=\"changePasswordForm.get('confirmnewPassword').hasError('maxlength')\">\r\n              New Password must contain Maximum {{maxPass}} digits.\r\n            </mat-error>\r\n          </div>\r\n          <div class=\"alignright\">\r\n            <button mat-raised-button [disabled]=\"changePasswordForm.invalid\" (click)=\"save()\" color=\"primary\"\r\n              class=\"save_btn\">Save</button>\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { currentUser } from 'app/shared/models/currentuser';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { ThemeService } from 'app/shared/services/theme.service';\r\n//import { resourceLimits } from 'worker_threads';\r\nimport { DataService } from 'app/shared/services/data.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\n\r\n\r\n@Component({\r\n  selector: 'app-settings',\r\n  templateUrl: './settings.component.html',\r\n  styleUrls: ['./settings.component.scss']\r\n})\r\nexport class SettingsComponent implements OnInit {\r\ncurrentUser:currentUser;\r\nprofileInfo:any;\r\nselectedTheme: string;\r\nemailId:any;\r\n\r\n  constructor(private ls:LocalStoreService, private snack: MatSnackBar, private dataService:DataService,private apiService:ApiService,public router:Router,  public themeService: ThemeService,) {\r\n    \r\n\r\n   }\r\n\r\n  ngOnInit(): void {\r\n    this.currentUser = this.ls.getItem(\"ICUST_USER\");\r\n    this.getProfile();\r\n    this.dataService.getIcustUser().subscribe((data) => {\r\n      if (data) {\r\n        this.currentUser = this.ls.getItem(\"ICUST_USER\");\r\n        setTimeout(() => {\r\n          this.snack.open(\"Email Changed Successfully!\", \"OK\", {\r\n            duration: 4000,\r\n            verticalPosition: \"top\",\r\n            horizontalPosition: \"right\",\r\n          });\r\n        }, 1000);\r\n      }\r\n    });\r\n  }\r\n\r\n  \r\n  \r\n  getProfile(){\r\n    this.apiService.fetchTellerProfileInfo(this.currentUser.userId).subscribe((result) => {\r\n      this.profileInfo =result;\r\n    });\r\n    \r\n    \r\n  }\r\n  language(){\r\n    this.apiService.fetchTellerProfileInfo(1).subscribe((result) => {\r\n      this.router.navigateByUrl('/settings/change-password');\r\n    });\r\n\r\n  }\r\n  languagemail(){\r\n    this.router.navigateByUrl('/settings/change-email');\r\n    }\r\n\r\n    onChangeTheme(e){\r\n      if (e.value == 'light') {\r\n        this.ls.setItem('theme', 'light');\r\n        this.themeService.changeTheme('egret-dark-purple','egret-navy');\r\n      } else {\r\n        this.ls.setItem('theme', 'dark');\r\n        this.themeService.changeTheme('egret-navy','egret-dark-purple');\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n\r\n\r\nfunction language(): void {\r\n  throw new Error('Function not implemented.');\r\n\r\n}\r\n\r\n\r\n","<div class=\"profilecontainer mt-8\">\r\n<div  class=\"text-center mat-bg-primary pt-16 pb-16\">\r\n  <h4 class=\"profilevalid\" class=\"m-0 text-white\">Profile</h4>\r\n</div>\r\n<mat-nav-list class=\"notification-list\" role=\"list\">\r\n  <!-- Notification item -->\r\n\r\n  <mat-list-item class=\"notific-item\" role=\"listitem\" routerLinkActive=\"open\">\r\n      <mat-icon color=\"primary\" class=\"notific-icon mr-16\">person</mat-icon>\r\n      <a>\r\n       <div class=\"mat-list-text\">\r\n         <h4 class=\"message\">{{currentUser.tellerName}}</h4>\r\n         <!-- <small class=\"time text-muted\">{{n.time}}</small> -->\r\n       </div>\r\n    </a>\r\n  </mat-list-item>\r\n  <mat-list-item class=\"notific-item\" role=\"listitem\" routerLinkActive=\"open\">\r\n    <mat-icon color=\"primary\" class=\"notific-icon mr-16\">language icon</mat-icon>\r\n      <a>\r\n      <div  class=\"mat-list-text\">\r\n        <h4 class=\"message\" >{{currentUser.language }}</h4>\r\n        </div>\r\n   </a>\r\n </mat-list-item>\r\n  <mat-list-item class=\"notific-item\" role=\"listitem\" routerLinkActive=\"open\">\r\n    <mat-icon color=\"primary\" class=\"notific-icon mr-16\">password</mat-icon>\r\n     <a>\r\n      <div class=\"mat-list-text\">\r\n        <h4 class=\"message\" (click)=\"language()\">Password Change</h4>\r\n        <!-- <small class=\"time text-muted\">{{n.time}}</small> -->\r\n      </div>\r\n    </a>\r\n  </mat-list-item>\r\n  <mat-list-item class=\"notific-item\" role=\"listitem\" routerLinkActive=\"open\">\r\n    <mat-icon color=\"primary\" class=\"notific-icon mr-16\">email</mat-icon>\r\n     <a>\r\n      <div class=\"mat-list-text\">\r\n        <h4 class=\"message\" >{{currentUser.email }}</h4>\r\n        <!-- <small class=\"time text-muted\">{{n.time}}</small> -->\r\n      </div>\r\n    </a>\r\n  </mat-list-item>\r\n  <mat-list-item class=\"notific-item\" role=\"listitem\" routerLinkActive=\"open\">\r\n    <mat-icon color=\"primary\" class=\"notific-icon mr-16\">adjust icon</mat-icon>\r\n     <a>\r\n      <div class=\"mat-list-text\">\r\n        <h4 class=\"message\" (click)=\"getProfile()\">Theme change</h4>\r\n        <!-- <small class=\"time text-muted\">{{n.time}}</small> -->\r\n      </div>\r\n    </a>\r\n    \r\n  </mat-list-item>\r\n  <div class=\"mx-60\">\r\n    <form class=\"mt-4\">\r\n      <mat-form-field>\r\n        <mat-label>Select Theme</mat-label>\r\n        <mat-select [(ngModel)]=\"selectedTheme\" name=\"theme\" (selectionChange)=\"onChangeTheme($event)\">\r\n          <mat-option value=\"light\">\r\n            Light\r\n          </mat-option>\r\n          <mat-option value=\"dark\">\r\n            Dark\r\n          </mat-option>\r\n        </mat-select>\r\n      </mat-form-field>\r\n    </form>\r\n  </div>\r\n\r\n\r\n  <mat-list-item class=\"notific-item\" role=\"listitem\" routerLinkActive=\"open\">\r\n    <mat-icon color=\"primary\" class=\"notific-icon mr-16\">edit</mat-icon>\r\n     <a>\r\n      <div class=\"mat-list-text\">\r\n        <h4 class=\"message\" (click)=\"languagemail()\">Edit Profile</h4>\r\n        <!-- <small class=\"time text-muted\">{{n.time}}</small> -->\r\n      </div>\r\n    </a>\r\n  </mat-list-item>\r\n</mat-nav-list>\r\n</div>"],"sourceRoot":"webpack:///"}