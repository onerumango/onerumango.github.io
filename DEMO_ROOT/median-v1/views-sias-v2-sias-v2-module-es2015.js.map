{"version":3,"sources":["./node_modules/ip-address/dist/esm/ip-address.js","./node_modules/ip-address/dist/esm/lib/address-error.js","./node_modules/ip-address/dist/esm/lib/common.js","./node_modules/ip-address/dist/esm/lib/ipv4.js","./node_modules/ip-address/dist/esm/lib/ipv6.js","./node_modules/ip-address/dist/esm/lib/v4/constants.js","./node_modules/ip-address/dist/esm/lib/v6/constants.js","./node_modules/ip-address/dist/esm/lib/v6/helpers.js","./node_modules/ip-address/dist/esm/lib/v6/regular-expressions.js","./node_modules/ip-address/node_modules/jsbn/index.js","./node_modules/ip-address/node_modules/sprintf-js/src/sprintf.js","./node_modules/ng2-file-upload/fesm2015/ng2-file-upload.js","./src/app/views/sias-v2/add-system-incoming-message-tcp/add-system-incoming-message-tcp.component.html","./src/app/views/sias-v2/add-system-incoming-message-tcp/external-system-matenance-summary/external-system-matenance-summary.component.html","./src/app/views/sias-v2/add-system-incoming-message-tcp/rule-mapping/edit-rule-mapping/edit-rule-mapping.component.html","./src/app/views/sias-v2/add-system-incoming-message-tcp/rule-mapping/list-rule-mapping/list-rule-mapping.component.html","./src/app/views/sias-v2/add-system-incoming-message-tcp/rule-mapping/rule-mapping.component.html","./src/app/views/sias-v2/add-system-incoming-message-tcp/view-or-edit-external-system/view-or-edit-external-system.component.html","./src/app/views/sias-v2/edit-add-system/edit-add-system.component.html","./src/app/views/sias-v2/excel-external-sys/excel-external-sys.component.html","./src/app/views/sias-v2/excel-mapping/excel-mapping-summary/excel-mapping-summary.component.html","./src/app/views/sias-v2/excel-mapping/excel-mapping.component.html","./src/app/views/sias-v2/excel-mapping/update-excel-mapping/update-excel-mapping.component.html","./src/app/views/sias-v2/excel-processing/excel-processing.component.html","./src/app/views/sias-v2/excel-upload/excel-upload.component.html","./src/app/views/sias-v2/ext-sys-list/ext-sys-list.component.html","./src/app/views/sias-v2/ext-system/ext-system.component.html","./src/app/views/sias-v2/extsummary/extsummary.component.html","./src/app/views/sias-v2/extsummary/updateexcelext/updateexcelext.component.html","./src/app/views/sias-v2/rules/create-rules/create-rules.component.html","./src/app/views/sias-v2/rules/create-rules/edit-rules/edit-rules.component.html","./src/app/views/sias-v2/rules/rule-summary/rule-summary.component.html","./src/app/views/sias-v2/rules/rule-translation/edit-rule-tarnslation/edit-rule-tarnslation.component.html","./src/app/views/sias-v2/rules/rule-translation/rule-translation.component.html","./src/app/views/sias-v2/rules/rule-translationsummary/rule-translationsummary.component.html","./src/app/views/sias-v2/rules/rule-validation/rule-validation.component.html","./src/app/views/sias-v2/rules/rules.component.html","./src/app/views/sias-v2/source-destination-system-validation/source-destination-system-validation.component.html","./src/app/views/sias-v2/update-extsys/update-extsys.component.html","./src/app/shared/services/addSys/add-system.service.ts","./src/app/shared/services/rules/rules.service.ts","./src/app/shared/services/sias2-services/ExcelApiService.ts","./src/app/shared/services/sias2-services/excel-processing.service.ts","./src/app/shared/services/sias2-services/excel.api.service.ts","./src/app/views/sias-v2/add-system-incoming-message-tcp/add-system-incoming-message-tcp.component.css","./src/app/views/sias-v2/add-system-incoming-message-tcp/add-system-incoming-message-tcp.component.ts","./src/app/views/sias-v2/add-system-incoming-message-tcp/add-system.ts","./src/app/views/sias-v2/add-system-incoming-message-tcp/external-system-matenance-summary/external-system-matenance-summary.component.css","./src/app/views/sias-v2/add-system-incoming-message-tcp/external-system-matenance-summary/external-system-matenance-summary.component.ts","./src/app/views/sias-v2/add-system-incoming-message-tcp/rule-mapping/edit-rule-mapping/edit-rule-mapping.component.css","./src/app/views/sias-v2/add-system-incoming-message-tcp/rule-mapping/edit-rule-mapping/edit-rule-mapping.component.ts","./src/app/views/sias-v2/add-system-incoming-message-tcp/rule-mapping/list-rule-mapping/list-rule-mapping.component.css","./src/app/views/sias-v2/add-system-incoming-message-tcp/rule-mapping/list-rule-mapping/list-rule-mapping.component.ts","./src/app/views/sias-v2/add-system-incoming-message-tcp/rule-mapping/rule-mapping.component.css","./src/app/views/sias-v2/add-system-incoming-message-tcp/rule-mapping/rule-mapping.component.ts","./src/app/views/sias-v2/add-system-incoming-message-tcp/view-or-edit-external-system/view-or-edit-external-system.component.css","./src/app/views/sias-v2/add-system-incoming-message-tcp/view-or-edit-external-system/view-or-edit-external-system.component.ts","./src/app/views/sias-v2/edit-add-system/edit-add-system.component.css","./src/app/views/sias-v2/edit-add-system/edit-add-system.component.ts","./src/app/views/sias-v2/excel-external-sys/excel-external-sys.component.scss","./src/app/views/sias-v2/excel-external-sys/excel-external-sys.component.ts","./src/app/views/sias-v2/excel-external-sys/excelExtSys.ts","./src/app/views/sias-v2/excel-mapping/excel-mapping-summary/excel-mapping-summary.component.css","./src/app/views/sias-v2/excel-mapping/excel-mapping-summary/excel-mapping-summary.component.ts","./src/app/views/sias-v2/excel-mapping/excel-mapping.component.css","./src/app/views/sias-v2/excel-mapping/excel-mapping.component.ts","./src/app/views/sias-v2/excel-mapping/excelMapping.ts","./src/app/views/sias-v2/excel-mapping/externalSystem.ts","./src/app/views/sias-v2/excel-mapping/update-excel-mapping/update-excel-mapping.component.scss","./src/app/views/sias-v2/excel-mapping/update-excel-mapping/update-excel-mapping.component.ts","./src/app/views/sias-v2/excel-processing/excel-processing.component.css","./src/app/views/sias-v2/excel-processing/excel-processing.component.ts","./src/app/views/sias-v2/excel-processing/excelMasterClass.ts","./src/app/views/sias-v2/excel-upload/excel-upload.component.css","./src/app/views/sias-v2/excel-upload/excel-upload.component.ts","./src/app/views/sias-v2/ext-sys-list/ext-sys-list.component.scss","./src/app/views/sias-v2/ext-sys-list/ext-sys-list.component.ts","./src/app/views/sias-v2/ext-system/ext-system.component.scss","./src/app/views/sias-v2/ext-system/ext-system.component.ts","./src/app/views/sias-v2/ext-system/extsys-class.ts","./src/app/views/sias-v2/extsummary/extsummary.component.scss","./src/app/views/sias-v2/extsummary/extsummary.component.ts","./src/app/views/sias-v2/extsummary/updateexcelext/updateexcelext.component.scss","./src/app/views/sias-v2/extsummary/updateexcelext/updateexcelext.component.ts","./src/app/views/sias-v2/rules/create-rules/create-rules.component.css","./src/app/views/sias-v2/rules/create-rules/create-rules.component.ts","./src/app/views/sias-v2/rules/create-rules/edit-rules/edit-rules.component.css","./src/app/views/sias-v2/rules/create-rules/edit-rules/edit-rules.component.ts","./src/app/views/sias-v2/rules/rule-summary/rule-summary.component.css","./src/app/views/sias-v2/rules/rule-summary/rule-summary.component.ts","./src/app/views/sias-v2/rules/rule-translation/edit-rule-tarnslation/edit-rule-tarnslation.component.css","./src/app/views/sias-v2/rules/rule-translation/edit-rule-tarnslation/edit-rule-tarnslation.component.ts","./src/app/views/sias-v2/rules/rule-translation/rule-translation.component.css","./src/app/views/sias-v2/rules/rule-translation/rule-translation.component.ts","./src/app/views/sias-v2/rules/rule-translationsummary/rule-translationsummary.component.css","./src/app/views/sias-v2/rules/rule-translationsummary/rule-translationsummary.component.ts","./src/app/views/sias-v2/rules/rule-validation/rule-validation.component.css","./src/app/views/sias-v2/rules/rule-validation/rule-validation.component.ts","./src/app/views/sias-v2/rules/rules.component.css","./src/app/views/sias-v2/rules/rules.component.ts","./src/app/views/sias-v2/sias-v2-routing.module.ts","./src/app/views/sias-v2/sias-v2.module.ts","./src/app/views/sias-v2/source-destination-system-validation/source-destination-system-validation.component.css","./src/app/views/sias-v2/source-destination-system-validation/source-destination-system-validation.component.ts","./src/app/views/sias-v2/update-extsys/update-extsys.component.scss","./src/app/views/sias-v2/update-extsys/update-extsys.component.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAsC;AACA;AACa;AAC/B;AACA;AACI;AACoB;AACrC,YAAY,CAAC,qDAAO;AAC3B,sC;;;;;;;;;;;;ACRA;AAAA;AAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yC;;;;;;;;;;;;ACTA;AAAA;AAAA;AAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kC;;;;;;;;;;;;ACpBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACmC;AACS;AACG;AACb;AACG;AACrC;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACO;AACP;AACA,sBAAsB,oDAAgB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,yBAAyB,iDAAgB,CAAC,kDAAc;AACxD;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,0BAA0B,kDAAiB;AAC3C;AACA,uBAAuB,8DAA0B;AACjD;AACA;AACA;AACA,8BAA8B,gBAAgB;AAC9C,yDAAyD,kDAAc;AACvE,0BAA0B,2DAAY;AACtC;AACA,sCAAsC,8DAA0B;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,wDAAoB;AAC/C,sBAAsB,2DAAY;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,iBAAiB;AACjB;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,gDAAgD,0DAAO;AACvD;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,mBAAmB,KAAK,oDAAgB,CAAC;AACzC,wBAAwB,0DAAO;AAC/B,wBAAwB,0DAAO;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,mBAAmB,+CAAU,+BAA+B,0DAAO;AACnE;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,mBAAmB,+CAAU,0BAA0B,kDAAc;AACrE;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,2BAA2B,+CAAU;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,mBAAmB,+CAAU,0BAA0B,kDAAc;AACrE;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,2BAA2B,+CAAU;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,WAAW;AAC1B,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,QAAQ;AACvB;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,0DAAO;AACtB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,sDAAsD,kDAAc;AACpE;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,oCAAoC,wDAAoB,EAAE,0DAAO;AACjE;AACA;AACA,gC;;;;;;;;;;;;AC1SA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACmC;AACU;AACA;AACL;AACN;AACsE;AACzD;AACb;AACG;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,EAAE;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,GAAG;AAC1B,uBAAuB,GAAG;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,oBAAoB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,0DAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,0BAA0B,kDAAiB;AAC3C;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,yBAAyB,iDAAgB,CAAC,kDAAe;AACzD;AACA,0BAA0B,oDAAiB;AAC3C;AACA;AACA;AACA;AACA;AACA,uBAAuB,8DAA2B;AAClD;AACA;AACA;AACA,8BAA8B,gBAAgB;AAC9C;AACA;AACA,kCAAkC,kDAAe;AACjD,0BAA0B,2DAAY;AACtC;AACA,sCAAsC,8DAA2B;AACjE;AACA;AACA,sBAAsB,2DAAY;AAClC;AACA,qBAAqB,4DAAyB;AAC9C;AACA;AACA,sCAAsC,4DAAyB;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,WAAW;AAC1B,iBAAiB;AACjB;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA,mBAAmB,KAAK,oDAAiB,CAAC;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA,4CAA4C;AAC5C,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,8DAA2B;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,oDAAiB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,iBAAiB;AACjB;AACA;AACA,6BAA6B;AAC7B,wBAAwB;AACxB;AACA;AACA,6BAA6B,8CAAQ;AACrC,sBAAsB,kDAAe,IAAI,kDAAe;AACxD,sCAAsC,uBAAuB,GAAG,MAAM;AACtE;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,iBAAiB;AACjB;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,2DAAY;AAClC;AACA;AACA,qCAAqC,OAAO;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA,eAAe,0DAAO;AACtB;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,iBAAiB;AACjB;AACA;AACA;AACA,8BAA8B,kDAAe;AAC7C,iDAAiD,kDAAe;AAChE;AACA;AACA;AACA;AACA,6BAA6B,+CAAU;AACvC;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,mBAAmB,+CAAU,0BAA0B,kDAAe;AACtE;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,2BAA2B,+CAAU;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,mBAAmB,+CAAU,0BAA0B,kDAAe;AACtE;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,2BAA2B,+CAAU;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,oBAAoB,oDAAiB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,yCAAyC,mDAAgB;AACzD;AACA,uBAAuB,mDAAgB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,mBAAmB,+CAAU;AAC7B;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,kDAAkD,kDAAe;AACjE;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,QAAQ;AACvB;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,0DAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,+BAA+B;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,mBAAmB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,kDAAe;AACrE;AACA;AACA;AACA;AACA;AACA,yCAAyC,wDAAqB;AAC9D;AACA;AACA,gCAAgC,8CAAQ;AACxC,2BAA2B,0BAA0B;AACrD;AACA,8BAA8B,2DAAY,8DAA8D,wDAAqB;AAC7H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,+DAA4B;AACxE;AACA,sBAAsB,2DAAY,CAAC,0DAAO,0HAA0H,+DAA4B;AAChM;AACA,yCAAyC,4DAAyB;AAClE;AACA,sBAAsB,2DAAY,CAAC,0DAAO,mEAAmE,4DAAyB;AACtI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,2DAAY;AACtC;AACA;AACA;AACA;AACA;AACA,2BAA2B,eAAe;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,2DAAY;AAClC;AACA,uCAAuC,0DAAO;AAC9C;AACA,sBAAsB,2DAAY;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,6CAA6C,0DAAO;AACpD;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,mBAAmB,+CAAU;AAC7B;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA,eAAe,8CAAQ,aAAa,+CAAU;AAC9C;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,+CAAU;AAC/D,wBAAwB,8CAAQ;AAChC,wBAAwB,8CAAQ,uCAAuC,+CAAU;AACjF;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,+CAAU;AACpC;AACA,oBAAoB,0DAAO;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,8CAAQ;AAChC;AACA,oBAAoB,0DAAO;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,6BAA6B,+CAAU;AACvC,yBAAyB,+CAAU;AACnC,6BAA6B,+CAAU;AACvC,sCAAsC,QAAQ;AAC9C,wDAAwD,+CAAU;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,0DAAO;AAClC;AACA,eAAe,0DAAO;AACtB;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,0DAAO;AAC1B;AACA,eAAe,0DAAO;AACtB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,mBAAmB,uDAAmB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,uDAAmB;AAC9C;AACA;AACA;AACA;AACA;AACA,uCAAuC,2CAA2C;AAClF,yBAAyB,0DAAO;AAChC;AACA,oBAAoB,0DAAO;AAC3B;AACA,2BAA2B,uDAAmB;AAC9C;AACA;AACA;AACA;AACA;AACA,4CAA4C,8CAAQ;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,uFAAuB;AAC/C;AACA,2CAA2C,oDAAiB;AAC5D;AACA,wBAAwB,gFAAgB,CAAC,oDAAiB;AAC1D;AACA;AACA;AACA;AACA;AACA,4BAA4B,uFAAuB;AACnD;AACA;AACA,wBAAwB,gFAAgB;AACxC;AACA,4BAA4B,uFAAuB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,wEAAgB;AAChC;AACA;AACA;AACA,gBAAgB,wEAAgB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,gC;;;;;;;;;;;;AC18BA;AAAA;AAAA;AAAA;AAAA;AAAO;AACA;AACA;AACA,+BAA+B,IAAI;AAC1C,qC;;;;;;;;;;;;ACJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAO;AACA;AACP;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACO,kCAAkC,GAAG,GAAG,GAAG;AAClD;AACA;AACA;AACA;AACA;AACO,+BAA+B,IAAI;AAC1C;AACA;AACA;AACA;AACA;AACO;AACA,+BAA+B,IAAI,eAAe,IAAI;AACtD,6DAA6D,IAAI;AACxE,qC;;;;;;;;;;;;ACxEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAqC;AACrC;AACA,aAAa,OAAO;AACpB;AACO;AACP;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACO;AACP;AACA;AACA,uBAAuB,0DAAO;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACO;AACP;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACO;AACP;AACA;AACA;AACA;AACA;AACA,eAAe,0DAAO;AACtB,KAAK;AACL;AACA,mC;;;;;;;;;;;;ACxCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkC;AACG;AAC9B;AACP,WAAW,0DAAO;AAClB;AACO;AACP;AACA,eAAe,0DAAO,IAAI,KAAK;AAC/B;AACA;AACA;AACO;AACA;AACP;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,6CAA6C,iDAAS;AACtD;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,0DAAO,QAAQ,IAAI,EAAE,KAAK;AACjD;AACA,uBAAuB,0DAAO,KAAK,IAAI,GAAG,KAAK;AAC/C;AACA,uBAAuB,0DAAO,KAAK,IAAI,GAAG,GAAG,EAAE,IAAI;AACnD;AACA,wBAAwB,2BAA2B;AACnD,8BAA8B,kCAAkC;AAChE,+BAA+B,0DAAO,KAAK,IAAI,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,EAAE,IAAI;AACzE;AACA;AACA;AACA;AACA,+C;;;;;;;;;;;ACjEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,oBAAoB,6BAA6B;;AAEjD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe,SAAS;AACxB;AACA,gBAAgB,SAAS;AACzB;AACA,gBAAgB,SAAS;;AAEzB,0BAA0B,wBAAwB;AAClD;AACA;AACA;AACA;;AAEA;AACA;AACA,2BAA2B,QAAQ;AACnC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,qBAAqB,eAAe,cAAc,UAAU;;AAE5D;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA,YAAY,qBAAqB,QAAQ;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,UAAU,iBAAiB;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,cAAc,KAAK;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,yBAAyB,eAAe,+BAA+B,UAAU;;AAEjF;AACA,sBAAsB,sCAAsC;;AAE5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,2BAA2B,OAAO,SAAS;AAC3C,yBAAyB,OAAO,QAAQ;AACxC,yBAAyB,OAAO,QAAQ;AACxC,yBAAyB,OAAO,QAAQ;AACxC,yBAAyB,OAAO,QAAQ;AACxC;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,uBAAuB,QAAQ;AAC/B,kBAAkB,QAAQ;AAC1B;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,YAAY;AAChC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,QAAQ;AAC/B;AACA;AACA;AACA,mBAAmB,QAAQ;AAC3B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,wBAAwB,SAAS,QAAQ;AACzC;AACA;AACA;AACA;AACA,uBAAuB,YAAY;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,SAAS;AACzB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAgB,WAAW;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C;AAC1C,mBAAmB,oBAAoB,oBAAoB;AAC3D,YAAY,cAAc,cAAc;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA,8CAA8C;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,yBAAyB,YAAY;AACrC;AACA;AACA;AACA;AACA,yBAAyB,UAAU;AACnC,yBAAyB,2BAA2B;AACpD,4BAA4B,mBAAmB,gBAAgB;AAC/D,0BAA0B,eAAe,gBAAgB;;AAEzD;AACA;AACA;AACA;AACA;;AAEA,2CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB,gCAAgC;AAChC,kCAAkC;AAClC,iDAAiD;AACjD;AACA;AACA,sCAAsC;AACtC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,oBAAoB,cAAc;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,cAAc,UAAU;AACrD;AACA;AACA;AACA;AACA;;AAEA,yBAAyB;AACzB,6BAA6B,eAAe,gBAAgB;;AAE5D,wBAAwB;AACxB,+BAA+B,mBAAmB,gBAAgB;;AAElE;AACA;AACA;AACA;AACA;;AAEA;AACA,0BAA0B,6CAA6C;;AAEvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,WAAW,QAAQ,QAAQ;AACzC;AACA;AACA;;AAEA;AACA;AACA;AACA,mDAAmD;AACnD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA,wBAAwB,eAAe,gBAAgB,UAAU;;AAEjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,4BAA4B,6CAA6C;;AAEzE;AACA,6BAA6B,6CAA6C;;AAE1E;AACA,8BAA8B,iDAAiD;;AAE/E;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,cAAc;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,cAAc,KAAK;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,0BAA0B,8BAA8B;AACxD,uBAAuB,oCAAoC;AAC3D,uBAAuB,oCAAoC;;AAE3D;AACA;AACA;AACA,gBAAgB,OAAO;AACvB;AACA;AACA,kBAAkB,YAAY;AAC9B;AACA;AACA;AACA;AACA,kBAAkB,SAAS;AAC3B;AACA;AACA;AACA;AACA;;AAEA;AACA,0BAA0B,YAAY;AACtC,uBAAuB,eAAe,4BAA4B,UAAU;;AAE5E;AACA,yBAAyB,YAAY;AACrC,sBAAsB,eAAe,2BAA2B,UAAU;;AAE1E;AACA,0BAA0B,YAAY;AACtC,uBAAuB,eAAe,4BAA4B,UAAU;;AAE5E;AACA,6BAA6B,aAAa;AAC1C,0BAA0B,eAAe,+BAA+B,UAAU;;AAElF;AACA;AACA;AACA,oBAAoB,YAAY;AAChC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oCAAoC;AACpC;AACA;;AAEA;AACA;AACA;AACA,oCAAoC;AACpC;AACA;;AAEA;AACA;AACA;AACA;AACA,2BAA2B,UAAU,SAAS;AAC9C,yBAAyB,SAAS,QAAQ;AAC1C,wBAAwB,SAAS,QAAQ;AACzC,sBAAsB,SAAS,QAAQ;AACvC;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,YAAY;AAChC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,qBAAqB,UAAU,KAAK;AACpC;AACA;;AAEA;AACA;AACA;AACA,oBAAoB,YAAY;AAChC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,0BAA0B,gCAAgC;;AAE1D;AACA,4BAA4B,oCAAoC;;AAEhE;AACA,2BAA2B,iCAAiC;;AAE5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,uBAAuB,eAAe,iBAAiB,UAAU;;AAEjE;AACA,4BAA4B,eAAe,iBAAiB,UAAU;;AAEtE;AACA,4BAA4B,eAAe,sBAAsB,UAAU;;AAE3E;AACA,yBAAyB,eAAe,kBAAkB,UAAU;;AAEpE;AACA,0BAA0B,eAAe,yBAAyB,UAAU;;AAE5E;AACA,6BAA6B,eAAe,yBAAyB,UAAU;;AAE/E;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,sBAAsB,UAAU;AAChC,4BAA4B,mBAAmB;AAC/C,0BAA0B,eAAe;;AAEzC;AACA;AACA;AACA;;AAEA;AACA,uBAAuB,kCAAkC;;AAEzD;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,yBAAyB,OAAO;AAChC,8BAA8B,OAAO;AACrC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA,mCAAmC,SAAS;AAC5C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,eAAe,aAAa,gBAAgB,UAAU;AAClE;;AAEA,+BAA+B,UAAU;;AAEzC;AACA;AACA;AACA,4BAA4B,kBAAkB,WAAW;AACzD;AACA;AACA;AACA;AACA;AACA;;AAEA,qBAAqB;AACrB,gCAAgC,eAAe,gBAAgB;;AAE/D,qBAAqB;AACrB,kCAAkC,mBAAmB,gBAAgB;;AAErE;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,2BAA2B,SAAS,KAAK;AACzC,0BAA0B,cAAc,KAAK;AAC7C,iBAAiB;AACjB;AACA;AACA;AACA;AACA,wBAAwB,eAAe,eAAe,QAAQ;AAC9D,kCAAkC,OAAO,OAAO,QAAQ,QAAQ;AAChE;AACA;;AAEA;AACA,wBAAwB,OAAO,QAAQ;AACvC,uBAAuB,eAAe,KAAK;AAC3C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,8BAA8B,WAAW,OAAO,OAAO;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,QAAQ;AAC1C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,iBAAiB,cAAc;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,iBAAiB,cAAc;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC,yCAAyC;AACzC;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAkB,sBAAsB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,sCAAsC,8BAA8B;AACpE;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,QAAQ;AAC5B;AACA;AACA;AACA;AACA;AACA,oBAAoB,cAAc;AAClC;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,yBAAyB,4BAA4B;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAgB,eAAe;AAC/B;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAgB,SAAS;AACzB;AACA;AACA,gBAAgB,SAAS;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,QAAQ,IAA8B;AACtC;AACA;AACA;AACA;AACA;AACA,KAAK,MAAM,EAKN;;AAEL,CAAC;;;;;;;;;;;;ACh1CD;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA,+BAA+B,oBAAoB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA,sBAAsB;AACttC;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY,IAA6C;AACzD,YAAY,mCAAO;AACnB;AACA;AACA;AACA;AACA,aAAa;AAAA,oGAAC;AACd;AACA;AACA;AACA,CAAC,GAAG;;;;;;;;;;;;;ACtOJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2G;AAC5D;;AAE/C;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,qBAAqB,EAAE;AACvB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAWV;;AAED;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD;AACzD,sDAAsD;AACtD;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAoDV;;AAED;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAWV;;AAED;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB,WAAW,EAKV;AACD;AACA;AACA;AACA,gCAAgC;AAChC,WAAW,EAuCV;AACD;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA,4BAA4B,0DAAY;AACxC;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,iDAAiD;AACvF;AACA,0CAA0C,6CAA6C;AACvF;AACA;AACA,0CAA0C,6CAA6C;AACvF;AACA;AACA,0CAA0C,6CAA6C;AACvF;AACA,uBAAuB,uBAAuB;AAC9C;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,EAAE;AACvB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA,+BAA+B,EAAE;AACjC;AACA;AACA,4EAA4E,WAAW;AACvF,uDAAuD,WAAW;AAClE;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,SAAS;AACT;AACA,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA,yBAAyB,EAAE;AAC3B;AACA,SAAS;AACT;AACA,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA,SAAS;AACT;AACA,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAwBV;;AAED;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA,kCAAkC,0DAAY;AAC9C;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS,UAAU,8BAA8B;AAC7D;AACA;AACA;AACA,KAAK,OAAO,wDAAU;AACtB;AACA;AACA,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,sBAAsB,OAAO,oDAAM,EAAE;AACrC,gBAAgB,OAAO,0DAAY,qBAAqB;AACxD;AACA,WAAW,EAUV;;AAED;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA,4BAA4B,0DAAY;AACxC,8BAA8B,0DAAY;AAC1C;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,yBAAyB,EAAE;AAC3B,qDAAqD,EAAE;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,0FAA0F;AAC1F;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS,UAAU,4BAA4B;AAC3D;AACA;AACA;AACA,KAAK,OAAO,wDAAU;AACtB;AACA;AACA,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,gBAAgB,OAAO,oDAAM,EAAE;AAC/B,kBAAkB,OAAO,oDAAM,EAAE;AACjC,cAAc,OAAO,0DAAY,+BAA+B;AAChE,kBAAkB,OAAO,0DAAY,mCAAmC;AACxE,mBAAmB,OAAO,0DAAY,oCAAoC;AAC1E;AACA,WAAW,EAYV;;AAED;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA,KAAK,OAAO,sDAAQ;AACpB,0BAA0B,4DAAY;AACtC;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA,cAAc,wGAAwG;AACtH;;AAEA;AACA;AACA,cAAc,wGAAwG;AACtH;;AAE4G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","file":"views-sias-v2-sias-v2-module-es2015.js","sourcesContent":["import { Address4 } from './lib/ipv4';\nimport { Address6 } from './lib/ipv6';\nimport { AddressError } from './lib/address-error';\nexport { Address4 };\nexport { Address6 };\nexport { AddressError };\nimport * as helpers from './lib/v6/helpers';\nexport const v6 = { helpers };\n//# sourceMappingURL=ip-address.js.map","export class AddressError extends Error {\n    constructor(message, parseMessage) {\n        super(message);\n        this.name = 'AddressError';\n        if (parseMessage !== null) {\n            this.parseMessage = parseMessage;\n        }\n    }\n}\n//# sourceMappingURL=address-error.js.map","export function isInSubnet(address) {\n    if (this.subnetMask < address.subnetMask) {\n        return false;\n    }\n    if (this.mask(address.subnetMask) === address.mask()) {\n        return true;\n    }\n    return false;\n}\nexport function isCorrect(defaultBits) {\n    return function () {\n        if (this.addressMinusSuffix !== this.correctForm()) {\n            return false;\n        }\n        if (this.subnetMask === defaultBits && !this.parsedSubnet) {\n            return true;\n        }\n        return this.parsedSubnet === String(this.subnetMask);\n    };\n}\n//# sourceMappingURL=common.js.map","/* eslint-disable no-param-reassign */\nimport * as common from './common';\nimport * as constants from './v4/constants';\nimport { AddressError } from './address-error';\nimport { BigInteger } from 'jsbn';\nimport { sprintf } from 'sprintf-js';\n/**\n * Represents an IPv4 address\n * @class Address4\n * @param {string} address - An IPv4 address string\n */\nexport class Address4 {\n    constructor(address) {\n        this.groups = constants.GROUPS;\n        this.parsedAddress = [];\n        this.parsedSubnet = '';\n        this.subnet = '/32';\n        this.subnetMask = 32;\n        this.v4 = true;\n        /**\n         * Returns true if the address is correct, false otherwise\n         * @memberof Address4\n         * @instance\n         * @returns {Boolean}\n         */\n        this.isCorrect = common.isCorrect(constants.BITS);\n        /**\n         * Returns true if the given address is in the subnet of the current address\n         * @memberof Address4\n         * @instance\n         * @returns {boolean}\n         */\n        this.isInSubnet = common.isInSubnet;\n        this.address = address;\n        const subnet = constants.RE_SUBNET_STRING.exec(address);\n        if (subnet) {\n            this.parsedSubnet = subnet[0].replace('/', '');\n            this.subnetMask = parseInt(this.parsedSubnet, 10);\n            this.subnet = `/${this.subnetMask}`;\n            if (this.subnetMask < 0 || this.subnetMask > constants.BITS) {\n                throw new AddressError('Invalid subnet mask.');\n            }\n            address = address.replace(constants.RE_SUBNET_STRING, '');\n        }\n        this.addressMinusSuffix = address;\n        this.parsedAddress = this.parse(address);\n    }\n    static isValid(address) {\n        try {\n            // eslint-disable-next-line no-new\n            new Address4(address);\n            return true;\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    /*\n     * Parses a v4 address\n     */\n    parse(address) {\n        const groups = address.split('.');\n        if (!address.match(constants.RE_ADDRESS)) {\n            throw new AddressError('Invalid IPv4 address.');\n        }\n        return groups;\n    }\n    /**\n     * Returns the correct form of an address\n     * @memberof Address4\n     * @instance\n     * @returns {String}\n     */\n    correctForm() {\n        return this.parsedAddress.map((part) => parseInt(part, 10)).join('.');\n    }\n    /**\n     * Converts a hex string to an IPv4 address object\n     * @memberof Address4\n     * @static\n     * @param {string} hex - a hex string to convert\n     * @returns {Address4}\n     */\n    static fromHex(hex) {\n        const padded = hex.replace(/:/g, '').padStart(8, '0');\n        const groups = [];\n        let i;\n        for (i = 0; i < 8; i += 2) {\n            const h = padded.slice(i, i + 2);\n            groups.push(parseInt(h, 16));\n        }\n        return new Address4(groups.join('.'));\n    }\n    /**\n     * Converts an integer into a IPv4 address object\n     * @memberof Address4\n     * @static\n     * @param {integer} integer - a number to convert\n     * @returns {Address4}\n     */\n    static fromInteger(integer) {\n        return Address4.fromHex(integer.toString(16));\n    }\n    /**\n     * Return an address from in-addr.arpa form\n     * @memberof Address4\n     * @static\n     * @param {string} arpaFormAddress - an 'in-addr.arpa' form ipv4 address\n     * @returns {Adress4}\n     * @example\n     * var address = Address4.fromArpa(42.2.0.192.in-addr.arpa.)\n     * address.correctForm(); // '192.0.2.42'\n     */\n    static fromArpa(arpaFormAddress) {\n        // remove ending \".in-addr.arpa.\" or just \".\"\n        const leader = arpaFormAddress.replace(/(\\.in-addr\\.arpa)?\\.$/, '');\n        const address = leader.split('.').reverse().join('.');\n        return new Address4(address);\n    }\n    /**\n     * Converts an IPv4 address object to a hex string\n     * @memberof Address4\n     * @instance\n     * @returns {String}\n     */\n    toHex() {\n        return this.parsedAddress.map((part) => sprintf('%02x', parseInt(part, 10))).join(':');\n    }\n    /**\n     * Converts an IPv4 address object to an array of bytes\n     * @memberof Address4\n     * @instance\n     * @returns {Array}\n     */\n    toArray() {\n        return this.parsedAddress.map((part) => parseInt(part, 10));\n    }\n    /**\n     * Converts an IPv4 address object to an IPv6 address group\n     * @memberof Address4\n     * @instance\n     * @returns {String}\n     */\n    toGroup6() {\n        const output = [];\n        let i;\n        for (i = 0; i < constants.GROUPS; i += 2) {\n            const hex = sprintf('%02x%02x', parseInt(this.parsedAddress[i], 10), parseInt(this.parsedAddress[i + 1], 10));\n            output.push(sprintf('%x', parseInt(hex, 16)));\n        }\n        return output.join(':');\n    }\n    /**\n     * Returns the address as a BigInteger\n     * @memberof Address4\n     * @instance\n     * @returns {BigInteger}\n     */\n    bigInteger() {\n        return new BigInteger(this.parsedAddress.map((n) => sprintf('%02x', parseInt(n, 10))).join(''), 16);\n    }\n    /**\n     * Helper function getting start address.\n     * @memberof Address4\n     * @instance\n     * @returns {BigInteger}\n     */\n    _startAddress() {\n        return new BigInteger(this.mask() + '0'.repeat(constants.BITS - this.subnetMask), 2);\n    }\n    /**\n     * The first address in the range given by this address' subnet.\n     * Often referred to as the Network Address.\n     * @memberof Address4\n     * @instance\n     * @returns {Address4}\n     */\n    startAddress() {\n        return Address4.fromBigInteger(this._startAddress());\n    }\n    /**\n     * The first host address in the range given by this address's subnet ie\n     * the first address after the Network Address\n     * @memberof Address4\n     * @instance\n     * @returns {Address4}\n     */\n    startAddressExclusive() {\n        const adjust = new BigInteger('1');\n        return Address4.fromBigInteger(this._startAddress().add(adjust));\n    }\n    /**\n     * Helper function getting end address.\n     * @memberof Address4\n     * @instance\n     * @returns {BigInteger}\n     */\n    _endAddress() {\n        return new BigInteger(this.mask() + '1'.repeat(constants.BITS - this.subnetMask), 2);\n    }\n    /**\n     * The last address in the range given by this address' subnet\n     * Often referred to as the Broadcast\n     * @memberof Address4\n     * @instance\n     * @returns {Address4}\n     */\n    endAddress() {\n        return Address4.fromBigInteger(this._endAddress());\n    }\n    /**\n     * The last host address in the range given by this address's subnet ie\n     * the last address prior to the Broadcast Address\n     * @memberof Address4\n     * @instance\n     * @returns {Address4}\n     */\n    endAddressExclusive() {\n        const adjust = new BigInteger('1');\n        return Address4.fromBigInteger(this._endAddress().subtract(adjust));\n    }\n    /**\n     * Converts a BigInteger to a v4 address object\n     * @memberof Address4\n     * @static\n     * @param {BigInteger} bigInteger - a BigInteger to convert\n     * @returns {Address4}\n     */\n    static fromBigInteger(bigInteger) {\n        return Address4.fromInteger(parseInt(bigInteger.toString(), 10));\n    }\n    /**\n     * Returns the first n bits of the address, defaulting to the\n     * subnet mask\n     * @memberof Address4\n     * @instance\n     * @returns {String}\n     */\n    mask(mask) {\n        if (mask === undefined) {\n            mask = this.subnetMask;\n        }\n        return this.getBitsBase2(0, mask);\n    }\n    /**\n     * Returns the bits in the given range as a base-2 string\n     * @memberof Address4\n     * @instance\n     * @returns {string}\n     */\n    getBitsBase2(start, end) {\n        return this.binaryZeroPad().slice(start, end);\n    }\n    /**\n     * Return the reversed ip6.arpa form of the address\n     * @memberof Address4\n     * @param {Object} options\n     * @param {boolean} options.omitSuffix - omit the \"in-addr.arpa\" suffix\n     * @instance\n     * @returns {String}\n     */\n    reverseForm(options) {\n        if (!options) {\n            options = {};\n        }\n        const reversed = this.correctForm().split('.').reverse().join('.');\n        if (options.omitSuffix) {\n            return reversed;\n        }\n        return sprintf('%s.in-addr.arpa.', reversed);\n    }\n    /**\n     * Returns true if the given address is a multicast address\n     * @memberof Address4\n     * @instance\n     * @returns {boolean}\n     */\n    isMulticast() {\n        return this.isInSubnet(new Address4('224.0.0.0/4'));\n    }\n    /**\n     * Returns a zero-padded base-2 string representation of the address\n     * @memberof Address4\n     * @instance\n     * @returns {string}\n     */\n    binaryZeroPad() {\n        return this.bigInteger().toString(2).padStart(constants.BITS, '0');\n    }\n    /**\n     * Groups an IPv4 address for inclusion at the end of an IPv6 address\n     * @returns {String}\n     */\n    groupForV6() {\n        const segments = this.parsedAddress;\n        return this.address.replace(constants.RE_ADDRESS, sprintf('<span class=\"hover-group group-v4 group-6\">%s</span>.<span class=\"hover-group group-v4 group-7\">%s</span>', segments.slice(0, 2).join('.'), segments.slice(2, 4).join('.')));\n    }\n}\n//# sourceMappingURL=ipv4.js.map","/* eslint-disable prefer-destructuring */\n/* eslint-disable no-param-reassign */\nimport * as common from './common';\nimport * as constants4 from './v4/constants';\nimport * as constants6 from './v6/constants';\nimport * as helpers from './v6/helpers';\nimport { Address4 } from './ipv4';\nimport { ADDRESS_BOUNDARY, possibleElisions, simpleRegularExpression, } from './v6/regular-expressions';\nimport { AddressError } from './address-error';\nimport { BigInteger } from 'jsbn';\nimport { sprintf } from 'sprintf-js';\nfunction assert(condition) {\n    if (!condition) {\n        throw new Error('Assertion failed.');\n    }\n}\nfunction addCommas(number) {\n    const r = /(\\d+)(\\d{3})/;\n    while (r.test(number)) {\n        number = number.replace(r, '$1,$2');\n    }\n    return number;\n}\nfunction spanLeadingZeroes4(n) {\n    n = n.replace(/^(0{1,})([1-9]+)$/, '<span class=\"parse-error\">$1</span>$2');\n    n = n.replace(/^(0{1,})(0)$/, '<span class=\"parse-error\">$1</span>$2');\n    return n;\n}\n/*\n * A helper function to compact an array\n */\nfunction compact(address, slice) {\n    const s1 = [];\n    const s2 = [];\n    let i;\n    for (i = 0; i < address.length; i++) {\n        if (i < slice[0]) {\n            s1.push(address[i]);\n        }\n        else if (i > slice[1]) {\n            s2.push(address[i]);\n        }\n    }\n    return s1.concat(['compact']).concat(s2);\n}\nfunction paddedHex(octet) {\n    return sprintf('%04x', parseInt(octet, 16));\n}\nfunction unsignByte(b) {\n    // eslint-disable-next-line no-bitwise\n    return b & 0xff;\n}\n/**\n * Represents an IPv6 address\n * @class Address6\n * @param {string} address - An IPv6 address string\n * @param {number} [groups=8] - How many octets to parse\n * @example\n * var address = new Address6('2001::/32');\n */\nexport class Address6 {\n    constructor(address, optionalGroups) {\n        this.addressMinusSuffix = '';\n        this.parsedSubnet = '';\n        this.subnet = '/128';\n        this.subnetMask = 128;\n        this.v4 = false;\n        this.zone = '';\n        // #region Attributes\n        /**\n         * Returns true if the given address is in the subnet of the current address\n         * @memberof Address6\n         * @instance\n         * @returns {boolean}\n         */\n        this.isInSubnet = common.isInSubnet;\n        /**\n         * Returns true if the address is correct, false otherwise\n         * @memberof Address6\n         * @instance\n         * @returns {boolean}\n         */\n        this.isCorrect = common.isCorrect(constants6.BITS);\n        if (optionalGroups === undefined) {\n            this.groups = constants6.GROUPS;\n        }\n        else {\n            this.groups = optionalGroups;\n        }\n        this.address = address;\n        const subnet = constants6.RE_SUBNET_STRING.exec(address);\n        if (subnet) {\n            this.parsedSubnet = subnet[0].replace('/', '');\n            this.subnetMask = parseInt(this.parsedSubnet, 10);\n            this.subnet = `/${this.subnetMask}`;\n            if (Number.isNaN(this.subnetMask) ||\n                this.subnetMask < 0 ||\n                this.subnetMask > constants6.BITS) {\n                throw new AddressError('Invalid subnet mask.');\n            }\n            address = address.replace(constants6.RE_SUBNET_STRING, '');\n        }\n        else if (/\\//.test(address)) {\n            throw new AddressError('Invalid subnet mask.');\n        }\n        const zone = constants6.RE_ZONE_STRING.exec(address);\n        if (zone) {\n            this.zone = zone[0];\n            address = address.replace(constants6.RE_ZONE_STRING, '');\n        }\n        this.addressMinusSuffix = address;\n        this.parsedAddress = this.parse(this.addressMinusSuffix);\n    }\n    static isValid(address) {\n        try {\n            // eslint-disable-next-line no-new\n            new Address6(address);\n            return true;\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    /**\n     * Convert a BigInteger to a v6 address object\n     * @memberof Address6\n     * @static\n     * @param {BigInteger} bigInteger - a BigInteger to convert\n     * @returns {Address6}\n     * @example\n     * var bigInteger = new BigInteger('1000000000000');\n     * var address = Address6.fromBigInteger(bigInteger);\n     * address.correctForm(); // '::e8:d4a5:1000'\n     */\n    static fromBigInteger(bigInteger) {\n        const hex = bigInteger.toString(16).padStart(32, '0');\n        const groups = [];\n        let i;\n        for (i = 0; i < constants6.GROUPS; i++) {\n            groups.push(hex.slice(i * 4, (i + 1) * 4));\n        }\n        return new Address6(groups.join(':'));\n    }\n    /**\n     * Convert a URL (with optional port number) to an address object\n     * @memberof Address6\n     * @static\n     * @param {string} url - a URL with optional port number\n     * @example\n     * var addressAndPort = Address6.fromURL('http://[ffff::]:8080/foo/');\n     * addressAndPort.address.correctForm(); // 'ffff::'\n     * addressAndPort.port; // 8080\n     */\n    static fromURL(url) {\n        let host;\n        let port = null;\n        let result;\n        // If we have brackets parse them and find a port\n        if (url.indexOf('[') !== -1 && url.indexOf(']:') !== -1) {\n            result = constants6.RE_URL_WITH_PORT.exec(url);\n            if (result === null) {\n                return {\n                    error: 'failed to parse address with port',\n                    address: null,\n                    port: null,\n                };\n            }\n            host = result[1];\n            port = result[2];\n            // If there's a URL extract the address\n        }\n        else if (url.indexOf('/') !== -1) {\n            // Remove the protocol prefix\n            url = url.replace(/^[a-z0-9]+:\\/\\//, '');\n            // Parse the address\n            result = constants6.RE_URL.exec(url);\n            if (result === null) {\n                return {\n                    error: 'failed to parse address from URL',\n                    address: null,\n                    port: null,\n                };\n            }\n            host = result[1];\n            // Otherwise just assign the URL to the host and let the library parse it\n        }\n        else {\n            host = url;\n        }\n        // If there's a port convert it to an integer\n        if (port) {\n            port = parseInt(port, 10);\n            // squelch out of range ports\n            if (port < 0 || port > 65536) {\n                port = null;\n            }\n        }\n        else {\n            // Standardize `undefined` to `null`\n            port = null;\n        }\n        return {\n            address: new Address6(host),\n            port,\n        };\n    }\n    /**\n     * Create an IPv6-mapped address given an IPv4 address\n     * @memberof Address6\n     * @static\n     * @param {string} address - An IPv4 address string\n     * @returns {Address6}\n     * @example\n     * var address = Address6.fromAddress4('192.168.0.1');\n     * address.correctForm(); // '::ffff:c0a8:1'\n     * address.to4in6(); // '::ffff:192.168.0.1'\n     */\n    static fromAddress4(address) {\n        const address4 = new Address4(address);\n        const mask6 = constants6.BITS - (constants4.BITS - address4.subnetMask);\n        return new Address6(`::ffff:${address4.correctForm()}/${mask6}`);\n    }\n    /**\n     * Return an address from ip6.arpa form\n     * @memberof Address6\n     * @static\n     * @param {string} arpaFormAddress - an 'ip6.arpa' form address\n     * @returns {Adress6}\n     * @example\n     * var address = Address6.fromArpa(e.f.f.f.3.c.2.6.f.f.f.e.6.6.8.e.1.0.6.7.9.4.e.c.0.0.0.0.1.0.0.2.ip6.arpa.)\n     * address.correctForm(); // '2001:0:ce49:7601:e866:efff:62c3:fffe'\n     */\n    static fromArpa(arpaFormAddress) {\n        // remove ending \".ip6.arpa.\" or just \".\"\n        let address = arpaFormAddress.replace(/(\\.ip6\\.arpa)?\\.$/, '');\n        const semicolonAmount = 7;\n        // correct ip6.arpa form with ending removed will be 63 characters\n        if (address.length !== 63) {\n            throw new AddressError(\"Invalid 'ip6.arpa' form.\");\n        }\n        const parts = address.split('.').reverse();\n        for (let i = semicolonAmount; i > 0; i--) {\n            const insertIndex = i * 4;\n            parts.splice(insertIndex, 0, ':');\n        }\n        address = parts.join('');\n        return new Address6(address);\n    }\n    /**\n     * Return the Microsoft UNC transcription of the address\n     * @memberof Address6\n     * @instance\n     * @returns {String} the Microsoft UNC transcription of the address\n     */\n    microsoftTranscription() {\n        return sprintf('%s.ipv6-literal.net', this.correctForm().replace(/:/g, '-'));\n    }\n    /**\n     * Return the first n bits of the address, defaulting to the subnet mask\n     * @memberof Address6\n     * @instance\n     * @param {number} [mask=subnet] - the number of bits to mask\n     * @returns {String} the first n bits of the address as a string\n     */\n    mask(mask = this.subnetMask) {\n        return this.getBitsBase2(0, mask);\n    }\n    /**\n     * Return the number of possible subnets of a given size in the address\n     * @memberof Address6\n     * @instance\n     * @param {number} [size=128] - the subnet size\n     * @returns {String}\n     */\n    // TODO: probably useful to have a numeric version of this too\n    possibleSubnets(subnetSize = 128) {\n        const availableBits = constants6.BITS - this.subnetMask;\n        const subnetBits = Math.abs(subnetSize - constants6.BITS);\n        const subnetPowers = availableBits - subnetBits;\n        if (subnetPowers < 0) {\n            return '0';\n        }\n        return addCommas(new BigInteger('2', 10).pow(subnetPowers).toString(10));\n    }\n    /**\n     * Helper function getting start address.\n     * @memberof Address6\n     * @instance\n     * @returns {BigInteger}\n     */\n    _startAddress() {\n        return new BigInteger(this.mask() + '0'.repeat(constants6.BITS - this.subnetMask), 2);\n    }\n    /**\n     * The first address in the range given by this address' subnet\n     * Often referred to as the Network Address.\n     * @memberof Address6\n     * @instance\n     * @returns {Address6}\n     */\n    startAddress() {\n        return Address6.fromBigInteger(this._startAddress());\n    }\n    /**\n     * The first host address in the range given by this address's subnet ie\n     * the first address after the Network Address\n     * @memberof Address6\n     * @instance\n     * @returns {Address6}\n     */\n    startAddressExclusive() {\n        const adjust = new BigInteger('1');\n        return Address6.fromBigInteger(this._startAddress().add(adjust));\n    }\n    /**\n     * Helper function getting end address.\n     * @memberof Address6\n     * @instance\n     * @returns {BigInteger}\n     */\n    _endAddress() {\n        return new BigInteger(this.mask() + '1'.repeat(constants6.BITS - this.subnetMask), 2);\n    }\n    /**\n     * The last address in the range given by this address' subnet\n     * Often referred to as the Broadcast\n     * @memberof Address6\n     * @instance\n     * @returns {Address6}\n     */\n    endAddress() {\n        return Address6.fromBigInteger(this._endAddress());\n    }\n    /**\n     * The last host address in the range given by this address's subnet ie\n     * the last address prior to the Broadcast Address\n     * @memberof Address6\n     * @instance\n     * @returns {Address6}\n     */\n    endAddressExclusive() {\n        const adjust = new BigInteger('1');\n        return Address6.fromBigInteger(this._endAddress().subtract(adjust));\n    }\n    /**\n     * Return the scope of the address\n     * @memberof Address6\n     * @instance\n     * @returns {String}\n     */\n    getScope() {\n        let scope = constants6.SCOPES[this.getBits(12, 16).intValue()];\n        if (this.getType() === 'Global unicast' && scope !== 'Link local') {\n            scope = 'Global';\n        }\n        return scope || 'Unknown';\n    }\n    /**\n     * Return the type of the address\n     * @memberof Address6\n     * @instance\n     * @returns {String}\n     */\n    getType() {\n        for (const subnet of Object.keys(constants6.TYPES)) {\n            if (this.isInSubnet(new Address6(subnet))) {\n                return constants6.TYPES[subnet];\n            }\n        }\n        return 'Global unicast';\n    }\n    /**\n     * Return the bits in the given range as a BigInteger\n     * @memberof Address6\n     * @instance\n     * @returns {BigInteger}\n     */\n    getBits(start, end) {\n        return new BigInteger(this.getBitsBase2(start, end), 2);\n    }\n    /**\n     * Return the bits in the given range as a base-2 string\n     * @memberof Address6\n     * @instance\n     * @returns {String}\n     */\n    getBitsBase2(start, end) {\n        return this.binaryZeroPad().slice(start, end);\n    }\n    /**\n     * Return the bits in the given range as a base-16 string\n     * @memberof Address6\n     * @instance\n     * @returns {String}\n     */\n    getBitsBase16(start, end) {\n        const length = end - start;\n        if (length % 4 !== 0) {\n            throw new Error('Length of bits to retrieve must be divisible by four');\n        }\n        return this.getBits(start, end)\n            .toString(16)\n            .padStart(length / 4, '0');\n    }\n    /**\n     * Return the bits that are set past the subnet mask length\n     * @memberof Address6\n     * @instance\n     * @returns {String}\n     */\n    getBitsPastSubnet() {\n        return this.getBitsBase2(this.subnetMask, constants6.BITS);\n    }\n    /**\n     * Return the reversed ip6.arpa form of the address\n     * @memberof Address6\n     * @param {Object} options\n     * @param {boolean} options.omitSuffix - omit the \"ip6.arpa\" suffix\n     * @instance\n     * @returns {String}\n     */\n    reverseForm(options) {\n        if (!options) {\n            options = {};\n        }\n        const characters = Math.floor(this.subnetMask / 4);\n        const reversed = this.canonicalForm()\n            .replace(/:/g, '')\n            .split('')\n            .slice(0, characters)\n            .reverse()\n            .join('.');\n        if (characters > 0) {\n            if (options.omitSuffix) {\n                return reversed;\n            }\n            return sprintf('%s.ip6.arpa.', reversed);\n        }\n        if (options.omitSuffix) {\n            return '';\n        }\n        return 'ip6.arpa.';\n    }\n    /**\n     * Return the correct form of the address\n     * @memberof Address6\n     * @instance\n     * @returns {String}\n     */\n    correctForm() {\n        let i;\n        let groups = [];\n        let zeroCounter = 0;\n        const zeroes = [];\n        for (i = 0; i < this.parsedAddress.length; i++) {\n            const value = parseInt(this.parsedAddress[i], 16);\n            if (value === 0) {\n                zeroCounter++;\n            }\n            if (value !== 0 && zeroCounter > 0) {\n                if (zeroCounter > 1) {\n                    zeroes.push([i - zeroCounter, i - 1]);\n                }\n                zeroCounter = 0;\n            }\n        }\n        // Do we end with a string of zeroes?\n        if (zeroCounter > 1) {\n            zeroes.push([this.parsedAddress.length - zeroCounter, this.parsedAddress.length - 1]);\n        }\n        const zeroLengths = zeroes.map((n) => n[1] - n[0] + 1);\n        if (zeroes.length > 0) {\n            const index = zeroLengths.indexOf(Math.max(...zeroLengths));\n            groups = compact(this.parsedAddress, zeroes[index]);\n        }\n        else {\n            groups = this.parsedAddress;\n        }\n        for (i = 0; i < groups.length; i++) {\n            if (groups[i] !== 'compact') {\n                groups[i] = parseInt(groups[i], 16).toString(16);\n            }\n        }\n        let correct = groups.join(':');\n        correct = correct.replace(/^compact$/, '::');\n        correct = correct.replace(/^compact|compact$/, ':');\n        correct = correct.replace(/compact/, '');\n        return correct;\n    }\n    /**\n     * Return a zero-padded base-2 string representation of the address\n     * @memberof Address6\n     * @instance\n     * @returns {String}\n     * @example\n     * var address = new Address6('2001:4860:4001:803::1011');\n     * address.binaryZeroPad();\n     * // '0010000000000001010010000110000001000000000000010000100000000011\n     * //  0000000000000000000000000000000000000000000000000001000000010001'\n     */\n    binaryZeroPad() {\n        return this.bigInteger().toString(2).padStart(constants6.BITS, '0');\n    }\n    // TODO: Improve the semantics of this helper function\n    parse4in6(address) {\n        const groups = address.split(':');\n        const lastGroup = groups.slice(-1)[0];\n        const address4 = lastGroup.match(constants4.RE_ADDRESS);\n        if (address4) {\n            this.parsedAddress4 = address4[0];\n            this.address4 = new Address4(this.parsedAddress4);\n            for (let i = 0; i < this.address4.groups; i++) {\n                if (/^0[0-9]+/.test(this.address4.parsedAddress[i])) {\n                    throw new AddressError(\"IPv4 addresses can't have leading zeroes.\", address.replace(constants4.RE_ADDRESS, this.address4.parsedAddress.map(spanLeadingZeroes4).join('.')));\n                }\n            }\n            this.v4 = true;\n            groups[groups.length - 1] = this.address4.toGroup6();\n            address = groups.join(':');\n        }\n        return address;\n    }\n    // TODO: Make private?\n    parse(address) {\n        address = this.parse4in6(address);\n        const badCharacters = address.match(constants6.RE_BAD_CHARACTERS);\n        if (badCharacters) {\n            throw new AddressError(sprintf('Bad character%s detected in address: %s', badCharacters.length > 1 ? 's' : '', badCharacters.join('')), address.replace(constants6.RE_BAD_CHARACTERS, '<span class=\"parse-error\">$1</span>'));\n        }\n        const badAddress = address.match(constants6.RE_BAD_ADDRESS);\n        if (badAddress) {\n            throw new AddressError(sprintf('Address failed regex: %s', badAddress.join('')), address.replace(constants6.RE_BAD_ADDRESS, '<span class=\"parse-error\">$1</span>'));\n        }\n        let groups = [];\n        const halves = address.split('::');\n        if (halves.length === 2) {\n            let first = halves[0].split(':');\n            let last = halves[1].split(':');\n            if (first.length === 1 && first[0] === '') {\n                first = [];\n            }\n            if (last.length === 1 && last[0] === '') {\n                last = [];\n            }\n            const remaining = this.groups - (first.length + last.length);\n            if (!remaining) {\n                throw new AddressError('Error parsing groups');\n            }\n            this.elidedGroups = remaining;\n            this.elisionBegin = first.length;\n            this.elisionEnd = first.length + this.elidedGroups;\n            groups = groups.concat(first);\n            for (let i = 0; i < remaining; i++) {\n                groups.push('0');\n            }\n            groups = groups.concat(last);\n        }\n        else if (halves.length === 1) {\n            groups = address.split(':');\n            this.elidedGroups = 0;\n        }\n        else {\n            throw new AddressError('Too many :: groups found');\n        }\n        groups = groups.map((group) => sprintf('%x', parseInt(group, 16)));\n        if (groups.length !== this.groups) {\n            throw new AddressError('Incorrect number of groups found');\n        }\n        return groups;\n    }\n    /**\n     * Return the canonical form of the address\n     * @memberof Address6\n     * @instance\n     * @returns {String}\n     */\n    canonicalForm() {\n        return this.parsedAddress.map(paddedHex).join(':');\n    }\n    /**\n     * Return the decimal form of the address\n     * @memberof Address6\n     * @instance\n     * @returns {String}\n     */\n    decimal() {\n        return this.parsedAddress.map((n) => sprintf('%05d', parseInt(n, 16))).join(':');\n    }\n    /**\n     * Return the address as a BigInteger\n     * @memberof Address6\n     * @instance\n     * @returns {BigInteger}\n     */\n    bigInteger() {\n        return new BigInteger(this.parsedAddress.map(paddedHex).join(''), 16);\n    }\n    /**\n     * Return the last two groups of this address as an IPv4 address string\n     * @memberof Address6\n     * @instance\n     * @returns {Address4}\n     * @example\n     * var address = new Address6('2001:4860:4001::1825:bf11');\n     * address.to4().correctForm(); // '24.37.191.17'\n     */\n    to4() {\n        const binary = this.binaryZeroPad().split('');\n        return Address4.fromHex(new BigInteger(binary.slice(96, 128).join(''), 2).toString(16));\n    }\n    /**\n     * Return the v4-in-v6 form of the address\n     * @memberof Address6\n     * @instance\n     * @returns {String}\n     */\n    to4in6() {\n        const address4 = this.to4();\n        const address6 = new Address6(this.parsedAddress.slice(0, 6).join(':'), 6);\n        const correct = address6.correctForm();\n        let infix = '';\n        if (!/:$/.test(correct)) {\n            infix = ':';\n        }\n        return correct + infix + address4.address;\n    }\n    /**\n     * Return an object containing the Teredo properties of the address\n     * @memberof Address6\n     * @instance\n     * @returns {Object}\n     */\n    inspectTeredo() {\n        /*\n        - Bits 0 to 31 are set to the Teredo prefix (normally 2001:0000::/32).\n        - Bits 32 to 63 embed the primary IPv4 address of the Teredo server that\n          is used.\n        - Bits 64 to 79 can be used to define some flags. Currently only the\n          higher order bit is used; it is set to 1 if the Teredo client is\n          located behind a cone NAT, 0 otherwise. For Microsoft's Windows Vista\n          and Windows Server 2008 implementations, more bits are used. In those\n          implementations, the format for these 16 bits is \"CRAAAAUG AAAAAAAA\",\n          where \"C\" remains the \"Cone\" flag. The \"R\" bit is reserved for future\n          use. The \"U\" bit is for the Universal/Local flag (set to 0). The \"G\" bit\n          is Individual/Group flag (set to 0). The A bits are set to a 12-bit\n          randomly generated number chosen by the Teredo client to introduce\n          additional protection for the Teredo node against IPv6-based scanning\n          attacks.\n        - Bits 80 to 95 contains the obfuscated UDP port number. This is the\n          port number that is mapped by the NAT to the Teredo client with all\n          bits inverted.\n        - Bits 96 to 127 contains the obfuscated IPv4 address. This is the\n          public IPv4 address of the NAT with all bits inverted.\n        */\n        const prefix = this.getBitsBase16(0, 32);\n        const udpPort = this.getBits(80, 96).xor(new BigInteger('ffff', 16)).toString();\n        const server4 = Address4.fromHex(this.getBitsBase16(32, 64));\n        const client4 = Address4.fromHex(this.getBits(96, 128).xor(new BigInteger('ffffffff', 16)).toString(16));\n        const flags = this.getBits(64, 80);\n        const flagsBase2 = this.getBitsBase2(64, 80);\n        const coneNat = flags.testBit(15);\n        const reserved = flags.testBit(14);\n        const groupIndividual = flags.testBit(8);\n        const universalLocal = flags.testBit(9);\n        const nonce = new BigInteger(flagsBase2.slice(2, 6) + flagsBase2.slice(8, 16), 2).toString(10);\n        return {\n            prefix: sprintf('%s:%s', prefix.slice(0, 4), prefix.slice(4, 8)),\n            server4: server4.address,\n            client4: client4.address,\n            flags: flagsBase2,\n            coneNat,\n            microsoft: {\n                reserved,\n                universalLocal,\n                groupIndividual,\n                nonce,\n            },\n            udpPort,\n        };\n    }\n    /**\n     * Return an object containing the 6to4 properties of the address\n     * @memberof Address6\n     * @instance\n     * @returns {Object}\n     */\n    inspect6to4() {\n        /*\n        - Bits 0 to 15 are set to the 6to4 prefix (2002::/16).\n        - Bits 16 to 48 embed the IPv4 address of the 6to4 gateway that is used.\n        */\n        const prefix = this.getBitsBase16(0, 16);\n        const gateway = Address4.fromHex(this.getBitsBase16(16, 48));\n        return {\n            prefix: sprintf('%s', prefix.slice(0, 4)),\n            gateway: gateway.address,\n        };\n    }\n    /**\n     * Return a v6 6to4 address from a v6 v4inv6 address\n     * @memberof Address6\n     * @instance\n     * @returns {Address6}\n     */\n    to6to4() {\n        if (!this.is4()) {\n            return null;\n        }\n        const addr6to4 = [\n            '2002',\n            this.getBitsBase16(96, 112),\n            this.getBitsBase16(112, 128),\n            '',\n            '/16',\n        ].join(':');\n        return new Address6(addr6to4);\n    }\n    /**\n     * Return a byte array\n     * @memberof Address6\n     * @instance\n     * @returns {Array}\n     */\n    toByteArray() {\n        const byteArray = this.bigInteger().toByteArray();\n        // work around issue where `toByteArray` returns a leading 0 element\n        if (byteArray.length === 17 && byteArray[0] === 0) {\n            return byteArray.slice(1);\n        }\n        return byteArray;\n    }\n    /**\n     * Return an unsigned byte array\n     * @memberof Address6\n     * @instance\n     * @returns {Array}\n     */\n    toUnsignedByteArray() {\n        return this.toByteArray().map(unsignByte);\n    }\n    /**\n     * Convert a byte array to an Address6 object\n     * @memberof Address6\n     * @static\n     * @returns {Address6}\n     */\n    static fromByteArray(bytes) {\n        return this.fromUnsignedByteArray(bytes.map(unsignByte));\n    }\n    /**\n     * Convert an unsigned byte array to an Address6 object\n     * @memberof Address6\n     * @static\n     * @returns {Address6}\n     */\n    static fromUnsignedByteArray(bytes) {\n        const BYTE_MAX = new BigInteger('256', 10);\n        let result = new BigInteger('0', 10);\n        let multiplier = new BigInteger('1', 10);\n        for (let i = bytes.length - 1; i >= 0; i--) {\n            result = result.add(multiplier.multiply(new BigInteger(bytes[i].toString(10), 10)));\n            multiplier = multiplier.multiply(BYTE_MAX);\n        }\n        return Address6.fromBigInteger(result);\n    }\n    /**\n     * Returns true if the address is in the canonical form, false otherwise\n     * @memberof Address6\n     * @instance\n     * @returns {boolean}\n     */\n    isCanonical() {\n        return this.addressMinusSuffix === this.canonicalForm();\n    }\n    /**\n     * Returns true if the address is a link local address, false otherwise\n     * @memberof Address6\n     * @instance\n     * @returns {boolean}\n     */\n    isLinkLocal() {\n        // Zeroes are required, i.e. we can't check isInSubnet with 'fe80::/10'\n        if (this.getBitsBase2(0, 64) ===\n            '1111111010000000000000000000000000000000000000000000000000000000') {\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Returns true if the address is a multicast address, false otherwise\n     * @memberof Address6\n     * @instance\n     * @returns {boolean}\n     */\n    isMulticast() {\n        return this.getType() === 'Multicast';\n    }\n    /**\n     * Returns true if the address is a v4-in-v6 address, false otherwise\n     * @memberof Address6\n     * @instance\n     * @returns {boolean}\n     */\n    is4() {\n        return this.v4;\n    }\n    /**\n     * Returns true if the address is a Teredo address, false otherwise\n     * @memberof Address6\n     * @instance\n     * @returns {boolean}\n     */\n    isTeredo() {\n        return this.isInSubnet(new Address6('2001::/32'));\n    }\n    /**\n     * Returns true if the address is a 6to4 address, false otherwise\n     * @memberof Address6\n     * @instance\n     * @returns {boolean}\n     */\n    is6to4() {\n        return this.isInSubnet(new Address6('2002::/16'));\n    }\n    /**\n     * Returns true if the address is a loopback address, false otherwise\n     * @memberof Address6\n     * @instance\n     * @returns {boolean}\n     */\n    isLoopback() {\n        return this.getType() === 'Loopback';\n    }\n    // #endregion\n    // #region HTML\n    /**\n     * @returns {String} the address in link form with a default port of 80\n     */\n    href(optionalPort) {\n        if (optionalPort === undefined) {\n            optionalPort = '';\n        }\n        else {\n            optionalPort = sprintf(':%s', optionalPort);\n        }\n        return sprintf('http://[%s]%s/', this.correctForm(), optionalPort);\n    }\n    /**\n     * @returns {String} a link suitable for conveying the address via a URL hash\n     */\n    link(options) {\n        if (!options) {\n            options = {};\n        }\n        if (options.className === undefined) {\n            options.className = '';\n        }\n        if (options.prefix === undefined) {\n            options.prefix = '/#address=';\n        }\n        if (options.v4 === undefined) {\n            options.v4 = false;\n        }\n        let formFunction = this.correctForm;\n        if (options.v4) {\n            formFunction = this.to4in6;\n        }\n        if (options.className) {\n            return sprintf('<a href=\"%1$s%2$s\" class=\"%3$s\">%2$s</a>', options.prefix, formFunction.call(this), options.className);\n        }\n        return sprintf('<a href=\"%1$s%2$s\">%2$s</a>', options.prefix, formFunction.call(this));\n    }\n    /**\n     * Groups an address\n     * @returns {String}\n     */\n    group() {\n        if (this.elidedGroups === 0) {\n            // The simple case\n            return helpers.simpleGroup(this.address).join(':');\n        }\n        assert(typeof this.elidedGroups === 'number');\n        assert(typeof this.elisionBegin === 'number');\n        // The elided case\n        const output = [];\n        const [left, right] = this.address.split('::');\n        if (left.length) {\n            output.push(...helpers.simpleGroup(left));\n        }\n        else {\n            output.push('');\n        }\n        const classes = ['hover-group'];\n        for (let i = this.elisionBegin; i < this.elisionBegin + this.elidedGroups; i++) {\n            classes.push(sprintf('group-%d', i));\n        }\n        output.push(sprintf('<span class=\"%s\"></span>', classes.join(' ')));\n        if (right.length) {\n            output.push(...helpers.simpleGroup(right, this.elisionEnd));\n        }\n        else {\n            output.push('');\n        }\n        if (this.is4()) {\n            assert(this.address4 instanceof Address4);\n            output.pop();\n            output.push(this.address4.groupForV6());\n        }\n        return output.join(':');\n    }\n    // #endregion\n    // #region Regular expressions\n    /**\n     * Generate a regular expression string that can be used to find or validate\n     * all variations of this address\n     * @memberof Address6\n     * @instance\n     * @param {boolean} substringSearch\n     * @returns {string}\n     */\n    regularExpressionString(substringSearch = false) {\n        let output = [];\n        // TODO: revisit why this is necessary\n        const address6 = new Address6(this.correctForm());\n        if (address6.elidedGroups === 0) {\n            // The simple case\n            output.push(simpleRegularExpression(address6.parsedAddress));\n        }\n        else if (address6.elidedGroups === constants6.GROUPS) {\n            // A completely elided address\n            output.push(possibleElisions(constants6.GROUPS));\n        }\n        else {\n            // A partially elided address\n            const halves = address6.address.split('::');\n            if (halves[0].length) {\n                output.push(simpleRegularExpression(halves[0].split(':')));\n            }\n            assert(typeof address6.elidedGroups === 'number');\n            output.push(possibleElisions(address6.elidedGroups, halves[0].length !== 0, halves[1].length !== 0));\n            if (halves[1].length) {\n                output.push(simpleRegularExpression(halves[1].split(':')));\n            }\n            output = [output.join(':')];\n        }\n        if (!substringSearch) {\n            output = [\n                '(?=^|',\n                ADDRESS_BOUNDARY,\n                '|[^\\\\w\\\\:])(',\n                ...output,\n                ')(?=[^\\\\w\\\\:]|',\n                ADDRESS_BOUNDARY,\n                '|$)',\n            ];\n        }\n        return output.join('');\n    }\n    /**\n     * Generate a regular expression that can be used to find or validate all\n     * variations of this address.\n     * @memberof Address6\n     * @instance\n     * @param {boolean} substringSearch\n     * @returns {RegExp}\n     */\n    regularExpression(substringSearch = false) {\n        return new RegExp(this.regularExpressionString(substringSearch), 'i');\n    }\n}\n//# sourceMappingURL=ipv6.js.map","export const BITS = 32;\nexport const GROUPS = 4;\nexport const RE_ADDRESS = /^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/g;\nexport const RE_SUBNET_STRING = /\\/\\d{1,2}$/;\n//# sourceMappingURL=constants.js.map","export const BITS = 128;\nexport const GROUPS = 8;\n/**\n * Represents IPv6 address scopes\n * @memberof Address6\n * @static\n */\nexport const SCOPES = {\n    0: 'Reserved',\n    1: 'Interface local',\n    2: 'Link local',\n    4: 'Admin local',\n    5: 'Site local',\n    8: 'Organization local',\n    14: 'Global',\n    15: 'Reserved',\n};\n/**\n * Represents IPv6 address types\n * @memberof Address6\n * @static\n */\nexport const TYPES = {\n    'ff01::1/128': 'Multicast (All nodes on this interface)',\n    'ff01::2/128': 'Multicast (All routers on this interface)',\n    'ff02::1/128': 'Multicast (All nodes on this link)',\n    'ff02::2/128': 'Multicast (All routers on this link)',\n    'ff05::2/128': 'Multicast (All routers in this site)',\n    'ff02::5/128': 'Multicast (OSPFv3 AllSPF routers)',\n    'ff02::6/128': 'Multicast (OSPFv3 AllDR routers)',\n    'ff02::9/128': 'Multicast (RIP routers)',\n    'ff02::a/128': 'Multicast (EIGRP routers)',\n    'ff02::d/128': 'Multicast (PIM routers)',\n    'ff02::16/128': 'Multicast (MLDv2 reports)',\n    'ff01::fb/128': 'Multicast (mDNSv6)',\n    'ff02::fb/128': 'Multicast (mDNSv6)',\n    'ff05::fb/128': 'Multicast (mDNSv6)',\n    'ff02::1:2/128': 'Multicast (All DHCP servers and relay agents on this link)',\n    'ff05::1:2/128': 'Multicast (All DHCP servers and relay agents in this site)',\n    'ff02::1:3/128': 'Multicast (All DHCP servers on this link)',\n    'ff05::1:3/128': 'Multicast (All DHCP servers in this site)',\n    '::/128': 'Unspecified',\n    '::1/128': 'Loopback',\n    'ff00::/8': 'Multicast',\n    'fe80::/10': 'Link-local unicast',\n};\n/**\n * A regular expression that matches bad characters in an IPv6 address\n * @memberof Address6\n * @static\n */\nexport const RE_BAD_CHARACTERS = /([^0-9a-f:/%])/gi;\n/**\n * A regular expression that matches an incorrect IPv6 address\n * @memberof Address6\n * @static\n */\nexport const RE_BAD_ADDRESS = /([0-9a-f]{5,}|:{3,}|[^:]:$|^:[^:]|\\/$)/gi;\n/**\n * A regular expression that matches an IPv6 subnet\n * @memberof Address6\n * @static\n */\nexport const RE_SUBNET_STRING = /\\/\\d{1,3}(?=%|$)/;\n/**\n * A regular expression that matches an IPv6 zone\n * @memberof Address6\n * @static\n */\nexport const RE_ZONE_STRING = /%.*$/;\nexport const RE_URL = new RegExp(/^\\[{0,1}([0-9a-f:]+)\\]{0,1}/);\nexport const RE_URL_WITH_PORT = new RegExp(/\\[([0-9a-f:]+)\\]:([0-9]{1,5})/);\n//# sourceMappingURL=constants.js.map","import { sprintf } from 'sprintf-js';\n/**\n * @returns {String} the string with all zeroes contained in a <span>\n */\nexport function spanAllZeroes(s) {\n    return s.replace(/(0+)/g, '<span class=\"zero\">$1</span>');\n}\n/**\n * @returns {String} the string with each character contained in a <span>\n */\nexport function spanAll(s, offset = 0) {\n    const letters = s.split('');\n    return letters\n        .map((n, i) => sprintf('<span class=\"digit value-%s position-%d\">%s</span>', n, i + offset, spanAllZeroes(n)) // XXX Use #base-2 .value-0 instead?\n    )\n        .join('');\n}\nfunction spanLeadingZeroesSimple(group) {\n    return group.replace(/^(0+)/, '<span class=\"zero\">$1</span>');\n}\n/**\n * @returns {String} the string with leading zeroes contained in a <span>\n */\nexport function spanLeadingZeroes(address) {\n    const groups = address.split(':');\n    return groups.map((g) => spanLeadingZeroesSimple(g)).join(':');\n}\n/**\n * Groups an address\n * @returns {String} a grouped address\n */\nexport function simpleGroup(addressString, offset = 0) {\n    const groups = addressString.split(':');\n    return groups.map((g, i) => {\n        if (/group-v4/.test(g)) {\n            return g;\n        }\n        return sprintf('<span class=\"hover-group group-%d\">%s</span>', i + offset, spanLeadingZeroesSimple(g));\n    });\n}\n//# sourceMappingURL=helpers.js.map","import * as v6 from './constants';\nimport { sprintf } from 'sprintf-js';\nexport function groupPossibilities(possibilities) {\n    return sprintf('(%s)', possibilities.join('|'));\n}\nexport function padGroup(group) {\n    if (group.length < 4) {\n        return sprintf('0{0,%d}%s', 4 - group.length, group);\n    }\n    return group;\n}\nexport const ADDRESS_BOUNDARY = '[^A-Fa-f0-9:]';\nexport function simpleRegularExpression(groups) {\n    const zeroIndexes = [];\n    groups.forEach((group, i) => {\n        const groupInteger = parseInt(group, 16);\n        if (groupInteger === 0) {\n            zeroIndexes.push(i);\n        }\n    });\n    // You can technically elide a single 0, this creates the regular expressions\n    // to match that eventuality\n    const possibilities = zeroIndexes.map((zeroIndex) => groups\n        .map((group, i) => {\n        if (i === zeroIndex) {\n            const elision = i === 0 || i === v6.GROUPS - 1 ? ':' : '';\n            return groupPossibilities([padGroup(group), elision]);\n        }\n        return padGroup(group);\n    })\n        .join(':'));\n    // The simplest case\n    possibilities.push(groups.map(padGroup).join(':'));\n    return groupPossibilities(possibilities);\n}\nexport function possibleElisions(elidedGroups, moreLeft, moreRight) {\n    const left = moreLeft ? '' : ':';\n    const right = moreRight ? '' : ':';\n    const possibilities = [];\n    // 1. elision of everything (::)\n    if (!moreLeft && !moreRight) {\n        possibilities.push('::');\n    }\n    // 2. complete elision of the middle\n    if (moreLeft && moreRight) {\n        possibilities.push('');\n    }\n    if ((moreRight && !moreLeft) || (!moreRight && moreLeft)) {\n        // 3. complete elision of one side\n        possibilities.push(':');\n    }\n    // 4. elision from the left side\n    possibilities.push(sprintf('%s(:0{1,4}){1,%d}', left, elidedGroups - 1));\n    // 5. elision from the right side\n    possibilities.push(sprintf('(0{1,4}:){1,%d}%s', elidedGroups - 1, right));\n    // 6. no elision\n    possibilities.push(sprintf('(0{1,4}:){%d}0{1,4}', elidedGroups - 1));\n    // 7. elision (including sloppy elision) from the middle\n    for (let groups = 1; groups < elidedGroups - 1; groups++) {\n        for (let position = 1; position < elidedGroups - groups; position++) {\n            possibilities.push(sprintf('(0{1,4}:){%d}:(0{1,4}:){%d}0{1,4}', position, elidedGroups - position - groups - 1));\n        }\n    }\n    return groupPossibilities(possibilities);\n}\n//# sourceMappingURL=regular-expressions.js.map","(function(){\n\n    // Copyright (c) 2005  Tom Wu\n    // All Rights Reserved.\n    // See \"LICENSE\" for details.\n\n    // Basic JavaScript BN library - subset useful for RSA encryption.\n\n    // Bits per digit\n    var dbits;\n\n    // JavaScript engine analysis\n    var canary = 0xdeadbeefcafe;\n    var j_lm = ((canary&0xffffff)==0xefcafe);\n\n    // (public) Constructor\n    function BigInteger(a,b,c) {\n      if(a != null)\n        if(\"number\" == typeof a) this.fromNumber(a,b,c);\n        else if(b == null && \"string\" != typeof a) this.fromString(a,256);\n        else this.fromString(a,b);\n    }\n\n    // return new, unset BigInteger\n    function nbi() { return new BigInteger(null); }\n\n    // am: Compute w_j += (x*this_i), propagate carries,\n    // c is initial carry, returns final carry.\n    // c < 3*dvalue, x < 2*dvalue, this_i < dvalue\n    // We need to select the fastest one that works in this environment.\n\n    // am1: use a single mult and divide to get the high bits,\n    // max digit bits should be 26 because\n    // max internal value = 2*dvalue^2-2*dvalue (< 2^53)\n    function am1(i,x,w,j,c,n) {\n      while(--n >= 0) {\n        var v = x*this[i++]+w[j]+c;\n        c = Math.floor(v/0x4000000);\n        w[j++] = v&0x3ffffff;\n      }\n      return c;\n    }\n    // am2 avoids a big mult-and-extract completely.\n    // Max digit bits should be <= 30 because we do bitwise ops\n    // on values up to 2*hdvalue^2-hdvalue-1 (< 2^31)\n    function am2(i,x,w,j,c,n) {\n      var xl = x&0x7fff, xh = x>>15;\n      while(--n >= 0) {\n        var l = this[i]&0x7fff;\n        var h = this[i++]>>15;\n        var m = xh*l+h*xl;\n        l = xl*l+((m&0x7fff)<<15)+w[j]+(c&0x3fffffff);\n        c = (l>>>30)+(m>>>15)+xh*h+(c>>>30);\n        w[j++] = l&0x3fffffff;\n      }\n      return c;\n    }\n    // Alternately, set max digit bits to 28 since some\n    // browsers slow down when dealing with 32-bit numbers.\n    function am3(i,x,w,j,c,n) {\n      var xl = x&0x3fff, xh = x>>14;\n      while(--n >= 0) {\n        var l = this[i]&0x3fff;\n        var h = this[i++]>>14;\n        var m = xh*l+h*xl;\n        l = xl*l+((m&0x3fff)<<14)+w[j]+c;\n        c = (l>>28)+(m>>14)+xh*h;\n        w[j++] = l&0xfffffff;\n      }\n      return c;\n    }\n    var inBrowser = typeof navigator !== \"undefined\";\n    if(inBrowser && j_lm && (navigator.appName == \"Microsoft Internet Explorer\")) {\n      BigInteger.prototype.am = am2;\n      dbits = 30;\n    }\n    else if(inBrowser && j_lm && (navigator.appName != \"Netscape\")) {\n      BigInteger.prototype.am = am1;\n      dbits = 26;\n    }\n    else { // Mozilla/Netscape seems to prefer am3\n      BigInteger.prototype.am = am3;\n      dbits = 28;\n    }\n\n    BigInteger.prototype.DB = dbits;\n    BigInteger.prototype.DM = ((1<<dbits)-1);\n    BigInteger.prototype.DV = (1<<dbits);\n\n    var BI_FP = 52;\n    BigInteger.prototype.FV = Math.pow(2,BI_FP);\n    BigInteger.prototype.F1 = BI_FP-dbits;\n    BigInteger.prototype.F2 = 2*dbits-BI_FP;\n\n    // Digit conversions\n    var BI_RM = \"0123456789abcdefghijklmnopqrstuvwxyz\";\n    var BI_RC = new Array();\n    var rr,vv;\n    rr = \"0\".charCodeAt(0);\n    for(vv = 0; vv <= 9; ++vv) BI_RC[rr++] = vv;\n    rr = \"a\".charCodeAt(0);\n    for(vv = 10; vv < 36; ++vv) BI_RC[rr++] = vv;\n    rr = \"A\".charCodeAt(0);\n    for(vv = 10; vv < 36; ++vv) BI_RC[rr++] = vv;\n\n    function int2char(n) { return BI_RM.charAt(n); }\n    function intAt(s,i) {\n      var c = BI_RC[s.charCodeAt(i)];\n      return (c==null)?-1:c;\n    }\n\n    // (protected) copy this to r\n    function bnpCopyTo(r) {\n      for(var i = this.t-1; i >= 0; --i) r[i] = this[i];\n      r.t = this.t;\n      r.s = this.s;\n    }\n\n    // (protected) set from integer value x, -DV <= x < DV\n    function bnpFromInt(x) {\n      this.t = 1;\n      this.s = (x<0)?-1:0;\n      if(x > 0) this[0] = x;\n      else if(x < -1) this[0] = x+this.DV;\n      else this.t = 0;\n    }\n\n    // return bigint initialized to value\n    function nbv(i) { var r = nbi(); r.fromInt(i); return r; }\n\n    // (protected) set from string and radix\n    function bnpFromString(s,b) {\n      var k;\n      if(b == 16) k = 4;\n      else if(b == 8) k = 3;\n      else if(b == 256) k = 8; // byte array\n      else if(b == 2) k = 1;\n      else if(b == 32) k = 5;\n      else if(b == 4) k = 2;\n      else { this.fromRadix(s,b); return; }\n      this.t = 0;\n      this.s = 0;\n      var i = s.length, mi = false, sh = 0;\n      while(--i >= 0) {\n        var x = (k==8)?s[i]&0xff:intAt(s,i);\n        if(x < 0) {\n          if(s.charAt(i) == \"-\") mi = true;\n          continue;\n        }\n        mi = false;\n        if(sh == 0)\n          this[this.t++] = x;\n        else if(sh+k > this.DB) {\n          this[this.t-1] |= (x&((1<<(this.DB-sh))-1))<<sh;\n          this[this.t++] = (x>>(this.DB-sh));\n        }\n        else\n          this[this.t-1] |= x<<sh;\n        sh += k;\n        if(sh >= this.DB) sh -= this.DB;\n      }\n      if(k == 8 && (s[0]&0x80) != 0) {\n        this.s = -1;\n        if(sh > 0) this[this.t-1] |= ((1<<(this.DB-sh))-1)<<sh;\n      }\n      this.clamp();\n      if(mi) BigInteger.ZERO.subTo(this,this);\n    }\n\n    // (protected) clamp off excess high words\n    function bnpClamp() {\n      var c = this.s&this.DM;\n      while(this.t > 0 && this[this.t-1] == c) --this.t;\n    }\n\n    // (public) return string representation in given radix\n    function bnToString(b) {\n      if(this.s < 0) return \"-\"+this.negate().toString(b);\n      var k;\n      if(b == 16) k = 4;\n      else if(b == 8) k = 3;\n      else if(b == 2) k = 1;\n      else if(b == 32) k = 5;\n      else if(b == 4) k = 2;\n      else return this.toRadix(b);\n      var km = (1<<k)-1, d, m = false, r = \"\", i = this.t;\n      var p = this.DB-(i*this.DB)%k;\n      if(i-- > 0) {\n        if(p < this.DB && (d = this[i]>>p) > 0) { m = true; r = int2char(d); }\n        while(i >= 0) {\n          if(p < k) {\n            d = (this[i]&((1<<p)-1))<<(k-p);\n            d |= this[--i]>>(p+=this.DB-k);\n          }\n          else {\n            d = (this[i]>>(p-=k))&km;\n            if(p <= 0) { p += this.DB; --i; }\n          }\n          if(d > 0) m = true;\n          if(m) r += int2char(d);\n        }\n      }\n      return m?r:\"0\";\n    }\n\n    // (public) -this\n    function bnNegate() { var r = nbi(); BigInteger.ZERO.subTo(this,r); return r; }\n\n    // (public) |this|\n    function bnAbs() { return (this.s<0)?this.negate():this; }\n\n    // (public) return + if this > a, - if this < a, 0 if equal\n    function bnCompareTo(a) {\n      var r = this.s-a.s;\n      if(r != 0) return r;\n      var i = this.t;\n      r = i-a.t;\n      if(r != 0) return (this.s<0)?-r:r;\n      while(--i >= 0) if((r=this[i]-a[i]) != 0) return r;\n      return 0;\n    }\n\n    // returns bit length of the integer x\n    function nbits(x) {\n      var r = 1, t;\n      if((t=x>>>16) != 0) { x = t; r += 16; }\n      if((t=x>>8) != 0) { x = t; r += 8; }\n      if((t=x>>4) != 0) { x = t; r += 4; }\n      if((t=x>>2) != 0) { x = t; r += 2; }\n      if((t=x>>1) != 0) { x = t; r += 1; }\n      return r;\n    }\n\n    // (public) return the number of bits in \"this\"\n    function bnBitLength() {\n      if(this.t <= 0) return 0;\n      return this.DB*(this.t-1)+nbits(this[this.t-1]^(this.s&this.DM));\n    }\n\n    // (protected) r = this << n*DB\n    function bnpDLShiftTo(n,r) {\n      var i;\n      for(i = this.t-1; i >= 0; --i) r[i+n] = this[i];\n      for(i = n-1; i >= 0; --i) r[i] = 0;\n      r.t = this.t+n;\n      r.s = this.s;\n    }\n\n    // (protected) r = this >> n*DB\n    function bnpDRShiftTo(n,r) {\n      for(var i = n; i < this.t; ++i) r[i-n] = this[i];\n      r.t = Math.max(this.t-n,0);\n      r.s = this.s;\n    }\n\n    // (protected) r = this << n\n    function bnpLShiftTo(n,r) {\n      var bs = n%this.DB;\n      var cbs = this.DB-bs;\n      var bm = (1<<cbs)-1;\n      var ds = Math.floor(n/this.DB), c = (this.s<<bs)&this.DM, i;\n      for(i = this.t-1; i >= 0; --i) {\n        r[i+ds+1] = (this[i]>>cbs)|c;\n        c = (this[i]&bm)<<bs;\n      }\n      for(i = ds-1; i >= 0; --i) r[i] = 0;\n      r[ds] = c;\n      r.t = this.t+ds+1;\n      r.s = this.s;\n      r.clamp();\n    }\n\n    // (protected) r = this >> n\n    function bnpRShiftTo(n,r) {\n      r.s = this.s;\n      var ds = Math.floor(n/this.DB);\n      if(ds >= this.t) { r.t = 0; return; }\n      var bs = n%this.DB;\n      var cbs = this.DB-bs;\n      var bm = (1<<bs)-1;\n      r[0] = this[ds]>>bs;\n      for(var i = ds+1; i < this.t; ++i) {\n        r[i-ds-1] |= (this[i]&bm)<<cbs;\n        r[i-ds] = this[i]>>bs;\n      }\n      if(bs > 0) r[this.t-ds-1] |= (this.s&bm)<<cbs;\n      r.t = this.t-ds;\n      r.clamp();\n    }\n\n    // (protected) r = this - a\n    function bnpSubTo(a,r) {\n      var i = 0, c = 0, m = Math.min(a.t,this.t);\n      while(i < m) {\n        c += this[i]-a[i];\n        r[i++] = c&this.DM;\n        c >>= this.DB;\n      }\n      if(a.t < this.t) {\n        c -= a.s;\n        while(i < this.t) {\n          c += this[i];\n          r[i++] = c&this.DM;\n          c >>= this.DB;\n        }\n        c += this.s;\n      }\n      else {\n        c += this.s;\n        while(i < a.t) {\n          c -= a[i];\n          r[i++] = c&this.DM;\n          c >>= this.DB;\n        }\n        c -= a.s;\n      }\n      r.s = (c<0)?-1:0;\n      if(c < -1) r[i++] = this.DV+c;\n      else if(c > 0) r[i++] = c;\n      r.t = i;\n      r.clamp();\n    }\n\n    // (protected) r = this * a, r != this,a (HAC 14.12)\n    // \"this\" should be the larger one if appropriate.\n    function bnpMultiplyTo(a,r) {\n      var x = this.abs(), y = a.abs();\n      var i = x.t;\n      r.t = i+y.t;\n      while(--i >= 0) r[i] = 0;\n      for(i = 0; i < y.t; ++i) r[i+x.t] = x.am(0,y[i],r,i,0,x.t);\n      r.s = 0;\n      r.clamp();\n      if(this.s != a.s) BigInteger.ZERO.subTo(r,r);\n    }\n\n    // (protected) r = this^2, r != this (HAC 14.16)\n    function bnpSquareTo(r) {\n      var x = this.abs();\n      var i = r.t = 2*x.t;\n      while(--i >= 0) r[i] = 0;\n      for(i = 0; i < x.t-1; ++i) {\n        var c = x.am(i,x[i],r,2*i,0,1);\n        if((r[i+x.t]+=x.am(i+1,2*x[i],r,2*i+1,c,x.t-i-1)) >= x.DV) {\n          r[i+x.t] -= x.DV;\n          r[i+x.t+1] = 1;\n        }\n      }\n      if(r.t > 0) r[r.t-1] += x.am(i,x[i],r,2*i,0,1);\n      r.s = 0;\n      r.clamp();\n    }\n\n    // (protected) divide this by m, quotient and remainder to q, r (HAC 14.20)\n    // r != q, this != m.  q or r may be null.\n    function bnpDivRemTo(m,q,r) {\n      var pm = m.abs();\n      if(pm.t <= 0) return;\n      var pt = this.abs();\n      if(pt.t < pm.t) {\n        if(q != null) q.fromInt(0);\n        if(r != null) this.copyTo(r);\n        return;\n      }\n      if(r == null) r = nbi();\n      var y = nbi(), ts = this.s, ms = m.s;\n      var nsh = this.DB-nbits(pm[pm.t-1]);   // normalize modulus\n      if(nsh > 0) { pm.lShiftTo(nsh,y); pt.lShiftTo(nsh,r); }\n      else { pm.copyTo(y); pt.copyTo(r); }\n      var ys = y.t;\n      var y0 = y[ys-1];\n      if(y0 == 0) return;\n      var yt = y0*(1<<this.F1)+((ys>1)?y[ys-2]>>this.F2:0);\n      var d1 = this.FV/yt, d2 = (1<<this.F1)/yt, e = 1<<this.F2;\n      var i = r.t, j = i-ys, t = (q==null)?nbi():q;\n      y.dlShiftTo(j,t);\n      if(r.compareTo(t) >= 0) {\n        r[r.t++] = 1;\n        r.subTo(t,r);\n      }\n      BigInteger.ONE.dlShiftTo(ys,t);\n      t.subTo(y,y);  // \"negative\" y so we can replace sub with am later\n      while(y.t < ys) y[y.t++] = 0;\n      while(--j >= 0) {\n        // Estimate quotient digit\n        var qd = (r[--i]==y0)?this.DM:Math.floor(r[i]*d1+(r[i-1]+e)*d2);\n        if((r[i]+=y.am(0,qd,r,j,0,ys)) < qd) {   // Try it out\n          y.dlShiftTo(j,t);\n          r.subTo(t,r);\n          while(r[i] < --qd) r.subTo(t,r);\n        }\n      }\n      if(q != null) {\n        r.drShiftTo(ys,q);\n        if(ts != ms) BigInteger.ZERO.subTo(q,q);\n      }\n      r.t = ys;\n      r.clamp();\n      if(nsh > 0) r.rShiftTo(nsh,r); // Denormalize remainder\n      if(ts < 0) BigInteger.ZERO.subTo(r,r);\n    }\n\n    // (public) this mod a\n    function bnMod(a) {\n      var r = nbi();\n      this.abs().divRemTo(a,null,r);\n      if(this.s < 0 && r.compareTo(BigInteger.ZERO) > 0) a.subTo(r,r);\n      return r;\n    }\n\n    // Modular reduction using \"classic\" algorithm\n    function Classic(m) { this.m = m; }\n    function cConvert(x) {\n      if(x.s < 0 || x.compareTo(this.m) >= 0) return x.mod(this.m);\n      else return x;\n    }\n    function cRevert(x) { return x; }\n    function cReduce(x) { x.divRemTo(this.m,null,x); }\n    function cMulTo(x,y,r) { x.multiplyTo(y,r); this.reduce(r); }\n    function cSqrTo(x,r) { x.squareTo(r); this.reduce(r); }\n\n    Classic.prototype.convert = cConvert;\n    Classic.prototype.revert = cRevert;\n    Classic.prototype.reduce = cReduce;\n    Classic.prototype.mulTo = cMulTo;\n    Classic.prototype.sqrTo = cSqrTo;\n\n    // (protected) return \"-1/this % 2^DB\"; useful for Mont. reduction\n    // justification:\n    //         xy == 1 (mod m)\n    //         xy =  1+km\n    //   xy(2-xy) = (1+km)(1-km)\n    // x[y(2-xy)] = 1-k^2m^2\n    // x[y(2-xy)] == 1 (mod m^2)\n    // if y is 1/x mod m, then y(2-xy) is 1/x mod m^2\n    // should reduce x and y(2-xy) by m^2 at each step to keep size bounded.\n    // JS multiply \"overflows\" differently from C/C++, so care is needed here.\n    function bnpInvDigit() {\n      if(this.t < 1) return 0;\n      var x = this[0];\n      if((x&1) == 0) return 0;\n      var y = x&3;       // y == 1/x mod 2^2\n      y = (y*(2-(x&0xf)*y))&0xf; // y == 1/x mod 2^4\n      y = (y*(2-(x&0xff)*y))&0xff;   // y == 1/x mod 2^8\n      y = (y*(2-(((x&0xffff)*y)&0xffff)))&0xffff;    // y == 1/x mod 2^16\n      // last step - calculate inverse mod DV directly;\n      // assumes 16 < DB <= 32 and assumes ability to handle 48-bit ints\n      y = (y*(2-x*y%this.DV))%this.DV;       // y == 1/x mod 2^dbits\n      // we really want the negative inverse, and -DV < y < DV\n      return (y>0)?this.DV-y:-y;\n    }\n\n    // Montgomery reduction\n    function Montgomery(m) {\n      this.m = m;\n      this.mp = m.invDigit();\n      this.mpl = this.mp&0x7fff;\n      this.mph = this.mp>>15;\n      this.um = (1<<(m.DB-15))-1;\n      this.mt2 = 2*m.t;\n    }\n\n    // xR mod m\n    function montConvert(x) {\n      var r = nbi();\n      x.abs().dlShiftTo(this.m.t,r);\n      r.divRemTo(this.m,null,r);\n      if(x.s < 0 && r.compareTo(BigInteger.ZERO) > 0) this.m.subTo(r,r);\n      return r;\n    }\n\n    // x/R mod m\n    function montRevert(x) {\n      var r = nbi();\n      x.copyTo(r);\n      this.reduce(r);\n      return r;\n    }\n\n    // x = x/R mod m (HAC 14.32)\n    function montReduce(x) {\n      while(x.t <= this.mt2) // pad x so am has enough room later\n        x[x.t++] = 0;\n      for(var i = 0; i < this.m.t; ++i) {\n        // faster way of calculating u0 = x[i]*mp mod DV\n        var j = x[i]&0x7fff;\n        var u0 = (j*this.mpl+(((j*this.mph+(x[i]>>15)*this.mpl)&this.um)<<15))&x.DM;\n        // use am to combine the multiply-shift-add into one call\n        j = i+this.m.t;\n        x[j] += this.m.am(0,u0,x,i,0,this.m.t);\n        // propagate carry\n        while(x[j] >= x.DV) { x[j] -= x.DV; x[++j]++; }\n      }\n      x.clamp();\n      x.drShiftTo(this.m.t,x);\n      if(x.compareTo(this.m) >= 0) x.subTo(this.m,x);\n    }\n\n    // r = \"x^2/R mod m\"; x != r\n    function montSqrTo(x,r) { x.squareTo(r); this.reduce(r); }\n\n    // r = \"xy/R mod m\"; x,y != r\n    function montMulTo(x,y,r) { x.multiplyTo(y,r); this.reduce(r); }\n\n    Montgomery.prototype.convert = montConvert;\n    Montgomery.prototype.revert = montRevert;\n    Montgomery.prototype.reduce = montReduce;\n    Montgomery.prototype.mulTo = montMulTo;\n    Montgomery.prototype.sqrTo = montSqrTo;\n\n    // (protected) true iff this is even\n    function bnpIsEven() { return ((this.t>0)?(this[0]&1):this.s) == 0; }\n\n    // (protected) this^e, e < 2^32, doing sqr and mul with \"r\" (HAC 14.79)\n    function bnpExp(e,z) {\n      if(e > 0xffffffff || e < 1) return BigInteger.ONE;\n      var r = nbi(), r2 = nbi(), g = z.convert(this), i = nbits(e)-1;\n      g.copyTo(r);\n      while(--i >= 0) {\n        z.sqrTo(r,r2);\n        if((e&(1<<i)) > 0) z.mulTo(r2,g,r);\n        else { var t = r; r = r2; r2 = t; }\n      }\n      return z.revert(r);\n    }\n\n    // (public) this^e % m, 0 <= e < 2^32\n    function bnModPowInt(e,m) {\n      var z;\n      if(e < 256 || m.isEven()) z = new Classic(m); else z = new Montgomery(m);\n      return this.exp(e,z);\n    }\n\n    // protected\n    BigInteger.prototype.copyTo = bnpCopyTo;\n    BigInteger.prototype.fromInt = bnpFromInt;\n    BigInteger.prototype.fromString = bnpFromString;\n    BigInteger.prototype.clamp = bnpClamp;\n    BigInteger.prototype.dlShiftTo = bnpDLShiftTo;\n    BigInteger.prototype.drShiftTo = bnpDRShiftTo;\n    BigInteger.prototype.lShiftTo = bnpLShiftTo;\n    BigInteger.prototype.rShiftTo = bnpRShiftTo;\n    BigInteger.prototype.subTo = bnpSubTo;\n    BigInteger.prototype.multiplyTo = bnpMultiplyTo;\n    BigInteger.prototype.squareTo = bnpSquareTo;\n    BigInteger.prototype.divRemTo = bnpDivRemTo;\n    BigInteger.prototype.invDigit = bnpInvDigit;\n    BigInteger.prototype.isEven = bnpIsEven;\n    BigInteger.prototype.exp = bnpExp;\n\n    // public\n    BigInteger.prototype.toString = bnToString;\n    BigInteger.prototype.negate = bnNegate;\n    BigInteger.prototype.abs = bnAbs;\n    BigInteger.prototype.compareTo = bnCompareTo;\n    BigInteger.prototype.bitLength = bnBitLength;\n    BigInteger.prototype.mod = bnMod;\n    BigInteger.prototype.modPowInt = bnModPowInt;\n\n    // \"constants\"\n    BigInteger.ZERO = nbv(0);\n    BigInteger.ONE = nbv(1);\n\n    // Copyright (c) 2005-2009  Tom Wu\n    // All Rights Reserved.\n    // See \"LICENSE\" for details.\n\n    // Extended JavaScript BN functions, required for RSA private ops.\n\n    // Version 1.1: new BigInteger(\"0\", 10) returns \"proper\" zero\n    // Version 1.2: square() API, isProbablePrime fix\n\n    // (public)\n    function bnClone() { var r = nbi(); this.copyTo(r); return r; }\n\n    // (public) return value as integer\n    function bnIntValue() {\n      if(this.s < 0) {\n        if(this.t == 1) return this[0]-this.DV;\n        else if(this.t == 0) return -1;\n      }\n      else if(this.t == 1) return this[0];\n      else if(this.t == 0) return 0;\n      // assumes 16 < DB < 32\n      return ((this[1]&((1<<(32-this.DB))-1))<<this.DB)|this[0];\n    }\n\n    // (public) return value as byte\n    function bnByteValue() { return (this.t==0)?this.s:(this[0]<<24)>>24; }\n\n    // (public) return value as short (assumes DB>=16)\n    function bnShortValue() { return (this.t==0)?this.s:(this[0]<<16)>>16; }\n\n    // (protected) return x s.t. r^x < DV\n    function bnpChunkSize(r) { return Math.floor(Math.LN2*this.DB/Math.log(r)); }\n\n    // (public) 0 if this == 0, 1 if this > 0\n    function bnSigNum() {\n      if(this.s < 0) return -1;\n      else if(this.t <= 0 || (this.t == 1 && this[0] <= 0)) return 0;\n      else return 1;\n    }\n\n    // (protected) convert to radix string\n    function bnpToRadix(b) {\n      if(b == null) b = 10;\n      if(this.signum() == 0 || b < 2 || b > 36) return \"0\";\n      var cs = this.chunkSize(b);\n      var a = Math.pow(b,cs);\n      var d = nbv(a), y = nbi(), z = nbi(), r = \"\";\n      this.divRemTo(d,y,z);\n      while(y.signum() > 0) {\n        r = (a+z.intValue()).toString(b).substr(1) + r;\n        y.divRemTo(d,y,z);\n      }\n      return z.intValue().toString(b) + r;\n    }\n\n    // (protected) convert from radix string\n    function bnpFromRadix(s,b) {\n      this.fromInt(0);\n      if(b == null) b = 10;\n      var cs = this.chunkSize(b);\n      var d = Math.pow(b,cs), mi = false, j = 0, w = 0;\n      for(var i = 0; i < s.length; ++i) {\n        var x = intAt(s,i);\n        if(x < 0) {\n          if(s.charAt(i) == \"-\" && this.signum() == 0) mi = true;\n          continue;\n        }\n        w = b*w+x;\n        if(++j >= cs) {\n          this.dMultiply(d);\n          this.dAddOffset(w,0);\n          j = 0;\n          w = 0;\n        }\n      }\n      if(j > 0) {\n        this.dMultiply(Math.pow(b,j));\n        this.dAddOffset(w,0);\n      }\n      if(mi) BigInteger.ZERO.subTo(this,this);\n    }\n\n    // (protected) alternate constructor\n    function bnpFromNumber(a,b,c) {\n      if(\"number\" == typeof b) {\n        // new BigInteger(int,int,RNG)\n        if(a < 2) this.fromInt(1);\n        else {\n          this.fromNumber(a,c);\n          if(!this.testBit(a-1))    // force MSB set\n            this.bitwiseTo(BigInteger.ONE.shiftLeft(a-1),op_or,this);\n          if(this.isEven()) this.dAddOffset(1,0); // force odd\n          while(!this.isProbablePrime(b)) {\n            this.dAddOffset(2,0);\n            if(this.bitLength() > a) this.subTo(BigInteger.ONE.shiftLeft(a-1),this);\n          }\n        }\n      }\n      else {\n        // new BigInteger(int,RNG)\n        var x = new Array(), t = a&7;\n        x.length = (a>>3)+1;\n        b.nextBytes(x);\n        if(t > 0) x[0] &= ((1<<t)-1); else x[0] = 0;\n        this.fromString(x,256);\n      }\n    }\n\n    // (public) convert to bigendian byte array\n    function bnToByteArray() {\n      var i = this.t, r = new Array();\n      r[0] = this.s;\n      var p = this.DB-(i*this.DB)%8, d, k = 0;\n      if(i-- > 0) {\n        if(p < this.DB && (d = this[i]>>p) != (this.s&this.DM)>>p)\n          r[k++] = d|(this.s<<(this.DB-p));\n        while(i >= 0) {\n          if(p < 8) {\n            d = (this[i]&((1<<p)-1))<<(8-p);\n            d |= this[--i]>>(p+=this.DB-8);\n          }\n          else {\n            d = (this[i]>>(p-=8))&0xff;\n            if(p <= 0) { p += this.DB; --i; }\n          }\n          if((d&0x80) != 0) d |= -256;\n          if(k == 0 && (this.s&0x80) != (d&0x80)) ++k;\n          if(k > 0 || d != this.s) r[k++] = d;\n        }\n      }\n      return r;\n    }\n\n    function bnEquals(a) { return(this.compareTo(a)==0); }\n    function bnMin(a) { return(this.compareTo(a)<0)?this:a; }\n    function bnMax(a) { return(this.compareTo(a)>0)?this:a; }\n\n    // (protected) r = this op a (bitwise)\n    function bnpBitwiseTo(a,op,r) {\n      var i, f, m = Math.min(a.t,this.t);\n      for(i = 0; i < m; ++i) r[i] = op(this[i],a[i]);\n      if(a.t < this.t) {\n        f = a.s&this.DM;\n        for(i = m; i < this.t; ++i) r[i] = op(this[i],f);\n        r.t = this.t;\n      }\n      else {\n        f = this.s&this.DM;\n        for(i = m; i < a.t; ++i) r[i] = op(f,a[i]);\n        r.t = a.t;\n      }\n      r.s = op(this.s,a.s);\n      r.clamp();\n    }\n\n    // (public) this & a\n    function op_and(x,y) { return x&y; }\n    function bnAnd(a) { var r = nbi(); this.bitwiseTo(a,op_and,r); return r; }\n\n    // (public) this | a\n    function op_or(x,y) { return x|y; }\n    function bnOr(a) { var r = nbi(); this.bitwiseTo(a,op_or,r); return r; }\n\n    // (public) this ^ a\n    function op_xor(x,y) { return x^y; }\n    function bnXor(a) { var r = nbi(); this.bitwiseTo(a,op_xor,r); return r; }\n\n    // (public) this & ~a\n    function op_andnot(x,y) { return x&~y; }\n    function bnAndNot(a) { var r = nbi(); this.bitwiseTo(a,op_andnot,r); return r; }\n\n    // (public) ~this\n    function bnNot() {\n      var r = nbi();\n      for(var i = 0; i < this.t; ++i) r[i] = this.DM&~this[i];\n      r.t = this.t;\n      r.s = ~this.s;\n      return r;\n    }\n\n    // (public) this << n\n    function bnShiftLeft(n) {\n      var r = nbi();\n      if(n < 0) this.rShiftTo(-n,r); else this.lShiftTo(n,r);\n      return r;\n    }\n\n    // (public) this >> n\n    function bnShiftRight(n) {\n      var r = nbi();\n      if(n < 0) this.lShiftTo(-n,r); else this.rShiftTo(n,r);\n      return r;\n    }\n\n    // return index of lowest 1-bit in x, x < 2^31\n    function lbit(x) {\n      if(x == 0) return -1;\n      var r = 0;\n      if((x&0xffff) == 0) { x >>= 16; r += 16; }\n      if((x&0xff) == 0) { x >>= 8; r += 8; }\n      if((x&0xf) == 0) { x >>= 4; r += 4; }\n      if((x&3) == 0) { x >>= 2; r += 2; }\n      if((x&1) == 0) ++r;\n      return r;\n    }\n\n    // (public) returns index of lowest 1-bit (or -1 if none)\n    function bnGetLowestSetBit() {\n      for(var i = 0; i < this.t; ++i)\n        if(this[i] != 0) return i*this.DB+lbit(this[i]);\n      if(this.s < 0) return this.t*this.DB;\n      return -1;\n    }\n\n    // return number of 1 bits in x\n    function cbit(x) {\n      var r = 0;\n      while(x != 0) { x &= x-1; ++r; }\n      return r;\n    }\n\n    // (public) return number of set bits\n    function bnBitCount() {\n      var r = 0, x = this.s&this.DM;\n      for(var i = 0; i < this.t; ++i) r += cbit(this[i]^x);\n      return r;\n    }\n\n    // (public) true iff nth bit is set\n    function bnTestBit(n) {\n      var j = Math.floor(n/this.DB);\n      if(j >= this.t) return(this.s!=0);\n      return((this[j]&(1<<(n%this.DB)))!=0);\n    }\n\n    // (protected) this op (1<<n)\n    function bnpChangeBit(n,op) {\n      var r = BigInteger.ONE.shiftLeft(n);\n      this.bitwiseTo(r,op,r);\n      return r;\n    }\n\n    // (public) this | (1<<n)\n    function bnSetBit(n) { return this.changeBit(n,op_or); }\n\n    // (public) this & ~(1<<n)\n    function bnClearBit(n) { return this.changeBit(n,op_andnot); }\n\n    // (public) this ^ (1<<n)\n    function bnFlipBit(n) { return this.changeBit(n,op_xor); }\n\n    // (protected) r = this + a\n    function bnpAddTo(a,r) {\n      var i = 0, c = 0, m = Math.min(a.t,this.t);\n      while(i < m) {\n        c += this[i]+a[i];\n        r[i++] = c&this.DM;\n        c >>= this.DB;\n      }\n      if(a.t < this.t) {\n        c += a.s;\n        while(i < this.t) {\n          c += this[i];\n          r[i++] = c&this.DM;\n          c >>= this.DB;\n        }\n        c += this.s;\n      }\n      else {\n        c += this.s;\n        while(i < a.t) {\n          c += a[i];\n          r[i++] = c&this.DM;\n          c >>= this.DB;\n        }\n        c += a.s;\n      }\n      r.s = (c<0)?-1:0;\n      if(c > 0) r[i++] = c;\n      else if(c < -1) r[i++] = this.DV+c;\n      r.t = i;\n      r.clamp();\n    }\n\n    // (public) this + a\n    function bnAdd(a) { var r = nbi(); this.addTo(a,r); return r; }\n\n    // (public) this - a\n    function bnSubtract(a) { var r = nbi(); this.subTo(a,r); return r; }\n\n    // (public) this * a\n    function bnMultiply(a) { var r = nbi(); this.multiplyTo(a,r); return r; }\n\n    // (public) this^2\n    function bnSquare() { var r = nbi(); this.squareTo(r); return r; }\n\n    // (public) this / a\n    function bnDivide(a) { var r = nbi(); this.divRemTo(a,r,null); return r; }\n\n    // (public) this % a\n    function bnRemainder(a) { var r = nbi(); this.divRemTo(a,null,r); return r; }\n\n    // (public) [this/a,this%a]\n    function bnDivideAndRemainder(a) {\n      var q = nbi(), r = nbi();\n      this.divRemTo(a,q,r);\n      return new Array(q,r);\n    }\n\n    // (protected) this *= n, this >= 0, 1 < n < DV\n    function bnpDMultiply(n) {\n      this[this.t] = this.am(0,n-1,this,0,0,this.t);\n      ++this.t;\n      this.clamp();\n    }\n\n    // (protected) this += n << w words, this >= 0\n    function bnpDAddOffset(n,w) {\n      if(n == 0) return;\n      while(this.t <= w) this[this.t++] = 0;\n      this[w] += n;\n      while(this[w] >= this.DV) {\n        this[w] -= this.DV;\n        if(++w >= this.t) this[this.t++] = 0;\n        ++this[w];\n      }\n    }\n\n    // A \"null\" reducer\n    function NullExp() {}\n    function nNop(x) { return x; }\n    function nMulTo(x,y,r) { x.multiplyTo(y,r); }\n    function nSqrTo(x,r) { x.squareTo(r); }\n\n    NullExp.prototype.convert = nNop;\n    NullExp.prototype.revert = nNop;\n    NullExp.prototype.mulTo = nMulTo;\n    NullExp.prototype.sqrTo = nSqrTo;\n\n    // (public) this^e\n    function bnPow(e) { return this.exp(e,new NullExp()); }\n\n    // (protected) r = lower n words of \"this * a\", a.t <= n\n    // \"this\" should be the larger one if appropriate.\n    function bnpMultiplyLowerTo(a,n,r) {\n      var i = Math.min(this.t+a.t,n);\n      r.s = 0; // assumes a,this >= 0\n      r.t = i;\n      while(i > 0) r[--i] = 0;\n      var j;\n      for(j = r.t-this.t; i < j; ++i) r[i+this.t] = this.am(0,a[i],r,i,0,this.t);\n      for(j = Math.min(a.t,n); i < j; ++i) this.am(0,a[i],r,i,0,n-i);\n      r.clamp();\n    }\n\n    // (protected) r = \"this * a\" without lower n words, n > 0\n    // \"this\" should be the larger one if appropriate.\n    function bnpMultiplyUpperTo(a,n,r) {\n      --n;\n      var i = r.t = this.t+a.t-n;\n      r.s = 0; // assumes a,this >= 0\n      while(--i >= 0) r[i] = 0;\n      for(i = Math.max(n-this.t,0); i < a.t; ++i)\n        r[this.t+i-n] = this.am(n-i,a[i],r,0,0,this.t+i-n);\n      r.clamp();\n      r.drShiftTo(1,r);\n    }\n\n    // Barrett modular reduction\n    function Barrett(m) {\n      // setup Barrett\n      this.r2 = nbi();\n      this.q3 = nbi();\n      BigInteger.ONE.dlShiftTo(2*m.t,this.r2);\n      this.mu = this.r2.divide(m);\n      this.m = m;\n    }\n\n    function barrettConvert(x) {\n      if(x.s < 0 || x.t > 2*this.m.t) return x.mod(this.m);\n      else if(x.compareTo(this.m) < 0) return x;\n      else { var r = nbi(); x.copyTo(r); this.reduce(r); return r; }\n    }\n\n    function barrettRevert(x) { return x; }\n\n    // x = x mod m (HAC 14.42)\n    function barrettReduce(x) {\n      x.drShiftTo(this.m.t-1,this.r2);\n      if(x.t > this.m.t+1) { x.t = this.m.t+1; x.clamp(); }\n      this.mu.multiplyUpperTo(this.r2,this.m.t+1,this.q3);\n      this.m.multiplyLowerTo(this.q3,this.m.t+1,this.r2);\n      while(x.compareTo(this.r2) < 0) x.dAddOffset(1,this.m.t+1);\n      x.subTo(this.r2,x);\n      while(x.compareTo(this.m) >= 0) x.subTo(this.m,x);\n    }\n\n    // r = x^2 mod m; x != r\n    function barrettSqrTo(x,r) { x.squareTo(r); this.reduce(r); }\n\n    // r = x*y mod m; x,y != r\n    function barrettMulTo(x,y,r) { x.multiplyTo(y,r); this.reduce(r); }\n\n    Barrett.prototype.convert = barrettConvert;\n    Barrett.prototype.revert = barrettRevert;\n    Barrett.prototype.reduce = barrettReduce;\n    Barrett.prototype.mulTo = barrettMulTo;\n    Barrett.prototype.sqrTo = barrettSqrTo;\n\n    // (public) this^e % m (HAC 14.85)\n    function bnModPow(e,m) {\n      var i = e.bitLength(), k, r = nbv(1), z;\n      if(i <= 0) return r;\n      else if(i < 18) k = 1;\n      else if(i < 48) k = 3;\n      else if(i < 144) k = 4;\n      else if(i < 768) k = 5;\n      else k = 6;\n      if(i < 8)\n        z = new Classic(m);\n      else if(m.isEven())\n        z = new Barrett(m);\n      else\n        z = new Montgomery(m);\n\n      // precomputation\n      var g = new Array(), n = 3, k1 = k-1, km = (1<<k)-1;\n      g[1] = z.convert(this);\n      if(k > 1) {\n        var g2 = nbi();\n        z.sqrTo(g[1],g2);\n        while(n <= km) {\n          g[n] = nbi();\n          z.mulTo(g2,g[n-2],g[n]);\n          n += 2;\n        }\n      }\n\n      var j = e.t-1, w, is1 = true, r2 = nbi(), t;\n      i = nbits(e[j])-1;\n      while(j >= 0) {\n        if(i >= k1) w = (e[j]>>(i-k1))&km;\n        else {\n          w = (e[j]&((1<<(i+1))-1))<<(k1-i);\n          if(j > 0) w |= e[j-1]>>(this.DB+i-k1);\n        }\n\n        n = k;\n        while((w&1) == 0) { w >>= 1; --n; }\n        if((i -= n) < 0) { i += this.DB; --j; }\n        if(is1) {    // ret == 1, don't bother squaring or multiplying it\n          g[w].copyTo(r);\n          is1 = false;\n        }\n        else {\n          while(n > 1) { z.sqrTo(r,r2); z.sqrTo(r2,r); n -= 2; }\n          if(n > 0) z.sqrTo(r,r2); else { t = r; r = r2; r2 = t; }\n          z.mulTo(r2,g[w],r);\n        }\n\n        while(j >= 0 && (e[j]&(1<<i)) == 0) {\n          z.sqrTo(r,r2); t = r; r = r2; r2 = t;\n          if(--i < 0) { i = this.DB-1; --j; }\n        }\n      }\n      return z.revert(r);\n    }\n\n    // (public) gcd(this,a) (HAC 14.54)\n    function bnGCD(a) {\n      var x = (this.s<0)?this.negate():this.clone();\n      var y = (a.s<0)?a.negate():a.clone();\n      if(x.compareTo(y) < 0) { var t = x; x = y; y = t; }\n      var i = x.getLowestSetBit(), g = y.getLowestSetBit();\n      if(g < 0) return x;\n      if(i < g) g = i;\n      if(g > 0) {\n        x.rShiftTo(g,x);\n        y.rShiftTo(g,y);\n      }\n      while(x.signum() > 0) {\n        if((i = x.getLowestSetBit()) > 0) x.rShiftTo(i,x);\n        if((i = y.getLowestSetBit()) > 0) y.rShiftTo(i,y);\n        if(x.compareTo(y) >= 0) {\n          x.subTo(y,x);\n          x.rShiftTo(1,x);\n        }\n        else {\n          y.subTo(x,y);\n          y.rShiftTo(1,y);\n        }\n      }\n      if(g > 0) y.lShiftTo(g,y);\n      return y;\n    }\n\n    // (protected) this % n, n < 2^26\n    function bnpModInt(n) {\n      if(n <= 0) return 0;\n      var d = this.DV%n, r = (this.s<0)?n-1:0;\n      if(this.t > 0)\n        if(d == 0) r = this[0]%n;\n        else for(var i = this.t-1; i >= 0; --i) r = (d*r+this[i])%n;\n      return r;\n    }\n\n    // (public) 1/this % m (HAC 14.61)\n    function bnModInverse(m) {\n      var ac = m.isEven();\n      if((this.isEven() && ac) || m.signum() == 0) return BigInteger.ZERO;\n      var u = m.clone(), v = this.clone();\n      var a = nbv(1), b = nbv(0), c = nbv(0), d = nbv(1);\n      while(u.signum() != 0) {\n        while(u.isEven()) {\n          u.rShiftTo(1,u);\n          if(ac) {\n            if(!a.isEven() || !b.isEven()) { a.addTo(this,a); b.subTo(m,b); }\n            a.rShiftTo(1,a);\n          }\n          else if(!b.isEven()) b.subTo(m,b);\n          b.rShiftTo(1,b);\n        }\n        while(v.isEven()) {\n          v.rShiftTo(1,v);\n          if(ac) {\n            if(!c.isEven() || !d.isEven()) { c.addTo(this,c); d.subTo(m,d); }\n            c.rShiftTo(1,c);\n          }\n          else if(!d.isEven()) d.subTo(m,d);\n          d.rShiftTo(1,d);\n        }\n        if(u.compareTo(v) >= 0) {\n          u.subTo(v,u);\n          if(ac) a.subTo(c,a);\n          b.subTo(d,b);\n        }\n        else {\n          v.subTo(u,v);\n          if(ac) c.subTo(a,c);\n          d.subTo(b,d);\n        }\n      }\n      if(v.compareTo(BigInteger.ONE) != 0) return BigInteger.ZERO;\n      if(d.compareTo(m) >= 0) return d.subtract(m);\n      if(d.signum() < 0) d.addTo(m,d); else return d;\n      if(d.signum() < 0) return d.add(m); else return d;\n    }\n\n    var lowprimes = [2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97,101,103,107,109,113,127,131,137,139,149,151,157,163,167,173,179,181,191,193,197,199,211,223,227,229,233,239,241,251,257,263,269,271,277,281,283,293,307,311,313,317,331,337,347,349,353,359,367,373,379,383,389,397,401,409,419,421,431,433,439,443,449,457,461,463,467,479,487,491,499,503,509,521,523,541,547,557,563,569,571,577,587,593,599,601,607,613,617,619,631,641,643,647,653,659,661,673,677,683,691,701,709,719,727,733,739,743,751,757,761,769,773,787,797,809,811,821,823,827,829,839,853,857,859,863,877,881,883,887,907,911,919,929,937,941,947,953,967,971,977,983,991,997];\n    var lplim = (1<<26)/lowprimes[lowprimes.length-1];\n\n    // (public) test primality with certainty >= 1-.5^t\n    function bnIsProbablePrime(t) {\n      var i, x = this.abs();\n      if(x.t == 1 && x[0] <= lowprimes[lowprimes.length-1]) {\n        for(i = 0; i < lowprimes.length; ++i)\n          if(x[0] == lowprimes[i]) return true;\n        return false;\n      }\n      if(x.isEven()) return false;\n      i = 1;\n      while(i < lowprimes.length) {\n        var m = lowprimes[i], j = i+1;\n        while(j < lowprimes.length && m < lplim) m *= lowprimes[j++];\n        m = x.modInt(m);\n        while(i < j) if(m%lowprimes[i++] == 0) return false;\n      }\n      return x.millerRabin(t);\n    }\n\n    // (protected) true if probably prime (HAC 4.24, Miller-Rabin)\n    function bnpMillerRabin(t) {\n      var n1 = this.subtract(BigInteger.ONE);\n      var k = n1.getLowestSetBit();\n      if(k <= 0) return false;\n      var r = n1.shiftRight(k);\n      t = (t+1)>>1;\n      if(t > lowprimes.length) t = lowprimes.length;\n      var a = nbi();\n      for(var i = 0; i < t; ++i) {\n        //Pick bases at random, instead of starting at 2\n        a.fromInt(lowprimes[Math.floor(Math.random()*lowprimes.length)]);\n        var y = a.modPow(r,this);\n        if(y.compareTo(BigInteger.ONE) != 0 && y.compareTo(n1) != 0) {\n          var j = 1;\n          while(j++ < k && y.compareTo(n1) != 0) {\n            y = y.modPowInt(2,this);\n            if(y.compareTo(BigInteger.ONE) == 0) return false;\n          }\n          if(y.compareTo(n1) != 0) return false;\n        }\n      }\n      return true;\n    }\n\n    // protected\n    BigInteger.prototype.chunkSize = bnpChunkSize;\n    BigInteger.prototype.toRadix = bnpToRadix;\n    BigInteger.prototype.fromRadix = bnpFromRadix;\n    BigInteger.prototype.fromNumber = bnpFromNumber;\n    BigInteger.prototype.bitwiseTo = bnpBitwiseTo;\n    BigInteger.prototype.changeBit = bnpChangeBit;\n    BigInteger.prototype.addTo = bnpAddTo;\n    BigInteger.prototype.dMultiply = bnpDMultiply;\n    BigInteger.prototype.dAddOffset = bnpDAddOffset;\n    BigInteger.prototype.multiplyLowerTo = bnpMultiplyLowerTo;\n    BigInteger.prototype.multiplyUpperTo = bnpMultiplyUpperTo;\n    BigInteger.prototype.modInt = bnpModInt;\n    BigInteger.prototype.millerRabin = bnpMillerRabin;\n\n    // public\n    BigInteger.prototype.clone = bnClone;\n    BigInteger.prototype.intValue = bnIntValue;\n    BigInteger.prototype.byteValue = bnByteValue;\n    BigInteger.prototype.shortValue = bnShortValue;\n    BigInteger.prototype.signum = bnSigNum;\n    BigInteger.prototype.toByteArray = bnToByteArray;\n    BigInteger.prototype.equals = bnEquals;\n    BigInteger.prototype.min = bnMin;\n    BigInteger.prototype.max = bnMax;\n    BigInteger.prototype.and = bnAnd;\n    BigInteger.prototype.or = bnOr;\n    BigInteger.prototype.xor = bnXor;\n    BigInteger.prototype.andNot = bnAndNot;\n    BigInteger.prototype.not = bnNot;\n    BigInteger.prototype.shiftLeft = bnShiftLeft;\n    BigInteger.prototype.shiftRight = bnShiftRight;\n    BigInteger.prototype.getLowestSetBit = bnGetLowestSetBit;\n    BigInteger.prototype.bitCount = bnBitCount;\n    BigInteger.prototype.testBit = bnTestBit;\n    BigInteger.prototype.setBit = bnSetBit;\n    BigInteger.prototype.clearBit = bnClearBit;\n    BigInteger.prototype.flipBit = bnFlipBit;\n    BigInteger.prototype.add = bnAdd;\n    BigInteger.prototype.subtract = bnSubtract;\n    BigInteger.prototype.multiply = bnMultiply;\n    BigInteger.prototype.divide = bnDivide;\n    BigInteger.prototype.remainder = bnRemainder;\n    BigInteger.prototype.divideAndRemainder = bnDivideAndRemainder;\n    BigInteger.prototype.modPow = bnModPow;\n    BigInteger.prototype.modInverse = bnModInverse;\n    BigInteger.prototype.pow = bnPow;\n    BigInteger.prototype.gcd = bnGCD;\n    BigInteger.prototype.isProbablePrime = bnIsProbablePrime;\n\n    // JSBN-specific extension\n    BigInteger.prototype.square = bnSquare;\n\n    // Expose the Barrett function\n    BigInteger.prototype.Barrett = Barrett\n\n    // BigInteger interfaces not implemented in jsbn:\n\n    // BigInteger(int signum, byte[] magnitude)\n    // double doubleValue()\n    // float floatValue()\n    // int hashCode()\n    // long longValue()\n    // static BigInteger valueOf(long val)\n\n    // Random number generator - requires a PRNG backend, e.g. prng4.js\n\n    // For best results, put code like\n    // <body onClick='rng_seed_time();' onKeyPress='rng_seed_time();'>\n    // in your main HTML document.\n\n    var rng_state;\n    var rng_pool;\n    var rng_pptr;\n\n    // Mix in a 32-bit integer into the pool\n    function rng_seed_int(x) {\n      rng_pool[rng_pptr++] ^= x & 255;\n      rng_pool[rng_pptr++] ^= (x >> 8) & 255;\n      rng_pool[rng_pptr++] ^= (x >> 16) & 255;\n      rng_pool[rng_pptr++] ^= (x >> 24) & 255;\n      if(rng_pptr >= rng_psize) rng_pptr -= rng_psize;\n    }\n\n    // Mix in the current time (w/milliseconds) into the pool\n    function rng_seed_time() {\n      rng_seed_int(new Date().getTime());\n    }\n\n    // Initialize the pool with junk if needed.\n    if(rng_pool == null) {\n      rng_pool = new Array();\n      rng_pptr = 0;\n      var t;\n      if(typeof window !== \"undefined\" && window.crypto) {\n        if (window.crypto.getRandomValues) {\n          // Use webcrypto if available\n          var ua = new Uint8Array(32);\n          window.crypto.getRandomValues(ua);\n          for(t = 0; t < 32; ++t)\n            rng_pool[rng_pptr++] = ua[t];\n        }\n        else if(navigator.appName == \"Netscape\" && navigator.appVersion < \"5\") {\n          // Extract entropy (256 bits) from NS4 RNG if available\n          var z = window.crypto.random(32);\n          for(t = 0; t < z.length; ++t)\n            rng_pool[rng_pptr++] = z.charCodeAt(t) & 255;\n        }\n      }\n      while(rng_pptr < rng_psize) {  // extract some randomness from Math.random()\n        t = Math.floor(65536 * Math.random());\n        rng_pool[rng_pptr++] = t >>> 8;\n        rng_pool[rng_pptr++] = t & 255;\n      }\n      rng_pptr = 0;\n      rng_seed_time();\n      //rng_seed_int(window.screenX);\n      //rng_seed_int(window.screenY);\n    }\n\n    function rng_get_byte() {\n      if(rng_state == null) {\n        rng_seed_time();\n        rng_state = prng_newstate();\n        rng_state.init(rng_pool);\n        for(rng_pptr = 0; rng_pptr < rng_pool.length; ++rng_pptr)\n          rng_pool[rng_pptr] = 0;\n        rng_pptr = 0;\n        //rng_pool = null;\n      }\n      // TODO: allow reseeding after first request\n      return rng_state.next();\n    }\n\n    function rng_get_bytes(ba) {\n      var i;\n      for(i = 0; i < ba.length; ++i) ba[i] = rng_get_byte();\n    }\n\n    function SecureRandom() {}\n\n    SecureRandom.prototype.nextBytes = rng_get_bytes;\n\n    // prng4.js - uses Arcfour as a PRNG\n\n    function Arcfour() {\n      this.i = 0;\n      this.j = 0;\n      this.S = new Array();\n    }\n\n    // Initialize arcfour context from key, an array of ints, each from [0..255]\n    function ARC4init(key) {\n      var i, j, t;\n      for(i = 0; i < 256; ++i)\n        this.S[i] = i;\n      j = 0;\n      for(i = 0; i < 256; ++i) {\n        j = (j + this.S[i] + key[i % key.length]) & 255;\n        t = this.S[i];\n        this.S[i] = this.S[j];\n        this.S[j] = t;\n      }\n      this.i = 0;\n      this.j = 0;\n    }\n\n    function ARC4next() {\n      var t;\n      this.i = (this.i + 1) & 255;\n      this.j = (this.j + this.S[this.i]) & 255;\n      t = this.S[this.i];\n      this.S[this.i] = this.S[this.j];\n      this.S[this.j] = t;\n      return this.S[(t + this.S[this.i]) & 255];\n    }\n\n    Arcfour.prototype.init = ARC4init;\n    Arcfour.prototype.next = ARC4next;\n\n    // Plug in your RNG constructor here\n    function prng_newstate() {\n      return new Arcfour();\n    }\n\n    // Pool size must be a multiple of 4 and greater than 32.\n    // An array of bytes the size of the pool will be passed to init()\n    var rng_psize = 256;\n\n    if (typeof exports !== 'undefined') {\n        exports = module.exports = {\n            default: BigInteger,\n            BigInteger: BigInteger,\n            SecureRandom: SecureRandom,\n        };\n    } else {\n        this.jsbn = {\n          BigInteger: BigInteger,\n          SecureRandom: SecureRandom\n        };\n    }\n\n}).call(this);\n","/* global window, exports, define */\n\n!function() {\n    'use strict'\n\n    var re = {\n        not_string: /[^s]/,\n        not_bool: /[^t]/,\n        not_type: /[^T]/,\n        not_primitive: /[^v]/,\n        number: /[diefg]/,\n        numeric_arg: /[bcdiefguxX]/,\n        json: /[j]/,\n        not_json: /[^j]/,\n        text: /^[^\\x25]+/,\n        modulo: /^\\x25{2}/,\n        placeholder: /^\\x25(?:([1-9]\\d*)\\$|\\(([^)]+)\\))?(\\+)?(0|'[^$])?(-)?(\\d+)?(?:\\.(\\d+))?([b-gijostTuvxX])/,\n        key: /^([a-z_][a-z_\\d]*)/i,\n        key_access: /^\\.([a-z_][a-z_\\d]*)/i,\n        index_access: /^\\[(\\d+)\\]/,\n        sign: /^[+-]/\n    }\n\n    function sprintf(key) {\n        // `arguments` is not an array, but should be fine for this call\n        return sprintf_format(sprintf_parse(key), arguments)\n    }\n\n    function vsprintf(fmt, argv) {\n        return sprintf.apply(null, [fmt].concat(argv || []))\n    }\n\n    function sprintf_format(parse_tree, argv) {\n        var cursor = 1, tree_length = parse_tree.length, arg, output = '', i, k, ph, pad, pad_character, pad_length, is_positive, sign\n        for (i = 0; i < tree_length; i++) {\n            if (typeof parse_tree[i] === 'string') {\n                output += parse_tree[i]\n            }\n            else if (typeof parse_tree[i] === 'object') {\n                ph = parse_tree[i] // convenience purposes only\n                if (ph.keys) { // keyword argument\n                    arg = argv[cursor]\n                    for (k = 0; k < ph.keys.length; k++) {\n                        if (arg == undefined) {\n                            throw new Error(sprintf('[sprintf] Cannot access property \"%s\" of undefined value \"%s\"', ph.keys[k], ph.keys[k-1]))\n                        }\n                        arg = arg[ph.keys[k]]\n                    }\n                }\n                else if (ph.param_no) { // positional argument (explicit)\n                    arg = argv[ph.param_no]\n                }\n                else { // positional argument (implicit)\n                    arg = argv[cursor++]\n                }\n\n                if (re.not_type.test(ph.type) && re.not_primitive.test(ph.type) && arg instanceof Function) {\n                    arg = arg()\n                }\n\n                if (re.numeric_arg.test(ph.type) && (typeof arg !== 'number' && isNaN(arg))) {\n                    throw new TypeError(sprintf('[sprintf] expecting number but found %T', arg))\n                }\n\n                if (re.number.test(ph.type)) {\n                    is_positive = arg >= 0\n                }\n\n                switch (ph.type) {\n                    case 'b':\n                        arg = parseInt(arg, 10).toString(2)\n                        break\n                    case 'c':\n                        arg = String.fromCharCode(parseInt(arg, 10))\n                        break\n                    case 'd':\n                    case 'i':\n                        arg = parseInt(arg, 10)\n                        break\n                    case 'j':\n                        arg = JSON.stringify(arg, null, ph.width ? parseInt(ph.width) : 0)\n                        break\n                    case 'e':\n                        arg = ph.precision ? parseFloat(arg).toExponential(ph.precision) : parseFloat(arg).toExponential()\n                        break\n                    case 'f':\n                        arg = ph.precision ? parseFloat(arg).toFixed(ph.precision) : parseFloat(arg)\n                        break\n                    case 'g':\n                        arg = ph.precision ? String(Number(arg.toPrecision(ph.precision))) : parseFloat(arg)\n                        break\n                    case 'o':\n                        arg = (parseInt(arg, 10) >>> 0).toString(8)\n                        break\n                    case 's':\n                        arg = String(arg)\n                        arg = (ph.precision ? arg.substring(0, ph.precision) : arg)\n                        break\n                    case 't':\n                        arg = String(!!arg)\n                        arg = (ph.precision ? arg.substring(0, ph.precision) : arg)\n                        break\n                    case 'T':\n                        arg = Object.prototype.toString.call(arg).slice(8, -1).toLowerCase()\n                        arg = (ph.precision ? arg.substring(0, ph.precision) : arg)\n                        break\n                    case 'u':\n                        arg = parseInt(arg, 10) >>> 0\n                        break\n                    case 'v':\n                        arg = arg.valueOf()\n                        arg = (ph.precision ? arg.substring(0, ph.precision) : arg)\n                        break\n                    case 'x':\n                        arg = (parseInt(arg, 10) >>> 0).toString(16)\n                        break\n                    case 'X':\n                        arg = (parseInt(arg, 10) >>> 0).toString(16).toUpperCase()\n                        break\n                }\n                if (re.json.test(ph.type)) {\n                    output += arg\n                }\n                else {\n                    if (re.number.test(ph.type) && (!is_positive || ph.sign)) {\n                        sign = is_positive ? '+' : '-'\n                        arg = arg.toString().replace(re.sign, '')\n                    }\n                    else {\n                        sign = ''\n                    }\n                    pad_character = ph.pad_char ? ph.pad_char === '0' ? '0' : ph.pad_char.charAt(1) : ' '\n                    pad_length = ph.width - (sign + arg).length\n                    pad = ph.width ? (pad_length > 0 ? pad_character.repeat(pad_length) : '') : ''\n                    output += ph.align ? sign + arg + pad : (pad_character === '0' ? sign + pad + arg : pad + sign + arg)\n                }\n            }\n        }\n        return output\n    }\n\n    var sprintf_cache = Object.create(null)\n\n    function sprintf_parse(fmt) {\n        if (sprintf_cache[fmt]) {\n            return sprintf_cache[fmt]\n        }\n\n        var _fmt = fmt, match, parse_tree = [], arg_names = 0\n        while (_fmt) {\n            if ((match = re.text.exec(_fmt)) !== null) {\n                parse_tree.push(match[0])\n            }\n            else if ((match = re.modulo.exec(_fmt)) !== null) {\n                parse_tree.push('%')\n            }\n            else if ((match = re.placeholder.exec(_fmt)) !== null) {\n                if (match[2]) {\n                    arg_names |= 1\n                    var field_list = [], replacement_field = match[2], field_match = []\n                    if ((field_match = re.key.exec(replacement_field)) !== null) {\n                        field_list.push(field_match[1])\n                        while ((replacement_field = replacement_field.substring(field_match[0].length)) !== '') {\n                            if ((field_match = re.key_access.exec(replacement_field)) !== null) {\n                                field_list.push(field_match[1])\n                            }\n                            else if ((field_match = re.index_access.exec(replacement_field)) !== null) {\n                                field_list.push(field_match[1])\n                            }\n                            else {\n                                throw new SyntaxError('[sprintf] failed to parse named argument key')\n                            }\n                        }\n                    }\n                    else {\n                        throw new SyntaxError('[sprintf] failed to parse named argument key')\n                    }\n                    match[2] = field_list\n                }\n                else {\n                    arg_names |= 2\n                }\n                if (arg_names === 3) {\n                    throw new Error('[sprintf] mixing positional and named placeholders is not (yet) supported')\n                }\n\n                parse_tree.push(\n                    {\n                        placeholder: match[0],\n                        param_no:    match[1],\n                        keys:        match[2],\n                        sign:        match[3],\n                        pad_char:    match[4],\n                        align:       match[5],\n                        width:       match[6],\n                        precision:   match[7],\n                        type:        match[8]\n                    }\n                )\n            }\n            else {\n                throw new SyntaxError('[sprintf] unexpected placeholder')\n            }\n            _fmt = _fmt.substring(match[0].length)\n        }\n        return sprintf_cache[fmt] = parse_tree\n    }\n\n    /**\n     * export to either browser or node.js\n     */\n    /* eslint-disable quote-props */\n    if (typeof exports !== 'undefined') {\n        exports['sprintf'] = sprintf\n        exports['vsprintf'] = vsprintf\n    }\n    if (typeof window !== 'undefined') {\n        window['sprintf'] = sprintf\n        window['vsprintf'] = vsprintf\n\n        if (typeof define === 'function' && define['amd']) {\n            define(function() {\n                return {\n                    'sprintf': sprintf,\n                    'vsprintf': vsprintf\n                }\n            })\n        }\n    }\n    /* eslint-enable quote-props */\n}(); // eslint-disable-line\n","import { EventEmitter, Directive, ElementRef, Input, Output, HostListener, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @param {?} node\n * @return {?}\n */\nfunction isElement(node) {\n    return !!(node && (node.nodeName || node.prop && node.attr && node.find));\n}\nclass FileLikeObject {\n    /**\n     * @param {?} fileOrInput\n     */\n    constructor(fileOrInput) {\n        this.rawFile = fileOrInput;\n        /** @type {?} */\n        let isInput = isElement(fileOrInput);\n        /** @type {?} */\n        let fakePathOrObject = isInput ? fileOrInput.value : fileOrInput;\n        /** @type {?} */\n        let postfix = typeof fakePathOrObject === 'string' ? 'FakePath' : 'Object';\n        /** @type {?} */\n        let method = '_createFrom' + postfix;\n        ((/** @type {?} */ (this)))[method](fakePathOrObject);\n    }\n    /**\n     * @param {?} path\n     * @return {?}\n     */\n    _createFromFakePath(path) {\n        this.lastModifiedDate = void 0;\n        this.size = void 0;\n        this.type = 'like/' + path.slice(path.lastIndexOf('.') + 1).toLowerCase();\n        this.name = path.slice(path.lastIndexOf('/') + path.lastIndexOf('\\\\') + 2);\n    }\n    /**\n     * @param {?} object\n     * @return {?}\n     */\n    _createFromObject(object) {\n        this.size = object.size;\n        this.type = object.type;\n        this.name = object.name;\n    }\n}\nif (false) {\n    /** @type {?} */\n    FileLikeObject.prototype.lastModifiedDate;\n    /** @type {?} */\n    FileLikeObject.prototype.size;\n    /** @type {?} */\n    FileLikeObject.prototype.type;\n    /** @type {?} */\n    FileLikeObject.prototype.name;\n    /** @type {?} */\n    FileLikeObject.prototype.rawFile;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass FileItem {\n    /**\n     * @param {?} uploader\n     * @param {?} some\n     * @param {?} options\n     */\n    constructor(uploader, some, options) {\n        this.url = '/';\n        this.headers = [];\n        this.withCredentials = true;\n        this.formData = [];\n        this.isReady = false;\n        this.isUploading = false;\n        this.isUploaded = false;\n        this.isSuccess = false;\n        this.isCancel = false;\n        this.isError = false;\n        this.progress = 0;\n        this.index = void 0;\n        this.uploader = uploader;\n        this.some = some;\n        this.options = options;\n        this.file = new FileLikeObject(some);\n        this._file = some;\n        if (uploader.options) {\n            this.method = uploader.options.method || 'POST';\n            this.alias = uploader.options.itemAlias || 'file';\n        }\n        this.url = uploader.options.url;\n    }\n    /**\n     * @return {?}\n     */\n    upload() {\n        try {\n            this.uploader.uploadItem(this);\n        }\n        catch (e) {\n            this.uploader._onCompleteItem(this, '', 0, {});\n            this.uploader._onErrorItem(this, '', 0, {});\n        }\n    }\n    /**\n     * @return {?}\n     */\n    cancel() {\n        this.uploader.cancelItem(this);\n    }\n    /**\n     * @return {?}\n     */\n    remove() {\n        this.uploader.removeFromQueue(this);\n    }\n    /**\n     * @return {?}\n     */\n    onBeforeUpload() {\n        return void 0;\n    }\n    /**\n     * @param {?} form\n     * @return {?}\n     */\n    onBuildForm(form) {\n        return { form };\n    }\n    /**\n     * @param {?} progress\n     * @return {?}\n     */\n    onProgress(progress) {\n        return { progress };\n    }\n    /**\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n    onSuccess(response, status, headers) {\n        return { response, status, headers };\n    }\n    /**\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n    onError(response, status, headers) {\n        return { response, status, headers };\n    }\n    /**\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n    onCancel(response, status, headers) {\n        return { response, status, headers };\n    }\n    /**\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n    onComplete(response, status, headers) {\n        return { response, status, headers };\n    }\n    /**\n     * @return {?}\n     */\n    _onBeforeUpload() {\n        this.isReady = true;\n        this.isUploading = true;\n        this.isUploaded = false;\n        this.isSuccess = false;\n        this.isCancel = false;\n        this.isError = false;\n        this.progress = 0;\n        this.onBeforeUpload();\n    }\n    /**\n     * @param {?} form\n     * @return {?}\n     */\n    _onBuildForm(form) {\n        this.onBuildForm(form);\n    }\n    /**\n     * @param {?} progress\n     * @return {?}\n     */\n    _onProgress(progress) {\n        this.progress = progress;\n        this.onProgress(progress);\n    }\n    /**\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n    _onSuccess(response, status, headers) {\n        this.isReady = false;\n        this.isUploading = false;\n        this.isUploaded = true;\n        this.isSuccess = true;\n        this.isCancel = false;\n        this.isError = false;\n        this.progress = 100;\n        this.index = void 0;\n        this.onSuccess(response, status, headers);\n    }\n    /**\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n    _onError(response, status, headers) {\n        this.isReady = false;\n        this.isUploading = false;\n        this.isUploaded = true;\n        this.isSuccess = false;\n        this.isCancel = false;\n        this.isError = true;\n        this.progress = 0;\n        this.index = void 0;\n        this.onError(response, status, headers);\n    }\n    /**\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n    _onCancel(response, status, headers) {\n        this.isReady = false;\n        this.isUploading = false;\n        this.isUploaded = false;\n        this.isSuccess = false;\n        this.isCancel = true;\n        this.isError = false;\n        this.progress = 0;\n        this.index = void 0;\n        this.onCancel(response, status, headers);\n    }\n    /**\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n    _onComplete(response, status, headers) {\n        this.onComplete(response, status, headers);\n        if (this.uploader.options.removeAfterUpload) {\n            this.remove();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    _prepareToUploading() {\n        this.index = this.index || ++this.uploader._nextIndex;\n        this.isReady = true;\n    }\n}\nif (false) {\n    /** @type {?} */\n    FileItem.prototype.file;\n    /** @type {?} */\n    FileItem.prototype._file;\n    /** @type {?} */\n    FileItem.prototype.alias;\n    /** @type {?} */\n    FileItem.prototype.url;\n    /** @type {?} */\n    FileItem.prototype.method;\n    /** @type {?} */\n    FileItem.prototype.headers;\n    /** @type {?} */\n    FileItem.prototype.withCredentials;\n    /** @type {?} */\n    FileItem.prototype.formData;\n    /** @type {?} */\n    FileItem.prototype.isReady;\n    /** @type {?} */\n    FileItem.prototype.isUploading;\n    /** @type {?} */\n    FileItem.prototype.isUploaded;\n    /** @type {?} */\n    FileItem.prototype.isSuccess;\n    /** @type {?} */\n    FileItem.prototype.isCancel;\n    /** @type {?} */\n    FileItem.prototype.isError;\n    /** @type {?} */\n    FileItem.prototype.progress;\n    /** @type {?} */\n    FileItem.prototype.index;\n    /** @type {?} */\n    FileItem.prototype._xhr;\n    /** @type {?} */\n    FileItem.prototype._form;\n    /**\n     * @type {?}\n     * @protected\n     */\n    FileItem.prototype.uploader;\n    /**\n     * @type {?}\n     * @protected\n     */\n    FileItem.prototype.some;\n    /**\n     * @type {?}\n     * @protected\n     */\n    FileItem.prototype.options;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass FileType {\n    /**\n     * @param {?} file\n     * @return {?}\n     */\n    static getMimeClass(file) {\n        /** @type {?} */\n        let mimeClass = 'application';\n        if (this.mime_psd.indexOf(file.type) !== -1) {\n            mimeClass = 'image';\n        }\n        else if (file.type.match('image.*')) {\n            mimeClass = 'image';\n        }\n        else if (file.type.match('video.*')) {\n            mimeClass = 'video';\n        }\n        else if (file.type.match('audio.*')) {\n            mimeClass = 'audio';\n        }\n        else if (file.type === 'application/pdf') {\n            mimeClass = 'pdf';\n        }\n        else if (this.mime_compress.indexOf(file.type) !== -1) {\n            mimeClass = 'compress';\n        }\n        else if (this.mime_doc.indexOf(file.type) !== -1) {\n            mimeClass = 'doc';\n        }\n        else if (this.mime_xsl.indexOf(file.type) !== -1) {\n            mimeClass = 'xls';\n        }\n        else if (this.mime_ppt.indexOf(file.type) !== -1) {\n            mimeClass = 'ppt';\n        }\n        if (mimeClass === 'application') {\n            mimeClass = this.fileTypeDetection(file.name);\n        }\n        return mimeClass;\n    }\n    /**\n     * @param {?} inputFilename\n     * @return {?}\n     */\n    static fileTypeDetection(inputFilename) {\n        /** @type {?} */\n        let types = {\n            'jpg': 'image',\n            'jpeg': 'image',\n            'tif': 'image',\n            'psd': 'image',\n            'bmp': 'image',\n            'png': 'image',\n            'nef': 'image',\n            'tiff': 'image',\n            'cr2': 'image',\n            'dwg': 'image',\n            'cdr': 'image',\n            'ai': 'image',\n            'indd': 'image',\n            'pin': 'image',\n            'cdp': 'image',\n            'skp': 'image',\n            'stp': 'image',\n            '3dm': 'image',\n            'mp3': 'audio',\n            'wav': 'audio',\n            'wma': 'audio',\n            'mod': 'audio',\n            'm4a': 'audio',\n            'compress': 'compress',\n            'zip': 'compress',\n            'rar': 'compress',\n            '7z': 'compress',\n            'lz': 'compress',\n            'z01': 'compress',\n            'bz2': 'compress',\n            'gz': 'compress',\n            'pdf': 'pdf',\n            'xls': 'xls',\n            'xlsx': 'xls',\n            'ods': 'xls',\n            'mp4': 'video',\n            'avi': 'video',\n            'wmv': 'video',\n            'mpg': 'video',\n            'mts': 'video',\n            'flv': 'video',\n            '3gp': 'video',\n            'vob': 'video',\n            'm4v': 'video',\n            'mpeg': 'video',\n            'm2ts': 'video',\n            'mov': 'video',\n            'doc': 'doc',\n            'docx': 'doc',\n            'eps': 'doc',\n            'txt': 'doc',\n            'odt': 'doc',\n            'rtf': 'doc',\n            'ppt': 'ppt',\n            'pptx': 'ppt',\n            'pps': 'ppt',\n            'ppsx': 'ppt',\n            'odp': 'ppt'\n        };\n        /** @type {?} */\n        let chunks = inputFilename.split('.');\n        if (chunks.length < 2) {\n            return 'application';\n        }\n        /** @type {?} */\n        let extension = chunks[chunks.length - 1].toLowerCase();\n        if (types[extension] === undefined) {\n            return 'application';\n        }\n        else {\n            return types[extension];\n        }\n    }\n}\n/*  MS office  */\nFileType.mime_doc = [\n    'application/msword',\n    'application/msword',\n    'application/vnd.openxmlformats-officedocument.wordprocessingml.document',\n    'application/vnd.openxmlformats-officedocument.wordprocessingml.template',\n    'application/vnd.ms-word.document.macroEnabled.12',\n    'application/vnd.ms-word.template.macroEnabled.12'\n];\nFileType.mime_xsl = [\n    'application/vnd.ms-excel',\n    'application/vnd.ms-excel',\n    'application/vnd.ms-excel',\n    'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\n    'application/vnd.openxmlformats-officedocument.spreadsheetml.template',\n    'application/vnd.ms-excel.sheet.macroEnabled.12',\n    'application/vnd.ms-excel.template.macroEnabled.12',\n    'application/vnd.ms-excel.addin.macroEnabled.12',\n    'application/vnd.ms-excel.sheet.binary.macroEnabled.12'\n];\nFileType.mime_ppt = [\n    'application/vnd.ms-powerpoint',\n    'application/vnd.ms-powerpoint',\n    'application/vnd.ms-powerpoint',\n    'application/vnd.ms-powerpoint',\n    'application/vnd.openxmlformats-officedocument.presentationml.presentation',\n    'application/vnd.openxmlformats-officedocument.presentationml.template',\n    'application/vnd.openxmlformats-officedocument.presentationml.slideshow',\n    'application/vnd.ms-powerpoint.addin.macroEnabled.12',\n    'application/vnd.ms-powerpoint.presentation.macroEnabled.12',\n    'application/vnd.ms-powerpoint.presentation.macroEnabled.12',\n    'application/vnd.ms-powerpoint.slideshow.macroEnabled.12'\n];\n/* PSD */\nFileType.mime_psd = [\n    'image/photoshop',\n    'image/x-photoshop',\n    'image/psd',\n    'application/photoshop',\n    'application/psd',\n    'zz-application/zz-winassoc-psd'\n];\n/* Compressed files */\nFileType.mime_compress = [\n    'application/x-gtar',\n    'application/x-gcompress',\n    'application/compress',\n    'application/x-tar',\n    'application/x-rar-compressed',\n    'application/octet-stream',\n    'application/x-zip-compressed',\n    'application/zip-compressed',\n    'application/x-7z-compressed',\n    'application/gzip',\n    'application/x-bzip2'\n];\nif (false) {\n    /** @type {?} */\n    FileType.mime_doc;\n    /** @type {?} */\n    FileType.mime_xsl;\n    /** @type {?} */\n    FileType.mime_ppt;\n    /** @type {?} */\n    FileType.mime_psd;\n    /** @type {?} */\n    FileType.mime_compress;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @param {?} value\n * @return {?}\n */\nfunction isFile(value) {\n    return (File && value instanceof File);\n}\n/**\n * @record\n */\nfunction Headers() { }\nif (false) {\n    /** @type {?} */\n    Headers.prototype.name;\n    /** @type {?} */\n    Headers.prototype.value;\n}\n/**\n * @record\n */\nfunction FileUploaderOptions() { }\nif (false) {\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.allowedMimeType;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.allowedFileType;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.autoUpload;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.isHTML5;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.filters;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.headers;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.method;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.authToken;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.maxFileSize;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.queueLimit;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.removeAfterUpload;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.url;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.disableMultipart;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.itemAlias;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.authTokenHeader;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.additionalParameter;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.parametersBeforeFiles;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.formatDataFunction;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.formatDataFunctionIsAsync;\n}\nclass FileUploader {\n    /**\n     * @param {?} options\n     */\n    constructor(options) {\n        this.isUploading = false;\n        this.queue = [];\n        this.progress = 0;\n        this._nextIndex = 0;\n        this.options = {\n            autoUpload: false,\n            isHTML5: true,\n            filters: [],\n            removeAfterUpload: false,\n            disableMultipart: false,\n            formatDataFunction: (/**\n             * @param {?} item\n             * @return {?}\n             */\n            (item) => item._file),\n            formatDataFunctionIsAsync: false\n        };\n        this.setOptions(options);\n        this.response = new EventEmitter();\n    }\n    /**\n     * @param {?} options\n     * @return {?}\n     */\n    setOptions(options) {\n        this.options = Object.assign(this.options, options);\n        this.authToken = this.options.authToken;\n        this.authTokenHeader = this.options.authTokenHeader || 'Authorization';\n        this.autoUpload = this.options.autoUpload;\n        this.options.filters.unshift({ name: 'queueLimit', fn: this._queueLimitFilter });\n        if (this.options.maxFileSize) {\n            this.options.filters.unshift({ name: 'fileSize', fn: this._fileSizeFilter });\n        }\n        if (this.options.allowedFileType) {\n            this.options.filters.unshift({ name: 'fileType', fn: this._fileTypeFilter });\n        }\n        if (this.options.allowedMimeType) {\n            this.options.filters.unshift({ name: 'mimeType', fn: this._mimeTypeFilter });\n        }\n        for (let i = 0; i < this.queue.length; i++) {\n            this.queue[i].url = this.options.url;\n        }\n    }\n    /**\n     * @param {?} files\n     * @param {?=} options\n     * @param {?=} filters\n     * @return {?}\n     */\n    addToQueue(files, options, filters) {\n        /** @type {?} */\n        let list = [];\n        for (let file of files) {\n            list.push(file);\n        }\n        /** @type {?} */\n        let arrayOfFilters = this._getFilters(filters);\n        /** @type {?} */\n        let count = this.queue.length;\n        /** @type {?} */\n        let addedFileItems = [];\n        list.map((/**\n         * @param {?} some\n         * @return {?}\n         */\n        (some) => {\n            if (!options) {\n                options = this.options;\n            }\n            /** @type {?} */\n            let temp = new FileLikeObject(some);\n            if (this._isValidFile(temp, arrayOfFilters, options)) {\n                /** @type {?} */\n                let fileItem = new FileItem(this, some, options);\n                addedFileItems.push(fileItem);\n                this.queue.push(fileItem);\n                this._onAfterAddingFile(fileItem);\n            }\n            else {\n                /** @type {?} */\n                let filter = arrayOfFilters[this._failFilterIndex];\n                this._onWhenAddingFileFailed(temp, filter, options);\n            }\n        }));\n        if (this.queue.length !== count) {\n            this._onAfterAddingAll(addedFileItems);\n            this.progress = this._getTotalProgress();\n        }\n        this._render();\n        if (this.options.autoUpload) {\n            this.uploadAll();\n        }\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    removeFromQueue(value) {\n        /** @type {?} */\n        let index = this.getIndexOfItem(value);\n        /** @type {?} */\n        let item = this.queue[index];\n        if (item.isUploading) {\n            item.cancel();\n        }\n        this.queue.splice(index, 1);\n        this.progress = this._getTotalProgress();\n    }\n    /**\n     * @return {?}\n     */\n    clearQueue() {\n        while (this.queue.length) {\n            this.queue[0].remove();\n        }\n        this.progress = 0;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    uploadItem(value) {\n        /** @type {?} */\n        let index = this.getIndexOfItem(value);\n        /** @type {?} */\n        let item = this.queue[index];\n        /** @type {?} */\n        let transport = this.options.isHTML5 ? '_xhrTransport' : '_iframeTransport';\n        item._prepareToUploading();\n        if (this.isUploading) {\n            return;\n        }\n        this.isUploading = true;\n        ((/** @type {?} */ (this)))[transport](item);\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    cancelItem(value) {\n        /** @type {?} */\n        let index = this.getIndexOfItem(value);\n        /** @type {?} */\n        let item = this.queue[index];\n        /** @type {?} */\n        let prop = this.options.isHTML5 ? item._xhr : item._form;\n        if (item && item.isUploading) {\n            prop.abort();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    uploadAll() {\n        /** @type {?} */\n        let items = this.getNotUploadedItems().filter((/**\n         * @param {?} item\n         * @return {?}\n         */\n        (item) => !item.isUploading));\n        if (!items.length) {\n            return;\n        }\n        items.map((/**\n         * @param {?} item\n         * @return {?}\n         */\n        (item) => item._prepareToUploading()));\n        items[0].upload();\n    }\n    /**\n     * @return {?}\n     */\n    cancelAll() {\n        /** @type {?} */\n        let items = this.getNotUploadedItems();\n        items.map((/**\n         * @param {?} item\n         * @return {?}\n         */\n        (item) => item.cancel()));\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    isFile(value) {\n        return isFile(value);\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    isFileLikeObject(value) {\n        return value instanceof FileLikeObject;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    getIndexOfItem(value) {\n        return typeof value === 'number' ? value : this.queue.indexOf(value);\n    }\n    /**\n     * @return {?}\n     */\n    getNotUploadedItems() {\n        return this.queue.filter((/**\n         * @param {?} item\n         * @return {?}\n         */\n        (item) => !item.isUploaded));\n    }\n    /**\n     * @return {?}\n     */\n    getReadyItems() {\n        return this.queue\n            .filter((/**\n         * @param {?} item\n         * @return {?}\n         */\n        (item) => (item.isReady && !item.isUploading)))\n            .sort((/**\n         * @param {?} item1\n         * @param {?} item2\n         * @return {?}\n         */\n        (item1, item2) => item1.index - item2.index));\n    }\n    /**\n     * @return {?}\n     */\n    destroy() {\n        return void 0;\n    }\n    /**\n     * @param {?} fileItems\n     * @return {?}\n     */\n    onAfterAddingAll(fileItems) {\n        return { fileItems };\n    }\n    /**\n     * @param {?} fileItem\n     * @param {?} form\n     * @return {?}\n     */\n    onBuildItemForm(fileItem, form) {\n        return { fileItem, form };\n    }\n    /**\n     * @param {?} fileItem\n     * @return {?}\n     */\n    onAfterAddingFile(fileItem) {\n        return { fileItem };\n    }\n    /**\n     * @param {?} item\n     * @param {?} filter\n     * @param {?} options\n     * @return {?}\n     */\n    onWhenAddingFileFailed(item, filter, options) {\n        return { item, filter, options };\n    }\n    /**\n     * @param {?} fileItem\n     * @return {?}\n     */\n    onBeforeUploadItem(fileItem) {\n        return { fileItem };\n    }\n    /**\n     * @param {?} fileItem\n     * @param {?} progress\n     * @return {?}\n     */\n    onProgressItem(fileItem, progress) {\n        return { fileItem, progress };\n    }\n    /**\n     * @param {?} progress\n     * @return {?}\n     */\n    onProgressAll(progress) {\n        return { progress };\n    }\n    /**\n     * @param {?} item\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n    onSuccessItem(item, response, status, headers) {\n        return { item, response, status, headers };\n    }\n    /**\n     * @param {?} item\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n    onErrorItem(item, response, status, headers) {\n        return { item, response, status, headers };\n    }\n    /**\n     * @param {?} item\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n    onCancelItem(item, response, status, headers) {\n        return { item, response, status, headers };\n    }\n    /**\n     * @param {?} item\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n    onCompleteItem(item, response, status, headers) {\n        return { item, response, status, headers };\n    }\n    /**\n     * @return {?}\n     */\n    onCompleteAll() {\n        return void 0;\n    }\n    /**\n     * @param {?} item\n     * @return {?}\n     */\n    _mimeTypeFilter(item) {\n        return !(this.options.allowedMimeType && this.options.allowedMimeType.indexOf(item.type) === -1);\n    }\n    /**\n     * @param {?} item\n     * @return {?}\n     */\n    _fileSizeFilter(item) {\n        return !(this.options.maxFileSize && item.size > this.options.maxFileSize);\n    }\n    /**\n     * @param {?} item\n     * @return {?}\n     */\n    _fileTypeFilter(item) {\n        return !(this.options.allowedFileType &&\n            this.options.allowedFileType.indexOf(FileType.getMimeClass(item)) === -1);\n    }\n    /**\n     * @param {?} item\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n    _onErrorItem(item, response, status, headers) {\n        item._onError(response, status, headers);\n        this.onErrorItem(item, response, status, headers);\n    }\n    /**\n     * @param {?} item\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n    _onCompleteItem(item, response, status, headers) {\n        item._onComplete(response, status, headers);\n        this.onCompleteItem(item, response, status, headers);\n        /** @type {?} */\n        let nextItem = this.getReadyItems()[0];\n        this.isUploading = false;\n        if (nextItem) {\n            nextItem.upload();\n            return;\n        }\n        this.onCompleteAll();\n        this.progress = this._getTotalProgress();\n        this._render();\n    }\n    /**\n     * @protected\n     * @param {?} parsedHeaders\n     * @return {?}\n     */\n    _headersGetter(parsedHeaders) {\n        return (/**\n         * @param {?} name\n         * @return {?}\n         */\n        (name) => {\n            if (name) {\n                return parsedHeaders[name.toLowerCase()] || void 0;\n            }\n            return parsedHeaders;\n        });\n    }\n    /**\n     * @protected\n     * @param {?} item\n     * @return {?}\n     */\n    _xhrTransport(item) {\n        /** @type {?} */\n        let that = this;\n        /** @type {?} */\n        let xhr = item._xhr = new XMLHttpRequest();\n        /** @type {?} */\n        let sendable;\n        this._onBeforeUploadItem(item);\n        if (typeof item._file.size !== 'number') {\n            throw new TypeError('The file specified is no longer valid');\n        }\n        if (!this.options.disableMultipart) {\n            sendable = new FormData();\n            this._onBuildItemForm(item, sendable);\n            /** @type {?} */\n            const appendFile = (/**\n             * @return {?}\n             */\n            () => sendable.append(item.alias, item._file, item.file.name));\n            if (!this.options.parametersBeforeFiles) {\n                appendFile();\n            }\n            // For AWS, Additional Parameters must come BEFORE Files\n            if (this.options.additionalParameter !== undefined) {\n                Object.keys(this.options.additionalParameter).forEach((/**\n                 * @param {?} key\n                 * @return {?}\n                 */\n                (key) => {\n                    /** @type {?} */\n                    let paramVal = this.options.additionalParameter[key];\n                    // Allow an additional parameter to include the filename\n                    if (typeof paramVal === 'string' && paramVal.indexOf('{{file_name}}') >= 0) {\n                        paramVal = paramVal.replace('{{file_name}}', item.file.name);\n                    }\n                    sendable.append(key, paramVal);\n                }));\n            }\n            if (this.options.parametersBeforeFiles) {\n                appendFile();\n            }\n        }\n        else {\n            sendable = this.options.formatDataFunction(item);\n        }\n        xhr.upload.onprogress = (/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            /** @type {?} */\n            let progress = Math.round(event.lengthComputable ? event.loaded * 100 / event.total : 0);\n            this._onProgressItem(item, progress);\n        });\n        xhr.onload = (/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            let headers = this._parseHeaders(xhr.getAllResponseHeaders());\n            /** @type {?} */\n            let response = this._transformResponse(xhr.response, headers);\n            /** @type {?} */\n            let gist = this._isSuccessCode(xhr.status) ? 'Success' : 'Error';\n            /** @type {?} */\n            let method = '_on' + gist + 'Item';\n            ((/** @type {?} */ (this)))[method](item, response, xhr.status, headers);\n            this._onCompleteItem(item, response, xhr.status, headers);\n        });\n        xhr.onerror = (/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            let headers = this._parseHeaders(xhr.getAllResponseHeaders());\n            /** @type {?} */\n            let response = this._transformResponse(xhr.response, headers);\n            this._onErrorItem(item, response, xhr.status, headers);\n            this._onCompleteItem(item, response, xhr.status, headers);\n        });\n        xhr.onabort = (/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            let headers = this._parseHeaders(xhr.getAllResponseHeaders());\n            /** @type {?} */\n            let response = this._transformResponse(xhr.response, headers);\n            this._onCancelItem(item, response, xhr.status, headers);\n            this._onCompleteItem(item, response, xhr.status, headers);\n        });\n        xhr.open(item.method, item.url, true);\n        xhr.withCredentials = item.withCredentials;\n        if (this.options.headers) {\n            for (let header of this.options.headers) {\n                xhr.setRequestHeader(header.name, header.value);\n            }\n        }\n        if (item.headers.length) {\n            for (let header of item.headers) {\n                xhr.setRequestHeader(header.name, header.value);\n            }\n        }\n        if (this.authToken) {\n            xhr.setRequestHeader(this.authTokenHeader, this.authToken);\n        }\n        xhr.onreadystatechange = (/**\n         * @return {?}\n         */\n        function () {\n            if (xhr.readyState == XMLHttpRequest.DONE) {\n                that.response.emit(xhr.responseText);\n            }\n        });\n        if (this.options.formatDataFunctionIsAsync) {\n            sendable.then((/**\n             * @param {?} result\n             * @return {?}\n             */\n            (result) => xhr.send(JSON.stringify(result))));\n        }\n        else {\n            xhr.send(sendable);\n        }\n        this._render();\n    }\n    /**\n     * @protected\n     * @param {?=} value\n     * @return {?}\n     */\n    _getTotalProgress(value = 0) {\n        if (this.options.removeAfterUpload) {\n            return value;\n        }\n        /** @type {?} */\n        let notUploaded = this.getNotUploadedItems().length;\n        /** @type {?} */\n        let uploaded = notUploaded ? this.queue.length - notUploaded : this.queue.length;\n        /** @type {?} */\n        let ratio = 100 / this.queue.length;\n        /** @type {?} */\n        let current = value * ratio / 100;\n        return Math.round(uploaded * ratio + current);\n    }\n    /**\n     * @protected\n     * @param {?} filters\n     * @return {?}\n     */\n    _getFilters(filters) {\n        if (!filters) {\n            return this.options.filters;\n        }\n        if (Array.isArray(filters)) {\n            return filters;\n        }\n        if (typeof filters === 'string') {\n            /** @type {?} */\n            let names = filters.match(/[^\\s,]+/g);\n            return this.options.filters\n                .filter((/**\n             * @param {?} filter\n             * @return {?}\n             */\n            (filter) => names.indexOf(filter.name) !== -1));\n        }\n        return this.options.filters;\n    }\n    /**\n     * @protected\n     * @return {?}\n     */\n    _render() {\n        return void 0;\n    }\n    /**\n     * @protected\n     * @return {?}\n     */\n    _queueLimitFilter() {\n        return this.options.queueLimit === undefined || this.queue.length < this.options.queueLimit;\n    }\n    /**\n     * @protected\n     * @param {?} file\n     * @param {?} filters\n     * @param {?} options\n     * @return {?}\n     */\n    _isValidFile(file, filters, options) {\n        this._failFilterIndex = -1;\n        return !filters.length ? true : filters.every((/**\n         * @param {?} filter\n         * @return {?}\n         */\n        (filter) => {\n            this._failFilterIndex++;\n            return filter.fn.call(this, file, options);\n        }));\n    }\n    /**\n     * @protected\n     * @param {?} status\n     * @return {?}\n     */\n    _isSuccessCode(status) {\n        return (status >= 200 && status < 300) || status === 304;\n    }\n    /**\n     * @protected\n     * @param {?} response\n     * @param {?} headers\n     * @return {?}\n     */\n    _transformResponse(response, headers) {\n        return response;\n    }\n    /**\n     * @protected\n     * @param {?} headers\n     * @return {?}\n     */\n    _parseHeaders(headers) {\n        /** @type {?} */\n        let parsed = {};\n        /** @type {?} */\n        let key;\n        /** @type {?} */\n        let val;\n        /** @type {?} */\n        let i;\n        if (!headers) {\n            return parsed;\n        }\n        headers.split('\\n').map((/**\n         * @param {?} line\n         * @return {?}\n         */\n        (line) => {\n            i = line.indexOf(':');\n            key = line.slice(0, i).trim().toLowerCase();\n            val = line.slice(i + 1).trim();\n            if (key) {\n                parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n            }\n        }));\n        return parsed;\n    }\n    /**\n     * @protected\n     * @param {?} item\n     * @param {?} filter\n     * @param {?} options\n     * @return {?}\n     */\n    _onWhenAddingFileFailed(item, filter, options) {\n        this.onWhenAddingFileFailed(item, filter, options);\n    }\n    /**\n     * @protected\n     * @param {?} item\n     * @return {?}\n     */\n    _onAfterAddingFile(item) {\n        this.onAfterAddingFile(item);\n    }\n    /**\n     * @protected\n     * @param {?} items\n     * @return {?}\n     */\n    _onAfterAddingAll(items) {\n        this.onAfterAddingAll(items);\n    }\n    /**\n     * @protected\n     * @param {?} item\n     * @return {?}\n     */\n    _onBeforeUploadItem(item) {\n        item._onBeforeUpload();\n        this.onBeforeUploadItem(item);\n    }\n    /**\n     * @protected\n     * @param {?} item\n     * @param {?} form\n     * @return {?}\n     */\n    _onBuildItemForm(item, form) {\n        item._onBuildForm(form);\n        this.onBuildItemForm(item, form);\n    }\n    /**\n     * @protected\n     * @param {?} item\n     * @param {?} progress\n     * @return {?}\n     */\n    _onProgressItem(item, progress) {\n        /** @type {?} */\n        let total = this._getTotalProgress(progress);\n        this.progress = total;\n        item._onProgress(progress);\n        this.onProgressItem(item, progress);\n        this.onProgressAll(total);\n        this._render();\n    }\n    /**\n     * @protected\n     * @param {?} item\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n    _onSuccessItem(item, response, status, headers) {\n        item._onSuccess(response, status, headers);\n        this.onSuccessItem(item, response, status, headers);\n    }\n    /**\n     * @protected\n     * @param {?} item\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n    _onCancelItem(item, response, status, headers) {\n        item._onCancel(response, status, headers);\n        this.onCancelItem(item, response, status, headers);\n    }\n}\nif (false) {\n    /** @type {?} */\n    FileUploader.prototype.authToken;\n    /** @type {?} */\n    FileUploader.prototype.isUploading;\n    /** @type {?} */\n    FileUploader.prototype.queue;\n    /** @type {?} */\n    FileUploader.prototype.progress;\n    /** @type {?} */\n    FileUploader.prototype._nextIndex;\n    /** @type {?} */\n    FileUploader.prototype.autoUpload;\n    /** @type {?} */\n    FileUploader.prototype.authTokenHeader;\n    /** @type {?} */\n    FileUploader.prototype.response;\n    /** @type {?} */\n    FileUploader.prototype.options;\n    /**\n     * @type {?}\n     * @protected\n     */\n    FileUploader.prototype._failFilterIndex;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass FileSelectDirective {\n    /**\n     * @param {?} element\n     */\n    constructor(element) {\n        this.onFileSelected = new EventEmitter();\n        this.element = element;\n    }\n    /**\n     * @return {?}\n     */\n    getOptions() {\n        return this.uploader.options;\n    }\n    /**\n     * @return {?}\n     */\n    getFilters() {\n        return {};\n    }\n    /**\n     * @return {?}\n     */\n    isEmptyAfterSelection() {\n        return !!this.element.nativeElement.attributes.multiple;\n    }\n    /**\n     * @return {?}\n     */\n    onChange() {\n        /** @type {?} */\n        let files = this.element.nativeElement.files;\n        /** @type {?} */\n        let options = this.getOptions();\n        /** @type {?} */\n        let filters = this.getFilters();\n        this.uploader.addToQueue(files, options, filters);\n        this.onFileSelected.emit(files);\n        if (this.isEmptyAfterSelection()) {\n            this.element.nativeElement.value = '';\n        }\n    }\n}\nFileSelectDirective.decorators = [\n    { type: Directive, args: [{ selector: '[ng2FileSelect]' },] }\n];\n/** @nocollapse */\nFileSelectDirective.ctorParameters = () => [\n    { type: ElementRef }\n];\nFileSelectDirective.propDecorators = {\n    uploader: [{ type: Input }],\n    onFileSelected: [{ type: Output }],\n    onChange: [{ type: HostListener, args: ['change',] }]\n};\nif (false) {\n    /** @type {?} */\n    FileSelectDirective.prototype.uploader;\n    /** @type {?} */\n    FileSelectDirective.prototype.onFileSelected;\n    /**\n     * @type {?}\n     * @protected\n     */\n    FileSelectDirective.prototype.element;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass FileDropDirective {\n    /**\n     * @param {?} element\n     */\n    constructor(element) {\n        this.fileOver = new EventEmitter();\n        this.onFileDrop = new EventEmitter();\n        this.element = element;\n    }\n    /**\n     * @return {?}\n     */\n    getOptions() {\n        return this.uploader.options;\n    }\n    /**\n     * @return {?}\n     */\n    getFilters() {\n        return {};\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onDrop(event) {\n        /** @type {?} */\n        let transfer = this._getTransfer(event);\n        if (!transfer) {\n            return;\n        }\n        /** @type {?} */\n        let options = this.getOptions();\n        /** @type {?} */\n        let filters = this.getFilters();\n        this._preventAndStop(event);\n        this.uploader.addToQueue(transfer.files, options, filters);\n        this.fileOver.emit(false);\n        this.onFileDrop.emit(transfer.files);\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onDragOver(event) {\n        /** @type {?} */\n        let transfer = this._getTransfer(event);\n        if (!this._haveFiles(transfer.types)) {\n            return;\n        }\n        transfer.dropEffect = 'copy';\n        this._preventAndStop(event);\n        this.fileOver.emit(true);\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onDragLeave(event) {\n        if (((/** @type {?} */ (this))).element) {\n            if (event.currentTarget === ((/** @type {?} */ (this))).element[0]) {\n                return;\n            }\n        }\n        this._preventAndStop(event);\n        this.fileOver.emit(false);\n    }\n    /**\n     * @protected\n     * @param {?} event\n     * @return {?}\n     */\n    _getTransfer(event) {\n        return event.dataTransfer ? event.dataTransfer : event.originalEvent.dataTransfer; // jQuery fix;\n    }\n    /**\n     * @protected\n     * @param {?} event\n     * @return {?}\n     */\n    _preventAndStop(event) {\n        event.preventDefault();\n        event.stopPropagation();\n    }\n    /**\n     * @protected\n     * @param {?} types\n     * @return {?}\n     */\n    _haveFiles(types) {\n        if (!types) {\n            return false;\n        }\n        if (types.indexOf) {\n            return types.indexOf('Files') !== -1;\n        }\n        else if (types.contains) {\n            return types.contains('Files');\n        }\n        else {\n            return false;\n        }\n    }\n}\nFileDropDirective.decorators = [\n    { type: Directive, args: [{ selector: '[ng2FileDrop]' },] }\n];\n/** @nocollapse */\nFileDropDirective.ctorParameters = () => [\n    { type: ElementRef }\n];\nFileDropDirective.propDecorators = {\n    uploader: [{ type: Input }],\n    fileOver: [{ type: Output }],\n    onFileDrop: [{ type: Output }],\n    onDrop: [{ type: HostListener, args: ['drop', ['$event'],] }],\n    onDragOver: [{ type: HostListener, args: ['dragover', ['$event'],] }],\n    onDragLeave: [{ type: HostListener, args: ['dragleave', ['$event'],] }]\n};\nif (false) {\n    /** @type {?} */\n    FileDropDirective.prototype.uploader;\n    /** @type {?} */\n    FileDropDirective.prototype.fileOver;\n    /** @type {?} */\n    FileDropDirective.prototype.onFileDrop;\n    /**\n     * @type {?}\n     * @protected\n     */\n    FileDropDirective.prototype.element;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass FileUploadModule {\n}\nFileUploadModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [CommonModule],\n                declarations: [FileDropDirective, FileSelectDirective],\n                exports: [FileDropDirective, FileSelectDirective]\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { FileDropDirective, FileItem, FileLikeObject, FileSelectDirective, FileUploadModule, FileUploader };\n//# sourceMappingURL=ng2-file-upload.js.map\n","export default \"<mat-toolbar color=\\\"primary\\\" style=\\\"height:30px; font-size: small;\\\">\\r\\n    <span>Add System</span>\\r\\n</mat-toolbar>\\r\\n<br>\\r\\n   \\r\\n<mat-card *ngIf=\\\"!hideBasic\\\" class=\\\"baiscInfocard\\\">\\r\\n    <form  #basicForm=\\\"ngForm\\\">\\r\\n        <div fxLayoutAlign=\\\"center stretch\\\"><b>System Information</b></div>\\r\\n        <br>\\r\\n        <div fxLayout=\\\"row wrap\\\">\\r\\n            <div fxFlex=\\\"100\\\">\\r\\n\\r\\n                <div fxFlex=\\\"15\\\"></div>\\r\\n                <div fxFlex=\\\"30\\\">\\r\\n                    <div>\\r\\n                        <mat-form-field appearance=\\\"outline\\\">\\r\\n                            <mat-label>Code</mat-label>\\r\\n                            <input type=\\\"text\\\" matInput name=\\\"code\\\"\\r\\n                             #code #code=\\\"ngModel\\\" required [disabled]=\\\"clickedFinishButton\\\"\\r\\n                           \\r\\n                                [(ngModel)]=\\\"addSysBasic.systemCode\\\" \\r\\n                                [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n                            <mat-hint *ngIf=\\\"isSysCodeAlreadyExist? true : false\\\" class=\\\"red\\\">{{sysCodeError}}</mat-hint>\\r\\n                        </mat-form-field>\\r\\n                    </div>\\r\\n                    <div>\\r\\n                        <mat-form-field appearance=\\\"outline\\\">\\r\\n                            <mat-label>Type</mat-label>\\r\\n                            <!-- <input type=\\\"text\\\" matInput name=\\\"type\\\" #type #type=\\\"ngModel\\\" [(ngModel)]=\\\"createExtSys1.type\\\" [ngModelOptions]=\\\"{standalone: true}\\\"> -->\\r\\n                            <mat-select name=\\\"type\\\" #type #type=\\\"ngModel\\\" type=\\\"text\\\" required\\r\\n                             [(ngModel)]=\\\"addSysBasic.serviceType\\\" [disabled]=\\\"clickedFinishButton\\\"\\r\\n                               >\\r\\n                                <mat-option value=\\\"server\\\">Server</mat-option>\\r\\n                                <mat-option value=\\\"client\\\">Client</mat-option>\\r\\n                            </mat-select>\\r\\n                        </mat-form-field>\\r\\n                    </div>\\r\\n                    <div>\\r\\n                        <mat-form-field appearance=\\\"outline\\\">\\r\\n                            <mat-label>External IP</mat-label>\\r\\n                            <input type=\\\"text\\\" matInput \\r\\n                            required name=\\\"sourceIp\\\" #sourceIp #sourceIp=\\\"ngModel\\\"  (blur)=\\\"isValidIpv4Addr1($event)\\\"\\r\\n                            [(ngModel)]=\\\"addSysBasic.sourceIp\\\" [disabled]=\\\"clickedFinishButton\\\">\\r\\n                        </mat-form-field>\\r\\n                        <mat-error *ngIf=\\\"!invalidIp1\\\" style=\\\"margin-top:-10%;font-size:12px;\\\"> \\r\\n                            IP Address is not valid.\\r\\n                         </mat-error> \\r\\n                    </div>\\r\\n                    <div>\\r\\n                        \\r\\n                        <mat-form-field appearance=\\\"outline\\\">\\r\\n                            <mat-label>Median IP</mat-label>\\r\\n                            <input type=\\\"text\\\" matInput\\r\\n                             name=\\\"medianIp\\\" #medianIp #medianIp=\\\"ngModel\\\" required\\r\\n                                [(ngModel)]=\\\"addSysBasic.medianIp\\\"  (blur)=\\\"isValidIpv4Addr($event)\\\"  [disabled]=\\\"clickedFinishButton\\\">\\r\\n                        </mat-form-field>\\r\\n                        <mat-error *ngIf=\\\"!invalidIp \\\" style=\\\"margin-top:-10%;font-size:12px;\\\"> \\r\\n                           IP Address is not valid.\\r\\n                        </mat-error> \\r\\n                    </div>\\r\\n                </div>\\r\\n                <div fxFlex=\\\"5\\\"></div>\\r\\n                <div fxFlex=\\\"30\\\">\\r\\n                    <div>\\r\\n                        <mat-form-field appearance=\\\"outline\\\">\\r\\n                            <mat-label>Name</mat-label>\\r\\n                            <input type=\\\"text\\\" \\r\\n                            required matInput name=\\\"systemName\\\" #systemName #systemName=\\\"ngModel\\\"\\r\\n                                [(ngModel)]=\\\"addSysBasic.systemName\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [disabled]=\\\"clickedFinishButton\\\">\\r\\n                        </mat-form-field>\\r\\n                    </div>\\r\\n                    <div>\\r\\n                        <mat-form-field appearance=\\\"outline\\\">\\r\\n                            <mat-label>Message Type</mat-label>\\r\\n                            <mat-select disableOptionCentering [disabled]=\\\"clickedFinishButton\\\" (selectionChange)=\\\"onsystemMessageSelection($event.value)\\\" #messsageType #messsageType=\\\"ngModel\\\"\\r\\n                            [(ngModel)]=\\\"addSysBasic.messsageType\\\" name=\\\"messsageType\\\" type=\\\"text\\\" required\\r\\n                               >\\r\\n                                <mat-option value=\\\"null\\\">--Please select--</mat-option>\\r\\n                                <mat-option value=\\\"I\\\">Incoming\\r\\n                                </mat-option>\\r\\n                                <mat-option value=\\\"O\\\">Outgoing\\r\\n                                </mat-option>\\r\\n                                <mat-option value=\\\"A\\\">All</mat-option>\\r\\n                            </mat-select>\\r\\n                        </mat-form-field>\\r\\n                    </div>\\r\\n                    <div>\\r\\n                        <mat-form-field appearance=\\\"outline\\\">\\r\\n                            <mat-label>External Port</mat-label>\\r\\n                            <input type=\\\"text\\\" minlength=\\\"2\\\" maxlength=\\\"4\\\" matInput name=\\\"sourcePort\\\"\\r\\n                             #sourcePort #sPort=\\\"ngModel\\\" required [disabled]=\\\"clickedFinishButton\\\"\\r\\n                            [(ngModel)]=\\\"addSysBasic.sourcePort\\\" (keypress)=\\\"allowNumbersOnly($event)\\\">\\r\\n                        </mat-form-field>\\r\\n                        <mat-error *ngIf=\\\"sPort.errors?.minlength\\\" style=\\\"margin-top:-10%;font-size: 12px;\\\">\\r\\n                            External Port must be at least 2 numbers.\\r\\n                        </mat-error> \\r\\n                    </div>\\r\\n                    <div>\\r\\n                        <mat-form-field appearance=\\\"outline\\\">\\r\\n                            <mat-label>Median Port</mat-label>\\r\\n                            <input type=\\\"text\\\" minlength=\\\"2\\\" maxlength=\\\"4\\\" matInput name=\\\"medianPort\\\" \\r\\n                            #medianPort #mPort=\\\"ngModel\\\" required [disabled]=\\\"clickedFinishButton\\\"\\r\\n                                [(ngModel)]=\\\"addSysBasic.medianPort\\\" (keypress)=\\\"allowNumbersOnly($event)\\\">\\r\\n                        </mat-form-field>\\r\\n                        <mat-error *ngIf=\\\"mPort.errors?.minlength\\\" style=\\\"margin-top:-10%;font-size: 12px;\\\">\\r\\n                            Median Port must be at least 2 numbers.\\r\\n                        </mat-error> \\r\\n                    </div>\\r\\n                </div>\\r\\n                <div fxFlex=\\\"10\\\"></div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div fxLayout=\\\"row wrap\\\">\\r\\n            <div fxFlex=\\\"40\\\"></div>\\r\\n            <div fxLayoutAlign=\\\"center stretch\\\" fxLayoutGap=\\\"10px\\\">\\r\\n                <button mat-raised-button  [disabled]=\\\"!basicForm.valid || !invalidIp || !invalidIp1 ||addSysBasic.messsageType=='null'\\\"\\r\\n                (click)=\\\"onNextOfBasicInfo()\\\" color=\\\"primary\\\"\\r\\n\\r\\n                   >Next</button>\\r\\n                   <!--  -->\\r\\n\\r\\n               \\r\\n               \\r\\n                <button mat-raised-button type=\\\"reset\\\" color=\\\"warn\\\" (click)=\\\"onResetOfBasicInfo()\\\">Reset</button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </form>\\r\\n</mat-card>\\r\\n<div *ngIf=\\\"showProgressbar\\\">\\r\\n<mat-progress-bar mode=\\\"indeterminate\\\" *ngIf=\\\"showProgressbar\\\"></mat-progress-bar>\\r\\n<p style=\\\"color: red\\\">Fetching Record... Please wait...</p>\\r\\n</div>\\r\\n<!-- Protocol screen For Both Incoming and outgoing-->\\r\\n<mat-card *ngIf=\\\"showProtocol\\\" style=\\\"width:83%;margin-left:10%\\\">\\r\\n    <form #protocol1=\\\"ngForm\\\">\\r\\n        <div fxLayout=\\\"row wrap\\\">\\r\\n                <div fxFlex=\\\"100\\\">\\r\\n                    \\r\\n                        <!-- <div fxFlex=\\\"30\\\"></div> -->\\r\\n                    <!-- <div fxFlex=\\\"80\\\"> -->\\r\\n                        <h5 style=\\\"text-align: center\\\">{{msgType}} Message Configuration</h5>\\r\\n                    <!-- </div> -->\\r\\n                </div>\\r\\n            </div>\\r\\n            <div fxLayout=\\\"column wrap\\\" >\\r\\n                    <div fxFlex=\\\"100\\\">\\r\\n                            <div fxFlex=\\\"30\\\"></div>\\r\\n                        <div fxFlex=\\\"40\\\">\\r\\n                            <mat-form-field appearance=\\\"outline\\\">\\r\\n                                <mat-label>{{msgType}} Message Protocol</mat-label>\\r\\n                                <mat-select #protocolRef [(ngModel)]=\\\"protocolForBothIncOut.messageChannel\\\"\\r\\n                                    (selectionChange)=\\\"onProtocalSlection(protocolForBothIncOut.messageChannel)\\\"\\r\\n                                    name=\\\"messageChannel\\\"\\r\\n                                    required [disabled]=\\\"clickedFinishButton\\\"\\r\\n                                    (optionSelected)=\\\"onProtocalSlection(protocolForBothIncOut.messageChannel)\\\">\\r\\n                                    <mat-option value=\\\" \\\">--Please select--</mat-option>\\r\\n                                    <mat-option value=\\\"TCP/IP\\\">TCP/IP</mat-option>\\r\\n                                    <mat-option value=\\\"Https/Http\\\">HTTPS/HTTP\\r\\n                                    </mat-option>\\r\\n                                    <mat-option value=\\\"MDB\\\">MDB</mat-option>\\r\\n                                    <mat-option value=\\\"EJB\\\">EJB</mat-option>\\r\\n                                    <mat-option value=\\\"DB Connection\\\">DB Connection\\r\\n                                    </mat-option>\\r\\n                                </mat-select>\\r\\n                            </mat-form-field>\\r\\n                        </div>\\r\\n            \\r\\n                    </div>\\r\\n                    <div fxFlex=\\\"100\\\">\\r\\n                            <div fxFlex=\\\"30\\\"></div>\\r\\n                        <div fxFlex=\\\"40\\\">\\r\\n                            <mat-form-field appearance=\\\"outline\\\">\\r\\n                                <mat-label>Data Type </mat-label>\\r\\n                                <!-- <p>Jaya1</p> -->\\r\\n                                <mat-select \\r\\n                                [(ngModel)]=\\\"protocolForBothIncOut.messageFormat\\\" name=\\\"messageFormat\\\"\\r\\n                                required [disabled]=\\\"clickedFinishButton\\\"\\r\\n                                    (selectionChange)=\\\"incomingDataypeSelection(protocolForBothIncOut.messageFormat)\\\">\\r\\n                                    <mat-option *ngFor=\\\"let data of dataType\\\" [value]=\\\"data\\\">{{data}}</mat-option>\\r\\n                                </mat-select>\\r\\n                            </mat-form-field>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div fxFlex=\\\"100\\\" *ngIf=\\\"protocolForBothIncOut.messageChannel=='DB Connection'\\\">\\r\\n                        <div fxFlex=\\\"25\\\">\\r\\n                                <mat-form-field appearance=\\\"outline\\\">\\r\\n                                        <mat-label>User Name</mat-label>\\r\\n                                        <input matInput name=\\\"dbUsername\\\"\\r\\n                                         #dbUsername [ngModelOptions]=\\\"{standalone: true}\\\" [disabled]=\\\"clickedFinishButton\\\"\\r\\n                                         [(ngModel)]=\\\"protocolForBothIncOut.dbUsername\\\">\\r\\n                                    </mat-form-field>\\r\\n                        </div>\\r\\n                        <div fxFlex=\\\"25\\\">\\r\\n                                <mat-form-field appearance=\\\"outline\\\">\\r\\n                                        <mat-label>Passowrd</mat-label>\\r\\n                                        <input matInput name=\\\"dbPassword\\\"\\r\\n                                         #dbPassword type=\\\"password\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [disabled]=\\\"clickedFinishButton\\\"\\r\\n                                         [(ngModel)]=\\\"protocolForBothIncOut.password\\\">\\r\\n                                         \\r\\n                                     </mat-form-field>\\r\\n                        </div>\\r\\n                        <div fxFlex=\\\"25\\\">\\r\\n                                <mat-form-field appearance=\\\"outline\\\">\\r\\n                                        <mat-label>DataBase Name</mat-label>\\r\\n                                        <input matInput name=\\\"dbServiceName\\\" [disabled]=\\\"clickedFinishButton\\\"\\r\\n                                        [ngModelOptions]=\\\"{standalone: true}\\\"\\r\\n                                        #dbServiceName type=\\\"text\\\" \\r\\n                                        [(ngModel)]=\\\"protocolForBothIncOut.dbServiceName\\\">\\r\\n                                         \\r\\n                                     </mat-form-field>\\r\\n                        </div>\\r\\n                        <div fxFlex=\\\"25\\\">\\r\\n                                <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"outline\\\">\\r\\n                                        <mat-label>Connecting String</mat-label>\\r\\n                                        <textarea matInput [ngModelOptions]=\\\"{standalone: true}\\\"\\r\\n                                        [(ngModel)]=\\\"protocolForBothIncOut.dbConnectString\\\" [disabled]=\\\"clickedFinishButton\\\"\\r\\n                                        name=\\\"dbConnectString\\\" #dbConnectString></textarea>\\r\\n                                      </mat-form-field>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div fxFlex=\\\"100\\\" fxLayoutGap=\\\"10px\\\" *ngIf=\\\"protocolForBothIncOut.messageChannel=='MDB'\\\">\\r\\n                            <div fxFlex=\\\"25\\\">\\r\\n                                    <mat-form-field appearance=\\\"outline\\\">\\r\\n                                            <mat-label>Type of Queue</mat-label>\\r\\n                                          <mat-select (selectionChange)=\\\"onMdbQueue($event)\\\" [disabled]=\\\"clickedFinishButton\\\">\\r\\n                                              <mat-option *ngFor=\\\"let queue of mdbQueueInc\\\" [value]=\\\"queue\\\">{{queue}}</mat-option>\\r\\n                                          </mat-select>\\r\\n                                         </mat-form-field>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div fxFlex=\\\"100\\\" fxLayoutGap=\\\"20px\\\" *ngIf=\\\"queueType=='JMS' &&protocolForBothIncOut.messageChannel=='MDB'\\\">                    \\r\\n                                <div fxFlex=\\\"20\\\" >\\r\\n                                        <mat-form-field appearance=\\\"outline\\\">\\r\\n                                           <mat-label>Queue Manager</mat-label>\\r\\n                                           <input matInput name=\\\"queueManager\\\">\\r\\n                                        </mat-form-field>\\r\\n                                    </div>\\r\\n                                    <div fxFlex=\\\"20\\\" >\\r\\n                                            <mat-form-field appearance=\\\"outline\\\"> \\r\\n                                               <mat-label>Queue Name</mat-label>\\r\\n                                               <input matInput >\\r\\n                                            </mat-form-field>\\r\\n                                        </div>\\r\\n                                        <div fxFlex=\\\"20\\\" >\\r\\n                                                <mat-form-field appearance=\\\"outline\\\">\\r\\n                                                   <mat-label>Channel</mat-label>\\r\\n                                                   <input matInput >\\r\\n                                                </mat-form-field>\\r\\n                                                \\r\\n                                            </div>\\r\\n                               \\r\\n                                    \\r\\n                               \\r\\n                         </div>\\r\\n                         <div fxFlex=\\\"100\\\" fxLayoutGap=\\\"20px\\\" *ngIf=\\\"queueType=='IBM' &&protocolForBothIncOut.messageChannel=='MDB'\\\" >\\r\\n                                <div fxFlex=\\\"20\\\" fxLayoutGap=\\\"20px\\\">\\r\\n                                    <mat-form-field appearance=\\\"outline\\\">\\r\\n                                       <mat-label>Queue Manager</mat-label>\\r\\n                                       <input matInput name=\\\"queueManager\\\" >\\r\\n                                        \\r\\n                                    </mat-form-field>\\r\\n                                </div>\\r\\n                                <div fxFlex=\\\"20\\\" fxLayoutGap=\\\"20px\\\">\\r\\n                                        <mat-form-field appearance=\\\"outline\\\">\\r\\n                                           <mat-label>Queue Name</mat-label>\\r\\n                                           <input matInput name=\\\"queueName\\\"  >\\r\\n                                            \\r\\n                                        </mat-form-field>\\r\\n                                    </div>         \\r\\n                                    <div fxFlex=\\\"20\\\" fxLayoutGap=\\\"20px\\\">\\r\\n                                            <mat-form-field appearance=\\\"outline\\\">\\r\\n                                               <mat-label>Connecting Factory</mat-label>\\r\\n                                               <input matInput name=\\\"connectingFactory\\\">\\r\\n                                                \\r\\n                                            </mat-form-field>\\r\\n                                        </div>\\r\\n                               \\r\\n                                </div>\\r\\n                    <div fxFlex=\\\"100\\\" fxLayoutGap=\\\"20px\\\" >\\r\\n                       <div fxFlex=\\\"35\\\"></div>\\r\\n                        <button mat-raised-button (click)=\\\"onNextOfProtocol(protocolForBothIncOut)\\\" color=\\\"primary\\\" \\r\\n                        [disabled]=\\\"!protocol1.valid\\\">Next</button>\\r\\n                        <button mat-raised-button (click)=\\\"onPreviousToBasic()\\\" color=\\\"warn\\\">Previous</button>\\r\\n                        <button mat-raised-button  [disabled]=\\\"!protocol1.valid\\\"\\r\\n                         type=\\\"reset\\\" color=\\\"warn\\\" (click)=\\\"reset()\\\">Reset</button>\\r\\n                        <div fxFlex=\\\"10\\\"></div>\\r\\n                    </div>\\r\\n                    </div>\\r\\n                </form>\\r\\n                   \\r\\n</mat-card>\\r\\n<!-- OUT AND iN 3RD SCREEN -->\\r\\n<mat-card *ngIf=\\\"onlyInc\\\">\\r\\n    <div fxLayout=\\\"row wrap\\\">\\r\\n        <div fxFlex=\\\"100\\\">\\r\\n            <div fxFlex=\\\"30\\\"></div>\\r\\n            <div fxFlex=\\\"90\\\">\\r\\n                <h5>Header and Service Details</h5>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <form #details1=\\\"ngForm\\\">\\r\\n    <div fxLayout=\\\"row wrap\\\" *ngIf=\\\"incDataType=='XML' && incProtocol=='EJB' ||incProtocol=='MDB'&& incDataType=='XML' ||incProtocol=='Https/Http' &&incDataType=='XML'\\\" [ngClass]=\\\"{'readonly-wrapper' : clickedFinishButton}\\\">\\r\\n        <div fxFlex=\\\"100\\\">\\r\\n            <div fxFlex=\\\"60\\\">\\r\\n                <input type=\\\"file\\\" id=\\\"chFile\\\" (change)=\\\"uploadFileXml($event)\\\">\\r\\n                <button mat-raised-button type=\\\"button\\\" class=\\\"btnFile\\\" (click)=\\\"chooseFile()\\\" [disabled]=\\\"clickedFinishButton\\\">\\r\\n                  <mat-icon>cloud_upload</mat-icon>&nbsp;&nbsp;File Upload &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\\\"padding-left: 40px;\\\">{{fileName}}</span>\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div fxLayout=\\\"row wrap\\\" *ngIf=\\\"incDataType=='CSV/EXCEL'  ||incDataType=='FLATFILE'\\\">\\r\\n        <div fxFlex=\\\"100\\\">\\r\\n            <div fxFlex=\\\"60\\\">\\r\\n               <mat-form-field appearance=\\\"outline\\\">\\r\\n                <mat-label>Folder Name</mat-label>\\r\\n                <input matInput name=\\\"folderName\\\" ngModel>\\r\\n               </mat-form-field>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div fxLayout=\\\"row wrap\\\" *ngIf=\\\"incProtocol=='DB Connection' &&incDataType=='XML' ||incProtocol=='DB Connection'&& incDataType=='JSON'\\\" >\\r\\n            <div fxFlex=\\\"100\\\">\\r\\n                <div fxFlex=\\\"60\\\">\\r\\n                   <mat-form-field appearance=\\\"outline\\\">\\r\\n                    <mat-label>Table Name</mat-label>\\r\\n                    <input matInput name=\\\"tableName\\\" ngModel>\\r\\n                   </mat-form-field>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div *ngIf=\\\"incDataType!='CSV/EXCEL' &&incDataType!='FLATFILE'\\\">\\r\\n        <div fxLayout=\\\"row wrap\\\" *ngFor=\\\"let iso of mdmtSystemService;let i=index\\\" [ngClass]=\\\"{'readonly-wrapper' : clickedFinishButton}\\\">\\r\\n                <div fxFlex=\\\"100\\\" fxLayoutGap=\\\"10px\\\">\\r\\n                        <div fxFlex=\\\"15\\\">\\r\\n                                <mat-form-field appearance=\\\"outline\\\">\\r\\n                                    <mat-label>Header</mat-label>\\r\\n                                    <!-- <input name=\\\"headerTag\\\" #headerTag=\\\"ngModel\\\" \\r\\n                                    matInput [(ngModel)]=\\\"iso.headerTag\\\"> -->\\r\\n                                    <!-- [hidden] = issourceSysDisabled(header.headerTag) -->\\r\\n                                    <mat-select name=\\\"headerTag\\\" name=\\\"headerTag_{{i}}\\\"\\r\\n                                     ngModel \\r\\n                                    #headerTag #headerTag=\\\"ngModel\\\" required\\r\\n                                    [(ngModel)]=\\\"iso.headerTag\\\" (valueChange)=\\\"changeValue2($event, i)\\\">\\r\\n                                            <mat-option *ngFor=\\\"let header of headerTagData\\\"\\r\\n                                           \\r\\n                                            [value]=\\\"header.headerTag\\\">\\r\\n                                            {{header.headerTag}}\\r\\n                                            </mat-option>\\r\\n                                        </mat-select> \\r\\n                                    <!-- <mat-select name=\\\"messageKey\\\" #messageKey=\\\"ngModel\\\" [(ngModel)]=\\\"iso.messageKey\\\"> \\r\\n                                        <mat-option *ngFor=\\\"let mkey of messageKeyIso\\\"\\r\\n                                        [value]=\\\"mkey\\\">\\r\\n                                        {{mkey}}\\r\\n                                        </mat-option>\\r\\n                                    </mat-select> -->\\r\\n                                      \\r\\n                                </mat-form-field>\\r\\n                        </div>\\r\\n                    <div fxFlex=\\\"15\\\" *ngIf=\\\"incDataType!='XML'\\\">\\r\\n                        <mat-form-field appearance=\\\"outline\\\">\\r\\n                            <mat-label>{{matLabel1}}</mat-label>\\r\\n                            <mat-select name=\\\"messageKey_{{i}}\\\" #messageKey=\\\"ngModel\\\" required [(ngModel)]=\\\"iso.messageKey\\\" ngModel\\r\\n                                (selectionChange)=\\\"onSelectingMessageBasis($event,i)\\\">\\r\\n                                <ng-container *ngFor=\\\"let mkey of isoRespData;\\\">\\r\\n                                    <mat-option [value]=\\\"mkey.fieldNo\\\" [hidden]=\\\"try(mkey.fieldNo,i)\\\">\\r\\n                                        {{mkey.fieldNo }}<{{mkey.fieldName}} </mat-option>\\r\\n                                </ng-container>\\r\\n                            </mat-select>\\r\\n                        </mat-form-field>\\r\\n                    </div>\\r\\n                    \\r\\n                    <div fxFlex=\\\"15\\\" *ngIf=\\\"incDataType=='XML'\\\">\\r\\n                            <mat-form-field appearance=\\\"outline\\\">\\r\\n                                <mat-label>{{matLabel2}}</mat-label>\\r\\n                                 <!-- <input name=\\\"messageKey\\\" #messageKey=\\\"ngModel\\\" \\r\\n                                <!-- <input name=\\\"messageKey\\\" #messageKey=\\\"ngModel\\\" \\r\\n                                 <!-- <input name=\\\"messageKey\\\" #messageKey=\\\"ngModel\\\" \\r\\n                                matInput [(ngModel)]=\\\"iso.messageKey\\\">  -->\\r\\n                                \\r\\n                                <mat-select name=\\\"messageBasis_{{i}}\\\" ngModel #messageBasis #messageBasis=\\\"ngModel\\\" [(ngModel)]=\\\"iso.messageBasis\\\" required\\r\\n                                (selectionChange)=\\\"onselectingTag($event,i)\\\" \\r\\n                                (optionSelected)=\\\"onselectingTag($event,i)\\\"\\r\\n                                >\\r\\n                                      <mat-option *ngFor=\\\"let data of messageBasisIso\\\"\\r\\n                                      [value]=\\\"data\\\" [hidden]=\\\"shouldDisableTagOption(data)\\\">\\r\\n                                      {{data}}\\r\\n                                      </mat-option>\\r\\n                                  </mat-select>\\r\\n                                  \\r\\n                            </mat-form-field>\\r\\n                    </div> \\r\\n                   \\r\\n                    <div fxFlex=\\\"15\\\" *ngIf=\\\"incDataType!='XML'\\\">\\r\\n                            <mat-form-field appearance=\\\"outline\\\">\\r\\n                                <mat-label>{{matLabel3}}</mat-label>\\r\\n                                <!-- <input matInput name=\\\"dataType\\\" #dataType #dataType=\\\"ngModel\\\" [(ngModel)]=\\\"iso.dataType\\\"> -->\\r\\n                             <mat-select name=\\\"dataType_{{i}}\\\" #dataType ngModel #dataType=\\\"ngModel\\\" [(ngModel)]=\\\"iso.dataType\\\" required >\\r\\n                                 <mat-option *ngFor=\\\"let type of typeDataIso\\\" [value]=\\\"type\\\">{{type}}</mat-option>\\r\\n                                        <!-- <mat-option value=\\\"numeric\\\">\\r\\n                                        Numeric\\r\\n                                        </mat-option>\\r\\n                                        <mat-option value=\\\"alphaNumeric\\\">\\r\\n                                          Alpha  Numeric\\r\\n                                            </mat-option>\\r\\n                                            <mat-option value=\\\"date\\\">\\r\\n                                                Date\\r\\n                                                </mat-option> -->\\r\\n                                    </mat-select>  \\r\\n                            </mat-form-field>\\r\\n                    </div>\\r\\n                    <div fxFlex=\\\"15\\\" *ngIf=\\\"incDataType=='XML'\\\">\\r\\n                            <mat-form-field appearance=\\\"outline\\\">\\r\\n                                <mat-label>{{matLabel3}}</mat-label>\\r\\n                                <!-- <input matInput name=\\\"dataType\\\" #dataType #dataType=\\\"ngModel\\\" [(ngModel)]=\\\"iso.dataType\\\"> -->\\r\\n                             <mat-select name=\\\"dataType_{{i}}\\\" #dataType ngModel #dataType=\\\"ngModel\\\" \\r\\n                             [(ngModel)]=\\\"iso.dataType\\\" required >\\r\\n                                \\r\\n                                         <mat-option value=\\\"numeric\\\">\\r\\n                                        Numeric\\r\\n                                        </mat-option>\\r\\n                                        <mat-option value=\\\"alphaNumeric\\\">\\r\\n                                          Alpha  Numeric\\r\\n                                            </mat-option>\\r\\n                                            <mat-option value=\\\"date\\\">\\r\\n                                                Date\\r\\n                                                </mat-option> \\r\\n                                    </mat-select>  \\r\\n                            </mat-form-field>\\r\\n                    </div>\\r\\n                    <div fxFlex=\\\"15\\\">\\r\\n                            <mat-form-field appearance=\\\"outline\\\">\\r\\n                                    <mat-label>{{matLabel4}}</mat-label>\\r\\n                                    <input name=\\\"headerValue{{i}}\\\" matInput required ngModel\\r\\n                                     name=\\\"headerValue\\\" #headerValue #headerValue=\\\"ngModel\\\" \\r\\n                                    [(ngModel)]=\\\"iso.headerValue\\\">\\r\\n                                    <!-- <mat-select name=\\\"messageBasis\\\" name=\\\"headerValue\\\" #headerValue #headerValue=\\\"ngModel\\\"\\r\\n                                    [(ngModel)]=\\\"iso.headerValue\\\">\\r\\n                                            <mat-option *ngFor=\\\"let header of headerValueIso\\\"\\r\\n                                            [value]=\\\"header\\\">\\r\\n                                            {{header}}\\r\\n                                            </mat-option>\\r\\n                                        </mat-select> -->   \\r\\n                                </mat-form-field>\\r\\n                        </div> \\r\\n                       \\r\\n                        <div fxFlex=\\\"15\\\">\\r\\n\\r\\n                            \\r\\n                                <mat-form-field appearance=\\\"outline\\\">\\r\\n                                        <mat-label>{{matLabel5}}</mat-label>\\r\\n                                   \\r\\n                                        <!-- <input name=\\\"encryption\\\" matInput\\r\\n                                         name=\\\"encryption\\\" #encryption #encryption=\\\"ngModel\\\"\\r\\n                                        [(ngModel)]=\\\"iso.encryption\\\"> -->\\r\\n                                      \\r\\n                                        <mat-select name=\\\"encryption_{{i}}\\\"  #encryption \\r\\n                                        #encryption=\\\"encryption\\\" ngModel\\r\\n                                       [(ngModel)]=\\\"iso.encryption\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n                                       <mat-option value=\\\"null\\\">--Select--</mat-option>\\r\\n                                       <mat-option value=\\\"No Encryption\\\">No Encryption</mat-option>\\r\\n                                       <mat-option value=\\\"BASE64\\\">\\r\\n                                               BASE64\\r\\n                                               </mat-option>\\r\\n                                               <mat-option value=\\\"SHA264\\\">\\r\\n                                                       SHA264\\r\\n                                                       </mat-option>\\r\\n                                                       <mat-option value=\\\"SHA512\\\">\\r\\n                                                               SHA512\\r\\n                                                               </mat-option>\\r\\n                                           </mat-select> \\r\\n                                    </mat-form-field>\\r\\n                            </div> \\r\\n                 \\r\\n                    <div fxFlex=\\\"20\\\">\\r\\n                        <!-- <button mat-raised-button  > -->\\r\\n                            <mat-icon (click)=\\\"onDelete(i)\\\" color=\\\"warn\\\" style=\\\"cursor: pointer;margin-top: 10px\\\">delete</mat-icon>\\r\\n                        <!-- </button> -->\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n       \\r\\n        <div fxLayout=\\\"row wrap\\\"  [ngClass]=\\\"{'readonly-wrapper' : clickedFinishButton}\\\">\\r\\n                <div fxFlex=\\\"100\\\">\\r\\n                        <div fxFlex=\\\"50\\\">\\r\\n                                <!-- <button mat-mini-fab  (click)=\\\"add()\\\" color=\\\"primary\\\">\\r\\n                                        <mat-icon   style=\\\"cursor: pointer\\\">add</mat-icon>\\r\\n                                    </button> -->\\r\\n                                    <!-- <button > -->\\r\\n                                            <mat-icon   (click)=\\\"add()\\\" color=\\\"primary\\\" style=\\\"cursor: pointer\\\">add</mat-icon>\\r\\n                                        <!-- </button> -->\\r\\n                        </div>\\r\\n                    </div>\\r\\n        </div>\\r\\n        <br><br>\\r\\n            <div fxLayout=\\\"row wrap\\\">\\r\\n                <div fxFlex=\\\"100\\\" >\\r\\n                    <div fxFlex=\\\"40\\\"></div>\\r\\n                    <div fxFlex=\\\"60\\\" fxLayoutGap=\\\"20px\\\">\\r\\n                            <!--   -->\\r\\n                            <button mat-raised-button (click)=\\\"onFisnih()\\\" color=\\\"primary\\\" [disabled]=\\\"!details1.valid || clickedFinishButton || isSysCodeAlreadyExist \\\">Finish</button>\\r\\n                        \\r\\n                        <button mat-raised-button (click)=\\\"moveToProtocol()\\\" color=\\\"warn\\\" [disabled]=\\\"clickedFinishButton\\\">Previous</button>\\r\\n                        <button mat-raised-button (click)=\\\"onReset()\\\" color=\\\"primary\\\" [disabled]=\\\"clickedFinishButton\\\">Reset</button>\\r\\n                        \\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </form>\\r\\n</mat-card>\\r\\n\\r\\n<!-- All tab for protocol selection -->\\r\\n<mat-card *ngIf=\\\"showTab\\\">\\r\\n        <mat-tab-group #tabgroup [selectedIndex]=\\\"selectedIndex\\\"\\r\\n        (selectedTabChange)=\\\"tabChanged($event)\\\" [ngClass]=\\\"{'readonly-wrapper' : clickedFinishButton}\\\">\\r\\n                <mat-tab label=\\\"Incoming\\\"  >\\r\\n                     <mat-card *ngIf=\\\"showProtocolForAllInc\\\">\\r\\n                         <form #incAllProtocol=\\\"ngForm\\\">\\r\\n                            <div fxLayout=\\\"row wrap\\\">\\r\\n                                    <div fxFlex=\\\"100\\\">\\r\\n                                        <div fxFlex=\\\"30\\\"></div>\\r\\n                                        <div fxFlex=\\\"90\\\">\\r\\n                                            <h5>Incoming Message Configuration</h5>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div fxLayout=\\\"column wrap\\\" >\\r\\n                                        <div fxFlex=\\\"100\\\">\\r\\n                                            <div fxFlex=\\\"30\\\"></div>\\r\\n                                            <div fxFlex=\\\"40\\\">\\r\\n                                                <mat-form-field appearance=\\\"outline\\\">\\r\\n                                                    <mat-label>Incoming Message Protocol</mat-label>\\r\\n                                                    <mat-select #protocolRef [(ngModel)]=\\\"protocolAllInc.messageChannel\\\" \\r\\n                                                    name=\\\"messageChannel\\\" required #msgChannel=\\\"ngModel\\\" #msgChannel\\r\\n                                                        (selectionChange)=\\\"onProtocalSlection(protocolAllInc.messageChannel)\\\"\\r\\n                                                        (optionSelected)=\\\"onProtocalSlection(protocolAllInc.messageChannel)\\\">\\r\\n                                                        <mat-option value=\\\" \\\">--Please select--</mat-option>\\r\\n                                                        <mat-option value=\\\"TCP/IP\\\">TCP/IP</mat-option>\\r\\n                                                        <mat-option value=\\\"Https/Http\\\">HTTPS/HTTP\\r\\n                                                        </mat-option>\\r\\n                                                        <mat-option value=\\\"MDB\\\">MDB</mat-option>\\r\\n                                                        <mat-option value=\\\"EJB\\\">EJB</mat-option>\\r\\n                                                        <mat-option value=\\\"DB Connection\\\">DB Connection\\r\\n                                                        </mat-option>\\r\\n                                                    </mat-select>\\r\\n                                                </mat-form-field>\\r\\n                                            </div>\\r\\n                                \\r\\n                                        </div>\\r\\n                                        <div fxFlex=\\\"100\\\">\\r\\n                                            <div fxFlex=\\\"30\\\"></div>\\r\\n                                            <div fxFlex=\\\"40\\\">\\r\\n                                                <mat-form-field appearance=\\\"outline\\\">\\r\\n                                                        <mat-label>Data Type</mat-label>\\r\\n                                                      \\r\\n                                                    <mat-select [(ngModel)]=\\\"protocolAllInc.messageFormat\\\"\\r\\n                                                     name=\\\"messageFormat\\\" required #msgFormat #msgFormat=\\\"ngModel\\\"\\r\\n                                                        (selectionChange)=\\\"incomingDataypeSelection(protocolAllInc.messageFormat)\\\">\\r\\n                                                        <mat-option *ngFor=\\\"let data of dataType\\\" [value]=\\\"data\\\">{{data}}</mat-option>\\r\\n                                                    </mat-select>\\r\\n                                                </mat-form-field>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div fxFlex=\\\"100\\\" *ngIf=\\\"protocolAllInc.messageChannel=='DB Connection'\\\">\\r\\n                                            <div fxFlex=\\\"25\\\">\\r\\n                                                    <mat-form-field appearance=\\\"outline\\\">\\r\\n                                                            <mat-label>User Name</mat-label>\\r\\n                                                            <input matInput name=\\\"dbUsername\\\"\\r\\n                                                             #dbUsername \\r\\n                                                             [(ngModel)]=\\\"protocolAllInc.dbUsername\\\">\\r\\n                                                        </mat-form-field>\\r\\n                                            </div>\\r\\n                                            <div fxFlex=\\\"25\\\">\\r\\n                                                    <mat-form-field appearance=\\\"outline\\\">\\r\\n                                                            <mat-label>Passowrd</mat-label>\\r\\n                                                            <input matInput name=\\\"dbPassword\\\" #dbPassword \\r\\n                                                            type=\\\"password\\\" [(ngModel)]=\\\"protocolAllInc.password\\\">\\r\\n                                                             \\r\\n                                                         </mat-form-field>\\r\\n                                            </div>\\r\\n                                            <div fxFlex=\\\"25\\\">\\r\\n                                                    <mat-form-field appearance=\\\"outline\\\">\\r\\n                                                            <mat-label>DataBase Name</mat-label>\\r\\n                                                            <input matInput name=\\\"dbServiceName\\\" \\r\\n                                                            #dbServiceName type=\\\"text\\\" \\r\\n                                                            [(ngModel)]=\\\"protocolAllInc.dbServiceName\\\">\\r\\n                                                             \\r\\n                                                         </mat-form-field>\\r\\n                                            </div>\\r\\n                                            <div fxFlex=\\\"25\\\">\\r\\n                                                    <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"outline\\\">\\r\\n                                                            <mat-label>Connecting String</mat-label>\\r\\n                                                            <textarea matInput \\r\\n                                                            [(ngModel)]=\\\"protocolAllInc.dbConnectString\\\" \\r\\n                                                            name=\\\"dbConnectString\\\" #dbConnectString></textarea>\\r\\n                                                          </mat-form-field>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div fxFlex=\\\"100\\\" fxLayoutGap=\\\"10px\\\" *ngIf=\\\"protocolAllInc.messageChannel=='MDB'\\\">\\r\\n                                                <div fxFlex=\\\"25\\\">\\r\\n                                                        <mat-form-field appearance=\\\"outline\\\">\\r\\n                                                                <mat-label>Type of Queue</mat-label>\\r\\n                                                              <mat-select (selectionChange)=\\\"onMdbQueue($event)\\\">\\r\\n                                                                  <mat-option *ngFor=\\\"let queue of mdbQueueInc\\\" [value]=\\\"queue\\\">{{queue}}</mat-option>\\r\\n                                                              </mat-select>\\r\\n                                                             </mat-form-field>\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n                                            <div fxFlex=\\\"100\\\" fxLayoutGap=\\\"20px\\\" *ngIf=\\\"queueType=='JMS' &&protocolAllInc.messageChannel=='MDB'\\\">                    \\r\\n                                                    <div fxFlex=\\\"20\\\" >\\r\\n                                                            <mat-form-field appearance=\\\"outline\\\">\\r\\n                                                               <mat-label>Queue Manager</mat-label>\\r\\n                                                               <input matInput name=\\\"queueManager\\\" >\\r\\n                                                            </mat-form-field>\\r\\n                                                        </div>\\r\\n                                                        <div fxFlex=\\\"20\\\" >\\r\\n                                                                <mat-form-field appearance=\\\"outline\\\">\\r\\n                                                                   <mat-label>Queue Name</mat-label>\\r\\n                                                                   <input matInput >\\r\\n                                                                </mat-form-field>\\r\\n                                                            </div>\\r\\n                                                            <div fxFlex=\\\"20\\\" >\\r\\n                                                                    <mat-form-field appearance=\\\"outline\\\">\\r\\n                                                                       <mat-label>Channel</mat-label>\\r\\n                                                                       <input matInput>\\r\\n                                                                    </mat-form-field>\\r\\n                                                                    \\r\\n                                                                </div>\\r\\n                                                   \\r\\n                                                        \\r\\n                                                   \\r\\n                                             </div>\\r\\n                                             <div fxFlex=\\\"100\\\" fxLayoutGap=\\\"20px\\\" *ngIf=\\\"queueType=='IBM' &&protocolAllInc.messageChannel=='MDB'\\\" >\\r\\n                                                    <div fxFlex=\\\"20\\\" fxLayoutGap=\\\"20px\\\">\\r\\n                                                        <mat-form-field appearance=\\\"outline\\\">\\r\\n                                                           <mat-label>Queue Manager</mat-label>\\r\\n                                                           <input matInput name=\\\"queueManager\\\" >\\r\\n                                                            \\r\\n                                                        </mat-form-field>\\r\\n                                                    </div>\\r\\n                                                    <div fxFlex=\\\"20\\\" fxLayoutGap=\\\"20px\\\">\\r\\n                                                            <mat-form-field appearance=\\\"outline\\\">\\r\\n                                                               <mat-label>Queue Name</mat-label>\\r\\n                                                               <input matInput name=\\\"queueName\\\"  >\\r\\n                                                                \\r\\n                                                            </mat-form-field>\\r\\n                                                        </div>         \\r\\n                                                        <div fxFlex=\\\"20\\\" fxLayoutGap=\\\"20px\\\">\\r\\n                                                                <mat-form-field appearance=\\\"outline\\\">\\r\\n                                                                   <mat-label>Connecting Factory</mat-label>\\r\\n                                                                   <input matInput name=\\\"connectingFactory\\\">\\r\\n                                                                    \\r\\n                                                                </mat-form-field>\\r\\n                                                            </div>\\r\\n                                                   \\r\\n                                                    </div>\\r\\n                                        <div fxFlex=\\\"100\\\" fxLayoutGap=\\\"20px\\\">\\r\\n                                            <div fxFlex=\\\"40\\\"></div>\\r\\n                                                <button mat-raised-button (click)=\\\"nextToServcieFromInc(protocolAllInc)\\\" color=\\\"primary\\\"\\r\\n                                                 [disabled]=\\\"incAllProtocol.invalid\\\">Next</button>\\r\\n                                                <button mat-raised-button (click)=\\\"onPreviousToBasic()\\\" color=\\\"warn\\\" >Previous</button>\\r\\n                                            \\r\\n                                                <button mat-raised-button (click)=\\\"onResetOfProtocol(protocolAllInc)\\\" color=\\\"warn\\\"  [disabled]=\\\"incAllProtocol.invalid\\\">Reset</button>\\r\\n                                        </div>\\r\\n                                        </div>\\r\\n                                    </form>\\r\\n                     </mat-card>\\r\\n                                 <mat-card *ngIf=\\\"showServiceScreen\\\">\\r\\n                                        <form #incAll=\\\"ngForm\\\">  \\r\\n                                        <div >\\r\\n                                            <div fxLayout=\\\"row wrap\\\">\\r\\n                                                <div fxFlex=\\\"100\\\">\\r\\n                                                    <div fxFlex=\\\"30\\\"></div>\\r\\n                                                    <div fxFlex=\\\"90\\\">\\r\\n                                                        <h5>Header and Service Details</h5>\\r\\n                                                    </div>\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n                                                  \\r\\n                                                        <div fxLayout=\\\"row wrap\\\" *ngIf=\\\"incDataType=='XML' && incProtocol=='EJB' ||incProtocol=='MDB'&& incDataType=='XML' ||incProtocol=='Https/Http' &&incDataType=='XML'\\\">\\r\\n                                                            <div fxFlex=\\\"100\\\"  [ngClass]=\\\"{'readonly-wrapper' : clickedFinishButton}\\\">\\r\\n                                                                <div fxFlex=\\\"60\\\">\\r\\n                                                                    <input type=\\\"file\\\" id=\\\"chFile\\\" (change)=\\\"uploadFileXml($event)\\\" name=\\\"upload\\\">\\r\\n                                                                    <button mat-raised-button type=\\\"button\\\" class=\\\"btnFile\\\" (click)=\\\"chooseFile()\\\">\\r\\n                                                                      <mat-icon>cloud_upload</mat-icon>&nbsp;&nbsp;File Upload&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\\\"padding-left: 40px;\\\">{{fileName}}</span>\\r\\n                                                                    </button>\\r\\n                                                                </div>\\r\\n                                                            </div>\\r\\n                                                        </div>\\r\\n                                                        <div fxLayout=\\\"row wrap\\\" *ngIf=\\\"incDataType=='CSV/EXCEL'  ||incDataType=='FLATFILE'\\\">\\r\\n                                                            <div fxFlex=\\\"100\\\">\\r\\n                                                                <div fxFlex=\\\"60\\\">\\r\\n                                                                   <mat-form-field appearance=\\\"outline\\\">\\r\\n                                                                    <mat-label>Folder Name</mat-label>\\r\\n                                                                    <input matInput name=\\\"folderName\\\">\\r\\n                                                                   </mat-form-field>\\r\\n                                                                </div>\\r\\n                                                            </div>\\r\\n                                                        </div>\\r\\n                                                        <div fxLayout=\\\"row wrap\\\" *ngIf=\\\"incProtocol=='DB Connection' &&incDataType=='XML' ||incProtocol=='DB Connection'&& incDataType=='JSON'\\\" >\\r\\n                                                                <div fxFlex=\\\"100\\\">\\r\\n                                                                    <div fxFlex=\\\"60\\\">\\r\\n                                                                       <mat-form-field appearance=\\\"outline\\\">\\r\\n                                                                        <mat-label>Table Name</mat-label>\\r\\n                                                                        <input matInput name=\\\"TableName\\\">\\r\\n                                                                       </mat-form-field>\\r\\n                                                                    </div>\\r\\n                                                                </div>\\r\\n                                                            </div>\\r\\n                                                            <div *ngIf=\\\"incDataType!='CSV/EXCEL' &&incDataType!='FLATFILE'\\\"  [ngClass]=\\\"{'readonly-wrapper' : clickedFinishButton}\\\">\\r\\n                                                            <div fxLayout=\\\"row wrap\\\" *ngFor=\\\"let incTcp of mdmtSystemServiceAllInc;let i=index\\\">\\r\\n                                                                    <div fxFlex=\\\"100\\\" fxLayoutGap=\\\"10px\\\">\\r\\n                                                                            <div fxFlex=\\\"15\\\">\\r\\n                                                                               \\r\\n                                                                                    <mat-form-field appearance=\\\"outline\\\">\\r\\n                                                                                        <mat-label>Header</mat-label>\\r\\n                                                                                        <!-- <input name=\\\"headerTag\\\" #headerTag=\\\"ngModel\\\" \\r\\n                                                                                        matInput [(ngModel)]=\\\"incTcp.headerTag\\\"> -->\\r\\n                                                                                        <!-- [hidden] = issourceSysDisabled(header.headerTag) -->\\r\\n                                                                                        <mat-select name=\\\"headerTag_{{i}}\\\" \\r\\n                                                                                        #headerTag #headerTag=\\\"ngModel\\\" required\\r\\n                                                                                        [(ngModel)]=\\\"incTcp.headerTag\\\" (valueChange)=\\\"changeValue2($event, i)\\\">\\r\\n                                                                                                <mat-option *ngFor=\\\"let header of headerTagData\\\"\\r\\n                                                                                               \\r\\n                                                                                                [value]=\\\"header.headerTag\\\">\\r\\n                                                                                                {{header.headerTag}}\\r\\n                                                                                                </mat-option>\\r\\n                                                                                            </mat-select>  \\r\\n                                                                                          \\r\\n                                                                                    </mat-form-field>\\r\\n                                                                            </div>\\r\\n                                                                        <div fxFlex=\\\"15\\\" *ngIf=\\\"incDataType!='XML'\\\">\\r\\n                                                                            <mat-form-field appearance=\\\"outline\\\">\\r\\n                                                                                <mat-label>{{matLabel1}}</mat-label>\\r\\n                                                                                <!-- (selectionChange)=\\\"onSelectingMessageBasis($event,i)\\\" -->\\r\\n                                                                                <mat-select name=\\\"messageKey_{{i}}\\\" #messageKey=\\\"ngModel\\\" [(ngModel)]=\\\"incTcp.messageKey\\\" required (selectionChange)=\\\"onSelectingMessageBasis($event,i)\\\"> \\r\\n                                                                                    <mat-option *ngFor=\\\"let mkey of isoRespData\\\"\\r\\n                                                                                    [value]=\\\"mkey.fieldNo\\\">\\r\\n                                                                                    {{mkey.fieldNo}}<{{mkey.fieldName}}\\r\\n                                                                                    </mat-option>\\r\\n                                                                                </mat-select> \\r\\n                                                                            </mat-form-field>\\r\\n                                                                        </div>\\r\\n                                                                       \\r\\n                                                                           \\r\\n                                                                        <div fxFlex=\\\"15\\\" *ngIf=\\\"incDataType=='XML'\\\">\\r\\n                                                                                <mat-form-field appearance=\\\"outline\\\">\\r\\n                                                                                    <mat-label>{{matLabel2}}</mat-label>\\r\\n                                                                                   <!-- - <input matInput name=\\\"messageKey\\\" #messageKey=\\\"ngModel\\\" -->\\r\\n                                                                                     <!-- [(ngModel)]=\\\"incTcp.messageKey\\\"> -->\\r\\n                                                                                    \\r\\n                                                                                        <mat-select name=\\\"messageBasis_{{i}}\\\"  #messageBasis #messageBasis=\\\"ngModel\\\"\\r\\n                                                                                        [(ngModel)]=\\\"incTcp.messageBasis\\\" required\\r\\n                                                                                        (selectionChange)=\\\"onselectingTag($event,i)\\\"\\r\\n                                                                                        (optionSelected)=\\\"onselectingTag($event,i)\\\"\\r\\n                                                                                     >\\r\\n                                                                                               <mat-option *ngFor=\\\"let data of messageBasisIso\\\"\\r\\n                                                                                               [value]=\\\"data\\\">\\r\\n                                                                                               {{data}}\\r\\n                                                                                               </mat-option>\\r\\n                                                                                           </mat-select>\\r\\n                                                                                     \\r\\n                                                                                </mat-form-field>\\r\\n                                                                        </div> \\r\\n                                                                        <div fxFlex=\\\"15\\\" *ngIf=\\\"incDataType=='XML'\\\">\\r\\n                                                                                <mat-form-field appearance=\\\"outline\\\">\\r\\n                                                                                    <mat-label>{{matLabel3}}</mat-label>\\r\\n                                                                                    <!-- <input name=\\\"dataType\\\" #dataType #dataType=\\\"ngModel\\\" [(ngModel)]=\\\"incTcp.dataType\\\" matInput> -->\\r\\n\\r\\n                                                                                    <mat-select name=\\\"dataType_{{i}}\\\" #dataType #dataType=\\\"ngModel\\\" [(ngModel)]=\\\"incTcp.dataType\\\" required>\\r\\n                                                                                        <mat-option value=\\\"numeric\\\">\\r\\n                                                                                            Numeric\\r\\n                                                                                            </mat-option>\\r\\n                                                                                            <mat-option value=\\\"alphaNumeric\\\">\\r\\n                                                                                              Alpha  Numeric\\r\\n                                                                                                </mat-option>\\r\\n                                                                                                <mat-option value=\\\"date\\\">\\r\\n                                                                                                    Date\\r\\n                                                                                                    </mat-option>\\r\\n                                                                                        </mat-select>\\r\\n                                                                                </mat-form-field>\\r\\n                                                                        </div>\\r\\n                                                                        <div fxFlex=\\\"15\\\" *ngIf=\\\"incDataType!='XML'\\\">\\r\\n                                                                                <mat-form-field appearance=\\\"outline\\\">\\r\\n                                                                                    <mat-label>{{matLabel3}}</mat-label>\\r\\n                                                                                    <!-- <input name=\\\"dataType\\\" #dataType #dataType=\\\"ngModel\\\" [(ngModel)]=\\\"incTcp.dataType\\\" matInput> -->\\r\\n\\r\\n                                                                                    <mat-select name=\\\"dataType_{{i}}\\\" #dataType #dataType=\\\"ngModel\\\" [(ngModel)]=\\\"incTcp.dataType\\\" required>\\r\\n                                                                                       <mat-option *ngFor=\\\"let t1 of typeDataIso\\\" [value]=\\\"t1\\\">{{t1}}</mat-option>\\r\\n                                                                                       \\r\\n                                                                                        </mat-select>\\r\\n                                                                                </mat-form-field>\\r\\n                                                                        </div>\\r\\n                                                                        <div fxFlex=\\\"15\\\">\\r\\n                                                                                <mat-form-field appearance=\\\"outline\\\">\\r\\n                                                                                        <mat-label>{{matLabel4}}</mat-label>\\r\\n                                                                                        <input matInput name=\\\"headerValue_{{i}}\\\"\\r\\n                                                                                         #headerValue=\\\"ngModel\\\" [(ngModel)]=\\\"incTcp.headerValue\\\" required>\\r\\n                                                                                        <!-- <mat-select name=\\\"messageBasis\\\" name=\\\"headerValue\\\" #headerValue #headerValue=\\\"ngModel\\\"\\r\\n                                                                                        [(ngModel)]=\\\"incTcp.headerValue\\\">\\r\\n                                                                                                <mat-option *ngFor=\\\"let header of headerValueIso\\\"\\r\\n                                                                                                [value]=\\\"header\\\">\\r\\n                                                                                                {{header}}\\r\\n                                                                                                </mat-option>\\r\\n                                                                                            </mat-select> -->\\r\\n                                                                                    </mat-form-field>\\r\\n                                                                            </div>\\r\\n                                                                           \\r\\n                                                                            <div fxFlex=\\\"15\\\">\\r\\n                                                                                    <mat-form-field appearance=\\\"outline\\\">\\r\\n                                                                                            <mat-label>{{matLabel5}}</mat-label>\\r\\n                                                                                           \\r\\n                                                                                            <!-- <input name=\\\"encryption\\\" matInput\\r\\n                                                                                             name=\\\"encryption\\\" #encryption \\r\\n                                                                                             #encryption=\\\"ngModel\\\"\\r\\n                                                                                            [(ngModel)]=\\\"incTcp.encryption\\\"> -->\\r\\n                                                                                           <mat-select name=\\\"encryption_{{i}}\\\" #headerValue #headerValue=\\\"ngModel\\\"\\r\\n                                                                                            [(ngModel)]=\\\"incTcp.encryption\\\">\\r\\n                                                                                            <mat-option >--Select--</mat-option>\\r\\n                                       <mat-option value=\\\"No Encryption\\\">No Encryption</mat-option>\\r\\n                                                                                                    <mat-option value=\\\"BASE64\\\">\\r\\n                                                                                                    BASE64\\r\\n                                                                                                    </mat-option>\\r\\n                                                                                                    <mat-option value=\\\"SHA264\\\">\\r\\n                                                                                                            SHA264\\r\\n                                                                                                            </mat-option>\\r\\n                                                                                                            <mat-option value=\\\"SHA512\\\">\\r\\n                                                                                                                    SHA512\\r\\n                                                                                                                    </mat-option>\\r\\n                                                                                                </mat-select> \\r\\n                                                                                        </mat-form-field>\\r\\n                                                                                </div> \\r\\n                                                                        <div fxFlex=\\\"20\\\">\\r\\n                                                                            <!-- <button mat-raised-button > -->\\r\\n                                                                                <mat-icon (click)=\\\"onDeleteOFAllInc(i)\\\" color=\\\"warn\\\"\\r\\n                                                                                style=\\\"cursor: pointer;margin-top:10px\\\">delete</mat-icon>\\r\\n                                                                            <!-- </button> -->\\r\\n                                                                        </div>\\r\\n                                                                    </div>\\r\\n                                                                </div>\\r\\n                                                            </div>\\r\\n                                                            <div fxLayout=\\\"row wrap\\\"  [ngClass]=\\\"{'readonly-wrapper' : clickedFinishButton}\\\">\\r\\n                                                                    <div fxFlex=\\\"100\\\">\\r\\n                                                                        <div fxFlex=\\\"50\\\">\\r\\n                                                                                <!-- <button > -->\\r\\n                                                                                        <mat-icon (click)=\\\"addOfIncAll()\\\" color=\\\"primary\\\" style=\\\"cursor: pointer;margin-top:10px\\\">add</mat-icon>\\r\\n                                                                                    <!-- </button> -->\\r\\n                                                                        </div>\\r\\n                                                                    </div>\\r\\n                                                                </div>\\r\\n                                                                <div fxLayout=\\\"row wrap\\\">\\r\\n                                                                    <div fxFlex=\\\"100\\\">\\r\\n                                                                        <div fxFlex=\\\"40\\\"></div>\\r\\n                                                                        <div fxFlex=\\\"60\\\" fxLayoutGap=\\\"20px\\\">\\r\\n                                                                                <!-- [disabled]=\\\"!incAll.valid\\\" -->\\r\\n                                                                                <button mat-raised-button (click)=\\\"nextStep(tabgroup.selectedIndex)\\\" color=\\\"primary\\\" [disabled]=\\\"!incAll.valid\\\">Next</button>\\r\\n                                                                                <button mat-raised-button (click)=\\\"moveIncProtocolAll()\\\" color=\\\"warn\\\">Previous</button>\\r\\n                                                                                <button mat-raised-button (click)=\\\"onResetOFAllInc()\\\" color=\\\"primary\\\">Reset</button>\\r\\n                                                                        </div>\\r\\n                                                                    </div>\\r\\n                                                                </div>\\r\\n                                                   \\r\\n                                                   \\r\\n                                        </div>\\r\\n                                    </form>\\r\\n                                 </mat-card>\\r\\n                </mat-tab>\\r\\n                <!-- outgoing -->\\r\\n                <mat-tab label=\\\"Outgoing\\\"> \\r\\n                    <mat-card *ngIf=\\\"showProtocolForAllOut\\\">\\r\\n                            <form #outAll=\\\"ngForm\\\">\\r\\n                                <div fxLayout=\\\"row wrap\\\">\\r\\n                                    <div fxFlex=\\\"100\\\">\\r\\n                                        <div fxFlex=\\\"30\\\"></div>\\r\\n                                        <div fxFlex=\\\"90\\\">\\r\\n                                            <h5>Outgoing Message Configuration</h5>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            <div fxLayout=\\\"column wrap\\\" >\\r\\n                                    <div fxFlex=\\\"100\\\">\\r\\n                                        <div fxFlex=\\\"30\\\"></div>\\r\\n                                        <div fxFlex=\\\"40\\\">\\r\\n                                            <mat-form-field appearance=\\\"outline\\\">\\r\\n                                                <mat-label>Outgoing Message Protocol</mat-label>\\r\\n                                                <mat-select #protocolRef [(ngModel)]=\\\"protocolAllOut.messageChannel\\\" name=\\\"messageChannel\\\"\\r\\n                                                    (selectionChange)=\\\"onProtocalSlectionOutgoing(protocolAllOut.messageChannel)\\\" required\\r\\n                                                    (optionSelected)=\\\"onProtocalSlectionOutgoing(protocolAllOut.messageChannel)\\\">\\r\\n                                                    <mat-option value=\\\" \\\">---Please select---</mat-option>\\r\\n                                                    <mat-option value=\\\"TCP/IP\\\">TCP/IP</mat-option>\\r\\n                                                    <mat-option value=\\\"Https/Http\\\">HTTPS/HTTP\\r\\n                                                    </mat-option>\\r\\n                                                    <mat-option value=\\\"MDB\\\">MDB</mat-option>\\r\\n                                                    <mat-option value=\\\"EJB\\\">EJB</mat-option>\\r\\n                                                    <mat-option value=\\\"DB Connection\\\">DB Connection\\r\\n                                                    </mat-option>\\r\\n                                                </mat-select>\\r\\n                                            </mat-form-field>\\r\\n                                        </div>\\r\\n                            \\r\\n                                    </div>\\r\\n                                    <div fxFlex=\\\"100\\\">\\r\\n                                        <div fxFlex=\\\"30\\\"></div>\\r\\n                                        <div fxFlex=\\\"40\\\">\\r\\n                                            <mat-form-field appearance=\\\"outline\\\">\\r\\n                                           \\r\\n                                                    <mat-label>Data Type</mat-label>\\r\\n                                                <mat-select [(ngModel)]=\\\"protocolAllOut.messageFormat\\\" name=\\\"messageFormat\\\" required\\r\\n                                                    (selectionChange)=\\\"OutgoingDataypeSelection(protocolAllOut.messageFormat)\\\">\\r\\n                                                    <mat-option *ngFor=\\\"let data of dataType\\\" [value]=\\\"data\\\">{{data}}</mat-option>\\r\\n                                                </mat-select>\\r\\n                                            </mat-form-field>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div fxFlex=\\\"100\\\" *ngIf=\\\"protocolAllOut.messageChannel=='DB Connection'\\\">\\r\\n                                        <div fxFlex=\\\"25\\\">\\r\\n                                                <mat-form-field appearance=\\\"outline\\\">\\r\\n                                                        <mat-label>User Name</mat-label>\\r\\n                                                        <input matInput name=\\\"dbUsername\\\"\\r\\n                                                         #dbUsername \\r\\n                                                         [(ngModel)]=\\\"protocolAllOut.dbUsername\\\">\\r\\n                                                    </mat-form-field>\\r\\n                                        </div>\\r\\n                                        <div fxFlex=\\\"25\\\">\\r\\n                                                <mat-form-field appearance=\\\"outline\\\">\\r\\n                                                        <mat-label>Passowrd</mat-label>\\r\\n                                                        <input matInput name=\\\"dbPassword\\\" #dbPassword \\r\\n                                                        type=\\\"password\\\" [(ngModel)]=\\\"protocolAllOut.password\\\">\\r\\n                                                         \\r\\n                                                     </mat-form-field>\\r\\n                                        </div>\\r\\n                                        <div fxFlex=\\\"25\\\">\\r\\n                                                <mat-form-field appearance=\\\"outline\\\">\\r\\n                                                        <mat-label>DataBase Name</mat-label>\\r\\n                                                        <input matInput name=\\\"dbServiceName\\\" \\r\\n                                                        #dbServiceName type=\\\"text\\\" \\r\\n                                                        [(ngModel)]=\\\"protocolAllOut.dbServiceName\\\">\\r\\n                                                         \\r\\n                                                     </mat-form-field>\\r\\n                                        </div>\\r\\n                                        <div fxFlex=\\\"25\\\">\\r\\n                                                <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"outline\\\">\\r\\n                                                        <mat-label>Connecting String</mat-label>\\r\\n                                                        <textarea matInput \\r\\n                                                        [(ngModel)]=\\\"protocolAllOut.dbConnectString\\\" \\r\\n                                                        name=\\\"dbConnectString\\\" #dbConnectString></textarea>\\r\\n                                                      </mat-form-field>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div fxFlex=\\\"100\\\" fxLayoutGap=\\\"10px\\\" *ngIf=\\\"protocolAllOut.messageChannel=='MDB'\\\">\\r\\n                                            <div fxFlex=\\\"25\\\">\\r\\n                                                    <mat-form-field appearance=\\\"outline\\\">\\r\\n                                                            <mat-label>Type of Queue</mat-label>\\r\\n                                                          <mat-select (selectionChange)=\\\"onMdbQueue($event)\\\">\\r\\n                                                              <mat-option *ngFor=\\\"let queue of mdbQueueInc\\\" [value]=\\\"queue\\\">{{queue}}</mat-option>\\r\\n                                                          </mat-select>\\r\\n                                                         </mat-form-field>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div fxFlex=\\\"100\\\" fxLayoutGap=\\\"20px\\\" *ngIf=\\\"queueType=='JMS' &&protocolAllOut.messageChannel=='MDB'\\\">                    \\r\\n                                                <div fxFlex=\\\"20\\\" >\\r\\n                                                        <mat-form-field appearance=\\\"outline\\\">\\r\\n                                                           <mat-label>Queue Manager</mat-label>\\r\\n                                                           <input matInput name=\\\"queueManager\\\" >\\r\\n                                                        </mat-form-field>\\r\\n                                                    </div>\\r\\n                                                    <div fxFlex=\\\"20\\\" >\\r\\n                                                            <mat-form-field appearance=\\\"outline\\\">\\r\\n                                                               <mat-label>Queue Name</mat-label>\\r\\n                                                               <input matInput >\\r\\n                                                            </mat-form-field>\\r\\n                                                        </div>\\r\\n                                                        <div fxFlex=\\\"20\\\" >\\r\\n                                                                <mat-form-field appearance=\\\"outline\\\">\\r\\n                                                                   <mat-label>Channel</mat-label>\\r\\n                                                                   <input matInput>\\r\\n                                                                </mat-form-field>\\r\\n                                                                \\r\\n                                                            </div>\\r\\n                                               \\r\\n                                                    \\r\\n                                               \\r\\n                                         </div>\\r\\n                                         <div fxFlex=\\\"100\\\" fxLayoutGap=\\\"20px\\\" *ngIf=\\\"queueType=='IBM' &&protocolAllOut.messageChannel=='MDB'\\\" >\\r\\n                                                <div fxFlex=\\\"20\\\" fxLayoutGap=\\\"20px\\\">\\r\\n                                                    <mat-form-field appearance=\\\"outline\\\">\\r\\n                                                       <mat-label>Queue Manager</mat-label>\\r\\n                                                       <input matInput name=\\\"queueManager\\\" >\\r\\n                                                        \\r\\n                                                    </mat-form-field>\\r\\n                                                </div>\\r\\n                                                <div fxFlex=\\\"20\\\" fxLayoutGap=\\\"20px\\\">\\r\\n                                                        <mat-form-field appearance=\\\"outline\\\">\\r\\n                                                           <mat-label>Queue Name</mat-label>\\r\\n                                                           <input matInput name=\\\"queueName\\\"  >\\r\\n                                                            \\r\\n                                                        </mat-form-field>\\r\\n                                                    </div>         \\r\\n                                                    <div fxFlex=\\\"20\\\" fxLayoutGap=\\\"20px\\\">\\r\\n                                                            <mat-form-field appearance=\\\"outline\\\">\\r\\n                                                               <mat-label>Connecting Factory</mat-label>\\r\\n                                                               <input matInput name=\\\"connectingFactory\\\">\\r\\n                                                                \\r\\n                                                            </mat-form-field>\\r\\n                                                        </div>\\r\\n                                               \\r\\n                                                </div>\\r\\n                                    <div fxFlex=\\\"100\\\" fxLayoutGap=\\\"20px\\\">\\r\\n                                        <div fxFlex=\\\"40\\\"></div>\\r\\n                                            <button mat-raised-button (click)=\\\"onNextOfProtocolAllOut(protocolAllOut)\\\" color=\\\"primary\\\" [disabled]=\\\"!outAll.valid\\\">Next</button>\\r\\n                                            <button mat-raised-button (click)=\\\"onPreviousToBasic()\\\" color=\\\"warn\\\">Previous</button>\\r\\n                                            <button mat-raised-button (click)=\\\"onResetOfProtocolAllOut(protocolAllOut)\\\" color=\\\"warn\\\" [disabled]=\\\"!outAll.valid\\\">Reset</button>\\r\\n                                    </div>\\r\\n                                    </div>\\r\\n                                </form>\\r\\n                    </mat-card>\\r\\n\\r\\n                                <mat-card *ngIf=\\\"showServiceScreeAllOut\\\">\\r\\n                                    <div fxLayout=\\\"row wrap\\\">\\r\\n                                        <div fxFlex=\\\"100\\\">\\r\\n                                            <div fxFlex=\\\"30\\\"></div>\\r\\n                                            <div fxFlex=\\\"90\\\">\\r\\n                                                <h5>Header and Service Details</h5>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                       <form #outAll=\\\"ngForm\\\">\\r\\n                                        <div >\\r\\n                                              \\r\\n                                                        <div fxLayout=\\\"row wrap\\\" *ngIf=\\\"OutDataType=='XML' && outProtocol=='EJB' ||outProtocol=='MDB'&& OutDataType=='XML' ||outProtocol=='Https/Http' &&OutDataType=='XML'\\\"  [ngClass]=\\\"{'readonly-wrapper' : clickedFinishButton}\\\">\\r\\n                                                            <div fxFlex=\\\"100\\\">\\r\\n                                                                <div fxFlex=\\\"60\\\">\\r\\n                                                                    <input type=\\\"file\\\" id=\\\"chFile\\\" (change)=\\\"uploadFileXmlOut($event)\\\">\\r\\n                                                                    <button mat-raised-button type=\\\"button\\\" class=\\\"btnFile\\\" (click)=\\\"chooseFile()\\\">\\r\\n                                                                      <mat-icon>cloud_upload</mat-icon>&nbsp;&nbsp;File Upload&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\\\"padding-left: 40px;\\\">{{fileNameOut}}</span>\\r\\n                                                                    </button>\\r\\n                                                                </div>\\r\\n                                                            </div>\\r\\n                                                        </div>\\r\\n                                                        <div fxLayout=\\\"row wrap\\\" *ngIf=\\\"incDataType=='CSV/EXCEL'  ||incDataType=='FLATFILE'\\\">\\r\\n                                                            <div fxFlex=\\\"100\\\">\\r\\n                                                                <div fxFlex=\\\"60\\\">\\r\\n                                                                   <mat-form-field appearance=\\\"outline\\\">\\r\\n                                                                    <mat-label>Folder Name</mat-label>\\r\\n                                                                    <input matInput>\\r\\n                                                                   </mat-form-field>\\r\\n                                                                </div>\\r\\n                                                            </div>\\r\\n                                                        </div>\\r\\n                                                        <div fxLayout=\\\"row wrap\\\" *ngIf=\\\"incProtocol=='DB Connection' &&incDataType=='XML' ||incProtocol=='DB Connection'&& incDataType=='JSON'\\\" >\\r\\n                                                                <div fxFlex=\\\"100\\\">\\r\\n                                                                    <div fxFlex=\\\"60\\\">\\r\\n                                                                       <mat-form-field appearance=\\\"outline\\\">\\r\\n                                                                        <mat-label>Table Name</mat-label>\\r\\n                                                                        <input matInput>\\r\\n                                                                       </mat-form-field>\\r\\n                                                                    </div>\\r\\n                                                                </div>\\r\\n                                                            </div>\\r\\n                                                            <div *ngIf=\\\"incDataType!='CSV/EXCEL' &&incDataType!='FLATFILE'\\\"  [ngClass]=\\\"{'readonly-wrapper' : clickedFinishButton}\\\">\\r\\n                                                            <div fxLayout=\\\"row wrap\\\" *ngFor=\\\"let tcpOut of mdmtSystemServiceAllOut;let i=index\\\">\\r\\n                                                                    <div fxFlex=\\\"100\\\" fxLayoutGap=\\\"10px\\\">\\r\\n                                                                            <div fxFlex=\\\"15\\\">\\r\\n                                                                                    <mat-form-field appearance=\\\"outline\\\">\\r\\n                                                                                            <mat-label>Header</mat-label>\\r\\n                                                                                            <!-- <input matInput name=\\\"headerTag\\\" name=\\\"headerTag\\\"\\r\\n                                                                                             #headerTag #headerTag=\\\"ngModel\\\"\\r\\n                                                                                            [(ngModel)]=\\\"tcpOut.headerTag\\\"> -->\\r\\n                                                                                            <!-- [hidden] = issourceSysDisabledOut(header.headerTag) -->\\r\\n                                                                                            <mat-select name=\\\"headerTag_{{i}}\\\"  \\r\\n                                                                                            #headerTag #headerTag=\\\"ngModel\\\" required\\r\\n                                                                                            [(ngModel)]=\\\"tcpOut.headerTag\\\" (valueChange)=\\\"changeValueOut($event, i)\\\">\\r\\n                                                                                                    <mat-option *ngFor=\\\"let header of headerTagDataOut\\\"\\r\\n                                                                                                  \\r\\n                                                                                                    [value]=\\\"header.headerTag\\\">\\r\\n                                                                                                    {{header.headerTag}}\\r\\n                                                                                                    </mat-option>\\r\\n                                                                                                </mat-select> \\r\\n                                                                                        </mat-form-field>\\r\\n                                                                            </div>\\r\\n                                                                        <div fxFlex=\\\"15\\\" *ngIf=\\\"OutDataType!='XML'\\\">\\r\\n                                                                                <mat-form-field appearance=\\\"outline\\\">\\r\\n                                                                                        <mat-label>{{matLabel1}}</mat-label>\\r\\n                                                                                        <!-- (selectionChange)=\\\"onSelectingMessageBasis($event,i)\\\" -->\\r\\n                                                                                        <mat-select name=\\\"messageKey_{{i}}\\\" #messageKey=\\\"ngModel\\\"\\r\\n                                                                                        [(ngModel)]=\\\"tcpOut.messageKey\\\" required (selectionChange)=\\\"onSelectingMessageBasis($event,i)\\\" > \\r\\n                                                                                               <mat-option *ngFor=\\\"let mkey of isoRespData\\\"\\r\\n                                                                                               [value]=\\\"mkey.fieldNo\\\">\\r\\n                                                                                               {{mkey.fieldNo}}<{{mkey.fieldName}}\\r\\n                                                                                               </mat-option>\\r\\n                                                                                           </mat-select>   \\r\\n                                                        \\r\\n                                                                                    </mat-form-field>\\r\\n                                                                        </div>\\r\\n                                                                       <div fxFlex=\\\"15\\\" *ngIf=\\\"OutDataType=='XML'\\\">\\r\\n                                                                            <mat-form-field appearance=\\\"outline\\\" >\\r\\n                                                                                    <mat-label>{{matLabel2}}</mat-label>\\r\\n                                                                                   <!-- <input matInput  name=\\\"messageKey\\\" #messageKey=\\\"ngModel\\\"\\r\\n                                                                                    [(ngModel)]=\\\"tcpOut.messageKey\\\"> -->\\r\\n                                                                                     \\r\\n                                                                                        <mat-select name=\\\"messageBasis_{{i}}\\\"  required\\r\\n                                                                                        #messageBasis #messageBasis=\\\"ngModel\\\"\\r\\n                                                                                        (selectionChange)=\\\"onselectingTag($event,i)\\\"\\r\\n                                (optionSelected)=\\\"onselectingTag($event,i)\\\"\\r\\n                                                                                         [(ngModel)]=\\\"tcpOut.messageBasis\\\">\\r\\n                                                                                           <mat-option *ngFor=\\\"let data of messageBasisIso\\\"\\r\\n                                                                                           [value]=\\\"data\\\">\\r\\n                                                                                           {{data}}\\r\\n                                                                                           </mat-option>\\r\\n                                                                                       </mat-select>\\r\\n                                                                                </mat-form-field>\\r\\n                                                                        </div> \\r\\n                                                                        <div fxFlex=\\\"15\\\" *ngIf=\\\"OutDataType=='XML'\\\">\\r\\n                                                                                <mat-form-field appearance=\\\"outline\\\">\\r\\n                                                                                        <mat-label>{{matLabel3}}</mat-label>\\r\\n                                                                                        <!-- <input matInput name=\\\"dataType\\\" #dataType \\r\\n                                                                                        #dataType=\\\"ngModel\\\" [(ngModel)]=\\\"tcpOut.dataType\\\"> -->\\r\\n                                                                                        <mat-select name=\\\"dataType_{{i}}\\\" #dataType required\\r\\n                                                                                        #dataType=\\\"ngModel\\\" [(ngModel)]=\\\"tcpOut.dataType\\\">\\r\\n                                                                                        <mat-option value=\\\"numeric\\\">\\r\\n                                                                                            Numeric\\r\\n                                                                                            </mat-option>\\r\\n                                                                                            <mat-option value=\\\"alphaNumeric\\\">\\r\\n                                                                                              Alpha  Numeric\\r\\n                                                                                                </mat-option>\\r\\n                                                                                                <mat-option value=\\\"date\\\">\\r\\n                                                                                                    Date\\r\\n                                                                                                    </mat-option>\\r\\n                                                                                            </mat-select> \\r\\n                                                                                    </mat-form-field>\\r\\n                                                                        </div>\\r\\n                                                                        <div fxFlex=\\\"15\\\"*ngIf=\\\"OutDataType!='XML'\\\">\\r\\n                                                                                <mat-form-field appearance=\\\"outline\\\">\\r\\n                                                                                        <mat-label>{{matLabel3}}</mat-label>\\r\\n                                                                                        <!-- <input matInput name=\\\"dataType\\\" #dataType \\r\\n                                                                                        #dataType=\\\"ngModel\\\" [(ngModel)]=\\\"tcpOut.dataType\\\"> -->\\r\\n                                                                                        <mat-select name=\\\"dataType_{{i}}\\\" #dataType required\\r\\n                                                                                        #dataType=\\\"ngModel\\\" [(ngModel)]=\\\"tcpOut.dataType\\\">\\r\\n                                                                                        <mat-option *ngFor=\\\"let outtype of typeDataIso\\\" [value]=\\\"outtype\\\">{{outtype}}</mat-option>\\r\\n                                                                                            </mat-select> \\r\\n                                                                                    </mat-form-field>\\r\\n                                                                        </div>\\r\\n                                                                        <div fxFlex=\\\"15\\\">\\r\\n                                                                                <mat-form-field appearance=\\\"outline\\\">\\r\\n                                                                                        <mat-label>{{matLabel4}}</mat-label>\\r\\n                                                                                        <input matInput name=\\\"headerValue{{i}}\\\"  #headerValue #headerValue=\\\"ngModel\\\"\\r\\n                                                                                        [(ngModel)]=\\\"tcpOut.headerValue\\\" required>\\r\\n                                                                                        <!-- <mat-select name=\\\"messageBasis\\\" name=\\\"headerValue\\\" #headerValue #headerValue=\\\"ngModel\\\"\\r\\n                                                                                        [(ngModel)]=\\\"tcpOut.headerValue\\\">\\r\\n                                                                                                <mat-option *ngFor=\\\"let header of headerValueIso\\\"\\r\\n                                                                                                [value]=\\\"header\\\">\\r\\n                                                                                                {{header}}\\r\\n                                                                                                </mat-option>\\r\\n                                                                                            </mat-select> -->\\r\\n                                                                                    </mat-form-field>\\r\\n                                                                        </div>\\r\\n                                                                      \\r\\n                                                                        <div fxFlex=\\\"15\\\">\\r\\n                                                                                <mat-form-field appearance=\\\"outline\\\">\\r\\n                                                                                        <mat-label>{{matLabel5}}</mat-label>\\r\\n                                                                                     \\r\\n                                                                                        <!-- <input matInput name=\\\"encryption\\\" name=\\\"encryption\\\"\\r\\n                                                                                         #encryption #encryption=\\\"ngModel\\\"\\r\\n                                                                                        [(ngModel)]=\\\"tcpOut.encryption\\\"> -->\\r\\n                                                                                        <mat-select name=\\\"encryption_{{i}}\\\" #encryption\\r\\n                                                                                         #encryption=\\\"encryption\\\" required\\r\\n                                                                                        [(ngModel)]=\\\"tcpOut.encryption\\\">\\r\\n                                                                                        <mat-option >--Select--</mat-option>\\r\\n                                                                                        <mat-option value=\\\"No Encryption\\\" >No Encryption</mat-option>\\r\\n                                                                                        <mat-option value=\\\"BASE64\\\">\\r\\n                                                                                                BASE64\\r\\n                                                                                                </mat-option>\\r\\n                                                                                                <mat-option value=\\\"SHA264\\\">\\r\\n                                                                                                        SHA264\\r\\n                                                                                                        </mat-option>\\r\\n                                                                                                        <mat-option value=\\\"SHA512\\\">\\r\\n                                                                                                                SHA512\\r\\n                                                                                                                </mat-option>\\r\\n                                                                                            </mat-select> \\r\\n                                                                                    </mat-form-field>\\r\\n                                                                        </div>\\r\\n                                                                        <div fxFlex=\\\"20\\\">\\r\\n                                                                            <!-- <button mat-raised-button> -->\\r\\n                                                                                <mat-icon  (click)=\\\"onDeleteOfAllOut(i)\\\" color=\\\"warn\\\" style=\\\"cursor: pointer;margin-top:10px\\\">delete</mat-icon>\\r\\n                                                                            <!-- </button> -->\\r\\n                                                                        </div>\\r\\n                                                                    </div>\\r\\n                                                                </div>\\r\\n                                                                <div fxLayout=\\\"row wrap\\\">\\r\\n                                                                    <div fxFlex=\\\"100\\\">\\r\\n                                                                        <div fxFlex=\\\"50\\\">\\r\\n                                                                                <!-- <button mat-raised-button  color=\\\"primary\\\"> -->\\r\\n                                                                                        <mat-icon (click)=\\\"addOfAllOut()\\\" style=\\\"cursor: pointer;margin-top: 10px\\\">add</mat-icon>\\r\\n                                                                                    <!-- </button> -->\\r\\n                                                                        </div>\\r\\n                                                                    </div>\\r\\n                                                                </div>\\r\\n                                                            </div>\\r\\n                                                <br><br>\\r\\n                                                                <div fxLayout=\\\"row wrap\\\">\\r\\n                                                                    <div fxFlex=\\\"100\\\">\\r\\n                                                                        <div fxFlex=\\\"50\\\"></div>\\r\\n                                                                        <div fxFlex=\\\"60\\\" fxLayoutGap=\\\"20px\\\">\\r\\n                                                                                <!--  -->\\r\\n                                                                                <button mat-raised-button (click)=\\\"onFisnih()\\\" color=\\\"primary\\\" [disabled]=\\\"!outAll.valid ||clickedFinishButton\\\">Finish</button>\\r\\n                                                                                <button mat-raised-button (click)=\\\"moveToProtocolAllOut()\\\" color=\\\"warn\\\" [disabled]=\\\"afterFinish\\\">Previous</button>\\r\\n                                                                                <button mat-raised-button (click)=\\\"onResetOfAllOut()\\\" color=\\\"accent\\\" [disabled]=\\\"afterFinish\\\">Reset</button>\\r\\n\\r\\n                                                                        </div>\\r\\n                                                                    </div>\\r\\n                                                                </div>\\r\\n                                                   \\r\\n                                                   \\r\\n                                        </div>\\r\\n                                    </form>\\r\\n                                 </mat-card>\\r\\n                </mat-tab>\\r\\n              \\r\\n              </mat-tab-group>\\r\\n</mat-card>\\r\\n <br><br>\\r\\n<div fxLayout=\\\"row\\\" *ngIf=\\\"showAuditLog\\\">\\r\\n        <!-- <div fxFlex></div> -->\\r\\n        <div fxFlex=\\\"95\\\">\\r\\n          <mat-card style=\\\"width: 70%;  margin-left:260px;\\\">\\r\\n            <mat-card-title>\\r\\n            </mat-card-title>\\r\\n            <mat-card-content>\\r\\n              <div fxLayout=\\\"row\\\">\\r\\n                <table id=\\\"customers\\\">\\r\\n                  <tr>\\r\\n                    <th>Record Status:</th>\\r\\n                    <td>\\r\\n                      <mat-chip>{{addSysRespData.recordStatus}}</mat-chip>\\r\\n                    </td>\\r\\n                    <th>Input By:</th>\\r\\n                    <td>\\r\\n                      <mat-chip>{{addSysRespData.creatorId}}</mat-chip>\\r\\n                    </td>\\r\\n                    <th>Verified By:</th>\\r\\n                    <td>\\r\\n                      <mat-chip>{{addSysRespData.approverId}}</mat-chip>\\r\\n                    </td>\\r\\n                    <th>Verified Once:</th>\\r\\n                    <td>\\r\\n                      <mat-chip>{{addSysRespData.approvedEver}}</mat-chip>\\r\\n                    </td>\\r\\n                  </tr>\\r\\n                  <tr>\\r\\n                    <th>Modification No:</th>\\r\\n                    <td>\\r\\n                      <mat-chip>{{addSysRespData.versionNo}}</mat-chip>\\r\\n                    </td>\\r\\n                    <th>Input Date:</th>\\r\\n                    <td>\\r\\n                       <mat-chip>{{addSysRespData.createdTime | date: 'MM/dd/yyyy, h:mm a'}}</mat-chip>\\r\\n    \\r\\n                    </td>\\r\\n                    <th>Verified Date:</th>\\r\\n                    <td>\\r\\n                      <mat-chip>{{addSysRespData.approvedTime | date: 'MM/dd/yyyy, h:mm a'}}</mat-chip>\\r\\n                    </td>\\r\\n      \\r\\n                    <th>Verified Status:</th>\\r\\n                    <td>\\r\\n                      <mat-chip>{{addSysRespData.verifiedStatus}}</mat-chip>\\r\\n                    </td>\\r\\n      \\r\\n                  </tr>\\r\\n                </table>\\r\\n              </div>\\r\\n            </mat-card-content>\\r\\n          </mat-card>\\r\\n        </div>\\r\\n      </div>\\r\\n     \\r\\n\"","export default \"<mat-toolbar color=\\\"primary\\\"  style=\\\"height:30px; font-size: small;\\\">\\r\\n    <span>Add System</span>\\r\\n  </mat-toolbar>\\r\\n  <br />\\r\\n<div>\\r\\n        <div fxLayoutAlign=\\\"end stretch\\\" fxLayoutGap=\\\"10px\\\">\\r\\n                <div fxLayoutAlign=\\\"end stretch\\\">\\r\\n                        <button mat-raised-button routerLink=\\\"/sias-v2/addSystem\\\" color=\\\"primary\\\"\\r\\n                        >New </button>\\r\\n                </div>\\r\\n            <button mat-raised-button routerLink=\\\"/dashboard\\\" color=\\\"warn\\\"\\r\\n            >Exit</button>\\r\\n    </div>\\r\\n    </div>\\r\\n    <br>\\r\\n    <div class=\\\" mat-elevation-z8\\\">\\r\\n        <table mat-table [dataSource]=\\\"dataSource\\\" matSort matSortActive=\\\"createdTime\\\" matSortDirection=\\\"desc\\\">\\r\\n    \\r\\n            <!-- code Column -->\\r\\n            <ng-container matColumnDef=\\\"systemId\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Id </th>\\r\\n                <!-- <td mat-cell *matCellDef=\\\"let row\\\"> {{row.code}} </td> -->\\r\\n                <td mat-cell *matCellDef=\\\"let row\\\">\\r\\n                        <a routerLink=\\\"/sias-v2/viewOrEditSystem/{{row.systemId}}\\\" (click)=\\\"ongettingAddSystem(row)\\\">{{\\r\\n                        row.systemId\\r\\n                      }}</a>\\r\\n                      </td>\\r\\n            </ng-container>\\r\\n             <!-- name Column -->\\r\\n             <ng-container matColumnDef=\\\"code\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef > System Code </th>\\r\\n                <td mat-cell *matCellDef=\\\"let row\\\"> {{row.systemCode}} </td>\\r\\n            </ng-container>\\r\\n    \\r\\n            <!-- name Column -->\\r\\n            <ng-container matColumnDef=\\\"name\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef > Name </th>\\r\\n                <td mat-cell *matCellDef=\\\"let row\\\"> {{row.systemName}} </td>\\r\\n            </ng-container>\\r\\n    \\r\\n            <!-- type Column -->\\r\\n            <ng-container matColumnDef=\\\"type\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef> Type </th>\\r\\n                <td mat-cell *matCellDef=\\\"let row\\\"> {{row.serviceType}} </td>\\r\\n            </ng-container>\\r\\n    \\r\\n            <!-- externalIp Column -->\\r\\n            <ng-container matColumnDef=\\\"externalIp\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef > External Ip </th>\\r\\n                <td mat-cell *matCellDef=\\\"let row\\\"> {{row.sourceIp}} </td>\\r\\n            </ng-container>\\r\\n    \\r\\n            <!-- externalPort Column -->\\r\\n            <ng-container matColumnDef=\\\"externalPort\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef > External Port </th>\\r\\n                <td mat-cell *matCellDef=\\\"let row\\\"> {{row.sourcePort}} </td>\\r\\n            </ng-container>\\r\\n            <ng-container matColumnDef=\\\"createdTime\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>Date</th>\\r\\n                <td mat-cell *matCellDef=\\\"let row\\\"> {{row.createdTime |date}} </td>\\r\\n            </ng-container>\\r\\n    \\r\\n    \\r\\n           \\r\\n    \\r\\n    \\r\\n            <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n            <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n    \\r\\n            <!-- Row shown when there is no matching data. -->\\r\\n            <!-- <tr class=\\\"mat-row\\\" *matNoDataRow> -->\\r\\n            <!-- <td class=\\\"mat-cell\\\" colspan=\\\"4\\\">No data matching the filter \\\"{{input.value}}\\\"</td> -->\\r\\n            <!-- </tr> -->\\r\\n        </table>\\r\\n    \\r\\n        <mat-paginator [pageSizeOptions]=\\\"[5, 10, 20]\\\" showFirstLastButtons></mat-paginator>\\r\\n    </div>\"","export default \"<mat-toolbar color=\\\"primary\\\" style=\\\"height:30px; font-size: small;\\\">\\r\\n  <span>Rule Mapping</span>\\r\\n\\r\\n</mat-toolbar>\\r\\n\\r\\n\\r\\n<br>\\r\\n\\r\\n<mat-card>\\r\\n  <div fxLayout=\\\"row wrap\\\" >  \\r\\n    <div fxFlex=\\\"100\\\">\\r\\n      <div fxFlex=\\\"10\\\"></div>\\r\\n      <div fxFlex=\\\"25\\\">\\r\\n        <mat-form-field appearance=\\\"outline\\\">\\r\\n          <mat-label>Source system</mat-label>\\r\\n          <input matInput [(ngModel)]=\\\"rulemapping.systemCode\\\" readonly>\\r\\n          <!-- <mat-select name=\\\"sourceSystem\\\" [(ngModel)]=\\\"rulemapping.sourceTranslationId\\\"\\r\\n           #sourceSystem #sourceSystem=\\\"ngModel\\\"  (selectionChange)=\\\"onSourseSelection($event)\\\">\\r\\n            <mat-option *ngFor=\\\"let extsys of externalSystem\\\" \\r\\n           [value]=\\\"extsys\\\">{{extsys}} \\r\\n            </mat-option>\\r\\n\\r\\n          </mat-select> -->\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div fxFlex=\\\"25\\\">\\r\\n\\r\\n        <mat-form-field appearance=\\\"outline\\\">\\r\\n          <mat-label>Message Type</mat-label>\\r\\n          <mat-select name=\\\"msgType\\\" [disabled]=\\\"!editFetch || disableSubmitBtn\\\" #msgType #msgType=\\\"ngModel\\\" [(ngModel)]=\\\"rulemapping.messageType\\\"\\r\\n          (selectionChange)=\\\"onSelectionOFMessageType(rulemapping.sourceTranslationId,$event)\\\" \\r\\n          (optionSelected)=\\\"onSelectionOFMessageType(rulemapping.sourceTranslationId,$event)\\\">\\r\\n            <mat-option value=\\\"I\\\">\\r\\n              Incoming\\r\\n            </mat-option>\\r\\n            <mat-option value=\\\"O\\\">\\r\\n              Outgoing\\r\\n            </mat-option>\\r\\n            <mat-option value=\\\"A\\\">\\r\\n              All\\r\\n            </mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div fxFlex=\\\"25\\\">\\r\\n        <mat-form-field appearance=\\\"outline\\\">\\r\\n          <mat-label>Service</mat-label>\\r\\n          <input matInput [disabled]=\\\"!editFetch || disableSubmitBtn\\\" [(ngModel)]=\\\"rulemapping.serviceName\\\">\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div fxFlex=\\\"25\\\">\\r\\n <div fxFlex=\\\"25\\\">\\r\\n        <mat-form-field appearance=\\\"outline\\\">\\r\\n          <mat-label>Operation</mat-label>\\r\\n          <input matInput [disabled]=\\\"!editFetch || disableSubmitBtn\\\" [(ngModel)]=\\\"rulemapping.operationName\\\">\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n\\r\\n\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div fxLayout=\\\"row wrap\\\" >  \\r\\n      <div fxFlex=\\\"100\\\">\\r\\n        <div fxFlex=\\\"10\\\"></div>\\r\\n        <div fxFlex=\\\"25\\\">\\r\\n          <mat-form-field appearance=\\\"outline\\\">\\r\\n            <mat-label>Destination system</mat-label>\\r\\n            <input matInput [disabled]=\\\"!editFetch || disableSubmitBtn\\\" [(ngModel)]=\\\"rulemappingdest.targetTranslationId\\\">\\r\\n            <!-- <mat-select name=\\\"destinationSystem\\\" \\r\\n            [(ngModel)]=\\\"rulemapping.targetTranslationId\\\"\\r\\n             #destinationSystem #destinationSystem=\\\"ngModel\\\" (selectionChange)=\\\"ondestinationSource($event)\\\">\\r\\n              <mat-option *ngFor=\\\"let extsys of externalSystem\\\" [value]=\\\"extsys\\\">{{extsys}}\\r\\n              </mat-option> \\r\\n  \\r\\n            </mat-select>-->\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n        <div fxFlex=\\\"25\\\">\\r\\n  \\r\\n          <mat-form-field appearance=\\\"outline\\\">\\r\\n            <mat-label>Message Type</mat-label>\\r\\n            <mat-select [disabled]=\\\"!editFetch || disableSubmitBtn\\\" name=\\\"msgType\\\" #msgType #msgType=\\\"ngModel\\\" [(ngModel)]=\\\"rulemappingdest.messageType\\\"\\r\\n            (selectionChange)=\\\"msgTypeOfDestination($event)\\\" \\r\\n            (optionSelected)=\\\"msgTypeOfDestination($event)\\\">\\r\\n              <mat-option value=\\\"I\\\">\\r\\n                Incoming\\r\\n              </mat-option>\\r\\n              <mat-option value=\\\"O\\\">\\r\\n                Outgoing\\r\\n              </mat-option>\\r\\n              <mat-option value=\\\"A\\\">\\r\\n                All\\r\\n              </mat-option>\\r\\n            </mat-select>\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n        <div fxFlex=\\\"25\\\">\\r\\n          <mat-form-field appearance=\\\"outline\\\">\\r\\n            <mat-label>Service</mat-label>\\r\\n            <input matInput [disabled]=\\\"!editFetch || disableSubmitBtn\\\" [(ngModel)]=\\\"rulemappingdest.serviceName\\\">\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n        <div fxFlex=\\\"25\\\" >\\r\\n   <div fxFlex=\\\"25\\\">\\r\\n          <mat-form-field appearance=\\\"outline\\\">\\r\\n            <mat-label>Operation</mat-label>\\r\\n            <input matInput [disabled]=\\\"!editFetch || disableSubmitBtn\\\" [(ngModel)]=\\\"rulemappingdest.operationName\\\">\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n  \\r\\n  \\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  <div fxLayout=\\\"row wrap\\\">\\r\\n    <div fxFlex=\\\"100\\\">\\r\\n      <div fxFlex=\\\"50\\\"></div>\\r\\n      <div fxFlex=\\\"50\\\" fxLayoutGap=\\\"10px\\\">\\r\\n        <button mat-raised-button  [disabled]=\\\"disableFetchBtn\\\" *ngIf=\\\"editFetch\\\" (click)=\\\"fetchDestination()\\\" color=\\\"warn\\\">Fetch All</button>\\r\\n        <button  mat-raised-button  *ngIf=\\\"!editFetch\\\" (click)=\\\"EditFetch()\\\" color=\\\"primary\\\" [disabled]=\\\"editBtn\\\"\\r\\n        >\\r\\n         Edit\\r\\n       </button>\\r\\n       <button mat-raised-button  *ngIf=\\\"addSysRespData.approvedEver=='N'\\\" (click)=\\\"onAuthOfRuleMapping()\\\" color=\\\"primary\\\" [disabled]=\\\"authBtn\\\" [hidden]=\\\"authBtnHide\\\">Auth</button>\\r\\n       <button mat-raised-button  (click)=\\\"onCloseOfRuleMapping()\\\" color=\\\"primary\\\" *ngIf=\\\"addSysRespData.recordStatus=='O'\\\" [disabled]=\\\"closeBtn\\\">Close</button>\\r\\n       <button mat-raised-button  (click)=\\\"onOpenRuleMapping()\\\" color=\\\"primary\\\" *ngIf=\\\"addSysRespData.recordStatus=='C'\\\" [hidden]=\\\"reopenBtn\\\">Re-Open</button>\\r\\n       <button mat-raised-button [disabled]=\\\"deleted\\\" (click)=\\\"deleteRuleMapping()\\\" color=\\\"primary\\\" *ngIf=\\\"addSysRespData.approvedEver=='N'\\\">Delete</button>\\r\\n       <button mat-raised-button color=\\\"primary\\\" [routerLink]=\\\"'/sias-v2/litsRuleMapping'\\\">Exit</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</mat-card>\\r\\n<br>\\r\\n<mat-card *ngIf=\\\"showSource ||showDestination\\\">\\r\\n<div fxLayout=\\\"column wrap\\\">\\r\\n    <div fxFlex=\\\"100\\\" fxLayoutGap=\\\"center\\\">\\r\\n      <div fxFlex=\\\"33\\\">\\r\\n        <h5 fxLayoutAlign=\\\"center stretch\\\">Source System</h5>\\r\\n      </div>\\r\\n      <div fxFlex=\\\"33\\\">\\r\\n        <h5 fxLayoutAlign=\\\"center stretch\\\">Destination System</h5>\\r\\n      </div>\\r\\n      <div fxFlex=\\\"33\\\">\\r\\n        <h5 fxLayoutAlign=\\\"center stretch\\\">Default Value</h5>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n <div fxLayout=\\\"column wrap\\\"  *ngFor=\\\"let data of rulemappingDetail;let i=index\\\">\\r\\n   <div fxFlex=\\\"100\\\" fxLayoutGap=\\\"20px\\\">\\r\\n  <div fxFlex=\\\"33\\\">\\r\\n    <mat-card>\\r\\n     \\r\\n      <div fxLayout=\\\"column wrap\\\" >\\r\\n        <div fxFlex=\\\"100\\\" fxLayoutAlign=\\\"space-around center\\\">\\r\\n          <div fxFlex=\\\"50\\\"> \\r\\n              <mat-form-field appearance=\\\"outline\\\"  >\\r\\n                  <mat-label *ngIf=\\\"sourceLabel=='TCP/IP'\\\">Field No</mat-label>\\r\\n                  <mat-label *ngIf=\\\"sourceLabel=='Https/Http'\\\">Tag</mat-label>\\r\\n                  <mat-select [disabled]=\\\"!edit || disableSubmitBtn\\\"  name=\\\"sourceKey\\\" #sourceKey=\\\"ngModel\\\" [(ngModel)]=\\\"data.sourceKey\\\" *ngIf=\\\"sourceLabel=='TCP/IP'\\\">\\r\\n                  <mat-option *ngFor=\\\"let data of sourceData\\\"\\r\\n                  [value]=\\\"data.messageBasis\\\">\\r\\n                  {{data.messageKey}}<{{data.messageBasis}}\\r\\n                  </mat-option>\\r\\n                </mat-select>\\r\\n                <mat-select [disabled]=\\\"!edit || disableSubmitBtn\\\"  name=\\\"sourceKey\\\" #sourceKey=\\\"ngModel\\\" [(ngModel)]=\\\"data.sourceKey\\\" *ngIf=\\\"sourceLabel=='Https/Http'\\\">\\r\\n                  <mat-option *ngFor=\\\"let data of sourceData\\\"\\r\\n                  [value]=\\\"data.messageBasis\\\">\\r\\n                  {{data.messageBasis}}\\r\\n                  </mat-option>\\r\\n                </mat-select>\\r\\n                </mat-form-field>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </mat-card>\\r\\n  </div>\\r\\n  <div fxFlex=\\\"33\\\">\\r\\n      <mat-card>\\r\\n        <div fxLayout=\\\"column wrap\\\" >\\r\\n          <div fxFlex=\\\"100\\\" fxLayoutAlign=\\\"space-around center\\\">\\r\\n            <div fxFlex=\\\"50\\\">\\r\\n                <mat-form-field appearance=\\\"outline\\\">\\r\\n                    <mat-label *ngIf=\\\"labelsDestination=='TCP/IP'\\\">Filed No</mat-label>\\r\\n                    <mat-label *ngIf=\\\"labelsDestination=='Https/Http'\\\">Tag</mat-label>\\r\\n                    <mat-select [disabled]=\\\"!edit || disableSubmitBtn\\\" name=\\\"destinationKey\\\" #destinationKey=\\\"ngModel\\\"  [(ngModel)]=\\\"data.destinationKey\\\" *ngIf=\\\"labelsDestination=='TCP/IP'\\\">\\r\\n                        <mat-option *ngFor=\\\"let fNo of destinationData;let i=index\\\"\\r\\n                         [value]=\\\"fNo.messageBasis\\\">\\r\\n                         {{fNo.messageKey}}<{{fNo.messageBasis}}\\r\\n                        </mat-option>\\r\\n                      </mat-select>\\r\\n                      <mat-select [disabled]=\\\"!edit || disableSubmitBtn\\\" name=\\\"destinationKey\\\" #destinationKey=\\\"ngModel\\\"  [(ngModel)]=\\\"data.destinationKey\\\"  *ngIf=\\\"labelsDestination=='Https/Http'\\\">\\r\\n                        <mat-option *ngFor=\\\"let fNo of destinationData;let i=index\\\"\\r\\n                         [value]=\\\"fNo.messageBasis\\\">\\r\\n                        {{fNo.messageBasis}}\\r\\n                        </mat-option>\\r\\n                      </mat-select>\\r\\n                  </mat-form-field>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </mat-card>\\r\\n    </div>\\r\\n    <div fxFlex=\\\"33\\\">\\r\\n        <mat-card>\\r\\n            <div fxLayout=\\\"row wrap\\\" >\\r\\n                <div fxFlex=\\\"100\\\" fxLayoutAlign=\\\"space-around center\\\">\\r\\n                  <div>\\r\\n                    <mat-form-field appearance=\\\"outline\\\">\\r\\n                        <mat-label>Default Value</mat-label>\\r\\n                        <input [disabled]=\\\"!edit || disableSubmitBtn\\\" matInput [(ngModel)]=\\\"data.defaultValue\\\">\\r\\n                      </mat-form-field>&nbsp;&nbsp;\\r\\n                      <mat-icon  *ngIf=\\\"edit\\\"(click)=\\\"delete(i)\\\" color=\\\"warn\\\" style=\\\"cursor: pointer;margin-top:10px\\\">delete</mat-icon>\\r\\n                    </div>\\r\\n                </div>\\r\\n              </div>\\r\\n        </mat-card>\\r\\n      </div>\\r\\n </div>\\r\\n</div>\\r\\n<div fxLayout=\\\"row wrap\\\">\\r\\n<div fxFlex=\\\"100\\\">\\r\\n<div fxFlex=\\\"30\\\">\\r\\n    <div fxFlex=\\\"10\\\">\\r\\n        <!-- <button  mat-raised-button > -->\\r\\n            <mat-icon (click)=\\\"add()\\\"  *ngIf=\\\"edit\\\" color=\\\"primary\\\" style=\\\"cursor:pointer;margin-top:10px\\\">add</mat-icon>\\r\\n        <!-- </button> -->\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n</div>\\r\\n</div>\\r\\n<div fxLayout=\\\"row wrap\\\">\\r\\n  <div fxFlex=\\\"100\\\">\\r\\n    <div fxFlex=\\\"40\\\"></div>\\r\\n  <!-- <div fxFlex=\\\"30\\\"> -->\\r\\n      <div fxFlex=\\\"60\\\" fxLayoutGap=\\\"8px\\\">\\r\\n        <button  mat-raised-button  *ngIf=\\\"!edit\\\" (click)=\\\"Edit()\\\" color=\\\"primary\\\" [disabled]=\\\"editBtn\\\"\\r\\n        >\\r\\n         Edit\\r\\n       </button>\\r\\n          <button  mat-raised-button  *ngIf=\\\"edit\\\" [disabled]=\\\"disableSubmitBtn\\\" (click)=\\\"onsaveRuleMapping()\\\" color=\\\"primary\\\"\\r\\n           >\\r\\n             Submit\\r\\n          </button>\\r\\n          <!-- <button  mat-raised-button type=\\\"reset\\\" color=\\\"warn\\\"\\r\\n           >\\r\\n             Reset\\r\\n          </button> -->\\r\\n      </div>\\r\\n  <!-- </div> -->\\r\\n  \\r\\n  </div>\\r\\n  </div>\\r\\n\\r\\n</mat-card>\\r\\n\\r\\n<br><br>\\r\\n<div fxLayout=\\\"row\\\">\\r\\n        <!-- <div fxFlex></div> -->\\r\\n        <div fxFlex=\\\"95\\\">\\r\\n          <mat-card style=\\\"width: 70%;  margin-left:260px;\\\">\\r\\n            <mat-card-title>\\r\\n            </mat-card-title>\\r\\n            <mat-card-content>\\r\\n              <div fxLayout=\\\"row\\\">\\r\\n                <table id=\\\"customers\\\">\\r\\n                  <tr>\\r\\n                    <th>Record Status:</th>\\r\\n                    <td>\\r\\n                      <mat-chip>{{addSysRespData.recordStatus}}</mat-chip>\\r\\n                    </td>\\r\\n                    <th>Input By:</th>\\r\\n                    <td>\\r\\n                      <mat-chip>{{addSysRespData.creatorId}}</mat-chip>\\r\\n                    </td>\\r\\n                    <th>Verified By:</th>\\r\\n                    <td>\\r\\n                      <mat-chip>{{addSysRespData.approverId}}</mat-chip>\\r\\n                    </td>\\r\\n                    <th>Verified Once:</th>\\r\\n                    <td>\\r\\n                      <mat-chip>{{addSysRespData.approvedEver}}</mat-chip>\\r\\n                    </td>\\r\\n                  </tr>\\r\\n                  <tr>\\r\\n                    <th>Modification No:</th>\\r\\n                    <td>\\r\\n                      <mat-chip>{{addSysRespData.versionNo}}</mat-chip>\\r\\n                    </td>\\r\\n                    <th>Input Date:</th>\\r\\n                    <td>\\r\\n                       <mat-chip>{{addSysRespData.createdTime | date: 'MM/dd/yyyy, h:mm a'}}</mat-chip>\\r\\n    \\r\\n                    </td>\\r\\n                    <th>Verified Date:</th>\\r\\n                    <td>\\r\\n                      <mat-chip>{{addSysRespData.approvedTime | date: 'MM/dd/yyyy, h:mm a'}}</mat-chip>\\r\\n                    </td>\\r\\n      \\r\\n                    <th>Verified Status:</th>\\r\\n                    <td>\\r\\n                      <mat-chip>{{addSysRespData.verifiedStatus}}</mat-chip>\\r\\n                    </td>\\r\\n      \\r\\n                  </tr>\\r\\n                </table>\\r\\n              </div>\\r\\n            </mat-card-content>\\r\\n          </mat-card>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n\"","export default \"\\r\\n<mat-toolbar color=\\\"primary\\\"  style=\\\"height:30px; font-size: small;\\\">\\r\\n  <span>Rule Mapping</span>\\r\\n</mat-toolbar>\\r\\n<br />\\r\\n<div>\\r\\n    <div fxLayoutAlign=\\\"end stretch\\\" fxLayoutGap=\\\"10px\\\">\\r\\n            <div fxLayoutAlign=\\\"end stretch\\\">\\r\\n                    <button mat-raised-button routerLink=\\\"/sias-v2/RuleMapping\\\" color=\\\"primary\\\"\\r\\n                    >New </button>\\r\\n            </div>\\r\\n        <button mat-raised-button routerLink=\\\"/dashboard\\\" color=\\\"warn\\\"\\r\\n        >Exit</button>\\r\\n</div>\\r\\n</div>\\r\\n<br>\\r\\n<div class=\\\" mat-elevation-z8\\\">\\r\\n    <table mat-table [dataSource]=\\\"dataSource\\\" matSort matSortActive=\\\"createdTime\\\" matSortDirection=\\\"desc\\\">\\r\\n\\r\\n        <!-- code Column -->\\r\\n        <ng-container matColumnDef=\\\"sourceId\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef > Source Id </th>\\r\\n          \\r\\n           <td mat-cell *matCellDef=\\\"let row\\\">\\r\\n                   \\r\\n                  <a routerLink=\\\"/sias-v2/viewOrEditSystem/{{row.sourceTranslationId}}\\\" (click)=\\\"ruleMappingEdit(row)\\\">{{\\r\\n                    row.sourceTranslationId\\r\\n                  }}</a>\\r\\n                  </td> \\r\\n        </ng-container>\\r\\n\\r\\n        <!-- name Column -->\\r\\n        <ng-container matColumnDef=\\\"targetTranslationId\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef > Transaltion Id </th>\\r\\n            <td mat-cell *matCellDef=\\\"let row\\\"> {{row.targetTranslationId}} </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <!-- type Column -->\\r\\n        <ng-container matColumnDef=\\\"sourceOperation\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef> Source Operation </th>\\r\\n            <td mat-cell *matCellDef=\\\"let row\\\"> {{row.sourceOperation}} </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <!-- externalIp Column -->\\r\\n        <ng-container matColumnDef=\\\"recordStatus\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef> Record Status</th>\\r\\n            <td mat-cell *matCellDef=\\\"let row\\\"> {{row.recordStatus}} </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <!-- externalPort Column -->\\r\\n        <ng-container matColumnDef=\\\"creatorId\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef > Maker Id </th>\\r\\n            <td mat-cell *matCellDef=\\\"let row\\\"> {{row.creatorId}} </td>\\r\\n        </ng-container>\\r\\n        <ng-container matColumnDef=\\\"createdTime\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Date</th>\\r\\n            <td mat-cell *matCellDef=\\\"let row\\\"> {{row.createdTime |date}} </td>\\r\\n        </ng-container>\\r\\n\\r\\n\\r\\n        \\r\\n\\r\\n\\r\\n        <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n        <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n\\r\\n        <!-- Row shown when there is no matching data. -->\\r\\n        <!-- <tr class=\\\"mat-row\\\" *matNoDataRow> -->\\r\\n        <!-- <td class=\\\"mat-cell\\\" colspan=\\\"4\\\">No data matching the filter \\\"{{input.value}}\\\"</td> -->\\r\\n        <!-- </tr> -->\\r\\n    </table>\\r\\n\\r\\n    <mat-paginator [pageSizeOptions]=\\\"[5, 10, 20]\\\" showFirstLastButtons></mat-paginator>\\r\\n</div>\\r\\n\"","export default \"<mat-toolbar color=\\\"primary\\\" style=\\\"height:30px; font-size: small;\\\">\\r\\n  <span>Rule Mapping</span>\\r\\n\\r\\n</mat-toolbar>\\r\\n\\r\\n\\r\\n<br>\\r\\n\\r\\n<mat-card>\\r\\n  <form #mapping=\\\"ngForm\\\">\\r\\n  <div fxLayout=\\\"row wrap\\\" >  \\r\\n    <div fxFlex=\\\"100\\\">\\r\\n      <div fxFlex=\\\"10\\\"></div>\\r\\n      <div fxFlex=\\\"25\\\">\\r\\n        <mat-form-field appearance=\\\"outline\\\">\\r\\n          <mat-label>Source system</mat-label>\\r\\n          <input matInput name=\\\"sourceSystem\\\" [(ngModel)]=\\\"rulemapping.systemCode\\\" required [disabled]=\\\"disableSubmitBtn\\\"\\r\\n           #sourceSystem (keyup)=\\\"onsearchingTablName($event)\\\" \\r\\n           [matAutocomplete]=\\\"autotablName\\\">\\r\\n           <mat-icon matSuffix>arrow_drop_down</mat-icon>\\r\\n           <mat-autocomplete #autotablName=\\\"matAutocomplete\\\"  (selectionChange)=\\\"onSourseSelection($event)\\\"\\r\\n           (optionSelected)=\\\"onSourseSelection($event)\\\">\\r\\n            <mat-option *ngFor=\\\"let extsys of externalSystem\\\" \\r\\n           [value]=\\\"extsys\\\" [hidden]=\\\"extsys == destinationSource\\\">{{extsys}} \\r\\n            </mat-option>\\r\\n          </mat-autocomplete>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div fxFlex=\\\"25\\\">\\r\\n\\r\\n        <mat-form-field appearance=\\\"outline\\\">\\r\\n          <mat-label>Message Type</mat-label>\\r\\n          <mat-select name=\\\"msgType\\\" #msgType #msgType=\\\"ngModel\\\" [(ngModel)]=\\\"rulemapping.messageType\\\" required\\r\\n          (selectionChange)=\\\"onSelectionOFMessageType($event)\\\" [disabled]=\\\"disableSubmitBtn\\\"\\r\\n          (optionSelected)=\\\"onSelectionOFMessageType($event)\\\">\\r\\n            <mat-option value=\\\"I\\\">\\r\\n              Incoming\\r\\n            </mat-option>\\r\\n            <mat-option value=\\\"O\\\">\\r\\n              Outgoing\\r\\n            </mat-option>\\r\\n            <!-- <mat-option value=\\\"A\\\">\\r\\n              All\\r\\n            </mat-option> -->\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div fxFlex=\\\"25\\\">\\r\\n        <mat-form-field appearance=\\\"outline\\\">\\r\\n          <mat-label>Service</mat-label>\\r\\n          <input matInput [(ngModel)]=\\\"rulemapping.serviceName\\\" required #sourserv #sourserv=\\\"ngModel\\\" name=\\\"sourserv\\\" [disabled]=\\\"disableSubmitBtn\\\" readonly>\\r\\n          <!-- <mat-select [(ngModel)]=\\\"rulemapping.serviceName\\\">\\r\\n            <mat-option *ngFor=\\\"let serv of sourceService\\\" [value]=\\\"serv.headerValue\\\">{{serv.headerValue}}</mat-option>\\r\\n          </mat-select> -->\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div fxFlex=\\\"25\\\">\\r\\n <div fxFlex=\\\"25\\\">\\r\\n        <mat-form-field appearance=\\\"outline\\\">\\r\\n          <mat-label>Operation</mat-label>\\r\\n          <input matInput [(ngModel)]=\\\"rulemapping.operationName\\\" required #souropt #souropt=\\\"ngModel\\\" name=\\\"souropt\\\" [disabled]=\\\"disableSubmitBtn\\\" readonly>\\r\\n          <!-- <mat-select>\\r\\n            <mat-option *ngFor=\\\"let opt of sourceoperation\\\" [value]=\\\"opt.headerValue\\\">{{opt.headerValue}}</mat-option>\\r\\n          </mat-select> -->\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n\\r\\n\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div fxLayout=\\\"row wrap\\\" >  \\r\\n      <div fxFlex=\\\"100\\\">\\r\\n        <div fxFlex=\\\"10\\\"></div>\\r\\n        <div fxFlex=\\\"25\\\">\\r\\n          <mat-form-field appearance=\\\"outline\\\">\\r\\n            <mat-label>Destination system</mat-label>\\r\\n            <input matInput name=\\\"destinationSystem\\\" (keyup)=\\\"onsearchingTablName($event)\\\" \\r\\n            [matAutocomplete]=\\\"autotablName1\\\"\\r\\n            [(ngModel)]=\\\"rulemappingDest.systemCode\\\" [disabled]=\\\"disableSubmitBtn\\\"\\r\\n             #destinationSystem  required>\\r\\n             <mat-icon matSuffix>arrow_drop_down</mat-icon>\\r\\n             <mat-autocomplete #autotablName1=\\\"matAutocomplete\\\"  (selectionChange)=\\\"ondestinationSource($event)\\\"\\r\\n           (optionSelected)=\\\"ondestinationSource($event)\\\">\\r\\n              <mat-option *ngFor=\\\"let extsys of externalSystem\\\" [value]=\\\"extsys\\\" [hidden]=\\\"extsys === sourseSys\\\">{{extsys}}\\r\\n              </mat-option>\\r\\n            </mat-autocomplete>\\r\\n            \\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n        <div fxFlex=\\\"25\\\">\\r\\n  \\r\\n          <mat-form-field appearance=\\\"outline\\\">\\r\\n            <mat-label>Message Type</mat-label>\\r\\n            <mat-select name=\\\"msgTypeDest\\\" #msgTypeDest #msgTypeDest=\\\"ngModel\\\" [(ngModel)]=\\\"rulemappingDest.messageType\\\" required [disabled]=\\\"disableSubmitBtn\\\"\\r\\n            (selectionChange)=\\\"msgTypeOfDestination($event)\\\" \\r\\n            (optionSelected)=\\\"msgTypeOfDestination($event)\\\">\\r\\n              <mat-option value=\\\"I\\\">\\r\\n                Incoming\\r\\n              </mat-option>\\r\\n              <mat-option value=\\\"O\\\">\\r\\n                Outgoing\\r\\n              </mat-option>\\r\\n              <!-- <mat-option value=\\\"A\\\">\\r\\n                All\\r\\n              </mat-option> -->\\r\\n            </mat-select>\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n        <div fxFlex=\\\"25\\\">\\r\\n          <mat-form-field appearance=\\\"outline\\\">\\r\\n            <mat-label>Service</mat-label>\\r\\n            <input matInput [(ngModel)]=\\\"rulemappingDest.serviceName\\\" required #servdest #servdest=\\\"ngModel\\\" name=\\\"servdest\\\" [disabled]=\\\"disableSubmitBtn\\\" readonly>\\r\\n            <!-- <mat-select>\\r\\n              <mat-option *ngFor=\\\"let destServ of destinationService\\\" [value]=\\\"destServ.headerValue\\\">{{destServ.headerValue}}</mat-option>\\r\\n            </mat-select> -->\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n        <div fxFlex=\\\"25\\\" >\\r\\n   <div fxFlex=\\\"25\\\">\\r\\n          <mat-form-field appearance=\\\"outline\\\">\\r\\n            <mat-label>Operation</mat-label>\\r\\n            <input [(ngModel)]=\\\"rulemappingDest.operationName\\\" matInput required #optdest #optdest=\\\"ngModel\\\" [disabled]=\\\"disableSubmitBtn\\\" name=\\\"optdest\\\" readonly>\\r\\n            <!-- <mat-select>\\r\\n              <mat-option *ngFor=\\\"let destOpt of destinationOperation\\\" [value]=\\\"destOpt.headerValue\\\">{{destOpt.headerValue}}</mat-option>\\r\\n            </mat-select> -->\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n  \\r\\n  \\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  <div fxLayout=\\\"row wrap\\\">\\r\\n    <div fxFlex=\\\"100\\\">\\r\\n      <div fxFlex=\\\"40\\\"></div>\\r\\n      <div fxFlex=\\\"25\\\">\\r\\n        <button mat-raised-button [disabled]=\\\"!mapping.valid ||showfetchAll\\\" (click)=\\\"fetchDestination()\\\" color=\\\"primary\\\">Fetch All</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</form>\\r\\n</mat-card>\\r\\n<br>\\r\\n<mat-card *ngIf=\\\"showSource ||showDestination\\\">\\r\\n    <form #mappingdestails=\\\"ngForm\\\">\\r\\n<div fxLayout=\\\"column wrap\\\">\\r\\n    <div fxFlex=\\\"100\\\" fxLayoutGap=\\\"center\\\">\\r\\n      <div fxFlex=\\\"33\\\">\\r\\n        <h5 fxLayoutAlign=\\\"center stretch\\\">Source System</h5>\\r\\n      </div>\\r\\n      <div fxFlex=\\\"33\\\">\\r\\n        <h5 fxLayoutAlign=\\\"center stretch\\\">Destination System</h5>\\r\\n      </div>\\r\\n      <div fxFlex=\\\"33\\\">\\r\\n        <h5 fxLayoutAlign=\\\"center stretch\\\">Default Value</h5>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n <div fxLayout=\\\"column wrap\\\"  *ngFor=\\\"let data of rulemappingDetail;let i=index\\\">\\r\\n  \\r\\n   <div fxFlex=\\\"100\\\" fxLayoutGap=\\\"20px\\\">\\r\\n  <div fxFlex=\\\"33\\\">\\r\\n    <mat-card>\\r\\n     \\r\\n      <div fxLayout=\\\"column wrap\\\" >\\r\\n        <div fxFlex=\\\"100\\\" fxLayoutAlign=\\\"space-around center\\\" >\\r\\n          <div fxFlex=\\\"50\\\">\\r\\n              <mat-form-field appearance=\\\"outline\\\"  >\\r\\n                  <mat-label  *ngIf=\\\"sourceLabel=='TCP/IP'\\\">Field No</mat-label>\\r\\n                  <mat-label *ngIf=\\\"sourceLabel=='Https/Http'\\\">Tag</mat-label>\\r\\n                  <mat-select name=\\\"sourceKey_{{i}}\\\" #sourceKey=\\\"ngModel\\\" required [(ngModel)]=\\\"data.sourceKey\\\" [disabled]=\\\"disableSubmitBtn\\\" *ngIf=\\\"sourceLabel=='TCP/IP'\\\">\\r\\n                    <mat-option *ngFor=\\\"let tag of sourceData\\\" [value]=\\\"tag.messageBasis\\\">{{tag.messageKey}}<{{tag.messageBasis}}</mat-option>   \\r\\n                  </mat-select>  \\r\\n                  <mat-select name=\\\"sourceKey_{{i}}\\\" #sourceKey=\\\"ngModel\\\" required [(ngModel)]=\\\"data.sourceKey\\\" [disabled]=\\\"disableSubmitBtn\\\" *ngIf=\\\"sourceLabel=='Https/Http'\\\">\\r\\n                    <mat-option *ngFor=\\\"let tag of sourceData\\\" [value]=\\\"tag.messageBasis\\\">{{tag.messageBasis}}</mat-option>   \\r\\n                  </mat-select>      \\r\\n                </mat-form-field>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </mat-card>\\r\\n  </div>\\r\\n  <div fxFlex=\\\"33\\\">\\r\\n      <mat-card>\\r\\n       \\r\\n        <div fxLayout=\\\"column wrap\\\" >\\r\\n          <div fxFlex=\\\"100\\\" fxLayoutAlign=\\\"space-around center\\\">\\r\\n            <div fxFlex=\\\"50\\\">\\r\\n                <mat-form-field appearance=\\\"outline\\\">\\r\\n                    <mat-label *ngIf=\\\"labelsDestination=='TCP/IP'\\\">Field No</mat-label>\\r\\n                    <mat-label *ngIf=\\\"labelsDestination=='Https/Http'\\\">Tag</mat-label>\\r\\n                    <mat-select name=\\\"destinationKey_{{i}}\\\" #destinationKey=\\\"ngModel\\\"  required [(ngModel)]=\\\"data.destinationKey\\\" [disabled]=\\\"disableSubmitBtn\\\"  *ngIf=\\\"labelsDestination=='TCP/IP'\\\">\\r\\n                      <mat-option *ngFor=\\\"let fname of destinationData;let i=index\\\" [value]=\\\"fname.messageBasis\\\">\\r\\n                        {{fname.messageKey}}<{{fname.messageBasis}}\\r\\n                      </mat-option>\\r\\n                    </mat-select>   \\r\\n                    <mat-select name=\\\"destinationKey_{{i}}\\\" #destinationKey=\\\"ngModel\\\"  required [(ngModel)]=\\\"data.destinationKey\\\" [disabled]=\\\"disableSubmitBtn\\\"  *ngIf=\\\"labelsDestination=='Https/Http'\\\">\\r\\n                      <mat-option *ngFor=\\\"let fname of destinationData;let i=index\\\" [value]=\\\"fname.messageBasis\\\">\\r\\n                      {{fname.messageBasis}}\\r\\n                      </mat-option>\\r\\n                    </mat-select>    \\r\\n                  </mat-form-field>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </mat-card>\\r\\n    </div>\\r\\n    <div fxFlex=\\\"33\\\">\\r\\n        <mat-card>\\r\\n            <div fxLayout=\\\"row wrap\\\" >\\r\\n                <div fxFlex=\\\"100\\\" fxLayoutAlign=\\\"space-around center\\\">\\r\\n                  <div>\\r\\n                    <mat-form-field appearance=\\\"outline\\\">\\r\\n                        <mat-label>Default Value</mat-label>\\r\\n                        <input name=\\\"defaultValue_{{i}}\\\" #defaultValue=\\\"ngModel\\\" matInput [(ngModel)]=\\\"data.defaultValue\\\" required [disabled]=\\\"disableSubmitBtn\\\">\\r\\n                      </mat-form-field>&nbsp;&nbsp;\\r\\n                      <mat-icon (click)=\\\"delete(i)\\\" color=\\\"warn\\\" style=\\\"cursor: pointer;margin-top: 10px\\\" [ngClass]=\\\"{'readonly-wrapper' : afterSubmit}\\\">delete</mat-icon>\\r\\n                    </div>\\r\\n                </div>\\r\\n              </div>\\r\\n        </mat-card>\\r\\n      </div>\\r\\n </div>\\r\\n\\r\\n</div>\\r\\n<br>\\r\\n<div fxLayout=\\\"row wrap\\\">\\r\\n<div fxFlex=\\\"100\\\">\\r\\n<div fxFlex=\\\"30\\\">\\r\\n    <div fxFlex=\\\"10\\\">\\r\\n        <!-- <button  mat-raised-button color=\\\"primary\\\"> -->\\r\\n            <mat-icon  (click)=\\\"add()\\\" style=\\\"cursor: pointer\\\" color=\\\"primary\\\">add</mat-icon>\\r\\n        <!-- </button> -->\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n</div>\\r\\n</div>\\r\\n<br>\\r\\n<div fxLayout=\\\"row wrap\\\">\\r\\n  <div fxFlex=\\\"100\\\">\\r\\n      <div fxFlex=\\\"40\\\"></div>\\r\\n  <!-- <div fxFlex=\\\"30\\\"> -->\\r\\n  \\r\\n      <div fxFlex=\\\"60\\\" fxLayoutGap=\\\"8px\\\">\\r\\n          <button  mat-raised-button (click)=\\\"onsaveRuleMapping()\\\" color=\\\"primary\\\"\\r\\n          [disabled]=\\\"afterSubmit || disableSubmitBtn || !mappingdestails.valid\\\"\\r\\n           >\\r\\n             Submit\\r\\n          </button>\\r\\n          <button  mat-raised-button [disabled]=\\\"disableResetBtn\\\"  color=\\\"warn\\\" type=\\\"reset\\\" (click)=\\\"onReset()\\\"\\r\\n           >\\r\\n            Reset\\r\\n          </button>\\r\\n      <!-- </div> -->\\r\\n  </div>\\r\\n  \\r\\n  </div>\\r\\n  </div>\\r\\n</form>\\r\\n</mat-card>\\r\\n\\r\\n<br><br>\\r\\n<div fxLayout=\\\"row\\\" *ngIf=\\\"showAuditLog\\\">\\r\\n        <!-- <div fxFlex></div> -->\\r\\n        <div fxFlex=\\\"95\\\">\\r\\n          <mat-card style=\\\"width: 70%;  margin-left:260px;\\\">\\r\\n            <mat-card-title>\\r\\n            </mat-card-title>\\r\\n            <mat-card-content>\\r\\n              <div fxLayout=\\\"row\\\">\\r\\n                <table id=\\\"customers\\\">\\r\\n                  <tr>\\r\\n                    <th>Record Status:</th>\\r\\n                    <td>\\r\\n                      <mat-chip>{{addSysRespData.recordStatus}}</mat-chip>\\r\\n                    </td>\\r\\n                    <th>Input By:</th>\\r\\n                    <td>\\r\\n                      <mat-chip>{{addSysRespData.creatorId}}</mat-chip>\\r\\n                    </td>\\r\\n                    <th>Verified By:</th>\\r\\n                    <td>\\r\\n                      <mat-chip>{{addSysRespData.approverId}}</mat-chip>\\r\\n                    </td>\\r\\n                    <th>Verified Once:</th>\\r\\n                    <td>\\r\\n                      <mat-chip>{{addSysRespData.approvedEver}}</mat-chip>\\r\\n                    </td>\\r\\n                  </tr>\\r\\n                  <tr>\\r\\n                    <th>Modification No:</th>\\r\\n                    <td>\\r\\n                      <mat-chip>{{addSysRespData.versionNo}}</mat-chip>\\r\\n                    </td>\\r\\n                    <th>Input Date:</th>\\r\\n                    <td>\\r\\n                       <mat-chip>{{addSysRespData.createdTime | date: 'MM/dd/yyyy, h:mm a'}}</mat-chip>\\r\\n    \\r\\n                    </td>\\r\\n                    <th>Verified Date:</th>\\r\\n                    <td>\\r\\n                      <mat-chip>{{addSysRespData.approvedTime | date: 'MM/dd/yyyy, h:mm a'}}</mat-chip>\\r\\n                    </td>\\r\\n      \\r\\n                    <th>Verified Status:</th>\\r\\n                    <td>\\r\\n                      <mat-chip>{{addSysRespData.verifiedStatus}}</mat-chip>\\r\\n                    </td>\\r\\n      \\r\\n                  </tr>\\r\\n                </table>\\r\\n              </div>\\r\\n            </mat-card-content>\\r\\n          </mat-card>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n\"","export default \"<mat-toolbar color=\\\"primary\\\" style=\\\"height:30px; font-size: small;\\\">\\r\\n    <span>Add System</span>\\r\\n</mat-toolbar>\\r\\n<br>\\r\\n   \\r\\n<mat-card *ngIf=\\\"!hideBasic\\\" class=\\\"baiscInfocard\\\">\\r\\n    <form  #basicForm=\\\"ngForm\\\">\\r\\n        <div fxLayoutAlign=\\\"center stretch\\\"><b>System Information</b></div>\\r\\n        <div fxLayout=\\\"row wrap\\\">\\r\\n            <div fxFlex=\\\"100\\\">\\r\\n\\r\\n                <div fxFlex=\\\"15\\\"></div>\\r\\n                <div fxFlex=\\\"30\\\">\\r\\n                    <div>\\r\\n                        <mat-form-field appearance=\\\"outline\\\">\\r\\n                            <mat-label>Code</mat-label>\\r\\n                            <input type=\\\"text\\\" matInput name=\\\"code\\\"\\r\\n                             #code #code=\\\"ngModel\\\" required [readonly]=\\\"isEdit\\\"\\r\\n                                [(ngModel)]=\\\"addSysBasic.systemCode\\\" \\r\\n                                [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n                        </mat-form-field>\\r\\n                    </div>\\r\\n                    <div>\\r\\n                        <mat-form-field appearance=\\\"outline\\\">\\r\\n                            <mat-label>Type</mat-label>\\r\\n                            <!-- <input type=\\\"text\\\" matInput name=\\\"type\\\" #type #type=\\\"ngModel\\\" [(ngModel)]=\\\"createExtSys1.type\\\" [ngModelOptions]=\\\"{standalone: true}\\\"> -->\\r\\n                            <mat-select name=\\\"type\\\" #type #type=\\\"ngModel\\\" type=\\\"text\\\" required\\r\\n                             [(ngModel)]=\\\"addSysBasic.serviceType\\\" [disabled]=\\\"isEdit\\\"\\r\\n                                [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n                                <mat-option value=\\\"server\\\">Server</mat-option>\\r\\n                                <mat-option value=\\\"client\\\">Client</mat-option>\\r\\n                            </mat-select>\\r\\n                        </mat-form-field>\\r\\n                    </div>\\r\\n                    <div>\\r\\n                        <mat-form-field appearance=\\\"outline\\\">\\r\\n                            <mat-label>External IP</mat-label>\\r\\n                            <input type=\\\"text\\\" matInput [readonly]=\\\"isEdit\\\"\\r\\n                            required name=\\\"sourceIp\\\" #sourceIp #sourceIp=\\\"ngModel\\\"  (input)=\\\"isValidIpv4Addr1($event)\\\"\\r\\n                            [(ngModel)]=\\\"addSysBasic.sourceIp\\\"  >\\r\\n                        </mat-form-field>\\r\\n                        <mat-error *ngIf=\\\"!invalidIp1\\\" style=\\\"margin-top:-10%;font-size:12px;\\\"> \\r\\n                            IP Address is not valid.\\r\\n                         </mat-error> \\r\\n                    </div>\\r\\n                    <div>\\r\\n                        <mat-form-field appearance=\\\"outline\\\">\\r\\n                            <mat-label>Median IP</mat-label>\\r\\n                            <input type=\\\"text\\\" matInput [readonly]=\\\"isEdit\\\"\\r\\n                            required name=\\\"medianIp\\\" #medianIp #medianIp=\\\"ngModel\\\"\\r\\n                                [(ngModel)]=\\\"addSysBasic.medianIp\\\" (input)=\\\"isValidIpv4Addr($event)\\\">\\r\\n                        </mat-form-field>\\r\\n                        <mat-error *ngIf=\\\"!invalidIp\\\" style=\\\"margin-top:-10%;font-size:12px;\\\"> \\r\\n                            IP Address is not valid.\\r\\n                         </mat-error> \\r\\n                    </div>\\r\\n                </div>\\r\\n                <div fxFlex=\\\"5\\\"></div>\\r\\n                <div fxFlex=\\\"30\\\">\\r\\n                    <div>\\r\\n                        <mat-form-field appearance=\\\"outline\\\">\\r\\n                            <mat-label>Name</mat-label>\\r\\n                            <input type=\\\"text\\\" [readonly]=\\\"isEdit\\\"\\r\\n                            required matInput name=\\\"systemName\\\" #systemName #systemName=\\\"ngModel\\\"\\r\\n                                [(ngModel)]=\\\"addSysBasic.systemName\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n                        </mat-form-field>\\r\\n                    </div>\\r\\n                    <div>\\r\\n                        <mat-form-field appearance=\\\"outline\\\">\\r\\n                            <mat-label>Message Type</mat-label>\\r\\n                            <mat-select disableOptionCentering (selectionChange)=\\\"onsystemMessageSelection($event.value)\\\" [disabled]=\\\"isEdit\\\"  #messsageType #messsageType=\\\"ngModel\\\"\\r\\n                            [(ngModel)]=\\\"addSysBasic.messsageType\\\" name=\\\"messsageType\\\" type=\\\"text\\\" required\\r\\n                                >\\r\\n                                <mat-option value=\\\"null\\\">Please select</mat-option>\\r\\n                                <mat-option value=\\\"I\\\">Incoming\\r\\n                                </mat-option>\\r\\n                                <mat-option value=\\\"O\\\">Outgoing\\r\\n                                </mat-option>\\r\\n                                <mat-option value=\\\"A\\\">All</mat-option>\\r\\n                            </mat-select>\\r\\n                        </mat-form-field>\\r\\n                    </div>\\r\\n                    <div>\\r\\n                        <mat-form-field appearance=\\\"outline\\\">\\r\\n                            <mat-label>External Port</mat-label>\\r\\n                            <input type=\\\"text\\\" minlength=\\\"2\\\" maxlength=\\\"4\\\" matInput name=\\\"sourcePort\\\" [readonly]=\\\"isEdit\\\"\\r\\n                             #sourcePort #sPort=\\\"ngModel\\\" required\\r\\n                            [(ngModel)]=\\\"addSysBasic.sourcePort\\\" (keypress)=\\\"allowNumbersOnly($event)\\\">\\r\\n                        </mat-form-field>\\r\\n                        <mat-error *ngIf=\\\"sPort.errors?.minlength\\\" style=\\\"margin-top:-10%;font-size: 12px;\\\">\\r\\n                            External Port must be at least 2 numbers.\\r\\n                        </mat-error> \\r\\n                    </div>\\r\\n                    <div>\\r\\n                        <mat-form-field appearance=\\\"outline\\\">\\r\\n                            <mat-label>Median Port</mat-label>\\r\\n                            <input type=\\\"text\\\" minlength=\\\"2\\\" maxlength=\\\"4\\\" matInput name=\\\"medianPort\\\" [readonly]=\\\"isEdit\\\"\\r\\n                            #medianPort #mPort=\\\"ngModel\\\" required\\r\\n                                [(ngModel)]=\\\"addSysBasic.medianPort\\\" (keypress)=\\\"allowNumbersOnly($event)\\\">\\r\\n                        </mat-form-field>\\r\\n                        <mat-error *ngIf=\\\"mPort.errors?.minlength\\\" style=\\\"margin-top:-10%;font-size: 12px;\\\">\\r\\n                            Median Port must be at least 2 numbers.\\r\\n                        </mat-error> \\r\\n                    </div>\\r\\n                </div>\\r\\n                <div fxFlex=\\\"10\\\"></div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div fxLayout=\\\"row wrap\\\">\\r\\n                <div fxFlex=\\\"40\\\"></div>\\r\\n            <div  fxLayoutAlign=\\\"center stretch\\\"  fxLayoutGap=\\\"10px\\\">\\r\\n              \\r\\n                <button mat-raised-button (click)=\\\"onNextOfBasicInfo()\\\" color=\\\"primary\\\"\\r\\n                *ngIf=\\\"!isEdit\\\" [disabled]=\\\"!basicForm.valid || !invalidIp || !invalidIp1\\\">Next</button>\\r\\n                   <button mat-raised-button (click)=\\\"onEdit()\\\" color=\\\"primary\\\" *ngIf=\\\"isEdit\\\" [disabled]=\\\"editBtn\\\">Edit</button>\\r\\n                   <div>\\r\\n                    <button mat-raised-button *ngIf=\\\"addSysBasic.approvedEver == 'N'\\\" (click)=\\\"authorizeSystem()\\\" [hidden]=\\\"authBtnHide\\\"  [disabled]=\\\"authBtn\\\" color=\\\"primary\\\">Authorize</button>\\r\\n                </div>\\r\\n                <div *ngIf=\\\"addSysBasic.recordStatus == 'O'\\\">\\r\\n                    <button mat-raised-button (click)=\\\"closeSystem()\\\" color=\\\"primary\\\"  [disabled]=\\\"closeBtn\\\">Close</button>\\r\\n                </div>\\r\\n                <div *ngIf=\\\"addSysBasic.recordStatus == 'C'\\\">\\r\\n                    <button mat-raised-button (click)=\\\"openSystem()\\\" color=\\\"primary\\\" [hidden]=\\\"reopenBtn\\\">Re-Open</button>\\r\\n                </div>\\r\\n                <div *ngIf=\\\"addSysBasic.approvedEver == 'N'\\\">\\r\\n                    <button mat-raised-button [disabled]=\\\"deleted\\\" (click)=\\\"deleteSystem()\\\" color=\\\"primary\\\">Delete</button>\\r\\n                </div>\\r\\n                <div >\\r\\n                    <button mat-raised-button color=\\\"primary\\\" [routerLink]=\\\"'/sias-v2/externalSysSummaryNew'\\\">Exit</button>\\r\\n                </div>\\r\\n                   <!--  -->\\r\\n\\r\\n               \\r\\n               \\r\\n                <!-- <button mat-raised-button type=\\\"reset\\\" color=\\\"warn\\\" (click)=\\\"onResetOfBasicInfo()\\\">Reset</button> -->\\r\\n            </div>\\r\\n        </div>\\r\\n    </form>\\r\\n</mat-card>\\r\\n<div *ngIf=\\\"showProgressbar\\\">\\r\\n<mat-progress-bar mode=\\\"indeterminate\\\" *ngIf=\\\"showProgressbar\\\"></mat-progress-bar>\\r\\n<p style=\\\"color: red\\\">Fetching Record... Please wait...</p>\\r\\n</div>\\r\\n<!-- Protocol screen For Both Incoming and outgoing-->\\r\\n<mat-card *ngIf=\\\"showProtocol\\\" style=\\\"width:83%;margin-left:10%\\\">\\r\\n        <form #protocol1=\\\"ngForm\\\">\\r\\n        <div fxLayout=\\\"row wrap\\\">\\r\\n                <div fxFlex=\\\"100\\\">\\r\\n                    <div fxFlex=\\\"30\\\"></div>\\r\\n                    <div fxFlex=\\\"90\\\">\\r\\n                        <h5>{{msgType}} Message Configuration</h5>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div fxLayout=\\\"column wrap\\\" >\\r\\n                    <div fxFlex=\\\"100\\\">\\r\\n                        <div fxFlex=\\\"30\\\"></div>\\r\\n                        <div fxFlex=\\\"40\\\">\\r\\n                            <mat-form-field appearance=\\\"outline\\\">\\r\\n                                    <mat-label>{{msgType}} Message Protocol</mat-label>\\r\\n                                <mat-select #protocolRef name=\\\"messageChannel\\\"\\r\\n                                [(ngModel)]=\\\"protocolForBothIncOut.messageChannel\\\"\\r\\n                                    (selectionChange)=\\\"onProtocalSlection(protocolForBothIncOut.messageChannel)\\\"\\r\\n                                    (optionSelected)=\\\"onProtocalSlection(protocolForBothIncOut.messageChannel)\\\">\\r\\n                                    <mat-option value=\\\" \\\">Please select</mat-option>\\r\\n                                    <mat-option value=\\\"TCP/IP\\\">TCP/IP</mat-option>\\r\\n                                    <mat-option value=\\\"Https/Http\\\">HTTPS/HTTP\\r\\n                                    </mat-option>\\r\\n                                    <mat-option value=\\\"MDB\\\">MDB</mat-option>\\r\\n                                    <mat-option value=\\\"EJB\\\">EJB</mat-option>\\r\\n                                    <mat-option value=\\\"DB Connection\\\">DB Connection\\r\\n                                    </mat-option>\\r\\n                                </mat-select>\\r\\n                            </mat-form-field>\\r\\n                        </div>\\r\\n            \\r\\n                    </div>\\r\\n                    <div fxFlex=\\\"100\\\">\\r\\n                        <div fxFlex=\\\"30\\\"></div>\\r\\n                        <div fxFlex=\\\"40\\\">\\r\\n                            <mat-form-field appearance=\\\"outline\\\">\\r\\n                                <mat-label>Data Type</mat-label>\\r\\n                                <mat-select required\\r\\n                                [(ngModel)]=\\\"protocolForBothIncOut.messageFormat\\\" name=\\\"messageFormat\\\"\\r\\n                                    (selectionChange)=\\\"incomingDataypeSelection(protocolForBothIncOut.messageFormat)\\\">\\r\\n                                    <mat-option *ngFor=\\\"let data of dataType\\\" [value]=\\\"data\\\">{{data}}</mat-option>\\r\\n                                </mat-select>\\r\\n                            </mat-form-field>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div fxFlex=\\\"100\\\" *ngIf=\\\"protocolForBothIncOut.messageChannel=='DB Connection'\\\">\\r\\n                        <div fxFlex=\\\"25\\\">\\r\\n                                <mat-form-field appearance=\\\"outline\\\">\\r\\n                                        <mat-label>User Name</mat-label>\\r\\n                                        <input matInput name=\\\"dbUsername\\\"\\r\\n                                         #dbUsername \\r\\n                                         [(ngModel)]=\\\"protocolForBothIncOut.dbUsername\\\">\\r\\n                                    </mat-form-field>\\r\\n                        </div>\\r\\n                        <div fxFlex=\\\"25\\\">\\r\\n                                <mat-form-field appearance=\\\"outline\\\">\\r\\n                                        <mat-label>Passowrd</mat-label>\\r\\n                                        <input matInput name=\\\"dbPassword\\\"\\r\\n                                         #dbPassword type=\\\"password\\\" \\r\\n                                         [(ngModel)]=\\\"protocolForBothIncOut.password\\\">\\r\\n                                         \\r\\n                                     </mat-form-field>\\r\\n                        </div>\\r\\n                        <div fxFlex=\\\"25\\\">\\r\\n                                <mat-form-field appearance=\\\"outline\\\">\\r\\n                                        <mat-label>DataBase Name</mat-label>\\r\\n                                        <input matInput name=\\\"dbServiceName\\\" \\r\\n                                        \\r\\n                                        #dbServiceName type=\\\"text\\\" \\r\\n                                        [(ngModel)]=\\\"protocolForBothIncOut.dbServiceName\\\">\\r\\n                                         \\r\\n                                     </mat-form-field>\\r\\n                        </div>\\r\\n                        <div fxFlex=\\\"25\\\">\\r\\n                                <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"outline\\\">\\r\\n                                        <mat-label>Connecting String</mat-label>\\r\\n                                        <textarea matInput \\r\\n                                        [(ngModel)]=\\\"protocolForBothIncOut.dbConnectString\\\" \\r\\n                                        name=\\\"dbConnectString\\\" #dbConnectString></textarea>\\r\\n                                      </mat-form-field>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div fxFlex=\\\"100\\\" fxLayoutGap=\\\"10px\\\" *ngIf=\\\"protocolForBothIncOut.messageChannel=='MDB'\\\">\\r\\n                            <div fxFlex=\\\"25\\\">\\r\\n                                    <mat-form-field appearance=\\\"outline\\\">\\r\\n                                            <mat-label>Type of Queue</mat-label>\\r\\n                                          <mat-select (selectionChange)=\\\"onMdbQueue($event)\\\">\\r\\n                                              <mat-option *ngFor=\\\"let queue of mdbQueueInc\\\" [value]=\\\"queue\\\">{{queue}}</mat-option>\\r\\n                                          </mat-select>\\r\\n                                         </mat-form-field>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div fxFlex=\\\"100\\\" fxLayoutGap=\\\"20px\\\" *ngIf=\\\"queueType=='JMS' &&protocolForBothIncOut.messageChannel=='MDB'\\\">                    \\r\\n                                <div fxFlex=\\\"20\\\" >\\r\\n                                        <mat-form-field appearance=\\\"outline\\\">\\r\\n                                           <mat-label>Queue Manager</mat-label>\\r\\n                                           <input matInput name=\\\"queueManager\\\" >\\r\\n                                        </mat-form-field>\\r\\n                                    </div>\\r\\n                                    <div fxFlex=\\\"20\\\" >\\r\\n                                            <mat-form-field appearance=\\\"outline\\\">\\r\\n                                               <mat-label>Queue Name</mat-label>\\r\\n                                               <input matInput name=\\\"queueName\\\">\\r\\n                                            </mat-form-field>\\r\\n                                        </div>\\r\\n                                        <div fxFlex=\\\"20\\\" >\\r\\n                                                <mat-form-field appearance=\\\"outline\\\">\\r\\n                                                   <mat-label>Channel</mat-label>\\r\\n                                                   <input matInput name=\\\"channel\\\">\\r\\n                                                </mat-form-field>\\r\\n                                                \\r\\n                                            </div>\\r\\n                               \\r\\n                                    \\r\\n                               \\r\\n                         </div>\\r\\n                         <div fxFlex=\\\"100\\\" fxLayoutGap=\\\"20px\\\" *ngIf=\\\"queueType=='IBM' &&protocolForBothIncOut.messageChannel=='MDB'\\\" >\\r\\n                                <div fxFlex=\\\"20\\\" fxLayoutGap=\\\"20px\\\">\\r\\n                                    <mat-form-field appearance=\\\"outline\\\">\\r\\n                                       <mat-label>Queue Manager</mat-label>\\r\\n                                       <input matInput name=\\\"queueManager\\\" >\\r\\n                                        \\r\\n                                    </mat-form-field>\\r\\n                                </div>\\r\\n                                <div fxFlex=\\\"20\\\" fxLayoutGap=\\\"20px\\\">\\r\\n                                        <mat-form-field appearance=\\\"outline\\\">\\r\\n                                           <mat-label>Queue Name</mat-label>\\r\\n                                           <input matInput name=\\\"queueName\\\"  >\\r\\n                                            \\r\\n                                        </mat-form-field>\\r\\n                                    </div>         \\r\\n                                    <div fxFlex=\\\"20\\\" fxLayoutGap=\\\"20px\\\">\\r\\n                                            <mat-form-field appearance=\\\"outline\\\">\\r\\n                                               <mat-label>Connecting Factory</mat-label>\\r\\n                                               <input matInput name=\\\"connectingFactory\\\">\\r\\n                                                \\r\\n                                            </mat-form-field>\\r\\n                                        </div>\\r\\n                               \\r\\n                                </div>\\r\\n                    <div fxFlex=\\\"100\\\" fxLayoutGap=\\\"20px\\\">\\r\\n                       <div fxFlex=\\\"40\\\"></div>\\r\\n                        <button mat-raised-button (click)=\\\"onNextOfProtocol(protocolForBothIncOut)\\\"   [disabled]=\\\"!protocol1.valid\\\"color=\\\"primary\\\">Next</button>\\r\\n                        <button mat-raised-button (click)=\\\"onPreviousToBasic()\\\" color=\\\"warn\\\">Previous</button>\\r\\n                        <!-- <button mat-raised-button (click)=\\\"onResetOfProtocol(protocolForBothIncOut)\\\"   [disabled]=\\\"!protocol1.valid\\\" color=\\\"warn\\\">Reset</button> -->\\r\\n                    </div>\\r\\n                    </div>\\r\\n                   </form>\\r\\n</mat-card>\\r\\n<!-- OUT AND iN 3RD SCREEN -->\\r\\n<mat-card *ngIf=\\\"onlyInc\\\">\\r\\n    <div fxLayout=\\\"row wrap\\\">\\r\\n        <div fxFlex=\\\"100\\\">\\r\\n            <div fxFlex=\\\"30\\\"></div>\\r\\n            <div fxFlex=\\\"90\\\">\\r\\n                <h5>Header and Service Details</h5>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div fxLayout=\\\"row wrap\\\" *ngIf=\\\"incDataType=='XML' && incProtocol=='EJB' ||incProtocol=='MDB'&& incDataType=='XML' ||incProtocol=='Https/Http' &&incDataType=='XML'\\\">\\r\\n        <div fxFlex=\\\"100\\\">\\r\\n            <div fxFlex=\\\"60\\\">\\r\\n                <input type=\\\"file\\\" id=\\\"chFile\\\" (change)=\\\"uploadFileXml($event)\\\">\\r\\n                <button mat-raised-button type=\\\"file\\\" class=\\\"btnFile\\\" (click)=\\\"chooseFile()\\\">\\r\\n                  <mat-icon>cloud_upload</mat-icon>&nbsp;&nbsp;File Upload&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{{fileName}}\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div fxLayout=\\\"row wrap\\\" *ngIf=\\\"incDataType=='CSV/EXCEL'  ||incDataType=='FLATFILE'\\\">\\r\\n        <div fxFlex=\\\"100\\\">\\r\\n            <div fxFlex=\\\"60\\\">\\r\\n               <mat-form-field appearance=\\\"outline\\\">\\r\\n                <mat-label>Folder Name</mat-label>\\r\\n                <input matInput>\\r\\n               </mat-form-field>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div fxLayout=\\\"row wrap\\\" *ngIf=\\\"incProtocol=='DB Connection' &&incDataType=='XML' ||incProtocol=='DB Connection'&& incDataType=='JSON'\\\" >\\r\\n            <div fxFlex=\\\"100\\\">\\r\\n                <div fxFlex=\\\"60\\\">\\r\\n                   <mat-form-field appearance=\\\"outline\\\">\\r\\n                    <mat-label>Table Name</mat-label>\\r\\n                    <input matInput>\\r\\n                   </mat-form-field>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div *ngIf=\\\"incDataType!='CSV/EXCEL' &&incDataType!='FLATFILE'\\\">\\r\\n            <div fxLayout=\\\"row wrap\\\" *ngFor=\\\"let iso of mdmtSystemService;let i=index\\\" [ngClass]=\\\"{'readonly-wrapper' : disableupdtae}\\\">\\r\\n                <div fxFlex=\\\"100\\\" fxLayoutGap=\\\"10px\\\">\\r\\n                        <div fxFlex=\\\"15\\\">\\r\\n                                <mat-form-field appearance=\\\"outline\\\">\\r\\n                                    <mat-label>{{matLabel_header}}</mat-label>\\r\\n                                    <!-- <input name=\\\"headerTag\\\" #headerTag=\\\"ngModel\\\" \\r\\n                                    matInput [(ngModel)]=\\\"iso.headerTag\\\"> -->\\r\\n                                    <mat-select name=\\\"headerTag\\\" name=\\\"headerTag\\\" \\r\\n                                    required placeholder=\\\"{{matLabel_header}}\\\"\\r\\n                                    #headerTag #headerTag=\\\"ngModel\\\"\\r\\n                                    [(ngModel)]=\\\"iso.headerTag\\\">\\r\\n                                            <mat-option *ngFor=\\\"let header of headerTagData\\\"\\r\\n                                            [value]=\\\"header.headerTag\\\">\\r\\n                                            {{header.headerTag}}\\r\\n                                            </mat-option>\\r\\n                                        </mat-select> \\r\\n                                    <!-- <mat-select name=\\\"messageKey\\\" #messageKey=\\\"ngModel\\\" [(ngModel)]=\\\"iso.messageKey\\\"> \\r\\n                                        <mat-option *ngFor=\\\"let mkey of messageKeyIso\\\"\\r\\n                                        [value]=\\\"mkey\\\">\\r\\n                                        {{mkey}}\\r\\n                                        </mat-option>\\r\\n                                    </mat-select> -->\\r\\n                                      \\r\\n                                </mat-form-field>\\r\\n                        </div>\\r\\n                    <div fxFlex=\\\"15\\\" *ngIf=\\\"incDataType!='XML' &&matLabel1!='null'\\\">\\r\\n                        <mat-form-field appearance=\\\"outline\\\">\\r\\n                            <mat-label>{{matLabel1}}</mat-label>\\r\\n                            <!-- (selectionChange)=\\\"onSelectingMessageBasis($event,i)\\\"   -->\\r\\n                            <mat-select name=\\\"messageKey_{{i}}\\\" #messageKey=\\\"ngModel\\\"\\r\\n                            [(ngModel)]=\\\"iso.messageKey\\\" required (selectionChange)=\\\"onSelectingMessageBasis($event,i)\\\"> \\r\\n                              <mat-option *ngFor=\\\"let mkey of isoRespData\\\"\\r\\n                              [value]=\\\"mkey.fieldNo\\\">\\r\\n                              {{mkey.fieldNo}}\\r\\n                              </mat-option>\\r\\n                          </mat-select> \\r\\n\\r\\n                        </mat-form-field>\\r\\n                    </div>\\r\\n                    \\r\\n                    <div fxFlex=\\\"15\\\" *ngIf=\\\"incDataType=='XML'\\\">\\r\\n                            <mat-form-field appearance=\\\"outline\\\">\\r\\n                                <mat-label>{{matLabel2}}</mat-label>\\r\\n                                <!-- <input name=\\\"messageKey\\\" #messageKey=\\\"ngModel\\\" \\r\\n                                matInput [(ngModel)]=\\\"iso.messageKey\\\"> -->\\r\\n                                 \\r\\n                                <mat-select name=\\\"messageBasis\\\" #messageBasis #messageBasis=\\\"ngModel\\\" [(ngModel)]=\\\"iso.messageBasis\\\"\\r\\n                                required     (selectionChange)=\\\"onselectingTag($event,i)\\\">\\r\\n                                      <mat-option *ngFor=\\\"let data of messageBasisIso\\\" [disabled]=\\\"shouldDisableTagOption(data)\\\"\\r\\n                                      [value]=\\\"data\\\">\\r\\n                                      {{data}}\\r\\n                                      </mat-option>\\r\\n                                  </mat-select>\\r\\n                                  \\r\\n                            </mat-form-field>\\r\\n                    </div>\\r\\n                   \\r\\n                    <div fxFlex=\\\"15\\\" *ngIf=\\\"incDataType!='XML'\\\">\\r\\n                            <mat-form-field appearance=\\\"outline\\\">\\r\\n                                <mat-label>{{matLabel3}}</mat-label>\\r\\n                                <!-- <input matInput name=\\\"dataType\\\" #dataType #dataType=\\\"ngModel\\\" [(ngModel)]=\\\"iso.dataType\\\"> -->\\r\\n                                <mat-select name=\\\"dataType_{{i}}\\\" #dataType required\\r\\n                                #dataType=\\\"ngModel\\\" [(ngModel)]=\\\"iso.dataType\\\">\\r\\n                                <mat-option *ngFor=\\\"let outtype of typeDataIso\\\" [value]=\\\"outtype\\\">{{outtype}}</mat-option>\\r\\n                                    </mat-select> \\r\\n                            </mat-form-field>\\r\\n                    </div>\\r\\n                    <div fxFlex=\\\"15\\\" *ngIf=\\\"incDataType=='XML'\\\">\\r\\n                        <mat-form-field appearance=\\\"outline\\\">\\r\\n                            <mat-label>{{matLabel3}}</mat-label>\\r\\n                            <!-- <input matInput name=\\\"dataType\\\" #dataType #dataType=\\\"ngModel\\\" [(ngModel)]=\\\"iso.dataType\\\"> -->\\r\\n                         <mat-select name=\\\"dataType\\\" #dataType #dataType=\\\"ngModel\\\" [(ngModel)]=\\\"iso.dataType\\\" required>\\r\\n                                    <mat-option value=\\\"numeric\\\">\\r\\n                                    Numeric\\r\\n                                    </mat-option>\\r\\n                                    <mat-option value=\\\"alphaNumeric\\\">\\r\\n                                      Alpha  Numeric\\r\\n                                        </mat-option>\\r\\n                                        <mat-option value=\\\"date\\\">\\r\\n                                            Date\\r\\n                                            </mat-option>\\r\\n                                </mat-select>  \\r\\n                        </mat-form-field>\\r\\n                </div>\\r\\n                    <div fxFlex=\\\"15\\\">\\r\\n                            <mat-form-field appearance=\\\"outline\\\">\\r\\n                                    <mat-label>{{matLabel4}}</mat-label>\\r\\n                                    <input name=\\\"messageBasis\\\" matInput required\\r\\n                                     name=\\\"headerValue\\\" #headerValue #headerValue=\\\"ngModel\\\"\\r\\n                                    [(ngModel)]=\\\"iso.headerValue\\\">\\r\\n                                    <!-- <mat-select name=\\\"messageBasis\\\" name=\\\"headerValue\\\" #headerValue #headerValue=\\\"ngModel\\\"\\r\\n                                    [(ngModel)]=\\\"iso.headerValue\\\">\\r\\n                                            <mat-option *ngFor=\\\"let header of headerValueIso\\\"\\r\\n                                            [value]=\\\"header\\\">\\r\\n                                            {{header}}\\r\\n                                            </mat-option>\\r\\n                                        </mat-select> -->\\r\\n                                </mat-form-field>\\r\\n                        </div> \\r\\n                       \\r\\n                        <div fxFlex=\\\"15\\\">\\r\\n                                <mat-form-field appearance=\\\"outline\\\">\\r\\n                                        <mat-label>{{matLabel5}}</mat-label>\\r\\n                                        <!-- <input name=\\\"encryption\\\" matInput\\r\\n                                         name=\\\"encryption\\\" #encryption #encryption=\\\"ngModel\\\"\\r\\n                                        [(ngModel)]=\\\"iso.encryption\\\"> -->\\r\\n                                        <mat-select name=\\\"encryption\\\" name=\\\"encryption\\\" #encryption\\r\\n                                        #encryption=\\\"encryption\\\" required\\r\\n                                       [(ngModel)]=\\\"iso.encryption\\\">\\r\\n                                       <mat-option >--Select--</mat-option>\\r\\n                                       <mat-option value=\\\"No Encryption\\\">No Encryption</mat-option>\\r\\n                                       <mat-option value=\\\"BASE64\\\">\\r\\n                                               BASE64\\r\\n                                               </mat-option>\\r\\n                                               <mat-option value=\\\"SHA264\\\">\\r\\n                                                       SHA264\\r\\n                                                       </mat-option>\\r\\n                                                       <mat-option value=\\\"SHA512\\\">\\r\\n                                                               SHA512\\r\\n                                                               </mat-option>\\r\\n                                           </mat-select> \\r\\n                                    </mat-form-field>\\r\\n                            </div> \\r\\n                 \\r\\n                    <div fxFlex=\\\"20\\\">\\r\\n                        <!-- <button mat-raised-button > -->\\r\\n                            <mat-icon (click)=\\\"onDelete(i)\\\" color=\\\"warn\\\" style=\\\"cursor: pointer;margin-top:10px\\\">delete</mat-icon>\\r\\n                        <!-- </button> -->\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        \\r\\n        </div>\\r\\n       \\r\\n        <div fxLayout=\\\"row wrap\\\">\\r\\n                <div fxFlex=\\\"100\\\">\\r\\n                        <div fxFlex=\\\"50\\\">\\r\\n                                <!-- <button mat-raised-button > -->\\r\\n                                        <mat-icon (click)=\\\"add()\\\" color=\\\"primary\\\" style=\\\"cursor: pointer;margin-top:10px\\\" [ngClass]=\\\"{'readonly-wrapper' : disableupdtae}\\\">add</mat-icon>\\r\\n                                    <!-- </button> -->\\r\\n                        </div>\\r\\n                    </div>\\r\\n        </div>\\r\\n            <br>\\r\\n            <div fxLayout=\\\"row wrap\\\">\\r\\n                    <div fxFlex=\\\"40\\\"></div>\\r\\n                <div>\\r\\n                    <div fxLayout=\\\"row wrap\\\" fxLayoutGap=\\\"20px\\\">\\r\\n                        <div>\\r\\n                            <button mat-raised-button (click)=\\\"onFisnih()\\\" color=\\\"primary\\\" [disabled]=\\\"disableupdtae || mdmtSystemService.length < 2\\\">Update</button>\\r\\n                        </div>\\r\\n                        <!-- <div *ngIf=\\\"ableToAuthorize\\\">\\r\\n                            <button mat-raised-button (click)=\\\"authorizeSystem()\\\" color=\\\"primary\\\">Authorize</button>\\r\\n                        </div>\\r\\n                        <div *ngIf=\\\"ableToAuthorize && addSysBasic.recordStatus == 'O'\\\">\\r\\n                            <button mat-raised-button (click)=\\\"closeSystem()\\\" color=\\\"primary\\\">Close</button>\\r\\n                        </div>\\r\\n                        <div *ngIf=\\\"ableToAuthorize && addSysBasic.recordStatus == 'C'\\\">\\r\\n                            <button mat-raised-button (click)=\\\"openSystem()\\\" color=\\\"primary\\\">Open</button>\\r\\n                        </div>\\r\\n                        <div *ngIf=\\\"addSysBasic.approvedEver == 'N'\\\">\\r\\n                            <button mat-raised-button (click)=\\\"deleteSystem()\\\" color=\\\"primary\\\">Delete</button>\\r\\n                        </div> -->\\r\\n                        <div>\\r\\n                            <!-- <button mat-raised-button (click)=\\\"onReset()\\\" color=\\\"primary\\\">Reset</button> -->\\r\\n                        </div>\\r\\n                        <div>\\r\\n                            <button mat-raised-button (click)=\\\"moveToProtocol()\\\" color=\\\"warn\\\" [disabled]=\\\"disableupdtae\\\">Previous</button>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div>\\r\\n                    <div>\\r\\n                        \\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n</mat-card>\\r\\n\\r\\n<!-- All tab for protocol selection -->\\r\\n<mat-card *ngIf=\\\"showTab\\\">\\r\\n        <mat-tab-group #tabgroup [selectedIndex]=\\\"selectedIndex\\\"\\r\\n        (selectedTabChange)=\\\"tabChanged($event)\\\" [ngClass]=\\\"{'readonly-wrapper' : disableupdtae}\\\">\\r\\n                <mat-tab label=\\\"Incoming\\\">\\r\\n                     <mat-card *ngIf=\\\"showProtocolForAllInc\\\">\\r\\n                         <form #incAllProtocol=\\\"ngForm\\\">\\r\\n                            <div fxLayout=\\\"row wrap\\\">\\r\\n                                    <div fxFlex=\\\"100\\\">\\r\\n                                        <div fxFlex=\\\"30\\\"></div>\\r\\n                                        <div fxFlex=\\\"90\\\">\\r\\n                                            <h5>Incoming Message Configuration</h5>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div fxLayout=\\\"column wrap\\\" >\\r\\n                                        <div fxFlex=\\\"100\\\">\\r\\n                                            <div fxFlex=\\\"30\\\"></div>\\r\\n                                            <div fxFlex=\\\"40\\\">\\r\\n                                                <mat-form-field appearance=\\\"outline\\\">\\r\\n                                                        <mat-label>Incoming Message Protocol</mat-label>\\r\\n                                                    <mat-select #protocolRef [(ngModel)]=\\\"protocolAllInc.messageChannel\\\"\\r\\n                                                     name=\\\"messageChannel\\\" required\\r\\n                                                        (selectionChange)=\\\"onProtocalSlectionIncoming(protocolAllInc.messageChannel)\\\"\\r\\n                                                        (optionSelected)=\\\"onProtocalSlectionIncoming(protocolAllInc.messageChannel)\\\">\\r\\n                                                        <mat-option value=\\\" \\\">Please select</mat-option>\\r\\n                                                        <mat-option value=\\\"TCP/IP\\\">TCP/IP</mat-option>\\r\\n                                                        <mat-option value=\\\"Https/Http\\\">HTTPS/HTTP\\r\\n                                                        </mat-option>\\r\\n                                                        <mat-option value=\\\"MDB\\\">MDB</mat-option>\\r\\n                                                        <mat-option value=\\\"EJB\\\">EJB</mat-option>\\r\\n                                                        <mat-option value=\\\"DB Connection\\\">DB Connection\\r\\n                                                        </mat-option>\\r\\n                                                    </mat-select>\\r\\n                                                </mat-form-field>\\r\\n                                            </div>\\r\\n                                \\r\\n                                        </div>\\r\\n                                        <div fxFlex=\\\"100\\\">\\r\\n                                            <div fxFlex=\\\"30\\\"></div>\\r\\n                                            <div fxFlex=\\\"40\\\">\\r\\n                                                <mat-form-field appearance=\\\"outline\\\">\\r\\n                                                        <mat-label>Data Type</mat-label>\\r\\n                                                    <mat-select [(ngModel)]=\\\"protocolAllInc.messageFormat\\\" name=\\\"messageFormat\\\" required\\r\\n                                                        (selectionChange)=\\\"incomingDataypeSelection(protocolAllInc.messageChannel)\\\"\\r\\n                                                        (optionSelected)=\\\"incomingDataypeSelection(protocolAllInc.messageChannel)\\\">\\r\\n\\r\\n                                                        <mat-option *ngFor=\\\"let data of dataTypeOfIncAll\\\" [value]=\\\"data\\\">{{data}}</mat-option>\\r\\n                                                    </mat-select>\\r\\n                                                </mat-form-field>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div fxFlex=\\\"100\\\" *ngIf=\\\"protocolAllInc.messageChannel=='DB Connection'\\\">\\r\\n                                            <div fxFlex=\\\"25\\\">\\r\\n                                                    <mat-form-field appearance=\\\"outline\\\">\\r\\n                                                            <mat-label>User Name</mat-label>\\r\\n                                                            <input matInput name=\\\"dbUsername\\\"\\r\\n                                                             #dbUsername \\r\\n                                                             [(ngModel)]=\\\"protocolAllInc.dbUsername\\\">\\r\\n                                                        </mat-form-field>\\r\\n                                            </div>\\r\\n                                            <div fxFlex=\\\"25\\\">\\r\\n                                                    <mat-form-field appearance=\\\"outline\\\">\\r\\n                                                            <mat-label>Passowrd</mat-label>\\r\\n                                                            <input matInput name=\\\"dbPassword\\\" #dbPassword \\r\\n                                                            type=\\\"password\\\" [(ngModel)]=\\\"protocolAllInc.password\\\">\\r\\n                                                             \\r\\n                                                         </mat-form-field>\\r\\n                                            </div>\\r\\n                                            <div fxFlex=\\\"25\\\">\\r\\n                                                    <mat-form-field appearance=\\\"outline\\\">\\r\\n                                                            <mat-label>DataBase Name</mat-label>\\r\\n                                                            <input matInput name=\\\"dbServiceName\\\" \\r\\n                                                            #dbServiceName type=\\\"text\\\" \\r\\n                                                            [(ngModel)]=\\\"protocolAllInc.dbServiceName\\\">\\r\\n                                                             \\r\\n                                                         </mat-form-field>\\r\\n                                            </div>\\r\\n                                            <div fxFlex=\\\"25\\\">\\r\\n                                                    <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"outline\\\">\\r\\n                                                            <mat-label>Connecting String</mat-label>\\r\\n                                                            <textarea matInput \\r\\n                                                            [(ngModel)]=\\\"protocolAllInc.dbConnectString\\\" \\r\\n                                                            name=\\\"dbConnectString\\\" #dbConnectString></textarea>\\r\\n                                                          </mat-form-field>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div fxFlex=\\\"100\\\" fxLayoutGap=\\\"10px\\\" *ngIf=\\\"protocolAllInc.messageChannel=='MDB'\\\">\\r\\n                                                <div fxFlex=\\\"25\\\">\\r\\n                                                        <mat-form-field appearance=\\\"outline\\\">\\r\\n                                                                <mat-label>Type of Queue</mat-label>\\r\\n                                                              <mat-select (selectionChange)=\\\"onMdbQueue($event)\\\" name=\\\"queueType\\\">\\r\\n                                                                  <mat-option *ngFor=\\\"let queue of mdbQueueInc\\\" [value]=\\\"queue\\\">{{queue}}</mat-option>\\r\\n                                                              </mat-select>\\r\\n                                                             </mat-form-field>\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n                                            <div fxFlex=\\\"100\\\" fxLayoutGap=\\\"20px\\\" *ngIf=\\\"queueType=='JMS' &&protocolAllInc.messageChannel=='MDB'\\\">                    \\r\\n                                                    <div fxFlex=\\\"20\\\" >\\r\\n                                                            <mat-form-field appearance=\\\"outline\\\">\\r\\n                                                               <mat-label>Queue Manager</mat-label>\\r\\n                                                               <input matInput name=\\\"queueManager\\\" >\\r\\n                                                            </mat-form-field>\\r\\n                                                        </div>\\r\\n                                                        <div fxFlex=\\\"20\\\" >\\r\\n                                                                <mat-form-field appearance=\\\"outline\\\">\\r\\n                                                                   <mat-label>Queue Name</mat-label>\\r\\n                                                                   <input matInput name=\\\"queueName\\\">\\r\\n                                                                </mat-form-field>\\r\\n                                                            </div>\\r\\n                                                            <div fxFlex=\\\"20\\\" >\\r\\n                                                                    <mat-form-field appearance=\\\"outline\\\">\\r\\n                                                                       <mat-label>Channel</mat-label>\\r\\n                                                                       <input matInput name=\\\"channel\\\">\\r\\n                                                                    </mat-form-field>\\r\\n                                                                    \\r\\n                                                                </div>\\r\\n                                                   \\r\\n                                                        \\r\\n                                                   \\r\\n                                             </div>\\r\\n                                             <div fxFlex=\\\"100\\\" fxLayoutGap=\\\"20px\\\" *ngIf=\\\"queueType=='IBM' &&protocolAllInc.messageChannel=='MDB'\\\" >\\r\\n                                                    <div fxFlex=\\\"20\\\" fxLayoutGap=\\\"20px\\\">\\r\\n                                                        <mat-form-field appearance=\\\"outline\\\">\\r\\n                                                           <mat-label>Queue Manager</mat-label>\\r\\n                                                           <input matInput name=\\\"queueManager\\\" >\\r\\n                                                            \\r\\n                                                        </mat-form-field>\\r\\n                                                    </div>\\r\\n                                                    <div fxFlex=\\\"20\\\" fxLayoutGap=\\\"20px\\\">\\r\\n                                                            <mat-form-field appearance=\\\"outline\\\">\\r\\n                                                               <mat-label>Queue Name</mat-label>\\r\\n                                                               <input matInput name=\\\"queueName\\\"  >\\r\\n                                                                \\r\\n                                                            </mat-form-field>\\r\\n                                                        </div>         \\r\\n                                                        <div fxFlex=\\\"20\\\" fxLayoutGap=\\\"20px\\\">\\r\\n                                                                <mat-form-field appearance=\\\"outline\\\">\\r\\n                                                                   <mat-label>Connecting Factory</mat-label>\\r\\n                                                                   <input matInput name=\\\"connectingFactory\\\">\\r\\n                                                                    \\r\\n                                                                </mat-form-field>\\r\\n                                                            </div>\\r\\n                                                   \\r\\n                                                    </div>\\r\\n                                        <div fxFlex=\\\"100\\\" fxLayoutGap=\\\"20px\\\">\\r\\n                                           <div fxFlex=\\\"40\\\"></div>\\r\\n                                                <button mat-raised-button (click)=\\\"nextToServcieFromInc(protocolAllInc)\\\" \\r\\n                                                [disabled]=\\\"!incAllProtocol.valid\\\"color=\\\"primary\\\">Next</button>\\r\\n                                                <button mat-raised-button (click)=\\\"onPreviousToBasic()\\\" color=\\\"warn\\\">Previous</button>\\r\\n                                                <!-- <button mat-raised-button (click)=\\\"onResetOfProtocol()\\\" color=\\\"warn\\\" [disabled]=\\\"!incAllProtocol.valid\\\">Reset</button> -->\\r\\n                                        </div>\\r\\n                                        </div>\\r\\n                                    </form>\\r\\n                     </mat-card>\\r\\n                                 <mat-card *ngIf=\\\"showServiceScreen\\\">\\r\\n                                        <div >\\r\\n                                            <div fxLayout=\\\"row wrap\\\">\\r\\n                                                <div fxFlex=\\\"100\\\">\\r\\n                                                    <div fxFlex=\\\"30\\\"></div>\\r\\n                                                    <div fxFlex=\\\"90\\\">\\r\\n                                                        <h5>Header and Service Details</h5>\\r\\n                                                    </div>\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n                                                        <div fxLayout=\\\"row wrap\\\" *ngIf=\\\"incDataType=='XML' && incProtocol=='EJB' ||incProtocol=='MDB'&& incDataType=='XML' ||incProtocol=='Https/Http' &&incDataType=='XML'\\\">\\r\\n                                                            <div fxFlex=\\\"100\\\">\\r\\n                                                                <div fxFlex=\\\"60\\\">\\r\\n                                                                    <input type=\\\"file\\\" id=\\\"chFile\\\" (change)=\\\"uploadFileXml($event)\\\">\\r\\n                <button mat-raised-button type=\\\"file\\\" class=\\\"btnFile\\\" (click)=\\\"chooseFile()\\\">\\r\\n                    <mat-icon>cloud_upload</mat-icon>&nbsp;&nbsp;File Upload&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{{fileName}}\\r\\n                </button>\\r\\n                                                                </div>\\r\\n                                                            </div>\\r\\n                                                        </div>\\r\\n                                                        <div fxLayout=\\\"row wrap\\\" *ngIf=\\\"incDataType=='CSV/EXCEL'  ||incDataType=='FLATFILE'\\\">\\r\\n                                                            <div fxFlex=\\\"100\\\">\\r\\n                                                                <div fxFlex=\\\"60\\\">\\r\\n                                                                   <mat-form-field appearance=\\\"outline\\\">\\r\\n                                                                    <mat-label>Folder Name</mat-label>\\r\\n                                                                    <input matInput>\\r\\n                                                                   </mat-form-field>\\r\\n                                                                </div>\\r\\n                                                            </div>\\r\\n                                                        </div>\\r\\n                                                        <div fxLayout=\\\"row wrap\\\" *ngIf=\\\"incProtocol=='DB Connection' &&incDataType=='XML' ||incProtocol=='DB Connection'&& incDataType=='JSON'\\\" >\\r\\n                                                                <div fxFlex=\\\"100\\\">\\r\\n                                                                    <div fxFlex=\\\"60\\\">\\r\\n                                                                       <mat-form-field appearance=\\\"outline\\\">\\r\\n                                                                        <mat-label>Table Name</mat-label>\\r\\n                                                                        <input matInput>\\r\\n                                                                       </mat-form-field>\\r\\n                                                                    </div>\\r\\n                                                                </div>\\r\\n                                                            </div>\\r\\n                                                            <div *ngIf=\\\"incDataType!='CSV/EXCEL' &&incDataType!='FLATFILE'\\\">\\r\\n                                                            <div fxLayout=\\\"row wrap\\\" *ngFor=\\\"let incTcp of mdmtSystemServiceAllInc;let i=index\\\">\\r\\n                                                                    <div fxFlex=\\\"100\\\" fxLayoutGap=\\\"10px\\\">\\r\\n                                                                            <div fxFlex=\\\"15\\\">\\r\\n                                                                                    <mat-form-field appearance=\\\"outline\\\">\\r\\n                                                                                        <mat-label>{{matLabel_header}}</mat-label>\\r\\n                                                                                        <!-- <input name=\\\"headerTag\\\" #headerTag=\\\"ngModel\\\" \\r\\n                                                                                        matInput [(ngModel)]=\\\"incTcp.headerTag\\\"> -->\\r\\n                                                                                        <mat-select name=\\\"headerTag\\\" name=\\\"headerTag\\\" \\r\\n                                                                                        #headerTag #headerTag=\\\"ngModel\\\"\\r\\n                                                                                        [(ngModel)]=\\\"incTcp.headerTag\\\">\\r\\n                                                                                                <mat-option *ngFor=\\\"let header of headerTagData\\\"\\r\\n                                                                                                [value]=\\\"header.headerTag\\\">\\r\\n                                                                                                {{header.headerTag}}\\r\\n                                                                                                </mat-option>\\r\\n                                                                                            </mat-select>  \\r\\n                                                                                          \\r\\n                                                                                    </mat-form-field>\\r\\n                                                                            </div>\\r\\n                                                                        <div fxFlex=\\\"15\\\" *ngIf=\\\"protocolAllInc.messageFormat!='XML'&& matLabel1!='null'\\\">\\r\\n                                                                            <mat-form-field appearance=\\\"outline\\\">\\r\\n                                                                                <mat-label>{{matLabel1}}</mat-label>\\r\\n                                                                                <!-- (selectionChange)=\\\"onSelectingMessageBasis($event,i)\\\" -->\\r\\n                                                                                     <mat-select name=\\\"messageKey\\\" #messageKey=\\\"ngModel\\\" [(ngModel)]=\\\"incTcp.messageKey\\\"\\r\\n                                                                                     (selectionChange)=\\\"onSelectingMessageBasis($event,i)\\\"> \\r\\n                                                                                        <mat-option *ngFor=\\\"let mkey of isoRespData\\\"\\r\\n                                                                                        [value]=\\\"mkey.fieldNo\\\">\\r\\n                                                                                        {{mkey.fieldNo }}\\r\\n                                                                                        </mat-option>\\r\\n                                                                                    </mat-select> \\r\\n                                                                              \\r\\n                                                                            </mat-form-field>\\r\\n                                                                        </div>\\r\\n                                                                       \\r\\n                                                                           \\r\\n                                                                        <div fxFlex=\\\"15\\\" *ngIf=\\\"protocolAllInc.messageFormat!='XML'\\\">\\r\\n                                                                                <mat-form-field appearance=\\\"outline\\\">\\r\\n                                                                                    <mat-label>{{matLabel2}}</mat-label>\\r\\n                                                                                    <!-- <input matInput name=\\\"messageKey\\\" #messageKey=\\\"ngModel\\\"\\r\\n                                                                                     [(ngModel)]=\\\"incTcp.messageKey\\\"> -->\\r\\n                                                                                     <mat-select name=\\\"messageBasis\\\" #messageBasis #messageBasis=\\\"ngModel\\\"\\r\\n                                                                                     [(ngModel)]=\\\"incTcp.messageBasis\\\"  \\r\\n                                                                                  >\\r\\n                                                                                            <mat-option *ngFor=\\\"let data of messageBasisIso\\\"\\r\\n                                                                                            [value]=\\\"data\\\">\\r\\n                                                                                            {{data}}\\r\\n                                                                                            </mat-option>\\r\\n                                                                                        </mat-select>\\r\\n                                                                                     \\r\\n                                                                                </mat-form-field>\\r\\n                                                                        </div>\\r\\n                                                                        <div fxFlex=\\\"15\\\" *ngIf=\\\"protocolAllInc.messageFormat=='XML'\\\">\\r\\n                                                                            <mat-form-field appearance=\\\"outline\\\">\\r\\n                                                                                <mat-label>{{matLabel2}}</mat-label>\\r\\n                                                                                <!-- <input matInput name=\\\"messageKey\\\" #messageKey=\\\"ngModel\\\"\\r\\n                                                                                 [(ngModel)]=\\\"incTcp.messageKey\\\"> -->\\r\\n                                                                                 <mat-select name=\\\"messageBasis\\\" #messageBasis #messageBasis=\\\"ngModel\\\"\\r\\n                                                                                 [(ngModel)]=\\\"incTcp.messageBasis\\\"\\r\\n                                                                                 (selectionChange)=\\\"onselectingTag($event,i)\\\"\\r\\n                                                                              >\\r\\n                                                                                        <mat-option *ngFor=\\\"let data of messageBasisIso\\\"\\r\\n                                                                                        [value]=\\\"data\\\">\\r\\n                                                                                        {{data}}\\r\\n                                                                                        </mat-option>\\r\\n                                                                                    </mat-select>\\r\\n                                                                                 \\r\\n                                                                            </mat-form-field>\\r\\n                                                                    </div>\\r\\n                                                                        <div fxFlex=\\\"15\\\" *ngIf=\\\"protocolAllInc.messageFormat!='XML'\\\">\\r\\n                                                                            <mat-form-field appearance=\\\"outline\\\">\\r\\n                                                                                <mat-label>Data Type</mat-label>\\r\\n                                                                                <!-- <input name=\\\"dataType\\\" #dataType #dataType=\\\"ngModel\\\" [(ngModel)]=\\\"incTcp.dataType\\\" matInput> -->\\r\\n\\r\\n                                                                                <mat-select name=\\\"dataType_{{i}}\\\" #dataType required\\r\\n                                                                                #dataType=\\\"ngModel\\\" [(ngModel)]=\\\"incTcp.dataType\\\">\\r\\n                                                                                <mat-option *ngFor=\\\"let outtype of typeDataIso\\\" [value]=\\\"outtype\\\">{{outtype}}</mat-option>\\r\\n                                                                                    </mat-select> \\r\\n                                                                            </mat-form-field>\\r\\n                                                                    </div>\\r\\n                                                                        <div fxFlex=\\\"15\\\"  *ngIf=\\\"protocolAllInc.messageFormat=='XML'\\\">\\r\\n                                                                                <mat-form-field appearance=\\\"outline\\\">\\r\\n                                                                                    <mat-label>{{matLabel3}}</mat-label>\\r\\n                                                                                    <!-- <input name=\\\"dataType\\\" #dataType #dataType=\\\"ngModel\\\" [(ngModel)]=\\\"incTcp.dataType\\\" matInput> -->\\r\\n\\r\\n                                                                                    <mat-select name=\\\"dataType\\\" #dataType #dataType=\\\"ngModel\\\" [(ngModel)]=\\\"incTcp.dataType\\\">\\r\\n                                                                                        <mat-option value=\\\"numeric\\\">\\r\\n                                                                                            Numeric\\r\\n                                                                                            </mat-option>\\r\\n                                                                                            <mat-option value=\\\"alphaNumeric\\\">\\r\\n                                                                                              Alpha  Numeric\\r\\n                                                                                                </mat-option>\\r\\n                                                                                                <mat-option value=\\\"date\\\">\\r\\n                                                                                                    Date\\r\\n                                                                                                    </mat-option>\\r\\n                                                                                        </mat-select>\\r\\n                                                                                </mat-form-field>\\r\\n                                                                        </div>\\r\\n                                                                        <div fxFlex=\\\"15\\\">\\r\\n                                                                                <mat-form-field appearance=\\\"outline\\\">\\r\\n                                                                                        <mat-label>{{matLabel4}}</mat-label>\\r\\n                                                                                        <input matInput name=\\\"headerValue\\\"\\r\\n                                                                                         #headerValue=\\\"ngModel\\\" [(ngModel)]=\\\"incTcp.headerValue\\\">\\r\\n                                                                                        <!-- <mat-select name=\\\"messageBasis\\\" name=\\\"headerValue\\\" #headerValue #headerValue=\\\"ngModel\\\"\\r\\n                                                                                        [(ngModel)]=\\\"incTcp.headerValue\\\">\\r\\n                                                                                                <mat-option *ngFor=\\\"let header of headerValueIso\\\"\\r\\n                                                                                                [value]=\\\"header\\\">\\r\\n                                                                                                {{header}}\\r\\n                                                                                                </mat-option>\\r\\n                                                                                            </mat-select> -->\\r\\n                                                                                    </mat-form-field>\\r\\n                                                                            </div>\\r\\n                                                                           \\r\\n                                                                            <div fxFlex=\\\"15\\\">\\r\\n                                                                                    <mat-form-field appearance=\\\"outline\\\">\\r\\n                                                                                            <mat-label>{{matLabel5}}</mat-label>\\r\\n                                                                                            <!-- <input name=\\\"encryption\\\" matInput\\r\\n                                                                                             name=\\\"encryption\\\" #encryption \\r\\n                                                                                             #encryption=\\\"ngModel\\\"\\r\\n                                                                                            [(ngModel)]=\\\"incTcp.encryption\\\"> -->\\r\\n                                                                                           <mat-select name=\\\"encryption\\\" name=\\\"encryption\\\" #headerValue #headerValue=\\\"ngModel\\\"\\r\\n                                                                                            [(ngModel)]=\\\"incTcp.encryption\\\">\\r\\n                                                                                            <mat-option >--Select--</mat-option>\\r\\n                                                                                             <mat-option value=\\\"No Encryption\\\">No Encryption</mat-option>\\r\\n                                                                                                    <mat-option value=\\\"BASE64\\\">\\r\\n                                                                                                    BASE64\\r\\n                                                                                                    </mat-option>\\r\\n                                                                                                    <mat-option value=\\\"SHA264\\\">\\r\\n                                                                                                            SHA264\\r\\n                                                                                                            </mat-option>\\r\\n                                                                                                            <mat-option value=\\\"SHA512\\\">\\r\\n                                                                                                                    SHA512\\r\\n                                                                                                                    </mat-option>\\r\\n                                                                                                </mat-select> \\r\\n                                                                                        </mat-form-field>\\r\\n                                                                                </div> \\r\\n                                                                        <div fxFlex=\\\"20\\\">\\r\\n                                                                            <!-- <button mat-raised-button > -->\\r\\n                                                                                <mat-icon (click)=\\\"onDeleteOFAllInc(i)\\\" color=\\\"primary\\\" style=\\\"cursor: pointer;margin-top:10px\\\">delete</mat-icon>\\r\\n                                                                            <!-- </button> -->\\r\\n                                                                        </div>\\r\\n                                                                    </div>\\r\\n                                                                </div>\\r\\n                                                            </div>\\r\\n                                                            <div fxLayout=\\\"row wrap\\\">\\r\\n                                                                    <div fxFlex=\\\"100\\\">\\r\\n                                                                        <div fxFlex=\\\"50\\\">\\r\\n                                                                                <!-- <button mat-raised-button> -->\\r\\n                                                                                        <mat-icon  (click)=\\\"addOfIncAll()\\\" color=\\\"primary\\\" style=\\\"cursor: pointer;margin-top:10px\\\">add</mat-icon>\\r\\n                                                                                    <!-- </button> -->\\r\\n                                                                        </div>\\r\\n                                                                    </div>\\r\\n                                                                </div>\\r\\n                                                                <div fxLayout=\\\"row wrap\\\">\\r\\n                                                                    <div fxFlex=\\\"100\\\">\\r\\n                                                                            <div fxFlex=\\\"40\\\"></div>\\r\\n                                                                        <div fxFlex=\\\"60\\\" fxLayoutGap=\\\"20px\\\">\\r\\n                                                                            \\r\\n                                                                                <button mat-raised-button (click)=\\\"nextStep(tabgroup.selectedIndex)\\\" color=\\\"primary\\\">Next</button>\\r\\n                                                                                <button mat-raised-button (click)=\\\"moveIncProtocolAll()\\\" color=\\\"warn\\\">Previous</button>\\r\\n                                                                                <!-- <button mat-raised-button (click)=\\\"onResetOFAllInc()\\\" color=\\\"primary\\\">Reset</button> -->\\r\\n                                                                        </div>\\r\\n                                                                    </div>\\r\\n                                                                </div>\\r\\n                                                   \\r\\n                                                   \\r\\n                                        </div>\\r\\n                                 </mat-card>\\r\\n                </mat-tab>\\r\\n                <!-- outgoing -->\\r\\n                <mat-tab label=\\\"Outgoing\\\"> \\r\\n                    <mat-card *ngIf=\\\"showProtocolForAllOut\\\">\\r\\n                        <form #protocolAllOut1=\\\"ngForm\\\">\\r\\n                        <div fxLayout=\\\"row wrap\\\">\\r\\n                                <div fxFlex=\\\"100\\\">\\r\\n                                    <div fxFlex=\\\"30\\\"></div>\\r\\n                                    <div fxFlex=\\\"90\\\">\\r\\n                                        <h5>Outgoing Message Configuration</h5>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div fxLayout=\\\"column wrap\\\" >\\r\\n                                    <div fxFlex=\\\"100\\\">\\r\\n                                        <div fxFlex=\\\"30\\\"></div>\\r\\n                                        <div fxFlex=\\\"40\\\">\\r\\n                                            <mat-form-field appearance=\\\"outline\\\">\\r\\n                                                <mat-label>Outgoing Message Protocol</mat-label>\\r\\n                                                <mat-select #protocolRef [(ngModel)]=\\\"protocolAllOut.messageChannel\\\" name=\\\"messageChannel\\\" required\\r\\n                                                    (selectionChange)=\\\"onProtocalSlectionOutGoing(protocolAllOut.messageChannel)\\\"\\r\\n                                                    (optionSelected)=\\\"onProtocalSlectionOutgoing(protocolAllOut.messageChannel)\\\">\\r\\n                                                    <mat-option value=\\\" \\\">Please select</mat-option>\\r\\n                                                    <mat-option value=\\\"TCP/IP\\\">TCP/IP</mat-option>\\r\\n                                                    <mat-option value=\\\"Https/Http\\\">HTTPS/HTTP\\r\\n                                                    </mat-option>\\r\\n                                                    <mat-option value=\\\"MDB\\\">MDB</mat-option>\\r\\n                                                    <mat-option value=\\\"EJB\\\">EJB</mat-option>\\r\\n                                                    <mat-option value=\\\"DB Connection\\\">DB Connection\\r\\n                                                    </mat-option>\\r\\n                                                </mat-select>\\r\\n                                            </mat-form-field>\\r\\n                                        </div>\\r\\n                            \\r\\n                                    </div>\\r\\n                                    <div fxFlex=\\\"100\\\">\\r\\n                                        <div fxFlex=\\\"30\\\"></div>\\r\\n                                        <div fxFlex=\\\"40\\\">\\r\\n                                            <mat-form-field appearance=\\\"outline\\\">\\r\\n                                                <mat-label>Data Type</mat-label>\\r\\n                                                <mat-select [(ngModel)]=\\\"protocolAllOut.messageFormat\\\" name=\\\"messageFormat\\\" required \\r\\n                                                    (selectionChange)=\\\"incomingDataypeSelection(protocolAllOut.messageFormat)\\\">\\r\\n                                                    <mat-option *ngFor=\\\"let data of dataType\\\" [value]=\\\"data\\\">{{data}}</mat-option>\\r\\n                                                </mat-select>\\r\\n                                            </mat-form-field>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div fxFlex=\\\"100\\\" *ngIf=\\\"protocolAllOut.messageChannel=='DB Connection'\\\">\\r\\n                                        <div fxFlex=\\\"25\\\">\\r\\n                                                <mat-form-field appearance=\\\"outline\\\">\\r\\n                                                        <mat-label>User Name</mat-label>\\r\\n                                                        <input matInput name=\\\"dbUsername\\\"\\r\\n                                                         #dbUsername \\r\\n                                                         [(ngModel)]=\\\"protocolAllOut.dbUsername\\\">\\r\\n                                                    </mat-form-field>\\r\\n                                        </div>\\r\\n                                        <div fxFlex=\\\"25\\\">\\r\\n                                                <mat-form-field appearance=\\\"outline\\\">\\r\\n                                                        <mat-label>Passowrd</mat-label>\\r\\n                                                        <input matInput name=\\\"dbPassword\\\" #dbPassword \\r\\n                                                        type=\\\"password\\\" [(ngModel)]=\\\"protocolAllOut.password\\\">\\r\\n                                                         \\r\\n                                                     </mat-form-field>\\r\\n                                        </div>\\r\\n                                        <div fxFlex=\\\"25\\\">\\r\\n                                                <mat-form-field appearance=\\\"outline\\\">\\r\\n                                                        <mat-label>DataBase Name</mat-label>\\r\\n                                                        <input matInput name=\\\"dbServiceName\\\" \\r\\n                                                        #dbServiceName type=\\\"text\\\" \\r\\n                                                        [(ngModel)]=\\\"protocolAllOut.dbServiceName\\\">\\r\\n                                                         \\r\\n                                                     </mat-form-field>\\r\\n                                        </div>\\r\\n                                        <div fxFlex=\\\"25\\\">\\r\\n                                                <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"outline\\\">\\r\\n                                                        <mat-label>Connecting String</mat-label>\\r\\n                                                        <textarea matInput \\r\\n                                                        [(ngModel)]=\\\"protocolAllOut.dbConnectString\\\" \\r\\n                                                        name=\\\"dbConnectString\\\" #dbConnectString></textarea>\\r\\n                                                      </mat-form-field>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div fxFlex=\\\"100\\\" fxLayoutGap=\\\"10px\\\" *ngIf=\\\"protocolAllOut.messageChannel=='MDB'\\\">\\r\\n                                            <div fxFlex=\\\"25\\\">\\r\\n                                                    <mat-form-field appearance=\\\"outline\\\">\\r\\n                                                            <mat-label>Type of Queue</mat-label>\\r\\n                                                          <mat-select (selectionChange)=\\\"onMdbQueue($event)\\\" name=\\\"queuetype\\\">\\r\\n                                                              <mat-option *ngFor=\\\"let queue of mdbQueueInc\\\" [value]=\\\"queue\\\">{{queue}}</mat-option>\\r\\n                                                          </mat-select>\\r\\n                                                         </mat-form-field>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div fxFlex=\\\"100\\\" fxLayoutGap=\\\"20px\\\" *ngIf=\\\"queueType=='JMS' &&protocolAllOut.messageChannel=='MDB'\\\">                    \\r\\n                                                <div fxFlex=\\\"20\\\" >\\r\\n                                                        <mat-form-field appearance=\\\"outline\\\">\\r\\n                                                           <mat-label>Queue Manager</mat-label>\\r\\n                                                           <input matInput name=\\\"queueManager\\\" >\\r\\n                                                        </mat-form-field>\\r\\n                                                    </div>\\r\\n                                                    <div fxFlex=\\\"20\\\" >\\r\\n                                                            <mat-form-field appearance=\\\"outline\\\">\\r\\n                                                               <mat-label>Queue Name</mat-label>\\r\\n                                                               <input matInput name=\\\"queueName\\\">\\r\\n                                                            </mat-form-field>\\r\\n                                                        </div>\\r\\n                                                        <div fxFlex=\\\"20\\\" >\\r\\n                                                                <mat-form-field appearance=\\\"outline\\\">\\r\\n                                                                   <mat-label>Channel</mat-label>\\r\\n                                                                   <input matInput name=\\\"channel\\\">\\r\\n                                                                </mat-form-field>\\r\\n                                                                \\r\\n                                                            </div>\\r\\n                                               \\r\\n                                                    \\r\\n                                               \\r\\n                                         </div>\\r\\n                                         <div fxFlex=\\\"100\\\" fxLayoutGap=\\\"20px\\\" *ngIf=\\\"queueType=='IBM' &&protocolAllOut.messageChannel=='MDB'\\\" >\\r\\n                                                <div fxFlex=\\\"20\\\" fxLayoutGap=\\\"20px\\\">\\r\\n                                                    <mat-form-field appearance=\\\"outline\\\">\\r\\n                                                       <mat-label>Queue Manager</mat-label>\\r\\n                                                       <input matInput name=\\\"queueManager\\\" >\\r\\n                                                        \\r\\n                                                    </mat-form-field>\\r\\n                                                </div>\\r\\n                                                <div fxFlex=\\\"20\\\" fxLayoutGap=\\\"20px\\\">\\r\\n                                                        <mat-form-field appearance=\\\"outline\\\">\\r\\n                                                           <mat-label>Queue Name</mat-label>\\r\\n                                                           <input matInput name=\\\"queueName\\\"  >\\r\\n                                                            \\r\\n                                                        </mat-form-field>\\r\\n                                                    </div>         \\r\\n                                                    <div fxFlex=\\\"20\\\" fxLayoutGap=\\\"20px\\\">\\r\\n                                                            <mat-form-field appearance=\\\"outline\\\">\\r\\n                                                               <mat-label>Connecting Factory</mat-label>\\r\\n                                                               <input matInput name=\\\"connectingFactory\\\">\\r\\n                                                                \\r\\n                                                            </mat-form-field>\\r\\n                                                        </div>\\r\\n                                               \\r\\n                                                </div>\\r\\n                                    <div fxFlex=\\\"100\\\" fxLayoutGap=\\\"20px\\\">\\r\\n                                        <div fxFlex=\\\"40\\\"></div>\\r\\n                                            <button mat-raised-button (click)=\\\"onNextOfProtocolAllOut(protocolAllOut)\\\" [disabled]=\\\"!protocolAllOut1.valid\\\" color=\\\"primary\\\">Next</button>\\r\\n                                            <button mat-raised-button (click)=\\\"onPreviousToBasic()\\\" color=\\\"warn\\\">Previous</button>\\r\\n                                            <!-- <button mat-raised-button (click)=\\\"onResetOfProtocolAllOut()\\\" color=\\\"warn\\\" [disabled]=\\\"!protocolAllOut1.valid\\\">Reset</button> -->\\r\\n                                    </div>\\r\\n                                    </div>\\r\\n                                </form>\\r\\n                    </mat-card>\\r\\n\\r\\n                                <mat-card *ngIf=\\\"showServiceScreeAllOut\\\">\\r\\n                                    <div fxLayout=\\\"row wrap\\\">\\r\\n                                        <div fxFlex=\\\"100\\\">\\r\\n                                            <div fxFlex=\\\"30\\\"></div>\\r\\n                                            <div fxFlex=\\\"90\\\">\\r\\n                                                <h5>Header and Service Details</h5>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                        <div >\\r\\n                                              \\r\\n                                                        <div fxLayout=\\\"row wrap\\\" *ngIf=\\\"protocolAllOut.messageFormat=='XML' && incProtocol=='EJB' ||incProtocol=='MDB'&& protocolAllOut.messageFormat=='XML' ||incProtocol=='Https/Http' &&incDataType=='XML'\\\" [ngClass]=\\\"{'readonly-wrapper' : disableupdtae}\\\">\\r\\n                                                            <div fxFlex=\\\"100\\\">\\r\\n                                                                <div fxFlex=\\\"60\\\">\\r\\n                                                                    <input type=\\\"file\\\" id=\\\"chFile\\\" (change)=\\\"uploadFileXml($event)\\\">\\r\\n                                                                    <button mat-raised-button type=\\\"file\\\" class=\\\"btnFile\\\" (click)=\\\"chooseFile()\\\">\\r\\n                                                                      <mat-icon>cloud_upload</mat-icon>&nbsp;&nbsp;File Upload&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{{fileName}}\\r\\n                                                                    </button>\\r\\n                                                                </div>\\r\\n                                                            </div>\\r\\n                                                        </div>\\r\\n                                                        <div fxLayout=\\\"row wrap\\\" *ngIf=\\\"incDataType=='CSV/EXCEL'  ||incDataType=='FLATFILE'\\\">\\r\\n                                                            <div fxFlex=\\\"100\\\">\\r\\n                                                                <div fxFlex=\\\"60\\\">\\r\\n                                                                   <mat-form-field appearance=\\\"outline\\\">\\r\\n                                                                    <mat-label>Folder Name</mat-label>\\r\\n                                                                    <input matInput>\\r\\n                                                                   </mat-form-field>\\r\\n                                                                </div>\\r\\n                                                            </div>\\r\\n                                                        </div>\\r\\n                                                        <div fxLayout=\\\"row wrap\\\" *ngIf=\\\"incProtocol=='DB Connection' &&incDataType=='XML' ||incProtocol=='DB Connection'&& incDataType=='JSON'\\\" >\\r\\n                                                                <div fxFlex=\\\"100\\\">\\r\\n                                                                    <div fxFlex=\\\"60\\\">\\r\\n                                                                       <mat-form-field appearance=\\\"outline\\\">\\r\\n                                                                        <mat-label>Table Name</mat-label>\\r\\n                                                                        <input matInput>\\r\\n                                                                       </mat-form-field>\\r\\n                                                                    </div>\\r\\n                                                                </div>\\r\\n                                                            </div>\\r\\n                                                            <div *ngIf=\\\"incDataType!='CSV/EXCEL' &&incDataType!='FLATFILE'\\\">\\r\\n                                                            <div fxLayout=\\\"row wrap\\\" *ngFor=\\\"let tcpOut of mdmtSystemServiceAllOut;let i=index\\\" [ngClass]=\\\"{'readonly-wrapper' : disableupdtae}\\\">\\r\\n                                                                    <div fxFlex=\\\"100\\\" fxLayoutGap=\\\"10px\\\">\\r\\n                                                                            <div fxFlex=\\\"15\\\">\\r\\n                                                                                    <mat-form-field appearance=\\\"outline\\\">\\r\\n                                                                                            <mat-label>{{matLabel_header}}</mat-label>\\r\\n                                                                                            <!-- <input matInput name=\\\"headerTag\\\" name=\\\"headerTag\\\"\\r\\n                                                                                             #headerTag #headerTag=\\\"ngModel\\\"\\r\\n                                                                                            [(ngModel)]=\\\"tcpOut.headerTag\\\"> -->\\r\\n                                                                                            <mat-select name=\\\"headerTag\\\" name=\\\"headerTag\\\" \\r\\n                                                                                            #headerTag #headerTag=\\\"ngModel\\\"\\r\\n                                                                                            [(ngModel)]=\\\"tcpOut.headerTag\\\">\\r\\n                                                                                                    <mat-option *ngFor=\\\"let header of headerTagData\\\"\\r\\n                                                                                                    [value]=\\\"header.headerTag\\\">\\r\\n                                                                                                    {{header.headerTag}}\\r\\n                                                                                                    </mat-option>\\r\\n                                                                                                </mat-select> \\r\\n                                                                                        </mat-form-field>\\r\\n                                                                            </div>\\r\\n                                                                        <div fxFlex=\\\"15\\\" *ngIf=\\\"matLabel1!=null && matLabel1!='null'\\\">\\r\\n                                                                                <mat-form-field appearance=\\\"outline\\\">\\r\\n                                                                                        <mat-label>{{matLabel1}}</mat-label>\\r\\n                                                                                        <!-- (selectionChange)=\\\"onSelectingMessageBasis($event,i)\\\" -->\\r\\n                                                                                        <mat-select name=\\\"messageKey\\\" #messageKey=\\\"ngModel\\\"\\r\\n                                                                                        [(ngModel)]=\\\"tcpOut.messageKey\\\" (selectionChange)=\\\"onSelectingMessageBasis($event,i)\\\"> \\r\\n                                                                                               <mat-option *ngFor=\\\"let mkey of isoRespData\\\"\\r\\n                                                                                               [value]=\\\"mkey.fieldNo\\\">\\r\\n                                                                                               {{mkey.fieldNo }}\\r\\n                                                                                               </mat-option>\\r\\n                                                                                           </mat-select>      \\r\\n                                                        \\r\\n                                                                                    </mat-form-field>\\r\\n                                                                        </div>\\r\\n                                                                        \\r\\n                                                                        <div fxFlex=\\\"15\\\"  *ngIf=\\\"protocolAllOut.messageFormat!='XML'\\\">\\r\\n                                                                            <mat-form-field appearance=\\\"outline\\\" >\\r\\n                                                                                    <mat-label>{{matLabel2}}</mat-label>\\r\\n                                                                                    <!-- <input matInput  name=\\\"messageKey\\\" #messageKey=\\\"ngModel\\\"\\r\\n                                                                                    [(ngModel)]=\\\"tcpOut.messageKey\\\"> -->\\r\\n                                                                                  \\r\\n                                                                                        <mat-select name=\\\"messageBasis\\\"\\r\\n                                                                                        #messageBasis #messageBasis=\\\"ngModel\\\"\\r\\n                                                                                       \\r\\n                                                                                         [(ngModel)]=\\\"tcpOut.messageBasis\\\"  >\\r\\n                                                                                           <mat-option *ngFor=\\\"let data of messageBasisIso\\\"\\r\\n                                                                                           [value]=\\\"data\\\">\\r\\n                                                                                           {{data}}\\r\\n                                                                                           </mat-option>\\r\\n                                                                                       </mat-select>\\r\\n                                                                                </mat-form-field>\\r\\n                                                                        </div>\\r\\n                                                                        <div fxFlex=\\\"15\\\"  *ngIf=\\\"protocolAllOut.messageFormat=='XML'\\\">\\r\\n                                                                            <mat-form-field appearance=\\\"outline\\\" >\\r\\n                                                                                    <mat-label>{{matLabel2}}</mat-label>\\r\\n                                                                                    <!-- <input matInput  name=\\\"messageKey\\\" #messageKey=\\\"ngModel\\\"\\r\\n                                                                                    [(ngModel)]=\\\"tcpOut.messageKey\\\"> -->\\r\\n                                                                                  \\r\\n                                                                                        <mat-select name=\\\"messageBasis\\\"\\r\\n                                                                                        #messageBasis #messageBasis=\\\"ngModel\\\"\\r\\n                                                                                        (selectionChange)=\\\"onselectingTag($event,i)\\\"\\r\\n                                                                                       \\r\\n                                                                                         [(ngModel)]=\\\"tcpOut.messageBasis\\\">\\r\\n                                                                                           <mat-option *ngFor=\\\"let data of messageBasisIsoAllOut\\\"\\r\\n                                                                                           [value]=\\\"data\\\">\\r\\n                                                                                           {{data}}\\r\\n                                                                                           </mat-option>\\r\\n                                                                                       </mat-select>\\r\\n                                                                                </mat-form-field>\\r\\n                                                                        </div>\\r\\n                                                                        <div fxFlex=\\\"15\\\" *ngIf=\\\"protocolAllOut.messageFormat!='XML'\\\">\\r\\n                                                                            <mat-form-field appearance=\\\"outline\\\">\\r\\n                                                                                <mat-label>Data Type</mat-label>\\r\\n                                                                                <!-- <input name=\\\"dataType\\\" #dataType #dataType=\\\"ngModel\\\" [(ngModel)]=\\\"incTcp.dataType\\\" matInput> -->\\r\\n\\r\\n                                                                                <mat-select name=\\\"dataType_{{i}}\\\" #dataType required\\r\\n                                                                                #dataType=\\\"ngModel\\\" [(ngModel)]=\\\"tcpOut.dataType\\\">\\r\\n                                                                                <mat-option *ngFor=\\\"let outtype of typeDataIso\\\" [value]=\\\"outtype\\\">{{outtype}}</mat-option>\\r\\n                                                                                    </mat-select> \\r\\n                                                                            </mat-form-field>\\r\\n                                                                    </div>\\r\\n                                                                        <div fxFlex=\\\"15\\\"  *ngIf=\\\"protocolAllOut.messageFormat=='XML'\\\">\\r\\n                                                                                <mat-form-field appearance=\\\"outline\\\">\\r\\n                                                                                        <mat-label>{{matLabel3}}</mat-label>\\r\\n                                                                                        <!-- <input matInput name=\\\"dataType\\\" #dataType \\r\\n                                                                                        #dataType=\\\"ngModel\\\" [(ngModel)]=\\\"tcpOut.dataType\\\"> -->\\r\\n                                                                                        <mat-select name=\\\"dataType\\\" #dataType \\r\\n                                                                                        #dataType=\\\"ngModel\\\" [(ngModel)]=\\\"tcpOut.dataType\\\">\\r\\n                                                                                        <mat-option value=\\\"numeric\\\">\\r\\n                                                                                            Numeric\\r\\n                                                                                            </mat-option>\\r\\n                                                                                            <mat-option value=\\\"alphaNumeric\\\">\\r\\n                                                                                              Alpha  Numeric\\r\\n                                                                                                </mat-option>\\r\\n                                                                                                <mat-option value=\\\"date\\\">\\r\\n                                                                                                    Date\\r\\n                                                                                                    </mat-option>\\r\\n                                                                                            </mat-select> \\r\\n                                                                                    </mat-form-field>\\r\\n                                                                        </div>\\r\\n                                                                        <div fxFlex=\\\"15\\\">\\r\\n                                                                                <mat-form-field appearance=\\\"outline\\\">\\r\\n                                                                                        <mat-label>{{matLabel4}}</mat-label>\\r\\n                                                                                        <input matInput name=\\\"messageBasis\\\" name=\\\"headerValue\\\" #headerValue #headerValue=\\\"ngModel\\\"\\r\\n                                                                                        [(ngModel)]=\\\"tcpOut.headerValue\\\">\\r\\n                                                                                        <!-- <mat-select name=\\\"messageBasis\\\" name=\\\"headerValue\\\" #headerValue #headerValue=\\\"ngModel\\\"\\r\\n                                                                                        [(ngModel)]=\\\"tcpOut.headerValue\\\">\\r\\n                                                                                                <mat-option *ngFor=\\\"let header of headerValueIso\\\"\\r\\n                                                                                                [value]=\\\"header\\\">\\r\\n                                                                                                {{header}}\\r\\n                                                                                                </mat-option>\\r\\n                                                                                            </mat-select> -->\\r\\n                                                                                    </mat-form-field>\\r\\n                                                                        </div>\\r\\n                                                                      \\r\\n                                                                        <div fxFlex=\\\"15\\\">\\r\\n                                                                                <mat-form-field appearance=\\\"outline\\\">\\r\\n                                                                                        <mat-label>{{matLabel5}}</mat-label>\\r\\n                                                                                        <!-- <input matInput name=\\\"encryption\\\" name=\\\"encryption\\\"\\r\\n                                                                                         #encryption #encryption=\\\"ngModel\\\"\\r\\n                                                                                        [(ngModel)]=\\\"tcpOut.encryption\\\"> -->\\r\\n                                                                                        <mat-select name=\\\"encryption\\\" name=\\\"encryption\\\" #encryption\\r\\n                                                                                         #encryption=\\\"encryption\\\"\\r\\n                                                                                        [(ngModel)]=\\\"tcpOut.encryption\\\">\\r\\n                                                                                        <mat-option >--Select--</mat-option>\\r\\n                                                                                        <mat-option value=\\\"No Encryption\\\">No Encryption</mat-option>\\r\\n                                                                                        <mat-option value=\\\"BASE64\\\">\\r\\n                                                                                                BASE64\\r\\n                                                                                                </mat-option>\\r\\n                                                                                                <mat-option value=\\\"SHA264\\\">\\r\\n                                                                                                        SHA264\\r\\n                                                                                                        </mat-option>\\r\\n                                                                                                        <mat-option value=\\\"SHA512\\\">\\r\\n                                                                                                                SHA512\\r\\n                                                                                                                </mat-option>\\r\\n                                                                                            </mat-select> \\r\\n                                                                                    </mat-form-field>\\r\\n                                                                        </div>\\r\\n                                                                        <div fxFlex=\\\"20\\\">\\r\\n                                                                            <!-- <button mat-raised-button > -->\\r\\n                                                                                <mat-icon (click)=\\\"onDeleteOfAllOut(i)\\\" color=\\\"warn\\\" style=\\\"cursor: pointer;margin-top:10px\\\">delete</mat-icon>\\r\\n                                                                            <!-- </button> -->\\r\\n                                                                        </div>\\r\\n                                                                    </div>\\r\\n                                                                </div>\\r\\n                                                                <div fxLayout=\\\"row wrap\\\">\\r\\n                                                                    <div fxFlex=\\\"100\\\">\\r\\n                                                                        <div fxFlex=\\\"50\\\" [ngClass]=\\\"{'readonly-wrapper' : disableupdtae}\\\">\\r\\n                                                                                <!-- <button mat-raised-button> -->\\r\\n                                                                                        <mat-icon  (click)=\\\"addOfAllOut()\\\" color=\\\"primary\\\" style=\\\"cursor: pointer;margin-top:10px\\\">add</mat-icon>\\r\\n                                                                                    <!-- </button> -->\\r\\n                                                                        </div>\\r\\n                                                                    </div>\\r\\n                                                                </div>\\r\\n                                                            </div>\\r\\n                                                \\r\\n                                                                <div fxLayout=\\\"row wrap\\\">\\r\\n                                                                    <div fxFlex=\\\"100\\\">\\r\\n                                                                        <div fxFlex=\\\"40\\\"></div>\\r\\n                                                                        <div fxFlex=\\\"60\\\" fxLayoutGap=\\\"20px\\\">\\r\\n                                                                                <button mat-raised-button (click)=\\\"onFisnih()\\\" color=\\\"primary\\\" [disabled]=\\\"disableupdtae || mdmtSystemServiceAllOut.length < 2\\\">Update</button>\\r\\n                                                                                <button mat-raised-button (click)=\\\"moveToProtocolAllOut()\\\" color=\\\"warn\\\" [disabled]=\\\"disableupdtae\\\">Previous</button>\\r\\n                                                                                <!-- <button mat-raised-button (click)=\\\"onResetOfAllOut()\\\" color=\\\"warn\\\">Reset</button> -->\\r\\n\\r\\n                                                                        </div>\\r\\n                                                                    </div>\\r\\n                                                                </div>\\r\\n                                                   \\r\\n                                                   \\r\\n                                        </div>\\r\\n                                 </mat-card>\\r\\n                </mat-tab>\\r\\n              \\r\\n              </mat-tab-group>\\r\\n</mat-card>\\r\\n <br>\\r\\n <div fxLayout=\\\"row wrap\\\">\\r\\n        <div fxFlex=\\\"100\\\">\\r\\n          <mat-card>\\r\\n            <mat-card-title>\\r\\n            </mat-card-title>\\r\\n            <mat-card-content>\\r\\n              <div fxLayout=\\\"row\\\">\\r\\n                <table id=\\\"customers\\\">\\r\\n                  <tr>\\r\\n                    <th>Record Status:</th>\\r\\n                    <td>\\r\\n                      <mat-chip>{{addSysBasic.recordStatus}}</mat-chip>\\r\\n                    </td>\\r\\n                    <th>Input By:</th>\\r\\n                    <td>\\r\\n                      <mat-chip>{{addSysBasic.creatorId}}</mat-chip>\\r\\n                    </td>\\r\\n                    <th>Verified By:</th>\\r\\n                    <td>\\r\\n                      <mat-chip>{{addSysBasic.approverId}}</mat-chip>\\r\\n                    </td>\\r\\n                    <th>Verified Ever:</th>\\r\\n                    <td>\\r\\n                      <mat-chip>{{addSysBasic.approvedEver}}</mat-chip>\\r\\n                    </td>\\r\\n                  </tr>\\r\\n                  <tr>\\r\\n                    <th>Modification No:</th>\\r\\n                    <td>\\r\\n                      <mat-chip>{{addSysBasic.versionNo}}</mat-chip>\\r\\n                    </td>\\r\\n                    <th>Input Date:</th>\\r\\n                    <td>\\r\\n                       <mat-chip>{{addSysBasic.createdTime | date: 'MM/dd/yyyy, h:mm a'}}</mat-chip>\\r\\n    \\r\\n                    </td>\\r\\n                    <th>Verified Date:</th>\\r\\n                    <td>\\r\\n                      <mat-chip>{{addSysBasic.approvedTime | date: 'MM/dd/yyyy, h:mm a'}}</mat-chip>\\r\\n                    </td>\\r\\n      \\r\\n                    <th>Verified Status:</th>\\r\\n                    <td>\\r\\n                      <mat-chip>{{addSysBasic.approvedStatus}}</mat-chip>\\r\\n                    </td>\\r\\n      \\r\\n                  </tr>\\r\\n                </table>\\r\\n              </div>\\r\\n            </mat-card-content>\\r\\n          </mat-card>\\r\\n        </div>\\r\\n      </div>  \\r\\n     \\r\\n\"","export default \"<mat-toolbar color=\\\"primary\\\" style=\\\"height:30px; font-size: small;\\\">\\r\\n    <span>Add System</span>\\r\\n</mat-toolbar>\\r\\n<br>\\r\\n\\r\\n\\r\\n<mat-card *ngIf=\\\"!hideBasic\\\" class=\\\"baiscInfocard\\\">\\r\\n    <form #basicForm basicForm=\\\"ngForm\\\">\\r\\n        <div fxLayoutAlign=\\\"center stretch\\\"><b>Basic Information</b></div>\\r\\n        <div fxLayout=\\\"row wrap\\\">\\r\\n            <div fxFlex=\\\"100\\\">\\r\\n\\r\\n                <div fxFlex=\\\"15\\\"></div>\\r\\n                <div fxFlex=\\\"30\\\">\\r\\n                    <div>\\r\\n                        <mat-form-field appearance=\\\"outline\\\">\\r\\n                            <mat-label>Code</mat-label>\\r\\n                            <input type=\\\"text\\\" matInput name=\\\"code\\\" #code #code=\\\"ngModel\\\"\\r\\n                                [(ngModel)]=\\\"createExtSys1.code\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n                        </mat-form-field>\\r\\n                    </div>\\r\\n                    <div>\\r\\n                        <mat-form-field appearance=\\\"outline\\\">\\r\\n                            <mat-label>Type</mat-label>\\r\\n                            <!-- <input type=\\\"text\\\" matInput name=\\\"type\\\" #type #type=\\\"ngModel\\\" [(ngModel)]=\\\"createExtSys1.type\\\" [ngModelOptions]=\\\"{standalone: true}\\\"> -->\\r\\n                            <mat-select name=\\\"type\\\" #type #type=\\\"ngModel\\\" [(ngModel)]=\\\"createExtSys1.type\\\"\\r\\n                                [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n                                <mat-option value=\\\"server\\\">Server</mat-option>\\r\\n                                <mat-option value=\\\"client\\\">Client</mat-option>\\r\\n                            </mat-select>\\r\\n                        </mat-form-field>\\r\\n                    </div>\\r\\n                    <div>\\r\\n                        <mat-form-field appearance=\\\"outline\\\">\\r\\n                            <mat-label>External IP</mat-label>\\r\\n                            <input type=\\\"text\\\" matInput name=\\\"externalIp\\\" #externalIp #externalPort=\\\"ngModel\\\"\\r\\n                                [(ngModel)]=\\\"createExtSys1.externalIp\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n                        </mat-form-field>\\r\\n                    </div>\\r\\n                    <div>\\r\\n                        <mat-form-field appearance=\\\"outline\\\">\\r\\n                            <mat-label>Median IP</mat-label>\\r\\n                            <input type=\\\"text\\\" matInput name=\\\"medianIp\\\" #medianIp #medianIp=\\\"ngModel\\\"\\r\\n                                [(ngModel)]=\\\"createExtSys1.medianIp\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n                        </mat-form-field>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div fxFlex=\\\"5\\\"></div>\\r\\n                <div fxFlex=\\\"30\\\">\\r\\n                    <div>\\r\\n                        <mat-form-field appearance=\\\"outline\\\">\\r\\n                            <mat-label>Name</mat-label>\\r\\n                            <input type=\\\"text\\\" matInput name=\\\"name\\\" #namein #namein=\\\"ngModel\\\"\\r\\n                                [(ngModel)]=\\\"createExtSys1.name\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n                        </mat-form-field>\\r\\n                    </div>\\r\\n                    <div>\\r\\n                        <mat-form-field appearance=\\\"outline\\\">\\r\\n                            <mat-label>Message Type</mat-label>\\r\\n                            <mat-select (selectionChange)=\\\"onsystemMessageSelection($event.value)\\\"\\r\\n                                [(ngModel)]=\\\"createExtSys1.openToMessage\\\" name=\\\"openToMesg\\\"\\r\\n                                [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n                                <mat-option>Please select</mat-option>\\r\\n                                <mat-option value=\\\"Incoming\\\">Incoming\\r\\n                                </mat-option>\\r\\n                                <mat-option value=\\\"OutComing\\\">OutGoing\\r\\n                                </mat-option>\\r\\n                                <mat-option value=\\\"All\\\">All</mat-option>\\r\\n                            </mat-select>\\r\\n                        </mat-form-field>\\r\\n                    </div>\\r\\n                    <div>\\r\\n                        <mat-form-field appearance=\\\"outline\\\">\\r\\n                            <mat-label>External Port</mat-label>\\r\\n                            <input type=\\\"text\\\" matInput name=\\\"externalPort\\\" #externalPort #externalPort=\\\"ngModel\\\"\\r\\n                                [(ngModel)]=\\\"createExtSys1.externalPort\\\">\\r\\n                        </mat-form-field>\\r\\n                    </div>\\r\\n                    <div>\\r\\n                        <mat-form-field appearance=\\\"outline\\\">\\r\\n                            <mat-label>Median Port</mat-label>\\r\\n                            <input type=\\\"text\\\" matInput name=\\\"medianPort\\\" #medianPort #medianPort=\\\"ngModel\\\"\\r\\n                                [(ngModel)]=\\\"createExtSys1.medianPort\\\">\\r\\n                        </mat-form-field>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div fxFlex=\\\"10\\\"></div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div fxLayout=\\\"row wrap\\\">\\r\\n            <div fxLayoutAlign=\\\"end stretch\\\" fxLayoutGap=\\\"10px\\\">\\r\\n                <button mat-raised-button (click)=\\\"onNextToIncomingProtocal()\\\" color=\\\"primary\\\"\\r\\n                    *ngIf=\\\"showOfIcoming\\\">Incoming</button>\\r\\n\\r\\n                <button mat-raised-button (click)=\\\"onNextOutgoingProtocol()\\\" color=\\\"primary\\\"\\r\\n                    *ngIf=\\\"showOfoutNext\\\">Outgoing\\r\\n                </button>\\r\\n                <button mat-raised-button (click)=\\\"onALlProtocol()\\\" color=\\\"primary\\\" *ngIf=\\\"showALl\\\">All</button>\\r\\n                <button mat-raised-button type=\\\"reset\\\" color=\\\"warn\\\">Reset</button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </form>\\r\\n</mat-card>\\r\\n<div >\\r\\n        <mat-spinner *ngIf=\\\"showPrepgrassBar\\\"></mat-spinner>\\r\\n        <p style=\\\"color:red\\\"  *ngIf=\\\"showPrepgrassBar\\\">Please Wait... Fetching the Records</p>\\r\\n</div>\\r\\n\\r\\n<!-- showing Incoming -->\\r\\n<mat-card *ngIf=\\\"showIncMsgProtocol\\\">\\r\\n    <div fxLayout=\\\"row wrap\\\">\\r\\n        <div fxFlex=\\\"100\\\">\\r\\n            <div fxFlex=\\\"10\\\"></div>\\r\\n            <div fxFlex=\\\"90\\\">\\r\\n                <h5>Incoming Message Configuration ({{incProtocol}}&nbsp;{{incDataType}})</h5>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div fxLayout=\\\"column wrap\\\" *ngFor=\\\"let protocol of incomingIntegrationProtocol\\\">\\r\\n        <div fxFlex=\\\"100\\\">\\r\\n            <div fxFlex=\\\"10\\\"></div>\\r\\n            <div fxFlex=\\\"40\\\">\\r\\n                <mat-form-field appearance=\\\"outline\\\">\\r\\n                    <mat-select #protocolRef [(ngModel)]=\\\"protocol.typeOfProtocol\\\"\\r\\n                        (selectionChange)=\\\"onProtocalSlection(protocol.typeOfProtocol)\\\"\\r\\n                        (optionSelected)=\\\"onProtocalSlection(protocol.typeOfProtocol)\\\">\\r\\n                        <mat-option>Please select</mat-option>\\r\\n                        <mat-option value=\\\"TCP/IP\\\">TCP/IP</mat-option>\\r\\n                        <mat-option value=\\\"Https/Http\\\">Https/Http\\r\\n                        </mat-option>\\r\\n                        <mat-option value=\\\"MDB\\\">MDB</mat-option>\\r\\n                        <mat-option value=\\\"EJB\\\">EJB</mat-option>\\r\\n                        <mat-option value=\\\"DB Connection\\\">DB Connection\\r\\n                        </mat-option>\\r\\n                    </mat-select>\\r\\n                </mat-form-field>\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n        <div fxFlex=\\\"100\\\">\\r\\n            <div fxFlex=\\\"10\\\"></div>\\r\\n            <div fxFlex=\\\"40\\\">\\r\\n                <mat-form-field appearance=\\\"outline\\\">\\r\\n                    <mat-select [(ngModel)]=\\\"protocol.dataType\\\"\\r\\n                        (selectionChange)=\\\"incomingDataypeSelection(protocol.dataType)\\\">\\r\\n                        <mat-option *ngFor=\\\"let data of dataType\\\" [value]=\\\"data\\\">{{data}}</mat-option>\\r\\n                    </mat-select>\\r\\n                </mat-form-field>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div fxFlex=\\\"100\\\" fxLayoutGap=\\\"10px\\\" *ngIf=\\\"protocol.typeOfProtocol=='DB Connection'\\\">\\r\\n            <div fxFlex=\\\"25\\\">\\r\\n                <mat-form-field appearance=\\\"outline\\\">\\r\\n                    <mat-label>User Name</mat-label>\\r\\n                    <input matInput name=\\\"userName\\\" #userName [(ngModel)]=\\\"incDbData.userName\\\">\\r\\n                </mat-form-field>\\r\\n            </div>\\r\\n            <div fxFlex=\\\"25\\\">\\r\\n                    <mat-form-field appearance=\\\"outline\\\">\\r\\n                            <mat-label>Passowrd</mat-label>\\r\\n                            <input matInput name=\\\"password\\\" #password type=\\\"password\\\" [(ngModel)]=\\\"incDbData.password\\\">\\r\\n                             \\r\\n                         </mat-form-field>\\r\\n            </div>\\r\\n            <div fxFlex=\\\"25\\\">\\r\\n                    <mat-form-field appearance=\\\"outline\\\">\\r\\n                            <mat-label>Data Base Name</mat-label>\\r\\n                            <input matInput name=\\\"DBname\\\" #dbName [(ngModel)]=\\\"incDbData.dataBaseName\\\"> \\r\\n                         </mat-form-field>\\r\\n            </div>\\r\\n            <div fxFlex=\\\"25\\\">\\r\\n                    <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"outline\\\">\\r\\n                            <mat-label>Connecting String</mat-label>\\r\\n                            <textarea matInput [(ngModel)]=\\\"incDbData.connectiongstring\\\" name=\\\"connectingString\\\" #connectingSgtring></textarea>\\r\\n                          </mat-form-field>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div fxFlex=\\\"100\\\" fxLayoutGap=\\\"10px\\\" *ngIf=\\\"protocol.typeOfProtocol=='MDB'\\\">\\r\\n            <div fxFlex=\\\"25\\\">\\r\\n                    <mat-form-field appearance=\\\"outline\\\">\\r\\n                            <mat-label>Type of Queue</mat-label>\\r\\n                          <mat-select (selectionChange)=\\\"onMdbIncQueue($event)\\\">\\r\\n                              <mat-option *ngFor=\\\"let queue of mdbQueueInc\\\" [value]=\\\"queue\\\">{{queue}}</mat-option>\\r\\n                          </mat-select>\\r\\n                         </mat-form-field>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div fxFlex=\\\"100\\\" fxLayoutGap=\\\"20px\\\" *ngIf=\\\"showjsmQueue\\\">                    \\r\\n                <div fxFlex=\\\"20\\\" >\\r\\n                        <mat-form-field appearance=\\\"outline\\\">\\r\\n                           <mat-label>Queue Manager</mat-label>\\r\\n                           <input matInput name=\\\"queueManager\\\" >\\r\\n                        </mat-form-field>\\r\\n                    </div>\\r\\n                    <div fxFlex=\\\"20\\\" >\\r\\n                            <mat-form-field appearance=\\\"outline\\\">\\r\\n                               <mat-label>Queue Name</mat-label>\\r\\n                               <input matInput >\\r\\n                            </mat-form-field>\\r\\n                        </div>\\r\\n                        <div fxFlex=\\\"20\\\" >\\r\\n                                <mat-form-field appearance=\\\"outline\\\">\\r\\n                                   <mat-label>Channel</mat-label>\\r\\n                                   <input matInput>\\r\\n                                </mat-form-field>\\r\\n                                \\r\\n                            </div>\\r\\n               \\r\\n                    \\r\\n               \\r\\n         </div>\\r\\n         <div fxFlex=\\\"100\\\" fxLayoutGap=\\\"20px\\\"  *ngIf=\\\"showibmQueue\\\" >\\r\\n                <div fxFlex=\\\"20\\\" fxLayoutGap=\\\"20px\\\">\\r\\n                    <mat-form-field appearance=\\\"outline\\\">\\r\\n                       <mat-label>Queue Manager</mat-label>\\r\\n                       <input matInput name=\\\"queueManager\\\" >\\r\\n                        \\r\\n                    </mat-form-field>\\r\\n                </div>\\r\\n                <div fxFlex=\\\"20\\\" fxLayoutGap=\\\"20px\\\">\\r\\n                        <mat-form-field appearance=\\\"outline\\\">\\r\\n                           <mat-label>Queue Name</mat-label>\\r\\n                           <input matInput name=\\\"queueName\\\"  >\\r\\n                            \\r\\n                        </mat-form-field>\\r\\n                    </div>         \\r\\n                    <div fxFlex=\\\"20\\\" fxLayoutGap=\\\"20px\\\">\\r\\n                            <mat-form-field appearance=\\\"outline\\\">\\r\\n                               <mat-label>Connecting Factory</mat-label>\\r\\n                               <input matInput name=\\\"connectingFactory\\\">\\r\\n                                \\r\\n                            </mat-form-field>\\r\\n                        </div>\\r\\n               \\r\\n                </div>\\r\\n        <div fxFlex=\\\"100\\\">\\r\\n            <div fxFlex=\\\"50\\\" fxLayoutGap=\\\"20px\\\">\\r\\n                <button mat-raised-button (click)=\\\"nextOfIncomingProtocol(protocol)\\\" color=\\\"primary\\\">Next</button>\\r\\n                <button mat-raised-button (click)=\\\"previousOfIncoming()\\\" color=\\\"accent\\\">Previous</button>\\r\\n                <button mat-raised-button (click)=\\\"onResetIncoming(protocol)\\\" color=\\\"warn\\\">Reset</button>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n    </div>\\r\\n</mat-card>\\r\\n\\r\\n<!-- Tcp Incoming -->\\r\\n<mat-card *ngIf=\\\"showTcpInc\\\">\\r\\n    <div fxLayout=\\\"row wrap\\\" *ngFor=\\\"let incTcp of incomingMessageConfigurationTcp\\\">\\r\\n        <div fxFlex=\\\"100\\\" fxLayoutGap=\\\"10px\\\">\\r\\n            <div fxFlex=\\\"20\\\">\\r\\n                <mat-form-field appearance=\\\"outline\\\">\\r\\n                    <mat-label>Field No</mat-label>\\r\\n\\r\\n                    <input matInput name=\\\"fieldNo\\\" #fieldNo fieldNo=\\\"ngModel\\\" [(ngModel)]=\\\"incTcp.fieldNo\\\">\\r\\n                </mat-form-field>\\r\\n            </div>\\r\\n            <div fxFlex=\\\"20\\\">\\r\\n                <mat-form-field appearance=\\\"outline\\\">\\r\\n                    <mat-label>Field Name</mat-label>\\r\\n                    <input matInput name=\\\"fieldName\\\" #fieldName fieldName=\\\"ngModel\\\" [(ngModel)]=\\\"incTcp.fieldName\\\">\\r\\n                </mat-form-field>\\r\\n            </div>\\r\\n            <div fxFlex=\\\"20\\\">\\r\\n                <mat-form-field appearance=\\\"outline\\\">\\r\\n                    <mat-label>Data Type</mat-label>\\r\\n                    <mat-select name=\\\"dataType\\\" #dataType dataType=\\\"ngModel\\\" [(ngModel)]=\\\"incTcp.dataType\\\">\\r\\n\\r\\n                        <mat-option value=\\\"numeric\\\">Numeric</mat-option>\\r\\n                        <mat-option value=\\\"alphaNumeric\\\">Alpha Numeric</mat-option>\\r\\n                        <mat-option value=\\\"date\\\">Date</mat-option>\\r\\n\\r\\n                    </mat-select>\\r\\n\\r\\n\\r\\n                </mat-form-field>\\r\\n            </div>\\r\\n            <div fxFlex=\\\"20\\\">\\r\\n                <mat-form-field appearance=\\\"outline\\\">\\r\\n                    <mat-label>Default Value</mat-label>\\r\\n                    <input matInput name=\\\"defaultValue\\\" #defaultValue defaultValue=\\\"ngModel\\\"\\r\\n                        [(ngModel)]=\\\"incTcp.defaultValue\\\">\\r\\n                </mat-form-field>\\r\\n            </div>\\r\\n            <div fxFlex=\\\"20\\\">\\r\\n                <button mat-raised-button (click)=\\\"deleteOfTCP(i)\\\" color=\\\"primary\\\">\\r\\n                    <mat-icon>delete</mat-icon>\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div fxLayout=\\\"row wrap\\\">\\r\\n        <div fxFlex=\\\"100\\\">\\r\\n            <div fxFlex=\\\"25\\\">\\r\\n                <button mat-raised-button (click)=\\\"addIncomingTcp()\\\" color=\\\"primary\\\">\\r\\n                    <mat-icon>add</mat-icon>\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n</mat-card>\\r\\n<!-- Http XMl ----incoming -->\\r\\n<mat-card *ngIf=\\\"showHttpXmlInc\\\">\\r\\n    <div fxLayout=\\\"row wrap\\\">\\r\\n        <div fxFlex=\\\"100\\\" fxLayoutGap=\\\"20\\\">\\r\\n\\r\\n\\r\\n            <div fxFlex=\\\"50\\\">\\r\\n                <input type=\\\"file\\\" id=\\\"chFile\\\" (change)=\\\"fileuploadHttpXMlInc($event)\\\">\\r\\n                <button mat-raised-button type=\\\"file\\\" class=\\\"btnFile\\\" (click)=\\\"chooseFile()\\\">\\r\\n                    <mat-icon>cloud_upload</mat-icon>&nbsp;&nbsp;File Upload\\r\\n                </button>\\r\\n\\r\\n            </div>\\r\\n\\r\\n\\r\\n\\r\\n        </div>\\r\\n\\r\\n    </div>\\r\\n    <div fxLayout=\\\"row wrap\\\" *ngFor=\\\"let xmlhttpInc of incHttpXMl\\\">\\r\\n        <div fxFlex=\\\"100\\\" fxLayoutGap=\\\"20px\\\">\\r\\n            <div fxFlex=\\\"20\\\">\\r\\n                <mat-form-field appearance=\\\"outline\\\">\\r\\n                    <mat-label>Node</mat-label>\\r\\n                    <input matInput name=\\\"node\\\" #node #node=\\\"ngModel\\\" [(ngModel)]=\\\"xmlhttpInc.node\\\">\\r\\n                </mat-form-field>\\r\\n            </div>\\r\\n            <div fxFlex=\\\"20\\\">\\r\\n                <mat-form-field appearance=\\\"outline\\\">\\r\\n                    <mat-label>Tag Name</mat-label>\\r\\n                    <input matInput name=\\\"tagName\\\" #tagName #tagName=\\\"ngModel\\\" [(ngModel)]=\\\"xmlhttpInc.tagName\\\">\\r\\n                </mat-form-field>\\r\\n            </div>\\r\\n            <div fxFlex=\\\"20\\\">\\r\\n                <mat-form-field appearance=\\\"outline\\\">\\r\\n                    <mat-label>Data Type</mat-label>\\r\\n                    <mat-select name=\\\"dataType\\\" #dataType #dataType=\\\"ngModel\\\" [(ngModel)]=\\\"xmlhttpInc.dataType\\\">\\r\\n\\r\\n                        <mat-option value=\\\"numeric\\\">Numeric</mat-option>\\r\\n                        <mat-option value=\\\"alphaNumeric\\\">Alpha Numeric</mat-option>\\r\\n                        <mat-option value=\\\"date\\\">Date</mat-option>\\r\\n\\r\\n                    </mat-select>\\r\\n                </mat-form-field>\\r\\n            </div>\\r\\n            <div fxFlex=\\\"20\\\">\\r\\n                <mat-form-field appearance=\\\"outline\\\">\\r\\n                    <mat-label>Default Value</mat-label>\\r\\n                    <input matInput name=\\\"defaultValue\\\" #defaultValue #defaultValue=\\\"ngModel\\\"\\r\\n                        [(ngModel)]=\\\"xmlhttpInc.defaultValue\\\">\\r\\n                </mat-form-field>\\r\\n            </div>\\r\\n            <div fxFlex=\\\"10\\\">\\r\\n                <button mat-raised-button (click)=\\\"deleteIncHttpXml(i)\\\" color=\\\"primary\\\">\\r\\n                    <mat-icon>delete</mat-icon>\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div fxLayout=\\\"row wrap\\\">\\r\\n        <div fxFlex=\\\"100\\\">\\r\\n            <div fxFlex=\\\"30\\\">\\r\\n                <button mat-raised-button (click)=\\\"addIncHttpXMl()\\\" color=\\\"primary\\\">\\r\\n                    <mat-icon>add</mat-icon>\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n</mat-card>\\r\\n<!-- Http Json   Incoming -->\\r\\n<mat-card *ngIf=\\\"showHttpJsonInc\\\">\\r\\n    <div fxLayout=\\\"row wrap\\\">\\r\\n        <div fxFlex=\\\"100\\\" *ngFor=\\\"let incomingHttpJson of incHttpJson; let i = index;\\\" fxLayoutGap=\\\"20px\\\">\\r\\n            <div fxFlex=\\\"20\\\">\\r\\n                <mat-form-field appearance=\\\"outline\\\">\\r\\n                    <mat-label>Key</mat-label>\\r\\n\\r\\n                    <input matInput name=\\\"node\\\" #node #node=\\\"ngModel\\\" [(ngModel)]=\\\"incomingHttpJson.key\\\">\\r\\n                </mat-form-field>\\r\\n            </div>\\r\\n\\r\\n            <div fxFlex=\\\"20\\\">\\r\\n                <mat-form-field appearance=\\\"outline\\\">\\r\\n                    <mat-label>Data Type</mat-label>\\r\\n\\r\\n                    <mat-select name=\\\"dataType\\\" #dataType #dataType=\\\"ngModel\\\" [(ngModel)]=\\\"incomingHttpJson.dataType\\\">\\r\\n\\r\\n                        <mat-option value=\\\"numeric\\\">Numeric</mat-option>\\r\\n                        <mat-option value=\\\"alphaNumeric\\\">Alpha Numeric</mat-option>\\r\\n                        <mat-option value=\\\"date\\\">Date</mat-option>\\r\\n\\r\\n                    </mat-select>\\r\\n                </mat-form-field>\\r\\n            </div>\\r\\n            <div fxFlex=\\\"20\\\">\\r\\n                <mat-form-field appearance=\\\"outline\\\">\\r\\n                    <mat-label>Default Value</mat-label>\\r\\n                    <input matInput name=\\\"type\\\" #defaultValue #defaultValue=\\\"ngModel\\\"\\r\\n                        [(ngModel)]=\\\"incomingHttpJson.deafultValue\\\">\\r\\n                </mat-form-field>\\r\\n            </div>\\r\\n            <div fxFlex=\\\"20\\\">\\r\\n                <button mat-raised-button (click)=\\\"deleteIncHttpJson(i)\\\" color=\\\"primary\\\">\\r\\n                    <mat-icon>delete</mat-icon>\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div fxLayout=\\\"row wrap\\\">\\r\\n        <div fxFlex=\\\"100\\\">\\r\\n            <div fxFlex=\\\"30\\\">\\r\\n                <button mat-raised-button (click)=\\\"addIncHttpJson()\\\" color=\\\"primary\\\">\\r\\n                    <mat-icon>add</mat-icon>\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</mat-card>\\r\\n<!-- MDB XMl incoming -->\\r\\n<mat-card *ngIf=\\\"showMdbXmlInc\\\">\\r\\n    <div fxLayout=\\\"row wrap\\\">\\r\\n        <div fxFlex=\\\"100\\\" fxLayoutGap=\\\"20\\\">\\r\\n            <div fxFlex=\\\"50\\\">\\r\\n                <input type=\\\"file\\\" id=\\\"chFile\\\" (change)=\\\"fileuploadHttpXMlInc($event)\\\">\\r\\n                <button mat-raised-button type=\\\"file\\\" class=\\\"btnFile\\\" (click)=\\\"chooseFile()\\\">\\r\\n                    <mat-icon>cloud_upload</mat-icon>&nbsp;&nbsp;File Upload\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div fxLayout=\\\"row wrap\\\">\\r\\n        <div fxFlex=\\\"100\\\" fxLayoutGap=\\\"10px\\\" *ngFor=\\\"let xmlMdbInc of incMDBXML;let i=index\\\">\\r\\n            <div fxFlex=\\\"20\\\">\\r\\n                <mat-form-field appearance=\\\"outline\\\">\\r\\n                    <mat-label>Node</mat-label>\\r\\n                    <input matInput name=\\\"node\\\" #node #node=\\\"ngModel\\\" [(ngModel)]=\\\"xmlMdbInc.node\\\">\\r\\n                </mat-form-field>\\r\\n            </div>\\r\\n            <div fxFlex=\\\"20\\\">\\r\\n                <mat-form-field appearance=\\\"outline\\\">\\r\\n                    <mat-label>TagName</mat-label>\\r\\n                    <input matInput name=\\\"tagName\\\" #tagName #tagName=\\\"ngModel\\\" [(ngModel)]=\\\"xmlMdbInc.tagName\\\">\\r\\n                </mat-form-field>\\r\\n            </div>\\r\\n            <div fxFlex=\\\"20\\\">\\r\\n                <mat-form-field appearance=\\\"outline\\\">\\r\\n                    <mat-label>Data Type</mat-label>\\r\\n                    <mat-select name=\\\"dataType\\\" #dataType #dataType=\\\"ngModel\\\" [(ngModel)]=\\\"xmlMdbInc.dataType\\\">\\r\\n                        <mat-option value=\\\"numeric\\\">Numeric</mat-option>\\r\\n                        <mat-option value=\\\"alphaNumeric\\\">Alpha Numeric</mat-option>\\r\\n                        <mat-option value=\\\"date\\\">Date</mat-option>\\r\\n                    </mat-select>\\r\\n                </mat-form-field>\\r\\n            </div>\\r\\n            <div fxFlex=\\\"20\\\">\\r\\n                <mat-form-field appearance=\\\"outline\\\">\\r\\n                    <mat-label>Default Value</mat-label>\\r\\n                    <input matInput name=\\\"defaultValue\\\" #defaultValue #defaultValue=\\\"ngModel\\\"\\r\\n                        [(ngModel)]=\\\"xmlMdbInc.defaultValue\\\">\\r\\n                </mat-form-field>\\r\\n            </div>\\r\\n            <div fxFlex=\\\"10\\\">\\r\\n                <button mat-raised-button (click)=\\\"deleteMdbXmlInc(i)\\\" color=\\\"primary\\\">\\r\\n                    <mat-icon>delete</mat-icon>\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div fxLayout=\\\"row wrap\\\">\\r\\n        <div fxFlex=\\\"100\\\">\\r\\n            <div fxFlex=\\\"30\\\">\\r\\n                <button mat-raised-button (click)=\\\"addMdbXMlInc()\\\" color=\\\"primary\\\">\\r\\n                    <mat-icon>add</mat-icon>\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</mat-card>\\r\\n<!-- MDB JSON incoming -->\\r\\n<mat-card *ngIf=\\\"showMDBJsonInc\\\">\\r\\n\\r\\n    <div fxLayout=\\\"row wrap\\\">\\r\\n        <div fxFlex=\\\"100\\\" *ngFor=\\\"let mdbJsonInc of incMdbJson;let i=index\\\" fxLayoutGap=\\\"20px\\\">\\r\\n            <div fxFlex=\\\"20\\\">\\r\\n                <mat-form-field appearance=\\\"outline\\\">\\r\\n                    <mat-label>Key</mat-label>\\r\\n                    <input matInput name=\\\"key\\\" #key #key=\\\"ngModel\\\" [(ngModel)]=\\\"mdbJsonInc.key\\\">\\r\\n                </mat-form-field>\\r\\n            </div>\\r\\n            <div fxFlex=\\\"20\\\">\\r\\n                <mat-form-field appearance=\\\"outline\\\">\\r\\n                    <mat-label>Data Type</mat-label>\\r\\n                    <mat-select name=\\\"dataType\\\" #dataType dataType=\\\"ngModel\\\" [(ngModel)]=\\\"mdbJsonInc.dataType\\\">\\r\\n\\r\\n                        <mat-option value=\\\"numeric\\\">Numeric</mat-option>\\r\\n                        <mat-option value=\\\"alphaNumeric\\\">Alpha Numeric</mat-option>\\r\\n                        <mat-option value=\\\"date\\\">Date</mat-option>\\r\\n\\r\\n                    </mat-select>\\r\\n                </mat-form-field>\\r\\n            </div>\\r\\n            <div fxFlex=\\\"20\\\">\\r\\n                <mat-form-field appearance=\\\"outline\\\">\\r\\n                    <mat-label>Default Value</mat-label>\\r\\n                    <input matInput name=\\\"defaultValue\\\" #defaultValue #defaultValue=\\\"ngModel\\\"\\r\\n                        [(ngModel)]=\\\"mdbJsonInc.defaultValue\\\">\\r\\n                </mat-form-field>\\r\\n            </div>\\r\\n            <div fxFlex=\\\"20\\\">\\r\\n                <button mat-raised-button (click)=\\\"deleteMdbJsonInc(i)\\\" color=\\\"primary\\\">\\r\\n                    <mat-icon>delete</mat-icon>\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div fxLayout=\\\"row wrap\\\">\\r\\n        <div fxFlex=\\\"100\\\">\\r\\n            <div fxFlex=\\\"30\\\">\\r\\n                <button mat-raised-button (click)=\\\"addMdbJsonInc()\\\" color=\\\"primary\\\">\\r\\n                    <mat-icon>add</mat-icon>\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</mat-card>\\r\\n<!-- MDB CSV and Excel -->\\r\\n<mat-card *ngIf=\\\"showMdbCSVInc\\\">\\r\\n    <div fxLayout=\\\"row wrap\\\">\\r\\n        <div fxFlex=\\\"100\\\">\\r\\n            <div fxFlex=\\\"40\\\">\\r\\n                <mat-form-field appearance=\\\"outline\\\">\\r\\n                    <mat-label>Folder Name</mat-label>\\r\\n                    <input matInput>\\r\\n                </mat-form-field>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</mat-card>\\r\\n<!-- MDB FlatFile Incoming -->\\r\\n<mat-card *ngIf=\\\"showMdbFlatInc\\\">\\r\\n    <div fxLayout=\\\"row wrap\\\">\\r\\n        <div fxFlex=\\\"100\\\">\\r\\n            <div fxFlex=\\\"40\\\">\\r\\n                <mat-form-field appearance=\\\"outline\\\">\\r\\n                    <mat-label>Folder Name</mat-label>\\r\\n                    <input matInput>\\r\\n                </mat-form-field>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</mat-card>\\r\\n<!-- EJb XMl incoming -->\\r\\n<mat-card *ngIf=\\\"showEjbXMlInc\\\">\\r\\n    <div fxLayout=\\\"row wrap\\\">\\r\\n        <div fxFlex=\\\"100\\\" fxLayoutGap=\\\"20\\\">\\r\\n            <div fxFlex=\\\"50\\\">\\r\\n                <input type=\\\"file\\\" id=\\\"chFile\\\" (change)=\\\"fileuploadHttpXMlInc($event)\\\">\\r\\n                <button mat-raised-button type=\\\"file\\\" class=\\\"btnFile\\\" (click)=\\\"chooseFile()\\\">\\r\\n                    <mat-icon>cloud_upload</mat-icon>&nbsp;&nbsp;File Upload\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div fxLayout=\\\"row wrap\\\">\\r\\n        <div fxFlex=\\\"100\\\" *ngFor=\\\"let ejbxmlInc of incEjbXMl\\\" fxLayoutGap=\\\"20px\\\">\\r\\n            <div fxFlex=\\\"20\\\">\\r\\n                <mat-form-field appearance=\\\"outline\\\">\\r\\n                    <mat-label>Node</mat-label>\\r\\n\\r\\n                    <input matInput name=\\\"node\\\" #node #node=\\\"ngModel\\\" [(ngModel)]=\\\"ejbxmlInc.node\\\">\\r\\n\\r\\n                </mat-form-field>\\r\\n            </div>\\r\\n\\r\\n            <div fxFlex=\\\"20\\\">\\r\\n                <mat-form-field appearance=\\\"outline\\\">\\r\\n                    <mat-label>Tag Name</mat-label>\\r\\n\\r\\n                    <input matInput name=\\\"tagName\\\" #tagName #tagName=\\\"ngModel\\\" [(ngModel)]=\\\"ejbxmlInc.tagName\\\">\\r\\n\\r\\n                </mat-form-field>\\r\\n            </div>\\r\\n\\r\\n\\r\\n\\r\\n            <div fxFlex=\\\"20\\\">\\r\\n                <mat-form-field appearance=\\\"outline\\\">\\r\\n                    <mat-select name=\\\"datatype\\\" #datatype #datatype=\\\"ngModel\\\" [(ngModel)]=\\\"ejbxmlInc.dataType\\\">\\r\\n\\r\\n                        <mat-option value=\\\"numeric\\\">Numeric</mat-option>\\r\\n                        <mat-option value=\\\"alphaNumeric\\\">Alpha Numeric</mat-option>\\r\\n                        <mat-option value=\\\"date\\\">Date</mat-option>\\r\\n\\r\\n                    </mat-select>\\r\\n                </mat-form-field>\\r\\n            </div>\\r\\n            <div fxFlex=\\\"20\\\">\\r\\n                <mat-form-field appearance=\\\"outline\\\">\\r\\n                    <mat-label>Default Value</mat-label>\\r\\n\\r\\n                    <input matInput name=\\\"tagvalue\\\" #tagvalue #tagvalue=\\\"ngModel\\\" [(ngModel)]=\\\"ejbxmlInc.tagvalue\\\">\\r\\n\\r\\n                </mat-form-field>\\r\\n            </div>\\r\\n            <div fxFlex=\\\"20\\\">\\r\\n                <button mat-raised-button (click)=\\\"deleteEjbXmlInc(i)\\\" color=\\\"primary\\\">\\r\\n                    <mat-icon>delete</mat-icon>\\r\\n                </button>\\r\\n            </div>\\r\\n\\r\\n\\r\\n        </div>\\r\\n    </div>\\r\\n    <div fxLayout=\\\"row wrap\\\">\\r\\n        <div fxFlex=\\\"100\\\">\\r\\n            <div fxFlex=\\\"30\\\">\\r\\n                <button mat-raised-button (click)=\\\"addEjbXMlInc()\\\" color=\\\"primary\\\">\\r\\n                    <mat-icon>add</mat-icon>\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n</mat-card>\\r\\n<!-- EJb Json incoming -->\\r\\n<mat-card *ngIf=\\\"showEjbJsonInc\\\">\\r\\n        <div fxLayout=\\\"row wrap\\\" fxLayoutGap=\\\"20px\\\">\\r\\n            <div fxFlex=\\\"100\\\" *ngFor=\\\"let ejbinJosn of incEjbJson\\\" fxLayoutGap=\\\"20px\\\">\\r\\n                <div fxFlex=\\\"20\\\">\\r\\n                    <mat-form-field appearance=\\\"outline\\\">\\r\\n                        <mat-label>Key</mat-label>\\r\\n\\r\\n                        <input matInput name=\\\"key\\\" #key=\\\"ngModel\\\" [(ngModel)]=\\\"ejbinJosn.key\\\">\\r\\n\\r\\n                    </mat-form-field>\\r\\n                </div>\\r\\n                <div fxFlex=\\\"20\\\">\\r\\n                    <mat-form-field appearance=\\\"outline\\\">\\r\\n                        <mat-select name=\\\"dataType\\\" #dataType #dataType=\\\"ngModel\\\" [(ngModel)]=\\\"ejbinJosn.dataType\\\">\\r\\n\\r\\n                            <mat-option value=\\\"numeric\\\">Numeric</mat-option>\\r\\n                            <mat-option value=\\\"alphaNumeric\\\">Alpha Numeric</mat-option>\\r\\n                            <mat-option value=\\\"date\\\">Date</mat-option>\\r\\n\\r\\n                        </mat-select>\\r\\n                    </mat-form-field>\\r\\n                </div>\\r\\n                <div fxFlex=\\\"20\\\">\\r\\n                    <mat-form-field appearance=\\\"outline\\\">\\r\\n                        <mat-label>Default Value</mat-label>\\r\\n\\r\\n                        <input matInput name=\\\"defaultValue\\\" #defaultValue #defaultValue=\\\"ngModel\\\"\\r\\n                            [(ngModel)]=\\\"ejbinJosn.defaultValue\\\">\\r\\n\\r\\n                    </mat-form-field>\\r\\n                </div>\\r\\n\\r\\n\\r\\n                <div fxFlex=\\\"20\\\">\\r\\n                    <button mat-raised-button (click)=\\\"deleteIncEjbJson(i)\\\" color=\\\"primary\\\">\\r\\n                        <mat-icon>delete</mat-icon>\\r\\n                    </button>\\r\\n                </div>\\r\\n\\r\\n\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <div fxLayout=\\\"row wrap\\\">\\r\\n            <div fxFlex=\\\"100\\\">\\r\\n                <div fxFlex=\\\"30\\\">\\r\\n                        <button mat-raised-button (click)=\\\"addIncEjbJson()\\\" color=\\\"primary\\\">\\r\\n                                <mat-icon>add</mat-icon>\\r\\n                            </button>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n</mat-card>\\r\\n<!-- EJB CSV Incoming -->\\r\\n<mat-card *ngIf=\\\"showEjbCsvInc\\\">\\r\\n<div fxLayout=\\\"row wrap\\\">\\r\\n<div fxFlex=\\\"100\\\">\\r\\n<div fxFlex=\\\"40\\\">\\r\\n<mat-form-field appearance=\\\"outline\\\"> \\r\\n<mat-label>Folder Name</mat-label>\\r\\n<input matInput>\\r\\n</mat-form-field>\\r\\n</div>\\r\\n</div>\\r\\n</div>\\r\\n</mat-card>\\r\\n<!-- Ejb Flat file Incoming -->\\r\\n<mat-card *ngIf=\\\"showEjbFlatInc\\\">\\r\\n        <div fxLayout=\\\"row wrap\\\">\\r\\n                <div fxFlex=\\\"100\\\">\\r\\n                <div fxFlex=\\\"40\\\">\\r\\n                <mat-form-field appearance=\\\"outline\\\"> \\r\\n                <mat-label>Folder Name</mat-label>\\r\\n                <input matInput>\\r\\n                </mat-form-field>\\r\\n                </div>\\r\\n                </div>\\r\\n         </div>\\r\\n</mat-card>\\r\\n<!-- DB xml inc -->\\r\\n<mat-card *ngIf=\\\"showDbXmlInc\\\">\\r\\n        <div fxLayout=\\\"row wrap\\\">\\r\\n                <div fxFlex=\\\"100\\\" fxLayoutGap=\\\"20\\\">\\r\\n                    <div fxFlex=\\\"50\\\">\\r\\n                        <input type=\\\"file\\\" id=\\\"chFile\\\" (change)=\\\"fileuploadHttpXMlInc($event)\\\">\\r\\n                        <button mat-raised-button type=\\\"file\\\" class=\\\"btnFile\\\" (click)=\\\"chooseFile()\\\">\\r\\n                            <mat-icon>cloud_upload</mat-icon>&nbsp;&nbsp;File Upload\\r\\n                        </button>\\r\\n                    </div>\\r\\n                </div>\\r\\n        \\r\\n            </div>\\r\\n<div fxLayout=\\\"row wrap\\\">\\r\\n<div fxFlex=\\\"100\\\">\\r\\n<div fxFlex=\\\"40\\\">\\r\\n        <mat-form-field appearance=\\\"outline\\\">\\r\\n                <mat-label>Table Name</mat-label>\\r\\n                <input matInput name=\\\"tableName\\\"\\r\\n                (keyup)=\\\"onsearchingTablName($event)\\\" [matAutocomplete]=\\\"autotablName\\\">\\r\\n                <mat-autocomplete #autotablName=\\\"matAutocomplete\\\" \\r\\n                (optionSelected)=\\\"gettingColumnNameForIncoming($event)\\\">\\r\\n               <mat-option *ngFor=\\\"let tabname of incDbRecords\\\" [value]=\\\"tabname\\\">\\r\\n                    {{tabname}}\\r\\n                </mat-option>\\r\\n                </mat-autocomplete>\\r\\n              </mat-form-field>\\r\\n</div>\\r\\n</div>\\r\\n</div>\\r\\n<!-- Columns -->\\r\\n<div fxLayout=\\\"row wrap\\\"  *ngIf=\\\"coulmnNameBasedonTanbleName &&coulmnNameBasedonTanbleName.length\\\">\\r\\n        <div fxFlex=\\\"100\\\" *ngFor=\\\"let column of colRowForDbInc;let i=index\\\" fxLayoutGap=\\\"20px\\\">\\r\\n            <div fxFlex=\\\"30\\\">\\r\\n                <mat-form-field appearance=\\\"outline\\\">\\r\\n                    <mat-label>Column Name</mat-label>\\r\\n                    <mat-select>\\r\\n                        <mat-option *ngFor=\\\"let col of column\\\" [value]=\\\"col\\\">\\r\\n                            {{col}}\\r\\n                        </mat-option>\\r\\n                    </mat-select>\\r\\n                </mat-form-field>\\r\\n            </div>\\r\\n            <div fxFlex=\\\"30\\\">\\r\\n                    \\r\\n                        <mat-form-field appearance=\\\"outline\\\">\\r\\n                            <mat-label>Data Type</mat-label>\\r\\n                                <mat-select\\r\\n                                name=\\\"dataType\\\"\\r\\n                                >\\r\\n                                \\r\\n                                 <mat-option value=\\\"numeric\\\">Numeric</mat-option>\\r\\n                                 <mat-option value=\\\"alphaNumeric\\\">Alpha Numeric</mat-option>\\r\\n                                 <mat-option value=\\\"date\\\">Date</mat-option>\\r\\n                                \\r\\n                             </mat-select>\\r\\n                            </mat-form-field>\\r\\n                    \\r\\n                </div>\\r\\n                <div fxFlex=\\\"30\\\">\\r\\n                    <mat-form-field appearance=\\\"outline\\\">\\r\\n                        <mat-label>Default Value</mat-label>\\r\\n                        <input matInput >\\r\\n                    </mat-form-field>\\r\\n                </div>\\r\\n                <div fxFlex=\\\"30\\\">\\r\\n                        <button mat-raised-button (click)=\\\"deleteDbXInc(i)\\\" color=\\\"primary\\\">\\r\\n                                <mat-icon>remove</mat-icon>\\r\\n                            </button>\\r\\n                </div>\\r\\n               \\r\\n        </div>\\r\\n      <div fxFlex=\\\"100\\\">\\r\\n            <button mat-raised-button (click)=\\\"onAddingrowsForDbInc(i)\\\" color=\\\"primary\\\">\\r\\n                    <mat-icon>add</mat-icon>\\r\\n                </button>\\r\\n      </div>\\r\\n              \\r\\n    </div>\\r\\n   \\r\\n</mat-card>\\r\\n<!-- DB Json Inc -->\\r\\n<mat-card *ngIf=\\\"showDBJsonInc\\\">\\r\\n        <div fxLayout=\\\"row wrap\\\">\\r\\n        <div fxFlex=\\\"100\\\">\\r\\n        <div fxFlex=\\\"40\\\">\\r\\n                <mat-form-field appearance=\\\"outline\\\">\\r\\n                        <mat-label>Table Name</mat-label>\\r\\n                        <input matInput name=\\\"tableName\\\"\\r\\n                        (keyup)=\\\"onsearchingTablName($event)\\\" [matAutocomplete]=\\\"autotablName\\\">\\r\\n                        <mat-autocomplete #autotablName=\\\"matAutocomplete\\\" \\r\\n                        (optionSelected)=\\\"gettingColumnNameForIncoming($event)\\\">\\r\\n                       <mat-option *ngFor=\\\"let tabname of incDbRecords\\\" [value]=\\\"tabname.tableName\\\">\\r\\n                            {{tabname.tableName}}\\r\\n                        </mat-option>\\r\\n                        </mat-autocomplete>\\r\\n                      </mat-form-field>\\r\\n        </div>\\r\\n        </div>\\r\\n        </div>\\r\\n        <!-- Columns -->\\r\\n        <div fxLayout=\\\"row wrap\\\"  *ngIf=\\\"coulmnNameBasedonTanbleName &&coulmnNameBasedonTanbleName.length\\\">\\r\\n                <div fxFlex=\\\"100\\\" *ngFor=\\\"let column of coulmnNameBasedonTanbleName;let i=index\\\" fxLayoutGap=\\\"20px\\\">\\r\\n                    <div fxFlex=\\\"30\\\">\\r\\n                        <mat-form-field appearance=\\\"outline\\\">\\r\\n                            <mat-label>Column Name</mat-label>\\r\\n                            <mat-select>\\r\\n                                <mat-option *ngFor=\\\"let col of column\\\" [value]=\\\"col\\\">\\r\\n                                    {{col}}\\r\\n                                </mat-option>\\r\\n                            </mat-select>\\r\\n                        </mat-form-field>\\r\\n                    </div>\\r\\n                    <div fxFlex=\\\"30\\\">\\r\\n                            \\r\\n                                <mat-form-field appearance=\\\"outline\\\">\\r\\n                                    <mat-label>Data Type</mat-label>\\r\\n                                        <mat-select\\r\\n                                        name=\\\"dataType\\\"\\r\\n                                        >\\r\\n                                        \\r\\n                                         <mat-option value=\\\"numeric\\\">Numeric</mat-option>\\r\\n                                         <mat-option value=\\\"alphaNumeric\\\">Alpha Numeric</mat-option>\\r\\n                                         <mat-option value=\\\"date\\\">Date</mat-option>\\r\\n                                        \\r\\n                                     </mat-select>\\r\\n                                    </mat-form-field>\\r\\n                            \\r\\n                        </div>\\r\\n                        <div fxFlex=\\\"30\\\">\\r\\n                            <mat-form-field appearance=\\\"outline\\\">\\r\\n                                <mat-label>Default Value</mat-label>\\r\\n                                <input matInput >\\r\\n                            </mat-form-field>\\r\\n                        </div>\\r\\n                </div>\\r\\n            </div>\\r\\n</mat-card>\\r\\n<!-- Db CSv Inc -->\\r\\n<mat-card *ngIf=\\\"showDbCsvInc\\\">\\r\\n<div fxLayout=\\\"row wrap\\\">\\r\\n    <div fxFlex=\\\"100\\\">\\r\\n        <div fxFlex=\\\"40\\\">\\r\\n            <mat-form-field appearance=\\\"outline\\\">\\r\\n                <mat-label>Folder Name</mat-label>\\r\\n                <input matInput>\\r\\n            </mat-form-field>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n</div>\\r\\n</mat-card>\\r\\n<!-- Db Flatfile Inc -->\\r\\n<mat-card *ngIf=\\\"showDbFlatInc\\\">\\r\\n        <div fxLayout=\\\"row wrap\\\">\\r\\n            <div fxFlex=\\\"100\\\">\\r\\n                <div fxFlex=\\\"40\\\">\\r\\n                    <mat-form-field appearance=\\\"outline\\\">\\r\\n                        <mat-label>Folder Name</mat-label>\\r\\n                        <input matInput>\\r\\n                    </mat-form-field>\\r\\n                </div>\\r\\n            </div>\\r\\n        \\r\\n        </div>\\r\\n        </mat-card>\\r\\n\\r\\n\\r\\n<!--==============================End for Incoming=======================  -->\\r\\n<!-- showing outgoing -->\\r\\n<mat-card *ngIf=\\\"showOutMsgProtocol\\\">\\r\\n    <h5>OutGoing Message Header Configuration({{protocoloutGoing}}&nbsp;{{dataTypeOutgoing}} )</h5>\\r\\n    <div fxLayout=\\\"row wrap\\\" *ngFor=\\\"let protocolOut of outgoingIntegrationProtocol\\\">\\r\\n\\r\\n        <div fxFlex=\\\"100\\\">\\r\\n            <div fxFlex=\\\"20\\\"></div>\\r\\n            <div fxFlex=\\\"50\\\">\\r\\n                <mat-form-field appearance=\\\"outline\\\">\\r\\n                    <mat-select #protocolRef [(ngModel)]=\\\"protocolOut.typeOfProtocol\\\"\\r\\n                        (selectionChange)=\\\"onOutgoingProtocolSelction($event.value)\\\" \\r\\n                        (optionSelected)=\\\"onOutgoingProtocolSelction($event.value)\\\">\\r\\n                        <mat-option>Please select</mat-option>\\r\\n                        <mat-option value=\\\"TCP/IP\\\">TCP/IP</mat-option>\\r\\n                        <mat-option value=\\\"Https/Http\\\">Https/Http\\r\\n                        </mat-option>\\r\\n                        <mat-option value=\\\"MDB\\\">MDB</mat-option>\\r\\n                        <mat-option value=\\\"EJB\\\">EJB</mat-option>\\r\\n                        <mat-option value=\\\"DB Connection\\\">DB Connection\\r\\n                        </mat-option>\\r\\n\\r\\n                    </mat-select>\\r\\n                </mat-form-field>\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n\\r\\n        <div fxFlex=\\\"100\\\">\\r\\n            <div fxFlex=\\\"20\\\"></div>\\r\\n            <div fxFlex=\\\"50\\\">\\r\\n                <mat-form-field appearance=\\\"outline\\\">\\r\\n                    <mat-select [(ngModel)]=\\\"protocolOut.dataType\\\"\\r\\n                        (selectionChange)=\\\"onDataTypeOFOutgoingProtocol($event.value)\\\">\\r\\n                        <mat-option *ngFor=\\\"let data of dataTypeForOutGoing\\\" [value]=\\\"data\\\">{{data}}</mat-option>\\r\\n                    </mat-select>\\r\\n                </mat-form-field>\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n        <div fxFlex=\\\"100\\\" fxLayoutGap=\\\"10px\\\" *ngIf=\\\"protocolOut.typeOfProtocol=='MDB'\\\">\\r\\n                <div fxFlex=\\\"25\\\">\\r\\n                        <mat-form-field appearance=\\\"outline\\\">\\r\\n                                <mat-label>Type of Queue</mat-label>\\r\\n                              <mat-select (selectionChange)=\\\"onMdbQueueOut($event)\\\">\\r\\n                                  <mat-option *ngFor=\\\"let queue of mdbQueueInc\\\" [value]=\\\"queue\\\">{{queue}}</mat-option>\\r\\n                              </mat-select>\\r\\n                             </mat-form-field>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div fxFlex=\\\"100\\\" fxLayoutGap=\\\"20px\\\" *ngIf=\\\"showjsmQueueOut\\\">                    \\r\\n                    <div fxFlex=\\\"20\\\" >\\r\\n                            <mat-form-field appearance=\\\"outline\\\">\\r\\n                               <mat-label>Queue Manager</mat-label>\\r\\n                               <input matInput name=\\\"queueManager\\\" >\\r\\n                            </mat-form-field>\\r\\n                        </div>\\r\\n                        <div fxFlex=\\\"20\\\" >\\r\\n                                <mat-form-field appearance=\\\"outline\\\">\\r\\n                                   <mat-label>Queue Name</mat-label>\\r\\n                                   <input matInput >\\r\\n                                </mat-form-field>\\r\\n                            </div>\\r\\n                            <div fxFlex=\\\"20\\\" >\\r\\n                                    <mat-form-field appearance=\\\"outline\\\">\\r\\n                                       <mat-label>Channel</mat-label>\\r\\n                                       <input matInput>\\r\\n                                    </mat-form-field>\\r\\n                                    \\r\\n                                </div>\\r\\n                   \\r\\n                        \\r\\n                   \\r\\n             </div>\\r\\n             <div fxFlex=\\\"100\\\" fxLayoutGap=\\\"20px\\\"  *ngIf=\\\"showibmQueueOut\\\" >\\r\\n                    <div fxFlex=\\\"20\\\" fxLayoutGap=\\\"20px\\\">\\r\\n                        <mat-form-field appearance=\\\"outline\\\">\\r\\n                           <mat-label>Queue Manager</mat-label>\\r\\n                           <input matInput name=\\\"queueManager\\\" >\\r\\n                            \\r\\n                        </mat-form-field>\\r\\n                    </div>\\r\\n                    <div fxFlex=\\\"20\\\" fxLayoutGap=\\\"20px\\\">\\r\\n                            <mat-form-field appearance=\\\"outline\\\">\\r\\n                               <mat-label>Queue Name</mat-label>\\r\\n                               <input matInput name=\\\"queueName\\\"  >\\r\\n                                \\r\\n                            </mat-form-field>\\r\\n                        </div>         \\r\\n                        <div fxFlex=\\\"20\\\" fxLayoutGap=\\\"20px\\\">\\r\\n                                <mat-form-field appearance=\\\"outline\\\">\\r\\n                                   <mat-label>Connecting Factory</mat-label>\\r\\n                                   <input matInput name=\\\"connectingFactory\\\">\\r\\n                                    \\r\\n                                </mat-form-field>\\r\\n                            </div>\\r\\n                   \\r\\n                    </div>\\r\\n                    <div fxFlex=\\\"100\\\" fxLayoutGap=\\\"10px\\\" *ngIf=\\\"protocolOut.typeOfProtocol=='DB Connection'\\\">\\r\\n                            <div fxFlex=\\\"25\\\">\\r\\n                                <mat-form-field appearance=\\\"outline\\\">\\r\\n                                    <mat-label>User Name</mat-label>\\r\\n                                    <input matInput name=\\\"userName\\\" #userName [(ngModel)]=\\\"incDbData.userName\\\">\\r\\n                                </mat-form-field>\\r\\n                            </div>\\r\\n                            <div fxFlex=\\\"25\\\">\\r\\n                                    <mat-form-field appearance=\\\"outline\\\">\\r\\n                                            <mat-label>Passowrd</mat-label>\\r\\n                                            <input matInput name=\\\"password\\\" #password type=\\\"password\\\" [(ngModel)]=\\\"incDbData.password\\\">\\r\\n                                             \\r\\n                                         </mat-form-field>\\r\\n                            </div>\\r\\n                            <div fxFlex=\\\"25\\\">\\r\\n                                    <mat-form-field appearance=\\\"outline\\\">\\r\\n                                            <mat-label>Data Base Name</mat-label>\\r\\n                                            <input matInput name=\\\"DBname\\\" #dbName [(ngModel)]=\\\"incDbData.dataBaseName\\\"> \\r\\n                                         </mat-form-field>\\r\\n                            </div>\\r\\n                            <div fxFlex=\\\"25\\\">\\r\\n                                    <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"outline\\\">\\r\\n                                            <mat-label>Connecting String</mat-label>\\r\\n                                            <textarea matInput [(ngModel)]=\\\"incDbData.connectiongstring\\\" name=\\\"connectingString\\\" #connectingSgtring></textarea>\\r\\n                                          </mat-form-field>\\r\\n                            </div>\\r\\n                        </div>\\r\\n        <div fxFlex=\\\"100\\\">\\r\\n            <div fxFlex=\\\"50\\\" fxLayoutGap=\\\"20px\\\">\\r\\n                <button mat-raised-button (click)=\\\"nextOfOutgoinProtocol(protocolOut)\\\" color=\\\"primary\\\">Next</button>\\r\\n                <button mat-raised-button (click)=\\\"previousOfOutgoing()\\\" color=\\\"accent\\\">Previous</button>\\r\\n                <button mat-raised-button (click)=\\\"onResetingOutgoing(protocolOut)\\\" color=\\\"warn\\\">Reset</button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</mat-card>\\r\\n<!-- Tcp outgoing -->\\r\\n<mat-card *ngIf=\\\"showTcpOut\\\">\\r\\n    <div fxLayout=\\\"row wrap\\\" *ngFor=\\\"let outTcp of outgoingMessageConfigurationTcp; let i = index;\\\">\\r\\n        <div fxFlex=\\\"100\\\" fxLayoutGap=\\\"20px\\\">\\r\\n            <div fxFlex=\\\"20\\\">\\r\\n                <mat-form-field appearance=\\\"outline\\\">\\r\\n                    <mat-label>Field No</mat-label>\\r\\n\\r\\n                    <input matInput name=\\\"fieldNo\\\" #fieldNo fieldNo=\\\"ngModel\\\" [(ngModel)]=\\\"outTcp.fieldNo\\\">\\r\\n                </mat-form-field>\\r\\n            </div>\\r\\n            <div fxFlex=\\\"20\\\">\\r\\n                <mat-form-field appearance=\\\"outline\\\">\\r\\n                    <mat-label>Field Name</mat-label>\\r\\n                    <input matInput name=\\\"fieldName\\\" #fieldName fieldName=\\\"ngModel\\\" [(ngModel)]=\\\"outTcp.fieldName\\\">\\r\\n                </mat-form-field>\\r\\n            </div>\\r\\n            <div fxFlex=\\\"20\\\">\\r\\n                <mat-form-field appearance=\\\"outline\\\">\\r\\n                    <mat-label>Data Type</mat-label>\\r\\n                    <mat-select name=\\\"dataType\\\" #dataType dataType=\\\"ngModel\\\" [(ngModel)]=\\\"outTcp.dataType\\\">\\r\\n\\r\\n                        <mat-option value=\\\"numeric\\\">Numeric</mat-option>\\r\\n                        <mat-option value=\\\"alphaNumeric\\\">Alpha Numeric</mat-option>\\r\\n                        <mat-option value=\\\"date\\\">Date</mat-option>\\r\\n\\r\\n                    </mat-select>\\r\\n\\r\\n\\r\\n                </mat-form-field>\\r\\n\\r\\n            </div>\\r\\n            <div fxFlex=\\\"20\\\">\\r\\n                <mat-form-field appearance=\\\"outline\\\">\\r\\n                    <mat-label>Default Value</mat-label>\\r\\n                    <input matInput name=\\\"type\\\" #fieldDefault fieldDefault=\\\"ngModel\\\" [(ngModel)]=\\\"outTcp.fieldDefault\\\">\\r\\n                </mat-form-field>\\r\\n            </div>\\r\\n            <div fxFlex=\\\"20\\\">\\r\\n                <button mat-raised-button (click)=\\\"deleteOutgoingTcp(i)\\\" color=\\\"primary\\\">\\r\\n                    <mat-icon>delete</mat-icon>\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div fxLayout=\\\"row wrap\\\">\\r\\n        <div fxFlex=\\\"100\\\">\\r\\n            <div fxFlex=\\\"30\\\">\\r\\n                <button mat-raised-button (click)=\\\"addoutgoingTCP()\\\" color=\\\"primary\\\">\\r\\n                    <mat-icon>add</mat-icon>\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</mat-card>\\r\\n<!-- Http xml out going -->\\r\\n<mat-card *ngIf=\\\"showHttpXmlOut\\\">\\r\\n        <div fxLayout=\\\"row wrap\\\">\\r\\n                <div fxFlex=\\\"100\\\" fxLayoutGap=\\\"20\\\">\\r\\n                    <div fxFlex=\\\"50\\\">\\r\\n                        <input type=\\\"file\\\" id=\\\"chFile\\\" (change)=\\\"fileuploadHttpXMlInc($event)\\\">\\r\\n                        <button mat-raised-button type=\\\"file\\\" class=\\\"btnFile\\\" (click)=\\\"chooseFile()\\\">\\r\\n                            <mat-icon>cloud_upload</mat-icon>&nbsp;&nbsp;File Upload\\r\\n                        </button>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div fxLayout=\\\"row wrap\\\" *ngFor=\\\"let outxmlHttp of outHttpXml\\\">\\r\\n                <div fxFlex=\\\"100\\\" fxLayoutGap=\\\"10px\\\">\\r\\n                    <div fxFlex=\\\"20\\\">\\r\\n                            <mat-form-field appearance=\\\"outline\\\">\\r\\n                                    <mat-label>Node</mat-label>\\r\\n                                    <input matInput name=\\\"node\\\" #node #node=\\\"ngModel\\\"[(ngModel)]=\\\"outxmlHttp.node\\\">\\r\\n                                </mat-form-field>\\r\\n\\r\\n                    </div>\\r\\n                    <div fxFlex=\\\"20\\\">\\r\\n                            <mat-form-field appearance=\\\"outline\\\">\\r\\n                                    <mat-label>Tag Name</mat-label>\\r\\n                                    <input matInput name=\\\"tagName\\\"#tagName #tagName=\\\"ngModel\\\"[(ngModel)]=\\\"outxmlHttp.tagName\\\">\\r\\n                                </mat-form-field>\\r\\n                    </div>\\r\\n                    <div fxFlex=\\\"20\\\">\\r\\n                            <mat-form-field appearance=\\\"outline\\\">\\r\\n                                    <mat-label>Data Type</mat-label>\\r\\n                                    <mat-select \\r\\n                                    name=\\\"dataType\\\" #dataType #dataType=\\\"ngModel\\\"[(ngModel)]=\\\"outxmlHttp.dataType\\\"\\r\\n                                   >\\r\\n                                    <mat-option value=\\\"numeric\\\">Numeric</mat-option>\\r\\n                                    <mat-option value=\\\"alphaNumeric\\\">Alpha Numeric</mat-option>\\r\\n                                    <mat-option value=\\\"date\\\">Date</mat-option>    \\r\\n                                </mat-select>\\r\\n                                </mat-form-field>\\r\\n                    </div>\\r\\n                    <div fxFlex=\\\"20\\\">\\r\\n                            <mat-form-field appearance=\\\"outline\\\">  \\r\\n                                    <mat-label>Default Value</mat-label>\\r\\n                                    <input matInput name=\\\"defaultValue\\\" #defaultValue #defaultValue=\\\"ngModel\\\"[(ngModel)]=\\\"outxmlHttp.defaultValue\\\">\\r\\n                                </mat-form-field>\\r\\n                    </div>\\r\\n                    <div fxFlex=\\\"10\\\">\\r\\n                        \\r\\n                        <button mat-raised-button (click)=\\\"deleteIncHttpXml(i)\\\" color=\\\"primary\\\">\\r\\n                                <mat-icon>delete</mat-icon>\\r\\n                            </button>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div fxLayout=\\\"row wrap\\\">\\r\\n                <div fxFlex=\\\"10\\\">\\r\\n                <button mat-raised-button (click)=\\\"addIncHttpXMl()\\\" color=\\\"primary\\\">\\r\\n                        <mat-icon>add</mat-icon>\\r\\n                    </button>\\r\\n                    </div>\\r\\n            </div>\\r\\n</mat-card>\\r\\n<!-- Http and Json outgoing -->\\r\\n<mat-card *ngIf=\\\"showHttpJsonOut\\\">\\r\\n    <div fxLayout=\\\"row wrap\\\">\\r\\n    <div fxFlex=\\\"100\\\" fxLayoutGap=\\\"20px\\\" *ngFor=\\\"let outgoingHttpJSon of outHttpJson; let i = index;\\\">\\r\\n                         \\r\\n        <div fxFlex=\\\"20\\\">\\r\\n            <mat-form-field appearance=\\\"outline\\\">\\r\\n               <mat-label>key</mat-label>\\r\\n              \\r\\n                <input matInput #key #key=\\\"ngModel\\\" name=\\\"key\\\" [(ngModel)]=\\\"outgoingHttpJSon.key\\\">\\r\\n            </mat-form-field>\\r\\n        </div>\\r\\n     \\r\\n            <div fxFlex=\\\"20\\\">\\r\\n                    <mat-form-field appearance=\\\"outline\\\">\\r\\n                            <mat-label>Data Type</mat-label>\\r\\n                            <mat-select\\r\\n                            #dataType #dataType=\\\"ngModel\\\" name=\\\"dataType\\\" [(ngModel)]=\\\"outgoingHttpJSon.dataType\\\"\\r\\n                            >\\r\\n                            \\r\\n                             <mat-option value=\\\"numeric\\\">Numeric</mat-option>\\r\\n                             <mat-option value=\\\"alphaNumeric\\\">Alpha Numeric</mat-option>\\r\\n                             <mat-option value=\\\"date\\\">Date</mat-option>\\r\\n                            \\r\\n                         </mat-select>\\r\\n                             \\r\\n                         </mat-form-field>\\r\\n                </div>\\r\\n                <div fxFlex=\\\"20\\\">\\r\\n                      <mat-form-field appearance=\\\"outline\\\">\\r\\n                         <mat-label>Default Value</mat-label>\\r\\n                        \\r\\n                          <input matInput #defaultValue #defaultValue=\\\"ngModel\\\" name=\\\"defaultValue\\\" [(ngModel)]=\\\"outgoingHttpJSon.defaultValue\\\">\\r\\n                      </mat-form-field>\\r\\n                  </div>\\r\\n                \\r\\n                    <div fxFlex=\\\"20\\\">\\r\\n                           <button mat-raised-button (click)=\\\"deleteOutHttpJson(i)\\\" color=\\\"primary\\\"><mat-icon>delete</mat-icon></button>\\r\\n                        </div>\\r\\n    </div>\\r\\n</div>\\r\\n<div fxLayout=\\\"row wrap\\\">\\r\\n    <div fxFlex=\\\"100\\\">\\r\\n            <button mat-raised-button (click)=\\\"addOutHttpJosn()\\\" color=\\\"primary\\\">\\r\\n                    <mat-icon>add</mat-icon>\\r\\n                </button>\\r\\n    </div>\\r\\n</div>\\r\\n    \\r\\n</mat-card>\\r\\n<!-- MDB and XMl outgoing -->\\r\\n<mat-card *ngIf=\\\"showMdbXmlOut\\\">\\r\\n        <div fxLayout=\\\"row wrap\\\">\\r\\n                <div fxFlex=\\\"100\\\" fxLayoutGap=\\\"20\\\">\\r\\n                    <div fxFlex=\\\"50\\\">\\r\\n                        <input type=\\\"file\\\" id=\\\"chFile\\\" (change)=\\\"fileuploadHttpXMlInc($event)\\\">\\r\\n                        <button mat-raised-button type=\\\"file\\\" class=\\\"btnFile\\\" (click)=\\\"chooseFile()\\\">\\r\\n                            <mat-icon>cloud_upload</mat-icon>&nbsp;&nbsp;File Upload\\r\\n                        </button>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div fxLayout=\\\"row wrap\\\" >\\r\\n                    <div fxFlex=\\\"100\\\" *ngFor=\\\"let mdboutxml of outMdbXml;let i=index\\\" fxLayoutGap=\\\"20px\\\">\\r\\n                        <div fxFlex=\\\"20\\\">\\r\\n                            <mat-form-field appearance=\\\"outline\\\">\\r\\n                               <mat-label>Node</mat-label>\\r\\n                                <input matInput #node name=\\\"node\\\" #node=\\\"ngModel\\\" [(ngModel)]=\\\"mdboutxml.node\\\">\\r\\n                            </mat-form-field>\\r\\n                        </div>\\r\\n                        <div fxFlex=\\\"20\\\">\\r\\n                                <mat-form-field appearance=\\\"outline\\\">\\r\\n                                        <mat-label>TagName</mat-label>\\r\\n                                        <input matInput #tagName name=\\\"tagName\\\" #tagName=\\\"ngModel\\\" [(ngModel)]=\\\"mdboutxml.tagName\\\">\\r\\n                                     </mat-form-field>\\r\\n                            </div>\\r\\n                            <div fxFlex=\\\"20\\\">\\r\\n                                    <mat-form-field appearance=\\\"outline\\\">\\r\\n                                            <mat-label>Data Type</mat-label>\\r\\n                                            <mat-select\\r\\n                                            #dataType name=\\\"dataType\\\" #dataType=\\\"ngModel\\\" [(ngModel)]=\\\"mdboutxml.dataType\\\"\\r\\n                                           > <mat-option value=\\\"numeric\\\">Numeric</mat-option>\\r\\n                                            <mat-option value=\\\"alphaNumeric\\\">Alpha Numeric</mat-option>\\r\\n                                            <mat-option value=\\\"date\\\">Date</mat-option>\\r\\n                                        </mat-select>\\r\\n                                         </mat-form-field>\\r\\n                            </div>\\r\\n                            <div fxFlex=\\\"20\\\">\\r\\n                                    <mat-form-field appearance=\\\"outline\\\">\\r\\n                                            <mat-label>Default Value</mat-label>\\r\\n                                            <input matInput #tagDefault name=\\\"tagDefault\\\" #tagDefault=\\\"ngModel\\\" [(ngModel)]=\\\"mdboutxml.tagDefault\\\">\\r\\n                                         </mat-form-field>\\r\\n                            </div>\\r\\n                            <div fxFlex=\\\"20\\\">   \\r\\n                                    <button mat-raised-button (click)=\\\"deleteoutMdbXml(i)\\\" color=\\\"primary\\\"><mat-icon>delete</mat-icon></button>\\r\\n\\r\\n                            </div>\\r\\n                    </div>\\r\\n                    <div fxLayout=\\\"row wrap\\\">\\r\\n                            <div fxFlex=\\\"100\\\">\\r\\n                                <div fxLayoutAlign=\\\"center stretch\\\">\\r\\n                                    <button mat-raised-button (click)=\\\"addoutMdbXMl()\\\" color=\\\"primary\\\"><mat-icon>add</mat-icon></button>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                </div>\\r\\n</mat-card>\\r\\n<!-- MDB Json outgoing -->\\r\\n<mat-card *ngIf=\\\"showMdbJsonOut\\\">\\r\\n    <div fxLayout=\\\"row wrap\\\">\\r\\n        <div fxFlex=\\\"100\\\" fxLayoutGap=\\\"20px\\\" *ngFor=\\\"let mdbJsonOut of outMdbJson\\\">\\r\\n                <div fxFlex=\\\"20\\\">\\r\\n                    <mat-form-field appearance=\\\"outline\\\">\\r\\n                        <mat-label>key</mat-label>\\r\\n                        <input matInput type=\\\"text\\\" name=\\\"key\\\" [(ngModel)]=\\\"mdbJsonOut.key\\\" #key #key=\\\"ngModel\\\"> \\r\\n                    </mat-form-field>\\r\\n                </div>\\r\\n                <div fxFlex=\\\"20\\\">\\r\\n                        <mat-form-field appearance=\\\"outline\\\">\\r\\n                                <mat-label>Data Type</mat-label>\\r\\n                                <mat-select\\r\\n                                name=\\\"dataType\\\" [(ngModel)]=\\\"mdbJsonOut.dataType\\\" #dataType #dataType=\\\"ngModel\\\"\\r\\n                               >\\r\\n                               \\r\\n                                <mat-option value=\\\"numeric\\\">Numeric</mat-option>\\r\\n                                <mat-option value=\\\"alphaNumeric\\\">Alpha Numeric</mat-option>\\r\\n                                <mat-option value=\\\"date\\\">Date</mat-option>\\r\\n                               \\r\\n                            </mat-select>\\r\\n                             </mat-form-field>\\r\\n                    </div>\\r\\n                <div fxFlex=\\\"20\\\">\\r\\n                        <mat-form-field appearance=\\\"outline\\\">\\r\\n                            <mat-label>Default Value</mat-label>\\r\\n                            <input matInput type=\\\"text\\\" name=\\\"defaultValue\\\" [(ngModel)]=\\\"mdbJsonOut.defaultValue\\\" #defaultValue #defaultValue=\\\"ngModel\\\"> \\r\\n                        </mat-form-field>\\r\\n                    </div>\\r\\n                   \\r\\n                        <div fxFlex=\\\"20\\\">   \\r\\n                                <button mat-raised-button (click)=\\\"deleteMdbJsonOut(i)\\\" color=\\\"primary\\\"><mat-icon>delete</mat-icon></button>\\r\\n\\r\\n                        </div>\\r\\n            </div>\\r\\n        </div>\\r\\n            <div fxLayout=\\\"row wrap\\\">\\r\\n                <div fxFlex=\\\"100\\\">\\r\\n                    <div fxFlex=\\\"30\\\">\\r\\n                            <button mat-raised-button (click)=\\\"addoutMdbJosn()\\\" color=\\\"primary\\\"><mat-icon>add</mat-icon></button>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n</mat-card>\\r\\n<!-- Mdb csV outgoing -->\\r\\n<mat-card *ngIf=\\\"showMdbCsvOut\\\">\\r\\n        <div fxLayout=\\\"row wrap\\\">\\r\\n                <div fxFlex=\\\"100\\\">\\r\\n                    <div fxFlex=\\\"40\\\">\\r\\n                        <mat-form-field appearance=\\\"outline\\\">\\r\\n                            <mat-label>Folder Name</mat-label>\\r\\n                            <input matInput>\\r\\n                        </mat-form-field>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n</mat-card>\\r\\n<!-- Mdb Flatfile outgoing -->\\r\\n<mat-card *ngIf=\\\"showMdbFlatOut\\\">\\r\\n        <div fxLayout=\\\"row wrap\\\">\\r\\n                <div fxFlex=\\\"100\\\">\\r\\n                    <div fxFlex=\\\"40\\\">\\r\\n                        <mat-form-field appearance=\\\"outline\\\">\\r\\n                            <mat-label>Folder Name</mat-label>\\r\\n                            <input matInput>\\r\\n                        </mat-form-field>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n</mat-card>\\r\\n<!-- Ejb XMl  outgoing-->\\r\\n<mat-card *ngIf=\\\"showEjbXMlOut\\\">\\r\\n    <div fxLayout=\\\"row wrap\\\">\\r\\n        <div fxFlex=\\\"100\\\" fxLayoutGap=\\\"20\\\">\\r\\n                <div fxFlex=\\\"50\\\">\\r\\n                    <input type=\\\"file\\\" id=\\\"chFile\\\" (change)=\\\"fileuploadHttpXMlInc($event)\\\">\\r\\n                    <button mat-raised-button type=\\\"file\\\" class=\\\"btnFile\\\" (click)=\\\"chooseFile()\\\">\\r\\n                        <mat-icon>cloud_upload</mat-icon>&nbsp;&nbsp;File Upload\\r\\n                    </button>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n            <div fxLayout=\\\"row wrap\\\" >\\r\\n                    <div fxFlex=\\\"100\\\" *ngFor=\\\"let ejboutxml of outEjbXml;let i=index\\\" fxLayoutGap=\\\"20px\\\">\\r\\n                            <div fxFlex=\\\"20\\\">\\r\\n                                    <mat-form-field appearance=\\\"outline\\\">\\r\\n                                       <mat-label>Node</mat-label>\\r\\n                                       <input matInput name=\\\"node\\\" #node node=\\\"ngModel\\\" [(ngModel)]=\\\"ejboutxml.node\\\">\\r\\n                                        \\r\\n                                    </mat-form-field>\\r\\n                                </div>\\r\\n                                <div fxFlex=\\\"20\\\">\\r\\n                                        <mat-form-field appearance=\\\"outline\\\">\\r\\n                                           <mat-label>Tag Name</mat-label>\\r\\n                                           <input matInput name=\\\"tagName\\\" #tagName tagName=\\\"ngModel\\\" [(ngModel)]=\\\"ejboutxml.tagName\\\">\\r\\n                                            \\r\\n                                        </mat-form-field>\\r\\n                                    </div>\\r\\n                                <div fxFlex=\\\"20\\\">\\r\\n                                        <mat-form-field appearance=\\\"outline\\\">\\r\\n                                             <mat-label>Data Type</mat-label>\\r\\n                                             <mat-select\\r\\n                                             name=\\\"node\\\" #dataType dataType=\\\"ngModel\\\" [(ngModel)]=\\\"ejboutxml.dataType\\\"\\r\\n                                            >\\r\\n                                            \\r\\n                                             <mat-option value=\\\"numeric\\\">Numeric</mat-option>\\r\\n                                             <mat-option value=\\\"alphaNumeric\\\">Alpha Numeric</mat-option>\\r\\n                                             <mat-option value=\\\"date\\\">Date</mat-option>\\r\\n                                            \\r\\n                                         </mat-select>\\r\\n                                        </mat-form-field>\\r\\n                                     </div>\\r\\n                                        <div fxFlex=\\\"20\\\">\\r\\n                                                <mat-form-field appearance=\\\"outline\\\">\\r\\n                                                   <mat-label>Default Value</mat-label>\\r\\n                                                   <input matInput name=\\\"tagvalue\\\" #tagvalue tagvalue=\\\"ngModel\\\" [(ngModel)]=\\\"ejboutxml.tagvalue\\\">\\r\\n                                                    \\r\\n                                                </mat-form-field>\\r\\n                                            </div>\\r\\n                                            \\r\\n                            <div fxFlex=\\\"20\\\">   \\r\\n                                    <button mat-raised-button (click)=\\\"deleteOutEjbXml(i)\\\" color=\\\"primary\\\"><mat-icon>delete</mat-icon></button>\\r\\n\\r\\n                            </div>\\r\\n                    </div>\\r\\n                    \\r\\n                </div>\\r\\n                <div fxLayout=\\\"row wrap\\\">\\r\\n                        <div fxFlex=\\\"100\\\">\\r\\n                            <div fxFlex=\\\"30\\\">\\r\\n                                <button mat-raised-button (click)=\\\"addoutEjbXml()\\\" color=\\\"primary\\\"><mat-icon>add</mat-icon></button>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n</mat-card>\\r\\n<!-- Ejb out Json -->\\r\\n<mat-card *ngIf=\\\"showEjbJsonOut\\\">\\r\\n        <div fxLayout=\\\"row wrap\\\">\\r\\n                <div fxFlex=\\\"100\\\" fxLayoutGap=\\\"20px\\\" *ngFor=\\\"let ejboutjosn of outEjbJson\\\">\\r\\n                    <div fxFlex=\\\"20\\\">\\r\\n                        <mat-form-field appearance=\\\"outline\\\">\\r\\n                            <mat-label>key</mat-label>\\r\\n                            <input matInput type=\\\"text\\\" name=\\\"key\\\" [(ngModel)]=\\\"ejboutjosn.key\\\" #key #key=\\\"ngModel\\\"> \\r\\n                        </mat-form-field>\\r\\n                    </div>\\r\\n                    <div fxFlex=\\\"20\\\">\\r\\n                            <mat-form-field appearance=\\\"outline\\\">\\r\\n                                <mat-label>Default Value</mat-label>\\r\\n                                <input matInput type=\\\"text\\\" name=\\\"defaultValue\\\" [(ngModel)]=\\\"ejboutjosn.defaultValue\\\" #defaultValue #node=\\\"ngModel\\\"> \\r\\n                            </mat-form-field>\\r\\n                        </div>\\r\\n                        <div fxFlex=\\\"20\\\">\\r\\n                                <mat-form-field appearance=\\\"outline\\\">\\r\\n                                        <mat-label>Data Type</mat-label>\\r\\n                                        <mat-select\\r\\n            \\r\\n                                       >\\r\\n                                       \\r\\n                                        <mat-option value=\\\"numeric\\\">Numeric</mat-option>\\r\\n                                        <mat-option value=\\\"alphaNumeric\\\">Alpha Numeric</mat-option>\\r\\n                                        <mat-option value=\\\"date\\\">Date</mat-option>\\r\\n                                       \\r\\n                                    </mat-select>\\r\\n                                        <!-- <input matInput name=\\\"type\\\" #type type=\\\"ngModel\\\" [(ngModel)]=\\\"incomingTCP.type\\\"> -->\\r\\n    \\r\\n                                     </mat-form-field>\\r\\n                            </div>\\r\\n                            <div fxFlex=\\\"20\\\">   \\r\\n                                    <button mat-raised-button (click)=\\\"deleteEjbJsonOut(i)\\\" color=\\\"primary\\\"><mat-icon>delete</mat-icon></button>\\r\\n\\r\\n                            </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div fxLayout=\\\"row wrap\\\">\\r\\n                    <div fxFlex=\\\"100\\\">\\r\\n                        <div >\\r\\n                            <button mat-raised-button (click)=\\\"addEjbJsonOut()\\\" color=\\\"primary\\\"><mat-icon>add</mat-icon></button>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n</mat-card>\\r\\n<!-- EJB CSV outgoing -->\\r\\n<mat-card *ngIf=\\\"showEjbCsvOut\\\">\\r\\n        <div fxLayout=\\\"row wrap\\\">\\r\\n                <div fxFlex=\\\"100\\\">\\r\\n                    <div fxFlex=\\\"40\\\">\\r\\n                        <mat-form-field appearance=\\\"outline\\\">\\r\\n                            <mat-label>Folder Name</mat-label>\\r\\n                            <input matInput>\\r\\n                        </mat-form-field>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n</mat-card>\\r\\n<!-- EJB Flat File out goinh -->\\r\\n<mat-card *ngIf=\\\"showEjbFlatOut\\\">\\r\\n        <div fxLayout=\\\"row wrap\\\">\\r\\n                <div fxFlex=\\\"100\\\">\\r\\n                    <div fxFlex=\\\"40\\\">\\r\\n                        <mat-form-field appearance=\\\"outline\\\">\\r\\n                            <mat-label>Folder Name</mat-label>\\r\\n                            <input matInput>\\r\\n                        </mat-form-field>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n</mat-card>\\r\\n<!-- Db connection  Xml out-->\\r\\n<mat-card *ngIf=\\\"showDBXmlOut\\\">\\r\\n        <div fxLayout=\\\"row wrap\\\">\\r\\n                <div fxFlex=\\\"100\\\" fxLayoutGap=\\\"20\\\">\\r\\n                    <div fxFlex=\\\"50\\\">\\r\\n                        <input type=\\\"file\\\" id=\\\"chFile\\\" (change)=\\\"fileuploadHttpXMlInc($event)\\\">\\r\\n                        <button mat-raised-button type=\\\"file\\\" class=\\\"btnFile\\\" (click)=\\\"chooseFile()\\\">\\r\\n                            <mat-icon>cloud_upload</mat-icon>&nbsp;&nbsp;File Upload\\r\\n                        </button>\\r\\n                    </div>\\r\\n                </div>\\r\\n        \\r\\n            </div>\\r\\n<div fxLayout=\\\"row wrap\\\">\\r\\n<div fxFlex=\\\"100\\\">\\r\\n<div fxFlex=\\\"40\\\">\\r\\n        <mat-form-field appearance=\\\"outline\\\">\\r\\n                <mat-label>Table Name</mat-label>\\r\\n                <input matInput name=\\\"tableName\\\"\\r\\n                (keyup)=\\\"onsearchingTablName($event)\\\" [matAutocomplete]=\\\"autotablName\\\">\\r\\n                <mat-autocomplete #autotablName=\\\"matAutocomplete\\\" \\r\\n                (optionSelected)=\\\"gettingColumnNameForIncoming($event)\\\">\\r\\n               <mat-option *ngFor=\\\"let tabname of incDbRecords\\\" [value]=\\\"tabname\\\">\\r\\n                    {{tabname}}\\r\\n                </mat-option>\\r\\n                </mat-autocomplete>\\r\\n              </mat-form-field>\\r\\n</div>\\r\\n</div>\\r\\n</div>\\r\\n<!-- Columns -->\\r\\n<div fxLayout=\\\"row wrap\\\"  *ngIf=\\\"coulmnNameBasedonTanbleName &&coulmnNameBasedonTanbleName.length\\\">\\r\\n        <div fxFlex=\\\"100\\\" *ngFor=\\\"let column of colRowForDbInc;let i=index\\\" fxLayoutGap=\\\"20px\\\">\\r\\n            <div fxFlex=\\\"30\\\">\\r\\n                <mat-form-field appearance=\\\"outline\\\">\\r\\n                    <mat-label>Column Name</mat-label>\\r\\n                    <mat-select>\\r\\n                        <mat-option *ngFor=\\\"let col of column\\\" [value]=\\\"col\\\">\\r\\n                            {{col}}\\r\\n                        </mat-option>\\r\\n                    </mat-select>\\r\\n                </mat-form-field>\\r\\n            </div>\\r\\n            <div fxFlex=\\\"30\\\">\\r\\n                    \\r\\n                        <mat-form-field appearance=\\\"outline\\\">\\r\\n                            <mat-label>Data Type</mat-label>\\r\\n                                <mat-select\\r\\n                                name=\\\"dataType\\\"\\r\\n                                >\\r\\n                                \\r\\n                                 <mat-option value=\\\"numeric\\\">Numeric</mat-option>\\r\\n                                 <mat-option value=\\\"alphaNumeric\\\">Alpha Numeric</mat-option>\\r\\n                                 <mat-option value=\\\"date\\\">Date</mat-option>\\r\\n                                \\r\\n                             </mat-select>\\r\\n                            </mat-form-field>\\r\\n                    \\r\\n                </div>\\r\\n                <div fxFlex=\\\"30\\\">\\r\\n                    <mat-form-field appearance=\\\"outline\\\">\\r\\n                        <mat-label>Default Value</mat-label>\\r\\n                        <input matInput >\\r\\n                    </mat-form-field>\\r\\n                </div>\\r\\n                <div fxFlex=\\\"30\\\">\\r\\n                        <button mat-raised-button (click)=\\\"deleteDbXInc(i)\\\" color=\\\"primary\\\">\\r\\n                                <mat-icon>remove</mat-icon>\\r\\n                            </button>\\r\\n                </div>\\r\\n               \\r\\n        </div>\\r\\n      <div fxFlex=\\\"100\\\">\\r\\n            <button mat-raised-button (click)=\\\"onAddingrowsForDbInc(i)\\\" color=\\\"primary\\\">\\r\\n                    <mat-icon>add</mat-icon>\\r\\n                </button>\\r\\n      </div>\\r\\n              \\r\\n    </div>\\r\\n   \\r\\n</mat-card>\\r\\n<!-- Db connection Json Outgoing -->\\r\\n<mat-card *ngIf=\\\"showDBJsonOut\\\">\\r\\n        <div fxLayout=\\\"row wrap\\\">\\r\\n                <div fxFlex=\\\"100\\\">\\r\\n                <div fxFlex=\\\"40\\\">\\r\\n                        <mat-form-field appearance=\\\"outline\\\">\\r\\n                                <mat-label>Table Name</mat-label>\\r\\n                                <input matInput name=\\\"tableName\\\"\\r\\n                                (keyup)=\\\"onsearchingTablName($event)\\\" [matAutocomplete]=\\\"autotablName\\\">\\r\\n                                <mat-autocomplete #autotablName=\\\"matAutocomplete\\\" \\r\\n                                (optionSelected)=\\\"gettingColumnNameForIncoming($event)\\\">\\r\\n                               <mat-option *ngFor=\\\"let tabname of incDbRecords\\\" [value]=\\\"tabname\\\">\\r\\n                                    {{tabname}}\\r\\n                                </mat-option>\\r\\n                                </mat-autocomplete>\\r\\n                              </mat-form-field>\\r\\n                </div>\\r\\n                </div>\\r\\n                </div>\\r\\n                <!-- Columns -->\\r\\n                <div fxLayout=\\\"row wrap\\\"  *ngIf=\\\"coulmnNameBasedonTanbleName &&coulmnNameBasedonTanbleName.length\\\">\\r\\n                        <div fxFlex=\\\"100\\\" *ngFor=\\\"let column of colRowForDbInc;let i=index\\\" fxLayoutGap=\\\"20px\\\">\\r\\n                            <div fxFlex=\\\"30\\\">\\r\\n                                <mat-form-field appearance=\\\"outline\\\">\\r\\n                                    <mat-label>Column Name</mat-label>\\r\\n                                    <mat-select>\\r\\n                                        <mat-option *ngFor=\\\"let col of column\\\" [value]=\\\"col\\\">\\r\\n                                            {{col}}\\r\\n                                        </mat-option>\\r\\n                                    </mat-select>\\r\\n                                </mat-form-field>\\r\\n                            </div>\\r\\n                            <div fxFlex=\\\"30\\\">\\r\\n                                    \\r\\n                                        <mat-form-field appearance=\\\"outline\\\">\\r\\n                                            <mat-label>Data Type</mat-label>\\r\\n                                                <mat-select\\r\\n                                                name=\\\"dataType\\\"\\r\\n                                                >\\r\\n                                                \\r\\n                                                 <mat-option value=\\\"numeric\\\">Numeric</mat-option>\\r\\n                                                 <mat-option value=\\\"alphaNumeric\\\">Alpha Numeric</mat-option>\\r\\n                                                 <mat-option value=\\\"date\\\">Date</mat-option>\\r\\n                                                \\r\\n                                             </mat-select>\\r\\n                                            </mat-form-field>\\r\\n                                    \\r\\n                                </div>\\r\\n                                <div fxFlex=\\\"30\\\">\\r\\n                                    <mat-form-field appearance=\\\"outline\\\">\\r\\n                                        <mat-label>Default Value</mat-label>\\r\\n                                        <input matInput >\\r\\n                                    </mat-form-field>\\r\\n                                </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n</mat-card>\\r\\n<!-- Db connection Csv outgoing -->\\r\\n<mat-card *ngIf=\\\"showDbCsvOut\\\">\\r\\n        <div fxLayout=\\\"row wrap\\\">\\r\\n                <div fxFlex=\\\"100\\\">\\r\\n                    <div fxFlex=\\\"40\\\">\\r\\n                        <mat-form-field appearance=\\\"outline\\\">\\r\\n                            <mat-label>Folder Name</mat-label>\\r\\n                            <input matInput>\\r\\n                        </mat-form-field>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n</mat-card>\\r\\n\\r\\n<!-- Db connection Flat outgoing -->\\r\\n<mat-card *ngIf=\\\"showDbFaltOut\\\">\\r\\n        <div fxLayout=\\\"row wrap\\\">\\r\\n                <div fxFlex=\\\"100\\\">\\r\\n                    <div fxFlex=\\\"40\\\">\\r\\n                        <mat-form-field appearance=\\\"outline\\\">\\r\\n                            <mat-label>Folder Name</mat-label>\\r\\n                            <input matInput>\\r\\n                        </mat-form-field>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n    </mat-card>\\r\\n\\r\\n<!-- ===================End For outgoing=============================== -->\\r\\n<!-- showing All -->\\r\\n<mat-tab-group mat-align-tabs=\\\"start\\\" *ngIf=\\\"showAllMsgProtocol\\\" #tabGroup [selectedIndex]=\\\"selectedIndex\\\"\\r\\n (selectedTabChange)=\\\"tabChanged($event)\\\" >\\r\\n    <mat-tab label=\\\"Incoming\\\">\\r\\n        <mat-card *ngIf=\\\"showAllProtocolInc\\\">\\r\\n            <div fxLayout=\\\"row wrap\\\">\\r\\n                <div fxFlex=\\\"100\\\">\\r\\n                    <div fxFlex=\\\"10\\\"></div>\\r\\n                    <div fxFlex=\\\"90\\\">\\r\\n                        <h5>Incoming Message Configuration ({{incProtocol}}&nbsp;{{incDataType}})</h5>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div fxLayout=\\\"column wrap\\\" *ngFor=\\\"let protocol of incomingIntegrationProtocol\\\">\\r\\n                <div fxFlex=\\\"100\\\">\\r\\n                    <div fxFlex=\\\"10\\\"></div>\\r\\n                    <div fxFlex=\\\"40\\\">\\r\\n                        <mat-form-field appearance=\\\"outline\\\">\\r\\n                            <mat-select #protocolRef [(ngModel)]=\\\"protocol.typeOfProtocol\\\"\\r\\n                                (selectionChange)=\\\"onProtocalSlection(protocol.typeOfProtocol)\\\"\\r\\n                                (optionSelected)=\\\"onProtocalSlection(protocol.typeOfProtocol)\\\">\\r\\n                                <mat-option>Please select</mat-option>\\r\\n                                <mat-option value=\\\"TCP/IP\\\">TCP/IP</mat-option>\\r\\n                                <mat-option value=\\\"Https/Http\\\">Https/Http\\r\\n                                </mat-option>\\r\\n                                <mat-option value=\\\"MDB\\\">MDB</mat-option>\\r\\n                                <mat-option value=\\\"EJB\\\">EJB</mat-option>\\r\\n                                <mat-option value=\\\"DB Connection\\\">DB Connection\\r\\n                                </mat-option>\\r\\n                            </mat-select>\\r\\n                        </mat-form-field>\\r\\n                    </div>\\r\\n\\r\\n                </div>\\r\\n                <div fxFlex=\\\"100\\\">\\r\\n                    <div fxFlex=\\\"10\\\"></div>\\r\\n                    <div fxFlex=\\\"40\\\">\\r\\n                        <mat-form-field appearance=\\\"outline\\\">\\r\\n                            <mat-select [(ngModel)]=\\\"protocol.dataType\\\"\\r\\n                                (selectionChange)=\\\"incomingDataypeSelection(protocol.dataType)\\\">\\r\\n                                <mat-option *ngFor=\\\"let data of dataType\\\" [value]=\\\"data\\\">{{data}}</mat-option>\\r\\n                            </mat-select>\\r\\n                        </mat-form-field>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div fxFlex=\\\"100\\\" fxLayoutGap=\\\"10px\\\" *ngIf=\\\"protocol.typeOfProtocol=='MDB'\\\">\\r\\n                        <div fxFlex=\\\"25\\\">\\r\\n                                <mat-form-field appearance=\\\"outline\\\">\\r\\n                                        <mat-label>Type of Queue</mat-label>\\r\\n                                      <mat-select (selectionChange)=\\\"onMdbIncQueue($event)\\\">\\r\\n                                          <mat-option *ngFor=\\\"let queue of mdbQueueInc\\\" [value]=\\\"queue\\\">{{queue}}</mat-option>\\r\\n                                      </mat-select>\\r\\n                                     </mat-form-field>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div fxFlex=\\\"100\\\" fxLayoutGap=\\\"20px\\\" *ngIf=\\\"showjsmQueue\\\">                    \\r\\n                            <div fxFlex=\\\"20\\\" >\\r\\n                                    <mat-form-field appearance=\\\"outline\\\">\\r\\n                                       <mat-label>Queue Manager</mat-label>\\r\\n                                       <input matInput name=\\\"queueManager\\\" >\\r\\n                                    </mat-form-field>\\r\\n                                </div>\\r\\n                                <div fxFlex=\\\"20\\\" >\\r\\n                                        <mat-form-field appearance=\\\"outline\\\">\\r\\n                                           <mat-label>Queue Name</mat-label>\\r\\n                                           <input matInput >\\r\\n                                        </mat-form-field>\\r\\n                                    </div>\\r\\n                                    <div fxFlex=\\\"20\\\" >\\r\\n                                            <mat-form-field appearance=\\\"outline\\\">\\r\\n                                               <mat-label>Channel</mat-label>\\r\\n                                               <input matInput>\\r\\n                                            </mat-form-field>\\r\\n                                            \\r\\n                                        </div>\\r\\n                           \\r\\n                                \\r\\n                           \\r\\n                     </div>\\r\\n                     <div fxFlex=\\\"100\\\" fxLayoutGap=\\\"20px\\\"  *ngIf=\\\"showibmQueue\\\" >\\r\\n                            <div fxFlex=\\\"20\\\" fxLayoutGap=\\\"20px\\\">\\r\\n                                <mat-form-field appearance=\\\"outline\\\">\\r\\n                                   <mat-label>Queue Manager</mat-label>\\r\\n                                   <input matInput name=\\\"queueManager\\\" >\\r\\n                                    \\r\\n                                </mat-form-field>\\r\\n                            </div>\\r\\n                            <div fxFlex=\\\"20\\\" fxLayoutGap=\\\"20px\\\">\\r\\n                                    <mat-form-field appearance=\\\"outline\\\">\\r\\n                                       <mat-label>Queue Name</mat-label>\\r\\n                                       <input matInput name=\\\"queueName\\\"  >\\r\\n                                        \\r\\n                                    </mat-form-field>\\r\\n                                </div>         \\r\\n                                <div fxFlex=\\\"20\\\" fxLayoutGap=\\\"20px\\\">\\r\\n                                        <mat-form-field appearance=\\\"outline\\\">\\r\\n                                           <mat-label>Connecting Factory</mat-label>\\r\\n                                           <input matInput name=\\\"connectingFactory\\\">\\r\\n                                            \\r\\n                                        </mat-form-field>\\r\\n                                    </div>\\r\\n                           \\r\\n                            </div>\\r\\n                            <div fxFlex=\\\"100\\\" fxLayoutGap=\\\"10px\\\" *ngIf=\\\"protocol.typeOfProtocol=='DB Connection'\\\">\\r\\n                                    <div fxFlex=\\\"25\\\">\\r\\n                                        <mat-form-field appearance=\\\"outline\\\">\\r\\n                                            <mat-label>User Name</mat-label>\\r\\n                                            <input matInput name=\\\"userName\\\" #userName [(ngModel)]=\\\"incDbData.userName\\\">\\r\\n                                        </mat-form-field>\\r\\n                                    </div>\\r\\n                                    <div fxFlex=\\\"25\\\">\\r\\n                                            <mat-form-field appearance=\\\"outline\\\">\\r\\n                                                    <mat-label>Passowrd</mat-label>\\r\\n                                                    <input matInput name=\\\"password\\\" #password type=\\\"password\\\" [(ngModel)]=\\\"incDbData.password\\\">\\r\\n                                                     \\r\\n                                                 </mat-form-field>\\r\\n                                    </div>\\r\\n                                    <div fxFlex=\\\"25\\\">\\r\\n                                            <mat-form-field appearance=\\\"outline\\\">\\r\\n                                                    <mat-label>Data Base Name</mat-label>\\r\\n                                                    <input matInput name=\\\"DBname\\\" #dbName [(ngModel)]=\\\"incDbData.dataBaseName\\\"> \\r\\n                                                 </mat-form-field>\\r\\n                                    </div>\\r\\n                                    <div fxFlex=\\\"25\\\">\\r\\n                                            <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"outline\\\">\\r\\n                                                    <mat-label>Connecting String</mat-label>\\r\\n                                                    <textarea matInput [(ngModel)]=\\\"incDbData.connectiongstring\\\" name=\\\"connectingString\\\" #connectingSgtring></textarea>\\r\\n                                                  </mat-form-field>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                <div fxFlex=\\\"100\\\">\\r\\n                    <div fxFlex=\\\"50\\\" fxLayoutGap=\\\"20px\\\">\\r\\n                        <button mat-raised-button (click)=\\\"nextOfAllInc(protocol)\\\" color=\\\"primary\\\">Next</button>\\r\\n                        <button mat-raised-button (click)=\\\"previousOfIncoming()\\\" color=\\\"accent\\\">Previous</button>\\r\\n                        <button mat-raised-button (click)=\\\"onResetIncoming(protocol)\\\" color=\\\"warn\\\">Reset</button>\\r\\n                    </div>\\r\\n                </div>\\r\\n              \\r\\n            </div>\\r\\n        </mat-card>\\r\\n        <!-- Tcp Incoming -->\\r\\n        <mat-card *ngIf=\\\"showAllIncTcp\\\">\\r\\n            <div fxLayout=\\\"row wrap\\\" *ngFor=\\\"let incTcp of incomingMessageConfigurationTcp\\\">\\r\\n                <div fxFlex=\\\"100\\\" fxLayoutGap=\\\"10px\\\">\\r\\n                    <div fxFlex=\\\"20\\\">\\r\\n                        <mat-form-field appearance=\\\"outline\\\">\\r\\n                            <mat-label>Field No</mat-label>\\r\\n\\r\\n                            <input matInput name=\\\"fieldNo\\\" #fieldNo fieldNo=\\\"ngModel\\\" [(ngModel)]=\\\"incTcp.fieldNo\\\">\\r\\n                        </mat-form-field>\\r\\n                    </div>\\r\\n                    <div fxFlex=\\\"20\\\">\\r\\n                        <mat-form-field appearance=\\\"outline\\\">\\r\\n                            <mat-label>Field Name</mat-label>\\r\\n                            <input matInput name=\\\"fieldName\\\" #fieldName fieldName=\\\"ngModel\\\"\\r\\n                                [(ngModel)]=\\\"incTcp.fieldName\\\">\\r\\n                        </mat-form-field>\\r\\n                    </div>\\r\\n                    <div fxFlex=\\\"20\\\">\\r\\n                        <mat-form-field appearance=\\\"outline\\\">\\r\\n                            <mat-label>Data Type</mat-label>\\r\\n                            <mat-select name=\\\"dataType\\\" #dataType dataType=\\\"ngModel\\\" [(ngModel)]=\\\"incTcp.dataType\\\">\\r\\n\\r\\n                                <mat-option value=\\\"numeric\\\">Numeric</mat-option>\\r\\n                                <mat-option value=\\\"alphaNumeric\\\">Alpha Numeric</mat-option>\\r\\n                                <mat-option value=\\\"date\\\">Date</mat-option>\\r\\n\\r\\n                            </mat-select>\\r\\n\\r\\n\\r\\n                        </mat-form-field>\\r\\n                    </div>\\r\\n                    <div fxFlex=\\\"20\\\">\\r\\n                        <mat-form-field appearance=\\\"outline\\\">\\r\\n                            <mat-label>Default Value</mat-label>\\r\\n                            <input matInput name=\\\"defaultValue\\\" #defaultValue defaultValue=\\\"ngModel\\\"\\r\\n                                [(ngModel)]=\\\"incTcp.defaultValue\\\">\\r\\n                        </mat-form-field>\\r\\n                    </div>\\r\\n                    <div fxFlex=\\\"20\\\">\\r\\n                        <button mat-raised-button (click)=\\\"deleteOfTCP(i)\\\" color=\\\"primary\\\">\\r\\n                            <mat-icon>delete</mat-icon>\\r\\n                        </button>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div fxLayout=\\\"row wrap\\\">\\r\\n                <div fxFlex=\\\"100\\\">\\r\\n                    <div fxFlex=\\\"25\\\">\\r\\n                        <button mat-raised-button (click)=\\\"addIncomingTcp()\\\" color=\\\"primary\\\">\\r\\n                            <mat-icon>add</mat-icon>\\r\\n                        </button>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n        </mat-card>\\r\\n        <!-- Http Xml Inc All -->\\r\\n        <mat-card *ngIf=\\\"showAllIncHttpXml\\\">\\r\\n                <div fxLayout=\\\"row wrap\\\">\\r\\n                        <div fxFlex=\\\"100\\\" fxLayoutGap=\\\"20\\\">\\r\\n                \\r\\n                \\r\\n                            <div fxFlex=\\\"50\\\">\\r\\n                                <input type=\\\"file\\\" id=\\\"chFile\\\" (change)=\\\"fileuploadHttpXMlInc($event)\\\">\\r\\n                                <button mat-raised-button type=\\\"file\\\" class=\\\"btnFile\\\" (click)=\\\"chooseFile()\\\">\\r\\n                                    <mat-icon>cloud_upload</mat-icon>&nbsp;&nbsp;File Upload\\r\\n                                </button>\\r\\n                \\r\\n                            </div>\\r\\n                \\r\\n                \\r\\n                \\r\\n                        </div>\\r\\n                \\r\\n                    </div>\\r\\n                    <div fxLayout=\\\"row wrap\\\" *ngFor=\\\"let xmlhttpInc of incHttpXMl\\\">\\r\\n                            <div fxFlex=\\\"100\\\" fxLayoutGap=\\\"20px\\\">\\r\\n                                <div fxFlex=\\\"20\\\">\\r\\n                                    <mat-form-field appearance=\\\"outline\\\">\\r\\n                                        <mat-label>Node</mat-label>\\r\\n                                        <input matInput name=\\\"node\\\" #node #node=\\\"ngModel\\\" [(ngModel)]=\\\"xmlhttpInc.node\\\">\\r\\n                                    </mat-form-field>\\r\\n                                </div>\\r\\n                                <div fxFlex=\\\"20\\\">\\r\\n                                    <mat-form-field appearance=\\\"outline\\\">\\r\\n                                        <mat-label>Tag Name</mat-label>\\r\\n                                        <input matInput name=\\\"tagName\\\" #tagName #tagName=\\\"ngModel\\\" [(ngModel)]=\\\"xmlhttpInc.tagName\\\">\\r\\n                                    </mat-form-field>\\r\\n                                </div>\\r\\n                                <div fxFlex=\\\"20\\\">\\r\\n                                    <mat-form-field appearance=\\\"outline\\\">\\r\\n                                        <mat-label>Data Type</mat-label>\\r\\n                                        <mat-select name=\\\"dataType\\\" #dataType #dataType=\\\"ngModel\\\" [(ngModel)]=\\\"xmlhttpInc.dataType\\\">\\r\\n                    \\r\\n                                            <mat-option value=\\\"numeric\\\">Numeric</mat-option>\\r\\n                                            <mat-option value=\\\"alphaNumeric\\\">Alpha Numeric</mat-option>\\r\\n                                            <mat-option value=\\\"date\\\">Date</mat-option>\\r\\n                    \\r\\n                                        </mat-select>\\r\\n                                    </mat-form-field>\\r\\n                                </div>\\r\\n                                <div fxFlex=\\\"20\\\">\\r\\n                                    <mat-form-field appearance=\\\"outline\\\">\\r\\n                                        <mat-label>Default Value</mat-label>\\r\\n                                        <input matInput name=\\\"defaultValue\\\" #defaultValue #defaultValue=\\\"ngModel\\\"\\r\\n                                            [(ngModel)]=\\\"xmlhttpInc.defaultValue\\\">\\r\\n                                    </mat-form-field>\\r\\n                                </div>\\r\\n                                <div fxFlex=\\\"10\\\">\\r\\n                                    <button mat-raised-button (click)=\\\"deleteIncHttpXml(i)\\\" color=\\\"primary\\\">\\r\\n                                        <mat-icon>delete</mat-icon>\\r\\n                                    </button>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div fxLayout=\\\"row wrap\\\">\\r\\n                            <div fxFlex=\\\"100\\\">\\r\\n                                <div fxFlex=\\\"30\\\">\\r\\n                                    <button mat-raised-button (click)=\\\"addIncHttpXMl()\\\" color=\\\"primary\\\">\\r\\n                                        <mat-icon>add</mat-icon>\\r\\n                                    </button>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n        </mat-card>\\r\\n        <!-- Http Json Inc All -->\\r\\n        <mat-card *ngIf=\\\"showAllIncHttpJosn\\\">\\r\\n                <div fxLayout=\\\"row wrap\\\">\\r\\n                        <div fxFlex=\\\"100\\\" *ngFor=\\\"let incomingHttpJson of incHttpJson; let i = index;\\\" fxLayoutGap=\\\"20px\\\">\\r\\n                            <div fxFlex=\\\"20\\\">\\r\\n                                <mat-form-field appearance=\\\"outline\\\">\\r\\n                                    <mat-label>Key</mat-label>\\r\\n                \\r\\n                                    <input matInput name=\\\"node\\\" #node #node=\\\"ngModel\\\" [(ngModel)]=\\\"incomingHttpJson.key\\\">\\r\\n                                </mat-form-field>\\r\\n                            </div>\\r\\n                \\r\\n                            <div fxFlex=\\\"20\\\">\\r\\n                                <mat-form-field appearance=\\\"outline\\\">\\r\\n                                    <mat-label>Data Type</mat-label>\\r\\n                \\r\\n                                    <mat-select name=\\\"dataType\\\" #dataType #dataType=\\\"ngModel\\\" [(ngModel)]=\\\"incomingHttpJson.dataType\\\">\\r\\n                \\r\\n                                        <mat-option value=\\\"numeric\\\">Numeric</mat-option>\\r\\n                                        <mat-option value=\\\"alphaNumeric\\\">Alpha Numeric</mat-option>\\r\\n                                        <mat-option value=\\\"date\\\">Date</mat-option>\\r\\n                \\r\\n                                    </mat-select>\\r\\n                                </mat-form-field>\\r\\n                            </div>\\r\\n                            <div fxFlex=\\\"20\\\">\\r\\n                                <mat-form-field appearance=\\\"outline\\\">\\r\\n                                    <mat-label>Default Value</mat-label>\\r\\n                                    <input matInput name=\\\"type\\\" #defaultValue #defaultValue=\\\"ngModel\\\"\\r\\n                                        [(ngModel)]=\\\"incomingHttpJson.deafultValue\\\">\\r\\n                                </mat-form-field>\\r\\n                            </div>\\r\\n                            <div fxFlex=\\\"20\\\">\\r\\n                                <button mat-raised-button (click)=\\\"deleteIncHttpJson(i)\\\" color=\\\"primary\\\">\\r\\n                                    <mat-icon>delete</mat-icon>\\r\\n                                </button>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div fxLayout=\\\"row wrap\\\">\\r\\n                        <div fxFlex=\\\"100\\\">\\r\\n                            <div fxFlex=\\\"30\\\">\\r\\n                                <button mat-raised-button (click)=\\\"addIncHttpJson()\\\" color=\\\"primary\\\">\\r\\n                                    <mat-icon>add</mat-icon>\\r\\n                                </button>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n        </mat-card>\\r\\n        <!-- Mdb XMl Inc All -->\\r\\n        <mat-card *ngIf=\\\"showAllIncMdbXml\\\">\\r\\n                <div fxLayout=\\\"row wrap\\\">\\r\\n                        <div fxFlex=\\\"100\\\" fxLayoutGap=\\\"20\\\">\\r\\n                            <div fxFlex=\\\"50\\\">\\r\\n                                <input type=\\\"file\\\" id=\\\"chFile\\\" (change)=\\\"fileuploadHttpXMlInc($event)\\\">\\r\\n                                <button mat-raised-button type=\\\"file\\\" class=\\\"btnFile\\\" (click)=\\\"chooseFile()\\\">\\r\\n                                    <mat-icon>cloud_upload</mat-icon>&nbsp;&nbsp;File Upload\\r\\n                                </button>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div fxLayout=\\\"row wrap\\\">\\r\\n                        <div fxFlex=\\\"100\\\" fxLayoutGap=\\\"10px\\\" *ngFor=\\\"let xmlMdbInc of incMDBXML;let i=index\\\">\\r\\n                            <div fxFlex=\\\"20\\\">\\r\\n                                <mat-form-field appearance=\\\"outline\\\">\\r\\n                                    <mat-label>Node</mat-label>\\r\\n                                    <input matInput name=\\\"node\\\" #node #node=\\\"ngModel\\\" [(ngModel)]=\\\"xmlMdbInc.node\\\">\\r\\n                                </mat-form-field>\\r\\n                            </div>\\r\\n                            <div fxFlex=\\\"20\\\">\\r\\n                                <mat-form-field appearance=\\\"outline\\\">\\r\\n                                    <mat-label>TagName</mat-label>\\r\\n                                    <input matInput name=\\\"tagName\\\" #tagName #tagName=\\\"ngModel\\\" [(ngModel)]=\\\"xmlMdbInc.tagName\\\">\\r\\n                                </mat-form-field>\\r\\n                            </div>\\r\\n                            <div fxFlex=\\\"20\\\">\\r\\n                                <mat-form-field appearance=\\\"outline\\\">\\r\\n                                    <mat-label>Data Type</mat-label>\\r\\n                                    <mat-select name=\\\"dataType\\\" #dataType #dataType=\\\"ngModel\\\" [(ngModel)]=\\\"xmlMdbInc.dataType\\\">\\r\\n                                        <mat-option value=\\\"numeric\\\">Numeric</mat-option>\\r\\n                                        <mat-option value=\\\"alphaNumeric\\\">Alpha Numeric</mat-option>\\r\\n                                        <mat-option value=\\\"date\\\">Date</mat-option>\\r\\n                                    </mat-select>\\r\\n                                </mat-form-field>\\r\\n                            </div>\\r\\n                            <div fxFlex=\\\"20\\\">\\r\\n                                <mat-form-field appearance=\\\"outline\\\">\\r\\n                                    <mat-label>Default Value</mat-label>\\r\\n                                    <input matInput name=\\\"defaultValue\\\" #defaultValue #defaultValue=\\\"ngModel\\\"\\r\\n                                        [(ngModel)]=\\\"xmlMdbInc.defaultValue\\\">\\r\\n                                </mat-form-field>\\r\\n                            </div>\\r\\n                            <div fxFlex=\\\"10\\\">\\r\\n                                <button mat-raised-button (click)=\\\"deleteMdbXmlInc(i)\\\" color=\\\"primary\\\">\\r\\n                                    <mat-icon>delete</mat-icon>\\r\\n                                </button>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div fxLayout=\\\"row wrap\\\">\\r\\n                        <div fxFlex=\\\"100\\\">\\r\\n                            <div fxFlex=\\\"30\\\">\\r\\n                                <button mat-raised-button (click)=\\\"addMdbXMlInc()\\\" color=\\\"primary\\\">\\r\\n                                    <mat-icon>add</mat-icon>\\r\\n                                </button>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n        </mat-card>\\r\\n        <!-- Mdb Jsn Inc All -->\\r\\n        <mat-card *ngIf=\\\"showAllIncMdbJson\\\">\\r\\n            \\r\\n    <div fxLayout=\\\"row wrap\\\">\\r\\n            <div fxFlex=\\\"100\\\" *ngFor=\\\"let mdbJsonInc of incMdbJson;let i=index\\\" fxLayoutGap=\\\"20px\\\">\\r\\n                <div fxFlex=\\\"20\\\">\\r\\n                    <mat-form-field appearance=\\\"outline\\\">\\r\\n                        <mat-label>Key</mat-label>\\r\\n                        <input matInput name=\\\"key\\\" #key #key=\\\"ngModel\\\" [(ngModel)]=\\\"mdbJsonInc.key\\\">\\r\\n                    </mat-form-field>\\r\\n                </div>\\r\\n                <div fxFlex=\\\"20\\\">\\r\\n                    <mat-form-field appearance=\\\"outline\\\">\\r\\n                        <mat-label>Data Type</mat-label>\\r\\n                        <mat-select name=\\\"dataType\\\" #dataType dataType=\\\"ngModel\\\" [(ngModel)]=\\\"mdbJsonInc.dataType\\\">\\r\\n    \\r\\n                            <mat-option value=\\\"numeric\\\">Numeric</mat-option>\\r\\n                            <mat-option value=\\\"alphaNumeric\\\">Alpha Numeric</mat-option>\\r\\n                            <mat-option value=\\\"date\\\">Date</mat-option>\\r\\n    \\r\\n                        </mat-select>\\r\\n                    </mat-form-field>\\r\\n                </div>\\r\\n                <div fxFlex=\\\"20\\\">\\r\\n                    <mat-form-field appearance=\\\"outline\\\">\\r\\n                        <mat-label>Default Value</mat-label>\\r\\n                        <input matInput name=\\\"defaultValue\\\" #defaultValue #defaultValue=\\\"ngModel\\\"\\r\\n                            [(ngModel)]=\\\"mdbJsonInc.defaultValue\\\">\\r\\n                    </mat-form-field>\\r\\n                </div>\\r\\n                <div fxFlex=\\\"20\\\">\\r\\n                    <button mat-raised-button (click)=\\\"deleteMdbJsonInc(i)\\\" color=\\\"primary\\\">\\r\\n                        <mat-icon>delete</mat-icon>\\r\\n                    </button>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div fxLayout=\\\"row wrap\\\">\\r\\n            <div fxFlex=\\\"100\\\">\\r\\n                <div fxFlex=\\\"30\\\">\\r\\n                    <button mat-raised-button (click)=\\\"addMdbJsonInc()\\\" color=\\\"primary\\\">\\r\\n                        <mat-icon>add</mat-icon>\\r\\n                    </button>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        </mat-card>\\r\\n        <!-- MDB CSv Inc All -->\\r\\n        <mat-card *ngIf=\\\"showAllIncMdbCsv\\\"> \\r\\n                <div fxLayout=\\\"row wrap\\\">\\r\\n                        <div fxFlex=\\\"100\\\">\\r\\n                            <div fxFlex=\\\"40\\\">\\r\\n                                <mat-form-field appearance=\\\"outline\\\">\\r\\n                                    <mat-label>Folder Name</mat-label>\\r\\n                                    <input matInput>\\r\\n                                </mat-form-field>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n        </mat-card>\\r\\n        <!-- Mdb Excel Inc All -->\\r\\n        <mat-card *ngIf=\\\"showAllIncMdbFlat\\\">\\r\\n                <div fxLayout=\\\"row wrap\\\">\\r\\n                        <div fxFlex=\\\"100\\\">\\r\\n                            <div fxFlex=\\\"40\\\">\\r\\n                                <mat-form-field appearance=\\\"outline\\\">\\r\\n                                    <mat-label>Folder Name</mat-label>\\r\\n                                    <input matInput>\\r\\n                                </mat-form-field>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n        </mat-card>\\r\\n        <!-- Ejb Xml Inc All -->\\r\\n        <mat-card *ngIf=\\\"showAllIncEjbXml\\\">\\r\\n                <div fxLayout=\\\"row wrap\\\">\\r\\n                        <div fxFlex=\\\"100\\\" fxLayoutGap=\\\"20\\\">\\r\\n                            <div fxFlex=\\\"50\\\">\\r\\n                                <input type=\\\"file\\\" id=\\\"chFile\\\" (change)=\\\"fileuploadHttpXMlInc($event)\\\">\\r\\n                                <button mat-raised-button type=\\\"file\\\" class=\\\"btnFile\\\" (click)=\\\"chooseFile()\\\">\\r\\n                                    <mat-icon>cloud_upload</mat-icon>&nbsp;&nbsp;File Upload\\r\\n                                </button>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div fxLayout=\\\"row wrap\\\">\\r\\n                        <div fxFlex=\\\"100\\\" *ngFor=\\\"let ejbxmlInc of incEjbXMl\\\" fxLayoutGap=\\\"20px\\\">\\r\\n                            <div fxFlex=\\\"20\\\">\\r\\n                                <mat-form-field appearance=\\\"outline\\\">\\r\\n                                    <mat-label>Node</mat-label>\\r\\n                \\r\\n                                    <input matInput name=\\\"node\\\" #node #node=\\\"ngModel\\\" [(ngModel)]=\\\"ejbxmlInc.node\\\">\\r\\n                \\r\\n                                </mat-form-field>\\r\\n                            </div>\\r\\n                \\r\\n                            <div fxFlex=\\\"20\\\">\\r\\n                                <mat-form-field appearance=\\\"outline\\\">\\r\\n                                    <mat-label>Tag Name</mat-label>\\r\\n                \\r\\n                                    <input matInput name=\\\"tagName\\\" #tagName #tagName=\\\"ngModel\\\" [(ngModel)]=\\\"ejbxmlInc.tagName\\\">\\r\\n                \\r\\n                                </mat-form-field>\\r\\n                            </div>\\r\\n                \\r\\n                \\r\\n                \\r\\n                            <div fxFlex=\\\"20\\\">\\r\\n                                <mat-form-field appearance=\\\"outline\\\">\\r\\n                                    <mat-select name=\\\"datatype\\\" #datatype #datatype=\\\"ngModel\\\" [(ngModel)]=\\\"ejbxmlInc.dataType\\\">\\r\\n                \\r\\n                                        <mat-option value=\\\"numeric\\\">Numeric</mat-option>\\r\\n                                        <mat-option value=\\\"alphaNumeric\\\">Alpha Numeric</mat-option>\\r\\n                                        <mat-option value=\\\"date\\\">Date</mat-option>\\r\\n                \\r\\n                                    </mat-select>\\r\\n                                </mat-form-field>\\r\\n                            </div>\\r\\n                            <div fxFlex=\\\"20\\\">\\r\\n                                <mat-form-field appearance=\\\"outline\\\">\\r\\n                                    <mat-label>Default Value</mat-label>\\r\\n                \\r\\n                                    <input matInput name=\\\"tagvalue\\\" #tagvalue #tagvalue=\\\"ngModel\\\" [(ngModel)]=\\\"ejbxmlInc.tagvalue\\\">\\r\\n                \\r\\n                                </mat-form-field>\\r\\n                            </div>\\r\\n                            <div fxFlex=\\\"20\\\">\\r\\n                                <button mat-raised-button (click)=\\\"deleteEjbXmlInc(i)\\\" color=\\\"primary\\\">\\r\\n                                    <mat-icon>delete</mat-icon>\\r\\n                                </button>\\r\\n                            </div>\\r\\n                \\r\\n                \\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div fxLayout=\\\"row wrap\\\">\\r\\n                        <div fxFlex=\\\"100\\\">\\r\\n                            <div fxFlex=\\\"30\\\">\\r\\n                                <button mat-raised-button (click)=\\\"addEjbXMlInc()\\\" color=\\\"primary\\\">\\r\\n                                    <mat-icon>add</mat-icon>\\r\\n                                </button>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n        </mat-card>\\r\\n        <!-- Ejb  Json Inc All -->\\r\\n        <mat-card *ngIf=\\\"showAllIncEjbJson\\\">\\r\\n                <div fxLayout=\\\"row wrap\\\" fxLayoutGap=\\\"20px\\\">\\r\\n                        <div fxFlex=\\\"100\\\" *ngFor=\\\"let ejbinJosn of incEjbJson\\\" fxLayoutGap=\\\"20px\\\">\\r\\n                            <div fxFlex=\\\"20\\\">\\r\\n                                <mat-form-field appearance=\\\"outline\\\">\\r\\n                                    <mat-label>Key</mat-label>\\r\\n            \\r\\n                                    <input matInput name=\\\"key\\\" #key=\\\"ngModel\\\" [(ngModel)]=\\\"ejbinJosn.key\\\">\\r\\n            \\r\\n                                </mat-form-field>\\r\\n                            </div>\\r\\n                            <div fxFlex=\\\"20\\\">\\r\\n                                <mat-form-field appearance=\\\"outline\\\">\\r\\n                                    <mat-select name=\\\"dataType\\\" #dataType #dataType=\\\"ngModel\\\" [(ngModel)]=\\\"ejbinJosn.dataType\\\">\\r\\n            \\r\\n                                        <mat-option value=\\\"numeric\\\">Numeric</mat-option>\\r\\n                                        <mat-option value=\\\"alphaNumeric\\\">Alpha Numeric</mat-option>\\r\\n                                        <mat-option value=\\\"date\\\">Date</mat-option>\\r\\n            \\r\\n                                    </mat-select>\\r\\n                                </mat-form-field>\\r\\n                            </div>\\r\\n                            <div fxFlex=\\\"20\\\">\\r\\n                                <mat-form-field appearance=\\\"outline\\\">\\r\\n                                    <mat-label>Default Value</mat-label>\\r\\n            \\r\\n                                    <input matInput name=\\\"defaultValue\\\" #defaultValue #defaultValue=\\\"ngModel\\\"\\r\\n                                        [(ngModel)]=\\\"ejbinJosn.defaultValue\\\">\\r\\n            \\r\\n                                </mat-form-field>\\r\\n                            </div>\\r\\n            \\r\\n            \\r\\n                            <div fxFlex=\\\"20\\\">\\r\\n                                <button mat-raised-button (click)=\\\"deleteIncEjbJson(i)\\\" color=\\\"primary\\\">\\r\\n                                    <mat-icon>delete</mat-icon>\\r\\n                                </button>\\r\\n                            </div>\\r\\n            \\r\\n            \\r\\n                        </div>\\r\\n                    </div>\\r\\n            \\r\\n                    <div fxLayout=\\\"row wrap\\\">\\r\\n                        <div fxFlex=\\\"100\\\">\\r\\n                            <div fxFlex=\\\"30\\\">\\r\\n                                    <button mat-raised-button (click)=\\\"addIncEjbJson()\\\" color=\\\"primary\\\">\\r\\n                                            <mat-icon>add</mat-icon>\\r\\n                                        </button>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n        </mat-card>\\r\\n        <!-- Ejb CSV Inc All -->\\r\\n        <mat-card *ngIf=\\\"showAllIncEjbCsv\\\">\\r\\n                <div fxLayout=\\\"row wrap\\\">\\r\\n                        <div fxFlex=\\\"100\\\">\\r\\n                            <div fxFlex=\\\"40\\\">\\r\\n                                <mat-form-field appearance=\\\"outline\\\">\\r\\n                                    <mat-label>Folder Name</mat-label>\\r\\n                                    <input matInput>\\r\\n                                </mat-form-field>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n        </mat-card>\\r\\n        <!-- Ejb Flat Inc All -->\\r\\n        <mat-card *ngIf=\\\"showAllIncEjbFlat\\\">\\r\\n                <div fxLayout=\\\"row wrap\\\">\\r\\n                        <div fxFlex=\\\"100\\\">\\r\\n                            <div fxFlex=\\\"40\\\">\\r\\n                                <mat-form-field appearance=\\\"outline\\\">\\r\\n                                    <mat-label>Folder Name</mat-label>\\r\\n                                    <input matInput>\\r\\n                                </mat-form-field>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n        </mat-card>\\r\\n        <!-- Db connection Inc Xml -->\\r\\n        <mat-card *ngIf=\\\"showAllIncDbXml\\\">\\r\\n                <div fxLayout=\\\"row wrap\\\">\\r\\n                        <div fxFlex=\\\"100\\\" fxLayoutGap=\\\"20\\\">\\r\\n                            <div fxFlex=\\\"50\\\">\\r\\n                                <input type=\\\"file\\\" id=\\\"chFile\\\" (change)=\\\"fileuploadHttpXMlInc($event)\\\">\\r\\n                                <button mat-raised-button type=\\\"file\\\" class=\\\"btnFile\\\" (click)=\\\"chooseFile()\\\">\\r\\n                                    <mat-icon>cloud_upload</mat-icon>&nbsp;&nbsp;File Upload\\r\\n                                </button>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                \\r\\n                    </div>\\r\\n        <div fxLayout=\\\"row wrap\\\">\\r\\n        <div fxFlex=\\\"100\\\">\\r\\n        <div fxFlex=\\\"40\\\">\\r\\n                <mat-form-field appearance=\\\"outline\\\">\\r\\n                        <mat-label>Table Name</mat-label>\\r\\n                        <input matInput name=\\\"tableName\\\"\\r\\n                        (keyup)=\\\"onsearchingTablName($event)\\\" [matAutocomplete]=\\\"autotablName\\\">\\r\\n                        <mat-autocomplete #autotablName=\\\"matAutocomplete\\\" \\r\\n                        (optionSelected)=\\\"gettingColumnNameForIncoming($event)\\\">\\r\\n                       <mat-option *ngFor=\\\"let tabname of incDbRecords\\\" [value]=\\\"tabname\\\">\\r\\n                            {{tabname}}\\r\\n                        </mat-option>\\r\\n                        </mat-autocomplete>\\r\\n                      </mat-form-field>\\r\\n        </div>\\r\\n        </div>\\r\\n        </div>\\r\\n        <!-- Columns -->\\r\\n        <div fxLayout=\\\"row wrap\\\"  *ngIf=\\\"coulmnNameBasedonTanbleName &&coulmnNameBasedonTanbleName.length\\\">\\r\\n                <div fxFlex=\\\"100\\\" *ngFor=\\\"let column of colRowForDbInc;let i=index\\\" fxLayoutGap=\\\"20px\\\">\\r\\n                    <div fxFlex=\\\"30\\\">\\r\\n                        <mat-form-field appearance=\\\"outline\\\">\\r\\n                            <mat-label>Column Name</mat-label>\\r\\n                            <mat-select>\\r\\n                                <mat-option *ngFor=\\\"let col of column\\\" [value]=\\\"col\\\">\\r\\n                                    {{col}}\\r\\n                                </mat-option>\\r\\n                            </mat-select>\\r\\n                        </mat-form-field>\\r\\n                    </div>\\r\\n                    <div fxFlex=\\\"30\\\">\\r\\n                            \\r\\n                                <mat-form-field appearance=\\\"outline\\\">\\r\\n                                    <mat-label>Data Type</mat-label>\\r\\n                                        <mat-select\\r\\n                                        name=\\\"dataType\\\"\\r\\n                                        >\\r\\n                                        \\r\\n                                         <mat-option value=\\\"numeric\\\">Numeric</mat-option>\\r\\n                                         <mat-option value=\\\"alphaNumeric\\\">Alpha Numeric</mat-option>\\r\\n                                         <mat-option value=\\\"date\\\">Date</mat-option>\\r\\n                                        \\r\\n                                     </mat-select>\\r\\n                                    </mat-form-field>\\r\\n                            \\r\\n                        </div>\\r\\n                        <div fxFlex=\\\"30\\\">\\r\\n                            <mat-form-field appearance=\\\"outline\\\">\\r\\n                                <mat-label>Default Value</mat-label>\\r\\n                                <input matInput >\\r\\n                            </mat-form-field>\\r\\n                        </div>\\r\\n                        <div fxFlex=\\\"30\\\">\\r\\n                                <button mat-raised-button (click)=\\\"deleteDbXInc(i)\\\" color=\\\"primary\\\">\\r\\n                                        <mat-icon>remove</mat-icon>\\r\\n                                    </button>\\r\\n                        </div>\\r\\n                       \\r\\n                </div>\\r\\n              <div fxFlex=\\\"100\\\">\\r\\n                    <button mat-raised-button (click)=\\\"onAddingrowsForDbInc(i)\\\" color=\\\"primary\\\">\\r\\n                            <mat-icon>add</mat-icon>\\r\\n                        </button>\\r\\n              </div>\\r\\n                      \\r\\n            </div>\\r\\n        </mat-card>\\r\\n        <!-- Db connection Inc Json -->\\r\\n        <mat-card *ngIf=\\\"showAllIncDbJson\\\">\\r\\n                <div fxLayout=\\\"row wrap\\\">\\r\\n                        <div fxFlex=\\\"100\\\">\\r\\n                        <div fxFlex=\\\"40\\\">\\r\\n                                <mat-form-field appearance=\\\"outline\\\">\\r\\n                                        <mat-label>Table Name</mat-label>\\r\\n                                        <input matInput name=\\\"tableName\\\"\\r\\n                                        (keyup)=\\\"onsearchingTablName($event)\\\" [matAutocomplete]=\\\"autotablName\\\">\\r\\n                                        <mat-autocomplete #autotablName=\\\"matAutocomplete\\\" \\r\\n                                        (optionSelected)=\\\"gettingColumnNameForIncoming($event)\\\">\\r\\n                                       <mat-option *ngFor=\\\"let tabname of incDbRecords\\\" [value]=\\\"tabname.tableName\\\">\\r\\n                                            {{tabname.tableName}}\\r\\n                                        </mat-option>\\r\\n                                        </mat-autocomplete>\\r\\n                                      </mat-form-field>\\r\\n                        </div>\\r\\n                        </div>\\r\\n                        </div>\\r\\n                        <!-- Columns -->\\r\\n                        <div fxLayout=\\\"row wrap\\\"  *ngIf=\\\"coulmnNameBasedonTanbleName &&coulmnNameBasedonTanbleName.length\\\">\\r\\n                                <div fxFlex=\\\"100\\\" *ngFor=\\\"let column of coulmnNameBasedonTanbleName;let i=index\\\" fxLayoutGap=\\\"20px\\\">\\r\\n                                    <div fxFlex=\\\"30\\\">\\r\\n                                        <mat-form-field appearance=\\\"outline\\\">\\r\\n                                            <mat-label>Column Name</mat-label>\\r\\n                                            <mat-select>\\r\\n                                                <mat-option *ngFor=\\\"let col of column\\\" [value]=\\\"col\\\">\\r\\n                                                    {{col}}\\r\\n                                                </mat-option>\\r\\n                                            </mat-select>\\r\\n                                        </mat-form-field>\\r\\n                                    </div>\\r\\n                                    <div fxFlex=\\\"30\\\">\\r\\n                                            \\r\\n                                                <mat-form-field appearance=\\\"outline\\\">\\r\\n                                                    <mat-label>Data Type</mat-label>\\r\\n                                                        <mat-select\\r\\n                                                        name=\\\"dataType\\\"\\r\\n                                                        >\\r\\n                                                        \\r\\n                                                         <mat-option value=\\\"numeric\\\">Numeric</mat-option>\\r\\n                                                         <mat-option value=\\\"alphaNumeric\\\">Alpha Numeric</mat-option>\\r\\n                                                         <mat-option value=\\\"date\\\">Date</mat-option>\\r\\n                                                        \\r\\n                                                     </mat-select>\\r\\n                                                    </mat-form-field>\\r\\n                                            \\r\\n                                        </div>\\r\\n                                        <div fxFlex=\\\"30\\\">\\r\\n                                            <mat-form-field appearance=\\\"outline\\\">\\r\\n                                                <mat-label>Default Value</mat-label>\\r\\n                                                <input matInput >\\r\\n                                            </mat-form-field>\\r\\n                                        </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n        </mat-card>\\r\\n        <!-- Db connection Inc csv -->\\r\\n        <mat-card *ngIf=\\\"showAllIncDbCsv\\\">\\r\\n                <div fxLayout=\\\"row wrap\\\">\\r\\n                        <div fxFlex=\\\"100\\\">\\r\\n                            <div fxFlex=\\\"40\\\">\\r\\n                                <mat-form-field appearance=\\\"outline\\\">\\r\\n                                    <mat-label>Folder Name</mat-label>\\r\\n                                    <input matInput>\\r\\n                                </mat-form-field>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n        </mat-card>\\r\\n        <!-- Db connection Inc Flat -->\\r\\n        <mat-card *ngIf=\\\"showAllIncDbFalt\\\">\\r\\n                <div fxLayout=\\\"row wrap\\\">\\r\\n                        <div fxFlex=\\\"100\\\">\\r\\n                            <div fxFlex=\\\"40\\\">\\r\\n                                <mat-form-field appearance=\\\"outline\\\">\\r\\n                                    <mat-label>Folder Name</mat-label>\\r\\n                                    <input matInput>\\r\\n                                </mat-form-field>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n        </mat-card>\\r\\n    </mat-tab>\\r\\n    <mat-tab label=\\\"Outgoing\\\">\\r\\n        <mat-card *ngIf=\\\"showAllProtocolOut\\\">\\r\\n            <h5>OutGoing Message Header Configuration({{protocoloutGoing}}&nbsp;{{dataTypeOutgoing}} )</h5>\\r\\n            <div fxLayout=\\\"row wrap\\\" *ngFor=\\\"let protocolOut of outgoingIntegrationProtocol\\\">\\r\\n\\r\\n                <div fxFlex=\\\"100\\\">\\r\\n                    <div fxFlex=\\\"20\\\"></div>\\r\\n                    <div fxFlex=\\\"50\\\">\\r\\n                        <mat-form-field appearance=\\\"outline\\\">\\r\\n                            <mat-select #protocolRef [(ngModel)]=\\\"protocolOut.typeOfProtocol\\\"\\r\\n                                (selectionChange)=\\\"onOutgoingProtocolSelction($event.value)\\\">\\r\\n                                <mat-option>Please select</mat-option>\\r\\n                                <mat-option value=\\\"TCP/IP\\\">TCP/IP</mat-option>\\r\\n                                <mat-option value=\\\"Https/Http\\\">Https/Http\\r\\n                                </mat-option>\\r\\n                                <mat-option value=\\\"MDB\\\">MDB</mat-option>\\r\\n                                <mat-option value=\\\"EJB\\\">EJB</mat-option>\\r\\n                                <mat-option value=\\\"DB Connection\\\">DB Connection\\r\\n                                </mat-option>\\r\\n\\r\\n                            </mat-select>\\r\\n                        </mat-form-field>\\r\\n                    </div>\\r\\n\\r\\n                </div>\\r\\n\\r\\n                <div fxFlex=\\\"100\\\">\\r\\n                    <div fxFlex=\\\"20\\\"></div>\\r\\n                    <div fxFlex=\\\"50\\\">\\r\\n                        <mat-form-field appearance=\\\"outline\\\">\\r\\n                            <mat-select [(ngModel)]=\\\"protocolOut.dataType\\\"\\r\\n                                (selectionChange)=\\\"onDataTypeOFOutgoingProtocol($event.value)\\\">\\r\\n                                <mat-option *ngFor=\\\"let data of dataTypeForOutGoing\\\" [value]=\\\"data\\\">{{data}}\\r\\n                                </mat-option>\\r\\n                            </mat-select>\\r\\n                        </mat-form-field>\\r\\n                    </div>\\r\\n\\r\\n                </div>\\r\\n                <div fxFlex=\\\"100\\\" fxLayoutGap=\\\"10px\\\" *ngIf=\\\"protocolOut.typeOfProtocol=='MDB'\\\">\\r\\n                        <div fxFlex=\\\"25\\\">\\r\\n                                <mat-form-field appearance=\\\"outline\\\">\\r\\n                                        <mat-label>Type of Queue</mat-label>\\r\\n                                      <mat-select (selectionChange)=\\\"onMdbQueueOut($event)\\\">\\r\\n                                          <mat-option *ngFor=\\\"let queue of mdbQueueInc\\\" [value]=\\\"queue\\\">{{queue}}</mat-option>\\r\\n                                      </mat-select>\\r\\n                                     </mat-form-field>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div fxFlex=\\\"100\\\" fxLayoutGap=\\\"20px\\\" *ngIf=\\\"showjsmQueueOut\\\">                    \\r\\n                            <div fxFlex=\\\"20\\\" >\\r\\n                                    <mat-form-field appearance=\\\"outline\\\">\\r\\n                                       <mat-label>Queue Manager</mat-label>\\r\\n                                       <input matInput name=\\\"queueManager\\\" >\\r\\n                                    </mat-form-field>\\r\\n                                </div>\\r\\n                                <div fxFlex=\\\"20\\\" >\\r\\n                                        <mat-form-field appearance=\\\"outline\\\">\\r\\n                                           <mat-label>Queue Name</mat-label>\\r\\n                                           <input matInput >\\r\\n                                        </mat-form-field>\\r\\n                                    </div>\\r\\n                                    <div fxFlex=\\\"20\\\" >\\r\\n                                            <mat-form-field appearance=\\\"outline\\\">\\r\\n                                               <mat-label>Channel</mat-label>\\r\\n                                               <input matInput>\\r\\n                                            </mat-form-field>\\r\\n                                            \\r\\n                                        </div>\\r\\n                           \\r\\n                                \\r\\n                           \\r\\n                     </div>\\r\\n                     <div fxFlex=\\\"100\\\" fxLayoutGap=\\\"20px\\\"  *ngIf=\\\"showibmQueueOut\\\" >\\r\\n                            <div fxFlex=\\\"20\\\" fxLayoutGap=\\\"20px\\\">\\r\\n                                <mat-form-field appearance=\\\"outline\\\">\\r\\n                                   <mat-label>Queue Manager</mat-label>\\r\\n                                   <input matInput name=\\\"queueManager\\\" >\\r\\n                                    \\r\\n                                </mat-form-field>\\r\\n                            </div>\\r\\n                            <div fxFlex=\\\"20\\\" fxLayoutGap=\\\"20px\\\">\\r\\n                                    <mat-form-field appearance=\\\"outline\\\">\\r\\n                                       <mat-label>Queue Name</mat-label>\\r\\n                                       <input matInput name=\\\"queueName\\\"  >\\r\\n                                        \\r\\n                                    </mat-form-field>\\r\\n                                </div>         \\r\\n                                <div fxFlex=\\\"20\\\" fxLayoutGap=\\\"20px\\\">\\r\\n                                        <mat-form-field appearance=\\\"outline\\\">\\r\\n                                           <mat-label>Connecting Factory</mat-label>\\r\\n                                           <input matInput name=\\\"connectingFactory\\\">\\r\\n                                            \\r\\n                                        </mat-form-field>\\r\\n                                    </div>\\r\\n                           \\r\\n                            </div>\\r\\n                            <div fxFlex=\\\"100\\\" fxLayoutGap=\\\"10px\\\" *ngIf=\\\"protocolOut.typeOfProtocol=='DB Connection'\\\">\\r\\n                                    <div fxFlex=\\\"25\\\">\\r\\n                                        <mat-form-field appearance=\\\"outline\\\">\\r\\n                                            <mat-label>User Name</mat-label>\\r\\n                                            <input matInput name=\\\"userName\\\" #userName [(ngModel)]=\\\"incDbData.userName\\\">\\r\\n                                        </mat-form-field>\\r\\n                                    </div>\\r\\n                                    <div fxFlex=\\\"25\\\">\\r\\n                                            <mat-form-field appearance=\\\"outline\\\">\\r\\n                                                    <mat-label>Passowrd</mat-label>\\r\\n                                                    <input matInput name=\\\"password\\\" #password type=\\\"password\\\" [(ngModel)]=\\\"incDbData.password\\\">\\r\\n                                                     \\r\\n                                                 </mat-form-field>\\r\\n                                    </div>\\r\\n                                    <div fxFlex=\\\"25\\\">\\r\\n                                            <mat-form-field appearance=\\\"outline\\\">\\r\\n                                                    <mat-label>Data Base Name</mat-label>\\r\\n                                                    <input matInput name=\\\"DBname\\\" #dbName [(ngModel)]=\\\"incDbData.dataBaseName\\\"> \\r\\n                                                 </mat-form-field>\\r\\n                                    </div>\\r\\n                                    <div fxFlex=\\\"25\\\">\\r\\n                                            <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"outline\\\">\\r\\n                                                    <mat-label>Connecting String</mat-label>\\r\\n                                                    <textarea matInput [(ngModel)]=\\\"incDbData.connectiongstring\\\" name=\\\"connectingString\\\" #connectingSgtring></textarea>\\r\\n                                                  </mat-form-field>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                <div fxFlex=\\\"100\\\">\\r\\n                    <div fxFlex=\\\"50\\\" fxLayoutGap=\\\"20px\\\">\\r\\n                        <button mat-raised-button (click)=\\\"nextOfAllout(protocolOut)\\\" color=\\\"primary\\\">Next</button>\\r\\n                        <!-- <button mat-raised-button (click)=\\\"previousOfOutgoing()\\\" color=\\\"accent\\\">Previous</button> -->\\r\\n                        <button mat-raised-button (click)=\\\"previousStep()\\\" *ngIf=\\\"createExtSys1.openToMessage=='All' \\\" color=\\\"accent\\\">Back</button>\\r\\n                        <button mat-raised-button (click)=\\\"onResetingOutgoing(protocolOut)\\\" color=\\\"warn\\\">Reset</button>\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n            </div>\\r\\n        </mat-card>\\r\\n        <!-- All out Tcp -->\\r\\n        <mat-card *ngIf=\\\"showAllTcpOut\\\">\\r\\n            <div fxLayout=\\\"row wrap\\\" *ngFor=\\\"let outTcp of outgoingMessageConfigurationTcp; let i = index;\\\">\\r\\n                <div fxFlex=\\\"100\\\" fxLayoutGap=\\\"20px\\\">\\r\\n                    <div fxFlex=\\\"20\\\">\\r\\n                        <mat-form-field appearance=\\\"outline\\\">\\r\\n                            <mat-label>Field No</mat-label>\\r\\n\\r\\n                            <input matInput name=\\\"fieldNo\\\" #fieldNo fieldNo=\\\"ngModel\\\" [(ngModel)]=\\\"outTcp.fieldNo\\\">\\r\\n                        </mat-form-field>\\r\\n                    </div>\\r\\n                    <div fxFlex=\\\"20\\\">\\r\\n                        <mat-form-field appearance=\\\"outline\\\">\\r\\n                            <mat-label>Field Name</mat-label>\\r\\n                            <input matInput name=\\\"fieldName\\\" #fieldName fieldName=\\\"ngModel\\\"\\r\\n                                [(ngModel)]=\\\"outTcp.fieldName\\\">\\r\\n                        </mat-form-field>\\r\\n                    </div>\\r\\n                    <div fxFlex=\\\"20\\\">\\r\\n                        <mat-form-field appearance=\\\"outline\\\">\\r\\n                            <mat-label>Data Type</mat-label>\\r\\n                            <mat-select name=\\\"dataType\\\" #dataType dataType=\\\"ngModel\\\" [(ngModel)]=\\\"outTcp.dataType\\\">\\r\\n\\r\\n                                <mat-option value=\\\"numeric\\\">Numeric</mat-option>\\r\\n                                <mat-option value=\\\"alphaNumeric\\\">Alpha Numeric</mat-option>\\r\\n                                <mat-option value=\\\"date\\\">Date</mat-option>\\r\\n\\r\\n                            </mat-select>\\r\\n\\r\\n\\r\\n                        </mat-form-field>\\r\\n\\r\\n                    </div>\\r\\n                    <div fxFlex=\\\"20\\\">\\r\\n                        <mat-form-field appearance=\\\"outline\\\">\\r\\n                            <mat-label>Default Value</mat-label>\\r\\n                            <input matInput name=\\\"type\\\" #fieldDefault fieldDefault=\\\"ngModel\\\"\\r\\n                                [(ngModel)]=\\\"outTcp.fieldDefault\\\">\\r\\n                        </mat-form-field>\\r\\n                    </div>\\r\\n                    <div fxFlex=\\\"20\\\">\\r\\n                        <button mat-raised-button (click)=\\\"deleteOutgoingTcp(i)\\\" color=\\\"primary\\\">\\r\\n                            <mat-icon>delete</mat-icon>\\r\\n                        </button>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div fxLayout=\\\"row wrap\\\">\\r\\n                <div fxFlex=\\\"100\\\">\\r\\n                    <div fxFlex=\\\"30\\\">\\r\\n                        <button mat-raised-button (click)=\\\"addoutgoingTCP()\\\" color=\\\"primary\\\">\\r\\n                            <mat-icon>add</mat-icon>\\r\\n                        </button>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </mat-card>\\r\\n        <!-- All out http xml -->\\r\\n        <mat-card *ngIf=\\\"showAllHttpXmlOut\\\">\\r\\n                <div fxLayout=\\\"row wrap\\\">\\r\\n                        <div fxFlex=\\\"100\\\" fxLayoutGap=\\\"20\\\">\\r\\n                            <div fxFlex=\\\"50\\\">\\r\\n                                <input type=\\\"file\\\" id=\\\"chFile\\\" (change)=\\\"fileuploadHttpXMlInc($event)\\\">\\r\\n                                <button mat-raised-button type=\\\"file\\\" class=\\\"btnFile\\\" (click)=\\\"chooseFile()\\\">\\r\\n                                    <mat-icon>cloud_upload</mat-icon>&nbsp;&nbsp;File Upload\\r\\n                                </button>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div fxLayout=\\\"row wrap\\\" *ngFor=\\\"let outxmlHttp of outHttpXml\\\">\\r\\n                        <div fxFlex=\\\"100\\\" fxLayoutGap=\\\"10px\\\">\\r\\n                            <div fxFlex=\\\"20\\\">\\r\\n                                    <mat-form-field appearance=\\\"outline\\\">\\r\\n                                            <mat-label>Node</mat-label>\\r\\n                                            <input matInput name=\\\"node\\\" #node #node=\\\"ngModel\\\"[(ngModel)]=\\\"outxmlHttp.node\\\">\\r\\n                                        </mat-form-field>\\r\\n        \\r\\n                            </div>\\r\\n                            <div fxFlex=\\\"20\\\">\\r\\n                                    <mat-form-field appearance=\\\"outline\\\">\\r\\n                                            <mat-label>Tag Name</mat-label>\\r\\n                                            <input matInput name=\\\"tagName\\\"#tagName #tagName=\\\"ngModel\\\"[(ngModel)]=\\\"outxmlHttp.tagName\\\">\\r\\n                                        </mat-form-field>\\r\\n                            </div>\\r\\n                            <div fxFlex=\\\"20\\\">\\r\\n                                    <mat-form-field appearance=\\\"outline\\\">\\r\\n                                            <mat-label>Data Type</mat-label>\\r\\n                                            <mat-select \\r\\n                                            name=\\\"dataType\\\" #dataType #dataType=\\\"ngModel\\\"[(ngModel)]=\\\"outxmlHttp.dataType\\\"\\r\\n                                           >\\r\\n                                            <mat-option value=\\\"numeric\\\">Numeric</mat-option>\\r\\n                                            <mat-option value=\\\"alphaNumeric\\\">Alpha Numeric</mat-option>\\r\\n                                            <mat-option value=\\\"date\\\">Date</mat-option>    \\r\\n                                        </mat-select>\\r\\n                                        </mat-form-field>\\r\\n                            </div>\\r\\n                            <div fxFlex=\\\"20\\\">\\r\\n                                    <mat-form-field appearance=\\\"outline\\\">  \\r\\n                                            <mat-label>Default Value</mat-label>\\r\\n                                            <input matInput name=\\\"defaultValue\\\" #defaultValue #defaultValue=\\\"ngModel\\\"[(ngModel)]=\\\"outxmlHttp.defaultValue\\\">\\r\\n                                        </mat-form-field>\\r\\n                            </div>\\r\\n                            <div fxFlex=\\\"10\\\">\\r\\n                                \\r\\n                                <button mat-raised-button (click)=\\\"deleteIncHttpXml(i)\\\" color=\\\"primary\\\">\\r\\n                                        <mat-icon>delete</mat-icon>\\r\\n                                    </button>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div fxLayout=\\\"row wrap\\\">\\r\\n                        <div fxFlex=\\\"10\\\">\\r\\n                        <button mat-raised-button (click)=\\\"addIncHttpXMl()\\\" color=\\\"primary\\\">\\r\\n                                <mat-icon>add</mat-icon>\\r\\n                            </button>\\r\\n                            </div>\\r\\n                    </div>\\r\\n        </mat-card>\\r\\n        <!-- All out http json -->\\r\\n        <mat-card *ngIf=\\\"showAllHttpJsonOut\\\">\\r\\n                <div fxLayout=\\\"row wrap\\\">\\r\\n                        <div fxFlex=\\\"100\\\" fxLayoutGap=\\\"20px\\\" *ngFor=\\\"let outgoingHttpJSon of outHttpJson; let i = index;\\\">\\r\\n                                             \\r\\n                            <div fxFlex=\\\"20\\\">\\r\\n                                <mat-form-field appearance=\\\"outline\\\">\\r\\n                                   <mat-label>key</mat-label>\\r\\n                                  \\r\\n                                    <input matInput #key #key=\\\"ngModel\\\" name=\\\"key\\\" [(ngModel)]=\\\"outgoingHttpJSon.key\\\">\\r\\n                                </mat-form-field>\\r\\n                            </div>\\r\\n                         \\r\\n                                <div fxFlex=\\\"20\\\">\\r\\n                                        <mat-form-field appearance=\\\"outline\\\">\\r\\n                                                <mat-label>Data Type</mat-label>\\r\\n                                                <mat-select\\r\\n                                                #dataType #dataType=\\\"ngModel\\\" name=\\\"dataType\\\" [(ngModel)]=\\\"outgoingHttpJSon.dataType\\\"\\r\\n                                                >\\r\\n                                                \\r\\n                                                 <mat-option value=\\\"numeric\\\">Numeric</mat-option>\\r\\n                                                 <mat-option value=\\\"alphaNumeric\\\">Alpha Numeric</mat-option>\\r\\n                                                 <mat-option value=\\\"date\\\">Date</mat-option>\\r\\n                                                \\r\\n                                             </mat-select>\\r\\n                                                 \\r\\n                                             </mat-form-field>\\r\\n                                    </div>\\r\\n                                    <div fxFlex=\\\"20\\\">\\r\\n                                          <mat-form-field appearance=\\\"outline\\\">\\r\\n                                             <mat-label>Default Value</mat-label>\\r\\n                                            \\r\\n                                              <input matInput #defaultValue #defaultValue=\\\"ngModel\\\" name=\\\"defaultValue\\\" [(ngModel)]=\\\"outgoingHttpJSon.defaultValue\\\">\\r\\n                                          </mat-form-field>\\r\\n                                      </div>\\r\\n                                    \\r\\n                                        <div fxFlex=\\\"20\\\">\\r\\n                                               <button mat-raised-button (click)=\\\"deleteOutHttpJson(i)\\\" color=\\\"primary\\\"><mat-icon>delete</mat-icon></button>\\r\\n                                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div fxLayout=\\\"row wrap\\\">\\r\\n                        <div fxFlex=\\\"100\\\">\\r\\n                                <button mat-raised-button (click)=\\\"addOutHttpJosn()\\\" color=\\\"primary\\\">\\r\\n                                        <mat-icon>add</mat-icon>\\r\\n                                    </button>\\r\\n                        </div>\\r\\n                    </div>\\r\\n        </mat-card>\\r\\n        <!-- All Mdb XMl out -->\\r\\n        <mat-card *ngIf=\\\"showAllMdbXmlOut\\\">\\r\\n                <div fxLayout=\\\"row wrap\\\">\\r\\n                        <div fxFlex=\\\"100\\\" fxLayoutGap=\\\"20\\\">\\r\\n                            <div fxFlex=\\\"50\\\">\\r\\n                                <input type=\\\"file\\\" id=\\\"chFile\\\" (change)=\\\"fileuploadHttpXMlInc($event)\\\">\\r\\n                                <button mat-raised-button type=\\\"file\\\" class=\\\"btnFile\\\" (click)=\\\"chooseFile()\\\">\\r\\n                                    <mat-icon>cloud_upload</mat-icon>&nbsp;&nbsp;File Upload\\r\\n                                </button>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div fxLayout=\\\"row wrap\\\" >\\r\\n                            <div fxFlex=\\\"100\\\" *ngFor=\\\"let mdboutxml of outMdbXml;let i=index\\\" fxLayoutGap=\\\"20px\\\">\\r\\n                                <div fxFlex=\\\"20\\\">\\r\\n                                    <mat-form-field appearance=\\\"outline\\\">\\r\\n                                       <mat-label>Node</mat-label>\\r\\n                                        <input matInput #node name=\\\"node\\\" #node=\\\"ngModel\\\" [(ngModel)]=\\\"mdboutxml.node\\\">\\r\\n                                    </mat-form-field>\\r\\n                                </div>\\r\\n                                <div fxFlex=\\\"20\\\">\\r\\n                                        <mat-form-field appearance=\\\"outline\\\">\\r\\n                                                <mat-label>TagName</mat-label>\\r\\n                                                <input matInput #tagName name=\\\"tagName\\\" #tagName=\\\"ngModel\\\" [(ngModel)]=\\\"mdboutxml.tagName\\\">\\r\\n                                             </mat-form-field>\\r\\n                                    </div>\\r\\n                                    <div fxFlex=\\\"20\\\">\\r\\n                                            <mat-form-field appearance=\\\"outline\\\">\\r\\n                                                    <mat-label>Data Type</mat-label>\\r\\n                                                    <mat-select\\r\\n                                                    #dataType name=\\\"dataType\\\" #dataType=\\\"ngModel\\\" [(ngModel)]=\\\"mdboutxml.dataType\\\"\\r\\n                                                   > <mat-option value=\\\"numeric\\\">Numeric</mat-option>\\r\\n                                                    <mat-option value=\\\"alphaNumeric\\\">Alpha Numeric</mat-option>\\r\\n                                                    <mat-option value=\\\"date\\\">Date</mat-option>\\r\\n                                                </mat-select>\\r\\n                                                 </mat-form-field>\\r\\n                                    </div>\\r\\n                                    <div fxFlex=\\\"20\\\">\\r\\n                                            <mat-form-field appearance=\\\"outline\\\">\\r\\n                                                    <mat-label>Default Value</mat-label>\\r\\n                                                    <input matInput #tagDefault name=\\\"tagDefault\\\" #tagDefault=\\\"ngModel\\\" [(ngModel)]=\\\"mdboutxml.tagDefault\\\">\\r\\n                                                 </mat-form-field>\\r\\n                                    </div>\\r\\n                                    <div fxFlex=\\\"20\\\">   \\r\\n                                            <button mat-raised-button (click)=\\\"deleteoutMdbXml(i)\\\" color=\\\"primary\\\"><mat-icon>delete</mat-icon></button>\\r\\n        \\r\\n                                    </div>\\r\\n                            </div>\\r\\n                            <div fxLayout=\\\"row wrap\\\">\\r\\n                                    <div fxFlex=\\\"100\\\">\\r\\n                                        <div fxLayoutAlign=\\\"center stretch\\\">\\r\\n                                            <button mat-raised-button (click)=\\\"addoutMdbXMl()\\\" color=\\\"primary\\\"><mat-icon>add</mat-icon></button>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                        </div>\\r\\n        </mat-card>\\r\\n        <!-- All mdb json out -->\\r\\n        <mat-card *ngIf=\\\"showAllMdbJsonOut\\\">\\r\\n                <div fxLayout=\\\"row wrap\\\">\\r\\n                        <div fxFlex=\\\"100\\\" fxLayoutGap=\\\"20px\\\" *ngFor=\\\"let mdbJsonOut of outMdbJson\\\">\\r\\n                                <div fxFlex=\\\"20\\\">\\r\\n                                    <mat-form-field appearance=\\\"outline\\\">\\r\\n                                        <mat-label>key</mat-label>\\r\\n                                        <input matInput type=\\\"text\\\" name=\\\"key\\\" [(ngModel)]=\\\"mdbJsonOut.key\\\" #key #key=\\\"ngModel\\\"> \\r\\n                                    </mat-form-field>\\r\\n                                </div>\\r\\n                                <div fxFlex=\\\"20\\\">\\r\\n                                        <mat-form-field appearance=\\\"outline\\\">\\r\\n                                                <mat-label>Data Type</mat-label>\\r\\n                                                <mat-select\\r\\n                                                name=\\\"dataType\\\" [(ngModel)]=\\\"mdbJsonOut.dataType\\\" #dataType #dataType=\\\"ngModel\\\"\\r\\n                                               >\\r\\n                                               \\r\\n                                                <mat-option value=\\\"numeric\\\">Numeric</mat-option>\\r\\n                                                <mat-option value=\\\"alphaNumeric\\\">Alpha Numeric</mat-option>\\r\\n                                                <mat-option value=\\\"date\\\">Date</mat-option>\\r\\n                                               \\r\\n                                            </mat-select>\\r\\n                                             </mat-form-field>\\r\\n                                    </div>\\r\\n                                <div fxFlex=\\\"20\\\">\\r\\n                                        <mat-form-field appearance=\\\"outline\\\">\\r\\n                                            <mat-label>Default Value</mat-label>\\r\\n                                            <input matInput type=\\\"text\\\" name=\\\"defaultValue\\\" [(ngModel)]=\\\"mdbJsonOut.defaultValue\\\" #defaultValue #defaultValue=\\\"ngModel\\\"> \\r\\n                                        </mat-form-field>\\r\\n                                    </div>\\r\\n                                   \\r\\n                                        <div fxFlex=\\\"20\\\">   \\r\\n                                                <button mat-raised-button (click)=\\\"deleteMdbJsonOut(i)\\\" color=\\\"primary\\\"><mat-icon>delete</mat-icon></button>\\r\\n                \\r\\n                                        </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                            <div fxLayout=\\\"row wrap\\\">\\r\\n                                <div fxFlex=\\\"100\\\">\\r\\n                                    <div fxFlex=\\\"30\\\">\\r\\n                                            <button mat-raised-button (click)=\\\"addoutMdbJosn()\\\" color=\\\"primary\\\"><mat-icon>add</mat-icon></button>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n        </mat-card>\\r\\n        <!-- All Mdb csv out -->\\r\\n        <mat-card *ngIf=\\\"showAllMdbCsvOut\\\">\\r\\n                <div fxLayout=\\\"row wrap\\\">\\r\\n                        <div fxFlex=\\\"100\\\">\\r\\n                            <div fxFlex=\\\"40\\\">\\r\\n                                <mat-form-field appearance=\\\"outline\\\">\\r\\n                                    <mat-label>Folder Name</mat-label>\\r\\n                                    <input matInput>\\r\\n                                </mat-form-field>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n        </mat-card>\\r\\n        <!-- All mdb out excel -->\\r\\n\\r\\n        <mat-card *ngIf=\\\"showAllMdbExcelOut\\\">\\r\\n                <div fxLayout=\\\"row wrap\\\">\\r\\n                        <div fxFlex=\\\"100\\\">\\r\\n                            <div fxFlex=\\\"40\\\">\\r\\n                                <mat-form-field appearance=\\\"outline\\\">\\r\\n                                    <mat-label>Folder Name</mat-label>\\r\\n                                    <input matInput>\\r\\n                                </mat-form-field>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n        </mat-card>\\r\\n        <!-- All ejb out Excel -->\\r\\n        <mat-card *ngIf=\\\"showAllEjbExcelOut\\\">\\r\\n                <div fxLayout=\\\"row wrap\\\">\\r\\n                        <div fxFlex=\\\"100\\\">\\r\\n                            <div fxFlex=\\\"40\\\">\\r\\n                                <mat-form-field appearance=\\\"outline\\\">\\r\\n                                    <mat-label>Folder Name</mat-label>\\r\\n                                    <input matInput>\\r\\n                                </mat-form-field>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n        </mat-card>\\r\\n        <!-- All ejb XMl out -->\\r\\n        <mat-card *ngIf=\\\"showAllEjbXmlOut\\\">\\r\\n                <div fxLayout=\\\"row wrap\\\">\\r\\n                        <div fxFlex=\\\"100\\\" fxLayoutGap=\\\"20\\\">\\r\\n                                <div fxFlex=\\\"50\\\">\\r\\n                                    <input type=\\\"file\\\" id=\\\"chFile\\\" (change)=\\\"fileuploadHttpXMlInc($event)\\\">\\r\\n                                    <button mat-raised-button type=\\\"file\\\" class=\\\"btnFile\\\" (click)=\\\"chooseFile()\\\">\\r\\n                                        <mat-icon>cloud_upload</mat-icon>&nbsp;&nbsp;File Upload\\r\\n                                    </button>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                            <div fxLayout=\\\"row wrap\\\" >\\r\\n                                    <div fxFlex=\\\"100\\\" *ngFor=\\\"let ejboutxml of outEjbXml;let i=index\\\" fxLayoutGap=\\\"20px\\\">\\r\\n                                            <div fxFlex=\\\"20\\\">\\r\\n                                                    <mat-form-field appearance=\\\"outline\\\">\\r\\n                                                       <mat-label>Node</mat-label>\\r\\n                                                       <input matInput name=\\\"node\\\" #node node=\\\"ngModel\\\" [(ngModel)]=\\\"ejboutxml.node\\\">\\r\\n                                                        \\r\\n                                                    </mat-form-field>\\r\\n                                                </div>\\r\\n                                                <div fxFlex=\\\"20\\\">\\r\\n                                                        <mat-form-field appearance=\\\"outline\\\">\\r\\n                                                           <mat-label>Tag Name</mat-label>\\r\\n                                                           <input matInput name=\\\"tagName\\\" #tagName tagName=\\\"ngModel\\\" [(ngModel)]=\\\"ejboutxml.tagName\\\">\\r\\n                                                            \\r\\n                                                        </mat-form-field>\\r\\n                                                    </div>\\r\\n                                                <div fxFlex=\\\"20\\\">\\r\\n                                                        <mat-form-field appearance=\\\"outline\\\">\\r\\n                                                             <mat-label>Data Type</mat-label>\\r\\n                                                             <mat-select\\r\\n                                                             name=\\\"node\\\" #dataType dataType=\\\"ngModel\\\" [(ngModel)]=\\\"ejboutxml.dataType\\\"\\r\\n                                                            >\\r\\n                                                            \\r\\n                                                             <mat-option value=\\\"numeric\\\">Numeric</mat-option>\\r\\n                                                             <mat-option value=\\\"alphaNumeric\\\">Alpha Numeric</mat-option>\\r\\n                                                             <mat-option value=\\\"date\\\">Date</mat-option>\\r\\n                                                            \\r\\n                                                         </mat-select>\\r\\n                                                        </mat-form-field>\\r\\n                                                     </div>\\r\\n                                                        <div fxFlex=\\\"20\\\">\\r\\n                                                                <mat-form-field appearance=\\\"outline\\\">\\r\\n                                                                   <mat-label>Default Value</mat-label>\\r\\n                                                                   <input matInput name=\\\"tagvalue\\\" #tagvalue tagvalue=\\\"ngModel\\\" [(ngModel)]=\\\"ejboutxml.tagvalue\\\">\\r\\n                                                                    \\r\\n                                                                </mat-form-field>\\r\\n                                                            </div>\\r\\n                                                            \\r\\n                                            <div fxFlex=\\\"20\\\">   \\r\\n                                                    <button mat-raised-button (click)=\\\"deleteOutEjbXml(i)\\\" color=\\\"primary\\\"><mat-icon>delete</mat-icon></button>\\r\\n                \\r\\n                                            </div>\\r\\n                                    </div>\\r\\n                                    \\r\\n                                </div>\\r\\n                                <div fxLayout=\\\"row wrap\\\">\\r\\n                                        <div fxFlex=\\\"100\\\">\\r\\n                                            <div fxFlex=\\\"30\\\">\\r\\n                                                <button mat-raised-button (click)=\\\"addoutEjbXml()\\\" color=\\\"primary\\\"><mat-icon>add</mat-icon></button>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n        </mat-card>\\r\\n        <!-- All ejb out json -->\\r\\n        <mat-card *ngIf=\\\"showAllEjbJsonOut\\\">\\r\\n                <div fxLayout=\\\"row wrap\\\">\\r\\n                        <div fxFlex=\\\"100\\\" fxLayoutGap=\\\"20px\\\" *ngFor=\\\"let ejboutjosn of outEjbJson\\\">\\r\\n                            <div fxFlex=\\\"20\\\">\\r\\n                                <mat-form-field appearance=\\\"outline\\\">\\r\\n                                    <mat-label>key</mat-label>\\r\\n                                    <input matInput type=\\\"text\\\" name=\\\"key\\\" [(ngModel)]=\\\"ejboutjosn.key\\\" #key #key=\\\"ngModel\\\"> \\r\\n                                </mat-form-field>\\r\\n                            </div>\\r\\n                            <div fxFlex=\\\"20\\\">\\r\\n                                    <mat-form-field appearance=\\\"outline\\\">\\r\\n                                        <mat-label>Default Value</mat-label>\\r\\n                                        <input matInput type=\\\"text\\\" name=\\\"defaultValue\\\" [(ngModel)]=\\\"ejboutjosn.defaultValue\\\" #defaultValue #node=\\\"ngModel\\\"> \\r\\n                                    </mat-form-field>\\r\\n                                </div>\\r\\n                                <div fxFlex=\\\"20\\\">\\r\\n                                        <mat-form-field appearance=\\\"outline\\\">\\r\\n                                                <mat-label>Data Type</mat-label>\\r\\n                                                <mat-select\\r\\n                    \\r\\n                                               >\\r\\n                                               \\r\\n                                                <mat-option value=\\\"numeric\\\">Numeric</mat-option>\\r\\n                                                <mat-option value=\\\"alphaNumeric\\\">Alpha Numeric</mat-option>\\r\\n                                                <mat-option value=\\\"date\\\">Date</mat-option>\\r\\n                                               \\r\\n                                            </mat-select>\\r\\n                                                <!-- <input matInput name=\\\"type\\\" #type type=\\\"ngModel\\\" [(ngModel)]=\\\"incomingTCP.type\\\"> -->\\r\\n            \\r\\n                                             </mat-form-field>\\r\\n                                    </div>\\r\\n                                    <div fxFlex=\\\"20\\\">   \\r\\n                                            <button mat-raised-button (click)=\\\"deleteEjbJsonOut(i)\\\" color=\\\"primary\\\"><mat-icon>delete</mat-icon></button>\\r\\n        \\r\\n                                    </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div fxLayout=\\\"row wrap\\\">\\r\\n                            <div fxFlex=\\\"100\\\">\\r\\n                                <div >\\r\\n                                    <button mat-raised-button (click)=\\\"addEjbJsonOut()\\\" color=\\\"primary\\\"><mat-icon>add</mat-icon></button>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n        </mat-card>\\r\\n        <!-- All Ejb flat out -->\\r\\n        <mat-card *ngIf=\\\"showAllEjbFlatOut\\\">\\r\\n                <div fxLayout=\\\"row wrap\\\">\\r\\n                        <div fxFlex=\\\"100\\\">\\r\\n                            <div fxFlex=\\\"40\\\">\\r\\n                                <mat-form-field appearance=\\\"outline\\\">\\r\\n                                    <mat-label>Folder Name</mat-label>\\r\\n                                    <input matInput>\\r\\n                                </mat-form-field>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n        </mat-card>\\r\\n        <!-- All Db out XMl -->\\r\\n        <mat-card *ngIf=\\\"showAllDbXmlOut\\\">\\r\\n                <div fxLayout=\\\"row wrap\\\">\\r\\n                        <div fxFlex=\\\"100\\\" fxLayoutGap=\\\"20\\\">\\r\\n                            <div fxFlex=\\\"50\\\">\\r\\n                                <input type=\\\"file\\\" id=\\\"chFile\\\" (change)=\\\"fileuploadHttpXMlInc($event)\\\">\\r\\n                                <button mat-raised-button type=\\\"file\\\" class=\\\"btnFile\\\" (click)=\\\"chooseFile()\\\">\\r\\n                                    <mat-icon>cloud_upload</mat-icon>&nbsp;&nbsp;File Upload\\r\\n                                </button>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                \\r\\n                    </div>\\r\\n        <div fxLayout=\\\"row wrap\\\">\\r\\n        <div fxFlex=\\\"100\\\">\\r\\n        <div fxFlex=\\\"40\\\">\\r\\n                <mat-form-field appearance=\\\"outline\\\">\\r\\n                        <mat-label>Table Name</mat-label>\\r\\n                        <input matInput name=\\\"tableName\\\"\\r\\n                        (keyup)=\\\"onsearchingTablName($event)\\\" [matAutocomplete]=\\\"autotablName\\\">\\r\\n                        <mat-autocomplete #autotablName=\\\"matAutocomplete\\\" \\r\\n                        (optionSelected)=\\\"gettingColumnNameForIncoming($event)\\\">\\r\\n                       <mat-option *ngFor=\\\"let tabname of incDbRecords\\\" [value]=\\\"tabname\\\">\\r\\n                            {{tabname}}\\r\\n                        </mat-option>\\r\\n                        </mat-autocomplete>\\r\\n                      </mat-form-field>\\r\\n        </div>\\r\\n        </div>\\r\\n        </div>\\r\\n        <!-- Columns -->\\r\\n        <div fxLayout=\\\"row wrap\\\"  *ngIf=\\\"coulmnNameBasedonTanbleName &&coulmnNameBasedonTanbleName.length\\\">\\r\\n                <div fxFlex=\\\"100\\\" *ngFor=\\\"let column of colRowForDbInc;let i=index\\\" fxLayoutGap=\\\"20px\\\">\\r\\n                    <div fxFlex=\\\"30\\\">\\r\\n                        <mat-form-field appearance=\\\"outline\\\">\\r\\n                            <mat-label>Column Name</mat-label>\\r\\n                            <mat-select>\\r\\n                                <mat-option *ngFor=\\\"let col of column\\\" [value]=\\\"col\\\">\\r\\n                                    {{col}}\\r\\n                                </mat-option>\\r\\n                            </mat-select>\\r\\n                        </mat-form-field>\\r\\n                    </div>\\r\\n                    <div fxFlex=\\\"30\\\">\\r\\n                            \\r\\n                                <mat-form-field appearance=\\\"outline\\\">\\r\\n                                    <mat-label>Data Type</mat-label>\\r\\n                                        <mat-select\\r\\n                                        name=\\\"dataType\\\"\\r\\n                                        >\\r\\n                                        \\r\\n                                         <mat-option value=\\\"numeric\\\">Numeric</mat-option>\\r\\n                                         <mat-option value=\\\"alphaNumeric\\\">Alpha Numeric</mat-option>\\r\\n                                         <mat-option value=\\\"date\\\">Date</mat-option>\\r\\n                                        \\r\\n                                     </mat-select>\\r\\n                                    </mat-form-field>\\r\\n                            \\r\\n                        </div>\\r\\n                        <div fxFlex=\\\"30\\\">\\r\\n                            <mat-form-field appearance=\\\"outline\\\">\\r\\n                                <mat-label>Default Value</mat-label>\\r\\n                                <input matInput >\\r\\n                            </mat-form-field>\\r\\n                        </div>\\r\\n                        <div fxFlex=\\\"30\\\">\\r\\n                                <button mat-raised-button (click)=\\\"deleteDbXInc(i)\\\" color=\\\"primary\\\">\\r\\n                                        <mat-icon>remove</mat-icon>\\r\\n                                    </button>\\r\\n                        </div>\\r\\n                       \\r\\n                </div>\\r\\n              <div fxFlex=\\\"100\\\">\\r\\n                    <button mat-raised-button (click)=\\\"onAddingrowsForDbInc(i)\\\" color=\\\"primary\\\">\\r\\n                            <mat-icon>add</mat-icon>\\r\\n                        </button>\\r\\n              </div>\\r\\n                      \\r\\n            </div>\\r\\n        </mat-card>\\r\\n        <!-- All db out json -->\\r\\n        <mat-card *ngIf=\\\"showAllDbJsonOut\\\">\\r\\n                <div fxLayout=\\\"row wrap\\\">\\r\\n                        <div fxFlex=\\\"100\\\">\\r\\n                        <div fxFlex=\\\"40\\\">\\r\\n                                <mat-form-field appearance=\\\"outline\\\">\\r\\n                                        <mat-label>Table Name</mat-label>\\r\\n                                        <input matInput name=\\\"tableName\\\"\\r\\n                                        (keyup)=\\\"onsearchingTablName($event)\\\" [matAutocomplete]=\\\"autotablName\\\">\\r\\n                                        <mat-autocomplete #autotablName=\\\"matAutocomplete\\\" \\r\\n                                        (optionSelected)=\\\"gettingColumnNameForIncoming($event)\\\">\\r\\n                                       <mat-option *ngFor=\\\"let tabname of incDbRecords\\\" [value]=\\\"tabname.tableName\\\">\\r\\n                                            {{tabname.tableName}}\\r\\n                                        </mat-option>\\r\\n                                        </mat-autocomplete>\\r\\n                                      </mat-form-field>\\r\\n                        </div>\\r\\n                        </div>\\r\\n                        </div>\\r\\n                        <!-- Columns -->\\r\\n                        <div fxLayout=\\\"row wrap\\\"  *ngIf=\\\"coulmnNameBasedonTanbleName &&coulmnNameBasedonTanbleName.length\\\">\\r\\n                                <div fxFlex=\\\"100\\\" *ngFor=\\\"let column of coulmnNameBasedonTanbleName;let i=index\\\" fxLayoutGap=\\\"20px\\\">\\r\\n                                    <div fxFlex=\\\"30\\\">\\r\\n                                        <mat-form-field appearance=\\\"outline\\\">\\r\\n                                            <mat-label>Column Name</mat-label>\\r\\n                                            <mat-select>\\r\\n                                                <mat-option *ngFor=\\\"let col of column\\\" [value]=\\\"col\\\">\\r\\n                                                    {{col}}\\r\\n                                                </mat-option>\\r\\n                                            </mat-select>\\r\\n                                        </mat-form-field>\\r\\n                                    </div>\\r\\n                                    <div fxFlex=\\\"30\\\">\\r\\n                                            \\r\\n                                                <mat-form-field appearance=\\\"outline\\\">\\r\\n                                                    <mat-label>Data Type</mat-label>\\r\\n                                                        <mat-select\\r\\n                                                        name=\\\"dataType\\\"\\r\\n                                                        >\\r\\n                                                        \\r\\n                                                         <mat-option value=\\\"numeric\\\">Numeric</mat-option>\\r\\n                                                         <mat-option value=\\\"alphaNumeric\\\">Alpha Numeric</mat-option>\\r\\n                                                         <mat-option value=\\\"date\\\">Date</mat-option>\\r\\n                                                        \\r\\n                                                     </mat-select>\\r\\n                                                    </mat-form-field>\\r\\n                                            \\r\\n                                        </div>\\r\\n                                        <div fxFlex=\\\"30\\\">\\r\\n                                            <mat-form-field appearance=\\\"outline\\\">\\r\\n                                                <mat-label>Default Value</mat-label>\\r\\n                                                <input matInput >\\r\\n                                            </mat-form-field>\\r\\n                                        </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n        </mat-card>\\r\\n        <!-- All db out excel -->\\r\\n        <mat-card *ngIf=\\\"showAllDbExcelOut\\\">\\r\\n                <div fxLayout=\\\"row wrap\\\">\\r\\n                        <div fxFlex=\\\"100\\\">\\r\\n                            <div fxFlex=\\\"40\\\">\\r\\n                                <mat-form-field appearance=\\\"outline\\\">\\r\\n                                    <mat-label>Folder Name</mat-label>\\r\\n                                    <input matInput>\\r\\n                                </mat-form-field>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n        </mat-card>\\r\\n        <!-- All db out flatfile -->\\r\\n        <mat-card *ngIf=\\\"showAllDbflatOut\\\">\\r\\n                <div fxLayout=\\\"row wrap\\\">\\r\\n                        <div fxFlex=\\\"100\\\">\\r\\n                            <div fxFlex=\\\"40\\\">\\r\\n                                <mat-form-field appearance=\\\"outline\\\">\\r\\n                                    <mat-label>Folder Name</mat-label>\\r\\n                                    <input matInput>\\r\\n                                </mat-form-field>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n        </mat-card>\\r\\n\\r\\n    </mat-tab>\\r\\n\\r\\n</mat-tab-group>\\r\\n\\r\\n<div fxLayout=\\\"row wrap\\\" *ngIf=\\\"showFinalaFinish && createExtSys1.openToMessage=='Incoming' ||showFinalaFinish && createExtSys1.openToMessage=='OutComing'\\\">\\r\\n    <div fxFlex=\\\"100\\\">\\r\\n        \\r\\n        <div fxFlex=\\\"50\\\" fxLayoutGap=\\\"10px\\\">\\r\\n            <button mat-raised-button (click)=\\\"onfinish()\\\" color=\\\"primary\\\">Finish</button>\\r\\n            <button mat-raised-button (click)=\\\"onPreviousToProtocolScreen()\\\" color=\\\"accent\\\" >Previous_</button>\\r\\n            <button mat-raised-button (click)=\\\"onClick\\\" color=\\\"warn\\\">Reset</button>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n<div fxLayout=\\\"row wrap\\\" *ngIf=\\\"showOnlyAllBtn\\\">\\r\\n        <div fxFlex=\\\"100\\\">\\r\\n           \\r\\n            <div fxFlex=\\\"50\\\" fxLayoutGap=\\\"10px\\\">\\r\\n                <button mat-raised-button (click)=\\\"nextStep(0)\\\" color=\\\"primary\\\" *ngIf=\\\"selectedIndex==0\\\">Next_Inc</button>\\r\\n                <button mat-raised-button (click)=\\\"onPreviousOnlyAllInc()\\\" *ngIf=\\\"createExtSys1.openToMessage=='All' && tabText=='Incoming'\\\" color=\\\"accent\\\">Previous_Inc</button>\\r\\n               \\r\\n                <button mat-raised-button  color=\\\"warn\\\" *ngIf=\\\"createExtSys1.openToMessage=='All' && tabText=='Incoming'\\\">Reset</button>\\r\\n           \\r\\n               \\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div fxLayout=\\\"row wrap\\\">\\r\\n    <div fxFlex=\\\"100\\\" fxLayoutGap=\\\"20px\\\">\\r\\n    <div fxFlex=\\\"50\\\" fxLayoutGap=\\\"20px\\\">\\r\\n    <div *ngIf=\\\"onlyAllOut\\\">\\r\\n        <button mat-raised-button (click)=\\\"onPreviousOnlyAllOut()\\\" color=\\\"primary\\\" *ngIf=\\\"createExtSys1.openToMessage=='All' && tabText=='Outgoing'\\\">Previous</button>\\r\\n        <button mat-raised-button (click)=\\\"onfinish()\\\" *ngIf=\\\"createExtSys1.openToMessage=='All' && tabText=='Outgoing'\\\" color=\\\"accent\\\">Finish</button>\\r\\n        <button mat-raised-button (click)=\\\"onClick\\\" color=\\\"warn\\\" *ngIf=\\\"createExtSys1.openToMessage=='All' && tabText=='Outgoing'\\\">Reset</button>\\r\\n    </div>\\r\\n</div>\\r\\n</div>\\r\\n</div>\\r\\n\\r\\n    <div fxLayout=\\\"row\\\" *ngIf=\\\"showAuditLog\\\">\\r\\n        <!-- <div fxFlex></div> -->\\r\\n        <div fxFlex=\\\"95\\\">\\r\\n          <mat-card style=\\\"width: 70%;  margin-left:260px;\\\">\\r\\n            <mat-card-title>\\r\\n            </mat-card-title>\\r\\n            <mat-card-content>\\r\\n              <div fxLayout=\\\"row\\\">\\r\\n                <table id=\\\"customers\\\">\\r\\n                  <tr>\\r\\n                    <th>Record Status:</th>\\r\\n                    <td>\\r\\n                      <mat-chip>{{addSysResp.recordStatus}}</mat-chip>\\r\\n                    </td>\\r\\n                    <th>Input By:</th>\\r\\n                    <td>\\r\\n                      <mat-chip>{{addSysResp.creatorId}}</mat-chip>\\r\\n                    </td>\\r\\n                    <th>Verified By:</th>\\r\\n                    <td>\\r\\n                      <mat-chip>{{addSysResp.verifierId}}</mat-chip>\\r\\n                    </td>\\r\\n                    <th>Verified Once:</th>\\r\\n                    <td>\\r\\n                      <mat-chip>{{addSysResp.verifiedOnce}}</mat-chip>\\r\\n                    </td>\\r\\n                  </tr>\\r\\n                  <tr>\\r\\n                    <th>Modification No:</th>\\r\\n                    <td>\\r\\n                      <mat-chip>{{addSysResp.version}}</mat-chip>\\r\\n                    </td>\\r\\n                    <th>Input Date:</th>\\r\\n                    <td>\\r\\n                       <!-- <mat-chip>{{responseOfIcoming.verifiedOnce}}</mat-chip> -->\\r\\n    \\r\\n                    </td>\\r\\n                    <th>Verified Date:</th>\\r\\n                    <td>\\r\\n                      <!-- <mat-chip>{{userObj.verifierDtStamp | date: 'MM/dd/yyyy, h:mm a'}}</mat-chip> -->\\r\\n                    </td>\\r\\n      \\r\\n                    <th>Verified Status:</th>\\r\\n                    <td>\\r\\n                      <mat-chip>{{addSysResp.verifiedStatus}}</mat-chip>\\r\\n                    </td>\\r\\n      \\r\\n                  </tr>\\r\\n                </table>\\r\\n              </div>\\r\\n            </mat-card-content>\\r\\n          </mat-card>\\r\\n        </div>\\r\\n      </div>\\r\\n     \\r\\n  \"","export default \"\\r\\n<mat-toolbar color=\\\"primary\\\"  style=\\\"height:30px; font-size: small;\\\">\\r\\n    <span>External System</span>\\r\\n</mat-toolbar>\\r\\n<br><br>\\r\\n<div fxLayout=\\\"row\\\">\\r\\n  <span fxFlex></span>\\r\\n  <div fxFlex=\\\"40%\\\">\\r\\n    <mat-card style=\\\"width: 70%;\\\">\\r\\n\\r\\n      <mat-card-title>\\r\\n       \\r\\n      </mat-card-title>\\r\\n\\r\\n      <mat-card-content style=\\\"text-align: center\\\">\\r\\n        <form #fn=\\\"ngForm\\\" novalidate>\\r\\n          <div fxLayout=\\\"row\\\">\\r\\n\\r\\n            <div fxFlex=\\\"100\\\" class=\\\"pr-1\\\">\\r\\n              <div class=\\\"pb-1\\\">\\r\\n                <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\">\\r\\n                  <mat-label>External System Code</mat-label>\\r\\n                  <input matInput type=\\\"text\\\" required [(ngModel)]=\\\"excelExt.extSysCode\\\" name=\\\"extSysCode\\\"\\r\\n                    #extSysCode=\\\"ngModel\\\" (keyup)=\\\"fun(excelExt.extSysCode)\\\">\\r\\n\\r\\n                </mat-form-field>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"pb-1\\\">\\r\\n                <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\">\\r\\n                  <mat-label>External System Name</mat-label>\\r\\n                  <input matInput type=\\\"text\\\" required [(ngModel)]=\\\"excelExt.extSysName\\\" name=\\\"extSysName\\\"\\r\\n                    #extSysName=\\\"ngModel\\\" (keyup)=\\\"gun(excelExt.extSysName)\\\">\\r\\n\\r\\n                </mat-form-field>\\r\\n              </div>\\r\\n\\r\\n             \\r\\n              <div class=\\\"pb-1\\\">\\r\\n                <mat-form-field appearance=\\\"outline\\\">\\r\\n                  <mat-label>Department</mat-label>\\r\\n                  <mat-select   required [(ngModel)]=\\\"excelExt.department\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n                    <mat-option *ngFor=\\\"let o of allDeptNames\\\" [value]=\\\"o\\\">\\r\\n                      {{ o }}\\r\\n                    </mat-option>\\r\\n                  </mat-select>\\r\\n                  <!-- <mat-icon matSuffix>bookmark</mat-icon> -->\\r\\n                </mat-form-field>\\r\\n                </div>\\r\\n\\r\\n            \\r\\n                <!-- <input type=\\\"text\\\" required\\r\\n                     matInput \\r\\n                    (keyup)=\\\"keyPress($event)\\\" \\r\\n                    [matAutocomplete]=\\\"auto\\\" \\r\\n                    placeholder=\\\"department\\\" \\r\\n                    name=\\\"department\\\" [(ngModel)]=\\\"excelExt.department\\\">\\r\\n                    formControlName=\\\"department  #department=\\\"ngModel\\\">\\\">\\r\\n                \\r\\n                <mat-autocomplete #auto=\\\"matAutocomplete\\\"  >\\r\\n                  <mat-option *ngFor=\\\"let o of allDeptNames \\\" [value]=\\\"o\\\" >\\r\\n                    {{ o }} \\r\\n                  </mat-option>\\r\\n                </mat-autocomplete> -->\\r\\n             <!-- </mat-form-field>  -->\\r\\n            <!-- </div> -->\\r\\n\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" fxLayoutGap=\\\"10px\\\">\\r\\n            <button type=\\\"submit\\\" #saveBtn mat-raised-button color=\\\"primary\\\" [disabled]=\\\"!fn.form.valid||disblesave || !space || !pace ||!excelExt.department\\\" (click)=\\\"onSubmit()\\\">Submit</button>\\r\\n            <!-- [disabled]=\\\"!fn.form.valid\\\" -->\\r\\n            <button mat-raised-button color=\\\"warn\\\" [routerLink]=\\\"'/sias-v2/ExtSumamry'\\\">Exit</button>\\r\\n          </div>\\r\\n        </form>\\r\\n\\r\\n      </mat-card-content>\\r\\n    </mat-card>\\r\\n  </div>\\r\\n  <span fxFlex></span>\\r\\n</div>\\r\\n\\r\\n<br>\\r\\n<mat-card *ngIf=\\\"dataext\\\" style=\\\"width: 70%;  margin-left:280px;\\\">\\r\\n  <mat-card-title>\\r\\n\\r\\n  </mat-card-title>\\r\\n  <mat-card-content>\\r\\n\\r\\n\\r\\n    <table id=\\\"customers\\\">\\r\\n      <tr>\\r\\n          <th>RECORD STATUS:</th>\\r\\n          <td>\\r\\n            <mat-chip>{{excelExt.recordStatus}}</mat-chip>\\r\\n          </td>\\r\\n        <th> AUTH STATUS:</th>\\r\\n        <td>\\r\\n\\r\\n          <mat-chip>{{excelExt.authStatus}}</mat-chip>\\r\\n          <!-- <mat-form-field appearance=\\\"fill\\\">\\r\\n          <mat-label>Status</mat-label>\\r\\n          <input matInput type=\\\"text\\\" placeholder=\\\"\\\" #exSys>\\r\\n          <mat-icon matSuffix>person</mat-icon>\\r\\n        </mat-form-field> -->\\r\\n        </td>\\r\\n        <th>Created By:</th>\\r\\n        <td>\\r\\n          <mat-chip>{{excelExt.modifiedBy}}</mat-chip>\\r\\n        </td>\\r\\n        <th>Authorized By:</th>\\r\\n        <td>\\r\\n          <mat-chip>{{excelExt.authorizedBy}}</mat-chip>\\r\\n        </td>\\r\\n      </tr>\\r\\n      <tr>\\r\\n        <th>Modification No:</th>\\r\\n        <td>\\r\\n          <mat-chip>{{excelExt.version}}</mat-chip>\\r\\n        </td>\\r\\n        <th>Creation Date:</th>\\r\\n        <td>\\r\\n          <mat-chip>{{excelExt.modifiedTime |  date: 'MM/dd/yyyy, h:mm a' }}</mat-chip>\\r\\n        </td>\\r\\n        <th>Authorization Date:</th>\\r\\n        <td>\\r\\n          <mat-chip>{{excelExt.authorizedTime |  date: 'MM/dd/yyyy, h:mm a'}}</mat-chip>\\r\\n        </td>\\r\\n        <!-- added by vidya for isssue id 583 -->\\r\\n        <th>First Time Auth:</th>\\r\\n        <td>\\r\\n          <mat-chip>{{excelExt.verifiedOnce}}</mat-chip>\\r\\n        </td>\\r\\n        \\r\\n      </tr>\\r\\n    </table>\\r\\n  </mat-card-content>\\r\\n</mat-card>\\r\\n<br><br><br><br><br><br>\"","export default \"<mat-toolbar color=\\\"primary\\\" style=\\\"height:30px; font-size: small;\\\">\\r\\n  <span>Excel Mapping Summary</span>\\r\\n</mat-toolbar>\\r\\n<br />\\r\\n<mat-card class=\\\"navigation\\\">\\r\\n  <mat-card-title>\\r\\n\\r\\n  </mat-card-title>\\r\\n  <mat-card-content>\\r\\n    <div class=\\\"margin-333\\\">\\r\\n      <div fxLayout=\\\"row\\\" fxFlex=\\\"1 1 0%\\\" fxLayoutAlign=\\\"end center\\\" fxLayoutGap=\\\"5px\\\">\\r\\n        <button mat-raised-button color=\\\"primary\\\" [routerLink]=\\\"'/sias-v2/ExcelMapping'\\\"\\r\\n          *ngIf=\\\"roleCodes.new\\\">{{roleCodes.new.labelDescription}}</button>\\r\\n        <button mat-raised-button color=\\\"warn\\\" [routerLink]=\\\"'/dashboard'\\\">Exit</button>\\r\\n      </div>\\r\\n    </div>\\r\\n    <br>\\r\\n    <!-- *ngIf=\\\"this.button_permission.newbutton=='T'\\\" <button (click)=\\\"exportAsXLSX()\\\" mat-button color=\\\"primary\\\">External System Report <i class=\\\"material-icons\\\">\\r\\n    cloud_download\\r\\n    </i></button> -->\\r\\n\\r\\n    <table mat-table [dataSource]=\\\"dataSource\\\" class=\\\"mat-elevation-z8\\\" matSort matSortActive=\\\"inputDtStamp\\\"\\r\\n      matSortDirection=\\\"desc\\\">\\r\\n\\r\\n      <ng-container matColumnDef=\\\"extSysCode\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef>External System\\r\\n          Code </th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\" style=\\\"color:blue;\\\"><a routerLink=\\\"/sias-v2/updateExcelMappingComponent\\\"\\r\\n            (click)=\\\"getDataFromSummaryToUpdateExcelMapping(element)\\\">\\r\\n            {{element.extSysCode}}</a> </td>\\r\\n      </ng-container>\\r\\n\\r\\n      <!-- Name Column -->\\r\\n      <ng-container matColumnDef=\\\"extSys\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef>External System\\r\\n          Name </th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.extSys}} </td>\\r\\n      </ng-container>\\r\\n      <ng-container matColumnDef=\\\"inputBy\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef>Input By </th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.inputBy}} </td>\\r\\n      </ng-container>\\r\\n         <!-- added authSatus column by vidya for isssue 756 -->\\r\\n         <ng-container matColumnDef=\\\"authStatus\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef>AuthStatus </th>\\r\\n          <td mat-cell *matCellDef=\\\"let element\\\"> {{element.authStatus}} </td>\\r\\n        </ng-container>\\r\\n      <ng-container matColumnDef=\\\"inputDtStamp\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef>Input Date Stamp </th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.inputDtStamp | date}} </td>\\r\\n      </ng-container>\\r\\n   \\r\\n\\r\\n      <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n      <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n    </table>\\r\\n    <mat-paginator [pageSizeOptions]=\\\"[5, 10, 20]\\\" showFirstLastButtons></mat-paginator>\\r\\n\\r\\n  </mat-card-content>\\r\\n</mat-card>\"","export default \"<mat-toolbar color=\\\"primary\\\" style=\\\"height:30px; font-size: small;\\\">\\r\\n  <span>Excel Mapping</span>\\r\\n</mat-toolbar>\\r\\n<br>\\r\\n<mat-card>\\r\\n  <mat-card-title></mat-card-title>\\r\\n  <button type=\\\"submit\\\" mat-raised-button class=\\\"text-center\\\" color=\\\"primary\\\"\\r\\n    [routerLink]=\\\"'/sias-v2/updateExcelMappingComponent'\\\">\\r\\n    Update Mapping\\r\\n  </button>&nbsp;\\r\\n  <button mat-raised-button color=\\\"warn\\\" [routerLink]=\\\"'/sias-v2/ExcelMappingSummary'\\\">Exit</button>\\r\\n  <mat-card-content>\\r\\n    <form #extForm=\\\"ngForm\\\" novalidate>\\r\\n      <div class=\\\"mt-24\\\">\\r\\n        <span class=\\\"text-muted\\\" style=\\\"font-size: 10px\\\">*select minimum two mandatory row</span>\\r\\n      </div>\\r\\n      <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\">\\r\\n        <div fxFlex=\\\"100\\\" class=\\\"pr-1\\\">\\r\\n          <div class=\\\"pb-1\\\">\\r\\n            <mat-form-field class=\\\"full-width\\\">\\r\\n              <mat-label>External System</mat-label>\\r\\n              <mat-select [(ngModel)]=\\\"extCode\\\" name=\\\"ext\\\" #extSysCode required #ext=\\\"ngModel\\\"\\r\\n                (selectionChange)=\\\"getProcess(extSysCode.value)\\\">\\r\\n                <mat-option *ngFor=\\\"let topping of extSysData1\\\" [value]=\\\"topping\\\">{{topping}}</mat-option>\\r\\n              </mat-select>\\r\\n              <mat-error [hidden]=\\\"ext.valid || ext.pristine\\\">\\r\\n                External System is required\\r\\n              </mat-error>\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div fxFlex=\\\"100\\\" class=\\\"pr-1\\\">\\r\\n          <div class=\\\"pb-1\\\">\\r\\n            <mat-form-field class=\\\"full-width\\\">\\r\\n              <mat-label>Process Code</mat-label>\\r\\n              <mat-select [(ngModel)]=\\\"proCode\\\" name=\\\"pCode\\\" #pCode=\\\"ngModel\\\" required #processCode\\r\\n                (selectionChange)=\\\"getProcessName1(processCode.value,extSysCode.value)\\\">\\r\\n                <mat-option *ngFor=\\\"let topping of processName\\\" [value]=\\\"topping\\\">{{topping}}</mat-option>\\r\\n              </mat-select>\\r\\n              <mat-error [hidden]=\\\"pCode.valid || pCode.pristine\\\">\\r\\n                Process Code is required\\r\\n              </mat-error>\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div fxFlex=\\\"100\\\" class=\\\"pr-1\\\">\\r\\n          <div class=\\\"pb-1\\\">\\r\\n            <mat-form-field class=\\\"full-width\\\">\\r\\n              <mat-label>Data Starting Row</mat-label>\\r\\n              <input type=\\\"number\\\" [(ngModel)]=\\\"starting\\\" name=\\\"sRow\\\" #sRow=\\\"ngModel\\\" required matInput value=\\\"00\\\">\\r\\n              <mat-error [hidden]=\\\"sRow.valid || sRow.pristine\\\">\\r\\n                Starting Row is required\\r\\n              </mat-error>\\r\\n            </mat-form-field>\\r\\n\\r\\n          </div>\\r\\n        </div>\\r\\n        <div fxFlex=\\\"100\\\" class=\\\"pr-1\\\">\\r\\n          <div class=\\\"pb-1\\\">\\r\\n            <mat-form-field class=\\\"full-width\\\">\\r\\n              <mat-label>Currency</mat-label>\\r\\n              <input type=\\\"text\\\" [(ngModel)]=\\\"currency\\\" name=\\\"ccy\\\" #ccy=\\\"ngModel\\\" required matInput>\\r\\n              <mat-error [hidden]=\\\"ccy.valid || ccy.pristine\\\">\\r\\n                Currency is required\\r\\n              </mat-error>\\r\\n            </mat-form-field>\\r\\n\\r\\n          </div>\\r\\n        </div>\\r\\n        <div fxFlex=\\\"100\\\" class=\\\"pr-1\\\">\\r\\n          <div class=\\\"pb-1\\\">\\r\\n            <mat-form-field class=\\\"full-width\\\">\\r\\n              <mat-label>Sheet Number</mat-label>\\r\\n              <input type=\\\"text\\\" [(ngModel)]=\\\"sheetNumber\\\" name=\\\"sheetNumber\\\" #sheetNum=\\\"ngModel\\\" required matInput>\\r\\n              <mat-error [hidden]=\\\"sheetNum.valid || sheetNum.pristine\\\">\\r\\n                Sheet Number\\r\\n              </mat-error>\\r\\n            </mat-form-field>\\r\\n\\r\\n          </div>\\r\\n        </div>\\r\\n        <div fxFlex=\\\"100\\\" class=\\\"pr-1\\\">\\r\\n          <div class=\\\"pb-1\\\">\\r\\n            <mat-checkbox [(ngModel)]=\\\"isChecked\\\" value=\\\"\\\" name=\\\"isChecked\\\">Is Header Present\\r\\n            </mat-checkbox>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </form>\\r\\n  </mat-card-content>\\r\\n</mat-card>\\r\\n<mat-card *ngIf=\\\"addForm\\\" style=\\\"width: 200%\\\">\\r\\n  <mat-card-content>\\r\\n    <form [formGroup]=\\\"addForm\\\" novalidate>\\r\\n      <table class=\\\"forms-table default-bg\\\">\\r\\n        <!-- 544 columns added by vidya -->\\r\\n        <thead>\\r\\n\\r\\n          <tr style=\\\"text-align: center\\\">\\r\\n            <th class=\\\"text-muted\\\">Name</th>\\r\\n            <th class=\\\"text-muted\\\">Data Type </th>\\r\\n            <th class=\\\"text-muted\\\">Mandatory</th>\\r\\n            <th class=\\\"text-muted\\\">Header Name</th>\\r\\n            <th class=\\\"text-muted\\\">Date Format</th>\\r\\n            <th class=\\\"text-muted\\\">Mapping Column </th>\\r\\n            <th class=\\\"text-muted\\\">Delimeter</th>\\r\\n            <th class=\\\"text-muted\\\">Default Value</th>\\r\\n            <!-- <th class=\\\"text-muted\\\">Repeated Till Next Value</th>\\r\\n            <th class=\\\"text-muted\\\">Delete</th> -->\\r\\n\\r\\n\\r\\n\\r\\n          </tr>\\r\\n        </thead>\\r\\n        <!-- loop throught units -->\\r\\n        <tbody>\\r\\n          <ng-container formArrayName=\\\"subArray\\\">\\r\\n            <tr style=\\\"text-align: center\\\" *ngFor=\\\"let item of addForm.controls.subArray.controls; let i=index\\\">\\r\\n              <ng-container [formGroupName]=\\\"i\\\">\\r\\n                <td>\\r\\n                  <mat-form-field appearance=\\\"outline\\\">\\r\\n                    <mat-label>Name</mat-label>\\r\\n                    <input matInput formControlName=\\\"columnnName\\\">\\r\\n                    <!-- input field error -->\\r\\n                  </mat-form-field>\\r\\n                </td>\\r\\n                <td>\\r\\n                  <mat-form-field appearance=\\\"outline\\\">\\r\\n                    <mat-label>Data Type</mat-label>\\r\\n                    <mat-select formControlName=\\\"dataType\\\" placeholder=\\\"Choose DataType\\\"\\r\\n                      (selectionChange)=\\\"checkTypeStatus(i)\\\">\\r\\n                      <mat-option *ngFor=\\\"let item of dataTypes\\\" [value]=\\\"item.type\\\">{{item.type}}</mat-option>\\r\\n                    </mat-select>\\r\\n                  </mat-form-field>\\r\\n                </td>\\r\\n                <td>\\r\\n                  <mat-checkbox formControlName=\\\"mandatory\\\"> </mat-checkbox>\\r\\n                </td>\\r\\n                <td>\\r\\n                  <mat-form-field appearance=\\\"outline\\\">\\r\\n                    <mat-label>Header Name</mat-label>\\r\\n                    <input matInput formControlName=\\\"headerName\\\">\\r\\n                    <!-- input field error -->\\r\\n                    <mat-error></mat-error>\\r\\n                  </mat-form-field>\\r\\n                </td>\\r\\n                <td>\\r\\n                  <mat-form-field appearance=\\\"outline\\\">\\r\\n                    <mat-label>Date Format</mat-label>\\r\\n                    <!-- [matDatepicker]=\\\"picker\\\" -->\\r\\n                    <input matInput placeholder=\\\"Date Format\\\" formControlName=\\\"dateFormat\\\" />\\r\\n                    <!-- <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\r\\n                    <mat-datepicker #picker></mat-datepicker> -->\\r\\n                  </mat-form-field>\\r\\n                </td>\\r\\n                <td>\\r\\n                  <mat-form-field appearance=\\\"outline\\\" hintLabel=\\\"Max 3 characters\\\">\\r\\n                    <mat-label>Mapping Column</mat-label>\\r\\n                    <input matInput #input formControlName=\\\"mappingColumn\\\" appUppercase>\\r\\n                    <!-- input field error -->\\r\\n                    <mat-error *ngIf=\\\"item.controls.mappingColumn.errors\\\">\\r\\n                      Only Alphabet\\r\\n                    </mat-error>\\r\\n                    <mat-hint align=\\\"end\\\">{{input.value?.length || 0}}/3</mat-hint>\\r\\n                  </mat-form-field>\\r\\n                </td>\\r\\n                <td>\\r\\n                  <mat-form-field appearance=\\\"outline\\\">\\r\\n                    <mat-label>Delimeter</mat-label>\\r\\n                    <input matInput formControlName=\\\"delimeter\\\">\\r\\n                    <!-- input field error -->\\r\\n                  </mat-form-field>\\r\\n                </td>\\r\\n                <td>\\r\\n                  <mat-form-field appearance=\\\"outline\\\">\\r\\n                    <mat-label>Default Value</mat-label>\\r\\n                    <input matInput formControlName=\\\"defaultValue\\\">\\r\\n                    <!-- input field error -->\\r\\n                  </mat-form-field>\\r\\n                </td>\\r\\n       \\r\\n\\r\\n              </ng-container>\\r\\n            </tr>\\r\\n\\r\\n            <tr>\\r\\n              <button mat-raised-button class=\\\"mb-05 text-center\\\" color=\\\"primary\\\" (click)=\\\"addSubArray()\\\">\\r\\n                <mat-icon>add</mat-icon>\\r\\n              </button>\\r\\n            </tr>\\r\\n          </ng-container>\\r\\n        </tbody>\\r\\n      </table>\\r\\n      <br>\\r\\n      <!-- <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end end\\\" class=\\\"m-333\\\"> -->\\r\\n      <!-- <button mat-raised-button class=\\\"mb-05 text-center\\\" color=\\\"primary\\\" (click)=\\\"addSubArray()\\\">\\r\\n          <mat-icon>add</mat-icon>\\r\\n        </button> -->\\r\\n      <!-- </div> -->\\r\\n      <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"10px\\\" class=\\\"mb-4\\\" fxFlexAlign=\\\"start\\\">\\r\\n        <button mat-raised-button class=\\\"text-center\\\" color=\\\"primary\\\" [disabled]=\\\"addForm.controls.subArray.invalid ||is_edit\\\"\\r\\n          (click)=\\\"finalSubmit(addForm.value,isChecked,starting,sheetNumber)\\\">Submit</button>\\r\\n        <button mat-raised-button color=\\\"warn\\\" (click)=\\\"addForm.reset()\\\">Cancel</button>\\r\\n      </div>\\r\\n    </form>\\r\\n  </mat-card-content>\\r\\n</mat-card>\\r\\n<br>\\r\\n<mat-card *ngIf=\\\"tempStore\\\" style=\\\"width: 60%;  margin-left:280px;\\\">\\r\\n  <mat-card-title>\\r\\n  </mat-card-title>\\r\\n  <mat-card-content>\\r\\n    <table id=\\\"customers\\\">\\r\\n      <tr>\\r\\n        <th>Auth Status:</th>\\r\\n        <td>\\r\\n          <mat-chip>{{tempStore?.authStatus}}</mat-chip>\\r\\n          <!-- <mat-form-field appearance=\\\"fill\\\">\\r\\n              <mat-label>Status</mat-label>\\r\\n              <input matInput type=\\\"text\\\" placeholder=\\\"\\\" #exSys>\\r\\n              <mat-icon matSuffix>person</mat-icon>\\r\\n            </mat-form-field> -->\\r\\n        </td>\\r\\n        <th>Created By:</th>\\r\\n        <td>\\r\\n          <mat-chip>{{tempStore?.modifiedBy}}</mat-chip>\\r\\n        </td>\\r\\n        <th>Authorized By:</th>\\r\\n        <td>\\r\\n          <mat-chip>{{tempStore?.authorizedBy}}</mat-chip>\\r\\n        </td>\\r\\n      </tr>\\r\\n      <tr>\\r\\n        <th>Modification No:</th>\\r\\n        <td>\\r\\n          <mat-chip>{{tempStore?.version}}</mat-chip>\\r\\n        </td>\\r\\n        <th>Creation Date:</th>\\r\\n        <td>\\r\\n          <mat-chip>{{tempStore?.modifiedTime | date: 'MM/dd/yyyy, h:mm a'}}</mat-chip>\\r\\n        </td>\\r\\n        <th>Authorization Date:</th>\\r\\n        <td>\\r\\n          <mat-chip>{{tempStore?.authorizedTime | date: 'MM/dd/yyyy, h:mm a'}}</mat-chip>\\r\\n        </td>\\r\\n        <th>Record Status:</th>\\r\\n        <td>\\r\\n          <mat-chip>{{tempStore?.recordStatus }}</mat-chip>\\r\\n        </td>\\r\\n      </tr>\\r\\n    </table>\\r\\n  </mat-card-content>\\r\\n</mat-card>\\r\\n<br><br><br><br><br><br><br>\\r\\n<br><br><br><br><br><br><br>\"","export default \"<mat-toolbar color=\\\"primary\\\" style=\\\"height:30px; font-size: medium;\\\">\\r\\n  <span>Update/copy mapping</span>\\r\\n</mat-toolbar>\\r\\n<br>\\r\\n<mat-card>\\r\\n  <mat-card-content>\\r\\n    <mat-progress-bar mode=\\\"indeterminate\\\" *ngIf=\\\"progress\\\"></mat-progress-bar>\\r\\n    <form #formValue=\\\"ngForm\\\">\\r\\n      <!-- <div>\\r\\n        <span class=\\\"text-muted\\\">*select minimum two mandatory row</span>\\r\\n      </div> -->\\r\\n      <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\">\\r\\n        <div fxFlex=\\\"100\\\" class=\\\"pr-1\\\">\\r\\n          <div class=\\\"pb-1\\\">\\r\\n    \\r\\n            <!-- <mat-form-field class=\\\"full-width\\\">\\r\\n              <mat-label>External system </mat-label>\\r\\n              <input type=\\\"text\\\" [(ngModel)]=\\\"extSysCodeFromsummary\\\" name=\\\"ext\\\" #ext=\\\"ngModel\\\" required readonly\\r\\n                matInput>\\r\\n\\r\\n            </mat-form-field> -->\\r\\n            <mat-form-field class=\\\"full-width\\\">\\r\\n              <mat-label>External System</mat-label>\\r\\n\\r\\n              <mat-select name=\\\"ext\\\" [(ngModel)]=\\\"extSysCodeFromsummary\\\"  [disabled]=\\\"copyData1\\\" required #ext \\r\\n                (selectionChange)=\\\"getProcess(ext.value)\\\" [ngModelOptions]=\\\"{standalone: true}\\\"> \\r\\n                <mat-option *ngFor=\\\"let topping of extSysData1\\\" [value]=\\\"topping\\\">{{topping}}</mat-option>\\r\\n              </mat-select>\\r\\n              <mat-error [hidden]=\\\"ext.valid || ext.pristine\\\">\\r\\n                External System is required\\r\\n              </mat-error>\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div fxFlex=\\\"100\\\" class=\\\"pr-1\\\">\\r\\n          <div class=\\\"pb-1\\\">\\r\\n            <mat-form-field class=\\\"full-width\\\">\\r\\n              <mat-label>Process Code</mat-label>\\r\\n              <mat-select  required [(ngModel)]=\\\"proCode\\\" #process (selectionChange)=\\\"getProcessName1(process.value)\\\"  [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n                <mat-option *ngFor=\\\"let topping of dataResp\\\" [value]=\\\"topping\\\">{{topping}}</mat-option>\\r\\n              </mat-select>\\r\\n              <mat-error [hidden]=\\\"process.valid || process.pristine\\\">\\r\\n                Process Code is required\\r\\n              </mat-error>\\r\\n            </mat-form-field>\\r\\n            <!-- <mat-form-field class=\\\"full-width\\\">\\r\\n                <mat-label>External system </mat-label>\\r\\n                <input type=\\\"text\\\" [(ngModel)]=\\\"processNameFromSummary\\\" name=\\\"process\\\" #process=\\\"ngModel\\\" required matInput readonly >\\r\\n                \\r\\n              </mat-form-field> -->\\r\\n          </div>\\r\\n\\r\\n        </div>\\r\\n        <div fxFlex=\\\"100\\\" class=\\\"pr-1\\\" id = \\\"muthu\\\">\\r\\n          <div class=\\\"pb-1\\\">\\r\\n            <mat-form-field class=\\\"full-width\\\">\\r\\n              <mat-label>Currency</mat-label>\\r\\n              <mat-select name=\\\"currency1\\\"  required [(ngModel)]=\\\"currency\\\" (ngModelChange)=\\\"dataChanged($event, 'currency')\\\" #ccy>\\r\\n                <mat-option *ngFor=\\\"let topping of ccyData\\\" [value]=\\\"topping\\\">{{topping}}</mat-option>\\r\\n              </mat-select>\\r\\n              <mat-error [hidden]=\\\"ccy.valid || ccy.pristine\\\">\\r\\n                Currency is required\\r\\n              </mat-error>\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n\\r\\n        </div>\\r\\n\\r\\n        <div fxFlex=\\\"100\\\" class=\\\"pr-1\\\" *ngIf=\\\"!copyData1\\\">\\r\\n          <div class=\\\"pb-1\\\">\\r\\n            <mat-form-field class=\\\"full-width\\\">\\r\\n              <mat-label>Currency</mat-label>\\r\\n              <input type=\\\"text\\\"  [(ngModel)]=\\\"currency\\\"   name=\\\"currency\\\" #ccy1=\\\"ngModel\\\"  required matInput >\\r\\n              <!-- <input type=\\\"text\\\" [(ngModel)]=\\\"sheetNumber\\\" name=\\\"sheetNumber\\\" #sheetNum=\\\"ngModel\\\" required matInput> -->\\r\\n                <!-- <mat-option *ngFor=\\\"let topping of ccyData\\\" [value]=\\\"topping\\\">{{topping}}</mat-option>\\r\\n              </mat-select> -->\\r\\n              <mat-error [hidden]=\\\"ccy1.valid || ccy1.pristine\\\">\\r\\n                Currency is required\\r\\n              </mat-error>\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"pb-1\\\">\\r\\n          <mat-form-field>\\r\\n            <mat-label>Sheet Number</mat-label>\\r\\n            <input type=\\\"text\\\" [(ngModel)]=\\\"sheetNumber\\\" (ngModelChange)=\\\"dataChanged($event, 'sheet')\\\" name=\\\"sheetNumber\\\" #sheetNum=\\\"ngModel\\\" required matInput>\\r\\n            <mat-error [hidden]=\\\"sheetNum.valid || sheetNum.pristine\\\">\\r\\n              Sheet Number\\r\\n            </mat-error>\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n        <!-- <p>Enter the currency For copy mapping</p> -->\\r\\n\\r\\n        <button mat-raised-button color=\\\"primary\\\" #fetchBtn (click)=\\\"getAllMapping(ext && ext.value,process && process.value,ccy && ccy.value)\\\"\\r\\n          [disabled]=\\\"(process && process.value==null)||(ccy && ccy.value==null)||!sheetNumber || disablefetchbtn\\\" *ngIf=\\\"copyData1\\\">\\r\\n          Fetch\\r\\n        </button>\\r\\n        <!-- <button mat-raised-button color=\\\"primary\\\" #fetchBtn (click)=\\\"getAllMapping(ext.value,process.value,c\\r\\n        [disabled]=\\\"process.value==null||ccy.value==null||!sheetNumber\\\" *ngIf=\\\"copyData1\\\">\\r\\n        Fetch\\r\\n      </button> -->\\r\\n        &nbsp;&nbsp;\\r\\n\\r\\n        <button mat-raised-button color=\\\"warn\\\" [routerLink]=\\\"'/sias-v2/ExcelMappingSummary'\\\">Exit</button>\\r\\n      </div>\\r\\n    </form>\\r\\n  </mat-card-content>\\r\\n</mat-card>\\r\\n<mat-card *ngIf=\\\"formdata && addForm\\\">\\r\\n  <mat-card-title></mat-card-title>\\r\\n  <mat-card-content>\\r\\n    <form [formGroup]=\\\"addForm\\\" novalidate>\\r\\n      <div fxLayout=\\\"row\\\">\\r\\n        <div fxFlex=\\\"30\\\">\\r\\n          <div class=\\\"pb-1\\\" class=\\\"pr-1\\\">\\r\\n            <mat-form-field class=\\\"full-width\\\">\\r\\n              <mat-label>Data Starting Row</mat-label>\\r\\n              <input matInput value=\\\"0\\\" [(ngModel)]=\\\"starting\\\" name=\\\"startRow\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div fxFlex=\\\"25\\\">\\r\\n          <div class=\\\"pb-1\\\">\\r\\n            <mat-checkbox [(ngModel)]=\\\"isChecked\\\" name=\\\"isHeader\\\" [ngModelOptions]=\\\"{standalone: true}\\\">isHeaderPresent\\r\\n            </mat-checkbox>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <!-- <div fxFlex=\\\"45\\\">\\r\\n          <div class=\\\"pb-1\\\">\\r\\n            <mat-form-field class=\\\"full-width\\\">\\r\\n              <mat-label>Enter currency</mat-label>\\r\\n              <input matInput type=\\\"text\\\" #currencydata name=\\\"currencydata\\\">\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n        </div> -->\\r\\n      </div>\\r\\n\\r\\n      <table class=\\\"forms-table default-bg\\\">\\r\\n\\r\\n        <div formArrayName=\\\"subArray\\\">\\r\\n          <thead>\\r\\n            <!-- 544 issue id columns added by vidya -->\\r\\n            <tr style=\\\"text-align: center\\\">\\r\\n              <th class=\\\"text-muted\\\">Name</th>\\r\\n              <th class=\\\"text-muted\\\" style=\\\"padding-left: 5%;\\\">Datatype </th>\\r\\n              <th class=\\\"text-muted\\\">Mandatory</th>\\r\\n              <th class=\\\"text-muted\\\" style=\\\"padding-right: 3%;\\\">Header Name</th>\\r\\n              <th class=\\\"text-muted\\\">Date Format</th>\\r\\n              <th class=\\\"text-muted\\\" style=\\\"padding-left: 2%;\\\">Mapping Column </th>\\r\\n              <th class=\\\"text-muted\\\" style=\\\"padding-left: 5%;\\\">Delimeter</th>\\r\\n              <th class=\\\"text-muted\\\" style=\\\"padding-left: 4%;\\\">Default Value</th>\\r\\n              <th class=\\\"text-muted\\\" style=\\\"padding-left: 6%\\\">Repeated till next value</th>\\r\\n              <th class=\\\"text-muted\\\" style=\\\"padding-left: 5%\\\">Delete</th>\\r\\n\\r\\n\\r\\n\\r\\n            </tr>\\r\\n          </thead>\\r\\n          <!-- loop throught units -->\\r\\n          <div *ngFor=\\\"let item of addForm.controls.subArray.controls; let i=index\\\">\\r\\n            <tbody>\\r\\n              <div [formGroupName]=\\\"i\\\">\\r\\n                <tr>\\r\\n                  <td>\\r\\n                    <mat-form-field appearance=\\\"outline\\\" *ngIf=\\\"!editafterfetch\\\">\\r\\n                      <mat-label>Name</mat-label>\\r\\n                      <!-- <input matInput formControlName=\\\"columnnName\\\" [readonly]=\\\"!editafterfetch\\\"> -->\\r\\n                      <!-- input field error -->\\r\\n                     <mat-select formControlName=\\\"columnnName\\\" [disabled]=\\\"!editafterfetch\\\">\\r\\n                        <mat-option *ngFor=\\\"let i of fileNames\\\" [value]=\\\"i\\\">{{i}}</mat-option> -->\\r\\n                      </mat-select>\\r\\n                    </mat-form-field>\\r\\n                    <mat-form-field appearance=\\\"outline\\\" *ngIf=\\\"editafterfetch\\\">\\r\\n                      <mat-label>Name</mat-label>\\r\\n                      <div class=\\\"dropdown\\\">\\r\\n                     \\r\\n                      <input type=\\\"text\\\" matInput formControlName=\\\"columnnName\\\" [disabled]=\\\"true\\\" [matAutocomplete]=\\\"auto\\\"\\r\\n                      >\\r\\n                      <div class=\\\"mat-select-arrow-wrapper dropdown-arrow\\\"><div class=\\\"mat-select-arrow\\\"></div></div>\\r\\n                      </div>\\r\\n                      <mat-autocomplete #auto=\\\"matAutocomplete\\\">\\r\\n                        <mat-option *ngFor=\\\"let i of fileNames\\\" [value]=\\\"i\\\">{{i}}</mat-option>\\r\\n\\r\\n                      </mat-autocomplete>\\r\\n                    </mat-form-field>\\r\\n                  </td>\\r\\n                  <td>\\r\\n                    <mat-form-field appearance=\\\"outline\\\">\\r\\n                      <mat-label>dataType</mat-label>\\r\\n                      <!-- <input matInput formControlName=\\\"dataType\\\"> -->\\r\\n                      <mat-select formControlName=\\\"dataType\\\" (selectionChange)=\\\"checkTypeStatus(i)\\\"\\r\\n                        [disabled]=\\\"!editafterfetch\\\">\\r\\n                        <mat-option *ngFor=\\\"let item of dataTypes\\\" [value]=\\\"item.type\\\">{{item.type}}</mat-option>\\r\\n                      </mat-select>\\r\\n                      <!-- input field error -->\\r\\n                    </mat-form-field>\\r\\n                  </td>\\r\\n                  <td>\\r\\n                    <mat-checkbox formControlName=\\\"mandatory\\\" [disabled]=\\\"!editafterfetch\\\"></mat-checkbox>\\r\\n                    <!-- <mat-form-field appearance=\\\"outline\\\">\\r\\n                        <mat-label>mandatory</mat-label>\\r\\n                        <input matInput formControlName=\\\"mandatory\\\" required>\\r\\n                        <mat-error></mat-error>\\r\\n                      </mat-form-field> -->\\r\\n                  </td>&nbsp;&nbsp;\\r\\n                  <td>\\r\\n                    <mat-form-field appearance=\\\"outline\\\">\\r\\n                      <mat-label>headerName</mat-label>\\r\\n                      <input matInput formControlName=\\\"headerName\\\" [readonly]=\\\"!editafterfetch\\\">\\r\\n                      <!-- input field error -->\\r\\n                      <mat-error></mat-error>\\r\\n                    </mat-form-field>\\r\\n                  </td>\\r\\n                  <td>\\r\\n                    <mat-form-field appearance=\\\"outline\\\">\\r\\n                      <mat-label>dateFormat</mat-label>\\r\\n                      <input matInput formControlName=\\\"dateFormat\\\"\\r\\n                        [readonly]=\\\"getSubArrayFormGroup(i).dataType == 'Date' ? false :true\\\">\\r\\n                      <!-- input field error -->\\r\\n                    </mat-form-field>\\r\\n                  </td>\\r\\n                  <td>\\r\\n                    <mat-form-field appearance=\\\"outline\\\">\\r\\n                      <mat-label>excelMappingColumn</mat-label>\\r\\n                      <input matInput formControlName=\\\"excelMappingColumn\\\" appUppercase [readonly]=\\\"!editafterfetch\\\">\\r\\n                      <!-- input field error -->\\r\\n                      <!-- <mat-error *ngIf=\\\"myForm.controls.excelMappingColumn.errors\\\">\\r\\n                          MappingColumn must be at least 3 characters long.\\r\\n                        </mat-error> -->\\r\\n                    </mat-form-field>\\r\\n                  </td>\\r\\n                  <td>\\r\\n                    <mat-form-field appearance=\\\"outline\\\">\\r\\n                      <mat-label>Delimeter</mat-label>\\r\\n                      <input matInput formControlName=\\\"delimeter\\\" [readonly]=\\\"!editafterfetch\\\">\\r\\n                      <!-- input field error -->\\r\\n                    </mat-form-field>\\r\\n                  </td>\\r\\n                  <td>\\r\\n                    <mat-form-field appearance=\\\"outline\\\">\\r\\n                      <mat-label>DefaultValue</mat-label>\\r\\n                      <input matInput formControlName=\\\"defaultValue\\\" [readonly]=\\\"!editafterfetch\\\">\\r\\n                      <!-- input field error -->\\r\\n                    </mat-form-field>\\r\\n                  </td>\\r\\n                  <td>\\r\\n                    <mat-form-field appearance=\\\"outline\\\">\\r\\n                      <mat-label>RepeatedTillNextValue</mat-label>\\r\\n                      <input matInput formControlName=\\\"repeatedTillNextValue\\\" [readonly]=\\\"!editafterfetch\\\">\\r\\n                      <!-- input field error -->\\r\\n                    </mat-form-field>\\r\\n                  </td>\\r\\n\\r\\n                  <td>\\r\\n                    <button mat-icon-button color=\\\"warn\\\" [disabled]=\\\"!editafterfetch\\\" (click)=\\\"removeSubArray(i,item)\\\">\\r\\n                      <mat-icon>delete</mat-icon>\\r\\n                    </button>\\r\\n                  </td>\\r\\n                </tr>\\r\\n\\r\\n              </div>\\r\\n            </tbody>\\r\\n\\r\\n          </div>\\r\\n          <tr>\\r\\n            <!-- <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end end\\\" class=\\\"m-333\\\"> -->\\r\\n            <button mat-raised-button color=\\\"primary\\\" (click)=\\\"addSubArray()\\\">\\r\\n              <mat-icon>add</mat-icon>\\r\\n            </button>\\r\\n            <!-- </div> -->\\r\\n          </tr>\\r\\n        </div>\\r\\n      </table>\\r\\n\\r\\n      <!-- <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end end\\\" class=\\\"m-333\\\">\\r\\n        <button mat-raised-button color=\\\"primary\\\" (click)=\\\"addSubArray()\\\">\\r\\n          <mat-icon>add</mat-icon>\\r\\n        </button>\\r\\n      </div> -->\\r\\n      <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" fxLayoutGap=\\\"15px\\\" class=\\\"mb-4\\\">\\r\\n        <button mat-raised-button class=\\\"text-center\\\" color=\\\"warn\\\" #updateBtn\\r\\n          [disabled]=\\\"addForm.controls.subArray.invalid\\\"\\r\\n          (click)=\\\"copyData(addForm.value, addForm.valid, ext.value,process.value,starting,isChecked,ccy.value)\\\" *ngIf=\\\"copyData1\\\">Copy\\r\\n          Mapping</button>\\r\\n\\r\\n        <button mat-raised-button class=\\\"text-center\\\" color=\\\"primary\\\" #updateBtn\\r\\n          (click)=\\\"updateMappingData(addForm.value, addForm.valid, ext.value,process.value,starting,isChecked,ccy.value,sheetNumber)\\\"\\r\\n          *ngIf=\\\"editafterfetch && copyData1\\\">Update</button>\\r\\n        <!-- Edit  button added by vidya issue id 540 -->\\r\\n        <button mat-raised-button color=\\\"warn\\\" (click)=\\\"onEdit()\\\" *ngIf=\\\"!editafterfetch  && copyData1\\\">\\r\\n          Edit\\r\\n        </button>&nbsp;&nbsp;\\r\\n      <button mat-raised-button class=\\\"text-center\\\" color=\\\"primary\\\"\\r\\n          (click)=\\\"onClickOfAuth(addForm.value, addForm.valid, ext.value,process.value,ccy.value)\\\" *ngIf=\\\"tempStore.authStatus=='UNAUTHORIZED'  && copyData1\\\">Auth</button>\\r\\n        <button mat-raised-button class=\\\"text-center\\\" color=\\\"primary\\\" *ngIf=\\\"tempStore.recordStatus=='OPEN'  && copyData1\\\"\\r\\n          (click)=\\\"onClcikOfClose(addForm.value, addForm.valid, ext.value,process.value,ccy.value)\\\"\\r\\n          >Close</button>\\r\\n\\r\\n        <button mat-raised-button class=\\\"text-center\\\" color=\\\"primary\\\" *ngIf=\\\"tempStore.recordStatus=='CLOSED' && copyData1\\\"\\r\\n          (click)=\\\"onClcikOfReopen(addForm.value, addForm.valid, ext.value,process.value,ccy.value)\\\">Re-Open</button>\\r\\n        <!-- <button mat-raised-button color=\\\"warn\\\" class=\\\"text-center\\\">Cancel</button>\\r\\n                -->\\r\\n        <!-- <button mat-raised-button color=\\\"warn\\\" [routerLink]=\\\"'/dashboard'\\\">Exit</button> -->\\r\\n        <!-- <button mat-raised-button color=\\\"warn\\\"  type=\\\"reset\\\" >Cancel</button> -->\\r\\n        <button mat-raised-button class=\\\"text-center\\\" color=\\\"primary\\\" [disabled]=\\\"addForm.controls.subArray.invalid\\\"\\r\\n        (click)=\\\"finalSubmit(addForm.value,isChecked,currency,starting,sheetNumber)\\\" *ngIf=\\\"!copyData1\\\">Submit</button>\\r\\n      </div>\\r\\n    </form>\\r\\n  </mat-card-content>\\r\\n</mat-card>\\r\\n<br><br><br>\\r\\n<mat-card *ngIf=\\\"formdata && addForm\\\" style=\\\"width: 60%;  margin-left:280px;\\\">\\r\\n  <mat-card-title>\\r\\n  </mat-card-title>\\r\\n  <mat-card-content>\\r\\n    <form>\\r\\n       <table id=\\\"customers\\\">\\r\\n        <tr>\\r\\n          <th>Auth Status:</th>\\r\\n          <td>\\r\\n            <mat-chip>{{tempStore?.authStatus}}</mat-chip>\\r\\n            <!-- <mat-form-field appearance=\\\"fill\\\">\\r\\n                  <mat-label>Status</mat-label>\\r\\n                  <input matInput type=\\\"text\\\" placeholder=\\\"\\\" #exSys>\\r\\n                  <mat-icon matSuffix>person</mat-icon>\\r\\n                </mat-form-field> -->\\r\\n          </td>\\r\\n          <th>Created By:</th>\\r\\n          <td>\\r\\n            <mat-chip>{{tempStore?.modifiedBy}}</mat-chip>\\r\\n          </td>\\r\\n          <th>Authorized By:</th>\\r\\n          <td>\\r\\n            <mat-chip>{{tempStore?.authorizedBy}}</mat-chip>\\r\\n          </td>\\r\\n        </tr>\\r\\n        <tr>\\r\\n          <th>Modification No:</th>\\r\\n          <td>\\r\\n            <mat-chip>{{tempStore?.version}}</mat-chip>\\r\\n          </td>\\r\\n          <th>Creation Date:</th>\\r\\n          <td>\\r\\n            <mat-chip>{{tempStore?.modifiedTime | date: 'MM/dd/yyyy, h:mm a'}}</mat-chip>\\r\\n          </td>\\r\\n          <th>Authorization Date:</th>\\r\\n          <td>\\r\\n            <mat-chip>{{tempStore?.authorizedTime | date: 'MM/dd/yyyy, h:mm a'}}</mat-chip>\\r\\n          </td>\\r\\n          <th>Record Status:</th>\\r\\n          <td>\\r\\n            <mat-chip>{{tempStore?.recordStatus }}</mat-chip>\\r\\n          </td>\\r\\n        </tr>\\r\\n      </table>\\r\\n    </form>\\r\\n  </mat-card-content>\\r\\n</mat-card>\\r\\n<mat-card>\\r\\n  <p>Fetch the mapping you want to copy</p>\\r\\n  <p>Change to desired process code you want to copy. (that make currency empty)</p>\\r\\n  <p>Enter currency in currency field</p>\\r\\n  <p>Submit the form</p>\\r\\n</mat-card>\\r\\n<br><br><br><br><br><br>\"","export default \"<div fxLayout=\\\"row\\\">\\r\\n\\r\\n  <div fxFlex=\\\"25%\\\"></div>\\r\\n\\r\\n  <div fxFlex>\\r\\n    <mat-card>\\r\\n      <mat-card-title>\\r\\n        Excel Processing\\r\\n      </mat-card-title>\\r\\n      <mat-card-content>\\r\\n\\r\\n        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\">\\r\\n          <div fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"50\\\" class=\\\"pr-1\\\">\\r\\n\\r\\n            <!-- <div class=\\\"pb-1\\\">\\r\\n                <mat-form-field class=\\\"full-width\\\">\\r\\n                  <mat-label>External System</mat-label>\\r\\n                  <mat-select matNativeControl name=\\\"extSys\\\" #extSys1 (change)=\\\"getProcessName(extSys1.value)\\\">\\r\\n                    <mat-option value=\\\"\\\" disabled>Select Department</mat-option>\\r\\n                    <mat-option *ngFor=\\\"let report of extSysData\\\" [value]=\\\"report\\\">{{report.extSys}}</mat-option>\\r\\n                  </mat-select>\\r\\n                </mat-form-field>\\r\\n              </div> -->\\r\\n\\r\\n            <div class=\\\"pb-1\\\">\\r\\n              <mat-form-field class=\\\"full-width\\\">\\r\\n                <mat-label>External System</mat-label>\\r\\n                <mat-select name=\\\"ext\\\" #extSysName (selectionChange)=\\\"getProcess(extSysName.value)\\\">\\r\\n                  <mat-option *ngFor=\\\"let topping of extSysData1\\\" [value]=\\\"topping\\\">{{topping}}</mat-option>\\r\\n                </mat-select>\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n            <div class=\\\"pb-1\\\">\\r\\n              <mat-form-field class=\\\"full-width\\\">\\r\\n                <mat-label>Process Code</mat-label>\\r\\n                <mat-select #processCode (selectionChange)=\\\"getProcessName1(processCode.value,extSysName.value)\\\">\\r\\n                  <mat-option *ngFor=\\\"let topping of processName\\\" [value]=\\\"topping\\\">{{topping}}</mat-option>\\r\\n                </mat-select>\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n            <div class=\\\"pb-1\\\">\\r\\n\\r\\n              <mat-form-field class=\\\"full-width\\\">\\r\\n                <input matInput name=\\\"dateforData\\\" #dateforData [matDatepicker]=\\\"appDatepicker\\\" placeholder=\\\"Date\\\">\\r\\n\\r\\n                <mat-datepicker-toggle matSuffix [for]=\\\"appDatepicker\\\"></mat-datepicker-toggle>\\r\\n              </mat-form-field>\\r\\n              <mat-datepicker #appDatepicker></mat-datepicker>\\r\\n\\r\\n            </div>\\r\\n\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" fxLayoutGap=\\\"10px\\\" class=\\\"mt-4\\\">\\r\\n\\r\\n          <button mat-raised-button color=\\\"accent\\\" class=\\\"text-center full-width\\\" \\r\\n            (click)=\\\"finalSubmit(extSysName.value,processCode.value,dateforData.value)\\\">Process Data</button>\\r\\n          <!-- <button mat-raised-button type=\\\"reset\\\" color=\\\"accent\\\" class=\\\"text-center full-width\\\">Cancel</button> -->\\r\\n\\r\\n        </div>\\r\\n      </mat-card-content>\\r\\n    </mat-card>\\r\\n  </div>\\r\\n\\r\\n  <div fxFlex=\\\"25%\\\"></div>\\r\\n</div>\\r\\n<br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br>\"","export default \"<div fxLayout=\\\"row\\\">\\r\\n  <span fxFlex></span>\\r\\n  <div fxFlex=\\\"40%\\\">\\r\\n    <mat-card>\\r\\n      <mat-card-title></mat-card-title>\\r\\n      <mat-card-content>\\r\\n      <form #excelUpload=\\\"ngForm\\\" novalidate>\\r\\n        <div fxLayout=\\\"row\\\">\\r\\n          <div fxFlex=\\\"100\\\" class=\\\"pr-1\\\">\\r\\n            <div class=\\\"pb-1\\\">\\r\\n              <mat-form-field class=\\\"full-width\\\">\\r\\n                <mat-label>External System</mat-label>\\r\\n                <mat-select name=\\\"ext\\\" #extSysCode [(ngModel)]=\\\"selectExt\\\" #ext=\\\"ngModel\\\" (selectionChange)=\\\"getProcess(extSysCode.value)\\\" required>\\r\\n                  <mat-option *ngFor=\\\"let topping of extSysData1\\\" [value]=\\\"topping\\\">{{topping}}</mat-option>\\r\\n                </mat-select>\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div fxFlex=\\\"100\\\" class=\\\"pr-1\\\">\\r\\n            <div class=\\\"pb-1\\\">\\r\\n              <mat-form-field class=\\\"full-width\\\">\\r\\n                <mat-label>Process Code</mat-label>\\r\\n                <mat-select #processCode name=\\\"proCode\\\" required [(ngModel)]=\\\"pCode\\\" #proCode=\\\"ngModel\\\"  (selectionChange)=\\\"getProcessName1(processCode.value,extSysCode.value)\\\">\\r\\n                  <mat-option *ngFor=\\\"let topping of processName\\\" [value]=\\\"topping\\\">{{topping}}</mat-option>\\r\\n                </mat-select>\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n       \\r\\n          <div fxLayout=\\\"row\\\">\\r\\n            <div fxFlex=\\\"100\\\">\\r\\n              <div class=\\\"pb-1\\\">\\r\\n                Upload File : <input #myInput \\r\\n                     name=\\\"fupload\\\" [(ngModel)]=\\\"fileData\\\" #fupload=\\\"ngModel\\\"\\r\\n                     required type=\\\"file\\\" (change)=\\\"selectFile($event)\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" fxLayoutGap=\\\"10px\\\">\\r\\n\\r\\n            <button type=\\\"submit\\\" mat-raised-button color=\\\"primary\\\" [disabled]=\\\"!excelUpload.form.valid\\\" (click)=\\\"upload()\\\">Upload</button>\\r\\n            <button mat-raised-button color=\\\"warn\\\" (click)=\\\"reset()\\\">Reset</button>\\r\\n\\r\\n          </div>\\r\\n\\r\\n        </form>\\r\\n\\r\\n      </mat-card-content>\\r\\n    </mat-card>\\r\\n  </div>\\r\\n  <span fxFlex></span>\\r\\n</div>\\r\\n<br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br>\"","export default \"<mat-toolbar color=\\\"primary\\\"  style=\\\"height:30px; font-size: small;\\\">\\r\\n  <span>Process Code Mapping</span>\\r\\n</mat-toolbar>\\r\\n<br />\\r\\n<mat-card>\\r\\n  <!-- <mat-card-title>\\r\\n    External System Maintenance\\r\\n  </mat-card-title> -->\\r\\n  <mat-card-content>\\r\\n\\r\\n    <div fxLayout=\\\"row\\\">\\r\\n      <!-- filter commented -->\\r\\n      <!-- <div fxFlex=\\\"30\\\">\\r\\n        <div class=\\\"mt-12\\\">\\r\\n          <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\">\\r\\n            <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Filter\\\">\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n      </div> -->\\r\\n      <div fxLayout=\\\"row\\\" fxFlex=\\\"1 1 0%\\\" fxLayoutAlign=\\\"end center\\\" fxLayoutGap=\\\"5px\\\">\\r\\n        <button mat-raised-button color=\\\"primary\\\" routerLink=\\\"/sias-v2/extSystem\\\" *ngIf=\\\"roleCodes.new\\\"  >{{roleCodes.new.labelDescription}}</button>\\r\\n        <!-- <button mat-raised-button color=\\\"primary\\\" [routerLink]=\\\"'/sias/v2/ExcelMapping'\\\">Home</button> -->\\r\\n        <button mat-raised-button color=\\\"warn\\\" [routerLink]=\\\"'/dashboard'\\\">Exit</button>\\r\\n      </div>\\r\\n    </div>\\r\\n<br>\\r\\n    <div class=\\\"margin-333\\\">\\r\\n      <table mat-table [dataSource]=\\\"dataSource\\\" matSort matSortActive=\\\"creatorDtStamp\\\" matSortDirection=\\\"desc\\\">\\r\\n\\r\\n        <!-- Position Column -->\\r\\n        <ng-container matColumnDef=\\\"extSysName\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef >\\r\\n            External System Name</th>\\r\\n          <td mat-cell *matCellDef=\\\"let element \\\"  style=\\\"color:blue;\\\"> \\r\\n            <a (click)=\\\"getExtSys(element)\\\" routerLink=\\\"/sias-v2/updateMaintanance\\\">\\r\\n              {{element.extSysName}} </a></td>\\r\\n          <!-- <td mat-cell *matCellDef=\\\"let element;let i=index;\\\"><a (click)=\\\"getExtSys(i)\\\"> {{element.extSysName}} </a></td> -->\\r\\n        </ng-container>\\r\\n\\r\\n        <!-- Name Column -->\\r\\n        <ng-container matColumnDef=\\\"extSysCode\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef >\\r\\n            External System Code </th>\\r\\n          <td mat-cell *matCellDef=\\\"let element\\\" > {{element.extSysCode}} </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <!-- Weight Column -->\\r\\n        <!-- <ng-container matColumnDef=\\\"serviceCode\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef class=\\\"text-md-center font-weight-bold text-white border-bottom-0 \\\">\\r\\n            Service Code </th>\\r\\n          <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"text-md-center \\\"> {{element.serviceCode}} </td>\\r\\n        </ng-container> -->\\r\\n        <ng-container matColumnDef=\\\"processCode\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef >\\r\\n            Process Code </th>\\r\\n          <td mat-cell *matCellDef=\\\"let element\\\" > {{element.processCode}} </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"authStatus\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef >\\r\\n            Status </th>\\r\\n          <td mat-cell *matCellDef=\\\"let element\\\" > {{element.authStatus}} </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <!-- Symbol Column -->\\r\\n       <ng-container matColumnDef=\\\"creatorDtStamp\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header>\\r\\n           &nbsp;&nbsp; Date </th>\\r\\n          <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"text-md-center \\\"> {{element.creatorDtStamp | date}} </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <!-- <ng-container matColumnDef=\\\"index\\\">\\r\\n                  <mat-header-cell *matHeaderCellDef> Index </mat-header-cell>\\r\\n                  <mat-cell *matCellDef=\\\"let element; let i = index;\\\">{{(pageIndex*pageSize)+i}}</mat-cell>\\r\\n                </ng-container> -->\\r\\n        <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n        <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns\\\"></tr>\\r\\n      </table>\\r\\n\\r\\n      <mat-paginator (page)='onPaginateChange($event)' [pageSize]='pageSize' [pageSizeOptions]=\\\"[5, 10, 20]\\\"\\r\\n        showFirstLastButtons></mat-paginator>\\r\\n\\r\\n    </div>\\r\\n  </mat-card-content>\\r\\n</mat-card>\\r\\n<br><br><br><br><br><br><br><br><br>\\r\\n\"","export default \"<mat-toolbar color=\\\"primary\\\" style=\\\"height:30px; font-size: small;\\\">\\r\\n    <span>Process Code Mapping</span>\\r\\n  </mat-toolbar>\\r\\n  <br>\\r\\n  <form #fn=\\\"ngForm\\\" novalidate>\\r\\n    <mat-card style=\\\"width: 100%\\\">\\r\\n      <div fxLayout=\\\"row wrap\\\">\\r\\n        <div fxFlex=\\\"100\\\">\\r\\n          <div fxFlex=\\\"25\\\">\\r\\n              <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\">\\r\\n                  <mat-label >External System Code</mat-label>\\r\\n                  <mat-select name=\\\"extSysCode\\\" #extSysCode (selectionChange)=\\\"getProcess(extSysCode.value)\\\"\\r\\n                    [(ngModel)]=\\\"createExtSys1.extSysCode\\\" #extSysCode=\\\"ngModel\\\" required>\\r\\n                    <mat-option *ngFor=\\\"let topping of data\\\" [value]=\\\"topping\\\">{{topping.extSysCode}}\\r\\n                    </mat-option>\\r\\n                  </mat-select>\\r\\n                </mat-form-field>\\r\\n                <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\">\\r\\n                    <mat-label >Process Code</mat-label>\\r\\n                    <input matInput type=\\\"text\\\" [(ngModel)]=\\\"createExtSys1.processCode\\\" name=\\\"processCode\\\" #processCode=\\\"ngModel\\\"\\r\\n                      required  (keyup)=\\\"fun(createExtSys1.processCode)\\\">\\r\\n                  </mat-form-field>\\r\\n           <br>\\r\\n           <mat-checkbox (change)=\\\"treasuryRequired($event)\\\" >Treasury Reference Required</mat-checkbox>\\r\\n           <br>\\r\\n           <mat-checkbox (change)=\\\"checkCheckBoxvalue1($event)\\\">Auto Upload</mat-checkbox>\\r\\n           <br><br>\\r\\n           <mat-checkbox (change)=\\\"checkCheckBoxvalue($event)\\\">Back Dating</mat-checkbox>\\r\\n           <br><br>\\r\\n           <mat-checkbox (change)=getValue($event)>Future Dating</mat-checkbox>\\r\\n           <br><br><br>\\r\\n           <mat-checkbox (change)=getValueOfFCYrateVariance($event)>FCY Exchange Rate Variance</mat-checkbox>\\r\\n           <mat-checkbox (change)=getValue2($event)> Cross Financial Transaction.</mat-checkbox>\\r\\n             \\r\\n              \\r\\n               <mat-checkbox (change)=getValueMfI($event)>Mandatory Field Impose</mat-checkbox>\\r\\n               <div><mat-checkbox (change)=getValueSftp($event)>SFTP Required</mat-checkbox></div>\\r\\n               <div>\\r\\n                 <mat-checkbox (change)=\\\"getwuFileValue($event)\\\">WU File Upload</mat-checkbox>\\r\\n               </div>\\r\\n          </div>\\r\\n          <div fxFlex=\\\"25\\\">\\r\\n              <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\">\\r\\n                  <mat-label style=\\\"color: black\\\">External System Name</mat-label>\\r\\n                  <input matInput type=\\\"text\\\" [(ngModel)]=\\\"createExtSys1.extSysName\\\" name=\\\"extSysName\\\" #extSysName=\\\"ngModel\\\"\\r\\n                    readonly required>\\r\\n                </mat-form-field>\\r\\n                <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\">\\r\\n                    <mat-label>Maximum Upload Limit</mat-label>\\r\\n                    <input matInput type=\\\"number\\\" [(ngModel)]=\\\"createExtSys1.maxUploadLimit\\\" name=\\\"maxUploadLimit\\\"\\r\\n                      #maxUploadLimit=\\\"ngModel\\\" required>\\r\\n                  </mat-form-field>\\r\\n                  <br><br>\\r\\n                  <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\" style=\\\"color: black\\\">\\r\\n                      <mat-label style=\\\"color: black\\\">File Name</mat-label>\\r\\n                      <input matInput type=\\\"text\\\" #fileName [(ngModel)]=\\\"createExtSys1.fileName\\\" name=\\\"fileName\\\"\\r\\n                        [disabled]=\\\"!enablefilebrowser\\\" required>\\r\\n                    </mat-form-field>\\r\\n                    <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\" style=\\\"color: black\\\">\\r\\n                        <mat-label style=\\\"color: black\\\">Back Dating</mat-label>\\r\\n                        <input matInput type=\\\"text\\\" [(ngModel)]=\\\"createExtSys1.bdav\\\" name=\\\"bdav\\\" [disabled]=\\\"!backdate\\\" required>\\r\\n                      </mat-form-field>\\r\\n                      <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\">\\r\\n                          <mat-label>Future Dating</mat-label>\\r\\n                          <input matInput type=\\\"text\\\" [(ngModel)]=\\\"createExtSys1.fdav\\\" name=\\\"fdav\\\" [disabled]=\\\"!is_edit1\\\" required>\\r\\n                        </mat-form-field><br>\\r\\n                        <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\" style=\\\"margin-inline: 150px;\\\">\\r\\n                            <mat-label>FCY Exchange Rate Variance percentage</mat-label>\\r\\n                            <input matInput type=\\\"text\\\" [(ngModel)]=\\\"createExtSys1.fCYPercentage\\\" name=\\\"fCYPercentage\\\"\\r\\n                              [disabled]=\\\"!is_edit\\\" required>\\r\\n                          </mat-form-field>\\r\\n          </div>\\r\\n          <div fxFlex=\\\"25\\\">\\r\\n            <div style=\\\"top: 30%;position: absolute;\\\">\\r\\n                <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\" *ngIf=\\\"enablefilebrowser\\\">\\r\\n                    <mat-label>File Path</mat-label>\\r\\n                    <input matInput type=\\\"text\\\" #filePath [(ngModel)]=\\\"createExtSys1.filePath\\\" name=\\\"filePath\\\" required>\\r\\n                  </mat-form-field>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div fxFlex=\\\"25\\\" *ngIf=\\\"is_sftp\\\">\\r\\n            <div>SFTP Details</div>\\r\\n              <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\">\\r\\n                  <mat-label>User Name</mat-label>\\r\\n                  <input matInput type=\\\"text\\\" placeholder=\\\"Username\\\" [(ngModel)]=\\\"createExtSys1.sftpUsername\\\"\\r\\n                    name=\\\"sftpUsername\\\" required>\\r\\n                </mat-form-field>\\r\\n                <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\">\\r\\n                    <mat-label>Password</mat-label>\\r\\n                    <input matInput type=\\\"text\\\" placeholder=\\\"Password\\\" [(ngModel)]=\\\"createExtSys1.sftpPassword\\\"\\r\\n                      name=\\\"sftpPassword\\\" required>\\r\\n                  </mat-form-field>\\r\\n                  <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\">\\r\\n                      <mat-label>IP Address</mat-label>\\r\\n                      <input matInput type=\\\"text\\\" [(ngModel)]=\\\"createExtSys1.sftpIpaddress\\\" placeholder=\\\"IPaddress\\\"\\r\\n                        name=\\\"sftpIpaddress\\\" required>\\r\\n                    </mat-form-field>\\r\\n                    <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\">\\r\\n                        <mat-label>Port</mat-label>\\r\\n                        <input matInput type=\\\"text\\\" [(ngModel)]=\\\"createExtSys1.sftpPort\\\" name=\\\"sftpPort\\\" placeholder=\\\"Port\\\"\\r\\n                          required>\\r\\n                      </mat-form-field>\\r\\n                      <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\">\\r\\n                          <mat-label>Path</mat-label>\\r\\n                          <input matInput type=\\\"text\\\" [(ngModel)]=\\\"createExtSys1.sftpPath\\\" name=\\\"path\\\" placeholder=\\\"Path\\\" required>\\r\\n                        </mat-form-field>\\r\\n          </div>\\r\\n          \\r\\n        </div>\\r\\n        <div style=\\\"margin-left: 50%\\\">\\r\\n            <button #saveBtn type=\\\"submit\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"save(extSysCode.value)\\\"\\r\\n              [disabled]=\\\"!fn.form.valid  &&!savebutton ||enablesubmit ||!space\\\" *ngIf=\\\"!savebutton||!is_sftp ||enablesubmit||!space\\\">Save</button>&nbsp;\\r\\n            <button mat-raised-button color=\\\"warn\\\" [routerLink]=\\\"'/sias-v2/ExtSysList'\\\">Exit</button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </mat-card>\\r\\n  </form>\\r\\n  <!-- <form #fn=\\\"ngForm\\\" novalidate>\\r\\n      <mat-card>\\r\\n      <div fxLayout=\\\"row wrap\\\">\\r\\n        <div fxFlex=\\\"100\\\">\\r\\n          <div fxFlex=\\\"60\\\">\\r\\n            <div fxFlex=\\\"50\\\">\\r\\n                <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\">\\r\\n                    <mat-label>External System Code</mat-label>\\r\\n                    <mat-select name=\\\"extSysCode\\\" #extSysCode (selectionChange)=\\\"getProcess(extSysCode.value)\\\"\\r\\n                      [(ngModel)]=\\\"createExtSys1.extSysCode\\\" #extSysCode=\\\"ngModel\\\" required>\\r\\n                      <mat-option *ngFor=\\\"let topping of data\\\" [value]=\\\"topping\\\">{{topping.extSysCode}}\\r\\n                      </mat-option>\\r\\n                    </mat-select>\\r\\n                  </mat-form-field>\\r\\n               <div>\\r\\n                  <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\">\\r\\n                      <mat-label>Process code</mat-label>\\r\\n                      <input matInput type=\\\"text\\\" [(ngModel)]=\\\"createExtSys1.processCode\\\" name=\\\"processCode\\\" #processCode=\\\"ngModel\\\"\\r\\n                        required>\\r\\n                    </mat-form-field>\\r\\n               </div>\\r\\n               <div>\\r\\n                  <mat-checkbox (change)=\\\"treasuryRequired($event)\\\">Treasury Reference Required</mat-checkbox>\\r\\n               </div>\\r\\n               <div>\\r\\n                  <mat-checkbox (change)=\\\"checkCheckBoxvalue1($event)\\\">Auto Upload</mat-checkbox>\\r\\n               </div>\\r\\n               <br><br><br>\\r\\n               <div>\\r\\n                 \\r\\n                  <mat-checkbox (change)=\\\"checkCheckBoxvalue($event)\\\">Back Dating</mat-checkbox>\\r\\n               </div>\\r\\n               <br>\\r\\n               <div>\\r\\n                  <mat-checkbox (change)=getValue($event)>Future Dating</mat-checkbox>\\r\\n               </div>\\r\\n               <br>\\r\\n               <div>\\r\\n                  <mat-checkbox (change)=getValueOfFCYrateVariance($event)>FCY Exchange Rate Variance</mat-checkbox>\\r\\n               </div>\\r\\n               <mat-checkbox (change)=getValue2($event)> Cross Financial Transaction.</mat-checkbox>\\r\\n             \\r\\n              \\r\\n               <mat-checkbox (change)=getValueMfI($event)>Mandatory Field Impose</mat-checkbox>\\r\\n               <div><mat-checkbox (change)=getValueSftp($event)>SFTP Required</mat-checkbox></div>\\r\\n            </div>\\r\\n            <div fxFlex=\\\"35\\\">\\r\\n                <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\">\\r\\n                    <mat-label>External system name</mat-label>\\r\\n                    <input matInput type=\\\"text\\\" [(ngModel)]=\\\"createExtSys1.extSysName\\\" name=\\\"extSysName\\\" #extSysName=\\\"ngModel\\\"\\r\\n                      readonly required>\\r\\n                  </mat-form-field>\\r\\n               \\r\\n                <div>\\r\\n                    <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\">\\r\\n                        <mat-label>Maximum Upload Limit</mat-label>\\r\\n                        <input matInput type=\\\"number\\\" [(ngModel)]=\\\"createExtSys1.maxUploadLimit\\\" name=\\\"maxUploadLimit\\\"\\r\\n                          #maxUploadLimit=\\\"ngModel\\\" required>\\r\\n                      </mat-form-field>\\r\\n                  </div>\\r\\n                  <br>\\r\\n                  <div>\\r\\n                      <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\">\\r\\n                          <mat-label>File Name</mat-label>\\r\\n                          <input matInput type=\\\"text\\\" #fileName [(ngModel)]=\\\"createExtSys1.fileName\\\" name=\\\"fileName\\\"\\r\\n                            [disabled]=\\\"!enablefilebrowser\\\" required>\\r\\n                        </mat-form-field>\\r\\n                        <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\" *ngIf=\\\"enablefilebrowser\\\">\\r\\n                          <mat-label>File Path</mat-label>\\r\\n                          <input matInput type=\\\"text\\\" #filePath [(ngModel)]=\\\"createExtSys1.filePath\\\" name=\\\"filePath\\\" required>\\r\\n                        </mat-form-field>\\r\\n                  </div>\\r\\n                  <div>\\r\\n                      <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\">\\r\\n                          <mat-label>Back Dating</mat-label>\\r\\n                          <input matInput type=\\\"text\\\" [(ngModel)]=\\\"createExtSys1.bdav\\\" name=\\\"bdav\\\" [disabled]=\\\"!is_edit\\\" required>\\r\\n                        </mat-form-field>\\r\\n                  </div>\\r\\n                  <div>\\r\\n                      <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\">\\r\\n                          <mat-label>Future Dating</mat-label>\\r\\n                          <input matInput type=\\\"text\\\" [(ngModel)]=\\\"createExtSys1.fdav\\\" name=\\\"fdav\\\" [disabled]=\\\"!is_edit1\\\" required>\\r\\n                        </mat-form-field>\\r\\n                  </div>\\r\\n                  <div>\\r\\n                      <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\" style=\\\"margin-inline: 150px;\\\">\\r\\n                          <mat-label>FCY Exchange Rate Variance percentage</mat-label>\\r\\n                          <input matInput type=\\\"text\\\" [(ngModel)]=\\\"createExtSys1.fCYPercentage\\\" name=\\\"fCYPercentage\\\"\\r\\n                            [disabled]=\\\"!is_edit1\\\" required>\\r\\n                        </mat-form-field>\\r\\n                  </div>\\r\\n            </div>\\r\\n           \\r\\n            \\r\\n          </div>\\r\\n          <div fxFlex=\\\"20\\\" fxFlexAlign=\\\"start\\\">\\r\\n            <span style=\\\"margin-left: 25%\\\">SFTP Details</span> \\r\\n              <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\">\\r\\n                  <mat-label>Username</mat-label>\\r\\n                  <input matInput type=\\\"text\\\" placeholder=\\\"Username\\\" [(ngModel)]=\\\"createExtSys1.sftpUsername\\\"\\r\\n                    name=\\\"sftpUsername\\\" required>\\r\\n                </mat-form-field>\\r\\n                <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\">\\r\\n                    <mat-label>Password</mat-label>\\r\\n                    <input matInput type=\\\"text\\\" placeholder=\\\"Password\\\" [(ngModel)]=\\\"createExtSys1.sftpPassword\\\"\\r\\n                      name=\\\"sftpPassword\\\" required>\\r\\n                  </mat-form-field>\\r\\n                  <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\">\\r\\n                      <mat-label>IPaddress</mat-label>\\r\\n                      <input matInput type=\\\"text\\\" [(ngModel)]=\\\"createExtSys1.sftpIpaddress\\\" placeholder=\\\"IPaddress\\\"\\r\\n                        name=\\\"sftpIpaddress\\\" required>\\r\\n                    </mat-form-field>\\r\\n                    <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\">\\r\\n                        <mat-label>Port</mat-label>\\r\\n                        <input matInput type=\\\"text\\\" [(ngModel)]=\\\"createExtSys1.sftpPort\\\" name=\\\"sftpPort\\\" placeholder=\\\"Port\\\"\\r\\n                          required>\\r\\n                      </mat-form-field>\\r\\n                      <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\">\\r\\n                          <mat-label>Path</mat-label>\\r\\n                          <input matInput type=\\\"text\\\" [(ngModel)]=\\\"createExtSys1.sftpPath\\\" name=\\\"path\\\" placeholder=\\\"Path\\\" required>\\r\\n                        </mat-form-field>\\r\\n          </div>\\r\\n        </div>\\r\\n    \\r\\n      </div>\\r\\n      <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" fxLayoutGap=\\\"10px\\\">\\r\\n          <button #saveBtn type=\\\"submit\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"save(extSysCode.value)\\\"\\r\\n            [disabled]=\\\"!fn.form.valid\\\" *ngIf=\\\"!savebutton||!is_sftp\\\">Save</button>\\r\\n          <button mat-raised-button color=\\\"warn\\\" [routerLink]=\\\"'/sias-v2/ExtSysList'\\\">Exit</button>\\r\\n      </div>\\r\\n    </mat-card>\\r\\n    </form> -->\\r\\n  <!-- <form #fn=\\\"ngForm\\\" novalidate>\\r\\n      <mat-card >\\r\\n        \\r\\n        <div fxLayout=\\\"row wrap\\\">\\r\\n          <div fxFlex=\\\"20\\\"></div>\\r\\n          <div fxFlex=\\\"100\\\">\\r\\n            <div fxFlex=\\\"30\\\">\\r\\n                <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\">\\r\\n                    <mat-label>External System Code</mat-label>\\r\\n                    <mat-select name=\\\"extSysCode\\\" #extSysCode (selectionChange)=\\\"getProcess(extSysCode.value)\\\"\\r\\n                      [(ngModel)]=\\\"createExtSys1.extSysCode\\\" #extSysCode=\\\"ngModel\\\" required>\\r\\n                      <mat-option *ngFor=\\\"let topping of data\\\" [value]=\\\"topping\\\">{{topping.extSysCode}}\\r\\n                      </mat-option>\\r\\n                    </mat-select>\\r\\n                  </mat-form-field>\\r\\n                 \\r\\n            </div>\\r\\n            <div fxFlex=\\\"30\\\">\\r\\n              \\r\\n            <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\">\\r\\n                <mat-label>External system name</mat-label>\\r\\n                <input matInput type=\\\"text\\\" [(ngModel)]=\\\"createExtSys1.extSysName\\\" name=\\\"extSysName\\\" #extSysName=\\\"ngModel\\\"\\r\\n                  readonly required>\\r\\n              </mat-form-field>\\r\\n              \\r\\n\\r\\n            </div>\\r\\n            <div fxFlex=\\\"10\\\" *ngIf=\\\"is_sftp\\\">SFTP Details\\r\\n                \\r\\n            </div>\\r\\n  \\r\\n          </div>\\r\\n  \\r\\n        </div>\\r\\n        <div fxLayout=\\\"row wrap\\\">\\r\\n            <div fxFlex=\\\"20\\\"></div>\\r\\n            <div fxFlex=\\\"100\\\">\\r\\n              <div fxFlex=\\\"30\\\">\\r\\n                  <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\">\\r\\n                      <mat-label>Process code</mat-label>\\r\\n                      <input matInput type=\\\"text\\\" [(ngModel)]=\\\"createExtSys1.processCode\\\" name=\\\"processCode\\\" #processCode=\\\"ngModel\\\"\\r\\n                        required>\\r\\n                    </mat-form-field>\\r\\n                   \\r\\n              </div>\\r\\n              <div fxFlex=\\\"30\\\">\\r\\n                \\r\\n                  <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\">\\r\\n                      <mat-label>Maximum Upload Limit</mat-label>\\r\\n                      <input matInput type=\\\"number\\\" [(ngModel)]=\\\"createExtSys1.maxUploadLimit\\\" name=\\\"maxUploadLimit\\\"\\r\\n                        #maxUploadLimit=\\\"ngModel\\\" required>\\r\\n                    </mat-form-field>\\r\\n                \\r\\n  \\r\\n              </div>\\r\\n              <div fxFlex=\\\"10\\\" *ngIf=\\\"is_sftp\\\">\\r\\n                  <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\">\\r\\n                      <mat-label>Username</mat-label>\\r\\n                      <input matInput type=\\\"text\\\"\\r\\n                      placeholder=\\\"Username\\\"  [(ngModel)]=\\\"createExtSys1.userName\\\" name=\\\"userName\\\"\\r\\n                        required>\\r\\n                    </mat-form-field>\\r\\n              </div>\\r\\n    \\r\\n            </div>\\r\\n    \\r\\n          </div>          \\r\\n          <div fxLayout=\\\"row wrap\\\">\\r\\n              <div fxFlex=\\\"20\\\"></div>\\r\\n              <div fxFlex=\\\"100\\\">\\r\\n                <div fxFlex=\\\"30\\\">\\r\\n                    <mat-checkbox (change)=\\\"checkCheckBoxvalue1($event)\\\">Auto Upload</mat-checkbox>\\r\\n                     \\r\\n                </div>\\r\\n                <div fxFlex=\\\"30\\\">\\r\\n                    <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\">\\r\\n                        <mat-label>File Name</mat-label>\\r\\n                        <input matInput type=\\\"text\\\" #fileName [(ngModel)]=\\\"createExtSys1.fileName\\\" name=\\\"fileName\\\"\\r\\n                          [disabled]=\\\"!enablefilebrowser\\\" required>\\r\\n                      </mat-form-field>\\r\\n                      <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\" *ngIf=\\\"enablefilebrowser\\\">\\r\\n                        <mat-label>File Path</mat-label>\\r\\n                        <input matInput type=\\\"text\\\" #filePath [(ngModel)]=\\\"createExtSys1.filePath\\\" name=\\\"filePath\\\" required>\\r\\n                      </mat-form-field>\\r\\n                  \\r\\n    \\r\\n                </div>\\r\\n                <div fxFlex=\\\"10\\\" *ngIf=\\\"is_sftp\\\">\\r\\n                    <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\">\\r\\n                        <mat-label>Password</mat-label>\\r\\n                        <input matInput type=\\\"text\\\" \\r\\n                        placeholder=\\\"Password\\\" [(ngModel)]=\\\"createExtSys1.password\\\" name=\\\"password\\\"\\r\\n                          required>\\r\\n                      </mat-form-field>\\r\\n                </div>\\r\\n      \\r\\n              </div>\\r\\n      \\r\\n            </div>\\r\\n            <div fxLayout=\\\"row wrap\\\">\\r\\n                <div fxFlex=\\\"20\\\"></div>\\r\\n                <div fxFlex=\\\"100\\\">\\r\\n                  <div fxFlex=\\\"30\\\">\\r\\n                      <mat-checkbox (change)=\\\"checkCheckBoxvalue($event)\\\">Back Dating</mat-checkbox>\\r\\n                       \\r\\n                  </div>\\r\\n                  <div fxFlex=\\\"30\\\">\\r\\n                    \\r\\n                      <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\">\\r\\n                          <mat-label>Back Dating</mat-label>\\r\\n                          <input matInput type=\\\"text\\\" [(ngModel)]=\\\"createExtSys1.bdav\\\" name=\\\"bdav\\\" [disabled]=\\\"!is_edit\\\" required>\\r\\n                        </mat-form-field>\\r\\n                    \\r\\n      \\r\\n                  </div>\\r\\n                  <div fxFlex=\\\"10\\\" *ngIf=\\\"is_sftp\\\">\\r\\n                      <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\">\\r\\n                          <mat-label>Port</mat-label>\\r\\n                          <input matInput type=\\\"text\\\" [(ngModel)]=\\\"createExtSys1.sftpPort\\\" name=\\\"port\\\" placeholder=\\\"Port\\\" required>\\r\\n                        </mat-form-field>\\r\\n                  </div>\\r\\n        \\r\\n                </div>\\r\\n        \\r\\n              </div>\\r\\n              <div fxLayout=\\\"row wrap\\\">\\r\\n                  <div fxFlex=\\\"20\\\"></div>\\r\\n                  <div fxFlex=\\\"100\\\">\\r\\n                    <div fxFlex=\\\"30\\\">\\r\\n                        <mat-checkbox (change)=getValue($event)>Future Dating</mat-checkbox>\\r\\n                         \\r\\n                    </div>\\r\\n                    <div fxFlex=\\\"30\\\">\\r\\n                      \\r\\n                      \\r\\n        <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\">\\r\\n            <mat-label>Future Dating</mat-label>\\r\\n            <input matInput type=\\\"text\\\" [(ngModel)]=\\\"createExtSys1.fdav\\\" name=\\\"fdav\\\" [disabled]=\\\"!is_edit1\\\" required>\\r\\n          </mat-form-field>\\r\\n                      \\r\\n        \\r\\n                    </div>\\r\\n                    <div fxFlex=\\\"10\\\" *ngIf=\\\"is_sftp\\\"> \\r\\n                        <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\">\\r\\n                            <mat-label>IP address</mat-label>\\r\\n                            <input matInput type=\\\"text\\\"  [(ngModel)]=\\\"createExtSys1.ipAddress\\\"\\r\\n                            placeholder=\\\"IP address\\\" name=\\\"ipAddress\\\"\\r\\n                              required>\\r\\n                          </mat-form-field>\\r\\n                    </div>\\r\\n          \\r\\n                  </div>\\r\\n          \\r\\n                </div>\\r\\n                <div fxLayout=\\\"row wrap\\\">\\r\\n                    <div fxFlex=\\\"20\\\"></div>\\r\\n                    <div fxFlex=\\\"100\\\">\\r\\n                      <div fxFlex=\\\"30\\\">\\r\\n                          <mat-checkbox (change)=getValueOfFCYrateVariance($event)>FCY Exchange Rate Variance</mat-checkbox>\\r\\n  \\r\\n  \\r\\n  \\r\\n                           \\r\\n                      </div>\\r\\n                      <div fxFlex=\\\"30\\\">\\r\\n                        \\r\\n                        \\r\\n                          <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\" style=\\\"margin-inline: 150px;\\\">\\r\\n                              <mat-label>FCY Exchange Rate Variance percentage</mat-label>\\r\\n                              <input matInput type=\\\"text\\\" [(ngModel)]=\\\"createExtSys1.fCYPercentage\\\" name=\\\"fCYPercentage\\\"\\r\\n                                [disabled]=\\\"!is_edit1\\\" required>\\r\\n                            </mat-form-field>\\r\\n                        \\r\\n          \\r\\n                      </div>\\r\\n                      <div fxFlex=\\\"10\\\" *ngIf=\\\"is_sftp\\\">\\r\\n                          <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\">\\r\\n                              <mat-label>Path</mat-label>\\r\\n                              <input matInput type=\\\"text\\\" [(ngModel)]=\\\"createExtSys1.sftpPath\\\" name=\\\"path\\\" placeholder=\\\"Path\\\" required>\\r\\n                            </mat-form-field>\\r\\n                      </div>\\r\\n            \\r\\n                    </div>\\r\\n            \\r\\n                  </div>\\r\\n                  <div fxLayout=\\\"row wrap\\\">\\r\\n                      <div fxFlex=\\\"20\\\"></div>\\r\\n                      <div fxFlex=\\\"100\\\">\\r\\n                        <div fxFlex=\\\"30\\\">\\r\\n                            <mat-checkbox (change)=getValue2($event)> Cross Financial Transaction.</mat-checkbox>\\r\\n                            <mat-checkbox (change)=\\\"treasuryRequired($event)\\\">Treasury Reference Required</mat-checkbox>\\r\\n                           \\r\\n                            <mat-checkbox (change)=getValueMfI($event)>Mandatory Field Impose</mat-checkbox>\\r\\n                            <div><mat-checkbox (change)=getValueSftp($event)>SFTP Required</mat-checkbox></div>\\r\\n                        </div>\\r\\n                        <div fxFlex=\\\"30\\\">\\r\\n                          \\r\\n                          \\r\\n                          \\r\\n            \\r\\n                        </div>\\r\\n                        <div fxFlex=\\\"10\\\">\\r\\n                           \\r\\n                        </div>\\r\\n              \\r\\n                      </div>\\r\\n              \\r\\n                    </div>\\r\\n                    <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" fxLayoutGap=\\\"10px\\\">\\r\\n                        <button #saveBtn type=\\\"submit\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"save(extSysCode.value)\\\"\\r\\n                          [disabled]=\\\"!fn.form.valid\\\" *ngIf=\\\"!savebutton||!is_sftp\\\">Save</button>\\r\\n                        <button mat-raised-button color=\\\"warn\\\" [routerLink]=\\\"'/sias-v2/ExtSysList'\\\">Exit</button>\\r\\n                    </div>\\r\\n\\r\\n      </mat-card>\\r\\n    </form> -->\\r\\n <!-- <form>\\r\\n    <mat-card>\\r\\n      <div fxLayout=\\\"row wrap\\\">\\r\\n        <div fxFlex=\\\"70\\\">\\r\\n        <div fxFlex=\\\"35\\\">\\r\\n            <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\">\\r\\n                <mat-label>External System Code</mat-label>\\r\\n                <mat-select name=\\\"extSysCode\\\" #extSysCode (selectionChange)=\\\"getProcess(extSysCode.value)\\\"\\r\\n                  [(ngModel)]=\\\"createExtSys1.extSysCode\\\" #extSysCode=\\\"ngModel\\\" required>\\r\\n                  <mat-option *ngFor=\\\"let topping of data\\\" [value]=\\\"topping\\\">{{topping.extSysCode}}\\r\\n                  </mat-option>\\r\\n                </mat-select>\\r\\n              </mat-form-field>\\r\\n              <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\">\\r\\n                  <mat-label>Process code</mat-label>\\r\\n                  <input matInput type=\\\"text\\\" [(ngModel)]=\\\"createExtSys1.processCode\\\" name=\\\"processCode\\\" #processCode=\\\"ngModel\\\"\\r\\n                    required>\\r\\n                </mat-form-field>\\r\\n                <mat-checkbox (change)=\\\"treasuryRequired($event)\\\">Treasury Reference Required</mat-checkbox>\\r\\n             \\r\\n              \\r\\n        </div>\\r\\n        \\r\\n        <div fxFlex=\\\"35\\\">\\r\\n            <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\">\\r\\n                <mat-label>External system name</mat-label>\\r\\n                <input matInput type=\\\"text\\\" [(ngModel)]=\\\"createExtSys1.extSysName\\\" name=\\\"extSysName\\\" #extSysName=\\\"ngModel\\\"\\r\\n                  readonly required>\\r\\n              </mat-form-field>\\r\\n              <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\">\\r\\n                  <mat-label>Maximum Upload Limit</mat-label>\\r\\n                  <input matInput type=\\\"number\\\" [(ngModel)]=\\\"createExtSys1.maxUploadLimit\\\" name=\\\"maxUploadLimit\\\"\\r\\n                    #maxUploadLimit=\\\"ngModel\\\" required>\\r\\n                </mat-form-field>\\r\\n               \\r\\n                 \\r\\n        </div>\\r\\n        <div>\\r\\n          SFTP Details\\r\\n        </div>\\r\\n        \\r\\n       <div>\\r\\n         \\r\\n       </div>\\r\\n        </div>\\r\\n        <div>\\r\\n          \\r\\n        </div>\\r\\n       \\r\\n\\r\\n      </div>\\r\\n      <div fxLayout=\\\"row wrap\\\">\\r\\n          <div fxFlex=\\\"70\\\">\\r\\n          <div fxFlex=\\\"35\\\">\\r\\n              \\r\\n                \\r\\n              <mat-checkbox (change)=\\\"checkCheckBoxvalue1($event)\\\">Auto Upload</mat-checkbox>\\r\\n                 \\r\\n                \\r\\n          </div>\\r\\n          <div fxFlex=\\\"35\\\">\\r\\n            <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\">\\r\\n                <mat-label>File Name</mat-label>\\r\\n                <input matInput type=\\\"text\\\" #fileName [(ngModel)]=\\\"createExtSys1.fileName\\\" name=\\\"fileName\\\"\\r\\n                  [disabled]=\\\"!enablefilebrowser\\\" required>\\r\\n              </mat-form-field>\\r\\n              <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\" *ngIf=\\\"enablefilebrowser\\\">\\r\\n                <mat-label>File Path</mat-label>\\r\\n                <input matInput type=\\\"text\\\" #filePath [(ngModel)]=\\\"createExtSys1.filePath\\\" name=\\\"filePath\\\" required>\\r\\n              </mat-form-field>\\r\\n                 \\r\\n                   \\r\\n          </div>\\r\\n          \\r\\n          </div>\\r\\n          <div>\\r\\n            \\r\\n          </div>\\r\\n          \\r\\n        </div>\\r\\n        <div fxLayout=\\\"row wrap\\\">\\r\\n            <div fxFlex=\\\"70\\\">\\r\\n            <div fxFlex=\\\"35\\\">\\r\\n                \\r\\n                  \\r\\n                <mat-checkbox (change)=\\\"checkCheckBoxvalue($event)\\\">Back Dating</mat-checkbox>\\r\\n                   \\r\\n                  \\r\\n            </div>\\r\\n            <div fxFlex=\\\"35\\\">\\r\\n                <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\">\\r\\n                    <mat-label>Back Dating</mat-label>\\r\\n                    <input matInput type=\\\"text\\\" [(ngModel)]=\\\"createExtSys1.bdav\\\" name=\\\"bdav\\\" [disabled]=\\\"!is_edit\\\" required>\\r\\n                  </mat-form-field>\\r\\n                     \\r\\n            </div>\\r\\n            </div>\\r\\n            <div>\\r\\n              \\r\\n            </div>\\r\\n            \\r\\n          </div>\\r\\n          <div fxLayout=\\\"row wrap\\\">\\r\\n              <div fxFlex=\\\"70\\\">\\r\\n              <div fxFlex=\\\"35\\\">\\r\\n                  \\r\\n                    \\r\\n                  <mat-checkbox (change)=getValue($event)>Future Dating</mat-checkbox>\\r\\n                     \\r\\n                    \\r\\n              </div>\\r\\n              <div fxFlex=\\\"35\\\">\\r\\n                  <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\">\\r\\n                      <mat-label>Future Dating</mat-label>\\r\\n                      <input matInput type=\\\"text\\\" [(ngModel)]=\\\"createExtSys1.fdav\\\" name=\\\"fdav\\\" [disabled]=\\\"!is_edit1\\\" required>\\r\\n                    </mat-form-field>\\r\\n                       \\r\\n              </div>\\r\\n              </div>\\r\\n              <div>\\r\\n                \\r\\n              </div>\\r\\n              \\r\\n            </div>\\r\\n            <div fxLayout=\\\"row wrap\\\">\\r\\n                <div fxFlex=\\\"70\\\">\\r\\n                <div fxFlex=\\\"35\\\">\\r\\n                    \\r\\n                      \\r\\n                    <mat-checkbox (change)=getValueOfFCYrateVariance($event)>FCY Exchange Rate Variance</mat-checkbox>\\r\\n                       \\r\\n                      \\r\\n                </div>\\r\\n                <div fxFlex=\\\"35\\\">\\r\\n                    <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\" style=\\\"margin-inline: 150px;\\\">\\r\\n                        <mat-label>FCY Exchange Rate Variance percentage</mat-label>\\r\\n                        <input matInput type=\\\"text\\\" [(ngModel)]=\\\"createExtSys1.fCYPercentage\\\" name=\\\"fCYPercentage\\\"\\r\\n                          [disabled]=\\\"!is_edit1\\\" required>\\r\\n                      </mat-form-field>\\r\\n                         \\r\\n                </div>\\r\\n                </div>\\r\\n                <div>\\r\\n                  \\r\\n                </div>\\r\\n                \\r\\n              </div>\\r\\n              <div fxLayoutGap=\\\"10\\\">\\r\\n              <mat-checkbox (change)=getValue2($event)> Cross Financial Transaction.</mat-checkbox>\\r\\n              <mat-checkbox (change)=getValueSftp($event)>SFTP Required</mat-checkbox>\\r\\n              <mat-checkbox (change)=getValueMfI($event)>Mandatory Field Impose</mat-checkbox>\\r\\n            </div>\\r\\n \\r\\n    </mat-card>\\r\\n  </form>  -->\\r\\n  <!-- <form #fn=\\\"ngForm\\\" novalidate>\\r\\n    \\r\\n      <mat-card  >\\r\\n       \\r\\n  <div fxLayout=\\\"row wrap\\\" fxLayoutGap=\\\"10\\\">\\r\\n   \\r\\n    <div fxFlex=\\\"60\\\" >\\r\\n      <div>\\r\\n        <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\" >\\r\\n            <mat-label>External System Code</mat-label>\\r\\n            <mat-select name=\\\"extSysCode\\\" #extSysCode (selectionChange)=\\\"getProcess(extSysCode.value)\\\"\\r\\n              [(ngModel)]=\\\"createExtSys1.extSysCode\\\" #extSysCode=\\\"ngModel\\\" required>\\r\\n              <mat-option *ngFor=\\\"let topping of data\\\" [value]=\\\"topping\\\">{{topping.extSysCode}}\\r\\n              </mat-option>\\r\\n            </mat-select>\\r\\n          </mat-form-field>\\r\\n          <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\">\\r\\n            <mat-label>Process code</mat-label>\\r\\n            <input matInput type=\\\"text\\\" [(ngModel)]=\\\"createExtSys1.processCode\\\" name=\\\"processCode\\\" #processCode=\\\"ngModel\\\"\\r\\n              required>\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n        <div>\\r\\n            <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\">\\r\\n                <mat-label>External system name</mat-label>\\r\\n                <input matInput type=\\\"text\\\" [(ngModel)]=\\\"createExtSys1.extSysName\\\" name=\\\"extSysName\\\" #extSysName=\\\"ngModel\\\"\\r\\n                  readonly required>\\r\\n              </mat-form-field>\\r\\n              <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\">\\r\\n                <mat-label>Maximum Upload Limit</mat-label>\\r\\n                <input matInput type=\\\"number\\\" [(ngModel)]=\\\"createExtSys1.maxUploadLimit\\\" name=\\\"maxUploadLimit\\\"\\r\\n                  #maxUploadLimit=\\\"ngModel\\\" required>\\r\\n              </mat-form-field>\\r\\n        </div>\\r\\n        <div>\\r\\n            <mat-checkbox (change)=\\\"treasuryRequired($event)\\\">Treasury Reference Required</mat-checkbox>\\r\\n        </div>\\r\\n        <div >\\r\\n            <mat-checkbox (change)=\\\"checkCheckBoxvalue1($event)\\\">Auto Upload</mat-checkbox>\\r\\n            <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\">\\r\\n                <mat-label>File Name</mat-label>\\r\\n                <input matInput type=\\\"text\\\" #fileName [(ngModel)]=\\\"createExtSys1.fileName\\\" name=\\\"fileName\\\"\\r\\n                  [disabled]=\\\"!enablefilebrowser\\\" required>\\r\\n              </mat-form-field>\\r\\n              <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\" *ngIf=\\\"enablefilebrowser\\\">\\r\\n                <mat-label>File Path</mat-label>\\r\\n                <input matInput type=\\\"text\\\" #filePath [(ngModel)]=\\\"createExtSys1.filePath\\\" name=\\\"filePath\\\" required>\\r\\n              </mat-form-field>\\r\\n        </div>\\r\\n        <div>\\r\\n            <mat-checkbox (change)=\\\"checkCheckBoxvalue($event)\\\">Back Dating</mat-checkbox>\\r\\n            <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\">\\r\\n                <mat-label>Back Dating</mat-label>\\r\\n                <input matInput type=\\\"text\\\" [(ngModel)]=\\\"createExtSys1.bdav\\\" name=\\\"bdav\\\" [disabled]=\\\"!is_edit\\\" required>\\r\\n              </mat-form-field>\\r\\n        </div>\\r\\n        <div>\\r\\n            <mat-checkbox (change)=getValue($event)>Future Dating</mat-checkbox>\\r\\n            <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\">\\r\\n                <mat-label>Future Dating</mat-label>\\r\\n                <input matInput type=\\\"text\\\" [(ngModel)]=\\\"createExtSys1.fdav\\\" name=\\\"fdav\\\" [disabled]=\\\"!is_edit1\\\" required>\\r\\n              </mat-form-field>\\r\\n        </div>\\r\\n        <div>\\r\\n            <mat-checkbox (change)=getValueOfFCYrateVariance($event)>FCY Exchange Rate Variance</mat-checkbox>\\r\\n            <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\" style=\\\"margin-inline: 150px;\\\">\\r\\n                <mat-label>FCY Exchange Rate Variance percentage</mat-label>\\r\\n                <input matInput type=\\\"text\\\" [(ngModel)]=\\\"createExtSys1.fCYPercentage\\\" name=\\\"fCYPercentage\\\"\\r\\n                  [disabled]=\\\"!is_edit1\\\" required>\\r\\n              </mat-form-field>\\r\\n        </div>\\r\\n        <div>\\r\\n            <mat-checkbox (change)=getValue2($event)> Cross Financial Transaction.</mat-checkbox>\\r\\n            <mat-checkbox (change)=getValueSftp($event)>SFTP Required</mat-checkbox>\\r\\n            <mat-checkbox (change)=getValueMfI($event)>Mandatory Field Impose</mat-checkbox>\\r\\n        </div>\\r\\n    </div>\\r\\n    \\r\\n    <div fxFlex=\\\"40\\\">\\r\\n        <span>SFTP Details</span>\\r\\n        <div>\\r\\n        <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\">\\r\\n            <mat-label>UserName</mat-label>\\r\\n            <input matInput type=\\\"text\\\"\\r\\n            placeholder=\\\"UserName\\\"  [(ngModel)]=\\\"createExtSys1.userName\\\" name=\\\"userName\\\"\\r\\n              required>\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n        <div>\\r\\n          <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\">\\r\\n              <mat-label>Password</mat-label>\\r\\n              <input matInput type=\\\"text\\\" \\r\\n              placeholder=\\\"Password\\\" [(ngModel)]=\\\"createExtSys1.password\\\" name=\\\"password\\\"\\r\\n                required>\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n           <div>\\r\\n              <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\">\\r\\n                <mat-label>Port</mat-label>\\r\\n                <input matInput type=\\\"text\\\" [(ngModel)]=\\\"createExtSys1.sftpPort\\\" name=\\\"port\\\" placeholder=\\\"Port\\\" required>\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n              <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\">\\r\\n                <mat-label>Path</mat-label>\\r\\n                <input matInput type=\\\"text\\\" [(ngModel)]=\\\"createExtSys1.sftpPath\\\" name=\\\"path\\\" placeholder=\\\"Path\\\" required>\\r\\n              </mat-form-field>\\r\\n              <div>\\r\\n              <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\">\\r\\n                <mat-label>IpAddress</mat-label>\\r\\n                <input matInput type=\\\"text\\\"  [(ngModel)]=\\\"createExtSys1.ipAddress\\\"\\r\\n                placeholder=\\\"IP Address\\\" name=\\\"ipAddress\\\"\\r\\n                  required>\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n \\r\\n    </div>\\r\\n  </div>\\r\\n  <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" fxLayoutGap=\\\"10px\\\">\\r\\n      <button #saveBtn type=\\\"submit\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"save(extSysCode.value)\\\"\\r\\n        [disabled]=\\\"!fn.form.valid\\\" *ngIf=\\\"!savebutton||!is_sftp\\\">Save</button>\\r\\n      <button mat-raised-button color=\\\"warn\\\" [routerLink]=\\\"'/sias-v2/ExtSysList'\\\">Exit</button>\\r\\n    </div>\\r\\n  </mat-card>\\r\\n  </form> -->\\r\\n<!-- <form #fn=\\\"ngForm\\\" novalidate>\\r\\n    \\r\\n  <mat-card  >\\r\\n   \\r\\n   <div fxLayout=\\\"column wrap\\\" fxFlex=\\\"85\\\">\\r\\n    <div fxLayout=\\\"row wrap\\\" >\\r\\n        \\r\\n      <div fxFlex=\\\"25\\\">\\r\\n        <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\">\\r\\n          <mat-label>External System Code</mat-label>\\r\\n          <mat-select name=\\\"extSysCode\\\" #extSysCode (selectionChange)=\\\"getProcess(extSysCode.value)\\\"\\r\\n            [(ngModel)]=\\\"createExtSys1.extSysCode\\\" #extSysCode=\\\"ngModel\\\" required>\\r\\n            <mat-option *ngFor=\\\"let topping of data\\\" [value]=\\\"topping\\\">{{topping.extSysCode}}\\r\\n            </mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n        <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\">\\r\\n          <mat-label>Process code</mat-label>\\r\\n          <input matInput type=\\\"text\\\" [(ngModel)]=\\\"createExtSys1.processCode\\\" name=\\\"processCode\\\" #processCode=\\\"ngModel\\\"\\r\\n            required>\\r\\n        </mat-form-field>\\r\\n        <mat-checkbox (change)=\\\"treasuryRequired($event)\\\">Treasury Reference Required</mat-checkbox>\\r\\n        \\r\\n           \\r\\n      \\r\\n      </div>\\r\\n   \\r\\n  \\r\\n      <div fxFlex=\\\"25\\\">\\r\\n        <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\">\\r\\n          <mat-label>External system name</mat-label>\\r\\n          <input matInput type=\\\"text\\\" [(ngModel)]=\\\"createExtSys1.extSysName\\\" name=\\\"extSysName\\\" #extSysName=\\\"ngModel\\\"\\r\\n            readonly required>\\r\\n        </mat-form-field>\\r\\n        <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\">\\r\\n          <mat-label>Maximum Upload Limit</mat-label>\\r\\n          <input matInput type=\\\"number\\\" [(ngModel)]=\\\"createExtSys1.maxUploadLimit\\\" name=\\\"maxUploadLimit\\\"\\r\\n            #maxUploadLimit=\\\"ngModel\\\" required>\\r\\n        </mat-form-field>\\r\\n        \\r\\n      </div>\\r\\n      \\r\\n     \\r\\n  \\r\\n    </div>\\r\\n    <div fxLayout=\\\"row wrap\\\" fxLayoutGap=\\\"10\\\">\\r\\n    \\r\\n      <div fxFlex=\\\"25\\\">\\r\\n        <mat-checkbox (change)=\\\"checkCheckBoxvalue1($event)\\\">Auto Upload</mat-checkbox>\\r\\n  \\r\\n  \\r\\n      </div>\\r\\n  \\r\\n      <div fxFlex=\\\"25\\\">\\r\\n  \\r\\n        <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\">\\r\\n          <mat-label>File Name</mat-label>\\r\\n          <input matInput type=\\\"text\\\" #fileName [(ngModel)]=\\\"createExtSys1.fileName\\\" name=\\\"fileName\\\"\\r\\n            [disabled]=\\\"!enablefilebrowser\\\" required>\\r\\n        </mat-form-field>\\r\\n        <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\" *ngIf=\\\"enablefilebrowser\\\">\\r\\n          <mat-label>File Path</mat-label>\\r\\n          <input matInput type=\\\"text\\\" #filePath [(ngModel)]=\\\"createExtSys1.filePath\\\" name=\\\"filePath\\\" required>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div fxFlex=\\\"25\\\" *ngIf=\\\"is_sftp\\\">\\r\\n         \\r\\n          \\r\\n         \\r\\n        </div>\\r\\n    </div>\\r\\n    <div fxLayout=\\\"row wrap\\\" fxLayoutGap=\\\"10\\\">\\r\\n        \\r\\n      <div fxFlex=\\\"25\\\">\\r\\n        <mat-checkbox (change)=\\\"checkCheckBoxvalue($event)\\\">Back Dating</mat-checkbox>\\r\\n  \\r\\n  \\r\\n  \\r\\n      </div>\\r\\n  \\r\\n      <div fxFlex=\\\"25\\\">\\r\\n  \\r\\n        <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\">\\r\\n          <mat-label>Back Dating</mat-label>\\r\\n          <input matInput type=\\\"text\\\" [(ngModel)]=\\\"createExtSys1.bdav\\\" name=\\\"bdav\\\" [disabled]=\\\"!is_edit\\\" required>\\r\\n        </mat-form-field>\\r\\n  \\r\\n      </div>\\r\\n  \\r\\n    </div>\\r\\n    <div fxLayout=\\\"row wrap\\\" fxLayoutGap=\\\"10\\\">\\r\\n       \\r\\n      <div fxFlex=\\\"25\\\">\\r\\n        <mat-checkbox (change)=getValue($event)>Future Dating</mat-checkbox>\\r\\n  \\r\\n  \\r\\n  \\r\\n      </div>\\r\\n  \\r\\n      <div fxFlex=\\\"25\\\">\\r\\n  \\r\\n        <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\">\\r\\n          <mat-label>Future Dating</mat-label>\\r\\n          <input matInput type=\\\"text\\\" [(ngModel)]=\\\"createExtSys1.fdav\\\" name=\\\"fdav\\\" [disabled]=\\\"!is_edit1\\\" required>\\r\\n        </mat-form-field>\\r\\n  \\r\\n      </div>\\r\\n  \\r\\n    </div>\\r\\n    <div fxLayout=\\\"row wrap\\\" fxLayoutGap=\\\"10\\\">\\r\\n       \\r\\n      <div fxFlex=\\\"25\\\">\\r\\n        <mat-checkbox (change)=getValueOfFCYrateVariance($event)>FCY Exchange Rate Variance</mat-checkbox>\\r\\n  \\r\\n  \\r\\n  \\r\\n      </div>\\r\\n  \\r\\n      <div fxFlex=\\\"25\\\">\\r\\n  \\r\\n        <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\" style=\\\"margin-inline: 150px;\\\">\\r\\n          <mat-label>FCY Exchange Rate Variance percentage</mat-label>\\r\\n          <input matInput type=\\\"text\\\" [(ngModel)]=\\\"createExtSys1.fCYPercentage\\\" name=\\\"fCYPercentage\\\"\\r\\n            [disabled]=\\\"!is_edit1\\\" required>\\r\\n        </mat-form-field>\\r\\n  \\r\\n      </div>\\r\\n  \\r\\n    </div>\\r\\n    <div fxLayout=\\\"row wrap\\\" fxLayoutGap=\\\"10\\\">\\r\\n    \\r\\n      <div fxFlex=\\\"25\\\">\\r\\n    \\r\\n        <mat-checkbox (change)=getValue2($event)> Cross Financial Transaction.</mat-checkbox>\\r\\n      </div>\\r\\n  \\r\\n      <div fxFlex=\\\"25\\\">\\r\\n  \\r\\n        <mat-checkbox (change)=getValueSftp($event)>SFTP Required</mat-checkbox>\\r\\n      </div>\\r\\n      <div fxFlex=\\\"25\\\">\\r\\n  \\r\\n        <mat-checkbox (change)=getValueMfI($event)>Mandatory Field Impose</mat-checkbox>\\r\\n      </div>\\r\\n  \\r\\n    </div>\\r\\n  \\r\\n    <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" fxLayoutGap=\\\"10px\\\">\\r\\n        <button #saveBtn type=\\\"submit\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"save(extSysCode.value)\\\"\\r\\n          [disabled]=\\\"!fn.form.valid\\\" *ngIf=\\\"!savebutton||!is_sftp\\\">Save</button>\\r\\n        <button mat-raised-button color=\\\"warn\\\" [routerLink]=\\\"'/sias-v2/ExtSysList'\\\">Exit</button>\\r\\n      </div>\\r\\n      <div fxLayout=\\\"column wrap\\\" fxFlex=\\\"45\\\" > \\r\\n   \\r\\n          <span>SFTP Details</span>\\r\\n          <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\">\\r\\n              <mat-label>UserName</mat-label>\\r\\n              <input matInput type=\\\"text\\\"\\r\\n              placeholder=\\\"UserName\\\"  [(ngModel)]=\\\"createExtSys1.userName\\\" name=\\\"userName\\\"\\r\\n                required>\\r\\n            </mat-form-field>\\r\\n            <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\">\\r\\n                <mat-label>Password</mat-label>\\r\\n                <input matInput type=\\\"text\\\" \\r\\n                placeholder=\\\"Password\\\" [(ngModel)]=\\\"createExtSys1.password\\\" name=\\\"password\\\"\\r\\n                  required>\\r\\n              </mat-form-field>\\r\\n             \\r\\n                <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\">\\r\\n                  <mat-label>Port</mat-label>\\r\\n                  <input matInput type=\\\"text\\\" [(ngModel)]=\\\"createExtSys1.sftpPort\\\" name=\\\"port\\\" placeholder=\\\"Port\\\" required>\\r\\n                </mat-form-field>\\r\\n                <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\">\\r\\n                  <mat-label>Path</mat-label>\\r\\n                  <input matInput type=\\\"text\\\" [(ngModel)]=\\\"createExtSys1.sftpPath\\\" name=\\\"path\\\" placeholder=\\\"Path\\\" required>\\r\\n                </mat-form-field>\\r\\n                <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\">\\r\\n                  <mat-label>IpAddress</mat-label>\\r\\n                  <input matInput type=\\\"text\\\"  [(ngModel)]=\\\"createExtSys1.ipAddress\\\"\\r\\n                  placeholder=\\\"IP Address\\\" name=\\\"ipAddress\\\"\\r\\n                    required>\\r\\n                </mat-form-field>\\r\\n          \\r\\n      </div>\\r\\n      \\r\\n    </div>\\r\\n   \\r\\n  </mat-card>\\r\\n  \\r\\n  </form>  -->\\r\\n  <br>\\r\\n  <mat-card *ngIf=\\\"dataForm\\\" style=\\\"width: 60%;  margin-left:200px;\\\">\\r\\n      <mat-card-title>\\r\\n    \\r\\n      </mat-card-title>\\r\\n      <mat-card-content>\\r\\n    \\r\\n        <table id=\\\"customers\\\">\\r\\n          <tr>\\r\\n            <th>RECORD STATUS:</th>\\r\\n            <td>\\r\\n              <mat-chip>{{dataForm?.recordStatus }}</mat-chip>\\r\\n            </td>\\r\\n    \\r\\n            <th>CREATED BY:</th>\\r\\n            <td>\\r\\n              <mat-chip>{{dataForm?.creatorId }}</mat-chip>\\r\\n            </td>\\r\\n            <th>AUTHORIZED BY:</th>\\r\\n            <td>\\r\\n              <mat-chip>{{dataForm?.verifierId}}</mat-chip>\\r\\n            </td>\\r\\n            <!-- added By vidya for 583 issue -->\\r\\n            <th>First time Auth:</th>\\r\\n            <td>\\r\\n              <mat-chip>{{dataForm?.verifiedOnce}}</mat-chip>\\r\\n            </td>\\r\\n          </tr>\\r\\n          <tr>\\r\\n            <th>MODIFICATION NO:</th>\\r\\n            <td>\\r\\n              <mat-chip>{{dataForm?.versionNo}}</mat-chip>\\r\\n            </td>\\r\\n            <th>CREATION DATE:</th>\\r\\n            <td>\\r\\n              <mat-chip>{{dataForm?.createdAt | date: 'MM/dd/yyyy, h:mm a'}}</mat-chip>\\r\\n            </td>\\r\\n            <th>AUTHORIZATION DATE:</th>\\r\\n            <td>\\r\\n              <mat-chip>{{dataForm?.verifierDtStamp | date: 'MM/dd/yyyy, h:mm a'}}</mat-chip>\\r\\n            </td>\\r\\n            <th>STATUS:</th>\\r\\n            <td>\\r\\n    \\r\\n              <mat-chip>{{dataForm?.authStatus}}</mat-chip>\\r\\n    \\r\\n            </td>\\r\\n          </tr>\\r\\n        </table>\\r\\n      </mat-card-content>\\r\\n    </mat-card>\\r\\n  <!-- <form #fn=\\\"ngForm\\\" novalidate>\\r\\n      <mat-card style=\\\"text-align: center;width: 75%;margin-left: 15%\\\">\\r\\n        <div fxLayout=\\\"row\\\">\\r\\n    \\r\\n          <div fxFlex=\\\"100\\\">\\r\\n    \\r\\n    \\r\\n    \\r\\n    \\r\\n            <div>\\r\\n              <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\">\\r\\n                <mat-label>External System Code</mat-label>\\r\\n                <mat-select name=\\\"extSysCode\\\" #extSysCode (selectionChange)=\\\"getProcess(extSysCode.value)\\\"\\r\\n                  [(ngModel)]=\\\"createExtSys1.extSysCode\\\" #extSysCode=\\\"ngModel\\\" required>\\r\\n                  <mat-option *ngFor=\\\"let topping of data\\\" [value]=\\\"topping\\\">{{topping.extSysCode}}\\r\\n                  </mat-option>\\r\\n                </mat-select>\\r\\n              </mat-form-field>&nbsp;\\r\\n              <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\">\\r\\n                <mat-label>External system name</mat-label>\\r\\n                <input matInput type=\\\"text\\\" [(ngModel)]=\\\"createExtSys1.extSysName\\\" name=\\\"extSysName\\\" #extSysName=\\\"ngModel\\\"\\r\\n                  readonly required>\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n            <div>\\r\\n              <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\">\\r\\n                <mat-label>Process code</mat-label>\\r\\n                <input matInput type=\\\"text\\\" [(ngModel)]=\\\"createExtSys1.processCode\\\" name=\\\"processCode\\\"\\r\\n                  #processCode=\\\"ngModel\\\" required>\\r\\n              </mat-form-field>&nbsp;\\r\\n              <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\">\\r\\n                <mat-label>Maximum Upload Limit</mat-label>\\r\\n                <input matInput type=\\\"number\\\" [(ngModel)]=\\\"createExtSys1.maxUploadLimit\\\" name=\\\"maxUploadLimit\\\"\\r\\n                  #maxUploadLimit=\\\"ngModel\\\" required>\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n            <div style=\\\"margin-right: 21%\\\">\\r\\n              <mat-checkbox (change)=\\\"treasuryRequired($event)\\\">Treasury Reference Required</mat-checkbox>\\r\\n          </div>\\r\\n            <div>\\r\\n              <mat-checkbox (change)=\\\"checkCheckBoxvalue1($event)\\\">Auto Upload</mat-checkbox>\\r\\n              <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\"style=\\\"margin-left: 105px\\\">\\r\\n                <mat-label>File Name</mat-label>\\r\\n                <input matInput type=\\\"text\\\" #fileName [(ngModel)]=\\\"createExtSys1.fileName\\\" name=\\\"fileName\\\" [disabled]=\\\"!enablefilebrowser\\\" required>\\r\\n              </mat-form-field>\\r\\n              <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\" *ngIf=\\\"enablefilebrowser\\\">\\r\\n                <mat-label>File Path</mat-label>\\r\\n                <input matInput type=\\\"text\\\" #filePath [(ngModel)]=\\\"createExtSys1.filePath\\\" name=\\\"filePath\\\" required>\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n            <div>\\r\\n              <mat-checkbox (change)=\\\"checkCheckBoxvalue($event)\\\">Back Dating</mat-checkbox>\\r\\n              <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\" style=\\\"margin-left: 105px\\\">\\r\\n                <mat-label>Back Dating</mat-label>\\r\\n                <input matInput type=\\\"text\\\" [(ngModel)]=\\\"createExtSys1.bdav\\\" name=\\\"bdav\\\" [disabled]=\\\"!is_edit\\\" required>\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n            <div>\\r\\n              <mat-checkbox (change)=getValue($event)>Future Dating</mat-checkbox>\\r\\n              <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\" style=\\\"margin-left: 93px\\\">\\r\\n                <mat-label>Future Dating</mat-label>\\r\\n                <input matInput type=\\\"text\\\" [(ngModel)]=\\\"createExtSys1.fdav\\\" name=\\\"fdav\\\" [disabled]=\\\"!is_edit1\\\" required>\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n            <div>\\r\\n              <mat-checkbox (change)=getValueOfFCYrateVariance($event) style=\\\"margin-left: 20px\\\">FCY Exchange Rate Variance</mat-checkbox>\\r\\n              <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\" style=\\\"margin-inline: 150px;\\\">\\r\\n                <mat-label>FCY Exchange Rate Variance percentage</mat-label>\\r\\n                <input matInput type=\\\"text\\\" [(ngModel)]=\\\"createExtSys1.fCYPercentage\\\" name=\\\"fCYPercentage\\\"\\r\\n                  [disabled]=\\\"!is_edit1\\\" required>\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n            <div>\\r\\n              <mat-checkbox (change)=getValue2($event)> Cross Financial Transaction.</mat-checkbox>&nbsp;\\r\\n              <mat-checkbox (change)=getValueSftp($event)>SFTP Required</mat-checkbox>&nbsp;\\r\\n              <mat-checkbox (change)=getValueMfI($event)>Mandatory Field Impose</mat-checkbox>\\r\\n            </div>\\r\\n    \\r\\n    \\r\\n    \\r\\n    \\r\\n    \\r\\n          </div>\\r\\n    \\r\\n          <div fxFlex=\\\"25\\\" style=\\\"margin-left: 50px\\\" *ngIf=\\\"is_sftp\\\">\\r\\n    \\r\\n    \\r\\n            <span>SFTP Details</span>\\r\\n    \\r\\n    \\r\\n    \\r\\n            <div>\\r\\n    \\r\\n              <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\">\\r\\n                <mat-label>UserName</mat-label>\\r\\n                <input matInput type=\\\"text\\\" placeholder=\\\"UserName\\\" [(ngModel)]=\\\"createExtSys1.sftpUsername\\\" name=\\\"userName\\\"\\r\\n                  required>\\r\\n              </mat-form-field>\\r\\n    \\r\\n            </div>\\r\\n            <div>\\r\\n              <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\">\\r\\n                <mat-label>Password</mat-label>\\r\\n                <input matInput type=\\\"text\\\" placeholder=\\\"Password\\\" [(ngModel)]=\\\"createExtSys1.sftpPassword\\\" name=\\\"password\\\"\\r\\n                  required>\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n            <div>\\r\\n              <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\">\\r\\n                <mat-label>IpAddress</mat-label>\\r\\n                <input matInput type=\\\"text\\\" [(ngModel)]=\\\"createExtSys1.sftpIpaddress\\\" placeholder=\\\"IP Address\\\"\\r\\n                  name=\\\"ipAddress\\\" required>\\r\\n              </mat-form-field>\\r\\n    \\r\\n            </div>\\r\\n            <div>\\r\\n              <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\">\\r\\n                <mat-label>Port</mat-label>\\r\\n                <input matInput type=\\\"text\\\" [(ngModel)]=\\\"createExtSys1.sftpPort\\\" name=\\\"port\\\" placeholder=\\\"Port\\\" required>\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n            <div>\\r\\n              <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\">\\r\\n                <mat-label>Path</mat-label>\\r\\n                <input matInput type=\\\"text\\\" [(ngModel)]=\\\"createExtSys1.sftpPath\\\" name=\\\"path\\\" placeholder=\\\"Path\\\" required>\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n    \\r\\n    \\r\\n    \\r\\n    \\r\\n          </div>\\r\\n    \\r\\n        </div>\\r\\n        <br>\\r\\n        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" fxLayoutGap=\\\"10px\\\">\\r\\n          <button #saveBtn type=\\\"submit\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"save(extSysCode.value)\\\"\\r\\n            [disabled]=\\\"!fn.form.valid\\\" *ngIf=\\\"!savebutton||!is_sftp\\\">Save</button>\\r\\n          <button mat-raised-button color=\\\"warn\\\" [routerLink]=\\\"'/sias-v2/ExtSysList'\\\">Exit</button>\\r\\n        </div>\\r\\n      </mat-card>\\r\\n      <!-- <div fxLayout=\\\"row\\\">\\r\\n          <div fxFlex></div>\\r\\n          <div fxFlex=\\\"40\\\">\\r\\n            <mat-card style=\\\"margin-left: 50px\\\">\\r\\n           \\r\\n              <mat-card-content style=\\\"text-align: center;\\\">\\r\\n                <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\r\\n                  <div fxFlex=\\\"100\\\" class=\\\"pr-1\\\">\\r\\n                    <div class=\\\"pb-1\\\">\\r\\n                      <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\">\\r\\n                        <mat-label>External System Code</mat-label>\\r\\n                        <mat-select name=\\\"extSysCode\\\" #extSysCode (selectionChange)=\\\"getProcess(extSysCode.value)\\\"\\r\\n                          [(ngModel)]=\\\"createExtSys1.extSysCode\\\" #extSysCode=\\\"ngModel\\\" required>\\r\\n                          <mat-option *ngFor=\\\"let topping of data\\\" [value]=\\\"topping\\\">{{topping.extSysCode}}\\r\\n                          </mat-option>\\r\\n                        </mat-select>\\r\\n                      </mat-form-field>\\r\\n                    </div>\\r\\n      \\r\\n                    <div class=\\\"pb-1\\\">\\r\\n                      <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\">\\r\\n                        <mat-label>External system name</mat-label>\\r\\n                        <input matInput type=\\\"text\\\" [(ngModel)]=\\\"createExtSys1.extSysName\\\" name=\\\"extSysName\\\"\\r\\n                          #extSysName=\\\"ngModel\\\" readonly required>\\r\\n                      </mat-form-field>\\r\\n                    </div>\\r\\n      \\r\\n                    <div class=\\\"pb-1\\\">\\r\\n                      <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\">\\r\\n                        <mat-label>Process code</mat-label>\\r\\n                        <input matInput type=\\\"text\\\" [(ngModel)]=\\\"createExtSys1.processCode\\\" name=\\\"processCode\\\"\\r\\n                          #processCode=\\\"ngModel\\\" required>\\r\\n                      </mat-form-field>\\r\\n                    </div>\\r\\n                    \\r\\n      \\r\\n                    <div class=\\\"pb-1\\\">\\r\\n                      <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\">\\r\\n                        <mat-label>Maximum Upload Limit</mat-label>\\r\\n                        <input matInput type=\\\"number\\\" [(ngModel)]=\\\"createExtSys1.maxUploadLimit\\\" name=\\\"maxUploadLimit\\\"\\r\\n                          #maxUploadLimit=\\\"ngModel\\\" required>\\r\\n                      </mat-form-field>\\r\\n                    </div>\\r\\n                    <div class=\\\"pb-1\\\">\\r\\n                      <mat-checkbox (change)=\\\"checkCheckBoxvalue1($event)\\\">Auto Upload</mat-checkbox>\\r\\n                    </div>\\r\\n      \\r\\n                    <div class=\\\"pb-1\\\">\\r\\n                      <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\">\\r\\n                        <mat-label>File Name</mat-label>\\r\\n                        <input matInput type=\\\"text\\\" #fileName [(ngModel)]=\\\"createExtSys1.fileName\\\" name=\\\"fileName\\\" required>\\r\\n                      </mat-form-field>\\r\\n                    </div>\\r\\n                    <div class=\\\"pb-1\\\" *ngIf=\\\"enablefilebrowser\\\">\\r\\n                      <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\">\\r\\n                        <mat-label>File Path</mat-label>\\r\\n                        <input matInput type=\\\"text\\\" #filePath [(ngModel)]=\\\"createExtSys1.filePath\\\" name=\\\"filePath\\\" required>\\r\\n                      </mat-form-field>\\r\\n                    </div>\\r\\n                   \\r\\n                    <div class=\\\"pb-1\\\">\\r\\n                      <mat-checkbox (change)=\\\"checkCheckBoxvalue($event)\\\">Back Dated Allow</mat-checkbox>\\r\\n                    </div>\\r\\n                    <div class=\\\"pb-1\\\">\\r\\n                      <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\">\\r\\n                        <mat-label>Back Dated Allow Value</mat-label>\\r\\n                        <input matInput type=\\\"text\\\" [(ngModel)]=\\\"createExtSys1.bdav\\\" name=\\\"bdav\\\" [disabled]=\\\"!is_edit\\\"\\r\\n                          required>\\r\\n                      </mat-form-field>\\r\\n                    </div>\\r\\n                    <div class=\\\"pb-1\\\">\\r\\n                      <mat-checkbox (change)=getValue($event)>Future Date Allow</mat-checkbox>\\r\\n                    </div>\\r\\n                    <div class=\\\"pb-1\\\">\\r\\n                      <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\">\\r\\n                        <mat-label>Future Date Allow Value</mat-label>\\r\\n                        <input matInput type=\\\"text\\\" [(ngModel)]=\\\"createExtSys1.fdav\\\" name=\\\"fdav\\\" [disabled]=\\\"!is_edit1\\\"\\r\\n                          required>\\r\\n                      </mat-form-field>\\r\\n                    </div>\\r\\n                    <div class=\\\"pb-1\\\">\\r\\n                      <mat-checkbox (change)=getValueOfFCYrateVariance($event)  >FCY Rate Variance</mat-checkbox>\\r\\n                    </div>\\r\\n                    <div class=\\\"pb-1\\\">\\r\\n                      <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\">\\r\\n                        <mat-label>FCY Exchange Rate Variance percentage</mat-label>\\r\\n                        <input matInput type=\\\"text\\\"  [(ngModel)]=\\\"createExtSys1.fCYPercentage\\\" name=\\\"fCYPercentage\\\"\\r\\n                          [disabled]=\\\"!is_edit1\\\" required>\\r\\n                      </mat-form-field>\\r\\n                    </div>\\r\\n                    <div class=\\\"pb-1\\\">\\r\\n                      <mat-checkbox (change)=getValue2($event)>Allowing cross financial transaction.</mat-checkbox>\\r\\n                    </div>\\r\\n                    <mat-toolbar color=\\\"primary\\\" style=\\\"height:30px; font-size: small;\\\">\\r\\n                        <span>SFTP Details</span>\\r\\n                    </mat-toolbar>\\r\\n                    <div class=\\\"pb-1\\\">\\r\\n                        <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\">\\r\\n                          <mat-label>UserName</mat-label>\\r\\n                          <input matInput type=\\\"text\\\"\\r\\n                          placeholder=\\\"UserName\\\"  [(ngModel)]=\\\"createExtSys1.userName\\\" name=\\\"userName\\\"\\r\\n                            required>\\r\\n                        </mat-form-field>\\r\\n                      </div>\\r\\n                      <div>\\r\\n                        <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\">\\r\\n                            <mat-label>Password</mat-label>\\r\\n                            <input matInput type=\\\"text\\\" \\r\\n                            placeholder=\\\"Password\\\" [(ngModel)]=\\\"createExtSys1.password\\\" name=\\\"password\\\"\\r\\n                              required>\\r\\n                          </mat-form-field>\\r\\n                        </div>\\r\\n                        <div>\\r\\n                            <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\">\\r\\n                                <mat-label>IpAddress</mat-label>\\r\\n                                <input matInput type=\\\"text\\\"  [(ngModel)]=\\\"createExtSys1.ipAddress\\\"\\r\\n                                placeholder=\\\"IP Address\\\" name=\\\"ipAddress\\\"\\r\\n                                  required>\\r\\n                              </mat-form-field>\\r\\n                            </div>\\r\\n                            <div>\\r\\n                                <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\">\\r\\n                                    <mat-label>Port</mat-label>\\r\\n                                    <input matInput type=\\\"text\\\"  [(ngModel)]=\\\"createExtSys1.port\\\" name=\\\"port\\\" placeholder=\\\"Port\\\"\\r\\n                                      required>\\r\\n                                  </mat-form-field>\\r\\n                                </div>\\r\\n                                <div>\\r\\n                                    <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\">\\r\\n                                        <mat-label>Path</mat-label>\\r\\n                                        <input matInput type=\\\"text\\\"  [(ngModel)]=\\\"createExtSys1.path\\\" name=\\\"path\\\" placeholder=\\\"Path\\\"\\r\\n                                          required>\\r\\n                                      </mat-form-field>\\r\\n                                    </div>\\r\\n                      \\r\\n                  </div>\\r\\n                </div>\\r\\n                <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" fxLayoutGap=\\\"10px\\\">\\r\\n                  <button #saveBtn type=\\\"submit\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"save(extSysCode.value)\\\"\\r\\n                    [disabled]=\\\"!fn.form.valid\\\" *ngIf=\\\"!savebutton\\\">Save</button>\\r\\n                  <button mat-raised-button color=\\\"warn\\\" [routerLink]=\\\"'/sias-v2/ExtSysList'\\\">Exit</button>\\r\\n                </div>\\r\\n              </mat-card-content>\\r\\n            </mat-card>\\r\\n          </div>\\r\\n      \\r\\n          <div fxFlex></div>\\r\\n        </div> -->\\r\\n  \\r\\n  <!-- <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\r\\n                  <div fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"50\\\" class=\\\"pr-1\\\">\\r\\n                    <div class=\\\"pb-1\\\">\\r\\n                      <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\">\\r\\n                        <mat-label>External System Code</mat-label>\\r\\n                        <mat-select name=\\\"extSysCode\\\" #extSysCode (selectionChange)=\\\"getProcess(extSysCode.value)\\\"\\r\\n                          [(ngModel)]=\\\"createExtSys1.extSysCode\\\">\\r\\n                          <mat-option *ngFor=\\\"let topping of data\\\" [value]=\\\"topping\\\">{{topping.extSysCode}}\\r\\n                          </mat-option>\\r\\n                        </mat-select>\\r\\n                      </mat-form-field>\\r\\n                    </div>\\r\\n        \\r\\n                    <div class=\\\"pb-1\\\">\\r\\n                      <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\">\\r\\n                        <mat-label>External system name</mat-label>\\r\\n                        <input matInput type=\\\"text\\\" [(ngModel)]=\\\"createExtSys1.extSysName\\\" style=\\\"float: right; \\\"\\r\\n                          value=\\\"{{createExtSys2}}\\\" name=\\\"extSysName\\\">\\r\\n                      </mat-form-field>\\r\\n                    </div>\\r\\n        \\r\\n                    <div class=\\\"pb-1\\\" *ngIf>\\r\\n                      <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\">\\r\\n                        <mat-label>Module code</mat-label>\\r\\n                        <input matInput type=\\\"text\\\" [(ngModel)]=\\\"createExtSys1.moduleCode\\\" name=\\\"moduleCode\\\">\\r\\n                      </mat-form-field>\\r\\n                    </div>\\r\\n        \\r\\n                    <div class=\\\"pb-1\\\" *ngIf>\\r\\n                      <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\">\\r\\n                        <mat-label>Service code</mat-label>\\r\\n                        <input matInput type=\\\"text\\\" id=\\\"serviceCode\\\" [(ngModel)]=\\\"createExtSys1.serviceCode\\\" name=\\\"serviceCode\\\">\\r\\n                      </mat-form-field>\\r\\n                    </div>\\r\\n        \\r\\n                    <div class=\\\"pb-1\\\" >\\r\\n                      <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\">\\r\\n                        <mat-label>Process code</mat-label>\\r\\n                        <input matInput type=\\\"text\\\" id=\\\"processCode\\\" [(ngModel)]=\\\"createExtSys1.processCode\\\"\\r\\n                          style=\\\"float: right;\\\" name=\\\"processCode\\\">\\r\\n                      </mat-form-field>\\r\\n                    </div>\\r\\n        \\r\\n                    <div class=\\\"pb-1\\\" *ngIf>\\r\\n                      <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\">\\r\\n                        <mat-label>Destination</mat-label>\\r\\n                        <input matInput type=\\\"text\\\" id=\\\"destination\\\" [(ngModel)]=\\\"createExtSys1.destination\\\"\\r\\n                          style=\\\"float: right; \\\" name=\\\"destination\\\">\\r\\n                      </mat-form-field>\\r\\n                    </div>\\r\\n        \\r\\n                    <div class=\\\"pb-1\\\" *ngIf>\\r\\n                      <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\">\\r\\n                        <mat-label>Action</mat-label>\\r\\n                        <input matInput type=\\\"text\\\" id=\\\"action\\\" [(ngModel)]=\\\"createExtSys1.action\\\" style=\\\"float: right; \\\"\\r\\n                          name=\\\"action\\\">\\r\\n                      </mat-form-field>\\r\\n                    </div>\\r\\n                    <div class=\\\"pb-1\\\" *ngIf>\\r\\n                      <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\">\\r\\n                        <mat-label>External system tag</mat-label>\\r\\n                        <input matInput type=\\\"text\\\" id=\\\"extSysTag\\\" [(ngModel)]=\\\"createExtSys1.extSysTag\\\" style=\\\"float: right; \\\"\\r\\n                          name=\\\"extSysTag\\\">\\r\\n                      </mat-form-field>\\r\\n                    </div>\\r\\n        \\r\\n        \\r\\n                  </div>\\r\\n        \\r\\n                  <div fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"50\\\" class=\\\"pr-1\\\" *ngIf>\\r\\n        \\r\\n        \\r\\n                    <div class=\\\"pb-1\\\">\\r\\n                      <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\">\\r\\n                        <mat-label>Service tag</mat-label>\\r\\n                        <input matInput type=\\\"text\\\" name=\\\"serviceTag\\\" [(ngModel)]=\\\"createExtSys1.serviceTag\\\">\\r\\n                      </mat-form-field>\\r\\n                    </div>\\r\\n                    <div class=\\\"pb-1\\\">\\r\\n                      <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\">\\r\\n                        <mat-label>Process tag</mat-label>\\r\\n                        <input matInput type=\\\"text\\\" name=\\\"processTag\\\" [(ngModel)]=\\\"createExtSys1.processTag\\\">\\r\\n                      </mat-form-field>\\r\\n                    </div>\\r\\n                    <div class=\\\"pb-1\\\">\\r\\n                      <mat-checkbox name=\\\"isExtSysNode\\\" [(ngModel)]=\\\"createExtSys1.isExtSysNode\\\">Is external system node ?\\r\\n                      </mat-checkbox>\\r\\n        \\r\\n                    </div>\\r\\n                    <div class=\\\"pb-1\\\">\\r\\n                      <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\">\\r\\n                        <mat-label>Module tag</mat-label>\\r\\n                        <input matInput type=\\\"text\\\" name=\\\"moduleTag\\\" [(ngModel)]=\\\"createExtSys1.moduleTag\\\">\\r\\n                      </mat-form-field>\\r\\n                    </div>\\r\\n                    <div class=\\\"pb-1\\\">\\r\\n                      <mat-checkbox name=\\\"isModuleNode\\\" [(ngModel)]=\\\"createExtSys1.isModuleNode\\\">Is module node ?</mat-checkbox>\\r\\n                    </div>\\r\\n                    <div class=\\\"pb-1\\\">\\r\\n                      <mat-checkbox name=\\\"isProcessNode\\\" [(ngModel)]=\\\"createExtSys1.isProcessNode\\\">Is process node?\\r\\n                      </mat-checkbox>\\r\\n                    </div>\\r\\n                    <div class=\\\"pb-1\\\">\\r\\n                      <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\">\\r\\n                        <mat-label>Destination tag</mat-label>\\r\\n                        <input matInput type=\\\"text\\\" name=\\\"destinationTag\\\" [(ngModel)]=\\\"createExtSys1.destinationTag\\\">\\r\\n                      </mat-form-field>\\r\\n                    </div>\\r\\n        \\r\\n                    <div class=\\\"pb-1\\\">\\r\\n                      <mat-checkbox name=\\\"isDestNode\\\" [(ngModel)]=\\\"createExtSys1.isDestNode\\\">Is destination node?</mat-checkbox>\\r\\n                    </div>\\r\\n                    <div class=\\\"pb-1\\\">\\r\\n                      <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\">\\r\\n                        <mat-label>Message type</mat-label>\\r\\n                        <input matInput type=\\\"text\\\" id=\\\"messageType\\\" style=\\\"float: right; \\\" name=\\\"messageType\\\"\\r\\n                          [(ngModel)]=\\\"createExtSys1.messageType\\\">\\r\\n                      </mat-form-field>\\r\\n                    </div>\\r\\n                    <div class=\\\"pb-1\\\">\\r\\n                      <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\">\\r\\n                        <mat-label>Request tag</mat-label>\\r\\n                        <input matInput type=\\\"text\\\" name=\\\"requestTag\\\" [(ngModel)]=\\\"createExtSys1.requestTag\\\">\\r\\n                      </mat-form-field>\\r\\n                    </div>\\r\\n        \\r\\n                  </div>\\r\\n        \\r\\n                  <div fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"50\\\" class=\\\"pr-1\\\" *ngIf>\\r\\n        \\r\\n        \\r\\n                    <div class=\\\"pb-1\\\">\\r\\n                      <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\">\\r\\n                        <mat-label>Message duplication</mat-label>\\r\\n                        <input matInput type=\\\"text\\\" name=\\\"msgDuplication\\\" [(ngModel)]=\\\"createExtSys1.msgDuplication\\\">\\r\\n                      </mat-form-field>\\r\\n                    </div>\\r\\n                    <div class=\\\"pb-1\\\">\\r\\n                      <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\">\\r\\n                        <mat-select [(value)]=\\\"createExtSys1.commChannel\\\" #comm name=\\\"commChannel\\\">\\r\\n                          <mat-option>None</mat-option>\\r\\n                          <mat-option value=\\\"EJB\\\">EJB</mat-option>\\r\\n                          <mat-option value=\\\"MDB\\\">MDB</mat-option>\\r\\n                          <mat-option value=\\\"Directory\\\">Directory</mat-option>\\r\\n                        </mat-select>\\r\\n                      </mat-form-field>\\r\\n                    </div>\\r\\n        \\r\\n                    <div class=\\\"pb-1\\\">\\r\\n                      <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\">\\r\\n                        <mat-label>Format type</mat-label>\\r\\n                        <input matInput type=\\\"text\\\" name=\\\"formatType\\\" [(ngModel)]=\\\"createExtSys1.formatType\\\">\\r\\n                      </mat-form-field>\\r\\n                    </div>\\r\\n        \\r\\n                    <div class=\\\"pb-1\\\">\\r\\n                      <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\">\\r\\n                        <mat-label>Request schema name</mat-label>\\r\\n                        <input matInput type=\\\"text\\\" name=\\\"reqSchemaName\\\" [(ngModel)]=\\\"createExtSys1.reqSchemaName\\\">\\r\\n                      </mat-form-field>\\r\\n                    </div>\\r\\n        \\r\\n                    <div class=\\\"pb-1\\\">\\r\\n                      <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\">\\r\\n                        <mat-label>Resp schema name</mat-label>\\r\\n                        <input matInput type=\\\"text\\\" name=\\\"respSchemaName\\\" [(ngModel)]=\\\"createExtSys1.respSchemaName\\\">\\r\\n                      </mat-form-field>\\r\\n                    </div>\\r\\n        \\r\\n                    <div class=\\\"pb-1\\\">\\r\\n                      <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\">\\r\\n                        <mat-label>Error schema name</mat-label>\\r\\n                        <input matInput type=\\\"text\\\" name=\\\"errSchemaName\\\" [(ngModel)]=\\\"createExtSys1.errSchemaName\\\">\\r\\n                      </mat-form-field>\\r\\n        \\r\\n                    </div>\\r\\n                    <div class=\\\"pb-1\\\">\\r\\n                      <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\">\\r\\n                        <mat-label>Request queue name</mat-label>\\r\\n                        <input matInput type=\\\"text\\\" name=\\\"reqQueueName\\\" [(ngModel)]=\\\"createExtSys1.reqQueueName\\\">\\r\\n                      </mat-form-field>\\r\\n                    </div>\\r\\n        \\r\\n                    <div class=\\\"pb-1\\\">\\r\\n                      <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\">\\r\\n                        <mat-label>Response queue name</mat-label>\\r\\n                        <input matInput type=\\\"text\\\" name=\\\"respQueueName\\\" [(ngModel)]=\\\"createExtSys1.respQueueName\\\">\\r\\n                      </mat-form-field>\\r\\n                    </div>\\r\\n        \\r\\n        \\r\\n        \\r\\n                  </div>\\r\\n        \\r\\n                  <div fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"50\\\" class=\\\"pr-1\\\" *ngIf>\\r\\n                    <div class=\\\"pb-1\\\">\\r\\n                      <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\">\\r\\n                        <mat-label>Error queue name</mat-label>\\r\\n                        <input matInput type=\\\"text\\\" id=\\\"errQueueName\\\" style=\\\"float: right; \\\" name=\\\"errQueueName\\\"\\r\\n                          [(ngModel)]=\\\"createExtSys1.errQueueName\\\">\\r\\n                      </mat-form-field>\\r\\n        \\r\\n                    </div>\\r\\n                    <div class=\\\"pb-1\\\">\\r\\n                      <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\">\\r\\n                        <mat-label>Request directory name</mat-label>\\r\\n                        <input matInput type=\\\"text\\\" name=\\\"reqDirectoryName\\\" [(ngModel)]=\\\"createExtSys1.reqDirectoryName\\\">\\r\\n                      </mat-form-field>\\r\\n                    </div>\\r\\n                    <div class=\\\"pb-1\\\">\\r\\n                      <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\">\\r\\n                        <mat-label>Response directory name</mat-label>\\r\\n                        <input matInput type=\\\"text\\\" name=\\\"respDirectoryName\\\" [(ngModel)]=\\\"createExtSys1.respDirectoryName\\\">\\r\\n                      </mat-form-field>\\r\\n                    </div>\\r\\n        \\r\\n                    <div class=\\\"pb-1\\\">\\r\\n                      <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\">\\r\\n                        <mat-label>Error directory name</mat-label>\\r\\n                        <input matInput type=\\\"text\\\" name=\\\"errDirectoryName\\\" [(ngModel)]=\\\"createExtSys1.errDirectoryName\\\">\\r\\n                      </mat-form-field>\\r\\n                    </div>\\r\\n                    <div class=\\\"pb-1\\\">\\r\\n                      <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\">\\r\\n                        <mat-label>Request xslt name</mat-label>\\r\\n                        <input matInput type=\\\"text\\\" name=\\\"reqXsltName\\\" [(ngModel)]=\\\"createExtSys1.reqXsltName\\\">\\r\\n                      </mat-form-field>\\r\\n                    </div>\\r\\n                    <div class=\\\"pb-1\\\">\\r\\n                      <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\">\\r\\n                        <mat-label>Response xslt name</mat-label>\\r\\n                        <input matInput type=\\\"text\\\" name=\\\"respXsltName\\\" [(ngModel)]=\\\"createExtSys1.respXsltName\\\">\\r\\n                      </mat-form-field>\\r\\n                    </div>\\r\\n                    <div class=\\\"pb-1\\\">\\r\\n                      <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\">\\r\\n                        <mat-label>Latest amend number</mat-label>\\r\\n                        <input matInput type=\\\"text\\\" name=\\\"latestAmendNo\\\" [(ngModel)]=\\\"createExtSys1.latestAmendNo\\\">\\r\\n                      </mat-form-field>\\r\\n                    </div>\\r\\n                    <div class=\\\"pb-1\\\">\\r\\n                      <mat-checkbox name=\\\"errXsltName\\\" [(ngModel)]=\\\"createExtSys1.errXsltName\\\">Error xslt name?</mat-checkbox>\\r\\n                    </div>\\r\\n        \\r\\n                    <div class=\\\"pb-1\\\">\\r\\n                      <mat-label for=\\\"xsdFile\\\">Xsd file</mat-label>\\r\\n                      <input type=\\\"file\\\" id=\\\"xsdFile\\\" name=\\\"xsdFile\\\" [(ngModel)]=\\\"createExtSys1.xsdFile\\\">\\r\\n                    </div>\\r\\n        \\r\\n                  </div>\\r\\n        \\r\\n                </div> -->\\r\\n  \\r\\n  \\r\\n  <!-- </form>  -->\\r\\n  <!-- <br>\\r\\n    <mat-card *ngIf=\\\"dataForm\\\" style=\\\"width: 60%;  margin-left:200px;\\\">\\r\\n      <mat-card-title>\\r\\n    \\r\\n      </mat-card-title>\\r\\n      <mat-card-content>\\r\\n    \\r\\n        <table id=\\\"customers\\\">\\r\\n          <tr>\\r\\n            <th>RECORD STATUS:</th>\\r\\n            <td>\\r\\n              <mat-chip>{{dataForm?.recordStatus }}</mat-chip>\\r\\n            </td>\\r\\n    \\r\\n            <th>CREATED BY:</th>\\r\\n            <td>\\r\\n              <mat-chip>{{dataForm?.creatorId }}</mat-chip>\\r\\n            </td>\\r\\n            <th>AUTHORIZED BY:</th>\\r\\n            <td>\\r\\n              <mat-chip>{{dataForm?.verifierId}}</mat-chip>\\r\\n            </td>\\r\\n          </tr>\\r\\n          <tr>\\r\\n            <th>MODIFICATION NO:</th>\\r\\n            <td>\\r\\n              <mat-chip>{{dataForm?.versionNo}}</mat-chip>\\r\\n            </td>\\r\\n            <th>CREATION DATE:</th>\\r\\n            <td>\\r\\n              <mat-chip>{{dataForm?.createdAt | date:'d/M/yy'}}</mat-chip>\\r\\n            </td>\\r\\n            <th>AUTHORIZATION DATE:</th>\\r\\n            <td>\\r\\n              <mat-chip>{{dataForm?.verifierDtStamp | date:'d/M/yy'}}</mat-chip>\\r\\n            </td>\\r\\n            <th>STATUS:</th>\\r\\n            <td>\\r\\n    \\r\\n              <mat-chip>{{dataForm?.authStatus}}</mat-chip>\\r\\n    \\r\\n            </td>\\r\\n          </tr>\\r\\n        </table>\\r\\n      </mat-card-content>\\r\\n    </mat-card> -->\\r\\n  <br><br><br><br><br><br><br><br><br><br><br><br>\"","export default \"<mat-toolbar color=\\\"primary\\\"  style=\\\"height:30px; font-size: small;\\\">\\r\\n  <span>External System</span>\\r\\n</mat-toolbar>\\r\\n<br />\\r\\n<mat-card >\\r\\n  <mat-card-title>\\r\\n    <!-- External System -->\\r\\n  </mat-card-title>\\r\\n  <mat-card-content >\\r\\n    <div class=\\\"margin-333\\\">\\r\\n      <div fxLayout=\\\"row\\\" fxFlex=\\\"1 1 0%\\\" fxLayoutAlign=\\\"end center\\\" fxLayoutGap=\\\"5px\\\">\\r\\n        <button mat-raised-button color=\\\"primary\\\" *ngIf=\\\"roleCodes.new\\\" [routerLink]=\\\"'/sias-v2/ExcelExternalSys'\\\"> {{roleCodes.new.labelDescription}}</button>\\r\\n        <button mat-raised-button color=\\\"warn\\\" [routerLink]=\\\"'/dashboard'\\\">Exit</button>\\r\\n      </div>\\r\\n    </div>\\r\\n<br>\\r\\n<!-- <button (click)=\\\"exportAsXLSX()\\\" mat-button color=\\\"primary\\\">External System Report <i class=\\\"material-icons\\\">\\r\\n  cloud_download\\r\\n  </i></button> -->\\r\\n    <div class=\\\"margin-333\\\">\\r\\n      <table mat-table [dataSource]=\\\"dataSource\\\" matSort matSortActive=\\\"modifiedTime\\\" matSortDirection=\\\"desc\\\">\\r\\n\\r\\n        <!-- <ng-container matColumnDef=\\\"id\\\" hidden>\\r\\n              <th mat-header-cell *matHeaderCellDef class=\\\"text-md-center font-weight-bold text-white \\\">Id </th>\\r\\n              <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"text-md-center \\\"> {{element.id}} </td>\\r\\n            </ng-container> -->\\r\\n\\r\\n        <ng-container matColumnDef=\\\"extSysCode\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header>External System\\r\\n            Code </th>\\r\\n          <td mat-cell *matCellDef=\\\"let element\\\"  style=\\\"color:blue;\\\"><a\\r\\n            routerLink=\\\"/sias-v2/excelExtSysUpdate\\\"   (click)=\\\"getExtSys(element)\\\">\\r\\n              {{element.extSysCode}}</a> </td>\\r\\n        </ng-container>\\r\\n       \\r\\n        <!-- Name Column -->\\r\\n        <ng-container matColumnDef=\\\"extSysName\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header>External System\\r\\n            Name </th>\\r\\n          <td mat-cell *matCellDef=\\\"let element\\\" > {{element.extSysName}} </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"authStatus\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef>Status</th>\\r\\n          <td mat-cell *matCellDef=\\\"let element\\\" > {{element.authStatus}} </td>\\r\\n        </ng-container>\\r\\n\\r\\n            <ng-container matColumnDef=\\\"modifiedTime\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header>Date</th>\\r\\n          <td mat-cell *matCellDef=\\\"let element\\\" > {{element.modifiedTime | date}} </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n        <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n      </table>\\r\\n      <mat-paginator [pageSizeOptions]=\\\"[5, 10, 20]\\\" showFirstLastButtons></mat-paginator>\\r\\n    </div>\\r\\n  </mat-card-content>\\r\\n</mat-card>\\r\\n<br><br><br><br><br><br><br><br>\"","export default \"<mat-toolbar color=\\\"primary\\\" style=\\\"height:30px; font-size: small;\\\">\\r\\n  <span>External System</span>\\r\\n</mat-toolbar>\\r\\n<br><br>\\r\\n<div fxLayout=\\\"row\\\">\\r\\n  <span fxFlex></span>\\r\\n  <div fxFlex=\\\"50\\\">\\r\\n    <mat-card style=\\\"width: 70%;margin-left:15%\\\">\\r\\n      <mat-card-title></mat-card-title>\\r\\n      <mat-card-content>\\r\\n\\r\\n        <form #fn=\\\"ngForm\\\" novalidate>\\r\\n          <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\">\\r\\n            <div fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"50\\\" class=\\\"pr-1\\\">\\r\\n              <!-- <div class=\\\"pb-1\\\">\\r\\n                <mat-form-field class=\\\"full-width\\\">\\r\\n                  <input matInput type=\\\"text\\\" disabled placeholder=\\\"External System Code\\\" [(ngModel)]=\\\"formData.id\\\"\\r\\n                    name=\\\"id\\\">\\r\\n                </mat-form-field>\\r\\n              </div> -->\\r\\n              <div class=\\\"pb-1\\\">\\r\\n                <mat-form-field class=\\\"full-width\\\">\\r\\n                  <mat-label style=\\\"color: black\\\">External System Code</mat-label>\\r\\n                  <input matInput type=\\\"text\\\" placeholder=\\\"External System Code\\\" required\\r\\n                    [(ngModel)]=\\\"formData.extSysCode\\\" name=\\\"extSysCode\\\" readonly>\\r\\n                </mat-form-field>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"pb-1\\\">\\r\\n                <mat-form-field class=\\\"full-width\\\">\\r\\n                  <mat-label style=\\\"color: black\\\">External System Name</mat-label>\\r\\n                  <input matInput type=\\\"text\\\" placeholder=\\\"External System Name\\\" required\\r\\n                    [(ngModel)]=\\\"formData.extSysName\\\" name=\\\"extSysName\\\"  (keyup)=\\\"fun(formData.extSysName)\\\" [readonly]=\\\"is_edit\\\">\\r\\n                </mat-form-field>\\r\\n              </div>\\r\\n\\r\\n              <!-- <div class=\\\"pb-1\\\">\\r\\n                <mat-form-field class=\\\"full-width\\\">\\r\\n                  <input matInput type=\\\"text\\\" placeholder=\\\"Department\\\" required\\r\\n                    [(ngModel)]=\\\"formData.department\\\" name=\\\"department\\\" [disabled]=\\\"is_edit\\\">\\r\\n                </mat-form-field>\\r\\n              </div> -->\\r\\n\\r\\n              <div class=\\\"pb-1\\\">\\r\\n                <mat-form-field class=\\\"full-width\\\" style=\\\"color: black\\\">\\r\\n                  <mat-label style=\\\"color: black\\\">Department</mat-label>\\r\\n                  <!-- <mat-label>Department   [(ngModel)]=\\\"formData.department\\\"</mat-label> -->\\r\\n                  <input type=\\\"text\\\" matInput style=\\\"color: black\\\" (keyup)=\\\"keyPress($event)\\\" [matAutocomplete]=\\\"auto\\\"\\r\\n                    [disabled]=\\\"is_edit\\\" placeholder=\\\"Department\\\" name=\\\"department\\\" required [(ngModel)]=\\\"formData.department\\\">\\r\\n\\r\\n                  <mat-autocomplete #auto=\\\"matAutocomplete\\\">\\r\\n                    <mat-option *ngFor=\\\"let o of allDeptNames \\\" [value]=\\\"o\\\">\\r\\n                      <b>{{ o }} </b>\\r\\n                    </mat-option>\\r\\n                  </mat-autocomplete>\\r\\n                </mat-form-field>\\r\\n              </div>\\r\\n\\r\\n            </div>\\r\\n          </div>\\r\\n          <!-- <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" fxLayoutGap=\\\"16px\\\">\\r\\n              <button mat-raised-button color=\\\"primary\\\" *ngIf=\\\" !editFunction && roleCodes.new\\\" [routerLink]=\\\"'/sias-v2/ExcelExternalSys'\\\">{{roleCodes.new.labelDescription}}</button>\\r\\n            <button mat-raised-button #updateBtn *ngIf=\\\"editFunction \\\"  color=\\\"primary\\\" [disabled]=\\\"savedisable\\\"\\r\\n              (click)=\\\"onSubmit(formData)\\\">Submit</button>\\r\\n            <button mat-raised-button color=\\\"warn\\\" [routerLink]=\\\"'/sias-v2/ExtSumamry'\\\">Exit</button>\\r\\n            <button mat-raised-button color=\\\"primary\\\" (click)=\\\"changeStatus()\\\" *ngIf=\\\"poovar && roleCodes.edit\\\">{{roleCodes.edit.labelDescription}}</button>\\r\\n            <button type=\\\"submit\\\" mat-raised-button color=\\\"primary\\\" *ngIf=\\\"!editFunction && roleCodes.auth\\\"\\r\\n              (click)=\\\"onClickOfAuth()\\\">{{roleCodes.auth.labelDescription}}</button> -->\\r\\n          <!-- <button type=\\\"button\\\" mat-raised-button color=\\\"red\\\" (click)=\\\"onClickOfDeleteOfUpdateExecel()\\\"\\r\\n              [disabled]=\\\"disableDeleteButton\\\">Delete</button> -->\\r\\n          <!-- <button type=\\\"button\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"onClickOfClose()\\\"\\r\\n              *ngIf=\\\"formData.recordStatus =='OPEN' && !editFunction && roleCodes.close\\\">{{roleCodes.close.labelDescription}}</button> -->\\r\\n          <!-- && formData.authStatus !='U'\\\" give in close -->\\r\\n          <!-- <button type=\\\"button\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"onClickOfReOpen()\\\" -->\\r\\n          <!-- *ngIf=\\\"formData.recordStatus =='CLOSED' && !editFunction && roleCodes.reopen\\\">{{roleCodes.reopen.labelDescription}}</button> -->\\r\\n\\r\\n\\r\\n          <!-- </div> -->\\r\\n          <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" fxLayoutGap=\\\"16px\\\">\\r\\n            <button mat-raised-button color=\\\"primary\\\" *ngIf=\\\" !editFunction && roleCodes.new\\\"\\r\\n              [routerLink]=\\\"'/sias-v2/ExcelExternalSys'\\\">{{roleCodes.new.labelDescription}}</button>\\r\\n            <button mat-raised-button #updateBtn *ngIf=\\\"editFunction \\\" color=\\\"primary\\\" [disabled]=\\\"!fn.form.valid || !space ||savedisable\\\"\\r\\n              (click)=\\\"onSubmit(formData)\\\">Submit</button>\\r\\n\\r\\n            <button mat-raised-button color=\\\"primary\\\" (click)=\\\"changeStatus()\\\"\\r\\n              *ngIf=\\\"poovar && roleCodes.edit && formData.recordStatus=='OPEN'\\\">{{roleCodes.edit.labelDescription}}</button>\\r\\n            <button type=\\\"submit\\\" mat-raised-button color=\\\"primary\\\"\\r\\n              *ngIf=\\\"!editFunction && roleCodes.auth && formData.authStatus=='UNAUTHORIZED'\\\"\\r\\n              (click)=\\\"onClickOfAuth()\\\">{{roleCodes.auth.labelDescription}}</button>\\r\\n            <!-- <button type=\\\"button\\\" mat-raised-button color=\\\"red\\\" (click)=\\\"onClickOfDeleteOfUpdateExecel()\\\"\\r\\n              [disabled]=\\\"disableDeleteButton\\\">Delete</button> -->\\r\\n              <!-- <button type=\\\"button\\\" mat-raised-button color=\\\"red\\\" (click)=\\\"onClickOfDeleteOfUpdateExecel()\\\" color=\\\"warn\\\" *ngIf=\\\"formData.verifiedOnce=='NO'\\\"\\r\\n              [disabled]=\\\"disableDeleteButton\\\">Delete</button>  -->\\r\\n                <!-- delete button by vidya -->\\r\\n                <button type=\\\"button\\\" mat-raised-button color=\\\"red\\\" (click)=\\\"onClickOfDeleteOfUpdateExecel()\\\" color=\\\"warn\\\" *ngIf=\\\"formData.verifiedOnce=='NO' &&!editFunction && roleCodes.delete\\\"\\r\\n                [disabled]=\\\"disableDeleteButton\\\">{{roleCodes.delete.labelDescription}}</button> \\r\\n            <button type=\\\"button\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"onClickOfClose()\\\"\\r\\n              *ngIf=\\\"formData.recordStatus =='OPEN' && formData.verifiedOnce=='YES' && !editFunction && roleCodes.close\\\">{{roleCodes.close.labelDescription}}</button>\\r\\n            <!-- && formData.authStatus !='U'\\\" give in close -->\\r\\n            <button type=\\\"button\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"onClickOfReOpen()\\\"\\r\\n              *ngIf=\\\"formData.recordStatus =='CLOSED' && formData.authStatus=='AUTHORIZED'&&!editFunction && roleCodes.reopen\\\">{{roleCodes.reopen.labelDescription}}</button>\\r\\n            <button mat-raised-button color=\\\"warn\\\" [routerLink]=\\\"'/sias-v2/ExtSumamry'\\\">Exit</button>\\r\\n\\r\\n          </div>\\r\\n        </form>\\r\\n\\r\\n\\r\\n      </mat-card-content>\\r\\n    </mat-card>\\r\\n  </div>\\r\\n  <span fxFlex></span>\\r\\n</div>\\r\\n<br><br>\\r\\n<!--vidya starts here-->\\r\\n<div fxLayout=\\\"row\\\">\\r\\n  <div fxFlex></div>\\r\\n  <div fxFlex=\\\"95\\\">\\r\\n    <mat-card style=\\\"width: 70%;  margin-left:20%;\\\">\\r\\n      <mat-card-title>\\r\\n\\r\\n      </mat-card-title>\\r\\n      <mat-card-content>\\r\\n        <div fxLayout=\\\"row\\\">\\r\\n\\r\\n          <table id=\\\"customers\\\">\\r\\n            <tr>\\r\\n              <th>Record Status:</th>\\r\\n              <td>\\r\\n                <mat-chip>{{formData.recordStatus }}</mat-chip>\\r\\n              </td>\\r\\n              <th>Auth Status:</th>\\r\\n              <td>\\r\\n\\r\\n                <mat-chip>{{formData.authStatus}}</mat-chip>\\r\\n                <!-- <mat-form-field appearance=\\\"fill\\\">\\r\\n                  <mat-label>Status</mat-label>\\r\\n                  <input matInput type=\\\"text\\\" placeholder=\\\"\\\" #exSys>\\r\\n                  <mat-icon matSuffix>person</mat-icon>\\r\\n                </mat-form-field> -->\\r\\n              </td>\\r\\n              <th>Created By:</th>\\r\\n              <td>\\r\\n\\r\\n                <mat-chip>{{formData.modifiedBy}}</mat-chip>\\r\\n              </td>\\r\\n              <th>Authorized By:</th>\\r\\n              <td>\\r\\n                <mat-chip>{{formData.authorizedBy}}</mat-chip>\\r\\n              </td>\\r\\n            </tr>\\r\\n            <tr>\\r\\n              <th>Modification No:</th>\\r\\n              <td>\\r\\n                <mat-chip>{{formData.version}}</mat-chip>\\r\\n              </td>\\r\\n              <th>Creation Date:</th>\\r\\n              <td>\\r\\n                <mat-chip>{{formData.modifiedTime | date: 'MM/dd/yyyy, h:mm a'}}</mat-chip>\\r\\n              </td>\\r\\n              <th>Authorized Date:</th>\\r\\n              <td>\\r\\n                <mat-chip>{{formData.authorizedTime | date: 'MM/dd/yyyy, h:mm a'}}</mat-chip>\\r\\n              </td>\\r\\n              <!-- added by vidya for issue id 583 -->\\r\\n              <th>First Time Auth</th>\\r\\n              <td>\\r\\n                <mat-chip>{{formData.verifiedOnce}}</mat-chip>\\r\\n              </td>\\r\\n\\r\\n            </tr>\\r\\n          </table>\\r\\n        </div>\\r\\n      </mat-card-content>\\r\\n    </mat-card>\\r\\n  </div>\\r\\n  <div fxFlex></div>\\r\\n\\r\\n</div>\\r\\n<!--ends here-->\\r\\n<br><br>\"","export default \"<mat-toolbar color=\\\"primary\\\" style=\\\"height:30px; font-size: small;\\\">\\r\\n  <span>Create Rules</span>\\r\\n\\r\\n</mat-toolbar>\\r\\n<br>\\r\\n<div style=\\\"width:88%;padding-left: 10%\\\">\\r\\n  <mat-card *ngIf=\\\"!showRuleValidation\\\">\\r\\n    <form #createRule=\\\"ngForm\\\">\\r\\n      <div fxLayout=\\\"row wrap\\\">\\r\\n\\r\\n        <div fxFlex=\\\"100\\\">\\r\\n          <div fxFlex=\\\"25\\\">\\r\\n            <mat-form-field appearance=\\\"outline\\\">\\r\\n              <mat-label>Rule Id</mat-label>\\r\\n              <input matInput type=\\\"text\\\" #ruleId=\\\"ngModel\\\" name=\\\"ruleId\\\" (keyup)=\\\"ruleIdInvalidOrNot(ruleId.value)\\\" [disabled]=\\\"disableSubmit\\\" required #ruleId #ruleId=\\\"ngModel\\\" [(ngModel)]=\\\"ruleConfig.ruleId\\\" required>\\r\\n              <mat-hint class=\\\"redC\\\" *ngIf=\\\"ruleIdInvalid\\\">Invalid RuleId</mat-hint>\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n          <div fxFlex=\\\"25\\\">\\r\\n            <mat-form-field appearance=\\\"outline\\\">\\r\\n              <mat-label>Rule Name</mat-label>\\r\\n              <input matInput type=\\\"text\\\" name=\\\"ruleName\\\" [disabled]=\\\"disableSubmit\\\" #ruleName #ruleName=\\\"ngModel\\\" required\\r\\n                [(ngModel)]=\\\"ruleConfig.ruleName\\\">\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n          <div fxFlex=\\\"25\\\"></div>\\r\\n          <div fxFlex=\\\"25\\\"></div>\\r\\n          <div fxFlex=\\\"10\\\"></div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div fxLayout=\\\"row wrap\\\">\\r\\n        <div fxFlex=\\\"100\\\">\\r\\n          <div fxFlex=\\\"25\\\">\\r\\n            <mat-form-field appearance=\\\"outline\\\">\\r\\n              <mat-label>Source System</mat-label>\\r\\n\\r\\n              <input matInput name=\\\"sourceSystem\\\" required #sourceSystem [(ngModel)]=\\\"sourcesystem\\\"\\r\\n              (keyup)=\\\"onsearchingTablName($event)\\\" [matAutocomplete]=\\\"autotablName\\\" [disabled]=\\\"disableSubmit\\\">\\r\\n              <mat-icon matSuffix>arrow_drop_down</mat-icon>\\r\\n\\r\\n              <mat-autocomplete #autotablName=\\\"matAutocomplete\\\"  (selectionChange)=\\\"onSlectionExternalSystem($event)\\\"\\r\\n              (optionSelected)=\\\"onSlectionExternalSystem($event)\\\">\\r\\n               <mat-option *ngFor=\\\"let sys of externalsystem\\\"\\r\\n                 [value]=\\\"sys\\\" [hidden]=\\\"sys == desSystem || sys==validationData\\\">{{sys}}</mat-option>\\r\\n              </mat-autocomplete>\\r\\n\\r\\n\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n          <div fxFlex=\\\"25\\\">\\r\\n            <mat-form-field appearance=\\\"outline\\\">\\r\\n              <mat-label>Message Type</mat-label>\\r\\n              <mat-select (selectionChange)=\\\"onSelectionOFMessageType($event)\\\" name=\\\"messageType\\\"\\r\\n              #messageType=\\\"ngModel\\\" disabled\\r\\n              [(ngModel)]=\\\"sourceSysData.messageType\\\" required\\r\\n                (optionSelected)=\\\"onSelectionOFMessageType($event)\\\">\\r\\n                <mat-option value>--Please Select---</mat-option>\\r\\n                <mat-option value=\\\"I\\\">Incoming\\r\\n                </mat-option>\\r\\n                <mat-option value=\\\"O\\\">OutGoing\\r\\n                </mat-option>\\r\\n                <mat-option value=\\\"A\\\">All</mat-option>\\r\\n              </mat-select>\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n          <div fxFlex=\\\"25\\\">\\r\\n            <mat-form-field appearance=\\\"outline\\\">\\r\\n              <mat-label>Source Service</mat-label>\\r\\n              <input matInput type=\\\"text\\\"  name=\\\"operationName\\\" [disabled]=\\\"disableSubmit\\\" [(ngModel)]=\\\"sourceSysData.operationName\\\" readonly>\\r\\n              <!-- <mat-select required name=\\\"operationName\\\" [(ngModel)]=\\\"sourceSysData.operationName\\\">\\r\\n                  <mat-option value>--Please Select---</mat-option>\\r\\n                <mat-option *ngFor=\\\"let serv of sourceService\\\" [value]=\\\"serv\\\">{{serv}}</mat-option>\\r\\n\\r\\n              </mat-select> -->\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n          <div fxFlex=\\\"25\\\">\\r\\n            <mat-form-field appearance=\\\"outline\\\">\\r\\n              <mat-label>Source Operation</mat-label>\\r\\n              <input matInput type=\\\"text\\\" name=\\\"serviceName\\\" [disabled]=\\\"disableSubmit\\\" [(ngModel)]=\\\"sourceSysData.serviceName\\\" readonly>\\r\\n              <!-- <mat-select required name=\\\"\\\">\\r\\n                  <mat-option value>--Please Select---</mat-option>\\r\\n                <mat-option *ngFor=\\\"let opt of sourceOperation\\\" [value]=\\\"opt.headerValue\\\">{{opt.headerValue}}</mat-option>\\r\\n\\r\\n              </mat-select> -->\\r\\n\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n          <div fxFlex=\\\"10\\\"></div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div fxLayout=\\\"row wrap\\\">\\r\\n        <div fxFlex=\\\"100\\\">\\r\\n          <div fxFlex=\\\"25\\\">\\r\\n            <mat-form-field appearance=\\\"outline\\\">\\r\\n              <mat-label>Destination System</mat-label>\\r\\n              <input matInput name=\\\"destinationSystem\\\"\\r\\n              (keyup)=\\\"onsearchingTablName($event)\\\" [(ngModel)]=\\\"destination\\\"\\r\\n              [matAutocomplete]=\\\"autotablName1\\\" #destinationSystem \\r\\n                 required [disabled]=\\\"disableSubmit\\\">\\r\\n                <mat-icon matSuffix>arrow_drop_down</mat-icon>\\r\\n\\r\\n              <mat-autocomplete #autotablName1=\\\"matAutocomplete\\\"  (selectionChange)=\\\"destinaltionSelection($event)\\\"\\r\\n              (optionSelected)=\\\"destinaltionSelection($event)\\\">\\r\\n                <mat-option *ngFor=\\\"let sys of externalsystem\\\" [value]=sys [hidden]=\\\"sys === srcSystem || sys ==validationData \\\">{{sys}}</mat-option>\\r\\n              </mat-autocomplete>\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n          <div fxFlex=\\\"25\\\">\\r\\n            <mat-form-field appearance=\\\"outline\\\">\\r\\n              <mat-label>Message Type</mat-label>\\r\\n              <mat-select (selectionChange)=\\\"ondestinationMsgType($event)\\\"required disabled\\r\\n              name=\\\"destinationmessageType\\\" [(ngModel)]=\\\"destinationSysData.messageType\\\" [disabled]=\\\"disableSubmit\\\"\\r\\n                (optionSelected)=\\\"ondestinationMsgType($event)\\\">\\r\\n                <mat-option value>--Please Select---</mat-option>\\r\\n                <mat-option value=\\\"I\\\">Incoming\\r\\n                </mat-option>\\r\\n                <mat-option value=\\\"O\\\">OutGoing\\r\\n                </mat-option>\\r\\n                <mat-option value=\\\"A\\\">All</mat-option>\\r\\n              </mat-select>\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n          <div fxFlex=\\\"25\\\">\\r\\n            <mat-form-field appearance=\\\"outline\\\">\\r\\n              <mat-label>Destination Service</mat-label>\\r\\n\\r\\n               <input matInput type=\\\"text\\\" name=\\\"destinationserviceName\\\" #ngModel #destServ #destServ=\\\"ngModel\\\" [disabled]=\\\"disableSubmit\\\"\\r\\n                [(ngModel)]=\\\"destinationSysData.serviceName\\\" readonly>  \\r\\n                <!-- <mat-select required>\\r\\n                  <mat-option value>--Please Select---</mat-option>\\r\\n                  <mat-option *ngFor=\\\"let serv of destinatioRespService\\\" [value]=\\\"serv\\\">{{serv}}</mat-option>\\r\\n  \\r\\n                </mat-select> -->\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n          <div fxFlex=\\\"25\\\">\\r\\n            <mat-form-field appearance=\\\"outline\\\">\\r\\n              <mat-label>Destination Operation</mat-label>\\r\\n              <!-- <mat-select required>\\r\\n                  <mat-option value>--Please Select---</mat-option>\\r\\n                <mat-option *ngFor=\\\"let opert of destinationRespOperation\\\" [value]=\\\"opert\\\">{{opert}}</mat-option>\\r\\n\\r\\n              </mat-select> -->\\r\\n              <input matInput type=\\\"text\\\" name=\\\"destinationOperation\\\" [disabled]=\\\"disableSubmit\\\" [(ngModel)]=\\\"destinationSysData.operationName\\\" readonly>\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n          <div fxFlex=\\\"10\\\"></div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div fxLayout=\\\"row wrap\\\"> \\r\\n        <div fxFlex=\\\"100\\\" *ngFor=\\\"let multiple of multipleValidation;let i=index\\\">\\r\\n            <div fxLayout=\\\"row wrap\\\">\\r\\n                <div fxFlex=\\\"100\\\">\\r\\n                  <div fxFlex=\\\"25\\\">\\r\\n                    <mat-form-field appearance=\\\"outline\\\">\\r\\n        \\r\\n                      <mat-label>Validation System</mat-label>\\r\\n                      <input matInput required (keyup)=\\\"onsearchingTablName($event)\\\"  name=\\\" validationSystem_{{i}}\\\"\\r\\n                      #validationSystem [disabled]=\\\"disableSubmit\\\"\\r\\n                      [matAutocomplete]=\\\"autotablName2\\\" \\r\\n                        #validationSystem=\\\"ngModel\\\" [(ngModel)]=\\\"multiple.validationSystem\\\">\\r\\n                        <mat-icon matSuffix>arrow_drop_down</mat-icon>\\r\\n                        <mat-autocomplete #autotablName2=\\\"matAutocomplete\\\"  (selectionChange)=\\\"onValidtion($event,i)\\\"\\r\\n                        (optionSelected)=\\\"onValidtion($event,i)\\\">\\r\\n                        \\r\\n                        <mat-option *ngFor=\\\"let sys of externalsystem\\\" [value]=sys [hidden]=\\\"issourceSysDisabled(sys)|| sys == desSystem || sys == srcSystem\\\" >{{sys}}</mat-option>\\r\\n                      </mat-autocomplete>\\r\\n                    </mat-form-field>\\r\\n                  </div>\\r\\n                  <div fxFlex=\\\"25\\\">\\r\\n                    <mat-form-field appearance=\\\"outline\\\">\\r\\n                      <mat-label>Message Type</mat-label>\\r\\n                      <mat-select (selectionChange)=\\\"onvalidateMsgType($event)\\\" (optionSelected)=\\\"onvalidateMsgType($event)\\\" required name=\\\"messageType_{{i}}\\\"\\r\\n                      [(ngModel)]=\\\"multiple.messageType\\\" disabled>\\r\\n                          <mat-option value>--Please Select---</mat-option>\\r\\n                        <mat-option value=\\\"I\\\">Incoming\\r\\n                        </mat-option>\\r\\n                        <mat-option value=\\\"O\\\">OutGoing\\r\\n                        </mat-option>\\r\\n                        <mat-option value=\\\"A\\\">All</mat-option>\\r\\n                      </mat-select>\\r\\n                    </mat-form-field>\\r\\n                  </div>  \\r\\n                  <div fxFlex=\\\"25\\\">\\r\\n                    <mat-form-field appearance=\\\"outline\\\">\\r\\n                      <mat-label>Validation Service</mat-label>\\r\\n                      <input matInput name=\\\"service_{{i}}\\\" [(ngModel)]=\\\"multiple.service\\\" readonly [disabled]=\\\"disableSubmit\\\">\\r\\n                     <!-- <mat-select required name=\\\"service_{{i}}\\\" [(ngModel)]=\\\"validationTransData.serviceName\\\">\\r\\n                        <mat-option value>--Please Select---</mat-option>\\r\\n                       <mat-option *ngFor=\\\"let valServ of valService\\\" [value]=\\\"valServ\\\">\\r\\n                        {{valServ}}\\r\\n                       </mat-option>\\r\\n                     </mat-select> -->\\r\\n                    </mat-form-field>\\r\\n                  </div>\\r\\n                  <div fxFlex=\\\"25\\\">\\r\\n                    <mat-form-field appearance=\\\"outline\\\">\\r\\n                      <mat-label>Validation Operation</mat-label>\\r\\n                      <input matInput type=\\\"text\\\" [(ngModel)]=\\\"multiple.operation\\\"  name=\\\"operation{{i}}\\\" readonly [disabled]=\\\"disableSubmit\\\">\\r\\n                      <!-- <mat-select required [(ngModel)]=\\\"validationTransData.operationName\\\"  name=\\\"operation{{i}}\\\">\\r\\n                          <mat-option value>--Please Select---</mat-option>\\r\\n                        <mat-option *ngFor=\\\"let valOpt of valOperation\\\" [value]=\\\"valOpt\\\">\\r\\n                         {{valOpt}}\\r\\n                        </mat-option>\\r\\n                      </mat-select> -->\\r\\n                    </mat-form-field>\\r\\n                  </div>\\r\\n                  <div fxFlex=\\\"10\\\">\\r\\n                      <!-- <button mat-raised-button  color=\\\"primary\\\"> -->\\r\\n                        <mat-icon  (click)=\\\"removeValidation(i)\\\" color=\\\"warn\\\" style=\\\"cursor: pointer;margin-top:10px\\\">delete</mat-icon>\\r\\n                    <!-- </button> -->\\r\\n                    </div>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n        </div>\\r\\n      </div>\\r\\n      <div fxLayout=\\\"row wrap\\\">\\r\\n        <div fxFlex=\\\"100\\\">\\r\\n            <div fxFlex=\\\"60\\\">\\r\\n                <!-- <button mat-raised-button > -->\\r\\n                    <mat-icon (click)=\\\"addValidation()\\\" color=\\\"primary\\\" style=\\\"cursor: pointer\\\">add</mat-icon>\\r\\n                <!-- </button> -->\\r\\n            </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <!-- <div fxLayout=\\\"row wrap\\\">\\r\\n        <div fxFlex=\\\"100\\\">\\r\\n          <div fxFlex=\\\"25\\\">\\r\\n            <mat-form-field appearance=\\\"outline\\\">\\r\\n\\r\\n              <mat-label>Validation System</mat-label>\\r\\n              <mat-select (selectionChange)=\\\"onValidtion($event)\\\" multiple name=\\\"validationSystem\\\" #validationSystem\\r\\n                #validationSystem=\\\"ngModel\\\" [(ngModel)]=\\\"ruleConfig.validationSystems\\\">\\r\\n                <mat-option value>--Please Select---</mat-option>\\r\\n                <mat-option *ngFor=\\\"let sys of externalsystem\\\" [value]=sys>{{sys}}</mat-option>\\r\\n              </mat-select>\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n          <div fxFlex=\\\"25\\\">\\r\\n            <mat-form-field appearance=\\\"outline\\\">\\r\\n              <mat-label>Message Type</mat-label>\\r\\n              <mat-select (selectionChange)=\\\"onvalidateMsgType($event)\\\" (optionSelected)=\\\"onvalidateMsgType($event)\\\">\\r\\n                  <mat-option value>--Please Select---</mat-option>\\r\\n                <mat-option value=\\\"I\\\">Incoming\\r\\n                </mat-option>\\r\\n                <mat-option value=\\\"O\\\">OutGoing\\r\\n                </mat-option>\\r\\n                <mat-option value=\\\"A\\\">All</mat-option>\\r\\n              </mat-select>\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n          <div fxFlex=\\\"25\\\">\\r\\n            <mat-form-field appearance=\\\"outline\\\">\\r\\n              <mat-label>Validation Service</mat-label>\\r\\n             <mat-select>\\r\\n                <mat-option value>--Please Select---</mat-option>\\r\\n               <mat-option *ngFor=\\\"let valServ of valService\\\" [value]=\\\"valServ\\\">\\r\\n                {{valServ}}\\r\\n               </mat-option>\\r\\n             </mat-select>\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n          <div fxFlex=\\\"25\\\">\\r\\n            <mat-form-field appearance=\\\"outline\\\">\\r\\n              <mat-label>Validation Operation</mat-label>\\r\\n              <input matInput type=\\\"text\\\" name=\\\"validationOperation\\\">\\r\\n              <mat-select>\\r\\n                  <mat-option value>--Please Select---</mat-option>\\r\\n                <mat-option *ngFor=\\\"let valOpt of valOperation\\\" [value]=\\\"valOpt\\\">\\r\\n                 {{valOpt}}\\r\\n                </mat-option>\\r\\n              </mat-select>\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div> -->\\r\\n      <div fxLayout=\\\"row wrap\\\">\\r\\n        <div fxFlex=\\\"100\\\" fxLayoutGap=\\\"8px\\\">\\r\\n          <div fxFlex=\\\"40\\\"></div>\\r\\n          <div fxFlex=\\\"10\\\">\\r\\n\\r\\n            <button mat-raised-button (click)=\\\"onNext()\\\" color=\\\"primary\\\"  [disabled]=\\\"!createRule.valid || !srcSystem || !desSystem || ruleIdInvalid\\\">Next</button>\\r\\n\\r\\n\\r\\n          </div>\\r\\n          <div fxFlex=\\\"10\\\">\\r\\n\\r\\n            <button mat-raised-button type=\\\"reset\\\" color=\\\"warn\\\" (click)=\\\"onReset()\\\">Reset</button>\\r\\n          </div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n        </div>\\r\\n      </div>\\r\\n    </form>\\r\\n  \\r\\n  </mat-card>\\r\\n  \\r\\n</div>\\r\\n<div *ngIf=\\\"showpBar\\\">\\r\\n  <mat-progress-bar mode=\\\"indeterminate\\\"></mat-progress-bar>\\r\\n</div>\\r\\n<mat-card *ngIf=\\\"showRuleValidation\\\">\\r\\n    <form #createRule=\\\"ngForm\\\">\\r\\n  <div fxLayout=\\\"row wrap\\\">\\r\\n    <div fxFlex=\\\"100\\\">\\r\\n      <div fxFlex=\\\"25\\\">\\r\\n        <mat-form-field appearance=\\\"outline\\\" style=\\\"margin-left: 30px\\\">\\r\\n          <mat-label>Source System</mat-label>\\r\\n          <input matInput name=\\\"sourceSystem\\\" [(ngModel)]=\\\"sourcesystem\\\" required [disabled]=\\\"disableSubmit\\\" readonly>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n    \\r\\n    <div fxFlex=\\\"25\\\" *ngFor=\\\"let valiadtion of multipleValidation;let i=index\\\">\\r\\n        <mat-form-field appearance=\\\"outline\\\" style=\\\"margin-left: 30px\\\">\\r\\n          <mat-label>Validation System</mat-label>\\r\\n\\r\\n          <input matInput name=\\\"validtion_{{i}}\\\" [(ngModel)]=\\\"valiadtion.validationSystem\\\" required [disabled]=\\\"disableSubmit\\\" readonly>\\r\\n\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n     <div fxFlex=\\\"25\\\"></div>\\r\\n     <div fxFlex=\\\"25\\\"></div>\\r\\n     <div fxFlex=\\\"10\\\"></div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div>\\r\\n\\r\\n\\r\\n  </div>\\r\\n  <!-- <div fxLayout=\\\"row wrap\\\">\\r\\n    <div fxFlex=\\\"100\\\" fxLayoutGap=\\\"8px\\\">\\r\\n      <div>\\r\\n      <mat-label *ngIf=\\\"sourceDetails=='TCP/IP'\\\" fxFlex=\\\"25\\\"><b>Field No</b></mat-label>\\r\\n      <mat-label *ngIf=\\\"sourceDetails=='Https/Http'\\\" fxFlex=\\\"25\\\"><b>Tag</b></mat-label>\\r\\n    </div>\\r\\n\\r\\n\\r\\n      <div *ngFor=\\\"let c of multipleValidation\\\">\\r\\n       \\r\\n      <mat-label  *ngIf=\\\"valDeatils=='Https/Http'\\\" fxFlex=\\\"25\\\"><b>Tag</b></mat-label>\\r\\n      <mat-label  *ngIf=\\\"valDeatils=='TCP/IP'\\\" fxFlex=\\\"25\\\"><b>Field No</b></mat-label>\\r\\n    </div> \\r\\n   \\r\\n      \\r\\n    \\r\\n      <mat-label  fxFlex=\\\"25\\\"><b>Validation Method</b></mat-label>\\r\\n      <mat-label fxFlex=\\\"25\\\"><b>Validation Deatils</b></mat-label> \\r\\n      <mat-label fxFlex=\\\"10\\\"></mat-label>\\r\\n\\r\\n    </div>\\r\\n  </div>-->\\r\\n  <div fxLayout=\\\"row wrap\\\">\\r\\n    <div fxFlex=\\\"100\\\">\\r\\n      <div fxFlex=\\\"25\\\" style=\\\"margin-left: 30px\\\">\\r\\n        <mat-label *ngIf=\\\"sourceDetails=='TCP/IP'\\\" ><b></b></mat-label>\\r\\n        <mat-label *ngIf=\\\"sourceDetails=='Https/Http'\\\" ><b></b></mat-label>\\r\\n      </div>\\r\\n      <div fxFlex=\\\"25\\\" *ngFor=\\\"let c of multipleValidation\\\" style=\\\"margin-left: 30px\\\">\\r\\n        <mat-label  *ngIf=\\\"valDeatils=='Https/Http'\\\" ><b></b></mat-label>\\r\\n          <mat-label  *ngIf=\\\"valDeatils=='TCP/IP'\\\" ><b></b></mat-label>\\r\\n      </div>\\r\\n      <div fxFlex=\\\"25\\\" style=\\\"margin-left: -80px\\\">\\r\\n        <!-- <mat-label  ><b>Validation Method</b></mat-label> -->\\r\\n    \\r\\n      </div>\\r\\n      <div fxFlex=\\\"25\\\" >\\r\\n        <!-- <mat-label ><b>Validation Deatils</b></mat-label> -->\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div fxLayout=\\\"row wrap\\\" *ngFor=\\\"let dataarr of arrRuleValidation;let i=index\\\" #ruleValidation>\\r\\n    <div fxFlex=\\\"100\\\">\\r\\n      <div fxFlex=\\\"25\\\" *ngIf=\\\"sourceDetails=='TCP/IP'\\\">\\r\\n        <mat-form-field appearance=\\\"outline\\\" style=\\\"margin-left: 30px\\\">\\r\\n          <mat-label>Field No</mat-label>\\r\\n          <mat-select [disabled]=\\\"disableSubmit\\\"  name=\\\"messageKey_{{i}}\\\" required\\r\\n          #messageKey=\\\"ngModel\\\"\\r\\n          [(ngModel)]=\\\"dataarr.messageKey\\\">\\r\\n              <mat-option *ngFor=\\\"let data of messageBasisIso\\\"  [value]=\\\"data.messageKey\\\" required>{{data.messageKey}}<{{data.messageBasis}}</mat-option>\\r\\n            <!-- <mat-option value=\\\"data\\\" *ngFor=\\\"let data of messageBasisIso\\\">{{data}}</mat-option> -->\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div fxFlex=\\\"25\\\" *ngIf=\\\"sourceDetails=='Https/Http'\\\">\\r\\n        <mat-form-field appearance=\\\"outline\\\" style=\\\"margin-left: 30px\\\">\\r\\n          <mat-label>Tag</mat-label>\\r\\n          <mat-select [disabled]=\\\"disableSubmit\\\"  name=\\\"messageKey_{{i}}\\\" required\\r\\n          #messageKey=\\\"ngModel\\\"\\r\\n          [(ngModel)]=\\\"dataarr.messageKey\\\">\\r\\n            <!-- <mat-option  *ngFor=\\\"let data of xmlRespData\\\" value=\\\"data\\\">{{data}}</mat-option> -->\\r\\n            <mat-option  *ngFor=\\\"let data of messageBasisIso\\\" [value]=\\\"data.messageBasis\\\" required >{{data.messageBasis}}</mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div *ngFor=\\\"let x of multipleValidation;let i=index\\\">\\r\\n      <div fxFlex=\\\"25\\\" *ngIf=\\\"valDeatils=='TCP/IP'\\\">\\r\\n        <mat-form-field appearance=\\\"outline\\\" style=\\\"margin-left: 30px\\\">\\r\\n          <mat-label>Field No</mat-label>\\r\\n          <mat-select [disabled]=\\\"disableSubmit\\\" name=\\\"messageKey_{{i}}\\\" required\\r\\n          #messageKey=\\\"ngModel\\\" \\r\\n          [(ngModel)]=\\\"x.messageKey\\\">\\r\\n            <mat-option *ngFor=\\\"let data of xmlRespData\\\" [value]=\\\"data.messageKey\\\" required >{{data.messageKey}}<{{data.messageBasis}}</mat-option>\\r\\n            <!-- <mat-option  *ngFor=\\\"let data of messageBasisIso\\\" value=\\\"data.messageBasis\\\">{{data.messageBasis}}</mat-option> -->\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div fxFlex=\\\"25\\\" *ngIf=\\\"valDeatils=='Https/Http'\\\">\\r\\n        <mat-form-field appearance=\\\"outline\\\" style=\\\"margin-left: 30px\\\">\\r\\n          <mat-label>Tag</mat-label>\\r\\n          <mat-select [disabled]=\\\"disableSubmit\\\" name=\\\"messageKey_{{i}}\\\" required\\r\\n          #messageKey=\\\"ngModel\\\" \\r\\n          [(ngModel)]=\\\"x.messageKey\\\">\\r\\n              <mat-option  *ngFor=\\\"let data of xmlRespData\\\" [value]=\\\"data.messageBasis\\\" required >{{data.messageBasis}}</mat-option>\\r\\n            <!-- <mat-option  *ngFor=\\\"let data of xmlRespData\\\" value=\\\"data\\\">{{data}}</mat-option> -->\\r\\n            <!-- <mat-option  *ngFor=\\\"let data of messageBasisIso\\\" value=\\\"data.messageBasis\\\">{{data.messageBasis}}</mat-option> -->\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n    </div>\\r\\n      <div fxFlex=\\\"25\\\">\\r\\n        <mat-form-field appearance=\\\"outline\\\" style=\\\"margin-left: 20px\\\">\\r\\n          <mat-label>Validation Method</mat-label>\\r\\n          <input type=\\\"text\\\" name=\\\"validationMethod\\\"\\r\\n           #validationMethod=\\\"ngModel\\\" matInput required [disabled]=\\\"disableSubmit\\\"\\r\\n            [(ngModel)]=\\\"dataarr.validationMethod\\\">\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div fxFlex=\\\"25\\\">\\r\\n        <mat-form-field appearance=\\\"outline\\\" style=\\\"margin-left: 20px\\\">\\r\\n          <mat-label>Validation Details</mat-label>\\r\\n          <input type=\\\"text\\\" matInput name=\\\"validationDetail\\\" required\\r\\n          #validationDetail=\\\"ngModel\\\" [disabled]=\\\"disableSubmit\\\"\\r\\n          [(ngModel)]=\\\"dataarr.validationDetail\\\">\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div fxFlex=\\\"10\\\">\\r\\n        <!-- <button mat-raised-button  color=\\\"primary\\\"> -->\\r\\n          <mat-icon (click)=\\\"removeCreateRule(i)\\\" color=\\\"warn\\\" style=\\\"cursor: pointer;margin-top:10px\\\" [ngClass]=\\\"{'readonly-wrapper' : disableSubmit}\\\">delete</mat-icon>\\r\\n      <!-- </button> -->\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div fxLayout=\\\"row wrap\\\">\\r\\n    <div fxFlex=\\\"100\\\">\\r\\n    <div fxFlex=\\\"60\\\">\\r\\n        <!-- <button mat-raised-button > -->\\r\\n            <mat-icon (click)=\\\"addCreateRule()\\\" color=\\\"primary\\\" style=\\\"cursor: pointer\\\" [ngClass]=\\\"{'readonly-wrapper' : disableSubmit}\\\">add</mat-icon>\\r\\n        <!-- </button> -->\\r\\n    </div>\\r\\n    </div>\\r\\n    </div>\\r\\n    <br>\\r\\n  <div fxLayout=\\\"row wrap\\\">\\r\\n    <div fxFlex=\\\"100\\\">\\r\\n      <div fxFlex=\\\"40\\\"></div>\\r\\n      <div fxFlex=\\\"50\\\" fxLayoutGap=\\\"8px\\\">\\r\\n       \\r\\n        <button mat-raised-button (click)=\\\"Previous()\\\" color=\\\"warn\\\" [disabled]=\\\"disableSubmit\\\">Previous</button>\\r\\n        <button mat-raised-button (click)=\\\"submittingCreateRule()\\\" [disabled]=\\\"!createRule.valid || disableSubmit\\\"color=\\\"primary\\\">Submit</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <!-- <div fxLayout=\\\"row wrap\\\" *ngFor=\\\"let valiadtion of ruleValidtionResp\\\">\\r\\n      <div fxFlex=\\\"100\\\" >\\r\\n        <div fxFlex=\\\"16\\\">\\r\\n          <mat-form-field appearance=\\\"outline\\\">\\r\\n            <mat-label>Field No</mat-label>\\r\\n            <input matInput [(ngModel)]=\\\"valiadtion.fieldNo\\\">\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n      <div fxFlex=\\\"25\\\">\\r\\n            <mat-form-field appearance=\\\"outline\\\">\\r\\n                <mat-label>Node</mat-label>\\r\\n               <mat-select name=\\\"node\\\" #node #node=\\\"ngModel\\\" >\\r\\n                 <mat-option  *ngFor=\\\"let node of valiadtion.node;let i=index\\\"\\r\\n                 [value]=\\\"node[i]\\\">{{node[i]}}</mat-option>\\r\\n               </mat-select>\\r\\n              </mat-form-field>\\r\\n        </div>\\r\\n        \\r\\n      </div>\\r\\n    </div> -->\\r\\n  </form>\\r\\n</mat-card>\\r\\n\\r\\n<br><br>\\r\\n<!-- auditlog -->\\r\\n<div fxLayout=\\\"row\\\" *ngIf=\\\"auditShowStatus\\\">\\r\\n  <div fxFlex></div>\\r\\n  <div fxFlex=\\\"95\\\">\\r\\n    <mat-card style=\\\"width: 70%;  margin-left:260px;\\\">\\r\\n      <mat-card-title>\\r\\n      </mat-card-title>\\r\\n      <mat-card-content>\\r\\n        <div fxLayout=\\\"row\\\">\\r\\n          <table id=\\\"customers\\\">\\r\\n            <tr>\\r\\n              <th>Record Status:</th>\\r\\n              <td>\\r\\n                <mat-chip>{{ruleConfig.recordStatus }}</mat-chip>\\r\\n              </td>\\r\\n              <th>Input By:</th>\\r\\n              <td>\\r\\n                <mat-chip>{{ruleConfig.creatorId}}</mat-chip>\\r\\n              </td>\\r\\n              <th>Verified By:</th>\\r\\n              <td>\\r\\n                <mat-chip>{{ruleConfig.approverId}}</mat-chip>\\r\\n              </td>\\r\\n              <th>Verified Once:</th>\\r\\n              <td>\\r\\n                <mat-chip>{{ruleConfig.approvedEver }}</mat-chip>\\r\\n              </td>\\r\\n            </tr>\\r\\n            <tr>\\r\\n              <th>Modification No:</th>\\r\\n              <td>\\r\\n                <!-- <mat-chip>{{ruleResp.version}}</mat-chip> -->\\r\\n              </td>\\r\\n              <th>Input Date:</th>\\r\\n              <td>\\r\\n                <mat-chip>{{ruleConfig.createdTime | date: 'MM/dd/yyyy, h:mm a'}}</mat-chip>\\r\\n\\r\\n              </td>\\r\\n              <th>Verified Date:</th>\\r\\n              <td>\\r\\n                <mat-chip>{{ruleConfig.approvedTime | date: 'MM/dd/yyyy, h:mm a'}}</mat-chip>\\r\\n              </td>\\r\\n\\r\\n              <th>Verified Status:</th>\\r\\n              <td>\\r\\n                <mat-chip>{{ruleConfig.versionNo}}</mat-chip>\\r\\n              </td>\\r\\n\\r\\n            </tr>\\r\\n          </table>\\r\\n        </div>\\r\\n      </mat-card-content>\\r\\n    </mat-card>\\r\\n  </div>\\r\\n</div>\\r\\n\"","export default \"<mat-toolbar color=\\\"primary\\\" style=\\\"height:30px; font-size: small;\\\">\\r\\n  <span>Create Rules</span>\\r\\n\\r\\n</mat-toolbar>\\r\\n<br>\\r\\n<div style=\\\"width:88%;padding-left: 10%\\\">\\r\\n  <mat-card *ngIf=\\\"!showRuleValidation\\\">\\r\\n    <form #createRule createRule=\\\"ngForm\\\">\\r\\n      <div fxLayout=\\\"row wrap\\\">\\r\\n\\r\\n        <div fxFlex=\\\"100\\\">\\r\\n          <div fxFlex=\\\"25\\\">\\r\\n            <mat-form-field appearance=\\\"outline\\\">\\r\\n              <mat-label>Rule Id</mat-label>\\r\\n              <input matInput type=\\\"text\\\" name=\\\"ruleId\\\" required #ruleId #ruleId=\\\"ngModel\\\" [(ngModel)]=\\\"ruleConfig.ruleId\\\" required readonly>\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n          <div fxFlex=\\\"25\\\">\\r\\n            <mat-form-field appearance=\\\"outline\\\">\\r\\n              <mat-label>Rule Name</mat-label>\\r\\n              <input matInput type=\\\"text\\\" name=\\\"ruleName\\\" #ruleName #ruleName=\\\"ngModel\\\" required readonly\\r\\n                [(ngModel)]=\\\"ruleConfig.ruleName\\\">\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n          <div fxFlex=\\\"25\\\"></div>\\r\\n          <div fxFlex=\\\"25\\\"></div>\\r\\n          <div fxFlex=\\\"10\\\"></div>\\r\\n        </div>\\r\\n      </div>\\r\\n     \\r\\n      \\r\\n      <div fxLayout=\\\"row wrap\\\">\\r\\n        <div fxFlex=\\\"100\\\">\\r\\n          <div fxFlex=\\\"25\\\">\\r\\n            <mat-form-field appearance=\\\"outline\\\">\\r\\n              <mat-label>Source System</mat-label>\\r\\n              <mat-select name=\\\"sourceSystem\\\" required [disabled]=\\\"!isEdit\\\"\\r\\n              #sourceSystem #sourceSystem=\\\"ngModel\\\"\\r\\n               [(ngModel)]=\\\"sourcedata\\\"\\r\\n                (selectionChange)=\\\"onSlectionExternalSystem($event.value)\\\"\\r\\n                (optionSelected)=\\\"onSlectionExternalSystem($event.value)\\\">\\r\\n                <mat-option value>--Please Select---</mat-option>\\r\\n                <mat-option *ngFor=\\\"let sys of externalsystem\\\"\\r\\n                 [value]=\\\"sys\\\" [hidden]=\\\"sys == destination || sys==validationData\\\">{{sys}}</mat-option>\\r\\n\\r\\n\\r\\n              </mat-select>\\r\\n\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n          <div fxFlex=\\\"25\\\">\\r\\n            <mat-form-field appearance=\\\"outline\\\">\\r\\n              <mat-label>Message Type</mat-label>\\r\\n              <mat-select (selectionChange)=\\\"onSelectionOFMessageType($event)\\\" name=\\\"messageType\\\"\\r\\n              #messageType=\\\"ngModel\\\" disabled\\r\\n              [(ngModel)]=\\\"sourceSysData.messageType\\\" required\\r\\n                (optionSelected)=\\\"onSelectionOFMessageType($event)\\\">\\r\\n                <mat-option value>--Please Select---</mat-option>\\r\\n                <mat-option value=\\\"I\\\">Incoming\\r\\n                </mat-option>\\r\\n                <mat-option value=\\\"O\\\">OutGoing\\r\\n                </mat-option>\\r\\n                <mat-option value=\\\"A\\\">All</mat-option>\\r\\n              </mat-select>\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n          <div fxFlex=\\\"25\\\">\\r\\n            <mat-form-field appearance=\\\"outline\\\">\\r\\n              <mat-label>Source Service</mat-label>\\r\\n              <input matInput type=\\\"text\\\"  name=\\\"operationName\\\" [(ngModel)]=\\\"sourceSysData.serviceName\\\" readonly>\\r\\n             \\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n          <div fxFlex=\\\"25\\\">\\r\\n            <mat-form-field appearance=\\\"outline\\\">\\r\\n              <mat-label>Source Operation</mat-label>\\r\\n              <input matInput type=\\\"text\\\" name=\\\"serviceName\\\" [(ngModel)]=\\\"sourceSysData.operationName\\\" readonly>\\r\\n             \\r\\n\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n          <div fxFlex=\\\"10\\\"></div>\\r\\n        </div>\\r\\n      </div>\\r\\n     <div fxLayout=\\\"row wrap\\\">\\r\\n        <div fxFlex=\\\"100\\\">\\r\\n          <div fxFlex=\\\"25\\\">\\r\\n            <mat-form-field appearance=\\\"outline\\\">\\r\\n              <mat-label>Destination System</mat-label>\\r\\n              <mat-select name=\\\"destinationSystem\\\" [disabled]=\\\"!isEdit\\\"\\r\\n              (selectionChange)=\\\"destinaltionSelection($event.value)\\\"\\r\\n              [(ngModel)]=\\\"destinationId\\\"\\r\\n               #destinationSystem required (optionSelected)=\\\"destinaltionSelection($event.value)\\\"\\r\\n                #destinationSystem=\\\"ngModel\\\">\\r\\n                <mat-option value>--Please Select---</mat-option>\\r\\n                <mat-option *ngFor=\\\"let sys of externalsystem\\\" [value]=sys [hidden]=\\\"sys === sourcesystem || sys ==validationData \\\">{{sys}}</mat-option>\\r\\n              </mat-select>\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n          <div fxFlex=\\\"25\\\">\\r\\n            <mat-form-field appearance=\\\"outline\\\">\\r\\n              <mat-label>Message Type</mat-label>\\r\\n              <mat-select (selectionChange)=\\\"ondestinationMsgType($event)\\\"required disabled\\r\\n              name=\\\"destinationmessageType\\\" [(ngModel)]=\\\"destinationSysData.messageType\\\"\\r\\n                (optionSelected)=\\\"ondestinationMsgType($event)\\\">\\r\\n                <mat-option value>--Please Select---</mat-option>\\r\\n                <mat-option value=\\\"I\\\">Incoming\\r\\n                </mat-option>\\r\\n                <mat-option value=\\\"O\\\">OutGoing\\r\\n                </mat-option>\\r\\n                <mat-option value=\\\"A\\\">All</mat-option>\\r\\n              </mat-select>\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n          <div fxFlex=\\\"25\\\">\\r\\n            <mat-form-field appearance=\\\"outline\\\">\\r\\n              <mat-label>Destination Service</mat-label>\\r\\n\\r\\n               <input matInput type=\\\"text\\\" name=\\\"destinationserviceName\\\" #ngModel #destServ #destServ=\\\"ngModel\\\"\\r\\n                [(ngModel)]=\\\"destinationSysData.serviceName\\\" readonly>  \\r\\n              \\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n          <div fxFlex=\\\"25\\\">\\r\\n            <mat-form-field appearance=\\\"outline\\\">\\r\\n              <mat-label>Destination Operation</mat-label>\\r\\n              \\r\\n              <input matInput type=\\\"text\\\" name=\\\"destinationOperation\\\" [(ngModel)]=\\\"destinationSysData.operationName\\\" readonly>\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n          <div fxFlex=\\\"10\\\"></div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div fxLayout=\\\"row wrap\\\"> \\r\\n        <div fxFlex=\\\"100\\\" *ngFor=\\\"let multiple of multipleValidationData;let i=index\\\">\\r\\n            <div fxLayout=\\\"row wrap\\\">\\r\\n                <div fxFlex=\\\"100\\\">\\r\\n                  <div fxFlex=\\\"25\\\">\\r\\n                    <mat-form-field appearance=\\\"outline\\\">\\r\\n        \\r\\n                      <mat-label>Validation System</mat-label>\\r\\n                      <mat-select required (selectionChange)=\\\"onValidtion($event.value,i)\\\" \\r\\n                      (optionSelected)=\\\"onValidtion($event.value,i)\\\" \\r\\n                      name=\\\"validationSystem_{{i}}\\\" [disabled]=\\\"!isEdit\\\"\\r\\n                      #validationSystem\\r\\n                        #validationSystem=\\\"ngModel\\\" [(ngModel)]=\\\"multiple.validationSystem\\\">\\r\\n                        <mat-option value>--Please Select---</mat-option>\\r\\n                        <mat-option *ngFor=\\\"let sys of externalsystem\\\" [value]=sys [hidden]=\\\" sys == destination || sys == sourcesystem\\\">{{sys}}</mat-option>\\r\\n                      </mat-select>\\r\\n                    </mat-form-field>\\r\\n                  </div>\\r\\n                  <div fxFlex=\\\"25\\\">\\r\\n                    <mat-form-field appearance=\\\"outline\\\">\\r\\n                      <mat-label>Message Type</mat-label>\\r\\n                      <mat-select (selectionChange)=\\\"onvalidateMsgType($event)\\\" (optionSelected)=\\\"onvalidateMsgType($event)\\\" required name=\\\"messageType_{{i}}\\\"\\r\\n                      [(ngModel)]=\\\"multiple.messageType\\\" disabled>\\r\\n                          <mat-option value>--Please Select---</mat-option>\\r\\n                        <mat-option value=\\\"I\\\">Incoming\\r\\n                        </mat-option>\\r\\n                        <mat-option value=\\\"O\\\">OutGoing\\r\\n                        </mat-option>\\r\\n                        <mat-option value=\\\"A\\\">All</mat-option>\\r\\n                      </mat-select>\\r\\n                    </mat-form-field>\\r\\n                  </div>  \\r\\n                  <div fxFlex=\\\"25\\\">\\r\\n                    <mat-form-field appearance=\\\"outline\\\">\\r\\n                      <mat-label>Validation Service</mat-label>\\r\\n                      <input matInput name=\\\"service_{{i}}\\\" [(ngModel)]=\\\"multiple.service\\\" readonly>\\r\\n              \\r\\n                    </mat-form-field>\\r\\n                  </div>\\r\\n                  <div fxFlex=\\\"25\\\">\\r\\n                    <mat-form-field appearance=\\\"outline\\\">\\r\\n                      <mat-label>Validation Operation</mat-label>\\r\\n                      <input matInput type=\\\"text\\\" [(ngModel)]=\\\"multiple.operation\\\"  name=\\\"operation_{{i}}\\\" readonly>\\r\\n              \\r\\n                    </mat-form-field>\\r\\n                  </div>\\r\\n                  <div fxFlex=\\\"10\\\">\\r\\n              \\r\\n                        <mat-icon (click)=\\\"removeValidation(i)\\\" *ngIf=\\\"isEdit\\\" color=\\\"warn\\\" style=\\\"cursor: pointer;margin-top:10px\\\">delete</mat-icon>\\r\\n              \\r\\n                    </div>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n        </div>\\r\\n      </div> \\r\\n      <div fxLayout=\\\"row wrap\\\">\\r\\n        <div fxFlex=\\\"100\\\">\\r\\n            <div fxFlex=\\\"60\\\">\\r\\n              \\r\\n                    <mat-icon (click)=\\\"addValidation()\\\" color=\\\"primary\\\" *ngIf=\\\"isEdit\\\"  style=\\\"cursor: pointer\\\">add</mat-icon>\\r\\n              \\r\\n            </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      \\r\\n      <div fxLayout=\\\"row wrap\\\">\\r\\n        <div fxFlex=\\\"100\\\" fxLayoutGap=\\\"8px\\\">\\r\\n          <div fxFlex=\\\"40\\\"></div>\\r\\n          <div fxFlex=\\\"60\\\" fxLayoutGap=\\\"8px\\\">\\r\\n\\r\\n            <button mat-raised-button (click)=\\\"onNext()\\\" color=\\\"primary\\\" *ngIf=\\\"isEdit\\\">Next</button>\\r\\n            <button mat-raised-button  (click)=\\\"onEdit()\\\" color=\\\"warn\\\" *ngIf=\\\"!isEdit\\\" [disabled]=\\\"editBtn\\\">Edit</button>\\r\\n            <button mat-raised-button  *ngIf=\\\"ruleConfig.approvedEver=='N'\\\" (click)=\\\"onAuthOfRule()\\\" color=\\\"primary\\\" [disabled]=\\\"authBtn\\\" [hidden]=\\\"authBtnHide\\\">Auth</button>\\r\\n            <button mat-raised-button  (click)=\\\"onCloseOfRule()\\\" color=\\\"primary\\\" *ngIf=\\\"ruleConfig.recordStatus=='O'\\\" [disabled]=\\\"closeBtn\\\">Close</button>\\r\\n            <button mat-raised-button  (click)=\\\"onOpenRule()\\\" color=\\\"primary\\\" *ngIf=\\\"ruleConfig.recordStatus=='C'\\\" [hidden]=\\\"reopenBtn\\\">Re-Open</button>\\r\\n            <button mat-raised-button [disabled]=\\\"deleted\\\" (click)=\\\"deleteRule()\\\" color=\\\"primary\\\" *ngIf=\\\"ruleConfig.approvedEver=='N'\\\">Delete</button>\\r\\n            <button mat-raised-button color=\\\"primary\\\" [routerLink]=\\\"'/sias-v2/ruleSummary'\\\">Exit</button>\\r\\n\\r\\n          </div>\\r\\n          <div fxFlex=\\\"10\\\">\\r\\n\\r\\n         \\r\\n          </div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n        </div>\\r\\n      </div>\\r\\n    </form>\\r\\n  \\r\\n  </mat-card>\\r\\n  \\r\\n</div>\\r\\n<div *ngIf=\\\"showpBar\\\">\\r\\n  <mat-progress-bar mode=\\\"indeterminate\\\"></mat-progress-bar>\\r\\n</div>\\r\\n<mat-card *ngIf=\\\"showRuleValidation\\\">\\r\\n  <div fxLayout=\\\"row wrap\\\">\\r\\n    <div fxFlex=\\\"100\\\">\\r\\n      <div fxFlex=\\\"25\\\">\\r\\n        <mat-form-field appearance=\\\"outline\\\" style=\\\"margin-left: 30px\\\">\\r\\n          <mat-label>Source System</mat-label>\\r\\n          <input matInput name=\\\"sourceSystem\\\" [(ngModel)]=\\\"sourcesystem\\\" [disabled] = \\\"ModifyCreateRule\\\" readonly>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n    \\r\\n    <div fxFlex=\\\"25\\\" *ngFor=\\\"let valiadtion of multipleValidation;let i=index\\\">\\r\\n        <mat-form-field appearance=\\\"outline\\\" style=\\\"margin-left: 30px\\\">\\r\\n          <mat-label>Validation System</mat-label>\\r\\n\\r\\n          <input matInput name=\\\"validtion\\\" [(ngModel)]=\\\"valiadtion.validationSystem\\\" [disabled] = \\\"ModifyCreateRule\\\" readonly>\\r\\n\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n     <div fxFlex=\\\"25\\\"></div>\\r\\n     <div fxFlex=\\\"25\\\"></div>\\r\\n     <div fxFlex=\\\"10\\\"></div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div>\\r\\n\\r\\n\\r\\n  </div>\\r\\n  <!-- <div fxLayout=\\\"row wrap\\\">\\r\\n    <div fxFlex=\\\"100\\\" fxLayoutGap=\\\"8px\\\">\\r\\n      <div>\\r\\n      <mat-label *ngIf=\\\"sourceDetails=='TCP/IP'\\\" fxFlex=\\\"25\\\"><b>Field No</b></mat-label>\\r\\n      <mat-label *ngIf=\\\"sourceDetails=='Https/Http'\\\" fxFlex=\\\"25\\\"><b>Tag</b></mat-label>\\r\\n    </div>\\r\\n\\r\\n\\r\\n      <div *ngFor=\\\"let c of multipleValidation\\\">\\r\\n       \\r\\n      <mat-label  *ngIf=\\\"valDeatils=='Https/Http'\\\" fxFlex=\\\"25\\\"><b>Tag</b></mat-label>\\r\\n      <mat-label  *ngIf=\\\"valDeatils=='TCP/IP'\\\" fxFlex=\\\"25\\\"><b>Field No</b></mat-label>\\r\\n    </div> \\r\\n   \\r\\n      \\r\\n    \\r\\n      <mat-label  fxFlex=\\\"25\\\"><b>Validation Method</b></mat-label>\\r\\n      <mat-label fxFlex=\\\"25\\\"><b>Validation Deatils</b></mat-label> \\r\\n      <mat-label fxFlex=\\\"10\\\"></mat-label>\\r\\n\\r\\n    </div>\\r\\n  </div>-->\\r\\n  <div fxLayout=\\\"row wrap\\\">\\r\\n    <div fxFlex=\\\"100\\\">\\r\\n      <div fxFlex=\\\"25\\\" style=\\\"margin-left: 30px\\\">\\r\\n        <mat-label *ngIf=\\\"sourceDetails=='TCP/IP'\\\" ><b></b></mat-label>\\r\\n        <mat-label *ngIf=\\\"sourceDetails=='Https/Http'\\\" ><b></b></mat-label>\\r\\n      </div>\\r\\n      <div fxFlex=\\\"25\\\" *ngFor=\\\"let c of multipleValidation\\\" >\\r\\n        <mat-label  *ngIf=\\\"valDeatils=='Https/Http'\\\" ><b></b></mat-label>\\r\\n          <mat-label  *ngIf=\\\"valDeatils=='TCP/IP'\\\" ><b></b></mat-label>\\r\\n      </div>\\r\\n      <div fxFlex=\\\"25\\\" style=\\\"margin-left: -80px\\\">\\r\\n        <!-- <mat-label  ><b>Validation Method</b></mat-label> -->\\r\\n    \\r\\n      </div>\\r\\n      <div fxFlex=\\\"25\\\">\\r\\n        <!-- <mat-label ><b>Validation Deatils</b></mat-label> -->\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <!-- <div fxLayout=\\\"row wrap\\\" *ngFor=\\\"let dataarr of arrRuleValidation;let i=index\\\" #ruleValidation> -->\\r\\n  <div fxLayout=\\\"row wrap\\\" *ngFor=\\\"let dataarr of arrRuleValidation;let i=index\\\" #ruleValidation>\\r\\n    <div fxFlex=\\\"100\\\">\\r\\n      <!-- <div *ngFor=\\\"let srcData of messageBasisIso\\\"> -->\\r\\n      <div fxFlex=\\\"25\\\" *ngIf=\\\"sourceDetails=='TCP/IP'\\\">\\r\\n        <mat-form-field appearance=\\\"outline\\\" style=\\\"margin-left: 30px\\\">\\r\\n          <mat-label>Field No</mat-label>\\r\\n          <mat-select [disabled] = \\\"ModifyCreateRule\\\" name=\\\"messageKey_{{i}}\\\" #messageKey=\\\"ngModel\\\" [(ngModel)]=\\\"dataarr.messageKey\\\">\\r\\n              <mat-option *ngFor=\\\"let data of messageBasisIso\\\"  [value]=\\\"data.messageKey\\\"> \\r\\n                {{data.messageKey}}<{{data.messageBasis}}\\r\\n              </mat-option>\\r\\n            <!-- <mat-option value=\\\"data\\\" *ngFor=\\\"let data of messageBasisIso\\\">{{data}}</mat-option> -->\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div fxFlex=\\\"25\\\" *ngIf=\\\"sourceDetails=='Https/Http'\\\">\\r\\n        <mat-form-field appearance=\\\"outline\\\" style=\\\"margin-left: 30px\\\">\\r\\n          <mat-label>Tag</mat-label>\\r\\n          <mat-select [disabled] = \\\"ModifyCreateRule\\\" name=\\\"messageKey_{{i}}\\\" #messageKey=\\\"ngModel\\\" [(ngModel)]=\\\"dataarr.messageKey\\\">\\r\\n            <!-- <mat-option  *ngFor=\\\"let data of xmlRespData\\\" value=\\\"data\\\">{{data}}</mat-option> -->\\r\\n            <mat-option  *ngFor=\\\"let data of messageBasisIso\\\" [value]=\\\"data.messageBasis\\\">\\r\\n              {{data.messageBasis}}\\r\\n            </mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <!-- </div> -->\\r\\n      <div *ngFor=\\\"let x of multipleValidation;let j=index\\\">\\r\\n      <div fxFlex=\\\"25\\\" *ngIf=\\\"valDeatils=='TCP/IP'\\\">\\r\\n        <mat-form-field appearance=\\\"outline\\\" style=\\\"margin-left: 30px\\\">\\r\\n          <mat-label>Field No</mat-label>\\r\\n          <mat-select [disabled] = \\\"ModifyCreateRule\\\" name=\\\"messageKey_{{j}}\\\" #messageKey=\\\"ngModel\\\" [(ngModel)]=\\\"x.messageKey\\\">\\r\\n            <mat-option *ngFor=\\\"let data of xmlRespData\\\" [value]=\\\"data.messageKey\\\"> \\r\\n               {{data.messageKey}}<{{data.messageBasis}}\\r\\n              </mat-option>\\r\\n            <!-- <mat-option  *ngFor=\\\"let data of messageBasisIso\\\" value=\\\"data.messageBasis\\\">{{data.messageBasis}}</mat-option> -->\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div fxFlex=\\\"25\\\" *ngIf=\\\"valDeatils=='Https/Http'\\\">\\r\\n        <mat-form-field appearance=\\\"outline\\\" style=\\\"margin-left: 30px\\\">\\r\\n          <mat-label>Tag</mat-label>\\r\\n          <mat-select [disabled] = \\\"ModifyCreateRule\\\" name=\\\"messageKey_{{j}}\\\" #messageKey=\\\"ngModel\\\" [(ngModel)]=\\\"x.messageKey\\\">\\r\\n              <mat-option  *ngFor=\\\"let data of xmlRespData\\\" [value]=\\\"data.messageBasis\\\">\\r\\n                {{data.messageBasis}}\\r\\n              </mat-option>\\r\\n            <!-- <mat-option  *ngFor=\\\"let data of xmlRespData\\\" value=\\\"data\\\">{{data}}</mat-option> -->\\r\\n            <!-- <mat-option  *ngFor=\\\"let data of messageBasisIso\\\" value=\\\"data.messageBasis\\\">{{data.messageBasis}}</mat-option> -->\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n    </div>\\r\\n      <div fxFlex=\\\"25\\\">\\r\\n        <mat-form-field appearance=\\\"outline\\\" style=\\\"margin-left: 20px\\\">\\r\\n          <mat-label>Validation Method</mat-label>\\r\\n          <input type=\\\"text\\\" name=\\\"validationMethod\\\"\\r\\n           #validationMethod=\\\"ngModel\\\" matInput\\r\\n            [(ngModel)]=\\\"dataarr.validationMethod\\\" [disabled] = \\\"ModifyCreateRule\\\">\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div fxFlex=\\\"25\\\">\\r\\n        <mat-form-field appearance=\\\"outline\\\" style=\\\"margin-left: 20px\\\">\\r\\n          <mat-label>Validation Details</mat-label>\\r\\n          <input type=\\\"text\\\" matInput name=\\\"validationMethod\\\" \\r\\n          #validationMethod=\\\"ngModel\\\"\\r\\n          [(ngModel)]=\\\"dataarr.validationDetail\\\" [disabled] = \\\"ModifyCreateRule\\\">\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div fxFlex=\\\"10\\\">\\r\\n        <!-- <button mat-raised-button  color=\\\"primary\\\"> -->\\r\\n          <mat-icon (click)=\\\"removeCreateRule(i)\\\" color=\\\"warn\\\" style=\\\"cursor: pointer;margin-top:10px\\\">delete</mat-icon>\\r\\n      <!-- </button> -->\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div fxLayout=\\\"row wrap\\\">\\r\\n    <div fxFlex=\\\"100\\\">\\r\\n    <div fxFlex=\\\"60\\\">\\r\\n        <!-- <button mat-raised-button > -->\\r\\n            <mat-icon (click)=\\\"addCreateRule()\\\" color=\\\"primary\\\" style=\\\"cursor: pointer\\\">add</mat-icon>\\r\\n        <!-- </button> -->\\r\\n    </div>\\r\\n    </div>\\r\\n    </div>\\r\\n    <br>\\r\\n  <div fxLayout=\\\"row wrap\\\">\\r\\n    <div fxFlex=\\\"100\\\">\\r\\n      <div fxFlex=\\\"30\\\"></div>\\r\\n      <div fxFlex=\\\"50\\\" fxLayoutGap=\\\"8px\\\">\\r\\n       \\r\\n        <button mat-raised-button (click)=\\\"Previous()\\\" color=\\\"warn\\\" [disabled]=\\\"ModifyCreateRule || deleted\\\">Previous</button>\\r\\n        <button mat-raised-button (click)=\\\"submittingCreateRule()\\\" color=\\\"primary\\\" [disabled] = \\\"ModifyCreateRule || deleted\\\">Update</button>\\r\\n        <button mat-raised-button [disabled]=\\\"deleted\\\" *ngIf=\\\"!authorizeDone\\\" (click)=\\\"onAuthOfRule()\\\" [hidden]=\\\"authBtnHide\\\" color=\\\"primary\\\" >Auth</button>\\r\\n        <button mat-raised-button [disabled]=\\\"deleted\\\" (click)=\\\"onCloseOfRule()\\\" color=\\\"primary\\\" *ngIf=\\\"ruleConfig.recordStatus=='O'\\\">Close</button>\\r\\n        <button mat-raised-button  (click)=\\\"onOpenRule()\\\" color=\\\"primary\\\" *ngIf=\\\"ruleConfig.recordStatus=='C'\\\" [hidden]=\\\"reopenBtn\\\">Re-Open</button>\\r\\n        <button mat-raised-button [disabled]=\\\"deleted\\\" (click)=\\\"deleteRule()\\\" color=\\\"primary\\\" *ngIf=\\\"ruleConfig.approvedEver=='N'\\\">Delete</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <!-- <div fxLayout=\\\"row wrap\\\" *ngFor=\\\"let valiadtion of ruleValidtionResp\\\">\\r\\n      <div fxFlex=\\\"100\\\" >\\r\\n        <div fxFlex=\\\"16\\\">\\r\\n          <mat-form-field appearance=\\\"outline\\\">\\r\\n            <mat-label>Field No</mat-label>\\r\\n            <input matInput [(ngModel)]=\\\"valiadtion.fieldNo\\\">\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n      <div fxFlex=\\\"25\\\">\\r\\n            <mat-form-field appearance=\\\"outline\\\">\\r\\n                <mat-label>Node</mat-label>\\r\\n               <mat-select name=\\\"node\\\" #node #node=\\\"ngModel\\\" >\\r\\n                 <mat-option  *ngFor=\\\"let node of valiadtion.node;let i=index\\\"\\r\\n                 [value]=\\\"node[i]\\\">{{node[i]}}</mat-option>\\r\\n               </mat-select>\\r\\n              </mat-form-field>\\r\\n        </div>\\r\\n        \\r\\n      </div>\\r\\n    </div> -->\\r\\n</mat-card>\\r\\n\\r\\n\\r\\n<!-- auditlog -->\\r\\n<br><br>\\r\\n <div fxLayout=\\\"row\\\" >\\r\\n  <div fxFlex></div>\\r\\n  <div fxFlex=\\\"95\\\">\\r\\n    <mat-card style=\\\"width: 70%;  margin-left:150px;\\\">\\r\\n      <mat-card-title>\\r\\n      </mat-card-title>\\r\\n      <mat-card-content>\\r\\n        <div fxLayout=\\\"row\\\">\\r\\n          <table id=\\\"customers\\\">\\r\\n            <tr>\\r\\n              <th>Record Status:</th>\\r\\n              <td>\\r\\n                <mat-chip>{{ruleConfig.recordStatus }}</mat-chip>\\r\\n              </td>\\r\\n              <th>Input By:</th>\\r\\n              <td>\\r\\n                <mat-chip>{{ruleConfig.creatorId}}</mat-chip>\\r\\n              </td>\\r\\n              <th>Verified By:</th>\\r\\n              <td>\\r\\n                <mat-chip>{{ruleConfig.approverId}}</mat-chip>\\r\\n              </td>\\r\\n              <th>Verified Once:</th>\\r\\n              <td>\\r\\n                <mat-chip>{{ruleConfig.approvedEver }}</mat-chip>\\r\\n              </td>\\r\\n            </tr>\\r\\n            <tr>\\r\\n              <th>Modification No:</th>\\r\\n              <td>\\r\\n                <mat-chip>{{ruleConfig.versionNo}}</mat-chip>\\r\\n              </td>\\r\\n              <th>Input Date:</th>\\r\\n              <td>\\r\\n                <mat-chip>{{ruleConfig.createdTime| date: 'MM/dd/yyyy, h:mm a'}}</mat-chip>\\r\\n\\r\\n              </td>\\r\\n              <th>Verified Date:</th>\\r\\n              <td>\\r\\n                <mat-chip>{{ruleConfig.approvedTime | date: 'MM/dd/yyyy, h:mm a'}}</mat-chip>\\r\\n              </td>\\r\\n\\r\\n              <th>Verified Status:</th>\\r\\n              <td>\\r\\n                <mat-chip>{{ruleConfig.approvedStatus}}</mat-chip>\\r\\n              </td>\\r\\n\\r\\n            </tr>\\r\\n          </table>\\r\\n        </div>\\r\\n      </mat-card-content>\\r\\n    </mat-card>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\"","export default \"\\r\\n<mat-toolbar color=\\\"primary\\\"  style=\\\"height:30px; font-size: small;\\\">\\r\\n  <span>Create Rule</span>\\r\\n</mat-toolbar>\\r\\n<br />\\r\\n<div>\\r\\n    <div fxLayoutAlign=\\\"end stretch\\\" fxLayoutGap=\\\"10px\\\">\\r\\n            <div fxLayoutAlign=\\\"end stretch\\\">\\r\\n                    <button mat-raised-button routerLink=\\\"/sias-v2/createRule\\\" color=\\\"primary\\\"\\r\\n                    >New </button>\\r\\n            </div>\\r\\n        <button mat-raised-button routerLink=\\\"/dashboard\\\" color=\\\"warn\\\"\\r\\n        >Exit</button>\\r\\n</div>\\r\\n</div>\\r\\n<br>\\r\\n<div class=\\\" mat-elevation-z8\\\">\\r\\n    <table mat-table [dataSource]=\\\"dataSource\\\"  matSort matSortActive=\\\"createdTime\\\" matSortDirection=\\\"desc\\\">\\r\\n\\r\\n        <!-- code Column -->\\r\\n        <ng-container matColumnDef=\\\"ruleId\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Rule Id </th>\\r\\n          \\r\\n           <td mat-cell *matCellDef=\\\"let row\\\">\\r\\n                    <a routerLink=\\\"/sias-v2/editRules/{{row.ruleId}}\\\" (click)=\\\"editcreateRule(row)\\\">{{\\r\\n                    row.ruleId\\r\\n                  \\r\\n                  }}</a>\\r\\n                  \\r\\n                  </td> \\r\\n        </ng-container>\\r\\n\\r\\n        <!-- name Column -->\\r\\n        <ng-container matColumnDef=\\\"ruleName\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef > Rule Name </th>\\r\\n            <td mat-cell *matCellDef=\\\"let row\\\"> {{row.ruleName}} </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <!-- type Column -->\\r\\n        <ng-container matColumnDef=\\\"sourceTranslationId\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef> Source Id </th>\\r\\n            <td mat-cell *matCellDef=\\\"let row\\\"> {{row.sourceTranslationId}} </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <!-- externalIp Column -->\\r\\n        <ng-container matColumnDef=\\\"targetTranslationId\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef > Translation Id </th>\\r\\n            <td mat-cell *matCellDef=\\\"let row\\\"> {{row.targetTranslationId}} </td>\\r\\n        </ng-container>\\r\\n        <!-- maker -->\\r\\n        <ng-container matColumnDef=\\\"creatorId\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef > Maker</th>\\r\\n                <td mat-cell *matCellDef=\\\"let row\\\"> {{row.creatorId}} </td>\\r\\n            </ng-container>\\r\\n            <ng-container matColumnDef=\\\"createdTime\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Date</th>\\r\\n                <td mat-cell *matCellDef=\\\"let row\\\"> {{row.createdTime |date}} </td>\\r\\n            </ng-container>\\r\\n            \\r\\n        \\r\\n\\r\\n\\r\\n        \\r\\n\\r\\n\\r\\n        <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n        <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n\\r\\n        <!-- Row shown when there is no matching data. -->\\r\\n        <!-- <tr class=\\\"mat-row\\\" *matNoDataRow> -->\\r\\n        <!-- <td class=\\\"mat-cell\\\" colspan=\\\"4\\\">No data matching the filter \\\"{{input.value}}\\\"</td> -->\\r\\n        <!-- </tr> -->\\r\\n    </table>\\r\\n\\r\\n    <mat-paginator [pageSizeOptions]=\\\"[5, 10, 20]\\\" showFirstLastButtons></mat-paginator>\\r\\n</div>\\r\\n\"","export default \"<mat-toolbar color=\\\"primary\\\" style=\\\"height:30px; font-size: small;\\\">\\r\\n  <span>Rule Translation</span>\\r\\n\\r\\n</mat-toolbar>\\r\\n<br>\\r\\n\\r\\n\\r\\n<mat-card class=\\\"baiscInfocard\\\">\\r\\n  <form>\\r\\n    <div style=\\\"flex-direction : row;\\\" fxLayout=\\\"row wrap\\\">\\r\\n      <div fxFlex=\\\"100\\\" fxLayoutAlign=\\\"space-between center\\\" fxLayoutGap=\\\"10px\\\">\\r\\n        <!--<div fxFlex=\\\"15\\\"></div>\\r\\n        <div fxFlex=\\\"30\\\">-->\\r\\n\\r\\n        <mat-form-field appearance=\\\"outline\\\">\\r\\n          <mat-label>Source system</mat-label>\\r\\n          <mat-select name=\\\"systemCode\\\" #systemCode #systemCode=\\\"ngModel\\\"\\r\\n           [(ngModel)]=\\\"msgTranslation.systemCode\\\"\\r\\n            (selectionChange)=\\\"onSlectionExternalSystem($event)\\\" [disabled]=\\\"!editValue\\\"\\r\\n            (optionSelected)=\\\"onSlectionExternalSystem(msgTranslation.systemCode)\\\">\\r\\n            <mat-option *ngFor=\\\"let extsys of externalSystem\\\" [value]=\\\"extsys\\\">{{extsys}}\\r\\n            </mat-option>\\r\\n\\r\\n\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n\\r\\n\\r\\n\\r\\n        <!--</div>\\r\\n        <div fxFlex=\\\"10\\\"></div>\\r\\n        <div fxFlex=\\\"30\\\">-->\\r\\n\\r\\n        <mat-form-field appearance=\\\"outline\\\">\\r\\n          <mat-label>Message Type</mat-label>\\r\\n          <mat-select value=\\\"incoming\\\" name=\\\"messageType\\\" [disabled]=\\\"!editValue\\\" (selectionChange)=\\\"onSelectionOFMessageType($event)\\\"\\r\\n            (optionSelected)=\\\"onSelectionOFMessageType($event)\\\" #messageType #messageType=\\\"ngModel\\\"\\r\\n            [(ngModel)]=\\\"msgTranslation.messageType\\\">\\r\\n            <mat-option value=\\\"I\\\">Incoming</mat-option>\\r\\n            <mat-option value=\\\"O\\\">Outgoing</mat-option>\\r\\n            <!-- <mat-option value=\\\"A\\\">ALL</mat-option> -->\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n\\r\\n\\r\\n        <mat-form-field appearance=\\\"outline\\\">\\r\\n          <mat-label>Operation</mat-label>\\r\\n          <mat-select value=\\\"sys1\\\" name=\\\"operationName\\\" [disabled]=\\\"!editValue\\\"\\r\\n          #operationName #ooperationNamept=\\\"ngModel\\\"\\r\\n            [(ngModel)]=\\\"msgTranslation.operationName\\\">\\r\\n            <mat-option *ngFor=\\\"let opt of translationDataOperation\\\" [value]=\\\"opt.headerValue\\\">{{opt.headerValue}}</mat-option>\\r\\n\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n        <mat-form-field appearance=\\\"outline\\\">\\r\\n          <mat-label>Service</mat-label>\\r\\n          <mat-select value=\\\"create\\\" name=\\\"service\\\" #serv #serv=\\\"ngModel\\\" [disabled]=\\\"!editValue\\\"\\r\\n          [(ngModel)]=\\\"msgTranslation.serviceName\\\">\\r\\n            <mat-option *ngFor=\\\"let serv of translationDataService\\\" [value]=\\\"serv.headerValue\\\">{{serv.headerValue}}</mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n\\r\\n        <div *ngIf=\\\"showFetch == 'Https/Http'\\\">\\r\\n        <input type=\\\"file\\\" id=\\\"chFile\\\" (change)=\\\"selectFileFORHTTPXMLIncoming($event)\\\" [disabled]=\\\"!editValue\\\">\\r\\n        <button mat-raised-button type=\\\"file\\\" class=\\\"btnFile\\\" [disabled]=\\\"!editValue\\\" (click)=\\\"chooseFile()\\\" *ngIf=\\\"showFetch=='Https/Http'\\\">\\r\\n          <mat-icon>cloud_upload</mat-icon>&nbsp;&nbsp;File Upload\\r\\n        </button>\\r\\n        <p>{{fileName}}</p> \\r\\n      </div>\\r\\n        <button mat-raised-button (click)=\\\"onFetch()\\\" [disabled]=\\\"!editValue\\\" color=\\\"primary\\\" *ngIf=\\\"showFetch=='TCP/IP'\\\">Fetch</button>\\r\\n        <!--</div>-->\\r\\n\\r\\n        <div fxFlex=\\\"10\\\"></div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div fxLayout=\\\"row wrap\\\">\\r\\n\\r\\n\\r\\n      <!-- for buttons -->\\r\\n    </div>\\r\\n\\r\\n  </form>\\r\\n</mat-card>\\r\\n\\r\\n\\r\\n<!-- after fetch -->\\r\\n<br>\\r\\n\\r\\n<mat-card >\\r\\n  \\r\\n  <div fxLayout=\\\"row wrap\\\" *ngFor=\\\"let iso of translationDeatils;let i=index\\\">\\r\\n      <div fxFlex=\\\"100\\\" fxLayoutGap=\\\"10px\\\">\\r\\n          <!-- <div fxFlex=\\\"16\\\">\\r\\n            <mat-form-field appearance=\\\"outline\\\">\\r\\n            \\r\\n              <mat-label>Header</mat-label>\\r\\n             \\r\\n              <mat-select name=\\\"headerTag\\\" name=\\\"headerTag\\\" #headerTag\\r\\n                #headerTag=\\\"ngModel\\\" [(ngModel)]=\\\"iso.headerTag\\\">\\r\\n                <mat-option *ngFor=\\\"let header of headerTagData\\\" [value]=\\\"header.headerTag\\\">\\r\\n                  {{header.headerTag}}\\r\\n                </mat-option>\\r\\n              </mat-select>\\r\\n             \\r\\n    \\r\\n            </mat-form-field>\\r\\n          </div> -->\\r\\n       \\r\\n          <div fxFlex=\\\"16\\\"  *ngIf=\\\"showFetch=='TCP/IP'\\\">\\r\\n            <!-- Field Name -->\\r\\n            <mat-form-field appearance=\\\"outline\\\">\\r\\n              <mat-label>Field No</mat-label>\\r\\n    \\r\\n              <mat-select [disabled]=\\\"!editValue\\\" name=\\\"messageKey_{{i}}\\\" #messageKey=\\\"ngModel\\\" [(ngModel)]=\\\"iso.messageKey\\\">\\r\\n                <mat-option *ngFor=\\\"let mkey of messageBasisData\\\" [value]=\\\"mkey.messageKey\\\">\\r\\n                  {{mkey.messageKey}}<{{mkey.messageBasis}}\\r\\n                </mat-option>\\r\\n              </mat-select>\\r\\n\\r\\n             \\r\\n             \\r\\n    \\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n          <div fxFlex=\\\"16\\\" *ngIf=\\\"showFetch=='Https/Http'&&!afterupload\\\">\\r\\n            <mat-form-field appearance=\\\"outline\\\">\\r\\n              <!-- Filed No -->\\r\\n             \\r\\n              <mat-label >Tag</mat-label>\\r\\n              <input matInput name=\\\"messagebasis\\\" #messagebasis #messagebasis=\\\"ngModel\\\" [(ngModel)]=\\\"iso.messagebasis\\\" [readonly]=\\\"!editValue\\\">\\r\\n              <!-- <mat-select [disabled]=\\\"!editValue\\\" name=\\\"messagebasis\\\" #messagebasis #messagebasis=\\\"ngModel\\\" [(ngModel)]=\\\"iso.messagebasis\\\">\\r\\n                <mat-option *ngFor=\\\"let data of messageBasisIso\\\" [value]=\\\"data\\\">\\r\\n                  {{data}}\\r\\n                </mat-option>\\r\\n              </mat-select> -->\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n          <div fxFlex=\\\"16\\\" *ngIf=\\\"showFetch=='Https/Http' && afterupload\\\">\\r\\n            <mat-form-field appearance=\\\"outline\\\">\\r\\n              <!-- Filed No -->\\r\\n             \\r\\n              <mat-label >Tag</mat-label>\\r\\n            \\r\\n               <mat-select [disabled]=\\\"!editValue\\\" name=\\\"messagebasis\\\" #messagebasis #messagebasis=\\\"ngModel\\\" [(ngModel)]=\\\"iso.messagebasis\\\">\\r\\n                <mat-option *ngFor=\\\"let data of xmlRespData\\\" [value]=\\\"data\\\">\\r\\n                  {{data}}\\r\\n                </mat-option>\\r\\n              </mat-select>\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n          <div fxFlex=\\\"16\\\" *ngIf>\\r\\n            <mat-form-field appearance=\\\"outline\\\">\\r\\n              <!-- Filed No -->\\r\\n              <mat-label >Field Name</mat-label>\\r\\n              \\r\\n              <mat-select [disabled]=\\\"!editValue\\\" name=\\\"messagebasis\\\"  #messagebasis=\\\"ngModel\\\" [(ngModel)]=\\\"iso.messagebasis\\\">\\r\\n                <mat-option *ngFor=\\\"let data of messageBasisIso\\\" [value]=\\\"data\\\">\\r\\n                  {{data}}\\r\\n                </mat-option>\\r\\n              </mat-select>\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n          <div fxFlex=\\\"16\\\"  *ngIf=\\\"showFetch=='Https/Http' \\\">\\r\\n            <mat-form-field appearance=\\\"outline\\\">\\r\\n              <!-- Data Type -->\\r\\n              <mat-label>Data Type</mat-label>\\r\\n            \\r\\n              <mat-select [disabled]=\\\"!editValue\\\" name=\\\"dataType\\\" #dataType #dataType=\\\"ngModel\\\" [(ngModel)]=\\\"iso.dataType\\\">\\r\\n                <mat-option value=\\\"numeric\\\">\\r\\n                  Numeric\\r\\n                </mat-option>\\r\\n                <mat-option value=\\\"alphaNumeric\\\">\\r\\n                  Alpha Numeric\\r\\n                </mat-option>\\r\\n                <mat-option value=\\\"date\\\">\\r\\n                  Date\\r\\n                </mat-option>\\r\\n              </mat-select>\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n          <div fxFlex=\\\"16\\\"  *ngIf=\\\"showFetch=='TCP/IP'\\\">\\r\\n            <mat-form-field appearance=\\\"outline\\\">\\r\\n              <!-- Data Type -->\\r\\n              <mat-label>Data Type</mat-label>\\r\\n              <input matInput  [disabled]=\\\"!editValue\\\" name=\\\"dataType\\\" #dataType #dataType=\\\"ngModel\\\" [(ngModel)]=\\\"iso.dataType\\\">\\r\\n             \\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n          <div fxFlex=\\\"16\\\">\\r\\n            <mat-form-field appearance=\\\"outline\\\">\\r\\n              <!-- Default Value -->\\r\\n              <mat-label>Default Value</mat-label>\\r\\n              <input matInput [disabled]=\\\"!editValue\\\" name=\\\"headerValue\\\" #headerValue #headerValue=\\\"ngModel\\\"\\r\\n                [(ngModel)]=\\\"iso.defaultValue\\\">\\r\\n            \\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n    \\r\\n          <div fxFlex=\\\"16\\\">\\r\\n            <mat-form-field appearance=\\\"outline\\\">\\r\\n              <!-- Encryption Type -->\\r\\n              <mat-label>Encryption Type</mat-label>\\r\\n             \\r\\n              <mat-select [disabled]=\\\"!editValue\\\" name=\\\"encryption\\\" name=\\\"encryption\\\" #encryption #encryption=\\\"encryption\\\"\\r\\n                [(ngModel)]=\\\"iso.encryption\\\">\\r\\n                <mat-option value=\\\" \\\">--Select--</mat-option>\\r\\n                <mat-option value=\\\"No Encryption\\\">No Encryption</mat-option>\\r\\n                <mat-option value=\\\"BASE64\\\">\\r\\n                  BASE64\\r\\n                </mat-option>\\r\\n                <mat-option value=\\\"SHA264\\\">\\r\\n                  SHA264\\r\\n                </mat-option>\\r\\n                <mat-option value=\\\"SHA512\\\">\\r\\n                  SHA512\\r\\n                </mat-option>\\r\\n              </mat-select>\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n    \\r\\n          <div fxFlex=\\\"2\\\">\\r\\n           <!-- <button mat-raised-button  > -->\\r\\n                        <mat-icon color=\\\"warn\\\" *ngIf=\\\"editValue\\\" (click)=\\\"deleteTranslation(i)\\\" style=\\\"margin-top:20px;cursor: pointer;\\\" >delete</mat-icon>\\r\\n                    <!-- </button>  -->\\r\\n          </div>\\r\\n        </div>\\r\\n  </div>\\r\\n \\r\\n  <div fxLayout=\\\"row wrap\\\">\\r\\n    <div fxFlex=\\\"100\\\">\\r\\n    \\r\\n      <div fxFlex=\\\"60\\\">\\r\\n        <!-- <button mat-raised-button  > -->\\r\\n          <mat-icon *ngIf=\\\"editValue\\\" (click)=\\\"addTranlation()\\\" color=\\\"primary\\\" style=\\\"cursor: pointer;\\\">add</mat-icon>\\r\\n        <!-- </button> -->\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <br>\\r\\n  <div fxLayout=\\\"row wrap\\\">\\r\\n    <div fxFlex=\\\"100\\\">\\r\\n      <div fxFlex=\\\"40\\\"></div>\\r\\n      <div fxFlex=\\\"60\\\" fxLayoutGap=\\\"10px\\\">\\r\\n        <button mat-raised-button *ngIf=\\\"!editValue\\\" color=\\\"primary\\\" (click)=\\\"edit()\\\" [disabled]=\\\"editBtn\\\">Edit</button>\\r\\n        <button mat-raised-button [disabled]=\\\"showAuditLog\\\" *ngIf=\\\"displaySubmit || onlysubmit\\\" (click)=\\\"onSubmit()\\\" color=\\\"primary\\\">Submit</button>\\r\\n        <button mat-raised-button *ngIf=\\\"ruleTRespData.approvedEver == 'N'\\\" (click)=\\\"authorizeRuleTranslation()\\\" color=\\\"primary\\\" [disabled]=\\\"authBtn\\\" [hidden]=\\\"authBtnHide\\\">Authorize</button>\\r\\n  \\r\\n        <button mat-raised-button *ngIf=\\\"ruleTRespData.recordStatus == 'C'\\\" (click)=\\\"openRuleTranslation()\\\" color=\\\"primary\\\"  [hidden]=\\\"reopenBtn\\\">Re-Open</button>\\r\\n        <button mat-raised-button *ngIf=\\\"ruleTRespData.recordStatus == 'O'\\\" (click)=\\\"closeRuleTranslation()\\\" color=\\\"primary\\\" [disabled]=\\\"closeBtn\\\">Close</button>\\r\\n        <button mat-raised-button *ngIf=\\\"ruleTRespData.approvedEver == 'N'&&!showdelete\\\" (click)=\\\"deleteRuleTranslation()\\\" [disabled]=\\\"deleted\\\" color=\\\"primary\\\">Delete</button>\\r\\n        <button mat-raised-button color=\\\"primary\\\" [routerLink]=\\\"'/sias-v2/tranlationSummary'\\\">Exit</button>\\r\\n        <!-- <button mat-raised-button (click)=\\\"onReset()\\\" color=\\\"warn\\\">Reset</button> -->\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</mat-card>\\r\\n\\r\\n<br>\\r\\n<div fxLayout=\\\"row wrap\\\">\\r\\n  <div fxFlex=\\\"100\\\">\\r\\n    <mat-card>\\r\\n      <mat-card-title>\\r\\n      </mat-card-title>\\r\\n      <mat-card-content>\\r\\n        <div fxLayout=\\\"row\\\">\\r\\n          <table id=\\\"customers\\\">\\r\\n            <tr>\\r\\n              <th>Record Status:</th>\\r\\n              <td>\\r\\n                <mat-chip>{{ruleTRespData.recordStatus}}</mat-chip>\\r\\n              </td>\\r\\n              <th>Input By:</th>\\r\\n              <td>\\r\\n                <mat-chip>{{ruleTRespData.creatorId}}</mat-chip>\\r\\n              </td>\\r\\n              <th>Verified By:</th>\\r\\n              <td>\\r\\n                <mat-chip>{{ruleTRespData.approverId}}</mat-chip>\\r\\n              </td>\\r\\n              <th>Verified Ever:</th>\\r\\n              <td>\\r\\n                <mat-chip>{{ruleTRespData.approvedEver}}</mat-chip>\\r\\n              </td>\\r\\n            </tr>\\r\\n            <tr>\\r\\n              <th>Modification No:</th>\\r\\n              <td>\\r\\n                <mat-chip>{{ruleTRespData.versionNo}}</mat-chip>\\r\\n              </td>\\r\\n              <th>Input Date:</th>\\r\\n              <td>\\r\\n                 <mat-chip>{{ruleTRespData.createdTime | date: 'MM/dd/yyyy, h:mm a'}}</mat-chip>\\r\\n\\r\\n              </td>\\r\\n              <th>Verified Date:</th>\\r\\n              <td>\\r\\n                <mat-chip>{{ruleTRespData.approvedTime | date: 'MM/dd/yyyy, h:mm a'}}</mat-chip>\\r\\n              </td>\\r\\n\\r\\n              <th>Verified Status:</th>\\r\\n              <td>\\r\\n                <mat-chip>{{ruleTRespData.verifiedStatus}}</mat-chip>\\r\\n              </td>\\r\\n\\r\\n            </tr>\\r\\n          </table>\\r\\n        </div>\\r\\n      </mat-card-content>\\r\\n    </mat-card>\\r\\n  </div>\\r\\n</div>\"","export default \"<mat-toolbar color=\\\"primary\\\" style=\\\"height:30px; font-size: small;\\\">\\r\\n    <span>Rule Translation</span>\\r\\n  \\r\\n  </mat-toolbar>\\r\\n  <br>\\r\\n  \\r\\n  \\r\\n  <mat-card class=\\\"baiscInfocard\\\">\\r\\n    <form>\\r\\n      <div style=\\\"flex-direction : row;\\\" fxLayout=\\\"row wrap\\\">\\r\\n        <div fxFlex=\\\"100\\\" fxLayoutAlign=\\\"space-between center\\\">\\r\\n          <!--<div fxFlex=\\\"15\\\"></div>\\r\\n          <div fxFlex=\\\"30\\\">-->\\r\\n  \\r\\n            <mat-form-field appearance=\\\"outline\\\">\\r\\n              <mat-label>Source System</mat-label>\\r\\n              <input matInput name=\\\"systemCode\\\" required #systemCode #systemCode=\\\"ngModel\\\" [(ngModel)]=\\\"msgTranslation.systemCode\\\"\\r\\n              (keyup)=\\\"onsearchingTablName($event)\\\" [matAutocomplete]=\\\"autotablName\\\" [disabled]=\\\"disableSubmit\\\">\\r\\n              <mat-icon matSuffix>arrow_drop_down</mat-icon>\\r\\n\\r\\n              <mat-autocomplete #autotablName=\\\"matAutocomplete\\\"  (selectionChange)=\\\"onSlectionExternalSystem($event)\\\"\\r\\n              (optionSelected)=\\\"onSlectionExternalSystem($event)\\\">\\r\\n              <mat-option *ngFor=\\\"let extsys of externalSystem\\\" [value]=\\\"extsys\\\">{{extsys}}\\r\\n              </mat-option>\\r\\n              </mat-autocomplete>\\r\\n            </mat-form-field>\\r\\n  \\r\\n  \\r\\n  \\r\\n          <!--</div>\\r\\n          <div fxFlex=\\\"10\\\"></div>\\r\\n          <div fxFlex=\\\"30\\\">-->\\r\\n  \\r\\n          <mat-form-field appearance=\\\"outline\\\">\\r\\n            <mat-label>Message Type</mat-label>\\r\\n            <mat-select value=\\\"incoming\\\" name=\\\"messageType\\\" \\r\\n              #messageType #messageType=\\\"ngModel\\\"  (optionSelected)=\\\"onSelectionOFMessageType($event)\\\" (selectionChange)=\\\"onSelectionOFMessageType($event)\\\"\\r\\n              [(ngModel)]=\\\"msgTranslation.messageType\\\" [disabled]=\\\"disableSubmit\\\">\\r\\n              <mat-option value=\\\"null\\\">--Please Select---</mat-option>\\r\\n              <mat-option value=\\\"I\\\" >Incoming</mat-option>\\r\\n              <mat-option value=\\\"O\\\" >Outgoing</mat-option>\\r\\n              <!-- <mat-option value=\\\"A\\\">ALL</mat-option> -->\\r\\n            </mat-select>\\r\\n          </mat-form-field>\\r\\n  \\r\\n  \\r\\n          <mat-form-field appearance=\\\"outline\\\">\\r\\n            <mat-label>Operation</mat-label>\\r\\n            <mat-select value=\\\"sys1\\\" name=\\\"operationName\\\" \\r\\n            #operationName #ooperationNamept=\\\"ngModel\\\"\\r\\n              [(ngModel)]=\\\"msgTranslation.operationName\\\" [disabled]=\\\"disableSubmit\\\">\\r\\n              <mat-option value>--Please Select---</mat-option>\\r\\n              <mat-option *ngFor=\\\"let opt of translationDataOperation\\\" [value]=\\\"opt.headerValue\\\">{{opt.headerValue}}</mat-option>\\r\\n  \\r\\n            </mat-select>\\r\\n          </mat-form-field>\\r\\n          <mat-form-field appearance=\\\"outline\\\">\\r\\n            <mat-label>Service</mat-label>\\r\\n            <mat-select value=\\\"create\\\" name=\\\"service\\\" #serv #serv=\\\"ngModel\\\" \\r\\n            [(ngModel)]=\\\"msgTranslation.serviceName\\\" [disabled]=\\\"disableSubmit\\\">\\r\\n            <mat-option value>--Please Select---</mat-option>\\r\\n              <mat-option *ngFor=\\\"let serv of translationDataService\\\" [value]=\\\"serv.headerValue\\\">{{serv.headerValue}}</mat-option>\\r\\n            </mat-select>\\r\\n          </mat-form-field>\\r\\n  \\r\\n  \\r\\n          <input type=\\\"file\\\" id=\\\"chFile\\\" (change)=\\\"selectFileFORHTTPXMLIncoming($event)\\\">\\r\\n          <button mat-raised-button type=\\\"file\\\" class=\\\"btnFile\\\" [disabled]=\\\"disableSubmit\\\" (click)=\\\"chooseFile()\\\" *ngIf=\\\"showFetch=='Https/Http'\\\">\\r\\n            <mat-icon>cloud_upload</mat-icon>&nbsp;&nbsp;File Upload\\r\\n          </button>\\r\\n         <p>{{fileName}}</p> \\r\\n          <button mat-raised-button (click)=\\\"onFetch()\\\" color=\\\"primary\\\" *ngIf=\\\"showFetch=='TCP/IP'\\\">Fetch</button>\\r\\n          <!--</div>-->\\r\\n  \\r\\n          <div fxFlex=\\\"10\\\"></div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div fxLayout=\\\"row wrap\\\">\\r\\n  \\r\\n  \\r\\n        <!-- for buttons -->\\r\\n      </div>\\r\\n  \\r\\n    </form>\\r\\n  </mat-card>\\r\\n  \\r\\n  \\r\\n  <!-- after fetch -->\\r\\n  <br>\\r\\n  \\r\\n  <mat-card *ngIf=\\\"showRecords\\\">\\r\\n    <form #myForm=\\\"ngForm\\\">\\r\\n    <div fxLayout=\\\"row wrap\\\" *ngFor=\\\"let iso of translationDeatils;let i=index\\\">\\r\\n      <div fxFlex=\\\"100\\\" fxLayoutGap=\\\"10px\\\">\\r\\n      \\r\\n        <div fxFlex=\\\"16\\\"  *ngIf=\\\"showFetch=='TCP/IP'\\\">\\r\\n          <!-- Field Name -->\\r\\n          <mat-form-field appearance=\\\"outline\\\">\\r\\n            <mat-label>Field No</mat-label>\\r\\n           <!-- // <input matInput name=\\\"messageKey_{{i}}\\\"  #messageKey=\\\"ngModel\\\" [disabled]=\\\"disableSubmit\\\" [(ngModel)]=\\\"iso.messageKey\\\" required>  -->\\r\\n         \\r\\n            <mat-select name=\\\"messageKey_{{i}}\\\"  #messageKey=\\\"ngModel\\\"  [(ngModel)]=\\\"iso.messageKey\\\" required [disabled]=\\\"disableSubmit\\\">\\r\\n              <mat-option *ngFor=\\\"let iso2 of translationDeatils\\\" [value]=\\\"iso2.messageKey\\\">\\r\\n                {{iso2.messageKey}}<{{iso2.messageBasis}}\\r\\n              </mat-option>\\r\\n            </mat-select>\\r\\n\\r\\n            <!-- <mat-select name=\\\"sourceKey_{{i}}\\\" #sourceKey=\\\"ngModel\\\" required [(ngModel)]=\\\"data.sourceKey\\\" [disabled]=\\\"disableSubmitBtn\\\">\\r\\n              <mat-option *ngFor=\\\"let tag of sourceData\\\" [value]=\\\"tag.messageBasis\\\">{{tag.messageKey}}:{{tag.messageBasis}}</mat-option>   \\r\\n            </mat-select> -->\\r\\n  \\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n        <div fxFlex=\\\"16\\\" *ngIf>\\r\\n          <mat-form-field appearance=\\\"outline\\\">\\r\\n            <!-- Filed No -->\\r\\n            <mat-label>Field Name</mat-label>\\r\\n            <!-- <input matInput  name=\\\"messageBasis_{{i}}\\\" #messageBasis=\\\"ngModel\\\" [disabled]=\\\"disableSubmit\\\" [(ngModel)]=\\\"iso.messageBasis\\\" required> -->\\r\\n            <input matInput name=\\\"messageBasis_{{i}}\\\" #messageBasis=\\\"ngModel\\\" [disabled]=\\\"disableSubmit\\\" [(ngModel)]=\\\"iso.messageBasis\\\" required>\\r\\n         \\r\\n            <!-- <mat-select name=\\\"messageBasis\\\" #messageBasis #messageBasis=\\\"ngModel\\\" [(ngModel)]=\\\"iso.messageBasis\\\">\\r\\n              <mat-option *ngFor=\\\"let data of messageBasisIso\\\" [value]=\\\"data\\\">\\r\\n                {{data}}\\r\\n              </mat-option>\\r\\n            </mat-select> -->\\r\\n  \\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n  \\r\\n        <div fxFlex=\\\"16\\\" *ngIf=\\\"showFetch=='Https/Http'\\\">\\r\\n           \\r\\n            <mat-form-field appearance=\\\"outline\\\">\\r\\n                <mat-label>Tag</mat-label>\\r\\n                \\r\\n                <mat-select name=\\\"messagebasis\\\" #messagebasis #messagebasis=\\\"ngModel\\\" [(ngModel)]=\\\"iso.messagebasis\\\"\\r\\n               (selectionChange)=\\\"onselectingTag($event,i)\\\" [disabled]=\\\"disableSubmit\\\"\\r\\n                (optionSelected)=\\\"onselectingTag($event,i)\\\"\\r\\n              >\\r\\n                    <mat-option [hidden]=\\\"shouldDisableTagOption(data)\\\" *ngFor=\\\"let data of messageBasisIso\\\" [value]=\\\"data\\\">\\r\\n                      {{data}}\\r\\n                    </mat-option>\\r\\n                  </mat-select>\\r\\n      \\r\\n              </mat-form-field>\\r\\n        </div>\\r\\n        <div fxFlex=\\\"16\\\" *ngIf=\\\"showFetch=='TCP/IP'\\\">\\r\\n           \\r\\n          <mat-form-field appearance=\\\"outline\\\">\\r\\n              <mat-label>Data Type</mat-label>\\r\\n            <input matInput [(ngModel)]=\\\"iso.dataType\\\" name=\\\"dataType_{{i}}\\\" [disabled]=\\\"disableSubmit\\\" #dataType #dataType=\\\"ngModel\\\" required>\\r\\n        \\r\\n              <!-- <mat-select name=\\\"messageBasis\\\" #messageBasis #messageBasis=\\\"ngModel\\\" [(ngModel)]=\\\"iso.messageBasis\\\">\\r\\n                  <mat-option *ngFor=\\\"let data of messageBasisIso\\\" [value]=\\\"data\\\">\\r\\n                    {{data}}\\r\\n                  </mat-option>\\r\\n                </mat-select> -->\\r\\n    \\r\\n            </mat-form-field>\\r\\n      </div>\\r\\n        <div fxFlex=\\\"16\\\"  *ngIf=\\\"showFetch=='Https/Http'\\\">\\r\\n          <mat-form-field appearance=\\\"outline\\\" >\\r\\n            <!-- Data Type -->\\r\\n            <mat-label>Data Type</mat-label>\\r\\n          \\r\\n            <mat-select name=\\\"dataType_{{i}}\\\" #dataType #dataType=\\\"ngModel\\\" [disabled]=\\\"disableSubmit\\\" [(ngModel)]=\\\"iso.dataType\\\" required>\\r\\n            \\r\\n              <mat-option value=\\\"numeric\\\">\\r\\n                Numeric\\r\\n              </mat-option>\\r\\n              <mat-option value=\\\"alphaNumeric\\\">\\r\\n                Alpha Numeric\\r\\n              </mat-option>\\r\\n              <mat-option value=\\\"date\\\">\\r\\n                Date\\r\\n              </mat-option>\\r\\n            </mat-select>\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n        <div fxFlex=\\\"16\\\">\\r\\n          <mat-form-field appearance=\\\"outline\\\">\\r\\n            <!-- Default Value -->\\r\\n            <mat-label>Default Value</mat-label>\\r\\n            <input name=\\\"defaultValue_{{i}}\\\" matInput #defaultValue #defaultValue=\\\"ngModel\\\"\\r\\n              [(ngModel)]=\\\"iso.defaultValue\\\"  [disabled]=\\\"disableSubmit\\\">\\r\\n          \\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n  \\r\\n        <div fxFlex=\\\"16\\\">\\r\\n          <mat-form-field appearance=\\\"outline\\\">\\r\\n            <!-- Encryption Type -->\\r\\n            <mat-label>Encryption Type</mat-label>\\r\\n           \\r\\n            <mat-select name=\\\"encryption\\\" name=\\\"encryption_{{i}}\\\" #encryption #encryption=\\\"encryption\\\"\\r\\n              [(ngModel)]=\\\"iso.encryption\\\" [disabled]=\\\"disableSubmit\\\">\\r\\n              <mat-option avlue=\\\" \\\">--Select--</mat-option>\\r\\n              <mat-option value=\\\"No Encryption\\\">No Encryption</mat-option>\\r\\n              <mat-option value=\\\"BASE64\\\">\\r\\n                BASE64\\r\\n              </mat-option>\\r\\n              <mat-option value=\\\"SHA264\\\">\\r\\n                SHA264\\r\\n              </mat-option>\\r\\n              <mat-option value=\\\"SHA512\\\">\\r\\n                SHA512\\r\\n              </mat-option>\\r\\n            </mat-select>\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n  \\r\\n        <div fxFlex=\\\"2\\\">\\r\\n         <!-- <button mat-raised-button  > -->\\r\\n                      <mat-icon color=\\\"warn\\\" *ngIf=\\\"!recordSaved\\\" (click)=\\\"deleteTranslation(i)\\\" style=\\\"margin-top:20px;cursor: pointer;\\\">delete</mat-icon>\\r\\n                  <!-- </button>  -->\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n   \\r\\n    <div fxLayout=\\\"row wrap\\\">\\r\\n      <div fxFlex=\\\"100\\\">\\r\\n        <div fxFlex=\\\"60\\\">\\r\\n          <!-- <button mat-raised-button  > -->\\r\\n            <mat-icon color=\\\"primary\\\" (click)=\\\"addTranlation()\\\" style=\\\"cursor: pointer\\\" color=\\\"primary\\\">add</mat-icon>\\r\\n          <!-- </button> -->\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <br>\\r\\n    <div fxLayout=\\\"row wrap\\\">\\r\\n      <div fxFlex=\\\"100\\\">\\r\\n          <div fxFlex=\\\"40\\\"></div>\\r\\n        <div fxFlex=\\\"60\\\" fxLayoutGap=\\\"10px\\\">\\r\\n         \\r\\n          <button mat-raised-button (click)=\\\"onSubmit()\\\" color=\\\"primary\\\" [disabled]=\\\"!myForm.valid || disableSubmit\\\">Submit</button>\\r\\n          <button mat-raised-button (click)=\\\"onReset()\\\" [disabled]=\\\"disableReset\\\" color=\\\"warn\\\">Reset</button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    </form>\\r\\n  </mat-card>\\r\\n  \\r\\n  \\r\\n  \\r\\n\\r\\n  <!-- For Message type is All -->\\r\\n  <mat-card *ngIf>\\r\\n      <div fxLayout=\\\"row wrap\\\" *ngFor=\\\"let iso of translationDeatils;let i=index\\\">\\r\\n          <div fxFlex=\\\"100\\\" fxLayoutGap=\\\"10px\\\">\\r\\n            <!-- <div fxFlex=\\\"16\\\">\\r\\n              <mat-form-field appearance=\\\"outline\\\">\\r\\n               \\r\\n                <mat-label>Header</mat-label>\\r\\n               \\r\\n                <mat-select name=\\\"headerTag\\\" name=\\\"headerTag\\\" #headerTag\\r\\n                  #headerTag=\\\"ngModel\\\" [(ngModel)]=\\\"iso.headerTag\\\">\\r\\n                  <mat-option *ngFor=\\\"let header of headerTagData\\\" [value]=\\\"header.headerTag\\\">\\r\\n                    {{header.headerTag}}\\r\\n                  </mat-option>\\r\\n                </mat-select>\\r\\n               \\r\\n      \\r\\n              </mat-form-field>\\r\\n            </div> -->\\r\\n         \\r\\n            <div fxFlex=\\\"16\\\"  *ngIf=\\\"showFetch=='TCP/IP'\\\">\\r\\n              <!-- Field Name -->\\r\\n              <mat-form-field appearance=\\\"outline\\\">\\r\\n                <mat-label>Field No</mat-label>\\r\\n      \\r\\n                <mat-select name=\\\"messageKey_{{i}}\\\" #messageKey=\\\"ngModel\\\" [(ngModel)]=\\\"iso.messageKey\\\">\\r\\n                  <mat-option *ngFor=\\\"let mkey of messageKeyIso\\\" [value]=\\\"mkey\\\">\\r\\n                    {{mkey}}\\r\\n                  </mat-option>\\r\\n                </mat-select>\\r\\n      \\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n            <div fxFlex=\\\"16\\\" *ngIf=\\\"showFetch=='TCP/IP'\\\">\\r\\n              <mat-form-field appearance=\\\"outline\\\">\\r\\n                <!-- Filed No -->\\r\\n                <mat-label>Field Name</mat-label>\\r\\n      \\r\\n                <mat-select name=\\\"messageBasis_{{i}}\\\" #messageBasis=\\\"ngModel\\\" [(ngModel)]=\\\"iso.messageBasis\\\">\\r\\n                  <mat-option *ngFor=\\\"let data of messageBasisIso\\\" [value]=\\\"data\\\">\\r\\n                    {{data}}\\r\\n                  </mat-option>\\r\\n                </mat-select>\\r\\n      \\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n      \\r\\n            <div fxFlex=\\\"16\\\" *ngIf=\\\"showFetch=='Https/Http'\\\">\\r\\n               \\r\\n                <mat-form-field appearance=\\\"outline\\\">\\r\\n                    <mat-label>Tag</mat-label>\\r\\n        \\r\\n                    <mat-select name=\\\"messageBasis_{{i}}\\\"  #messageBasis #messageBasis=\\\"ngModel\\\" [(ngModel)]=\\\"iso.messageBasis\\\"   (selectionChange)=\\\"check($event)\\\">\\r\\n                        <mat-option [hidden]=\\\"shouldDisableTagOption(data)\\\" *ngFor=\\\"let data of messageBasisIso\\\" [value]=\\\"data\\\">\\r\\n                          {{data}}\\r\\n                        </mat-option>\\r\\n                      </mat-select>\\r\\n          \\r\\n                  </mat-form-field>\\r\\n            </div>\\r\\n            <div fxFlex=\\\"16\\\">\\r\\n              <mat-form-field appearance=\\\"outline\\\">\\r\\n                <!-- Data Type -->\\r\\n                <mat-label>Data Type</mat-label>\\r\\n              \\r\\n                <mat-select name=\\\"dataType_{{i}}\\\" #dataType #dataType=\\\"ngModel\\\" [(ngModel)]=\\\"iso.dataType\\\">\\r\\n                  <mat-option value=\\\"numeric\\\">\\r\\n                    Numeric\\r\\n                  </mat-option>\\r\\n                  <mat-option value=\\\"alphaNumeric\\\">\\r\\n                    Alpha Numeric\\r\\n                  </mat-option>\\r\\n                  <mat-option value=\\\"date\\\">\\r\\n                    Date\\r\\n                  </mat-option>\\r\\n                </mat-select>\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n            <div fxFlex=\\\"16\\\">\\r\\n              <mat-form-field appearance=\\\"outline\\\">\\r\\n                <!-- Default Value -->\\r\\n                <mat-label>Default Value</mat-label>\\r\\n                <input name=\\\"messageBasis-{{i}}\\\" matInput name=\\\"headerValue\\\" #headerValue #headerValue=\\\"ngModel\\\"\\r\\n                  [(ngModel)]=\\\"iso.headerValue\\\">\\r\\n              \\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n      \\r\\n            <div fxFlex=\\\"16\\\">\\r\\n              <mat-form-field appearance=\\\"outline\\\">\\r\\n                <!-- Encryption Type -->\\r\\n                <mat-label>Encryption Type</mat-label>\\r\\n               \\r\\n                <mat-select name=\\\"encryption_{{i}}\\\" name=\\\"encryption\\\" #encryption #encryption=\\\"encryption\\\"\\r\\n                  [(ngModel)]=\\\"iso.encryption\\\">\\r\\n                  <mat-option>--Select--</mat-option>\\r\\n                  <mat-option value=\\\"No Encryption\\\">No Encryption</mat-option>\\r\\n                  <mat-option value=\\\"BASE64\\\">\\r\\n                    BASE64\\r\\n                  </mat-option>\\r\\n                  <mat-option value=\\\"SHA264\\\">\\r\\n                    SHA264\\r\\n                  </mat-option>\\r\\n                  <mat-option value=\\\"SHA512\\\">\\r\\n                    SHA512\\r\\n                  </mat-option>\\r\\n                </mat-select>\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n      \\r\\n            <div fxFlex=\\\"2\\\">\\r\\n             <!-- <button mat-raised-button  > -->\\r\\n                          <mat-icon color=\\\"warn\\\" (click)=\\\"deleteTranslation(i)\\\" *ngIf=\\\"!recordSaved\\\" style=\\\"margin-top:20px;cursor: pointer;\\\">delete</mat-icon>\\r\\n                      <!-- </button>  -->\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n       \\r\\n        <div fxLayout=\\\"row wrap\\\">\\r\\n          <div fxFlex=\\\"100\\\">\\r\\n            <div fxFlex=\\\"60\\\">\\r\\n              <!-- <button mat-raised-button  > -->\\r\\n                <mat-icon color=\\\"primary\\\" (click)=\\\"addTranlation()\\\" style=\\\"cursor: pointer\\\" color=\\\"primary\\\">add</mat-icon>\\r\\n              <!-- </button> -->\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n  </mat-card>\\r\\n  <br>\\r\\n  <mat-card *ngIf=\\\"msgTranslation.messageType=='A'\\\">\\r\\n      <div fxLayout=\\\"row wrap\\\" *ngFor=\\\"let iso of translationDeatils;let i=index\\\">\\r\\n          <div fxFlex=\\\"100\\\" fxLayoutGap=\\\"10px\\\">\\r\\n            <!-- <div fxFlex=\\\"16\\\">\\r\\n              <mat-form-field appearance=\\\"outline\\\">\\r\\n               \\r\\n                <mat-label>Header</mat-label>\\r\\n               \\r\\n                <mat-select name=\\\"headerTag\\\" name=\\\"headerTag\\\" #headerTag\\r\\n                  #headerTag=\\\"ngModel\\\" [(ngModel)]=\\\"iso.headerTag\\\">\\r\\n                  <mat-option *ngFor=\\\"let header of headerTagData\\\" [value]=\\\"header.headerTag\\\">\\r\\n                    {{header.headerTag}}\\r\\n                  </mat-option>\\r\\n                </mat-select>\\r\\n               \\r\\n      \\r\\n              </mat-form-field>\\r\\n            </div> -->\\r\\n         \\r\\n            <div fxFlex=\\\"16\\\"  *ngIf=\\\"showFetch=='TCP/IP'\\\">\\r\\n              <!-- Field Name -->\\r\\n              <mat-form-field appearance=\\\"outline\\\">\\r\\n                <mat-label>Field No</mat-label>\\r\\n      \\r\\n                <mat-select name=\\\"messageKey_{{i}}\\\" #messageKey=\\\"ngModel\\\" [(ngModel)]=\\\"iso.messageKey\\\">\\r\\n                  <mat-option *ngFor=\\\"let mkey of messageKeyIso\\\" [value]=\\\"mkey\\\">\\r\\n                    {{mkey}}\\r\\n                  </mat-option>\\r\\n                </mat-select>\\r\\n      \\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n            <div fxFlex=\\\"16\\\" *ngIf=\\\"showFetch=='TCP/IP'\\\">\\r\\n              <mat-form-field appearance=\\\"outline\\\">\\r\\n                <!-- Filed No -->\\r\\n                <mat-label>Field Name</mat-label>\\r\\n      \\r\\n                <mat-select name=\\\"messageBasis_{{i}}\\\" #messageBasis=\\\"ngModel\\\" [(ngModel)]=\\\"iso.messageBasis\\\">\\r\\n                  <mat-option *ngFor=\\\"let data of messageBasisIso\\\" [value]=\\\"data\\\">\\r\\n                    {{data}}\\r\\n                  </mat-option>\\r\\n                </mat-select>\\r\\n      \\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n      \\r\\n            <div fxFlex=\\\"16\\\" *ngIf=\\\"showFetch=='Https/Http'\\\">\\r\\n               \\r\\n                <mat-form-field appearance=\\\"outline\\\">\\r\\n                    <mat-label>Tag</mat-label>\\r\\n         \\r\\n                    <mat-select name=\\\"messageBasis_{{i}}\\\" #messageBasis #messageBasis=\\\"ngModel\\\" [(ngModel)]=\\\"iso.messageBasis\\\" (selectionChange)=\\\"check($event)\\\">\\r\\n                        <mat-option [hidden]=\\\"shouldDisableTagOption(data)\\\" *ngFor=\\\"let data of messageBasisIso\\\" [value]=\\\"data\\\">\\r\\n                          {{data}}\\r\\n                        </mat-option>\\r\\n                      </mat-select>\\r\\n          \\r\\n                  </mat-form-field>\\r\\n            </div>\\r\\n            <div fxFlex=\\\"16\\\">\\r\\n              <mat-form-field appearance=\\\"outline\\\">\\r\\n                <!-- Data Type -->\\r\\n                <mat-label>Data Type</mat-label>\\r\\n              \\r\\n                <mat-select name=\\\"dataType_{{i}}\\\" #dataType #dataType=\\\"ngModel\\\" [(ngModel)]=\\\"iso.dataType\\\">\\r\\n                  <mat-option value=\\\"numeric\\\">\\r\\n                    Numeric\\r\\n                  </mat-option>\\r\\n                  <mat-option value=\\\"alphaNumeric\\\">\\r\\n                    Alpha Numeric\\r\\n                  </mat-option>\\r\\n                  <mat-option value=\\\"date\\\">\\r\\n                    Date\\r\\n                  </mat-option>\\r\\n                </mat-select>\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n            <div fxFlex=\\\"16\\\">\\r\\n              <mat-form-field appearance=\\\"outline\\\">\\r\\n                <!-- Default Value -->\\r\\n                <mat-label>Default Value</mat-label>\\r\\n                <input name=\\\"messageBasis_{{i}}\\\" matInput name=\\\"headerValue\\\" #headerValue #headerValue=\\\"ngModel\\\"\\r\\n                  [(ngModel)]=\\\"iso.headerValue\\\">\\r\\n              \\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n      \\r\\n            <div fxFlex=\\\"16\\\">\\r\\n              <mat-form-field appearance=\\\"outline\\\">\\r\\n                <!-- Encryption Type -->\\r\\n                <mat-label>Encryption Type</mat-label>\\r\\n               \\r\\n                <mat-select name=\\\"encryption_{{i}}\\\" name=\\\"encryption\\\" #encryption #encryption=\\\"encryption\\\"\\r\\n                  [(ngModel)]=\\\"iso.encryption\\\">\\r\\n                  <mat-option>--Select--</mat-option>\\r\\n                  <mat-option value=\\\"No Encryption\\\">No Encryption</mat-option>\\r\\n                  <mat-option value=\\\"BASE64\\\">\\r\\n                    BASE64\\r\\n                  </mat-option>\\r\\n                  <mat-option value=\\\"SHA264\\\">\\r\\n                    SHA264\\r\\n                  </mat-option>\\r\\n                  <mat-option value=\\\"SHA512\\\">\\r\\n                    SHA512\\r\\n                  </mat-option>\\r\\n                </mat-select>\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n      \\r\\n            <div fxFlex=\\\"2\\\">\\r\\n             <!-- <button mat-raised-button  > -->\\r\\n                          <mat-icon color=\\\"warn\\\" *ngIf=\\\"!recordSaved\\\" (click)=\\\"deleteTranslation(i)\\\" style=\\\"margin-top:20px;cursor: pointer;\\\">delete</mat-icon>\\r\\n                      <!-- </button>  -->\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n       \\r\\n        <div fxLayout=\\\"row wrap\\\">\\r\\n          <div fxFlex=\\\"100\\\">\\r\\n            <div fxFlex=\\\"60\\\">\\r\\n              <!-- <button mat-raised-button  > -->\\r\\n                <mat-icon color=\\\"primary\\\" (click)=\\\"addTranlation()\\\" style=\\\"cursor: pointer\\\" color=\\\"primary\\\">add</mat-icon>\\r\\n              <!-- </button> -->\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n  \\r\\n      </mat-card>\\r\\n  <br>\\r\\n  <div fxLayout=\\\"row\\\" *ngIf=\\\"showAuditLog\\\">\\r\\n      <!-- <div fxFlex></div> -->\\r\\n      <div fxFlex=\\\"95\\\">\\r\\n        <mat-card style=\\\"width: 70%;  margin-left:260px;\\\">\\r\\n          <mat-card-title>\\r\\n          </mat-card-title>\\r\\n          <mat-card-content>\\r\\n            <div fxLayout=\\\"row\\\">\\r\\n              <table id=\\\"customers\\\">\\r\\n                <tr>\\r\\n                  <th>Record Status:</th>\\r\\n                  <td>\\r\\n                    <mat-chip>{{translationResp.recordStatus}}</mat-chip>\\r\\n                  </td>\\r\\n                  <th>Input By:</th>\\r\\n                  <td>\\r\\n                    <mat-chip>{{translationResp.creatorId}}</mat-chip>\\r\\n                  </td>\\r\\n                  <th>Verified By:</th>\\r\\n                  <td>\\r\\n                    <mat-chip>{{translationResp.approverId}}</mat-chip>\\r\\n                  </td>\\r\\n                  <th>Verified Once:</th>\\r\\n                  <td>\\r\\n                    <mat-chip>{{translationResp.approvedEver}}</mat-chip>\\r\\n                  </td>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                  <th>Modification No:</th>\\r\\n                  <td>\\r\\n                    <mat-chip>{{translationResp.versionNo}}</mat-chip>\\r\\n                  </td>\\r\\n                  <th>Input Date:</th>\\r\\n                  <td>\\r\\n                     <mat-chip>{{translationResp.createdTime | date: 'MM/dd/yyyy, h:mm a'}}</mat-chip>\\r\\n  \\r\\n                  </td>\\r\\n                  <th>Verified Date:</th>\\r\\n                  <td>\\r\\n                    <mat-chip>{{translationResp.approvedTime | date: 'MM/dd/yyyy, h:mm a'}}</mat-chip>\\r\\n                  </td>\\r\\n    \\r\\n                  <th>Verified Status:</th>\\r\\n                  <td>\\r\\n                    <mat-chip>{{translationResp.verifiedStatus}}</mat-chip>\\r\\n                  </td>\\r\\n    \\r\\n                </tr>\\r\\n              </table>\\r\\n            </div>\\r\\n          </mat-card-content>\\r\\n        </mat-card>\\r\\n      </div>\\r\\n    </div>\"","export default \"\\r\\n<mat-toolbar color=\\\"primary\\\"  style=\\\"height:30px; font-size: small;\\\">\\r\\n    <span>Rule Translation</span>\\r\\n  </mat-toolbar>\\r\\n  <br />\\r\\n  <div>\\r\\n      <div fxLayoutAlign=\\\"end stretch\\\" fxLayoutGap=\\\"10px\\\">\\r\\n              <div fxLayoutAlign=\\\"end stretch\\\">\\r\\n                      <button mat-raised-button routerLink=\\\"/sias-v2/ruleTranslation\\\" color=\\\"primary\\\"\\r\\n                      >New </button>\\r\\n              </div>\\r\\n          <button mat-raised-button routerLink=\\\"/dashboard\\\" color=\\\"warn\\\"\\r\\n          >Exit</button>\\r\\n  </div>\\r\\n  </div>\\r\\n  <br>\\r\\n  <div class=\\\"mat-elevation-z8\\\">\\r\\n      <table mat-table [dataSource]=\\\"dataSource\\\" matSort \\r\\n      matSort matSortActive=\\\"createdTime\\\" matSortDirection=\\\"desc\\\">\\r\\n  \\r\\n          <!-- code Column -->\\r\\n          <ng-container matColumnDef=\\\"id\\\">\\r\\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> Id </th>\\r\\n            \\r\\n             <td mat-cell *matCellDef=\\\"let row\\\">\\r\\n                      <a routerLink=\\\"/sias-v2/editTranslation/{{row.transId}}\\\" (click)=\\\"oneditBasedOnId(row)\\\">{{\\r\\n                      row.transId\\r\\n                    }}</a>\\r\\n                    </td> \\r\\n          </ng-container>\\r\\n  \\r\\n          <!-- name Column -->\\r\\n          <ng-container matColumnDef=\\\"systemCode\\\">\\r\\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>System Code </th>\\r\\n              <td mat-cell *matCellDef=\\\"let row\\\"> {{row.systemCode}} </td>\\r\\n          </ng-container>\\r\\n  \\r\\n          <!-- type Column -->\\r\\n          <ng-container matColumnDef=\\\"operationName\\\">\\r\\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>Operation Name</th>\\r\\n              <td mat-cell *matCellDef=\\\"let row\\\"> {{row.operationName}} </td>\\r\\n          </ng-container>\\r\\n  \\r\\n          <!-- externalIp Column -->\\r\\n          <ng-container matColumnDef=\\\"serviceName\\\">\\r\\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> Service Name </th>\\r\\n              <td mat-cell *matCellDef=\\\"let row\\\"> {{row.serviceName}} </td>\\r\\n          </ng-container>\\r\\n  \\r\\n          <!-- externalPort Column -->\\r\\n          <ng-container matColumnDef=\\\"creatorId\\\">\\r\\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> Maker </th>\\r\\n              <td mat-cell *matCellDef=\\\"let row\\\"> {{row.creatorId}} </td>\\r\\n          </ng-container>\\r\\n          <ng-container matColumnDef=\\\"createdTime\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Date </th>\\r\\n            <td mat-cell *matCellDef=\\\"let row\\\"> {{row.createdTime |date}} </td>\\r\\n        </ng-container>\\r\\n\\r\\n  \\r\\n          \\r\\n  \\r\\n  \\r\\n          <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n          <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n  \\r\\n          <!-- Row shown when there is no matching data. -->\\r\\n          <!-- <tr class=\\\"mat-row\\\" *matNoDataRow> -->\\r\\n          <!-- <td class=\\\"mat-cell\\\" colspan=\\\"4\\\">No data matching the filter \\\"{{input.value}}\\\"</td> -->\\r\\n          <!-- </tr> -->\\r\\n      </table>\\r\\n  \\r\\n      <mat-paginator [pageSizeOptions]=\\\"[5, 10, 20]\\\" showFirstLastButtons></mat-paginator>\\r\\n  </div>\\r\\n  \"","export default \"\\r\\n<mat-toolbar color=\\\"primary\\\" style=\\\"height:30px; font-size: small;\\\">\\r\\n    <span >Rule Validation</span>\\r\\n   \\r\\n  </mat-toolbar>\\r\\n  \\r\\n\\r\\n \\r\\n  <mat-card style=\\\"overflow: hidden\\\">\\r\\n      <div fxLayout=\\\"column wrap\\\">\\r\\n          <div fxFlex=\\\"100\\\" fxLayoutGap=\\\"10px\\\">\\r\\n            <div fxFlex=\\\"20\\\">\\r\\n              <mat-form-field appearance=\\\"outline\\\">\\r\\n                <mat-label>Source system</mat-label>\\r\\n              <mat-select  >\\r\\n                  <mat-option value=\\\"extsys1\\\">sys1</mat-option>\\r\\n                  <mat-option value=\\\"extsys1\\\">sys1</mat-option>\\r\\n              </mat-select>\\r\\n            </mat-form-field>\\r\\n            </div>\\r\\n            <div fxFlex=\\\"20\\\">\\r\\n                <mat-form-field appearance=\\\"outline\\\">\\r\\n                  <mat-label>Destination system</mat-label>\\r\\n                <mat-select  >\\r\\n                    <mat-option value=\\\"extsys1\\\">sys1</mat-option>\\r\\n                    <mat-option value=\\\"extsys1\\\">sys1</mat-option>\\r\\n                </mat-select>\\r\\n              </mat-form-field>\\r\\n              </div>\\r\\n            \\r\\n              \\r\\n          </div>\\r\\n        </div>\\r\\n    <div fxLayout=\\\"column wrap\\\">\\r\\n        <div fxFlex=\\\"100\\\" *ngFor=\\\"let rule of ruleBValidationData;let i=index\\\" fxLayoutGap=\\\"10px\\\">\\r\\n          <div fxFlex=\\\"20\\\">\\r\\n            <mat-form-field appearance=\\\"outline\\\">\\r\\n              <mat-label>Field No</mat-label>\\r\\n              <input matInput [(ngModel)]=\\\"rule.fieldNo\\\">\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n          <div fxFlex=\\\"20\\\">\\r\\n              <mat-form-field appearance=\\\"outline\\\">\\r\\n                <mat-label>Node</mat-label>\\r\\n                <input matInput [(ngModel)]=\\\"rule.node\\\">\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n            <div fxFlex=\\\"20\\\">\\r\\n                <mat-form-field appearance=\\\"outline\\\">\\r\\n                  <mat-label>Key </mat-label>\\r\\n                  <input matInput [(ngModel)]=\\\"rule.key\\\">\\r\\n                </mat-form-field>\\r\\n              </div>\\r\\n              <div fxFlex=\\\"20\\\">\\r\\n                  <mat-form-field appearance=\\\"outline\\\">\\r\\n                    <mat-label>Object Name</mat-label>\\r\\n                    <input matInput [(ngModel)]=\\\"rule.objectName\\\">\\r\\n                  </mat-form-field>\\r\\n                </div>\\r\\n          <div fxFlex=\\\"20\\\">\\r\\n              <mat-form-field appearance=\\\"outline\\\">\\r\\n                <mat-label>Validation Method</mat-label>\\r\\n                <input matInput [(ngModel)]=\\\"rule.validationMethod\\\">\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n          <div fxFlex=\\\"20\\\">\\r\\n              <mat-form-field appearance=\\\"outline\\\">\\r\\n                <mat-label>Validtion Details</mat-label>\\r\\n                <input matInput [(ngModel)]=\\\"rule.validationDetails\\\">\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n            <div fxFlex=\\\"3\\\">\\r\\n                <button mat-icon-button color=\\\"warn\\\" (click)=\\\"deleteRuleVlidtion(i)\\\">\\r\\n                           \\r\\n                    <mat-icon >delete</mat-icon>\\r\\n                  \\r\\n                  </button>\\r\\n            </div>\\r\\n            <!-- <div fxFlex=\\\"3\\\">\\r\\n                <button mat-icon-button color=\\\"warn\\\" >\\r\\n                           \\r\\n                    <mat-icon >check_circle_outline</mat-icon>\\r\\n                  \\r\\n                  </button>\\r\\n            </div> -->\\r\\n            <!-- <div>\\r\\n              <button mat-icon-button color=\\\"warn\\\" (click)=\\\"ruleTranslation()\\\">\\r\\n                           \\r\\n                      <mat-icon >edit</mat-icon>\\r\\n                    \\r\\n                    </button>\\r\\n            </div> -->\\r\\n        </div>\\r\\n    </div>\\r\\n    <div fxLayout=\\\"row wrap\\\">\\r\\n      <div fxFlex=\\\"100\\\">\\r\\n        <button mat-raised-button (click)=\\\"addRuleValidtion()\\\" color=\\\"primary\\\"><mat-icon>add</mat-icon></button>\\r\\n      </div>\\r\\n    </div>\\r\\n<br>\\r\\n    <div fxLayout=\\\"row wrap\\\">\\r\\n        <div fxFlex=\\\"100\\\" fxLayoutGap=\\\"10px\\\">\\r\\n          <button mat-raised-button (click)=\\\"moveToruletranslation()\\\" color=\\\"primary\\\">Next</button>\\r\\n          <button mat-raised-button [routerLink]=\\\"'/sias-v2/createRule'\\\" color=\\\"primary\\\">Previous</button>\\r\\n          <button mat-raised-button  color=\\\"warn\\\">Reset</button>\\r\\n        </div>\\r\\n      </div>\\r\\n  </mat-card>\"","export default \"<p>rules works!</p>\\r\\n\"","export default \"<mat-card *ngIf=\\\"isSourceDestination\\\">\\r\\n  <mat-toolbar color=\\\"primary\\\" style=\\\"height:30px; font-size: large;\\\">\\r\\n      Source Destination System\\r\\n  </mat-toolbar>\\r\\n\\r\\n  <form [formGroup]=\\\"sourceDestinationSystemForm\\\" novalidate #formDirective=\\\"ngForm\\\" class=\\\"top\\\">\\r\\n      <mat-card-content>\\r\\n          <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"15px\\\">\\r\\n              <div fxFlex=\\\"40\\\"></div>\\r\\n              <div fxFlex=\\\"40\\\">\\r\\n                  <div class=\\\"pb-1\\\">\\r\\n                      <mat-form-field appearance=\\\"outline\\\">\\r\\n                          <mat-label>Source System</mat-label>\\r\\n                          <input type=\\\"text\\\" placeholder=\\\"Pick one\\\"  matInput\\r\\n                              formControlName=\\\"sourceSystem\\\" [matAutocomplete]=\\\"auto\\\">\\r\\n                          <mat-autocomplete autoActiveFirstOption #auto=\\\"matAutocomplete\\\">\\r\\n                              <mat-option *ngFor=\\\"let option of filteredOptions | async\\\" [value]=\\\"option\\\">\\r\\n                                  {{option}}\\r\\n                              </mat-option>\\r\\n                          </mat-autocomplete>\\r\\n                      </mat-form-field>\\r\\n                  </div>\\r\\n\\r\\n                  <div class=\\\"pb-1\\\">\\r\\n                      <mat-form-field appearance=\\\"outline\\\">\\r\\n                          <mat-label>Destination System</mat-label>\\r\\n                          <input type=\\\"text\\\" placeholder=\\\"Pick one\\\" aria-label=\\\"destinationSystem\\\" matInput\\r\\n                              formControlName=\\\"destinationSystem\\\" [matAutocomplete]=\\\"autoCom\\\">\\r\\n                          <mat-autocomplete autoActiveFirstOption #autoCom=\\\"matAutocomplete\\\">\\r\\n                              <mat-option *ngFor=\\\"let option1 of filteredOptions1 | async\\\" [value]=\\\"option1\\\">\\r\\n                                  {{option1}}\\r\\n                              </mat-option>\\r\\n                          </mat-autocomplete>\\r\\n                      </mat-form-field>\\r\\n                  </div>\\r\\n              </div>\\r\\n          </div>\\r\\n      </mat-card-content>\\r\\n      <mat-card-actions align=\\\"right\\\" fxLayoutGap=\\\"10px\\\">\\r\\n          <button mat-raised-button (click)=\\\"submit(sourceDestinationSystemForm.value)\\\" color=\\\"primary\\\">Next</button>\\r\\n          <button mat-raised-button  color=\\\"warn\\\" [routerLink]=\\\"'/dashboard'\\\">Exit</button>\\r\\n      </mat-card-actions>\\r\\n  </form>\\r\\n</mat-card>\\r\\n\\r\\n<mat-card *ngIf=\\\"isSrcDestValidation\\\">\\r\\n  <mat-toolbar color=\\\"primary\\\" style=\\\"height:30px; font-size: large;\\\">\\r\\n      Source Destination System Validation\\r\\n  </mat-toolbar>\\r\\n\\r\\n  \\r\\n\\r\\n  <div class=\\\"Div_card\\\">\\r\\n      <mat-card class=\\\"tabb\\\">\\r\\n        <!-- <div class=\\\"inputWithIcon inputIconBg\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"searchString\\\" placeholder=\\\"Search\\\" [(ngModel)]=\\\"searchField\\\"\\r\\n            (keyup)=\\\"applyFilter($event.target.value)\\\" />\\r\\n          <i class=\\\"fa fa-search fa-lg fa-fw\\\" aria-hidden=\\\"true\\\"></i>\\r\\n          <button *ngIf=\\\"searchField\\\" class=\\\"searchicon\\\" matSuffix mat-icon-button aria-label=\\\"Clear\\\" (click)=\\\"clearSearchField()\\\">\\r\\n            <mat-icon class=\\\"closicon\\\">close</mat-icon>\\r\\n          </button>\\r\\n        </div> -->\\r\\n        <table mat-table [dataSource]=\\\"dataSource\\\" class=\\\"mat-elevation-z0\\\">\\r\\n          <ng-container matColumnDef=\\\"source\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef>Source System</th>\\r\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.source}} </td>\\r\\n          </ng-container>\\r\\n          <ng-container matColumnDef=\\\"destination\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef> Destination System</th>\\r\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.destination}} </td>\\r\\n          </ng-container>\\r\\n          <ng-container matColumnDef=\\\"validationMethod\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef>Validation Method</th>\\r\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.validationMethod}} </td>\\r\\n          </ng-container>\\r\\n          <ng-container matColumnDef=\\\"details\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef> Details</th>\\r\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.details}} </td>\\r\\n          </ng-container>\\r\\n          <ng-container matColumnDef=\\\"values\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef> Values</th>\\r\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.values}} </td>\\r\\n          </ng-container>\\r\\n     \\r\\n          <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n          <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n        </table>\\r\\n        <mat-paginator [pageSizeOptions]=\\\"[5, 10, 20]\\\" showFirstLastButtons></mat-paginator>\\r\\n      </mat-card>\\r\\n\\r\\n    </div>\\r\\n\\r\\n</mat-card>\"","export default \"<mat-toolbar color=\\\"primary\\\" style=\\\"height:30px; font-size: small;\\\">\\r\\n  <span>Process Code Mapping</span>\\r\\n</mat-toolbar>\\r\\n<br>\\r\\n<form #fn=\\\"ngForm\\\" novalidate>\\r\\n    <mat-card>\\r\\n      <div fxLayout=\\\"row wrap\\\">\\r\\n        <div fxFlex=\\\"100\\\">\\r\\n          <div fxFlex=\\\"30\\\">\\r\\n              <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\">\\r\\n                  <mat-label>External System Code</mat-label>\\r\\n                  <input matInput type=\\\"text\\\" [(ngModel)]=\\\"modifyRoleObject.extSysCode\\\" name=\\\"extSysCode\\\" readonly>\\r\\n                </mat-form-field>\\r\\n               \\r\\n                <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\">\\r\\n                    <mat-label>Process code</mat-label>\\r\\n                    <input matInput type=\\\"text\\\" #pcode [(ngModel)]=\\\"modifyRoleObject.processCode\\\" required name=\\\"processCode\\\"\\r\\n                      [readonly]=\\\"!editFunction\\\" (keyup)=\\\"fun(modifyRoleObject.processCode)\\\">\\r\\n                  </mat-form-field>\\r\\n           <br>\\r\\n           <mat-checkbox (change)=\\\"treasuryRequired($event)\\\" name=\\\"treasuryrefRequired\\\"\\r\\n           [(ngModel)]=\\\"modifyRoleObject.treasuryrefRequired\\\"\\r\\n[disabled]=\\\"!editFunction\\\" >Treasury Reference Required</mat-checkbox>\\r\\n          \\r\\n           <br>\\r\\n           <mat-checkbox (change)=\\\"checkCheckBoxvalueUpload($event)\\\" name=\\\"autoUpload\\\"\\r\\n           [(ngModel)]=\\\"modifyRoleObject.autoUpload\\\" [disabled]=\\\"!editFunction\\\">Auto Upload</mat-checkbox>\\r\\n           <br><br>\\r\\n           <mat-checkbox (change)=\\\"checkCheckBoxvalueBDA($event)\\\" name=\\\"backDateAllow\\\" \\r\\n           [checked]=\\\"modifyRoleObject.backDateAllow\\\" [disabled]=\\\"!editFunction\\\">Back Dating</mat-checkbox>\\r\\n           <br><br>\\r\\n           <mat-checkbox (change)=getValue($event) name=\\\"futureDateAllow\\\" [checked]=\\\"modifyRoleObject.futureDateAllow\\\" \\r\\n           [disabled]=\\\"!editFunction\\\">Future Dating</mat-checkbox>\\r\\n           <br><br><br>\\r\\n           <mat-checkbox (change)=getValueOfFCYrateVariance($event) name=\\\"fCYRateVariance\\\" \\r\\n              [checked]=\\\"modifyRoleObject.fCYRateVariance\\\" [disabled]=\\\"!editFunction\\\"  style=\\\"color: black\\\">FCY Exchange Rate Variance percentage</mat-checkbox>\\r\\n   \\r\\n              <mat-checkbox (change)=getValue2($event) name=\\\"acft\\\" [checked]=\\\"modifyRoleObject.acft\\\"\\r\\n              [disabled]=\\\"!editFunction\\\">\\r\\n              Cross Financial Transaction.</mat-checkbox>\\r\\n             \\r\\n              \\r\\n              <mat-checkbox (change)=getValueMfI($event) [checked]=\\\"modifyRoleObject.mandatoryFieldImposed\\\"\\r\\n              [disabled]=\\\"!editFunction\\\" class=\\\"disabled\\\">Mandatory Field \\r\\n              Impose</mat-checkbox>\\r\\n               <div>\\r\\n                  <mat-checkbox (change)=getValueSftp($event) [checked]=\\\"modifyRoleObject.sftpRequired\\\"\\r\\n                  [disabled]=\\\"!editFunction\\\">SFTP Required\\r\\n                </mat-checkbox>\\r\\n               </div>\\r\\n               <div>\\r\\n                <mat-checkbox (change)=getwuFileValue($event) [checked]=\\\"modifyRoleObject.wuFile\\\"\\r\\n                [disabled]=\\\"!editFunction\\\" class=\\\"disabled\\\">WU File Upload</mat-checkbox>\\r\\n                <!-- <mat-checkbox (change)=getValueMfI($event) [checked]=\\\"modifyRoleObject.mandatoryFieldImposed\\\"\\r\\n                [disabled]=\\\"!editFunction\\\" class=\\\"disabled\\\">Mandatory Field \\r\\n                Impose</mat-checkbox> -->\\r\\n               </div>\\r\\n          </div>\\r\\n          <div fxFlex=\\\"25\\\">\\r\\n              <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\">\\r\\n                  <mat-label>External System Name</mat-label>\\r\\n                  <input matInput type=\\\"text\\\" [(ngModel)]=\\\"modifyRoleObject.extSysName\\\" name=\\\"extSysName\\\" #extSysName=\\\"ngModel\\\"\\r\\n                    readonly required>\\r\\n                </mat-form-field>\\r\\n                <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\">\\r\\n                    <mat-label>Maximum Upload Limit</mat-label>\\r\\n                    <input matInput type=\\\"number\\\" #maxUpload [(ngModel)]=\\\"modifyRoleObject.maxUploadLimit\\\" required name=\\\"maxUploadLimit\\\"\\r\\n                      [readonly]=\\\"!editFunction\\\">\\r\\n                  </mat-form-field>\\r\\n                  <br><br>\\r\\n                  <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\">\\r\\n                      <mat-label>File Name</mat-label>\\r\\n                      <input matInput type=\\\"text\\\" #fileName [(ngModel)]=\\\"modifyRoleObject.fileName\\\" name=\\\"fileName\\\" [readonly]=\\\"!editFunction\\\" [disabled]=\\\"!enablefilebrowser\\\" required>\\r\\n                    </mat-form-field>\\r\\n                    <!-- <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\" style=\\\"color: black\\\">\\r\\n                      <mat-label style=\\\"color: black\\\">File Name</mat-label>\\r\\n                      <input matInput type=\\\"text\\\" #fileName [(ngModel)]=\\\"createExtSys1.fileName\\\" name=\\\"fileName\\\"\\r\\n                        [disabled]=\\\"!enablefilebrowser\\\" required>\\r\\n                    </mat-form-field> -->\\r\\n                    <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\">\\r\\n                        <mat-label>Back Dating</mat-label>\\r\\n                        <input matInput type=\\\"text\\\" [(ngModel)]=\\\"modifyRoleObject.bdav\\\" name=\\\"bdav\\\" [readonly]=\\\"!editFunction\\\" [disabled]=\\\"!modifyRoleObject.backDateAllow\\\"\\r\\n                          required >\\r\\n                      </mat-form-field>\\r\\n                      <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\" >\\r\\n                          <mat-label>Future Dating</mat-label>\\r\\n                          <input matInput type=\\\"text\\\" [(ngModel)]=\\\"modifyRoleObject.fdav\\\" name=\\\"fdav\\\" [readonly]=\\\"!editFunction\\\" [disabled]=\\\"!modifyRoleObject.futureDateAllow\\\"\\r\\n                            required>\\r\\n                        </mat-form-field>\\r\\n                        <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\" >\\r\\n                            <mat-label>FCY Exchange Rate Variance percentage</mat-label>\\r\\n                            <input matInput type=\\\"text\\\" [(ngModel)]=\\\"modifyRoleObject.fCYPercentage\\\" name=\\\"fCYPercentage\\\" [disabled]=\\\"!modifyRoleObject.fCYRateVariance\\\"\\r\\n                              [readonly]=\\\"!editFunction\\\" required>\\r\\n                          </mat-form-field>\\r\\n          </div>\\r\\n          <div fxFlex=\\\"25\\\">\\r\\n            <div style=\\\"top: 30%;position: absolute;\\\">\\r\\n                <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\" *ngIf=\\\"enablefilebrowser\\\">\\r\\n                    <mat-label>File Path</mat-label>\\r\\n                    <input matInput type=\\\"text\\\" #filePath [(ngModel)]=\\\"modifyRoleObject.filePath\\\" name=\\\"filePath\\\" required [readonly]=\\\"!editFunction\\\">\\r\\n                  </mat-form-field>\\r\\n              \\r\\n            </div>\\r\\n          </div>\\r\\n          <div fxFlex=\\\"25\\\" *ngIf=\\\"is_sftp\\\">\\r\\n            <div>SFTP Details</div>\\r\\n            <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\">\\r\\n                <mat-label>User Name</mat-label>\\r\\n                <input matInput type=\\\"text\\\" placeholder=\\\"UserName\\\" [(ngModel)]=\\\"modifyRoleObject.sftpUsername\\\"\\r\\n                  name=\\\"sftpUsername\\\" required>\\r\\n              </mat-form-field>\\r\\n      \\r\\n              <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\">\\r\\n                  <mat-label>Password</mat-label>\\r\\n                  <input matInput type=\\\"text\\\" placeholder=\\\"Password\\\" [(ngModel)]=\\\"modifyRoleObject.sftpPassword\\\"\\r\\n                    name=\\\"sftpPassword\\\" required>\\r\\n                </mat-form-field>\\r\\n                <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\">\\r\\n                    <mat-label>IP Address</mat-label>\\r\\n                    <input matInput type=\\\"text\\\" [(ngModel)]=\\\"modifyRoleObject.sftpIpaddress\\\" placeholder=\\\"IPaddress\\\"\\r\\n                      name=\\\"sftpIpaddress\\\" required>\\r\\n                  </mat-form-field>\\r\\n                  <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\">\\r\\n                      <mat-label>Port</mat-label>\\r\\n                      <input matInput type=\\\"text\\\" [(ngModel)]=\\\"modifyRoleObject.sftpPort\\\" name=\\\"sftpPort\\\" placeholder=\\\"Port\\\"\\r\\n                        required>\\r\\n                    </mat-form-field>\\r\\n                    <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\">\\r\\n                        <mat-label>Path</mat-label>\\r\\n                        <input matInput type=\\\"text\\\" [(ngModel)]=\\\"modifyRoleObject.sftpPath\\\" name=\\\"path\\\" placeholder=\\\"Path\\\" required>\\r\\n                      </mat-form-field>\\r\\n          </div>\\r\\n          \\r\\n        </div>\\r\\n        <!-- <div style=\\\"margin-left: 30%\\\">\\r\\n            <button mat-raised-button color=\\\"primary\\\" routerLink=\\\"/sias-v2/extSystem\\\"\\r\\n            *ngIf=\\\"!editFunction && roleCodes.new\\\">{{roleCodes.new.labelDescription}}</button>&nbsp;\\r\\n          <button mat-raised-button color=\\\"primary\\\" #updateBtn *ngIf=\\\"editFunction\\\"\\r\\n            (click)=\\\"modifyExt(modifyRoleObject)\\\" [disabled]=\\\"!fn.form.valid\\\">Submit</button>&nbsp;\\r\\n          <button mat-raised-button color=\\\"warn\\\" [routerLink]=\\\"'/sias-v2/ExtSysList'\\\">Exit</button>&nbsp;\\r\\n          <button mat-raised-button color=\\\"primary\\\" (click)=\\\"changeStatus()\\\"\\r\\n            *ngIf=\\\"poovar && roleCodes.edit\\\">{{roleCodes.edit.labelDescription}}</button>&nbsp; -->\\r\\n          <!-- <button type=\\\"submit\\\" mat-raised-button color=\\\"primary\\\" *ngIf=\\\"!editFunction && roleCodes.auth\\\"\\r\\n            (click)=\\\"onClickOfAuth(modifyRoleObject)\\\">{{roleCodes.auth.labelDescription}}</button>&nbsp; -->\\r\\n            <!-- <button type=\\\"submit\\\" mat-raised-button color=\\\"primary\\\" *ngIf=\\\"!editFunction && roleCodes.auth &&  modifyRoleObject.authStatus=='UNAUTHORIZED'\\\"\\r\\n            (click)=\\\"onClickOfAuth(modifyRoleObject)\\\">{{roleCodes.auth.labelDescription}}</button>&nbsp;\\r\\n            <button type=\\\"button\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"onClickOfClose()\\\"\\r\\n            *ngIf=\\\"modifyRoleObject.recordStatus =='OPEN' && !editFunction && roleCodes.close\\\">{{roleCodes.close.labelDescription}}</button>&nbsp;\\r\\n          <button type=\\\"button\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"onClickOfReOpen(modifyRoleObject)\\\"\\r\\n            *ngIf=\\\"modifyRoleObject.recordStatus =='CLOSED' && !editFunction && roleCodes.reopen\\\">{{roleCodes.reopen.labelDescription}}</button>&nbsp;\\r\\n        </div> -->\\r\\n\\r\\n<!-- BUTTONS AlIGNMENT AND DELETE BUTTON ADDE BY VIDYA FOR ISSUE 583 -->\\r\\n        <div style=\\\"margin-left: 30%\\\">\\r\\n          <button mat-raised-button color=\\\"primary\\\" routerLink=\\\"/sias-v2/extSystem\\\"\\r\\n          *ngIf=\\\"!editFunction && roleCodes.new\\\">{{roleCodes.new.labelDescription}}</button>&nbsp;\\r\\n        <button mat-raised-button color=\\\"primary\\\" #updateBtn *ngIf=\\\"editFunction\\\"\\r\\n          (click)=\\\"modifyExt(modifyRoleObject)\\\" [disabled]=\\\"!fn.form.valid ||enableSubmit || !space\\\">Submit</button>&nbsp;\\r\\n        \\r\\n        <button mat-raised-button color=\\\"primary\\\" (click)=\\\"changeStatus()\\\"\\r\\n          *ngIf=\\\"poovar && roleCodes.edit &&  modifyRoleObject.recordStatus=='OPEN'\\\">{{roleCodes.edit.labelDescription}}</button>&nbsp;\\r\\n        <!-- <button type=\\\"submit\\\" mat-raised-button color=\\\"primary\\\" *ngIf=\\\"!editFunction && roleCodes.auth\\\"\\r\\n          (click)=\\\"onClickOfAuth(modifyRoleObject)\\\">{{roleCodes.auth.labelDescription}}</button>&nbsp; -->\\r\\n        \\r\\n          <button type=\\\"submit\\\" mat-raised-button color=\\\"primary\\\" *ngIf=\\\"!editFunction && roleCodes.auth &&  modifyRoleObject.authStatus=='UNAUTHORIZED'\\\"\\r\\n          (click)=\\\"onClickOfAuth(modifyRoleObject)\\\">{{roleCodes.auth.labelDescription}}</button>&nbsp;\\r\\n        \\r\\n          <button type=\\\"button\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"onClickOfClose()\\\"\\r\\n          *ngIf=\\\"modifyRoleObject.recordStatus =='OPEN' && modifyRoleObject.verifiedOnce=='YES' && !editFunction && roleCodes.close \\\">{{roleCodes.close.labelDescription}}</button>&nbsp;\\r\\n        \\r\\n          <button type=\\\"button\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"onClickOfReOpen(modifyRoleObject)\\\"\\r\\n          *ngIf=\\\"modifyRoleObject.recordStatus =='CLOSED' && !editFunction && roleCodes.reopen &&modifyRoleObject.authStatus=='AUTHORIZED'\\\">{{roleCodes.reopen.labelDescription}}</button>&nbsp;\\r\\n\\r\\n          <button type=\\\"button\\\" mat-raised-button color=\\\"warn\\\" (click)=\\\"onDeleteOfProcessCodeMapping(modifyRoleObject)\\\"\\r\\n        *ngIf=\\\" !editFunction && roleCodes.delete && modifyRoleObject.verifiedOnce =='NO'\\\"\\r\\n        >{{roleCodes.delete.labelDescription}}</button>&nbsp; \\r\\n\\r\\n          <button mat-raised-button color=\\\"warn\\\" [routerLink]=\\\"'/sias-v2/ExtSysList'\\\">Exit</button>&nbsp;\\r\\n      </div>\\r\\n      </div>\\r\\n    </mat-card>\\r\\n  </form>\\r\\n<!-- <form #fn=\\\"ngForm\\\" novalidate>\\r\\n  <mat-card>\\r\\n  <div fxLayout=\\\"row wrap\\\">\\r\\n    <div fxFlex=\\\"100\\\">\\r\\n      <div fxFlex=\\\"60\\\">\\r\\n        <div fxFlex=\\\"50\\\">\\r\\n            <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\">\\r\\n                <mat-label>External System Code</mat-label>\\r\\n                <input matInput type=\\\"text\\\" [(ngModel)]=\\\"modifyRoleObject.extSysCode\\\" name=\\\"extSysCode\\\" readonly>\\r\\n              </mat-form-field>\\r\\n           <div>\\r\\n              <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\">\\r\\n                  <mat-label>Process code</mat-label>\\r\\n                  <input matInput type=\\\"text\\\" #pcode [(ngModel)]=\\\"modifyRoleObject.processCode\\\" name=\\\"processCode\\\"\\r\\n                    [readonly]=\\\"!editFunction\\\">\\r\\n                </mat-form-field>\\r\\n           </div>\\r\\n           <div><mat-checkbox (change)=\\\"treasuryRequired($event)\\\" \\r\\n            [checked]=\\\"modifyRoleObject.treasuryrefRequired\\\"\\r\\n[disabled]=\\\"!editFunction\\\">Treasury Reference Required</mat-checkbox></div>\\r\\n           <div>\\r\\n              <mat-checkbox (change)=\\\"checkCheckBoxvalueUpload($event)\\\" name=\\\"autoUpload\\\"\\r\\n              [(ngModel)]=\\\"modifyRoleObject.autoUpload\\\" [disabled]=\\\"!editFunction\\\">Auto Upload</mat-checkbox>\\r\\n           </div>\\r\\n           <br><br><br>\\r\\n           <div>\\r\\n              <mat-checkbox (change)=\\\"checkCheckBoxvalueBDA($event)\\\" name=\\\"backDateAllow\\\"\\r\\n            [checked]=\\\"modifyRoleObject.backDateAllow\\\" [disabled]=\\\"!editFunction\\\">Back Dating</mat-checkbox>\\r\\n                     \\r\\n           </div>\\r\\n           <br>\\r\\n           <div>\\r\\n              <mat-checkbox (change)=getValue($event) name=\\\"futureDateAllow\\\" [checked]=\\\"modifyRoleObject.futureDateAllow\\\" \\r\\n              [disabled]=\\\"!editFunction\\\">Future Dating</mat-checkbox>\\r\\n           </div>\\r\\n           <br>\\r\\n           <div>\\r\\n              <mat-checkbox (change)=getValueOfFCYrateVariance($event) name=\\\"fCYRateVariance\\\" \\r\\n              [checked]=\\\"modifyRoleObject.fCYRateVariance\\\" [disabled]=\\\"!editFunction\\\"  >FCY Exchange Rate Variance percentage</mat-checkbox>\\r\\n           </div>\\r\\n           <mat-checkbox (change)=getValue2($event) name=\\\"acft\\\" [checked]=\\\"modifyRoleObject.acft\\\"\\r\\n           [disabled]=\\\"!editFunction\\\">\\r\\n           Cross Financial Transaction.</mat-checkbox>\\r\\n         \\r\\n          \\r\\n           <mat-checkbox (change)=getValueMfI($event) [checked]=\\\"modifyRoleObject.mandatoryFieldImposed\\\"\\r\\n[disabled]=\\\"!editFunction\\\">Mandatory Field\\r\\nImpose</mat-checkbox>\\r\\n           <mat-checkbox (change)=getValueSftp($event) [checked]=\\\"modifyRoleObject.sftpRequired\\\"\\r\\n           [disabled]=\\\"!editFunction\\\">SFTP Required\\r\\n         </mat-checkbox>\\r\\n        </div>\\r\\n        <div fxFlex=\\\"35\\\">\\r\\n            <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\">\\r\\n                <mat-label>External system name</mat-label>\\r\\n                <input matInput type=\\\"text\\\" [(ngModel)]=\\\"modifyRoleObject.extSysName\\\" name=\\\"extSysName\\\" #extSysName=\\\"ngModel\\\"\\r\\n                  readonly required>\\r\\n              </mat-form-field>\\r\\n           \\r\\n            <div>\\r\\n                <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\">\\r\\n                    <mat-label>Maximum Upload Limit</mat-label>\\r\\n                    <input matInput type=\\\"number\\\" #maxUpload [(ngModel)]=\\\"modifyRoleObject.maxUploadLimit\\\" name=\\\"maxUploadLimit\\\"\\r\\n                      [readonly]=\\\"!editFunction\\\">\\r\\n                  </mat-form-field>\\r\\n              </div>\\r\\n              <br>\\r\\n              <div>\\r\\n                  <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\">\\r\\n                      <mat-label>File Name</mat-label>\\r\\n                      <input matInput type=\\\"text\\\" #fileName [(ngModel)]=\\\"modifyRoleObject.fileName\\\" name=\\\"fileName\\\" required [readonly]=\\\"!editFunction\\\">\\r\\n                    </mat-form-field>\\r\\n                   \\r\\n              </div>\\r\\n              \\r\\n              <div>\\r\\n                  <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\">\\r\\n                      <mat-label>Back Dating</mat-label>\\r\\n                      <input matInput type=\\\"text\\\" [(ngModel)]=\\\"modifyRoleObject.bdav\\\" name=\\\"bdav\\\" [readonly]=\\\"!editFunction\\\"\\r\\n                        required >\\r\\n                    </mat-form-field>\\r\\n              </div>\\r\\n              <div>\\r\\n                  <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\" >\\r\\n                      <mat-label>Future Dating</mat-label>\\r\\n                      <input matInput type=\\\"text\\\" [(ngModel)]=\\\"modifyRoleObject.fdav\\\" name=\\\"fdav\\\" [readonly]=\\\"!editFunction\\\"\\r\\n                        required>\\r\\n                    </mat-form-field>\\r\\n              </div>\\r\\n              <div>\\r\\n                  <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\" >\\r\\n                      <mat-label>FCY Exchange Rate Variance percentage</mat-label>\\r\\n                      <input matInput type=\\\"number\\\" [(ngModel)]=\\\"modifyRoleObject.fCYPercentage\\\" name=\\\"fCYPercentage\\\"\\r\\n                        [readonly]=\\\"!editFunction\\\" required>\\r\\n                    </mat-form-field>\\r\\n              </div>\\r\\n        </div>\\r\\n       \\r\\n        \\r\\n      </div>\\r\\n      <div fxFlex=\\\"20\\\" fxFlexAlign=\\\"start\\\">\\r\\n        <span style=\\\"margin-left: 25%\\\">SFTP Details</span> \\r\\n          <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\">\\r\\n              <mat-label>Username</mat-label>\\r\\n              <input matInput type=\\\"text\\\" placeholder=\\\"Username\\\" [(ngModel)]=\\\"modifyRoleObject.sftpUsername\\\"\\r\\n                name=\\\"sftpUsername\\\" required>\\r\\n            </mat-form-field>\\r\\n            <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\">\\r\\n                <mat-label>Password</mat-label>\\r\\n                <input matInput type=\\\"text\\\" placeholder=\\\"Password\\\" [(ngModel)]=\\\"modifyRoleObject.sftpPassword\\\"\\r\\n                  name=\\\"sftpPassword\\\" required>\\r\\n              </mat-form-field>\\r\\n              <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\">\\r\\n                  <mat-label>IPaddress</mat-label>\\r\\n                  <input matInput type=\\\"text\\\" [(ngModel)]=\\\"modifyRoleObject.sftpIpaddress\\\" placeholder=\\\"IPaddress\\\"\\r\\n                    name=\\\"sftpIpaddress\\\" required>\\r\\n                </mat-form-field>\\r\\n                <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\">\\r\\n                    <mat-label>Port</mat-label>\\r\\n                    <input matInput type=\\\"text\\\" [(ngModel)]=\\\"modifyRoleObject.sftpPort\\\" name=\\\"sftpPort\\\" placeholder=\\\"Port\\\"\\r\\n                      required>\\r\\n                  </mat-form-field>\\r\\n                  <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\">\\r\\n                      <mat-label>Path</mat-label>\\r\\n                      <input matInput type=\\\"text\\\" [(ngModel)]=\\\"modifyRoleObject.sftpPath\\\" name=\\\"path\\\" placeholder=\\\"Path\\\" required>\\r\\n                    </mat-form-field>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n  <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" fxLayoutGap=\\\"10px\\\" >\\r\\n      <button mat-raised-button color=\\\"primary\\\" routerLink=\\\"/sias-v2/extSystem\\\"\\r\\n      *ngIf=\\\"!editFunction && roleCodes.new\\\">{{roleCodes.new.labelDescription}}</button>\\r\\n    <button mat-raised-button color=\\\"primary\\\" #updateBtn *ngIf=\\\"editFunction\\\"\\r\\n      (click)=\\\"modifyExt(modifyRoleObject)\\\">Submit</button>\\r\\n    <button mat-raised-button color=\\\"warn\\\" [routerLink]=\\\"'/sias-v2/ExtSysList'\\\">Exit</button>\\r\\n    <button mat-raised-button color=\\\"primary\\\" (click)=\\\"changeStatus()\\\"\\r\\n      *ngIf=\\\"poovar && roleCodes.edit\\\">{{roleCodes.edit.labelDescription}}</button>\\r\\n    <button type=\\\"submit\\\" mat-raised-button color=\\\"primary\\\" *ngIf=\\\"!editFunction && roleCodes.auth\\\"\\r\\n      (click)=\\\"onClickOfAuth(modifyRoleObject)\\\">{{roleCodes.auth.labelDescription}}</button>\\r\\n      <button type=\\\"button\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"onClickOfClose()\\\"\\r\\n      *ngIf=\\\"modifyRoleObject.recordStatus =='OPEN' && !editFunction && roleCodes.close\\\">{{roleCodes.close.labelDescription}}</button>\\r\\n    <button type=\\\"button\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"onClickOfReOpen(modifyRoleObject)\\\"\\r\\n      *ngIf=\\\"modifyRoleObject.recordStatus =='CLOSED' && !editFunction && roleCodes.reopen\\\">{{roleCodes.reopen.labelDescription}}</button>\\r\\n  </div>\\r\\n</mat-card>\\r\\n</form> -->\\r\\n<!-- <form #fn=\\\"ngForm\\\" novalidate>\\r\\n    <mat-card >\\r\\n      \\r\\n      <div fxLayout=\\\"row wrap\\\">\\r\\n        <div fxFlex=\\\"20\\\"></div>\\r\\n        <div fxFlex=\\\"100\\\">\\r\\n          <div fxFlex=\\\"30\\\">\\r\\n              <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\">\\r\\n                  <mat-label>External System Code</mat-label>\\r\\n                  <input matInput type=\\\"text\\\" [(ngModel)]=\\\"modifyRoleObject.extSysCode\\\" name=\\\"extSysCode\\\" readonly>\\r\\n                </mat-form-field>\\r\\n               \\r\\n          </div>\\r\\n          <div fxFlex=\\\"30\\\">\\r\\n            \\r\\n          <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\">\\r\\n              <mat-label>External system name</mat-label>\\r\\n              <input matInput type=\\\"text\\\" [(ngModel)]=\\\"modifyRoleObject.extSysName\\\" name=\\\"extSysName\\\" #extSysName=\\\"ngModel\\\"\\r\\n                readonly required>\\r\\n            </mat-form-field>\\r\\n            \\r\\n\\r\\n          </div>\\r\\n          <div fxFlex=\\\"10\\\" *ngIf=\\\"is_sftp\\\">SFTP Details\\r\\n              \\r\\n          </div>\\r\\n\\r\\n        </div>\\r\\n\\r\\n      </div>\\r\\n      <div fxLayout=\\\"row wrap\\\">\\r\\n          <div fxFlex=\\\"20\\\"></div>\\r\\n          <div fxFlex=\\\"100\\\">\\r\\n            <div fxFlex=\\\"30\\\">\\r\\n                <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\">\\r\\n                    <mat-label>Process code</mat-label>\\r\\n                    <input matInput type=\\\"text\\\" #pcode [(ngModel)]=\\\"modifyRoleObject.processCode\\\" name=\\\"processCode\\\"\\r\\n                      [readonly]=\\\"!editFunction\\\">\\r\\n                  </mat-form-field>\\r\\n                 \\r\\n            </div>\\r\\n            <div fxFlex=\\\"30\\\">\\r\\n              \\r\\n                <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\">\\r\\n                    <mat-label>Maximum Upload Limit</mat-label>\\r\\n                    <input matInput type=\\\"number\\\" #maxUpload [(ngModel)]=\\\"modifyRoleObject.maxUploadLimit\\\" name=\\\"maxUploadLimit\\\"\\r\\n                      [readonly]=\\\"!editFunction\\\">\\r\\n                  </mat-form-field>\\r\\n              \\r\\n\\r\\n            </div>\\r\\n            <div fxFlex=\\\"10\\\" *ngIf=\\\"is_sftp\\\">\\r\\n                <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\">\\r\\n                    <mat-label>UserName</mat-label>\\r\\n                    <input matInput type=\\\"text\\\" placeholder=\\\"UserName\\\" [(ngModel)]=\\\"modifyRoleObject.sftpUsername\\\"\\r\\n                      name=\\\"sftpUsername\\\" required [readonly]=\\\"!editFunction\\\">\\r\\n                  </mat-form-field>\\r\\n          \\r\\n            </div>\\r\\n  \\r\\n          </div>\\r\\n  \\r\\n        </div>          \\r\\n        <div fxLayout=\\\"row wrap\\\">\\r\\n            <div fxFlex=\\\"20\\\"></div>\\r\\n            <div fxFlex=\\\"100\\\">\\r\\n              <div fxFlex=\\\"30\\\">\\r\\n                  <mat-checkbox (change)=\\\"checkCheckBoxvalueUpload($event)\\\" name=\\\"autoUpload\\\"\\r\\n                  [(ngModel)]=\\\"modifyRoleObject.autoUpload\\\" [disabled]=\\\"!editFunction\\\">Auto Upload</mat-checkbox>\\r\\n                   \\r\\n              </div>\\r\\n              <div fxFlex=\\\"30\\\">\\r\\n                  <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\">\\r\\n                      <mat-label>File Name</mat-label>\\r\\n                      <input matInput type=\\\"text\\\" #fileName [(ngModel)]=\\\"modifyRoleObject.fileName\\\" name=\\\"fileName\\\" required [readonly]=\\\"!editFunction\\\">\\r\\n                    </mat-form-field>\\r\\n                    <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\" *ngIf=\\\"enablefilebrowser\\\">\\r\\n                      <mat-label>File Path</mat-label>\\r\\n                      <input matInput type=\\\"text\\\" #filePath [(ngModel)]=\\\"modifyRoleObject.filePath\\\" name=\\\"filePath\\\" required [readonly]=\\\"!editFunction\\\">\\r\\n                    </mat-form-field>\\r\\n                \\r\\n  \\r\\n              </div>\\r\\n              <div fxFlex=\\\"10\\\" *ngIf=\\\"is_sftp\\\">\\r\\n                  <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\">\\r\\n                      <mat-label>Password</mat-label>\\r\\n                      <input matInput type=\\\"text\\\" placeholder=\\\"Password\\\" [(ngModel)]=\\\"modifyRoleObject.sftpPassword\\\"\\r\\n                        name=\\\"sftpPassword\\\" required [readonly]=\\\"!editFunction\\\">\\r\\n                    </mat-form-field>\\r\\n              </div>\\r\\n    \\r\\n            </div>\\r\\n    \\r\\n          </div>\\r\\n          <div fxLayout=\\\"row wrap\\\">\\r\\n              <div fxFlex=\\\"20\\\"></div>\\r\\n              <div fxFlex=\\\"100\\\">\\r\\n                <div fxFlex=\\\"30\\\">\\r\\n                    <mat-checkbox (change)=\\\"checkCheckBoxvalueBDA($event)\\\" name=\\\"backDateAllow\\\"\\r\\n            [checked]=\\\"modifyRoleObject.backDateAllow\\\" [disabled]=\\\"!editFunction\\\">Back Dated Allow</mat-checkbox>\\r\\n                     \\r\\n                </div>\\r\\n                <div fxFlex=\\\"30\\\">\\r\\n                  \\r\\n                    <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\">\\r\\n                        <mat-label>Back Dated Allow Value</mat-label>\\r\\n                        <input matInput type=\\\"text\\\" [(ngModel)]=\\\"modifyRoleObject.bdav\\\" name=\\\"bdav\\\" [readonly]=\\\"!editFunction\\\"\\r\\n                          required >\\r\\n                      </mat-form-field>\\r\\n                  \\r\\n    \\r\\n                </div>\\r\\n                <div fxFlex=\\\"10\\\" *ngIf=\\\"is_sftp\\\">\\r\\n                    <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\">\\r\\n                        <mat-label>Port</mat-label>\\r\\n                        <input matInput type=\\\"text\\\" [(ngModel)]=\\\"modifyRoleObject.sftpPort\\\" name=\\\"sftpPort\\\" placeholder=\\\"Port\\\"\\r\\n                          required [readonly]=\\\"!editFunction\\\">\\r\\n                      </mat-form-field>\\r\\n                </div>\\r\\n      \\r\\n              </div>\\r\\n      \\r\\n            </div>\\r\\n            <div fxLayout=\\\"row wrap\\\">\\r\\n                <div fxFlex=\\\"20\\\"></div>\\r\\n                <div fxFlex=\\\"100\\\">\\r\\n                  <div fxFlex=\\\"30\\\">\\r\\n                      <mat-checkbox (change)=getValue($event) name=\\\"futureDateAllow\\\" [checked]=\\\"modifyRoleObject.futureDateAllow\\\" \\r\\n                      [disabled]=\\\"!editFunction\\\">Future Dating</mat-checkbox>\\r\\n                       \\r\\n                  </div>\\r\\n                  <div fxFlex=\\\"30\\\">\\r\\n                    \\r\\n                      <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\" >\\r\\n                          <mat-label>Future Date Allow Value</mat-label>\\r\\n                          <input matInput type=\\\"text\\\" [(ngModel)]=\\\"modifyRoleObject.fdav\\\" name=\\\"fdav\\\" [readonly]=\\\"!editFunction\\\"\\r\\n                            required>\\r\\n                        </mat-form-field>\\r\\n                    \\r\\n      \\r\\n                  </div>\\r\\n                  <div fxFlex=\\\"10\\\" *ngIf=\\\"is_sftp\\\"> \\r\\n                      <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\">\\r\\n                          <mat-label>IpAddress</mat-label>\\r\\n                          <input matInput type=\\\"text\\\" [(ngModel)]=\\\"modifyRoleObject.sftpIpaddress\\\" placeholder=\\\"IP Address\\\"\\r\\n                            name=\\\"sftpIpaddress\\\" required [readonly]=\\\"!editFunction\\\">\\r\\n                        </mat-form-field>\\r\\n                  </div>\\r\\n        \\r\\n                </div>\\r\\n        \\r\\n              </div>\\r\\n              <div fxLayout=\\\"row wrap\\\">\\r\\n                  <div fxFlex=\\\"20\\\"></div>\\r\\n                  <div fxFlex=\\\"100\\\">\\r\\n                    <div fxFlex=\\\"30\\\">\\r\\n                        <mat-checkbox (change)=getValueOfFCYrateVariance($event) name=\\\"fCYRateVariance\\\" \\r\\n                        [checked]=\\\"modifyRoleObject.fCYRateVariance\\\" [disabled]=\\\"!editFunction\\\"  >FCY Exchange Rate Variance percentage</mat-checkbox>\\r\\n\\r\\n\\r\\n\\r\\n                         \\r\\n                    </div>\\r\\n                    <div fxFlex=\\\"30\\\">\\r\\n                        <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\" >\\r\\n                            <mat-label>FCY Exchange Rate Variance percentage</mat-label>\\r\\n                            <input matInput type=\\\"number\\\" [(ngModel)]=\\\"modifyRoleObject.fCYPercentage\\\" name=\\\"fCYPercentage\\\"\\r\\n                              [readonly]=\\\"!editFunction\\\" required>\\r\\n                          </mat-form-field>\\r\\n        \\r\\n                    </div>\\r\\n                    <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\">\\r\\n                        <mat-label>Path</mat-label>\\r\\n                        <input matInput type=\\\"text\\\" [(ngModel)]=\\\"modifyRoleObject.sftpPath\\\" name=\\\"path\\\" placeholder=\\\"Path\\\" required>\\r\\n                      </mat-form-field>\\r\\n          \\r\\n                  </div>\\r\\n          \\r\\n                </div>\\r\\n                <div fxLayout=\\\"row wrap\\\">\\r\\n                    <div fxFlex=\\\"20\\\"></div>\\r\\n                    <div fxFlex=\\\"100\\\">\\r\\n                      <div fxFlex=\\\"30\\\">\\r\\n                         \\r\\n                          <mat-checkbox (change)=getValue2($event) name=\\\"acft\\\" [checked]=\\\"modifyRoleObject.acft\\\"\\r\\n                          [disabled]=\\\"!editFunction\\\">\\r\\n                          Cross Financial Transaction.</mat-checkbox>\\r\\n                          <mat-checkbox (change)=\\\"treasuryRequired($event)\\\" \\r\\n                          [checked]=\\\"modifyRoleObject.treasuryrefRequired\\\"\\r\\n            [disabled]=\\\"!editFunction\\\">Treasury Reference Required</mat-checkbox>\\r\\n                         \\r\\n                          <mat-checkbox (change)=getValueMfI($event) [checked]=\\\"modifyRoleObject.mandatoryFieldImposed\\\"\\r\\n            [disabled]=\\\"!editFunction\\\">Mandatory Field\\r\\n            Impose</mat-checkbox>\\r\\n                          <mat-checkbox (change)=getValueSftp($event) [checked]=\\\"modifyRoleObject.sftpRequired\\\"\\r\\n                          [disabled]=\\\"!editFunction\\\">SFTP Required\\r\\n                        </mat-checkbox>\\r\\n                      </div>\\r\\n                      <div fxFlex=\\\"30\\\">\\r\\n                        \\r\\n                        \\r\\n                        \\r\\n          \\r\\n                      </div>\\r\\n                      <div fxFlex=\\\"10\\\">\\r\\n                         \\r\\n                      </div>\\r\\n            \\r\\n                    </div>\\r\\n            \\r\\n                  </div>\\r\\n                 \\r\\n\\r\\n    </mat-card>\\r\\n    \\r\\n  </form> -->\\r\\n<!-- <form #fn=\\\"ngForm\\\" novalidate>\\r\\n  <mat-card style=\\\"text-align: center;width: 75%;margin-left: 15%\\\">\\r\\n    <div fxLayout=\\\"column\\\">\\r\\n\\r\\n      <div fxFlex=\\\"100\\\">\\r\\n      \\r\\n        <div>\\r\\n          <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\">\\r\\n            <mat-label>External System Code</mat-label>\\r\\n            <input matInput type=\\\"text\\\" [(ngModel)]=\\\"modifyRoleObject.extSysCode\\\" name=\\\"extSysCode\\\" readonly>\\r\\n          </mat-form-field>\\r\\n          <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\">\\r\\n            <mat-label>External System Code</mat-label>\\r\\n            <input matInput type=\\\"text\\\" [(ngModel)]=\\\"modifyRoleObject.extSysCode\\\" name=\\\"extSysCode\\\" readonly>\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n        <div>\\r\\n          <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\">\\r\\n            <mat-label>Process code</mat-label>\\r\\n            <input matInput type=\\\"text\\\" #pcode [(ngModel)]=\\\"modifyRoleObject.processCode\\\" name=\\\"processCode\\\"\\r\\n              [disabled]=\\\"!editFunction\\\">\\r\\n          </mat-form-field>\\r\\n          <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\">\\r\\n            <mat-label>Maximum Upload Limit</mat-label>\\r\\n            <input matInput type=\\\"number\\\" #maxUpload [(ngModel)]=\\\"modifyRoleObject.maxUploadLimit\\\" name=\\\"maxUploadLimit\\\"\\r\\n              [disabled]=\\\"!editFunction\\\">\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n        <div>\\r\\n            <mat-checkbox (change)=\\\"treasuryRequired($event)\\\" name=\\\"treasuryRef\\\" style=\\\"margin-right: 29.5%\\\"\\r\\n            [(ngModel)]=\\\"modifyRoleObject.treasuryrefRequired\\\" [disabled]=\\\"!editFunction\\\">Treasury Reference Required</mat-checkbox>\\r\\n        </div>\\r\\n        <div>\\r\\n          <mat-checkbox (change)=\\\"checkCheckBoxvalueUpload($event)\\\" name=\\\"autoUpload\\\"style=\\\"margin-right: 14%\\\"\\r\\n            [(ngModel)]=\\\"modifyRoleObject.autoUpload\\\" [disabled]=\\\"!editFunction\\\">Auto Upload</mat-checkbox>\\r\\n          <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\">\\r\\n            <mat-label>File Name</mat-label>\\r\\n            <input matInput type=\\\"text\\\" #fileName [(ngModel)]=\\\"modifyRoleObject.fileName\\\" name=\\\"fileName\\\" required>\\r\\n          </mat-form-field>\\r\\n          <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\" *ngIf=\\\"enablefilebrowser\\\" style=\\\"margin-left: 37%\\\">\\r\\n            <mat-label>File Path</mat-label>\\r\\n            <input matInput type=\\\"text\\\" #filePath [(ngModel)]=\\\"modifyRoleObject.filePath\\\" name=\\\"filePath\\\" required>\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n        <div>\\r\\n          <mat-checkbox (change)=\\\"checkCheckBoxvalueBDA($event)\\\" name=\\\"backDateAllow\\\" style=\\\"margin-right: 6%\\\"\\r\\n            [checked]=\\\"modifyRoleObject.backDateAllow\\\" [disabled]=\\\"!editFunction\\\">Back Dated Allow</mat-checkbox>\\r\\n          <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\" style=\\\"margin-left: 20px\\\">\\r\\n            <mat-label>Back Dated Allow Value</mat-label>\\r\\n            <input matInput type=\\\"text\\\" [(ngModel)]=\\\"modifyRoleObject.bdav\\\" name=\\\"bdav\\\" [disabled]=\\\"!editFunction\\\"\\r\\n              required>\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n        <div>\\r\\n          <mat-checkbox (change)=getValue($event) name=\\\"futureDateAllow\\\" [checked]=\\\"modifyRoleObject.futureDateAllow\\\" style=\\\"margin-right: 6%\\\"\\r\\n            [disabled]=\\\"!editFunction\\\">Future Date Allow</mat-checkbox>\\r\\n          <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\" style=\\\"margin-left: 20px\\\">\\r\\n            <mat-label>Future Date Allow Value</mat-label>\\r\\n            <input matInput type=\\\"text\\\" [(ngModel)]=\\\"modifyRoleObject.fdav\\\" name=\\\"fdav\\\" [disabled]=\\\"!editFunction\\\"\\r\\n              required>\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n        <div>\\r\\n          <mat-checkbox (change)=getValueOfFCYrateVariance($event) name=\\\"fCYRateVariance\\\" style=\\\"margin-right: 16%\\\"\\r\\n            [checked]=\\\"modifyRoleObject.fCYRateVariance\\\" [disabled]=\\\"!editFunction\\\"  >FCY Exchange Rate Variance percentage</mat-checkbox>\\r\\n        <div>\\r\\n            <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\" >\\r\\n            <mat-label>FCY Exchange Rate Variance percentage</mat-label>\\r\\n            <input matInput type=\\\"number\\\" [(ngModel)]=\\\"modifyRoleObject.fCYPercentage\\\" name=\\\"fCYPercentage\\\"\\r\\n              [disabled]=\\\"!editFunction\\\" required>\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n        </div>\\r\\n        <div>\\r\\n          <mat-checkbox (change)=getValue2($event) name=\\\"acft\\\" [checked]=\\\"modifyRoleObject.acft\\\"\\r\\n            [disabled]=\\\"!editFunction\\\">Allowing\\r\\n            cross financial transaction.</mat-checkbox>\\r\\n          <mat-checkbox (change)=getValueSftp($event) [checked]=\\\"modifyRoleObject.sftpRequired\\\"\\r\\n            [disabled]=\\\"!editFunction\\\">SFTP Required\\r\\n          </mat-checkbox>\\r\\n          <mat-checkbox (change)=getValueMfI($event) [checked]=\\\"modifyRoleObject.mandatoryFieldImposed\\\"\\r\\n            [disabled]=\\\"!editFunction\\\">Mandatory Field\\r\\n            Impose</mat-checkbox>\\r\\n        </div>\\r\\n       \\r\\n      </div>\\r\\n    </div>\\r\\n    <div fxFlex=\\\"5\\\"></div>\\r\\n    <div fxFlex=\\\"25\\\" *ngIf=\\\"is_sftp\\\">\\r\\n      \\r\\n      <span>SFTP Details</span>\\r\\n      \\r\\n\\r\\n      \\r\\n      <div>\\r\\n\\r\\n        <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\">\\r\\n          <mat-label>UserName</mat-label>\\r\\n          <input matInput type=\\\"text\\\" placeholder=\\\"UserName\\\" [(ngModel)]=\\\"modifyRoleObject.sftpUsername\\\"\\r\\n            name=\\\"sftpUsername\\\" required>\\r\\n        </mat-form-field>\\r\\n\\r\\n      </div>\\r\\n      <div>\\r\\n        <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\">\\r\\n          <mat-label>Password</mat-label>\\r\\n          <input matInput type=\\\"text\\\" placeholder=\\\"Password\\\" [(ngModel)]=\\\"modifyRoleObject.sftpPassword\\\"\\r\\n            name=\\\"sftpPassword\\\" required>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div>\\r\\n        <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\">\\r\\n          <mat-label>IpAddress</mat-label>\\r\\n          <input matInput type=\\\"text\\\" [(ngModel)]=\\\"modifyRoleObject.sftpIpaddress\\\" placeholder=\\\"IP Address\\\"\\r\\n            name=\\\"sftpIpaddress\\\" required>\\r\\n        </mat-form-field>\\r\\n\\r\\n      </div>\\r\\n      <div>\\r\\n        <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\">\\r\\n          <mat-label>Port</mat-label>\\r\\n          <input matInput type=\\\"text\\\" [(ngModel)]=\\\"modifyRoleObject.sftpPort\\\" name=\\\"sftpPort\\\" placeholder=\\\"Port\\\"\\r\\n            required>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div>\\r\\n        <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\">\\r\\n          <mat-label>Path</mat-label>\\r\\n          <input matInput type=\\\"text\\\" [(ngModel)]=\\\"modifyRoleObject.sftpPath\\\" name=\\\"path\\\" placeholder=\\\"Path\\\" required>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n     \\r\\n\\r\\n     \\r\\n    </div>\\r\\n\\r\\n  </mat-card>\\r\\n  <br>\\r\\n  <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" fxLayoutGap=\\\"10px\\\" class=\\\"mt-12\\\">\\r\\n    <button mat-raised-button color=\\\"primary\\\" routerLink=\\\"/sias-v2/extSystem\\\"\\r\\n      *ngIf=\\\"!editFunction && roleCodes.new\\\">{{roleCodes.new.labelDescription}}</button>\\r\\n    <button mat-raised-button color=\\\"primary\\\" #updateBtn *ngIf=\\\"editFunction\\\"\\r\\n      (click)=\\\"modifyExt(modifyRoleObject)\\\">Submit</button>\\r\\n    <button mat-raised-button color=\\\"warn\\\" [routerLink]=\\\"'/sias-v2/ExtSysList'\\\">Exit</button>\\r\\n    <button mat-raised-button color=\\\"primary\\\" (click)=\\\"changeStatus()\\\"\\r\\n      *ngIf=\\\"poovar && roleCodes.edit\\\">{{roleCodes.edit.labelDescription}}</button>\\r\\n    <button type=\\\"submit\\\" mat-raised-button color=\\\"primary\\\" *ngIf=\\\"!editFunction && roleCodes.auth\\\"\\r\\n      (click)=\\\"onClickOfAuth(modifyRoleObject)\\\">{{roleCodes.auth.labelDescription}}</button>\\r\\n    <!-- <button type=\\\"button\\\" mat-raised-button color=\\\"red\\\" *ngIf=\\\"this.button_permission.deletebutton=='T'\\\"\\r\\n              (clcik)=\\\"onClcikOfDelete()\\\">Delete</button> -->\\r\\n    <!-- <button type=\\\"button\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"onClickOfClose()\\\"\\r\\n      *ngIf=\\\"modifyRoleObject.recordStatus =='OPEN' && !editFunction && roleCodes.close\\\">{{roleCodes.close.labelDescription}}</button>\\r\\n    <button type=\\\"button\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"onClickOfReOpen(modifyRoleObject)\\\"\\r\\n      *ngIf=\\\"modifyRoleObject.recordStatus =='CLOSED' && !editFunction && roleCodes.reopen\\\">{{roleCodes.reopen.labelDescription}}</button>\\r\\n  </div>\\r\\n</form> --> \\r\\n\\r\\n\\r\\n<br>\\r\\n<div fxLayout=\\\"row\\\">\\r\\n  <div fxFlex></div>\\r\\n  <div fxFlex=\\\"95\\\">\\r\\n    <mat-card style=\\\"width: 70%;  margin-left:20%;\\\">\\r\\n   \\r\\n      <mat-card-content>\\r\\n        <div fxLayout=\\\"row\\\">\\r\\n\\r\\n          <table id=\\\"customers\\\">\\r\\n            <tr>\\r\\n              <th>Record Status:</th>\\r\\n              <td>\\r\\n                <mat-chip>{{modifyRoleObject.recordStatus }}</mat-chip>\\r\\n              </td>\\r\\n              <th>Auth Status:</th>\\r\\n              <td>\\r\\n\\r\\n                <mat-chip>{{modifyRoleObject.authStatus}}</mat-chip>\\r\\n                <!-- <mat-form-field appearance=\\\"fill\\\">\\r\\n                  <mat-label>Status</mat-label>\\r\\n                  <input matInput type=\\\"text\\\" placeholder=\\\"\\\" #exSys>\\r\\n                  <mat-icon matSuffix>person</mat-icon>\\r\\n                </mat-form-field> -->\\r\\n              </td>\\r\\n              <th>Created By:</th>\\r\\n              <td>\\r\\n                <mat-chip>{{modifyRoleObject.creatorId }}</mat-chip>\\r\\n              </td>\\r\\n              <th>Authorized By:</th>\\r\\n              <td>\\r\\n                <mat-chip>{{modifyRoleObject.verifierId}}</mat-chip>\\r\\n              </td>\\r\\n            </tr>\\r\\n            <tr>\\r\\n              <th>Modification No:</th>\\r\\n              <td>\\r\\n                <mat-chip>{{modifyRoleObject.versionNo}}</mat-chip>\\r\\n              </td>\\r\\n              <th>Creation Date:</th>\\r\\n              <td>\\r\\n                <mat-chip>{{modifyRoleObject.creatorDtStamp | date: 'MM/dd/yyyy, h:mm a'}}</mat-chip>\\r\\n              </td>\\r\\n              <th>Authorization Date:</th>\\r\\n              <td>\\r\\n                <mat-chip>{{modifyRoleObject.verifierDtStamp | date: 'MM/dd/yyyy, h:mm a'}}</mat-chip>\\r\\n              </td>\\r\\n               <!-- added by vidya  -->\\r\\n               <th>Firts Time Auth:</th>\\r\\n               <td>\\r\\n                 <mat-chip>{{modifyRoleObject.verifiedOnce}}</mat-chip>\\r\\n               </td>\\r\\n            </tr>\\r\\n          </table>\\r\\n        </div>\\r\\n      </mat-card-content>\\r\\n    </mat-card>\\r\\n  </div>\\r\\n  <div fxFlex></div>\\r\\n\\r\\n  <br><br><br><br><br><br><br><br>\"","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { AppConstants } from 'src/app/shared/config/app.constant';\r\nimport { Subject, Observable, BehaviorSubject } from 'rxjs';\r\n\r\n\r\n\r\nexport const API_URL = AppConstants.baseURL;\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AddSystemService {\r\n\r\n  \r\n  constructor(private http:HttpClient) { }\r\n  private subject = new Subject<any>();\r\n  // Post\r\n  submittingAddSystem(addSsytem,user)\r\n  {\r\n   return this.http.post<any>(`${API_URL}/newExtApi/create/${user}`,addSsytem);\r\n  }\r\n  //geting external System\r\n  fecthingAddSystem()\r\n  {\r\n    return this.http.get<any>(`${API_URL}/newExtApi/getAllExternalSys`);\r\n  }\r\n  //update\r\n  editaddsystem(operation,currentUser,addSsytem)\r\n  {\r\n    return this.http.put<any>(`${API_URL}/newExtApi/${operation}/${currentUser}`,addSsytem)\r\n  }\r\n  //fetching addsystem based on id\r\n\r\n    fetchingAddSysBasedonId(id)\r\n    {\r\n      return this.http.get<any>(`${API_URL}/newExtApi/getExternalSysDetails/${id}`)\r\n    }\r\n  // delete\r\n    deleteingAddSystem()\r\n    {\r\n      return this.http.delete<any>(`${API_URL}//`);\r\n    }\r\n    // sendingAddSystemDataToEditScreen\r\n    sendingAddSystemDataToEditScreen(params:any)\r\n    {\r\n      \r\n        this.subject.next(params);\r\n    }\r\n\r\n    editruleTranslation(operation,userIdLoggedIn,messageTranslationDto){\r\n      return this.http.put<any>(`${API_URL}/msgApi/${operation}/${userIdLoggedIn}`,messageTranslationDto)\r\n    }\r\n\r\n    deleteRuleTranslation(userIdLoggedIn,transId){\r\n      let transIddel=new HttpParams();\r\n      transId=transIddel.append('transId',transId);\r\n      console.log(\"tra\",transId);\r\n     \r\n      return this.http.delete<any>(`${API_URL}/msgApi/deleteRecord/${userIdLoggedIn}`, {\r\n        params:transId\r\n      });\r\n    } \r\n\r\n    deleteAddSystem(userIdLoggedIn,systemId){\r\n      return this.http.delete<any>(`${API_URL}/newExtApi/delete/${userIdLoggedIn}?systemId=${systemId}`);\r\n    }  \r\n\r\n    getEditOfAddSystem(): Observable<any> {\r\n        return this.subject.asObservable();\r\n    }\r\n    private paramSource = new BehaviorSubject({});\r\n    getNavParam = this.paramSource.asObservable();\r\n    \r\n     sendNavParam(params: object) {\r\n      this.paramSource.next(params)\r\n    }\r\n    // Audit log methods--->add System starts\r\n    onAuthofAddSystem(addSsytem,userIdLoggedIn)\r\n    {\r\n      return this.http.put<any>(`${API_URL}/newExtApi/authorizetherecord/${userIdLoggedIn}`,addSsytem);\r\n    }\r\n    onCloseOfAddSystem(addSsytem,userIdLoggedIn)\r\n    {\r\n      return this.http.put<any>(`${API_URL}/newExtApi/toClosingTheRecord/${userIdLoggedIn}`,addSsytem);\r\n    }\r\n    onopenOfAddSystem(addSsytem,userIdLoggedIn)\r\n    {\r\n      return this.http.put<any>(`${API_URL}/newExtApi/closeRecord/${userIdLoggedIn}`,addSsytem);\r\n    }\r\n    onDeleteAddSystem(addSsytem,userIdLoggedIn)\r\n    {\r\n      return this.http.put<any>(`${API_URL}/newExtApi/delete/${userIdLoggedIn}`,addSsytem);\r\n    }\r\n    // Audit log methods--->add System ends\r\n    // http and xml incoming\r\n    //add system screen uplaod xml\r\n    gettingHederofXMl(files:File){\r\n      var formData = new FormData();\r\n      let key='header';\r\n      formData.append('file', files);\r\n      formData.append('key',key);\r\n      \r\n      console.log(formData);\r\n      return this.http.post<any>(`${API_URL}/convertMsg/convertXmlToNodeTagList`,formData);\r\n    }\r\n    gettingBodyOfXml(files:File){\r\n      var formData = new FormData();\r\n      let key='body';\r\n      formData.append('file', files);\r\n      formData.append('key',key);\r\n      \r\n      console.log(formData);\r\n      return this.http.post<any>(`${API_URL}/convertMsg/convertXmlToNodeTagList`,formData);\r\n    }\r\n    // For rule transaltion upload xml\r\n    selectFileFORHTTPXMLIncoming(files:File)\r\n    { var formData = new FormData();\r\n     \r\n      formData.append('file', files);\r\n      return this.http.post<any>(`${API_URL}/file/getHeaders`,formData);\r\n    }\r\n    fetchingXMLandHttp()\r\n    {\r\n      return this.http.get<any>(`${API_URL}/msgApi/getXmlMsgField`);\r\n    }\r\n    fetchingIsoForTcp()\r\n    {\r\n      return this.http.get<any>(`${API_URL}/msgApi/getIsoMsgField`);\r\n    }   \r\n    gettinXMLmsgIncoming()\r\n    {\r\n      return this.http.get<any>(`${API_URL}/msgApi/getXmlMsgField`);\r\n    }\r\n    // db cnnection-->credentials api\r\n    pingDataSource(url,driverClassName,username,password)\r\n    {\r\n      return this.http.get<[]>(`${API_URL}/db/ping/${url}/${driverClassName}/${username}/${password}`)\r\n    }\r\n    // db connection -->column name\r\n    coulmnNameBasedonTableName(url,driverClassName,username,password,tablename)\r\n    {\r\n      return this.http.get<any>(`${API_URL}/db/ping/${url}/${driverClassName}/${username}/${password}/${tablename}`)\r\n    }\r\n    //fetching header tag\r\n    fetchingHeaderTag()\r\n    {\r\n      return this.http.get<any>(`${API_URL}/newExtApi/getAllHeadTag`);\r\n    }\r\n    validateCode(code : any){\r\n      return this.http.get<any>(`${API_URL}/newExtApi/addSystem/validateCode/${code}`);\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { AppConstants } from 'src/app/shared/config/app.constant';\r\n\r\n\r\n\r\nexport const API_URL = AppConstants.baseURL;\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RulesService {\r\n\r\n  constructor(private http:HttpClient) { }\r\n  //post method\r\nsubmittingCreateRules(createruleData,userIdLoggedIn){\r\n  return this.http.post(`${API_URL}/ruleConfig/newRecord/${userIdLoggedIn}`,createruleData)\r\n\r\n  \r\n}\r\ngettingCreateRuleById(id)\r\n{\r\n  return this.http.get<any>(`${API_URL}/ruleConfig/getRuleValidationSummary/${id}`)\r\n}\r\n//get method\r\nfetchingRules(){\r\n  return this.http.get<any>(`${API_URL}/ruleConfig/getRuleConfigSummary`)\r\n}\r\n//put method\r\nupdateingRules(updatingruleData){\r\n  return this.http.put(`${API_URL}//`,updatingruleData)\r\n}\r\n//delete method\r\ndeleteingRules(){\r\n  return this.http.delete(`${API_URL}//`)\r\n}\r\n// rule translation\r\neditruleTranslation(operation,userIdLoggedIn,messageTranslationDto){\r\n  return this.http.put<any>(`${API_URL}/msgApi/${operation}/${userIdLoggedIn}`,messageTranslationDto)\r\n}\r\n\r\nsubmittingruleTranslation(userIdLoggedIn,messageTranslationDto){\r\n  return this.http.post(`${API_URL}/msgApi/createRecord/${userIdLoggedIn}`,messageTranslationDto)\r\n}\r\n//get method\r\nfetchingruleTranslation(){\r\n  return this.http.get(`${API_URL}/msgApi/getTranslation`)\r\n\r\n}\r\n//getting rule transtion based on id\r\nruleTranslationBasedonId(id)\r\n{\r\n  return this.http.get<any>(`${API_URL}/msgApi/getTranslationDetails/${id}`)\r\n}\r\n//get rule trnasltion\r\ngettingoperationAndService(extSys,msgType,userIdLoggedIn)\r\n{console.log(extSys,msgType);\r\n return this.http.get<any>(`${API_URL}/newExtApi/getServiceOperation/${extSys}/${msgType}/${userIdLoggedIn}`) \r\n}\r\n//put method\r\nupdatingruleTranslation(updateruletranslationData){\r\n  return this.http.put(`${API_URL}//`,updateruletranslationData)\r\n}\r\n//delete method\r\ndeletingruleTranslation(){\r\n  return this.http.delete(`${API_URL}`)\r\n}\r\n//rule validation\r\n//post method\r\nsubmittingruleValidation(createrulevalidateData){\r\n  return this.http.post(`${API_URL}//`,createrulevalidateData)\r\n}\r\n//get method\r\nfetchingruleValidation(){\r\n  return this.http.get(`${API_URL}//`)\r\n}\r\n//put method\r\nupdatingruleValidation(updaterulevalidateData){\r\n  return this.http.put(`${API_URL}//`,updaterulevalidateData)\r\n}\r\n//delete method\r\ndeletingruleValidation(){\r\n  return this.http.delete(`${API_URL}//`)\r\n}\r\n// Rule Mapping\r\n//post method\r\nsubmittingruleMapping(createrulemappingData,userIdLoggedIn){\r\n  return this.http.post(`${API_URL}/msgApi/createMappingNew/${userIdLoggedIn}`,createrulemappingData)\r\n\r\n}\r\nupdatingRuleMapping(updateMappingNewData,userIdLoggedIn){\r\n  return this.http.put(`${API_URL}/msgApi/msgMapping/update/${userIdLoggedIn}`,updateMappingNewData)\r\n\r\n}\r\n\r\neditRuleMapping(opeation,userIdLoggedIn,ruleMappingDto){\r\n  return this.http.put(`${API_URL}/msgApi/msgMapping/${opeation}/${userIdLoggedIn}`,ruleMappingDto)\r\n}\r\nondeleteMapping(ruleMappingId,userIdLoggedIn)\r\n{\r\n  return this.http.delete<any>(`${API_URL}/msgApi/deleteMapping/${userIdLoggedIn}?id=${ruleMappingId}`);\r\n}\r\n// getting rulemapping edit data absed on id\r\ngetruleMappingById(id,mappingId)\r\n{\r\n  return this.http.get<any>(`${API_URL}/msgApi/getMappingDetails/${id}/${mappingId}`)\r\n}\r\n//get method\r\nfetchingruleMapping(){\r\n  return this.http.get(`${API_URL}/msgApi/getAllMapping`)\r\n}\r\n//put method\r\nupdatingruleMapping(updaterulemappingData){\r\n  return this.http.put(`${API_URL}//`,updaterulemappingData)\r\n}\r\n//delete method\r\ndeletingruleMapping(){\r\n  return this.http.delete(`${API_URL}//`)\r\n}\r\n// getting ext sys\r\ngettingExternalsystem()\r\n{\r\nreturn this.http.get<any>(`${API_URL}/newExtApi/getExternalSys`);\r\n}\r\n// Audit log methods--->add System starts\r\nonDeleteRuleCongif(ruleId,userIdLoggedIn)\r\n{\r\n  return this.http.delete<any>(`${API_URL}/ruleConfig/deleteRule/${userIdLoggedIn}?sysRuleId=${ruleId}`);\r\n}\r\n// Audit log methods--->add System ends\r\ngettingISoBasedonExtsys()\r\n{\r\n  return this.http.get<any>(`${API_URL}/msgApi/getIsoMsgFieldbyextsys`);\r\n}\r\nxmlbasedonExternalsystem()\r\n{\r\n  return this.http.get<any>(`${API_URL}/msgApi/getXmlMsgFieldByExtSys`);\r\n}\r\nsaveRuleconfig(ruleDto,userIdLoggedIn)\r\n{\r\n  return this.http.post<any>(`${API_URL}/ruleConfig/create/${userIdLoggedIn}`,ruleDto);\r\n}\r\neditRuleConfig(operation,ruleDto,userIdLoggedIn)\r\n{\r\n  return this.http.put<any>(`${API_URL}/ruleConfig/${operation}/${userIdLoggedIn}`,ruleDto);\r\n}\r\ngettingTranslationData(sysCode)\r\n{\r\n  return this.http.get<any>(`${API_URL}/msgApi/getTranslation/${sysCode}`);\r\n}\r\ngetAddSystem(sysCode)\r\n{\r\n  return this.http.get<any>(`${API_URL}/newExtApi/getRuleTransInfo/${sysCode}`);\r\n}\r\ngettingSysCode(transid)\r\n{\r\n  return this.http.get<any>(`${API_URL}/msgApi/getSystemCode/${transid}`);\r\n}\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, BehaviorSubject } from 'rxjs';\r\nimport { FormGroup, FormControl } from '@angular/forms';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { median } from 'src/app/shared/services/sias2-services/excel.api.service';\r\nimport { ExtsysClass } from '../../models/extsys-class';\r\n\r\n\r\n//import * as AppConst from './app.const';\r\nconst httpOptions = {\r\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n};\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class ExcelApiService {\r\n    // For Behavior -- by sakthi\r\n    externalSystem = new BehaviorSubject<any[]>([]);\r\n    externalSystem$ = this.externalSystem.asObservable();\r\n\r\n\r\n    //   private uri = AppConst.median + '/api';\r\n    //   private uriForExt = AppConst.median + '/extsys';\r\n    //   private uriTag = AppConst.median + '/tag';\r\n\r\n    private uri = median + '/api';\r\n    private uriForExt = median + '/extsys';\r\n    private uriTag = median + '/tag';\r\n    private uriForProcessProcedure = median + '/excelProcessPackage';\r\n    private uriForMap = median + '/excelmap';\r\n\r\n    callProcedureService(extSysName, processCode, dateforData) {\r\n        return this.http.get<boolean>(`${this.uriForProcessProcedure}/callProcess/${extSysName}/${processCode}/${dateforData}`);\r\n    }\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n    // audit Logs\r\n    getAllAuditData(): Observable<any> {\r\n        return this.http.get(`${this.uri}` + '/auditsList');\r\n\r\n    }\r\n    getAllAuditDataByDate(from: Date, to: Date) {\r\n        return this.http.get(`${this.uri}/dataauditsList/${from}/${to}`);\r\n    }\r\n    getProcessNameWithExtSys(extSysName): Observable<any> {\r\n        return this.http.get(`${this.uriForExt}/processCode/${extSysName}`);\r\n\r\n    }\r\n\r\n    // ------------------Pooja---------------5th sept--------------\r\n    // ----------------start-------------------\r\n    // To get all processcode by ext sys code\r\n\r\n    getAllExtCode(): Observable<any> {\r\n        return this.http.get(`${this.uriForExt}` + '/getAllExtCode');\r\n    }\r\n\r\n    getProcessNameByExtSysCode(extSysCode: string): Observable<any> {\r\n        return this.http.get(`${this.uriForExt}/processCodeByExtCode/${extSysCode}`);\r\n    }\r\n\r\n    //---------------17th sept---------------START---------------\r\n    // -----------------FOR UPDATE SCREEN--------------------\r\n    getAllExtCodeForUpdateMapping(): Observable<any> {\r\n        return this.http.get(`${this.uriForMap}` + '/getAllExtCode');\r\n    }\r\n\r\n    getProcessNameByExtSysCodeForUpdateMapping(extSysCode: string): Observable<any> {\r\n        return this.http.get(`${this.uriForMap}/processCodeByExtCode/${extSysCode}`);\r\n    }\r\n    //---------------17th sept---------------END---------------\r\n    getExtSysNameByExtSysCode(extSysCode: string): Observable<any> {\r\n        return this.http.get<string>(`${this.uriForMap}/getExtsysByExtCode/${extSysCode}`,\r\n            { responseType: 'text' as 'json' }\r\n        );\r\n    }\r\n\r\n\r\n    updateMappingData(model: any, extNameValue: any, processCode: string, extSysCode: string, starting, isChecked, modifiedBy, ccy, sheetNumber) {\r\n\r\n        return this.http.put(`${this.uriForMap}/updateMapping/${extNameValue}/${processCode}/${extSysCode}/${starting}/${isChecked}/${modifiedBy}/${ccy}/${sheetNumber}`, model\r\n\r\n        );\r\n    }\r\n    copyData(model: any, extNameValue: any, processCode: string, extSysCode: string, starting, isChecked, modifiedBy, ccy) {\r\n        // let body = JSON.stringify(model);\r\n        return this.http.post<boolean>(`${this.uriForMap}/copyMapping/${extNameValue}/${processCode}/${extSysCode}/${starting}/${isChecked}/${modifiedBy}/${ccy}`, model,\r\n            // { responseType: 'json' }\r\n        );\r\n    }\r\n    deleteMappingRow(id: any) {\r\n        return this.http.delete(`${this.uriForMap}/deleteMappingRow/${id}`);\r\n    }\r\n\r\n    getAllExtsysNameAndProcessCodeOnAuthStatus(): Observable<any> {\r\n        return this.http.get(`${this.uriForExt}/gettingExtsysNameAndProcessCodeOnAuthStatus`);\r\n    }\r\n    // --------------End----------------------------\r\n\r\n    // dashboard\r\n    // getAllDashboard(): Observable<any> {\r\n    //   return this.http.get(`${this.uri}` + '/dashboardchartdata');\r\n\r\n    // }\r\n\r\n\r\n    // external system\r\n    getAllExtSys(): Observable<any> {\r\n        return this.http.get(`${this.uriForExt}` + '/extsysdata');\r\n\r\n    }\r\n    getAllExtSysName(): Observable<any> {\r\n        return this.http.get(`${this.uriForExt}` + '/extsysName');\r\n\r\n    }\r\n\r\n\r\n    fetchAllAuthExternalSystem(): Observable<any> {\r\n        return this.http.get(`${this.uriForExt}` + '/fetchAuthExtSystem');\r\n    }\r\n    createExtSys(extSys: Object): Observable<Object> {\r\n        return this.http.post(`${this.uriForExt}` + '/createExtSys', extSys);\r\n\r\n    }\r\n    modifyExtSysService(modifyextSys: Object) {\r\n        return this.http.put<boolean>(`${this.uriForExt}` + `/modifyextSys`, modifyextSys);\r\n    }\r\n    verifyExtSys(extSysName: string, userIdLoggedIn: string): Observable<Object> {\r\n        return this.http.get(`${this.uriForExt}/verify/${extSysName}/${userIdLoggedIn}`);\r\n    }\r\n    deleteExtSys(extSysName: string, userIdLoggedIn: string): Observable<Object> {\r\n        return this.http.delete(`${this.uriForExt}/${extSysName}/${userIdLoggedIn}`, { responseType: 'text' });\r\n    }\r\n    closelockRecordExtSys(extSysName: string, userIdLoggedIn: string): Observable<Object> {\r\n        return this.http.get(`${this.uriForExt}/close/${extSysName}/${userIdLoggedIn}`);\r\n    }\r\n    reopenRecordExtSys(extSysName: any, userIdLoggedIn: string): Observable<Object> {\r\n        return this.http.get(`${this.uriForExt}/reOpen/${extSysName}/${userIdLoggedIn}`);\r\n    }\r\n    // authorizingTheRecord(extsobj: ExtsysClass) {\r\n    //     return this.http.post<ExtsysClass>(`${this.uriForExt}` + '/authorizetherecordOfExteranlSystem', extsobj)\r\n    // }\r\n    // closingTheRecordOfProcessCodeMapping(closeobj: ExtsysClass) {\r\n    //     return this.http.post<ExtsysClass>(`${this.uriForExt}` + '/onClcikOfCloseOFExtsys', closeobj)\r\n    // }\r\n    // reopeningTheRecordOfProcessCodeMapping(reopenobj: ExtsysClass) {\r\n    //     return this.http.post<ExtsysClass>(`${this.uriForExt}` + '/reopeningTheRecord', reopenobj)\r\n    // }\r\n    // ------------------------------------------------------\r\n    authorizingTheRecord(extsobj: ExtsysClass, name: string) {\r\n        return this.http.put<ExtsysClass>(`${this.uriForExt}` + `/authorizetherecordOfExteranlSystem/${name}`, extsobj)\r\n    }\r\n\r\n    closingTheRecordOfProcessCodeMapping(closeobj: ExtsysClass) {\r\n        return this.http.put<ExtsysClass>(`${this.uriForExt}` + '/onClcikOfCloseOFExtsys', closeobj)\r\n    }\r\n    reopeningTheRecordOfProcessCodeMapping(reopenobj: ExtsysClass) {\r\n        return this.http.put<ExtsysClass>(`${this.uriForExt}` + '/reopeningTheRecord', reopenobj)\r\n    }\r\n    // --------------------------------------------------------\r\n\r\n\r\n\r\n\r\n    // tag service\r\n    getAllTags(): Observable<any> {\r\n        return this.http.get(`${this.uriTag}` + '/tagdata');\r\n\r\n    }\r\n    fetchAllAuthTags(): Observable<any> {\r\n        return this.http.get(`${this.uriTag}` + '/fetchAuthTags');\r\n    }\r\n    createTag(tags: Object): Observable<Object> {\r\n        return this.http.post(`${this.uriTag}` + '/createTag', tags);\r\n\r\n    }\r\n    modifyTagService(modifytag: Object) {\r\n        return this.http.put<boolean>(`${this.uriTag}` + `/modifytag`, modifytag);\r\n    }\r\n    verifyTag(tagName: string, userIdLoggedIn: string): Observable<Object> {\r\n        return this.http.get(`${this.uriTag}/verify/${tagName}/${userIdLoggedIn}`);\r\n    }\r\n    deleteTag(tagName: string, userIdLoggedIn: string): Observable<Object> {\r\n        return this.http.delete(`${this.uriTag}/${tagName}/${userIdLoggedIn}`, { responseType: 'text' });\r\n    }\r\n    closelockTag(tagName: string, userIdLoggedIn: string): Observable<Object> {\r\n        return this.http.get(`${this.uriTag}/close/${tagName}/${userIdLoggedIn}`);\r\n    }\r\n    reopenRecordTag(tagName: any, userIdLoggedIn: string): Observable<Object> {\r\n        return this.http.get(`${this.uriTag}/reOpen/${tagName}/${userIdLoggedIn}`);\r\n    }\r\n\r\n    // ----------------------pooja-----------------------------//\r\n    //----------------------START-----------------------------//\r\n    getProcessNameWithExtSysForMapping(extSysName: any) {\r\n        return this.http.get(`${this.uriForMap}/fetchAllProcessCode/${extSysName}`);\r\n    }\r\n\r\n    getAllExtSysForUpdateMapping(): Observable<any> {\r\n        return this.http.get(`${this.uriForMap}/fetchAllExt`);\r\n    }\r\n\r\n    getAllMappingByExtSysAndProcessCode(externalSystem: string, processCode: string, ccy, sheetNumber:number): Observable<any> {\r\n        return this.http.get(`${this.uriForMap}/fetchAllMapping/${externalSystem}/${processCode}/${ccy}/${sheetNumber}`);\r\n    }\r\n    fetchAllName(externalSystem: string, processCode: string, ccy): Observable<any> {\r\n        return this.http.get(`${this.uriForMap}/fetchAllName/${externalSystem}/${processCode}/${ccy}`);\r\n    }\r\n\r\n    // onAuthorizingTheRecordOfExcelMApping(objOfAudit: ExcelMappingAuditLog) {\r\n    //     return this.http.post(`${this.uriForMap}/authrizingTheRecordOfExcelMapping`, objOfAudit);\r\n    // }\r\n    // onClcikOFCloseOfUpdateExcelMApping(objOfAuditclose: ExcelMappingAuditLog) {\r\n    //     return this.http.post(`${this.uriForMap}/closeTheRecordOfExcelMapping`, objOfAuditclose);\r\n    // }\r\n    // onClcikOfReopenOfUpdateExcelMapping(objOfAuditReopen: ExcelMappingAuditLog) {\r\n    //     return this.http.post(`${this.uriForMap}/reopenninTheRecordOfExcelMapping`, objOfAuditReopen);\r\n    // }\r\n\r\n    // updateMapping(model, isValid,extSysName: string, processCode:string){\r\n    //     return this.http.put(`${this.uriForMap}/`);\r\n    // }\r\n\r\n    onAuthorizingTheRecordOfExcelMApping(model: any, extNameValue: any, processCode: string, extSysCode: string, userId: any, ccy) {\r\n        return this.http.put(`${this.uriForMap}/authOfRecord/${extNameValue}/${processCode}/${extSysCode}/${userId}/${ccy}`, model);\r\n    }\r\n\r\n    onClcikOFCloseOfUpdateExcelMApping(model: any, extNameValue: any, processCode: string, extSysCode: string, ccy) {\r\n        return this.http.put(`${this.uriForMap}/closeOfRecord/${extNameValue}/${processCode}/${extSysCode}/${ccy}`, model);\r\n    }\r\n\r\n    onClcikOfReopenOfUpdateExcelMapping(model: any, extNameValue: any, processCode: string, extSysCode: string, ccy) {\r\n        return this.http.put(`${this.uriForMap}/reOpenOfRecord/${extNameValue}/${processCode}/${extSysCode}/${ccy}`, model);\r\n    }\r\n    getCurrencyOnExtNameAndProcssCode(extSysCode: string, processCode: string, extNameValue: string) {\r\n        return this.http.get(`${this.uriForMap}/gettingCurrency/${extSysCode}/${processCode}/${extNameValue}`)\r\n    }\r\n\r\n\r\n     // added by vidya for delete Process code mapping\r\n     onDeleteOfProcessCodeMapping(deleteData)\r\n     {\r\n         return this.http.post(`${this.uriForExt}/delete`,deleteData)\r\n     }\r\n}\r\n\r\n","\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpHeaders, HttpClient, HttpRequest, HttpEvent } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { median } from 'src/app/shared/services/sias2-services/excel.api.service';\r\nimport { ExcelExtsys } from 'src/app/views/sias-v2/excel-external-sys/excelExtSys';\r\n\r\n//import * as AppConst from './../app.const';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ExcelProcessingService {\r\n\r\n  //private uri = AppConst.dist + '/excel';\r\n  private excelfile = median + '/excelfile';\r\n  private url = median + '/excelcolumns';\r\n  private excelprocess = median + '/excelprocess';\r\n  private url3 = median + '/excelstatic';\r\n  private urlforexcelmaster = median + '/excelmaster';\r\n  private url1 = median + '/extsys';\r\n  private ext = median + '/excelExt';\r\n  // createRoles(formdata: Object): Observable<Object> {\r\n  private excelExtSys = median + '/excelmaster';\r\n  private httpHeader = { header: new HttpHeaders({ 'Content-type': 'application/json' }) };\r\n  FILE_URL = \"\";\r\n  constructor(private http: HttpClient) { }\r\n\r\n  private excelmap = median + '/excelmap';\r\n  // return this.http.post(`${this.url}` + '/postColumnMapping', formdata);\r\n  // }\r\n  externalSystemData:BehaviorSubject<any> = new BehaviorSubject<any>('');\r\n  externalSystemDataViewType:BehaviorSubject<any> = new BehaviorSubject<any>('');\r\n\r\n  sendSystemData(data:any,type:any)\r\n  {\r\n    this.externalSystemData.next(data);\r\n    this.externalSystemDataViewType.next(type);\r\n  }\r\n  \r\n  columnData(role: Object, extSys, processName, headerRepeated, startingRow, extCode, currency, userId, sheetNumber): Observable<Object> {\r\n    // let body = JSON.stringify(role);\r\n    // //console.log(\"Body : \"+ body)\r\n    return this.http.post(`${this.excelmap}/postColumnMapping/${extSys}/${processName}/${headerRepeated}/${startingRow}/${extCode}/${currency}/${userId}/${sheetNumber}`, role,\r\n      // { responseType: 'json' }\r\n    );\r\n  }\r\n  getMappingSummary(): Observable<any> {\r\n    return this.http.get(`${this.excelmap}/fetchAllMappingData/`);\r\n  }\r\n  showDetails(processName: Object): Observable<Object> {\r\n\r\n    return this.http.post(`${this.urlforexcelmaster}/findByCondition/`, processName);\r\n  }\r\n  processData(extSys, processName, postexcelMasterData): Observable<any> {\r\n\r\n    return this.http.get(`${this.excelprocess}/processData/${extSys}/${processName}/${postexcelMasterData}`, processName);\r\n  }\r\n\r\n  getAllExcelColumn(): Observable<any> {\r\n    return this.http.get(`${this.url3}` + '/findAll');\r\n\r\n  }\r\n  getAllExternalSystem(): Observable<any> {\r\n    return this.http.get(`${this.excelExtSys}` + '/findAllExtSys');\r\n\r\n  }\r\n\r\n  getProcessNameWithExtSys(extSys1: string): Observable<any> {\r\n    return this.http.get(`${this.excelExtSys}/findProcess/${extSys1}`);\r\n\r\n  }\r\n  getProcessDataMethod(): Observable<any> {\r\n    return this.http.get(`${this.url}` + '/processData');\r\n\r\n  }\r\n  pushFileToStorage(extSystem, processName, file: File, extSysCode): Observable<HttpEvent<{}>> {\r\n    const formdata: FormData = new FormData();\r\n    formdata.append('file', file);\r\n    const req = new HttpRequest('POST', `${this.excelfile}/process/${extSystem}/${processName}/${extSysCode}`, formdata, {\r\n      reportProgress: true,\r\n      responseType: 'text'\r\n    }\r\n    );\r\n    return this.http.request(req);\r\n  }\r\n\r\n  callProcedureService(extSys1, processData, dateforData) {\r\n    //console.log(\"calling procedure\");\r\n    return this.http.get<boolean>(`${this.excelExtSys}/procedureCall/${extSys1}/${processData}/${dateforData}`);\r\n  }\r\n\r\n  ///from here new methods\r\n\r\n  getAllExt(): Observable<any> {\r\n    return this.http.get(`${this.ext}` + '/getExt');\r\n  }\r\n\r\n  getAllExtSysCode(): Observable<any> {\r\n    return this.http.get(`${this.ext}` + '/getExtSysCodeaa');\r\n  }\r\n\r\n  modifyExtSys(formData: object) {\r\n    return this.http.put(`${this.ext}` + `/update`, formData);\r\n  }\r\n  // getProcessNameWithExtSys(extSysName): Observable<any> {\r\n  // return this.http.get(`${this.url}/findProcess/${extSysName}`);\r\n\r\n  // }\r\n  getCustomer(id: number): Observable<Object> {\r\n    return this.http.get(`${this.ext}/${id}`);\r\n  }\r\n\r\n  createExt(customer: Object): Observable<Object> {\r\n    return this.http.post(`${this.ext}` + `/create`, customer);\r\n  }\r\n\r\n  getAllDept(): Observable<any> {\r\n    //return this.http.get(`${this._baseURL}` + '/roles');\r\n    return this.http.get(`${this.ext}` + '/getAllAuthDepts');\r\n  }\r\n\r\n  updateCustomer(id: number, value: any): Observable<Object> {\r\n    return this.http.put(`${this.ext}/${id}`, value);\r\n  }\r\n\r\n  deleteCustomer(id: number): Observable<any> {\r\n    return this.http.delete(`${this.ext}/${id}`, { responseType: 'text' });\r\n  }\r\n\r\n  getCustomersList(): Observable<any> {\r\n    return this.http.get(`${this.ext}`);\r\n  }\r\n\r\n  getCustomersByAge(age: number): Observable<any> {\r\n    return this.http.get(`${this.ext}/age/${age}`);\r\n  }\r\n\r\n  deleteAll(): Observable<any> {\r\n    return this.http.delete(`${this.ext}` + `/delete`, { responseType: 'text' });\r\n  }\r\n  // AUDIT LOG FOR - External system\r\n  //-------------------START--------\r\n  // -------By vidya----------------\r\n  authorizingTheRecord(obj: ExcelExtsys, name: string) {\r\n    return this.http.put(`${this.ext}` + `/authorizetherecord/${name}`, obj)\r\n  }\r\n  ClosingTheRecord(objClose: ExcelExtsys) {\r\n    return this.http.put(`${this.ext}` + `/toClosingTheRecord`, objClose)\r\n  }\r\n  reopeningTheRecord(reopening: ExcelExtsys) {\r\n    return this.http.put(`${this.ext}` + `/reopeningTheRecord`, reopening)\r\n  }\r\n  //added by vidya delete button\r\n  onClickOfDeleteOfUpdateExecel(deleting:ExcelExtsys)\r\n  {\r\n    return this.http.put(`${this.ext}` + `/delete`, deleting)\r\n  }\r\n  // ---------End-----------------------\r\n\r\n  getAuthorizedExt(): Observable<any> {\r\n    return this.http.get(`${this.ext}/gettingExtsysCodeonAuthSatus`)\r\n  }\r\n  \r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpEvent, HttpRequest, HttpEventType } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { AppConstants } from '../../config/app.constant';\r\n\r\n//export const median = 'http://localhost:9191';\r\n//export const median = 'http://192.168.0.119:9191';\r\nexport const median = AppConstants.baseURL;\r\n// export const median = 'http://10.148.34.13:9123/excel';\r\n\r\nexport const API_URL = 'http://localhost:8889';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ApiService {\r\n\r\n  FILE_URL = 'http://localhost:8777';\r\n  VMEXTSYSTEMS = 'http://localhost:8080/batchcontroller/start';\r\n\r\n  constructor(private httpClient: HttpClient) { }\r\n\r\n  pushFileToStorage(file: File): Observable<HttpEvent<{}>> {\r\n\r\n    const formdata: FormData = new FormData();\r\n    formdata.append('file', file);\r\n    const req = new HttpRequest('POST', `${this.FILE_URL}/upload`, formdata, {\r\n      reportProgress: true,\r\n      responseType: 'text'\r\n\r\n    }\r\n    );\r\n    return this.httpClient.request(req);\r\n  }\r\n\r\n  pushFileToStorageQueueStatus(file: File): Observable<HttpEvent<{}>> {\r\n\r\n\r\n    const formdata: FormData = new FormData();\r\n    formdata.append('file', file);\r\n    const req = new HttpRequest('POST', `${this.FILE_URL}/editedFile`, formdata, {\r\n      reportProgress: true,\r\n      responseType: 'text'\r\n\r\n    }\r\n    );\r\n    return this.httpClient.request(req);\r\n  }\r\n\r\n  financeUploadService(file: File, reportName, Exec_Date): Observable<HttpEvent<{}>> {\r\n    const formdata: FormData = new FormData();\r\n    formdata.append('file', file);\r\n    const req = new HttpRequest('POST', `${this.FILE_URL}/financeUpload/${reportName}/${Exec_Date}`, formdata, {\r\n      reportProgress: true,\r\n      responseType: 'text'\r\n\r\n    }\r\n    );\r\n    return this.httpClient.request(req);\r\n  }\r\n\r\n  financeDownloadService(reportName, Exec_Date) {\r\n    return this.httpClient.get<any[]>(`${this.FILE_URL}/financeDownload/${reportName}/${Exec_Date}`);\r\n  }\r\n\r\n  dynamicReportService(reportName, Exec_Date) {\r\n    return this.httpClient.get<any[]>(`${this.FILE_URL}/financeDownload3d/${reportName}/${Exec_Date}`);\r\n  }\r\n\r\n  // transferingUserObject(user:User)\r\n  // {\r\n  //   if(user.userType == 'N')\r\n  //   {\r\n  //     getUserObject(user);\r\n  //   }\r\n  // }\r\n}\r\n","export default \".example-container {\\r\\n  height: 250px;\\r\\n  overflow: auto;\\r\\n}\\r\\n.mat-raised-button {\\r\\n  width: -webkit-fit-content;\\r\\n  width: -moz-fit-content;\\r\\n  width: fit-content;\\r\\n  height: 20px;\\r\\n  line-height: 27px;\\r\\n  min-height: 27px;\\r\\n  vertical-align: top;\\r\\n  font-size: 11px;\\r\\n  padding: 0 0;\\r\\n  margin: 0;\\r\\n  }\\r\\n#customers {\\r\\n      font-family: \\\"Trebuchet MS\\\", Arial, Helvetica, sans-serif;\\r\\n      border-collapse: collapse;\\r\\n      width: 100%;\\r\\n      }\\r\\n#customers td, #customers th {\\r\\n      border: 1px solid #ddd;\\r\\n      padding: 8px;\\r\\n      text-align: center;\\r\\n      \\r\\n      }\\r\\n#customers tr:nth-child(even){background-color: #f2f2f2;}\\r\\n#customers th {\\r\\n      padding-top: 12px;\\r\\n      padding-bottom: 12px;\\r\\n      text-align: left;\\r\\n      background-color:rgb(97, 178, 216);\\r\\n      color: white;\\r\\n      }\\r\\n.baiscInfocard\\r\\n{\\r\\n  width: 63%;\\r\\n margin-left: 15%;\\r\\n}\\r\\n::ng-deep .mat-form-field-flex > .mat-form-field-infix { padding: 0.5em 0px !important;}\\r\\nmat-form-field{\\r\\n  width: 100%;\\r\\n  \\r\\n}\\r\\n#chFile{\\r\\n  display: none;\\r\\n  }\\r\\n.btnFile{\\r\\n  background-color: rgb(130, 130, 173);\\r\\n  margin-right: 30px;\\r\\n  width: 110px;\\r\\n  }\\r\\ntable {\\r\\n    border-collapse: initial;\\r\\n    width:100%;\\r\\n    text-align: center !important;\\r\\n  }\\r\\n:host ::ng-deep .mat-sort-header-container { \\r\\n    display: flex;  \\r\\n    justify-content: center; \\r\\n  }\\r\\nth.mat-header-cell, td.mat-cell { \\r\\n    text-align: center; \\r\\n  }\\r\\n.mat-header-cell {\\r\\n    text-align: center;\\r\\n    height: 25px !important;\\r\\n  \\r\\n  }\\r\\n.mat-cell {\\r\\n    text-align: center;\\r\\n    height: 25px !important;\\r\\n  \\r\\n  }\\r\\n.red{\\r\\n    color: red;\\r\\n  }\\r\\ntr:nth-child(even) {\\r\\n    height: 25px !important;\\r\\n  }\\r\\nth {\\r\\n    font-weight: small;\\r\\n    height: 25px !important;\\r\\n    text-align: center;\\r\\n  }\\r\\ntr {\\r\\n    font-weight: small;\\r\\n    height: 25px !important;\\r\\n    text-align: center;\\r\\n  }\\r\\nmat-paginator {\\r\\n    width: auto !important;\\r\\n    height: 40px !important;\\r\\n  }\\r\\nmd-pagination-wrapper {\\r\\n    width: auto !important;\\r\\n    height: 40px !important;\\r\\n  }\\r\\n.readonly-wrapper {\\r\\n    pointer-events:none;\\r\\n  }\\r\\n.readonly-wrapper .readonly-block {\\r\\n    pointer-events: none;\\r\\n  }  \\r\\n  \\r\\n  \\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdmlld3Mvc2lhcy12Mi9hZGQtc3lzdGVtLWluY29taW5nLW1lc3NhZ2UtdGNwL2FkZC1zeXN0ZW0taW5jb21pbmctbWVzc2FnZS10Y3AuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGFBQWE7RUFDYixjQUFjO0FBQ2hCO0FBQ0E7RUFDRSwwQkFBa0I7RUFBbEIsdUJBQWtCO0VBQWxCLGtCQUFrQjtFQUNsQixZQUFZO0VBQ1osaUJBQWlCO0VBQ2pCLGdCQUFnQjtFQUNoQixtQkFBbUI7RUFDbkIsZUFBZTtFQUNmLFlBQVk7RUFDWixTQUFTO0VBQ1Q7QUFFQTtNQUNJLHlEQUF5RDtNQUN6RCx5QkFBeUI7TUFDekIsV0FBVztNQUNYO0FBQ0E7TUFDQSxzQkFBc0I7TUFDdEIsWUFBWTtNQUNaLGtCQUFrQjs7TUFFbEI7QUFFQSw4QkFBOEIseUJBQXlCLENBQUM7QUFFeEQ7TUFDQSxpQkFBaUI7TUFDakIsb0JBQW9CO01BQ3BCLGdCQUFnQjtNQUNoQixrQ0FBa0M7TUFDbEMsWUFBWTtNQUNaO0FBRU47O0VBRUUsVUFBVTtDQUNYLGdCQUFnQjtBQUNqQjtBQUVBLHlEQUF5RCw2QkFBNkIsQ0FBQztBQUd2RjtFQUNFLFdBQVc7O0FBRWI7QUFFQTtFQUNFLGFBQWE7RUFDYjtBQUNBO0VBQ0Esb0NBQW9DO0VBQ3BDLGtCQUFrQjtFQUNsQixZQUFZO0VBQ1o7QUFDQTtJQUNFLHdCQUF3QjtJQUN4QixVQUFVO0lBQ1YsNkJBQTZCO0VBQy9CO0FBQ0E7SUFDRSxhQUFhO0lBQ2IsdUJBQXVCO0VBQ3pCO0FBRUE7SUFDRSxrQkFBa0I7RUFDcEI7QUFFQTtJQUNFLGtCQUFrQjtJQUNsQix1QkFBdUI7O0VBRXpCO0FBRUE7SUFDRSxrQkFBa0I7SUFDbEIsdUJBQXVCOztFQUV6QjtBQUVBO0lBQ0UsVUFBVTtFQUNaO0FBR0E7SUFDRSx1QkFBdUI7RUFDekI7QUFFQTtJQUNFLGtCQUFrQjtJQUNsQix1QkFBdUI7SUFDdkIsa0JBQWtCO0VBQ3BCO0FBQ0E7SUFDRSxrQkFBa0I7SUFDbEIsdUJBQXVCO0lBQ3ZCLGtCQUFrQjtFQUNwQjtBQUNBO0lBQ0Usc0JBQXNCO0lBQ3RCLHVCQUF1QjtFQUN6QjtBQUVBO0lBQ0Usc0JBQXNCO0lBQ3RCLHVCQUF1QjtFQUN6QjtBQUNBO0lBQ0UsbUJBQW1CO0VBQ3JCO0FBRUE7SUFDRSxvQkFBb0I7RUFDdEIiLCJmaWxlIjoic3JjL2FwcC92aWV3cy9zaWFzLXYyL2FkZC1zeXN0ZW0taW5jb21pbmctbWVzc2FnZS10Y3AvYWRkLXN5c3RlbS1pbmNvbWluZy1tZXNzYWdlLXRjcC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmV4YW1wbGUtY29udGFpbmVyIHtcclxuICBoZWlnaHQ6IDI1MHB4O1xyXG4gIG92ZXJmbG93OiBhdXRvO1xyXG59XHJcbi5tYXQtcmFpc2VkLWJ1dHRvbiB7XHJcbiAgd2lkdGg6IGZpdC1jb250ZW50O1xyXG4gIGhlaWdodDogMjBweDtcclxuICBsaW5lLWhlaWdodDogMjdweDtcclxuICBtaW4taGVpZ2h0OiAyN3B4O1xyXG4gIHZlcnRpY2FsLWFsaWduOiB0b3A7XHJcbiAgZm9udC1zaXplOiAxMXB4O1xyXG4gIHBhZGRpbmc6IDAgMDtcclxuICBtYXJnaW46IDA7XHJcbiAgfVxyXG4gIFxyXG4gICNjdXN0b21lcnMge1xyXG4gICAgICBmb250LWZhbWlseTogXCJUcmVidWNoZXQgTVNcIiwgQXJpYWwsIEhlbHZldGljYSwgc2Fucy1zZXJpZjtcclxuICAgICAgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTtcclxuICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgIH1cclxuICAgICAgI2N1c3RvbWVycyB0ZCwgI2N1c3RvbWVycyB0aCB7XHJcbiAgICAgIGJvcmRlcjogMXB4IHNvbGlkICNkZGQ7XHJcbiAgICAgIHBhZGRpbmc6IDhweDtcclxuICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgICBcclxuICAgICAgfVxyXG4gICAgICBcclxuICAgICAgI2N1c3RvbWVycyB0cjpudGgtY2hpbGQoZXZlbil7YmFja2dyb3VuZC1jb2xvcjogI2YyZjJmMjt9XHJcbiAgICAgIFxyXG4gICAgICAjY3VzdG9tZXJzIHRoIHtcclxuICAgICAgcGFkZGluZy10b3A6IDEycHg7XHJcbiAgICAgIHBhZGRpbmctYm90dG9tOiAxMnB4O1xyXG4gICAgICB0ZXh0LWFsaWduOiBsZWZ0O1xyXG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOnJnYig5NywgMTc4LCAyMTYpO1xyXG4gICAgICBjb2xvcjogd2hpdGU7XHJcbiAgICAgIH1cclxuICAgICBcclxuLmJhaXNjSW5mb2NhcmRcclxue1xyXG4gIHdpZHRoOiA2MyU7XHJcbiBtYXJnaW4tbGVmdDogMTUlO1xyXG59XHJcblxyXG46Om5nLWRlZXAgLm1hdC1mb3JtLWZpZWxkLWZsZXggPiAubWF0LWZvcm0tZmllbGQtaW5maXggeyBwYWRkaW5nOiAwLjVlbSAwcHggIWltcG9ydGFudDt9XHJcblxyXG5cclxubWF0LWZvcm0tZmllbGR7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbiAgXHJcbn1cclxuICBcclxuI2NoRmlsZXtcclxuICBkaXNwbGF5OiBub25lO1xyXG4gIH1cclxuICAuYnRuRmlsZXtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMTMwLCAxMzAsIDE3Myk7XHJcbiAgbWFyZ2luLXJpZ2h0OiAzMHB4O1xyXG4gIHdpZHRoOiAxMTBweDtcclxuICB9XHJcbiAgdGFibGUge1xyXG4gICAgYm9yZGVyLWNvbGxhcHNlOiBpbml0aWFsO1xyXG4gICAgd2lkdGg6MTAwJTtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlciAhaW1wb3J0YW50O1xyXG4gIH1cclxuICA6aG9zdCA6Om5nLWRlZXAgLm1hdC1zb3J0LWhlYWRlci1jb250YWluZXIgeyBcclxuICAgIGRpc3BsYXk6IGZsZXg7ICBcclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyOyBcclxuICB9XHJcbiAgXHJcbiAgdGgubWF0LWhlYWRlci1jZWxsLCB0ZC5tYXQtY2VsbCB7IFxyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyOyBcclxuICB9XHJcbiAgXHJcbiAgLm1hdC1oZWFkZXItY2VsbCB7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICBoZWlnaHQ6IDI1cHggIWltcG9ydGFudDtcclxuICBcclxuICB9XHJcbiAgXHJcbiAgLm1hdC1jZWxsIHtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgIGhlaWdodDogMjVweCAhaW1wb3J0YW50O1xyXG4gIFxyXG4gIH1cclxuXHJcbiAgLnJlZHtcclxuICAgIGNvbG9yOiByZWQ7XHJcbiAgfVxyXG4gIFxyXG4gIFxyXG4gIHRyOm50aC1jaGlsZChldmVuKSB7XHJcbiAgICBoZWlnaHQ6IDI1cHggIWltcG9ydGFudDtcclxuICB9XHJcbiAgXHJcbiAgdGgge1xyXG4gICAgZm9udC13ZWlnaHQ6IHNtYWxsO1xyXG4gICAgaGVpZ2h0OiAyNXB4ICFpbXBvcnRhbnQ7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgfVxyXG4gIHRyIHtcclxuICAgIGZvbnQtd2VpZ2h0OiBzbWFsbDtcclxuICAgIGhlaWdodDogMjVweCAhaW1wb3J0YW50O1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gIH1cclxuICBtYXQtcGFnaW5hdG9yIHtcclxuICAgIHdpZHRoOiBhdXRvICFpbXBvcnRhbnQ7XHJcbiAgICBoZWlnaHQ6IDQwcHggIWltcG9ydGFudDtcclxuICB9XHJcbiAgXHJcbiAgbWQtcGFnaW5hdGlvbi13cmFwcGVyIHtcclxuICAgIHdpZHRoOiBhdXRvICFpbXBvcnRhbnQ7XHJcbiAgICBoZWlnaHQ6IDQwcHggIWltcG9ydGFudDtcclxuICB9XHJcbiAgLnJlYWRvbmx5LXdyYXBwZXIge1xyXG4gICAgcG9pbnRlci1ldmVudHM6bm9uZTtcclxuICB9XHJcbiAgXHJcbiAgLnJlYWRvbmx5LXdyYXBwZXIgLnJlYWRvbmx5LWJsb2NrIHtcclxuICAgIHBvaW50ZXItZXZlbnRzOiBub25lO1xyXG4gIH0gIFxyXG4gIFxyXG4gIFxyXG4iXX0= */\"","import { Component, OnInit, ChangeDetectorRef, ViewChild, ViewChildren,ElementRef, Renderer2 } from '@angular/core';\r\n\r\nimport { MDB, DBConnection, OutGoingMessageConfigTCP, OutGoingMessageConfigHttp, AddSystemBasicInformation, AddSystemIntegrationProtocol, OutGoingDBConnection, AddSystemIntegrationProtocolOutgoing, HttpJSON, IncomingMDBJSOn, IncomingMDBXML, DBConnetionXML, IncomingDbConntionJson, OutgoingHttpMessageConfigJSON, MDBoutingXMl, MDBoutJSon, eJBXMLincoming, incomingEJBJSOn, ejbXMloutgoing, EjboutgoingJson, DboutgoingXMl, DboutgoingJson, IncomingMessageConfigHttpXML, IncomingQueueMDBXML, Incomingijmsueue, IncomingMDBExcelFlatCsv, IncDBCredenatils, IncomingMessageConfigTCP } from '../add-system-incoming-message-tcp/add-system';\r\nimport { AddSystemService } from 'src/app/shared/services/addSys/add-system.service';\r\nimport Swal from 'sweetalert2';\r\n import {Address4, Address6} from 'ip-address';\r\n// export var ipv4 = IpAddress.Address4;\r\n// export var ipv6 = IpAddress.Address6;\r\n@Component({\r\n  selector: 'app-add-system-incoming-message-tcp',\r\n  templateUrl: './add-system-incoming-message-tcp.component.html',\r\n  styleUrls: ['./add-system-incoming-message-tcp.component.css']\r\n})\r\nexport class AddSystemIncomingMessageTcpComponent implements OnInit {\r\n  showFolderName:boolean;\r\n  hideBasic:boolean;\r\n  tabText: any=\"Incoming\";\r\n  mdbQueueInc=['IBM','JMS'];\r\n\r\n  addSysBasic=new AddSystemNew();//basic info object\r\nchannelService=new MdmtSystemChannel;  \r\n\r\nmdmtSystemChannel:Array<MdmtSystemChannel>=[];//both incoming and outgoing\r\n// mdmtSystemChannelIncAll:any;\r\nmdmtSystemChannelIncAll:Array<MdmtSystemChannel>=[];//only for all-->incoming protocol\r\nmdmtSystemChannelOutAll:Array<MdmtSystemChannel>=[];//only for all-->incoming protocol\r\n// sending to backedn\r\nmdmtSystemDto=new MdmtSystemDto();\r\n  incomingIntegrationProtocol: Array<AddSystemIntegrationProtocol>=[];\r\n  mdmtSystemService:Array<MdmtSystemService>=[];//this is same for iso,xml and json every thing\r\n  mdmtSystemServiceAllInc:Array<MdmtSystemService>=[];//only aLl Incoming service(3rd)screen\r\n  mdmtSystemServiceAllOut:Array<MdmtSystemService>=[];//only All outgoing service(3rd )screen\r\n  // chceking\r\n  protocolForBothIncOut=new MdmtSystemChannel();\r\n  protocolAllInc=new MdmtSystemChannel;//only All outgoing service(3rd )screen\r\n  protocolAllOut=new MdmtSystemChannel;//only All Inc service(3rd )screen\r\n  showProtocol: boolean;\r\n  msgType: any;\r\n  dataType: any[];\r\n  incProtocol: any;\r\n  incDataType: any;\r\n  showTab: boolean;\r\n  showServiceScreen: boolean;\r\n  matLabel1: string;\r\n  matLabel2: string;\r\n  matLabel3: string;\r\n  matLabel4: string;\r\n  showProtocolForAllInc: boolean;\r\n  showProtocolForAllOut:boolean\r\n  onlyInc: boolean;\r\n  showServiceScreeAllOut: boolean;\r\n  queueType: any;\r\n  currentUser: string;\r\n  selectedIndex: number=0;\r\n  showAuditLog: boolean;\r\n  addSysRespData: any;\r\n  selectedFiles: any;\r\n  sizeOfFile: any;\r\n  currentFileUpload: any;\r\n  showProgressbar: boolean;\r\n  messageBasisIso: any[]=[];\r\n  messageKeyIso: any;\r\n  typeDataIso: any;\r\n  headerValueIso: any;\r\n  isoRespData: any[]=[];\r\n  xmlRespData: any;\r\n  matLabel_header: string;\r\n  matLabel5: string;\r\n  headerTagData: any;\r\n  afterFinish: boolean;\r\n  fileName: any;\r\n  selectedDocumentTypes2: any[] = [];\r\n  headerTagData1: any[]=[];\r\n  selectedDocumentTypes2Out: any[]=[];\r\n  headerTagDataOut: any[]=[];\r\n  headerTagData1out: any[]=[];\r\n  clickedFinishButton: boolean=false;\r\n  // nodeAndTagName:[]=[{'node':'','tagName':''}]\r\n  sysCodeError : any;\r\n  isSysCodeAlreadyExist : boolean = false;\r\n  desSystem: any[]=[];\r\n  destination: any;\r\n  uploadXmlResp: any;\r\n  outProtocol: any;\r\n  OutDataType: any;\r\n  tempArrayList : any[] = [];\r\n\r\n  // unamePattern = \"^[a-z0-9_-]{8,15}$\";\r\n  unamePattern = \"^(?=\\d+\\.\\d+\\.\\d+\\.\\d+$)(?:(?:25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]|[0-9])\\.?){4}$\";\r\n  invalidIp: boolean=true;\r\n  invalidIp1: boolean=true;\r\n  showFinishallOut: boolean;\r\n  fileNameOut: any;\r\n  constructor(private addSystem:AddSystemService,\r\n    private elRef: ElementRef,\r\n    private renderer: Renderer2,\r\n    ){}\r\n  ngOnInit()\r\n  { this.currentUser = localStorage.getItem('userFromLogin');\r\n  this.addSysBasic.messsageType=\"null\";\r\n  this.protocolAllInc.messageChannel=\"null\";\r\n  this.protocolAllOut.messageChannel=\"null\"\r\n  this.protocolForBothIncOut.messageChannel=\"null\"\r\n      this.mdmtSystemService.push({dataType:'',headerValue:'',id:'',messageBasis:'',messageKey:'',systemChannelId:'',encryption:'No Encryption',headerTag:''});\r\n      this.mdmtSystemServiceAllOut.push({id:'',dataType:'',headerValue:'',messageBasis:'',messageKey:'',systemChannelId:'',headerTag:'',encryption:'No Encryption'});\r\n      this.mdmtSystemServiceAllInc.push({id:'',dataType:'',headerValue:'',messageBasis:'',messageKey:'',systemChannelId:'',encryption:'No Encryption',headerTag:''});\r\n      this.fetchingHeadertag();\r\n  }\r\n  allowNumbersOnly(n) {\r\n    \r\n    const pattern = /[0-9\\+\\-\\ ]/;\r\n  let inputChar = String.fromCharCode(n.charCode);\r\n\r\n      if (!pattern.test(inputChar) && n.charCode != '0') {\r\n          n.preventDefault();\r\n      }\r\n}\r\n\r\n  onNextOfBasicInfo()\r\n  {\r\n    if(this.addSysBasic.medianIp === this.addSysBasic.sourceIp){\r\n      Swal.fire({text:'Median IP and External IP should not be same'})\r\n      return;\r\n    }\r\n    if(this.addSysBasic.medianPort === this.addSysBasic.sourcePort){\r\n      Swal.fire({text:'Median Port and External Port should not be same'})\r\n      return;\r\n    }\r\n   this.checkCode(this.addSysBasic.systemCode);\r\n    if(this.addSysBasic.messsageType=='I'|| this.addSysBasic.messsageType=='O'){\r\n    this.hideBasic=true;\r\n    this.showProtocol=true;\r\n    this.showTab=false;\r\n    }\r\n    else if(this.addSysBasic.messsageType=='A')\r\n    {\r\n      this.showTab=true;\r\n      this.hideBasic=true;\r\n      this.showProtocol=false;\r\n      this.showProtocolForAllInc=true;\r\n    }\r\n  }\r\n  onsystemMessageSelection(event:any)\r\n  {\r\n    \r\n    if(event=='I')\r\n    { event=\"Incoming\";\r\n      this.msgType=event;\r\n    }\r\n    else if(event=='O')\r\n    { event=\"Outgoing\";\r\n      this.msgType=event;\r\n    }\r\n   \r\n  }\r\n  reset(){\r\n    console.log(\"enter inside reset\");\r\n    this.outProtocol='';\r\n    this.OutDataType='';\r\n    this.incProtocol='';\r\n    this.incDataType='';\r\n    // incProtocol\r\n    // incDataType=''\r\n\r\n  }\r\n  // Protocol sceltion\r\n  onProtocalSlection(protocol)\r\n  {\r\n    console.log(protocol);\r\n    this.incDataType='';\r\n    this.dataType=[];\r\n    this.incProtocol=protocol;\r\n    this.protocolForBothIncOut.messageFormat='';\r\n    if(protocol=='TCP/IP')\r\n    {\r\n      this.dataType=['ISO 8583 1987', 'ISO 8583 1993', 'ISO 8583 2003']\r\n    }\r\n    else if(protocol=='Https/Http')\r\n    {this.dataType=[];\r\n      this.dataType=['XML','JSON'];\r\n    }\r\n    else if(protocol=='MDB')\r\n    {this.dataType=[];\r\n      this.dataType=['XML','JSON','CSV/EXCEL','FLATFILE'];\r\n    }\r\n    else if(protocol=='EJB')\r\n    {\r\n      this.dataType=['XML','JSON','CSV/EXCEL','FLATFILE'];\r\n    }\r\n    else if(protocol=='DB Connection')\r\n    {\r\n      this.dataType=['XML','JSON','CSV/EXCEL','FLATFILE'];\r\n    }\r\n    \r\n  }\r\n  onProtocalSlectionOutgoing(protocol)\r\n  {\r\n    console.log(protocol);\r\n    this.OutDataType='';\r\n    this.dataType=[];\r\n    this.outProtocol=protocol;\r\n    if(protocol=='TCP/IP')\r\n    {\r\n      this.dataType=['ISO 8583 1987', 'ISO 8583 1993', 'ISO 8583 2003']\r\n    }\r\n    else if(protocol=='Https/Http')\r\n    {this.dataType=[];\r\n      this.dataType=['XML','JSON'];\r\n    }\r\n    else if(protocol=='MDB')\r\n    {this.dataType=[];\r\n      this.dataType=['XML','JSON','CSV/EXCEL','FLATFILE'];\r\n    }\r\n    else if(protocol=='EJB')\r\n    {\r\n      this.dataType=['XML','JSON','CSV/EXCEL','FLATFILE'];\r\n    }\r\n    else if(protocol=='DB Connection')\r\n    {\r\n      this.dataType=['XML','JSON','CSV/EXCEL','FLATFILE'];\r\n    }\r\n    \r\n  }\r\n  incomingDataypeSelection(dataType)\r\n  {\r\n    console.log(dataType);\r\n    this.incDataType=dataType;\r\n  }\r\n  OutgoingDataypeSelection(dataType)\r\n  {\r\n    console.log(dataType);\r\nthis.OutDataType=dataType;\r\n  }\r\n  onPreviousToBasic()\r\n  {\r\n    this.showProtocol=false;\r\n    this.hideBasic=false;\r\n    this.showTab=false;\r\n  }\r\n  tabChanged(event)\r\n  { \r\n    console.log(event);\r\n    this.tabText=event.tab.textLabel;\r\n  console.log(\"tabText\",this.tabText);\r\n    this.showProtocolForAllOut=true;\r\n  }\r\n  nextToServcieFromInc(protocol)\r\n  {\r\n    console.log(\"next\");\r\n \r\n    this.showProtocolForAllInc=false;\r\n    \r\n    if(protocol.messageChannel==\"TCP/IP\" && protocol.messageFormat==\"ISO 8583 1987\" ||protocol.messageFormat==\"ISO 8583 1993\" ||protocol.messageFormat=='ISO 8583 2003'){\r\n      \r\n      this.fetchingIso();\r\n      this.matLabel_header=\"Header\";\r\n      this.matLabel1=\"Field No\";\r\n      this.matLabel2=\"Field Name\";\r\n      this.matLabel3=\"Data Type\";\r\n      this.matLabel4=\"Default Value\";\r\n      this.matLabel5=\"Encryption Type\";\r\n    }\r\n    else if(protocol.messageChannel==\"Https/Http\" && protocol.messageFormat==\"XML\"){\r\n\r\n      this.showServiceScreen=true;\r\n      // this.fetchingXMl();\r\n      debugger;\r\n        this.matLabel1=\"null\";\r\n        this.matLabel_header=\"Header\";\r\n        this.matLabel2=\"Tag \";\r\n        this.matLabel3=\"Data Type\";\r\n        this.matLabel4=\"Default Value\";\r\n        this.matLabel5=\"Encryption Type\";\r\n      }\r\n      else if(protocol.messageChannel==\"Https/Http\" && protocol.messageFormat==\"JSON\"){\r\n        this.showServiceScreen=true;\r\n        this.matLabel1=null;\r\n        this.matLabel2=\"Key\";\r\n        this.matLabel_header=\"Header\";\r\n        this.matLabel3=\"Data Type\";\r\n        this.matLabel4=\"Default value\";\r\n        this.matLabel5=\"Encryption Type\";\r\n      }\r\n      else if(protocol.messageChannel==\"MDB\" && protocol.messageFormat==\"XML\"){\r\n        this.showServiceScreen=true;\r\n        this.matLabel1=\"Node\";\r\n        this.matLabel2=\"Tag Name\";\r\n        this.matLabel3=\"Data Type\";\r\n        this.matLabel4=\"Default value\";\r\n      }\r\n      else if(protocol.messageChannel==\"MDB\" && protocol.messageFormat==\"JSON\"){\r\n        this.showServiceScreen=true;\r\n        this.matLabel1=null;\r\n        this.matLabel2=\"Key\";\r\n        this.matLabel3=\"Data Type\";\r\n        this.matLabel4=\"Default value\";\r\n      }\r\n      else if(protocol.messageChannel==\"MDB\" && protocol.messageFormat==\"CSV/EXCEL\"){\r\n       this.showServiceScreen=true;\r\n       }\r\n       else if(protocol.messageChannel==\"MDB\" && protocol.messageFormat==\"FLATFILE\"){\r\n        this.showServiceScreen=true;\r\n        \r\n        }\r\n        else if(protocol.messageChannel==\"EJB\" && protocol.messageFormat==\"XML\"){\r\n          this.showServiceScreen=true;\r\n         this.matLabel1=\"Node\";\r\n         this.matLabel2=\"Tag Name\";\r\n         this.matLabel3=\"Data Type\";\r\n         this.matLabel4=\"Default value\";\r\n       }\r\n       else if(protocol.messageChannel==\"EJB\" && protocol.messageFormat==\"JSON\"){\r\n        this.showServiceScreen=true;\r\n         this.matLabel1=null;\r\n         this.matLabel2=\"Key\";\r\n         this.matLabel3=\"Data Type\";\r\n         this.matLabel4=\"Default value\";\r\n       } \r\n       else if(protocol.messageChannel==\"EJB\" && protocol.messageFormat==\"FLATFILE\"){\r\n        this.showServiceScreen=true;\r\n        }\r\n        else if(protocol.messageChannel==\"EJB\" && protocol.messageFormat==\"CSV/EXCEL\"){\r\n          this.showServiceScreen=true;\r\n        }\r\n        else if(protocol.messageChannel==\"EJB\" && protocol.messageFormat==\"JSON\"){\r\n          this.showServiceScreen=true;\r\n           this.matLabel1=null;\r\n           this.matLabel2=\"Key\";\r\n           this.matLabel3=\"Data Type\";\r\n           this.matLabel4=\"Default value\";\r\n         }\r\n         else if(protocol.messageChannel==\"DB Connection\" && protocol.messageFormat==\"XML\"){\r\n          this.showServiceScreen=true;\r\n           this.matLabel1=null;\r\n           this.matLabel2=\"Column Name\";\r\n           this.matLabel3=\"Data Type\";\r\n           this.matLabel4=\"Default value\";\r\n         }\r\n         else if(protocol.messageChannel==\"DB Connection\" && protocol.messageFormat==\"JSON\"){\r\n          this.showServiceScreen=true;\r\n           this.matLabel1=null;\r\n           this.matLabel2=\"Column Name\";\r\n           this.matLabel3=\"Data Type\";\r\n           this.matLabel4=\"Default value\";\r\n         }\r\n         else if(protocol.messageChannel==\"DB Connection\" && protocol.messageFormat==\"CSV/EXCEL\"){\r\n          this.showServiceScreen=true;\r\n          \r\n         }\r\n         else if(protocol.messageChannel==\"DB Connection\" && protocol.messageFormat==\"FLATFILE\"){\r\n          this.showServiceScreen=true;\r\n        }\r\n  }\r\n  // For Incoming and outgoing --->\r\n  onNextOfProtocol(protocol)\r\n  { console.log(protocol);\r\n    console.log(this.addSysBasic);\r\n  //  if(this.addSysBasic.messsageType=='I' ||this.addSysBasic.messsageType=='O'){\r\n    this.showProtocol=false;\r\n    if(protocol.messageChannel==\"TCP/IP\" && protocol.messageFormat==\"ISO 8583 1993\" ||(protocol.messageChannel==\"TCP/IP\" && protocol.messageFormat==\"ISO 8583 1987\" )||(protocol.messageChannel==\"TCP/IP\" && protocol.messageFormat==\"ISO 8583 2003\" )){\r\n      console.log(\"this if1\");\r\n      this.fetchingIso();\r\n     this.onlyInc=true;\r\n     this.matLabel_header=\"Header\"\r\n      this.matLabel1=\"Field No\";\r\n      this.matLabel2=\"Field Name\";\r\n      this.matLabel3=\"Data Type\";\r\n      this.matLabel4=\"Default Value\";\r\n      this.matLabel5=\"Encryption Type\";\r\n    } \r\n\r\n   else if(protocol.messageChannel==\"Https/Http\" && protocol.messageFormat==\"XML\"){\r\n     console.log(\"her xml\");\r\n    this.onlyInc=true;\r\n    // this.fetchingXMl();\r\n      this.matLabel1=\"null\";\r\n      this.matLabel2=\"Tag\";\r\n      this.matLabel3=\"Data Type\";\r\n      this.matLabel4=\"Default Value\";\r\n      this.matLabel5=\"Encryption Type\";\r\n    }\r\n    else if(protocol.messageChannel==\"Https/Http\" && protocol.messageFormat==\"JSON\"){\r\n      console.log(protocol.messageChannel,protocol.messageFormat);\r\n      this.onlyInc=true;\r\n      this.matLabel1=null;\r\n      this.matLabel2=\"Tag\";\r\n      this.matLabel3=\"Data Type\";\r\n      this.matLabel4=\"Default value\";\r\n      this.matLabel5=\"Encryption Type\";\r\n    }\r\n    else if(protocol.messageChannel==\"MDB\" && protocol.messageFormat==\"XML\"){\r\n      this.onlyInc=true;\r\n      this.matLabel1=\"Node\";\r\n      this.matLabel2=\"Tag Name\";\r\n      this.matLabel3=\"Data Type\";\r\n      this.matLabel4=\"Default value\";\r\n      this.matLabel5=\"Encryption Type\";\r\n    }\r\n    else if(protocol.messageChannel==\"MDB\" && protocol.messageFormat==\"JSON\"){\r\n      this.onlyInc=true;\r\n      this.matLabel1=null;\r\n      this.matLabel2=\"Key\";\r\n      this.matLabel3=\"Data Type\";\r\n      this.matLabel4=\"Default value\";\r\n      this.matLabel5=\"Encryption Type\";\r\n    }\r\n    else if(protocol.messageChannel==\"MDB\" && protocol.messageFormat==\"CSV/EXCEL\"){\r\n     this.onlyInc=true;\r\n     }\r\n     else if(protocol.messageChannel==\"MDB\" && protocol.messageFormat==\"FLATFILE\"){\r\n      this.onlyInc=true;\r\n      \r\n      }\r\n      else if(protocol.messageChannel==\"EJB\" && protocol.messageFormat==\"XML\"){\r\n        this.onlyInc=true;\r\n       this.matLabel1=\"Node\";\r\n       this.matLabel2=\"Tag Name\";\r\n       this.matLabel3=\"Data Type\";\r\n       this.matLabel4=\"Default value\";\r\n       this.matLabel5=\"Encryption Type\";\r\n     }\r\n     else if(protocol.messageChannel==\"EJB\" && protocol.messageFormat==\"JSON\"){\r\n      this.onlyInc=true;\r\n       this.matLabel1=null;\r\n       this.matLabel2=\"Key\";\r\n       this.matLabel3=\"Data Type\";\r\n       this.matLabel4=\"Default value\";\r\n       this.matLabel5=\"Encryption Type\";\r\n     } \r\n     else if(protocol.messageChannel==\"EJB\" && protocol.messageFormat==\"FLATFILE\"){\r\n      this.onlyInc=true;\r\n      }\r\n      else if(protocol.messageChannel==\"EJB\" && protocol.messageFormat==\"CSV/EXCEL\"){\r\n        this.onlyInc=true;\r\n      }\r\n      else if(protocol.messageChannel==\"EJB\" && protocol.messageFormat==\"JSON\"){\r\n        this.onlyInc=true;\r\n         this.matLabel1=null;\r\n         this.matLabel2=\"Key\";\r\n         this.matLabel3=\"Data Type\";\r\n         this.matLabel4=\"Default value\";\r\n         this.matLabel5=\"Encryption Type\";\r\n       }\r\n       else if(protocol.messageChannel==\"DB Connection\" && protocol.messageFormat==\"XML\"){\r\n        this.onlyInc=true;\r\n         this.matLabel1=null;\r\n         this.matLabel2=\"Column Name\";\r\n         this.matLabel3=\"Data Type\";\r\n         this.matLabel4=\"Default value\";\r\n         this.matLabel5=\"Encryption Type\";\r\n       }\r\n       else if(protocol.messageChannel==\"DB Connection\" && protocol.messageFormat==\"JSON\"){\r\n        this.onlyInc=true;\r\n         this.matLabel1=null;\r\n         this.matLabel2=\"Column Name\";\r\n         this.matLabel3=\"Data Type\";\r\n         this.matLabel4=\"Default value\";\r\n         this.matLabel5=\"Encryption Type\";\r\n       }\r\n       else if(protocol.messageChannel==\"DB Connection\" && protocol.messageFormat==\"CSV/EXCEL\"){\r\n        this.onlyInc=true;\r\n        \r\n       }\r\n       else if(protocol.messageChannel==\"DB Connection\" && protocol.messageFormat==\"FLATFILE\"){\r\n        this.onlyInc=true;\r\n      }\r\n    // }\r\n    \r\n  }\r\n  // all \r\n  nextStep(tabIndex : number) {\r\n    console.log(tabIndex);\r\n    if (this.selectedIndex < 2) {\r\n      this.selectedIndex = tabIndex + 1;\r\n    }\r\n  }\r\n\r\n  checkCode(code : any){\r\n    if(code){\r\n      this.addSystem.validateCode(code).subscribe((result) => {\r\n        console.log(result);\r\n        this.isSysCodeAlreadyExist = result.exists;\r\n        this.sysCodeError = result.response;\r\n      });\r\n    }\r\n    else{\r\n      this.isSysCodeAlreadyExist = true;\r\n      this.sysCodeError = \"\";\r\n    }\r\n  }\r\n\r\n\r\n  previousStep(tabIndex : number) {\r\n    console.log(tabIndex);\r\n    if (this.selectedIndex > 0) {\r\n      this.selectedIndex = tabIndex - 2;\r\n    }\r\n  }\r\n  // All out\r\n  onNextOfProtocolAllOut(protocol)\r\n  {\r\n    console.log(protocol);\r\n  \r\n      this.showProtocolForAllOut=false;\r\n      if(protocol.messageChannel==\"TCP/IP\" && protocol.messageFormat==\"ISO 8583 1987\" ||protocol.messageFormat==\"ISO 8583 1993\" ||protocol.messageFormat=='ISO 8583 2003'){\r\n       this.fetchingIso();\r\n       this.matLabel_header=\"Header\";\r\n        this.matLabel1=\"Field No\";\r\n        this.matLabel2=\"Field Name\";\r\n        this.matLabel3=\"Data Type\";\r\n        this.matLabel4=\"Default Value\";\r\n        this.matLabel5=\"Encryption Type\";\r\n      }\r\n     else if(protocol.messageChannel==\"Https/Http\" && protocol.messageFormat==\"XML\"){\r\n      //  this.fetchingXMl();\r\n      this.showServiceScreeAllOut=true;\r\n        this.matLabel1=\"null\";\r\n        this.matLabel_header=\"Header\";\r\n        this.matLabel2=\"Tag\";\r\n        this.matLabel3=\"Data Type\";\r\n        this.matLabel4=\"Default Value\";\r\n        this.matLabel5=\"Encryption Type\";\r\n      }\r\n      else if(protocol.messageChannel==\"Https/Http\" && protocol.messageFormat==\"JSON\"){\r\n        this.showServiceScreeAllOut=true;\r\n        this.matLabel1=null;\r\n        this.matLabel2=\"Key\";\r\n        this.matLabel3=\"Data Type\";\r\n        this.matLabel4=\"Default value\";\r\n      }\r\n      else if(protocol.messageChannel==\"MDB\" && protocol.messageFormat==\"XML\"){\r\n        this.showServiceScreeAllOut=true;\r\n        this.matLabel1=\"Node\";\r\n        this.matLabel2=\"Tag Name\";\r\n        this.matLabel3=\"Data Type\";\r\n        this.matLabel4=\"Default value\";\r\n      }\r\n      else if(protocol.messageChannel==\"MDB\" && protocol.messageFormat==\"JSON\"){\r\n        this.showServiceScreeAllOut=true;\r\n        this.matLabel1=null;\r\n        this.matLabel2=\"Key\";\r\n        this.matLabel3=\"Data Type\";\r\n        this.matLabel4=\"Default value\";\r\n      }\r\n      else if(protocol.messageChannel==\"MDB\" && protocol.messageFormat==\"CSV/EXCEL\"){\r\n       this.showServiceScreeAllOut=true;\r\n       }\r\n       else if(protocol.messageChannel==\"MDB\" && protocol.messageFormat==\"FLATFILE\"){\r\n        this.showServiceScreeAllOut=true;\r\n        \r\n        }\r\n        else if(protocol.messageChannel==\"EJB\" && protocol.messageFormat==\"XML\"){\r\n          this.showServiceScreeAllOut=true;\r\n         this.matLabel1=\"Node\";\r\n         this.matLabel2=\"Tag Name\";\r\n         this.matLabel3=\"Data Type\";\r\n         this.matLabel4=\"Default value\";\r\n       }\r\n       else if(protocol.messageChannel==\"EJB\" && protocol.messageFormat==\"JSON\"){\r\n        this.showServiceScreeAllOut=true;\r\n         this.matLabel1=null;\r\n         this.matLabel2=\"Key\";\r\n         this.matLabel3=\"Data Type\";\r\n         this.matLabel4=\"Default value\";\r\n       } \r\n       else if(protocol.messageChannel==\"EJB\" && protocol.messageFormat==\"FLATFILE\"){\r\n        this.showServiceScreeAllOut=true;\r\n        }\r\n        else if(protocol.messageChannel==\"EJB\" && protocol.messageFormat==\"CSV/EXCEL\"){\r\n          this.showServiceScreeAllOut=true;\r\n        }\r\n        else if(protocol.messageChannel==\"EJB\" && protocol.messageFormat==\"JSON\"){\r\n          this.showServiceScreeAllOut=true;\r\n           this.matLabel1=null;\r\n           this.matLabel2=\"Key\";\r\n           this.matLabel3=\"Data Type\";\r\n           this.matLabel4=\"Default value\";\r\n         }\r\n         else if(protocol.messageChannel==\"DB Connection\" && protocol.messageFormat==\"XML\"){\r\n          this.showServiceScreeAllOut=true;\r\n           this.matLabel1=null;\r\n           this.matLabel2=\"Column Name\";\r\n           this.matLabel3=\"Data Type\";\r\n           this.matLabel4=\"Default value\";\r\n         }\r\n         else if(protocol.messageChannel==\"DB Connection\" && protocol.messageFormat==\"JSON\"){\r\n          this.showServiceScreeAllOut=true;\r\n           this.matLabel1=null;\r\n           this.matLabel2=\"Column Name\";\r\n           this.matLabel3=\"Data Type\";\r\n           this.matLabel4=\"Default value\";\r\n         }\r\n         else if(protocol.messageChannel==\"DB Connection\" && protocol.messageFormat==\"CSV/EXCEL\"){\r\n          this.showServiceScreeAllOut=true;\r\n          \r\n         }\r\n         else if(protocol.messageChannel==\"DB Connection\" && protocol.messageFormat==\"FLATFILE\"){\r\n          this.showServiceScreeAllOut=true;\r\n        }\r\n      \r\n  }\r\n  moveToProtocol()\r\n  {\r\n    this.onlyInc=false;\r\n    this.showProtocol=true;\r\n    this.showAuditLog=false;\r\n  }\r\n  moveIncProtocolAll()\r\n  {\r\nthis.showProtocolForAllInc=true;\r\nthis.showServiceScreen=false;\r\n  }\r\n  moveToProtocolAllOut()\r\n  {\r\n    this.showProtocolForAllOut=true;\r\n    this.showServiceScreeAllOut=false;\r\n  }\r\n  onResetOfProtocol(protocolAllForReset)\r\n  {console.log(\"on reset of Inc all\",protocolAllForReset);\r\n\r\nif(this.addSysBasic.messsageType=='I'||this.addSysBasic.messsageType=='O'){\r\n  console.log(\"here in 1 if\");\r\n  this.protocolForBothIncOut.messageChannel=\" \";\r\n  this.protocolForBothIncOut.messageFormat=\" \";\r\n}\r\n  else if(this.addSysBasic.messsageType=='A' && this.tabText==\"Incoming\")\r\n  { console.log(\"here inc and all\");\r\n    this.protocolAllInc.messageChannel=\" \";\r\n    this.protocolAllInc.messageFormat=\" \"\r\n  }\r\n  else if(this.addSysBasic.messsageType=='A' && this.tabText==\"Outgoing\"){\r\n    this.protocolAllOut.messageFormat=\" \";\r\n    this.protocolAllOut.messageChannel=\" \"\r\n  }\r\n    // this.protocolAllInc=new MdmtSystemChannel()\r\n  }\r\n  onResetOFAllInc()\r\n  {\r\n   \r\n    this.mdmtSystemServiceAllInc.forEach(element=>{\r\n      element.dataType='',\r\n      element.headerValue='',\r\n      element.id='',\r\n      element.messageBasis='',\r\n      element.messageKey='',\r\n      element.systemChannelId='';\r\n      element.headerTag='',\r\n      element.encryption='No Encryption'\r\n    })\r\n  }\r\n  addOfIncAll()\r\n  {\r\n    this.mdmtSystemServiceAllInc.push({id:'',headerValue:'',messageKey:'',systemChannelId:'',dataType:'',messageBasis:'',headerTag:'',encryption:'No Encryption'});\r\n  }\r\n  onDeleteOFAllInc(i)\r\n  {\r\n    this.mdmtSystemServiceAllInc.splice(i,1);\r\n  }\r\n  onResetOfProtocolAllOut()\r\n  {\r\n    this.protocolAllOut=new MdmtSystemChannel;\r\n  }\r\n  add()\r\n  {\r\n    // let row =new MdmtSystemService();\r\n    \r\n    // this.mdmtSystemService.push(row);\r\n    // console.log(this.mdmtSystemService);\r\n    this.mdmtSystemService.push({\r\n      dataType:'',\r\n      headerValue:'',\r\n      id:'',\r\n      messageBasis:'',\r\n      messageKey:'',\r\n      systemChannelId:'',\r\n      encryption:'No Encryption',\r\n      headerTag:''\r\n\r\n    })\r\n  }\r\n  onMdbQueue(event){\r\n   this.queueType=event.value;\r\n  }\r\n  onFisnih()\r\n \r\n  {  \r\n    \r\n    if (this.mdmtSystemService.some( mdmtSystemService => mdmtSystemService['headerTag'] === 'OPERATION') && this.mdmtSystemService.some( mdmtSystemService => mdmtSystemService['headerTag'] === 'SERVICE')  ){\r\n      console.log(\"enter inside finish\");\r\n      this.afterFinish=true;\r\n      if(this.addSysBasic.messsageType=='I' ||this.addSysBasic.messsageType=='O'){\r\n        this.mdmtSystemChannel.push(this.protocolForBothIncOut);\r\n      console.log(\"in if\",this.mdmtSystemService);\r\n      this.addSysBasic.sysChannel=this.mdmtSystemChannel;\r\n      this.addSysBasic.sysChannel[0].messageType=this.addSysBasic.messsageType;\r\n  \r\n      this.addSysBasic.sysChannel.forEach(element => {\r\n        element.sysService=this.mdmtSystemService;\r\n      });\r\n  \r\n      console.log(\"complete data\",this.addSysBasic);\r\n      console.log(\"serv\", this.channelService.sysService);\r\n  \r\n      // this.mdmtSystemChannel.push(this.protocolForBothIncOut);\r\n      // this.mdmtSystemDto.mdmtSystemService=this.mdmtSystemService;\r\n      // this.mdmtSystemDto.mdmtSystemChannel=this.mdmtSystemChannel;\r\n      // this.mdmtSystemDto.mdmtSystem=this.addSysBasic;\r\n      console.log(\"this.mdmtSystemDto.mdmtSystemService\",this.mdmtSystemDto.mdmtSystemService);\r\n    }\r\n    else{\r\n      console.log(\"in else\");\r\n      // this.mdmtSystemDto.mdmtSystem=this.addSysBasic;\r\n  \r\n      this.mdmtSystemChannel.push(this.protocolAllInc);\r\n      this.mdmtSystemChannel.push(this.protocolAllOut);\r\n      this.addSysBasic.sysChannel=this.mdmtSystemChannel;\r\n     \r\n      this.addSysBasic.sysChannel[0].messageType=\"I\";\r\n      this.addSysBasic.sysChannel[1].messageType=\"O\";\r\n      this.addSysBasic.sysChannel[0].sysService=this.mdmtSystemServiceAllInc;\r\n      this.addSysBasic.sysChannel[1].sysService=this.mdmtSystemServiceAllOut;\r\n      // this.addSysBasic.sysChannel[0].sysService.splice(0,0,this.mdmtSystemServiceAllInc)\r\n      // this.addSysBasic.sysChannel[0].sysService.concat(this.mdmtSystemServiceAllInc)\r\n      // this.addSysBasic.sysChannel[1].sysService.concat(this.mdmtSystemServiceAllOut)\r\n      // this.addSysBasic.sysChannel[0].sysService.splice(0,0,this.mdmtSystemServiceAllInc);\r\n      // this.addSysBasic.sysChannel[0].sysService.push(this.mdmtSystemServiceAllInc)\r\n      // this.mdmtSystemService.push(...this.mdmtSystemServiceAllInc,...this.mdmtSystemServiceAllOut);\r\n      console.log(\"all\",this.mdmtSystemService);\r\n    //  this.addSysBasic.sysChannel.map(el=>{el.sysService=this.mdmtSystemService});\r\n      console.log(\"complete data\",this.addSysBasic);\r\n      // this.mdmtSystemDto.mdmtSystemService=this.mdmtSystemService;\r\n      // this.mdmtSystemDto.mdmtSystemChannel=this.mdmtSystemChannel;\r\n    } \r\n  \r\n      \r\n      this.addSystem.submittingAddSystem(this.addSysBasic,this.currentUser).subscribe(addSysResp=>{\r\n        console.log(\"resp\",addSysResp);\r\n        if(addSysResp){\r\n          this.clickedFinishButton=true;\r\n          this.showAuditLog=true;\r\n          this.addSysRespData=addSysResp;\r\n          Swal.fire({text:'Record saved successfully'})}\r\n          this.showFinishallOut=true;\r\n          \r\n      },(\r\n        err=>{Swal.fire({text:'Server Error'})\r\n        this.afterFinish=false;\r\n      }\r\n      ));\r\n    }\r\n    else if (this.mdmtSystemServiceAllOut.some( mdmtSystemServiceAllOut => mdmtSystemServiceAllOut['headerTag'] === 'OPERATION') && this.mdmtSystemServiceAllOut.some( mdmtSystemServiceAllOut => mdmtSystemServiceAllOut['headerTag'] === 'SERVICE')  ){\r\n      console.log(\"enter inside finish\");\r\n      this.afterFinish=true;\r\n      if(this.addSysBasic.messsageType=='I' ||this.addSysBasic.messsageType=='O'){\r\n        this.mdmtSystemChannel.push(this.protocolForBothIncOut);\r\n      console.log(\"in if\",this.mdmtSystemService);\r\n      this.addSysBasic.sysChannel=this.mdmtSystemChannel;\r\n      this.addSysBasic.sysChannel[0].messageType=this.addSysBasic.messsageType;\r\n  \r\n      this.addSysBasic.sysChannel.forEach(element => {\r\n        element.sysService=this.mdmtSystemService;\r\n      });\r\n  \r\n      console.log(\"complete data\",this.addSysBasic);\r\n      console.log(\"serv\", this.channelService.sysService);\r\n  \r\n      // this.mdmtSystemChannel.push(this.protocolForBothIncOut);\r\n      // this.mdmtSystemDto.mdmtSystemService=this.mdmtSystemService;\r\n      // this.mdmtSystemDto.mdmtSystemChannel=this.mdmtSystemChannel;\r\n      // this.mdmtSystemDto.mdmtSystem=this.addSysBasic;\r\n      console.log(\"this.mdmtSystemDto.mdmtSystemService\",this.mdmtSystemDto.mdmtSystemService);\r\n    }\r\n    else{\r\n      console.log(\"in else\");\r\n      // this.mdmtSystemDto.mdmtSystem=this.addSysBasic;\r\n  \r\n      this.mdmtSystemChannel.push(this.protocolAllInc);\r\n      this.mdmtSystemChannel.push(this.protocolAllOut);\r\n      this.addSysBasic.sysChannel=this.mdmtSystemChannel;\r\n     \r\n      this.addSysBasic.sysChannel[0].messageType=\"I\";\r\n      this.addSysBasic.sysChannel[1].messageType=\"O\";\r\n      this.addSysBasic.sysChannel[0].sysService=this.mdmtSystemServiceAllInc;\r\n      this.addSysBasic.sysChannel[1].sysService=this.mdmtSystemServiceAllOut;\r\n      // this.addSysBasic.sysChannel[0].sysService.splice(0,0,this.mdmtSystemServiceAllInc)\r\n      // this.addSysBasic.sysChannel[0].sysService.concat(this.mdmtSystemServiceAllInc)\r\n      // this.addSysBasic.sysChannel[1].sysService.concat(this.mdmtSystemServiceAllOut)\r\n      // this.addSysBasic.sysChannel[0].sysService.splice(0,0,this.mdmtSystemServiceAllInc);\r\n      // this.addSysBasic.sysChannel[0].sysService.push(this.mdmtSystemServiceAllInc)\r\n      // this.mdmtSystemService.push(...this.mdmtSystemServiceAllInc,...this.mdmtSystemServiceAllOut);\r\n      console.log(\"all\",this.mdmtSystemService);\r\n    //  this.addSysBasic.sysChannel.map(el=>{el.sysService=this.mdmtSystemService});\r\n      console.log(\"complete data\",this.addSysBasic);\r\n      // this.mdmtSystemDto.mdmtSystemService=this.mdmtSystemService;\r\n      // this.mdmtSystemDto.mdmtSystemChannel=this.mdmtSystemChannel;\r\n    } \r\n  \r\n      \r\n      this.addSystem.submittingAddSystem(this.addSysBasic,this.currentUser).subscribe(addSysResp=>{\r\n        console.log(\"resp\",addSysResp);\r\n        if(addSysResp){\r\n          this.clickedFinishButton=true;\r\n          this.showAuditLog=true;\r\n          this.addSysRespData=addSysResp;\r\n          Swal.fire({text:'Record saved successfully'})}\r\n          this.showFinishallOut=true;\r\n          \r\n      },(\r\n        err=>{Swal.fire({text:'Server Error'})\r\n        this.afterFinish=false;\r\n      }\r\n      ));\r\n    }\r\n  else{\r\n    Swal.fire({text:'Header value OPERATION and SERVICE are mandatory !'});\r\n  }\r\n  }\r\n  onResetOfAllOut()\r\n  {\r\n    this.mdmtSystemServiceAllOut.forEach(element=>{\r\n      element.dataType='',\r\n      element.headerValue='',\r\n      element.id='',\r\n      element.messageBasis='',\r\n      element.messageKey='',\r\n      element.headerTag=' ',\r\n      element.systemChannelId='';\r\n\r\n    })\r\n  }\r\n  onReset()\r\n  {console.log(\"this si reset\");\r\n    this.mdmtSystemService.forEach(element => {\r\n      element.dataType='',\r\n      element.headerValue='',\r\n      element.id='',\r\n      element.messageBasis='',\r\n      element.messageKey='',\r\n      element.systemChannelId='';\r\n      element.headerTag=''\r\n    });\r\n  }\r\n  onDelete(i)\r\n  {\r\n    this.mdmtSystemService.splice(i,1);\r\n    debugger\r\n    this.headerTagData1 = this.headerTagData1.filter((val, index) => index !== i);\r\n  \r\n  }\r\n  // Api for xml,iso and others\r\n  // gettingIso/Tcp record\r\nfetchingIso()\r\n{ this.showProgressbar=true;\r\n  this.addSystem.fetchingIsoForTcp().subscribe(isoResp=>{\r\n    this.isoRespData=isoResp;\r\n    if(isoResp)\r\n    {\r\n    if(this.addSysBasic.messsageType=='I' ||this.addSysBasic.messsageType=='O' )\r\n    {   this.onlyInc=true;\r\n      this.showProgressbar=false;\r\n      // for dropdown 2\r\n      this.messageBasisIso=isoResp.map((data)=>{\r\n        return data.fieldName;\r\n      });\r\n       // for dropdown 1\r\n       this.messageKeyIso=isoResp.map((data)=>{\r\n        return data.fieldNo;\r\n      });\r\n     \r\n      this.typeDataIso=isoResp.map((data)=>{\r\n        return data.dataType;\r\n      });\r\n      this.headerValueIso=isoResp.map((data)=>{\r\n        return data.headerValue\r\n      });\r\n    }\r\n    else if(this.addSysBasic.messsageType=='A'&&this.tabText=='Incoming')\r\n    { this.showServiceScreen=true;\r\n      this.showProgressbar=false;\r\n      this.onlyInc=false;\r\n      this.messageBasisIso=isoResp.map((data)=>{\r\n        return data.fieldName;\r\n      });\r\n       // for dropdown 2\r\n       this.messageKeyIso=isoResp.map((data)=>{\r\n        return data.fieldNo;\r\n      });\r\n      this.typeDataIso=isoResp.map((data)=>{\r\n        return data.dataType;\r\n      });\r\n      this.headerValueIso=isoResp.map((data)=>{\r\n        return data.headerValue\r\n      });\r\n      // this.mdmtSystemServiceAllInc=isoResp;\r\n\r\n    }\r\n    else if(this.addSysBasic.messsageType=='A'&&this.tabText=='Outgoing')\r\n    { console.log(\"this is  all out \");\r\n      this.showServiceScreeAllOut=true;\r\n      this.showProgressbar=false;\r\n      this.onlyInc=false;\r\n      this.messageBasisIso=isoResp.map((data)=>{\r\n        return data.fieldName;\r\n      });\r\n       // for dropdown 2\r\n       this.messageKeyIso=isoResp.map((data)=>{\r\n        return data.fieldNo;\r\n      });\r\n      this.typeDataIso=isoResp.map((data)=>{\r\n        return data.dataType;\r\n      });\r\n      this.headerValueIso=isoResp.map((data)=>{\r\n        return data.headerValue\r\n      });\r\n      // this.mdmtSystemServiceAllOut=isoResp;\r\n      \r\n\r\n    }\r\n  }\r\n   \r\n   \r\n  \r\n  })\r\n}\r\n\r\n//gettingxml records\r\nfetchingXMl()\r\n{\r\n  this.addSystem.gettinXMLmsgIncoming().subscribe(xmlResp=>{\r\n    console.log(xmlResp);\r\n    this.xmlRespData=xmlResp;\r\n    if(xmlResp)\r\n    {\r\n      if(this.addSysBasic.messsageType=='I' ||this.addSysBasic.messsageType=='O' )\r\n      {\r\n        this.onlyInc=true;\r\n        this.showProgressbar=false;\r\n        // for dropdown 1\r\n        this.messageBasisIso=xmlResp.map((data)=>{\r\n          return data.messageBasis;\r\n        });\r\n         // for dropdown 2\r\n       this.messageKeyIso=xmlResp.map((data)=>{\r\n        return data.messageKey;\r\n      });\r\n   \r\n   \r\n      //dopdwon3\r\n      this.typeDataIso=xmlResp.map((data)=>{\r\n        return data.dataType;\r\n      });\r\n      this.headerValueIso=xmlResp.map((data)=>{\r\n        return data.headerValue;\r\n      });\r\n\r\n      }\r\n      else if(this.addSysBasic.messsageType=='A'&&this.tabText=='Incoming')\r\n      {\r\n        this.showServiceScreen=true;\r\n      this.showProgressbar=false;\r\n      this.onlyInc=false;\r\n      this.messageBasisIso=xmlResp.map((data)=>{\r\n        return data.messageBasis;\r\n      });\r\n       // for dropdown 2\r\n       this.messageKeyIso=xmlResp.map((data)=>{\r\n        return data.messageKey;\r\n      });\r\n      // this.nodeAndTagName.push({node:this.messageBasisIso,tagName:this.messageKeyIso});\r\n      this.typeDataIso=xmlResp.map((data)=>{\r\n        return data.dataType;\r\n      });\r\n      this.headerValueIso=xmlResp.map((data)=>{\r\n        return data.headerValue\r\n      });\r\n      }\r\n      else if(this.addSysBasic.messsageType=='A'&&this.tabText=='Outgoing')\r\n      {\r\n        this.showServiceScreeAllOut=true;\r\n      this.showProgressbar=false;\r\n      this.onlyInc=false;\r\n      this.messageBasisIso=xmlResp.map((data)=>{\r\n        return data.messageBasis;\r\n      });\r\n       // for dropdown 2\r\n       this.messageKeyIso=xmlResp.map((data)=>{\r\n        return data.messageKey;\r\n      });\r\n      this.typeDataIso=xmlResp.map((data)=>{\r\n        return data.dataType;\r\n      });\r\n      this.headerValueIso=xmlResp.map((data)=>{\r\n        return data.headerValue\r\n      });\r\n      }\r\n    }\r\n    \r\n  })\r\n}\r\n\r\n// upload Excel\r\nchooseFile() {\r\n  document.getElementById('chFile').click();\r\n}\r\n  // ------------File Uplaod Methods-----------\r\n  uploadFileXml(event) {\r\n    this.selectedFiles = event.target.files;\r\n    this.sizeOfFile = this.selectedFiles.item(0).size;\r\n    this.currentFileUpload = this.selectedFiles.item(0);\r\n   this.fileName=this.currentFileUpload.name;\r\n    this.addSystem.gettingHederofXMl(this.currentFileUpload).subscribe(xmlResp=>{\r\n      console.log(xmlResp);\r\n      if(xmlResp)\r\n      {\r\n        this.uploadXmlResp=xmlResp;\r\n      this.messageBasisIso=xmlResp.nodeTagList;\r\n      Swal.fire({text:'File Uploaded Successfully'});\r\n      }\r\n    },(err)=>{\r\n      console.log(err);\r\n      Swal.fire({text:'Invalid Xml file provided'});\r\n    })\r\n   \r\n  }\r\n  uploadFileXmlOut(event) {\r\n    this.selectedFiles = event.target.files;\r\n    this.sizeOfFile = this.selectedFiles.item(0).size;\r\n    this.currentFileUpload = this.selectedFiles.item(0);\r\n   this.fileNameOut=this.currentFileUpload.name;\r\n    this.addSystem.gettingHederofXMl(this.currentFileUpload).subscribe(xmlResp=>{\r\n      console.log(xmlResp);\r\n      if(xmlResp)\r\n      {\r\n        this.uploadXmlResp=xmlResp;\r\n      this.messageBasisIso=xmlResp.nodeTagList;\r\n      Swal.fire({text:'File Uploaded Successfully'});\r\n      }\r\n    },(err)=>{\r\n      console.log(err);\r\n      Swal.fire({text:'Invalid Xml file provided'});\r\n    })\r\n   \r\n  }\r\n  onselectingTag(event,i)\r\n  {\r\n    this.desSystem.push(event.value);\r\n    console.log(event);\r\n    console.log(this.uploadXmlResp);\r\n    var result = Object.keys(this.uploadXmlResp.nodeValueMap).map((key) => [(key), this.uploadXmlResp.nodeValueMap[key]]);\r\n    var x=result.find(item=>item[0]==event.value);\r\n    console.log(x);\r\n   if(this.addSysBasic.messsageType=='I'||this.addSysBasic.messsageType=='O'){\r\n    this.mdmtSystemService[i].headerValue=x[1];\r\n   }\r\n   else if(this.addSysBasic.messsageType=='A' &&this.tabText=='Incoming'){\r\n     this.mdmtSystemServiceAllInc[i].headerValue=x[1];\r\n   }\r\n   else if(this.addSysBasic.messsageType=='A' &&this.tabText=='Outgoing')\r\n   {\r\n     this.mdmtSystemServiceAllOut[i].headerValue=x[1];\r\n   }\r\n    // this.mdmtSystemService[i].dataType=x.dataType;\r\n  // this.check(event,i);\r\n  }\r\n  addOfAllOut()\r\n  {\r\n    this.mdmtSystemServiceAllOut.push({id:'',dataType:'',headerValue:'',messageBasis:'',messageKey:'',systemChannelId:'',headerTag:'',encryption:'No Encryption'});\r\n  }\r\n  onDeleteOfAllOut(i)\r\n  {\r\n    this.mdmtSystemServiceAllOut.splice(i,1);\r\n    \r\n  }\r\n  onResetOfBasicInfo()\r\n  {\r\n  this.addSysBasic=new AddSystemNew();\r\n  this.clickedFinishButton=true;\r\n  \r\n}\r\nonSelectingMessageBasis(event:any,i)\r\n{console.log(\"option for fieldno\",event.value);\r\nconsole.log(event.value);\r\nif(this.tempArrayList[i]){\r\n  this.tempArrayList[i] = event.value;\r\n}\r\nelse{\r\n  this.tempArrayList.push(event.value);\r\n}\r\n// both Incoming and outgoing\r\nif(this.addSysBasic.messsageType=='I' ||this.addSysBasic.messsageType=='O' ){\r\nif(this.protocolForBothIncOut.messageChannel=='TCP/IP' && this.protocolForBothIncOut.messageFormat=='ISO 8583 1987' ||this.protocolForBothIncOut.messageFormat=='ISO 8583 1993' ||this.protocolForBothIncOut.messageFormat=='ISO 8583 2003')\r\n{\r\n  var x=this.isoRespData.find(item=>item.fieldNo==event.value);\r\n  this.mdmtSystemService[i].messageBasis=x.fieldName;\r\n  this.mdmtSystemService[i].dataType=x.dataType;\r\n \r\n}\r\nelse if(this.protocolForBothIncOut.messageChannel=='Https/Http' &&this.protocolForBothIncOut.messageFormat=='XML')\r\n{\r\nvar xmldata=this.xmlRespData.find(item=>item.messageBasis==event.value);\r\n{\r\n  this.mdmtSystemService[i].messageKey=xmldata.messageKey;\r\n  this.mdmtSystemService[i].dataType=xmldata.dataType;\r\n}\r\n}\r\n}\r\n\r\n\r\n\r\n\r\n// All Incoming\r\nelse if(this.addSysBasic.messsageType=='A' &&this.tabText=='Incoming')\r\n{ console.log(\"coming in atb inc, All\")\r\nif(this.protocolAllInc.messageChannel=='TCP/IP' &&this.protocolAllInc.messageFormat=='ISO 8583 1987' ||this.protocolAllInc.messageFormat=='ISO 8583 1993' ||this.protocolAllInc.messageFormat=='ISO 8583 2003')\r\n{\r\n  var x=this.isoRespData.find(item=>item.fieldNo==event.value);\r\n  console.log(x);\r\n  console.log(\"this.mdmtSystemServiceAllInc[i].messageKey\",this.mdmtSystemServiceAllInc[i].messageKey);\r\n  this.mdmtSystemServiceAllInc[i].messageBasis=x.fieldName;\r\n  this.mdmtSystemServiceAllInc[i].dataType=x.dataType;\r\n \r\n}\r\nelse if(this.protocolAllInc.messageChannel=='Https/Http' &&this.protocolAllInc.messageFormat=='XML'){\r\n  var xmldata=this.xmlRespData.find(item=>item.messageBasis==event.value);\r\n  { this.mdmtSystemServiceAllInc[i].messageKey=x.messageKey;\r\n    this.mdmtSystemServiceAllInc[i].dataType=x.dataType;\r\n\r\n   \r\n  } \r\n}\r\n}\r\n// All outgoing\r\nelse if(this.addSysBasic.messsageType=='A' &&this.tabText=='Outgoing')\r\n{ console.log(\"coming in atb inc, All\")\r\nif(this.protocolAllOut.messageChannel=='TCP/IP' &&this.protocolAllOut.messageFormat=='ISO 8583 1987' ||this.protocolAllOut.messageFormat=='ISO 8583 1993' ||this.protocolAllOut.messageFormat=='ISO 8583 2003')\r\n{\r\n  var x=this.isoRespData.find(item=>item.fieldNo==event.value);\r\n  this.mdmtSystemServiceAllOut[i].messageBasis=x.fieldName;\r\n  this.mdmtSystemServiceAllOut[i].dataType=x.dataType;\r\n\r\n}\r\nelse if(this.protocolAllOut.messageChannel=='Https/Http' &&this.protocolAllOut.messageFormat=='XML'){\r\n  var xmldata=this.xmlRespData.find(item=>item.messageBasis==event.value);\r\n  { this.mdmtSystemServiceAllOut[i].messageKey=x.messageKey;\r\n    this.mdmtSystemServiceAllOut[i].dataType=x.dataType;\r\n   \r\n  }\r\n}\r\n}\r\n\r\n}\r\n //getting hedaer tag\r\n fetchingHeadertag()\r\n {\r\n   this.addSystem.fetchingHeaderTag().subscribe(resp=>{\r\n     console.log(\"res\",resp);\r\n     this.headerTagData=resp;\r\n     this.headerTagDataOut=resp;\r\n   })\r\n }\r\n isValidIpv4Addr(event) {\r\n   this.invalidIp=/^(?=\\d+\\.\\d+\\.\\d+\\.\\d+$)(?:(?:25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]|[0-9])\\.?){4}$/.test(event.target.value);\r\n  return /^(?=\\d+\\.\\d+\\.\\d+\\.\\d+$)(?:(?:25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]|[0-9])\\.?){4}$/.test(event.target.value);\r\n}\r\nisValidIpv4Addr1(event) {\r\n  this.invalidIp1=/^(?=\\d+\\.\\d+\\.\\d+\\.\\d+$)(?:(?:25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]|[0-9])\\.?){4}$/.test(event.target.value);\r\n return /^(?=\\d+\\.\\d+\\.\\d+\\.\\d+$)(?:(?:25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]|[0-9])\\.?){4}$/.test(event.target.value);\r\n}\r\n changeValue2(value: any, index) {\r\n\r\n  console.log(index);\r\n  if (this.selectedDocumentTypes2[index]) {\r\n    this.headerTagData1 = this.headerTagData1.filter(val => val !== this.selectedDocumentTypes2[index])\r\n  }\r\n  this.selectedDocumentTypes2[index] = value;\r\n\r\n  \r\n\r\n  this.headerTagData1.push(value);\r\n  // this.arrayDocumentType = this.arrayDocumentType.filter(document => document !== value);\r\n}\r\n issourceSysDisabled = (value) => {\r\n  return this.headerTagData1.includes(value);\r\n}\r\nchangeValueOut(value: any, index) {\r\n\r\n  console.log(index);\r\n  if (this.selectedDocumentTypes2Out[index]) {\r\n    this.headerTagData1out = this.headerTagData1.filter(val => val !== this.selectedDocumentTypes2Out[index])\r\n  }\r\n  this.selectedDocumentTypes2Out[index] = value;\r\n\r\n  \r\n\r\n  this.headerTagData1out.push(value);\r\n  // this.arrayDocumentType = this.arrayDocumentType.filter(document => document !== value);\r\n}\r\n\r\nshouldDisableTagOption(option) {\r\n\r\n  return this.desSystem.includes(option);\r\n}\r\n\r\n  try(value, i) {\r\n    if (this.tempArrayList.includes(value)) {\r\n      return true;\r\n    }\r\n    else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n\r\ncheck(event,value){\r\n  \r\n    console.log(\"ev\",event.value);\r\n    this.desSystem.push(event.value);\r\n    // this.destination=event.value;\r\n    // this.addSystem.gettingHederofXMl(this.currentFileUpload).subscribe(xmlResp=>{\r\n    //   console.log(xmlResp);\r\n    //   if(xmlResp)\r\n    //   {\r\n    //   this.messageBasisIso=xmlResp;\r\n    //   Swal.fire({text:'File Uploaded Successfully'});\r\n    //   }\r\n    // },(err)=>{\r\n    //   console.log(err);\r\n    //   Swal.fire({text:'Invalid Xml file provided'});\r\n    // })\r\n  \r\n}\r\nvalidateIp(value){\r\n  debugger\r\n  var address = new Address4(value.target.value);\r\n  console.log(\"address\",address)\r\n  if(address.isCorrect){\r\n    // do work\r\n    }\r\n}\r\nissourceSysDisabledOut = (value) => {\r\n  return this.headerTagData1out.includes(value);\r\n}\r\n}\r\nexport class AddSystemNew{\r\n  // basic info\r\n  systemCode:any;\r\n  systemName:any;\r\n  serviceType:any;\r\n  messsageType:any;\r\n  medianIp:any;\r\n  medianPort:any;\r\n  sourceIp:any;\r\n  sourcePort:any;\r\n  // auditlog\r\n  creatorId:any;\r\n  createdTime:any;\r\n  approverId:any;\r\n  approvedTime:any;\r\n  versionNo:any;\r\n  approvedStatus:any;\r\n  approvedEver:any;\r\n  recordStatus:any;\r\n sysChannel:Array<MdmtSystemChannel>;\r\n\r\n}\r\n  // protocol screen\r\n  export class MdmtSystemChannel {\r\n  systemId:any;\r\n  messageType:any;\r\n  messageChannel:any;\r\n  messageFormat:any;\r\n  queueType:any;\r\n  queueManager:any;\r\n  queueName:any;\r\n  queueChannel:any;\r\n  queueConnFactory:any;\r\n  dbUsername:any;\r\n  dbPassword:any;\r\n  dbServiceName:any;\r\n  dbConnectString:any;\r\n  sysService:Array<MdmtSystemService>\r\n  \r\n\r\n\r\n  }\r\n  //3rd screen\r\n  export class MdmtSystemService{\r\n    id:any;\r\n    systemChannelId:any;\r\n    messageBasis:any;\r\n    messageKey:any;\r\n    dataType:any;\r\n    encryption: any;\r\n    headerTag:any;\r\n    headerValue:any;\r\n  }\r\n  export class MdmtSystemDto{\r\n    mdmtSystem:AddSystemNew;\r\n\t mdmtSystemChannel:Array<MdmtSystemChannel>;\r\n\t mdmtSystemService:Array<MdmtSystemService>;\r\n  }\r\n","export class AddSystemBasicInformation {\r\n\r\n    code: any;\r\n    name: string;\r\n    type: string;\r\n    externalIp: string;\r\n    externalPort: string;\r\n    medianIp: string;\r\n    medianPort: string;\r\n    openToMessage: string;\r\n\r\n}\r\nexport class IncomingMessageConfigTCP {\r\n    id:any;\r\n\tdataType:any;\r\n    extSys:any;\r\n\tfieldNo:any;\r\n\tfieldName:any;\r\n\tdefaultValue:any;\r\n\r\n\r\n\r\n}\r\nexport class OutGoingMessageConfigTCP {\r\n    id:any;\r\n\tdataType:any;\r\n    extSys:any;\r\n\tfieldNo:any;\r\n\tfieldName:any;\r\n\tdefaultValue:any;\r\n\r\n\r\n   \r\n}\r\n\r\nexport class IncomingMessageConfigHttp{\r\n\r\n  node: string; \r\n  tagName: string;\r\ntype: string;\r\n tagValue: string;tagDefault:string;\r\n extSysCode:string \r\n}\r\nexport class IncomingQueueMDBXML\r\n{\r\n    queueManager:string;\r\n    typeOfQueue:string;\r\n    queueText:string;\r\n    incomingibmqueue:Incomingibmqueue;\r\n    incomingjmsqueue:Incomingijmsueue;\r\n\r\n}\r\nexport class IncomingMDBExcelFlatCsv\r\n{\r\n    folderNamemdbXMlincoming:string;\r\n  \r\n}\r\nexport class IncDBCredenatils\r\n{\r\n    folderincomingdb:string;\r\n    userName:string;\r\n    password:string;\r\n    dataBaseName:string;\r\n    connectiongstring:string;\r\n}\r\nexport class Incomingibmqueue\r\n{\r\n    queueName:string;\r\n    channel:string\r\n}\r\nexport class Incomingijmsueue\r\n{\r\n    connectingString:string;\r\n    queueName:string;\r\n}\r\n export class IncomingMessageConfigHttpXML{\r\n\r\n    \r\n   id:any;\r\n\textSys:any;\r\n\r\n\tnode:any;\r\n tagName:any;\r\n\tdataType:any;\r\n\tdefaultValue:any;\r\n  }\r\nexport class OutGoingMessageConfigHttp {\r\n\r\n  \r\n    id:any;\r\n\textSys:any;\r\n\r\n\tnode:any;\r\n tagName:any;\r\n\tdataType:any;\r\n\tdefaultValue:any;\r\n}\r\nexport class MDB {\r\n\r\n    variables: String;\r\n    values: String\r\n}\r\nexport class IncomingMDBJSOn\r\n{\r\n    key:string;\r\n    defaultValue:string;\r\n    dataType:string;\r\n}\r\nexport class IncomingMDBXML\r\n{\r\n    extSysCode:string;\r\n    id: any;\r\n    node:string;\r\n    tagDefault: string;\r\n    tagName:string;\r\n    defaultValue: string;\r\n    dataType:string\r\n  \r\n}\r\nexport class OutGoingMDB {\r\n\r\n    variables: String;\r\n    values: String\r\n}\r\n\r\nexport class DBConnection {\r\n\r\n    objectName: String;\r\n    ObjectType: String\r\n}\r\nexport class DBConnetionXML\r\n{\r\n    tableName:any;\r\n    columnName:string;\r\n    defaultValue:string;\r\n    dataType:string;\r\n}\r\nexport class IncomingDbConntionJson\r\n{\r\n    key:string;\r\n    defaultValue:string;\r\n    dataType:string;\r\n    tableName:string;\r\n    columnName:string;\r\n    \r\n}\r\nexport class OutGoingDBConnection {\r\n\r\n    objectName: String;\r\n    ObjectType: String\r\n}\r\n\r\nexport class AddSystemIntegrationProtocol {\r\n\r\n    typeOfProtocol: String;\r\n    dataType: String;\r\n   \r\n\r\n}\r\nexport class AddSystemIntegrationProtocolOutgoing {\r\n\r\n    typeOfProtocol: String;\r\n    dataType: String;\r\n\r\n}\r\nexport class HttpJSON\r\n{\r\n    key:string;\r\n    dataType:string;\r\n    deafultValue:string\r\n}\r\nexport class OutgoingHttpMessageConfigJSON\r\n{\r\n    key:string;\r\n    dataType:string;\r\n    defaultValue:string;\r\n}\r\nexport class DboutgoingJson\r\n{\r\n    key:string;\r\n    dataType:string;\r\n    defaultValue:string;\r\n}\r\nexport class MDBoutingXMl\r\n{\r\n    extSysCode: string;\r\nid: string\r\nnode: string;\r\ntagDefault: string;\r\ntagName: string;\r\ntagvalue: string;\r\ndataType:string;\r\n}\r\nexport class DboutgoingXMl\r\n{\r\n    node:string;\r\n    tagName:string;\r\n    dataType:string;\r\n    defaultValue:string;\r\n\r\n}\r\nexport class eJBXMLincoming\r\n{   id:any;\r\n    node:string;\r\n    tagName:string;\r\n    dataType:string;\r\n    tagValue:string;\r\n    extSysCode: string;\r\n    tagDefault:string;\r\n\r\n\r\n}\r\n\r\nexport class ejbXMloutgoing\r\n{\r\n    // node:string;\r\n    // tagName:string;\r\n    // dataType:string;\r\n    // defaultValue:string; \r\n    extSysCode:string;\r\n    id: any;\r\n    node:string;\r\n    tagDefault: string;\r\n    tagName:string;\r\n    tagvalue: string;\r\n    dataType:string\r\n}\r\nexport class EjboutgoingJson\r\n{\r\n    key:string;\r\n    dataType:string;\r\n    defaultValue:string;\r\n}\r\nexport class MDBoutJSon\r\n{\r\n    key:string;\r\n    dataType:string;\r\n    defaultValue:string;\r\n}\r\nexport class incomingEJBJSOn\r\n{\r\n    key:string;\r\n    dataType:string;\r\n    defaultValue:string;\r\n}\r\nexport class GenericAddSystemModel {\r\n    code: String;\r\n    name: String;\r\n    type: String;\r\n    externalIp: String;\r\n    externalPort: String;\r\n    medianIp: String;\r\n    medianPort: String;\r\n    openToMessage: String;\r\n    incomingIntegrationProtocol: AddSystemIntegrationProtocol[];\r\n    outgoingIntegrationProtocol: AddSystemIntegrationProtocolOutgoing[];\r\n    incomingMessageConfigurationTcp: IncomingMessageConfigTCP[];\r\n    outgoingMessageConfigurationTcp: OutGoingMessageConfigTCP[];\r\n    incomingMessageConfigurationHttp: IncomingMessageConfigHttp[];\r\n    outgoingMessageConfigurationHttp: OutGoingMessageConfigHttp[];\r\n    incomingMdb: MDB[];\r\n    outgoingMdb: OutGoingMDB[];\r\n    incomingDbConnection: DBConnection[];\r\n    outgoingDbConnection: OutGoingDBConnection[];\r\n\r\n}\r\n\r\n","export default \"table {\\r\\n    border-collapse: initial;\\r\\n    width:100%;\\r\\n    text-align: center !important;\\r\\n  }\\r\\n  :host ::ng-deep .mat-sort-header-container { \\r\\n    display: flex;  \\r\\n    justify-content: center; \\r\\n  }\\r\\n  th.mat-header-cell, td.mat-cell { \\r\\n    text-align: center; \\r\\n  }\\r\\n  .mat-header-cell {\\r\\n    text-align: center;\\r\\n    height: 25px !important;\\r\\n  \\r\\n  }\\r\\n  .mat-cell {\\r\\n    text-align: center;\\r\\n    height: 25px !important;\\r\\n  \\r\\n  }\\r\\n  tr:nth-child(even) {\\r\\n    height: 25px !important;\\r\\n  }\\r\\n  th {\\r\\n    font-weight: small;\\r\\n    height: 25px !important;\\r\\n    text-align: center;\\r\\n  }\\r\\n  tr {\\r\\n    font-weight: small;\\r\\n    height: 25px !important;\\r\\n    text-align: center;\\r\\n  }\\r\\n  mat-paginator {\\r\\n    width: auto !important;\\r\\n    height: 40px !important;\\r\\n  }\\r\\n  md-pagination-wrapper {\\r\\n    width: auto !important;\\r\\n    height: 40px !important;\\r\\n  }\\r\\n  .mat-raised-button {\\r\\n    width: -webkit-fit-content;\\r\\n    width: -moz-fit-content;\\r\\n    width: fit-content;\\r\\n    height: 20px;\\r\\n    line-height: 27px;\\r\\n    min-height: 27px;\\r\\n    vertical-align: top;\\r\\n    font-size: 11px;\\r\\n    padding: 0 0;\\r\\n    margin: 0;\\r\\n  }\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdmlld3Mvc2lhcy12Mi9hZGQtc3lzdGVtLWluY29taW5nLW1lc3NhZ2UtdGNwL2V4dGVybmFsLXN5c3RlbS1tYXRlbmFuY2Utc3VtbWFyeS9leHRlcm5hbC1zeXN0ZW0tbWF0ZW5hbmNlLXN1bW1hcnkuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLHdCQUF3QjtJQUN4QixVQUFVO0lBQ1YsNkJBQTZCO0VBQy9CO0VBQ0E7SUFDRSxhQUFhO0lBQ2IsdUJBQXVCO0VBQ3pCO0VBRUE7SUFDRSxrQkFBa0I7RUFDcEI7RUFFQTtJQUNFLGtCQUFrQjtJQUNsQix1QkFBdUI7O0VBRXpCO0VBRUE7SUFDRSxrQkFBa0I7SUFDbEIsdUJBQXVCOztFQUV6QjtFQUdBO0lBQ0UsdUJBQXVCO0VBQ3pCO0VBRUE7SUFDRSxrQkFBa0I7SUFDbEIsdUJBQXVCO0lBQ3ZCLGtCQUFrQjtFQUNwQjtFQUNBO0lBQ0Usa0JBQWtCO0lBQ2xCLHVCQUF1QjtJQUN2QixrQkFBa0I7RUFDcEI7RUFDQTtJQUNFLHNCQUFzQjtJQUN0Qix1QkFBdUI7RUFDekI7RUFFQTtJQUNFLHNCQUFzQjtJQUN0Qix1QkFBdUI7RUFDekI7RUFLRjtJQUNJLDBCQUFrQjtJQUFsQix1QkFBa0I7SUFBbEIsa0JBQWtCO0lBQ2xCLFlBQVk7SUFDWixpQkFBaUI7SUFDakIsZ0JBQWdCO0lBQ2hCLG1CQUFtQjtJQUNuQixlQUFlO0lBQ2YsWUFBWTtJQUNaLFNBQVM7RUFDWCIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL3NpYXMtdjIvYWRkLXN5c3RlbS1pbmNvbWluZy1tZXNzYWdlLXRjcC9leHRlcm5hbC1zeXN0ZW0tbWF0ZW5hbmNlLXN1bW1hcnkvZXh0ZXJuYWwtc3lzdGVtLW1hdGVuYW5jZS1zdW1tYXJ5LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJ0YWJsZSB7XHJcbiAgICBib3JkZXItY29sbGFwc2U6IGluaXRpYWw7XHJcbiAgICB3aWR0aDoxMDAlO1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyICFpbXBvcnRhbnQ7XHJcbiAgfVxyXG4gIDpob3N0IDo6bmctZGVlcCAubWF0LXNvcnQtaGVhZGVyLWNvbnRhaW5lciB7IFxyXG4gICAgZGlzcGxheTogZmxleDsgIFxyXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7IFxyXG4gIH1cclxuICBcclxuICB0aC5tYXQtaGVhZGVyLWNlbGwsIHRkLm1hdC1jZWxsIHsgXHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7IFxyXG4gIH1cclxuICBcclxuICAubWF0LWhlYWRlci1jZWxsIHtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgIGhlaWdodDogMjVweCAhaW1wb3J0YW50O1xyXG4gIFxyXG4gIH1cclxuICBcclxuICAubWF0LWNlbGwge1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgaGVpZ2h0OiAyNXB4ICFpbXBvcnRhbnQ7XHJcbiAgXHJcbiAgfVxyXG4gIFxyXG4gIFxyXG4gIHRyOm50aC1jaGlsZChldmVuKSB7XHJcbiAgICBoZWlnaHQ6IDI1cHggIWltcG9ydGFudDtcclxuICB9XHJcbiAgXHJcbiAgdGgge1xyXG4gICAgZm9udC13ZWlnaHQ6IHNtYWxsO1xyXG4gICAgaGVpZ2h0OiAyNXB4ICFpbXBvcnRhbnQ7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgfVxyXG4gIHRyIHtcclxuICAgIGZvbnQtd2VpZ2h0OiBzbWFsbDtcclxuICAgIGhlaWdodDogMjVweCAhaW1wb3J0YW50O1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gIH1cclxuICBtYXQtcGFnaW5hdG9yIHtcclxuICAgIHdpZHRoOiBhdXRvICFpbXBvcnRhbnQ7XHJcbiAgICBoZWlnaHQ6IDQwcHggIWltcG9ydGFudDtcclxuICB9XHJcbiAgXHJcbiAgbWQtcGFnaW5hdGlvbi13cmFwcGVyIHtcclxuICAgIHdpZHRoOiBhdXRvICFpbXBvcnRhbnQ7XHJcbiAgICBoZWlnaHQ6IDQwcHggIWltcG9ydGFudDtcclxuICB9XHJcbiAgXHJcbiAgXHJcbiAgXHJcbiAgXHJcbi5tYXQtcmFpc2VkLWJ1dHRvbiB7XHJcbiAgICB3aWR0aDogZml0LWNvbnRlbnQ7XHJcbiAgICBoZWlnaHQ6IDIwcHg7XHJcbiAgICBsaW5lLWhlaWdodDogMjdweDtcclxuICAgIG1pbi1oZWlnaHQ6IDI3cHg7XHJcbiAgICB2ZXJ0aWNhbC1hbGlnbjogdG9wO1xyXG4gICAgZm9udC1zaXplOiAxMXB4O1xyXG4gICAgcGFkZGluZzogMCAwO1xyXG4gICAgbWFyZ2luOiAwO1xyXG4gIH0iXX0= */\"","import { AddSystemIntegrationProtocol, AddSystemIntegrationProtocolOutgoing, DBConnection, GenericAddSystemModel, IncomingMessageConfigHttp, IncomingMessageConfigTCP, MDB, OutGoingDBConnection, OutGoingMDB, OutGoingMessageConfigHttp, OutGoingMessageConfigTCP } from './../add-system';\r\nimport { ChangeDetectorRef, Component, OnInit, ViewChildren, AfterViewInit, ViewChild } from '@angular/core';\r\nimport { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialog, MatSort, MatTableDataSource } from '@angular/material';\r\nimport { ExcelProcessingService } from 'src/app/shared/services/sias2-services/excel-processing.service';\r\nimport { ViewOrEditExternalSystemComponent } from '../view-or-edit-external-system/view-or-edit-external-system.component';\r\nimport {MatPaginator} from '@angular/material/paginator';\r\nimport { AddSystemService } from 'src/app/shared/services/addSys/add-system.service';\r\nimport { Router } from '@angular/router';\r\nimport Swal from 'sweetalert2';\r\n\r\n\r\n@Component({\r\n  selector: 'app-external-system-matenance-summary',\r\n  templateUrl: './external-system-matenance-summary.component.html',\r\n  styleUrls: ['./external-system-matenance-summary.component.css']\r\n})\r\nexport class ExternalSystemMatenanceSummaryComponent implements OnInit {\r\n  viewOrEditForm: FormGroup;\r\n  summaryFormGroup: FormGroup;\r\n  sumaData: any;\r\n  genericAddSystemModel: GenericAddSystemModel;\r\n  genericModel: any;\r\n  isData:boolean=false;\r\n\r\n  displayedColumns: string[] = ['systemId','code', 'name', 'type', 'externalIp', \r\n  'externalPort','createdTime'];\r\n  dataSource: MatTableDataSource<any>;\r\n  \r\n  @ViewChild(MatSort,{static:false}) sort: MatSort;\r\n\r\n  \r\n\r\n  constructor(private fb: FormBuilder,\r\n    private addSystem:AddSystemService,\r\n    private cdr: ChangeDetectorRef,\r\n    private router:Router,\r\n    private excelProcessingService: ExcelProcessingService,\r\n    public dialog: MatDialog) { }\r\n    @ViewChild(MatPaginator,{static:true}) paginator: MatPaginator;\r\n\r\n  ngOnInit() {\r\n    \r\n   \r\n    \r\n    // this.sumaData = [\r\n\r\n    //   {\r\n    //     \"code\": \"83\",\r\n    //     \"externalIp\": \"9876\",\r\n    //     \"externalPort\": \"389\",\r\n    //     \"incomingDbConnection\": [\r\n    //       {\r\n    //         \"ObjectType\": \"db1\",\r\n    //         \"objectName\": \"db\"\r\n    //       }\r\n    //     ],\r\n    //     \"incomingIntegrationProtocol\": [\r\n    //       {\r\n    //         \"dataType\": \"ISO 8583 1993\",\r\n    //         \"typeOfProtocol\": \"TCP/IP\"\r\n    //       }\r\n    //     ],\r\n    //     \"incomingMdb\": [\r\n    //       {\r\n    //         \"variables\": \"ISO 8583 1993\",\r\n    //         \"values\": \"TCP/IP\"\r\n    //       }\r\n    //     ],\r\n    //     \"incomingMessageConfigurationHttp\": [\r\n    //       {\r\n    //         \"node\": \"sys1\",\r\n    //         \"tagName\": \"sys2\",\r\n    //         \"tagValue\": \"mapp12\",\r\n    //         \"type\": \"mapping\"\r\n    //       },\r\n    //       {\r\n    //         \"node\": \"sys2\",\r\n    //         \"tagName\": \"sys3\",\r\n    //         \"tagValue\": \"mappingAccount\",\r\n    //         \"type\": \"mapping2\"\r\n    //       }\r\n    //     ],\r\n    //     \"incomingMessageConfigurationTcp\": [\r\n    //       {\r\n    //         \"fieldName\": \"123\",\r\n    //         \"fieldNo\": \"678\",\r\n    //         \"type\": \"678\",\r\n    //         \"value\": \"678\"\r\n    //       },\r\n    //       {\r\n    //         \"fieldName\": \"678\",\r\n    //         \"fieldNo\": \"789\",\r\n    //         \"type\": \"789\",\r\n    //         \"value\": \"89\"\r\n    //       },\r\n    //       {\r\n    //         \"fieldName\": \"123\",\r\n    //         \"fieldNo\": \"678\",\r\n    //         \"type\": \"678\",\r\n    //         \"value\": \"678\"\r\n    //       },\r\n    //       {\r\n    //         \"fieldName\": \"678\",\r\n    //         \"fieldNo\": \"789\",\r\n    //         \"type\": \"789\",\r\n    //         \"value\": \"89\"\r\n    //       }\r\n    //     ],\r\n    //     \"medianIp\": \"78654\",\r\n    //     \"medianPort\": \"78567\",\r\n    //     \"name\": \"Vidya\",\r\n    //     \"openToMessage\": \"All\",\r\n    //     \"type\":\"median\",\r\n    //     \"outgoingDbConnection\": [{\r\n    //       \"objectName\": \"dbOut\",\r\n    //       \"ObjectType\": \"dbOut\"\r\n    //     }],\r\n    //     \"outgoingIntegrationProtocol\": [{\r\n    //       \"typeOfProtocol\": \"Https/Http\",\r\n    //       \"dataType\": \"JSON\"\r\n    //     }],\r\n    //     \"outgoingMdb\": [],\r\n    //     \"outgoingMessageConfigurationHttp\": [\r\n    //       {\"node\":\"noo\",\r\n    //       \"tagName\":\"tagName\",\r\n    //       \"tagValue\":\"tagV\",\r\n    //       \"type\":\"type\"}\r\n    //     ],\r\n    //     \"outgoingMessageConfigurationTcp\": [\r\n    //       {\r\n    //         \"fieldNo\": \"678\",\r\n    //         \"fieldName\": \"123\",\r\n    //         \"type\": \"678\",\r\n    //         \"value\": \"678\"\r\n    //       },\r\n    //       {\r\n    //         \"fieldNo\": \"789\",\r\n    //         \"fieldName\": \"678\",\r\n    //         \"type\": \"789\",\r\n    //         \"value\": \"89\"\r\n    //       },\r\n    //       {\r\n    //         \"fieldNo\": \"678\",\r\n    //         \"fieldName\": \"123\",\r\n    //         \"type\": \"678\",\r\n    //         \"value\": \"678\"\r\n    //       },\r\n    //       {\r\n    //         \"fieldNo\": \"789\",\r\n    //         \"fieldName\": \"678\",\r\n    //         \"type\": \"789\",\r\n    //         \"value\": \"89\"\r\n    //       }\r\n    //     ]\r\n    //   },\r\n    //   {\r\n    //     \"code\": \"84\",\r\n    //     \"externalIp\": \"9876\",\r\n    //     \"externalPort\": \"389\",\r\n    //     \"incomingDbConnection\": [\r\n    //       {\r\n    //         \"ObjectType\": \"db1\",\r\n    //         \"objectName\": \"db\"\r\n    //       }\r\n    //     ],\r\n    //     \"incomingIntegrationProtocol\": [\r\n    //       {\r\n    //         \"dataType\": \"XML\",\r\n    //         \"typeOfProtocol\": \"Https/Http\"\r\n    //       }\r\n    //     ],\r\n    //     \"incomingMdb\": [],\r\n    //     \"incomingMessageConfigurationHttp\": [\r\n    //       {\r\n    //         \"node\": \"sys1\",\r\n    //         \"tagName\": \"sys2\",\r\n    //         \"tagValue\": \"mapp12\",\r\n    //         \"type\": \"mapping\"\r\n    //       },\r\n    //       {\r\n    //         \"node\": \"sys2\",\r\n    //         \"tagName\": \"sys3\",\r\n    //         \"tagValue\": \"mappingAccount\",\r\n    //         \"type\": \"mapping2\"\r\n    //       }\r\n    //     ],\r\n    //     \"incomingMessageConfigurationTcp\": [\r\n    //       // {\r\n    //         // \"fieldName\": \"123\",\r\n    //         // \"fieldNo\": \"678\",\r\n    //         // \"type\": \"678\",\r\n    //         // \"value\": \"678\"\r\n    //       // },\r\n    //       // {\r\n    //       //   \"fieldName\": \"678\",\r\n    //       //   \"fieldNo\": \"789\",\r\n    //       //   \"type\": \"789\",\r\n    //       //   \"value\": \"89\"\r\n    //       // },\r\n    //       // {\r\n    //       //   \"fieldName\": \"123\",\r\n    //       //   \"fieldNo\": \"678\",\r\n    //       //   \"type\": \"678\",\r\n    //       //   \"value\": \"678\"\r\n    //       // },\r\n    //       // {\r\n    //       //   \"fieldName\": \"678\",\r\n    //       //   \"fieldNo\": \"789\",\r\n    //       //   \"type\": \"789\",\r\n    //       //   \"value\": \"89\"\r\n    //       // }\r\n    //     ],\r\n    //     \"medianIp\": \"78654\",\r\n    //     \"medianPort\": \"78567\",\r\n    //     \"name\": \"ABC\",\r\n    //     \"openToMessage\": \"Incoming\",\r\n    //     \"type\":\"median\",\r\n    //     \"outgoingDbConnection\": [{\r\n    //       \"objectName\": \"dbOut\",\r\n    //       \"ObjectType\": \"dbOut\"\r\n    //     }],\r\n    //     \"outgoingIntegrationProtocol\": [{\r\n    //       \"typeOfProtocol\": \"Https/Http\",\r\n    //       \"dataType\": \"JSON\"\r\n    //     }],\r\n    //     \"outgoingMdb\": [],\r\n    //     \"outgoingMessageConfigurationHttp\": [{\"node\":\"noo\",\r\n    //     \"tagName\":\"tagName\",\r\n    //     \"tagValue\":\"tagV\",\r\n    //     \"type\":\"type\"}],\r\n    //     \"outgoingMessageConfigurationTcp\": [\r\n    //       {\r\n    //         \"fieldNo\": \"678\",\r\n    //         \"fieldName\": \"123\",\r\n    //         \"type\": \"678\",\r\n    //         \"value\": \"678\"\r\n    //       },\r\n    //       {\r\n    //         \"fieldNo\": \"789\",\r\n    //         \"fieldName\": \"678\",\r\n    //         \"type\": \"789\",\r\n    //         \"value\": \"89\"\r\n    //       },\r\n    //       {\r\n    //         \"fieldNo\": \"678\",\r\n    //         \"fieldName\": \"123\",\r\n    //         \"type\": \"678\",\r\n    //         \"value\": \"678\"\r\n    //       },\r\n    //       {\r\n    //         \"fieldNo\": \"789\",\r\n    //         \"fieldName\": \"678\",\r\n    //         \"type\": \"789\",\r\n    //         \"value\": \"89\"\r\n    //       }\r\n    //     ]\r\n    //   },\r\n    //   {\r\n    //     \"code\": \"85\",\r\n    //     \"externalIp\": \"9876\",\r\n    //     \"externalPort\": \"389\",\r\n    //     \"incomingDbConnection\": [\r\n    //       {\r\n    //         \"ObjectType\": \"db1\",\r\n    //         \"objectName\": \"db\"\r\n    //       }\r\n    //     ],\r\n    //     \"incomingIntegrationProtocol\": [\r\n    //       {\r\n    //         \"dataType\": \"ISO 8583 1993\",\r\n    //         \"typeOfProtocol\": \"TCP/IP\"\r\n    //       }\r\n    //     ],\r\n    //     \"incomingMdb\": [],\r\n    //     \"incomingMessageConfigurationHttp\": [\r\n    //       {\r\n    //         \"node\": \"sys1\",\r\n    //         \"tagName\": \"sys2\",\r\n    //         \"tagValue\": \"mapp12\",\r\n    //         \"type\": \"mapping\"\r\n    //       },\r\n    //       {\r\n    //         \"node\": \"sys2\",\r\n    //         \"tagName\": \"sys3\",\r\n    //         \"tagValue\": \"mappingAccount\",\r\n    //         \"type\": \"mapping2\"\r\n    //       }\r\n    //     ],\r\n    //     \"incomingMessageConfigurationTcp\": [\r\n    //       {\r\n    //         \"fieldName\": \"123\",\r\n    //         \"fieldNo\": \"678\",\r\n    //         \"type\": \"678\",\r\n    //         \"value\": \"678\"\r\n    //       },\r\n    //       {\r\n    //         \"fieldName\": \"678\",\r\n    //         \"fieldNo\": \"789\",\r\n    //         \"type\": \"789\",\r\n    //         \"value\": \"89\"\r\n    //       },\r\n    //       {\r\n    //         \"fieldName\": \"123\",\r\n    //         \"fieldNo\": \"678\",\r\n    //         \"type\": \"678\",\r\n    //         \"value\": \"678\"\r\n    //       },\r\n    //       {\r\n    //         \"fieldName\": \"678\",\r\n    //         \"fieldNo\": \"789\",\r\n    //         \"type\": \"789\",\r\n    //         \"value\": \"89\"\r\n    //       }\r\n    //     ],\r\n    //     \"medianIp\": \"78654\",\r\n    //     \"medianPort\": \"78567\",\r\n    //     \"name\": \"XYZ\",\r\n    //     \"openToMessage\": \"OutComing\",\r\n    //     \"type\":\"median\",\r\n    //     \"outgoingDbConnection\": [{\r\n    //       \"objectName\": \"dbOut\",\r\n    //       \"ObjectType\": \"dbOut\"\r\n    //     }],\r\n    //     \"outgoingIntegrationProtocol\": [{\r\n    //       \"typeOfProtocol\": \"TCP/IP\",\r\n    //       \"dataType\": \"ISO 8583 1993\"\r\n    //     }],\r\n    //     \"outgoingMdb\": [],\r\n    //     \"outgoingMessageConfigurationHttp\": [{\r\n    //       \"node\":\"noo\",\r\n    //       \"tagName\":\"tagName\",\r\n    //       \"tagValue\":\"tagV\",\r\n    //       \"type\":\"type\"\r\n    //     }],\r\n    //     \"outgoingMessageConfigurationTcp\": [\r\n    //       {\r\n    //         \"fieldNo\": \"678\",\r\n    //         \"fieldName\": \"123\",\r\n    //         \"type\": \"678\",\r\n    //         \"value\": \"678\"\r\n    //       },\r\n    //       {\r\n    //         \"fieldNo\": \"789\",\r\n    //         \"fieldName\": \"678\",\r\n    //         \"type\": \"789\",\r\n    //         \"value\": \"89\"\r\n    //       },\r\n    //       {\r\n    //         \"fieldNo\": \"678\",\r\n    //         \"fieldName\": \"123\",\r\n    //         \"type\": \"678\",\r\n    //         \"value\": \"678\"\r\n    //       },\r\n    //       {\r\n    //         \"fieldNo\": \"789\",\r\n    //         \"fieldName\": \"678\",\r\n    //         \"type\": \"789\",\r\n    //         \"value\": \"89\"\r\n    //       }\r\n    //     ]\r\n    //   }\r\n    // ]\r\n\r\n\r\n  \r\n    console.log(this.sumaData);\r\n\r\n    this.getExternalSummarydata();\r\n  }\r\n  \r\n\r\n\r\n  getExternalSummarydata() {\r\n  \r\n    // here displying dummy data\r\n    \r\n    \r\n    // setTimeout(() => this.dataSource.paginator = this.paginator);\r\n    // this.dataSource.sort = this.sort;\r\n    this.cdr.markForCheck();\r\n    this.cdr.detectChanges();\r\n    console.log(this.dataSource);\r\n    // this.dataSource = new MatTableDataSource(this.sumaData);\r\n    // here calling api\r\n    this.addSystem.fecthingAddSystem().subscribe(summaryResp=>\r\n      {\r\n        console.log(summaryResp);\r\n        this.sumaData=summaryResp;\r\n        this.sumaData.forEach(el=>{\r\n         \r\n      })\r\n        // this.setForm(this.sumaData);\r\n        this.dataSource = new MatTableDataSource<any>(this.sumaData);\r\n        this.dataSource.sort = this.sort;\r\n        this.dataSource.paginator = this.paginator;\r\n      },(err:any)=>\r\n      {\r\n        console.log(\"err\",err);\r\n        Swal.fire({\r\n          type: 'error',\r\n\r\n          text: 'Server error ',\r\n        });\r\n      })\r\n    // this.dataSource = new MatTableDataSource(this.sumaData);\r\n  }\r\n  // ngAfterViewInit() {\r\n  // setTimeout(() => this.dataSource.paginator = this.paginator);\r\n  // this.dataSource.sort = this.sort;\r\n  // }\r\n\r\n \r\n\r\n \r\n\r\n  \r\n  ongettingAddSystem(resp)\r\n  {  let queryParams = {\r\n    'systemCode': resp.systemCode,\r\n    'systemName':resp.systemName,\r\n    'serviceType':resp.serviceType,\r\n    'sourceIp':resp.sourceIp,\r\n    'sourcePort':resp.sourcePort,\r\n    'medianIp':resp.medianIp,\r\n    'medianPort':resp.medianPort,\r\n    'messsageType':resp.messsageType,\r\n    'approvedEver':resp.approvedEver,\r\n    'approvedStatus':resp.approvedStatus,\r\n    'approvedTime':resp.approvedTime,\r\n    'approverId':resp.approverId,\r\n    'createdTime':resp.createdTime,\r\n    'creatorId':resp.creatorId,\r\n    'versionNo':resp.versionNo,\r\n    'sysChannel':resp.sysChannel,\r\n    'recordStatus':resp.recordStatus,\r\n    'systemId':resp.systemId\r\n    \r\n    // 'messChannel':resp.mdmtSystemChannel,\r\n    // 'messageChannel':resp.mdmtSystemChannel[0].messageChannel,\r\n    // 'messageFormat':resp.mdmtSystemChannel[0].messageFormat,\r\n    // 'mdmtSystemService':resp.mdmtSystemService,\r\n    // 'mdmtSystem': resp.mdmtSystem\r\n}\r\nconsole.log(queryParams);\r\n    \r\n    // this.addSystem.fetchingAddSysBasedonId(row.systemId).subscribe(resp=>{\r\n    //   console.log(resp);\r\n      \r\n     \r\n    \r\n   \r\n    this.addSystem.sendNavParam(queryParams);\r\n    this.router.navigateByUrl('/sias-v2/viewOrEditSystem');\r\n  // });\r\n    \r\n   \r\n}\r\n}\r\n\r\n\r\n","export default \"/* ::ng-deep .mat-form-field-flex > .mat-form-field-infix { padding: 0.4em 0px !important;}\\r\\n::ng-deep .mat-form-field-label-wrapper { top: -1.5em; }\\r\\n\\r\\n::ng-deep .mat-form-field-appearance-outline.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label {\\r\\n    transform: translateY(-1.1em) scale(.75);\\r\\n    width: 80.33333%;\\r\\n} */\\r\\n/* ::ng-deep .mat-form-field-flex > .mat-form-field-infix { width: 30% !important;} */\\r\\n::ng-deep.mat-form-field-appearance-outline .mat-form-field-flex\\r\\n{\\r\\n    width: 170px !important;\\r\\n    height: 50px !important;\\r\\n}\\r\\n.mat-raised-button {\\r\\n    width: -webkit-fit-content;\\r\\n    width: -moz-fit-content;\\r\\n    width: fit-content;\\r\\n    height: 20px;\\r\\n    line-height: 27px;\\r\\n    min-height: 27px;\\r\\n    vertical-align: top;\\r\\n    font-size: 11px;\\r\\n    padding: 0 0;\\r\\n    margin: 0;\\r\\n    }\\r\\n#customers {\\r\\n        font-family: \\\"Trebuchet MS\\\", Arial, Helvetica, sans-serif;\\r\\n        border-collapse: collapse;\\r\\n        width: 100%;\\r\\n      }\\r\\n#customers td, #customers th {\\r\\n        border: 1px solid #ddd;\\r\\n        padding: 8px;\\r\\n        text-align: center;\\r\\n        \\r\\n      }\\r\\n#customers tr:nth-child(even){background-color: #f2f2f2;}\\r\\n#customers th {\\r\\n        padding-top: 12px;\\r\\n        padding-bottom: 12px;\\r\\n        text-align: left;\\r\\n        background-color:rgb(97, 178, 216);\\r\\n        color: white;\\r\\n      }\\r\\n     \\r\\n      \\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdmlld3Mvc2lhcy12Mi9hZGQtc3lzdGVtLWluY29taW5nLW1lc3NhZ2UtdGNwL3J1bGUtbWFwcGluZy9lZGl0LXJ1bGUtbWFwcGluZy9lZGl0LXJ1bGUtbWFwcGluZy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7R0FNRztBQUNILHFGQUFxRjtBQUNyRjs7SUFFSSx1QkFBdUI7SUFDdkIsdUJBQXVCO0FBQzNCO0FBQ0E7SUFDSSwwQkFBa0I7SUFBbEIsdUJBQWtCO0lBQWxCLGtCQUFrQjtJQUNsQixZQUFZO0lBQ1osaUJBQWlCO0lBQ2pCLGdCQUFnQjtJQUNoQixtQkFBbUI7SUFDbkIsZUFBZTtJQUNmLFlBQVk7SUFDWixTQUFTO0lBQ1Q7QUFDQTtRQUNJLHlEQUF5RDtRQUN6RCx5QkFBeUI7UUFDekIsV0FBVztNQUNiO0FBQ0E7UUFDRSxzQkFBc0I7UUFDdEIsWUFBWTtRQUNaLGtCQUFrQjs7TUFFcEI7QUFFQSw4QkFBOEIseUJBQXlCLENBQUM7QUFFeEQ7UUFDRSxpQkFBaUI7UUFDakIsb0JBQW9CO1FBQ3BCLGdCQUFnQjtRQUNoQixrQ0FBa0M7UUFDbEMsWUFBWTtNQUNkIiwiZmlsZSI6InNyYy9hcHAvdmlld3Mvc2lhcy12Mi9hZGQtc3lzdGVtLWluY29taW5nLW1lc3NhZ2UtdGNwL3J1bGUtbWFwcGluZy9lZGl0LXJ1bGUtbWFwcGluZy9lZGl0LXJ1bGUtbWFwcGluZy5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLyogOjpuZy1kZWVwIC5tYXQtZm9ybS1maWVsZC1mbGV4ID4gLm1hdC1mb3JtLWZpZWxkLWluZml4IHsgcGFkZGluZzogMC40ZW0gMHB4ICFpbXBvcnRhbnQ7fVxyXG46Om5nLWRlZXAgLm1hdC1mb3JtLWZpZWxkLWxhYmVsLXdyYXBwZXIgeyB0b3A6IC0xLjVlbTsgfVxyXG5cclxuOjpuZy1kZWVwIC5tYXQtZm9ybS1maWVsZC1hcHBlYXJhbmNlLW91dGxpbmUubWF0LWZvcm0tZmllbGQtY2FuLWZsb2F0Lm1hdC1mb3JtLWZpZWxkLXNob3VsZC1mbG9hdCAubWF0LWZvcm0tZmllbGQtbGFiZWwge1xyXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC0xLjFlbSkgc2NhbGUoLjc1KTtcclxuICAgIHdpZHRoOiA4MC4zMzMzMyU7XHJcbn0gKi9cclxuLyogOjpuZy1kZWVwIC5tYXQtZm9ybS1maWVsZC1mbGV4ID4gLm1hdC1mb3JtLWZpZWxkLWluZml4IHsgd2lkdGg6IDMwJSAhaW1wb3J0YW50O30gKi9cclxuOjpuZy1kZWVwLm1hdC1mb3JtLWZpZWxkLWFwcGVhcmFuY2Utb3V0bGluZSAubWF0LWZvcm0tZmllbGQtZmxleFxyXG57XHJcbiAgICB3aWR0aDogMTcwcHggIWltcG9ydGFudDtcclxuICAgIGhlaWdodDogNTBweCAhaW1wb3J0YW50O1xyXG59XHJcbi5tYXQtcmFpc2VkLWJ1dHRvbiB7XHJcbiAgICB3aWR0aDogZml0LWNvbnRlbnQ7XHJcbiAgICBoZWlnaHQ6IDIwcHg7XHJcbiAgICBsaW5lLWhlaWdodDogMjdweDtcclxuICAgIG1pbi1oZWlnaHQ6IDI3cHg7XHJcbiAgICB2ZXJ0aWNhbC1hbGlnbjogdG9wO1xyXG4gICAgZm9udC1zaXplOiAxMXB4O1xyXG4gICAgcGFkZGluZzogMCAwO1xyXG4gICAgbWFyZ2luOiAwO1xyXG4gICAgfVxyXG4gICAgI2N1c3RvbWVycyB7XHJcbiAgICAgICAgZm9udC1mYW1pbHk6IFwiVHJlYnVjaGV0IE1TXCIsIEFyaWFsLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7XHJcbiAgICAgICAgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTtcclxuICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgfVxyXG4gICAgICAjY3VzdG9tZXJzIHRkLCAjY3VzdG9tZXJzIHRoIHtcclxuICAgICAgICBib3JkZXI6IDFweCBzb2xpZCAjZGRkO1xyXG4gICAgICAgIHBhZGRpbmc6IDhweDtcclxuICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICAgICAgXHJcbiAgICAgIH1cclxuICAgICAgXHJcbiAgICAgICNjdXN0b21lcnMgdHI6bnRoLWNoaWxkKGV2ZW4pe2JhY2tncm91bmQtY29sb3I6ICNmMmYyZjI7fVxyXG4gICAgICBcclxuICAgICAgI2N1c3RvbWVycyB0aCB7XHJcbiAgICAgICAgcGFkZGluZy10b3A6IDEycHg7XHJcbiAgICAgICAgcGFkZGluZy1ib3R0b206IDEycHg7XHJcbiAgICAgICAgdGV4dC1hbGlnbjogbGVmdDtcclxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOnJnYig5NywgMTc4LCAyMTYpO1xyXG4gICAgICAgIGNvbG9yOiB3aGl0ZTtcclxuICAgICAgfVxyXG4gICAgIFxyXG4gICAgICAiXX0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { RulesService } from 'src/app/shared/services/rules/rules.service';\r\nimport { AddSystemService } from 'src/app/shared/services/addSys/add-system.service';\r\nimport Swal from 'sweetalert2';\r\nimport { Router } from '@angular/router';\r\n\r\n\r\n@Component({\r\n  selector: 'app-edit-rule-mapping',\r\n  templateUrl: './edit-rule-mapping.component.html',\r\n  styleUrls: ['./edit-rule-mapping.component.css']\r\n})\r\nexport class EditRuleMappingComponent implements OnInit {\r\n\r\n  showDestination: boolean;\r\n  xmlDestination: any;\r\n  sourceIsoResp: any;\r\n  externalSystem: any;\r\n  showSource: boolean;\r\n  fieldNoData: any=[];\r\n  disableFetchBtn : boolean = false;\r\n  disableSubmitBtn : boolean = false;\r\n  addSysRespData: any;\r\n  deleted : boolean = false;\r\n  editBtn: boolean;\r\n  closeBtn: boolean;\r\n  authBtn: boolean;\r\n  authorizeDone : boolean = false;\r\n\r\n\r\n  fieldValueData: any=[];\r\n  showFieldNoValue: any=1;\r\n  xmlLength: any=[];\r\n\r\n  \r\n  rulemappingDetail:Array<MdmtMessageMappingDet>=[];\r\n  rulemapping=new MdmtMessageMapping();\r\n  rulemappingdest=new MdmtMessageMapping();\r\n  ruleMappingDataForPayload : any;\r\n\r\n\r\n  isoRespData: any;\r\n  sourseSys: any;\r\n  currentUser: string;\r\n  sourceoperation: Object;\r\n  destinationSource: any;\r\n  destinationOperation: Object;\r\n  messageBasisIso: any;\r\n  tagName: any;\r\n  sourceService: any;\r\n  destinationService: any;\r\n  destinationData: any;\r\n  sourceData: any;\r\n  rulemappingData: any[];\r\n  matLabel: string;\r\n  matLabel2: string;\r\n  labelsDestination: any;\r\n  sourceLabel: any;\r\n  matlabelSource1: string;\r\n  matlabelSource2: string;\r\n  ruleDto=new ruleMapDto();\r\n  navSubscription: any;\r\n  editruleMappingResp: {};\r\n  edit: boolean;\r\n  editFetch: boolean;\r\n  reopenBtn: boolean;\r\n  authBtnHide: boolean;\r\n\r\n  constructor(private rulemap: RulesService,private router:Router,\r\n  private addSystem: AddSystemService) { }\r\n\r\n  ngOnInit() {\r\n   \r\n    this.currentUser=localStorage.getItem('userFromLogin');\r\n    this.gettingExternalsystem();\r\n    this.rulemappingDetail.push({id:'',defaultValue:'',messageMappingId:'',sourceTransDetId:'',targetTransDetId:'',sourceKey:'',destinationKey:''})\r\n    this.fetchingIso();\r\n    this.navSubscription = this.addSystem.getNavParam.subscribe(data =>this.editruleMappingResp =data);\r\n    this.ruleMappingDataForPayload = this.editruleMappingResp[\"responseData\"];\r\n    this.addSysRespData = this.ruleMappingDataForPayload;\r\n    this.rulemapping.sourceTranslationId = this.editruleMappingResp[\"sourceTransDetId\"];\r\n    if(this.rulemapping.sourceTranslationId){\r\n      this.gettingTranslationData(this.rulemapping.sourceTranslationId);\r\n    }\r\n    this.rulemapping.targetTranslationId=this.editruleMappingResp[\"targetTransDetId\"];\r\n    if(this.rulemapping.targetTranslationId){\r\n      this.gettingTranslationDataForDest(this.rulemapping.targetTranslationId);\r\n    }\r\n    if(this.addSysRespData.recordStatus== \"C\"){\r\n      console.log(this.addSysRespData.recordStatus);\r\n      this.reopenBtn=false;\r\n      this.authBtnHide=true;\r\n    }\r\n    this.rulemappingDetail = this.ruleMappingDataForPayload.msgMappingDetails;\r\n    console.log(\"from sum\",this.rulemapping);\r\n  }\r\n \r\n  gettingExternalsystem() {\r\n    this.rulemap.gettingExternalsystem().subscribe(extSysResp => {\r\n      console.log(extSysResp);\r\n      this.externalSystem = extSysResp;\r\n    },\r\n      (err: any) => {\r\n        console.log(\"err\", err);\r\n      })\r\n  }\r\n  EditFetch(){\r\n    this.editFetch=true;\r\n    console.log(\"edit\");\r\n    if(this.addSysRespData.recordStatus== \"C\"){\r\n      this.editFetch=false;\r\n      Swal.fire(\"Closed record can't be edited.\");\r\n    }\r\n  }\r\nEdit(){\r\n  console.log(\"edit\");\r\n  if(this.addSysRespData.approvedStatus== \"U\"){\r\n    this.edit=false;\r\n    Swal.fire(\"UnAuthorized record can't be  edited.\");\r\n  }\r\n  if(this.addSysRespData.recordStatus== \"C\"){\r\n    this.edit=false;\r\n    Swal.fire(\"Closed record can't be edited.\");\r\n  }\r\n  this.edit=true;\r\n}\r\n  gettingTranslationData(sourseSys:any)\r\n  {\r\n    this.sourseSys=sourseSys;\r\n    this.rulemap.gettingTranslationData(this.sourseSys).subscribe(resp=>{\r\n      console.log(resp);  \r\n      this.rulemapping=resp;\r\n      this.gettingoperationAandserv(resp.systemCode,resp.messageType)\r\n      this.rulemapping.sourceTranslationId=resp.systemCode;\r\n    })\r\n  }\r\n\r\n  gettingTranslationDataForDest(destSys:any)\r\n  {\r\n    this.rulemap.gettingTranslationData(destSys).subscribe(resp=>{\r\n      console.log(resp);  \r\n      this.rulemappingdest=resp;\r\n      this.gettingmsgTypeAndDestination(resp.systemCode,resp.messageType)\r\n      this.rulemappingdest.targetTranslationId=resp.systemCode;   \r\n    })\r\n  }\r\n\r\n\r\n  onAuthOfRuleMapping(){\r\n  \r\n    if(this.currentUser == this.addSysRespData.creatorId){\r\n      Swal.fire('Maker cannot authorize!');\r\n    }\r\n    else{\r\n      let payloadObj : any = {};\r\n      payloadObj = this.ruleMappingDataForPayload;\r\n      payloadObj.msgMappingDetails = this.rulemappingDetail;\r\n      this.rulemap.editRuleMapping(\"auth\",this.currentUser,payloadObj).subscribe((resp) => {\r\n       this.authorizeDone = true; \r\n       this.addSysRespData = resp;\r\n       Swal.fire({ text: 'Record Authorized!' });\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n  onCloseOfRuleMapping(){\r\n \r\n    let payloadObj : any = {};\r\n    payloadObj = this.ruleMappingDataForPayload;\r\n    payloadObj.msgMappingDetails = this.rulemappingDetail;\r\n    this.rulemap.editRuleMapping(\"close\",this.currentUser,payloadObj).subscribe((resp) => {\r\n     this.addSysRespData = resp;\r\n     this.editBtn=true;\r\n     this.authBtn=true;\r\n      this.deleted=false;\r\n      this.reopenBtn=false;\r\n     Swal.fire({ text: 'Record Closed!' });\r\n    });\r\n  }\r\n\r\n  onOpenRuleMapping(){\r\n    let payloadObj : any = {};\r\n    payloadObj = this.ruleMappingDataForPayload;\r\n    payloadObj.msgMappingDetails = this.rulemappingDetail;\r\n    this.rulemap.editRuleMapping(\"open\",this.currentUser,payloadObj).subscribe((resp) => {\r\n     this.addSysRespData = resp;\r\n     this.authBtnHide=false;\r\n     this.editBtn=false;\r\n     this.authBtn=false;\r\n     Swal.fire({ text: 'Record Opened!' });\r\n    });\r\n  }\r\n\r\n  deleteRuleMapping(){\r\n    this.rulemap.ondeleteMapping(this.addSysRespData.mappingId,this.currentUser).subscribe((resp) => {\r\n      if(resp){\r\n        this.deleted = true;\r\n        this.editBtn=true;\r\n        this.authBtn=true;\r\n        this.closeBtn=true;\r\n      \r\n        Swal.fire({title:'Deleted Successfully!',\r\n        confirmButtonText:'Ok'\r\n      }).then((result)=>{\r\n          if(result){\r\n            this.router.navigateByUrl('/sias-v2/litsRuleMapping')\r\n          }\r\n        });\r\n       \r\n      }\r\n      else{\r\n      Swal.fire(\"Failed to delete the reocrd\");\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n  fetchDestination() {\r\n\r\n  \r\n     console.log(this.rulemapping);\r\n   \r\n  \r\n    this.disableFetchBtn = true;\r\n    this.showDestination = true;\r\n    this.showSource = true;\r\n  }\r\n  onFieldNameChange(event)\r\n  {\r\n    console.log(event.value);\r\n    let value=event.value;\r\n    if(event.value)\r\n    {\r\n      var item=this.sourceIsoResp.find(element =>element.fieldValue==value);\r\n      console.log(item);\r\n      this.showFieldNoValue=item.fieldNo;\r\n      console.log(\"ssss\",this.showFieldNoValue);\r\n      \r\n    }\r\n  }\r\n  onSubmittingRuleMapping() {\r\n    console.log(\"submit\");\r\n    \r\n  }\r\n  add()\r\n  {\r\n    this.rulemappingDetail.push({id:'',defaultValue:'',messageMappingId:'',sourceTransDetId:'',targetTransDetId:'',sourceKey:'',destinationKey:''})\r\n  }\r\n  delete(i)\r\n  {\r\n    this.rulemappingDetail.splice (i,1);\r\n  }\r\n  fetchingIso()\r\n{ \r\n  this.addSystem.fetchingIsoForTcp().subscribe(isoResp=>{\r\n    console.log(\"iss\",isoResp);\r\n    this.isoRespData=isoResp; \r\n    // this.fieldNoData=isoResp;\r\n    this.messageBasisIso=isoResp.map((data)=>{\r\n      return data.messageBasis;\r\n    });\r\n    this.fieldNoData=isoResp.map((data)=>{\r\n      return data.messageBasis;\r\n    });\r\n    this.fieldValueData=isoResp.map((data)=>{\r\n      return data.messageKey;\r\n    });\r\n   \r\n   \r\n  \r\n  })\r\n  \r\n}\r\nonSourseSelection(event:any)\r\n  {\r\n    console.log(event);\r\n    this.sourseSys=event.value;\r\n  }\r\n  onSelectionOFMessageType(source : any,event:any)\r\n  {\r\nconsole.log(\"e\",event);\r\nthis.sourseSys = source;\r\nthis.gettingoperationAandserv(this.sourseSys,event.value)\r\n  }\r\ngettingoperationAandserv(system,msgtype)\r\n{console.log(system);\r\n  this.rulemap.gettingoperationAndService(system,msgtype,this.currentUser).subscribe(sourceResp=>{\r\n    console.log(sourceResp);\r\n    this.sourceoperation=sourceResp.OPERATION;\r\n    this.sourceService=sourceResp.SERVICE;\r\n    this.sourceData=sourceResp.MdmtSystemService;\r\n    this.sourceLabel=sourceResp.MdmtSystemChannel[0].messageChannel;\r\n    console.log(this.sourceLabel);\r\n    if(this.sourceLabel=='Https/Http')\r\n    {\r\n      this.matlabelSource1=\"Node\";\r\n      this.matlabelSource2=\"TagName\";\r\n    }\r\n    if(this.sourceLabel=='TCP/IP')\r\n    {\r\n      this.matlabelSource1=\"Filed No\";\r\n      this.matlabelSource2=\"Filed Name\";\r\n    }\r\n    // this.translationData=translationResp;\r\n  },(err=>{\r\n    console.log(err);\r\n  }))\r\n}\r\nondestinationSource(event)\r\n{\r\n  console.log(event.value);\r\n  this.destinationSource=event.value;\r\n}\r\nmsgTypeOfDestination(event)\r\n{\r\nconsole.log(event.value);\r\nthis.gettingmsgTypeAndDestination(this.destinationSource,event.value);\r\n\r\n}\r\ngettingmsgTypeAndDestination(destinationSource,msgtype)\r\n{\r\n  this.rulemap.gettingoperationAndService(destinationSource,msgtype,this.currentUser).subscribe(destinationResp=>{\r\n    console.log(destinationResp);\r\n    this.destinationOperation=destinationResp.OPERATION;\r\n    this.destinationService=destinationResp.SERVICE;\r\n    this.destinationData=destinationResp.MdmtSystemService;\r\n    this.labelsDestination=destinationResp.MdmtSystemChannel[0].messageChannel;\r\n    console.log(this.labelsDestination);\r\n    if(this.labelsDestination=='Https/Http')\r\n    {\r\n    this.matLabel=\"Node\";\r\n    this.matLabel2=\"Tag Name\";\r\n    }\r\n    else if(this.labelsDestination=='TCP/IP')\r\n    {\r\n    this.matLabel=\"Filed No\";\r\n    this.matLabel2=\"Filed Name\";\r\n    }\r\n    // this.rulemappingData=[...this.sourceData,...this.destinationData]\r\n    console.log(this.rulemappingData);\r\n\r\n    // this.translationData=translationResp;\r\n  },(err=>{\r\n    console.log(err);\r\n  }))\r\n}\r\nonSelectingMessageBasis(event:any)\r\n{console.log(\"option for fieldno\",event.value);\r\n  \r\nconsole.log(event.value);\r\n\r\n  var x=this.isoRespData.find(item=>item.messageBasis==event.value);\r\n \r\n  this.isoRespData.forEach((data)=>{\r\n    data.messageKey=x.messageKey;\r\n    this.tagName=data.messageKey;\r\n    data.dataType=x.dataType;\r\n  })\r\n\r\n\r\n\r\n}\r\n  onsaveRuleMapping() {\r\n    let payloadObj : any = {};\r\n    payloadObj = this.ruleMappingDataForPayload;\r\n    payloadObj.creatorId = this.currentUser;\r\n    payloadObj.msgMappingDetails = this.rulemappingDetail;\r\n    this.rulemap.updatingRuleMapping(payloadObj, this.currentUser).subscribe(resp => {\r\n      console.log(resp);\r\n      if (resp) {\r\n        this.addSysRespData = resp;\r\n        this.disableSubmitBtn = true;\r\n        Swal.fire({ text: 'Record Updated SuccessFully' });\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\n\r\n\r\nexport class   MdmtMessageMapping {\r\n\r\n\tid:any;\r\n\tsourceTranslationId:any;\r\n  targetTranslationId:any;\r\n\tcreatorId:any;\r\n\tcreatedTime:any;\r\n\tapproverId:any;\r\n\tapprovedTime:any;\r\n\tversionNo:any;\r\n  approvedStatus:any;\r\n  approvedEver:any;\r\n  recordStatus:any;\r\n}\r\nexport class MdmtMessageMappingDet {\r\n  id: any;\r\n  messageMappingId;\r\n  sourceTransDetId: any;\r\n  targetTransDetId: any;\r\n  defaultValue: any;\r\n  sourceKey: any;\r\n  destinationKey: any;\r\n}\r\nexport class ruleMapDto{\r\n   mdmtMessageMapping:MdmtMessageMapping;\r\n\r\n\t mdmtMessageMappingDet:Array<MdmtMessageMappingDet>;\r\n\r\n}\r\n","export default \"table {\\r\\n  border-collapse: initial;\\r\\n  width:100%;\\r\\n  text-align: center !important;\\r\\n}\\r\\n:host ::ng-deep .mat-sort-header-container { \\r\\n  display: flex;  \\r\\n  justify-content: center; \\r\\n}\\r\\nth.mat-header-cell, td.mat-cell { \\r\\n  text-align: center; \\r\\n}\\r\\n.mat-header-cell {\\r\\n  text-align: center;\\r\\n  height: 25px !important;\\r\\n\\r\\n}\\r\\n.mat-cell {\\r\\n  text-align: center;\\r\\n  height: 25px !important;\\r\\n\\r\\n}\\r\\ntr:nth-child(even) {\\r\\n  height: 25px !important;\\r\\n}\\r\\nth {\\r\\n  font-weight: small;\\r\\n  height: 25px !important;\\r\\n  text-align: center;\\r\\n}\\r\\ntr {\\r\\n  font-weight: small;\\r\\n  height: 25px !important;\\r\\n  text-align: center;\\r\\n}\\r\\nmat-paginator {\\r\\n  width: auto !important;\\r\\n  height: 40px !important;\\r\\n}\\r\\nmd-pagination-wrapper {\\r\\n  width: auto !important;\\r\\n  height: 40px !important;\\r\\n}\\r\\n.mat-raised-button {\\r\\n  width: -webkit-fit-content;\\r\\n  width: -moz-fit-content;\\r\\n  width: fit-content;\\r\\n  height: 20px;\\r\\n  line-height: 27px;\\r\\n  min-height: 27px;\\r\\n  vertical-align: top;\\r\\n  font-size: 11px;\\r\\n  padding: 0 0;\\r\\n  margin: 0;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdmlld3Mvc2lhcy12Mi9hZGQtc3lzdGVtLWluY29taW5nLW1lc3NhZ2UtdGNwL3J1bGUtbWFwcGluZy9saXN0LXJ1bGUtbWFwcGluZy9saXN0LXJ1bGUtbWFwcGluZy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0Usd0JBQXdCO0VBQ3hCLFVBQVU7RUFDViw2QkFBNkI7QUFDL0I7QUFDQTtFQUNFLGFBQWE7RUFDYix1QkFBdUI7QUFDekI7QUFFQTtFQUNFLGtCQUFrQjtBQUNwQjtBQUVBO0VBQ0Usa0JBQWtCO0VBQ2xCLHVCQUF1Qjs7QUFFekI7QUFFQTtFQUNFLGtCQUFrQjtFQUNsQix1QkFBdUI7O0FBRXpCO0FBR0E7RUFDRSx1QkFBdUI7QUFDekI7QUFFQTtFQUNFLGtCQUFrQjtFQUNsQix1QkFBdUI7RUFDdkIsa0JBQWtCO0FBQ3BCO0FBQ0E7RUFDRSxrQkFBa0I7RUFDbEIsdUJBQXVCO0VBQ3ZCLGtCQUFrQjtBQUNwQjtBQUNBO0VBQ0Usc0JBQXNCO0VBQ3RCLHVCQUF1QjtBQUN6QjtBQUVBO0VBQ0Usc0JBQXNCO0VBQ3RCLHVCQUF1QjtBQUN6QjtBQUtBO0VBQ0UsMEJBQWtCO0VBQWxCLHVCQUFrQjtFQUFsQixrQkFBa0I7RUFDbEIsWUFBWTtFQUNaLGlCQUFpQjtFQUNqQixnQkFBZ0I7RUFDaEIsbUJBQW1CO0VBQ25CLGVBQWU7RUFDZixZQUFZO0VBQ1osU0FBUztBQUNYIiwiZmlsZSI6InNyYy9hcHAvdmlld3Mvc2lhcy12Mi9hZGQtc3lzdGVtLWluY29taW5nLW1lc3NhZ2UtdGNwL3J1bGUtbWFwcGluZy9saXN0LXJ1bGUtbWFwcGluZy9saXN0LXJ1bGUtbWFwcGluZy5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsidGFibGUge1xyXG4gIGJvcmRlci1jb2xsYXBzZTogaW5pdGlhbDtcclxuICB3aWR0aDoxMDAlO1xyXG4gIHRleHQtYWxpZ246IGNlbnRlciAhaW1wb3J0YW50O1xyXG59XHJcbjpob3N0IDo6bmctZGVlcCAubWF0LXNvcnQtaGVhZGVyLWNvbnRhaW5lciB7IFxyXG4gIGRpc3BsYXk6IGZsZXg7ICBcclxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsgXHJcbn1cclxuXHJcbnRoLm1hdC1oZWFkZXItY2VsbCwgdGQubWF0LWNlbGwgeyBcclxuICB0ZXh0LWFsaWduOiBjZW50ZXI7IFxyXG59XHJcblxyXG4ubWF0LWhlYWRlci1jZWxsIHtcclxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgaGVpZ2h0OiAyNXB4ICFpbXBvcnRhbnQ7XHJcblxyXG59XHJcblxyXG4ubWF0LWNlbGwge1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICBoZWlnaHQ6IDI1cHggIWltcG9ydGFudDtcclxuXHJcbn1cclxuXHJcblxyXG50cjpudGgtY2hpbGQoZXZlbikge1xyXG4gIGhlaWdodDogMjVweCAhaW1wb3J0YW50O1xyXG59XHJcblxyXG50aCB7XHJcbiAgZm9udC13ZWlnaHQ6IHNtYWxsO1xyXG4gIGhlaWdodDogMjVweCAhaW1wb3J0YW50O1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxufVxyXG50ciB7XHJcbiAgZm9udC13ZWlnaHQ6IHNtYWxsO1xyXG4gIGhlaWdodDogMjVweCAhaW1wb3J0YW50O1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxufVxyXG5tYXQtcGFnaW5hdG9yIHtcclxuICB3aWR0aDogYXV0byAhaW1wb3J0YW50O1xyXG4gIGhlaWdodDogNDBweCAhaW1wb3J0YW50O1xyXG59XHJcblxyXG5tZC1wYWdpbmF0aW9uLXdyYXBwZXIge1xyXG4gIHdpZHRoOiBhdXRvICFpbXBvcnRhbnQ7XHJcbiAgaGVpZ2h0OiA0MHB4ICFpbXBvcnRhbnQ7XHJcbn1cclxuXHJcblxyXG5cclxuXHJcbi5tYXQtcmFpc2VkLWJ1dHRvbiB7XHJcbiAgd2lkdGg6IGZpdC1jb250ZW50O1xyXG4gIGhlaWdodDogMjBweDtcclxuICBsaW5lLWhlaWdodDogMjdweDtcclxuICBtaW4taGVpZ2h0OiAyN3B4O1xyXG4gIHZlcnRpY2FsLWFsaWduOiB0b3A7XHJcbiAgZm9udC1zaXplOiAxMXB4O1xyXG4gIHBhZGRpbmc6IDAgMDtcclxuICBtYXJnaW46IDA7XHJcbn0iXX0= */\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatTableDataSource, MatPaginator, MatSort } from '@angular/material';\r\nimport { RulesService } from 'src/app/shared/services/rules/rules.service';\r\nimport { Router } from '@angular/router';\r\nimport { AddSystemService } from 'src/app/shared/services/addSys/add-system.service';\r\n\r\n@Component({\r\n  selector: 'app-list-rule-mapping',\r\n  templateUrl: './list-rule-mapping.component.html',\r\n  styleUrls: ['./list-rule-mapping.component.css']\r\n})\r\nexport class ListRuleMappingComponent implements OnInit {\r\n  ruleMappingListResp: any;\r\n\r\n  constructor(private rulelist:RulesService,private router:Router,private addSystem:AddSystemService) { }\r\n  displayedColumns: string[] = ['sourceId', 'targetTranslationId', 'recordStatus', 'creatorId','createdTime'];\r\n  dataSource: MatTableDataSource<any>;\r\n  @ViewChild(MatPaginator,{static:true}) paginator: MatPaginator;\r\n  @ViewChild(MatSort,{static:false}) sort: MatSort;\r\n\r\n  ngOnInit() {\r\n    this.fetchinglistRuleMapping()\r\n  }\r\n  fetchinglistRuleMapping(){\r\n    this.rulelist.fetchingruleMapping().subscribe(resp=>{\r\n      console.log(resp);\r\n      this.ruleMappingListResp=resp;\r\n      // this.setForm(this.sumaData);\r\n      this.dataSource = new MatTableDataSource(this.ruleMappingListResp);\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    })\r\n  }\r\n  ruleMappingEdit(row)\r\n  {\r\n    console.log(row);\r\n    let id : any = 0;\r\n    if(row.msgMappingDetails.length > 0){\r\n      id = row.msgMappingDetails[0].messageMappingId;\r\n    }\r\n    this.rulelist.getruleMappingById(id,row.mappingId).subscribe(resp=>{\r\n      console.log(resp);\r\n      let queryParams = {\r\n        'sourceTransDetId':resp.sourceTransDetId,\r\n        'targetTransDetId':resp.targetTransDetId,\r\n        'mdmtMessageMappingDet':resp.mdmtMessageMappingDet,\r\n        'responseData':row\r\n    }\r\n    console.log(queryParams);\r\n    \r\n   \r\n    this.addSystem.sendNavParam(queryParams);\r\n    this.router.navigateByUrl('/sias-v2/editRuleMapping');\r\n    })\r\n   \r\n  }\r\n}\r\n","export default \"/* ::ng-deep .mat-form-field-flex > .mat-form-field-infix { padding: 0.4em 0px !important;}\\r\\n::ng-deep .mat-form-field-label-wrapper { top: -1.5em; }\\r\\n\\r\\n::ng-deep .mat-form-field-appearance-outline.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label {\\r\\n    transform: translateY(-1.1em) scale(.75);\\r\\n    width: 80.33333%;\\r\\n} */\\r\\n/* ::ng-deep .mat-form-field-flex > .mat-form-field-infix { width: 30% !important;} */\\r\\n::ng-deep.mat-form-field-appearance-outline .mat-form-field-flex\\r\\n{\\r\\n    width: 170px !important;\\r\\n    height: 50px !important;\\r\\n}\\r\\n.mat-raised-button {\\r\\n    width: -webkit-fit-content;\\r\\n    width: -moz-fit-content;\\r\\n    width: fit-content;\\r\\n    height: 20px;\\r\\n    line-height: 27px;\\r\\n    min-height: 27px;\\r\\n    vertical-align: top;\\r\\n    font-size: 11px;\\r\\n    padding: 0 0;\\r\\n    margin: 0;\\r\\n    }\\r\\n#customers {\\r\\n        font-family: \\\"Trebuchet MS\\\", Arial, Helvetica, sans-serif;\\r\\n        border-collapse: collapse;\\r\\n        width: 100%;\\r\\n      }\\r\\n#customers td, #customers th {\\r\\n        border: 1px solid #ddd;\\r\\n        padding: 8px;\\r\\n        text-align: center;\\r\\n        \\r\\n      }\\r\\n#customers tr:nth-child(even){background-color: #f2f2f2;}\\r\\n#customers th {\\r\\n        padding-top: 12px;\\r\\n        padding-bottom: 12px;\\r\\n        text-align: left;\\r\\n        background-color:rgb(97, 178, 216);\\r\\n        color: white;\\r\\n      }\\r\\n.readonly-wrapper {\\r\\n        pointer-events:none;\\r\\n      }\\r\\n.readonly-wrapper .readonly-block {\\r\\n        pointer-events: none;\\r\\n      }\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdmlld3Mvc2lhcy12Mi9hZGQtc3lzdGVtLWluY29taW5nLW1lc3NhZ2UtdGNwL3J1bGUtbWFwcGluZy9ydWxlLW1hcHBpbmcuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7O0dBTUc7QUFDSCxxRkFBcUY7QUFDckY7O0lBRUksdUJBQXVCO0lBQ3ZCLHVCQUF1QjtBQUMzQjtBQUNBO0lBQ0ksMEJBQWtCO0lBQWxCLHVCQUFrQjtJQUFsQixrQkFBa0I7SUFDbEIsWUFBWTtJQUNaLGlCQUFpQjtJQUNqQixnQkFBZ0I7SUFDaEIsbUJBQW1CO0lBQ25CLGVBQWU7SUFDZixZQUFZO0lBQ1osU0FBUztJQUNUO0FBQ0E7UUFDSSx5REFBeUQ7UUFDekQseUJBQXlCO1FBQ3pCLFdBQVc7TUFDYjtBQUNBO1FBQ0Usc0JBQXNCO1FBQ3RCLFlBQVk7UUFDWixrQkFBa0I7O01BRXBCO0FBRUEsOEJBQThCLHlCQUF5QixDQUFDO0FBRXhEO1FBQ0UsaUJBQWlCO1FBQ2pCLG9CQUFvQjtRQUNwQixnQkFBZ0I7UUFDaEIsa0NBQWtDO1FBQ2xDLFlBQVk7TUFDZDtBQUVBO1FBQ0UsbUJBQW1CO01BQ3JCO0FBRUE7UUFDRSxvQkFBb0I7TUFDdEIiLCJmaWxlIjoic3JjL2FwcC92aWV3cy9zaWFzLXYyL2FkZC1zeXN0ZW0taW5jb21pbmctbWVzc2FnZS10Y3AvcnVsZS1tYXBwaW5nL3J1bGUtbWFwcGluZy5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLyogOjpuZy1kZWVwIC5tYXQtZm9ybS1maWVsZC1mbGV4ID4gLm1hdC1mb3JtLWZpZWxkLWluZml4IHsgcGFkZGluZzogMC40ZW0gMHB4ICFpbXBvcnRhbnQ7fVxyXG46Om5nLWRlZXAgLm1hdC1mb3JtLWZpZWxkLWxhYmVsLXdyYXBwZXIgeyB0b3A6IC0xLjVlbTsgfVxyXG5cclxuOjpuZy1kZWVwIC5tYXQtZm9ybS1maWVsZC1hcHBlYXJhbmNlLW91dGxpbmUubWF0LWZvcm0tZmllbGQtY2FuLWZsb2F0Lm1hdC1mb3JtLWZpZWxkLXNob3VsZC1mbG9hdCAubWF0LWZvcm0tZmllbGQtbGFiZWwge1xyXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC0xLjFlbSkgc2NhbGUoLjc1KTtcclxuICAgIHdpZHRoOiA4MC4zMzMzMyU7XHJcbn0gKi9cclxuLyogOjpuZy1kZWVwIC5tYXQtZm9ybS1maWVsZC1mbGV4ID4gLm1hdC1mb3JtLWZpZWxkLWluZml4IHsgd2lkdGg6IDMwJSAhaW1wb3J0YW50O30gKi9cclxuOjpuZy1kZWVwLm1hdC1mb3JtLWZpZWxkLWFwcGVhcmFuY2Utb3V0bGluZSAubWF0LWZvcm0tZmllbGQtZmxleFxyXG57XHJcbiAgICB3aWR0aDogMTcwcHggIWltcG9ydGFudDtcclxuICAgIGhlaWdodDogNTBweCAhaW1wb3J0YW50O1xyXG59XHJcbi5tYXQtcmFpc2VkLWJ1dHRvbiB7XHJcbiAgICB3aWR0aDogZml0LWNvbnRlbnQ7XHJcbiAgICBoZWlnaHQ6IDIwcHg7XHJcbiAgICBsaW5lLWhlaWdodDogMjdweDtcclxuICAgIG1pbi1oZWlnaHQ6IDI3cHg7XHJcbiAgICB2ZXJ0aWNhbC1hbGlnbjogdG9wO1xyXG4gICAgZm9udC1zaXplOiAxMXB4O1xyXG4gICAgcGFkZGluZzogMCAwO1xyXG4gICAgbWFyZ2luOiAwO1xyXG4gICAgfVxyXG4gICAgI2N1c3RvbWVycyB7XHJcbiAgICAgICAgZm9udC1mYW1pbHk6IFwiVHJlYnVjaGV0IE1TXCIsIEFyaWFsLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7XHJcbiAgICAgICAgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTtcclxuICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgfVxyXG4gICAgICAjY3VzdG9tZXJzIHRkLCAjY3VzdG9tZXJzIHRoIHtcclxuICAgICAgICBib3JkZXI6IDFweCBzb2xpZCAjZGRkO1xyXG4gICAgICAgIHBhZGRpbmc6IDhweDtcclxuICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICAgICAgXHJcbiAgICAgIH1cclxuICAgICAgXHJcbiAgICAgICNjdXN0b21lcnMgdHI6bnRoLWNoaWxkKGV2ZW4pe2JhY2tncm91bmQtY29sb3I6ICNmMmYyZjI7fVxyXG4gICAgICBcclxuICAgICAgI2N1c3RvbWVycyB0aCB7XHJcbiAgICAgICAgcGFkZGluZy10b3A6IDEycHg7XHJcbiAgICAgICAgcGFkZGluZy1ib3R0b206IDEycHg7XHJcbiAgICAgICAgdGV4dC1hbGlnbjogbGVmdDtcclxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOnJnYig5NywgMTc4LCAyMTYpO1xyXG4gICAgICAgIGNvbG9yOiB3aGl0ZTtcclxuICAgICAgfVxyXG4gICAgIFxyXG4gICAgICAucmVhZG9ubHktd3JhcHBlciB7XHJcbiAgICAgICAgcG9pbnRlci1ldmVudHM6bm9uZTtcclxuICAgICAgfVxyXG4gICAgICBcclxuICAgICAgLnJlYWRvbmx5LXdyYXBwZXIgLnJlYWRvbmx5LWJsb2NrIHtcclxuICAgICAgICBwb2ludGVyLWV2ZW50czogbm9uZTtcclxuICAgICAgfSJdfQ== */\"","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { RulesService } from 'src/app/shared/services/rules/rules.service';\r\nimport { AddSystemService } from 'src/app/shared/services/addSys/add-system.service';\r\nimport { MatSnackBar } from '@angular/material';\r\nimport Swal from 'sweetalert2';\r\nimport { FormControl, Validators, FormArray, FormGroup, FormBuilder } from '@angular/forms';\r\nimport { RuleDto } from '../../rules/create-rules/create-rules.component';\r\n\r\n@Component({\r\n  selector: 'app-rule-mapping',\r\n  templateUrl: './rule-mapping.component.html',\r\n  styleUrls: ['./rule-mapping.component.css']\r\n})\r\nexport class RuleMappingComponent implements OnInit {\r\n\r\n  showDestination: boolean;\r\n  xmlDestination: any;\r\n  sourceIsoResp: any;\r\n  externalSystem: any;\r\n  showSource: boolean;\r\n  fieldNoData: any=[];\r\n  disableFetchBtn : boolean = false;\r\n  disableSubmitBtn : boolean = false;\r\n  disableResetBtn : boolean = false;\r\n  addSysRespData: any;\r\n  showAuditLog : boolean = false;\r\n  sourcesysdata : any;\r\n\r\n  \r\n  fieldValueData: any=[];\r\n  showFieldNoValue: any=1;\r\n  xmlLength: any=[];\r\n  temparray : any[] = [];\r\n  \r\n  rulemappingDetail:Array<MdmtMessageMappingDet>=[];\r\n  rulemapping=new MdmtMessageMapping();\r\n  rulemappingDest=new MdmtMessageMapping();\r\n  mappingObj=new MdmtMessageMapping();\r\n  addForm:FormGroup;\r\n  isoRespData: any;\r\n  sourseSys: any;\r\n  currentUser: string;\r\n  sourceoperation: Object;\r\n  destinationSource: any;\r\n  destinationOperation: Object;\r\n  messageBasisIso: any;\r\n  tagName: any;\r\n  sourceService: any;\r\n  destinationService: any;\r\n  destinationData: any;\r\n  sourceData: any;\r\n  rulemappingData: any[];\r\n  matLabel: string;\r\n  matLabel2: string;\r\n  labelsDestination: any;\r\n  sourceLabel: any;\r\n  matlabelSource1: string;\r\n  matlabelSource2: string;\r\n  ruleDto=new ruleMapDto();\r\n  sourceTransDetId: any;\r\n  targetTransDetId: any;\r\n  afterSubmit: boolean=false;\r\n  showfetchAll: boolean;\r\n\r\n  constructor(private rulemap: RulesService,\r\n    private fb:FormBuilder,\r\n    private snack: MatSnackBar, private addSystem: AddSystemService) { }\r\n\r\n  ngOnInit() {\r\n   \r\n    this.currentUser=localStorage.getItem('userFromLogin');\r\n    this.gettingExternalsystem();\r\n    this.rulemappingDetail.push({id:'',defaultValue:'',messageMappingId:'',sourceTransDetId:'',targetTransDetId:'',sourceKey:'',destinationKey:''})\r\n    this.fetchingIso();\r\n    \r\n  }\r\n \r\n  gettingExternalsystem() {\r\n    this.rulemap.gettingExternalsystem().subscribe(extSysResp => {\r\n      console.log(extSysResp);\r\n      this.externalSystem = extSysResp;\r\n      this.sourcesysdata =this.externalSystem;\r\n      this.temparray = this.externalSystem;\r\n    },\r\n      (err: any) => {\r\n        console.log(\"err\", err);\r\n      })\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  fetchDestination() {\r\n\r\n  \r\n     console.log(this.rulemapping);\r\n   \r\n  \r\n    this.disableFetchBtn = true;\r\n    this.showfetchAll=true;\r\n    this.showDestination = true;\r\n    this.showSource = true;\r\n  }\r\n  onFieldNameChange(event)\r\n  {\r\n    console.log(event.value);\r\n    let value=event.value;\r\n    if(event.value)\r\n    {\r\n      var item=this.sourceIsoResp.find(element =>element.fieldValue==value);\r\n      console.log(item);\r\n      this.showFieldNoValue=item.fieldNo;\r\n      console.log(\"ssss\",this.showFieldNoValue);\r\n      \r\n    }\r\n  }\r\n \r\n  add()\r\n  {\r\n    this.rulemappingDetail.push({id:'',defaultValue:'',messageMappingId:'',sourceTransDetId:'',targetTransDetId:'',sourceKey:'',destinationKey:''})\r\n  }\r\n  delete(i)\r\n  {\r\n    this.rulemappingDetail.splice (i,1);\r\n  }\r\n  fetchingIso()\r\n{ \r\n  this.addSystem.fetchingIsoForTcp().subscribe(isoResp=>{\r\n    console.log(\"iss\",isoResp);\r\n    this.isoRespData=isoResp; \r\n    // this.fieldNoData=isoResp;\r\n    this.messageBasisIso=isoResp.map((data)=>{\r\n      return data.messageBasis;\r\n    });\r\n    this.fieldNoData=isoResp.map((data)=>{\r\n      return data.messageBasis;\r\n    });\r\n    this.fieldValueData=isoResp.map((data)=>{\r\n      return data.messageKey;\r\n    });\r\n   \r\n   \r\n  \r\n  })\r\n  \r\n}\r\nonSourseSelection(event:any)\r\n  {\r\n    console.log(event);\r\n    this.sourseSys=event.option.value;\r\n    this.showSource=false;\r\n    this.showDestination=false;\r\n    this.rulemap.gettingTranslationData(this.sourseSys).subscribe(resp=>{\r\n      console.log(resp);\r\n      if(resp!=null){\r\n        this.showfetchAll=false;\r\n      this.rulemapping=resp;\r\n      this.sourcesysdata = resp;\r\n      this.gettingoperationAandserv(resp.systemCode,resp.messageType)\r\n      this.rulemapping.sourceTranslationId=resp.transId;\r\n      // this.rulemappingDetail=resp.msgTransDetails;\r\n      resp.msgTransDetails.map(el=>{\r\n        this.sourceTransDetId=el.translationId\r\n      });\r\n    }\r\n    else{\r\n      this.showfetchAll=true;\r\n    }\r\n      \r\n      \r\n    },(err)=>{\r\n      this.showfetchAll=true;\r\n    })\r\n    this.externalSystem = this.temparray \r\n  }\r\n  onsearchingTablName(event) {\r\n    console.log(event.target.value);\r\n\r\n    console.log(\"this is arr\", this.sourcesysdata);\r\n    if (this.sourcesysdata) {\r\n      let data = this.sourcesysdata.filter(function (e) {\r\n        let extValue = e.toLowerCase();\r\n\r\n        let value = event.target.value.toLowerCase();\r\n        console.log(extValue, value);\r\n        // return !extValue.indexOf(value);//changed this for 1192\r\n        return extValue.search(value) > -1 \r\n      });\r\n      console.log(data);\r\n      this.externalSystem = data;\r\n\r\n    }\r\n\r\n  }\r\n\r\n  onSelectionOFMessageType(event:any)\r\n  {\r\nconsole.log(\"e\",event);\r\nthis.showSource=false;\r\n    this.showDestination=false;\r\nthis.gettingoperationAandserv(this.sourseSys,event.value)\r\n  }\r\ngettingoperationAandserv(system,msgtype)\r\n{console.log(system);\r\n  this.rulemap.gettingoperationAndService(system,msgtype,this.currentUser).subscribe(sourceResp=>{\r\n    console.log(sourceResp);\r\n    this.showfetchAll=false;\r\n  \r\n    this.sourceoperation=sourceResp.OPERATION;\r\n    this.sourceService=sourceResp.SERVICE;\r\n    this.sourceData=sourceResp.MdmtSystemService;\r\n    this.sourceLabel=sourceResp.MdmtSystemChannel[0].messageChannel;\r\n    if(this.sourceLabel=='Https/Http')\r\n    {\r\n      this.matlabelSource1=\"Tag\";\r\n      this.matlabelSource2=null;\r\n    }\r\n    if(this.sourceLabel=='TCP/IP')\r\n    {\r\n      this.matlabelSource1=\"Filed No\";\r\n      this.matlabelSource2=\"Filed Name\";\r\n    }\r\n    // this.translationData=translationResp;\r\n  },(err=>{\r\n    console.log(err);\r\n    Swal.fire({text:'External system data not present.'});\r\n    this.showfetchAll=true;\r\n  }))\r\n}\r\nondestinationSource(event)\r\n{\r\n  console.log(event.value);\r\n  this.showSource=false;\r\n    this.showDestination=false;\r\n  this.destinationSource=event.option.value;\r\n   this.rulemap.gettingTranslationData(this.destinationSource).subscribe(resp=>{\r\n      console.log(resp);\r\n      if(resp!=null){\r\n        this.showfetchAll=false;\r\n      this.rulemappingDest=resp;\r\n      this.rulemapping.targetTranslationId=resp.transId;\r\n      resp.msgTransDetails.map(el=>{\r\n        this.targetTransDetId=el.translationId\r\n      });\r\n      this.gettingmsgTypeAndDestination(resp.systemCode,resp.messageType)\r\n    }\r\n    else{\r\n      this.showfetchAll=true;\r\n    }\r\n    },(err)=>{\r\n      this.showfetchAll=true;\r\n    })\r\n    this.externalSystem = this.temparray \r\n}\r\nmsgTypeOfDestination(event)\r\n{\r\nconsole.log(event.value);\r\nthis.showDestination=false;\r\nthis.showSource=false;\r\nthis.gettingmsgTypeAndDestination(this.destinationSource,event.value);\r\n\r\n}\r\ngettingmsgTypeAndDestination(destinationSource,msgtype)\r\n{\r\n  this.rulemap.gettingoperationAndService(destinationSource,msgtype,this.currentUser).subscribe(destinationResp=>{\r\n    console.log(destinationResp);\r\n    this.showfetchAll=false;\r\n    this.destinationOperation=destinationResp.OPERATION;\r\n    this.destinationService=destinationResp.SERVICE;\r\n    this.destinationData=destinationResp.MdmtSystemService;\r\n    this.labelsDestination=destinationResp.MdmtSystemChannel[0].messageChannel;\r\n    if(this.labelsDestination=='Https/Http')\r\n    {\r\n    this.matLabel=\"Tag\";\r\n    this.matLabel2=null;\r\n    }\r\n    else if(this.labelsDestination=='TCP/IP')\r\n    {\r\n    this.matLabel=\"Filed No\";\r\n    this.matLabel2=\"Filed Name\";\r\n    }\r\n    // this.rulemappingData=[...this.sourceData,...this.destinationData]\r\n    console.log(this.rulemappingData);\r\n\r\n    // this.translationData=translationResp;\r\n  },(err=>{\r\n    console.log(err);\r\n    Swal.fire({text:'External system data not present.'});\r\n    this.showfetchAll=true;\r\n  }))\r\n}\r\nonReset(){\r\n  this.disableSubmitBtn = false;\r\n}\r\n\r\nonsaveRuleMapping()\r\n{\r\nconsole.log(this.rulemappingDetail);\r\n// \r\n// console.log(this.rulemapping);\r\nthis.mappingObj.msgMappingDetails=this.rulemappingDetail;\r\nthis.mappingObj.sourceTranslationId=this.rulemapping.sourceTranslationId;\r\nthis.mappingObj.targetTranslationId=this.rulemapping.targetTranslationId;\r\nthis.mappingObj.creatorId=this.currentUser;\r\nconsole.log(this.mappingObj);\r\nthis.rulemap.submittingruleMapping(this.mappingObj,this.currentUser).subscribe(resp=>{\r\n  console.log(resp);\r\n  if(resp){\r\n    this.addSysRespData = resp;\r\n    this.showAuditLog = true;\r\n    this.afterSubmit=true;\r\n    this.disableSubmitBtn = true;\r\n    this.disableResetBtn = true;\r\n    Swal.fire({text:'Record Saved SuccessFully'});\r\n  }\r\n},(err=>{\r\n  console.log(err.error.text);\r\n  // Swal.fire({text:'Internal Server Error'});\r\n  Swal.fire({text:'Rule mapping data already present for source and destination systems.'});\r\n  // Swal.fire({text:err.error.text});\r\n}))\r\n}\r\n}\r\n\r\n\r\n\r\nexport class   MdmtMessageMapping {\r\n\r\n\tmappingId:any;\r\n\tsourceTranslationId:any;\r\n  targetTranslationId:any;\r\n\tcreatorId:any;\r\n\tcreatedTime:any;\r\n\tapproverId:any;\r\n\tapprovedTime:any;\r\n\tversionNo:any;\r\n  approvedStatus:any;\r\n  approvedEver:any;\r\n  recordStatus:any;\r\n  msgMappingDetails:Array<MdmtMessageMappingDet>;\r\n}\r\nexport class MdmtMessageMappingDet {\r\n  id: any;\r\n  messageMappingId;\r\n  sourceTransDetId: any;\r\n  targetTransDetId: any;\r\n  defaultValue: any;\r\n  sourceKey: any;\r\n  destinationKey: any;\r\n}\r\nexport class ruleMapDto{\r\n   mdmtMessageMapping:MdmtMessageMapping;\r\n\r\n\t mdmtMessageMappingDet:Array<MdmtMessageMappingDet>;\r\n\r\n}","export default \".example-container {\\r\\n    height: 250px;\\r\\n    overflow: auto;\\r\\n  }\\r\\n  .mat-raised-button {\\r\\n    width: -webkit-fit-content;\\r\\n    width: -moz-fit-content;\\r\\n    width: fit-content;\\r\\n    height: 20px;\\r\\n    line-height: 27px;\\r\\n    min-height: 27px;\\r\\n    vertical-align: top;\\r\\n    font-size: 11px;\\r\\n    padding: 0 0;\\r\\n    margin: 0;\\r\\n    }\\r\\n  #customers {\\r\\n        font-family: \\\"Trebuchet MS\\\", Arial, Helvetica, sans-serif;\\r\\n        border-collapse: collapse;\\r\\n        width: 100%;\\r\\n        }\\r\\n  #customers td, #customers th {\\r\\n        border: 1px solid #ddd;\\r\\n        padding: 8px;\\r\\n        text-align: center;\\r\\n        \\r\\n        }\\r\\n  #customers tr:nth-child(even){background-color: #f2f2f2;}\\r\\n  #customers th {\\r\\n        padding-top: 12px;\\r\\n        padding-bottom: 12px;\\r\\n        text-align: left;\\r\\n        background-color:rgb(97, 178, 216);\\r\\n        color: white;\\r\\n        }\\r\\n  .baiscInfocard\\r\\n  {\\r\\n    width: 63%;\\r\\n   margin-left: 15%;\\r\\n  }\\r\\n  ::ng-deep .mat-form-field-flex > .mat-form-field-infix { padding: 0.5em 0px !important;}\\r\\n  mat-form-field{\\r\\n    width: 100%;\\r\\n    \\r\\n  }\\r\\n  #chFile{\\r\\n    display: none;\\r\\n    }\\r\\n  .btnFile{\\r\\n    background-color: rgb(130, 130, 173);\\r\\n    margin-right: 30px;\\r\\n    width: 110px;\\r\\n    }\\r\\n  table {\\r\\n      border-collapse: initial;\\r\\n      width:100%;\\r\\n      text-align: center !important;\\r\\n    }\\r\\n  tr:nth-child(even) {\\r\\n      height: 25px !important;\\r\\n    }\\r\\n  th {\\r\\n      font-weight: small;\\r\\n      height: 25px !important;\\r\\n      text-align: center;\\r\\n    }\\r\\n  tr {\\r\\n      font-weight: small;\\r\\n      height: 25px !important;\\r\\n      text-align: center;\\r\\n    }\\r\\n  .readonly-wrapper {\\r\\n      pointer-events:none;\\r\\n    }\\r\\n  .readonly-wrapper .readonly-block {\\r\\n      pointer-events: none;\\r\\n    }\\r\\n    \\r\\n  \\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdmlld3Mvc2lhcy12Mi9hZGQtc3lzdGVtLWluY29taW5nLW1lc3NhZ2UtdGNwL3ZpZXctb3ItZWRpdC1leHRlcm5hbC1zeXN0ZW0vdmlldy1vci1lZGl0LWV4dGVybmFsLXN5c3RlbS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksYUFBYTtJQUNiLGNBQWM7RUFDaEI7RUFDQTtJQUNFLDBCQUFrQjtJQUFsQix1QkFBa0I7SUFBbEIsa0JBQWtCO0lBQ2xCLFlBQVk7SUFDWixpQkFBaUI7SUFDakIsZ0JBQWdCO0lBQ2hCLG1CQUFtQjtJQUNuQixlQUFlO0lBQ2YsWUFBWTtJQUNaLFNBQVM7SUFDVDtFQUNBO1FBQ0kseURBQXlEO1FBQ3pELHlCQUF5QjtRQUN6QixXQUFXO1FBQ1g7RUFDQTtRQUNBLHNCQUFzQjtRQUN0QixZQUFZO1FBQ1osa0JBQWtCOztRQUVsQjtFQUVBLDhCQUE4Qix5QkFBeUIsQ0FBQztFQUV4RDtRQUNBLGlCQUFpQjtRQUNqQixvQkFBb0I7UUFDcEIsZ0JBQWdCO1FBQ2hCLGtDQUFrQztRQUNsQyxZQUFZO1FBQ1o7RUFFTjs7SUFFRSxVQUFVO0dBQ1gsZ0JBQWdCO0VBQ2pCO0VBRUEseURBQXlELDZCQUE2QixDQUFDO0VBR3ZGO0lBQ0UsV0FBVzs7RUFFYjtFQUVBO0lBQ0UsYUFBYTtJQUNiO0VBQ0E7SUFDQSxvQ0FBb0M7SUFDcEMsa0JBQWtCO0lBQ2xCLFlBQVk7SUFDWjtFQUNBO01BQ0Usd0JBQXdCO01BQ3hCLFVBQVU7TUFDViw2QkFBNkI7SUFDL0I7RUFJQTtNQUNFLHVCQUF1QjtJQUN6QjtFQUVBO01BQ0Usa0JBQWtCO01BQ2xCLHVCQUF1QjtNQUN2QixrQkFBa0I7SUFDcEI7RUFDQTtNQUNFLGtCQUFrQjtNQUNsQix1QkFBdUI7TUFDdkIsa0JBQWtCO0lBQ3BCO0VBRUE7TUFDRSxtQkFBbUI7SUFDckI7RUFFQTtNQUNFLG9CQUFvQjtJQUN0QiIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL3NpYXMtdjIvYWRkLXN5c3RlbS1pbmNvbWluZy1tZXNzYWdlLXRjcC92aWV3LW9yLWVkaXQtZXh0ZXJuYWwtc3lzdGVtL3ZpZXctb3ItZWRpdC1leHRlcm5hbC1zeXN0ZW0uY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5leGFtcGxlLWNvbnRhaW5lciB7XHJcbiAgICBoZWlnaHQ6IDI1MHB4O1xyXG4gICAgb3ZlcmZsb3c6IGF1dG87XHJcbiAgfVxyXG4gIC5tYXQtcmFpc2VkLWJ1dHRvbiB7XHJcbiAgICB3aWR0aDogZml0LWNvbnRlbnQ7XHJcbiAgICBoZWlnaHQ6IDIwcHg7XHJcbiAgICBsaW5lLWhlaWdodDogMjdweDtcclxuICAgIG1pbi1oZWlnaHQ6IDI3cHg7XHJcbiAgICB2ZXJ0aWNhbC1hbGlnbjogdG9wO1xyXG4gICAgZm9udC1zaXplOiAxMXB4O1xyXG4gICAgcGFkZGluZzogMCAwO1xyXG4gICAgbWFyZ2luOiAwO1xyXG4gICAgfVxyXG4gICAgI2N1c3RvbWVycyB7XHJcbiAgICAgICAgZm9udC1mYW1pbHk6IFwiVHJlYnVjaGV0IE1TXCIsIEFyaWFsLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7XHJcbiAgICAgICAgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTtcclxuICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICB9XHJcbiAgICAgICAgI2N1c3RvbWVycyB0ZCwgI2N1c3RvbWVycyB0aCB7XHJcbiAgICAgICAgYm9yZGVyOiAxcHggc29saWQgI2RkZDtcclxuICAgICAgICBwYWRkaW5nOiA4cHg7XHJcbiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgICAgIFxyXG4gICAgICAgIH1cclxuICAgICAgICBcclxuICAgICAgICAjY3VzdG9tZXJzIHRyOm50aC1jaGlsZChldmVuKXtiYWNrZ3JvdW5kLWNvbG9yOiAjZjJmMmYyO31cclxuICAgICAgICBcclxuICAgICAgICAjY3VzdG9tZXJzIHRoIHtcclxuICAgICAgICBwYWRkaW5nLXRvcDogMTJweDtcclxuICAgICAgICBwYWRkaW5nLWJvdHRvbTogMTJweDtcclxuICAgICAgICB0ZXh0LWFsaWduOiBsZWZ0O1xyXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6cmdiKDk3LCAxNzgsIDIxNik7XHJcbiAgICAgICAgY29sb3I6IHdoaXRlO1xyXG4gICAgICAgIH1cclxuICAgICAgIFxyXG4gIC5iYWlzY0luZm9jYXJkXHJcbiAge1xyXG4gICAgd2lkdGg6IDYzJTtcclxuICAgbWFyZ2luLWxlZnQ6IDE1JTtcclxuICB9XHJcbiAgXHJcbiAgOjpuZy1kZWVwIC5tYXQtZm9ybS1maWVsZC1mbGV4ID4gLm1hdC1mb3JtLWZpZWxkLWluZml4IHsgcGFkZGluZzogMC41ZW0gMHB4ICFpbXBvcnRhbnQ7fVxyXG4gIFxyXG4gIFxyXG4gIG1hdC1mb3JtLWZpZWxke1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBcclxuICB9XHJcbiAgICBcclxuICAjY2hGaWxle1xyXG4gICAgZGlzcGxheTogbm9uZTtcclxuICAgIH1cclxuICAgIC5idG5GaWxle1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDEzMCwgMTMwLCAxNzMpO1xyXG4gICAgbWFyZ2luLXJpZ2h0OiAzMHB4O1xyXG4gICAgd2lkdGg6IDExMHB4O1xyXG4gICAgfVxyXG4gICAgdGFibGUge1xyXG4gICAgICBib3JkZXItY29sbGFwc2U6IGluaXRpYWw7XHJcbiAgICAgIHdpZHRoOjEwMCU7XHJcbiAgICAgIHRleHQtYWxpZ246IGNlbnRlciAhaW1wb3J0YW50O1xyXG4gICAgfVxyXG4gIFxyXG4gICAgXHJcbiAgICBcclxuICAgIHRyOm50aC1jaGlsZChldmVuKSB7XHJcbiAgICAgIGhlaWdodDogMjVweCAhaW1wb3J0YW50O1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICB0aCB7XHJcbiAgICAgIGZvbnQtd2VpZ2h0OiBzbWFsbDtcclxuICAgICAgaGVpZ2h0OiAyNXB4ICFpbXBvcnRhbnQ7XHJcbiAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgIH1cclxuICAgIHRyIHtcclxuICAgICAgZm9udC13ZWlnaHQ6IHNtYWxsO1xyXG4gICAgICBoZWlnaHQ6IDI1cHggIWltcG9ydGFudDtcclxuICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICAucmVhZG9ubHktd3JhcHBlciB7XHJcbiAgICAgIHBvaW50ZXItZXZlbnRzOm5vbmU7XHJcbiAgICB9XHJcbiAgICBcclxuICAgIC5yZWFkb25seS13cmFwcGVyIC5yZWFkb25seS1ibG9jayB7XHJcbiAgICAgIHBvaW50ZXItZXZlbnRzOiBub25lO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgIl19 */\"","import { Component, OnInit, ChangeDetectorRef } from '@angular/core';\r\nimport Swal from 'sweetalert2';\r\nimport { AddSystemService } from 'src/app/shared/services/addSys/add-system.service';\r\nimport { AddSystemIntegrationProtocol } from '../add-system';\r\nimport { Router } from '@angular/router';\r\nimport { C, I } from '@angular/cdk/keycodes';\r\n\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-view-or-edit-external-system',\r\n  templateUrl: './view-or-edit-external-system.component.html',\r\n  styleUrls: ['./view-or-edit-external-system.component.css']\r\n})\r\nexport class ViewOrEditExternalSystemComponent implements OnInit {\r\n  showFolderName:boolean;\r\n  hideBasic:boolean;\r\n  tabText: any=\"Incoming\";\r\n  mdbQueueInc=['IBM','JMS'];\r\n  addSysRespData : any;\r\n  deleted : boolean = false;\r\n  authorizeDone : boolean = false;\r\n  editBtn: boolean;\r\n  closeBtn: boolean;\r\n  authBtn: boolean;\r\n\r\n  addSysBasic=new AddSystemNew();//basic info object\r\n  \r\n\r\nmdmtSystemChannel:Array<MdmtSystemChannel>=[];//both incoming and outgoing\r\nmdmtSystemChannelIncAll:Array<MdmtSystemChannel>=[];//only for all-->incoming protocol\r\nmdmtSystemChannelOutAll:Array<MdmtSystemChannel>=[];//only for all-->incoming protocol\r\n// sending to backedn\r\nmdmtSystemDto=new MdmtSystemDto();\r\n  incomingIntegrationProtocol: Array<AddSystemIntegrationProtocol>=[];\r\n  mdmtSystemService:Array<MdmtSystemService>=[];//this is same for iso,xml and json every thing\r\n  mdmtSystemServiceAllInc:Array<MdmtSystemService>=[];//only aLl Incoming service(3rd)screen\r\n  mdmtSystemServiceAllOut:Array<MdmtSystemService>=[];//only All outgoing service(3rd )screen\r\n  // chceking\r\n  protocolForBothIncOut=new MdmtSystemChannel();\r\n  protocolAllInc=new MdmtSystemChannel;//only All outgoing service(3rd )screen\r\n  protocolAllOut=new MdmtSystemChannel;//only All Inc service(3rd )screen\r\n  showProtocol: boolean;\r\n  msgType: any;\r\n  dataType: any[];\r\n  incProtocol: any;\r\n  incDataType: any;\r\n  showTab: boolean;\r\n  showServiceScreen: boolean;\r\n  matLabel1: string;\r\n  matLabel2: string;\r\n  matLabel3: string;\r\n  matLabel4: string;\r\n  showProtocolForAllInc: boolean;\r\n  showProtocolForAllOut:boolean\r\n  onlyInc: boolean;\r\n  showServiceScreeAllOut: boolean;\r\n  queueType: any;\r\n  currentUser: string;\r\n  selectedIndex: number=0;\r\n  showAuditLog: boolean;\r\n  \r\n  selectedFiles: any;\r\n  sizeOfFile: any;\r\n  currentFileUpload: any;\r\n  showProgressbar: boolean;\r\n  messageBasisIso: any[]=[];\r\n  messageKeyIso: any;\r\n  typeDataIso: any;\r\n  invalidIp: boolean=true;\r\n  invalidIp1: boolean=true;\r\n  headerValueIso: any;\r\n  isoRespData: any[]=[];\r\n  xmlRespData: any;\r\n  matLabel_header: string;\r\n  matLabel5: string;\r\n  headerTagData: any;\r\n  editAddSysResp: any;\r\n  navSubscription: any;\r\n  isEdit: boolean=true;\r\n  fileName: any;\r\n  desSystem: any[]=[];\r\n  dataTypeOfIncAll:any[];\r\n  uploadXmlResp: any;\r\n  messageBasisIsoAllOut: any[]=[];\r\n  disableupdtae: boolean=false;\r\n  reopenBtn: boolean;\r\n  authBtnHide: boolean;\r\n  // nodeAndTagName:[]=[{'node':'','tagName':''}]\r\n\r\n  constructor(private addSystem:AddSystemService,private cdr:ChangeDetectorRef,private router:Router){}\r\n  ngOnInit()\r\n  { this.currentUser = localStorage.getItem('userFromLogin');\r\n  this.navSubscription = this.addSystem.getNavParam.subscribe(data =>this.editAddSysResp =data);\r\n  console.log(this.editAddSysResp);\r\n  this.mdmtSystemService.push({dataType:'',headerValue:'',id:'',messageBasis:'',messageKey:'',systemChannelId:'',encryption:'',headerTag:''});\r\n  this.mdmtSystemServiceAllOut.push({id:'',dataType:'',headerValue:'',messageBasis:'',messageKey:'',systemChannelId:'',headerTag:'',encryption:''});\r\n  this.mdmtSystemServiceAllInc.push({id:'',dataType:'',headerValue:'',messageBasis:'',messageKey:'',systemChannelId:'',encryption:'',headerTag:''});\r\n  this.fetchingHeadertag();\r\n  this.currentUser = localStorage.getItem('userFromLogin');\r\n  this.addSysBasic.systemCode = this.editAddSysResp[\"systemCode\"];\r\n  this.addSysBasic.systemName=this.editAddSysResp[\"systemName\"];\r\n  this.addSysBasic.serviceType=this.editAddSysResp[\"serviceType\"];\r\n  this.addSysBasic.sourceIp=this.editAddSysResp[\"sourceIp\"];\r\n  this.addSysBasic.sourcePort=this.editAddSysResp[\"sourcePort\"];\r\n  this.addSysBasic.medianIp=this.editAddSysResp[\"medianIp\"];\r\n  this.addSysBasic.medianPort=this.editAddSysResp[\"medianPort\"];\r\n  this.addSysBasic.messsageType=this.editAddSysResp[\"messsageType\"];\r\n  this.addSysBasic.systemId=this.editAddSysResp[\"systemId\"];\r\n  // audit log\r\n  this.addSysBasic.approvedEver=this.editAddSysResp[\"approvedEver\"];\r\n  this.addSysBasic.recordStatus=this.editAddSysResp[\"recordStatus\"];\r\n  \r\n  this.addSysBasic.approvedStatus=this.editAddSysResp[\"approvedStatus\"];\r\n  this.addSysBasic.approvedTime=this.editAddSysResp[\"approvedTime\"];\r\n  this.addSysBasic.approverId=this.editAddSysResp[\"approverId\"];\r\n  this.addSysBasic.createdTime=this.editAddSysResp[\"createdTime\"];\r\n  this.addSysBasic.creatorId=this.editAddSysResp[\"creatorId\"];\r\n  this.addSysBasic.versionNo=this.editAddSysResp[\"versionNo\"];\r\n  this.addSysBasic.recordStatus=this.editAddSysResp[\"recordStatus\"];\r\n  console.log(this.addSysBasic.recordStatus);\r\n  if(this.addSysBasic.recordStatus== \"C\"){\r\n    console.log(this.addSysBasic.recordStatus);\r\n    this.reopenBtn=false;\r\n    this.authBtnHide=true;\r\n  }\r\n  console.log(\"chhh\",this.editAddSysResp['sysChannel'][0].sysService);\r\n  // this.protocolForBothIncOut.messageChannel=this.editAddSysResp[\"sysChannel\"][0].messageChannel;\r\n  this.msgType=this.addSysBasic.messsageType;\r\n  if(this.msgType=='I')\r\n  {\r\n    this.msgType='Incoming';\r\n  }\r\n  else if(this.msgType=='O')\r\n  {\r\n    this.msgType='Outgoing';\r\n  }\r\n  // this.protocolForBothIncOut.messageChannel=this.editAddSysResp[\"sysChannel\"][0]\r\n  \r\n  // this.cdr.markForCheck();\r\n  if(this.editAddSysResp[\"sysChannel\"][0])\r\n  {\r\n    console.log(\"in if\");\r\n    this.protocolForBothIncOut.messageChannel=this.editAddSysResp[\"sysChannel\"][0].messageChannel;\r\n   this.protocolForBothIncOut.systemId=this.addSysBasic.systemId;\r\n    this.onProtocalSlection(this.protocolForBothIncOut.messageChannel);\r\n  this.protocolForBothIncOut.messageFormat=this.editAddSysResp[\"sysChannel\"][0].messageFormat;\r\n  this.protocolForBothIncOut.channelId=this.editAddSysResp[\"sysChannel\"][0].channelId;\r\n  this.incDataType=this.protocolForBothIncOut.messageFormat;\r\n  this.protocolAllInc.messageChannel=this.editAddSysResp[\"sysChannel\"][0].messageChannel;\r\n  this.protocolAllInc.messageFormat=this.editAddSysResp[\"sysChannel\"][0].messageFormat;\r\n  this.protocolAllInc.systemId=this.addSysBasic.systemId;\r\n  this.onProtocalSlectionIncoming(this.protocolAllInc.messageChannel)\r\n  this.incomingDataypeSelection(this.protocolAllInc.messageChannel);\r\n  this.protocolAllInc.channelId=this.editAddSysResp[\"sysChannel\"][0].channelId;\r\n  this.mdmtSystemService=this.editAddSysResp[\"sysChannel\"][0].sysService;\r\n  this.mdmtSystemService.map(el=>{\r\n    if(el.messageKey!=null){\r\n  return  el.messageKey=el.messageKey.toString()+\"<\"+el.messageBasis.toString();\r\n    }\r\n  })\r\n  this.mdmtSystemServiceAllInc.map(el=>{\r\n    if(el.messageKey!=null){\r\n    return  el.messageKey=el.messageKey.toString()+\"<\"+el.messageBasis.toString();\r\n    }\r\n    })\r\n  this.mdmtSystemServiceAllInc=this.editAddSysResp[\"sysChannel\"][0].sysService;\r\n  this.messageBasisIso=this.mdmtSystemServiceAllInc.map(el=>el.messageBasis)\r\n  console.log(\"serv\",this.mdmtSystemService);\r\n  }\r\n   if( this.editAddSysResp[\"sysChannel\"][1])\r\n  { console.log(\"in else if\");\r\n    // this.protocolAllInc.messageChannel=this.editAddSysResp[\"sysChannel\"][0].messageChannel;\r\n    // this.protocolAllInc.messageFormat=this.editAddSysResp[\"sysChannel\"][0].messageFormat;\r\n    this.protocolAllOut.channelId=this.editAddSysResp[\"sysChannel\"][1].channelId;\r\n    this.protocolAllOut.systemId=this.addSysBasic.systemId;\r\n    this.protocolAllOut.messageChannel=this.editAddSysResp[\"sysChannel\"][1].messageChannel;\r\n    this.protocolAllOut.messageFormat=this.editAddSysResp[\"sysChannel\"][1].messageFormat;\r\n    this.mdmtSystemServiceAllOut=this.editAddSysResp[\"sysChannel\"][1].sysService;\r\n    this.mdmtSystemServiceAllOut.map(el=>{\r\n      if(el.messageKey!=null){\r\n      return  el.messageKey=el.messageKey.toString()+\"<\"+el.messageBasis.toString();\r\n      }\r\n      })\r\n    this.messageBasisIsoAllOut=this.mdmtSystemServiceAllOut.map(el=>el.messageBasis);\r\n     this.onProtocalSlectionOutGoing(this.protocolAllOut.messageChannel);\r\n  }\r\n  \r\n  // this.mdmtSystemService=this.editAddSysResp[\"mdmtSystemService\"];\r\n  // // this.addSysRespData = this.editAddSysResp[\"mdmtSystem\"];\r\n  console.log(this.currentUser,this.addSysBasic.creatorId);\r\n \r\n \r\n  // this.onProtocalSlection(this.editAddSysResp[\"sysChannel\"][0].messageChannel);\r\n  this.cdr.markForCheck();\r\n  // this.onProtocalSlectionOutGoing(this.protocolAllOut.messageChannel);\r\n}\r\n\r\n  onNextOfBasicInfo()\r\n  {\r\n    if(this.addSysBasic.medianIp === this.addSysBasic.sourceIp){\r\n      Swal.fire({text:'Median IP and External IP should not be same'})\r\n      return;\r\n    }\r\n    if(this.addSysBasic.medianPort === this.addSysBasic.sourcePort){\r\n      Swal.fire({text:'Median Port and External Port should not be same'})\r\n      return;\r\n    }\r\n    if(this.addSysBasic.messsageType=='I'|| this.addSysBasic.messsageType=='O'){\r\n    this.hideBasic=true;\r\n    this.showProtocol=true;\r\n    this.showTab=false;\r\n    }\r\n    else if(this.addSysBasic.messsageType=='A')\r\n    {\r\n      this.showTab=true;\r\n      this.hideBasic=true;\r\n      this.showProtocol=false;\r\n      this.showProtocolForAllInc=true;\r\n    }\r\n  }\r\n  \r\n  isValidIpv4Addr(event) {\r\n    this.invalidIp=/^(?=\\d+\\.\\d+\\.\\d+\\.\\d+$)(?:(?:25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]|[0-9])\\.?){4}$/.test(event.target.value);\r\n   return /^(?=\\d+\\.\\d+\\.\\d+\\.\\d+$)(?:(?:25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]|[0-9])\\.?){4}$/.test(event.target.value);\r\n }\r\n isValidIpv4Addr1(event) {\r\n   this.invalidIp1=/^(?=\\d+\\.\\d+\\.\\d+\\.\\d+$)(?:(?:25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]|[0-9])\\.?){4}$/.test(event.target.value);\r\n  return /^(?=\\d+\\.\\d+\\.\\d+\\.\\d+$)(?:(?:25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]|[0-9])\\.?){4}$/.test(event.target.value);\r\n }\r\n  onProtocalSlectionIncoming(protocol)\r\n  {\r\n    console.log(protocol);\r\n    this.dataType=[];\r\n    this.incProtocol=protocol;\r\n    if(protocol=='TCP/IP')\r\n    {\r\n      this.dataType=['ISO 8583 1987', 'ISO 8583 1993', 'ISO 8583 2003']\r\n    }\r\n    else if(protocol=='Https/Http')\r\n    {this.dataType=[];\r\n      this.dataType=['XML','JSON'];\r\n    }\r\n    else if(protocol=='MDB')\r\n    {this.dataType=[];\r\n      this.dataType=['XML','JSON','CSV/EXCEL','FLATFILE'];\r\n    }\r\n    else if(protocol=='EJB')\r\n    {\r\n      this.dataType=['XML','JSON','CSV/EXCEL','FLATFILE'];\r\n    }\r\n    else if(protocol=='DB Connection')\r\n    {\r\n      this.dataType=['XML','JSON','CSV/EXCEL','FLATFILE'];\r\n    }\r\n  }\r\n  onsystemMessageSelection(event:any)\r\n  {\r\n    \r\n    if(event=='I')\r\n    { event=\"Incoming\";\r\n      this.msgType=event;\r\n    }\r\n    else if(event=='O')\r\n    { event=\"Outgoing\";\r\n      this.msgType=event;\r\n    }\r\n   \r\n  }\r\n  // Protocol sceltion\r\n  onProtocalSlection(protocol)\r\n  {\r\n    console.log(protocol);\r\n    this.dataType=[];\r\n    this.incProtocol=protocol;\r\n    if(protocol=='TCP/IP')\r\n    {\r\n      this.dataType=['ISO 8583 1987', 'ISO 8583 1993', 'ISO 8583 2003']\r\n    }\r\n    else if(protocol=='Https/Http')\r\n    {this.dataType=[];\r\n      this.dataType=['XML','JSON'];\r\n    }\r\n    else if(protocol=='MDB')\r\n    {this.dataType=[];\r\n      this.dataType=['XML','JSON','CSV/EXCEL','FLATFILE'];\r\n    }\r\n    else if(protocol=='EJB')\r\n    {\r\n      this.dataType=['XML','JSON','CSV/EXCEL','FLATFILE'];\r\n    }\r\n    else if(protocol=='DB Connection')\r\n    {\r\n      this.dataType=['XML','JSON','CSV/EXCEL','FLATFILE'];\r\n    }\r\n    \r\n  }\r\n  allowNumbersOnly(n) {\r\n    \r\n    const pattern = /[0-9\\+\\-\\ ]/;\r\n  let inputChar = String.fromCharCode(n.charCode);\r\n\r\n      if (!pattern.test(inputChar) && n.charCode != '0') {\r\n          n.preventDefault();\r\n      }\r\n}\r\n\r\n  // protocol selection outgoing\r\n  onProtocalSlectionOutGoing(protocol)\r\n  {\r\n    console.log(protocol);\r\n    this.dataType=[];\r\n    this.incProtocol=protocol;\r\n    if(protocol=='TCP/IP')\r\n    {\r\n      this.dataType=['ISO 8583 1987', 'ISO 8583 1993', 'ISO 8583 2003']\r\n    }\r\n    else if(protocol=='Https/Http')\r\n    {this.dataType=[];\r\n      this.dataType=['XML','JSON'];\r\n    }\r\n    else if(protocol=='MDB')\r\n    {this.dataType=[];\r\n      this.dataType=['XML','JSON','CSV/EXCEL','FLATFILE'];\r\n    }\r\n    else if(protocol=='EJB')\r\n    {\r\n      this.dataType=['XML','JSON','CSV/EXCEL','FLATFILE'];\r\n    }\r\n    else if(protocol=='DB Connection')\r\n    {\r\n      this.dataType=['XML','JSON','CSV/EXCEL','FLATFILE'];\r\n    }\r\n    \r\n  }\r\n  incomingDataypeSelection(dataType)\r\n  {\r\n    console.log(dataType);\r\n   \r\n    this.dataTypeOfIncAll=[];\r\n    // this.dataTypeOfIncAll=dataType;\r\n    this.incProtocol=dataType;\r\n    if(dataType=='TCP/IP')\r\n    {\r\n      this.dataTypeOfIncAll=['ISO 8583 1987', 'ISO 8583 1993', 'ISO 8583 2003']\r\n    }\r\n    else if(dataType=='Https/Http')\r\n    {this.dataTypeOfIncAll=[];\r\n      this.dataTypeOfIncAll=['XML','JSON'];\r\n    }\r\n    else if(dataType=='MDB')\r\n    {this.dataTypeOfIncAll=[];\r\n      this.dataTypeOfIncAll=['XML','JSON','CSV/EXCEL','FLATFILE'];\r\n    }\r\n    else if(dataType=='EJB')\r\n    {\r\n      this.dataTypeOfIncAll=['XML','JSON','CSV/EXCEL','FLATFILE'];\r\n    }\r\n    else if(dataType=='DB Connection')\r\n    {\r\n      this.dataTypeOfIncAll=['XML','JSON','CSV/EXCEL','FLATFILE'];\r\n    }\r\n    \r\n  }\r\n  onPreviousToBasic()\r\n  {\r\n    this.showProtocol=false;\r\n    this.hideBasic=false;\r\n    this.showTab=false;\r\n  }\r\n  tabChanged(event)\r\n  { \r\n    console.log(event);\r\n    this.tabText=event.tab.textLabel;\r\n  console.log(\"tabText\",this.tabText);\r\n    this.showProtocolForAllOut=true;\r\n  }\r\n  nextToServcieFromInc(protocol)\r\n  {\r\n    console.log(\"next\");\r\n    \r\n    this.showProtocolForAllInc=false;\r\n    if(protocol.messageChannel==\"TCP/IP\" && protocol.messageFormat==\"ISO 8583 1987\" ||protocol.messageFormat==\"ISO 8583 1993\" ||protocol.messageFormat=='ISO 8583 2003'){\r\n      \r\n      this.fetchingIso();\r\n      this.matLabel_header=\"Header\";\r\n      this.matLabel1=\"Field No\";\r\n      this.matLabel2=\"Field Name\";\r\n      this.matLabel3=\"Data Type\";\r\n      this.matLabel4=\"Default Value\";\r\n      this.matLabel5=\"Encryption\";\r\n    }\r\n    else if(protocol.messageChannel==\"Https/Http\" && protocol.messageFormat==\"XML\"){\r\n\r\n      this.showServiceScreen=true;\r\n      // this.fetchingXMl();\r\n        this.matLabel1=\"null\";\r\n        this.matLabel_header=\"Header\";\r\n        this.matLabel2=\"Tag\";\r\n        this.matLabel3=\"Data Type\";\r\n        this.matLabel4=\"Default Value\";\r\n        this.matLabel5=\"Encryption Type\";\r\n      }\r\n      else if(protocol.messageChannel==\"Https/Http\" && protocol.messageFormat==\"JSON\"){\r\n        this.showServiceScreen=true;\r\n        this.matLabel1=null;\r\n        this.matLabel2=\"Key\";\r\n        this.matLabel_header=\"Header\";\r\n        this.matLabel3=\"Data Type\";\r\n        this.matLabel4=\"Default value\";\r\n        this.matLabel5=\"Encryption Type\";\r\n      }\r\n      else if(protocol.messageChannel==\"MDB\" && protocol.messageFormat==\"XML\"){\r\n        this.showServiceScreen=true;\r\n        this.matLabel1=\"Node\";\r\n        this.matLabel2=\"Tag Name\";\r\n        this.matLabel3=\"Data Type\";\r\n        this.matLabel4=\"Default value\";\r\n      }\r\n      else if(protocol.messageChannel==\"MDB\" && protocol.messageFormat==\"JSON\"){\r\n        this.showServiceScreen=true;\r\n        this.matLabel1=null;\r\n        this.matLabel2=\"Key\";\r\n        this.matLabel3=\"Data Type\";\r\n        this.matLabel4=\"Default value\";\r\n      }\r\n      else if(protocol.messageChannel==\"MDB\" && protocol.messageFormat==\"CSV/EXCEL\"){\r\n       this.showServiceScreen=true;\r\n       }\r\n       else if(protocol.messageChannel==\"MDB\" && protocol.messageFormat==\"FLATFILE\"){\r\n        this.showServiceScreen=true;\r\n        \r\n        }\r\n        else if(protocol.messageChannel==\"EJB\" && protocol.messageFormat==\"XML\"){\r\n          this.showServiceScreen=true;\r\n         this.matLabel1=\"Node\";\r\n         this.matLabel2=\"Tag Name\";\r\n         this.matLabel3=\"Data Type\";\r\n         this.matLabel4=\"Default value\";\r\n       }\r\n       else if(protocol.messageChannel==\"EJB\" && protocol.messageFormat==\"JSON\"){\r\n        this.showServiceScreen=true;\r\n         this.matLabel1=null;\r\n         this.matLabel2=\"Key\";\r\n         this.matLabel3=\"Data Type\";\r\n         this.matLabel4=\"Default value\";\r\n       } \r\n       else if(protocol.messageChannel==\"EJB\" && protocol.messageFormat==\"FLATFILE\"){\r\n        this.showServiceScreen=true;\r\n        }\r\n        else if(protocol.messageChannel==\"EJB\" && protocol.messageFormat==\"CSV/EXCEL\"){\r\n          this.showServiceScreen=true;\r\n        }\r\n        else if(protocol.messageChannel==\"EJB\" && protocol.messageFormat==\"JSON\"){\r\n          this.showServiceScreen=true;\r\n           this.matLabel1=null;\r\n           this.matLabel2=\"Key\";\r\n           this.matLabel3=\"Data Type\";\r\n           this.matLabel4=\"Default value\";\r\n         }\r\n         else if(protocol.messageChannel==\"DB Connection\" && protocol.messageFormat==\"XML\"){\r\n          this.showServiceScreen=true;\r\n           this.matLabel1=null;\r\n           this.matLabel2=\"Column Name\";\r\n           this.matLabel3=\"Data Type\";\r\n           this.matLabel4=\"Default value\";\r\n         }\r\n         else if(protocol.messageChannel==\"DB Connection\" && protocol.messageFormat==\"JSON\"){\r\n          this.showServiceScreen=true;\r\n           this.matLabel1=null;\r\n           this.matLabel2=\"Column Name\";\r\n           this.matLabel3=\"Data Type\";\r\n           this.matLabel4=\"Default value\";\r\n         }\r\n         else if(protocol.messageChannel==\"DB Connection\" && protocol.messageFormat==\"CSV/EXCEL\"){\r\n          this.showServiceScreen=true;\r\n          \r\n         }\r\n         else if(protocol.messageChannel==\"DB Connection\" && protocol.messageFormat==\"FLATFILE\"){\r\n          this.showServiceScreen=true;\r\n        }\r\n  }\r\n  // For Incoming and outgoing --->\r\n  onNextOfProtocol(protocol)\r\n  { console.log(protocol);\r\n    console.log(this.addSysBasic);\r\n  //  if(this.addSysBasic.messsageType=='I' ||this.addSysBasic.messsageType=='O'){\r\n    this.showProtocol=false;\r\n    if(protocol.messageChannel==\"TCP/IP\" && protocol.messageFormat==\"ISO 8583 1993\" ||(protocol.messageChannel==\"TCP/IP\" && protocol.messageFormat==\"ISO 8583 1987\" )||(protocol.messageChannel==\"TCP/IP\" && protocol.messageFormat==\"ISO 8583 2003\" )){\r\n      console.log(\"this if1\");\r\n      this.fetchingIso();\r\n     this.onlyInc=true;\r\n     this.matLabel_header=\"Header\"\r\n      this.matLabel1=\"Field No\";\r\n      this.matLabel2=\"Field Name\";\r\n      this.matLabel3=\"Data Type\";\r\n      this.matLabel4=\"Default Value\";\r\n      this.matLabel5=\"Encryption Type\";\r\n    } \r\n\r\n   else if(protocol.messageChannel==\"Https/Http\" && protocol.messageFormat==\"XML\"){\r\n     console.log(\"her xml\");\r\n    this.onlyInc=true;\r\n    // this.fetchingXMl();\r\n    this.matLabel_header=\"Header\";\r\n      this.matLabel1=\"null\";\r\n      this.matLabel2=\"Tag\";\r\n      this.matLabel3=\"Data Type\";\r\n      this.matLabel5=\"Encryption Type\";\r\n      this.matLabel4=\"Default Value\";\r\n    }\r\n    else if(protocol.messageChannel==\"Https/Http\" && protocol.messageFormat==\"JSON\"){\r\n      console.log(protocol.messageChannel,protocol.messageFormat);\r\n      this.onlyInc=true;\r\n      this.matLabel1=null;\r\n      this.matLabel2=\"Tag\";\r\n      this.matLabel3=\"Data Type\";\r\n      this.matLabel4=\"Default value\";\r\n    }\r\n    else if(protocol.messageChannel==\"MDB\" && protocol.messageFormat==\"XML\"){\r\n      this.onlyInc=true;\r\n      this.matLabel1=\"Node\";\r\n      this.matLabel2=\"Tag Name\";\r\n      this.matLabel3=\"Data Type\";\r\n      this.matLabel4=\"Default value\";\r\n    }\r\n    else if(protocol.messageChannel==\"MDB\" && protocol.messageFormat==\"JSON\"){\r\n      this.onlyInc=true;\r\n      this.matLabel1=null;\r\n      this.matLabel2=\"Key\";\r\n      this.matLabel3=\"Data Type\";\r\n      this.matLabel4=\"Default value\";\r\n    }\r\n    else if(protocol.messageChannel==\"MDB\" && protocol.messageFormat==\"CSV/EXCEL\"){\r\n     this.onlyInc=true;\r\n     }\r\n     else if(protocol.messageChannel==\"MDB\" && protocol.messageFormat==\"FLATFILE\"){\r\n      this.onlyInc=true;\r\n      \r\n      }\r\n      else if(protocol.messageChannel==\"EJB\" && protocol.messageFormat==\"XML\"){\r\n        this.onlyInc=true;\r\n       this.matLabel1=\"Node\";\r\n       this.matLabel2=\"Tag Name\";\r\n       this.matLabel3=\"Data Type\";\r\n       this.matLabel4=\"Default value\";\r\n     }\r\n     else if(protocol.messageChannel==\"EJB\" && protocol.messageFormat==\"JSON\"){\r\n      this.onlyInc=true;\r\n       this.matLabel1=null;\r\n       this.matLabel2=\"Key\";\r\n       this.matLabel3=\"Data Type\";\r\n       this.matLabel4=\"Default value\";\r\n     } \r\n     else if(protocol.messageChannel==\"EJB\" && protocol.messageFormat==\"FLATFILE\"){\r\n      this.onlyInc=true;\r\n      }\r\n      else if(protocol.messageChannel==\"EJB\" && protocol.messageFormat==\"CSV/EXCEL\"){\r\n        this.onlyInc=true;\r\n      }\r\n      else if(protocol.messageChannel==\"EJB\" && protocol.messageFormat==\"JSON\"){\r\n        this.onlyInc=true;\r\n         this.matLabel1=null;\r\n         this.matLabel2=\"Key\";\r\n         this.matLabel3=\"Data Type\";\r\n         this.matLabel4=\"Default value\";\r\n       }\r\n       else if(protocol.messageChannel==\"DB Connection\" && protocol.messageFormat==\"XML\"){\r\n        this.onlyInc=true;\r\n         this.matLabel1=null;\r\n         this.matLabel2=\"Column Name\";\r\n         this.matLabel3=\"Data Type\";\r\n         this.matLabel4=\"Default value\";\r\n       }\r\n       else if(protocol.messageChannel==\"DB Connection\" && protocol.messageFormat==\"JSON\"){\r\n        this.onlyInc=true;\r\n         this.matLabel1=null;\r\n         this.matLabel2=\"Column Name\";\r\n         this.matLabel3=\"Data Type\";\r\n         this.matLabel4=\"Default value\";\r\n       }\r\n       else if(protocol.messageChannel==\"DB Connection\" && protocol.messageFormat==\"CSV/EXCEL\"){\r\n        this.onlyInc=true;\r\n        \r\n       }\r\n       else if(protocol.messageChannel==\"DB Connection\" && protocol.messageFormat==\"FLATFILE\"){\r\n        this.onlyInc=true;\r\n      }\r\n    // }\r\n    \r\n  }\r\n  // all \r\n  nextStep(tabIndex : number) {\r\n    console.log(tabIndex);\r\n    if (this.selectedIndex < 2) {\r\n      this.selectedIndex = tabIndex + 1;\r\n    }\r\n  }\r\n\r\n\r\n  previousStep(tabIndex : number) {\r\n    console.log(tabIndex);\r\n    if (this.selectedIndex > 0) {\r\n      this.selectedIndex = tabIndex - 2;\r\n    }\r\n  }\r\n  // All out\r\n  onNextOfProtocolAllOut(protocol)\r\n  {\r\n    console.log(protocol);\r\n  \r\n      this.showProtocolForAllOut=false;\r\n      if(protocol.messageChannel==\"TCP/IP\" && protocol.messageFormat==\"ISO 8583 1987\" ||protocol.messageFormat==\"ISO 8583 1993\" ||protocol.messageFormat=='ISO 8583 2003'){\r\n       this.fetchingIso();\r\n       this.matLabel_header=\"Header\";\r\n        this.matLabel1=\"Field No\";\r\n        this.matLabel2=\"Field Name\";\r\n        this.matLabel3=\"Data Type\";\r\n        this.matLabel4=\"Default Value\";\r\n        this.matLabel5=\"Encryption Type\";\r\n      }\r\n     else if(protocol.messageChannel==\"Https/Http\" && protocol.messageFormat==\"XML\"){\r\n      //  this.fetchingXMl();\r\n      this.showServiceScreeAllOut=true;\r\n        this.matLabel1=\"null\";\r\n        this.matLabel_header=\"Header\";\r\n        this.matLabel2=\"Tag\";\r\n        this.matLabel3=\"Data Type\";\r\n        this.matLabel4=\"Default Value\";\r\n        this.matLabel5=\"Encryption Type\";\r\n      }\r\n      else if(protocol.messageChannel==\"Https/Http\" && protocol.messageFormat==\"JSON\"){\r\n        this.showServiceScreeAllOut=true;\r\n        this.matLabel1=null;\r\n        this.matLabel2=\"Key\";\r\n        this.matLabel3=\"Data Type\";\r\n        this.matLabel4=\"Default value\";\r\n      }\r\n      else if(protocol.messageChannel==\"MDB\" && protocol.messageFormat==\"XML\"){\r\n        this.showServiceScreeAllOut=true;\r\n        this.matLabel1=\"Node\";\r\n        this.matLabel2=\"Tag Name\";\r\n        this.matLabel3=\"Data Type\";\r\n        this.matLabel4=\"Default value\";\r\n      }\r\n      else if(protocol.messageChannel==\"MDB\" && protocol.messageFormat==\"JSON\"){\r\n        this.showServiceScreeAllOut=true;\r\n        this.matLabel1=null;\r\n        this.matLabel2=\"Key\";\r\n        this.matLabel3=\"Data Type\";\r\n        this.matLabel4=\"Default value\";\r\n      }\r\n      else if(protocol.messageChannel==\"MDB\" && protocol.messageFormat==\"CSV/EXCEL\"){\r\n       this.showServiceScreeAllOut=true;\r\n       }\r\n       else if(protocol.messageChannel==\"MDB\" && protocol.messageFormat==\"FLATFILE\"){\r\n        this.showServiceScreeAllOut=true;\r\n        \r\n        }\r\n        else if(protocol.messageChannel==\"EJB\" && protocol.messageFormat==\"XML\"){\r\n          this.showServiceScreeAllOut=true;\r\n         this.matLabel1=\"Node\";\r\n         this.matLabel2=\"Tag Name\";\r\n         this.matLabel3=\"Data Type\";\r\n         this.matLabel4=\"Default value\";\r\n       }\r\n       else if(protocol.messageChannel==\"EJB\" && protocol.messageFormat==\"JSON\"){\r\n        this.showServiceScreeAllOut=true;\r\n         this.matLabel1=null;\r\n         this.matLabel2=\"Key\";\r\n         this.matLabel3=\"Data Type\";\r\n         this.matLabel4=\"Default value\";\r\n       } \r\n       else if(protocol.messageChannel==\"EJB\" && protocol.messageFormat==\"FLATFILE\"){\r\n        this.showServiceScreeAllOut=true;\r\n        }\r\n        else if(protocol.messageChannel==\"EJB\" && protocol.messageFormat==\"CSV/EXCEL\"){\r\n          this.showServiceScreeAllOut=true;\r\n        }\r\n        else if(protocol.messageChannel==\"EJB\" && protocol.messageFormat==\"JSON\"){\r\n          this.showServiceScreeAllOut=true;\r\n           this.matLabel1=null;\r\n           this.matLabel2=\"Key\";\r\n           this.matLabel3=\"Data Type\";\r\n           this.matLabel4=\"Default value\";\r\n         }\r\n         else if(protocol.messageChannel==\"DB Connection\" && protocol.messageFormat==\"XML\"){\r\n          this.showServiceScreeAllOut=true;\r\n           this.matLabel1=null;\r\n           this.matLabel2=\"Column Name\";\r\n           this.matLabel3=\"Data Type\";\r\n           this.matLabel4=\"Default value\";\r\n         }\r\n         else if(protocol.messageChannel==\"DB Connection\" && protocol.messageFormat==\"JSON\"){\r\n          this.showServiceScreeAllOut=true;\r\n           this.matLabel1=null;\r\n           this.matLabel2=\"Column Name\";\r\n           this.matLabel3=\"Data Type\";\r\n           this.matLabel4=\"Default value\";\r\n         }\r\n         else if(protocol.messageChannel==\"DB Connection\" && protocol.messageFormat==\"CSV/EXCEL\"){\r\n          this.showServiceScreeAllOut=true;\r\n          \r\n         }\r\n         else if(protocol.messageChannel==\"DB Connection\" && protocol.messageFormat==\"FLATFILE\"){\r\n          this.showServiceScreeAllOut=true;\r\n        }\r\n      \r\n  }\r\n  moveToProtocol()\r\n  {\r\n    this.onlyInc=false;\r\n    this.showProtocol=true;\r\n    this.showAuditLog=false;\r\n  }\r\n  moveIncProtocolAll()\r\n  {\r\nthis.showProtocolForAllInc=true;\r\nthis.showServiceScreen=false;\r\n  }\r\n  moveToProtocolAllOut()\r\n  {\r\n    this.showProtocolForAllOut=true;\r\n    this.showServiceScreeAllOut=false;\r\n  }\r\n  onResetOfProtocol(protocolAllForReset)\r\n  {console.log(\"on reset of Inc all\",protocolAllForReset);\r\nif(this.addSysBasic.messsageType=='I'||this.addSysBasic.messsageType=='O'){\r\n  console.log(\"here in 1 if\");\r\n  this.protocolForBothIncOut.messageChannel=\" \";\r\n  this.protocolForBothIncOut.messageFormat=\" \";\r\n}\r\n  else if(this.addSysBasic.messsageType=='A' && this.tabText==\"Incoming\")\r\n  { console.log(\"here inc and all\");\r\n    this.protocolAllInc.messageChannel=\" \";\r\n    this.protocolAllInc.messageFormat=\" \"\r\n  }\r\n  else if(this.addSysBasic.messsageType=='A' && this.tabText==\"Outgoing\"){\r\n    this.protocolAllOut.messageFormat=\" \";\r\n    this.protocolAllOut.messageChannel=\" \"\r\n  }\r\n    // this.protocolAllInc=new MdmtSystemChannel()\r\n  }\r\n  onResetOFAllInc()\r\n  {\r\n   \r\n    this.mdmtSystemServiceAllInc.forEach(element=>{\r\n      element.dataType='',\r\n      element.headerValue='',\r\n      element.id='',\r\n      element.messageBasis='',\r\n      element.messageKey='',\r\n      element.headerTag='',\r\n      element.encryption='No Encryption'\r\n      element.systemChannelId='';\r\n    })\r\n  }\r\n  addOfIncAll()\r\n  {\r\n    this.mdmtSystemServiceAllInc.push({id:'',headerValue:'',messageKey:'',systemChannelId:'',dataType:'',messageBasis:'',headerTag:'',encryption:'No Encryption'});\r\n  }\r\n  onDeleteOFAllInc(i)\r\n  {\r\n    this.mdmtSystemServiceAllInc.splice(i,1);\r\n  }\r\n  onResetOfProtocolAllOut()\r\n  {\r\n    this.protocolAllOut=new MdmtSystemChannel;\r\n  }\r\n  add()\r\n  {\r\n  //  this.mdmtSystemService.push({dataType:'',encryption:'',headerTag:'',headerValue:'',id:'',messageBasis:'',messageKey:'',systemChannelId:''});\r\n   this.mdmtSystemService.push({id:'',dataType:'',headerValue:'',messageBasis:'',messageKey:'',systemChannelId:'',headerTag:'', encryption:'No Encryption'});\r\n  }\r\n  onMdbQueue(event){\r\n   this.queueType=event.value;\r\n  }\r\n  onFisnih()\r\n \r\n  {  \r\n    // console.log(onFisnih.value);\r\n    // this.afterFinish=true;\r\n    // this.mdmtSystemService.map(el=>{\r\n    //   console.log(el.messageKey);\r\n\r\n    // el.messageKey.split(\"<\")[0];\r\n    //   // console.log(el.messageKey);\r\n\r\n    // })\r\n    for(let i=0;i<this.mdmtSystemService.length;i++){\r\n      if(this.mdmtSystemService[i].messageKey!=null){\r\n      this.mdmtSystemService[i].messageKey=this.mdmtSystemService[i].messageKey.split(\"<\")[0]\r\n      }\r\n    }\r\n    for(let j=0;j<this.mdmtSystemServiceAllInc.length;j++){\r\n      if(this.mdmtSystemServiceAllInc[j].messageKey!=null){\r\n      this.mdmtSystemServiceAllInc[j].messageKey=this.mdmtSystemServiceAllInc[j].messageKey.split(\"<\")[0]\r\n      }\r\n    }\r\n    for(let k=0;k<this.mdmtSystemServiceAllOut.length;k++){\r\n      if(this.mdmtSystemServiceAllOut[k].messageKey!=null){\r\n      this.mdmtSystemServiceAllOut[k].messageKey=this.mdmtSystemServiceAllOut[k].messageKey.split(\"<\")[0]\r\n      }\r\n    }\r\n    if (this.mdmtSystemService.some( mdmtSystemService => mdmtSystemService['headerTag'] === 'OPERATION') && this.mdmtSystemService.some( mdmtSystemService => mdmtSystemService['headerTag'] === 'SERVICE')){\r\n      if(this.addSysBasic.messsageType=='I' ||this.addSysBasic.messsageType=='O'){\r\n        this.mdmtSystemChannel.push(this.protocolForBothIncOut);\r\n      console.log(\"in if\",this.mdmtSystemService);\r\n      this.addSysBasic.sysChannel=this.mdmtSystemChannel;\r\n      this.addSysBasic.sysChannel[0].messageType=this.addSysBasic.messsageType;\r\n      this.addSysBasic.sysChannel[0].systemId = this.addSysBasic.systemId;\r\n  \r\n  \r\n      this.addSysBasic.sysChannel.forEach(element => {\r\n        element.sysService=this.mdmtSystemService;\r\n      });\r\n  \r\n      console.log(\"complete data\",this.addSysBasic);\r\n    \r\n  \r\n      // this.mdmtSystemChannel.push(this.protocolForBothIncOut);\r\n      // this.mdmtSystemDto.mdmtSystemService=this.mdmtSystemService;\r\n      // this.mdmtSystemDto.mdmtSystemChannel=this.mdmtSystemChannel;\r\n      // this.mdmtSystemDto.mdmtSystem=this.addSysBasic;\r\n      console.log(\"this.mdmtSystemDto.mdmtSystemService\",this.mdmtSystemDto.mdmtSystemService);\r\n    }\r\n    else{\r\n      console.log(\"in else\");\r\n      // this.mdmtSystemDto.mdmtSystem=this.addSysBasic;\r\n  \r\n      this.mdmtSystemChannel.push(this.protocolAllInc);\r\n      this.mdmtSystemChannel.push(this.protocolAllOut);\r\n      this.addSysBasic.sysChannel=this.mdmtSystemChannel;\r\n      \r\n      // this.addSysBasic.sysChannel[0].sysService.splice(0,0,this.mdmtSystemServiceAllInc)\r\n      // this.addSysBasic.sysChannel[0].sysService.splice(0,0,this.mdmtSystemServiceAllInc);\r\n  \r\n      // this.mdmtSystemService.push(...this.mdmtSystemServiceAllInc,...this.mdmtSystemServiceAllOut);\r\n      console.log(\"all\",this.mdmtSystemService);\r\n    //  this.addSysBasic.sysChannel.map(el=>{el.sysService=this.mdmtSystemService});\r\n      this.addSysBasic.sysChannel[0].sysService=this.mdmtSystemServiceAllInc;\r\n      this.addSysBasic.sysChannel[1].sysService=this.mdmtSystemServiceAllOut;\r\n  \r\n      console.log(\"complete data\",this.addSysBasic);\r\n      // this.mdmtSystemDto.mdmtSystemService=this.mdmtSystemService;\r\n      // this.mdmtSystemDto.mdmtSystemChannel=this.mdmtSystemChannel;\r\n    } \r\n  \r\n      \r\n      this.addSystem.editaddsystem(\"update\",this.currentUser,this.addSysBasic).subscribe(addSysResp=>{\r\n        console.log(\"resp\",addSysResp);\r\n        if(addSysResp){this.showAuditLog=true;\r\n          this.disableupdtae=true;\r\n          // this.addSysRespData=addSysResp;\r\n          Swal.fire({text:'Record saved successfully'})}\r\n      },(\r\n        err=>{Swal.fire({text:'Server Error'})\r\n        // this.afterFinish=false;\r\n      }\r\n      ));\r\n    }\r\n    else if (this.mdmtSystemServiceAllOut.some( mdmtSystemServiceAllOut => mdmtSystemServiceAllOut['headerTag'] === 'OPERATION') && this.mdmtSystemServiceAllOut.some( mdmtSystemServiceAllOut => mdmtSystemServiceAllOut['headerTag'] === 'SERVICE')){\r\n      if(this.addSysBasic.messsageType=='I' ||this.addSysBasic.messsageType=='O'){\r\n        this.mdmtSystemChannel.push(this.protocolForBothIncOut);\r\n      console.log(\"in if\",this.mdmtSystemService);\r\n      this.addSysBasic.sysChannel=this.mdmtSystemChannel;\r\n      this.addSysBasic.sysChannel[0].messageType=this.addSysBasic.messsageType;\r\n      this.addSysBasic.sysChannel[0].systemId = this.addSysBasic.systemId;\r\n  \r\n  \r\n      this.addSysBasic.sysChannel.forEach(element => {\r\n        element.sysService=this.mdmtSystemService;\r\n      });\r\n  \r\n      console.log(\"complete data\",this.addSysBasic);\r\n    \r\n  \r\n      // this.mdmtSystemChannel.push(this.protocolForBothIncOut);\r\n      // this.mdmtSystemDto.mdmtSystemService=this.mdmtSystemService;\r\n      // this.mdmtSystemDto.mdmtSystemChannel=this.mdmtSystemChannel;\r\n      // this.mdmtSystemDto.mdmtSystem=this.addSysBasic;\r\n      console.log(\"this.mdmtSystemDto.mdmtSystemService\",this.mdmtSystemDto.mdmtSystemService);\r\n    }\r\n    else{\r\n      console.log(\"in else\");\r\n      // this.mdmtSystemDto.mdmtSystem=this.addSysBasic;\r\n  \r\n      this.mdmtSystemChannel.push(this.protocolAllInc);\r\n      this.mdmtSystemChannel.push(this.protocolAllOut);\r\n      this.addSysBasic.sysChannel=this.mdmtSystemChannel;\r\n      \r\n      // this.addSysBasic.sysChannel[0].sysService.splice(0,0,this.mdmtSystemServiceAllInc)\r\n      // this.addSysBasic.sysChannel[0].sysService.splice(0,0,this.mdmtSystemServiceAllInc);\r\n  \r\n      // this.mdmtSystemService.push(...this.mdmtSystemServiceAllInc,...this.mdmtSystemServiceAllOut);\r\n      console.log(\"all\",this.mdmtSystemService);\r\n    //  this.addSysBasic.sysChannel.map(el=>{el.sysService=this.mdmtSystemService});\r\n      this.addSysBasic.sysChannel[0].sysService=this.mdmtSystemServiceAllInc;\r\n      this.addSysBasic.sysChannel[1].sysService=this.mdmtSystemServiceAllOut;\r\n  \r\n      console.log(\"complete data\",this.addSysBasic);\r\n      // this.mdmtSystemDto.mdmtSystemService=this.mdmtSystemService;\r\n      // this.mdmtSystemDto.mdmtSystemChannel=this.mdmtSystemChannel;\r\n    } \r\n  \r\n      \r\n      this.addSystem.editaddsystem(\"update\",this.currentUser,this.addSysBasic).subscribe(addSysResp=>{\r\n        console.log(\"resp\",addSysResp);\r\n        if(addSysResp){this.showAuditLog=true;\r\n          this.disableupdtae=true;\r\n          // this.addSysRespData=addSysResp;\r\n          Swal.fire({text:'Record saved successfully'})}\r\n      },(\r\n        err=>{Swal.fire({text:'Server Error'})\r\n        // this.afterFinish=false;\r\n      }\r\n      ));\r\n    }\r\n    else{\r\n      Swal.fire({text:'Header value OPERATION and SERVICE are mandatory !'});\r\n    }\r\n  }\r\n  // onFisnih()\r\n  // { if(this.addSysBasic.messsageType=='I' ||this.addSysBasic.messsageType=='O'){\r\n  //   console.log(\"in if\",this.mdmtSystemService);\r\n  //   this.mdmtSystemChannel.push(this.protocolForBothIncOut);\r\n  //   this.mdmtSystemDto.mdmtSystemService=this.mdmtSystemService;\r\n  //   this.mdmtSystemDto.mdmtSystemChannel=this.mdmtSystemChannel;\r\n  //   this.mdmtSystemDto.mdmtSystem=this.addSysBasic;\r\n  //   console.log(\"this.mdmtSystemDto.mdmtSystemService\",this.mdmtSystemDto.mdmtSystemService);\r\n  // }\r\n  // else{\r\n  //   console.log(\"in else\");\r\n  //   this.mdmtSystemDto.mdmtSystem=this.addSysBasic;\r\n  //   this.mdmtSystemChannel.push(this.protocolAllInc);\r\n  //   this.mdmtSystemChannel.push(this.protocolAllOut);\r\n  //   this.mdmtSystemService.push(...this.mdmtSystemServiceAllInc,...this.mdmtSystemServiceAllOut);\r\n  //   this.mdmtSystemDto.mdmtSystemService=this.mdmtSystemService;\r\n  //   this.mdmtSystemDto.mdmtSystemChannel=this.mdmtSystemChannel;\r\n  // } \r\n\r\n  //   console.log(\"last\",this.mdmtSystemDto);\r\n  //   this.addSystem.submittingAddSystem(this.mdmtSystemDto,this.currentUser).subscribe(addSysResp=>{\r\n  //     console.log(\"resp\",addSysResp);\r\n  //     if(addSysResp){this.showAuditLog=true;\r\n  //       this.addSysRespData=addSysResp.mdmtSystem;\r\n  //       Swal.fire({text:'Record saved successfully'})}\r\n  //   },(err=>{Swal.fire({text:'Server Error'})}));\r\n  // }\r\n  onResetOfAllOut()\r\n  {\r\n    this.mdmtSystemServiceAllOut.forEach(element=>{\r\n      element.dataType='',\r\n      element.headerValue='',\r\n      element.id='',\r\n      element.messageBasis='',\r\n      element.headerTag='',\r\n      element.messageKey='',\r\n      element.systemChannelId='';\r\n      element.encryption='No Encryption'\r\n    })\r\n  }\r\n\r\n  authorizeSystem(){\r\n    if(this.currentUser == this.addSysBasic.creatorId){\r\n      Swal.fire('Maker cannot authorize!');\r\n    }\r\n    else{\r\n      if (this.addSysBasic.messsageType == 'I' || this.addSysBasic.messsageType == 'O') {\r\n        this.mdmtSystemChannel.push(this.protocolForBothIncOut);\r\n        this.addSysBasic.sysChannel = this.mdmtSystemChannel;\r\n        this.addSysBasic.sysChannel[0].messageType = this.addSysBasic.messsageType;\r\n        this.addSysBasic.sysChannel[0].systemId = this.addSysBasic.systemId;\r\n        this.addSysBasic.sysChannel.forEach(element => {\r\n          element.sysService = this.mdmtSystemService;\r\n        });\r\n      }\r\n      else {\r\n        this.mdmtSystemChannel.push(this.protocolAllInc);\r\n        this.mdmtSystemChannel.push(this.protocolAllOut);\r\n        this.addSysBasic.sysChannel = this.mdmtSystemChannel;\r\n        this.addSysBasic.sysChannel[0].systemId = this.addSysBasic.systemId;\r\n        this.addSysBasic.sysChannel[0].sysService = this.mdmtSystemServiceAllInc;\r\n        this.addSysBasic.sysChannel[1].sysService = this.mdmtSystemServiceAllOut;\r\n      }\r\n      console.log(this.addSysBasic);\r\n      this.addSystem.editaddsystem(\"auth\",this.currentUser,this.addSysBasic).subscribe((response) => {\r\n        console.log(response);\r\n        this.authorizeDone = true;\r\n        // this.reopenBtn=false;\r\n        this.addSysBasic = response;\r\n        Swal.fire('Authorized Successfully!');\r\n      });\r\n    }\r\n  }\r\n\r\n  closeSystem(){\r\n \r\n    if (this.addSysBasic.messsageType == 'I' || this.addSysBasic.messsageType == 'O') {\r\n      this.mdmtSystemChannel.push(this.protocolForBothIncOut);\r\n      this.addSysBasic.sysChannel = this.mdmtSystemChannel;\r\n      this.addSysBasic.sysChannel[0].messageType = this.addSysBasic.messsageType;\r\n      this.addSysBasic.sysChannel[0].systemId = this.addSysBasic.systemId;\r\n      this.addSysBasic.sysChannel.forEach(element => {\r\n        element.sysService = this.mdmtSystemService;\r\n      });\r\n    }\r\n    else {\r\n      this.mdmtSystemChannel.push(this.protocolAllInc);\r\n      this.mdmtSystemChannel.push(this.protocolAllOut);\r\n      this.addSysBasic.sysChannel = this.mdmtSystemChannel;\r\n      this.addSysBasic.sysChannel[0].systemId = this.addSysBasic.systemId;\r\n      this.addSysBasic.sysChannel[0].sysService = this.mdmtSystemServiceAllInc;\r\n      this.addSysBasic.sysChannel[1].sysService = this.mdmtSystemServiceAllOut;\r\n    }\r\n    console.log(this.addSysBasic);\r\n    this.addSystem.editaddsystem(\"close\",this.currentUser,this.addSysBasic).subscribe((response) => {\r\n      console.log(response);\r\n      if (response) {\r\n        this.addSysBasic = response;\r\n        this.editBtn=true;\r\n        this.authBtn=true;\r\n        this.deleted=false;\r\n        this.reopenBtn=false;\r\n        Swal.fire('Closed Successfully!');\r\n      }\r\n    });\r\n  }\r\n\r\n  openSystem(){\r\n  \r\n    if (this.addSysBasic.messsageType == 'I' || this.addSysBasic.messsageType == 'O') {\r\n      this.mdmtSystemChannel.push(this.protocolForBothIncOut);\r\n      this.addSysBasic.sysChannel = this.mdmtSystemChannel;\r\n      this.addSysBasic.sysChannel[0].systemId = this.addSysBasic.systemId;\r\n      this.addSysBasic.sysChannel[0].messageType = this.addSysBasic.messsageType;\r\n      this.addSysBasic.sysChannel.forEach(element => {\r\n        element.sysService = this.mdmtSystemService;\r\n      });\r\n    }\r\n    else {\r\n      this.mdmtSystemChannel.push(this.protocolAllInc);\r\n      this.mdmtSystemChannel.push(this.protocolAllOut);\r\n      this.addSysBasic.sysChannel = this.mdmtSystemChannel;\r\n      this.addSysBasic.sysChannel[0].systemId = this.addSysBasic.systemId;\r\n      this.addSysBasic.sysChannel[0].sysService = this.mdmtSystemServiceAllInc;\r\n      this.addSysBasic.sysChannel[1].sysService = this.mdmtSystemServiceAllOut;\r\n    }\r\n    console.log(this.addSysBasic);\r\n    this.addSystem.editaddsystem(\"open\",this.currentUser,this.addSysBasic).subscribe((response) => {\r\n      console.log(response);\r\n      if (response) {\r\n        this.addSysBasic = response;\r\n        this.authBtnHide=false;\r\n        this.editBtn=false;\r\n        this.authBtn=false;\r\n        Swal.fire('Opened Successfully!');\r\n      }\r\n    });\r\n  }\r\n  \r\n  deleteSystem(){\r\n    console.log(this.addSysBasic);\r\n    this.addSystem.deleteAddSystem(this.currentUser,this.addSysBasic.systemId).subscribe((response) => \r\n    {\r\n      console.log(response);\r\n      if(response){\r\n        this.deleted = true;\r\n        this.editBtn=true;\r\n        this.authBtn=true;\r\n        this.closeBtn=true;\r\n      \r\n        Swal.fire({title:'Deleted Successfully!',\r\n        confirmButtonText:'Ok'\r\n      }).then((result)=>{\r\n          if(result){\r\n            this.router.navigateByUrl('/sias-v2/externalSysSummaryNew')\r\n          }\r\n        });\r\n       \r\n      }\r\n      else{\r\n      Swal.fire(\"Failed to delete the reocrd\");\r\n      }\r\n      // if(response){\r\n      //   this.deleted = true;\r\n      //   this.editBtn=true;\r\n      //   this.authBtn=true;\r\n      //   this.closeBtn=true;\r\n      //   Swal.fire('Deleted Successfully!');\r\n      // }\r\n    });\r\n  }\r\n  \r\n  onReset()\r\n  {console.log(\"this si reset\");\r\n    this.mdmtSystemService.forEach(element => {\r\n      element.dataType='',\r\n      element.headerValue='',\r\n      element.id='',\r\n      element.messageBasis='',\r\n      element.headerTag='',\r\n      element.messageKey='',\r\n      element.systemChannelId='';\r\n      element.encryption='No Encryption'\r\n    });\r\n  }\r\n  onDelete(i)\r\n  {\r\n    this.mdmtSystemService.splice(i,1);\r\n  }\r\n  // Api for xml,iso and others\r\n  // gettingIso/Tcp record\r\nfetchingIso()\r\n{ this.showProgressbar=true;\r\n  this.addSystem.fetchingIsoForTcp().subscribe(isoResp=>{\r\n    console.log(isoResp);\r\n    this.isoRespData=isoResp;\r\n    // this.isoRespData.map(el=>{\r\n    //   return  el.fieldNo=el.fieldNo+\"<\"+el.fieldName;\r\n    //   })\r\n    for(let i=0;i<this.isoRespData.length;i++){\r\n      this.isoRespData[i].fieldNo=this.isoRespData[i].fieldNo+\"<\"+this.isoRespData[i].fieldName;\r\n    }\r\n\r\n    console.log(\"isoRespData\",this.isoRespData);\r\n    if(isoResp)\r\n    {\r\n    if(this.addSysBasic.messsageType=='I' ||this.addSysBasic.messsageType=='O' )\r\n    {   this.onlyInc=true;\r\n      this.showProgressbar=false;\r\n      // for dropdown 1\r\n      this.messageBasisIso=isoResp.map((data)=>{\r\n        return data.fieldName;\r\n      });\r\n       // for dropdown 2\r\n       this.messageKeyIso=isoResp.map((data)=>{\r\n        return data.fieldNo.toString();\r\n      });\r\n     \r\n      this.typeDataIso=isoResp.map((data)=>{\r\n        return data.dataType;\r\n      });\r\n      this.headerValueIso=isoResp.map((data)=>{\r\n        return data.headerValue\r\n      });\r\n    }\r\n    else if(this.addSysBasic.messsageType=='A'&&this.tabText=='Incoming')\r\n    { this.showServiceScreen=true;\r\n      this.showProgressbar=false;\r\n      this.onlyInc=false;\r\n      this.messageBasisIso=isoResp.map((data)=>{\r\n        return data.fieldName;\r\n      });\r\n       // for dropdown 2\r\n       this.messageKeyIso=isoResp.map((data)=>{\r\n        return data.fieldNo.toString();\r\n      });\r\n      this.typeDataIso=isoResp.map((data)=>{\r\n        return data.dataType;\r\n      });\r\n      this.headerValueIso=isoResp.map((data)=>{\r\n        return data.headerValue\r\n      });\r\n      // this.mdmtSystemServiceAllInc=isoResp;\r\n\r\n    }\r\n    else if(this.addSysBasic.messsageType=='A'&&this.tabText=='Outgoing')\r\n    { console.log(\"this is  all out \");\r\n      this.showServiceScreeAllOut=true;\r\n      this.showProgressbar=false;\r\n      this.onlyInc=false;\r\n      this.messageBasisIso=isoResp.map((data)=>{\r\n        return data.fieldName;\r\n      });\r\n       // for dropdown 2\r\n       this.messageKeyIso=isoResp.map((data)=>{\r\n        return data.fieldNo.toString();\r\n      });\r\n      this.typeDataIso=isoResp.map((data)=>{\r\n        return data.dataType;\r\n      });\r\n      this.headerValueIso=isoResp.map((data)=>{\r\n        return data.headerValue\r\n      });\r\n      // this.mdmtSystemServiceAllOut=isoResp;\r\n      \r\n\r\n    }\r\n    \r\n  }\r\n   \r\n   \r\n  \r\n  })\r\n}\r\n\r\n//gettingxml records\r\nfetchingXMl()\r\n{\r\n  this.addSystem.gettinXMLmsgIncoming().subscribe(xmlResp=>{\r\n    console.log(xmlResp);\r\n    this.xmlRespData=xmlResp;\r\n    if(xmlResp)\r\n    {\r\n      if(this.addSysBasic.messsageType=='I' ||this.addSysBasic.messsageType=='O' )\r\n      {\r\n        this.onlyInc=true;\r\n        this.showProgressbar=false;\r\n        // for dropdown 1\r\n        this.messageBasisIso=xmlResp.map((data)=>{\r\n          return data.fieldName;\r\n        });\r\n         // for dropdown 2\r\n       this.messageKeyIso=xmlResp.map((data)=>{\r\n        return data.fieldNo.toString();\r\n      });\r\n   \r\n   \r\n      //dopdwon3\r\n      this.typeDataIso=xmlResp.map((data)=>{\r\n        return data.dataType;\r\n      });\r\n      this.headerValueIso=xmlResp.map((data)=>{\r\n        return data.headerValue;\r\n      });\r\n\r\n      }\r\n      else if(this.addSysBasic.messsageType=='A'&&this.tabText=='Incoming')\r\n      {\r\n        this.showServiceScreen=true;\r\n      this.showProgressbar=false;\r\n      this.onlyInc=false;\r\n      this.messageBasisIso=xmlResp.map((data)=>{\r\n        return data.fieldName;\r\n      });\r\n       // for dropdown 2\r\n       this.messageKeyIso=xmlResp.map((data)=>{\r\n        return data.fieldNo.toString();\r\n      });\r\n      // this.nodeAndTagName.push({node:this.messageBasisIso,tagName:this.messageKeyIso});\r\n      this.typeDataIso=xmlResp.map((data)=>{\r\n        return data.dataType;\r\n      });\r\n      this.headerValueIso=xmlResp.map((data)=>{\r\n        return data.headerValue\r\n      });\r\n      }\r\n      else if(this.addSysBasic.messsageType=='A'&&this.tabText=='Outgoing')\r\n      {\r\n        this.showServiceScreeAllOut=true;\r\n      this.showProgressbar=false;\r\n      this.onlyInc=false;\r\n      this.messageBasisIsoAllOut=xmlResp.map((data)=>{\r\n        return data.fieldName;\r\n      });\r\n       // for dropdown 2\r\n       this.messageKeyIso=xmlResp.map((data)=>{\r\n        return data.fieldNo.toString();\r\n      });\r\n      this.typeDataIso=xmlResp.map((data)=>{\r\n        return data.dataType;\r\n      });\r\n      this.headerValueIso=xmlResp.map((data)=>{\r\n        return data.headerValue\r\n      });\r\n      }\r\n    }\r\n    \r\n  })\r\n}\r\n\r\n// upload Excel\r\nchooseFile() {\r\n  document.getElementById('chFile').click();\r\n}\r\n  // ------------File Uplaod Methods-----------\r\n  uploadFileXml(event) {\r\n    this.selectedFiles = event.target.files;\r\n    this.sizeOfFile = this.selectedFiles.item(0).size;\r\n    this.currentFileUpload = this.selectedFiles.item(0);\r\n    this.fileName=this.currentFileUpload.name;\r\n    this.addSystem.gettingHederofXMl(this.currentFileUpload).subscribe(xmlResp=>{\r\n      console.log(xmlResp);\r\n      if(xmlResp){\r\n      // this.messageBasisIso=xmlResp;\r\n      this.uploadXmlResp=xmlResp;\r\n      this.messageBasisIso=xmlResp.nodeTagList;\r\n      this.messageBasisIsoAllOut=xmlResp.nodeTagList\r\n      Swal.fire({text:'File Uploaded Successfully'});\r\n      }\r\n    },err=>{\r\n      Swal.fire({text:'Invalid Xml file provided'});\r\n    })\r\n  }\r\n  onselectingTag(event,i)\r\n  {\r\n    console.log(event);\r\n    this.desSystem.push(event.value);\r\n    console.log(this.uploadXmlResp);\r\n    var result = Object.keys(this.uploadXmlResp.nodeValueMap).map((key) => [(key), this.uploadXmlResp.nodeValueMap[key]]);\r\n    var x=result.find(item=>item[0]==event.value);\r\n    console.log(x);\r\n   if(this.addSysBasic.messsageType=='I'||this.addSysBasic.messsageType=='O'){\r\n    this.mdmtSystemService[i].headerValue=x[1];\r\n   }\r\n   else if(this.addSysBasic.messsageType=='A' &&this.tabText=='Incoming'){\r\n     this.mdmtSystemServiceAllInc[i].headerValue=x[1];\r\n   }\r\n   else if(this.addSysBasic.messsageType=='A' &&this.tabText=='Outgoing')\r\n   {  console.log(\"here\");\r\n     this.mdmtSystemServiceAllOut[i].headerValue=x[1];\r\n   }\r\n    // this.mdmtSystemService[i].dataType=x.dataType;\r\n   \r\n  }\r\n  addOfAllOut()\r\n  {\r\n    this.mdmtSystemServiceAllOut.push({id:'',dataType:'',headerValue:'',messageBasis:'',messageKey:'',systemChannelId:'',headerTag:'',encryption:'No Encryption'});\r\n  }\r\n  onDeleteOfAllOut(i)\r\n  {\r\n    this.mdmtSystemServiceAllOut.splice(i,1);\r\n  }\r\n  onResetOfBasicInfo()\r\n  {\r\n  this.addSysBasic=new AddSystemNew();\r\n  \r\n}\r\nonSelectingMessageBasis(event:any,i)\r\n{console.log(\"option for fieldno\",event.value);\r\n  \r\nconsole.log(event.value);\r\n// both Incoming and outgoing\r\nif(this.addSysBasic.messsageType=='I' ||this.addSysBasic.messsageType=='O' ){\r\nif(this.protocolForBothIncOut.messageChannel=='TCP/IP' && this.protocolForBothIncOut.messageFormat=='ISO 8583 1987' ||this.protocolForBothIncOut.messageFormat=='ISO 8583 1993' ||this.protocolForBothIncOut.messageFormat=='ISO 8583 2003')\r\n{\r\n  var x=this.isoRespData.find(item=>item.fieldNo==event.value);\r\n  this.mdmtSystemService[i].messageBasis=x.fieldName;\r\n  this.mdmtSystemService[i].dataType=x.dataType;\r\n \r\n}\r\nelse if(this.protocolForBothIncOut.messageChannel=='Https/Http' &&this.protocolForBothIncOut.messageFormat=='XML')\r\n{\r\nvar xmldata=this.xmlRespData.find(item=>item.messageBasis==event.value);\r\n{\r\n  this.mdmtSystemService[i].messageKey=xmldata.messageKey;\r\n  this.mdmtSystemService[i].dataType=xmldata.dataType;\r\n}\r\n}\r\n}\r\n// All Incoming\r\nelse if(this.addSysBasic.messsageType=='A' &&this.tabText=='Incoming')\r\n{ console.log(\"coming in atb inc, All\")\r\nif(this.protocolAllInc.messageChannel=='TCP/IP' &&this.protocolAllInc.messageFormat=='ISO 8583 1987' ||this.protocolAllInc.messageFormat=='ISO 8583 1993' ||this.protocolAllInc.messageFormat=='ISO 8583 2003')\r\n{\r\n  var x=this.isoRespData.find(item=>item.fieldNo==event.value);\r\n  console.log(x);\r\n  console.log(\"this.mdmtSystemServiceAllInc[i].messageKey\",this.mdmtSystemServiceAllInc[i].messageKey);\r\n  this.mdmtSystemServiceAllInc[i].messageBasis=x.fieldName;\r\n  this.mdmtSystemServiceAllInc[i].dataType=x.dataType;\r\n \r\n}\r\nelse if(this.protocolAllInc.messageChannel=='Https/Http' &&this.protocolAllInc.messageFormat=='XML'){\r\n  var xmldata=this.xmlRespData.find(item=>item.messageBasis==event.value);\r\n  { this.mdmtSystemServiceAllInc[i].messageKey=x.messageKey;\r\n    this.mdmtSystemServiceAllInc[i].dataType=x.dataType;\r\n\r\n   \r\n  } \r\n}\r\n}\r\n// All outgoing\r\nelse if(this.addSysBasic.messsageType=='A' &&this.tabText=='Outgoing')\r\n{ console.log(\"coming in atb inc, All\")\r\nif(this.protocolAllOut.messageChannel=='TCP/IP' &&this.protocolAllOut.messageFormat=='ISO 8583 1987' ||this.protocolAllOut.messageFormat=='ISO 8583 1993' ||this.protocolAllOut.messageFormat=='ISO 8583 2003')\r\n{\r\n  var x=this.isoRespData.find(item=>item.fieldNo==event.value);\r\n  this.mdmtSystemServiceAllOut[i].messageBasis=x.fieldName;\r\n  this.mdmtSystemServiceAllOut[i].dataType=x.dataType;\r\n\r\n}\r\nelse if(this.protocolAllOut.messageChannel=='Https/Http' &&this.protocolAllOut.messageFormat=='XML'){\r\n  var xmldata=this.xmlRespData.find(item=>item.messageBasis==event.value);\r\n  { this.mdmtSystemServiceAllOut[i].messageKey=x.messageKey;\r\n    this.mdmtSystemServiceAllOut[i].dataType=x.dataType;\r\n   \r\n  }\r\n}\r\n}\r\n\r\n}\r\nonEdit()\r\n{\r\n  console.log(this.addSysBasic.approvedStatus);\r\n  if(this.addSysBasic.approvedStatus== \"U\"){\r\n    this.isEdit=true;\r\n    Swal.fire(\"UnAuthorized record can't be edited !\");\r\n  }\r\n  this.isEdit=false;\r\n  if(this.addSysBasic.recordStatus== \"C\"){\r\n    this.isEdit=true;\r\n    Swal.fire(\"Closed record can't be edited.\");\r\n  }\r\n}\r\n //getting hedaer tag\r\n fetchingHeadertag()\r\n {\r\n   this.addSystem.fetchingHeaderTag().subscribe(resp=>{\r\n     console.log(\"res\",resp);\r\n     this.headerTagData=resp;\r\n   })\r\n }\r\n shouldDisableTagOption(option) {\r\n\r\n  return this.desSystem.includes(option);\r\n}\r\n\r\n\r\ncheck(event,value){\r\n  \r\n    console.log(\"ev\",event.value);\r\n    this.desSystem.push(event.value);\r\n    // this.destination=event.value;\r\n    // this.addSystem.gettingHederofXMl(this.currentFileUpload).subscribe(xmlResp=>{\r\n    //   console.log(xmlResp);\r\n    //   if(xmlResp)\r\n    //   {\r\n    //   this.messageBasisIso=xmlResp;\r\n    //   Swal.fire({text:'File Uploaded Successfully'});\r\n    //   }\r\n    // },(err)=>{\r\n    //   console.log(err);\r\n    //   Swal.fire({text:'Invalid Xml file provided'});\r\n    // })\r\n  \r\n}\r\n}\r\nexport class AddSystemNew{\r\n  // basic info\r\n  systemId:any;\r\n  systemCode:any;\r\n  systemName:any;\r\n  serviceType:any;\r\n  messsageType:any;\r\n  medianIp:any;\r\n  medianPort:any;\r\n  sourceIp:any;\r\n  sourcePort:any;\r\n  // auditlog\r\n  creatorId:any;\r\n  createdTime:any;\r\n  approverId:any;\r\n  approvedTime:any;\r\n  versionNo:any;\r\n  approvedStatus:any;\r\n  approvedEver:any;\r\n  recordStatus:any;\r\n sysChannel:Array<MdmtSystemChannel>;\r\n\r\n}\r\n  // protocol screen\r\n  export class MdmtSystemChannel {\r\n  systemId:any;\r\n  messageType:any;\r\n  messageChannel:any;\r\n  messageFormat:any;\r\n  queueType:any;\r\n  queueManager:any;\r\n  queueName:any;\r\n  queueChannel:any;\r\n  queueConnFactory:any;\r\n  dbUsername:any;\r\n  dbPassword:any;\r\n  dbServiceName:any;\r\n  dbConnectString:any;\r\n  sysService:Array<MdmtSystemService>\r\n  channelId:any;\r\n  \r\n\r\n  }\r\n  //3rd screen\r\n  export class MdmtSystemService{\r\n    id:any;\r\n    systemChannelId:any;\r\n    messageBasis:any;\r\n    messageKey:any;\r\n    dataType:any;\r\n    encryption: any;\r\n    headerTag:any;\r\n    headerValue:any;\r\n    \r\n  }\r\n  export class MdmtSystemDto{\r\n    mdmtSystem:AddSystemNew;\r\n\t mdmtSystemChannel:Array<MdmtSystemChannel>;\r\n\t mdmtSystemService:Array<MdmtSystemService>;\r\n  }\r\n","export default \".example-container {\\r\\n    height: 250px;\\r\\n    overflow: auto;\\r\\n}\\r\\n.mat-raised-button {\\r\\n    width: -webkit-fit-content;\\r\\n    width: -moz-fit-content;\\r\\n    width: fit-content;\\r\\n    height: 20px;\\r\\n    line-height: 27px;\\r\\n    min-height: 27px;\\r\\n    vertical-align: top;\\r\\n    font-size: 11px;\\r\\n    padding: 0 0;\\r\\n    margin: 0;\\r\\n    }\\r\\n#customers {\\r\\n        font-family: \\\"Trebuchet MS\\\", Arial, Helvetica, sans-serif;\\r\\n        border-collapse: collapse;\\r\\n        width: 100%;\\r\\n        }\\r\\n#customers td, #customers th {\\r\\n        border: 1px solid #ddd;\\r\\n        padding: 8px;\\r\\n        text-align: center;\\r\\n        \\r\\n        }\\r\\n#customers tr:nth-child(even){background-color: #f2f2f2;}\\r\\n#customers th {\\r\\n        padding-top: 12px;\\r\\n        padding-bottom: 12px;\\r\\n        text-align: left;\\r\\n        background-color:rgb(97, 178, 216);\\r\\n        color: white;\\r\\n        }\\r\\n.baiscInfocard\\r\\n{\\r\\n    width: 63%;\\r\\n   margin-left: 15%;\\r\\n}\\r\\n::ng-deep .mat-form-field-flex > .mat-form-field-infix { padding: 0.5em 0px !important;}\\r\\nmat-form-field{\\r\\n    width: 100%;\\r\\n    \\r\\n}\\r\\n#chFile{\\r\\n    display: none;\\r\\n    }\\r\\n.btnFile{\\r\\n    background-color: rgb(130, 130, 173);\\r\\n    margin-right: 30px;\\r\\n    width: 110px;\\r\\n    }\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdmlld3Mvc2lhcy12Mi9lZGl0LWFkZC1zeXN0ZW0vZWRpdC1hZGQtc3lzdGVtLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxhQUFhO0lBQ2IsY0FBYztBQUNsQjtBQUNBO0lBQ0ksMEJBQWtCO0lBQWxCLHVCQUFrQjtJQUFsQixrQkFBa0I7SUFDbEIsWUFBWTtJQUNaLGlCQUFpQjtJQUNqQixnQkFBZ0I7SUFDaEIsbUJBQW1CO0lBQ25CLGVBQWU7SUFDZixZQUFZO0lBQ1osU0FBUztJQUNUO0FBQ0E7UUFDSSx5REFBeUQ7UUFDekQseUJBQXlCO1FBQ3pCLFdBQVc7UUFDWDtBQUNBO1FBQ0Esc0JBQXNCO1FBQ3RCLFlBQVk7UUFDWixrQkFBa0I7O1FBRWxCO0FBRUEsOEJBQThCLHlCQUF5QixDQUFDO0FBRXhEO1FBQ0EsaUJBQWlCO1FBQ2pCLG9CQUFvQjtRQUNwQixnQkFBZ0I7UUFDaEIsa0NBQWtDO1FBQ2xDLFlBQVk7UUFDWjtBQUVQOztJQUVHLFVBQVU7R0FDWCxnQkFBZ0I7QUFDbkI7QUFFQSx5REFBeUQsNkJBQTZCLENBQUM7QUFHdkY7SUFDSSxXQUFXOztBQUVmO0FBRUE7SUFDSSxhQUFhO0lBQ2I7QUFDQTtJQUNBLG9DQUFvQztJQUNwQyxrQkFBa0I7SUFDbEIsWUFBWTtJQUNaIiwiZmlsZSI6InNyYy9hcHAvdmlld3Mvc2lhcy12Mi9lZGl0LWFkZC1zeXN0ZW0vZWRpdC1hZGQtc3lzdGVtLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZXhhbXBsZS1jb250YWluZXIge1xyXG4gICAgaGVpZ2h0OiAyNTBweDtcclxuICAgIG92ZXJmbG93OiBhdXRvO1xyXG59XHJcbi5tYXQtcmFpc2VkLWJ1dHRvbiB7XHJcbiAgICB3aWR0aDogZml0LWNvbnRlbnQ7XHJcbiAgICBoZWlnaHQ6IDIwcHg7XHJcbiAgICBsaW5lLWhlaWdodDogMjdweDtcclxuICAgIG1pbi1oZWlnaHQ6IDI3cHg7XHJcbiAgICB2ZXJ0aWNhbC1hbGlnbjogdG9wO1xyXG4gICAgZm9udC1zaXplOiAxMXB4O1xyXG4gICAgcGFkZGluZzogMCAwO1xyXG4gICAgbWFyZ2luOiAwO1xyXG4gICAgfVxyXG4gICAgI2N1c3RvbWVycyB7XHJcbiAgICAgICAgZm9udC1mYW1pbHk6IFwiVHJlYnVjaGV0IE1TXCIsIEFyaWFsLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7XHJcbiAgICAgICAgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTtcclxuICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICB9XHJcbiAgICAgICAgI2N1c3RvbWVycyB0ZCwgI2N1c3RvbWVycyB0aCB7XHJcbiAgICAgICAgYm9yZGVyOiAxcHggc29saWQgI2RkZDtcclxuICAgICAgICBwYWRkaW5nOiA4cHg7XHJcbiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgICAgIFxyXG4gICAgICAgIH1cclxuICAgICAgICBcclxuICAgICAgICAjY3VzdG9tZXJzIHRyOm50aC1jaGlsZChldmVuKXtiYWNrZ3JvdW5kLWNvbG9yOiAjZjJmMmYyO31cclxuICAgICAgICBcclxuICAgICAgICAjY3VzdG9tZXJzIHRoIHtcclxuICAgICAgICBwYWRkaW5nLXRvcDogMTJweDtcclxuICAgICAgICBwYWRkaW5nLWJvdHRvbTogMTJweDtcclxuICAgICAgICB0ZXh0LWFsaWduOiBsZWZ0O1xyXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6cmdiKDk3LCAxNzgsIDIxNik7XHJcbiAgICAgICAgY29sb3I6IHdoaXRlO1xyXG4gICAgICAgIH1cclxuICAgICAgIFxyXG4gLmJhaXNjSW5mb2NhcmRcclxue1xyXG4gICAgd2lkdGg6IDYzJTtcclxuICAgbWFyZ2luLWxlZnQ6IDE1JTtcclxufVxyXG5cclxuOjpuZy1kZWVwIC5tYXQtZm9ybS1maWVsZC1mbGV4ID4gLm1hdC1mb3JtLWZpZWxkLWluZml4IHsgcGFkZGluZzogMC41ZW0gMHB4ICFpbXBvcnRhbnQ7fVxyXG5cclxuXHJcbm1hdC1mb3JtLWZpZWxke1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBcclxufVxyXG4gICAgXHJcbiNjaEZpbGV7XHJcbiAgICBkaXNwbGF5OiBub25lO1xyXG4gICAgfVxyXG4gICAgLmJ0bkZpbGV7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMTMwLCAxMzAsIDE3Myk7XHJcbiAgICBtYXJnaW4tcmlnaHQ6IDMwcHg7XHJcbiAgICB3aWR0aDogMTEwcHg7XHJcbiAgICB9Il19 */\"","import { Component, OnInit, ChangeDetectorRef, ViewChild } from '@angular/core';\r\nimport { MDB, DBConnection, OutGoingMessageConfigTCP, OutGoingMessageConfigHttp, AddSystemBasicInformation, AddSystemIntegrationProtocol, OutGoingDBConnection, AddSystemIntegrationProtocolOutgoing, HttpJSON, IncomingMDBJSOn, IncomingMDBXML, DBConnetionXML, IncomingDbConntionJson, OutgoingHttpMessageConfigJSON, MDBoutingXMl, MDBoutJSon, eJBXMLincoming, incomingEJBJSOn, ejbXMloutgoing, EjboutgoingJson, DboutgoingXMl, DboutgoingJson, IncomingMessageConfigHttpXML, IncomingQueueMDBXML, Incomingijmsueue, IncomingMDBExcelFlatCsv, IncDBCredenatils, IncomingMessageConfigTCP } from '../add-system-incoming-message-tcp/add-system';\r\nimport { AddSystemService } from 'src/app/shared/services/addSys/add-system.service';\r\nimport Swal from 'sweetalert2';\r\nimport { stringToKeyValue } from '@angular/flex-layout/extended/typings/style/style-transforms';\r\nimport { RulesService } from 'src/app/shared/services/rules/rules.service';\r\nimport { MatTabGroup } from '@angular/material/tabs';\r\n\r\n@Component({\r\n  selector: 'app-edit-add-system',\r\n  templateUrl: './edit-add-system.component.html',\r\n  styleUrls: ['./edit-add-system.component.css']\r\n})\r\nexport class EditAddSystemComponent implements OnInit {\r\n  @ViewChild('tabGroup',{static:false}) private tabGroup: MatTabGroup;\r\n  createExtSys1: AddSystemBasicInformation = new AddSystemBasicInformation();//Basic Info\r\n  //incoming\r\n  incomingIntegrationProtocol: Array<AddSystemIntegrationProtocol>=[];\r\n  incomingMessageConfigurationTcp: Array<IncomingMessageConfigTCP>=[];\r\n  incHttpXMl:Array<IncomingMessageConfigHttpXML>=[];\r\n  incHttpJson:Array<HttpJSON>=[];\r\n  incMDBXML:Array<IncomingMDBXML>=[];\r\n  incMdbJson:Array<IncomingMDBJSOn>=[];\r\n  incEjbXMl:Array<eJBXMLincoming>=[];\r\n  incEjbJson:Array<incomingEJBJSOn>=[];\r\n  incDbData=new IncDBCredenatils();// Db credentials Incoming\r\n  mdbQueueInc=['IBM','JMS'];\r\n  incDataType:any;\r\n  showTcpInc:boolean;\r\n  incXmlHttpResp:any;\r\n  showMDBJsonInc:boolean;\r\n  showEjbCsvInc:boolean;\r\n  // outgoing\r\n  outgoingIntegrationProtocol: Array<AddSystemIntegrationProtocolOutgoing>=[];\r\n  outgoingMessageConfigurationTcp:Array<OutGoingMessageConfigTCP>=[];\r\n  outHttpXml: Array<OutGoingMessageConfigHttp>=[];\r\n  outHttpJson:Array<OutgoingHttpMessageConfigJSON>=[];\r\n  outMdbXml:Array<MDBoutingXMl>=[];\r\n  outMdbJson:Array<MDBoutJSon>=[];\r\n  outEjbXml:Array<ejbXMloutgoing>=[];\r\n  outEjbJson:Array<EjboutgoingJson>=[];\r\n  dataTypeForOutGoing:any;\r\n  protocoloutGoing:any;\r\n  dataTypeOutgoing:any;\r\n  // boolean values\r\n  hideBasic:boolean=false;\r\n  showHttpJsonOut:boolean;\r\n  showOfIcoming: boolean=true;\r\n  showOfoutNext:boolean;\r\n  showALl:boolean;\r\n  showIncMsgProtocol: boolean=false;\r\n  showOutMsgProtocol: boolean=false;\r\n  showAllMsgProtocol: boolean=false;\r\n  incProtocol: any;\r\n  dataType: string[];\r\n  showPrepgrassBar:boolean;\r\n  // All\r\n  incMsgProtocolAll:Array<AddSystemIntegrationProtocol>=[]\r\n  dataTypeForIncAllInc: string[];\r\n  protocolIncAll:any;\r\n  incAllDataType:any;\r\n  outAll:Array<AddSystemIntegrationProtocol>=[];\r\n  showFinalaFinish: boolean;\r\n  showTcpOut: boolean;\r\n  showAllIncTcp:boolean;\r\n  showAllProtocolInc: boolean;\r\n  showAllProtocolOut: boolean;\r\n  showAllTcpOut: boolean;\r\n  showHttpXmlInc: boolean;\r\n  showHttpJsonInc: boolean;\r\n  showMdbXmlInc: boolean;\r\n  showMdbCSVInc: boolean;\r\n  showMdbFlatInc: boolean;\r\n  showEjbXMlInc: boolean;\r\n  showEjbJsonInc: boolean;\r\n  showEjbFlatInc: boolean;\r\n  showDbXmlInc: boolean;\r\n  tableNameinc: any=[];\r\n  incDbRecords: any;\r\n  coulmnNameBasedonTanbleName: any=[];\r\n  showDBJsonInc: boolean;\r\n  showDbCsvInc: boolean;\r\n  showDbFlatInc: boolean;\r\n  showjsmQueue: boolean;\r\n  showibmQueue: boolean;\r\n  showHttpXmlOut: boolean;\r\n  showMdbXmlOut: boolean;\r\n  showjsmQueueOut: boolean;\r\n  showibmQueueOut: boolean;\r\n  showMdbJsonOut: boolean;\r\n  showMdbCsvOut: boolean;\r\n  showMdbFlatOut: boolean;\r\n  showEjbXMlOut: boolean;\r\n  showEjbJsonOut: boolean;\r\n  showEjbCsvOut: boolean;\r\n  showEjbFlatOut: boolean;\r\n  showDBXmlOut: boolean;\r\n  showDBJsonOut: boolean;\r\n  showDbCsvOut: boolean;\r\n  showDbFaltOut: boolean;\r\n  showAllIncHttpXml: boolean;\r\n  showAllIncHttpJosn: boolean;\r\n  showAllIncMdbXml: boolean;\r\n  showAllIncMdbJson: boolean;\r\n  showAllIncMdbCsv: boolean;\r\n  showAllIncMdbFlat: boolean;\r\n  showAllIncEjbXml: boolean;\r\n  showAllIncEjbJson: boolean;\r\n  showAllIncEjbCsv: boolean;\r\n  showAllIncEjbFlat: boolean;\r\n  showAllIncDbXml: boolean;\r\n  showAllIncDbJson: boolean;\r\n  showAllIncDbCsv: boolean;\r\n  showAllIncDbFalt: boolean;\r\n  showOnlyAllBtn: boolean;\r\n  showAllHttpXmlOut: boolean;\r\n  showAllHttpJsonOut: boolean;\r\n  showAllMdbXmlOut: boolean;\r\n  showAllMdbJsonOut: boolean;\r\n  showAllMdbCsvOut: boolean;\r\n  showAllMdbExcelOut: boolean;\r\n  showAllEjbExcelOut: boolean;\r\n  showAllEjbXmlOut: boolean;\r\n  showAllEjbJsonOut: boolean;\r\n  showAllEjbFlatOut: boolean;\r\n  showAllDbXmlOut: boolean;\r\n  showAllDbJsonOut: boolean;\r\n  showAllDbExcelOut: boolean;\r\n  showAllDbflatOut: boolean;\r\n  currentUser: string;\r\n  addSysResp: any;\r\n  showAuditLog: boolean=false;\r\n  tabText: any=\"Incoming\";\r\n  selectedIndex: number =0;\r\n  onlyAllOut:boolean;\r\n//  Save Prj\r\naddSystemSave=new Addsystem();\r\n  count: number=0;\r\n  colRowForDbInc: any=[];\r\n  navSubscription: any;\r\n  editAddSysResp: {};\r\n \r\n  \r\nconstructor(private addSystem:AddSystemService){}\r\n ngOnInit()\r\n {\r\n  this.navSubscription = this.addSystem.getNavParam.subscribe(data =>this.editAddSysResp =data);\r\n  console.log(\"edit\",this.editAddSysResp);\r\n\r\n  this.currentUser = localStorage.getItem('userFromLogin');\r\n  this.createExtSys1.code = this.editAddSysResp[\"code\"];\r\n  this.createExtSys1.name=this.editAddSysResp[\"name\"];\r\n  this.createExtSys1.type=this.editAddSysResp[\"type\"];\r\n  this.createExtSys1.externalIp=this.editAddSysResp[\"externalIp\"];\r\n  this.createExtSys1.externalPort=this.editAddSysResp[\"externalPort\"];\r\n  this.createExtSys1.medianIp=this.editAddSysResp[\"medianIp\"];\r\n  this.createExtSys1.medianPort=this.editAddSysResp[\"medianPort\"];\r\n  this.createExtSys1.openToMessage=this.editAddSysResp[\"openToMessage\"];\r\n\r\n  // Incoming Message Protocol\r\n\r\n  this.incomingIntegrationProtocol=this.editAddSysResp[\"incomingIntegrationProtocol\"];\r\n  // outgoing messages\r\n  this.outgoingIntegrationProtocol=this.editAddSysResp['outIntegratProtocol'];\r\n  console.log(\"outgoingIntegrationProtocol\",this.outgoingIntegrationProtocol);\r\n  this.gettingProtocoleAnddataypeOFIncoming();\r\n  this.gettingProtocoleAnddataypeOFOutgoing();//out going disply protocola dn datatype\r\n  this.onsystemMessageSelection(this.createExtSys1.openToMessage);\r\n\r\n      this.incMsgProtocolAll.push({typeOfProtocol:'',dataType:''});\r\n      this.outAll.push({typeOfProtocol:'',dataType:''});\r\n      this.incomingMessageConfigurationTcp.push({fieldName:'',fieldNo:'',dataType:'alphaNumeric',defaultValue:'',id:'',extSys:''})\r\n      this.outgoingMessageConfigurationTcp.push({fieldName:'',fieldNo:'',dataType:'alphaNumeric',defaultValue:'',id:'',extSys:''})\r\n      this.incHttpJson.push({key:'',dataType:'',deafultValue:''});\r\n      this.incMDBXML.push({node:'',tagDefault:'',dataType:'',extSysCode:'',defaultValue:'',id:'',tagName:''});\r\n      this.incHttpXMl.push({id:'',extSys:'',node:'',tagName:'',dataType:'',defaultValue:''});\r\n      this.incMdbJson.push({key:'',defaultValue:'',dataType:''});\r\n      this.incEjbXMl.push({id:'',node:'',tagName:'',dataType:'',tagValue:'',extSysCode: '',tagDefault:''});\r\n      this.incEjbJson.push({key:'',dataType:'',defaultValue:''});\r\n      this.outHttpXml.push({node:'',tagName:'',dataType:'',defaultValue:'',id:'',extSys:''});\r\n      this.outHttpJson.push({dataType:'',defaultValue:'',key:''}); \r\n      this.outMdbXml.push({dataType:'',id:'',extSysCode:'',node:'',tagDefault:'',tagName:'',tagvalue:''}); \r\n      this.outMdbJson.push({dataType:'',key:'',defaultValue:''});\r\n      this.outEjbXml.push({dataType:'',tagvalue:'',tagName:'',tagDefault:'',node:'',extSysCode:'',id:''});\r\n      this.outEjbJson.push({dataType:'',defaultValue:'',key:''});\r\n        \r\n  }\r\n  // Outgoing Messsage Protocol\r\n  \r\n   // gettingProtocol and Dataype by loading\r\ngettingProtocoleAnddataypeOFIncoming()\r\n{ console.log(\"her on ngOn int \");\r\n  this.incomingIntegrationProtocol.forEach(data=>\r\n    {\r\n      this.incProtocol=data.typeOfProtocol;\r\n      this.incDataType=data.dataType;\r\n    });\r\n    this.onProtocalSlection(this.incProtocol);\r\n}\r\n// getting Protocol and dataype for outgoing\r\ngettingProtocoleAnddataypeOFOutgoing()\r\n{ console.log(\"her on ngOn int \");\r\n  this.outgoingIntegrationProtocol.forEach(data=>\r\n    {\r\n      this.protocoloutGoing=data.typeOfProtocol;\r\n      this.dataTypeOutgoing=data.dataType;\r\n    });\r\n    this.onOutgoingProtocolSelction(this.protocoloutGoing);\r\n}\r\n\r\n//  selection of system message\r\nonsystemMessageSelection(sysMessage)\r\n{\r\n  console.log(\"sysMessage\",sysMessage);\r\n  if(sysMessage=='Incoming')\r\n  {\r\n    this.showOfIcoming=true;\r\n    this.showALl=false;\r\n    this.showOfoutNext=false;\r\n\r\n  }\r\n  else if(sysMessage=='OutComing')\r\n  {\r\n    this.showOfoutNext=true;\r\n    this.showOfIcoming=false;\r\n    this.showALl=false;\r\n  }\r\n  else if(sysMessage=='All'){\r\n    this.showALl=true;\r\n    this.showOfIcoming=false;\r\n    this.showOfoutNext=false;\r\n  }\r\n  \r\n}\r\n onNextToIncomingProtocal()\r\n  {\r\n    this.showIncMsgProtocol=true;\r\n    this.showOutMsgProtocol=false;\r\n    this.hideBasic=true;\r\n    this.showFinalaFinish=false;\r\n  }\r\n  onNextOutgoingProtocol(){\r\n\r\n    this.showOutMsgProtocol=true;\r\n    this.showIncMsgProtocol=false;\r\n    this.hideBasic=true;\r\n    this.showFinalaFinish=false;\r\n  }\r\n  onALlProtocol()\r\n  {\r\n    this.showAllMsgProtocol=true;\r\n    this.showAllProtocolInc=true;\r\n    this.showAllProtocolOut=true;\r\n    this.showIncMsgProtocol=false;\r\n    this.showOutMsgProtocol=false;\r\n    this.hideBasic=true;\r\n    this.showFinalaFinish=false;\r\n  }\r\n  // selecting Protocol in Incoming\r\n  onProtocalSlection(protocol)\r\n  {\r\n    console.log(protocol);\r\n    this.dataType=[];\r\n    this.incProtocol=protocol;\r\n    if(protocol=='TCP/IP')\r\n    {\r\n      this.dataType=['ISO 8583 1987', 'ISO 8583 1993', 'ISO 8583 2003']\r\n    }\r\n    else if(protocol=='Https/Http')\r\n    {this.dataType=[];\r\n      this.dataType=['XML','JSON'];\r\n    }\r\n    else if(protocol=='MDB')\r\n    {this.dataType=[];\r\n      this.dataType=['XML','JSON','CSV/EXCEL','FLATFILE'];\r\n    }\r\n    else if(protocol=='EJB')\r\n    {\r\n      this.dataType=['XML','JSON','CSV/EXCEL','FLATFILE'];\r\n    }\r\n    else if(protocol=='DB Connection')\r\n    {\r\n      this.dataType=['XML','JSON','CSV/EXCEL','FLATFILE'];\r\n    }\r\n    \r\n  }\r\n  nextOfIncomingProtocol(protocol)\r\n  {\r\n    console.log(protocol);\r\n    this.showIncMsgProtocol=false;\r\n    \r\n    this.showFinalaFinish=true;\r\n    if(protocol.typeOfProtocol==\"TCP/IP\" && protocol.dataType==\"ISO 8583 1987\" ||protocol.dataType==\"ISO 8583 1993\" ||protocol.dataType=='ISO 8583 2003'){\r\n      this.fetchingIso();\r\n      \r\n      // this.showTcpInc=true;\r\n      this.showHttpXmlInc=false;\r\n      this.showEjbCsvInc=false;\r\n      this.showHttpJsonInc=false;\r\n      this.showMdbXmlInc=false;\r\n      this.showMDBJsonInc=false;\r\n      this.showMdbCSVInc=false;\r\n      this.showMdbFlatInc=false;\r\n      this.showEjbXMlInc=false;\r\n      this.showEjbJsonInc=false;\r\n      this.showEjbFlatInc=false;\r\n      this.showDbXmlInc=false;\r\n      this.showDBJsonInc=false;\r\n      this.showDbCsvInc=false;\r\n      this.showDbCsvInc=false;\r\n      this.showDbFlatInc=false;\r\n\r\n    }\r\n    else if(protocol.typeOfProtocol==\"Https/Http\" && protocol.dataType==\"XML\"){\r\n      this.showTcpInc=false;\r\n      this.showHttpXmlInc=true;\r\n      this.showEjbCsvInc=false;\r\n      this.showHttpJsonInc=false;\r\n      this.showMdbXmlInc=false;\r\n      this.showMDBJsonInc=false;\r\n      this.showMdbCSVInc=false;\r\n      this.showMdbFlatInc=false;\r\n      this.showEjbXMlInc=false;\r\n      this.showEjbJsonInc=false;\r\n      this.showEjbFlatInc=false;\r\n      this.showDbXmlInc=false;\r\n      this.showDBJsonInc=false;\r\n      this.showDbCsvInc=false;\r\n      this.showDbCsvInc=false;\r\n      this.showDbFlatInc=false;\r\n    }\r\n    else if(protocol.typeOfProtocol==\"Https/Http\" && protocol.dataType==\"JSON\"){\r\n      this.showTcpInc=false;\r\n      this.showEjbCsvInc=false;\r\n      this.showHttpXmlInc=false;\r\n      this.showHttpJsonInc=true;\r\n      this.showMdbXmlInc=false;\r\n      this.showMDBJsonInc=false;\r\n      this.showMdbCSVInc=false;\r\n      this.showMdbFlatInc=false;\r\n      this.showEjbXMlInc=false;\r\n      this.showEjbJsonInc=false;\r\n      this.showEjbFlatInc=false;\r\n      this.showDbXmlInc=false;\r\n      this.showDBJsonInc=false;\r\n      this.showDbCsvInc=false;\r\n      this.showDbCsvInc=false;\r\n      this.showDbFlatInc=false;\r\n\r\n    }\r\n    else if(protocol.typeOfProtocol==\"MDB\" && protocol.dataType==\"XML\"){\r\n      this.showTcpInc=false;\r\n      this.showEjbCsvInc=false;\r\n      this.showHttpXmlInc=false;\r\n      this.showHttpJsonInc=false;\r\n      this.showMdbXmlInc=true;\r\n      this.showMDBJsonInc=false;\r\n      this.showMdbCSVInc=false;\r\n      this.showMdbFlatInc=false;\r\n      this.showEjbXMlInc=false;\r\n      this.showEjbJsonInc=false;\r\n      this.showEjbFlatInc=false;\r\n      this.showDbXmlInc=false;\r\n      this.showDBJsonInc=false;\r\n      this.showDbCsvInc=false;\r\n      this.showDbCsvInc=false;\r\n      this.showDbFlatInc=false;\r\n    }\r\n    else if(protocol.typeOfProtocol==\"MDB\" && protocol.dataType==\"JSON\"){\r\n      this.showTcpInc=false;\r\n      this.showHttpXmlInc=false;\r\n      this.showHttpJsonInc=false;\r\n      this.showMdbXmlInc=false;\r\n      this.showEjbCsvInc=false;\r\n      this.showMDBJsonInc=true;\r\n      this.showMdbCSVInc=false;\r\n      this.showMdbFlatInc=false;\r\n      this.showEjbXMlInc=false;\r\n      this.showEjbJsonInc=false;\r\n      this.showEjbFlatInc=false;\r\n      this.showDbXmlInc=false;\r\n      this.showDBJsonInc=false;\r\n      this.showDbCsvInc=false;\r\n      this.showDbCsvInc=false;\r\n      this.showDbFlatInc=false;\r\n\r\n    }\r\n    else if(protocol.typeOfProtocol==\"MDB\" && protocol.dataType==\"CSV/EXCEL\"){\r\n      this.showTcpInc=false;\r\n      this.showHttpXmlInc=false;\r\n      this.showEjbCsvInc=false;\r\n      this.showHttpJsonInc=false;\r\n      this.showMdbXmlInc=false;\r\n      this.showMDBJsonInc=false;\r\n      this.showMdbCSVInc=true;\r\n      this.showMdbFlatInc=false;\r\n      this.showEjbXMlInc=false;\r\n      this.showEjbJsonInc=false;\r\n      this.showEjbFlatInc=false;\r\n      this.showDbXmlInc=false;\r\n      this.showDBJsonInc=false;\r\n      this.showDbCsvInc=false;\r\n      this.showDbCsvInc=false;\r\n      this.showDbFlatInc=false;\r\n    }\r\n    else if(protocol.typeOfProtocol==\"MDB\" && protocol.dataType==\"FLATFILE\"){\r\n      this.showTcpInc=false;\r\n      this.showHttpXmlInc=false;\r\n      this.showHttpJsonInc=false;\r\n      this.showMdbXmlInc=false;\r\n      this.showMDBJsonInc=false;\r\n      this.showMdbCSVInc=false;\r\n      this.showMdbFlatInc=true;\r\n      this.showEjbCsvInc=false;\r\n      this.showEjbXMlInc=false;\r\n      this.showEjbJsonInc=false;\r\n      this.showEjbFlatInc=false;\r\n      this.showDbXmlInc=false;\r\n      this.showDBJsonInc=false;\r\n      this.showDbCsvInc=false;\r\n      this.showDbCsvInc=false;\r\n      this.showDbFlatInc=false;\r\n    }\r\n\r\n    else if(protocol.typeOfProtocol==\"EJB\" && protocol.dataType==\"XML\"){\r\n      this.showTcpInc=false;\r\n      this.showHttpXmlInc=false;\r\n      this.showHttpJsonInc=false;\r\n      this.showMdbXmlInc=false;\r\n      this.showMDBJsonInc=false;\r\n      this.showEjbCsvInc=false;\r\n      this.showMdbCSVInc=false;\r\n      this.showMdbFlatInc=false;\r\n      this.showEjbXMlInc=true;\r\n      this.showEjbJsonInc=false;\r\n      this.showEjbFlatInc=false;\r\n      this.showDbXmlInc=false;\r\n      this.showDBJsonInc=false;\r\n      this.showDbCsvInc=false;\r\n      this.showDbCsvInc=false;\r\n      this.showDbFlatInc=false;\r\n\r\n    }\r\n    else if(protocol.typeOfProtocol==\"EJB\" && protocol.dataType==\"JSON\"){\r\n      this.showTcpInc=false;\r\n      this.showHttpXmlInc=false;\r\n      this.showHttpJsonInc=false;\r\n      this.showMdbXmlInc=false;\r\n      this.showEjbCsvInc=false;\r\n      this.showMDBJsonInc=false;\r\n      this.showMdbCSVInc=false;\r\n      this.showMdbFlatInc=false;\r\n      this.showEjbXMlInc=false;\r\n      this.showEjbJsonInc=true;\r\n      this.showEjbFlatInc=false;\r\n      this.showDbXmlInc=false;\r\n      this.showDBJsonInc=false;\r\n      this.showDbCsvInc=false;\r\n      this.showDbCsvInc=false;\r\n      this.showDbFlatInc=false;\r\n\r\n    }\r\n    else if(protocol.typeOfProtocol==\"EJB\" && protocol.dataType==\"CSV/EXCEL\"){\r\n      this.showTcpInc=false;\r\n      this.showHttpXmlInc=false;\r\n      this.showHttpJsonInc=false;\r\n      this.showMdbXmlInc=false;\r\n      this.showEjbCsvInc=true;\r\n      this.showMDBJsonInc=false;\r\n      this.showMdbCSVInc=false;\r\n      this.showMdbFlatInc=false;\r\n      this.showEjbXMlInc=false;\r\n      this.showEjbJsonInc=false;\r\n      this.showEjbFlatInc=false;\r\n      this.showDbXmlInc=false;\r\n      this.showDBJsonInc=false;\r\n      this.showDbCsvInc=false;\r\n      this.showDbCsvInc=false;\r\n      this.showDbFlatInc=false;\r\n\r\n    }\r\n    else if(protocol.typeOfProtocol==\"EJB\" && protocol.dataType==\"FLATFILE\"){\r\n      this.showTcpInc=false;\r\n      this.showDbCsvInc=false;\r\n      this.showHttpXmlInc=false;\r\n      this.showHttpJsonInc=false;\r\n      this.showMdbXmlInc=false;\r\n      this.showEjbCsvInc=false;\r\n      this.showMDBJsonInc=false;\r\n      this.showMdbCSVInc=false;\r\n      this.showMdbFlatInc=false;\r\n      this.showEjbXMlInc=false;\r\n      this.showEjbJsonInc=false;\r\n      this.showEjbFlatInc=true;\r\n      this.showDbXmlInc=false;\r\n      this.showDBJsonInc=false;\r\n      this.showDbCsvInc=false;\r\n      this.showDbFlatInc=false;\r\n\r\n    }\r\n    else if(protocol.typeOfProtocol==\"DB Connection\" && protocol.dataType==\"XML\"){\r\n      this.fetchDbconnection();\r\n      this.showTcpInc=false;\r\n      this.showHttpXmlInc=false;\r\n      this.showHttpJsonInc=false;\r\n      this.showMdbXmlInc=false;\r\n      this.showDbCsvInc=false;\r\n      this.showEjbCsvInc=false;\r\n      this.showMDBJsonInc=false;\r\n      this.showMdbCSVInc=false;\r\n      this.showMdbFlatInc=false;\r\n      this.showEjbXMlInc=false;\r\n      this.showEjbJsonInc=false;\r\n      this.showEjbFlatInc=false;\r\n      this.showDbXmlInc=true;\r\n      this.showDBJsonInc=false;\r\n      this.showDbFlatInc=false;\r\n    }\r\n    else if(protocol.typeOfProtocol==\"DB Connection\" && protocol.dataType==\"JSON\"){\r\n      this.showTcpInc=false;\r\n      this.showHttpXmlInc=false;\r\n      this.showHttpJsonInc=false;\r\n      this.showDbCsvInc=false;\r\n      this.showMdbXmlInc=false;\r\n      this.showEjbCsvInc=false;\r\n      this.showMDBJsonInc=false;\r\n      this.showMdbCSVInc=false;\r\n      this.showMdbFlatInc=false;\r\n      this.showEjbXMlInc=false;\r\n      this.showEjbJsonInc=false;\r\n      this.showEjbFlatInc=false;\r\n      this.showDbXmlInc=false;\r\n      this.showDbCsvInc=false;\r\n      this.showDBJsonInc=true;\r\n      this.showDbFlatInc=false;\r\n    }\r\n    else if(protocol.typeOfProtocol==\"DB Connection\" && protocol.dataType==\"CSV/EXCEL\"){\r\n      this.showTcpInc=false;\r\n      this.showHttpXmlInc=false;\r\n      this.showHttpJsonInc=false;\r\n      this.showMdbXmlInc=false;\r\n      this.showEjbCsvInc=false;\r\n      this.showMDBJsonInc=false;\r\n      this.showMdbCSVInc=false;\r\n      this.showMdbFlatInc=false;\r\n      this.showEjbXMlInc=false;\r\n      this.showEjbJsonInc=false;\r\n      this.showEjbFlatInc=false;\r\n      this.showDbXmlInc=false;\r\n      this.showDbCsvInc=false;\r\n      this.showDBJsonInc=false;\r\n      this.showDbCsvInc=true;\r\n      this.showDbFlatInc=false;\r\n    }\r\n    else if(protocol.typeOfProtocol==\"DB Connection\" && protocol.dataType==\"FLATFILE\"){\r\n      this.showTcpInc=false;\r\n      this.showHttpXmlInc=false;\r\n      this.showHttpJsonInc=false;\r\n      this.showMdbXmlInc=false;\r\n      this.showEjbCsvInc=false;\r\n      this.showMDBJsonInc=false;\r\n      this.showMdbCSVInc=false;\r\n      this.showMdbFlatInc=false;\r\n      this.showEjbXMlInc=false;\r\n      this.showEjbJsonInc=false;\r\n      this.showEjbFlatInc=false;\r\n      this.showDbXmlInc=false;\r\n      this.showDbCsvInc=false;\r\n      this.showDBJsonInc=false;\r\n      this.showDbCsvInc=false;\r\n      this.showDbFlatInc=true;\r\n    }\r\n    \r\n  }\r\n  nextOfAllInc(protocol)\r\n  {\r\n    \r\n    this.showOnlyAllBtn=true;\r\n    this.showAllProtocolInc=false;\r\n    if(protocol.typeOfProtocol==\"TCP/IP\" && protocol.dataType==\"ISO 8583 1987\" ||protocol.dataType==\"ISO 8583 1993\" ||protocol.dataType=='ISO 8583 2003'){\r\n      this.fetchingIso();\r\n      this.showAllIncTcp=true;\r\n      this.showAllIncHttpXml=false;\r\n      this.showAllIncHttpJosn=false;\r\n      this.showAllIncMdbXml=false;\r\n      this.showAllIncMdbJson=false;\r\n      this.showAllIncMdbCsv=false;\r\n      this.showAllIncMdbFlat=false;\r\n      this.showAllIncEjbXml=false;\r\n      this.showAllIncEjbJson=false;\r\n      this.showAllIncEjbCsv=false;\r\n      this.showAllIncEjbFlat=false;\r\n      this.showAllIncDbXml=false;\r\n      this.showAllIncDbJson=false;\r\n      this.showAllIncDbCsv=false;\r\n      this.showAllIncDbFalt=false;\r\n    }\r\n   else if(protocol.typeOfProtocol==\"Https/Http\" && protocol.dataType==\"XML\"){\r\n      this.showAllIncTcp=false;\r\n      this.showAllIncHttpXml=true;\r\n      this.showAllIncHttpJosn=false;  \r\n      this.showAllIncEjbFlat=false;    \r\n      this.showAllIncMdbXml=false;\r\n      this.showAllIncMdbJson=false;\r\n      this.showAllIncMdbCsv=false;\r\n      this.showAllIncMdbFlat=false;\r\n      this.showAllIncEjbXml=false;\r\n      this.showAllIncEjbJson=false;\r\n      this.showAllIncEjbCsv=false;\r\n      this.showAllIncDbXml=false;\r\n      this.showAllIncDbJson=false;\r\n      this.showAllIncDbCsv=false;\r\n      this.showAllIncDbFalt=false;\r\n\r\n    }\r\n    else if(protocol.typeOfProtocol==\"Https/Http\" && protocol.dataType==\"JSON\"){\r\n      this.showAllIncTcp=false;\r\n      this.showAllIncEjbFlat=false;\r\n      this.showAllIncHttpXml=false;\r\n      this.showAllIncHttpJosn=true;\r\n      this.showAllIncMdbXml=false;\r\n      this.showAllIncMdbJson=false;\r\n      this.showAllIncMdbCsv=false;\r\n      this.showAllIncMdbFlat=false;\r\n      this.showAllIncEjbXml=false;\r\n      this.showAllIncEjbJson=false;\r\n      this.showAllIncEjbCsv=false;\r\n      this.showAllIncDbXml=false;\r\n      this.showAllIncDbJson=false;\r\n      this.showAllIncDbCsv=false;\r\n      this.showAllIncDbFalt=false;\r\n\r\n    }\r\n  else if(protocol.typeOfProtocol==\"MDB\" && protocol.dataType==\"XML\"){\r\n      this.showAllIncTcp=false;\r\n      this.showAllIncEjbFlat=false;\r\n      this.showAllIncHttpXml=false;\r\n      this.showAllIncHttpJosn=false;\r\n      this.showAllIncMdbXml=true;\r\n      this.showAllIncMdbJson=false;\r\n      this.showAllIncMdbCsv=false;\r\n      this.showAllIncMdbFlat=false;\r\n      this.showAllIncEjbXml=false;\r\n      this.showAllIncEjbJson=false;\r\n      this.showAllIncEjbCsv=false;\r\n      this.showAllIncDbXml=false;\r\n      this.showAllIncDbJson=false;\r\n      this.showAllIncDbCsv=false;\r\n      this.showAllIncDbFalt=false;\r\n\r\n\r\n    }\r\n   else if(protocol.typeOfProtocol==\"MDB\" && protocol.dataType==\"JSON\"){\r\n      this.showAllIncTcp=false;\r\n      this.showAllIncHttpXml=false;\r\n      this.showAllIncEjbFlat=false;\r\n      this.showAllIncHttpJosn=false;\r\n      this.showAllIncMdbXml=false;\r\n      this.showAllIncMdbJson=true;\r\n      this.showAllIncMdbCsv=false;\r\n      this.showAllIncMdbFlat=false;\r\n      this.showAllIncEjbXml=false;\r\n      this.showAllIncEjbJson=false;\r\n      this.showAllIncEjbCsv=false;\r\n      this.showAllIncDbXml=false;\r\n      this.showAllIncDbJson=false;\r\n      this.showAllIncDbCsv=false;\r\n      this.showAllIncDbFalt=false;\r\n\r\n    }\r\n  else if(protocol.typeOfProtocol==\"MDB\" && protocol.dataType==\"CSV/EXCEL\"){\r\n      this.showAllIncTcp=false;\r\n      this.showAllIncHttpXml=false;\r\n      this.showAllIncHttpJosn=false;\r\n      this.showAllIncMdbXml=false;\r\n      this.showAllIncMdbJson=false;\r\n      this.showAllIncMdbCsv=true;\r\n      this.showAllIncEjbFlat=false;\r\n      this.showAllIncMdbFlat=false;\r\n      this.showAllIncEjbJson=false;\r\n      this.showAllIncEjbCsv=false;\r\n      this.showAllIncDbXml=false;\r\n      this.showAllIncDbJson=false;\r\n      this.showAllIncDbCsv=false;\r\n      this.showAllIncDbFalt=false;\r\n\r\n    }\r\n    else if(protocol.typeOfProtocol==\"MDB\" && protocol.dataType==\"FLATFILE\"){\r\n      this.showAllIncTcp=false;\r\n      this.showAllIncHttpXml=false;\r\n      this.showAllIncHttpJosn=false;\r\n      this.showAllIncMdbXml=false;\r\n      this.showAllIncMdbJson=false;\r\n      this.showAllIncMdbCsv=false;\r\n      this.showAllIncEjbFlat=false;\r\n      this.showAllIncMdbFlat=true;\r\n      this.showAllIncEjbXml=false;\r\n      this.showAllIncEjbJson=false;\r\n      this.showAllIncEjbCsv=false;\r\n      this.showAllIncDbXml=false;\r\n      this.showAllIncDbJson=false;\r\n      this.showAllIncDbCsv=false;\r\n      this.showAllIncDbFalt=false;\r\n    }\r\n    else if(protocol.typeOfProtocol==\"EJB\" && protocol.dataType==\"XML\"){\r\n      this.showAllIncTcp=false;\r\n      this.showAllIncHttpXml=false;\r\n      this.showAllIncHttpJosn=false;\r\n      this.showAllIncMdbXml=false;\r\n      this.showAllIncMdbJson=false;\r\n      this.showAllIncMdbCsv=false;\r\n      this.showAllIncEjbFlat=false;\r\n      this.showAllIncMdbFlat=false;\r\n      this.showAllIncEjbXml=true;\r\n      this.showAllIncEjbJson=false;\r\n      this.showAllIncEjbCsv=false;\r\n      this.showAllIncDbXml=false;\r\n      this.showAllIncDbJson=false;\r\n      this.showAllIncDbCsv=false;\r\n      this.showAllIncDbFalt=false;\r\n    }\r\n    else if(protocol.typeOfProtocol==\"EJB\" && protocol.dataType==\"JSON\"){\r\n      this.showAllIncTcp=false;\r\n      this.showAllIncHttpXml=false;\r\n      this.showAllIncHttpJosn=false;\r\n      this.showAllIncEjbFlat=false;\r\n      this.showAllIncMdbXml=false;\r\n      this.showAllIncMdbJson=false;\r\n      this.showAllIncMdbCsv=false;\r\n      this.showAllIncMdbFlat=false;\r\n      this.showAllIncEjbXml=false;\r\n      this.showAllIncEjbJson=true;\r\n      this.showAllIncEjbCsv=false;\r\n      this.showAllIncDbXml=false;\r\n      this.showAllIncDbJson=false;\r\n      this.showAllIncDbCsv=false;\r\n      this.showAllIncDbFalt=false;\r\n\r\n    }\r\n    else if(protocol.typeOfProtocol==\"EJB\" && protocol.dataType==\"CSV/EXCEL\"){\r\n      this.showAllIncTcp=false;\r\n      this.showAllIncHttpXml=false;\r\n      this.showAllIncHttpJosn=false;\r\n      this.showAllIncEjbFlat=false;\r\n      this.showAllIncMdbXml=false;\r\n      this.showAllIncMdbJson=false;\r\n      this.showAllIncMdbCsv=false;\r\n      this.showAllIncMdbFlat=false;\r\n      this.showAllIncEjbXml=false;\r\n      this.showAllIncEjbJson=false;\r\n      this.showAllIncEjbCsv=true;\r\n      this.showAllIncDbXml=false;\r\n      this.showAllIncDbJson=false;\r\n      this.showAllIncDbCsv=false;\r\n      this.showAllIncDbFalt=false;\r\n\r\n    }\r\n    else if(protocol.typeOfProtocol==\"EJB\" && protocol.dataType==\"FLATFILE\"){\r\n      this.showAllIncTcp=false;\r\n      this.showAllIncHttpXml=false;\r\n      this.showAllIncHttpJosn=false;\r\n      this.showAllIncEjbFlat=true;\r\n      this.showAllIncMdbXml=false;\r\n      this.showAllIncMdbJson=false;\r\n      this.showAllIncMdbCsv=false;\r\n      this.showAllIncMdbFlat=false;\r\n      this.showAllIncEjbXml=false;\r\n      this.showAllIncEjbJson=false;\r\n      this.showAllIncEjbCsv=false;\r\n      this.showAllIncDbXml=false;\r\n      this.showAllIncDbJson=false;\r\n      this.showAllIncDbCsv=false;\r\n      this.showAllIncDbFalt=false;\r\n\r\n    }\r\n    else if(protocol.typeOfProtocol==\"DB Connection\" && protocol.dataType==\"XML\"){\r\n      this.fetchDbconnection();\r\n      this.showAllIncTcp=false;\r\n      this.showAllIncHttpXml=false;\r\n      this.showAllIncHttpJosn=false;\r\n      this.showAllIncDbCsv=false;\r\n      this.showAllIncEjbFlat=false;\r\n      this.showAllIncMdbXml=false;\r\n      this.showAllIncMdbJson=false;\r\n      this.showAllIncMdbCsv=false;\r\n      this.showAllIncMdbFlat=false;\r\n      this.showAllIncEjbXml=false;\r\n      this.showAllIncEjbJson=false;\r\n      this.showAllIncEjbCsv=false;\r\n      this.showAllIncDbXml=true;\r\n      this.showAllIncDbJson=false;\r\n      this.showAllIncDbFalt=false;\r\n\r\n    }\r\n    else if(protocol.typeOfProtocol==\"DB Connection\" && protocol.dataType==\"JSON\"){\r\n      this.showAllIncTcp=false;\r\n      this.showAllIncHttpXml=false;\r\n      this.showAllIncHttpJosn=false;\r\n      this.showAllIncEjbFlat=false;\r\n      this.showAllIncMdbXml=false;\r\n      this.showAllIncMdbJson=false;\r\n      this.showAllIncMdbCsv=false;\r\n      this.showAllIncMdbFlat=false;\r\n      this.showAllIncEjbXml=false;\r\n      this.showAllIncEjbJson=false;\r\n      this.showAllIncEjbCsv=false;\r\n      this.showAllIncDbXml=false;\r\n      this.showAllIncDbJson=true;\r\n      this.showAllIncDbCsv=false;\r\n      this.showAllIncDbFalt=false;\r\n\r\n    }\r\n    else if(protocol.typeOfProtocol==\"DB Connection\" && protocol.dataType==\"CSV/EXCEL\"){\r\n      this.showAllIncTcp=false;\r\n      this.showAllIncHttpXml=false;\r\n      this.showAllIncHttpJosn=false;\r\n      this.showAllIncEjbFlat=false;\r\n      this.showAllIncMdbXml=false;\r\n      this.showAllIncMdbJson=false;\r\n      this.showAllIncMdbCsv=false;\r\n      this.showAllIncMdbFlat=false;\r\n      this.showAllIncEjbXml=false;\r\n      this.showAllIncEjbJson=false;\r\n      this.showAllIncEjbCsv=false;\r\n      this.showAllIncDbXml=false;\r\n      this.showAllIncDbJson=false;\r\n      this.showAllIncDbCsv=true;\r\n      this.showAllIncDbFalt=false;\r\n\r\n    }\r\n    else if(protocol.typeOfProtocol==\"DB Connection\" && protocol.dataType==\"FLATFILE\"){\r\n      this.showAllIncTcp=false;\r\n      this.showAllIncHttpXml=false;\r\n      this.showAllIncHttpJosn=false;\r\n      this.showAllIncEjbFlat=false;\r\n      this.showAllIncMdbXml=false;\r\n      this.showAllIncMdbJson=false;\r\n      this.showAllIncMdbCsv=false;\r\n      this.showAllIncMdbFlat=false;\r\n      this.showAllIncEjbXml=false;\r\n      this.showAllIncEjbJson=false;\r\n      this.showAllIncEjbCsv=false;\r\n      this.showAllIncDbXml=false;\r\n      this.showAllIncDbJson=false;\r\n      this.showAllIncDbCsv=false;\r\n      this.showAllIncDbFalt=true;\r\n\r\n    }\r\n  }\r\n  nextOfAllout(protocol)\r\n  {\r\n    console.log(protocol);\r\n    this.showOnlyAllBtn=true;\r\n    this.onlyAllOut=true;\r\n    this.showAllProtocolOut=false;\r\n    if(protocol.typeOfProtocol==\"TCP/IP\" && protocol.dataType==\"ISO 8583 1987\" ||protocol.dataType==\"ISO 8583 1993\" ||protocol.dataType=='ISO 8583 2003'){\r\n      this.fetchingIso();\r\n      this.showAllTcpOut=true;\r\n      this.showAllHttpXmlOut=false;\r\n      this.showAllHttpJsonOut=false;\r\n      this.showAllMdbXmlOut=false;\r\n      this.showAllMdbJsonOut=false;\r\n      this.showAllMdbCsvOut=false;\r\n      this.showAllMdbExcelOut=false;\r\n      this.showAllEjbExcelOut=false\r\n      this.showAllEjbJsonOut=false;\r\n      this.showAllEjbFlatOut=false;\r\n      this.showAllEjbXmlOut=false;\r\n      this.showAllDbXmlOut=false;\r\n      this.showAllDbJsonOut=false;\r\n      this.showAllDbExcelOut=false;\r\n      this.showAllDbflatOut=false;\r\n    }\r\n    else if(protocol.typeOfProtocol==\"Https/Http\" && protocol.dataType==\"XML\" ){\r\n      this.showAllTcpOut=false;\r\n      this.showAllHttpXmlOut=true;\r\n      this.showAllHttpJsonOut=false;\r\n      this.showAllMdbXmlOut=false;\r\n      this.showAllMdbJsonOut=false;\r\n      this.showAllMdbCsvOut=false;\r\n      this.showAllMdbExcelOut=false;\r\n      this.showAllEjbExcelOut=false;\r\n      this.showAllEjbXmlOut=false;\r\n      this.showAllEjbJsonOut=false;\r\n      this.showAllEjbFlatOut=false;\r\n      this.showAllDbXmlOut=false;\r\n      this.showAllDbJsonOut=false;\r\n      this.showAllDbExcelOut=false;\r\n      this.showAllDbflatOut=false;\r\n\r\n    }\r\n    else if(protocol.typeOfProtocol==\"Https/Http\" && protocol.dataType==\"JSON\" ){\r\n      this.showAllTcpOut=false;\r\n      this.showAllHttpXmlOut=false;\r\n      this.showAllHttpJsonOut=false;\r\n      this.showAllMdbXmlOut=true;\r\n      this.showAllMdbJsonOut=false;\r\n      this.showAllMdbCsvOut=false;\r\n      this.showAllMdbExcelOut=false;\r\n      this.showAllEjbExcelOut=false;\r\n      this.showAllEjbXmlOut=false;\r\n      this.showAllEjbJsonOut=false;\r\n      this.showAllEjbFlatOut=false;\r\n      this.showAllDbXmlOut=false;\r\n      this.showAllDbJsonOut=false;\r\n      this.showAllDbExcelOut=false;\r\n      this.showAllDbflatOut=false;\r\n\r\n      \r\n    }\r\n    else if(protocol.typeOfProtocol==\"MDB\" && protocol.dataType==\"XML\" ){\r\n      this.showAllTcpOut=false;\r\n      this.showAllHttpXmlOut=false;\r\n      this.showAllHttpJsonOut=false;\r\n      this.showAllMdbXmlOut=true;\r\n      this.showAllMdbJsonOut=false;\r\n      this.showAllMdbCsvOut=false;\r\n      this.showAllMdbExcelOut=false;\r\n      this.showAllEjbExcelOut=false;\r\n      this.showAllEjbXmlOut=false;\r\n      this.showAllEjbJsonOut=false;\r\n      this.showAllEjbFlatOut=false;\r\n      this.showAllDbXmlOut=false;\r\n      this.showAllDbJsonOut=false;\r\n      this.showAllDbExcelOut=false;\r\n      this.showAllDbflatOut=false;\r\n\r\n\r\n    }\r\n    else if(protocol.typeOfProtocol==\"MDB\" && protocol.dataType==\"JSON\" ){\r\n      this.showAllTcpOut=false;\r\n      this.showAllHttpXmlOut=false;\r\n      this.showAllHttpJsonOut=false;\r\n      this.showAllMdbXmlOut=false;\r\n      this.showAllMdbJsonOut=true;\r\n      this.showAllMdbCsvOut=false;\r\n      this.showAllMdbExcelOut=false;\r\n      this.showAllEjbExcelOut=false;\r\n      this.showAllEjbXmlOut=false;\r\n      this.showAllEjbJsonOut=false;\r\n      this.showAllEjbFlatOut=false;\r\n      this.showAllDbXmlOut=false;\r\n      this.showAllDbJsonOut=false;\r\n      this.showAllDbExcelOut=false;\r\n      this.showAllDbflatOut=false;\r\n\r\n      \r\n    }\r\n   else if(protocol.typeOfProtocol==\"MDB\" && protocol.dataType==\"CSV/EXCEL\" ){\r\n      this.showAllTcpOut=false;\r\n      this.showAllHttpXmlOut=false;\r\n      this.showAllHttpJsonOut=false;\r\n      this.showAllMdbXmlOut=false;\r\n      this.showAllMdbJsonOut=false;\r\n      this.showAllMdbCsvOut=true;\r\n      this.showAllMdbExcelOut=false;\r\n      this.showAllEjbExcelOut=false;\r\n      this.showAllEjbXmlOut=false;\r\n      this.showAllEjbJsonOut=false;\r\n      this.showAllEjbFlatOut=false;\r\n      this.showAllDbXmlOut=false;\r\n      this.showAllDbJsonOut=false;\r\n      this.showAllDbExcelOut=false;\r\n      this.showAllDbflatOut=false;\r\n\r\n    }\r\n    else if(protocol.typeOfProtocol==\"MDB\" && protocol.dataType==\"FLATFILE\" ){\r\n      this.showAllTcpOut=false;\r\n      this.showAllHttpXmlOut=false;\r\n      this.showAllHttpJsonOut=false;\r\n      this.showAllMdbXmlOut=false;\r\n      this.showAllMdbJsonOut=false;\r\n      this.showAllMdbCsvOut=false;\r\n      this.showAllMdbExcelOut=true;\r\n      this.showAllEjbExcelOut=false;\r\n      this.showAllEjbXmlOut=false;\r\n      this.showAllEjbJsonOut=false;\r\n      this.showAllEjbFlatOut=false;\r\n      this.showAllDbXmlOut=false;\r\n      this.showAllDbJsonOut=false;\r\n      this.showAllDbExcelOut=false;\r\n      this.showAllDbflatOut=false;\r\n\r\n    }\r\n    else if(protocol.typeOfProtocol==\"EJB\" && protocol.dataType==\"CSV/EXCEL\" ){\r\n      this.showAllTcpOut=false;\r\n      this.showAllHttpXmlOut=false;\r\n      this.showAllHttpJsonOut=false;\r\n      this.showAllMdbXmlOut=false;\r\n      this.showAllMdbJsonOut=false;\r\n      this.showAllMdbCsvOut=false;\r\n      this.showAllMdbExcelOut=false;\r\n      this.showAllEjbExcelOut=true;\r\n      this.showAllEjbXmlOut=false;\r\n      this.showAllEjbJsonOut=false;\r\n      this.showAllEjbFlatOut=false;\r\n      this.showAllDbXmlOut=false;\r\n      this.showAllDbJsonOut=false;\r\n      this.showAllDbExcelOut=false;\r\n      this.showAllDbflatOut=false;\r\n\r\n      \r\n    }\r\n    else if(protocol.typeOfProtocol==\"EJB\" && protocol.dataType==\"XML\" ){\r\n      this.showAllTcpOut=false;\r\n      this.showAllHttpXmlOut=false;\r\n      this.showAllHttpJsonOut=false;\r\n      this.showAllMdbXmlOut=false;\r\n      this.showAllMdbJsonOut=false;\r\n      this.showAllMdbCsvOut=false;\r\n      this.showAllMdbExcelOut=false;\r\n      this.showAllEjbExcelOut=false;\r\n      this.showAllEjbXmlOut=true;\r\n      this.showAllEjbJsonOut=false;\r\n      this.showAllEjbFlatOut=false;\r\n      this.showAllDbXmlOut=false;\r\n      this.showAllDbJsonOut=false;\r\n      this.showAllDbExcelOut=false;\r\n      this.showAllDbflatOut=false;\r\n    }\r\n    else if(protocol.typeOfProtocol==\"EJB\" && protocol.dataType==\"JSON\" ){\r\n      this.showAllTcpOut=false;\r\n      this.showAllHttpXmlOut=false;\r\n      this.showAllHttpJsonOut=false;\r\n      this.showAllMdbXmlOut=false;\r\n      this.showAllMdbJsonOut=false;\r\n      this.showAllMdbCsvOut=false;\r\n      this.showAllMdbExcelOut=false;\r\n      this.showAllEjbExcelOut=false;\r\n      this.showAllEjbXmlOut=false;\r\n      this.showAllEjbJsonOut=true;\r\n      this.showAllEjbFlatOut=false;\r\n      this.showAllDbXmlOut=false;\r\n      this.showAllDbJsonOut=false;\r\n      this.showAllDbExcelOut=false;\r\n      this.showAllDbflatOut=false;\r\n      \r\n    }\r\n    \r\n    else if(protocol.typeOfProtocol==\"EJB\" && protocol.dataType==\"FLATFILE\" ){\r\n      this.showAllTcpOut=false;\r\n      this.showAllHttpXmlOut=false;\r\n      this.showAllHttpJsonOut=false;\r\n      this.showAllMdbXmlOut=false;\r\n      this.showAllMdbJsonOut=false;\r\n      this.showAllMdbCsvOut=false;\r\n      this.showAllMdbExcelOut=false;\r\n      this.showAllDbJsonOut=false;\r\n      this.showAllEjbExcelOut=false;\r\n      this.showAllEjbXmlOut=false;\r\n      this.showAllEjbJsonOut=false;\r\n      this.showAllEjbFlatOut=true;\r\n      this.showAllDbXmlOut=false;\r\n      this.showAllDbExcelOut=false;\r\n      this.showAllDbflatOut=false;\r\n      \r\n    }\r\n      \r\n    else if(protocol.typeOfProtocol==\"DB Connection\" && protocol.dataType==\"XML\" ){\r\n      this.fetchDbconnection();\r\n      this.showAllTcpOut=false;\r\n      this.showAllHttpXmlOut=false;\r\n      this.showAllHttpJsonOut=false;\r\n      this.showAllMdbXmlOut=false;\r\n      this.showAllMdbJsonOut=false;\r\n      this.showAllMdbCsvOut=false;\r\n      this.showAllMdbExcelOut=false;\r\n      this.showAllEjbExcelOut=false;\r\n      this.showAllEjbXmlOut=false;\r\n      this.showAllEjbJsonOut=false;\r\n      this.showAllEjbFlatOut=false;\r\n      this.showAllDbXmlOut=true;\r\n      this.showAllDbJsonOut=false;\r\n      this.showAllDbExcelOut=false;\r\n      this.showAllDbflatOut=false;\r\n\r\n      \r\n    }\r\n    else if(protocol.typeOfProtocol==\"DB Connection\" && protocol.dataType==\"JSON\" ){\r\n      this.showAllTcpOut=false;\r\n      this.showAllHttpXmlOut=false;\r\n      this.showAllHttpJsonOut=false;\r\n      this.showAllMdbXmlOut=false;\r\n      this.showAllMdbJsonOut=false;\r\n      this.showAllMdbCsvOut=false;\r\n      this.showAllMdbExcelOut=false;\r\n      this.showAllEjbExcelOut=false;\r\n      this.showAllEjbXmlOut=false;\r\n      this.showAllEjbJsonOut=false;\r\n      this.showAllEjbFlatOut=false;\r\n      this.showAllDbXmlOut=false;\r\n      this.showAllDbJsonOut=true;\r\n      this.showAllDbExcelOut=false;\r\n      this.showAllDbflatOut=false;\r\n      \r\n    }\r\n    else if(protocol.typeOfProtocol==\"DB Connection\" && protocol.dataType==\"CSV/EXCEL\" ){\r\n      this.showAllTcpOut=false;\r\n      this.showAllHttpXmlOut=false;\r\n      this.showAllHttpJsonOut=false;\r\n      this.showAllMdbXmlOut=false;\r\n      this.showAllDbflatOut=false;\r\n      this.showAllMdbJsonOut=false;\r\n      this.showAllMdbCsvOut=false;\r\n      this.showAllMdbExcelOut=false;\r\n      this.showAllEjbExcelOut=false;\r\n      this.showAllEjbXmlOut=false;\r\n      this.showAllEjbJsonOut=false;\r\n      this.showAllEjbFlatOut=false;\r\n      this.showAllDbXmlOut=false;\r\n      this.showAllDbJsonOut=false;\r\n      this.showAllDbExcelOut=true;\r\n\r\n      \r\n    }\r\n    else if(protocol.typeOfProtocol==\"DB Connection\" && protocol.dataType==\"FLATFILE\" ){\r\n      this.showAllTcpOut=false;\r\n      this.showAllHttpXmlOut=false;\r\n      this.showAllHttpJsonOut=false;\r\n      this.showAllMdbXmlOut=false;\r\n      this.showAllDbflatOut=true;\r\n      this.showAllMdbJsonOut=false;\r\n      this.showAllMdbCsvOut=false;\r\n      this.showAllMdbExcelOut=false;\r\n      this.showAllEjbExcelOut=false;\r\n      this.showAllEjbXmlOut=false;\r\n      this.showAllEjbJsonOut=false;\r\n      this.showAllEjbFlatOut=false;\r\n      this.showAllDbXmlOut=false;\r\n      this.showAllDbJsonOut=false;\r\n      this.showAllDbExcelOut=false;\r\n\r\n      \r\n    }\r\n   \r\n  }\r\n \r\n  incomingDataypeSelection(dataType)\r\n  {\r\n    console.log(dataType);\r\n    this.incDataType=dataType;\r\n  }\r\n  // Reset Incoming\r\n  onResetIncoming(protocol)\r\n  {\r\n   console.log(\"protocol\",protocol);\r\n   protocol.typeOfProtocol=''\r\n   protocol.dataType=''\r\n  }\r\n  // previousOfIncoming\r\n  previousOfIncoming()\r\n  {\r\n    this.hideBasic=false;\r\n    this.showIncMsgProtocol=false;\r\n    this.showAllMsgProtocol=false;//all\r\n    this.showAuditLog=false;\r\n   console.log(\"here previous\")\r\n  }\r\n  onPreviousToProtocolScreen()\r\n  {\r\n    \r\n    if(this.createExtSys1.openToMessage==='Incoming')\r\n    { this.showFinalaFinish=false;\r\n      this.showDBJsonInc=false;\r\n      this.showDbCsvInc=false;\r\n      this.showEjbFlatInc=false;\r\n      this.showDbXmlInc=false;\r\n      this.showTcpInc=false;\r\n      this.showEjbFlatInc=false;\r\n      this.showEjbJsonInc=false;\r\n      this.showEjbCsvInc=false;\r\n      this.showIncMsgProtocol=true;\r\n      this.showHttpXmlInc=false;\r\n      this.showHttpJsonInc=false;\r\n      this.showMdbXmlInc=false;\r\n      this.showMDBJsonInc=false;\r\n      this.showMdbCSVInc=false;\r\n      this.showMdbFlatInc=false;\r\n      this.showEjbXMlInc=false;\r\n      this.showEjbJsonInc=false;\r\n      this.showAuditLog=false;\r\n    }\r\n    else if(this.createExtSys1.openToMessage==='OutComing')\r\n    {\r\n      this.showFinalaFinish=false;\r\n      this.showTcpOut=false;\r\n      this.showHttpXmlOut=false;\r\n      this.showOutMsgProtocol=true;\r\n      this.showAuditLog=false;\r\n      this.showHttpJsonOut=false;\r\n      this.showMdbXmlOut=false;\r\n      this.showMdbJsonOut=false;\r\n      this.showMdbCsvOut=false;\r\n      this.showMdbFlatOut=false;\r\n      this.showEjbXMlOut=false;\r\n      this.showEjbJsonOut=false;\r\n      this.showEjbCsvOut=false;\r\n      this.showEjbFlatOut=false;\r\n      this.showDBXmlOut=false;\r\n      this.showDBJsonOut=false;\r\n      this.showDbCsvOut=false;\r\n      this.showDbFaltOut=false;\r\n    }\r\n\r\n    else if(this.createExtSys1.openToMessage=='All'){\r\n      this.showFinalaFinish=false;\r\n      this.showAllMsgProtocol=true;\r\n      this.showAllProtocolInc=true;\r\n      this.showAllIncTcp=false;\r\n      this.showAllIncHttpXml=false;\r\n      this.showAllIncHttpJosn=false;\r\n      this.showAllIncMdbXml=false;\r\n      this.showAllIncMdbJson=false;\r\n      this.showAuditLog=false;\r\n      this.showAllIncMdbFlat=false;\r\n      this.showAllIncEjbXml=false;\r\n      this.showAllIncEjbJson=false;\r\n      this.showAllIncEjbCsv=false;\r\n      this.showAllIncEjbFlat=false;\r\n      this.showAllIncDbXml=false;\r\n      this.showAllIncDbJson=false;\r\n      this.showAllIncDbCsv=false;\r\n      this.showAllIncDbFalt=false;\r\n     \r\n    }\r\n  }\r\n  onPreviousOnlyAllInc()\r\n  {\r\n   console.log(this.tabGroup._tabs.first.textLabel); \r\n   if(this.tabGroup._tabs.first.textLabel ==='Incoming')\r\n   {\r\n    console.log(\"coming in tab 1\");\r\n    this.showAllProtocolInc=true;\r\n    this.showAllIncTcp=false;\r\n    this.showOnlyAllBtn=false;\r\n    this.showAllIncHttpXml=false;\r\n    this.showAllIncHttpJosn=false;\r\n    this.showAllIncMdbXml=false;\r\n    this.showAllIncMdbJson=false;\r\n    this.showAllIncMdbFlat=false;\r\n    this.showAllIncEjbXml=false;\r\n    this.showAllIncEjbJson=false;\r\n    this.showAllIncEjbCsv=false;\r\n    this.showAllIncEjbFlat=false;\r\n    this.showAllIncDbXml=false;\r\n    this.showAllIncDbJson=false;\r\n    this.showAllIncDbCsv=false;\r\n    this.showAllIncDbFalt=false;\r\n   this.showAllIncMdbCsv=false;\r\n   }\r\n  \r\n  }\r\n  onPreviousOnlyAllOut()\r\n  { this.onlyAllOut=false;\r\n    this.showAllProtocolOut=true;\r\n    this.showOnlyAllBtn=false;\r\n    this.showAllTcpOut=false;\r\n    this.showAllHttpXmlOut=false;\r\n    this.showAllHttpJsonOut=false;\r\n    this.showAllMdbXmlOut=false;\r\n    this.showAllMdbJsonOut=false;\r\n    this.showAllMdbCsvOut=false;\r\n    this.showAllMdbExcelOut=false;\r\n    this.showAllEjbExcelOut=false;\r\n    this.showAllEjbXmlOut=false;\r\n    this.showAllEjbJsonOut=false;\r\n    this.showAllEjbFlatOut=false;\r\n    this.showAllDbXmlOut=false;\r\n    this.showAllDbJsonOut=false;\r\n    this.showAllDbExcelOut=false;\r\n    this.showAllDbflatOut=false;\r\n  }\r\n  tabChanged(event)\r\n  { \r\n    console.log(event);\r\n    this.tabText=event.tab.textLabel;\r\n  }\r\n  //selecting Protocol Outgoing\r\n  onOutgoingProtocolSelction(protocol)\r\n  { console.log(protocol);\r\n    this.protocoloutGoing=protocol;\r\n    this.dataTypeForOutGoing=[];\r\n    if(protocol=='TCP/IP')\r\n    {\r\n      this.dataTypeForOutGoing=['ISO 8583 1987', 'ISO 8583 1993', 'ISO 8583 2003'];\r\n    }\r\n    else if(protocol=='Https/Http')\r\n    {this.dataTypeForOutGoing=[];\r\n      this.dataTypeForOutGoing=['XML','JSON'];\r\n    }\r\n    else if(protocol=='MDB')\r\n    {\r\n      this.dataTypeForOutGoing=[];\r\n      this.dataTypeForOutGoing=['XML','JSON','CSV/EXCEL','FLATFILE'];\r\n    }\r\n    else if(protocol=='EJB')\r\n    {\r\n      this.dataTypeForOutGoing=[];\r\n      this.dataTypeForOutGoing=['XML','JSON','CSV/EXCEL','FLATFILE'];\r\n    }\r\n    else if(protocol=='DB Connection')\r\n    {\r\n      this.dataTypeForOutGoing=[];\r\n      this.dataTypeForOutGoing=['XML','JSON','CSV/EXCEL','FLATFILE'];\r\n    }\r\n  }\r\n  onDataTypeOFOutgoingProtocol(dataType)\r\n  {\r\n    console.log(dataType);\r\n    this.dataTypeOutgoing=dataType;\r\n  }\r\n  onResetingOutgoing(protocolOut)\r\n  {\r\n    protocolOut.typeOfProtocol='';\r\n    protocolOut.dataType='';\r\n  }\r\n  \r\n  previousOfOutgoing()\r\n  {\r\n    this.hideBasic=false;\r\n    this.showOutMsgProtocol=false;\r\n    this.showAllMsgProtocol=false;//all\r\n  }\r\n  nextOfOutgoinProtocol(protocol)\r\n  {  this.showOutMsgProtocol=false;\r\n    this.showFinalaFinish=true;\r\n    if(protocol.typeOfProtocol==\"TCP/IP\" && protocol.dataType==\"ISO 8583 1987\" ||protocol.dataType==\"ISO 8583 1993\" ||protocol.dataType=='ISO 8583 2003'){\r\n      this.fetchingIso();\r\n      this.showTcpOut=true;\r\n      this.showHttpXmlOut=false;\r\n      this.showHttpJsonOut=false;\r\n      this.showEjbJsonOut=false;\r\n      this.showMdbXmlOut=false;\r\n      this.showMdbJsonOut=false;\r\n      this.showMdbCsvOut=false;\r\n      this.showMdbFlatOut=false;\r\n      this.showEjbXMlOut=false;\r\n      this.showEjbFlatOut=false;\r\n      this.showEjbCsvOut=false;\r\n      this.showDBXmlOut=false;\r\n      this.showDBJsonOut=false;\r\n    } \r\n   else if(protocol.typeOfProtocol==\"Https/Http\" && protocol.dataType==\"XML\" ){\r\n      this.showTcpOut=false;\r\n      this.showHttpXmlOut=true;\r\n      this.showEjbJsonOut=false;\r\n      this.showHttpJsonOut=false;\r\n      this.showMdbXmlOut=false;\r\n      this.showMdbJsonOut=false;\r\n      this.showMdbCsvOut=false;\r\n      this.showMdbFlatOut=false;\r\n      this.showEjbXMlOut=false;\r\n      this.showEjbFlatOut=false;\r\n      this.showEjbCsvOut=false;\r\n      this.showDBXmlOut=false;\r\n      this.showDBJsonOut=false;\r\n      this.showDbCsvOut=false;\r\n      this.showDbFaltOut=false;\r\n    }\r\n\r\n    else if(protocol.typeOfProtocol==\"Https/Http\" && protocol.dataType==\"JSON\" ){\r\n      this.showTcpOut=false;\r\n      this.showHttpXmlOut=false;\r\n      this.showHttpJsonOut=true;\r\n      this.showEjbJsonOut=false;\r\n      this.showMdbXmlOut=false; \r\n      this.showMdbJsonOut=false;\r\n      this.showMdbCsvOut=false;\r\n      this.showMdbFlatOut=false;\r\n      this.showEjbXMlOut=false;\r\n      this.showEjbFlatOut=false;\r\n      this.showEjbCsvOut=false;\r\n      this.showDBXmlOut=false;\r\n      this.showDBJsonOut=false;\r\n      this.showDbCsvOut=false;\r\n      this.showDbFaltOut=false;\r\n    }\r\n    else if(protocol.typeOfProtocol==\"MDB\" && protocol.dataType==\"XML\" ){\r\n      this.showTcpOut=false;\r\n      this.showEjbJsonOut=false;\r\n      this.showHttpXmlOut=false;\r\n      this.showHttpJsonOut=false;\r\n      this.showMdbXmlOut=true; \r\n      this.showMdbJsonOut=false;\r\n      this.showMdbCsvOut=false;\r\n      this.showMdbFlatOut=false;\r\n      this.showEjbXMlOut=false;\r\n      this.showEjbFlatOut=false;\r\n      this.showEjbCsvOut=false;\r\n      this.showDBXmlOut=false;\r\n      this.showDBJsonOut=false;\r\n      this.showDbCsvOut=false;\r\n      this.showDbFaltOut=false;\r\n    }\r\n    else if(protocol.typeOfProtocol==\"MDB\" && protocol.dataType==\"JSON\" ){\r\n      this.showTcpOut=false;\r\n      this.showEjbJsonOut=false;\r\n      this.showHttpXmlOut=false;\r\n      this.showHttpJsonOut=false;\r\n      this.showMdbXmlOut=false; \r\n      this.showMdbJsonOut=true;\r\n      this.showMdbCsvOut=false;\r\n      this.showMdbFlatOut=false;\r\n      this.showEjbXMlOut=false;\r\n      this.showEjbFlatOut=false;\r\n      this.showEjbCsvOut=false;\r\n      this.showDBXmlOut=false;\r\n      this.showDBJsonOut=false;\r\n      this.showDbCsvOut=false;\r\n      this.showDbFaltOut=false;\r\n    }\r\n    else if(protocol.typeOfProtocol==\"MDB\" && protocol.dataType==\"CSV/EXCEL\" ){\r\n      this.showTcpOut=false;\r\n      this.showHttpXmlOut=false;\r\n      this.showEjbJsonOut=false;\r\n      this.showHttpJsonOut=false;\r\n      this.showMdbXmlOut=false; \r\n      this.showMdbJsonOut=false;\r\n      this.showMdbCsvOut=true;\r\n      this.showMdbFlatOut=false;\r\n      this.showEjbXMlOut=false;\r\n      this.showEjbFlatOut=false;\r\n      this.showEjbCsvOut=false;\r\n      this.showDBXmlOut=false;\r\n      this.showDBJsonOut=false;\r\n      this.showDbCsvOut=false;\r\n      this.showDbFaltOut=false;\r\n    }\r\n    else if(protocol.typeOfProtocol==\"MDB\" && protocol.dataType==\"FLATFILE\" ){\r\n      this.showTcpOut=false;\r\n      this.showEjbJsonOut=false;\r\n      this.showHttpXmlOut=false;\r\n      this.showHttpJsonOut=false;\r\n      this.showMdbXmlOut=false; \r\n      this.showMdbJsonOut=false;\r\n      this.showMdbCsvOut=false;\r\n      this.showMdbFlatOut=true;\r\n      this.showEjbXMlOut=false;\r\n      this.showEjbFlatOut=false;\r\n      this.showEjbCsvOut=false;\r\n      this.showDBXmlOut=false;\r\n      this.showDBJsonOut=false;\r\n      this.showDbCsvOut=false;\r\n      this.showDbFaltOut=false;\r\n    }\r\n    else if(protocol.typeOfProtocol==\"EJB\" && protocol.dataType==\"XML\" ){\r\n      this.showTcpOut=false;\r\n      this.showHttpXmlOut=false;\r\n      this.showHttpJsonOut=false;\r\n      this.showMdbXmlOut=false; \r\n      this.showEjbJsonOut=false;\r\n      this.showMdbJsonOut=false;\r\n      this.showMdbCsvOut=false;\r\n      this.showMdbFlatOut=false;\r\n      this.showEjbXMlOut=true;\r\n      this.showEjbFlatOut=false;\r\n      this.showEjbCsvOut=false;\r\n      this.showDBXmlOut=false;\r\n      this.showDBJsonOut=false;\r\n      this.showDbCsvOut=false;\r\n      this.showDbFaltOut=false;\r\n    }\r\n    else if(protocol.typeOfProtocol==\"EJB\" && protocol.dataType==\"JSON\" ){\r\n      this.showTcpOut=false;\r\n      this.showHttpXmlOut=false;\r\n      this.showHttpJsonOut=false;\r\n      this.showMdbXmlOut=false; \r\n      this.showEjbJsonOut=true;\r\n      this.showMdbJsonOut=false;\r\n      this.showMdbCsvOut=false;\r\n      this.showMdbFlatOut=false;\r\n      this.showEjbXMlOut=false;\r\n      this.showEjbFlatOut=false;\r\n      this.showEjbCsvOut=false;\r\n      this.showDBXmlOut=false;\r\n      this.showDBJsonOut=false;\r\n      this.showDbCsvOut=false;\r\n      this.showDbFaltOut=false;\r\n    }\r\n    else if(protocol.typeOfProtocol==\"EJB\" && protocol.dataType==\"CSV/EXCEL\" ){\r\n      this.showTcpOut=false;\r\n      this.showHttpXmlOut=false;\r\n      this.showHttpJsonOut=false;\r\n      this.showMdbXmlOut=false; \r\n      this.showEjbJsonOut=false;\r\n      this.showMdbJsonOut=false;\r\n      this.showMdbCsvOut=false;\r\n      this.showMdbFlatOut=false;\r\n      this.showEjbXMlOut=false;\r\n      this.showEjbFlatOut=false;\r\n      this.showEjbCsvOut=true;\r\n      this.showDBXmlOut=false;\r\n      this.showDBJsonOut=false;\r\n      this.showDbCsvOut=false;\r\n      this.showDbFaltOut=false;\r\n    }\r\n\r\n    else if(protocol.typeOfProtocol==\"EJB\" && protocol.dataType==\"FLATFILE\" ){\r\n      this.showTcpOut=false;\r\n      this.showHttpXmlOut=false;\r\n      this.showHttpJsonOut=false;\r\n      this.showMdbXmlOut=false; \r\n      this.showEjbJsonOut=false;\r\n      this.showMdbJsonOut=false;\r\n      this.showMdbCsvOut=false;\r\n      this.showMdbFlatOut=false;\r\n      this.showEjbXMlOut=false;\r\n      this.showEjbFlatOut=true;\r\n      this.showEjbCsvOut=false;\r\n      this.showDBXmlOut=false;\r\n      this.showDBJsonOut=false;\r\n      this.showDbCsvOut=false;\r\n      this.showDbFaltOut=false;\r\n    }\r\n    else if(protocol.typeOfProtocol==\"DB Connection\" && protocol.dataType==\"XML\" ){\r\n      this.fetchDbconnection();\r\n      this.showTcpOut=false;\r\n      this.showHttpXmlOut=false;\r\n      this.showHttpJsonOut=false;\r\n      this.showMdbXmlOut=false; \r\n      this.showEjbJsonOut=false;\r\n      this.showMdbJsonOut=false;\r\n      this.showMdbCsvOut=false;\r\n      this.showMdbFlatOut=false;\r\n      this.showEjbXMlOut=false;\r\n      this.showEjbFlatOut=false;\r\n      this.showEjbCsvOut=false;\r\n      this.showDBXmlOut=true;\r\n      this.showDBJsonOut=false;\r\n      this.showDbCsvOut=false;\r\n      this.showDbFaltOut=false;\r\n    }\r\n    else if(protocol.typeOfProtocol==\"DB Connection\" && protocol.dataType==\"JSON\" ){\r\n      this.showTcpOut=false;\r\n      this.showHttpXmlOut=false;\r\n      this.showHttpJsonOut=false;\r\n      this.showMdbXmlOut=false; \r\n      this.showEjbJsonOut=false;\r\n      this.showMdbJsonOut=false;\r\n      this.showMdbCsvOut=false;\r\n      this.showMdbFlatOut=false;\r\n      this.showEjbXMlOut=false;\r\n      this.showEjbFlatOut=false;\r\n      this.showEjbCsvOut=false;\r\n      this.showDBXmlOut=false;\r\n      this.showDBJsonOut=true;\r\n      this.showDbCsvOut=false;\r\n      this.showDbFaltOut=false;\r\n    }\r\n    else if(protocol.typeOfProtocol==\"DB Connection\" && protocol.dataType==\"CSV/EXCEL\" ){\r\n      this.showTcpOut=false;\r\n      this.showHttpXmlOut=false;\r\n      this.showHttpJsonOut=false;\r\n      this.showMdbXmlOut=false; \r\n      this.showEjbJsonOut=false;\r\n      this.showMdbJsonOut=false;\r\n      this.showMdbCsvOut=false;\r\n      this.showMdbFlatOut=false;\r\n      this.showEjbXMlOut=false;\r\n      this.showEjbFlatOut=false;\r\n      this.showEjbCsvOut=false;\r\n      this.showDBXmlOut=false;\r\n      this.showDBJsonOut=false;\r\n      this.showDbCsvOut=true;\r\n      this.showDbFaltOut=false;\r\n    }\r\n    else if(protocol.typeOfProtocol==\"DB Connection\" && protocol.dataType==\"FLATFILE\" ){\r\n      this.showTcpOut=false;\r\n      this.showHttpXmlOut=false;\r\n      this.showHttpJsonOut=false;\r\n      this.showMdbXmlOut=false; \r\n      this.showEjbJsonOut=false;\r\n      this.showMdbJsonOut=false;\r\n      this.showMdbCsvOut=false;\r\n      this.showMdbFlatOut=false;\r\n      this.showEjbXMlOut=false;\r\n      this.showEjbFlatOut=false;\r\n      this.showEjbCsvOut=false;\r\n      this.showDBXmlOut=false;\r\n      this.showDBJsonOut=false;\r\n      this.showDbCsvOut=false;\r\n      this.showDbFaltOut=true;\r\n    }\r\n  }\r\n  // ============Delete row Methods==============\r\n  // Incoming Tcp Delete\r\n  deleteDbXmlInc(i)\r\n  {\r\n    this.colRowForDbInc.splice(i,1);\r\n  }\r\n  deleteEjbJsonOut(i)\r\n  {\r\n    this.outEjbJson.splice(i,1);\r\n  }\r\n  deleteOutHttpJson(i)\r\n  { \r\n    this.outHttpJson.splice(i,1);\r\n  }\r\n  deleteOfTCP(i)\r\n  {\r\n     this.incomingMessageConfigurationTcp.splice(i,1);\r\n  }\r\n  deleteIncEjbJson(i)\r\n  {\r\n    this.incEjbJson.splice(i,1); \r\n  }\r\n  deleteEjbXmlInc(i)\r\n  {\r\n    this.incEjbXMl.splice(i,1);\r\n  }\r\n  deleteIncHttpJson(i)\r\n  {\r\n    this.incHttpJson.splice(i,1)\r\n  }\r\n  deleteMdbJsonInc(i)\r\n  {\r\n    this.incMdbJson.splice(i,1);\r\n  }\r\n  deleteOutgoingTcp(i)\r\n  {\r\n    this.outgoingMessageConfigurationTcp.splice(i,1);\r\n  }\r\n  deleteMdbXmlInc(i)\r\n  {\r\n    this.incMDBXML.splice(i,1);\r\n  }\r\n  deleteIncHttpXml(i)\r\n  {\r\n    this.incHttpXMl.splice(i,1);\r\n  }\r\n  // =======================delete Methods out going=================\r\n  deleteOutEjbXml(i)\r\n  {\r\n    this.outEjbXml.splice(i,1);\r\n  }\r\n  deleteOutHttpxMl(i)\r\n  {\r\n    this.outHttpXml.splice(i,1);\r\n  }\r\n  deleteoutMdbXml(i)\r\n  {\r\n    this.outMdbXml.splice(i,1);\r\n  }\r\n  deleteMdbJsonOut(i)\r\n  {\r\n    this.outMdbJson.splice(i,1);\r\n  }\r\n  // ===================Add Row Methods===========\r\n  // Incoming  Add\r\n  \r\n  addIncEjbJson() \r\n  {\r\n    this.incEjbJson.push({key:'',dataType:'',defaultValue:''});\r\n  }\r\n  addMdbJsonInc()\r\n  {\r\n    this.incMdbJson.push({key:'',defaultValue:'',dataType:''});\r\n  }\r\n  addEjbXMlInc()\r\n  {\r\n    this.incEjbXMl.push({id:'',node:'',tagName:'',dataType:'',tagValue:'',extSysCode: '',tagDefault:''});\r\n  }\r\n  addIncomingTcp()\r\n  {\r\n    this.incomingMessageConfigurationTcp.push({id:'',dataType:'',extSys:'',fieldNo:'',fieldName:'',defaultValue:''});\r\n  }\r\n  addIncHttpXMl()\r\n  {\r\n    this.incHttpXMl.push({id:'',extSys:'',node:'',tagName:'',dataType:'',defaultValue:''});\r\n  }\r\naddoutgoingTCP()\r\n{\r\n  this.outgoingMessageConfigurationTcp.push({id:'',dataType:'',extSys:'',fieldNo:'',fieldName:'',defaultValue:''});\r\n}\r\naddIncHttpJson()\r\n{\r\n  this.incHttpJson.push({key:'',dataType:'',deafultValue:''});\r\n}\r\naddMdbXMlInc()\r\n{\r\n  this.incMDBXML.push({node:'',tagDefault:'',dataType:'',extSysCode:'',defaultValue:'',id:'',tagName:''});\r\n}\r\n// ========================Add rows out going=========================\r\naddEjbJsonOut()\r\n{\r\nthis.outEjbJson.push({dataType:'',defaultValue:'',key:''});\r\n}\r\naddOutHttpXml()\r\n{this.outHttpXml.push({node:'',tagName:'',dataType:'',defaultValue:'',id:'',extSys:''})}\r\naddOutHttpJosn()\r\n{\r\n  this.outHttpJson.push({dataType:'',defaultValue:'',key:''}); \r\n}\r\naddoutMdbXMl()\r\n{\r\n  this.outMdbXml.push({dataType:'',id:'',extSysCode:'',node:'',tagDefault:'',tagName:'',tagvalue:''}); \r\n}\r\naddoutMdbJosn()\r\n{\r\n  this.outMdbJson.push({dataType:'',key:'',defaultValue:''});\r\n}\r\naddoutEjbXml()\r\n{\r\n  this.outEjbXml.push({dataType:'',tagvalue:'',tagName:'',tagDefault:'',node:'',extSysCode:'',id:''});\r\n}\r\n// ====================File Upload Methods==================\r\nfileuploadHttpXMlInc()\r\n{\r\n\r\n}\r\nchooseFile() {\r\n  console.log(\"heyy file\")\r\n  document.getElementById('chFile').click();\r\n}\r\n// =====================Db connection Table==============\r\nonsearchingTablName(event:any)\r\n{\r\n  let data = this.tableNameinc.filter(function (e) {\r\n   \r\n    let tableName = e.toLowerCase();\r\n  \r\n    let value = event.target.value.toLowerCase();\r\n    return !tableName.indexOf(value);\r\n  });\r\n  this.incDbRecords = data;\r\n}\r\ngettingColumnNameForIncoming(event)\r\n{ console.log(\"from search\");\r\n  console.log(event.option.value);\r\n  \r\n  this.addSystem.coulmnNameBasedonTableName(this.incDbData.connectiongstring,this.incDbData.dataBaseName,this.incDbData.userName,this.incDbData.password,event.option.value).subscribe(columnNAme=>\r\n    {\r\n      console.log(columnNAme)\r\n      this.coulmnNameBasedonTanbleName=columnNAme;\r\n       this.colRowForDbInc.push(columnNAme[0]);\r\n      console.log(this.colRowForDbInc);\r\n      // \r\n      \r\n    });\r\n}\r\n// ading rows based on index\r\nonAddingrowsForDbInc(i)\r\n{\r\n  console.log(\"adding rows\",i);\r\n  this.count+=1\r\n  console.log(\"cc\",this.count);\r\n  this.coulmnNameBasedonTanbleName.forEach((el,i)=>{\r\n    console.log(\"count\",this.count,i);\r\n    if(this.count==i){\r\n  \r\n    this.colRowForDbInc.push(this.coulmnNameBasedonTanbleName[i])\r\n  }\r\n  \r\n    // if(count==index)\r\n    // {\r\n    // this.data.push(el[index]);\r\n    // }\r\n   \r\n  })\r\n}\r\n// MDB Queue Selection\r\nonMdbIncQueue(event)\r\n{\r\nconsole.log(event);\r\nconsole.log(event.value);\r\nif(event.value=='JMS')\r\n{\r\n  this.showjsmQueue=true;\r\n  this.showibmQueue=false;\r\n}\r\nelse{\r\n  this.showjsmQueue=false;\r\n  this.showibmQueue=true;\r\n}\r\n}\r\nonMdbQueueOut(event)\r\n{\r\n  console.log(event);\r\n  console.log(event.value);\r\n  if(event.value=='JMS')\r\n  {\r\n    this.showjsmQueueOut=true;\r\n    this.showibmQueueOut=false;\r\n  }\r\n  else{\r\n    this.showjsmQueueOut=false;\r\n    this.showibmQueueOut=true;\r\n  } \r\n}\r\n// gettingIso/Tcp record\r\nfetchingIso()\r\n{this.showPrepgrassBar=true;\r\n  this.addSystem.fetchingIsoForTcp().subscribe(isoResp=>{\r\n    console.log(isoResp);\r\n    this.showPrepgrassBar=false;\r\n    if(this.createExtSys1.openToMessage=='Incoming' &&isoResp)\r\n    { this.showTcpInc=false;\r\n      this.incomingMessageConfigurationTcp=isoResp;\r\n      this.showTcpInc=true;\r\n      console.log(\"if inc1\");\r\n    }\r\n    else if(this.createExtSys1.openToMessage=='OutComing')\r\n    {\r\n      this.outgoingMessageConfigurationTcp=isoResp;\r\n      console.log(\"if out1\");\r\n    }\r\n    else{\r\n      this.outgoingMessageConfigurationTcp=isoResp;\r\n      this.incomingMessageConfigurationTcp=isoResp;\r\n      console.log(\"all 3\");\r\n    }\r\n\r\n  \r\n  })\r\n}\r\n// fetch Db conncetion\r\nfetchDbconnection()\r\n{\r\n  console.log(\"coming in db connection\");\r\n  this.showPrepgrassBar=true;\r\n  this.addSystem.pingDataSource(this.incDbData.connectiongstring,this.incDbData.dataBaseName,this.incDbData.userName,this.incDbData.password).subscribe(dbResp=>{\r\n    console.log(dbResp);\r\n    if(dbResp){\r\n      Swal.fire({text:'Db connection SuccessFull'});\r\n      this.showPrepgrassBar=false;\r\n    this.incDbRecords=dbResp;\r\n    this.tableNameinc=this.incDbRecords;\r\n    }\r\n  })\r\n  \r\n}\r\n\r\n// all \r\nnextStep(tabIndex : number) {\r\n  if (this.selectedIndex < 2) {\r\n    this.selectedIndex = tabIndex + 1;\r\n  }\r\n}\r\n\r\n\r\npreviousStep(tabIndex : number) {\r\n  if (this.selectedIndex > 0) {\r\n    this.selectedIndex = tabIndex - 1;\r\n    this.selectedIndex=0;\r\n    this.showOnlyAllBtn=true;\r\n  }\r\n}\r\n// save \r\nonfinish()\r\n{\r\n  console.log(this.createExtSys1);\r\n  // save==>basic\r\n  this.addSystemSave.code=this.createExtSys1.code;\r\n  this.addSystemSave.name=this.createExtSys1.name;\r\n  this.addSystemSave.type=this.createExtSys1.type;\r\n  this.addSystemSave.openToMessage=this.createExtSys1.openToMessage;\r\n  this.addSystemSave.externalIp=this.createExtSys1.externalIp;\r\n  this.addSystemSave.externalPort=this.createExtSys1.externalPort;\r\n  this.addSystemSave.medianIp=this.createExtSys1.medianIp;\r\n  this.addSystemSave.medianPort=this.createExtSys1.medianPort;\r\n// Incoming messgaes==save\r\nthis.addSystemSave.incIntegratProtocol=this.incomingIntegrationProtocol;\r\nthis.addSystemSave.incIsoMsgTcp=this.incomingMessageConfigurationTcp;\r\nthis.addSystemSave.incXmlMsgHttp=this.incHttpXMl;\r\nthis.addSystemSave.incmsgconfighttpjson=this.incHttpJson;\r\n\r\n// outgoing ==>messa\r\nthis.addSystemSave.outIntegratProtocol=this.outgoingIntegrationProtocol;\r\nthis.addSystemSave.outgoIsoMsgTcp=this.outgoingMessageConfigurationTcp;\r\nthis.addSystemSave.outgoXmlMsgHttp=this.outHttpXml;\r\nthis.addSystemSave.outgoHttpMsgConfigJSON=this.outHttpJson;\r\nconsole.log(\"thi\",this.addSystemSave);\r\n\r\n\r\nthis.addSystem.editaddsystem(\"update\",this.currentUser,this.addSystemSave).subscribe(addSystemResp=>{\r\n  console.log(\"addSystemResp\",addSystemResp);\r\n\r\n  if(addSystemResp){\r\n    this.showAuditLog=true;\r\n    this.addSysResp=addSystemResp;\r\n\r\n    Swal.fire({text:'Record Saved successFully'});}\r\n},(err)=>{Swal.fire({text:'Failed To Save The Record'})});\r\n}\r\n}\r\nexport class Addsystem{\r\n  code:any;\r\nexternalIp:any;\r\noutgoingdbExcel:any;\r\nexternalPort:any;\r\nmedianIp:any;\r\nmedianPort:any;\r\nname:any;\r\nopenToMessage:any;\r\ntype:any;\r\n\r\n// Incoming\r\nincdbXMl: any;\r\nincIntegratProtocol:any;\r\nincomingMdb:any;\r\nincXmlMsgHttp:any;\r\nincIsoMsgTcp:any;\r\nmdbExcelincoming:any;\r\nincDbconntionJSOn:any;\r\nincExcelDbconnect:any;\r\nincmsgconfighttpjson:any;\r\nincomingMdbJson:any;\r\neJBXMLincoming:any;\r\nincomingEJBJSOn:any;\r\n\r\n//outgoing\r\n\r\noutgoDbConnectXML:any;\r\noutIntegratProtocol:any;\r\noutgoXmlMsgHttp:any;\r\noutgoIsoMsgTcp:any;\r\noutgoHttpMsgConfigJSON:any;\r\ndboutgoingJson:any;  \r\n  mdboutJSon:any;\r\n  mDBoutingXMl:any;\r\n  ejbXMloutgoing:any;\r\n  ejboutgoingJson:any;\r\n  // ===>audit\r\n  // -----------//auditlog//--------\r\nversion:any;\r\nrecordStatus:any;\r\n  verifiedOnce: any;\r\n  verifiedStatus:any;\r\n  creatorId:any;\r\n  verifierId: any;\r\n\r\n\r\n\r\n}\r\n","export default \"table {\\n  width: 100%;\\n}\\n\\nth {\\n  /* text-align: center;\\n   */\\n  align-content: center;\\n}\\n\\ntable td {\\n  padding-right: 50px;\\n}\\n\\n#customers {\\n  font-family: \\\"Trebuchet MS\\\", Arial, Helvetica, sans-serif;\\n  border-collapse: collapse;\\n  width: 100%;\\n}\\n\\n#customers td, #customers th {\\n  border: 1px solid #ddd;\\n  padding: 8px;\\n  text-align: center;\\n}\\n\\n#customers tr:nth-child(even) {\\n  background-color: #f2f2f2;\\n}\\n\\n#customers th {\\n  padding-top: 12px;\\n  padding-bottom: 12px;\\n  text-align: left;\\n  background-color: #61b2d8;\\n  color: white;\\n}\\n\\n.mat-raised-button {\\n  width: -webkit-fit-content;\\n  width: -moz-fit-content;\\n  width: fit-content;\\n  height: 20px;\\n  line-height: 27px;\\n  min-height: 27px;\\n  vertical-align: top;\\n  font-size: 11px;\\n  padding: 0 0;\\n  margin: 0;\\n}\\n\\nmat-card {\\n  width: 350px;\\n}\\n\\nmat-card mat-form-field {\\n  font-size: 12px;\\n}\\n\\nmat-card a {\\n  font-size: 11px;\\n}\\n\\nmat-card p {\\n  font-size: 11px;\\n}\\n\\n::ng-deep .mat-form-field-appearance-outline .mat-form-field-outline {\\n  color: black !important;\\n}\\n\\nmat-card mat-form-field {\\n  font-size: 12px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdmlld3Mvc2lhcy12Mi9leGNlbC1leHRlcm5hbC1zeXMvRjpcXG11dGh1LW9uYm9hcmRcXG1lZGlhbi1waDItdWkvc3JjXFxhcHBcXHZpZXdzXFxzaWFzLXYyXFxleGNlbC1leHRlcm5hbC1zeXNcXGV4Y2VsLWV4dGVybmFsLXN5cy5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvdmlld3Mvc2lhcy12Mi9leGNlbC1leHRlcm5hbC1zeXMvZXhjZWwtZXh0ZXJuYWwtc3lzLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksV0FBQTtBQ0NKOztBREVFO0VBQ0U7SUFBQTtFQUVGLHFCQUFBO0FDQ0Y7O0FEQ0U7RUFDRSxtQkFBQTtBQ0VKOztBREFBO0VBQ0kseURBQUE7RUFDQSx5QkFBQTtFQUNBLFdBQUE7QUNHSjs7QUREQTtFQUNJLHNCQUFBO0VBQ0EsWUFBQTtFQUNBLGtCQUFBO0FDSUo7O0FEQUU7RUFBOEIseUJBQUE7QUNJaEM7O0FERkU7RUFDRSxpQkFBQTtFQUNBLG9CQUFBO0VBQ0EsZ0JBQUE7RUFDQSx5QkFBQTtFQUNBLFlBQUE7QUNLSjs7QURIRTtFQUNFLDBCQUFBO0VBQUEsdUJBQUE7RUFBQSxrQkFBQTtFQUNBLFlBQUE7RUFDQSxpQkFBQTtFQUNBLGdCQUFBO0VBQ0EsbUJBQUE7RUFDQSxlQUFBO0VBQ0EsWUFBQTtFQUNBLFNBQUE7QUNNSjs7QURKRTtFQUNFLFlBQUE7QUNPSjs7QURKRTtFQUNFLGVBQUE7QUNPSjs7QURMRTtFQUNFLGVBQUE7QUNRSjs7QURORTtFQUNFLGVBQUE7QUNTSjs7QURQRTtFQUNFLHVCQUFBO0FDVUo7O0FEUEU7RUFDRSxlQUFBO0FDVUoiLCJmaWxlIjoic3JjL2FwcC92aWV3cy9zaWFzLXYyL2V4Y2VsLWV4dGVybmFsLXN5cy9leGNlbC1leHRlcm5hbC1zeXMuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJ0YWJsZSB7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICB9XHJcbiAgXHJcbiAgdGh7XHJcbiAgICAvKiB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICAgKi9cclxuICBhbGlnbi1jb250ZW50OiBjZW50ZXI7XHJcbiAgfVxyXG4gIHRhYmxlIHRkIHtcclxuICAgIHBhZGRpbmctcmlnaHQ6IDUwcHg7XHJcbiAgfVxyXG4jY3VzdG9tZXJzIHtcclxuICAgIGZvbnQtZmFtaWx5OiBcIlRyZWJ1Y2hldCBNU1wiLCBBcmlhbCwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmO1xyXG4gICAgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gIH1cclxuI2N1c3RvbWVycyB0ZCwgI2N1c3RvbWVycyB0aCB7XHJcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjZGRkO1xyXG4gICAgcGFkZGluZzogOHB4O1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgXHJcbiAgfVxyXG4gIFxyXG4gICNjdXN0b21lcnMgdHI6bnRoLWNoaWxkKGV2ZW4pe2JhY2tncm91bmQtY29sb3I6ICNmMmYyZjI7fVxyXG4gIFxyXG4gICNjdXN0b21lcnMgdGgge1xyXG4gICAgcGFkZGluZy10b3A6IDEycHg7XHJcbiAgICBwYWRkaW5nLWJvdHRvbTogMTJweDtcclxuICAgIHRleHQtYWxpZ246IGxlZnQ7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOnJnYig5NywgMTc4LCAyMTYpO1xyXG4gICAgY29sb3I6IHdoaXRlO1xyXG4gIH1cclxuICAubWF0LXJhaXNlZC1idXR0b24ge1xyXG4gICAgd2lkdGg6IGZpdC1jb250ZW50O1xyXG4gICAgaGVpZ2h0OiAyMHB4O1xyXG4gICAgbGluZS1oZWlnaHQ6IDI3cHg7XHJcbiAgICBtaW4taGVpZ2h0OiAyN3B4O1xyXG4gICAgdmVydGljYWwtYWxpZ246IHRvcDtcclxuICAgIGZvbnQtc2l6ZTogMTFweDtcclxuICAgIHBhZGRpbmc6IDAgMDtcclxuICAgIG1hcmdpbjogMDtcclxuICB9XHJcbiAgbWF0LWNhcmQgIHtcclxuICAgIHdpZHRoOiAzNTBweDtcclxuICAgIC8vIGhlaWdodDogMzUwcHg7XHJcbiAgfVxyXG4gIG1hdC1jYXJkIG1hdC1mb3JtLWZpZWxkIHtcclxuICAgIGZvbnQtc2l6ZTogMTJweDtcclxuICB9XHJcbiAgbWF0LWNhcmQgYSB7XHJcbiAgICBmb250LXNpemU6IDExcHg7XHJcbiAgfVxyXG4gIG1hdC1jYXJkIHAge1xyXG4gICAgZm9udC1zaXplOiAxMXB4O1xyXG4gIH1cclxuICA6Om5nLWRlZXAgLm1hdC1mb3JtLWZpZWxkLWFwcGVhcmFuY2Utb3V0bGluZSAubWF0LWZvcm0tZmllbGQtb3V0bGluZSB7XHJcbiAgICBjb2xvcjogYmxhY2sgIWltcG9ydGFudDtcclxuICB9XHJcbiAgXHJcbiAgbWF0LWNhcmQgbWF0LWZvcm0tZmllbGQge1xyXG4gICAgZm9udC1zaXplOiAxMnB4O1xyXG4gIH0iLCJ0YWJsZSB7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG50aCB7XG4gIC8qIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICovXG4gIGFsaWduLWNvbnRlbnQ6IGNlbnRlcjtcbn1cblxudGFibGUgdGQge1xuICBwYWRkaW5nLXJpZ2h0OiA1MHB4O1xufVxuXG4jY3VzdG9tZXJzIHtcbiAgZm9udC1mYW1pbHk6IFwiVHJlYnVjaGV0IE1TXCIsIEFyaWFsLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7XG4gIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG4jY3VzdG9tZXJzIHRkLCAjY3VzdG9tZXJzIHRoIHtcbiAgYm9yZGVyOiAxcHggc29saWQgI2RkZDtcbiAgcGFkZGluZzogOHB4O1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG5cbiNjdXN0b21lcnMgdHI6bnRoLWNoaWxkKGV2ZW4pIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2YyZjJmMjtcbn1cblxuI2N1c3RvbWVycyB0aCB7XG4gIHBhZGRpbmctdG9wOiAxMnB4O1xuICBwYWRkaW5nLWJvdHRvbTogMTJweDtcbiAgdGV4dC1hbGlnbjogbGVmdDtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzYxYjJkODtcbiAgY29sb3I6IHdoaXRlO1xufVxuXG4ubWF0LXJhaXNlZC1idXR0b24ge1xuICB3aWR0aDogZml0LWNvbnRlbnQ7XG4gIGhlaWdodDogMjBweDtcbiAgbGluZS1oZWlnaHQ6IDI3cHg7XG4gIG1pbi1oZWlnaHQ6IDI3cHg7XG4gIHZlcnRpY2FsLWFsaWduOiB0b3A7XG4gIGZvbnQtc2l6ZTogMTFweDtcbiAgcGFkZGluZzogMCAwO1xuICBtYXJnaW46IDA7XG59XG5cbm1hdC1jYXJkIHtcbiAgd2lkdGg6IDM1MHB4O1xufVxuXG5tYXQtY2FyZCBtYXQtZm9ybS1maWVsZCB7XG4gIGZvbnQtc2l6ZTogMTJweDtcbn1cblxubWF0LWNhcmQgYSB7XG4gIGZvbnQtc2l6ZTogMTFweDtcbn1cblxubWF0LWNhcmQgcCB7XG4gIGZvbnQtc2l6ZTogMTFweDtcbn1cblxuOjpuZy1kZWVwIC5tYXQtZm9ybS1maWVsZC1hcHBlYXJhbmNlLW91dGxpbmUgLm1hdC1mb3JtLWZpZWxkLW91dGxpbmUge1xuICBjb2xvcjogYmxhY2sgIWltcG9ydGFudDtcbn1cblxubWF0LWNhcmQgbWF0LWZvcm0tZmllbGQge1xuICBmb250LXNpemU6IDEycHg7XG59Il19 */\"","import { Component, OnInit, ViewChild, ChangeDetectorRef, ViewChildren } from '@angular/core';\r\nimport { ExcelExtsys } from './excelExtSys';\r\n\r\nimport { MatSnackBar, MatButton } from '@angular/material';\r\nimport { Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { ExcelProcessingService } from 'src/app/shared/services/sias2-services/excel-processing.service';\r\nimport Swal from 'sweetalert2';\r\nimport * as CryptoJS from 'crypto-js';\r\n\r\n@Component({\r\n  selector: 'app-excel-external-sys',\r\n  templateUrl: './excel-external-sys.component.html',\r\n  styleUrls: ['./excel-external-sys.component.scss']\r\n})\r\nexport class ExcelExternalSysComponent implements OnInit {\r\n\r\n  excelExt: ExcelExtsys = new ExcelExtsys();\r\n  data: ExcelExtsys;\r\n  msg: string;\r\n  dataext: any;\r\n  authcall: any;\r\n  responseError: any;\r\n  currentUser: any;\r\n  space = false;\r\n  pace = false;\r\n\r\n  //added By Fayaz\r\n  allDeptNames: any[] = [];\r\n  result: any;\r\n\r\n  @ViewChildren(MatButton) saveBtn: MatButton;\r\n  disblesave: boolean;\r\n  constructor(private api: ExcelProcessingService,\r\n    private snack: MatSnackBar,\r\n\r\n    private router: Router,\r\n    private ref:ChangeDetectorRef,\r\n    private toast: ToastrService,\r\n    private cdr: ChangeDetectorRef) { }\r\n\r\n  ngOnInit() {\r\n    //console.log(localStorage.getItem(\"currentUser\"));\r\n    this.currentUser = localStorage.getItem(\"currentUser\");\r\n    this.getAllDeptNames();\r\n  }\r\n\r\n  // added By Fayaz\r\n  getAllDeptNames() {\r\n    this.api.getAllDept().subscribe(data => {\r\n      this.allDeptNames = data;\r\n      console.log(this.allDeptNames);\r\n    });\r\n  }\r\n\r\n  keyPress(event: any) {\r\n    console.log(event.target.value);\r\n   console.log(event);\r\n  \r\n    console.log(this.allDeptNames);\r\n    this.result = this.allDeptNames.filter(s => s.includes(event.target.value));\r\n    console.log(this.result);\r\n    this.allDeptNames=this.result;\r\n    this.ref.markForCheck();\r\n    if(event.target.value=='')\r\n    {\r\n    this.getAllDeptNames();\r\n    }  \r\n  }\r\n\r\n  \r\n\r\n  save() {\r\n   console.log(this.excelExt);\r\n    if (this.excelExt.extSysName) {\r\n     \r\n      this.excelExt.modifiedBy = this.currentUser;\r\n\r\n      //final data before sending\r\n      // var dataExt = CryptoJS.AES.encrypt(this.excelExt, \"@12#90!^*NPR*g&*()$34#$\");\r\n      // var uname=USERNAME.toString();\r\n      \r\n      this.api.createExt(this.excelExt)\r\n        .subscribe((data: any) => {\r\n          // this.dataext = data;\r\n          console.log(data);\r\n          // this.excelExt = data;\r\n          // console.log(this.excelExt)\r\n        \r\n          if (data != null) {\r\n         \r\n            Swal.fire(      \r\n              'Data Saved successfully ',\r\n            );\r\n            this.disblesave=true;\r\n            this.excelExt=data;\r\n            this.dataext=data;\r\n            // this.saveBtn.disabled = true;\r\n            this.cdr.markForCheck();\r\n            if (this.excelExt.authStatus === 'U') {\r\n              this.excelExt.authStatus = 'UNAUTHORIZED'\r\n            }\r\n            if (this.excelExt.authStatus === 'A') {\r\n              this.excelExt.authStatus = 'AUTHORIZED'\r\n            }\r\n            if (this.excelExt.recordStatus === 'O') {\r\n              this.excelExt.recordStatus = 'OPEN'\r\n            }\r\n            if (this.excelExt.recordStatus === 'C') {\r\n              this.excelExt.recordStatus = 'CLOSED'\r\n            }\r\n          //added by vidya for verified once issue id 583\r\n            if (this.excelExt.verifiedOnce === 'N') {\r\n              this.excelExt.verifiedOnce = 'NO'\r\n            }\r\n          } else {\r\n          \r\n            Swal.fire({\r\n          \r\n              \r\n              text: 'Choose different external system code/external system ',\r\n            });\r\n            // if (this.excelExt.authStatus === 'U') {\r\n            //   this.excelExt.authStatus = 'UNAUTHORIZED'\r\n            // }\r\n            // if (this.excelExt.authStatus === 'A') {\r\n            //   this.excelExt.authStatus = 'AUTHORIZED'\r\n            // }\r\n            // if (this.excelExt.recordStatus === 'O') {\r\n            //   this.excelExt.recordStatus = 'OPEN'\r\n            // }\r\n            // if (this.excelExt.recordStatus === 'C') {\r\n            //   this.excelExt.recordStatus = 'CLOSED'\r\n            // }\r\n          }\r\n        }, error => {\r\n          //console.log(error)\r\n          Swal.fire({\r\n            type: 'error',\r\n            \r\n            text: 'Server error  ',\r\n          });\r\n        });\r\n    } else {\r\n\r\n      Swal.fire({\r\n        type: 'error',\r\n       \r\n        text: 'Enter All Fields  ',\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n  onSubmit() {\r\n    this.save();\r\n  }\r\n\r\n  // onClickOfAuth()\r\n  // {\r\n  //   //console.log(\"on click of auth\");\r\n  //   this.excelExt.authorizedBy = this.currentUser.userId;\r\n  //   let  auth= this.excelExt.authorizedBy\r\n  //   //console.log(this.excelExt.authorizedBy);\r\n  //   this.api.authorizingTheRecord(this.excelExt) .subscribe((data: any) => {  \r\n  //   //console.log(data);\r\n\r\n  //   });\r\n  // }\r\n   fun(extSysName)\r\n  {\r\n    console.log(extSysName);\r\n    console.log(\"enters inside fn\")\r\n   const result=extSysName.trim();\r\n   console.log(result);\r\nif(result)\r\n{\r\n console.log(\"valid string\");\r\n \r\n this.space=true;\r\n \r\n console.log(this.space);\r\n}\r\nelse{\r\n console.log(\"invalid string\");\r\n this.space=false;\r\n \r\n   // this.submitted = false;\r\n   console.log(this.space);\r\n\r\n}\r\n}\r\ngun(extSysName)\r\n  {\r\n    console.log(extSysName);\r\n    console.log(\"enters inside fn\")\r\n   const result=extSysName.trim();\r\n   console.log(result);\r\nif(result)\r\n{\r\n console.log(\"valid string\");\r\n \r\n this.pace=true;\r\n \r\n console.log(this.pace);\r\n}\r\nelse{\r\n console.log(\"invalid string\");\r\n this.pace=false;\r\n \r\n   // this.submitted = false;\r\n   console.log(this.pace);\r\n\r\n}\r\n}\r\n}\r\n","import { Timestamp } from 'rxjs/internal/operators/timestamp';\r\nexport class ExcelExtsys {\r\n    id:number;\r\n    extSysCode:string;\r\n    extSysName:string;\r\n    department:string;\r\n    maxUploadLimit:number;\r\n    updatedBy:string;\r\n    authStatus:string;\r\n    modifiedBy:string;\r\n    authorizedBy:string;\r\n    version:number;\r\n    modifiedTime:Timestamp<Date>;\r\n    authorizedTime:Timestamp<Date>;\r\n    recordStatus:string;\r\n    //added by vidya for issude id 583\r\n    verifiedOnce:any;\r\n}","export default \".navigation {\\r\\n  /* width: 300px; */\\r\\n  height: 475px;\\r\\n \\r\\n\\r\\n}\\r\\n\\r\\ntable{\\r\\n    width: 100%;\\r\\n}\\r\\n\\r\\ntable {\\r\\n  border-collapse: initial;\\r\\n  width:100%;\\r\\n  text-align: center !important;\\r\\n}\\r\\n\\r\\n:host ::ng-deep .mat-sort-header-container { \\r\\n  display: flex;  \\r\\n  justify-content: center; \\r\\n}\\r\\n\\r\\nth.mat-header-cell, td.mat-cell { \\r\\n  text-align: center; \\r\\n}\\r\\n\\r\\n.mat-raised-button {\\r\\n  width: -webkit-fit-content;\\r\\n  width: -moz-fit-content;\\r\\n  width: fit-content;\\r\\n  height: 20px;\\r\\n  line-height: 27px;\\r\\n  min-height: 27px;\\r\\n  vertical-align: top;\\r\\n  font-size: 11px;\\r\\n  padding: 0 0;\\r\\n  margin: 0;\\r\\n}\\r\\n\\r\\n.mat-header-cell {\\r\\n  text-align: center;\\r\\n  height: 25px !important;\\r\\n\\r\\n}\\r\\n\\r\\n.mat-cell {\\r\\n  text-align: center;\\r\\n  height: 25px !important;\\r\\n\\r\\n}\\r\\n\\r\\ntr:nth-child(even) {\\r\\n  height: 25px !important;\\r\\n}\\r\\n\\r\\nth {\\r\\n  font-weight: small;\\r\\n  height: 25px !important;\\r\\n  text-align: center;\\r\\n}\\r\\n\\r\\ntr {\\r\\n  font-weight: small;\\r\\n  height: 25px !important;\\r\\n  text-align: center;\\r\\n}\\r\\n\\r\\nmat-paginator {\\r\\n  width: auto !important;\\r\\n  height: 40px !important;\\r\\n}\\r\\n\\r\\nmd-pagination-wrapper {\\r\\n  width: auto !important;\\r\\n  height: 40px !important;\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdmlld3Mvc2lhcy12Mi9leGNlbC1tYXBwaW5nL2V4Y2VsLW1hcHBpbmctc3VtbWFyeS9leGNlbC1tYXBwaW5nLXN1bW1hcnkuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGtCQUFrQjtFQUNsQixhQUFhOzs7QUFHZjs7QUFFQTtJQUNJLFdBQVc7QUFDZjs7QUFDQTtFQUNFLHdCQUF3QjtFQUN4QixVQUFVO0VBQ1YsNkJBQTZCO0FBQy9COztBQUNBO0VBQ0UsYUFBYTtFQUNiLHVCQUF1QjtBQUN6Qjs7QUFFQTtFQUNFLGtCQUFrQjtBQUNwQjs7QUFDQTtFQUNFLDBCQUFrQjtFQUFsQix1QkFBa0I7RUFBbEIsa0JBQWtCO0VBQ2xCLFlBQVk7RUFDWixpQkFBaUI7RUFDakIsZ0JBQWdCO0VBQ2hCLG1CQUFtQjtFQUNuQixlQUFlO0VBQ2YsWUFBWTtFQUNaLFNBQVM7QUFDWDs7QUFDQTtFQUNFLGtCQUFrQjtFQUNsQix1QkFBdUI7O0FBRXpCOztBQUVBO0VBQ0Usa0JBQWtCO0VBQ2xCLHVCQUF1Qjs7QUFFekI7O0FBR0E7RUFDRSx1QkFBdUI7QUFDekI7O0FBRUE7RUFDRSxrQkFBa0I7RUFDbEIsdUJBQXVCO0VBQ3ZCLGtCQUFrQjtBQUNwQjs7QUFDQTtFQUNFLGtCQUFrQjtFQUNsQix1QkFBdUI7RUFDdkIsa0JBQWtCO0FBQ3BCOztBQUNBO0VBQ0Usc0JBQXNCO0VBQ3RCLHVCQUF1QjtBQUN6Qjs7QUFFQTtFQUNFLHNCQUFzQjtFQUN0Qix1QkFBdUI7QUFDekIiLCJmaWxlIjoic3JjL2FwcC92aWV3cy9zaWFzLXYyL2V4Y2VsLW1hcHBpbmcvZXhjZWwtbWFwcGluZy1zdW1tYXJ5L2V4Y2VsLW1hcHBpbmctc3VtbWFyeS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm5hdmlnYXRpb24ge1xyXG4gIC8qIHdpZHRoOiAzMDBweDsgKi9cclxuICBoZWlnaHQ6IDQ3NXB4O1xyXG4gXHJcblxyXG59XHJcblxyXG50YWJsZXtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG59ICBcclxudGFibGUge1xyXG4gIGJvcmRlci1jb2xsYXBzZTogaW5pdGlhbDtcclxuICB3aWR0aDoxMDAlO1xyXG4gIHRleHQtYWxpZ246IGNlbnRlciAhaW1wb3J0YW50O1xyXG59XHJcbjpob3N0IDo6bmctZGVlcCAubWF0LXNvcnQtaGVhZGVyLWNvbnRhaW5lciB7IFxyXG4gIGRpc3BsYXk6IGZsZXg7ICBcclxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsgXHJcbn1cclxuXHJcbnRoLm1hdC1oZWFkZXItY2VsbCwgdGQubWF0LWNlbGwgeyBcclxuICB0ZXh0LWFsaWduOiBjZW50ZXI7IFxyXG59XHJcbi5tYXQtcmFpc2VkLWJ1dHRvbiB7XHJcbiAgd2lkdGg6IGZpdC1jb250ZW50O1xyXG4gIGhlaWdodDogMjBweDtcclxuICBsaW5lLWhlaWdodDogMjdweDtcclxuICBtaW4taGVpZ2h0OiAyN3B4O1xyXG4gIHZlcnRpY2FsLWFsaWduOiB0b3A7XHJcbiAgZm9udC1zaXplOiAxMXB4O1xyXG4gIHBhZGRpbmc6IDAgMDtcclxuICBtYXJnaW46IDA7XHJcbn1cclxuLm1hdC1oZWFkZXItY2VsbCB7XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gIGhlaWdodDogMjVweCAhaW1wb3J0YW50O1xyXG5cclxufVxyXG5cclxuLm1hdC1jZWxsIHtcclxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgaGVpZ2h0OiAyNXB4ICFpbXBvcnRhbnQ7XHJcblxyXG59XHJcblxyXG5cclxudHI6bnRoLWNoaWxkKGV2ZW4pIHtcclxuICBoZWlnaHQ6IDI1cHggIWltcG9ydGFudDtcclxufVxyXG5cclxudGgge1xyXG4gIGZvbnQtd2VpZ2h0OiBzbWFsbDtcclxuICBoZWlnaHQ6IDI1cHggIWltcG9ydGFudDtcclxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbn1cclxudHIge1xyXG4gIGZvbnQtd2VpZ2h0OiBzbWFsbDtcclxuICBoZWlnaHQ6IDI1cHggIWltcG9ydGFudDtcclxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbn1cclxubWF0LXBhZ2luYXRvciB7XHJcbiAgd2lkdGg6IGF1dG8gIWltcG9ydGFudDtcclxuICBoZWlnaHQ6IDQwcHggIWltcG9ydGFudDtcclxufVxyXG5cclxubWQtcGFnaW5hdGlvbi13cmFwcGVyIHtcclxuICB3aWR0aDogYXV0byAhaW1wb3J0YW50O1xyXG4gIGhlaWdodDogNDBweCAhaW1wb3J0YW50O1xyXG59XHJcblxyXG5cclxuXHJcblxyXG5cclxuIl19 */\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { ExcelProcessingService } from 'src/app/shared/services/sias2-services/excel-processing.service';\r\nimport { MatPaginator, MatTableDataSource, MatSort } from '@angular/material';\r\nimport { permissionsLabels } from 'src/app/views/roles1/models/fmosNewRolePermissions';\r\nimport { RoleService } from 'src/app/views/roles1/roles.service';\r\nimport { NavigationExtras, Router } from '@angular/router';\r\n\r\n\r\n\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-excel-mapping-summary',\r\n  templateUrl: './excel-mapping-summary.component.html',\r\n  styleUrls: ['./excel-mapping-summary.component.css']\r\n})\r\nexport class ExcelMappingSummaryComponent implements OnInit {\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n  data: any;\r\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n  dataSource: any;\r\n  roleCodes = new permissionsLabels();\r\n  displayedColumns: string[] = [\r\n    \"extSysCode\",\r\n    \"extSys\",\r\n\r\n    'inputBy',\r\n    'authStatus',\r\n    'inputDtStamp',\r\n   \r\n  ];\r\n  constructor(private excelUpload: ExcelProcessingService,\r\n    private router: Router, private roleService: RoleService) {\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    setTimeout(() => {\r\n      this.newRolePermissions();\r\n    }, 2000);\r\n    this.roleService.screenLabelList.subscribe(message => this.roleCodes = message);\r\n    this.getDataForSummary();\r\n  }\r\n  newRolePermissions() {\r\n    this.roleService.fetchScreenPermissions('Excel Mapping');\r\n  }\r\n  getDataForSummary() {\r\n    this.excelUpload.getMappingSummary().subscribe(data => {\r\n      this.data = data;\r\n      console.log(this.data);\r\n      this.dataSource = new MatTableDataSource<any>(this.data);\r\n      this.dataSource.sort = this.sort;\r\n      this.dataSource.paginator = this.paginator;\r\n    })\r\n\r\n  }\r\n  getDataFromSummaryToUpdateExcelMapping(row) {\r\n    console.log(\"this is row\", row)\r\n\r\n\r\n\r\n\r\n    const navigationExtras: NavigationExtras = {\r\n      queryParams: {\r\n        extSysCode: row.extSysCode,\r\n        processName: row.processName,\r\n        extSysName: row.extSys\r\n      }\r\n\r\n    };\r\n\r\n    this.router.navigate(['sias-v2/updateExcelMappingComponent'], navigationExtras);\r\n  }\r\n}\r\n","export default \"\\r\\n\\r\\ntable {\\r\\n  width: 50%;\\r\\n  padding: 0%;\\r\\n  margin: 0%;\\r\\n}\\r\\nth{\\r\\n  padding: 0%;\\r\\n  margin: 0%;\\r\\n}\\r\\ntd>mat-form-field{\\r\\n  width: 100px;\\r\\n  padding: 0%;\\r\\n  margin: 0%;\\r\\n}\\r\\n.forms-table > thead tr th {\\r\\n  font-weight: 700;\\r\\n  /* padding: .9rem 1.2rem; */\\r\\n  border-bottom: 1px solid rgba(0, 0, 0, 0.12);\\r\\n}\\r\\nth{\\r\\n  /* text-align: center;\\r\\n   */\\r\\nalign-content: center;\\r\\n}\\r\\ntable td {\\r\\n  padding: 0%;\\r\\n  margin: 0%;\\r\\n  /* padding-right: 1px; */\\r\\n}\\r\\n#customers {\\r\\n  font-family: \\\"Trebuchet MS\\\", Arial, Helvetica, sans-serif;\\r\\n  border-collapse: collapse;\\r\\n  width: 100%;\\r\\n}\\r\\n#customers td, #customers th {\\r\\n  border: 1px solid #ddd;\\r\\n  padding: 8px;\\r\\n  text-align: center;\\r\\n}\\r\\n#customers tr:nth-child(even){background-color: #f2f2f2;}\\r\\n#customers th {\\r\\n  padding-top: 12px;\\r\\n  padding-bottom: 12px;\\r\\n  text-align: left;\\r\\n  background-color:rgb(97, 178, 216);\\r\\n  color: white;\\r\\n}\\r\\n/* \\r\\n.mat-raised-button {\\r\\n  width: fit-content;\\r\\n  height: 20px;\\r\\n  line-height: 27px;\\r\\n  min-height: 27px;\\r\\n \\r\\n align-content: center;\\r\\n  font-size: 15px;\\r\\n  padding: 0 0;\\r\\n  margin: 0;\\r\\n} */\\r\\nmat-chip{\\r\\n  font-size: 15px;\\r\\n}\\r\\nth{\\r\\n  font-size: 15px;\\r\\n}\\r\\n/* mat-card  {\\r\\n  width: 350px;\\r\\n /* height: 350px; */\\r\\n/* }\\r\\nmat-card mat-form-field {\\r\\n  font-size: 10px;\\r\\n}\\r\\nmat-card a {\\r\\n  font-size: 11px;\\r\\n}\\r\\nmat-card p {\\r\\n  font-size: 11px;\\r\\n} */\\r\\nmat-card mat-form-field {\\r\\n  font-size: 13px;\\r\\n}\\r\\nth{\\r\\n  font-size: 15px;\\r\\n\\r\\n}\\r\\nmat-checkbox{\\r\\n  font-size: 10px;\\r\\n\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdmlld3Mvc2lhcy12Mi9leGNlbC1tYXBwaW5nL2V4Y2VsLW1hcHBpbmcuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUVBO0VBQ0UsVUFBVTtFQUNWLFdBQVc7RUFDWCxVQUFVO0FBQ1o7QUFDQTtFQUNFLFdBQVc7RUFDWCxVQUFVO0FBQ1o7QUFFQTtFQUNFLFlBQVk7RUFDWixXQUFXO0VBQ1gsVUFBVTtBQUNaO0FBRUE7RUFDRSxnQkFBZ0I7RUFDaEIsMkJBQTJCO0VBQzNCLDRDQUE0QztBQUM5QztBQUdBO0VBQ0U7SUFDRTtBQUNKLHFCQUFxQjtBQUNyQjtBQUNBO0VBQ0UsV0FBVztFQUNYLFVBQVU7RUFDVix3QkFBd0I7QUFDMUI7QUFDQTtFQUNFLHlEQUF5RDtFQUN6RCx5QkFBeUI7RUFDekIsV0FBVztBQUNiO0FBQ0E7RUFDRSxzQkFBc0I7RUFDdEIsWUFBWTtFQUNaLGtCQUFrQjtBQUNwQjtBQUVBLDhCQUE4Qix5QkFBeUIsQ0FBQztBQUV4RDtFQUNFLGlCQUFpQjtFQUNqQixvQkFBb0I7RUFDcEIsZ0JBQWdCO0VBQ2hCLGtDQUFrQztFQUNsQyxZQUFZO0FBQ2Q7QUFFQTs7Ozs7Ozs7Ozs7R0FXRztBQUNIO0VBQ0UsZUFBZTtBQUNqQjtBQUNBO0VBQ0UsZUFBZTtBQUNqQjtBQUNBOztvQkFFb0I7QUFDcEI7Ozs7Ozs7OztHQVNHO0FBQ0g7RUFDRSxlQUFlO0FBQ2pCO0FBRUE7RUFDRSxlQUFlOztBQUVqQjtBQUNBO0VBQ0UsZUFBZTs7QUFFakIiLCJmaWxlIjoic3JjL2FwcC92aWV3cy9zaWFzLXYyL2V4Y2VsLW1hcHBpbmcvZXhjZWwtbWFwcGluZy5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiXHJcblxyXG50YWJsZSB7XHJcbiAgd2lkdGg6IDUwJTtcclxuICBwYWRkaW5nOiAwJTtcclxuICBtYXJnaW46IDAlO1xyXG59XHJcbnRoe1xyXG4gIHBhZGRpbmc6IDAlO1xyXG4gIG1hcmdpbjogMCU7XHJcbn1cclxuXHJcbnRkPm1hdC1mb3JtLWZpZWxke1xyXG4gIHdpZHRoOiAxMDBweDtcclxuICBwYWRkaW5nOiAwJTtcclxuICBtYXJnaW46IDAlO1xyXG59XHJcblxyXG4uZm9ybXMtdGFibGUgPiB0aGVhZCB0ciB0aCB7XHJcbiAgZm9udC13ZWlnaHQ6IDcwMDtcclxuICAvKiBwYWRkaW5nOiAuOXJlbSAxLjJyZW07ICovXHJcbiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkIHJnYmEoMCwgMCwgMCwgMC4xMik7XHJcbn1cclxuXHJcblxyXG50aHtcclxuICAvKiB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICovXHJcbmFsaWduLWNvbnRlbnQ6IGNlbnRlcjtcclxufVxyXG50YWJsZSB0ZCB7XHJcbiAgcGFkZGluZzogMCU7XHJcbiAgbWFyZ2luOiAwJTtcclxuICAvKiBwYWRkaW5nLXJpZ2h0OiAxcHg7ICovXHJcbn1cclxuI2N1c3RvbWVycyB7XHJcbiAgZm9udC1mYW1pbHk6IFwiVHJlYnVjaGV0IE1TXCIsIEFyaWFsLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7XHJcbiAgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTtcclxuICB3aWR0aDogMTAwJTtcclxufVxyXG4jY3VzdG9tZXJzIHRkLCAjY3VzdG9tZXJzIHRoIHtcclxuICBib3JkZXI6IDFweCBzb2xpZCAjZGRkO1xyXG4gIHBhZGRpbmc6IDhweDtcclxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbn1cclxuXHJcbiNjdXN0b21lcnMgdHI6bnRoLWNoaWxkKGV2ZW4pe2JhY2tncm91bmQtY29sb3I6ICNmMmYyZjI7fVxyXG5cclxuI2N1c3RvbWVycyB0aCB7XHJcbiAgcGFkZGluZy10b3A6IDEycHg7XHJcbiAgcGFkZGluZy1ib3R0b206IDEycHg7XHJcbiAgdGV4dC1hbGlnbjogbGVmdDtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOnJnYig5NywgMTc4LCAyMTYpO1xyXG4gIGNvbG9yOiB3aGl0ZTtcclxufVxyXG5cclxuLyogXHJcbi5tYXQtcmFpc2VkLWJ1dHRvbiB7XHJcbiAgd2lkdGg6IGZpdC1jb250ZW50O1xyXG4gIGhlaWdodDogMjBweDtcclxuICBsaW5lLWhlaWdodDogMjdweDtcclxuICBtaW4taGVpZ2h0OiAyN3B4O1xyXG4gXHJcbiBhbGlnbi1jb250ZW50OiBjZW50ZXI7XHJcbiAgZm9udC1zaXplOiAxNXB4O1xyXG4gIHBhZGRpbmc6IDAgMDtcclxuICBtYXJnaW46IDA7XHJcbn0gKi9cclxubWF0LWNoaXB7XHJcbiAgZm9udC1zaXplOiAxNXB4O1xyXG59XHJcbnRoe1xyXG4gIGZvbnQtc2l6ZTogMTVweDtcclxufVxyXG4vKiBtYXQtY2FyZCAge1xyXG4gIHdpZHRoOiAzNTBweDtcclxuIC8qIGhlaWdodDogMzUwcHg7ICovIFxyXG4vKiB9XHJcbm1hdC1jYXJkIG1hdC1mb3JtLWZpZWxkIHtcclxuICBmb250LXNpemU6IDEwcHg7XHJcbn1cclxubWF0LWNhcmQgYSB7XHJcbiAgZm9udC1zaXplOiAxMXB4O1xyXG59XHJcbm1hdC1jYXJkIHAge1xyXG4gIGZvbnQtc2l6ZTogMTFweDtcclxufSAqLyBcclxubWF0LWNhcmQgbWF0LWZvcm0tZmllbGQge1xyXG4gIGZvbnQtc2l6ZTogMTNweDtcclxufVxyXG5cclxudGh7XHJcbiAgZm9udC1zaXplOiAxNXB4O1xyXG5cclxufVxyXG5tYXQtY2hlY2tib3h7XHJcbiAgZm9udC1zaXplOiAxMHB4O1xyXG5cclxufVxyXG4iXX0= */\"","import { Component, OnInit, ViewChild, ElementRef, ChangeDetectorRef, ViewChildren } from '@angular/core';\r\nimport { FormControl, FormGroup, FormArray, FormBuilder, Validators, NgForm } from '@angular/forms';\r\nimport { ExcelMappingClass, ExcelMappingClass3, ExcelMappingClass2 } from './excelMapping';\r\nimport { ExternalSystem } from './externalSystem';\r\nimport { MatTableDataSource, MatSnackBar, MatButton } from '@angular/material';\r\nimport { IfStmt } from '@angular/compiler';\r\n\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { ExcelProcessingService } from 'src/app/shared/services/sias2-services/excel-processing.service';\r\nimport { ExcelApiService } from 'src/app/shared/services/sias2-services/ExcelApiService';\r\nimport Swal from 'sweetalert2';\r\n\r\ninterface sample {\r\n  excelMap: ExcelMappingClass[];\r\n  processData: ExternalSystem[];\r\n}\r\nexport interface DTYPES {\r\n  id: number;\r\n  type: string;\r\n  isActive: boolean;\r\n}\r\n@Component({\r\n  selector: 'app-excel-mapping',\r\n  templateUrl: './excel-mapping.component.html',\r\n  styleUrls: ['./excel-mapping.component.css']\r\n})\r\nexport class ExcelMappingComponent implements OnInit {\r\n\r\n  extCode: any;\r\n  proCode: any;\r\n  starting: number;\r\n  sheetNumber: any;\r\n  currency: any;\r\n  @ViewChildren('extForm') extenForm: NgForm;\r\n\r\n  tempStore: Object;\r\n  public fieldArray: Array<ExcelMappingClass2> = [];\r\n\r\n  isChecked: boolean;\r\n  public newAttribute: any = {};\r\n  object3 = new ExcelMappingClass3();\r\n  isHeaderVal: boolean;\r\n  Form: FormGroup;\r\n  headerRepeated: boolean;\r\n  datebox: boolean;\r\n  datebox1: boolean;\r\n  extdata: ExternalSystem;\r\n\r\n\r\n\r\n  @ViewChildren('isHeaderPresent') isHeaderCustom: ElementRef;\r\n  @ViewChildren('extSys1') extRef: ElementRef;\r\n  @ViewChildren('dateValue') dateRef: ElementRef;\r\n  errorMsg: any;\r\n  // isHeaderPresent:boolean;\r\n  displayedColumns: string[] = ['columnnDescription', 'dataType', 'mandatory', 'headerName', 'dateFormat', 'mappingColumn'];\r\n  toppings = new FormControl();\r\n\r\n  dataTypes: DTYPES[] = [\r\n    { id: 3, type: 'Clob', isActive: false },\r\n    { id: 1, type: 'Date', isActive: true },\r\n    { id: 2, type: 'Number', isActive: false },\r\n    { id: 4, type: 'VarChar', isActive: false }\r\n  ];\r\n\r\n  shouldShow: boolean;\r\n  position: number;\r\n  submitted: boolean = false;\r\n\r\n  public excelMap1: Array<ExcelMappingClass> = [];\r\n  excelMap: ExcelMappingClass[];\r\n  newColumn: ExcelMappingClass[];\r\n  columnname1: ExcelMappingClass;\r\n  dataSource: any;\r\n  dataFromresponse: any;\r\n  message: boolean;\r\n  form: FormGroup;\r\n  extSysData: ExternalSystem[];\r\n  extSysData1: string[];\r\n  processData: ExternalSystem;\r\n  processData1: ExternalSystem = new ExternalSystem;\r\n  processData2: ExternalSystem;\r\n  pooja: any;\r\n  column1: boolean;\r\n  excelMaint: ExcelMappingClass = new ExcelMappingClass();\r\n  addForm: FormGroup;\r\n\r\n  rows: FormArray;\r\n  processdata1: any;\r\n  processName: string;\r\n  poojaprocessdata: any[];\r\n\r\n  poojaext2: any;\r\n  poojaprocess2: any = null;\r\n  isDate: any;\r\n  notdate: any;\r\n  extSysCode: any = null;\r\n  extNameValue: any;\r\n  is_edit: boolean;\r\n\r\n  // @ViewChild(MatPaginator) paginator: MatPaginator;\r\n\r\n  // @ViewChild(MatSort) sort: MatSort;\r\n\r\n  @ViewChildren(MatButton) saveBtn: MatButton;\r\n  currentUser: any;\r\n  constructor(private excelUpload: ExcelProcessingService,\r\n    private api: ExcelApiService,\r\n    private fb: FormBuilder,\r\n    private cdr: ChangeDetectorRef,\r\n    private snack: MatSnackBar,\r\n\r\n    private toast: ToastrService) { }\r\n\r\n  ngOnInit() {\r\n\r\n    this.addForm = this.fb.group({\r\n      subArray: this.fb.array([])\r\n    });\r\n\r\n    this.notdate = true;\r\n    this.getAllColumn();\r\n    this.getAllExtsysNameAndProcessCodeOnAuthStatus();\r\n    this.isChecked = false;\r\n    this.datebox = false;\r\n    this.datebox1 = true;\r\n    this.message = false;\r\n\r\n    // this.addForm.get(\"items_value\").setValue(\"yes\");\r\n    // this.addForm.addControl('rows', this.rows);\r\n\r\n    localStorage.setItem(\"userIdForChangePassword\", localStorage.getItem(\"currentUser\"));\r\n    this.currentUser = localStorage.getItem(\"currentUser\");\r\n    //console.log(\"this.currentUser\", this.currentUser);\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n  checkValue(val) {\r\n    //console.log(\"For checkbox\", val.checked, this.isChecked);\r\n\r\n  }\r\n  // this.getExtSysNameByExtSysCode(this.extSysCode);\r\n  finalSubmit(model, isChecked, starting, sheetNumber) {\r\n\r\n    this.submitted = true;\r\n\r\n    //console.log(\"extSysCode\", this.extSysCode);\r\n    //console.log(\"poojaprocess2\", this.poojaprocess2);\r\n    //console.log(\"starting\", this.starting);\r\n    //console.log(\"currency\",this.currency)\r\n\r\n\r\n    if (this.addForm.controls.subArray.invalid) {\r\n      // this.toast.error('Error,Numeric values not allowed in mapping column', ``, {\r\n      //   timeOut: 3000,\r\n      //   progressBar: true,\r\n      //   tapToDismiss: true,\r\n      //   closeButton: true,\r\n      //   easeTime: 300,\r\n      //   extendedTimeOut: 1000\r\n      // });\r\n      Swal.fire({\r\n        type: 'error',\r\n\r\n        text: 'Error,Numeric values not allowed in mapping column',\r\n      });\r\n      return;\r\n    }\r\n\r\n    //console.log(\"startingRow : \" + starting);\r\n    //console.log(\"extSysCode : \" + this.extSysCode);\r\n    //console.log(\"processcode : \" + this.poojaprocess2);\r\n    //console.log(\"Model : \", model);\r\n\r\n\r\n    //console.log(\"extNameValue : \" + this.extNameValue);\r\n    //console.log(\"Is header present : \", isChecked);\r\n    // let body = JSON.stringify(model);\r\n    this.object3.excelMapping = model;\r\n\r\n    model.subArray[0].modifiedBy = this.currentUser;\r\n    //console.log('modifiedBy 1 : ', model.subArray[0].modifiedBy);\r\n    //console.log(this.object3);\r\n    // this.excelExt.modifiedBy = this.currentUser;\r\n    this.excelUpload.columnData(model, this.extNameValue, this.poojaprocess2, isChecked, starting, this.extSysCode, this.currency, this.currentUser, sheetNumber)\r\n      .subscribe(response => {\r\n        this.dataFromresponse = response;\r\n        //console.log(this.dataFromresponse);\r\n        // //console.log(this.dataFromresponse.authStatus);\r\n        if (this.dataFromresponse) {\r\n          // this.toast.success(`Mapped successfully`, '', {\r\n          //   timeOut: 3000,\r\n          //   progressBar: true,\r\n          //   tapToDismiss: true,\r\n          //   closeButton: true,\r\n          //   easeTime: 300,\r\n          //   extendedTimeOut: 1000\r\n          // });\r\n          Swal.fire(\r\n\r\n            'Mapped successfully ',\r\n           \r\n          );\r\n          this.is_edit=true;\r\n          //console.log(response[0].authStatus);\r\n          //console.log(response[0].modifiedBy);\r\n          if (response[0].authStatus === 'U') {\r\n            response[0].authStatus = 'UNAUTHORIZED';\r\n          }\r\n          if (response[0].authStatus === 'A') {\r\n            response[0].authStatus = 'AUTHORIZED';\r\n          }\r\n          if (response[0].recordStatus === 'O') {\r\n            response[0].recordStatus = 'OPEN';\r\n          }\r\n          if (response[0].recordStatus === 'C') {\r\n            response[0].recordStatus = 'CLOSE';\r\n          }\r\n          this.tempStore = response[0];\r\n\r\n         // this.addForm.reset();\r\n        } else {\r\n\r\n          // this.toast.error(`Failed! ExternalSystem And ProcessCode Already Mapped`, '', {\r\n          //   timeOut: 3000,\r\n          //   progressBar: true,\r\n          //   tapToDismiss: true,\r\n          //   closeButton: true,\r\n          //   easeTime: 300,\r\n          //   extendedTimeOut: 1000\r\n          // });\r\n\r\n          Swal.fire({\r\n            type: 'error',\r\n\r\n            text: 'Failed ExternalSystem And ProcessCode Already Mapped',\r\n          });\r\n        }\r\n      }, err => {\r\n\r\n        // this.toast.error(`Failed! Server Error`, '', {\r\n        //   timeOut: 3000,\r\n        //   progressBar: true,\r\n        //   tapToDismiss: true,\r\n        //   closeButton: true,\r\n        //   easeTime: 300,\r\n        //   extendedTimeOut: 1000\r\n        // });\r\n        Swal.fire({\r\n          type: 'error',\r\n\r\n          text: 'Failed Server Error',\r\n        });\r\n      });\r\n\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n  // -------------------------------------------------------------\r\n  // NOTE : To get process code by external system name \r\n  // -------------------------------------------------------------\r\n  // getProcess(extSysName) {\r\n  //   //console.log(extSysName);\r\n  //   this.api.getProcessNameWithExtSys(extSysName).subscribe(response => {\r\n  //     this.pooja = response;\r\n\r\n  //     this.processName = this.pooja;\r\n  //     //console.log(this.processName);\r\n  //     // this.processName.split(',');\r\n  //     // this.poojaprocessdata=\r\n  //     // //console.log(this.poojaprocessdata);\r\n  //     //console.log('process method end');\r\n  //   });\r\n  // }\r\n\r\n\r\n  // --------by pooja--------\r\n  // -------------------------------------------------------------\r\n  // NOTE : To get process code by external system code \r\n  // -------------------------------------------------------------\r\n  // Changes on 5th sept\r\n  getProcess(extSysCode) {\r\n    //console.log(extSysCode);\r\n    this.api.getProcessNameByExtSysCode(extSysCode).subscribe(response => {\r\n      this.pooja = response;\r\n\r\n      this.processName = this.pooja;\r\n      //console.log(this.processName);\r\n      this.getExtSysNameByExtSysCode(extSysCode);\r\n      //console.log('process method end');\r\n    });\r\n  }\r\n\r\n  getProcessName1(processCode, extSysCode) {\r\n    //console.log(processCode);\r\n    //console.log(extSysCode);\r\n    this.extSysCode = extSysCode;\r\n    this.poojaprocess2 = processCode;\r\n\r\n  }\r\n\r\n  getAllExtsysNameAndProcessCodeOnAuthStatus() {\r\n    //console.log(\"getting extsysname on authstatus\")\r\n    this.api.getAllExtsysNameAndProcessCodeOnAuthStatus()\r\n      .subscribe(response => {\r\n        this.extSysData1 = response;\r\n        //console.log(this.extSysData1);\r\n        //   this.dataSource.paginator = this.paginator;\r\n        // this.dataSource.sort = this.sort;\r\n      });\r\n  }\r\n\r\n  // onKey(event: any) { // without type info\r\n  //   //this.values += event.target.value + ' | ';\r\n  //  //console.log(event.target.value);\r\n  //  if(event.target.value== '0' || 1 || 2 || 3 || 4 || 5 ||6 || 7 || 8 || 9){\r\n  //    alert(\"give proper value\");\r\n  //  }else{\r\n  //    alert(\"puuuuuuuuuuuuuuuuuuuuuuuuuuuu\");\r\n  //  }\r\n  // }\r\n  // -------------------------------------------------------------\r\n  // NOTE : To get external system name by ext sys code\r\n  // -------------------------------------------------------------\r\n  // --------by pooja--------\r\n  // ----start---------\r\n  getExtSysNameByExtSysCode(extSysCode) {\r\n    //console.log(extSysCode);\r\n    this.api.getExtSysNameByExtSysCode(extSysCode)\r\n      .subscribe(data => {\r\n        this.extNameValue = data;\r\n        //this.poojaext2=\r\n        //console.log(this.extNameValue);\r\n        // //console.log(this.extSysCode);\r\n      });\r\n  }\r\n\r\n  // ----end------\r\n\r\n\r\n  getAllExternalSystem() {\r\n    //console.log('mathos call');\r\n    this.api.getAllExtCode().subscribe(response => {\r\n      this.extSysData1 = response;\r\n      //console.log(this.extSysData1);\r\n      //   this.dataSource.paginator = this.paginator;\r\n      // this.dataSource.sort = this.sort;\r\n    });\r\n    // //console.log( this.extSysData);\r\n  }\r\n  getProcessName(extSys1) {\r\n    //console.log(extSys1);\r\n    //console.log(this.extSysData);\r\n    this.api.getProcessNameWithExtSys(extSys1).subscribe(response => {\r\n      this.processData = response;\r\n      //console.log(this.processData);\r\n\r\n    });\r\n\r\n  }\r\n\r\n\r\n\r\n  getAllColumn() {\r\n    //console.log(\"method call\");\r\n    this.excelUpload.getAllExcelColumn().subscribe(response => {\r\n      this.excelMap = response;\r\n      //  this.excelMap=this.columnname1.columnname;\r\n      this.patchData(this.excelMap);\r\n      // //console.log(this.excelMap);\r\n      // //console.log(this.excelMap[0]);\r\n      this.dataSource = new MatTableDataSource<ExcelMappingClass>(this.excelMap);\r\n      this.cdr.markForCheck();\r\n    });\r\n  }\r\n\r\n  patchData(formdata) {\r\n\r\n    //console.log(\"formdata\");\r\n    const control = <FormArray>this.addForm.controls['subArray'];\r\n    for (let i = 0; i < formdata.length; i++) {\r\n      //console.log(\"lenght\", formdata.length);\r\n      control.push(this.getSubArray());\r\n    }\r\n    this.addForm.patchValue({ subArray: formdata });\r\n  }\r\n\r\n\r\n\r\n\r\n  getDataType(datevalue, index, row) {\r\n    //console.log(row);\r\n    //console.log(\"method call\");\r\n    // alert(\"value is\"+datevalue);\r\n    if (datevalue == \"Date\") {\r\n      this.isDate = true;\r\n    } else {\r\n      this.notdate = true;\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n  // Dynamic Form Section\r\n  // ------------by sakthi sept 10th-----------\r\n  //-------------start------------------\r\n  /**\r\n   * Create form subArray \r\n   */\r\n\r\n\r\n  getSubArray(): FormGroup {             //^[a-zA-Z \\-#,@\\']+\r\n    return this.fb.group({\r\n      columnnName: ['', [Validators.required]],\r\n      dataType: [null, [Validators.required]],\r\n      mappingColumn: ['', [Validators.minLength(1), Validators.maxLength(3), Validators.pattern('^[a-zA-Z \\-#,@,%\\']+')]],\r\n      mandatory: false,\r\n      headerName: [''],\r\n      dateFormat: [{ value: '', disabled: true }],\r\n      authStatus: [''],\r\n      modifiedBy: [this.currentUser.userId],\r\n      authorizedBy: [''],\r\n      version: [''],\r\n      modifiedTime: [''],\r\n      authorizedTime: [''],\r\n      recordStatus: [''],\r\n      delimeter: [''],\r\n      defaultValue: [''],\r\n      repeatedTillNextValue: ['']\r\n\r\n    });\r\n  }\r\n\r\n\r\n  /**\r\n   * Add new subArray row into form\r\n   */\r\n\r\n  addSubArray() {\r\n    const control = <FormArray>this.addForm.controls['subArray'];\r\n    control.push(this.getSubArray());\r\n  }\r\n\r\n  /**\r\n   * Remove subArray row from form on click delete button\r\n   */\r\n\r\n  removeSubArray(i: number) {\r\n    const control = <FormArray>this.addForm.controls['subArray'];\r\n\r\n    control.removeAt(i);\r\n  }\r\n\r\n\r\n  /**\r\n * This is one of the way how clear subArray fields.\r\n */\r\n\r\n  clearAllSubArray() {\r\n    const control = <FormArray>this.addForm.controls['subArray'];\r\n    while (control.length) {\r\n      control.removeAt(control.length - 1);\r\n    }\r\n    control.clearValidators();\r\n  }\r\n\r\n\r\n  /**\r\n   * \r\n   * TODO For forms validation\r\n   */\r\n\r\n  // subArraysGroup(index): FormGroup {\r\n  //   this.subArrayList = this.addForm.get('subArray') as FormArray;\r\n  //   const formGroup =  this.subArrayList.controls[index] as FormGroup;\r\n  //   return formGroup;\r\n  // }\r\n\r\n\r\n  // get subArrayFormGroup() {\r\n  //   return this.addForm.get('subArray') as FormArray;\r\n  // }\r\n\r\n  get f() { return this.addForm.controls; }\r\n  get t() { return this.f.subArray as FormArray; }\r\n\r\n\r\n\r\n  /**\r\n   * \r\n   */\r\n\r\n  checkTypeStatus(i) {\r\n    //console.log(i);\r\n    const control = <FormArray>this.addForm.controls['subArray'];\r\n    let fg = control.get([i]);\r\n\r\n    if (fg.value.dataType == 'Date') {\r\n      this.is_edit = false;\r\n      fg.get('dateFormat').enable();\r\n    } else {\r\n      fg.get('dateFormat').disable();\r\n    }\r\n\r\n  }\r\n}\r\n","export class ExcelMappingClass {\r\n    extSys: string;\r\n    processName: string;\r\n    headerName: string;\r\n    dateFormat: string;\r\n    //headerName:string;\r\n    mappingColumn: string;\r\n    id: number;\r\n    columnnDescription: string;\r\n    columnnName: string;\r\n    dataType: string;\r\n    extSysName: string;\r\n    mandatory: boolean;\r\n    recordStatus:string;\r\n}\r\nexport class ExcelMappingClass2 {\r\n    columnnName: string;\r\n    dataType: string;\r\n    headerName: string;\r\n    dateFormat: string;\r\n    recordStatus:string;\r\n    mappingColumn: string;\r\n    mandatory: boolean;\r\n    id: number;\r\n}\r\nexport class ExcelMappingClass3 {\r\n    excelMappingDto: ExcelMappingClass[];\r\n    excelMapping: Array<ExcelMappingClass2>;\r\n}\r\n\r\nexport class ExcelMappingClass1 {\r\n    extSys: string;\r\n    processName: string;\r\n    headerName: string;\r\n    dateFormat: string;\r\n    //headerName:string;\r\n    excelMappingColumn: string;\r\n    id: number;\r\n    columnnDescription: string;\r\n    columnnName: string;\r\n    dataType: string;\r\n    extSysName: string;\r\n    mandatory: boolean;\r\n    recordStatus:string;\r\n}\r\n\r\nexport class ExcelMappingUpdateDTO {\r\n    // extSys: string;\r\n    // processName: string;\r\n    headerName: string;\r\n    dateFormat: string;\r\n    excelMappingColumn: string;\r\n    columnnName: string;\r\n    dataType: string;\r\n    // extSysName: string;\r\n    mandatory: boolean;\r\n    id:number;\r\n    tableMappingColumn:string;\r\n    startingRow:number;\r\n    headerRepeated:boolean;\r\n    recordStatus:string;\r\n    authStatus:string;\r\n    \r\n}\r\n\r\nexport class ExcelMappingClass5 {\r\n    excelMapping: Array<ExcelMappingUpdateDTO>;\r\n}\r\n\r\n","export class ExternalSystem{\r\n    id:number;\r\n    extSys:string;\r\n    processName:string;\r\n    maxUploadLimit:number;\r\n  \r\n}","export default \"table {\\n  width: 80%;\\n  padding: 0%;\\n  margin: 0%;\\n}\\n\\nmat-form-field {\\n  width: 250px;\\n}\\n\\ntd > mat-form-field {\\n  width: 130px;\\n}\\n\\nth {\\n  width: 130px;\\n}\\n\\n.dropdown {\\n  position: relative;\\n  display: inline-block;\\n}\\n\\n.dropdown-arrow {\\n  position: absolute;\\n  top: 2px;\\n  right: 0;\\n}\\n\\n/*.dropdown::before {\\n  position: absolute;\\n  content: \\\" \\\\2193\\\";\\n  top: 0px;\\n  right: -8px;\\n  height: 20px;\\n  width: 20px;\\n}*/\\n\\n#customers {\\n  font-family: \\\"Trebuchet MS\\\", Arial, Helvetica, sans-serif;\\n  border-collapse: collapse;\\n  width: 100%;\\n}\\n\\n#customers td,\\n#customers th {\\n  border: 1px solid #ddd;\\n  padding: 8px;\\n  text-align: center;\\n}\\n\\n#customers tr:nth-child(even) {\\n  background-color: #f2f2f2;\\n}\\n\\n#customers th {\\n  padding-top: 12px;\\n  padding-bottom: 12px;\\n  text-align: left;\\n  background-color: #61b2d8;\\n  color: white;\\n}\\n\\nmat-card mat-form-field {\\n  font-size: 10px;\\n}\\n\\nmat-chip {\\n  font-size: 10px;\\n}\\n\\nmat-checkbox {\\n  font-size: 10px;\\n}\\n\\nth {\\n  font-size: 10px;\\n}\\n\\n.mat-raised-button {\\n  width: -webkit-fit-content;\\n  width: -moz-fit-content;\\n  width: fit-content;\\n  height: 20px;\\n  line-height: 27px;\\n  min-height: 27px;\\n  vertical-align: top;\\n  font-size: 11px;\\n  padding: 0 0;\\n  margin: 0;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdmlld3Mvc2lhcy12Mi9leGNlbC1tYXBwaW5nL3VwZGF0ZS1leGNlbC1tYXBwaW5nL0Y6XFxtdXRodS1vbmJvYXJkXFxtZWRpYW4tcGgyLXVpL3NyY1xcYXBwXFx2aWV3c1xcc2lhcy12MlxcZXhjZWwtbWFwcGluZ1xcdXBkYXRlLWV4Y2VsLW1hcHBpbmdcXHVwZGF0ZS1leGNlbC1tYXBwaW5nLmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC92aWV3cy9zaWFzLXYyL2V4Y2VsLW1hcHBpbmcvdXBkYXRlLWV4Y2VsLW1hcHBpbmcvdXBkYXRlLWV4Y2VsLW1hcHBpbmcuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxVQUFBO0VBQ0EsV0FBQTtFQUNBLFVBQUE7QUNDRjs7QURFQTtFQUNFLFlBQUE7QUNDRjs7QURDQTtFQUNFLFlBQUE7QUNFRjs7QURFQTtFQUNFLFlBQUE7QUNDRjs7QURPQTtFQUNFLGtCQUFBO0VBQ0EscUJBQUE7QUNKRjs7QURPQTtFQUNFLGtCQUFBO0VBQ0EsUUFBQTtFQUNBLFFBQUE7QUNKRjs7QURPQTs7Ozs7OztFQUFBOztBQVNBO0VBQ0UseURBQUE7RUFDQSx5QkFBQTtFQUNBLFdBQUE7QUNMRjs7QURPQTs7RUFFRSxzQkFBQTtFQUNBLFlBQUE7RUFDQSxrQkFBQTtBQ0pGOztBRE9BO0VBQ0UseUJBQUE7QUNKRjs7QURPQTtFQUNFLGlCQUFBO0VBQ0Esb0JBQUE7RUFDQSxnQkFBQTtFQUNBLHlCQUFBO0VBQ0EsWUFBQTtBQ0pGOztBRE1BO0VBQ0UsZUFBQTtBQ0hGOztBREtBO0VBQ0UsZUFBQTtBQ0ZGOztBREtBO0VBQ0UsZUFBQTtBQ0ZGOztBRElBO0VBQ0UsZUFBQTtBQ0RGOztBRElBO0VBQ0UsMEJBQUE7RUFBQSx1QkFBQTtFQUFBLGtCQUFBO0VBQ0EsWUFBQTtFQUNBLGlCQUFBO0VBQ0EsZ0JBQUE7RUFDQSxtQkFBQTtFQUNBLGVBQUE7RUFDQSxZQUFBO0VBQ0EsU0FBQTtBQ0RGIiwiZmlsZSI6InNyYy9hcHAvdmlld3Mvc2lhcy12Mi9leGNlbC1tYXBwaW5nL3VwZGF0ZS1leGNlbC1tYXBwaW5nL3VwZGF0ZS1leGNlbC1tYXBwaW5nLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsidGFibGUge1xyXG4gIHdpZHRoOiA4MCU7XHJcbiAgcGFkZGluZzogMCU7XHJcbiAgbWFyZ2luOiAwJTtcclxufVxyXG5cclxubWF0LWZvcm0tZmllbGQge1xyXG4gIHdpZHRoOiAyNTBweDtcclxufVxyXG50ZCA+IG1hdC1mb3JtLWZpZWxkIHtcclxuICB3aWR0aDogMTMwcHg7XHJcblxyXG4gIFxyXG59XHJcbnRoIHtcclxuICB3aWR0aDogMTMwcHg7XHJcblxyXG5cclxuIFxyXG4gIFxyXG4gIFxyXG59XHJcblxyXG4uZHJvcGRvd24ge1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbn1cclxuXHJcbi5kcm9wZG93bi1hcnJvdyB7XHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIHRvcDogMnB4O1xyXG4gIHJpZ2h0OiAwO1xyXG59XHJcblxyXG4vKi5kcm9wZG93bjo6YmVmb3JlIHtcclxuICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgY29udGVudDogXCIgXFwyMTkzXCI7XHJcbiAgdG9wOiAwcHg7XHJcbiAgcmlnaHQ6IC04cHg7XHJcbiAgaGVpZ2h0OiAyMHB4O1xyXG4gIHdpZHRoOiAyMHB4O1xyXG59Ki9cclxuXHJcbiNjdXN0b21lcnMge1xyXG4gIGZvbnQtZmFtaWx5OiBcIlRyZWJ1Y2hldCBNU1wiLCBBcmlhbCwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmO1xyXG4gIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbn1cclxuI2N1c3RvbWVycyB0ZCxcclxuI2N1c3RvbWVycyB0aCB7XHJcbiAgYm9yZGVyOiAxcHggc29saWQgI2RkZDtcclxuICBwYWRkaW5nOiA4cHg7XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG59XHJcblxyXG4jY3VzdG9tZXJzIHRyOm50aC1jaGlsZChldmVuKSB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogI2YyZjJmMjtcclxufVxyXG5cclxuI2N1c3RvbWVycyB0aCB7XHJcbiAgcGFkZGluZy10b3A6IDEycHg7XHJcbiAgcGFkZGluZy1ib3R0b206IDEycHg7XHJcbiAgdGV4dC1hbGlnbjogbGVmdDtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoOTcsIDE3OCwgMjE2KTtcclxuICBjb2xvcjogd2hpdGU7XHJcbn1cclxubWF0LWNhcmQgbWF0LWZvcm0tZmllbGQge1xyXG4gIGZvbnQtc2l6ZTogMTBweDtcclxufVxyXG5tYXQtY2hpcCB7XHJcbiAgZm9udC1zaXplOiAxMHB4O1xyXG59XHJcblxyXG5tYXQtY2hlY2tib3gge1xyXG4gIGZvbnQtc2l6ZTogMTBweDtcclxufVxyXG50aCB7XHJcbiAgZm9udC1zaXplOiAxMHB4O1xyXG59XHJcblxyXG4ubWF0LXJhaXNlZC1idXR0b24ge1xyXG4gIHdpZHRoOiBmaXQtY29udGVudDtcclxuICBoZWlnaHQ6IDIwcHg7XHJcbiAgbGluZS1oZWlnaHQ6IDI3cHg7XHJcbiAgbWluLWhlaWdodDogMjdweDtcclxuICB2ZXJ0aWNhbC1hbGlnbjogdG9wO1xyXG4gIGZvbnQtc2l6ZTogMTFweDtcclxuICBwYWRkaW5nOiAwIDA7XHJcbiAgbWFyZ2luOiAwO1xyXG59XHJcbiIsInRhYmxlIHtcbiAgd2lkdGg6IDgwJTtcbiAgcGFkZGluZzogMCU7XG4gIG1hcmdpbjogMCU7XG59XG5cbm1hdC1mb3JtLWZpZWxkIHtcbiAgd2lkdGg6IDI1MHB4O1xufVxuXG50ZCA+IG1hdC1mb3JtLWZpZWxkIHtcbiAgd2lkdGg6IDEzMHB4O1xufVxuXG50aCB7XG4gIHdpZHRoOiAxMzBweDtcbn1cblxuLmRyb3Bkb3duIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG59XG5cbi5kcm9wZG93bi1hcnJvdyB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAycHg7XG4gIHJpZ2h0OiAwO1xufVxuXG4vKi5kcm9wZG93bjo6YmVmb3JlIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBjb250ZW50OiBcIiBcXDIxOTNcIjtcbiAgdG9wOiAwcHg7XG4gIHJpZ2h0OiAtOHB4O1xuICBoZWlnaHQ6IDIwcHg7XG4gIHdpZHRoOiAyMHB4O1xufSovXG4jY3VzdG9tZXJzIHtcbiAgZm9udC1mYW1pbHk6IFwiVHJlYnVjaGV0IE1TXCIsIEFyaWFsLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7XG4gIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG4jY3VzdG9tZXJzIHRkLFxuI2N1c3RvbWVycyB0aCB7XG4gIGJvcmRlcjogMXB4IHNvbGlkICNkZGQ7XG4gIHBhZGRpbmc6IDhweDtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuXG4jY3VzdG9tZXJzIHRyOm50aC1jaGlsZChldmVuKSB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmMmYyZjI7XG59XG5cbiNjdXN0b21lcnMgdGgge1xuICBwYWRkaW5nLXRvcDogMTJweDtcbiAgcGFkZGluZy1ib3R0b206IDEycHg7XG4gIHRleHQtYWxpZ246IGxlZnQ7XG4gIGJhY2tncm91bmQtY29sb3I6ICM2MWIyZDg7XG4gIGNvbG9yOiB3aGl0ZTtcbn1cblxubWF0LWNhcmQgbWF0LWZvcm0tZmllbGQge1xuICBmb250LXNpemU6IDEwcHg7XG59XG5cbm1hdC1jaGlwIHtcbiAgZm9udC1zaXplOiAxMHB4O1xufVxuXG5tYXQtY2hlY2tib3gge1xuICBmb250LXNpemU6IDEwcHg7XG59XG5cbnRoIHtcbiAgZm9udC1zaXplOiAxMHB4O1xufVxuXG4ubWF0LXJhaXNlZC1idXR0b24ge1xuICB3aWR0aDogZml0LWNvbnRlbnQ7XG4gIGhlaWdodDogMjBweDtcbiAgbGluZS1oZWlnaHQ6IDI3cHg7XG4gIG1pbi1oZWlnaHQ6IDI3cHg7XG4gIHZlcnRpY2FsLWFsaWduOiB0b3A7XG4gIGZvbnQtc2l6ZTogMTFweDtcbiAgcGFkZGluZzogMCAwO1xuICBtYXJnaW46IDA7XG59Il19 */\"","import { Component, OnInit, ChangeDetectorRef, ViewChild, ViewChildren } from '@angular/core';\r\n\r\nimport { FormBuilder, FormGroup, FormArray, FormControl, Validators } from '@angular/forms';\r\nimport { MatSnackBar, MatButton } from '@angular/material';\r\n\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { ExcelMappingClass, ExcelMappingClass2, ExcelMappingClass1,ExcelMappingClass3, ExcelMappingClass5, ExcelMappingUpdateDTO } from '../excelMapping';\r\nimport { ExternalSystem } from '../externalSystem';\r\nimport { AppConfirmService } from 'src/app/shared/services/app-confirm/app-confirm.service';\r\nimport { ExcelProcessingService } from 'src/app/shared/services/sias2-services/excel-processing.service';\r\nimport { ExcelApiService } from 'src/app/shared/services/sias2-services/ExcelApiService';\r\nimport Swal from 'sweetalert2';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { add } from 'ngx-bootstrap/chronos/public_api';\r\n\r\n\r\nexport interface DTYPES {\r\n  id: number;\r\n  type: string;\r\n  isActive: boolean;\r\n}\r\n@Component({\r\n  selector: 'app-update-excel-mapping',\r\n  templateUrl: './update-excel-mapping.component.html',\r\n  styleUrls: ['./update-excel-mapping.component.scss']\r\n})\r\nexport class UpdateExcelMappingComponent implements OnInit {\r\n  public fieldArray: Array<ExcelMappingClass2> = [];\r\n  displayedColumns: string[] = ['columnnName', 'dataType', 'mandatory', 'headerName', 'dateFormat', 'excelMappingColumn'];\r\n  toppings = new FormControl();\r\n  res: any;\r\n  processName: string;\r\n  datares: boolean;\r\n  submitted = false;\r\n  dataSource: any;\r\n  dataFromresponse: any;\r\n  message: boolean;\r\n  form: FormGroup;\r\n  form1:boolean;\r\n  extSysData: ExternalSystem[];\r\n  extSysData1: string[];\r\n  processData: ExternalSystem;\r\n  processData1: ExternalSystem = new ExternalSystem;\r\n  processData2: ExternalSystem;\r\n  column1: boolean;\r\n  excelMaint: ExcelMappingClass = new ExcelMappingClass();\r\n  progress: boolean;\r\n  excelMappingDisabled:boolean;\r\n  disablefetchbtn:boolean=false;\r\n  /* Dynamicforms properties */\r\n  addForm: FormGroup;\r\n  addFormForDynamicRow: FormGroup;\r\n  rows: FormArray;\r\nfetch_disable=true;\r\n  addFormValueChanges$;\r\n  tempStore: any = [];\r\n\r\n  processdata1: any;\r\n  poojaprocessdata: any[];\r\n  poojaext2: any;\r\n  poojaprocess2: any;\r\n  isDate: any;\r\n  notdate: any;\r\n  formdata: any;\r\n  excelMappingForUpdate: ExcelMappingUpdateDTO = new ExcelMappingUpdateDTO();\r\n  excelMapping: Array<ExcelMappingUpdateDTO>;\r\n\r\n  dataResp: any;\r\n  extSysCode: any;\r\n  extNameValue: any;\r\n\r\n  disableDeleteButton: boolean;\r\n  disableCloseButton: boolean;\r\n  disableReopenButton: boolean;\r\n\r\n  @ViewChildren('fetchBtn') fetchButton: MatButton;\r\n  @ViewChildren('updateBtn') updateButton: MatButton;\r\n\r\n  updateDataResp: Object;\r\n  ExcelMappingClass5: ExcelMappingClass5;\r\n  mapDataForUpdate = new ExcelMappingClass5();\r\n  currentUser: any;\r\n  copyData1=true;\r\n  authRespReference: Object;\r\n  closeRefernce: Object;\r\n  reOpenRespReference: Object;\r\n  starting: number;\r\n  isChecked: boolean;\r\n  currency: string;\r\n  currencydata: string;\r\n  fileNames:string[];\r\n  object3 = new ExcelMappingClass3();\r\n  dataTypes: DTYPES[] = [\r\n    { id: 1, type: 'Date', isActive: true },\r\n    { id: 2, type: 'Number', isActive: false },\r\n    { id: 3, type: 'Clob', isActive: false },\r\n    { id: 4, type: 'VarChar', isActive: false }\r\n  ];\r\n  ccyData: any;\r\n  extSysCodeFromsummary: any;\r\n  processNameFromSummary: any;\r\n  sheetNumber: number;\r\n  editafterfetch: boolean;\r\n  constructor(private excelUpload: ExcelProcessingService,\r\n    private api: ExcelApiService,\r\n    private fb: FormBuilder,\r\n    private cdr: ChangeDetectorRef,\r\n    private snack: MatSnackBar,\r\n\r\n    private toast: ToastrService,\r\n    private confirmService: AppConfirmService, private route: ActivatedRoute) { }\r\n\r\n  ngOnInit() {\r\n    this.route.queryParams.subscribe(params => {\r\n      this.extSysCodeFromsummary = params['extSysCode'];\r\n\r\n      this.processNameFromSummary = params['processName']\r\n      console.log(this.extSysCodeFromsummary);\r\n      this.extNameValue = params['extSysName']\r\n    });\r\n\r\n    this.addForm = this.fb.group({\r\n      subArray: this.fb.array([])\r\n    });\r\n\r\n    this.addFormForDynamicRow = this.fb.group({\r\n      subArray: this.fb.array([])\r\n    });\r\n    // this.getProcess(this.extSysCodeFromsummary);\r\n    this.api.getProcessNameByExtSysCodeForUpdateMapping(this.extSysCodeFromsummary).subscribe(response => {\r\n      this.dataResp = response;\r\n\r\n      console.log('process method end', this.dataResp);\r\n    });\r\n    // this.getAllExternalSystemCode();\r\n    // this.poojaprocess2 = this.processNameFromSummary;\r\n    // this.getProcessName1(this.extSysCodeFromsummary, this.poojaprocess2)\r\n    //localStorage.setItem('userIdForChangePassword', localStorage.getItem('currentUser'));\r\n    this.currentUser = localStorage.getItem('currentUser');\r\n    // console.log(\"this.currentUser\", this.currentUser);\r\n   \r\n    this.getAllExtsysNameAndProcessCodeOnAuthStatus();\r\n  }\r\n \r\n  getProcess(extSysCode) {\r\n    // if(this.currency==null)\r\n    // {\r\n    //   this.disablefetchbtn = false;\r\n    // }\r\n    console.log(extSysCode);\r\n    this.api.getProcessNameByExtSysCodeForUpdateMapping(extSysCode).subscribe(response => {\r\n      this.dataResp = response;\r\n\r\n      this.processName = this.dataResp;\r\n      console.log(this.processName);\r\n      this.getExtSysNameByExtSysCode(extSysCode);\r\n      // console.log('process method end');\r\n    });\r\n  }\r\n  updateMappingData(model, isValid: boolean, extSysCode: string, processCode: string, starting, isChecked, ccy, sheetNumber) {\r\n    console.log(model);\r\n    console.log(\"ext\",extSysCode);\r\n    this.submitted = true;\r\n    this.progress = true;\r\n\r\n    let modifiedBy = model.subArray[0].modifiedBy;\r\n    // console.log(\"modifiedBy 1 : \", modifiedBy);\r\n    modifiedBy = this.currentUser;\r\n\r\n\r\n    if (this.addForm.invalid) {\r\n      Swal.fire({\r\n        type: 'error',\r\n\r\n        text: 'Numeric values not allowed in mapping column',\r\n      });\r\n      return;\r\n    }\r\n    console.log(model, this.extNameValue, processCode, extSysCode, starting, isChecked, modifiedBy, ccy, sheetNumber)\r\n    this.api.updateMappingData(model, this.extNameValue, processCode, this.extSysCodeFromsummary, starting, isChecked, modifiedBy, ccy, sheetNumber)\r\n      .subscribe(\r\n        data => {\r\n          this.updateDataResp = data;\r\n          console.log(this.updateDataResp);\r\n          if (this.updateDataResp) {\r\n\r\n            Swal.fire(\r\n\r\n              'Updated successfully',\r\n           \r\n            );\r\n            if (data[0].authStatus === 'U') {\r\n              data[0].authStatus = 'UNAUTHORIZED';\r\n            }\r\n            if (data[0].authStatus === 'A') {\r\n              data[0].authStatus = 'AUTHORIZED';\r\n            }\r\n            if (data[0].recordStatus === 'C') {\r\n              data[0].recordStatus = 'CLOSED';\r\n            }\r\n            if (data[0].recordStatus === 'O') {\r\n              data[0].recordStatus = 'OPEN';\r\n            }\r\n\r\n            this.tempStore = data[0];\r\n            this.updateButton.disabled = true;\r\n            this.cdr.markForCheck();\r\n          } else {\r\n            Swal.fire({\r\n              type: 'error',\r\n\r\n              text: 'Failed to update ',\r\n            });\r\n\r\n\r\n          }\r\n        }\r\n      );\r\n    this.progress = false;\r\n  }\r\n\r\n  onClickOfAuth(model, isValid: boolean, extSysCode: string, processCode: string, ccy) {\r\n    // console.log(\"Auth model : \", model)\r\n    // console.log(\"isValid : \" + isValid)\r\n    // console.log(\"extSysCode : \" + extSysCode + \" processCode : \" + processCode);\r\n\r\n    const modifiedBy = model.subArray[0].modifiedBy;\r\n    // console.log(\"modified by: \", modifiedBy)\r\n\r\n    if (modifiedBy == this.currentUser) {\r\n      Swal.fire({\r\n        type: 'error',\r\n\r\n        text: 'Maker Cannot Authorize the record',\r\n      });\r\n\r\n      return;\r\n    }\r\n\r\n\r\n    console.log(\"authhh\",extSysCode)\r\n    this.api.onAuthorizingTheRecordOfExcelMApping(model, this.extNameValue, processCode,this.extSysCode, this.currentUser, ccy)\r\n      .subscribe(authResponse => {\r\n        this.authRespReference = authResponse;\r\n        console.log(\"backend data\",authResponse);\r\n        console.log(this.authRespReference)\r\n        if (this.authRespReference[0].authStatus === 'A') {\r\n          this.authRespReference[0].authStatus = 'AUTHORIZED';\r\n        }\r\n        if (this.authRespReference[0].authStatus === 'U') {\r\n          this.authRespReference[0].authStatus = 'UNAUTHORIZED';\r\n        }\r\n        if (this.authRespReference[0].recordStatus === 'C') {\r\n          this.authRespReference[0].recordStatus = 'CLOSED';\r\n        }\r\n        if (this.authRespReference[0].recordStatus === 'O') {\r\n          this.authRespReference[0].recordStatus = 'OPEN';\r\n        }\r\n\r\n        this.tempStore = authResponse[0];\r\n        if (this.authRespReference) {\r\n\r\n          Swal.fire(\r\n\r\n            'You Authorized the record',\r\n           \r\n          );\r\n        } else {\r\n          Swal.fire({\r\n            type: 'error',\r\n\r\n            text: 'Failed To Authorize ',\r\n          });\r\n\r\n        }\r\n        this.cdr.markForCheck();\r\n        // console.log(\"Auth Resp From Backend : \", this.authRespReference)\r\n      });\r\n  }\r\n\r\n\r\n  dataChanged(event, type)\r\n  {\r\n     \r\n      let data = JSON.parse(localStorage.getItem('mappingData'));\r\n      console.log(event, type, data);\r\n      if(data.sheetNumber != this.sheetNumber  && data.processCode != this.poojaprocess2 && data.currency != this.currency)\r\n      {\r\n        this.disablefetchbtn = false;\r\n      }\r\n      if(data.sheetNumber != null  && data.processCode != null && data.currency != null)\r\n      {\r\n        this.disablefetchbtn = false;\r\n      }\r\n  }\r\n\r\n  onClcikOfClose(model, isValid: boolean, extSysCode: string, processCode: string, ccy) {\r\n    // console.log(\"Close model : \", model)\r\n    // console.log(\"isValid : \" + isValid)\r\n    // console.log(\"extSysCode : \" + extSysCode + \" processCode : \" + processCode);\r\n    if (model.subArray[0].recordStatus === 'OPEN') {\r\n      model.subArray[0].recordStatus = 'O';\r\n    }\r\n    if (model.subArray[0].recordStatus === 'CLOSED') {\r\n      model.subArray[0].recordStatus = 'C';\r\n    }\r\n    // console.log(this.currentUser);\r\n    model.subArray[0].modifiedBy = this.currentUser;\r\n    // console.log(model.subArray[0].modifiedBy);\r\n    this.api.onClcikOFCloseOfUpdateExcelMApping(model, this.extNameValue, processCode,this.extSysCode, ccy)\r\n      .subscribe(closeResponse => {\r\n        this.closeRefernce = closeResponse;\r\n        // console.log(this.closeRefernce[0]);\r\n        // console.log(this.closeRefernce[0].recordStatus)\r\n        if (closeResponse[0].authStatus === 'U') {\r\n          closeResponse[0].authStatus = 'UNAUTHORIZED';\r\n        }\r\n        if (closeResponse[0].authStatus === 'A') {\r\n          closeResponse[0].authStatus = 'AUTHORIZED';\r\n        }\r\n        if (closeResponse[0].recordStatus === 'C') {\r\n          closeResponse[0].recordStatus = 'CLOSED';\r\n        }\r\n        if (closeResponse[0].recordStatus === 'O') {\r\n          closeResponse[0].recordStatus = 'OPEN';\r\n        }\r\n\r\n        this.tempStore = closeResponse[0];\r\n        if (this.closeRefernce) {\r\n          Swal.fire(\r\n\r\n            'You Closed the Record',\r\n            \r\n          );\r\n        } else {\r\n          Swal.fire({\r\n            type: 'error',\r\n\r\n            text: 'Failed To Close ',\r\n          });\r\n        }\r\n        if (closeResponse[0].recordStatus == 'C') {\r\n          this.disableReopenButton = true;\r\n        }\r\n        this.cdr.markForCheck();\r\n        // console.log(\"close response from backend\", this.closeRefernce);\r\n      });\r\n  }\r\n\r\n  onClcikOfReopen(model, isValid: boolean, extSysCode: string, processCode: string, ccy) {\r\n    // console.log(\"Re-Open model : \", model)\r\n    // console.log(\"isValid : \" + isValid)\r\n    // console.log(\"extSysCode : \" + extSysCode + \" processCode : \" + processCode);\r\n    if (model.subArray[0].recordStatus === 'OPEN') {\r\n      model.subArray[0].recordStatus = 'O';\r\n    }\r\n    if (model.subArray[0].recordStatus === 'CLOSED') {\r\n      model.subArray[0].recordStatus = 'C';\r\n    }\r\n    // console.log(this.currentUser);\r\n    model.subArray[0].modifiedBy = this.currentUser;\r\n    // console.log(model.subArray[0].modifiedBy);\r\n    this.api.onClcikOfReopenOfUpdateExcelMapping(model, this.extNameValue, processCode, this.extSysCode, ccy)\r\n      .subscribe(reOpenResp => {\r\n        this.reOpenRespReference = reOpenResp;\r\n        if (this.reOpenRespReference[0].authStatus === 'A') {\r\n          this.reOpenRespReference[0].authStatus = 'AUTHORIZED';\r\n        }\r\n        if (this.reOpenRespReference[0].authStatus === 'U') {\r\n          this.reOpenRespReference[0].authStatus = 'UNAUTHORIZED';\r\n        }\r\n        if (this.reOpenRespReference[0].recordStatus === 'C') {\r\n          this.reOpenRespReference[0].recordStatus = 'CLOSED';\r\n        }\r\n        if (this.reOpenRespReference[0].recordStatus === 'O') {\r\n          this.reOpenRespReference[0].recordStatus = 'OPEN';\r\n        }\r\n\r\n        this.tempStore = reOpenResp[0];\r\n        if (this.reOpenRespReference) {\r\n\r\n          Swal.fire(\r\n\r\n            'You Re-Opened the record ',\r\n            \r\n          );\r\n        } else {\r\n\r\n          Swal.fire({\r\n            type: 'error',\r\n\r\n            text: 'Failed To Re-Open ',\r\n          });\r\n        }\r\n        if (reOpenResp[0].recordStatus == 'CLOSED') {\r\n          this.disableCloseButton = true;\r\n        }\r\n\r\n        this.cdr.markForCheck();\r\n        // console.log(\"Re-Open resp from backend : \", this.reOpenRespReference);\r\n      });\r\n  }\r\n\r\n  // --------------------------------------------------------\r\n  // ---------------To get all ext sys name------------------\r\n  // --------------------------------------------------------\r\n  // getAllExternalSystemName() {\r\n  //   //console.log('mathos call');\r\n  //   this.api.getAllExtSysForUpdateMapping().subscribe(response => {\r\n  //     this.extSysData1 = response;\r\n  //     //console.log(this.extSysData1);\r\n  //   });\r\n  // }\r\n\r\n  // --------------------------------------------------------\r\n  // ---------------To get all ext sys code------------------\r\n  // --------------------------------------------------------\r\n  getAllExternalSystemCode() {\r\n    // console.log('mathos call');\r\n    this.api.getAllExtCodeForUpdateMapping().subscribe(response => {\r\n      this.extSysData1 = response;\r\n      // console.log(this.extSysData1);\r\n    });\r\n  }\r\n\r\n  // getProcess(extSysName) {\r\n  //   this.clearAllSubArray();\r\n  //   //console.log(\"Clear form called\",extSysName);\r\n  //   this.api.getProcessNameWithExtSysForMapping(extSysName).subscribe(response => {\r\n  //     this.res = response;\r\n  //     this.processName = this.res;\r\n  //     //console.log(this.processName);\r\n  //     //console.log('process method end');\r\n  //   });\r\n  // }\r\n  // getProcessName1(processCode, extSysName) {\r\n  //   //console.log(processCode);\r\n  //   //console.log(extSysName);\r\n  //   this.poojaext2 = extSysName;\r\n  //   this.poojaprocess2 = processCode;\r\n\r\n  // }\r\n\r\n  // --------by pooja--------\r\n  // -------------------------------------------------------------\r\n  // NOTE : To get process code by external system code\r\n  // -------------------------------------------------------------\r\n  // Changes on 6th sept\r\n\r\n\r\n\r\n\r\n  getProcessName1(processCode) {\r\n   \r\n    // console.log(processCode);\r\n    // this.excelMappingDisabled=true;\r\n    console.log(processCode, this.extNameValue);\r\n    this.extSysCode = this.extSysCodeFromsummary;\r\n    this.poojaprocess2 = processCode;\r\n    this.api.getCurrencyOnExtNameAndProcssCode(this.extNameValue, processCode, this.extSysCodeFromsummary).subscribe(data => {\r\n      // console.log(data);\r\n      this.ccyData = data;\r\n      console.log(this.ccyData);\r\n      if (this.ccyData.length == 0) {\r\n        Swal.fire('No Currency Found For the Process code');\r\n      }\r\n    });\r\n        // this.fetch_disable=true;\r\n  }\r\n\r\n  // -------------------------------------------------------------\r\n  // NOTE : To get external system name by ext sys code\r\n  // -------------------------------------------------------------\r\n  getExtSysNameByExtSysCode(extSysCode) {\r\n    // console.log(extSysCode);\r\n    this.api.getExtSysNameByExtSysCode(extSysCode)\r\n      .subscribe(data => {\r\n        this.extNameValue = data;\r\n        // this.poojaext2=\r\n        console.log(this.extNameValue);\r\n        // //console.log(this.extSysCode);\r\n      });\r\n  }\r\n\r\n  // ----end------\r\n\r\n\r\n  getAllMapping(extSysName: string, processCode: string, ccy: string) {\r\n    this.addForm.reset();\r\n    let dataobj:any = {processCode:processCode, currency:ccy, sheetNumber:this.sheetNumber};\r\n    localStorage.setItem('mappingData', JSON.stringify(dataobj));\r\n    this.api.fetchAllName(this.extNameValue, processCode, ccy).subscribe(\r\n      filenames=>\r\n      {\r\n        console.log(\"file names from frontend\",filenames);\r\n        this.fileNames=filenames;\r\n        console.log(\"filenames alloted\",this.fileNames)\r\n      }\r\n    )\r\n    this.api.getAllMappingByExtSysAndProcessCode(this.extNameValue, processCode, ccy, this.sheetNumber)\r\n      .subscribe(\r\n        data => {\r\n          console.log(data);\r\n          if(data==null)\r\n          {\r\n            Swal.fire(\r\n              {\r\n                title:\"Excel mapping is not available with this sheet number.\",\r\n                text:'Please enter the correct sheet number'\r\n              }\r\n            )\r\n            this.formdata='';\r\n            console.log(\"inisde if\");\r\n            \r\n          }\r\n          else{\r\n          console.log(this.addForm.controls);\r\n          this.formdata = data;\r\n       \r\n          // this.addForm=data;\r\n          this.starting = this.formdata[0].startingRow;\r\n          this.isChecked = this.formdata[0].headerRepeated;\r\n          // console.log(this.formdata[0])\r\n          if (this.formdata[0].authStatus === 'U') {\r\n            this.formdata[0].authStatus = 'UNAUTHORIZED';\r\n          }\r\n          if (this.formdata[0].authStatus === 'A') {\r\n            this.formdata[0].authStatus = 'AUTHORIZED';\r\n          }\r\n          if (this.formdata[0].recordStatus === 'C') {\r\n            this.formdata[0].recordStatus = 'CLOSED';\r\n          }\r\n          if (this.formdata[0].recordStatus === 'O') {\r\n            this.formdata[0].recordStatus = 'OPEN';\r\n          }\r\n          this.tempStore = this.formdata[0];\r\n          this.patchData(this.formdata);\r\n          // console.log(\"Check Array ==>\", this.formdata)\r\n          this.cdr.markForCheck();\r\n          this.dataSource = this.formdata;\r\n          if (this.formdata != null) {\r\n            // this.toast.success(`Fetched Mapped Data`, '', {\r\n            //   timeOut: 3000,\r\n            //   progressBar: true,\r\n            //   tapToDismiss: true,\r\n            //   closeButton: true,\r\n            //   easeTime: 300,\r\n            //   extendedTimeOut: 1000\r\n            // });\r\n            this.progress = false;\r\n            Swal.fire(\r\n\r\n              'Fetched Mapped Data ',\r\n             \r\n            );\r\n            this.disablefetchbtn = true;\r\n            this.fetchButton.disabled = true;\r\n            this.excelMappingDisabled=false;\r\n            // this.addForm.reset();\r\n            \r\n          } else {\r\n            // this.toast.error(`Failed!`, '', {\r\n            //   timeOut: 3000,\r\n            //   progressBar: true,\r\n            //   tapToDismiss: true,\r\n            //   closeButton: true,\r\n            //   easeTime: 300,\r\n            //   extendedTimeOut: 1000\r\n            // });\r\n            Swal.fire({\r\n              type: 'error',\r\n\r\n              text: 'Failed ',\r\n            });\r\n\r\n          }\r\n          this.cdr.markForCheck();\r\n          this.dataSource = this.formdata;\r\n        }\r\n        }\r\n      );\r\n    this.progress = false;\r\n    // this.fetch_disable=false;\r\n\r\n    \r\n\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  // Dynamic Form Section\r\n  // ------------by sakthi sept 4th-----------\r\n  // -------------start------------------\r\n  /**\r\n   * Create form subArray\r\n   */\r\n  private getSubArray() {\r\n    return this.fb.group({\r\n      columnnName: ['', [Validators.required]],\r\n      dataType: ['', [Validators.required]],\r\n      mandatory: [false],\r\n      headerName: [''],\r\n      dateFormat: [null],\r\n      excelMappingColumn: ['', [Validators.maxLength(3), Validators.pattern('^[a-zA-Z \\-\\']+')]], // -- // TODO here only alphabet Validators can we give hmm later we do\r\n      id: [''],\r\n      tableMappingColumn: [''],\r\n      startingRow: [''],\r\n      headerRepeated: [''],\r\n      authStatus: [''],\r\n      modifiedBy: [''],\r\n      authorizedBy: [''],\r\n      version: [''],\r\n      modifiedTime: [''],\r\n      authorizedTime: [''],\r\n      recordStatus: [''],\r\n      delimeter: [''],\r\n      defaultValue: [''],\r\n      repeatedTillNextValue: ['']\r\n    });\r\n  }\r\n\r\n\r\n  /**\r\n   * Add new subArray row into form\r\n   */\r\n\r\n  addSubArray() {\r\n    // debugger;\r\n    console.log(\"enter inside add method\");\r\n    const control = <FormArray>this.addForm.controls.subArray;\r\n    control.push(this.getSubArray());\r\n  //   let c = new ExcelMappingUpdateDTO;\r\n  //  this.formdata.push(c);\r\n    \r\n  }\r\n\r\n  /**\r\n   * Remove subArray row from form on click delete button\r\n   */\r\n\r\n  removeSubArray(i: number, data) {\r\n    // const control = <FormArray>this.addForm.controls.subArray;\r\n    // control.removeAt(i);\r\n    // // control.reset(i)\r\n    // console.log(\"removed:?\",control);\r\n\r\n\r\n\r\n\r\n    this.confirmService\r\n      .confirm({ title: 'Confirm', message: 'Are you sure to delete?', ok: 'Yes', cancel: 'No' })\r\n      .subscribe(res => {\r\n        if (res) {\r\n          this.getRowIdx(i);\r\n        } else { return; }\r\n      });\r\n\r\n\r\n\r\n  }\r\n\r\n  /**\r\n   * TODO Populate the data\r\n   */\r\n\r\n  patchData(formdata) {\r\n\r\n    // console.log(\"formdata\", formdata)\r\n    const control = <FormArray>this.addForm.controls.subArray;\r\n    control.controls = [];\r\n    // debugger;\r\n    for (let i = 0; i < formdata.length; i++) {\r\n      // console.log(\"lenght\", formdata.length)\r\n      control.push(this.getSubArray());\r\n    }\r\n    this.addForm.patchValue({ subArray: formdata });\r\n  }\r\n\r\n  /**\r\n   * This is one of the way how clear subArray fields.\r\n   */\r\n\r\n  clearAllSubArray() {\r\n    debugger;\r\n    const control = <FormArray>this.addForm.controls.subArray;\r\n    while (control.length) {\r\n      control.removeAt(control.length - 1);\r\n    }\r\n    control.clearValidators();\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * @method getRowIdx(i){}\r\n   */\r\n  private getRowIdx(i) {\r\n    const control = <FormArray>this.addForm.controls.subArray;\r\n    const fg = control.get([i]);\r\n\r\n    const idx = fg.get('id').value;\r\n    // console.log(\"For Delete => \", idx);\r\n\r\n    this.api.deleteMappingRow(idx)\r\n      .subscribe(e => {\r\n        // console.log(\"Resp : \", e);\r\n        if (e) {\r\n          // this.toast.success(`Deleted`, '', {\r\n          //   timeOut: 3000,\r\n          //   progressBar: true,\r\n          //   tapToDismiss: true,\r\n          //   closeButton: true,\r\n          //   easeTime: 300,\r\n          //   extendedTimeOut: 1000\r\n          // });\r\n          Swal.fire(\r\n\r\n            'Deleted ',\r\n            \r\n          );\r\n        } else {\r\n          // this.toast.error(`Failed!`, '', {\r\n          //   timeOut: 3000,\r\n          //   progressBar: true,\r\n          //   tapToDismiss: true,\r\n          //   closeButton: true,\r\n          //   easeTime: 300,\r\n          //   extendedTimeOut: 1000\r\n          // });\r\n\r\n          Swal.fire({\r\n            type: 'error',\r\n\r\n            text: 'Failed ',\r\n          });\r\n        }\r\n        control.removeAt(i);\r\n        this.cdr.markForCheck();\r\n      });\r\n\r\n  }\r\n\r\n\r\n  checkTypeStatus(i) {\r\n    // console.log(i);\r\n    // //console.log(\"test\", this.getSubArrayFormGroup(i).controls['dataType'].value);\r\n\r\n\r\n    const control = <FormArray>this.addForm.controls.subArray;\r\n    const fg = control.get([i]);\r\n\r\n    // console.log(\"Value\", fg.value.dataType)\r\n\r\n    if (fg.value.dataType == 'Date') {\r\n      fg.get('dateFormat').enable();\r\n    } else {\r\n      fg.get('dateFormat').disable();\r\n    }\r\n\r\n  }\r\n\r\n  getSubArrayFormGroup(index): FormGroup {\r\n    const control = <FormArray>this.addForm.controls.subArray;\r\n    const fg = control.get([index]);\r\n\r\n    //    //console.log(\"Value\", fg.value);\r\n    return fg.value;\r\n  }\r\n\r\n  get f() { return this.addForm.controls; }\r\n  get t() { return this.f.subArray as FormArray; }\r\n\r\n  // getCurrencyOnExtNameAndProcssCode()\r\n  // {\r\n  //   //console.log(\"currency\")\r\n  //   this.api.getCurrencyOnExtNameAndProcssCode(,this.extNameValue).subscribe(data=>{\r\n  //     //console.log(data);\r\n\r\n  //   })\r\n  // }\r\n\r\n  copyData(model, isValid: boolean, extSysCode: string, processCode: string, starting, isChecked, currencydata) {\r\n    this.extSysCodeFromsummary='';\r\n    this.editafterfetch=true;\r\n    this.copyData1=false;\r\n    this.dataResp=[];\r\n    console.log(\"process code\",processCode);\r\n    document.getElementById('muthu').innerHTML = '';\r\n    this.poojaprocess2 = '';\r\n    // this.\r\n        // if (!currencydata) {\r\n    \r\n        //   Swal.fire('Enter Currency for copy mapping.');\r\n        //   return;\r\n        // }\r\n        \r\n    \r\n        // this.progress = true;\r\n        model.subArray.forEach(element => {\r\n          element.id = null;\r\n        });\r\n        console.log(model.subArray);\r\n        // this.api.copyData(model, this.extNameValue, processCode, extSysCode, starting, isChecked, this.currentUser, currencydata)\r\n        //   .subscribe(datares => {\r\n        //     this.datares = datares;\r\n    \r\n        //     if (this.datares) {\r\n        //       Swal.fire('Mapping copied successfully.')\r\n        //     } else {\r\n        //       console.log(this.datares);\r\n        //       Swal.fire('Mapping already exist', 'create new process code for mapping or failed.')\r\n    \r\n        //     }\r\n        //   });\r\n    \r\n        // this.progress = false;\r\n      }\r\n//issue Id:540 There should be ‘Edit’ button in \r\n// Excel mapping page when user has fetched the details\r\n\r\nonEdit()\r\n{\r\n  this.editafterfetch=true\r\n}\r\ngetAllExtsysNameAndProcessCodeOnAuthStatus() {\r\n  //console.log(\"getting extsysname on authstatus\")\r\n  this.api.getAllExtsysNameAndProcessCodeOnAuthStatus()\r\n  .subscribe(response => {\r\n  this.extSysData1 = response;\r\n  //console.log(this.extSysData1);\r\n  // this.dataSource.paginator = this.paginator;\r\n  // this.dataSource.sort = this.sort;\r\n  });\r\n  }\r\nfinalSubmit(model, isChecked,currency ,starting, sheetNumber) {\r\n\r\n  this.submitted = true;\r\n\r\n  //console.log(\"extSysCode\", this.extSysCode);\r\n  //console.log(\"poojaprocess2\", this.poojaprocess2);\r\n  //console.log(\"starting\", this.starting);\r\n  console.log(\"currency\",this.currency)\r\n\r\n\r\n  if (this.addForm.controls.subArray.invalid) {\r\n    // this.toast.error('Error,Numeric values not allowed in mapping column', ``, {\r\n    //   timeOut: 3000,\r\n    //   progressBar: true,\r\n    //   tapToDismiss: true,\r\n    //   closeButton: true,\r\n    //   easeTime: 300,\r\n    //   extendedTimeOut: 1000\r\n    // });\r\n    Swal.fire({\r\n      type: 'error',\r\n\r\n      text: 'Error,Numeric values not allowed in mapping column',\r\n    });\r\n    return;\r\n  }\r\n\r\n  //console.log(\"startingRow : \" + starting);\r\n  //console.log(\"extSysCode : \" + this.extSysCode);\r\n  //console.log(\"processcode : \" + this.poojaprocess2);\r\n  //console.log(\"Model : \", model);\r\n\r\n\r\n  //console.log(\"extNameValue : \" + this.extNameValue);\r\n  //console.log(\"Is header present : \", isChecked);\r\n  // let body = JSON.stringify(model);\r\n  this.object3.excelMapping = model;\r\n\r\n  model.subArray[0].modifiedBy = this.currentUser;\r\n  //console.log('modifiedBy 1 : ', model.subArray[0].modifiedBy);\r\n  //console.log(this.object3);\r\n  // this.excelExt.modifiedBy = this.currentUser;\r\n  this.excelUpload.columnData(model, this.extNameValue, this.poojaprocess2, isChecked, starting, this.extSysCode, this.currency, this.currentUser, sheetNumber)\r\n    .subscribe(response => {\r\n      this.dataFromresponse = response;\r\n      //console.log(this.dataFromresponse);\r\n      // //console.log(this.dataFromresponse.authStatus);\r\n      if (this.dataFromresponse) {\r\n        // this.toast.success(`Mapped successfully`, '', {\r\n        //   timeOut: 3000,\r\n        //   progressBar: true,\r\n        //   tapToDismiss: true,\r\n        //   closeButton: true,\r\n        //   easeTime: 300,\r\n        //   extendedTimeOut: 1000\r\n        // });\r\n        Swal.fire(\r\n\r\n          'Mapped successfully ',\r\n         \r\n        );\r\n        //console.log(response[0].authStatus);\r\n        //console.log(response[0].modifiedBy);\r\n        if (response[0].authStatus === 'U') {\r\n          response[0].authStatus = 'UNAUTHORIZED';\r\n        }\r\n        if (response[0].authStatus === 'A') {\r\n          response[0].authStatus = 'AUTHORIZED';\r\n        }\r\n        if (response[0].recordStatus === 'O') {\r\n          response[0].recordStatus = 'OPEN';\r\n        }\r\n        if (response[0].recordStatus === 'C') {\r\n          response[0].recordStatus = 'CLOSE';\r\n        }\r\n        this.tempStore = response[0];\r\n\r\n       // this.addForm.reset();\r\n      } else {\r\n\r\n        // this.toast.error(`Failed! ExternalSystem And ProcessCode Already Mapped`, '', {\r\n        //   timeOut: 3000,\r\n        //   progressBar: true,\r\n        //   tapToDismiss: true,\r\n        //   closeButton: true,\r\n        //   easeTime: 300,\r\n        //   extendedTimeOut: 1000\r\n        // });\r\n\r\n        Swal.fire({\r\n          type: 'error',\r\n\r\n          text: 'Failed ExternalSystem And ProcessCode Already Mapped',\r\n        });\r\n      }\r\n    }, err => {\r\n\r\n      // this.toast.error(`Failed! Server Error`, '', {\r\n      //   timeOut: 3000,\r\n      //   progressBar: true,\r\n      //   tapToDismiss: true,\r\n      //   closeButton: true,\r\n      //   easeTime: 300,\r\n      //   extendedTimeOut: 1000\r\n      // });\r\n      Swal.fire({\r\n        type: 'error',\r\n\r\n        text: 'Failed Server Error',\r\n      });\r\n    });\r\n\r\n\r\n\r\n}\r\n}\r\n// ---------------end-----------------------\r\n\r\n","export default \"\\r\\ntable {\\r\\n    width: 100%;\\r\\n   \\r\\n  }\\r\\n.mat-card{\\r\\n    margin-left: 50px;\\r\\n    margin-right: 50px;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdmlld3Mvc2lhcy12Mi9leGNlbC1wcm9jZXNzaW5nL2V4Y2VsLXByb2Nlc3NpbmcuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQ0E7SUFDSSxXQUFXOztFQUViO0FBQ0Y7SUFDSSxpQkFBaUI7SUFDakIsa0JBQWtCO0FBQ3RCIiwiZmlsZSI6InNyYy9hcHAvdmlld3Mvc2lhcy12Mi9leGNlbC1wcm9jZXNzaW5nL2V4Y2VsLXByb2Nlc3NpbmcuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIlxyXG50YWJsZSB7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgXHJcbiAgfVxyXG4ubWF0LWNhcmR7XHJcbiAgICBtYXJnaW4tbGVmdDogNTBweDtcclxuICAgIG1hcmdpbi1yaWdodDogNTBweDtcclxufSJdfQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\nimport { ExcelMappingClass } from '../excel-mapping/excelMapping';\r\nimport { ExcelMaster } from './excelMasterClass';\r\nimport { ExternalSystem } from '../excel-mapping/externalSystem';\r\n\r\nimport { MatSnackBar } from '@angular/material';\r\n\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { ExcelProcessingService } from 'src/app/shared/services/sias2-services/excel-processing.service';\r\nimport { DateService } from 'src/app/shared/services/date.service';\r\nimport { ExcelApiService } from 'src/app/shared/services/sias2-services/ExcelApiService';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-excel-processing',\r\n  templateUrl: './excel-processing.component.html',\r\n  styleUrls: ['./excel-processing.component.css']\r\n})\r\nexport class ExcelProcessingComponent implements OnInit {\r\n  displayedColumns: string[] = ['creditAmount', 'debitAmount', 'numberOfRecords'];\r\n  dataSource: any;\r\n  toppings = new FormControl();\r\n  excelMap: ExcelMappingClass[];\r\n  columnname1: ExcelMappingClass;\r\n\r\n  extSysData1: string[];\r\n  excelMasterData: any;\r\n  postexcelMasterData: ExcelMaster = new ExcelMaster();\r\n  responseData: any;\r\n  dataFromresponse: ExcelMaster;\r\n  form: FormGroup;\r\n  extSysData: ExternalSystem[];\r\n  processData: ExternalSystem;\r\n  excelMaint: ExcelMappingClass = new ExcelMappingClass();\r\n  selectedFiles: any;\r\n  result: any;\r\n  pooja: any;\r\n  processName: string;\r\n  poojaext2: any;\r\n  poojaprocess2: any;\r\n  p1: string | undefined;\r\n  p2: string | undefined;\r\n  p3: string | undefined;\r\n  constructor(private excelUpload: ExcelProcessingService,\r\n    private dateService: DateService,\r\n    private snack: MatSnackBar,\r\n\r\n    private api: ExcelApiService,\r\n    private toast: ToastrService) { }\r\n\r\n  ngOnInit() {\r\n    this.getAllExternalSystem();\r\n  }\r\n\r\n  getProcess(extSysName) {\r\n    //console.log(extSysName);\r\n    this.api.getProcessNameWithExtSys(extSysName).subscribe(response => {\r\n      this.pooja = response;\r\n\r\n      this.processName = this.pooja;\r\n      //console.log(this.processName);\r\n      // this.processName.split(',');\r\n      // this.poojaprocessdata=\r\n      // //console.log(this.poojaprocessdata);\r\n      //console.log('process method end');\r\n    });\r\n  }\r\n  getProcessName1(processCode, extSysName) {\r\n    //console.log(processCode);\r\n    //console.log(extSysName);\r\n    this.poojaext2 = extSysName;\r\n    this.poojaprocess2 = processCode;\r\n\r\n  }\r\n\r\n  getAllExternalSystem() {\r\n    //console.log('mathos call');\r\n    this.api.getAllExtSysName().subscribe(response => {\r\n      this.extSysData1 = response;\r\n      //console.log(this.extSysData1);\r\n    });\r\n  }\r\n  getExternalSystem(ext) {\r\n    //console.log(ext.extSys);\r\n    this.excelUpload.getProcessNameWithExtSys(ext.extSys).subscribe(response => {\r\n      this.processData = response;\r\n      //console.log(this.processData);\r\n      //console.log('process method end');\r\n    });\r\n  }\r\n  getProcessName(extSys1) {\r\n    //console.log(extSys1);\r\n\r\n    this.excelUpload.getProcessNameWithExtSys(extSys1).subscribe(response => {\r\n      this.processData = response;\r\n      //console.log(this.processData);\r\n      //console.log('process method end');\r\n    });\r\n  }\r\n\r\n\r\n\r\n  finalSubmit(extSysName: string, processCode: string, dateforData: Date) {\r\n    // this.loader.open();\r\n    //console.log(extSysName);\r\n    //console.log(processCode);\r\n    //console.log(dateforData);\r\n    let date = this.dateService.convertDate(dateforData);\r\n    ////console.log(date);\r\n    this.p1 = extSysName;\r\n    this.p2 = processCode;\r\n    this.p3 = date;\r\n    //console.log(this.p1, this.p2, this.p3);\r\n    if (this.p1 === undefined || this.p2 === undefined) {\r\n      // this.toast.error(`Enter Data!`, '', {\r\n      //   timeOut: 3000,\r\n      //   progressBar: true,\r\n      //   tapToDismiss: true,\r\n      //   closeButton: true,\r\n      //   easeTime: 300,\r\n      //   extendedTimeOut: 1000\r\n      // });\r\n\r\n      Swal.fire({\r\n        type: 'error',\r\n      \r\n        text: 'Enter Data ',\r\n      });\r\n      // //console.log(\"if\");\r\n    } else {\r\n      // //console.log(\"else\");\r\n      this.api.callProcedureService(extSysName, processCode, date).subscribe(\r\n        res => {\r\n          //console.log(res);\r\n          if (res) {\r\n\r\n            // this.snack.open('Processed Successfully!', 'OK', { duration: 4000 });\r\n            // this.toast.success(`Processed Successfully!`, '', {\r\n            //   timeOut: 3000,\r\n            //   progressBar: true,\r\n            //   tapToDismiss: true,\r\n            //   closeButton: true,\r\n            //   easeTime: 300,\r\n            //   extendedTimeOut: 1000\r\n            // });\r\n            Swal.fire(\r\n              \r\n              'Processed Successfully ',\r\n            \r\n            );\r\n          } else {\r\n\r\n            // this.snack.open('Process Failed!', 'OK', { duration: 4000 })\r\n            // this.toast.error(`Process Failed!`, '', {\r\n            //   timeOut: 3000,\r\n            //   progressBar: true,\r\n            //   tapToDismiss: true,\r\n            //   closeButton: true,\r\n            //   easeTime: 300,\r\n            //   extendedTimeOut: 1000\r\n            // });\r\n            Swal.fire({\r\n              type: 'error',\r\n             \r\n              text: 'Process Failed',\r\n            });\r\n          }\r\n        }\r\n      );\r\n    }\r\n\r\n  }\r\n\r\n  // this.excelUpload.callProcedureService(extSys1.extSys, extSys1.processName, date)\r\n  // .subscribe(res => {\r\n  //   //console.log(res);\r\n  //   this.result = res;\r\n  //   this.loader.close();\r\n  //   this.snack.open('Success!', 'OK', { duration: 4000 })\r\n  // },err => {\r\n  //   this.loader.close();\r\n  //   this.snack.open('Error!', 'OK', { duration: 4000 })\r\n  // });\r\n\r\n  // this.dataFromresponse = this.excelMasterData;\r\n\r\n  // }\r\n\r\n\r\n\r\n  getProcessData() {\r\n    //console.log('get process call');\r\n    this.excelUpload.getProcessDataMethod().subscribe(response => {\r\n      this.responseData = response;\r\n      //console.log(this.responseData);\r\n    });\r\n  }\r\n\r\n}\r\n","export class ExcelMaster{\r\ncreditAmount : number;\r\ndebitAmount : number;\r\nexternalSystem : String\r\nid : number;\r\nnumberOfRecords : number;\r\nprocessFileName : String;\r\nprocessingDate : Date;\r\n}\r\n","export default \"body{\\r\\n    height: 100%;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdmlld3Mvc2lhcy12Mi9leGNlbC11cGxvYWQvZXhjZWwtdXBsb2FkLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxZQUFZO0FBQ2hCIiwiZmlsZSI6InNyYy9hcHAvdmlld3Mvc2lhcy12Mi9leGNlbC11cGxvYWQvZXhjZWwtdXBsb2FkLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJib2R5e1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG59Il19 */\"","import { Component, OnInit, ElementRef, ViewChild, ViewChildren } from '@angular/core';\r\nimport { HttpErrorResponse, HttpResponse } from '@angular/common/http';\r\nimport { ExternalSystem } from '../excel-mapping/externalSystem';\r\n//dummy url for file\r\nconst URL = 'http://localhost:3000/api/upload';\r\n\r\nimport { MatSnackBar } from '@angular/material';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { NgForm } from '@angular/forms';\r\nimport { ExcelProcessingService } from 'src/app/shared/services/sias2-services/excel-processing.service';\r\nimport { ExcelApiService } from 'src/app/shared/services/sias2-services/ExcelApiService';\r\nimport Swal from 'sweetalert2';\r\nimport { FileUploader } from 'ng2-file-upload';\r\n\r\n@Component({\r\n  selector: 'app-excel-upload',\r\n  templateUrl: './excel-upload.component.html',\r\n  styleUrls: ['./excel-upload.component.css']\r\n})\r\nexport class ExcelUploadComponent implements OnInit {\r\n  @ViewChildren('excelUpload') excelUploadForm:NgForm;\r\n  selectExt:any;\r\n  fileData:any;\r\n  pCode:any;\r\n\r\n  \r\n  extSysData: ExternalSystem[];\r\n  extSysData1: string[];\r\n  processData: ExternalSystem[];\r\n  extSystem: any;\r\n  message1: any;\r\n  perc: any;\r\n  res2: any;\r\n  pooja: any;\r\n  fileUpload: File = null;\r\n  fileUploadStatus = false;\r\n  response: any;\r\n  responseMsg: any;\r\n  responseError: any;\r\n  selectedFiles: FileList;\r\n  currentFileUpload: File;\r\n  statusCode: any;\r\n  processdata1: any;\r\n  processName: any = [];\r\n  poojaprocessdata: any[];\r\n  poojaext2: any;\r\n  poojaprocess2: any;\r\n  extSystem2: any;\r\n  processName2: any;\r\n  responseMsgUpload: string;\r\n  extSysCode: any;\r\n  extNameValue: any;\r\n\r\n  @ViewChildren('myInput')\r\n  myInputVariable: ElementRef;\r\n\r\n  constructor(private excelUpload: ExcelProcessingService,\r\n    private api: ExcelApiService,\r\n    private snackBar: MatSnackBar,\r\n    \r\n    private toast: ToastrService) { }\r\n\r\n  public uploader: FileUploader = new FileUploader({ url: URL, itemAlias: 'photo' });\r\n\r\n  ngOnInit() {\r\n    // this.getAllExternalSystem();\r\n    this.getAllExternalSystem();\r\n    this.uploader.onAfterAddingFile = (file) => { file.withCredentials = false; };\r\n    this.uploader.onCompleteItem = (item: any, response: any, status: any, headers: any) => {\r\n      //console.log('ImageUpload:uploaded:', item, status, response);\r\n      alert('File uploaded successfully');\r\n    };\r\n\r\n    // this.getAllExternalSystemCode();\r\n  }\r\n  openSnackBar(message: string, action: string) {\r\n    this.snackBar.open(message, action, {\r\n      duration: 2000\r\n    });\r\n  }\r\n\r\n  \r\n  getAllExternalSystem() {\r\n    //console.log('mathos call');\r\n    this.api.getAllExtCodeForUpdateMapping().subscribe(response => {\r\n      this.extSysData1 = response;\r\n      //console.log(this.extSysData1);\r\n    });\r\n  }\r\n\r\n  getExternalSystem(ext) {\r\n    //console.log(ext.extSys);\r\n    this.excelUpload.getProcessNameWithExtSys(ext.extSys).subscribe(response => {\r\n      this.processData = response;\r\n      //console.log(this.processData);\r\n      //console.log('process method end');\r\n    });\r\n  }\r\n\r\n  getProcess(extSysCode) {\r\n    //console.log(extSysCode);\r\n    this.api.getProcessNameByExtSysCodeForUpdateMapping(extSysCode).subscribe(response => {\r\n      this.pooja = response;\r\n\r\n      this.processName = this.pooja;\r\n      //console.log(this.processName);\r\n      this.getExtSysNameByExtSysCode(extSysCode);\r\n      //console.log('process method end');\r\n    });\r\n  }\r\n\r\n  getExtSysNameByExtSysCode(extSysCode) {\r\n    //console.log(extSysCode);\r\n    this.api.getExtSysNameByExtSysCode(extSysCode)\r\n      .subscribe(data => {\r\n        this.extNameValue = data;\r\n        //this.poojaext2=\r\n        //console.log(this.extNameValue);\r\n        // //console.log(this.extSysCode);\r\n      });\r\n  }\r\n\r\n  // getProcess(extSysName) {\r\n  //   //console.log(extSysName);\r\n  //   this.api.getProcessNameWithExtSys(extSysName).subscribe(response => {\r\n  //     this.pooja = response;\r\n\r\n  //     this.processName = this.pooja;\r\n  //     //console.log(this.processName);\r\n  //     //console.log(this.poojaprocessdata);\r\n  //     //console.log('process method end');\r\n  //   });\r\n  // }\r\n  //used in upload\r\n  getProcessName1(processCode, extSysCode) {\r\n    //console.log(processCode);\r\n    //console.log(extSysCode);\r\n    this.poojaext2 = extSysCode;\r\n    this.poojaprocess2 = processCode;\r\n\r\n  }\r\n\r\n  handleFileInput(file: FileList) {\r\n    this.fileUpload = file.item(0);\r\n    var reader = new FileReader();\r\n  }\r\n\r\n\r\n  selectFile(event) {\r\n    this.selectedFiles = event.target.files;\r\n  }\r\n  upload() {\r\n    this.openSnackBar(\"Excel upload just started please wait\",\"\");\r\n    //console.log(\"model\");\r\n    //this.loader.open(\"Uploading Please wait...\");\r\n    //console.log(this.poojaext2);\r\n    //console.log(this.poojaprocess2);\r\n    this.extSysCode = this.poojaext2;\r\n    this.processName2 = this.poojaprocess2;\r\n    //console.log(this.extSysCode);\r\n    //console.log(this.processName2);\r\n    //console.log(this.responseMsgUpload)\r\n    //console.log(this.extNameValue)\r\n    this.currentFileUpload = this.selectedFiles.item(0);\r\n    //console.log(this.currentFileUpload);\r\n\r\n    this.excelUpload.pushFileToStorage(this.extNameValue, this.processName2, this.currentFileUpload,this.extSysCode)\r\n      .subscribe(event => {\r\n        this.res2 = event;\r\n        //console.log(this.res2)\r\n\r\n        //this.loader.close();\r\n        if (event) {\r\n          this.responseError = null;\r\n          if (event instanceof HttpResponse) {\r\n            //console.log(event.status);\r\n            //console.log(event.body);\r\n            if (event.status == 200) {\r\n              this.responseMsgUpload = \"\";\r\n              if (event.body == \"true\") {\r\n                this.fileUploadStatus = true;\r\n                this.responseError = null;\r\n                this.statusCode = null;\r\n                // this.snack.open('File Uploaded Successfully!', 'OK', { duration: 4000 })\r\n                this.openSnackBar('Excel Uploaded Successfully', '');\r\n                // this.toast.success(`File Uploaded Successfully!`, '', {\r\n                //   timeOut: 3000,\r\n                //   progressBar: true,\r\n                //   tapToDismiss: true,\r\n                //   closeButton: true,\r\n                //   easeTime: 300,\r\n                //   extendedTimeOut: 1000\r\n                // });\r\n                Swal.fire(\r\n                 \r\n                  'Excel Uploaded Successfully ',\r\n                  \r\n                );\r\n                \r\n              } else {\r\n                // this.snack.open('Upload Failed!', 'OK', { duration: 4000 })\r\n                this.openSnackBar('Upload Failed ', 'OK');\r\n                // this.toast.error(`Upload Failed !`, '', {\r\n                //   timeOut: 3000,\r\n                //   progressBar: true,\r\n                //   tapToDismiss: true,\r\n                //   closeButton: true,\r\n                //   easeTime: 300,\r\n                //   extendedTimeOut: 1000\r\n                // });\r\n                Swal.fire({\r\n                  type: 'error',\r\n                 \r\n                  text: 'Upload Failed ',\r\n                });\r\n              }\r\n\r\n            }\r\n\r\n\r\n          }\r\n\r\n        }\r\n      }, (error: any) => {\r\n\r\n        //this.loader.close();\r\n        if (HttpErrorResponse) {\r\n          // this.snack.open('Upload Failed Invalid File Format or Data!', 'OK', { duration: 4000 })\r\n          this.openSnackBar('Upload Failed Invalid File Format or Data','');\r\n          // this.toast.error(`Upload Failed Invalid File Format or Data!`, '', {\r\n          //   timeOut: 3000,\r\n          //   progressBar: true,\r\n          //   tapToDismiss: true,\r\n          //   closeButton: true,\r\n          //   easeTime: 300,\r\n          //   extendedTimeOut: 1000\r\n          // });\r\n          Swal.fire({\r\n            type: 'error',\r\n            \r\n            text: 'Upload Failed Invalid File Format or Data ',\r\n          });\r\n          if (this.statusCode == 0) {\r\n           this.openSnackBar('Upload Failed No Response', 'OK');\r\n            // this.toast.error(`Upload Failed No Response!`, '', {\r\n            //   timeOut: 3000,\r\n            //   progressBar: true,\r\n            //   tapToDismiss: true,\r\n            //   closeButton: true,\r\n            //   easeTime: 300,\r\n            //   extendedTimeOut: 1000\r\n            // });\r\n            Swal.fire({\r\n              type: 'error',\r\n             \r\n              text: 'Upload Failed No Response ',\r\n            });\r\n          }\r\n        }\r\n      });\r\n\r\n  }\r\n\r\n  reset(){\r\n    this.processName = [];\r\n    this.excelUploadForm.reset();\r\n  }\r\n}\r\n","export default \"table {\\n  border-collapse: initial;\\n  width: 100%;\\n  text-align: center !important;\\n}\\n\\n:host ::ng-deep .mat-sort-header-container {\\n  display: flex;\\n  justify-content: center;\\n}\\n\\nth.mat-header-cell, td.mat-cell {\\n  text-align: center;\\n}\\n\\n.mat-raised-button {\\n  width: -webkit-fit-content;\\n  width: -moz-fit-content;\\n  width: fit-content;\\n  height: 20px;\\n  line-height: 27px;\\n  min-height: 27px;\\n  vertical-align: top;\\n  font-size: 11px;\\n  padding: 0 0;\\n  margin: 0;\\n}\\n\\n.mat-header-cell {\\n  text-align: center;\\n  height: 25px !important;\\n}\\n\\n.mat-cell {\\n  text-align: center;\\n  height: 25px !important;\\n}\\n\\ntr:nth-child(even) {\\n  height: 25px !important;\\n}\\n\\nth {\\n  font-weight: small;\\n  height: 25px !important;\\n  text-align: center;\\n}\\n\\ntr {\\n  font-weight: small;\\n  height: 25px !important;\\n  text-align: center;\\n}\\n\\nmat-paginator {\\n  width: auto !important;\\n  height: 40px !important;\\n}\\n\\nmd-pagination-wrapper {\\n  width: auto !important;\\n  height: 40px !important;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdmlld3Mvc2lhcy12Mi9leHQtc3lzLWxpc3QvRjpcXG11dGh1LW9uYm9hcmRcXG1lZGlhbi1waDItdWkvc3JjXFxhcHBcXHZpZXdzXFxzaWFzLXYyXFxleHQtc3lzLWxpc3RcXGV4dC1zeXMtbGlzdC5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvdmlld3Mvc2lhcy12Mi9leHQtc3lzLWxpc3QvZXh0LXN5cy1saXN0LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBO0VBQ0Usd0JBQUE7RUFDQSxXQUFBO0VBQ0EsNkJBQUE7QUNBRjs7QURFQTtFQUNFLGFBQUE7RUFDQSx1QkFBQTtBQ0NGOztBREVBO0VBQ0Usa0JBQUE7QUNDRjs7QURDQTtFQUNFLDBCQUFBO0VBQUEsdUJBQUE7RUFBQSxrQkFBQTtFQUNBLFlBQUE7RUFDQSxpQkFBQTtFQUNBLGdCQUFBO0VBQ0EsbUJBQUE7RUFDQSxlQUFBO0VBQ0EsWUFBQTtFQUNBLFNBQUE7QUNFRjs7QURBQTtFQUNFLGtCQUFBO0VBQ0EsdUJBQUE7QUNHRjs7QURDQTtFQUNFLGtCQUFBO0VBQ0EsdUJBQUE7QUNFRjs7QURHQTtFQUNFLHVCQUFBO0FDQUY7O0FER0E7RUFDRSxrQkFBQTtFQUNBLHVCQUFBO0VBQ0Esa0JBQUE7QUNBRjs7QURFQTtFQUNFLGtCQUFBO0VBQ0EsdUJBQUE7RUFDQSxrQkFBQTtBQ0NGOztBRENBO0VBQ0Usc0JBQUE7RUFDQSx1QkFBQTtBQ0VGOztBRENBO0VBQ0Usc0JBQUE7RUFDQSx1QkFBQTtBQ0VGIiwiZmlsZSI6InNyYy9hcHAvdmlld3Mvc2lhcy12Mi9leHQtc3lzLWxpc3QvZXh0LXN5cy1saXN0LmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiICBcclxudGFibGUge1xyXG4gIGJvcmRlci1jb2xsYXBzZTogaW5pdGlhbDtcclxuICB3aWR0aDoxMDAlO1xyXG4gIHRleHQtYWxpZ246IGNlbnRlciAhaW1wb3J0YW50O1xyXG59XHJcbjpob3N0IDo6bmctZGVlcCAubWF0LXNvcnQtaGVhZGVyLWNvbnRhaW5lciB7IFxyXG4gIGRpc3BsYXk6IGZsZXg7ICBcclxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsgXHJcbn1cclxuXHJcbnRoLm1hdC1oZWFkZXItY2VsbCwgdGQubWF0LWNlbGwgeyBcclxuICB0ZXh0LWFsaWduOiBjZW50ZXI7IFxyXG59XHJcbi5tYXQtcmFpc2VkLWJ1dHRvbiB7XHJcbiAgd2lkdGg6IGZpdC1jb250ZW50O1xyXG4gIGhlaWdodDogMjBweDtcclxuICBsaW5lLWhlaWdodDogMjdweDtcclxuICBtaW4taGVpZ2h0OiAyN3B4O1xyXG4gIHZlcnRpY2FsLWFsaWduOiB0b3A7XHJcbiAgZm9udC1zaXplOiAxMXB4O1xyXG4gIHBhZGRpbmc6IDAgMDtcclxuICBtYXJnaW46IDA7XHJcbn1cclxuLm1hdC1oZWFkZXItY2VsbCB7XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gIGhlaWdodDogMjVweCAhaW1wb3J0YW50O1xyXG5cclxufVxyXG5cclxuLm1hdC1jZWxsIHtcclxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgaGVpZ2h0OiAyNXB4ICFpbXBvcnRhbnQ7XHJcblxyXG59XHJcblxyXG5cclxudHI6bnRoLWNoaWxkKGV2ZW4pIHtcclxuICBoZWlnaHQ6IDI1cHggIWltcG9ydGFudDtcclxufVxyXG5cclxudGgge1xyXG4gIGZvbnQtd2VpZ2h0OiBzbWFsbDtcclxuICBoZWlnaHQ6IDI1cHggIWltcG9ydGFudDtcclxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbn1cclxudHIge1xyXG4gIGZvbnQtd2VpZ2h0OiBzbWFsbDtcclxuICBoZWlnaHQ6IDI1cHggIWltcG9ydGFudDtcclxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbn1cclxubWF0LXBhZ2luYXRvciB7XHJcbiAgd2lkdGg6IGF1dG8gIWltcG9ydGFudDtcclxuICBoZWlnaHQ6IDQwcHggIWltcG9ydGFudDtcclxufVxyXG5cclxubWQtcGFnaW5hdGlvbi13cmFwcGVyIHtcclxuICB3aWR0aDogYXV0byAhaW1wb3J0YW50O1xyXG4gIGhlaWdodDogNDBweCAhaW1wb3J0YW50O1xyXG59XHJcblxyXG5cclxuXHJcblxyXG5cclxuIiwidGFibGUge1xuICBib3JkZXItY29sbGFwc2U6IGluaXRpYWw7XG4gIHdpZHRoOiAxMDAlO1xuICB0ZXh0LWFsaWduOiBjZW50ZXIgIWltcG9ydGFudDtcbn1cblxuOmhvc3QgOjpuZy1kZWVwIC5tYXQtc29ydC1oZWFkZXItY29udGFpbmVyIHtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG59XG5cbnRoLm1hdC1oZWFkZXItY2VsbCwgdGQubWF0LWNlbGwge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG5cbi5tYXQtcmFpc2VkLWJ1dHRvbiB7XG4gIHdpZHRoOiBmaXQtY29udGVudDtcbiAgaGVpZ2h0OiAyMHB4O1xuICBsaW5lLWhlaWdodDogMjdweDtcbiAgbWluLWhlaWdodDogMjdweDtcbiAgdmVydGljYWwtYWxpZ246IHRvcDtcbiAgZm9udC1zaXplOiAxMXB4O1xuICBwYWRkaW5nOiAwIDA7XG4gIG1hcmdpbjogMDtcbn1cblxuLm1hdC1oZWFkZXItY2VsbCB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgaGVpZ2h0OiAyNXB4ICFpbXBvcnRhbnQ7XG59XG5cbi5tYXQtY2VsbCB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgaGVpZ2h0OiAyNXB4ICFpbXBvcnRhbnQ7XG59XG5cbnRyOm50aC1jaGlsZChldmVuKSB7XG4gIGhlaWdodDogMjVweCAhaW1wb3J0YW50O1xufVxuXG50aCB7XG4gIGZvbnQtd2VpZ2h0OiBzbWFsbDtcbiAgaGVpZ2h0OiAyNXB4ICFpbXBvcnRhbnQ7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cblxudHIge1xuICBmb250LXdlaWdodDogc21hbGw7XG4gIGhlaWdodDogMjVweCAhaW1wb3J0YW50O1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG5cbm1hdC1wYWdpbmF0b3Ige1xuICB3aWR0aDogYXV0byAhaW1wb3J0YW50O1xuICBoZWlnaHQ6IDQwcHggIWltcG9ydGFudDtcbn1cblxubWQtcGFnaW5hdGlvbi13cmFwcGVyIHtcbiAgd2lkdGg6IGF1dG8gIWltcG9ydGFudDtcbiAgaGVpZ2h0OiA0MHB4ICFpbXBvcnRhbnQ7XG59Il19 */\"","import { Component, OnInit, Output, Input, ViewChild, ViewChildren, QueryList } from '@angular/core';\r\nimport { Router, NavigationExtras } from '@angular/router';\r\nimport { MatTableDataSource, MatPaginator, MatSort } from '@angular/material';\r\nimport { ExtsysClass } from '../ext-system/extsys-class';\r\nimport { ExcelApiService } from 'src/app/shared/services/sias2-services/ExcelApiService';\r\nimport { UsersService } from '../../users/users.service';\r\nimport { RoleService } from '../../roles1/roles.service';\r\nimport { permissionsLabels } from '../../roles1/models/fmosNewRolePermissions';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-ext-sys-list',\r\n  templateUrl: './ext-sys-list.component.html',\r\n  styleUrls: ['./ext-sys-list.component.scss']\r\n})\r\nexport class ExtSysListComponent implements OnInit {\r\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n  @ViewChildren(MatPaginator) paginator = new QueryList<MatPaginator>();\r\n  extdata: Array<ExtsysClass>;\r\n  roleObject: ExtsysClass;\r\n  userRoles: string[];\r\n  // roleCodes = new Roles();\r\n  // allRoles: Array<Roles>;\r\n  userRolesFromLogin: string;\r\n  loggedInUser: string;\r\n  displayedColumns: string[] = ['extSysName', 'extSysCode', 'processCode', 'authStatus', 'creatorDtStamp'];\r\n  dataSource: any;\r\n  pageSize: any;\r\n  pageIndex: any;\r\n  dataIndex: any;\r\n  user_id: any;\r\n  screenName: any;\r\n  role: any;\r\n  res: any;\r\n  rolepermission: any;\r\n  button_permission: any = {};\r\n\r\n  @Input() userUpdate: ExtsysClass;\r\n  // allRoles: Array<ExtsysClass>;\r\n  @Output()\r\n  modifyRoleObject: ExtsysClass;\r\n  constructor(private extService: ExcelApiService, private router: Router,\r\n    private roleService: RoleService,\r\n    private userApi: UsersService,) { }\r\n  roleCodes = new permissionsLabels();\r\n  ngOnInit() {\r\n\r\n    setTimeout(() => {\r\n      this.newRolePermissions();\r\n    }, 2000);\r\n    this.roleService.screenLabelList.subscribe(message => this.roleCodes = message);\r\n\r\n\r\n    this.userRolesFromLogin = localStorage.getItem('userRolesFromLogin');\r\n    this.user_id = sessionStorage.getItem('user_id');\r\n    this.role = sessionStorage.getItem('user_role');\r\n\r\n\r\n    // this.userRoles = this.userRolesFromLogin.split(',');\r\n    this.loggedInUser = localStorage.getItem('currentUser');\r\n    this.getExtSysList();\r\n    // this.screenpermission();\r\n  }\r\n  screenpermission() {\r\n    this.screenName = 'roles';\r\n    // this.role='ROLE1';\r\n    this.userApi.getRoleScreenPermission(this.user_id, this.screenName, this.role).subscribe(res => {\r\n      this.rolepermission = res;\r\n      // console.log(this.rolepermission);\r\n      if (this.rolepermission) {\r\n        this.button_permission = this.rolepermission[0];\r\n        // console.log( this.button_permission);\r\n      }\r\n    });\r\n\r\n  }\r\n  newRolePermissions() {\r\n    this.roleService.fetchScreenPermissions('Process Code Mapping');\r\n  }\r\n  getExtSysList() {\r\n    this.extService.getAllExtSys().subscribe(data => {\r\n      this.extdata = data;\r\n      console.log(this.extdata);\r\n      // this.dataSource = data;\r\n      this.dataSource = new MatTableDataSource<ExtsysClass>(this.extdata);\r\n      this.dataSource.paginator = this.paginator.toArray()[0];\r\n      this.dataSource.sort = this.sort;\r\n      // console.log(this.extdata);\r\n      // this.allUsers.paginator = this.paginator;\r\n    });\r\n  }\r\n  applyFilter(filterValue) {\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n  // getExtSys(i: number) {\r\n  getExtSys(element) {\r\n    console.log(\"element\", element);\r\n    const navigationExtras: NavigationExtras = {\r\n      queryParams: {\r\n\r\n        id: element.id,\r\n        extSysCode: element.extSysCode,\r\n        extSysName: element.extSysName,\r\n        commChannel: element.commChannel,\r\n        creatorDtStamp: element.creatorDtStamp,\r\n        creatorId: element.creatorId,\r\n        destination: element.destination,\r\n        destinationTag: element.destinationTag,\r\n        dtdFile: element.dtdFile,\r\n        errDirectoryName: element.errDirectoryName,\r\n        errQueueName: element.errQueueName,\r\n        errSchemaName: element.errSchemaName,\r\n        errXsltName: element.errXsltName,\r\n        extSysTag: element.extSysTag,\r\n        formatType: element.formatType,\r\n        isDestNode: element.isDestNode,\r\n        isExtSysNode: element.isExtSysNode,\r\n        isModuleNode: element.isModuleNode,\r\n        isProcessNode: element.isProcessNode,\r\n        isServiceNode: element.isServiceNode,\r\n        latestAmendNo: element.latestAmendNo,\r\n        messageType: element.messageType,\r\n        moduleCode: element.moduleCode,\r\n        moduleTag: element.moduleTag,\r\n        msgDuplication: element.msgDuplication,\r\n        processCode: element.processCode,\r\n        processTag: element.processTag,\r\n        recordStatus: element.recordStatus,\r\n        reqDirectoryName: element.reqDirectoryName,\r\n        reqQueueName: element.reqQueueName,\r\n        reqSchemaName: element.reqSchemaName,\r\n        reqXsltName: element.reqXsltName,\r\n        requestTag: element.requestTag,\r\n        respDirectoryName: element.respDirectoryName,\r\n        respQueueName: element.respQueueName,\r\n        respSchemaName: element.respSchemaName,\r\n        respXsltName: element.respXsltName,\r\n        responseTag: element.responseTag,\r\n        serviceCode: element.serviceCode,\r\n        serviceTag: element.serviceTag,\r\n        updatedAt: element.updatedAt,\r\n        verifiedEver: element.verifiedEver,\r\n        verifierDtStamp: element.verifierDtStamp,\r\n        verifierId: element.verifierId,\r\n        xsdFile: element.xsdFile,\r\n        authStatus: element.authStatus,\r\n        updatedBy: element.updatedBy,\r\n        fristTimeAuth: element.fristTimeAuth,\r\n        versionNo: element.versionNo,\r\n        maxUploadLimit: element.maxUploadLimit,\r\n        fileName: element.fileName,\r\n        bdav: element.bdav,\r\n        backDateAllow: element.backDateAllow,\r\n        futureDateAllow: element.futureDateAllow,\r\n        fdav: element.fdav,\r\n        acft: element.acft,\r\n        autoUpload: element.autoUpload,\r\n        filePath: element.filePath,\r\n        fcyvariance: element.fCYRateVariance,\r\n        fcypercenatage: element.fCYPercentage,\r\n        userName: element.sftpUsername,\r\n        password: element.sftpPassword,\r\n        port: element.sftpPort,\r\n        ipAddress: element.sftpIpaddress,\r\n        sftpRequired: element.sftpRequired,\r\n        path: element.sftpPath,\r\n        mandatoryFieldImposed: element.mandatoryFieldImposed,\r\n        treasuryrefRequired:element.treasuryrefRequired,\r\n        wuFile:element.wuFile,\r\n        //ADDED VERIFIED ONCE BY VIDYA FOR ISSUE ID 583\r\n        verifiedOnce:element.verifiedOnce\r\n      }\r\n    };\r\n    console.log(\"in summary  to edir\" + element);\r\n    this.router.navigate(['/sias-v2/updateMaintanance'], navigationExtras);\r\n  }\r\n\r\n\r\n  onPaginateChange(event) {\r\n    //console.log(event);\r\n    // //console.log(this.pageSize);\r\n    this.pageSize = event.pageSize;\r\n    this.pageIndex = event.pageIndex;\r\n    //console.log(event.pageSize);\r\n    //console.log(event.pageIndex);\r\n  }\r\n}\r\n","export default \"table {\\n  width: 100%;\\n}\\n\\nth {\\n  /* text-align: center;\\n   */\\n  align-content: center;\\n}\\n\\ntable td {\\n  padding-right: 50px;\\n}\\n\\n#customers {\\n  font-family: \\\"Trebuchet MS\\\", Arial, Helvetica, sans-serif;\\n  border-collapse: collapse;\\n  width: 100%;\\n}\\n\\n#customers td, #customers th {\\n  border: 1px solid #ddd;\\n  padding: 8px;\\n  text-align: center;\\n}\\n\\n#customers tr:nth-child(even) {\\n  background-color: #f2f2f2;\\n}\\n\\n#customers th {\\n  padding-top: 12px;\\n  padding-bottom: 12px;\\n  text-align: left;\\n  background-color: #61b2d8;\\n  color: white;\\n}\\n\\n.mat-raised-button {\\n  width: -webkit-fit-content;\\n  width: -moz-fit-content;\\n  width: fit-content;\\n  height: 20px;\\n  line-height: 27px;\\n  min-height: 27px;\\n  vertical-align: top;\\n  font-size: 11px;\\n  padding: 0 0;\\n  margin: 0;\\n}\\n\\n::ng-deep .mat-form-field-appearance-outline .mat-form-field-outline {\\n  color: black !important;\\n}\\n\\nmat-card mat-form-field {\\n  font-size: 12px;\\n}\\n\\nmat-card a {\\n  font-size: 11px;\\n}\\n\\nmat-card p {\\n  font-size: 11px;\\n}\\n\\nmat-label, mat-checkbox {\\n  color: black;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdmlld3Mvc2lhcy12Mi9leHQtc3lzdGVtL0Y6XFxtdXRodS1vbmJvYXJkXFxtZWRpYW4tcGgyLXVpL3NyY1xcYXBwXFx2aWV3c1xcc2lhcy12MlxcZXh0LXN5c3RlbVxcZXh0LXN5c3RlbS5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvdmlld3Mvc2lhcy12Mi9leHQtc3lzdGVtL2V4dC1zeXN0ZW0uY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxXQUFBO0FDQ0o7O0FERUU7RUFDRTtJQUFBO0VBRUYscUJBQUE7QUNDRjs7QURDRTtFQUNFLG1CQUFBO0FDRUo7O0FEQ0U7RUFDRSx5REFBQTtFQUNBLHlCQUFBO0VBQ0EsV0FBQTtBQ0VKOztBRENFO0VBQ0Usc0JBQUE7RUFDQSxZQUFBO0VBQ0Esa0JBQUE7QUNFSjs7QURDRTtFQUE4Qix5QkFBQTtBQ0doQzs7QURERTtFQUNFLGlCQUFBO0VBQ0Esb0JBQUE7RUFDQSxnQkFBQTtFQUNBLHlCQUFBO0VBQ0EsWUFBQTtBQ0lKOztBRERFO0VBQ0UsMEJBQUE7RUFBQSx1QkFBQTtFQUFBLGtCQUFBO0VBQ0EsWUFBQTtFQUNBLGlCQUFBO0VBQ0EsZ0JBQUE7RUFDQSxtQkFBQTtFQUNBLGVBQUE7RUFDQSxZQUFBO0VBQ0EsU0FBQTtBQ0lKOztBREZFO0VBQ0UsdUJBQUE7QUNLSjs7QURGRTtFQUNFLGVBQUE7QUNLSjs7QURIRTtFQUNFLGVBQUE7QUNNSjs7QURKRTtFQUNFLGVBQUE7QUNPSjs7QURKRTtFQUVFLFlBQUE7QUNNSiIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL3NpYXMtdjIvZXh0LXN5c3RlbS9leHQtc3lzdGVtLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsidGFibGUge1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgfVxyXG4gIFxyXG4gIHRoe1xyXG4gICAgLyogdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgICovXHJcbiAgYWxpZ24tY29udGVudDogY2VudGVyO1xyXG4gIH1cclxuICB0YWJsZSB0ZCB7XHJcbiAgICBwYWRkaW5nLXJpZ2h0OiA1MHB4O1xyXG4gIH1cclxuICBcclxuICAjY3VzdG9tZXJzIHtcclxuICAgIGZvbnQtZmFtaWx5OiBcIlRyZWJ1Y2hldCBNU1wiLCBBcmlhbCwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmO1xyXG4gICAgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gIH1cclxuICBcclxuICAjY3VzdG9tZXJzIHRkLCAjY3VzdG9tZXJzIHRoIHtcclxuICAgIGJvcmRlcjogMXB4IHNvbGlkICNkZGQ7XHJcbiAgICBwYWRkaW5nOiA4cHg7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgfVxyXG4gIFxyXG4gICNjdXN0b21lcnMgdHI6bnRoLWNoaWxkKGV2ZW4pe2JhY2tncm91bmQtY29sb3I6ICNmMmYyZjI7fVxyXG4gIFxyXG4gICNjdXN0b21lcnMgdGgge1xyXG4gICAgcGFkZGluZy10b3A6IDEycHg7XHJcbiAgICBwYWRkaW5nLWJvdHRvbTogMTJweDtcclxuICAgIHRleHQtYWxpZ246IGxlZnQ7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOnJnYig5NywgMTc4LCAyMTYpO1xyXG4gICAgY29sb3I6IHdoaXRlO1xyXG4gIH1cclxuICBcclxuICAubWF0LXJhaXNlZC1idXR0b24ge1xyXG4gICAgd2lkdGg6IGZpdC1jb250ZW50O1xyXG4gICAgaGVpZ2h0OiAyMHB4O1xyXG4gICAgbGluZS1oZWlnaHQ6IDI3cHg7XHJcbiAgICBtaW4taGVpZ2h0OiAyN3B4O1xyXG4gICAgdmVydGljYWwtYWxpZ246IHRvcDtcclxuICAgIGZvbnQtc2l6ZTogMTFweDtcclxuICAgIHBhZGRpbmc6IDAgMDtcclxuICAgIG1hcmdpbjogMDtcclxuICB9XHJcbiAgOjpuZy1kZWVwIC5tYXQtZm9ybS1maWVsZC1hcHBlYXJhbmNlLW91dGxpbmUgLm1hdC1mb3JtLWZpZWxkLW91dGxpbmUge1xyXG4gICAgY29sb3I6IGJsYWNrICFpbXBvcnRhbnQ7XHJcbiAgfVxyXG4gIFxyXG4gIG1hdC1jYXJkIG1hdC1mb3JtLWZpZWxkIHtcclxuICAgIGZvbnQtc2l6ZTogMTJweDtcclxuICB9XHJcbiAgbWF0LWNhcmQgYSB7XHJcbiAgICBmb250LXNpemU6IDExcHg7XHJcbiAgfVxyXG4gIG1hdC1jYXJkIHAge1xyXG4gICAgZm9udC1zaXplOiAxMXB4O1xyXG4gIH1cclxuICBcclxuICBtYXQtbGFiZWwgLG1hdC1jaGVja2JveFxyXG4gIHtcclxuICAgIGNvbG9yOiBibGFja1xyXG4gIH0iLCJ0YWJsZSB7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG50aCB7XG4gIC8qIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICovXG4gIGFsaWduLWNvbnRlbnQ6IGNlbnRlcjtcbn1cblxudGFibGUgdGQge1xuICBwYWRkaW5nLXJpZ2h0OiA1MHB4O1xufVxuXG4jY3VzdG9tZXJzIHtcbiAgZm9udC1mYW1pbHk6IFwiVHJlYnVjaGV0IE1TXCIsIEFyaWFsLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7XG4gIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG4jY3VzdG9tZXJzIHRkLCAjY3VzdG9tZXJzIHRoIHtcbiAgYm9yZGVyOiAxcHggc29saWQgI2RkZDtcbiAgcGFkZGluZzogOHB4O1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG5cbiNjdXN0b21lcnMgdHI6bnRoLWNoaWxkKGV2ZW4pIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2YyZjJmMjtcbn1cblxuI2N1c3RvbWVycyB0aCB7XG4gIHBhZGRpbmctdG9wOiAxMnB4O1xuICBwYWRkaW5nLWJvdHRvbTogMTJweDtcbiAgdGV4dC1hbGlnbjogbGVmdDtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzYxYjJkODtcbiAgY29sb3I6IHdoaXRlO1xufVxuXG4ubWF0LXJhaXNlZC1idXR0b24ge1xuICB3aWR0aDogZml0LWNvbnRlbnQ7XG4gIGhlaWdodDogMjBweDtcbiAgbGluZS1oZWlnaHQ6IDI3cHg7XG4gIG1pbi1oZWlnaHQ6IDI3cHg7XG4gIHZlcnRpY2FsLWFsaWduOiB0b3A7XG4gIGZvbnQtc2l6ZTogMTFweDtcbiAgcGFkZGluZzogMCAwO1xuICBtYXJnaW46IDA7XG59XG5cbjo6bmctZGVlcCAubWF0LWZvcm0tZmllbGQtYXBwZWFyYW5jZS1vdXRsaW5lIC5tYXQtZm9ybS1maWVsZC1vdXRsaW5lIHtcbiAgY29sb3I6IGJsYWNrICFpbXBvcnRhbnQ7XG59XG5cbm1hdC1jYXJkIG1hdC1mb3JtLWZpZWxkIHtcbiAgZm9udC1zaXplOiAxMnB4O1xufVxuXG5tYXQtY2FyZCBhIHtcbiAgZm9udC1zaXplOiAxMXB4O1xufVxuXG5tYXQtY2FyZCBwIHtcbiAgZm9udC1zaXplOiAxMXB4O1xufVxuXG5tYXQtbGFiZWwsIG1hdC1jaGVja2JveCB7XG4gIGNvbG9yOiBibGFjaztcbn0iXX0= */\"","import { Component, OnInit, ViewChild, ChangeDetectorRef, ViewChildren } from '@angular/core';\r\nimport { ExtsysClass } from './extsys-class';\r\n\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { MatSnackBar, MatButton } from '@angular/material';\r\n\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { ExcelApiService } from 'src/app/shared/services/sias2-services/ExcelApiService';\r\nimport { ExcelProcessingService } from 'src/app/shared/services/sias2-services/excel-processing.service';\r\nimport Swal from 'sweetalert2';\r\n\r\nexport interface Food {\r\n  value: string;\r\n  viewValue: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-ext-system',\r\n  templateUrl: './ext-system.component.html',\r\n  styleUrls: ['./ext-system.component.scss']\r\n})\r\nexport class ExtSystemComponent implements OnInit {\r\n\r\n  @ViewChildren(MatButton) saveBtn: MatButton;\r\n\r\n  createExtSys1: ExtsysClass = new ExtsysClass();\r\n  loggedInUser: string;\r\n  space=false;\r\n  enablefilebrowser: boolean = false;\r\n  responseError: any;\r\n  extdata: string[];\r\n  data: string[];\r\n  createExtSys2: string;\r\n  dataForm: any;\r\n  savebutton: boolean;\r\n  savebutton1: any;\r\n  currentUser: any;\r\n  extSysCode: string | undefined;\r\n  backDateAllow: boolean;\r\n  futureDateAllow: boolean;\r\n  acft: boolean;\r\n  is_edit: boolean;\r\n  is_edit1: boolean;\r\n  is_sftp: any;\r\n  backdate: any;\r\n  enablesubmit: boolean;\r\n  constructor(private apiService: ExcelApiService,\r\n    private api: ExcelProcessingService,\r\n    private snack: MatSnackBar,\r\n\r\n    private toast: ToastrService,\r\n    private cdr: ChangeDetectorRef) {\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    // this.savebutton = true;\r\n    // this.savebutton1 = false;\r\n    localStorage.setItem(\"userIdForChangePassword\", localStorage.getItem(\"currentUser\"));\r\n    this.loggedInUser = localStorage.getItem(\"userIdForChangePassword\");\r\n    // this.getExt();\r\n    this.getAuthorizedExt();\r\n    this.currentUser = localStorage.getItem(\"currentUser\");\r\n    this.createExtSys1.autoUpload=false;\r\n        this.createExtSys1.backDateAllow = false;\r\n    this.createExtSys1.futureDateAllow = false;\r\n    this.createExtSys1.fCYRateVariance=false;\r\n        this.createExtSys1.acft = false;\r\n    this.createExtSys1.mandatoryFieldImposed = false;\r\n    this.createExtSys1.sftpRequired= false;\r\n    this.createExtSys1.wuFile=false;\r\n    this.createExtSys1.treasuryrefRequired=false;\r\n  }\r\n  getExt() {\r\n    this.api.getAllExt().subscribe(data => {\r\n      this.extdata = data;\r\n      this.data = this.extdata;\r\n      //console.log(data);\r\n    });\r\n    //console.log(this.extdata);\r\n  }\r\n\r\n  getAuthorizedExt() {\r\n    //console.log(\"on get Of Auth\")\r\n    this.api.getAuthorizedExt().subscribe(data => {\r\n      this.extdata = data;\r\n      this.data = this.extdata;\r\n      //console.log(\"getAuthorizedExt : \", data);\r\n    });\r\n    //console.log(this.extdata);\r\n\r\n  }\r\n  getProcess(extSysCode) {\r\n    //console.log(\"vlaue:::\", extSysCode);\r\n    // this.createExtSys2 = extSysCode.extSysName;\r\n    //console.log(this.createExtSys2);\r\n\r\n    this.createExtSys1.extSysName = extSysCode.extSysName;\r\n\r\n  }\r\n  save(extSysCode) {\r\n\r\n    this.savebutton = true;\r\n    this.savebutton1 = true;\r\n\r\n    this.createExtSys1.creatorId = this.loggedInUser;\r\n    this.createExtSys1.extSysCode = extSysCode.extSysCode;\r\n    this.createExtSys1.extSysName = extSysCode.extSysName;\r\n    // this.createExtSys1.autoUpload = this.enablefilebrowser;\r\n\r\n\r\n\r\n    if (this.createExtSys1.processCode) {\r\n      console.log(this.createExtSys1);\r\n      this.apiService.createExtSys(this.createExtSys1)\r\n        .subscribe(data => {\r\n          this.dataForm = data;\r\n          console.log(this.dataForm);\r\n          //console.log(data);\r\n\r\n          if (this.dataForm != null) {\r\n            this.savebutton=true;\r\n            this.enablesubmit=true;\r\n            Swal.fire(\r\n\r\n              'Data Saved successfully.',\r\n             \r\n            );\r\n            //console.log(\"before 1\",this.dataForm.authStatus);\r\n            if (this.dataForm.authStatus === 'U') {\r\n              this.dataForm.authStatus = 'UNAUTHORIZED'\r\n            }\r\n            //console.log(\"after 1\",this.dataForm.authStatus);\r\n\r\n            //console.log(\"record ststus\",this.dataForm.recordStatus);\r\n            if (this.dataForm.recordStatus === 'O') {\r\n              this.dataForm.recordStatus = 'OPEN'\r\n            }\r\n            //added by vidya for firstTimeAuth\r\n            if (this.dataForm.verifiedOnce === 'N') {\r\n              this.dataForm.verifiedOnce = 'NO'\r\n            }\r\n            //console.log(\"record ststus\",this.dataForm.recordStatus);\r\n            this.saveBtn.disabled = true;\r\n            this.createExtSys1 = this.dataForm;\r\n\r\n\r\n          } else {\r\n\r\n            Swal.fire({\r\n              type: 'error',\r\n\r\n              text: 'Choose another process code',\r\n            });\r\n          }\r\n        }, error => {\r\n          //console.log(error);\r\n\r\n          Swal.fire({\r\n            type: 'error',\r\n\r\n            text: 'Server Error',\r\n          });\r\n        });\r\n    } else {\r\n\r\n      Swal.fire({\r\n        type: 'error',\r\n\r\n        text: 'Enter all the fields ',\r\n      });\r\n    }\r\n\r\n\r\n  }\r\n  //future dating\r\n  getValue(event) {\r\n\r\n    this.createExtSys1.futureDateAllow = event.checked;\r\n    this.is_edit1 = event.checked;\r\n\r\n\r\n  }\r\n  //sftp\r\n  getValueSftp(event) {\r\n    this.createExtSys1.sftpRequired = event.checked;\r\n    this.is_sftp = event.checked;\r\n    console.log(this.createExtSys1.sftpRequired);\r\n  }\r\n  getValueMfI(event) {\r\n    this.createExtSys1.mandatoryFieldImposed = event.checked;\r\n    //this.mandatoryFieldImposed=event.checked;\r\n    console.log(this.createExtSys1.mandatoryFieldImposed);\r\n  }\r\n  getwuFileValue(event)\r\n  {\r\n    this.createExtSys1.wuFile=event.checked\r\n  }\r\n  //fcy\r\n  getValueOfFCYrateVariance(event) {\r\n    this.createExtSys1.fCYRateVariance = event.checked;\r\n    this.is_edit=event.checked;\r\n    \r\n    console.log(this.createExtSys1.fCYRateVariance);\r\n  }\r\n  getValue2(event) {\r\n    console.log(event.checked);\r\n    this.createExtSys1.acft = event.checked;\r\n\r\n  }\r\n  \r\n  checkCheckBoxvalue1(event) {\r\n    console.log(event.checked);\r\n\r\n    this.enablefilebrowser = event.checked;\r\n\r\n    this.createExtSys1.autoUpload = event.checked;\r\n    \r\n\r\n  }\r\n  //back dating\r\n  checkCheckBoxvalue(event) {\r\n    console.log(event.checked);\r\n    this.createExtSys1.backDateAllow = event.checked;\r\n    this.backdate = event.checked;\r\n  }\r\n\r\n\r\n  paginationDetail = new BehaviorSubject(\r\n    {\r\n      length: 10,\r\n      pageIndex: 0,\r\n      pageSize: 10\r\n    });\r\n    //issue Id 532-->check box for treasury ref  added by vidya\r\n    treasuryRequired(event)\r\n    {\r\n      this.createExtSys1.treasuryrefRequired = event.checked;\r\n      console.log(this.createExtSys1.treasuryrefRequired)\r\n    }\r\n\t\r\n\t  fun(extSysName)\r\n  {\r\n    console.log(extSysName);\r\n    console.log(\"enters inside fn\")\r\n   const result=extSysName.trim();\r\n   console.log(result);\r\nif(result)\r\n{\r\n console.log(\"valid string\");\r\n \r\n this.space=true;\r\n \r\n console.log(this.space);\r\n}\r\nelse{\r\n console.log(\"invalid string\");\r\n this.space=false;\r\n \r\n   // this.submitted = false;\r\n   console.log(this.space);\r\n\r\n}\r\n}\r\n}\r\n","export class ExtsysClass {\r\n    id: number;\r\n    action: string;\r\n    filePath: string;\r\n    commChannel: string;\r\n    createdAt: string;\r\n    creatorDtStamp: Date;\r\n    creatorId: string;\r\n    destination: string;\r\n    destinationTag: string;\r\n    dtdFile: string;\r\n    errDirectoryName: string;\r\n    errQueueName: string;\r\n    errSchemaName: string;\r\n    errXsltName: string;\r\n    extSysCode: string;\r\n    extSysName: string;\r\n    extSysTag: string;\r\n    formatType: string;\r\n    isDestNode: string;\r\n    isExtSysNode: string;\r\n    isModuleNode: string;\r\n    isProcessNode: string;\r\n    isServiceNode: string;\r\n    latestAmendNo: string;\r\n    messageType: string;\r\n    moduleCode: string;\r\n    moduleTag: string;\r\n    msgDuplication: string;\r\n    processCode: string;\r\n    processTag: string;\r\n    recordStatus: string;\r\n    reqDirectoryName: string;\r\n    reqQueueName: string;\r\n    reqSchemaName: string;\r\n    reqXsltName: string;\r\n    requestTag: string;\r\n    respDirectoryName: string;\r\n    respQueueName: string;\r\n    respSchemaName: string;\r\n    respXsltName: string;\r\n    responseTag: string;\r\n    serviceCode: string;\r\n    serviceTag: string;\r\n    updatedAt: string;\r\n    verifiedEver: string;\r\n    verifierDtStamp: string;\r\n    verifierId: string;\r\n    xsdFile: File;\r\n    // dtdFile: File;\r\n    authStatus: string;\r\n    updatedBy: string;\r\n    fristTimeAuth: string;\r\n    versionNo: number;\r\n    maxUploadLimit: number;\r\n    fileName: string;\r\n    bdav: any;\r\n    backDateAllow: any;\r\n    futureDateAllow: any;\r\n    fdav: any;\r\n    acft: any;\r\n    autoUpload: any;\r\n    fCYRateVariance: any;\r\n    fCYPercentage: any;\r\n    //sftp maintenance========\r\n    sftpUsername: string;\r\n    sftpPassword: string;\r\n    sftpIpaddress: string;\r\n    sftpPort: string;\r\n    sftpPath: string;\r\n    sftpRequired: any;\r\n    mandatoryFieldImposed:any;\r\n    treasuryrefRequired:any;\r\n\r\n    wuFile:any;\r\n\r\n    //added verifiedOnce for issue id--583\r\n    verifiedOnce:any\r\n}\r\n","export default \"table {\\n  border-collapse: initial;\\n  width: 100%;\\n  text-align: center !important;\\n}\\n\\n:host ::ng-deep .mat-sort-header-container {\\n  display: flex;\\n  justify-content: center;\\n}\\n\\nth.mat-header-cell, td.mat-cell {\\n  text-align: center;\\n}\\n\\n.mat-raised-button {\\n  width: -webkit-fit-content;\\n  width: -moz-fit-content;\\n  width: fit-content;\\n  height: 20px;\\n  line-height: 27px;\\n  min-height: 27px;\\n  vertical-align: top;\\n  font-size: 11px;\\n  padding: 0 0;\\n  margin: 0;\\n}\\n\\n.mat-header-cell {\\n  text-align: center;\\n  height: 25px !important;\\n}\\n\\n.mat-cell {\\n  text-align: center;\\n  height: 25px !important;\\n}\\n\\ntr:nth-child(even) {\\n  height: 25px !important;\\n}\\n\\nth {\\n  font-weight: small;\\n  height: 25px !important;\\n  text-align: center;\\n}\\n\\ntr {\\n  font-weight: small;\\n  height: 25px !important;\\n  text-align: center;\\n}\\n\\nmat-paginator {\\n  width: auto !important;\\n  height: 40px !important;\\n}\\n\\nmd-pagination-wrapper {\\n  width: auto !important;\\n  height: 40px !important;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdmlld3Mvc2lhcy12Mi9leHRzdW1tYXJ5L0Y6XFxtdXRodS1vbmJvYXJkXFxtZWRpYW4tcGgyLXVpL3NyY1xcYXBwXFx2aWV3c1xcc2lhcy12MlxcZXh0c3VtbWFyeVxcZXh0c3VtbWFyeS5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvdmlld3Mvc2lhcy12Mi9leHRzdW1tYXJ5L2V4dHN1bW1hcnkuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUE7RUFDRSx3QkFBQTtFQUNBLFdBQUE7RUFDQSw2QkFBQTtBQ0RGOztBREdBO0VBQ0UsYUFBQTtFQUNBLHVCQUFBO0FDQUY7O0FER0E7RUFDRSxrQkFBQTtBQ0FGOztBREVBO0VBQ0UsMEJBQUE7RUFBQSx1QkFBQTtFQUFBLGtCQUFBO0VBQ0EsWUFBQTtFQUNBLGlCQUFBO0VBQ0EsZ0JBQUE7RUFDQSxtQkFBQTtFQUNBLGVBQUE7RUFDQSxZQUFBO0VBQ0EsU0FBQTtBQ0NGOztBRENBO0VBQ0Usa0JBQUE7RUFDQSx1QkFBQTtBQ0VGOztBREVBO0VBQ0Usa0JBQUE7RUFDQSx1QkFBQTtBQ0NGOztBRElBO0VBQ0UsdUJBQUE7QUNERjs7QURJQTtFQUNFLGtCQUFBO0VBQ0EsdUJBQUE7RUFDQSxrQkFBQTtBQ0RGOztBREdBO0VBQ0Usa0JBQUE7RUFDQSx1QkFBQTtFQUNBLGtCQUFBO0FDQUY7O0FERUE7RUFDRSxzQkFBQTtFQUNBLHVCQUFBO0FDQ0Y7O0FERUE7RUFDRSxzQkFBQTtFQUNBLHVCQUFBO0FDQ0YiLCJmaWxlIjoic3JjL2FwcC92aWV3cy9zaWFzLXYyL2V4dHN1bW1hcnkvZXh0c3VtbWFyeS5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIlxyXG4gIFxyXG50YWJsZSB7XHJcbiAgYm9yZGVyLWNvbGxhcHNlOiBpbml0aWFsO1xyXG4gIHdpZHRoOjEwMCU7XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyICFpbXBvcnRhbnQ7XHJcbn1cclxuOmhvc3QgOjpuZy1kZWVwIC5tYXQtc29ydC1oZWFkZXItY29udGFpbmVyIHsgXHJcbiAgZGlzcGxheTogZmxleDsgIFxyXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyOyBcclxufVxyXG5cclxudGgubWF0LWhlYWRlci1jZWxsLCB0ZC5tYXQtY2VsbCB7IFxyXG4gIHRleHQtYWxpZ246IGNlbnRlcjsgXHJcbn1cclxuLm1hdC1yYWlzZWQtYnV0dG9uIHtcclxuICB3aWR0aDogZml0LWNvbnRlbnQ7XHJcbiAgaGVpZ2h0OiAyMHB4O1xyXG4gIGxpbmUtaGVpZ2h0OiAyN3B4O1xyXG4gIG1pbi1oZWlnaHQ6IDI3cHg7XHJcbiAgdmVydGljYWwtYWxpZ246IHRvcDtcclxuICBmb250LXNpemU6IDExcHg7XHJcbiAgcGFkZGluZzogMCAwO1xyXG4gIG1hcmdpbjogMDtcclxufVxyXG4ubWF0LWhlYWRlci1jZWxsIHtcclxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgaGVpZ2h0OiAyNXB4ICFpbXBvcnRhbnQ7XHJcblxyXG59XHJcblxyXG4ubWF0LWNlbGwge1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICBoZWlnaHQ6IDI1cHggIWltcG9ydGFudDtcclxuXHJcbn1cclxuXHJcblxyXG50cjpudGgtY2hpbGQoZXZlbikge1xyXG4gIGhlaWdodDogMjVweCAhaW1wb3J0YW50O1xyXG59XHJcblxyXG50aCB7XHJcbiAgZm9udC13ZWlnaHQ6IHNtYWxsO1xyXG4gIGhlaWdodDogMjVweCAhaW1wb3J0YW50O1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxufVxyXG50ciB7XHJcbiAgZm9udC13ZWlnaHQ6IHNtYWxsO1xyXG4gIGhlaWdodDogMjVweCAhaW1wb3J0YW50O1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxufVxyXG5tYXQtcGFnaW5hdG9yIHtcclxuICB3aWR0aDogYXV0byAhaW1wb3J0YW50O1xyXG4gIGhlaWdodDogNDBweCAhaW1wb3J0YW50O1xyXG59XHJcblxyXG5tZC1wYWdpbmF0aW9uLXdyYXBwZXIge1xyXG4gIHdpZHRoOiBhdXRvICFpbXBvcnRhbnQ7XHJcbiAgaGVpZ2h0OiA0MHB4ICFpbXBvcnRhbnQ7XHJcbn1cclxuXHJcblxyXG5cclxuXHJcblxyXG4iLCJ0YWJsZSB7XG4gIGJvcmRlci1jb2xsYXBzZTogaW5pdGlhbDtcbiAgd2lkdGg6IDEwMCU7XG4gIHRleHQtYWxpZ246IGNlbnRlciAhaW1wb3J0YW50O1xufVxuXG46aG9zdCA6Om5nLWRlZXAgLm1hdC1zb3J0LWhlYWRlci1jb250YWluZXIge1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbn1cblxudGgubWF0LWhlYWRlci1jZWxsLCB0ZC5tYXQtY2VsbCB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cblxuLm1hdC1yYWlzZWQtYnV0dG9uIHtcbiAgd2lkdGg6IGZpdC1jb250ZW50O1xuICBoZWlnaHQ6IDIwcHg7XG4gIGxpbmUtaGVpZ2h0OiAyN3B4O1xuICBtaW4taGVpZ2h0OiAyN3B4O1xuICB2ZXJ0aWNhbC1hbGlnbjogdG9wO1xuICBmb250LXNpemU6IDExcHg7XG4gIHBhZGRpbmc6IDAgMDtcbiAgbWFyZ2luOiAwO1xufVxuXG4ubWF0LWhlYWRlci1jZWxsIHtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBoZWlnaHQ6IDI1cHggIWltcG9ydGFudDtcbn1cblxuLm1hdC1jZWxsIHtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBoZWlnaHQ6IDI1cHggIWltcG9ydGFudDtcbn1cblxudHI6bnRoLWNoaWxkKGV2ZW4pIHtcbiAgaGVpZ2h0OiAyNXB4ICFpbXBvcnRhbnQ7XG59XG5cbnRoIHtcbiAgZm9udC13ZWlnaHQ6IHNtYWxsO1xuICBoZWlnaHQ6IDI1cHggIWltcG9ydGFudDtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuXG50ciB7XG4gIGZvbnQtd2VpZ2h0OiBzbWFsbDtcbiAgaGVpZ2h0OiAyNXB4ICFpbXBvcnRhbnQ7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cblxubWF0LXBhZ2luYXRvciB7XG4gIHdpZHRoOiBhdXRvICFpbXBvcnRhbnQ7XG4gIGhlaWdodDogNDBweCAhaW1wb3J0YW50O1xufVxuXG5tZC1wYWdpbmF0aW9uLXdyYXBwZXIge1xuICB3aWR0aDogYXV0byAhaW1wb3J0YW50O1xuICBoZWlnaHQ6IDQwcHggIWltcG9ydGFudDtcbn0iXX0= */\"","import { Component, OnInit, ViewChild, ViewChildren, QueryList } from '@angular/core';\r\nimport { ExcelExtsys } from '../excel-external-sys/excelExtSys';\r\nimport { MatPaginator, MatTableDataSource, MatSort } from '@angular/material';\r\n\r\nimport { ActivatedRoute, Router, NavigationExtras } from '@angular/router';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ExcelProcessingService } from 'src/app/shared/services/sias2-services/excel-processing.service';\r\nimport { ExcelApiService } from 'src/app/shared/services/sias2-services/ExcelApiService';\r\nimport { UsersService } from '../../users/users.service';\r\nimport { ExcelService } from 'src/app/shared/services/excel.service';\r\nimport { RoleService } from '../../roles1/roles.service';\r\nimport { permissionsLabels } from '../../roles1/models/fmosNewRolePermissions';\r\n\r\n\r\n@Component({\r\n  selector: 'app-extsummary',\r\n  templateUrl: './extsummary.component.html',\r\n  styleUrls: ['./extsummary.component.scss']\r\n})\r\nexport class ExtsummaryComponent implements OnInit {\r\n\r\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n  displayedColumns: string[] = ['extSysCode', 'extSysName', 'authStatus', 'modifiedTime'];\r\n  // dataSource = new MatTableDataSource<PeriodicElement>(ELEMENT_DATA);\r\n  //ExcelExtsys\r\n  formData: ExcelExtsys;\r\n  extdata: ExcelExtsys[];\r\n  dataSource: any;\r\n  pageSize: any;\r\n  pageIndex: any;\r\n  dataIndex: any;\r\n  user_id: any;\r\n  screenName: any;\r\n  role: any;\r\n  res: any;\r\n  rolepermission: any;\r\n  button_permission: any = {};\r\n  @ViewChildren(MatPaginator) paginator = new QueryList<MatPaginator>();\r\n  roleCodes = new permissionsLabels();\r\n  ngOnInit() {\r\n    setTimeout(() => {\r\n      this.newRolePermissions();\r\n    }, 2000);\r\n    this.roleService.screenLabelList.subscribe(message => this.roleCodes = message)\r\n    this.user_id = sessionStorage.getItem('user_id');\r\n    this.role = sessionStorage.getItem('user_role');\r\n\r\n    this.getExt();\r\n    // this.screenpermission();\r\n  }\r\n  newRolePermissions() {\r\n    this.roleService.fetchScreenPermissions('External Systems');\r\n  }\r\n  screenpermission() {\r\n    this.screenName = 'ExternalSystem';\r\n    // this.role='ROLE1';\r\n    this.userApi.getRoleScreenPermission(this.user_id, this.screenName, this.role).subscribe(res => {\r\n      this.rolepermission = res;\r\n      //console.log(this.rolepermission);\r\n      if (this.rolepermission) {\r\n        this.button_permission = this.rolepermission[0];\r\n        //console.log( this.button_permission);\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n  constructor(private api: ExcelProcessingService, private route: ActivatedRoute,\r\n    private http: HttpClient,\r\n    private router: Router,\r\n    private userApi: UsersService,\r\n    private excelService: ExcelService,\r\n    private roleService: RoleService,\r\n    private apiService: ExcelApiService) {\r\n    // this.route.queryParams.subscribe(params => {\r\n\r\n    //   // this.modifyUserObject.userRef = params[\"userRef\"];\r\n    //   this.formData.extSysCode = params['extSysCode'];\r\n    //   this.formData.extSysName = params['extSysName'];\r\n    // });\r\n  }\r\n\r\n\r\n  getExt() {\r\n    this.api.getAllExt().subscribe(data => {\r\n      this.extdata = data;\r\n      console.log(data);\r\n      this.dataSource = new MatTableDataSource(\r\n        data\r\n      );\r\n      this.dataSource.sort = this.sort;\r\n      this.dataSource.paginator = this.paginator.toArray()[0];\r\n      //console.log(data);\r\n    });\r\n    // //console.log(this.extdata);\r\n  }\r\n  getExtSys(row) {\r\n    //console.log(\"row\", row);\r\n    this.apiService.externalSystem.next(row);\r\n\r\n    const navigationExtras: NavigationExtras = {\r\n      queryParams: {\r\n        \r\n      }\r\n    };\r\n\r\n    this.router.navigate(['/sias-v2/excelExtSysUpdate'], navigationExtras);\r\n  }\r\n  onPaginateChange(event) {\r\n    //console.log(event);\r\n    // //console.log(this.pageSize);\r\n    this.pageSize = event.pageSize;\r\n    this.pageIndex = event.pageIndex;\r\n    //console.log(event.pageSize);\r\n    //console.log(event.pageIndex);\r\n  }\r\n  exportAsXLSX(): void {\r\n    // this.allUsersList.forEach(element => {\r\n    //   if(element.creatorDtStamp!==null && element.verifierDtStamp !==null){\r\n    //   element.creatorDtStamp\r\n    //   =this.pipe.transform(element.creatorDtStamp        , 'dd-MMM-yy').toString();\r\n    //   element.verifierDtStamp\r\n    //   =this.pipe.transform(element.verifierDtStamp\r\n    //     , 'dd-MMM-yy').toString();\r\n    //   }\r\n    // });\r\n    this.excelService.exportAsExcelFile(this.extdata, 'External_System_Report');\r\n  }\r\n}\r\n\r\n","export default \"table {\\n  width: 100%;\\n}\\n\\nth {\\n  /* text-align: center;\\n   */\\n  align-content: center;\\n}\\n\\ntable td {\\n  padding-right: 50px;\\n}\\n\\n#customers {\\n  border-collapse: collapse;\\n  width: 100%;\\n}\\n\\n#customers td, #customers th {\\n  border: 1px solid #ddd;\\n  padding: 8px;\\n  text-align: center;\\n  font-size: x-small;\\n}\\n\\n#customers td mat-chip {\\n  font-size: x-small;\\n}\\n\\n#customers tr:nth-child(even) {\\n  background-color: #f2f2f2;\\n}\\n\\n#customers th {\\n  padding-top: 8px;\\n  padding-bottom: 9px;\\n  text-align: left;\\n  background-color: #61b2d8;\\n  color: white;\\n}\\n\\n.mat-raised-button {\\n  width: -webkit-fit-content;\\n  width: -moz-fit-content;\\n  width: fit-content;\\n  height: 20px;\\n  line-height: 27px;\\n  min-height: 27px;\\n  vertical-align: top;\\n  font-size: 11px;\\n  padding: 0 0;\\n  margin: 0;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdmlld3Mvc2lhcy12Mi9leHRzdW1tYXJ5L3VwZGF0ZWV4Y2VsZXh0L0Y6XFxtdXRodS1vbmJvYXJkXFxtZWRpYW4tcGgyLXVpL3NyY1xcYXBwXFx2aWV3c1xcc2lhcy12MlxcZXh0c3VtbWFyeVxcdXBkYXRlZXhjZWxleHRcXHVwZGF0ZWV4Y2VsZXh0LmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC92aWV3cy9zaWFzLXYyL2V4dHN1bW1hcnkvdXBkYXRlZXhjZWxleHQvdXBkYXRlZXhjZWxleHQuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxXQUFBO0FDQ0o7O0FER0U7RUFDRTtJQUFBO0VBRUYscUJBQUE7QUNBRjs7QURFRTtFQUNFLG1CQUFBO0FDQ0o7O0FEQ0U7RUFDRSx5QkFBQTtFQUNBLFdBQUE7QUNFSjs7QURBRTtFQUNFLHNCQUFBO0VBQ0EsWUFBQTtFQUNBLGtCQUFBO0VBQ0Esa0JBQUE7QUNHSjs7QURBRTtFQUNFLGtCQUFBO0FDR0o7O0FEREU7RUFBOEIseUJBQUE7QUNLaEM7O0FESEU7RUFDRSxnQkFBQTtFQUNBLG1CQUFBO0VBQ0EsZ0JBQUE7RUFDQSx5QkFBQTtFQUNBLFlBQUE7QUNNSjs7QURKRTtFQUNFLDBCQUFBO0VBQUEsdUJBQUE7RUFBQSxrQkFBQTtFQUNBLFlBQUE7RUFDQSxpQkFBQTtFQUNBLGdCQUFBO0VBQ0EsbUJBQUE7RUFDQSxlQUFBO0VBQ0EsWUFBQTtFQUNBLFNBQUE7QUNPSiIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL3NpYXMtdjIvZXh0c3VtbWFyeS91cGRhdGVleGNlbGV4dC91cGRhdGVleGNlbGV4dC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbInRhYmxlIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICBcclxuICB9XHJcbiAgXHJcbiAgdGh7XHJcbiAgICAvKiB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICAgKi9cclxuICBhbGlnbi1jb250ZW50OiBjZW50ZXI7XHJcbiAgfVxyXG4gIHRhYmxlIHRkIHtcclxuICAgIHBhZGRpbmctcmlnaHQ6IDUwcHg7XHJcbiAgfVxyXG4gICNjdXN0b21lcnMge1xyXG4gICAgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gIH1cclxuICAjY3VzdG9tZXJzIHRkLCAjY3VzdG9tZXJzIHRoIHtcclxuICAgIGJvcmRlcjogMXB4IHNvbGlkICNkZGQ7XHJcbiAgICBwYWRkaW5nOiA4cHg7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICBmb250LXNpemU6IHgtc21hbGw7XHJcbiAgXHJcbiAgfVxyXG4gICNjdXN0b21lcnMgdGQgbWF0LWNoaXAge1xyXG4gICAgZm9udC1zaXplOiB4LXNtYWxsO1xyXG4gIH1cclxuICAjY3VzdG9tZXJzIHRyOm50aC1jaGlsZChldmVuKXtiYWNrZ3JvdW5kLWNvbG9yOiAjZjJmMmYyO31cclxuICBcclxuICAjY3VzdG9tZXJzIHRoIHtcclxuICAgIHBhZGRpbmctdG9wOiA4cHg7XHJcbiAgICBwYWRkaW5nLWJvdHRvbTogOXB4O1xyXG4gICAgdGV4dC1hbGlnbjogbGVmdDtcclxuICAgIGJhY2tncm91bmQtY29sb3I6cmdiKDk3LCAxNzgsIDIxNik7XHJcbiAgICBjb2xvcjogd2hpdGU7XHJcbiAgfVxyXG4gIC5tYXQtcmFpc2VkLWJ1dHRvbiB7XHJcbiAgICB3aWR0aDogZml0LWNvbnRlbnQ7XHJcbiAgICBoZWlnaHQ6IDIwcHg7XHJcbiAgICBsaW5lLWhlaWdodDogMjdweDtcclxuICAgIG1pbi1oZWlnaHQ6IDI3cHg7XHJcbiAgICB2ZXJ0aWNhbC1hbGlnbjogdG9wO1xyXG4gICAgZm9udC1zaXplOiAxMXB4O1xyXG4gICAgcGFkZGluZzogMCAwO1xyXG4gICAgbWFyZ2luOiAwO1xyXG4gIH1cclxuIiwidGFibGUge1xuICB3aWR0aDogMTAwJTtcbn1cblxudGgge1xuICAvKiB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAqL1xuICBhbGlnbi1jb250ZW50OiBjZW50ZXI7XG59XG5cbnRhYmxlIHRkIHtcbiAgcGFkZGluZy1yaWdodDogNTBweDtcbn1cblxuI2N1c3RvbWVycyB7XG4gIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG4jY3VzdG9tZXJzIHRkLCAjY3VzdG9tZXJzIHRoIHtcbiAgYm9yZGVyOiAxcHggc29saWQgI2RkZDtcbiAgcGFkZGluZzogOHB4O1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGZvbnQtc2l6ZTogeC1zbWFsbDtcbn1cblxuI2N1c3RvbWVycyB0ZCBtYXQtY2hpcCB7XG4gIGZvbnQtc2l6ZTogeC1zbWFsbDtcbn1cblxuI2N1c3RvbWVycyB0cjpudGgtY2hpbGQoZXZlbikge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjJmMmYyO1xufVxuXG4jY3VzdG9tZXJzIHRoIHtcbiAgcGFkZGluZy10b3A6IDhweDtcbiAgcGFkZGluZy1ib3R0b206IDlweDtcbiAgdGV4dC1hbGlnbjogbGVmdDtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzYxYjJkODtcbiAgY29sb3I6IHdoaXRlO1xufVxuXG4ubWF0LXJhaXNlZC1idXR0b24ge1xuICB3aWR0aDogZml0LWNvbnRlbnQ7XG4gIGhlaWdodDogMjBweDtcbiAgbGluZS1oZWlnaHQ6IDI3cHg7XG4gIG1pbi1oZWlnaHQ6IDI3cHg7XG4gIHZlcnRpY2FsLWFsaWduOiB0b3A7XG4gIGZvbnQtc2l6ZTogMTFweDtcbiAgcGFkZGluZzogMCAwO1xuICBtYXJnaW46IDA7XG59Il19 */\"","import { Component, OnInit, Input, ViewChild, ChangeDetectorRef, ViewChildren } from '@angular/core';\r\nimport { ExcelExtsys } from '../../excel-external-sys/excelExtSys';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\n\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { MatSnackBar, MatButton } from '@angular/material';\r\n\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Timestamp } from 'rxjs/internal/operators/timestamp';\r\nimport { ExcelProcessingService } from 'src/app/shared/services/sias2-services/excel-processing.service';\r\nimport { ExcelApiService } from 'src/app/shared/services/sias2-services/ExcelApiService';\r\nimport Swal from 'sweetalert2';\r\nimport { IfStmt } from '@angular/compiler';\r\nimport { THIS_EXPR } from '@angular/compiler/src/output/output_ast';\r\nimport { UsersService } from 'src/app/views/users/users.service';\r\nimport { RoleService } from 'src/app/views/roles1/roles.service';\r\nimport { permissionsLabels } from 'src/app/views/roles1/models/fmosNewRolePermissions';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-updateexcelext',\r\n  templateUrl: './updateexcelext.component.html',\r\n  styleUrls: ['./updateexcelext.component.scss']\r\n})\r\nexport class UpdateexcelextComponent implements OnInit {\r\n\r\n\r\n  //formData:ExcelExtsys;\r\n  @Input()\r\n  formData = new ExcelExtsys();\r\n  disableDeleteButton: boolean;\r\n  disableCloseButton: boolean;\r\n  disableReopenButton: boolean;\r\n  @Input()\r\n  formData1: ExcelExtsys[]\r\n  validationResponse: any;\r\n  responseError: any;\r\n  editFunction: boolean;\r\n  is_edit = true;\r\n  currentUser: any\r\n  poovar: any;\r\n  loggedInUser: string;\r\n  user_id: any;\r\n  screenName: any;\r\n  role: any;\r\n  space=true;\r\n  res: any;\r\n  rolepermission: any;\r\n\r\n  allDeptNames: any[] = [];\r\n  result: any;\r\n\r\n  excelExtedit: ExcelExtsys = new ExcelExtsys();\r\n  @ViewChildren(MatButton) updateBtn: MatButton;\r\n  tempStoreRespOfForm: any;\r\n  savedisable: boolean;\r\n  constructor(private route: ActivatedRoute,\r\n    private http: HttpClient,\r\n    private router: Router,\r\n    private userApi: UsersService,\r\n    private apiService: ExcelProcessingService,\r\n    private shareService: ExcelApiService,\r\n    private snack: MatSnackBar,\r\n    private roleService: RoleService,\r\n    private ref:ChangeDetectorRef,\r\n\r\n    private toast: ToastrService,\r\n    private cdr: ChangeDetectorRef) { }\r\n\r\n  roleCodes = new permissionsLabels();\r\n  ngOnInit() {\r\n    setTimeout(() => {\r\n      this.newRolePermissions();\r\n    }, 2000);\r\n    this.roleService.screenLabelList.subscribe(message => this.roleCodes = message);\r\n\r\n    this.getAllDeptNames();\r\n    \r\n    localStorage.setItem(\"userIdForChangePassword\", localStorage.getItem(\"currentUser\"));\r\n    this.user_id = sessionStorage.getItem('user_id');\r\n    this.role = sessionStorage.getItem('user_role');\r\n    // this.screenpermission();\r\n    //console.log(localStorage.getItem(\"currentUser\"));\r\n    this.currentUser = localStorage.getItem(\"currentUser\");\r\n    this.shareService.externalSystem$.subscribe((data: any) => {\r\n\r\n      //console.log(\"data works\", data);\r\n      this.formData = data;\r\n      //console.log(this.formData);\r\n      ////console.log( data.updatedBy)\r\n      if (this.formData.authStatus === 'U') {\r\n        this.formData.authStatus = 'UNAUTHORIZED'\r\n      }\r\n      if (this.formData.authStatus === 'A') {\r\n        this.formData.authStatus = 'AUTHORIZED'\r\n      }\r\n\r\n      if (this.formData.recordStatus === 'O') {\r\n        this.formData.recordStatus = 'OPEN'\r\n      }\r\n      if (this.formData.recordStatus === 'C') {\r\n        this.formData.recordStatus = 'CLOSED'\r\n      }\r\n      if (this.formData.verifiedOnce === 'N') {\r\n        this.formData.verifiedOnce = 'NO'\r\n      }\r\n      if (this.formData.verifiedOnce === 'Y') {\r\n        this.formData.verifiedOnce = 'YES'\r\n      }\r\n    })\r\n\r\n    this.editFunction = false;\r\n    this.loggedInUser = localStorage.getItem(\"userIdForChangePassword\");\r\n\r\n    this.poovar = true;\r\n  }\r\n  button_permission: any = {};\r\n  screenpermission() {\r\n    this.screenName = 'roles';\r\n    //this.role='ROLE1';\r\n    this.userApi.getRoleScreenPermission(this.user_id, this.screenName, this.role).subscribe(res => {\r\n      this.rolepermission = res;\r\n      //console.log(this.rolepermission);\r\n      if (this.rolepermission) {\r\n        this.button_permission = this.rolepermission[0];\r\n        //console.log( this.button_permission);\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n  getAllDeptNames(){\r\n    //console.log('this getting roles');\r\n    this.roleService.getAllDept().subscribe(data => {\r\n      this.allDeptNames = data; \r\n      //console.log(this.allRoleNames);\r\n    });\r\n  }\r\n\r\n  //geting user Id based on keyup\r\nkeyPress(event: any) {\r\n  console.log(event.target.value);\r\n console.log(event);\r\n\r\n  console.log(this.allDeptNames);\r\n  this.result = this.allDeptNames.filter(s => s.includes(event.target.value));\r\n  console.log(this.result);\r\n  this.allDeptNames=this.result;\r\n  this.ref.markForCheck();\r\n  if(event.target.value=='')\r\n  {\r\n  this.getAllDeptNames();\r\n  }  \r\n}\r\n\r\n\r\n  newRolePermissions() {\r\n    this.roleService.fetchScreenPermissions('External Systems');\r\n  }\r\n  changeStatus() {\r\n    //console.log('change status call');\r\n    this.is_edit = false;\r\n    this.poovar = false;\r\n    //console.log('done');\r\n    this.editFunction = true;\r\n    // this.editFunction2 = false;\r\n  }\r\n  onSubmit(formData: ExcelExtsys) {\r\n    //console.log('inside modify user');\r\n\r\n    formData.updatedBy = this.loggedInUser;\r\n    //console.log(formData);\r\n    formData.modifiedBy = this.loggedInUser;\r\n    //console.log(formData);\r\n    this.formData.authorizedBy = \"\";\r\n    this.formData.authorizedTime = null;\r\n    if (this.formData.recordStatus === 'OPEN') {\r\n      this.formData.recordStatus = 'O'\r\n    }\r\n    if (this.formData.recordStatus === 'CLOSED') {\r\n      this.formData.recordStatus = 'C'\r\n    }\r\n    if (this.formData.authStatus === 'UNAUTHORIZED') {\r\n      this.formData.authStatus = 'U'\r\n    }\r\n    if (this.formData.authStatus === 'AUTHORIZED') {\r\n      this.formData.authStatus = 'A'\r\n    }\r\n    if (this.formData.verifiedOnce === 'NO') {\r\n      this.formData.verifiedOnce = 'N'\r\n    }\r\n    if (this.formData.verifiedOnce === 'YES') {\r\n      this.formData.verifiedOnce = 'Y'\r\n    }\r\n    this.apiService.modifyExtSys(formData).subscribe(data => {\r\n      this.validationResponse = data;\r\n      // formData=data;\r\n      //console.log(this.validationResponse);\r\n      //console.log(data);\r\n      this.formData = this.validationResponse;\r\n      console.log(this.formData);\r\n      // this.cdr.markForCheck();\r\n\r\n      if (this.validationResponse) {\r\n\r\n        Swal.fire(\r\n        \r\n          'Data updated successfully ',\r\n       \r\n        );\r\n        this.savedisable=true;\r\n        if (this.formData.recordStatus === 'O') {\r\n          this.formData.recordStatus = 'OPEN'\r\n        }\r\n        if (this.formData.recordStatus === 'C') {\r\n          this.formData.recordStatus = 'CLOSED'\r\n        }\r\n        if (this.formData.authStatus === 'A') {\r\n          this.formData.authStatus = 'AUTHORIZED'\r\n        }\r\n        if (this.formData.authStatus === 'U') {\r\n          this.formData.authStatus = 'UNAUTHORIZED'\r\n        }\r\n        if (this.formData.verifiedOnce === 'N') {\r\n          this.formData.verifiedOnce = 'NO'\r\n        }\r\n        if (this.formData.verifiedOnce === 'Y') {\r\n          this.formData.verifiedOnce = 'YES'\r\n        }\r\n        // this.router.navigate(['/sias/v2/ExtSumamry']);\r\n        this.updateBtn.disabled = true;\r\n        this.cdr.markForCheck();\r\n        //console.log(data);\r\n      } else {\r\n\r\n        Swal.fire({\r\n          type: 'error',\r\n        \r\n          text: 'Data update failed ',\r\n        });\r\n\r\n      }\r\n    }, err => {\r\n\r\n      Swal.fire({\r\n        type: 'error',\r\n        \r\n        text: 'Server Error ',\r\n      });\r\n    });\r\n\r\n\r\n  }\r\n  onClickOfAuth() {\r\n    //console.log(\"on click of auth\");\r\n    if (this.formData.modifiedBy !== this.currentUser) {\r\n      //console.log(this.formData.modifiedBy);\r\n      this.apiService.authorizingTheRecord(this.formData, this.currentUser).subscribe((data: any) => {\r\n        //console.log(data);\r\n        this.formData = data;\r\n        this.tempStoreRespOfForm = data;\r\n        if (this.formData) {\r\n          Swal.fire(\r\n           \r\n            'You authorized the record ',\r\n            \r\n          );\r\n          if (this.formData.authStatus === 'U') {\r\n            this.formData.authStatus = 'UNAUTHORIZED'\r\n          }\r\n          if (this.formData.authStatus === 'A') {\r\n            this.formData.authStatus = 'AUTHORIZED'\r\n          }\r\n\r\n          if (this.formData.recordStatus === 'O') {\r\n            this.formData.recordStatus = 'OPEN'\r\n          }\r\n          if (this.formData.recordStatus === 'C') {\r\n            this.formData.recordStatus = 'CLOSED'\r\n          }\r\n          if (this.formData.verifiedOnce === 'N') {\r\n            this.formData.verifiedOnce = 'NO'\r\n          }\r\n          if (this.formData.verifiedOnce === 'Y') {\r\n            this.formData.verifiedOnce = 'YES'\r\n          }\r\n        }\r\n        this.cdr.markForCheck();\r\n        this.disableDeleteButton = true;\r\n        //console.log(this.formData);\r\n      });\r\n    }\r\n    else {\r\n      Swal.fire({\r\n        type: 'error',\r\n      \r\n        text: 'Maker cannot authorize the record ',\r\n      });\r\n    }\r\n  }\r\n\r\n  onClickOfClose() {\r\n    //console.log(\"on click of close\");\r\n    //console.log(this.formData);\r\n    //console.log(this.formData.recordStatus)\r\n    if (this.formData.recordStatus === 'OPEN') {\r\n      this.formData.recordStatus = 'O'\r\n    }\r\n    if (this.formData.recordStatus === 'CLOSED') {\r\n      this.formData.recordStatus = 'C'\r\n    }\r\n    //console.log(this.formData.recordStatus)\r\n    //console.log(this.formData);\r\n    this.formData.modifiedBy = this.currentUser;\r\n    //console.log( this.formData.modifiedBy);\r\n\r\n    this.apiService.ClosingTheRecord(this.formData).subscribe((data: any) => {\r\n      //console.log(data);\r\n      this.formData = data;\r\n      if (this.formData) {\r\n        Swal.fire(\r\n        \r\n          'You Closed the record ',\r\n          \r\n        );\r\n        if (this.formData.authStatus === 'U') {\r\n          this.formData.authStatus = 'UNAUTHORIZED'\r\n        }\r\n        if (this.formData.authStatus === 'A') {\r\n          this.formData.authStatus = 'AUTHORIZED'\r\n        }\r\n        //console.log(this.formData.modifiedTime);\r\n        /*\r\n        */\r\n        if(this.formData.verifiedOnce === 'N')\r\n        {\r\n          this.formData.verifiedOnce = 'NO'\r\n        }\r\n        if(this.formData.verifiedOnce === 'Y')\r\n        {\r\n          this.formData.verifiedOnce = 'YES'\r\n        }\r\n        /**\r\n         * setting record status\r\n         */\r\n        if (this.formData.recordStatus === 'O') {\r\n          this.formData.recordStatus = 'OPEN'\r\n        }\r\n        if (this.formData.recordStatus === 'C') {\r\n          this.formData.recordStatus = 'CLOSED'\r\n        }\r\n      }\r\n      //console.log(this.formData);\r\n      this.cdr.markForCheck();\r\n      if (this.formData.recordStatus == \"CLOSED\") {\r\n        this.disableReopenButton = true;\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n  onClickOfReOpen() {\r\n    if (this.formData.recordStatus === 'OPEN') {\r\n      this.formData.recordStatus = 'O'\r\n    }\r\n    if (this.formData.recordStatus === 'CLOSED') {\r\n      this.formData.recordStatus = 'C'\r\n    }\r\n    //console.log(\"on click of Reopen\");\r\n    this.formData.modifiedBy = this.currentUser;\r\n    //console.log( this.formData.modifiedBy);\r\n    this.apiService.reopeningTheRecord(this.formData).subscribe((data: any) => {\r\n      //console.log(data);\r\n      this.formData = data;\r\n      if (this.formData) {\r\n        Swal.fire(\r\n         \r\n          'You reopened the record ',\r\n          \r\n        );\r\n        if (this.formData.authStatus === 'U') {\r\n          this.formData.authStatus = 'UNAUTHORIZED'\r\n        }\r\n        if (this.formData.authStatus === 'A') {\r\n          this.formData.authStatus = 'AUTHORIZED'\r\n        }\r\n        /*\r\n        */\r\n        if(this.formData.verifiedOnce === 'N')\r\n        {\r\n          this.formData.verifiedOnce = 'NO'\r\n        }\r\n        if(this.formData.verifiedOnce === 'Y')\r\n        {\r\n          this.formData.verifiedOnce = 'YES'\r\n        }\r\n        /**\r\n         * setting record status\r\n         */\r\n        if (this.formData.recordStatus === 'O') {\r\n          this.formData.recordStatus = 'OPEN'\r\n        }\r\n        if (this.formData.recordStatus === 'C') {\r\n          this.formData.recordStatus = 'CLOSED'\r\n        }\r\n\r\n      }\r\n      //console.log(this.formData);\r\n\r\n      //console.log(this.formData);\r\n      if (this.formData.recordStatus == \"C\") {\r\n        this.disableCloseButton = true;\r\n      }\r\n\r\n      this.cdr.markForCheck();\r\n    });\r\n  }\r\n\r\n  //added by vidya on sept 23\r\n  onClickOfDeleteOfUpdateExecel()\r\n  {\r\n   console.log(\"this is deleting\") ;\r\n   this.apiService.onClickOfDeleteOfUpdateExecel(this.formData).subscribe(deleteResp=>\r\n    {\r\n      console.log(deleteResp);\r\n      if(deleteResp)\r\n      {\r\n        Swal.fire({\r\n          title:\"Record Deleted SuccessFully \"\r\n        })\r\n      }\r\n      else{\r\n       \r\n          Swal.fire({\r\n            title:\"Failed To Delete The Record\"\r\n          })\r\n       \r\n      }\r\n      \r\n    })\r\n  }\r\n   fun(extSysName)\r\n  {\r\n    console.log(extSysName);\r\n    console.log(\"enters inside fn\")\r\n   const result=extSysName.trim();\r\n   console.log(result);\r\nif(result)\r\n{\r\n console.log(\"valid string\");\r\n \r\n this.space=true;\r\n \r\n console.log(this.space);\r\n}\r\nelse{\r\n console.log(\"invalid string\");\r\n this.space=false;\r\n \r\n   // this.submitted = false;\r\n   console.log(this.space);\r\n\r\n}\r\n}\r\n}\r\n\r\n","export default \"/* ::ng-deep .mat-form-field-flex > .mat-form-field-infix { padding: 0.4em 0px !important;}\\r\\n::ng-deep .mat-form-field-label-wrapper { top: -1.5em; }\\r\\n\\r\\n::ng-deep .mat-form-field-appearance-outline.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label {\\r\\n    transform: translateY(-1.1em) scale(.75);\\r\\n    width: 80.33333%;\\r\\n} */\\r\\n/* ::ng-deep .mat-form-field-flex > .mat-form-field-infix { width: 30% !important;} */\\r\\n/* ::ng-deep.mat-form-field-appearance-outline .mat-form-field-flex\\r\\n{\\r\\n    width: 160px !important;\\r\\n    height: 50px !important;\\r\\n} */\\r\\ndiv.scrollmenu {\\r\\n  overflow: auto;\\r\\n  white-space: nowrap;\\r\\n}\\r\\n.redC{\\r\\n  color: red;\\r\\n}\\r\\n.mat-raised-button {\\r\\n  width: -webkit-fit-content;\\r\\n  width: -moz-fit-content;\\r\\n  width: fit-content;\\r\\n  height: 20px;\\r\\n  line-height: 27px;\\r\\n  min-height: 27px;\\r\\n  vertical-align: top;\\r\\n  font-size: 11px;\\r\\n  padding: 0 0;\\r\\n  margin: 0;\\r\\n}\\r\\n#customers {\\r\\n  font-family: \\\"Trebuchet MS\\\", Arial, Helvetica, sans-serif;\\r\\n  border-collapse: collapse;\\r\\n  width: 100%;\\r\\n}\\r\\n#customers td,\\r\\n#customers th {\\r\\n  border: 1px solid #ddd;\\r\\n  padding: 8px;\\r\\n  text-align: center;\\r\\n\\r\\n}\\r\\n#customers tr:nth-child(even) {\\r\\n  background-color: #f2f2f2;\\r\\n}\\r\\n#customers th {\\r\\n  padding-top: 12px;\\r\\n  padding-bottom: 12px;\\r\\n  text-align: left;\\r\\n  background-color: rgb(97, 178, 216);\\r\\n  color: white;\\r\\n}\\r\\n#scrl::-webkit-scrollbar-track\\r\\n{\\r\\n\\t-webkit-box-shadow: inset 0 0 6px rgba(0,0,0,0.3);\\r\\n\\tborder-radius: 10px;\\r\\n\\tbackground-color: #F5F5F5;\\r\\n}\\r\\n#scrl::-webkit-scrollbar\\r\\n{\\r\\n\\twidth: 12px;\\r\\n\\tbackground-color: #F5F5F5;\\r\\n}\\r\\n#scrl::-webkit-scrollbar-thumb\\r\\n{\\r\\n\\tborder-radius: 10px;\\r\\n\\t-webkit-box-shadow: inset 0 0 6px rgba(0,0,0,.3);\\r\\n\\tbackground-color: #555;\\r\\n}\\r\\n.border-box{\\r\\n  border-color: #e5e5e5;\\r\\n  -ms-box-shadow: 0 1px 8px rgba(69, 65, 78, 0.08);\\r\\n  -o-box-shadow: 0 1px 8px rgba(69, 65, 78, 0.08);\\r\\n  box-shadow: 0 1px 8px rgb(69 65 78 / 8%);\\r\\n  background-color: #ffffff;\\r\\n  border-radius: 0.71rem;\\r\\n  border: 1px solid rgba(0,0,0,.125);\\r\\n  margin-bottom: 2.308rem;\\r\\n}\\r\\n.mt-8 {\\r\\n  margin-top: 15px;\\r\\n}\\r\\n.pr-8 {\\r\\n  padding-right: 15px;\\r\\n  padding-left: 15px;\\r\\n}\\r\\n.validation-system.border-box {\\r\\n  background: #f0f1f6;\\r\\n}\\r\\n.src-system.border-box {\\r\\n  background: rgba(51, 94, 234, 0.3);\\r\\n}\\r\\n.readonly-wrapper {\\r\\n  pointer-events:none;\\r\\n}\\r\\n.readonly-wrapper .readonly-block {\\r\\n  pointer-events: none;\\r\\n}  \\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdmlld3Mvc2lhcy12Mi9ydWxlcy9jcmVhdGUtcnVsZXMvY3JlYXRlLXJ1bGVzLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7OztHQU1HO0FBQ0gscUZBQXFGO0FBQ3JGOzs7O0dBSUc7QUFFSDtFQUNFLGNBQWM7RUFDZCxtQkFBbUI7QUFDckI7QUFFQTtFQUNFLFVBQVU7QUFDWjtBQUVBO0VBQ0UsMEJBQWtCO0VBQWxCLHVCQUFrQjtFQUFsQixrQkFBa0I7RUFDbEIsWUFBWTtFQUNaLGlCQUFpQjtFQUNqQixnQkFBZ0I7RUFDaEIsbUJBQW1CO0VBQ25CLGVBQWU7RUFDZixZQUFZO0VBQ1osU0FBUztBQUNYO0FBRUE7RUFDRSx5REFBeUQ7RUFDekQseUJBQXlCO0VBQ3pCLFdBQVc7QUFDYjtBQUVBOztFQUVFLHNCQUFzQjtFQUN0QixZQUFZO0VBQ1osa0JBQWtCOztBQUVwQjtBQUVBO0VBQ0UseUJBQXlCO0FBQzNCO0FBRUE7RUFDRSxpQkFBaUI7RUFDakIsb0JBQW9CO0VBQ3BCLGdCQUFnQjtFQUNoQixtQ0FBbUM7RUFDbkMsWUFBWTtBQUNkO0FBR0E7O0NBRUMsaURBQWlEO0NBQ2pELG1CQUFtQjtDQUNuQix5QkFBeUI7QUFDMUI7QUFFQTs7Q0FFQyxXQUFXO0NBQ1gseUJBQXlCO0FBQzFCO0FBRUE7O0NBRUMsbUJBQW1CO0NBQ25CLGdEQUFnRDtDQUNoRCxzQkFBc0I7QUFDdkI7QUFFQTtFQUNFLHFCQUFxQjtFQUVyQixnREFBZ0Q7RUFDaEQsK0NBQStDO0VBRS9DLHdDQUF3QztFQUN4Qyx5QkFBeUI7RUFDekIsc0JBQXNCO0VBQ3RCLGtDQUFrQztFQUNsQyx1QkFBdUI7QUFDekI7QUFFQTtFQUNFLGdCQUFnQjtBQUNsQjtBQUVBO0VBQ0UsbUJBQW1CO0VBQ25CLGtCQUFrQjtBQUNwQjtBQUVBO0VBQ0UsbUJBQW1CO0FBQ3JCO0FBRUE7RUFDRSxrQ0FBa0M7QUFDcEM7QUFDQTtFQUNFLG1CQUFtQjtBQUNyQjtBQUVBO0VBQ0Usb0JBQW9CO0FBQ3RCIiwiZmlsZSI6InNyYy9hcHAvdmlld3Mvc2lhcy12Mi9ydWxlcy9jcmVhdGUtcnVsZXMvY3JlYXRlLXJ1bGVzLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIvKiA6Om5nLWRlZXAgLm1hdC1mb3JtLWZpZWxkLWZsZXggPiAubWF0LWZvcm0tZmllbGQtaW5maXggeyBwYWRkaW5nOiAwLjRlbSAwcHggIWltcG9ydGFudDt9XHJcbjo6bmctZGVlcCAubWF0LWZvcm0tZmllbGQtbGFiZWwtd3JhcHBlciB7IHRvcDogLTEuNWVtOyB9XHJcblxyXG46Om5nLWRlZXAgLm1hdC1mb3JtLWZpZWxkLWFwcGVhcmFuY2Utb3V0bGluZS5tYXQtZm9ybS1maWVsZC1jYW4tZmxvYXQubWF0LWZvcm0tZmllbGQtc2hvdWxkLWZsb2F0IC5tYXQtZm9ybS1maWVsZC1sYWJlbCB7XHJcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTEuMWVtKSBzY2FsZSguNzUpO1xyXG4gICAgd2lkdGg6IDgwLjMzMzMzJTtcclxufSAqL1xyXG4vKiA6Om5nLWRlZXAgLm1hdC1mb3JtLWZpZWxkLWZsZXggPiAubWF0LWZvcm0tZmllbGQtaW5maXggeyB3aWR0aDogMzAlICFpbXBvcnRhbnQ7fSAqL1xyXG4vKiA6Om5nLWRlZXAubWF0LWZvcm0tZmllbGQtYXBwZWFyYW5jZS1vdXRsaW5lIC5tYXQtZm9ybS1maWVsZC1mbGV4XHJcbntcclxuICAgIHdpZHRoOiAxNjBweCAhaW1wb3J0YW50O1xyXG4gICAgaGVpZ2h0OiA1MHB4ICFpbXBvcnRhbnQ7XHJcbn0gKi9cclxuXHJcbmRpdi5zY3JvbGxtZW51IHtcclxuICBvdmVyZmxvdzogYXV0bztcclxuICB3aGl0ZS1zcGFjZTogbm93cmFwO1xyXG59XHJcblxyXG4ucmVkQ3tcclxuICBjb2xvcjogcmVkO1xyXG59XHJcblxyXG4ubWF0LXJhaXNlZC1idXR0b24ge1xyXG4gIHdpZHRoOiBmaXQtY29udGVudDtcclxuICBoZWlnaHQ6IDIwcHg7XHJcbiAgbGluZS1oZWlnaHQ6IDI3cHg7XHJcbiAgbWluLWhlaWdodDogMjdweDtcclxuICB2ZXJ0aWNhbC1hbGlnbjogdG9wO1xyXG4gIGZvbnQtc2l6ZTogMTFweDtcclxuICBwYWRkaW5nOiAwIDA7XHJcbiAgbWFyZ2luOiAwO1xyXG59XHJcblxyXG4jY3VzdG9tZXJzIHtcclxuICBmb250LWZhbWlseTogXCJUcmVidWNoZXQgTVNcIiwgQXJpYWwsIEhlbHZldGljYSwgc2Fucy1zZXJpZjtcclxuICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlO1xyXG4gIHdpZHRoOiAxMDAlO1xyXG59XHJcblxyXG4jY3VzdG9tZXJzIHRkLFxyXG4jY3VzdG9tZXJzIHRoIHtcclxuICBib3JkZXI6IDFweCBzb2xpZCAjZGRkO1xyXG4gIHBhZGRpbmc6IDhweDtcclxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcblxyXG59XHJcblxyXG4jY3VzdG9tZXJzIHRyOm50aC1jaGlsZChldmVuKSB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogI2YyZjJmMjtcclxufVxyXG5cclxuI2N1c3RvbWVycyB0aCB7XHJcbiAgcGFkZGluZy10b3A6IDEycHg7XHJcbiAgcGFkZGluZy1ib3R0b206IDEycHg7XHJcbiAgdGV4dC1hbGlnbjogbGVmdDtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoOTcsIDE3OCwgMjE2KTtcclxuICBjb2xvcjogd2hpdGU7XHJcbn1cclxuXHJcblxyXG4jc2NybDo6LXdlYmtpdC1zY3JvbGxiYXItdHJhY2tcclxue1xyXG5cdC13ZWJraXQtYm94LXNoYWRvdzogaW5zZXQgMCAwIDZweCByZ2JhKDAsMCwwLDAuMyk7XHJcblx0Ym9yZGVyLXJhZGl1czogMTBweDtcclxuXHRiYWNrZ3JvdW5kLWNvbG9yOiAjRjVGNUY1O1xyXG59XHJcblxyXG4jc2NybDo6LXdlYmtpdC1zY3JvbGxiYXJcclxue1xyXG5cdHdpZHRoOiAxMnB4O1xyXG5cdGJhY2tncm91bmQtY29sb3I6ICNGNUY1RjU7XHJcbn1cclxuXHJcbiNzY3JsOjotd2Via2l0LXNjcm9sbGJhci10aHVtYlxyXG57XHJcblx0Ym9yZGVyLXJhZGl1czogMTBweDtcclxuXHQtd2Via2l0LWJveC1zaGFkb3c6IGluc2V0IDAgMCA2cHggcmdiYSgwLDAsMCwuMyk7XHJcblx0YmFja2dyb3VuZC1jb2xvcjogIzU1NTtcclxufVxyXG5cclxuLmJvcmRlci1ib3h7XHJcbiAgYm9yZGVyLWNvbG9yOiAjZTVlNWU1O1xyXG4gIC13ZWJraXQtYm94LXNoYWRvdzogMCAxcHggOHB4IHJnYig2OSA2NSA3OCAvIDglKTtcclxuICAtbXMtYm94LXNoYWRvdzogMCAxcHggOHB4IHJnYmEoNjksIDY1LCA3OCwgMC4wOCk7XHJcbiAgLW8tYm94LXNoYWRvdzogMCAxcHggOHB4IHJnYmEoNjksIDY1LCA3OCwgMC4wOCk7XHJcbiAgLW1vei1ib3gtc2hhZG93OiAwIDFweCA4cHggcmdiYSg2OSwgNjUsIDc4LCAwLjA4KTtcclxuICBib3gtc2hhZG93OiAwIDFweCA4cHggcmdiKDY5IDY1IDc4IC8gOCUpO1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmZmZmY7XHJcbiAgYm9yZGVyLXJhZGl1czogMC43MXJlbTtcclxuICBib3JkZXI6IDFweCBzb2xpZCByZ2JhKDAsMCwwLC4xMjUpO1xyXG4gIG1hcmdpbi1ib3R0b206IDIuMzA4cmVtO1xyXG59XHJcblxyXG4ubXQtOCB7XHJcbiAgbWFyZ2luLXRvcDogMTVweDtcclxufVxyXG5cclxuLnByLTgge1xyXG4gIHBhZGRpbmctcmlnaHQ6IDE1cHg7XHJcbiAgcGFkZGluZy1sZWZ0OiAxNXB4O1xyXG59XHJcblxyXG4udmFsaWRhdGlvbi1zeXN0ZW0uYm9yZGVyLWJveCB7XHJcbiAgYmFja2dyb3VuZDogI2YwZjFmNjtcclxufVxyXG5cclxuLnNyYy1zeXN0ZW0uYm9yZGVyLWJveCB7XHJcbiAgYmFja2dyb3VuZDogcmdiYSg1MSwgOTQsIDIzNCwgMC4zKTtcclxufVxyXG4ucmVhZG9ubHktd3JhcHBlciB7XHJcbiAgcG9pbnRlci1ldmVudHM6bm9uZTtcclxufVxyXG5cclxuLnJlYWRvbmx5LXdyYXBwZXIgLnJlYWRvbmx5LWJsb2NrIHtcclxuICBwb2ludGVyLWV2ZW50czogbm9uZTtcclxufSAgIl19 */\"","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { RulesService } from 'src/app/shared/services/rules/rules.service';\r\n\r\nimport Swal from 'sweetalert2';\r\nimport { AddSystemService } from 'src/app/shared/services/addSys/add-system.service';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-create-rules',\r\n  templateUrl: './create-rules.component.html',\r\n  styleUrls: ['./create-rules.component.css']\r\n})\r\nexport class CreateRulesComponent implements OnInit {\r\n  currentUser: string;\r\n  auditShowStatus: boolean;\r\n  tempArrayData: any[] = [];\r\n  ruleIdInvalid : boolean = false;\r\n\r\n  externalsystem: any;\r\n  showRuleValidation: boolean = false;\r\n  validationData: any;\r\n  ruleValidtionNew: any;\r\n  disableSubmit: boolean = false;\r\n\r\n  showpBar: boolean = false;\r\n  ruleConfig = new RuleConfig();\r\n  systemName: any;\r\n  msgType: any;\r\n  sourceOperation: Object;\r\n  destination: any;\r\n  destiMsgType: any;\r\n  destinationRespOperation: Object;\r\n\r\n  ruleValidation = new RuleValidation();\r\n  arrRuleValidation: Array<RuleValidation> = [];\r\n  ruleDto = new RuleDto();\r\n  sourceService: any;\r\n  destinatioRespService: any;\r\n  valOperation: any;\r\n  valService: any;\r\n  sourcesystem: any;\r\n  sourceDetails: any;\r\n  valDeatils: any;\r\n  isoRespData: any;\r\n  messageBasisIso: any;\r\n  xmlRespData: any;\r\n  multipleValidation: Array<MultipleValidation> = [];\r\n  count: [{ count: number }];\r\n  valCount: number = 0;\r\n  sourceSysData = new RuleConfig();\r\n  sourcesysdata: any;\r\n  destinationSysData = new RuleConfig();\r\n  validationTransData: any;\r\n  srcSystem: any;\r\n  desSystem: any;\r\n  add: boolean;\r\n  headerTagData1: any[] = [];\r\n  selectedDocumentTypes2: any[] = [];\r\n\r\n  constructor(\r\n    private addsystem: AddSystemService, private rules: RulesService) { }\r\n\r\n  ngOnInit() {\r\n    this.currentUser = localStorage.getItem('userFromLogin');\r\n    this.fetchingIso();\r\n    this.fetchingXMl();\r\n    this.gettingExternalSsytem();\r\n    this.arrRuleValidation.push({ id: '',messageKey:'', ruleId: '', validationDetail: '', validationMethod: '' });\r\n    this.multipleValidation.push({ messageType: '',messageKey:'', operation: '', service: '', validationSystem: '', id: '', ruleId: '' });\r\n\r\n  }\r\n\r\n  gettingExternalSsytem() {\r\n    this.rules.gettingExternalsystem().subscribe(extsysRes => {\r\n      console.log(extsysRes);\r\n      this.externalsystem = extsysRes;\r\n      this.sourcesysdata = this.externalsystem;\r\n      this.tempArrayData = this.externalsystem;\r\n    })\r\n  }\r\n  onSlectionExternalSystem(event) {\r\n    console.log(\"eve\", event.value);\r\n    this.srcSystem = event.option.value;\r\n    console.log(this.srcSystem);\r\n    // this.systemName = event.value;\r\n    this.sourcesystem = event.option.value;\r\n    console.log(this.sourcesystem);\r\n    this.rules.gettingTranslationData(this.sourcesystem).subscribe(resp => {\r\n      console.log(resp);\r\n      if (resp) {\r\n        this.sourceSysData = resp;\r\n        this.ruleConfig.sourceTranslationId = resp.transId;\r\n        this.gettingoperationAndServiceFroSourceSystem(this.sourcesystem, resp.messageType);\r\n      }\r\n    })\r\n    this.externalsystem = this.tempArrayData;\r\n  }\r\n  onSelectionOFMessageType(event) {\r\n    this.msgType = event.value;\r\n    // this.gettingoperationAndServiceFroSourceSystem(this.sourcesystem, this.msgType);\r\n  }\r\n  // for source \r\n  gettingoperationAndServiceFroSourceSystem(ssysName, msgType) {\r\n    console.log(\"ssysName\", ssysName)\r\n    this.rules.gettingoperationAndService(ssysName, msgType, this.currentUser).subscribe(sourceResp => {\r\n      console.log(sourceResp);\r\n      this.sourceOperation = sourceResp.OPERATION;\r\n      this.sourceService = sourceResp.SERVICE;\r\n      this.sourceDetails = sourceResp.MdmtSystemChannel[0].messageChannel;\r\n\r\n      this.messageBasisIso = sourceResp.MdmtSystemService;\r\n      console.log(\"messageBasisIso\", this.messageBasisIso);\r\n    }, (err => {\r\n      console.log(err);\r\n    }))\r\n  }\r\n  // For Destination\r\n  destinaltionSelection(event) {\r\n    console.log(this.srcSystem);\r\n    console.log(\"ev\", event.value);\r\n    this.desSystem = event.option.value;\r\n    this.destination = event.option.value;\r\n    this.rules.gettingTranslationData(this.destination).subscribe(resp => {\r\n      console.log(resp);\r\n      if (resp) {\r\n        this.destinationSysData = resp;\r\n        this.ruleConfig.targetTranslationId = resp.transId;\r\n      }\r\n    })\r\n    this.externalsystem = this.tempArrayData;\r\n  }\r\n  ondestinationMsgType(event) {\r\n    console.log(\"ev\", event.value);\r\n    this.destiMsgType = event.value;\r\n    this.operationAndservDstination(this.destination, this.destiMsgType);\r\n  }\r\n  operationAndservDstination(destination, msgType) {\r\n    this.rules.gettingoperationAndService(destination, msgType, this.currentUser).subscribe(destination => {\r\n      console.log(destination);\r\n      this.destinationRespOperation = destination.OPERATION;\r\n      this.destinatioRespService = destination.SERVICE\r\n      // console.log(this.destinationRespOperation);\r\n    }, (err => {\r\n      console.log(err);\r\n    }))\r\n  }\r\n  //validation sys\r\n  onvalidateMsgType(event) {\r\n    this.gettingoperationSndservForValidation(this.validationData, event.value);\r\n  }\r\n  gettingoperationSndservForValidation(valData, msg) {\r\n    this.rules.gettingoperationAndService(valData, msg, this.currentUser).subscribe(valResp => {\r\n      console.log(valResp);\r\n      if (valResp) {\r\n\r\n\r\n        this.valOperation = valResp.OPERATION;\r\n        this.valService = valResp.SERVICE;\r\n        this.valDeatils = valResp.MdmtSystemChannel[0].messageChannel;\r\n        console.log(\"valDe\", this.valDeatils);\r\n        this.xmlRespData = valResp.MdmtSystemService;\r\n        console.log(this.xmlRespData.length);\r\n      }\r\n\r\n\r\n      // this.destinationRespOperation=destination[0];\r\n      // console.log(this.destinationRespOperation);\r\n    }, (err => {\r\n      console.log(err);\r\n    }))\r\n  }\r\n\r\n  onsearchingTablName(event) {\r\n    console.log(event.target.value);\r\n\r\n    console.log(\"this is arr\", this.sourcesysdata);\r\n    if (this.sourcesysdata) {\r\n      let data = this.sourcesysdata.filter(function (e) {\r\n        let extValue = e.toLowerCase();\r\n\r\n        let value = event.target.value.toLowerCase();\r\n        // console.log(extValue, value);\r\n        // return !extValue.indexOf(value);//changed this for 1192\r\n        return extValue.search(value) > -1\r\n      });\r\n      console.log(data);\r\n      this.externalsystem = data;\r\n\r\n    }\r\n\r\n  }\r\n  // save\r\n  submittingCreateRule() {\r\n\r\n    this.ruleConfig.mdmtValidationSystemData = this.multipleValidation;\r\n    this.ruleConfig.mdmtValidationSystemData.forEach(el => {\r\n      el.ruleId = this.ruleConfig.ruleId;\r\n    })\r\n    // console.log(this.ruleConfig);\r\n    this.arrRuleValidation.forEach(el => { el.ruleId = this.ruleConfig.ruleId });\r\n    console.log(this.arrRuleValidation);\r\n    this.ruleConfig.sysRuleDetails = this.arrRuleValidation;\r\n    console.log(this.ruleConfig);\r\n    //     let arrayObj = this.multipleValidation.map(item => {\r\n    //       return {\r\n    //         validationSystems:item.validationSystem\r\n    //       };\r\n    //     });\r\n    //     this.ruleConfig.validationSystems=arrayObj;\r\n    //     this.ruleConfig.creatorId=this.currentUser;\r\n\r\n    // console.log(this.ruleConfig);\r\n    // let payloadObj : any = {};\r\n    // payloadObj = this.ruleConfig;\r\n    // payloadObj.mdmtValidationSystemData = this.multipleValidation;\r\n    //   this.ruleDto.msgRule=this.ruleConfig;\r\n    //   this.arrRuleValidation.forEach(data=>{\r\n    //     data.ruleId=this.ruleDto.msgRule.ruleId;\r\n    //   });\r\n    // payloadObj.sysRuleDetails = this.arrRuleValidation;\r\n    // console.log(payloadObj);\r\n    console.log(this.ruleConfig);\r\n    debugger\r\n    this.rules.saveRuleconfig(this.ruleConfig, this.currentUser).subscribe((data) => {\r\n      if (data) {\r\n        console.log(data);\r\n        this.ruleConfig = data;\r\n\r\n        Swal.fire({ text: 'Record saved successfully' })\r\n        this.auditShowStatus = true;\r\n        this.disableSubmit = true;\r\n      }\r\n    }, err => {\r\n      Swal.fire({ text: 'Failed save the record' });\r\n    });\r\n    //     console.log(this.ruleDto);\r\n    //   this.ruleDto.msgRule=this.ruleConfig;\r\n    //   this.ruleDto.msgRule.creatorId=this.currentUser;\r\n    //   this.arrRuleValidation.forEach(data=>{\r\n    //     data.ruleId=this.ruleDto.msgRule.ruleId;\r\n    //     data.sourceTransDelId=this.ruleConfig.sourceTranslationId;\r\n\r\n    //    data.validationSyatems=this.validationData;\r\n\r\n    //   });\r\n    //  console.log(this.arrRuleValidation);\r\n    //   this.ruleDto.msgValidation=this.arrRuleValidation;\r\n    //   console.log(this.ruleDto);\r\n    //   this.rules.saveRuleconfig(this.ruleDto,this.currentUser).subscribe(data=>{\r\n    //     console.log(data);\r\n    //     if(data)\r\n    //     {\r\n    //       Swal.fire({\r\n    //         text:'Record Saved'\r\n    //       })\r\n    //     }\r\n    //   },(err)=>{\r\n    //     Swal.fire({\r\n    //       text:'Internal server error'\r\n    //     })\r\n    //   })  \r\n  }\r\n\r\n  onNext() {\r\n    // this.showpBar = true;\r\n    this.showRuleValidation = true;\r\n\r\n  }\r\n  onReset() {\r\n    this.disableSubmit = false;\r\n    this.desSystem = \"\";\r\n    this.srcSystem = \"\";\r\n    this.validationData = \"\";\r\n  }\r\n  Previous() {\r\n    this.showRuleValidation = false;\r\n  }\r\n  // fetching ISo\r\n  fetchingIso() {\r\n    this.addsystem.fetchingIsoForTcp().subscribe(isoResp => {\r\n      this.isoRespData = isoResp;\r\n      console.log(this.isoRespData);\r\n      this.messageBasisIso = isoResp.map((data) => {\r\n        return data.messageKey;\r\n      });\r\n    })\r\n  }\r\n  //fetching Xml\r\n  fetchingXMl() {\r\n    this.addsystem.gettinXMLmsgIncoming().subscribe(xmlResp => {\r\n      console.log(xmlResp);\r\n\r\n      // this.xmlRespData=xmlResp.map((data)=>{\r\n      //   return data.messageBasis;\r\n      // });\r\n\r\n\r\n    })\r\n  }\r\n\r\n  ruleIdInvalidOrNot(e: any) {\r\n    console.log(e);\r\n    var regexp = /^[a-zA-Z0-9-_]+$/;\r\n    console.log(this.ruleIdInvalid);\r\n    if (e) {\r\n      if (e.search(regexp) === -1) {\r\n        this.ruleIdInvalid = true;\r\n        console.log(\"1\" + \" \" +this.ruleIdInvalid);\r\n      }\r\n      else {\r\n        this.ruleIdInvalid = false;\r\n        console.log(\"2\" + \" \" +this.ruleIdInvalid);\r\n      }\r\n    }\r\n  }\r\n\r\n  onPrevoius() {\r\n    this.showRuleValidation = false;\r\n  }\r\n  onValidtion(event, i) {\r\n    console.log(this.srcSystem, this.desSystem);\r\n    console.log(event.value);\r\n    this.validationData = event.option.value;\r\n    if (this.selectedDocumentTypes2[i]) {\r\n      this.headerTagData1 = this.externalsystem.filter(val => val !== this.selectedDocumentTypes2[i])\r\n    }\r\n    this.selectedDocumentTypes2[i] = this.validationData;\r\n\r\n\r\n\r\n    this.headerTagData1.push(this.validationData);\r\n    console.log(this.validationData);\r\n    this.rules.gettingTranslationData(this.validationData).subscribe(resp => {\r\n      console.log(resp);\r\n      if (resp) {\r\n        this.validationTransData = resp;\r\n        // this.multipleValidation=resp;\r\n        this.multipleValidation[i].messageType = this.validationTransData.messageType;\r\n        this.multipleValidation[i].service = this.validationTransData.serviceName;\r\n        this.multipleValidation[i].operation = this.validationTransData.operationName;\r\n\r\n\r\n        // this.ruleConfig.sourceTranslationId=resp.transId;\r\n        this.gettingoperationSndservForValidation(this.validationData, resp.messageType);\r\n      }\r\n    })\r\n    this.externalsystem = this.tempArrayData;\r\n  }\r\n  issourceSysDisabled = (value) => {\r\n    return this.headerTagData1.includes(value);\r\n  }\r\n  onSubmitofValidtaion() {\r\n    if (this.validationData) {\r\n      Swal.fire({ text: 'Record Saved SuccessFully' })\r\n    }\r\n  }\r\n  addCreateRule() {\r\n    this.arrRuleValidation.push({ id: '',messageKey:'',validationDetail: '', validationMethod: '', ruleId: '' });\r\n  }\r\n\r\n  addValidation() {\r\n    this.add = true;\r\n    this.multipleValidation.push({ messageType: '',messageKey:'', operation: '', service: '', validationSystem: '', id: '', ruleId: '' });\r\n  }\r\n  removeValidation(i) {\r\n    this.multipleValidation.splice(i, 1)\r\n  }\r\n  removeCreateRule(i) {\r\n    this.arrRuleValidation.splice(i, 1);\r\n  }\r\n}\r\n\r\nexport class RuleConfig {\r\n  id: any;\r\n  ruleId: any;\r\n  ruleName: any;\r\n  sourceTranslationId: any;\r\n  targetTranslationId: any;\r\n  validationSystems: any;\r\n  creatorId: any;\r\n  createdTime: any;\r\n  approverId: any;\r\n  approvedTime: any;\r\n  versionNo: any;\r\n  approvedStatus: string;\r\n  approvedEver: string;\r\n  recordStatus: string;\r\n  mdmtValidationSystemData: Array<MultipleValidation>;\r\n  sysRuleDetails: Array<RuleValidation>;\r\n}\r\nexport class RuleValidation {\r\n  id: any;\r\n  ruleId: any;\r\n  messageKey:any;\r\n  validationMethod: any;\r\n  validationDetail: any;\r\n}\r\nexport class RuleDto {\r\n  msgRule: RuleConfig;\r\n  msgValidation: Array<RuleValidation>;\r\n}\r\nexport class MultipleValidation {\r\n  validationSystem: any;\r\n  messageType: any;\r\n  messageKey:any;\r\n  service: any;\r\n  operation: any;\r\n  id: any;\r\n  ruleId: any;\r\n}","export default \"/* ::ng-deep .mat-form-field-flex > .mat-form-field-infix { padding: 0.4em 0px !important;}\\r\\n::ng-deep .mat-form-field-label-wrapper { top: -1.5em; }\\r\\n\\r\\n::ng-deep .mat-form-field-appearance-outline.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label {\\r\\n    transform: translateY(-1.1em) scale(.75);\\r\\n    width: 80.33333%;\\r\\n} */\\r\\n/* ::ng-deep .mat-form-field-flex > .mat-form-field-infix { width: 30% !important;} */\\r\\n::ng-deep.mat-form-field-appearance-outline .mat-form-field-flex\\r\\n{\\r\\n    width: 160px !important;\\r\\n    height: 50px !important;\\r\\n}\\r\\n.mat-raised-button {\\r\\n    width: -webkit-fit-content;\\r\\n    width: -moz-fit-content;\\r\\n    width: fit-content;\\r\\n    height: 20px;\\r\\n    line-height: 27px;\\r\\n    min-height: 27px;\\r\\n    vertical-align: top;\\r\\n    font-size: 11px;\\r\\n    padding: 0 0;\\r\\n    margin: 0;\\r\\n    }\\r\\n#customers {\\r\\n        font-family: \\\"Trebuchet MS\\\", Arial, Helvetica, sans-serif;\\r\\n        border-collapse: collapse;\\r\\n        width: 100%;\\r\\n      }\\r\\n#customers td, #customers th {\\r\\n        border: 1px solid #ddd;\\r\\n        padding: 8px;\\r\\n        text-align: center;\\r\\n        \\r\\n      }\\r\\n#customers tr:nth-child(even){background-color: #f2f2f2;}\\r\\n#customers th {\\r\\n        padding-top: 12px;\\r\\n        padding-bottom: 12px;\\r\\n        text-align: left;\\r\\n        background-color:rgb(97, 178, 216);\\r\\n        color: white;\\r\\n      }\\r\\n     \\r\\n      \\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdmlld3Mvc2lhcy12Mi9ydWxlcy9jcmVhdGUtcnVsZXMvZWRpdC1ydWxlcy9lZGl0LXJ1bGVzLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7OztHQU1HO0FBQ0gscUZBQXFGO0FBQ3JGOztJQUVJLHVCQUF1QjtJQUN2Qix1QkFBdUI7QUFDM0I7QUFDQTtJQUNJLDBCQUFrQjtJQUFsQix1QkFBa0I7SUFBbEIsa0JBQWtCO0lBQ2xCLFlBQVk7SUFDWixpQkFBaUI7SUFDakIsZ0JBQWdCO0lBQ2hCLG1CQUFtQjtJQUNuQixlQUFlO0lBQ2YsWUFBWTtJQUNaLFNBQVM7SUFDVDtBQUNBO1FBQ0kseURBQXlEO1FBQ3pELHlCQUF5QjtRQUN6QixXQUFXO01BQ2I7QUFDQTtRQUNFLHNCQUFzQjtRQUN0QixZQUFZO1FBQ1osa0JBQWtCOztNQUVwQjtBQUVBLDhCQUE4Qix5QkFBeUIsQ0FBQztBQUV4RDtRQUNFLGlCQUFpQjtRQUNqQixvQkFBb0I7UUFDcEIsZ0JBQWdCO1FBQ2hCLGtDQUFrQztRQUNsQyxZQUFZO01BQ2QiLCJmaWxlIjoic3JjL2FwcC92aWV3cy9zaWFzLXYyL3J1bGVzL2NyZWF0ZS1ydWxlcy9lZGl0LXJ1bGVzL2VkaXQtcnVsZXMuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi8qIDo6bmctZGVlcCAubWF0LWZvcm0tZmllbGQtZmxleCA+IC5tYXQtZm9ybS1maWVsZC1pbmZpeCB7IHBhZGRpbmc6IDAuNGVtIDBweCAhaW1wb3J0YW50O31cclxuOjpuZy1kZWVwIC5tYXQtZm9ybS1maWVsZC1sYWJlbC13cmFwcGVyIHsgdG9wOiAtMS41ZW07IH1cclxuXHJcbjo6bmctZGVlcCAubWF0LWZvcm0tZmllbGQtYXBwZWFyYW5jZS1vdXRsaW5lLm1hdC1mb3JtLWZpZWxkLWNhbi1mbG9hdC5tYXQtZm9ybS1maWVsZC1zaG91bGQtZmxvYXQgLm1hdC1mb3JtLWZpZWxkLWxhYmVsIHtcclxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtMS4xZW0pIHNjYWxlKC43NSk7XHJcbiAgICB3aWR0aDogODAuMzMzMzMlO1xyXG59ICovXHJcbi8qIDo6bmctZGVlcCAubWF0LWZvcm0tZmllbGQtZmxleCA+IC5tYXQtZm9ybS1maWVsZC1pbmZpeCB7IHdpZHRoOiAzMCUgIWltcG9ydGFudDt9ICovXHJcbjo6bmctZGVlcC5tYXQtZm9ybS1maWVsZC1hcHBlYXJhbmNlLW91dGxpbmUgLm1hdC1mb3JtLWZpZWxkLWZsZXhcclxue1xyXG4gICAgd2lkdGg6IDE2MHB4ICFpbXBvcnRhbnQ7XHJcbiAgICBoZWlnaHQ6IDUwcHggIWltcG9ydGFudDtcclxufVxyXG4ubWF0LXJhaXNlZC1idXR0b24ge1xyXG4gICAgd2lkdGg6IGZpdC1jb250ZW50O1xyXG4gICAgaGVpZ2h0OiAyMHB4O1xyXG4gICAgbGluZS1oZWlnaHQ6IDI3cHg7XHJcbiAgICBtaW4taGVpZ2h0OiAyN3B4O1xyXG4gICAgdmVydGljYWwtYWxpZ246IHRvcDtcclxuICAgIGZvbnQtc2l6ZTogMTFweDtcclxuICAgIHBhZGRpbmc6IDAgMDtcclxuICAgIG1hcmdpbjogMDtcclxuICAgIH1cclxuICAgICNjdXN0b21lcnMge1xyXG4gICAgICAgIGZvbnQtZmFtaWx5OiBcIlRyZWJ1Y2hldCBNU1wiLCBBcmlhbCwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmO1xyXG4gICAgICAgIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7XHJcbiAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgIH1cclxuICAgICAgI2N1c3RvbWVycyB0ZCwgI2N1c3RvbWVycyB0aCB7XHJcbiAgICAgICAgYm9yZGVyOiAxcHggc29saWQgI2RkZDtcclxuICAgICAgICBwYWRkaW5nOiA4cHg7XHJcbiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgICAgIFxyXG4gICAgICB9XHJcbiAgICAgIFxyXG4gICAgICAjY3VzdG9tZXJzIHRyOm50aC1jaGlsZChldmVuKXtiYWNrZ3JvdW5kLWNvbG9yOiAjZjJmMmYyO31cclxuICAgICAgXHJcbiAgICAgICNjdXN0b21lcnMgdGgge1xyXG4gICAgICAgIHBhZGRpbmctdG9wOiAxMnB4O1xyXG4gICAgICAgIHBhZGRpbmctYm90dG9tOiAxMnB4O1xyXG4gICAgICAgIHRleHQtYWxpZ246IGxlZnQ7XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjpyZ2IoOTcsIDE3OCwgMjE2KTtcclxuICAgICAgICBjb2xvcjogd2hpdGU7XHJcbiAgICAgIH1cclxuICAgICBcclxuICAgICAgIl19 */\"","import { Component, OnInit, ChangeDetectorRef } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AddSystemService } from 'src/app/shared/services/addSys/add-system.service';\r\nimport { RulesService } from 'src/app/shared/services/rules/rules.service';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-edit-rules',\r\n  templateUrl: './edit-rules.component.html',\r\n  styleUrls: ['./edit-rules.component.css']\r\n})\r\nexport class EditRulesComponent implements OnInit {\r\n  currentUser: string;\r\n  \r\n  srcSystem: any;\r\n  desSystem: any;\r\n  validationSys:any;\r\n  externalsystem: any;\r\n  showRuleValidation: boolean = false;\r\n  validationData: any;\r\n  ruleValidtionNew: any;\r\n\r\n  showpBar: boolean = false;\r\n  isEdit:boolean=false;\r\n  ruleConfig = new RuleConfig();\r\n  systemName: any;\r\n  msgType: any;\r\n  sourceOperation: Object;\r\n  destination: any;\r\n  destiMsgType: any;\r\n  destinationRespOperation: Object;\r\n  authorizeDone : boolean = false;\r\n  deleted : boolean = false;\r\n  editBtn: boolean;\r\n  closeBtn: boolean;\r\n  authBtn: boolean;\r\n\r\n  ruleValidation = new RuleValidation();\r\n  arrRuleValidation: Array<RuleValidation> = [];\r\n  ruleDto = new RuleDto();\r\n  sourceService: any;\r\n  destinatioRespService: any;\r\n  valOperation: any;\r\n  valService: any;\r\n  sourcesystem: any;\r\n  sourceDetails: any;\r\n  valDeatils: any;\r\n  isoRespData: any;\r\n  messageBasisIso: any;\r\n  xmlRespData: any;\r\n  multipleValidation: Array<MultipleValidation> = [];\r\n  multipleValidationData: Array<MultipleValidation> = [];\r\n  count: [{ count: number }];\r\n  valCount: number = 0;\r\n  sourceSysData = new RuleConfig();\r\n  destinationSysData = new RuleConfig();\r\n  validationTransData :any;\r\n  navSubscription: any;\r\n  editRule: {};\r\n  sourceDataOfMsg: any;\r\n  sourcedata: any;\r\n  destinationId: any;\r\n  ModifyCreateRule:boolean=false;\r\n  reopenBtn: boolean;\r\n  authBtnHide: boolean;\r\n\r\n  constructor(private cdr: ChangeDetectorRef,\r\n    private addsystem: AddSystemService, private rules: RulesService,private router:Router) { }\r\n\r\n  ngOnInit() {\r\n    this.currentUser = localStorage.getItem('userFromLogin');\r\n    this.navSubscription = this.addsystem.getNavParam.subscribe(data => this.editRule = data);\r\n    console.log(\"in edit\", this.editRule);\r\n    this.ruleConfig.ruleId = this.editRule[\"ruleId\"];\r\n    this.ruleConfig.ruleName = this.editRule[\"ruleName\"];\r\n    this.ruleConfig.approvedEver = this.editRule[\"approvedEver\"];\r\n    this.ruleConfig.recordStatus = this.editRule[\"recordStatus\"];\r\n    this.ruleConfig.approvedStatus = this.editRule[\"approvedStatus\"];\r\n    this.ruleConfig.approverId = this.editRule[\"approverId\"];\r\n    this.ruleConfig.createdTime = this.editRule[\"createdTime\"];\r\n    this.ruleConfig.creatorId = this.editRule[\"creatorId\"];\r\n    this.ruleConfig.sysRuleId=this.editRule[\"sysRuleId\"];\r\n    this.ruleConfig.versionNo=this.editRule[\"versionNo\"];\r\n    this.multipleValidationData = this.editRule[\"mdmtValidationSystemData\"];\r\n    this.multipleValidation=this.editRule[\"mdmtValidationSystemData\"];\r\n    console.log(this.editRule[\"sourceSys\"]);\r\n\r\n    this.arrRuleValidation = this.editRule[\"sysRuleDetails\"];\r\n    console.log(this.arrRuleValidation);\r\n    if(this.ruleConfig.recordStatus== \"C\"){\r\n      console.log(this.ruleConfig.recordStatus);\r\n      this.authBtnHide=true;\r\n      this.reopenBtn=false;\r\n      \r\n    }\r\n\r\n    this.gettingExternalSsytem();\r\n    this.rules.gettingSysCode(this.editRule[\"sourceTranslationId\"]).subscribe(sourceresp => {\r\n      console.log(sourceresp);\r\n      if (sourceresp) {\r\n        this.ruleConfig.sourceTranslationId = \"\"\r\n        this.ruleConfig.sourceTranslationId = sourceresp.systemCode;\r\n        this.sourcedata=this.ruleConfig.sourceTranslationId;\r\n        this.cdr.markForCheck();\r\n        this.onSlectionExternalSystem(this.ruleConfig.sourceTranslationId);\r\n      }\r\n    });\r\n    this.rules.gettingSysCode(this.editRule[\"targetTranslationId\"]).subscribe(targetResp => {\r\n      console.log(targetResp);\r\n      this.ruleConfig.targetTranslationId = targetResp.systemCode;\r\n      this.destinationId=this.ruleConfig.targetTranslationId;\r\n      this.destinaltionSelection(this.ruleConfig.targetTranslationId)\r\n\r\n    });\r\n    this.multipleValidation.forEach((el,i)=>{\r\n      console.log(el);\r\n      this.rules.gettingSysCode(el.id).subscribe(valReps => {\r\n        console.log(\"valReps\",valReps);\r\n      });\r\n      this.onValidtion(el.validationSystem,i);\r\n    })\r\n    this.multipleValidationData.forEach((el,i)=>{\r\n      this.rules.gettingSysCode(el.id).subscribe(valReps => {\r\n        console.log(\"valReps vvvvvv\",valReps);\r\n      });\r\n      this.onValidtion(el.validationSystem,i);\r\n    });\r\n    // this.fetchingIso();\r\n    // this.fetchingXMl();\r\n\r\n    \r\n    // this.arrRuleValidation.push({id:'',ruleId:'',validationDetail:'',validationMethod:''});\r\n    // this.multipleValidation.push({ messageType: '', operation: '', service: '', validationSystem: '', id: '', ruleId: '' });\r\n\r\n  }\r\n  onEdit()\r\n  {\r\n    this.isEdit=true;\r\n    if(this.ruleConfig.approvedStatus== \"U\"){\r\n      this.isEdit=false;\r\n      Swal.fire(\"UnAuthorized record can't be edited.\");\r\n    }\r\n    if(this.ruleConfig.recordStatus== \"C\"){\r\n  this.isEdit=false;\r\n      Swal.fire(\"Closed record can't be edited.\");\r\n    }\r\n  }\r\n  gettingExternalSsytem() {\r\n    this.rules.gettingExternalsystem().subscribe(extsysRes => {\r\n      console.log(extsysRes);\r\n      this.externalsystem = extsysRes;\r\n    })\r\n  }\r\n  onSlectionExternalSystem(event) {\r\n    console.log(\"eve\", event);\r\n    // this.systemName = event.value;\r\n    this.sourcesystem = event;\r\n    this.rules.gettingTranslationData(this.sourcesystem).subscribe(resp => {\r\n      console.log(resp);\r\n      if (resp) {\r\n        this.sourceSysData = resp;\r\n        this.ruleConfig.sourceTranslationId=resp.transId;\r\n        this.gettingoperationAndServiceFroSourceSystem(this.sourcesystem, resp.messageType);\r\n      }\r\n    })\r\n  }\r\n  onSelectionOFMessageType(event) {\r\n    this.msgType = event.value;\r\n    // this.gettingoperationAndServiceFroSourceSystem(this.sourcesystem, this.msgType);\r\n  }\r\n  // for source \r\n  gettingoperationAndServiceFroSourceSystem(ssysName, msgType) {\r\n    console.log(\"ssysName\", ssysName)\r\n    this.rules.gettingoperationAndService(ssysName, msgType, this.currentUser).subscribe(sourceResp => {\r\n      this.sourceOperation = sourceResp.OPERATION;\r\n      this.sourceService = sourceResp.SERVICE;\r\n      this.sourceDetails = sourceResp.MdmtSystemChannel[0].messageChannel;\r\n\r\n      this.messageBasisIso = sourceResp.MdmtSystemService;\r\n      for(let k=0; k<=this.messageBasisIso.length;k++){\r\n        // this.messageBasisIso[k].setValue('validationMethod', this.arrRuleValidation[0].validationMethod);\r\n        // this.messageBasisIso[k].setValue('validationDetail', this.arrRuleValidation[0].validationDetail);\r\n        this.messageBasisIso[k].validationMethod = this.arrRuleValidation[0].validationMethod;\r\n        this.messageBasisIso[k].validationDetail = this.arrRuleValidation[0].validationDetail;\r\n      }\r\n\r\n\r\n    }, (err => {\r\n      console.log(err);\r\n    }))\r\n  }\r\n  // For Destination\r\n  destinaltionSelection(event) {\r\n    console.log(\"ev\", event);\r\n    this.destination = event;\r\n    this.rules.gettingTranslationData(this.destination).subscribe(resp => {\r\n      console.log(resp);\r\n      if (resp) {\r\n        this.destinationSysData = resp;\r\n        this.ruleConfig.targetTranslationId=resp.transId;\r\n      }\r\n    })\r\n  }\r\n  ondestinationMsgType(event) {\r\n    console.log(\"ev\", event.value);\r\n    this.destiMsgType = event.value;\r\n    this.operationAndservDstination(this.destination, this.destiMsgType);\r\n  }\r\n  operationAndservDstination(destination, msgType) {\r\n    this.rules.gettingoperationAndService(destination, msgType, this.currentUser).subscribe(destination => {\r\n      console.log(destination);\r\n      this.destinationRespOperation = destination.OPERATION;\r\n      this.destinatioRespService = destination.SERVICE\r\n      // console.log(this.destinationRespOperation);\r\n    }, (err => {\r\n      console.log(err);\r\n    }))\r\n  }\r\n  //validation sys\r\n  onvalidateMsgType(event) {\r\n    this.gettingoperationSndservForValidation(this.validationData, event.value);\r\n  }\r\n  gettingoperationSndservForValidation(valData, msg) {\r\n    this.rules.gettingoperationAndService(valData, msg, this.currentUser).subscribe(valResp => {\r\n      console.log(valResp);\r\n      if (valResp) {\r\n\r\n\r\n        this.valOperation = valResp.OPERATION;\r\n        this.valService = valResp.SERVICE;\r\n        this.valDeatils = valResp.MdmtSystemChannel[0].messageChannel;\r\n        console.log(\"valDe\", this.valDeatils);\r\n        this.xmlRespData = valResp.MdmtSystemService;\r\n        console.log(this.xmlRespData.length);\r\n      }\r\n\r\n\r\n      // this.destinationRespOperation=destination[0];\r\n      // console.log(this.destinationRespOperation);\r\n    }, (err => {\r\n      console.log(err);\r\n    }))\r\n  }\r\n  // save\r\n  submittingCreateRule() {\r\n    // let arrayObj = this.multipleValidation.map(item => {\r\n    //   return {\r\n    //     validationSystems: item.validationSystem\r\n    //   };\r\n    // });\r\n    // this.ruleConfig.validationSystems = arrayObj;\r\n    // this.ruleConfig.creatorId = this.currentUser;\r\n\r\n    // console.log(this.ruleConfig);\r\n    // let payloadObj: any = {};\r\n    // payloadObj = this.ruleConfig;\r\n    // payloadObj.mdmtValidationSystemData = this.multipleValidation;\r\n    // this.ruleDto.msgRule = this.ruleConfig;\r\n    // this.arrRuleValidation.forEach(data => {\r\n    //   data.ruleId = this.ruleDto.msgRule.ruleId;\r\n    // });\r\n    // payloadObj.sysRuleDetails = this.arrRuleValidation;\r\n    // console.log(payloadObj);\r\n    this.multipleValidation=this.multipleValidationData;\r\n    this.ruleConfig.mdmtValidationSystemData=this.multipleValidation;\r\n    this.ruleConfig.mdmtValidationSystemData.forEach(el=>{\r\n      el.ruleId=this.ruleConfig.ruleId;\r\n    })\r\n    // console.log(this.ruleConfig);\r\n    this.arrRuleValidation.forEach(el=>{el.ruleId=this.ruleConfig.ruleId});\r\n    console.log(this.arrRuleValidation);\r\n    this.ruleConfig.sysRuleDetails=this.arrRuleValidation;\r\n    console.log(this.ruleConfig);\r\n    this.rules.editRuleConfig(\"update\",this.ruleConfig, this.currentUser).subscribe((data) => {\r\n      if (data) {\r\n        Swal.fire({\r\n          text: 'Record Saved successfully'\r\n        })\r\n        this.ModifyCreateRule=true;\r\n      }\r\n    }, err => {\r\n      Swal.fire({ text: 'Failed To Save the Record' });\r\n    });\r\n    //     console.log(this.ruleDto);\r\n    //   this.ruleDto.msgRule=this.ruleConfig;\r\n    //   this.ruleDto.msgRule.creatorId=this.currentUser;\r\n    //   this.arrRuleValidation.forEach(data=>{\r\n    //     data.ruleId=this.ruleDto.msgRule.ruleId;\r\n    //     data.sourceTransDelId=this.ruleConfig.sourceTranslationId;\r\n\r\n    //    data.validationSyatems=this.validationData;\r\n\r\n    //   });\r\n    //  console.log(this.arrRuleValidation);\r\n    //   this.ruleDto.msgValidation=this.arrRuleValidation;\r\n    //   console.log(this.ruleDto);\r\n    //   this.rules.saveRuleconfig(this.ruleDto,this.currentUser).subscribe(data=>{\r\n    //     console.log(data);\r\n    //     if(data)\r\n    //     {\r\n    //       Swal.fire({\r\n    //         text:'Record Saved'\r\n    //       })\r\n    //     }\r\n    //   },(err)=>{\r\n    //     Swal.fire({\r\n    //       text:'Internal server error'\r\n    //     })\r\n    //   })  \r\n  }\r\n\r\n  onNext() {\r\n    // this.showpBar = true;\r\n    this.showRuleValidation = true;\r\n\r\n  }\r\n  Previous() {\r\n    this.showRuleValidation = false;\r\n  }\r\n  // fetching ISo\r\n  fetchingIso() {\r\n    this.addsystem.fetchingIsoForTcp().subscribe(isoResp => {\r\n      this.isoRespData = isoResp;\r\n      console.log(this.isoRespData);\r\n      this.messageBasisIso = isoResp.map((data) => {\r\n        return data.messageKey;\r\n      });\r\n    })\r\n  }\r\n  //fetching Xml\r\n  fetchingXMl() {\r\n    this.addsystem.gettinXMLmsgIncoming().subscribe(xmlResp => {\r\n      console.log(xmlResp);\r\n\r\n      // this.xmlRespData=xmlResp.map((data)=>{\r\n      //   return data.messageBasis;\r\n      // });\r\n\r\n\r\n    })\r\n  }\r\n\r\n\r\n  onPrevoius() {\r\n    this.showRuleValidation = false;\r\n  }\r\n  onValidtion(event,i) {\r\n    console.log(event);\r\n    this.validationData = event;\r\n    console.log(this.validationData);\r\n    this.rules.gettingTranslationData(this.validationData).subscribe(resp => {\r\n      console.log(resp);\r\n      if (resp) {\r\n        this.validationTransData = resp;\r\n        this.multipleValidation[i].messageType=resp.messageType;\r\n        this.multipleValidation[i].service=resp.serviceName;\r\n        this.multipleValidation[i].operation=resp.operationName;\r\n        // this.multipleValidation[i].validationSystem = resp.transId;\r\n        this.multipleValidationData[i].messageType=resp.messageType;\r\n        this.multipleValidationData[i].service=resp.serviceName;\r\n        this.multipleValidationData[i].operation=resp.operationName;\r\n        // this.multipleValidation[i].validationSystem = this.validationData;\r\n        console.log(this.multipleValidationData);\r\n        // this.multipleValidation[i].validationSystem = resp.transId;\r\n        this.gettingoperationSndservForValidation(this.validationData, resp.messageType);\r\n      }\r\n    })\r\n\r\n  }\r\n  onSubmitofValidtaion() {\r\n    if (this.validationData) {\r\n      Swal.fire({ text: 'Record Saved SuccessFully' })\r\n    }\r\n  }\r\n  addCreateRule() {\r\n    this.arrRuleValidation.push({ id: '', validationDetail: '', validationMethod: '', ruleId: '' });\r\n  }\r\n  addValidation() {\r\n    this.multipleValidationData.push({ messageType: '', operation: '', service: '', validationSystem: '', id: '', ruleId: '' });\r\n  }\r\n  removeValidation(i) {\r\n    this.multipleValidationData.splice(i, 1)\r\n  }\r\n  removeCreateRule(i) {\r\n    this.arrRuleValidation.splice(i, 1);\r\n  }\r\n  onAuthOfRule() {\r\n    // let payloadObj: any = {};\r\n    // payloadObj = this.ruleConfig;\r\n    // payloadObj.mdmtValidationSystemData = this.multipleValidation;\r\n    // this.ruleDto.msgRule = this.ruleConfig;\r\n    // this.arrRuleValidation.forEach(data => {\r\n    //   data.ruleId = this.ruleDto.msgRule.ruleId;\r\n    // });\r\n    // payloadObj.sysRuleDetails = this.arrRuleValidation;\r\n    // console.log(payloadObj);\r\n    if(this.ruleConfig.creatorId == this.currentUser){\r\n      Swal.fire({ text: \"Maker cannot authorize!\" });\r\n    }\r\n    else{\r\n      this.ruleConfig.mdmtValidationSystemData=this.multipleValidation;\r\n      this.ruleConfig.mdmtValidationSystemData.forEach(el=>{\r\n        el.ruleId=this.ruleConfig.ruleId;\r\n      })\r\n      // console.log(this.ruleConfig);\r\n      this.arrRuleValidation.forEach(el=>{el.ruleId=this.ruleConfig.ruleId});\r\n      console.log(this.arrRuleValidation);\r\n      this.ruleConfig.sysRuleDetails=this.arrRuleValidation;\r\n      console.log(this.ruleConfig);\r\n      this.rules.editRuleConfig(\"auth\",this.ruleConfig, this.currentUser).subscribe(authResp => {\r\n        console.log(authResp);\r\n        if (authResp) {\r\n          this.ruleConfig = authResp;\r\n          this.authorizeDone = true;\r\n          \r\n          Swal.fire({ text: \"Record Authorized\" });\r\n        }\r\n  \r\n      }, (err) => {\r\n        Swal.fire({ text: \"Failed To Authorize\" });\r\n      })\r\n    }\r\n  }\r\n  onCloseOfRule() {\r\n \r\n    // let payloadObj: any = {};\r\n    // payloadObj = this.ruleConfig;\r\n    // payloadObj.mdmtValidationSystemData = this.multipleValidation;\r\n    // this.ruleDto.msgRule = this.ruleConfig;\r\n    // this.arrRuleValidation.forEach(data => {\r\n    //   data.ruleId = this.ruleDto.msgRule.ruleId;\r\n    // });\r\n    // payloadObj.sysRuleDetails = this.arrRuleValidation;\r\n    // console.log(payloadObj);\r\n    this.ruleConfig.mdmtValidationSystemData=this.multipleValidation;\r\n    this.ruleConfig.mdmtValidationSystemData.forEach(el=>{\r\n      el.ruleId=this.ruleConfig.ruleId;\r\n    })\r\n    // console.log(this.ruleConfig);\r\n    this.arrRuleValidation.forEach(el=>{el.ruleId=this.ruleConfig.ruleId});\r\n    console.log(this.arrRuleValidation);\r\n    this.ruleConfig.sysRuleDetails=this.arrRuleValidation;\r\n    console.log(this.ruleConfig);\r\n    console.log(this.reopenBtn);\r\n    this.rules.editRuleConfig(\"close\",this.ruleConfig, this.currentUser).subscribe(closeResp => {\r\n      console.log(closeResp);\r\n      if (closeResp) {\r\n        this.ruleConfig = closeResp;\r\n        this.editBtn=true;\r\n        this.authBtn=true;\r\n        this.deleted=false;\r\n        this.reopenBtn=false;\r\n        Swal.fire({ text: \"Record Closed SuccessFully\" });\r\n      }\r\n    }, err => {\r\n      Swal.fire({ text: \"Failed to close the Record\" });\r\n    })\r\n  }\r\n  onOpenRule()\r\n  {\r\n    // let payloadObj: any = {};\r\n    // payloadObj = this.ruleConfig;\r\n    // payloadObj.mdmtValidationSystemData = this.multipleValidation;\r\n    // this.ruleDto.msgRule = this.ruleConfig;\r\n    // this.arrRuleValidation.forEach(data => {\r\n    //   data.ruleId = this.ruleDto.msgRule.ruleId;\r\n    // });\r\n    // payloadObj.sysRuleDetails = this.arrRuleValidation;\r\n    // console.log(payloadObj);\r\n    this.ruleConfig.mdmtValidationSystemData=this.multipleValidation;\r\n    this.ruleConfig.mdmtValidationSystemData.forEach(el=>{\r\n      el.ruleId=this.ruleConfig.ruleId;\r\n    })\r\n    // console.log(this.ruleConfig);\r\n    this.arrRuleValidation.forEach(el=>{el.ruleId=this.ruleConfig.ruleId});\r\n    console.log(this.arrRuleValidation);\r\n    this.ruleConfig.sysRuleDetails=this.arrRuleValidation;\r\n    console.log(this.ruleConfig);\r\n    this.rules.editRuleConfig(\"open\",this.ruleConfig,this.currentUser).subscribe(openResp=>{\r\n      console.log(openResp);\r\n      if(openResp){\r\n        this.ruleConfig = openResp;\r\n        this.authBtnHide=false;\r\n        this.editBtn=false;\r\n        this.authBtn=false;\r\n        Swal.fire({text:\"Record Open Successfully\"});\r\n      }\r\n    },err=>{\r\n      Swal.fire({text:\"Failed to open the Record\"});\r\n    })\r\n  }\r\n  deleteRule()\r\n  {\r\n    // let payloadObj: any = {};\r\n    // payloadObj = this.ruleConfig;\r\n    // payloadObj.mdmtValidationSystemData = this.multipleValidation;\r\n    // this.ruleDto.msgRule = this.ruleConfig;\r\n    // this.arrRuleValidation.forEach(data => {\r\n    //   data.ruleId = this.ruleDto.msgRule.ruleId;\r\n    // });\r\n    // payloadObj.sysRuleDetails = this.arrRuleValidation;\r\n    // console.log(payloadObj);\r\n    this.ruleConfig.mdmtValidationSystemData=this.multipleValidation;\r\n    this.ruleConfig.mdmtValidationSystemData.forEach(el=>{\r\n      el.ruleId=this.ruleConfig.ruleId;\r\n    })\r\n    // console.log(this.ruleConfig);\r\n    this.arrRuleValidation.forEach(el=>{el.ruleId=this.ruleConfig.ruleId});\r\n    console.log(this.arrRuleValidation);\r\n    this.ruleConfig.sysRuleDetails=this.arrRuleValidation;\r\n    console.log(this.ruleConfig);\r\n    this.rules.onDeleteRuleCongif(this.ruleConfig.sysRuleId, this.currentUser).subscribe(\r\n      (response) => {\r\n        if(response){\r\n          this.deleted = true;\r\n          this.editBtn=true;\r\n          this.authBtn=true;\r\n          this.closeBtn=true;\r\n        \r\n          Swal.fire({title:'Deleted Successfully!',\r\n          confirmButtonText:'Ok'\r\n        }).then((result)=>{\r\n            if(result){\r\n              this.router.navigateByUrl('/sias-v2/ruleSummary')\r\n            }\r\n          });\r\n         \r\n        }\r\n        else{\r\n        Swal.fire(\"Failed to delete the reocrd\");\r\n        }\r\n      });\r\n  }\r\n}\r\n\r\n\r\nexport class RuleConfig {\r\n  id: any;\r\n  sysRuleId:any;\r\n  ruleId: any;\r\n  ruleName: any;\r\n  sourceTranslationId: any;\r\n  targetTranslationId: any;\r\n  validationSystems: any;\r\n  creatorId: any;\r\n  createdTime: any;\r\n  approverId: any;\r\n  approvedTime: any;\r\n  versionNo: any;\r\n  approvedStatus: string;\r\n  approvedEver: string;\r\n  recordStatus: string;\r\n   mdmtValidationSystemData:Array<MultipleValidation>;\r\n   sysRuleDetails:Array<RuleValidation>;\r\n}\r\nexport class RuleValidation {\r\n  id: any;\r\n  ruleId: any;\r\n  validationMethod: any;\r\n  validationDetail: any;\r\n}\r\nexport class RuleDto {\r\n  msgRule: RuleConfig;\r\n  msgValidation: Array<RuleValidation>;\r\n}\r\nexport class MultipleValidation {\r\n  validationSystem: any;\r\n  messageType: any;\r\n  service: any;\r\n  operation: any;\r\n  id: any;\r\n  ruleId: any;\r\n}","export default \"table {\\r\\n  border-collapse: initial;\\r\\n  width:100%;\\r\\n  text-align: center !important;\\r\\n}\\r\\n:host ::ng-deep .mat-sort-header-container { \\r\\n  display: flex;  \\r\\n  justify-content: center; \\r\\n}\\r\\nth.mat-header-cell, td.mat-cell { \\r\\n  text-align: center; \\r\\n}\\r\\n.mat-header-cell {\\r\\n  text-align: center;\\r\\n  height: 25px !important;\\r\\n\\r\\n}\\r\\n.mat-cell {\\r\\n  text-align: center;\\r\\n  height: 25px !important;\\r\\n\\r\\n}\\r\\ntr:nth-child(even) {\\r\\n  height: 25px !important;\\r\\n}\\r\\nth {\\r\\n  font-weight: small;\\r\\n  height: 25px !important;\\r\\n  text-align: center;\\r\\n}\\r\\ntr {\\r\\n  font-weight: small;\\r\\n  height: 25px !important;\\r\\n  text-align: center;\\r\\n}\\r\\nmat-paginator {\\r\\n  width: auto !important;\\r\\n  height: 40px !important;\\r\\n}\\r\\nmd-pagination-wrapper {\\r\\n  width: auto !important;\\r\\n  height: 40px !important;\\r\\n}\\r\\n.mat-raised-button {\\r\\n  width: -webkit-fit-content;\\r\\n  width: -moz-fit-content;\\r\\n  width: fit-content;\\r\\n  height: 20px;\\r\\n  line-height: 27px;\\r\\n  min-height: 27px;\\r\\n  vertical-align: top;\\r\\n  font-size: 11px;\\r\\n  padding: 0 0;\\r\\n  margin: 0;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdmlld3Mvc2lhcy12Mi9ydWxlcy9ydWxlLXN1bW1hcnkvcnVsZS1zdW1tYXJ5LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSx3QkFBd0I7RUFDeEIsVUFBVTtFQUNWLDZCQUE2QjtBQUMvQjtBQUNBO0VBQ0UsYUFBYTtFQUNiLHVCQUF1QjtBQUN6QjtBQUVBO0VBQ0Usa0JBQWtCO0FBQ3BCO0FBRUE7RUFDRSxrQkFBa0I7RUFDbEIsdUJBQXVCOztBQUV6QjtBQUVBO0VBQ0Usa0JBQWtCO0VBQ2xCLHVCQUF1Qjs7QUFFekI7QUFHQTtFQUNFLHVCQUF1QjtBQUN6QjtBQUVBO0VBQ0Usa0JBQWtCO0VBQ2xCLHVCQUF1QjtFQUN2QixrQkFBa0I7QUFDcEI7QUFDQTtFQUNFLGtCQUFrQjtFQUNsQix1QkFBdUI7RUFDdkIsa0JBQWtCO0FBQ3BCO0FBQ0E7RUFDRSxzQkFBc0I7RUFDdEIsdUJBQXVCO0FBQ3pCO0FBRUE7RUFDRSxzQkFBc0I7RUFDdEIsdUJBQXVCO0FBQ3pCO0FBS0E7RUFDRSwwQkFBa0I7RUFBbEIsdUJBQWtCO0VBQWxCLGtCQUFrQjtFQUNsQixZQUFZO0VBQ1osaUJBQWlCO0VBQ2pCLGdCQUFnQjtFQUNoQixtQkFBbUI7RUFDbkIsZUFBZTtFQUNmLFlBQVk7RUFDWixTQUFTO0FBQ1giLCJmaWxlIjoic3JjL2FwcC92aWV3cy9zaWFzLXYyL3J1bGVzL3J1bGUtc3VtbWFyeS9ydWxlLXN1bW1hcnkuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbInRhYmxlIHtcclxuICBib3JkZXItY29sbGFwc2U6IGluaXRpYWw7XHJcbiAgd2lkdGg6MTAwJTtcclxuICB0ZXh0LWFsaWduOiBjZW50ZXIgIWltcG9ydGFudDtcclxufVxyXG46aG9zdCA6Om5nLWRlZXAgLm1hdC1zb3J0LWhlYWRlci1jb250YWluZXIgeyBcclxuICBkaXNwbGF5OiBmbGV4OyAgXHJcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7IFxyXG59XHJcblxyXG50aC5tYXQtaGVhZGVyLWNlbGwsIHRkLm1hdC1jZWxsIHsgXHJcbiAgdGV4dC1hbGlnbjogY2VudGVyOyBcclxufVxyXG5cclxuLm1hdC1oZWFkZXItY2VsbCB7XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gIGhlaWdodDogMjVweCAhaW1wb3J0YW50O1xyXG5cclxufVxyXG5cclxuLm1hdC1jZWxsIHtcclxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgaGVpZ2h0OiAyNXB4ICFpbXBvcnRhbnQ7XHJcblxyXG59XHJcblxyXG5cclxudHI6bnRoLWNoaWxkKGV2ZW4pIHtcclxuICBoZWlnaHQ6IDI1cHggIWltcG9ydGFudDtcclxufVxyXG5cclxudGgge1xyXG4gIGZvbnQtd2VpZ2h0OiBzbWFsbDtcclxuICBoZWlnaHQ6IDI1cHggIWltcG9ydGFudDtcclxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbn1cclxudHIge1xyXG4gIGZvbnQtd2VpZ2h0OiBzbWFsbDtcclxuICBoZWlnaHQ6IDI1cHggIWltcG9ydGFudDtcclxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbn1cclxubWF0LXBhZ2luYXRvciB7XHJcbiAgd2lkdGg6IGF1dG8gIWltcG9ydGFudDtcclxuICBoZWlnaHQ6IDQwcHggIWltcG9ydGFudDtcclxufVxyXG5cclxubWQtcGFnaW5hdGlvbi13cmFwcGVyIHtcclxuICB3aWR0aDogYXV0byAhaW1wb3J0YW50O1xyXG4gIGhlaWdodDogNDBweCAhaW1wb3J0YW50O1xyXG59XHJcblxyXG5cclxuXHJcblxyXG4ubWF0LXJhaXNlZC1idXR0b24ge1xyXG4gIHdpZHRoOiBmaXQtY29udGVudDtcclxuICBoZWlnaHQ6IDIwcHg7XHJcbiAgbGluZS1oZWlnaHQ6IDI3cHg7XHJcbiAgbWluLWhlaWdodDogMjdweDtcclxuICB2ZXJ0aWNhbC1hbGlnbjogdG9wO1xyXG4gIGZvbnQtc2l6ZTogMTFweDtcclxuICBwYWRkaW5nOiAwIDA7XHJcbiAgbWFyZ2luOiAwO1xyXG59Il19 */\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { RulesService } from 'src/app/shared/services/rules/rules.service';\r\nimport Swal from 'sweetalert2';\r\nimport { MatPaginator, MatTableDataSource, MatSort } from '@angular/material';\r\nimport { Router } from '@angular/router';\r\nimport { AddSystemService } from 'src/app/shared/services/addSys/add-system.service';\r\n\r\n@Component({\r\n  selector: 'app-rule-summary',\r\n  templateUrl: './rule-summary.component.html',\r\n  styleUrls: ['./rule-summary.component.css']\r\n})\r\nexport class RuleSummaryComponent implements OnInit {\r\n  ruleData: any;\r\n  sourceSystemResp: any;\r\n  destinationsystem: any;\r\n\r\n  constructor(private rulesSummary:RulesService,private router:Router,private addSystem:AddSystemService) { }\r\n  displayedColumns: string[] = ['ruleId', 'ruleName', 'sourceTranslationId', 'targetTranslationId', 'creatorId','createdTime'];\r\n  dataSource: MatTableDataSource<any>;\r\n  @ViewChild(MatPaginator,{static:true}) paginator: MatPaginator;\r\n  @ViewChild(MatSort,{static:false}) sort: MatSort;\r\n  ngOnInit() {\r\n   this.fetchingallTheRules();\r\n  }\r\n  fetchingallTheRules()\r\n  {\r\n    this.rulesSummary.fetchingRules().subscribe(rulesummaryResp=>\r\n      {\r\n\r\n        console.log(rulesummaryResp);\r\n        if(rulesummaryResp)\r\n        {\r\n          this.ruleData=rulesummaryResp;\r\n          // this.setForm(this.sumaData);\r\n          this.dataSource = new MatTableDataSource(this.ruleData);\r\n          this.dataSource.paginator = this.paginator;\r\n          this.dataSource.sort = this.sort;\r\n        }\r\n        else{\r\n          Swal.fire({\r\n            type: 'error',\r\n  \r\n            text: 'Server Error',\r\n          });\r\n        }\r\n      })\r\n  }\r\n \r\n  editcreateRule(row)\r\n  {\r\n    console.log(row);\r\n   \r\n    this.rulesSummary.gettingCreateRuleById(row.ruleId).subscribe(resp=>{\r\n      console.log(resp);\r\n      \r\n      let queryParams = {\r\n      'ruleId':resp.ruleId,\r\n      'ruleName':resp.ruleName,\r\n      'recordStatus':resp.recordStatus,\r\n      'approvedEver':resp.approvedEver,\r\n      'approvedStatus':resp.approvedStatus,\r\n      'approverId':resp.approverId,\r\n      'createdTime':resp.createdTime,\r\n      'creatorId':resp.creatorId,  \r\n      'sysRuleDetails':resp.sysRuleDetails,\r\n      'sourceTranslationId':resp.sourceTranslationId,\r\n      'targetTranslationId':resp.targetTranslationId,\r\n      'mdmtValidationSystemData':resp.mdmtValidationSystemData,\r\n      'sysRuleId':resp.sysRuleId,\r\n      'versionNo':resp.versionNo\r\n\r\n     \r\n      \r\n      // 'sourceTransDelId':resp[0].sourceTransDelId,\r\n      // 'validationDetail':resp[0].validationDetail,\r\n      // 'validationMethod':resp[0].validationMethod,\r\n      // 'validationSystems':resp[0].validationSystems\r\n\r\n\r\n    }\r\n    this.addSystem.sendNavParam(queryParams);\r\n  this.router.navigateByUrl('/sias-v2/editRules');\r\n    console.log(queryParams);\r\n  \r\n    })\r\n   \r\n  }\r\n}\r\n","export default \"::ng-deep.mat-form-field-appearance-outline .mat-form-field-flex\\r\\n{\\r\\n    width: 180px !important;\\r\\n    height: 50px !important;\\r\\n}  \\r\\n::ng-deep .mat-form-field-flex > .mat-form-field-infix \\r\\n{ padding: 0.5em 0px !important;}  \\r\\n#chFile{\\r\\n  display: none;\\r\\n  }  \\r\\n.btnFile{\\r\\n  background-color: rgb(130, 130, 173);\\r\\n  margin-right: 30px;\\r\\n  width: 110px;\\r\\n  }  \\r\\n.mat-raised-button {\\r\\n    width: -webkit-fit-content;\\r\\n    width: -moz-fit-content;\\r\\n    width: fit-content;\\r\\n    height: 20px;\\r\\n    line-height: 27px;\\r\\n    min-height: 27px;\\r\\n    vertical-align: top;\\r\\n    font-size: 11px;\\r\\n    padding: 0 0;\\r\\n    margin: 0;\\r\\n    margin-bottom:20px;\\r\\n  }  \\r\\n.baiscInfocard\\r\\n{\\r\\n  width: 100%;\\r\\n /* margin-left: 15%; */\\r\\n}  \\r\\n.example-container {\\r\\n  height: 250px;\\r\\n  overflow: auto;\\r\\n}  \\r\\n.mat-raised-button {\\r\\n  width: -webkit-fit-content;\\r\\n  width: -moz-fit-content;\\r\\n  width: fit-content;\\r\\n  height: 20px;\\r\\n  line-height: 27px;\\r\\n  min-height: 27px;\\r\\n  vertical-align: top;\\r\\n  font-size: 11px;\\r\\n  padding: 0 0;\\r\\n  margin: 0;\\r\\n  }  \\r\\n#customers {\\r\\n      font-family: \\\"Trebuchet MS\\\", Arial, Helvetica, sans-serif;\\r\\n      border-collapse: collapse;\\r\\n      width: 100%;\\r\\n      }  \\r\\n#customers td, #customers th {\\r\\n      border: 1px solid #ddd;\\r\\n      padding: 8px;\\r\\n      text-align: center;\\r\\n      \\r\\n      }  \\r\\n#customers tr:nth-child(even){background-color: #f2f2f2;}  \\r\\n#customers th {\\r\\n      padding-top: 12px;\\r\\n      padding-bottom: 12px;\\r\\n      text-align: left;\\r\\n      background-color:rgb(97, 178, 216);\\r\\n      color: white;\\r\\n      }  \\r\\nmat-form-field{\\r\\n  width: 100%;\\r\\n  \\r\\n}\\r\\n  \\r\\n  \\r\\n  \\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdmlld3Mvc2lhcy12Mi9ydWxlcy9ydWxlLXRyYW5zbGF0aW9uL2VkaXQtcnVsZS10YXJuc2xhdGlvbi9lZGl0LXJ1bGUtdGFybnNsYXRpb24uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7SUFFSSx1QkFBdUI7SUFDdkIsdUJBQXVCO0FBQzNCO0FBQ0E7RUFDRSw2QkFBNkIsQ0FBQztBQUVoQztFQUNFLGFBQWE7RUFDYjtBQUNBO0VBQ0Esb0NBQW9DO0VBQ3BDLGtCQUFrQjtFQUNsQixZQUFZO0VBQ1o7QUFFQTtJQUNFLDBCQUFrQjtJQUFsQix1QkFBa0I7SUFBbEIsa0JBQWtCO0lBQ2xCLFlBQVk7SUFDWixpQkFBaUI7SUFDakIsZ0JBQWdCO0lBQ2hCLG1CQUFtQjtJQUNuQixlQUFlO0lBQ2YsWUFBWTtJQUNaLFNBQVM7SUFDVCxrQkFBa0I7RUFDcEI7QUFDQTs7RUFFQSxXQUFXO0NBQ1osc0JBQXNCO0FBQ3ZCO0FBSUE7RUFDRSxhQUFhO0VBQ2IsY0FBYztBQUNoQjtBQUNBO0VBQ0UsMEJBQWtCO0VBQWxCLHVCQUFrQjtFQUFsQixrQkFBa0I7RUFDbEIsWUFBWTtFQUNaLGlCQUFpQjtFQUNqQixnQkFBZ0I7RUFDaEIsbUJBQW1CO0VBQ25CLGVBQWU7RUFDZixZQUFZO0VBQ1osU0FBUztFQUNUO0FBQ0E7TUFDSSx5REFBeUQ7TUFDekQseUJBQXlCO01BQ3pCLFdBQVc7TUFDWDtBQUNBO01BQ0Esc0JBQXNCO01BQ3RCLFlBQVk7TUFDWixrQkFBa0I7O01BRWxCO0FBRUEsOEJBQThCLHlCQUF5QixDQUFDO0FBRXhEO01BQ0EsaUJBQWlCO01BQ2pCLG9CQUFvQjtNQUNwQixnQkFBZ0I7TUFDaEIsa0NBQWtDO01BQ2xDLFlBQVk7TUFDWjtBQUVOO0VBQ0UsV0FBVzs7QUFFYiIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL3NpYXMtdjIvcnVsZXMvcnVsZS10cmFuc2xhdGlvbi9lZGl0LXJ1bGUtdGFybnNsYXRpb24vZWRpdC1ydWxlLXRhcm5zbGF0aW9uLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyI6Om5nLWRlZXAubWF0LWZvcm0tZmllbGQtYXBwZWFyYW5jZS1vdXRsaW5lIC5tYXQtZm9ybS1maWVsZC1mbGV4XHJcbntcclxuICAgIHdpZHRoOiAxODBweCAhaW1wb3J0YW50O1xyXG4gICAgaGVpZ2h0OiA1MHB4ICFpbXBvcnRhbnQ7XHJcbn0gIFxyXG46Om5nLWRlZXAgLm1hdC1mb3JtLWZpZWxkLWZsZXggPiAubWF0LWZvcm0tZmllbGQtaW5maXggXHJcbnsgcGFkZGluZzogMC41ZW0gMHB4ICFpbXBvcnRhbnQ7fVxyXG5cclxuI2NoRmlsZXtcclxuICBkaXNwbGF5OiBub25lO1xyXG4gIH1cclxuICAuYnRuRmlsZXtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMTMwLCAxMzAsIDE3Myk7XHJcbiAgbWFyZ2luLXJpZ2h0OiAzMHB4O1xyXG4gIHdpZHRoOiAxMTBweDtcclxuICB9XHJcblxyXG4gIC5tYXQtcmFpc2VkLWJ1dHRvbiB7XHJcbiAgICB3aWR0aDogZml0LWNvbnRlbnQ7XHJcbiAgICBoZWlnaHQ6IDIwcHg7XHJcbiAgICBsaW5lLWhlaWdodDogMjdweDtcclxuICAgIG1pbi1oZWlnaHQ6IDI3cHg7XHJcbiAgICB2ZXJ0aWNhbC1hbGlnbjogdG9wO1xyXG4gICAgZm9udC1zaXplOiAxMXB4O1xyXG4gICAgcGFkZGluZzogMCAwO1xyXG4gICAgbWFyZ2luOiAwO1xyXG4gICAgbWFyZ2luLWJvdHRvbToyMHB4O1xyXG4gIH1cclxuICAuYmFpc2NJbmZvY2FyZFxyXG57XHJcbiAgd2lkdGg6IDEwMCU7XHJcbiAvKiBtYXJnaW4tbGVmdDogMTUlOyAqL1xyXG59XHJcblxyXG5cclxuXHJcbi5leGFtcGxlLWNvbnRhaW5lciB7XHJcbiAgaGVpZ2h0OiAyNTBweDtcclxuICBvdmVyZmxvdzogYXV0bztcclxufVxyXG4ubWF0LXJhaXNlZC1idXR0b24ge1xyXG4gIHdpZHRoOiBmaXQtY29udGVudDtcclxuICBoZWlnaHQ6IDIwcHg7XHJcbiAgbGluZS1oZWlnaHQ6IDI3cHg7XHJcbiAgbWluLWhlaWdodDogMjdweDtcclxuICB2ZXJ0aWNhbC1hbGlnbjogdG9wO1xyXG4gIGZvbnQtc2l6ZTogMTFweDtcclxuICBwYWRkaW5nOiAwIDA7XHJcbiAgbWFyZ2luOiAwO1xyXG4gIH1cclxuICAjY3VzdG9tZXJzIHtcclxuICAgICAgZm9udC1mYW1pbHk6IFwiVHJlYnVjaGV0IE1TXCIsIEFyaWFsLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7XHJcbiAgICAgIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7XHJcbiAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICB9XHJcbiAgICAgICNjdXN0b21lcnMgdGQsICNjdXN0b21lcnMgdGgge1xyXG4gICAgICBib3JkZXI6IDFweCBzb2xpZCAjZGRkO1xyXG4gICAgICBwYWRkaW5nOiA4cHg7XHJcbiAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgICAgXHJcbiAgICAgIH1cclxuICAgICAgXHJcbiAgICAgICNjdXN0b21lcnMgdHI6bnRoLWNoaWxkKGV2ZW4pe2JhY2tncm91bmQtY29sb3I6ICNmMmYyZjI7fVxyXG4gICAgICBcclxuICAgICAgI2N1c3RvbWVycyB0aCB7XHJcbiAgICAgIHBhZGRpbmctdG9wOiAxMnB4O1xyXG4gICAgICBwYWRkaW5nLWJvdHRvbTogMTJweDtcclxuICAgICAgdGV4dC1hbGlnbjogbGVmdDtcclxuICAgICAgYmFja2dyb3VuZC1jb2xvcjpyZ2IoOTcsIDE3OCwgMjE2KTtcclxuICAgICAgY29sb3I6IHdoaXRlO1xyXG4gICAgICB9XHJcblxyXG5tYXQtZm9ybS1maWVsZHtcclxuICB3aWR0aDogMTAwJTtcclxuICBcclxufVxyXG4gIFxyXG4gIFxyXG4gIFxyXG4iXX0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { RulesService } from 'src/app/shared/services/rules/rules.service';\r\nimport { AddSystemService } from 'src/app/shared/services/addSys/add-system.service';\r\nimport Swal from 'sweetalert2';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-edit-rule-tarnslation',\r\n  templateUrl: './edit-rule-tarnslation.component.html',\r\n  styleUrls: ['./edit-rule-tarnslation.component.css']\r\n})\r\nexport class EditRuleTarnslationComponent implements OnInit {\r\n\r\n\r\n\r\n  externalSystem: any;\r\n\r\n  msgTranslation = new msgTranslation();\r\n  translationDeatils: Array<translationDeatils> = [];\r\n  translationDTO = new translationDTO();\r\n  sourcesystem: any;\r\n  showRecords: boolean;\r\n  currentUser: string;\r\n  showAuditLog: boolean;\r\n  msgType: any;\r\n  translationDataOperation: Object;\r\n  selectedFiles: any;\r\n  currentFileUpload: any;\r\n\r\n  translationDataService: any;\r\n  ruleTRespData : any;\r\n  transId : any;\r\n  displaySubmit : boolean = false;\r\n  authorizeDone : boolean = false;\r\n\r\n\r\n\r\n  showFetch: any;\r\n  ruleRecord: any;\r\n  matlabel1: string;\r\n  matlabel2: string;\r\n  navSubscription: any;\r\n  editRuleTransResp: any;\r\n  headerTagData: any;\r\n  messageBasisIso: any;\r\n  messageKeyIso: any;\r\n  xmlRespData: any;\r\n  fileName: any;\r\n  editValue: boolean;\r\n  afterupload: boolean;\r\n  showdelete: boolean;\r\n  deleted: boolean;\r\n  editBtn: boolean;\r\n  closeBtn: boolean;\r\n  authBtn: boolean;\r\n  onlysubmit: boolean;\r\n  reopenBtn: boolean;\r\n  authBtnHide: boolean;\r\n  messageBasisData: any;\r\n\r\n\r\n  constructor(private rules: RulesService, private addSystem: AddSystemService,private router:Router) { }\r\n\r\n  ngOnInit() {\r\n    this.currentUser = localStorage.getItem('userFromLogin');\r\n    // this.translationDeatils.push({ messageBasis: '', defaultValue: '', translationId: '', encryption: '', id: '', dataType: '', messageKey: '' })\r\n    this.gettingExternalsystem();\r\n    this.fetchingHeadertag();\r\n    // this.fetchingXMl();\r\n    // this.fetchingIso();\r\n    this.navSubscription = this.addSystem.getNavParam.subscribe(data =>this.editRuleTransResp =data);\r\n    console.log(this.editRuleTransResp);\r\n    // this.translationDeatils.push(...this.editRuleTransResp['translationDeatils']);\r\n    this.ruleTRespData = this.editRuleTransResp['ruleTRespData'];\r\n    console.log(this.ruleTRespData);\r\n    this.transId = this.ruleTRespData.transId;\r\n    console.log(this.transId);\r\n    // commenting beacuse below array data is not coming\r\n    this.msgTranslation.systemCode=this.editRuleTransResp[\"systemCode\"];\r\n    this.msgTranslation.messageType=this.editRuleTransResp[\"messageType\"];\r\n    this.msgTranslation.operationName=this.editRuleTransResp[\"operationName\"];\r\n    this.msgTranslation.serviceName=this.editRuleTransResp[\"serviceName\"];\r\n    this.onSelectionOFMessageType(this.msgTranslation.messageType);\r\n    this.onSlectionExternalSystem(this.msgTranslation.systemCode);\r\n    this.gettingoperationAndService(this.msgTranslation.systemCode,this.msgTranslation.messageType,this.currentUser);\r\n    this.translationDeatils = this.editRuleTransResp['ruleTRespData'].msgTransDetails;\r\n    console.log(this.translationDeatils);\r\n    if(this.ruleTRespData.recordStatus== \"C\"){\r\n      console.log(this.ruleTRespData.recordStatus);\r\n      this.reopenBtn=false;\r\n      this.authBtnHide=true;\r\n    }\r\n    // this.translationDeatils.map(el=>{\r\n    //   this.messageBasisIso=el.messagebasis\r\n    // });\r\n    console.log(\"is\",this.messageBasisIso);\r\n    // this.messageBasisIso.operationName=this.editRuleTransResp[\"operationName\"];\r\n    // this.messageBasisIso.operationName=this.editRuleTransResp[\"serviceName\"];\r\n    // this.onSlectionExternalSystem(this.msgTranslation.systemCode);\r\n    // this.onSelectionOFMessageType(this.msgTranslation.messageType);\r\n    // this.gettingoperationAndService(this.msgTranslation.systemCode,this.msgTranslation.messageType,this.currentUser);\r\n    console.log(\"tab1\",this.msgTranslation);\r\n    console.log(this.translationDeatils);\r\n    // this.translationDeatils.forEach(el=>{\r\n    //   el.dataType=this.editRuleTransResp[\"dataType\"];\r\n    //   el.encryption=this.editRuleTransResp[\"encryption\"];\r\n    //   el.messageKey=this.editRuleTransResp[\"messageKey\"];\r\n    //   el.messageBasis=this.editRuleTransResp[\"messagebasis\"];\r\n    //   el.defaultValue=this.editRuleTransResp[\"defaultValue\"];\r\n    //   el.translationId=this.editRuleTransResp[\"translationId\"];\r\n    // });\r\n    console.log(this.translationDeatils);\r\n    // this.ruleRecord.dataType = this.editRuleTransResp[\"dataType\"];\r\n  }\r\n\r\n  gettingExternalsystem() {\r\n    this.rules.gettingExternalsystem().subscribe(extSysResp => {\r\n      console.log(extSysResp);\r\n      if (extSysResp) {\r\n        this.externalSystem = extSysResp;\r\n      }\r\n    },\r\n      (err: any) => {\r\n        console.log(\"err\", err);\r\n      })\r\n  }\r\n  onSlectionExternalSystem(event: any) {\r\n    console.log(event.value);\r\n    this.sourcesystem = this.msgTranslation.messageType;\r\n\r\n  }\r\n  onSelectionOFMessageType(event: any) {\r\n    this.msgType = event.value;\r\n    console.log(this.msgType);\r\n    if (this.sourcesystem && this.msgType) {\r\n      this.gettingoperationAndService(this.msgTranslation.systemCode,this.msgTranslation.messageType,this.currentUser);\r\n    }\r\n    else {\r\n      console.log(\"enter both msg and ext\")\r\n    }\r\n  }\r\n  gettingoperationAndService(source,msgType,logginuser) {\r\n    this.rules.gettingoperationAndService(source, msgType, logginuser).subscribe(translationResp => {\r\n      console.log(translationResp);\r\n      console.log(translationResp);\r\n      this.messageBasisData=translationResp.MdmtSystemService;\r\n      console.log(\"messageBasisData\",this.messageBasisData);\r\n      let keys=Object.keys(translationResp);\r\n      console.log(keys)\r\n      let x=keys[2];\r\n      let y=keys[3];\r\n      if(x=='I' && Object.keys(translationResp).length==3 ){\r\n        console.log(\"yes\",x);\r\n      \r\n      \r\n      if(translationResp.I.SERVICE.length !== 0){\r\n      this.msgTranslation.serviceName=translationResp.I.SERVICE[0].headerValue\r\n      }\r\n    if(translationResp.I.OPERATION.length !== 0){\r\n      this.msgTranslation.operationName=translationResp.I.OPERATION[0].headerValue\r\n      this.translationDataOperation = translationResp.I.OPERATION;\r\n    }\r\n      this.translationDataService = translationResp.I.SERVICE\r\n  }\r\n  else if(x=='O'&& Object.keys(translationResp).length==3){\r\n    console.log(\"else if\",x);\r\n    if(translationResp.O.SERVICE.length !== 0){\r\n      this.msgTranslation.serviceName=translationResp.O.SERVICE[0].headerValue\r\n      }\r\n    if(translationResp.O.OPERATION.length !== 0){\r\n      this.msgTranslation.operationName=translationResp.O.OPERATION[0].headerValue\r\n      this.translationDataOperation = translationResp.O.OPERATION;\r\n    }\r\n      this.translationDataService = translationResp.O.SERVICE\r\n  }\r\n  else if(x=='I' && this.msgTranslation.messageType=='I' && Object.keys(translationResp).length==4){\r\n    \r\n    if(translationResp.I.SERVICE.length !== 0){\r\n      this.msgTranslation.serviceName=translationResp.I.SERVICE[0].headerValue\r\n      }\r\n    if(translationResp.I.OPERATION.length !== 0){\r\n      this.msgTranslation.operationName=translationResp.I.OPERATION[0].headerValue\r\n      this.translationDataOperation = translationResp.I.OPERATION;\r\n    }\r\n      this.translationDataService = translationResp.I.SERVICE\r\n  }\r\n  else if(y=='O' && this.msgTranslation.messageType=='O' && Object.keys(translationResp).length==4 ){\r\n    \r\n    if(translationResp.O.SERVICE.length !== 0){\r\n      this.msgTranslation.serviceName=translationResp.O.SERVICE[0].headerValue\r\n      }\r\n    if(translationResp.O.OPERATION.length !== 0){\r\n      this.msgTranslation.operationName=translationResp.O.OPERATION[0].headerValue\r\n      this.translationDataOperation = translationResp.O.OPERATION;\r\n    }\r\n      this.translationDataService = translationResp.O.SERVICE\r\n  }\r\n      this.showFetch = translationResp.MdmtSystemChannel[0].messageChannel;\r\n      console.log(this.showFetch);\r\n      if (this.showFetch == 'Https/Http') {\r\n      // this.fetchingXMl();\r\n      }\r\n      else {\r\n        this.fetchingIso();\r\n      }\r\n    }, (err => {\r\n      console.log(err);\r\n      Swal.fire({text:'External system Service data not present'})\r\n    }))\r\n  }\r\n  //  temproary\r\n  onSubmit() {\r\n    let payloadObj : any = {};\r\n    payloadObj = this.msgTranslation;\r\n    payloadObj.transId = this.transId;\r\n    payloadObj.msgTransDetails = this.translationDeatils;\r\n    this.translationDTO.msgTranslation = this.msgTranslation;\r\n    this.translationDTO.msgTranslationDet = this.ruleRecord;\r\n    console.log(this.translationDTO);\r\n    this.rules.editruleTranslation(\"update\",this.currentUser, payloadObj).subscribe(ruleTranslationResp => {\r\n      console.log(ruleTranslationResp);\r\n      if (ruleTranslationResp) {\r\n        Swal.fire({ text: 'Record Saved SuucessFully' });\r\n        this.showAuditLog = true;\r\n        this.editValue=false;\r\n      }\r\n    }, (err => {\r\n      Swal.fire({ text: 'Server Error' })\r\n    }))\r\n  }\r\n  onFetch() {\r\n    this.showRecords = true;\r\n    \r\n  }\r\n  onReset() {\r\n    this.msgTranslation = new msgTranslation();\r\n    this.ruleRecord = [];\r\n  }\r\n  addTranlation() {\r\n    // this.translationDeatils.push({id:'',translationId:'', messagebasis:'',messageKey:'',defaultValue:'',dataType:''});\r\n    this.translationDeatils.push({ messagebasis: '', defaultValue: '', translationId: '', encryption: '', id: '', dataType: '', messageKey: '' })\r\n  }\r\n  deleteTranslation(i) {\r\n    this.translationDeatils.splice(i);\r\n  }\r\n  selectFileFORHTTPXMLIncoming(event: any) {\r\n    console.log(\"here http and xML\", event);\r\n    this.selectedFiles = event.target.files;\r\n    // this.sizeOfFile = this.selectedFiles.item(0).size;\r\n    // console.log(this.sizeOfFile);\r\n    console.log(this.selectedFiles);\r\n    console.log(this.selectedFiles[0].name);\r\n     this.fileName = this.selectedFiles[0].name;\r\n\r\n\r\n    this.currentFileUpload = this.selectedFiles.item(0);\r\n\r\n\r\n\r\n    console.log(event.target.files);\r\n    this.addSystem.gettingBodyOfXml(this.currentFileUpload).subscribe(xmlHttpResp => {\r\n      console.log(xmlHttpResp);\r\n\r\n      if (xmlHttpResp) {\r\n     this.xmlRespData=xmlHttpResp;\r\n     this.afterupload=true;\r\n     Swal.fire({text:\"File Uploaded Successfully\"})\r\n      }\r\n\r\n    },(err)=>{Swal.fire({text:\"Invalid Xml file provided\"})})\r\n  }\r\n  fetchingHeadertag()\r\n  {\r\n    this.addSystem.fetchingHeaderTag().subscribe(resp=>{\r\n      console.log(\"res\",resp);\r\n      this.headerTagData=resp;\r\n    })\r\n  }\r\n  fetchingIso()\r\n  {\r\n    \r\n  this.addSystem.fetchingIsoForTcp().subscribe(isoResp=>{\r\n    console.log(isoResp);\r\n    this.matlabel1=\"Filed No\"\r\n    // this.translationDeatils=isoResp;\r\n    this.messageBasisIso=isoResp.map((data)=>{\r\n      return data.fieldName;\r\n    });\r\n     // for dropdown 2\r\n     this.messageKeyIso=isoResp.map((data)=>{\r\n      return data.fieldNo.toString();\r\n    });\r\n  });\r\n  }\r\n  fetchingXMl()\r\n{\r\n  this.addSystem.gettinXMLmsgIncoming().subscribe(xmlResp=>{\r\n    console.log(xmlResp);\r\n   \r\n     this.xmlRespData=xmlResp.map((data)=>{\r\n          return data.messageBasis;\r\n        });\r\n  });\r\n\r\n}\r\nedit(){\r\n  this.editValue=true;\r\n  this.displaySubmit = true;\r\n  this.onlysubmit=true;\r\n  this.showAuditLog=false;\r\n  console.log(this.ruleTRespData);\r\n  if(this.ruleTRespData.approvedStatus== \"U\"){\r\n    this.editValue=false;\r\n    Swal.fire(\"UnAuthorized record can't be edited.\");\r\n  }\r\n  if(this.ruleTRespData.recordStatus== \"C\"){\r\n    this.editValue=false;\r\n    Swal.fire(\"Closed record can't be edited.\");\r\n  }\r\n}\r\n  chooseFile() {\r\n    console.log(\"heyy file\")\r\n    document.getElementById('chFile').click();\r\n  }\r\n\r\n  authorizeRuleTranslation(){\r\n    if(this.currentUser == this.ruleTRespData.creatorId){\r\n      Swal.fire('Maker cannot authorize!');\r\n    }\r\n    else{\r\n      let RuleTranslationData : any = this.ruleTRespData;\r\n      this.addSystem.editruleTranslation(\"auth\",this.currentUser,RuleTranslationData).subscribe((response) => {\r\n        console.log(response);\r\n        if(response.approverId){\r\n          this.authorizeDone = true;\r\n          Swal.fire('Authorized Successfully!');\r\n          this.ruleTRespData = response;\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  openRuleTranslation(){\r\n    let RuleTranslationData : any = this.ruleTRespData;\r\n    this.addSystem.editruleTranslation(\"open\",this.currentUser,RuleTranslationData).subscribe((response) => {\r\n      console.log(response);\r\n      if(response){\r\n        Swal.fire('Opened Successfully!');\r\n        this.ruleTRespData = response;\r\n        this.authBtnHide=false;\r\n        this.editBtn=false;\r\n        this.authBtn=false;\r\n      }\r\n    });\r\n  }\r\n\r\n  closeRuleTranslation(){\r\n   \r\n    let RuleTranslationData : any = this.ruleTRespData;\r\n    this.addSystem.editruleTranslation(\"close\",this.currentUser,RuleTranslationData).subscribe((response) => {\r\n      console.log(response);\r\n      if(response){\r\n        Swal.fire(\"Closed Successfully!\");\r\n        this.ruleTRespData = response;\r\n        this.editBtn=true;\r\n        this.authBtn=true;\r\n        this.deleted=false;\r\n        this.reopenBtn=false;\r\n      }\r\n    });\r\n  }\r\n\r\n  deleteRuleTranslation(){\r\n    // this.translationDTO.msgTranslation = this.ruleTRespData;\r\n    // this.translationDTO.msgTranslationDet = this.ruleRecord;\r\n      let RuleTranslationData : any = this.ruleTRespData;\r\n      console.log(this.ruleTRespData);\r\n    this.addSystem.deleteRuleTranslation(this.currentUser,RuleTranslationData.transId).subscribe((response) => {\r\n      // console.log(response.Text);\r\n      // if(response){\r\n       \r\n      // }\r\n    },(err)=>{\r\n      if(err.status==200){\r\n        this.showdelete=true;\r\n        this.editBtn=true;\r\n        this.authBtn=true;\r\n        this.closeBtn=true;\r\n      \r\n        Swal.fire({title:'Deleted Successfully!',\r\n        confirmButtonText:'Ok'\r\n      }).then((result)=>{\r\n          if(result){\r\n            this.router.navigateByUrl('/sias-v2/tranlationSummary')\r\n          }\r\n        });\r\n       \r\n      }\r\n      else{\r\n      Swal.fire(\"Failed to delete the reocrd\");\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n\r\n\r\n}\r\nexport class msgTranslation {\r\n  id: any;\r\n  systemCode: any;\r\n  messageType: any;\r\n  operationName: any;\r\n  serviceName: any;\r\n  creatorId: any;\r\n  createdTime: any;\r\n  approverId: any;\r\n  approvedTime: any;\r\n  versionNo: any;\r\n  approvedStatus: any;\r\n  approvedEver: any;\r\n  recordStatus: any;\r\n}\r\n// after fetch assign to this object\r\nexport class translationDeatils {\r\n  id: any;\r\n  translationId: any;//??\r\n  messagebasis: any;//node\r\n  messageKey: any;//tagName\r\n  dataType: any;\r\n  encryption: any;\r\n\r\n  defaultValue: any;\r\n\r\n}\r\nclass translationDTO {\r\n  msgTranslation: msgTranslation;\r\n  msgTranslationDet: Array<translationDeatils>;\r\n}\r\n\r\n","export default \"\\r\\n::ng-deep.mat-form-field-appearance-outline .mat-form-field-flex\\r\\n{\\r\\n    width: 180px !important;\\r\\n    height: 50px !important;\\r\\n}  \\r\\n::ng-deep .mat-form-field-flex > .mat-form-field-infix \\r\\n{ padding: 0.5em 0px !important;}  \\r\\n#chFile{\\r\\n  display: none;\\r\\n  }  \\r\\n.btnFile{\\r\\n  background-color: rgb(130, 130, 173);\\r\\n  margin-right: 30px;\\r\\n  width: 110px;\\r\\n  }  \\r\\n.mat-raised-button {\\r\\n    width: -webkit-fit-content;\\r\\n    width: -moz-fit-content;\\r\\n    width: fit-content;\\r\\n    height: 20px;\\r\\n    line-height: 27px;\\r\\n    min-height: 27px;\\r\\n    vertical-align: top;\\r\\n    font-size: 11px;\\r\\n    padding: 0 0;\\r\\n    margin: 0;\\r\\n    margin-bottom: 20px;\\r\\n  }  \\r\\n.baiscInfocard\\r\\n{\\r\\n  /* width: 63%; */\\r\\n  width: 100%;\\r\\n /* margin-left: 15%; */\\r\\n /* margin-right:30px; */\\r\\n}  \\r\\n#customers {\\r\\n  font-family: \\\"Trebuchet MS\\\", Arial, Helvetica, sans-serif;\\r\\n  border-collapse: collapse;\\r\\n  width: 100%;\\r\\n  }  \\r\\n#customers td, #customers th {\\r\\n  border: 1px solid #ddd;\\r\\n  padding: 8px;\\r\\n  text-align: center;\\r\\n  \\r\\n  }  \\r\\n#customers tr:nth-child(even){background-color: #f2f2f2;}  \\r\\n#customers th {\\r\\n  padding-top: 12px;\\r\\n  padding-bottom: 12px;\\r\\n  text-align: left;\\r\\n  background-color:rgb(97, 178, 216);\\r\\n  color: white;\\r\\n  }\\r\\n \\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdmlld3Mvc2lhcy12Mi9ydWxlcy9ydWxlLXRyYW5zbGF0aW9uL3J1bGUtdHJhbnNsYXRpb24uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQ0E7O0lBRUksdUJBQXVCO0lBQ3ZCLHVCQUF1QjtBQUMzQjtBQUNBO0VBQ0UsNkJBQTZCLENBQUM7QUFFaEM7RUFDRSxhQUFhO0VBQ2I7QUFDQTtFQUNBLG9DQUFvQztFQUNwQyxrQkFBa0I7RUFDbEIsWUFBWTtFQUNaO0FBRUE7SUFDRSwwQkFBa0I7SUFBbEIsdUJBQWtCO0lBQWxCLGtCQUFrQjtJQUNsQixZQUFZO0lBQ1osaUJBQWlCO0lBQ2pCLGdCQUFnQjtJQUNoQixtQkFBbUI7SUFDbkIsZUFBZTtJQUNmLFlBQVk7SUFDWixTQUFTO0lBQ1QsbUJBQW1CO0VBQ3JCO0FBQ0E7O0VBRUEsZ0JBQWdCO0VBQ2hCLFdBQVc7Q0FDWixzQkFBc0I7Q0FDdEIsdUJBQXVCO0FBQ3hCO0FBRUE7RUFDRSx5REFBeUQ7RUFDekQseUJBQXlCO0VBQ3pCLFdBQVc7RUFDWDtBQUNBO0VBQ0Esc0JBQXNCO0VBQ3RCLFlBQVk7RUFDWixrQkFBa0I7O0VBRWxCO0FBRUEsOEJBQThCLHlCQUF5QixDQUFDO0FBRXhEO0VBQ0EsaUJBQWlCO0VBQ2pCLG9CQUFvQjtFQUNwQixnQkFBZ0I7RUFDaEIsa0NBQWtDO0VBQ2xDLFlBQVk7RUFDWiIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL3NpYXMtdjIvcnVsZXMvcnVsZS10cmFuc2xhdGlvbi9ydWxlLXRyYW5zbGF0aW9uLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJcclxuOjpuZy1kZWVwLm1hdC1mb3JtLWZpZWxkLWFwcGVhcmFuY2Utb3V0bGluZSAubWF0LWZvcm0tZmllbGQtZmxleFxyXG57XHJcbiAgICB3aWR0aDogMTgwcHggIWltcG9ydGFudDtcclxuICAgIGhlaWdodDogNTBweCAhaW1wb3J0YW50O1xyXG59ICBcclxuOjpuZy1kZWVwIC5tYXQtZm9ybS1maWVsZC1mbGV4ID4gLm1hdC1mb3JtLWZpZWxkLWluZml4IFxyXG57IHBhZGRpbmc6IDAuNWVtIDBweCAhaW1wb3J0YW50O31cclxuXHJcbiNjaEZpbGV7XHJcbiAgZGlzcGxheTogbm9uZTtcclxuICB9XHJcbiAgLmJ0bkZpbGV7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDEzMCwgMTMwLCAxNzMpO1xyXG4gIG1hcmdpbi1yaWdodDogMzBweDtcclxuICB3aWR0aDogMTEwcHg7XHJcbiAgfVxyXG5cclxuICAubWF0LXJhaXNlZC1idXR0b24ge1xyXG4gICAgd2lkdGg6IGZpdC1jb250ZW50O1xyXG4gICAgaGVpZ2h0OiAyMHB4O1xyXG4gICAgbGluZS1oZWlnaHQ6IDI3cHg7XHJcbiAgICBtaW4taGVpZ2h0OiAyN3B4O1xyXG4gICAgdmVydGljYWwtYWxpZ246IHRvcDtcclxuICAgIGZvbnQtc2l6ZTogMTFweDtcclxuICAgIHBhZGRpbmc6IDAgMDtcclxuICAgIG1hcmdpbjogMDtcclxuICAgIG1hcmdpbi1ib3R0b206IDIwcHg7XHJcbiAgfVxyXG4gIC5iYWlzY0luZm9jYXJkXHJcbntcclxuICAvKiB3aWR0aDogNjMlOyAqL1xyXG4gIHdpZHRoOiAxMDAlO1xyXG4gLyogbWFyZ2luLWxlZnQ6IDE1JTsgKi9cclxuIC8qIG1hcmdpbi1yaWdodDozMHB4OyAqL1xyXG59XHJcblxyXG4jY3VzdG9tZXJzIHtcclxuICBmb250LWZhbWlseTogXCJUcmVidWNoZXQgTVNcIiwgQXJpYWwsIEhlbHZldGljYSwgc2Fucy1zZXJpZjtcclxuICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlO1xyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIH1cclxuICAjY3VzdG9tZXJzIHRkLCAjY3VzdG9tZXJzIHRoIHtcclxuICBib3JkZXI6IDFweCBzb2xpZCAjZGRkO1xyXG4gIHBhZGRpbmc6IDhweDtcclxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgXHJcbiAgfVxyXG4gIFxyXG4gICNjdXN0b21lcnMgdHI6bnRoLWNoaWxkKGV2ZW4pe2JhY2tncm91bmQtY29sb3I6ICNmMmYyZjI7fVxyXG4gIFxyXG4gICNjdXN0b21lcnMgdGgge1xyXG4gIHBhZGRpbmctdG9wOiAxMnB4O1xyXG4gIHBhZGRpbmctYm90dG9tOiAxMnB4O1xyXG4gIHRleHQtYWxpZ246IGxlZnQ7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjpyZ2IoOTcsIDE3OCwgMjE2KTtcclxuICBjb2xvcjogd2hpdGU7XHJcbiAgfVxyXG4gIl19 */\"","import { Component, OnInit, ChangeDetectorRef } from '@angular/core';\r\nimport { FormArray, FormBuilder, FormGroup, NgForm } from '@angular/forms';\r\nimport { RulesService } from 'src/app/shared/services/rules/rules.service';\r\nimport { Router } from '@angular/router';\r\nimport { AddSystemService } from 'src/app/shared/services/addSys/add-system.service';\r\nimport { ChangeDetectionStrategy } from '@angular/compiler/src/compiler_facade_interface';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-rule-translation',\r\n  templateUrl: './rule-translation.component.html',\r\n  styleUrls: ['./rule-translation.component.css']\r\n})\r\nexport class RuleTranslationComponent implements OnInit {\r\n\r\n  externalSystem: any;\r\n\r\n  msgTranslation = new msgTranslation();\r\n  translationDeatils: Array<translationDeatils> = [];\r\n  translationDTO = new translationDTO();\r\n  sourcesystem: any;\r\n  showRecords: boolean;\r\n  currentUser: string;\r\n  showAuditLog: boolean;\r\n  msgType: any;\r\n  translationDataOperation: Object;\r\n  selectedFiles: any;\r\n  currentFileUpload: any;\r\n  recordSaved : boolean = false;\r\n\r\n  translationDataService: any;\r\n\r\n  showFetch: any;\r\n  \r\n  matlabel1: string;\r\n  matlabel2: string;\r\n  headerTagData: any;\r\n  messageBasisIso: any;\r\n  messageKeyIso: any;\r\n  xmlRespData: any;\r\n  sourcesysData: any;\r\n  translationResp: Object;\r\n\r\n  fileName: any;\r\n  disableSubmit: boolean= false;\r\n  disableReset: boolean=false;\r\n  uploadXmlResp: any;\r\n  desSystem: any[]=[];\r\n  mtype: string[];\r\n  isoRespData: any[]=[];\r\n\r\n\r\n\r\n  constructor(private rules: RulesService, private addSystem: AddSystemService) { }\r\n\r\n  ngOnInit() {\r\n    this.currentUser = localStorage.getItem('userFromLogin');\r\n    this.msgTranslation.messageType=\"null\";\r\n    this.translationDeatils.push({ messagebasis: '', headerTag: '', defaultValue: '',systemChannelId:'', encryption: 'No Encryption', id: '', dataType: '', messageKey: '' })\r\n    this.gettingExternalsystem();\r\n    this.fetchingHeadertag();\r\n    // this.fetchingIso();\r\n  }\r\n\r\n  gettingExternalsystem() {\r\n    this.rules.gettingExternalsystem().subscribe(extSysResp => {\r\n      console.log(extSysResp);\r\n      if (extSysResp) {\r\n        this.externalSystem = extSysResp;\r\n        this.sourcesysData=this.externalSystem;\r\n      }\r\n    },\r\n      (err: any) => {\r\n        console.log(\"err\", err);\r\n      })\r\n  }\r\n  onSlectionExternalSystem(event: any) {\r\n    console.log(event);\r\n    this.sourcesystem = event.option.value;\r\n    this.rules.getAddSystem(this.sourcesystem).subscribe(resp=>{\r\n      console.log(resp);\r\n      if(resp){\r\n\r\n       \r\n    this.msgTranslation.messageType=resp.messsageType;\r\n//  this.mtype.push(this.msgTranslation.messageType);\r\n    this.msgTranslation.operationName=resp.operationName;\r\n    this.msgTranslation.serviceName=resp.serviceName;\r\n    if(resp.messsageType=='A'){\r\n      this.msgTranslation.messageType='I';\r\n    }\r\n \r\n    console.log( this.msgTranslation)\r\n      this.gettingoperationAndService(this.sourcesystem, this.msgTranslation.messageType);\r\n      }\r\n    })\r\n  }\r\n  onSelectionOFMessageType(event: any) {\r\n    this.msgType = event.value;\r\n    console.log(this.msgType);\r\n    if (this.sourcesystem && this.msgType) {\r\n      this.gettingoperationAndService(this.sourcesystem,this.msgTranslation.messageType);\r\n    }\r\n    else {\r\n      console.log(\"enter both msg and ext\")\r\n    }\r\n  }\r\n  gettingoperationAndService(sourcesystem,msgType) {\r\n    this.rules.gettingoperationAndService(sourcesystem ,msgType, this.currentUser).subscribe(translationResp => {\r\n      console.log(translationResp);\r\n      let keys=Object.keys(translationResp);\r\n      console.log(keys)\r\n      let x=keys[2];\r\n      let y=keys[3];\r\n      if(x=='I' && Object.keys(translationResp).length==3 ){\r\n        console.log(\"yes\",x);\r\n      \r\n      \r\n      if(translationResp.I.SERVICE.length !== 0){\r\n      this.msgTranslation.serviceName=translationResp.I.SERVICE[0].headerValue\r\n      }\r\n    if(translationResp.I.OPERATION.length !== 0){\r\n      this.msgTranslation.operationName=translationResp.I.OPERATION[0].headerValue\r\n      this.translationDataOperation = translationResp.I.OPERATION;\r\n    }\r\n      this.translationDataService = translationResp.I.SERVICE\r\n  }\r\n  else if(x=='O'&& Object.keys(translationResp).length==3){\r\n    console.log(\"else if\",x);\r\n    if(translationResp.O.SERVICE.length !== 0){\r\n      this.msgTranslation.serviceName=translationResp.O.SERVICE[0].headerValue\r\n      }\r\n    if(translationResp.O.OPERATION.length !== 0){\r\n      this.msgTranslation.operationName=translationResp.O.OPERATION[0].headerValue\r\n      this.translationDataOperation = translationResp.O.OPERATION;\r\n    }\r\n      this.translationDataService = translationResp.O.SERVICE\r\n  }\r\n  else if(x=='I' && this.msgTranslation.messageType=='I' && Object.keys(translationResp).length==4){\r\n    \r\n    if(translationResp.I.SERVICE.length !== 0){\r\n      this.msgTranslation.serviceName=translationResp.I.SERVICE[0].headerValue\r\n      }\r\n    if(translationResp.I.OPERATION.length !== 0){\r\n      this.msgTranslation.operationName=translationResp.I.OPERATION[0].headerValue\r\n      this.translationDataOperation = translationResp.I.OPERATION;\r\n    }\r\n      this.translationDataService = translationResp.I.SERVICE\r\n  }\r\n  else if(y=='O' && this.msgTranslation.messageType=='O' && Object.keys(translationResp).length==4 ){\r\n    \r\n    if(translationResp.O.SERVICE.length !== 0){\r\n      this.msgTranslation.serviceName=translationResp.O.SERVICE[0].headerValue\r\n      }\r\n    if(translationResp.O.OPERATION.length !== 0){\r\n      this.msgTranslation.operationName=translationResp.O.OPERATION[0].headerValue\r\n      this.translationDataOperation = translationResp.O.OPERATION;\r\n    }\r\n      this.translationDataService = translationResp.O.SERVICE\r\n  }\r\n      this.showFetch = translationResp.MdmtSystemChannel[0].messageChannel;\r\n      console.log(this.showFetch);\r\n      if (this.showFetch == 'Https/Http') {\r\n      // this.fetchingXMl();\r\n      }\r\n      else {\r\n        this.fetchingIso();\r\n      }\r\n    }, (err => {\r\n      console.log(err);\r\n      Swal.fire({text:'External system Service data not present'})\r\n    }))\r\n  }\r\n\r\n \r\n  onSubmit() {\r\n  console.log(this.translationDeatils);\r\n  this.msgTranslation.msgTransDetails=this.translationDeatils;\r\n  console.log(this.msgTranslation);\r\n\r\n    this.rules.submittingruleTranslation(this.currentUser, this.msgTranslation).subscribe(ruleTranslationResp => {\r\n      console.log(ruleTranslationResp);\r\n      this.translationResp=ruleTranslationResp\r\n      if (ruleTranslationResp) {\r\n        this.recordSaved = true;\r\n        Swal.fire({ text: 'Record Saved SuccessFully' });\r\n        this.showAuditLog = true;\r\n        this.disableSubmit=true;\r\n        this.disableReset=true;\r\n      }\r\n    }, (err => {\r\n     // Swal.fire({ text: 'Server Error' });\r\n     Swal.fire({ text: 'Rule Translation already exists, kindly recheck the data.' });\r\n     //Swal.fire({text: err.error.text});\r\n      this.disableSubmit=true;\r\n      console.log(\"error: : \",err.error);\r\n    }))\r\n  }\r\n  onFetch() {\r\n    this.showRecords = true;\r\n    console.log(\"translationDeatils\",this.translationDeatils);\r\n  \r\n  }\r\n  onReset() {\r\n    this.msgTranslation = new msgTranslation();\r\n    this.translationDeatils = [];\r\n    this.disableSubmit=false;\r\n  }\r\n  addTranlation() {\r\n    this.translationDeatils.push({ messagebasis: '', headerTag: '', defaultValue: '',systemChannelId:'', encryption: 'No Encryption', id: '', dataType: '', messageKey: '' })\r\n  }\r\n  deleteTranslation(i) {\r\n    this.translationDeatils.splice(i,1);\r\n  }\r\n  selectFileFORHTTPXMLIncoming(event: any) {\r\n    console.log(\"here http and xML\", event);\r\n    this.selectedFiles = event.target.files;\r\n    // this.sizeOfFile = this.selectedFiles.item(0).size;\r\n    // console.log(this.sizeOfFile);\r\n    console.log(this.selectedFiles);\r\n    console.log(this.selectedFiles[0].name);\r\n    this.fileName = this.selectedFiles[0].name;\r\n\r\n\r\n    this.currentFileUpload = this.selectedFiles.item(0);\r\n\r\n\r\n\r\n    console.log(event.target.files);\r\n    this.addSystem.gettingBodyOfXml(this.currentFileUpload).subscribe(xmlHttpResp => {\r\n      console.log(xmlHttpResp);\r\n      this.uploadXmlResp=xmlHttpResp;\r\n      if(xmlHttpResp){\r\n     this.messageBasisIso=xmlHttpResp.nodeTagList;\r\n     this.showRecords = true;\r\n     this.addTranlation();\r\n      }\r\n\r\n    })\r\n  }\r\n  fetchingHeadertag()\r\n  {\r\n    this.addSystem.fetchingHeaderTag().subscribe(resp=>{\r\n      console.log(\"res\",resp);\r\n      this.headerTagData=resp;\r\n    })\r\n  }\r\n  onselectingTag(event,i)\r\n  {\r\n    console.log(event);\r\n    console.log(this.uploadXmlResp);\r\n    var result = Object.keys(this.uploadXmlResp.nodeValueMap).map((key) => [(key), this.uploadXmlResp.nodeValueMap[key]]);\r\n    var x=result.find(item=>item[0]==event.value);\r\n    console.log(x);\r\n   this.translationDeatils[i].defaultValue=x[1];\r\n   this.desSystem.push(event.value);\r\n    // this.mdmtSystemService[i].dataType=x.dataType;\r\n   \r\n  }\r\n  \r\n  fetchingIso()\r\n  {\r\n    \r\n  this.addSystem.fetchingIsoForTcp().subscribe(isoResp=>{\r\n    console.log(isoResp);\r\n    debugger\r\n    this.isoRespData=isoResp;\r\n    let arrayObj = isoResp.map(item => {\r\n      return {\r\n        messageKey: item.fieldNo,\r\n        messageBasis: item.fieldName,\r\n        dataType:item.dataType\r\n      };\r\n    });\r\n    console.log(\"arrayObj\",arrayObj);\r\n    \r\n    this.translationDeatils=arrayObj;\r\n \r\n    console.log(\"tra\",this.translationDeatils);\r\n  \r\n     // for dropdown 2\r\n     this.messageKeyIso=isoResp.map((data)=>{\r\n      return data.fieldNo;\r\n    });\r\n    this.messageBasisIso=isoResp.map((data)=>{\r\n      return data.fieldName;\r\n    });\r\n  });\r\n  }\r\n  onsearchingTablName(event) {\r\n    console.log(event.target.value);\r\n\r\n    console.log(\"this is arr\", this.sourcesysData);\r\n    if (this.sourcesysData) {\r\n      let data = this.sourcesysData.filter(function (e) {\r\n        let extValue = e.toLowerCase();\r\n\r\n        let value = event.target.value.toLowerCase();\r\n        console.log(extValue, value);\r\n        // return !extValue.indexOf(value);//changed this for 1192\r\n        return extValue.search(value) > -1 \r\n      });\r\n      console.log(data);\r\n      this.externalSystem = data;\r\n\r\n    }\r\n\r\n  }\r\n  chooseFile() {\r\n    console.log(\"heyy file\")\r\n    document.getElementById('chFile').click();\r\n  }\r\n\r\n//gettingxml records\r\nfetchingXMl()\r\n{\r\n  this.addSystem.gettinXMLmsgIncoming().subscribe(xmlResp=>{\r\n    console.log(xmlResp);\r\n    this.xmlRespData=xmlResp;\r\n    //  this.messageBasisIso=xmlResp.map((data)=>{\r\n    //       return data.messageBasis;\r\n    //     });\r\n  });\r\n\r\n}\r\ncheck(event,value){\r\n  \r\n  console.log(\"ev\",event.value);\r\n  this.desSystem.push(event.value);\r\n  // this.destination=event.value;\r\n  // this.addSystem.gettingHederofXMl(this.currentFileUpload).subscribe(xmlResp=>{\r\n  //   console.log(xmlResp);\r\n  //   if(xmlResp)\r\n  //   {\r\n  //   this.messageBasisIso=xmlResp;\r\n  //   Swal.fire({text:'File Uploaded Successfully'});\r\n  //   }\r\n  // },(err)=>{\r\n  //   console.log(err);\r\n  //   Swal.fire({text:'Invalid Xml file provided'});\r\n  // })\r\n\r\n}\r\nshouldDisableTagOption(option) {\r\n\r\n  return this.desSystem.includes(option);\r\n}\r\n}\r\nexport class msgTranslation {\r\n  id: any;\r\n  systemCode: any;\r\n  messageType: any;\r\n  operationName: any;\r\n  serviceName: any;\r\n  creatorId: any;\r\n  createdTime: any;\r\n  approverId: any;\r\n  approvedTime: any;\r\n  versionNo: any;\r\n  approvedStatus: any;\r\n  approvedEver: any;\r\n  recordStatus: any;\r\n  msgTransDetails: Array<translationDeatils>;\r\n}\r\n// after fetch assign to this object\r\nexport class translationDeatils {\r\n  id:any;\r\n  systemChannelId:any;\r\n  messagebasis:any;\r\n  messageKey:any;\r\n  dataType:any;\r\n  encryption: any;\r\n  headerTag:any;\r\n  defaultValue:any;\r\n\r\n}\r\nclass translationDTO {\r\n  msgTranslation: msgTranslation;\r\n  msgTranslationDet: Array<translationDeatils>;\r\n}\r\n","export default \"table {\\r\\n  border-collapse: initial;\\r\\n  width:100%;\\r\\n  text-align: center !important;\\r\\n}\\r\\n:host ::ng-deep .mat-sort-header-container { \\r\\n  display: flex;  \\r\\n  justify-content: center; \\r\\n}\\r\\nth.mat-header-cell, td.mat-cell { \\r\\n  text-align: center; \\r\\n}\\r\\n.mat-header-cell {\\r\\n  text-align: center;\\r\\n  height: 25px !important;\\r\\n\\r\\n}\\r\\n.mat-cell {\\r\\n  text-align: center;\\r\\n  height: 25px !important;\\r\\n\\r\\n}\\r\\ntr:nth-child(even) {\\r\\n  height: 25px !important;\\r\\n}\\r\\nth {\\r\\n  font-weight: small;\\r\\n  height: 25px !important;\\r\\n  text-align: center;\\r\\n}\\r\\ntr {\\r\\n  font-weight: small;\\r\\n  height: 25px !important;\\r\\n  text-align: center;\\r\\n}\\r\\nmat-paginator {\\r\\n  width: auto !important;\\r\\n  height: 40px !important;\\r\\n}\\r\\nmd-pagination-wrapper {\\r\\n  width: auto !important;\\r\\n  height: 40px !important;\\r\\n}\\r\\n.mat-raised-button {\\r\\n  width: -webkit-fit-content;\\r\\n  width: -moz-fit-content;\\r\\n  width: fit-content;\\r\\n  height: 20px;\\r\\n  line-height: 27px;\\r\\n  min-height: 27px;\\r\\n  vertical-align: top;\\r\\n  font-size: 11px;\\r\\n  padding: 0 0;\\r\\n  margin: 0;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdmlld3Mvc2lhcy12Mi9ydWxlcy9ydWxlLXRyYW5zbGF0aW9uc3VtbWFyeS9ydWxlLXRyYW5zbGF0aW9uc3VtbWFyeS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0Usd0JBQXdCO0VBQ3hCLFVBQVU7RUFDViw2QkFBNkI7QUFDL0I7QUFDQTtFQUNFLGFBQWE7RUFDYix1QkFBdUI7QUFDekI7QUFFQTtFQUNFLGtCQUFrQjtBQUNwQjtBQUVBO0VBQ0Usa0JBQWtCO0VBQ2xCLHVCQUF1Qjs7QUFFekI7QUFFQTtFQUNFLGtCQUFrQjtFQUNsQix1QkFBdUI7O0FBRXpCO0FBR0E7RUFDRSx1QkFBdUI7QUFDekI7QUFFQTtFQUNFLGtCQUFrQjtFQUNsQix1QkFBdUI7RUFDdkIsa0JBQWtCO0FBQ3BCO0FBQ0E7RUFDRSxrQkFBa0I7RUFDbEIsdUJBQXVCO0VBQ3ZCLGtCQUFrQjtBQUNwQjtBQUNBO0VBQ0Usc0JBQXNCO0VBQ3RCLHVCQUF1QjtBQUN6QjtBQUVBO0VBQ0Usc0JBQXNCO0VBQ3RCLHVCQUF1QjtBQUN6QjtBQUtBO0VBQ0UsMEJBQWtCO0VBQWxCLHVCQUFrQjtFQUFsQixrQkFBa0I7RUFDbEIsWUFBWTtFQUNaLGlCQUFpQjtFQUNqQixnQkFBZ0I7RUFDaEIsbUJBQW1CO0VBQ25CLGVBQWU7RUFDZixZQUFZO0VBQ1osU0FBUztBQUNYIiwiZmlsZSI6InNyYy9hcHAvdmlld3Mvc2lhcy12Mi9ydWxlcy9ydWxlLXRyYW5zbGF0aW9uc3VtbWFyeS9ydWxlLXRyYW5zbGF0aW9uc3VtbWFyeS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsidGFibGUge1xyXG4gIGJvcmRlci1jb2xsYXBzZTogaW5pdGlhbDtcclxuICB3aWR0aDoxMDAlO1xyXG4gIHRleHQtYWxpZ246IGNlbnRlciAhaW1wb3J0YW50O1xyXG59XHJcbjpob3N0IDo6bmctZGVlcCAubWF0LXNvcnQtaGVhZGVyLWNvbnRhaW5lciB7IFxyXG4gIGRpc3BsYXk6IGZsZXg7ICBcclxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsgXHJcbn1cclxuXHJcbnRoLm1hdC1oZWFkZXItY2VsbCwgdGQubWF0LWNlbGwgeyBcclxuICB0ZXh0LWFsaWduOiBjZW50ZXI7IFxyXG59XHJcblxyXG4ubWF0LWhlYWRlci1jZWxsIHtcclxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgaGVpZ2h0OiAyNXB4ICFpbXBvcnRhbnQ7XHJcblxyXG59XHJcblxyXG4ubWF0LWNlbGwge1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICBoZWlnaHQ6IDI1cHggIWltcG9ydGFudDtcclxuXHJcbn1cclxuXHJcblxyXG50cjpudGgtY2hpbGQoZXZlbikge1xyXG4gIGhlaWdodDogMjVweCAhaW1wb3J0YW50O1xyXG59XHJcblxyXG50aCB7XHJcbiAgZm9udC13ZWlnaHQ6IHNtYWxsO1xyXG4gIGhlaWdodDogMjVweCAhaW1wb3J0YW50O1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxufVxyXG50ciB7XHJcbiAgZm9udC13ZWlnaHQ6IHNtYWxsO1xyXG4gIGhlaWdodDogMjVweCAhaW1wb3J0YW50O1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxufVxyXG5tYXQtcGFnaW5hdG9yIHtcclxuICB3aWR0aDogYXV0byAhaW1wb3J0YW50O1xyXG4gIGhlaWdodDogNDBweCAhaW1wb3J0YW50O1xyXG59XHJcblxyXG5tZC1wYWdpbmF0aW9uLXdyYXBwZXIge1xyXG4gIHdpZHRoOiBhdXRvICFpbXBvcnRhbnQ7XHJcbiAgaGVpZ2h0OiA0MHB4ICFpbXBvcnRhbnQ7XHJcbn1cclxuXHJcblxyXG5cclxuXHJcbi5tYXQtcmFpc2VkLWJ1dHRvbiB7XHJcbiAgd2lkdGg6IGZpdC1jb250ZW50O1xyXG4gIGhlaWdodDogMjBweDtcclxuICBsaW5lLWhlaWdodDogMjdweDtcclxuICBtaW4taGVpZ2h0OiAyN3B4O1xyXG4gIHZlcnRpY2FsLWFsaWduOiB0b3A7XHJcbiAgZm9udC1zaXplOiAxMXB4O1xyXG4gIHBhZGRpbmc6IDAgMDtcclxuICBtYXJnaW46IDA7XHJcbn0iXX0= */\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { RulesService } from 'src/app/shared/services/rules/rules.service';\r\nimport { MatTableDataSource, MatPaginator, MatSort } from '@angular/material';\r\nimport { AddSystemService } from 'src/app/shared/services/addSys/add-system.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-rule-translationsummary',\r\n  templateUrl: './rule-translationsummary.component.html',\r\n  styleUrls: ['./rule-translationsummary.component.css']\r\n})\r\nexport class RuleTranslationsummaryComponent implements OnInit {\r\n  displayedColumns: string[] = ['id', 'systemCode', 'operationName', 'serviceName', 'creatorId','createdTime'];\r\n  translationList:any;\r\n  translationDeatils: Array<translationDeatils> = [];\r\n  dataSource: MatTableDataSource<any>;\r\n  @ViewChild(MatPaginator,{static:true}) paginator: MatPaginator;\r\n  @ViewChild(MatSort,{static:false}) sort: MatSort;\r\n  constructor(private ruleServ:RulesService,private addSystem:AddSystemService,private router:Router) { }\r\n\r\n  ngOnInit() {\r\n    this.fetchingruleTranslationSummary()\r\n  }\r\n  fetchingruleTranslationSummary(){\r\n    this.ruleServ.fetchingruleTranslation().subscribe(resp=>{\r\n      console.log(resp);\r\n      if(resp)\r\n      {\r\n        this.translationList=resp;\r\n        \r\n        // this.setForm(this.sumaData);\r\n        this.dataSource = new MatTableDataSource(this.translationList);\r\n        console.log(\"datasource\",this.dataSource);\r\n        // this.dataSource.forEach(el => {\r\n        //   if(el.messsageType=='I')\r\n        //   {\r\n        //     el.messsageType=='Incoming'\r\n        //   }\r\n        //   else if(el.messsageType=='O')\r\n        //   {\r\n        //     el.messsageType=='Outgoing';\r\n        //   }\r\n        //   else{\r\n        //     el.messsageType=='All'\r\n        //   }\r\n        // });\r\n        this.dataSource.sort = this.sort;\r\n        this.dataSource.paginator = this.paginator;\r\n      }\r\n    })\r\n  }\r\n  oneditBasedOnId(row)\r\n  {\r\n    console.log(row);\r\n    this.ruleServ.ruleTranslationBasedonId(row.transId).subscribe(resp=>{\r\n      console.log(resp);\r\n      this.translationDeatils=resp;\r\n    \r\n    let queryParams = {\r\n      'translationDeatils':resp,\r\n      'ruleTRespData':row,\r\n      'systemCode':row.systemCode,\r\n      'messageType':row.messageType,\r\n      'operationName':row.operationName,\r\n      'serviceName':row.serviceName\r\n  }\r\n  // console.log(queryParams);\r\n\r\n \r\n  this.addSystem.sendNavParam(queryParams);\r\n  this.router.navigateByUrl('/sias-v2/editTranslation');\r\n});\r\n  }\r\n}\r\nexport class translationDeatils {\r\n  id:any;\r\n  systemChannelId:any;\r\n  messageBasis:any;\r\n  messageKey:any;\r\n  dataType:any;\r\n  encryption: any;\r\n  headerTag:any;\r\n  headerValue:any;\r\n\r\n}\r\n\r\n","export default \"/* ::ng-deep .mat-form-field-flex > .mat-form-field-infix { padding: 0.4em 0px !important;}\\r\\n::ng-deep .mat-form-field-label-wrapper { top: -1.5em; }\\r\\n\\r\\n::ng-deep .mat-form-field-appearance-outline.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label {\\r\\n    transform: translateY(-1.1em) scale(.75);\\r\\n    width: 80.33333%;\\r\\n} */\\r\\n/* ::ng-deep .mat-form-field-flex > .mat-form-field-infix { width: 30% !important;} */\\r\\n::ng-deep.mat-form-field-flex\\r\\n{\\r\\n    width: 150px !important;\\r\\n    height: 50px !important;\\r\\n}\\r\\n.mat-raised-button {\\r\\n    width: -webkit-fit-content;\\r\\n    width: -moz-fit-content;\\r\\n    width: fit-content;\\r\\n    height: 20px;\\r\\n    line-height: 27px;\\r\\n    min-height: 27px;\\r\\n    vertical-align: top;\\r\\n    font-size: 11px;\\r\\n    padding: 0 0;\\r\\n    margin: 0;\\r\\n    }\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdmlld3Mvc2lhcy12Mi9ydWxlcy9ydWxlLXZhbGlkYXRpb24vcnVsZS12YWxpZGF0aW9uLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7OztHQU1HO0FBQ0gscUZBQXFGO0FBQ3JGOztJQUVJLHVCQUF1QjtJQUN2Qix1QkFBdUI7QUFDM0I7QUFDQTtJQUNJLDBCQUFrQjtJQUFsQix1QkFBa0I7SUFBbEIsa0JBQWtCO0lBQ2xCLFlBQVk7SUFDWixpQkFBaUI7SUFDakIsZ0JBQWdCO0lBQ2hCLG1CQUFtQjtJQUNuQixlQUFlO0lBQ2YsWUFBWTtJQUNaLFNBQVM7SUFDVCIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL3NpYXMtdjIvcnVsZXMvcnVsZS12YWxpZGF0aW9uL3J1bGUtdmFsaWRhdGlvbi5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLyogOjpuZy1kZWVwIC5tYXQtZm9ybS1maWVsZC1mbGV4ID4gLm1hdC1mb3JtLWZpZWxkLWluZml4IHsgcGFkZGluZzogMC40ZW0gMHB4ICFpbXBvcnRhbnQ7fVxyXG46Om5nLWRlZXAgLm1hdC1mb3JtLWZpZWxkLWxhYmVsLXdyYXBwZXIgeyB0b3A6IC0xLjVlbTsgfVxyXG5cclxuOjpuZy1kZWVwIC5tYXQtZm9ybS1maWVsZC1hcHBlYXJhbmNlLW91dGxpbmUubWF0LWZvcm0tZmllbGQtY2FuLWZsb2F0Lm1hdC1mb3JtLWZpZWxkLXNob3VsZC1mbG9hdCAubWF0LWZvcm0tZmllbGQtbGFiZWwge1xyXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC0xLjFlbSkgc2NhbGUoLjc1KTtcclxuICAgIHdpZHRoOiA4MC4zMzMzMyU7XHJcbn0gKi9cclxuLyogOjpuZy1kZWVwIC5tYXQtZm9ybS1maWVsZC1mbGV4ID4gLm1hdC1mb3JtLWZpZWxkLWluZml4IHsgd2lkdGg6IDMwJSAhaW1wb3J0YW50O30gKi9cclxuOjpuZy1kZWVwLm1hdC1mb3JtLWZpZWxkLWZsZXhcclxue1xyXG4gICAgd2lkdGg6IDE1MHB4ICFpbXBvcnRhbnQ7XHJcbiAgICBoZWlnaHQ6IDUwcHggIWltcG9ydGFudDtcclxufSBcclxuLm1hdC1yYWlzZWQtYnV0dG9uIHtcclxuICAgIHdpZHRoOiBmaXQtY29udGVudDtcclxuICAgIGhlaWdodDogMjBweDtcclxuICAgIGxpbmUtaGVpZ2h0OiAyN3B4O1xyXG4gICAgbWluLWhlaWdodDogMjdweDtcclxuICAgIHZlcnRpY2FsLWFsaWduOiB0b3A7XHJcbiAgICBmb250LXNpemU6IDExcHg7XHJcbiAgICBwYWRkaW5nOiAwIDA7XHJcbiAgICBtYXJnaW46IDA7XHJcbiAgICB9Il19 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormArray, FormBuilder, FormGroup } from '@angular/forms';\r\nimport { NavigationStart, Router } from '@angular/router';\r\nimport { filter } from 'rxjs/operators';\r\nimport { RulesService } from 'src/app/shared/services/rules/rules.service';\r\n\r\n@Component({\r\n  selector: 'app-rule-validation',\r\n  templateUrl: './rule-validation.component.html',\r\n  styleUrls: ['./rule-validation.component.css']\r\n})\r\nexport class RuleValidationComponent implements OnInit {\r\n\r\n  \r\n  \r\n  ruleBValidationData: { fieldNo: string; node: string; key: string; objectName: string; validationMethod: string; validationDetails: string; }[];\r\n  constructor(private route: Router,\r\n    private ruleVallidation:RulesService) { }\r\n\r\n  ngOnInit() {\r\n    this.ruleVallidation.gettingExternalsystem().subscribe(extSysResp=>\r\n      {\r\n        console.log(extSysResp);\r\n      },\r\n      (err:any)=>\r\n      {\r\n        console.log(\"err\"+err);\r\n      })\r\n      this.ruleVallidation.gettingISoBasedonExtsys().subscribe(extSysISOResp=>\r\n        {\r\n          console.log(extSysISOResp);\r\n        })\r\n        this.ruleVallidation.xmlbasedonExternalsystem().subscribe(extsysXMLREsp=>\r\n          {\r\n            console.log(extsysXMLREsp);\r\n          })\r\n    this.ruleBValidationData =\r\n    [{\r\n      fieldNo: \"123\",\r\n      node: \"678\",\r\n        key: \"678\",\r\n        objectName: \"678\",\r\n      validationMethod:'yyy',\r\n     validationDetails:'yyy'\r\n    },\r\n    {\r\n      fieldNo: \"123\",\r\n      node: \"678\",\r\n        key: \"678\",\r\n        objectName: \"678\",\r\n      validationMethod:'yyy',\r\n     validationDetails:'yyy'\r\n    },\r\n    {\r\n      fieldNo: \"123\",\r\n      node: \"678\",\r\n        key: \"678\",\r\n        objectName: \"678\",\r\n      validationMethod:'yyy',\r\n     validationDetails:'yyy'\r\n    },\r\n    {\r\n      fieldNo: \"123\",\r\n      node: \"678\",\r\n        key: \"678\",\r\n        objectName: \"678\",\r\n      validationMethod:'yyy',\r\n     validationDetails:'yyy'\r\n    },]\r\n  \r\n\r\n\r\n  \r\n  \r\n  }\r\n \r\n\r\n\r\n  deleteRuleVlidtion(i)\r\n  { \r\n    this.ruleBValidationData.splice(i,1);\r\n  }\r\n  ruleTranslation()\r\n  {\r\n\r\n  }\r\n  addRuleValidtion()\r\n  {\r\n    this.ruleBValidationData.push(\r\n      {\r\n        fieldNo: \"\",\r\n        node: \"\",\r\n          key: \"\",\r\n          objectName: \"\",\r\n        validationMethod:'',\r\n       validationDetails:''\r\n      }\r\n    )\r\n  }\r\n  moveToruletranslation()\r\n  {\r\n    this.route.navigateByUrl('/sias-v2/ruleTranslation');\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL3NpYXMtdjIvcnVsZXMvcnVsZXMuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-rules',\r\n  templateUrl: './rules.component.html',\r\n  styleUrls: ['./rules.component.css']\r\n})\r\nexport class RulesComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { ViewOrEditExternalSystemComponent } from './add-system-incoming-message-tcp/view-or-edit-external-system/view-or-edit-external-system.component';\r\nimport { SourceDestinationSystemValidationComponent } from './source-destination-system-validation/source-destination-system-validation.component';\r\nimport { Routes } from '@angular/router';\r\nimport { ExcelMappingComponent } from './excel-mapping/excel-mapping.component';\r\nimport { ExcelUploadComponent } from './excel-upload/excel-upload.component';\r\nimport { ExcelProcessingComponent } from './excel-processing/excel-processing.component';\r\nimport { ExtsummaryComponent } from './extsummary/extsummary.component';\r\nimport { ExcelExternalSysComponent } from './excel-external-sys/excel-external-sys.component';\r\nimport { ExtSystemComponent } from './ext-system/ext-system.component';\r\nimport { ExtSysListComponent } from './ext-sys-list/ext-sys-list.component';\r\nimport { UpdateexcelextComponent } from './extsummary/updateexcelext/updateexcelext.component';\r\nimport { UpdateExtsysComponent } from './update-extsys/update-extsys.component';\r\nimport { UpdateExcelMappingComponent } from './excel-mapping/update-excel-mapping/update-excel-mapping.component';\r\nimport { ExcelMappingSummaryComponent } from './excel-mapping/excel-mapping-summary/excel-mapping-summary.component';\r\nimport { AddSystemIncomingMessageTcpComponent } from './add-system-incoming-message-tcp/add-system-incoming-message-tcp.component';\r\nimport { CreateRulesComponent } from './rules/create-rules/create-rules.component';\r\nimport { ExternalSystemMatenanceSummaryComponent } from './add-system-incoming-message-tcp/external-system-matenance-summary/external-system-matenance-summary.component';\r\nimport { RuleTranslationComponent } from './rules/rule-translation/rule-translation.component';\r\nimport { RuleValidationComponent } from './rules/rule-validation/rule-validation.component';\r\nimport { RuleMappingComponent } from './add-system-incoming-message-tcp/rule-mapping/rule-mapping.component';\r\nimport { EditAddSystemComponent } from './edit-add-system/edit-add-system.component';\r\nimport { RuleSummaryComponent } from './rules/rule-summary/rule-summary.component';\r\nimport { RuleTranslationsummaryComponent } from './rules/rule-translationsummary/rule-translationsummary.component';\r\nimport { EditRuleTarnslationComponent } from './rules/rule-translation/edit-rule-tarnslation/edit-rule-tarnslation.component';\r\nimport { EditRulesComponent } from './rules/create-rules/edit-rules/edit-rules.component';\r\nimport { EditRuleMappingComponent } from './add-system-incoming-message-tcp/rule-mapping/edit-rule-mapping/edit-rule-mapping.component';\r\nimport { ListRuleMappingComponent } from './add-system-incoming-message-tcp/rule-mapping/list-rule-mapping/list-rule-mapping.component';\r\n\r\n\r\nexport const siasv2Routes: Routes = [\r\n    {\r\n        path: \"\",\r\n        component: ExcelMappingComponent,\r\n        pathMatch: \"full\",\r\n        data: { title: 'Excel Mapping', breadcrumb: 'Excel Mapping' }\r\n    },\r\n    {\r\n        path: \"ExcelMapping\",\r\n        component: ExcelMappingComponent,\r\n        pathMatch: \"full\",\r\n        data: { title: 'Excel Mapping', breadcrumb: 'Excel Mapping' }\r\n    },\r\n    {\r\n        path: \"ExcelMappingSummary\",\r\n        component: ExcelMappingSummaryComponent,\r\n        pathMatch: \"full\",\r\n        data: { title: 'Excel Mapping Summary', breadcrumb: 'Excel Mapping Summary' }\r\n    },\r\n    {\r\n        path: \"ExcelUpload\",\r\n        component: ExcelUploadComponent,\r\n        pathMatch: \"full\",\r\n        data: { title: 'Excel Upload', breadcrumb: 'Excel Upload' }\r\n    }, {\r\n        path: \"ExcelProcessing\",\r\n        component: ExcelProcessingComponent,\r\n        pathMatch: \"full\",\r\n        data: { title: 'Excel Processing', breadcrumb: 'Excel Processing' }\r\n    }, {\r\n        path: \"ExtSumamry\",\r\n        component: ExtsummaryComponent,\r\n        pathMatch: \"full\",\r\n        data: { title: 'External System Summary', breadcrumb: 'External System Summary' }\r\n    }, {\r\n        path: \"excelExtSysUpdate\",\r\n        component: UpdateexcelextComponent,\r\n        pathMatch: \"full\",\r\n        data: { title: 'Update External System', breadcrumb: 'Update External System' }\r\n    }, {\r\n        path: \"ExtSysList\",\r\n        component: ExtSysListComponent,\r\n        pathMatch: \"full\",\r\n        data: { title: 'Process Code Mapping Summary', breadcrumb: 'Process Code Mapping Summary' }\r\n    }, {\r\n        path: \"extSystem\",\r\n        component: ExtSystemComponent,\r\n        pathMatch: \"full\",\r\n        data: { title: 'Process Code Mapping', breadcrumb: 'Process Code Mapping' }\r\n    }, {\r\n        path: \"ExcelExternalSys\",\r\n        component: ExcelExternalSysComponent,\r\n        pathMatch: \"full\",\r\n        data: { title: 'Ext System', breadcrumb: 'External System' }\r\n    }, {\r\n        path: \"updateMaintanance\",\r\n        component: UpdateExtsysComponent,\r\n        pathMatch: \"full\",\r\n        data: { title: 'Update Process Code Mapping', breadcrumb: 'Update Process Code Mapping' }\r\n    },\r\n    {\r\n        path: \"updateExcelMappingComponent\",\r\n        component: UpdateExcelMappingComponent,\r\n        pathMatch: \"full\",\r\n        data: { title: 'Update Mapping', breadcrumb: 'Update Mapping' }\r\n    },\r\n    {\r\n        path: \"addSystem\",\r\n        component: AddSystemIncomingMessageTcpComponent,\r\n        pathMatch: \"full\",\r\n        data: { title: 'Add System', breadcrumb: 'add System incoming tcp' }\r\n    },\r\n    {\r\n        path: \"sourceDestinationSystemValidation\",\r\n        component: SourceDestinationSystemValidationComponent,\r\n        pathMatch: \"full\",\r\n        data: { title: 'Source Destination System', breadcrumb: 'Source Destination System' }\r\n    },\r\n    {\r\n        path: \"viewOrEditSystem\",\r\n        component: ViewOrEditExternalSystemComponent,\r\n        pathMatch: \"full\",\r\n        data: { title: 'View/Edit System', breadcrumb: 'View/Edit System' }\r\n    },\r\n    {\r\n        path: \"createRule\",\r\n        component: CreateRulesComponent,\r\n        pathMatch: \"full\",\r\n        data: { title: 'Create Rule', breadcrumb: 'Create Rule' }\r\n    },\r\n    {\r\n        path: \"ruleValidation\",\r\n        component: RuleValidationComponent,\r\n        pathMatch: \"full\",\r\n        data: { title: 'ruleValidation', breadcrumb: 'ruleValidation' }\r\n    },\r\n    {\r\n        path: \"ruleTranslation\",\r\n        component: RuleTranslationComponent,\r\n        pathMatch: \"full\",\r\n        data: { title: 'ruleTranslation', breadcrumb: 'ruleTranslation' }\r\n    },\r\n    {\r\n        path: \"externalSysSummaryNew\",\r\n        component: ExternalSystemMatenanceSummaryComponent,\r\n        pathMatch: \"full\",\r\n        data: { title: 'Summary System', breadcrumb: 'Summary System' }\r\n    },\r\n    {\r\n        path: \"RuleMapping\",\r\n        component: RuleMappingComponent,\r\n        pathMatch: \"full\",\r\n        data: { title: 'Rule Mapping', breadcrumb: 'Rule Mapping' }\r\n    },\r\n    {\r\n        path: \"EditAddSys\",\r\n        component: EditAddSystemComponent,\r\n        pathMatch: \"full\",\r\n        data: { title: 'Rule Mapping', breadcrumb: 'Rule Mapping' }\r\n    },\r\n    {\r\n        path: \"ruleSummary\",\r\n        component: RuleSummaryComponent,\r\n        pathMatch: \"full\",\r\n        data: { title: 'Rule Mapping', breadcrumb: 'Rule Mapping' }\r\n    },\r\n    {\r\n        path: \"tranlationSummary\",\r\n        component: RuleTranslationsummaryComponent,\r\n        pathMatch: \"full\",\r\n        data: { title: 'Rule Mapping', breadcrumb: 'Rule Mapping' }\r\n    },\r\n    {\r\n        path: \"editTranslation\",\r\n        component: EditRuleTarnslationComponent,\r\n        pathMatch: \"full\",\r\n        data: { title: 'Rule Mapping', breadcrumb: 'Rule Mapping' }\r\n    },\r\n    {\r\n        path: \"editRules\",\r\n        component: EditRulesComponent,\r\n        pathMatch: \"full\",\r\n        data: { title: 'Rule Mapping', breadcrumb: 'Rule Mapping' }\r\n    },\r\n    {\r\n        path: \"editRuleMapping\",\r\n        component: EditRuleMappingComponent,\r\n        pathMatch: \"full\",\r\n        data: { title: 'Rule Mapping', breadcrumb: 'Rule Mapping' }\r\n    },\r\n    {\r\n        path: \"litsRuleMapping\",\r\n        component: ListRuleMappingComponent,\r\n        pathMatch: \"full\",\r\n        data: { title: 'Rule Mapping', breadcrumb: 'Rule Mapping' }\r\n    }\r\n\r\n];\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { siasv2Routes } from './sias-v2-routing.module';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { RouterModule } from '@angular/router';\r\nimport { ExcelMappingComponent } from './excel-mapping/excel-mapping.component';\r\nimport { ExcelUploadComponent } from './excel-upload/excel-upload.component';\r\nimport { ExcelProcessingComponent } from './excel-processing/excel-processing.component';\r\n\r\nimport { ExtSystemComponent } from './ext-system/ext-system.component';\r\nimport { UpdateExtsysComponent } from './update-extsys/update-extsys.component';\r\nimport { ExcelExternalSysComponent } from './excel-external-sys/excel-external-sys.component';\r\nimport { UpdateexcelextComponent } from './extsummary/updateexcelext/updateexcelext.component';\r\nimport { ExtsummaryComponent } from './extsummary/extsummary.component';\r\nimport { ExtSysListComponent } from './ext-sys-list/ext-sys-list.component';\r\n\r\nimport { UpdateExcelMappingComponent } from './excel-mapping/update-excel-mapping/update-excel-mapping.component';\r\nimport { AngularMaterialModule } from 'src/app/shared/angular-material/angular-material.module';\r\nimport { SharedModule } from 'src/app/shared/shared.module';\r\nimport { ToastrModule } from 'ngx-toastr';\r\nimport { FileUploadModule } from 'ng2-file-upload';\r\nimport { ExcelMappingSummaryComponent } from './excel-mapping/excel-mapping-summary/excel-mapping-summary.component';\r\nimport { AppComfirmComponent } from 'src/app/shared/services/app-confirm/app-confirm.component';\r\nimport { AddSystemIncomingMessageTcpComponent } from './add-system-incoming-message-tcp/add-system-incoming-message-tcp.component';\r\nimport { SourceDestinationSystemValidationComponent } from './source-destination-system-validation/source-destination-system-validation.component';\r\nimport { ViewOrEditExternalSystemComponent } from './add-system-incoming-message-tcp/view-or-edit-external-system/view-or-edit-external-system.component';\r\nimport { RulesComponent } from './rules/rules.component';\r\nimport { CreateRulesComponent } from './rules/create-rules/create-rules.component';\r\nimport { RuleValidationComponent } from './rules/rule-validation/rule-validation.component';\r\nimport { RuleTranslationComponent } from './rules/rule-translation/rule-translation.component';\r\nimport { ExternalSystemMatenanceSummaryComponent } from './add-system-incoming-message-tcp/external-system-matenance-summary/external-system-matenance-summary.component';\r\nimport { RuleMappingComponent } from './add-system-incoming-message-tcp/rule-mapping/rule-mapping.component';\r\nimport { EditAddSystemComponent } from './edit-add-system/edit-add-system.component';\r\nimport { RuleSummaryComponent } from './rules/rule-summary/rule-summary.component';\r\nimport { RuleTranslationsummaryComponent } from './rules/rule-translationsummary/rule-translationsummary.component';\r\n\r\nimport { EditRuleTarnslationComponent } from './rules/rule-translation/edit-rule-tarnslation/edit-rule-tarnslation.component';\r\nimport { EditRulesComponent } from './rules/create-rules/edit-rules/edit-rules.component';\r\nimport { EditRuleMappingComponent } from './add-system-incoming-message-tcp/rule-mapping/edit-rule-mapping/edit-rule-mapping.component';\r\nimport { ListRuleMappingComponent } from './add-system-incoming-message-tcp/rule-mapping/list-rule-mapping/list-rule-mapping.component';\r\n\r\n\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ExcelMappingComponent,\r\n    ExcelUploadComponent,\r\n    ExcelProcessingComponent,\r\n    ExtSystemComponent,\r\n    UpdateExtsysComponent,\r\n    ExtSysListComponent,\r\n    ExtsummaryComponent,\r\n    ExcelExternalSysComponent,\r\n    UpdateexcelextComponent,\r\n\r\n    UpdateExcelMappingComponent,\r\n    ExcelMappingSummaryComponent,\r\n    AddSystemIncomingMessageTcpComponent,\r\n    SourceDestinationSystemValidationComponent,\r\n    ViewOrEditExternalSystemComponent,\r\n    RulesComponent,\r\n    CreateRulesComponent,\r\n    RuleValidationComponent,\r\n    RuleTranslationComponent,\r\n    ExternalSystemMatenanceSummaryComponent,\r\n    RuleMappingComponent,\r\n    EditAddSystemComponent,\r\n    RuleSummaryComponent,\r\n    RuleTranslationsummaryComponent,\r\n   \r\n    EditRuleTarnslationComponent,\r\n   \r\n    EditRulesComponent,\r\n   \r\n    EditRuleMappingComponent,\r\n   \r\n    ListRuleMappingComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FileUploadModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    AngularMaterialModule,\r\n    FlexLayoutModule,\r\n    SharedModule,\r\n    RouterModule.forChild(siasv2Routes)\r\n  ],\r\n  entryComponents: []\r\n})\r\nexport class SiasV2Module { }","export default \".Outer-div{\\r\\n  /* background-color: rgb(221, 217, 217) !important; */\\r\\n  height: 100%;\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n.head{\\r\\n  background-color: #e6e6e6;\\r\\n  height: 60px;\\r\\n}\\r\\n\\r\\n.Div_card{\\r\\n  padding-top: 1%;\\r\\n  padding-bottom: 3%;\\r\\n  padding-right: 1%;\\r\\n  padding-left: 1%;\\r\\n  /* background-color: rgb(221, 217, 217) !important; */\\r\\n\\r\\n}\\r\\n\\r\\n.tabb{\\r\\n  width: 100%;\\r\\n  box-shadow: 0 0 black;\\r\\n  border: 1px solid #e6e6e6;\\r\\n}\\r\\n\\r\\ntable {\\r\\n  width: 100%;\\r\\n  text-align: center;\\r\\n}\\r\\n\\r\\n.mat-raised-button {\\r\\nwidth: -webkit-fit-content;\\r\\nwidth: -moz-fit-content;\\r\\nwidth: fit-content;\\r\\nheight: 20px;\\r\\nline-height: 27px;\\r\\nmin-height: 27px;\\r\\nvertical-align: top;\\r\\nfont-size: 11px;\\r\\npadding: 0 0;\\r\\nmargin: 0;\\r\\n}\\r\\n\\r\\nth, td {\\r\\nmin-height: 100px;\\r\\n padding: 0 10px !important;\\r\\n   border-top: 1px rgba(0, 0, 0, 0.12) solid;\\r\\n   border-right: 1px rgba(0, 0, 0, 0.12) solid; \\r\\n   border-left: 1px rgba(0, 0, 0, 0.12) solid; \\r\\n}\\r\\n\\r\\n.top\\r\\n{\\r\\npadding-top: 30px;\\r\\n}\\r\\n\\r\\nth.mat-header-cell{\\r\\n  text-align: center;\\r\\n}\\r\\n\\r\\n.newTagMapping{\\r\\n  margin-left: 1%;\\r\\n  background-color:#006699;\\r\\n}\\r\\n\\r\\n.Div_btn_new_tag{\\r\\n  padding-top: 1%;\\r\\n  padding-bottom: 2%;\\r\\n}\\r\\n\\r\\n.show{\\r\\n  background-color:#006699;\\r\\n}\\r\\n\\r\\n/* .inputWithIcon input[type=\\\"text\\\"] {\\r\\n  padding-left: 40px;\\r\\n} */\\r\\n\\r\\n/* .inputWithIcon {\\r\\n  position: relative;\\r\\n} */\\r\\n\\r\\n/* .inputWithIcon i {\\r\\n  position: absolute;\\r\\n  margin-top: -33px !important;\\r\\n  padding-left: 10px !important;\\r\\n  color: grey;\\r\\n} */\\r\\n\\r\\n.searchicon {\\r\\n  float: right;\\r\\n  margin-right: 6px;\\r\\n  margin-top: -36px;\\r\\n  position: relative !important;\\r\\n  z-index: 2;\\r\\n  color:grey;\\r\\n  padding-bottom: 10px;\\r\\n}\\r\\n\\r\\n/* input[type=\\\"text\\\"] {\\r\\n  width: 100%;\\r\\n  height: 33px !important;\\r\\n  margin: 8px 0;\\r\\n  outline: none;\\r\\n  padding: 8px;\\r\\n  box-sizing: border-box;\\r\\n} */\\r\\n\\r\\n.closicon{\\r\\n  padding-left: 10px;\\r\\n  vertical-align: baseline;\\r\\n}\\r\\n\\r\\n/* input:focus, input.form-control:focus {\\r\\n  outline:none !important;\\r\\n  outline-width: 0 !important;\\r\\n  box-shadow: none;\\r\\n  -moz-box-shadow: none;\\r\\n  -webkit-box-shadow: none;\\r\\n  border:1px solid gray;\\r\\n} */\\r\\n\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdmlld3Mvc2lhcy12Mi9zb3VyY2UtZGVzdGluYXRpb24tc3lzdGVtLXZhbGlkYXRpb24vc291cmNlLWRlc3RpbmF0aW9uLXN5c3RlbS12YWxpZGF0aW9uLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxxREFBcUQ7RUFDckQsWUFBWTtFQUNaLFdBQVc7QUFDYjs7QUFFQTtFQUNFLHlCQUF5QjtFQUN6QixZQUFZO0FBQ2Q7O0FBRUE7RUFDRSxlQUFlO0VBQ2Ysa0JBQWtCO0VBQ2xCLGlCQUFpQjtFQUNqQixnQkFBZ0I7RUFDaEIscURBQXFEOztBQUV2RDs7QUFFQTtFQUNFLFdBQVc7RUFDWCxxQkFBcUI7RUFDckIseUJBQXlCO0FBQzNCOztBQUVBO0VBQ0UsV0FBVztFQUNYLGtCQUFrQjtBQUNwQjs7QUFFQTtBQUNBLDBCQUFrQjtBQUFsQix1QkFBa0I7QUFBbEIsa0JBQWtCO0FBQ2xCLFlBQVk7QUFDWixpQkFBaUI7QUFDakIsZ0JBQWdCO0FBQ2hCLG1CQUFtQjtBQUNuQixlQUFlO0FBQ2YsWUFBWTtBQUNaLFNBQVM7QUFDVDs7QUFDQTtBQUNBLGlCQUFpQjtDQUNoQiwwQkFBMEI7R0FDeEIseUNBQXlDO0dBQ3pDLDJDQUEyQztHQUMzQywwQ0FBMEM7QUFDN0M7O0FBQ0E7O0FBRUEsaUJBQWlCO0FBQ2pCOztBQUNBO0VBQ0Usa0JBQWtCO0FBQ3BCOztBQUVBO0VBQ0UsZUFBZTtFQUNmLHdCQUF3QjtBQUMxQjs7QUFFQTtFQUNFLGVBQWU7RUFDZixrQkFBa0I7QUFDcEI7O0FBRUE7RUFDRSx3QkFBd0I7QUFDMUI7O0FBRUE7O0dBRUc7O0FBRUg7O0dBRUc7O0FBRUg7Ozs7O0dBS0c7O0FBRUg7RUFDRSxZQUFZO0VBQ1osaUJBQWlCO0VBQ2pCLGlCQUFpQjtFQUNqQiw2QkFBNkI7RUFDN0IsVUFBVTtFQUNWLFVBQVU7RUFDVixvQkFBb0I7QUFDdEI7O0FBRUE7Ozs7Ozs7R0FPRzs7QUFFSDtFQUNFLGtCQUFrQjtFQUNsQix3QkFBd0I7QUFDMUI7O0FBRUE7Ozs7Ozs7R0FPRyIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL3NpYXMtdjIvc291cmNlLWRlc3RpbmF0aW9uLXN5c3RlbS12YWxpZGF0aW9uL3NvdXJjZS1kZXN0aW5hdGlvbi1zeXN0ZW0tdmFsaWRhdGlvbi5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLk91dGVyLWRpdntcclxuICAvKiBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjIxLCAyMTcsIDIxNykgIWltcG9ydGFudDsgKi9cclxuICBoZWlnaHQ6IDEwMCU7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbn1cclxuXHJcbi5oZWFke1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICNlNmU2ZTY7XHJcbiAgaGVpZ2h0OiA2MHB4O1xyXG59XHJcblxyXG4uRGl2X2NhcmR7XHJcbiAgcGFkZGluZy10b3A6IDElO1xyXG4gIHBhZGRpbmctYm90dG9tOiAzJTtcclxuICBwYWRkaW5nLXJpZ2h0OiAxJTtcclxuICBwYWRkaW5nLWxlZnQ6IDElO1xyXG4gIC8qIGJhY2tncm91bmQtY29sb3I6IHJnYigyMjEsIDIxNywgMjE3KSAhaW1wb3J0YW50OyAqL1xyXG5cclxufVxyXG5cclxuLnRhYmJ7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbiAgYm94LXNoYWRvdzogMCAwIGJsYWNrO1xyXG4gIGJvcmRlcjogMXB4IHNvbGlkICNlNmU2ZTY7XHJcbn1cclxuXHJcbnRhYmxlIHtcclxuICB3aWR0aDogMTAwJTtcclxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbn1cclxuXHJcbi5tYXQtcmFpc2VkLWJ1dHRvbiB7XHJcbndpZHRoOiBmaXQtY29udGVudDtcclxuaGVpZ2h0OiAyMHB4O1xyXG5saW5lLWhlaWdodDogMjdweDtcclxubWluLWhlaWdodDogMjdweDtcclxudmVydGljYWwtYWxpZ246IHRvcDtcclxuZm9udC1zaXplOiAxMXB4O1xyXG5wYWRkaW5nOiAwIDA7XHJcbm1hcmdpbjogMDtcclxufVxyXG50aCwgdGQge1xyXG5taW4taGVpZ2h0OiAxMDBweDtcclxuIHBhZGRpbmc6IDAgMTBweCAhaW1wb3J0YW50O1xyXG4gICBib3JkZXItdG9wOiAxcHggcmdiYSgwLCAwLCAwLCAwLjEyKSBzb2xpZDtcclxuICAgYm9yZGVyLXJpZ2h0OiAxcHggcmdiYSgwLCAwLCAwLCAwLjEyKSBzb2xpZDsgXHJcbiAgIGJvcmRlci1sZWZ0OiAxcHggcmdiYSgwLCAwLCAwLCAwLjEyKSBzb2xpZDsgXHJcbn0gXHJcbi50b3Bcclxue1xyXG5wYWRkaW5nLXRvcDogMzBweDtcclxufVxyXG50aC5tYXQtaGVhZGVyLWNlbGx7XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG59XHJcblxyXG4ubmV3VGFnTWFwcGluZ3tcclxuICBtYXJnaW4tbGVmdDogMSU7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjojMDA2Njk5O1xyXG59XHJcblxyXG4uRGl2X2J0bl9uZXdfdGFne1xyXG4gIHBhZGRpbmctdG9wOiAxJTtcclxuICBwYWRkaW5nLWJvdHRvbTogMiU7XHJcbn1cclxuXHJcbi5zaG93e1xyXG4gIGJhY2tncm91bmQtY29sb3I6IzAwNjY5OTtcclxufVxyXG5cclxuLyogLmlucHV0V2l0aEljb24gaW5wdXRbdHlwZT1cInRleHRcIl0ge1xyXG4gIHBhZGRpbmctbGVmdDogNDBweDtcclxufSAqL1xyXG5cclxuLyogLmlucHV0V2l0aEljb24ge1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxufSAqL1xyXG5cclxuLyogLmlucHV0V2l0aEljb24gaSB7XHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIG1hcmdpbi10b3A6IC0zM3B4ICFpbXBvcnRhbnQ7XHJcbiAgcGFkZGluZy1sZWZ0OiAxMHB4ICFpbXBvcnRhbnQ7XHJcbiAgY29sb3I6IGdyZXk7XHJcbn0gKi9cclxuXHJcbi5zZWFyY2hpY29uIHtcclxuICBmbG9hdDogcmlnaHQ7XHJcbiAgbWFyZ2luLXJpZ2h0OiA2cHg7XHJcbiAgbWFyZ2luLXRvcDogLTM2cHg7XHJcbiAgcG9zaXRpb246IHJlbGF0aXZlICFpbXBvcnRhbnQ7XHJcbiAgei1pbmRleDogMjtcclxuICBjb2xvcjpncmV5O1xyXG4gIHBhZGRpbmctYm90dG9tOiAxMHB4O1xyXG59XHJcblxyXG4vKiBpbnB1dFt0eXBlPVwidGV4dFwiXSB7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbiAgaGVpZ2h0OiAzM3B4ICFpbXBvcnRhbnQ7XHJcbiAgbWFyZ2luOiA4cHggMDtcclxuICBvdXRsaW5lOiBub25lO1xyXG4gIHBhZGRpbmc6IDhweDtcclxuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xyXG59ICovXHJcblxyXG4uY2xvc2ljb257XHJcbiAgcGFkZGluZy1sZWZ0OiAxMHB4O1xyXG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTtcclxufVxyXG5cclxuLyogaW5wdXQ6Zm9jdXMsIGlucHV0LmZvcm0tY29udHJvbDpmb2N1cyB7XHJcbiAgb3V0bGluZTpub25lICFpbXBvcnRhbnQ7XHJcbiAgb3V0bGluZS13aWR0aDogMCAhaW1wb3J0YW50O1xyXG4gIGJveC1zaGFkb3c6IG5vbmU7XHJcbiAgLW1vei1ib3gtc2hhZG93OiBub25lO1xyXG4gIC13ZWJraXQtYm94LXNoYWRvdzogbm9uZTtcclxuICBib3JkZXI6MXB4IHNvbGlkIGdyYXk7XHJcbn0gKi9cclxuXHJcbiJdfQ== */\"","import { FormGroup, FormBuilder } from '@angular/forms';\r\nimport { Component, OnInit, QueryList, ViewChildren } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map, startWith } from 'rxjs/operators';\r\nimport { MatPaginator } from '@angular/material';\r\n\r\n@Component({\r\n  selector: 'app-source-destination-system-validation',\r\n  templateUrl: './source-destination-system-validation.component.html',\r\n  styleUrls: ['./source-destination-system-validation.component.css']\r\n})\r\nexport class SourceDestinationSystemValidationComponent implements OnInit {\r\n  options: string[] = ['Sys1', 'System2', 'System3', 'Sys4', 'Sys5'];\r\n  options1: string[] = ['Sys1', 'System2', 'System3', 'Sys4', 'Sys5'];\r\n  filteredOptions: Observable<string[]>;\r\n  filteredOptions1: Observable<string[]>;\r\n  sourceDestinationSystemForm: FormGroup;\r\n  isSourceDestination:boolean=true;\r\n  isSrcDestValidation:boolean=false;\r\n  dataSource : any;\r\n\r\n  searchField;\r\n \r\n  displayedColumns: string[] = ['source', 'destination','validationMethod', 'details','values'];\r\n  constructor(private formBuilder: FormBuilder) { }\r\n  @ViewChildren(MatPaginator) paginator = new QueryList<MatPaginator>();\r\n  ngOnInit() {\r\n\r\n    this.sourceDestinationSystemForm = this.formBuilder.group({\r\n      sourceSystem: [''],\r\n      destinationSystem: ['']\r\n    });\r\n\r\n    this.filteredOptions = this.sourceDestinationSystemForm.controls['sourceSystem'].valueChanges.pipe(\r\n      startWith(''),\r\n      map(value => this._filterSource(value))\r\n    );\r\n\r\n    this.filteredOptions1 = this.sourceDestinationSystemForm.controls['destinationSystem'].valueChanges.pipe(\r\n      startWith(''),\r\n      map(value => this._filterDestination(value))\r\n    );\r\n    this.dataSource=ELEMENT_DATA;\r\n  \r\n    this.dataSource.paginator = this.paginator.toArray()[0];\r\n  }\r\n\r\n  private _filterSource(value: string): string[] {\r\n    const filterValue = value.toLowerCase();\r\n\r\n    return this.options.filter(option => option.toLowerCase().includes(filterValue));\r\n  }\r\n  private _filterDestination(value: string): string[] {\r\n    const filterValue = value.toLowerCase();\r\n    return this.options1.filter(option => option.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n  submit(sourceDestinationSystemForm) {\r\n    console.log(sourceDestinationSystemForm);\r\n    this.isSourceDestination=false;\r\n    this.isSrcDestValidation=true;\r\n  }\r\n\r\n \r\n}\r\n  \r\nexport interface PeriodicElement {\r\n  destination: string;\r\n  source: String;\r\n  validationMethod:String;\r\n  details:String;\r\n  values:String;\r\n\r\n  \r\n}\r\n\r\nconst ELEMENT_DATA: PeriodicElement[] = [\r\n  {source: 'system1', destination: 'system4',validationMethod: 'SOURCE METHOD',details:'MAPPING OF SOURCE METHOD',values:'123456' },\r\n  {source: 'system2', destination: 'System5',validationMethod: 'DESTINATION METHOD',details:'MAPPING OF DESTINATION METHOD',values:'456789' },\r\n  {source: 'system1', destination: 'system4',validationMethod: 'SOURCE METHOD',details:'MAPPING OF SOURCE METHOD',values:'123456' },\r\n \r\n \r\n];","export default \"table {\\n  width: 100%;\\n}\\n\\nmat-form-field, mat-checkbox {\\n  padding-left: 20px;\\n}\\n\\nth {\\n  /* text-align: center;\\n   */\\n  font-size: 10px;\\n  align-content: center;\\n}\\n\\nmat-chip {\\n  font-size: 10px;\\n}\\n\\ntable td {\\n  padding-right: 50px;\\n}\\n\\n#customers {\\n  font-family: \\\"Trebuchet MS\\\", Arial, Helvetica, sans-serif;\\n  border-collapse: collapse;\\n  width: 100%;\\n}\\n\\n#customers td, #customers th {\\n  border: 1px solid #ddd;\\n  padding: 8px;\\n  text-align: center;\\n}\\n\\n#customers tr:nth-child(even) {\\n  background-color: #f2f2f2;\\n}\\n\\n#customers th {\\n  padding-top: 12px;\\n  padding-bottom: 12px;\\n  text-align: left;\\n  background-color: #61b2d8;\\n  color: white;\\n}\\n\\n.mat-raised-button {\\n  width: -webkit-fit-content;\\n  width: -moz-fit-content;\\n  width: fit-content;\\n  height: 20px;\\n  line-height: 27px;\\n  min-height: 27px;\\n  vertical-align: top;\\n  font-size: 11px;\\n  padding: 0 0;\\n  margin: 0;\\n}\\n\\nmat-form-field {\\n  font-size: 12px;\\n}\\n\\n::ng-deep .mat-checkbox-checked .mat-checkbox-background, .mat-checkbox-indeterminate .mat-checkbox-background {\\n  background-color: #fa25b3 !important;\\n  color: black;\\n}\\n\\n::ng-deep .mat-checkbox-disabled .mat-checkbox-label {\\n  color: black;\\n}\\n\\n::ng-deep .mat-checkbox:not(.mat-checkbox-disabled) .mat-checkbox-ripple .mat-ripple-element {\\n  background-color: #fa25b3 !important;\\n}\\n\\n::ng-deep .mat-form-field-appearance-outline .mat-form-field-outline {\\n  color: black !important;\\n}\\n\\nmat-label {\\n  color: black;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdmlld3Mvc2lhcy12Mi91cGRhdGUtZXh0c3lzL0Y6XFxtdXRodS1vbmJvYXJkXFxtZWRpYW4tcGgyLXVpL3NyY1xcYXBwXFx2aWV3c1xcc2lhcy12MlxcdXBkYXRlLWV4dHN5c1xcdXBkYXRlLWV4dHN5cy5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvdmlld3Mvc2lhcy12Mi91cGRhdGUtZXh0c3lzL3VwZGF0ZS1leHRzeXMuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxXQUFBO0FDQ0Y7O0FEQ0E7RUFDRSxrQkFBQTtBQ0VGOztBREFBO0VBQ0U7SUFBQTtFQUVDLGVBQUE7RUFDSCxxQkFBQTtBQ0dBOztBRERBO0VBQ0UsZUFBQTtBQ0lGOztBREZBO0VBQ0UsbUJBQUE7QUNLRjs7QURIRTtFQUNFLHlEQUFBO0VBQ0EseUJBQUE7RUFDQSxXQUFBO0FDTUo7O0FESkE7RUFDSSxzQkFBQTtFQUNBLFlBQUE7RUFDQSxrQkFBQTtBQ09KOztBREpFO0VBQThCLHlCQUFBO0FDUWhDOztBRE5FO0VBQ0UsaUJBQUE7RUFDQSxvQkFBQTtFQUNBLGdCQUFBO0VBQ0EseUJBQUE7RUFDQSxZQUFBO0FDU0o7O0FEUEU7RUFDRSwwQkFBQTtFQUFBLHVCQUFBO0VBQUEsa0JBQUE7RUFDQSxZQUFBO0VBQ0EsaUJBQUE7RUFDQSxnQkFBQTtFQUNBLG1CQUFBO0VBQ0EsZUFBQTtFQUNBLFlBQUE7RUFDQSxTQUFBO0FDVUo7O0FEUEU7RUFDRSxlQUFBO0FDVUo7O0FEUEE7RUFDRSxvQ0FBQTtFQUVBLFlBQUE7QUNTRjs7QURQQTtFQUVBLFlBQUE7QUNTQTs7QURMQTtFQUNFLG9DQUFBO0FDUUY7O0FESkE7RUFDRSx1QkFBQTtBQ09GOztBREpBO0VBRUksWUFBQTtBQ01KIiwiZmlsZSI6InNyYy9hcHAvdmlld3Mvc2lhcy12Mi91cGRhdGUtZXh0c3lzL3VwZGF0ZS1leHRzeXMuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJ0YWJsZSB7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbn1cclxubWF0LWZvcm0tZmllbGQsbWF0LWNoZWNrYm94e1xyXG4gIHBhZGRpbmctbGVmdDogMjBweDtcclxufVxyXG50aHtcclxuICAvKiB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICovXHJcbiAgIGZvbnQtc2l6ZTogMTBweDtcclxuYWxpZ24tY29udGVudDogY2VudGVyO1xyXG59XHJcbm1hdC1jaGlwe1xyXG4gIGZvbnQtc2l6ZTogMTBweDtcclxufVxyXG50YWJsZSB0ZCB7XHJcbiAgcGFkZGluZy1yaWdodDogNTBweDtcclxufVxyXG4gICNjdXN0b21lcnMge1xyXG4gICAgZm9udC1mYW1pbHk6IFwiVHJlYnVjaGV0IE1TXCIsIEFyaWFsLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7XHJcbiAgICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgfVxyXG4jY3VzdG9tZXJzIHRkLCAjY3VzdG9tZXJzIHRoIHtcclxuICAgIGJvcmRlcjogMXB4IHNvbGlkICNkZGQ7XHJcbiAgICBwYWRkaW5nOiA4cHg7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgfVxyXG4gIFxyXG4gICNjdXN0b21lcnMgdHI6bnRoLWNoaWxkKGV2ZW4pe2JhY2tncm91bmQtY29sb3I6ICNmMmYyZjI7fVxyXG4gIFxyXG4gICNjdXN0b21lcnMgdGgge1xyXG4gICAgcGFkZGluZy10b3A6IDEycHg7XHJcbiAgICBwYWRkaW5nLWJvdHRvbTogMTJweDtcclxuICAgIHRleHQtYWxpZ246IGxlZnQ7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOnJnYig5NywgMTc4LCAyMTYpO1xyXG4gICAgY29sb3I6IHdoaXRlO1xyXG4gIH1cclxuICAubWF0LXJhaXNlZC1idXR0b24ge1xyXG4gICAgd2lkdGg6IGZpdC1jb250ZW50O1xyXG4gICAgaGVpZ2h0OiAyMHB4O1xyXG4gICAgbGluZS1oZWlnaHQ6IDI3cHg7XHJcbiAgICBtaW4taGVpZ2h0OiAyN3B4O1xyXG4gICAgdmVydGljYWwtYWxpZ246IHRvcDtcclxuICAgIGZvbnQtc2l6ZTogMTFweDtcclxuICAgIHBhZGRpbmc6IDAgMDtcclxuICAgIG1hcmdpbjogMDtcclxuICB9XHJcbiBcclxuICBtYXQtZm9ybS1maWVsZCB7XHJcbiAgICBmb250LXNpemU6IDEycHg7XHJcbiAgfVxyXG4gIC8vIG92ZXJ3cml0ZSB0aGUgY2hlY2tib3ggYmFja2dyb3VuZFxyXG46Om5nLWRlZXAgLm1hdC1jaGVja2JveC1jaGVja2VkIC5tYXQtY2hlY2tib3gtYmFja2dyb3VuZCwgLm1hdC1jaGVja2JveC1pbmRldGVybWluYXRlIC5tYXQtY2hlY2tib3gtYmFja2dyb3VuZCB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDI1MCwgMzcsIDE3OSkgIWltcG9ydGFudDtcclxuICBcclxuICBjb2xvcjogYmxhY2s7XHJcbn1cclxuOjpuZy1kZWVwIC5tYXQtY2hlY2tib3gtZGlzYWJsZWQgLm1hdC1jaGVja2JveC1sYWJlbFxyXG57XHJcbmNvbG9yOiBibGFjaztcclxufVxyXG5cclxuLy8gb3ZlcndyaXRlIHRoZSByaXBwbGUgb3ZlcmxheSBvbiBob3ZlciBhbmQgY2xpY2tcclxuOjpuZy1kZWVwIC5tYXQtY2hlY2tib3g6bm90KC5tYXQtY2hlY2tib3gtZGlzYWJsZWQpIC5tYXQtY2hlY2tib3gtcmlwcGxlIC5tYXQtcmlwcGxlLWVsZW1lbnQge1xyXG4gIGJhY2tncm91bmQtY29sb3I6IHJnYigyNTAsIDM3LCAxNzkpICFpbXBvcnRhbnQ7XHJcblxyXG59XHJcblxyXG46Om5nLWRlZXAgLm1hdC1mb3JtLWZpZWxkLWFwcGVhcmFuY2Utb3V0bGluZSAubWF0LWZvcm0tZmllbGQtb3V0bGluZSB7XHJcbiAgY29sb3I6IGJsYWNrICFpbXBvcnRhbnQ7XHJcbn1cclxuXHJcbm1hdC1sYWJlbFxyXG4gIHtcclxuICAgIGNvbG9yOiBibGFja1xyXG4gIH1cclxuICAiLCJ0YWJsZSB7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG5tYXQtZm9ybS1maWVsZCwgbWF0LWNoZWNrYm94IHtcbiAgcGFkZGluZy1sZWZ0OiAyMHB4O1xufVxuXG50aCB7XG4gIC8qIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICovXG4gIGZvbnQtc2l6ZTogMTBweDtcbiAgYWxpZ24tY29udGVudDogY2VudGVyO1xufVxuXG5tYXQtY2hpcCB7XG4gIGZvbnQtc2l6ZTogMTBweDtcbn1cblxudGFibGUgdGQge1xuICBwYWRkaW5nLXJpZ2h0OiA1MHB4O1xufVxuXG4jY3VzdG9tZXJzIHtcbiAgZm9udC1mYW1pbHk6IFwiVHJlYnVjaGV0IE1TXCIsIEFyaWFsLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7XG4gIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG4jY3VzdG9tZXJzIHRkLCAjY3VzdG9tZXJzIHRoIHtcbiAgYm9yZGVyOiAxcHggc29saWQgI2RkZDtcbiAgcGFkZGluZzogOHB4O1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG5cbiNjdXN0b21lcnMgdHI6bnRoLWNoaWxkKGV2ZW4pIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2YyZjJmMjtcbn1cblxuI2N1c3RvbWVycyB0aCB7XG4gIHBhZGRpbmctdG9wOiAxMnB4O1xuICBwYWRkaW5nLWJvdHRvbTogMTJweDtcbiAgdGV4dC1hbGlnbjogbGVmdDtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzYxYjJkODtcbiAgY29sb3I6IHdoaXRlO1xufVxuXG4ubWF0LXJhaXNlZC1idXR0b24ge1xuICB3aWR0aDogZml0LWNvbnRlbnQ7XG4gIGhlaWdodDogMjBweDtcbiAgbGluZS1oZWlnaHQ6IDI3cHg7XG4gIG1pbi1oZWlnaHQ6IDI3cHg7XG4gIHZlcnRpY2FsLWFsaWduOiB0b3A7XG4gIGZvbnQtc2l6ZTogMTFweDtcbiAgcGFkZGluZzogMCAwO1xuICBtYXJnaW46IDA7XG59XG5cbm1hdC1mb3JtLWZpZWxkIHtcbiAgZm9udC1zaXplOiAxMnB4O1xufVxuXG46Om5nLWRlZXAgLm1hdC1jaGVja2JveC1jaGVja2VkIC5tYXQtY2hlY2tib3gtYmFja2dyb3VuZCwgLm1hdC1jaGVja2JveC1pbmRldGVybWluYXRlIC5tYXQtY2hlY2tib3gtYmFja2dyb3VuZCB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmYTI1YjMgIWltcG9ydGFudDtcbiAgY29sb3I6IGJsYWNrO1xufVxuXG46Om5nLWRlZXAgLm1hdC1jaGVja2JveC1kaXNhYmxlZCAubWF0LWNoZWNrYm94LWxhYmVsIHtcbiAgY29sb3I6IGJsYWNrO1xufVxuXG46Om5nLWRlZXAgLm1hdC1jaGVja2JveDpub3QoLm1hdC1jaGVja2JveC1kaXNhYmxlZCkgLm1hdC1jaGVja2JveC1yaXBwbGUgLm1hdC1yaXBwbGUtZWxlbWVudCB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmYTI1YjMgIWltcG9ydGFudDtcbn1cblxuOjpuZy1kZWVwIC5tYXQtZm9ybS1maWVsZC1hcHBlYXJhbmNlLW91dGxpbmUgLm1hdC1mb3JtLWZpZWxkLW91dGxpbmUge1xuICBjb2xvcjogYmxhY2sgIWltcG9ydGFudDtcbn1cblxubWF0LWxhYmVsIHtcbiAgY29sb3I6IGJsYWNrO1xufSJdfQ== */\"","import { Component, OnInit, Input, ViewChild, ChangeDetectorRef, ElementRef, ViewChildren } from '@angular/core';\r\nimport { ExtsysClass } from '../ext-system/extsys-class';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\nimport { MatSnackBar, MatButton } from '@angular/material';\r\n\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { ExcelApiService } from 'src/app/shared/services/sias2-services/ExcelApiService';\r\nimport Swal from 'sweetalert2';\r\nimport { UsersService } from '../../users/users.service';\r\nimport { RoleService } from '../../roles1/roles.service';\r\nimport { permissionsLabels } from '../../roles1/models/fmosNewRolePermissions';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-update-extsys',\r\n  templateUrl: './update-extsys.component.html',\r\n  styleUrls: ['./update-extsys.component.scss']\r\n})\r\nexport class UpdateExtsysComponent implements OnInit {\r\n  enablefilebrowser=false;\r\n  space=true;\r\n  userRoles: string[];\r\n  backDateAllow: boolean = false;\r\n  futureDateAllow: boolean;\r\n  acft: boolean;\r\n  is_edit: boolean;\r\n  is_edit1: boolean;\r\n  createExtSys1: ExtsysClass = new ExtsysClass();\r\n  userRolesFromLogin: string;\r\n  loggedInUser: string;\r\n  validationResponse: any;\r\n  updatedExtObject: any;\r\n  editFunction: boolean;\r\n  editFunction2: boolean;\r\n  responseError: any;\r\n  poovar: any;\r\n  user_id: any;\r\n  screenName: any;\r\n  role: any;\r\n  res: any;\r\n\r\n  resext: ExtsysClass;\r\n  rolepermission: any;\r\n  button_permission: any = {};\r\n  //checkbox\r\n  autoupload: boolean = false;\r\n\r\n  @Input()\r\n  modifyRoleObject = new ExtsysClass();\r\n  @ViewChildren(MatButton) updateBtn: MatButton;\r\n  @ViewChildren('pcode') processCode: ElementRef;\r\n  @ViewChildren('maxUpload') maxUploadLimit: ElementRef;\r\n  is_sftp: any;\r\n  is_wuFile:any;\r\n  autouplaodchecked: boolean;\r\n  enableSubmit: boolean;\r\n\r\n  constructor(private apiService: ExcelApiService, private route: ActivatedRoute,\r\n    private snack: MatSnackBar, private userApi: UsersService,\r\n\r\n    private toast: ToastrService,\r\n    private roleService: RoleService,\r\n    private cdr: ChangeDetectorRef) { }\r\n\r\n  roleCodes = new permissionsLabels();\r\n  ngOnInit() {\r\n\r\n    setTimeout(() => {\r\n      this.newRolePermissions();\r\n    }, 2000);\r\n    this.roleService.screenLabelList.subscribe(message => this.roleCodes = message);\r\n\r\n\r\n    this.user_id = sessionStorage.getItem('user_id');\r\n    this.role = sessionStorage.getItem('user_role');\r\n    //localStorage.setItem(\"currentUser\",\"PRABHAT1\");\r\n    localStorage.setItem(\"userIdForChangePassword\", localStorage.getItem(\"currentUser\"));\r\n    this.route.queryParams.subscribe(params => {\r\n\r\n      // this.modifyUserObject.userRef = params[\"userRef\"];\r\n      this.modifyRoleObject.id = params.id;\r\n\r\n      this.modifyRoleObject.extSysCode = params.extSysCode;\r\n      this.modifyRoleObject.extSysName = params.extSysName;\r\n      this.modifyRoleObject.commChannel = params.commChannel;\r\n      this.modifyRoleObject.createdAt = params.createdAt;\r\n      this.modifyRoleObject.creatorDtStamp = params.creatorDtStamp;\r\n      this.modifyRoleObject.creatorId = params.creatorId;\r\n      this.modifyRoleObject.destination = params.destination;\r\n      this.modifyRoleObject.destinationTag = params.destinationTag;\r\n      this.modifyRoleObject.dtdFile = params.dtdFile;\r\n      this.modifyRoleObject.errDirectoryName = params.errDirectoryName;\r\n      this.modifyRoleObject.errQueueName = params.errQueueName;\r\n      this.modifyRoleObject.errSchemaName = params.errSchemaName;\r\n      this.modifyRoleObject.errXsltName = params.errXsltName;\r\n      this.modifyRoleObject.extSysCode = params.extSysCode;\r\n      this.modifyRoleObject.extSysName = params.extSysName;\r\n      this.modifyRoleObject.extSysTag = params.extSysTag;\r\n      this.modifyRoleObject.formatType = params.formatType;\r\n      this.modifyRoleObject.isDestNode = params.isDestNode;\r\n      this.modifyRoleObject.isExtSysNode = params.isExtSysNode;\r\n      this.modifyRoleObject.isModuleNode = params.isModuleNode;\r\n      this.modifyRoleObject.isProcessNode = params.isProcessNode;\r\n      this.modifyRoleObject.isServiceNode = params.isServiceNode;\r\n      this.modifyRoleObject.latestAmendNo = params.latestAmendNo;\r\n      this.modifyRoleObject.messageType = params.messageType;\r\n      this.modifyRoleObject.moduleCode = params.moduleCode;\r\n      this.modifyRoleObject.moduleTag = params.moduleTag;\r\n      this.modifyRoleObject.msgDuplication = params.msgDuplication;\r\n      this.modifyRoleObject.processCode = params.processCode;\r\n      this.modifyRoleObject.processTag = params.processTag;\r\n      this.modifyRoleObject.recordStatus = params.recordStatus;\r\n      this.modifyRoleObject.reqDirectoryName = params.reqDirectoryName;\r\n      this.modifyRoleObject.reqQueueName = params.reqQueueName;\r\n      this.modifyRoleObject.reqSchemaName = params.reqSchemaName;\r\n      this.modifyRoleObject.reqXsltName = params.reqXsltName;\r\n      this.modifyRoleObject.requestTag = params.requestTag;\r\n      this.modifyRoleObject.respDirectoryName = params.respDirectoryName;\r\n      this.modifyRoleObject.respQueueName = params.respQueueName;\r\n      this.modifyRoleObject.respSchemaName = params.respSchemaName;\r\n      this.modifyRoleObject.responseTag = params.responseTag;\r\n      this.modifyRoleObject.serviceCode = params.serviceCode;\r\n      this.modifyRoleObject.serviceTag = params.serviceTag;\r\n      this.modifyRoleObject.updatedAt = params.updatedAt;\r\n      this.modifyRoleObject.verifiedEver = params.verifiedEver;\r\n      this.modifyRoleObject.verifierDtStamp = params.verifierDtStamp;\r\n      this.modifyRoleObject.verifierId = params.verifierId;\r\n      this.modifyRoleObject.xsdFile = params.xsdFile;\r\n      this.modifyRoleObject.authStatus = params.authStatus;\r\n      this.modifyRoleObject.updatedBy = params.updatedBy;\r\n      this.modifyRoleObject.fristTimeAuth = params.fristTimeAuth;\r\n      this.modifyRoleObject.versionNo = params.versionNo;\r\n      this.modifyRoleObject.maxUploadLimit = params.maxUploadLimit;\r\n      this.modifyRoleObject.fileName = params.fileName;\r\n\r\n      this.modifyRoleObject.bdav = params.bdav;\r\n      this.modifyRoleObject.backDateAllow = params.backDateAllow;\r\n      this.modifyRoleObject.futureDateAllow = params.futureDateAllow;\r\n      this.modifyRoleObject.fdav = params.fdav;\r\n      this.modifyRoleObject.acft = params.acft;\r\n      this.modifyRoleObject.filePath = params.filePath;\r\n      this.modifyRoleObject.autoUpload = params.autoUpload;\r\n      \r\n      this.modifyRoleObject.fCYRateVariance = params.fcyvariance;\r\n      this.modifyRoleObject.fCYPercentage = params.fcypercenatage;\r\n      this.modifyRoleObject.sftpUsername = params.userName;\r\n      this.modifyRoleObject.sftpPassword = params.password;\r\n      this.modifyRoleObject.sftpPort = params.port;\r\n      this.modifyRoleObject.sftpIpaddress = params.ipAddress;\r\n      this.modifyRoleObject.sftpPath = params.path;\r\n      this.modifyRoleObject.sftpRequired = params.sftpRequired;\r\n      this.modifyRoleObject.mandatoryFieldImposed = params.mandatoryFieldImposed;\r\n      this.modifyRoleObject.treasuryrefRequired = params.treasuryrefRequired;\r\n      this.modifyRoleObject.wuFile=params.wuFile;\r\n      // ADDED BY VIDYA FOR ISSUE ID 583\r\n      this.modifyRoleObject.verifiedOnce=params.verifiedOnce\r\n\r\n\r\n      console.log(\"this is in edit screen\", this.modifyRoleObject);\r\n      if(this.modifyRoleObject.fCYRateVariance==\"false\")\r\n      {\r\n        this.modifyRoleObject.fCYRateVariance=false;\r\n      }\r\n      else{\r\n        this.modifyRoleObject.fCYRateVariance=true;\r\n      }\r\n      if(this.modifyRoleObject.autoUpload==\"false\" || this.modifyRoleObject.autoUpload==null)\r\n      {\r\n        this.modifyRoleObject.autoUpload=false;\r\n        this.enablefilebrowser=false;\r\n        console.log(this.enablefilebrowser)\r\n        this.cdr.markForCheck();\r\n      }\r\n      else{\r\n        this.modifyRoleObject.autoUpload=true;\r\n        this.enablefilebrowser=true;\r\n        console.log(this.enablefilebrowser)\r\n       this.cdr.markForCheck();\r\n      }\r\n      if(this.modifyRoleObject.backDateAllow==\"false\" || this.modifyRoleObject.backDateAllow==null)\r\n      {\r\n        this.modifyRoleObject.backDateAllow=false;\r\n      }\r\n      else{\r\n        this.modifyRoleObject.backDateAllow=true;\r\n      }\r\n      if(this.modifyRoleObject.futureDateAllow==\"false\" ||  this.modifyRoleObject.futureDateAllow==null)\r\n      {\r\n        this.modifyRoleObject.futureDateAllow=false;\r\n      }\r\n      else{\r\n        this.modifyRoleObject.futureDateAllow=true;\r\n      }\r\nif(this.modifyRoleObject.fCYPercentage==0)\r\n{\r\n  this.modifyRoleObject.fCYPercentage='';\r\n}\r\nif(this.modifyRoleObject.wuFile==\"false\")\r\n{\r\n  this.modifyRoleObject.wuFile=false;\r\n}\r\nelse{\r\n  this.modifyRoleObject.wuFile=true;\r\n}\r\n      \r\n      if (this.modifyRoleObject.sftpRequired==\"true\") {\r\n        this.modifyRoleObject.sftpRequired=true;\r\n        this.is_sftp=true;\r\n      }\r\n      else {\r\n        this.modifyRoleObject.sftpRequired=false;\r\n        this.is_sftp=false;\r\n\r\n      }\r\n\r\n       \r\n      if (this.modifyRoleObject.mandatoryFieldImposed==\"true\") {\r\n        this.modifyRoleObject.mandatoryFieldImposed=true;\r\n      }\r\n      else {\r\n        this.modifyRoleObject.mandatoryFieldImposed=false;\r\n      }\r\n\r\n       \r\n      if (this.modifyRoleObject.treasuryrefRequired==\"true\") {\r\n        this.modifyRoleObject.treasuryrefRequired=true;\r\n      }\r\n      else {\r\n        this.modifyRoleObject.treasuryrefRequired=false;\r\n      }\r\n      if (this.modifyRoleObject.acft==\"true\") {\r\n        this.modifyRoleObject.acft=true;\r\n      }\r\n      else {\r\n        this.modifyRoleObject.acft=false;\r\n      };\r\n      // }\r\n      // else {\r\n      //   this.enablefilebrowser = false;\r\n      // }\r\n      \r\n    });\r\n    // this.apiService.getExtSysById(this.modifyRoleObject.id).subscribe(res => {\r\n    //   this.resext = res;\r\n    //   console.log(this.res);\r\n    //   this.modifyRoleObject = this.resext;\r\n    // })\r\n    this.userRolesFromLogin = localStorage.getItem('userRolesFromLogin');\r\n    // this.userRoles = this.userRolesFromLogin.split(',');\r\n    // this.loggedInUser = localStorage.getItem('userFromLogin');\r\n    this.loggedInUser = localStorage.getItem(\"userIdForChangePassword\");\r\n    //console.log(this.userRoles);\r\n    this.editFunction = false;\r\n    this.editFunction2 = true;\r\n    this.poovar = true;\r\n\r\n    if (this.modifyRoleObject.authStatus === 'U') {\r\n      this.modifyRoleObject.authStatus = 'UNAUTHORIZED'\r\n    }\r\n    if (this.modifyRoleObject.authStatus === 'A') {\r\n      this.modifyRoleObject.authStatus = 'AUTHORIZED'\r\n    }\r\n\r\n    if (this.modifyRoleObject.recordStatus === 'O') {\r\n      this.modifyRoleObject.recordStatus = 'OPEN'\r\n    }\r\n    if (this.modifyRoleObject.recordStatus === 'C') {\r\n      this.modifyRoleObject.recordStatus = 'CLOSED'\r\n    }\r\n    if (this.modifyRoleObject.verifiedOnce === 'N') {\r\n      this.modifyRoleObject.verifiedOnce = 'NO'\r\n    }\r\n    if (this.modifyRoleObject.verifiedOnce === 'Y') {\r\n      this.modifyRoleObject.verifiedOnce = 'YES'\r\n    }\r\n\r\n  }\r\n\r\n  newRolePermissions() {\r\n    this.roleService.fetchScreenPermissions('Process Code Mapping');\r\n  }\r\n\r\n  changeStatus() {\r\n    //console.log('change status call');\r\n    this.is_edit = false;\r\n    this.poovar = false;\r\n    //console.log('done');\r\n\r\n    this.editFunction = true;\r\n    this.editFunction2 = false;\r\n  }\r\n  modifyExt(modifyExt: ExtsysClass) {\r\n\r\n    //console.log('inside modify user');\r\n    modifyExt.updatedBy = this.loggedInUser;\r\n    modifyExt.creatorId = this.loggedInUser;\r\n    //console.log(modifyExt);\r\n    //console.log(\"Modify Object \", this.modifyRoleObject);\r\n    modifyExt.extSysCode = this.modifyRoleObject.extSysCode;\r\n    modifyExt.extSysName = this.modifyRoleObject.extSysName;\r\n    modifyExt.maxUploadLimit = this.modifyRoleObject.maxUploadLimit;\r\n    modifyExt.fileName = this.modifyRoleObject.fileName;\r\n    modifyExt.id = this.modifyRoleObject.id;\r\n    modifyExt.treasuryrefRequired=this.modifyRoleObject.treasuryrefRequired;\r\n    modifyExt.autoUpload=this.modifyRoleObject.autoUpload;\r\n    modifyExt.verifierId = \"\";\r\n    modifyExt.verifierDtStamp = null;\r\n    console.log(modifyExt);\r\n\r\n    console.log(modifyExt);\r\n    this.apiService.modifyExtSysService(modifyExt)\r\n      .subscribe(data => {\r\n        this.validationResponse = data;\r\n\r\n        if (this.validationResponse) {\r\n\r\n          Swal.fire(\r\n\r\n            'Data updated successfully',\r\n\r\n          );\r\n           //added by vidya for issue id 583\r\n           this.enableSubmit=true;\r\n          // this.processCode.nativeElement.disabled = true;\r\n          // this.maxUploadLimit.nativeElement.disabled = true;\r\n          //console.log(this.modifyRoleObject);\r\n          this.modifyRoleObject = this.validationResponse;\r\n          this.cdr.markForCheck();\r\n          //console.log(\"validationResponse : \", this.validationResponse)\r\n\r\n          this.updateBtn.disabled = true;\r\n          this.cdr.markForCheck();\r\n        } else {\r\n          modifyExt.creatorId = this.loggedInUser;\r\n          //console.log(modifyExt);\r\n          //console.log(\"Modify Object \", this.modifyRoleObject);\r\n          modifyExt.extSysCode = this.modifyRoleObject.extSysCode;\r\n          modifyExt.extSysName = this.modifyRoleObject.extSysName;\r\n          modifyExt.maxUploadLimit = this.modifyRoleObject.maxUploadLimit;\r\n          modifyExt.id = this.modifyRoleObject.id;\r\n\r\n          Swal.fire({\r\n            type: 'error',\r\n\r\n            text: 'Combination Already Exists, Cannot update ',\r\n          });\r\n\r\n        }\r\n      },\r\n        (err: any) => {\r\n\r\n          // this.snack.open('Server Error!', 'OK', { duration: 4000 })\r\n          // this.toast.error(`Server Error!`, '', {\r\n          //   timeOut: 3000,\r\n          //   progressBar: true,\r\n          //   tapToDismiss: true,\r\n          //   closeButton: true,\r\n          //   easeTime: 300,\r\n          //   extendedTimeOut: 1000\r\n          // });\r\n          Swal.fire({\r\n            type: 'error',\r\n\r\n            text: 'Server error ',\r\n          });\r\n        });\r\n  }\r\n  // verify/authorize a user\r\n  verifyExtSys(extSysName) {\r\n    const userIdLoggedIn = localStorage.getItem('currentUser');\r\n    if (this.modifyRoleObject.creatorId === userIdLoggedIn) {\r\n      alert('Maker cannot authorize the record');\r\n    } else {\r\n      if (confirm('are you sure you want to verify the external system ')) {\r\n\r\n        this.apiService.verifyExtSys(extSysName, userIdLoggedIn).subscribe(data => {\r\n          this.updatedExtObject = data;\r\n          this.modifyRoleObject = this.updatedExtObject;\r\n          //console.log('ext sys is authorized');\r\n        });\r\n      }\r\n    }\r\n  }\r\n  // delete a user\r\n  deleteExtSys(extSysName) {\r\n    const userIdLoggedIn = localStorage.getItem('currentUser');\r\n    confirm('are you sure you want to delete ');\r\n    this.apiService.deleteExtSys(extSysName, userIdLoggedIn).subscribe(data => {\r\n      //console.log('ext is deleted');\r\n    });\r\n  }\r\n  // close a user\r\n  closelockRecordExtSys(extSysName) {\r\n    const userIdLoggedIn = localStorage.getItem('currentUser');\r\n    // if ( this.modifyRoleObject.creatorId === userIdLoggedIn) {\r\n    //   alert('Maker cannot close the record!');\r\n    // } else {\r\n    if (confirm('are you sure you want to close the external system ')) {\r\n      this.apiService.closelockRecordExtSys(extSysName, userIdLoggedIn).subscribe(data => {\r\n        this.updatedExtObject = data;\r\n        this.modifyRoleObject = this.updatedExtObject;\r\n        //console.log('ext is closed');\r\n      });\r\n    }\r\n  }\r\n  // reopen a user\r\n  reopenRecordExtSys(extSysName) {\r\n    const userIdLoggedIn = localStorage.getItem('currentUser');\r\n    if (confirm('are you sure you want to reopen the external system ')) {\r\n      this.apiService.reopenRecordExtSys(extSysName, userIdLoggedIn).subscribe(data => {\r\n        this.updatedExtObject = data;\r\n        this.modifyRoleObject = this.updatedExtObject;\r\n        //console.log('ext is reopened');\r\n      });\r\n    }\r\n  }\r\n\r\n  onClickOfClose() {\r\n    //console.log(this.modifyRoleObject.extSysCode);\r\n    //console.log(\"on click of close\");\r\n    if (this.modifyRoleObject.authStatus === 'UNAUTHORIZED') {\r\n      this.modifyRoleObject.authStatus = 'U'\r\n    }\r\n    if (this.modifyRoleObject.authStatus === 'AUTHORIZED') {\r\n      this.modifyRoleObject.authStatus = 'A'\r\n    }\r\n    /*\r\n    */\r\n    // if(this.userObjWithAudit.verifiedOnce === 'N')\r\n    // {\r\n    //   this.userObjWithAudit.verifiedOnce = 'NO'\r\n    // }\r\n    // if(this.userObjWithAudit.verifiedOnce === 'Y')\r\n    // {\r\n    //   this.userObjWithAudit.verifiedOnce = 'YES'\r\n    // }\r\n    //ADDED BY VIDYA FOR ISSUE ID 583\r\n     if(this.modifyRoleObject.verifiedOnce === 'N')\r\n    {\r\n      this.modifyRoleObject.verifiedOnce = 'NO'\r\n    }\r\n    if(this.modifyRoleObject.verifiedOnce === 'Y')\r\n    {\r\n      this.modifyRoleObject.verifiedOnce = 'YES'\r\n    }\r\n    /**\r\n     * setting record status\r\n     */\r\n    if (this.modifyRoleObject.recordStatus === 'OPEN') {\r\n      this.modifyRoleObject.recordStatus = 'O'\r\n    }\r\n    if (this.modifyRoleObject.recordStatus === 'CLOSED') {\r\n      this.modifyRoleObject.recordStatus = 'C'\r\n    }\r\n    //console.log(this.loggedInUser);\r\n    this.modifyRoleObject.creatorId = this.loggedInUser;\r\n    //console.log(  this.modifyRoleObject.creatorId);\r\n\r\n    this.apiService.closingTheRecordOfProcessCodeMapping(this.modifyRoleObject).subscribe((data: any) => {\r\n      //console.log(data)\r\n      this.modifyRoleObject = data\r\n      if (this.modifyRoleObject.authStatus === 'U') {\r\n        this.modifyRoleObject.authStatus = 'UNAUTHORIZED'\r\n      }\r\n      if (this.modifyRoleObject.authStatus === 'A') {\r\n        this.modifyRoleObject.authStatus = 'AUTHORIZED'\r\n      }\r\n      /*\r\n      */\r\n      // if(this.userObjWithAudit.verifiedOnce === 'N')\r\n      // {\r\n      //   this.userObjWithAudit.verifiedOnce = 'NO'\r\n      // }\r\n      // if(this.userObjWithAudit.verifiedOnce === 'Y')\r\n      // {\r\n      //   this.userObjWithAudit.verifiedOnce = 'YES'\r\n      // }\r\n      if(this.modifyRoleObject.verifiedOnce === 'N')\r\n      {\r\n        this.modifyRoleObject.verifiedOnce = 'NO'\r\n      }\r\n      if(this.modifyRoleObject.verifiedOnce === 'Y')\r\n      {\r\n        this.modifyRoleObject.verifiedOnce = 'YES'\r\n      }\r\n      /**\r\n       * setting record status\r\n       */\r\n      if (this.modifyRoleObject.recordStatus === 'O') {\r\n        this.modifyRoleObject.recordStatus = 'OPEN'\r\n      }\r\n      if (this.modifyRoleObject.recordStatus === 'C') {\r\n        this.modifyRoleObject.recordStatus = 'CLOSED'\r\n      }\r\n      if (data) {\r\n\r\n        Swal.fire(\r\n\r\n          'You Closed the Record',\r\n\r\n        );\r\n      } else {\r\n\r\n        Swal.fire({\r\n          type: 'error',\r\n\r\n          text: 'Failed To Close ',\r\n        });\r\n      }\r\n      this.cdr.markForCheck()\r\n    }\r\n    );\r\n  }\r\n\r\n  onClickOfReOpen(modifyExt: ExtsysClass) {\r\n    //console.log(\"on click of reopen\");\r\n    modifyExt.extSysCode = this.modifyRoleObject.extSysCode;\r\n    modifyExt.extSysName = this.modifyRoleObject.extSysName;\r\n    modifyExt.processCode = this.modifyRoleObject.processCode;\r\n    modifyExt.id = this.modifyRoleObject.id;\r\n    //console.log( modifyExt.id);\r\n    //console.log(this.loggedInUser);\r\n    modifyExt.creatorId = this.loggedInUser;\r\n    //console.log(  this.modifyRoleObject.creatorId);\r\n    //console.log(modifyExt);\r\n    this.apiService.reopeningTheRecordOfProcessCodeMapping(modifyExt)\r\n      .subscribe((data: any) => {\r\n        //console.log(data)\r\n        this.modifyRoleObject = data;\r\n        if (this.modifyRoleObject.authStatus === 'U') {\r\n          this.modifyRoleObject.authStatus = 'UNAUTHORIZED'\r\n        }\r\n        if (this.modifyRoleObject.authStatus === 'A') {\r\n          this.modifyRoleObject.authStatus = 'AUTHORIZED'\r\n        }\r\n        /*\r\n        */\r\n        // if(this.userObjWithAudit.verifiedOnce === 'N')\r\n        // {\r\n        //   this.userObjWithAudit.verifiedOnce = 'NO'\r\n        // }\r\n        // if(this.userObjWithAudit.verifiedOnce === 'Y')\r\n        // {\r\n        //   this.userObjWithAudit.verifiedOnce = 'YES'\r\n        // }\r\n        //added by vidya for issue id 583\r\n         if(this.modifyRoleObject.verifiedOnce === 'N')\r\n        {\r\n          this.modifyRoleObject.verifiedOnce = 'NO'\r\n        }\r\n        if(this.modifyRoleObject.verifiedOnce === 'Y')\r\n        {\r\n          this.modifyRoleObject.verifiedOnce = 'YES'\r\n        }\r\n        /**\r\n         * \r\n         * setting record status\r\n         */\r\n        if (this.modifyRoleObject.recordStatus === 'O') {\r\n          this.modifyRoleObject.recordStatus = 'OPEN'\r\n        }\r\n        if (this.modifyRoleObject.recordStatus === 'C') {\r\n          this.modifyRoleObject.recordStatus = 'CLOSED'\r\n        }\r\n        if (data) {\r\n\r\n          Swal.fire(\r\n\r\n            'You Re-Opened the Record',\r\n\r\n          );\r\n        } else {\r\n\r\n          Swal.fire({\r\n            type: 'error',\r\n\r\n            text: 'Failed To Re-Open ',\r\n          });\r\n        }\r\n        //console.log(this.modifyRoleObject);\r\n        this.cdr.markForCheck()\r\n      }\r\n      );\r\n  }\r\n\r\n  onClickOfAuth(modifyExt: ExtsysClass) {\r\n\r\n    //console.log(\"on clcik of auth\");\r\n    //console.log(modifyExt);\r\n    //console.log(this.modifyRoleObject);\r\n\r\n\r\n    modifyExt.extSysCode = this.modifyRoleObject.extSysCode;\r\n    modifyExt.extSysName = this.modifyRoleObject.extSysName;\r\n    modifyExt.authStatus = this.modifyRoleObject.authStatus;\r\n    modifyExt.processCode = this.modifyRoleObject.processCode;\r\n    modifyExt.recordStatus = this.modifyRoleObject.recordStatus;\r\n    modifyExt.id = this.modifyRoleObject.id;\r\n    modifyExt.verifierId = this.loggedInUser;\r\n    // modifyExt.verifierId = this.loggedInUser;\r\n    //modifyExt.verifierDtStamp=this.modifyRoleObject.verifierDtStamp;\r\n    //console.log(\"Object \", modifyExt);\r\n    const userIdLoggedIn = localStorage.getItem('currentUser');\r\n    //modifyExt.verifierId = this.loggedInUser;\r\n    // this.modifyRoleObject.verifierId=modifyExt.verifierId;\r\n    // if (!this.modifyRoleObject.verifierId == this.currentUser)\r\n    //console.log(\"creatorid:\" + this.modifyRoleObject.creatorId);\r\n    //console.log(\"userid\" + this.loggedInUser)\r\n\r\n    if (this.modifyRoleObject.creatorId !== this.loggedInUser) {\r\n      this.apiService.authorizingTheRecord(modifyExt, this.loggedInUser)\r\n        .subscribe((data: any) => {\r\n          //console.log(\"data\" + data);\r\n          //console.log(\"\" + modifyExt)\r\n          this.modifyRoleObject = data;\r\n          if (this.modifyRoleObject.authStatus === 'U') {\r\n            this.modifyRoleObject.authStatus = 'UNAUTHORIZED'\r\n          }\r\n          if (this.modifyRoleObject.authStatus === 'A') {\r\n            this.modifyRoleObject.authStatus = 'AUTHORIZED'\r\n          }\r\n          //added by vidya for issue id 583\r\n          if (this.modifyRoleObject.verifiedOnce === 'Y') {\r\n            this.modifyRoleObject.verifiedOnce = 'YES'\r\n          }\r\n          if (this.modifyRoleObject.verifiedOnce === 'N') {\r\n            this.modifyRoleObject.verifiedOnce = 'NO'\r\n          }\r\n\r\n          if (this.modifyRoleObject.recordStatus === 'O') {\r\n            this.modifyRoleObject.recordStatus = 'OPEN'\r\n          }\r\n          if (this.modifyRoleObject.recordStatus === 'C') {\r\n            this.modifyRoleObject.recordStatus = 'CLOSED'\r\n          }\r\n          if (data) {\r\n\r\n            Swal.fire(\r\n\r\n              'You Authorized the Record',\r\n\r\n            );\r\n          } else {\r\n\r\n            Swal.fire({\r\n              type: 'error',\r\n\r\n              text: 'Failed To Authorize',\r\n            });\r\n\r\n\r\n          }\r\n          //console.log(this.modifyRoleObject)\r\n\r\n          this.cdr.markForCheck();\r\n        });\r\n    }\r\n    else {\r\n      // this.toast.info(`Maker can not Authorized the Record !`, '', {\r\n      //   timeOut: 3000,\r\n      //   progressBar: true,\r\n      //   tapToDismiss: true,\r\n      //   closeButton: true,\r\n      //   easeTime: 300,\r\n      //   extendedTimeOut: 1000\r\n      // });\r\n      Swal.fire({\r\n        type: 'error',\r\n\r\n        text: 'Maker can not Authorized the Record ',\r\n      });\r\n\r\n    }\r\n  }\r\n  getValueOfFCYrateVariance(event) {\r\n    console.log(event.checked);\r\n    this.modifyRoleObject.fCYRateVariance = event.checked;\r\n    if(!this.modifyRoleObject.fCYRateVariance )\r\n    {\r\n      this.modifyRoleObject.fCYPercentage='';\r\n    }\r\n  }\r\n  getValue(event) {\r\n    console.log(event.checked);\r\n    this.modifyRoleObject.futureDateAllow = event.checked;\r\n    if(! this.modifyRoleObject.futureDateAllow)\r\n    {\r\n      this.modifyRoleObject.fdav='';\r\n    }\r\n  }\r\n  getValue2(event) {\r\n    console.log(event.checked);\r\n    this.modifyRoleObject.acft = event.checked;\r\n    //  this.acft=true;\r\n\r\n  }\r\n  getwuFileValue(event)\r\n  {\r\n    this.modifyRoleObject.wuFile=event.checked;\r\n    this.cdr.markForCheck();\r\n    console.log(this.modifyRoleObject.wuFile);\r\n\r\n  \r\n  }\r\n  checkCheckBoxvalueBDA(event) {\r\n    console.log(event.checked);\r\n    this.backDateAllow = true;\r\n    this.modifyRoleObject.backDateAllow = event.checked;\r\n   if( !this.modifyRoleObject.backDateAllow)\r\n   {\r\n        this.modifyRoleObject.bdav='';\r\n   }\r\n    //  this.is_edit=true;\r\n  }\r\n  checkCheckBoxvalueUpload(event) {\r\n    console.log(event.checked);\r\n    this.modifyRoleObject.autoUpload = event.checked;\r\n\r\n    this.enablefilebrowser = event.checked;\r\n    if(!this.modifyRoleObject.autoUpload)\r\n    {\r\n      this.modifyRoleObject.fileName='';\r\n      this.modifyRoleObject.filePath='';\r\n    }\r\n    // this.autouplaodchecked=true;\r\n  \r\n\r\n  }\r\n  getValueSftp(event) {\r\n    this.modifyRoleObject.sftpRequired = event.checked;\r\n    this.cdr.markForCheck()\r\n    this.is_sftp = this.modifyRoleObject.sftpRequired;\r\n    if(!this.modifyRoleObject.sftpRequired)\r\n    {\r\n      this.modifyRoleObject.sftpUsername='';\r\n      this.modifyRoleObject.sftpPassword='';\r\n      this.modifyRoleObject.sftpIpaddress='';\r\n      this.modifyRoleObject.sftpPort='';\r\n      this.modifyRoleObject.sftpPath='';\r\n    }\r\n  }\r\n  getValueMfI(event) {\r\n\r\n    this.modifyRoleObject.mandatoryFieldImposed = event.checked;\r\n    this.cdr.markForCheck();\r\n    console.log(this.modifyRoleObject.mandatoryFieldImposed);\r\n  }\r\n  //issue Id 532-->check box for treasury ref  added by vidya\r\n  treasuryRequired(event) {\r\n    this.modifyRoleObject.treasuryrefRequired = event.checked;\r\n    console.log(this.modifyRoleObject.treasuryrefRequired);\r\n  }\r\n\r\n  // added by vidya for 583 issue\r\n  onDeleteOfProcessCodeMapping()\r\n  {\r\n    this.apiService.onDeleteOfProcessCodeMapping(this.modifyRoleObject).subscribe(deleteReps=>\r\n      {\r\n        console.log(deleteReps);\r\n        if(deleteReps)\r\n        {\r\n          Swal.fire(\r\n            {\r\n              title:'Record Deleted SuccessFully'\r\n            }\r\n          )\r\n        }\r\n        else{\r\n          Swal.fire(\r\n            {\r\n              title:'Failed To  Delete The Record'\r\n            }\r\n          )\r\n        }\r\n      })\r\n  }\r\n  \r\n  fun(extSysName)\r\n  {\r\n    console.log(extSysName);\r\n    console.log(\"enters inside fn\")\r\n   const result=extSysName.trim();\r\n   console.log(result);\r\nif(result)\r\n{\r\n console.log(\"valid string\");\r\n \r\n this.space=true;\r\n \r\n console.log(this.space);\r\n}\r\nelse{\r\n console.log(\"invalid string\");\r\n this.space=false;\r\n \r\n   // this.submitted = false;\r\n   console.log(this.space);\r\n\r\n}\r\n}\r\n}\r\n"],"sourceRoot":"webpack:///"}