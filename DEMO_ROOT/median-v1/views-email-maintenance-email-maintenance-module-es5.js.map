{"version":3,"sources":["src/app/views/email-maintenance/email-maintenance.component.html","src/app/views/email-maintenance/email-new/email-new.component.html","src/app/views/email-maintenance/email-summary/email-summary.component.html","src/app/views/email-maintenance/EmailAuditLog.ts","src/app/views/email-maintenance/EmailDetails.ts","src/app/views/email-maintenance/email-maintenance-routing.module.ts","src/app/views/email-maintenance/email-maintenance.component.css","src/app/views/email-maintenance/email-maintenance.component.ts","src/app/views/email-maintenance/email-maintenance.module.ts","src/app/views/email-maintenance/email-new/email-new.component.css","src/app/views/email-maintenance/email-new/email-new.component.ts","src/app/views/email-maintenance/email-summary/email-summary.component.css","src/app/views/email-maintenance/email-summary/email-summary.component.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<div>\\r\\n  <mat-toolbar color=\\\"primary\\\" style=\\\"height:30px; font-size: small;\\\">\\r\\n    <span>Email Maintenance</span>\\r\\n  </mat-toolbar>\\r\\n</div>\\r\\n<br>\\r\\n<div>\\r\\n  <mat-card style=\\\"width: 40% ;\\r\\n    margin-top: 2%; \\r\\n    display: block;\\r\\n    margin-left:auto;\\r\\n    margin-right:auto;  \\r\\n    \\\">\\r\\n    <mat-card-title></mat-card-title>\\r\\n\\r\\n\\r\\n    <mat-card-content style=\\\"align-content: center;\\\">\\r\\n      <mat-card-title style=\\\"text-align: center;\\r\\n            font-size: 15px; font-weight: bold;\\\">Email IDs for Email-Notification</mat-card-title>\\r\\n      <br><br>\\r\\n      <form>\\r\\n        <div style=\\\"text-align: center;\\\">\\r\\n\\r\\n          <mat-form-field appearance=\\\"outline\\\" class=\\\"full-width\\\">\\r\\n            <mat-label>Select an option</mat-label>\\r\\n            <mat-select [(value)]=\\\"selected\\\" >\\r\\n              <!-- <mat-option>None</mat-option> -->\\r\\n              <mat-option value=\\\"{{selected}}\\\" readonly>{{selected}}</mat-option>\\r\\n              \\r\\n            </mat-select>\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n      </form>\\r\\n      <br>\\r\\n\\r\\n      <form #heroForm=\\\"ngForm\\\" >\\r\\n        <table>\\r\\n          <tbody>\\r\\n\\r\\n            <tr>\\r\\n              <section *ngFor=\\\"let address of email; let i = index;\\\">\\r\\n\\r\\n                <td>\\r\\n                  <label>Email Id</label>\\r\\n                  <input type=\\\"email\\\" size=\\\"62\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"address.emailId\\\" name=\\\"address_{{i}} \\\"\\r\\n                    #emailId=\\\"ngModel\\\" pattern=\\\"[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$\\\" required [email]=\\\"true\\\"   [readonly]=\\\"!editFlag\\\" />\\r\\n                  <div *ngIf=\\\"emailId.touched\\\">\\r\\n                    <p *ngIf=\\\"emailId.errors?.required\\\" style=\\\"color: red;\\\"> Email is a required field!</p>\\r\\n                    <p *ngIf=\\\"emailId.errors?.pattern\\\" style=\\\"color: red;\\\">This is not a valid Email!!</p>\\r\\n\\r\\n                  </div>\\r\\n                </td>\\r\\n\\r\\n                <td>\\r\\n                  <button type=\\\"button\\\" class=\\\"btn b\\\" (click)=\\\"removeAddress(i,address.emailId)\\\">\\r\\n                    <mat-icon>delete</mat-icon>\\r\\n                  </button>\\r\\n\\r\\n                </td>\\r\\n\\r\\n              </section>\\r\\n            </tr>\\r\\n            <button type=\\\"button\\\" class=\\\"btn\\\" (click)=\\\"addAddress()\\\">\\r\\n              <mat-icon>add_box</mat-icon>\\r\\n            </button>\\r\\n            <!-- <div class=\\\"text-right\\\">\\r\\n                    <input type=\\\"submit\\\" class=\\\"btn btn-success\\\" value=\\\"Submit\\\"   [disabled]=\\\"!heroForm.form.valid\\\" />\\r\\n                </div> -->\\r\\n            <br> <br>\\r\\n            \\r\\n            <div style=\\\"margin-left: 15%;\\\">\\r\\n            \\r\\n          </div>\\r\\n        \\r\\n\\r\\n          </tbody>\\r\\n\\r\\n        </table>\\r\\n\\r\\n      </form>\\r\\n\\r\\n      <!-- <div fxLayout=\\\"row\\\" style=\\\"margin-left: -43%;\\\"  fxLayoutGap=\\\"10px\\\">\\r\\n            <button mat-raised-button  color=\\\"primary\\\" (click)=\\\"onFetch(accountForm.value)\\\">Fetch Data</button>\\r\\n            &nbsp;&nbsp;\\r\\n            <button  mat-raised-button  color=\\\"warn\\\" routerLink=\\\"/dashboard\\\">Exit</button>\\r\\n            \\r\\n          </div> -->\\r\\n      <br><br>\\r\\n\\r\\n\\r\\n    </mat-card-content>\\r\\n  </mat-card>\\r\\n  <br>\\r\\n  <!-- <div style=\\\"margin-left: 35%;\\\">\\r\\n    <button mat-raised-button style=\\\" color:white; background-color: rgb(70, 150, 182)\\\"\\r\\n      (click)=\\\"onClickOfAuthOfEmailManagement()\\\">Auth</button>\\r\\n    &nbsp;\\r\\n    <button mat-raised-button style=\\\" color:white; background-color:  rgb(70, 150, 182)\\\"(click)=\\\"onclickOfReopenOfEamilManagement()\\\" *ngIf=\\\"eamilAuditLog.recordStatus=='C'\\\">Reopen</button>\\r\\n    &nbsp;\\r\\n    <button mat-raised-button style=\\\" color:white; background-color:  rgb(70, 150, 182)\\\" (click)=\\\"onclickOfEditOfEmailManagement()\\\" *ngIf=\\\"!editFlag\\\">Edit</button>\\r\\n    &nbsp;\\r\\n    <button mat-raised-button style=\\\" color:white; background-color:  rgb(70, 150, 182)\\\" (click)=\\\"onclickOfCloseOfEmailManagement()\\\" *ngIf=\\\"eamilAuditLog.recordStatus=='O'\\\">Close</button>\\r\\n    &nbsp;\\r\\n    <button mat-raised-button style=\\\" color:white; background-color:  rgb(70, 150, 182)\\\" (click)=\\\"onClickOfDeleteOfEmailManagement()\\\" *ngIf=\\\"eamilAuditLog.verifiedOnce=='U'\\\">Delete</button>\\r\\n    <button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\" (click)=\\\"logValue()\\\" value=\\\"Submit\\\" *ngIf=\\\"editFlag\\\">Submit</button>\\r\\n    &nbsp;\\r\\n    <button mat-raised-button color=\\\"warn\\\" routerLink=\\\"/email-summary\\\">Exit</button>\\r\\n  </div> -->\\r\\n  <!-- <div style=\\\"margin-left: 35%;\\\">\\r\\n    <button mat-raised-button style=\\\" color:white; background-color:  rgb(70, 150, 182)\\\" [routerLink]=\\\"'/email-summary/email-new'\\\">New</button>\\r\\n    &nbsp;\\r\\n    <button mat-raised-button style=\\\" color:white; background-color:  rgb(70, 150, 182)\\\" (click)=\\\"onclickOfEditOfEmailManagement()\\\" *ngIf=\\\"!editFlag && eamilAuditLog.recordStatus=='O' \\\">Edit</button>\\r\\n    &nbsp;\\r\\n    <button mat-raised-button style=\\\" color:white; background-color: rgb(70, 150, 182)\\\" *ngIf=\\\"eamilAuditLog.verifiedStatus=='U'\\\"\\r\\n      (click)=\\\"onClickOfAuthOfEmailManagement()\\\">Auth</button>\\r\\n    &nbsp;\\r\\n    <button mat-raised-button style=\\\" color:white; background-color:  rgb(70, 150, 182)\\\"(click)=\\\"onclickOfReopenOfEamilManagement()\\\" *ngIf=\\\"eamilAuditLog.recordStatus=='C' && eamilAuditLog.verifiedStatus=='A'\\\">Reopen</button>\\r\\n    &nbsp;\\r\\n   \\r\\n    <button mat-raised-button style=\\\" color:white; background-color:  rgb(70, 150, 182)\\\" (click)=\\\"onclickOfCloseOfEmailManagement()\\\" *ngIf=\\\"eamilAuditLog.recordStatus=='O' && eamilAuditLog.verifiedOnce=='Y'\\\">Close</button>\\r\\n    &nbsp;\\r\\n    <button mat-raised-button style=\\\" color:white; background-color:  rgb(70, 150, 182)\\\" (click)=\\\"onClickOfDeleteOfEmailManagement()\\\" *ngIf=\\\"eamilAuditLog.verifiedOnce=='N'\\\">Delete</button>\\r\\n    <button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\" (click)=\\\"logValue()\\\" value=\\\"Submit\\\" *ngIf=\\\"editFlag\\\">Submit</button>\\r\\n    &nbsp;\\r\\n    <button mat-raised-button color=\\\"warn\\\" routerLink=\\\"/email-summary\\\">Exit</button>\\r\\n  </div> -->\\r\\n  <div style=\\\"margin-left: 32%;\\\">\\r\\n    <button mat-raised-button color=\\\"primary\\\" (click)=\\\"onNew()\\\" *ngIf=\\\"!editFlag &&!onlySubmit\\\">New</button>&nbsp;\\r\\n    <button mat-raised-button color=\\\"primary\\\" (click)=\\\"onclickOfEditOfEmailManagement()\\\" *ngIf=\\\" eamilAuditLog.recordStatus=='O'  && !editFlag  &&!onlySubmit\\\" >Edit</button>&nbsp;\\r\\n\\r\\n    <button mat-raised-button color=\\\"primary\\\" *ngIf=\\\"eamilAuditLog.verifiedStatus=='U' && !editFlag  &&!onlySubmit\\\"\\r\\n      (click)=\\\"onClickOfAuthOfEmailManagement()\\\">Auth</button>\\r\\n    &nbsp;\\r\\n    <button mat-raised-button color=\\\"primary\\\" (click)=\\\"onclickOfReopenOfEamilManagement()\\\" *ngIf=\\\"eamilAuditLog.recordStatus=='C' && eamilAuditLog.verifiedStatus=='A' && !editFlag  &&!onlySubmit\\\">Reopen</button>\\r\\n    &nbsp;\\r\\n   \\r\\n    <button mat-raised-button color=\\\"primary\\\"  (click)=\\\"onclickOfCloseOfEmailManagement()\\\" *ngIf=\\\"eamilAuditLog.recordStatus=='O' && eamilAuditLog.verifiedOnce=='Y'&& !editFlag  &&!onlySubmit\\\">Close</button>\\r\\n    &nbsp;\\r\\n    <button mat-raised-button color=\\\"primary\\\"   (click)=\\\"onClickOfDeleteOfEmailManagement()\\\" *ngIf=\\\"eamilAuditLog.verifiedOnce=='N'&& !editFlag  &&!onlySubmit\\\">Delete</button>\\r\\n    <button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\" (click)=\\\"logValue()\\\" value=\\\"Submit\\\" *ngIf=\\\"editFlag\\\" [disabled]=\\\"onlySubmit\\\">Submit</button>\\r\\n    &nbsp;\\r\\n    <button mat-raised-button color=\\\"warn\\\" routerLink=\\\"/email-summary\\\">Exit</button>\\r\\n  </div>\\r\\n  <br>\\r\\n  <div fxLayout=\\\"row\\\" >\\r\\n    <div fxFlex></div>\\r\\n    <div fxFlex=\\\"100\\\">\\r\\n      <mat-card style=\\\"width: 70%; margin-left: 20%\\\">\\r\\n        <mat-card-title>\\r\\n  \\r\\n        </mat-card-title>\\r\\n        <mat-card-content  >\\r\\n          <div fxLayout=\\\"row\\\">\\r\\n\\r\\n            <table id=\\\"customers\\\">\\r\\n              <tr>\\r\\n                <th>Record Status:</th>\\r\\n                <td>\\r\\n                  <mat-chip *ngIf=\\\"masterDatapermission\\\">{{eamilAuditLog.recordStatus }}</mat-chip>\\r\\n                </td>\\r\\n                <th>Auth Status:</th>\\r\\n                <td>\\r\\n\\r\\n                  <mat-chip *ngIf=\\\"masterDatapermission\\\">{{eamilAuditLog.verifiedStatus}}</mat-chip>\\r\\n                  <!-- <mat-form-field appearance=\\\"fill\\\">\\r\\n                            <mat-label>Status</mat-label>\\r\\n                            <input matInput type=\\\"text\\\" placeholder=\\\"\\\" #exSys>\\r\\n                            <mat-icon matSuffix>person</mat-icon>\\r\\n                          </mat-form-field> -->\\r\\n                </td>\\r\\n                <th>Input By:</th>\\r\\n                <td>\\r\\n\\r\\n                  <mat-chip *ngIf=\\\"masterDatapermission\\\">{{eamilAuditLog.inputBy}}</mat-chip>\\r\\n                </td>\\r\\n                <th>Input Date:</th>\\r\\n                <td>\\r\\n\\r\\n                  <mat-chip *ngIf=\\\"masterDatapermission\\\">{{eamilAuditLog.inputTime |  date: 'MM/dd/yyyy, h:mm a'}}</mat-chip>\\r\\n                </td>\\r\\n\\r\\n              </tr>\\r\\n              <tr>\\r\\n                <th>Modification No:</th>\\r\\n                <td>\\r\\n                  <mat-chip *ngIf=\\\"masterDatapermission\\\">{{eamilAuditLog.modNO}}</mat-chip>\\r\\n                </td>\\r\\n                <!-- <th>Creation Date:</th>\\r\\n                        <td>\\r\\n                          <mat-chip>{{masterresponse.modifiedTime | date:'d/M/yy'}}</mat-chip>\\r\\n                        </td> -->\\r\\n                <th>Authorized Date:</th>\\r\\n                <td>\\r\\n                  <mat-chip *ngIf=\\\"masterDatapermission\\\">{{eamilAuditLog.authorizedTime |  date: 'MM/dd/yyyy, h:mm a'}}</mat-chip>\\r\\n                </td>\\r\\n                <th> Frist Auth Status:</th>\\r\\n                <td>\\r\\n\\r\\n                  <mat-chip *ngIf=\\\"masterDatapermission\\\">{{eamilAuditLog.verifiedOnce}}</mat-chip>\\r\\n                  <!-- <mat-form-field appearance=\\\"fill\\\">\\r\\n                            <mat-label>Status</mat-label>\\r\\n                            <input matInput type=\\\"text\\\" placeholder=\\\"\\\" #exSys>\\r\\n                            <mat-icon matSuffix>person</mat-icon>\\r\\n                          </mat-form-field> -->\\r\\n                </td>\\r\\n                <th>Authorized By:</th>\\r\\n                <td>\\r\\n                  <mat-chip *ngIf=\\\"masterDatapermission\\\">{{eamilAuditLog.verifiedBy}}</mat-chip>\\r\\n                </td>\\r\\n              </tr>\\r\\n            </table>\\r\\n          </div>\\r\\n        </mat-card-content>\\r\\n      </mat-card>\\r\\n    </div>\\r\\n    <div fxFlex></div>\\r\\n\\r\\n  </div>\\r\\n\\r\\n  <br><br><br><br><br><br><br><br><br><br><br><br><br><br>\"","export default \"<div>\\r\\n    <mat-toolbar color=\\\"primary\\\" style=\\\"height:30px; font-size: small;\\\">\\r\\n      <span>Email Maintenance</span>\\r\\n    </mat-toolbar>\\r\\n  </div>\\r\\n  <br>\\r\\n  <div>\\r\\n    <mat-card style=\\\"width: 40% ;\\r\\n      margin-top: 2%; \\r\\n      display: block;\\r\\n      margin-left:auto;\\r\\n      margin-right:auto;  \\r\\n      \\\">\\r\\n      <mat-card-title></mat-card-title>\\r\\n  \\r\\n  \\r\\n      <mat-card-content style=\\\"align-content: center;\\\">\\r\\n        <mat-card-title style=\\\"text-align: center;\\r\\n              font-size: 15px; font-weight: bold;\\\">Email IDs for Email-Notification</mat-card-title>\\r\\n        <br><br>\\r\\n        <form>\\r\\n          <div style=\\\"text-align: center;\\\">\\r\\n  \\r\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"full-width\\\">\\r\\n              <mat-label>Select an option</mat-label>\\r\\n              <mat-select [(value)]=\\\"selected\\\">\\r\\n                <mat-option value=\\\"Account_Block\\\">Account Type</mat-option>\\r\\n                <mat-option>None</mat-option>\\r\\n                <!-- <mat-option value=\\\"option2\\\">Option 2</mat-option>\\r\\n            <mat-option value=\\\"option3\\\">Option 3</mat-option> -->\\r\\n              </mat-select>\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n        </form>\\r\\n        <br>\\r\\n  \\r\\n        <form #heroForm=\\\"ngForm\\\" (ngSubmit)=\\\"logValue()\\\">\\r\\n          <table>\\r\\n            <tbody>\\r\\n  \\r\\n              <tr>\\r\\n                <section *ngFor=\\\"let address of email; let i = index;\\\">\\r\\n  \\r\\n                  <td>\\r\\n                    <label>Email Id</label>\\r\\n                    <input type=\\\"email\\\" size=\\\"62\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"address.emailId\\\" name=\\\"address_{{i}} \\\"\\r\\n                      #emailId=\\\"ngModel\\\" pattern=\\\"[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$\\\" required [email]=\\\"true\\\" />\\r\\n                    <div *ngIf=\\\"emailId.touched\\\">\\r\\n                      <p *ngIf=\\\"emailId.errors?.required\\\" style=\\\"color: red;\\\"> Email is a required field!</p>\\r\\n                      <p *ngIf=\\\"emailId.errors?.pattern\\\" style=\\\"color: red;\\\">This is not a valid Email!!</p>\\r\\n  \\r\\n                    </div>\\r\\n                  </td>\\r\\n  \\r\\n                  <td>\\r\\n                    <button type=\\\"button\\\" class=\\\"btn b\\\" (click)=\\\"removeAddress(i)\\\">\\r\\n                      <mat-icon>delete</mat-icon>\\r\\n                    </button>\\r\\n  \\r\\n                  </td>\\r\\n  \\r\\n                </section>\\r\\n              </tr>\\r\\n              <button type=\\\"button\\\" class=\\\"btn\\\" (click)=\\\"addAddress()\\\">\\r\\n                <mat-icon>add_box</mat-icon>\\r\\n              </button>\\r\\n              <!-- <div class=\\\"text-right\\\">\\r\\n                      <input type=\\\"submit\\\" class=\\\"btn btn-success\\\" value=\\\"Submit\\\"   [disabled]=\\\"!heroForm.form.valid\\\" />\\r\\n                  </div> -->\\r\\n              <br> <br>\\r\\n              <div style=\\\"margin-left: 15%;\\\">\\r\\n                <!-- <button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\" value=\\\"Submit\\\">Submit</button> -->\\r\\n                <button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\" value=\\\"Submit\\\" [disabled]=\\\"!heroForm.form.valid ||!selected ||showSubmit\\\">Submit</button>\\r\\n                &nbsp;\\r\\n                <button mat-raised-button color=\\\"warn\\\" routerLink=\\\"/email-summary\\\">Exit</button>\\r\\n            </div>\\r\\n          \\r\\n  \\r\\n            </tbody>\\r\\n  \\r\\n          </table>\\r\\n  \\r\\n        </form>\\r\\n  \\r\\n        <!-- <div fxLayout=\\\"row\\\" style=\\\"margin-left: -43%;\\\"  fxLayoutGap=\\\"10px\\\">\\r\\n              <button mat-raised-button  color=\\\"primary\\\" (click)=\\\"onFetch(accountForm.value)\\\">Fetch Data</button>\\r\\n              &nbsp;&nbsp;\\r\\n              <button  mat-raised-button  color=\\\"warn\\\" routerLink=\\\"/dashboard\\\">Exit</button>\\r\\n              \\r\\n            </div> -->\\r\\n        <br><br>\\r\\n  \\r\\n  \\r\\n      </mat-card-content>\\r\\n    </mat-card>\\r\\n    <br><br><br>\\r\\n    <div fxLayout=\\\"row\\\" >\\r\\n      <div fxFlex></div>\\r\\n      <div fxFlex=\\\"95\\\">\\r\\n        <mat-card style=\\\"width: 70%;  margin-left:20%;\\\">\\r\\n          <mat-card-title>\\r\\n    \\r\\n          </mat-card-title>\\r\\n          <mat-card-content  style=\\\" margin-left:-25%;\\\">\\r\\n            <div fxLayout=\\\"row\\\">\\r\\n  \\r\\n              <table id=\\\"customers\\\">\\r\\n                <tr>\\r\\n                  <th>Record Status:</th>\\r\\n                  <td>\\r\\n                    <mat-chip *ngIf=\\\"masterDatapermission\\\">{{masterresponse.recordStatus }}</mat-chip>\\r\\n                  </td>\\r\\n                  <th>Auth Status:</th>\\r\\n                  <td>\\r\\n  \\r\\n                    <mat-chip *ngIf=\\\"masterDatapermission\\\">{{masterresponse.verifiedStatus}}</mat-chip>\\r\\n                    <!-- <mat-form-field appearance=\\\"fill\\\">\\r\\n                              <mat-label>Status</mat-label>\\r\\n                              <input matInput type=\\\"text\\\" placeholder=\\\"\\\" #exSys>\\r\\n                              <mat-icon matSuffix>person</mat-icon>\\r\\n                            </mat-form-field> -->\\r\\n                  </td>\\r\\n                  <th>Input By:</th>\\r\\n                  <td>\\r\\n  \\r\\n                    <mat-chip *ngIf=\\\"masterDatapermission\\\">{{masterresponse.inputBy}}</mat-chip>\\r\\n                  </td>\\r\\n                  <th>Input Date:</th>\\r\\n                  <td>\\r\\n  \\r\\n                    <mat-chip *ngIf=\\\"masterDatapermission\\\">{{masterresponse.inputTime |  date: 'MM/dd/yyyy, h:mm a'}}</mat-chip>\\r\\n                  </td>\\r\\n  \\r\\n                </tr>\\r\\n                <tr>\\r\\n                  <th>Modification No:</th>\\r\\n                  <td>\\r\\n                    <mat-chip *ngIf=\\\"masterDatapermission\\\">{{masterresponse.modNO}}</mat-chip>\\r\\n                  </td>\\r\\n                  <!-- <th>Creation Date:</th>\\r\\n                          <td>\\r\\n                            <mat-chip>{{masterresponse.modifiedTime | date:'d/M/yy'}}</mat-chip>\\r\\n                          </td> -->\\r\\n                  <th>Authorized Date:</th>\\r\\n                  <td>\\r\\n                    <mat-chip *ngIf=\\\"masterDatapermission\\\">{{masterresponse.authorizedTime |  date: 'MM/dd/yyyy, h:mm a'}}</mat-chip>\\r\\n                  </td>\\r\\n                  <th> Frist Auth Status:</th>\\r\\n                  <td>\\r\\n  \\r\\n                    <mat-chip *ngIf=\\\"masterDatapermission\\\">{{masterresponse.verifiedOnce}}</mat-chip>\\r\\n                    <!-- <mat-form-field appearance=\\\"fill\\\">\\r\\n                              <mat-label>Status</mat-label>\\r\\n                              <input matInput type=\\\"text\\\" placeholder=\\\"\\\" #exSys>\\r\\n                              <mat-icon matSuffix>person</mat-icon>\\r\\n                            </mat-form-field> -->\\r\\n                  </td>\\r\\n                  <th>Authorized By:</th>\\r\\n                  <td>\\r\\n                    <mat-chip *ngIf=\\\"masterDatapermission\\\">{{masterresponse.verifiedBy}}</mat-chip>\\r\\n                  </td>\\r\\n                </tr>\\r\\n              </table>\\r\\n            </div>\\r\\n          </mat-card-content>\\r\\n        </mat-card>\\r\\n      </div>\\r\\n      <div fxFlex></div>\\r\\n  \\r\\n    </div>\\r\\n  \\r\\n    <br><br><br><br><br><br><br><br>\\r\\n    <br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br>\\r\\n    <br><br><br><br><br><br><br><br><br><br><br><br><br><br>\"","export default \"<mat-toolbar color=\\\"primary\\\" style=\\\"height:30px; font-size: small;\\\">\\r\\n        <span>Email Manangement</span> \\r\\n    </mat-toolbar>\\r\\n    <br>\\r\\n    <mat-card>\\r\\n    <button  mat-raised-button style=\\\"font-size: 11px; margin-left: 80%\\\"  color=\\\"primary\\\" routerLink=\\\"/email-summary/email-new\\\">New</button>&nbsp;\\r\\n    <button  mat-raised-button style=\\\"font-size: 11px;\\\"  color=\\\"warn\\\" routerLink='/dashboard'>Exit</button>\\r\\n       <br><br>\\r\\n       <div class=\\\"mat-elevation-z8\\\">\\r\\n            <table mat-table [dataSource]=\\\"dataSource\\\" matSort>\\r\\n    \\r\\n                <ng-container matColumnDef=\\\"emailType\\\">\\r\\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Account Type </th>\\r\\n                    <td mat-cell *matCellDef=\\\"let row\\\">\\r\\n                         <a routerLink =\\\"email-summary/email-maintenance/{{row.emailType}}\\\" (click)=\\\"getEmail(row)\\\"> {{row.emailType}}</a> </td>\\r\\n                </ng-container>\\r\\n            \\r\\n            \\r\\n            \\r\\n                <ng-container matColumnDef=\\\"inputBy\\\">\\r\\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Maker Id </th>\\r\\n                    <td mat-cell *matCellDef=\\\"let row\\\"> {{row.inputBy}}</td>\\r\\n                </ng-container>\\r\\n               \\r\\n                <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n                <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\">\\r\\n                </tr>\\r\\n                \\r\\n            </table>\\r\\n            <mat-paginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\"></mat-paginator>\\r\\n        </div>\\r\\n    </mat-card>\\r\\n    \\r\\n  \\r\\n   <br><br><br><br><br><br><br><br><br><br><br><br><br><br>\"","export class EamilAuditLog\r\n{\r\n    emailType:string;\r\n    inputBy:string;\r\n    inputTime:Date;\r\n    modNO:number;\r\n    recordStatus:string;\r\n    verifiedBy:string\r\n    verifiedOnce:string\r\n    verifiedStatus:string\r\n    verifiedTime:string    \r\n\r\n}","export class EmailDetails\r\n{\r\n    emailId:string;\r\n    emailRequired:string;\r\n    emailType:string;\r\n    id:number;\r\n}","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { EmailMaintenanceComponent } from './email-maintenance.component';\r\nimport { EmailSummaryComponent } from './email-summary/email-summary.component';\r\nimport { EmailNewComponent } from './email-new/email-new.component';\r\n\r\nexport const emailRoutes: Routes = [\r\n  {\r\n    path:'',\r\n    component:EmailSummaryComponent\r\n  },\r\n  {\r\n    path:'email-maintenance',\r\n    component:EmailMaintenanceComponent\r\n  },\r\n  {\r\n    path:'email-new',\r\n    component:EmailNewComponent\r\n  }\r\n]\r\n","export default \".btn {\\r\\n  width: 50px;\\r\\n  height: 25px;\\r\\n \\r\\n  vertical-align: middle;\\r\\n  font-size: 10px;\\r\\n  text-align: center;\\r\\n  \\r\\n}\\r\\n\\r\\n\\r\\n  tr{\\r\\n  /* padding: 5px; */\\r\\n  font-size: 10px;\\r\\n}\\r\\n\\r\\n\\r\\n  td {\\r\\n  font-size: 10px;\\r\\n\\r\\n}\\r\\n\\r\\n\\r\\n  .form-control {\\r\\n  \\r\\n\\r\\npadding: 6%;\\r\\n  display: inline-block;\\r\\n  border: 1px solid #ccc;\\r\\n  border-radius: 4px;\\r\\n  box-sizing: border-box;\\r\\n  font-size: 10px;\\r\\n \\r\\n}\\r\\n\\r\\n\\r\\n  .btn {\\r\\n  width: 40px;\\r\\n  height: 25px;\\r\\n  line-height: 20px;\\r\\n  min-height: 20px;\\r\\n  \\r\\n  vertical-align: top;\\r\\n  font-size: 10px;\\r\\n  align-content: center;\\r\\n}\\r\\n\\r\\n\\r\\n  .b{\\r\\n  width: 80px;\\r\\n  height: 25px;\\r\\n  line-height: 20px;\\r\\n  min-height: 20px;\\r\\n  margin-top: 25%;\\r\\n  vertical-align: top;\\r\\n  font-size: 10px;\\r\\n  align-content: center;\\r\\n}\\r\\n\\r\\n\\r\\n  #customers {\\r\\nborder-collapse: collapse;\\r\\nwidth: 100%;\\r\\n}\\r\\n\\r\\n\\r\\n  #customers td, #customers th {\\r\\nborder: 1px solid #ddd;\\r\\n/* padding: 8px; */\\r\\ntext-align: center;\\r\\nfont-size: x-small;\\r\\n\\r\\n}\\r\\n\\r\\n\\r\\n  #customers td mat-chip {\\r\\nfont-size: x-small;\\r\\n}\\r\\n\\r\\n\\r\\n  #customers tr:nth-child(even){background-color: #f2f2f2;}\\r\\n\\r\\n\\r\\n  #customers th {\\r\\npadding-top: 8px;\\r\\npadding-bottom: 9px;\\r\\ntext-align: left;\\r\\nbackground-color:rgb(97, 178, 216);\\r\\ncolor: white;\\r\\n}\\r\\n\\r\\n\\r\\n  .full-width {\\r\\nwidth: 60%;\\r\\nfont-size: 10px;\\r\\n}\\r\\n\\r\\n\\r\\n  .mat-raised-button {\\r\\n  width: 80px;\\r\\n  height: 27px;\\r\\n  line-height: 20px;\\r\\n  min-height: 20px;\\r\\n  vertical-align: top;\\r\\n  font-size: 11px;\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdmlld3MvZW1haWwtbWFpbnRlbmFuY2UvZW1haWwtbWFpbnRlbmFuY2UuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFdBQVc7RUFDWCxZQUFZOztFQUVaLHNCQUFzQjtFQUN0QixlQUFlO0VBQ2Ysa0JBQWtCOztBQUVwQjs7O0VBR0U7RUFDQSxrQkFBa0I7RUFDbEIsZUFBZTtBQUNqQjs7O0VBQ0E7RUFDRSxlQUFlOztBQUVqQjs7O0VBQ0E7OztBQUdBLFdBQVc7RUFDVCxxQkFBcUI7RUFDckIsc0JBQXNCO0VBQ3RCLGtCQUFrQjtFQUNsQixzQkFBc0I7RUFDdEIsZUFBZTs7QUFFakI7OztFQUNBO0VBQ0UsV0FBVztFQUNYLFlBQVk7RUFDWixpQkFBaUI7RUFDakIsZ0JBQWdCOztFQUVoQixtQkFBbUI7RUFDbkIsZUFBZTtFQUNmLHFCQUFxQjtBQUN2Qjs7O0VBQ0E7RUFDRSxXQUFXO0VBQ1gsWUFBWTtFQUNaLGlCQUFpQjtFQUNqQixnQkFBZ0I7RUFDaEIsZUFBZTtFQUNmLG1CQUFtQjtFQUNuQixlQUFlO0VBQ2YscUJBQXFCO0FBQ3ZCOzs7RUFFQTtBQUNBLHlCQUF5QjtBQUN6QixXQUFXO0FBQ1g7OztFQUNBO0FBQ0Esc0JBQXNCO0FBQ3RCLGtCQUFrQjtBQUNsQixrQkFBa0I7QUFDbEIsa0JBQWtCOztBQUVsQjs7O0VBQ0E7QUFDQSxrQkFBa0I7QUFDbEI7OztFQUNBLDhCQUE4Qix5QkFBeUIsQ0FBQzs7O0VBRXhEO0FBQ0EsZ0JBQWdCO0FBQ2hCLG1CQUFtQjtBQUNuQixnQkFBZ0I7QUFDaEIsa0NBQWtDO0FBQ2xDLFlBQVk7QUFDWjs7O0VBQ0E7QUFDQSxVQUFVO0FBQ1YsZUFBZTtBQUNmOzs7RUFDQTtFQUNFLFdBQVc7RUFDWCxZQUFZO0VBQ1osaUJBQWlCO0VBQ2pCLGdCQUFnQjtFQUNoQixtQkFBbUI7RUFDbkIsZUFBZTtBQUNqQiIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL2VtYWlsLW1haW50ZW5hbmNlL2VtYWlsLW1haW50ZW5hbmNlLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuYnRuIHtcclxuICB3aWR0aDogNTBweDtcclxuICBoZWlnaHQ6IDI1cHg7XHJcbiBcclxuICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xyXG4gIGZvbnQtc2l6ZTogMTBweDtcclxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgXHJcbn1cclxuXHJcblxyXG4gIHRye1xyXG4gIC8qIHBhZGRpbmc6IDVweDsgKi9cclxuICBmb250LXNpemU6IDEwcHg7XHJcbn1cclxudGQge1xyXG4gIGZvbnQtc2l6ZTogMTBweDtcclxuXHJcbn1cclxuLmZvcm0tY29udHJvbCB7XHJcbiAgXHJcblxyXG5wYWRkaW5nOiA2JTtcclxuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgYm9yZGVyOiAxcHggc29saWQgI2NjYztcclxuICBib3JkZXItcmFkaXVzOiA0cHg7XHJcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcclxuICBmb250LXNpemU6IDEwcHg7XHJcbiBcclxufVxyXG4uYnRuIHtcclxuICB3aWR0aDogNDBweDtcclxuICBoZWlnaHQ6IDI1cHg7XHJcbiAgbGluZS1oZWlnaHQ6IDIwcHg7XHJcbiAgbWluLWhlaWdodDogMjBweDtcclxuICBcclxuICB2ZXJ0aWNhbC1hbGlnbjogdG9wO1xyXG4gIGZvbnQtc2l6ZTogMTBweDtcclxuICBhbGlnbi1jb250ZW50OiBjZW50ZXI7XHJcbn1cclxuLmJ7XHJcbiAgd2lkdGg6IDgwcHg7XHJcbiAgaGVpZ2h0OiAyNXB4O1xyXG4gIGxpbmUtaGVpZ2h0OiAyMHB4O1xyXG4gIG1pbi1oZWlnaHQ6IDIwcHg7XHJcbiAgbWFyZ2luLXRvcDogMjUlO1xyXG4gIHZlcnRpY2FsLWFsaWduOiB0b3A7XHJcbiAgZm9udC1zaXplOiAxMHB4O1xyXG4gIGFsaWduLWNvbnRlbnQ6IGNlbnRlcjtcclxufVxyXG5cclxuI2N1c3RvbWVycyB7XHJcbmJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7XHJcbndpZHRoOiAxMDAlO1xyXG59XHJcbiNjdXN0b21lcnMgdGQsICNjdXN0b21lcnMgdGgge1xyXG5ib3JkZXI6IDFweCBzb2xpZCAjZGRkO1xyXG4vKiBwYWRkaW5nOiA4cHg7ICovXHJcbnRleHQtYWxpZ246IGNlbnRlcjtcclxuZm9udC1zaXplOiB4LXNtYWxsO1xyXG5cclxufVxyXG4jY3VzdG9tZXJzIHRkIG1hdC1jaGlwIHtcclxuZm9udC1zaXplOiB4LXNtYWxsO1xyXG59XHJcbiNjdXN0b21lcnMgdHI6bnRoLWNoaWxkKGV2ZW4pe2JhY2tncm91bmQtY29sb3I6ICNmMmYyZjI7fVxyXG5cclxuI2N1c3RvbWVycyB0aCB7XHJcbnBhZGRpbmctdG9wOiA4cHg7XHJcbnBhZGRpbmctYm90dG9tOiA5cHg7XHJcbnRleHQtYWxpZ246IGxlZnQ7XHJcbmJhY2tncm91bmQtY29sb3I6cmdiKDk3LCAxNzgsIDIxNik7XHJcbmNvbG9yOiB3aGl0ZTtcclxufVxyXG4uZnVsbC13aWR0aCB7XHJcbndpZHRoOiA2MCU7XHJcbmZvbnQtc2l6ZTogMTBweDtcclxufVxyXG4ubWF0LXJhaXNlZC1idXR0b24ge1xyXG4gIHdpZHRoOiA4MHB4O1xyXG4gIGhlaWdodDogMjdweDtcclxuICBsaW5lLWhlaWdodDogMjBweDtcclxuICBtaW4taGVpZ2h0OiAyMHB4O1xyXG4gIHZlcnRpY2FsLWFsaWduOiB0b3A7XHJcbiAgZm9udC1zaXplOiAxMXB4O1xyXG59XHJcblxyXG5cclxuIl19 */\"","import { Component, OnInit, ChangeDetectorRef } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { AccountBlockingServiceService } from 'src/app/shared/services/account-blocking-service.service';\r\n// import { Food } from '../sias-v2/ext-system/ext-system.component';\r\nimport Swal from 'sweetalert2';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { EamilAuditLog } from './EmailAuditLog';\r\nimport { element } from 'protractor';\r\nimport { AppConfirmService } from 'src/app/shared/services/app-confirm/app-confirm.service';\r\nimport { EmailDetails } from './EmailDetails';\r\nimport { UsersService } from '../users/users.service';\r\n\r\nexport interface Food {\r\n  value: string;\r\n  viewValue: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-email-maintenance',\r\n  templateUrl: './email-maintenance.component.html',\r\n  styleUrls: ['./email-maintenance.component.css']\r\n})\r\nexport class EmailMaintenanceComponent implements OnInit {\r\n  onlySubmit: boolean;\r\n\r\n  constructor(private formBuilder: FormBuilder,\r\n              private ref: ChangeDetectorRef, private userApi: UsersService,\r\n              private router:Router,\r\n              private confirmService: AppConfirmService, private accountBlockingService: AccountBlockingServiceService, private route: ActivatedRoute) {\r\n\r\n  }\r\n  accountType: any;\r\n  selected: any;\r\n  emailDetails = new EmailDetails();\r\n  dataSource: any;\r\n  //loggedInUser: any;\r\n  emailMaintenace: FormGroup;\r\n  emaildata: any;\r\n  masterresponse: any;\r\n  masterDatapermission: boolean;\r\n  ex: string;\r\n  recieved: any;\r\n  editFlag = false;\r\n  submitFalg = false;\r\n  data:any;\r\n  user_id: any;\r\n  screenName: any;\r\n  role: any;\r\n  res: any;\r\n  rolepermission: any;\r\n  button_permission: any = {};\r\n  eamilAuditLog = new EamilAuditLog();\r\n\r\n  public email: any[] = [{\r\n    emailId: '',\r\n    emailType: '',\r\n    emailRequired: '',\r\n    id: '',\r\n  }];\r\n\r\n  ngOnInit() {\r\n    this.user_id = sessionStorage.getItem('user_id');\r\n    this.role = sessionStorage.getItem('user_role');\r\n    this.screenpermission();\r\n    this.route.queryParams.subscribe(params => {\r\n      this.eamilAuditLog.modNO = params.modifyNo,\r\n        this.eamilAuditLog.inputBy = params.creator,\r\n        this.eamilAuditLog.recordStatus = params.rstatus,\r\n        this.eamilAuditLog.verifiedOnce = params.vStatus,\r\n        this.eamilAuditLog.inputTime = params.inputDate,\r\n        this.eamilAuditLog.verifiedStatus = params.vDate,\r\n        this.eamilAuditLog.verifiedTime = params.authtym,\r\n        this.eamilAuditLog.verifiedBy = params.authBy\r\n      this.eamilAuditLog.emailType = params.emailType\r\n      //console.log(this.eamilAuditLog);\r\n      this.masterDatapermission = true;\r\n    });\r\n \r\n    if (this.eamilAuditLog.emailType) {\r\n      this.selected=this.eamilAuditLog.emailType;\r\n     this.accountBlockingService.sendAccType(this.eamilAuditLog.emailType).subscribe(data => {\r\n     this.data = data;\r\n     //console.log(data);\r\n     this.email=this.data;\r\n     });\r\n   }\r\n\r\n\r\n  }\r\n  screenpermission() {\r\n    this.screenName = 'roles';\r\n    // this.role='ROLE1';\r\n    this.userApi.getRoleScreenPermission(this.user_id, this.screenName, this.role).subscribe(res => {\r\n      this.rolepermission = res;\r\n      //console.log(this.rolepermission);\r\n      if (this.rolepermission) {\r\n        this.button_permission = this.rolepermission[0];\r\n        //console.log( this.button_permission);\r\n        }\r\n    });\r\n\r\n  }\r\n  addAddress() {\r\n    this.email.push({\r\n      emailId: '',\r\n\r\n    });\r\n  }\r\n  rowId:any;\r\n  removeAddress(i,email) {\r\n    //console.log(i);\r\n    //console.log(email);\r\n      // const index = this.recieved.indexOf(i);\r\n      // //console.log(index);\r\n\r\n      this.email.forEach(element => {\r\n  if(email==element.emailId){\r\n  this.rowId=element.id;\r\n  //console.log(this.rowId);\r\n  }\r\n});\r\n    // this.emailDetails  = this.recieved[i];\r\n    // //console.log('one ob', this.emailDetails.id);\r\n    // let rowId = this.emailDetails.id;\r\n    // //console.log(rowId);\r\n    // this.recieved.splice(i, 1);\r\n\r\n    this.accountBlockingService.deleteingParticluarRow(this.selected, this.user_id, this.rowId)\r\n    .subscribe(deleteResp => {\r\n      //console.log(deleteResp);\r\n      if (deleteResp == true) {\r\n        Swal.fire({\r\n         \r\n          text: 'You Deleted The Record',\r\n         \r\n\r\n        })\r\n      } else {\r\n        Swal.fire({\r\n         \r\n          text: 'Once Verifed Record Cannot Be Deleted',\r\n          // type: 'warning',\r\n\r\n        });\r\n      }\r\n      this.ref.markForCheck();\r\n    });\r\n\r\n  }\r\n\r\n  logValue() {\r\n    //console.log('submit call');\r\n    this.editFlag = false;\r\n    //console.log(this.selected);\r\n    // //console.log(this.accountType);\r\n    //console.log(this.email);\r\n\r\n    this.email.forEach(element => {\r\n      element.emailType = this.selected;\r\n      element.emailRequired = 'Y';\r\n    });\r\n    this.accountBlockingService.onclickOfEditOfEmailManagement(this.selected, this.user_id, this.email).subscribe(editResp => {\r\n      //console.log(editResp);\r\n      if (editResp == false) {\r\n        Swal.fire({\r\n          \r\n          text: 'Failed To Modify The Record',\r\n          // type: 'warning',\r\n\r\n        });\r\n      } else {\r\n        Swal.fire({\r\n         \r\n          text: 'Record Updated SuccessFully',\r\n          \r\n\r\n        });\r\n      }\r\n      this.editFlag=true;\r\n      this.onlySubmit=true;\r\n      this.commonAuditLog();\r\n    });\r\n    this.ref.markForCheck();\r\n\r\n\r\n  }\r\n  onClickOfAuthOfEmailManagement() {\r\n    //console.log('this is auth');\r\n    this.accountBlockingService.onClickOfAuthOfEmailManagement(this.selected, this.user_id).subscribe(authresp => {\r\n      //console.log(authresp);\r\n\r\n      if (authresp == false) {\r\n        Swal.fire({\r\n          \r\n          text: 'Maker Cannot Authorize The Record',\r\n          // type: 'warning',\r\n\r\n        });\r\n      } else {\r\n        Swal.fire({\r\n         \r\n          text: 'You Authorized The Record',\r\n        \r\n\r\n        });\r\n\r\n      }\r\n      this.commonAuditLog();\r\n    });\r\n    this.ref.markForCheck();\r\n  }\r\n  onclickOfReopenOfEamilManagement() {\r\n    //console.log('this is Reopen');\r\n    this.accountBlockingService.onclickOfReopenOfEamilManagement(this.selected, this.user_id).subscribe(reopenResp => {\r\n      //console.log(reopenResp);\r\n      if (reopenResp == false) {\r\n        Swal.fire({\r\n         \r\n          text: 'UnAuthorized Records Cannot Be Reopen',\r\n          // type: 'warning',\r\n\r\n        });\r\n      } else {\r\n        Swal.fire({\r\n         \r\n          text: 'You Opened the record',\r\n          // type: 'success',\r\n\r\n        });\r\n      }\r\n\r\n    });\r\n    this.commonAuditLog();\r\n  }\r\n\r\n  onclickOfCloseOfEmailManagement() {\r\n    //console.log('this is close');\r\n    this.accountBlockingService.onclickOfCloseOfEmailManagement(this.selected, this.user_id).subscribe(closeResp => {\r\n      //console.log(closeResp);\r\n      if (closeResp == false) {\r\n        Swal.fire({\r\n        \r\n          text: 'UnAuthorized Records Cannot Be Closed',\r\n          // type: 'warning',\r\n\r\n        });\r\n      } else {\r\n        Swal.fire({\r\n          \r\n          text: 'You Closed The Record',\r\n          // type: 'success',\r\n\r\n        });\r\n      }\r\n      this.commonAuditLog();\r\n    });\r\n\r\n  }\r\n  onclickOfEditOfEmailManagement() {\r\n    //console.log('this is edit');\r\n    this.editFlag = true;\r\n\r\n  }\r\n\r\n  onClickOfDeleteOfEmailManagement() {\r\n    //console.log('this is delete call');\r\n    this.accountBlockingService.onclickOfDeleteOfEmailManagement(this.selected, this.user_id).subscribe(deletedRecord => {\r\n    console.log(deletedRecord);\r\n      if (deletedRecord == false) {\r\n        Swal.fire({\r\n        \r\n          text: 'Authorized Record Cannot be Deleted',\r\n          // type: 'warning',\r\n\r\n        });\r\n      } else {\r\n        Swal.fire('Record Deleted SuccessFully');\r\n      }\r\n    });\r\n    this.ref.markForCheck();\r\n  }\r\n\r\n\r\n  commonAuditLog() {\r\n    this.accountBlockingService.auditLogResponse(this.selected).subscribe(closedResp => {\r\n      //console.log(closedResp);\r\n\r\n      this.masterDatapermission = true;\r\n      this.eamilAuditLog = closedResp;\r\n    });\r\n    this.ref.markForCheck();\r\n  }\r\n  onNew()\r\n  {\r\n    this.editFlag=true;\r\n    this.onlySubmit=true;\r\n    this.router.navigateByUrl('/email-summary/email-new')\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { emailRoutes } from './email-maintenance-routing.module';\r\nimport { EmailMaintenanceComponent } from './email-maintenance.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { AngularMaterialModule } from 'src/app/shared/angular-material/angular-material.module';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { EmailSummaryComponent } from './email-summary/email-summary.component';\r\nimport { EmailNewComponent } from './email-new/email-new.component';\r\nimport { AppComfirmComponent } from 'src/app/shared/services/app-confirm/app-confirm.component';\r\n//import { FlexLayoutModule } from '@angular/flex-layout';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [EmailMaintenanceComponent, EmailSummaryComponent, EmailNewComponent],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    AngularMaterialModule,\r\n    FlexLayoutModule,\r\n    RouterModule.forChild(emailRoutes)\r\n  ],\r\n  // entryComponents: [AppComfirmComponent]\r\n})\r\nexport class EmailMaintenanceModule { }\r\n","export default \".btn {\\r\\n  width: 50px;\\r\\n  height: 25px;\\r\\n \\r\\n  vertical-align: middle;\\r\\n  font-size: 10px;\\r\\n  text-align: center;\\r\\n  \\r\\n}\\r\\n\\r\\ntable{\\r\\n  margin-left: 20%;\\r\\n}\\r\\n\\r\\ntr{\\r\\n  padding: 5px;\\r\\n  font-size: 10px;\\r\\n}\\r\\n\\r\\ntd {\\r\\n  font-size: 10px;\\r\\n\\r\\n}\\r\\n\\r\\n.form-control {\\r\\n  \\r\\n\\r\\npadding: 6%;\\r\\n  display: inline-block;\\r\\n  border: 1px solid #ccc;\\r\\n  border-radius: 4px;\\r\\n  box-sizing: border-box;\\r\\n  font-size: 10px;\\r\\n \\r\\n}\\r\\n\\r\\n.btn {\\r\\n  width: 40px;\\r\\n  height: 25px;\\r\\n  line-height: 20px;\\r\\n  min-height: 20px;\\r\\n  \\r\\n  vertical-align: top;\\r\\n  font-size: 10px;\\r\\n  align-content: center;\\r\\n}\\r\\n\\r\\n.b{\\r\\n  width: 80px;\\r\\n  height: 25px;\\r\\n  line-height: 20px;\\r\\n  min-height: 20px;\\r\\n  margin-top: 25%;\\r\\n  vertical-align: top;\\r\\n  font-size: 10px;\\r\\n  align-content: center;\\r\\n}\\r\\n\\r\\n#customers {\\r\\nborder-collapse: collapse;\\r\\nwidth: 100%;\\r\\n}\\r\\n\\r\\n#customers td, #customers th {\\r\\nborder: 1px solid #ddd;\\r\\npadding: 8px;\\r\\ntext-align: center;\\r\\nfont-size: x-small;\\r\\n\\r\\n}\\r\\n\\r\\n#customers td mat-chip {\\r\\nfont-size: x-small;\\r\\n}\\r\\n\\r\\n#customers tr:nth-child(even){background-color: #f2f2f2;}\\r\\n\\r\\n#customers th {\\r\\npadding-top: 8px;\\r\\npadding-bottom: 9px;\\r\\ntext-align: left;\\r\\nbackground-color:rgb(97, 178, 216);\\r\\ncolor: white;\\r\\n}\\r\\n\\r\\n.full-width {\\r\\nwidth: 60%;\\r\\nfont-size: 10px;\\r\\n}\\r\\n\\r\\n.mat-raised-button {\\r\\n  width: 80px;\\r\\n  height: 27px;\\r\\n  line-height: 20px;\\r\\n  min-height: 20px;\\r\\n  vertical-align: top;\\r\\n  font-size: 11px;\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdmlld3MvZW1haWwtbWFpbnRlbmFuY2UvZW1haWwtbmV3L2VtYWlsLW5ldy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsV0FBVztFQUNYLFlBQVk7O0VBRVosc0JBQXNCO0VBQ3RCLGVBQWU7RUFDZixrQkFBa0I7O0FBRXBCOztBQUVBO0VBQ0UsZ0JBQWdCO0FBQ2xCOztBQUNFO0VBQ0EsWUFBWTtFQUNaLGVBQWU7QUFDakI7O0FBQ0E7RUFDRSxlQUFlOztBQUVqQjs7QUFDQTs7O0FBR0EsV0FBVztFQUNULHFCQUFxQjtFQUNyQixzQkFBc0I7RUFDdEIsa0JBQWtCO0VBQ2xCLHNCQUFzQjtFQUN0QixlQUFlOztBQUVqQjs7QUFDQTtFQUNFLFdBQVc7RUFDWCxZQUFZO0VBQ1osaUJBQWlCO0VBQ2pCLGdCQUFnQjs7RUFFaEIsbUJBQW1CO0VBQ25CLGVBQWU7RUFDZixxQkFBcUI7QUFDdkI7O0FBQ0E7RUFDRSxXQUFXO0VBQ1gsWUFBWTtFQUNaLGlCQUFpQjtFQUNqQixnQkFBZ0I7RUFDaEIsZUFBZTtFQUNmLG1CQUFtQjtFQUNuQixlQUFlO0VBQ2YscUJBQXFCO0FBQ3ZCOztBQUVBO0FBQ0EseUJBQXlCO0FBQ3pCLFdBQVc7QUFDWDs7QUFDQTtBQUNBLHNCQUFzQjtBQUN0QixZQUFZO0FBQ1osa0JBQWtCO0FBQ2xCLGtCQUFrQjs7QUFFbEI7O0FBQ0E7QUFDQSxrQkFBa0I7QUFDbEI7O0FBQ0EsOEJBQThCLHlCQUF5QixDQUFDOztBQUV4RDtBQUNBLGdCQUFnQjtBQUNoQixtQkFBbUI7QUFDbkIsZ0JBQWdCO0FBQ2hCLGtDQUFrQztBQUNsQyxZQUFZO0FBQ1o7O0FBQ0E7QUFDQSxVQUFVO0FBQ1YsZUFBZTtBQUNmOztBQUNBO0VBQ0UsV0FBVztFQUNYLFlBQVk7RUFDWixpQkFBaUI7RUFDakIsZ0JBQWdCO0VBQ2hCLG1CQUFtQjtFQUNuQixlQUFlO0FBQ2pCIiwiZmlsZSI6InNyYy9hcHAvdmlld3MvZW1haWwtbWFpbnRlbmFuY2UvZW1haWwtbmV3L2VtYWlsLW5ldy5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmJ0biB7XHJcbiAgd2lkdGg6IDUwcHg7XHJcbiAgaGVpZ2h0OiAyNXB4O1xyXG4gXHJcbiAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcclxuICBmb250LXNpemU6IDEwcHg7XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gIFxyXG59XHJcblxyXG50YWJsZXtcclxuICBtYXJnaW4tbGVmdDogMjAlO1xyXG59XHJcbiAgdHJ7XHJcbiAgcGFkZGluZzogNXB4O1xyXG4gIGZvbnQtc2l6ZTogMTBweDtcclxufVxyXG50ZCB7XHJcbiAgZm9udC1zaXplOiAxMHB4O1xyXG5cclxufVxyXG4uZm9ybS1jb250cm9sIHtcclxuICBcclxuXHJcbnBhZGRpbmc6IDYlO1xyXG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICBib3JkZXI6IDFweCBzb2xpZCAjY2NjO1xyXG4gIGJvcmRlci1yYWRpdXM6IDRweDtcclxuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xyXG4gIGZvbnQtc2l6ZTogMTBweDtcclxuIFxyXG59XHJcbi5idG4ge1xyXG4gIHdpZHRoOiA0MHB4O1xyXG4gIGhlaWdodDogMjVweDtcclxuICBsaW5lLWhlaWdodDogMjBweDtcclxuICBtaW4taGVpZ2h0OiAyMHB4O1xyXG4gIFxyXG4gIHZlcnRpY2FsLWFsaWduOiB0b3A7XHJcbiAgZm9udC1zaXplOiAxMHB4O1xyXG4gIGFsaWduLWNvbnRlbnQ6IGNlbnRlcjtcclxufVxyXG4uYntcclxuICB3aWR0aDogODBweDtcclxuICBoZWlnaHQ6IDI1cHg7XHJcbiAgbGluZS1oZWlnaHQ6IDIwcHg7XHJcbiAgbWluLWhlaWdodDogMjBweDtcclxuICBtYXJnaW4tdG9wOiAyNSU7XHJcbiAgdmVydGljYWwtYWxpZ246IHRvcDtcclxuICBmb250LXNpemU6IDEwcHg7XHJcbiAgYWxpZ24tY29udGVudDogY2VudGVyO1xyXG59XHJcblxyXG4jY3VzdG9tZXJzIHtcclxuYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTtcclxud2lkdGg6IDEwMCU7XHJcbn1cclxuI2N1c3RvbWVycyB0ZCwgI2N1c3RvbWVycyB0aCB7XHJcbmJvcmRlcjogMXB4IHNvbGlkICNkZGQ7XHJcbnBhZGRpbmc6IDhweDtcclxudGV4dC1hbGlnbjogY2VudGVyO1xyXG5mb250LXNpemU6IHgtc21hbGw7XHJcblxyXG59XHJcbiNjdXN0b21lcnMgdGQgbWF0LWNoaXAge1xyXG5mb250LXNpemU6IHgtc21hbGw7XHJcbn1cclxuI2N1c3RvbWVycyB0cjpudGgtY2hpbGQoZXZlbil7YmFja2dyb3VuZC1jb2xvcjogI2YyZjJmMjt9XHJcblxyXG4jY3VzdG9tZXJzIHRoIHtcclxucGFkZGluZy10b3A6IDhweDtcclxucGFkZGluZy1ib3R0b206IDlweDtcclxudGV4dC1hbGlnbjogbGVmdDtcclxuYmFja2dyb3VuZC1jb2xvcjpyZ2IoOTcsIDE3OCwgMjE2KTtcclxuY29sb3I6IHdoaXRlO1xyXG59XHJcbi5mdWxsLXdpZHRoIHtcclxud2lkdGg6IDYwJTtcclxuZm9udC1zaXplOiAxMHB4O1xyXG59XHJcbi5tYXQtcmFpc2VkLWJ1dHRvbiB7XHJcbiAgd2lkdGg6IDgwcHg7XHJcbiAgaGVpZ2h0OiAyN3B4O1xyXG4gIGxpbmUtaGVpZ2h0OiAyMHB4O1xyXG4gIG1pbi1oZWlnaHQ6IDIwcHg7XHJcbiAgdmVydGljYWwtYWxpZ246IHRvcDtcclxuICBmb250LXNpemU6IDExcHg7XHJcbn1cclxuXHJcblxyXG4iXX0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport Swal from 'sweetalert2';\r\nimport { FormGroup, FormBuilder } from '@angular/forms';\r\nimport { AccountBlockingServiceService } from 'src/app/shared/services/account-blocking-service.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-email-new',\r\n  templateUrl: './email-new.component.html',\r\n  styleUrls: ['./email-new.component.css']\r\n})\r\nexport class EmailNewComponent implements OnInit {\r\n\r\n  accountType: any;\r\n  selected:any;\r\n  dataSource: any;\r\n  loggedInUser:any;\r\n  emailMaintenace: FormGroup;\r\n  emaildata:any;\r\n  masterresponse:any;\r\n  masterDatapermission:boolean;\r\n  showSubmit: boolean;\r\n  constructor(private formBuilder: FormBuilder, private accountBlockingService: AccountBlockingServiceService, private route: ActivatedRoute) {\r\n\r\n  }\r\n  \r\n  ngOnInit() {\r\n    this.loggedInUser = localStorage.getItem('userFromLogin');\r\n    \r\n  }\r\n\r\n  // emailMaitenanceDto=new EmailMaitenanceDto();\r\n  private fieldArray: Array<any> = [];\r\n  private newAttribute: any = {};\r\n\r\n  addFieldValue() {\r\n    this.fieldArray.push(this.newAttribute)\r\n    this.newAttribute = {};\r\n\r\n  }\r\n\r\n  deleteFieldValue(index) {\r\n    this.fieldArray.splice(index, 1);\r\n  }\r\n  onClickOfSubmit(data: any) {\r\n    //console.log(\"submit\", data)\r\n    //console.log(this.fieldArray);\r\n  }\r\n  public email: any[] = [{\r\n    emailId: '',\r\n    emailType: '',\r\n    emailRequired:'',\r\n    id:'',\r\n  }]\r\n  addAddress() {\r\n    this.email.push({\r\n      emailId: '',\r\n\r\n    });\r\n  }\r\n  removeAddress(i: number) {\r\n    this.email.splice(i, 1);\r\n  }\r\n \r\n  logValue() {\r\n    //console.log(this.selected);\r\n   // //console.log(this.accountType);\r\n    //console.log(this.email);\r\n    this.email.forEach(element => {\r\n      element.emailType=this.selected;\r\n      element.emailRequired='Y';\r\n    });\r\n    this.accountBlockingService.emailMaintenance(this.selected,this.loggedInUser,this.email).subscribe(resp => {\r\n     this.masterresponse=resp;\r\n     //console.log(resp);\r\n      if(resp){\r\n        this.masterDatapermission=true;\r\n       Swal.fire('Success ');\r\n       this.showSubmit=true;\r\n     }\r\n     else if(resp==null)\r\n     {\r\n      // this.masterDatapermission=false;\r\n      Swal.fire('Email Id Already Exit ');\r\n     }\r\n     else{\r\n       Swal.fire('Unable to Save the Record ');\r\n     }\r\n     \r\n    });\r\n  }\r\n \r\n\r\n}\r\n\r\n\r\n\r\n","export default \"  \\r\\ntable {\\r\\n  border-collapse: initial;\\r\\n  width:100%;\\r\\n  text-align: center !important;\\r\\n}\\r\\n:host ::ng-deep .mat-sort-header-container { \\r\\n  display: flex;  \\r\\n  justify-content: center; \\r\\n}\\r\\nth.mat-header-cell, td.mat-cell { \\r\\n  text-align: center; \\r\\n}\\r\\n.mat-raised-button {\\r\\n  width: -webkit-fit-content;\\r\\n  width: -moz-fit-content;\\r\\n  width: fit-content;\\r\\n  height: 20px;\\r\\n  line-height: 27px;\\r\\n  min-height: 27px;\\r\\n  vertical-align: top;\\r\\n  font-size: 11px;\\r\\n  padding: 0 0;\\r\\n  margin: 0;\\r\\n}\\r\\n.mat-header-cell {\\r\\n  text-align: center;\\r\\n  height: 25px !important;\\r\\n\\r\\n}\\r\\n.mat-cell {\\r\\n  text-align: center;\\r\\n  height: 25px !important;\\r\\n\\r\\n}\\r\\ntr:nth-child(even) {\\r\\n  height: 25px !important;\\r\\n}\\r\\nth {\\r\\n  font-weight: small;\\r\\n  height: 25px !important;\\r\\n  text-align: center;\\r\\n}\\r\\ntr {\\r\\n  font-weight: small;\\r\\n  height: 25px !important;\\r\\n  text-align: center;\\r\\n}\\r\\nmat-paginator {\\r\\n  width: auto !important;\\r\\n  height: 40px !important;\\r\\n}\\r\\nmd-pagination-wrapper {\\r\\n  width: auto !important;\\r\\n  height: 40px !important;\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdmlld3MvZW1haWwtbWFpbnRlbmFuY2UvZW1haWwtc3VtbWFyeS9lbWFpbC1zdW1tYXJ5LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBO0VBQ0Usd0JBQXdCO0VBQ3hCLFVBQVU7RUFDViw2QkFBNkI7QUFDL0I7QUFDQTtFQUNFLGFBQWE7RUFDYix1QkFBdUI7QUFDekI7QUFFQTtFQUNFLGtCQUFrQjtBQUNwQjtBQUNBO0VBQ0UsMEJBQWtCO0VBQWxCLHVCQUFrQjtFQUFsQixrQkFBa0I7RUFDbEIsWUFBWTtFQUNaLGlCQUFpQjtFQUNqQixnQkFBZ0I7RUFDaEIsbUJBQW1CO0VBQ25CLGVBQWU7RUFDZixZQUFZO0VBQ1osU0FBUztBQUNYO0FBQ0E7RUFDRSxrQkFBa0I7RUFDbEIsdUJBQXVCOztBQUV6QjtBQUVBO0VBQ0Usa0JBQWtCO0VBQ2xCLHVCQUF1Qjs7QUFFekI7QUFHQTtFQUNFLHVCQUF1QjtBQUN6QjtBQUVBO0VBQ0Usa0JBQWtCO0VBQ2xCLHVCQUF1QjtFQUN2QixrQkFBa0I7QUFDcEI7QUFDQTtFQUNFLGtCQUFrQjtFQUNsQix1QkFBdUI7RUFDdkIsa0JBQWtCO0FBQ3BCO0FBQ0E7RUFDRSxzQkFBc0I7RUFDdEIsdUJBQXVCO0FBQ3pCO0FBRUE7RUFDRSxzQkFBc0I7RUFDdEIsdUJBQXVCO0FBQ3pCIiwiZmlsZSI6InNyYy9hcHAvdmlld3MvZW1haWwtbWFpbnRlbmFuY2UvZW1haWwtc3VtbWFyeS9lbWFpbC1zdW1tYXJ5LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIgIFxyXG50YWJsZSB7XHJcbiAgYm9yZGVyLWNvbGxhcHNlOiBpbml0aWFsO1xyXG4gIHdpZHRoOjEwMCU7XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyICFpbXBvcnRhbnQ7XHJcbn1cclxuOmhvc3QgOjpuZy1kZWVwIC5tYXQtc29ydC1oZWFkZXItY29udGFpbmVyIHsgXHJcbiAgZGlzcGxheTogZmxleDsgIFxyXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyOyBcclxufVxyXG5cclxudGgubWF0LWhlYWRlci1jZWxsLCB0ZC5tYXQtY2VsbCB7IFxyXG4gIHRleHQtYWxpZ246IGNlbnRlcjsgXHJcbn1cclxuLm1hdC1yYWlzZWQtYnV0dG9uIHtcclxuICB3aWR0aDogZml0LWNvbnRlbnQ7XHJcbiAgaGVpZ2h0OiAyMHB4O1xyXG4gIGxpbmUtaGVpZ2h0OiAyN3B4O1xyXG4gIG1pbi1oZWlnaHQ6IDI3cHg7XHJcbiAgdmVydGljYWwtYWxpZ246IHRvcDtcclxuICBmb250LXNpemU6IDExcHg7XHJcbiAgcGFkZGluZzogMCAwO1xyXG4gIG1hcmdpbjogMDtcclxufVxyXG4ubWF0LWhlYWRlci1jZWxsIHtcclxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgaGVpZ2h0OiAyNXB4ICFpbXBvcnRhbnQ7XHJcblxyXG59XHJcblxyXG4ubWF0LWNlbGwge1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICBoZWlnaHQ6IDI1cHggIWltcG9ydGFudDtcclxuXHJcbn1cclxuXHJcblxyXG50cjpudGgtY2hpbGQoZXZlbikge1xyXG4gIGhlaWdodDogMjVweCAhaW1wb3J0YW50O1xyXG59XHJcblxyXG50aCB7XHJcbiAgZm9udC13ZWlnaHQ6IHNtYWxsO1xyXG4gIGhlaWdodDogMjVweCAhaW1wb3J0YW50O1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxufVxyXG50ciB7XHJcbiAgZm9udC13ZWlnaHQ6IHNtYWxsO1xyXG4gIGhlaWdodDogMjVweCAhaW1wb3J0YW50O1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxufVxyXG5tYXQtcGFnaW5hdG9yIHtcclxuICB3aWR0aDogYXV0byAhaW1wb3J0YW50O1xyXG4gIGhlaWdodDogNDBweCAhaW1wb3J0YW50O1xyXG59XHJcblxyXG5tZC1wYWdpbmF0aW9uLXdyYXBwZXIge1xyXG4gIHdpZHRoOiBhdXRvICFpbXBvcnRhbnQ7XHJcbiAgaGVpZ2h0OiA0MHB4ICFpbXBvcnRhbnQ7XHJcbn1cclxuXHJcblxyXG5cclxuXHJcblxyXG4iXX0= */\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { Router, NavigationExtras } from '@angular/router';\r\nimport { AccountBlockingServiceService } from 'src/app/shared/services/account-blocking-service.service';\r\nimport { MatTableDataSource, MatPaginator } from '@angular/material';\r\nimport { UsersService } from '../../users/users.service';\r\n\r\n@Component({\r\n  selector: 'app-email-summary',\r\n  templateUrl: './email-summary.component.html',\r\n  styleUrls: ['./email-summary.component.css']\r\n})\r\nexport class EmailSummaryComponent implements OnInit {\r\n  emaildata: any;\r\n  dataSource: any;\r\n  @ViewChild(MatPaginator, { static: false }) paginator: MatPaginator;\r\n  displayedColumns: string[] = ['emailType', 'inputBy'];\r\n  user_id:any;\r\n  screenName:any;\r\n  role:any;\r\n  res:any;\r\n  rolepermission:any;\r\n  button_permission:any={};\r\n  constructor(private router: Router, private userApi: UsersService,\r\n    private accountBlockingService: AccountBlockingServiceService) { }\r\n\r\n  ngOnInit() {\r\n    this.user_id=sessionStorage.getItem('user_id');\r\n    this.role=sessionStorage.getItem('user_role');\r\n    this.getAllData();\r\n    this.screenpermission();\r\n  }\r\n  screenpermission(){\r\n    this.screenName='roles';\r\n    //this.role='ROLE1';\r\n    this.userApi.getRoleScreenPermission(this.user_id,this.screenName,this.role).subscribe(res=>{\r\n      this.rolepermission=res;\r\n      //console.log(this.rolepermission);\r\n if(this.rolepermission){\r\n        this.button_permission=this.rolepermission[0];\r\n        //console.log( this.button_permission);\r\n        }\r\n    });\r\n   \r\n  }\r\n\r\n\r\n  getEmail(row) {\r\n    //console.log(\"row\",row);\r\n    //console.log(row.modNO);\r\n    const navigationExtras: NavigationExtras = {\r\n      queryParams: {\r\n        modifyNo:row.modNO,\r\n        creator:row.inputBy,\r\n        rstatus:row.recordStatus,\r\n        vStatus:row.verifiedOnce,\r\n        inputDate:row.inputTime,\r\n        vDate:row.verifiedStatus,\r\n        authtym:row.verifiedTime,\r\n        authBy:row.verifiedBy,\r\n        emailType:row.emailType\r\n      }\r\n\r\n    };\r\n    //console.log(row.emailType);\r\n      this.router.navigate(['email-summary/email-maintenance'],navigationExtras);\r\n  }\r\n  getAllData() {\r\n    this.accountBlockingService.getAllEmail().subscribe(emaildata => {\r\n      this.emaildata = emaildata;\r\n      //console.log(this.emaildata);\r\n      this.dataSource = new MatTableDataSource(this.emaildata);\r\n      this.dataSource.paginator = this.paginator;\r\n\r\n    })\r\n    let response: any = JSON.stringify(this.dataSource);\r\n    //console.log(response)\r\n    localStorage.setItem(\"EmailSwitch\", \"existing\");\r\n    localStorage.setItem(\"responseFromEmailSummary\", response);\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///","file":"views-email-maintenance-email-maintenance-module-es5.js"}