{"version":3,"sources":["./src/app/views/security-policy/security-policy.component.html","./src/app/views/security-policy/security-policy-routing.module.ts","./src/app/views/security-policy/security-policy.component.css","./src/app/views/security-policy/security-policy.component.ts","./src/app/views/security-policy/security-policy.module.ts","./src/app/views/security-policy/security-policy/security-dto.ts"],"names":[],"mappings":"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","file":"views-security-policy-security-policy-module-es2015.js","sourcesContent":["export default \"<mat-toolbar>Security Policy</mat-toolbar>\\r\\n  \\r\\n  <div class=\\\"navigation\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" style=\\\"margin: 50px;\\\">\\r\\n      <div fxFlex fxFlexFill></div>\\r\\n      <div fxFlex=\\\"55%\\\" fxFlexFill>\\r\\n        <mat-card class=\\\"p-0\\\">\\r\\n          <mat-card-title class=\\\"\\\">\\r\\n           \\r\\n          \\r\\n          </mat-card-title>\\r\\n          <mat-card-content>\\r\\n            <form>\\r\\n              <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\">\\r\\n                <div fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"50\\\" class=\\\"pb-1\\\">\\r\\n    \\r\\n                  <div class=\\\"pb-1\\\">\\r\\n                    <mat-form-field class=\\\"full-width\\\">\\r\\n                      <mat-label>Maximum Invalid Logins</mat-label>\\r\\n                      <input matInput type=\\\"number\\\" (ngModelChange)=\\\"invalidLogin($event, 'invalid')\\\"\\r\\n                        name=\\\"MaxLogins\\\" required \\r\\n                        onkeypress=\\\"return (event.charCode == 8 || event.charCode == 0 || event.charCode == 13) ? null : event.charCode >= 48 && event.charCode <= 57\\\"\\r\\n                        [(ngModel)]=\\\"security.maxInvLogins\\\" \\r\\n                        #MaxLogins=\\\"ngModel\\\"\\r\\n                        \\r\\n                      >\\r\\n                      <!-- <mat-error [hidden]=\\\"appName.valid || appName.pristine\\\">\\r\\n                        Please Choose Application name\\r\\n                    </mat-error> -->\\r\\n                    </mat-form-field>\\r\\n                  </div>\\r\\n    \\r\\n                  <div class=\\\"pb-1\\\">\\r\\n                      <mat-form-field class=\\\"full-width\\\">\\r\\n                          <mat-label>Maximum Password Length</mat-label>\\r\\n                          <input matInput type=\\\"number\\\" (ngModelChange)=\\\"invalidLogin($event, 'length')\\\"\\r\\n                            name=\\\"maxPasswordLength\\\" required \\r\\n                            maxlength=\\\"99\\\"\\r\\n                            onkeypress=\\\"return (event.charCode == 8 || event.charCode == 0 || event.charCode == 13) ? null : event.charCode >= 48 && event.charCode <= 57\\\"\\r\\n                            [(ngModel)]=\\\"security.maxPswdLength\\\" #max_pswd_length=\\\"ngModel\\\"\\r\\n                          >\\r\\n                        </mat-form-field>\\r\\n                  </div>\\r\\n    \\r\\n                  <div class=\\\"pb-1\\\">\\r\\n                    <mat-form-field class=\\\"full-width\\\">\\r\\n                      <mat-label>Minimun Password Length</mat-label>\\r\\n                      <input matInput type=\\\"number\\\" (ngModelChange)=\\\"invalidLogin($event, 'minlength')\\\"\\r\\n                        name=\\\"minPasswordLength\\\" required \\r\\n                        maxlength=\\\"99\\\"\\r\\n                        onkeypress=\\\"return (event.charCode == 8 || event.charCode == 0 || event.charCode == 13) ? null : event.charCode >= 48 && event.charCode <= 57\\\"\\r\\n                        [(ngModel)]=\\\"security.minPswdLength\\\" #min_pswd_length=\\\"ngModel\\\"\\r\\n                      >\\r\\n                      <mat-error [hidden]=\\\"max_pswd_length <= min_pswd_length\\\">\\r\\n                        Minimun Password Length should not be greater than Maximum Password Length.\\r\\n                    </mat-error>\\r\\n                    </mat-form-field>\\r\\n                  </div>\\r\\n                  <!-- ---------- Password Policy Implementation (BEGIN) ---------- -->\\r\\n                  <div class=\\\"pb-1\\\">\\r\\n                    <mat-form-field class=\\\"full-width\\\">\\r\\n                      <mat-label>Password Expiry (In days)</mat-label>\\r\\n                      <input matInput type=\\\"number\\\" (ngModelChange)=\\\"invalidLogin($event, 'expiry')\\\"\\r\\n                        name=\\\"passwordExpiry\\\" required \\r\\n                        onkeypress=\\\"return (event.charCode == 8 || event.charCode == 0 || event.charCode == 13) ? null : event.charCode >= 48 && event.charCode <= 57\\\"\\r\\n                        [(ngModel)]=\\\"security.pswdExpiry\\\" #PasswordExpiry=\\\"ngModel\\\"\\r\\n                      >\\r\\n                    </mat-form-field>\\r\\n                  </div>\\r\\n  \\r\\n                  <div class=\\\"pb-1\\\">\\r\\n                    <mat-form-field class=\\\"full-width\\\">\\r\\n                      <mat-label>Password Expiry Reminder (In days)</mat-label>\\r\\n                      <input matInput type=\\\"number\\\" (ngModelChange)=\\\"invalidLogin($event, 'notification')\\\"\\r\\n                        name=\\\"pwdExpiryWarning\\\" required \\r\\n                        onkeypress=\\\"return (event.charCode == 8 || event.charCode == 0 || event.charCode == 13) ? null : event.charCode >= 48 && event.charCode <= 57\\\"\\r\\n                        [(ngModel)]=\\\"security.notifyPasswordExpiryInDays\\\" #pwdExpiryWarning=\\\"ngModel\\\"\\r\\n                      >\\r\\n                    </mat-form-field>\\r\\n                  </div>\\r\\n  \\r\\n                  <div class=\\\"pb-1\\\">\\r\\n                    <mat-form-field class=\\\"full-width\\\">\\r\\n                      <mat-label>Password Reuse Limit</mat-label>\\r\\n                      <input matInput type=\\\"number\\\" (ngModelChange)=\\\"invalidLogin($event, 'reuse')\\\"\\r\\n                        name=\\\"resusePasswordAfter\\\" required \\r\\n                        onkeypress=\\\"return (event.charCode == 8 || event.charCode == 0 || event.charCode == 13) ? null : event.charCode >= 48 && event.charCode <= 57\\\"\\r\\n                        [(ngModel)]=\\\"security.pswdReuseAft\\\" #resusePasswordAfter=\\\"ngModel\\\"\\r\\n                      >\\r\\n                    </mat-form-field>\\r\\n                  </div>\\r\\n  \\r\\n                  <div class=\\\"pb-1\\\">\\r\\n                      <mat-label>Password Complexity</mat-label>\\r\\n                      <section name=\\\"pwdComplexity\\\">\\r\\n                        <mat-checkbox color=\\\"primary\\\" name=\\\"pswdComplexUcase\\\" \\r\\n                          (change)=\\\"buttonState($event)\\\"\\r\\n                          [(ngModel)]=\\\"security.pswdComplexUcase\\\" #pswdComplexUcase=\\\"ngModel\\\" \\r\\n                          class=\\\"cb-style\\\">Require atleast one Uppercase (A-Z)</mat-checkbox>\\r\\n                        <mat-checkbox color=\\\"primary\\\" name=\\\"pswdComplexLcase\\\" \\r\\n                          (change)=\\\"buttonState($event)\\\"\\r\\n                          [(ngModel)]=\\\"security.pswdComplexLcase\\\" #pswdComplexLcase=\\\"ngModel\\\" \\r\\n                          class=\\\"cb-style\\\">Require atleast one Lowercase (a-z)</mat-checkbox>\\r\\n                        <mat-checkbox color=\\\"primary\\\" name=\\\"pswdComplexNum\\\"\\r\\n                          (change)=\\\"buttonState($event)\\\"\\r\\n                          [(ngModel)]=\\\"security.pswdComplexNum\\\" #pswdComplexNum=\\\"ngModel\\\" \\r\\n                          class=\\\"cb-style\\\">Require atleast one Number (0-9)</mat-checkbox>\\r\\n                        <mat-checkbox color=\\\"primary\\\" name=\\\"pswdComplexSplc\\\" \\r\\n                          (change)=\\\"buttonState($event)\\\"\\r\\n                          [(ngModel)]=\\\"security.pswdComplexSplc\\\" #pswdComplexSplc=\\\"ngModel\\\" \\r\\n                          class=\\\"cb-style\\\">Require atleast one Special Characters (@,:;'\\\"$#%^&*!?...)</mat-checkbox>\\r\\n  \\r\\n                      \\r\\n                      </section>\\r\\n                  </div>\\r\\n                  <!-- ---------- Password Policy Implementation (END) ---------- -->\\r\\n                </div>\\r\\n              </div>\\r\\n          \\r\\n              <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" fxLayoutGap=\\\"10px\\\">\\r\\n                <button mat-raised-button color=\\\"primary\\\" class=\\\"text-center full-width\\\"\\r\\n                (click)=\\\"saveData()\\\" [disabled]=\\\"!enablesubmit\\\">Submit</button>\\r\\n                <button mat-raised-button color=\\\"warn\\\" type=\\\"reset\\\" class=\\\"text-center full-width\\\">Reset</button>\\r\\n                <!-- <button mat-raised-button color=\\\"warn\\\" class=\\\"text-center full-width\\\" (click)=\\\"cancelData()\\\">Reset</button> -->\\r\\n              </div>\\r\\n            </form>\\r\\n          </mat-card-content>\\r\\n        </mat-card>\\r\\n      </div>\\r\\n      <div fxFlex fxFlexFill></div>\\r\\n    </div>\\r\\n  \\r\\n    <div fxLayout=\\\"row\\\" *ngIf>\\r\\n      <div fxFlex></div>\\r\\n      <div fxFlex=\\\"95\\\">\\r\\n        <mat-card>\\r\\n          <mat-card-title>\\r\\n    \\r\\n          </mat-card-title>\\r\\n          <mat-card-content>\\r\\n            <div fxLayout=\\\"row\\\">\\r\\n    \\r\\n              <table id=\\\"audittrail\\\">\\r\\n                <tr>\\r\\n                  <th>Status:</th>\\r\\n                  <td>\\r\\n                    <mat-chip>{{security.authStatus}}</mat-chip>\\r\\n                    <!-- <mat-form-field appearance=\\\"fill\\\">\\r\\n                      <mat-label>Status</mat-label>\\r\\n                      <input matInput type=\\\"text\\\" placeholder=\\\"\\\" #exSys>\\r\\n                      <mat-icon matSuffix>person</mat-icon>\\r\\n                    </mat-form-field> -->\\r\\n                  </td>\\r\\n                  <th>Created By:</th>\\r\\n                  <td>\\r\\n                      <mat-chip>{{security.modifiedBy}}</mat-chip>\\r\\n                  </td>\\r\\n                  <th>Authorized By:</th>\\r\\n                  <td>\\r\\n                      <mat-chip>{{security.authorizedBy}}</mat-chip>\\r\\n                  </td>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                  <th>Modification No:</th>\\r\\n                  <td>\\r\\n                      <mat-chip>{{security.version}}</mat-chip>\\r\\n                  </td>\\r\\n                  <th>Creation Date:</th>\\r\\n                  <td>\\r\\n                      <mat-chip>{{security.modifiedTime |  date: 'MM/dd/yyyy, h:mm a'}}</mat-chip>\\r\\n                  </td>\\r\\n                  <th>Authorization Date:</th>\\r\\n                  <td>\\r\\n                      <mat-chip>{{security.authorizedTime | date: 'MM/dd/yyyy, h:mm a'}}</mat-chip>\\r\\n                  </td>\\r\\n                </tr>\\r\\n              </table>\\r\\n            </div>\\r\\n          </mat-card-content>\\r\\n        </mat-card>\\r\\n      </div>\\r\\n      <div fxFlex></div>\\r\\n    </div>\\r\\n  \"","import { Routes } from '@angular/router';\r\nimport { SecurityPolicyComponent } from './security-policy.component';\r\n\r\nexport const policyRoutes: Routes = [\r\n  {\r\n      path:'',\r\n      component:SecurityPolicyComponent\r\n  }\r\n];","export default \".navigation {\\r\\n   height: 350px;\\r\\n\\r\\n}\\r\\n\\r\\n#audittrail {\\r\\n    border-collapse: collapse;\\r\\n    width: 100%;\\r\\n  }\\r\\n\\r\\n#audittrail td, #audittrail th {\\r\\n    border: 1px solid #ddd;\\r\\n    padding: 8px;\\r\\n    text-align: center;\\r\\n  }\\r\\n\\r\\n.cb-style{\\r\\n   \\r\\n    vertical-align: bottom;\\r\\n    position: relative;\\r\\n    top: -1px;\\r\\n    *overflow: hidden;\\r\\n  }\\r\\n\\r\\n#audittrail tr:nth-child(even){background-color: #f2f2f2;}\\r\\n\\r\\n#audittrail th {\\r\\n    padding-top: 12px;\\r\\n    padding-bottom: 12px;\\r\\n    text-align: left;\\r\\n    background-color: #10174C;\\r\\n    color: white;\\r\\n  }\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdmlld3Mvc2VjdXJpdHktcG9saWN5L3NlY3VyaXR5LXBvbGljeS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0dBQ0csYUFBYTs7QUFFaEI7O0FBRUE7SUFDSSx5QkFBeUI7SUFDekIsV0FBVztFQUNiOztBQUVBO0lBQ0Usc0JBQXNCO0lBQ3RCLFlBQVk7SUFDWixrQkFBa0I7RUFDcEI7O0FBRUE7O0lBRUUsc0JBQXNCO0lBQ3RCLGtCQUFrQjtJQUNsQixTQUFTO0tBQ1QsZ0JBQWlCO0VBQ25COztBQUVBLCtCQUErQix5QkFBeUIsQ0FBQzs7QUFFekQ7SUFDRSxpQkFBaUI7SUFDakIsb0JBQW9CO0lBQ3BCLGdCQUFnQjtJQUNoQix5QkFBeUI7SUFDekIsWUFBWTtFQUNkIiwiZmlsZSI6InNyYy9hcHAvdmlld3Mvc2VjdXJpdHktcG9saWN5L3NlY3VyaXR5LXBvbGljeS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm5hdmlnYXRpb24ge1xyXG4gICBoZWlnaHQ6IDM1MHB4O1xyXG5cclxufVxyXG5cclxuI2F1ZGl0dHJhaWwge1xyXG4gICAgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gIH1cclxuICBcclxuICAjYXVkaXR0cmFpbCB0ZCwgI2F1ZGl0dHJhaWwgdGgge1xyXG4gICAgYm9yZGVyOiAxcHggc29saWQgI2RkZDtcclxuICAgIHBhZGRpbmc6IDhweDtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICB9XHJcblxyXG4gIC5jYi1zdHlsZXtcclxuICAgXHJcbiAgICB2ZXJ0aWNhbC1hbGlnbjogYm90dG9tO1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgdG9wOiAtMXB4O1xyXG4gICAgKm92ZXJmbG93OiBoaWRkZW47XHJcbiAgfVxyXG4gIFxyXG4gICNhdWRpdHRyYWlsIHRyOm50aC1jaGlsZChldmVuKXtiYWNrZ3JvdW5kLWNvbG9yOiAjZjJmMmYyO31cclxuICBcclxuICAjYXVkaXR0cmFpbCB0aCB7XHJcbiAgICBwYWRkaW5nLXRvcDogMTJweDtcclxuICAgIHBhZGRpbmctYm90dG9tOiAxMnB4O1xyXG4gICAgdGV4dC1hbGlnbjogbGVmdDtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICMxMDE3NEM7XHJcbiAgICBjb2xvcjogd2hpdGU7XHJcbiAgfSJdfQ== */\"","import { Component, OnInit, ChangeDetectorRef } from '@angular/core';\r\n\r\n\r\n\r\n\r\nimport swal from 'sweetalert2';\r\nimport { SecurityDto } from './security-policy/security-dto';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { User } from 'src/app/shared/models/user';\r\nimport { SecurityPolicyService } from './security-policy/security-policy.service';\r\n\r\n@Component({\r\n  selector: 'app-security-policy',\r\n  templateUrl: './security-policy.component.html',\r\n  styleUrls: ['./security-policy.component.css']\r\n})\r\nexport class SecurityPolicyComponent implements OnInit {\r\n\r\n  constructor(private ref: SecurityPolicyService,private cdr:ChangeDetectorRef,\r\n    private toast:ToastrService) { }\r\n  security = new SecurityDto();\r\n  result = false;\r\n  response: any;\r\n  validationResponse: any;\r\n  // displayButton: boolean = true;\r\n  currentUser: any;\r\n  checkedlist:any=[];\r\n  enablesubmit:boolean=false\r\n  invalidLogin(event, type)\r\n  {\r\n    console.log('test');\r\n    console.log(event);\r\n    console.log(this.security);\r\n    let localdata:any = localStorage.getItem('securitydata');\r\n    localdata = JSON.parse(localdata);\r\n    console.log(localdata);   \r\n    this.enablesubmit=false;\r\n    if(type==\"invalid\" && this.security.maxInvLogins != localdata.maxInvLogins)\r\n   {\r\n    this.enablesubmit=true;\r\n    console.log(this.security.maxInvLogins,localdata.maxInvLogins);\r\n  }\r\n \r\n  else if(type==\"length\" && this.security.maxPswdLength != localdata.maxPswdLength)\r\n  {\r\n   this.enablesubmit=true;\r\n   console.log(this.security.maxPswdLength,localdata.maxPswdLength);\r\n\r\n\r\n }\r\n else if(type==\"minlength\" && this.security.minPswdLength != localdata.minPswdLength)\r\n  {\r\n   this.enablesubmit=true;\r\n   console.log(this.security.minPswdLength,localdata.minPswdLength);\r\n}\r\nelse if(type==\"expiry\" && this.security.pswdExpiry != localdata.pswdExpiry)\r\n{\r\n this.enablesubmit=true;\r\n console.log(this.security.pswdExpiry,localdata.pswdExpiry);\r\n}\r\nelse if(type==\"notification\" && this.security.notifyPasswordExpiryInDays != localdata.notifyPasswordExpiryInDays)\r\n{\r\n this.enablesubmit=true;\r\n console.log(this.security.notifyPasswordExpiryInDays,localdata.notifyPasswordExpiryInDays);\r\n}\r\nelse if(type==\"reuse\" && this.security.pswdReuseAft != localdata.pswdReuseAft)\r\n{\r\n this.enablesubmit=true;\r\n console.log(this.security.pswdReuseAft,localdata.pswdReuseAf);\r\n}\r\n}\r\n  // checkboxes:any;\r\n  \r\n  ngOnInit() {\r\n   this.fetchSecurityPolicyService();\r\n    // this.checkboxes = [{'name':'Require atleast one Uppercase (A-Z)', 'id':false, 'db':'pswd_complex_ucase'}, \r\n    //                       {'name':'Require atleast one Lowercase (a-z)', 'id':false, 'db':'pswd_complex_lcase'},\r\n    //                       {'name':'Require atleast one Number (0-9)', 'id':false, 'db':'pswd_complex_num'},\r\n    //                       {'name':'Require atleast one Special Characters (@,:;\\'\"$#%^&*!?...)', 'id':false, 'db':'pswd_complex_splc'}];\r\n\r\n    this.currentUser = sessionStorage.getItem('User_id');\r\n  }\r\n\r\n /* buttonState(event) {\r\n     console.log('chk', this.checkedlist,event.checked);\r\n    if(event.checked)\r\n      this.checkedlist.push('checked');\r\n    else\r\n      this.checkedlist.splice(0,1); \r\n  } */\r\n\r\n  buttonState(event) {\r\n    console.log('chk', this.checkedlist,event.checked);\r\n   if(event.checked)\r\n     this.checkedlist.push('checked');\r\n   else\r\n     this.checkedlist.splice(0,1); \r\n   console.log(this.security);\r\n   let localdata:any = localStorage.getItem('securitydata');\r\n   localdata = JSON.parse(localdata);\r\n   if(localdata.pswdComplexUcase  != this.security.pswdComplexUcase ||\r\n     localdata.pswdComplexLcase   != this.security.pswdComplexLcase ||\r\n     localdata.pswdComplexNum     != this.security.pswdComplexNum  ||\r\n     localdata.pswdComplexSplc    != this.security.pswdComplexSplc )\r\n     {\r\n      this.enablesubmit=true;\r\n     }\r\n     if(!this.checkedlist.length)\r\n    //  if(this.security.pswdComplexUcase == \"false\" &&\r\n    //    this.security.pswdComplexLcase ==\"false\" &&\r\n    //    this.security.pswdComplexNum ==\"false\" &&\r\n    //   this.security.pswdComplexSplc ==\"false\")\r\n    //   {\r\n       this.enablesubmit=false;\r\n    //   }\r\n\r\n }\r\n\r\n\r\n  saveData() {\r\n    console.log(this.security);\r\n    // this.security.entityCode = \"123\";\r\n    // if(this.security.minPswdLength > this.security.maxPswdLength) {\r\n    //   // console.log(this.security.min_pswd_length);\r\n    //   // console.log(this.security.max_pswd_length);\r\n    //   swal.fire(\"Min Password Length should not be greater than Max Password Length\");\r\n    // }\r\n    // else{\r\n      if(this.security.minPswdLength > this.security.maxPswdLength) {\r\n        console.log(this.security.minPswdLength);\r\n        console.log(this.security.maxPswdLength);\r\n        this.toast.error(`Min Password Length should not be greater than Max Password Length`, '', {\r\n          timeOut: 5000,\r\n          progressBar: true,\r\n          tapToDismiss: true,\r\n          closeButton: true,\r\n          easeTime: 300,\r\n          extendedTimeOut: 2000\r\n        });\r\n      }\r\n      else if(this.security.pswdExpiry < this.security.notifyPasswordExpiryInDays) {\r\n        this.toast.error(`Notification on password expiry days can not be greater than password expiry days`, '', {\r\n          timeOut: 5000,\r\n          progressBar: true,\r\n          tapToDismiss: true,\r\n          closeButton: true,\r\n          easeTime: 300,\r\n          extendedTimeOut: 2000\r\n        });\r\n      }\r\n      else if(this.security.minPswdLength < 4 || this.security.maxPswdLength < 4) {\r\n        this.toast.error(`Min Password length and Max Password length should not be less than 4`, '', {\r\n          timeOut: 5000,\r\n          progressBar: true,\r\n          tapToDismiss: true,\r\n          closeButton: true,\r\n          easeTime: 300,\r\n          extendedTimeOut: 2000\r\n        });\r\n      }\r\n      else{\r\n      this.security.modifiedBy = this.currentUser;\r\n      console.log(this.security);\r\n      this.ref.saveDataSecurity(this.security).subscribe(data => {\r\n        if (data == true) {\r\n          // this.response = \"Save Successful!\";\r\n          this.validationResponse = null;\r\n          this.toast.success(`Save Successful`,'',  {\r\n            timeOut: 3000,\r\n            progressBar:true,\r\n            tapToDismiss:true,\r\n            closeButton:true,\r\n            easeTime:300,\r\n            extendedTimeOut:1000\r\n          });\r\n           //added by vidya for issue id 583\r\n           this.enablesubmit=false;\r\n        //  this.getInitializedRecords();\r\n        }\r\n      });\r\n    }\r\n  }\r\n  \r\n  cancelData() {\r\n    this.security = new SecurityDto();\r\n    console.log(this.security)\r\n  }\r\n\r\n  fetchSecurityPolicyService() {\r\n    this.ref.fetchSecurityPolicyService().subscribe(resp => {\r\n      if(resp)\r\n      this.security = resp;\r\n      if (this.security.pswdComplexUcase == \"true\") {\r\n        this.security.pswdComplexUcase = true;\r\n        this.checkedlist.push('checked')\r\n      }\r\n      if (this.security.pswdComplexUcase== \"false\") {\r\n        this.security.pswdComplexUcase = false;\r\n        \r\n      }\r\n      if (this.security.pswdComplexLcase == \"true\") {\r\n  \r\n        this.security.pswdComplexLcase = true;\r\n        this.checkedlist.push('checked')\r\n      }\r\n      if (this.security.pswdComplexLcase == \"false\") {\r\n        this.security.pswdComplexLcase = false;\r\n      }\r\n      if(this.security.pswdComplexNum==\"true\")\r\n      {\r\n        this.security.pswdComplexNum=true;\r\n        this.checkedlist.push('checked')\r\n      }\r\n      if(this.security.pswdComplexNum==\"false\")\r\n      {\r\n        this.security.pswdComplexNum=false;\r\n      }\r\n      if(this.security.pswdComplexSplc==\"true\")\r\n      {\r\n        this.security.pswdComplexSplc=true;\r\n        this.checkedlist.push('checked')\r\n      }\r\n      if(this.security.pswdComplexSplc==\"false\")\r\n      {\r\n        this.security.pswdComplexSplc=false;\r\n      }\r\n      let respdata:any = resp;\r\n      localStorage.setItem('securitydata', JSON.stringify(respdata));\r\n      console.log(this.security);\r\n\r\n      \r\n      this.cdr.markForCheck();\r\n     \r\n    });\r\n  \r\n  }\r\n \r\n\r\n  // getInitializedRecords() {\r\n  //   this.ref.getSecurityPolicyForAuth().subscribe(resp=>{console.log(resp)\r\n  //     if(resp.length>0)\r\n  //     this.security = resp[0];\r\n  //     this.cdr.markForCheck();\r\n  //   });\r\n  // }\r\n}\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { SecurityPolicyComponent } from './security-policy.component';\r\nimport { RouterModule } from '@angular/router';\r\nimport { policyRoutes } from './security-policy-routing.module';\r\nimport { SharedModule } from 'src/app/shared/shared.module';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\n\r\n@NgModule({\r\n  declarations: [SecurityPolicyComponent],\r\n  imports: [\r\n    CommonModule,\r\n    SharedModule,\r\n    FlexLayoutModule,\r\n    RouterModule.forChild(policyRoutes)\r\n  ]\r\n})\r\nexport class SecurityPolicyModule { }\r\n","import { Timestamp } from 'rxjs/internal/operators/timestamp';\r\n\r\nexport class SecurityDto {\r\n    clientId: number;\r\n    maxInvLogins: number;\r\n    maxPswdLength:number;\r\n    minPswdLength:number;\r\n    pswdExpiry:number;\r\n    notifyPasswordExpiryInDays:number;\r\n    pswdReuseAft:number;\r\n    pswdComplexLcase:any;\r\n    pswdComplexNum:any;\r\n    pswdComplexSplc:any;\r\n    pswdComplexUcase:any;\r\n    authStatus:string;\r\n    authorizedBy:string;\r\n    authorizedTime:Date;\r\n    modifiedBy:string;\r\n    modifiedTime:Date;\r\n    pswdComplexity:string;\r\n    version:number;\r\n}\r\n"],"sourceRoot":"webpack:///"}