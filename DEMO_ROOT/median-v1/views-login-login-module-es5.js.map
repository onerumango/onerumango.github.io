{"version":3,"sources":["src/app/views/login/login.component.html","src/app/shared/directives/app-password.directive.ts","src/app/shared/directives/dropdown-anchor.directive.ts","src/app/shared/directives/dropdown-link.directive.ts","src/app/shared/directives/dropdown.directive.ts","src/app/shared/directives/font-size.directive.ts","src/app/shared/directives/scroll-to.directive.ts","src/app/shared/directives/shared-directives.module.ts","src/app/shared/directives/uppercase.directive.ts","src/app/views/login/login-routing.module.ts","src/app/views/login/login.component.scss","src/app/views/login/login.component.ts","src/app/views/login/login.module.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,gkKAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACKf,QAAa,oBAAb;AAGE,oCAAoB,EAApB,EAAkC;AAAA;;AAAd,aAAA,EAAA,GAAA,EAAA;AAFZ,aAAA,MAAA,GAAS,KAAT;AAGN,aAAK,KAAL;AACD;;AALH;AAAA;AAAA,+BAOS,IAPT,EAO0B;AACtB,eAAK,MAAL,GAAc,CAAC,KAAK,MAApB;;AACA,cAAI,KAAK,MAAT,EAAiB;AACf,iBAAK,EAAL,CAAQ,aAAR,CAAsB,YAAtB,CAAmC,MAAnC,EAA2C,MAA3C;AACA,YAAA,IAAI,CAAC,SAAL,GAAiB,eAAjB;AACD,WAHD,MAGO;AACL,iBAAK,EAAL,CAAQ,aAAR,CAAsB,YAAtB,CAAmC,MAAnC,EAA2C,UAA3C;AACA,YAAA,IAAI,CAAC,SAAL,GAAiB,eAAjB;AACD;AACF;AAhBH;AAAA;AAAA,gCAkBO;AAAA;;AACH,cAAM,MAAM,GAAG,KAAK,EAAL,CAAQ,aAAR,CAAsB,UAArC;AACA,cAAM,IAAI,GAAG,QAAQ,CAAC,aAAT,CAAuB,MAAvB,CAAb;AACA,UAAA,IAAI,CAAC,SAAL;AACA,UAAA,IAAI,CAAC,gBAAL,CAAsB,OAAtB,EAA+B,UAAA,KAAK,EAAG;AACrC,YAAA,KAAI,CAAC,MAAL,CAAY,IAAZ;AACD,WAFD;AAGA,UAAA,MAAM,CAAC,WAAP,CAAmB,IAAnB;AACD;AA1BH;;AAAA;AAAA,OAAA;;;;cAG0B,0CAAA,CAAA,YAAA;;;;AAHb,IAAA,oBAAoB,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAHhC,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU;AACT,MAAA,QAAQ,EAAE;AADD,KAAV,CAGgC,E,uEAGP,0CAAA,CAAA,YAAA,C,EAHO,CAAA,EAApB,oBAAoB,CAApB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACCb,QAAa,uBAAb;AAII,uCAA4C,OAA5C,EAA0E;AAAA;;AACxE,aAAK,OAAL,GAAe,OAAf;AACD;;AANL;AAAA;AAAA,gCASY,CATZ,EASkB;AACZ,eAAK,OAAL,CAAa,MAAb;AACD;AAXL;;AAAA;AAAA,OAAA;;;;cAIyD,qDAAA,CAAA,uBAAA,C;AAAqB,QAAA,UAAA,EAAA,CAAA;AAAA,UAAA,IAAA,EAA5D,0CAAA,CAAA,QAAA,CAA4D;AAAtD,UAAA,IAAA,EAAA,CAAC,qDAAA,CAAA,uBAAA,CAAD;AAAsD,SAAA;;;;AAK1E,IAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CADC,MAAA,CAAA,0CAAA,CAAA,cAAA,CAAA,CAAA,CAAa,OAAb,EAAsB,CAAC,QAAD,CAAtB,CACD,E,yEAAA,E,+EAAA,E,6EAAA,CAAA,E,iCAAA,E,SAAA,EAEC,IAFD;AATS,IAAA,uBAAuB,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAHnC,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU;AACT,MAAA,QAAQ,EAAE;AADD,KAAV,CAGmC,EAIlB,kCAAA,CAAA,SAAA,CAAA,CAAA,CAAA,EAAA,MAAA,CAAA,0CAAA,CAAA,QAAA,CAAA,CAAA,CAAO,qDAAA,CAAA,uBAAA,CAAP,CAAA,CAJkB,E,uEAIqB,qDAAA,CAAA,uBAAA,C,EAJrB,CAAA,EAAvB,uBAAuB,CAAvB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACGb,QAAa,qBAAb;AAoBI,qCAAiD,GAAjD,EAA0E;AAAA;;AACxE,aAAK,GAAL,GAAW,GAAX;AACD;;AAtBL;AAAA;AAAA,mCAwBmB;AACb,eAAK,GAAL,CAAS,OAAT,CAAiB,IAAjB;AACD;AA1BL;AAAA;AAAA,sCA4BsB;AAChB,eAAK,GAAL,CAAS,WAAT,CAAqB,IAArB;AACD;AA9BL;AAAA;AAAA,iCAgCiB;AACX,eAAK,IAAL,GAAY,CAAC,KAAK,IAAlB;AACD;AAlCL;AAAA;AAAA,4BAMY;AACN,iBAAO,KAAK,KAAZ;AACD,SARL;AAAA,0BAUa,KAVb,EAU2B;AACrB,eAAK,KAAL,GAAa,KAAb;;AACA,cAAI,KAAJ,EAAW;AACT,iBAAK,GAAL,CAAS,eAAT,CAAyB,IAAzB;AACD;AACF;AAfL;;AAAA;AAAA,OAAA;;;;cAoB0D,gDAAA,CAAA,sBAAA,C;AAAoB,QAAA,UAAA,EAAA,CAAA;AAAA,UAAA,IAAA,EAAtD,0CAAA,CAAA,QAAA,CAAsD;AAAhD,UAAA,IAAA,EAAA,CAAC,gDAAA,CAAA,sBAAA,CAAD;AAAgD,SAAA;;;;AAlBnE,IAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAAR,MAAA,CAAA,0CAAA,CAAA,OAAA,CAAA,CAAA,EAAQ,E,uEAAA,CAAA,E,+BAAA,E,OAAA,E,KAAkB,CAAlB;AAIP,IAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAFC,MAAA,CAAA,0CAAA,CAAA,aAAA,CAAA,CAAA,CAAY,YAAZ,CAED,EADC,MAAA,CAAA,0CAAA,CAAA,OAAA,CAAA,CAAA,EACD,E,wEAAA,E,gFAAA,CAAA,E,+BAAA,E,MAAA,EAEC,IAFD;AANS,IAAA,qBAAqB,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAHjC,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU;AACT,MAAA,QAAQ,EAAE;AADD,KAAV,CAGiC,EAoBV,kCAAA,CAAA,SAAA,CAAA,CAAA,CAAA,EAAA,MAAA,CAAA,0CAAA,CAAA,QAAA,CAAA,CAAA,CAAO,gDAAA,CAAA,sBAAA,CAAP,CAAA,CApBU,E,uEAoBwB,gDAAA,CAAA,sBAAA,C,EApBxB,CAAA,EAArB,qBAAqB,CAArB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAb,QAAa,oBAAb;AA2CI,oCAAqB,MAArB,EAAmC;AAAA;;AAAd,aAAA,MAAA,GAAA,MAAA;AA1Cb,aAAA,QAAA,GAAyC,EAAzC;AA0C+B;;AA3C3C;AAAA;AAAA,wCAK2B,QAL3B,EAK0D;AACpD,eAAK,QAAL,CAAc,OAAd,CAAsB,UAAC,IAAD,EAAgC;AACpD,gBAAI,IAAI,KAAK,QAAb,EAAuB;AACrB,cAAA,IAAI,CAAC,IAAL,GAAY,KAAZ;AACD;AACF,WAJD;AAKD;AAXL;AAAA;AAAA,gCAamB,IAbnB,EAa8C;AACxC,eAAK,QAAL,CAAc,IAAd,CAAmB,IAAnB;AACD;AAfL;AAAA;AAAA,oCAiBuB,IAjBvB,EAiBkD;AAC5C,cAAM,KAAK,GAAG,KAAK,QAAL,CAAc,OAAd,CAAsB,IAAtB,CAAd;;AACA,cAAI,KAAK,KAAK,CAAC,CAAf,EAAkB;AAChB,iBAAK,QAAL,CAAc,MAAd,CAAqB,KAArB,EAA4B,CAA5B;AACD;AACF;AAtBL;AAAA;AAAA,iCAwBiB;AACX,iBAAO,KAAK,MAAL,CAAY,GAAnB;AACD;AA1BL;AAAA;AAAA,mCA4BmB;AAAA;;AACb,eAAK,OAAL,GAAe,KAAK,MAAL,CAAY,MAAZ,CAAmB,IAAnB,CAAwB,MAAA,CAAA,2CAAA,CAAA,QAAA,CAAA,CAAA,CAAO,UAAA,KAAK;AAAA,mBAAI,KAAK,YAAY,4CAAA,CAAA,eAAA,CAArB;AAAA,WAAZ,CAAxB,EAAyE,SAAzE,CAAmF,UAAC,KAAD,EAAyB;AACzH,YAAA,MAAI,CAAC,QAAL,CAAc,OAAd,CAAsB,UAAC,IAAD,EAAgC;AACpD,kBAAI,IAAI,CAAC,KAAT,EAAgB;AACd,oBAAM,QAAQ,GAAG,MAAI,CAAC,MAAL,EAAjB;;AACA,oBAAM,UAAU,GAAG,QAAQ,CAAC,KAAT,CAAe,GAAf,CAAnB;;AACA,oBAAI,UAAU,CAAC,OAAX,CAAoB,IAAI,CAAC,KAAzB,IAAmC,CAAvC,EAA0C;AACxC,kBAAA,IAAI,CAAC,IAAL,GAAY,IAAZ;;AACA,kBAAA,MAAI,CAAC,eAAL,CAAqB,IAArB;AACD;AACF;AACF,aATD;AAUD,WAXc,CAAf;AAYD;AAzCL;;AAAA;AAAA,OAAA;;;;cA2CiC,4CAAA,CAAA,QAAA;;;;AA3CpB,IAAA,oBAAoB,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAHhC,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU;AACT,MAAA,QAAQ,EAAE;AADD,KAAV,CAGgC,E,uEA2CA,4CAAA,CAAA,QAAA,C,EA3CA,CAAA,EAApB,oBAAoB,CAApB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACNb,QAAa,iBAAb;AACE,iCAA2C,QAA3C,EAAqE,EAArE,EAAmF;AAAA;;AAAxC,aAAA,QAAA,GAAA,QAAA;AAA0B,aAAA,EAAA,GAAA,EAAA;AAAmB;;AAD1F;AAAA;AAAA,mCAEU;AACN,eAAK,EAAL,CAAQ,aAAR,CAAsB,QAAtB,GAAiC,KAAK,QAAtC;AACD;AAJH;;AAAA;AAAA,OAAA;;;;;;gBACgB,0CAAA,CAAA,WAAA,C;AAAS,UAAA,IAAA,EAAA,CAAC,UAAD;;;cAAkD,0CAAA,CAAA,YAAA;;;;AAD9D,IAAA,iBAAiB,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAD7B,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU;AAAE,MAAA,QAAQ,EAAE;AAAZ,KAAV,CAC6B,EACd,kCAAA,CAAA,SAAA,CAAA,CAAA,CAAA,EAAA,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU,UAAV,CAAA,CADc,E,+EAC6C,0CAAA,CAAA,YAAA,C,EAD7C,CAAA,EAAjB,iBAAiB,CAAjB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAb,QAAa,iBAAb;AACE,iCAA2C,KAA3C,EAAkE,EAAlE,EAAgF;AAAA;;AAArC,aAAA,KAAA,GAAA,KAAA;AAAuB,aAAA,EAAA,GAAA,EAAA;AAAmB;;AADvF;AAAA;AAAA,mCAGU,CAAK;AAHf;AAAA;AAAA,2CAKkB;AACd;AACA,cAAI,IAAI,CAAC,WAAT,EAAsB,OAAO,IAAI,CAAC,WAAZ,CAFR,CAGd;;AACA,cAAI,QAAQ,CAAC,eAAT,IAA4B,QAAQ,CAAC,eAAT,CAAyB,SAAzD,EACE,OAAO,QAAQ,CAAC,eAAT,CAAyB,SAAhC,CALY,CAMd;;AACA,cAAI,QAAQ,CAAC,IAAT,CAAc,SAAlB,EAA6B,OAAO,QAAQ,CAAC,IAAT,CAAc,SAArB;AAC7B,iBAAO,CAAP;AACD;AAdH;AAAA;AAAA,qCAgBe,GAhBf,EAgBkB;AACd,cAAI,GAAG,GAAG,QAAQ,CAAC,cAAT,CAAwB,GAAxB,CAAV;AACA,cAAI,CAAC,GAAG,GAAG,CAAC,SAAZ;AACA,cAAI,IAAI,GAAQ,GAAhB;;AACA,iBAAO,IAAI,CAAC,YAAL,IAAqB,IAAI,CAAC,YAAL,IAAqB,QAAQ,CAAC,IAA1D,EAAgE;AAC9D,YAAA,IAAI,GAAG,IAAI,CAAC,YAAZ;AACA,YAAA,CAAC,IAAI,IAAI,CAAC,SAAV;AACD;;AACD,iBAAO,CAAP;AACD;AAzBH;AAAA;AAAA,uCA4Bc;AACV,cAAG,CAAC,KAAK,KAAT,EACE;AACF,cAAI,MAAM,GAAG,KAAK,gBAAL,EAAb;AACA,cAAI,KAAK,GAAG,KAAK,YAAL,CAAkB,KAAK,KAAvB,CAAZ;AACA,cAAI,QAAQ,GAAG,KAAK,GAAG,MAAR,GAAiB,KAAK,GAAG,MAAzB,GAAkC,MAAM,GAAG,KAA1D;;AACA,cAAI,QAAQ,GAAG,GAAf,EAAoB;AAClB,YAAA,QAAQ,CAAC,CAAD,EAAI,KAAJ,CAAR;AACA;AACD;;AACD,cAAI,KAAK,GAAG,IAAI,CAAC,KAAL,CAAW,QAAQ,GAAG,EAAtB,CAAZ;AACA,cAAI,KAAK,IAAI,EAAb,EAAiB,KAAK,GAAG,EAAR;AACjB,cAAI,IAAI,GAAG,IAAI,CAAC,KAAL,CAAW,QAAQ,GAAG,EAAtB,CAAX;AACA,cAAI,KAAK,GAAG,KAAK,GAAG,MAAR,GAAiB,MAAM,GAAG,IAA1B,GAAiC,MAAM,GAAG,IAAtD;AACA,cAAI,KAAK,GAAG,CAAZ;;AACA,cAAI,KAAK,GAAG,MAAZ,EAAoB;AAClB,iBAAK,IAAI,CAAC,GAAG,MAAb,EAAqB,CAAC,GAAG,KAAzB,EAAgC,CAAC,IAAI,IAArC,EAA2C;AACzC,cAAA,UAAU,CAAC,wBAAwB,KAAxB,GAAgC,GAAjC,EAAsC,KAAK,GAAG,KAA9C,CAAV;AACA,cAAA,KAAK,IAAI,IAAT;AACA,kBAAI,KAAK,GAAG,KAAZ,EAAmB,KAAK,GAAG,KAAR;AACnB,cAAA,KAAK;AACN;;AACD;AACD;;AACD,eAAK,IAAI,CAAC,GAAG,MAAb,EAAqB,CAAC,GAAG,KAAzB,EAAgC,CAAC,IAAI,IAArC,EAA2C;AACzC,YAAA,UAAU,CAAC,wBAAwB,KAAxB,GAAgC,GAAjC,EAAsC,KAAK,GAAG,KAA9C,CAAV;AACA,YAAA,KAAK,IAAI,IAAT;AACA,gBAAI,KAAK,GAAG,KAAZ,EAAmB,KAAK,GAAG,KAAR;AACnB,YAAA,KAAK;AACN;;AACD,iBAAO,KAAP;AACD;AA3DH;;AAAA;AAAA,OAAA;;;;;;gBACgB,0CAAA,CAAA,WAAA,C;AAAS,UAAA,IAAA,EAAA,CAAC,UAAD;;;cAA+C,0CAAA,CAAA,YAAA;;;;AA2BtE,IAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CADC,MAAA,CAAA,0CAAA,CAAA,cAAA,CAAA,CAAA,CAAa,OAAb,EAAsB,CAAC,QAAD,CAAtB,CACD,E,yEAAA,E,yEAAA,E,6EAAA,CAAA,E,2BAAA,E,cAAA,EA+BC,IA/BD;AA5BW,IAAA,iBAAiB,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAD7B,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU;AAAE,MAAA,QAAQ,EAAE;AAAZ,KAAV,CAC6B,EACd,kCAAA,CAAA,SAAA,CAAA,CAAA,CAAA,EAAA,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU,UAAV,CAAA,CADc,E,+EAC0C,0CAAA,CAAA,YAAA,C,EAD1C,CAAA,EAAjB,iBAAiB,CAAjB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACSb,QAAM,UAAU,GAAG,CACjB,iDAAA,CAAA,mBAAA,CADiB,EAEjB,iDAAA,CAAA,mBAAA,CAFiB,EAGjB,gDAAA,CAAA,sBAAA,CAHiB,EAIjB,uDAAA,CAAA,yBAAA,CAJiB,EAKjB,qDAAA,CAAA,uBAAA,CALiB,EAMjB,iDAAA,CAAA,oBAAA,CANiB,EAOjB,oDAAA,CAAA,sBAAA,CAPiB,CAAnB;;AAiBA,QAAa,sBAAb;AAAA;AAAA,KAAA;;AAAa,IAAA,sBAAsB,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAPlC,MAAA,CAAA,0CAAA,CAAA,UAAA,CAAA,CAAA,CAAS;AACR,MAAA,OAAO,EAAE,CACP,4CAAA,CAAA,cAAA,CADO,CADD;AAIR,MAAA,YAAY,EAAE,UAJN;AAKR,MAAA,OAAO,EAAE;AALD,KAAT,CAOkC,CAAA,EAAtB,sBAAsB,CAAtB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPb,QAAa,kBAAkB,GAAA,oBAA/B;AAOI,kCAA4B,GAA5B,EAAqD,SAArD,EAAyE;AAAA;;AAA7C,aAAA,GAAA,GAAA,GAAA;AAAyB,aAAA,SAAA,GAAA,SAAA;AAAyB;AAE9E;;;AATJ;AAAA;AAAA,kCAWc,GAXd,EAWgC;AACxB,cAAM,OAAO,GAAG,GAAG,CAAC,OAApB;AACA,cAAM,GAAG,GAAG,GAAG,CAAC,GAAhB,CAFwB,CAG1B;;AACE,cAAM,KAAK,GAAG,KAAK,GAAL,CAAS,aAAT,CAAuB,KAAvB,CAA6B,WAA7B,EAAd;;AACA,eAAK,SAAL,CAAe,WAAf,CAA2B,KAAK,GAAL,CAAS,aAApC,EAAmD,OAAnD,EAA4D,KAA5D;;AACA,eAAK,SAAL,CAAe,KAAf;;AACA,UAAA,GAAG,CAAC,cAAJ,GAPwB,CASxB;AAEA;AACH;AAvBL;AAAA;AAAA,iCA0BU;AACF,eAAK,QAAL;AACH;AAED;;AA9BJ;AAAA;AAAA,mCA+Be,KA/Bf,EA+ByB;AACjB,eAAK,SAAL,CAAe,WAAf,CAA2B,KAAK,GAAL,CAAS,aAApC,EAAmD,OAAnD,EAA4D,KAA5D;AACH;AAED;;AAnCJ;AAAA;AAAA,yCAoCqB,EApCrB,EAoCyC;AACjC,eAAK,SAAL,GAAiB,EAAjB;AACH;AAED;;AAxCJ;AAAA;AAAA,0CAyCsB,EAzCtB,EAyCoC;AAC5B,eAAK,QAAL,GAAgB,EAAhB;AACH;AAED;;AA7CJ;AAAA;AAAA,yCA8CqB,UA9CrB,EA8CwC;AAChC,eAAK,SAAL,CAAe,WAAf,CAA2B,KAAK,GAAL,CAAS,aAApC,EAAmD,UAAnD,EAA+D,UAA/D;AACH;AAhDL;;AAAA;AAAA,OAAA;;;;cAOqC,0CAAA,CAAA,YAAA,C;AAAU,QAAA,UAAA,EAAA,CAAA;AAAA,UAAA,IAAA,EAA9B,0CAAA,CAAA,MAAA;AAA8B,SAAA;;cAAqB,0CAAA,CAAA,WAAA;;;;AAIhE,IAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CADC,MAAA,CAAA,0CAAA,CAAA,cAAA,CAAA,CAAA,CAAa,OAAb,EAAsB,CAAC,QAAD,CAAtB,CACD,E,yEAAA,E,uEAAe,a,EAAf,E,6EAAA,CAAA,E,4BAAA,E,WAAA,EAYC,IAZD;AAeA,IAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CADC,MAAA,CAAA,0CAAA,CAAA,cAAA,CAAA,CAAA,CAAa,MAAb,EAAqB,CAAC,QAAD,CAArB,CACD,E,yEAAA,E,yEAAA,E,6EAAA,CAAA,E,4BAAA,E,QAAA,EAEC,IAFD;AA1BS,IAAA,kBAAkB,GAAA,oBAAA,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAV9B,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU;AACP,MAAA,QAAQ,EAAE,gBADH;AAEP,MAAA,SAAS,EAAE,CACP;AACI,QAAA,OAAO,EAAE,2CAAA,CAAA,mBAAA,CADb;AAEI,QAAA,WAAW,EAAE,MAAA,CAAA,0CAAA,CAAA,YAAA,CAAA,CAAA,CAAW;AAAA,iBAAM,oBAAN;AAAA,SAAX,CAFjB;AAGI,QAAA,KAAK,EAAE;AAHX,OADO;AAFJ,KAAV,CAU8B,EAOd,kCAAA,CAAA,SAAA,CAAA,CAAA,CAAA,EAAA,MAAA,CAAA,0CAAA,CAAA,MAAA,CAAA,CAAA,EAAA,CAPc,E,uEAOM,0CAAA,CAAA,YAAA,C,EAA+B,0CAAA,CAAA,WAAA,C,EAPrC,CAAA,EAAlB,kBAAkB,CAAlB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnBN,QAAM,WAAW,GAAW,CACjC;AACI,MAAA,IAAI,EAAC,EADT;AAEI,MAAA,SAAS,EAAC,6CAAA,CAAA,gBAAA;AAFd,KADiC,CAA5B;;;;;;;;;;;;;;;;ACHP,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,8zJAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;gDCYf;;;AAgBA,QAAa,cAAb;AA8CE,8BACU,EADV,EAEU,KAFV,EAGU,MAHV,EAIU,UAJV,EAKU,WALV,EAMU,WANV,EAM4C,WAN5C,EAOU,QAPV,EAOmC;AAAA;;AANzB,aAAA,EAAA,GAAA,EAAA;AACA,aAAA,KAAA,GAAA,KAAA;AACA,aAAA,MAAA,GAAA,MAAA;AACA,aAAA,UAAA,GAAA,UAAA;AACA,aAAA,WAAA,GAAA,WAAA;AACA,aAAA,WAAA,GAAA,WAAA;AAAkC,aAAA,WAAA,GAAA,WAAA;AAClC,aAAA,QAAA,GAAA,QAAA;AAjDV,aAAA,MAAA,GAAoB,IAAI,2CAAA,CAAA,WAAA,CAAJ,CAAc;AAChC,UAAA,QAAQ,EAAE,IAAI,2CAAA,CAAA,aAAA,CAAJ,CAAgB,EAAhB,EAAoB,CAAC,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAZ,CAApB,CADsB;AAEhC,UAAA,QAAQ,EAAE,IAAI,2CAAA,CAAA,aAAA,CAAJ,CAAgB,EAAhB,EAAoB,CAAC,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAZ,EAAsB,2CAAA,CAAA,YAAA,CAAA,CAAW,GAAX,CAAe,CAAf,CAAtB,CAApB;AAFsB,SAAd,CAApB;AAIA,aAAA,IAAA,GAAO,IAAP;AAMA,aAAA,eAAA,GAAkB,KAAlB;AACA,aAAA,SAAA,GAAY,KAAZ;AACA,aAAA,IAAA,GAAO,KAAP;AAEA,aAAA,KAAA,GAAQ,IAAR;AAGA,aAAA,WAAA,GAAmB,KAAnB;AACA,aAAA,UAAA,GAAoB,IAAI,wDAAA,CAAA,OAAA,CAAJ,EAApB;AACA,aAAA,SAAA,GAAmB,IAAI,wDAAA,CAAA,OAAA,CAAJ,EAAnB;AAEA,aAAA,MAAA,GAAS,IAAT;AA6BK;;AAtDP;AAAA;AAAA,mCAwDU;AACN,eAAK,QAAL,GAAgB,KAAhB;AAED;AA3DH;AAAA;AAAA,oCA6DW;AACP,eAAK,SAAL,GAAiB,KAAjB;AACD;AA/DH;AAAA;AAAA,4CAiEmB;AACf;AACA,eAAK,SAAL,GAAiB,KAAjB;AACA,eAAK,SAAL,CAAe,QAAf,GAA0B,KAAK,QAA/B;AACA,eAAK,SAAL,CAAe,QAAf,GAA0B,KAAK,QAA/B;AACD;AAtEH;AAAA;AAAA,4BAuEM,IAvEN,EAuEY,KAvEZ,EAuEiB;AACb,cAAI,GAAG,GAAG,uCAAA,CAAA,KAAA,CAAA,CAAa,IAAb,CAAkB,KAAlB,CAAwB,IAAxB,CAAV;AACA,cAAI,EAAE,GAAG,uCAAA,CAAA,KAAA,CAAA,CAAa,IAAb,CAAkB,KAAlB,CAAwB,IAAxB,CAAT;AACA,cAAI,SAAS,GAAG,uCAAA,CAAA,KAAA,CAAA,CAAa,OAAb,CAAqB,uCAAA,CAAA,KAAA,CAAA,CAAa,IAAb,CAAkB,KAAlB,CAAwB,KAAK,CAAC,QAAN,EAAxB,CAArB,EAAgE,GAAhE,EACd;AACE,YAAA,OAAO,EAAE,MAAM,CADjB;AAEE,YAAA,EAAE,EAAE,EAFN;AAGE,YAAA,IAAI,EAAE,uCAAA,CAAA,MAAA,CAAA,CAAc,GAHtB;AAIE,YAAA,OAAO,EAAE,uCAAA,CAAA,KAAA,CAAA,CAAa;AAJxB,WADc,CAAhB;AAQA,iBAAO,SAAS,CAAC,QAAV,EAAP;AACD;AAnFH;AAAA;AAAA,4BAoFM,IApFN,EAoFY,KApFZ,EAoFiB;AACb,cAAI,GAAG,GAAG,uCAAA,CAAA,KAAA,CAAA,CAAa,IAAb,CAAkB,KAAlB,CAAwB,IAAxB,CAAV;AACA,cAAI,EAAE,GAAG,uCAAA,CAAA,KAAA,CAAA,CAAa,IAAb,CAAkB,KAAlB,CAAwB,IAAxB,CAAT;AACA,cAAI,SAAS,GAAG,uCAAA,CAAA,KAAA,CAAA,CAAa,OAAb,CAAqB,KAArB,EAA4B,GAA5B,EAAiC;AAC/C,YAAA,OAAO,EAAE,MAAM,CADgC;AAE/C,YAAA,EAAE,EAAE,EAF2C;AAG/C,YAAA,IAAI,EAAE,uCAAA,CAAA,MAAA,CAAA,CAAc,GAH2B;AAI/C,YAAA,OAAO,EAAE,uCAAA,CAAA,KAAA,CAAA,CAAa;AAJyB,WAAjC,CAAhB;AAOA,iBAAO,SAAS,CAAC,QAAV,CAAmB,uCAAA,CAAA,KAAA,CAAA,CAAa,IAAhC,CAAP;AACD;AA/FH;AAAA;AAAA,+BAgGS,KAhGT,EAgGc;AAAA;;AACV,eAAK,KAAL,GAAa,IAAb;AACA,eAAK,eAAL,GAAuB,IAAvB,CAFU,CAGV;;AACA,cAAI,KAAK,CAAC,QAAN,KAAmB,EAAnB,IAAyB,KAAK,CAAC,QAAN,KAAmB,EAAhD,EAAoD;AAClD,YAAA,gDAAA,CAAA,CAAA,CAAK,IAAL,CAAU;AACR,cAAA,IAAI,EAAE,OADE;AAGR,cAAA,IAAI,EAAE;AAHE,aAAV;AAKA,iBAAK,eAAL,GAAuB,KAAvB;AACD,WAPD,MAOO;AACL;AACA;AACA;AACA;AACA,gBAAI,YAAY,GAAG,uCAAA,CAAA,KAAA,CAAA,CAAa,OAAb,CAAqB,KAAK,CAAC,QAA3B,EAAqC,yBAArC,CAAnB;AACA,gBAAI,QAAQ,GAAG,uCAAA,CAAA,KAAA,CAAA,CAAa,OAAb,CAAqB,KAAK,CAAC,QAA3B,EAAqC,yBAArC,CAAf,CANK,CAOL;;AACA,gBAAI,IAAI,GAAG,YAAY,CAAC,QAAb,EAAX;AACA,gBAAI,KAAK,GAAG,QAAQ,CAAC,QAAT,EAAZ,CATK,CAUL;;AACA,iBAAK,UAAL,CAAgB,QAAhB,GAA2B,IAA3B;AACA,iBAAK,UAAL,CAAgB,QAAhB,GAA2B,KAA3B;AACA,YAAA,OAAO,CAAC,GAAR,CAAY,KAAK,UAAjB,EAbK,CAcP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA,iBAAK,UAAL,CAAgB,YAAhB,CAA6B,KAAK,CAAC,QAAnC,EAA6C,SAA7C,CAAuD,UAAA,QAAQ,EAAG;AAChE,cAAA,MAAI,CAAC,IAAL,GAAY,QAAZ;AACA,cAAA,OAAO,CAAC,GAAR,CAAY,KAAK,CAAC,QAAlB;AACA,cAAA,OAAO,CAAC,GAAR,CAAY,MAAI,CAAC,IAAjB,EAHgE,CAIhE;;AACE,cAAA,YAAY,CAAC,OAAb,CAAqB,eAArB,EAAsC,MAAI,CAAC,IAAL,CAAU,MAAhD;AACA,cAAA,cAAc,CAAC,OAAf,CAAuB,SAAvB,EAAkC,MAAI,CAAC,IAAL,CAAU,MAA5C,EAN8D,CAO9D;AACA;AACA;AACA;AACA;AACA;;AACA,cAAA,OAAO,CAAC,GAAR,CAAY,kBAAZ,EAAgC,MAAI,CAAC,IAAL,CAAU,aAA1C;AACA,cAAA,OAAO,CAAC,GAAR,CAAY,iBAAZ,EAA+B,MAAI,CAAC,IAAL,CAAU,cAAzC;;AACA,kBAAI,MAAI,CAAC,IAAL,CAAU,aAAV,KAA4B,QAA5B,IAAwC,MAAI,CAAC,IAAL,CAAU,cAAV,KAA6B,GAAzE,EAA8E;AAC5E;AACA,gBAAA,OAAO,CAAC,GAAR,CAAY,+BAAZ,EAA6C,MAAI,CAAC,IAAL,CAAU,WAAvD;;AACA,gBAAA,MAAI,CAAC,UAAL,CAAgB,0BAAhB,GAA6C,SAA7C,CAAuD,UAAA,IAAI,EAAG;AAC5D,kBAAA,MAAI,CAAC,QAAL,GAAgB,IAAhB;AACA,kBAAA,OAAO,CAAC,GAAR,CAAY,UAAZ,EAAuB,MAAI,CAAC,QAA5B;AACA,kBAAA,MAAI,CAAC,eAAL,GAAuB,MAAI,CAAC,QAAL,CAAc,0BAArC;AACA,kBAAA,MAAI,CAAC,UAAL,GAAkB,MAAI,CAAC,QAAL,CAAc,UAAhC;;AACA,sBAAI,MAAI,CAAC,UAAL,KAAoB,CAApB,IAAyB,MAAI,CAAC,eAAL,KAAyB,CAAtD,EAAyD;AACvD,oBAAA,OAAO,CAAC,GAAR,CAAY,mBAAZ;;AACA,oBAAA,MAAI,CAAC,MAAL,CAAY,QAAZ,CAAqB,CAAC,YAAD,CAArB,EAAqC,IAArC,CAA0C,UAAA,IAAI;AAAA,6BAAI,OAAO,CAAC,GAAR,CAAY,eAAZ,EAA6B,IAA7B,CAAJ;AAAA,qBAA9C;AACD,mBAHD,MAIK;AACH,oBAAA,OAAO,CAAC,GAAR,CAAY,6BAAZ;AACA,oBAAA,MAAI,CAAC,WAAL,GAAmB,IAAI,IAAJ,EAAnB,CAFG,CAGH;;AACA,oBAAA,MAAI,CAAC,aAAL,GAAqB,IAAI,IAAJ,CAAS,MAAI,CAAC,IAAL,CAAU,aAAnB,CAArB;AACA,oBAAA,MAAI,CAAC,eAAL,GAAuB,MAAI,CAAC,WAAL,GAAmB,MAAI,CAAC,aAA/C;AACA,oBAAA,MAAI,CAAC,eAAL,GAAuB,IAAI,CAAC,KAAL,CAAW,MAAI,CAAC,eAAL,IAAwB,OAAO,IAAP,GAAc,EAAtC,CAAX,CAAvB;AACA,oBAAA,OAAO,CAAC,GAAR,CAAY,eAAZ,EAA6B,MAAI,CAAC,WAAlC;AACA,oBAAA,OAAO,CAAC,GAAR,CAAY,oBAAZ,EAAkC,MAAI,CAAC,aAAvC;AACA,oBAAA,OAAO,CAAC,GAAR,CAAY,kBAAZ,EAAgC,MAAI,CAAC,eAArC;AACA,oBAAA,MAAI,CAAC,SAAL,GAAiB,MAAI,CAAC,UAAL,GAAkB,MAAI,CAAC,eAAxC;AACA,oBAAA,OAAO,CAAC,GAAR,CAAY,gCAAZ,EAA8C,MAAI,CAAC,eAAnD;AACA,oBAAA,OAAO,CAAC,GAAR,CAAY,aAAZ,EAA2B,MAAI,CAAC,QAAL,CAAc,UAAzC;AACA,oBAAA,OAAO,CAAC,GAAR,CAAY,YAAZ,EAA0B,MAAI,CAAC,SAA/B;;AAEA,wBAAI,MAAI,CAAC,SAAL,KAAmB,CAAnB,IAAwB,MAAI,CAAC,SAAL,IAAkB,CAA9C,EAAiD;AAC/C;AACA;AACA,sBAAA,MAAI,CAAC,eAAL,GAAuB,KAAvB;AACA,sBAAA,gDAAA,CAAA,CAAA,CAAK,IAAL,CAAU;AACR,wBAAA,IAAI,EAAE,uDADE;AAER,wBAAA,gBAAgB,EAAE,IAFV;AAGR,wBAAA,kBAAkB,EAAE,SAHZ;AAIR,wBAAA,iBAAiB,EAAE,MAJX;AAKR,wBAAA,iBAAiB,EAAE;AALX,uBAAV,EAMG,IANH,CAMQ,UAAC,MAAD,EAAW;AACjB,wBAAA,OAAO,CAAC,GAAR,CAAY,MAAM,CAAC,KAAnB;;AACA,4BAAI,MAAM,CAAC,KAAX,EAAkB;AAChB,0BAAA,MAAI,CAAC,MAAL,CAAY,QAAZ,CAAqB,CAAC,kBAAD,CAArB;AACD,yBAFD,MAIA;AACE,0BAAA,MAAI,CAAC,MAAL,CAAY,QAAZ,CAAqB,CAAC,GAAD,CAArB;;AACA,0BAAA,MAAI,CAAC,MAAL,CAAY,KAAZ;AACD;AACF,uBAhBD;AAiBH,qBArBC,MAuBF;AAIE,sBAAA,MAAI,CAAC,KAAL,GAAa,IAAb;AACA,sBAAA,MAAI,CAAC,eAAL,GAAuB,IAAvB,CALF,CAME;;AACA,0BAAI,KAAK,CAAC,QAAN,KAAmB,EAAnB,IAAyB,KAAK,CAAC,QAAN,KAAmB,EAAhD,EAAoD;AAClD,wBAAA,gDAAA,CAAA,CAAA,CAAK,IAAL,CAAU;AACR,0BAAA,IAAI,EAAE,OADE;AAGR,0BAAA,IAAI,EAAE;AAHE,yBAAV;AAKA,wBAAA,MAAI,CAAC,eAAL,GAAuB,KAAvB;AACD,uBAPD,MAOO;AACL;AACA;AACA;AACA;AACA,4BAAI,YAAY,GAAG,uCAAA,CAAA,KAAA,CAAA,CAAa,OAAb,CAAqB,KAAK,CAAC,QAA3B,EAAqC,yBAArC,CAAnB;AACA,4BAAI,QAAQ,GAAG,uCAAA,CAAA,KAAA,CAAA,CAAa,OAAb,CAAqB,KAAK,CAAC,QAA3B,EAAqC,yBAArC,CAAf,CANK,CAOL;;AACA,4BAAI,IAAI,GAAG,YAAY,CAAC,QAAb,EAAX;AACA,4BAAI,KAAK,GAAG,QAAQ,CAAC,QAAT,EAAZ,CATK,CAUL;;AACA,wBAAA,MAAI,CAAC,UAAL,CAAgB,QAAhB,GAA2B,IAA3B;AACA,wBAAA,MAAI,CAAC,UAAL,CAAgB,QAAhB,GAA2B,KAA3B;AACA,wBAAA,OAAO,CAAC,GAAR,CAAY,MAAI,CAAC,UAAjB;;AACA,wBAAA,MAAI,CAAC,UAAL,CAAgB,MAAhB,CAAuB,MAAI,CAAC,UAA5B,EAAwC,SAAxC,CACE,UAAA,GAAG,EAAG;AACJ,0BAAA,MAAI,CAAC,QAAL,GAAgB,GAAhB;AACA,0BAAA,MAAI,CAAC,eAAL,GAAuB,IAAI,IAAJ,EAAvB;AACA,0BAAA,OAAO,CAAC,GAAR,CAAY,MAAI,CAAC,QAAjB;;AACA,8BAAI,MAAI,CAAC,QAAT,EAAmB;AACjB;AACA;AAEA;AACA;AACA;AACA;AACA,gCAAI,GAAG,CAAC,cAAJ,IAAsB,CAA1B,EAA6B;AAC3B,8BAAA,MAAI,CAAC,UAAL,CAAgB,0BAAhB,GAA6C,SAA7C,CAAuD,UAAA,EAAE,EAAG;AAC1D,gCAAA,MAAI,CAAC,QAAL,GAAgB,EAAhB;AACA,gCAAA,MAAI,CAAC,SAAL,GAAiB,MAAI,CAAC,QAAL,CAAc,YAA/B;;AACA,oCAAI,MAAI,CAAC,SAAL,KAAmB,CAAvB,EAA0B;AACxB,kCAAA,MAAI,CAAC,SAAL,GAAiB,MAAI,CAAC,SAAL,GAAiB,CAAlC;AACA,kCAAA,OAAO,CAAC,GAAR,CAAY,kBAAZ,EAAgC,MAAI,CAAC,SAArC;AACA,kCAAA,OAAO,CAAC,GAAR,CAAY,wBAAZ,EAAsC,GAAG,CAAC,cAA1C;;AACA,sCAAI,MAAI,CAAC,SAAL,KAAmB,GAAG,CAAC,cAA3B,EAA2C;AACzC,oCAAA,gDAAA,CAAA,CAAA,CAAK,IAAL,CAAU,wDAAkD,GAAG,CAAC,cAAJ,GAAqB,CAAvE,IAA8E,kBAAxF;AACD;AACF;AACF,+BAXD;AAYD,6BArBgB,CAsBjB;;;AAEA,gCAAI,MAAI,CAAC,QAAL,CAAc,CAAd,MAAqB,MAAzB,EAAiC;AAC/B,8BAAA,MAAI,CAAC,QAAL,GAAgB,IAAhB,CAD+B,CAE/B;;AAEA,8BAAA,MAAI,CAAC,eAAL,GAAuB,KAAvB;AACA,8BAAA,MAAI,CAAC,SAAL,GAAiB,IAAjB;AAED,6BAPD,MAOO;AACL;AACA,8BAAA,gDAAA,CAAA,CAAA,CAAK,IAAL,CAAU,MAAI,CAAC,QAAL,CAAc,CAAd,CAAV;AACA,8BAAA,MAAI,CAAC,eAAL,GAAuB,KAAvB;AACD;AACF,2BAxCG,CAyCJ;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGD,yBArDH,EAuDE,UAAA,GAAG,EAAG;AACJ;AACA,0BAAA,gDAAA,CAAA,CAAA,CAAK,IAAL,CAAU;AAER,4BAAA,IAAI,EAAE;AAFE,2BAAV;AAIA,0BAAA,MAAI,CAAC,eAAL,GAAuB,KAAvB;AACD,yBA9DH;AAgED;AACF;AACA;AACF,iBA9ID;AA+ID;AAEF,aAnKH;AAuKS;AACZ;AAlWD;AAAA;AAAA,kCAoWY,KApWZ,EAoW0B,QApW1B,EAoWkC;AAAA;;AAE9B,cAAI,CAAC,KAAK,CAAC,GAAX,EAAgB;AACd,YAAA,gDAAA,CAAA,CAAA,CAAK,IAAL,CAAU,cAAV;AACA;AACD;;AACD,eAAK,eAAL,GAAuB,IAAvB;AACA,eAAK,GAAL,GAAW,EAAX;AACA,UAAA,KAAK,CAAC,QAAN,GAAiB,QAAQ,CAAC,QAA1B,CAR8B,CAS9B;AACA;AACA;;AACA,eAAK,UAAL,CAAgB,YAAhB,CAA6B,KAA7B,EAAoC,SAApC,CACE,UAAA,GAAG,EAAG;AACJ;AACA,YAAA,MAAI,CAAC,cAAL,GAAsB,GAAtB;AACA,YAAA,OAAO,CAAC,GAAR,CAAY,MAAI,CAAC,cAAjB;;AACA,gBAAI,MAAI,CAAC,cAAL,CAAoB,CAApB,KAA0B,gBAA9B,EAAgD;AAC9C,cAAA,gDAAA,CAAA,CAAA,CAAK,IAAL,CAAU;AACR,gBAAA,IAAI,EAAE,OADE;AAGR,gBAAA,IAAI,EAAE;AAHE,eAAV;AAMD;;AAED,YAAA,MAAI,CAAC,UAAL,CAAgB,YAAhB,CAA6B,KAAK,CAAC,QAAnC,EAA6C,SAA7C,CAAuD,UAAA,QAAQ,EAAG;AAChE,cAAA,MAAI,CAAC,IAAL,GAAY,QAAZ;AACA,cAAA,OAAO,CAAC,GAAR,CAAY,KAAK,CAAC,QAAlB;AACA,cAAA,OAAO,CAAC,GAAR,CAAY,MAAI,CAAC,IAAjB,EAHgE,CAIhE;;AACA,kBAAI,MAAI,CAAC,IAAL,IAAa,IAAjB,EAAuB;AACrB,oBAAI,MAAI,CAAC,cAAL,CAAoB,CAApB,KAA0B,cAA9B,EAA8C;AAC5C,kBAAA,gDAAA,CAAA,CAAA,CAAK,IAAL,CAAU;AACR,oBAAA,IAAI,EAAE,OADE;AAGR,oBAAA,IAAI,EAAE;AAHE,mBAAV;AAKA,kBAAA,MAAI,CAAC,KAAL,GAAa,KAAb;AACD;;AAED,gBAAA,MAAI,CAAC,eAAL,GAAuB,KAAvB;AACA,gBAAA,MAAI,CAAC,IAAL,GAAY,MAAI,CAAC,cAAL,CAAoB,CAApB,CAAZ;AACA,gBAAA,OAAO,CAAC,GAAR,CAAY,MAAI,CAAC,IAAjB;AACA,gBAAA,MAAI,CAAC,eAAL,GAAuB,KAAvB;AAEA,gBAAA,YAAY,CAAC,OAAb,CAAqB,eAArB,EAAsC,MAAI,CAAC,IAAL,CAAU,MAAhD;AACA,gBAAA,cAAc,CAAC,OAAf,CAAuB,SAAvB,EAAkC,MAAI,CAAC,IAAL,CAAU,MAA5C,EAhBqB,CAiBrB;AACA;AACA;AACA;AACA;AACA;;AACA,gBAAA,OAAO,CAAC,GAAR,CAAY,kBAAZ,EAAgC,MAAI,CAAC,IAAL,CAAU,aAA1C;AACA,gBAAA,OAAO,CAAC,GAAR,CAAY,iBAAZ,EAA+B,MAAI,CAAC,IAAL,CAAU,cAAzC;;AACA,oBAAI,MAAI,CAAC,IAAL,CAAU,aAAV,KAA4B,QAA5B,IAAwC,MAAI,CAAC,IAAL,CAAU,cAAV,KAA6B,GAAzE,EAA8E;AAC5E;AACA,kBAAA,OAAO,CAAC,GAAR,CAAY,+BAAZ,EAA6C,MAAI,CAAC,IAAL,CAAU,WAAvD;;AACA,kBAAA,MAAI,CAAC,UAAL,CAAgB,0BAAhB,GAA6C,SAA7C,CAAuD,UAAA,IAAI,EAAG;AAC5D,oBAAA,MAAI,CAAC,QAAL,GAAgB,IAAhB;AACA,oBAAA,MAAI,CAAC,eAAL,GAAuB,MAAI,CAAC,QAAL,CAAc,0BAArC;AACA,oBAAA,MAAI,CAAC,UAAL,GAAkB,MAAI,CAAC,QAAL,CAAc,UAAhC;;AACA,wBAAI,MAAI,CAAC,UAAL,KAAoB,CAApB,IAAyB,MAAI,CAAC,eAAL,KAAyB,CAAtD,EAAyD;AACvD,sBAAA,OAAO,CAAC,GAAR,CAAY,mBAAZ;;AACA,sBAAA,MAAI,CAAC,MAAL,CAAY,QAAZ,CAAqB,CAAC,YAAD,CAArB,EAAqC,IAArC,CAA0C,UAAA,IAAI;AAAA,+BAAI,OAAO,CAAC,GAAR,CAAY,eAAZ,EAA6B,IAA7B,CAAJ;AAAA,uBAA9C;AACD,qBAHD,MAIK;AACH,sBAAA,OAAO,CAAC,GAAR,CAAY,6BAAZ;AACA,sBAAA,MAAI,CAAC,WAAL,GAAmB,IAAI,IAAJ,EAAnB,CAFG,CAGH;;AACA,sBAAA,MAAI,CAAC,aAAL,GAAqB,IAAI,IAAJ,CAAS,MAAI,CAAC,IAAL,CAAU,aAAnB,CAArB;AACA,sBAAA,MAAI,CAAC,eAAL,GAAuB,MAAI,CAAC,WAAL,GAAmB,MAAI,CAAC,aAA/C;AACA,sBAAA,MAAI,CAAC,eAAL,GAAuB,IAAI,CAAC,KAAL,CAAW,MAAI,CAAC,eAAL,IAAwB,OAAO,IAAP,GAAc,EAAtC,CAAX,CAAvB;AACA,sBAAA,OAAO,CAAC,GAAR,CAAY,eAAZ,EAA6B,MAAI,CAAC,WAAlC;AACA,sBAAA,OAAO,CAAC,GAAR,CAAY,oBAAZ,EAAkC,MAAI,CAAC,aAAvC;AACA,sBAAA,OAAO,CAAC,GAAR,CAAY,kBAAZ,EAAgC,MAAI,CAAC,eAArC;AACA,sBAAA,MAAI,CAAC,SAAL,GAAiB,MAAI,CAAC,UAAL,GAAkB,MAAI,CAAC,eAAxC;AACA,sBAAA,OAAO,CAAC,GAAR,CAAY,gCAAZ,EAA8C,MAAI,CAAC,eAAnD;AACA,sBAAA,OAAO,CAAC,GAAR,CAAY,aAAZ,EAA2B,MAAI,CAAC,QAAL,CAAc,UAAzC;AACA,sBAAA,OAAO,CAAC,GAAR,CAAY,YAAZ,EAA0B,MAAI,CAAC,SAA/B;;AAEA,0BAAI,MAAI,CAAC,SAAL,KAAmB,CAAnB,IAAwB,MAAI,CAAC,SAAL,IAAkB,CAA9C,EAAiD;AAC/C,wBAAA,gDAAA,CAAA,CAAA,CAAK,IAAL,CAAU,oDAAV;;AACA,wBAAA,MAAI,CAAC,MAAL,CAAY,QAAZ,CAAqB,CAAC,kBAAD,CAArB,EAA2C,IAA3C,CAAgD,UAAA,IAAI;AAAA,iCAAI,OAAO,CAAC,GAAR,CAAY,qBAAZ,EAAmC,IAAnC,CAAJ;AAAA,yBAApD;AACD,uBAHD,MAIK;AACH;AACA,wBAAA,OAAO,CAAC,GAAR,CAAY,mBAAZ;;AACA,wBAAA,MAAI,CAAC,MAAL,CAAY,QAAZ,CAAqB,CAAC,YAAD,CAArB,EAAqC,IAArC,CAA0C,UAAA,IAAI;AAAA,iCAAI,OAAO,CAAC,GAAR,CAAY,eAAZ,EAA6B,IAA7B,CAAJ;AAAA,yBAA9C,EAHG,CAIH;;;AAEA,wBAAA,MAAI,CAAC,WAAL,GAAmB,YAAY,CAAC,OAAb,CAAqB,aAArB,CAAnB;;AACA,wBAAA,MAAI,CAAC,UAAL,CAAgB,YAAhB,CAA6B,MAAI,CAAC,WAAlC,EAA+C,SAA/C,CAAyD,UAAA,QAAQ,EAAG;AAClE,0BAAA,MAAI,CAAC,UAAL,GAAkB,QAAlB;AAEA,0BAAA,OAAO,CAAC,GAAR,CAAY,MAAI,CAAC,UAAjB;;AAEA,0BAAA,MAAI,CAAC,UAAL,CAAgB,0BAAhB,GAA6C,SAA7C,CAAuD,UAAA,IAAI,EAAG;AAC5D,4BAAA,MAAI,CAAC,QAAL,GAAgB,IAAhB;AACA,4BAAA,MAAI,CAAC,eAAL,GAAuB,MAAI,CAAC,QAAL,CAAc,0BAArC;AACA,4BAAA,MAAI,CAAC,UAAL,GAAkB,MAAI,CAAC,QAAL,CAAc,UAAhC;;AAEA,gCAAI,MAAI,CAAC,UAAL,KAAoB,CAApB,IAAyB,MAAI,CAAC,eAAL,KAAyB,CAAtD,EAAyD;AACvD,8BAAA,OAAO,CAAC,GAAR,CAAY,MAAI,CAAC,WAAjB;AACA,8BAAA,MAAI,CAAC,WAAL,GAAmB,IAAI,IAAJ,EAAnB;AACA,8BAAA,MAAI,CAAC,aAAL,GAAqB,IAAI,IAAJ,CAAS,MAAI,CAAC,UAAL,CAAgB,aAAzB,CAArB;AACA,8BAAA,MAAI,CAAC,eAAL,GAAuB,MAAI,CAAC,WAAL,GAAmB,MAAI,CAAC,aAA/C;AACA,8BAAA,MAAI,CAAC,eAAL,GAAuB,IAAI,CAAC,KAAL,CAAW,MAAI,CAAC,eAAL,IAAwB,OAAO,IAAP,GAAc,EAAtC,CAAX,CAAvB;AACA,8BAAA,OAAO,CAAC,GAAR,CAAY,eAAZ,EAA6B,MAAI,CAAC,WAAlC;AACA,8BAAA,OAAO,CAAC,GAAR,CAAY,oBAAZ,EAAkC,MAAI,CAAC,aAAvC;AACA,8BAAA,OAAO,CAAC,GAAR,CAAY,kBAAZ,EAAgC,MAAI,CAAC,eAArC;AACA,8BAAA,MAAI,CAAC,SAAL,GAAiB,MAAI,CAAC,UAAL,GAAkB,MAAI,CAAC,eAAxC;AACA,8BAAA,OAAO,CAAC,GAAR,CAAY,gCAAZ,EAA8C,MAAI,CAAC,eAAnD;AACA,8BAAA,OAAO,CAAC,GAAR,CAAY,aAAZ,EAA2B,MAAI,CAAC,QAAL,CAAc,UAAzC;AACA,8BAAA,OAAO,CAAC,GAAR,CAAY,YAAZ,EAA0B,MAAI,CAAC,SAA/B;;AAEA,kCAAI,MAAI,CAAC,SAAL,GAAiB,CAAjB,IAAsB,MAAI,CAAC,SAAL,IAAkB,MAAI,CAAC,eAAjD,EAAkE;AAChE,gCAAA,gDAAA,CAAA,CAAA,CAAK,IAAL,CAAU,4CAAqC,MAAI,CAAC,SAA1C,IAAwD,SAAlE;AACD;AACF;AACF,2BAvBD;AAwBD,yBA7BD,EAPG,CAqCH;;AACD;AACF;AAEF,mBApED;AAqED;;AAED,gBAAA,MAAI,CAAC,WAAL,CAAiB,uBAAjB,CAAyC,MAAI,CAAC,IAAL,CAAU,MAAnD;;AACA,gBAAA,MAAI,CAAC,WAAL,CAAiB,SAAjB,CAA2B,MAAI,CAAC,IAAL,CAAU,MAArC;;AACA,gBAAA,MAAI,CAAC,QAAL,GAAgB,MAAI,CAAC,IAAL,CAAU,QAA1B,CArGqB,CAsGrB;AAED;AACF,aA9GD;AAgHD,WA9HH,EA+HE,UAAA,GAAG,EAAG;AACJ,YAAA,MAAI,CAAC,eAAL,GAAuB,KAAvB;AAEA,YAAA,gDAAA,CAAA,CAAA,CAAK,IAAL,CAAU,eAAV;AACD,WAnIH;AAoID;AApfH;AAAA;AAAA,uCAsfiB,KAtfjB,EAsf6B;AACzB;AACA,cAAI,KAAK,CAAC,QAAN,KAAmB,EAAvB,EAA2B;AACzB,YAAA,gDAAA,CAAA,CAAA,CAAK,IAAL,CAAU;AACR,cAAA,IAAI,EAAE,OADE;AAGR,cAAA,IAAI,EAAE;AAHE,aAAV;AAKD,WAND,MAMO;AACL,iBAAK,MAAL,CAAY,QAAZ,CAAqB,CAAC,iBAAD,CAArB;AACD;AAEF;AAlgBH;AAAA;AAAA,qCAmgBe,OAngBf,EAmgBgC,MAngBhC,EAmgB8C;AAC1C,eAAK,WAAL,CAAiB,IAAjB,CAAsB,OAAtB,EAA+B,MAA/B,EAAuC;AACrC,YAAA,QAAQ,EAAE;AAD2B,WAAvC;AAGD;AAvgBH;AAAA;AAAA,oCAwgBW;AACP;AACA,eAAK,MAAL,CAAY,QAAZ,CAAqB,CAAC,kBAAD,CAArB;AACD;AA3gBH;AAAA;AAAA,6BA4gBO,KA5gBP,EA4gBqB,QA5gBrB,EA4gB6B;AACzB,UAAA,OAAO,CAAC,GAAR,CAAY,SAAS,KAAK,eAA1B;AACA,cAAI,WAAW,GAAG,IAAI,IAAJ,EAAlB;AACA,UAAA,OAAO,CAAC,GAAR,CAAY,cAAZ,EAA4B,WAA5B;AACA,cAAI,IAAI,GAAG,WAAW,CAAC,OAAZ,KAAwB,KAAK,eAAL,CAAqB,OAArB,EAAnC;AACA,cAAI,OAAO,GAAG,IAAI,GAAG,KAArB;AACA,UAAA,OAAO,CAAC,GAAR,CAAY,OAAZ;;AACA,cAAI,OAAO,IAAI,CAAf,EAAkB;AAEhB,gBAAI,CAAC,KAAK,CAAC,GAAX,EAAgB;AACd,cAAA,gDAAA,CAAA,CAAA,CAAK,IAAL,CAAU,cAAV;AACA;AACD;;AACD,gBAAI,KAAK,KAAL,GAAa,IAAjB,EAAuB;AACrB,cAAA,gDAAA,CAAA,CAAA,CAAK,IAAL,CAAU;AACR,gBAAA,IAAI,EAAE,OADE;AAGR,gBAAA,IAAI,EAAE;AAHE,eAAV;AAKD;;AACD,iBAAK,KAAL,GAAa,KAAb;AACA,YAAA,OAAO,CAAC,GAAR,CAAY,KAAK,KAAjB;AACD,WAfD,MAgBK;AACH,iBAAK,KAAL,GAAa,IAAb;AACA,YAAA,OAAO,CAAC,GAAR,CAAY,KAAK,KAAjB;AACA,iBAAK,SAAL,CAAe,KAAf,EAAsB,QAAtB;AACD;AACF,SAxiBH,CA0iBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;;AA3jBA;AAAA;AAAA,iCA4jBM,CAGL;AA/jBD;AAAA;AAAA,4BASgB;AAAK,iBAAO,KAAK,MAAL,CAAY,GAAZ,CAAgB,OAAhB,CAAP;AAAkC;AATvD;AAAA;AAAA,4BAUmB;AAAK,iBAAO,KAAK,MAAL,CAAY,GAAZ,CAAgB,UAAhB,CAAP;AAAqC;AAV7D;;AAAA;AAAA,OAAA;;;;cA+CgB,2CAAA,CAAA,aAAA;;cACG,4CAAA,CAAA,gBAAA;;cACC,4CAAA,CAAA,QAAA;;cACI,2CAAA,CAAA,cAAA;;cACC,iEAAA,CAAA,aAAA;;cACA,wDAAA,CAAA,aAAA;;cAAkC,mDAAA,CAAA,aAAA;;cACrC,wEAAA,CAAA,iBAAA;;;;AApCE,IAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAArB,MAAA,CAAA,0CAAA,CAAA,cAAA,CAAA,CAAA,CAAa,MAAb,CAAqB,E,gEAAO,0CAAA,CAAA,YAAA,C,CAAP,CAAA,E,wBAAA,E,OAAA,E,KAAkB,CAAlB;AAjBX,IAAA,cAAc,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAN1B,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU;AACT,MAAA,QAAQ,EAAE,WADD;AAET,MAAA,QAAA,EAAA,kCAAA,CAAA,iBAAA,CAAA,CAAA,mBAAA;AAAA;AAAA,wFAAA,CAAA,YAFS;AAIT,MAAA,UAAU,EAAE,yEAAA,CAAA,mBAAA,CAJH;;;;AAAA,KAAV,CAM0B,E,uEA+CX,2CAAA,CAAA,aAAA,C,EACG,4CAAA,CAAA,gBAAA,C,EACC,4CAAA,CAAA,QAAA,C,EACI,2CAAA,CAAA,cAAA,C,EACC,iEAAA,CAAA,aAAA,C,EACA,wDAAA,CAAA,aAAA,C,EAAkC,mDAAA,CAAA,aAAA,C,EACrC,wEAAA,CAAA,iBAAA,C,EArDK,CAAA,EAAd,cAAc,CAAd;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;qECpBb;;;AAmBA,QAAa,WAAb;AAAA;AAAA,KAAA;;AAAa,IAAA,WAAW,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAfvB,MAAA,CAAA,0CAAA,CAAA,UAAA,CAAA,CAAA,CAAS;AACN,MAAA,YAAY,EAAC,CAAC,6CAAA,CAAA,gBAAA,CAAD,CADP;AAEN,MAAA,OAAO,EAAC,CACJ,4CAAA,CAAA,cAAA,CADI,EAEJ,2CAAA,CAAA,qBAAA,CAFI,EAGJ,2CAAA,CAAA,aAAA,CAHI,EAIJ;AACA,MAAA,+EAAA,CAAA,wBAAA,CALI,EAMJ,qFAAA,CAAA,uBAAA,CANI,EAOJ,iDAAA,CAAA,kBAAA,CAPI,EAQJ,kDAAA,CAAA,wBAAA,CARI,EASJ,4CAAA,CAAA,cAAA,CAAA,CAAa,QAAb,CAAsB,kDAAA,CAAA,aAAA,CAAtB,CATI;AAFF,KAAT,CAeuB,CAAA,EAAX,WAAW,CAAX","sourcesContent":["export default \"<mat-toolbar style=\\\"background-color:#e71a3d;border-bottom-color: 5px solid yellow;\\\"><img src=\\\"assets/images/dtb1.png\\\" alt=\\\"image\\\"></mat-toolbar>\\r\\n\\r\\n<body class=\\\"loginContainer\\\">\\r\\n  <br> \\r\\n\\r\\n  <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"login-main\\\">\\r\\n    <mat-card style=\\\"border-radius: 25px;height: auto;\\\">\\r\\n     \\r\\n      <mat-card-header>\\r\\n        &nbsp;<div class=\\\"logoHolder\\\" style=\\\"margin-left: 13%;\\\">\\r\\n          <img src=\\\"assets/images/dtb.jpg\\\" alt=\\\"image\\\">\\r\\n          <!-- <img src=\\\"assets/images/med_logo_2.png\\\" alt=\\\"image\\\"> -->\\r\\n          <br>\\r\\n          <!-- <a style=\\\"font-size:12px\\\">MEDIAN &copy;-Connecting Systems</a> -->\\r\\n        </div>\\r\\n      </mat-card-header>\\r\\n    \\r\\n   \\r\\n      <form #loginForm=\\\"ngForm\\\" class=\\\"login-main\\\">\\r\\n        <div *ngIf=\\\"!verifyOTP\\\">\\r\\n          <div style=\\\"text-align: center\\\">\\r\\n          <mat-card-content fxLayout=\\\"column\\\" >\\r\\n            <form [formGroup]=\\\"signin\\\">\\r\\n              <br>\\r\\n              <div>\\r\\n                   <mat-form-field appearance=\\\"outline\\\" >\\r\\n                      <mat-label>User ID</mat-label>\\r\\n                      <input matInput type=\\\"text\\\" placeholder=\\\"User Id\\\" appUppercase  formControlName=\\\"username\\\"  required/>\\r\\n                      <mat-icon matSuffix>username</mat-icon>\\r\\n                    </mat-form-field>\\r\\n              </div>\\r\\n                <div style=\\\"margin-left: 3px\\\">\\r\\n                    <mat-form-field appearance=\\\"outline\\\">\\r\\n                      <mat-label>Password</mat-label>\\r\\n                        <input matInput placeholder=\\\"Password\\\" [type]=\\\"hide ? 'password' : 'text'\\\" formControlName=\\\"password\\\" required/>\\r\\n                        <mat-icon matSuffix (click)=\\\"hide = !hide\\\">{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\\r\\n                        <!-- <mat-hint *ngIf=\\\"!passwordInput.value\\\">Enter your password</mat-hint> -->\\r\\n                    </mat-form-field>\\r\\n                </div>\\r\\n             \\r\\n             </form>\\r\\n           \\r\\n            <mat-progress-bar mode=\\\"indeterminate\\\" *ngIf=\\\"loginProcessing\\\"></mat-progress-bar>\\r\\n            <br>\\r\\n            <div>\\r\\n              <!-- <button mat-raised-button routerLink=\\\"/dashboard\\\">Skip Login</button> -->\\r\\n              <button color=\\\"primary\\\" mat-raised-button (click)=\\\"getOtp(signin.value)\\\"\\r\\n              >\\r\\n                Get OTP\\r\\n              </button>&nbsp;\\r\\n              <button color=\\\"warn\\\" mat-raised-button (click)=\\\"forgetPwd()\\\">\\r\\n                Forgot Password\\r\\n                </button>\\r\\n            </div>\\r\\n            <!-- <span style=\\\"color:red;\\\"> Note that you will be locked after 3 failed attempts using wrong credentials. </span> -->\\r\\n            <br>\\r\\n            <!-- <div>\\r\\n              <button mat-raised-button class=\\\"font-weight-bold \\\" (click)=\\\"forgotPassword(loginForm.value)\\\">Forgot /\\r\\n                Reset Password</button>\\r\\n            </div> -->\\r\\n            <div class=\\\"content has-text-centered\\\">\\r\\n              \\r\\n                <a href=\\\"http://rumango.com/\\\">Developed by\\r\\n                  <img src=\\\"assets/images/rmg.png\\\" alt=\\\"RUMANGO\\\">\\r\\n\\r\\n                </a>\\r\\n              \\r\\n            </div>\\r\\n            <br>\\r\\n            <a style=\\\"font-size:12px\\\">MEDIAN &copy; 2020-Connecting Systems</a>\\r\\n           \\r\\n          </mat-card-content>\\r\\n        </div>\\r\\n        </div>\\r\\n        <div *ngIf=\\\"verifyOTP\\\" style=\\\"text-align: center\\\">\\r\\n          <div>\\r\\n            <p style=\\\"text-align: center;\\\">Enter the OTP sent to your Email</p>\\r\\n          </div>\\r\\n          <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"outline\\\">\\r\\n            <mat-label>OTP</mat-label>\\r\\n            <input id=\\\"otp\\\" matInput autocomplete=\\\"off\\\" placeholder=\\\"OTP\\\" maxlength=\\\"6\\\" minlength=\\\"6\\\"\\r\\n              pattern=\\\"([0-9])\\\\d{6}\\\" name=\\\"otp\\\" ngModel required #otp=\\\"ngModel\\\" required>\\r\\n          </mat-form-field>\\r\\n          <br>\\r\\n          <mat-progress-bar mode=\\\"indeterminate\\\" *ngIf=\\\"loginProcessing\\\"></mat-progress-bar>\\r\\n          <br />\\r\\n          <div>\\r\\n            <button color=\\\"primary\\\" mat-raised-button (click)=\\\"test(loginForm.value,signin.value)\\\" [disabled]=\\\"!check\\\">\\r\\n              Verify\\r\\n            </button>&nbsp;\\r\\n\\r\\n            <button color=\\\"primary\\\" mat-raised-button (click)=\\\"getOtp(signin.value); loginForm.reset()\\\" [disabled]=\\\"check\\\">\\r\\n              Resend OTP\\r\\n            </button>&nbsp;\\r\\n\\r\\n            <button color=\\\"warn\\\" mat-raised-button (click)=\\\"backToLoginScreen()\\\">\\r\\n              Exit\\r\\n            </button>\\r\\n          </div>\\r\\n          <br>\\r\\n          <div class=\\\"content has-text-centered\\\">\\r\\n            \\r\\n              <a href=\\\"http://rumango.com/\\\">Developed by\\r\\n                <img src=\\\"assets/images/rmg.png\\\" alt=\\\"RUMANGO\\\">\\r\\n              </a>\\r\\n           \\r\\n          </div>\\r\\n        </div>\\r\\n      </form>\\r\\n    </mat-card>\\r\\n  </div>\\r\\n  <br><br>\\r\\n  \\r\\n  <br>\\r\\n</body>\"","import { Directive, ElementRef } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[appAppPassword]'\r\n})\r\nexport class AppPasswordDirective {\r\n  private _shown = false;\r\n\r\n  constructor(private el: ElementRef) {\r\n    this.setup();\r\n  }\r\n\r\n  toggle(span: HTMLElement) {\r\n    this._shown = !this._shown;\r\n    if (this._shown) {\r\n      this.el.nativeElement.setAttribute('type', 'text');\r\n      span.innerHTML = 'Hide password';\r\n    } else {\r\n      this.el.nativeElement.setAttribute('type', 'password');\r\n      span.innerHTML = 'Show password';\r\n    }\r\n  }\r\n\r\n  setup() {\r\n    const parent = this.el.nativeElement.parentNode;\r\n    const span = document.createElement('span');\r\n    span.innerHTML = `Show password`;\r\n    span.addEventListener('click', event => {\r\n      this.toggle(span);\r\n    });\r\n    parent.appendChild(span);\r\n  }\r\n\r\n}\r\n","import { Directive, HostListener, Inject } from '@angular/core';\r\nimport { DropdownLinkDirective } from './dropdown-link.directive';\r\n\r\n@Directive({\r\n  selector: '[appDropdownToggle]'\r\n})\r\nexport class DropdownAnchorDirective {\r\n\r\n  protected navlink: DropdownLinkDirective;\r\n  \r\n    constructor( @Inject(DropdownLinkDirective) navlink: DropdownLinkDirective) {\r\n      this.navlink = navlink;\r\n    }\r\n  \r\n    @HostListener('click', ['$event'])\r\n    onClick(e: any) {\r\n      this.navlink.toggle();\r\n    }\r\n}\r\n","import {\r\n  Directive, HostBinding, Inject, Input, OnInit, OnDestroy\r\n} from '@angular/core';\r\n\r\nimport { AppDropdownDirective } from './dropdown.directive';\r\n\r\n@Directive({\r\n  selector: '[appDropdownLink]'\r\n})\r\nexport class DropdownLinkDirective {\r\n\r\n  @Input() public group: any;\r\n  \r\n    @HostBinding('class.open')\r\n    @Input()\r\n    get open(): boolean {\r\n      return this._open;\r\n    }\r\n  \r\n    set open(value: boolean) {\r\n      this._open = value;\r\n      if (value) {\r\n        this.nav.closeOtherLinks(this);\r\n      }\r\n    }\r\n  \r\n    protected _open: boolean;\r\n    protected nav: AppDropdownDirective;\r\n  \r\n    public constructor(@Inject(AppDropdownDirective) nav: AppDropdownDirective) {\r\n      this.nav = nav;\r\n    }\r\n  \r\n    public ngOnInit(): any {\r\n      this.nav.addLink(this);\r\n    }\r\n  \r\n    public ngOnDestroy(): any {\r\n      this.nav.removeGroup(this);\r\n    }\r\n  \r\n    public toggle(): any {\r\n      this.open = !this.open;\r\n    }\r\n\r\n}\r\n","import { Directive } from '@angular/core';\r\nimport { Router, NavigationEnd } from '@angular/router';\r\nimport { DropdownLinkDirective } from './dropdown-link.directive';\r\nimport { Subscription } from 'rxjs';\r\nimport { filter } from 'rxjs/operators';\r\n\r\n@Directive({\r\n  selector: '[appDropdown]'\r\n})\r\nexport class AppDropdownDirective {\r\n  protected navlinks: Array<DropdownLinkDirective> = [];\r\n  \r\n    private _router: Subscription;\r\n  \r\n    public closeOtherLinks(openLink: DropdownLinkDirective): void {\r\n      this.navlinks.forEach((link: DropdownLinkDirective) => {\r\n        if (link !== openLink) {\r\n          link.open = false;\r\n        }\r\n      });\r\n    }\r\n  \r\n    public addLink(link: DropdownLinkDirective): void {\r\n      this.navlinks.push(link);\r\n    }\r\n  \r\n    public removeGroup(link: DropdownLinkDirective): void {\r\n      const index = this.navlinks.indexOf(link);\r\n      if (index !== -1) {\r\n        this.navlinks.splice(index, 1);\r\n      }\r\n    }\r\n  \r\n    public getUrl() {\r\n      return this.router.url;\r\n    }\r\n  \r\n    public ngOnInit(): any {\r\n      this._router = this.router.events.pipe(filter(event => event instanceof NavigationEnd)).subscribe((event: NavigationEnd) => {\r\n        this.navlinks.forEach((link: DropdownLinkDirective) => {\r\n          if (link.group) {\r\n            const routeUrl = this.getUrl();\r\n            const currentUrl = routeUrl.split('/');\r\n            if (currentUrl.indexOf( link.group ) > 0) {\r\n              link.open = true;\r\n              this.closeOtherLinks(link);\r\n            }\r\n          }\r\n        });\r\n      });\r\n    }\r\n  \r\n    constructor( private router: Router) {}\r\n\r\n}\r\n","import { Directive, ElementRef, Attribute, OnInit } from '@angular/core';\r\n\r\n@Directive({ selector: '[fontSize]' })\r\nexport class FontSizeDirective implements OnInit {\r\n  constructor( @Attribute('fontSize') public fontSize: string, private el: ElementRef) { }\r\n  ngOnInit() {\r\n    this.el.nativeElement.fontSize = this.fontSize;\r\n  }\r\n}\r\n","import { Directive, ElementRef, Attribute, OnInit, HostListener } from '@angular/core';\r\n\r\n@Directive({ selector: '[scrollTo]' })\r\nexport class ScrollToDirective implements OnInit {\r\n  constructor( @Attribute('scrollTo') public elmID: string, private el: ElementRef) { }\r\n\r\n  ngOnInit() {}\r\n\r\n  currentYPosition() {\r\n    // Firefox, Chrome, Opera, Safari\r\n    if (self.pageYOffset) return self.pageYOffset;\r\n    // Internet Explorer 6 - standards mode\r\n    if (document.documentElement && document.documentElement.scrollTop)\r\n      return document.documentElement.scrollTop;\r\n    // Internet Explorer 6, 7 and 8\r\n    if (document.body.scrollTop) return document.body.scrollTop;\r\n    return 0;\r\n  };\r\n\r\n  elmYPosition(eID) {\r\n    var elm = document.getElementById(eID);\r\n    var y = elm.offsetTop;\r\n    var node: any = elm;\r\n    while (node.offsetParent && node.offsetParent != document.body) {\r\n      node = node.offsetParent;\r\n      y += node.offsetTop;\r\n    }\r\n    return y;\r\n  };\r\n\r\n  @HostListener('click', ['$event'])\r\n  smoothScroll() {\r\n    if(!this.elmID)\r\n      return;\r\n    var startY = this.currentYPosition();\r\n    var stopY = this.elmYPosition(this.elmID);\r\n    var distance = stopY > startY ? stopY - startY : startY - stopY;\r\n    if (distance < 100) {\r\n      scrollTo(0, stopY);\r\n      return;\r\n    }\r\n    var speed = Math.round(distance / 50);\r\n    if (speed >= 20) speed = 20;\r\n    var step = Math.round(distance / 25);\r\n    var leapY = stopY > startY ? startY + step : startY - step;\r\n    var timer = 0;\r\n    if (stopY > startY) {\r\n      for (var i = startY; i < stopY; i += step) {\r\n        setTimeout(\"window.scrollTo(0, \" + leapY + \")\", timer * speed);\r\n        leapY += step;\r\n        if (leapY > stopY) leapY = stopY;\r\n        timer++;\r\n      }\r\n      return;\r\n    }\r\n    for (var i = startY; i > stopY; i -= step) {\r\n      setTimeout(\"window.scrollTo(0, \" + leapY + \")\", timer * speed);\r\n      leapY -= step;\r\n      if (leapY < stopY) leapY = stopY;\r\n      timer++;\r\n    }\r\n    return false;\r\n  };\r\n}","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { FontSizeDirective } from './font-size.directive';\r\nimport { ScrollToDirective } from './scroll-to.directive';\r\nimport { AppDropdownDirective } from './dropdown.directive';\r\nimport { DropdownAnchorDirective } from './dropdown-anchor.directive';\r\nimport { DropdownLinkDirective } from './dropdown-link.directive';\r\nimport { UppercaseDirective } from './uppercase.directive';\r\nimport { AppPasswordDirective } from './app-password.directive';\r\n\r\n\r\nconst directives = [\r\n  FontSizeDirective,\r\n  ScrollToDirective,\r\n  AppDropdownDirective,\r\n  DropdownAnchorDirective,\r\n  DropdownLinkDirective,\r\n  UppercaseDirective,\r\n  AppPasswordDirective\r\n]\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  declarations: directives,\r\n  exports: directives\r\n})\r\nexport class SharedDirectivesModule {}","import { A, Z } from '@angular/cdk/keycodes';\r\nimport {\r\n    Directive,\r\n    ElementRef,\r\n    forwardRef,\r\n    HostListener,\r\n    OnInit,\r\n    Renderer2,\r\n    Self,\r\n} from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\n\r\n@Directive({\r\n    selector: '[appUppercase]',\r\n    providers: [\r\n        {\r\n            provide: NG_VALUE_ACCESSOR,\r\n            useExisting: forwardRef(() => UppercaseDirective),\r\n            multi: true,\r\n        },\r\n    ],\r\n})\r\nexport class UppercaseDirective implements ControlValueAccessor {\r\n    /** implements ControlValueAccessorInterface */\r\n    _onChange: (_: any) => void;\r\n\r\n    /** implements ControlValueAccessorInterface */\r\n    _touched: () => void;\r\n\r\n    constructor(@Self() private _el: ElementRef, private _renderer: Renderer2) { }\r\n\r\n    /** Trata as teclas */\r\n    @HostListener('keyup', ['$event'])\r\n    onKeyDown(evt: KeyboardEvent) {\r\n        const keyCode = evt.keyCode;\r\n        const key = evt.key;\r\n      //  //console.log(evt)\r\n        const value = this._el.nativeElement.value.toUpperCase();\r\n        this._renderer.setProperty(this._el.nativeElement, 'value', value);\r\n        this._onChange(value);\r\n        evt.preventDefault();\r\n        \r\n        // if (keyCode >= A && keyCode <= Z) {\r\n           \r\n        // }\r\n    }\r\n\r\n    @HostListener('blur', ['$event'])\r\n    onBlur() {\r\n        this._touched();\r\n    }\r\n\r\n    /** Implementation for ControlValueAccessor interface */\r\n    writeValue(value: any): void {\r\n        this._renderer.setProperty(this._el.nativeElement, 'value', value);\r\n    }\r\n\r\n    /** Implementation for ControlValueAccessor interface */\r\n    registerOnChange(fn: (_: any) => void): void {\r\n        this._onChange = fn;\r\n    }\r\n\r\n    /** Implementation for ControlValueAccessor interface */\r\n    registerOnTouched(fn: () => void): void {\r\n        this._touched = fn;\r\n    }\r\n\r\n    /** Implementation for ControlValueAccessor interface */\r\n    setDisabledState(isDisabled: boolean): void {\r\n        this._renderer.setProperty(this._el.nativeElement, 'disabled', isDisabled);\r\n    }\r\n}\r\n","import { Routes } from '@angular/router';\r\nimport { LoginComponent } from './login.component';\r\n\r\nexport const loginRoutes: Routes = [\r\n  {\r\n      path:'',\r\n      component:LoginComponent\r\n  }\r\n];\r\n","export default \"button-loading {\\n  width: 100% !important;\\n}\\n\\n.space-code {\\n  border-right: 1px solid rgba(0, 0, 0, 0.1);\\n  height: 310px;\\n  margin-top: 5%;\\n  margin-left: 15px;\\n}\\n\\ninput#otp {\\n  letter-spacing: 5px;\\n  border-radius: 2px;\\n  z-index: 1;\\n  text-align: center;\\n}\\n\\n.loginDev {\\n  background-image: url('med.jpg');\\n}\\n\\n.loginContainer {\\n  background-image: url('med.jpg');\\n}\\n\\nbody {\\n  background-color: #004e92;\\n}\\n\\n.login-main {\\n  margin-top: 0%;\\n}\\n\\nmat-card {\\n  min-width: 30%;\\n}\\n\\n.logoHolder {\\n  align-items: flex-start;\\n}\\n\\n/*\\n*css added by dev on 12/nov\\n*/\\n\\n.mat-raised-button {\\n  width: 100px;\\n  height: 27px;\\n  line-height: 27px;\\n  vertical-align: top;\\n  font-size: 11px;\\n  padding: 0 0;\\n  margin: 0;\\n}\\n\\nmat-card {\\n  width: 100px;\\n}\\n\\nmat-form-field {\\n  font-size: 12px;\\n  width: 55%;\\n  border: 1p solid white;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdmlld3MvbG9naW4vRjpcXG11dGh1LW9uYm9hcmRcXG1lZGlhbi1waDItdWkvc3JjXFxhcHBcXHZpZXdzXFxsb2dpblxcbG9naW4uY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL3ZpZXdzL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksc0JBQUE7QUNDSjs7QURFQTtFQUNJLDBDQUFBO0VBQ0EsYUFBQTtFQUNBLGNBQUE7RUFDQSxpQkFBQTtBQ0NKOztBREVBO0VBQ0ksbUJBQUE7RUFDQSxrQkFBQTtFQUNBLFVBQUE7RUFDQSxrQkFBQTtBQ0NKOztBRENDO0VBQ0csZ0NBQUE7QUNFSjs7QURDQztFQUNHLGdDQUFBO0FDRUo7O0FEQUE7RUFDSSx5QkFBQTtBQ0dKOztBREFDO0VBQ0csY0FBQTtBQ0dKOztBRERJO0VBQ0EsY0FBQTtBQ0lKOztBRERBO0VBQ0ksdUJBQUE7QUNJSjs7QURDQTs7Q0FBQTs7QUFHQTtFQUNJLFlBQUE7RUFDQSxZQUFBO0VBQ0EsaUJBQUE7RUFFQSxtQkFBQTtFQUNBLGVBQUE7RUFDQSxZQUFBO0VBQ0EsU0FBQTtBQ0NKOztBREVFO0VBQ0UsWUFBQTtBQ0NKOztBREdFO0VBQ0UsZUFBQTtFQUNBLFVBQUE7RUFDQSxzQkFBQTtBQ0FKIiwiZmlsZSI6InNyYy9hcHAvdmlld3MvbG9naW4vbG9naW4uY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJidXR0b24tbG9hZGluZ3tcclxuICAgIHdpZHRoOiAxMDAlICFpbXBvcnRhbnQ7XHJcbn1cclxuXHJcbi5zcGFjZS1jb2Rle1xyXG4gICAgYm9yZGVyLXJpZ2h0OiAxcHggc29saWQgcmdiYSgwLCAwLCAwLCAwLjEpO1xyXG4gICAgaGVpZ2h0OiAzMTBweDtcclxuICAgIG1hcmdpbi10b3A6IDUlO1xyXG4gICAgbWFyZ2luLWxlZnQ6IDE1cHg7XHJcbn1cclxuXHJcbmlucHV0I290cCB7XHJcbiAgICBsZXR0ZXItc3BhY2luZzogNXB4O1xyXG4gICAgYm9yZGVyLXJhZGl1czogMnB4O1xyXG4gICAgei1pbmRleDogMTtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxufVxyXG4gLmxvZ2luRGV2IHtcclxuICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybCgnc3JjL2Fzc2V0cy9pbWFnZXMvYmFja2dyb3VuZHMvbWVkLmpwZycpO1xyXG4gfVxyXG5cclxuIC5sb2dpbkNvbnRhaW5lciB7XHJcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoJ3NyYy9hc3NldHMvaW1hZ2VzL2JhY2tncm91bmRzL21lZC5qcGcnKTtcclxuIH1cclxuYm9keXtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICMwMDRlOTI7XHJcbn1cclxuXHJcbiAubG9naW4tbWFpbntcclxuICAgIG1hcmdpbi10b3A6IDAlO1xyXG4gICAgfVxyXG4gICAgbWF0LWNhcmR7XHJcbiAgICBtaW4td2lkdGg6IDMwJTtcclxuICAgIH1cclxuXHJcbi5sb2dvSG9sZGVyIHtcclxuICAgIGFsaWduLWl0ZW1zOiBmbGV4LXN0YXJ0O1xyXG4gICAgLy8gdGV4dC1hbGlnbjogY2VudGVyXHJcblxyXG59XHJcblxyXG4vKlxyXG4qY3NzIGFkZGVkIGJ5IGRldiBvbiAxMi9ub3ZcclxuKi9cclxuLm1hdC1yYWlzZWQtYnV0dG9uIHtcclxuICAgIHdpZHRoOiAxMDBweDtcclxuICAgIGhlaWdodDogMjdweDtcclxuICAgIGxpbmUtaGVpZ2h0OiAyN3B4O1xyXG4gICBcclxuICAgIHZlcnRpY2FsLWFsaWduOiB0b3A7XHJcbiAgICBmb250LXNpemU6IDExcHg7XHJcbiAgICBwYWRkaW5nOiAwIDA7XHJcbiAgICBtYXJnaW46IDA7XHJcbiAgICBcclxuICB9XHJcbiAgbWF0LWNhcmQge1xyXG4gICAgd2lkdGg6IDEwMHB4O1xyXG4gICBcclxuICB9XHJcbiBcclxuICBtYXQtZm9ybS1maWVsZCB7XHJcbiAgICBmb250LXNpemU6IDEycHg7XHJcbiAgICB3aWR0aDogNTUlO1xyXG4gICAgYm9yZGVyOjFwIHNvbGlkIHdoaXRlO1xyXG4gICBcclxuICAgIFxyXG4gIH1cclxuICAvLyBtYXQtY2FyZCBtYXQtZm9ybS1maWVsZCB7XHJcbiAgLy8gICBmb250LXNpemU6IDEwcHg7XHJcbiAgLy8gfVxyXG4gIC8vIG1hdC1jYXJkIGEge1xyXG4gIC8vICAgZm9udC1zaXplOiAxMXB4O1xyXG4gIC8vIH1cclxuICAvLyBtYXQtY2FyZCBwIHtcclxuICAvLyAgIGZvbnQtc2l6ZTogMTFweDtcclxuICAvLyB9XHJcbiAgIiwiYnV0dG9uLWxvYWRpbmcge1xuICB3aWR0aDogMTAwJSAhaW1wb3J0YW50O1xufVxuXG4uc3BhY2UtY29kZSB7XG4gIGJvcmRlci1yaWdodDogMXB4IHNvbGlkIHJnYmEoMCwgMCwgMCwgMC4xKTtcbiAgaGVpZ2h0OiAzMTBweDtcbiAgbWFyZ2luLXRvcDogNSU7XG4gIG1hcmdpbi1sZWZ0OiAxNXB4O1xufVxuXG5pbnB1dCNvdHAge1xuICBsZXR0ZXItc3BhY2luZzogNXB4O1xuICBib3JkZXItcmFkaXVzOiAycHg7XG4gIHotaW5kZXg6IDE7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cblxuLmxvZ2luRGV2IHtcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwic3JjL2Fzc2V0cy9pbWFnZXMvYmFja2dyb3VuZHMvbWVkLmpwZ1wiKTtcbn1cblxuLmxvZ2luQ29udGFpbmVyIHtcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwic3JjL2Fzc2V0cy9pbWFnZXMvYmFja2dyb3VuZHMvbWVkLmpwZ1wiKTtcbn1cblxuYm9keSB7XG4gIGJhY2tncm91bmQtY29sb3I6ICMwMDRlOTI7XG59XG5cbi5sb2dpbi1tYWluIHtcbiAgbWFyZ2luLXRvcDogMCU7XG59XG5cbm1hdC1jYXJkIHtcbiAgbWluLXdpZHRoOiAzMCU7XG59XG5cbi5sb2dvSG9sZGVyIHtcbiAgYWxpZ24taXRlbXM6IGZsZXgtc3RhcnQ7XG59XG5cbi8qXG4qY3NzIGFkZGVkIGJ5IGRldiBvbiAxMi9ub3ZcbiovXG4ubWF0LXJhaXNlZC1idXR0b24ge1xuICB3aWR0aDogMTAwcHg7XG4gIGhlaWdodDogMjdweDtcbiAgbGluZS1oZWlnaHQ6IDI3cHg7XG4gIHZlcnRpY2FsLWFsaWduOiB0b3A7XG4gIGZvbnQtc2l6ZTogMTFweDtcbiAgcGFkZGluZzogMCAwO1xuICBtYXJnaW46IDA7XG59XG5cbm1hdC1jYXJkIHtcbiAgd2lkdGg6IDEwMHB4O1xufVxuXG5tYXQtZm9ybS1maWVsZCB7XG4gIGZvbnQtc2l6ZTogMTJweDtcbiAgd2lkdGg6IDU1JTtcbiAgYm9yZGVyOiAxcCBzb2xpZCB3aGl0ZTtcbn0iXX0= */\"","import {\r\n  Component,\r\n  OnInit,\r\n  ElementRef,\r\n  ViewChildren,\r\n  ɵConsole\r\n} from '@angular/core';\r\nimport { FormBuilder, FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { Router, ActivatedRoute, NavigationExtras, ROUTER_CONFIGURATION } from '@angular/router';\r\nimport { LoginService } from './login.service';\r\nimport { Login } from 'src/app/shared/models/login';\r\nimport { User } from 'src/app/shared/models/user';\r\n// import { User } from '../users.dto';\r\nimport { rumangoAnimations } from 'src/app/shared/animations/rumango-animations';\r\nimport { AuthService } from 'src/app/shared/services/auth.service';\r\nimport Swal from 'sweetalert2';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { EncrDecrService } from 'src/app/shared/enc/EncrDecrService.service';\r\nimport * as CryptoJS from 'crypto-js';\r\nimport { RoleService } from '../roles1/roles.service';\r\nimport { SecurityDto } from '../security-policy/security-policy/security-dto';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss'],\r\n  animations: rumangoAnimations\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n\r\n\r\n  signin: FormGroup = new FormGroup({\r\n    username: new FormControl('', [Validators.required]),\r\n    password: new FormControl('', [Validators.required, Validators.min(3)])\r\n  });\r\n  hide = true;\r\n  get emailInput() { return this.signin.get('email'); }\r\n  get passwordInput() { return this.signin.get('password'); }\r\n\r\n\r\n\r\n  loginProcessing = false;\r\n  verifyOTP = false;\r\n  show = false;\r\n  @ViewChildren('pass') input: ElementRef;\r\n  check = true;\r\n  dialog: any;\r\n  msg: any;\r\n  loginStatus: any = false;\r\n  logindata1: Login = new Login();\r\n  logindata: Login = new Login();\r\n  progress: any;\r\n  status = true;\r\n  user: User;\r\n  userEntity: User;\r\n  currentUser: any;\r\n  variable: any;\r\n  username: string;\r\n  password: string;\r\n  responseError: any;\r\n  spinnerbutton: boolean;\r\n  toString: any;\r\n  responseforotp: any;\r\n  security: SecurityDto;\r\n  invLogins: any;\r\n  currentDate: any;\r\n  changePwdDate: any;\r\n  differnceInTime: any;\r\n  differnceInDays: any;\r\n  notifyPswdExpry: any;\r\n  pswdExpiry: any;\r\n  finalDiff: any;\r\n  otpreceivedtime: any;\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private apiService: LoginService,\r\n    private authService: AuthService,\r\n    private matSnackBar: MatSnackBar, private roleService: RoleService,\r\n    private EncrDecr: EncrDecrService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.progress = false;\r\n    \r\n  }\r\n\r\n  setActive() {\r\n    this.verifyOTP = false;\r\n  }\r\n\r\n  backToLoginScreen() {\r\n    //// console.log(this.username+'**'+this.password);\r\n    this.verifyOTP = false;\r\n    this.logindata.username = this.username;\r\n    this.logindata.password = this.password;\r\n  }\r\n  set(keys, value) {\r\n    var key = CryptoJS.enc.Utf8.parse(keys);\r\n    var iv = CryptoJS.enc.Utf8.parse(keys);\r\n    var encrypted = CryptoJS.AES.encrypt(CryptoJS.enc.Utf8.parse(value.toString()), key,\r\n      {\r\n        keySize: 128 / 8,\r\n        iv: iv,\r\n        mode: CryptoJS.mode.CBC,\r\n        padding: CryptoJS.pad.Pkcs7\r\n      });\r\n\r\n    return encrypted.toString();\r\n  }\r\n  get(keys, value) {\r\n    var key = CryptoJS.enc.Utf8.parse(keys);\r\n    var iv = CryptoJS.enc.Utf8.parse(keys);\r\n    var decrypted = CryptoJS.AES.decrypt(value, key, {\r\n      keySize: 128 / 8,\r\n      iv: iv,\r\n      mode: CryptoJS.mode.CBC,\r\n      padding: CryptoJS.pad.Pkcs7\r\n    });\r\n\r\n    return decrypted.toString(CryptoJS.enc.Utf8);\r\n  }\r\n  getOtp(login) {\r\n    this.check = true;\r\n    this.loginProcessing = true;\r\n    //// console.log(login);\r\n    if (login.password === '' || login.username === '') {\r\n      Swal.fire({\r\n        type: 'error',\r\n      \r\n        text: 'Please enter login credentials.',\r\n      });\r\n      this.loginProcessing = false;\r\n    } else {\r\n      //   login.password=this.set(7061737323313233,login.password);\r\n      //   console.log(login.password);\r\n      //  const d=this.get('7061737323313233',login.password);\r\n      //   console.log(d);\r\n      var encryptedAES = CryptoJS.AES.encrypt(login.password, \"@12#90!^*NPR*g&*()$34#$\");\r\n      var USERNAME = CryptoJS.AES.encrypt(login.username, \"@12#90!^*NPR*g&*()$34#$\");\r\n      //console.log(encryptedAES) ;\r\n      var data = encryptedAES.toString();\r\n      var uname = USERNAME.toString();\r\n      // console.log(data);\r\n      this.logindata1.password = data;\r\n      this.logindata1.username = uname;\r\n      console.log(this.logindata1);\r\n    //   this.apiService.getOtp(this.logindata1).subscribe(\r\n    //     res => {\r\n    //       this.variable = res;\r\n    //       this.otpreceivedtime = new Date();\r\n    //       console.log(this.variable);\r\n    //       if (this.variable) {\r\n    //         // Swal.fire({\r\n    //         //   type: 'error',\r\n            \r\n    //         //   text: 'Invalid Username or Password !!!',\r\n    //         // });\r\n    //         //// console.log(\"Response from backend login \"+this.variable[0]);\r\n    //         // ---------- Password Policy Implementation (BEGIN) ----------\r\n    //         if (res.failLgnCounter != 0) {\r\n    //           this.apiService.fetchSecurityPolicyService().subscribe(sp => {\r\n    //             this.security = sp;\r\n    //             this.invLogins = this.security.maxInvLogins;\r\n    //             if (this.invLogins !== 0) {\r\n    //               this.invLogins = this.invLogins - 1;\r\n    //               console.log(\"Counter from SP \", this.invLogins);\r\n    //               console.log(\"Counter in User table \", res.failLgnCounter);\r\n    //               if (this.invLogins === res.failLgnCounter) {\r\n    //                 Swal.fire('Contact Admin, User Account locked after ' + `${(res.failLgnCounter + 1)}` + ' wrong attempts.');\r\n    //               }\r\n    //             }\r\n    //           });\r\n    //         }\r\n    //         // ---------- Password Policy Implementation (END) ----------\r\n\r\n    //         if (this.variable[0] === 'true') {\r\n    //           this.progress = true;\r\n    //           //  console.log('inside true');\r\n\r\n    //           this.loginProcessing = false;\r\n    //           this.verifyOTP = true;\r\n\r\n    //         } else {\r\n    //           //// console.log('inside false');\r\n    //           Swal.fire(this.variable[0]);\r\n    //           this.loginProcessing = false;\r\n    //         }\r\n    //       }\r\n    //       // else {\r\n\r\n    //       //   if (this.variable) {\r\n    //       //     this.progress = false;\r\n    //       //     this.loginProcessing = false;\r\n    //       //   }\r\n    //       //   this.verifyOTP = true;\r\n    //       //   this.loginProcessing = false;\r\n    //       // }\r\n\r\n\r\n    //     },\r\n\r\n    //     err => {\r\n    //       //// console.log(err)\r\n    //       Swal.fire({\r\n           \r\n    //         text: 'Server Error',\r\n    //       });\r\n    //       this.loginProcessing = false;\r\n    //     }\r\n    //   );\r\n    // }\r\n    this.apiService.fetchMedUser(login.username).subscribe(response => {\r\n      this.user = response;\r\n      console.log(login.username);\r\n      console.log(this.user);\r\n      // if (this.responseforotp) {\r\n        localStorage.setItem('userFromLogin', this.user.userId);\r\n        sessionStorage.setItem('user_id', this.user.userId);\r\n        //   if (this.user.newRoleForUser) {\r\n        //   sessionStorage.setItem('user_role', this.user.newRoleForUser);\r\n        //   // this.toString = res.logoutTime;\r\n        //   // localStorage.setItem('lastLoginTime', this.toString);\r\n        //   const userRoles = this.user.newRoleForUser;\r\n        // }\r\n        console.log(\"disable user -- \", this.user.statusForUser);\r\n        console.log(\"auth status -- \", this.user.verifiedStatus);\r\n        if (this.user.statusForUser === \"Enable\" && this.user.verifiedStatus === \"A\") {\r\n          //---------- Password Policy Implementation (BEGIN) ----------\r\n          console.log(\"Inside If ----> DisableUser :\", this.user.disableUser)\r\n          this.apiService.fetchSecurityPolicyService().subscribe(resp => {\r\n            this.security = resp;\r\n            console.log(\"security\",this.security)\r\n            this.notifyPswdExpry = this.security.notifyPasswordExpiryInDays;\r\n            this.pswdExpiry = this.security.pswdExpiry;\r\n            if (this.pswdExpiry === 0 && this.notifyPswdExpry === 0) {\r\n              console.log(\"Hitting dashboard\");\r\n              this.router.navigate([\"/dashboard\"]).then(data => console.log(\"dashboard hit\", data));\r\n            }\r\n            else {\r\n              console.log(\"Security policy - else part\");\r\n              this.currentDate = new Date();\r\n              // console.log(this.user.pwdChangeDate);\r\n              this.changePwdDate = new Date(this.user.pwdChangeDate);\r\n              this.differnceInTime = this.currentDate - this.changePwdDate;\r\n              this.differnceInDays = Math.floor(this.differnceInTime / (1000 * 3600 * 24));\r\n              console.log(\"today's date \", this.currentDate);\r\n              console.log(\"pswd created date \", this.changePwdDate);\r\n              console.log(\"no of days diff \", this.differnceInDays);\r\n              this.finalDiff = this.pswdExpiry - this.differnceInDays;\r\n              console.log(\"notify user on password expiry\", this.notifyPswdExpry);\r\n              console.log(\"pwd expiry \", this.security.pswdExpiry);\r\n              console.log(\"final diff\", this.finalDiff);\r\n\r\n              if (this.finalDiff === 0 || this.finalDiff <= 0) {\r\n                // Swal.fire('Your password expired, Please change your password');\r\n                // this.router.navigate([\"/forget-password\"]).then(data => console.log(\"Forget password hit\", data));\r\n                this.loginProcessing = false;\r\n                Swal.fire({\r\n                  text: 'Your Password is expired. Please reset your password.',\r\n                  showCancelButton: true,\r\n                  confirmButtonColor: '#3085d6',\r\n                  cancelButtonColor: '#d33',\r\n                  confirmButtonText: 'Reset Password'\r\n                }).then((result) => {\r\n                  console.log(result.value);\r\n                  if (result.value) {\r\n                    this.router.navigate([\"/forget-password\"])\r\n                  }\r\n                  else\r\n                  {\r\n                    this.router.navigate([\"/\"])\r\n                    this.signin.reset();\r\n                  }\r\n                })\r\n            }\r\n            else\r\n            {\r\n\r\n\r\n\r\n              this.check = true;\r\n              this.loginProcessing = true;\r\n              //// console.log(login);\r\n              if (login.password === '' || login.username === '') {\r\n                Swal.fire({\r\n                  type: 'error',\r\n                \r\n                  text: 'Please enter login credentials.',\r\n                });\r\n                this.loginProcessing = false;\r\n              } else {\r\n                //   login.password=this.set(7061737323313233,login.password);\r\n                //   console.log(login.password);\r\n                //  const d=this.get('7061737323313233',login.password);\r\n                //   console.log(d);\r\n                var encryptedAES = CryptoJS.AES.encrypt(login.password, \"@12#90!^*NPR*g&*()$34#$\");\r\n                var USERNAME = CryptoJS.AES.encrypt(login.username, \"@12#90!^*NPR*g&*()$34#$\");\r\n                //console.log(encryptedAES) ;\r\n                var data = encryptedAES.toString();\r\n                var uname = USERNAME.toString();\r\n                // console.log(data);\r\n                this.logindata1.password = data;\r\n                this.logindata1.username = uname;\r\n                console.log(this.logindata1);\r\n                this.apiService.getOtp(this.logindata1).subscribe(\r\n                  res => {\r\n                    this.variable = res;\r\n                    this.otpreceivedtime = new Date();\r\n                    console.log(this.variable);\r\n                    if (this.variable) {\r\n                      // Swal.fire({\r\n                      //   type: 'error',\r\n                      \r\n                      //   text: 'Invalid Username or Password !!!',\r\n                      // });\r\n                      //// console.log(\"Response from backend login \"+this.variable[0]);\r\n                      // ---------- Password Policy Implementation (BEGIN) ----------\r\n                      if (res.failLgnCounter != 0) {\r\n                        this.apiService.fetchSecurityPolicyService().subscribe(sp => {\r\n                          this.security = sp;\r\n                          this.invLogins = this.security.maxInvLogins;\r\n                          if (this.invLogins !== 0) {\r\n                            this.invLogins = this.invLogins - 1;\r\n                            console.log(\"Counter from SP \", this.invLogins);\r\n                            console.log(\"Counter in User table \", res.failLgnCounter);\r\n                            if (this.invLogins === res.failLgnCounter) {\r\n                              Swal.fire('Contact Admin, User Account locked after ' + `${(res.failLgnCounter + 1)}` + ' wrong attempts.');\r\n                            }\r\n                          }\r\n                        });\r\n                      }\r\n                      // ---------- Password Policy Implementation (END) ----------\r\n          \r\n                      if (this.variable[0] === 'true') {\r\n                        this.progress = true;\r\n                        //  console.log('inside true');\r\n          \r\n                        this.loginProcessing = false;\r\n                        this.verifyOTP = true;\r\n          \r\n                      } else {\r\n                        //// console.log('inside false');\r\n                        Swal.fire(this.variable[0]);\r\n                        this.loginProcessing = false;\r\n                      }\r\n                    }\r\n                    // else {\r\n          \r\n                    //   if (this.variable) {\r\n                    //     this.progress = false;\r\n                    //     this.loginProcessing = false;\r\n                    //   }\r\n                    //   this.verifyOTP = true;\r\n                    //   this.loginProcessing = false;\r\n                    // }\r\n          \r\n          \r\n                  },\r\n          \r\n                  err => {\r\n                    //// console.log(err)\r\n                    Swal.fire({\r\n                     \r\n                      text: 'Server Error',\r\n                    });\r\n                    this.loginProcessing = false;\r\n                  }\r\n                );\r\n              }\r\n            }\r\n            }\r\n          })\r\n        }\r\n        \r\n      }\r\n      \r\n      )\r\n     \r\n            }\r\n}\r\n\r\n  verifyOtp(login: Login, formdata) {\r\n\r\n    if (!login.otp) {\r\n      Swal.fire('Provide OTP.')\r\n      return;\r\n    }\r\n    this.loginProcessing = true;\r\n    this.msg = '';\r\n    login.username = formdata.username;\r\n    // console.log(formdata);\r\n    // console.log(login);\r\n    // this.user = null;\r\n    this.apiService.loginService(login).subscribe(\r\n      res => {\r\n        // this.user = res;\r\n        this.responseforotp = res;\r\n        console.log(this.responseforotp);\r\n        if (this.responseforotp[0] == \"OTP is invalid\") {\r\n          Swal.fire({\r\n            type: 'error',\r\n         \r\n            text: 'Enter the Valid OTP.',\r\n          });\r\n\r\n        }\r\n\r\n        this.apiService.fetchMedUser(login.username).subscribe(response => {\r\n          this.user = response;\r\n          console.log(login.username);\r\n          console.log(this.user);\r\n          // if (this.responseforotp) {\r\n          if (this.user != null) {\r\n            if (this.responseforotp[0] == \"Time Expired\") {\r\n              Swal.fire({\r\n                type: 'error',\r\n               \r\n                text: 'This OTP is expired. Please click on Resend OTP to get a new OTP.',\r\n              });\r\n              this.check = false;\r\n            }\r\n\r\n            this.loginProcessing = false;\r\n            this.user = this.responseforotp[1];\r\n            console.log(this.user);\r\n            this.loginProcessing = false;\r\n\r\n            localStorage.setItem('userFromLogin', this.user.userId);\r\n            sessionStorage.setItem('user_id', this.user.userId);\r\n            //   if (this.user.newRoleForUser) {\r\n            //   sessionStorage.setItem('user_role', this.user.newRoleForUser);\r\n            //   // this.toString = res.logoutTime;\r\n            //   // localStorage.setItem('lastLoginTime', this.toString);\r\n            //   const userRoles = this.user.newRoleForUser;\r\n            // }\r\n            console.log(\"disable user -- \", this.user.statusForUser);\r\n            console.log(\"auth status -- \", this.user.verifiedStatus);\r\n            if (this.user.statusForUser === \"Enable\" && this.user.verifiedStatus === \"A\") {\r\n              //---------- Password Policy Implementation (BEGIN) ----------\r\n              console.log(\"Inside If ----> DisableUser :\", this.user.disableUser)\r\n              this.apiService.fetchSecurityPolicyService().subscribe(resp => {\r\n                this.security = resp;\r\n                this.notifyPswdExpry = this.security.notifyPasswordExpiryInDays;\r\n                this.pswdExpiry = this.security.pswdExpiry;\r\n                if (this.pswdExpiry === 0 && this.notifyPswdExpry === 0) {\r\n                  console.log(\"Hitting dashboard\");\r\n                  this.router.navigate([\"/dashboard\"]).then(data => console.log(\"dashboard hit\", data));\r\n                }\r\n                else {\r\n                  console.log(\"Security policy - else part\");\r\n                  this.currentDate = new Date();\r\n                  // console.log(this.user.pwdChangeDate);\r\n                  this.changePwdDate = new Date(this.user.pwdChangeDate);\r\n                  this.differnceInTime = this.currentDate - this.changePwdDate;\r\n                  this.differnceInDays = Math.floor(this.differnceInTime / (1000 * 3600 * 24));\r\n                  console.log(\"today's date \", this.currentDate);\r\n                  console.log(\"pswd created date \", this.changePwdDate);\r\n                  console.log(\"no of days diff \", this.differnceInDays);\r\n                  this.finalDiff = this.pswdExpiry - this.differnceInDays;\r\n                  console.log(\"notify user on password expiry\", this.notifyPswdExpry);\r\n                  console.log(\"pwd expiry \", this.security.pswdExpiry);\r\n                  console.log(\"final diff\", this.finalDiff);\r\n\r\n                  if (this.finalDiff === 0 || this.finalDiff <= 0) {\r\n                    Swal.fire('Your password expired, Please change your password');\r\n                    this.router.navigate([\"/forget-password\"]).then(data => console.log(\"Forget password hit\", data));\r\n                  }\r\n                  else {\r\n                    //---------- Password Policy Implementation (END) ----------\r\n                    console.log(\"Hitting dashboard\");\r\n                    this.router.navigate([\"/dashboard\"]).then(data => console.log(\"dashboard hit\", data));\r\n                    //---------- Password Policy Implementation (BEGIN) ----------\r\n\r\n                    this.currentUser = localStorage.getItem('currentUser');\r\n                    this.apiService.fetchMedUser(this.currentUser).subscribe(response => {\r\n                      this.userEntity = response;\r\n\r\n                      console.log(this.userEntity);\r\n\r\n                      this.apiService.fetchSecurityPolicyService().subscribe(resp => {\r\n                        this.security = resp;\r\n                        this.notifyPswdExpry = this.security.notifyPasswordExpiryInDays;\r\n                        this.pswdExpiry = this.security.pswdExpiry;\r\n\r\n                        if (this.pswdExpiry !== 0 && this.notifyPswdExpry !== 0) {\r\n                          console.log(this.currentUser);\r\n                          this.currentDate = new Date();\r\n                          this.changePwdDate = new Date(this.userEntity.pwdChangeDate);\r\n                          this.differnceInTime = this.currentDate - this.changePwdDate;\r\n                          this.differnceInDays = Math.floor(this.differnceInTime / (1000 * 3600 * 24));\r\n                          console.log(\"today's date \", this.currentDate);\r\n                          console.log(\"pswd created date \", this.changePwdDate);\r\n                          console.log(\"no of days diff \", this.differnceInDays);\r\n                          this.finalDiff = this.pswdExpiry - this.differnceInDays;\r\n                          console.log(\"notify user on password expiry\", this.notifyPswdExpry);\r\n                          console.log(\"pwd expiry \", this.security.pswdExpiry);\r\n                          console.log(\"final diff\", this.finalDiff);\r\n\r\n                          if (this.finalDiff > 0 && this.finalDiff <= this.notifyPswdExpry) {\r\n                            Swal.fire('Your password will expire in ' + `${this.finalDiff}` + ' day(s)');\r\n                          }\r\n                        }\r\n                      });\r\n                    });\r\n                    //  ---------- Password Policy Implementation (END) ----------\r\n                  }\r\n                }\r\n\r\n              });\r\n            }\r\n\r\n            this.roleService.fetchNewRolePermissions(this.user.userId);\r\n            this.authService.sendToken(this.user.userId);\r\n            this.username = this.user.userName;\r\n            // this.router.navigate(['/dashboard']);\r\n\r\n          }\r\n        });\r\n\r\n      },\r\n      err => {\r\n        this.loginProcessing = false;\r\n\r\n        Swal.fire('Server Error ');\r\n      });\r\n  }\r\n\r\n  forgotPassword(login: Login) {\r\n    //// console.log(login);\r\n    if (login.username === '') {\r\n      Swal.fire({\r\n        type: 'error',\r\n      \r\n        text: 'Please enter the username ',\r\n      });\r\n    } else {\r\n      this.router.navigate(['forget-password']);\r\n    }\r\n\r\n  }\r\n  openSnackBar(message: string, action: string) {\r\n    this.matSnackBar.open(message, action, {\r\n      duration: 2000\r\n    });\r\n  }\r\n  forgetPwd() {\r\n    // this.router.navigate(['/login']);\r\n    this.router.navigate(['/forget-password']);\r\n  }\r\n  test(login: Login, formdata) {\r\n    console.log(\"time\" + this.otpreceivedtime);\r\n    let currentTime = new Date();\r\n    console.log(\"current time\", currentTime);\r\n    var diff = currentTime.getTime() - this.otpreceivedtime.getTime();\r\n    var minutes = diff / 60000;\r\n    console.log(minutes);\r\n    if (minutes >= 3) {\r\n\r\n      if (!login.otp) {\r\n        Swal.fire('Provide OTP.')\r\n        return;\r\n      }\r\n      if (this.check = true) {\r\n        Swal.fire({\r\n          type: 'error',\r\n        \r\n          text: 'This OTP is expired. Please click on Resend OTP to get a new OTP.',\r\n        });\r\n      }\r\n      this.check = false;\r\n      console.log(this.check);\r\n    }\r\n    else {\r\n      this.check = true;\r\n      console.log(this.check);\r\n      this.verifyOtp(login, formdata);\r\n    }\r\n  }\r\n\r\n//   gettingLogoutTimeAndDepartment()\r\n// {\r\n//   this.apiService.gettingloginTimeandDepartment(this.currentUser).subscribe(gettingTimeAndDepartemnt=>\r\n//     {\r\n//       // this.ref.markForCheck()\r\n//       console.log(gettingTimeAndDepartemnt);\r\n//       this.user=gettingTimeAndDepartemnt;\r\n//       console.log(this.user.logoutTime);\r\n//       console.log(this.user.department);\r\n//       this.apiService.settingdepartmentlogged(this.user.department,this.user.logoutTime);\r\n\r\n//       localStorage.setItem(\"userobj\",this.user.logoutTime);\r\n//       localStorage.setItem(\"departmet\",this.user.department)\r\n//     }\r\n  \r\n\r\n//   );\r\n// }\r\nresend()\r\n{\r\n\r\n}\r\n}\r\n","import { NgModule } from \"@angular/core\";\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { PerfectScrollbarModule } from 'ngx-perfect-scrollbar';\r\nimport { RouterModule } from '@angular/router';\r\nimport { loginRoutes } from './login-routing.module';\r\nimport { LoginComponent } from './login.component';\r\n//import { SharedComponentsModule } from 'app/shared/components/shared-components.module';\r\nimport { SharedDirectivesModule } from 'src/app/shared/directives/shared-directives.module';\r\nimport { AngularMaterialModule } from 'src/app/shared/angular-material/angular-material.module';\r\n\r\n@NgModule({\r\n    declarations:[LoginComponent],\r\n    imports:[\r\n        CommonModule,\r\n        ReactiveFormsModule,\r\n        FormsModule,\r\n        //SharedComponentsModule,\r\n        SharedDirectivesModule,\r\n        AngularMaterialModule,\r\n        FlexLayoutModule,\r\n        PerfectScrollbarModule,\r\n        RouterModule.forChild(loginRoutes)\r\n    ]\r\n})\r\n\r\nexport class LoginModule {}\r\n"],"sourceRoot":"webpack:///","file":"views-login-login-module-es5.js"}