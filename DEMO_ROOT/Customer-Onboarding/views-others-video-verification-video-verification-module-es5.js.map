{"version":3,"sources":["webpack:///src/app/views/others/video-verification/calljoin/calljoin.component.ts","webpack:///src/app/views/others/video-verification/calljoin/calljoin.component.html","webpack:///src/app/views/others/video-verification/video-verification.component.ts","webpack:///src/app/views/others/video-verification/video-verification.component.html","webpack:///src/app/views/others/video-verification/video-verification.module.ts","webpack:///src/app/views/others/video-verification/only-number.directive.ts","webpack:///src/app/views/others/video-verification/video.directive.ts","webpack:///src/app/views/others/video-verification/schedule-appointment/schedule-appointment.component.ts","webpack:///src/app/views/others/video-verification/schedule-appointment/schedule-appointment.component.html","webpack:///src/app/views/others/video-verification/video-verification.routing.ts"],"names":["CalljoinComponent","color","checked","disabled","selector","templateUrl","styleUrls","VideoVerificationComponent","snack","router","videoService","api","dialogService","shareDataService","renderer","dialog","cdr","fb","appApiService","masterInfo","addressInfo","tellerId","loggedInUser","title","TimeSolts","tomorrow","Date","maxDate","minDate","cifNumberForm","dateCollection","count","availableSlots","kycTimeOption","selectedIndex","otpmodel","mobVerify","emaillVerify","arrayPrefix","prefixFlag","countrys","arrayState","listOfCustByCif","disabledsatsun","cifFetch","permanentAddress","group","addressType","required","address1","address2","city","zipCode","minLength","maxLength","country","residenceType","state","array","id","name","dateClass","cellDate","view","highlightDate","map","strDate","some","d","getDate","getMonth","getFullYear","setDate","getDoc","calculateHolidays","callingTimeslots","getIndex","subscribe","resp","console","log","index","tabIndex","assignValuesForTab2","basicInfoForm","cifNumber","prefix","firstName","lastName","scheduledDate","scheduledTime","primaryEmailAdress","pattern","phoneNumber","middleName","customer_id","isAddressSame","gender","dateOfBirth","maritalStatus","nationality","profileImage","communicationAddress","imageURL","link","event","inputChar","String","fromCharCode","charCode","test","preventDefault","target","value","clearTimeout","timer","setTimeout","fetchByCif","res","customerInfoList","resi","marr","coun","nation","getAllCountries","data","i","length","authStatus","push","countryName","getDropDownValues","responseDatas","genders","responses","Residences","respo","MarritialStatus","re","indexs","datas","get","tab2","keyCode","openKycVerificationMethod","navigateByUrl","form","time","showNext","datewitmAmPm","innerText","selected","available","indexOf","splice","icustCustVideoVerifyDto","selectedDate","saveCustBasicInfoData","dialogRef","open","date","kycRef","afterClosed","result","reset","markForCheck","err","message","bookedTime","now","dt","userval","slot","bookSlot","format24HrsTo12Hrs","booked","showSpinn","convertDate","gettingAvailableSlotsTeller","availableSlotsResp","bookedSlots","forEach","element","x","formatted","format","kycReference","setKycRef","setIndex","setFinishFlag","finishFlag","customerId","localStorage","getItem","setItem","shareCustomerId","fetchCustomerDetails","phoneNumberDetailsDialogue","response","nextStep","userAddress","payload","verificationType","kycSubmit","profilePicture","kycScreenBasicinfo","duration","verticalPosition","horizontalPosition","sessionStorage","profileUpload","documentName","documentType","fileType","type","fileName","uploadData","FormData","append","JSON","stringify","uploadDocument","next","controls","getallCustomerDetails","email","source","source_key","source_value","getOtp","openDialogEmail","number","disableClose","submit","emailsverify","loading","gettingCustomerDetails","allCustomerResp","setValue","phoneNo","image","setCustValues","setCustValues2","mobileverify","getStateName","getCityName","openDialog1","phoneNUmber","getverify","verify","getverify1","doConfirmDialog","profileFile","nativeElement","deleteCustomerDoc","profileId","document_type","getCustomerDocuments","fileUrl","files","reader","FileReader","readAsDataURL","onload","event2","control","e","contains","addControl","removeControl","address","entityName","getStateByCountryId","stateName","key","Object","prototype","hasOwnProperty","call","elementState","trim","getDropDownForStateCity","arrayState1","arrayCity","City","elementCity","kycVerificationForm","detectChanges","arrayCity1","inp","getBranchHolidayInfo","calenderDate","pred","nowd","sat_array","weekday","days","dayElements","document","querySelectorAll","Array","from","matchingDay","find","getAttribute","undefined","setAttribute","removeAttribute","backToKyc","onClickNext","onSelect","previousStep","onNextOfSheduleAppointment","VideoVerificationModule","forChild","imports","declarations","entryComponents","CUSTOM_INPUT_DATE_PICKER_CONTROL_VALUE_ACCESSOR","provide","useExisting","OnlyNumberDirective","multi","elementRef","filteredValue","filterValue","updateTextInput","onTouched","propagateChange","setProperty","onChange","fn","isDisabled","providers","onInputChange","onBlur","replace","VideoDirective","render","el","backgroundColor","clr","ClickType","ScheduleAppointmentComponent","toggle","status","selectTime1","selectTime2","selectTime3","selectTime4","selectTime5","completeTimeSolte","getKycRef","assignKyc","dataFromBasicInfo","getElementById","style","tab","textLabel","_d","onChangeTab","VideoRoutes","path","component"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAOaA,iB;AAEX,qCAAc;AAAA;;AACd,eAAAC,KAAA,GAAsB,QAAtB;AACA,eAAAC,OAAA,GAAU,KAAV;AACA,eAAAC,QAAA,GAAW,KAAX;AAHiB;;;;iBAKjB,oBAAQ,CACP;;;;;;;yBARUH,iB;AAAiB,O;;;cAAjBA,iB;AAAiB,qC;AAAA,iB;AAAA,e;AAAA,6X;AAAA;AAAA;ACP9B;;AACI;;AACI;;AAGA;;AAEI;;AAAmD;;AAAoC;;AAC3F;;AAEA;;AAEJ;;AACJ;;AACA;;AACI;;AACJ;;AACQ;;AAAoC;;AAAmC;;AACvE;;AACA;;AACI;;AACQ;;AAAwC;;AAAO;;AACvD;;AACJ;;AACA;;AACA;;AACI;;AACI;;AAGA;;AACQ;;AAAU;;AAAY;;AAC9B;;AACA;;AACQ;;AAGJ;;AACA;;AACQ;;AAAU;;AAAO;;AACrB;;AACA;;AACQ;;AAGJ;;AACZ;;AACJ;;AACJ;;AAGR;;AACA;;AACA;;AACA;;AAEA;;;;;;;;;wEDjDaA,iB,EAAiB;gBAL7B,uDAK6B;iBALnB;AACTI,oBAAQ,EAAE,cADD;AAETC,uBAAW,EAAE,2BAFJ;AAGTC,qBAAS,EAAE,CAAC,2BAAD;AAHF,W;AAKmB,U;;;;;;;;;;;;;;;;;;;;AEP9B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;AC0BgC;;AACI;;AACJ;;;;AADyB;;AAAA;;;;;;AAGrB;;;;;;AAAqB;;;;;;AA2Be;;AACI;;AACI;;;;;;;;;;AACJ;;AACJ;;;;;;AAFQ;;AAAA;;;;;;AAGR;;AACI;;AAGJ;;;;;;AADuB;;AAAA;;;;;;AAXnC;;AACI;;AACI;;AACI;;AAKA;;AAKA;;AACI;;AACI;;;;;;;;AAGJ;;AACA;;AAA6B;;AAAsB;;AACvD;;AACJ;;AACJ;;AACJ;;;;;;AAvBmD;;AAGjB;;AAAA;;AAKhB;;AAAA;;AAOE;;AAAA;;AAIyB;;AAAA;;;;;;;;AAWzD;;AAAwC;AAAA;;AAAA;;AAAA;AAAA;;AACpC;;AAAK;;;;;;AACT;;;;AAA6B;;;;;;AAoBzB;;AAAkD;;AAAO;;;;;;AAAnB;;AAAY;;AAAA;;;;;;AAG1D;;AACI;;AACJ;;;;;;AAcJ;;AACI;;AACJ;;;;;;AAuBA;;AACI;;AACJ;;;;;;AAuBA;;AAII;;AACJ;;;;;;AAUQ;;AAAoE;;AAEpE;;;;;;AAFmD;;AAAiB;;AAAA;;;;;;AAM5E;;AACI;;AACJ;;;;;;AAWQ;;AAA4D;;AAEtD;;;;;;AAFqC;;AAAiB;;AAAA;;;;;;AAMpE;;AAII;;AACJ;;;;;;AACA;;AACI;;AACJ;;;;;;AAcQ;;AAAgE;;AACnD;;;;;;AADkC;;AAAiB;;AAAA;;;;;;AAKxE;;AAII;;AACJ;;;;;;;;AAUI;;AAA+B;AAAA;;AAAA;;AAAA;AAAA;;AAE3B;;AAAe;;;;;;AAAf;;AAAA;;;;;;AAER;;AAEI;;AACJ;;;;;;AACA;;AAEI;;AACJ;;;;;;;;AASI;;AACI;AAAA;;AAAA;;AAAA;AAAA;;AAC+C;;AACnD;;;;;;AADmD;;AAAA;;;;;;AAGvD;;AAEI;;AACJ;;;;;;AACA;;AACI;;AACJ;;;;;;AACA;;AAEgC;;AACJ;;;;;;;;AAmB5B;;AAEI;AAAA;;AAAA;;AAAA;AAAA;;AAAqE;;AACzE;;;;;;AAFoB,kGAA0B,OAA1B,EAA0B,eAA1B;;AACqD;;AAAA;;;;;;AAyBjE;;AAGI;;AAA2B;;;;;;AAe/B;;AAII;;AAA2B;;;;;;AAavB;;AAA2D;;AAChD;;;;;;AADiC;;AAAe;;AAAA;;;;;;AAInE;;AAII;;AAA4B;;;;;;AAaxB;;AACI;;AAAa;;;;;;AAD4B;;AACzC;;AAAA;;;;;;AAGZ;;AAII;;AAAqB;;;;;;AAejB;;AACI;;AAAS;;;;;;AADgC;;AACzC;;AAAA;;;;;;AAKZ;;AAGI;;AAAmB;;;;;;AAYf;;AACI;;AAAQ;;;;;;AAD+B;;AACvC;;AAAA;;;;;;AAKZ;;AAGI;;AAAkB;;;;;;AActB;;AAKI;;AACJ;;;;;;AACA;;AACI;;AACJ;;;;;;AA0BA;;AAII;;AAA2B;;;;;;AAiB/B;;AAII;;AAA2B;;;;;;AAcvB;;AAA2D;;AAChD;;;;;;AADiC;;AAAe;;AAAA;;;;;;AAInE;;AAII;;AAA4B;;;;;;AAYxB;;AACI;;AAAa;;;;;;AAD4B;;AACzC;;AAAA;;;;;;AAGZ;;AAII;;AAAqB;;;;;;AAejB;;AACI;;AAAS;;;;;;AADiC;;AAC1C;;AAAA;;;;;;AAKZ;;AAGI;;AAAmB;;;;;;AAYf;;AACI;;AAAQ;;;;;;AADgC;;AACxC;;AAAA;;;;;;AAKZ;;AAGI;;AAAkB;;;;;;AActB;;AAKI;;AACJ;;;;;;AAEA;;AACI;;AACJ;;;;;;;;;;;;;;AA3JpB;;AACI;;AACI;;AAAoB;;AAAiB;;AACrC;;AACJ;;AACA;;AAEI;;AACI;;AACI;;AACI;;AAAU;;AAAe;;AACzB;;AAII;;AAGJ;;AACA;;AAKJ;;AACJ;;AAGA;;AACI;;AACI;;AAAU;;AAAe;;AACzB;;AAII;;AAIJ;;AACA;;AAKJ;;AACJ;;AAEJ;;AACA;;AACI;;AACI;;AACI;;AAAU;;AAAe;;AACzB;;AAGI;;AACI;;AAAqB;;AAAM;;AAC3B;;AAEJ;;AACJ;;AACA;;AAKJ;;AACJ;;AACA;;AACI;;AACI;;AAAU;;AAAQ;;AAClB;;AAGI;;AACI;AAAA;;AAAA;;AAAA;AAAA;;AACA;;AAAqB;;AAAM;;AAC3B;;AAEJ;;AACJ;;AACA;;AAKJ;;AACJ;;AAEJ;;AACA;;AAEI;;AACI;;AACI;;AAAU;;AAAM;;AAChB;;AAEI;;AACI;AAAA;;AAAA;;AAAA;AAAA;;AACA;;AAAqB;;AAAM;;AAC3B;;AAGJ;;AAEJ;;AACA;;AAIJ;;AACJ;;AAGA;;AACI;;AACI;;AAAU;;AAAK;;AACf;;AAEI;;AACI;;AAAqB;;AAAM;;AAC3B;;AAGJ;;AAEJ;;AACA;;AAIJ;;AACJ;;AACA;;AACI;;AACI;;AAAU;;AAAS;;AACnB;;AAGI;;AAEI;AAAA;;AAAA;;AAAA,kDAA+B,CAA/B;AAAgC,WAAhC;;AAFJ;;AAGJ;;AAEA;;AAQA;;AAGJ;;AACJ;;AACJ;;AAEJ;;AACJ;;;;;;AAtJiE;;AAAA;;AAQjC;;AAAA;;AAYiC;;AAAA;;AASjC;;AAAA;;AAaiC;;AAAA;;AAKR;;AAAA;;AAIzB;;AAAA;;AAUiC;;AAAA;;AAML;;AAAA;;AAI5B;;AAAA;;AAciC;;AAAA;;AAKP;;AAAA;;AAM1B;;AAAA;;AAWiC;;AAAA;;AAIR;;AAAA;;AAMzB;;AAAA;;AASiC;;AAAA;;AAQjC;;AAAA;;AAQP;;AAAA;;;;;;;;AA7mBjC;;AACI;;AAA6B;;AAAiB;;AAC9C;;AAEA;;AACI;;AACI;;AACI;;AAGI;;AACI;AAAA;;AAAA;;AAAA;AAAA;;AADJ;;AAIA;;AAA0B;;AAAI;;AAClC;;AACJ;;AACA;;AAGA;;AAIA;;AACI;;AACI;AAAA;;AAAA;;AAAA;AAAA;;AAA8B;;AAClC;;AACJ;;AAEJ;;AAEA;;AACI;;AACI;;AACI;;AACI;;AACI;;AACI;;AAAU;;AAAU;;AACpB;;AACI;;AAEI;AAAA;;AAAA;;AAAA;AAAA;;AAFJ;;AAGJ;;AAAW;;AACP;;AACI;;AAwBJ;;AACJ;;AACJ;;AAEJ;;AACA;;AACI;;AAEA;;AAEJ;;AAGJ;;AACA;;AACI;;AAAyE;AAAA;;AAAA;;AAAA;AAAA;;AAAsB;;AAAK;;AACtG;;AACN;;AACJ;;AAEA;;AACI;;AACI;;AACI;;AAAU;;AAAO;;AACjB;;AAEI;;AACI;;AAAqB;;AAAM;;AAC3B;;AACJ;;AACJ;;AACA;;AAGJ;;AACJ;;AAEA;;AACI;;AAAU;;AAAW;;AACrB;;AAGI;;AACoB;AAAA;;AAAA;;AAAA;AAAA;;AADpB;;AAIJ;;AACA;;AAGJ;;AAEA;;AACI;;AAAU;;AAAW;;AACrB;;AAEI;;AAA6C;AAAA;;AAAA;;AAAA;AAAA;;AAA7C;;AAGJ;;AACJ;;AAEA;;AACI;;AAAU;;AAAU;;AACpB;;AAGI;;AACoB;AAAA;;AAAA;;AAAA;AAAA;;AADpB;;AAIJ;;AACA;;AAGJ;;AACJ;;AAEA;;AAEI;;AACI;;AAAU;;AAAc;;AACxB;;AAEI;;AAGA;;AACI;;AAGA;;AAEJ;;AAEJ;;AAEA;;AAMJ;;AAEA;;AACI;;AAAU;;AAAe;;AACzB;;AAGI;;AACI;;AAAqB;;AAAM;;AAC3B;;AAGJ;;AAEJ;;AACA;;AAGJ;;AAEA;;AACI;;AAAU;;AAAO;;AACjB;;AAGI;;AACI;AAAA;;AAAA;;AAAA;AAAA;;AACA;;AAAqB;;AAAM;;AAC3B;;AAGJ;;AAEJ;;AACA;;AAMA;;AAGJ;;AAEJ;;AAEA;;AAEI;;AACI;;AAAU;;AAAY;;AACtB;;AAGI;;AACI;;AAAqB;;AAAM;;AAC3B;;AAEJ;;AAEJ;;AACA;;AAMJ;;AAEA;;AACI;;AAAU;;AAAc;;AACxB;;AAGI;;AAEA;;AAGJ;;AACA;;AAIA;;AAIJ;;AAEA;;AACI;;AAAU;;AAAc;;AACxB;;AAEI;;AAC2C;AAAA;;AAAA;;AAAA;AAAA;;AAD3C;;AAEA;;AAIJ;;AACA;;AAIA;;AAGA;;AAIJ;;AAEJ;;AAEJ;;AAEJ;;AAIC;;AACG;;AACI;;AACI;;AACI;;AACJ;;AAEA;;AACI;;AAIJ;;AACJ;;AACJ;;AACJ;;AAED;;AACK;;AACI;;AACI;;AAAmB;;AAAsB;;AACzC;;AACJ;;AACA;;AAEI;;AACI;;AACI;;AACI;;AAAU;;AAAe;;AACzB;;AAGI;;AACA;AAAA;;AAAA;;AAAA;AAAA;;AADA;;AAEJ;;AACA;;AAIJ;;AACJ;;AAEA;;AACI;;AACI;;AAAU;;AAAe;;AACzB;;AAII;;AACA;AAAA;;AAAA;;AAAA;AAAA;;AADA;;AAGJ;;AACA;;AAKJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACI;;AAAU;;AAAe;;AACzB;;AAGI;;AACI;;AAAqB;;AAAM;;AAC3B;;AAEJ;;AACJ;;AACA;;AAKJ;;AACJ;;AACA;;AACI;;AACI;;AAAU;;AAAQ;;AAClB;;AAGI;;AACI;AAAA;;AAAA;;AAAA;AAAA,aAA8C,iBAA9C,EAA8C;AAAA;;AAAA;;AAAA;AAAA,WAA9C;;AAEA;;AAAqB;;AAAM;;AAC3B;;AAEJ;;AACJ;;AACA;;AAKJ;;AACJ;;AAEJ;;AACA;;AAEI;;AACI;;AACI;;AAAU;;AAAM;;AAChB;;AAEI;;AACI;AAAA;;AAAA;;AAAA;AAAA;;AACA;;AAAqB;;AAAM;;AAC3B;;AAGJ;;AAEJ;;AACA;;AAIJ;;AACJ;;AAGA;;AACI;;AACI;;AAAU;;AAAK;;AACf;;AAEI;;AACI;;AAAqB;;AAAM;;AAC3B;;AAGJ;;AAEJ;;AACA;;AAIJ;;AACJ;;AAEA;;AACI;;AACI;;AAAU;;AAAS;;AACnB;;AAGI;;AAEI;AAAA;;AAAA;;AAAA,mDAA+B,CAA/B;AAAgC,WAAhC;;AAFJ;;AAGJ;;AACA;;AAOA;;AAGJ;;AACJ;;AACJ;;AAEJ;;AACJ;;AACA;;AAkKJ;;AAEJ;;;;;;;;;;;;;;AAxnB4B;;AAiBV;;AAAA,+GAAmC,UAAnC,EAAmC,GAAnC;;AAyBmD;;AAAA,wGAA6B,iBAA7B,EAA6B,GAA7B;;AAGE;;AAAA;;AA8BnB;;AAAA;;AAEV;;AAAA;;AAOf;;AAAA;;AAUC;;AAAA;;AAG8B;;AAAA;;AAGtB;;AAAA;;AASZ;;AAAA;;AAOQ;;AAAA;;AAkBR;;AAAA;;AAOQ;;AAAA;;AAWR;;AAAA;;AAEgC;;AAAA,0FAAwB,KAAxB,EAAwB,eAAxB,EAAwB,KAAxB,EAAwB,cAAxB;;AAGK;;AAAA;;AAS7B;;AAAA;;AAWR;;AAAA;;AAImC;;AAAA;;AAM3B;;AAAA;;AAQR;;AAAA;;AAKmC;;AAAA;;AAMR;;AAAA;;AAMnB;;AAAA;;AAYR;;AAAA;;AAImC;;AAAA;;AAK3B;;AAAA;;AAWR;;AAAA;;AAKK;;AAAA;;AAIJ;;AAAA;;AAIA;;AAAA;;AAQD;;AAAA;;AAKK;;AAAA;;AAIJ;;AAAA;;AAGO;;AAAA;;AAIqB;;AAAA;;AAqBI;;AAAA;;AAqBgB;;AAAA;;AAMjC;;AAAA;;AAUiC;;AAAA;;AAQjC;;AAAA;;AAYiC;;AAAA;;AAKR;;AAAA;;AAIzB;;AAAA;;AAUiC;;AAAA;;AAOL;;AAAA;;AAI5B;;AAAA;;AAciC;;AAAA;;AAKP;;AAAA;;AAM1B;;AAAA;;AAWiC;;AAAA;;AAIR;;AAAA;;AAMzB;;AAAA;;AAUiC;;AAAA;;AAOjC;;AAAA;;AAOP;;AAAA;;AASQ;;AAAA;;;;;;AAyM7B;;;;AAA6B;;;;;;;;;;;;;;;;AAGrB;;AACI;;AAAU;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AACsD;;AAErC;;AAAiC;;AAC5D;;AAEJ;;;;;;;;AAN0D;;AAAA,sFAAW,SAAX,EAAW,mKAAX;;AAG3B;;AAAA;;;;;;AANvC;;AACI;;AACI;;AAQJ;;AACJ;;;;;;AAT8B;;AAAA;;;;;;;;;;;;;;;;;;UDjpBjDC,0B;AAqFX,4CAAoBC,KAApB,EAAgDC,MAAhD,EAAwEC,YAAxE,EAA4GC,GAA5G,EACUC,aADV,EAEUC,gBAFV,EAGUC,QAHV,EAIUC,MAJV,EAIqCC,GAJrC,EAMUC,EANV,EAMmCC,aANnC,EAM8E;AAAA;;AAAA;;AAN1D,eAAAV,KAAA,GAAAA,KAAA;AAA4B,eAAAC,MAAA,GAAAA,MAAA;AAAwB,eAAAC,YAAA,GAAAA,YAAA;AAAoC,eAAAC,GAAA,GAAAA,GAAA;AAClG,eAAAC,aAAA,GAAAA,aAAA;AACA,eAAAC,gBAAA,GAAAA,gBAAA;AACA,eAAAC,QAAA,GAAAA,QAAA;AACA,eAAAC,MAAA,GAAAA,MAAA;AAA2B,eAAAC,GAAA,GAAAA,GAAA;AAE3B,eAAAC,EAAA,GAAAA,EAAA;AAAyB,eAAAC,aAAA,GAAAA,aAAA,CAA2C,CA1F9E;AACA;AACA;AACA;AACA;;AACA,eAAAC,UAAA,GAAkB,EAAlB;AACA,eAAAC,WAAA,GAAgB,EAAhB;AACA,eAAAC,QAAA,GAAW,CAAX;AACA,eAAAC,YAAA,GAAe,CAAf;AAEA,eAAAC,KAAA,GAAkB,CAChB,IADgB,EAEhB,IAFgB,EAGhB,KAHgB,CAAlB;AAKA,eAAAC,SAAA,GAAY,EAAZ;AACA,eAAAC,QAAA,GAAW,IAAIC,IAAJ,EAAX;AACA,eAAAC,OAAA,GAAU,IAAID,IAAJ,EAAV;AACA,eAAAE,OAAA,GAAU,IAAIF,IAAJ,EAAV;AAEA,eAAAG,aAAA,GAAgB,IAAI,0DAAJ,EAAhB;AAMA,eAAAC,cAAA,GAAqB,EAArB;AAGA,eAAAC,KAAA,GAAa,CAAb;AACA,eAAAC,cAAA,GAAiB,EAAjB;AAEA,eAAAC,aAAA,GAAgB,KAAhB;AACA,eAAAC,aAAA,GAAwB,CAAxB;AAWA,eAAAC,QAAA,GAAW,IAAI,+FAAJ,EAAX;AACA,eAAAC,SAAA,GAAiB,QAAjB;AACA,eAAAC,YAAA,GAAoB,QAApB;AAOA,eAAAC,WAAA,GAAqB,EAArB;AAEA,eAAAC,UAAA,GAAsB,KAAtB;AAOA,eAAAC,QAAA,GAAqB,EAArB;AAOA,eAAAC,UAAA,GAAuB,EAAvB;AAQA,eAAAC,eAAA,GAAuB,EAAvB;AAGA,eAAAC,cAAA,GAAuB,EAAvB;AACA,eAAAC,QAAA,GAAgB,KAAhB;AAeA,eAAAC,gBAAA,GAA8B,KAAK5B,EAAL,CAAQ6B,KAAR,CAAc;AAC1CC,uBAAW,EAAE,CAAC,WAAD,EAAc,CAAC,0DAAWC,QAAZ,CAAd,CAD6B;AAE1CC,oBAAQ,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAWD,QAAZ,CAAL,CAFgC;AAG1CE,oBAAQ,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAWF,QAAZ,CAAL,CAHgC;AAI1CG,gBAAI,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAWH,QAAZ,CAAL,CAJoC;AAK1CI,mBAAO,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAWJ,QAAZ,EAAsB,0DAAWK,SAAX,CAAqB,CAArB,CAAtB,EAA+C,0DAAWC,SAAX,CAAqB,EAArB,CAA/C,CAAL,CALiC;AAM1CC,mBAAO,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAWP,QAAZ,CAAL,CANiC;AAO1CQ,yBAAa,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAWR,QAAZ,CAAL,CAP2B;AAQ1CS,iBAAK,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAWT,QAAZ,CAAL;AARmC,WAAd,CAA9B;AA2qBA,eAAAU,KAAA,GAAQ,CACN;AACEC,cAAE,EAAE,CADN;AAEEzD,mBAAO,EAAE,IAFX;AAGE0D,gBAAI,EAAE;AAHR,WADM,EAMN;AACED,cAAE,EAAE,CADN;AAEEzD,mBAAO,EAAE,KAFX;AAGE0D,gBAAI,EAAE;AAHR,WANM,CAAR;;AA8KA,eAAAC,SAAA,GAAgD,UAACC,QAAD,EAAWC,IAAX,EAAoB;AAElE,gBAAIA,IAAI,KAAK,OAAb,EAAsB;AAEpB,kBAAMC,aAAa,GAAG,KAAI,CAACrB,cAAL,CACrBsB,GADqB,CACjB,UAACC,OAAD;AAAA,uBAAa,IAAIxC,IAAJ,CAASwC,OAAT,CAAb;AAAA,eADiB,EAErBC,IAFqB,CAGpB,UAACC,CAAD;AAAA,uBACEA,CAAC,CAACC,OAAF,OAAgBP,QAAQ,CAACO,OAAT,EAAhB,IACAD,CAAC,CAACE,QAAF,OAAiBR,QAAQ,CAACQ,QAAT,EADjB,IAEAF,CAAC,CAACG,WAAF,OAAoBT,QAAQ,CAACS,WAAT,EAHtB;AAAA,eAHoB,CAAtB;;AAQK,qBAAOP,aAAa,GAAG,mBAAH,GAAyB,EAA7C;AACN;;AACC,mBAAO,EAAP;AACD,WAfH;;AA91BE,eAAKrC,OAAL,CAAa6C,OAAb,CAAqB,KAAK7C,OAAL,CAAa0C,OAAb,KAAyB,CAA9C,EAD4E,CAE5E;AAED;;;;iBAaD,oBAAW;AAAA;;AAET,iBAAKI,MAAL;AACA,iBAAKC,iBAAL;AACA,iBAAKC,gBAAL;AACA,iBAAKhE,GAAL,CAASiE,QAAT,GAAoBC,SAApB,CAA8B,UAAAC,IAAI,EAAI;AACpCC,qBAAO,CAACC,GAAR,CAAYF,IAAI,CAACG,KAAjB;AACA,oBAAI,CAACC,QAAL,GAAgBJ,IAAI,CAACG,KAArB;;AAEA,kBAAIH,IAAI,CAACG,KAAL,KAAe,CAAnB,EAAsB;AACpB,sBAAI,CAACE,mBAAL,CAAyB,MAAI,CAACD,QAA9B;AACD,eANmC,CASpC;AACA;;AACD,aAXD;AAYA,iBAAK3C,UAAL,GAAgB,IAAhB;AACA,iBAAK6C,aAAL,GAAqB,KAAKnE,EAAL,CAAQ6B,KAAR,CAAc;AACjCuC,uBAAS,EAAE,CAAC,EAAD,CADsB;AAEjCC,oBAAM,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAWtC,QAAZ,CAAL,CAFyB;AAGjCuC,uBAAS,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAWvC,QAAZ,CAAL,CAHsB;AAIlC;AACCwC,sBAAQ,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAWxC,QAAZ,CAAL,CALuB;AAOjC;AACA;AACAyC,2BAAa,EAAE,CAAC,EAAD,CATkB;AAUjCC,2BAAa,EAAE,CAAC,MAAD,CAVkB;AAYjCC,gCAAkB,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAW3C,QAAZ,EAAsB,0DAAW4C,OAAX,CAAmB,oDAAnB,CAAtB,CAAL,CAZa;AAajCC,yBAAW,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAW7C,QAAZ,EAAsB,0DAAW4C,OAAX,CAAmB,2BAAnB,CAAtB,CAAL,CAboB;AAcjCE,wBAAU,EAAE,CAAC,EAAD,CAdqB;AAejCC,yBAAW,EAAE,CAAC,EAAD,CAfoB;AAgBjCC,2BAAa,EAAE,CAAC,EAAD,CAhBkB;AAiBjCC,oBAAM,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAWjD,QAAZ,CAAL,CAjByB;AAkBjCkD,yBAAW,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAWlD,QAAZ,CAAL,CAlBoB;AAmBjCmD,2BAAa,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAWnD,QAAZ,CAAL,CAnBkB;AAoBjCoD,yBAAW,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAWpD,QAAZ,CAAL,CApBoB;AAqBjCqD,0BAAY,EAAE,CAAC,EAAD,CArBmB;AAuBjCC,kCAAoB,EAAE,KAAKrF,EAAL,CAAQ6B,KAAR,CAAc;AAClCC,2BAAW,EAAE,CAAC,eAAD,EAAkB,CAAC,0DAAWC,QAAZ,CAAlB,CADqB;AAElCC,wBAAQ,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAWD,QAAZ,CAAL,CAFwB;AAGlCE,wBAAQ,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAWF,QAAZ,CAAL,CAHwB;AAIlCG,oBAAI,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAWH,QAAZ,CAAL,CAJ4B;AAKlCI,uBAAO,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAWJ,QAAZ,EAAsB,0DAAWK,SAAX,CAAqB,CAArB,CAAtB,EAA+C,0DAAWC,SAAX,CAAqB,EAArB,CAA/C,CAAL,CALyB;AAMlCC,uBAAO,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAWP,QAAZ,CAAL,CANyB;AAOlCQ,6BAAa,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAWR,QAAZ,CAAL,CAPmB;AAQlCS,qBAAK,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAWT,QAAZ,CAAL;AAR2B,eAAd;AAvBW,aAAd,CAArB;AAkCA,iBAAKuD,QAAL,GAAgB,eAAhB;AACA,iBAAKC,IAAL,GAAY,WAAZ;AAED;;;iBAED,oBAAWC,KAAX,EAAuB;AAAA;;AACrB,gBAAMb,OAAO,GAAG,OAAhB;AACA,gBAAIc,SAAS,GAAGC,MAAM,CAACC,YAAP,CAAoBH,KAAK,CAACI,QAA1B,CAAhB;;AACA,gBAAI,CAACjB,OAAO,CAACkB,IAAR,CAAaJ,SAAb,CAAL,EAA8B;AAC5BD,mBAAK,CAACM,cAAN;AACD;;AACDhC,mBAAO,CAACC,GAAR,CAAYyB,KAAK,CAACO,MAAN,CAAaC,KAAzB;AACAC,wBAAY,CAAC,KAAKC,KAAN,CAAZ;;AACA,gBAAI,CAACV,KAAK,CAACO,MAAN,CAAaC,KAAlB,EAAyB;AACvB,mBAAKvE,eAAL,GAAuB,EAAvB;AACD,aAFD,MAEO;AACL,mBAAKyE,KAAL,GAAaC,UAAU,CAAC,YAAM;AAC5B,sBAAI,CAAClG,aAAL,CAAmBmG,UAAnB,CAA8BZ,KAAK,CAACO,MAAN,CAAaC,KAA3C,EAAkDpC,SAAlD,CAA4D,UAACyC,GAAD,EAAc;AACxEvC,yBAAO,CAACC,GAAR,CAAYsC,GAAZ;;AACA,sBAAIA,GAAJ,EAAS;AACP,0BAAI,CAAC5E,eAAL,GAAuB4E,GAAG,CAACC,gBAA3B;AACD;AACF,iBALD;AAMD,eAPsB,EAOpB,IAPoB,CAAvB;AAQD;AACF;;;iBAED,kBAAS;AAAA;;AACP,iBAAKtC,KAAL,GAAa,QAAb;AAEA,iBAAKgB,MAAL,GAAc,QAAd;AACA,iBAAKuB,IAAL,GAAY,WAAZ;AACA,iBAAKC,IAAL,GAAY,iBAAZ;AACA,iBAAKC,IAAL,GAAY,SAAZ;AACA,iBAAKC,MAAL,GAAc,aAAd,CAPO,CASP;AACA;AACA;AACA;;AACA,iBAAKhH,GAAL,CAASiH,eAAT,GAA2B/C,SAA3B,CAAqC,UAACgD,IAAD,EAAe;AAClD,mBAAI,IAAIC,CAAC,GAAC,CAAV,EAAaA,CAAC,GAACD,IAAI,CAACE,MAApB,EAA2BD,CAAC,EAA5B,EAA+B;AAC7B,oBAAGD,IAAI,CAACC,CAAD,CAAJ,CAAQE,UAAR,KAAqB,GAAxB,EAA4B;AAC1B,wBAAI,CAACxF,QAAL,CAAcyF,IAAd,CAAmBJ,IAAI,CAACC,CAAD,CAAJ,CAAQI,WAA3B;AACD;AACF;AACF,aAND;AAOA,iBAAKvH,GAAL,CAASwH,iBAAT,CAA2B,KAAKlC,MAAhC,EAAwCpB,SAAxC,CAAkD,UAACuD,aAAD,EAAmB;AACnE,oBAAI,CAACC,OAAL,GAAeD,aAAf;AACD,aAFD;AAGA,iBAAKzH,GAAL,CAASwH,iBAAT,CAA2B,KAAKX,IAAhC,EAAsC3C,SAAtC,CAAgD,UAACyD,SAAD,EAAe;AAC7D,oBAAI,CAACC,UAAL,GAAkBD,SAAlB;AACD,aAFD;AAGA,iBAAK3H,GAAL,CAASwH,iBAAT,CAA2B,KAAKV,IAAhC,EAAsC5C,SAAtC,CAAgD,UAAC2D,KAAD,EAAW;AACzD,oBAAI,CAACC,eAAL,GAAuBD,KAAvB;AACD,aAFD;AAGA,iBAAK7H,GAAL,CAASwH,iBAAT,CAA2B,KAAKlD,KAAhC,EAAuCJ,SAAvC,CAAiD,UAAC6D,EAAD,EAAQ;AACvD,oBAAI,CAACC,MAAL,GAAcD,EAAd;AACD,aAFD;AAGA,iBAAK/H,GAAL,CAASwH,iBAAT,CAA2B,KAAKR,MAAhC,EAAwC9C,SAAxC,CAAkD,UAAC+D,KAAD,EAAW;AAC3D,oBAAI,CAACxC,WAAL,GAAmBwC,KAAnB;AACD,aAFD;AAGD;;;eAED,eAAkB;AAChB,mBAAO,KAAKxD,aAAL,CAAmByD,GAAnB,CAAuB,eAAvB,EAAwC5B,KAA/C;AACD;;;iBAED,6BAAoB/B,QAApB,EAA8B;AAC5B,iBAAK4D,IAAL,GAAY,IAAZ;AACD;;;iBACD,mBAAUrC,KAAV,EAAsB;AACpB,gBAAMb,OAAO,GAAG,OAAhB;AACA,gBAAIc,SAAS,GAAGC,MAAM,CAACC,YAAP,CAAoBH,KAAK,CAACI,QAA1B,CAAhB;;AACA,gBAAI,CAACjB,OAAO,CAACkB,IAAR,CAAaJ,SAAb,CAAL,EAA8B;AAC5BD,mBAAK,CAACM,cAAN;AAED;AACF;;;iBACD,oBAAWN,KAAX,EAAkB;AAChB,gBAAII,QAAQ,GAAGJ,KAAK,CAACsC,OAArB;AACA,gBAAKlC,QAAQ,GAAG,EAAX,IAAiBA,QAAQ,GAAG,EAA7B,IAAqCA,QAAQ,GAAG,EAAX,IAAiBA,QAAQ,GAAG,GAAjE,IAAyEA,QAAQ,IAAI,CAAzF,EACE,OAAO,IAAP,CADF,KAGE,OAAO,KAAP;AACH;;;iBACD,4BAAmB;AACjB,iBAAKrF,SAAL,GAAiB,CACf;AACG,sBAAO,MADV;AAEG,2BAAY,IAFf;AAGG,0BAAW,KAHd;AAIG,wBAAS;AAJZ,aADe,EAOf;AACG,sBAAO,MADV;AAEG,2BAAY,IAFf;AAGG,0BAAW,KAHd;AAIG,wBAAS;AAJZ,aAPe,EAaf;AACG,sBAAO,OADV;AAEG,2BAAY,IAFf;AAGG,0BAAW,KAHd;AAIG,wBAAS;AAJZ,aAbe,EAmBf;AACG,sBAAO,OADV;AAEG,2BAAY,IAFf;AAGG,0BAAW,KAHd;AAIG,wBAAS;AAJZ,aAnBe,EAyBf;AACG,sBAAO,OADV;AAEG,2BAAY,IAFf;AAGG,0BAAW,KAHd;AAIG,wBAAS;AAJZ,aAzBe,EA+Bf;AACG,sBAAO,OADV;AAEG,2BAAY,IAFf;AAGG,0BAAW,KAHd;AAIG,wBAAS;AAJZ,aA/Be,EAqCf;AACG,sBAAO,OADV;AAEG,2BAAY,IAFf;AAGG,0BAAW,KAHd;AAIG,wBAAS;AAJZ,aArCe,EA2Cf;AACG,sBAAO,OADV;AAEG,2BAAY,IAFf;AAGG,0BAAW,KAHd;AAIG,wBAAS;AAJZ,aA3Ce,EAiDf;AACG,sBAAO,OADV;AAEG,2BAAY,IAFf;AAGG,0BAAW,KAHd;AAIG,wBAAS;AAJZ,aAjDe,EAuDf;AACG,sBAAO,OADV;AAEG,2BAAY,IAFf;AAGG,0BAAW,KAHd;AAIG,wBAAS;AAJZ,aAvDe,EA6Df;AACG,sBAAO,OADV;AAEG,2BAAY,IAFf;AAGG,0BAAW,KAHd;AAIG,wBAAS;AAJZ,aA7De,EAmEf;AACG,sBAAO,OADV;AAEG,2BAAY,IAFf;AAGG,0BAAW,KAHd;AAIG,wBAAS;AAJZ,aAnEe,EAyEf;AACG,sBAAO,OADV;AAEG,2BAAY,IAFf;AAGG,0BAAW,KAHd;AAIG,wBAAS;AAJZ,aAzEe,EA+Ef;AACG,sBAAO,OADV;AAEG,2BAAY,IAFf;AAGG,0BAAW,KAHd;AAIG,wBAAS;AAJZ,aA/Ee,EAqFf;AACG,sBAAO,OADV;AAEG,2BAAY,IAFf;AAGG,0BAAW,KAHd;AAIG,wBAAS;AAJZ,aArFe,EA2Ff;AACG,sBAAO,OADV;AAEG,2BAAY,IAFf;AAGG,0BAAW,KAHd;AAIG,wBAAS;AAJZ,aA3Fe,EAiGf;AACG,sBAAO,OADV;AAEG,2BAAY,IAFf;AAGG,0BAAW,KAHd;AAIG,wBAAS;AAJZ,aAjGe,CAAjB;AAwGD;;;iBACD,qBAAY;AACV,iBAAKZ,aAAL,CAAmBoI,yBAAnB;AACA,iBAAKvI,MAAL,CAAYwI,aAAZ,CAA0B,gBAA1B;AACD;;;iBAED,mCAA0BC,IAA1B,EAAqC;AACnCnE,mBAAO,CAACC,GAAR,CAAYkE,IAAI,CAACjC,KAAjB;AACA,iBAAK7B,aAAL,GAAqB8D,IAAI,CAACjC,KAA1B,CAFmC,CAInC;;AACA,iBAAKxG,MAAL,CAAYwI,aAAZ,CAA0B,6BAA1B;AACD;;;iBACD,uBAAcE,IAAd,EAAoBrB,CAApB,EAAsBrB,KAAtB,EAA6B;AAC3B,iBAAK2C,QAAL,GAAgB,IAAhB;AAEA,iBAAKC,YAAL,GAAkB5C,KAAK,CAACO,MAAN,CAAasC,SAA/B;AACA,iBAAKvH,KAAL;;AACA,gBAAI,KAAKA,KAAL,GAAa,CAAjB,EAAoB;AAClB,mBAAKD,cAAL,GAAsB,EAAtB;AACAiD,qBAAO,CAACC,GAAR,CAAY,CAAC,KAAKxD,SAAL,CAAesG,CAAf,EAAkByB,QAA/B;AACA,mBAAKH,QAAL,GAAe,CAAC,KAAK5H,SAAL,CAAesG,CAAf,EAAkByB,QAAlC;AACD;;AACDxE,mBAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBmE,IAApB,EAA0BrB,CAA1B;AAEA,iBAAKtG,SAAL,CAAesG,CAAf,EAAkByB,QAAlB,GAA6B,CAAC,KAAK/H,SAAL,CAAesG,CAAf,EAAkByB,QAAhD;AACA,iBAAK/H,SAAL,CAAesG,CAAf,EAAkB0B,SAAlB,GAA8B,CAAC,KAAKhI,SAAL,CAAesG,CAAf,EAAkB0B,SAAjD;AACAzE,mBAAO,CAACC,GAAR,CAAY,KAAKxD,SAAL,CAAesG,CAAf,EAAkByB,QAA9B;AACA,gBAAMtE,KAAK,GAAG,KAAKnD,cAAL,CAAoB2H,OAApB,CAA4BN,IAA5B,CAAd;;AACA,gBAAIlE,KAAK,GAAG,CAAC,CAAT,IAAc,CAAC,KAAKzD,SAAL,CAAesG,CAAf,EAAkByB,QAArC,EAA+C;AAC7C,mBAAKzH,cAAL,CAAoB4H,MAApB,CAA2BzE,KAA3B,EAAkC,CAAlC;AACD,aAFD,MAGK,IAAIA,KAAK,IAAI,CAAC,CAAV,IAAe,KAAKzD,SAAL,CAAesG,CAAf,EAAkByB,QAArC,EAA+C;AAClD,mBAAKzH,cAAL,CAAoBmG,IAApB,CAAyBkB,IAAzB;AACApE,qBAAO,CAACC,GAAR,CAAY,KAAKlD,cAAjB;AACD;AAEF;;;iBACD,sCAA6B;AAAA;;AAE3B,iBAAK6H,uBAAL,GAA+B,KAAKvE,aAAL,CAAmB6B,KAAlD;AACA,iBAAK0C,uBAAL,CAA6BlE,aAA7B,GAA6C,KAAKmE,YAAlD;AACA,iBAAKD,uBAAL,CAA6BjE,aAA7B,GAA6C,KAAK5D,cAAlD;AACA,iBAAK6H,uBAAL,CAA6BtI,QAA7B,GAAwC,KAAKA,QAA7C;AACA,iBAAKsI,uBAAL,CAA6BrI,YAA7B,GAA4C,KAAKA,YAAjD;AAIA,iBAAKZ,YAAL,CAAkBmJ,qBAAlB,CAAwC,KAAKF,uBAA7C,EAAsE9E,SAAtE,CAAgF,UAAAgD,IAAI,EAAI;AACtF9C,qBAAO,CAACC,GAAR,CAAY,WAAZ,EAAyB6C,IAAzB;AACA,oBAAI,CAACrB,IAAL,GAAYqB,IAAZ;;AACA,kBAAMiC,SAAS,GAAG,MAAI,CAAC/I,MAAL,CAAYgJ,IAAZ,CAAiB,uFAAjB,EAAuC;AAEvDlC,oBAAI,EAAE;AAAEsB,sBAAI,EAAG,MAAI,CAACE,YAAd;AAA4BW,sBAAI,EAAE,MAAI,CAACJ,YAAvC;AAAqDpD,sBAAI,EAAE,MAAI,CAACA,IAAhE;AAAsEyD,wBAAM,EAAE,MAAI,CAACA;AAAnF;AAFiD,eAAvC,CAAlB;;AAMAH,uBAAS,CAACI,WAAV,GAAwBrF,SAAxB,CAAkC,UAAAsF,MAAM,EAAI;AAC1CpF,uBAAO,CAACC,GAAR,CAAY,uBAAZ,EAD0C,CAE1C;AACD,eAHD,EATsF,CAatF;;AACA,oBAAI,CAACI,aAAL,CAAmBgF,KAAnB;;AACA,oBAAI,CAACR,YAAL,GAAoB,IAApB;AACA,oBAAI,CAACpI,SAAL,GAAiB,EAAjB,CAhBsF,CAiBtF;;AACA,oBAAI,CAACR,GAAL,CAASqJ,YAAT;AAED,aApBD,EAqBE,UAAAC,GAAG,EAAI;AACLvF,qBAAO,CAACC,GAAR,CAAYsF,GAAG,CAACC,OAAhB;AACD,aAvBH;AA0BA,iBAAKvJ,GAAL,CAASqJ,YAAT;AACD;;;iBAED,kBAASG,UAAT,EAAmB;AACjB,gBAAIC,GAAG,GAAC,IAAI/I,IAAJ,EAAR;AACA,gBAAIyH,IAAI,GAAGqB,UAAX;AACA,gBAAIE,EAAE,GAAID,GAAG,CAACnG,QAAJ,KAAe,CAAhB,GAAqB,GAArB,GAA2BmG,GAAG,CAACpG,OAAJ,EAA3B,GAA2C,GAA3C,GAAiDoG,GAAG,CAAClG,WAAJ,EAAjD,GAAqE,GAArE,GAA2E4E,IAApF,CAHiB,CAIjB;;AACA,gBAAIwB,OAAO,GAAG,IAAIjJ,IAAJ,CAASgJ,EAAT,CAAd;;AACA,gBAAID,GAAG,GAAGE,OAAV,EAAmB;AACnB,qBAAO,KAAP;AACA,aAFA,MAEI;AACN,qBAAO,IAAP;AACE;AACD;;;iBAED,kBAASlE,KAAT,EAAgB;AAAA;;AACd,iBAAI,IAAIqB,CAAC,GAAC,CAAV,EAAYA,CAAC,GAAC,KAAKtG,SAAL,CAAeuG,MAA7B,EAAoCD,CAAC,EAArC,EAAwC;AAExC,kBAAI8C,IAAI,GAAG,KAAKC,QAAL,CAAc,KAAKC,kBAAL,CAAwB,KAAKtJ,SAAL,CAAesG,CAAf,EAAkBqB,IAA1C,CAAd,CAAX;AACA,mBAAK3H,SAAL,CAAesG,CAAf,EAAkBiD,MAAlB,GAAyBH,IAAzB;AAEC,aANa,CASd;;;AACA,iBAAKjG,gBAAL;AACA,iBAAKqG,SAAL,GAAiB,IAAjB;AACA,iBAAKlJ,cAAL,GAAsB,EAAtB;AACAiD,mBAAO,CAACC,GAAR,CAAYyB,KAAZ;AACA,iBAAKmD,YAAL,GAAoB,KAAKlJ,YAAL,CAAkBuK,WAAlB,CAA8BxE,KAA9B,CAApB;AACA1B,mBAAO,CAACC,GAAR,CAAY,cAAZ,EAA4B,KAAK4E,YAAjC;AACA,iBAAKjJ,GAAL,CAASuK,2BAAT,CAAqC,KAAKtB,YAA1C,EAAwD,KAAKvI,QAA7D,EAAuEwD,SAAvE,CAAiF,UAACsG,kBAAD,EAA6B;AAC5GpG,qBAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BmG,kBAA/B,EAD4G,CAE5G;;AACA,kBAAIA,kBAAJ,EAAwB;AACtB,sBAAI,CAACH,SAAL,GAAiB,KAAjB;AACA,sBAAI,CAAC/I,aAAL,GAAqB,IAArB;AACAkJ,kCAAkB,CAACC,WAAnB,CAA+BC,OAA/B,CAAuC,UAAAC,OAAO,EAAI;AAChD,sBAAMrG,KAAK,GAAG,MAAI,CAACzD,SAAL,CAAeyC,GAAf,CAAmB,UAAAsH,CAAC;AAAA,2BAAIA,CAAC,CAACpC,IAAN;AAAA,mBAApB,EAAgCM,OAAhC,CAAwC6B,OAAxC,CAAd;;AACA,sBAAIrG,KAAK,GAAG,CAAC,CAAb,EAAgB;AACd,0BAAI,CAACzD,SAAL,CAAeyD,KAAf,EAAsBuE,SAAtB,GAAkC,KAAlC;AACA,0BAAI,CAAChI,SAAL,CAAeyD,KAAf,EAAsB8F,MAAtB,GAA+B,IAA/B;AACD;AACF,iBAND;AAQD;AACF,aAfD;AAgBD;;;iBAED,4BAAmB5B,IAAnB,EAAuB;AACrB,gBAAIqC,SAAS,GAAG,oCAAM,CAACrC,IAAD,EAAO,OAAP,CAAN,CAAsBsC,MAAtB,CAA6B,IAA7B,CAAhB;AACA1G,mBAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBmE,IAApB,EAAyBqC,SAAzB;AACA,mBAAOA,SAAP;AACD;;;iBAED,gBAAOE,YAAP,EAA0B;AACxB,iBAAK/K,GAAL,CAASgL,SAAT,CAAmB;AACjBD,0BAAY,EAAEA;AADG,aAAnB;AAGD;;;iBAED,gBAAO;AACL;AACA,iBAAK/K,GAAL,CAASiL,QAAT,CAAkB;AAChB3G,mBAAK,EAAE;AADS,aAAlB;AAGA,iBAAKtE,GAAL,CAASkL,aAAT,CAAuB;AACrBC,wBAAU,EAAE;AADS,aAAvB;AAGA,gBAAIC,UAAU,GAAGC,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAjB;AACAlH,mBAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBgH,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAxB;AACAD,wBAAY,CAACE,OAAb,CAAqB,SAArB,EAAgC,GAAhC;AACA,iBAAKrL,gBAAL,CAAsBsL,eAAtB,CAAsCJ,UAAtC;AACD;;;iBACD,qBAAY7G,QAAZ,EAA4B;AAAA;;AAC1BH,mBAAO,CAACC,GAAR,CAAY,aAAZ;AAEA,gBAAIa,WAAW,GAAE,KAAKT,aAAL,CAAmB6B,KAAnB,CAAyBpB,WAA1C;;AACE,gBAAG,CAAC,KAAKjD,QAAT,EAAkB;AAChB,mBAAKjC,GAAL,CAASyL,oBAAT,CAA8BvG,WAA9B,EAA2ChB,SAA3C,CAAqD,UAACyC,GAAD,EAAc;AACjE,oBAAGA,GAAG,IAAE,IAAR,EAAa;AACX,wBAAI,CAAC1G,aAAL,CAAmByL,0BAAnB,CAA8C/E,GAA9C,EAAmDzC,SAAnD,CAA6D,UAACyH,QAAD,EAAc;AACzE,wBAAGA,QAAQ,IAAI,KAAf,EAAqB;AACnB,4BAAI,CAACC,QAAL,CAAcrH,QAAd;AACD;AACF,mBAJD;AAKD,iBAND,MAMO;AACL,wBAAI,CAACqH,QAAL,CAAcrH,QAAd;AACD;AAEF,eAXD;AAYD,aAbD,MAaO;AACL,mBAAKqH,QAAL,CAAcrH,QAAd;AACD;AACJ;;;iBACD,kBAASA,QAAT,EAA2B;AAAA;;AACzBH,mBAAO,CAACC,GAAR,CAAYE,QAAZ;;AACA,gBAAI,KAAKhD,aAAL,GAAqB,CAAzB,EAA4B;AAC1B,mBAAKA,aAAL,GAAqBgD,QAAQ,GAAG,CAAhC;AACD;;AAED,gBAAIsH,WAAW,GAAU,EAAzB;AACAA,uBAAW,CAACvE,IAAZ,CAAiB,KAAK7C,aAAL,CAAmB6B,KAAnB,CAAyBX,oBAA1C;;AACA,gBAAI,KAAKlB,aAAL,CAAmB6B,KAAnB,CAAyBpE,gBAA7B,EAA+C;AAC7C2J,yBAAW,CAACvE,IAAZ,CAAiB,KAAK7C,aAAL,CAAmB6B,KAAnB,CAAyBpE,gBAA1C;AACD;;AAED,gBAAI4J,OAAO,GAAG;AACZpH,uBAAS,EAAE,KAAKD,aAAL,CAAmB6B,KAAnB,CAAyB5B,SADxB;AAEZC,oBAAM,EAAE,KAAKF,aAAL,CAAmB6B,KAAnB,CAAyB3B,MAFrB;AAGZK,gCAAkB,EAAE,KAAKP,aAAL,CAAmB6B,KAAnB,CAAyBtB,kBAHjC;AAIZE,yBAAW,EAAE,KAAKT,aAAL,CAAmB6B,KAAnB,CAAyBpB,WAJ1B;AAKZN,uBAAS,EAAE,KAAKH,aAAL,CAAmB6B,KAAnB,CAAyB1B,SALxB;AAMZC,sBAAQ,EAAE,KAAKJ,aAAL,CAAmB6B,KAAnB,CAAyBzB,QANvB;AAOZM,wBAAU,EAAE,KAAKV,aAAL,CAAmB6B,KAAnB,CAAyBnB,UAPzB;AAQZC,yBAAW,EAAE,KAAKX,aAAL,CAAmB6B,KAAnB,CAAyBlB,WAR1B;AASZE,oBAAM,EAAE,KAAKb,aAAL,CAAmB6B,KAAnB,CAAyBhB,MATrB;AAUZE,2BAAa,EAAE,KAAKf,aAAL,CAAmB6B,KAAnB,CAAyBd,aAV5B;AAWZC,yBAAW,EAAE,KAAKhB,aAAL,CAAmB6B,KAAnB,CAAyBb,WAX1B;AAYZ;AACAoG,yBAAW,EAAEA,WAbD;AAcZE,8BAAgB,EAAE,KAdN;AAeZC,uBAAS,EAAE;AAfC,aAAd;AAiBA5H,mBAAO,CAACC,GAAR,CAAYyH,OAAZ,EAAqB,aAArB;AACA1H,mBAAO,CAACC,GAAR,CAAY,KAAK4H,cAAjB;AAEA,iBAAKjM,GAAL,CAASkM,kBAAT,CAA4BJ,OAA5B,EAAqC5H,SAArC,CAA+C,UAACC,IAAD,EAAU;AACvDC,qBAAO,CAACC,GAAR,CAAYF,IAAZ,EAAkB,eAAlB;AACAC,qBAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCF,IAAlC;AACA,oBAAI,CAACnB,EAAL,GAAUmB,IAAI,CAACO,SAAf;;AAGA,oBAAI,CAAC7E,KAAL,CAAWuJ,IAAX,CAAgB,gCAAhB,EAAkD,IAAlD,EAAwD;AACtD+C,wBAAQ,EAAE,IAD4C;AAEtDC,gCAAgB,EAAE,KAFoC;AAGtDC,kCAAkB,EAAE;AAHkC,eAAxD,EANuD,CAYxD;;;AACCC,4BAAc,CAACf,OAAf,CAAuB,aAAvB,EAAsCpH,IAAI,CAACiH,UAA3C;AACAC,0BAAY,CAACE,OAAb,CAAqB,aAArB,EAAoCpH,IAAI,CAACiH,UAAzC;AACAkB,4BAAc,CAACf,OAAf,CAAuB,eAAvB,EAAwCpH,IAAI,CAAC4G,YAA7C;;AACA,oBAAI,CAACzB,MAAL,CAAYnF,IAAI,CAAC4G,YAAjB;;AAIA3G,qBAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCF,IAAI,CAACiH,UAAtC;AACAhH,qBAAO,CAACC,GAAR,CAAY,wBAAZ,EAAsC,MAAI,CAAC4H,cAA3C;;AACA,kBAAI,MAAI,CAACA,cAAT,EAAyB;AACvB;AACA,oBAAIM,aAAa,GAAQ,EAAzB;AACAA,6BAAa,CAACC,YAAd,GAA6B,SAA7B;AACAD,6BAAa,CAACE,YAAd,GAA6B,CAA7B;AACAF,6BAAa,CAACG,QAAd,GAAyB,MAAI,CAACT,cAAL,CAAoBU,IAA7C;AACAJ,6BAAa,CAACK,QAAd,GAAyB,MAAI,CAACX,cAAL,CAAoBhJ,IAA7C;AACAsJ,6BAAa,CAACnB,UAAd,GAA2BjH,IAAI,CAACiH,UAAhC;AACAhH,uBAAO,CAACC,GAAR,CAAYkI,aAAZ;AACA,oBAAMM,UAAU,GAAG,IAAIC,QAAJ,EAAnB;AACAD,0BAAU,CAACE,MAAX,CAAkB,MAAlB,EAA0BC,IAAI,CAACC,SAAL,CAAeV,aAAf,CAA1B;AACAM,0BAAU,CAACE,MAAX,CAAkB,MAAlB,EAA0B,MAAI,CAACd,cAA/B;;AACA,sBAAI,CAACjM,GAAL,CAASkN,cAAT,CAAwBL,UAAxB,EAAoC3I,SAApC,CAA8C,UAACyH,QAAD,EAAc;AAC1DvH,yBAAO,CAACC,GAAR,CAAYsH,QAAZ;;AACA,wBAAI,CAACwB,IAAL;AACD,iBAHD,EAGG,UAAAxD,GAAG,EAAI;AACRvF,yBAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBsF,GAArB;AACD,iBALD;AAOD;;AAED,oBAAI,CAACwD,IAAL;AAGD,aA9CD;AA+CD;;;iBACD,qBAAS;AACP,iBAAK1I,aAAL,CAAmBgF,KAAnB;AACA,iBAAK7D,QAAL,GAAgB,eAAhB;AACD;;;iBAGD,sBAAarB,QAAb,EAA+B;AAC7BH,mBAAO,CAACC,GAAR,CAAYE,QAAZ;;AACA,gBAAI,KAAKhD,aAAL,GAAqB,CAAzB,EAA4B;AAC1B,mBAAKA,aAAL,GAAqBgD,QAAQ,GAAG,CAAhC;AACD;AACF;;;iBACD,2BAAkB;AAChB;AACA,iBAAKG,SAAL,GAAiB,KAAKD,aAAL,CAAmB2I,QAAnB,CAA4B1I,SAA5B,CAAsC4B,KAAvD;;AACA,gBAAI,KAAK5B,SAAT,EAAoB;AAClB,mBAAKzC,QAAL,GAAgB,IAAhB;AACA,mBAAKoL,qBAAL;AACD;AACF;;;iBACD,gBAAOC,KAAP,EAAc;AACZ,iBAAK9L,QAAL,CAAc+L,MAAd,GAAuB,UAAvB;AACA,iBAAK/L,QAAL,CAAcgM,UAAd,GAA2B,OAA3B;AACA,iBAAKhM,QAAL,CAAciM,YAAd,GAA6BH,KAAK,CAACtI,kBAAnC;AAEA,iBAAKhF,GAAL,CAAS0N,MAAT,CAAgB,KAAKlM,QAArB,EAA+B0C,SAA/B,CAAyC,UAACC,IAAD,EAAU,CAAG,CAAtD;AACA,iBAAKwJ,eAAL,CAAqBL,KAAK,CAACtI,kBAA3B;AACD;;;iBAED,yBAAgBsI,KAAhB,EAAuB;AACrB,gBAAMnE,SAAS,GAAG,KAAK/I,MAAL,CAAYgJ,IAAZ,CAAiB,mIAAjB,EAAqD;AACrElC,kBAAI,EAAE;AAAE0G,sBAAM,EAAEN,KAAV;AAAiBX,oBAAI,EAAE;AAAvB,eAD+D;AAErEkB,0BAAY,EAAE;AAFuD,aAArD,CAAlB;AAIA1E,qBAAS,CAACI,WAAV,GAAwBrF,SAAxB,CAAkC,UAAC4J,MAAD,EAAY,CAAG,CAAjD;AACA,iBAAKC,YAAL;AACD;;;iBAED,iCAAwB;AAAA;;AACtB,iBAAKC,OAAL,GAAe,IAAf;AACA5J,mBAAO,CAACC,GAAR,CAAY,iCAAZ,EAA+CyB,KAA/C;AACA,iBAAK9F,GAAL,CAASiO,sBAAT,CAAgC,KAAKvJ,SAArC,EAAgDR,SAAhD,CAA0D,UAACgK,eAAD,EAA0B;AAClF,oBAAI,CAACF,OAAL,GAAe,KAAf;AACA5J,qBAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoC6J,eAApC;;AACA,kBAAIA,eAAe,KAAK,IAAxB,EAA8B;AAC5B,sBAAI,CAACrO,KAAL,CAAWuJ,IAAX,CAAgB,qBAAhB,EAAuC,IAAvC,EAA6C;AAC3C+C,0BAAQ,EAAE,IADiC;AAE3CC,kCAAgB,EAAE,KAFyB;AAG3CC,oCAAkB,EAAE;AAHuB,iBAA7C;;AAKA,sBAAI,CAAC5H,aAAL,CAAmB2I,QAAnB,CAA4BzI,MAA5B,CAAmCwJ,QAAnC,CAA4C,EAA5C;;AACA,sBAAI,CAAC1J,aAAL,CAAmB2I,QAAnB,CAA4BxI,SAA5B,CAAsCuJ,QAAtC,CAA+C,EAA/C;;AACA,sBAAI,CAAC1J,aAAL,CAAmB2I,QAAnB,CAA4BjI,UAA5B,CAAuCgJ,QAAvC,CAAgD,EAAhD;;AACA,sBAAI,CAAC1J,aAAL,CAAmB2I,QAAnB,CAA4BvI,QAA5B,CAAqCsJ,QAArC,CAA8C,EAA9C;;AACA,sBAAI,CAAC1J,aAAL,CAAmB2I,QAAnB,CAA4BpI,kBAA5B,CAA+CmJ,QAA/C,CAAwD,EAAxD;;AACA,sBAAI,CAAC1J,aAAL,CAAmB2I,QAAnB,CAA4BgB,OAA5B,CAAoCD,QAApC,CAA6C,EAA7C;AACD;;AACD,oBAAI,CAACE,KAAL,GAAaH,eAAe,CAACtH,gBAAhB,CAAiC,CAAjC,CAAb;AACA,oBAAI,CAAChB,QAAL,GAAgB,MAAI,CAACyI,KAAL,CAAW3I,YAA3B;AACA,oBAAI,CAAClF,UAAL,GAAkB0N,eAAe,CAACtH,gBAAlC;AACA,oBAAI,CAACnG,WAAL,GAAiByN,eAAe,CAACtH,gBAAhB,CAAiC,CAAjC,EAAoCiF,WAArD;;AACA,kBAAI,MAAI,CAACrL,UAAT,EAAqB;AACnB,sBAAI,CAAC8N,aAAL;AACD;;AACD,kBAAI,MAAI,CAAC7N,WAAT,EAAsB;AACpB,sBAAI,CAAC8N,cAAL;AACD;;AACD,oBAAI,CAACC,YAAL;;AACA,oBAAI,CAACT,YAAL;AACD,aA5BD;AA6BD;;;iBAED,yBAAgB;AACd,iBAAKtJ,aAAL,CAAmB2I,QAAnB,CAA4BzI,MAA5B,CAAmCwJ,QAAnC,CAA4C,KAAK3N,UAAL,CAAgB,CAAhB,EAAmBmE,MAA/D;AACA,iBAAKF,aAAL,CAAmB2I,QAAnB,CAA4BxI,SAA5B,CAAsCuJ,QAAtC,CAA+C,KAAK3N,UAAL,CAAgB,CAAhB,EAAmBoE,SAAlE;AACA,iBAAKH,aAAL,CAAmB2I,QAAnB,CAA4BjI,UAA5B,CAAuCgJ,QAAvC,CAAgD,KAAK3N,UAAL,CAAgB,CAAhB,EAAmB2E,UAAnE;AACA,iBAAKV,aAAL,CAAmB2I,QAAnB,CAA4BvI,QAA5B,CAAqCsJ,QAArC,CAA8C,KAAK3N,UAAL,CAAgB,CAAhB,EAAmBqE,QAAjE;AACA,iBAAKJ,aAAL,CAAmB2I,QAAnB,CAA4BpI,kBAA5B,CAA+CmJ,QAA/C,CAAwD,KAAK3N,UAAL,CAAgB,CAAhB,EAAmBwE,kBAA3E;AACA,iBAAKP,aAAL,CAAmB2I,QAAnB,CAA4BlI,WAA5B,CAAwCiJ,QAAxC,CAAiD,KAAK3N,UAAL,CAAgB,CAAhB,EAAmB0E,WAApE;AACA,iBAAKT,aAAL,CAAmB2I,QAAnB,CAA4B7H,WAA5B,CAAwC4I,QAAxC,CAAiD,KAAK3N,UAAL,CAAgB,CAAhB,EAAmB+E,WAApE;AACA,iBAAKd,aAAL,CAAmB2I,QAAnB,CAA4B5H,aAA5B,CAA0C2I,QAA1C,CAAmD,KAAK3N,UAAL,CAAgB,CAAhB,EAAmBgF,aAAtE;AACA,iBAAKf,aAAL,CAAmB2I,QAAnB,CAA4B9H,MAA5B,CAAmC6I,QAAnC,CAA4C,KAAK3N,UAAL,CAAgB,CAAhB,EAAmB8E,MAA/D;AACA,iBAAKb,aAAL,CAAmB2I,QAAnB,CAA4B3H,WAA5B,CAAwC0I,QAAxC,CAAiD,KAAK3N,UAAL,CAAgB,CAAhB,EAAmBiF,WAApE;AACD;;;iBACD,0BAAiB;AACf,iBAAKhB,aAAL,CAAmByD,GAAnB,CAAuB,+BAAvB,EAAwDiG,QAAxD,CAAiE,KAAK1N,WAAL,CAAiB,CAAjB,EAAoB6B,QAArF;AACA,iBAAKmC,aAAL,CAAmByD,GAAnB,CAAuB,+BAAvB,EAAwDiG,QAAxD,CAAiE,KAAK1N,WAAL,CAAiB,CAAjB,EAAoB8B,QAArF;AACA,iBAAKkC,aAAL,CAAmByD,GAAnB,CAAuB,oCAAvB,EAA6DiG,QAA7D,CAAsE,KAAK1N,WAAL,CAAiB,CAAjB,EAAoBoC,aAA1F;AACA,iBAAK4B,aAAL,CAAmByD,GAAnB,CAAuB,8BAAvB,EAAuDiG,QAAvD,CAAgE,KAAK1N,WAAL,CAAiB,CAAjB,EAAoBmC,OAApF;AACA,iBAAK6B,aAAL,CAAmByD,GAAnB,CAAuB,4BAAvB,EAAqDiG,QAArD,CAA8D,KAAK1N,WAAL,CAAiB,CAAjB,EAAoBqC,KAAlF;AACA,iBAAK2L,YAAL,CAAkB,KAAKhO,WAAL,CAAiB,CAAjB,EAAoBmC,OAAtC,EAA+C,KAAKnC,WAAL,CAAiB,CAAjB,EAAoB6B,QAAnE;AACA,iBAAKmC,aAAL,CAAmByD,GAAnB,CAAuB,2BAAvB,EAAoDiG,QAApD,CAA6D,KAAK1N,WAAL,CAAiB,CAAjB,EAAoB+B,IAAjF;AACA,iBAAKkM,WAAL,CAAiB,KAAKjO,WAAL,CAAiB,CAAjB,EAAoBqC,KAArC,EAA4C,KAAKrC,WAAL,CAAiB,CAAjB,EAAoB6B,QAAhE;AACA,iBAAKmC,aAAL,CAAmByD,GAAnB,CAAuB,8BAAvB,EAAuDiG,QAAvD,CAAgE,KAAK1N,WAAL,CAAiB,CAAjB,EAAoBgC,OAApF;AACD;;;iBAED,sBAAa6K,KAAb,EAAoB;AAClB,iBAAK9L,QAAL,CAAc+L,MAAd,GAAuB,UAAvB;AACA,iBAAK/L,QAAL,CAAcgM,UAAd,GAA2B,QAA3B;AACA,iBAAKhM,QAAL,CAAciM,YAAd,GAA6BH,KAAK,CAACc,OAAnC;AAEA,iBAAKpO,GAAL,CAAS0N,MAAT,CAAgB,KAAKlM,QAArB,EAA+B0C,SAA/B,CAAyC,UAACC,IAAD,EAAU,CAAG,CAAtD;AACA,iBAAKwK,WAAL,CAAiBrB,KAAK,CAACc,OAAvB;AACD;;;iBAED,qBAAYQ,WAAZ,EAAyB;AACvB,gBAAMzF,SAAS,GAAG,KAAK/I,MAAL,CAAYgJ,IAAZ,CAAiB,mIAAjB,EAAqD;AACrElC,kBAAI,EAAE;AAAE0G,sBAAM,EAAEgB,WAAV;AAAuBjC,oBAAI,EAAE;AAA7B,eAD+D;AAErEkB,0BAAY,EAAE;AAFuD,aAArD,CAAlB;AAIA1E,qBAAS,CAACI,WAAV,GAAwBrF,SAAxB,CAAkC,UAAC4J,MAAD,EAAY,CAAG,CAAjD;AACA,iBAAKU,YAAL;AACD;;;iBAED,wBAAe;AAAA;;AACb,iBAAKxO,GAAL,CAAS6O,SAAT,GAAqB3K,SAArB,CAA+B,UAAAC,IAAI,EAAI;AACrCC,qBAAO,CAACC,GAAR,CAAYF,IAAZ;;AACA,kBAAIA,IAAJ,EAAU;AACR,uBAAI,CAAC1C,SAAL,GAAiB0C,IAAI,CAAC2K,MAAtB;AACD;AACF,aALD,EAKG,UAACnF,GAAD,EAAS;AACV,qBAAI,CAAClI,SAAL,GAAiB,QAAjB;AAED,aARD;AASD;;;iBAED,wBAAe;AAAA;;AACb,iBAAKzB,GAAL,CAAS+O,UAAT,GAAsB7K,SAAtB,CAAgC,UAAAC,IAAI,EAAI;AACtCC,qBAAO,CAACC,GAAR,CAAYF,IAAZ;;AACA,kBAAIA,IAAJ,EAAU;AACR,uBAAI,CAACzC,YAAL,GAAoByC,IAAI,CAAC2K,MAAzB;AACD;AACF,aALD,EAKG,UAACnF,GAAD,EAAS;AACV,qBAAI,CAACjI,YAAL,GAAoB,QAApB;AAED,aARD;AASD;;;iBAED,4BAAmB;AAAA;;AACjB,iBAAKzB,aAAL,CAAmB+O,eAAnB,CAAmC,EAAnC,EAAuC9K,SAAvC,CAAiD,UAACyH,QAAD,EAAc;AAC7D,kBAAIA,QAAQ,IAAI,KAAhB,EAAuB;AACrB,uBAAI,CAAC/F,QAAL,GAAgB,eAAhB;AACA,uBAAI,CAACqJ,WAAL,CAAiBC,aAAjB,CAA+B5I,KAA/B,GAAuC,EAAvC;AACA,oBAAI8E,UAAU,GAAGC,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAjB;;AACA,uBAAI,CAACtL,GAAL,CAASmP,iBAAT,CAA2B/D,UAA3B,EAAuC,OAAI,CAACgE,SAA5C,EAAuDlL,SAAvD,CAAiE,UAACgD,IAAD,EAAU;AACzE,yBAAI,CAACrH,KAAL,CAAWuJ,IAAX,CAAgB,oCAAhB,EAAsD,IAAtD,EAA4D;AAC1D+C,4BAAQ,EAAE,IADgD;AAE1DC,oCAAgB,EAAE,KAFwC;AAG1DC,sCAAkB,EAAE;AAHsC,mBAA5D;AAKD,iBAND;AAOD;AACF,aAbD;AAcD;;;iBAED,yBAAgBjB,UAAhB,EAAiCiE,aAAjC,EAAwD;AAAA;;AACtD,iBAAKrP,GAAL,CAASsP,oBAAT,CAA8BlE,UAA9B,EAA0CiE,aAA1C,EAAyDnL,SAAzD,CAAmE,UAACgD,IAAD,EAAU;AAC3E9C,qBAAO,CAACC,GAAR,CAAY,SAAZ,EAAuB6C,IAAvB;;AACA,kBAAIA,IAAI,CAACE,MAAL,GAAc,CAAlB,EAAqB;AACnB,uBAAI,CAACgI,SAAL,GAAiBlI,IAAI,CAAC,CAAD,CAAJ,CAAQlE,EAAzB;AACA,uBAAI,CAAC4C,QAAL,GAAgBsB,IAAI,CAAC,CAAD,CAAJ,CAAQqI,OAAxB;AACD;AACF,aAND;AAOD;;;iBAEM,uBAAczJ,KAAd,EAAqB;AAAA;;AAC1B,iBAAKmG,cAAL,GAAsBnG,KAAK,CAACO,MAAN,CAAamJ,KAAb,CAAmB,CAAnB,CAAtB;AACA,gBAAIC,MAAM,GAAG,IAAIC,UAAJ,EAAb;AACAD,kBAAM,CAACE,aAAP,CAAqB7J,KAAK,CAACO,MAAN,CAAamJ,KAAb,CAAmB,CAAnB,CAArB;;AACAC,kBAAM,CAACG,MAAP,GAAgB,UAACC,MAAD,EAAY;AAC1B;AACA;AACA;AACA,qBAAI,CAACjK,QAAL,GAAgB6J,MAAM,CAACjG,MAAvB;AACApF,qBAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBoL,MAArB;AACD,aAND,CAJ0B,CAW1B;;AACD;;;iBAeD,kBAASK,OAAT,EAAkBC,CAAlB,EAAmB;AACjB,gBACEA,CAAC,CAACzJ,KAAF,IAAW,IAAX,IACA,CAAC,KAAK7B,aAAL,CAAmBuL,QAAnB,CAA4B,kBAA5B,CAFH,EAGE;AACA,mBAAKvL,aAAL,CAAmBwL,UAAnB,CACE,kBADF,EAEE,KAAK/N,gBAFP;AAID,aARD,MAQO;AACL,mBAAKuC,aAAL,CAAmByL,aAAnB,CAAiC,kBAAjC;AACD;AACF;;;iBAED,wBAAepK,KAAf,EAAoB;AAClB,gBAAInB,MAAM,GAAG,KAAKF,aAAL,CAAmB6B,KAAnB,CAAyB3B,MAAtC;;AACA,gBAAKA,MAAM,IAAI,IAAV,IAAkBmB,KAAK,CAACQ,KAAN,IAAe,MAAlC,IAA8C,CAAC3B,MAAM,IAAE,IAAR,IAAgBA,MAAM,IAAE,KAAzB,KAAmCmB,KAAK,CAACQ,KAAN,IAAa,QAAlG,EAA6G;AAC3G,mBAAK1E,UAAL,GAAgB,IAAhB;AACD,aAFD,MAEQ;AACN,mBAAKA,UAAL,GAAgB,KAAhB;AACA,mBAAK/B,KAAL,CAAWuJ,IAAX,CAAgB,mCAAhB,EAAqD,IAArD,EAA2D;AACzD+C,wBAAQ,EAAE,IAD+C;AAEzDC,gCAAgB,EAAE,KAFuC;AAGzDC,kCAAkB,EAAE;AAHqC,eAA3D;AAKD;AACF;;;iBAED,sBAAazJ,OAAb,EAAsBuN,OAAtB,EAA+B;AAAA;;AAC7B,iBAAKC,UAAL,GAAkB,OAAlB;AACAhM,mBAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBzB,OAAzB,EAF6B,CAG7B;AACA;;AACA,iBAAK5C,GAAL,CAASiH,eAAT,GAA2B/C,SAA3B,CAAqC,UAACgD,IAAD,EAAe;AAClD,mBAAI,IAAIC,CAAC,GAAC,CAAV,EAAaA,CAAC,GAACD,IAAI,CAACE,MAApB,EAA2BD,CAAC,EAA5B,EAA+B;AAC7B,oBAAGD,IAAI,CAACC,CAAD,CAAJ,CAAQI,WAAR,KAAwB3E,OAA3B,EAAmC;AACjC,yBAAI,CAAC5C,GAAL,CAASqQ,mBAAT,CAA6BnJ,IAAI,CAACC,CAAD,CAAJ,CAAQnE,EAArC,EAAyCkB,SAAzC,CAAmD,UAACC,IAAD,EAAe;AAChE,yBAAI,IAAIgD,EAAC,GAAC,CAAV,EAAaA,EAAC,GAAChD,IAAI,CAACiD,MAApB,EAA2BD,EAAC,EAA5B,EAA+B;AAC7B,0BAAGhD,IAAI,CAACgD,EAAD,CAAJ,CAAQE,UAAR,KAAqB,GAAxB,EAA4B;AAC1B,+BAAI,CAACvF,UAAL,CAAgBwF,IAAhB,CAAqBnD,IAAI,CAACgD,EAAD,CAAJ,CAAQmJ,SAA7B;AACD;AACF;AACF,mBAND;;AAOA;AACD;AACF;;AAEDlM,qBAAO,CAACC,GAAR,CAAY,KAAZ,EAAmB,OAAI,CAACvC,UAAxB;;AACA,kBAAIqO,OAAO,CAAC/I,MAAR,GAAiB,CAArB,EAAwB;AACtB,qBAAK,IAAMmJ,GAAX,IAAkBJ,OAAlB,EAA2B;AACzB,sBAAIK,MAAM,CAACC,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCR,OAArC,EAA8CI,GAA9C,CAAJ,EAAwD;AACtD,wBAAM5F,OAAO,GAAGwF,OAAO,CAACI,GAAD,CAAvB;;AACA,yBAAK,IAAMzN,KAAX,IAAoB,OAAI,CAAChB,UAAzB,EAAqC;AACnC,0BAAI0O,MAAM,CAACC,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqC,OAAI,CAAC7O,UAA1C,EAAsDgB,KAAtD,CAAJ,EAAkE;AAChE,4BAAM8N,YAAY,GAAG,OAAI,CAAC9O,UAAL,CAAgBgB,KAAhB,CAArB;;AACA,4BAAI8N,YAAY,CAACC,IAAb,OAAwBlG,OAAO,CAACkG,IAAR,EAA5B,EAA4C;AAC1CzM,iCAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BuM,YAA5B;;AACA,iCAAI,CAAClC,WAAL,CAAiBkC,YAAY,CAACC,IAAb,EAAjB,EAAqCV,OAArC;AACD;AACF;AACF;AACF;AACF;AACF;AACF,aA/BD;AAgCD;;;iBACD,yBAAgBvN,OAAhB,EAAyB;AAAA;;AACvB,iBAAKwN,UAAL,GAAkB,OAAlB;AACAhM,mBAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBzB,OAAzB;AACA,iBAAK5C,GAAL,CAAS8Q,uBAAT,CAAiC,KAAKV,UAAtC,EAAkDxN,OAAlD,EAA2DsB,SAA3D,CAAqE,UAACgD,IAAD,EAAU;AAC7E,qBAAI,CAAC6J,WAAL,GAAmB7J,IAAnB;AACA9C,qBAAO,CAACC,GAAR,CAAY,KAAZ,EAAmB,OAAI,CAACvC,UAAxB;AACD,aAHD;AAID;;;iBAED,qBAAYgB,KAAZ,EAAuBqN,OAAvB,EAAgC;AAAA;;AAC9B,iBAAKC,UAAL,GAAkB,MAAlB;AACAhM,mBAAO,CAACC,GAAR,CAAYvB,KAAZ;AACA,iBAAK9C,GAAL,CAAS8Q,uBAAT,CAAiC,KAAKV,UAAtC,EAAkDtN,KAAlD,EAAyDoB,SAAzD,CAAmE,UAACgD,IAAD,EAAU;AAC3E,qBAAI,CAAC8J,SAAL,GAAiB9J,IAAjB;AACA9C,qBAAO,CAACC,GAAR,CAAY,KAAZ,EAAmB,OAAI,CAAC2M,SAAxB;;AACA,kBAAIb,OAAO,CAAC/I,MAAR,GAAiB,CAArB,EAAwB;AACtB,qBAAK,IAAMmJ,GAAX,IAAkBJ,OAAlB,EAA2B;AACzB,sBAAIK,MAAM,CAACC,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCR,OAArC,EAA8CI,GAA9C,CAAJ,EAAwD;AACtD,wBAAM5F,OAAO,GAAGwF,OAAO,CAACI,GAAD,CAAvB;;AACA,yBAAK,IAAMU,IAAX,IAAmB,OAAI,CAACD,SAAxB,EAAmC;AACjC,0BAAIR,MAAM,CAACC,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqC,OAAI,CAACK,SAA1C,EAAqDC,IAArD,CAAJ,EAAgE;AAC9D,4BAAMC,WAAW,GAAG,OAAI,CAACF,SAAL,CAAeC,IAAf,CAApB;;AACA,4BAAIC,WAAW,CAACL,IAAZ,OAAuBlG,OAAO,CAACkG,IAAR,EAA3B,EAA2C;AACzCzM,iCAAO,CAACC,GAAR,CAAY,aAAZ,EAA2B6M,WAA3B;;AACA,iCAAI,CAACC,mBAAL,CAAyBjJ,GAAzB,CAA6B,2BAA7B,EAA0DiG,QAA1D,CAAmE+C,WAAnE;;AACA,iCAAI,CAAC7Q,GAAL,CAAS+Q,aAAT;;AACA,iCAAI,CAAC/Q,GAAL,CAASqJ,YAAT;AACD;AACF;AACF;AACF;AACF;AACF;AACF,aArBD;AAsBD;;;iBACD,wBAAe5G,KAAf,EAA2B;AAAA;;AACzB,iBAAKsN,UAAL,GAAkB,MAAlB;AACAhM,mBAAO,CAACC,GAAR,CAAYvB,KAAZ;AACA,iBAAK9C,GAAL,CAAS8Q,uBAAT,CAAiC,KAAKV,UAAtC,EAAkDtN,KAAlD,EAAyDoB,SAAzD,CAAmE,UAACgD,IAAD,EAAU;AAC3E,qBAAI,CAACmK,UAAL,GAAkBnK,IAAlB;AACA9C,qBAAO,CAACC,GAAR,CAAY,KAAZ,EAAmB,OAAI,CAAC2M,SAAxB;AAED,aAJD;AAKD;;;iBAED,8BAAqBlL,KAArB,EAA4B;AAC1B,gBAAIwL,GAAG,GAAGtL,MAAM,CAACC,YAAP,CAAoBH,KAAK,CAACsC,OAA1B,CAAV;;AACA,gBAAI,mBAAmBjC,IAAnB,CAAwBmL,GAAxB,CAAJ,EAAkC;AAChC,qBAAO,IAAP;AACD,aAFD,MAEO;AACLxL,mBAAK,CAACM,cAAN;AACA,qBAAO,KAAP;AACD;AACF;;;iBACD,6BAAiB;AAAA;;AACf,iBAAKpG,GAAL,CAASuR,oBAAT,GAAgCrN,SAAhC,CAA0C,UAACgD,IAAD,EAAe;AACvD,mBAAI,IAAIC,CAAC,GAAC,CAAV,EAAaA,CAAC,GAACD,IAAI,CAACE,MAApB,EAA4BD,CAAC,EAA7B,EAAgC;AAC9B,oBAAGD,IAAI,CAACC,CAAD,CAAJ,CAAQE,UAAR,IAAsB,GAAzB,EACE,OAAI,CAACrF,cAAL,CAAoBsF,IAApB,CAAyB,oCAAM,CAACJ,IAAI,CAACC,CAAD,CAAJ,CAAQqK,YAAT,CAAN,CAA6B1G,MAA7B,CAAoC,cAApC,CAAzB;AAEH;AACA,aANH;AAQM,gBAAIrH,CAAC,GAAG,IAAI1C,IAAJ,EAAR;AACA,gBAAI0Q,IAAI,GAAG,IAAI1Q,IAAJ,CAAS0C,CAAC,CAACG,WAAF,EAAT,EAAyBH,CAAC,CAACE,QAAF,KAAa,CAAtC,EAAwC,CAAxC,EAA2CD,OAA3C,EAAX;AAEA,gBAAIgO,IAAJ;AACA,gBAAIC,SAAS,GAAG,EAAhB;;AAEA,iBAAK,IAAIxK,CAAC,GAAC,CAAX,EAAaA,CAAC,IAAEsK,IAAhB,EAAqBtK,CAAC,EAAtB,EAA0B;AACtBuK,kBAAI,GAAG,IAAI3Q,IAAJ,CAAS0C,CAAC,CAACG,WAAF,KAAiB,GAAjB,IAAwBH,CAAC,CAACE,QAAF,KAAa,CAArC,IAA0C,GAA1C,GAAgDwD,CAAzD,CAAP;AACA,kBAAIyK,OAAO,GAAC,oCAAM,CAACF,IAAD,CAAN,CAAa5G,MAAb,CAAoB,MAApB,CAAZ;;AAEA,kBAAI8G,OAAO,IAAI,QAAX,IAAuBA,OAAO,IAAG,UAArC,EACA;AACE,qBAAK5P,cAAL,CAAoBsF,IAApB,CAAyB,oCAAM,CAACoK,IAAD,CAAN,CAAa5G,MAAb,CAAoB,cAApB,CAAzB;AACE6G,yBAAS,GAAGA,SAAS,GAAG,GAAZ,GAAkBxK,CAA9B;AACH;AAEJ;AACR;;;iBACD,qBAAY0K,IAAZ,EAA4B;AAAA;;AAC1B,gBAAMC,WAAW,GAAGC,QAAQ,CAACC,gBAAT,CAClB,0DADkB,CAApB;AAIAC,iBAAK,CAACC,IAAN,CAAWJ,WAAX,EAAwBpH,OAAxB,CAAgC,UAACC,OAAD,EAAa;AAC3C,kBAAMwH,WAAW,GAAGN,IAAI,CAACO,IAAL,CAAU,UAAC3O,CAAD;AAAA,uBAAOA,CAAC,KAAKkH,OAAO,CAAC0H,YAAR,CAAqB,YAArB,CAAb;AAAA,eAAV,MAA+DC,SAAnF;AAEA,kBAAIH,WAAJ,EACE,OAAI,CAAChS,QAAL,CAAcoS,YAAd,CAA2B5H,OAA3B,EAAoC,UAApC,EAAgD,EAAhD,EADF,KAGE,OAAI,CAACxK,QAAL,CAAcqS,eAAd,CAA8B7H,OAA9B,EAAuC,UAAvC;AACH,aAPD;AAQD;;;;;;;yBAz7BU/K,0B,EAA0B,wI,EAAA,uH,EAAA,4H,EAAA,2I,EAAA,0J,EAAA,8I,EAAA,wH,EAAA,mI,EAAA,gI,EAAA,2H,EAAA,kL;AAAA,O;;;cAA1BA,0B;AAA0B,+C;AAAA;AAAA;;;;;;;;;;;;;;;;;ACxBvC;;AACI;;AACA;;AAA0B;;AAAqB;;AAC/C;;AAAkD;;AAAkC;;AACpF;;AACI;;AACI;;AACC;;AACG;;AACI;;AAynBJ;;AACF;;AAIE;;AACI;;AAAoB;AAAA,qBAAS,IAAA6S,SAAA,EAAT;AAAoB,aAApB;;AAAuB;;AAAI;;AAE/C;;AAEgD;AAAA;;AAAA;;AAAA,qBAAS,IAAAC,WAAA,mBAAT;AAA4C,aAA5C;;AAA8C;;AAA2B;;AAAI;;AAAO;;AACxI;;AACJ;;AAGA;;AACI;;AAEI;;AAA6B;;AAAoB;;AACjD;;AACA;;AACA;;AACI;;AACI;;AACI;;AAAuB;;AAAW;;AAClC;;AACA;;AACI;;AACyB;AAAA,qBAAkB,IAAAC,QAAA,QAAlB;AAAkC,aAAlC;;AACmB;;AAChD;;AACJ;;AAEA;;AACI;;AAAuB;;AAAW;;AAClC;;AAAoB;;AAAuD;;AAC3E;;AACA;;AAcJ;;AAEJ;;AACJ;;AACJ;;AAEA;;AACI;;AAAmB;AAAA;;AAAA;;AAAA,qBAAS,IAAAC,YAAA,mBAAT;AAA6C,aAA7C;;AAA+C;;AAAI;;AAEtE;;AAGA;AAAA,qBAAS,IAAAC,0BAAA,EAAT;AAAqC,aAArC;;AAAuC;;AAA2B;;AAAM;;AAAO;;AACnF;;AACJ;;AACJ;;AACJ;;AACJ;;;;AAjsBwD;;AAAA;;AACT;;AAAA;;AAGpB;;AAAA;;AAioBoB;;AAAA,+MACI,UADJ,EACI,yBADJ;;AAOG;;AAAA;;AAYA;;AAAA,mGAAyB,WAAzB,EAAyB,aAAzB,EAAyB,SAAzB,EAAyB,WAAzB,EAAyB,SAAzB,EAAyB,WAAzB;;AAS4B;;AAAA;;AACpB;;AAAA;;AAuBX;;AAAA,qLACP,UADO,EACP,aADO;;;;;;;;;;wEDtqBlCjT,0B,EAA0B;gBALtC,uDAKsC;iBAL5B;AACTH,oBAAQ,EAAE,wBADD;AAETC,uBAAW,EAAE,qCAFJ;AAGTC,qBAAS,EAAE,CAAC,qCAAD;AAHF,W;AAK4B,U;;;;;;;;;;;;;;;;;;;;;;;;;AAoDXsP,qBAAW,EAAE,CAAF;kBAApC,uDAAoC;mBAA1B,a;AAA0B,WAAE;;;;;;;;;;;;;;;;;;;AE5EzoFa6D,uB;;;;;cAAAA;;;;2BAAAA,uB;AAAuB,S;AAAA,kBA9CvB,CACL,4DADK,EAEL,0DAFK,EAGL,qEAHK,EAIL,6EAJK,EAKL,qFALK,EAML,kEANK,EAOL,qEAPK,EAQL,qEARK,EASL,wEATK,EAUL,oEAVK,EAWL,qEAXK,EAYL,yEAZK,EAaL,4FAbK,EAcL,yEAdK,EAeL,oFAfK,EAgBL,8EAhBK,EAiBL,gFAjBK,EAkBL,sEAlBK,EAmBL,4EAnBK,EAoBL,uEApBK,EAqBL,qEArBK,EAsBL,2EAtBK,EAuBL,uEAvBK,EAwBL,oFAxBK,EAyBL,qEAzBK,EA2BL,+DA3BK,EA6BL,yEA7BK,EA8BL,gFA9BK,EA+BL,uEA/BK,EAgCL,0EAhCK,EAiCL,8DAAaC,QAAb,CAAsB,wEAAtB,CAjCK,CA8CuB;;;;4HAAvBD,uB,EAAuB;AAAA,yBAV5B,kHAU4B,EAT5B,yFAS4B,EAR5B,gEAQ4B,EAP5B,wFAO4B,EAN5B,+EAM4B,EAL5B,2EAK4B;AALT,oBAxCnB,4DAwCmB,EAvCnB,0DAuCmB,EAtCnB,qEAsCmB,EArCnB,6EAqCmB,EApCnB,qFAoCmB,EAnCnB,kEAmCmB,EAlCnB,qEAkCmB,EAjCnB,qEAiCmB,EAhCnB,wEAgCmB,EA/BnB,oEA+BmB,EA9BnB,qEA8BmB,EA7BnB,yEA6BmB,EA5BnB,4FA4BmB,EA3BnB,yEA2BmB,EA1BnB,oFA0BmB,EAzBnB,8EAyBmB,EAxBnB,gFAwBmB,EAvBnB,sEAuBmB,EAtBnB,4EAsBmB,EArBnB,uEAqBmB,EApBnB,qEAoBmB,EAnBnB,2EAmBmB,EAlBnB,uEAkBmB,EAjBnB,oFAiBmB,EAhBnB,qEAgBmB,EAdnB,+DAcmB,EAZnB,yEAYmB,EAXnB,gFAWmB,EAVnB,uEAUmB,EATnB,0EASmB,EATA,6DASA;AAKS,S;AAdT,O;;;;;wEAcdA,uB,EAAuB;gBA/CnC,sDA+CmC;iBA/C1B;AACNE,mBAAO,EAAE,CACL,4DADK,EAEL,0DAFK,EAGL,qEAHK,EAIL,6EAJK,EAKL,qFALK,EAML,kEANK,EAOL,qEAPK,EAQL,qEARK,EASL,wEATK,EAUL,oEAVK,EAWL,qEAXK,EAYL,yEAZK,EAaL,4FAbK,EAcL,yEAdK,EAeL,oFAfK,EAgBL,8EAhBK,EAiBL,gFAjBK,EAkBL,sEAlBK,EAmBL,4EAnBK,EAoBL,uEApBK,EAqBL,qEArBK,EAsBL,2EAtBK,EAuBL,uEAvBK,EAwBL,oFAxBK,EAyBL,qEAzBK,EA2BL,+DA3BK,EA6BL,yEA7BK,EA8BL,gFA9BK,EA+BL,uEA/BK,EAgCL,0EAhCK,EAiCL,8DAAaD,QAAb,CAAsB,wEAAtB,CAjCK,CADH;AAoCNE,wBAAY,EAAE,CACV,kHADU,EAEV,yFAFU,EAGV,gEAHU,EAIV,wFAJU,EAKV,+EALU,EAMV,2EANU,CApCR;AA6CNC,2BAAe,EAAE;AA7CX,W;AA+C0B,U;;;;;;;;;;;;;;;;;;ACpFpC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAGO,UAAMC,+CAA+C,GAAmB;AAC3EC,eAAO,EAAE,gEADkE;AAE3EC,mBAAW,EAAE,iEAAW;AAAA,iBAAMC,mBAAN;AAAA,SAAX,CAF8D;AAG3EC,aAAK,EAAE;AAHoE,OAAxE;;UAUMD,mB;AAKT,qCACYE,UADZ,EAEYrT,QAFZ,EAE+B;AAAA;;AADnB,eAAAqT,UAAA,GAAAA,UAAA;AACA,eAAArT,QAAA,GAAAA,QAAA;AAEX;;;;iBAGD,uBAAcmG,KAAd,EAA6B;AACzB,gBAAMmN,aAAa,GAAWC,WAAW,CAACpN,KAAD,CAAzC;AACA,iBAAKqN,eAAL,CAAqBF,aAArB,EAAoC,KAAKnN,KAAL,KAAemN,aAAnD;AACH;;;iBAGD,kBAAS;AACL,iBAAKG,SAAL;AACH;;;iBAEO,yBAAgBtN,KAAhB,EAA+BuN,eAA/B,EAAyD;AAC7D,iBAAK1T,QAAL,CAAc2T,WAAd,CAA0B,KAAKN,UAAL,CAAgBtE,aAA1C,EAAyD,OAAzD,EAAkE5I,KAAlE;;AACA,gBAAIuN,eAAJ,EAAqB;AACjB,mBAAKE,QAAL,CAAczN,KAAd;AACH;;AACD,iBAAKA,KAAL,GAAaA,KAAb;AACH,W,CAED;;;;iBACA,0BAAiB0N,EAAjB,EAAwB;AACpB,iBAAKD,QAAL,GAAgBC,EAAhB;AACH;;;iBAED,2BAAkBA,EAAlB,EAAyB;AACrB,iBAAKJ,SAAL,GAAiBI,EAAjB;AACH;;;iBAED,0BAAiBC,UAAjB,EAAoC;AAChC,iBAAK9T,QAAL,CAAc2T,WAAd,CAA0B,KAAKN,UAAL,CAAgBtE,aAA1C,EAAyD,UAAzD,EAAqE+E,UAArE;AACH;;;iBAED,oBAAW3N,KAAX,EAAqB;AACjBA,iBAAK,GAAGA,KAAK,GAAGN,MAAM,CAACM,KAAD,CAAT,GAAmB,EAAhC;AACA,iBAAKqN,eAAL,CAAqBrN,KAArB,EAA4B,KAA5B;AACH;;;;;;;yBA9CQgN,mB,EAAmB,yH,EAAA,wH;AAAA,O;;;cAAnBA,mB;AAAmB,2C;AAAA;AAAA;;qBAAnB,sC;AAAkC,a,EAAA,M,EAAA;AAAA,qBAAlC,YAAkC;AAA1B,a;;;oFAFN,CAACH,+CAAD,C;;;;;wEAEFG,mB,EAAmB;gBAJ/B,uDAI+B;iBAJrB;AACP7T,oBAAQ,EAAE,cADH;AAEPyU,qBAAS,EAAE,CAACf,+CAAD;AAFJ,W;AAIqB,U;;;;;;;AAY5BgB,uBAAa;kBADZ,0DACY;mBADC,O,EAAS,CAAC,qBAAD,C;AACV,Y;AAMbC,gBAAM;kBADL,0DACK;mBADQ,M;AACR;;;;AA+BV,eAASV,WAAT,CAAqBpN,KAArB,EAA0B;AACtB,eAAOA,KAAK,CAAC+N,OAAN,CAAc,UAAd,EAA0B,EAA1B,CAAP;AACH;;;;;;;;;;;;;;;;;AChED;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAOaC,c;AAEX,gCAAoBC,MAApB,EAA6CC,EAA7C,EAA4D;AAAA;;AAAxC,eAAAD,MAAA,GAAAA,MAAA;AAAyB,eAAAC,EAAA,GAAAA,EAAA;AAEP,eAAAC,eAAA,GAAuB,aAAvB;AACV,eAAAC,GAAA,GAAW,OAAX;AAHmC;;;;iBAI/D,oBAAQ;AAENtQ,mBAAO,CAACC,GAAR,CAAY,KAAKpB,IAAjB;AACD;;;iBACsB,qBAAS;AAE5BmB,mBAAO,CAACC,GAAR,CAAY,QAAZ;AACE,iBAAKoQ,eAAL,GAAqB,SAArB;AACA,iBAAKC,GAAL,GAAS,OAAT;AACH;;;;;;;yBAfQJ,c,EAAc,wH,EAAA,yH;AAAA,O;;;cAAdA,c;AAAc,yC;AAAA,mB;AAAA;AAAA;;qBAAd,e;AAAW,a;;;;;;;;;;;;;;wEAAXA,c,EAAc;gBAH1B,uDAG0B;iBAHhB;AACT7U,oBAAQ,EAAE;AADD,W;AAGgB,U;;;;;;;AAChBwD,cAAI,EAAE,CAAF;kBAAZ;AAAY,WAAE,C;AAGuBwR,yBAAe;kBAApD,yDAAoD;mBAAxC,uB;AAAwC,Y;AACzBC,aAAG;kBAA9B,yDAA8B;mBAAlB,a;AAAkB,Y;AAKRC,mBAAS;kBAA/B,0DAA+B;mBAAlB,O;AAAkB;;;;;;;;;;;;;;;;;;;ACjBlC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;AC8BgC;;AAEE;;AAAmB;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAEnB;;AAC6B;;AAAQ;;AAAO;;AAE9C;;;;;;AAJgB;;AAAA;;AAEe;;AAAA;;;;;;;;AAO3B;;AAEI;;AAAmB;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AACJ;;AACa;;AAAS;;AAAO;;AAChD;;;;;;AADgC;;AAAA;;;;;;;;AAM5B;;AAEI;;AAAmB;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AACH;;AACY;;AAAS;;AAAO;;AAChD;;;;;;AADgC;;AAAA;;;;;;;;AAM5B;;AAEI;;AAAmB;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AACL;;AACc;;AAAS;;AAAO;;AAChD;;;;;;AADgC;;AAAA;;;;;;;;AAM5B;;AAEI;;AAAmB;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AACJ;;AACa;;AAAS;;AAAO;;AAChD;;;;;;AADgC;;AAAA;;;;UD/CnEC,4B;AAUX,8CAAoB9U,MAApB,EAA2CE,GAA3C,EACUK,GADV,EACwCD,MADxC,EACiEoU,EADjE,EAC8E;AAAA;;AAD1D,eAAA1U,MAAA,GAAAA,MAAA;AAAuB,eAAAE,GAAA,GAAAA,GAAA;AACjC,eAAAK,GAAA,GAAAA,GAAA;AAA8B,eAAAD,MAAA,GAAAA,MAAA;AAAyB,eAAAoU,EAAA,GAAAA,EAAA;AAVjE,eAAArT,cAAA,GAAgB,EAAhB;AACA,eAAA0T,MAAA,GAAS,IAAT;AACA,eAAAC,MAAA,GAAS,QAAT;AAEA,eAAArM,QAAA,GAAkB,KAAlB;AACA,eAAArH,KAAA,GAAM,CAAN;AAOA,eAAA2T,WAAA,GAAY,CAAC,UAAD,EAAY,UAAZ,EAAuB,UAAvB,CAAZ;AACA,eAAAC,WAAA,GAAY,CAAC,UAAD,EAAY,UAAZ,EAAuB,UAAvB,CAAZ;AACA,eAAAC,WAAA,GAAY,CAAC,UAAD,EAAY,UAAZ,EAAuB,UAAvB,CAAZ;AACA,eAAAC,WAAA,GAAY,CAAC,UAAD,EAAY,UAAZ,EAAuB,UAAvB,CAAZ;AACA,eAAAC,WAAA,GAAY,CAAC,UAAD,EAAY,UAAZ,EAAuB,UAAvB,CAAZ;AACA,eAAAC,iBAAA,GAAkB,CAAC,UAAD,EAAY,UAAZ,EAAuB,UAAvB,EAAkC,UAAlC,EAA6C,UAA7C,EAAwD,UAAxD,EAClB,UADkB,EACP,UADO,EACI,UADJ,EACe,UADf,EAC0B,UAD1B,EACqC,UADrC,EACgD,UADhD,EAC2D,UAD3D,EACsE,UADtE,CAAlB;AAPiF;;;;iBAajF,oBAAW;AAAA;;AACT/L,gBAAI,EAAE,IAAI,0DAAJ,CAAgB;AAAC/C,mBAAK,EAAE,IAAR;AAAc9G,sBAAQ,EAAE;AAAxB,aAAhB;;AAEN,iBAAKQ,GAAL,CAASqV,SAAT,GAAqBnR,SAArB,CAA+B,UAAAC,IAAI,EAAI;AACrC,qBAAI,CAACmR,SAAL,CAAenR,IAAI,CAAC4G,YAApB;;AACA3G,qBAAO,CAACC,GAAR,CAAYF,IAAI,CAAC4G,YAAjB;AACD,aAHD,EAHS,CAOT;AACA;AAIA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA3G,mBAAO,CAACC,GAAR,CAAY,KAAKmQ,EAAjB;AACD;;;iBAED,mBAAUzJ,YAAV,EAAwB;AACtB,iBAAKzB,MAAL,GAAcyB,YAAd;AACD;;;iBAED,uBAAcvC,IAAd,EAAmBrB,CAAnB,EAAqBrB,KAArB,EAA0B;AAGxB1B,mBAAO,CAACC,GAAR,CAAYmE,IAAZ,EAAiBrB,CAAjB,EAAmBrB,KAAnB,EAHwB,CAIxB;;AAEA,iBAAK3E,cAAL,CAAoBmG,IAApB,CAAyBkB,IAAzB;AACApE,mBAAO,CAACC,GAAR,CAAY,KAAKlD,cAAjB;AACA,iBAAKsH,QAAL,GAAc,IAAd;AAEA,iBAAKrH,KAAL,GAVwB,CAWxB;AACA;AAEA;AACE;AAEF;AAED;;;iBAGD,sCAA6B;AAE3BgD,mBAAO,CAACC,GAAR,CAAY,KAAKkR,iBAAjB;AAID,iBAAKlV,GAAL,CAASqJ,YAAT,GAN4B,CAO3B;AACA;AACA;AACA;;AACDqI,oBAAQ,CAACyD,cAAT,CAAwB,GAAxB,EAA6BC,KAA7B,CAAmChB,eAAnC,GAAmD,iBAAnD;AACC,gBAAMtL,SAAS,GAAG,KAAK/I,MAAL,CAAYgJ,IAAZ,CAAiB,uFAAjB,EAAuC;AACvD;AACA;AACAlC,kBAAI,EAAE;AAACsB,oBAAI,EAAE,KAAKrH,cAAZ;AAA4BkI,oBAAI,EAAE,KAAKJ,YAAvC;AAAqDK,sBAAM,EAAE,KAAKA;AAAlE;AAHiD,aAAvC,CAAlB;AAQAH,qBAAS,CAACI,WAAV,GAAwBrF,SAAxB,CAAkC,UAAAsF,MAAM,EAAI;AAC1CpF,qBAAO,CAACC,GAAR,CAAY,uBAAZ,EAD0C,CAE1C;AACD,aAHD,EApB2B,CAwB3B;AACA;AACA;AACA;AACA;AAED;;;iBACD,qBAAYyB,KAAZ,EAAsC;AACpC,gBAAM4P,GAAG,GAAG5P,KAAK,CAAC4P,GAAN,CAAUC,SAAtB;AACAvR,mBAAO,CAACC,GAAR,CAAYqR,GAAZ;;AACA,gBAAGA,GAAG,KAAG,sBAAT,EACA;AACE,mBAAK5V,MAAL,CAAYwI,aAAZ,CAA0B,6BAA1B;AACD;;AACD,gBAAGoN,GAAG,KAAG,mBAAT,EAA8B;AAC5B,mBAAK5V,MAAL,CAAYwI,aAAZ,CAA0B,qBAA1B;AACD;AACF;;;iBACD,kBAASxC,KAAT,EAAc;AACZ1B,mBAAO,CAACC,GAAR,CAAYyB,KAAZ;AACA,iBAAKmD,YAAL,GAAmBnD,KAAK,CAAC8P,EAAzB;AACAxR,mBAAO,CAACC,GAAR,CAAY,KAAK4E,YAAjB,EAHY,CAIZ;AAED;;;iBACD,qBAAS,CAEP;AACA;AACA;AACA;AACA;AAED;;;;;;;yBAtIU2L,4B,EAA4B,uH,EAAA,2I,EAAA,gI,EAAA,mI,EAAA,yH;AAAA,O;;;cAA5BA,4B;AAA4B,iD;AAAA,iB;AAAA,e;AAAA,0wB;AAAA;AAAA;AC7BzC;;AACI;;AAAsB;;AAAkC;;AACxD;;AACI;;AAA0D;AAAA,qBAAqB,IAAAiB,WAAA,QAArB;AAAwC,aAAxC;;AACtD;;AACA;;AACJ;;AACJ;;AACJ;;AACA;;AACQ;;AAA6B;;AAAiB;;AAC9C;;AACA;;AACJ;;AACI;;AACI;;AACI;;AAAM;;AAAW;;AACjB;;AACQ;;AAEA;AAAA,qBAAkB,IAAAlD,QAAA,QAAlB;AAAkC,aAAlC;;AAAoC;;AACxC;;AACR;;AAEA;;AACI;;AAAM;;AAAW;;AACjB;;AAEQ;;AACI;;AACI;;AAQJ;;AACJ;;AACA;;AACQ;;AACI;;AAMJ;;AACJ;;AACA;;AACQ;;AACI;;AAMJ;;AACJ;;AACA;;AACQ;;AACI;;AAMJ;;AACJ;;AACA;;AACQ;;AACI;;AAMJ;;AACJ;;AACpB;;AAIR;;AAEJ;;AACJ;;AACJ;;AACA;;AACI;;AAAgC;;AAAI;;AACpC;;AAA+C;AAAA,qBAAS,IAAAE,0BAAA,EAAT;AAAqC,aAArC;;AAAuC;;AAAI;;AAE9F;;;;AA1F8C;;AAAA;;AAgBtB;;AAAA;;AAW0C;;AAAA;;AAYK;;AAAA;;AAUI;;AAAA;;AAUI;;AAAA;;AAUI;;AAAA;;;;;;;;;wED3CtE+B,4B,EAA4B;gBANxC,uDAMwC;iBAN9B;AACTnV,oBAAQ,EAAE,0BADD;AAETC,uBAAW,EAAE,uCAFJ;AAGTC,qBAAS,EAAE,CAAC,uCAAD;AAHF,W;AAM8B,U;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AE5BzC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAIO,UAAMmW,WAAW,GAAW,CAC/B;AACIC,YAAI,EAAE,cADV;AAEIC,iBAAS,EAAE;AAFf,OAD+B,EAO/B;AACID,YAAI,EAAC,sBADT;AAEIC,iBAAS,EAAC;AAFd,OAP+B,EAW/B;AACID,YAAI,EAAC,UADT;AAEIC,iBAAS,EAAC;AAFd,OAX+B,CAA5B","file":"views-others-video-verification-video-verification-module-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport {ThemePalette} from '@angular/material/core';\r\n@Component({\r\n  selector: 'app-calljoin',\r\n  templateUrl: './calljoin.component.html',\r\n  styleUrls: ['./calljoin.component.scss']\r\n})\r\nexport class CalljoinComponent implements OnInit {\r\n\r\n  constructor() { }\r\n  color: ThemePalette = 'accent';\r\n  checked = false;\r\n  disabled = false;\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"background\">\r\n    <div fxLayout=\"row wrap\">\r\n        <div fxFlex=\"30\"></div>\r\n\r\n\r\n        <div fxFlex=\"40\">\r\n\r\n            <h3 fxLayoutAlign=\"center stretch\" class=\"heading\">Choose your audio and video settings</h3>\r\n        </div>\r\n\r\n        <div fxFlex=\"30\"></div>\r\n\r\n    </div>\r\n<div fxLayout=\"row wrap\">\r\n<div fxFlex=\"100\">\r\n    <div fxFlex=\"20\"></div>\r\n<mat-card class=\"card\" >\r\n        <div fxLayoutAlign=\"center stretch\"><img src=\"assets/images/call.png\" ></div>\r\n        <br>\r\n        <div fxLayout=\"row wrap\">\r\n            <div fxFlex=\"100\" fxLayoutAlign=\"center stretch\">\r\n                    <button mat-stroked-button class=\"Next\">Proceed</button>\r\n            </div>\r\n        </div>\r\n        <br>\r\n        <div fxLayout=\"row wrap\">\r\n            <div fxFlex=\"100\">\r\n                <div fxFlex=\"30\">\r\n                    \r\n                </div>\r\n                <div fxFlex=\"10\">\r\n                        <mat-icon>videocam_off</mat-icon>\r\n                </div>\r\n                <div fxFlex=\"10\">\r\n                        <mat-slide-toggle>\r\n\r\n                            </mat-slide-toggle>\r\n                    </div>\r\n                    <div fxFlex=\"10\">\r\n                            <mat-icon>mic_off</mat-icon>\r\n                        </div>\r\n                        <div fxFlex=\"10\">\r\n                                <mat-slide-toggle>\r\n\r\n                                    </mat-slide-toggle>\r\n                            </div>\r\n                <div fxFlex=\"30\"></div>\r\n            </div>\r\n        </div>\r\n        \r\n        \r\n</mat-card>\r\n<div fxFlex=\"20\"></div>\r\n</div>\r\n</div>\r\n\r\n</div>\r\n","import { Component, OnInit, ChangeDetectorRef, ViewChild, ElementRef, Renderer2 } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { MatTabChangeEvent } from '@angular/material/tabs';\r\nimport { Router } from '@angular/router';\r\nimport { VideoService } from './video.service';\r\nimport { IcustCustomerVideoVerification } from './IcustCustomerVideoVerification';\r\nimport { AppointmentComponent } from './appointment/appointment.component';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { OtpModel } from '../kyc-basic-information/kyc-basic-information.component';\r\nimport { FingerprintAuthenticationComponent } from '../fingerprint-authentication/fingerprint-authentication.component';\r\nimport { empty } from 'rxjs';\r\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\r\nimport { DialogService } from 'app/shared/services/dialogs/dialog.service';\r\nimport * as moment from 'moment';\r\nimport { DataService } from 'app/shared/services/data.service';\r\nimport { ApplicationEntryStageService } from 'app/shared/services/application-entry-stage.service';\r\nimport { MatCalendarCellClassFunction } from '@angular/material/datepicker';\r\n\r\n@Component({\r\n  selector: 'app-video-verification',\r\n  templateUrl: './video-verification.component.html',\r\n  styleUrls: ['./video-verification.component.scss']\r\n})\r\nexport class VideoVerificationComponent implements OnInit {\r\n  // selectTime1=['10:00 am','10:30 am','11:00 am'];\r\n  // selectTime2=['11:30 am','12:00 pm','12:30 pm'];\r\n  // selectTime3=['01:00 pm','01:30 pm','02:00 pm'];\r\n  // selectTime4=['02:30 pm','03:00 pm','03:30 pm'];\r\n  // selectTime5=['04:00 pm','04:30 pm','05:00 pm'];\r\n  masterInfo: any = {};\r\n  addressInfo:any={};\r\n  tellerId = 1;\r\n  loggedInUser = 1;\r\n  basicInfoForm: FormGroup;\r\n  title: string[] = [\r\n    'Mr',\r\n    'Ms',\r\n    'Mrs',\r\n  ];\r\n  TimeSolts = [];\r\n  tomorrow = new Date();\r\n  maxDate = new Date();\r\n  minDate = new Date();\r\n\r\n  cifNumberForm = new FormControl()\r\n\r\n  selectedDate: any;\r\n\r\n  icustCustVideoVerifyDto: IcustCustomerVideoVerification;\r\n\r\n  dateCollection:any = [];\r\n  showNext: boolean;\r\n  dataFromBasicInfo: any;\r\n  count: any = 0;\r\n  availableSlots = [];\r\n  showSpinn: boolean;\r\n  kycTimeOption = false;\r\n  selectedIndex: number = 0;\r\n  sendingtime: any;\r\n  link: any;\r\n  cifNumber: any;\r\n  totalavailableSlots: any;\r\n  selectTime1: any;\r\n  bookedSlots: any;\r\n  tabIndex: Number;\r\n  tab2: boolean;\r\n  tab1: boolean;\r\n  loading: boolean;\r\n  otpmodel = new OtpModel();\r\n  mobVerify: any = \"Verify\";\r\n  emaillVerify: any = \"Verify\";\r\n  imageURL: any;\r\n  \r\n  profileId: any;\r\n\r\n  @ViewChild(\"profileFile\") profileFile: ElementRef;\r\n  profilePicture: any;\r\n  arrayPrefix: any[] = [];\r\n  prefixes: string;\r\n  prefixFlag: boolean = false;\r\n  index: string;\r\n  gender: string;\r\n  resi: string;\r\n  marr: string;\r\n  coun: string;\r\n  nation: string;\r\n  countrys: string[] = [];\r\n  genders: string[];\r\n  Residences: string[];\r\n  MarritialStatus: string[];\r\n  indexs: string[];\r\n  nationality: string[];\r\n  entityName: string;\r\n  arrayState: string[] = [];\r\n  arrayState1: string[];\r\n  arrayCity: string[];\r\n  kycVerificationForm: any;\r\n  arrayCity1: string[];\r\n  id: any;\r\n\r\n  timer: any;\r\n  listOfCustByCif: any = [];\r\n  image: any;\r\n  datewitmAmPm:string;\r\n  disabledsatsun:any[] = [];\r\n  cifFetch: any = false;\r\n\r\n  \r\n  constructor(private snack: MatSnackBar, private router: Router, private videoService: VideoService, private api: ApiService,\r\n    private dialogService: DialogService,\r\n    private shareDataService: DataService,\r\n    private renderer: Renderer2,\r\n    private dialog: MatDialog, private cdr: ChangeDetectorRef,\r\n\r\n    private fb: FormBuilder, private appApiService: ApplicationEntryStageService,) {\r\n    this.maxDate.setDate(this.maxDate.getDate() + 7);\r\n    //this.tomorrow.setDate(this.tomorrow.getDate())\r\n\r\n  }\r\n\r\n  permanentAddress: FormGroup = this.fb.group({\r\n    addressType: [\"Permanent\", [Validators.required]],\r\n    address1: [\"\", [Validators.required]],\r\n    address2: [\"\", [Validators.required]],\r\n    city: [\"\", [Validators.required]],\r\n    zipCode: [\"\", [Validators.required, Validators.minLength(5), Validators.maxLength(10)]],\r\n    country: [\"\", [Validators.required]],\r\n    residenceType: [\"\", [Validators.required]],\r\n    state: [\"\", [Validators.required]],\r\n  });\r\n\r\n  ngOnInit() {\r\n  \r\n    this.getDoc();\r\n    this.calculateHolidays();\r\n    this.callingTimeslots();\r\n    this.api.getIndex().subscribe(resp => {\r\n      console.log(resp.index)\r\n      this.tabIndex = resp.index;\r\n\r\n      if (resp.index === 1) {\r\n        this.assignValuesForTab2(this.tabIndex);\r\n      }\r\n\r\n      \r\n      // TODO WITH MATTAB DISABLE CUSTOM LATER\r\n      // this.tabGroup._tabs[resp.index].disabled = true;\r\n    })\r\n    this.prefixFlag=true;\r\n    this.basicInfoForm = this.fb.group({\r\n      cifNumber: ['',],\r\n      prefix: ['', [Validators.required]],\r\n      firstName: ['', [Validators.required]],\r\n     // middleName: ['',],\r\n      lastName: ['', [Validators.required]],\r\n      \r\n      // primaryEmail: ['', [Validators.required, Validators.pattern('^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\\\.[a-zA-Z]{2,4}$')]],\r\n      // phoneNo: ['', [Validators.pattern(\"^((\\\\+91-?)|0)?[0-9]{10}$\")]],\r\n      scheduledDate: [''],\r\n      scheduledTime: ['null'],\r\n\r\n      primaryEmailAdress: [\"\", [Validators.required, Validators.pattern('^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\\\.[a-zA-Z]{2,4}$')]],\r\n      phoneNumber: ['', [Validators.required, Validators.pattern(\"^((\\\\+91-?)|0)?[0-9]{10}$\")]],\r\n      middleName: [\"\"],\r\n      customer_id: [\"\"], //we need to add customerid dynamically based on Post and Put method --->added by jaya\r\n      isAddressSame: [\"\"],\r\n      gender: [\"\", [Validators.required]],\r\n      dateOfBirth: [\"\", [Validators.required]],\r\n      maritalStatus: [\"\", [Validators.required]],\r\n      nationality: [\"\", [Validators.required]],\r\n      profileImage: [\"\"],\r\n\r\n      communicationAddress: this.fb.group({\r\n        addressType: [\"Communication\", [Validators.required]],\r\n        address1: [\"\", [Validators.required]],\r\n        address2: [\"\", [Validators.required]],\r\n        city: [\"\", [Validators.required]],\r\n        zipCode: [\"\", [Validators.required, Validators.minLength(5), Validators.maxLength(10)]],\r\n        country: [\"\", [Validators.required]],\r\n        residenceType: [\"\", [Validators.required]],\r\n        state: [\"\", [Validators.required]],\r\n      }),\r\n    });\r\n    this.imageURL = \"not_available\"\r\n    this.link = \"vide_link\";\r\n\r\n  }\r\n\r\n  onKeyPress(event: any) {\r\n    const pattern = /[0-9]/;\r\n    let inputChar = String.fromCharCode(event.charCode);\r\n    if (!pattern.test(inputChar)) {\r\n      event.preventDefault();\r\n    }\r\n    console.log(event.target.value);\r\n    clearTimeout(this.timer)\r\n    if (!event.target.value) {\r\n      this.listOfCustByCif = []\r\n    } else {\r\n      this.timer = setTimeout(() => {\r\n        this.appApiService.fetchByCif(event.target.value).subscribe((res: any) => { \r\n          console.log(res);\r\n          if (res) {\r\n            this.listOfCustByCif = res.customerInfoList\r\n          }\r\n        })\r\n      }, 1000);\r\n    }\r\n  }\r\n\r\n  getDoc() {\r\n    this.index = \"prefix\";\r\n  \r\n    this.gender = \"gender\";\r\n    this.resi = \"residence\";\r\n    this.marr = \"maritial_Status\";\r\n    this.coun = \"country\";\r\n    this.nation = \"nationality\";\r\n   \r\n    // this.api.getDropDownValues(this.coun).subscribe((responseData) => {\r\n    //   this.countrys = responseData;\r\n    //   console.log(\"this.countrys::\", this.countrys)\r\n    // });\r\n    this.api.getAllCountries().subscribe((data: any) => {\r\n      for(let i=0; i<data.length;i++){\r\n        if(data[i].authStatus==='A'){\r\n          this.countrys.push(data[i].countryName);\r\n        }\r\n      }\r\n    });\r\n    this.api.getDropDownValues(this.gender).subscribe((responseDatas) => {\r\n      this.genders = responseDatas;\r\n    });\r\n    this.api.getDropDownValues(this.resi).subscribe((responses) => {\r\n      this.Residences = responses;\r\n    });\r\n    this.api.getDropDownValues(this.marr).subscribe((respo) => {\r\n      this.MarritialStatus = respo;\r\n    });\r\n    this.api.getDropDownValues(this.index).subscribe((re) => {\r\n      this.indexs = re;\r\n    });\r\n    this.api.getDropDownValues(this.nation).subscribe((datas) => {\r\n      this.nationality = datas;\r\n    });\r\n  }\r\n\r\n  get sameAddress() {\r\n    return this.basicInfoForm.get(\"isAddressSame\").value;\r\n  }\r\n  \r\n  assignValuesForTab2(tabIndex) {\r\n    this.tab2 = true;\r\n  }\r\n  _keyPress(event: any) {\r\n    const pattern = /[0-9]/;\r\n    let inputChar = String.fromCharCode(event.charCode);\r\n    if (!pattern.test(inputChar)) {\r\n      event.preventDefault();\r\n\r\n    }\r\n  }\r\n  letterOnly(event) {\r\n    var charCode = event.keyCode;\r\n    if ((charCode > 64 && charCode < 91) || (charCode > 96 && charCode < 123) || charCode == 8)\r\n      return true;\r\n    else\r\n      return false;\r\n  }\r\n  callingTimeslots() {\r\n    this.TimeSolts = [\r\n      {\r\n         \"time\":\"9:00\",\r\n         \"available\":true,\r\n         \"selected\":false,\r\n         \"booked\":false\r\n      },\r\n      {\r\n         \"time\":\"9:30\",\r\n         \"available\":true,\r\n         \"selected\":false,\r\n         \"booked\":false\r\n      },\r\n      {\r\n         \"time\":\"10:00\",\r\n         \"available\":true,\r\n         \"selected\":false,\r\n         \"booked\":false\r\n      },\r\n      {\r\n         \"time\":\"10:30\",\r\n         \"available\":true,\r\n         \"selected\":false,\r\n         \"booked\":false\r\n      },\r\n      {\r\n         \"time\":\"11:00\",\r\n         \"available\":true,\r\n         \"selected\":false,\r\n         \"booked\":false\r\n      },\r\n      {\r\n         \"time\":\"11:30\",\r\n         \"available\":true,\r\n         \"selected\":false,\r\n         \"booked\":false\r\n      },\r\n      {\r\n         \"time\":\"12:00\",\r\n         \"available\":true,\r\n         \"selected\":false,\r\n         \"booked\":false\r\n      },\r\n      {\r\n         \"time\":\"12:30\",\r\n         \"available\":true,\r\n         \"selected\":false,\r\n         \"booked\":false\r\n      },\r\n      {\r\n         \"time\":\"13:00\",\r\n         \"available\":true,\r\n         \"selected\":false,\r\n         \"booked\":false\r\n      },\r\n      {\r\n         \"time\":\"13:30\",\r\n         \"available\":true,\r\n         \"selected\":false,\r\n         \"booked\":false\r\n      },\r\n      {\r\n         \"time\":\"14:00\",\r\n         \"available\":true,\r\n         \"selected\":false,\r\n         \"booked\":false\r\n      },\r\n      {\r\n         \"time\":\"14:30\",\r\n         \"available\":true,\r\n         \"selected\":false,\r\n         \"booked\":false\r\n      },\r\n      {\r\n         \"time\":\"15:00\",\r\n         \"available\":true,\r\n         \"selected\":false,\r\n         \"booked\":false\r\n      },\r\n      {\r\n         \"time\":\"15:30\",\r\n         \"available\":true,\r\n         \"selected\":false,\r\n         \"booked\":false\r\n      },\r\n      {\r\n         \"time\":\"16:00\",\r\n         \"available\":true,\r\n         \"selected\":false,\r\n         \"booked\":false\r\n      },\r\n      {\r\n         \"time\":\"16:30\",\r\n         \"available\":true,\r\n         \"selected\":false,\r\n         \"booked\":false\r\n      },\r\n      {\r\n         \"time\":\"17:00\",\r\n         \"available\":true,\r\n         \"selected\":false,\r\n         \"booked\":false\r\n      }\r\n   ];\r\n  }\r\n  backToKyc() {\r\n    this.dialogService.openKycVerificationMethod();\r\n    this.router.navigateByUrl('others/Service')\r\n  }\r\n\r\n  onNextOfVideoVerification(form: any) {\r\n    console.log(form.value);\r\n    this.basicInfoForm = form.value;\r\n\r\n    //  this.videoService.sendUserDetailsOFVideo(this.basicInfoForm);\r\n    this.router.navigateByUrl('/video/schedule-appointment')\r\n  }\r\n  onSelectTime1(time, i,event) {\r\n    this.showNext = true;\r\n\r\n    this.datewitmAmPm=event.target.innerText;\r\n    this.count++;\r\n    if (this.count > 1) {\r\n      this.dateCollection = [];\r\n      console.log(!this.TimeSolts[i].selected);\r\n      this.showNext =!this.TimeSolts[i].selected ;\r\n    }\r\n    console.log(\"Time\", time, i);\r\n\r\n    this.TimeSolts[i].selected = !this.TimeSolts[i].selected;\r\n    this.TimeSolts[i].available = !this.TimeSolts[i].available;\r\n    console.log(this.TimeSolts[i].selected);\r\n    const index = this.dateCollection.indexOf(time);\r\n    if (index > -1 && !this.TimeSolts[i].selected) {\r\n      this.dateCollection.splice(index, 1);\r\n    }\r\n    else if (index == -1 && this.TimeSolts[i].selected) {\r\n      this.dateCollection.push(time);\r\n      console.log(this.dateCollection);\r\n    }\r\n    \r\n  }\r\n  onNextOfSheduleAppointment() {\r\n\r\n    this.icustCustVideoVerifyDto = this.basicInfoForm.value;\r\n    this.icustCustVideoVerifyDto.scheduledDate = this.selectedDate;\r\n    this.icustCustVideoVerifyDto.scheduledTime = this.dateCollection;\r\n    this.icustCustVideoVerifyDto.tellerId = this.tellerId;\r\n    this.icustCustVideoVerifyDto.loggedInUser = this.loggedInUser;\r\n\r\n    \r\n\r\n    this.videoService.saveCustBasicInfoData(this.icustCustVideoVerifyDto).subscribe(data => {\r\n      console.log(\"data link\", data);\r\n      this.link = data;\r\n      const dialogRef = this.dialog.open(AppointmentComponent, {\r\n\r\n        data: { time:  this.datewitmAmPm, date: this.selectedDate, link: this.link, kycRef: this.kycRef }\r\n\r\n      });\r\n\r\n      dialogRef.afterClosed().subscribe(result => {\r\n        console.log('The dialog was closed');\r\n        // this.animal = result;\r\n      });\r\n      // this.previousStep(1);\r\n      this.basicInfoForm.reset();\r\n      this.selectedDate = null;\r\n      this.TimeSolts = [];\r\n      //  console.log(\"in video\",this.link);\r\n      this.cdr.markForCheck();\r\n\r\n    },\r\n      err => {\r\n        console.log(err.message);\r\n      })\r\n\r\n\r\n    this.cdr.markForCheck();\r\n  }\r\n\r\n  bookSlot(bookedTime){\r\n    var now=new Date(); \r\n    var time = bookedTime;\r\n    var dt = (now.getMonth()+1) + \"/\" + now.getDate() + \"/\" + now.getFullYear() + \" \" + time;\r\n    //var now = new Date();\r\n    var userval = new Date(dt);\r\n    if (now > userval) {\r\n    return false;\r\n   }else{\r\n  return true;\r\n   }\r\n  }\r\n\r\n  onSelect(event) {\r\n    for(let i=0;i<this.TimeSolts.length;i++){\r\n      \r\n    var slot=  this.bookSlot(this.format24HrsTo12Hrs(this.TimeSolts[i].time));\r\n    this.TimeSolts[i].booked=slot;\r\n\r\n    }\r\n    \r\n    \r\n    //console.log(\"today\", moment(today).format('YYYY-MMM-DD HH:MM:SS'),moment(event).format('YYYY-MMM-DD') )\r\n    this.callingTimeslots();\r\n    this.showSpinn = true;\r\n    this.dateCollection = [];\r\n    console.log(event);\r\n    this.selectedDate = this.videoService.convertDate(event);\r\n    console.log(\"selectedDate\", this.selectedDate);\r\n    this.api.gettingAvailableSlotsTeller(this.selectedDate, this.tellerId).subscribe((availableSlotsResp: any) => {\r\n      console.log(\"Available Slots\", availableSlotsResp,);\r\n      // availableSlotsResp[0].availableSlots\r\n      if (availableSlotsResp) {\r\n        this.showSpinn = false;\r\n        this.kycTimeOption = true;\r\n        availableSlotsResp.bookedSlots.forEach(element => {\r\n          const index = this.TimeSolts.map(x => x.time).indexOf(element);\r\n          if (index > -1) {\r\n            this.TimeSolts[index].available = false;\r\n            this.TimeSolts[index].booked = true;\r\n          }\r\n        });\r\n\r\n      }\r\n    });\r\n  }\r\n\r\n  format24HrsTo12Hrs(time){\r\n    var formatted = moment(time, \"HH:mm\").format(\"LT\");\r\n    console.log(\"time\", time,formatted)\r\n    return formatted;\r\n  }\r\n\r\n  kycRef(kycReference: any) {\r\n    this.api.setKycRef({\r\n      kycReference: kycReference,\r\n    });\r\n  }\r\n\r\n  next() {\r\n    // this.kycVerificationForm.reset();\r\n    this.api.setIndex({\r\n      index: 1,\r\n    });\r\n    this.api.setFinishFlag({\r\n      finishFlag: false,\r\n    });\r\n    let customerId = localStorage.getItem('customer_id');\r\n    console.log(\"custId::\", localStorage.getItem('customer_id'))\r\n    localStorage.setItem('page_id', '1');\r\n    this.shareDataService.shareCustomerId(customerId);\r\n  }\r\n  onClickNext(tabIndex: number){\r\n    console.log('onClicknext');\r\n    \r\n    let phoneNumber =this.basicInfoForm.value.phoneNumber;\r\n      if(!this.cifFetch){\r\n        this.api.fetchCustomerDetails(phoneNumber).subscribe((res: any) => {\r\n          if(res!=null){\r\n            this.dialogService.phoneNumberDetailsDialogue(res).subscribe((response) => {\r\n              if(response == \"Yes\"){\r\n                this.nextStep(tabIndex);\r\n              } \r\n            });\r\n          } else {\r\n            this.nextStep(tabIndex);\r\n          }\r\n         \r\n        });\r\n      } else {  \r\n        this.nextStep(tabIndex);\r\n      }\r\n  }\r\n  nextStep(tabIndex: number) {\r\n    console.log(tabIndex);\r\n    if (this.selectedIndex < 2) {\r\n      this.selectedIndex = tabIndex + 1;\r\n    }\r\n\r\n    let userAddress: any[] = [];\r\n    userAddress.push(this.basicInfoForm.value.communicationAddress);\r\n    if (this.basicInfoForm.value.permanentAddress) {\r\n      userAddress.push(this.basicInfoForm.value.permanentAddress);\r\n    }\r\n\r\n    let payload = {\r\n      cifNumber: this.basicInfoForm.value.cifNumber,\r\n      prefix: this.basicInfoForm.value.prefix,\r\n      primaryEmailAdress: this.basicInfoForm.value.primaryEmailAdress,\r\n      phoneNumber: this.basicInfoForm.value.phoneNumber,\r\n      firstName: this.basicInfoForm.value.firstName,\r\n      lastName: this.basicInfoForm.value.lastName,\r\n      middleName: this.basicInfoForm.value.middleName,\r\n      customer_id: this.basicInfoForm.value.customer_id,\r\n      gender: this.basicInfoForm.value.gender,\r\n      maritalStatus: this.basicInfoForm.value.maritalStatus,\r\n      nationality: this.basicInfoForm.value.nationality,\r\n      // dateOfBirth:this.basicInfoForm.value.dateOfBirth,\r\n      userAddress: userAddress,\r\n      verificationType: 'KYC',\r\n      kycSubmit: false\r\n    };\r\n    console.log(payload, \" :: Payload\");\r\n    console.log(this.profilePicture);\r\n\r\n    this.api.kycScreenBasicinfo(payload).subscribe((resp) => {\r\n      console.log(resp, \"Next response\");\r\n      console.log(\"resp after saving \", resp)\r\n      this.id = resp.cifNumber\r\n\r\n      \r\n      this.snack.open(\"Basic Information Data Saved! \", \"OK\", {\r\n        duration: 4000,\r\n        verticalPosition: \"top\",\r\n        horizontalPosition: \"right\",\r\n      });\r\n       \r\n     // this.disableDays(this.disabledsatsun);\r\n      sessionStorage.setItem('customer_id', resp.customerId);\r\n      localStorage.setItem('customer_id', resp.customerId);\r\n      sessionStorage.setItem('kyc_reference', resp.kycReference);\r\n      this.kycRef(resp.kycReference);\r\n\r\n\r\n\r\n      console.log(\"resp.customerId::\", resp.customerId)\r\n      console.log(\"(this.profilePicture::\", this.profilePicture)\r\n      if (this.profilePicture) {\r\n        // console.log(this.profilePicture)\r\n        let profileUpload: any = {};\r\n        profileUpload.documentName = \"Profile\";\r\n        profileUpload.documentType = 1;\r\n        profileUpload.fileType = this.profilePicture.type;\r\n        profileUpload.fileName = this.profilePicture.name;\r\n        profileUpload.customerId = resp.customerId;\r\n        console.log(profileUpload);\r\n        const uploadData = new FormData();\r\n        uploadData.append('data', JSON.stringify(profileUpload));\r\n        uploadData.append('file', this.profilePicture);\r\n        this.api.uploadDocument(uploadData).subscribe((response) => {\r\n          console.log(response);\r\n          this.next();\r\n        }, err => {\r\n          console.log(\"error\", err)\r\n        }\r\n        );\r\n      }\r\n      \r\n      this.next();\r\n\r\n\r\n    });\r\n  }\r\n  resetData(){\r\n    this.basicInfoForm.reset();\r\n    this.imageURL = \"not_available\";\r\n  }\r\n\r\n\r\n  previousStep(tabIndex: number) {\r\n    console.log(tabIndex);\r\n    if (this.selectedIndex > 0) {\r\n      this.selectedIndex = tabIndex - 2;\r\n    }\r\n  }\r\n  autofillDetails() {\r\n    // this.basicInfoForm.reset();\r\n    this.cifNumber = this.basicInfoForm.controls.cifNumber.value;\r\n    if (this.cifNumber) {\r\n      this.cifFetch = true;\r\n      this.getallCustomerDetails();\r\n    }\r\n  }\r\n  getOtp(email) {\r\n    this.otpmodel.source = \"customer\";\r\n    this.otpmodel.source_key = \"email\";\r\n    this.otpmodel.source_value = email.primaryEmailAdress;\r\n\r\n    this.api.getOtp(this.otpmodel).subscribe((resp) => { });\r\n    this.openDialogEmail(email.primaryEmailAdress);\r\n  }\r\n\r\n  openDialogEmail(email) {\r\n    const dialogRef = this.dialog.open(FingerprintAuthenticationComponent, {\r\n      data: { number: email, type: \"email id\" },\r\n      disableClose: true,\r\n    });\r\n    dialogRef.afterClosed().subscribe((submit) => { });\r\n    this.emailsverify();\r\n  }\r\n\r\n  getallCustomerDetails() {\r\n    this.loading = true;\r\n    console.log(\"CIF video verification ---- :: \", event);\r\n    this.api.gettingCustomerDetails(this.cifNumber).subscribe((allCustomerResp: any) => {\r\n      this.loading = false;\r\n      console.log(\"All Customer Details\", allCustomerResp);\r\n      if (allCustomerResp === null) {\r\n        this.snack.open(\"Invalid CIF number!\", \"OK\", {\r\n          duration: 4000,\r\n          verticalPosition: \"top\",\r\n          horizontalPosition: \"right\",\r\n        });\r\n        this.basicInfoForm.controls.prefix.setValue('');\r\n        this.basicInfoForm.controls.firstName.setValue('');\r\n        this.basicInfoForm.controls.middleName.setValue('');\r\n        this.basicInfoForm.controls.lastName.setValue('');\r\n        this.basicInfoForm.controls.primaryEmailAdress.setValue('');\r\n        this.basicInfoForm.controls.phoneNo.setValue('');\r\n      }\r\n      this.image = allCustomerResp.customerInfoList[0];\r\n      this.imageURL = this.image.profileImage;\r\n      this.masterInfo = allCustomerResp.customerInfoList;\r\n      this.addressInfo=allCustomerResp.customerInfoList[0].userAddress;\r\n      if (this.masterInfo) {\r\n        this.setCustValues();\r\n      }\r\n      if (this.addressInfo) {\r\n        this.setCustValues2();\r\n      }\r\n      this.mobileverify();\r\n      this.emailsverify();\r\n    });\r\n  }\r\n\r\n  setCustValues() {\r\n    this.basicInfoForm.controls.prefix.setValue(this.masterInfo[0].prefix);\r\n    this.basicInfoForm.controls.firstName.setValue(this.masterInfo[0].firstName);\r\n    this.basicInfoForm.controls.middleName.setValue(this.masterInfo[0].middleName);\r\n    this.basicInfoForm.controls.lastName.setValue(this.masterInfo[0].lastName);\r\n    this.basicInfoForm.controls.primaryEmailAdress.setValue(this.masterInfo[0].primaryEmailAdress);\r\n    this.basicInfoForm.controls.phoneNumber.setValue(this.masterInfo[0].phoneNumber);\r\n    this.basicInfoForm.controls.dateOfBirth.setValue(this.masterInfo[0].dateOfBirth);\r\n    this.basicInfoForm.controls.maritalStatus.setValue(this.masterInfo[0].maritalStatus);\r\n    this.basicInfoForm.controls.gender.setValue(this.masterInfo[0].gender);\r\n    this.basicInfoForm.controls.nationality.setValue(this.masterInfo[0].nationality);\r\n  }\r\n  setCustValues2() {\r\n    this.basicInfoForm.get('communicationAddress.address1').setValue(this.addressInfo[0].address1);\r\n    this.basicInfoForm.get('communicationAddress.address2').setValue(this.addressInfo[0].address2);\r\n    this.basicInfoForm.get('communicationAddress.residenceType').setValue(this.addressInfo[0].residenceType);\r\n    this.basicInfoForm.get('communicationAddress.country').setValue(this.addressInfo[0].country);\r\n    this.basicInfoForm.get('communicationAddress.state').setValue(this.addressInfo[0].state);\r\n    this.getStateName(this.addressInfo[0].country, this.addressInfo[0].address1);\r\n    this.basicInfoForm.get('communicationAddress.city').setValue(this.addressInfo[0].city);\r\n    this.getCityName(this.addressInfo[0].state, this.addressInfo[0].address1);\r\n    this.basicInfoForm.get('communicationAddress.zipCode').setValue(this.addressInfo[0].zipCode);\r\n  }\r\n\r\n  getOtpMobile(email) {\r\n    this.otpmodel.source = \"customer\";\r\n    this.otpmodel.source_key = \"mobile\";\r\n    this.otpmodel.source_value = email.phoneNo;\r\n\r\n    this.api.getOtp(this.otpmodel).subscribe((resp) => { });\r\n    this.openDialog1(email.phoneNo);\r\n  }\r\n\r\n  openDialog1(phoneNUmber) {\r\n    const dialogRef = this.dialog.open(FingerprintAuthenticationComponent, {\r\n      data: { number: phoneNUmber, type: \"Mobile Number\" },\r\n      disableClose: true,\r\n    });\r\n    dialogRef.afterClosed().subscribe((submit) => { });\r\n    this.mobileverify();\r\n  }\r\n\r\n  mobileverify() {\r\n    this.api.getverify().subscribe(resp => {\r\n      console.log(resp);\r\n      if (resp) {\r\n        this.mobVerify = resp.verify;\r\n      }\r\n    }, (err) => {\r\n      this.mobVerify = \"Verify\"\r\n\r\n    })\r\n  }\r\n\r\n  emailsverify() {\r\n    this.api.getverify1().subscribe(resp => {\r\n      console.log(resp);\r\n      if (resp) {\r\n        this.emaillVerify = resp.verify;\r\n      }\r\n    }, (err) => {\r\n      this.emaillVerify = \"Verify\"\r\n\r\n    })\r\n  }\r\n\r\n  deleteProfileImg() {\r\n    this.dialogService.doConfirmDialog('').subscribe((response) => {\r\n      if (response == \"Yes\") {\r\n        this.imageURL = \"not_available\";\r\n        this.profileFile.nativeElement.value = '';\r\n        let customerId = localStorage.getItem('customerId');\r\n        this.api.deleteCustomerDoc(customerId, this.profileId).subscribe((data) => {\r\n          this.snack.open('Profile Image Deleted Successfully', 'OK', {\r\n            duration: 4000,\r\n            verticalPosition: 'top',\r\n            horizontalPosition: 'right'\r\n          });\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  getProfileImage(customerId: any, document_type: number) {\r\n    this.api.getCustomerDocuments(customerId, document_type).subscribe((data) => {\r\n      console.log(\"data ::\", data);\r\n      if (data.length > 0) {\r\n        this.profileId = data[0].id;\r\n        this.imageURL = data[0].fileUrl;\r\n      }\r\n    });\r\n  }\r\n\r\n  public onFileChanged(event) {\r\n    this.profilePicture = event.target.files[0];\r\n    let reader = new FileReader();\r\n    reader.readAsDataURL(event.target.files[0]);\r\n    reader.onload = (event2) => {\r\n      // this.imgUrl = reader.result;\r\n      //this.fun(event.target.files[0], this.profilePicture);\r\n      //  this.image = reader.result;\r\n      this.imageURL = reader.result;\r\n      console.log(\"file \", reader);\r\n    };\r\n    // console.log(this.profilePicture);\r\n  }\r\n\r\n  array = [\r\n    {\r\n      id: 1,\r\n      checked: true,\r\n      name: \"Yes\",\r\n    },\r\n    {\r\n      id: 2,\r\n      checked: false,\r\n      name: \"No\",\r\n    },\r\n  ];\r\n\r\n  onChange(control, e): void {\r\n    if (\r\n      e.value == \"No\" &&\r\n      !this.basicInfoForm.contains(\"permanentAddress\")\r\n    ) {\r\n      this.basicInfoForm.addControl(\r\n        \"permanentAddress\",\r\n        this.permanentAddress\r\n      );\r\n    } else {\r\n      this.basicInfoForm.removeControl(\"permanentAddress\");\r\n    }\r\n  }\r\n\r\n  onChangeGender(event){\r\n    let prefix = this.basicInfoForm.value.prefix;\r\n    if ((prefix == \"Mr\" && event.value == \"Male\") || ((prefix==\"Ms\" || prefix==\"Mrs\") && event.value==\"Female\")) {\r\n      this.prefixFlag=true;\r\n    }  else {\r\n      this.prefixFlag=false;\r\n      this.snack.open(\"Prefix and Gender does not match!\", \"OK\", {\r\n        duration: 4000,\r\n        verticalPosition: \"top\",\r\n        horizontalPosition: \"right\",\r\n      });\r\n    }\r\n  }\r\n\r\n  getStateName(country, address) {\r\n    this.entityName = \"state\";\r\n    console.log(\"State -- \", country)\r\n    // this.api.getDropDownForStateCity(this.entityName, country).subscribe((data) => {\r\n    //   this.arrayState = data;\r\n    this.api.getAllCountries().subscribe((data: any) => {\r\n      for(let i=0; i<data.length;i++){       \r\n        if(data[i].countryName === country){\r\n          this.api.getStateByCountryId(data[i].id).subscribe((resp: any) => {\r\n            for(let i=0; i<resp.length;i++){\r\n              if(resp[i].authStatus==='A'){\r\n                this.arrayState.push(resp[i].stateName);\r\n              }\r\n            }\r\n          })\r\n          break;   \r\n        }\r\n      }\r\n\r\n      console.log(\"-->\", this.arrayState)\r\n      if (address.length > 0) {\r\n        for (const key in address) {\r\n          if (Object.prototype.hasOwnProperty.call(address, key)) {\r\n            const element = address[key];\r\n            for (const state in this.arrayState) {\r\n              if (Object.prototype.hasOwnProperty.call(this.arrayState, state)) {\r\n                const elementState = this.arrayState[state];\r\n                if (elementState.trim() === element.trim()) {\r\n                  console.log('elementState', elementState)\r\n                  this.getCityName(elementState.trim(),address);\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    });\r\n  }\r\n  getPerStateName(country) {\r\n    this.entityName = \"state\";\r\n    console.log(\"State -- \", country)\r\n    this.api.getDropDownForStateCity(this.entityName, country).subscribe((data) => {\r\n      this.arrayState1 = data;\r\n      console.log(\"-->\", this.arrayState)\r\n    });\r\n  }\r\n\r\n  getCityName(state: any,address) {\r\n    this.entityName = \"city\";\r\n    console.log(state)\r\n    this.api.getDropDownForStateCity(this.entityName, state).subscribe((data) => {\r\n      this.arrayCity = data;\r\n      console.log(\"-->\", this.arrayCity)\r\n      if (address.length > 0) {\r\n        for (const key in address) {\r\n          if (Object.prototype.hasOwnProperty.call(address, key)) {\r\n            const element = address[key];\r\n            for (const City in this.arrayCity) {\r\n              if (Object.prototype.hasOwnProperty.call(this.arrayCity, City)) {\r\n                const elementCity = this.arrayCity[City];\r\n                if (elementCity.trim() === element.trim()) {\r\n                  console.log('elementCity', elementCity)\r\n                  this.kycVerificationForm.get('communicationAddress.city').setValue(elementCity);\r\n                  this.cdr.detectChanges();\r\n                  this.cdr.markForCheck();\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    });\r\n  }\r\n  getPerCityName(state: any) {\r\n    this.entityName = \"city\";\r\n    console.log(state)\r\n    this.api.getDropDownForStateCity(this.entityName, state).subscribe((data) => {\r\n      this.arrayCity1 = data;\r\n      console.log(\"-->\", this.arrayCity)\r\n\r\n    });\r\n  }\r\n\r\n  keyPressAlphanumeric(event) {\r\n    var inp = String.fromCharCode(event.keyCode);\r\n    if (/^[a-zA-Z0-9_@]*$/.test(inp)) {\r\n      return true;\r\n    } else {\r\n      event.preventDefault();\r\n      return false;\r\n    }\r\n  }\r\n  calculateHolidays(){\r\n    this.api.getBranchHolidayInfo().subscribe((data: any) => {\r\n      for(let i=0; i<data.length; i++){\r\n        if(data[i].authStatus == \"A\")\r\n          this.disabledsatsun.push(moment(data[i].calenderDate).format('MMMM D, YYYY'));\r\n        \r\n      }\r\n      });\r\n      \r\n          var d = new Date();\r\n          var pred = new Date(d.getFullYear(),d.getMonth()+1,0).getDate();\r\n          \r\n          var nowd;\r\n          var sat_array = \"\";\r\n          \r\n          for (let i=1;i<=pred;i++) {\r\n              nowd = new Date(d.getFullYear()+ \"-\" + (d.getMonth()+1) + \"-\" + i);\r\n              var weekday=moment(nowd).format('dddd');\r\n          \r\n              if (weekday == 'Sunday' || weekday== 'Saturday')\r\n              {\r\n                this.disabledsatsun.push(moment(nowd).format('MMMM D, YYYY'));\r\n                  sat_array = sat_array + \",\" + i;\r\n              }\r\n          \r\n          }\r\n  }\r\n  disableDays(days: string[]) {\r\n    const dayElements = document.querySelectorAll(\r\n      'mat-calendar .mat-calendar-table .mat-calendar-body-cell'\r\n    );\r\n\r\n    Array.from(dayElements).forEach((element) => {\r\n      const matchingDay = days.find((d) => d === element.getAttribute('aria-label')) !== undefined;\r\n\r\n      if (matchingDay) \r\n        this.renderer.setAttribute(element, 'disabled', '');\r\n        else \r\n        this.renderer.removeAttribute(element, 'disabled');\r\n    });\r\n  }\r\n  dateClass: MatCalendarCellClassFunction<Date> = (cellDate, view) => {\r\n \r\n    if (view === 'month') {\r\n      \r\n      const highlightDate = this.disabledsatsun\r\n      .map((strDate) => new Date(strDate))\r\n      .some(\r\n        (d) =>\r\n          d.getDate() === cellDate.getDate() &&\r\n          d.getMonth() === cellDate.getMonth() &&\r\n          d.getFullYear() === cellDate.getFullYear()\r\n      );\r\n           return highlightDate ? 'custom-date-class' : '';\r\n    }\r\n      return '';  \r\n    }\r\n  \r\n\r\n\r\n  \r\n}\r\n","<div class=\"head mt-32\">\r\n    <br>\r\n    <h4 class=\"headerMapping\">Home > KYC Screening </h4>\r\n    <h1 class=\"main-head\" style=\"padding-left: 5.1%;\">KYC Screening | Video Verification</h1>\r\n    <div class=\"basic-container\">\r\n        <mat-tab-group mat-align-tabs=\"start\" #tabgroup [selectedIndex]=\"selectedIndex\"  style=\"background-color: #F5F5F5\">\r\n            <mat-tab label=\"Basic Information\" [disabled]='!tab1' style=\"height: 100%;\">\r\n             <div class=\"outerDiv\">\r\n                <mat-card class=\"marginTopKyc\">\r\n                    <form *ngIf=\"basicInfoForm\" [formGroup]=\"basicInfoForm\">\r\n                        <h3 class=\"verificationHead\">Basic Information</h3>\r\n                        <hr class=\"line\" />\r\n\r\n                        <div class=\"formSectionContainer\">\r\n                            <div class=\"formLeft\">\r\n                                <div>\r\n                                    <button \r\n                                        mat-icon-button \r\n                                        style=\"float: right; padding-top: 8px; padding-left: 30px;cursor: pointer;\">\r\n                                        <input type=\"file\" #profileFile input type=\"file\"\r\n                                            (change)=\"onFileChanged($event)\"\r\n                                            accept=\"image/png, image/gif, image/jpg, image/jpeg\" class=\"changeInput\"\r\n                                        >\r\n                                        <mat-icon color=\"primary\">edit</mat-icon>\r\n                                    </button>\r\n                                </div>\r\n                                <div *ngIf=\"imageURL == 'not_available'; else showAvatar\">\r\n                                    <img class=\"formImg\" [src]=\"'assets/images/no-image.jpg'\" alt=\"\">\r\n                                </div>\r\n                                <ng-template #showAvatar>\r\n                                    <img class=\"formImg\" [src]=\"imageURL\" alt=\"\">\r\n                                </ng-template>\r\n\r\n                                <div>\r\n                                    <mat-icon style=\"color: red; margin-left: 94%; cursor: pointer;\"\r\n                                        (click)=\" deleteProfileImg()\">delete\r\n                                    </mat-icon>\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                            <div>\r\n                                <div>\r\n                                    <div class=\"form\" id=\"formfetch\">\r\n                                        <div class=\"flex-grow-1\" id=\"fech\">\r\n                                            <div fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n                                                <div>\r\n                                                    <mat-hint>CIF Number</mat-hint>\r\n                                                    <mat-card type=\"input\" class=\"widthCard inputMatcard\">\r\n                                                        <input matInput formControlName=\"cifNumber\" class=\"alignment\"\r\n                                                            type=\"number\" min=\"0\" oninput=\"validity.valid ||(value='');\"\r\n                                                            (keyup)=\"onKeyPress($event)\" [formControl]=\"cifNumberForm\" [matAutocomplete]=\"auto\" name=\"cifNumber\" value=\"cifNumber\">\r\n                                                    </mat-card><div>\r\n                                                        <mat-autocomplete #auto=\"matAutocomplete\">\r\n                                                            <mat-option *ngFor=\"let option of listOfCustByCif\" [value]=\"option.customerId\">\r\n                                                                <div fxLayout=\"row wrap\" style=\"margin-top: 20px;\">\r\n                                                                    <div fxFlex=\" 100\">\r\n                                                                        <div mat-card-avatar *ngIf=\"option?.profileImage =='not_available'\" class=\"example-header-image-dropdown\" fxFlex=\"10\">\r\n                                                                            <h3 align=\"center\" style=\"margin-top: 5px;font-size: large;\">\r\n                                                                                {{option?.firstName | slice:0:1 | uppercase}}{{option?.lastName | slice:0:1 | uppercase}}\r\n                                                                            </h3>\r\n                                                                        </div>\r\n                                                                        <div *ngIf=\"option?.profileImage !='not_available'\" mat-card-avatar fxFlex=\"10\">\r\n                                                                            <img matListAvatar\r\n                                                                                style=\"border-radius: 50%;height: 85%;margin-right: 20px;width: 100%;margin-bottom: 50px;\"\r\n                                                                                align=\"center\" [src]=\"option?.profileImage\" alt=\"...\">\r\n                                                                        </div>\r\n                                                                        <div fxFlex=\"80\">\r\n                                                                            <h5 style=\"margin-bottom: 0px;\">\r\n                                                                                {{option?.firstName | uppercase}}\r\n                                                                                {{option?.middleName | uppercase}}\r\n                                                                                {{option?.lastName | uppercase}}\r\n                                                                            </h5>\r\n                                                                            <h6 style=\"margin-top: 0px;\">#{{option?.cifNumber}}</h6>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </mat-option>\r\n                                                        </mat-autocomplete>\r\n                                                    </div>\r\n                                                </div>\r\n\r\n                                            </div>\r\n                                            <div class=\"flex-grow-1\" class=\"fechButtonDiv\">\r\n                                                <p class=\"fetchButton\" *ngIf=\"!loading\" (click)=\"autofillDetails()\">\r\n                                                    Fetch</p>\r\n                                                <mat-spinner *ngIf=\"loading\" [diameter]=\"40\" class=\"fetchButton\">\r\n                                                </mat-spinner>\r\n                                            </div>\r\n                                            \r\n\r\n                                        </div>\r\n                                        <div  class=\"fechButtonDiv\">\r\n                                            <p [hidden]=\"!basicInfoForm.get('cifNumber')?.value\" class=\"fetchButton\" (click)=\"resetData()\">Reset</p>\r\n                                          </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div class=\"form\" id=\"formfetch\">\r\n                                    <div class=\"flex-grow-1\" id=\"fech\">\r\n                                        <div class=\"flex-grow-2\" style=\"margin-left: -1px;\">\r\n                                            <mat-hint>Prefix*</mat-hint>\r\n                                            <mat-card class=\"widthCard inputMatcard\"\r\n                                                [ngClass]=\"{'errbd': !basicInfoForm.get('prefix').valid && basicInfoForm.get('prefix').touched}\">\r\n                                                <mat-select formControlName=\"prefix\">\r\n                                                    <mat-option value=\"\">Select</mat-option>\r\n                                                    <mat-option *ngFor=\"let i of indexs \" [value]=\"i\">{{ i }}</mat-option>\r\n                                                </mat-select>\r\n                                            </mat-card>\r\n                                            <mat-error *ngIf=\"!basicInfoForm.get('prefix').valid && basicInfoForm.get('prefix').touched\">\r\n                                                Please Select Prefix\r\n                                            </mat-error>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div class=\"flex-grow-1\">\r\n                                        <mat-hint>First Name*</mat-hint>\r\n                                        <mat-card class=\"inputMatName\"\r\n                                            [ngClass]=\"{'errbd': !basicInfoForm.get('firstName').valid && basicInfoForm.get('firstName').touched}\">\r\n\r\n                                            <input matInput formControlName=\"firstName\" class=\"alignment\" type=\"text\"\r\n                                                name=\"lastName\" (keypress)=\"letterOnly($event)\"\r\n                                                value=\"updateUserInfo.firstName\" />\r\n\r\n                                        </mat-card>\r\n                                        <mat-error *ngIf=\"!basicInfoForm.get('firstName').valid && basicInfoForm.get('firstName').touched\">\r\n                                            Please Enter First Name\r\n                                        </mat-error>\r\n                                    </div>\r\n\r\n                                    <div class=\"flex-grow-1\">\r\n                                        <mat-hint>Middle Name</mat-hint>\r\n                                        <mat-card class=\"inputMatNew\">\r\n\r\n                                            <input matInput formControlName=\"middleName\" (keypress)=\"letterOnly($event)\"\r\n                                                class=\"alignment\" type=\"text\" name=\"middleName\" />\r\n\r\n                                        </mat-card>\r\n                                    </div>\r\n\r\n                                    <div class=\"flex-grow-1\">\r\n                                        <mat-hint>Last Name*</mat-hint>\r\n                                        <mat-card class=\"inputMatLastName\"\r\n                                            [ngClass]=\"{'errbd': !basicInfoForm.get('lastName').valid && basicInfoForm.get('lastName').touched}\">\r\n\r\n                                            <input matInput formControlName=\"lastName\" class=\"alignment\" type=\"text\"\r\n                                                name=\"lastName\" (keypress)=\"letterOnly($event)\"\r\n                                                value=\"updateUserInfo.lastName\" />\r\n\r\n                                        </mat-card>\r\n                                        <mat-error *ngIf=\" !basicInfoForm.get('lastName').valid && basicInfoForm.get('lastName').touched\">\r\n                                            Please Enter Last Name\r\n                                        </mat-error>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div class=\"form\">\r\n\r\n                                    <div class=\"flex-grow-1\">\r\n                                        <mat-hint>Date of Birth*</mat-hint>\r\n                                        <mat-card class=\"inputMatLastName\" style=\"height:48px;\"\r\n                                            [ngClass]=\"{'errbd': !basicInfoForm.get('dateOfBirth').valid && basicInfoForm.get('dateOfBirth').touched}\">\r\n                                            <input matInput formControlName=\"dateOfBirth\" id=\"dob\" class=\"alignment\"\r\n                                                name=\"dateOfBirth\" readonly [matDatepicker]=\"picker\" [max]=\"tomorrow\" [max]=\"maxDate\"\r\n                                                value=\"dateOfBirth\">\r\n                                            <div fxFlex=\"8%\" id=\"toggle\">\r\n                                                <mat-datepicker-toggle matSuffix [for]=\"picker\">\r\n                                                </mat-datepicker-toggle>\r\n\r\n                                                <mat-datepicker #picker>\r\n                                                </mat-datepicker>\r\n                                            </div>\r\n\r\n                                        </mat-card>\r\n\r\n                                        <mat-error *ngIf=\"\r\n                                    !basicInfoForm.get('dateOfBirth').valid &&\r\n                                    basicInfoForm.get('dateOfBirth').touched\r\n                                  \">\r\n                                            Please Select Date Of Birth\r\n                                        </mat-error>\r\n                                    </div>\r\n\r\n                                    <div class=\"flex-grow-1\">\r\n                                        <mat-hint>Marital Status*</mat-hint>\r\n                                        <mat-card class=\"inputMatcardMarritial\"\r\n                                            [ngClass]=\"{'errbd': !basicInfoForm.get('maritalStatus').valid && basicInfoForm.get('maritalStatus').touched}\">\r\n\r\n                                            <mat-select formControlName=\"maritalStatus\">\r\n                                                <mat-option value=\"\">Select</mat-option>\r\n                                                <mat-option *ngFor=\"let status of MarritialStatus\" [value]=\"status\">{{\r\n                                                    status }}\r\n                                                </mat-option>\r\n                                            </mat-select>\r\n\r\n                                        </mat-card>\r\n                                        <mat-error *ngIf=\"!basicInfoForm.get('maritalStatus').valid && basicInfoForm.get('maritalStatus').touched\">\r\n                                            Please Select Marital Status\r\n                                        </mat-error>\r\n                                    </div>\r\n\r\n                                    <div class=\"flex-grow-1\">\r\n                                        <mat-hint>Gender*</mat-hint>\r\n                                        <mat-card class=\"inputGender\"\r\n                                            [ngClass]=\"{'errbd': !basicInfoForm.get('gender').valid && basicInfoForm.get('gender').touched}\">\r\n\r\n                                            <mat-select formControlName=\"gender\"\r\n                                                (selectionChange)=\"onChangeGender($event)\">\r\n                                                <mat-option value=\"\">Select</mat-option>\r\n                                                <mat-option *ngFor=\"let gender of genders\" [value]=\"gender\">{{\r\n                                                    gender\r\n                                                    }}</mat-option>\r\n                                            </mat-select>\r\n\r\n                                        </mat-card>\r\n                                        <mat-error class=\"help-block\" *ngIf=\"\r\n                                !basicInfoForm.get('gender').valid &&\r\n                                basicInfoForm.get('gender').touched\r\n                              \">\r\n                                            Please Select Gender\r\n                                        </mat-error>\r\n                                        <mat-error *ngIf=\" !prefixFlag\">\r\n                                            &nbsp; Prefix and Gender does not match!\r\n                                        </mat-error>\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                                <div class=\"form\">\r\n\r\n                                    <div class=\"flex-grow-1\">\r\n                                        <mat-hint>Nationality*</mat-hint>\r\n                                        <mat-card class=\"inputGender\"\r\n                                            [ngClass]=\"{'errbd': !basicInfoForm.get('nationality').valid && basicInfoForm.get('nationality').touched}\">\r\n\r\n                                            <mat-select formControlName=\"nationality\">\r\n                                                <mat-option value=\"\">Select</mat-option>\r\n                                                <mat-option *ngFor=\"let nation of nationality\" [value]=\"nation\">{{\r\n                                                    nation }}</mat-option>\r\n                                            </mat-select>\r\n\r\n                                        </mat-card>\r\n                                        <mat-error *ngIf=\"\r\n                                !basicInfoForm.get('nationality').valid &&\r\n                                basicInfoForm.get('nationality').touched\r\n                              \">\r\n                                            Please Select Nationality\r\n                                        </mat-error>\r\n                                    </div>\r\n\r\n                                    <div class=\"flex-grow-1\">\r\n                                        <mat-hint>Primary Email*</mat-hint>\r\n                                        <mat-card class=\"inputMatcardMail\"\r\n                                            [ngClass]=\"{'errbd': !basicInfoForm.get('primaryEmailAdress').valid && basicInfoForm.get('primaryEmailAdress').touched}\">\r\n\r\n                                            <input matInput formControlName=\"primaryEmailAdress\" type=\"text\"\r\n                                                name=\"primaryEmailAdress\" />\r\n                                            <mat-hint class=\"verification\" (click)=\"getOtp(basicInfoForm.value)\"\r\n                                                *ngIf=\"basicInfoForm.get('primaryEmailAdress').valid\">\r\n                                                {{emailVerify}}</mat-hint>\r\n                                        </mat-card>\r\n                                        <mat-error\r\n                                            *ngIf=\"basicInfoForm.get('primaryEmailAdress').hasError('required') && basicInfoForm.get('primaryEmailAdress').touched\">\r\n                                            Please Enter Primary Email\r\n                                        </mat-error>\r\n                                        <mat-error\r\n                                            *ngIf=\"basicInfoForm.get('primaryEmailAdress').hasError('pattern')\">\r\n                                            Please Enter valid email address!\r\n                                        </mat-error>\r\n                                    </div>\r\n\r\n                                    <div class=\"flex-grow-1\">\r\n                                        <mat-hint>Mobile Number*</mat-hint>\r\n                                        <mat-card class=\"inputMatcard\"\r\n                                            [ngClass]=\"{'errbd': !basicInfoForm.get('phoneNumber').valid && basicInfoForm.get('phoneNumber').touched}\">\r\n                                            <input matInput name=\"phoneNumber\" maxLength=\"10\"\r\n                                                formControlName=\"phoneNumber\" required (keypress)=_keyPress($event) />\r\n                                            <mat-hint class=\"verification\"\r\n                                                (click)=\"getOtpMobile(basicInfoForm.value)\"\r\n                                                *ngIf=\"basicInfoForm.get('phoneNumber').valid\">{{verify}}\r\n                                            </mat-hint>\r\n                                        </mat-card>\r\n                                        <mat-error\r\n                                            *ngIf=\"basicInfoForm.get('phoneNumber').hasError('required') && basicInfoForm.get('phoneNumber').touched\">\r\n                                            Please Enter Mobile Number\r\n                                        </mat-error>\r\n                                        <mat-error *ngIf=\"basicInfoForm.get('phoneNumber').hasError('pattern')\">\r\n                                            Mobile number must be 10 digits.\r\n                                        </mat-error>\r\n                                        <mat-error\r\n                                                                        *ngIf=\"basicInfoForm.controls['phoneNumber'].value == '0000000000'\">\r\n                                                                        &nbsp; &nbsp; Please Enter Correct Mobile Number\r\n                                                                    </mat-error>\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n\r\n\r\n                         <div fxLayout=\"row\">\r\n                            <div fxFlex=\"100\">\r\n                                <div id=\"bill\">\r\n                                    <div class=\"billName\">\r\n                                        Is your Permanent Address same as Communication Address?\r\n                                    </div>\r\n\r\n                                    <mat-radio-group formControlName=\"isAddressSame\">\r\n                                        <mat-radio-button *ngFor=\"let option of array; let i = index\" class=\"ml-8\"\r\n                                            color=\"primary\" [checked]=\"option.checked\" [value]=\"option.name\" \r\n                                            (change)=\"onChange( basicInfoForm.controls.permanentAddress,$event)\">{{ option.name }}\r\n                                        </mat-radio-button>\r\n                                    </mat-radio-group>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                       <div fxLayoutGap=\"10px\" fxLayout=\"row wrap\" class=\"mt-32  communicationForm\">\r\n                            <div fxFlex class=\"addressGrid\" id=\"communicationBlockForm\">\r\n                                <div class=\"spanDiv\">\r\n                                    <span class=\"span\">Communication Address </span>\r\n                                    <mat-divider class=\"divider\"></mat-divider>\r\n                                </div>\r\n                                <div formGroupName=\"communicationAddress\">\r\n\r\n                                    <div fxLayout=\"row\" fxLayoutGap=\"10px\" fxLayoutAlign=\"space-between center\">\r\n                                        <div fxFlex=\"50%\">\r\n                                            <div class=\"pb-1\">\r\n                                                <mat-hint>Address Line 1*</mat-hint>\r\n                                                <mat-card class=\"address-card inputMatcard3\" [ngClass]=\"{'errbd': !basicInfoForm.get('communicationAddress.address1').valid && \r\n                                                basicInfoForm.get('communicationAddress.address1').touched}\">\r\n\r\n                                                    <input matInput formControlName=\"address1\" class=\"full-width\"\r\n                                                    (keypress)=\"keyPressAlphanumeric($event)\" maxlength=\"50\" name=\"address1\"/>\r\n                                                </mat-card>\r\n                                                <mat-error *ngIf=\"\r\n                                                !basicInfoForm.get('communicationAddress.address1').valid &&\r\n                                                basicInfoForm.get('communicationAddress.address1').touched\">\r\n                                                    Please Enter Address Line 1</mat-error>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div fxFlex=\"50%\">\r\n                                            <div class=\"pb-1\">\r\n                                                <mat-hint>Address Line 2*</mat-hint>\r\n                                                <mat-card class=\"address-card inputMatcard3\" [ngClass]=\"{'errbd': !basicInfoForm.get('communicationAddress.address2').valid && \r\n                                                basicInfoForm.get('communicationAddress.address2').touched}\">\r\n\r\n\r\n                                                    <input matInput formControlName=\"address2\" class=\"full-width\"\r\n                                                    (keypress)=\"keyPressAlphanumeric($event)\"   maxlength=\"50\" name=\"address2\"/>\r\n\r\n                                                </mat-card>\r\n                                                <mat-error *ngIf=\"\r\n                                  !basicInfoForm.get('communicationAddress.address2').valid &&\r\n                                  basicInfoForm.get('communicationAddress.address2').touched\r\n                                \">\r\n                                                    Please Enter Address Line 2</mat-error>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div fxLayout=\"row\" fxLayoutGap=\"10px\" fxLayoutAlign=\"space-between center\">\r\n                                        <div fxFlex=\"50%\">\r\n                                            <div class=\"pb-1\">\r\n                                                <mat-hint>Residence Type*</mat-hint>\r\n                                                <mat-card class=\"address-card inputMatcard3\" [ngClass]=\"{'errbd': !basicInfoForm.get('communicationAddress.residenceType').valid && \r\n                                                basicInfoForm.get('communicationAddress.residenceType').touched}\">\r\n\r\n                                                    <mat-select formControlName=\"residenceType\">\r\n                                                        <mat-option value=\"\">Select</mat-option>\r\n                                                        <mat-option *ngFor=\"let Resi of Residences\" [value]=\"Resi\">{{\r\n                                                            Resi }}</mat-option>\r\n                                                    </mat-select>\r\n                                                </mat-card>\r\n                                                <mat-error *ngIf=\"\r\n                                  !basicInfoForm.get('communicationAddress.residenceType').valid &&\r\n                                  basicInfoForm.get('communicationAddress.residenceType').touched\r\n                                \">\r\n                                                    Please Select Residence Type</mat-error>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div fxFlex=\"50%\">\r\n                                            <div class=\"pb-1\">\r\n                                                <mat-hint>Country*</mat-hint>\r\n                                                <mat-card class=\"address-card inputMatcard3\" [ngClass]=\"{'errbd': !basicInfoForm.get('communicationAddress.country').valid && \r\n                                                basicInfoForm.get('communicationAddress.country').touched}\">\r\n\r\n                                                    <mat-select formControlName=\"country\"\r\n                                                        (selectionChange)=\"getStateName($event.value)\"\r\n                                                        (selectionChange)=\"getCityName($event.value)\">\r\n                                                        <mat-option value=\"\">Select</mat-option>\r\n                                                        <mat-option *ngFor=\"let country of countrys\" [value]=\"country\">\r\n                                                            {{ country }}</mat-option>\r\n                                                    </mat-select>\r\n                                                </mat-card>\r\n                                                <mat-error *ngIf=\"\r\n                                        !basicInfoForm.get('communicationAddress.country').valid &&\r\n                                        basicInfoForm.get('communicationAddress.country').touched\r\n                                      \">\r\n                                                    Please Select Country</mat-error>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                    <div fxLayout=\"row\" fxLayoutGap=\"10px\" fxLayoutAlign=\"space-between center\">\r\n\r\n                                        <div fxFlex=\"50%\">\r\n                                            <div class=\"pb-1\">\r\n                                                <mat-hint>State*</mat-hint>\r\n                                                <mat-card class=\"address-card inputMatcard3\" [ngClass]=\"{'errbd': !basicInfoForm.get('communicationAddress.state').valid && \r\n                                                basicInfoForm.get('communicationAddress.state').touched}\">\r\n                                                    <mat-select name=\"state\" formControlName=\"state\"\r\n                                                        (selectionChange)=\"getCityName($event.value)\">\r\n                                                        <mat-option value=\"\">Select</mat-option>\r\n                                                        <mat-option *ngFor=\"let state of arrayState\" [value]=\"state\">\r\n                                                            {{state}}</mat-option>\r\n\r\n                                                    </mat-select>\r\n\r\n                                                </mat-card>\r\n                                                <mat-error *ngIf=\"\r\n                                        !basicInfoForm.get('communicationAddress.state').valid &&\r\n                                        basicInfoForm.get('communicationAddress.state').touched\">\r\n                                                    Please Select State</mat-error>\r\n                                            </div>\r\n                                        </div>\r\n\r\n\r\n                                        <div fxFlex=\"50%\">\r\n                                            <div class=\"pb-1\">\r\n                                                <mat-hint>City*</mat-hint>\r\n                                                <mat-card class=\"address-card inputMatcard3\" [ngClass]=\"{'errbd': !basicInfoForm.get('communicationAddress.city').valid && \r\n                                                basicInfoForm.get('communicationAddress.city').touched}\">\r\n                                                    <mat-select name=\"city\" formControlName=\"city\">\r\n                                                        <mat-option value=\"\">Select</mat-option>\r\n                                                        <mat-option *ngFor=\"let city of arrayCity\" [value]=\"city\">\r\n                                                            {{city}}</mat-option>\r\n\r\n                                                    </mat-select>\r\n\r\n                                                </mat-card>\r\n                                                <mat-error *ngIf=\"\r\n                                        !basicInfoForm.get('communicationAddress.city').valid &&\r\n                                        basicInfoForm.get('communicationAddress.city').touched\">\r\n                                                    Please Select City</mat-error>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div fxFlex=\"50%\">\r\n                                            <div class=\"pb-1\">\r\n                                                <mat-hint>Zip Code*</mat-hint>\r\n                                                <mat-card class=\"address-card inputMatcard3\" [ngClass]=\"{'errbd': !basicInfoForm.get('communicationAddress.zipCode').valid && \r\n                                                basicInfoForm.get('communicationAddress.zipCode').touched}\">\r\n\r\n                                                    <input matInput formControlName=\"zipCode\" onlyNumber type=\"text\"\r\n                                                        matInput minLength=\"5\" maxLength=\"10\"\r\n                                                        (keyup)=\"isAllSameDigit($event,0)\" name=\"zipCode\" />\r\n                                                </mat-card>\r\n                                                <mat-error *ngIf=\"\r\n                                          (!basicInfoForm.get('communicationAddress.zipCode').valid &&\r\n                                          basicInfoForm.get('communicationAddress.zipCode').touched ||\r\n                                          basicInfoForm.get('communicationAddress.zipCode').required && \r\n                                          basicInfoForm.get('permanentAddress.zipCode').minLength) \">\r\n                                                    Please enter vaild Zip Code!(5-10 digits)\r\n                                                </mat-error>\r\n                                                <h5 *ngIf=\"isAllSameDigitVal && 0==zipIndex\" style=\"color: #E74C3C;\">\r\n                                                    Please enter valid Zip Code!(5-10 digits)\r\n                                                </h5>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </div>\r\n                            <div fxFlex class=\"addressGrid\" *ngIf=\"sameAddress == 'No'\" id=\"communicationBlockForm\">\r\n                                <div class=\"spanDiv\">\r\n                                    <span class=\"span\"> Permanent Address</span>\r\n                                    <mat-divider class=\"divider\"></mat-divider>\r\n                                </div>\r\n                                <div formGroupName=\"permanentAddress\">\r\n\r\n                                    <div fxLayout=\"row\" fxLayoutGap=\"10px\" fxLayoutAlign=\"space-between center\">\r\n                                        <div fxFlex=\"50%\">\r\n                                            <div class=\"pb-1\">\r\n                                                <mat-hint>Address Line 1*</mat-hint>\r\n                                                <mat-card class=\"address-card inputMatcard3\" [ngClass]=\"{'errbd': !basicInfoForm.get('permanentAddress.address1').valid && \r\n                                                basicInfoForm.get('permanentAddress.address1').touched}\">\r\n\r\n\r\n                                                    <textarea matInput formControlName=\"address1\" class=\"full-width\"\r\n                                                        maxlength=\"50\" name=\"address1\"></textarea>\r\n\r\n                                                </mat-card>\r\n                                                <mat-error *ngIf=\"\r\n                                        !basicInfoForm.get('permanentAddress.address1').valid &&\r\n                                        basicInfoForm.get('permanentAddress.address1').touched\r\n                                      \">\r\n                                                    Please Enter Address Line 1</mat-error>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                      \r\n                                        <div fxFlex=\"50\">\r\n                                            <div class=\"pb-1\">\r\n                                                <mat-hint>Address Line 2*</mat-hint>\r\n                                                <mat-card class=\"address-card inputMatcard3\" [ngClass]=\"{'errbd': !basicInfoForm.get('permanentAddress.address2').valid && \r\n                                                basicInfoForm.get('permanentAddress.address2').touched}\">\r\n\r\n\r\n                                                    <textarea matInput formControlName=\"address2\" class=\"full-width\"\r\n                                                        maxlength=\"50\" name=\"address2\"></textarea>\r\n\r\n\r\n                                                </mat-card>\r\n                                                <mat-error *ngIf=\"\r\n                                        !basicInfoForm.get('permanentAddress.address2').valid &&\r\n                                        basicInfoForm.get('permanentAddress.address2').touched\r\n                                      \">\r\n                                                    Please Enter Address Line 2</mat-error>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                    <div fxLayout=\"row\" fxLayoutGap=\"10px\" fxLayoutAlign=\"space-between center\">\r\n                                        <div fxFlex=\"50%\">\r\n                                            <div class=\"pb-1\">\r\n                                                <mat-hint>Residence Type*</mat-hint>\r\n                                                <mat-card class=\"address-card inputMatcard3\" [ngClass]=\"{'errbd': !basicInfoForm.get('permanentAddress.residenceType').valid && \r\n                                                basicInfoForm.get('permanentAddress.residenceType').touched}\">\r\n\r\n                                                    <mat-select formControlName=\"residenceType\">\r\n                                                        <mat-option value=\"\">Select</mat-option>\r\n                                                        <mat-option *ngFor=\"let Resi of Residences\" [value]=\"Resi\">{{\r\n                                                            Resi }}</mat-option>\r\n                                                    </mat-select>\r\n                                                </mat-card>\r\n                                                <mat-error *ngIf=\"\r\n                                          !basicInfoForm.get('permanentAddress.residenceType').valid &&\r\n                                          basicInfoForm.get('permanentAddress.residenceType').touched\r\n                                        \">\r\n                                                    Please Select Residence Type</mat-error>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div fxFlex=\"50%\">\r\n                                            <div class=\"pb-1\">\r\n                                                <mat-hint>Country*</mat-hint>\r\n                                                <mat-card class=\"address-card inputMatcard3\" [ngClass]=\"{'errbd': !basicInfoForm.get('permanentAddress.country').valid && \r\n                                                basicInfoForm.get('permanentAddress.country').touched}\">\r\n\r\n                                                    <mat-select formControlName=\"country\"\r\n                                                        (selectionChange)=\"getPerStateName($event.value)\">\r\n                                                        <mat-option value=\"\">Select</mat-option>\r\n                                                        <mat-option *ngFor=\"let country of countrys\" [value]=\"country\">\r\n                                                            {{ country }}</mat-option>\r\n                                                    </mat-select>\r\n                                                </mat-card>\r\n                                                <mat-error *ngIf=\"\r\n                                          !basicInfoForm.get('permanentAddress.country').valid &&\r\n                                          basicInfoForm.get('permanentAddress.country').touched\r\n                                        \">\r\n                                                    Please Select Country</mat-error>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                    <div fxLayout=\"row\" fxLayoutGap=\"10px\" fxLayoutAlign=\"space-between center\">\r\n\r\n                                        <div fxFlex=\"50%\">\r\n                                            <div class=\"pb-1\">\r\n                                                <mat-hint>State*</mat-hint>\r\n                                                <mat-card class=\"address-card inputMatcard3\" [ngClass]=\"{'errbd': !basicInfoForm.get('permanentAddress.state').valid && \r\n                                                basicInfoForm.get('permanentAddress.state').touched}\">\r\n                                                    <mat-select name=\"state\" formControlName=\"state\"\r\n                                                        (selectionChange)=\"getPerCityName($event.value)\">\r\n                                                        <mat-option value=\"\">Select</mat-option>\r\n                                                        <mat-option *ngFor=\"let state of arrayState1\" [value]=\"state\">\r\n                                                            {{state}}</mat-option>\r\n\r\n                                                    </mat-select>\r\n\r\n                                                </mat-card>\r\n                                                <mat-error *ngIf=\"\r\n                                          !basicInfoForm.get('permanentAddress.state').valid &&\r\n                                          basicInfoForm.get('permanentAddress.state').touched\">\r\n                                                    Please Select State</mat-error>\r\n                                            </div>\r\n                                        </div>\r\n\r\n\r\n                                        <div fxFlex=\"50%\">\r\n                                            <div class=\"pb-1\">\r\n                                                <mat-hint>City*</mat-hint>\r\n                                                <mat-card class=\"address-card inputMatcard3\" [ngClass]=\"{'errbd': !basicInfoForm.get('permanentAddress.city').valid && \r\n                                                basicInfoForm.get('permanentAddress.city').touched}\">\r\n                                                    <mat-select name=\"city\" formControlName=\"city\">\r\n                                                        <mat-option value=\"\">Select</mat-option>\r\n                                                        <mat-option *ngFor=\"let city of arrayCity1\" [value]=\"city\">\r\n                                                            {{city}}</mat-option>\r\n\r\n                                                    </mat-select>\r\n\r\n                                                </mat-card>\r\n                                                <mat-error *ngIf=\"\r\n                                          !basicInfoForm.get('permanentAddress.city').valid &&\r\n                                          basicInfoForm.get('permanentAddress.city').touched\">\r\n                                                    Please Select City</mat-error>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div fxFlex=\"50%\">\r\n                                            <div class=\"pb-1\">\r\n                                                <mat-hint>Zip Code*</mat-hint>\r\n                                                <mat-card class=\"address-card inputMatcard3\" [ngClass]=\"{'errbd': !basicInfoForm.get('permanentAddress.zipCode').valid && \r\n                                                basicInfoForm.get('permanentAddress.zipCode').touched}\">\r\n\r\n                                                    <input matInput formControlName=\"zipCode\" onlyNumber type=\"text\"\r\n                                                        matInput minLength=\"5\" maxLength=\"10\" name=\"zipCode\"\r\n                                                        (keyup)=\"isAllSameDigit($event,1)\" />\r\n                                                </mat-card>\r\n\r\n                                                <mat-error *ngIf=\"\r\n                                          !basicInfoForm.get('permanentAddress.zipCode').valid &&\r\n                                          basicInfoForm.get('permanentAddress.zipCode').touched  ||\r\n                                          basicInfoForm.get('permanentAddress.zipCode').required && \r\n                                          basicInfoForm.get('permanentAddress.zipCode').minLength \">\r\n                                                    Please enter vaild Zip Code!(5-10 digits)\r\n                                                </mat-error>\r\n\r\n                                                <h5 *ngIf=\"isAllSameDigitVal && 1==zipIndex\" style=\"color: #E74C3C;\">\r\n                                                    Please enter valid Zip Code!(5-10 digits)\r\n                                                </h5>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </form>\r\n                </mat-card>\r\n              </div>  \r\n\r\n\r\n                \r\n                <div class=\"button\">\r\n                    <span class=\"Back1\" (click)=\"backToKyc()\" >Back</span>\r\n                    <!-- <p> {{disableNext}} </p> -->\r\n                    <button mat-stroked-button [ngClass]=\"{'Next12':basicInfoForm.invalid, \r\n                    'Next':!basicInfoForm.invalid}\" \r\n                    class=\"Next\" [disabled]=\"basicInfoForm.invalid\" (click)=\"onClickNext(tabgroup.selectedIndex)\"><span style=\"color: white\">Next</span></button>\r\n                </div>\r\n            </mat-tab>\r\n\r\n\r\n            <mat-tab label=\"Schedule Appointment\" [disabled]='!tab2'>\r\n                <mat-card class=\"matCard\" style=\" margin-right: 55px;\r\n                margin-left: 27px;\">\r\n                    <h3 class=\"basicInformation\">Schedule Appointment</h3>\r\n                    <hr class=\"line\">\r\n                    <br>\r\n                    <div fxLayout=\"column wrap\">\r\n                        <div fxFlex=\"100\">\r\n                            <div fxFlex=\"35\">\r\n                                <span class=\"textFont\">Select Date</span>\r\n                                <br>\r\n                                <mat-card class=\"demo-inline-calendar-card\">\r\n                                    <mat-calendar [selected]=\"selectedDate\" \r\n                                    [dateClass]=\"dateClass\"  (selectedChange)=\"onSelect($event)\"\r\n                                        [maxDate]=\"maxDate\" [minDate]=\"minDate\"></mat-calendar>\r\n                                </mat-card>\r\n                            </div>\r\n\r\n                            <div fxFlex=\"60\">\r\n                                <span class=\"textFont\">Select Time</span>\r\n                                <p class=\"paraFont\">Pick the date and then choose the available time slots.</p>\r\n                                <mat-spinner class=\"spinner\" [diameter]=\"80\" *ngIf=\"showSpinn\"></mat-spinner>\r\n                                <div fxLayout=\"row wrap\" *ngIf=\"kycTimeOption\">\r\n                                    <div fxFlex=\"100\">\r\n                                        <div *ngFor=\"let time of TimeSolts; let i = index\" class=\"timeboxes\">\r\n                                            <mat-card (click)=\"onSelectTime1(time.time,i,$event)\" [name]=time [ngClass]=\"{'bookedSlot': time.booked, 'availableSlot' : time.available,\r\n                                                   'selectedClass': dateCollection.indexOf(time.time)!=-1}\"><span\r\n                                                    fxLayoutAlign=\"center stretch\"\r\n                                                    class=\"matContent\">{{format24HrsTo12Hrs(time.time)}}</span>\r\n                                            </mat-card>\r\n                                           \r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                </mat-card>\r\n            \r\n                <div class=\"button\">\r\n                    <span class=\"back\" (click)=\"previousStep(tabgroup.selectedIndex)\">Back</span>\r\n                    <!-- <p> {{disableNext}} </p> -->\r\n                    <button mat-stroked-button [ngClass]=\"{'finish':!showNext, \r\n                    'finish1':showNext}\" \r\n                    id=\"n\" [disabled]=\"!showNext\"\r\n                    (click)=\"onNextOfSheduleAppointment()\"><span style=\"color: white\">Finish</span></button>\r\n                </div>\r\n            </mat-tab>\r\n        </mat-tab-group>\r\n    </div>\r\n</div>","import { CommonModule } from \"@angular/common\";\r\nimport { NgModule } from \"@angular/core\";\r\nimport { FlexLayoutModule } from \"@angular/flex-layout\";\r\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\r\nimport { MatButtonModule } from \"@angular/material/button\";\r\nimport { MatCardModule } from \"@angular/material/card\";\r\nimport { MatCheckboxModule } from \"@angular/material/checkbox\";\r\nimport { MatChipsModule } from \"@angular/material/chips\";\r\nimport { MatNativeDateModule } from \"@angular/material/core\";\r\nimport { MatDatepickerModule } from \"@angular/material/datepicker\";\r\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\r\nimport { MatGridListModule } from \"@angular/material/grid-list\";\r\nimport { MatIconModule } from \"@angular/material/icon\";\r\nimport { MatInputModule } from \"@angular/material/input\";\r\nimport { MatListModule } from \"@angular/material/list\";\r\nimport { MatMenuModule } from \"@angular/material/menu\";\r\nimport { MatProgressBarModule } from \"@angular/material/progress-bar\";\r\nimport { MatRadioModule } from \"@angular/material/radio\";\r\nimport { MatSelectModule } from \"@angular/material/select\";\r\nimport { MatSlideToggleModule } from \"@angular/material/slide-toggle\";\r\nimport { MatSliderModule } from \"@angular/material/slider\";\r\nimport { MatTabsModule } from \"@angular/material/tabs\";\r\nimport { MatToolbarModule } from \"@angular/material/toolbar\";\r\nimport { RouterModule } from \"@angular/router\";\r\nimport { ChartModule } from \"angular-highcharts\";\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\n\r\nimport { PerfectScrollbarModule } from \"ngx-perfect-scrollbar\";\r\nimport { ScheduleAppointmentComponent } from \"./schedule-appointment/schedule-appointment.component\";\r\nimport { VideoRoutes } from \"./video-verification.routing\";\r\nimport { VideoVerificationComponent } from \"./video-verification.component\";\r\nimport { VideoDirective } from './video.directive';\r\nimport { AppointmentComponent } from './appointment/appointment.component';\r\nimport { CalljoinComponent } from './calljoin/calljoin.component';\r\nimport { MatProgressSpinnerModule } from \"@angular/material/progress-spinner\";\r\nimport { OnlyNumberDirective } from './only-number.directive';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        FormsModule,\r\n        FlexLayoutModule,\r\n        PerfectScrollbarModule,\r\n        MatAutocompleteModule,\r\n        ReactiveFormsModule,\r\n        MatListModule,\r\n        MatIconModule,\r\n        MatButtonModule,\r\n        MatCardModule,\r\n        MatMenuModule,\r\n        MatSliderModule,\r\n        MatProgressSpinnerModule,\r\n        MatSelectModule,\r\n        MatSlideToggleModule,\r\n        MatGridListModule,\r\n        MatDatepickerModule,\r\n        MatChipsModule,\r\n        MatCheckboxModule,\r\n        MatRadioModule,\r\n        MatTabsModule,\r\n        MatToolbarModule,\r\n        MatInputModule,\r\n        MatProgressBarModule,\r\n        FlexLayoutModule,\r\n        \r\n        ChartModule,\r\n        \r\n        MatSelectModule,\r\n        MatFormFieldModule,\r\n        MatInputModule,\r\n        MatNativeDateModule,\r\n        RouterModule.forChild(VideoRoutes)\r\n    ],\r\n    declarations: [\r\n        ScheduleAppointmentComponent,\r\n        VideoVerificationComponent,\r\n        VideoDirective,\r\n        AppointmentComponent,\r\n        CalljoinComponent,\r\n        OnlyNumberDirective,\r\n    \r\n    ],\r\n    entryComponents: []\r\n})\r\nexport class VideoVerificationModule { }","import { Directive, ElementRef, forwardRef, HostListener, Renderer2, StaticProvider } from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\n\r\nexport const CUSTOM_INPUT_DATE_PICKER_CONTROL_VALUE_ACCESSOR: StaticProvider = {\r\n    provide: NG_VALUE_ACCESSOR,\r\n    useExisting: forwardRef(() => OnlyNumberDirective),\r\n    multi: true\r\n};\r\n\r\n@Directive({\r\n    selector: '[onlyNumber]',\r\n    providers: [CUSTOM_INPUT_DATE_PICKER_CONTROL_VALUE_ACCESSOR]\r\n})\r\nexport class OnlyNumberDirective implements ControlValueAccessor {\r\n    private onChange: (val: string) => void;\r\n    private onTouched: () => void;\r\n    private value: string;\r\n\r\n    constructor(\r\n        private elementRef: ElementRef,\r\n        private renderer: Renderer2\r\n    ) {\r\n    }\r\n\r\n    @HostListener('input', ['$event.target.value'])\r\n    onInputChange(value: string) {\r\n        const filteredValue: string = filterValue(value);\r\n        this.updateTextInput(filteredValue, this.value !== filteredValue);\r\n    }\r\n\r\n    @HostListener('blur')\r\n    onBlur() {\r\n        this.onTouched();\r\n    }\r\n\r\n    private updateTextInput(value: string, propagateChange: boolean) {\r\n        this.renderer.setProperty(this.elementRef.nativeElement, 'value', value);\r\n        if (propagateChange) {\r\n            this.onChange(value);\r\n        }\r\n        this.value = value;\r\n    }\r\n\r\n    // ControlValueAccessor Interface\r\n    registerOnChange(fn: any): void {\r\n        this.onChange = fn;\r\n    }\r\n\r\n    registerOnTouched(fn: any): void {\r\n        this.onTouched = fn;\r\n    }\r\n\r\n    setDisabledState(isDisabled: boolean): void {\r\n        this.renderer.setProperty(this.elementRef.nativeElement, 'disabled', isDisabled);\r\n    }\r\n\r\n    writeValue(value: any): void {\r\n        value = value ? String(value) : '';\r\n        this.updateTextInput(value, false);\r\n    }\r\n}\r\n\r\nfunction filterValue(value): string {\r\n    return value.replace(/[^0-9]*/g, '');\r\n}\r\n","import { Directive, Renderer2, HostListener, OnInit, ElementRef, HostBinding } from '@angular/core';\r\nimport { ClickType } from '@swimlane/ngx-datatable';\r\nimport { Input } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[appVideo]'\r\n})\r\nexport class VideoDirective implements OnInit{\r\n  @Input() name: string;\r\n  constructor(private render:Renderer2,private el:ElementRef) { }\r\n \r\n  @HostBinding('style.backgroundColor') backgroundColor:string=\"transparent\";\r\n  @HostBinding('style.color') clr:string=\"white\";\r\n  ngOnInit()\r\n  {\r\n    console.log(this.name);\r\n  }\r\n  @HostListener('click') ClickType()\r\n    {\r\n      console.log(\"clcick\");\r\n        this.backgroundColor=\"#FE6700\";\r\n        this.clr=\"white\";\r\n    }\r\n    \r\n   \r\n\r\n}\r\n","import { Component, OnInit, OnDestroy, ChangeDetectionStrategy, DoCheck, ElementRef } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\r\nimport { MatTabChangeEvent } from '@angular/material/tabs';\r\nimport { Router } from '@angular/router';\r\nimport {ThemePalette} from '@angular/material/core';\r\nimport { EventSettingsModel } from '@syncfusion/ej2-schedule';\r\nimport { Subject, Subscription } from 'rxjs';\r\nimport {\r\n \r\n  ChangeDetectorRef,\r\n \r\n  Inject,\r\n \r\n} from '@angular/core';\r\nimport {MatCalendar} from '@angular/material/datepicker';\r\nimport {DateAdapter, MAT_DATE_FORMATS, MatDateFormats} from '@angular/material/core';\r\n\r\nimport {takeUntil} from 'rxjs/operators';\r\nimport { AppointmentComponent } from '../appointment/appointment.component';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-schedule-appointment',\r\n  templateUrl: './schedule-appointment.component.html',\r\n  styleUrls: ['./schedule-appointment.component.scss'],\r\n \r\n})\r\nexport class ScheduleAppointmentComponent implements OnInit,DoCheck{\r\n  dateCollection= [];\r\n  toggle = true;\r\n  status = 'Enable'; \r\n  \r\n  showNext: boolean=false;\r\n  count=0;\r\n  dataFromBasicInfo: any;\r\n  kycRef: string;\r\n\r\n  constructor(private router:Router,  public api: ApiService,\r\n    private cdr:ChangeDetectorRef,private dialog:MatDialog,private el:ElementRef){}\r\n     \r\n  selectTime1=['10:00 am','10:30 am','11:00 am'];\r\n  selectTime2=['11:30 am','12:00 pm','12:30 pm'];\r\n  selectTime3=['01:00 pm','01:30 pm','02:00 pm'];\r\n  selectTime4=['02:30 pm','03:00 pm','03:30 pm'];\r\n  selectTime5=['04:00 pm','04:30 pm','05:00 pm'];\r\n  completeTimeSolte=['10:00 am','10:30 am','11:00 am','11:30 am','12:00 pm','12:30 pm',\r\n  '01:00 pm','01:30 pm','02:00 pm','02:30 pm','03:00 pm','03:30 pm','04:00 pm','04:30 pm','05:00 pm']\r\n  selectedDate: any;\r\n  subscription: Subscription;\r\n \r\n\r\n  ngOnInit() {\r\n    date: new FormControl({value: null, disabled: true}) \r\n\r\n    this.api.getKycRef().subscribe(resp => {\r\n      this.assignKyc(resp.kycReference);\r\n      console.log(resp.kycReference)\r\n    })\r\n    // this.subscription = this.videoService.getUserDetailsOfVideo().subscribe(message => {\r\n    //   console.log(\"video msg\",message);\r\n\r\n\r\n      \r\n    //   this.dataFromBasicInfo=Object.assign(message);\r\n    //   console.log(\"this info\",this.dataFromBasicInfo);\r\n    //  console.log(\"firstName\", this.dataFromBasicInfo.text.firstName);\r\n    //   this.cdr.markForCheck();\r\n      \r\n    //   // if (message) {\r\n    //   //   this.messages.push(message);\r\n    //   // } else {\r\n    //   //   // clear messages when empty message received\r\n    //   //   this.messages = [];\r\n    //   // }\r\n    // });\r\n    console.log(this.el);\r\n  }\r\n  \r\n  assignKyc(kycReference) {\r\n    this.kycRef = kycReference;\r\n  }\r\n  \r\n  onSelectTime1(time,i,event)\r\n  {\r\n  \r\n    console.log(time,i,event);\r\n    // this.IcustCutomerVideoVerification.scheduledTime=time;\r\n   \r\n    this.dateCollection.push(time);\r\n    console.log(this.dateCollection);\r\n    this.showNext=true;\r\n    \r\n    this.count++;\r\n    // if(this.count>1)\r\n    // {\r\n      \r\n    //   console.log(\"inside if\",this.count);\r\n      // document.getElementById('example').style.backgroundColor=\"white\";\r\n\r\n    // }\r\n   \r\n  }\r\n  \r\n \r\n  onNextOfSheduleAppointment() {\r\n   \r\n    console.log(this.dataFromBasicInfo);\r\n      \r\n    \r\n  \r\n   this.cdr.markForCheck();\r\n    // this.videoService.saveCustBasicInfoData(this.IcustCutomerVideoVerification).subscribe(data=>\r\n    //   {\r\n    //     console.log(data);\r\n    //   })\r\n   document.getElementById('n').style.backgroundColor='rgb(66,106,245)';\r\n    const dialogRef = this.dialog.open(AppointmentComponent, {\r\n      // width: '250px',\r\n      // data: {time:this.dateCollection}\r\n      data: {time: this.dateCollection, date: this.selectedDate, kycRef: this.kycRef},\r\n      \r\n      \r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      console.log('The dialog was closed');\r\n      // this.animal = result;\r\n    });\r\n    // this.IcustCutomerVideoVerification.firstName=this.dataFromBasicInfo.text.firstName;\r\n    // this.IcustCutomerVideoVerification.lastName=this.dataFromBasicInfo.text.elastName;\r\n    // this.IcustCutomerVideoVerification.prefix=this.dataFromBasicInfo.text.prefix;\r\n    // this.IcustCutomerVideoVerification.primaryEmail=this.dataFromBasicInfo.text.primaryEmail;\r\n    // this.IcustCutomerVideoVerification.phoneNo=this.dataFromBasicInfo.text.phoneNo;\r\n  \r\n  }\r\n  onChangeTab(event: MatTabChangeEvent) {\r\n    const tab = event.tab.textLabel;\r\n    console.log(tab);\r\n    if(tab===\"Schedule Appointment\")\r\n    {\r\n      this.router.navigateByUrl('/video/schedule-appointment');\r\n    }\r\n    if(tab===\"Basic Information\") {\r\n      this.router.navigateByUrl('/video/verification');\r\n    }\r\n  }\r\n  onSelect(event){\r\n    console.log(event);\r\n    this.selectedDate= event._d;\r\n    console.log(this.selectedDate);\r\n    // this.IcustCutomerVideoVerification.scheduledDate=this.selectedDate;\r\n   \r\n  }\r\n  ngDoCheck()\r\n  {\r\n    // this.completeTimeSolte.forEach(data=>\r\n    //   {\r\n    //     console.log(data);\r\n    //     this.dateCollection.includes(data)\r\n    //   })\r\n\r\n  }\r\n \r\n\r\n\r\n}\r\n","<div class=\"head\">\r\n    <h3 class=\"main-head\">KYC Screening | Video Verification</h3>\r\n    <div class=\"basic-container\">\r\n        <mat-tab-group mat-align-tabs=\"start\" [selectedIndex]=\"1\" (selectedTabChange)=\"onChangeTab($event)\">\r\n            <mat-tab label=\"Basic Information\"></mat-tab>\r\n            <mat-tab label=\"Schedule Appointment\"></mat-tab>\r\n        </mat-tab-group>\r\n    </div>\r\n</div>\r\n<mat-card class=\"matCard\" >\r\n        <h3 class=\"basicInformation\">Basic Information</h3>\r\n        <hr class=\"line\">\r\n        <br>\r\n    <div fxLayout=\"column wrap\">\r\n        <div fxFlex=\"100\">\r\n            <div fxFlex=\"40\">\r\n                <span>Select Date</span>\r\n                <mat-card class=\"demo-inline-calendar-card\">\r\n                        <mat-calendar\r\n                        [selected]=\"selectedDate\"\r\n                        (selectedChange)=\"onSelect($event)\"></mat-calendar>\r\n                    </mat-card>\r\n            </div>\r\n\r\n            <div fxFlex=\"60\" #btn>\r\n                <span>Select Time</span>\r\n                <div>\r\n                       \r\n                        <div fxLayout=\"row wrap\">\r\n                            <div fxFlex=\"100\">\r\n                                <div fxFlex=\"30\" *ngFor=\"let time of selectTime1\">\r\n    \r\n                                  <mat-card appVideo (click)=\"onSelectTime1(time,i)\"\r\n                                  id=\"example\"  [name]=time>\r\n                                  <span fxLayoutAlign=\"center stretch\"\r\n                                            class=\"matContent\">{{time}}</span></mat-card> \r\n                                          \r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div fxLayout=\"row wrap\">\r\n                                <div fxFlex=\"100\">\r\n                                    <div fxFlex=\"30\" *ngFor=\"let time2 of selectTime2;let i=index\">\r\n        \r\n                                        <mat-card appVideo (click)=\"onSelectTime1(time2,i,$event)\" \r\n                                        id=\"example\"  ><span fxLayoutAlign=\"center stretch\"\r\n                                                class=\"matContent\" >{{time2}}</span></mat-card>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div fxLayout=\"row wrap\">\r\n                                    <div fxFlex=\"100\">\r\n                                        <div fxFlex=\"30\" *ngFor=\"let time3 of selectTime3;let i=index\">\r\n            \r\n                                            <mat-card appVideo (click)=\"onSelectTime1(time3,i,$event)\"  \r\n                                            id=\"example\"   ><span fxLayoutAlign=\"center stretch\"\r\n                                                    class=\"matContent\" >{{time3}}</span></mat-card>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div fxLayout=\"row wrap\">\r\n                                        <div fxFlex=\"100\">\r\n                                            <div fxFlex=\"30\" *ngFor=\"let time4 of selectTime4;let i=index\">\r\n                \r\n                                                <mat-card appVideo (click)=\"onSelectTime1(time4,i,$event)\" \r\n                                                id=\"example\" ><span fxLayoutAlign=\"center stretch\"\r\n                                                        class=\"matContent\" >{{time4}}</span></mat-card>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div fxLayout=\"row wrap\">\r\n                                            <div fxFlex=\"100\">\r\n                                                <div fxFlex=\"30\" *ngFor=\"let time5 of selectTime5;let i=index\">\r\n                    \r\n                                                    <mat-card appVideo (click)=\"onSelectTime1(time5,i,$event)\" \r\n                                                    id=\"example\"  ><span fxLayoutAlign=\"center stretch\"\r\n                                                            class=\"matContent\" >{{time5}}</span></mat-card>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                    </div> \r\n           \r\n           \r\n         \r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n</mat-card>\r\n<div class=\"button1\">\r\n    <button mat-button class=\"Back\">Back</button>\r\n    <button mat-stroked-button class=\"Next\" id=\"n\" (click)=\"onNextOfSheduleAppointment()\">Next</button>\r\n    <!-- [disabled]=\"!showNext\"  -->\r\n</div>\r\n\r\n\r\n","import { Routes } from \"@angular/router\";\r\nimport { ScheduleAppointmentComponent } from \"./schedule-appointment/schedule-appointment.component\";\r\nimport { VideoVerificationComponent } from \"./video-verification.component\";\r\nimport { CalljoinComponent } from \"./calljoin/calljoin.component\";\r\n\r\nexport const VideoRoutes: Routes = [\r\n    {\r\n        path: 'verification',\r\n        component: VideoVerificationComponent,//video-verification/verification-->to navigatte\r\n       \r\n       \r\n    },\r\n    {\r\n        path:'schedule-appointment',\r\n        component:ScheduleAppointmentComponent\r\n    },\r\n    {\r\n        path:'calljoin',\r\n        component:CalljoinComponent\r\n    }\r\n];"]}