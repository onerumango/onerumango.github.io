{"version":3,"sources":["webpack:///src/app/views/tasks/loan-account-approver/loan-guarantor-details-update/loan-guarantor-details-update.component.html","webpack:///src/app/views/tasks/loan-account-approver/loan-guarantor-details-update/loan-guarantor-details-update.component.ts","webpack:///src/app/views/tasks/avatar/avatar.component.ts","webpack:///src/app/views/tasks/avatar/avatar.component.html","webpack:///src/app/views/tasks/corporate-approver/update-director-details/update-director-details.component.ts","webpack:///src/app/views/tasks/corporate-approver/update-director-details/update-director-details.component.html","webpack:///src/app/views/tasks/loan-account-approver/loan-account-details-edit/loan-account-details-edit.component.html","webpack:///src/app/views/tasks/loan-account-approver/loan-account-details-edit/loan-account-details-edit.component.ts","webpack:///src/app/views/tasks/approver/customer-info-update/customer-info-update.component.ts","webpack:///src/app/views/tasks/approver/customer-info-update/customer-info-update.component.html","webpack:///src/app/views/tasks/approver/approval-details-update/approval-details-update.component.ts","webpack:///src/app/views/tasks/approver/approval-details-update/approval-details-update.component.html","webpack:///src/app/views/tasks/card-account-approver/card-approval-details-update/card-approval-details-update.component.ts","webpack:///src/app/views/tasks/card-account-approver/card-approval-details-update/card-approval-details-update.component.html","webpack:///src/app/views/tasks/kyc-task-summary/kyc-task-summary.component.ts","webpack:///src/app/views/tasks/kyc-task-summary/kyc-task-summary.component.html","webpack:///src/app/views/tasks/corporate-approver/update-corporate-identity/update-corporate-identity.component.ts","webpack:///src/app/views/tasks/corporate-approver/update-corporate-identity/update-corporate-identity.component.html","webpack:///src/app/views/tasks/approver/interest-details-update/interest-details-update.component.ts","webpack:///src/app/views/tasks/approver/interest-details-update/interest-details-update.component.html","webpack:///src/app/views/tasks/cust-on-boarding-task-summary/cust-on-boarding-task-summary.component.html","webpack:///src/app/views/tasks/cust-on-boarding-task-summary/cust-on-boarding-task-summary.component.ts","webpack:///src/app/views/tasks/approver/charge-details-update/charge-details-update.component.ts","webpack:///src/app/views/tasks/approver/charge-details-update/charge-details-update.component.html","webpack:///src/app/views/tasks/approver/financial-details-update/financial-details-update.component.ts","webpack:///src/app/views/tasks/approver/financial-details-update/financial-details-update.component.html","webpack:///src/app/views/tasks/corporate-approver/update-corporate-basic-info/update-corporate-basic-info.component.ts","webpack:///src/app/views/tasks/corporate-approver/update-corporate-basic-info/update-corporate-basic-info.component.html","webpack:///src/app/shared/pipes/custom-task-summary-sorting.pipe.ts","webpack:///src/app/views/tasks/cust-on-boarding-approver/update-proof-of-identity/update-proof-of-identity.component.ts","webpack:///src/app/views/tasks/cust-on-boarding-approver/update-proof-of-identity/update-proof-of-identity.component.html","webpack:///src/app/views/tasks/card-account-approver/card-financial-details-update/card-financial-details-update.component.ts","webpack:///src/app/views/tasks/card-account-approver/card-financial-details-update/card-financial-details-update.component.html","webpack:///src/app/views/tasks/cust-on-boarding-approver/update-primary-info/update-primary-info.component.ts","webpack:///src/app/views/tasks/cust-on-boarding-approver/update-primary-info/update-primary-info.component.html","webpack:///src/app/views/tasks/card-account-approver/card-charge-details-update/card-charge-details-update.component.ts","webpack:///src/app/views/tasks/card-account-approver/card-charge-details-update/card-charge-details-update.component.html","webpack:///src/app/views/tasks/cust-on-boarding-approver/update-contact-info/update-contact-info.component.ts","webpack:///src/app/views/tasks/cust-on-boarding-approver/update-contact-info/update-contact-info.component.html","webpack:///src/app/views/tasks/loan-account-approver/loan-account-details-update/loan-account-details-update.component.html","webpack:///src/app/views/tasks/loan-account-approver/loan-account-details-update/loan-account-details-update.component.ts","webpack:///src/app/views/tasks/card-account-approver/card-credit-score-update/card-credit-score-update.component.ts","webpack:///src/app/views/tasks/card-account-approver/card-credit-score-update/card-credit-score-update.component.html","webpack:///src/app/views/tasks/corporate-approver/update-corporate-contact-info/update-corporate-contact-info.component.ts","webpack:///src/app/views/tasks/corporate-approver/update-corporate-contact-info/update-corporate-contact-info.component.html","webpack:///src/app/views/tasks/loan-account-approver/loan-offer-issue-details-update/loan-offer-issue-details-update.component.ts","webpack:///src/app/views/tasks/loan-account-approver/loan-offer-issue-details-update/loan-offer-issue-details-update.component.html","webpack:///src/app/views/tasks/card-account-approver/card-preference-details-update/card-preference-details-update.component.ts","webpack:///src/app/views/tasks/card-account-approver/card-preference-details-update/card-preference-details-update.component.html","webpack:///src/app/views/tasks/card-account-approver/card-assessment-report-update/card-assessment-report-update.component.ts","webpack:///src/app/views/tasks/card-account-approver/card-assessment-report-update/card-assessment-report-update.component.html","webpack:///src/app/views/tasks/loan-account-approver/loan-approval-details-update/loan-approval-details-update.component.html","webpack:///src/app/views/tasks/loan-account-approver/loan-approval-details-update/loan-approval-details-update.component.ts","webpack:///src/app/views/tasks/approver/qualitative-details-update/qualitative-details-update.component.ts","webpack:///src/app/views/tasks/approver/qualitative-details-update/qualitative-details-update.component.html","webpack:///src/app/views/tasks/loan-account-approver/loan-collateral-details-update/loan-collateral-details-update.component.html","webpack:///src/app/views/tasks/loan-account-approver/loan-collateral-details-update/loan-collateral-details-update.component.ts","webpack:///src/app/views/tasks/card-account-approver/card-initiation-details-update/card-initiation-details-update.component.ts","webpack:///src/app/views/tasks/card-account-approver/card-initiation-details-update/card-initiation-details-update.component.html","webpack:///src/app/views/tasks/loan-account-approver/loan-disbursement-details-update/loan-disbursement-details-update.component.ts","webpack:///src/app/views/tasks/loan-account-approver/loan-disbursement-details-update/loan-disbursement-details-update.component.html","webpack:///src/app/views/tasks/corporate-approver/update-corporate-addititonal-info/update-corporate-addititonal-info.component.ts","webpack:///src/app/views/tasks/corporate-approver/update-corporate-addititonal-info/update-corporate-addititonal-info.component.html","webpack:///src/app/views/tasks/tasks.module.ts","webpack:///src/app/views/tasks/loan-account-approver/loan-account-approver.component.ts","webpack:///src/app/views/tasks/loan-account-approver/loan-account-approver.component.html","webpack:///src/app/views/tasks/approver/unsecured-overdraft-details-update/unsecured-overdraft-details-update.component.ts","webpack:///src/app/views/tasks/approver/unsecured-overdraft-details-update/unsecured-overdraft-details-update.component.html","webpack:///src/app/views/tasks/card-account-approver/card-interest-details-update/card-interest-details-update.component.ts","webpack:///src/app/views/tasks/card-account-approver/card-interest-details-update/card-interest-details-update.component.html","webpack:///src/app/views/tasks/loan-account-approver/loan-mandate-details-update/loan-mandate-details-update.component.html","webpack:///src/app/views/tasks/loan-account-approver/loan-mandate-details-update/loan-mandate-details-update.component.ts","webpack:///src/app/views/tasks/corporate-task-summary/corporate-task-summary.component.html","webpack:///src/app/views/tasks/corporate-task-summary/corporate-task-summary.component.ts","webpack:///src/app/views/tasks/loan-account-approver/loan-credit-details-update/loan-credit-details-update.component.ts","webpack:///src/app/views/tasks/loan-account-approver/loan-credit-details-update/loan-credit-details-update.component.html","webpack:///src/app/views/tasks/loan-account-task-summary/loan-account-task-summary.component.html","webpack:///src/app/views/tasks/loan-account-task-summary/loan-account-task-summary.component.ts","webpack:///src/app/shared/pipes/custom-search-filter.pipe.ts","webpack:///src/app/views/tasks/loan-account-approver/loan-legal-opinion-updates/loan-legal-opinion-updates.component.ts","webpack:///src/app/views/tasks/loan-account-approver/loan-legal-opinion-updates/loan-legal-opinion-updates.component.html","webpack:///src/app/views/tasks/corporate-approver/corporate-approver.component.ts","webpack:///src/app/views/tasks/corporate-approver/corporate-approver.component.html","webpack:///src/app/views/tasks/task-summary/task-summary.component.ts","webpack:///src/app/views/tasks/task-summary/task-summary.component.html","webpack:///src/app/views/tasks/loan-account-approver/loan-repayment-details-update/loan-repayment-details-update.component.html","webpack:///src/app/views/tasks/loan-account-approver/loan-repayment-details-update/loan-repayment-details-update.component.ts","webpack:///src/app/views/tasks/cust-on-boarding-approver/update-additional-info/update-additional-info.component.ts","webpack:///src/app/views/tasks/cust-on-boarding-approver/update-additional-info/update-additional-info.component.html","webpack:///src/app/views/tasks/card-origination-task-summary/card-origination-task-summary.component.ts","webpack:///src/app/views/tasks/card-origination-task-summary/card-origination-task-summary.component.html","webpack:///src/app/views/tasks/approver/nominee-details-update/nominee-details-update.component.ts","webpack:///src/app/views/tasks/approver/nominee-details-update/nominee-details-update.component.html","webpack:///src/app/views/tasks/approver/mandate-details-update/mandate-details-update.component.ts","webpack:///src/app/views/tasks/approver/mandate-details-update/mandate-details-update.component.html","webpack:///src/app/views/tasks/approver/service-details-update/service-details-update.component.ts","webpack:///src/app/views/tasks/approver/service-details-update/service-details-update.component.html","webpack:///src/app/views/tasks/loan-account-approver/loan-assessment-details-update/loan-assessment-details-update.component.html","webpack:///src/app/views/tasks/loan-account-approver/loan-assessment-details-update/loan-assessment-details-update.component.ts","webpack:///src/app/views/tasks/tasks-routing.ts","webpack:///src/app/views/tasks/approver/account-details-update/account-details-update.component.ts","webpack:///src/app/views/tasks/approver/account-details-update/account-details-update.component.html","webpack:///src/app/views/tasks/approver/approver.component.ts","webpack:///src/app/views/tasks/approver/approver.component.html","webpack:///src/app/views/tasks/loan-account-approver/loan-valuation-of-asset-update/loan-valuation-of-asset-update.component.ts","webpack:///src/app/views/tasks/loan-account-approver/loan-valuation-of-asset-update/loan-valuation-of-asset-update.component.html","webpack:///src/app/views/tasks/cust-on-boarding-approver/cust-on-boarding-approver.component.ts","webpack:///src/app/views/tasks/cust-on-boarding-approver/cust-on-boarding-approver.component.html","webpack:///src/app/views/tasks/approver/funding-details-update/funding-details-update.component.ts","webpack:///src/app/views/tasks/approver/funding-details-update/funding-details-update.component.html","webpack:///src/app/views/tasks/approver/secured-overdraft-details-update/secured-overdraft-details-update.component.ts","webpack:///src/app/views/tasks/approver/secured-overdraft-details-update/secured-overdraft-details-update.component.html","webpack:///src/app/views/tasks/cust-on-boarding-approver/update-mandate-info/update-mandate-info.component.ts","webpack:///src/app/views/tasks/cust-on-boarding-approver/update-mandate-info/update-mandate-info.component.html","webpack:///src/app/views/tasks/card-account-approver/card-account-approver.component.ts","webpack:///src/app/views/tasks/card-account-approver/card-account-approver.component.html"],"names":["LoanGuarantorDetailsUpdateComponent","fb","loader","ls","snack","taskSumService","cdr","data","apiService","dialogRef","arrayCountry","arrayState","arrayCity","tomorrow","Date","statusArr","arr","BACKLOGArr","ONGOINGArr","REJECTEDArr","APPROVEDArr","BACKLOGTotalPages","ONGOINGTotalPages","REJECTEDTotalPages","APPROVEDTotalPages","BACKLOGCount","ONGOINGCount","REJECTEDCount","APPROVEDCount","BACKLOGImage","ONGOINGImage","REJECTEDImage","APPROVEDImage","BACKLOGTotalRecords","ONGOINGTotalRecords","REJECTEDTotalRecords","APPROVEDTotalRecords","BACKLOGPage","ONGOINGPage","REJECTEDPage","APPROVEDPage","setDate","getDate","loanaccountID","loanAccountId","console","log","buildGuarantorForm","getCountryName","getStateName","getPrefixValue","country","getCityName","state","loanGuarantorForm","group","gurantorInfo","city","prefix","firstName","lastName","mobileNumber","building","address1","street","address2","zipCode","emailAddress","dateOfBirth","open","getGuarantorByLoanAccId","subscribe","guarantorDetails","close","value","err","key","getDropDownValues","arrayPrefix","entityName","getDropDownValues1","event","pattern","inputChar","String","fromCharCode","charCode","toString","test","preventDefault","payload","upsertGuarantorDetails","assign","statusModel","status","updateLoanDetailsStatus","fundStatus","loanAccountid","setItem","accountType","businessProductName","duration","verticalPosition","horizontalPosition","getDataOnLoad","goToClose","valueForaccId","setAccountId","index","length","statusItem","fetchCustomerInfo","getallLoanAccountData","custResp","updateStatusResponse","loanList","totalPages","totalNoOfElements","markForCheck","_keyPress","submitForm1","selector","templateUrl","styleUrls","AvatarComponent","showInitials","colors","photoUrl","createInititals","randomIndex","Math","floor","random","circleColor","names","name","split","initials","substring","toUpperCase","UpdateDirectorDetailsComponent","formBuilder","corporateService","appApiService","isDirectorSaved","directors","corporateId","getItem","getDoc","buildDirectorForm","directorUpdateForm","get","i","push","addDirectors","j","userAddress","addAddress","addIdProof","custIdProofs","addCustTaxInfo","custTaxInfo","noOfDirector","array","customerId","citizenship","cifNumber","countryOfResidence","existingCustomer","gender","landlineNumber","minLength","maxLength","middleName","phoneNumber","placeOfBirth","primaryCustomer","primaryEmailAdress","residenceStatus","verificationType","controls","addressType","required","idNumber","idType","expiryDate","taxId","countryOfIssue","getAllCountries","authStatus","countryName","getStateByCountryId","id","resp","stateName","arrayResidence","responseDatas","genderList","re","prefixList","idTypeList","addressTypeList","keyCode","panelOpenState","e","showAutocomplete","onSelectionCitizionship","onSelectionResidance","customerInfoList","cifNumberForPayload","customerIdForPayload","autocomplete","closePanel","patchValue","setValue","reset","clearTimeout","timer","setTimeout","fetchByCif","res","error","formDirective","enable","disable","countryFlaglists","currencyCode","Currency","toLowerCase","prefixFlag","noOfDir","Number","removeAt","k","count","number","target","isAllSameDigitVal","directorFormGroup","item","coporateObjModel","saveStatus","setfinishSave","saveOrUpdateCorporateAccountInfo","customerInfo","message","onSubmit","LoanAccountDetailsEditComponent","router","dataService","isEdit","minDate","maxDate","showEditOption","appEntrySummaryView","buildAssetForm","getAssetails","assetDetails","loanAssetForm","assetStatus","estimatedCost","dimensions","locality","marketValue","mortgagedBranch","homeType","upsertAssetDetails","detectChanges","getBusinessProductName","arrayAccountBranch","getAccountBranch","screenArray","screenArrayData","branchName","currencyData","find","x","getBusinessProductDetails","getAccountBranchDetails","assetInfo","sendNavParam","accountDetails","navigate","loanDetailsInfo","CustomerInfoUpdateComponent","tasksummaryService","confirmService","listOfAccounts","accountId","productCustomerId","getGenderValue","getOwnershipValue","getResidenceDetails","getDocumentType","getAdressType","buildCustomerForm","addCustFormGroup","customerInfoUpdateForm","f","numOfApplicants","applicantDetails","productAccountId","ownership","date","format","num","applicant","nationality","occupationType","email","addCustIdProofs","onlySelf","emitEvent","val","applicantNo","doc","customerIdProofs","idProofs","filter","convertDate","arrayGender","arrayOwnership","arrayDocumentType","arrayAddressType","formData","isCifValid","invalid","createAndUpdateAccountants","closeDetails","custDependentModel","inputCharacter","excludedKeys","includes","selectedApplicant","onSave","ApprovalDetailsUpdateComponent","api","arrayAccountType","arrayAccountCurrency","arrayUserRecomendation","getAccountCurrency","getAccountType","getUserRecomendation","buildApprovalForm","approvalUpdateForm","productCode","description","accountBranch","accountCurrency","applicationDate","fundTheAccount","fundBy","amount","overDraftRequested","productDescription","userRecommendation","createdBy","form","approvalUpdate","CardApprovalDetailsUpdateComponent","approvalInfo","buildformGroup","cardApprovalUpdateForm","productName","existingValues","remarks","cardId","upsertApprovalDetails","updateCardStatus","inp","keyPressAlphanumeric","onKeyPress","FILTER_ICON","KycTaskSummaryComponent","dialog","dialogService","tasSumService","sanitizer","iconRegistry","_searchSubject","nodataFound","INITIATEDArr","UNDER_PROCESSArr","INITIATEDPage","UNDER_PROCESSPage","INITIATEDTotalPages","UNDER_PROCESSTotalPages","INITIATEDTotalRecords","UNDER_PROCESSTotalRecords","searchable","isScroll","_setSearchSubscription","addSvgIconLiteral","bypassSecurityTrustHtml","getDataOnScroll","task","setTask","searchTextValue","next","pipe","searchValue","searchKycid","custId","localStorage","width","maxHeight","backdropClass","disableClose","afterClosed","result","fetchCustomerByStatus","page","size","getKycTaskSummaryList","totalRecords","totalPage","getAllCustOnBoardingData","updateDataOnScroll","searchTerm","text","params","isNum","searchText","trim","getKycDetails2","isString","getKycData","loading","getKycDetails","element","unsubscribe","isNaN","idx","col0","col1","col2","col3","col4","col5","col6","col7","col8","col9","onScroll","updateSearch","styles","UpdateCorporateIdentityComponent","validDate","buildIdentityForm","identityUpdateForm","incorporationNumber","dateOfIssue","dateOfExpiry","isAnotherIdProofRequired","idProofList","getDocumentList","obj","Object","keys","map","InterestDetailsUpdateComponent","interestUpdateForm","interest","buildInterestForm","getFlexcubeDetails","response","numberOfItems","intrestType","intrestRateApplicable","marginIn","max","min","effectiveRate","createdDate","lastModifiedDate","lastModifiedBy","intrestDetailsSave","CustOnBoardingTaskSummaryComponent","INITIATEDCount","UNDER_PROCESSCount","INITIATEDImage","UNDER_PROCESSImage","listOfOptions","label","checked","noDataFound","radioButtonSelected","criteria","property","descending","emit","searchCustomerId","navigateByUrl","colCode","panelClass","dataResp","recordStatus","submit","kycStatus","getKycDetails1","getCustomerData","getProfileDetails","profileImage","objectURL","fileData","image","bypassSecurityTrustUrl","valueToFilter","undefined","getKycTaskSummaryAll","customerAdditionalInfo","splice","slice","GoToCorporate","ChargeDetailsUpdateComponent","chargeUpdateForm","charges","buildChargeForm","c","waiver","craetedBy","chargeDetailsSave","flag","FinancialDetailsUpdateComponent","getEmploymentType","getEmploymentCategory","buildFinacialFormGroup","financialDetailsUpdate","applicantName","applicantTotalIncome","applicantTotalExpense","lastUpdatedon","limit_end_date","employmentType","employmentCategory","employeeNumber","officeName","designation","employmentStartDate","employmentEndDate","salary","interestIncome","bonus","cashGifts","business","pension","monthlyIncomeRentals","monthlyIncomeOthers","monthlyIncomeTotal","household","education","vehicleMaintenance","monthlyExpenseRentals","monthlyExpenseOthers","medical","travel","monthlyExpenseTotal","propertyLoan","vehicleLoan","personalLoans","overdraft","cardOutstandings","liabilityOthers","liabilityTotal","savingDeposits","properties","automobiles","fixedDeposits","lands","assetOthers","stocks","assetTotal","validator","formGroup","validateInputGroups","formgroup","incomeErrMsg","disableNext","ExpensesErrMsg","LiabilitiesErrMsg","assetErrMsg","startDate","converDate","endDate","fire","upsertfinancialDetails","fincialResp","arrayEmploymentType","arrayEmploymentCategory","income","calculateTotalIncomeAndExpense","expense","liability","asset","totalIncome","totalExpense","UpdateCorporateBasicInfoComponent","basicInfo","countryArr","categoryArr","buildBasicForm","corporateInfoUpdateForm","companyName","category","CustomTaskSummarySortingPipe","p","sortFn","a","b","sortForAlpha","toLocaleLowerCase","sortForAlphaNumeric","charPart","numPart","sort","pure","UpdateProofOfIdentityComponent","doOcrService","screenInfo","screenName","disableNextAtIndex1","getenableNext","documentType","documentName","fileName","fileUrl","fileUrl2","documentSide","screen","CardFinancialDetailsUpdateComponent","financialInfo","cardFinancialDetailsUpdateForm","initiationInfo","currentlyWorking","upsertCardFinancialDetails","letterOnly","calculateTotalMonthlyIncome","calculateTotalMonthlyExpenses","calculateTotalLiabilities","calculateTotalAssets","UpdatePrimaryInfoComponent","primaryInfo","getMaritalStatus","getNationality","buildPrimaryInfoForm","primaryInfoForm","maritalStatus","arrayMaritalStatus","datas","nationalityArray","dateOfbirth","transform","customerSubmit","insertNewUserOnboarding","onChangePrefix","onChangeGender","CardChargeDetailsUpdateComponent","currencytype","currencySymbol","cardChargeUpdateForm","chargeInfo","onChangeInterest","history","chargeDetailsId","cardChargeDetailsSave","UpdateContactInfoComponent","contactInfo","userAddress_array","arrayCityPerm","arrayStatePerm","arrayCountryPerm","buildContactInfoForm","contactInfoUpdateForm","createUserAddress","residenceType","getDropDownForStateCity","zipIndex","zipCodeIndex","LoanAccountDetailsUpdateComponent","dialogue","updateLoanDetails","updateAsset","isHomeLoan","isVehicleLoan","selectedDay","days","months","years","ifEdit","flag1","selectedYear","getFullYear","year","month","day","getLoanDetails","buildMenuForm","loanUpdateForm","info","customerContribution","loanAmount","purposeOfLoan","loanTenure","saveLoanDetails","getAccount","accountTypeName","itemForm","branchCcy","loanAccountDetails","getLoanAccountDetails","now","dateStringWithTime","ck","pk","parseInt","prSize","renewData","loanForm","sessionStorage","CardCreditScoreUpdateComponent","getCustomerInformationDetails","creditScore","buildCreditForm","customerNames","fetchCustomersByCardAccId","cardCreditScoreUpdateForm","agencyRating","isResponse","customerName","addModFormGroup","agencyId","agencyName","ratings","saveCreditDetails","disableTest","disableUjjivan","disableFastTrack","disableAddAgency","UpdateCorporateContactInfoComponent","corporateAddress","buildContactForm","updateContactInfoForm","primaryEmail","secondaryEmail","landLine","isMailingAddressSame","sendCorporateAccountId","LoanOfferIssueDetailsUpdateComponent","buildLoanOfferIssueForm","loanOfferIssueForm","loanOfferIssueInfo","rateOfInterest","principal","installmentType","installmentFrequency","approvedLoanAmount","generateOffer","getOfferIssueDetails","offerIssueDetails","offerIssueDate","upsertOfferIssue","CardPreferenceDetailsUpdateComponent","arraylimitType","buildcardPrefrenceUpdateForm","preferanceInfo","cardPrefrenceOnLoad","isdailylimit","isLimitTransaction","selectedOptions2","limitType","isRowEnds","cardPrefrenceUpdateForm","cardPrefrences","addMFormGroup","addMandateToFormGroup","dailyLimit","addComa","limitPerTransaction","m","preferenceId","num1","finalNum","replace","final","join","islimitType","isLPTReadOnly","newTransaction","removeComma","uploadCardPrefrence","control","deleteCardPrefrence","selectedDocumentTypes2","isDLReadOnly","limiPrTrn","dailyNum","LimitTxn","isGreaterValue","limitDaily","numb","addMandate","CardAssessmentReportUpdateComponent","arraySystemRecommendation","assessmentInfo","buildAssessmentForm","cardAssessmentUpdateForm","assessmentId","requestedCardLimit","systemRecommendation","approvedCardLimit","recommendedCardLimit","remark","input","which","cardAssessmentDetails","_keyPress1","LoanApprovalDetailsUpdateComponent","arrayUserRecommendation","buildLoanApprovalForm","loanApprovalForm","loanApprovalInfo","approvedLoanAccount","margin","onChangeBranch","QualitativeDetailsUpdateComponent","qualitativeDetails","qualitative","scoreCardId","scorecardId","numberOfApplicant","buildQualitativeForm","getScorecardQuestions","qualitativeUpdateForm","addScorecardMappiing","addScorecardDetails","scoreCardMapping","scoreCardDetails","scorecardAnswer","loggedinUser","scorecardMapping","applicantId","scoreCardDetailsId","scoreCardMappingId","scoreCardQuestionId","scorecardQuestion","scorecardAnswers","attributeType","at","saveQualitativeScorecard","saveReports","LoanCollateralDetailsUpdateComponent","buildCollateralForm","getCollateralType","getCollateralDetails","getRateValue","loanCollateralForm","collateralInfo","collateralType","collateralCurrency","collateralValue","attributes","thirdPartyCollateral","arrayRateValue","getCollateralByLoanAccId","collateralDetails","arrayCollateralType","thirdpartyCollateral","upsertCollateralDetails","loanCollateralDetails","CardInitiationDetailsUpdateComponent","localCurrencyArr","buildInitiationUpdateForm","employmentTypeArray","cardInitiationUpdateForm","cardType","customerAccount","currency","affinityProgram","nameOnCard","kycReference","kycRefrence","uploadCardInitiation","LoanDisbursementDetailsUpdateComponent","buildDisbursementForm","loanDisbursementForm","disbursementMode","disbursementInfo","totalDisbursement","numberOfDisbursement","multipleDisbursementRequired","branchCode","loanDisbursementFetchById","disbursementDetails","loanDisbursementSave","UpdateCorporateAddititonalInfoComponent","organizationTypeList","typeOfOwnershipList","kycStatusList","otherDocumentArray","selectedOptions","selectedDocumentTypes","corporateDocs","isDocumentOptionDisabled","documentTypeList","buildOtherFormGroup","addDocument","otherInfoUpdateForm","organizationType","typeOfOwnership","KycStatus","files","reader","FileReader","readAsDataURL","onload","event2","documentToBeUploaded","fileType","type","uploadData","FormData","append","JSON","stringify","uploadCorporateDocument","TasksModule","provide","useValue","forChild","declarations","imports","providers","exports","LoanAccountApproverComponent","dataResponse","nameCreater","loanInfo","getCustomerInfoDetails","getMandateDetails","fetchOfferAcceptRejectDetails","fetchPostOfferAmendmentDetails","getAccountCreateDetails","getLoanAccountInfo","getAllData","getProfileImage","getLoanQualitativeScorecardDetails","qualitativeScoreboardSummary","loanAccount_array","createDataInfo","values","assest_array","mandate_array","mandateId","colateral_array","guranator_array","loanInterest_array","loanDisbusment_array","loanRepayment_array","loanCharge_array","accountService_array","loanCreditScore_array","valueofassest_array","legaopninio_array","loanassement_array","loanapproval_array","offerissue_array","approvedStatus","rejectedStatus","editScreen","editType","openPopUp1","openGuarantor","openDisbursement","openRepaymentInfo","loanRepaymentInfo","openValuationOfAssetInfo","loanValuationOfAssetInfo","openLegalOpnionInfo","loanLegalInfo","openAssessmentInfo","loanAssessmentInfo","openOfferIssueInfo","openApprovalInfo","openCreditInfo","loanCreditInfo","openPopUp","openCollateralPopup","openMandate","mandateInfo","fetchCustomersByLoanAccId","customerInfoDetails","noOfApplicants","imageUrl","signatures","signatureData","getMandateDetailsByLoanAccId","mandateDetails","mandateDetailsArray","secondaryChargeAllowed","getofferDetails","offerDetails","getOfferAmendmentDetails","postOfferDetails","accountCreateDetails","accountCreateValue","accStatus","formDt","updateLoanAccStatus","respData","errorStatus","updateApplicationStatus","UnsecuredOverdraftDetailsUpdateComponent","getCurrencyDetails","buildUnsecuredForm","unsecuredUpdateForm","limitId","overdraftCurrency","overdraftLimitAmount","limitStartDate","limitEndDate","unsecuredLimit","renewPeriod","renewalAmount","overdraftLimitRenewed","selectedMonth","limitData","overdraftLAData","limitStartDateData","limitEndDateData","renewalAmountData","finalPayload","unsecuredDraft","fetchCurrencyMaintAuthRecs","CardInterestDetailsUpdateComponent","cardInterestUpdateForm","interestInfo","cardInterestId","cardintrestDetailsSave","LoanMandateDetailsUpdateComponent","buildMandateForm","loanMandateUpdate","registered","collateralPercentage","repaymentSharePercentage","collateralShare","repaymentShare","upsertMandateDetails","CorporateTaskSummaryComponent","screenType","searchcorporateID","getallCorporateData","corporateList","getcorporateSearchDetails","resetSearchData","searchResponseUpdate","corporateStatus","corporateID","GoToCustomerOnboarding","LoanCreditDetailsUpdateComponent","buildLoanCreditForm","loanCreditForm","gettingCreditRatingDetails","creditDetails","LoanAccountTaskSummaryComponent","getAllLoanDetailOnScroll","getallLoanAccountData2","getallLoanAccountData1","CustomSearchFilterPipe","items","keyword","radioButtonValue","itemFound","str","indexOf","LoanLegalOpinionUpdatesComponent","isChecked","disabled","disabledToggle","buildLegalOpinionForm","loanLegalForm","opinion","lawyerName","isDecisionFavorable","mktValOfAsset","opinionDate","validationDate","assetAreaSize","gettingLegalOpinionDetails","legalDetails","valuationDate","saveLegalOpinion","CorporateApproverComponent","selectedIndex","addNewProof","arrayEmployerName","proofDocumentArray","isOnGoing","custDoc_array","getCustomerDocumentsDetails1","phoneNum","emailID","customerColorCode","getCoropratedetails","custStatus","custIdProofs_array","directorsInfo_array","document_type","getCustomerDocuments","custOtherDoc_array","statusUpdate","updateCorporateSatatus","openEditScreen","encapsulation","None","initiatedArr","ncForm","TaskSummaryComponent","getAllAccDetails","accountList","getAllAccDetailOnScroll","accountStatusData","getAccountData","getSearchData","LoanRepaymentDetailsUpdateComponent","buildRepaymentForm","loanRepaymentFetchById","repaymentDetails","loanRepaymentForm","maturityeDate","firstRepaymentDate","moratariumPeriod","bankName","typeOfRepayment","repaymentMode","repaymentFrequency","moraturioumPeriod","firstDisbursementDate","loanRepaymentSave","UpdateAdditionalInfoComponent","additionalInfo","kycList","getEmployerName","buildAdditionalInfoForm","OnInput","additionalInfoUpdateForm","employerName","otherEmployerName","replaceAll","CardOriginationTaskSummaryComponent","getCardAccDetails","cardList","getAllCardAccDetailOnScroll","cardStatusData","getCardAccSearchData1","getCardSeracData","NomineeDetailsUpdateComponent","getRelationShipType","buildNomineeForm","addGroup","nomineeUpdateForm","nominees","noOfNominee","expandAddress","isAddrSameAsApplicant","isNomineeMinor","guardianDetails","n","relationshipType","nomineeId","guardianId","birthDate","underAgeValidate","addGuardian","getApplicantAddress","nomineeAddress","nomineeAddress1","address","confirm","title","ok","cancel","deleteNomineeById","updateNominee","createNominee","arrayRelationshipType","birthday","diff","getTime","ageDate","age","abs","getUTCFullYear","MandateDetailsUpdateComponent","getModeOfOperation","mandatesUpdateForm","mandates","modeOfOperation","amountFrom","amountTo","totalSignaturesRequired","deleteMandateById","arrayModeOfOperation","saveMandateDetails","no_of_sig","no_of_applicants","ServiceDetailsUpdateComponent","statementList","bankList","communicationList","bankChannelPreferencesArray","arrayCardType","commChannelPreferencesArray","AccStatementPreferenceArray","Platinum","Diamond","Normal","Silver","Gold","buildServiceForm","statementPref","commChannelPref","bankChannelPref","debitCardRequired","isDebitLimit","serviceUpdateForm","accServiceId","statementFrequency","flattenValues","chequebookNeeded","debitcardNeeded","passbookNeeded","debitCardLimit","debitCardType","checkboxes","flattenedValues","checkbox","checklist","forEach","accountPayload","createAccountService","LoanAssessmentDetailsUpdateComponent","loanAssessmentUpdate","loanAmountRecommendation","requestedLoanAmount","fetchLoanAssessment","assessmentDetails","updateAssessmentDetails","TaskRoutes","path","component","AccountDetailsUpdateComponent","buildAccountUpdateForm","swiftCodeEnable","disableFundTheAccount","accountUpdateForm","productImage","swiftCode","saveProductAccountInfo","showSpinn","cifNumberPrimary","listOfCustByCif","onbackSpace","keyUpevent","onToggle","ApproverComponent","chart","submitClicked","accountInfo","chargeDetails","variable","loadingApplEnrich","accInfo","accountStatus","getAccountInfoByAccountId","debitCardData","getAccountInfoByAccId","intrestDetails","assignValues","businessProductAccServices","businessProductNominee","securedOverdraft","unsecuredOverdraft","financialDetails","qualitativeScorecard","assessmentReport","createAccFundingStage","prototype","hasOwnProperty","call","customerInformation","custKey","custEle","applicantKey","applicantEle","approverName","mandate","updateCreateAccStatus","nominee","securedOverdraftDetails","unsecuredOverdraftDetails","scoreCardMappingArray","accountServiceDetails","nomineeDetails","exepse","chartOptions","series","height","plotOptions","radialBar","hollow","labels","chartOptions1","series1","chart1","stroke1","curve","fill1","opacity","labels1","yaxis1","xaxis1","businessProductAccount","getByAccountId","accountdetailsForStatusUpdate","updateAccountStatus","accData","appStatus","updateResp","getCardType","debitCardDataValue","editAccountDetails","editInterestDetails","editChargeDetails","editQualitativeDetails","editApprovalDetails","editDigitalSign","LoanValuationOfAssetUpdateComponent","buildLoanValuationForm","loanValuationForm","forcedSaleValue","propertyAreaSize","bankValuation","assetType","actualPropertyAreaSize","borrowersMktValOfAsset","faceValOfAsset","propertyAreaInUnits","gettingValuationDetails","valuationOfAssetDetails","actualPropertySizeArea","propertyAreaInSize","saveValuationDetails","CustOnBoardingApproverComponent","getCustomerDocumentsDetails","fetchSignatureDetails","updateKycStatusByCustId","splitKyc","getCustomerAllDocuments","getSignatureDocuments","noOFSigns","signatureDetails_array","proofDoc_array","fundStageUpdateForm","FundingDetailsUpdateComponent","accountService","fundingStageService","disableFundByAccount","disabletellerTrxnStatus","disabletellerTrxnRefNo","disablechequeNumber","buildFundFormGroup","fundId","tellerTrxnRefNo","fundByAccount","chequeNumber","tellerTrxnStatus","createdTime","modifiedBy","modifiedTime","fetchAccountBalance","isForce","fetchAccountBalanceByAccountId","saveOrUpdateFundStageDetails","fundResp","isSubmittedResp","SecuredOverdraftDetailsUpdateComponent","loggedInUser","buildSecuredOverdraftForm","addFormGroup","securedOverdraftUpdateForm","collaterals","securityReferenceNumber","availableLinkageAccount","linkagePercentage","rateValue","rate","spread","finalAmount","documentUrl","overDRaftValue","linkangePercent","securityReferenceNum","showSpinner","fetchBySecurityNumber","issecurityValid","branchData","securedOverDrafts","branch","file","uploadcollateralDoc","url","docUrl","showDelete","touched","_d","securedDraft","clear","toFixed","finalRatevalue","UpdateMandateInfoComponent","listOfSignatures","progressValOthers","deleteRecord","buildSignatureForm","noOfSignSelect","signatureUpdateForm","createSignatureBoxes","noOfSignatures","sign_array","accountSignatureId","imageURL1","noOfSign","arrlength","enableButton","getSignArray","newSignIndex","pop","doConfirmDialog","removeSign","deleteSignature","difference","remove","report","action","confirmDelete","fetchSignatureInfo","getSignData","uploadModel","v","deleteCustomerSign","signIndex","signCount","show","signatureType","getListOfSignatures","popupSign","selectedFiles","signatureimg","uploadDoc","img","upload_model","txtCont","uploadSub","uploadSignature","UploadProgress","round","loaded","total","Response","shotToast","msg","changeValue","CardAccountApproverComponent","cardInfo","cardAccountInfo","getCardAccountInfoById","initiationDetails","office","creditRatingInfo","creditRatingDetails","documentInfo","approvalDetails","preferenceDetails","preferenceInfo","interestDetails","updateCardAccountStatus","fetchCardCustomersByCardId","editInitiationDetails","editAssessmentReport"],"mappings":"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","file":"views-tasks-tasks-module-es5.js","sourcesContent":["<div >\r\n    <mat-dialog-content>\r\n      <div fxLayout=\"row\" class=\"contain\">\r\n        <mat-icon style=\"padding-left: 100%;\"class=\"backIcon\" (click)=\"goToClose()\">close</mat-icon>\r\n    </div>\r\n      <h1>Loan Guarantor Details</h1>\r\n      <form class=\"mt-32\" [formGroup]=\"loanGuarantorForm\">\r\n        <div fxLayout=\"row wrap\" fxLayout.lt-sm=\"column\" >\r\n          <div fxFlex=\"33.33\" class=\"pr-16\">\r\n            <mat-label>Prefix </mat-label>\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n              <mat-select name=\"prefix\" formControlName=\"prefix\" required>\r\n                <mat-option *ngFor=\"let prefix of arrayPrefix\" [value]=\"prefix\">\r\n                  {{prefix}}\r\n                </mat-option>\r\n                </mat-select>\r\n            </mat-form-field>\r\n          </div>\r\n    \r\n          <div fxFlex=\"33.33\" class=\"pr-16\">\r\n            <mat-label>First Name </mat-label>\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n              <input matInput name=\"firstName\" formControlName=\"firstName\"  \r\n              />\r\n            </mat-form-field>\r\n          </div>\r\n    \r\n          <div fxFlex=\"33.33\" class=\"pr-16\">\r\n            <mat-label>Last Name</mat-label>\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n              <input matInput name=\"lastName\" formControlName=\"lastName\"  \r\n              />\r\n            </mat-form-field>\r\n          </div>\r\n        </div>\r\n    \r\n        <div fxLayout=\"row wrap\">\r\n          <div fxFlex=\"33.33\" class=\"pr-16\">\r\n            <mat-label>Country</mat-label>\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n              <mat-select name=\"country\" formControlName=\"country\" (selectionChange)=\"getStateName($event.value)\"\r\n              (selectionChange)=\"getCityName($event.value)\">\r\n                <mat-option value=\"\">Select</mat-option>\r\n                <mat-option *ngFor=\"let country of arrayCountry\" [value]=\"country\">\r\n                  {{country}}\r\n                </mat-option>\r\n              </mat-select>\r\n            </mat-form-field>\r\n          </div>\r\n          <div fxFlex=\"33.33\" class=\"pr-16\">\r\n            <mat-label>State</mat-label>\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n              <mat-select name=\"state\" formControlName=\"state\" (selectionChange)=\"getCityName($event.value)\">\r\n                <mat-option value=\"\">Select</mat-option>\r\n                <mat-option *ngFor=\"let state of arrayState\" [value]=\"state.value1\">\r\n                  {{state.value1}}</mat-option>\r\n              </mat-select>\r\n            </mat-form-field>\r\n          </div>\r\n          <div fxFlex=\"33.33\" class=\"pr-16\">\r\n            <mat-label>City</mat-label>\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n              <mat-select name=\"city\" formControlName=\"city\">\r\n                <mat-option value=\"\">Select</mat-option>\r\n                <mat-option *ngFor=\"let city of arrayCity\" [value]=\"city.value1\">{{city.value1}}</mat-option>\r\n              </mat-select>\r\n            </mat-form-field>\r\n          </div>\r\n        </div>\r\n        <div fxLayout=\"row wrap\">\r\n          <div fxFlex=\"33.33\" class=\"pr-16\">\r\n            <mat-label>Building</mat-label>\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n              <input matInput name=\"building\" formControlName=\"building\"  \r\n              />\r\n            </mat-form-field>\r\n          </div>\r\n          <div fxFlex=\"33.33\" class=\"pr-16\">\r\n            <mat-label>Street</mat-label>\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n              <input matInput name=\"street\" formControlName=\"street\"  \r\n              />\r\n            </mat-form-field>\r\n          </div>\r\n          <div fxFlex=\"33.33\" class=\"pr-16\">\r\n            <mat-label>Zip Code</mat-label>\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n              <input matInput name=\"zipCode\" formControlName=\"zipCode\"  \r\n               maxlength=\"6\"   (keypress)=\"_keyPress($event)\" />\r\n            </mat-form-field>\r\n          </div>\r\n        </div>\r\n  \r\n        <div fxLayout=\"row wrap\">\r\n          <div fxFlex=\"33.33\" class=\"pr-16\">\r\n            <mat-label>Date Of Birth</mat-label>\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n              <!-- <input matInput name=\"amt\" formControlName=\"dateOfBirth\"  \r\n              (keypress)=_keyPress($event) /> -->\r\n              <input matInput [matDatepicker]=\"pickerDOB\" name=\"dateOfBirth\" formControlName=\"dateOfBirth\"\r\n              [max]=\"tomorrow\" >\r\n                  <mat-datepicker-toggle matSuffix [for]=\"pickerDOB\"></mat-datepicker-toggle>\r\n                  <mat-datepicker #pickerDOB></mat-datepicker>   \r\n            </mat-form-field>\r\n          </div>\r\n          <div fxFlex=\"33.33\" class=\"pr-16\">\r\n            <mat-label>Email Address</mat-label>\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n              <input matInput name=\"emailAddress\" formControlName=\"emailAddress\"  \r\n              />\r\n            </mat-form-field>\r\n          </div>\r\n          <div fxFlex=\"33.33\" class=\"pr-16\">\r\n            <mat-label>Phone Number</mat-label>\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n              <input matInput name=\"mobileNumber\" formControlName=\"mobileNumber\"  \r\n              maxlength=\"10\"\r\n              (keypress)=\"_keyPress($event)\" />\r\n            </mat-form-field>\r\n          </div>\r\n        </div>\r\n       \r\n      </form>\r\n    </mat-dialog-content>\r\n    <mat-dialog-actions align=\"end\">\r\n      <button mat-button (click)=\"submitForm1()\">\r\n        Update\r\n      </button>\r\n      <button mat-button (click)=\"goToClose()\">Close</button>\r\n    </mat-dialog-actions>\r\n</div>","import { ChangeDetectorRef, Component, Inject, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { AppLoaderService } from 'app/shared/services/app-loader/app-loader.service';\r\nimport { TasksummaryService } from '../../tasksummary.service';\r\n\r\n@Component({\r\n  selector: 'app-loan-guarantor-details-update',\r\n  templateUrl: './loan-guarantor-details-update.component.html',\r\n  styleUrls: ['./loan-guarantor-details-update.component.scss']\r\n})\r\nexport class LoanGuarantorDetailsUpdateComponent implements OnInit {\r\n  loanGuarantorForm: FormGroup;\r\n  loanaccountID: any;\r\n  loanAccountId: any;\r\n  arrayCountry: any[] = [];\r\n  arrayState: any[] = [];\r\n  arrayCity: any[] = [];\r\n  entityName: string;\r\n  arrayPrefix: string[];\r\n  guarantorDetails: any;\r\n  tomorrow = new Date();\r\n\r\n  statusArr: any = ['BACKLOG', 'ONGOING', 'APPROVED', 'REJECTED']\r\n  arr: any = ['BACKLOG', 'ONGOINGArr', 'APPROVEDArr', 'REJECTEDArr']\r\n  BACKLOGArr: any = [];\r\n  ONGOINGArr: any = [];\r\n  REJECTEDArr: any = [];\r\n  APPROVEDArr: any = [];\r\n  \r\n  BACKLOGTotalPages: number = 0\r\n  ONGOINGTotalPages: number = 0\r\n  REJECTEDTotalPages: number = 0\r\n  APPROVEDTotalPages: number = 0\r\n\r\n  BACKLOGCount: number = 0\r\n  ONGOINGCount: number = 0\r\n  REJECTEDCount: number = 0\r\n  APPROVEDCount: number = 0\r\n\r\n  BACKLOGImage: any[] = [];\r\n  ONGOINGImage: any[] = [];\r\n  REJECTEDImage: any[] = [];\r\n  APPROVEDImage: any[] = [];\r\n\r\n  BACKLOGTotalRecords: number = 0;\r\n  ONGOINGTotalRecords: number = 0;\r\n  REJECTEDTotalRecords: number = 0;\r\n  APPROVEDTotalRecords: number = 0;\r\n\r\n  BACKLOGPage: number = 0;\r\n  ONGOINGPage: number = 0;\r\n  REJECTEDPage: number = 0;\r\n  APPROVEDPage: number = 0;\r\n  \r\n  constructor(private fb: FormBuilder, private loader: AppLoaderService, private ls: LocalStoreService, private snack: MatSnackBar,\r\n    private taskSumService: TasksummaryService, private cdr: ChangeDetectorRef,@Inject(MAT_DIALOG_DATA) public data: any, private apiService: ApiService, public dialogRef: MatDialogRef<LoanGuarantorDetailsUpdateComponent>)\r\n  { \r\n    this.tomorrow.setDate(this.tomorrow.getDate());\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.loanaccountID = this.data.loanAccountId;\r\n    console.log('loanaccountID',this.loanaccountID)\r\n    console.log('component call check');\r\n    this.buildGuarantorForm(this.data);\r\n   // this.getGuarantorDetails();\r\n    this.getCountryName(\"country\");\r\n    this.getStateName(\"state\");\r\n    this.getPrefixValue(\"prefix\");\r\n  }\r\n  buildGuarantorForm(data?) {\r\n    console.log('item',data)\r\n   \r\n     \r\n    if(data && data.country){\r\n      this.getStateName(data.country);\r\n      this.getCityName(data.state);\r\n    }\r\n    this.loanGuarantorForm = this.fb.group({\r\n        loanAccountId: [this.loanaccountID],\r\n        country:[data ? data?.gurantorInfo?.country:''],\r\n        state:[data ? data?.gurantorInfo?.state:''],\r\n        city: [data ? data?.gurantorInfo?.city : ''],\r\n        prefix:[data ? data?.gurantorInfo?.prefix:''],\r\n        firstName:[data ?data?.gurantorInfo?.firstName:''],\r\n        lastName:[data ? data?.gurantorInfo?.lastName:''],\r\n        mobileNumber:[data ? data?.gurantorInfo?.mobileNumber:''],\r\n        building:[data ? data?.gurantorInfo?.building:data.gurantorInfo.address1],\r\n        street:[data ? data?.gurantorInfo?.street:data.gurantorInfo.address2],\r\n        zipCode: [data ? data?.gurantorInfo?.zipCode : ''],\r\n        emailAddress:[data ? data?.gurantorInfo?.emailAddress:''],\r\n        dateOfBirth: [data ? data?.gurantorInfo?.dateOfBirth:'']\r\n     \r\n  \r\n  \r\n \r\n    \r\n    });\r\n\r\n  }\r\n  getGuarantorDetails() {\r\n    this.loader.open();\r\n    this.apiService.getGuarantorByLoanAccId(this.loanaccountID).subscribe((guarantorDetails) => {\r\n      this.loader.close();\r\n      this.guarantorDetails = guarantorDetails;\r\n      console.log(\"this.guarantorDetails::\", this.guarantorDetails);\r\n      // this.loanGuarantorForm.value.building = this.guarantorDetails.address1;\r\n     // this.loanGuarantorForm.value.street = this.guarantorDetails.address2;\r\n     \r\n\r\n      this.getStateName(this.guarantorDetails.country);\r\n      this.getCityName(this.guarantorDetails.state);\r\n      this.buildGuarantorForm(this.guarantorDetails);\r\n      this.guarantorDetails.address1 = this.loanGuarantorForm.value.building;\r\n      this.guarantorDetails.address2 = this.loanGuarantorForm.value.street;\r\n    }, (err: any) => {\r\n      this.loader.close();\r\n    });\r\n  }\r\n  getPrefixValue(key: string) {\r\n    this.apiService.getDropDownValues(key).subscribe((data) => {\r\n      this.arrayPrefix = data;\r\n            console.log('data',this.arrayPrefix)\r\n    });\r\n  }\r\n  \r\n  getCountryName(key: string) {\r\n    this.apiService.getDropDownValues(key).subscribe((data) => {\r\n      this.arrayCountry = data;\r\n      console.log(\"-->\", this.arrayCountry)\r\n    });\r\n  }\r\n\r\n  getStateName(country) {\r\n    this.entityName = \"state\";\r\n    console.log(\"State -- \", country)\r\n    this.apiService.getDropDownValues1(this.entityName, country).subscribe((data) => {\r\n      this.arrayState = data;\r\n      console.log(\"-->\", this.arrayState)\r\n    });\r\n  }\r\n\r\n  getCityName(state: any) {\r\n    this.entityName = \"city\";\r\n    console.log(state)\r\n    this.apiService.getDropDownValues1(this.entityName, state).subscribe((data) => {\r\n      this.arrayCity = data;\r\n      console.log(\"-->\", this.arrayCity)\r\n    });\r\n  }\r\n\r\n  _keyPress(event: any) {\r\n    // console.log(\"key\",event);\r\n    const pattern = /[0-9]/;\r\n    let inputChar = String.fromCharCode(event.charCode);\r\n    console.log(\"inputChar\",inputChar);\r\n    inputChar=inputChar.toString();\r\n    console.log(\"inputChar1\",inputChar);\r\n    inputChar=inputChar\r\n    if (!pattern.test(inputChar)) {\r\n        event.preventDefault();\r\n    }\r\n   }\r\n \r\n\r\n  goToClose(): void {\r\n    this.dialogRef.close();\r\n    this.apiService.getGuarantorByLoanAccId(this.loanaccountID).subscribe((guarantorDetails: any) => {\r\n      console.log(\"All Account Service\", guarantorDetails);\r\n      this.guarantorDetails = guarantorDetails;\r\n      console.log(\"this.accountDetails\", this.guarantorDetails);\r\n      console.log('form',this.loanGuarantorForm.value)\r\n\r\n   });\r\n   \r\n  }\r\n  submitForm1(){\r\n    \r\n  \r\n\r\n    let payload={\r\n      // loanAccountId: this.showEditOption ? this.loanaccountID : null,\r\n      loanAccountId: this.data.loanAccountId,\r\n      country:this.loanGuarantorForm.value.country,\r\n      state:this.loanGuarantorForm.value.state,\r\n      city: this.loanGuarantorForm.value.city,  \r\n      address1:this.loanGuarantorForm.value.building,\r\n      address2:this.loanGuarantorForm.value.street,\r\n      zipCode: this.loanGuarantorForm.value.zipCode,\r\n      mobileNumber: this.loanGuarantorForm.value.mobileNumber\r\n      \r\n  \r\n    }\r\n    console.log(\"payload\",payload)\r\n    this.apiService.upsertGuarantorDetails(payload).subscribe(data => {\r\n      console.log(\"data\",data.loanAccountId);\r\n      this.loanaccountID = this.data.loanAccountId;\r\n      console.log('loanaccountID', this.loanaccountID)\r\n      this.assign(this.data.loanAccountId)\r\n      if (data === 200 || data !== null) {\r\n        let statusModel = {\r\n          loanAccountId: this.data.loanAccountId,\r\n          status: \"ONGOING\"\r\n        };\r\n        this.apiService.updateLoanDetailsStatus(statusModel).subscribe(data => {\r\n        });\r\n      //  sessionStorage.setItem('loanAccountId', data.loanAccountid);\r\n        let fundStatus = {\r\n          loanAccountid: this.data.loanAccountId\r\n          \r\n        };\r\n       \r\n\r\n        this.ls.setItem('fundByStatus', fundStatus);\r\n        this.ls.setItem('accountType', data.accountType);\r\n        this.ls.setItem('productName',data.businessProductName); \r\n        this.loanaccountID = this.data.loanAccountId;\r\n        console.log(\"this.productaccountID\",this.loanaccountID);\r\n        this.snack.open('Data Updated!', 'OK', {\r\n          duration: 4000,\r\n          verticalPosition: 'top',\r\n          horizontalPosition: 'right'\r\n        });\r\n        this.getDataOnLoad();\r\n      }\r\n      if( data === 500){\r\n        this.snack.open('Not able to connect to server!', 'INTERNAL SERVER ERROR', {\r\n          duration: 4000,\r\n          verticalPosition: 'top',\r\n          horizontalPosition: 'right'\r\n        });\r\n        console.log(\"500 error\")\r\n      }\r\n      \r\n      this.goToClose();\r\n    })\r\n  }\r\n  assign(valueForaccId) {\r\n    this.apiService.setAccountId({\r\n      loanAccountId: valueForaccId\r\n    });\r\n    console.log(\"loan\", this.loanAccountId)\r\n  }\r\n  async getDataOnLoad() {\r\n    for (let index = 0; index < this.statusArr.length; index++) {\r\n      const statusItem = this.statusArr[index];\r\n      this.fetchCustomerInfo(statusItem);\r\n    }\r\n\r\n  }\r\n\r\n   fetchCustomerInfo(status:string){\r\n   \r\n    this.taskSumService.getallLoanAccountData(status)\r\n            .subscribe((custResp:any) => {\r\n              console.log(\"Response\", custResp);\r\n              this.updateStatusResponse(status, custResp);\r\n            });\r\n  }\r\n\r\n  updateStatusResponse(status, data){\r\n    console.log(\"data\", data)\r\n    console.log(\"status\", status)\r\n      if (status == 'ONGOING') {\r\n      this.ONGOINGArr = data?.loanList;\r\n      this.ONGOINGTotalPages = data?.totalPages;\r\n      this.ONGOINGTotalRecords = data?.totalNoOfElements;\r\n    }\r\n \r\n\r\n    this.cdr.markForCheck();\r\n}\r\n}\r\n","import { Component, OnInit, Input } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'app-photo',\r\n    templateUrl: './avatar.component.html',\r\n    styleUrls: ['./avatar.component.scss'],\r\n})\r\nexport class AvatarComponent implements OnInit {\r\n\r\n    @Input()\r\n    public photoUrl: string;\r\n\r\n    @Input()\r\n    public name: string;\r\n\r\n    public showInitials = false;\r\n    public initials: string;\r\n    public circleColor: string;\r\n\r\n    private colors = [\r\n        '#24CCA7',\r\n        '#24CCA7',\r\n        '#24CCA7',\r\n        '#24CCA7', \r\n    ];\r\n    ngOnInit() {\r\n\r\n        if (!this.photoUrl) {\r\n            this.showInitials = true;\r\n            this.createInititals();\r\n\r\n            const randomIndex = Math.floor(Math.random() * Math.floor(this.colors.length));\r\n            this.circleColor = this.colors[randomIndex];\r\n        }\r\n\r\n    }\r\n\r\n    private createInititals(): void {\r\n        let names = this.name.split(' '),\r\n            initials = names[0].substring(0, 1).toUpperCase();\r\n\r\n        if (names.length > 1) {\r\n            initials += names[names.length - 1].substring(0, 1).toUpperCase();\r\n        }\r\n\r\n\r\n        this.initials = initials;\r\n        // console.log(\"this.name\", this.name);\r\n        // console.log(\"this.initials\", this.initials);\r\n    }\r\n}","<div class=\"circle\" [ngStyle]=\"{'background-color':  circleColor }\">\r\n    <img *ngIf=\"!showInitials\" src=\"{{photoUrl}}\">\r\n\r\n    <div *ngIf=\"showInitials\" class=\"initials\">\r\n        {{ initials }}\r\n    </div>\r\n</div>","import { DatePipe } from '@angular/common';\r\nimport { ChangeDetectorRef, Component, Inject, OnInit } from '@angular/core';\r\nimport { inject } from '@angular/core/testing';\r\nimport { FormArray, FormBuilder, FormGroup, FormGroupDirective, Validators } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { ApplicationEntryStageService } from 'app/shared/services/application-entry-stage.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { CorporateOnboardingService } from 'app/views/others/onboarding-corporate/corporate-onboarding.service';\r\n\r\n@Component({\r\n  selector: 'app-update-director-details',\r\n  templateUrl: './update-director-details.component.html',\r\n  styleUrls: ['./update-director-details.component.scss']\r\n})\r\nexport class UpdateDirectorDetailsComponent implements OnInit {\r\n  directorUpdateForm: FormGroup;\r\n  arrayCountry: any[] = [];\r\n  Currency: any;\r\n  arrayState: any[] = [];\r\n  arrayCity: string[] = [];\r\n  arrayResidence: string[];\r\n  customerId: any;\r\n  panelOpenState: boolean;\r\n  showAutocomplete: boolean;\r\n  autocomplete: any;\r\n  customerInfoList: any;\r\n  cifNumberForPayload: any;\r\n  customerIdForPayload: any;\r\n  genderList: string[];\r\n  prefixList: string[];\r\n  idTypeList: string[];\r\n  addressTypeList: string[];\r\n  isAllSameDigitVal: boolean;\r\n  corporateId: any;\r\n  saveStatus: any;\r\n  noOfDir: number;\r\n  cifNumber: any;\r\n  item: any;\r\n  items: any;\r\n  number: number;\r\n  prefixFlag: boolean;\r\n  currencyCode: any;\r\n  timer: NodeJS.Timeout;\r\n  isDirectorSaved: boolean = false;\r\n  directors:FormArray = new FormArray([]);\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) private data,\r\n    private dialogRef: MatDialogRef<UpdateDirectorDetailsComponent>,\r\n    private formBuilder: FormBuilder,\r\n    private ls: LocalStoreService,\r\n    private apiService: ApiService,\r\n    private corporateService: CorporateOnboardingService,\r\n    private snack: MatSnackBar,\r\n    private cdr: ChangeDetectorRef,\r\n    private appApiService: ApplicationEntryStageService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.corporateId = this.ls.getItem('corporateId')\r\n    console.log(this.data);\r\n    this.getDoc();\r\n    this.getCountryName('country');\r\n    if (this.data != null) {\r\n      this.buildDirectorForm(this.data);\r\n      this.directors = this.directorUpdateForm.get('directors') as FormArray;\r\n      for(let i = 0; i < this.data.length ; i++){\r\n        this.directors.push(this.addDirectors(this.data[i]))\r\n        for(let j = 0; j < this.data[i].userAddress.length; j++){\r\n          this.getStateName(this.data[i].userAddress[j].country)\r\n          this.getCityName(this.data[i].userAddress[j].state)\r\n          this.addAddress(i,this.data[i].userAddress[j])\r\n        }\r\n        this.addIdProof(i,this.data[i].custIdProofs[0])\r\n        this.addCustTaxInfo(i,this.data[i].custTaxInfo[0])\r\n      }\r\n    }\r\n    else{\r\n      this.buildDirectorForm();\r\n      this.directors = this.directorUpdateForm.get('directors') as FormArray;\r\nthis.directors.push(this.addDirectors())\r\nthis.addAddress(0);\r\nthis.addIdProof(0)\r\nthis.addCustTaxInfo(0);\r\n    }\r\n  }\r\n  buildDirectorForm(data?) {\r\n    this.directorUpdateForm = this.formBuilder.group({\r\n      noOfDirector:[data? this.data.length : '1'],\r\n      directors: this.formBuilder.array([])\r\n    })\r\n  }\r\n\r\n  addDirectors(data?){\r\n    return this.formBuilder.group({\r\n      customerId: this.customerId,\r\n      citizenship: [data ? data.citizenship : ''],\r\n      cifNumber: [data ? data.cifNumber : ''],\r\n      corporateId: [data ? data.corporateId : ''],\r\n      countryOfResidence: [data ? data.countryOfResidence : ''],\r\n      dateOfBirth: [data ? data.dateOfBirth : ''],\r\n      existingCustomer: [data ? data.existingCustomer : ''],\r\n      firstName: [data ? data.firstName : ''],\r\n      gender: [data ? data.gender : ''],\r\n      landlineNumber: [data ? data.landlineNumber : '', [Validators.minLength(10), Validators.maxLength(10)]],\r\n      lastName: [data ? data.lastName : ''],\r\n      middleName: [data ? data.middleName : ''],\r\n      phoneNumber: [data ? data.phoneNumber : '', [Validators.minLength(10), Validators.maxLength(10)]],\r\n      placeOfBirth: [data ? data.placeOfBirth : ''],\r\n      prefix: [data ? data.prefix : ''],\r\n      primaryCustomer: [false],\r\n      primaryEmailAdress: [data ? data.primaryEmailAdress : ''],\r\n      residenceStatus: [data ? data.residenceStatus : ''],\r\n      verificationType: \"onboarding\",\r\n      userAddress: this.formBuilder.array([]),\r\n      custIdProofs: this.formBuilder.array([]),\r\n      custTaxInfo: this.formBuilder.array([])\r\n    })\r\n  }\r\n\r\n  addAddress(i,data?) {\r\n    (this.directors.controls[i].get('userAddress') as FormArray).push(this.formBuilder.group({\r\n      addressType: [data ? data.addressType : ''],\r\n      address1: [[data ? data.address1 :''], [Validators.pattern(\".*[a-zA-Z].*\")]],\r\n      address2: [[data ? data.address2 :''], [Validators.pattern(\".*[a-zA-Z].*\")]],\r\n      city: [data ? data.city :''],\r\n      state: [data ? data.state :''],\r\n      country: [data ? data.country :''],\r\n      zipCode: [data ? data.zipCode :'', [Validators.required, Validators.pattern(\"^((\\\\+91-?)|0)?[0-9]{5,10}$\")]]\r\n    }));\r\n  }\r\n\r\n  addIdProof(i,data?) {\r\n    (this.directors.controls[i].get('custIdProofs') as FormArray).push(this.formBuilder.group({\r\n      idNumber: [data ? data.idNumber :''],\r\n      idType: [data ? data.idType :''],\r\n      expiryDate: [data ? data.expiryDate :'']\r\n    }));\r\n  }\r\n\r\n  addCustTaxInfo(i,data?) {\r\n    (this.directors.controls[i].get('custTaxInfo') as FormArray) .push(this.formBuilder.group({\r\n      taxId: [data ? data.taxId :'', [Validators.required, Validators.pattern(\"^[0-9]*$\")]],\r\n      countryOfIssue: [data ? data.countryOfIssue :'']\r\n    }));\r\n  }\r\n\r\n  getCountryName(key: string) {\r\n    this.apiService.getAllCountries().subscribe((data: any) => {\r\n      for (let i = 0; i < data.length; i++) {\r\n        if (data[i].authStatus === 'A') {\r\n          this.arrayCountry.push(data[i].countryName);\r\n        }\r\n      }\r\n    });\r\n  }\r\n  getStateName(country) {\r\n    this.arrayState = [];\r\n    this.apiService.getAllCountries().subscribe((data: any) => {\r\n      for (let i = 0; i < data.length; i++) {\r\n        if (data[i].countryName == country) {\r\n          this.apiService.getStateByCountryId(data[i].id).subscribe((resp: any) => {\r\n            for(let j = 0; j < resp.length; j++){\r\n              if(resp[i].authStatus == 'A'){\r\n                this.arrayState.push(resp[i].stateName)\r\n              }\r\n            }\r\n          })\r\n          break;\r\n        }\r\n      }\r\n    })\r\n  }\r\n  getCityName(state: any) {\r\n    this.apiService.getDropDownValues1(\"city\", state).subscribe((data) => {\r\n      this.arrayCity = data;\r\n    });\r\n  }\r\n  getResidenceDetails(key: string) {\r\n    this.apiService.getDropDownValues(key).subscribe((data) => {\r\n      this.arrayResidence = data;\r\n    });\r\n  }\r\n  getDoc() {\r\n    this.apiService.getDropDownValues(\"gender\").subscribe((responseDatas) => {\r\n      this.genderList = responseDatas;\r\n    });\r\n    this.apiService.getDropDownValues(\"prefix\").subscribe((re) => {\r\n      this.prefixList = re;\r\n    });\r\n    this.apiService.getDropDownValues(\"document_name\").subscribe((re) => {\r\n      this.idTypeList = re;\r\n    });\r\n    this.apiService.getDropDownValues(\"address_type\").subscribe((re) => {\r\n      this.addressTypeList = re;\r\n    });\r\n  }\r\n  _keyPress(event: any) {\r\n    const pattern = /[0-9]/;\r\n    let inputChar = String.fromCharCode(event.charCode);\r\n    if (!pattern.test(inputChar)) {\r\n      event.preventDefault();\r\n\r\n    }\r\n  }\r\n\r\n  letterOnly(event) {\r\n    var charCode = event.keyCode;\r\n    if ((charCode > 64 && charCode < 91) || (charCode > 96 && charCode < 123) || charCode == 8)\r\n      return true;\r\n    else\r\n      return false;\r\n  }\r\n  editDirector(index) {\r\n    this.panelOpenState = !this.panelOpenState;\r\n\r\n  }\r\n  updatedVal(e) {\r\n    if (e && e.length >= 3) {\r\n      this.showAutocomplete = true;\r\n    } else {\r\n      this.showAutocomplete = false;\r\n    }\r\n  }\r\n  selectCif(data) {\r\n    this.getStateName(data.userAddress[0].country);\r\n    this.getCityName(data.userAddress[0].state);\r\n    if(data.citizenship!=null){\r\n      this.onSelectionCitizionship(data.citizenship);\r\n    }\r\n    if(data.countryOfResidence!=null){\r\n      this.onSelectionResidance(data.countryOfResidence);\r\n    }\r\n    this.customerInfoList = data.customerInfoList;\r\n    this.cifNumberForPayload = data.cifNumber;\r\n    this.customerIdForPayload=data.customerId;\r\n    delete data.cifNumber;\r\n    this.autocomplete.closePanel();\r\n    this.directorUpdateForm.patchValue(data);\r\n    this.directorUpdateForm.get('existingCustomer').setValue(true);\r\n  //   if(data.custIdProofs[0].expiryDate < this.datepipe.transform(new Date(), 'yyyy-MM-dd')){\r\n  //     this.snack.open('Kindly Enter future Valid till Date', 'OK', {\r\n  //       duration: 4000,\r\n  //       verticalPosition: 'top',\r\n  //       horizontalPosition: 'right'\r\n  //     });    }\r\n  }\r\n  fetchByCif(cifNumber) {\r\n    console.log(cifNumber?.length);\r\n    if (cifNumber?.length == 0) {\r\n      this.autocomplete.closePanel();\r\n    }\r\n    this.directorUpdateForm.reset({\r\n      cifNumber: this.directorUpdateForm.get('cifNumber').value,\r\n      existingCustomer: this.directorUpdateForm.get('existingCustomer').value\r\n    });\r\n    this.showAutocomplete = false;\r\n    if (cifNumber) {\r\n      clearTimeout(this.timer)\r\n      this.timer = setTimeout(() => {\r\n        this.appApiService.fetchByCif(cifNumber).subscribe((res: any) => {\r\n          console.log(\"settimeout\")\r\n          console.log(\"res::\", res);\r\n          if (res) {\r\n            this.showAutocomplete = true;\r\n            this.customerInfoList = res.customerInfoList;\r\n          } \r\n          if (this.customerInfoList[0].citizenship != null) {\r\n            this.onSelectionCitizionship(this.customerInfoList[0].citizenship);\r\n          }\r\n          if (this.customerInfoList[0].countryOfResidence != null) {\r\n            this.onSelectionResidance(this.customerInfoList[0].countryOfResidence);\r\n          }\r\n          else if (res?.customerInfoList.length > 1) {\r\n            this.customerInfoList = res.customerInfoList;\r\n          }\r\n          else if (res?.customerInfoList.length == 0 || !res) {\r\n            this.snack.open('Kindly Enter Valid CifNumber to proceed', 'OK', {\r\n              duration: 4000,\r\n              verticalPosition: 'top',\r\n              horizontalPosition: 'right'\r\n            });\r\n\r\n          }\r\n        }, (err: any) => {\r\n          console.error(err);\r\n        })\r\n      }, 1000);\r\n    }\r\n  }\r\n  toggleChanges(event: any, formDirective: FormGroupDirective) {\r\n\r\n    console.log(event)\r\n    if (event === true) {\r\n      this.directorUpdateForm.get('cifNumber').enable();\r\n    }\r\n    else if (event === false) {\r\n      this.directorUpdateForm.get('cifNumber').disable();\r\n      this.customerId = null;\r\n    }\r\n  }\r\n  onSelectionResidance(data: any) {\r\n    console.log(data);\r\n\r\n    this.apiService.countryFlaglists(data).subscribe((value) => {\r\n      console.log(value.currencyCode);\r\n      this.Currency = value.currencyCode.toLowerCase();\r\n      console.log(this.Currency);\r\n    })\r\n\r\n  }\r\n  onSelectionCitizionship(data: any) {\r\n    console.log(data);\r\n    this.apiService.countryFlaglists(data).subscribe((value) => {\r\n      console.log(value.currencyCode);\r\n      this.currencyCode = value.currencyCode.toLowerCase();\r\n      console.log(this.currencyCode);\r\n    })\r\n  }\r\n  onChangeGender(event) {\r\n    let prefix = this.directorUpdateForm.value.prefix;\r\n    if ((prefix == \"Mr\" && event.value == \"Male\") || ((prefix == \"Ms\" || prefix == \"Mrs\") && event.value == \"Female\")) {\r\n      this.prefixFlag = true;\r\n    } else {\r\n      this.prefixFlag = false;\r\n      this.snack.open(\"Prefix and Gender does not match!\", \"OK\", {\r\n        duration: 4000,\r\n        verticalPosition: \"top\",\r\n        horizontalPosition: \"right\",\r\n      });\r\n    }\r\n  }\r\n  noOfDirector() {\r\n    let noOfDir = Number(this.directorUpdateForm.get('noOfDirector').value);\r\n    if (this.directors.length < noOfDir) {\r\n      for (let i = this.directors.length; i < noOfDir; i++) {\r\n        this.directors.push(this.addDirectors())\r\n        this.addAddress(i);\r\n        this.addIdProof(i);\r\n        this.addCustTaxInfo(i);\r\n      }\r\n    }\r\n    else if (noOfDir < this.directors.length) {\r\n      for (let i = this.directors.length - 1; i >= noOfDir ; i--) {\r\n        this.directors.removeAt(i);\r\n      }\r\n    }\r\n  }\r\n  omit_special_char(event) {\r\n    var k;\r\n    k = event.charCode;  //         k = event.keyCode;  (Both can be used)\r\n    return ((k > 64 && k < 91) || (k > 96 && k < 123) || k == 8 || k == 32 || (k >= 48 && k <= 57));\r\n  }\r\n  isAllSameDigit(event) {\r\n    let count = 0, number = event.target.value;\r\n    if (number != '') {\r\n      for (var i = 0; i < number.length; i++) {\r\n        if (0 == number[i]) {\r\n          count++;\r\n        }\r\n      }\r\n      if (count == number.length) {\r\n        this.isAllSameDigitVal = true;\r\n      }\r\n      else {\r\n        this.isAllSameDigitVal = false;\r\n      }\r\n    } else {\r\n      this.isAllSameDigitVal = false;\r\n    }\r\n  }\r\n  saveDirector(directorFormGroup, item) {\r\n    directorFormGroup.cifNumber = this.cifNumberForPayload;\r\n    directorFormGroup.customerId=this.customerIdForPayload;\r\n    directorFormGroup.corporateId=this.corporateId;\r\n    let coporateObjModel = {\r\n      \"corporateId\": this.corporateId,\r\n      \"customerInfo\": [\r\n        directorFormGroup\r\n      ]\r\n    }\r\n    if (this.noOfDir > 0) {\r\n      this.saveStatus = [];\r\n      for (let i = 0; i < this.noOfDir; i++) {\r\n        this.saveStatus.push(true);\r\n      }\r\n      this.corporateService.setfinishSave(this.saveStatus);\r\n    }\r\n    this.corporateService.saveOrUpdateCorporateAccountInfo(coporateObjModel)\r\n      .subscribe(data => {\r\n        if (data != null) {\r\n          if(data.customerInfo!=null && data.customerInfo[0].cifNumber!=null){\r\n              this.cifNumber = data.customerInfo[0].cifNumber;\r\n          }\r\n          this.snack.open(`Director ${this.item} profile created` + ' !', 'OK', {\r\n            duration: 4000,\r\n            verticalPosition: 'top',\r\n            horizontalPosition: 'right'\r\n          });\r\n          this.cdr.markForCheck();\r\n          if (this.noOfDir <= 1) {\r\n            this.dialogRef.close({\r\n              status:\"INITIATED\",\r\n              resp:this.data\r\n            })\r\n          }\r\n        } else {\r\n          this.snack.open('Not able to connect to server!', 'INTERNAL SERVER ERROR', {\r\n            duration: 4000,\r\n            verticalPosition: 'top',\r\n            horizontalPosition: 'right'\r\n          });\r\n        }\r\n      }, error => {\r\n        console.log('error resp :: ', error);\r\n        this.snack.open(`${error.error.message} `, 'OK', {\r\n          duration: 4000,\r\n          verticalPosition: 'top',\r\n          horizontalPosition: 'right'\r\n        });\r\n      });\r\n      this.isDirectorSaved=true;\r\n\r\n  }\r\n  onSubmit(){\r\n    this.dialogRef.close({\r\n      status:\"INITIATED\"\r\n    })\r\n  }\r\n  close() {\r\n    this.dialogRef.close({\r\n      status: 'UNDER_PROCESS'\r\n    })\r\n  }\r\n}\r\n","<div fxLayout=\"row\" fxLayoutAlign=\"end\">\r\n    <mat-icon class=\"closeIcon\" (click)=\"close()\">close</mat-icon>\r\n</div>\r\n<h1 mat-dialog-title>Director Details</h1>\r\n<mat-dialog-content>\r\n    <form [formGroup]=\"directorUpdateForm\">\r\n        <div fxLayout=\"row wrap\" class=\"full-width\">\r\n    <div fxFlex=\"100\" class=\"full-width\">\r\n        <mat-hint class=\"hintClass\">Number of Directors</mat-hint>\r\n        <mat-card fxFlex=\"33.33%\" fxFlex.xs=\"100%\" class=\"inputCard\">\r\n            <input formControlName=\"noOfDirector\" (keypress)=_keyPress($event) matInput id=\"forNoOfDirectors\"\r\n                placeholder=\"Enter no of directors\" (keyup)=\"noOfDirector()\">\r\n        </mat-card>\r\n        <!-- <mat-error *ngIf=\"directorUpdateForm.get('noOfDirectors').invalid\">No of Directors can't be 0</mat-error> -->\r\n    </div>\r\n        <h3 style=\"font-weight:600\" visible=\"true\">Details Of the Director</h3>\r\n    <div fxLayout=\"row wrap\" class=\"full-width\">\r\n        <mat-accordion class=\"custom-accordion\">\r\n            <div formArrayName=\"directors\">\r\n            <mat-card *ngFor=\"let director of directorUpdateForm.get('directors')['controls']; let i = index\" [item]=\"director\" [formGroupName] = \"i\">\r\n                <mat-expansion-panel class=\"mat-elevation-z0\" (opened)=\"openClose('OPEN')\" (closed)=\"openClose('CLOSE')\"\r\n                    [expanded]=\"panelOpenState\">\r\n                    <mat-expansion-panel-header>\r\n                        <mat-panel-title *ngIf=\"panelOpenState==true\">\r\n                            Create Director {{item}}\r\n                        </mat-panel-title>\r\n                        <mat-panel-title *ngIf=\"panelOpenState==false\">\r\n                            <mat-icon style=\"color: #24CCA7;\">check_circle</mat-icon> &nbsp; Director &nbsp; {{item}}.\r\n                        </mat-panel-title>\r\n                    </mat-expansion-panel-header>\r\n                    <div fxLayout=\"row wrap\" class=\"full-width\">\r\n                    <div fxLayout=\"row wrap\" style=\"margin-top: 20px;margin-left: 20px;\">\r\n                        <div fxFlex=\"100\">\r\n                           <div fxFlex=\"50\">\r\n                            <div fxFlex=\"80\">\r\n                                <span><b>Is the applicant an existing customer?</b></span>\r\n                            </div>\r\n                            <div fxFlex=\"20\">\r\n                                <mat-slide-toggle (change)=\"toggleChanges($event.checked,formDirective)\"\r\n                                    formControlName=\"existingCustomer\">\r\n                                </mat-slide-toggle>\r\n                            </div>\r\n                           </div>\r\n                            <div fxFlex=\"50\">\r\n                                <div fxFlex=\"80\">\r\n                                    <span><b>Is the applicant an primary customer?</b></span>\r\n                                </div>\r\n                                <div fxFlex=\"20\">\r\n    \r\n                                    <mat-slide-toggle formControlName=\"primaryCustomer\" [disabled]=\"disabledToggle\">\r\n                                    </mat-slide-toggle>\r\n                                </div>\r\n                            </div>\r\n                           \r\n                        </div>\r\n                    </div>\r\n                    <br/>\r\n                    <div fxLayout=\"row wrap\">\r\n                        <div fxFlex=\"33.33%\" fxFlex.xs=\"100%\" class=\"full-width\">\r\n                            <mat-hint class=\"hintClass\">CIF Number</mat-hint>\r\n                            <mat-card *ngIf=\"director.get('existingCustomer').value != true\"\r\n                                class=\"inputCard\">\r\n                                <input matInput formControlName=\"cifNumber\" (keypress)=\"_keyPress($event)\"\r\n                                    id=\"forCifNumber\">\r\n                            </mat-card>\r\n                            <mat-card *ngIf=\"director.get('existingCustomer').value == true\"\r\n                                class=\"inputCard\">\r\n                                <input matInput #input formControlName=\"cifNumber\" id=\"forCifNumber\"\r\n                                    (keyup)=\"ngAfterViewInit($event.target.value)\" [matAutocomplete]=\"auto\"\r\n                                    (ngModelChange)=\"updatedVal($event)\">\r\n                                <mat-autocomplete style=\"background-color: black;\" #auto=\"matAutocomplete\">\r\n                                    <mat-option *ngFor=\"let option of customerInfoList\" [value]=\"option?.cifNumber\"\r\n                                        (click)=\"selectCif(option)\">\r\n                                        <div fxLayout=\"row wrap\" style=\"margin-top: 20px;\">\r\n                                            <div fxFlex=\" 100\">\r\n                                                <div mat-card-avatar *ngIf=\"option?.profileImage =='not_available'\"\r\n                                                    class=\"example-header-image-dropdown\" fxFlex=\"10\">\r\n                                                    <h3 align=\"center\" style=\"margin-top: 5px;font-size: large;\">\r\n                                                        {{option?.firstName | slice:0:1 | uppercase}}\r\n                                                    </h3>\r\n                                                </div>\r\n                                                <div *ngIf=\"option?.profileImage !='not_available'\" mat-card-avatar\r\n                                                    fxFlex=\"10\">\r\n                                                    <img matListAvatar\r\n                                                        style=\"border-radius: 50%;height: 85%;margin-right: 20px;width: 90%;margin-bottom: 50px;\"\r\n                                                        align=\"center\" [src]=\"option?.profileImage\" alt=\"...\">\r\n                                                </div>\r\n                                                <div fxFlex=\"80\">\r\n                                                    <h5 style=\"margin-bottom: 0px;\">\r\n                                                        {{option?.firstName | uppercase}}\r\n                                                        {{option?.middleName | uppercase}}\r\n                                                        {{option?.lastName | uppercase}}</h5>\r\n                                                    <h6 style=\"margin-top: 0px;\">#{{option?.cifNumber}}</h6>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    </mat-option>\r\n                                </mat-autocomplete>\r\n                            </mat-card>\r\n                            <mat-error\r\n                                *ngIf=\"director.get('cifNumber').touched && !director.get('cifNumber').valid  && director.get('existingCustomer').value == true\">\r\n                                <small>CIF Number is Required!</small>\r\n                            </mat-error>\r\n                        </div>\r\n                        <div fxFlex=\"33.33%\" fxFlex.xs=\"100%\" class=\"full-width\">\r\n                            <mat-hint class=\"hintClass\">Prefix*</mat-hint>\r\n                            <mat-card class=\"inputCard\">\r\n                                <mat-select formControlName=\"prefix\" required>\r\n                                    <mat-option disabled>select---</mat-option>\r\n                                    <mat-option *ngFor=\"let prfix of prefixList\" [value]=\"prfix\">\r\n                                        {{prfix}}\r\n                                    </mat-option>\r\n                                </mat-select>\r\n                            </mat-card>\r\n                            <mat-error\r\n                                *ngIf=\"director.get('prefix').touched && !director.get('prefix').valid\">\r\n                                <small>Please Select Prefix!</small>\r\n                            </mat-error>\r\n                        </div>\r\n                        <div fxFlex=\"33.33%\" fxFlex.xs=\"100%\" class=\"full-width\">\r\n                            <mat-hint class=\"hintClass\">First Name*</mat-hint>\r\n                            <mat-card class=\"inputCard\">\r\n                                <input matInput formControlName=\"firstName\" id=\"forFirstName\" required\r\n                                    placeholder=\"First Name\" (keypress)=\"letterOnly($event)\">\r\n                            </mat-card>\r\n                            <mat-error\r\n                                *ngIf=\"director.get('firstName').touched && !director.get('firstName').valid\">\r\n                                <small>First Name is Required!</small>\r\n                            </mat-error>\r\n                        </div>\r\n                        <div fxFlex=\"33.33%\" fxFlex.xs=\"100%\" class=\"full-width\">\r\n                            <mat-hint class=\"hintClass\">Middle Name</mat-hint>\r\n                            <mat-card class=\"inputCard\">\r\n                                <input matInput formControlName=\"middleName\" id=\"forMiddleName\"\r\n                                    placeholder=\"Middle Name\" (keypress)=\"letterOnly($event)\">\r\n                            </mat-card>\r\n                        </div>\r\n                        <div fxFlex=\"33.33%\" fxFlex.xs=\"100%\" class=\"full-width\">\r\n                            <mat-hint class=\"hintClass\">Last Name*</mat-hint>\r\n                            <mat-card class=\"inputCard\">\r\n                                <input matInput formControlName=\"lastName\" id=\"forLastName\" required\r\n                                    placeholder=\"Last Name\" (keypress)=\"letterOnly($event)\">\r\n                            </mat-card>\r\n                            <mat-error\r\n                                *ngIf=\"director.get('lastName').touched && !director.get('lastName').valid\">\r\n                                <small>Last Name is Required!</small>\r\n                            </mat-error>\r\n                        </div>\r\n                        <div fxFlex=\"33.33%\" fxFlex.xs=\"100%\" class=\"full-width\">\r\n                            <mat-hint class=\"hintClass\">Gender*</mat-hint>\r\n                            <mat-card class=\"inputCard\">\r\n                                <mat-select formControlName=\"gender\" id=\"forGender\" required\r\n                                    (selectionChange)=\"onChangeGender($event)\">\r\n                                    <mat-option disabled>select---</mat-option>\r\n                                    <mat-option *ngFor=\"let gender of genderList\" [value]=\"gender\">\r\n                                        {{gender}}\r\n                                    </mat-option>\r\n                                </mat-select>\r\n                            </mat-card>\r\n                            <mat-error\r\n                                *ngIf=\"director.get('gender').touched && !director.get('gender').valid\">\r\n                                <small>Please Select Gender!</small>\r\n                            </mat-error>\r\n                            <mat-error *ngIf=\"prefixFlag\">\r\n                                &nbsp; Prefix and Gender does not match!\r\n                            </mat-error>\r\n                        </div>\r\n                        <div fxFlex=\"33.33%\" fxFlex.xs=\"100%\" class=\"full-width\">\r\n                            <mat-hint class=\"hintClass\">Date Of Birth*</mat-hint>\r\n                            <mat-card class=\"inputCard\">\r\n                                <input fxFlex=\"80\" matInput formControlName=\"dateOfBirth\" [matDatepicker]=\"picker\" [max]=\"maxDate\"\r\n                                    required readonly>\r\n                                    <div fxFlex=\"20\">\r\n                                        <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n                                    </div>\r\n                                <mat-datepicker #picker></mat-datepicker>\r\n                            </mat-card>\r\n                            <mat-error\r\n                                *ngIf=\"director.get('dateOfBirth').touched && !director.get('dateOfBirth').valid\">\r\n                                <small>Date Of Birth is Required!</small>\r\n                            </mat-error>\r\n                        </div>\r\n                        <div fxFlex=\"33.33%\" fxFlex.xs=\"100%\" class=\"full-width\">\r\n                            <mat-hint class=\"hintClass\">Place Of Birth </mat-hint>\r\n                            <mat-card class=\"inputCard\">\r\n                                <input matInput formControlName=\"placeOfBirth\" id=\"forplaceOfBirth\" required\r\n                                    (keypress.space)=\"letterOnly($event)\">\r\n                            </mat-card>\r\n                            <mat-error\r\n                                *ngIf=\"director.get('placeOfBirth').touched && !director.get('placeOfBirth').valid\">\r\n                                <small>Place Of Birth is Required!!</small>\r\n                            </mat-error>\r\n                        </div>\r\n                        <div fxFlex=\"33.33%\" fxFlex.xs=\"100%\" class=\"full-width\">\r\n                            <mat-hint class=\"hintClass\">Residence Type*</mat-hint>\r\n                            <mat-card class=\"inputCard\">\r\n                                <mat-select formControlName=\"residenceStatus\" id=\"forResidenceStatus\" required>\r\n                                    <mat-option disabled>select---</mat-option>\r\n                                    <mat-option *ngFor=\"let recidence of arrayResidence\" [value]=\"recidence\">\r\n                                        {{recidence}}\r\n                                    </mat-option>\r\n                                </mat-select>\r\n                            </mat-card>\r\n                            <mat-error\r\n                                *ngIf=\"director.get('residenceStatus').touched && !director.get('residenceStatus').valid\">\r\n                                <small>Please Select Residence Type!</small>\r\n                            </mat-error>\r\n                        </div>\r\n                        <div fxFlex=\"33.33%\" fxFlex.xs=\"100%\" class=\"full-width\">\r\n                            <mat-hint class=\"hintClass\">Citizenship By*</mat-hint>\r\n                            <mat-card class=\"inputCard\">\r\n                                <mat-select formControlName=\"citizenship\" id=\"forcitizenship\"\r\n                                    (selectionChange)=\"onSelectionCitizionship($event.value)\" required>\r\n                                    <mat-option disabled>--Select--</mat-option>\r\n                                    <mat-option *ngFor=\"let citizenship of arrayCountry\" [value]=\"citizenship\">\r\n                                        {{citizenship}}\r\n                                    </mat-option>\r\n                                </mat-select>\r\n                            </mat-card>\r\n                            <mat-error\r\n                                *ngIf=\"director.get('citizenship').touched && !director.get('citizenship').valid\">\r\n                                <small>Please Select Citizenship By!</small>\r\n                            </mat-error>\r\n                        </div>\r\n                        <div fxFlex=\"33.33%\" fxFlex.xs=\"100%\" class=\"full-width\">\r\n                            <mat-hint class=\"hintClass\">Country Of Residence*</mat-hint>\r\n                            <mat-card class=\"inputCard\">\r\n                                <mat-select formControlName=\"countryOfResidence\" id=\"forcountryOfResidence\"\r\n                                    (selectionChange)=\"onSelectionResidance($event.value)\" required>\r\n                                    <mat-option disabled>--Select--</mat-option>\r\n                                    <mat-option *ngFor=\"let countryOfResidence of arrayCountry\"\r\n                                        [value]=\"countryOfResidence\">\r\n                                        {{countryOfResidence}}\r\n                                    </mat-option>\r\n                                </mat-select>\r\n                            </mat-card>\r\n                            <mat-error\r\n                                *ngIf=\"director.get('countryOfResidence').touched && !director.get('countryOfResidence').valid\">\r\n                                <small>Please Select Country Of Residence</small>\r\n                            </mat-error>\r\n                        </div>\r\n                    </div>\r\n                    <div formArrayName=\"custIdProofs\">\r\n                        <div *ngFor=\"let item of director.get('custIdProofs')['controls']; let i = index;\"\r\n                            [formGroupName]=\"i\" fxFlex=\"100%\">\r\n                            <div fxLayout=\"row wrap\">\r\n                                <div fxFlex=\"33.33%\" fxFlex.xs=\"100%\" class=\"full-width\">\r\n                                    <mat-hint class=\"hintClass\">Id Type</mat-hint>\r\n                                    <mat-card class=\"inputCard\">\r\n                                        <mat-select formControlName=\"idType\" id=\"forIdType\" required>\r\n                                            <mat-option disabled>select---</mat-option>\r\n                                            <mat-option *ngFor=\"let idType of idTypeList\" [value]=\"idType\">\r\n                                                {{idType}}\r\n                                            </mat-option>\r\n                                        </mat-select>\r\n                                    </mat-card>\r\n                                    <mat-error *ngIf=\"item.get('idType').touched && !item.get('idType').valid\">\r\n                                        <small>Please Select ID Type!</small>\r\n                                    </mat-error>\r\n                                </div>\r\n                                <div fxFlex=\"33.33%\" fxFlex.xs=\"100%\" class=\"full-width\">\r\n                                    <mat-hint class=\"hintClass\">ID Number</mat-hint>\r\n                                    <mat-card class=\"inputCard\">\r\n                                        <input matInput formControlName=\"idNumber\" (keypress)=\"_keyPress($event)\"\r\n                                            id=\"foridNumber\" maxlength=\"15\" minLength=\"11\" required>\r\n                                    </mat-card>\r\n                                    <mat-error *ngIf=\"item.get('idNumber').touched && !item.get('idNumber').valid\">\r\n                                        <small>Unique Id Number is Required</small>\r\n                                    </mat-error>\r\n                                </div>\r\n                                <div fxFlex=\"33.33%\" fxFlex.xs=\"100%\" class=\"full-width\"\r\n                                    *ngIf=\"item.get('idType').value == 'Passport' || item.get('idType').value == 'DL'\">\r\n                                    <mat-hint class=\"hintClass\"></mat-hint>\r\n                                    <mat-card class=\"inputCard\">\r\n                                        <input matInput formControlName=\"expiryDate\" id=\"forIdexpiryDate\"\r\n                                            [min]=\"minDate\" [matDatepicker]=\"expiryDate\" readonly required>\r\n                                        <mat-datepicker-toggle matSuffix [for]=\"expiryDate\"></mat-datepicker-toggle>\r\n                                        <mat-datepicker #expiryDate></mat-datepicker>\r\n                                    </mat-card>\r\n                                    <mat-error *ngIf=\"item.get('expiryDate').touched && !item.get('expiryDate').valid\">\r\n                                        <small>Please Select Valid Till!</small>\r\n                                    </mat-error>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <br/>\r\n                    <div formArrayName=\"userAddress\">\r\n                        <div *ngFor=\"let item of director.get('userAddress')['controls']; let i = index;\"\r\n                            [formGroupName]=\"i\">\r\n                                <legend visible=\"true\">Communication Address</legend>\r\n                                <hr/>\r\n                                <div fxLayout=\"row wrap\">\r\n                                <div fxFlex=\"33.33%\" fxFlex.xs=\"100%\" class=\"full-width\">\r\n                                    <mat-hint class=\"hintClass\">Address Line 1*</mat-hint>\r\n                                    <mat-card class=\"inputCard\">\r\n                                        <input matInput id=\"foraddress1\" formControlName=\"address1\" required>\r\n                                    </mat-card>\r\n                                    <mat-error *ngIf=\"(item.get('address1').touched && !item.get('address1').valid) || (item.get('address1').touched && item.get('address1').hasError('pattern'))\">\r\n                                        <small>Please Enter Valid Address Line 1</small>\r\n                                    </mat-error>\r\n                                </div>\r\n                                <div fxFlex=\"33.33%\" fxFlex.xs=\"100%\" class=\"full-width\">\r\n                                    <mat-hint class=\"hintClass\">Address Line 2*</mat-hint>\r\n                                    <mat-card class=\"inputCard\">\r\n                                        <input matInput id=\"foraddress2\" formControlName=\"address2\" required>\r\n                                    </mat-card>\r\n                                    <mat-error *ngIf=\"(item.get('address2').touched && !item.get('address2').valid) || (item.get('address2').touched && item.get('address2').hasError('pattern'))\">\r\n                                        <small>Please Enter Valid Address Line 2</small>\r\n                                    </mat-error>\r\n                                </div>\r\n                                <div fxFlex=\"33.33%\" fxFlex.xs=\"100%\" class=\"full-width\">\r\n                                    <mat-hint class=\"hintClass\">Country*</mat-hint>\r\n                                    <mat-card class=\"inputCard\">\r\n                                        <mat-select id=\"forcountry\" formControlName=\"country\"\r\n                                            (selectionChange)=\"getStateName($event.value)\" required>\r\n                                            <mat-option disabled>select---</mat-option>\r\n                                            <mat-option *ngFor=\"let country of arrayCountry\" [value]=\"country\">\r\n                                                {{country}}\r\n                                            </mat-option>\r\n                                        </mat-select>\r\n                                    </mat-card>\r\n                                    <mat-error *ngIf=\"item.get('country').touched && !item.get('country').valid\">\r\n                                        <small>Please select country</small>\r\n                                    </mat-error>\r\n                                </div>\r\n                                <div fxFlex=\"33.33%\" fxFlex.xs=\"100%\" class=\"full-width\">\r\n                                    <mat-hint class=\"hintClass\">State*</mat-hint>\r\n                                    <mat-card class=\"inputCard\">\r\n                                        <mat-select id=\"forstate\" formControlName=\"state\"\r\n                                            (selectionChange)=\"getCityName($event.value)\" required>\r\n                                            <mat-option disabled>select---</mat-option>\r\n                                            <mat-option *ngFor=\"let state of arrayState\" [value]=\"state.stateName\">\r\n                                                {{state.stateName}}\r\n                                            </mat-option>\r\n                                        </mat-select>\r\n                                    </mat-card>\r\n                                    <mat-error *ngIf=\"item.get('state').touched && !item.get('state').valid\">\r\n                                        <small>Please select state</small>\r\n                                    </mat-error>\r\n                                </div>\r\n                                <div fxFlex=\"33.33%\" fxFlex.xs=\"100%\" class=\"full-width\">\r\n                                    <mat-hint class=\"hintClass\">City*</mat-hint>\r\n                                    <mat-card class=\"inputCard\">\r\n                                        <mat-select id=\"forCity\" formControlName=\"city\" required>\r\n                                            <mat-option disabled>select---</mat-option>\r\n                                            <mat-option *ngFor=\"let City of arrayCity\" [value]=\"City.value1\">\r\n                                                {{City.value1}}\r\n                                            </mat-option>\r\n                                        </mat-select>\r\n                                    </mat-card>\r\n                                    <mat-error *ngIf=\"item.get('city').touched && !item.get('city').valid\">\r\n                                        <small>Please select city</small>\r\n                                    </mat-error>\r\n                                </div>\r\n                                <div fxFlex=\"33.33%\" fxFlex.xs=\"100%\" class=\"full-width\">\r\n                                    <mat-hint class=\"hintClass\">Zip Code*</mat-hint>\r\n                                    <mat-card class=\"inputCard\">\r\n                                        <input matInput formControlName=\"zipCode\" id=\"forZipCode\" onlyNumber\r\n                                            maxlength=\"10\" minLength=\"5\" (keypress)=\"_keyPress($event)\"\r\n                                            (keyup)=\"isAllSameDigit($event)\" required>\r\n                                    </mat-card>\r\n                                    <mat-error\r\n                                        *ngIf=\"item.get('zipCode').touched && item.get('zipCode').hasError('required') \">\r\n                                        <small>Please enter Zip Code!(5-10 digits)</small>\r\n                                    </mat-error>\r\n                                    <mat-error *ngIf=\"isAllSameDigitVal || item.get('zipCode').hasError('pattern') \">\r\n                                        <small>Please enter valid Zip Code!(5-10 digits)</small>\r\n                                    </mat-error>\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <br />\r\n                    <div>\r\n                    <legend visible=\"true\">Contact Information</legend>\r\n                    <hr/> \r\n                    <div fxFlex=\"row wrap\" fxFlex=\"100\">\r\n                        <div fxFlex=\"33.33%\" fxFlex.xs=\"100%\" class=\"full-width\">\r\n                            <mat-hint class=\"hintClass\">Mobile Number*</mat-hint>\r\n                            <mat-card class=\"inputCard\">\r\n                                <input matInput formControlName=\"phoneNumber\" id=\"forPhoneNumber\" maxLength=\"10\"\r\n                                    minLength=\"10\" (keypress)=\"_keyPress($event)\" onlyNumber required>\r\n                            </mat-card>\r\n                            <mat-error *ngIf=\"director.get('phoneNumber').touched && !director.get('phoneNumber').valid\r\n\t\t\t\t\t\t\t\t\t&& !director.controls['phoneNumber'].hasError('minLength')\">\r\n                                <small>Enter Mobile Number(Maximum 10 digits)!</small>\r\n                            </mat-error>\r\n                            <mat-error *ngIf=\"director.controls['phoneNumber'].value == '0000000000'\">\r\n                                <small>\r\n                                    &nbsp; &nbsp; Please Enter Correct Mobile Number\r\n                                </small>\r\n                            </mat-error>\r\n                        </div>\r\n                        <div fxFlex=\"33.33%\" fxFlex.xs=\"100%\" class=\"full-width\">\r\n                            <mat-hint class=\"hintClass\">Landline Number*</mat-hint>\r\n                            <mat-card class=\"inputCard\">\r\n                                <input matInput formControlName=\"landlineNumber\" (keypress)=\"_keyPress($event)\"\r\n                                    maxLength=\"10\" minLength=\"10\" onlyNumber id=\"forlandlineNumber\" required>\r\n                            </mat-card>\r\n                            <mat-error *ngIf=\"director.controls['landlineNumber'].value == '0000000000'\">\r\n                                <small>\r\n                                    &nbsp; &nbsp; Please Enter Correct Landline Number</small>\r\n                            </mat-error>\r\n                        </div>\r\n                        <div fxFlex=\"33.33%\" fxFlex.xs=\"100%\" class=\"full-width\">\r\n                            <mat-hint class=\"hintClass\">Email*</mat-hint>\r\n                            <mat-card class=\"inputCard\">\r\n                                <input matInput formControlName=\"primaryEmailAdress\" type=\"email\"\r\n                                    pattern=\"^[^\\s@]+@[^\\s@]+\\.[^\\s@]{2,}$\" id=\"forprimaryEmailAdress\" required>\r\n                            </mat-card>\r\n                        </div>\r\n                    </div>\r\n                    </div>\r\n                    <br/>\r\n                    <div formArrayName=\"custTaxInfo\">\r\n                        <div *ngFor=\"let item of director.get('custTaxInfo')['controls']; let i = index;\"\r\n                            [formGroupName]=\"i\" fxFlex=\"row wrap\" class=\"full-width\">\r\n                                <legend visible=\"true\">Additional Tax ID Details</legend>\r\n                                <hr />\r\n                                <div fxFlex=\"row wrap\">\r\n                                <div fxFlex=\"33.33%\" fxFlex.xs=\"100%\" class=\"full-width\">\r\n                                    <mat-hint class=\"hintClass\">Tax ID*</mat-hint>\r\n                                    <mat-card class=\"inputCard\">\r\n                                        <input matInput (keypress)=\"omit_special_char($event)\" onlyNumber\r\n                                            formControlName=\"taxId\" id=\"forTaxId\" maxlength=\"10\" required>\r\n                                    </mat-card>\r\n                                    <mat-error *ngIf=\"item.get('taxId').touched && !item.get('taxId').valid\">\r\n                                        <small>Tax Id is Required with only numbers!</small>\r\n                                    </mat-error>\r\n                                </div>\r\n                                <div fxFlex=\"33.33%\" fxFlex.xs=\"100%\" class=\"full-width\">\r\n                                    <mat-hint class=\"hintClass\">Country Of Issue*</mat-hint>\r\n                                    <mat-card class=\"inputCard\">\r\n                                        <mat-select formControlName=\"countryOfIssue\" id=\"forCountryOfIssue\" required>\r\n                                            <mat-option disabled>select---</mat-option>\r\n                                            <mat-option *ngFor=\"let countryOfIssue of arrayCountry\"\r\n                                                [value]=\"countryOfIssue\">\r\n                                                {{countryOfIssue}}\r\n                                            </mat-option>\r\n                                        </mat-select>\r\n                                    </mat-card>\r\n                                    <mat-error\r\n                                        *ngIf=\"item.get('countryOfIssue').touched && !item.get('countryOfIssue').valid\">\r\n                                        <small>Please Select Country Of Issue!</small>\r\n                                    </mat-error>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div fxLayout=\"row wrap\">\r\n                        <div fxFlex=\"100\" style=\"margin-left: 13px\">\r\n                            <div fxFlex=\"20\" class=\"form-group\">\r\n                                <button mat-raised-button color=\"primary\"\r\n                                    [disabled]=\"director.invalid || !prefixFlag\"\r\n                                    (click)=\"saveDirector(director.value,item);openClose('CLOSE')\"\r\n                                    style=\"background-color: rgb(77, 114, 248);\">\r\n                                    <mat-icon>add</mat-icon> ADD DIRECTOR\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        </div>\r\n                        </div>\r\n                </mat-expansion-panel>\r\n            </mat-card>\r\n</div>\r\n        </mat-accordion>\r\n    </div>\r\n    </div>\r\n</form>\r\n</mat-dialog-content>\r\n<div fxLayout=\"row\" fxLayoutAlign=\"end\" fxLayoutGap=\"20px\">\r\n    <button type=\"button\" class=\"editbtn\" mat-raised-button [disabled]=\"directorUpdateForm.invalid || !isDirectorSaved\"\r\n        (click)=\"onSubmit()\">Save</button>\r\n    &nbsp;&nbsp;&nbsp;\r\n    <button type=\"button\" class=\"cancelbtn\" (click)=\"close()\">\r\n        Cancel\r\n    </button>\r\n</div>","\r\n\r\n<div >\r\n  <mat-dialog-content>\r\n    <div fxLayout=\"row\" class=\"contain\">\r\n      <mat-icon style=\"padding-left: 100%;\"class=\"backIcon\" (click)=\"goToClose()\">close</mat-icon>\r\n  </div>\r\n    <h1>Loan Asset Details</h1>\r\n    <form class=\"mt-32\" [formGroup]=\"loanAssetForm\">\r\n      <div fxLayout=\"row wrap\" fxLayout.lt-sm=\"column\" >\r\n        <div fxFlex=\"33.33\" class=\"pr-16\">\r\n          <mat-label>Asset Status </mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n           <mat-select name=\"mod\" formControlName=\"assetStatus\">\r\n            <mat-option value=\"\">Select</mat-option>\r\n            <mat-option value=\"Under Construction\">Under Construction</mat-option>\r\n            <mat-option value=\"Completed Construction\">Completed Construction</mat-option>\r\n          </mat-select>\r\n          </mat-form-field>\r\n        </div>\r\n  \r\n        <div fxFlex=\"33.33\" class=\"pr-16\">\r\n          <mat-label>Building </mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input matInput name=\"building\" formControlName=\"building\"  \r\n            />\r\n          </mat-form-field>\r\n        </div>\r\n  \r\n        <div fxFlex=\"33.33\" class=\"pr-16\">\r\n          <mat-label>Mortgaged Branch</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <mat-select name=\"mortgagedBranch\" formControlName = \"mortgagedBranch\">\r\n              <mat-option value=\"\">Select</mat-option>\r\n              <mat-option value=\"test\">test</mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n  \r\n      <div fxLayout=\"row wrap\">\r\n        <div fxFlex=\"33.33\" class=\"pr-16\">\r\n          <mat-label>Country</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <mat-select name=\"country\" formControlName=\"country\" (selectionChange)=\"getStateName($event.value)\">\r\n              <mat-option value=\"\">Select</mat-option>\r\n              <mat-option *ngFor=\"let country of arrayCountry\" [value]=\"country\">\r\n                {{country}}\r\n              </mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n        </div>\r\n        <div fxFlex=\"33.33\" class=\"pr-16\">\r\n          <mat-label>State</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <mat-select name=\"mod\" formControlName=\"state\" (selectionChange)=\"getCityName($event.value)\">\r\n              <mat-option value=\"\">Select</mat-option>\r\n              <mat-option *ngFor=\"let state of arrayState\" [value]=\"state.value1\">\r\n                {{state.value1}}</mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n        </div>\r\n        <div fxFlex=\"33.33\" class=\"pr-16\">\r\n          <mat-label>City</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <mat-select name=\"city\" formControlName=\"city\">\r\n              <mat-option value=\"\">Select</mat-option>\r\n              <mat-option *ngFor=\"let city of arrayCity\" [value]=\"city.value1\">{{city.value1}}</mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n      <div fxLayout=\"row wrap\">\r\n        <div fxFlex=\"33.33\" class=\"pr-16\">\r\n          <mat-label>Dimensions</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <mat-select name=\"dimensions\" formControlName=\"dimensions\">\r\n              <mat-option value=\"\">Select</mat-option>\r\n              <mat-option value=\"Sq.Ft\">Sq.Ft</mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n        </div>\r\n        <div fxFlex=\"33.33\" class=\"pr-16\">\r\n          <mat-label>Home Type</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <mat-select name=\"mod\" formControlName=\"homeType\">\r\n              <mat-option value=\"\">Select</mat-option>\r\n              <mat-option value=\"Villa\">Villa</mat-option>\r\n              <mat-option value=\"Flat\">Flat</mat-option>\r\n              <mat-option value=\"Apartment\">Apartment</mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n        </div>\r\n        <div fxFlex=\"33.33\" class=\"pr-16\">\r\n          <mat-label>Locality</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input matInput name=\"locality\" formControlName=\"locality\"  \r\n             />\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n\r\n      <div fxLayout=\"row wrap\">\r\n         <div fxFlex=\"33.33\" class=\"pr-16\">\r\n          <mat-label>Street</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input matInput name=\"street\" formControlName=\"street\"  \r\n            />\r\n          </mat-form-field>\r\n        </div>\r\n        <div fxFlex=\"33.33\" class=\"pr-16\">\r\n          <mat-label>Market Value</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input matInput name=\"marketValue\" formControlName=\"marketValue\"  \r\n            (keypress)=\"_keyPress($event)\" />\r\n          </mat-form-field>\r\n        </div>\r\n        <div fxFlex=\"33.33\" class=\"pr-16\">\r\n          <mat-label>Zip Code</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input matInput name=\"amt\" formControlName=\"zipCode\"  \r\n            (keypress)=\"_keyPress($event)\" />\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n     \r\n    </form>\r\n  </mat-dialog-content>\r\n  <mat-dialog-actions align=\"end\">\r\n    <button mat-button (click)=\"submitForm1()\">\r\n      Update\r\n    </button>\r\n    <button mat-button (click)=\"goToClose()\">Close</button>\r\n  </mat-dialog-actions>\r\n  </div>\r\n\r\n\r\n\r\n\r\n\r\n  ","import { Component, OnInit, Input, Inject, ChangeDetectorRef,  } from '@angular/core';\r\nimport { Form, FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { Router } from '@angular/router';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { DataService } from 'app/shared/services/data.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { TasksummaryService } from '../../tasksummary.service';\r\n\r\n@Component({\r\n  selector: 'app-loan-account-details-edit',\r\n  templateUrl: './loan-account-details-edit.component.html',\r\n  styleUrls: ['./loan-account-details-edit.component.scss']\r\n})\r\nexport class LoanAccountDetailsEditComponent implements OnInit {\r\n  loanDetailsUpdateForm: FormGroup;\r\n  isEdit:boolean=false;\r\n  resultOfScreen: string[];\r\n  screenArray: any;\r\n  screenArrayData: any;\r\n  productName: any;\r\n  arrayAccountBranch: any;\r\n  entityName: string;\r\n  accountType: any;\r\n  accountDetails: any;\r\n  businessProductName: any;\r\n  accountBranch: any;\r\n  applicationDate: any;\r\n  estimatedCost: any;\r\n  customerContribution: any;\r\n  minDate = new Date();\r\n  maxDate = new Date();\r\n  loanAmount: any;\r\n  purposeOfLoan: any;\r\n   branchName: any;\r\n  currencyData: any;\r\n  showEditOption: boolean = false;\r\n  loanaccountID: any;\r\n  @Input() public loanDetailsInfo: any;\r\n  appEntrySummaryView: boolean = false;\r\n  loanInfo: any;\r\n\r\n  loanAssetForm: FormGroup;\r\n  arrayCountry: any[] = [];\r\n  arrayState: any[] = [];\r\n  arrayCity: any[] = [];\r\n // entityName: string;\r\n  assetDetails: any\r\n  loanAccountId: any;\r\n  statusArr: any = ['BACKLOG', 'ONGOING', 'APPROVED', 'REJECTED']\r\n  arr: any = ['BACKLOG', 'ONGOINGArr', 'APPROVEDArr', 'REJECTEDArr']\r\n  BACKLOGArr: any = [];\r\n  ONGOINGArr: any = [];\r\n  REJECTEDArr: any = [];\r\n  APPROVEDArr: any = [];\r\n  \r\n  BACKLOGTotalPages: number = 0\r\n  ONGOINGTotalPages: number = 0\r\n  REJECTEDTotalPages: number = 0\r\n  APPROVEDTotalPages: number = 0\r\n\r\n  BACKLOGCount: number = 0\r\n  ONGOINGCount: number = 0\r\n  REJECTEDCount: number = 0\r\n  APPROVEDCount: number = 0\r\n\r\n  BACKLOGImage: any[] = [];\r\n  ONGOINGImage: any[] = [];\r\n  REJECTEDImage: any[] = [];\r\n  APPROVEDImage: any[] = [];\r\n\r\n  BACKLOGTotalRecords: number = 0;\r\n  ONGOINGTotalRecords: number = 0;\r\n  REJECTEDTotalRecords: number = 0;\r\n  APPROVEDTotalRecords: number = 0;\r\n\r\n  BACKLOGPage: number = 0;\r\n  ONGOINGPage: number = 0;\r\n  REJECTEDPage: number = 0;\r\n  APPROVEDPage: number = 0;\r\n\r\n  \r\n  constructor(private router: Router,   @Inject(MAT_DIALOG_DATA) public data: any, private snack: MatSnackBar,\r\n    private dataService: DataService, private ls: LocalStoreService, private fb:FormBuilder,private taskSumService: TasksummaryService,\r\n    private apiService: ApiService, public dialogRef: MatDialogRef<LoanAccountDetailsEditComponent>,\r\n    private cdr: ChangeDetectorRef) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.loanaccountID = this.data.loanAccountId;\r\n    console.log(this.loanaccountID);\r\n  \r\n    console.log(\"this.loanaccountID\", this.loanaccountID);\r\n\r\n //   this.getAssetDetails();\r\n    this.buildAssetForm(this.data);\r\n    this.getCountryName(\"country\");\r\n    this.getStateName(\"state\");\r\n    this.getCityName(\"city\");\r\n\r\n  }\r\n\r\n  _keyPress(event: any) {\r\n    // console.log(\"key\",event);\r\n    const pattern = /[0-9]/;\r\n    let inputChar = String.fromCharCode(event.charCode);\r\n    console.log(\"inputChar\",inputChar);\r\n    inputChar=inputChar.toString();\r\n    console.log(\"inputChar1\",inputChar);\r\n    inputChar=inputChar\r\n    if (!pattern.test(inputChar)) {\r\n        event.preventDefault();\r\n    }\r\n   }\r\n\r\n  getAssetDetails(){\r\n    //this.loader.open();\r\n    //this.apiService.getAssetValuation(this.loacnAccountId).subscribe((accountDetails) => {\r\n    this.apiService.getAssetails(this.loanaccountID).subscribe((assetDetails) => {\r\n   //   this.loader.close();\r\n      this.assetDetails = assetDetails;\r\n      this.buildAssetForm(this.assetDetails);\r\n      this.getStateName(this.assetDetails.country);\r\n      this.getCityName(this.assetDetails.state);\r\n      console.log(this.assetDetails);\r\n \r\n    }, (err: any) => {\r\n   //   this.loader.close();\r\n    });\r\n  \r\n    \r\n  }\r\n\r\n\r\n  submitForm1(){\r\n    \r\n  \r\n\r\n    let payload={\r\n      // loanAccountId: this.showEditOption ? this.loanaccountID : null,\r\n      loanAccountId: this.data.loanAccountId,\r\n      country:this.loanAssetForm.value.country,\r\n      state:this.loanAssetForm.value.state,\r\n      city: this.loanAssetForm.value.city,\r\n      assetStatus:this.loanAssetForm.value.assetStatus,\r\n      estimatedCost: this.loanAssetForm.value.estimatedCost,\r\n      dimensions: this.loanAssetForm.value.dimensions,\r\n      street:this.loanAssetForm.value.street,\r\n      locality:this.loanAssetForm.value.locality,\r\n      marketValue:this.loanAssetForm.value.marketValue,\r\n      mortgagedBranch:this.loanAssetForm.value.marketValue,\r\n      building:this.loanAssetForm.value.building,\r\n      homeType:this.loanAssetForm.value.homeType,\r\n      zipCode: this.loanAssetForm.value.zipCode\r\n      \r\n  \r\n    }\r\n    console.log(\"payload\",payload)\r\n    this.apiService.upsertAssetDetails(payload).subscribe(data => {\r\n      console.log(\"data\",data.loanAccountId);\r\n      // this.loanAccountId=data.loanAccountId;\r\n      // console.log(\"loanAccountid\",this.loanAccountId);\r\n\r\n      this.loanaccountID = this.data.loanAccountId;\r\n      console.log('loanaccountID', this.loanaccountID)\r\n      \r\n     \r\n      // this.assign(data.loanAccountId)\r\n      this.assign(this.data.loanAccountId)\r\n      if (data === 200 || data !== null) {\r\n        let statusModel = {\r\n          loanAccountId: this.data.loanAccountId,\r\n          status: \"ONGOING\"\r\n        };\r\n        this.apiService.updateLoanDetailsStatus(statusModel).subscribe(data => {\r\n        });\r\n      //  sessionStorage.setItem('loanAccountId', data.loanAccountid);\r\n        let fundStatus = {\r\n          loanAccountid: this.data.loanAccountId\r\n          \r\n        };\r\n       \r\n\r\n        this.ls.setItem('fundByStatus', fundStatus);\r\n        this.ls.setItem('accountType', data.accountType);\r\n       // this.ls.setItem('loanAccountId',this.data.loanAccountId);\r\n        this.ls.setItem('productName',data.businessProductName);\r\n    //    this.loanaccountID = this.ls.getItem('loanAccountid');\r\n        \r\n    this.loanaccountID = this.data.loanAccountId;\r\n        console.log(\"this.productaccountID\", this.loanaccountID);\r\n        this.cdr.markForCheck();\r\n        this.cdr.detectChanges();\r\n        this.snack.open('Data Updated!', 'OK', {\r\n          duration: 4000,\r\n          verticalPosition: 'top',\r\n          horizontalPosition: 'right'\r\n        });\r\n        this.getDataOnLoad();\r\n      }\r\n      if( data === 500){\r\n        this.snack.open('Not able to connect to server!', 'INTERNAL SERVER ERROR', {\r\n          duration: 4000,\r\n          verticalPosition: 'top',\r\n          horizontalPosition: 'right'\r\n        });\r\n        console.log(\"500 error\")\r\n      }\r\n       \r\n      this.goToClose();\r\n    })\r\n  }\r\n  assign(valueForaccId) {\r\n    this.apiService.setAccountId({\r\n      loanAccountId: valueForaccId\r\n    });\r\n    console.log(\"loan\", this.loanAccountId)\r\n  }\r\n\r\n \r\n   goBack(){\r\n    this.dialogRef.close();\r\n  }\r\n  \r\n  async getDataOnLoad() {\r\n    for (let index = 0; index < this.statusArr.length; index++) {\r\n      const statusItem = this.statusArr[index];\r\n      this.fetchCustomerInfo(statusItem);\r\n    }\r\n\r\n  }\r\n\r\n   fetchCustomerInfo(status:string){\r\n   \r\n    this.taskSumService.getallLoanAccountData(status)\r\n            .subscribe((custResp:any) => {\r\n              console.log(\"Response\", custResp);\r\n              this.updateStatusResponse(status, custResp);\r\n            });\r\n  }\r\n\r\n  updateStatusResponse(status, data){\r\n    console.log(\"data\", data)\r\n    console.log(\"status\", status)\r\n      if (status == 'ONGOING') {\r\n      this.ONGOINGArr = data?.loanList;\r\n      this.ONGOINGTotalPages = data?.totalPages;\r\n      this.ONGOINGTotalRecords = data?.totalNoOfElements;\r\n    }\r\n  \r\n\r\n    this.cdr.markForCheck();\r\n}\r\n  \r\n\r\n  getBusinessProductDetails(key: string){\r\n    this.apiService.getBusinessProductName(key).subscribe((data) => {\r\n       console.log(\"data:: AccountBranch \", data)\r\n       this.arrayAccountBranch = data;\r\n      \r\n     });\r\n   }\r\n   getAccountBranchDetails() {\r\n    //debugger\r\n    this.apiService.getAccountBranch().subscribe((data) => {\r\n      console.log(\"data:: AccountBranch \", data)\r\n      this.screenArray = data;\r\n      this.screenArrayData=data;\r\n      if (this.screenArray.length == 0) {\r\n        this.screenArray.push(this.branchName);\r\n      }\r\n      console.log(\"this.branchName::\", this.branchName, this.screenArray)\r\n      this.currencyData = this.screenArray.find(x => x.branchName == this.branchName);\r\n      console.log(\"Currency\", this.currencyData)\r\n\r\n\r\n    });\r\n  }\r\n  buildAssetForm(data?) {\r\n    console.log('item',data)\r\n    this.getBusinessProductDetails(\"business_product_name\");\r\n    this.getAccountBranchDetails();\r\n    this.getCountryName(\"country\");\r\n    this.getStateName(\"state\");\r\n    this.getCityName(\"city\");\r\n    \r\n    this.loanAssetForm = this.fb.group({\r\n        loanAccountId: [this.loanaccountID],\r\n        street: [ data ? data?.assetInfo?.street: ''],\r\n        country:[data ? data?.assetInfo?.country:''],\r\n        state:[data ? data?.assetInfo?.state:''],\r\n        city: [data ? data?.assetInfo?.city : ''],\r\n        assetStatus:[data ? data?.assetInfo?.assetStatus:''],\r\n        estimatedCost:[data ?data?.assetInfo?.estimatedCost:''],\r\n        dimensions:[data ? data?.assetInfo?.dimensions:''],\r\n        locality:[data ? data?.assetInfo?.locality:''],\r\n        marketValue:[data ? data?.assetInfo?.marketValue:''],\r\n        building:[data ? data?.assetInfo?.building:''],\r\n        zipCode: [data ? data?.assetInfo?.zipCode : ''],\r\n        homeType:[data ? data?.assetInfo?.homeType:''],\r\n        mortgagedBranch: [data ? data?.assetInfo?.mortgagedBranch:'']\r\n     \r\n  \r\n  \r\n \r\n    \r\n    });\r\n    console.log('form before',this.loanAssetForm)\r\n    console.log('form aftr',this.loanAssetForm.value)\r\n  }\r\n\r\n  getCountryName(key: string) {\r\n    this.apiService.getDropDownValues(key).subscribe((data) => {\r\n      this.arrayCountry = data;\r\n      console.log(\"-->\", this.arrayCountry)\r\n    });\r\n  }\r\n  getStateName(country) {\r\n    this.entityName = \"state\";\r\n    console.log(\"State -- \", country)\r\n    this.apiService.getDropDownValues1(this.entityName, country).subscribe((data) => {\r\n      this.arrayState = data;\r\n      console.log(\"-->\", this.arrayState)\r\n    });\r\n  }\r\n  getCityName(state: any) {\r\n    this.entityName = \"city\";\r\n    console.log(state)\r\n    this.apiService.getDropDownValues1(this.entityName, state).subscribe((data) => {\r\n      this.arrayCity = data;\r\n      console.log(\"-->\", this.arrayCity)\r\n     \r\n  \r\n    });\r\n  }\r\n\r\n  goToEdit() {\r\n    this.dialogRef.close();\r\n    this.dataService.sendNavParam(this.accountDetails);\r\n    this.router.navigate([`loan/account/loan-details`]);\r\n  }\r\n  goToClose(): void {\r\n    this.dialogRef.close();\r\n    this.getDataOnLoad();\r\n  }\r\n \r\n}\r\n\r\n\r\n      \r\n\r\n\r\n\r\n\r\n\r\n\r\n     \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n       \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import { ChangeDetectorRef, Component, Inject, OnInit } from '@angular/core';\r\nimport { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { AppConfirmService } from 'app/shared/services/app-confirm/app-confirm.service';\r\nimport { AppLoaderService } from 'app/shared/services/app-loader/app-loader.service';\r\nimport { ApplicationEntryStageService } from 'app/shared/services/application-entry-stage.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport * as moment from 'moment';\r\nimport { TasksummaryService } from '../../tasksummary.service';\r\n\r\n@Component({\r\n  selector: 'app-customer-info-update',\r\n  templateUrl: './customer-info-update.component.html',\r\n  styleUrls: ['./customer-info-update.component.scss']\r\n})\r\nexport class CustomerInfoUpdateComponent implements OnInit {\r\n\r\n  customerInfoUpdateForm: FormGroup;\r\n  listOfAccounts: any = [];\r\n  arrayOwnership: string[];\r\n  arrayPrefix: string[];\r\n  arrayGender: string[];\r\n  arrayCountry: any[] = [];\r\n  arrayCity: string[] = [];\r\n  arrayState: any[] = [];\r\n  accountId: any;\r\n  arrayResidence: string[];\r\n  arrayDocumentType: string[];\r\n  toggle: boolean;\r\n  index: any;\r\n  isAllSameDigitVal: boolean;\r\n  productCustomerId: any;\r\n  isCifValid: boolean;\r\n  customerIdProofs: any;\r\n  selectedApplicant: any;\r\n  arrayAddressType: string[];\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public data,\r\n    public dialogRef: MatDialogRef<CustomerInfoUpdateComponent>,\r\n    private appApiService: ApplicationEntryStageService,\r\n    private formBuilder: FormBuilder,\r\n    private apiService: ApiService,\r\n    private tasksummaryService: TasksummaryService,\r\n    private ls: LocalStoreService,\r\n    private snack: MatSnackBar,\r\n    private cdr: ChangeDetectorRef,\r\n    private loader: AppLoaderService,\r\n    private confirmService: AppConfirmService\r\n\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    console.log(this.data);\r\n    this.accountId = this.ls.getItem('accountId');\r\n    this.productCustomerId = this.ls.getItem('accountDetails.customerId');\r\n    this.getPrefixValue(\"prefix\");\r\n    this.getGenderValue(\"gender\");\r\n    this.getOwnershipValue(\"ownership\");\r\n    this.getResidenceDetails(\"residence\");\r\n    this.getCountryName(\"country\");\r\n    this.getDocumentType(\"document_type\");\r\n    this.getAdressType(\"address_type\");\r\n    if (this.data) {\r\n      this.buildCustomerForm(this.data.data);\r\n      this.addCustFormGroup(this.data.data, this.data.data.length)\r\n    }\r\n    else {\r\n      this.buildCustomerForm();\r\n      this.addCustFormGroup(null, 1)\r\n    }\r\n    console.log(this.customerInfoUpdateForm);\r\n\r\n  }\r\n  get f() { return this.customerInfoUpdateForm.controls; }\r\n  get applicantCount() { return this.f.numOfApplicants; }\r\n  get applicant() { return this.f.applicantDetails as FormArray; }\r\n\r\n  buildCustomerForm(data?) {\r\n    this.customerInfoUpdateForm = this.formBuilder.group({\r\n      productAccountId: this.accountId,\r\n      ownership: data && data.length > 1 ? 'Join' : 'Self',\r\n      numOfApplicants: data ? data.length.toString() : 1,\r\n      applicantDetails: this.formBuilder.array([])\r\n    });\r\n  }\r\n\r\n  convertDate(value) {\r\n    let date = moment(value).format('YYYY-MM-DD'); // ISO 8601 format\r\n    console.log(\"date\", date);\r\n    if (date)\r\n      return date;\r\n  }\r\n\r\n  addCustFormGroup(data?, num?) {\r\n    for (let i = 0; i < num; i++) {\r\n      this.applicant.push(this.formBuilder.group({\r\n        existingCustomer: [data[i] ? data[i].existingCustomer : ''],\r\n        primaryCustomer: [data[i] ? data[i].primaryCustomer : ''],\r\n        cifNumber: [data[i] ? data[i].cifNumber : ''],\r\n        prefix: [data[i] ? data[i].prefix : '', Validators.required],\r\n        firstName: [data[i] ? data[i].firstName : '', Validators.required],\r\n        middleName: [data[i] ? data[i].middleName : ''],\r\n        lastName: [data[i] ? data[i].lastName : '', Validators.required],\r\n        gender: [data[i] ? data[i].gender : '', Validators.required],\r\n        dateOfBirth: [data[i] ? data[i].dateOfBirth : '', Validators.required],\r\n        placeOfBirth: [data[i] ? data[i].placeOfBirth : '', Validators.required],\r\n        residenceStatus: [data[i] ? data[i].residenceStatus : '', Validators.required],\r\n        nationality: [data[i] ? data[i].nationality : '', Validators.required],\r\n        countryOfResidence: [data[i] ? data[i].countryOfResidence : '', Validators.required],\r\n        occupationType: [data[i] ? data[i].occupationType : '', Validators.required],\r\n        phoneNumber: [data[i] ? data[i].phoneNumber : '', [Validators.required, Validators.minLength(3), Validators.maxLength(10), Validators.pattern(\"^[0-9]{10,12}$\")]],\r\n        landlineNumber: [data[i] ? data[i].landlineNumber : '', [Validators.required, Validators.pattern(\"^[0-9]{10,12}$\")]],\r\n        primaryEmailAdress: [data[i] ? data[i].primaryEmailAdress : '', [Validators.required, Validators.email]],\r\n        userAddress: this.formBuilder.array([]),\r\n        custIdProofs: this.formBuilder.array([])\r\n      })\r\n      )\r\n      this.addCustIdProofs(i,data[i].custIdProofs[0]);\r\n      this.addAddress(i,data[i].userAddress[0])\r\n    }\r\n  }\r\n  addAddress(index,data?) {\r\n    (this.applicant.controls[index].get('userAddress') as FormArray).push(this.formBuilder.group({\r\n      addressType: [data ? data.addressType : '', [Validators.required]],\r\n      building: [data ? data.building : '', [Validators.required]],\r\n      street: [data ? data.street : '', [Validators.required]],\r\n      locality: [data ? data.locality : '', [Validators.required]],\r\n      city: [data ? data.city : '', [Validators.required]],\r\n      state: [data ? data.state : '', [Validators.required]],\r\n      country: [data ? data.country : '', [Validators.required]],\r\n      zipCode: [data ? data.zipCode : '', [Validators.required]]\r\n    })\r\n    )\r\n\r\n  }\r\n  addCustIdProofs(index,data?) {\r\n    (this.applicant.controls[index].get('custIdProofs') as FormArray).push(this.formBuilder.group({\r\n      idNumber: [data ? data.idNumber : '', Validators.required],\r\n      idType: [data ? data.idType : '', Validators.required],\r\n      expiryDate: [data ? data.expiryDate : '', Validators.required]\r\n    })\r\n    )\r\n  }\r\n  changeOwner() {\r\n    if (this.customerInfoUpdateForm.get('ownership').value == 'Join') {\r\n      this.customerInfoUpdateForm.get('numOfApplicants').patchValue(2, { onlySelf: true, emitEvent: false });\r\n    } else {\r\n      this.customerInfoUpdateForm.get('numOfApplicants').patchValue(1, { onlySelf: true, emitEvent: false });\r\n    }\r\n  }\r\n  onChangeApplicantNo(event) {\r\n    let val = event.target.value;\r\n    let applicantNo = this.customerInfoUpdateForm.get('numOfApplicants').value\r\n    if (val > applicantNo) {\r\n      this.addCustFormGroup(null, val - applicantNo)\r\n    }\r\n    else {\r\n      for (let i = applicantNo - 1; i >= val; i++)\r\n        this.applicant.removeAt(i);\r\n    }\r\n    this.customerInfoUpdateForm.get('numOfApplicants').setValue(val);\r\n  }\r\n  changeIdType(doc) {\r\n    console.log(\"doc::\", doc)\r\n    console.log(\"this.customerIdProofs::\", this.customerIdProofs)\r\n    let idProofs: any = this.customerIdProofs.filter(item => {\r\n      return item.idType == doc;\r\n    })\r\n    console.log(\"idProofs::\", idProofs)\r\n    if (idProofs.length > 0) {\r\n      this.applicant.get('idNumber').patchValue(idProofs[0].idNumber);\r\n      this.applicant.get('expiryDate').patchValue(this.convertDate(idProofs[0].expiryDate));\r\n    } else {\r\n      this.applicant.get('idNumber').patchValue('');\r\n      this.applicant.get('expiryDate').patchValue('');\r\n    }\r\n  }\r\n  getPrefixValue(key: string) {\r\n    this.apiService.getDropDownValues(key).subscribe((data) => {\r\n      this.arrayPrefix = data;\r\n    });\r\n  }\r\n\r\n  getGenderValue(key: string) {\r\n    this.apiService.getDropDownValues(key).subscribe((data) => {\r\n      this.arrayGender = data;\r\n    });\r\n  }\r\n\r\n  getOwnershipValue(key: string) {\r\n    this.apiService.getDropDownValues(key).subscribe((data) => {\r\n      this.arrayOwnership = data;\r\n    });\r\n  }\r\n\r\n  getCountryName(key: string) {\r\n    this.apiService.getAllCountries().subscribe((data: any) => {\r\n      for (let i = 0; i < data.length; i++) {\r\n        if (data[i].authStatus === 'A') {\r\n          this.arrayCountry.push(data[i].countryName);\r\n        }\r\n      }\r\n    });\r\n  }\r\n  getStateName(country) {\r\n    this.apiService.getAllCountries().subscribe((data: any) => {\r\n      for (let i = 0; i < data.length; i++) {\r\n        if (data[i].countryName === country) {\r\n          this.apiService.getStateByCountryId(data[i].id).subscribe((resp: any) => {\r\n            for (let i = 0; i < resp.length; i++) {\r\n              if (resp[i].authStatus === 'A') {\r\n                this.arrayState.push(resp[i].stateName);\r\n              }\r\n            }\r\n          })\r\n          break;\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  getCityName(state: any) {\r\n    let entityName = \"city\";\r\n    console.log(state)\r\n    this.apiService.getDropDownValues1(entityName, state).subscribe((data) => {\r\n      this.arrayCity = data;\r\n    });\r\n  }\r\n\r\n\r\n  getResidenceDetails(key: string) {\r\n    this.apiService.getDropDownValues(key).subscribe((data) => {\r\n      this.arrayResidence = data;\r\n    });\r\n  }\r\n\r\n  getDocumentType(key: string) {\r\n    this.apiService.getDropDownValues(key).subscribe((data) => {\r\n      this.arrayDocumentType = data;\r\n    });\r\n  }\r\n  getAdressType(key: string) {\r\n    this.apiService.getDropDownValues(key).subscribe((data) => {\r\n      this.arrayAddressType = data;\r\n    });\r\n  }\r\n\r\n  onSubmit(formData, index) {\r\n    console.log(formData);\r\n\r\n    this.isCifValid = false;\r\n    if (this.customerInfoUpdateForm.invalid) {\r\n      return;\r\n    }\r\n    this.loader.open();\r\n\r\n    if (formData.value.idType == 'Passport') {\r\n      formData.value.idType = this.convertDate(formData.value.idType);\r\n    }\r\n\r\n    this.appApiService.createAndUpdateAccountants(formData)\r\n      .subscribe((data: any) => {\r\n        console.log(\"data::\", data)\r\n        this.closeDetails();\r\n        this.loader.close();\r\n        console.log(\"Response of service 2 ---> \", data)\r\n        if (data.status === 200) {\r\n          this.snack.open('Customer Information Details Saved!', 'OK', {\r\n            duration: 4000,\r\n            verticalPosition: 'top',\r\n            horizontalPosition: 'right'\r\n          });\r\n          this.customerInfoUpdateForm.get('ownership').patchValue(data.custDependentModel.ownership);\r\n          this.customerInfoUpdateForm.get('numOfApplicants').patchValue(data.custDependentModel.numOfApplicants);\r\n          if (this.customerInfoUpdateForm.get('ownership').value == 'Self' || this.applicant.controls.length - 1 == index) {\r\n                this.dialogRef.close({\r\n                  status: 'BACKLOG'\r\n            })\r\n          }\r\n        }\r\n      }, (err: any) => {\r\n        console.log(err);\r\n        this.loader.close();\r\n        this.snack.open('Error', 'INTERNAL SERVER ERROR', {\r\n          duration: 4000,\r\n          verticalPosition: 'top',\r\n          horizontalPosition: 'right'\r\n        });\r\n      })\r\n  }\r\n\r\n  isAllSameDigit(event) {\r\n    let count = 0, number = event.target.value;\r\n    if (number != '') {\r\n      for (var i = 0; i < number.length; i++) {\r\n        if (0 == number[i]) {\r\n          count++;\r\n        }\r\n      }\r\n      console.log('number :: ', number);\r\n      console.log('isAllSameDigitVal :: ', count, number.length)\r\n      if (count == number.length) {\r\n        console.log('if loop')\r\n        this.isAllSameDigitVal = true;\r\n      }\r\n      else {\r\n        this.isAllSameDigitVal = false;\r\n      }\r\n    } else {\r\n      this.isAllSameDigitVal = false;\r\n    }\r\n  }\r\n  letterOnly(event) {\r\n    var charCode = event.keyCode;\r\n    if ((charCode > 64 && charCode < 91) || (charCode > 96 && charCode < 123) || charCode == 8)\r\n      return true;\r\n    else\r\n      return false;\r\n  }\r\n\r\n  onKeyPress(event: any) {\r\n    const number = /[0-9\\+\\-\\ ]/;\r\n    let inputCharacter = String.fromCharCode(event.charCode);\r\n    if (event.keyCode != 8 && !number.test(inputCharacter)) {\r\n      event.preventDefault();\r\n      console.log(\"event:\", event)\r\n    }\r\n  }\r\n\r\n  _keyPress(event: any) {\r\n    const pattern = /[0-9]/;\r\n    let inputChar = String.fromCharCode(event.charCode);\r\n    if (!pattern.test(inputChar)) {\r\n      event.preventDefault();\r\n\r\n    }\r\n  }\r\n\r\n  validateNumber(event) {\r\n    const keyCode = event.keyCode;\r\n    const excludedKeys = [8, 37, 39, 46];\r\n    if (!((keyCode >= 48 && keyCode <= 57) ||\r\n      (keyCode >= 96 && keyCode <= 105) ||\r\n      (excludedKeys.includes(keyCode)))) {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n  onSave(){\r\n    this.dialogRef.close({\r\n      status:\"BACKLOG\"\r\n    })\r\n  }\r\n  closeDetails(): void {\r\n    this.selectedApplicant = null;\r\n    this.applicant.reset();\r\n    this.customerInfoUpdateForm.get('numOfApplicants').enable({ onlySelf: true });\r\n  }\r\n  close() {\r\n    this.dialogRef.close({\r\n      status: \"ONGOING\"\r\n    })\r\n  }\r\n}\r\n\r\n","<div fxLayout=\"row\" fxLayoutGap=\"25px\" fxLayout=\"row\" fxLayoutAlign=\"end\" class=\"contain\">\r\n    <mat-icon class=\"closeIcon\" (click)=\"close()\">close</mat-icon>\r\n</div>\r\n<h1 mat-dialog-title>Customer Information Details</h1>\r\n<mat-dialog-content>\r\n    <form *ngIf=\"customerInfoUpdateForm\" [formGroup]=\"customerInfoUpdateForm\">\r\n        <div>\r\n            <div fxLayout=\"row\" fxLayoutGap=\"25px\">\r\n                <div fxFlex=\"50\">\r\n                        <mat-hint class=\"hintClass\">Ownership</mat-hint>\r\n                        <mat-card>\r\n                            <mat-select formControlName=\"ownership\" name=\"owner\" required (selectionChange)=\"changeOwner()\">\r\n                                <mat-option *ngFor=\"let ownership of arrayOwnership\" [value]=\"ownership\">\r\n                                    {{ownership}}\r\n                                </mat-option>\r\n                            </mat-select>\r\n                        </mat-card>\r\n                        <mat-error class=\"errorClass\"\r\n                            *ngIf=\"customerInfoUpdateForm.get('ownership').hasError('required')\">\r\n                            Ownership is Required!\r\n                        </mat-error>\r\n                </div>\r\n                <div fxFlex=\"50\" fxFlex.gt-xs=\"50\">\r\n                    <ng-container *ngIf=\"customerInfoUpdateForm.get('ownership').value == 'Join'; else showAdd\">\r\n                        <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                            <mat-label>Number of Applicants*</mat-label>\r\n                            <mat-select formControlName=\"numOfApplicants\" name=\"account\" (selectionChange)=\"onChangeApplicantNo($event)\">\r\n                                <mat-option [value]=\"1\">1</mat-option>\r\n                                <mat-option [value]=\"2\">2</mat-option>\r\n                                <mat-option [value]=\"3\">3</mat-option>\r\n                                <mat-option [value]=\"4\">4</mat-option>\r\n                                <mat-option [value]=\"5\">5</mat-option>\r\n                            </mat-select>\r\n                        </mat-form-field>\r\n                    </ng-container>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <div formArrayName=\"applicantDetails\">\r\n            <div *ngFor=\"let applicant of applicant.controls let i=index\" [item]=\"account\" [formGroupName]=\"i\">\r\n                <mat-accordion multi=\"true\">\r\n                    <mat-expansion-panel>\r\n                        <mat-expansion-panel-header>\r\n                            <mat-panel-title>\r\n                                <mat-icon class=\"check-circle\">check_circle</mat-icon>\r\n                                <span class=\"ml-8\">Applicant {{ i+1}}</span>\r\n                            </mat-panel-title>\r\n                        </mat-expansion-panel-header>\r\n                        <mat-card>\r\n                            <mat-card-header>\r\n                                <div mat-card-avatar>\r\n                                    <app-avatar-photo\r\n                                        [name]=\"applicant.value.firstName + ' ' + applicant.value.lastName\"></app-avatar-photo>\r\n                                </div>\r\n                                <mat-card-title>\r\n                                    <div fxLayout=\"row\">\r\n                                        <h6 class=\"m-0 mr-16\">{{ applicant.value.firstName + ' ' + applicant.value.lastName\r\n                                            }}</h6>\r\n                                        <span fxFlex></span>\r\n                                        <mat-chip mat-sm-chip [color]=\"'warn'\" *ngIf=\"applicant.primaryCustomer\"\r\n                                            [selected]=\"applicant.value.primaryCustomer\">{{account.value.primaryCustomer ?\r\n                                            'primary' :\r\n                                            ''}}</mat-chip>\r\n                                    </div>\r\n                                </mat-card-title>\r\n                                <mat-card-subtitle>\r\n                                    <span class=\"mat-caption\">CIF {{ applicant.value.cifNumber != null ? '#' +\r\n                                        applicant.value.cifNumber : '-n/a' }}</span>\r\n                                </mat-card-subtitle>\r\n\r\n                            </mat-card-header>\r\n                            <mat-card-container>\r\n                                <ng-container *ngIf=\"selectedApplicant?._id === applicant._id\">\r\n                                    <ng-container\r\n                                        *ngTemplateOutlet=\"detailApplicant; context: {$implicit: applicant}\"></ng-container>\r\n                                </ng-container>\r\n                            </mat-card-container>\r\n\r\n                            <div>\r\n                                <div fxLayout=\"row wrap\" class=\"full-width\">\r\n\r\n                                <div fxFlex=\"100%\">\r\n                                    <label>Is the applicant an existing customer?</label>\r\n                                    &nbsp;&nbsp;\r\n                                    <mat-slide-toggle formControlName=\"existingCustomer\"></mat-slide-toggle>\r\n                                </div>\r\n                                <div fxFlex=\"100%\">\r\n                                    <label>Is the applicant a primary customer?</label>\r\n                                    &nbsp;&nbsp;\r\n                                    <mat-slide-toggle formControlName=\"primaryCustomer\">\r\n                                    </mat-slide-toggle>\r\n\r\n                                    <div class=\"mb-16\"></div>\r\n                                </div>\r\n                                <div fxFlex=\"30%\" fxFlex.xs=\"100%\">\r\n                                    <mat-hint class=\"hintClass\">Customer Prefix*</mat-hint>\r\n                                    <mat-card class=\"inputCard\">\r\n                                        <mat-select name=\"prefix\" formControlName=\"prefix\">\r\n                                            <mat-option *ngFor=\"let prefix of arrayPrefix\" [value]=\"prefix\">\r\n                                                {{prefix}}\r\n                                            </mat-option>\r\n                                        </mat-select>\r\n                                    </mat-card>\r\n                                    <mat-error class=\"errorClass\" *ngIf=\"applicant.get('prefix').hasError('required')\">\r\n                                        Prefix is Required!\r\n                                    </mat-error>\r\n                                </div>\r\n                                <div fxFlex=\"30%\" fxFlex.xs=\"100%\">\r\n                                    <mat-hint class=\"hintClass\">First Name*</mat-hint>\r\n                                    <mat-card class=\"inputCard\">\r\n                                        <input matInput name=\"fname\" formControlName=\"firstName\"\r\n                                            placeholder=\"First Name\" (keypress)=\"letterOnly($event)\" />\r\n                                    </mat-card>\r\n                                    <mat-error class=\"errorClass\"\r\n                                        *ngIf=\"applicant.get('firstName').hasError('required')\">\r\n                                        First Name is Required!\r\n                                    </mat-error>\r\n                                </div>\r\n                                <div fxFlex=\"30%\" fxFlex.xs=\"100%\">\r\n                                    <mat-hint class=\"hintClass\">Middle Name</mat-hint>\r\n                                    <mat-card class=\"inputCard\">\r\n                                        <input matInput name=\"mname\" formControlName=\"middleName\"\r\n                                            placeholder=\"Middle Name\" (keypress)=\"letterOnly($event)\" />\r\n                                    </mat-card>\r\n                                </div>\r\n                                <div fxFlex=\"30%\" fxFlex.xs=\"100%\">\r\n                                    <mat-hint class=\"hintClass\">Last Name*</mat-hint>\r\n                                    <mat-card class=\"inputCard\">\r\n                                        <input matInput name=\"lname\" formControlName=\"lastName\" placeholder=\"Last Name\"\r\n                                            (keypress)=\"letterOnly($event)\" />\r\n                                    </mat-card>\r\n                                    <mat-error class=\"errorClass\"\r\n                                        *ngIf=\"applicant.get('lastName').hasError('required')\">\r\n                                        Last Name is Required!\r\n                                    </mat-error>\r\n                                </div>\r\n                                <div fxFlex=\"30%\" fxFlex.xs=\"100%\">\r\n                                    <mat-hint class=\"hintClass\">Date of Birth*</mat-hint>\r\n                                    <mat-card class=\"inputCard\">\r\n                                        <input matInput name=\"date\" readonly formControlName=\"dateOfBirth\"\r\n                                            placeholder=\"Date of birth\" [matDatepicker]=\"appDatepicker\" [max]=\"tomorrow\"\r\n                                            [max]=\"maxDate\" />\r\n                                        <mat-datepicker-toggle matSuffix [for]=\"appDatepicker\"></mat-datepicker-toggle>\r\n                                    </mat-card>\r\n                                    <mat-error class=\"errorClass\"\r\n                                        *ngIf=\"applicant.get('dateOfBirth').hasError('required')\">\r\n                                        Date of Birth is Required!\r\n                                    </mat-error>\r\n                                    <mat-datepicker #appDatepicker></mat-datepicker>\r\n                                </div>\r\n                                <div fxFlex=\"30%\" fxFlex.xs=\"100%\">\r\n                                    <mat-hint class=\"hintClass\">Gender*</mat-hint>\r\n                                    <mat-card class=\"inputCard\">\r\n                                        <mat-select name=\"gender\" formControlName=\"gender\">\r\n                                            <mat-option *ngFor=\"let gender of arrayGender\" [value]=\"gender\">\r\n                                                {{gender}}\r\n                                            </mat-option>\r\n                                        </mat-select>\r\n                                    </mat-card>\r\n                                    <mat-error class=\"errorClass\" *ngIf=\"applicant.get('gender').hasError('required')\">\r\n                                        Gender is Required!\r\n                                    </mat-error>\r\n                                </div>\r\n                                <div fxFlex=\"30%\" fxFlex.xs=\"100%\">\r\n                                    <mat-hint class=\"hintClass\">Resident Status*</mat-hint>\r\n                                    <mat-card class=\"inputCard\">\r\n                                        <mat-select name=\"residenceType\" formControlName=\"residenceStatus\">\r\n                                            <mat-option *ngFor=\"let residence of arrayResidence\" [value]=\"residence\">\r\n                                                {{residence}}\r\n                                            </mat-option>\r\n                                        </mat-select>\r\n                                    </mat-card>\r\n                                    <mat-error class=\"errorClass\"\r\n                                        *ngIf=\"applicant.get('residenceStatus').hasError('required')\">\r\n                                        Resident Status is Required!\r\n                                    </mat-error>\r\n                                </div>\r\n                                <div fxFlex=\"30%\" fxFlex.xs=\"100%\">\r\n                                    <mat-hint class=\"hintClass\">Birth Place*</mat-hint>\r\n                                    <mat-card class=\"inputCard\">\r\n                                        <input matInput name=\"bplace\" formControlName=\"placeOfBirth\"\r\n                                            placeholder=\"Birth Place\" />\r\n                                    </mat-card>\r\n                                    <mat-error class=\"errorClass\"\r\n                                        *ngIf=\"applicant.get('placeOfBirth').hasError('required')\">\r\n                                        Birth Place is Required!\r\n                                    </mat-error>\r\n                                </div>\r\n                                <div fxFlex=\"30%\" fxFlex.xs=\"100%\">\r\n                                    <mat-hint class=\"hintClass\">Country of Residence*</mat-hint>\r\n                                    <mat-card class=\"inputCard\">\r\n                                        <mat-select name=\"resident\" formControlName=\"countryOfResidence\">\r\n                                            <mat-option *ngFor=\"let country of arrayCountry\" [value]=\"country\">\r\n                                                {{country}}\r\n                                            </mat-option>\r\n                                        </mat-select>\r\n                                    </mat-card>\r\n                                    <mat-error class=\"errorClass\"\r\n                                        *ngIf=\"applicant.get('countryOfResidence').hasError('required')\">\r\n                                        Country of Residence is Required!\r\n                                    </mat-error>\r\n                                </div>\r\n                                <div fxFlex=\"30%\" fxFlex.xs=\"100%\">\r\n                                    <mat-hint class=\"hintClass\">Citizenship By*</mat-hint>\r\n                                    <mat-card class=\"inputCard\">\r\n                                        <mat-select name=\"citizen\" formControlName=\"nationality\">\r\n                                            <mat-option *ngFor=\"let country of arrayCountry\" [value]=\"country\">\r\n                                                {{country}}\r\n                                            </mat-option>\r\n                                        </mat-select>\r\n                                    </mat-card>\r\n                                    <mat-error class=\"errorClass\"\r\n                                        *ngIf=\"applicant.get('nationality').hasError('required')\">\r\n                                        Citizenship By is Required!\r\n                                    </mat-error>\r\n                                </div>\r\n                                <div fxFlex=\"30%\" fxFlex.xs=\"100%\">\r\n                                    <mat-hint class=\"hintClass\">Occupation Type*</mat-hint>\r\n                                    <mat-card class=\"inputCard\">\r\n                                        <input matInput name=\"occupation\" formControlName=\"occupationType\"\r\n                                            placeholder=\"Occupation Type\" />\r\n                                    </mat-card>\r\n                                    <mat-error class=\"errorClass\"\r\n                                        *ngIf=\"applicant.get('occupationType').hasError('required')\">\r\n                                        Occupation Type is Required!\r\n                                    </mat-error>\r\n                                </div>\r\n                                <div formArrayName=\"custIdProofs\" fxFlex=\"100%\">\r\n                                    <div *ngFor=\"let item of applicant.get('custIdProofs')['controls']; let j = index;\"\r\n                            [formGroupName]=\"j\" fxFlex=\"100%\" fxLayout=\"row wrap\">\r\n                                    <div fxFlex=\"30%\" fxFlex.xs=\"100%\">\r\n                                        <mat-hint class=\"hintClass\">ID Type*</mat-hint>\r\n                                        <mat-card class=\"inputCard\">\r\n                                            <mat-select name=\"idtype\" formControlName=\"idType\"\r\n                                                (selectionChange)=\"changeIdType(item.get('idType').value)\">\r\n                                                <mat-option *ngFor=\"let doc of arrayDocumentType\" [value]=\"doc\">\r\n                                                    {{doc}}\r\n                                                </mat-option>\r\n                                            </mat-select>\r\n                                        </mat-card>\r\n                                        <mat-error class=\"errorClass\"\r\n                                            *ngIf=\"item.get('idType').hasError('required')\">\r\n                                            ID Type is Required!\r\n                                        </mat-error>\r\n                                    </div>\r\n                                    <div fxFlex=\"30%\" fxFlex.xs=\"100%\">\r\n                                        <mat-hint class=\"hintClass\">Unique ID Number *</mat-hint>\r\n                                        <mat-card class=\"inputCard\">\r\n                                            <input matInput name=\"uniqueidentity\" formControlName=\"idNumber\"\r\n                                                placeholder=\"Unique ID Number\" maxlength=\"12\"\r\n                                                pattern=\"^[+]?([0-9]+(?:[\\.][0-9]*)?|\\.[0-9]+)$\" />\r\n                                        </mat-card>\r\n                                        <mat-error class=\"errorClass\"\r\n                                            *ngIf=\"item.get('idNumber').touched && !item.get('idNumber').valid\">\r\n                                            <div *ngIf=\"item.get('idNumber').hasError('required')\">Unique ID Number\r\n                                                is\r\n                                                Required!</div>\r\n                                            <div *ngIf=\"item.get('idNumber').hasError('pattern')\">This is a numeric\r\n                                                field\r\n                                            </div>\r\n                                        </mat-error>\r\n                                    </div>\r\n                                    <div fxFlex=\"30%\" fxFlex.xs=\"100%\" *ngIf=\"item.get('idType').value == 'Passport' || item.get('idType').value == 'DL'\">\r\n                                        <mat-hint class=\"hintClass\">ID Type Valid Till*</mat-hint>\r\n                                        <mat-card fxLayout=\"row\" class=\"inputCard\">\r\n                                          <div fxFlex=\"85%\">\r\n                                              <input matInput name=\"date\" readonly formControlName=\"expiryDate\"\r\n                                              placeholder=\"ID Type Valid Till\" [matDatepicker]=\"appDatepicker1\" [min]=\"validDate\"/>\r\n                                          </div>\r\n                                          <div fxFlex=\"15%\">\r\n                                              <mat-datepicker-toggle matSuffix [for]=\"appDatepicker1\"></mat-datepicker-toggle>\r\n                                          </div>\r\n                                        </mat-card>\r\n                                        <mat-error class=\"errorClass\" *ngIf=\"item.get('expiryDate').hasError('required')\">\r\n                                          ID Type Valid Till is Required!\r\n                                        </mat-error>\r\n                                      <mat-datepicker #appDatepicker1></mat-datepicker>\r\n                                    </div>\r\n                                    </div>\r\n                                </div>\r\n                                </div>\r\n\r\n                                <mat-accordion>\r\n                                    <mat-expansion-panel class=\"mb-8\" expanded=\"true\">\r\n                                        <mat-expansion-panel-header>\r\n                                            <mat-panel-title>Contact Information </mat-panel-title>\r\n                                        </mat-expansion-panel-header>\r\n\r\n                                        <div formArrayName=\"userAddress\">\r\n                                            <div *ngFor=\"let item of applicant.get('userAddress')['controls']; let j = index;\"\r\n                                            [formGroupName]=\"j\">\r\n                                            <div fxLayout=\"row wrap\">\r\n\r\n                                            <div fxFlex=\"30%\" fxFlex.xs=\"100%\">\r\n                                                <mat-hint class=\"hintClass\">Address Line 1*</mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                        <textarea matInput formControlName=\"address1\"\r\n                                                            placeholder=\"Address 1\"></textarea>\r\n                                                </mat-card>\r\n                                                <mat-error class=\"errorClass\"\r\n                                                    *ngIf=\"item.get('address1').touched && item.get('address1').hasError('required')\">\r\n                                                    Address 1 is Required!\r\n                                                </mat-error>\r\n                                                <mat-error class=\"errorClass\"\r\n                                                    *ngIf=\" item.get('address1').touched && item.get('address1').hasError('pattern')\">\r\n                                                    Please Enter Valid Address\r\n                                                </mat-error>\r\n                                            </div>\r\n                                            <div fxFlex=\"30%\" fxFlex.xs=\"100%\">\r\n                                                <mat-hint class=\"hintClass\">Address 2*</mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <textarea matInput formControlName=\"address2\"\r\n                                                        placeholder=\"Address 2\"></textarea>\r\n                                                </mat-card>\r\n                                                <mat-error class=\"errorClass\"\r\n                                                    *ngIf=\"item.get('address2').hasError('required')\">\r\n                                                    Address 2 is Required!\r\n                                                </mat-error>\r\n                                                <mat-error class=\"errorClass\"\r\n                                                    *ngIf=\" item.get('address2').touched && item.get('address2').hasError('pattern')\">\r\n                                                    Please Enter Valid Address\r\n                                                </mat-error>\r\n                                            </div>\r\n                                            <div fxFlex=\"30%\" fxFlex.xs=\"100%\">\r\n                                                <mat-hint class=\"hintClass\">Residence Type*</mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <mat-select>\r\n                                                        <mat-option *ngFor=\"let addressType of arrayAddressType\"\r\n                                                            [value]=\"addressType\">\r\n                                                            {{addressType}}\r\n                                                        </mat-option>\r\n                                                    </mat-select>\r\n                                                </mat-card>\r\n                                                <mat-error class=\"errorClass\"\r\n                                                    *ngIf=\"item.get('addressType').hasError('required')\">\r\n                                                    Residence Type is Required!\r\n                                                </mat-error>\r\n                                            </div>\r\n                                            <div fxFlex=\"30%\" fxFlex.xs=\"100%\">\r\n                                                <mat-hint class=\"hintClass\">Country*</mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <mat-select name=\"country\" formControlName=\"country\"\r\n                                                        (selectionChange)=\"getStateName($event.value)\">\r\n                                                        <mat-option *ngFor=\"let country of arrayCountry\"\r\n                                                            [value]=\"country\">\r\n                                                            {{country}}\r\n                                                        </mat-option>\r\n                                                    </mat-select>\r\n                                                </mat-card>\r\n                                                <mat-error class=\"errorClass\"\r\n                                                    *ngIf=\"item.get('country').hasError('required')\">\r\n                                                    Country is Required!\r\n                                                </mat-error>\r\n                                            </div>\r\n                                            <div fxFlex=\"30%\" fxFlex.xs=\"100%\">\r\n                                                <mat-hint class=\"hintClass\">State*</mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <mat-select name=\"state\" formControlName=\"state\"\r\n                                                        (selectionChange)=\"getCityName($event.value)\">\r\n                                                        <mat-option *ngFor=\"let state of arrayState\"\r\n                                                            [value]=\"state.stateName\">\r\n                                                            {{state.stateName}}</mat-option>\r\n\r\n                                                    </mat-select>\r\n                                                </mat-card>\r\n                                                <mat-error class=\"errorClass\"\r\n                                                    *ngIf=\"item.get('state').hasError('required')\">\r\n                                                    State is Required!\r\n                                                </mat-error>\r\n                                            </div>\r\n                                            <div fxFlex=\"30%\" fxFlex.xs=\"100%\">\r\n                                                <mat-hint class=\"hintClass\">City*</mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <mat-select name=\"city\" formControlName=\"city\">\r\n                                                        <mat-option *ngFor=\"let city of arrayCity\"\r\n                                                            [value]=\"city.value1\">{{city.value1}}\r\n                                                        </mat-option>\r\n                                                    </mat-select>\r\n                                                </mat-card>\r\n                                                <mat-error class=\"errorClass\"\r\n                                                    *ngIf=\"item.get('city').hasError('required')\">\r\n                                                    City is Required!\r\n                                                </mat-error>\r\n                                            </div>\r\n                                            <div fxFlex=\"30%\" fxFlex.xs=\"100%\">\r\n                                                <mat-hint class=\"hintClass\">Zip Code*</mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <input minlength=\"5\" maxlength=\"10\" (keypress)=\"onKeyPress($event)\"\r\n                                                        matInput name=\"a_zip\" formControlName=\"zipCode\" onlyNumber\r\n                                                        placeholder=\"Zip Code\" (keyup)=\"isAllSameDigit($event)\" />\r\n                                                </mat-card>\r\n                                                <mat-error class=\"errorClass\"\r\n                                                    *ngIf=\"item.get('zipCode').hasError('required') && !item.controls['zipCode'].valid && item.controls['zipCode']?.touched\">\r\n                                                    Please enter valid Zip Code!(5-10 digits)\r\n                                                </mat-error>\r\n                                                <h5 *ngIf=\"isAllSameDigitVal\" style=\"color: #E74C3C;\">Please enter valid\r\n                                                    Zip Code!\r\n                                                </h5>\r\n                                            </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        </div>\r\n                                    </mat-expansion-panel>\r\n                                </mat-accordion>\r\n\r\n                                <mat-accordion>\r\n                                    <mat-expansion-panel class=\"mb-8\" expanded=\"true\">\r\n                                        <mat-expansion-panel-header>\r\n                                            <mat-panel-title>Contact Information </mat-panel-title>\r\n                                        </mat-expansion-panel-header>\r\n                                        <div fxLayout=\"row wrap\" class=\"full-width\">\r\n                                            <div fxFlex=\"30%\" fxFlex.xs=\"100%\">\r\n                                                <mat-hint class=\"hintClass\">Mobile Number*</mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <input maxlength=\"10\" (keypress)=\"onKeyPress($event)\" matInput\r\n                                                        formControlName=\"phoneNumber\" name=\"phone\"\r\n                                                        placeholder=\"Mobile Number\" />\r\n                                                </mat-card>\r\n                                                <mat-error class=\"errorClass\"\r\n                                                    *ngIf=\"applicant.get('phoneNumber').hasError('pattern')\">\r\n                                                    Please, Enter 10 digit Mobile Number!\r\n                                                </mat-error>\r\n                                                <mat-error class=\"errorClass\" style=\"margin-top:-20px\"\r\n                                                    *ngIf=\"applicant.get('phoneNumber').value == '0000000000'\">\r\n                                                    &nbsp; &nbsp; Please Enter Correct Mobile Number\r\n                                                </mat-error>\r\n                                            </div>\r\n                                            <div fxFlex=\"30%\" fxFlex.xs=\"100%\">\r\n                                                <mat-hint class=\"hintClass\">Landline Number</mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <input maxlength=\"10\" (keypress)=\"onKeyPress($event)\" matInput\r\n                                                        name=\"mobile\" formControlName=\"landlineNumber\"\r\n                                                        placeholder=\"Landline Number\" />\r\n                                                </mat-card>\r\n                                                <mat-error class=\"errorClass\"\r\n                                                    *ngIf=\"applicant.get('landlineNumber').hasError('required')\">\r\n                                                    Landline Number is Required!\r\n                                                </mat-error>\r\n                                                <mat-error class=\"errorClass\"\r\n                                                    *ngIf=\"applicant.get('landlineNumber').hasError('pattern')\">\r\n                                                    Please, Enter 10 digit Landline Number!\r\n                                                </mat-error>\r\n                                            </div>\r\n                                            <div fxFlex=\"30%\" fxFlex.xs=\"100%\">\r\n                                                <mat-hint class=\"hintClass\">E-mail*</mat-hint>\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <input matInput name=\"email\" formControlName=\"primaryEmailAdress\"\r\n                                                        placeholder=\"e-mail\" />\r\n                                                </mat-card>\r\n                                                <mat-error class=\"errorClass\"\r\n                                                    *ngIf=\"applicant.get('primaryEmailAdress').hasError('required')\">\r\n                                                    E-mail is Required!\r\n                                                </mat-error>\r\n                                            </div>\r\n                                        </div>\r\n                                    </mat-expansion-panel>\r\n                                </mat-accordion>\r\n\r\n                            </div>\r\n                        </mat-card>\r\n                    </mat-expansion-panel>\r\n                    <div class=\"pb-1\">\r\n                        <button mat-button color=\"primary\" [disabled]=\"applicant.invalid\" class=\"place_1\"\r\n                            (click)=\"onSubmit(applicant.value,i)\">\r\n                            UPDATE APPLICANT\r\n                        </button>\r\n                    </div>\r\n                </mat-accordion>\r\n            </div>\r\n        </div>\r\n    </form>\r\n</mat-dialog-content>\r\n<div fxLayout=\"row\" fxLayoutAlign=\"end\" fxLayoutGap=\"20px\">\r\n    <button mat-raised-button type=\"button\" class=\"editbtn\" [disabled]=\"customerInfoUpdateForm.invalid\" (click)=\"onSave()\">Save</button>\r\n    &nbsp;&nbsp;&nbsp;\r\n    <button type=\"button\" class=\"cancelbtn\" (click)=\"close()\">\r\n        Cancel\r\n    </button>\r\n</div>","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { TasksummaryService } from '../../tasksummary.service';\r\n@Component({\r\n  selector: 'app-approval-details-update',\r\n  templateUrl: './approval-details-update.component.html',\r\n  styleUrls: ['./approval-details-update.component.scss']\r\n})\r\nexport class ApprovalDetailsUpdateComponent implements OnInit {\r\n\r\n  approvalUpdateForm: FormGroup;\r\n  arrayAccountType: any[] = [];\r\n  arrayAccountCurrency: any[] = [];\r\n  arrayUserRecomendation: any[] = [];\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public data,\r\n    public dialogRef: MatDialogRef<ApprovalDetailsUpdateComponent>,\r\n    private api: ApiService,\r\n    private formBuilder: FormBuilder,\r\n    private ls: LocalStoreService,\r\n    public snack: MatSnackBar,\r\n    private tasksummaryService: TasksummaryService\r\n\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    console.log(this.data);\r\n    this.getAccountCurrency(\"currency\");\r\n    this.getAccountType(\"account_type\");\r\n    this.getUserRecomendation(\"user_recomendation\");\r\n    if(this.data){\r\n    this.buildApprovalForm(this.data)\r\n    }\r\n  }\r\n  buildApprovalForm(item) {\r\n    this.approvalUpdateForm = this.formBuilder.group({\r\n      accountId: [this.ls.getItem('accountId')],\r\n      accountType: [item ? item.accountType : '',],\r\n      businessProductName: [item ? item.businessProductName : '',],\r\n      productCode: [item ? item.businessProductName : '',],\r\n      description: [item ? item.description : '',],\r\n      accountBranch: [item ? item.accountBranch : '',],\r\n      accountCurrency: [item ? item.accountCurrency : '',],\r\n      applicationDate: [item ? item.applicationDate : '',],\r\n      fundTheAccount: [item ? item.fundTheAccount : '',],\r\n      fundBy: [item ? item.fundBy : '',],\r\n      amount: [item ? item.amount : '',],\r\n      overDraftRequested: [item ? item.overDraftRequested : '',],\r\n      productDescription: [item ? item.productDescription : '',],\r\n      userRecommendation: [item ? item.userRecommendation : '',],\r\n      createdBy: [this.ls.getItem(\"userName\")],\r\n    });\r\n  }\r\n  \r\n  onSubmit(form) {\r\n    this.api.approvalUpdate(form).subscribe(resp => {\r\n      this.snack.open('Approval Details Updated!', 'OK', {\r\n        duration: 4000,\r\n        verticalPosition: 'top',\r\n        horizontalPosition: 'right'\r\n      });\r\n        this.dialogRef.close({\r\n          status: 'BACKLOG'\r\n        })\r\n    })\r\n  }\r\n  getAccountCurrency(key: string) {\r\n    this.api.getDropDownValues(key).subscribe((data) => {\r\n      this.arrayAccountCurrency = data;\r\n    });\r\n  }\r\n  getAccountType(key: string) {\r\n    this.api.getDropDownValues(key).subscribe((data) => {\r\n      this.arrayAccountType = data;\r\n    });\r\n  }\r\n  getUserRecomendation(key: string) {\r\n    this.api.getDropDownValues(key).subscribe((data) => {\r\n      this.arrayUserRecomendation = data;\r\n    });\r\n  }\r\n  close() {\r\n    this.dialogRef.close({\r\n      status: \"ONGOING\"\r\n    })\r\n  }\r\n}\r\n\r\n","<div fxLayout=\"row\" fxLayoutGap=\"25px\" fxLayout=\"row\" fxLayoutAlign=\"end\" class=\"contain\">\r\n    <mat-icon class=\"closeIcon\" (click)=\"close()\">close</mat-icon>\r\n</div>\r\n<h1 mat-dialog-title>Approval Details</h1>\r\n<mat-dialog-content>\r\n    <form [formGroup]=\"approvalUpdateForm\">\r\n        <div fxLayout=\"row wrap\" class=\"full-width\">\r\n            <div fxFlex=\"33.33%\" fxFlex.xs=\"100%\" class=\"paddingclass full-width\">\r\n                <mat-hint class=\"hintClass\">Account Type</mat-hint>\r\n                <mat-card class=\"inputCard\">\r\n                    <mat-select name=\"account\" formControlName=\"accountType\">\r\n                        <mat-option *ngFor=\"let accountType of arrayAccountType\" [value]=\"accountType\">\r\n                            {{accountType}}\r\n                        </mat-option>\r\n                    </mat-select>\r\n                </mat-card>\r\n            </div>\r\n            <div fxFlex=\"33.33%\" fxFlex.xs=\"100%\" class=\"paddingclass full-width\">\r\n                <mat-hint class=\"hintClass\">Account Branch</mat-hint>\r\n                <mat-card class=\"inputCard\">\r\n                    <input matInput readonly placeholder=\"Account Branch\" formControlName=\"accountBranch\" />\r\n                </mat-card>\r\n\r\n            </div>\r\n            <div fxFlex=\"33.33%\" fxFlex.xs=\"100%\" class=\"paddingclass full-width\">\r\n                <mat-hint class=\"hintClass\">Account Currency</mat-hint>\r\n                <mat-card class=\"inputCard\">\r\n                    <mat-select name=\"owner\" formControlName=\"accountCurrency\" disabled>\r\n                        <mat-option *ngFor=\"let accountCurrency of arrayAccountCurrency\" [value]=\"accountCurrency\">\r\n                            {{accountCurrency}}\r\n                        </mat-option>\r\n                    </mat-select>\r\n                </mat-card>\r\n\r\n            </div>\r\n            <div fxFlex=\"33.33%\" fxFlex.xs=\"100%\" class=\"paddingclass full-width\">\r\n                <mat-hint class=\"hintClass\">Product Code</mat-hint>\r\n                <mat-card class=\"inputCard\">\r\n                    <input matInput name=\"account_branch\" placeholder=\"Product Image\" formControlName=\"productCode\"\r\n                        readonly />\r\n                </mat-card>\r\n\r\n            </div>\r\n            <div fxFlex=\"33.33%\" fxFlex.xs=\"100%\" class=\"paddingclass full-width\">\r\n                <mat-hint class=\"hintClass\">User Recomendation</mat-hint>\r\n                <mat-card class=\"inputCard\">\r\n                    <mat-select name=\"owner\" placeholder=\"Recommended for Approval\"\r\n                        formControlName=\"userRecommendation\">\r\n                        <mat-option *ngFor=\"let userRecommendation of arrayUserRecomendation\"\r\n                            [value]=\"userRecommendation\">\r\n                            {{userRecommendation}}\r\n                        </mat-option>\r\n                    </mat-select>\r\n                </mat-card>\r\n\r\n            </div>\r\n        </div>\r\n    </form>\r\n\r\n</mat-dialog-content>\r\n<div fxLayout=\"row\" fxLayoutAlign=\"end\" fxLayoutGap=\"20px\">\r\n    <button type=\"button\" class=\"editbtn\" mat-raised-button [disabled]=\"approvalUpdateForm.invalid\"\r\n        (click)=\"onSubmit(approvalUpdateForm.value)\">Save</button>\r\n    &nbsp;&nbsp;&nbsp;\r\n    <button type=\"button\" class=\"cancelbtn\" (click)=\"close()\">\r\n        Cancel\r\n    </button>\r\n</div>","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\n\r\n@Component({\r\n  selector: 'app-card-approval-details-update',\r\n  templateUrl: './card-approval-details-update.component.html',\r\n  styleUrls: ['./card-approval-details-update.component.scss']\r\n})\r\nexport class CardApprovalDetailsUpdateComponent implements OnInit {\r\n  cardApprovalUpdateForm: any;\r\n  arrayAccountType: string[];\r\n  arrayAccountCurrency: string[];\r\n  arrayUserRecomendation: string[];\r\n  arrayAccountBranch: any;\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public data,\r\n    private fb: FormBuilder,\r\n    private apiService: ApiService,\r\n    public dialogRef: MatDialogRef<CardApprovalDetailsUpdateComponent>,\r\n    public snack: MatSnackBar\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getUserRecomendation(\"user_recomendation\");\r\n    this.getAccountType(\"account_type\")\r\n    this.getAccountBranchDetails();\r\n    if(this.data.approvalInfo != null){\r\n      this.buildformGroup(this.data.approvalInfo);\r\n    }\r\n\r\nelse{\r\n  this.buildformGroup();\r\n}\r\n  }\r\n  buildformGroup(data?){\r\n    this.cardApprovalUpdateForm = this.fb.group({\r\n      accountType:[data ? data.accountType : '',Validators.required],\r\n      productCode:[data ? data.productCode :'',Validators.required],\r\n      userRecommendation:[data ? data.userRecommendation :'',Validators.required],\r\n      accountBranch:[data ? data.accountBranch :'',Validators.required],\r\n      accountCurrency:[data ? data.accountCurrency :'',Validators.required],\r\n      productName:[data ? data.productName :'',Validators.required],\r\n      existingValues:[data ? data.existingValues :'',Validators.required],\r\n      remarks:[data ? data.remarks :'']\r\n    })\r\n  }\r\n\r\n  onSubmit(){\r\n    console.log(\"data\", this.cardApprovalUpdateForm.value);\r\n    \r\n    let payload={\r\n      cardId: this.data.cardId,\r\n      accountBranch: this.cardApprovalUpdateForm.value.accountBranch,\r\n      accountCurrency: this.cardApprovalUpdateForm.value.accountCurrency,\r\n      accountType: this.cardApprovalUpdateForm.value.accountType,\r\n      existingValues: this.cardApprovalUpdateForm.value.existingValues,\r\n      productCode: this.cardApprovalUpdateForm.value.productCode,\r\n      productName: this.cardApprovalUpdateForm.value.productName,\r\n      remarks: this.cardApprovalUpdateForm.value.remarks,\r\n      userRecommendation: this.cardApprovalUpdateForm.value.userRecommendation,\r\n\r\n    }\r\n    this.apiService.upsertApprovalDetails(payload)\r\n    .subscribe((data: any) => {\r\n\r\n      this.snack.open('Data Updated!', 'OK', {\r\n        duration: 4000,\r\n        verticalPosition: 'top',\r\n        horizontalPosition: 'right'\r\n      });\r\n      let statusModel = {\r\n        cardId: data.cardId,\r\n        status: \"BACKLOG\"\r\n      };\r\n      this.apiService.updateCardStatus(statusModel).subscribe(data => {\r\n        this.dialogRef.close({\r\n          status: data.status\r\n         });\r\n      });\r\n    }, err => {\r\n      this.snack.open('Error Unable to Update Data!', 'OK', {\r\n        duration: 4000,\r\n        verticalPosition: 'top',\r\n        horizontalPosition: 'right'\r\n      });\r\n      \r\n    });\r\n  }\r\n\r\n  onKeyPress(event: any) {\r\n    const number = /[0-9\\+\\-\\ ]/;\r\n    let inputCharacter = String.fromCharCode(event.charCode);\r\n    if (event.keyCode != 8 && !number.test(inputCharacter)) {\r\n      event.preventDefault();\r\n      console.log(\"event:\", event)\r\n    }\r\n  }\r\n\r\n  getAccountCurrency(key: string) {\r\n    this.apiService.getDropDownValues(key).subscribe((data) => {\r\n      this.arrayAccountCurrency = data;\r\n    });\r\n  }\r\n\r\n  getAccountType(key: string) {\r\n    this.apiService.getDropDownValues(key).subscribe((data) => {\r\n      this.arrayAccountType = data;\r\n    });\r\n  }\r\n  \r\n  getUserRecomendation(key: string) {\r\n    this.apiService.getDropDownValues(key).subscribe((data) => {\r\n      this.arrayUserRecomendation = data;\r\n    });\r\n  }\r\n\r\n  getAccountBranchDetails() {\r\n    //debugger\r\n    this.apiService.getAccountBranch().subscribe((data) => {\r\n      console.log(\"data:: AccountBranch \", data)\r\n      this.arrayAccountBranch = data;\r\n    });\r\n  }\r\n  keyPressAlphanumeric(event) {\r\n    var inp = String.fromCharCode(event.keyCode);\r\n    if (/[a-zA-Z0-9]/.test(inp)) {\r\n      return true;\r\n    } else {\r\n      event.preventDefault();\r\n      return false;\r\n    }\r\n  }\r\n  close(){\r\n    this.dialogRef.close({\r\n      status:\"ONGOING\"\r\n    })\r\n  }\r\n}\r\n","\r\n<div fxLayout=\"row\" fxLayoutGap=\"25px\" fxLayout=\"row\" fxLayoutAlign=\"end\" class=\"contain\">\r\n    <mat-icon class=\"closeIcon\" (click)=\"close()\">close</mat-icon>\r\n</div>\r\n\r\n<h1 mat-dialog-title>Approval Details</h1>\r\n\r\n\r\n<mat-dialog-content>\r\n    <mat-card>\r\n    <form  [formGroup]=\"cardApprovalUpdateForm\">\r\n        <div fxLayout=\"row\" fxLayoutGap=\"5%\">\r\n            <mat-form-field fxFlex=\"30%\" appearance=\"outline\" >\r\n                <mat-label>Account Type*</mat-label>\r\n                <mat-select placeholder=\"Account Type\" formControlName=\"accountType\" >\r\n                  <mat-option *ngFor=\"let arrayAccountType of arrayAccountType\" [value]=\"arrayAccountType\" > \r\n                    {{arrayAccountType}} \r\n                  </mat-option> \r\n                </mat-select>\r\n                <mat-error *ngIf=\"cardApprovalUpdateForm.get('accountType').hasError('required')\">\r\n                  Please Select Account Type\r\n                 </mat-error>\r\n              </mat-form-field>\r\n\r\n              <mat-form-field fxFlex=\"30%\" appearance=\"outline\"  >\r\n                <mat-label>Account Branch*</mat-label>\r\n                <mat-select placeholder=\"Account Branch\" formControlName=\"accountBranch\" >\r\n                  <mat-option *ngFor=\"let arrayAccountBranch of arrayAccountBranch\" [value]=\"arrayAccountBranch.branchName\" > \r\n                    {{arrayAccountBranch.branchName}} \r\n                  </mat-option> \r\n                </mat-select>\r\n                <mat-error *ngIf=\"cardApprovalUpdateForm.get('accountBranch').hasError('required')\">\r\n                  Please Select Account Branch \r\n                 </mat-error>\r\n              </mat-form-field>\r\n\r\n              <mat-form-field fxFlex=\"30%\" appearance=\"outline\"   >\r\n                <mat-label>Product Code*</mat-label>\r\n                <input matInput  placeholder=\"Product Image\" formControlName=\"productCode\" />\r\n              </mat-form-field>\r\n              <mat-error *ngIf=\"cardApprovalUpdateForm.get('productCode').touched &&cardApprovalUpdateForm.get('productCode').value == 0\">\r\n                 Please Enter valid Product ID\r\n            </mat-error>\r\n        </div>\r\n\r\n            <div fxLayout=\"row\" fxLayoutGap=\"5%\">\r\n                <mat-form-field fxFlex=\"30%\" appearance=\"outline\"   >\r\n                    <mat-label>Product Name*</mat-label>\r\n                    <input matInput  placeholder=\"Product Name\" formControlName=\"productName\"(keypress)=\"keyPressAlphanumeric($event)\"/>\r\n                    <mat-error *ngIf=\"cardApprovalUpdateForm.get('productName').hasError('required')\">\r\n                     Please Enter Product Name\r\n                     </mat-error>\r\n                  </mat-form-field>\r\n\r\n                  <mat-form-field fxFlex=\"30%\" appearance=\"outline\"  >\r\n                    <mat-label>Existing Value*</mat-label>\r\n                    <input matInput placeholder=\"Existing Value\"(keypress)=\"onKeyPress($event)\"formControlName=\"existingValues\"/>\r\n                    <mat-error *ngIf=\"cardApprovalUpdateForm.get('existingValues').hasError('required')\">\r\n                      Please Enter Existing Value\r\n                     </mat-error>\r\n                  </mat-form-field>\r\n                  \r\n            <mat-form-field fxFlex=\"30%\" appearance=\"outline\"    >\r\n                <mat-label>Account Currency*</mat-label>\r\n                  <input matInput placeholder=\"Account Currency\"formControlName=\"accountCurrency\"(keypress)=\"keyPressAlphanumeric($event)\"/>\r\n                <mat-error *ngIf=\"cardApprovalUpdateForm.get('accountCurrency').hasError('required')\">\r\n                  Please Enter Account Currency\r\n                 </mat-error>\r\n                </mat-form-field>\r\n                </div>\r\n\r\n        <div fxLayout=\"row\" fxLayoutGap=\"5%\">\r\n            <mat-form-field fxFlex=\"30%\"  appearance=\"outline\" >\r\n              <mat-label>User Recomendation*</mat-label>\r\n              <mat-select placeholder=\"Recommended for Approval\" formControlName=\"userRecommendation\" >\r\n                <mat-option *ngFor=\"let userRecommendation of arrayUserRecomendation\" [value]=\"userRecommendation\" > \r\n                  {{userRecommendation}} \r\n                </mat-option> \r\n              </mat-select>\r\n              <mat-error *ngIf=\"cardApprovalUpdateForm.get('userRecommendation').hasError('required')\">\r\n               Please Select user Recommendation\r\n              </mat-error>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field fxFlex=\"30%\" appearance=\"outline\" >\r\n                <mat-label>Remarks</mat-label>\r\n                <input matInput placeholder=\"Remarks\" formControlName=\"remarks\"/>\r\n                <mat-error *ngIf=\"cardApprovalUpdateForm.get('remarks').hasError('required')\">\r\n                  Please Enter Remarks\r\n                 </mat-error>\r\n              </mat-form-field>\r\n            </div>\r\n    </form>\r\n    </mat-card>\r\n</mat-dialog-content>\r\n<div fxLayout=\"row\" fxLayoutAlign=\"end\" fxLayoutGap=\"20px\">\r\n  <button type=\"button\" class=\"editbtn\" \r\n  (click)=\"onSubmit()\" [disabled]=\"cardApprovalUpdateForm.invalid\">Save</button> \r\n                &nbsp;&nbsp;&nbsp;\r\n                <button type=\"button\" class=\"cancelbtn\" (click)=\"close()\">\r\n                     Cancel\r\n                </button>\r\n</div>\r\n\r\n\r\n  \r\n          <!-- <button mat-raised-button color=\"primary\" type=\"button\"\r\n      (click)=\"onSubmit()\"\r\n       [disabled]=\"cardApprovalUpdateForm.invalid\" >Next</button> -->\r\n   ","import { EventHandlerVars } from '@angular/compiler/src/compiler_util/expression_converter';\r\nimport { THIS_EXPR } from '@angular/compiler/src/output/output_ast';\r\nimport { ChangeDetectorRef, Component, EventEmitter, HostListener, OnInit, Output } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatRadioChange } from '@angular/material/radio';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ActivatedRoute, NavigationEnd, Router, RouterEvent } from '@angular/router';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { DialogService } from 'app/shared/services/dialogs/dialog.service';\r\nimport { Subject } from 'rxjs';\r\nimport { debounceTime, filter } from 'rxjs/operators';\r\nimport { ApproverComponent } from '../approver/approver.component';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { TasksummaryService } from '../tasksummary.service';\r\nimport { KycBranchVerifySummaryComponent } from '../kyc-branch-verify-summary/kyc-branch-verify-summary.component';\r\nimport { SortCriteria } from 'app/shared/pipes/custom-task-summary-sorting.pipe';\r\nimport * as _ from 'lodash';\r\nimport { MatIconRegistry } from '@angular/material/icon';\r\nconst FILTER_ICON =\r\n  `\r\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M10,13,3,3H21L14,13v6l-4,3Z\" fill=\"none\" stroke=\"#000\" stroke-miterlimit=\"10\"/></svg>\r\n`;\r\n\r\n@Component({\r\n  selector: 'app-kyc-task-summary',\r\n  templateUrl: './kyc-task-summary.component.html',\r\n  styleUrls: ['./kyc-task-summary.component.scss'],\r\n  styles: [\r\n    `\r\n    :host {\r\n      \r\n      background-color: #F5F5F5;\r\n    }\r\n  `,\r\n  ],\r\n})\r\nexport class KycTaskSummaryComponent implements OnInit {\r\n\r\n  searchText;\r\n  statusArr: any = ['INITIATED', 'UNDER_PROCESS', 'APPROVED', 'REJECTED']\r\n\r\n  @Output() setValue: EventEmitter<string> = new EventEmitter();\r\n  private _searchSubject: Subject<string> = new Subject();\r\n\r\n  custId: any;\r\n  customerId: string;\r\n  radioButtonSelected: any;\r\n  nodataFound: boolean = false;\r\n\r\n  INITIATEDArr: any = [];\r\n  UNDER_PROCESSArr: any = [];\r\n  REJECTEDArr: any = [];\r\n  APPROVEDArr: any = [];\r\n\r\n\r\n  INITIATEDPage: number = 0;\r\n  UNDER_PROCESSPage: number = 0;\r\n  REJECTEDPage: number = 0;\r\n  APPROVEDPage: number = 0;\r\n\r\n  INITIATEDTotalPages: number = 0;\r\n  UNDER_PROCESSTotalPages: number = 0;\r\n  REJECTEDTotalPages: number = 0;\r\n  APPROVEDTotalPages: number = 0;\r\n\r\n  INITIATEDTotalRecords: number = 0;\r\n  UNDER_PROCESSTotalRecords: number = 0;\r\n  REJECTEDTotalRecords: number = 0;\r\n  APPROVEDTotalRecords: number = 0;\r\n\r\n  loading: boolean;\r\n\r\n \r\n\r\n  searchable:boolean=false;\r\n  isScroll = true;\r\n\r\n  \r\n\r\n   //variable for sorting data\r\n   public criteria: SortCriteria;\r\n  document_type: string;\r\n  custDocuments: any;\r\n\r\n  constructor(public dialog: MatDialog, \r\n    public dialogService: DialogService, private apiService: ApiService,\r\n    public cdr: ChangeDetectorRef,\r\n    private tasSumService: TasksummaryService,\r\n    private snack: MatSnackBar, private sanitizer: DomSanitizer, iconRegistry: MatIconRegistry,) {\r\n    this._setSearchSubscription();\r\n    iconRegistry.addSvgIconLiteral('filter_icon', sanitizer.bypassSecurityTrustHtml(FILTER_ICON));\r\n  }\r\n  @HostListener('scroll', ['$event'])\r\nonScroll(event: any) {\r\n  if(this.isScroll){\r\n      this.INITIATEDPage++;\r\n      this.getDataOnScroll('INITIATED',this.INITIATEDPage,this.INITIATEDTotalPages);\r\n \r\n     this.UNDER_PROCESSPage++;\r\n     this.getDataOnScroll('UNDER_PROCESS',this.UNDER_PROCESSPage, this.UNDER_PROCESSTotalPages);\r\n       \r\n\r\n       this.APPROVEDPage++;\r\n       this.getDataOnScroll('APPROVED', this.APPROVEDPage, this.APPROVEDTotalPages);\r\n\r\n       this.REJECTEDPage++;\r\n       this.getDataOnScroll('REJECTED', this.REJECTEDPage, this.REJECTEDTotalPages);\r\n  }\r\n}\r\n\r\n  ngOnInit(): void {\r\n    var task:boolean=true;\r\n    this.apiService.setTask(task);\r\n    this.getDataOnLoad();\r\n  }\r\n\r\n\r\n  public updateSearch(searchTextValue: string) {\r\n    this._searchSubject.next(searchTextValue);\r\n  }\r\n\r\n  private _setSearchSubscription() {\r\n    this._searchSubject.pipe(\r\n      debounceTime(1000)\r\n    ).subscribe((searchValue: string) => {\r\n      this.searchKycid(searchValue);\r\n      console.log('searchValue :: ',searchValue)\r\n    });\r\n  }\r\n\r\n  goToKycSummary(custId) {\r\n    localStorage.setItem('customerId', custId);\r\n    const dialogRef = this.dialog.open(KycBranchVerifySummaryComponent, {\r\n    width: '80%',\r\n     maxHeight: '100%',\r\n     backdropClass: 'dialog-bg-trans',\r\n     disableClose: true,\r\n   });\r\n   dialogRef.afterClosed().subscribe(result => {\r\n     console.log('The dialog was closed',result);\r\n     if (result.data === 'REJECTED' || result.data === 'APPROVED' || result.data === 'INITIATED' || result.data === 'INITIATED') {\r\n      this.getDataOnLoad()\r\n    }\r\n   });\r\n  }\r\n\r\n  /* @method :: to load all data on screen load */\r\n  getDataOnLoad() {\r\n    for (let index = 0; index < this.statusArr.length; index++) {\r\n      const statusItem = this.statusArr[index];\r\n      this.fetchCustomerByStatus(statusItem,0,0);\r\n    }\r\n  }\r\n\r\n  fetchCustomerByStatus(status:string, page:number, size:number){\r\n    this.apiService.getKycTaskSummaryList(status, page, size)\r\n          .subscribe((custResp:any) => {\r\n            console.log(\"Response\", custResp);\r\n            this.updateStatusResponse(status, custResp);\r\n          });\r\n  }\r\n\r\n  updateStatusResponse(status, data){\r\n      if(status == 'INITIATED'){\r\n        this.INITIATEDArr = data.customerInfoList;\r\n        this.INITIATEDTotalPages = data.totalPages;\r\n        this.INITIATEDTotalRecords = data.totalRecords;\r\n      }else if(status == 'UNDER_PROCESS'){\r\n        this.UNDER_PROCESSArr = data.customerInfoList;\r\n        this.UNDER_PROCESSTotalPages = data.totalPages;\r\n        this.UNDER_PROCESSTotalRecords = data.totalRecords;\r\n      }else if(status == 'APPROVED'){\r\n        this.APPROVEDArr = data.customerInfoList;\r\n        this.APPROVEDTotalPages = data.totalPages;\r\n        this.APPROVEDTotalRecords = data.totalRecords;\r\n      }else if(status == 'REJECTED'){ \r\n        this.REJECTEDArr = data.customerInfoList;\r\n        this.REJECTEDTotalPages = data.totalPages;\r\n        this.REJECTEDTotalRecords = data.totalRecords;\r\n        console.log(\"this.REJECTEDArr\",this.REJECTEDArr);\r\n      }\r\n\r\n      this.cdr.markForCheck();\r\n  }\r\n\r\n\r\n  /* @method :: to load data on scroll of data*/\r\n  onScrollingFinished(e, status) {\r\n    if(status == 'INITIATED'){\r\n     this.INITIATEDPage++;\r\n     this.getDataOnScroll(status,this.INITIATEDPage,this.INITIATEDTotalPages);\r\n     \r\n    }else if(status == 'UNDER_PROCESS'){\r\n    this.UNDER_PROCESSPage++;\r\n    this.getDataOnScroll(status,this.UNDER_PROCESSPage, this.UNDER_PROCESSTotalPages);\r\n      \r\n    }else if(status == 'APPROVED'){\r\n      this.APPROVEDPage++;\r\n      this.getDataOnScroll(status, this.APPROVEDPage, this.APPROVEDTotalPages);\r\n    }else if(status == 'REJECTED'){ \r\n      this.REJECTEDPage++;\r\n      this.getDataOnScroll(status, this.REJECTEDPage, this.REJECTEDTotalPages);\r\n    }\r\n    \r\n  }\r\n\r\n  /* @method :: to call service ,when scroll method called */\r\n  getDataOnScroll(status,page,totalPage) {\r\n    console.log('---------scrolled----------')\r\n    if (page === totalPage) {\r\n      console.log('No scroll requied')\r\n      return;\r\n    }\r\n\r\n    this.tasSumService.getAllCustOnBoardingData(status, page)\r\n      .subscribe(data => {\r\n        console.log('count data :: ', data);\r\n        this.cdr.markForCheck();\r\n        this.updateDataOnScroll(status, data.customerInfoList);\r\n      });\r\n\r\n  }\r\n\r\n  searchKycid(searchTerm) {\r\n      \r\n      let text:any;\r\n      let params:any;\r\n      if(searchTerm===''){\r\n\r\n        console.log('empty')\r\n        this.getDataOnLoad();\r\n        this.isScroll = true;\r\n        return;\r\n      }\r\n      if(this.isNum(searchTerm)){\r\n        if(searchTerm.length == 10){\r\n          console.log(\"contact\");\r\n          text=this.searchText.trim();\r\n          params = 'phoneNumber='+text;\r\n        }\r\n        else{\r\n          console.log(\"kycId\");\r\n          text='kyc_'+this.searchText.trim();\r\n          // params = 'kycReference='+text;\r\n          this.apiService.getKycDetails2(text)\r\n          .subscribe(data => {\r\n            console.log(data)\r\n            if(data != null){\r\n              params = 'kycReference='+text;\r\n              console.log('cif',params);\r\n            }\r\n            else{\r\n              console.log('not a cif')\r\n              text=this.searchText.trim();\r\n              params = 'customerId='+text;\r\n              console.log('customer',params);\r\n            }\r\n          })\r\n        }\r\n      }\r\n      else if(this.isString(searchTerm)){\r\n        if( /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(searchTerm)){\r\n          console.log(\"email\");\r\n          text=this.searchText.trim();\r\n          params = 'primaryEmailAdress='+text;\r\n        }\r\n        else{\r\n        console.log(\"name\");\r\n        text=this.searchText.trim();\r\n        params = 'customerName='+text;\r\n        }\r\n      }\r\n      setTimeout(() => {\r\n        this.getKycData(params);\r\n      }, 1000);\r\n      this.isScroll = false;\r\n  }\r\n\r\n  getKycData(params) {\r\n    this.loading = true;\r\n    for (let index = 0; index < this.statusArr.length; index++) {\r\n      const statusItem = this.statusArr[index];\r\n     // this.fetchCustomerByStatus(statusItem,params,0);\r\n     if(statusItem == 'INITIATED'){\r\n    this.apiService.getKycDetails(params,statusItem)\r\n    .subscribe(data => {\r\n      this.INITIATEDTotalPages = data?.totalPages;\r\n      this.loading = false;\r\n      console.log('resp data :: ', data);\r\n      this.INITIATEDArr = [];\r\n      for (let index = 0; index < data.customerInfoList.length; index++) {\r\n        const element = data?.customerInfoList[index];\r\n        this.INITIATEDArr.push(element);\r\n        \r\n      }\r\n      \r\n    })\r\n  }\r\n  else  if(statusItem == 'UNDER_PROCESS'){\r\n    this.apiService.getKycDetails(params,statusItem)\r\n    .subscribe(data => {\r\n      this.UNDER_PROCESSTotalPages = data?.totalPages;\r\n      this.loading = false;\r\n      console.log('resp data :: ', data);\r\n      this.UNDER_PROCESSArr = [];\r\n      for (let index = 0; index < data?.customerInfoList.length; index++) {\r\n        const element = data.customerInfoList[index];\r\n        this.UNDER_PROCESSArr.push(element);\r\n        \r\n      }\r\n       \r\n    })\r\n  }\r\n  else  if(statusItem == 'APPROVED'){\r\n    this.apiService.getKycDetails(params,statusItem)\r\n    .subscribe(data => {\r\n      this.APPROVEDTotalPages = data?.totalPages;\r\n      this.loading = false;\r\n      console.log('resp data :: ', data);\r\n      this.APPROVEDArr = [];\r\n      for (let index = 0; index < data?.customerInfoList.length; index++) {\r\n        const element = data.customerInfoList[index];\r\n        this.APPROVEDArr.push(element);\r\n        \r\n      }\r\n       \r\n    })\r\n  }\r\n  else  if(statusItem == 'REJECTED'){\r\n    this.apiService.getKycDetails(params,statusItem)\r\n    .subscribe(data => {\r\n      this.REJECTEDTotalPages = data?.totalPages;\r\n      this.loading = false;\r\n      console.log('resp data :: ', data);\r\n      this.REJECTEDArr = [];\r\n      for (let index = 0; index < data?.customerInfoList.length; index++) {\r\n        const element = data.customerInfoList[index];\r\n        this.REJECTEDArr.push(element);\r\n        \r\n      }\r\n    })\r\n  }\r\n  }\r\n  }\r\n//   getAdditionalDocumentsDetails(customerId: string) {\r\n//     this.document_type = \"11\";\r\n\r\n//     this.apiService.getBiometricDoc(customerId, this.document_type).subscribe((result) => {\r\n//       console.log(\"result additional::\", result)\r\n//       if (result != null) {\r\n//         this.custDocuments = result;\r\n// console.log(this.custDocuments)\r\n//       }\r\n//     });\r\n//   }\r\n\r\n  resetSearchData(){\r\n    this.INITIATEDArr = [];\r\n    this.UNDER_PROCESSArr = [];\r\n    this.APPROVEDArr = [];\r\n    this.REJECTEDArr = [];\r\n    this.cdr.markForCheck();\r\n  }\r\n\r\n  searchResponseUpdate(status:string, data: any) {    \r\n    if(status == 'INITIATED'){\r\n      // this.INITIATEDArr = [];\r\n      this.INITIATEDArr.push(data);\r\n      console.log('this.INITIATEDArr :: ', this.INITIATEDArr);\r\n     }else if(status == 'UNDER_PROCESS'){\r\n      // this.UNDER_PROCESSArr = [];\r\n      this.UNDER_PROCESSArr.push(data);\r\n      console.log('this.UNDER_PROCESSArr :: ', this.UNDER_PROCESSArr);\r\n     }else if(status == 'APPROVED'){\r\n      // this.APPROVEDArr = [];\r\n      this.APPROVEDArr.push(data);\r\n      console.log('this.APPROVEDArr :: ', this.APPROVEDArr);\r\n     }else if(status == 'REJECTED'){ \r\n      // this.REJECTEDArr = [];\r\n      this.REJECTEDArr.push(data);\r\n      console.log('this.REJECTEDArr :: ', this.REJECTEDArr);\r\n     }\r\n    this.cdr.markForCheck();\r\n  }\r\n\r\n  clear(){\r\n    this.searchText = \"\";\r\n    this.getDataOnLoad();\r\n    this.isScroll = true;\r\n  }\r\n\r\n  /* @method :: to update the existing array with scroll api response */\r\n  updateDataOnScroll(status:string, data: any) {\r\n    if(status == 'INITIATED'){\r\n      const result = _.unionBy(this.INITIATEDArr, data, 'customerId');\r\n      this.INITIATEDArr = result;\r\n     }else if(status == 'UNDER_PROCESS'){\r\n      const result = _.unionBy(this.UNDER_PROCESSArr, data, 'customerId');\r\n      this.UNDER_PROCESSArr = result;\r\n     }else if(status == 'APPROVED'){\r\n      const result = _.unionBy(this.APPROVEDArr, data, 'customerId');\r\n      this.APPROVEDArr = result;\r\n     }else if(status == 'REJECTED'){ \r\n      const result = _.unionBy(this.REJECTEDArr, data, 'customerId');\r\n      this.REJECTEDArr = result;\r\n     }\r\n    this.cdr.markForCheck();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this._searchSubject.unsubscribe();\r\n\r\n    this.UNDER_PROCESSArr = [];\r\n    this.APPROVEDArr = [];\r\n    this.REJECTEDArr = [];\r\n    this.INITIATEDArr = [];\r\n\r\n    this.INITIATEDPage = 0;\r\n    this.REJECTEDPage = 0;\r\n    this.APPROVEDPage = 0;\r\n    this.UNDER_PROCESSPage = 0;\r\n\r\n    this.INITIATEDTotalPages = 0;\r\n    this.REJECTEDTotalPages = 0;\r\n    this.APPROVEDTotalPages = 0;\r\n    this.UNDER_PROCESSTotalPages = 0;\r\n\r\n  }\r\n  \r\n  isNum(val){\r\n    return !isNaN(val);\r\n  }\r\n\r\n  isString(val){\r\n    return val;\r\n  }\r\n\r\n  getRandomColor(idx) {\r\n    var col0 = '#0d856b';\r\n    var col1 = '#d66f1b';\r\n    var col2 = '#9f52e7';\r\n    var col3 = '#e9318d';\r\n    var col4 = '#1175a3';\r\n    var col5 = '#e93131';\r\n    var col6 = '#2316d3';\r\n    var col7 = '#f557f5';\r\n    var col8 = '#d6c31b';\r\n    var col9 = '#40d61b';\r\n\r\n    if ((idx % 10) == 0) return col0;\r\n    if ((idx % 10) == 1) return col1;\r\n    if ((idx % 10) == 2) return col2;\r\n    if ((idx % 10) == 3) return col3;\r\n    if ((idx % 10) == 4) return col4;\r\n    if ((idx % 10) == 5) return col5;\r\n    if ((idx % 10) == 6) return col6;\r\n    if ((idx % 10) == 7) return col7;\r\n    if ((idx % 10) == 8) return col8;\r\n    if ((idx % 10) == 9) return col9;\r\n    return '#d86315';\r\n    // var randomColor = Math.floor(Math.random()*16777215).toString(16);\r\n    // return '#' + randomColor.slice(-6);\r\n    // var randomColor = Math.floor(0x1000000 * Math.random()).toString(16);\r\n    // return '#' + ('000000' + randomColor).slice(-6);\r\n  }\r\n}\r\n","<!-- Header Starts -->\r\n\r\n\r\n  <br>\r\n  <div class=\"search-results1\" infiniteScroll [infiniteScrollDistance]=\"2\" [infiniteScrollThrottle]=\"500\"\r\n       (scrolled)=\"onScroll($event)\" [scrollWindow]=\"false\">\r\n    <br>\r\n  <div class=\"m-333 mt-45\">\r\n    <div fxLayout=\"row\" fxLayoutGap=\"10px\">\r\n      <div fxFlex=\"60\" class=\"pl-50\">\r\n        <span class=\"task ml-24\">\r\n          KYC Task Summary\r\n        </span>\r\n      </div>\r\n  <div fxLayoutAlign=\"end center\" fxFlex=\"100\" fxLayoutAlign=\"space-between start\" fxLayoutGap=\"10px\">\r\n  \r\n      <div  class=\"search\" fxLayout=\"row\" fxLayoutGap=\"10px\">\r\n        <!-- <div class=\"full-width filter_Icon\"> -->\r\n          <!-- <mat-icon svgIcon=\"filter_icon\" aria-hidden=\"false\" class=\"mt-12\"></mat-icon> -->\r\n        <!-- </div>&nbsp; -->\r\n        \r\n        \r\n        <mat-form-field appearance=\"outline\" class=\"full-width search_field\" >\r\n          <mat-label>Search Records</mat-label>\r\n          <div fxLayoutAlign=\"center\" >\r\n            <input matInput name=\"search\" [(ngModel)]=\"searchText\" autocomplete=\"off\"\r\n            (keyup)=\"updateSearch($event.target.value)\" placeholder=\"Search ID or Name\">\r\n            <mat-spinner *ngIf=\"loading\" [diameter]=\"15\"></mat-spinner>\r\n         </div>\r\n          <mat-icon matPrefix class=\"my-icon\">search</mat-icon>\r\n          <button mat-button *ngIf=\"searchText\" matSuffix mat-icon-button (click)=\"clear()\">\r\n            <mat-icon>close</mat-icon>\r\n          </button>\r\n          <mat-hint>Search ID or Name</mat-hint>\r\n        </mat-form-field>\r\n      <!-- </div> -->\r\n      </div>\r\n    \r\n    </div>\r\n  </div><br>\r\n\r\n<!-- Header Ends -->\r\n\r\n<!-- Body Starts -->\r\n\r\n<div class=\"content\">\r\n  <!-- <div fxLayout=\"row wrap\" > -->\r\n    <div fxLayout=\"20%\" class=\"screen\">\r\n\r\n      <mat-card class=\"mat-elevation-z4\">\r\n\r\n        <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n          <span class=\"pl-6\">\r\n            <h2 class=\"statusFont\">Pending for approval ({{INITIATEDArr.length}}/{{INITIATEDTotalRecords}})</h2>\r\n          </span>\r\n          <span class=\"more_vert_icon\">\r\n            <mat-icon>more_vert</mat-icon>\r\n          </span>\r\n        </div>\r\n        <!-- <div class=\"search-results\" infiniteScroll [infiniteScrollDistance]=\"2\" [infiniteScrollThrottle]=\"500\"\r\n          (scrolled)=\"onScrollingFinished($event, 'INITIATED')\" [scrollWindow]=\"false\"> -->\r\n          <div >\r\n        <!-- | filter:searchText :: local search later to be fixed-->\r\n            <div   *ngFor=\"let items of INITIATEDArr ; let i = index\"\r\n              (click)=\"goToKycSummary(items.customerId)\">\r\n\r\n             <div class=\"graymatcard\">\r\n              <div class=\"m-333\">\r\n                <mat-icon class=\"fill-color-blue bookMark\">bookmark</mat-icon>\r\n                <span><small>{{items?.createdTime | dateAgo}}</small></span>\r\n              </div>\r\n              <mat-card-header class=\"head\">\r\n                <div mat-card-avatar class=\"circle\">\r\n                  <div *ngIf=\"items.profileImage == 'not_available'; else showAvatar\">\r\n                    <app-photo [name]=\"items?.firstName + ' ' + items.lastName\"></app-photo> \r\n                  </div>\r\n                  <ng-template #showAvatar>\r\n                    <img class=\"profilepic\" [src]=\"items.profileImage\" alt=\"\">\r\n                  </ng-template>\r\n                </div>\r\n              \r\n                <mat-card-title class=\"breakWord\" style=\"font-size: 15px; \">\r\n                  {{items.prefix}}&nbsp;{{items.firstName}}&nbsp;{{items.middleName}}&nbsp;{{items.lastName}}\r\n                </mat-card-title>\r\n                <mat-card-subtitle><span class='KYCtxt'>#{{items.customerAdditionalInfo.kycReference}}</span>\r\n                </mat-card-subtitle>\r\n              </mat-card-header>\r\n\r\n              <form class=\"head1\">\r\n\r\n                <div class=\"col1\" fxLayout=\"row\" fxLayoutGap=\"40px\">\r\n                  <span>Verification Type</span>\r\n                  <span>KYC Status</span>\r\n                </div>\r\n                <div class=\"col2\" fxLayout=\"row\" fxLayoutGap=\"68px\">\r\n                  <span>Biometric</span>\r\n                  <span class=\"fieldName\">{{items.customerAdditionalInfo.kycStatus}}</span>\r\n                </div><br />\r\n                <div class=\"col3\" fxLayout=\"row\" fxLayoutGap=\"48px\">\r\n                  <span>Mobile Number</span>\r\n                  <span>Email</span>\r\n                </div>\r\n                <div class=\"col4\" fxLayout=\"row\" fxLayoutGap=\"51px\">\r\n                  <span>{{items.phoneNumber}}</span>\r\n                  <span class=\"breakWord\">{{items.primaryEmailAdress}}</span>\r\n                </div><br>\r\n              </form>\r\n             </div>\r\n\r\n            </div>\r\n        \r\n        </div>\r\n        <br />\r\n\r\n      </mat-card>\r\n\r\n      <mat-card class=\"mat-elevation-z4\">\r\n        <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n          <span class=\"pl-6\">\r\n            <h2 class=\"statusFont\">Ongoing ({{UNDER_PROCESSArr.length}}/{{UNDER_PROCESSTotalRecords}})</h2>\r\n          </span>\r\n          <span class=\"more_vert_icon\">\r\n            <mat-icon>more_vert</mat-icon>\r\n          </span>\r\n        </div>\r\n        <!-- <div class=\"search-results\" infiniteScroll [infiniteScrollDistance]=\"2\" [infiniteScrollThrottle]=\"500\"\r\n          (scrolled)=\"onScrollingFinished($event,'UNDER_PROCESS')\" [scrollWindow]=\"false\"> -->\r\n          <div>\r\n\r\n            <div  *ngFor=\"let items of UNDER_PROCESSArr ; let i = index\"\r\n              (click)=\"goToKycSummary(items.customerId)\">\r\n              \r\n              <div class=\"graymatcard\">\r\n                <div class=\"m-333\">\r\n                  <mat-icon class=\"fill-color-blue bookMark\" style=\"color: darkorange;\">bookmark</mat-icon>\r\n                  <span><small>{{items?.createdTime | dateAgo}}</small></span>\r\n                </div>\r\n                <mat-card-header class=\"head\">\r\n                  <div mat-card-avatar class=\"circle\">\r\n                    <div *ngIf=\"items.profileImage == 'not_available'; else showAvatar\">\r\n                      <app-photo [name]=\"items?.firstName + ' ' + items.lastName\"></app-photo> \r\n                    </div>\r\n                    <ng-template #showAvatar>\r\n                      <img class=\"profilepic\" [src]=\"items.profileImage\" alt=\"\">\r\n                    </ng-template>\r\n                  </div>\r\n                 \r\n                  <mat-card-title class=\"breakWord\" style=\"font-size: 16px;\">\r\n                    {{items.prefix}}&nbsp;{{items.firstName}}&nbsp;{{items.middleName}}&nbsp;{{items.lastName}}\r\n                  </mat-card-title>\r\n                  <mat-card-subtitle><span class='KYCtxt' >#{{items.customerAdditionalInfo.kycReference}}</span>\r\n                  </mat-card-subtitle>\r\n                </mat-card-header>\r\n  \r\n                <form class=\"head1\">\r\n  \r\n                  <div class=\"col1\" fxLayout=\"row\" fxLayoutGap=\"40px\">\r\n                    <span>Verification Type</span>\r\n                    <span>KYC Status</span>\r\n                  </div>\r\n                  <div class=\"col2\" fxLayout=\"row\" fxLayoutGap=\"68px\">\r\n                    <span>Biometric</span>\r\n                    <span>{{items.customerAdditionalInfo.kycStatus}}</span>\r\n                  </div><br />\r\n                  <div class=\"col3\" fxLayout=\"row\" fxLayoutGap=\"48px\">\r\n                    <span>Mobile Number</span>\r\n                    <span>Email</span>\r\n                  </div>\r\n                  <div class=\"col4\" fxLayout=\"row\" fxLayoutGap=\"51px\">\r\n                    <span>{{items.phoneNumber}}</span>\r\n                    <span class=\"breakWord\">{{items.primaryEmailAdress}}</span>\r\n                  </div><br>\r\n                </form>\r\n              </div>\r\n\r\n            </div>\r\n         \r\n        </div>\r\n        <br />\r\n\r\n      </mat-card>\r\n\r\n\r\n      <mat-card class=\"mat-elevation-z4\">\r\n        <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n          <span class=\"pl-6\">\r\n            <h2  class=\"statusFont\">Approved ({{APPROVEDArr.length}}/{{APPROVEDTotalRecords}})</h2>\r\n          </span>\r\n          <span class=\"more_vert_icon\">\r\n            <mat-icon>more_vert</mat-icon>\r\n          </span>\r\n        </div>\r\n        <!-- <div class=\"search-results\" infiniteScroll [infiniteScrollDistance]=\"2\" [infiniteScrollThrottle]=\"500\"\r\n          (scrolled)=\"onScrollingFinished($event,'APPROVED')\" [scrollWindow]=\"false\"> -->\r\n          <div >\r\n         \r\n            <div   *ngFor=\"let items of APPROVEDArr ; let i = index\"\r\n              (click)=\"goToKycSummary(items.customerId)\">\r\n              <div class=\"graymatcard\">\r\n                <div class=\"m-333\">\r\n                  <mat-icon class=\"fill-color-blue bookMark\" style=\"color:#1FBFA9\">bookmark</mat-icon>\r\n                  <span><small>{{items?.createdTime | dateAgo}}</small></span>\r\n                </div>\r\n                <mat-card-header class=\"head\">\r\n                  <div mat-card-avatar class=\"circle\">\r\n                    <div *ngIf=\"items.profileImage == 'not_available'; else showAvatar\">\r\n                      <app-photo [name]=\"items?.firstName + ' ' + items.lastName\"></app-photo> \r\n                    </div>\r\n                    <ng-template #showAvatar>\r\n                      <img class=\"profilepic\" [src]=\"items.profileImage\" alt=\"\">\r\n                    </ng-template>\r\n                  </div>\r\n                  <!-- <div mat-card-avatar> <img src=\"assets/images/personImg.png\"></div> -->\r\n                  <mat-card-title class=\"breakWord\" style=\"font-size: 16px;\">\r\n                    {{items.prefix}}&nbsp;{{items.firstName}}&nbsp;{{items.middleName}}&nbsp;{{items.lastName}}\r\n                  </mat-card-title>\r\n                  <mat-card-subtitle><span class='KYCtxt'>#{{items.customerAdditionalInfo.kycReference}}</span>\r\n                  </mat-card-subtitle>\r\n                </mat-card-header>\r\n  \r\n                <form class=\"head1\">\r\n  \r\n                  <div class=\"col1\" fxLayout=\"row\" fxLayoutGap=\"40px\">\r\n                    <span>Verification Type</span>\r\n                    <span>KYC Status</span>\r\n                  </div>\r\n                  <div class=\"col2\" fxLayout=\"row\" fxLayoutGap=\"68px\">\r\n                    <span>Biometric</span>\r\n                    <span>{{items.customerAdditionalInfo.kycStatus}}</span>\r\n                  </div><br />\r\n                  <div class=\"col3\" fxLayout=\"row\" fxLayoutGap=\"48px\">\r\n                    <span>Mobile Number</span>\r\n                    <span>Email</span>\r\n                  </div>\r\n                  <div class=\"col4\" fxLayout=\"row\" fxLayoutGap=\"51px\">\r\n                    <span>{{items.phoneNumber}}</span>\r\n                    <span class=\"breakWord\">{{items.primaryEmailAdress}}</span>\r\n                  </div><br>\r\n                </form>\r\n              </div>\r\n\r\n              \r\n\r\n            </div>\r\n       \r\n        </div>\r\n        <br />\r\n\r\n      </mat-card>\r\n\r\n      <mat-card class=\"mat-elevation-z4\">\r\n        <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n          <span class=\"pl-6\">\r\n            <h2  class=\"statusFont\">Rejected ({{REJECTEDArr.length}}/{{REJECTEDTotalRecords}})</h2>\r\n          </span>\r\n          <span class=\"more_vert_icon\">\r\n            <mat-icon>more_vert</mat-icon>\r\n          </span>\r\n        </div>\r\n        <!-- <div class=\"search-results\" infiniteScroll [infiniteScrollDistance]=\"2\" [infiniteScrollThrottle]=\"500\"\r\n          (scrolled)=\"onScrollingFinished($event,'REJECTED')\" [scrollWindow]=\"false\"> -->\r\n          <div >\r\n          \r\n         \r\n            <div   *ngFor=\"let items of REJECTEDArr ; let i = index\"\r\n              (click)=\"goToKycSummary(items.customerId)\">\r\n              <div class=\"graymatcard\">\r\n                <div class=\"m-333\">\r\n                  <mat-icon class=\"fill-color-blue bookMark\" style=\"color: red;\">bookmark</mat-icon>\r\n                  <span><small>{{items?.createdTime | dateAgo}}</small></span>\r\n                </div>\r\n                <mat-card-header class=\"head\">\r\n                  <div mat-card-avatar class=\"circle\">\r\n                    <div *ngIf=\"items.profileImage == 'not_available'; else showAvatar\">\r\n                      <app-photo [name]=\"items?.firstName + ' ' + items.lastName\"></app-photo> \r\n                    </div>\r\n                    <ng-template #showAvatar>\r\n                      <img class=\"profilepic\" [src]=\"items.profileImage\" alt=\"\">\r\n                    </ng-template>\r\n                  </div>\r\n               \r\n                  <mat-card-title class=\"breakWord\" style=\"font-size: 16px;\">\r\n                    {{items.prefix}}&nbsp;{{items.firstName}}&nbsp;{{items.middleName}}&nbsp;{{items.lastName}}\r\n                  </mat-card-title>\r\n                  <mat-card-subtitle><span class='KYCtxt'>#{{items.customerAdditionalInfo.kycReference}}</span>\r\n                  </mat-card-subtitle>\r\n                </mat-card-header>\r\n  \r\n                <form class=\"head1\">\r\n  \r\n                  <div class=\"col1\" fxLayout=\"row\" fxLayoutGap=\"40px\">\r\n                    <span>Verification Type</span>\r\n                    <span>KYC Status</span>\r\n                  </div>\r\n                  <div class=\"col2\" fxLayout=\"row\" fxLayoutGap=\"68px\">\r\n                    <span>Biometric</span>\r\n                    <span>{{items.customerAdditionalInfo.kycStatus}}</span>\r\n                  </div><br />\r\n                  <div class=\"col3\" fxLayout=\"row\" fxLayoutGap=\"48px\">\r\n                    <span>Mobile Number</span>\r\n                    <span>Email</span>\r\n                  </div>\r\n                  <div class=\"col4\" fxLayout=\"row\" fxLayoutGap=\"51px\">\r\n                    <span>{{items.phoneNumber}}</span>\r\n                    <span class=\"breakWord\">{{items.primaryEmailAdress}}</span>\r\n                  </div><br>\r\n                </form>\r\n              </div>\r\n\r\n              \r\n\r\n            </div>\r\n         \r\n        </div>\r\n        <br />\r\n\r\n      </mat-card>\r\n\r\n    </div>\r\n  <!-- </div> -->\r\n  <br>\r\n</div>\r\n<!-- Body Ends -->\r\n</div>","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { CorporateOnboardingService } from 'app/views/others/onboarding-corporate/corporate-onboarding.service';\r\nimport * as moment from 'moment';\r\n\r\n@Component({\r\n  selector: 'app-update-corporate-identity',\r\n  templateUrl: './update-corporate-identity.component.html',\r\n  styleUrls: ['./update-corporate-identity.component.scss']\r\n})\r\nexport class UpdateCorporateIdentityComponent implements OnInit {\r\n  identityUpdateForm: FormGroup;\r\n  minDate = new Date();\r\n  validDate = new Date();\r\n  maxDate = new Date();\r\n  corporateId: any;\r\n  constructor(\r\n    private dialogRef: MatDialogRef<UpdateCorporateIdentityComponent>,\r\n    @Inject(MAT_DIALOG_DATA) private data,\r\n    private formBuilder: FormBuilder,\r\n    private ls: LocalStoreService,\r\n    private apiService: ApiService,\r\n    private corporateService: CorporateOnboardingService,\r\n    private snack: MatSnackBar\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.corporateId = this.ls.getItem('corporateId')\r\n    console.log(this.data);\r\n    if (this.data) {\r\n      this.buildIdentityForm();\r\n      this.identityUpdateForm.patchValue(this.data)\r\n    }\r\n    else {\r\n      this.buildIdentityForm();\r\n    }\r\n  }\r\n  buildIdentityForm() {\r\n    this.identityUpdateForm = this.formBuilder.group({\r\n      corporateId: [this.corporateId],\r\n      incorporationNumber: ['', [Validators.required, Validators.pattern(\"^[a-zA-Z0-9]{0,35}$\")]],\r\n      dateOfIssue: ['', [Validators.required]],\r\n      dateOfExpiry: ['', [Validators.required]],\r\n      isAnotherIdProofRequired: ['NO'],\r\n      idProofList: this.formBuilder.array([])\r\n    })\r\n  }\r\n  get getDocumentList() {\r\n    return this.identityUpdateForm.get('idProofList') as FormArray;\r\n  }\r\n  addDocument() {\r\n    this.getDocumentList.push(this.formBuilder.group({\r\n      idType: ['', [Validators.required]],\r\n      idNumber: ['', [Validators.required]],\r\n    }));\r\n  }\r\n  deleteDocument(item, i) {\r\n    console.log('delete record :: ', item, ' index :: ', i);\r\n    this.getDocumentList.removeAt(i);\r\n  }\r\n  onSubmit(directorFormGroup) {\r\n    let obj = {}\r\n    Object.keys(directorFormGroup).map(function (key, index) {\r\n      if (key === 'dateOfIssue' || key === 'dateOfExpiry') {\r\n        directorFormGroup[key] = moment(directorFormGroup[key]).format('YYYY-MM-DD');\r\n        obj[key] = directorFormGroup[key]\r\n      } else {\r\n        if (key != 'isAnotherIdProofRequired' && key != 'idProofList') {\r\n          obj[key] = directorFormGroup[key]\r\n        }\r\n      }\r\n    });\r\n    this.corporateService.saveOrUpdateCorporateAccountInfo(obj)\r\n      .subscribe(data => {\r\n        console.log('data :: ', data);\r\n        if (data != null) {\r\n          this.snack.open(`Proof of identity Updated` + ' !', 'OK', {\r\n            duration: 4000,\r\n            verticalPosition: 'top',\r\n            horizontalPosition: 'right'\r\n          });\r\n          this.dialogRef.close({\r\n            status:\"INITIATED\",\r\n            resp:obj\r\n          })\r\n        } else {\r\n          this.snack.open('Not able to connect to server!', 'INTERNAL SERVER ERROR', {\r\n            duration: 4000,\r\n            verticalPosition: 'top',\r\n            horizontalPosition: 'right'\r\n          });\r\n        }\r\n      }, error => {\r\n        console.log('error resp :: ', error);\r\n        this.snack.open(`${error.error.message} `, 'OK', {\r\n          duration: 4000,\r\n          verticalPosition: 'top',\r\n          horizontalPosition: 'right'\r\n        });\r\n      });\r\n  }\r\n\r\n  close() {\r\n    this.dialogRef.close({\r\n      status: 'UNDER_PROCESS'\r\n    })\r\n  }\r\n}\r\n","<div fxLayout=\"row\" fxLayoutAlign=\"end\">\r\n    <mat-icon class=\"closeIcon\" (click)=\"close()\">close</mat-icon>\r\n</div>\r\n<h1 mat-dialog-title>Proof Of Identity</h1>\r\n<mat-dialog-content>\r\n    <form [formGroup]=\"identityUpdateForm\">\r\n        <div>\r\n            <legend visible=\"true\">Certificate of Incorporation Details</legend>\r\n            <div>\r\n                <div fxFlex=\"33.33%\" fxFlex.xs=\"100%\" class=\"full-width\">\r\n                    <mat-hint class=\"hintClass\">Incorporation Number*</mat-hint>\r\n                    <mat-card class=\"inputCard\">\r\n                        <input matInput formControlName=\"incorporationNumber\" placeholder=\"Incorporation Number\"\r\n                            maxLength=\"35\" minLength=\"0\" onlyNumber>\r\n                    </mat-card>\r\n                    <mat-error\r\n                        *ngIf=\"identityUpdateForm.get('incorporationNumber').touched && identityUpdateForm.get('incorporationNumber').hasError('required')\">\r\n                        Incorporation Number is Required!\r\n                    </mat-error>\r\n                    <mat-error *ngIf=\"identityUpdateForm.get('incorporationNumber').hasError('pattern')\">\r\n                        Please Enter Valid Incorporation Number!\r\n                    </mat-error>\r\n                </div>\r\n                <div fxFlex=\"33.33%\" fxFlex.xs=\"100%\" class=\"full-width\">\r\n                    <mat-hint class=\"hintClass\">Date of Issue*</mat-hint>\r\n                    <mat-card class=\"inputCard\">\r\n                        <input matInput id=\"forIddateOfIssue\" [matDatepicker]=\"dateOfIssue\" [max]=\"maxDate\"\r\n                        readonly formControlName=\"dateOfIssue\">\r\n                    <mat-datepicker-toggle matSuffix [for]=\"dateOfIssue\"></mat-datepicker-toggle>\r\n                    <mat-datepicker #dateOfIssue></mat-datepicker>\r\n                    </mat-card>\r\n                    <mat-error\r\n                        *ngIf=\"identityUpdateForm.get('dateOfIssue').touched && !identityUpdateForm.get('dateOfIssue').valid\">\r\n                        <small>Please Select Date of Issue</small>\r\n                    </mat-error>\r\n                </div>\r\n                <div fxFlex=\"33.33%\" fxFlex.xs=\"100%\" class=\"full-width\">\r\n                    <mat-hint class=\"hintClass\">Date of Expiry*</mat-hint>\r\n                    <mat-card class=\"inputCard\">\r\n                        <input matInput id=\"forIddateOfExpiry\" [matDatepicker]=\"dateOfExpiry\" [min]=\"validDate\"\r\n                        readonly formControlName=\"dateOfExpiry\">\r\n                     <mat-datepicker-toggle matSuffix [for]=\"dateOfExpiry\"></mat-datepicker-toggle>\r\n                     <mat-datepicker #dateOfExpiry></mat-datepicker>\r\n                    </mat-card>\r\n                    <mat-error\r\n                        *ngIf=\"identityUpdateForm.get('dateOfExpiry').touched && !identityUpdateForm.get('dateOfExpiry').valid\">\r\n                        <small>Please Select Date of Expiry</small>\r\n                    </mat-error>\r\n                </div>\r\n            </div>\r\n            <div fxLayout=\"row wrap\">\r\n                <div fxFlex=\"100\" fxLayoutGap=\"20px\">\r\n                    <div fxFlex=\"28\">\r\n                        <mat-label style=\"padding-left: 10px;\"> Do you want add another proof of ID? </mat-label>\r\n                    </div>\r\n                    <div fxFlex=\"50\">\r\n                        <mat-radio-group formControlName=\"isAnotherIdProofRequired\"\r\n                            *ngFor=\"let x of ['YES','NO']; let i = index\">\r\n                            <mat-radio-button [value]=\"x\" (change)=\"radioSelection($event.value)\"\r\n                                [checked]=\"x == identityUpdateForm.value.isAnotherIdProofRequired\">{{x}}\r\n                            </mat-radio-button>&nbsp;\r\n                        </mat-radio-group>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div formArrayName=\"idProofList\" *ngIf=\"identityUpdateForm.get('isAnotherIdProofRequired').value == 'YES' \">\r\n                <div *ngFor=\"let item of identityUpdateForm.get('idProofList')['controls']; let i = index;\"\r\n                    [formGroupName]=\"i\">\r\n                    <fieldset style=\"border-top: 1px solid lightgray;margin-left: 20px; margin-right: 20px;\">\r\n                        <div fxLayout=\"row wrap\" class=\"top\">\r\n                            <div fxFlex=\"100\" fxLayoutGap=\"30px\">\r\n                                <div fxFlex=\"30\" class=\"form-group\">\r\n                                    <label for=\"forIdType\" class=\"hint\">Id Type </label>\r\n                                    <mat-form-field floatLabel=\"never\">\r\n                                        <mat-select formControlName=\"idType\" id=\"forIdType\"\r\n                                            (valueChange)=\"changeValue2($event, i)\">\r\n                                            <mat-option disabled>select---</mat-option>\r\n                                            <mat-option *ngFor=\"let idType of idTypeList\"\r\n                                                [disabled]=isDocumentOptionDisabled(idType) [value]=\"idType\">\r\n                                                {{idType}}\r\n                                            </mat-option>\r\n                                        </mat-select>\r\n                                        <mat-placeholder class=\"placeholder\">Select Id Type* </mat-placeholder>\r\n                                    </mat-form-field>\r\n                                    <mat-error *ngIf=\"item.get('idType').touched && !item.get('idType').valid\">\r\n                                        <small>Please Select Id Type</small>\r\n                                    </mat-error>\r\n                                </div>\r\n\r\n                                <div fxFlex=\"30\" class=\"form-group\">\r\n                                    <label for=\"forIdNumber\" class=\"hint\">Id Number </label>\r\n                                    <mat-form-field floatLabel=\"never\">\r\n                                        <input matInput formControlName=\"idNumber\" id=\"forIdNumber\" maxLength=\"12\"\r\n                                            minLength=\"6\">\r\n                                        <mat-placeholder class=\"placeholder\">Enter Id Number* </mat-placeholder>\r\n                                    </mat-form-field>\r\n                                    <mat-error *ngIf=\"item.get('idNumber').touched && !item.get('idNumber').valid\">\r\n                                        <small>Please Enter Id Number</small>\r\n                                    </mat-error>\r\n                                </div>\r\n\r\n\r\n                                <button mat-button (click)=\"deleteDocument(item,i)\">\r\n                                    <mat-icon style=\"color: tomato;\">delete_outline</mat-icon>\r\n                                </button>\r\n\r\n                            </div>\r\n\r\n\r\n                        </div>\r\n\r\n                    </fieldset>\r\n                </div>\r\n                <button [disabled]=\"selectedOptions.length == 3\" mat-button (click)=\"addDocument($event)\"\r\n                    color=\"primary\">\r\n                    <mat-icon>add</mat-icon> ADD\r\n                </button>\r\n            </div>\r\n\r\n\r\n        </div>\r\n    </form>\r\n</mat-dialog-content>\r\n<div fxLayout=\"row\" fxLayoutAlign=\"end\" fxLayoutGap=\"20px\">\r\n    <button type=\"button\" class=\"editbtn\" mat-raised-button [disabled]=\"identityUpdateForm.invalid\"\r\n        (click)=\"onSubmit(identityUpdateForm.value)\">Save</button>\r\n    &nbsp;&nbsp;&nbsp;\r\n    <button type=\"button\" class=\"cancelbtn\" (click)=\"close()\">\r\n        Cancel\r\n    </button>\r\n</div>","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { TasksummaryService } from '../../tasksummary.service';\r\n\r\n@Component({\r\n  selector: 'app-interest-details-update',\r\n  templateUrl: './interest-details-update.component.html',\r\n  styleUrls: ['./interest-details-update.component.scss']\r\n})\r\nexport class InterestDetailsUpdateComponent implements OnInit {\r\n\r\n  interestUpdateForm: FormGroup\r\n  accountId: any;\r\n  accountType: any;\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public data,\r\n    public dialogRef: MatDialogRef<InterestDetailsUpdateComponent>,\r\n    private api: ApiService,\r\n    private ls: LocalStoreService,\r\n    private formBuilder: FormBuilder,\r\n    public snack: MatSnackBar,\r\n    private tasksummaryService: TasksummaryService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    console.log(this.data);\r\n    this.accountId = this.ls.getItem('accountId');\r\n    this.accountType = this.ls.getItem('accountType');\r\n    this.interestUpdateForm = this.formBuilder.group({\r\n      interest: new FormArray([]),\r\n    });\r\n    if (this.data != null) {\r\n      this.buildInterestForm(this.data.length);\r\n      this.in.patchValue(this.data)\r\n    }\r\n    this.api.getFlexcubeDetails(\"intrestDetails\", this.accountType).subscribe(response => {\r\n      this.buildInterestForm(response.length)\r\n      this.in.patchValue(response)\r\n    })\r\n  }\r\n  buildInterestForm(e) {\r\n    const numberOfItems = e || 0;\r\n    if (this.in.length < numberOfItems) {\r\n      for (let i = this.in.length; i < numberOfItems; i++) {\r\n        this.in.push(\r\n          this.formBuilder.group({\r\n            intrestType: [\"\"],\r\n            intrestRateApplicable: [\"\"],\r\n            marginIn: [\"\", [Validators.required, Validators.max(100), Validators.min(0)]],\r\n            effectiveRate: [\"\", [Validators.required, Validators.max(100), Validators.min(0)]],\r\n            accountId: [\"\"],\r\n            createdDate: [\"\"],\r\n            createdBy: [\"\"],\r\n            lastModifiedDate: [\"\"],\r\n            lastModifiedBy: [\"\"],\r\n            id: ['']\r\n          })\r\n        );\r\n      }\r\n    } else {\r\n      for (let i = this.in.length; i >= numberOfItems; i--) {\r\n        this.in.removeAt(i);\r\n      }\r\n    }\r\n  }\r\n  get f() {\r\n    return this.interestUpdateForm.controls;\r\n  }\r\n  get in() {\r\n    return this.f.interest as FormArray;\r\n  }\r\n  _keyPress(event: any) {\r\n    const pattern = /[0-9]/;\r\n    let inputChar = String.fromCharCode(event.charCode);\r\n    if (!pattern.test(inputChar)) {\r\n      event.preventDefault();\r\n\r\n    }\r\n  }\r\n  onSubmit(form) {\r\n    form.interest = form.interest.map(interest => ({\r\n      ...interest,\r\n      accountId: this.accountId,\r\n    }))\r\n\r\n    this.api.intrestDetailsSave(form.interest).subscribe(resp => {\r\n      this.snack.open('Interest Details Updated!', 'OK', {\r\n        duration: 4000,\r\n        verticalPosition: 'top',\r\n        horizontalPosition: 'right'\r\n      });\r\n          this.dialogRef.close({\r\n            status: 'BACKLOG'\r\n          })\r\n    }, err => {\r\n      this.snack.open('Not able to connect to server!', 'INTERNAL SERVER ERROR', {\r\n        duration: 4000,\r\n        verticalPosition: 'top',\r\n        horizontalPosition: 'right'\r\n      });\r\n    })\r\n  }\r\n  close() {\r\n    this.dialogRef.close({\r\n      status: \"ONGOING\"\r\n    })\r\n  }\r\n}\r\n","<div fxLayout=\"row\" fxLayoutGap=\"25px\" fxLayout=\"row\" fxLayoutAlign=\"end\" class=\"contain\">\r\n    <mat-icon class=\"closeIcon\" (click)=\"close()\">close</mat-icon>\r\n</div>\r\n<h1 mat-dialog-title>Interest Details</h1>\r\n\r\n<mat-card-content>\r\n    <form *ngIf=\"interestUpdateForm\" [formGroup]=\"interestUpdateForm\">\r\n        <table>\r\n            <thead>\r\n                <tr>\r\n                    <th class=\"hintClass\">Interest Type</th>\r\n                    <th class=\"hintClass\">Interest Rate Applicable</th>\r\n                    <th class=\"hintClass\">Margin in %</th>\r\n                    <th class=\"hintClass\">Effective Rate %</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr class=\"mt-4\" *ngFor=\"let interest of in.controls; let i = index\">\r\n                    <ng-container [formGroup]=\"interest\">\r\n                        <td>\r\n                            <div>\r\n                                <mat-card fxLayout=\"row\" class=\"inputCard\">\r\n                                <input matInput formControlName=\"intrestType\" name=\"account_branch\"\r\n                                    placeholder=\"Interest Type\" readonly />\r\n                                <mat-icon matSuffix>credit_card</mat-icon>\r\n                            </mat-card>\r\n                            </div>\r\n                        </td>\r\n                        <td>\r\n                            <div>\r\n                                <mat-card class=\"inputCard\">\r\n                                    <input class=\"input\" matInput formControlName=\"intrestRateApplicable\"\r\n                                        name=\"account_branch\" placeholder=\"Interest Rate Applicable\" readonly />\r\n                                </mat-card>\r\n                            </div>\r\n                        </td>\r\n                        <td>\r\n                            <div>\r\n                                <mat-card class=\"inputCard\">\r\n                                    <input class=\"input\" matInput formControlName=\"marginIn\"\r\n                                        (keypress)=_keyPress($event) name=\"account_branch\" maxlength=\"3\" type=\"text\" />\r\n                                </mat-card>\r\n                                <mat-error class=\"errorClass\" *ngIf=\"interest.controls['marginIn'].errors?.required\">\r\n                                    Margin in % is <strong>required</strong>\r\n                                </mat-error>\r\n                                <mat-error class=\"errorClass\" *ngIf=\"interest.controls['marginIn'].errors?.max\">\r\n                                    Max value allowed is 100\r\n                                </mat-error>\r\n                            </div>\r\n                        </td>\r\n                        <td>\r\n                            <div>\r\n                                <mat-card class=\"inputCard\">\r\n                                    <input class=\"input\" matInput formControlName=\"effectiveRate\"\r\n                                        (keypress)=_keyPress($event) name=\"account_branch\" type=\"text\" maxlength=\"3\"\r\n                                        value=\"\" />\r\n                                </mat-card>\r\n                                <mat-error class=\"errorClass\" *ngIf=\"interest.controls['effectiveRate'].errors?.required\">\r\n                                    Effective Rate % is required\r\n                                </mat-error>\r\n                                <mat-error class=\"errorClass\" *ngIf=\"interest.controls['effectiveRate'].errors?.max\">\r\n                                    Max value allowed is 100\r\n                                </mat-error>\r\n                            </div>\r\n                        </td>\r\n                    </ng-container>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n    </form>\r\n</mat-card-content>\r\n\r\n<div fxLayout=\"row\" fxLayoutAlign=\"end\" fxLayoutGap=\"20px\">\r\n    <button  mat-raised-button class=\"editbtn\" color=\"primary\" (click)=\"onSubmit(interestUpdateForm.value)\"\r\n        [disabled]=\" interestUpdateForm.invalid \">Save</button>\r\n    &nbsp;&nbsp;&nbsp;\r\n    <button type=\"button\" class=\"cancelbtn\" (click)=\"close()\">\r\n        Cancel\r\n    </button>\r\n</div>","<!-- Header Starts -->\r\n<br>\r\n<div class=\"search-results1\" infiniteScroll [infiniteScrollDistance]=\"2\" [infiniteScrollThrottle]=\"500\"\r\n(scrolled)=\"onScroll($event)\" [scrollWindow]=\"false\">\r\n<br>\r\n<div class=\"m-333 mt-32\">\r\n  <mat-slide-toggle class=\"slideTogglepadding\" (change)=\"GoToCorporate()\">Switch to Corporate Onboarding</mat-slide-toggle>\r\n  <div fxLayout=\"row\" fxLayoutAlign=\"space-between start\" fxLayoutGap=\"10px\">\r\n    <div fxFlex=\"60\" class=\"summaryName\">\r\n      <span class=\"task ml-24\">\r\n        Individual Customer Onboarding Task Summary\r\n      </span>\r\n    </div>\r\n\r\n    <div fxFlex=\"30\" fxLayoutAlign=\"end center\" class=\"searchbox\">\r\n      <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n        <mat-label>Search</mat-label>\r\n        <div fxLayoutAlign=\"center\" >\r\n          <input matInput name=\"search\" [(ngModel)]=\"searchText\" autocomplete=\"off\"\r\n          (keyup)=\"updateSearch($event.target.value)\" placeholder=\"Search Customer_id or Name\">\r\n          <mat-spinner *ngIf=\"loading\" [diameter]=\"15\"></mat-spinner>\r\n       </div>\r\n        <mat-icon matPrefix class=\"my-icon\">search</mat-icon>\r\n        <button mat-button *ngIf=\"searchText\" matSuffix mat-icon-button (click)=\"clear()\">\r\n          <mat-icon>close</mat-icon>\r\n        </button>\r\n        <mat-hint>Search ID or Name</mat-hint>\r\n      </mat-form-field>\r\n    </div>\r\n\r\n\r\n  </div>\r\n</div>\r\n<!-- Header Ends -->\r\n\r\n<!-- Body Starts -->\r\n<div class=\"content\">\r\n  <!-- <div fxLayout=\"row wrap\" fxLayoutGap=\"1px grid\"> -->\r\n    <div fxLayout=\"20%\" class=\"screen\">\r\n\r\n      <mat-card class=\"mat-elevation-z4\">\r\n\r\n        <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n          <span class=\"pl-6\">\r\n            <h2 class=\"statusFont\">Pending for approval ({{INITIATEDArr.length}}/{{INITIATEDTotalRecords}})</h2>\r\n          </span>\r\n          <span class=\"more_vert_icon\">\r\n            <mat-icon>more_vert</mat-icon>\r\n          </span>\r\n        </div>\r\n        <!-- <div class=\"search-results\" infiniteScroll [infiniteScrollDistance]=\"2\" [infiniteScrollThrottle]=\"500\"\r\n          (scrolled)=\"onScrollingFinished($event, 'INITIATED')\" [scrollWindow]=\"false\"> -->\r\n          <div >\r\n            <div class=\"cardBox\" *ngFor=\"let items of INITIATEDArr ; let i = index\"\r\n              (click)=\"goToCustOnBoardingSummary(items,'INITATED', getRandomColor(i+3))\">\r\n              <div class=\"m-333\">\r\n                <mat-icon class=\"fill-color-blue bookMark\">bookmark</mat-icon>\r\n                <span><small>{{items?.createdTime | dateAgo}}</small></span>\r\n              </div>\r\n              <mat-card-header class=\"head\">\r\n                <div mat-card-avatar class=\"circle\">\r\n                  <div *ngIf=\"items.profileImage == 'not_available'; else showAvatar\">\r\n                    <app-photo [name]=\"items?.firstName + ' ' + items.lastName\"></app-photo> \r\n                  </div>\r\n                  <ng-template #showAvatar>\r\n                    <img class=\"profilepic\" [src]=\"items.profileImage\" alt=\"\">\r\n                  </ng-template>\r\n                </div>\r\n                <mat-card-title class=\"naming\">\r\n                  {{items.prefix}}&nbsp;{{items.firstName}}&nbsp;{{items.middleName}}&nbsp;{{items.lastName}}\r\n                </mat-card-title>\r\n                <mat-card-subtitle>#{{items.customerId}}</mat-card-subtitle>\r\n              </mat-card-header>\r\n\r\n              <form class=\"head1\">\r\n\r\n                <div class=\"col1\" fxLayout=\"row\" fxLayoutGap=\"40px\">\r\n                  <span>Kyc Reference </span>\r\n                  <span>Customer Status</span>\r\n                  <!-- <span>Product</span> -->\r\n                </div>\r\n                <div class=\"col2\" fxLayout=\"row\" fxLayoutGap=\"58px\">\r\n                  <span>{{items.kycReference}}</span>\r\n                  <span class=\"fieldName\">{{items.custStatus}}</span>\r\n                </div><br />\r\n                <div class=\"col3\" fxLayout=\"row\" fxLayoutGap=\"40px\">\r\n                  <span>Mobile Number</span>\r\n                  <span>Email Id</span>\r\n                </div>\r\n                <div class=\"col4\" fxLayout=\"row\" fxLayoutGap=\"44px\">\r\n                  <span>{{items.phoneNumber}}</span>\r\n                  <span>{{items.primaryEmailAdress}}</span>\r\n                </div><br>\r\n              </form>\r\n            \r\n            </div>\r\n        </div>\r\n        <br />\r\n\r\n      </mat-card>\r\n\r\n      <mat-card class=\"mat-elevation-z4\">\r\n\r\n        <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n          <span class=\"pl-6\">\r\n            <h2 class=\"statusFont\">Ongoing ({{UNDER_PROCESSArr.length}}/{{UNDER_PROCESSTotalRecords}})</h2>\r\n          </span>\r\n          <span class=\"more_vert_icon\">\r\n            <mat-icon>more_vert</mat-icon>\r\n          </span>\r\n        </div>\r\n        <!-- <div class=\"search-results\" infiniteScroll [infiniteScrollDistance]=\"2\" [infiniteScrollThrottle]=\"500\"\r\n          (scrolled)=\"onScrollingFinished($event,'UNDER_PROCESS')\" [scrollWindow]=\"false\"> -->\r\n          <div >\r\n              <div class=\"cardBox\" *ngFor=\"let items of UNDER_PROCESSArr ; let i = index\"\r\n              (click)=\"goToCustOnBoardingSummary(items,'UNDER_PROCESS',getRandomColor(i+6))\">\r\n              <div class=\"m-333\">\r\n                <mat-icon class=\"fill-color-blue bookMark bookMark1\">bookmark</mat-icon>\r\n                <span><small>{{items?.createdTime | dateAgo}}</small></span>\r\n              </div>\r\n              <mat-card-header class=\"head\">\r\n                <div mat-card-avatar class=\"circle\">\r\n                  <div *ngIf=\"items.profileImage == 'not_available'; else showAvatar\">\r\n                    <app-photo [name]=\"items?.firstName + ' ' + items.lastName\"></app-photo> \r\n                  </div>\r\n                  <ng-template #showAvatar>\r\n                    <img class=\"profilepic\" [src]=\"items.profileImage\" alt=\"\">\r\n                  </ng-template>\r\n                </div>\r\n                <mat-card-title  class=\"naming\">\r\n                  {{items.prefix}}&nbsp;{{items.firstName}}&nbsp;{{items.middleName}}&nbsp;{{items.lastName}}\r\n                </mat-card-title>\r\n                <mat-card-subtitle>#{{items.customerId}}</mat-card-subtitle>\r\n              </mat-card-header>\r\n\r\n              <form class=\"head1\">\r\n\r\n                <div class=\"col1\" fxLayout=\"row\" fxLayoutGap=\"40px\">\r\n                  <span>Kyc Reference </span>\r\n                  <span>Customer Status</span>\r\n                </div>\r\n                <div class=\"col2\" fxLayout=\"row\" fxLayoutGap=\"58px\">\r\n                  <span>{{items.kycReference}}</span>\r\n                  <span>{{items.custStatus}}</span>\r\n                </div><br />\r\n                <div class=\"col3\" fxLayout=\"row\" fxLayoutGap=\"40px\">\r\n                  <span>Mobile Number</span>\r\n                  <span>Email Id</span>\r\n                </div>\r\n                <div class=\"col4\" fxLayout=\"row\" fxLayoutGap=\"44px\">\r\n                  <span>{{items.phoneNumber}}</span>\r\n                  <span>{{items.primaryEmailAdress}}</span>\r\n                </div><br>\r\n              </form>\r\n            </div>\r\n          </div>\r\n      </mat-card>\r\n      \r\n      <mat-card class=\"mat-elevation-z4\">\r\n        <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n          <span class=\"pl-6\">\r\n            <h2 class=\"statusFont\">Approved ({{APPROVEDArr.length}}/{{APPROVEDTotalRecords}})</h2>\r\n          </span>\r\n          <span class=\"more_vert_icon\">\r\n            <mat-icon>more_vert</mat-icon>\r\n          </span>\r\n        </div>\r\n        <!-- <div class=\"search-results\" infiniteScroll [infiniteScrollDistance]=\"2\" [infiniteScrollThrottle]=\"500\"\r\n          (scrolled)=\"onScrollingFinished($event,'APPROVED')\" [scrollWindow]=\"false\"> -->\r\n          <div >\r\n            <div class=\"cardBox\" *ngFor=\"let items of APPROVEDArr ; let i = index\"\r\n            (click)=\"goToCustOnBoardingSummary(items,'APPROVED',getRandomColor(i+12))\">\r\n            <div class=\"m-333\">\r\n              <mat-icon class=\"fill-color-blue bookMark bookMark2\" >bookmark</mat-icon>\r\n              <span><small>{{items?.createdTime | dateAgo}}</small></span>\r\n            </div>\r\n              <mat-card-header class=\"head\">\r\n                <div mat-card-avatar class=\"circle\">\r\n                  <div *ngIf=\"items.profileImage == 'not_available'; else showAvatar\">\r\n                    <app-photo [name]=\"items?.firstName + ' ' + items.lastName\"></app-photo> \r\n                  </div>\r\n                  <ng-template #showAvatar>\r\n                    <img class=\"profilepic\" [src]=\"items.profileImage\" alt=\"\">\r\n                  </ng-template>\r\n                </div>\r\n                <mat-card-title class=\"naming\">\r\n                  {{items.prefix}}&nbsp;{{items.firstName}}&nbsp;{{items.middleName}}&nbsp;{{items.lastName}}\r\n                </mat-card-title>\r\n                <mat-card-subtitle>#{{items.customerId}}</mat-card-subtitle>\r\n              </mat-card-header>\r\n\r\n              <form class=\"head1\">\r\n\r\n                <div class=\"col1\" fxLayout=\"row\" fxLayoutGap=\"40px\">\r\n                  <span>Kyc Reference </span>\r\n                  <span>Customer Status</span>\r\n                </div>\r\n                <div class=\"col2\" fxLayout=\"row\" fxLayoutGap=\"58px\">\r\n                  <span>{{items.kycReference}}</span>\r\n                  <span>{{items.custStatus}}</span>\r\n                </div><br />\r\n                <div class=\"col3\" fxLayout=\"row\" fxLayoutGap=\"40px\">\r\n                  <span>Mobile Number</span>\r\n                  <span>Email Id</span>\r\n                </div>\r\n                <div class=\"col4\" fxLayout=\"row\" fxLayoutGap=\"44px\">\r\n                  <span>{{items.phoneNumber}}</span>\r\n                  <span>{{items.primaryEmailAdress}}</span>\r\n                </div><br>\r\n              </form>\r\n            </div>\r\n        </div>\r\n        <br />\r\n      </mat-card>\r\n\r\n      <mat-card class=\"mat-elevation-z4\">\r\n        <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n          <span class=\"pl-6\">\r\n            <h2 class=\"statusFont\">Rejected ({{REJECTEDArr.length}}/{{REJECTEDTotalRecords}})</h2>\r\n          </span>\r\n          <span class=\"more_vert_icon\">\r\n            <mat-icon>more_vert</mat-icon>\r\n          </span>\r\n        </div>\r\n        <!-- <div class=\"search-results\" infiniteScroll [infiniteScrollDistance]=\"2\" [infiniteScrollThrottle]=\"500\"\r\n        (scrolled)=\"onScrollingFinished($event,'REJECTED')\" [scrollWindow]=\"false\"> -->\r\n        <div >\r\n            <div class=\"cardBox\" *ngFor=\"let items of REJECTEDArr ; let i = index\"\r\n              (click)=\"goToCustOnBoardingSummary(items,'REJECTED',getRandomColor(i+15))\">\r\n              <div class=\"m-333\">\r\n                <mat-icon class=\"fill-color-red bookMark bookMark3\" >bookmark</mat-icon>\r\n                <span><small>{{items?.createdTime | dateAgo}}</small></span>\r\n              </div>\r\n              <mat-card-header class=\"head\">\r\n                <div mat-card-avatar class=\"circle\">\r\n                  <div *ngIf=\"items.profileImage == 'not_available'; else showAvatar\">\r\n                    <app-photo [name]=\"items?.firstName + ' ' + items.lastName\"></app-photo> \r\n                  </div>\r\n                  <ng-template #showAvatar>\r\n                    <img class=\"profilepic\" [src]=\"items.profileImage\" alt=\"\">\r\n                  </ng-template>\r\n                </div>\r\n                <mat-card-title class=\"naming\">\r\n                  {{items.prefix}}&nbsp;{{items.firstName}}&nbsp;{{items.middleName}}&nbsp;{{items.lastName}}\r\n                </mat-card-title>\r\n                <mat-card-subtitle>#{{items.customerId}}</mat-card-subtitle>\r\n              </mat-card-header>\r\n\r\n              <form class=\"head1\">\r\n\r\n                <div class=\"col1\" fxLayout=\"row\" fxLayoutGap=\"40px\">\r\n                  <span>Kyc Reference </span>\r\n                  <span>Customer Status</span>\r\n                </div>\r\n                <div class=\"col2\" fxLayout=\"row\" fxLayoutGap=\"58px\">\r\n                  <span>{{items.kycReference}}</span>\r\n                  <span>{{items.custStatus}}</span>\r\n                </div><br />\r\n                <div class=\"col3\" fxLayout=\"row\" fxLayoutGap=\"40px\">\r\n                  <span>Mobile Number</span>\r\n                  <span>Email Id</span>\r\n                </div>\r\n                <div class=\"col4\" fxLayout=\"row\" fxLayoutGap=\"44px\">\r\n                  <span>{{items.phoneNumber}}</span>\r\n                  <span>{{items.primaryEmailAdress}}</span>\r\n                </div><br>\r\n              </form>\r\n\r\n            </div>\r\n        </div>\r\n      </mat-card>\r\n\r\n    </div>\r\n  <!-- </div> -->\r\n\r\n</div>\r\n</div>\r\n<!-- Body Ends -->","import { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ChangeDetectorRef, Component, EventEmitter, HostListener, OnInit, Output } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { DialogService } from 'app/shared/services/dialogs/dialog.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { ApproverComponent } from '../approver/approver.component';\r\nimport { CustOnBoardingApproverComponent } from '../cust-on-boarding-approver/cust-on-boarding-approver.component';\r\nimport { TasksummaryService } from '../tasksummary.service';\r\nimport { Subject } from 'rxjs';\r\nimport { debounceTime } from 'rxjs/operators';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { MatRadioChange } from '@angular/material/radio';\r\nimport { isNumber } from 'highcharts';\r\nimport { SortCriteria } from 'app/shared/pipes/custom-task-summary-sorting.pipe';\r\nimport * as _ from 'lodash';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-cust-on-boarding-task-summary',\r\n  templateUrl: './cust-on-boarding-task-summary.component.html',\r\n  styleUrls: ['./cust-on-boarding-task-summary.component.scss']\r\n})\r\n\r\nexport class CustOnBoardingTaskSummaryComponent implements OnInit {\r\n  accountId: any;\r\n  searchText;\r\n  statusArr: any = ['INITIATED', 'UNDER_PROCESS', 'APPROVED', 'REJECTED']\r\n  arr: any = ['INITIATEDArr', 'UNDER_PROCESSArr', 'APPROVEDArr', 'REJECTEDArr']\r\n  INITIATEDArr: any = [];\r\n  UNDER_PROCESSArr: any = [];\r\n  REJECTEDArr: any = [];\r\n  APPROVEDArr: any = [];\r\n  \r\n  INITIATEDTotalPages: number = 0\r\n  UNDER_PROCESSTotalPages: number = 0\r\n  REJECTEDTotalPages: number = 0\r\n  APPROVEDTotalPages: number = 0\r\n\r\n  INITIATEDCount: number = 0\r\n  UNDER_PROCESSCount: number = 0\r\n  REJECTEDCount: number = 0\r\n  APPROVEDCount: number = 0\r\n\r\n  INITIATEDImage: any[] = [];\r\n  UNDER_PROCESSImage: any[] = [];\r\n  REJECTEDImage: any[] = [];\r\n  APPROVEDImage: any[] = [];\r\n\r\n  INITIATEDTotalRecords: number = 0;\r\n  UNDER_PROCESSTotalRecords: number = 0;\r\n  REJECTEDTotalRecords: number = 0;\r\n  APPROVEDTotalRecords: number = 0;\r\n\r\n  INITIATEDPage: number = 0;\r\n  UNDER_PROCESSPage: number = 0;\r\n  REJECTEDPage: number = 0;\r\n  APPROVEDPage: number = 0;\r\n\r\n  loading: boolean;\r\n\r\n  image: Object;\r\n  searchable:boolean=false;\r\n  isScroll: boolean = true\r\n  //variable for sorting data\r\n  public criteria: SortCriteria;\r\n\r\n  @Output() setValue: EventEmitter<string> = new EventEmitter();\r\n  private _searchSubject: Subject<string> = new Subject();\r\n  radioButtonSelected: any;\r\n\r\n  public listOfOptions: any = [\r\n    { label: 'Customer ID ', value: 'customerId', checked: true },\r\n    { label: 'Name ', value: 'firstName', checked: false }\r\n  ];\r\n  noDataFound: boolean = false;\r\n\r\n  constructor(public dialog: MatDialog, private ls: LocalStoreService, private tasSumService: TasksummaryService,\r\n    public cdr: ChangeDetectorRef, private apiService: ApiService, private snack: MatSnackBar, private sanitizer: DomSanitizer,\r\n    private router: Router) {\r\n    this._setSearchSubscription();\r\n  }\r\n  @HostListener('scroll', ['$event'])\r\n  onScroll(event: any) {\r\n    if(this.isScroll){\r\n        this.INITIATEDPage++;\r\n        this.getDataOnScroll(\"INITIATED\",this.INITIATEDPage,this.INITIATEDTotalPages);\r\n        \r\n        this.UNDER_PROCESSPage++;\r\n        this.getDataOnScroll(\"UNDER_PROCESS\",this.UNDER_PROCESSPage, this.UNDER_PROCESSTotalPages);\r\n         \r\n        this.APPROVEDPage++;\r\n        this.getDataOnScroll(\"APPROVED\", this.APPROVEDPage, this.APPROVEDTotalPages);\r\n\r\n        this.REJECTEDPage++;\r\n        this.getDataOnScroll(\"REJECTED\", this.REJECTEDPage, this.REJECTEDTotalPages); \r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    var task:boolean=true;\r\n    this.apiService.setTask(task);\r\n    this.accountId = this.ls.getItem('accountId');\r\n\r\n    /* @called :: on screen load */\r\n    this.getDataOnLoad();\r\n\r\n    /* @called :: to refresh data for every 1min interval */\r\n    // setInterval(() => { this.getDataOnLoad() }, 60000);\r\n\r\n    this.listOfOptions.filter(item => {\r\n      if (item.checked) {\r\n        this.radioButtonSelected = item.value;\r\n      }\r\n    });\r\n\r\n    this.criteria = {\r\n      property: this.radioButtonSelected,\r\n      descending: true\r\n    };\r\n  }\r\n\r\n  radioChange(event: MatRadioChange, data) {\r\n    this.radioButtonSelected = data.value;\r\n    this.criteria.property=this.radioButtonSelected;\r\n  }\r\n\r\n  public updateSearch(searchTextValue: string) {\r\n    this._searchSubject.next(searchTextValue);\r\n  }\r\n  private _setSearchSubscription() {\r\n    this._searchSubject.pipe(\r\n      debounceTime(1000)\r\n    ).subscribe((searchValue: string) => {\r\n      this.setValue.emit(searchValue);\r\n      console.log('search value :: ', searchValue)\r\n      console.log('search text :: ', this.searchText);\r\n      if (searchValue == null || searchValue == '' || searchValue == \"\") {\r\n        this.noDataFound = false;\r\n        this.searchable=false;\r\n        this.getDataOnLoad();\r\n        return;\r\n      }\r\n      this.searchCustomerId(searchValue);\r\n    });\r\n  }\r\n\r\n  clear(){\r\n    this.searchText = \"\";\r\n    this.isScroll = true;\r\n    this.getDataOnLoad();\r\n  }\r\n\r\n  /* @method :: to load all data on screen load */\r\n  async getDataOnLoad() {\r\n    for (let index = 0; index < this.statusArr.length; index++) {\r\n      const statusItem = this.statusArr[index];\r\n      this.fetchCustomerByStatus(statusItem,0,0);\r\n    }\r\n  }\r\n\r\n  fetchCustomerByStatus(status:string, page:number,size:number){\r\n    this.tasSumService.getAllCustOnBoardingData(status, page)\r\n          .subscribe((custResp:any) => {\r\n            console.log(\"Response\", custResp);\r\n            this.updateStatusResponse(status, custResp);\r\n          });\r\n  }\r\n  GoToCorporate(){\r\n    setTimeout(() => {\r\n      this.router.navigateByUrl('tasks/corporate-task-summary');\r\n    }, 300);\r\n  }\r\n\r\n  updateStatusResponse(status, data){\r\n    if(status == 'INITIATED'){\r\n      this.INITIATEDArr = data.customerInfoList;\r\n      this.INITIATEDTotalPages = data.totalPages;\r\n      this.INITIATEDTotalRecords = data.totalRecords;\r\n    }else if(status == 'UNDER_PROCESS'){\r\n      this.UNDER_PROCESSArr = data.customerInfoList;\r\n      this.UNDER_PROCESSTotalPages = data.totalPages;\r\n      this.UNDER_PROCESSTotalRecords = data.totalRecords;\r\n    }else if(status == 'APPROVED'){\r\n      this.APPROVEDArr = data.customerInfoList;\r\n      this.APPROVEDTotalPages = data.totalPages;\r\n      this.APPROVEDTotalRecords = data.totalRecords;\r\n    }else if(status == 'REJECTED'){ \r\n      this.REJECTEDArr = data.customerInfoList;\r\n      this.REJECTEDTotalPages = data.totalPages;\r\n      this.REJECTEDTotalRecords = data.totalRecords;\r\n      console.log(\"this.REJECTEDArr\",this.REJECTEDArr);\r\n    }\r\n\r\n    this.cdr.markForCheck();\r\n}\r\n  \r\n\r\n  /* @method :: to load data on scroll of data*/\r\n  onScrollingFinished(e, status) {\r\n    if(status == 'INITIATED'){\r\n      this.INITIATEDPage++;\r\n      this.getDataOnScroll(status,this.INITIATEDPage,this.INITIATEDTotalPages);\r\n      \r\n     }else if(status == 'UNDER_PROCESS'){\r\n     this.UNDER_PROCESSPage++;\r\n     this.getDataOnScroll(status,this.UNDER_PROCESSPage, this.UNDER_PROCESSTotalPages);\r\n       \r\n     }else if(status == 'APPROVED'){\r\n       this.APPROVEDPage++;\r\n       this.getDataOnScroll(status, this.APPROVEDPage, this.APPROVEDTotalPages);\r\n     }else if(status == 'REJECTED'){ \r\n       this.REJECTEDPage++;\r\n       this.getDataOnScroll(status, this.REJECTEDPage, this.REJECTEDTotalPages);\r\n     }\r\n  }\r\n\r\n  /* @method :: to call service ,when scroll method called */\r\n  getDataOnScroll(status,page,totalPage) {\r\n    console.log('---------scrolled----------')\r\n    if (page === totalPage) {\r\n      console.log('No scroll requied')\r\n      return;\r\n    }\r\n\r\n    this.tasSumService.getAllCustOnBoardingData(status, page)\r\n      .subscribe(data => {\r\n        console.log('count data :: ', data);\r\n        this.cdr.markForCheck();\r\n        this.updateDataOnScroll(status, data.customerInfoList);\r\n      });\r\n\r\n  }\r\n\r\n  goToCustOnBoardingSummary(data, status, colCode) {\r\n\r\n      localStorage.setItem('CustomerColorCode', colCode);\r\n    const dialogRef = this.dialog.open(CustOnBoardingApproverComponent,\r\n      {\r\n        panelClass: 'full-width-dialog',\r\n        data: { dataResp: data, recordStatus: status },\r\n        width: '80%',\r\n        disableClose: false\r\n      });\r\n    dialogRef.afterClosed().subscribe((submit) => {\r\n      console.log('dialog closed:: ', submit)\r\n      if (submit.recordStatus === 'REJECTED' || submit.recordStatus === 'APPROVED' || submit.recordStatus === 'INITIATED' || submit.recordStatus === 'UNDER_PROCESS'\r\n        || submit.data.kycStatus === 'REJECTED' || submit.data.kycStatus === 'APPROVED') {\r\n        this.getDataOnLoad()\r\n      }\r\n\r\n    })\r\n  }\r\n\r\n  searchCustomerId(searchTerm) {\r\n    let text:any;\r\n      let params:any;\r\n      if(searchTerm===''){\r\n        console.log('empty')\r\n        this.getDataOnLoad();\r\n        this.isScroll = true;\r\n        return;\r\n      }\r\n      if(this.isNum(searchTerm)){\r\n        if(searchTerm.length == 10){\r\n          console.log(\"contact\");\r\n          text=this.searchText.trim();\r\n          params = 'phoneNumber='+text;\r\n        }\r\n        else{\r\n          console.log(\"cifId\");\r\n          text=this.searchText.trim();\r\n          // params = 'customerId='+text;\r\n          this.apiService.getKycDetails1(text)\r\n          .subscribe(data => {\r\n            console.log(data)\r\n            if(data != null){\r\n              params = 'cifNumber='+text;\r\n              console.log('cif',params);\r\n            }\r\n            else{\r\n              console.log('not a cif')\r\n              params = 'customerId='+text;\r\n              console.log('customer',params);\r\n            }\r\n          })\r\n        }\r\n        \r\n      }\r\n      else if(this.isString(searchTerm)){\r\n        if( /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(searchTerm)){\r\n          console.log(\"email\");\r\n          text=this.searchText.trim();\r\n          params = 'primaryEmailAdress='+text;\r\n        }\r\n        else{\r\n        console.log(\"name\");\r\n        text=this.searchText.trim();\r\n        params = 'customerName='+text;\r\n        }\r\n      }\r\n      setTimeout(() => {\r\n        this.getCustomerData(params);\r\n      }, 1000);\r\n      this.isScroll = false;\r\n  }\r\n\r\n  getCustomerData(params) {\r\n    this.loading = true;\r\n    console.log(\"params::\",params)\r\n    for (let index = 0; index < this.statusArr.length; index++) {\r\n      const statusItem = this.statusArr[index];\r\n     if(statusItem == 'INITIATED'){\r\n    this.apiService.getKycDetails(params,statusItem)\r\n    .subscribe(data => {\r\n      this.INITIATEDTotalPages = data?.totalPages;\r\n      this.loading = false;\r\n      console.log('resp data :: ', data);\r\n      this.INITIATEDArr = [];\r\n      for (let index = 0; index < data?.customerInfoList.length; index++) {\r\n        const element = data?.customerInfoList[index];\r\n        this.INITIATEDArr.push(element);\r\n        \r\n      }\r\n      \r\n    })\r\n  }\r\n  else  if(statusItem == 'UNDER_PROCESS'){\r\n    this.apiService.getKycDetails(params,statusItem)\r\n    .subscribe(data => {\r\n      this.UNDER_PROCESSTotalPages = data?.totalPages;\r\n      this.loading = false;\r\n      console.log('resp data :: ', data);\r\n      this.UNDER_PROCESSArr = [];\r\n      for (let index = 0; index < data?.customerInfoList.length; index++) {\r\n        const element = data.customerInfoList[index];\r\n        this.UNDER_PROCESSArr.push(element);\r\n        \r\n      }\r\n       \r\n    })\r\n  }\r\n  else  if(statusItem == 'APPROVED'){\r\n    this.apiService.getKycDetails(params,statusItem)\r\n    .subscribe(data => {\r\n      this.APPROVEDTotalPages = data?.totalPages;\r\n      this.loading = false;\r\n      console.log('resp data :: ', data);\r\n      this.APPROVEDArr = [];\r\n      for (let index = 0; index < data?.customerInfoList.length; index++) {\r\n        const element = data.customerInfoList[index];\r\n        this.APPROVEDArr.push(element);\r\n        \r\n      }\r\n       \r\n    })\r\n  }\r\n  else  if(statusItem == 'REJECTED'){\r\n    this.apiService.getKycDetails(params,statusItem)\r\n    .subscribe(data => {\r\n      this.REJECTEDTotalPages = data?.totalPages;\r\n      this.loading = false;\r\n      console.log('resp data :: ', data);\r\n      this.REJECTEDArr = [];\r\n      for (let index = 0; index < data?.customerInfoList.length; index++) {\r\n        const element = data.customerInfoList[index];\r\n        this.REJECTEDArr.push(element);\r\n        \r\n      }\r\n    })\r\n  }\r\n  }\r\n  //   for (let index = 0; index < this.statusArr.length; index++) {\r\n  //     const statusItem = this.statusArr[index];\r\n  //     console.log(statusItem);\r\n      \r\n  //   // this.apiService.getKycDetails(params,statusItem)\r\n  //   // .subscribe(data => {\r\n  //   //   this.loading = false;\r\n  //   //   console.log('resp data :: ', data);\r\n  //   // //  this.resetSearchData();\r\n  //   // //   for (let index = 0; index < data.customerInfoList.length; index++) {\r\n  //   // //     const element = data.customerInfoList[index];\r\n  //   // //     this.searchResponseUpdate(element.custStatus,element);\r\n        \r\n  //   // //   }\r\n  //   // })\r\n  //   if(statusItem == 'INITIATED'){\r\n  //     this.apiService.getKycDetails(params,statusItem)\r\n  //     .subscribe(data => {\r\n  //       this.INITIATEDTotalPages = data?.totalPages;\r\n  //       this.loading = false;\r\n  //       console.log('resp data :: ', data);\r\n  //       this.INITIATEDArr = [];\r\n  //       for (let index = 0; index < data?.customerInfoList.length; index++) {     \r\n  //         const element = data.customerInfoList[index];\r\n  //         this.INITIATEDArr.push(element);\r\n          \r\n  //       }  \r\n  //     })\r\n  //   }\r\n  //   else  if(statusItem == 'UNDER_PROCESS'){\r\n  //     this.apiService.getKycDetails(params,statusItem)\r\n  //     .subscribe(data => {\r\n  //       this.UNDER_PROCESSTotalPages = data?.totalPages;\r\n  //       this.loading = false;\r\n  //       console.log('resp data :: ', data);\r\n  //       this.UNDER_PROCESSArr = [];\r\n  //       for (let index = 0; index < data.customerInfoList.length; index++) {\r\n  //         const element = data?.customerInfoList[index];\r\n  //         this.UNDER_PROCESSArr.push(element);\r\n          \r\n  //       }  \r\n  //     })\r\n  //   }\r\n  //   else  if(statusItem == 'APPROVED'){\r\n  //     this.apiService.getKycDetails(params,statusItem)\r\n  //     .subscribe(data => {\r\n  //       this.APPROVEDTotalPages = data?.totalPages;\r\n  //       this.loading = false;\r\n  //       console.log('resp data :: ', data);\r\n  //       this.APPROVEDArr = [];\r\n  //       for (let index = 0; index < data.customerInfoList.length; index++) { \r\n  //         const element = data?.customerInfoList[index];\r\n  //         this.APPROVEDArr.push(element);\r\n          \r\n  //       }  \r\n  //     })\r\n  //   }\r\n  //   else  if(statusItem === 'REJECTED'){\r\n  //     console.log(\"hiii\");\r\n      \r\n  //     this.apiService.getKycDetails(params,statusItem)\r\n  //     .subscribe(data => {\r\n  //       console.log('resp data :: ', data);\r\n  //       this.REJECTEDTotalPages = data?.totalPages;\r\n  //       this.loading = false;\r\n  //       console.log('resp data :: ', data);\r\n  //       this.REJECTEDArr = [];\r\n  //       for (let index = 0; index < data.customerInfoList.length; index++) {     \r\n  //         const element = data?.customerInfoList[index];\r\n  //         this.REJECTEDArr.push(element);\r\n          \r\n  //       }  \r\n  //       console.log(\"rejected arr\", this.REJECTEDArr);\r\n        \r\n  //     })\r\n  //   }else{\r\n  //     console.log(\"else\")\r\n  //   }\r\n  // }\r\n  }\r\n  resetSearchData(){\r\n    this.INITIATEDArr = [];\r\n    this.UNDER_PROCESSArr = [];\r\n    this.APPROVEDArr = [];\r\n    this.REJECTEDArr = [];\r\n    this.cdr.markForCheck();\r\n  }\r\n  \r\n  searchResponseUpdate(status:string, data: any) {\r\n    if(status == 'INITIATED'){\r\n      // this.INITIATEDArr = [];\r\n      this.INITIATEDArr.push(data);\r\n      console.log('this.INITIATEDArr :: ', this.INITIATEDArr);\r\n     }else if(status == 'UNDER_PROCESS'){\r\n      // this.UNDER_PROCESSArr = [];\r\n      this.UNDER_PROCESSArr.push(data);\r\n      console.log('this.UNDER_PROCESSArr :: ', this.UNDER_PROCESSArr);\r\n     }else if(status == 'APPROVED'){\r\n      // this.APPROVEDArr = [];\r\n      this.APPROVEDArr.push(data);\r\n      console.log('this.APPROVEDArr :: ', this.APPROVEDArr);\r\n     }else if(status == 'REJECTED'){ \r\n      // this.REJECTEDArr = [];\r\n      this.REJECTEDArr.push(data);\r\n      console.log('this.REJECTEDArr :: ', this.REJECTEDArr);\r\n     }\r\n    this.cdr.markForCheck();\r\n  }\r\n\r\n  getProfileImage(customerId){\r\n    this.apiService.getProfileDetails(customerId)\r\n    .subscribe((data:any) => {\r\n      console.log(data);\r\n      console.log(data.profileImage); \r\n      this.searchable=false;\r\n      if(data.profileImage!=null){\r\n      let objectURL = 'data:image/jpeg;base64,' + data.profileImage.fileData;\r\n      this.searchable=true;\r\n      this.image = this.sanitizer.bypassSecurityTrustUrl(objectURL);\r\n      console.log(this.searchable,\"Searchable\");\r\n      }\r\n     \r\n    },(error:any) => {\r\n      console.log(error);\r\n    });\r\n  }\r\n  getCustomerIdData(valueToFilter) {\r\n    console.log('get kyc')\r\n    if (valueToFilter != '' && valueToFilter != undefined && valueToFilter != null) {\r\n      this.apiService.getKycTaskSummaryAll(valueToFilter, this.searchText)\r\n        .subscribe(data => {\r\n          this.cdr.markForCheck();\r\n            this.cdr.detectChanges();\r\n          if (data != null) {\r\n            var value = data[0].customerAdditionalInfo.kycStatus + 'Arr';\r\n            this[value].splice(0, 0, data[0])\r\n            this[value] = this[value].slice();\r\n            console.log('resp value :: ', this[value]);\r\n          } else {\r\n            this.noDataFound = true;\r\n          }\r\n\r\n        })\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this._searchSubject.unsubscribe();\r\n\r\n    this.UNDER_PROCESSArr = [];\r\n    this.APPROVEDArr = [];\r\n    this.REJECTEDArr = [];\r\n    this.INITIATEDArr = [];\r\n\r\n    this.INITIATEDPage = 0;\r\n    this.REJECTEDPage = 0;\r\n    this.APPROVEDPage = 0;\r\n    this.UNDER_PROCESSPage = 0;\r\n\r\n    this.INITIATEDTotalPages = 0;\r\n    this.REJECTEDTotalPages = 0;\r\n    this.APPROVEDTotalPages = 0;\r\n    this.UNDER_PROCESSTotalPages = 0;\r\n  }\r\n\r\n  /* @method :: to update the existing array with scroll api response */\r\n  async updateDataOnScroll(status:string, data: any) {\r\n    if(status == 'INITIATED'){\r\n      const result = _.unionBy(this.INITIATEDArr, data, 'customerId');\r\n      this.INITIATEDArr = result;\r\n     }else if(status == 'UNDER_PROCESS'){\r\n      const result = _.unionBy(this.UNDER_PROCESSArr, data, 'customerId');\r\n      this.UNDER_PROCESSArr = result;\r\n     }else if(status == 'APPROVED'){\r\n      const result = _.unionBy(this.APPROVEDArr, data, 'customerId');\r\n      this.APPROVEDArr = result;\r\n     }else if(status == 'REJECTED'){ \r\n      const result = _.unionBy(this.REJECTEDArr, data, 'customerId');\r\n      this.REJECTEDArr = result;\r\n     }\r\n    this.cdr.markForCheck();\r\n  }\r\n\r\n  \r\n  isNum(val){\r\n    return !isNaN(val);\r\n  }\r\n\r\n  isString(val){\r\n    return val;\r\n  }\r\n\r\n  getRandomColor(idx) {\r\n    var col0 = '#0d856b';\r\n    var col1 = '#d66f1b';\r\n    var col2 = '#9f52e7';\r\n    var col3 = '#e9318d';\r\n    var col4 = '#1175a3';\r\n    var col5 = '#e93131';\r\n    var col6 = '#2316d3';\r\n    var col7 = '#f557f5';\r\n    var col8 = '#d6c31b';\r\n    var col9 = '#40d61b';\r\n\r\n    if ((idx % 10) == 0) return col0;\r\n    if ((idx % 10) == 1) return col1;\r\n    if ((idx % 10) == 2) return col2;\r\n    if ((idx % 10) == 3) return col3;\r\n    if ((idx % 10) == 4) return col4;\r\n    if ((idx % 10) == 5) return col5;\r\n    if ((idx % 10) == 6) return col6;\r\n    if ((idx % 10) == 7) return col7;\r\n    if ((idx % 10) == 8) return col8;\r\n    if ((idx % 10) == 9) return col9;\r\n    return '#d86315';\r\n\r\n  }\r\n\r\n}\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { TasksummaryService } from '../../tasksummary.service';\r\n\r\n@Component({\r\n  selector: 'app-charge-details-update',\r\n  templateUrl: './charge-details-update.component.html',\r\n  styleUrls: ['./charge-details-update.component.scss']\r\n})\r\nexport class ChargeDetailsUpdateComponent implements OnInit {\r\n\r\n  chargeUpdateForm: FormGroup\r\n  accountId: any;\r\n  accountType: any;\r\n  flag: any;\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public data,\r\n    public dialogRef: MatDialogRef<ChargeDetailsUpdateComponent>,\r\n    private api: ApiService,\r\n    private formBuilder: FormBuilder,\r\n    private ls: LocalStoreService,\r\n    public snack: MatSnackBar,\r\n    private tasksummaryService: TasksummaryService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    console.log(this.data);\r\n    this.accountId = this.ls.getItem('accountId');\r\n    this.accountType = this.ls.getItem('accountType');\r\n    this.chargeUpdateForm = this.formBuilder.group({\r\n      charges: new FormArray([])\r\n    });\r\n    if (this.data != null) {\r\n      this.buildChargeForm(this.data.length)\r\n      this.c.patchValue(this.data)\r\n    }\r\n    this.api.getFlexcubeDetails(\"chargeDetails\", this.accountType).subscribe(response => {\r\n      this.buildChargeForm(response.length)\r\n      this.c.patchValue(response)\r\n    })\r\n\r\n  }\r\n  buildChargeForm(e) {\r\n    const numberOfItems = e || 0;\r\n    if (this.c.length < numberOfItems) {\r\n      for (let i = this.c.length; i < numberOfItems; i++) {\r\n        this.c.push(this.formBuilder.group({\r\n          intrestType: [''],\r\n          amount: ['', Validators.required],\r\n          waiver: [false],\r\n          accountId: [this.accountId],\r\n          createdDate: [''],\r\n          craetedBy: [''],\r\n          lastModifiedDate: [''],\r\n          lastModifiedBy: [''],\r\n          id: ['']\r\n\r\n        }));\r\n      }\r\n    } else {\r\n      for (let i = this.c.length; i >= numberOfItems; i--) {\r\n        this.c.removeAt(i);\r\n      }\r\n    }\r\n  }\r\n  get f() { return this.chargeUpdateForm.controls; }\r\n  get c() { return this.f.charges as FormArray; }\r\n  onSubmit(form) {\r\n    form.charges = form.charges.map(charges => ({\r\n      ...charges,\r\n      accountId: this.accountId,\r\n    }))\r\n    form.accountId = this.accountId\r\n    this.api.chargeDetailsSave(form.charges).subscribe(resp => {\r\n      this.snack.open('Account Saved!', 'OK', {\r\n        duration: 4000,\r\n        verticalPosition: 'top',\r\n        horizontalPosition: 'right'\r\n      });\r\n          this.dialogRef.close({\r\n            status: 'BACKLOG'\r\n          })\r\n    }, err => {\r\n      this.snack.open('Server Error!', 'OK', {\r\n        duration: 4000,\r\n        verticalPosition: 'top',\r\n        horizontalPosition: 'right'\r\n      });\r\n    })\r\n\r\n  }\r\n  _keyPress(event: any) {\r\n    const pattern = /[0-9]/;\r\n    let inputChar = String.fromCharCode(event.charCode);\r\n    if (!pattern.test(inputChar)) {\r\n      event.preventDefault();\r\n\r\n    }\r\n  }\r\n  checkboxChanged(event) {\r\n    console.log(event.checked);\r\n    this.flag = event.checked;\r\n  }\r\n  close() {\r\n    this.dialogRef.close({\r\n      status: \"ONGOING\"\r\n    })\r\n  }\r\n}","<div fxLayout=\"row\" fxLayoutGap=\"25px\" fxLayout=\"row\" fxLayoutAlign=\"end\" class=\"contain\">\r\n    <mat-icon class=\"closeIcon\" (click)=\"close()\">close</mat-icon>\r\n</div>\r\n<h1 mat-dialog-title>Charge Details</h1>\r\n<mat-dialog-content>\r\n    <mat-card>\r\n        <form *ngIf=\"chargeUpdateForm\" [formGroup]=\"chargeForm\">\r\n            <thead>\r\n                <tr>\r\n                    <th class=\"hintClass\">Interest Type</th>\r\n                    <th class=\"hintClass\">Amount*</th>\r\n                    <th class=\"hintClass\">Waiver</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr *ngFor=\"let charge of c.controls; let i = index\">\r\n                    <ng-container [formGroup]=\"charge\">\r\n                        <td>\r\n                            <div>\r\n                                <mat-card fxLayout=\"row\" class=\"inputCard\">\r\n                                    <input matInput formControlName=\"intrestType\" name=\"account_branch\"\r\n                                        placeholder=\"Interest Type\" (keypress)=_keyPress($event) />\r\n                                    <mat-icon matSuffix>credit_card</mat-icon>\r\n                                </mat-card>\r\n                            </div>\r\n                        </td>\r\n                        <td>\r\n                            <div>\r\n                                <mat-card fxLayout=\"row\" class=\"inputCard\">\r\n                                    <input matInput formControlName=\"amount\" type=\"number\" name=\"account_branch\"\r\n                                        placeholder=\"Amount\" />\r\n                                    <mat-icon matSuffix>class</mat-icon>\r\n                                </mat-card>\r\n                                <mat-error class=\"errorClass\" *ngIf=\"charge.controls['amount'].errors?.required && charge.controls['amount'].touched\">\r\n                                    amount is required\r\n                                </mat-error>\r\n                            </div>\r\n                        </td>\r\n                        <td>\r\n                            <div style=\"text-align: center;\" class=\"waiver-pos\">\r\n                                <mat-checkbox formControlName=\"waiver\" (change)=\"checkboxChanged($event)\"\r\n                                    color=\"primary\"></mat-checkbox>\r\n                            </div>\r\n\r\n                        </td>\r\n                    </ng-container>\r\n                </tr>\r\n            </tbody>\r\n        </form>\r\n    </mat-card>\r\n</mat-dialog-content>\r\n<div fxLayout=\"row\" fxLayoutAlign=\"end\" fxLayoutGap=\"20px\">\r\n    <button type=\"button\" class=\"editbtn\" mat-raised-button [disabled]=\"chargeUpdateForm.invalid\"\r\n        (click)=\"onSubmit(chargeUpdateForm.value)\">Save</button>\r\n    &nbsp;&nbsp;&nbsp;\r\n    <button type=\"button\" class=\"cancelbtn\" (click)=\"close()\">\r\n        Cancel\r\n    </button>\r\n</div>","import { ChangeDetectorRef, Component, Inject, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport * as moment from 'moment';\r\nimport Swal from 'sweetalert2';\r\nimport { TasksummaryService } from '../../tasksummary.service';\r\n\r\n@Component({\r\n  selector: 'app-financial-details-update',\r\n  templateUrl: './financial-details-update.component.html',\r\n  styleUrls: ['./financial-details-update.component.scss']\r\n})\r\nexport class FinancialDetailsUpdateComponent implements OnInit {\r\n\r\n  financialDetailsUpdate: FormGroup;\r\n  incomeErrMsg: any;\r\n  disableNext: boolean;\r\n  ExpensesErrMsg: any;\r\n  LiabilitiesErrMsg: any;\r\n  assetErrMsg: string;\r\n  arrayEmploymentType: any;\r\n  accountId: any;\r\n  arrayEmploymentCategory: string[];\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public data,\r\n    public dialogRef: MatDialogRef<FinancialDetailsUpdateComponent>,\r\n    private formBuilder: FormBuilder,\r\n    private ls: LocalStoreService,\r\n    private cdr: ChangeDetectorRef,\r\n    private api: ApiService,\r\n    public snack: MatSnackBar,\r\n    private tasksummaryService: TasksummaryService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    console.log(this.data, 'AccountId: ', this.ls.getItem('accountId'));\r\n\r\n    this.accountId = this.ls.getItem('accountId')\r\n    this.getEmploymentType(\"fin_employment_type\");\r\n    this.getEmploymentCategory(\"employment_category\");\r\n    if (this.data != null) {\r\n      this.buildFinacialFormGroup(this.data)\r\n    }\r\n    else {\r\n      this.buildFinacialFormGroup();\r\n    }\r\n  }\r\n\r\n  buildFinacialFormGroup(data?) {\r\n    this.financialDetailsUpdate = this.formBuilder.group({\r\n      // Financial Details\r\n      applicantName: [data ? data.applicantName : '', Validators.required],\r\n      applicantTotalIncome: [data ? data.applicantTotalIncome : 0, Validators.required],\r\n      applicantTotalExpense: [data ? data.applicantTotalExpense : 0, Validators.required],\r\n      lastUpdatedon: [data ? new Date(data.lastUpdatedon) : ''],\r\n      limit_end_date: [data ? new Date(data.limit_end_date) : ''],\r\n\r\n      // Employement Details\r\n      employmentType: [data ? data.employmentType : '', Validators.required],\r\n      employmentCategory: [data ? data.employmentCategory : '', Validators.required],\r\n      employeeNumber: [data ? data.employeeNumber : '', Validators.required],\r\n      officeName: [data ? data.officeName : '', Validators.required],\r\n      designation: [data ? data.designation : '', Validators.required],\r\n      employmentStartDate: [data ? new Date(data.employmentStartDate) : ''],\r\n      employmentEndDate: [data ? new Date(data.employmentEndDate) : ''],\r\n\r\n      // Monthly Income\r\n      salary: [data ? data.salary : ''],\r\n      interestIncome: [data ? data.interestIncome : ''],\r\n      bonus: [data ? data.bonus : ''],\r\n      cashGifts: [data ? data.cashGifts : ''],\r\n      business: [data ? data.business : ''],\r\n      pension: [data ? data.pension : ''],\r\n      monthlyIncomeRentals: [data ? data.monthlyIncomeRentals : ''],\r\n      monthlyIncomeOthers: [data ? data.monthlyIncomeOthers : ''],\r\n      monthlyIncomeTotal: [data ? data.monthlyIncomeTotal : 0],\r\n\r\n      // Monthly Expense\r\n      household: [data ? data.household : ''],\r\n      education: [data ? data.education : ''],\r\n      vehicleMaintenance: [data ? data.vehicleMaintenance : ''],\r\n      monthlyExpenseRentals: [data ? data.monthlyExpenseRentals : ''],\r\n      monthlyExpenseOthers: [data ? data.monthlyExpenseOthers : ''],\r\n      medical: [data ? data.medical : ''],\r\n      travel: [data ? data.travel : ''],\r\n      monthlyExpenseTotal: [data ? data.monthlyExpenseTotal : 0],\r\n\r\n      // Annual Liability\r\n      propertyLoan: [data ? data.propertyLoan : ''],\r\n      vehicleLoan: [data ? data.vehicleLoan : ''],\r\n      personalLoans: [data ? data.personalLoans : ''],\r\n      overdraft: [data ? data.overdraft : ''],\r\n      cardOutstandings: [data ? data.cardOutstandings : ''],\r\n      liabilityOthers: [data ? data.liabilityOthers : ''],\r\n      liabilityTotal: [data ? data.liabilityTotal : 0],\r\n\r\n      // Assets\r\n      savingDeposits: [data ? data.savingDeposits : ''],\r\n      properties: [data ? data.properties : ''],\r\n      automobiles: [data ? data.automobiles : ''],\r\n      fixedDeposits: [data ? data.fixedDeposits : ''],\r\n      lands: [data ? data.lands : ''],\r\n      assetOthers: [data ? data.assetOthers : ''],\r\n      stocks: [data ? data.stocks : ''],\r\n      assetTotal: [data ? data.assetTotal : 0],\r\n\r\n      // accountId; -->need to get from other screens\r\n      accountId: this.ls.getItem('accountId'),\r\n    }, {\r\n      validator: (formGroup: FormGroup) => {\r\n        return this.validateInputGroups(formGroup)\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n  validateInputGroups(formgroup: FormGroup) {\r\n    if (formgroup.controls[\"salary\"].value || formgroup.controls[\"interestIncome\"].value ||\r\n      formgroup.controls[\"bonus\"].value || formgroup.controls[\"cashGifts\"].value ||\r\n      formgroup.controls[\"business\"].value || formgroup.controls[\"pension\"].value ||\r\n      formgroup.controls[\"monthlyIncomeRentals\"].value || formgroup.controls[\"monthlyIncomeOthers\"].value) {\r\n\r\n      this.incomeErrMsg = null\r\n      this.disableNext = true;\r\n\r\n    }\r\n    else {\r\n      this.incomeErrMsg = \"Entering any one field is mandatory for Monthly Income Section\";\r\n      this.disableNext = false;\r\n    }\r\n\r\n    if (formgroup.controls[\"household\"].value || formgroup.controls[\"education\"].value ||\r\n      formgroup.controls[\"vehicleMaintenance\"].value || formgroup.controls[\"monthlyExpenseRentals\"].value ||\r\n      formgroup.controls[\"monthlyExpenseOthers\"].value || formgroup.controls[\"medical\"].value ||\r\n      formgroup.controls[\"travel\"].value) {\r\n\r\n      this.ExpensesErrMsg = null;\r\n      this.disableNext = true;\r\n\r\n    }\r\n    else {\r\n      this.ExpensesErrMsg = \"Entering any one field is mandatory for Monthly Expenses Section\";\r\n      this.disableNext = false;\r\n    }\r\n\r\n    if (formgroup.controls[\"propertyLoan\"].value || formgroup.controls[\"vehicleLoan\"].value ||\r\n      formgroup.controls[\"personalLoans\"].value || formgroup.controls[\"overdraft\"].value ||\r\n      formgroup.controls[\"cardOutstandings\"].value || formgroup.controls[\"liabilityOthers\"].value) {\r\n\r\n      this.LiabilitiesErrMsg = null;\r\n      this.disableNext = true;\r\n\r\n    }\r\n    else {\r\n      this.LiabilitiesErrMsg = \"Entering any one field is mandatory for Annual Liabilities Section\";\r\n      this.disableNext = false;\r\n    }\r\n\r\n    if (formgroup.controls[\"savingDeposits\"].value || formgroup.controls[\"properties\"].value ||\r\n      formgroup.controls[\"automobiles\"].value || formgroup.controls[\"fixedDeposits\"].value ||\r\n      formgroup.controls[\"lands\"].value || formgroup.controls[\"assetOthers\"].value ||\r\n      formgroup.controls[\"stocks\"].value) {\r\n\r\n      this.assetErrMsg = null;\r\n      this.disableNext = true;\r\n\r\n    }\r\n    else {\r\n      this.assetErrMsg = \"Entering any one field is mandatory for Asset Section\";\r\n      this.disableNext = false;\r\n    }\r\n  }\r\n\r\n  onSubmit() {\r\n    let startDate = this.converDate(this.financialDetailsUpdate.controls.employmentStartDate.value);\r\n    if (startDate && startDate != \"Invalid date\") {\r\n      console.log(\"startDate\", startDate);\r\n      this.financialDetailsUpdate.value['employmentStartDate'] = startDate;\r\n    } else {\r\n      this.financialDetailsUpdate.value['employmentStartDate'] = null;\r\n    }\r\n    let endDate = this.converDate(this.financialDetailsUpdate.controls.employmentEndDate.value);\r\n    if (endDate && endDate != \"Invalid date\") {\r\n      console.log(\"startDate\", endDate);\r\n      this.financialDetailsUpdate.value['employmentEndDate'] = endDate;\r\n    } else {\r\n      this.financialDetailsUpdate.value['employmentEndDate'] = null;\r\n    }\r\n\r\n    let lastUpdatedon = this.converDate(this.financialDetailsUpdate.controls.lastUpdatedon.value);\r\n    if (lastUpdatedon && lastUpdatedon != \"Invalid date\") {\r\n      console.log(\"startDate\", lastUpdatedon);\r\n      this.financialDetailsUpdate.value['lastUpdatedon'] = lastUpdatedon;\r\n    } else {\r\n      this.financialDetailsUpdate.value['lastUpdatedon'] = null;\r\n    }\r\n    console.log(\"submit\", this.financialDetailsUpdate.value);\r\n\r\n    if (!this.financialDetailsUpdate.value.applicantName || !this.financialDetailsUpdate.value.employmentType || !this.financialDetailsUpdate.value.employmentCategory) {\r\n      console.log(\"if--->\")\r\n      Swal.fire('Please Enter The Mandatory Fields !');\r\n      return false;\r\n    }\r\n    this.api.upsertfinancialDetails(this.financialDetailsUpdate.value).subscribe(fincialResp => {\r\n\r\n      console.log(fincialResp);\r\n      this.snack.open('Financial Details Updated!', 'OK', {\r\n        duration: 4000,\r\n        verticalPosition: 'top',\r\n        horizontalPosition: 'right'\r\n      });\r\n          this.dialogRef.close({\r\n            status: 'BACKLOG'\r\n          })\r\n    }, err => {\r\n      this.snack.open('Error Unable to Save!', 'OK', {\r\n        duration: 4000,\r\n        verticalPosition: 'top',\r\n        horizontalPosition: 'right'\r\n      });\r\n    })\r\n\r\n  }\r\n\r\n  getEmploymentType(key: string) {\r\n    this.api.getDropDownValues(key).subscribe((data) => {\r\n      this.arrayEmploymentType = data;\r\n    });\r\n  }\r\n  getEmploymentCategory(key: string) {\r\n    this.api.getDropDownValues(key).subscribe((data) => {\r\n      this.arrayEmploymentCategory = data;\r\n    });\r\n  }\r\n  // date conversion\r\n  converDate(value) {\r\n    // let date = moment(value).format('YYYY-MM-DDThh:mm:ss');\r\n    let date = moment(value).format('YYYY-MMM-DD');\r\n    console.log(\"date\", date);\r\n    if (date)\r\n      return date;\r\n  }\r\n\r\n  // Total Monthly Income\r\n  calculateTotalMonthlyIncome(value) {\r\n    let income: number = Number(value.salary) + Number(value.business) +\r\n      Number(value.interestIncome) + Number(value.pension) +\r\n      Number(value.bonus) + Number(value.monthlyIncomeOthers) +\r\n      Number(value.monthlyIncomeRentals) + Number(value.cashGifts);\r\n\r\n    // this.financialDetailsUpdate.controls.monthlyIncome.get('monthlyIncomeTotal').setValue(income);\r\n    this.financialDetailsUpdate.controls.monthlyIncomeTotal.setValue(income);\r\n    this.cdr.detectChanges();\r\n\r\n    this.calculateTotalIncomeAndExpense(this.financialDetailsUpdate.value);\r\n  }\r\n\r\n  // Total Monthly Expense\r\n  calculateTotalMonthlyExpenses(value) {\r\n    let expense: number = Number(value.household) + Number(value.education) +\r\n      Number(value.vehicleMaintenance) + Number(value.monthlyExpenseOthers) +\r\n      Number(value.medical) + Number(value.travel) +\r\n      Number(value.monthlyExpenseRentals);\r\n\r\n    // this.financialDetailsUpdate.controls.monthlyExpense.get('monthlyExpenseTotal').setValue(expense);\r\n    this.financialDetailsUpdate.controls.monthlyExpenseTotal.setValue(expense);\r\n    this.cdr.detectChanges();\r\n\r\n    this.calculateTotalIncomeAndExpense(this.financialDetailsUpdate.value);\r\n  }\r\n\r\n  // Total Liabilities\r\n  calculateTotalLiabilities(value) {\r\n    let liability: number = Number(value.propertyLoan) + Number(value.personalLoans) +\r\n      Number(value.overdraft) + Number(value.vehicleLoan) +\r\n      Number(value.cardOutstandings) + Number(value.liabilityOthers);\r\n\r\n    // this.financialDetailsUpdate.controls.annualLiability.get('liabilityTotal').setValue(liability);\r\n    this.financialDetailsUpdate.controls.liabilityTotal.setValue(liability);\r\n    this.cdr.detectChanges();\r\n\r\n    this.calculateTotalIncomeAndExpense(this.financialDetailsUpdate.value);\r\n  }\r\n\r\n  // Total Assets\r\n  calculateTotalAssets(value) {\r\n    let asset: number = Number(value.savingDeposits) + Number(value.properties) +\r\n      Number(value.fixedDeposits) + Number(value.stocks) +\r\n      Number(value.automobiles) + Number(value.lands) + Number(value.assetOthers);\r\n\r\n    // this.financialDetailsUpdate.controls.assets.get('assetTotal').setValue(asset);\r\n    this.financialDetailsUpdate.controls.assetTotal.setValue(asset);\r\n    this.cdr.detectChanges();\r\n\r\n    this.calculateTotalIncomeAndExpense(this.financialDetailsUpdate.value);\r\n  }\r\n\r\n  // Total Income, Expense and Final Total\r\n  calculateTotalIncomeAndExpense(value) {\r\n\r\n    let totalIncome: number = (value.monthlyIncomeTotal * 12) + value.assetTotal;\r\n    let totalExpense: number = (value.monthlyExpenseTotal * 12) + value.liabilityTotal;\r\n\r\n    this.financialDetailsUpdate.controls.applicantTotalIncome.setValue(totalIncome);\r\n    this.financialDetailsUpdate.controls.applicantTotalExpense.setValue(totalExpense);\r\n    this.cdr.detectChanges();\r\n  }\r\n\r\n  letterOnly(event) {\r\n    var charCode = event.keyCode;\r\n    if ((charCode > 64 && charCode < 91) || (charCode > 96 && charCode < 123) || charCode == 8)\r\n      return true;\r\n    else\r\n      return false;\r\n  }\r\n  _keyPress(event: any) {\r\n    const pattern = /[0-9]/;\r\n    let inputChar = String.fromCharCode(event.charCode);\r\n    if (!pattern.test(inputChar)) {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n  close() {\r\n    this.dialogRef.close({\r\n      status: \"ONGOING\"\r\n    })\r\n  }\r\n}\r\n\r\n","<div fxLayout=\"row\" fxLayoutGap=\"25px\" fxLayout=\"row\" fxLayoutAlign=\"end\" class=\"contain\">\r\n    <mat-icon class=\"closeIcon\" (click)=\"close()\">close</mat-icon>\r\n</div>\r\n<h1 mat-dialog-title>Financial Details</h1>\r\n<mat-dialog-content>\r\n    <form *ngIf=\"financialDetailsUpdate\" [formGroup]=\"financialDetailsUpdate\">\r\n        <mat-card>\r\n            <div fxLayout=\"row wrap\" class=\"full-width\">\r\n                <mat-card>\r\n                    <div fxLayout=\"row wrap\" class=\"full-width\">\r\n                        <div fxFlex=\"33.33%\" fxFlex.xs=\"100%\" class=\"full-width\">\r\n                            <mat-hint class=\"hintClass\">Applicant Name</mat-hint>\r\n                            <mat-card class=\"inputCard\">\r\n                                <input matInput formControlName=\"applicantName\" readonly placeholder=\"Applicant Name\" />\r\n                            </mat-card>\r\n                        </div>\r\n                        <div fxFlex=\"33.33%\" fxFlex.xs=\"100%\" class=\"full-width\">\r\n                            <mat-hint class=\"hintClass\">Total Annual Income*</mat-hint>\r\n                            <mat-card>\r\n                                <input matInput type=\"number\" readonly formControlName=\"applicantTotalIncome\"\r\n                                    placeholder=\"Total Annual Income\" />\r\n                            </mat-card>\r\n                        </div>\r\n                        <div fxFlex=\"33.33%\" fxFlex.xs=\"100%\" class=\"full-width\">\r\n                            <mat-hint class=\"hintClass\">Total Annual Expenses*</mat-hint>\r\n                            <mat-card>\r\n                                <input matInput type=\"number\" readonly formControlName=\"applicantTotalExpense\"\r\n                                    placeholder=\"Total Annual Expenses\" />\r\n                            </mat-card>\r\n                        </div>\r\n\r\n                        <div fxFlex=\"33.33%\" fxFlex.xs=\"100%\" class=\"full-width\">\r\n                            <div>\r\n                                <mat-hint class=\"hintClass\">Last Update On</mat-hint>\r\n                                <mat-card fxFlexLayout=\"row\" class=\"inputCard\">\r\n                                <div fxFlex=\"85%\">\r\n                                    <input matInput formControlName=\"lastUpdatedon\" placeholder=\"Last Update On\"\r\n                                    [matDatepicker]=\"appDatepicker\" readonly [max]=\"tomorrow\" />\r\n                                </div>\r\n                                <div fxFlex=\"15%\">\r\n                                    <mat-datepicker-toggle matSuffix [for]=\"appDatepicker\"></mat-datepicker-toggle>\r\n                                </div>                                    \r\n                                </mat-card>\r\n                            </div>\r\n                            <mat-datepicker #appDatepicker></mat-datepicker>\r\n                        </div>\r\n                    </div>\r\n                </mat-card>\r\n\r\n\r\n                <mat-card>\r\n                    <mat-card-title class=\"\">\r\n                        <div class=\"card-title-text\">Employment Details</div>\r\n                        <mat-divider></mat-divider>\r\n                    </mat-card-title>\r\n                    <mat-card-content>\r\n                        <div fxLayout=\"row wrap\" class=\"full-width\">\r\n                            <div fxFlex=\"33.33%\" fxFlex.xs=\"100%\" class=\"full-width\" fxFlex=\"33.33%\" fxFlex.xs=\"100%\"\r\n                                class=\"full-width\">\r\n                                <mat-hint class=\"hintClass\">Employment Type*</mat-hint>\r\n                                <mat-card class=\"inputCard\">\r\n                                    <mat-select formControlName=\"employmentType\">\r\n                                        <mat-option *ngFor=\"let employmentType of arrayEmploymentType\"\r\n                                            [value]=\"employmentType\">\r\n                                            {{employmentType}}\r\n                                        </mat-option>\r\n                                    </mat-select>\r\n                                </mat-card>\r\n\r\n                                <mat-error class=\"errorClass\" *ngIf=\"financialDetailsUpdate.get('employmentType').hasError('required')\">\r\n                                    Please select the Employment Type\r\n                                </mat-error>\r\n                            </div>\r\n                            <div fxFlex=\"33.33%\" fxFlex.xs=\"100%\" class=\"full-width\" fxFlex=\"33.33%\" fxFlex.xs=\"100%\"\r\n                                class=\"full-width\">\r\n                                <mat-hint class=\"hintClass\">Designation*</mat-hint>\r\n                                <mat-card class=\"inputCard\">\r\n                                    <input matInput maxlength=\"20\" name=\"Designation\" formControlName=\"designation\"\r\n                                        placeholder=\"Designation\"\r\n                                        oninput=\"this.value = this.value.replace(/[^A-Za-z0-9-,.;'&/.() ]|^ /g,'')\" />\r\n                                </mat-card>\r\n\r\n                                <mat-error class=\"errorClass\" *ngIf=\"financialDetailsUpdate.get('designation').hasError('required')\">\r\n                                    Please enter the Designation\r\n                                </mat-error>\r\n                            </div>\r\n                            <div fxFlex=\"33.33%\" fxFlex.xs=\"100%\" class=\"full-width\" fxFlex=\"33.33%\" fxFlex.xs=\"100%\"\r\n                                class=\"full-width\">\r\n                                <mat-hint class=\"hintClass\">Employee number*</mat-hint>\r\n                                <mat-card class=\"inputCard\">\r\n                                    <input matInput maxLength=\"5\" (keypress)=_keyPress($event)\r\n                                        formControlName=\"employeeNumber\" placeholder=\"Employee Number\" />\r\n                                </mat-card>\r\n\r\n                                <mat-error class=\"errorClass\" *ngIf=\"financialDetailsUpdate.get('employeeNumber').hasError('required')\">\r\n                                    Please enter the Employee Number\r\n                                </mat-error>\r\n                            </div>\r\n                            <div fxFlex=\"33.33%\" fxFlex.xs=\"100%\" class=\"full-width\" fxFlex=\"33.33%\" fxFlex.xs=\"100%\"\r\n                                class=\"full-width\">\r\n                                <mat-hint class=\"hintClass\">Employment Category*</mat-hint>\r\n                                <mat-card class=\"inputCard\">\r\n                                    <mat-select name=\"employmentCategory\" formControlName=\"employmentCategory\">\r\n                                        <mat-option *ngFor=\"let employmentCategory of arrayEmploymentCategory\"\r\n                                            [value]=\"employmentCategory\">\r\n                                            {{employmentCategory}}\r\n                                        </mat-option>\r\n                                    </mat-select>\r\n                                </mat-card>\r\n\r\n                                <mat-error class=\"errorClass\"\r\n                                    *ngIf=\"financialDetailsUpdate.get('employmentCategory').hasError('required')\">\r\n                                    Please select the Employment Category\r\n                                </mat-error>\r\n                            </div>\r\n                            <div fxFlex=\"33.33%\" fxFlex.xs=\"100%\" class=\"full-width\">\r\n                                <div>\r\n                                    <mat-hint class=\"hintClass\">Employment Start Date</mat-hint>\r\n                                    <mat-card class=\"inputCard\">\r\n                                        <div fxFlex=\"85%\">\r\n                                            <input matInput formControlName=\"employmentStartDate\"\r\n                                            placeholder=\"Employment Start Date\" [matDatepicker]=\"start\" readonly />\r\n                                        </div>\r\n                                        <div fxFlex=\"15%\">\r\n                                            <mat-datepicker-toggle matSuffix [for]=\"start\"></mat-datepicker-toggle>\r\n                                        </div>\r\n                                    </mat-card>\r\n                                </div>\r\n                                <mat-datepicker #start></mat-datepicker>\r\n                            </div>\r\n                            <div fxFlex=\"33.33%\" fxFlex.xs=\"100%\" class=\"full-width\">\r\n                                <div>\r\n                                    <mat-hint class=\"hintClass\">Employment End Date</mat-hint>\r\n                                    <mat-card class=\"inputCard\">\r\n                                        <input matInput name=\"employmentEndDate\" formControlName=\"employmentEndDate\"\r\n                                            [min]=\"financialDetailsUpdate.get('employmentStartDate').value\"\r\n                                            placeholder=\"Employment End Date\" [matDatepicker]=\"end\" readonly />\r\n                                        <mat-datepicker-toggle matSuffix [for]=\"end\"></mat-datepicker-toggle>\r\n                                    </mat-card>\r\n\r\n                                </div>\r\n                                <mat-datepicker #end></mat-datepicker>\r\n                            </div>\r\n                            <div fxFlex=\"33.33%\" fxFlex.xs=\"100%\" class=\"full-width\" fxFlex=\"33.33%\" fxFlex.xs=\"100%\"\r\n                                class=\"full-width\">\r\n                                <mat-hint class=\"hintClass\">Office Name*</mat-hint>\r\n                                <mat-card class=\"inputCard\">\r\n                                    <input matInput maxlength=\"20\" name=\"Office Name\" formControlName=\"officeName\"\r\n                                        placeholder=\"Office Name\"\r\n                                        oninput=\"this.value = this.value.replace(/[^A-Za-z0-9-,.;'&/.() ]|^ /g,'')\" />\r\n                                </mat-card>\r\n\r\n                                <mat-error class=\"errorClass\" *ngIf=\"financialDetailsUpdate.get('officeName').hasError('required')\">\r\n                                    Please enter the Office Name\r\n                                </mat-error>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </mat-card-content>\r\n                </mat-card>\r\n\r\n                <mat-card>\r\n                    <mat-card-title class=\"\">\r\n                        <div class=\"card-title-text\">Monthly Income\r\n                            <div class=\"ErrMsg\">{{incomeErrMsg}} </div>\r\n                        </div>\r\n                        <mat-divider></mat-divider>\r\n                    </mat-card-title>\r\n                    <mat-card-content>\r\n                        <div fxLayout=\"row wrap\" class=\"full-width\">\r\n                            <div fxFlex=\"33.33%\" fxFlex.xs=\"100%\" class=\"full-width\" fxFlex=\"33.33%\" fxFlex.xs=\"100%\"\r\n                                class=\"full-width\">\r\n                                <mat-hint class=\"hintClass\">Salary</mat-hint>\r\n                                <mat-card class=\"inputCard\">\r\n                                    <input matInput maxlength=\"10\" type=\"text\" onlyNumber formControlName=\"salary\"\r\n                                        name=\"salary\" placeholder=\"Salary\" (keypress)=_keyPress($event)\r\n                                        (input)=\"calculateTotalMonthlyIncome(financialDetailsUpdate.value)\" />\r\n                                </mat-card>\r\n\r\n                            </div>\r\n                            <div fxFlex=\"33.33%\" fxFlex.xs=\"100%\" class=\"full-width\" fxFlex=\"33.33%\" fxFlex.xs=\"100%\"\r\n                                class=\"full-width\">\r\n                                <mat-hint class=\"hintClass\">Business</mat-hint>\r\n                                <mat-card class=\"inputCard\">\r\n                                    <input matInput maxlength=\"10\" type=\"text\" onlyNumber name=\"business\"\r\n                                        formControlName=\"business\" autocomplete=\"off\" placeholder=\"Business\"\r\n                                        (keypress)=_keyPress($event)\r\n                                        (input)=\"calculateTotalMonthlyIncome(financialDetailsUpdate.value)\" />\r\n                                </mat-card>\r\n                            </div>\r\n                            <div fxFlex=\"33.33%\" fxFlex.xs=\"100%\" class=\"full-width\" fxFlex=\"33.33%\" fxFlex.xs=\"100%\"\r\n                                class=\"full-width\">\r\n                                <mat-hint class=\"hintClass\">Interest Income</mat-hint>\r\n                                <mat-card class=\"inputCard\">\r\n                                    <input matInput maxlength=\"10\" type=\"text\" onlyNumber\r\n                                        formControlName=\"interestIncome\" name=\"interestIncome\"\r\n                                        placeholder=\"Interest Income\" (keypress)=_keyPress($event)\r\n                                        (input)=\"calculateTotalMonthlyIncome(financialDetailsUpdate.value)\" />\r\n                                </mat-card>\r\n                            </div>\r\n\r\n                            <div fxFlex=\"33.33%\" fxFlex.xs=\"100%\" class=\"full-width\" fxFlex=\"33.33%\" fxFlex.xs=\"100%\"\r\n                                class=\"full-width\">\r\n                                <mat-hint class=\"hintClass\">Pension</mat-hint>\r\n                                <mat-card class=\"inputCard\">\r\n                                    <input matInput maxlength=\"10\" type=\"text\" onlyNumber name=\"pension\"\r\n                                        formControlName=\"pension\" placeholder=\"Pension\" (keypress)=_keyPress($event)\r\n                                        (input)=\"calculateTotalMonthlyIncome(financialDetailsUpdate.value)\" />\r\n                                </mat-card>\r\n                            </div>\r\n                            <div fxFlex=\"33.33%\" fxFlex.xs=\"100%\" class=\"full-width\" fxFlex=\"33.33%\" fxFlex.xs=\"100%\"\r\n                                class=\"full-width\">\r\n                                <mat-hint class=\"hintClass\">Bonus</mat-hint>\r\n                                <mat-card class=\"inputCard\">\r\n                                    <input matInput maxlength=\"10\" type=\"text\" onlyNumber formControlName=\"bonus\"\r\n                                        name=\"bonus\" placeholder=\"Bonus\" (keypress)=_keyPress($event)\r\n                                        (input)=\"calculateTotalMonthlyIncome(financialDetailsUpdate.value)\" />\r\n                                </mat-card>\r\n                            </div>\r\n                            <div fxFlex=\"33.33%\" fxFlex.xs=\"100%\" class=\"full-width\" fxFlex=\"33.33%\" fxFlex.xs=\"100%\"\r\n                                class=\"full-width\">\r\n                                <mat-hint class=\"hintClass\">Cash Gifts</mat-hint>\r\n                                <mat-card class=\"inputCard\">\r\n                                    <input matInput maxlength=\"10\" type=\"text\" onlyNumber formControlName=\"cashGifts\"\r\n                                        name=\"cashGifts\" placeholder=\"Cash Gifts\" (keypress)=_keyPress($event)\r\n                                        (input)=\"calculateTotalMonthlyIncome(financialDetailsUpdate.value)\" />\r\n                                </mat-card>\r\n                            </div>\r\n\r\n\r\n                            <div fxFlex=\"33.33%\" fxFlex.xs=\"100%\" class=\"full-width\" fxFlex=\"33.33%\" fxFlex.xs=\"100%\"\r\n                                class=\"full-width\">\r\n                                <mat-hint class=\"hintClass\">Rentals</mat-hint>\r\n                                <mat-card class=\"inputCard\">\r\n                                    <input matInput maxlength=\"10\" type=\"text\" onlyNumber name=\"monthlyIncomeRentals\"\r\n                                        formControlName=\"monthlyIncomeRentals\" placeholder=\"Rentals\"\r\n                                        (keypress)=_keyPress($event)\r\n                                        (input)=\"calculateTotalMonthlyIncome(financialDetailsUpdate.value)\" />\r\n                                </mat-card>\r\n                            </div>\r\n                            <div fxFlex=\"33.33%\" fxFlex.xs=\"100%\" class=\"full-width\" fxFlex=\"33.33%\" fxFlex.xs=\"100%\"\r\n                                class=\"full-width\">\r\n                                <mat-hint class=\"hintClass\">Others</mat-hint>\r\n                                <mat-card class=\"inputCard\">\r\n                                    <input matInput maxlength=\"10\" type=\"text\" onlyNumber name=\"monthlyIncomeOthers\"\r\n                                        formControlName=\"monthlyIncomeOthers\" placeholder=\"Others\"\r\n                                        (keypress)=_keyPress($event)\r\n                                        (input)=\"calculateTotalMonthlyIncome(financialDetailsUpdate.value)\" />\r\n                                </mat-card>\r\n                            </div>\r\n                            <div fxFlex=\"33.33%\" fxFlex.xs=\"100%\" class=\"full-width\" fxFlex=\"33.33%\" fxFlex.xs=\"100%\"\r\n                                class=\"full-width\">\r\n                                <mat-hint class=\"hintClass\">Total</mat-hint>\r\n                                <mat-card class=\"inputCard\">\r\n                                    <input matInput maxlength=\"10\" type=\"text\" onlyNumber\r\n                                        formControlName=\"monthlyIncomeTotal\" placeholder=\"MonthlyIncomeTotal\"\r\n                                        readonly />\r\n                                </mat-card>\r\n                            </div>\r\n                        </div>\r\n                    </mat-card-content>\r\n                </mat-card>\r\n                <mat-card>\r\n                    <mat-card-title class=\"\">\r\n                        <div class=\"card-title-text\">Monthly Expenses\r\n                            <div class=\"ErrMsg\">{{ExpensesErrMsg}} </div>\r\n                        </div>\r\n                        <mat-divider></mat-divider>\r\n                    </mat-card-title>\r\n                    <mat-card-content>\r\n                        <div fxLayout=\"row wrap\" class=\"full-width\">\r\n                            <div fxFlex=\"33.33%\" fxFlex.xs=\"100%\" class=\"full-width\" fxFlex=\"33.33%\" fxFlex.xs=\"100%\"\r\n                                class=\"full-width\">\r\n                                <mat-hint class=\"hintClass\">Household</mat-hint>\r\n                                <mat-card class=\"inputCard\">\r\n                                    <input matInput maxlength=\"10\" type=\"text\" onlyNumber formControlName=\"household\"\r\n                                        name=\"household\" placeholder=\"Household\" (keypress)=_keyPress($event)\r\n                                        (input)=\"calculateTotalMonthlyExpenses(financialDetailsUpdate.value)\" />\r\n                                </mat-card>\r\n                            </div>\r\n                            <div fxFlex=\"33.33%\" fxFlex.xs=\"100%\" class=\"full-width\">\r\n                                <mat-hint class=\"hintClass\">Medical</mat-hint>\r\n                                <mat-card class=\"inputCard\">\r\n                                    <input matInput maxlength=\"10\" type=\"text\" onlyNumber name=\"medical\"\r\n                                        formControlName=\"medical\" placeholder=\"Medical\" (keypress)=_keyPress($event)\r\n                                        (input)=\"calculateTotalMonthlyExpenses(financialDetailsUpdate.value)\" />\r\n                                </mat-card>\r\n                            </div>\r\n                            <div fxFlex=\"33.33%\" fxFlex.xs=\"100%\" class=\"full-width\">\r\n                                <mat-hint class=\"hintClass\">Vehicle Maintenance</mat-hint>\r\n                                <mat-card class=\"inputCard\">\r\n                                    <input matInput maxlength=\"10\" type=\"text\" onlyNumber\r\n                                        formControlName=\"vehicleMaintenance\" name=\"mod\"\r\n                                        placeholder=\"Vehicle Maintenance\" (keypress)=_keyPress($event)\r\n                                        (input)=\"calculateTotalMonthlyExpenses(financialDetailsUpdate.value)\" />\r\n                                </mat-card>\r\n                            </div>\r\n\r\n                            <div fxFlex=\"33.33%\" fxFlex.xs=\"100%\" class=\"full-width\">\r\n                                <mat-hint class=\"hintClass\">Travel</mat-hint>\r\n                                <mat-card class=\"inputCard\">\r\n                                    <input matInput maxlength=\"10\" type=\"text\" onlyNumber name=\"a_sig\"\r\n                                        formControlName=\"travel\" placeholder=\"Travel\" (keypress)=_keyPress($event)\r\n                                        (input)=\"calculateTotalMonthlyExpenses(financialDetailsUpdate.value)\" />\r\n                                </mat-card>\r\n                            </div>\r\n                            <div fxFlex=\"33.33%\" fxFlex.xs=\"100%\" class=\"full-width\">\r\n                                <mat-hint class=\"hintClass\">Rentals</mat-hint>\r\n                                <mat-card class=\"inputCard\">\r\n                                    <input matInput maxlength=\"10\" type=\"text\" onlyNumber name=\"a_sig\"\r\n                                        formControlName=\"monthlyExpenseRentals\" placeholder=\"monthlyExpenseRentals\"\r\n                                        (keypress)=_keyPress($event)\r\n                                        (input)=\"calculateTotalMonthlyExpenses(financialDetailsUpdate.value)\" />\r\n                                </mat-card>\r\n                            </div>\r\n                            <div fxFlex=\"33.33%\" fxFlex.xs=\"100%\" class=\"full-width\">\r\n                                <mat-hint class=\"hintClass\">Others</mat-hint>\r\n                                <mat-card class=\"inputCard\">\r\n                                    <input matInput maxlength=\"10\" type=\"text\" onlyNumber\r\n                                        formControlName=\"monthlyExpenseOthers\" (keypress)=_keyPress($event)\r\n                                        (input)=\"calculateTotalMonthlyExpenses(financialDetailsUpdate.value)\"\r\n                                        placeholder=\"monthlyExpenseOthers\" />\r\n                                </mat-card>\r\n                            </div>\r\n\r\n                            <div fxFlex=\"33.33%\" fxFlex.xs=\"100%\" class=\"full-width\">\r\n                                <mat-hint class=\"hintClass\">Total</mat-hint>\r\n                                <mat-card class=\"inputCard\">\r\n                                    <input matInput maxlength=\"10\" type=\"text\" onlyNumber\r\n                                        formControlName=\"monthlyExpenseTotal\" name=\"monthlyExpenseTotal\"\r\n                                        placeholder=\"Total\" readonly />\r\n                                </mat-card>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </mat-card-content>\r\n                </mat-card>\r\n                <mat-card>\r\n                    <mat-card-title class=\"\">\r\n                        <div class=\"card-title-text\">Annual Liabilities\r\n                            <div class=\"ErrMsg\">{{LiabilitiesErrMsg}} </div>\r\n                        </div>\r\n                        <mat-divider></mat-divider>\r\n                    </mat-card-title>\r\n                    <mat-card-content>\r\n\r\n                        <div fxLayout=\"row wrap\" class=\"full-width\">\r\n                            <div fxFlex=\"33.33%\" fxFlex.xs=\"100%\" class=\"full-width\">\r\n                                <mat-hint class=\"hintClass\">Property Loans</mat-hint>\r\n                                <mat-card class=\"inputCard\">\r\n                                    <input matInput maxlength=\"10\" type=\"text\" onlyNumber name=\"propertyLoan\"\r\n                                        placeholder=\"Property Loan\" formControlName=\"propertyLoan\"\r\n                                        (keypress)=_keyPress($event)\r\n                                        (input)=\"calculateTotalLiabilities(financialDetailsUpdate.value)\" />\r\n                                </mat-card>\r\n                            </div>\r\n                            <div fxFlex=\"33.33%\" fxFlex.xs=\"100%\" class=\"full-width\">\r\n\r\n                                <mat-hint class=\"hintClass\">Personal Loans</mat-hint>\r\n                                <mat-card class=\"inputCard\">\r\n                                    <input matInput maxlength=\"10\" type=\"text\" onlyNumber name=\"personalLoans\"\r\n                                        formControlName=\"personalLoans\" placeholder=\"Personal Loans\"\r\n                                        (keypress)=_keyPress($event)\r\n                                        (input)=\"calculateTotalLiabilities(financialDetailsUpdate.value)\" />\r\n                                </mat-card>\r\n                            </div>\r\n                            <div fxFlex=\"33.33%\" fxFlex.xs=\"100%\" class=\"full-width\">\r\n                                <mat-hint class=\"hintClass\">Vehicle Loans</mat-hint>\r\n                                <mat-card class=\"inputCard\">\r\n                                    <input matInput maxlength=\"10\" type=\"text\" onlyNumber formControlName=\"vehicleLoan\"\r\n                                        name=\"vehicleLoan\" placeholder=\"vehicle Loan\" (keypress)=_keyPress($event)\r\n                                        (input)=\"calculateTotalLiabilities(financialDetailsUpdate.value)\" />\r\n                                </mat-card>\r\n                            </div>\r\n\r\n\r\n                            <div fxFlex=\"33.33%\" fxFlex.xs=\"100%\" class=\"full-width\">\r\n                                <mat-hint class=\"hintClass\">Cards Outstanding's</mat-hint>\r\n                                <mat-card class=\"inputCard\">\r\n                                    <input matInput maxlength=\"10\" type=\"text\" onlyNumber name=\"cardOutstandings\"\r\n                                        formControlName=\"cardOutstandings\" placeholder=\"cardOutstandings\"\r\n                                        (keypress)=_keyPress($event)\r\n                                        (input)=\"calculateTotalLiabilities(financialDetailsUpdate.value)\" />\r\n                                </mat-card>\r\n                            </div>\r\n                            <div fxFlex=\"33.33%\" fxFlex.xs=\"100%\" class=\"full-width\">\r\n                                <mat-hint class=\"hintClass\">Overdrafts</mat-hint>\r\n                                <mat-card class=\"inputCard\">\r\n                                    <input matInput maxlength=\"10\" name=\"overdraft\" type=\"text\" onlyNumber\r\n                                        formControlName=\"overdraft\" placeholder=\"overdraft\" (keypress)=_keyPress($event)\r\n                                        (input)=\"calculateTotalLiabilities(financialDetailsUpdate.value)\" />\r\n                                </mat-card>\r\n                            </div>\r\n                            <div fxFlex=\"33.33%\" fxFlex.xs=\"100%\" class=\"full-width\">\r\n                                <mat-hint class=\"hintClass\">Others</mat-hint>\r\n                                <mat-card class=\"inputCard\">\r\n                                    <input matInput maxlength=\"10\" type=\"text\" onlyNumber name=\"liabilityOthers\"\r\n                                        formControlName=\"liabilityOthers\" placeholder=\"liabilityOthers\"\r\n                                        (keypress)=_keyPress($event)\r\n                                        (input)=\"calculateTotalLiabilities(financialDetailsUpdate.value)\" />\r\n                                </mat-card>\r\n                            </div>\r\n\r\n\r\n                            <div fxFlex=\"33.33%\" fxFlex.xs=\"100%\" class=\"full-width\">\r\n                                <mat-hint class=\"hintClass\">Total</mat-hint>\r\n                                <mat-card class=\"inputCard\">\r\n                                    <input matInput maxlength=\"10\" type=\"text\" onlyNumber name=\"liabilityTotal\"\r\n                                        placeholder=\"Total\" formControlName=\"liabilityTotal\" readonly />\r\n                                </mat-card>\r\n                            </div>\r\n                        </div>\r\n                    </mat-card-content>\r\n                </mat-card>\r\n                <mat-card>\r\n                    <mat-card-title class=\"\">\r\n                        <div class=\"card-title-text\">Asset\r\n                            <div class=\"ErrMsg\">{{assetErrMsg}} </div>\r\n                        </div>\r\n                        <mat-divider></mat-divider>\r\n                    </mat-card-title>\r\n                    <mat-card-content>\r\n                        <div fxLayout=\"row wrap\" class=\"full-width\">\r\n                            <div fxFlex=\"33.33%\" fxFlex.xs=\"100%\" class=\"full-width\">\r\n                                <mat-hint class=\"hintClass\">Savings Deposits</mat-hint>\r\n                                <mat-card>\r\n\r\n                                </mat-card>\r\n                                <input matInput maxlength=\"10\" type=\"text\" onlyNumber name=\"savingDeposits\"\r\n                                    placeholder=\"saving Deposits\" formControlName=\"savingDeposits\"\r\n                                    (keypress)=_keyPress($event)\r\n                                    (input)=\"calculateTotalAssets(financialDetailsUpdate.value)\" />\r\n                            </div>\r\n                            <div fxFlex=\"33.33%\" fxFlex.xs=\"100%\" class=\"full-width\">\r\n                                <mat-hint class=\"hintClass\">Properties</mat-hint>\r\n                                <mat-card class=\"inputCard\">\r\n                                    <input matInput maxlength=\"10\" type=\"text\" onlyNumber name=\"properties\"\r\n                                        formControlName=\"properties\" placeholder=\"Properties\"\r\n                                        (keypress)=_keyPress($event)\r\n                                        (input)=\"calculateTotalAssets(financialDetailsUpdate.value)\" />\r\n                                </mat-card>\r\n                            </div>\r\n                            <div fxFlex=\"33.33%\" fxFlex.xs=\"100%\" class=\"full-width\">\r\n                                <mat-hint class=\"hintClass\">Fixed Deposits</mat-hint>\r\n                                <mat-card class=\"inputCard\">\r\n                                    <input matInput maxlength=\"10\" type=\"text\" onlyNumber name=\"fixedDeposits\"\r\n                                        formControlName=\"fixedDeposits\" placeholder=\"fixedDeposits\"\r\n                                        (keypress)=_keyPress($event)\r\n                                        (input)=\"calculateTotalAssets(financialDetailsUpdate.value)\" />\r\n                                </mat-card>\r\n                            </div>\r\n                            <div fxFlex=\"33.33%\" fxFlex.xs=\"100%\" class=\"full-width\">\r\n                                <mat-hint class=\"hintClass\">Stocks/Funds</mat-hint>\r\n                                <mat-card class=\"inputCard\">\r\n                                    <input matInput maxlength=\"10\" type=\"text\" onlyNumber placeholder=\"stocks\"\r\n                                        formControlName=\"stocks\" (keypress)=_keyPress($event)\r\n                                        (input)=\"calculateTotalAssets(financialDetailsUpdate.value)\" />\r\n                                </mat-card>\r\n                            </div>\r\n                            <div fxFlex=\"33.33%\" fxFlex.xs=\"100%\" class=\"full-width\">\r\n                                <mat-hint class=\"hintClass\">Auto Mobiles</mat-hint>\r\n                                <mat-card class=\"inputCard\">\r\n                                    <input matInput maxlength=\"10\" type=\"text\" onlyNumber name=\"automobiles\"\r\n                                        placeholder=\"automobiles\" formControlName=\"automobiles\"\r\n                                        (keypress)=_keyPress($event)\r\n                                        (input)=\"calculateTotalAssets(financialDetailsUpdate.value)\" />\r\n                                </mat-card>\r\n                            </div>\r\n                            <div fxFlex=\"33.33%\" fxFlex.xs=\"100%\" class=\"full-width\">\r\n                                <mat-hint class=\"hintClass\">Lands</mat-hint>\r\n                                <mat-card class=\"inputCard\">\r\n                                    <input matInput maxlength=\"10\" type=\"text\" onlyNumber name=\"lands\"\r\n                                        placeholder=\"lands\" formControlName=\"lands\" (keypress)=_keyPress($event)\r\n                                        (input)=\"calculateTotalAssets(financialDetailsUpdate.value)\" />\r\n                                </mat-card>\r\n                            </div>\r\n                            <div fxFlex=\"33.33%\" fxFlex.xs=\"100%\" class=\"full-width\">\r\n                                <mat-hint class=\"hintClass\">Others</mat-hint>\r\n                                <mat-card class=\"inputCard\">\r\n                                    <input matInput maxlength=\"10\" type=\"text\" onlyNumber name=\"assetOthers\"\r\n                                        placeholder=\"assetOthers\" formControlName=\"assetOthers\"\r\n                                        (keypress)=_keyPress($event)\r\n                                        (input)=\"calculateTotalAssets(financialDetailsUpdate.value)\" />\r\n                                </mat-card>\r\n                            </div>\r\n                            <div fxFlex=\"33.33%\" fxFlex.xs=\"100%\" class=\"full-width\">\r\n                                <mat-hint class=\"hintClass\">Total</mat-hint>\r\n                                <mat-card>\r\n                                    <input matInput maxlength=\"10\" type=\"text\" onlyNumber name=\"assetTotal\"\r\n                                        formControlName=\"assetTotal\" placeholder=\"assetTotal\" readonly />\r\n                                </mat-card>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </mat-card-content>\r\n                </mat-card>\r\n\r\n\r\n            </div>\r\n        </mat-card>\r\n    </form>\r\n</mat-dialog-content>\r\n\r\n\r\n\r\n<div fxLayout=\"row\" fxLayoutAlign=\"end\" fxLayoutGap=\"20px\">\r\n    <button mat-raised-button  type=\"submit\" class=\"editbtn\" (click)=\"onSubmit()\" [disabled]=\"!financialDetailsUpdate.get('employeeNumber').valid || !financialDetailsUpdate.get('employmentType').valid ||\r\n    !financialDetailsUpdate.get('designation').valid || incomeErrMsg || !financialDetailsUpdate.get('officeName').valid || incomeErrMsg ||\r\n    ExpensesErrMsg || LiabilitiesErrMsg || assetErrMsg \">\r\n        Save</button>\r\n    &nbsp;&nbsp;&nbsp;\r\n    <button type=\"button\" class=\"cancelbtn\" (click)=\"close()\">\r\n        Cancel\r\n    </button>\r\n</div>","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { CorporateOnboardingService } from 'app/views/others/onboarding-corporate/corporate-onboarding.service';\r\n// import { CorporateOnboardingService } from '../../../others/onboarding-corporate/corporate-onboarding.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-update-corporate-basic-info',\r\n  templateUrl: './update-corporate-basic-info.component.html',\r\n  styleUrls: ['./update-corporate-basic-info.component.scss']\r\n})\r\nexport class UpdateCorporateBasicInfoComponent implements OnInit {\r\n  corporateInfoUpdateForm: FormGroup;\r\n  corporateId: any\r\n  countryArr: any = [];\r\n  categoryArr: string[] = ['Privileged', 'Un Privileged'];\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public basicInfo,\r\n    private dialogRef: MatDialogRef<UpdateCorporateBasicInfoComponent>,\r\n    private apiService: ApiService,\r\n    private ls: LocalStoreService,\r\n    private formBuilder: FormBuilder,\r\n    private snack: MatSnackBar,\r\n    private corporateService: CorporateOnboardingService\r\n    // private corporateService: CorporateOnboardingService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.corporateId = this.ls.getItem('corporateId');\r\n    console.log(this.basicInfo)\r\n    this.getCountryName('country')\r\n    if (this.basicInfo) {\r\n      this.buildBasicForm(this.basicInfo)\r\n    }\r\n  }\r\n  buildBasicForm(data) {\r\n    this.corporateInfoUpdateForm = this.formBuilder.group({\r\n      corporateId: [data.corporateId],\r\n      companyName: [data ? data.companyName : '', [Validators.required]],\r\n      category: [data ? data.category : '', [Validators.required]],\r\n      country: [data ? data.country : '', [Validators.required]]\r\n    })\r\n  }\r\n  getCountryName(key: string) {\r\n    this.apiService.getAllCountries().subscribe((data: any) => {\r\n      for (let i = 0; i < data.length; i++) {\r\n        if (data[i].authStatus === 'A') {\r\n          this.countryArr.push(data[i].countryName);\r\n        }\r\n      }\r\n    });\r\n  }\r\n  onSubmit() {\r\n    this.corporateService\r\n      .saveOrUpdateCorporateAccountInfo(this.corporateInfoUpdateForm.value)\r\n      .subscribe((data) => {\r\n        if (data != null) {\r\n          this.snack.open('Basic Information Updated' + ' !', 'OK', {\r\n            duration: 4000,\r\n            verticalPosition: 'top',\r\n            horizontalPosition: 'right',\r\n          });\r\n          this.dialogRef.close({\r\n            status:\"INITIATED\",\r\n            resp:data\r\n          })\r\n        \r\n        } else {\r\n          this.snack.open(\r\n            'Not able to connect to server!',\r\n            'INTERNAL SERVER ERROR',\r\n            {\r\n              duration: 4000,\r\n              verticalPosition: 'top',\r\n              horizontalPosition: 'right',\r\n            }\r\n          );\r\n        }\r\n\r\n        (error) => {\r\n          console.log('error resp :: ', error);\r\n          this.snack.open(`${error.error.message} `, 'OK', {\r\n            duration: 4000,\r\n            verticalPosition: 'top',\r\n            horizontalPosition: 'right',\r\n          });\r\n        };\r\n      });\r\n  }\r\n\r\n    close(){\r\n      this.dialogRef.close({\r\n        status: 'UNDER_PROCESS'\r\n      })\r\n    }\r\n  }\r\n","<div fxLayout=\"row\" fxLayoutAlign=\"end\">\r\n    <mat-icon class=\"closeIcon\" (click)=\"close()\">close</mat-icon>\r\n</div>\r\n<h1 mat-dialog-title></h1>\r\n<mat-dialog-content>\r\n    <form [formGroup]=\"corporateInfoUpdateForm\">\r\n\r\n        <div fxLayout=\"row wrap\" class=\"full-width\">\r\n            <div fxFlex=\"20%\" fxFlex.xs=\"100%\" class=\"full-width\">\r\n                <mat-hint class=\"hintClass\">CoporateId</mat-hint>\r\n                <mat-card class=\"inputCard\">\r\n                    <input matInput name=\"corporateId\" formControlName=\"corporateId\" placeholder=\"Corporate Id\"\r\n                        readonly=\"true\" />\r\n                </mat-card>\r\n            </div>\r\n            <div fxFlex=\"33.33%\" fxFlex.xs=\"100%\" class=\"full-width\">\r\n                <mat-hint class=\"hintClass\">Company Name* </mat-hint>\r\n                <mat-card class=\"inputCard\">\r\n                    <input matInput name=\"companyName\" formControlName=\"companyName\" placeholder=\"Company Name\" />\r\n                </mat-card>\r\n                <mat-error\r\n                    *ngIf=\"corporateInfoUpdateForm.get('companyName').touched && !corporateInfoUpdateForm.get('companyName').valid\">\r\n                    Company Name is Required!\r\n                </mat-error>\r\n            </div>\r\n            <div fxFlex=\"33.33%\" fxFlex.xs=\"100%\" class=\"full-width\">\r\n                <mat-hint class=\"hintClass\">Category*</mat-hint>\r\n                <mat-card class=\"inputCard\">\r\n                    <mat-select formControlName=\"category\" id=\"forCategory\" required>\r\n                        <mat-option value=\"\">Select Category</mat-option>\r\n                        <mat-option *ngFor=\"let category of categoryArr\" [value]=\"category\">\r\n                            {{category}}\r\n                        </mat-option>\r\n                    </mat-select>\r\n                </mat-card>\r\n                <mat-error\r\n                    *ngIf=\"corporateInfoUpdateForm.get('category').touched && !corporateInfoUpdateForm.get('category').valid\">\r\n                    Please select Category!\r\n                </mat-error>\r\n            </div>\r\n            <div fxFlex=\"33.33%\" fxFlex.xs=\"100%\" class=\"full-width\">\r\n                <mat-hint class=\"hintClass\">Country*</mat-hint>\r\n                <mat-card class=\"inputCard\">\r\n                    <mat-select formControlName=\"country\" id=\"forCountry\" required>\r\n                        <mat-option value=\"\">Select Country</mat-option>\r\n                        <mat-option *ngFor=\"let country of countryArr\" [value]=\"country\">\r\n                            {{country}}\r\n                        </mat-option>\r\n                    </mat-select>\r\n                </mat-card>\r\n                <mat-error\r\n                    *ngIf=\"corporateInfoUpdateForm.get('country').touched && !corporateInfoUpdateForm.get('country').valid\">\r\n                    Please select Country!\r\n                </mat-error>\r\n            </div>\r\n        </div>\r\n\r\n    </form>\r\n</mat-dialog-content>\r\n<div fxLayout=\"row\" fxLayoutAlign=\"end\" fxLayoutGap=\"20px\">\r\n    <button type=\"button\" class=\"editbtn\" mat-raised-button [disabled]=\"corporateInfoUpdateForm.invalid\"\r\n        (click)=\"onSubmit()\">Save</button>\r\n    &nbsp;&nbsp;&nbsp;\r\n    <button type=\"button\" class=\"cancelbtn\" (click)=\"close()\">\r\n        Cancel\r\n    </button>\r\n</div>","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { orderBy, sortBy } from \"lodash-es\";\r\n\r\n@Pipe({\r\n  name: 'customTaskSummarySorting',\r\n  pure: false\r\n})\r\nexport class CustomTaskSummarySortingPipe implements PipeTransform {\r\n\r\n  transform(value: any[], criteria: SortCriteria): any[] {\r\n\r\n    if (!value || !criteria)\r\n      return value;\r\n\r\n    let p: string = criteria.property;\r\n\r\n    let sortFn: (a: any, b: any) => any = (a, b) => {\r\n      let value: number = 0;\r\n      if (a[p] === undefined) value = -1;\r\n      else if (b[p] === undefined) value = 1;\r\n      else if (a[p] === null) value = -1;\r\n      else if (b[p] === null) value = 1;\r\n      else if (a[p] === '') value = -1;\r\n      else if (b[p] === '') value = 1;\r\n      else value = a[p] - b[p];\r\n      // a[p] > b[p] ? 1 : (b[p] > a[p] ? -1 : 0);\r\n      return criteria.descending ? (value * -1) : value;\r\n    };\r\n\r\n\r\n    let sortForAlpha: (a: any, b: any) => any = (a, b) => {\r\n      let value: number = 0;\r\n      if (a[p] === undefined) value = -1;\r\n      else if (b[p] === undefined) value = 1;\r\n      else if (a[p] === null) value = -1;\r\n      else if (b[p] === null) value = 1;\r\n      else if (a[p] === '') value = -1;\r\n      else if (b[p] === '') value = 1;\r\n      else value = (a[p].toLocaleLowerCase() > b[p].toLocaleLowerCase()) ? 1 :\r\n        ((b[p].toLocaleLowerCase() > a[p].toLocaleLowerCase()) ? -1 : 0);\r\n      return criteria.descending ? (value * -1) : value;\r\n    };\r\n\r\n    let sortForAlphaNumeric: (a: any, b: any) => any = (a, b) => {\r\n      let value: number = 0;\r\n      if (a[p] === undefined) value = -1;\r\n      else if (b[p] === undefined) value = 1;\r\n      else if (a[p] === null) value = -1;\r\n      else if (b[p] === null) value = 1;\r\n      else if (a[p] === '') value = -1;\r\n      else if (b[p] === '') value = 1;\r\n      else {\r\n        var charPart = [a[p].substring(0, 4), b[p].substring(0, 4)],\r\n          numPart = [a[p].substring(4) * 1, b[p].substring(4) * 1];\r\n        // debugger;\r\n        if (charPart[0] < charPart[1]) value = -1;\r\n        else if (charPart[0] > charPart[1]) value = 1;\r\n        else { //(charPart[0] == charPart[1]){\r\n          if (numPart[0] < numPart[1]) value = -1;\r\n          else if (numPart[0] > numPart[1]) value = 1;\r\n        }\r\n      }\r\n      // value = a[p].toLocaleLowerCase().localeCompare(b[p].toLocaleLowerCase(), 'en', { numeric: true });\r\n      return criteria.descending ? (value * -1) : value;\r\n\r\n    };\r\n\r\n\r\n    // const sortAlphaNum = (a, b) => a.localeCompare(b, 'en', { numeric: true })\r\n    // console.log(['A1', 'A10', 'A11', 'A12', 'A2', 'A3', 'A4', 'B10', 'B2', 'F1', 'F12', 'F3'].sort(sortAlphaNum))\r\n\r\n    if (criteria.property === \"kycReference\") {\r\n      // console.log('kycReference :: ')\r\n      value.sort(sortForAlphaNumeric);\r\n    }\r\n\r\n    if (criteria.property === \"firstName\") {\r\n      // console.log('firstName :: ')\r\n      value.sort(sortForAlpha);\r\n    } else {\r\n      value.sort(sortFn);\r\n    }\r\n    return value;\r\n  }\r\n\r\n\r\n}\r\n\r\nexport interface SortCriteria {\r\n  property: string;\r\n  descending?: boolean;\r\n}\r\n\r\n\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { DocumentOcrService } from 'app/views/others/genric-document-upload/document-ocr.service';\r\n\r\n@Component({\r\n  selector: 'app-update-proof-of-identity',\r\n  templateUrl: './update-proof-of-identity.component.html',\r\n  styleUrls: ['./update-proof-of-identity.component.scss']\r\n})\r\nexport class UpdateProofOfIdentityComponent implements OnInit {\r\n  customerId: any\r\n  screenInfo={\r\n    screenName:'onboarding',\r\n    data:'',\r\n    customerId: '',\r\n    isEdit: true\r\n  }\r\n  disableNextAtIndex1: boolean = false;\r\n  constructor(\r\n    private ls: LocalStoreService,\r\n    @Inject(MAT_DIALOG_DATA) public data,\r\n    private formBuilder: FormBuilder,\r\n    private dialogRef: MatDialogRef<UpdateProofOfIdentityComponent>,\r\n    private doOcrService:DocumentOcrService,\r\n\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.customerId = this.ls.getItem('customerId')\r\n    this.ls.setItem('customer_id',this.customerId)\r\n    this.screenInfo={\r\n      screenName:'onboarding',\r\n      data:this.data,\r\n      customerId: this.customerId,\r\n      isEdit:true\r\n    }\r\n    this.doOcrService.getenableNext()\r\n    .subscribe(data=>{\r\n      console.log(\"data disableNextAtIndex1 :: \",data);\r\n      this.disableNextAtIndex1=data;\r\n    });\r\n    \r\n  }\r\n  createDocItemOthers(item): FormGroup {\r\n    return this.formBuilder.group({\r\n      id: item ? item.id : [''],\r\n      documentType: item ? item.documentName : [''],\r\n      documentName: item ? item.fileName : [''],\r\n      fileData: item ? item.fileData : [''],\r\n      fileUrl: item ? item.fileUrl : [''],\r\n      fileUrl2: item ? item.fileUrl2 : [''],\r\n      documentSide: item ? item.documentSide : ['']\r\n    })\r\n  }\r\nonSubmit(){\r\n  this.dialogRef.close({\r\n    status:'INITIATED',\r\n    screen:'documentUpload'\r\n  })\r\n}\r\nclose(){\r\n  this.dialogRef.close({\r\n    status:'ONGOING'    \r\n  })\r\n}\r\n}\r\n","\r\n<div fxLayout=\"row\" fxLayoutAlign=\"end\">\r\n    <mat-icon class=\"closeIcon\" (click)=\"close()\">close</mat-icon>\r\n</div>\r\n<h3 style=\"font-size: 18px;\">Proof Of Identity</h3>\r\n    <mat-card>\r\n        <app-genric-document-upload [screenInfo]=\"screenInfo\"></app-genric-document-upload>\r\n    </mat-card>\r\n\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"end\" fxLayoutGap=\"20px\">\r\n        <button type=\"button\" class=\"editbtn\" mat-raised-button [disabled]=\"disableNextAtIndex1\"\r\n          (click)=\"onSubmit()\">Save</button>\r\n        &nbsp;&nbsp;&nbsp;\r\n        <button type=\"button\" class=\"cancelbtn\" (click)=\"close()\">\r\n          Cancel\r\n        </button>\r\n      </div>","import { ChangeDetectorRef, Component, Inject, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport * as moment from 'moment';\r\n\r\n@Component({\r\n  selector: 'app-card-financial-details-update',\r\n  templateUrl: './card-financial-details-update.component.html',\r\n  styleUrls: ['./card-financial-details-update.component.scss']\r\n})\r\nexport class CardFinancialDetailsUpdateComponent implements OnInit {\r\n  cardFinancialDetailsUpdateForm: FormGroup;\r\n  incomeErrMsg: any;\r\n  disableNext: boolean;\r\n  ExpensesErrMsg: any;\r\n  LiabilitiesErrMsg: any;\r\n  assetErrMsg: any;\r\n  arrayEmploymentType: String[];\r\n  arrayEmploymentCategory: String[];\r\n  maxDate = new Date();\r\n  \r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    public dialogRef: MatDialogRef<CardFinancialDetailsUpdateComponent>,\r\n    private formBuilder: FormBuilder,\r\n    private apiService: ApiService,\r\n    private cdr: ChangeDetectorRef,\r\n    private snack: MatSnackBar\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    console.log(this.data);\r\n    \r\n    this.getEmploymentType(\"fin_employment_type\");\r\n    this.getEmploymentCategory(\"employment_category\");\r\n    if(this.data && this.data.financialInfo){\r\n      this.buildFinacialFormGroup(this.data.financialInfo[0])\r\n    }\r\n    else{\r\n      this.buildFinacialFormGroup()\r\n    }\r\n    \r\n  }\r\n\r\n  buildFinacialFormGroup(data?) {\r\n    console.log(data);\r\n   this.cardFinancialDetailsUpdateForm = this.formBuilder.group({\r\n     // Financial Details\r\n     id:[data ? data.id: ''],\r\n     applicantName: [this.data.initiationInfo.applicantName, Validators.required],\r\n     currentlyWorking: [data ? data.currentlyWorking : ''],\r\n     applicantTotalIncome: [data ? data.applicantTotalIncome : 0, Validators.required],\r\n     applicantTotalExpense: [data ? data.applicantTotalExpense : 0, Validators.required],\r\n     lastUpdatedon: [data ? new Date(data.lastUpdatedon) : ''],\r\n     //limit_end_date: [data ? new Date(data.limit_end_date) : ''],\r\n     \r\n     // Employement Details\r\n     employmentType: [data ? data.employmentType : '', Validators.required],\r\n     employmentCategory: [data ? data.employmentCategory : '', Validators.required],\r\n     employeeNumber: [data ? data.employeeNumber : '', Validators.required],\r\n     officeName: [data ? data.officeName : '', Validators.required],\r\n     designation: [data ? data.designation : '', Validators.required],\r\n     employmentStartDate: [data ? new Date(data.employmentStartDate): '', Validators.required],\r\n     employmentEndDate: [data ? new Date(data.employmentEndDate): ''],\r\n     \r\n     // Monthly Income\r\n     salary: [data ? data.salary : ''],\r\n     interestIncome: [data ? data.interestIncome : ''],\r\n     bonus: [data ? data.bonus : ''],\r\n     cashGifts: [data ? data.cashGifts : ''],\r\n     business: [data ? data.business : ''],\r\n     pension: [data ? data.pension : ''],\r\n     monthlyIncomeRentals: [data ? data.monthlyIncomeRentals : ''],\r\n     monthlyIncomeOthers: [data ? data.monthlyIncomeOthers : ''],\r\n     monthlyIncomeTotal: [data ? data.monthlyIncomeTotal : 0],\r\n           \r\n     // Monthly Expense\r\n     household: [data ? data.household : ''],\r\n     education: [data ? data.education : ''],\r\n     vehicleMaintenance: [data ? data.vehicleMaintenance : ''],\r\n     monthlyExpenseRentals: [data ? data.monthlyExpenseRentals : ''],\r\n     monthlyExpenseOthers: [data ? data.monthlyExpenseOthers : ''],\r\n     medical: [data ? data.medical : ''],\r\n     travel: [data ? data.travel : ''],\r\n     monthlyExpenseTotal: [data ? data.monthlyExpenseTotal : 0],\r\n     \r\n     // Annual Liability\r\n     propertyLoan: [data ? data.propertyLoan : ''],\r\n     vehicleLoan: [data ? data.vehicleLoan : ''],\r\n     personalLoans: [data ? data.personalLoans : ''],\r\n     overdraft: [data ? data.overdraft : ''],\r\n     cardOutstandings: [data ? data.cardOutstandings : ''],\r\n     liabilityOthers: [data ? data.liabilityOthers : ''],\r\n     liabilityTotal: [data ? data.liabilityTotal : 0],\r\n     \r\n     // Assets\r\n     savingDeposits: [data ? data.savingDeposits : ''],\r\n     properties: [data ? data.properties : ''],\r\n     automobiles: [data ? data.automobiles : ''],\r\n     fixedDeposits: [data ? data.fixedDeposits : ''],\r\n     lands: [data ? data.lands : ''],\r\n     assetOthers: [data ? data.assetOthers : ''],\r\n     stocks: [data ? data.stocks : ''],\r\n     assetTotal: [data ? data.assetTotal : 0],\r\n     \r\n     // accountId; -->need to get from other screens\r\n    // accountId: this.accountId != null ? this.accountId : '',\r\n  }, {validator:(formGroup:FormGroup)=>{\r\n    return this.validateInputGroups(formGroup)\r\n  }\r\n})\r\n  };\r\n validateInputGroups(formgroup:FormGroup) {\r\n   if(formgroup.controls[\"salary\"].value || formgroup.controls[\"interestIncome\"].value || \r\n   formgroup.controls[\"bonus\"].value || formgroup.controls[\"cashGifts\"].value || \r\n   formgroup.controls[\"business\"].value || formgroup.controls[\"pension\"].value || \r\n   formgroup.controls[\"monthlyIncomeRentals\"].value || formgroup.controls[\"monthlyIncomeOthers\"].value) {\r\n    \r\n     this.incomeErrMsg = null\r\n       this.disableNext = true;\r\n     \r\n   }\r\n   else {\r\n     this.incomeErrMsg = \"Entering any one field is mandatory for Monthly Income Section\";\r\n     this.disableNext = false;\r\n   }\r\n   \r\n   if(formgroup.controls[\"household\"].value || formgroup.controls[\"education\"].value ||\r\n   formgroup.controls[\"vehicleMaintenance\"].value || formgroup.controls[\"monthlyExpenseRentals\"].value ||\r\n   formgroup.controls[\"monthlyExpenseOthers\"].value || formgroup.controls[\"medical\"].value || \r\n   formgroup.controls[\"travel\"].value) {\r\n\r\n     this.ExpensesErrMsg = null;\r\n       this.disableNext = true;\r\n     \r\n   }\r\n   else {\r\n     this.ExpensesErrMsg = \"Entering any one field is mandatory for Monthly Expenses Section\";\r\n     this.disableNext = false;\r\n   }\r\n   \r\n   if(formgroup.controls[\"propertyLoan\"].value || formgroup.controls[\"vehicleLoan\"].value ||\r\n   formgroup.controls[\"personalLoans\"].value || formgroup.controls[\"overdraft\"].value ||\r\n   formgroup.controls[\"cardOutstandings\"].value || formgroup.controls[\"liabilityOthers\"].value) {\r\n     \r\n     this.LiabilitiesErrMsg = null;\r\n       this.disableNext = true;\r\n     \r\n   }\r\n   else {\r\n     this.LiabilitiesErrMsg = \"Entering any one field is mandatory for Annual Liabilities Section\";\r\n     this.disableNext = false;\r\n   }\r\n   \r\n   if(formgroup.controls[\"savingDeposits\"].value || formgroup.controls[\"properties\"].value ||\r\n   formgroup.controls[\"automobiles\"].value || formgroup.controls[\"fixedDeposits\"].value ||\r\n   formgroup.controls[\"lands\"].value || formgroup.controls[\"assetOthers\"].value || \r\n   formgroup.controls[\"stocks\"].value) {\r\n\r\n     this.assetErrMsg = null;\r\n       this.disableNext = true;\r\n     \r\n   }\r\n   else {\r\n     this.assetErrMsg = \"Entering any one field is mandatory for Asset Section\";\r\n     this.disableNext = false;\r\n   }\r\n }\r\n converDate(value) {\r\n  let date = moment(value).format('YYYY-MMM-DD');\r\n  console.log(\"date\", date);\r\n  if (date)\r\n    return date;\r\n}\r\n onSubmit() {\r\n  let startDate = this.converDate(this.cardFinancialDetailsUpdateForm.controls.employmentStartDate.value);\r\n  if(startDate && startDate!= \"Invalid date\"){\r\n  console.log(\"startDate\", startDate);\r\n  this.cardFinancialDetailsUpdateForm.value['employmentStartDate'] = startDate;\r\n  }else{\r\n    this.cardFinancialDetailsUpdateForm.value['employmentStartDate'] = null;\r\n  }\r\n  let endDate = this.converDate(this.cardFinancialDetailsUpdateForm.controls.employmentEndDate.value);\r\n  if(endDate && endDate!= \"Invalid date\"){\r\n    console.log(\"startDate\", endDate);\r\n    this.cardFinancialDetailsUpdateForm.value['employmentEndDate'] = endDate;\r\n  }else{\r\n    this.cardFinancialDetailsUpdateForm.value['employmentEndDate'] = null;\r\n  }\r\n  \r\n  //let lastUpdatedon = this.converDate(this.cardFinancialDetailsUpdateForm.controls.lastUpdatedon.value);\r\n  let lastUpdatedon =moment(this.cardFinancialDetailsUpdateForm.controls.lastUpdatedon.value).format('YYYY-MM-DD HH:MM:SS');\r\n  console.log(\"lastUpdatedon\",lastUpdatedon)\r\n  if(lastUpdatedon && lastUpdatedon!= \"Invalid date\"){\r\n    console.log(\"startDate\", lastUpdatedon);\r\n    this.cardFinancialDetailsUpdateForm.value['lastUpdatedon'] = lastUpdatedon;\r\n  }else{\r\n    this.cardFinancialDetailsUpdateForm.value['lastUpdatedon'] = null;\r\n  }\r\n\r\n  this.cardFinancialDetailsUpdateForm.value.accountType=\"cardOrigin\";\r\n  this.cardFinancialDetailsUpdateForm.value.cardId=this.data.initiationInfo.cardId; \r\n  console.log(\"submit\", this.cardFinancialDetailsUpdateForm.value);\r\n  console.log(this.cardFinancialDetailsUpdateForm.value)\r\n  var payload: any[]=[];\r\n  payload.push(this.cardFinancialDetailsUpdateForm.value)\r\n  console.log(payload);\r\n  // if (!this.cardFinancialDetailsUpdateForm.value.applicantName || !this.cardFinancialDetailsUpdateForm.value.employmentType || !this.cardFinancialDetailsUpdateForm.value.employmentCategory) {\r\n  //   console.log(\"if--->\")\r\n  //   Swal.fire('Please Enter The Mandatory Fields !');\r\n  //   return false;\r\n  // }\r\n  this.apiService.upsertCardFinancialDetails(payload).subscribe(fincialResp => {\r\n\r\n    console.log(fincialResp);\r\n    this.snack.open('Financial Details Updated!', 'OK', {\r\n      duration: 4000,\r\n      verticalPosition: 'top',\r\n      horizontalPosition: 'right'\r\n    });\r\n      let statusModel = {\r\n        cardId: this.data.initiationInfo.cardId,\r\n        status: \"BACKLOG\"\r\n      };\r\n      this.apiService.updateCardStatus(statusModel).subscribe(data => {\r\n        this.dialogRef.close({\r\n          status: data.status\r\n         });\r\n      });\r\n    \r\n\r\n  }, err => {\r\n    this.snack.open('Error Unable to Save!', 'OK', {\r\n      duration: 4000,\r\n      verticalPosition: 'top',\r\n      horizontalPosition: 'right'\r\n    });\r\n  })\r\n\r\n}\r\n// Total Monthly Income\r\ncalculateTotalMonthlyIncome(value) {\r\n  let income:number = Number(value.salary) + Number(value.business) + \r\n  Number(value.interestIncome) + Number(value.pension) + \r\n  Number(value.bonus) + Number(value.monthlyIncomeOthers) + \r\n  Number(value.monthlyIncomeRentals) + Number(value.cashGifts);\r\n  \r\n  // this.cardFinancialDetailsUpdateForm.controls.monthlyIncome.get('monthlyIncomeTotal').setValue(income);\r\n  this.cardFinancialDetailsUpdateForm.controls.monthlyIncomeTotal.setValue(income);\r\n  this.cdr.markForCheck();\r\n  this.cdr.detectChanges();\r\n\r\n  this.calculateTotalIncomeAndExpense(this.cardFinancialDetailsUpdateForm.value);\r\n}\r\n\r\n// Total Monthly Expense\r\ncalculateTotalMonthlyExpenses(value) {\r\n  let expense:number = Number(value.household) + Number(value.education) + \r\n    Number(value.vehicleMaintenance) + Number(value.monthlyExpenseOthers) + \r\n    Number(value.medical) + Number(value.travel) + \r\n    Number(value.monthlyExpenseRentals);\r\n\r\n  // this.cardFinancialDetailsUpdateForm.controls.monthlyExpense.get('monthlyExpenseTotal').setValue(expense);\r\n  this.cardFinancialDetailsUpdateForm.controls.monthlyExpenseTotal.setValue(expense);\r\n  this.cdr.markForCheck();\r\n  this.cdr.detectChanges();\r\n\r\n  this.calculateTotalIncomeAndExpense(this.cardFinancialDetailsUpdateForm.value);\r\n}\r\n\r\n// Total Liabilities\r\ncalculateTotalLiabilities(value) {\r\n  let liability:number = Number(value.propertyLoan) + Number(value.personalLoans) + \r\n  Number(value.overdraft) + Number(value.vehicleLoan) + \r\n  Number(value.cardOutstandings) + Number(value.liabilityOthers);\r\n\r\n  // this.cardFinancialDetailsUpdateForm.controls.annualLiability.get('liabilityTotal').setValue(liability);\r\n  this.cardFinancialDetailsUpdateForm.controls.liabilityTotal.setValue(liability);\r\n  this.cdr.markForCheck();\r\n  this.cdr.detectChanges();\r\n  \r\n  this.calculateTotalIncomeAndExpense(this.cardFinancialDetailsUpdateForm.value);\r\n}\r\n\r\n// Total Assets\r\ncalculateTotalAssets(value) {\r\n  let asset:number = Number(value.savingDeposits) + Number(value.properties) + \r\n  Number(value.fixedDeposits) + Number(value.stocks) + \r\n  Number(value.automobiles) + Number(value.lands) + Number(value.assetOthers);\r\n\r\n  // this.cardFinancialDetailsUpdateForm.controls.assets.get('assetTotal').setValue(asset);\r\n  this.cardFinancialDetailsUpdateForm.controls.assetTotal.setValue(asset);\r\n  this.cdr.markForCheck();\r\n  this.cdr.detectChanges();\r\n  \r\n  this.calculateTotalIncomeAndExpense(this.cardFinancialDetailsUpdateForm.value);\r\n}\r\n\r\n// Total Income, Expense and Final Total\r\ncalculateTotalIncomeAndExpense(value) {\r\n\r\n  let totalIncome:number = (value.monthlyIncomeTotal*12) + value.assetTotal;\r\n  let totalExpense:number = (value.monthlyExpenseTotal*12) + value.liabilityTotal;\r\n\r\n  this.cardFinancialDetailsUpdateForm.controls.applicantTotalIncome.setValue(totalIncome);\r\n  this.cardFinancialDetailsUpdateForm.controls.applicantTotalExpense.setValue(totalExpense);\r\n  this.cdr.markForCheck();\r\n  this.cdr.detectChanges();\r\n }\r\n  close(){\r\n    this.dialogRef.close({\r\n      status:\"ONGOING\"\r\n    })\r\n  }\r\n\r\n  _keyPress(event: any) {\r\n    const pattern = /[0-9]/;\r\n    let inputChar = String.fromCharCode(event.charCode);\r\n    if (!pattern.test(inputChar)) {\r\n        event.preventDefault();\r\n    }\r\n   }\r\n   letterOnly(event) {\r\n    var charCode = event.keyCode;\r\n            if ((charCode > 64 && charCode < 91) || (charCode > 96 && charCode < 123) || charCode == 8)\r\n                return true;\r\n            else\r\n                return false;\r\n  }\r\n   getEmploymentType(key: string) {\r\n    this.apiService.getDropDownValues(key).subscribe((data) => {\r\n      this.arrayEmploymentType = data;\r\n    });\r\n  }\r\n  getEmploymentCategory(key: string) {\r\n    this.apiService.getDropDownValues(key).subscribe((data) => {\r\n      this.arrayEmploymentCategory = data;\r\n    });\r\n  }\r\n}\r\n","<div fxLayout=\"row\" fxLayoutAlign=\"end\" class=\"contain\">\r\n  <mat-icon class=\"closeIcon\" (click)=\"close()\">close</mat-icon>\r\n</div>\r\n\r\n<h1 mat-dialog-title>Financial Details</h1>\r\n\r\n<mat-dialog-content>\r\n  <mat-card>\r\n    <form [formGroup]=\"cardFinancialDetailsUpdateForm\">\r\n      <mat-card>\r\n        <div fxLayout=\"row\" fxLayoutGap=\"5%\">\r\n          <mat-form-field fxFlex=\"30%\" appearance=\"outline\" class=\"full-width\">\r\n            <mat-label>Applicant Name</mat-label>\r\n            <input matInput formControlName=\"applicantName\" placeholder=\"Applicant Name\" />\r\n          </mat-form-field>\r\n          <mat-form-field fxFlex=\"30%\" appearance=\"outline\" class=\"full-width\">\r\n            <mat-label>Currently Working</mat-label>\r\n            <input matInput type=\"text\" formControlName=\"currentlyWorking\" placeholder=\"Currently Working\" />\r\n          </mat-form-field>\r\n\r\n          <mat-form-field fxFlex=\"30%\" appearance=\"outline\" class=\"full-width\">\r\n            <mat-label>Total Income*</mat-label>\r\n            <input matInput type=\"number\" formControlName=\"applicantTotalIncome\" placeholder=\"Total Income\" />\r\n          </mat-form-field>\r\n        </div>\r\n\r\n        <div fxLayout=\"row\" fxLayoutGap=\"5%\">\r\n          <mat-form-field fxFlex=\"30%\" appearance=\"outline\" class=\"full-width\">\r\n            <mat-label>Total Expenses*</mat-label>\r\n            <input matInput type=\"number\" formControlName=\"applicantTotalExpense\" placeholder=\"Total  Expenses\" />\r\n          </mat-form-field>\r\n          <mat-form-field fxFlex=\"30%\" appearance=\"outline\" class=\"full-width\">\r\n            <mat-label>Last Update On</mat-label>\r\n            <input matInput id=\"dob\" class=\"alignment\" readonly [matDatepicker]=\"picker\" value=\"offerIssueDate\"\r\n              placeholder=\"DD/MM/YYYY\" formControlName=\"lastUpdatedon\" />\r\n\r\n            <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n            <mat-datepicker #picker> </mat-datepicker>\r\n          </mat-form-field>\r\n        </div>\r\n      </mat-card>\r\n      <mat-card>\r\n        <mat-card-title>\r\n          <div>Employment Details</div>\r\n          <mat-divider></mat-divider>\r\n        </mat-card-title>\r\n        <mat-card-content>\r\n          <div fxLayout=\"row\" fxLayoutGap=\"5%\">\r\n            <mat-form-field fxFlex=\"30%\" appearance=\"outline\" class=\"full-width\">\r\n              <mat-label>Employment Type*</mat-label>\r\n              <mat-select formControlName=\"employmentType\">\r\n                <mat-option *ngFor=\"let employmentType of arrayEmploymentType\" [value]=\"employmentType\">\r\n                  {{ employmentType }}\r\n                </mat-option>\r\n              </mat-select>\r\n              <mat-error *ngIf=\"cardFinancialDetailsUpdateForm.get('employmentType').hasError('required')\">\r\n                Please select the Employment Type\r\n              </mat-error>\r\n            </mat-form-field>\r\n            <mat-form-field fxFlex=\"30%\" appearance=\"outline\" class=\"full-width\">\r\n              <mat-label>Employment Category*</mat-label>\r\n              <mat-select name=\"employmentCategory\" formControlName=\"employmentCategory\">\r\n                <mat-option *ngFor=\" let employmentCategory of arrayEmploymentCategory \" [value]=\"employmentCategory\">\r\n                  {{ employmentCategory }}\r\n                </mat-option>\r\n              </mat-select>\r\n              <mat-error\r\n                *ngIf=\"cardFinancialDetailsUpdateForm.get('employmentCategory').hasError('required') && cardFinancialDetailsUpdateForm.get('employmentCategory').touched\">\r\n                Please select the Employment Category\r\n              </mat-error>\r\n            </mat-form-field>\r\n            <mat-form-field fxFlex=\"30%\" appearance=\"outline\" class=\"full-width\">\r\n              <mat-label>Employee number*</mat-label>\r\n              <input matInput maxLength=\"5\" (keypress)=\"_keyPress($event)\" formControlName=\"employeeNumber\"\r\n                placeholder=\"Employee Number\" />\r\n              <mat-error *ngIf=\"cardFinancialDetailsUpdateForm.get('employeeNumber').hasError('required')\">\r\n                Please enter the Employee Number\r\n              </mat-error>\r\n            </mat-form-field>\r\n          </div>\r\n\r\n          <div fxLayout=\"row\" fxLayoutGap=\"5%\">\r\n            <mat-form-field fxFlex=\"30%\" appearance=\"outline\" class=\"full-width\">\r\n              <mat-label>Office Name*</mat-label>\r\n              <input matInput maxlength=\"20\" name=\"Office Name\" formControlName=\"officeName\" placeholder=\"Office Name\"\r\n                (keypress)=\"letterOnly($event)\" />\r\n              <mat-error *ngIf=\"cardFinancialDetailsUpdateForm.get('officeName').hasError('required')\">\r\n                Please enter the Office Name\r\n              </mat-error>\r\n            </mat-form-field>\r\n            <mat-form-field fxFlex=\"30%\" appearance=\"outline\" class=\"full-width\">\r\n              <mat-label>Designation*</mat-label>\r\n              <input matInput maxlength=\"20\" name=\"Designation\" formControlName=\"designation\" placeholder=\"Designation\"\r\n                (keypress)=\"letterOnly($event)\" />\r\n              <mat-error *ngIf=\"cardFinancialDetailsUpdateForm.get('designation').hasError('required')\">\r\n                Please enter the Designation\r\n              </mat-error>\r\n            </mat-form-field>\r\n            <mat-form-field fxFlex=\"31.32%\" appearance=\"outline\" class=\"full-width\">\r\n              <mat-label>Employment Start Date*</mat-label>\r\n              <input matInput id=\"dob\" class=\"alignment\" readonly [max]=\"maxDate\" [matDatepicker]=\"start\"\r\n                value=\"offerIssueDate\" placeholder=\"DD/MM/YYYY\" formControlName=\"employmentStartDate\" />\r\n              <mat-datepicker-toggle matSuffix [for]=\"start\">\r\n              </mat-datepicker-toggle>\r\n              <mat-datepicker #start> </mat-datepicker>\r\n              <mat-error *ngIf=\"cardFinancialDetailsUpdateForm.get('employmentStartDate').hasError('required')\">\r\n                Employment Start Date is Required!\r\n              </mat-error>\r\n            </mat-form-field>\r\n          </div>\r\n          <div fxLayout=\"row\">\r\n            <mat-form-field fxFlex=\"30%\" appearance=\"outline\" class=\"full-width\">\r\n              <mat-label>Employment End Date</mat-label>\r\n\r\n              <input matInput id=\"dob\" class=\"alignment\" readonly [matDatepicker]=\"end\"\r\n                [min]=\"cardFinancialDetailsUpdateForm .get('employmentStartDate').value\" value=\"offerIssueDate\"\r\n                placeholder=\"DD/MM/YYYY\" formControlName=\"employmentEndDate\" />\r\n\r\n              <mat-datepicker-toggle matSuffix [for]=\"end\">\r\n              </mat-datepicker-toggle>\r\n              <mat-datepicker #end> </mat-datepicker>\r\n\r\n              <mat-error *ngIf=\"cardFinancialDetailsUpdateForm.get('employmentEndDate').hasError('required')\">\r\n                Employment End Date is Required!\r\n              </mat-error>\r\n            </mat-form-field>\r\n          </div>\r\n        </mat-card-content>\r\n      </mat-card>\r\n\r\n      <mat-card>\r\n        <mat-card-title class=\"\">\r\n          <div class=\"card-title-text\">\r\n            Monthly Income\r\n            <div class=\"ErrMsg\">{{ incomeErrMsg }}</div>\r\n          </div>\r\n          <mat-divider></mat-divider>\r\n        </mat-card-title>\r\n        <mat-card-content>\r\n          <div fxLayout=\"row\" fxLayoutGap=\"5%\">\r\n            <mat-form-field fxFlex=\"30%\" appearance=\"outline\" class=\"full-width\">\r\n              <mat-label>Bonus</mat-label>\r\n              <input matInput maxlength=\"10\" type=\"text\" onlyNumber formControlName=\"bonus\" name=\"bonus\"\r\n                placeholder=\"Bonus\" (keypress)=\"_keyPress($event)\"\r\n                (input)=\"calculateTotalMonthlyIncome(cardFinancialDetailsUpdateForm.value)\" />\r\n            </mat-form-field>\r\n\r\n            <mat-form-field fxFlex=\"30%\" appearance=\"outline\" class=\"full-width\">\r\n              <mat-label>Interest Income</mat-label>\r\n              <input matInput maxlength=\"10\" type=\"text\" onlyNumber formControlName=\"interestIncome\"\r\n                name=\"interestIncome\" placeholder=\"Interest Income\" (keypress)=\"_keyPress($event)\"\r\n                (input)=\"calculateTotalMonthlyIncome(cardFinancialDetailsUpdateForm.value)\" />\r\n            </mat-form-field>\r\n\r\n            <mat-form-field fxFlex=\"30%\" appearance=\"outline\" class=\"full-width\">\r\n              <mat-label>Salary</mat-label>\r\n              <input matInput maxlength=\"10\" type=\"text\" onlyNumber formControlName=\"salary\" name=\"salary\"\r\n                (keypress)=\"_keyPress($event)\" placeholder=\"Salary\"\r\n                (input)=\"calculateTotalMonthlyIncome( cardFinancialDetailsUpdateForm.value )\" />\r\n            </mat-form-field>\r\n          </div>\r\n          <div fxLayout=\"row\" fxLayoutGap=\"5%\">\r\n            <mat-form-field fxFlex=\"30%\" appearance=\"outline\" class=\"full-width\">\r\n              <mat-label>Business</mat-label>\r\n              <input matInput maxlength=\"10\" type=\"text\" onlyNumber name=\"business\" formControlName=\"business\"\r\n                placeholder=\"Business\" (input)=\"calculateTotalMonthlyIncome(cardFinancialDetailsUpdateForm.value) \"\r\n                (keypress)=\"_keyPress($event)\" />\r\n            </mat-form-field>\r\n\r\n            <mat-form-field fxFlex=\"30%\" appearance=\"outline\" class=\"full-width\">\r\n              <mat-label>Pension</mat-label>\r\n              <input matInput maxlength=\"10\" type=\"text\" onlyNumber name=\"pension\" formControlName=\"pension\"\r\n                placeholder=\"Pension\" (keypress)=\"_keyPress($event)\"\r\n                (input)=\"calculateTotalMonthlyIncome(cardFinancialDetailsUpdateForm.value) \" />\r\n            </mat-form-field>\r\n\r\n            <mat-form-field fxFlex=\"30%\" appearance=\"outline\" class=\"full-width\">\r\n              <mat-label>Rentals</mat-label>\r\n              <input matInput maxlength=\"10\" type=\"text\" onlyNumber name=\"monthlyIncomeRentals\"\r\n                formControlName=\"monthlyIncomeRentals\" placeholder=\"Rentals\"\r\n                (input)=\"calculateTotalMonthlyIncome(cardFinancialDetailsUpdateForm.value)\"\r\n                (keypress)=\"_keyPress($event)\" />\r\n            </mat-form-field>\r\n          </div>\r\n\r\n          <div fxLayout=\"row\" fxLayoutGap=\"5%\">\r\n            <mat-form-field fxFlex=\"30%\" appearance=\"outline\" class=\"full-width\">\r\n              <mat-label>Cash Gifts</mat-label>\r\n              <input matInput maxlength=\"10\" type=\"text\" onlyNumber formControlName=\"cashGifts\" name=\"cashGifts\"\r\n                placeholder=\"Cash Gifts\" (keypress)=\"_keyPress($event)\"\r\n                (input)=\" calculateTotalMonthlyIncome(cardFinancialDetailsUpdateForm.value)\" />\r\n            </mat-form-field>\r\n\r\n            <mat-form-field fxFlex=\"30%\" appearance=\"outline\" class=\"full-width\">\r\n              <mat-label>Others</mat-label>\r\n              <input matInput maxlength=\"10\" type=\"text\" onlyNumber name=\"monthlyIncomeOthers\"\r\n                formControlName=\"monthlyIncomeOthers\" placeholder=\"Others\" (keypress)=\"_keyPress($event)\"\r\n                (input)=\"calculateTotalMonthlyIncome(cardFinancialDetailsUpdateForm.value) \" />\r\n            </mat-form-field>\r\n\r\n            <mat-form-field fxFlex=\"30%\" appearance=\"outline\" class=\"full-width\">\r\n              <mat-label>Total</mat-label>\r\n              <input matInput maxlength=\"10\" type=\"text\" onlyNumber formControlName=\"monthlyIncomeTotal\"\r\n                placeholder=\"Total\" readonly />\r\n            </mat-form-field>\r\n          </div>\r\n        </mat-card-content>\r\n      </mat-card>\r\n\r\n      <mat-card>\r\n        <mat-card-title class=\"\">\r\n          <div class=\"card-title-text\">\r\n            Monthly Expenses\r\n            <div class=\"ErrMsg\">{{ ExpensesErrMsg }}</div>\r\n          </div>\r\n          <mat-divider></mat-divider>\r\n        </mat-card-title>\r\n\r\n        <mat-card-content>\r\n          <div fxLayout=\"row\" fxLayoutGap=\"5%\">\r\n            <mat-form-field fxFlex=\"30%\" appearance=\"outline\" class=\"full-width\">\r\n              <mat-label>Household</mat-label>\r\n              <input matInput maxlength=\"10\" type=\"text\" onlyNumber formControlName=\"household\" name=\"household\"\r\n                placeholder=\"Household\" (keypress)=\"_keyPress($event)\"\r\n                (input)=\"calculateTotalMonthlyExpenses(cardFinancialDetailsUpdateForm.value) \" />\r\n            </mat-form-field>\r\n\r\n            <mat-form-field fxFlex=\"30%\" appearance=\"outline\" class=\"full-width\">\r\n              <mat-label>Education</mat-label>\r\n              <input matInput maxlength=\"10\" type=\"text\" onlyNumber formControlName=\"education\" name=\"mod\"\r\n                placeholder=\"Education\" (keypress)=\"_keyPress($event)\"\r\n                (input)=\"calculateTotalMonthlyExpenses(cardFinancialDetailsUpdateForm.value) \" />\r\n            </mat-form-field>\r\n\r\n            <mat-form-field fxFlex=\"30%\" appearance=\"outline\" class=\"full-width\">\r\n              <mat-label>Vehicle Maintenance</mat-label>\r\n              <input matInput maxlength=\"10\" type=\"text\" onlyNumber formControlName=\"vehicleMaintenance\" name=\"mod\"\r\n                placeholder=\"Vehicle Maintenance\" (keypress)=\"_keyPress($event)\"\r\n                (input)=\"calculateTotalMonthlyExpenses(cardFinancialDetailsUpdateForm.value) \" />\r\n            </mat-form-field>\r\n          </div>\r\n\r\n\r\n          <div fxLayout=\"row\" fxLayoutGap=\"5%\">\r\n            <mat-form-field fxFlex=\"30%\" appearance=\"outline\" class=\"full-width\">\r\n              <mat-label>Medical</mat-label>\r\n              <input matInput maxlength=\"10\" type=\"text\" onlyNumber name=\"medical\" formControlName=\"medical\"\r\n                placeholder=\"Medical\" (keypress)=\"_keyPress($event)\"\r\n                (input)=\"   calculateTotalMonthlyExpenses(     cardFinancialDetailsUpdateForm.value   ) \" />\r\n            </mat-form-field>\r\n\r\n            <mat-form-field fxFlex=\"30%\" appearance=\"outline\" class=\"full-width\">\r\n              <mat-label>Travel</mat-label>\r\n              <input matInput maxlength=\"10\" type=\"text\" onlyNumber name=\"a_sig\" formControlName=\"travel\"\r\n                placeholder=\"Travel\" (keypress)=\"_keyPress($event)\"\r\n                (input)=\"calculateTotalMonthlyExpenses(cardFinancialDetailsUpdateForm.value)\" />\r\n            </mat-form-field>\r\n\r\n            <mat-form-field fxFlex=\"30%\" appearance=\"outline\" class=\"full-width\">\r\n              <mat-label>Rentals</mat-label>\r\n              <input matInput maxlength=\"10\" type=\"text\" onlyNumber name=\"a_sig\" formControlName=\"monthlyExpenseRentals\"\r\n                placeholder=\"Rentals\" (input)=\"   calculateTotalMonthlyExpenses(cardFinancialDetailsUpdateForm.value)\"\r\n                (keypress)=\"_keyPress($event)\" />\r\n            </mat-form-field>\r\n          </div>\r\n\r\n          <div class=\"pb-1\" fxLayout=\"row\" fxLayoutGap=\"5%\">\r\n            <mat-form-field fxFlex=\"30%\" appearance=\"outline\" class=\"full-width\">\r\n              <mat-label>Others</mat-label>\r\n              <input matInput maxlength=\"10\" type=\"text\" onlyNumber formControlName=\"monthlyExpenseOthers\"\r\n                (keypress)=\"_keyPress($event)\"\r\n                (input)=\"   calculateTotalMonthlyExpenses(cardFinancialDetailsUpdateForm.value)\" placeholder=\"Others\" />\r\n            </mat-form-field>\r\n\r\n            <mat-form-field fxFlex=\"30%\" appearance=\"outline\" class=\"full-width\">\r\n              <mat-label>Total</mat-label>\r\n              <input matInput maxlength=\"10\" type=\"text\" onlyNumber formControlName=\"monthlyExpenseTotal\"\r\n                name=\"monthlyExpenseTotal\" placeholder=\"Total\" readonly />\r\n            </mat-form-field>\r\n          </div>\r\n        </mat-card-content>\r\n\r\n      </mat-card>\r\n\r\n      <mat-card>\r\n        <mat-card-title class=\"\">\r\n          <div class=\"card-title-text\">\r\n            Annual Liabilities\r\n            <div class=\"ErrMsg\">{{ LiabilitiesErrMsg }}</div>\r\n          </div>\r\n          <mat-divider></mat-divider>\r\n        </mat-card-title>\r\n\r\n        <mat-card-content>\r\n          <div fxLayout=\"row\" fxLayoutGap=\"5%\">\r\n            <mat-form-field fxFlex=\"30%\" appearance=\"outline\" class=\"full-width\">\r\n              <mat-label>Property Loans</mat-label>\r\n              <input matInput maxlength=\"10\" type=\"text\" onlyNumber name=\"propertyLoan\" placeholder=\"Property Loan\"\r\n                formControlName=\"propertyLoan\" (keypress)=\"_keyPress($event)\"\r\n                (input)=\"   calculateTotalLiabilities(cardFinancialDetailsUpdateForm.value)\" />\r\n            </mat-form-field>\r\n\r\n            <mat-form-field fxFlex=\"30%\" appearance=\"outline\" class=\"full-width\">\r\n              <mat-label>Personal Loans</mat-label>\r\n              <input matInput maxlength=\"10\" type=\"text\" onlyNumber name=\"personalLoans\" formControlName=\"personalLoans\"\r\n                placeholder=\"Personal Loans\" (keypress)=\"_keyPress($event)\"\r\n                (input)=\"calculateTotalLiabilities(cardFinancialDetailsUpdateForm.value) \" />\r\n            </mat-form-field>\r\n\r\n            <mat-form-field fxFlex=\"30%\" appearance=\"outline\" class=\"full-width\">\r\n              <mat-label>Overdrafts</mat-label>\r\n              <input matInput maxlength=\"10\" name=\"overdraft\" type=\"text\" onlyNumber formControlName=\"overdraft\"\r\n                placeholder=\"Overdrafts\" (keypress)=\"_keyPress($event)\"\r\n                (input)=\"calculateTotalLiabilities(cardFinancialDetailsUpdateForm.value) \" />\r\n            </mat-form-field>\r\n          </div>\r\n\r\n          <div fxLayout=\"row\" fxLayoutGap=\"5%\">\r\n            <mat-form-field fxFlex=\"30%\" appearance=\"outline\" class=\"full-width\">\r\n              <mat-label>Vehicle Loans</mat-label>\r\n              <input matInput maxlength=\"10\" type=\"text\" onlyNumber formControlName=\"vehicleLoan\" name=\"vehicleLoan\"\r\n                placeholder=\"Vehicle Loans\" (keypress)=\"_keyPress($event)\"\r\n                (input)=\"   calculateTotalLiabilities(     cardFinancialDetailsUpdateForm.value   ) \" />\r\n            </mat-form-field>\r\n\r\n            <mat-form-field fxFlex=\"30%\" appearance=\"outline\" class=\"full-width\">\r\n              <mat-label>Cards Outstanding's</mat-label>\r\n              <input matInput maxlength=\"10\" type=\"text\" onlyNumber name=\"cardOutstandings\"\r\n                formControlName=\"cardOutstandings\" placeholder=\"Cards Outstanding's\" (keypress)=\"_keyPress($event)\"\r\n                (input)=\"   calculateTotalLiabilities(     cardFinancialDetailsUpdateForm.value   ) \" />\r\n            </mat-form-field>\r\n\r\n            <mat-form-field fxFlex=\"30%\" appearance=\"outline\" class=\"full-width\">\r\n              <mat-label>Others</mat-label>\r\n              <input matInput maxlength=\"10\" type=\"text\" onlyNumber name=\"liabilityOthers\"\r\n                formControlName=\"liabilityOthers\" placeholder=\"Others\" (keypress)=\"_keyPress($event)\"\r\n                (input)=\" calculateTotalLiabilities( cardFinancialDetailsUpdateForm.value ) \" />\r\n            </mat-form-field>\r\n          </div>\r\n\r\n          <div class=\"pb-1\">\r\n            <mat-form-field fxFlex=\"30%\" appearance=\"outline\" class=\"full-width\">\r\n              <mat-label>Total</mat-label>\r\n              <input matInput maxlength=\"10\" type=\"text\" onlyNumber name=\"liabilityTotal\" placeholder=\"Total\"\r\n                formControlName=\"liabilityTotal\" readonly />\r\n            </mat-form-field>\r\n          </div>\r\n\r\n        </mat-card-content>\r\n      </mat-card>\r\n      <mat-card>\r\n        <mat-card-title class=\"\">\r\n          <div class=\"card-title-text\">\r\n            Asset\r\n            <div class=\"ErrMsg\">{{ assetErrMsg }}</div>\r\n          </div>\r\n          <mat-divider></mat-divider>\r\n        </mat-card-title>\r\n\r\n        <mat-card-content>\r\n          <div fxLayout=\"row\" fxLayoutGap=\"5%\">\r\n            <mat-form-field fxFlex=\"30%\" appearance=\"outline\" class=\"full-width\">\r\n              <mat-label>Savings Deposits</mat-label>\r\n              <input matInput maxlength=\"10\" type=\"text\" onlyNumber name=\"savingDeposits\" placeholder=\"Saving Deposits\"\r\n                formControlName=\"savingDeposits\" (keypress)=\"_keyPress($event)\"\r\n                (input)=\"calculateTotalAssets(cardFinancialDetailsUpdateForm.value)\" />\r\n            </mat-form-field>\r\n\r\n            <mat-form-field fxFlex=\"30%\" appearance=\"outline\" class=\"full-width\">\r\n              <mat-label>Properties</mat-label>\r\n              <input matInput maxlength=\"10\" type=\"text\" onlyNumber name=\"properties\" formControlName=\"properties\"\r\n                placeholder=\"Properties\" (keypress)=\"_keyPress($event)\"\r\n                (input)=\" calculateTotalAssets(cardFinancialDetailsUpdateForm.value) \" />\r\n            </mat-form-field>\r\n\r\n            <mat-form-field fxFlex=\"30%\" appearance=\"outline\" class=\"full-width\">\r\n              <mat-label>Fixed Deposits</mat-label>\r\n              <input matInput maxlength=\"10\" type=\"text\" onlyNumber name=\"fixedDeposits\" formControlName=\"fixedDeposits\"\r\n                placeholder=\"Fixed Deposits\" (input)=\" calculateTotalAssets(cardFinancialDetailsUpdateForm.value) \"\r\n                (keypress)=\"_keyPress($event)\" />\r\n            </mat-form-field>\r\n          </div>\r\n\r\n\r\n          <div fxLayout=\"row\" fxLayoutGap=\"5%\">\r\n            <mat-form-field fxFlex=\"30%\" appearance=\"outline\" class=\"full-width\">\r\n              <mat-label>Stocks/Funds</mat-label>\r\n              <input matInput maxlength=\"10\" type=\"text\" onlyNumber placeholder=\"Stocks/Funds\" formControlName=\"stocks\"\r\n                (keypress)=\"_keyPress($event)\" (input)=\"calculateTotalAssets(cardFinancialDetailsUpdateForm.value) \" />\r\n            </mat-form-field>\r\n\r\n            <mat-form-field fxFlex=\"30%\" appearance=\"outline\" class=\"full-width\">\r\n              <mat-label>Automobiles</mat-label>\r\n              <input matInput maxlength=\"10\" type=\"text\" onlyNumber name=\"automobiles\" placeholder=\"Automobiles\"\r\n                formControlName=\"automobiles\" (keypress)=\"_keyPress($event)\"\r\n                (input)=\" calculateTotalAssets(cardFinancialDetailsUpdateForm.value) \" />\r\n            </mat-form-field>\r\n\r\n\r\n            <mat-form-field fxFlex=\"30%\" appearance=\"outline\" class=\"full-width\">\r\n              <mat-label>Lands</mat-label>\r\n              <input matInput maxlength=\"10\" type=\"text\" onlyNumber name=\"lands\" placeholder=\"Lands\"\r\n                formControlName=\"lands\" (keypress)=\"_keyPress($event)\"\r\n                (input)=\"calculateTotalAssets(cardFinancialDetailsUpdateForm.value)\" />\r\n            </mat-form-field>\r\n          </div>\r\n\r\n          <div fxLayout=\"row\" fxLayoutGap=\"5%\">\r\n            <mat-form-field fxFlex=\"30%\" appearance=\"outline\" class=\"full-width\">\r\n              <mat-label>Others</mat-label>\r\n              <input matInput maxlength=\"10\" type=\"text\" onlyNumber name=\"assetOthers\" placeholder=\"Others\"\r\n                formControlName=\"assetOthers\" (keypress)=\"_keyPress($event)\"\r\n                (input)=\"calculateTotalAssets(cardFinancialDetailsUpdateForm.value) \" />\r\n            </mat-form-field>\r\n\r\n            <mat-form-field fxFlex=\"30%\" appearance=\"outline\" class=\"full-width\">\r\n              <mat-label>Total</mat-label>\r\n              <input matInput maxlength=\"10\" type=\"text\" onlyNumber name=\"assetTotal\" formControlName=\"assetTotal\"\r\n                placeholder=\"Total\" readonly />\r\n            </mat-form-field>\r\n          </div>\r\n\r\n\r\n        </mat-card-content>\r\n      </mat-card>\r\n\r\n    </form>\r\n  </mat-card>\r\n</mat-dialog-content>\r\n<div fxLayout=\"row\" fxLayoutAlign=\"end\" fxLayoutGap=\"20px\">\r\n  <button mat-raised-button type=\"button\" class=\"editbtn\"\r\n    [disabled]=\"incomeErrMsg || ExpensesErrMsg || LiabilitiesErrMsg || assetErrMsg \" (click)=\"onSubmit()\">Save</button>\r\n  &nbsp;&nbsp;&nbsp;\r\n  <button type=\"button\" class=\"cancelbtn\" (click)=\"close()\">\r\n    Cancel\r\n  </button>\r\n</div>","import { DatePipe } from '@angular/common';\r\nimport { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\n\r\n@Component({\r\n  selector: 'app-update-primary-info',\r\n  templateUrl: './update-primary-info.component.html',\r\n  styleUrls: ['./update-primary-info.component.scss']\r\n})\r\nexport class UpdatePrimaryInfoComponent implements OnInit {\r\n  primaryInfoForm: FormGroup;\r\n  customerId: any\r\n  arrayPrefix: string[];\r\n  arrayGender: string[];\r\n  arrayMaritalStatus: string[];\r\n  arrayCountry: any = [];\r\n  arrayState: any = [];\r\n  nationalityArray: string[];\r\n  arrayResidence: string[];\r\n  prefixFlag: boolean = false;\r\n  maxDate = new Date();\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public primaryInfo,\r\n    private dialogRef: MatDialogRef<UpdatePrimaryInfoComponent>,\r\n    private apiService: ApiService,\r\n    private snack: MatSnackBar,\r\n    private formBuilder: FormBuilder\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    console.log(this.primaryInfo);\r\n    this.customerId = this.primaryInfo.customerId;\r\n    this.getPrefixValue(\"prefix\");\r\n    this.getGenderValue(\"gender\");\r\n    this.getMaritalStatus(\"maritial_Status\");\r\n    this.getCountryName(\"country\");\r\n    this.getNationality(\"nationality\");\r\n    this.getResidenceDetails(\"residence\");  \r\n    if(this.primaryInfo){\r\n      this.buildPrimaryInfoForm(this.primaryInfo)\r\n    }\r\n  }\r\n  buildPrimaryInfoForm(data?) {\r\n    this.primaryInfoForm = this.formBuilder.group({\r\n      customerId: [this.customerId],\r\n      prefix: [data ? data.prefix : '', [Validators.required]],\r\n      firstName: [data ? data.firstName : '', [Validators.required]],\r\n      middleName: [data ? data.middleName : ''],\r\n      lastName: [data ? data.lastName : '', [Validators.required]],\r\n      dateOfBirth: [data ? data.dateOfBirth : '', [Validators.required]],\r\n      maritalStatus: [data ? data.maritalStatus : '', [Validators.required]],\r\n      gender: [data ? data.gender : '', [Validators.required]],\r\n      nationality: [data ? data.nationality : '', [Validators.required]],\r\n      primaryEmailAdress: [data ? data.primaryEmailAdress : '', [Validators.required,Validators.pattern('[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}')]],\r\n      phoneNumber: [data ? data.phoneNumber : '', [Validators.required]]\r\n    })\r\n  }\r\n  getPrefixValue(key: string) {\r\n    this.apiService.getDropDownValues(key).subscribe((data) => {\r\n      this.arrayPrefix = data;\r\n    });\r\n  }\r\n  getGenderValue(key: string) {\r\n    this.apiService.getDropDownValues(key).subscribe((data) => {\r\n      this.arrayGender = data;\r\n    });\r\n  }\r\n  getMaritalStatus(key: string) {\r\n    this.apiService.getDropDownValues(key).subscribe((data) => {\r\n      this.arrayMaritalStatus = data;\r\n    });\r\n  }\r\n  getCountryName(key: string) {\r\n    this.apiService.getAllCountries().subscribe((data: any) => {\r\n      for (let i = 0; i < data.length; i++) {\r\n        if (data[i].authStatus === 'A') {\r\n          this.arrayCountry.push(data[i].countryName);\r\n        }\r\n      }\r\n    });\r\n  }\r\n  getStateName(country) {\r\n    this.apiService.getAllCountries().subscribe((data: any) => {\r\n      for (let i = 0; i < data.length; i++) {\r\n        if (data[i].countryName === country) {\r\n          this.apiService.getStateByCountryId(data[i].id).subscribe((resp: any) => {\r\n            for (let i = 0; i < resp.length; i++) {\r\n              if (resp[i].authStatus === 'A') {\r\n                this.arrayState.push(resp[i].stateName);\r\n              }\r\n            }\r\n          })\r\n          break;\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  getNationality(key: string) {\r\n    this.apiService.getDropDownValues(key).subscribe((datas) => {\r\n      this.nationalityArray = datas;\r\n    });\r\n  }\r\n  getResidenceDetails(key: string) {\r\n    this.apiService.getDropDownValues(key).subscribe((data) => {\r\n      this.arrayResidence = data;\r\n    });\r\n  }\r\n  onChangePrefix(event) {\r\n    if (this.primaryInfoForm.value.gender != '') {\r\n      if ((event.value == \"Mr\" && this.primaryInfoForm.value.gender == \"Male\") || ((event.value == \"Ms\" || event.value == \"Mrs\") && this.primaryInfoForm.value.gender == \"Female\")) {\r\n        this.prefixFlag = false;\r\n      } else {\r\n        this.prefixFlag = true;\r\n        this.snack.open(\"Prefix and Gender does not match!\", \"OK\", {\r\n          duration: 4000,\r\n          verticalPosition: \"top\",\r\n          horizontalPosition: \"right\",\r\n        });\r\n      }\r\n    }\r\n  }\r\n  onChangeGender(event) {\r\n    if ((this.primaryInfoForm.value.prefix == \"Mr\" && event.value == \"Male\") || ((this.primaryInfoForm.value.prefix == \"Ms\" || this.primaryInfoForm.value.prefix == \"Mrs\") && event.value == \"Female\")) {\r\n      this.prefixFlag = false;\r\n    } else {\r\n      this.prefixFlag = true;\r\n      this.snack.open(\"Prefix and Gender does not match!\", \"OK\", {\r\n        duration: 4000,\r\n        verticalPosition: \"top\",\r\n        horizontalPosition: \"right\",\r\n      });\r\n    }\r\n  }\r\n\r\n  letterOnly(event) {\r\n    var charCode = event.keyCode;\r\n    if ((charCode > 64 && charCode < 91) || (charCode > 96 && charCode < 123) || charCode == 8)\r\n      return true;\r\n    else\r\n      return false;\r\n  }\r\n  onSubmit(){\r\n      const dateOfbirth = new DatePipe('en-US').transform(this.primaryInfoForm.value.dateOfBirth, 'yyyy-MMM-dd')\r\n      this.primaryInfoForm.value.dateOfBirth = dateOfbirth;\r\n      this.primaryInfoForm.value.customerSubmit = false;\r\n      this.apiService.insertNewUserOnboarding(this.primaryInfoForm.value).subscribe((resp) => {\r\n        console.log(resp);\r\n        this.dialogRef.close({\r\n          status:'INITIATED',\r\n          resp:this.primaryInfoForm.value\r\n        })\r\n      });\r\n      \r\n    }\r\n  \r\n  close() {\r\n    this.dialogRef.close({\r\n      status: \"UNDER_PROCESS\"\r\n    })\r\n  }\r\n}\r\n","<div fxLayout=\"row\" fxLayoutAlign=\"end\">\r\n    <mat-icon class=\"closeIcon\" (click)=\"close()\">close</mat-icon>\r\n</div>\r\n<h5 mat-dialog-title>Primary Information</h5>\r\n<mat-dialog-content>\r\n    <form [formGroup]=\"primaryInfoForm\">\r\n        <div fxLayout=\"row wrap\" class=\"full-width\">\r\n            <div class=\"full-width\">\r\n                <mat-hint class=\"hintClass\">Prefix*</mat-hint>\r\n                <mat-card style=\"max-width:20% ;\" class=\"inputClass\">\r\n                    <mat-select formControlName=\"prefix\"(selectionChange)=\"onChangePrefix($event)\"\r\n                        required>\r\n                        <mat-option value=\"\">Select</mat-option>\r\n                        <mat-option *ngFor=\"let prefix of arrayPrefix\" [value]=\"prefix\">\r\n                            {{prefix}}\r\n                        </mat-option>\r\n                    </mat-select>\r\n                </mat-card>\r\n                <mat-error class=\"errorClass\" *ngIf=\"primaryInfoForm.get('prefix').touched && !primaryInfoForm.get('prefix').valid\">\r\n                    &nbsp; &nbsp;Please Select the Prefix!\r\n                </mat-error>\r\n            </div>\r\n            <div fxFlex=\"33.33%\" fxFlex.xs=\"100%\" class=\"full-width\">\r\n                <mat-hint class=\"hintClass\">First Name*</mat-hint>\r\n                <mat-card class=\"inputClass\">\r\n                    <input type=\"text\" matInput formControlName=\"firstName\" required (keypress)=\"letterOnly($event)\">\r\n                </mat-card>\r\n                <mat-error class=\"errorClass\"\r\n                    *ngIf=\"primaryInfoForm.get('firstName') && primaryInfoForm.get('firstName').touched && !primaryInfoForm.get('firstName').valid\">\r\n                    &nbsp; &nbsp;Enter the First Name\r\n                </mat-error>\r\n            </div>\r\n            <div fxFlex=\"33.33%\" fxFlex.xs=\"100%\" class=\"full-width\">\r\n                <mat-hint class=\"hintClass\">Middle Name</mat-hint>\r\n                <mat-card class=\"inputClass\">\r\n                    <input type=\"text\" matInput (keypress)=\"letterOnly($event)\" formControlName=\"middleName\">\r\n                </mat-card>\r\n            </div>\r\n            <div fxFlex=\"33.33%\" fxFlex.xs=\"100%\" class=\"full-width\">\r\n                <mat-hint class=\"hintClass\">Last Name</mat-hint>\r\n                <mat-card class=\"inputClass\">\r\n                    <input type=\"text\" matInput (keypress)=\"letterOnly($event)\" formControlName=\"lastName\" required>\r\n                </mat-card>\r\n                <mat-error class=\"errorClass\"\r\n                    *ngIf=\"primaryInfoForm.get('lastName') && primaryInfoForm.get('lastName').touched && !primaryInfoForm.get('lastName').valid\">\r\n                    &nbsp; &nbsp;Enter the Last Name\r\n                </mat-error>\r\n            </div>\r\n            <div fxFlex=\"33.33%\" fxFlex.xs=\"100%\" class=\"full-width\" fxlayoutAlign=\"start start\">\r\n                <mat-hint class=\"hintClass\">Date of Birth*</mat-hint>\r\n                <mat-card class=\"inputClass\">\r\n                    <div fxFlex=\"90%\">\r\n                        <input matInput [matDatepicker]=\"picker\" readonly [max]=\"maxDate\" formControlName=\"dateOfBirth\"\r\n                            class=\"default-background\" required>\r\n                    </div>\r\n                    <div fxFlex=\"10%\">\r\n                        <mat-datepicker-toggle matSuffix [for]=\"picker\" style=\"height: 0px; line-height:0px;\">\r\n                        </mat-datepicker-toggle>\r\n                    </div>\r\n                </mat-card>\r\n                <mat-error class=\"errorClass\"\r\n                    *ngIf=\"primaryInfoForm.get('dateOfBirth') && primaryInfoForm.get('dateOfBirth').touched && !primaryInfoForm.get('dateOfBirth').valid\">\r\n                    &nbsp; &nbsp;Please Select Date Of Birth\r\n                </mat-error>\r\n                <mat-datepicker #picker></mat-datepicker>\r\n            </div>\r\n            <div fxFlex=\"33.33%\" fxFlex.xs=\"100%\" class=\"full-width\">\r\n                <mat-hint class=\"hintClass\">Marital Status*</mat-hint>\r\n                <mat-card class=\"inputClass\">\r\n                    <mat-select formControlName=\"maritalStatus\" required>\r\n                        <mat-option value=\"\">Select</mat-option>\r\n                        <mat-option *ngFor=\"let status of arrayMaritalStatus\" [value]=\"status\">\r\n                            {{status}}\r\n                        </mat-option>\r\n                    </mat-select>\r\n                </mat-card>\r\n                <mat-error class=\"errorClass\"\r\n                    *ngIf=\"primaryInfoForm.get('maritalStatus') && primaryInfoForm.get('maritalStatus').touched && !primaryInfoForm.get('maritalStatus').valid\">\r\n                    &nbsp; &nbsp;Select Marital Status\r\n                </mat-error>\r\n            </div>\r\n            <div fxFlex=\"33.33%\" fxFlex.xs=\"100%\" class=\"full-width\">\r\n                <mat-hint class=\"hintClass\">Gender*</mat-hint>\r\n                <mat-card class=\"inputClass\">\r\n                    <mat-select formControlName=\"gender\" required (selectionChange)=\"onChangeGender($event)\">\r\n                        <mat-option value=\"\">Select</mat-option>\r\n                        <mat-option *ngFor=\"let gender of arrayGender\" [value]=\"gender\">\r\n                            {{gender}}\r\n                        </mat-option>\r\n                    </mat-select>\r\n                </mat-card>\r\n                <mat-error class=\"errorClass\"\r\n                    *ngIf=\"primaryInfoForm.get('gender') && primaryInfoForm.get('gender').touched && !primaryInfoForm.get('gender').valid\">\r\n                    &nbsp; &nbsp; Select Gender\r\n                </mat-error>\r\n                <mat-error class=\"errorClass\" *ngIf=\"prefixFlag\">\r\n                    &nbsp; Prefix and Gender does not match!\r\n                </mat-error>\r\n            </div>\r\n            <div fxFlex=\"33.33%\" fxFlex.xs=\"100%\" class=\"full-width\">\r\n                <mat-hint class=\"hintClass\">Nationality*</mat-hint>\r\n                <mat-card class=\"inputClass\">\r\n                    <mat-select formControlName=\"nationality\" required>\r\n                        <mat-option value=\"\">Select</mat-option>\r\n                        <mat-option *ngFor=\"let country of nationalityArray\" [value]=\"country\">\r\n                            {{country}}\r\n                        </mat-option>\r\n                    </mat-select>\r\n                </mat-card>\r\n                <mat-error class=\"errorClass\"\r\n                    *ngIf=\"primaryInfoForm.get('nationality') && primaryInfoForm.get('nationality').touched && !primaryInfoForm.get('nationality').valid\">\r\n                    &nbsp;&nbsp; Select Nationality\r\n                </mat-error>\r\n            </div>\r\n            <div fxFlex=\"33.33%\" fxFlex.xs=\"100%\" class=\"full-width\">\r\n                <mat-hint class=\"hintClass\">Primary Email*</mat-hint>\r\n                <mat-card class=\"inputClass\">\r\n                    <input fxFlex=\"90%\" type=\"email\"\r\n                        matInput formControlName=\"primaryEmailAdress\" required\r\n                        >\r\n                    <mat-hint fxFlex=\"10%\" class=\"verification\" (click)=\"getOtp(primaryInfoForm.value)\"\r\n                        *ngIf=\"primaryInfoForm.get('primaryEmailAdress').valid\">{{emailVerify}}</mat-hint>\r\n                </mat-card>\r\n                <mat-error class=\"errorClass\"\r\n                    *ngIf=\"primaryInfoForm.get('primaryEmailAdress') && primaryInfoForm.get('primaryEmailAdress').touched && !primaryInfoForm.get('primaryEmailAdress').valid\">\r\n                    &nbsp; &nbsp; Enter the Primary Email\r\n                </mat-error>\r\n                <mat-error class=\"errorClass\" *ngIf=\"primaryInfoForm.get('primaryEmailAdress').hasError('pattern')\">\r\n                    Please Enter valid email address!\r\n                </mat-error>\r\n            </div>\r\n            <div fxFlex=\"33.33%\" fxFlex.xs=\"100%\" class=\"full-width\">\r\n                <mat-hint class=\"hintClass\">Mobile Number*</mat-hint>\r\n                <mat-card class=\"inputClass\">\r\n                    <input fxFlex=\"90%\" type=\"text\" onlyNumber maxlength=\"10\" minlength=\"10\" matInput\r\n                        formControlName=\"phoneNumber\" required maxlength=\"10\">\r\n                    <mat-hint fxFlex=\"10%\" class=\"verification\" (click)=\"getOtpMobile(primaryInfoForm.value)\"\r\n                        *ngIf=\"primaryInfoForm.get('phoneNumber').valid\">{{verify}}</mat-hint>\r\n                </mat-card>\r\n                <mat-error class=\"errorClass\"\r\n                    *ngIf=\"primaryInfoForm.get('phoneNumber').touched && !primaryInfoForm.get('phoneNumber').valid && !primaryInfoForm.get('phoneNumber').hasError('minlength') \">\r\n                    &nbsp; &nbsp; Enter the Mobile Number(maximum 10\r\n                    digits)\r\n                </mat-error>\r\n                <mat-error class=\"errorClass\"\r\n                    *ngIf=\"primaryInfoForm.get('phoneNumber').hasError('required') && primaryInfoForm.get('phoneNumber').touched\">\r\n                    Please Enter Mobile Number\r\n                </mat-error>\r\n                <mat-error class=\"errorClass\" *ngIf=\"primaryInfoForm.get('phoneNumber').hasError('pattern')\">\r\n                    Mobile number must be 10 digits.\r\n                </mat-error>\r\n                <mat-error class=\"errorClass\" *ngIf=\"primaryInfoForm.get('phoneNumber').value == '0000000000'\">\r\n                    &nbsp; &nbsp; Please Enter Correct Mobile Number\r\n                </mat-error>\r\n            </div>\r\n        </div>\r\n    </form>\r\n</mat-dialog-content>\r\n<div fxLayout=\"row\" fxLayoutAlign=\"end\" fxLayoutGap=\"20px\">\r\n    <button type=\"button\" class=\"editbtn\" mat-raised-button [disabled]=\"primaryInfoForm.invalid\"\r\n      (click)=\"onSubmit()\">Save</button>\r\n    &nbsp;&nbsp;&nbsp;\r\n    <button type=\"button\" class=\"cancelbtn\" (click)=\"close()\">\r\n      Cancel\r\n    </button>\r\n  </div>","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\n\r\n@Component({\r\n  selector: 'app-card-charge-details-update',\r\n  templateUrl: './card-charge-details-update.component.html',\r\n  styleUrls: ['./card-charge-details-update.component.scss']\r\n})\r\nexport class CardChargeDetailsUpdateComponent implements OnInit {\r\ncardChargeUpdateForm:FormGroup;\r\n  currencySymbol: string;\r\n  accountType: String = \"Card Origin\";\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public data,\r\n    private formBuilder: FormBuilder,\r\n    private apiService: ApiService,\r\n    public dialogRef: MatDialogRef<CardChargeDetailsUpdateComponent>,\r\n    public snack: MatSnackBar,\r\n    private api: ApiService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.data.currencytype=localStorage.getItem('Currency Type');\r\n    if(this.data.currencytype===\"INR\"){\r\n      this.currencySymbol=\"₹\"\r\n    }else if(this.data.currencytype===\"USD\"){\r\n      this.currencySymbol=\"$\"\r\n    }else if(this.data.currencytype===\"CNY\"){\r\n      this.currencySymbol=\"¥\"\r\n    }else if(this.data.currencytype===\"GBP\"){\r\n      this.currencySymbol=\"£\"\r\n    }else if(this.data.currencytype===\"ZAR\"){\r\n      this.currencySymbol=\"R\"\r\n    }\r\n\r\n    this.cardChargeUpdateForm = this.formBuilder.group({\r\n      chargeInfo: new FormArray([]),\r\n    });\r\n    if(this.data.chargeInfo){\r\n      this.onChangeInterest(this.data.chargeInfo.length)\r\nthis.in.patchValue([...this.data.chargeInfo])\r\n    }\r\n    else{\r\n    this.apiService.getFlexcubeDetails(\"chargeDetails\", this.accountType).subscribe((response) => {\r\n        this.onChangeInterest(response.length);\r\n        this.in.patchValue([{...response[0], amount: history.state.amount ? history.state.amount : ''}]);\r\n      });\r\n    }    \r\n  }\r\n\r\n  onChangeInterest(e) {\r\n    const numberOfItems = e || 0;\r\n    if (this.in.length < numberOfItems) {\r\n      for (let i = this.in.length; i < numberOfItems; i++) {\r\n        this.in.push(\r\n          this.formBuilder.group({\r\n            intrestType: [\"\"],\r\n            amount: [\"\",Validators.required],\r\n            waiver: [false],\r\n            cardId: [this.data.cardId],\r\n            chargeDetailsId: [\"\"],\r\n          })\r\n        );\r\n      }\r\n    } else {\r\n      for (let i = this.in.length; i >= numberOfItems; i--) {\r\n        this.in.removeAt(i);\r\n      }\r\n    }\r\n  }\r\n\r\n  get f() {\r\n    return this.cardChargeUpdateForm.controls;\r\n  }\r\n  get in() {\r\n    return this.f.chargeInfo as FormArray;\r\n  }\r\n  onKeyPress(event: any) {\r\n    const number = /[0-9\\+\\-\\ ]/;\r\n    let inputCharacter = String.fromCharCode(event.charCode);\r\n    if (event.keyCode != 8 && !number.test(inputCharacter)) {\r\n      event.preventDefault();\r\n      console.log(\"event:\", event)\r\n    }\r\n  }\r\n  checkbox(event) {\r\n    console.log(event.checked);\r\n  }\r\n\r\n  onSubmit(form){\r\n      console.log(\"form\", form);\r\n      this.api.cardChargeDetailsSave(form).subscribe(\r\n        (resp) => {\r\n          this.snack.open(\"Charge Details Updated!\", \"OK\", {\r\n            duration: 4000,\r\n            verticalPosition: \"top\",\r\n            horizontalPosition: \"right\",\r\n          });\r\n          console.log(\"backend response from intrest saving\", resp);\r\n          let statusModel = {\r\n            cardId: this.data.cardId,\r\n            status: \"BACKLOG\"\r\n          };\r\n          this.apiService.updateCardStatus(statusModel).subscribe(data => {\r\n            this.dialogRef.close({\r\n              status: data.status\r\n             });\r\n          });\r\n        },\r\n        (err) => {\r\n          this.snack.open(\r\n            \"Not able to connect to server!\",\r\n            \"INTERNAL SERVER ERROR\",\r\n            {\r\n              duration: 4000,\r\n              verticalPosition: \"top\",\r\n              horizontalPosition: \"right\",\r\n            }\r\n          );\r\n        }\r\n      );\r\n    }\r\n  \r\n  close(){\r\n    this.dialogRef.close({\r\n      status:\"ONGOING\"\r\n    })\r\n  }\r\n}\r\n","<div fxLayout=\"row\" fxLayoutAlign=\"end\" class=\"contain\">\r\n    <mat-icon class=\"closeIcon\" (click)=\"close()\">close</mat-icon>\r\n</div>\r\n\r\n<h1 mat-dialog-title>Charge Details</h1>\r\n\r\n<mat-dialog-content>\r\n    <mat-card>\r\n        <form [formGroup]=\"cardChargeUpdateForm\">\r\n            <table class=\"cart-table default-bg mat-elevation-z0\">\r\n                <thead class=\"tr\">\r\n                  <tr class=\"theadClass\">\r\n                    <th>Interest Type</th>\r\n                    <th>Amount</th>\r\n                    <th>waiever</th>\r\n                  </tr>\r\n                </thead>\r\n\r\n                <tbody>\r\n                  <tr *ngFor=\"let chargeInfo of in.controls; let i = index\" class=\"tableRow\">\r\n                    <ng-container [formGroup]=\"chargeInfo\">\r\n                      <td>\r\n                        <mat-form-field >\r\n                          <input class=\"input\" matInput formControlName=\"intrestType\" name=\"account_branch\"readonly />\r\n                        </mat-form-field>\r\n                      </td>\r\n                      <td>\r\n                        <mat-form-field >\r\n                          <!-- <span matPrefix>{{currencySymbol}} &nbsp;</span> -->\r\n                          <input class=\"input\" maxlength=\"10\"formControlName=\"amount\" (keypress)=\"onKeyPress($event)\" oninput=\"this.value = !!this.value && Math.abs(this.value) >= 0 ? Math.abs(this.value) : null\" matInput formControlName=\"amount\" name=\"account_branch\" />\r\n                        </mat-form-field>\r\n                      </td>\r\n                      <td>\r\n                        <div class=\"waiver-pos\">\r\n                          <mat-checkbox formControlName=\"waiver\" (change)='checkbox($event)' color=\"primary\"></mat-checkbox>\r\n                        </div>\r\n                      </td>\r\n                    </ng-container>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n        </form>\r\n    </mat-card>\r\n</mat-dialog-content>\r\n<div fxLayout=\"row\" fxLayoutAlign=\"end\" fxLayoutGap=\"20px\">\r\n  <button type=\"button\" class=\"editbtn\" \r\n  [disabled]=\"cardChargeUpdateForm.invalid\"\r\n        (click)=\"onSubmit(cardChargeUpdateForm.value)\">Save</button> \r\n                &nbsp;&nbsp;&nbsp;\r\n                <button type=\"button\" class=\"cancelbtn\" (click)=\"close()\">\r\n                     Cancel\r\n                </button>\r\n</div>\r\n\r\n    \r\n<!--   \r\n    <div fxFlex=\"100\" class=\"mt-16\">\r\n      <a mat-button rounded color=\"primary\" (click)=\"goBack()\">Back</a>\r\n      <span fxFlex></span>\r\n      <button mat-raised-button color=\"primary\" type=\"button\" [disabled]=\"cardChargeUpdateForm.invalid\"\r\n        (click)=\"onSubmit(cardChargeUpdateForm.value)\">Next</button>\r\n    </div> -->\r\n  \r\n ","import { ChangeDetectorRef, Component, Inject, OnInit } from '@angular/core';\r\nimport { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\n\r\n@Component({\r\n  selector: 'app-update-contact-info',\r\n  templateUrl: './update-contact-info.component.html',\r\n  styleUrls: ['./update-contact-info.component.scss']\r\n})\r\nexport class UpdateContactInfoComponent implements OnInit {\r\n  contactInfoUpdateForm: FormGroup;\r\n  customerId: any;\r\n  userAddress_array = new FormArray([]);\r\n  arrayCity: string[] = [];\r\n  arrayState: any[] = [];\r\n  entityName: string;\r\n  arrayCityPerm: string[] = [];\r\n  arrayStatePerm: any[] = [];\r\n  arrayCountryPerm: any[] = [];\r\n  arrayCountry: any[] = [];\r\n  zipCodeIndex: any;\r\n  isAllSameDigitVal: boolean;\r\n  arrayResidence: string[];\r\n  constructor(\r\n    private dialogRef: MatDialogRef<UpdateContactInfoComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public contactInfo,\r\n    private formBuilder: FormBuilder,\r\n    private ls: LocalStoreService,\r\n    private apiService: ApiService,\r\n    private snack: MatSnackBar,\r\n    private cdr: ChangeDetectorRef\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    console.log(this.contactInfo);\r\n    this.customerId = this.ls.getItem('customerId')\r\n    this.getResidenceDetails(\"residence\")\r\n    this.getCountryName(\"country\");\r\n    if (this.contactInfo) {\r\n      this.buildContactInfoForm()\r\n      this.userAddress_array = this.contactInfoUpdateForm.get('userAddress_array') as FormArray;\r\n      for (let i = 0; i < this.contactInfo.length; i++) {\r\n        this.getStateName(this.contactInfo[i].country, this.contactInfo[i].addressType)\r\n        this.getCityName(this.contactInfo[i].state, this.contactInfo[i].addressType)\r\n        this.userAddress_array.push(this.createUserAddress(this.contactInfo[i]))\r\n      }\r\n    }\r\n    else {\r\n      this.buildContactInfoForm()\r\n      this.userAddress_array.push(this.createUserAddress())\r\n    }\r\n\r\n  }\r\n  buildContactInfoForm() {\r\n    this.contactInfoUpdateForm = this.formBuilder.group({\r\n      userAddress_array: this.formBuilder.array([])\r\n    });\r\n  }\r\n  createUserAddress(item?): FormGroup {\r\n    return this.formBuilder.group({\r\n      addressType: [\"Communication\", [Validators.required]],\r\n      address1: [item ? item.address1 : [''], [Validators.pattern(\".*[a-zA-Z].*\")]],\r\n      address2: [item ? item.address2 : [''], [Validators.pattern(\".*[a-zA-Z].*\")]],\r\n      city: item ? item.city : [''],\r\n      state: item ? item.state : [''],\r\n      zipCode: item ? item.zipCode : [''],\r\n      country: item ? item.country : [''],\r\n      residenceType: item ? item.residenceType : ['']\r\n    })\r\n  }\r\n  getResidenceDetails(key: string) {\r\n    this.apiService.getDropDownValues(key).subscribe((data) => {\r\n      this.arrayResidence = data;\r\n    });\r\n  }\r\n  getCountryName(key: string) {\r\n    this.apiService.getAllCountries().subscribe((data: any) => {\r\n      for (let i = 0; i < data.length; i++) {\r\n        if (data[i].authStatus === 'A') {\r\n          this.arrayCountry.push(data[i].countryName);\r\n          this.arrayCountryPerm.push(data[i].countryName);\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  getStateName(country: string, addressType) {\r\n    this.apiService.getAllCountries().subscribe((data: any) => {\r\n      for (let i = 0; i < data.length; i++) {\r\n        if (data[i].countryName == country) {\r\n          this.apiService.getStateByCountryId(data[i].id).subscribe((resp: any) => {\r\n            if (addressType === 'Communication') {\r\n              this.arrayState = resp;\r\n            } else if (addressType === 'Permanent') {\r\n              this.arrayStatePerm = resp;\r\n            }\r\n          })\r\n          break;\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  getCityName(state: any, addressType) {\r\n    this.entityName = \"city\";\r\n    console.log(state)\r\n    this.apiService.getDropDownForStateCity(this.entityName, state).subscribe((data) => {\r\n      if (addressType === 'Communication') {\r\n        this.arrayCity = data;\r\n        console.log(\"-->\", this.arrayCity)\r\n      } else if (addressType === 'Permanent') {\r\n        this.arrayCityPerm = data;\r\n      }\r\n\r\n    });\r\n  }\r\n  onSubmit() {\r\n    var obj: any = {}\r\n    obj.customerId = this.customerId;\r\n    obj.userAddress = this.userAddress_array.value;\r\n    if (obj.userAddress && obj.userAddress.length == 2) {\r\n      obj.userAddress[1].addressType = 'Permanent';\r\n    }\r\n    this.apiService.insertNewUserOnboarding(obj).subscribe((result) => {\r\n      this.dialogRef.close({\r\n        status: 'INITIATED',\r\n        resp: obj.userAddress\r\n      })\r\n    }, err => {\r\n      this.snack.open(\"Server Error!\", \"OK\", {\r\n        duration: 4000,\r\n        verticalPosition: \"top\",\r\n        horizontalPosition: \"right\",\r\n      });\r\n    });\r\n  }\r\n  isAllSameDigit(event, zipIndex) {\r\n    console.log('zipIndex :: ', zipIndex);\r\n    this.zipCodeIndex = zipIndex;\r\n    this.cdr.detectChanges();\r\n    let count = 0, number = event.target.value;\r\n    if (number != '') {\r\n      for (var i = 0; i < number.length; i++) {\r\n        if (0 == number[i]) {\r\n          count++;\r\n        }\r\n      }\r\n      console.log('number :: ', number);\r\n      console.log('isAllSameDigitVal :: ', count, number.length)\r\n      if (count == number.length) {\r\n        console.log('if loop')\r\n        this.isAllSameDigitVal = true;\r\n      }\r\n      else {\r\n        this.isAllSameDigitVal = false;\r\n      }\r\n    } else {\r\n      this.isAllSameDigitVal = false;\r\n    }\r\n  }\r\n\r\n  close() {\r\n    this.dialogRef.close({\r\n      status: 'UNDER_PROCESS'\r\n    })\r\n  }\r\n}\r\n","<div fxLayout=\"row\" fxLayoutAlign=\"end\">\r\n    <mat-icon class=\"closeIcon\" (click)=\"close()\">close</mat-icon>\r\n</div>\r\n<h1>Contact Information</h1>\r\n<mat-dialog-content>\r\n    <form [formGroup]=\"contactInfoUpdateForm\">\r\n        <div formArrayName=\"userAddress_array\" fxLayout=\"row wrap\" class=\"full-width\">\r\n            <div *ngFor=\"let userAddress of contactInfoUpdateForm.get('userAddress_array')['controls']; let i = index\">\r\n                <div [formGroupName]=\"i\" fxLayout=\"row wrap\" class=\"full-width\">\r\n                    <h2 style=\"font-size: 18px;\" *ngIf=\"i == 0\">Comminucation Address</h2>\r\n                    <h2 *ngIf=\"i > 0\">Permanent Address</h2>\r\n                    <div fxLayout=\"row wrap\" class=\"full-width\">\r\n                        <div fxFlex=\"33.33%\" fxFlex.xs=\"100%\" class=\"full-width\">\r\n                            <mat-hint class=\"hintClass\">Address Line 1 *</mat-hint>\r\n                            <mat-card class=\"inputCard\">\r\n                                <textarea matInput name=\"address1\" formControlName=\"address1\" maxlength=\"255\"\r\n                                    required></textarea>\r\n\r\n                            </mat-card>\r\n                            <mat-error style=\"color: errorColor;\"\r\n                                *ngIf=\"(userAddress.controls.address1 && userAddress.controls.address1.touched && !userAddress.controls.address1.valid) || (userAddress.controls.address1.touched && userAddress.controls.address1.hasError('pattern'))\">\r\n                                &nbsp;&nbsp;&nbsp; Enter Valid Address\r\n                            </mat-error>\r\n                        </div>\r\n                        <div fxFlex=\"33.33%\" fxFlex.xs=\"100%\" class=\"full-width\">\r\n                            <mat-hint class=\"hintClass\">Address Line 2 *</mat-hint>\r\n                            <mat-card class=\"inputCard\">\r\n                                <textarea matInput name=\"address2\" formControlName=\"address2\" maxlength=\"255\"\r\n                                    required></textarea>\r\n                            </mat-card>\r\n                            <mat-error style=\"color: errorColor;\"\r\n                                *ngIf=\"(userAddress.controls.address2 && userAddress.controls.address2.touched && !userAddress.controls.address2.valid) || (userAddress.controls.address2.touched && userAddress.controls.address2.hasError('pattern'))\">\r\n                                &nbsp;&nbsp;&nbsp; Enter Valid Address\r\n                            </mat-error>\r\n                        </div>\r\n                        <div fxFlex=\"33.33%\" fxFlex.xs=\"100%\" class=\"full-width\">\r\n                            <mat-hint class=\"hintClass\">Residence Type *</mat-hint>\r\n                            <mat-card class=\"inputCard\">\r\n                                <mat-select name=\"residenceType\" formControlName=\"residenceType\" required>\r\n                                    <mat-option value=\"\">\r\n                                        Select</mat-option>\r\n                                    <mat-option *ngFor=\"let residence of arrayResidence\" [value]=\"residence\">\r\n                                        {{residence}}\r\n                                    </mat-option>\r\n                                </mat-select>\r\n                            </mat-card>\r\n                            <mat-error style=\"color: errorColor\"\r\n                                *ngIf=\"userAddress.controls.residenceType && userAddress.controls.residenceType.touched && !userAddress.controls.residenceType.valid\">\r\n                                &nbsp;&nbsp;&nbsp; Select\r\n                                Residence Type\r\n                            </mat-error>\r\n                        </div>\r\n                        <div fxFlex=\"33.33%\" fxFlex.xs=\"100%\" class=\"full-width\">\r\n                            <mat-hint class=\"hintClass\">Country *</mat-hint>\r\n                            <mat-card class=\"inputCard\">\r\n                                <mat-select name=\"country\" formControlName=\"country\" #country required\r\n                                    (selectionChange)=\"getStateName($event.value,'Communication')\"\r\n                                    (selectionChange)=\"getCityName($event.value)\">\r\n                                    <mat-option value=\"\">\r\n                                        Select</mat-option>\r\n                                    <mat-option *ngFor=\"let countryName of arrayCountry\" [value]=\"countryName\">\r\n                                        {{countryName}}\r\n                                    </mat-option>\r\n                                </mat-select>\r\n                            </mat-card>\r\n                            <mat-error style=\"color: errorColor; \"\r\n                                *ngIf=\"userAddress.controls.country && userAddress.controls.country.touched && !userAddress.controls.country.valid\">\r\n                                &nbsp;&nbsp;&nbsp; Select\r\n                                Country\r\n                            </mat-error>\r\n                        </div>\r\n                        <div fxFlex=\"33.33%\" fxFlex.xs=\"100%\" class=\"full-width\">\r\n                            <mat-hint class=\"hintClass\">State*</mat-hint>\r\n                            <mat-card class=\"inputCard\">\r\n                                <mat-select class=\"full-width default-background\" name=\"state\" required\r\n                                    formControlName=\"state\" #state\r\n                                    (selectionChange)=\"getCityName($event.value,'Communication')\">\r\n                                    <mat-option value=\"\">Select\r\n                                    </mat-option>\r\n                                    <mat-option *ngFor=\"let state of arrayState\" [value]=\"state.stateName\">\r\n                                        {{state.stateName}}\r\n                                    </mat-option>\r\n                                </mat-select>\r\n                            </mat-card>\r\n                            <mat-error style=\"color: errorColor;\"\r\n                                *ngIf=\"userAddress.controls.state && userAddress.controls.state.touched && !userAddress.controls.state.valid\">\r\n                                &nbsp;&nbsp;&nbsp; Please\r\n                                Select State\r\n                            </mat-error>\r\n                        </div>\r\n                        <div fxFlex=\"33.33%\" fxFlex.xs=\"100%\" class=\"full-width\">\r\n                            <mat-hint class=\"hintClass\">City*</mat-hint>\r\n                            <mat-card class=\"inputCard\">\r\n                                <mat-select class=\"full-width default-background\" name=\"city\" required\r\n                                    formControlName=\"city\" #city>\r\n                                    <mat-option value=\"\">Select\r\n                                    </mat-option>\r\n                                    <mat-option *ngFor=\"let Cityname of arrayCity\" [value]=\"Cityname\">\r\n                                        {{Cityname}}\r\n                                    </mat-option>\r\n                                </mat-select>\r\n                            </mat-card>\r\n                            <mat-error style=\"color: errorColor;\"\r\n                                *ngIf=\"userAddress.controls.city && userAddress.controls.city.touched && !userAddress.controls.city.valid\">\r\n                                &nbsp;&nbsp;&nbsp; Please\r\n                                Select City\r\n                            </mat-error>\r\n                        </div>\r\n                        <div fxFlex=\"33.33%\" fxFlex.xs=\"100%\" class=\"full-width\">\r\n                            <mat-hint class=\"hintClass\">Zip Code*</mat-hint>\r\n                            <mat-card class=\"inputCard\">\r\n                                <input class=\"full-width default-background\" type=\"text\" matInput name=\"zipCode\"\r\n                                    onlyNumber required minlength=\"5\" maxlength=\"10\" formControlName=\"zipCode\" #zipCode\r\n                                    (keyup)=\"isAllSameDigit($event,i)\">\r\n                            </mat-card>\r\n                            <mat-error style=\"color: errorColor; \"\r\n                                *ngIf=\"userAddress.controls.zipCode && userAddress.controls.zipCode.touched && !userAddress.controls.zipCode.valid\">\r\n                                &nbsp;&nbsp;&nbsp;Please enter\r\n                                valid Zip Code!(5-10 digits)\r\n                            </mat-error>\r\n                            <h5 *ngIf=\"isAllSameDigitVal && i==zipCodeIndex\" style=\"color: #E74C3C;\">\r\n                                &nbsp;&nbsp;&nbsp;Please enter\r\n                                valid Zip Code!</h5>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </form>\r\n</mat-dialog-content>\r\n<div fxLayout=\"row\" fxLayoutAlign=\"end center\" fxLayoutGap=\"25px\">\r\n    <button type=\"button\" class=\"editbtn\" mat-raised-button [disabled]=\"contactInfoUpdateForm.invalid\"\r\n        (click)=\"onSubmit()\">Save</button>\r\n    &nbsp;&nbsp;&nbsp;\r\n    <button type=\"button\" class=\"cancelbtn\" (click)=\"close()\">\r\n        Cancel\r\n    </button>\r\n</div>","<!-- <div *ngIf=\"updateLoanDetails\"> -->\r\n  <div >\r\n<mat-dialog-content>\r\n  <div fxLayout=\"row\" class=\"contain\">\r\n    <mat-icon style=\"padding-left: 100%;\"class=\"backIcon\" (click)=\"goToClose()\">close</mat-icon>\r\n</div>\r\n  <h1>Loan Account Details</h1>\r\n  <form class=\"mt-32\" [formGroup]=\"loanUpdateForm\">\r\n    <div fxLayout=\"row wrap\" fxLayout.lt-sm=\"column\" *ngIf=\"data.editType === 'loanAccount_array'\">\r\n      <div fxFlex=\"33.33\" class=\"pr-16\">\r\n        <mat-label>loan Amount </mat-label>\r\n        <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n          <input matInput name=\"loanAmount\" formControlName=\"loanAmount\"  \r\n           (keypress)=_keyPress($event) />\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <div fxFlex=\"33.33\" class=\"pr-16\">\r\n        <mat-label>Business Product Name </mat-label>\r\n        <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n          <mat-select name=\"account_branch\" formControlName=\"businessProductName\" (selectionChange)=\"getAccountType($event.value)\">\r\n            <mat-option *ngFor=\"let businessProductName of arrayAccountBranch\" [value]=\"businessProductName\"> \r\n             {{businessProductName}} \r\n            </mat-option> \r\n         </mat-select>\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <div fxFlex=\"33.33\" class=\"pr-16\">\r\n        <mat-label>Account Branch</mat-label>\r\n        <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n          <mat-select name=\"mod\" formControlName=\"accountBranch\" (selectionChange)=\"onChangeBranch($event)\">\r\n            <mat-option  *ngFor=\"let array of screenArray\"\r\n            [value]=\"array.branchName\">{{array.branchName}}</mat-option>    \r\n          </mat-select>\r\n        </mat-form-field>\r\n      </div>\r\n    </div>\r\n\r\n    <div fxLayout=\"row wrap\">\r\n      <div fxFlex=\"33.33\" class=\"pr-16\">\r\n        <mat-label>Estimated Cost</mat-label>\r\n        <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n          <input matInput name=\"estimatedCost\" formControlName=\"estimatedCost\" \r\n          (keypress)=_keyPress($event)\r\n          />\r\n        </mat-form-field>\r\n      </div>\r\n      <div fxFlex=\"33.33\" class=\"pr-16\">\r\n        <mat-label>Customer Contribution</mat-label>\r\n        <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n          <input matInput name=\"customerContribution\" formControlName=\"customerContribution\" \r\n          (keypress)=_keyPress($event) />\r\n        </mat-form-field>\r\n      </div>\r\n      <div fxFlex=\"33.33\" class=\"pr-16\">\r\n        <mat-label>Account Type</mat-label>\r\n        <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n          <input matInput name=\"accountType\"  class=\"alignment\"\r\n          formControlName=\"accountType\"  [readonly]=\"true\"/>\r\n        </mat-form-field>\r\n      </div>\r\n    </div>\r\n    <div fxLayout=\"row wrap\">\r\n      <!-- <div fxFlex=\"33.33\" class=\"pr-16\">\r\n        <mat-label>Loan Tenure</mat-label>\r\n        <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n          <input matInput name=\"amt\" formControlName=\"loanTenure\" \r\n          />\r\n        </mat-form-field>\r\n      </div> -->\r\n      <div fxFlex=\"33.33\" class=\"pr-16\">\r\n        <mat-label>Loan Tenure</mat-label>\r\n        <div class=\"pb-1\">\r\n          \r\n        \r\n            <!-- <div fxLayout=\"row\" fxLayoutGap=\"5px\" fxLayoutAlign=\"space-between center\" > -->\r\n              <div fxLayout=\"row\" fxLayoutGap=\"5px\" fxLayoutAlign=\"space-between center\" >\r\n              <div >\r\n                <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                  <mat-select name=\"year\" placeholder=\"Year\" formControlName=\"year\"  >\r\n                  <mat-option *ngFor=\"let year of years\" [value]=\"year\">{{ year }}</mat-option> \r\n                  </mat-select>\r\n               </mat-form-field> \r\n              </div>\r\n\r\n              <div>\r\n                <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                  <mat-select name=\"month\" placeholder=\"Month\" formControlName=\"month\" >\r\n                  <mat-option *ngFor=\"let month of months\" [value]=\"month\">{{ month }}</mat-option> \r\n                   </mat-select>\r\n                </mat-form-field>\r\n              </div>\r\n\r\n              <div>\r\n                <mat-form-field class=\"full-width\"  appearance=\"fill\">\r\n                  <mat-select name=\"day\"  placeholder=\"Day\" formControlName=\"day\"  >\r\n                  <mat-option *ngFor=\"let day of days\" [value]=\"day\">{{ day }}</mat-option> \r\n                </mat-select>\r\n              </mat-form-field>\r\n              </div>  \r\n            </div>\r\n           \r\n        </div>\r\n      </div>\r\n      <div fxFlex=\"33.33\" class=\"pr-16\">\r\n\r\n      </div>\r\n      <div fxFlex=\"33.33\" class=\"pr-16\">\r\n        <mat-label>Application Date</mat-label>\r\n        <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n          <input matInput [matDatepicker]=\"appDatepicker\"   name=\"date\"  formControlName=\"applicationDate\" placeholder=\"DD/MM/YYYY\">\r\n          <mat-datepicker-toggle matSuffix [for]=\"appDatepicker\" ></mat-datepicker-toggle>\r\n          <mat-datepicker #appDatepicker ></mat-datepicker>\r\n        </mat-form-field>\r\n      </div>\r\n      </div>\r\n      <div fxLayout=\"row wrap\">\r\n      <div fxFlex=\"33.33\" class=\"pr-16\">\r\n        <mat-label>Purpose of Loan</mat-label>\r\n        <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n          <input matInput name=\"purposeOfLoan\"  class=\"alignment\"\r\n          formControlName=\"purposeOfLoan\" />\r\n        </mat-form-field>\r\n      </div>\r\n    </div>\r\n  </form>\r\n</mat-dialog-content>\r\n<mat-dialog-actions align=\"end\">\r\n  <button mat-button (click)=\"submitForm1()\">\r\n    Update\r\n  </button>\r\n  <button mat-button (click)=\"close()\">Close</button>\r\n</mat-dialog-actions>\r\n</div>\r\n\r\n","import { Component, OnInit,Inject, ChangeDetectorRef } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport * as moment from 'moment';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { AppLoaderService } from \"app/shared/services/app-loader/app-loader.service\";\r\nimport { TasksummaryService } from '../../tasksummary.service';\r\nimport { ChangeDetectionStrategy } from '@angular/compiler/src/compiler_facade_interface';\r\n\r\n\r\n@Component({\r\n  selector: 'app-loan-account-details-update',\r\n  templateUrl: './loan-account-details-update.component.html',\r\n  styleUrls: ['./loan-account-details-update.component.scss']\r\n})\r\nexport class LoanAccountDetailsUpdateComponent implements OnInit {\r\n  updateLoanDetails: boolean = false;\r\n  updateAsset: boolean = false;\r\n  itemForm: FormGroup;\r\n  \r\n\r\n  loanAccountId: any;\r\n  loanaccountID: any;\r\n  branchName: any;\r\n  currencyData: any;\r\n  isHomeLoan: boolean=false;\r\n  isVehicleLoan:boolean=false;\r\n  minDate = new Date();\r\n  maxDate = new Date();\r\n  selectedDay: number = 1;\r\n  day: number;\r\n  days: any[] = [];\r\n  months: any[] = [];\r\n  selectedYear: number;\r\n  year: number;\r\n  years: any[] = [];\r\n  accountType: any;\r\n  arrayAccountBranch: any;\r\n  screenArray: any;\r\n  screenArrayData: any;\r\n\r\n  loanUpdateForm: FormGroup;\r\n\r\n  loanAssetForm: FormGroup;\r\n  arrayCountry: any[] = [];\r\n  arrayState: any[] = [];\r\n  arrayCity: any[] = [];\r\n  entityName: string;\r\n  assetDetails: any\r\n  \r\n  loanAccountDetails: any;\r\n  loanAmount: any;\r\n  ifEdit: boolean = false;\r\n\r\n\r\n  loanForm:FormGroup;\r\n  showEditOption: boolean = false;\r\n  flag: boolean=false;\r\n  flag1: boolean = false;\r\n  \r\n  statusArr: any = ['BACKLOG', 'ONGOING', 'APPROVED', 'REJECTED']\r\n  arr: any = ['BACKLOG', 'ONGOINGArr', 'APPROVEDArr', 'REJECTEDArr']\r\n  BACKLOGArr: any = [];\r\n  ONGOINGArr: any = [];\r\n  REJECTEDArr: any = [];\r\n  APPROVEDArr: any = [];\r\n  \r\n  BACKLOGTotalPages: number = 0\r\n  ONGOINGTotalPages: number = 0\r\n  REJECTEDTotalPages: number = 0\r\n  APPROVEDTotalPages: number = 0\r\n\r\n  BACKLOGCount: number = 0\r\n  ONGOINGCount: number = 0\r\n  REJECTEDCount: number = 0\r\n  APPROVEDCount: number = 0\r\n\r\n  BACKLOGImage: any[] = [];\r\n  ONGOINGImage: any[] = [];\r\n  REJECTEDImage: any[] = [];\r\n  APPROVEDImage: any[] = [];\r\n\r\n  BACKLOGTotalRecords: number = 0;\r\n  ONGOINGTotalRecords: number = 0;\r\n  REJECTEDTotalRecords: number = 0;\r\n  APPROVEDTotalRecords: number = 0;\r\n\r\n  BACKLOGPage: number = 0;\r\n  ONGOINGPage: number = 0;\r\n  REJECTEDPage: number = 0;\r\n  APPROVEDPage: number = 0;\r\n  \r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    private dialogue: MatDialog,private taskSumService: TasksummaryService,\r\n    public dialogRef: MatDialogRef<LoanAccountDetailsUpdateComponent>,\r\n    // @Inject(MAT_DIALOG_DATA) private data,\r\n    private fb: FormBuilder, private cdr: ChangeDetectorRef,\r\n    //private formbuild: FormBuilder,\r\n    private apiService: ApiService, private ls: LocalStoreService, private snack: MatSnackBar,\r\n    private router: Router,  private loader: AppLoaderService,\r\n  ) \r\n  { \r\n  }\r\n\r\n  ngOnInit(): void {\r\n    console.log('mat dialog data -- ', this.data);\r\n    this.selectedYear = new Date().getFullYear();\r\n    for (let year = 0; year <= 50; year++) {\r\n      this.years.push(year+ \" year\");\r\n    }\r\n    for (let month = 0; month <= 11; month++) {\r\n      this.months.push(month+ \" month\");\r\n    }\r\n    for (let day = 0; day <= 30; day++) {\r\n      this.days.push(day+ \" day\");\r\n    }\r\n   // this.buildLoanForm();\r\n   this.loanaccountID = this.data.loanAccountId;\r\n    console.log('loanaccountID',this.loanaccountID)\r\n    console.log('component call check')\r\n    // if (this.updateLoanDetails == true) {\r\n      this.getLoanDetails();\r\n      \r\n      this.buildMenuForm(this.data);\r\n  \r\n    this.getBusinessProductDetails(\"business_product_name\");\r\n    this.getAccountBranchDetails();\r\n    this.getCountryName(\"country\");\r\n    this.getStateName(\"state\");\r\n\r\n  \r\n \r\n  }\r\n  \r\n\r\n\r\n\r\n\r\ngetAssetDetails(){\r\n  this.loader.open();\r\n  //this.apiService.getAssetValuation(this.loacnAccountId).subscribe((accountDetails) => {\r\n  this.apiService.getAssetails(this.loanaccountID).subscribe((assetDetails) => {\r\n    this.loader.close();\r\n    this.assetDetails = assetDetails;\r\n    this.getStateName(this.assetDetails.country);\r\n    this.getCityName(this.assetDetails.state);\r\n    console.log(this.assetDetails);\r\n    this.buildAssetForm(this.assetDetails);\r\n  }, (err: any) => {\r\n    this.loader.close();\r\n  });\r\n\r\n  \r\n}\r\n  buildMenuForm(data?) {\r\n  console.log('item',data)\r\n  this.getBusinessProductDetails(\"business_product_name\");\r\n  this.getAccountBranchDetails();\r\n // this.getAccountType('accountTypeName');\r\n    // let applicationDate = data ? moment(data.applicationDate).format() : '';\r\n   \r\n  this.loanUpdateForm = this.fb.group({\r\n        loanAccountId: [this.loanaccountID],\r\n      // businessProductName:[data ? data.businessProductName:'',[Validators.required]],\r\n      businessProductName:[data ? data?.info?.businessProductName:''],\r\n      accountBranch:[data ? data?.info?.accountBranch:''],\r\n      applicationDate: [data ? data?.info?.applicationDate : ''],\r\n      accountType:[data ? data?.info?.accountType:''],\r\n      estimatedCost:[data ? data?.info?.estimatedCost:''],\r\n      customerContribution:[data ? data?.info?.customerContribution:''],\r\n      loanAmount:[data ? data?.info?.loanAmount:''],\r\n      purposeOfLoan:[data ? data?.info?.purposeOfLoan:''],\r\n      accountCurrency:[data ? data?.info?.accountCurrency:''],\r\n      loanTenure:[data ? data?.info?.loanTenure:''],\r\n      day: [data ? Number(data?.info?.loanTenure.split(\"-\")[2]) : \"\"],\r\n      month: [data ? data?.info?.loanTenure.split(\"-\")[1] : \"\"],\r\n      year: [data ? Number(data?.info?.loanTenure.split(\"-\")[0]) : \"\"],\r\n    \r\n\r\n  \r\n  });\r\n  console.log('form before',this.loanUpdateForm)\r\n  console.log('form aftr',this.loanUpdateForm.value)\r\n}\r\n\r\nsave() {\r\n  \r\n  console.log('save check')\r\n  let payload: any = {};\r\n  payload = this.loanUpdateForm.value;\r\n // payload.loggedInUser = this.loggedInUser.userName;\r\n  this.apiService.saveLoanDetails(this.loanUpdateForm.value).subscribe(res => {\r\n\r\n    this.snack.open('Data Saved Successfully!', 'OK',\r\n      {\r\n        duration: 4000,\r\n        verticalPosition: \"top\",\r\n        horizontalPosition: \"right\",\r\n      });\r\n    this.dialogRef.close(true);\r\n  }, err => {\r\n    this.snack.open('Unable to Save!', 'Error',\r\n      {\r\n        duration: 4000,\r\n        verticalPosition: \"top\",\r\n        horizontalPosition: \"right\",\r\n      });\r\n    this.dialogRef.close(false);\r\n  })\r\n}\r\nclose() {\r\n  this.dialogRef.close(false);\r\n}\r\n\r\n  getAccountType(businessProductName) {\r\n    //this.entityName = \"state\";\r\n    console.log(\"State -- \", businessProductName)\r\n    this.apiService.getAccount(businessProductName).subscribe((data) => {\r\n      console.log(\"data.accountType\",data);\r\n      this.accountType = data.accountTypeName;\r\n      console.log(\"this.accountType\",this.accountType);\r\n      this.loanUpdateForm.get('accountType').setValue(data.accountTypeName);\r\n    //  this.loanUpdateForm.value.accountType = data.accountTypeName;\r\n     \r\n    });\r\n  }\r\n  getBusinessProductDetails(key: string){\r\n    this.apiService.getBusinessProductName(key).subscribe((data) => {\r\n       console.log(\"data:: AccountBranch \", data)\r\n       this.arrayAccountBranch = data;\r\n      \r\n     });\r\n   }\r\n   getAccountBranchDetails() {\r\n    //debugger\r\n    this.apiService.getAccountBranch().subscribe((data) => {\r\n      console.log(\"data:: AccountBranch \", data)\r\n      this.screenArray = data;\r\n      this.screenArrayData=data;\r\n      if (this.screenArray.length == 0) {\r\n        this.screenArray.push(this.branchName);\r\n      }\r\n      console.log(\"this.branchName::\", this.branchName, this.screenArray)\r\n      this.currencyData = this.screenArray.find(x => x.branchName == this.branchName);\r\n      console.log(\"Currency\", this.currencyData)\r\n\r\n      // if (this.currencyData != null || this.currencyData != undefined) {\r\n      //   this.loanUpdateForm.get('accountCurrency').setValue(this.currencyData.branchCcy);\r\n      // }\r\n\r\n    });\r\n  }\r\n   onChangeBranch(value) {\r\n  //  this.ifEdit = true;\r\n    this.currencyData = this.screenArray.find(x => x.branchName == value.value);\r\n    if (this.currencyData != null || this.currencyData != undefined) {\r\n      this.itemForm.get('accountCurrency').setValue(this.currencyData.branchCcy);\r\n    }\r\n   }\r\n  \r\n \r\n\r\n\r\n  getLoanDetails() {\r\n    console.log('get loan details');\r\n    \r\n    this.apiService.getLoanDetails(this.loanaccountID).subscribe((loanAccountDetails: any) => {\r\n      console.log(\"All Account Service\", loanAccountDetails);\r\n      this.loanAccountDetails = loanAccountDetails;\r\n      //this.buildformGroup(this.loanAccountDetails);\r\n      console.log(\"this.accountDetails\", this.loanAccountDetails);\r\n      console.log('form',this.loanUpdateForm.value)\r\n    //  this.loanUpdateForm.value.businessProductName = this.loanAccountDetails.businessProductName;\r\n      this.loanUpdateForm.controls.businessProductName.setValue(this.loanAccountDetails.businessProductName);\r\n      this.loanUpdateForm.value.accountType = this.loanAccountDetails.accountType;\r\n     // this.ls.setItem('accountType', data.accountType);\r\n     console.log('accountType',   this.ls.setItem('accountType', this.loanUpdateForm.value.accountType))\r\n      this.ls.setItem('accountType', this.loanUpdateForm.value.accountType);\r\n\r\n\r\n     this.loanUpdateForm.value.accountBranch = this.loanAccountDetails.accountBranch;\r\n     this.loanUpdateForm.value.loanAmount = this.loanAccountDetails.loanAmount;\r\n   //  this.loanUpdateForm.value.businessProductName = this.loanAccountDetails.businessProductName;\r\n    });\r\n  }\r\n  buildAssetForm(data?) {\r\n    console.log('item',data)\r\n    this.getBusinessProductDetails(\"business_product_name\");\r\n    this.getAccountBranchDetails();\r\n     \r\n    this.loanAssetForm = this.fb.group({\r\n        loanAccountId: [this.loanaccountID],\r\n        country:[data ? data?.assetInfo?.country:''],\r\n        state:[data ? data?.assetInfo?.state:''],\r\n        city: [data ? data?.assetInfo?.city : ''],\r\n        assetStatus:[data ? data?.assetInfo?.assetStatus:''],\r\n        estimatedCost:[data ?data?.assetInfo?.estimatedCost:''],\r\n        dimensions:[data ? data?.assetInfo?.dimensions:''],\r\n        locality:[data ? data?.assetInfo?.locality:''],\r\n        marketValue:[data ? data?.assetInfo?.marketValue:''],\r\n        building:[data ? data?.assetInfo?.building:''],\r\n        zipCode: [data ? data?.assetInfo?.zipCode : ''],\r\n        homeType:[data ? data?.assetInfo?.homeType:''],\r\n        mortgagedBranch: [data ? data?.assetInfo?.mortgagedBranch:'']\r\n     \r\n  \r\n  \r\n \r\n    \r\n    });\r\n    console.log('form before',this.loanUpdateForm)\r\n    console.log('form aftr',this.loanUpdateForm.value)\r\n  }\r\n  getCountryName(key: string) {\r\n    this.apiService.getDropDownValues(key).subscribe((data) => {\r\n      this.arrayCountry = data;\r\n      console.log(\"-->\", this.arrayCountry)\r\n    });\r\n  }\r\n  getStateName(country) {\r\n    this.entityName = \"state\";\r\n    console.log(\"State -- \", country)\r\n    this.apiService.getDropDownValues1(this.entityName, country).subscribe((data) => {\r\n      this.arrayState = data;\r\n      console.log(\"-->\", this.arrayState)\r\n    });\r\n  }\r\n  getCityName(state: any) {\r\n    this.entityName = \"city\";\r\n    console.log(state)\r\n    this.apiService.getDropDownValues1(this.entityName, state).subscribe((data) => {\r\n      this.arrayCity = data;\r\n      console.log(\"-->\", this.arrayCity)\r\n     \r\n  \r\n    });\r\n  }\r\n  assign(valueForaccId) {\r\n    this.apiService.setAccountId({\r\n      loanAccountId: valueForaccId\r\n    });\r\n    console.log(\"loan\", this.loanAccountId)\r\n  }\r\n  next(){\r\n   // this.ls.setItem('LOAN_DETAIL_DONE', true);\r\n    console.log(\"this.accountType\", this.accountType);\r\n    this.router.navigate([`/tasks/loan-account-task-summary`]);\r\n    console.log(\"this.ls.accounttype\", this.ls.getItem('accountType'))\r\n    this.taskSumService.getLoanAccountDetails(this.loanaccountID).subscribe((data) => {\r\n      console.log(\"data\", data)\r\n    \r\n\r\n      \r\n   \r\n    });\r\n    // if((this.accountType||this.ls.getItem('accountType'))==\"Home Loan\"){\r\n    //   this.ls.setItem('isHomeLoan', true);\r\n    //   // this.accountService.refresh.next();\r\n    //   // this.router.navigate([`/loan/account/asset-details`]);\r\n      \r\n    // }\r\n    // else if((this.accountType||this.ls.getItem('accountType'))==\"Vehicle Loan\"){\r\n    //   this.ls.setItem('isVehicleLoan', true);\r\n    //   // this.accountService.refresh.next();\r\n    //   // this.router.navigate([`/loan/account/vehicle-details`]);\r\n      \r\n    // }\r\n   \r\n    // else{\r\n    //   this.ls.setItem('isEducationLoan', true);\r\n    // //  this.accountService.refresh.next();\r\n    // //   this.router.navigate([`/loan/account/admission-details`]);\r\n      \r\n\r\n    // }\r\n  \r\n  }\r\n  _keyPress(event: any) {\r\n    // console.log(\"key\",event);\r\n    const pattern = /[0-9]/;\r\n    let inputChar = String.fromCharCode(event.charCode);\r\n    console.log(\"inputChar\",inputChar);\r\n    inputChar=inputChar.toString();\r\n    console.log(\"inputChar1\",inputChar);\r\n    inputChar=inputChar\r\n    if (!pattern.test(inputChar)) {\r\n        event.preventDefault();\r\n    }\r\n   }\r\n\r\n   \r\n  async getDataOnLoad() {\r\n    for (let index = 0; index < this.statusArr.length; index++) {\r\n      const statusItem = this.statusArr[index];\r\n      this.fetchCustomerInfo(statusItem);\r\n    }\r\n\r\n  }\r\n\r\n   fetchCustomerInfo(status:string){\r\n   \r\n    this.taskSumService.getallLoanAccountData(status)\r\n            .subscribe((custResp:any) => {\r\n              console.log(\"Response\", custResp);\r\n              this.updateStatusResponse(status, custResp);\r\n            });\r\n  }\r\n\r\n  updateStatusResponse(status, data){\r\n    console.log(\"data\", data)\r\n    console.log(\"status\", status)\r\n  \r\n      if (status == 'ONGOING') {\r\n      this.ONGOINGArr = data?.loanList;\r\n      this.ONGOINGTotalPages = data?.totalPages;\r\n      this.ONGOINGTotalRecords = data?.totalNoOfElements;\r\n    }\r\n \r\n\r\n    this.cdr.markForCheck();\r\n}\r\n  submitForm1(){\r\n      //details.push(this.legalOpinion.value);\r\n      let now = new Date();\r\n      now=this.loanUpdateForm.value.applicationDate;\r\n      console.log(\"applicationDate\",this.loanUpdateForm.value.applicationDate);\r\n      \r\n      var dateStringWithTime = moment(now).format('YYYY-MMM-DD HH:MM:SS');\r\n      console.log(\"dateStringWithTime\",dateStringWithTime);\r\n      var ck=new Date(dateStringWithTime);\r\n      console.log(\"ck\",ck)\r\n      var pk=this.loanUpdateForm.value.loanAmount;\r\n      pk= parseInt(pk);\r\n      var prSize=this.loanUpdateForm.value.estimatedCost;\r\n      prSize= parseInt(prSize);\r\n      const renewData =\r\n      this.loanUpdateForm.value.year +\r\n      \"-\" +\r\n      this.loanUpdateForm.value.month +\r\n      \"-\" +\r\n      this.loanUpdateForm.value.day;\r\n    this.loanUpdateForm.get(\"loanTenure\").setValue(renewData);\r\n    delete this.loanUpdateForm.value.year;\r\n    delete this.loanUpdateForm.value.month;\r\n    delete this.loanUpdateForm.value.day;\r\n      let payload={\r\n        // loanAccountId: this.showEditOption ? this.loanaccountID : null,\r\n        loanAccountId: this.data.loanAccountId,\r\n        businessProductName:this.loanUpdateForm.value.businessProductName,\r\n        accountBranch:this.loanUpdateForm.value.accountBranch,\r\n        applicationDate:dateStringWithTime,\r\n        accountType:this.loanUpdateForm.value.accountType,\r\n        estimatedCost:prSize,\r\n        customerContribution:this.loanUpdateForm.value.customerContribution,\r\n        loanAmount:pk,\r\n        purposeOfLoan:this.loanUpdateForm.value.purposeOfLoan,\r\n        loanTenure:this.loanUpdateForm.value.loanTenure,\r\n        accountCurrency:this.loanUpdateForm.value.accountCurrency\r\n      }\r\n      console.log(\"payload\",payload)\r\n      this.apiService.saveLoanDetails(payload).subscribe(data => {\r\n        console.log(\"data\",data.loanAccountId);\r\n        // this.loanAccountId=data.loanAccountId;\r\n        // console.log(\"loanAccountid\",this.loanAccountId);\r\n\r\n        this.loanaccountID = this.data.loanAccountId;\r\n        console.log('loanaccountID', this.loanaccountID)\r\n        \r\n       \r\n        // this.assign(data.loanAccountId)\r\n        this.assign(this.data.loanAccountId)\r\n        if (data === 200 || data !== null) {\r\n          let statusModel = {\r\n            loanAccountId: this.data.loanAccountId,\r\n            status: \"ONGOING\"\r\n          };\r\n          this.apiService.updateLoanDetailsStatus(statusModel).subscribe(data => {\r\n          });\r\n        //  sessionStorage.setItem('loanAccountId', data.loanAccountid);\r\n          let fundStatus = {\r\n            loanAccountid: this.data.loanAccountId\r\n            \r\n          };\r\n         \r\n  \r\n          this.ls.setItem('fundByStatus', fundStatus);\r\n          this.ls.setItem('accountType', data.accountType);\r\n         // this.ls.setItem('loanAccountId',this.data.loanAccountId);\r\n          this.ls.setItem('productName',data.businessProductName);\r\n      //    this.loanaccountID = this.ls.getItem('loanAccountid');\r\n          \r\n      this.loanaccountID = this.data.loanAccountId;\r\n      console.log(\"this.productaccountID\",this.loanaccountID);\r\n          this.snack.open('Data Updated!', 'OK', {\r\n            duration: 4000,\r\n            verticalPosition: 'top',\r\n            horizontalPosition: 'right'\r\n          });\r\n          this.getDataOnLoad();\r\n        }\r\n        if( data === 500){\r\n          this.snack.open('Not able to connect to server!', 'INTERNAL SERVER ERROR', {\r\n            duration: 4000,\r\n            verticalPosition: 'top',\r\n            horizontalPosition: 'right'\r\n          });\r\n          console.log(\"500 error\")\r\n        }\r\n        \r\n        this.goToClose();\r\n      })\r\n  }\r\n  goToClose(): void {\r\n    this.dialogRef.close();\r\n   \r\n     this.loader.open();\r\n   // this.getLoanDetails();\r\n    this.apiService.getLoanDetails(this.loanaccountID).subscribe((loanAccountDetails: any) => {\r\n      console.log(\"All Account Service\", loanAccountDetails);\r\n      this.loanAccountDetails = loanAccountDetails;\r\n      //this.buildformGroup(this.loanAccountDetails);\r\n      console.log(\"this.accountDetails\", this.loanAccountDetails);\r\n      console.log('form',this.loanUpdateForm.value)\r\n    //  this.loanUpdateForm.value.businessProductName = this.loanAccountDetails.businessProductName;\r\n      this.loanUpdateForm.controls.businessProductName.setValue(this.loanAccountDetails.businessProductName);\r\n      this.loanUpdateForm.value.accountType = this.loanAccountDetails.accountType;\r\n     // this.ls.setItem('accountType', data.accountType);\r\n     console.log('accountType',   this.ls.setItem('accountType', this.loanUpdateForm.value.accountType))\r\n      this.ls.setItem('accountType', this.loanUpdateForm.value.accountType);\r\n\r\n\r\n     this.loanUpdateForm.value.accountBranch = this.loanAccountDetails.accountBranch;\r\n      this.loanUpdateForm.value.loanAmount = this.loanAccountDetails.loanAmount;\r\n      this.loader.close();\r\n   //  this.loanUpdateForm.value.businessProductName = this.loanAccountDetails.businessProductName;\r\n    });\r\n   \r\n  }\r\n  submitForm(){\r\n    \r\n    //details.push(this.legalOpinion.value);\r\n    let now = new Date();\r\n    now=this.loanForm.value.applicationDate;\r\n    console.log(\"applicationDate\",this.loanForm.value.applicationDate);\r\n    \r\n    var dateStringWithTime = moment(now).format('YYYY-MMM-DD HH:MM:SS');\r\n    console.log(\"dateStringWithTime\",dateStringWithTime);\r\n    var ck=new Date(dateStringWithTime);\r\n    console.log(\"ck\",ck)\r\n    var pk=this.loanForm.value.loanAmount;\r\n    pk= parseInt(pk);\r\n    var prSize=this.loanForm.value.estimatedCost;\r\n    prSize= parseInt(prSize);\r\n    const renewData =\r\n    this.loanForm.value.year +\r\n    \"-\" +\r\n    this.loanForm.value.month +\r\n    \"-\" +\r\n    this.loanForm.value.day;\r\n  this.loanForm.get(\"loanTenure\").setValue(renewData);\r\n  delete this.loanForm.value.year;\r\n  delete this.loanForm.value.month;\r\n  delete this.loanForm.value.day;\r\n    let payload={\r\n      loanAccountId: this.showEditOption ? this.loanaccountID : null,\r\n      businessProductName:this.loanForm.value.businessProductName,\r\n      accountBranch:this.loanForm.value.accountBranch,\r\n      applicationDate:dateStringWithTime,\r\n      accountType:this.loanForm.value.accountType,\r\n      estimatedCost:prSize,\r\n      customerContribution:this.loanForm.value.customerContribution,\r\n      loanAmount:pk,\r\n      purposeOfLoan:this.loanForm.value.purposeOfLoan,\r\n      loanTenure:this.loanForm.value.loanTenure,\r\n      accountCurrency:this.loanForm.value.accountCurrency\r\n    }\r\n    console.log(\"payload\",payload)\r\n    this.apiService.saveLoanDetails(payload).subscribe(data => {\r\n      console.log(\"data\",data.loanAccountId);\r\n      this.loanAccountId=data.loanAccountId;\r\n      console.log(\"loanAccountid\",this.loanAccountId);\r\n      this.assign(data.loanAccountId)\r\n      if (data === 200 || data !== null) {\r\n        let statusModel = {\r\n          loanAccountId: data.loanAccountId,\r\n          status: \"ONGOING\"\r\n        };\r\n        this.apiService.updateLoanDetailsStatus(statusModel).subscribe(data => {\r\n        });\r\n        sessionStorage.setItem('loanAccountId', data.loanAccountid);\r\n        let fundStatus = {\r\n          loanAccountid: data.loanAccountid\r\n          \r\n        };\r\n       \r\n\r\n        this.ls.setItem('fundByStatus', fundStatus);\r\n        this.ls.setItem('accountType', data.accountType);\r\n        this.ls.setItem('loanAccountId', data.loanAccountId);\r\n        this.ls.setItem('productName',data.businessProductName);\r\n        this.loanaccountID = this.ls.getItem('loanAccountid');\r\n    console.log(\"this.productaccountID\",this.loanaccountID);\r\n        this.snack.open('Data Saved!', 'OK', {\r\n          duration: 4000,\r\n          verticalPosition: 'top',\r\n          horizontalPosition: 'right'\r\n        });\r\n      }\r\n      if( data === 500){\r\n        this.snack.open('Not able to connect to server!', 'INTERNAL SERVER ERROR', {\r\n          duration: 4000,\r\n          verticalPosition: 'top',\r\n          horizontalPosition: 'right'\r\n        });\r\n        console.log(\"500 error\")\r\n      }\r\n      \r\n      this.next();\r\n    })\r\n    \r\n  //this.next();\r\n}\r\n//   submit() {\r\n//     this.dialogRef.close(this.itemForm.value)\r\n    \r\n//   }\r\n\r\n}\r\n\r\n\r\n\r\n// import { ChangeDetectorRef, Component, Inject, OnInit } from '@angular/core';\r\n// import { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\n// import { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\n// import { MatSnackBar } from '@angular/material/snack-bar';\r\n// import { Router, ActivatedRoute } from '@angular/router';\r\n// import { ApiService } from 'app/shared/services/api.service';\r\n// import { AppLoaderService } from 'app/shared/services/app-loader/app-loader.service';\r\n// import { DataService } from 'app/shared/services/data.service';\r\n// import { LocalStoreService } from 'app/shared/services/local-store.service';\r\n\r\n// @Component({\r\n//   selector: 'app-loan-account-details-update',\r\n//   templateUrl: './loan-account-details-update.component.html',\r\n//   styleUrls: ['./loan-account-details-update.component.scss']\r\n// })\r\n// export class LoanAccountDetailsUpdateComponent implements OnInit {\r\n//   menuForm: FormGroup;\r\n//   parentMenus: any = [];\r\n//   loggedInUser: any;\r\n  \r\n// // @Component({\r\n// //   selector: 'app-loan-account-details-update',\r\n// //   templateUrl: './loan-account-details-update.component.html',\r\n// //   styleUrls: ['./loan-account-details-update.component.scss']\r\n// // })\r\n// // export class LoanAccountDetailsUpdateComponent implements OnInit {\r\n\r\n//   constructor(private cdr: ChangeDetectorRef,\r\n//     public dialogRef: MatDialogRef<LoanAccountDetailsUpdateComponent>,\r\n//     @Inject(MAT_DIALOG_DATA) private data,\r\n//     private apiService: ApiService,\r\n//     private fb: FormBuilder,\r\n//     private dialogue: MatDialog,\r\n//     private dataService: DataService,\r\n//     private ls: LocalStoreService,\r\n//     private loader: AppLoaderService,\r\n//     private snack: MatSnackBar,\r\n//     private router: Router,\r\n//     private route: ActivatedRoute,) { }\r\n\r\n//   ngOnInit(): void {\r\n//     this.loggedInUser = this.ls.getItem('ICUST_USER');\r\n//     this.buildMenuForm(this.data);\r\n//     this.getParentMenus();\r\n//   }\r\n\r\n//   buildMenuForm(item: any) {\r\n//     this.menuForm = this.fb.group({\r\n//       id: [item.id || null],\r\n//       screenCode: [item.screenCode || \"\", Validators.required],\r\n//       screenName: [item.screenName || \"\", Validators.required],\r\n//       parentId: [item.parentId || 0, Validators.required],\r\n//       routing: [item.routing || \"\", Validators.required],\r\n//       status: true,\r\n//     });\r\n//   }\r\n\r\n//   getParentMenus() {\r\n//     this.apiService.getMaintenanceParentMenu().subscribe((res: any) => {\r\n//       this.parentMenus = res;\r\n//     }, (err: any) => {\r\n\r\n//     })\r\n//   }\r\n\r\n//   save() {\r\n//     if (this.menuForm.invalid) {\r\n//       return;\r\n//     }\r\n//     let payload: any = {};\r\n//     payload = this.menuForm.value;\r\n//     payload.loggedInUser = this.loggedInUser.userName;\r\n//     this.loader.open();\r\n//     this.apiService.upsertMenu(this.menuForm.value).subscribe(res => {\r\n//       this.loader.close();\r\n//       this.snack.open('Data Saved Successfully!', 'OK',\r\n//         {\r\n//           duration: 4000,\r\n//           verticalPosition: \"top\",\r\n//           horizontalPosition: \"right\",\r\n//         });\r\n//       this.dialogRef.close(true);\r\n//     }, err => {\r\n//       this.loader.close();\r\n//       this.snack.open('Unable to Save!', 'Error',\r\n//         {\r\n//           duration: 4000,\r\n//           verticalPosition: \"top\",\r\n//           horizontalPosition: \"right\",\r\n//         });\r\n//       this.dialogRef.close(false);\r\n//     })\r\n//   }\r\n\r\n//   close() {\r\n//     this.dialogRef.close(false);\r\n//   }\r\n\r\n// }\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { ApplicationEntryStageService } from 'app/shared/services/application-entry-stage.service';\r\n\r\n@Component({\r\n  selector: 'app-card-credit-score-update',\r\n  templateUrl: './card-credit-score-update.component.html',\r\n  styleUrls: ['./card-credit-score-update.component.scss']\r\n})\r\nexport class CardCreditScoreUpdateComponent implements OnInit {\r\n  cardCreditScoreUpdateForm: FormGroup;\r\n  customerNames:String[];\r\n  disableAddAgency: boolean;\r\n  disableFastTrack: boolean;\r\n  disableUjjivan: boolean;\r\n  disableTest: boolean;\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public data,\r\n    public dialogRef: MatDialogRef<CardCreditScoreUpdateComponent>,\r\n    private formBuilder: FormBuilder,\r\n    private appApiService: ApplicationEntryStageService,\r\n    private api: ApiService,\r\n    public snack: MatSnackBar\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\nthis.getCustomerInformationDetails();\r\n    if(!this.data.creditScore.cardId){\r\n       this.buildCreditForm()       \r\n    }\r\n    else{\r\n        this.buildCreditForm(this.data.creditScore);\r\n    }\r\n  \r\n   \r\n  }\r\n\r\n  getCustomerInformationDetails() {\r\n    this.customerNames = []\r\n    this.appApiService\r\n      .fetchCustomersByCardAccId(this.data.cardId, 'cardOrigin')\r\n      .subscribe(\r\n        (resp: any) => {\r\n          console.log('resp for customer information names ', resp.data);\r\n          for (let index = 0; index < resp.data.length; index++) {\r\n            if (resp.data[index].middleName == null) {\r\n              this.customerNames.push(resp.data[index].firstName + ' ' + resp.data[index].lastName)\r\n            } else {\r\n              this.customerNames.push( resp.data[index].firstName +\r\n                ' ' +\r\n                resp.data[index].middleName +\r\n                ' ' +\r\n                resp.data[index].lastName)\r\n               \r\n            }\r\n          }\r\n          console.log('customer name ', this.customerNames);\r\n          if (this.customerNames) {\r\n            console.log('If condtion');\r\n            this.cardCreditScoreUpdateForm\r\n              .get('customerName')\r\n              .setValue(this.customerNames[0]);\r\n          }\r\n        },\r\n        (err: any) => {}\r\n      );\r\n  }\r\n\r\n  get f() {\r\n    return this.cardCreditScoreUpdateForm.controls;\r\n  }\r\n  get c() {\r\n    return this.f.agencyRating as FormArray;\r\n  }\r\n\r\n  buildCreditForm(data?, isResponse?: boolean) {\r\n    console.log(data);\r\n\r\n    this.cardCreditScoreUpdateForm = this.formBuilder.group({\r\n      cardId: this.data.cardId,\r\n      customerName: data.customerName ? data.customerName : this.customerNames[0],\r\n      agencyRating: this.formBuilder.array([this.addModFormGroup(data)]),\r\n    });\r\n\r\n    console.log(this.cardCreditScoreUpdateForm);\r\n  }\r\n\r\n  addModFormGroup(data): FormGroup {\r\n    console.log(data, 'inside addModeFormGrp');\r\n    return this.formBuilder.group({\r\n      cardId: [this.data.cardId],\r\n      agencyId: [data ? data.agencyId : 0],\r\n      agencyName: [data ? data.agencyRating[0].agencyName : '',Validators.required,],\r\n      ratings: [data ? data.agencyRating[0].ratings : '', Validators.required],\r\n      remarks: [data ? data.agencyRating[0].remarks : ''],\r\n    });\r\n  }\r\n\r\n  addFormGroup() {\r\n    this.c.push(\r\n      this.formBuilder.group({\r\n        agencyId: [0],\r\n        agencyName: ['', Validators.required],\r\n        ratings: ['', Validators.required],\r\n      })\r\n    );\r\n  }\r\n  submit(val) {\r\n    console.log('val', val);\r\n    val.accountType = 'cardOrigin';\r\n    this.api.saveCreditDetails(val).subscribe(\r\n      (data: any) => {\r\n        console.log(data);\r\n        if (data === 200 || data !== null) {\r\n          this.snack.open(' Credit Details Updated!', 'OK', {\r\n            duration: 4000,\r\n            verticalPosition: 'top',\r\n            horizontalPosition: 'right',\r\n          });\r\n          let statusModel = {\r\n            cardId: data.cardId,\r\n            status: \"BACKLOG\"\r\n          };\r\n          this.api.updateCardStatus(statusModel).subscribe(data => {\r\n            this.dialogRef.close({\r\n              status: data.status\r\n             });\r\n            });\r\n         \r\n        } else if (data === 500) {\r\n          this.snack.open(\r\n            'Not able to connect to server!',\r\n            'INTERNAL SERVER ERROR',\r\n            {\r\n              duration: 4000,\r\n              verticalPosition: 'top',\r\n              horizontalPosition: 'right',\r\n            }\r\n          );\r\n        }\r\n      },\r\n      (err) => {\r\n        console.log(err);\r\n      }\r\n    );\r\n  }\r\n\r\n  onClick() {\r\n    for(let i=0; i<3; i++) {     \r\n      if(this.cardCreditScoreUpdateForm.value.agencyRating[i].agencyName==\"Test Agency\") {\r\n        this.disableTest=true;\r\n       }    \r\n      if(this.cardCreditScoreUpdateForm.value.agencyRating[i].agencyName==\"Ujjivan Agency\") {\r\n        this.disableUjjivan=true;\r\n       }    \r\n      if(this.cardCreditScoreUpdateForm.value.agencyRating[i].agencyName==\"Fast Track Agency\") {\r\n        this.disableFastTrack=true;\r\n       }\r\n     }\r\n     if(this.cardCreditScoreUpdateForm.value.agencyRating.length==3) {\r\n       this.disableAddAgency=true;\r\n     }\r\n   } \r\n  _keyPress(event: any) {\r\n    const pattern = /[0-9]/;\r\n    let inputChar = String.fromCharCode(event.charCode);\r\n    if (!pattern.test(inputChar)) {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n  onSubmit(){\r\n    \r\n  }\r\n\r\n  close(){\r\n    this.dialogRef.close({\r\n      status:\"ONGOING\"\r\n    })\r\n  }\r\n}\r\n","<div fxLayout=\"row\" fxLayoutAlign=\"end\" class=\"contain\">\r\n    <mat-icon class=\"closeIcon\" (click)=\"close()\">close</mat-icon>\r\n</div>\r\n\r\n<h1 mat-dialog-title>Credit Score Details</h1>\r\n\r\n<mat-dialog-content>\r\n    <mat-card>\r\n        <form [formGroup]=\"cardCreditScoreUpdateForm\">\r\n           <mat-card>\r\n<mat-form-field appearance=\"outline\" fxFlex=\"30%\">\r\n    <mat-label>Customer Name*</mat-label>\r\n    <mat-select name=\"customerName\" formControlName=\"customerName\">\r\n                  <mat-option *ngFor=\"let customerName of customerNames\" [value]=\"customerName\">\r\n                    {{ customerName }}\r\n                  </mat-option>\r\n                </mat-select>\r\n                <!-- <input matInput *ngIf=\"customerNames.length == 1\" formControlName=\"customerName\" class=\"alignment\" type=\"text\" readonly /> -->\r\n                <mat-error *ngIf=\"!cardCreditScoreUpdateForm.get('customerName').valid && cardCreditScoreUpdateForm.get('customerName').touched\">\r\n                Customer Name is Required!\r\n              </mat-error>\r\n            </mat-form-field>\r\n        </mat-card>\r\n        <mat-card *ngFor=\"let mandate of c.controls; let i = index\">\r\n            <mat-accordion [formGroup]=\"mandate\">\r\n                  <h5>Score </h5><br>\r\n                    <div fxLayout=\"row\" fxLayoutGap=\"5%\">\r\n                            <mat-form-field appearance=\"outline\" fxFlex=\"30%\">\r\n                                <mat-label>Select Agency*</mat-label>\r\n                                <mat-select name=\"agencyName\" formControlName=\"agencyName\">\r\n                                    <mat-option value=\"\">Select</mat-option>\r\n                                    <mat-option (click)=\"onClick()\" [disabled]=disableTest value=\"Test Agency\">Test Agency</mat-option>\r\n                                    <mat-option (click)=\"onClick()\" [disabled]=disableUjjivan value=\"Ujjivan Agency\">Ujjivan Agency</mat-option>\r\n                                    <mat-option (click)=\"onClick()\" [disabled]=disableFastTrack value=\"Fast Track Agency\">Fast Track Agency</mat-option>\r\n                                  </mat-select>\r\n                          <mat-error *ngIf=\"!mandate.controls['agencyName'].valid &&mandate.controls['agencyName'].touched\">\r\n                            Agency is Required!\r\n                          </mat-error>\r\n                            </mat-form-field>\r\n                            <mat-form-field appearance=\"outline\" fxFlex=\"30%\">\r\n                                <mat-label>Ratings</mat-label>\r\n                                <input matInput formControlName=\"ratings\" class=\"alignment\"(keypress)=\"_keyPress($event)\"type=\"text\"name=\"ratings\"/>\r\n                                <mat-error *ngIf=\"!mandate.controls['ratings'].valid &&mandate.controls['ratings'].touched\">\r\n                                  Ratings is Required!\r\n                                </mat-error>\r\n                            </mat-form-field>\r\n                            <mat-form-field appearance=\"outline\" fxFlex=\"30%\">\r\n                                <mat-label>Remarks</mat-label>\r\n                                <input matInput formControlName=\"remarks\" class=\"alignment\"type=\"text\"name=\"remarks\"/>\r\n                  \r\n                            </mat-form-field>\r\n                        </div>\r\n              </mat-accordion>\r\n              <button mat-button color=\"primary\" (click)=\"addFormGroup()\" [disabled]=disableAddAgency>\r\n                <mat-icon>add</mat-icon> ADD AGENCY\r\n              </button>\r\n        </mat-card>\r\n        </form>\r\n    </mat-card>\r\n</mat-dialog-content>\r\n\r\n<div fxLayout=\"row\" fxLayoutAlign=\"end\" fxLayoutGap=\"20px\">\r\n  <button type=\"button\" class=\"editbtn\" \r\n  [disabled]=\"!cardCreditScoreUpdateForm.valid\" (click)=\"submit(cardCreditScoreUpdateForm.value)\">Save</button> \r\n                &nbsp;&nbsp;&nbsp;\r\n                <button type=\"button\" class=\"cancelbtn\" (click)=\"close()\">\r\n                     Cancel\r\n                </button>\r\n</div>\r\n\r\n\r\n\r\n        \r\n     \r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { CorporateOnboardingService } from 'app/views/others/onboarding-corporate/corporate-onboarding.service';\r\n\r\n@Component({\r\n  selector: 'app-update-corporate-contact-info',\r\n  templateUrl: './update-corporate-contact-info.component.html',\r\n  styleUrls: ['./update-corporate-contact-info.component.scss']\r\n})\r\nexport class UpdateCorporateContactInfoComponent implements OnInit {\r\n  updateContactInfoForm: FormGroup;\r\n  arrayState: any[] = [];\r\n  arrayCountry: any[] = [];\r\n  arrayCity: any[] = [];\r\n  isAllSameDigitVal: boolean = false;\r\n  zipIndex: number;\r\n  corporateId: any;\r\n  corporateAddress: FormArray = new FormArray([]);\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) private data,\r\n    private dialogRef: MatDialogRef<UpdateCorporateContactInfoComponent>,\r\n    private formBuilder: FormBuilder,\r\n    private corporateService: CorporateOnboardingService,\r\n    private ls: LocalStoreService,\r\n    private snack: MatSnackBar,\r\n    private apiService: ApiService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.corporateId = this.ls.getItem('corporateId')\r\n    console.log(this.data)\r\n    this.getCountryName('country');\r\n    if (this.data) {\r\n      this.buildContactForm(this.data[0]);\r\n      this.corporateAddress = this.updateContactInfoForm.get('corporateAddress') as FormArray;\r\n      this.corporateAddress.push(this.createUserAddress(this.data[0]))\r\n      this.getStateName(this.corporateAddress.get('country').value)\r\n      this.getStateName(this.corporateAddress.get('state').value)\r\n    }\r\n    else {\r\n      this.buildContactForm();\r\n      this.corporateAddress = this.updateContactInfoForm.get('corporateAddress') as FormArray;\r\n      this.corporateAddress.push(this.createUserAddress())\r\n    }\r\n  }\r\n  buildContactForm(data?) {\r\n    this.updateContactInfoForm = this.formBuilder.group({\r\n      corporateId: [this.corporateId],\r\n      primaryEmail: [data ? data.primaryEmail : '', [Validators.required]],\r\n      secondaryEmail: [data ? data.secondaryEmail : ''],\r\n      mobileNumber: [data ? data.mobileNumber : '', [Validators.minLength(10), Validators.maxLength(10)]],\r\n      landLine: [data ? data.landlineNumber : '', [Validators.maxLength, Validators.minLength]],\r\n      isMailingAddressSame: ['YES'],\r\n      corporateAddress: this.formBuilder.array([])\r\n    })\r\n  }\r\n  createUserAddress(item?): FormGroup {\r\n    return this.formBuilder.group({\r\n      addressType: [\"Communication\", [Validators.required]],\r\n      address1: [item ? item.address1 : [''], [Validators.pattern(\".*[a-zA-Z].*\")]],\r\n      address2: [item ? item.address2 : [''], [Validators.pattern(\".*[a-zA-Z].*\")]],\r\n      city: item ? item.city : [''],\r\n      state: item ? item.state : [''],\r\n      zipCode: item ? item.zipCode : [''],\r\n      country: item ? item.country : [''],\r\n      residenceType: item ? item.residenceType : ['']\r\n    })\r\n  }\r\n  _keyPress(event: any) {\r\n    const pattern = /[0-9]/;\r\n    let inputChar = String.fromCharCode(event.charCode);\r\n    if (!pattern.test(inputChar)) {\r\n      event.preventDefault();\r\n\r\n    }\r\n  }\r\n  letterOnly(event) {\r\n    var charCode = event.keyCode;\r\n    if ((charCode > 64 && charCode < 91) || (charCode > 96 && charCode < 123) || charCode == 8)\r\n      return true;\r\n    else\r\n      return false;\r\n  }\r\n  isAllSameDigit(event, index) {\r\n    this.zipIndex = index;\r\n    let count = 0, number = event.target.value;\r\n    if (number != '') {\r\n      for (var i = 0; i < number.length; i++) {\r\n        if (0 == number[i]) {\r\n          count++;\r\n        }\r\n      }\r\n      if (count == number.length) {\r\n        this.isAllSameDigitVal = true;\r\n      }\r\n      else {\r\n        this.isAllSameDigitVal = false;\r\n      }\r\n    } else {\r\n      this.isAllSameDigitVal = false;\r\n    }\r\n  }\r\n\r\n  getCountryName(key?: string) {\r\n    this.apiService.getAllCountries().subscribe((data: any) => {\r\n      for (let i = 0; i < data.length; i++) {\r\n        if (data[i].authStatus === 'A') {\r\n          this.arrayCountry.push(data[i].countryName);\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  getStateName(country) {\r\n    this.arrayState = [];\r\n    this.arrayCity = [];\r\n    this.apiService.getAllCountries().subscribe((data: any) => {\r\n      for (let i = 0; i < data.length; i++) {\r\n        if (data[i].countryName == country) {\r\n          this.apiService.getStateByCountryId(data[i].id).subscribe((resp: any) => {\r\n            this.arrayState = resp\r\n          })\r\n          break;\r\n        }\r\n      }\r\n    })\r\n  }\r\n  getCityName(state: any) {\r\n    this.apiService.getDropDownValues1(\"city\", state).subscribe((data) => {\r\n      this.arrayCity = data;\r\n    });\r\n  }\r\n  onSubmit(updateContactInfoForm) {\r\n    if (updateContactInfoForm.isMailingAddressSame == 'NO') {\r\n      updateContactInfoForm.corporateAddress[0].addressType = 'Company';\r\n      updateContactInfoForm.corporateAddress[1].addressType = 'Mailing';\r\n    }\r\n    if (updateContactInfoForm.isMailingAddressSame == 'YES') {\r\n      updateContactInfoForm.corporateAddress[0].addressType = 'Company';\r\n    }\r\n    this.corporateService.saveOrUpdateCorporateAccountInfo(updateContactInfoForm)\r\n      .subscribe(data => {\r\n        if (data != null) {\r\n          this.corporateService.sendCorporateAccountId(data.corporateId)\r\n          this.snack.open('Contact Information Updated' + ' !', 'OK', {\r\n            duration: 4000,\r\n            verticalPosition: 'top',\r\n            horizontalPosition: 'right'\r\n          });\r\n          this.dialogRef.close({\r\n            status: \"INITIATED\",\r\n            resp: this.updateContactInfoForm.value\r\n          })\r\n        }\r\n      })\r\n  }\r\n  close() {\r\n    this.dialogRef.close({\r\n      status: \"UNDER_PROCESS\"\r\n    })\r\n  }\r\n}\r\n","<div fxLayout=\"row\" fxLayoutAlign=\"end\">\r\n    <mat-icon class=\"closeIcon\" (click)=\"close()\">close</mat-icon>\r\n</div>\r\n<h2 style=\"font-size:18px ;\" mat-dialog-title>Contact Information</h2>\r\n<mat-dialog-content>\r\n    <form [formGroup]=\"updateContactInfoForm\">\r\n        <div fxLayout=\"row wrap\" class=\"full-width\">\r\n            <div formArrayName=\"corporateAddress\">\r\n                <div *ngFor=\"let item of updateContactInfoForm.get('corporateAddress')['controls']; let i = index;\"\r\n                    fxFlex=\"row wrap\" class=\"full-width\" [formGroupName]=\"i\">\r\n                    <h3 class=\"heading\" style=\"font-weight: 600;\">Company Address</h3>\r\n                    <hr/>\r\n                    <div fxLayout=\"row wrap\">\r\n                        <div fxFlex=\"33.33%\" fxFlex.xs=\"100%\" class=\"full-width\">\r\n                            <mat-hint class=\"hintClass\">Address Line 1*</mat-hint>\r\n                            <mat-card class=\"inputCard\">\r\n                                <input matInput placeholder=\"Address Line 1\" formControlName=\"address1\"\r\n                                    id=\"forAddress1\">\r\n                            </mat-card>\r\n                            <mat-error\r\n                                *ngIf=\"(item.get('address1').touched && !item.get('address1').valid) || (item.get('address1').touched && item.get('address1').hasError('pattern'))\">\r\n                                Enter Valid Address\r\n                            </mat-error>\r\n                        </div>\r\n                        <div fxFlex=\"33.33%\" fxFlex.xs=\"100%\" class=\"full-width\">\r\n                            <mat-hint class=\"hintClass\">Address Line 2*</mat-hint>\r\n                            <mat-card class=\"inputCard\">\r\n                                <input matInput placeholder=\"Address Line 2\" formControlName=\"address2\"\r\n                                    id=\"forAddress2\">\r\n                            </mat-card>\r\n                            <mat-error\r\n                                *ngIf=\"(item.get('address2').touched && !item.get('address2').valid) || (item.get('address2').touched && item.get('address2').hasError('pattern'))\">\r\n                                Enter Valid Address\r\n                            </mat-error>\r\n                        </div>\r\n                        <div fxFlex=\"33.33%\" fxFlex.xs=\"100%\" class=\"full-width\">\r\n                            <mat-hint class=\"hintClass\">Country*</mat-hint>\r\n                            <mat-card class=\"inputCard\">\r\n                                <mat-select id=\"forcountry\" formControlName=\"country\"\r\n                                    (selectionChange)=\"getStateName($event.value,i)\">\r\n                                    <mat-option disabled>select</mat-option>\r\n                                    <mat-option *ngFor=\"let country of arrayCountry\" [value]=\"country\">\r\n                                        {{country}}\r\n                                    </mat-option>\r\n                                </mat-select>\r\n                            </mat-card>\r\n                            <mat-error *ngIf=\"item.get('country').touched && !item.get('country').valid\">\r\n                                Country is Required!\r\n                            </mat-error>\r\n                        </div>\r\n                        <div fxFlex=\"33.33%\" fxFlex.xs=\"100%\" class=\"full-width\">\r\n                            <mat-hint class=\"hintClass\">State*</mat-hint>\r\n                            <mat-card class=\"inputCard\">\r\n                                <mat-select id=\"forstate\" formControlName=\"state\"\r\n                                    (selectionChange)=\"getCityName($event.value,i)\">\r\n                                    <mat-option disabled>select---</mat-option>\r\n                                    <mat-option *ngFor=\"let state of arrayState\" [value]=\"state.stateName\">\r\n                                        {{state.stateName}}\r\n                                    </mat-option>\r\n                                </mat-select>\r\n                            </mat-card>\r\n                            <mat-error *ngIf=\"item.get('state').touched && !item.get('state').valid\">\r\n                                State is Required!\r\n                            </mat-error>\r\n                        </div>\r\n                        <div fxFlex=\"33.33%\" fxFlex.xs=\"100%\" class=\"full-width\">\r\n                            <mat-hint class=\"hintClass\">City*</mat-hint>\r\n                            <mat-card class=\"inputCard\">\r\n                                <mat-select id=\"forCity\" formControlName=\"city\">\r\n                                    <mat-option disabled>select---</mat-option>\r\n                                    <mat-option *ngFor=\"let City of arrayCity\" [value]=\"City.value1\">\r\n                                        {{City.value1}}\r\n                                    </mat-option>\r\n                                </mat-select>\r\n                            </mat-card>\r\n                            <mat-error *ngIf=\"item.get('city').touched && !item.get('city').valid\">\r\n                                City is Required!\r\n                            </mat-error>\r\n                        </div>\r\n                        <div fxFlex=\"33.33%\" fxFlex.xs=\"100%\" class=\"full-width\">\r\n                            <mat-hint class=\"hintClass\">Zip code*</mat-hint>\r\n                            <mat-card class=\"inputCard\">\r\n                                <input minlength=\"6\" (keypress)=\"_keyPress($event)\" placeholder=\"Zip Code\"\r\n                                    maxlength=\"10\" matInput id=\"forZipCode\" onlyNumber formControlName=\"zipCode\"\r\n                                    (keyup)=\"isAllSameDigit($event, i)\">\r\n                            </mat-card>\r\n                            <mat-error *ngIf=\"item.get('zipCode').touched && !item.get('zipCode').valid\r\n\t\t\t\t\t\t\t\t\t                && !item.controls['zipCode'].hasError('minLength')\">\r\n                                <small>Please enter valid Zip code</small>\r\n                            </mat-error>\r\n                            <mat-error *ngIf=\"isAllSameDigitVal && i==zipIndex\">\r\n                                <small>Please enter valid ZipCode!</small>\r\n                            </mat-error>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n                <h3 class=\"heading\" style=\"font-weight: 600;\">Email</h3>\r\n                <hr/>\r\n                <div fxLayout=\"row wrap\" class=\"full-width\">\r\n                <div fxFlex=\"33.33%\" fxFlex.xs=\"100%\" class=\"full-width\">\r\n                    <mat-hint class=\"hintClass\">Primary Email*</mat-hint>\r\n                    <mat-card class=\"inputCard\">\r\n                        <input matInput id=\"forPrimaryEmail\" formControlName=\"primaryEmail\" type=\"email\"\r\n                            pattern=\"^[^\\s@]+@[^\\s@]+\\.[^\\s@]{2,}$\">\r\n                    </mat-card>\r\n                    <mat-error\r\n                        *ngIf=\"updateContactInfoForm.get('primaryEmail').touched && !updateContactInfoForm.get('primaryEmail').valid\">\r\n                        Primary Email is Required!\r\n                    </mat-error>\r\n                </div>\r\n                <div fxFlex=\"33.33%\" fxFlex.xs=\"100%\" class=\"full-width\">\r\n                    <mat-hint class=\"hintClass\">Secondary Email</mat-hint>\r\n                    <mat-card class=\"inputCard\">\r\n                        <input matInput id=\"forSecondaryEmail\" formControlName=\"secondaryEmail\" type=\"email\"\r\n                            pattern=\"^[^\\s@]+@[^\\s@]+\\.[^\\s@]{2,}$\">\r\n                    </mat-card>\r\n                </div>\r\n            </div>\r\n            <h3 class=\"heading\" style=\"font-weight: 600;\">Contact Number</h3>\r\n            <hr/>\r\n            <div FxLayout=\"row wrap\" class=\"full-width\">\r\n                <div fxFlex=\"33.33%\" fxFlex.xs=\"100%\" class=\"full-width\">\r\n                    <mat-hint class=\"hintClass\">Mobile Number*</mat-hint>\r\n                    <mat-card class=\"inputCard\">\r\n                        <input matInput placeholder=\"Mobile Number\" formControlName=\"mobileNumber\"\r\n                            (keypress)=\"_keyPress($event)\" maxLength=\"10\" minlength=\"10\" onlyNumber required>\r\n                    </mat-card>\r\n                </div>\r\n                <div fxFlex=\"33.33%\" fxFlex.xs=\"100%\" class=\"full-width\">\r\n                    <mat-hint class=\"hintClass\">Landline Number</mat-hint>\r\n                    <mat-card class=\"inputCard\">\r\n                        <input matInput placeholder=\"Landline Number\" formControlName=\"landLine\"\r\n                            (keypress)=\"_keyPress($event)\" maxLength=\"10\" minLength=\"10\" onlyNumber>\r\n                    </mat-card>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </form>\r\n</mat-dialog-content>\r\n<div fxLayout=\"row\" fxLayoutAlign=\"end\" fxLayoutGap=\"20px\">\r\n    <button type=\"button\" class=\"editbtn\" mat-raised-button [disabled]=\"updateContactInfoForm.invalid\"\r\n        (click)=\"onSubmit(this.updateContactInfoForm.value)\">Save</button>\r\n    &nbsp;&nbsp;&nbsp;\r\n    <button type=\"button\" class=\"cancelbtn\" (click)=\"close()\">\r\n        Cancel\r\n    </button>\r\n</div>","import { Component, OnInit , Inject, ChangeDetectorRef} from '@angular/core';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { AppLoaderService } from 'app/shared/services/app-loader/app-loader.service';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { TasksummaryService } from '../../tasksummary.service';\r\n\r\n@Component({\r\n  selector: 'app-loan-offer-issue-details-update',\r\n  templateUrl: './loan-offer-issue-details-update.component.html',\r\n  styleUrls: ['./loan-offer-issue-details-update.component.scss']\r\n})\r\nexport class LoanOfferIssueDetailsUpdateComponent implements OnInit {\r\n  loanAccountId: any;\r\n  loanaccountID: any;\r\n  loanOfferIssueForm: FormGroup;\r\n  disbursementDetails: any;\r\n  offerIssueDetails: any;\r\n\r\n  statusArr: any = ['BACKLOG', 'ONGOING', 'APPROVED', 'REJECTED']\r\n  arr: any = ['BACKLOG', 'ONGOINGArr', 'APPROVEDArr', 'REJECTEDArr']\r\n  BACKLOGArr: any = [];\r\n  ONGOINGArr: any = [];\r\n  REJECTEDArr: any = [];\r\n  APPROVEDArr: any = [];\r\n  \r\n  BACKLOGTotalPages: number = 0\r\n  ONGOINGTotalPages: number = 0\r\n  REJECTEDTotalPages: number = 0\r\n  APPROVEDTotalPages: number = 0\r\n\r\n  BACKLOGCount: number = 0\r\n  ONGOINGCount: number = 0\r\n  REJECTEDCount: number = 0\r\n  APPROVEDCount: number = 0\r\n\r\n  BACKLOGImage: any[] = [];\r\n  ONGOINGImage: any[] = [];\r\n  REJECTEDImage: any[] = [];\r\n  APPROVEDImage: any[] = [];\r\n\r\n  BACKLOGTotalRecords: number = 0;\r\n  ONGOINGTotalRecords: number = 0;\r\n  REJECTEDTotalRecords: number = 0;\r\n  APPROVEDTotalRecords: number = 0;\r\n\r\n  BACKLOGPage: number = 0;\r\n  ONGOINGPage: number = 0;\r\n  REJECTEDPage: number = 0;\r\n  APPROVEDPage: number = 0\r\n  constructor(\r\n    private apiService: ApiService, @Inject(MAT_DIALOG_DATA) public data: any, private fb: FormBuilder,\r\n    private loader: AppLoaderService,private taskSumService: TasksummaryService, private cdr: ChangeDetectorRef,\r\n    private ls: LocalStoreService, public dialogRef: MatDialogRef<LoanOfferIssueDetailsUpdateComponent>, private snack: MatSnackBar\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.loanaccountID = this.data.loanAccountId;\r\n    console.log('loanaccountID', this.loanaccountID)\r\n    this.buildLoanOfferIssueForm(this.data)\r\n  }\r\n  _keyPress(event: any) {\r\n    // console.log(\"key\",event);\r\n    const pattern = /[0-9]/;\r\n    let inputChar = String.fromCharCode(event.charCode);\r\n    console.log(\"inputChar\",inputChar);\r\n    inputChar=inputChar.toString();\r\n    console.log(\"inputChar1\",inputChar);\r\n    inputChar=inputChar\r\n    if (!pattern.test(inputChar)) {\r\n        event.preventDefault();\r\n    }\r\n   }\r\n   buildLoanOfferIssueForm(data?) {\r\n    console.log('item',data)\r\n   \r\n     \r\n    this.loanOfferIssueForm= this.fb.group({\r\n        loanAccountId: [this.loanaccountID],\r\n        applicantName:[data ? data?.loanOfferIssueInfo?.applicantName:''],\r\n        interest: [data ? data?.loanOfferIssueInfo?.interest : ''],\r\n        rateOfInterest: [data ? data?.loanOfferIssueInfo?.rateOfInterest : ''],\r\n        principal:[data ? data?.loanOfferIssueInfo?.principal:''],\r\n        installmentType: [data ? data?.loanOfferIssueInfo?.installmentType: ''],\r\n        installmentFrequency:[data ? data?.loanOfferIssueInfo?.installmentFrequency:''],\r\n        approvedLoanAmount:[data ? data?.loanOfferIssueInfo?.approvedLoanAmount:''],\r\n        generateOffer: [data ? data?.loanOfferIssueInfo?.generateOffer : ''],\r\n        charges: [data ? data?.loanOfferIssueInfo?.charges : ''],\r\n        loanTenure: [data ? data?.loanOfferIssueInfo?.loanTenure: ''],\r\n        \r\n \r\n    });\r\n  }\r\n  getLoanOfferIssue() {\r\n \r\n    this.apiService.getOfferIssueDetails(this.loanaccountID).subscribe((offerIssueDetails) => {\r\n \r\n      this.offerIssueDetails = offerIssueDetails;\r\n      console.log(\"this.offerIssueDetails::\", this.offerIssueDetails);\r\n    \r\n\r\n      this.buildLoanOfferIssueForm(this.offerIssueDetails);\r\n      this.loanOfferIssueForm.value.applicantName = this.offerIssueDetails.applicantName;\r\n      this.loanOfferIssueForm.value.rateOfInterest = this.offerIssueDetails.rateOfInterest;\r\n      this.loanOfferIssueForm.value.installmentType = this.offerIssueDetails.installmentType;\r\n      this.loanOfferIssueForm.value.installmentFrequency = this.offerIssueDetails.installmentFrequency;\r\n      this.loanOfferIssueForm.value.generateOffer = this.offerIssueDetails.generateOffer;\r\n      this.loanOfferIssueForm.value.charges = this.offerIssueDetails.charges;\r\n      this.loanOfferIssueForm.value.loanTenure = this.offerIssueDetails.loanTenure;\r\n      this.loanOfferIssueForm.value.principal = this.offerIssueDetails.principal;\r\n      this.loanOfferIssueForm.value.interest = this.offerIssueDetails.interest;\r\n      this.loanOfferIssueForm.value.offerIssueDate = this.offerIssueDetails.offerIssueDate;\r\n      this.loanOfferIssueForm.value.approvedLoanAmount = this.offerIssueDetails.approvedLoanAmount\r\n\r\n    }, (err: any) => {\r\n      this.loader.close();\r\n    });\r\n  }\r\n\r\n  goToClose(): void {\r\n    this.dialogRef.close();\r\n    this.apiService.getOfferIssueDetails(this.loanaccountID).subscribe((offerIssueDetails: any) => {\r\n      console.log(\"All Account Service\", offerIssueDetails);\r\n      this.offerIssueDetails = offerIssueDetails;\r\n      //this.buildformGroup(this.loanAccountDetails);\r\n      console.log(\"this.accountDetails\", this.offerIssueDetails);\r\n      console.log('form',this.loanOfferIssueForm.value)\r\n    \r\n   });\r\n   \r\n  }\r\n  submitForm1(){\r\n    \r\n   \r\n\r\n    let payload={\r\n      // loanAccountId: this.showEditOption ? this.loanaccountID : null,\r\n      loanAccountId: this.data.loanAccountId,\r\n      applicantName: this.loanOfferIssueForm.value.applicantName,\r\n      charges:this.loanOfferIssueForm.value.charges,\r\n      rateOfInterest: this.loanOfferIssueForm.value.rateOfInterest,  \r\n      installmentType:this.loanOfferIssueForm.value.installmentType,\r\n      installmentFrequency:this.loanOfferIssueForm.value.installmentFrequency,\r\n      generateOffer: this.loanOfferIssueForm.value.generateOffer,\r\n      loanTenure: this.loanOfferIssueForm.value.loanTenure,\r\n      approvedLoanAmount: this.loanOfferIssueForm.value.approvedLoanAmount,\r\n      principal: this.loanOfferIssueForm.value.principal,\r\n      interest: this.loanOfferIssueForm.value.interest,\r\n      offerIssueDate: this.loanOfferIssueForm.value.offerIssueDate\r\n  \r\n    }\r\n    console.log(\"payload\",payload)\r\n    this.apiService.upsertOfferIssue(payload).subscribe(data => {\r\n    console.log(\"data\",data.loanAccountId);\r\n   \r\n\r\n      this.loanaccountID = this.data.loanAccountId;\r\n      console.log('loanaccountID', this.loanaccountID)\r\n      \r\n      this.assign(this.data.loanAccountId)\r\n      if (data === 200 || data !== null) {\r\n        let statusModel = {\r\n          loanAccountId: this.data.loanAccountId,\r\n          status: \"ONGOING\"\r\n        };\r\n        this.apiService.updateLoanDetailsStatus(statusModel).subscribe(data => {\r\n        });\r\n      //  sessionStorage.setItem('loanAccountId', data.loanAccountid);\r\n        let fundStatus = {\r\n          loanAccountid: this.data.loanAccountId\r\n          \r\n        };\r\n       \r\n\r\n        this.ls.setItem('fundByStatus', fundStatus);\r\n        this.ls.setItem('accountType', data.accountType);\r\n        this.ls.setItem('productName',data.businessProductName);\r\n   \r\n        \r\n    this.loanaccountID = this.data.loanAccountId;\r\n    console.log(\"this.productaccountID\",this.loanaccountID);\r\n        this.snack.open('Data Updated!', 'OK', {\r\n          duration: 4000,\r\n          verticalPosition: 'top',\r\n          horizontalPosition: 'right'\r\n        });\r\n        this.getDataOnLoad();\r\n      }\r\n      if( data === 500){\r\n        this.snack.open('Not able to connect to server!', 'INTERNAL SERVER ERROR', {\r\n          duration: 4000,\r\n          verticalPosition: 'top',\r\n          horizontalPosition: 'right'\r\n        });\r\n        console.log(\"500 error\")\r\n      }\r\n      \r\n      this.goToClose();\r\n    })\r\n  }\r\n  assign(valueForaccId) {\r\n    this.apiService.setAccountId({\r\n      loanAccountId: valueForaccId\r\n    });\r\n    console.log(\"loan\", this.loanAccountId)\r\n  }\r\n    \r\n  async getDataOnLoad() {\r\n    for (let index = 0; index < this.statusArr.length; index++) {\r\n      const statusItem = this.statusArr[index];\r\n      this.fetchCustomerInfo(statusItem);\r\n    }\r\n\r\n  }\r\n\r\n   fetchCustomerInfo(status:string){\r\n   \r\n    this.taskSumService.getallLoanAccountData(status)\r\n            .subscribe((custResp:any) => {\r\n              console.log(\"Response\", custResp);\r\n              this.updateStatusResponse(status, custResp);\r\n            });\r\n  }\r\n\r\n  updateStatusResponse(status, data){\r\n    console.log(\"data\", data)\r\n    console.log(\"status\", status)\r\n      if (status == 'ONGOING') {\r\n      this.ONGOINGArr = data?.loanList;\r\n      this.ONGOINGTotalPages = data?.totalPages;\r\n      this.ONGOINGTotalRecords = data?.totalNoOfElements;\r\n    }\r\n \r\n\r\n    this.cdr.markForCheck();\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","<div >\r\n    <mat-dialog-content>\r\n      <div fxLayout=\"row\" class=\"contain\">\r\n        <mat-icon style=\"padding-left: 100%;\"class=\"backIcon\" (click)=\"goToClose()\">close</mat-icon>\r\n    </div>\r\n      <h1>Loan Offer Issue Details</h1>\r\n      <form class=\"mt-32\" [formGroup]=\"loanOfferIssueForm\">\r\n        <div fxLayout=\"row wrap\" fxLayout.lt-sm=\"column\" >\r\n          <div fxFlex=\"33.33\" class=\"pr-16\">\r\n            <mat-label>Applicant Name </mat-label>\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n              <input matInput name=\"applicantName\" formControlName=\"applicantName\"/>\r\n            </mat-form-field>\r\n          </div>\r\n    \r\n          <div fxFlex=\"33.33\" class=\"pr-16\">\r\n            <mat-label>Approved Loan Amount</mat-label>\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                <input matInput name=\"approvedLoanAmount\" formControlName=\"approvedLoanAmount\"  \r\n                maxlength=\"6\" (keypress)=\"_keyPress($event)\"/>\r\n            </mat-form-field>\r\n          </div>\r\n          <div fxFlex=\"33.33\" class=\"pr-16\">\r\n            <mat-label>Charges</mat-label>\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                <input matInput name=\"charges\" formControlName=\"charges\"  \r\n                maxlength=\"6\" (keypress)=\"_keyPress($event)\"  />\r\n            </mat-form-field>\r\n          </div>\r\n        </div>\r\n    \r\n        <div fxLayout=\"row wrap\"> \r\n          <div fxFlex=\"33.33\" class=\"pr-16\">\r\n            <mat-label>Generate Offer</mat-label>\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n              <mat-select placeholder=\"Generate Offer\" formControlName=\"generateOffer\">\r\n                <mat-option value=\"\">Select</mat-option>\r\n                <mat-option value=\"With Schedule\">With Schedule</mat-option>\r\n                <mat-option value=\"Without Schedule\">Without Schedule </mat-option>\r\n              </mat-select>\r\n            </mat-form-field>\r\n          </div>\r\n          <div fxFlex=\"33.33\" class=\"pr-16\">\r\n            <mat-label>Rate Of Interest </mat-label>\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n              <input matInput name=\"rateOfInterest\" formControlName=\"rateOfInterest\" \r\n               (keypress)=\"_keyPress($event)\"\r\n              />\r\n            </mat-form-field>\r\n          </div>\r\n          <div fxFlex=\"33.33\" class=\"pr-16\">\r\n            <mat-label>Installment frequency</mat-label>\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n              <input matInput name=\"installmentFrequency\" formControlName=\"installmentFrequency\" \r\n               (keypress)=\"_keyPress($event)\"\r\n              />\r\n            </mat-form-field>\r\n          </div>\r\n        </div>\r\n        <div fxLayout=\"row wrap\">\r\n          <div fxFlex=\"33.33\" class=\"pr-16\">\r\n            <mat-label>Installment Type</mat-label>\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n              <input matInput name=\"installmentType\" formControlName=\"installmentType\"  \r\n              (keypress)=\"_keyPress($event)\" /> \r\n            </mat-form-field>\r\n          </div>\r\n\r\n          <div fxFlex=\"33.33\" class=\"pr-16\">\r\n            <mat-label>Interest</mat-label>\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n               <input matInput name=\"interest\" formControlName=\"interest\" \r\n               (keypress)=\"_keyPress($event)\" /> \r\n            </mat-form-field>\r\n          </div>\r\n\r\n          <div fxFlex=\"33.33\" class=\"pr-16\">\r\n            <mat-label>Loan Tenure</mat-label>\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n              <input matInput name=\"loanTenure\" formControlName=\"loanTenure\"  maxlength=\"10\"\r\n              (keypress)=\"_keyPress($event)\" />\r\n            </mat-form-field>\r\n          </div>\r\n       \r\n        </div>\r\n  \r\n        <div fxLayout=\"row wrap\">\r\n            <div fxFlex=\"33.33\" class=\"pr-16\">\r\n              <mat-label>Principal</mat-label>\r\n              <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                <input matInput name=\"principal\" formControlName=\"principal\"  \r\n                maxlength=\"10\"\r\n                (keypress)=\"_keyPress($event)\"/>\r\n              </mat-form-field>\r\n            </div>\r\n            <div fxFlex=\"33.33\" class=\"pr-16\">\r\n              <mat-label>Offer Issue Date</mat-label>\r\n              <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n    \r\n                <input matInput [matDatepicker]=\"pickerDOB\" name=\"offerIssueDate\" formControlName=\"offerIssueDate\">\r\n                    <mat-datepicker-toggle matSuffix [for]=\"pickerDOB\"></mat-datepicker-toggle>\r\n                    <mat-datepicker #pickerDOB></mat-datepicker>   \r\n              </mat-form-field>\r\n            </div>\r\n           \r\n            </div>\r\n       \r\n      </form>\r\n    </mat-dialog-content>\r\n    <mat-dialog-actions align=\"end\">\r\n      <button mat-button (click)=\"submitForm1()\">\r\n        Update\r\n      </button>\r\n      <button mat-button (click)=\"goToClose()\">Close</button>\r\n    </mat-dialog-actions>\r\n</div>","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\n\r\n@Component({\r\n  selector: 'app-card-preference-details-update',\r\n  templateUrl: './card-preference-details-update.component.html',\r\n  styleUrls: ['./card-preference-details-update.component.scss']\r\n})\r\nexport class CardPreferenceDetailsUpdateComponent implements OnInit {\r\n  cardPrefrenceUpdateForm:FormGroup;\r\n  arraylimitType=[\"Domestic Limit\",\"International Limit\",\"Daily Limit\",\"ATM limit\",\"POS Limit\",\"Internet Limit\"];\r\n  isdailylimit: boolean;\r\n  islimitType: boolean;\r\n  isLimitTransaction: boolean;\r\n  isLPTReadOnly: boolean;\r\n  selectedOptions2: any;\r\n  isRowEnds: boolean;\r\n  limitDaily: any;\r\n  isGreaterValue: boolean;\r\n  limiPrTrn: any;\r\n  cardPrefrenceOnLoad: any;\r\n  isDLReadOnly: boolean;\r\n  selectedDocumentTypes2: any;\r\n\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public data,\r\n    public dialogRef: MatDialogRef<CardPreferenceDetailsUpdateComponent>,\r\n    private fb:FormBuilder,\r\n    private apiService:ApiService,\r\n    public snack:MatSnackBar\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    console.log(this.data);\r\n    this.buildcardPrefrenceUpdateForm();\r\n    if(this.data.preferanceInfo){\r\n      this.cardPrefrenceOnLoad = this.data.preferanceInfo;\r\n        this.isdailylimit=true;\r\n        this.isLimitTransaction=true;\r\n        this.buildcardPrefrenceUpdateForm(this.data.preferanceInfo,true)\r\n      for(let i=0; i<=this.cardPrefrenceOnLoad.length-1;i++){\r\n        this.selectedOptions2.push(this.cardPrefrenceOnLoad[i].limitType);\r\n      }\r\n      this.isRowEnds = true\r\n      console.log(\"All Transaction Details\", this.data);\r\n       \r\n    }\r\n    else{\r\n      this.buildcardPrefrenceUpdateForm();\r\n    }\r\n   \r\n  }\r\n\r\n  buildcardPrefrenceUpdateForm(data?, isResponse?:boolean) {\r\n    this.cardPrefrenceUpdateForm = this.fb.group({\r\n      cardPrefrences: this.fb.array([this.addMFormGroup()])\r\n    });\r\n    if(isResponse){\r\n      this.addMandateToFormGroup(data);\r\n      console.log(data);\r\n      for(let i=0;i<=data.length-1;i++){\r\n        data[i].dailyLimit=this.addComa(data[i].dailyLimit);\r\n        data[i].limitPerTransaction=this.addComa(data[i].limitPerTransaction);\r\n      }\r\n      this.m.patchValue(data);\r\n    }\r\n  }\r\n  addMFormGroup(): FormGroup {\r\n    \r\n    return this.fb.group({\r\n      preferenceId:[''],\r\n      limitType: [''],\r\n      dailyLimit: ['',[ Validators.maxLength(18),Validators.pattern(\"^[0-9]{10,12}$\")]],\r\n      limitPerTransaction: ['', [ Validators.maxLength(18),Validators.pattern(\"^[0-9]{10,12}$\")]],\r\n    });\r\n    \r\n  }\r\n  addMandateToFormGroup(data?) {\r\n    const numberOfItems = data.length;\r\n    for (let index = 1; index < numberOfItems; index++) {\r\n      this.m.push(this.fb.group({\r\n        preferenceId:[''],\r\n        limitType: [''],\r\n      dailyLimit: [''],\r\n      limitPerTransaction: [''],\r\n      }));\r\n    }\r\n    this.isdailylimit=true;\r\n  }\r\n  addComa(num1){\r\n    let finalNum = num1.toString().replace(/,/g, '').split(\".\");\r\n    finalNum[0] = finalNum[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\r\n    let final = finalNum.join(\".\");\r\n    return final;\r\n\r\n  }\r\n\r\n  addMandate(){\r\n    this.isdailylimit=false;\r\n    this.islimitType=false;\r\n    this.isLimitTransaction=false;\r\n    this.isLPTReadOnly=true;\r\n    this.isLPTReadOnly=true;\r\n console.log(\"this.selectedOptions2\",this.selectedOptions2);\r\nthis.m.push(this.fb.group({\r\n limitType: [''],\r\n dailyLimit: [''],\r\n limitPerTransaction: [''],\r\n}));\r\n  }\r\n\r\n  onSubmit(){\r\n    var data :any;\r\n   var payload:any[]=[];\r\n   this.cardPrefrenceUpdateForm.value.cardPrefrences.cardId=this.data.cardId;\r\n  //  if(this.cardPrefrenceOnLoad){\r\n  //   for(let i =this.cardPrefrenceOnLoad.length;i<=this.cardPrefrenceUpdateForm.value.cardPrefrences.length-1;i++){\r\n  //     data=this.cardPrefrenceUpdateForm.value.cardPrefrences[i];\r\n  //     let newTransaction=Object.assign({},data,{cardId: this.data.cardId});\r\n  //     newTransaction.dailyLimit=parseInt(this.removeComma(newTransaction.dailyLimit));\r\n  //     newTransaction.limitPerTransaction=parseInt(this.removeComma(newTransaction.limitPerTransaction));\r\n  //     payload.push(newTransaction);\r\n      \r\n  //   }\r\n  //  }else{\r\n    for(let i =0;i<this.cardPrefrenceUpdateForm.value.cardPrefrences.length;i++){\r\n      data=this.cardPrefrenceUpdateForm.value.cardPrefrences[i];\r\n      let newTransaction=Object.assign({},data,{cardId: this.data.cardId});\r\n      newTransaction.dailyLimit=parseInt(this.removeComma(newTransaction.dailyLimit));\r\n      newTransaction.limitPerTransaction=parseInt(this.removeComma(newTransaction.limitPerTransaction));\r\n      payload.push(newTransaction);\r\n      \r\n    }\r\n  //  }\r\n    \r\n    this.apiService.uploadCardPrefrence(payload).subscribe(data => {\r\n      console.log(\"data\", data);\r\n      if (data != null) {\r\n        this.snack.open('Card Preferences Details Saved!', 'OK', {\r\n          duration: 4000,\r\n          verticalPosition: 'top',\r\n          horizontalPosition: 'right'\r\n        });\r\n        let statusModel = {\r\n          cardId: this.data.cardId,\r\n          status: \"BACKLOG\"\r\n        };\r\n        this.apiService.updateCardStatus(statusModel).subscribe(data => {\r\n          this.dialogRef.close({\r\n            status: data.status\r\n           });\r\n        });\r\n      }\r\n    }, err => {\r\n      this.snack.open('Error Unable to Update Data!', 'OK', {\r\n        duration: 4000,\r\n        verticalPosition: 'top',\r\n        horizontalPosition: 'right'\r\n      });\r\n    }\r\n    );\r\n    \r\n  }\r\n\r\n  onclick1(k){\r\n    this.islimitType=true;\r\n    this.isLimitTransaction=true;\r\n    this.isdailylimit=true;\r\n    this.isRowEnds=false;\r\n    this.isLPTReadOnly=false;\r\n    this.isLPTReadOnly=false;\r\n    const control = <FormArray>this.cardPrefrenceUpdateForm.controls['cardPrefrences'];\r\n    control.removeAt(k);\r\n    if(this.cardPrefrenceOnLoad==undefined){\r\n      console.log(\"deleted\")\r\n    }\r\n    else if(this.cardPrefrenceOnLoad[k]!=undefined){\r\n    let id = this.cardPrefrenceOnLoad[k].preferenceId;\r\n    this.apiService.deleteCardPrefrence(id)\r\n    .subscribe(data => { \r\n      \r\n    },\r\n    \r\n      err=>{\r\n        if (err.status == 200) {\r\n          this.snack.open('Record Deleted Successfully', 'OK', {\r\n            duration: 4000,\r\n            verticalPosition: 'top',\r\n            horizontalPosition: 'right'\r\n          });\r\n        }\r\n\r\n\r\n    }\r\n    )}\r\n\r\n      this.selectedOptions2.splice(k,1);\r\n      console.log(\"console.log(this.selectedOptions2);\",this.selectedOptions2);\r\n      this.isdailylimit=true;\r\n   \r\n  }\r\n\r\n  get f() { return this.cardPrefrenceUpdateForm.controls; }\r\n  get m() { return this.f.cardPrefrences as FormArray; }\r\n\r\n  close(){\r\n    this.dialogRef.close({\r\n      status:\"ONGOING\"\r\n    })\r\n  }\r\n  changeValue2(event:any, i) {\r\n    this.islimitType=true;\r\n    if (this.selectedDocumentTypes2[i]) {\r\n      this.selectedOptions2 = this.selectedOptions2.filter(\r\n        (val) => val !== this.selectedDocumentTypes2[i]\r\n      );\r\n    }\r\n    \r\n    this.selectedDocumentTypes2[i] = event;\r\n    this.selectedOptions2.push(event);\r\n    if(this.selectedDocumentTypes2.length==this.arraylimitType.length){\r\n      this.isRowEnds=true;\r\n     \r\n      console.log(\"isRowends\",this.isRowEnds);\r\n    }\r\n    else{\r\n      this.isRowEnds=false;\r\n      console.log(\"isRowends\",this.isRowEnds);\r\n    }\r\n    this.isDLReadOnly=false\r\n  }\r\n  _keyPress(event: any) {\r\n    console.log(this.cardPrefrenceUpdateForm);\r\n    \r\n    const pattern = /[0-9]/;\r\n    let inputChar = String.fromCharCode(event.charCode);\r\n    if (!pattern.test(inputChar)) {\r\n        event.preventDefault();\r\n    }\r\n    this.isdailylimit=true;\r\n    this.isLPTReadOnly=false\r\n   }\r\n   keyPress(event: any) {\r\n    const pattern = /[0-9]/;\r\n    let inputChar = String.fromCharCode(event.charCode);\r\n    if (!pattern.test(inputChar)) {\r\n        event.preventDefault();\r\n    }\r\n    this.isLimitTransaction=true;\r\n   }\r\n   OnInput(event: any, flag,k) {\r\n      this.limiPrTrn = event.target.value;\r\n      var dailyNum=this.removeComma(this.cardPrefrenceUpdateForm.value.cardPrefrences[k].dailyLimit);\r\n      var LimitTxn=this.removeComma(this.limiPrTrn);\r\n      if(!this.limiPrTrn){\r\n        this.isLimitTransaction=false;\r\n      }else{\r\n        this.isLimitTransaction=true;\r\n      }\r\n    \r\n    if( Number(LimitTxn) > Number(dailyNum)){\r\n      this.isGreaterValue=true;\r\n    }\r\n    else if( Number(LimitTxn) < Number(dailyNum)){\r\n      this.isGreaterValue=false;\r\n    }\r\n    else{\r\n      this.isGreaterValue=false;\r\n    }\r\n    let payload={\r\n      limitPerTransaction:this.addComa(this.limiPrTrn)\r\n    }\r\n    this.m.controls[k].patchValue(payload);\r\n\r\n  }\r\n  \r\n  OnInput1(event: any, flag,k) {\r\n      this.limitDaily = event.target.value;\r\n      if(!this.limitDaily){\r\n        this.isdailylimit=false;\r\n      }else{\r\n        this.isdailylimit=true;\r\n      }\r\n      let payload=\r\n      {\r\n        dailyLimit:this.addComa(this.limitDaily)\r\n      }\r\n      this.m.controls[k].patchValue(payload);\r\n  }\r\n  \r\n  removeComma(num:any){\r\n    var numb =num.replace(/,/g, \"\");\r\n    console.log(\"numb\",numb)\r\n    return numb;\r\n\r\n  }\r\n}\r\n","\r\n<div fxLayout=\"row\" fxLayoutAlign=\"end\" class=\"contain\">\r\n    <mat-icon class=\"closeIcon\" (click)=\"close()\">close</mat-icon>\r\n</div>\r\n<h1 mat-dialog-title>Card Preferences</h1>\r\n\r\n<mat-dialog-content>\r\n    <mat-card>\r\n        <form [formGroup]=\"cardPrefrenceUpdateForm\" >\r\n            <div class=\"table-container\">\r\n            <table class=\"table\">\r\n             <thead>\r\n                 <tr>\r\n                     <th>Limit Type</th>\r\n                     <th>Daily Limit</th>\r\n                     <th>Limit per transaction</th>\r\n                 </tr>\r\n             </thead>\r\n             <tbody >\r\n                <tr [formGroup]=\"cardPrefrence\" *ngFor=\"let cardPrefrence of m.controls; let k = index;\">\r\n                    <td style=\"width: 5cm;\">\r\n                   <mat-select class=\"inputMatcard1\" formControlName=\"limitType\" placeholder=\"Select Type\" name=\"limitType\"  (valueChange)=\"changeValue2($event, k)\">\r\n                     <mat-option *ngFor=\"let limitType of arraylimitType\" [value]=\"limitType\"  >\r\n                      {{limitType}}\r\n                     </mat-option>\r\n                    </mat-select>\r\n                    </td>\r\n                    <td>\r\n                        <div>\r\n                            <input type=\"text\" class=\"alignment\" maxlength=\"18\"   formControlName=\"dailyLimit\" (keyup)=\"OnInput1($event,true,k)\"  [readonly]=\"isDLReadOnly\" (keypress)=_keyPress($event) >\r\n                        </div>\r\n                    </td>\r\n                    <td>\r\n                        <div>\r\n                            <input type=\"text\" class=\"alignment\" maxlength=\"18\"   formControlName=\"limitPerTransaction\" (keyup)=\"OnInput($event,true,k)\" [readonly]=\"isLPTReadOnly\" \r\n                            (keypress)=keyPress($event) >\r\n                        </div>\r\n                    </td>\r\n                    <td class=\"deletebutton\">\r\n                        <div >\r\n                              <button mat-icon-button mat-sm-button color=\"warn\" (click)=\"onclick1(k)\">\r\n                                <mat-icon>delete</mat-icon>\r\n                              </button>\r\n                        </div>\r\n                    </td>       \r\n                </tr>               \r\n            </tbody>\r\n        </table>\r\n        </div>\r\n        <div fxLayout=\"row\" fxLayoutGap=\"335px\">\r\n   <button mat-button color=\"primary\" [disabled]=\"!(isdailylimit && isLimitTransaction && islimitType && !isRowEnds) || isGreaterValue\"   (click)=\"addMandate()\" ><mat-icon>add</mat-icon> </button>\r\n   <mat-error *ngIf=\"isGreaterValue\" >\r\n     <small >Limit per transaction should be less </small><br>\r\n     <small>than daily limit</small>\r\n   </mat-error>\r\n </div>\r\n    </form>\r\n    </mat-card>\r\n\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"end\" fxLayoutGap=\"20px\">\r\n        <button type=\"button\" class=\"editbtn\" \r\n        [disabled]=\"!(isdailylimit && isLimitTransaction || islimitType) || isGreaterValue || m.controls.length==0\"  (click)=\"onSubmit()\" \r\n        >Save</button> \r\n                      &nbsp;&nbsp;&nbsp;\r\n                      <button type=\"button\" class=\"cancelbtn\" (click)=\"close()\">\r\n                           Cancel\r\n                      </button>\r\n    </div>\r\n</mat-dialog-content>\r\n\r\n\r\n     \r\n     \r\n \r\n  \r\n \r\n \r\n \r\n <!-- <div style=\"margin-left: 20cm;\">\r\n     \r\n     <button mat-raised-button type=\"button\" color=\"primary\"\r\n     [disabled]=\"!(isdailylimit && isLimitTransaction)\"  (click)=\"onSubmit()\" >Next </button>\r\n </div> -->\r\n<!--  \r\n <div\r\n fxLayout=\"row\"\r\n fxLayoutAlign=\"space-between center\"\r\n fxLayoutGap=\"16px\"\r\n class=\"mt-32\"\r\n >\r\n <button mat-button rounded color=\"primary\"  (click)=\"goBack()\" >\r\n   Back\r\n </button>\r\n <button mat-raised-button type=\"button\" color=\"primary\"\r\n     [disabled]=\"!(isdailylimit && isLimitTransaction && islimitType) || isGreaterValue || m.controls.length==0\"  (click)=\"onSubmit()\" >Next </button>\r\n </div>  \r\n \r\n </div>\r\n </form> -->\r\n ","import { ChangeDetectorRef, Component, Inject, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\n\r\n@Component({\r\n  selector: 'app-card-assessment-report-update',\r\n  templateUrl: './card-assessment-report-update.component.html',\r\n  styleUrls: ['./card-assessment-report-update.component.scss']\r\n})\r\nexport class CardAssessmentReportUpdateComponent implements OnInit {\r\n  cardAssessmentUpdateForm:FormGroup;\r\n  arraySystemRecommendation = [\r\n    'Recomended For Approval',\r\n    'Recommended For Reject',\r\n  ];\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public data,\r\n    private fb: FormBuilder,\r\n    public dialogRef: MatDialogRef<CardAssessmentReportUpdateComponent>,\r\n    private apiService: ApiService,\r\n    public snack: MatSnackBar,\r\n    private cdr: ChangeDetectorRef\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    if(this.data.assessmentInfo){\r\n      this.buildAssessmentForm(this.data.assessmentInfo);\r\n    }\r\n    else{\r\n      this.buildAssessmentForm();\r\n    }\r\n  }\r\n  buildAssessmentForm(item?) {\r\n    this.cardAssessmentUpdateForm = this.fb.group({\r\n      cardId: [this.data.cardId],\r\n      assessmentId: [(item.assessmentId = '1')],\r\n      requestedCardLimit: [item ? item.requestedCardLimit : ''],\r\n      systemRecommendation: [item ? item.systemRecommendation : '' ,Validators.required],\r\n      approvedCardLimit: [item?item.approvedCardLimit : ''],\r\n      userRecommendation: [item ? item.userRecommendation : '',[Validators.required],],\r\n      recommendedCardLimit: [item ? item.recommendedCardLimit : '',[Validators.required],],\r\n      remark: [item ? item.remark : ''],\r\n    });\r\n  }\r\n  close(){\r\n    this.dialogRef.close({\r\n      status:\"ONGOING\"\r\n    })\r\n  }\r\n  _keyPress1(event: any) {\r\n    const pattern = /^[0-9]*\\.?[0-9]*$/;\r\n    let inputChar = String.fromCharCode(event.charCode);\r\n    if (!pattern.test(inputChar)) {\r\n      event.preventDefault();\r\n    }\r\n    const input = event.target.value;\r\n    if (input.length === 0 && event.which === 48) {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n  onSubmit(){\r\n    console.log(this.cardAssessmentUpdateForm);\r\n    \r\n    this.apiService.cardAssessmentDetails(this.cardAssessmentUpdateForm.value).subscribe((data) => {\r\n      console.log('data', data);\r\n      if (data != null) {\r\n        this.snack.open('Assessment details Updated successfully!', 'OK', {\r\n          duration: 4000,\r\n          verticalPosition: 'top',\r\n          horizontalPosition: 'right',\r\n        });\r\n        let statusModel = {\r\n          cardId: data.cardId,\r\n          status: \"BACKLOG\"\r\n        };\r\n        this.apiService.updateCardStatus(statusModel).subscribe(data => {\r\n          this.dialogRef.close({\r\n            status: data.status\r\n           });\r\n        });\r\n      } err => {\r\n        this.snack.open('Error Unable to Update Data!', 'OK', {\r\n          duration: 4000,\r\n          verticalPosition: 'top',\r\n          horizontalPosition: 'right'\r\n        });\r\n      \r\n       \r\n      }\r\n    });\r\n  }\r\n}\r\n","<div fxLayout=\"row\" fxLayoutAlign=\"end\" class=\"contain\">\r\n    <mat-icon class=\"closeIcon\" (click)=\"close()\">close</mat-icon>\r\n</div>\r\n\r\n<h1 mat-dialog-title>Assessment Details</h1>\r\n\r\n<mat-dialog-content>\r\n    <mat-card>\r\n    <form [formGroup]=\"cardAssessmentUpdateForm\">\r\n        <div fxLayout=\"row\" fxLayoutGap=\"25px\" >\r\n<mat-form-field fxFlex=\"33.33%\" appearance=\"outline\" >\r\n    <mat-label>Requested Card Limit</mat-label>\r\n    <input  matInput formControlName=\"requestedCardLimit\" (keypress)=\"_keyPress1($event)\" placeholder=\"Requested Card Limit\" readonly/>\r\n</mat-form-field>\r\n<mat-form-field fxFlex=\"33.33%\" appearance=\"outline\" >\r\n    <mat-label>System Recommendation</mat-label>\r\n    <mat-select formControlName=\"systemRecommendation\"placeholder=\"Recommended for Approval\">\r\n                      <mat-option *ngFor=\"let systemRecommendation of arraySystemRecommendation\" [value]=\"systemRecommendation\">\r\n                        {{ systemRecommendation }}\r\n                      </mat-option>\r\n                    </mat-select>\r\n\r\n</mat-form-field>\r\n<mat-form-field fxFlex=\"33.33%\" appearance=\"outline\" >\r\n    <mat-label>User Recommendation</mat-label>\r\n    <mat-select formControlName=\"userRecommendation\" placeholder=\"Recommended for Approval\">\r\n    <mat-option *ngFor=\"let systemRecommendation of arraySystemRecommendation\" [value]=\"systemRecommendation\">\r\n      {{ systemRecommendation }}\r\n    </mat-option>\r\n  </mat-select>\r\n  <!-- <mat-error *ngIf=\"!cardAssessmentUpdateForm.get('userRecommendation').valid && cardAssessmentUpdateForm.get('userRecommendation').touched\"></mat-error> -->\r\n</mat-form-field>\r\n\r\n        </div>\r\n        <div fxLayout=\"row\" fxLayoutGap=\"25px\">\r\n            <mat-form-field fxFlex=\"33.33%\" appearance=\"outline\" >\r\n<mat-label>Recommended Card Limit</mat-label>\r\n<input matInput formControlName=\"recommendedCardLimit\" (keypress)=\"_keyPress1($event)\"  required />\r\n            </mat-form-field>\r\n            <mat-form-field fxFlex=\"33.33%\" appearance=\"outline\" >\r\n<mat-label>Approved Card Limit</mat-label>\r\n<input matInput formControlName=\"approvedCardLimit\" (keypress)=\"_keyPress1($event)\"  placeholder=\"Approved Card Limit\" readonly required />\r\n            </mat-form-field>\r\n            <mat-form-field fxFlex=\"33.33%\" appearance=\"outline\" >\r\n                <mat-label>Remarks</mat-label>\r\n                <input matInput formControlName=\"remark\"  type=\"text\"/>\r\n            </mat-form-field>\r\n        </div>\r\n\r\n    </form>\r\n    </mat-card>\r\n</mat-dialog-content>\r\n<div fxLayout=\"row\" fxLayoutAlign=\"end\" fxLayoutGap=\"20px\">\r\n  <button type=\"button\" class=\"editbtn\" \r\n  (click)=\"onSubmit()\" [disabled]=\"cardAssessmentUpdateForm.invalid\">Save</button> \r\n                &nbsp;&nbsp;&nbsp;\r\n                <button type=\"button\" class=\"cancelbtn\" (click)=\"close()\">\r\n                     Cancel\r\n                </button>\r\n</div>\r\n\r\n  \r\n    \r\n  \r\n       \r\n                \r\n  \r\n                  \r\n                    \r\n            ","<div >\r\n    <mat-dialog-content>\r\n      <div fxLayout=\"row\" class=\"contain\">\r\n        <mat-icon style=\"padding-left: 100%;\"class=\"backIcon\" (click)=\"goToClose()\">close</mat-icon>\r\n    </div>\r\n      <h1>Loan Approval Details</h1>\r\n      <form class=\"mt-32\" [formGroup]=\"loanApprovalForm\">\r\n        <div fxLayout=\"row wrap\" fxLayout.lt-sm=\"column\">\r\n          <div fxFlex=\"33.33\" class=\"pr-16\">\r\n            <mat-label>Applicant Name </mat-label>\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n              <input matInput name=\"applicantName\" formControlName=\"applicantName\"  \r\n               />\r\n            </mat-form-field>\r\n          </div>\r\n\r\n          <div fxFlex=\"33.33\" class=\"pr-16\">\r\n            <mat-label>Loan Tenure</mat-label>\r\n            <div class=\"pb-1\">\r\n                  <div fxLayout=\"row\" fxLayoutGap=\"5px\" fxLayoutAlign=\"space-between center\" >\r\n                  <div >\r\n                    <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                      <mat-select name=\"year\" placeholder=\"Year\" formControlName=\"year\"  >\r\n                      <mat-option *ngFor=\"let year of years\" [value]=\"year\">{{ year }}</mat-option> \r\n                      </mat-select>\r\n                   </mat-form-field> \r\n                  </div>\r\n    \r\n                  <div>\r\n                    <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                      <mat-select name=\"month\" placeholder=\"Month\" formControlName=\"month\" >\r\n                      <mat-option *ngFor=\"let month of months\" [value]=\"month\">{{ month }}</mat-option> \r\n                       </mat-select>\r\n                    </mat-form-field>\r\n                  </div>\r\n    \r\n                  <div>\r\n                    <mat-form-field class=\"full-width\"  appearance=\"fill\">\r\n                      <mat-select name=\"day\"  placeholder=\"Day\" formControlName=\"day\"  >\r\n                      <mat-option *ngFor=\"let day of days\" [value]=\"day\">{{ day }}</mat-option> \r\n                    </mat-select>\r\n                  </mat-form-field>\r\n                  </div>  \r\n                </div>\r\n            </div>\r\n          </div>\r\n          <div fxFlex=\"33.33\" class=\"pr-16\">\r\n    \r\n          </div>\r\n\r\n\r\n    \r\n        </div>\r\n    \r\n       \r\n        <div fxLayout=\"row wrap\">\r\n\r\n            <div fxFlex=\"33.33\" class=\"pr-16\">\r\n                <mat-label>Account Branch </mat-label>\r\n                <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                    <!-- <mat-select name=\"account_branch\" formControlName=\"accountBranch\" (selectionChange)=\"onChangeBranch($event)\">\r\n                        <mat-option *ngFor=\"let branch of arrayAccountBranch\" [value]=\"branch.branchName\"> \r\n                          {{branch.branchName}} \r\n                        </mat-option> \r\n                      </mat-select> -->\r\n                      <mat-select name=\"mod\" formControlName=\"accountBranch\" (selectionChange)=\"onChangeBranch($event)\">\r\n                        <mat-option  *ngFor=\"let array of screenArray\"\r\n                        [value]=\"array.branchName\">{{array.branchName}}</mat-option>    \r\n                      </mat-select>\r\n                </mat-form-field>\r\n              </div>\r\n        \r\n              <div fxFlex=\"33.33\" class=\"pr-16\">\r\n                <mat-label>Account Type</mat-label>\r\n                <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                    <!-- <mat-select name=\"accountType\" placeholder=\"Account Type\" formControlName=\"accountType\" >\r\n                        <mat-option *ngFor=\"let arrayAccountType of arrayAccountType\" [value]=\"arrayAccountType\" > \r\n                          {{arrayAccountType}} \r\n                        </mat-option> \r\n                      </mat-select> -->\r\n                      <input matInput name=\"accountType\"  class=\"alignment\"\r\n                      formControlName=\"accountType\"  [readonly]=\"true\"/>\r\n                </mat-form-field>\r\n              </div>\r\n         \r\n          <div fxFlex=\"33.33\" class=\"pr-16\">\r\n            <mat-label>Product Name</mat-label>\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                <mat-select name=\"account_branch\" formControlName=\"productName\" (selectionChange)=\"getAccountType($event.value)\">\r\n                    <mat-option *ngFor=\"let productName of arrayAccountBranch\" [value]=\"productName\"> \r\n                     {{productName}} \r\n                    </mat-option> \r\n                 </mat-select>\r\n            </mat-form-field>\r\n          </div>\r\n          </div>\r\n          <div fxLayout=\"row wrap\">\r\n          <div fxFlex=\"33.33\" class=\"pr-16\">\r\n            <mat-label>Approved Loan Amount</mat-label>\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n              <input matInput name=\"approvedLoanAccount\"  class=\"alignment\"\r\n              (keypress)=_keyPress($event) formControlName=\"approvedLoanAccount\" />\r\n            </mat-form-field>\r\n          </div>\r\n           <div fxFlex=\"33.33\" class=\"pr-16\">\r\n            <mat-label>Effective Rate</mat-label>\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n              <input matInput name=\"effectiveRate\"  class=\"alignment\"\r\n              (keypress)=_keyPress($event) formControlName=\"effectiveRate\" />\r\n            </mat-form-field>\r\n          </div>\r\n          <div fxFlex=\"33.33\" class=\"pr-16\">\r\n            <mat-label>Rate Of Interest</mat-label>\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n              <input matInput name=\"rateOfInterest\"  class=\"alignment\"\r\n              (keypress)=_keyPress($event) formControlName=\"rateOfInterest\" />\r\n            </mat-form-field>\r\n          </div>\r\n        </div>\r\n        <div fxLayout=\"row wrap\">\r\n            <div fxFlex=\"33.33\" class=\"pr-16\">\r\n              <mat-label>Margin</mat-label>\r\n              <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                <input matInput name=\"margin\"  class=\"alignment\"\r\n                (keypress)=_keyPress($event) formControlName=\"margin\" />\r\n              </mat-form-field>\r\n            </div>\r\n             <div fxFlex=\"33.33\" class=\"pr-16\">\r\n                <mat-label>User Recommendation</mat-label>\r\n                <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                <mat-select formControlName=\"userRecommendation\" placeholder=\"User Recommendation\" >\r\n                    <mat-option *ngFor=\"let userRecommendation of arrayUserRecommendation\" [value]=\"userRecommendation\"> \r\n                      {{userRecommendation}} \r\n                    </mat-option> \r\n                  </mat-select>\r\n                </mat-form-field>\r\n            </div>\r\n            <div fxFlex=\"33.33\" class=\"pr-16\">\r\n               <!-- <mat-label>Rate Of Interest</mat-label>\r\n              <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                <input matInput name=\"rateOfInterest\"  class=\"alignment\"\r\n                formControlName=\"rateOfInterest\" />\r\n              </mat-form-field>  -->\r\n            </div>\r\n          </div>\r\n      </form>\r\n    </mat-dialog-content>\r\n    <mat-dialog-actions align=\"end\">\r\n      <button mat-button (click)=\"submitForm1()\">\r\n        Update\r\n      </button>\r\n      <button mat-button (click)=\"goToClose()\">Close</button>\r\n    </mat-dialog-actions>\r\n    </div>","import { Component, OnInit,Inject, ChangeDetectorRef } from '@angular/core';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { AppLoaderService } from 'app/shared/services/app-loader/app-loader.service';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { TasksummaryService } from '../../tasksummary.service';\r\n\r\n@Component({\r\n  selector: 'app-loan-approval-details-update',\r\n  templateUrl: './loan-approval-details-update.component.html',\r\n  styleUrls: ['./loan-approval-details-update.component.scss']\r\n})\r\nexport class LoanApprovalDetailsUpdateComponent implements OnInit {\r\n  loanAccountId: any;\r\n  loanaccountID: any;\r\n  loanApprovalForm: FormGroup;\r\n  selectedDay: number = 1;\r\n  day: number;\r\n  days: any[] = [];\r\n  months: any[] = [];\r\n  selectedYear: number;\r\n  year: number;\r\n  years: any[] = [];\r\n  accountType: any;\r\n  arrayAccountBranch: any;\r\n  screenArray: any;\r\n  screenArrayData: any;\r\n  branchName: any;\r\n  currencyData: any;\r\n  arraySystemRecommendation:any[]=['Approved','Rejected'];\r\n  arrayUserRecommendation:any[]=['Approved','Rejected'];\r\n  loanAccountDetails: any;\r\n\r\n  statusArr: any = ['BACKLOG', 'ONGOING', 'APPROVED', 'REJECTED']\r\n  arr: any = ['BACKLOG', 'ONGOINGArr', 'APPROVEDArr', 'REJECTEDArr']\r\n  BACKLOGArr: any = [];\r\n  ONGOINGArr: any = [];\r\n  REJECTEDArr: any = [];\r\n  APPROVEDArr: any = [];\r\n  \r\n  BACKLOGTotalPages: number = 0\r\n  ONGOINGTotalPages: number = 0\r\n  REJECTEDTotalPages: number = 0\r\n  APPROVEDTotalPages: number = 0\r\n\r\n  BACKLOGCount: number = 0\r\n  ONGOINGCount: number = 0\r\n  REJECTEDCount: number = 0\r\n  APPROVEDCount: number = 0\r\n\r\n  BACKLOGImage: any[] = [];\r\n  ONGOINGImage: any[] = [];\r\n  REJECTEDImage: any[] = [];\r\n  APPROVEDImage: any[] = [];\r\n\r\n  BACKLOGTotalRecords: number = 0;\r\n  ONGOINGTotalRecords: number = 0;\r\n  REJECTEDTotalRecords: number = 0;\r\n  APPROVEDTotalRecords: number = 0;\r\n\r\n  BACKLOGPage: number = 0;\r\n  ONGOINGPage: number = 0;\r\n  REJECTEDPage: number = 0;\r\n  APPROVEDPage: number = 0;\r\n\r\n  constructor(private loader: AppLoaderService, public apiService: ApiService, @Inject(MAT_DIALOG_DATA) public data: any,\r\n    private fb: FormBuilder, private ls: LocalStoreService, public dialogRef: MatDialogRef<LoanApprovalDetailsUpdateComponent>,\r\n  private cdr: ChangeDetectorRef, private taskSumService: TasksummaryService,\r\n  private snack: MatSnackBar) { }\r\n\r\n  ngOnInit(): void {\r\n    this.loanaccountID = this.data.loanAccountId;\r\n    this.buildLoanApprovalForm(this.data)\r\n    this.getLoanDetails();\r\n    this.getBusinessProductDetails(\"business_product_name\");\r\n    this.getAccountBranchDetails();\r\n    this.selectedYear = new Date().getFullYear();\r\n  \r\n    for (let year = 0; year <= 50; year++) {\r\n      this.years.push(year+ \" year\");\r\n    }\r\n\r\n    for (let month = 0; month <= 11; month++) {\r\n      this.months.push(month+ \" month\");\r\n    }\r\n\r\n    for (let day = 0; day <= 30; day++) {\r\n      this.days.push(day+ \" day\");\r\n    }\r\n    this.loanaccountID = this.data.loanAccountId;\r\n    console.log('loanaccountID', this.loanaccountID)\r\n\r\n  }\r\n  assign(valueForaccId) {\r\n    this.apiService.setAccountId({\r\n      loanAccountId: valueForaccId\r\n    });\r\n    console.log(\"loan\", this.loanAccountId)\r\n  }\r\n  _keyPress(event: any) {\r\n    // console.log(\"key\",event);\r\n    const pattern = /[0-9]/;\r\n    let inputChar = String.fromCharCode(event.charCode);\r\n    console.log(\"inputChar\",inputChar);\r\n    inputChar=inputChar.toString();\r\n    console.log(\"inputChar1\",inputChar);\r\n    inputChar=inputChar\r\n    if (!pattern.test(inputChar)) {\r\n        event.preventDefault();\r\n    }\r\n  }\r\n  \r\n  async getDataOnLoad() {\r\n    for (let index = 0; index < this.statusArr.length; index++) {\r\n      const statusItem = this.statusArr[index];\r\n      this.fetchCustomerInfo(statusItem);\r\n    }\r\n\r\n  }\r\n\r\n   fetchCustomerInfo(status:string){\r\n   \r\n    this.taskSumService.getallLoanAccountData(status)\r\n            .subscribe((custResp:any) => {\r\n              console.log(\"Response\", custResp);\r\n              this.updateStatusResponse(status, custResp);\r\n            });\r\n  }\r\n\r\n  updateStatusResponse(status, data){\r\n    console.log(\"data\", data)\r\n    console.log(\"status\", status)\r\n\r\n      if (status == 'ONGOING') {\r\n      this.ONGOINGArr = data?.loanList;\r\n      this.ONGOINGTotalPages = data?.totalPages;\r\n      this.ONGOINGTotalRecords = data?.totalNoOfElements;\r\n    }\r\n\r\n    this.cdr.markForCheck();\r\n}\r\n  \r\n   buildLoanApprovalForm(data?) {\r\n    console.log('item',data)\r\n   \r\n    this.getBusinessProductDetails(\"business_product_name\");\r\n     this.getAccountBranchDetails();\r\n     \r\n    this.loanApprovalForm= this.fb.group({\r\n        loanAccountId: [this.loanaccountID],\r\n        productName:[data ? data?.loanApprovalInfo?.productName:''],\r\n        accountBranch: [data ? data?.loanApprovalInfo?.accountBranch : ''],\r\n        accountType:[data ? data?.loanApprovalInfo?.accountType:''],\r\n        applicantName: [data ? data?.loanApprovalInfo?.applicantName : ''],\r\n        approvedLoanAccount: [data ? data?.loanApprovalInfo?.approvedLoanAccount : ''],\r\n        userRecommendation:[data ? data?.loanApprovalInfo?.userRecommendation:''],\r\n        rateOfInterest:[data ? data?.loanApprovalInfo?.rateOfInterest:''],\r\n        margin: [data ? data?.loanApprovalInfo?.margin : ''],\r\n        loanTenure: [data ? data?.loanApprovalInfo?.loanTenure : ''],\r\n        effectiveRate: [data ? data?.loanApprovalInfo?.effectiveRate: ''],\r\n        day: [data ? (data?.loanApprovalInfo?.loanTenure.split(\"-\")[2]) : \"\"],\r\n        month: [data ? data?.loanApprovalInfo?.loanTenure.split(\"-\")[1] : \"\"],\r\n        year: [data ? (data?.loanApprovalInfo?.loanTenure.split(\"-\")[0]) : \"\"],\r\n  \r\n \r\n    });\r\n\r\n    // console.log('form before',this.loanAssetForm)\r\n    // console.log('form aftr',this.loanAssetForm.value)\r\n   }\r\n   getAccountType(productName) {\r\n    console.log(\"State -- \", productName)\r\n    this.apiService.getAccount(productName).subscribe((data) => {\r\n      console.log(\"data.accountType\",data);\r\n      this.accountType = data.accountTypeName;\r\n      console.log(\"this.accountType\",this.accountType);\r\n      this.loanApprovalForm.get('accountType').setValue(data.accountTypeName);\r\n\r\n     \r\n    });\r\n  }\r\n  getBusinessProductDetails(key: string){\r\n    this.apiService.getBusinessProductName(key).subscribe((data) => {\r\n       console.log(\"data:: AccountBranch \", data)\r\n       this.arrayAccountBranch = data;\r\n      \r\n     });\r\n   }\r\n   getAccountBranchDetails() {\r\n    //debugger\r\n    this.apiService.getAccountBranch().subscribe((data) => {\r\n      console.log(\"data:: AccountBranch \", data)\r\n      this.screenArray = data;\r\n      this.screenArrayData=data;\r\n      if (this.screenArray.length == 0) {\r\n        this.screenArray.push(this.branchName);\r\n      }\r\n      console.log(\"this.branchName::\", this.branchName, this.screenArray)\r\n      this.currencyData = this.screenArray.find(x => x.branchName == this.branchName);\r\n      console.log(\"Currency\", this.currencyData)\r\n\r\n    \r\n\r\n    });\r\n  }\r\n   onChangeBranch(value) {\r\n  //  this.ifEdit = true;\r\n    this.currencyData = this.screenArray.find(x => x.branchName == value.value);\r\n    if (this.currencyData != null || this.currencyData != undefined) {\r\n      this.loanApprovalForm.get('accountCurrency').setValue(this.currencyData.branchCcy);\r\n    }\r\n   }\r\n\r\n\r\n  submitForm1(){\r\n  \r\n\r\n    const renewData =\r\n    this.loanApprovalForm.value.year +\r\n    \"-\" +\r\n    this.loanApprovalForm.value.month +\r\n    \"-\" +\r\n    this.loanApprovalForm.value.day;\r\n  this.loanApprovalForm.get(\"loanTenure\").setValue(renewData);\r\n  delete this.loanApprovalForm.value.year;\r\n  delete this.loanApprovalForm.value.month;\r\n  delete this.loanApprovalForm.value.day;\r\n    let payload={\r\n      // loanAccountId: this.showEditOption ? this.loanaccountID : null,\r\n      loanAccountId: this.data.loanAccountId,\r\n      productName:this.loanApprovalForm.value.productName,\r\n      accountBranch:this.loanApprovalForm.value.accountBranch,\r\n      accountType:this.loanApprovalForm.value.accountType,\r\n      applicantName: this.loanApprovalForm.value.applicantName,\r\n      margin:this.loanApprovalForm.value.margin,\r\n      rateOfInterest: this.loanApprovalForm.value.rateOfInterest,\r\n      userRecommendation:this.loanApprovalForm.value.userRecommendation,\r\n      effectiveRate:this.loanApprovalForm.value.effectiveRate,\r\n      loanTenure:this.loanApprovalForm.value.loanTenure,\r\n      accountCurrency: this.loanApprovalForm.value.accountCurrency,\r\n      approvedLoanAccount: this.loanApprovalForm.value.approvedLoanAccount\r\n    }\r\n    console.log(\"payload\",payload)\r\n    this.apiService.saveLoanDetails(payload).subscribe(data => {\r\n      console.log(\"data\",data.loanAccountId);\r\n      this.loanaccountID = this.data.loanAccountId;\r\n      console.log('loanaccountID', this.loanaccountID)\r\n      this.assign(this.data.loanAccountId)\r\n      if (data === 200 || data !== null) {\r\n        let statusModel = {\r\n          loanAccountId: this.data.loanAccountId,\r\n          status: \"ONGOING\"\r\n        };\r\n        this.apiService.updateLoanDetailsStatus(statusModel).subscribe(data => {\r\n        });\r\n      //  sessionStorage.setItem('loanAccountId', data.loanAccountid);\r\n        let fundStatus = {\r\n          loanAccountid: this.data.loanAccountId\r\n          \r\n        };\r\n       \r\n\r\n        this.ls.setItem('fundByStatus', fundStatus);\r\n        this.ls.setItem('accountType', data.accountType);\r\n        this.ls.setItem('productName',data.productName);\r\n  \r\n        \r\n    this.loanaccountID = this.data.loanAccountId;\r\n    console.log(\"this.productaccountID\",this.loanaccountID);\r\n        this.snack.open('Data Updated!', 'OK', {\r\n          duration: 4000,\r\n          verticalPosition: 'top',\r\n          horizontalPosition: 'right'\r\n        });\r\n        this.getDataOnLoad();\r\n      }\r\n      if( data === 500){\r\n        this.snack.open('Not able to connect to server!', 'INTERNAL SERVER ERROR', {\r\n          duration: 4000,\r\n          verticalPosition: 'top',\r\n          horizontalPosition: 'right'\r\n        });\r\n        console.log(\"500 error\")\r\n      }\r\n      \r\n      this.goToClose();\r\n    })\r\n  }\r\n  getLoanDetails() {\r\n    console.log('get loan details');\r\n    \r\n    this.apiService.getLoanDetails(this.loanaccountID).subscribe((loanAccountDetails: any) => {\r\n      console.log(\"All Account Service\", loanAccountDetails);\r\n      this.buildLoanApprovalForm(this.loanAccountDetails);\r\n      this.loanAccountDetails = loanAccountDetails;\r\n      console.log(\"this.accountDetails\", this.loanAccountDetails);\r\n      console.log('form',this.loanApprovalForm.value)\r\n      this.loanApprovalForm.controls.productName.setValue(this.loanAccountDetails.productName);\r\n      this.loanApprovalForm.value.accountType = this.loanAccountDetails.accountType;\r\n     console.log('accountType',   this.ls.setItem('accountType', this.loanApprovalForm.value.accountType))\r\n      this.ls.setItem('accountType', this.loanApprovalForm.value.accountType);\r\n\r\n\r\n     this.loanApprovalForm.value.accountBranch = this.loanAccountDetails.accountBranch;\r\n   this.loanApprovalForm.value.userRecommendation = this.loanAccountDetails.userRecommendation;\r\n   this.loanApprovalForm.value.loanTenure = this.loanAccountDetails.loanTenure;\r\n   this.loanApprovalForm.value.applicantName = this.loanAccountDetails.applicantName;\r\n   this.loanApprovalForm.value.margin = this.loanAccountDetails.margin;\r\n   this.loanApprovalForm.value.approvedLoanAccount = this.loanAccountDetails.approvedLoanAccount;\r\n   this.loanApprovalForm.value.effectiveRate = this.loanAccountDetails.effectiveRate;\r\n   this.loanApprovalForm.value.accountType = this.loanAccountDetails.accountType;\r\n   this.loanApprovalForm.value.productName = this.loanAccountDetails.productName;\r\n   this.loanApprovalForm.value.rateOfInterest = this.loanAccountDetails.rateOfInterest;\r\n    });\r\n  }\r\ngoToClose(): void {\r\n  this.dialogRef.close();\r\n \r\n  \r\n  this.apiService.getLoanDetails(this.loanaccountID).subscribe((loanAccountDetails: any) => {\r\n    console.log(\"All Account Service\", loanAccountDetails);\r\n    this.buildLoanApprovalForm(this.loanAccountDetails);\r\n    this.loanAccountDetails = loanAccountDetails;\r\n    //this.buildformGroup(this.loanAccountDetails);\r\n    console.log(\"this.accountDetails\", this.loanAccountDetails);\r\n    console.log('form',this.loanApprovalForm.value)\r\n  //  this.loanUpdateForm.value.businessProductName = this.loanAccountDetails.businessProductName;\r\n    this.loanApprovalForm.controls.productName.setValue(this.loanAccountDetails.productName);\r\n    this.loanApprovalForm.value.accountType = this.loanAccountDetails.accountType;\r\n   // this.ls.setItem('accountType', data.accountType);\r\n   console.log('accountType',   this.ls.setItem('accountType', this.loanApprovalForm.value.accountType))\r\n    this.ls.setItem('accountType', this.loanApprovalForm.value.accountType);\r\n\r\n\r\n   this.loanApprovalForm.value.accountBranch = this.loanAccountDetails.accountBranch;\r\n this.loanApprovalForm.value.userRecommendation = this.loanAccountDetails.userRecommendation;\r\n this.loanApprovalForm.value.loanTenure = this.loanAccountDetails.loanTenure;\r\n this.loanApprovalForm.value.applicantName = this.loanAccountDetails.applicantName;\r\n this.loanApprovalForm.value.margin = this.loanAccountDetails.margin;\r\n this.loanApprovalForm.value.approvedLoanAccount = this.loanAccountDetails.approvedLoanAccount;\r\n this.loanApprovalForm.value.effectiveRate = this.loanAccountDetails.effectiveRate;\r\n this.loanApprovalForm.value.accountType = this.loanAccountDetails.accountType;\r\n this.loanApprovalForm.value.productName = this.loanAccountDetails.productName;\r\n this.loanApprovalForm.value.rateOfInterest = this.loanAccountDetails.rateOfInterest;\r\n  });\r\n  \r\n \r\n}\r\n\r\n}\r\n\r\n\r\n\r\n\r\n \r\n \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\n\r\n@Component({\r\n  selector: 'app-qualitative-details-update',\r\n  templateUrl: './qualitative-details-update.component.html',\r\n  styleUrls: ['./qualitative-details-update.component.scss']\r\n})\r\nexport class QualitativeDetailsUpdateComponent implements OnInit {\r\nqualitativeUpdateForm:FormGroup;\r\naccountId:any;\r\naccountType:any;\r\nscoreCardId:any;\r\nnumberOfApplicant:any;\r\nqualitative: FormArray = new FormArray([]);\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    @Inject(MAT_DIALOG_DATA) public qualitativeDetails,\r\n    private ls: LocalStoreService,\r\n    private apiService:ApiService,\r\n    private dialogRef: MatDialogRef<QualitativeDetailsUpdateComponent>,\r\n    private snack: MatSnackBar\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    console.log(this.qualitativeDetails);\r\n    this.accountId = this.ls.getItem('accountId');\r\n    this.accountType = this.ls.getItem('accountType');\r\n    this.scoreCardId = this.qualitativeDetails?.scorecardId;\r\n    this.numberOfApplicant = this.qualitativeDetails?.numberOfApplicant;\r\n    this.buildQualitativeForm();\r\n    this.apiService.getScorecardQuestions(this.accountType).subscribe((response) => { \r\n      this.qualitative = this.qualitativeUpdateForm.get('scorecardMapping') as FormArray;\r\n      this.qualitative.push(this.addScorecardMappiing());\r\n      for(let i=0; i<response.length; i++){\r\n        console.log(this.qualitativeUpdateForm);\r\n        this.addScorecardDetails(response[i],this.qualitativeDetails?.scoreCardMapping[0].scoreCardDetails[i].scorecardAnswer,i)\r\n        console.log(this.qualitativeUpdateForm);\r\n      }\r\n      \r\n    });\r\n  }\r\n\r\n  buildQualitativeForm(){\r\n    this.qualitativeUpdateForm = this.formBuilder.group({\r\n      accountId:this.accountId,\r\n      accountType:this.accountType,\r\n      scoreCardId:this.scoreCardId ? this.scoreCardId : '',\r\n      loggedinUser:'123',\r\n      numberOfApplicant:this.numberOfApplicant,\r\n      scorecardMapping: this.formBuilder.array([])\r\n    })\r\n  }\r\naddScorecardMappiing(){\r\n  return this.formBuilder.group({\r\n    applicantId:'',\r\n    scoreCardDetails:this.formBuilder.array([])\r\n  })\r\n}\r\n  addScorecardDetails(data?,resp?,index?){\r\n    (this.qualitative.controls[0].get('scoreCardDetails') as FormArray).push(this.formBuilder.group({\r\n      scoreCardDetailsId:[data?data.scoreCardDetailsId:''],\r\n      scoreCardMappingId: [data?data.scoreCardMappingId:''],\r\n      scoreCardQuestionId: [data?data.scoreCardQuestionId:''],\r\n      scorecardQuestion:[data?data.scorecardQuestion:''], \r\n      scorecardAnswer: [data?data.scorecardAnswer:'', [Validators.required]],\r\n      scorecardAnswers:[data?data.scorecardAnswers:''],\r\n      attributeType:[data?data.attributeType:'']\r\n    })\r\n    )\r\n    if(resp){\r\n      (this.qualitative.controls[0].get('scoreCardDetails') as FormArray).at(index).get('scorecardAnswer').setValue(resp)\r\n    }\r\n  }\r\n\r\n  saveReports(formData){\r\n    this.apiService.saveQualitativeScorecard(formData).subscribe((resp) => {\r\n      this.snack.open('Qualitative Scoreboard Saved!', 'OK', {\r\n        duration: 4000,\r\n        verticalPosition: 'top',\r\n        horizontalPosition: 'right'\r\n      });\r\n      this.dialogRef.close({\r\n        status:\"BACKLOG\"\r\n      })\r\n    }, err => {\r\n      this.snack.open('Server Error!', 'OK', {\r\n        duration: 4000,\r\n        verticalPosition: 'top',\r\n        horizontalPosition: 'right'\r\n      });\r\n    });\r\n  }\r\n  close(){\r\nthis.dialogRef.close({\r\n  status:'ONGOING'\r\n})\r\n  }\r\n}\r\n","<div fxLayout=\"row\" fxLayoutGap=\"25px\" fxLayout=\"row\" fxLayoutAlign=\"end\" class=\"contain\">\r\n    <mat-icon class=\"closeIcon\" (click)=\"close()\">close</mat-icon>\r\n</div>\r\n<h1 mat-dialog-title>Qualitative Scoreboard</h1>\r\n<mat-dialog-content>\r\n    <form [formGroup]=\"qualitativeUpdateForm\">\r\n        <mat-card>\r\n            <div>\r\n                <mat-hint>\r\n                    Scorecard ID\r\n                </mat-hint>\r\n                <mat-card>\r\n                    <input matInput name=\"ScoreCardId\" onlyNumber placeholder=\"Enter ScoreCardId\"\r\n                        formControlName=\"scoreCardId\" />\r\n                </mat-card>\r\n                <mat-error *ngIf=\"qualitativeUpdateForm.get('scoreCardId').touched && qualitativeUpdateForm.get('scoreCardId').value == 0\">\r\n                    Please Enter valid Scorecard ID\r\n                </mat-error>\r\n            </div>\r\n            <div formArrayName=\"scorecardMapping\">\r\n                <div *ngFor=\"let item of qualitativeUpdateForm.get('scorecardMapping')['controls']; let i = index;\"\r\n                    [formGroup]='i'>\r\n                    <div formArrayName=\"scoreCardDetails\">\r\n                        <div *ngFor=\"let details of item.get('scoreCardDetails')['controls']; let j = index;\"\r\n                            [formGroup]='j'>\r\n                            <div>\r\n                                <mat-hint>{{details.value.scorecardQuestion}}</mat-hint>\r\n                                <mat-card>\r\n                                    <input *ngIf=\"details.value.attributeType == 'textbox'\" matInput\r\n                                        formControlName='scorecardAnswer' />\r\n                                    <mat-select *ngIf=\"details.value.attributeType == 'drop-down'\"\r\n                                        formControlName=\"scorecardAnswer\">\r\n                                        <option *ngFor=\"let answer of details.value.scorecardAnswers ;\" value=\"answer\"></option>\r\n                                    </mat-select>\r\n                                </mat-card>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </mat-card>\r\n    </form>\r\n</mat-dialog-content>\r\n<div fxLayout=\"row\" fxLayoutAlign=\"end\" fxLayoutGap=\"20px\">\r\n    <button type=\"button\"  mat-raised-button class=\"editbtn\" [disabled]=\"qualitativeUpdateForm.invalid\"\r\n        (click)=\"saveReports(qualitativeUpdateForm.value)\" type=\"button\">Save</button>\r\n    &nbsp;&nbsp;&nbsp;\r\n    <button type=\"button\" class=\"cancelbtn\" (click)=\"close()\">\r\n        Cancel\r\n    </button>\r\n</div>","<div >\r\n    <mat-dialog-content>\r\n      <div fxLayout=\"row\" class=\"contain\">\r\n        <mat-icon style=\"padding-left: 100%;\"class=\"backIcon\" (click)=\"goToClose()\">close</mat-icon>\r\n    </div>\r\n      <h1>Loan Collateral Details</h1>\r\n      <form class=\"mt-32\" [formGroup]=\"loanCollateralForm\">\r\n        <!-- <div fxLayout=\"row wrap\" fxLayout.lt-sm=\"column\" *ngIf=\"data.editType === 'loanAccount_array'\"> -->\r\n            <div fxLayout=\"row wrap\" fxLayout.lt-sm=\"column\">\r\n          <div fxFlex=\"33.33\" class=\"pr-16\">\r\n            <mat-label>Collateral Type </mat-label>\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                <mat-select name=\"collateralType\" formControlName=\"collateralType\">\r\n                    <mat-option *ngFor=\"let collateralType of arrayCollateralType\" [value]=\"collateralType\"> \r\n                      {{collateralType}} \r\n                    </mat-option> \r\n                  </mat-select>\r\n            </mat-form-field>\r\n          </div>\r\n    \r\n          <div fxFlex=\"33.33\" class=\"pr-16\">\r\n            <mat-label>Collateral Currency </mat-label>\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                <mat-select name=\"collateralCurrency\" formControlName=\"collateralCurrency\">\r\n                    <mat-option *ngFor=\"let collateralCurrency of arrayRateValue\" [value]=\"collateralCurrency\"> \r\n                        {{collateralCurrency}} \r\n                      </mat-option> \r\n                </mat-select>\r\n            </mat-form-field>\r\n          </div>\r\n    \r\n          <div fxFlex=\"33.33\" class=\"pr-16\">\r\n            <mat-label>Collateral Value</mat-label>\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                <input matInput name=\"collateralValue\" formControlName=\"collateralValue\" \r\n                (keypress)=\"_keyPress($event)\" />\r\n            </mat-form-field>\r\n          </div>\r\n        </div>\r\n    \r\n        <div fxLayout=\"row wrap\">\r\n          <div fxFlex=\"33.33\" class=\"pr-16\">\r\n            <mat-label>Third Party Collateral</mat-label>\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n              \r\n              <input matInput name=\"thirdPartyCollateral\" formControlName=\"thirdPartyCollateral\" \r\n              />\r\n              <!-- <mat-slide-toggle name=\"thirdPartyCollateral\" formControlName=\"thirdPartyCollateral\" > </mat-slide-toggle> -->\r\n              <!-- <div class=\"pb-1\">\r\n                <mat-slide-toggle name=\"thirdPartyCollateral\" formControlName=\"thirdPartyCollateral\" >Third Party Collateral ? </mat-slide-toggle>\r\n            </div> -->\r\n              \r\n              \r\n\r\n            </mat-form-field>\r\n          </div>\r\n          <div fxFlex=\"33.33\" class=\"pr-16\">\r\n            <mat-label>Attributes</mat-label>\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n              <mat-select name=\"attributes\" formControlName=\"attributes\" required>\r\n                <mat-option value=\"1\">Attributes 1</mat-option>\r\n                <mat-option value=\"2\">Attributes 2</mat-option>\r\n            </mat-select>\r\n            </mat-form-field>\r\n          </div>\r\n          <div fxFlex=\"33.33\" class=\"pr-16\">\r\n            <mat-label>Dimensions</mat-label>\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n              <input matInput name=\"dimensions\"  class=\"alignment\"\r\n              formControlName=\"dimensions\"  (keypress)=\"_keyPress($event)\" />\r\n            </mat-form-field>\r\n          </div>\r\n        </div>\r\n      \r\n        <div fxLayout=\"row wrap\">\r\n            <div fxFlex=\"33.33\" class=\"pr-16\">\r\n              <mat-label>Building</mat-label>\r\n              <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                \r\n                <input matInput name=\"building\" formControlName=\"building\" \r\n                />\r\n              </mat-form-field>\r\n            </div>\r\n            <div fxFlex=\"33.33\" class=\"pr-16\">\r\n              <mat-label>Street</mat-label>\r\n              <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                <input matInput name=\"street\" formControlName=\"street\" \r\n                />\r\n              </mat-form-field>\r\n            </div>\r\n            <div fxFlex=\"33.33\" class=\"pr-16\">\r\n              <mat-label>Locality</mat-label>\r\n              <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                <input matInput name=\"locality\"  class=\"alignment\"\r\n                formControlName=\"locality\" />\r\n              </mat-form-field>\r\n            </div>\r\n          </div>\r\n          <div fxLayout=\"row wrap\">\r\n          <div fxFlex=\"33.33\" class=\"pr-16\">\r\n            <mat-label>Country</mat-label>\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                <mat-select name=\"country\" formControlName=\"country\" required\r\n                (selectionChange)=\"getStateName($event.value)\"\r\n                (selectionChange)=\"getCityName($event.value)\">\r\n               <mat-option *ngFor=\"let country of arrayCountry\" [value]=\"country\">\r\n                 {{country}}\r\n               </mat-option>\r\n               </mat-select>\r\n            </mat-form-field>\r\n          </div>\r\n          <div fxFlex=\"33.33\" class=\"pr-16\">\r\n            <mat-label>State</mat-label>\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                <mat-select name=\"state\" formControlName=\"state\" required\r\n                (selectionChange)=\"getCityName($event.value)\">\r\n                <mat-option *ngFor=\"let state of arrayState\" [value]=\"state.value1\">\r\n                  {{state.value1}}\r\n                </mat-option>\r\n              </mat-select>  \r\n            </mat-form-field>\r\n          </div>\r\n          <div fxFlex=\"33.33\" class=\"pr-16\">\r\n            <mat-label>City</mat-label>\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                <mat-select name=\"city\" formControlName=\"city\" required>\r\n                    <mat-option *ngFor=\"let city of arrayCity\" [value]=\"city.value1\">{{city.value1}}\r\n                    </mat-option>\r\n                  </mat-select>\r\n            </mat-form-field>\r\n          </div>\r\n       \r\n        </div>\r\n        <div fxLayout=\"row wrap\">\r\n            <div fxFlex=\"33.33\" class=\"pr-16\">\r\n              <mat-label>Zip Code</mat-label>\r\n              <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                <input matInput name=\"zipCode\"  class=\"alignment\"\r\n                formControlName=\"zipCode\" \r\n                minlength=\"6\" maxlength=\"10\" (keypress)=\"_keyPress($event)\"/>\r\n              </mat-form-field>\r\n            </div>\r\n            <div fxFlex=\"33.33\" class=\"pr-16\">\r\n              <!-- <mat-label>State</mat-label>\r\n              <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                <input matInput name=\"purposeOfLoan\"  class=\"alignment\"\r\n                formControlName=\"purposeOfLoan\" />\r\n              </mat-form-field> -->\r\n            </div>\r\n            <div fxFlex=\"33.33\" class=\"pr-16\">\r\n              <!-- <mat-label>Country</mat-label>\r\n              <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                <input matInput name=\"purposeOfLoan\"  class=\"alignment\"\r\n                formControlName=\"purposeOfLoan\" />\r\n              </mat-form-field> -->\r\n            </div>\r\n          </div>\r\n      </form>\r\n    </mat-dialog-content>\r\n    <mat-dialog-actions align=\"end\">\r\n      <button mat-button (click)=\"submitForm1()\">\r\n        Update\r\n      </button>\r\n      <button mat-button (click)=\"goToClose()\">Close</button>\r\n    </mat-dialog-actions>\r\n    </div>","import { ChangeDetectorRef, Component, Inject, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup} from '@angular/forms';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport * as moment from 'moment';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { AppLoaderService } from \"app/shared/services/app-loader/app-loader.service\";\r\nimport { TasksummaryService } from '../../tasksummary.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-loan-collateral-details-update',\r\n  templateUrl: './loan-collateral-details-update.component.html',\r\n  styleUrls: ['./loan-collateral-details-update.component.scss']\r\n})\r\nexport class LoanCollateralDetailsUpdateComponent implements OnInit {\r\n  loanCollateralForm: FormGroup;\r\n  loanaccountID: any;\r\n  arrayCountry: any[] = [];\r\n  arrayState: any[] = [];\r\n  arrayCity: any[] = [];\r\n  arrayCollateralType: string[];\r\n  arrayRateValue: string[];\r\n  entityName: string;\r\n  assetDetails: any\r\n  loanCollateralDetails: any;\r\n  loanAccountId: any;\r\n  collateralDetails: any;\r\n\r\n  statusArr: any = ['BACKLOG', 'ONGOING', 'APPROVED', 'REJECTED']\r\n  arr: any = ['BACKLOG', 'ONGOINGArr', 'APPROVEDArr', 'REJECTEDArr']\r\n  BACKLOGArr: any = [];\r\n  ONGOINGArr: any = [];\r\n  REJECTEDArr: any = [];\r\n  APPROVEDArr: any = [];\r\n  \r\n  BACKLOGTotalPages: number = 0\r\n  ONGOINGTotalPages: number = 0\r\n  REJECTEDTotalPages: number = 0\r\n  APPROVEDTotalPages: number = 0\r\n\r\n  BACKLOGCount: number = 0\r\n  ONGOINGCount: number = 0\r\n  REJECTEDCount: number = 0\r\n  APPROVEDCount: number = 0\r\n\r\n  BACKLOGImage: any[] = [];\r\n  ONGOINGImage: any[] = [];\r\n  REJECTEDImage: any[] = [];\r\n  APPROVEDImage: any[] = [];\r\n\r\n  BACKLOGTotalRecords: number = 0;\r\n  ONGOINGTotalRecords: number = 0;\r\n  REJECTEDTotalRecords: number = 0;\r\n  APPROVEDTotalRecords: number = 0;\r\n\r\n  BACKLOGPage: number = 0;\r\n  ONGOINGPage: number = 0;\r\n  REJECTEDPage: number = 0;\r\n  APPROVEDPage: number = 0;\r\n\r\n  constructor(private fb: FormBuilder, @Inject(MAT_DIALOG_DATA) public data: any,\r\n  private dialogue: MatDialog,private taskSumService: TasksummaryService, private cdr: ChangeDetectorRef,\r\n  public dialogRef: MatDialogRef<LoanCollateralDetailsUpdateComponent>,\r\n  private apiService: ApiService, private ls: LocalStoreService, private snack: MatSnackBar,\r\n  private router: Router,  private loader: AppLoaderService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.loanaccountID = this.data.loanAccountId;\r\n    this.buildCollateralForm();\r\n    this.getCountryName(\"country\");\r\n    this.getCollateralType(\"collateral_type\");\r\n    this.getCollateralDetails();\r\n    this.getRateValue(\"currency\");\r\n  }\r\n\r\n  buildCollateralForm(data?) {\r\n    console.log('item',data)\r\n    // this.getBusinessProductDetails(\"business_product_name\");\r\n    // this.getAccountBranchDetails();\r\n     \r\n    if(data){ \r\n      this.getStateName(data.country);\r\n      this.getCityName(data.state);\r\n    }\r\n      \r\n    this.loanCollateralForm = this.fb.group({\r\n        loanAccountId: [this.loanaccountID],\r\n        country:[data ? data?.collateralInfo?.country:''],\r\n        state:[data ? data?.collateralInfo?.state:''],\r\n        city: [data ? data?.collateralInfo?.city : ''],\r\n        collateralType:[data ? data?.collateralInfo?.collateralType:''],\r\n        collateralCurrency:[data ?data?.collateralInfo?.collateralCurrency:''],\r\n        collateralValue:[data ? data?.collateralInfo?.collateralValue:''],\r\n        locality:[data ? data?.collateralInfo?.locality:''],\r\n        street:[data ? data?.collateralInfo?.street:''],\r\n        building:[data ? data?.collateralInfo?.building:''],\r\n        zipCode: [data ? data?.collateralInfo?.zipCode : ''],\r\n        homeType:[data ? data?.collateralInfo?.homeType:''],\r\n      attributes: [data ? data?.collateralInfo?.attributes : ''],\r\n      thirdPartyCollateral: [data ? data?.collateralInfo?.thirdPartyCollateral:'']\r\n     \r\n  \r\n  \r\n \r\n    \r\n    });\r\n    console.log('form before',this.loanCollateralForm)\r\n    console.log('form aftr',this.loanCollateralForm.value)\r\n  }\r\n  getRateValue(key: string) {\r\n    this.apiService.getDropDownValues(key).subscribe((data) => {\r\n      this.arrayRateValue = data;\r\n    });\r\n  }\r\n  getCollateralDetails() {\r\n   // this.loader.open();\r\n    this.apiService.getCollateralByLoanAccId(this.loanaccountID).subscribe((collateralDetails) => {\r\n   //   this.loader.close();\r\n      this.collateralDetails = collateralDetails;\r\n      console.log(this.collateralDetails.collateralDetails.length);\r\n      console.log(this.collateralDetails);\r\n      this.buildCollateralForm(this.collateralDetails);\r\n    //  this.populateCollateral(this.collateralDetails);\r\n    }, (err: any) => {\r\n    //  this.loader.close();\r\n    });\r\n  }\r\n  getCollateralType(key: string) {\r\n    this.apiService.getDropDownValues(key).subscribe((data) => {\r\n      this.arrayCollateralType = data;\r\n    });\r\n  }\r\n  _keyPress(event: any) {\r\n    // console.log(\"key\",event);\r\n    const pattern = /[0-9]/;\r\n    let inputChar = String.fromCharCode(event.charCode);\r\n    console.log(\"inputChar\",inputChar);\r\n    inputChar=inputChar.toString();\r\n    console.log(\"inputChar1\",inputChar);\r\n    inputChar=inputChar\r\n    if (!pattern.test(inputChar)) {\r\n        event.preventDefault();\r\n    }\r\n   }\r\n\r\n  submitForm1(){\r\n    let payload={\r\n      // loanAccountId: this.showEditOption ? this.loanaccountID : null,\r\n      loanAccountId: this.data.loanAccountId,\r\n      attributes:this.loanCollateralForm.value.attributes,\r\n      building:this.loanCollateralForm.value.building,\r\n      city:this.loanCollateralForm.value.city,\r\n      zipCode:this.loanCollateralForm.value.zipCode,\r\n      country:this.loanCollateralForm.value.country,\r\n      state:this.loanCollateralForm.value.state,\r\n      dimensions: this.loanCollateralForm.value.dimensions,\r\n      locality: this.loanCollateralForm.value.locality,\r\n      thirdpartyCollateral: this.loanCollateralForm.value.thirdPartyCollateral,\r\n      collateralValue: this.loanCollateralForm.value.collateralValue,\r\n      collateralType: this.loanCollateralForm.value.collateralType,\r\n      collateralCurrency: this.loanCollateralForm.value.collateralCurrency\r\n    }\r\n    console.log(\"payload\",payload)\r\n    this.apiService.upsertCollateralDetails(payload).subscribe(data => {\r\n      console.log(\"data\",data.loanAccountId);\r\n      // this.loanAccountId=data.loanAccountId;\r\n      // console.log(\"loanAccountid\",this.loanAccountId);\r\n\r\n      this.loanaccountID = this.data.loanAccountId;\r\n      console.log('loanaccountID', this.loanaccountID)\r\n      \r\n     \r\n      // this.assign(data.loanAccountId)\r\n      this.assign(this.data.loanAccountId)\r\n      if (data === 200 || data !== null) {\r\n        let statusModel = {\r\n          loanAccountId: this.data.loanAccountId,\r\n          status: \"ONGOING\"\r\n        };\r\n        this.apiService.updateLoanDetailsStatus(statusModel).subscribe(data => {\r\n        });\r\n      //  sessionStorage.setItem('loanAccountId', data.loanAccountid);\r\n        let fundStatus = {\r\n          loanAccountid: this.data.loanAccountId\r\n          \r\n        };\r\n       \r\n\r\n        this.ls.setItem('fundByStatus', fundStatus);\r\n        this.ls.setItem('accountType', data.accountType);\r\n        this.ls.setItem('productName',data.businessProductName);\r\n        \r\n    this.loanaccountID = this.data.loanAccountId;\r\n    console.log(\"this.productaccountID\",this.loanaccountID);\r\n        this.snack.open('Data Updated!', 'OK', {\r\n          duration: 4000,\r\n          verticalPosition: 'top',\r\n          horizontalPosition: 'right'\r\n        });\r\n        this.getDataOnLoad();\r\n      }\r\n      if( data === 500){\r\n        this.snack.open('Not able to connect to server!', 'INTERNAL SERVER ERROR', {\r\n          duration: 4000,\r\n          verticalPosition: 'top',\r\n          horizontalPosition: 'right'\r\n        });\r\n        console.log(\"500 error\")\r\n      }\r\n      \r\n      this.goToClose();\r\n    })\r\n  }\r\n\r\n  async getDataOnLoad() {\r\n    for (let index = 0; index < this.statusArr.length; index++) {\r\n      const statusItem = this.statusArr[index];\r\n      this.fetchCustomerInfo(statusItem);\r\n    }\r\n\r\n  }\r\n\r\n   fetchCustomerInfo(status:string){\r\n   \r\n    this.taskSumService.getallLoanAccountData(status)\r\n            .subscribe((custResp:any) => {\r\n              console.log(\"Response\", custResp);\r\n              this.updateStatusResponse(status, custResp);\r\n            });\r\n  }\r\n\r\n  updateStatusResponse(status, data){\r\n    console.log(\"data\", data)\r\n    console.log(\"status\", status)\r\n      if (status == 'ONGOING') {\r\n      this.ONGOINGArr = data?.loanList;\r\n      this.ONGOINGTotalPages = data?.totalPages;\r\n      this.ONGOINGTotalRecords = data?.totalNoOfElements;\r\n    }\r\n \r\n\r\n    this.cdr.markForCheck();\r\n}\r\n  getCountryName(key: string) {\r\n    this.apiService.getDropDownValues(key).subscribe((data) => {\r\n      this.arrayCountry = data;\r\n      console.log(\"-->\", this.arrayCountry)\r\n    });\r\n  }\r\n  getStateName(country) {\r\n    this.entityName = \"state\";\r\n    console.log(\"State -- \", country)\r\n    this.apiService.getDropDownValues1(this.entityName, country).subscribe((data) => {\r\n      this.arrayState = data;\r\n      console.log(\"-->\", this.arrayState)\r\n    });\r\n  }\r\n  getCityName(state: any) {\r\n    this.entityName = \"city\";\r\n    console.log(state)\r\n    this.apiService.getDropDownValues1(this.entityName, state).subscribe((data) => {\r\n      this.arrayCity = data;\r\n      console.log(\"-->\", this.arrayCity)\r\n     \r\n  \r\n    });\r\n  }\r\n  assign(valueForaccId) {\r\n    this.apiService.setAccountId({\r\n      loanAccountId: valueForaccId\r\n    });\r\n    console.log(\"loan\", this.loanAccountId)\r\n  }\r\ngoToClose(): void {\r\n  this.dialogRef.close();\r\n \r\n // this.getLoanDetails();\r\n  this.apiService.getCollateralByLoanAccId(this.loanaccountID).subscribe((loanCollateralDetails: any) => {\r\n    console.log(\"All Account Service\", loanCollateralDetails);\r\n    this.loanCollateralDetails = loanCollateralDetails;\r\n    //this.buildformGroup(this.loanAccountDetails);\r\n    console.log(\"this.loanCollateralDetails\", this.loanCollateralDetails);\r\n    console.log('form',this.loanCollateralForm.value)\r\n    this.loanCollateralForm.value.building = this.loanCollateralDetails.building;\r\n    this.loanCollateralForm.value.dimensions = this.loanCollateralDetails.dimensions;\r\n   this.loanCollateralForm.value.attributes = this.loanCollateralDetails.attributes;\r\n    this.loanCollateralForm.value.collateralCurrency = this.loanCollateralDetails.collateralCurrency;\r\n    this.loader.close();\r\n //  this.loanUpdateForm.value.businessProductName = this.loanAccountDetails.businessProductName;\r\n  });\r\n \r\n}\r\n\r\n}\r\n","import { CdkRow } from '@angular/cdk/table';\r\nimport { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\n\r\n@Component({\r\n  selector: 'app-card-initiation-details-update',\r\n  templateUrl: './card-initiation-details-update.component.html',\r\n  styleUrls: ['./card-initiation-details-update.component.scss']\r\n})\r\nexport class CardInitiationDetailsUpdateComponent implements OnInit {\r\ncardInitiationUpdateForm: FormGroup;\r\nemploymentTypeArray: any[];\r\nlocalCurrencyArr = ['CNY', 'GBP', 'INR', 'USD', 'ZAR', 'GBP'];\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public data: any, \r\n    public dialogRef: MatDialogRef<CardInitiationDetailsUpdateComponent>,\r\n    private apiService: ApiService,\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private snack: MatSnackBar\r\n    ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getEmploymentType(\"employment_type\");\r\n    console.log(this.data);\r\n    \r\n    if(this.data){\r\n      this.buildInitiationUpdateForm(this.data);\r\n    }\r\n    else\r\n    {\r\n      this.buildInitiationUpdateForm();\r\n    }\r\n    \r\n  }\r\n  getEmploymentType(key: string) {\r\n    this.apiService.getDropDownValues(key).subscribe((data) => {\r\n      this.employmentTypeArray = data;\r\n\r\n    });\r\n  }\r\n  buildInitiationUpdateForm(data?) {\r\n  \r\n    this.cardInitiationUpdateForm = this.formBuilder.group({\r\n      existingCustomer: [data && data.existingCustomer? data.existingCustomer : '',],\r\n      cardType: [data && data.cardType ? data.cardType : '', [Validators.required]],\r\n      customerAccount: [data && data.customerAccount ? data.customerAccount : ''],\r\n      applicantName: [data && data.applicantName ? data.applicantName : ''],\r\n      currency: [data && data.currency ? data.currency : '', [Validators.required]],\r\n      employmentType: [data && data.employmentType ? data.employmentType : '', [Validators.required]],\r\n      affinityProgram: [data && data.affinityProgram ? data.affinityProgram : '', [Validators.required]]  \r\n    });\r\n  }\r\nclose(){\r\n  this.dialogRef.close({\r\n    status:\"ONGOING\"\r\n  })\r\n}\r\n\r\nonSubmit() {\r\n  let payload = {\r\n    existingCustomer: this.cardInitiationUpdateForm.value.existingCustomer,\r\n    cardType: this.cardInitiationUpdateForm.value.cardType,\r\n    customerAccount: this.cardInitiationUpdateForm.value.customerAccount,\r\n    applicantName: this.cardInitiationUpdateForm.value.applicantName,\r\n    currency: this.cardInitiationUpdateForm.value.currency,\r\n    employmentType: this.cardInitiationUpdateForm.value.employmentType,\r\n    affinityProgram: this.cardInitiationUpdateForm.value.affinityProgram,\r\n    nameOnCard: this.data.nameOnCard,\r\n    status: this.data.status,\r\n    kycStatus: this.data.kycStatus,\r\n    kycReference: this.data.kycRefrence,\r\n    customerId: this.data.customerId,\r\n\r\n    cardId: this.data.cardId,\r\n  }\r\n  this.apiService.uploadCardInitiation(payload)\r\n    .subscribe((data: any) => {\r\n      this.snack.open('Data Updated!', 'OK', {\r\n        duration: 4000,\r\n        verticalPosition: 'top',\r\n        horizontalPosition: 'right'\r\n      });\r\n      let statusModel = {\r\n        cardId: data.cardId,\r\n        status: \"BACKLOG\"\r\n      };\r\n      this.apiService.updateCardStatus(statusModel).subscribe(data => {\r\n        this.dialogRef.close({\r\n          status: data.status\r\n         });\r\n      });\r\n    }, err => {\r\n      this.snack.open('Error Unable to Update Data!', 'OK', {\r\n        duration: 4000,\r\n        verticalPosition: 'top',\r\n        horizontalPosition: 'right'\r\n      });\r\n    });\r\n  \r\n}\r\n\r\n}\r\n","<div fxLayout=\"row\" fxLayoutAlign=\"end\" class=\"contain\">\r\n    <mat-icon class=\"closeIcon\" (click)=\"close()\">close</mat-icon>\r\n</div>\r\n<h1 mat-dialog-title>Card Initiation Details</h1>\r\n<mat-dialog-content>\r\n    <mat-card>\r\n\r\n\r\n        <form [formGroup]=\"cardInitiationUpdateForm\">\r\n\r\n            <div fxLayout=\"row\" fxLayoutGap=\"5%\">\r\n                <mat-form-field fxFlex=\"30%\" appearance=\"outline\">\r\n                    <mat-label>Existing Customer</mat-label>\r\n                    <input readonly=\"true\" matInput name=\"existingCustomer\" formControlName='existingCustomer' />\r\n                </mat-form-field>\r\n                <mat-form-field fxFlex=\"30%\" appearance=\"outline\">\r\n                    <mat-label>Card Type</mat-label>\r\n                    <mat-select formControlName=\"cardType\">\r\n                        <mat-option value=\"Debit\">Debit</mat-option>\r\n                        <mat-option value=\"Credit\">Credit</mat-option>\r\n                        <mat-option value=\"Forex\">Forex</mat-option>\r\n                    </mat-select>\r\n                    <mat-error\r\n                *ngIf=\"!cardInitiationUpdateForm.get('cardType').valid  && cardInitiationUpdateForm.get('cardType').touched\">\r\n                &nbsp;&nbsp;&nbsp; Card Type Is Required\r\n                </mat-error>\r\n                </mat-form-field>\r\n                <mat-form-field fxFlex=\"30%\" appearance=\"outline\">\r\n                    <mat-label>Customer Account</mat-label>\r\n                    <input matInput formControlName=\"customerAccount\" />\r\n                </mat-form-field>\r\n            </div>\r\n\r\n            <div fxLayout=\"row\" fxLayoutGap=\"5%\">\r\n                <mat-form-field fxFlex=\"30%\" appearance=\"outline\">\r\n                    <mat-label>Applicant Name</mat-label>\r\n                    <input matInput formControlName=\"applicantName\" />\r\n                </mat-form-field>\r\n                <mat-form-field fxFlex=\"30%\" appearance=\"outline\">\r\n                    <mat-label>Currency</mat-label>\r\n                    <mat-select formControlName=\"currency\">\r\n                        <mat-option [value]=\"currency\" *ngFor=\"let currency of localCurrencyArr\">{{currency}}</mat-option>\r\n                      </mat-select>\r\n                      <mat-error\r\n                  *ngIf=\"!cardInitiationUpdateForm.get('currency').valid  && cardInitiationUpdateForm.get('currency').touched\">\r\n                  &nbsp;&nbsp;&nbsp;Currency is Required!\r\n                </mat-error>\r\n                </mat-form-field>\r\n                <mat-form-field fxFlex=\"30%\" appearance=\"outline\">\r\n                    <mat-label>Employment Type</mat-label>\r\n                    <mat-select formControlName=\"employmentType\" placeholder=\"Select Employment Type *\">\r\n                        <mat-option *ngFor=\"let employmentType of employmentTypeArray\" [value]=\"employmentType\">{{employmentType}}\r\n                        </mat-option>\r\n                      </mat-select>\r\n                      <mat-error\r\n                  *ngIf=\"!cardInitiationUpdateForm.get('employmentType').valid  && cardInitiationUpdateForm.get('employmentType').touched\">\r\n                  &nbsp;&nbsp;&nbsp;Employment Type is Required!\r\n                </mat-error>\r\n                </mat-form-field>\r\n            </div>\r\n\r\n            <div fxLayout=\"row\">\r\n                <mat-form-field fxFlex=\"30%\" appearance=\"outline\">\r\n                    <mat-label>Affinity Program *</mat-label>\r\n                    <mat-select formControlName=\"affinityProgram\" placeholder=\"Select Affinity Program *\">\r\n                        <mat-option value=\"Affinity Program1\">Affinity Program1</mat-option>\r\n                        <mat-option value=\"Affinity Program2\">Affinity Program2</mat-option>\r\n    \r\n                      </mat-select>\r\n                      <mat-error\r\n                      *ngIf=\"!cardInitiationUpdateForm.get('affinityProgram').valid  && cardInitiationUpdateForm.get('affinityProgram').touched\">\r\n                      &nbsp;&nbsp;&nbsp;Affinity Program is Required!\r\n                    </mat-error>\r\n                </mat-form-field>\r\n            </div>\r\n\r\n        </form>\r\n    </mat-card>\r\n</mat-dialog-content>\r\n<div fxLayout=\"row\" fxLayoutAlign=\"end\" fxLayoutGap=\"20px\">\r\n    <button type=\"button\" class=\"editbtn\" \r\n    (click)=\"onSubmit()\">Save</button> \r\n                  &nbsp;&nbsp;&nbsp;\r\n                  <button type=\"button\" class=\"cancelbtn\" (click)=\"close()\">\r\n                       Cancel\r\n                  </button>\r\n</div>\r\n","import { Component, OnInit, Inject, ChangeDetectorRef} from '@angular/core';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { AppLoaderService } from 'app/shared/services/app-loader/app-loader.service';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { TasksummaryService } from '../../tasksummary.service';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-loan-disbursement-details-update',\r\n  templateUrl: './loan-disbursement-details-update.component.html',\r\n  styleUrls: ['./loan-disbursement-details-update.component.scss']\r\n})\r\nexport class LoanDisbursementDetailsUpdateComponent implements OnInit {\r\n  loanAccountId: any;\r\n  loanaccountID: any;\r\n  loanDisbursementForm: FormGroup;\r\n  disbursementDetails: any;\r\n\r\n  statusArr: any = ['BACKLOG', 'ONGOING', 'APPROVED', 'REJECTED']\r\n  arr: any = ['BACKLOG', 'ONGOINGArr', 'APPROVEDArr', 'REJECTEDArr']\r\n  BACKLOGArr: any = [];\r\n  ONGOINGArr: any = [];\r\n  REJECTEDArr: any = [];\r\n  APPROVEDArr: any = [];\r\n  \r\n  BACKLOGTotalPages: number = 0\r\n  ONGOINGTotalPages: number = 0\r\n  REJECTEDTotalPages: number = 0\r\n  APPROVEDTotalPages: number = 0\r\n\r\n  BACKLOGCount: number = 0\r\n  ONGOINGCount: number = 0\r\n  REJECTEDCount: number = 0\r\n  APPROVEDCount: number = 0\r\n\r\n  BACKLOGImage: any[] = [];\r\n  ONGOINGImage: any[] = [];\r\n  REJECTEDImage: any[] = [];\r\n  APPROVEDImage: any[] = [];\r\n\r\n  BACKLOGTotalRecords: number = 0;\r\n  ONGOINGTotalRecords: number = 0;\r\n  REJECTEDTotalRecords: number = 0;\r\n  APPROVEDTotalRecords: number = 0;\r\n\r\n  BACKLOGPage: number = 0;\r\n  ONGOINGPage: number = 0;\r\n  REJECTEDPage: number = 0;\r\n  APPROVEDPage: number = 0;\r\n  \r\n\r\n  constructor(private apiService: ApiService, @Inject(MAT_DIALOG_DATA) public data: any, private fb: FormBuilder,\r\n    private loader: AppLoaderService, private taskSumService: TasksummaryService, private cdr: ChangeDetectorRef,\r\n    private ls: LocalStoreService, public dialogRef: MatDialogRef<LoanDisbursementDetailsUpdateComponent>, private snack: MatSnackBar,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.loanaccountID = this.data.loanAccountId;\r\n    console.log('loanaccountID', this.loanaccountID)\r\n    this.buildDisbursementForm(this.data)\r\n   // this.getDisbursementDetails();\r\n  }\r\n  _keyPress(event: any) {\r\n    // console.log(\"key\",event);\r\n    const pattern = /[0-9]/;\r\n    let inputChar = String.fromCharCode(event.charCode);\r\n    console.log(\"inputChar\",inputChar);\r\n    inputChar=inputChar.toString();\r\n    console.log(\"inputChar1\",inputChar);\r\n    inputChar=inputChar\r\n    if (!pattern.test(inputChar)) {\r\n        event.preventDefault();\r\n    }\r\n   }\r\n   buildDisbursementForm(data?) {\r\n    console.log('item',data)\r\n   \r\n     \r\n    this.loanDisbursementForm= this.fb.group({\r\n        loanAccountId: [this.loanaccountID],\r\n        disbursementMode:[data ? data?.disbursementInfo?.disbursementMode:''],\r\n        totalDisbursement: [data ? data?.disbursementInfo?.totalDisbursement : ''],\r\n        numberOfDisbursement: [data ? data?.disbursementInfo?.numberOfDisbursement : ''],\r\n        multipleDisbursementRequired:[data ? data?.disbursementInfo?.multipleDisbursementRequired:true],\r\n        branchCode: [data ? data?.disbursementInfo?.branchCode : ''],\r\n        customerAccount:[data ? data?.disbursementInfo?.customerAccount:''],\r\n        loanAmount:[data ? data?.disbursementInfo?.loanAmount:''],\r\n    \r\n        marginIn: [data ? data?.disbursementInfo?.marginIn: '']\r\n  \r\n \r\n    })\r\n  }\r\n  getDisbursementDetails() {\r\n \r\n    this.apiService.loanDisbursementFetchById(this.loanaccountID).subscribe((disbursementDetails) => {\r\n \r\n      this.disbursementDetails = disbursementDetails;\r\n      console.log(\"this.disbursementDetails::\", this.disbursementDetails);\r\n    \r\n\r\n      this.buildDisbursementForm(this.disbursementDetails);\r\n      this.loanDisbursementForm.value.numberOfDisbursement = this.disbursementDetails.numberOfDisbursement;\r\n      this.loanDisbursementForm.value.totalDisbursement = this.disbursementDetails.totalDisbursement;\r\n      this.loanDisbursementForm.value.loanAmount = this.disbursementDetails.loanAmount;\r\n      this.loanDisbursementForm.value.branchCode = this.disbursementDetails.branchCode;\r\n      this.loanDisbursementForm.value.customerAccount = this.disbursementDetails.customerAccount;\r\n      this.loanDisbursementForm.value.marginIn = this.disbursementDetails.marginIn;\r\n      this.loanDisbursementForm.value.multipleDisbursementRequired = this.disbursementDetails.multipleDisbursementRequired;\r\n      // this.disbursementDetails.address2 = this.loanDisbursementForm.value.street;\r\n    }, (err: any) => {\r\n      this.loader.close();\r\n    });\r\n  }\r\n\r\n  goToClose(): void {\r\n    this.dialogRef.close();\r\n\r\n    this.apiService.loanDisbursementFetchById(this.loanaccountID).subscribe((disbursementDetails: any) => {\r\n      console.log(\"All Account Service\", disbursementDetails);\r\n      this.disbursementDetails = disbursementDetails;\r\n      //this.buildformGroup(this.loanAccountDetails);\r\n      console.log(\"this.accountDetails\", this.disbursementDetails);\r\n      console.log('form',this.loanDisbursementForm.value)\r\n   });\r\n   \r\n  }\r\n  submitForm1(){\r\n    \r\n   \r\n\r\n    let payload={\r\n      // loanAccountId: this.showEditOption ? this.loanaccountID : null,\r\n      loanAccountId: this.data.loanAccountId,\r\n      disbursementMode:this.loanDisbursementForm.value.disbursementMode,\r\n      totalDisbursement:this.loanDisbursementForm.value.totalDisbursement,\r\n      numberOfDisbursement: this.loanDisbursementForm.value.numberOfDisbursement,  \r\n      multipleDisbursementRequired:this.loanDisbursementForm.value.multipleDisbursementRequired,\r\n      branchCode:this.loanDisbursementForm.value.branchCode,\r\n      customerAccount: this.loanDisbursementForm.value.customerAccount,\r\n      loanAmount: this.loanDisbursementForm.value.loanAmount,\r\n      marginIn: this.loanDisbursementForm.value.marginIn,\r\n      \r\n  \r\n  \r\n    }\r\n    console.log(\"payload\",payload)\r\n    this.apiService.loanDisbursementSave(payload).subscribe(data => {\r\n      console.log(\"data\",data.loanAccountId);\r\n      this.loanaccountID = this.data.loanAccountId;\r\n      console.log('loanaccountID', this.loanaccountID)\r\n      this.assign(this.data.loanAccountId)\r\n      if (data === 200 || data !== null) {\r\n        let statusModel = {\r\n          loanAccountId: this.data.loanAccountId,\r\n          status: \"ONGOING\"\r\n        };\r\n        this.apiService.updateLoanDetailsStatus(statusModel).subscribe(data => {\r\n        });\r\n      //  sessionStorage.setItem('loanAccountId', data.loanAccountid);\r\n        let fundStatus = {\r\n          loanAccountid: this.data.loanAccountId\r\n          \r\n        };\r\n       \r\n\r\n        this.ls.setItem('fundByStatus', fundStatus);\r\n        this.ls.setItem('accountType', data.accountType);\r\n        this.ls.setItem('productName',data.businessProductName);    \r\n        this.loanaccountID = this.data.loanAccountId;\r\n        console.log(\"this.productaccountID\",this.loanaccountID);\r\n        this.snack.open('Data Updated!', 'OK', {\r\n          duration: 4000,\r\n          verticalPosition: 'top',\r\n          horizontalPosition: 'right'\r\n        });\r\n        this.getDataOnLoad();\r\n      }\r\n      if( data === 500){\r\n        this.snack.open('Not able to connect to server!', 'INTERNAL SERVER ERROR', {\r\n          duration: 4000,\r\n          verticalPosition: 'top',\r\n          horizontalPosition: 'right'\r\n        });\r\n        console.log(\"500 error\")\r\n      }\r\n      \r\n      this.goToClose();\r\n    })\r\n  }\r\n  assign(valueForaccId) {\r\n    this.apiService.setAccountId({\r\n      loanAccountId: valueForaccId\r\n    });\r\n    console.log(\"loan\", this.loanAccountId)\r\n  }\r\n\r\n  async getDataOnLoad() {\r\n    for (let index = 0; index < this.statusArr.length; index++) {\r\n      const statusItem = this.statusArr[index];\r\n      this.fetchCustomerInfo(statusItem);\r\n    }\r\n\r\n  }\r\n\r\n   fetchCustomerInfo(status:string){\r\n   \r\n    this.taskSumService.getallLoanAccountData(status)\r\n            .subscribe((custResp:any) => {\r\n              console.log(\"Response\", custResp);\r\n              this.updateStatusResponse(status, custResp);\r\n            });\r\n  }\r\n\r\n  updateStatusResponse(status, data){\r\n    console.log(\"data\", data)\r\n    console.log(\"status\", status)\r\n      if (status == 'ONGOING') {\r\n      this.ONGOINGArr = data?.loanList;\r\n      this.ONGOINGTotalPages = data?.totalPages;\r\n      this.ONGOINGTotalRecords = data?.totalNoOfElements;\r\n    }\r\n \r\n\r\n    this.cdr.markForCheck();\r\n}\r\n\r\n}\r\n","<div >\r\n    <mat-dialog-content>\r\n      <div fxLayout=\"row\" class=\"contain\">\r\n        <mat-icon style=\"padding-left: 100%;\"class=\"backIcon\" (click)=\"goToClose()\">close</mat-icon>\r\n    </div>\r\n      <h1>Loan Disbursement Details</h1>\r\n      <form class=\"mt-32\" [formGroup]=\"loanDisbursementForm\">\r\n        <div fxLayout=\"row wrap\" fxLayout.lt-sm=\"column\" >\r\n          <div fxFlex=\"33.33\" class=\"pr-16\">\r\n            <mat-label>Disbursement Mode </mat-label>\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n              <mat-select placeholder=\"Disbursement Mode\" formControlName=\"disbursementMode\">\r\n                <mat-option value=\"\">Select</mat-option>\r\n                <mat-option value=\"mode1\">Auto Disbursement</mat-option>\r\n                <mat-option value=\"mode12\">Manual Disbursement </mat-option>\r\n              </mat-select>\r\n            </mat-form-field>\r\n          </div>\r\n    \r\n          <div fxFlex=\"33.33\" class=\"pr-16\">\r\n            <mat-label>Number of Disbursement</mat-label>\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                <input matInput name=\"numberOfDisbursement\" formControlName=\"numberOfDisbursement\"  \r\n                maxlength=\"6\"   (keypress)=\"_keyPress($event)\" />\r\n            </mat-form-field>\r\n          </div>\r\n          <div fxFlex=\"33.33\" class=\"pr-16\">\r\n            <mat-label>Total Disbursement</mat-label>\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                <input matInput name=\"totalDisbursement\" formControlName=\"totalDisbursement\"  \r\n                maxlength=\"6\"   (keypress)=\"_keyPress($event)\" />\r\n            </mat-form-field>\r\n          </div>\r\n       \r\n          \r\n        </div>\r\n    \r\n        <div fxLayout=\"row wrap\">\r\n          \r\n          <div fxFlex=\"33.33\" class=\"pr-16\">\r\n            <mat-label>Loan Amount</mat-label>\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n          <input matInput name=\"loanAmount\" formControlName=\"loanAmount\"  (keypress)=\"_keyPress($event)\" >\r\n            </mat-form-field>\r\n          </div>\r\n          <div fxFlex=\"33.33\" class=\"pr-16\">\r\n            <mat-label>Branch Code </mat-label>\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n              <input matInput name=\"branchCode\" formControlName=\"branchCode\"  \r\n              (keypress)=\"_keyPress($event)\"   />\r\n            </mat-form-field>\r\n          </div>\r\n    \r\n          <div fxFlex=\"33.33\" class=\"pr-16\">\r\n            <mat-label>Customer Account</mat-label>\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n              <input matInput name=\"customerAccount\" formControlName=\"customerAccount\"  \r\n              />\r\n            </mat-form-field>\r\n          </div>\r\n        </div>\r\n        <div fxLayout=\"row wrap\">\r\n          <div fxFlex=\"33.33\" class=\"pr-16\">\r\n            <mat-label>Multiple Disbursement Required?</mat-label>\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n              <input matInput name=\"multipleDisbursementRequired\" formControlName=\"multipleDisbursementRequired\"  \r\n              />\r\n              <!-- <mat-slide-toggle formControlName=\"multipleDisbursementRequired\"></mat-slide-toggle> -->\r\n            </mat-form-field>\r\n          </div>\r\n\r\n          <div fxFlex=\"33.33\" class=\"pr-16\">\r\n            <mat-label>Margin In</mat-label>\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n               <input matInput name=\"marginIn\" formControlName=\"marginIn\"  (keypress)=\"_keyPress($event)\"\r\n              /> \r\n            \r\n            </mat-form-field>\r\n          \r\n          </div>\r\n          <div fxFlex=\"33.33\" class=\"pr-16\">\r\n            <!-- <mat-label>Phone Number</mat-label>\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n              <input matInput name=\"mobileNumber\" formControlName=\"mobileNumber\"  \r\n              maxlength=\"10\"\r\n              (keypress)=_keyPress($event) />\r\n            </mat-form-field> -->\r\n          </div>\r\n    \r\n         \r\n        </div>\r\n  \r\n       \r\n       \r\n      </form>\r\n    </mat-dialog-content>\r\n    <mat-dialog-actions align=\"end\">\r\n      <button mat-button (click)=\"submitForm1()\">\r\n        Update\r\n      </button>\r\n      <button mat-button (click)=\"goToClose()\">Close</button>\r\n    </mat-dialog-actions>\r\n</div>","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { CorporateOnboardingService } from 'app/views/others/onboarding-corporate/corporate-onboarding.service';\r\n@Component({\r\n  selector: 'app-update-corporate-addititonal-info',\r\n  templateUrl: './update-corporate-addititonal-info.component.html',\r\n  styleUrls: ['./update-corporate-addititonal-info.component.scss']\r\n})\r\nexport class UpdateCorporateAddititonalInfoComponent implements OnInit {\r\n  otherInfoUpdateForm: FormGroup;\r\n  organizationTypeList: any = ['Public', 'Private'];\r\n  typeOfOwnershipList: any = ['Independent', 'Dependent'];\r\n  kycStatusList: any = ['APPROVED', 'BACKLOG', 'INITIATED', 'REJECTED'];\r\n  otherDocumentArray: any[] = [];\r\n  corporateId: any;\r\n  documentTypeList: string[];\r\n  selectedOptions: any[] = [];\r\n  selectedDocumentTypes: any[] = [];\r\n  corporateDocs: any[] = [];\r\n\r\n  constructor(\r\n    private dialogRef: MatDialogRef<UpdateCorporateAddititonalInfoComponent>,\r\n    private formBuilder: FormBuilder,\r\n    @Inject(MAT_DIALOG_DATA) public data,\r\n    private ls: LocalStoreService,\r\n    private apiService: ApiService,\r\n    private corporateService: CorporateOnboardingService,\r\n    private snack: MatSnackBar\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    console.log(this.data);\r\n    this.corporateId = this.ls.getItem('corporateId')\r\n    this.apiService.getDropDownValues(\"document_type\").subscribe((data) => {\r\n      this.documentTypeList = data;\r\n    });\r\n    if (this.data) {\r\n      this.data.corporateDocs = this.data.corporateDocs.filter(x => x.documentName != 'Profile')\r\n      this.buildOtherFormGroup(this.data);\r\n      for (let i = 0; i < this.data.corporateDocs.length; i++) {\r\n        this.addDocument()\r\n        this.otherInfoUpdateForm.controls.corporateDocs['controls'][i].controls.documentType.setValue(this.data.corporateDocs[i].documentName);\r\n        this.otherInfoUpdateForm.controls.corporateDocs['controls'][i].controls.fileData.setValue(this.data.corporateDocs[i].fileUrl); \r\n        this.otherInfoUpdateForm.controls.corporateDocs['controls'][i].controls.documentName.setValue(this.data.corporateDocs[i].fileName);\r\n      }\r\n    }\r\n  }\r\n\r\n  buildOtherFormGroup(data?) {\r\n    this.otherInfoUpdateForm = this.formBuilder.group({\r\n      corporateId: [this.corporateId],\r\n      organizationType: [data ? data.organizationType : '',Validators.required],\r\n      typeOfOwnership: [data ? data.typeOfOwnership : '',Validators.required],\r\n      kycReference: [data ? data.kycReference : ''],\r\n      KycStatus: [data ? data.kycStatus : ''],\r\n      corporateDocs: this.formBuilder.array([])\r\n    })\r\n  }\r\n  get getDocumentList() {\r\n    return this.otherInfoUpdateForm.get('corporateDocs') as FormArray;\r\n  }\r\n  addDocument() {\r\n    this.getDocumentList.push(this.formBuilder.group({\r\n      documentType: ['',[Validators.required]],\r\n      documentName: ['', [Validators.required]],\r\n      fileData: ['']\r\n    }));\r\n  }\r\n  deleteDocument(item, i) {\r\n    this.getDocumentList.removeAt(i);\r\n  }\r\n  isDocumentOptionDisabled = (value) => {\r\n    return this.selectedOptions.includes(value);\r\n  }\r\n  changeValue(value: any, index) {\r\n\r\n    console.log(index);\r\n    if (this.selectedDocumentTypes[index]) {\r\n      this.selectedOptions = this.selectedOptions.filter(val => val !== this.selectedDocumentTypes[index])\r\n    }\r\n    this.selectedDocumentTypes[index] = value;\r\n\r\n    console.log(value)\r\n    this.selectedOptions.push(value);\r\n  }\r\n  onOtherDocSelect(files: FileList, idx: any, fileName: String) {\r\n    this.otherDocumentArray.push(files.item(0));\r\n    this.otherInfoUpdateForm.get('corporateDocs')['controls'][idx].controls.documentName.setValue(fileName);\r\n    let reader = new FileReader();\r\n    reader.readAsDataURL(files.item(0));\r\n    reader.onload = (event2) => {\r\n      this.otherInfoUpdateForm.get('corporateDocs')['controls'][idx].controls.fileData.setValue(reader.result);\r\n    };\r\n  }\r\n  onSubmit(otherInfoUpdateForm) {\r\n    let obj = {}\r\n    Object.keys(otherInfoUpdateForm).map(function (key, index) {\r\n      if (key != 'corporateDocs') {\r\n        obj[key] = otherInfoUpdateForm[key]\r\n      }\r\n    });\r\n    this.corporateService.saveOrUpdateCorporateAccountInfo(obj)\r\n      .subscribe(data => {\r\n        if (data != null) {\r\n          for (let i = 0; i < this.otherInfoUpdateForm.get('corporateDocs').value.length; i++) {\r\n            if (this.otherDocumentArray.length > 0) {\r\n              let documentToBeUploaded: any = {};\r\n              documentToBeUploaded.documentName = this.otherInfoUpdateForm.get('corporateDocs').value[i].documentType;\r\n              documentToBeUploaded.documentType = 2;\r\n              documentToBeUploaded.fileType = this.otherDocumentArray[i].type;\r\n              documentToBeUploaded.fileName = this.otherDocumentArray[i].name;\r\n              documentToBeUploaded.corporateId = data.corporateId;\r\n              documentToBeUploaded.id = this.otherDocumentArray[i].id;\r\n              const uploadData = new FormData();\r\n              uploadData.append('data', JSON.stringify(documentToBeUploaded));\r\n              uploadData.append('file', this.otherDocumentArray[i]);\r\n              this.apiService.uploadCorporateDocument(uploadData).subscribe((resp) => {\r\n                console.log(resp);\r\n                this.corporateDocs.push(resp)\r\n              });\r\n            }\r\n          }\r\n        } else {\r\n          this.snack.open('Not able to connect to server!', 'INTERNAL SERVER ERROR', {\r\n            duration: 4000,\r\n            verticalPosition: 'top',\r\n            horizontalPosition: 'right'\r\n          });\r\n        }\r\n        this.dialogRef.close({\r\n          status:'INITIATED',\r\n          resp:{typeOfOwnership:data.typeOfOwnership, organizationType:data.organizationType, corporateDocs:this.corporateDocs}\r\n        })\r\n      }, error => {\r\n        console.log('error resp :: ', error);\r\n        this.snack.open(`${error.error.message} `, 'OK', {\r\n          duration: 4000,\r\n          verticalPosition: 'top',\r\n          horizontalPosition: 'right'\r\n        });\r\n      });\r\n  }\r\n  _keyPress(event: any) {\r\n    const pattern = /[0-9]/;\r\n    let inputChar = String.fromCharCode(event.charCode);\r\n    if (!pattern.test(inputChar)) {\r\n      event.preventDefault();\r\n\r\n    }\r\n  }\r\n  close() {\r\n    this.dialogRef.close({\r\n      status: 'UNDER_PROCESS'\r\n    })\r\n  }\r\n}\r\n","<div fxLayout=\"row\" fxLayoutAlign=\"end\">\r\n    <mat-icon class=\"closeIcon\" (click)=\"close()\">close</mat-icon>\r\n</div>\r\n<h1>Other Information</h1>\r\n<mat-dialog-content>\r\n    <form [formGroup]=\"otherInfoUpdateForm\">\r\n        <div>\r\n            <h3>Organization Information</h3> \r\n            <hr/>\r\n            <div  fxLayout=\"row wrap\" class=\"full-width\">\r\n                   <div fxFlex=\"33%\" fxFl50ex.xs=\"100%\" class=\"full-width\">\r\n                    <mat-hint class=\"hintClass\">Organization Type</mat-hint>\r\n                    <mat-card class=\"inputCard\">\r\n                        <mat-select id=\"forOrganizationType\" formControlName=\"organizationType\" required>\r\n                            <mat-option disabled>select</mat-option>\r\n                            <mat-option *ngFor=\"let orgType of organizationTypeList\" [value]=\"orgType\">\r\n                                {{orgType}}\r\n                            </mat-option>\r\n                        </mat-select>\r\n                    </mat-card>\r\n                </div>\r\n                <div fxFlex=\"33%\" fxFlex.xs=\"100%\" class=\"full-width\">\r\n                    <mat-hint class=\"hintClass\">Type of Ownership</mat-hint>\r\n                    <mat-card class=\"inputCard\">\r\n                        <mat-select id=\"forTypeOfOwnership\" formControlName=\"typeOfOwnership\" required>\r\n                            <mat-option disabled>select</mat-option>\r\n                            <mat-option *ngFor=\"let typeOfOwnership of typeOfOwnershipList\" [value]=\"typeOfOwnership\">\r\n                                {{typeOfOwnership}}\r\n                            </mat-option>\r\n                        </mat-select>\r\n                    </mat-card>\r\n                    <mat-error\r\n                        *ngIf=\"otherInfoUpdateForm.get('typeOfOwnership').touched && !otherInfoUpdateForm.get('typeOfOwnership').valid\">\r\n                        Type Of Ownership is Required!\r\n                    </mat-error>\r\n                </div>\r\n                <!-- <h3 visible=\"true\" fxFlex=\"100\">KYC Information</h3>\r\n                <div  fxLayout=\"row wrap\" class=\"full-width\">\r\n                <div fxFlex=\"33%\" fxFlex.xs=\"100%\" class=\"full-width\">\r\n                    <mat-hint class=\"hintClass\">KYC Status</mat-hint>\r\n                    <mat-card class=\"inputCard\">\r\n                        <mat-select id=\"forkycStatus\" formControlName=\"KycStatus\">\r\n                            <mat-option disabled>select---</mat-option>\r\n                            <mat-option *ngFor=\"let kycStat of kycStatusList\" [value]=\"kycStat\">\r\n                                {{kycStat}}\r\n                            </mat-option>\r\n                        </mat-select>\r\n                    </mat-card>\r\n                    <mat-error\r\n                        *ngIf=\"otherInfoUpdateForm.get('typeOfOwnership').touched && !otherInfoUpdateForm.get('typeOfOwnership').valid\">\r\n                        Type Of Ownership is Required!\r\n                    </mat-error>\r\n                </div>\r\n                <div fxFlex=\"33%\" fxFlex.xs=\"100%\" class=\"full-width\">\r\n                    <mat-hint class=\"hintClass\">KYC Reference</mat-hint>\r\n                    <mat-card class=\"inputCard\">\r\n                        <input matInput id=\"forkycReference\" formControlName=\"kycReference\">\r\n                    </mat-card>\r\n                </div>\r\n                </div> -->\r\n\r\n            <div formArrayName=\"corporateDocs\">\r\n                <div *ngFor=\"let item of otherInfoUpdateForm.get('corporateDocs')['controls']; let i = index;\" \r\n                    [formGroupName]=\"i\">\r\n                        <legend visible=\"true\" *ngIf='i==0'>Document Upload</legend>\r\n                        <div fxLayout=\"row wrap\" class=\"full-width\">\r\n                            <div fxFlex=\"100\" fxLayoutGap=\"20px\" class=\"padding\">\r\n                                    <div fxFlex=\"50\" fxFlex.xs=\"100%\" class=\"full-width\">\r\n                                        <mat-hint class=\"hintClass\">Document Type*</mat-hint>\r\n                                        <mat-card class=\"inputCard\">\r\n                                            <mat-select id=\"forDocumentType\" formControlName=\"documentType\" required\r\n                                            (valueChange)=\"changeValue($event, i)\">\r\n                                            <mat-option disabled>select</mat-option>\r\n                                            <mat-option *ngFor=\"let docType of documentTypeList\"\r\n                                                [disabled]=isDocumentOptionDisabled(docType) [value]=\"docType\">\r\n                                                {{docType}}\r\n                                            </mat-option>\r\n                                        </mat-select>\r\n                                        </mat-card>\r\n                                        <mat-error\r\n                                        *ngIf=\"item.get('documentType').touched && !item.get('documentType').valid\">\r\n                                        <small>Document Type is Required!</small>\r\n                                    </mat-error>\r\n                                    </div>\r\n                                <div class=\"pt20\" fxFlex=\"20%\" fxFlex.xs=\"100%\">\r\n                                    <img height=\"80px\" width=\"85px\" [src]=\"item.controls['fileData'].value\">\r\n                                </div>\r\n\r\n                                <div fxFlex=\"30\" fxLayoutGap=\"5px\"\r\n                                    style=\"display: flex;margin-top: 20px;align-content: center; margin-left:30px;\">\r\n                                    <input style=\"display: none;margin-top: 20px;\" class=\"default-background\"\r\n                                        type=\"file\" name=\"fileData\" #fileData formControlName=\"fileData\"\r\n                                        (change)=\"onOtherDocSelect($event.target.files, i, fileData.files[0].name)\">\r\n                                    <button mat-button style=\"text-decoration: underline; color:#456EFE;\"\r\n                                        (click)=\"fileData.click()\" [routerLink]=\"\">Browse</button>\r\n                                    <button mat-button (click)=\"deleteDocument(item,i)\">\r\n                                        <mat-icon style=\"color: tomato;\">delete_outline</mat-icon>\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                </div>\r\n                <div fxLayout=\"row wrap\">\r\n                    <div fxFlex=\"100\" fxLayoutGap=\"1px\">\r\n                        <div fxFlex=\"1\"></div>\r\n                        <div fxFlex=\"20\">\r\n                            <button mat-button (click)=\"addDocument()\" color=\"primary\">\r\n                                <mat-icon>add</mat-icon> ADD DOCUMENT\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n        </div>\r\n    </form>\r\n</mat-dialog-content>\r\n<div fxLayout=\"row\" fxLayoutAlign=\"end\" fxLayoutGap=\"20px\">\r\n    <button type=\"button\" class=\"editbtn\" mat-raised-button [disabled]=\"otherInfoUpdateForm.invalid\"\r\n        (click)=\"onSubmit(otherInfoUpdateForm.value)\">Save</button>\r\n    &nbsp;&nbsp;&nbsp;\r\n    <button type=\"button\" class=\"cancelbtn\" (click)=\"close()\">\r\n        Cancel\r\n    </button>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { TaskRoutes } from './tasks-routing';\r\nimport { RouterModule } from '@angular/router';\r\nimport { TaskSummaryComponent } from './task-summary/task-summary.component';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport {MatCardModule} from '@angular/material/card';\r\nimport {MatMenuModule} from '@angular/material/menu';\r\nimport { ApproverComponent } from './approver/approver.component';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { NgApexchartsModule } from \"ng-apexcharts\";\r\n\r\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\r\nimport { KycBranchVerifySummaryComponent } from './kyc-branch-verify-summary/kyc-branch-verify-summary.component';\r\nimport { KycTaskSummaryComponent } from './kyc-task-summary/kyc-task-summary.component';\r\nimport { CustOnBoardingTaskSummaryComponent } from './cust-on-boarding-task-summary/cust-on-boarding-task-summary.component';\r\nimport { CustOnBoardingApproverComponent } from './cust-on-boarding-approver/cust-on-boarding-approver.component';\r\n\r\nimport {MatStepperModule} from '@angular/material/stepper';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport {  ReactiveFormsModule  } from '@angular/forms';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { InfiniteScrollModule } from \"ngx-infinite-scroll\";\r\nimport { MatPaginator, MatPaginatorModule } from '@angular/material/paginator';\r\n// search module\r\nimport { Ng2SearchPipeModule } from 'ng2-search-filter';\r\nimport { CustomSearchFilterPipe } from 'app/shared/pipes/custom-search-filter.pipe';\r\nimport { CustomTaskSummarySortingPipe } from 'app/shared/pipes/custom-task-summary-sorting.pipe';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { SharedMaterialModule } from 'app/shared/shared-material.module';\r\nimport { SharedDirectivesModule } from 'app/shared/directives/shared-directives.module';\r\nimport { AvatarComponent } from './avatar/avatar.component';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { CorporateTaskSummaryComponent } from './corporate-task-summary/corporate-task-summary.component';\r\nimport { CorporateApproverComponent } from './corporate-approver/corporate-approver.component';\r\nimport { CardOriginationTaskSummaryComponent } from './card-origination-task-summary/card-origination-task-summary.component';\r\nimport { CardAccountApproverComponent } from './card-account-approver/card-account-approver.component';\r\nimport { LoanAccountTaskSummaryComponent } from './loan-account-task-summary/loan-account-task-summary.component';\r\nimport { LoanAccountApproverComponent } from './loan-account-approver/loan-account-approver.component';\r\nimport { LoanAccountDetailsEditComponent } from './loan-account-approver/loan-account-details-edit/loan-account-details-edit.component';\r\nimport { LoanAccountDetailsUpdateComponent } from './loan-account-approver/loan-account-details-update/loan-account-details-update.component';\r\nimport { LoanMandateDetailsUpdateComponent } from './loan-account-approver/loan-mandate-details-update/loan-mandate-details-update.component';\r\nimport { LoanCollateralDetailsUpdateComponent } from './loan-account-approver/loan-collateral-details-update/loan-collateral-details-update.component';\r\nimport { LoanGuarantorDetailsUpdateComponent } from './loan-account-approver/loan-guarantor-details-update/loan-guarantor-details-update.component';\r\nimport { LoanDisbursementDetailsUpdateComponent } from './loan-account-approver/loan-disbursement-details-update/loan-disbursement-details-update.component';\r\nimport { LoanRepaymentDetailsUpdateComponent } from './loan-account-approver/loan-repayment-details-update/loan-repayment-details-update.component';\r\nimport { LoanCreditDetailsUpdateComponent } from './loan-account-approver/loan-credit-details-update/loan-credit-details-update.component';\r\nimport { LoanValuationOfAssetUpdateComponent } from './loan-account-approver/loan-valuation-of-asset-update/loan-valuation-of-asset-update.component';\r\nimport { LoanLegalOpinionUpdatesComponent } from './loan-account-approver/loan-legal-opinion-updates/loan-legal-opinion-updates.component';\r\nimport { LoanAssessmentDetailsUpdateComponent } from './loan-account-approver/loan-assessment-details-update/loan-assessment-details-update.component';\r\nimport { LoanOfferIssueDetailsUpdateComponent } from './loan-account-approver/loan-offer-issue-details-update/loan-offer-issue-details-update.component';\r\nimport { LoanApprovalDetailsUpdateComponent } from './loan-account-approver/loan-approval-details-update/loan-approval-details-update.component';\r\nimport { CardInitiationDetailsUpdateComponent } from './card-account-approver/card-initiation-details-update/card-initiation-details-update.component';\r\nimport { CardFinancialDetailsUpdateComponent } from './card-account-approver/card-financial-details-update/card-financial-details-update.component';\r\nimport { CardInterestDetailsUpdateComponent } from './card-account-approver/card-interest-details-update/card-interest-details-update.component';\r\nimport { CardChargeDetailsUpdateComponent } from './card-account-approver/card-charge-details-update/card-charge-details-update.component';\r\nimport { CardCreditScoreUpdateComponent } from './card-account-approver/card-credit-score-update/card-credit-score-update.component';\r\nimport { CardAssessmentReportUpdateComponent } from './card-account-approver/card-assessment-report-update/card-assessment-report-update.component';\r\nimport { CardApprovalDetailsUpdateComponent } from './card-account-approver/card-approval-details-update/card-approval-details-update.component';\r\nimport { CardPreferenceDetailsUpdateComponent } from './card-account-approver/card-preference-details-update/card-preference-details-update.component';\r\nimport { UpdatePrimaryInfoComponent } from './cust-on-boarding-approver/update-primary-info/update-primary-info.component';\r\nimport { UpdateContactInfoComponent } from './cust-on-boarding-approver/update-contact-info/update-contact-info.component';\r\nimport { UpdateProofOfIdentityComponent } from './cust-on-boarding-approver/update-proof-of-identity/update-proof-of-identity.component';\r\nimport { UpdateAdditionalInfoComponent } from './cust-on-boarding-approver/update-additional-info/update-additional-info.component';\r\nimport { UpdateMandateInfoComponent } from './cust-on-boarding-approver/update-mandate-info/update-mandate-info.component';\r\nimport { UpdateCorporateBasicInfoComponent } from './corporate-approver/update-corporate-basic-info/update-corporate-basic-info.component';\r\nimport { UpdateDirectorDetailsComponent } from './corporate-approver/update-director-details/update-director-details.component';\r\nimport { UpdateCorporateContactInfoComponent } from './corporate-approver/update-corporate-contact-info/update-corporate-contact-info.component';\r\nimport { UpdateCorporateIdentityComponent } from './corporate-approver/update-corporate-identity/update-corporate-identity.component';\r\nimport { UpdateCorporateAddititonalInfoComponent } from './corporate-approver/update-corporate-addititonal-info/update-corporate-addititonal-info.component';\r\nimport { OnboardingCorporateModule } from '../others/onboarding-corporate/onboarding-corporate.module';\r\nimport { OthersModule } from '../others/others.module';\r\nimport { KycBasicInfoUpdateComponent } from './kyc-branch-verify-summary/kyc-basic-info-update/kyc-basic-info-update.component';\r\nimport { KycCommunicationAddressUpdateComponent } from './kyc-branch-verify-summary/kyc-communication-address-update/kyc-communication-address-update.component';\r\nimport { KycAppointmentScheduleUpdateComponent } from './kyc-branch-verify-summary/kyc-appointment-schedule-update/kyc-appointment-schedule-update.component';\r\nimport { KycDocumentUpdateComponent } from './kyc-branch-verify-summary/kyc-document-update/kyc-document-update.component';\r\nimport { KycBiometricUpdateComponent } from './kyc-branch-verify-summary/kyc-biometric-update/kyc-biometric-update.component';\r\nimport { AccountDetailsUpdateComponent } from './approver/account-details-update/account-details-update.component';\r\nimport { CustomerInfoUpdateComponent } from './approver/customer-info-update/customer-info-update.component';\r\nimport { MandateDetailsUpdateComponent } from './approver/mandate-details-update/mandate-details-update.component';\r\nimport { ServiceDetailsUpdateComponent } from './approver/service-details-update/service-details-update.component';\r\nimport { NomineeDetailsUpdateComponent } from './approver/nominee-details-update/nominee-details-update.component';\r\nimport { SecuredOverdraftDetailsUpdateComponent } from './approver/secured-overdraft-details-update/secured-overdraft-details-update.component';\r\nimport { UnsecuredOverdraftDetailsUpdateComponent } from './approver/unsecured-overdraft-details-update/unsecured-overdraft-details-update.component';\r\nimport { FinancialDetailsUpdateComponent } from './approver/financial-details-update/financial-details-update.component';\r\nimport { InterestDetailsUpdateComponent } from './approver/interest-details-update/interest-details-update.component';\r\nimport { ChargeDetailsUpdateComponent } from './approver/charge-details-update/charge-details-update.component';\r\nimport { FundingDetailsUpdateComponent } from './approver/funding-details-update/funding-details-update.component';\r\nimport { ApprovalDetailsUpdateComponent } from './approver/approval-details-update/approval-details-update.component';\r\nimport { QualitativeDetailsUpdateComponent } from './approver/qualitative-details-update/qualitative-details-update.component';\r\n@NgModule({\r\n  declarations: [TaskSummaryComponent, ApproverComponent, KycBranchVerifySummaryComponent, KycTaskSummaryComponent,\r\n    CustOnBoardingTaskSummaryComponent, \r\n    CustOnBoardingApproverComponent,\r\n    CustomSearchFilterPipe,\r\n    CustomTaskSummarySortingPipe,\r\n    AvatarComponent,\r\n    CorporateTaskSummaryComponent,\r\n    CorporateApproverComponent,\r\n    CardOriginationTaskSummaryComponent,\r\n    CardAccountApproverComponent,\r\n    LoanAccountTaskSummaryComponent,\r\n    LoanAccountApproverComponent,\r\n    LoanAccountDetailsEditComponent,\r\n    LoanAccountDetailsUpdateComponent,\r\n    LoanMandateDetailsUpdateComponent,\r\n    LoanCollateralDetailsUpdateComponent,\r\n    LoanGuarantorDetailsUpdateComponent,\r\n    LoanDisbursementDetailsUpdateComponent,\r\n    LoanRepaymentDetailsUpdateComponent,\r\n    LoanCreditDetailsUpdateComponent,\r\n    LoanValuationOfAssetUpdateComponent,\r\n    LoanLegalOpinionUpdatesComponent,\r\n    LoanAssessmentDetailsUpdateComponent,\r\n    LoanOfferIssueDetailsUpdateComponent,\r\n    LoanApprovalDetailsUpdateComponent,\r\n    CardInitiationDetailsUpdateComponent,\r\n    CardFinancialDetailsUpdateComponent,\r\n    CardInterestDetailsUpdateComponent,\r\n    CardChargeDetailsUpdateComponent,\r\n    CardCreditScoreUpdateComponent,\r\n    CardAssessmentReportUpdateComponent,\r\n    CardApprovalDetailsUpdateComponent,\r\n    CardPreferenceDetailsUpdateComponent,\r\n    UpdatePrimaryInfoComponent,\r\n    UpdateContactInfoComponent,\r\n    UpdateProofOfIdentityComponent,\r\n    UpdateAdditionalInfoComponent,\r\n    UpdateMandateInfoComponent,\r\n    UpdateCorporateBasicInfoComponent,\r\n    UpdateDirectorDetailsComponent,\r\n    UpdateCorporateContactInfoComponent,\r\n    UpdateCorporateIdentityComponent,\r\n    UpdateCorporateAddititonalInfoComponent,\r\n    KycBasicInfoUpdateComponent,\r\n    KycCommunicationAddressUpdateComponent,\r\n    KycAppointmentScheduleUpdateComponent,\r\n    KycDocumentUpdateComponent,\r\n    KycBiometricUpdateComponent,\r\n    AccountDetailsUpdateComponent,\r\n    CustomerInfoUpdateComponent,\r\n    MandateDetailsUpdateComponent,\r\n    ServiceDetailsUpdateComponent,\r\n    NomineeDetailsUpdateComponent,\r\n    SecuredOverdraftDetailsUpdateComponent,\r\n    UnsecuredOverdraftDetailsUpdateComponent,\r\n    FinancialDetailsUpdateComponent,\r\n    InterestDetailsUpdateComponent,\r\n    ChargeDetailsUpdateComponent,\r\n    QualitativeDetailsUpdateComponent,\r\n    FundingDetailsUpdateComponent,\r\n    ApprovalDetailsUpdateComponent\r\n\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatMenuModule,\r\n    MatInputModule,\r\n    FlexLayoutModule,\r\n    MatIconModule,\r\n    MatCardModule,\r\n    Ng2SearchPipeModule,\r\n    MatStepperModule,\r\n    MatDividerModule,\r\n    MatFormFieldModule,\r\n    SharedDirectivesModule,\r\n    MatDatepickerModule,\r\n    MatRadioModule,\r\n    MatProgressSpinnerModule,\r\n    InfiniteScrollModule,\r\n    MatPaginatorModule,\r\n    MatSlideToggleModule,\r\n    NgApexchartsModule,\r\n    SharedMaterialModule,\r\n    //TasksRoutingModule,\r\n    RouterModule.forChild(TaskRoutes),\r\n    OnboardingCorporateModule,\r\n    OthersModule\r\n  ],\r\n  providers: [\r\n    { provide: MatDialogRef, useValue: {} },\r\n    { provide: MAT_DIALOG_DATA, useValue: [] }\r\n  ],\r\n  exports: [\r\n    LoanAccountDetailsUpdateComponent\r\n  ],\r\n})\r\nexport class TasksModule { }\r\n","import { ChangeDetectorRef, Component, Inject, OnInit } from '@angular/core';\r\nimport { FormArray } from '@angular/forms';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { TasksummaryService } from '../tasksummary.service';\r\nimport { DialogService } from 'app/shared/services/dialogs/dialog.service';\r\nimport { ApplicationEntryStageService } from 'app/shared/services/application-entry-stage.service';\r\nimport { LoanAccountDetailsUpdateComponent } from './loan-account-details-update/loan-account-details-update.component';\r\n// import { AppLoaderService } from 'app/shared/services/app-loader/app-loader.service';\r\nimport { LoanAccountDetailsEditComponent } from './loan-account-details-edit/loan-account-details-edit.component';\r\nimport { LoanMandateDetailsUpdateComponent } from './loan-mandate-details-update/loan-mandate-details-update.component';\r\nimport { LoanCollateralDetailsUpdateComponent } from './loan-collateral-details-update/loan-collateral-details-update.component';\r\nimport { LoanGuarantorDetailsUpdateComponent } from './loan-guarantor-details-update/loan-guarantor-details-update.component';\r\nimport { LoanDisbursementDetailsUpdateComponent } from './loan-disbursement-details-update/loan-disbursement-details-update.component';\r\nimport { LoanRepaymentDetailsUpdateComponent } from './loan-repayment-details-update/loan-repayment-details-update.component';\r\nimport { LoanCreditDetailsUpdateComponent } from './loan-credit-details-update/loan-credit-details-update.component';\r\nimport { LoanValuationOfAssetUpdateComponent } from './loan-valuation-of-asset-update/loan-valuation-of-asset-update.component';\r\nimport { LoanLegalOpinionUpdatesComponent } from './loan-legal-opinion-updates/loan-legal-opinion-updates.component';\r\nimport { LoanAssessmentDetailsUpdateComponent } from './loan-assessment-details-update/loan-assessment-details-update.component';\r\nimport { LoanOfferIssueDetailsUpdateComponent } from './loan-offer-issue-details-update/loan-offer-issue-details-update.component';\r\nimport { LoanApprovalDetailsUpdateComponent } from './loan-approval-details-update/loan-approval-details-update.component';\r\nimport { AppLoaderService } from 'app/shared/services/app-loader/app-loader.service';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\n@Component({\r\n  selector: 'app-loan-account-approver',\r\n  templateUrl: './loan-account-approver.component.html',\r\n  styleUrls: ['./loan-account-approver.component.scss']\r\n})\r\nexport class LoanAccountApproverComponent implements OnInit {\r\n  loanAccountId: any;\r\n\r\n  loanDetails_array: FormArray;\r\n  accountServiceInfo: any;\r\n  accountService_array:any;\r\n  loanAccount_array: any;\r\n  assest_array: any;\r\n  mandate_array: any;\r\n  colateral_array: any;\r\n  guranator_array: any;\r\n  loanInterest_array: any;\r\n  loanDisbusment_array: any;\r\n  loanRepayment_array: any;\r\n  loanCharge_array: any;\r\n  loanCreditScore_array: any;\r\n  valueofassest_array: any;\r\n  legaopninio_array: any;\r\n  loanassement_array: any;\r\n  offerissue_array: any;\r\n  attributes:any;\r\n  errorStatus: any;\r\n  accStatus: any;\r\n  approvedStatus: boolean;\r\n  rejectedStatus: boolean;\r\n  editScreen: boolean;\r\n  isOnGoing: string;\r\n  qualitativeScoreboardSummary : any;\r\n  loanapproval_array:any;\r\n  intrestDetails: any;\r\n  updateLoanDetails: boolean = false;\r\n  updateLoanAsset: boolean;\r\n  status: any;\r\n  customerInfoDetails : any;\r\n  ownership : string[];\r\n  noOfApplicants : number;\r\n   mandateDetails : any;\r\n  mandateDetailsArray : any;\r\n  offerDetails: any;\r\n  postOfferDetails: any;\r\n  accountCreateValue: any;\r\n  imageUrl: any;\r\n  image:object;\r\n  customerId:string;\r\n  profileData:any;\r\n  firstName:string;\r\n  lastName:string;\r\n  prefix:string;\r\n  loanInfo:any;\r\n  nameCreater:any[]=['Y','B','','D','E','T','A','E','R','C'];\r\n  createDataInfo: any;\r\n  signatureData : any;\r\n  constructor(private taskSumService: TasksummaryService, private ls: LocalStoreService, private api: ApiService,private dialogService : DialogService ,\r\n    private router: Router, public cdr: ChangeDetectorRef, private dialog: MatDialog,\r\n    private snack: MatSnackBar,public tasksummaryService: TasksummaryService,private appApiService: ApplicationEntryStageService,\r\n    private loader: AppLoaderService,\r\n     private apiService: ApiService,private sanitizer: DomSanitizer,\r\n    @Inject(MAT_DIALOG_DATA) public dataResponse: any,\r\n    public dialogRef: MatDialogRef<LoanAccountApproverComponent>,) { }\r\n\r\n  ngOnInit(): void {\r\n    console.log(\"dataResponse.dataResp.loanAccountId\",this.dataResponse.dataResp.loanAccountId);\r\n    this.loanAccountId = this.dataResponse.dataResp.loanAccountId;   \r\n    this.status = this.dataResponse.dataResp.status;\r\n    this.loanInfo = this.dataResponse.dataResp;   \r\n    this.ls.setItem('CIF_NUM_PRIMARY',this.loanInfo.customerId);\r\n    this.ls.setItem(\"NAME\",this.loanInfo.firstName + \" \" + this.loanInfo.lastName);   \r\n   // debugger\r\n    this.getCustomerInfoDetails();\r\n    this.getMandateDetails();\r\n    this.fetchOfferAcceptRejectDetails(this.loanAccountId);\r\n    this.fetchPostOfferAmendmentDetails();\r\n    this.getAccountCreateDetails();\r\n    this.getLoanAccountInfo(this.loanAccountId);\r\n        this.getAllData(this.loanAccountId);\r\n        this.getProfileImage(this.loanInfo.customerId);\r\n    // setTimeout(() => {\r\n    //   this.getAllData(this.loanAccountId);\r\n    // }, 10);\r\n  }\r\n  \r\n  getAllData(id){\r\n    // id == '' || id == null ? id = 1234 : id;\r\n    this.api.getLoanQualitativeScorecardDetails(this.loanAccountId).subscribe((response) => {\r\n      this.qualitativeScoreboardSummary = response;\r\n            \r\n    });\r\n  }\r\n  getLoanAccountInfo(loanAccountId: string){\r\n\r\n    this.taskSumService.getLoanAccountDetails(loanAccountId).subscribe((data) => {\r\n      console.log(\"data\", data)\r\n      this.loanAccount_array = data;\r\n      this.createDataInfo = Object.values(data)[20];\r\n      \r\n      \r\n      // this.loanDetails_array= this.dataResponse.dataResp.loanDetailsInfo\r\n      // console.log(this.loanAccount_array[0].offerAcceptRejectInfo);\r\n      console.log(Object.values(data))\r\n      console.log(Object.values(data)[0])\r\n      this.loanAccount_array= Object.values(data)[0];\r\n      this.assest_array= Object.values(data)[1];\r\n      this.mandate_array = Object.values(data)[4];\r\n      console.log('mandate_array', this.mandate_array.mandateId)\r\n      this.colateral_array= Object.values(data)[6];\r\n      console.log('collateral', this.colateral_array)\r\n      console.log('collateral obj',Object.values(data)[6])\r\n      console.log(Object.values(data))\r\n      this.guranator_array= Object.values(data)[7];\r\n      this.loanInterest_array= Object.values(data)[8];\r\n      this.loanDisbusment_array= Object.values(data)[9];\r\n      this.loanRepayment_array= Object.values(data)[10];\r\n      this.loanCharge_array= Object.values(data)[11];\r\n      this.accountService_array=Object.values(data)[12];\r\n      this.loanCreditScore_array= Object.values(data)[13];\r\n      this.valueofassest_array=  Object.values(data)[14];\r\n      this.legaopninio_array= Object.values(data)[15];\r\n      this.loanassement_array= Object.values(data)[16];\r\n      this.loanapproval_array= Object.values(data)[17];\r\n      this.offerissue_array=  Object.values(data)[18];\r\n\r\n      \r\n      if (Object.values(data)[0].status === 'REJECTED') {\r\n        this.approvedStatus = true;\r\n        this.rejectedStatus = true;\r\n        this.editScreen=false;\r\n      } else if (Object.values(data)[0].status === 'APPROVED') {\r\n        this.approvedStatus = true;\r\n        this.rejectedStatus = true;\r\n        this.editScreen=true;\r\n      } else if (Object.values(data)[0].status === 'ONGOING') {\r\n        this.approvedStatus = true;\r\n        this.rejectedStatus = false;\r\n        // this.isOnGoing = status;\r\n        this.editScreen=false;\r\n      } else if (Object.values(data)[0].status === 'BACKLOG') {\r\n        this.approvedStatus = false;\r\n        this.rejectedStatus = false;\r\n        this.editScreen=false;\r\n      }\r\n    });\r\n\r\n  }\r\n  goToLoanAccount(){\r\n    console.log(\"Navigating to edit screen\");\r\n  \r\n    this.ls.setItem('LOAN_ACC_ARRAY',this.loanAccount_array);\r\n    console.log(this.loanAccount_array);\r\n    let statusModel = {\r\n      loanAccountId: this.loanAccount_array.loanAccountId,\r\n      status: \"ONGOING\"\r\n    };\r\n    this.api.updateLoanDetailsStatus(statusModel).subscribe(data => {\r\n    });\r\n    this.router.navigateByUrl('/loan/account/list');\r\n    this.dialogRef.close({\r\n      message: 'Confirm',\r\n   });\r\n \r\n  }\r\n  editAsset(editType = '') {\r\n    this.openPopUp1(editType)\r\n  }\r\n  editGuarantor(editType = '') {\r\n    this.openGuarantor(editType)\r\n  }\r\n  openGuarantor(editType){\r\n\r\n   \r\n     let dialogRef: MatDialogRef<any> = this.dialog.open(LoanGuarantorDetailsUpdateComponent, {\r\n       width: '1000px',\r\n       disableClose: true,\r\n       data: { loanAccountId: this.dataResponse.dataResp.loanAccountId, gurantorInfo: this.guranator_array,editType },\r\n     })\r\n     dialogRef.afterClosed()\r\n       .subscribe(res => {\r\n         console.log('dialog closed-- ', res);\r\n         // this.loader.open();\r\n         this.getLoanAccountInfo(this.loanAccountId);\r\n         this.getAllData(this.loanAccountId);\r\n         // this.loader.close();\r\n         if(!res) {\r\n           return;\r\n         }\r\n         \r\n      \r\n       })\r\n \r\n  }\r\n  editDisbursement(editType = '') {\r\n    this.openDisbursement(editType)\r\n  }\r\n  openDisbursement(editType){\r\n   \r\n     let dialogRef: MatDialogRef<any> = this.dialog.open(LoanDisbursementDetailsUpdateComponent, {\r\n       width: '1000px',\r\n       disableClose: true,\r\n       data: { loanAccountId: this.dataResponse.dataResp.loanAccountId, disbursementInfo: this.loanDisbusment_array,editType },\r\n     })\r\n     dialogRef.afterClosed()\r\n       .subscribe(res => {\r\n         console.log('dialog closed-- ', res);\r\n         this.getLoanAccountInfo(this.loanAccountId);\r\n         this.getAllData(this.loanAccountId);\r\n      \r\n         if(!res) {\r\n           return;\r\n         }\r\n         \r\n      \r\n       })\r\n \r\n  }\r\n   editRepaymentInfo(editType = '') {\r\n    this.openRepaymentInfo(editType)\r\n  }\r\n  openRepaymentInfo(editType){\r\n    \r\n   \r\n     let dialogRef: MatDialogRef<any> = this.dialog.open(LoanRepaymentDetailsUpdateComponent, {\r\n       width: '1000px',\r\n       disableClose: true,\r\n       data: { loanAccountId: this.dataResponse.dataResp.loanAccountId, loanRepaymentInfo: this.loanRepayment_array,editType },\r\n     })\r\n     dialogRef.afterClosed()\r\n       .subscribe(res => {\r\n         console.log('dialog closed-- ', res);\r\n         this.getLoanAccountInfo(this.loanAccountId);\r\n         this.getAllData(this.loanAccountId);\r\n      \r\n         if(!res) {\r\n           return;\r\n         }\r\n         \r\n      \r\n       })\r\n \r\n  }\r\n  editValuationOfAsset(editType = '') {\r\n    this.openValuationOfAssetInfo(editType)\r\n  }\r\n  openValuationOfAssetInfo(editType){\r\n    \r\n   \r\n     let dialogRef: MatDialogRef<any> = this.dialog.open(LoanValuationOfAssetUpdateComponent, {\r\n       width: '1000px',\r\n       disableClose: true,\r\n       data: { loanAccountId: this.dataResponse.dataResp.loanAccountId, loanValuationOfAssetInfo: this.valueofassest_array,editType },\r\n     })\r\n     dialogRef.afterClosed()\r\n       .subscribe(res => {\r\n         console.log('dialog closed-- ', res);\r\n         this.getLoanAccountInfo(this.loanAccountId);\r\n         this.getAllData(this.loanAccountId);\r\n      \r\n         if(!res) {\r\n           return;\r\n         }\r\n         \r\n      \r\n       })\r\n \r\n  }\r\n  editLegalOpinion(editType = '') {\r\n    this.openLegalOpnionInfo(editType)\r\n  }\r\n  openLegalOpnionInfo(editType){\r\n    \r\n   \r\n     let dialogRef: MatDialogRef<any> = this.dialog.open(LoanLegalOpinionUpdatesComponent, {\r\n       width: '1000px',\r\n       disableClose: true,\r\n       data: { loanAccountId: this.dataResponse.dataResp.loanAccountId, loanLegalInfo: this.legaopninio_array,editType },\r\n     })\r\n     dialogRef.afterClosed()\r\n       .subscribe(res => {\r\n         console.log('dialog closed-- ', res);\r\n         this.getLoanAccountInfo(this.loanAccountId);\r\n         this.getAllData(this.loanAccountId);\r\n      \r\n         if(!res) {\r\n           return;\r\n         }\r\n         \r\n      \r\n       })\r\n \r\n  }\r\n  editAssessmentInfo(editType = '') {\r\n    this.openAssessmentInfo(editType)\r\n  }\r\n  openAssessmentInfo(editType){\r\n    \r\n   \r\n     let dialogRef: MatDialogRef<any> = this.dialog.open(LoanAssessmentDetailsUpdateComponent, {\r\n       width: '1000px',\r\n       disableClose: true,\r\n       data: { loanAccountId: this.dataResponse.dataResp.loanAccountId, loanAssessmentInfo: this.loanassement_array,editType },\r\n     })\r\n     dialogRef.afterClosed()\r\n       .subscribe(res => {\r\n         console.log('dialog closed-- ', res);\r\n         this.getLoanAccountInfo(this.loanAccountId);\r\n         this.getAllData(this.loanAccountId);\r\n      \r\n         if(!res) {\r\n           return;\r\n         }\r\n         \r\n      \r\n       })\r\n \r\n  }\r\n  editOfferIssueInfo(editType = '') {\r\n    this.openOfferIssueInfo(editType)\r\n  }\r\n  openOfferIssueInfo(editType){\r\n    \r\n   \r\n     let dialogRef: MatDialogRef<any> = this.dialog.open(LoanOfferIssueDetailsUpdateComponent, {\r\n       width: '1000px',\r\n       disableClose: true,\r\n       data: { loanAccountId: this.dataResponse.dataResp.loanAccountId, loanOfferIssueInfo: this.offerissue_array,editType },\r\n     })\r\n     dialogRef.afterClosed()\r\n       .subscribe(res => {\r\n         console.log('dialog closed-- ', res);\r\n         this.getLoanAccountInfo(this.loanAccountId);\r\n         this.getAllData(this.loanAccountId);\r\n      \r\n         if(!res) {\r\n           return;\r\n         }\r\n         \r\n      \r\n       })\r\n \r\n  }\r\n  editApprovalInfo(editType = '') {\r\n    this.openApprovalInfo(editType)\r\n  }\r\n  openApprovalInfo(editType){\r\n    \r\n   \r\n     let dialogRef: MatDialogRef<any> = this.dialog.open(LoanApprovalDetailsUpdateComponent, {\r\n       width: '1000px',\r\n       disableClose: true,\r\n       data: { loanAccountId: this.dataResponse.dataResp.loanAccountId, loanApprovalInfo: this.loanapproval_array,editType },\r\n     })\r\n     dialogRef.afterClosed()\r\n       .subscribe(res => {\r\n         console.log('dialog closed-- ', res);\r\n         this.getLoanAccountInfo(this.loanAccountId);\r\n         this.getAllData(this.loanAccountId);\r\n      \r\n         if(!res) {\r\n           return;\r\n         }\r\n         \r\n      \r\n       })\r\n \r\n  }\r\n  \r\n  editCreditInfo(editType = '') {\r\n    this.openCreditInfo(editType)\r\n  }\r\n  openCreditInfo(editType){\r\n    \r\n   \r\n     let dialogRef: MatDialogRef<any> = this.dialog.open(LoanCreditDetailsUpdateComponent, {\r\n       width: '1000px',\r\n       disableClose: true,\r\n       data: { loanAccountId: this.dataResponse.dataResp.loanAccountId, loanCreditInfo: this.loanCreditScore_array,editType },\r\n     })\r\n     dialogRef.afterClosed()\r\n       .subscribe(res => {\r\n         console.log('dialog closed-- ', res);\r\n         this.getLoanAccountInfo(this.loanAccountId);\r\n         this.getAllData(this.loanAccountId);\r\n      \r\n         if(!res) {\r\n           return;\r\n         }\r\n         \r\n      \r\n       })\r\n \r\n  }\r\n  onEdit(editType = ''){\r\n    console.log('edit')\r\n    if (this.loanAccount_array) {\r\n      this.openPopUp(editType);\r\n    }\r\n\r\n\r\n  }\r\n \r\n  \r\n  openPopUp(editType){\r\n  \r\n    let dialogRef: MatDialogRef<any> = this.dialog.open(LoanAccountDetailsUpdateComponent, {\r\n      width: '1000px',\r\n      disableClose: true,\r\n      data: { loanAccountId: this.dataResponse.dataResp.loanAccountId, info: this.loanAccount_array,editType },\r\n  \r\n    })\r\n    dialogRef.afterClosed()\r\n      .subscribe(res => {\r\n        console.log('dialog closed-- ', res);\r\n        this.getLoanAccountInfo(this.loanAccountId);\r\n        this.getAllData(this.loanAccountId);\r\n        if(!res) {\r\n          return;\r\n        }\r\n  \r\n      })\r\n\r\n  }\r\n  openPopUp1(editType){\r\n   \r\n     let dialogRef: MatDialogRef<any> = this.dialog.open(LoanAccountDetailsEditComponent, {\r\n       width: '1000px',\r\n       disableClose: true,\r\n       data: { loanAccountId: this.dataResponse.dataResp.loanAccountId, assetInfo: this.assest_array,editType }\r\n     })\r\n     dialogRef.afterClosed()\r\n       .subscribe(res => {\r\n         console.log('dialog closed-- ', res);\r\n         this.getLoanAccountInfo(this.loanAccountId);\r\n         this.getAllData(this.loanAccountId);\r\n         if(!res) {\r\n           return;\r\n         }\r\n     \r\n       })\r\n \r\n  }\r\n  \r\n  openCollateralPopup(editType){\r\n\r\n     let dialogRef: MatDialogRef<any> = this.dialog.open(LoanCollateralDetailsUpdateComponent, {\r\n       width: '1000px',\r\n       disableClose: true,\r\n       data: { loanAccountId: this.dataResponse.dataResp.loanAccountId, collateralInfo: this.colateral_array,editType },\r\n     })\r\n     dialogRef.afterClosed()\r\n       .subscribe(res => {\r\n         console.log('dialog closed-- ', res);\r\n         this.getLoanAccountInfo(this.loanAccountId);\r\n         this.getAllData(this.loanAccountId);\r\n         if(!res) {\r\n           return;\r\n         }\r\n     \r\n       })\r\n \r\n  }\r\n  editCollateral(editType = ''){\r\n    console.log('edit')  \r\n      this.openCollateralPopup(editType);\r\n  }\r\n  editMandate(editType = ''){\r\n    console.log('edit')\r\n\r\n      this.openMandate(editType);\r\n    }\r\n  openMandate(editType){\r\n  \r\n   \r\n     let dialogRef: MatDialogRef<any> = this.dialog.open(LoanMandateDetailsUpdateComponent, {\r\n       width: '1000px',\r\n       disableClose: true,\r\n       data: { loanAccountId: this.dataResponse.dataResp.loanAccountId, mandateInfo: this.mandate_array,editType },\r\n     })\r\n     dialogRef.afterClosed()\r\n       .subscribe(res => {\r\n         console.log('dialog closed-- ', res);\r\n         this.getLoanAccountInfo(this.loanAccountId);\r\n         this.getAllData(this.loanAccountId);\r\n         if(!res) {\r\n           return;\r\n         }\r\n     \r\n       })\r\n \r\n   }\r\n  close(data) {\r\n    this.dialogRef.close({\r\n      message: 'Confirm',\r\n      data\r\n   });\r\n  }\r\n \r\n   getCustomerInfoDetails() {\r\n    \r\n    this.appApiService.fetchCustomersByLoanAccId(this.loanAccountId,'loan').subscribe((customerInfoDetails) => {     \r\n      if(customerInfoDetails.data){       \r\n        this.customerInfoDetails = customerInfoDetails.data;\r\n        this.ownership = this.customerInfoDetails[0].ownership;\r\n        this.noOfApplicants = this.customerInfoDetails[0].numOfApplicants;       \r\n      }\r\n    }, (err: any) => {\r\n      this.loader.close();\r\n    });\r\n  }\r\n  getProfileImage(customerId){    \r\n    this.image=null;\r\n    this.loanInfo.customerId == null ? null :this.api.getProfileDetails(customerId)\r\n      .subscribe((data: any) => {        \r\n        if(data.profileImage!=null){\r\n          this.imageUrl=data.profileImage;         \r\n        let objectURL =  data.profileImage.fileUrl;    \r\n        this.image = this.sanitizer.bypassSecurityTrustUrl(objectURL);\r\n        }  \r\n        if(data.signatures){\r\n          this.signatureData = data.signatures[0];\r\n          this.ls.setItem('signedImage',this.signatureData.fileUrl);\r\n       } \r\n      }, (error: any) => {\r\n        console.log(error);\r\n      });\r\n  \r\n  }\r\n  getMandateDetails() {\r\n    this.apiService.getMandateDetailsByLoanAccId(this.loanAccountId).subscribe((mandateDetails) => {\r\n      this.mandateDetails = mandateDetails;     \r\n      this.mandateDetailsArray = mandateDetails.mandateDetails;\r\n    }, (err: any) => {\r\n    });\r\n  }\r\n   stayTrue1(){\r\n    this. colateral_array.collateralDetails.secondaryChargeAllowed = true;\r\n  }\r\n  \r\n  fetchOfferAcceptRejectDetails(loanaccountID) {\r\n      this.apiService.getofferDetails(loanaccountID)\r\n        .subscribe((data : any)=> {\r\n          this.offerDetails = data;          \r\n        })\r\n    }\r\n\r\n      fetchPostOfferAmendmentDetails() {\r\n    this.apiService.getOfferAmendmentDetails( this.loanAccountId )\r\n      .subscribe((data : any)=> {       \r\n        this.postOfferDetails = data;\r\n        console.log(\"details\",this.postOfferDetails);\r\n      })\r\n  }\r\n   getAccountCreateDetails() {\r\n    this.api.getAccountCreateDetails(this.loanAccountId)\r\n     .subscribe((accountCreateDetails: any)=> {     \r\n      this.accountCreateValue=accountCreateDetails;\r\n      \r\n    });\r\n  }\r\n\r\n\r\n  updateApplicationStatus(formData, status) {\r\n\r\n    console.log('data : ',formData);\r\n    formData.status = status;\r\n    let data=status;\r\n    this.accStatus = status;\r\n    const formDt={\r\n      status:status,\r\n      loanAccountId:formData.loanAccountId\r\n    }\r\n\r\n\r\n    this.tasksummaryService.updateLoanAccStatus(formDt)\r\n      .subscribe(respData => {\r\n        if (respData.loanAccountId != null || respData.loanAccountId != '' || respData.loanAccountId != \"\") {\r\n            this.close(data);\r\n            this.cdr.markForCheck();\r\n            this.cdr.detectChanges();\r\n            this.dialogRef.close({\r\n              message: 'Confirm',\r\n              data\r\n            });\r\n\r\n          this.snack.open(status + ' !', 'OK', {\r\n            duration: 4000,\r\n            verticalPosition: 'top',\r\n            horizontalPosition: 'right'\r\n          });\r\n          this.cdr.markForCheck();\r\n        } else {\r\n          this.snack.open('Not able to connect to server!', 'INTERNAL SERVER ERROR', {\r\n            duration: 4000,\r\n            verticalPosition: 'top',\r\n            horizontalPosition: 'right'\r\n          });\r\n    \r\n        }\r\n      }, error => {\r\n     \r\n          console.log('error resp :: ',error);\r\n          this.errorStatus=status;\r\n          this.snack.open(`${error.error.message} `, 'OK', {\r\n            duration: 4000,\r\n            verticalPosition: 'top',\r\n            horizontalPosition: 'right'\r\n          });\r\n        \r\n      });\r\n  }\r\n\r\n}\r\n","<div >\r\n   \r\n    <div  fxLayout=\"column wrap\">\r\n    <div class=\"content\">\r\n       <div fxLayout=\"row\" fxLayoutAlign=\"end\">\r\n          <div>\r\n             <mat-icon style=\"color: darkgray;cursor: pointer;margin-right: 30px;\" (click)=\"close(dataResponse)\" >\r\n                close</mat-icon>\r\n          </div>\r\n       </div>\r\n       <div class=\"boxing\"> \r\n       <div class=\"main\">\r\n         <div class=\"createdBy\"   fxLayout=\"row end\">\r\n            <div class=\"creater\"  fxLayout=\"column\" >\r\n             <span class=\"word1\"  *ngFor=\"let creater of nameCreater;\">{{creater}}</span>               \r\n            </div>\r\n            <div fxLayout=\"column\" class=\"totalMarin\">\r\n               <div class=\"parentCreater\" fxLayout=\"row\">              \r\n                  \r\n                  <img  class=\"img1\" src=\"assets/images/face-7.jpg\" alt=\"\"\r\n                        >&nbsp;\r\n                        <div>\r\n                           <span class=\"headName\">{{this.createDataInfo?.createdBy}}\r\n                           </span><br>\r\n                           <span class=\"idSize\">EID #{{this.createDataInfo?.creatorId}}</span>\r\n                        </div>\r\n  \r\n            </div>\r\n            <div fxLayout=\"row\" class=\"setSize\">\r\n               <mat-icon class=\"iconColor\" >phone                    \r\n               </mat-icon>&nbsp;&nbsp;&nbsp;\r\n               <span class=\"mobileNo\">\r\n                             {{this.createDataInfo?.mobile}}\r\n               </span>                 \r\n            </div>\r\n            <div fxLayout=\"row\" class=\"setSize\">                \r\n               <mat-icon class=\"iconColor\"  > mail_outline</mat-icon>&nbsp;&nbsp; &nbsp;\r\n               <span class=\"email\">\r\n                  {{this.createDataInfo?.email}}\r\n               </span>\r\n            </div>\r\n            </div>          \r\n           \r\n         </div>\r\n         <div fxLayout=\"row\" class='imgdiv'>\r\n            <!-- <div fxLayout=\"row\"> <img class='appimg' src='assets\\images\\personImg.png'></div> -->\r\n            <div mat-card-avatar>\r\n              <div  fxLayout=\"row\" class=\"defaultImage\" *ngIf=\"imageUrl == 'not_available'\" [style.background]=\"customerColorCode\">\r\n               <h1 class=\"imageText\">{{loanInfo.firstName| uppercase | slice:0:1}}{{loanInfo.lastName | uppercase | slice:0:1}}</h1>\r\n            </div>\r\n             \r\n              <div  fxLayout=\"row\" class=\"defaultImage\" *ngIf=\"imageUrl !== 'not_available'\">\r\n                 <img style=\"width: 120px; height: 120px; border-radius: 50%;\"\r\n                 [src]=\"imageUrl\" alt=\"\" *ngIf=\"imageUrl != 'not_available'\"/>\r\n               </div>\r\n            </div>\r\n         </div><br><br><br><br>\r\n         <div fxLayout=\"row\" class=\"apprdiv\">\r\n            <h2>{{loanInfo.prefix}}&nbsp;{{loanInfo.firstName}}&nbsp;{{loanInfo.lastName}}</h2>\r\n         </div>\r\n       <div fxLayout=\"row\" class=\"flex-container\">\r\n          <div fxFlex=\"15\">\r\n             <div class='num'>1</div>\r\n             <div class='bordnum'>&nbsp;</div>\r\n          </div>\r\n          <mat-card label=\"Application Entry Stage\" style=\"border-radius: 0px; width: 900px;\">\r\n          <div fxFlex=\"85\">\r\n             <h2>Application Entry Stage</h2>\r\n             <mat-divider >\r\n             </mat-divider>\r\n             <mat-card style=\"width: 800px\">\r\n               <!-- <div *ngIf=\"!updateLoanDetails\"> -->\r\n               <div *ngIf=\"dataResponse.dataResp.status == 'BACKLOG'\">\r\n                  <button type=\"button\"class=\"editScreen\" style=\"float: right;padding-top: 2px\"  (click)=\"onEdit('loanAccount_array')\">edit</button>\r\n               </div>\r\n             <h3>Loan Account Details</h3>\r\n             <mat-card class='mtcd'>\r\n                <mat-card-content>\r\n                   <div fxLayout=\"row\" class='rowbord'>\r\n                      <div fxFlex='4'></div>\r\n                      <div fxFlex='32'>\r\n                         <div class='label'>Account Currency</div>\r\n                         <div class='labelval'>{{loanAccount_array?.accountCurrency}}</div>\r\n                      </div>\r\n                      <div fxFlex='32'>\r\n                         <div class='label'>Account Branch</div>\r\n                         <div class='labelval'>{{loanAccount_array?.accountBranch}}</div>\r\n                      </div>\r\n                   <div fxFlex='32'>\r\n                     <div class='label'>Loan Account ID</div>\r\n                     <div class='labelval'>{{loanAccount_array?.loanAccountId}}</div>\r\n                   </div>\r\n \r\n                   </div>\r\n                   <div fxLayout=\"row\" class='rowbord'>\r\n                      <div fxFlex='4'></div>\r\n                      <div fxFlex='32'>\r\n                         <div class='label'>Application Date</div>\r\n                         <div class='labelval'>{{loanAccount_array?.applicationDate}}</div>\r\n                      </div>\r\n                      <div fxFlex='32'>\r\n                         <div class='label'>Customer Contribution</div>\r\n                         <div class='labelval'>{{loanAccount_array?.customerContribution}}</div>\r\n                      </div>\r\n                      <div fxFlex='32'>\r\n                         <div class='label'>Estimated Cost</div>\r\n                         <div class='labelval'>{{loanAccount_array?.estimatedCost}}</div>\r\n                      </div>\r\n                   </div>\r\n                   <div fxLayout=\"row\" class='rowbord'>\r\n                      <div fxFlex='4'></div>\r\n                      <div fxFlex='32'>\r\n                         <div class='label'>Loan Amount</div>\r\n                         <div class='labelval'>{{loanAccount_array?.loanAmount}}</div>\r\n                      </div>\r\n                      <div fxFlex='32'>\r\n                         <div class='label'>Loan Tenure</div>\r\n                         <div class='labelval'>{{loanAccount_array?.loanTenure}}</div>\r\n                      </div>\r\n                      <div fxFlex='32'>\r\n                         <div class='label'>Purpose of Loan</div>\r\n                         <div class='labelval'>{{loanAccount_array?.purposeOfLoan}}</div>\r\n                      </div>\r\n                      <!-- <div fxFlex='32'>\r\n                         <div class='label' *ngIf=\"accountDetails?.swiftCodeEnable\">Swift Code</div>\r\n                         <div class='labelval'>{{accountDetails?.swiftCode}}</div>\r\n                       </div> -->\r\n                    </div>\r\n                    <div fxLayout=\"row\" class='rowbord'>\r\n                     <div fxFlex='4'></div>\r\n                      <div fxFlex='32'>\r\n                         <div class='label'>Status</div>\r\n                         <div class='labelval'>{{loanAccount_array?.status}}</div>\r\n                      </div>\r\n                      \r\n                      <div fxFlex='32'>\r\n                        <div class='label'>Business Product Name</div>\r\n                        <div class='labelval'>{{loanAccount_array?.businessProductName}}</div>\r\n                      </div>\r\n\r\n                      <div fxFlex='32'>\r\n                        <div class='label'>Modification Number</div>\r\n                        <div class='labelval'>{{loanAccount_array?.modificationNo}}</div>\r\n                      </div>\r\n\r\n                    \r\n                   </div>\r\n                </mat-card-content>\r\n             </mat-card>\r\n            <!-- </div> -->\r\n\r\n                  <div *ngIf=\"dataResponse.dataResp.status == 'BACKLOG'\">\r\n                    <button type=\"button\"class=\"editScreen\" style=\"float: right;padding-top: 2px\"  (click)=\"editAsset('assest_array')\">edit</button>\r\n                  </div>\r\n                \r\n                <h3>Asset Information</h3>\r\n                <hr />\r\n \r\n                <mat-card class='mtcd'>\r\n                    <mat-card-content>\r\n                       <div fxLayout=\"row\" class='rowbord'>\r\n                          <div fxFlex='4'></div>\r\n                          <div fxFlex='32'>\r\n                             <div class='label'>Asset Status</div>\r\n                             <div class='labelval'>{{assest_array?.assetStatus}}</div>\r\n                          </div>\r\n                          <div fxFlex='32'>\r\n                             <div class='label'>Building</div>\r\n                             <div class='labelval'>{{assest_array?.building}}</div>\r\n                          </div>\r\n                       <div fxFlex='32'>\r\n                         <div class='label'>Mortgaged Branch</div>\r\n                         <div class='labelval'>{{assest_array?.mortgagedBranch}}</div>\r\n                       </div>\r\n     \r\n                       </div>\r\n                       <div fxLayout=\"row\" class='rowbord'>\r\n                          <div fxFlex='4'></div>\r\n                          <div fxFlex='32'>\r\n                             <div class='label'>City</div>\r\n                             <div class='labelval'>{{assest_array?.city}}</div>\r\n                          </div>\r\n                          <div fxFlex='32'>\r\n                             <div class='label'>Country</div>\r\n                             <div class='labelval'>{{assest_array?.country}}</div>\r\n                          </div>\r\n                          <div fxFlex='32'>\r\n                             <div class='label'>Dimensions</div>\r\n                             <div class='labelval'>{{assest_array?.dimensions}}</div>\r\n                          </div>\r\n                       </div>\r\n                    \r\n                       <div fxLayout=\"row\" class='rowbord'>\r\n                          <div fxFlex='4'></div>\r\n                          <div fxFlex='32'>\r\n                             <div class='label'>Home Type</div>\r\n                             <div class='labelval'>{{assest_array?.homeType}}</div>\r\n                          </div>\r\n                          <div fxFlex='32'>\r\n                             <div class='label'>Locality</div>\r\n                             <div class='labelval'>{{assest_array?.locality}}</div>\r\n                          </div>\r\n                          <div fxFlex='32'>\r\n                             <div class='label'>Market Value</div>\r\n                             <div class='labelval'>{{assest_array?.marketValue}}</div>\r\n                          </div>\r\n                        </div>\r\n                          <!-- <div fxFlex='32'>\r\n                             <div class='label' *ngIf=\"accountDetails?.swiftCodeEnable\">Swift Code</div>\r\n                             <div class='labelval'>{{accountDetails?.swiftCode}}</div>\r\n                           </div> -->\r\n                       <div fxLayout=\"row\" class='rowbord'>\r\n                        <div fxFlex='4'></div>\r\n                          <div fxFlex='32'>\r\n                            <div class='label'>State</div>\r\n                            <div class='labelval'>{{assest_array?.state}}</div>\r\n                          </div>\r\n    \r\n                          <div fxFlex='32'>\r\n                            <div class='label'>City</div>\r\n                            <div class='labelval'>{{assest_array?.city}}</div>\r\n                          </div>\r\n    \r\n                          <div fxFlex='32'>\r\n                            <div class='label'>Zip code</div>\r\n                            <div class='labelval'>{{assest_array?.zipCode}}</div>\r\n                          </div>\r\n                       </div>\r\n                       <div fxLayout=\"row\" class='rowbord nobord'>\r\n                          <div fxFlex='4'></div>\r\n                       </div>\r\n                    </mat-card-content>\r\n                 </mat-card>\r\n            <!--customer information -->\r\n            \r\n                <div>\r\n                  \r\n                <h3>Customer Information Details</h3>\r\n                <hr />\r\n                <mat-card class='mtcd'>\r\n                 \r\n                  <div class=\"full-width\">\r\n    \r\n    <div class=\"fullcard\">\r\n        <div fxLayout=\"row\">            \r\n        </div>\r\n        <div fxLayout=\"row\" fxLayoutAlign=\"center center\">\r\n            <div fxFlex=\"100%\">\r\n                <div class=\"full-width\">\r\n                    <div fxLayout=\"column\" fxLayoutGap=\"2%\" fxLayoutAlign=\"space-between none\" class=\"colAlign\">\r\n                        <div class=\"pt-16\">\r\n                            <div>\r\n                                <mat-card>\r\n                                    <div fxLayout=\"row wrap\" fxLayoutAlign=\"space-around center\">\r\n                                        <div fxFlex.xs=\"100%\"> \r\n                                            <small class=\"headingText\">Holding Pattern</small>\r\n                                            <h3 class=\"valueText\">{{ownership}}</h3>\r\n                                        </div>\r\n                                        <div fxFlex.xs=\"100%\">\r\n                                            <small class=\"headingText\">Ownership</small>\r\n                                            <h3 class=\"valueText\">{{ownership}}</h3>\r\n                                        </div>\r\n                                        <div fxFlex.xs=\"100%\">\r\n                                            <small class=\"headingText\">Number of Applicant</small>\r\n                                            <h3 class=\"valueText\">{{noOfApplicants}}</h3>\r\n                                        </div>\r\n                                    </div>\r\n                                </mat-card>\r\n                            </div>\r\n                        </div>\r\n                        <div fxLayout=\"row wrap\" *ngFor=\"let details of customerInfoDetails;let i=index\"\r\n                            class=\"full-width\">\r\n                            <div class=\"full-width\">\r\n                                <mat-card>\r\n                                    <div fxLayout=\"row wrap\" class=\"full-width\">\r\n                                        <div class=\"pb-16\" fxFlex=\"7%\" fxFlex.xs=\"50%\" fxFlex.md=\"10%\" fxFlex.sm=\"15%\">\r\n                                            <img height=\"50px\" width=\"50px\"\r\n                                                src=\"assets/images/backgrounds/defaultProfileBackground.png\"\r\n                                                class=\"rounded-circle\" />\r\n                                        </div>\r\n                                        <div class=\"bg-light p-8\" fxFlex=\"93%\" fxFlex.xs=\"100%\" fxFlex.md=\"90%\"\r\n                                            fxFlex.sm=\"85%\">\r\n                                            <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n                                                <div>\r\n                                                    <div fxLayout=\"row wrap\" class=\"full-width\">\r\n                                                        <div class=\"pl-16\">\r\n                                                            <h2 class=\"valueTextName\"><span>{{details?.firstName}}</span>&nbsp;\r\n                                                                <span>{{details?.middleName}}</span>&nbsp;\r\n                                                                <span>{{details?.lastName}}</span></h2>\r\n                                                        </div>\r\n                                                        <div class=\"pl-16 text-secondary\">|</div>\r\n                                                        <div class=\"pl-16\">\r\n                                                            <small class=\"valueText\">Last Updated On\r\n                                                                {{details?.modifiedTime? details.modifiedTime : details.createdTime }}</small>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                               \r\n                                            </div>\r\n                                            <div fxLayout=\"row wrap\" class=\"full-width\">\r\n                                                <div class=\"pl-16 pr-16\" *ngIf=\"!isApprovedSreen\" >\r\n                                                    <small class=\"headingText1\">CIF\r\n                                                        #{{details?.cifNumber}}</small>\r\n                                                </div>\r\n                                                <div class=\"pl-16 pr-16\" (click)=\"goTo360Dashboard()\" *ngIf=\"isApprovedSreen\">\r\n                                                    <small class=\"headingText1\">CIF\r\n                                                        #{{details?.cifNumber}}</small>\r\n                                                </div>\r\n                                            </div><br>\r\n                                            <div fxLayout=\"row wrap\" fxLayoutAlign=\"space-between center\">\r\n                                                <div class=\"pl-16 pr-16\" fxFlex.xs=\"100%\">\r\n                                                    <small class=\"headingText\">Date of Birth</small><br>\r\n                                                    <p class=\"valueText\">{{details?.dateOfBirth}}</p>\r\n                                                </div>\r\n                                                <div class=\"pl-16 pr-16\" fxFlex.xs=\"100%\">\r\n                                                    <small class=\"headingText\">Email ID</small><br>\r\n                                                    <p class=\"valueText\">{{details?.primaryEmailAdress}}</p>\r\n                                                </div>\r\n                                                <div class=\"pl-16 pr-16\" fxFlex.xs=\"100%\">\r\n                                                    <small class=\"headingText\">Mobile Number</small><br>\r\n                                                    <p class=\"valueText\">{{details?.phoneNumber}}</p>\r\n                                                </div>\r\n                                                <div class=\"pl-16 pr-16\" fxFlex.xs=\"100%\">\r\n                                                    <small class=\"headingText\">Landline Number</small><br>\r\n                                                    <p class=\"valueText\">{{details?.landlineNumber}}</p>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </mat-card>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                \r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n                </mat-card>\r\n              \r\n             </div>\r\n        \r\n             <!-- </div> -->\r\n \r\n                <div>\r\n                  <div *ngIf=\"dataResponse.dataResp.status == 'BACKLOG'\">\r\n                     <button type=\"button\"class=\"editScreen\" style=\"float: right;padding-top: 2px\"  (click)=\"editMandate()\">edit</button>   \r\n                   </div>\r\n                <h3>Mandate Details</h3>\r\n                <hr />\r\n                <mat-card>\r\n                 \r\n                   <!-- <h4>Mandate {{i+1}}</h4>\r\n                   <div>\r\n                      <div class=\"col\" style=\"font-size: 12px;\" fxLayout=\"row\" fxLayoutGap=\"40px\">\r\n                         <div fxFlex='4'></div>\r\n                         <div >\r\n                            <div class='label'>Applicant Name</div>\r\n                            <div class='labelval'>{{mandateData.applicantName}}</div>\r\n                         </div>\r\n                         <div >\r\n                            <div class='label'>Collateral Share</div>\r\n                            <div class='labelval'>{{mandateData.collateralShare}}</div>\r\n                         </div>\r\n                         <div >\r\n                            <div class='label'>Repayment Share</div>\r\n                            <div class='labelval'>{{mandateData.repaymentShare}}</div>\r\n                         </div>\r\n                         <div >\r\n                            <div class='label'>Mandate Id</div>\r\n                            <div class='labelval'>{{mandateData.mandateId}}</div>\r\n                         </div>\r\n                      </div>\r\n                   </div> -->\r\n                   <div class=\"full-width\">\r\n    \r\n    <div class=\"fullcard\">\r\n        <div fxLayout=\"row\">\r\n            <h4 class=\"paraFont\">Mandate Details</h4>\r\n        </div>\r\n        <div fxLayout=\"row\" fxLayoutAlign=\"center center\">\r\n            <div fxFlex=\"100%\">\r\n                <mat-card class=\"chequecard\">\r\n                    <mat-card-content>\r\n                        <div class=\"full-width\">\r\n                            <div fxLayout=\"column\" fxLayoutGap=\"2%\" fxLayoutAlign=\"space-between none\" class=\"colAlign\">\r\n                                <div fxLayout=\"row wrap\" fxLayoutAlign=\"space-between center\" class=\"flex-container stretch\">\r\n                                    <ng-container>\r\n                                        <div fxFlex=\"33%\" fxFlex.xs=\"50%\">\r\n                                            <mat-hint class=\"label\">Number of Applicants</mat-hint>\r\n                                            <br>\r\n                                            <mat-hint class=\"labelval\">{{mandateDetails?.noOfApplicants}}</mat-hint>\r\n                                        </div>\r\n                                    \r\n                                        <!-- <div fxFlex=\"33%\" fxFlex.xs=\"50%\" *ngIf=\"mandateDetails != null \">\r\n                                            <mat-hint class=\"headingText\">Registered</mat-hint>\r\n                                            <br>\r\n                                            <div class=\"toggle\">\r\n                                                <mat-slide-toggle [checked]=\"mandateDetails.registered\">\r\n                                                </mat-slide-toggle>\r\n                                            </div>\r\n                                        </div> -->\r\n                                    </ng-container>\r\n                                </div>\r\n                                <div fxLayout=\"row wrap\" >\r\n                                    <div class=\"full-width pt-16\" *ngFor=\"let details of mandateDetailsArray;let i=index\">\r\n                                        <mat-accordion class=\"full-width mat-elevation-z0\">\r\n                                            <mat-expansion-panel class=\"mat-elevation-z0 border border-primary\"\r\n                                                (opened)=\"panelOpenState = true\" (closed)=\"panelOpenState = false\">\r\n                                                <mat-expansion-panel-header>\r\n                                                    <mat-panel-title>\r\n                                                        Mandate {{i + 1}}\r\n                                                    </mat-panel-title>\r\n                                                </mat-expansion-panel-header>\r\n                                                <div>\r\n                                                    <div fxLayout=\"row wrap\" fxLayoutAlign=\"space-between center\" class=\"flex-container stretch\">\r\n                                                        <ng-container>\r\n                                                            <div fxFlex=\"33%\" fxFlex.xs=\"50%\">\r\n                                                                <mat-hint class=\"label\">Applicant Name</mat-hint>\r\n                                                                <br>\r\n                                                                <mat-hint class=\"labelval\">{{details.applicantName}}</mat-hint>\r\n                                                            </div>\r\n                                                            <div fxFlex=\"33%\" fxFlex.xs=\"50%\">\r\n                                                                <mat-hint class=\"label\">Collateral Share Percentage</mat-hint>\r\n                                                                <br>\r\n                                                                <mat-hint class=\"labelval\">{{details.collateralShare}}</mat-hint>\r\n                                                            </div>\r\n                                                            <div fxFlex=\"33%\" fxFlex.xs=\"50%\">\r\n                                                                <mat-hint class=\"label\">Repayment Share Percentage</mat-hint>\r\n                                                                <br>\r\n                                                                <mat-hint class=\"labelval\">{{details.repaymentShare}}</mat-hint>\r\n                                                            </div>\r\n                                                        </ng-container>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </mat-expansion-panel>\r\n                                        </mat-accordion>\r\n                                    </div>\r\n                                </div> \r\n                            </div>\r\n                        </div>\r\n                    </mat-card-content>\r\n                </mat-card>\r\n               \r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n                </mat-card>\r\n              \r\n             </div>\r\n \r\n        \r\n             <div>\r\n               <div *ngIf=\"dataResponse.dataResp.status == 'BACKLOG'\">\r\n                  <button type=\"button\"class=\"editScreen\" style=\"float: right;padding-top: 2px\"  (click)=\"editCollateral()\">edit</button>\r\n               </div>\r\n                <h3>Collateral Details</h3>\r\n                <hr />\r\n \r\n                 <mat-card class='mtcd'>\r\n                    <mat-card-content>\r\n                       <div fxLayout=\"row\" class='rowbord'>\r\n                          <div fxFlex='4'></div>\r\n                          <div fxFlex='32'>\r\n                             <div class='label'>Attributes</div>\r\n                             <div class='labelval'>{{colateral_array?.attributes}}</div>\r\n                          </div>\r\n                          <div fxFlex='32'>\r\n                             <div class='label'>Building</div>\r\n                             <div class='labelval'>{{colateral_array?.building}}</div>\r\n                          </div>\r\n                       <div fxFlex='32'>\r\n                         <div class='label'>City</div>\r\n                         <div class='labelval'>{{colateral_array?.city}}</div>\r\n                       </div>\r\n     \r\n                       </div>\r\n                       <div fxLayout=\"row\" class='rowbord'>\r\n                          <div fxFlex='4'></div>\r\n                          <div fxFlex='32'>\r\n                             <div class='label'>Collateral Currency</div>\r\n                             <div class='labelval'>{{colateral_array?.collateralCurrency}}</div>\r\n                          </div>\r\n                          <div fxFlex='32'>\r\n                             <div class='label'>Collateral Type</div>\r\n                             <div class='labelval'>{{colateral_array?.collateralType}}</div>\r\n                          </div>\r\n                          <div fxFlex='32'>\r\n                             <div class='label'>Collateral Value</div>\r\n                             <div class='labelval'>{{colateral_array?.collateralValue}}</div>\r\n                          </div>\r\n                       </div>\r\n                    \r\n                       <div fxLayout=\"row\" class='rowbord'>\r\n                          <div fxFlex='4'></div>\r\n                          <div fxFlex='32'>\r\n                             <div class='label'>Country</div>\r\n                             <div class='labelval'>{{colateral_array?.country}}</div>\r\n                          </div>\r\n                          <div fxFlex='32'>\r\n                             <div class='label'>Dimensions</div>\r\n                             <div class='labelval'>{{colateral_array?.dimensions}}</div>\r\n                          </div>\r\n                          <div fxFlex='32'>\r\n                             <div class='label'>Locality</div>\r\n                             <div class='labelval'>{{colateral_array?.locality}}</div>\r\n                          </div>\r\n                        </div>                    \r\n                       <div fxLayout=\"row\" class='rowbord'>\r\n                        <div fxFlex='4'></div>\r\n                          <div fxFlex='32'>\r\n                            <div class='label'>State</div>\r\n                            <div class='labelval'>{{colateral_array?.state}}</div>\r\n                          </div>\r\n    \r\n                          <div fxFlex='32'>\r\n                            <div class='label'>Third Party Collateral</div>\r\n                            <div class='labelval'>{{colateral_array?.thirdPartyCollateral}}</div>\r\n                          </div>\r\n    \r\n                        \r\n                          <div fxFlex='32'>\r\n                            <div class='label'>Street</div>\r\n                            <div class='labelval'>{{colateral_array?.street}}</div>\r\n                          </div>\r\n                       </div>\r\n                      \r\n                    </mat-card-content>\r\n                 </mat-card> \r\n                 <mat-card class=\"mtcd\">\r\n                   <div fxLayout=\"row wrap\" *ngIf=\"colateral_array\">\r\n                                    <div class=\"full-width pt-16\" *ngFor=\"let details of colateral_array.collateralDetails;let i=index\">\r\n                                        <mat-accordion class=\"full-width mat-elevation-z0\">\r\n                                            <mat-expansion-panel class=\"mat-elevation-z0 border border-primary\"\r\n                                                (opened)=\"panelOpenState = true\" (closed)=\"panelOpenState = false\">\r\n                                                <mat-expansion-panel-header>\r\n                                                    <mat-panel-title>\r\n                                                        Collateral {{i + 1}}\r\n                                                    </mat-panel-title>\r\n                                                </mat-expansion-panel-header>\r\n                                                <div>\r\n                                                    <div fxLayout=\"row wrap\" fxLayoutAlign=\"space-between center\" class=\"flex-container stretch\">\r\n                                                        <ng-container>\r\n                                                            <div fxFlex=\"33%\" fxFlex.xs=\"50%\">\r\n                                                                <div class=\"label\">Number Of Collateral</div>\r\n                                                                <br>\r\n                                                                <div class=\"labelval\">{{details.noOfCollateral}}</div>\r\n                                                            </div>\r\n                                                            <div fxFlex=\"33%\" fxFlex.xs=\"50%\">\r\n                                                                <div class=\"label\">Total Collateral Value</div>\r\n                                                                <br>\r\n                                                                <div class=\"labelval\">{{details.totalCollateralValue}}</div>\r\n                                                            </div>\r\n                                                            <div fxFlex=\"33%\" fxFlex.xs=\"50%\">\r\n                                                                <div class=\"label\">Utilized Previously</div>\r\n                                                                <br>\r\n                                                                <div class=\"labelval\">{{details.utilizedPreviously}}</div>\r\n                                                            </div>\r\n                                                            <div fxFlex=\"33%\" fxFlex.xs=\"50%\">\r\n                                                                <div class=\"label\">Cover Available</div>\r\n                                                                <br>\r\n                                                                <div class=\"labelval\">{{details.coverAvailable}}</div>\r\n                                                            </div>\r\n                                                            <div fxFlex=\"33%\" fxFlex.xs=\"50%\" *ngIf=\"details != null\">\r\n                                                                <mat-hint class=\"headingText\">Secondary Charge Allowed ?</mat-hint>\r\n                                                                <br>\r\n                                                                <div class=\"toggle\">\r\n                                                                    <mat-slide-toggle (change)=\"stayTrue1()\" [checked]=\"details.secondaryChargeAllowed\">\r\n                                                                    </mat-slide-toggle>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </ng-container>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </mat-expansion-panel>\r\n                                        </mat-accordion>\r\n                                    </div>\r\n                                </div>  \r\n                 </mat-card>\r\n             \r\n             </div>\r\n\r\n             <div>\r\n               <div *ngIf=\"dataResponse.dataResp.status == 'BACKLOG'\">\r\n                  <button type=\"button\"class=\"editScreen\" style=\"float: right;padding-top: 2px\"  (click)=\"editGuarantor()\">edit</button>\r\n                </div>\r\n                <h3>Guarantor Details</h3>\r\n                <hr />\r\n \r\n                <mat-card class='mtcd'>\r\n                    <mat-card-content>\r\n                   \r\n                       <div fxLayout=\"row\" class='rowbord'>\r\n                          <div fxFlex='4'></div>\r\n                          <div fxFlex='32'>\r\n                             <div class='label'>Prefix</div>\r\n                             <div class='labelval'>{{guranator_array?.prefix}}</div>\r\n                          </div>\r\n                          <div fxFlex='32'>\r\n                             <div class='label'>First Name</div>\r\n                             <div class='labelval'>{{guranator_array?.firstName}}</div>\r\n                          </div>\r\n                       <div fxFlex='32'>\r\n                         <div class='label'>Last Name</div>\r\n                         <div class='labelval'>{{guranator_array?.lastName}}</div>\r\n                       </div>\r\n     \r\n                       </div>\r\n                       <div fxLayout=\"row\" class='rowbord'>\r\n                          <div fxFlex='4'></div>\r\n                          <div fxFlex='32'>\r\n                             <div class='label'>CIF Number</div>\r\n                             <div class='labelval'>{{guranator_array?.cifNumber}}</div>\r\n                          </div>\r\n                          <div fxFlex='32'>\r\n                           <div class='label'>Relationship with Customer</div>\r\n                            <div class='labelval'>{{guranator_array?.relationWithCustomer}}</div>\r\n                             \r\n                          </div>\r\n                          <div fxFlex='32'>\r\n                             <div class='label'>Country</div>\r\n                             <div class='labelval'>{{guranator_array?.country}}</div>\r\n                          </div>\r\n                       </div>\r\n                 \r\n                       <div fxLayout=\"row\" class='rowbord'>\r\n                          <div fxFlex='4'></div>\r\n                          <div fxFlex='32'>\r\n                             <div class='label'>Date Of Birth</div>\r\n                             <div class='labelval'>{{guranator_array?.dateOfBirth}}</div>\r\n                          </div>\r\n                          <div fxFlex='32'>\r\n                             <div class='label'>Email address</div>\r\n                             <div class='labelval'>{{guranator_array?.emailAddress}}</div>\r\n                          </div>\r\n                          <div fxFlex='32'>\r\n                             <div class='label'>Mobile Number</div>\r\n                             <div class='labelval'>{{guranator_array?.mobileNumber}}</div>\r\n                          </div>\r\n                        </div>\r\n                        \r\n                       <div fxLayout=\"row\" class='rowbord'>\r\n                        <div fxFlex='4'></div>\r\n                          <div fxFlex='32'>\r\n                            <div class='label'>Address 1</div>\r\n                            <div class='labelval'>{{guranator_array?.address1}}</div>\r\n                          </div>\r\n                           <div fxFlex='32'>\r\n                            <div class='label'>Address 2</div>\r\n                            <div class='labelval'>{{guranator_array?.address2}}</div>\r\n                          </div>\r\n                          <div fxFlex='32'>\r\n                            <div class='label'>City</div>\r\n                             <div class='labelval'>{{guranator_array?.city}}</div>\r\n                          </div>                     \r\n                         \r\n                       </div>\r\n                        <div fxLayout=\"row\" class='rowbord'>\r\n                        <div fxFlex='4'></div>\r\n                          <div fxFlex='32'>\r\n                            <div class='label'>State</div>\r\n                            <div class='labelval'>{{guranator_array?.state}}</div>\r\n                          </div>\r\n    \r\n                          <div fxFlex='32'>\r\n                            <div class='label'>Phone Number</div>\r\n                             <div class='labelval'>{{guranator_array?.phoneNumber}}</div>\r\n                          </div>\r\n    \r\n                        \r\n                          <div fxFlex='32'>\r\n                            <div class='label'>Zip Code</div>\r\n                            <div class='labelval'>{{guranator_array?.zipCode}}</div>\r\n                          </div>\r\n                       </div>\r\n                      \r\n                    </mat-card-content>\r\n                 </mat-card> \r\n              \r\n             \r\n             </div>\r\n          </mat-card>\r\n          </div>\r\n        </mat-card>\r\n       </div>\r\n \r\n   \r\n \r\n       <div fxLayout=\"row\" class=\"flex-container\">\r\n          <div fxFlex=\"15\">\r\n            <div class='num'>2</div>\r\n            <div class='bordnum'>&nbsp;</div>\r\n         </div>\r\n          <mat-card label=\"Limit Entry Stage\" style=\"border-radius: 0px; width: 900px;\">         \r\n          <div fxFlex=\"85\">\r\n             <h2>Loan Application Enrichment</h2>\r\n             <hr />\r\n                <mat-card label=\"Application Enrichment Stage\" style=\"border-radius: 0px; width: 900px;\">\r\n                <div fxFlex=\"85\">\r\n           \r\n                   <hr />\r\n                      <mat-card>\r\n                        <div *ngIf=\"dataResponse.dataResp.status == 'BACKLOG'\">\r\n                           <button type=\"button\"class=\"editScreen\" style=\"float: right;padding-top: 2px\"  (click)=\"onEdit()\">edit</button>\r\n                         </div>\r\n                      <h3>Interest Details</h3>\r\n                      <mat-card *ngFor='let interestData of loanInterest_array;let i=index'>                          <!-- <mat-card> -->\r\n                        \r\n                         <div fxLayout=\"row\" fxLayouutAlign=\"space-between center\">\r\n                           <div>\r\n                               <mat-card class='interstcard' >\r\n                                  <div>\r\n                                     <div class='label'>Interest Type</div>\r\n                                     <div class='labelval'>{{interestData?.intrestType}}</div>\r\n                                  </div>\r\n                               </mat-card>\r\n                            </div>\r\n                            <div>\r\n                               <mat-card class='interstcard'>\r\n                                  <div>\r\n                                     <div class='label'>Effective Rate</div>\r\n                                     <div class='labelval'>{{interestData?.effectiveRate}}</div>\r\n                                  </div>\r\n                               </mat-card>\r\n                            </div>\r\n                            <div>\r\n                               <mat-card class='interstcard' >\r\n                                  <div>\r\n                                     <div class='label'>Applicable Interest Rate</div>\r\n                                     <div class='labelval'>{{interestData?.intrestRateApplicable}}</div>\r\n                                  </div>\r\n                               </mat-card>\r\n                            </div>                            \r\n                            <div>\r\n                               <mat-card class='interstcard'>\r\n                                  <div>\r\n                                     <div class='label'>Margin In %</div>\r\n                                     <div class='labelval'>{{interestData?.marginIn}}</div>\r\n                                  </div>\r\n                               </mat-card>\r\n                            </div>\r\n                         </div>\r\n                      </mat-card>                       \r\n                   </mat-card>              \r\n                  \r\n                   <br />\r\n                   <hr />\r\n                </div>\r\n             </mat-card>\r\n             <br />\r\n             <mat-card style=\"width: 800px\">\r\n               <!-- <div>\r\n                  <mat-icon style=\"float: right;padding-top: 8px\" color=\"primary\" (click)=\"onEdit('loanDisbDetails')\">edit</mat-icon> \r\n                </div> -->\r\n                 <div *ngIf=\"dataResponse.dataResp.status == 'BACKLOG'\">\r\n                  <button type=\"button\"class=\"editScreen\" style=\"float: right;padding-top: 2px\"  (click)=\"editDisbursement('loanDisbusment_array')\">edit</button>\r\n                </div>\r\n             <h3>Loan Disbursement Details</h3>\r\n             <mat-card class='mtcd'>\r\n                <mat-card-content>\r\n                   <div fxLayout=\"row\" class='rowbord'>\r\n                      <div fxFlex='4'></div>\r\n                      <div fxFlex='32'>\r\n                         <div class='label'>Branch Code</div>\r\n                         <div class='labelval'>{{loanDisbusment_array?.branchCode}}</div>\r\n                      </div>\r\n                      <div fxFlex='32'>\r\n                         <div class='label'>Customer Account</div>\r\n                         <div class='labelval'>{{loanDisbusment_array?.customerAccount}}</div>\r\n                      </div>\r\n                   <div fxFlex='32'>\r\n                     <div class='label'>Disbursement Mode</div>\r\n                     <div class='labelval'>{{loanDisbusment_array?.disbursementMode}}</div>\r\n                   </div>\r\n \r\n                   </div>\r\n                   <div fxLayout=\"row\" class='rowbord'>\r\n                      <div fxFlex='4'></div>\r\n                      <div fxFlex='32'>\r\n                         <div class='label'>First Disbursement Date</div>\r\n                         <div class='labelval'>{{loanDisbusment_array?.firstDisbursementDate}}</div>\r\n                      </div>\r\n                      <div fxFlex='32'>\r\n                         <div class='label'>Loan Amount</div>\r\n                         <div class='labelval'>{{loanDisbusment_array?.loanAmount}}</div>\r\n                      </div>\r\n                      <div fxFlex='32'>\r\n                         <div class='label'>Multiple Disbursement Required</div>\r\n                         <div class='labelval'>{{loanDisbusment_array?.mutipleDisbursementRequired}}</div>\r\n                      </div>\r\n                   </div>\r\n                 \r\n                   <div fxLayout=\"row\" class='rowbord'>\r\n                      <div fxFlex='4'></div>\r\n                      <div fxFlex='32'>\r\n                         <div class='label'>Number Of Disbursement</div>\r\n                         <div class='labelval'>{{loanDisbusment_array?.numberOfDisbursement}}</div>\r\n                      </div>\r\n                      <div fxFlex='32'>\r\n                         <div class='label'>Total Disbursement</div>\r\n                         <div class='labelval'>{{loanDisbusment_array?.totalDisbursement}}</div>\r\n                      </div>\r\n                      <div fxFlex='32'>\r\n                         <!-- <div class='label'>Purpose of Loan</div>\r\n                         <div class='labelval'>{{loanAccount_array?.purposeOfLoan}}</div> -->\r\n                      </div>\r\n                      <!-- <div fxFlex='32'>\r\n                         <div class='label' *ngIf=\"accountDetails?.swiftCodeEnable\">Swift Code</div>\r\n                         <div class='labelval'>{{accountDetails?.swiftCode}}</div>\r\n                       </div> -->\r\n                    </div>\r\n                </mat-card-content>\r\n             </mat-card>\r\n             </mat-card>\r\n\r\n\r\n             <br />\r\n             <mat-card style=\"width: 800px\">\r\n               <div *ngIf=\"dataResponse.dataResp.status == 'BACKLOG'\">\r\n                  <button type=\"button\"class=\"editScreen\" style=\"float: right;padding-top: 2px\"  (click)=\"editRepaymentInfo('loanRepayment_array')\">edit</button>\r\n                </div>\r\n             <h3>Loan Repayment Details</h3>\r\n             <mat-card class='mtcd'>\r\n                <mat-card-content>\r\n                   <div fxLayout=\"row\" class='rowbord'>\r\n                      <div fxFlex='4'></div>\r\n                      <div fxFlex='32'>\r\n                         <div class='label'>Bank Name</div>\r\n                         <div class='labelval'>{{loanRepayment_array?.bankName}}</div>\r\n                      </div>\r\n                      <div fxFlex='32'>\r\n                         <div class='label'>Branch Code</div>\r\n                         <div class='labelval'>{{loanRepayment_array?.branchCode}}</div>\r\n                      </div>\r\n                   <div fxFlex='32'>\r\n                     <div class='label'>Customer Account</div>\r\n                     <div class='labelval'>{{loanRepayment_array?.customerAccount}}</div>\r\n                   </div>\r\n                   </div>\r\n                   <div fxLayout=\"row\" class='rowbord'>\r\n                      <div fxFlex='4'></div>\r\n                      <div fxFlex='32'>\r\n                         <div class='label'>First Repayment Date</div>\r\n                         <div class='labelval'>{{loanRepayment_array?.firstRepaymentDate}}</div>\r\n                      </div>\r\n                      <div fxFlex='32'>\r\n                         <div class='label'>Loan Tenure</div>\r\n                         <div class='labelval'>{{loanRepayment_array?.loanTenure}}</div>\r\n                      </div>\r\n                      <div fxFlex='32'>\r\n                         <div class='label'>Maturity Date</div>\r\n                         <div class='labelval'>{{loanRepayment_array?.maturityDate}}</div>\r\n                      </div>\r\n                   </div>\r\n                 \r\n                   <div fxLayout=\"row\" class='rowbord'>\r\n                      <div fxFlex='4'></div>\r\n                      <div fxFlex='32'>\r\n                         <div class='label'>Moraturioum Period</div>\r\n                         <div class='labelval'>{{loanRepayment_array?.moraturioumPeriod}}</div>\r\n                      </div>\r\n                      <div fxFlex='32'>\r\n                         <div class='label'>Type Of Repayment</div>\r\n                         <div class='labelval'>{{loanRepayment_array?.typeOfRepayment}}</div>\r\n                      </div>\r\n                      <div fxFlex='32'>\r\n                         <div class='label'>Repayment Frequency</div>\r\n                         <div class='labelval'>{{loanRepayment_array?.repaymentFrequency}}</div>\r\n                      </div>\r\n                 \r\n                    </div>\r\n                    <div fxLayout=\"row\" class='rowbord'>\r\n                      <div fxFlex='4'></div>\r\n                      <div fxFlex='32'>\r\n                         <div class='label'>Repayment Mode</div>\r\n                         <div class='labelval'>{{loanRepayment_array?.repaymentMode}}</div>\r\n                      </div>                    \r\n                 \r\n                    </div>\r\n                </mat-card-content>\r\n             </mat-card>\r\n             </mat-card>\r\n\r\n             <br />\r\n             <mat-card>\r\n               <div *ngIf=\"dataResponse.dataResp.status == 'BACKLOG'\">\r\n                  <button type=\"button\"class=\"editScreen\" style=\"float: right;padding-top: 2px\"  (click)=\"onEdit()\">edit</button> \r\n                </div>\r\n                <h3>Loan Charge Details</h3>\r\n                 <mat-card  *ngFor='let chargeData of loanCharge_array;let i=index'>                  \r\n                   <div fxLayout=\"row\" fxLayouutAlign=\"space-between center\">\r\n                      <div>\r\n                         <mat-card class='interstcard'>\r\n                            <div>\r\n                               <div class='label'>Amount</div>\r\n                               <div class='labelval'>{{chargeData?.amout}}</div>\r\n                            </div>\r\n                         </mat-card>\r\n                      </div>\r\n                      <div>\r\n                         <mat-card class='interstcard' >\r\n                            <div>\r\n                               <div class='label'>Charge Details ID</div>\r\n                               <div class='labelval'>{{chargeData?.chargeDetailsId}}</div>\r\n                            </div>\r\n                         </mat-card>\r\n                      </div>\r\n                      <div>\r\n                         <mat-card class='interstcard' >\r\n                            <div>\r\n                               <div class='label'>Interest Type</div>\r\n                               <div class='labelval'>{{chargeData?.intrestType}}</div>\r\n                            </div>\r\n                         </mat-card>\r\n                      </div>\r\n                      <div>\r\n                         <mat-card class='interstcard'>\r\n                            <div>\r\n                               <div class='label'>Waiver</div>\r\n                               <div class='labelval'>{{chargeData?.waiver}}</div>\r\n                            </div>\r\n                         </mat-card>\r\n                      </div>\r\n                   </div>\r\n                </mat-card>                 \r\n             </mat-card>\r\n             <mat-card>\r\n         <h3>Account Service Details</h3>\r\n         <mat-card class=\"mtcd\">\r\n            <mat-card-content>\r\n                <div fxLayout=\"row\" class='rowbord'>\r\n                    <div fxFlex='4'></div>\r\n                    <div fxFlex='32'>\r\n                       <div class='label'>Statement Cycle</div>\r\n                       <div class='labelval'>{{accountService_array?.statementCycle}}</div>\r\n                    </div>\r\n                    <div fxFlex='32'>\r\n                       <div class='label'>Statement Type</div>\r\n                       <div class='labelval'>{{accountService_array?.statementType}}</div>\r\n                    </div>\r\n                 <div fxFlex='32'>\r\n                   <div class='label'>start Date</div>\r\n                   <div class='labelval'>{{accountService_array?.startDate}}</div>\r\n                 </div>                 \r\n                 </div>\r\n            </mat-card-content>\r\n         </mat-card>\r\n       </mat-card>\r\n          </div>\r\n       </mat-card>       \r\n       </div><br />\r\n\r\n       <div fxLayout=\"row\" class=\"flex-container\">\r\n        <div fxFlex=\"15\">\r\n         <div class='num'>3</div>\r\n         <div class='bordnum'>&nbsp;</div>\r\n      </div>\r\n        <mat-card label=\"Limit Entry Stage\" style=\"border-radius: 0px; width: 900px;\">         \r\n        <div fxFlex=\"85\">\r\n           <h2>Loan Underwriting Stage</h2>\r\n           <hr />\r\n    \r\n           <mat-card style=\"width: 800px\">\r\n            <div *ngIf=\"dataResponse.dataResp.status == 'BACKLOG'\">\r\n               <button type=\"button\"class=\"editScreen\" style=\"float: right;padding-top: 2px\"  (click)=\"editCreditInfo('loanCreditScore_array')\">edit</button>\r\n             </div>\r\n           <h3>Loan Credit Score Details</h3>\r\n           <mat-card class='mtcd' *ngIf=\"loanCreditScore_array\">\r\n              <mat-card-content>\r\n               <div  *ngFor=\"let credit of loanCreditScore_array.agencyRating\">\r\n                 <div fxLayout=\"row\" class='rowbord'>\r\n                    <div fxFlex='4'></div>\r\n                    <div fxFlex='32'>\r\n                       <div class='label'>Customer Name</div>\r\n                       <div class='labelval'>{{loanCreditScore_array?.customerName}}</div>\r\n                    </div>\r\n                    <div fxFlex='32'>\r\n                       <div class='label'>Agency Name</div>\r\n                       <div class='labelval'>{{credit.agencyName}}</div>\r\n                    </div>\r\n                 <div fxFlex='32'>\r\n                   <div class='label'>Remarks</div>\r\n                   <div class='labelval'>{{credit.remarks}}</div>\r\n                 </div>\r\n                 <div fxFlex='32'>\r\n                    <div class='label'>Ratings</div>\r\n                    <div class='labelval'>{{credit.ratings}}</div>\r\n                  </div>\r\n                 </div>\r\n                 </div>\r\n              </mat-card-content>\r\n           </mat-card>\r\n           </mat-card>\r\n           <br />\r\n\r\n           <mat-card style=\"width: 800px\">\r\n            <div *ngIf=\"dataResponse.dataResp.status == 'BACKLOG'\">\r\n               <button type=\"button\"class=\"editScreen\" style=\"float: right;padding-top: 7px\"  (click)=\"editValuationOfAsset('valueofassest_array')\">edit</button>\r\n             </div>\r\n           <h3>Valuation of Asset Details</h3>\r\n           <mat-card class='mtcd'>\r\n              <mat-card-content>\r\n              \r\n                 <div fxLayout=\"row\" class='rowbord'>\r\n                    <div fxFlex='4'></div>\r\n                    <div fxFlex='32'>\r\n                       <div class='label'>Bank Valuation</div>\r\n                       <div class='labelval'>{{valueofassest_array?.bankValuation}}</div>\r\n                    </div>\r\n                    <div fxFlex='32'>\r\n                       <div class='label'>Asset Type</div>\r\n                       <div class='labelval'>{{valueofassest_array?.assetType}}</div>\r\n                    </div>\r\n                 <div fxFlex='32'>\r\n                   <div class='label'>Property Area Size</div>\r\n                   <div class='labelval'>{{valueofassest_array?.propertyAreaSize}}</div>\r\n                 </div>\r\n\r\n                 </div>\r\n                 <div fxLayout=\"row\" class='rowbord'>\r\n                    <div fxFlex='4'></div>\r\n                    <div fxFlex='32'>\r\n                       <div class='label'>Actual Property Area Size</div>\r\n                       <div class='labelval'>{{valueofassest_array?.actualPropertyAreaSize}}</div>\r\n                    </div>\r\n                    <div fxFlex='32'>\r\n                       <div class='label'>Borrower's Market Value</div>\r\n                       <div class='labelval'>{{valueofassest_array?.borrowersMktValOfAsset}}</div>\r\n                    </div>\r\n                    <div fxFlex='32'>\r\n                       <div class='label'>Face Value Of Asset</div>\r\n                       <div class='labelval'>{{valueofassest_array?.faceValOfAsset}}</div>\r\n                    </div>\r\n                 </div>\r\n               \r\n                 <div fxLayout=\"row\" class='rowbord'>\r\n                    <div fxFlex='4'></div>\r\n                    <div fxFlex='32'>\r\n                       <div class='label'>Market Value Of Asset</div>\r\n                       <div class='labelval'>{{valueofassest_array?.mktValOfAsset}}</div>\r\n                    </div>\r\n                    <div fxFlex='32'>\r\n                       <div class='label'>Asset Valuer</div>\r\n                       <div class='labelval'>{{valueofassest_array?.assetValue}}</div>\r\n                    </div>\r\n                    <div fxFlex='32'>\r\n                       <div class='label'>Forced Sale Value</div>\r\n                       <div class='labelval'>{{valueofassest_array?.forcedSaleValue}}</div>\r\n                    </div>                  \r\n                  </div>\r\n                  <div fxLayout=\"row\" class='rowbord'>\r\n                    <div fxFlex='4'></div>                    \r\n                    <div fxFlex='32'>\r\n                        <div class='label'>Valuation Date</div>\r\n                        <div class='labelval'>{{valueofassest_array?.valuationDate}}</div>\r\n                     </div>\r\n                  </div>\r\n              </mat-card-content>\r\n           </mat-card>\r\n           </mat-card>\r\n           <br />\r\n\r\n           <mat-card style=\"width: 800px\">\r\n            <div *ngIf=\"dataResponse.dataResp.status == 'BACKLOG'\">\r\n               <button type=\"button\"class=\"editScreen\" style=\"float: right;padding-top: 2px\"  (click)=\"editLegalOpinion('legaopninio_array')\">edit</button>\r\n             </div>\r\n            <h3>Legal Opinion Details</h3>\r\n            <mat-card class='mtcd'>\r\n               <mat-card-content>\r\n               \r\n                  <div fxLayout=\"row\" class='rowbord'>\r\n                     <div fxFlex='4'></div>\r\n                     <div fxFlex='32'>\r\n                        <div class='label'>Opinion</div>\r\n                        <div class='labelval'>{{legaopninio_array?.opinion}}</div>\r\n                     </div>\r\n                     <div fxFlex='32'>\r\n                        <div class='label'>Asset Area Size</div>\r\n                        <div class='labelval'>{{legaopninio_array?.assetAreaSize}}</div>\r\n                     </div>\r\n                  <div fxFlex='32'>\r\n                    <div class='label'>Description</div>\r\n                    <div class='labelval'>{{legaopninio_array?.description}}</div>\r\n                  </div>                \r\n \r\n                  </div>\r\n                  <div fxLayout=\"row\" class='rowbord'>\r\n                     <div fxFlex='4'></div>\r\n                     <div fxFlex='32'>\r\n                        <div class='label'>Lawyer Name</div>\r\n                        <div class='labelval'>{{legaopninio_array?.lawyerName}}</div>\r\n                     </div>\r\n                     <div fxFlex='32'>\r\n                        <div class='label'>Market Value Of Asset</div>\r\n                        <div class='labelval'>{{legaopninio_array?.mktValOfAsset}}</div>\r\n                     </div>\r\n                     <div fxFlex='32'>\r\n                        <div class='label'>Opinion Date</div>\r\n                        <div class='labelval'>{{legaopninio_array?.opinionDate}}</div>\r\n                     </div>                    \r\n                  </div>\r\n                   <div fxLayout=\"row\" class='rowbord'>\r\n                     <div fxFlex='4'></div>\r\n                      <div fxFlex='32'>\r\n                    <div class='label'>Is Decision Favorable?</div>\r\n                    <div class='labelval'>{{legaopninio_array?.isDecisionFavorable}}</div>\r\n                 </div>\r\n                     <div fxFlex='32'>\r\n                        <div class='label'>Valuation Date</div>\r\n                        <div class='labelval'>{{legaopninio_array?.valuationDate}}</div>\r\n                     </div>\r\n                  </div>\r\n               </mat-card-content>\r\n            </mat-card>\r\n            </mat-card>\r\n        </div>\r\n     </mat-card>\r\n     </div><br />\r\n \r\n       <div fxLayout=\"row\" class=\"flex-container\">\r\n        <div fxFlex=\"15\">\r\n         <div class='num'>4</div>\r\n         <div class='bordnum'>&nbsp;</div>\r\n      </div>\r\n        <mat-card label=\"Limit Entry Stage\" style=\"border-radius: 0px; width: 900px;\">        \r\n        <div fxFlex=\"85\">\r\n           <h2>Loan Assessment Details</h2>\r\n           <hr />\r\n           <mat-card style = \"width: 800px\">\r\n            <h3>Qualitative Scoreboard</h3>\r\n            <mat-card class=\"mtcd\">\r\n               <mat-card-content>\r\n                   <div fxLayout=\"row\" class='rowbord'>\r\n                     <div fxFlex='4'></div>\r\n                     <div fxFlex='32'>\r\n                        <div class='label'>ScoreCard Id</div>\r\n                        <div class='labelval'>{{qualitativeScoreboardSummary?.scoreCardId}}</div>\r\n                     </div>\r\n                     <div fxFlex='32'>\r\n                        <div class='label'>Number Of Applicants</div>\r\n                        <div class='labelval'>{{qualitativeScoreboardSummary?.numberOfApplicant}}</div>\r\n                     </div>                                        \r\n                  </div>\r\n               </mat-card-content>\r\n            </mat-card>\r\n            <mat-card class='mtcd'>\r\n                <mat-card-content>\r\n                    <div class=\"full-width\" style=\"padding: 0rem 2rem;\">             \r\n                        <div fxLayout=\"row wrap\" class=\"full-width\" >\r\n                          <div *ngFor='let item of qualitativeScoreboardSummary?.scoreCardMapping;let k=index'>  \r\n                            <div class=\"applicanthd\" \r\n                              style=\"font-weight: bold;font-family: sans-serif;\">Applicant {{item.applicantId}}</div>\r\n                              <div class=\"row wrap\">\r\n                                <div fxLayout=\"row wrap\" class=\"qtncard row\" style=\"max-width:100%\"\r\n                                 fxLayoutGap=\"30px\" fxFlex=\"50%\" fxFlex.gt-sm=\"100\" fxFlex.sm=\"50\" class=\"full-width\" \r\n                                 *ngFor='let item of qualitativeScoreboardSummary?.scoreCardMapping[k].scoreCardDetails;let i=index'>\r\n                                 <mat-card class=\"qtncard row\" style=\" justify-content:space-evenly;\">\r\n                                 <div>{{i+1}}.{{item.scorecardQuestion}}</div>\r\n                                 <div class='qtnval' style=\"opacity: 80%\">{{item.scorecardAnswer}}</div>\r\n                                 </mat-card>\r\n                                 <mat-card class=\"qtncard row\" style=\" justify-content:space-evenly;\">\r\n                                 <div>Score</div>\r\n                                 <div class='qtnval' style=\"opacity: 80%\">{{item.scoreData}}</div>\r\n                                 </mat-card>\r\n                                </div>\r\n                              </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                </mat-card-content>\r\n            </mat-card>\r\n           </mat-card>\r\n\r\n           <mat-card style=\"width: 800px\">\r\n            <div *ngIf=\"dataResponse.dataResp.status == 'BACKLOG'\">\r\n               <button type=\"button\"class=\"editScreen\" style=\"float: right;padding-top: 2px\"  (click)=\"editAssessmentInfo('loanassement_array')\">edit</button>\r\n             </div> \r\n           <h3>Assessment Details</h3>\r\n           <mat-card class='mtcd'>\r\n              <mat-card-content>\r\n              \r\n                 <div fxLayout=\"row\" class='rowbord'>\r\n                    <div fxFlex='4'></div>\r\n                    <div fxFlex='32'>\r\n                       <div class='label'>Approved Loan Amount</div>\r\n                       <div class='labelval'>{{loanassement_array?.approvedLoanAmount}}</div>\r\n                    </div>\r\n                    <div fxFlex='32'>\r\n                       <div class='label'>Loan Tenure</div>\r\n                       <div class='labelval'>{{loanassement_array?.loanTenure}}</div>\r\n                    </div>\r\n                 <div fxFlex='32'>\r\n                   <div class='label'>Rate Of Interest</div>\r\n                   <div class='labelval'>{{loanassement_array?.rateOfInterest}}</div>\r\n                 </div>                \r\n                 </div>\r\n                 <div fxLayout=\"row\" class='rowbord'>\r\n                    <div fxFlex='4'></div>\r\n                    <div fxFlex='32'>\r\n                       <div class='label'>Loan Amount Recommended</div>\r\n                       <div class='labelval'>{{loanassement_array?.loanAmountRecommendation}}</div>\r\n                    </div>\r\n                    <div fxFlex='32'>\r\n                       <div class='label'>System Recommendation</div>\r\n                       <div class='labelval'>{{loanassement_array?.systemRecommendation}}</div>\r\n                    </div>\r\n                 <div fxFlex='32'>\r\n                   <div class='label'>User Recommendation</div>\r\n                   <div class='labelval'>{{loanassement_array?.userRecommendation}}</div>\r\n                 </div>\r\n                 <!-- <div fxFlex='32'>\r\n                    <div class='label'>Requested Loan Amount</div>\r\n                    <div class='labelval'>{{loanassement_array?.requestedLoanAmount}}</div>\r\n                  </div> -->\r\n                 </div>\r\n               <div fxLayout=\"row\" class='rowbord'>\r\n                    <div fxFlex='4'></div>                    \r\n                 <div fxFlex='32'>\r\n                    <div class='label'>Requested Loan Amount</div>\r\n                    <div class='labelval'>{{loanassement_array?.requestedLoanAmount}}</div>\r\n                  </div>\r\n                 </div>\r\n               \r\n              </mat-card-content>\r\n           </mat-card>\r\n           </mat-card>\r\n           <br />\r\n        </div>\r\n     </mat-card>\r\n     </div><br />\r\n \r\n     <div fxLayout=\"row\" class=\"flex-container\">\r\n      <div fxFlex=\"15\">\r\n         <div class='num'>5</div>\r\n         <div class='bordnum'>&nbsp;</div>\r\n      </div>\r\n      <mat-card label=\"Limit Entry Stage\" style=\"border-radius: 0px; width: 900px;\">         \r\n      <div fxFlex=\"85\">\r\n         <h2>Loan Offer Issue</h2>\r\n         <hr />\r\n         <br />\r\n\r\n         <mat-card style=\"width: 800px\">\r\n            <div *ngIf=\"dataResponse.dataResp.status == 'BACKLOG'\">\r\n               <button type=\"button\"class=\"editScreen\" style=\"float: right;padding-top: 2px\"  (click)=\"editOfferIssueInfo('offerissue_array')\">edit</button>\r\n             </div>\r\n         <h3>Offer Issue Details</h3>\r\n         <mat-card class='mtcd'>\r\n            <mat-card-content>\r\n               <div fxLayout=\"row\" class='rowbord'>\r\n                  <div fxFlex='4'></div>\r\n                  <div fxFlex='32'>\r\n                     <div class='label'>Applicant Name</div>\r\n                     <div class='labelval'>{{offerissue_array?.applicantName}}</div>\r\n                  </div>\r\n                  <div fxFlex='32'>\r\n                     <div class='label'>Approved Loan Amount</div>\r\n                     <div class='labelval'>{{offerissue_array?.approvedLoanAmount}}</div>\r\n                  </div>\r\n               <div fxFlex='32'>\r\n                 <div class='label'>Charges</div>\r\n                 <div class='labelval'>{{offerissue_array?.charges}}</div>\r\n               </div>\r\n\r\n               </div>\r\n               <div fxLayout=\"row\" class='rowbord'>\r\n                  <div fxFlex='4'></div>\r\n                  <div fxFlex='32'>\r\n                     <div class='label'>Generate Offer</div>\r\n                     <div class='labelval'>{{offerissue_array?.generateOffer}}</div>\r\n                  </div>\r\n                  <div fxFlex='32'>\r\n                     <div class='label'>Installment Amount</div>\r\n                     <div class='labelval'>{{offerissue_array?.installmentAmount}}</div>\r\n                  </div>\r\n                  <div fxFlex='32'>\r\n                     <div class='label'>Installment Type</div>\r\n                     <div class='labelval'>{{offerissue_array?.installmentType}}</div>\r\n                  </div>\r\n               </div>\r\n             \r\n               <div fxLayout=\"row\" class='rowbord'>\r\n                  <div fxFlex='4'></div>\r\n                  <div fxFlex='32'>\r\n                     <div class='label'>Interest</div>\r\n                     <div class='labelval'>{{offerissue_array?.interest}}</div>\r\n                  </div>\r\n                  <div fxFlex='32'>\r\n                     <div class='label'>Loan Tenure</div>\r\n                     <div class='labelval'>{{offerissue_array?.loanTenure}}</div>\r\n                  </div>\r\n                  <div fxFlex='32'>\r\n                     <div class='label'>Offer Issue Date</div>\r\n                     <div class='labelval'>{{offerissue_array?.offerIssueDate}}</div>\r\n                  </div>\r\n                </div>\r\n\r\n\r\n                <div fxLayout=\"row\" class='rowbord'>\r\n                  <div fxFlex='4'></div>\r\n                  <div fxFlex='32'>\r\n                     <div class='label'>Principal</div>\r\n                     <div class='labelval'>{{offerissue_array?.principal}}</div>\r\n                  </div>\r\n                  <div fxFlex='32'>\r\n                     <div class='label'>Rate Of Interest</div>\r\n                     <div class='labelval'>{{offerissue_array?.rateOfInterest}}</div>\r\n                  </div>\r\n                  <div fxFlex='32'>\r\n                     <!-- <div class='label'>Installment Type</div>\r\n                     <div class='labelval'>{{offerissue_array?.installmentType}}</div> -->\r\n                  </div>\r\n               </div>\r\n            </mat-card-content>\r\n         </mat-card>\r\n         </mat-card>\r\n         <br />\r\n      </div>\r\n   </mat-card>\r\n   </div><br />\r\n\r\n      <div fxLayout=\"row\" class=\"flex-container\">\r\n      <div fxFlex=\"15\">\r\n         <div class='num'>6</div>\r\n         <div class='bordnum'>&nbsp;</div>\r\n      </div>\r\n      <mat-card label=\"Limit Entry Stage\" style=\"border-radius: 0px; width: 900px;\">         \r\n      <div fxFlex=\"85\">\r\n         <h2>Offer Accept/Reject Stage</h2>\r\n         <hr />\r\n        \r\n         <br />\r\n         <mat-card style=\"width: 800px\">           \r\n         <h3>Offer Accept Details</h3>\r\n         <mat-card class='mtcd' *ngIf=\"offerDetails\">\r\n            <mat-card-content>\r\n               <div fxLayout=\"row\" class='rowbord'>\r\n                  <div fxFlex='4'></div>\r\n                  <div fxFlex='32'>\r\n                     <div class='label'>Applicant Name</div>\r\n                     <div class='labelval'>{{offerDetails.applicantName}}</div>\r\n                   </div>\r\n                  <div fxFlex='32'>\r\n                     <div class='label'>Approved Loan Amount</div>\r\n                     <div class='labelval'>{{offerDetails?.approvedLoanAmount}}</div>\r\n                  </div>\r\n                  <div fxFlex='32'>\r\n                     <div class='label'>Loan Tenure</div>\r\n                     <div class='labelval'>{{offerDetails?.loanTenure}}</div>\r\n                  </div>\r\n              \r\n               </div>\r\n               <div fxLayout=\"row\" class='rowbord'>\r\n                  <div fxFlex='4'></div>\r\n                  <div fxFlex='32'>\r\n                     <div class='label'>Installment Type</div>\r\n                     <div class='labelval'>{{offerDetails.installmentType}}</div>\r\n                  </div>\r\n                  <div fxFlex='32'>\r\n                     <div class='label'>Installment Frequency</div>\r\n                     <div class='labelval'>{{offerDetails.installmentFrequency}}</div>\r\n                  </div>\r\n                  <div fxFlex='32'>\r\n                     <div class='label'>Rate Of Interest(in %)</div>\r\n                     <div class='labelval'>{{offerDetails.rateOfInterest}}</div>\r\n                  </div>\r\n               </div>\r\n             \r\n               <div fxLayout=\"row\" class='rowbord'>\r\n                  <div fxFlex='4'></div>\r\n                  <div fxFlex='32'>\r\n                     <div class='label'>Offer Issue Date</div>\r\n                     <div class='labelval'>{{offerDetails.offerIssueDate}}</div>\r\n                  </div>\r\n                  <div fxFlex='32'>\r\n                     <div class='label'>Generate Offer</div>\r\n                     <div class='labelval'>{{offerDetails.generateOffer}}</div>\r\n                  </div>\r\n                  <div fxFlex='32'>\r\n                     <div class='label'>Offer Expiry Date</div>\r\n                     <div class='labelval'>{{offerDetails.offerExpiryDate}}</div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div fxLayout=\"row\" class='rowbord'>\r\n                  <div fxFlex='4'></div>\r\n                  <div fxFlex='32'>\r\n                     <div class='label'>Date Of Offer Accept/Reject</div>\r\n                     <div class='labelval'>{{offerDetails.dateOfOfferAcceptOrReject}}</div>\r\n                  </div>                \r\n               </div>\r\n            </mat-card-content>\r\n         </mat-card>\r\n         </mat-card>\r\n         <br />\r\n      </div>\r\n   </mat-card>\r\n   </div><br />\r\n   \r\n         <div fxLayout=\"row\" class=\"flex-container\">\r\n      <div fxFlex=\"15\">\r\n         <div class='num'>7</div>\r\n         <div class='bordnum'>&nbsp;</div>\r\n      </div>\r\n      <mat-card label=\"Limit Entry Stage\" style=\"border-radius: 0px; width: 900px;\">         \r\n      <div fxFlex=\"85\">\r\n         <h2>Post Offer Amend Stage</h2>\r\n         <hr />\r\n        \r\n         <br />\r\n         <mat-card style=\"width: 800px\">           \r\n         <h3>Post Offer Amend Stage</h3>\r\n         <mat-card class='mtcd' *ngIf=\"postOfferDetails\">\r\n            <mat-card-content>\r\n               <div fxLayout=\"row\" class='rowbord'>\r\n                  <div fxFlex='4'></div>\r\n                  <div fxFlex='32'>\r\n                     <div class='label'>Applicant Name</div>\r\n                     <div class='labelval'>{{postOfferDetails.applicantName}}</div>\r\n                   </div>\r\n                  <div fxFlex='32'>\r\n                     <div class='label'>Offer Issue Date</div>\r\n                     <div class='labelval'>{{postOfferDetails.offerIssueDate}}</div>\r\n                  </div>\r\n                  <div fxFlex='32'>\r\n                     <div class='label'>Offer Exipiry Date</div>\r\n                     <div class='labelval'>{{postOfferDetails.offerExpiryDate}}</div>\r\n                  </div>\r\n              \r\n               </div>\r\n               <div fxLayout=\"row\" class='rowbord'>\r\n                  <div fxFlex='4'></div>\r\n                  <div fxFlex='32'>\r\n                     <div class='label'>Offer Amend Date</div>\r\n                     <div class='labelval'>{{postOfferDetails.offerAmendDate}}</div>\r\n                  </div>\r\n                  <div fxFlex='32'>\r\n                     <div class='label'>Approved Loan Amount</div>\r\n                     <div class='labelval'>{{postOfferDetails.approvedLoanAmount}}</div>\r\n                  </div>\r\n                  <div fxFlex='32'>\r\n                     <div class='label'>Loan Amount Recommended</div>\r\n                     <div class='labelval'>{{postOfferDetails.loanAmmountRecommended}}</div>\r\n                  </div>\r\n               </div>\r\n             \r\n               <div fxLayout=\"row\" class='rowbord'>\r\n                  <div fxFlex='4'></div>\r\n                  <div fxFlex='32'>\r\n                     <div class='label'>Loan Tenure</div>\r\n                     <div class='labelval'>{{postOfferDetails.loanTenure}}</div>\r\n                  </div>\r\n                  <div fxFlex='32'>\r\n                     <div class='label'>Installment Type</div>\r\n                     <div class='labelval'>{{postOfferDetails.installmentType}}</div>\r\n                  </div>\r\n                  <div fxFlex='32'>\r\n                     <div class='label'>Rate Of Interest(%)</div>\r\n                     <div class='labelval'>{{postOfferDetails.rateOfInterest}}</div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div fxLayout=\"row\" class='rowbord'>\r\n                  <div fxFlex='4'></div>\r\n                  <div fxFlex='32'>\r\n                     <div class='label'>Margin(%))</div>\r\n                     <div class='labelval'>{{postOfferDetails.margin}}</div>\r\n                  </div>\r\n                   <div fxFlex='32'>\r\n                     <div class='label'>Effective Rate(%)</div>\r\n                     <div class='labelval'>{{postOfferDetails.effectiveRate}}</div>\r\n                  </div>                \r\n               </div>\r\n            </mat-card-content>\r\n         </mat-card>\r\n         </mat-card>\r\n         <br />\r\n      </div>\r\n   </mat-card>\r\n   </div><br />\r\n\r\n\r\n   <div fxLayout=\"row\" class=\"flex-container\">\r\n      <div fxFlex=\"15\">\r\n         <div class='num'>8</div>\r\n         <div class='bordnum'>&nbsp;</div>\r\n      </div>\r\n      <mat-card label=\"Limit Entry Stage\" style=\"border-radius: 0px; width: 900px;\">         \r\n      <div fxFlex=\"85\">\r\n         <h2>Account Credit Details Stage</h2>\r\n         <hr />\r\n        \r\n         <br />\r\n         <mat-card style=\"width: 800px\">           \r\n         <h3>Account Credit Details Stage</h3>\r\n         <mat-card class='mtcd' *ngIf=\"accountCreateValue\">\r\n            <mat-card-content>\r\n               <div fxLayout=\"row\" class='rowbord'>\r\n                  <div fxFlex='4'></div>\r\n                  <div fxFlex='32'>\r\n                     <div class='label'>Applicant Name</div>\r\n                     <div class='labelval'>{{accountCreateValue.applicantName}}</div>\r\n                   </div>\r\n                  <div fxFlex='32'>\r\n                     <div class='label'>Approved Loan Amount</div>\r\n                     <div class='labelval'>{{accountCreateValue.approvedLoanAmount}}</div>\r\n                  </div>\r\n                  <div fxFlex='32'>\r\n                     <div class='label'>Offer Issue Date</div>\r\n                     <div class='labelval'>{{accountCreateValue.offerIssueDate}}</div>\r\n                  </div>\r\n              \r\n               </div>\r\n               <div fxLayout=\"row\" class='rowbord'>\r\n                  <div fxFlex='4'></div>\r\n                  <div fxFlex='32'>\r\n                     <div class='label'>Offer Accepted Date</div>\r\n                     <div class='labelval'>{{accountCreateValue.offerAcceptedDate}}</div>\r\n                  </div>\r\n                  <div fxFlex='32'>\r\n                     <div class='label'>Loan Tenure</div>\r\n                     <div class='labelval'>{{accountCreateValue.loanTenure}}</div>\r\n                  </div>\r\n                  <div fxFlex='32'>\r\n                     <div class='label'>Installment Type</div>\r\n                     <div class='labelval'>{{accountCreateValue.installmentType}}</div>\r\n                  </div>\r\n               </div>\r\n             \r\n               <div fxLayout=\"row\" class='rowbord'>\r\n                  <div fxFlex='4'></div>\r\n                  <div fxFlex='32'>\r\n                     <div class='label'>Installment Frequency</div>\r\n                     <div class='labelval'>{{accountCreateValue.installmentFrequency}}</div>\r\n                  </div>\r\n                  <div fxFlex='32'>\r\n                     <div class='label'>Rate of Interest</div>\r\n                     <div class='labelval'>{{accountCreateValue.rateOfInterest}}</div>\r\n                  </div>\r\n                  <div fxFlex='32'>\r\n                     <div class='label'>Principal</div>\r\n                     <div class='labelval'>{{accountCreateValue.principal}}</div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div fxLayout=\"row\" class='rowbord'>\r\n                  <div fxFlex='4'></div>\r\n                  <div fxFlex='32'>\r\n                     <div class='label'>Interest</div>\r\n                     <div class='labelval'>{{accountCreateValue.interest}}</div>\r\n                  </div>\r\n                  <div fxFlex='32'>\r\n                     <div class='label'>Installment Amount</div>\r\n                     <div class='labelval'>{{accountCreateValue.installmentAmount}}</div>\r\n                  </div>\r\n                  <div fxFlex='32'>\r\n                     <div class='label'>Charges</div>\r\n                     <div class='labelval'>{{accountCreateValue.charges}}</div>\r\n                  </div>\r\n               </div>\r\n               <div fxLayout=\"row\" class='rowbord'>\r\n                  <div fxFlex='4'></div>\r\n                  <div fxFlex='32'>\r\n                     <div class='label'>Disbursement Amount</div>\r\n                     <div class='labelval'>{{accountCreateValue.disbursementAmount}}</div>\r\n                  </div>\r\n                  <div fxFlex='32'>\r\n                     <div class='label'>Repayment Amount</div>\r\n                     <div class='labelval'>{{accountCreateValue.repaymentAmount}}</div>\r\n                  </div>\r\n                  \r\n               </div>\r\n            </mat-card-content>\r\n         </mat-card>\r\n         </mat-card>\r\n         <br />\r\n      </div>\r\n   </mat-card>\r\n   </div><br />\r\n       <br />\r\n       <div fxLayout=\"row\" class=\"flex-container\" style=\"flex-direction: row; box-sizing: border-box; display: flex;\">\r\n         <div fxFlex=\"15\">\r\n            <div class='num'>9</div>\r\n            <div class='bordnum'>&nbsp;</div>\r\n         </div>\r\n      \r\n         <div fxFlex=\"85\" style=\"flex: 1 1 100%; box-sizing: border-box; max-width: 85%;\" class=\"margin1\">\r\n            <h2>Digital Sign</h2>\r\n            <!-- <hr /> -->\r\n            <!-- <h3>Digital Sign</h3> -->\r\n            <div fxLayout=\"row\" fxLayoutAlign=\"space between center\">\r\n               <fieldset>\r\n               <legend visible=\"true\">Digital Sign</legend>\r\n            </fieldset>\r\n               \r\n            </div>\r\n            \r\n      \r\n            <mat-card class='mtcd'>\r\n               <mat-card-content>\r\n                  <div fxLayout=\"row\" class='rowbord'>\r\n                     <div fxFlex='4'></div>\r\n                     <div fxFlex='32'>\r\n                        <div class='label'>Document Name</div>\r\n                        <div class='labelval'>{{signatureData?.documentName}}</div>\r\n                     </div>\r\n                     <div fxFlex='32'>\r\n                        <div class='label'>File Type</div>\r\n                        <div class='labelval'>{{signatureData?.fileType}}</div>\r\n                     </div>\r\n                     <div fxFlex='32'>\r\n                        <div class='label'>File Name</div>\r\n                        <div class='labelval'>{{signatureData?.fileName}}</div>\r\n                     </div>\r\n                     <div fxFlex='32'>\r\n                        <div class='label'>Download</div>\r\n                        <div *ngIf=\"signatureData?.fileUrl\" class='labelval'>\r\n                           <a class=\"linkColor\" href={{signatureData.fileUrl}} download>link</a>\r\n                           <link>\r\n                        </div>\r\n                     </div>\r\n                  </div>\r\n               </mat-card-content>\r\n            </mat-card>\r\n            <!-- <hr /> -->\r\n         </div>\r\n      \r\n      </div>\r\n\r\n       <div >\r\n    \r\n       <div fxLayout=\"row\" fxLayoutAlign=\"end\" fxLayoutGap=\"20px\">\r\n         <div>\r\n             <button type=\"button\"  class=\"rejectbtn\" [hidden]=\"rejectedStatus\"\r\n             [ngClass]=\"{'disabledbtn':rejectedStatus,'rejectbtn': !rejectedStatus }\"\r\n                    (click)=\"updateApplicationStatus(loanAccount_array,'REJECTED')\">\r\n                    Reject\r\n                 </button>\r\n                 &nbsp;&nbsp;\r\n                 <button type=\"button\"  class=\"approvebtn\" [hidden]=\"approvedStatus\"\r\n                 [ngClass]=\"{'disabledbtn':approvedStatus,'approvebtn': !approvedStatus }\"\r\n                       (click)=\"updateApplicationStatus(loanAccount_array,'APPROVED')\">Approve</button> \r\n                       &nbsp;&nbsp;\r\n             <!-- <button type=\"button\" class=\"editbtn\" [hidden]=\"editScreen\"\r\n             (click)=\"goToLoanAccount()\">Edit\r\n            </button>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; -->\r\n          </div>\r\n         </div>\r\n       </div>\r\n       <br>\r\n    </div>\r\n    </div>\r\n </div>\r\n </div>\r\n </div>\r\n\r\n","import { ChangeDetectorRef, Component, Inject, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport * as moment from 'moment';\r\nimport Swal from 'sweetalert2';\r\nimport { TasksummaryService } from '../../tasksummary.service';\r\n\r\n@Component({\r\n  selector: 'app-unsecured-overdraft-details-update',\r\n  templateUrl: './unsecured-overdraft-details-update.component.html',\r\n  styleUrls: ['./unsecured-overdraft-details-update.component.scss']\r\n})\r\nexport class UnsecuredOverdraftDetailsUpdateComponent implements OnInit {\r\n\r\n  unsecuredUpdateForm: FormGroup\r\n  accountId: any;\r\n  flag: boolean;\r\n  selectedDay: any;\r\n  selectedYear: any;\r\n  currency: any;\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public data,\r\n    public dialogRef: MatDialogRef<UnsecuredOverdraftDetailsUpdateComponent>,\r\n    private ls: LocalStoreService,\r\n    private formBuilder: FormBuilder,\r\n    private cdr: ChangeDetectorRef,\r\n    private api: ApiService,\r\n    private snack: MatSnackBar,\r\n    private tasksummaryService: TasksummaryService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.accountId = this.ls.getItem('accountId');\r\n    console.log(this.data, this.accountId);\r\n    this.getCurrencyDetails();\r\n    if (this.data) {\r\n      this.buildUnsecuredForm(this.data);\r\n    }\r\n    else {\r\n      this.buildUnsecuredForm();\r\n    }\r\n\r\n  }\r\n\r\n  buildUnsecuredForm(data?, isResponse?: boolean) {\r\n    this.unsecuredUpdateForm = this.formBuilder.group({\r\n      limitId: [data ? data.limitId : '', Validators.required],\r\n      accountId: this.accountId != null ? this.accountId : '',\r\n      overdraftCurrency: [data ? data.overdraftCurrency : '', Validators.required],\r\n      overdraftLimitAmount: [data ? data.overdraftLimitAmount : '', Validators.required],\r\n      limitStartDate: [data ? new Date(data.limitStartDate) : '', Validators.required],\r\n      limitEndDate: [data ? new Date(data.limitEndDate) : '', Validators.required],\r\n      unsecuredLimit: [''],\r\n      renewPeriod: [data ? data.renewPeriod : ''],\r\n      renewalAmount: [data ? data.renewalAmount : ''],\r\n      year: [data ? data.year : ''],\r\n      month: [data ? data.month : ''],\r\n      day: [data ? data.day : ''],\r\n      overdraftLimitRenewed: [data ? data.overdraftLimitRenewed : ''],\r\n    });\r\n    if (data) {\r\n      console.log(\"values:\", data.renewPeriod);\r\n      if (data.renewPeriod) {\r\n        this.selectedYear = data.renewPeriod.substring(0, 4);\r\n        let selectedMonth = data.renewPeriod.substring(5, 8);\r\n        this.selectedDay = data.renewPeriod.substring(9, 11);\r\n\r\n        this.unsecuredUpdateForm.get('year').setValue(Number(this.selectedYear));\r\n        this.unsecuredUpdateForm.get('month').setValue(selectedMonth);\r\n        this.unsecuredUpdateForm.get('day').setValue(Number(this.selectedDay));\r\n        this.cdr.markForCheck();\r\n      }\r\n    }\r\n  }\r\n\r\n  onSubmit() {\r\n    if (this.unsecuredUpdateForm.value.overdraftLimitRenewed) {\r\n      if (this.unsecuredUpdateForm.controls.day.value == null || this.unsecuredUpdateForm.controls.year.value == null || this.unsecuredUpdateForm.controls.month.value == null) {\r\n        this.snack.open('Please give Renew Period', 'OK', {\r\n          duration: 4000,\r\n          verticalPosition: 'top',\r\n          horizontalPosition: 'right'\r\n        });\r\n        return;\r\n      }\r\n    }\r\n    let startDate = this.convertDate(this.unsecuredUpdateForm.controls.limitStartDate.value);\r\n    this.unsecuredUpdateForm.value['limitStartDate'] = startDate;\r\n    let endDate = this.convertDate(this.unsecuredUpdateForm.controls.limitEndDate.value);\r\n    this.unsecuredUpdateForm.value['limitEndDate'] = endDate;\r\n    let renewData;\r\n    if (this.unsecuredUpdateForm.value.overdraftLimitRenewed) {\r\n      renewData = this.unsecuredUpdateForm.value.year + '-' + this.unsecuredUpdateForm.value.month + '-' + this.unsecuredUpdateForm.value.day;\r\n    } else {\r\n      renewData = '';\r\n    }\r\n\r\n    let limitData = this.unsecuredUpdateForm.value.limitId;\r\n    let currencyData = this.unsecuredUpdateForm.value.overdraftCurrency;\r\n    let overdraftLAData = this.unsecuredUpdateForm.value.overdraftLimitAmount;\r\n    let limitStartDateData = this.unsecuredUpdateForm.value.limitStartDate;\r\n    let limitEndDateData = this.unsecuredUpdateForm.value.limitEndDate;\r\n    let overdraftLimitRenewed = this.unsecuredUpdateForm.value.overdraftLimitRenewed;\r\n    let renewalAmountData = this.unsecuredUpdateForm.value.renewalAmount;\r\n    let finalPayload = {\r\n      accountId: this.accountId,\r\n      limitId: limitData,\r\n      overdraftCurrency: currencyData,\r\n      overdraftLimitAmount: overdraftLAData,\r\n      limitStartDate: limitStartDateData,\r\n      limitEndDate: limitEndDateData,\r\n      renewPeriod: renewData,\r\n      renewalAmount: renewalAmountData,\r\n      overdraftLimitRenewed: overdraftLimitRenewed\r\n    };\r\n    if (finalPayload.limitId == null || finalPayload.overdraftLimitAmount == null) {\r\n      Swal.fire('Please Enter The Mandatory Fields !');\r\n      return false;\r\n    }\r\n\r\n    if (this.unsecuredUpdateForm.value.limitId != '') {\r\n      this.api.unsecuredDraft(finalPayload).subscribe(resp => {\r\n        this.snack.open('UnSecured Overdraft Details Updated!', 'OK', {\r\n          duration: 4000,\r\n          verticalPosition: 'top',\r\n          horizontalPosition: 'right'\r\n        });\r\n            this.dialogRef.close({\r\n              status: 'BACKLOG'\r\n        })\r\n      }, err => {\r\n        this.snack.open(err['message'], 'OK', {\r\n          duration: 4000,\r\n          verticalPosition: 'top',\r\n          horizontalPosition: 'right'\r\n        });\r\n      })\r\n    }\r\n\r\n  }\r\n\r\n  getCurrencyDetails() {\r\n    this.api.fetchCurrencyMaintAuthRecs().subscribe(resp => {\r\n      this.currency = resp\r\n    })\r\n  }\r\n  onToggle(event) {\r\n    if (event.checked === true) {\r\n      this.flag = true;\r\n    }\r\n    else {\r\n      this.flag = false;\r\n      this.unsecuredUpdateForm.get('renewalAmount').setValue('');\r\n    }\r\n  }\r\n  _keyPress(event: any) {\r\n    const pattern = /[0-9]/;\r\n    let inputChar = String.fromCharCode(event.charCode);\r\n    if (!pattern.test(inputChar)) {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n  convertDate(value) {\r\n    let date = moment(value).format('YYYY-MMM-DD');\r\n    console.log(\"date\", date);\r\n    if (date)\r\n      return date;\r\n  }\r\n  close() {\r\n    this.dialogRef.close({\r\n      status: \"ONGOING\"\r\n    })\r\n  }\r\n}","<div fxLayout=\"row\" fxLayoutGap=\"25px\" fxLayout=\"row\" fxLayoutAlign=\"end\" class=\"contain\">\r\n    <mat-icon class=\"closeIcon\" (click)=\"close()\">close</mat-icon>\r\n</div>\r\n<h1 mat-dialog-title>Unsecured Overdraft Details</h1>\r\n<mat-dialog-content>\r\n    <form *ngIf=\"unsecuredUpdateForm\" [formGroup]=\"unsecuredUpdateForm\">\r\n        <mat-card>\r\n            <div fxLayout=\"row wrap\">\r\n                <div fxFlex=\"100%\" fxFlex.gt-xs=\"50\" class=\"pr-1\">\r\n                    <div fxFlex=\"30%\" appearance=\"outline\" class=\"full-width\">\r\n                        <mat-hint class=\"hintClass\">Limit ID*</mat-hint>\r\n                        <mat-card class=\"inputCard\">\r\n                            <input matInput (keypress)=_keyPress($event) id=\"limitId\" formControlName=\"limitId\"\r\n                                name=\"mod\" placeholder=\"Limit ID\" />\r\n                        </mat-card>\r\n                        <mat-error class=\"errorClass\" *ngIf=\"unsecuredUpdateForm.get('limitId').hasError('required')\">\r\n                            Please Enter Limit ID\r\n                        </mat-error>\r\n                    </div>\r\n                </div>\r\n                <div fxFlex=\"100%\" fxLayout=\"row wrap\" fxLayoutGap=\"5%\">\r\n                    <div fxFlex=\"40%\" appearance=\"outline\" class=\"full-width\">\r\n                        <mat-hint class=\"hintClass\">Currency*</mat-hint>\r\n                        <mat-card class=\"inputCard\">\r\n                            <mat-select name=\"prefix\" ([ngModel])=\"selectedCurrency\"\r\n                                formControlName=\"overdraftCurrency\">\r\n                                <mat-option *ngFor=\"let i of currency\" [value]=\"i.currencyId.currencyCode\">{{\r\n                                    i.currencyId.currencyCode }}</mat-option>\r\n                            </mat-select>\r\n                        </mat-card>\r\n                        <mat-error class=\"errorClass\"\r\n                            *ngIf=\"unsecuredUpdateForm.get('overdraftCurrency').hasError('required')\">\r\n                            Please select Currency\r\n                        </mat-error>\r\n                    </div>\r\n                    <div fxFlex=\"40%\" appearance=\"outline\" class=\"full-width\">\r\n                        <mat-hint class=\"hintClass\">Overdraft Limit Amount*</mat-hint>\r\n                        <mat-card class=\"inputCard\">\r\n                            <input matInput name=\"a_sig\" (keypress)=_keyPress($event) maxlength=\"15\"\r\n                                formControlName=\"overdraftLimitAmount\" placeholder=\"Overdraft Limit Amount\" />\r\n                        </mat-card>\r\n                        <mat-error class=\"errorClass\"\r\n                            *ngIf=\"unsecuredUpdateForm.controls['overdraftLimitAmount'].touched\">\r\n                            Please enter Overdraft Limit Amount\r\n                        </mat-error>\r\n                    </div>\r\n                </div>\r\n                <div fxFlex=\"100%\" fxLayout=\"row wrap\" fxLayoutGap=\"5%\">\r\n                    <div fxFlex=\"40%\">\r\n                        <div appearance=\"outline\" class=\"full-width\">\r\n                            <mat-hint class=\"hintClass\">Limit Start Date*</mat-hint>\r\n                            <mat-card class=\"inputCard\">\r\n                                <input readonly matInput name=\"dob\" formControlName=\"limitStartDate\"\r\n                                    placeholder=\"Limit Start Date\" [matDatepicker]=\"appDatepicker\" [min]=\"minDate\" />\r\n                                <mat-datepicker-toggle matSuffix [for]=\"appDatepicker\"></mat-datepicker-toggle>\r\n                            </mat-card>\r\n                            <mat-error class=\"errorClass\"\r\n                                *ngIf=\"unsecuredUpdateForm.get('limitStartDate').hasError('required')\">\r\n                                Please select Limit Start Date\r\n                            </mat-error>\r\n                        </div>\r\n\r\n                        <mat-datepicker #appDatepicker></mat-datepicker>\r\n                    </div>\r\n                    <div fxFlex=\"40%\">\r\n                        <div appearance=\"outline\" class=\"full-width\">\r\n\r\n                            <mat-hint class=\"hintClass\">Limit End Date*</mat-hint>\r\n                            <mat-card class=\"inputCard\">\r\n                                <div fxFlex=\"85%\">\r\n                                    <input matInput name=\"dob\" formControlName=\"limitEndDate\"\r\n                                        [min]=\"unsecuredUpdateForm.get('limitStartDate').value\"\r\n                                        placeholder=\"Limit End Date\" [matDatepicker]=\"appDatepicker1\" readonly />\r\n                                </div>\r\n                                <div fxFelx=\"15%\">\r\n                                    <mat-datepicker-toggle matSuffix [for]=\"appDatepicker1\"></mat-datepicker-toggle>\r\n                                </div>\r\n                            </mat-card>\r\n                            <mat-error class=\"errorClass\"\r\n                                *ngIf=\"unsecuredUpdateForm.get('limitEndDate').hasError('required')\">\r\n                                Please select Limit End Date\r\n                            </mat-error>\r\n                        </div>\r\n\r\n                        <mat-datepicker #appDatepicker1></mat-datepicker>\r\n                    </div>\r\n                </div>\r\n                <div fxFlex=\"100\" fxLayout=\"row\">\r\n                    <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-1\">\r\n                        <div class=\"pb-1\">\r\n                            Do your Unsecured Overdraft Limit has to be renewed ? <mat-slide-toggle\r\n                                formControlName=\"overdraftLimitRenewed\" (change)=\"onToggle($event)\"></mat-slide-toggle>\r\n                        </div><br>\r\n                    </div>\r\n                </div>\r\n\r\n                <div *ngIf=\"flag\" fxflex=\"100\">\r\n                    <div fxLayout=\"row\">\r\n                        <div fxFlex=\"50%\">\r\n                            <mat-hint class=\"hintClass\">Renew Period</mat-hint>\r\n                            <div fxLayout=\"row wrap\" fxLayoutGap=\"5px\" fxLayout=\"row\">\r\n                                <div>\r\n                                    <mat-hint>Years</mat-hint>\r\n                                    <mat-card class=\"inputCard\">\r\n                                        <mat-select ([ngModel])=\"selectedYear\" required formControlName=\"year\">\r\n                                            <mat-option *ngFor=\"let year of years\" [value]=\"year\">{{ year\r\n                                                }}</mat-option>\r\n                                        </mat-select>\r\n                                    </mat-card>\r\n                                    <mat-error class=\"errorClass\"\r\n                                        *ngIf=\"unsecuredUpdateForm.get('year').hasError('required')&& unsecuredUpdateForm.get('year').touched\">\r\n                                        Please select Year\r\n                                    </mat-error>\r\n                                </div>\r\n\r\n                                <div>\r\n                                    <div class=\"pb-1\">\r\n                                        <div class=\"full-width\" appearance=\"outline\">\r\n                                            <mat-hint class=\"hintClass\">Months</mat-hint>\r\n                                            <mat-card class=\"inputCard\">\r\n                                                <mat-select ([ngModel])=\"selectedMonth\" required\r\n                                                    formControlName=\"month\">\r\n                                                    <mat-option *ngFor=\"let month of months\" [value]=\"month\">{{ month\r\n                                                        }}</mat-option>\r\n                                                </mat-select>\r\n                                            </mat-card>\r\n                                            <mat-error class=\"errorClass\"\r\n                                                *ngIf=\"unsecuredUpdateForm.get('month').hasError('required')&& unsecuredUpdateForm.get('month').touched\">\r\n                                                Please select Month\r\n                                            </mat-error>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div>\r\n                                    <div class=\"pb-1\">\r\n                                        <div class=\"full-width\" appearance=\"outline\">\r\n                                            <mat-hint class=\"hintClass\">Days</mat-hint>\r\n                                            <mat-card class=\"inputCard\">\r\n                                                <mat-select ([ngModel])=\"selectedDay\" required formControlName=\"day\">\r\n                                                    <mat-option *ngFor=\"let day of days\" [value]=\"day\">{{ day\r\n                                                        }}</mat-option>\r\n                                                </mat-select>\r\n                                            </mat-card>\r\n                                            <mat-error class=\"errorClass\"\r\n                                                *ngIf=\"unsecuredUpdateForm.get('day').hasError('required') && unsecuredUpdateForm.get('day').touched\">\r\n                                                Please select Day\r\n                                            </mat-error>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"full-width\">\r\n                            <mat-hint class=\"hintClass\">Renewal Amount</mat-hint>\r\n                            <mat-card class=\"inputCard\">\r\n                                <input matInput maxlength=\"8\" name=\"a_sig\" (keypress)=_keyPress($event) required\r\n                                    formControlName=\"renewalAmount\" placeholder=\"Renewal Amount\" />\r\n                            </mat-card>\r\n                            <mat-error class=\"errorClass\"\r\n                                *ngIf=\"unsecuredUpdateForm.get('renewalAmount').hasError('required')&& unsecuredUpdateForm.get('renewalAmount').touched\">\r\n                                Please enter Renewal Amount\r\n                            </mat-error>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </mat-card>\r\n\r\n\r\n    </form>\r\n</mat-dialog-content>\r\n\r\n\r\n<div fxLayout=\"row\" fxLayoutAlign=\"end\" fxLayoutGap=\"20px\">\r\n    <button mat-raised-button class=\"editbtn\" (click)=\"onSubmit()\"\r\n        [disabled]=\" unsecuredUpdateForm.invalid \">Save</button>\r\n    &nbsp;&nbsp;&nbsp;\r\n    <button type=\"button\" class=\"cancelbtn\" (click)=\"close()\">\r\n        Cancel\r\n    </button>\r\n</div>","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\n\r\n@Component({\r\n  selector: 'app-card-interest-details-update',\r\n  templateUrl: './card-interest-details-update.component.html',\r\n  styleUrls: ['./card-interest-details-update.component.scss']\r\n})\r\nexport class CardInterestDetailsUpdateComponent implements OnInit {\r\n  cardInterestUpdateForm: FormGroup;\r\n  accountType: String = \"Card Origin\";\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    private formBuilder: FormBuilder,\r\n    private api: ApiService,\r\n    private snack: MatSnackBar,\r\n    public dialogRef: MatDialogRef<CardInterestDetailsUpdateComponent>\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.cardInterestUpdateForm = this.formBuilder.group({\r\n      interestInfo: new FormArray([]),\r\n    });\r\n    console.log(this.data);\r\n    if(this.data.interestInfo){\r\n      this.onChangeInterest(this.data.interestInfo.length);\r\n      this.in.patchValue(this.data.interestInfo);\r\n    }\r\n    else{\r\n    this.api\r\n    .getFlexcubeDetails(\"intrestDetails\", this.accountType)\r\n    .subscribe((response) => {\r\n      this.onChangeInterest(response.length);\r\n      this.in.patchValue(response);\r\n    });\r\n  }\r\n  console.log(this.cardInterestUpdateForm);\r\n  \r\n  }\r\n  onChangeInterest(e) {\r\n    const numberOfItems = e || 0;\r\n    if (this.in.length < numberOfItems) {\r\n      for (let i = this.in.length; i < numberOfItems; i++) {\r\n        this.in.push(\r\n          this.formBuilder.group({\r\n            intrestType: [\"Fixed Rate\", Validators.required],\r\n            intrestRateApplicable: [5.0, Validators.required],\r\n            marginIn :[null,[Validators.required, Validators.max(100), Validators.min(0)],],\r\n            effectiveRate: [10.0,[Validators.required, Validators.max(100), Validators.min(0)],],\r\n            cardInterestId: [\"\"],\r\n            cardId: [this.data.cardId],\r\n          })\r\n        );\r\n      }\r\n    } else {\r\n      for (let i = this.in.length; i >= numberOfItems; i--) {\r\n        this.in.removeAt(i);\r\n      }\r\n    }\r\n  }\r\n  onSubmit() {\r\n    console.log(this.cardInterestUpdateForm\r\n.value)\r\n    this.api.cardintrestDetailsSave(this.cardInterestUpdateForm\r\n.value).subscribe(\r\n      (resp) => {\r\n        this.snack.open(\"Interest Details Saved!\", \"OK\", {\r\n          duration: 4000,\r\n          verticalPosition: \"top\",\r\n          horizontalPosition: \"right\",\r\n        });\r\n        console.log(\"backend response from intrest saving\", resp);\r\n      },\r\n      (err) => {\r\n        this.snack.open(\r\n          \"Not able to connect to server!\",\r\n          \"INTERNAL SERVER ERROR\",\r\n          {\r\n            duration: 4000,\r\n            verticalPosition: \"top\",\r\n            horizontalPosition: \"right\",\r\n          }\r\n        );\r\n      }\r\n    );\r\n    \r\n  }\r\n  get f() {\r\n    return this.cardInterestUpdateForm.controls;\r\n  }\r\n  get in() {\r\n    return this.f.interestInfo as FormArray;\r\n  }\r\n  _keyPress(event: any) {\r\n    const pattern = /[0-9]/;\r\n    let inputChar = String.fromCharCode(event.charCode);\r\n    if (!pattern.test(inputChar)) {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n  close(){\r\n    this.dialogRef.close({\r\n      status:\"ONGOING\"\r\n    })\r\n  }\r\n}\r\n","<div fxLayout=\"row\" fxLayoutAlign=\"end\" class=\"contain\">\r\n    <mat-icon class=\"closeIcon\" (click)=\"close()\">close</mat-icon>\r\n</div>\r\n\r\n<h1 mat-dialog-title>Interest Details</h1>\r\n<mat-dialog-content>\r\n    <mat-card>\r\n\r\n        <form [formGroup]=\"cardInterestUpdateForm\">\r\n            <table class=\"cart-table default-bg mat-elevation-z0\">\r\n                <thead class=\"tr\">\r\n                  <tr class=\"theadClass\">\r\n                    <th>Interest Type</th>\r\n                    <th>Interest Rate Applicable in %</th>\r\n                    <th>Margin in %</th>\r\n                    <th>Effective Rate %</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  <tr *ngFor=\"let interestInfo of in.controls; let i = index\" class=\"tableRow\">\r\n                    <ng-container [formGroup]=\"interestInfo\">\r\n                      <td>\r\n                        <mat-card class=\"matCardBox-form\">\r\n                          <input class=\"input\" matInput formControlName=\"intrestType\" name=\"intrestType\" placeholder=\"Interest Type\" readonly />\r\n                        </mat-card>\r\n                      </td>\r\n                      <td>\r\n                        <mat-card class=\"matCardBox-form\">\r\n                           <input class=\"inputPercent\" matInput formControlName=\"intrestRateApplicable\" name=\"intrestRateApplicable\"placeholder=\"Interest Rate Applicable\"readonly />\r\n                           \r\n                        </mat-card>\r\n                      </td>\r\n                      <td>\r\n                        <mat-card class=\"matCardBox-form\">\r\n                          <input class=\"input\" matInput formControlName=\"marginIn\" name=\"margin\" type=\"number\"placeholder=\"Margin\" readonly />\r\n                        \r\n                        </mat-card>                      \r\n                      </td>\r\n                      <td>\r\n                        <mat-card class=\"matCardBox-form\">\r\n                          <input class=\"inputPercent\" matInput formControlName=\"effectiveRate\" name=\"effectiveRate\"placeholder=\"Effective Rate\" value=\"\" readonly />\r\n                         \r\n                        </mat-card>\r\n                           \r\n                        \r\n                      </td>\r\n                    </ng-container>\r\n        \r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n        \r\n        </form>\r\n        </mat-card>\r\n      </mat-dialog-content>\r\n        <div fxLayout=\"row\" fxLayoutAlign=\"end\" fxLayoutGap=\"20px\">\r\n          <button type=\"button\" class=\"editbtn\"  \r\n          >Save</button> \r\n                        &nbsp;&nbsp;&nbsp;\r\n                        <button type=\"button\" class=\"cancelbtn\" (click)=\"close()\">\r\n                             Cancel\r\n                        </button>\r\n      </div>\r\n        \r\n\r\n       \r\n          \r\n        \r\n          \r\n            <!-- <div fxFlex=\"100\" class=\"mt-16\">\r\n              <a mat-button rounded color=\"primary\" (click)=\"goBack()\">Back</a>\r\n              <span fxFlex></span>\r\n              <button mat-raised-button color=\"primary\" type=\"button\"\r\n                (click)=\"onSubmit()\">Next</button>\r\n            </div> -->\r\n          \r\n            \r\n            <!-- <div fxFlex=\"100\" class=\"mt-16\">\r\n              <a mat-button rounded color=\"primary\" (click)=\"goBack()\">Back</a>\r\n              <span fxFlex></span>\r\n              <button mat-raised-button color=\"primary\" type=\"button\" [disabled]=\"interestForm.invalid\"\r\n                (click)=\"onSubmit()\">Next</button>\r\n            </div>\r\n          </div>\r\n           -->\r\n          \r\n          ","<div >\r\n    <mat-dialog-content>\r\n      <div fxLayout=\"row\" class=\"contain\">\r\n        <mat-icon style=\"padding-left: 100%;\"class=\"backIcon\" (click)=\"goToClose()\">close</mat-icon>\r\n    </div>\r\n      <h1>Loan Mandate Details</h1>\r\n      <form class=\"mt-32\" [formGroup]=\"loanMandateUpdate\">\r\n        <div fxLayout=\"row wrap\" fxLayout.lt-sm=\"column\" *ngIf=\"data.editType === 'loanAccount_array'\">\r\n          <div fxFlex=\"33.33\" class=\"pr-16\">\r\n            <mat-label>Number of Applicants </mat-label>\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n              <input matInput name=\"amt\" formControlName=\"numberOfApplicant\"  \r\n               (keypress)=\"_keyPress($event)\" />\r\n            </mat-form-field>\r\n          </div>\r\n    \r\n          <div fxFlex=\"33.33\" class=\"pr-16\">\r\n            <mat-label>Registered </mat-label>\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n              <!-- <mat-select name=\"account_branch\" formControlName=\"businessProductName\" (selectionChange)=\"getAccountType($event.value)\">\r\n                <mat-option *ngFor=\"let businessProductName of arrayAccountBranch\" [value]=\"businessProductName\"> \r\n                 {{businessProductName}} \r\n                </mat-option> \r\n             </mat-select> -->\r\n             <!-- <mat-slide-toggle [checked]=\"accountDetails?.overDraftRequested\" [disabled]=\"variable\"></mat-slide-toggle> -->\r\n             <!--toggle-->\r\n            </mat-form-field>\r\n          </div>\r\n    \r\n          <!-- <div fxFlex=\"33.33\" class=\"pr-16\">\r\n            <mat-label>Account Branch</mat-label>\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n              <mat-select name=\"mod\" formControlName=\"accountBranch\" (selectionChange)=\"onChangeBranch($event)\">\r\n                <mat-option  *ngFor=\"let array of screenArray\"\r\n                [value]=\"array.branchName\">{{array.branchName}}</mat-option>    \r\n              </mat-select>\r\n            </mat-form-field>\r\n          </div> -->\r\n        </div>\r\n    \r\n        <div fxLayout=\"row wrap\">\r\n          <div fxFlex=\"33.33\" class=\"pr-16\">\r\n            <mat-label>Applicant Name</mat-label>\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n              \r\n              <input matInput name=\"applicantName\" formControlName=\"applicantName\" \r\n              />\r\n            </mat-form-field>\r\n          </div>\r\n          <div fxFlex=\"33.33\" class=\"pr-16\">\r\n            <mat-label>Collateral Percentage</mat-label>\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n              <input matInput name=\"collateralPercentage\" formControlName=\"collateralPercentage\" \r\n              (keypress)=\"_keyPress($event)\" />\r\n            </mat-form-field>\r\n          </div>\r\n          <div fxFlex=\"33.33\" class=\"pr-16\">\r\n            <mat-label>Repayment Share Percentage</mat-label>\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n              <input matInput name=\"repaymentSharePercentage\"  class=\"alignment\"\r\n              formControlName=\"repaymentSharePercentage\"  (keypress)=\"_keyPress($event)\" />\r\n            </mat-form-field>\r\n          </div>\r\n        </div>\r\n       \r\n      </form>\r\n    </mat-dialog-content>\r\n    <mat-dialog-actions align=\"end\">\r\n      <button mat-button (click)=\"submitForm1()\">\r\n        Update\r\n      </button>\r\n      <button mat-button (click)=\"goToClose()\">Close</button>\r\n    </mat-dialog-actions>\r\n    </div>\r\n","import { ChangeDetectorRef, Component, Inject, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { DataService } from 'app/shared/services/data.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { TasksummaryService } from '../../tasksummary.service';\r\n\r\n@Component({\r\n  selector: 'app-loan-mandate-details-update',\r\n  templateUrl: './loan-mandate-details-update.component.html',\r\n  styleUrls: ['./loan-mandate-details-update.component.scss']\r\n})\r\nexport class LoanMandateDetailsUpdateComponent implements OnInit {\r\n  loanMandateUpdate: FormGroup;\r\n  loanaccountID: any;\r\n  loanAccountId: any;\r\n  mandateDetails: any;\r\n\r\n  statusArr: any = ['BACKLOG', 'ONGOING', 'APPROVED', 'REJECTED']\r\n  arr: any = ['BACKLOG', 'ONGOINGArr', 'APPROVEDArr', 'REJECTEDArr']\r\n  BACKLOGArr: any = [];\r\n  ONGOINGArr: any = [];\r\n  REJECTEDArr: any = [];\r\n  APPROVEDArr: any = [];\r\n  \r\n  BACKLOGTotalPages: number = 0\r\n  ONGOINGTotalPages: number = 0\r\n  REJECTEDTotalPages: number = 0\r\n  APPROVEDTotalPages: number = 0\r\n\r\n  BACKLOGCount: number = 0\r\n  ONGOINGCount: number = 0\r\n  REJECTEDCount: number = 0\r\n  APPROVEDCount: number = 0\r\n\r\n  BACKLOGImage: any[] = [];\r\n  ONGOINGImage: any[] = [];\r\n  REJECTEDImage: any[] = [];\r\n  APPROVEDImage: any[] = [];\r\n\r\n  BACKLOGTotalRecords: number = 0;\r\n  ONGOINGTotalRecords: number = 0;\r\n  REJECTEDTotalRecords: number = 0;\r\n  APPROVEDTotalRecords: number = 0;\r\n\r\n  BACKLOGPage: number = 0;\r\n  ONGOINGPage: number = 0;\r\n  REJECTEDPage: number = 0;\r\n  APPROVEDPage: number = 0;\r\n  \r\n  constructor(private fb: FormBuilder,private router: Router,   @Inject(MAT_DIALOG_DATA) public data: any, private snack: MatSnackBar,\r\n  private dataService: DataService, private ls: LocalStoreService,private taskSumService: TasksummaryService,\r\n    private apiService: ApiService, public dialogRef: MatDialogRef<LoanMandateDetailsUpdateComponent>,\r\n     private cdr: ChangeDetectorRef) { }\r\n\r\n  ngOnInit(): void {\r\n    \r\n    this.loanaccountID = this.data.loanAccountId;\r\n    console.log(this.loanaccountID);\r\n  \r\n    console.log(\"this.loanaccountID\", this.loanaccountID);\r\n    this.getMandateDetails();\r\n    this.buildMandateForm();\r\n  }\r\n  \r\n\r\n  buildMandateForm(data?) {\r\n    this.loanMandateUpdate = this.fb.group({\r\n      applicantName: [data ? data?.applicantName: ''],\r\n      registered: [data ? data?.registered : ''],\r\n      numberOfApplicant: [data ? data?.numberOfApplicant : ''],\r\n      collateralPercentage: [data ? data?.collateralPercentage : ''],\r\n      repaymentSharePercentage: [data ? data?.repaymentSharePercentage: '']\r\n      // businessProductName:[data ? data?.info?.businessProductName:''],\r\n      // accountBranch:[data ? data?.info?.accountBranch:''],\r\n    })\r\n  }\r\n  submitForm1(){\r\n    \r\n  \r\n\r\n    let payload={\r\n      loanAccountId: this.data.loanAccountId,\r\n      applicantName:this.loanMandateUpdate.value.applicantName,\r\n      collateralShare:this.loanMandateUpdate.value.collateralShare,\r\n      repaymentShare: this.loanMandateUpdate.value.repaymentShare,\r\n  \r\n     \r\n      \r\n  \r\n    }\r\n    console.log(\"payload\",payload)\r\n    this.apiService.upsertMandateDetails(payload).subscribe(data => {\r\n      console.log(\"data\",data.loanAccountId);\r\n    \r\n      this.loanaccountID = this.data.loanAccountId;\r\n      console.log('loanaccountID', this.loanaccountID)\r\n      \r\n\r\n      this.assign(this.data.loanAccountId)\r\n      if (data === 200 || data !== null) {\r\n        let statusModel = {\r\n          loanAccountId: this.data.loanAccountId,\r\n          status: \"ONGOING\"\r\n        };\r\n        this.apiService.updateLoanDetailsStatus(statusModel).subscribe(data => {\r\n        });\r\n      //  sessionStorage.setItem('loanAccountId', data.loanAccountid);\r\n        let fundStatus = {\r\n          loanAccountid: this.data.loanAccountId\r\n          \r\n        };\r\n       \r\n\r\n        this.ls.setItem('fundByStatus', fundStatus);\r\n        this.ls.setItem('accountType', data.accountType);\r\n        this.ls.setItem('productName',data.businessProductName);\r\n\r\n        \r\n    this.loanaccountID = this.data.loanAccountId;\r\n    console.log(\"this.productaccountID\",this.loanaccountID);\r\n        this.snack.open('Data Updated!', 'OK', {\r\n          duration: 4000,\r\n          verticalPosition: 'top',\r\n          horizontalPosition: 'right'\r\n        });\r\n        this.getDataOnLoad();\r\n      }\r\n      if( data === 500){\r\n        this.snack.open('Not able to connect to server!', 'INTERNAL SERVER ERROR', {\r\n          duration: 4000,\r\n          verticalPosition: 'top',\r\n          horizontalPosition: 'right'\r\n        });\r\n        console.log(\"500 error\")\r\n      }\r\n      \r\n      this.goToClose();\r\n    })\r\n  }\r\n  getMandateDetails() {\r\n   \r\n    this.apiService.getMandateDetailsByLoanAccId(this.loanaccountID).subscribe((mandateDetails) => {\r\n  \r\n      this.mandateDetails = mandateDetails;\r\n      console.log(this.mandateDetails);\r\n      this.buildMandateForm(this.mandateDetails);\r\n      // if(mandateDetails){\r\n      //   for (let index = 0; index < mandateDetails.mandateDetails.length; index++) {\r\n      //     this.addMandate(mandateDetails.mandateDetails[index]);\r\n      //   }\r\n      // }\r\n    }, (err: any) => {\r\n      // this.loader.close();\r\n    });\r\n  }\r\n  assign(valueForaccId) {\r\n    this.apiService.setAccountId({\r\n      loanAccountId: valueForaccId\r\n    });\r\n    console.log(\"loan\", this.loanAccountId)\r\n  }\r\n  next(){\r\n    // this.ls.setItem('LOAN_DETAIL_DONE', true);\r\n   \r\n     this.router.navigate([`/tasks/loan-account-task-summary`]);\r\n     console.log(\"this.ls.accounttype\", this.ls.getItem('accountType'))\r\n     this.taskSumService.getLoanAccountDetails(this.loanaccountID).subscribe((data) => {\r\n       console.log(\"data\", data)\r\n     \r\n \r\n       \r\n    \r\n     });\r\n \r\n   \r\n  }\r\n  \r\n  async getDataOnLoad() {\r\n    for (let index = 0; index < this.statusArr.length; index++) {\r\n      const statusItem = this.statusArr[index];\r\n      this.fetchCustomerInfo(statusItem);\r\n    }\r\n\r\n  }\r\n\r\n   fetchCustomerInfo(status:string){\r\n   \r\n    this.taskSumService.getallLoanAccountData(status)\r\n            .subscribe((custResp:any) => {\r\n              console.log(\"Response\", custResp);\r\n              this.updateStatusResponse(status, custResp);\r\n            });\r\n  }\r\n\r\n  updateStatusResponse(status, data){\r\n    console.log(\"data\", data)\r\n    console.log(\"status\", status)\r\n      if (status == 'ONGOING') {\r\n      this.ONGOINGArr = data?.loanList;\r\n      this.ONGOINGTotalPages = data?.totalPages;\r\n      this.ONGOINGTotalRecords = data?.totalNoOfElements;\r\n    }\r\n \r\n\r\n    this.cdr.markForCheck();\r\n  }\r\n\r\n  _keyPress(event: any) {\r\n    // console.log(\"key\",event);\r\n    const pattern = /[0-9]/;\r\n    let inputChar = String.fromCharCode(event.charCode);\r\n    console.log(\"inputChar\",inputChar);\r\n    inputChar=inputChar.toString();\r\n    console.log(\"inputChar1\",inputChar);\r\n    inputChar=inputChar\r\n    if (!pattern.test(inputChar)) {\r\n        event.preventDefault();\r\n    }\r\n  }\r\n  \r\n  goToClose(): void {\r\n    this.dialogRef.close();\r\n  }\r\n \r\n}\r\n","<!-- Header Starts -->\r\n<br>\r\n<div class=\"search-results1\" infiniteScroll [infiniteScrollDistance]=\"2\" [infiniteScrollThrottle]=\"500\"\r\n(scrolled)=\"onScroll($event)\" [scrollWindow]=\"false\">\r\n<br>\r\n<div class=\"m-333 mt-32\">\r\n  <mat-slide-toggle class=\"slideTogglepadding\" (change)=\"GoToCustomerOnboarding()\">Switch to Customer Onboarding\r\n  </mat-slide-toggle>\r\n  <div fxLayout=\"row\" fxLayoutAlign=\"space-between start\" fxLayoutGap=\"10px\">\r\n    <div fxFlex=\"60\" class=\"summaryName\">\r\n      <span class=\"task ml-24\">\r\n        Corporate Customer Onboarding Task Summary\r\n      </span>\r\n    </div>\r\n\r\n    <div fxFlex=\"30\" fxLayoutAlign=\"end center\" class=\"searchbox\">\r\n      <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n        <mat-label>Search</mat-label>\r\n        <input matInput name=\"search\" [(ngModel)]=\"searchText\" autocomplete=\"off\"\r\n          (keyup)=\"updateSearch($event.target.value)\" placeholder=\"Search Corporate_id or Company Name\">\r\n        <mat-icon matPrefix class=\"my-icon\">search</mat-icon>\r\n        <button mat-button *ngIf=\"searchText\" matSuffix mat-icon-button (click)=\"clear()\">\r\n\r\n          <div fxLayoutAlign=\"center\">\r\n            <mat-spinner *ngIf=\"loading\"></mat-spinner>\r\n          </div>\r\n\r\n          <mat-icon>close</mat-icon>\r\n        </button>\r\n        <mat-hint>Search Corporate_id or Company Name</mat-hint>\r\n      </mat-form-field>\r\n    </div>\r\n\r\n  </div>\r\n</div>\r\n<!-- Header Ends -->\r\n\r\n<!-- Body Starts -->\r\n<div class=\"content\">\r\n  <!-- <div fxLayout=\"row wrap\" fxLayoutGap=\"1px grid\"> -->\r\n    <div fxLayout=\"20%\" class=\"screen\">\r\n\r\n      <mat-card class=\"mat-elevation-z4\">\r\n\r\n        <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n          <span class=\"pl-6\">\r\n            <h2 class=\"statusFont\">Pending for approval ({{INITIATEDArr?.length}}/{{INITIATEDTotalRecords}})</h2>\r\n          </span>\r\n          <span class=\"more_vert_icon\">\r\n            <mat-icon>more_vert</mat-icon>\r\n          </span>\r\n        </div>\r\n        <!-- <div class=\"search-results\" infiniteScroll [infiniteScrollDistance]=\"2\" [infiniteScrollThrottle]=\"500\"\r\n          (scrolled)=\"onScrollingFinished($event, 'INITIATED')\" [scrollWindow]=\"false\"> -->\r\n          <div >\r\n          <div class=\"cardBox\" *ngFor=\"let items of INITIATEDArr ; let i = index\"\r\n            (click)=\"goToCorporateOnBoardingSummary(items,'INITATED', getRandomColor(i+3))\">\r\n            <div class=\"m-333\">\r\n              <mat-icon class=\"fill-color-blue bookMark\">bookmark</mat-icon>\r\n              <span><small>{{items?.createdTime | dateAgo}}</small></span>\r\n            </div>\r\n            <mat-card-header class=\"head\">\r\n              <div mat-card-avatar>\r\n                <!-- <div *ngIf=\"items.profileImage == 'not_available'; else showAvatar\"> -->\r\n                <!-- <app-photo [name]=\"items.companyName\"></app-photo>  -->\r\n\r\n                <!-- </div> -->\r\n\r\n                <div *ngIf=\"items.corporateDocs == null;\">\r\n                  <app-photo [name]=\"items.companyName\"></app-photo>\r\n                </div>\r\n                <div *ngIf=\"items.corporateDocs[0]?.documentType == 1 ;\">\r\n                  <img style=\"width: 150px; height: 50px; border-radius: 60%;\" [src]=\"items.corporateDocs[0]?.fileUrl\" alt=\"\">\r\n                </div>\r\n\r\n                <ng-template #showAvatar *ngIf=\"items.corporateDocs[0]?.documentType == 1 ;\">\r\n                  <img style=\"width: 150px; height: 50px; border-radius: 60%;\" [src]=\"items.corporateDocs[0]?.fileUrl\" alt=\"\">\r\n                </ng-template>\r\n              </div>\r\n              <mat-card-title style=\"font-size: 16px;\">\r\n                {{items.companyName}}&nbsp;\r\n              </mat-card-title>\r\n              <mat-card-subtitle>#{{items.corporateId}}</mat-card-subtitle>\r\n            </mat-card-header>\r\n\r\n            <form class=\"head1\">\r\n\r\n              <div class=\"col1\" fxLayout=\"row\" fxLayoutGap=\"40px\">\r\n                <span>Category </span>\r\n                <span>Organization Type</span>\r\n                <!-- <span>Product</span> -->\r\n              </div>\r\n              <div class=\"col2\" fxLayout=\"row\" fxLayoutGap=\"58px\">\r\n                <span>{{items.category}}</span>\r\n                <span>{{items.organizationType}}</span>\r\n              </div><br />\r\n              <div class=\"col3\" fxLayout=\"row\" fxLayoutGap=\"40px\">\r\n                <span>Date Of Issue</span>\r\n                <span>Type Of Ownership</span>\r\n              </div>\r\n              <div class=\"col4\" fxLayout=\"row\" fxLayoutGap=\"44px\">\r\n                <span>{{items.dateOfIssue | date }}</span>\r\n                <span>{{items.typeOfOwnership}}</span>\r\n              </div><br>\r\n            </form>\r\n\r\n          </div>\r\n        </div>\r\n        <br />\r\n\r\n      </mat-card>\r\n\r\n      <mat-card class=\"mat-elevation-z4\">\r\n\r\n        <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n          <span class=\"pl-6\">\r\n            <h2 class=\"statusFont\">Ongoing ({{UNDER_PROCESSArr?.length}}/{{UNDER_PROCESSTotalRecords}})</h2>\r\n          </span>\r\n          <span class=\"more_vert_icon\">\r\n            <mat-icon>more_vert</mat-icon>\r\n          </span>\r\n        </div>\r\n        <!-- <div class=\"search-results\" infiniteScroll [infiniteScrollDistance]=\"2\" [infiniteScrollThrottle]=\"500\"\r\n          (scrolled)=\"onScrollingFinished($event,'UNDER_PROCESS')\" [scrollWindow]=\"false\"> -->\r\n          <div >\r\n          <div class=\"cardBox\" *ngFor=\"let items of UNDER_PROCESSArr ; let i = index\"\r\n            (click)=\"goToCorporateOnBoardingSummary(items,'UNDER_PROCESS',getRandomColor(i+6))\">\r\n            <div class=\"m-333\">\r\n              <mat-icon class=\"fill-color-blue bookMark bookMark1\">bookmark</mat-icon>\r\n              <span><small>{{items?.createdTime | dateAgo}}</small></span>\r\n            </div>\r\n            <mat-card-header class=\"head\">\r\n              <div mat-card-avatar>\r\n                <!-- <div *ngIf=\"items.profileImage == 'not_available'; else showAvatar\"> -->\r\n                <!-- <app-photo [name]=\"items?.companyName\"></app-photo>  -->\r\n                <!-- </div> -->\r\n\r\n                <div *ngIf=\"items.profileImage == null;\">\r\n                  <app-photo [name]=\"items.companyName\"></app-photo>\r\n                </div>\r\n                <div *ngIf=\"items.profileImage != null;\">\r\n                  <img style=\"width: 150px; height: 50px; border-radius: 60%;\" [src]=\"items.profileImage\" alt=\"\">\r\n                </div>\r\n\r\n                <ng-template #showAvatar>\r\n                  <img style=\"width: 150px; height: 50px; border-radius: 50%;\" [src]=\"items.profileImage\" alt=\"\">\r\n                </ng-template>\r\n              </div>\r\n              <mat-card-title style=\"font-size: 16px;\">\r\n                {{items.companyName}}\r\n              </mat-card-title>\r\n              <mat-card-subtitle>#{{items.corporateId}}</mat-card-subtitle>\r\n            </mat-card-header>\r\n\r\n            <form class=\"head1\">\r\n\r\n              <div class=\"col1\" fxLayout=\"row\" fxLayoutGap=\"40px\">\r\n                <span>Category </span>\r\n                <span>Organization Type</span>\r\n                <!-- <span>Product</span> -->\r\n              </div>\r\n              <div class=\"col2\" fxLayout=\"row\" fxLayoutGap=\"58px\">\r\n                <span>{{items.category}}</span>\r\n                <span>{{items.organizationType}}</span>\r\n              </div><br />\r\n              <div class=\"col3\" fxLayout=\"row\" fxLayoutGap=\"40px\">\r\n                <span>Date Of Issue</span>\r\n                <span>Type Of Ownership</span>\r\n              </div>\r\n              <div class=\"col4\" fxLayout=\"row\" fxLayoutGap=\"44px\">\r\n                <span>{{items.dateOfIssue | date }}</span>\r\n                <span>{{items.typeOfOwnership}}</span>\r\n              </div><br>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card>\r\n\r\n      <mat-card class=\"mat-elevation-z4\">\r\n        <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n          <span class=\"pl-6\">\r\n            <h2 class=\"statusFont\">Approved ({{APPROVEDArr?.length}}/{{APPROVEDTotalRecords}})</h2>\r\n          </span>\r\n          <span class=\"more_vert_icon\">\r\n            <mat-icon>more_vert</mat-icon>\r\n          </span>\r\n        </div>\r\n        <!-- <div class=\"search-results\" infiniteScroll [infiniteScrollDistance]=\"2\" [infiniteScrollThrottle]=\"500\"\r\n          (scrolled)=\"onScrollingFinished($event,'APPROVED')\" [scrollWindow]=\"false\"> -->\r\n          <div >\r\n          <div class=\"cardBox\" *ngFor=\"let items of APPROVEDArr ; let i = index\"\r\n            (click)=\"goToCorporateOnBoardingSummary(items,'APPROVED',getRandomColor(i+12))\">\r\n            <div class=\"m-333\">\r\n              <mat-icon class=\"fill-color-blue bookMark bookMark2\">bookmark</mat-icon>\r\n              <span><small>{{items?.createdTime | dateAgo}}</small></span>\r\n            </div>\r\n            <mat-card-header class=\"head\">\r\n              <div mat-card-avatar>\r\n                <!-- <div *ngIf=\"items.profileImage == 'not_available'; else showAvatar\"> -->\r\n                <!-- <app-photo [name]=\"items?.companyName\"></app-photo>  -->\r\n                <!-- </div> -->\r\n\r\n                <div *ngIf=\"items.profileImage == null;\">\r\n                  <app-photo [name]=\"items.companyName\"></app-photo>\r\n                </div>\r\n                <div *ngIf=\"items.profileImage != null;\">\r\n                  <img style=\"width: 150px; height: 50px; border-radius: 60%;\" [src]=\"items.profileImage\" alt=\"\">\r\n                </div>\r\n\r\n                <ng-template #showAvatar>\r\n                  <img style=\"width: 150px; height: 50px; border-radius: 50%;\" [src]=\"items.profileImage\" alt=\"\">\r\n                </ng-template>\r\n              </div>\r\n              <mat-card-title style=\"font-size: 16px;\">\r\n                {{items.companyName}}\r\n              </mat-card-title>\r\n              <mat-card-subtitle>#{{items.corporateId}}</mat-card-subtitle>\r\n            </mat-card-header>\r\n\r\n            <form class=\"head1\">\r\n              <div class=\"col1\" fxLayout=\"row\" fxLayoutGap=\"40px\">\r\n                <span>Category </span>\r\n                <span>Organization Type</span>\r\n                <!-- <span>Product</span> -->\r\n              </div>\r\n              <div class=\"col2\" fxLayout=\"row\" fxLayoutGap=\"58px\">\r\n                <span>{{items.category}}</span>\r\n                <span>{{items.organizationType}}</span>\r\n              </div><br />\r\n              <div class=\"col3\" fxLayout=\"row\" fxLayoutGap=\"40px\">\r\n                <span>Date Of Issue</span>\r\n                <span>Type Of Ownership</span>\r\n              </div>\r\n              <div class=\"col4\" fxLayout=\"row\" fxLayoutGap=\"44px\">\r\n                <span>{{items.dateOfIssue | date }}</span>\r\n                <span>{{items.typeOfOwnership}}</span>\r\n              </div><br>\r\n            </form>\r\n          </div>\r\n        </div>\r\n        <br />\r\n      </mat-card>\r\n\r\n      <mat-card class=\"mat-elevation-z4\">\r\n        <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n          <span class=\"pl-6\">\r\n            <h2 class=\"statusFont\">Rejected ({{REJECTEDArr?.length}}/{{REJECTEDTotalRecords}})</h2>\r\n          </span>\r\n          <span class=\"more_vert_icon\">\r\n            <mat-icon>more_vert</mat-icon>\r\n          </span>\r\n        </div>\r\n        <!-- <div class=\"search-results\" infiniteScroll [infiniteScrollDistance]=\"2\" [infiniteScrollThrottle]=\"500\"\r\n          (scrolled)=\"onScrollingFinished($event,'REJECTED')\" [scrollWindow]=\"false\"> -->\r\n          <div >\r\n          <div class=\"cardBox\" *ngFor=\"let items of REJECTEDArr ; let i = index\"\r\n            (click)=\"goToCorporateOnBoardingSummary(items,'REJECTED',getRandomColor(i+15))\">\r\n            <div class=\"m-333\">\r\n              <mat-icon class=\"fill-color-blue bookMark bookMark3\">bookmark</mat-icon>\r\n              <span><small>{{items?.createdTime | dateAgo}}</small></span>\r\n            </div>\r\n            <mat-card-header class=\"head\">\r\n              <div mat-card-avatar>\r\n                <!-- <div *ngIf=\"items.profileImage == 'not_available'; else showAvatar\"> -->\r\n                <!-- <app-photo [name]=\"items?.companyName\"></app-photo>  -->\r\n                <!-- </div> -->\r\n\r\n                <div *ngIf=\"items.profileImage == null;\">\r\n                  <app-photo [name]=\"items.companyName\"></app-photo>\r\n                </div>\r\n                <div *ngIf=\"items.profileImage != null;\">\r\n                  <img style=\"width: 150px; height: 50px; border-radius: 60%;\" [src]=\"items.profileImage\" alt=\"\">\r\n                </div>\r\n\r\n                <ng-template #showAvatar>\r\n                  <img style=\"width: 150px; height: 50px; border-radius: 50%;\" [src]=\"items.profileImage\" alt=\"\">\r\n                </ng-template>\r\n              </div>\r\n              <mat-card-title style=\"font-size: 16px;\">\r\n                {{items.companyName}}\r\n              </mat-card-title>\r\n              <mat-card-subtitle>#{{items.corporateId}}</mat-card-subtitle>\r\n            </mat-card-header>\r\n\r\n            <form class=\"head1\">\r\n              <div class=\"col1\" fxLayout=\"row\" fxLayoutGap=\"40px\">\r\n                <span>Category </span>\r\n                <span>Organization Type</span>\r\n                <!-- <span>Product</span> -->\r\n              </div>\r\n              <div class=\"col2\" fxLayout=\"row\" fxLayoutGap=\"58px\">\r\n                <span>{{items.category}}</span>\r\n                <span>{{items.organizationType}}</span>\r\n              </div><br />\r\n              <div class=\"col3\" fxLayout=\"row\" fxLayoutGap=\"40px\">\r\n                <span>Date Of Issue</span>\r\n                <span>Type Of Ownership</span>\r\n              </div>\r\n              <div class=\"col4\" fxLayout=\"row\" fxLayoutGap=\"44px\">\r\n                <span>{{items.dateOfIssue | date }}</span>\r\n                <span>{{items.typeOfOwnership}}</span>\r\n              </div><br>\r\n            </form>\r\n\r\n          </div>\r\n        </div>\r\n      </mat-card>\r\n\r\n    </div>\r\n  <!-- </div> -->\r\n  <br>\r\n</div>\r\n</div>\r\n<!-- Body Ends -->","import { MatSnackBar } from \"@angular/material/snack-bar\";\r\nimport {\r\n  ChangeDetectorRef,\r\n  Component,\r\n  EventEmitter,\r\n  HostListener,\r\n  OnInit,\r\n  Output,\r\n} from \"@angular/core\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { ApiService } from \"app/shared/services/api.service\";\r\nimport { DialogService } from \"app/shared/services/dialogs/dialog.service\";\r\nimport { LocalStoreService } from \"app/shared/services/local-store.service\";\r\nimport { ApproverComponent } from \"../approver/approver.component\";\r\nimport { CustOnBoardingApproverComponent } from \"../cust-on-boarding-approver/cust-on-boarding-approver.component\";\r\nimport { TasksummaryService } from \"../tasksummary.service\";\r\nimport { Subject } from \"rxjs\";\r\nimport { debounceTime } from \"rxjs/operators\";\r\nimport { DomSanitizer } from \"@angular/platform-browser\";\r\nimport { MatRadioChange } from \"@angular/material/radio\";\r\nimport { isNumber } from \"highcharts\";\r\nimport { SortCriteria } from \"app/shared/pipes/custom-task-summary-sorting.pipe\";\r\nimport * as _ from \"lodash\";\r\nimport { CorporateApproverComponent } from \"../corporate-approver/corporate-approver.component\";\r\nimport { Router } from \"@angular/router\";\r\n\r\n@Component({\r\n  selector: \"app-corporate-task-summary\",\r\n  templateUrl: \"./corporate-task-summary.component.html\",\r\n  styleUrls: [\"./corporate-task-summary.component.scss\"],\r\n})\r\nexport class CorporateTaskSummaryComponent implements OnInit {\r\n  accountId: any;\r\n  searchText;\r\n  statusArr: any = [\"INITIATED\", \"UNDER_PROCESS\", \"APPROVED\", \"REJECTED\"];\r\n  arr: any = [\"INITIATEDArr\", \"UNDER_PROCESSArr\", \"APPROVEDArr\", \"REJECTEDArr\"];\r\n  INITIATEDArr: any = [];\r\n  UNDER_PROCESSArr: any = [];\r\n  REJECTEDArr: any = [];\r\n  APPROVEDArr: any = [];\r\n\r\n  INITIATEDTotalPages: number = 0;\r\n  UNDER_PROCESSTotalPages: number = 0;\r\n  REJECTEDTotalPages: number = 0;\r\n  APPROVEDTotalPages: number = 0;\r\n\r\n  INITIATEDCount: number = 0;\r\n  UNDER_PROCESSCount: number = 0;\r\n  REJECTEDCount: number = 0;\r\n  APPROVEDCount: number = 0;\r\n\r\n  INITIATEDImage: any[] = [];\r\n  UNDER_PROCESSImage: any[] = [];\r\n  REJECTEDImage: any[] = [];\r\n  APPROVEDImage: any[] = [];\r\n\r\n  INITIATEDTotalRecords: number = 0;\r\n  UNDER_PROCESSTotalRecords: number = 0;\r\n  REJECTEDTotalRecords: number = 0;\r\n  APPROVEDTotalRecords: number = 0;\r\n\r\n  INITIATEDPage: number = 0;\r\n  UNDER_PROCESSPage: number = 0;\r\n  REJECTEDPage: number = 0;\r\n  APPROVEDPage: number = 0;\r\n\r\n  loading: boolean;\r\n\r\n  image: Object;\r\n  searchable: boolean = false;\r\n  screenType = \"corporate\";\r\n  //variable for sorting data\r\n  public criteria: SortCriteria;\r\n\r\n  @Output() setValue: EventEmitter<string> = new EventEmitter();\r\n  private _searchSubject: Subject<string> = new Subject();\r\n  radioButtonSelected: any;\r\n\r\n  public listOfOptions: any = [\r\n    { label: \"Corporate ID\", value: \"corporateID\", checked: true },\r\n    { label: \"Name \", value: \"firstName\", checked: false },\r\n  ];\r\n  noDataFound: boolean = false;\r\n  isScroll: boolean = true;;\r\n\r\n  constructor(\r\n    public dialog: MatDialog,\r\n    private ls: LocalStoreService,\r\n    private tasSumService: TasksummaryService,\r\n    public cdr: ChangeDetectorRef,\r\n    private apiService: ApiService,\r\n    private router: Router,\r\n    private snack: MatSnackBar,\r\n    private sanitizer: DomSanitizer\r\n  ) {\r\n    this._setSearchSubscription();\r\n  }\r\n  @HostListener('scroll', ['$event'])\r\n  onScroll(event: any) {\r\n      this.INITIATEDPage++;\r\n      this.getDataOnScroll( \"INITIATED\",this.INITIATEDPage,this.INITIATEDTotalPages);\r\n      this.UNDER_PROCESSPage++;\r\n      this.getDataOnScroll(\"UNDER_PROCESS\",this.UNDER_PROCESSPage,this.UNDER_PROCESSTotalPages);\r\n      this.APPROVEDPage++;\r\n      this.getDataOnScroll(\"APPROVED\", this.APPROVEDPage, this.APPROVEDTotalPages);\r\n      this.REJECTEDPage++;\r\n      this.getDataOnScroll(\"REJECTED\", this.REJECTEDPage, this.REJECTEDTotalPages);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    var task:boolean=true;\r\n    this.apiService.setTask(task);\r\n    this.accountId = this.ls.getItem(\"accountId\");\r\n\r\n    /* @called :: on screen load */\r\n    this.getDataOnLoad();\r\n\r\n    /* @called :: to refresh data for every 1min interval */\r\n    // setInterval(() => { this.getDataOnLoad() }, 60000);\r\n\r\n    this.listOfOptions.filter((item) => {\r\n      if (item.checked) {\r\n        this.radioButtonSelected = item.value;\r\n      }\r\n    });\r\n\r\n    this.criteria = {\r\n      property: this.radioButtonSelected,\r\n      descending: true,\r\n    };\r\n  }\r\n\r\n  radioChange(event: MatRadioChange, data) {\r\n    this.radioButtonSelected = data.value;\r\n    this.criteria.property = this.radioButtonSelected;\r\n  }\r\n\r\n  public updateSearch(searchTextValue: string) {\r\n    this._searchSubject.next(searchTextValue);\r\n  }\r\n  private _setSearchSubscription() {\r\n    this._searchSubject\r\n      .pipe(debounceTime(1000))\r\n      .subscribe((searchValue: string) => {\r\n        this.setValue.emit(searchValue);\r\n        console.log(\"search value :: \", searchValue);\r\n        console.log(\"search text :: \", this.searchText);\r\n        if (searchValue == null || searchValue == \"\" || searchValue == \"\") {\r\n          this.noDataFound = false;\r\n          this.searchable = false;\r\n          this.getDataOnLoad();\r\n          return;\r\n        }\r\n        this.searchcorporateID(searchValue);\r\n      });\r\n  }\r\n\r\n  clear() {\r\n    this.searchText = \"\";\r\n    this.isScroll = true;\r\n    this.getDataOnLoad();\r\n  }\r\n\r\n  /* @method :: to load all data on screen load */\r\n  async getDataOnLoad() {\r\n    for (let index = 0; index < this.statusArr.length; index++) {\r\n      const statusItem = this.statusArr[index];\r\n      this.fetchCustomerInfo(statusItem, 0, 0);\r\n    }\r\n  }\r\n  fetchCustomerInfo(status: string, page: number, size: number) {\r\n    this.tasSumService\r\n      .getallCorporateData(this.screenType, status, page)\r\n      .subscribe((custResp: any) => {\r\n        console.log(\"Response\", custResp);\r\n        this.updateStatusResponse(status, custResp);\r\n      });\r\n  }\r\n\r\n  updateStatusResponse(status, data) {\r\n    if (status == \"INITIATED\") {\r\n      this.INITIATEDArr = data?.corporateList;\r\n      this.INITIATEDTotalPages = data?.totalPages;\r\n      this.INITIATEDTotalRecords = data?.totalRecords;\r\n    } else if (status == \"UNDER_PROCESS\") {\r\n      this.UNDER_PROCESSArr = data?.corporateList;\r\n      this.UNDER_PROCESSTotalPages = data?.totalPages;\r\n      this.UNDER_PROCESSTotalRecords = data?.totalRecords;\r\n    } else if (status == \"APPROVED\") {\r\n      this.APPROVEDArr = data?.corporateList;\r\n      this.APPROVEDTotalPages = data?.totalPages;\r\n      this.APPROVEDTotalRecords = data?.totalRecords;\r\n    } else if (status == \"REJECTED\") {\r\n      this.REJECTEDArr = data?.corporateList;\r\n      this.REJECTEDTotalPages = data?.totalPages;\r\n      this.REJECTEDTotalRecords = data?.totalRecords;\r\n      console.log(\"this.REJECTEDArr\", this.REJECTEDArr);\r\n    }\r\n\r\n    this.cdr.markForCheck();\r\n  }\r\n\r\n  /* @method :: to load data on scroll of data*/\r\n  onScrollingFinished(e, status) {\r\n    if (status == \"INITIATED\") {\r\n      this.INITIATEDPage++;\r\n      this.getDataOnScroll(\r\n        status,\r\n        this.INITIATEDPage,\r\n        this.INITIATEDTotalPages\r\n      );\r\n    } else if (status == \"UNDER_PROCESS\") {\r\n      this.UNDER_PROCESSPage++;\r\n      this.getDataOnScroll(\r\n        status,\r\n        this.UNDER_PROCESSPage,\r\n        this.UNDER_PROCESSTotalPages\r\n      );\r\n    } else if (status == \"APPROVED\") {\r\n      this.APPROVEDPage++;\r\n      this.getDataOnScroll(status, this.APPROVEDPage, this.APPROVEDTotalPages);\r\n    } else if (status == \"REJECTED\") {\r\n      this.REJECTEDPage++;\r\n      this.getDataOnScroll(status, this.REJECTEDPage, this.REJECTEDTotalPages);\r\n    }\r\n  }\r\n\r\n  /* @method :: to call service ,when scroll method called */\r\n  getDataOnScroll(status, page, totalPage) {\r\n    if(this.isScroll == false){\r\n      return;\r\n    }\r\n    console.log(\"---------scrolled----------\");\r\n    if (page === totalPage) {\r\n      console.log(\"No scroll requied\");\r\n      return;\r\n    }\r\n\r\n    this.tasSumService\r\n      .getallCorporateData(this.screenType, status, page)\r\n      .subscribe((data) => {\r\n        console.log(\"count data :: \", data);\r\n        this.cdr.markForCheck();\r\n        this.updateDataOnScroll(status, data.corporateList);\r\n      });\r\n  }\r\n  GoToCustomerOnboarding() {\r\n    setTimeout(() => {\r\n      this.router.navigateByUrl(\"/tasks/cust-on-boarding-task-summary\");\r\n    }, 300);\r\n  }\r\n\r\n  goToCorporateOnBoardingSummary(data, status, colCode) {\r\n    localStorage.setItem(\"CustomerColorCode\", colCode);\r\n    const dialogRef = this.dialog.open(CorporateApproverComponent, {\r\n      panelClass: \"full-width-dialog\",\r\n      data: { dataResp: data, recordStatus: status },\r\n      width: \"80%\",\r\n      disableClose: false,\r\n    });\r\n    dialogRef.afterClosed().subscribe((submit) => {\r\n      console.log(\"dialog closed:: \", submit);\r\n      if (\r\n        submit.recordStatus === \"REJECTED\" ||\r\n        submit.recordStatus === \"APPROVED\" ||\r\n        submit.data.kycStatus === \"REJECTED\" ||\r\n        submit.data.kycStatus === \"APPROVED\" ||\r\n        submit.recordStatus === \"INITIATED\" ||\r\n        submit.recordStatus === \"UNDER_PROCESS\"\r\n      ) {\r\n        this.getDataOnLoad();\r\n      }\r\n    });\r\n  }\r\n\r\n  searchcorporateID(searchTerm) {\r\n    let text: any;\r\n    let params: any;\r\n    if (searchTerm === \"\") {\r\n      console.log(\"empty\");\r\n      this.getDataOnLoad();\r\n      this.isScroll = true;\r\n      return;\r\n    }\r\n    if(this.isNum(searchTerm)){\r\n      if(searchTerm.length == 10){\r\n        console.log(\"contact\");\r\n        text=this.searchText.trim();\r\n        params = 'mobileNumber='+text;\r\n      }\r\n      else{\r\n        console.log(\"kycId\");\r\n        text=this.searchText.trim();\r\n        params = 'corporateId='+text;\r\n      }\r\n    }\r\n    else if(this.isString(searchTerm)){\r\n      if( /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(searchTerm)){\r\n        console.log(\"email\");\r\n        text=this.searchText.trim();\r\n        params = 'primaryEmail='+text;\r\n      }\r\n      else if(searchTerm == searchTerm.toUpperCase()){\r\n        console.log(\"name\");\r\n        text=this.searchText.trim();\r\n        params = 'corporateStatus='+text;\r\n      }\r\n      else{\r\n        console.log(\"name\");\r\n        text=this.searchText.trim();\r\n        params = 'companyName='+text;\r\n      }\r\n            \r\n    }\r\n    this.getCustomerData(params);\r\n    this.isScroll = false;\r\n  }\r\n\r\n  getCustomerData(params) {\r\n    this.loading = true;\r\n    console.log(\"params::\", params);\r\n    this.apiService\r\n      .getcorporateSearchDetails(params)\r\n      .subscribe((data) => {\r\n        this.loading = false;\r\n        console.log(\"resp data :: \", data);\r\n        this.resetSearchData();\r\n        for (let index = 0; index < data.corporateList.length; index++) {\r\n          const element = data.corporateList[index];\r\n          // element.profileImage= data.corporateList[index].corporateDocs[0].fileUrl;\r\n          for (let j = 0;j < data.corporateList[index].corporateDocs.length;j++) {\r\n            if (data.corporateList[index].corporateDocs[j].documentName ==\"Profile\") {\r\n              element.profileImage = data.corporateList[index].corporateDocs[j].fileUrl;\r\n            } \r\n            else {\r\n              element.profileImage = null;\r\n            }\r\n          }\r\n          this.searchResponseUpdate(\r\n            data.corporateList[index].corporateStatus,element\r\n          );\r\n        }\r\n      });\r\n  }\r\n\r\n  // getCustomerData(params) {\r\n  //   this.loading = true;\r\n  //   for (let index = 0; index < this.statusArr.length; index++) {\r\n  //     const statusItem = this.statusArr[index];\r\n  //    // this.fetchCustomerByStatus(statusItem,params,0);\r\n  //    if(statusItem == 'INITIATED'){\r\n  //   this.apiService.getcorporateSearchDetails(params,statusItem)\r\n  //   .subscribe(data => {\r\n  //     this.INITIATEDTotalPages = data?.totalPages;\r\n  //     this.loading = false;\r\n  //     console.log('resp data :: ', data);\r\n  //     this.INITIATEDArr = [];\r\n  //     for (let index = 0; index < data.corporateList.length; index++) {\r\n  //       const element = data?.corporateList[index];\r\n  //       this.INITIATEDArr.push(element);\r\n        \r\n  //     }\r\n      \r\n  //   })\r\n  // }\r\n  // else  if(statusItem == 'UNDER_PROCESS'){\r\n  //   this.apiService.getcorporateSearchDetails(params,statusItem)\r\n  //   .subscribe(data => {\r\n  //     this.UNDER_PROCESSTotalPages = data?.totalPages;\r\n  //     this.loading = false;\r\n  //     console.log('resp data :: ', data);\r\n  //     this.UNDER_PROCESSArr = [];\r\n  //     for (let index = 0; index < data?.corporateList.length; index++) {\r\n  //       const element = data.corporateList[index];\r\n  //       this.UNDER_PROCESSArr.push(element);\r\n        \r\n  //     }\r\n       \r\n  //   })\r\n  // }\r\n  // else  if(statusItem == 'APPROVED'){\r\n  //   this.apiService.getcorporateSearchDetails(params,statusItem)\r\n  //   .subscribe(data => {\r\n  //     this.APPROVEDTotalPages = data?.totalPages;\r\n  //     this.loading = false;\r\n  //     console.log('resp data :: ', data);\r\n  //     this.APPROVEDArr = [];\r\n  //     for (let index = 0; index < data?.corporateList.length; index++) {\r\n  //       const element = data.corporateList[index];\r\n  //       this.APPROVEDArr.push(element);\r\n        \r\n  //     }\r\n       \r\n  //   })\r\n  // }\r\n  // else  if(statusItem == 'REJECTED'){\r\n  //   this.apiService.getcorporateSearchDetails(params,statusItem)\r\n  //   .subscribe(data => {\r\n  //     this.REJECTEDTotalPages = data?.totalPages;\r\n  //     this.loading = false;\r\n  //     console.log('resp data :: ', data);\r\n  //     this.REJECTEDArr = [];\r\n  //     for (let index = 0; index < data?.corporateList.length; index++) {\r\n  //       const element = data.corporateList[index];\r\n  //       this.REJECTEDArr.push(element);\r\n        \r\n  //     }\r\n  //   })\r\n  // }\r\n  // }\r\n  // }\r\n\r\n  resetSearchData() {\r\n    this.INITIATEDArr = [];\r\n    this.UNDER_PROCESSArr = [];\r\n    this.APPROVEDArr = [];\r\n    this.REJECTEDArr = [];\r\n    this.cdr.markForCheck();\r\n  }\r\n\r\n  searchResponseUpdate(status: string, data: any) {\r\n    console.log(\"called ?\", status, data);\r\n    if (status == \"INITIATED\") {\r\n      // this.INITIATEDArr = [];\r\n      this.INITIATEDArr.push(data);\r\n      console.log(\"this.INITIATEDArr :: \", this.INITIATEDArr);\r\n    } else if (status == \"UNDER_PROCESS\") {\r\n      // this.UNDER_PROCESSArr = [];\r\n      this.UNDER_PROCESSArr.push(data);\r\n      console.log(\"this.UNDER_PROCESSArr :: \", this.UNDER_PROCESSArr);\r\n    } else if (status == \"APPROVED\") {\r\n      // this.APPROVEDArr = [];\r\n      this.APPROVEDArr.push(data);\r\n      console.log(\"this.APPROVEDArr :: \", this.APPROVEDArr);\r\n    } else if (status == \"REJECTED\") {\r\n      // this.REJECTEDArr = [];\r\n      this.REJECTEDArr.push(data);\r\n      console.log(\"this.REJECTEDArr :: \", this.REJECTEDArr);\r\n    }\r\n    this.cdr.markForCheck();\r\n  }\r\n\r\n  getProfileImage(corporateID) {\r\n    this.apiService.getProfileDetails(corporateID).subscribe(\r\n      (data: any) => {\r\n        console.log(data);\r\n        console.log(data.profileImage);\r\n        this.searchable = false;\r\n        if (data.profileImage != null) {\r\n          let objectURL = \"data:image/jpeg;base64,\" + data.profileImage.fileData;\r\n          this.searchable = true;\r\n          this.image = this.sanitizer.bypassSecurityTrustUrl(objectURL);\r\n          console.log(this.searchable, \"Searchable\");\r\n        }\r\n      },\r\n      (error: any) => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n  getcorporateIDData(valueToFilter) {\r\n    console.log(\"get kyc\");\r\n    if (\r\n      valueToFilter != \"\" &&\r\n      valueToFilter != undefined &&\r\n      valueToFilter != null\r\n    ) {\r\n      this.apiService\r\n        .getKycTaskSummaryAll(valueToFilter, this.searchText)\r\n        .subscribe((data) => {\r\n          console.log(\"resp data :: \", data);\r\n          this.cdr.markForCheck();\r\n          this.cdr.detectChanges();\r\n          if (data != null) {\r\n            var value = data[0].customerAdditionalInfo.kycStatus + \"Arr\";\r\n            this[value].splice(0, 0, data[0]);\r\n            this[value] = this[value].slice();\r\n            console.log(\"resp value :: \", this[value]);\r\n          } else {\r\n            this.noDataFound = true;\r\n          }\r\n        });\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this._searchSubject.unsubscribe();\r\n\r\n    this.UNDER_PROCESSArr = [];\r\n    this.APPROVEDArr = [];\r\n    this.REJECTEDArr = [];\r\n    this.INITIATEDArr = [];\r\n\r\n    this.INITIATEDPage = 0;\r\n    this.REJECTEDPage = 0;\r\n    this.APPROVEDPage = 0;\r\n    this.UNDER_PROCESSPage = 0;\r\n\r\n    this.INITIATEDTotalPages = 0;\r\n    this.REJECTEDTotalPages = 0;\r\n    this.APPROVEDTotalPages = 0;\r\n    this.UNDER_PROCESSTotalPages = 0;\r\n  }\r\n\r\n  /* @method :: to update the existing array with scroll api response */\r\n  async updateDataOnScroll(status: string, data: any) {\r\n    if (status == \"INITIATED\") {\r\n      const result = _.unionBy(this.INITIATEDArr, data, \"corporateID\");\r\n      this.INITIATEDArr = result;\r\n    } else if (status == \"UNDER_PROCESS\") {\r\n      const result = _.unionBy(this.UNDER_PROCESSArr, data, \"corporateID\");\r\n      this.UNDER_PROCESSArr = result;\r\n    } else if (status == \"APPROVED\") {\r\n      const result = _.unionBy(this.APPROVEDArr, data, \"corporateID\");\r\n      this.APPROVEDArr = result;\r\n    } else if (status == \"REJECTED\") {\r\n      const result = _.unionBy(this.REJECTEDArr, data, \"corporateID\");\r\n      this.REJECTEDArr = result;\r\n    }\r\n    this.cdr.markForCheck();\r\n  }\r\n\r\n  isNum(val) {\r\n    return !isNaN(val);\r\n  }\r\n\r\n  isString(val) {\r\n    return val;\r\n  }\r\n\r\n  getRandomColor(idx) {\r\n    var col0 = \"#0d856b\";\r\n    var col1 = \"#d66f1b\";\r\n    var col2 = \"#9f52e7\";\r\n    var col3 = \"#e9318d\";\r\n    var col4 = \"#1175a3\";\r\n    var col5 = \"#e93131\";\r\n    var col6 = \"#2316d3\";\r\n    var col7 = \"#f557f5\";\r\n    var col8 = \"#d6c31b\";\r\n    var col9 = \"#40d61b\";\r\n\r\n    if (idx % 10 == 0) return col0;\r\n    if (idx % 10 == 1) return col1;\r\n    if (idx % 10 == 2) return col2;\r\n    if (idx % 10 == 3) return col3;\r\n    if (idx % 10 == 4) return col4;\r\n    if (idx % 10 == 5) return col5;\r\n    if (idx % 10 == 6) return col6;\r\n    if (idx % 10 == 7) return col7;\r\n    if (idx % 10 == 8) return col8;\r\n    if (idx % 10 == 9) return col9;\r\n    return \"#d86315\";\r\n  }\r\n}\r\n","import { Component, OnInit,Inject, ChangeDetectorRef } from '@angular/core';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { AppLoaderService } from 'app/shared/services/app-loader/app-loader.service';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { TasksummaryService } from '../../tasksummary.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-loan-credit-details-update',\r\n  templateUrl: './loan-credit-details-update.component.html',\r\n  styleUrls: ['./loan-credit-details-update.component.scss']\r\n})\r\nexport class LoanCreditDetailsUpdateComponent implements OnInit {\r\n  loanAccountId: any;\r\n  loanaccountID: any;\r\n  loanCreditForm: FormGroup;\r\n  creditDetails: any;\r\n\r\n  \r\n  statusArr: any = ['BACKLOG', 'ONGOING', 'APPROVED', 'REJECTED']\r\n  arr: any = ['BACKLOG', 'ONGOINGArr', 'APPROVEDArr', 'REJECTEDArr']\r\n  BACKLOGArr: any = [];\r\n  ONGOINGArr: any = [];\r\n  REJECTEDArr: any = [];\r\n  APPROVEDArr: any = [];\r\n  \r\n  BACKLOGTotalPages: number = 0\r\n  ONGOINGTotalPages: number = 0\r\n  REJECTEDTotalPages: number = 0\r\n  APPROVEDTotalPages: number = 0\r\n\r\n  BACKLOGCount: number = 0\r\n  ONGOINGCount: number = 0\r\n  REJECTEDCount: number = 0\r\n  APPROVEDCount: number = 0\r\n\r\n  BACKLOGImage: any[] = [];\r\n  ONGOINGImage: any[] = [];\r\n  REJECTEDImage: any[] = [];\r\n  APPROVEDImage: any[] = [];\r\n\r\n  BACKLOGTotalRecords: number = 0;\r\n  ONGOINGTotalRecords: number = 0;\r\n  REJECTEDTotalRecords: number = 0;\r\n  APPROVEDTotalRecords: number = 0;\r\n\r\n  BACKLOGPage: number = 0;\r\n  ONGOINGPage: number = 0;\r\n  REJECTEDPage: number = 0;\r\n  APPROVEDPage: number = 0;\r\n  \r\n  constructor(private apiService: ApiService, @Inject(MAT_DIALOG_DATA) public data: any, private fb: FormBuilder,\r\n  private loader: AppLoaderService, private taskSumService: TasksummaryService, private cdr: ChangeDetectorRef,\r\n  private ls: LocalStoreService, public dialogRef: MatDialogRef<LoanCreditDetailsUpdateComponent>, private snack: MatSnackBar,) { }\r\n\r\n  ngOnInit(): void {\r\n    this.loanaccountID = this.data.loanAccountId;\r\n    console.log('loanaccountID', this.loanaccountID)\r\n    this.buildLoanCreditForm(this.data)\r\n   \r\n  }\r\n  _keyPress(event: any) {\r\n   \r\n    const pattern = /[0-9]/;\r\n    let inputChar = String.fromCharCode(event.charCode);\r\n    console.log(\"inputChar\",inputChar);\r\n    inputChar=inputChar.toString();\r\n    console.log(\"inputChar1\",inputChar);\r\n    inputChar=inputChar\r\n    if (!pattern.test(inputChar)) {\r\n        event.preventDefault();\r\n    }\r\n   }\r\n   buildLoanCreditForm(data?) {\r\n    console.log('item',data)\r\n   \r\n     \r\n    this.loanCreditForm= this.fb.group({\r\n        loanAccountId: [this.loanaccountID],\r\n        customerName:[data ? data?.loanCreditInfo?.customerName:''],\r\n        agencyName: [data ? data?.loanCreditInfo?.agencyRating[0]?.agencyName : ''],\r\n        remarks: [data ? data?.loanCreditInfo?.agencyRating[0]?.remarks : ''],\r\n        ratings:[data ? data?.loanCreditInfo?.agencyRating[0]?.ratings: ''],\r\n        \r\n  \r\n \r\n    });\r\n\r\n\r\n  }\r\n  getLoanCreditDetails() {\r\n \r\n    this.apiService.gettingCreditRatingDetails(this.loanaccountID).subscribe((creditDetails) => {\r\n \r\n      this.creditDetails = creditDetails;\r\n      console.log(\"this.creditDetails::\", this.creditDetails);\r\n    \r\n\r\n      this.buildLoanCreditForm(this.creditDetails);\r\n      this.loanCreditForm.value.customerName = this.creditDetails.customerName;\r\n      this.loanCreditForm.value.agencyName = this.creditDetails.agencyRating.agencyName;\r\n      this.loanCreditForm.value.ratings = this.creditDetails.agencyRating.ratings;\r\n      this.loanCreditForm.value.remarks = this.creditDetails.agencyRating.remarks;\r\n\r\n \r\n\r\n    }, (err: any) => {\r\n      this.loader.close();\r\n    });\r\n  }\r\n\r\n  goToClose(): void {\r\n    this.dialogRef.close();\r\n   \r\n  \r\n    this.apiService.gettingCreditRatingDetails(this.loanaccountID).subscribe((creditDetails: any) => {\r\n      console.log(\"All Account Service\", creditDetails);\r\n      this.creditDetails = creditDetails;\r\n\r\n      console.log(\"this.accountDetails\", this.creditDetails);\r\n      console.log('form',this.loanCreditForm.value)\r\n   \r\n    \r\n\r\n   });\r\n   \r\n  }\r\n  submitForm1(){\r\n    \r\n    // console.log(\"val\",val);\r\n  \r\n    \r\n\r\n    let payload={\r\n      // loanAccountId: this.showEditOption ? this.loanaccountID : null,\r\n      accountType : \"loan\",\r\n      loanAccountId: this.data.loanAccountId,\r\n      customerName:this.loanCreditForm.value.customerName,\r\n      agencyName:this.loanCreditForm.value.agencyName,\r\n      ratings: this.loanCreditForm.value.ratings,  \r\n      remarks:this.loanCreditForm.value.remarks,\r\n     \r\n      \r\n  \r\n  \r\n    }\r\n    console.log(\"payload\",payload)\r\n    this.apiService.saveCreditDetails(payload).subscribe(data => {\r\n      console.log(\"data\",data.loanAccountId);\r\n      this.loanaccountID = this.data.loanAccountId;\r\n      console.log('loanaccountID', this.loanaccountID)\r\n\r\n      this.assign(this.data.loanAccountId)\r\n      if (data === 200 || data !== null) {\r\n        let statusModel = {\r\n          loanAccountId: this.data.loanAccountId,\r\n          status: \"ONGOING\"\r\n        };\r\n        this.apiService.updateLoanDetailsStatus(statusModel).subscribe(data => {\r\n        });\r\n      //  sessionStorage.setItem('loanAccountId', data.loanAccountid);\r\n        let fundStatus = {\r\n          loanAccountid: this.data.loanAccountId\r\n          \r\n        };\r\n       \r\n\r\n        this.ls.setItem('fundByStatus', fundStatus);\r\n        this.ls.setItem('accountType', data.accountType);\r\n       // this.ls.setItem('loanAccountId',this.data.loanAccountId);\r\n        this.ls.setItem('productName',data.businessProductName);\r\n    //    this.loanaccountID = this.ls.getItem('loanAccountid');\r\n        \r\n    this.loanaccountID = this.data.loanAccountId;\r\n    console.log(\"this.productaccountID\",this.loanaccountID);\r\n        this.snack.open('Data Updated!', 'OK', {\r\n          duration: 4000,\r\n          verticalPosition: 'top',\r\n          horizontalPosition: 'right'\r\n        });\r\n        this.getDataOnLoad();\r\n      }\r\n      if( data === 500){\r\n        this.snack.open('Not able to connect to server!', 'INTERNAL SERVER ERROR', {\r\n          duration: 4000,\r\n          verticalPosition: 'top',\r\n          horizontalPosition: 'right'\r\n        });\r\n        console.log(\"500 error\")\r\n      }\r\n      \r\n      this.goToClose();\r\n    })\r\n  }\r\n  \r\n  async getDataOnLoad() {\r\n    for (let index = 0; index < this.statusArr.length; index++) {\r\n      const statusItem = this.statusArr[index];\r\n      this.fetchCustomerInfo(statusItem);\r\n    }\r\n\r\n  }\r\n\r\n   fetchCustomerInfo(status:string){\r\n   \r\n    this.taskSumService.getallLoanAccountData(status)\r\n            .subscribe((custResp:any) => {\r\n              console.log(\"Response\", custResp);\r\n              this.updateStatusResponse(status, custResp);\r\n            });\r\n  }\r\n\r\n  updateStatusResponse(status, data){\r\n    console.log(\"data\", data)\r\n    console.log(\"status\", status)\r\n      if (status == 'ONGOING') {\r\n      this.ONGOINGArr = data?.loanList;\r\n      this.ONGOINGTotalPages = data?.totalPages;\r\n      this.ONGOINGTotalRecords = data?.totalNoOfElements;\r\n    }\r\n \r\n\r\n    this.cdr.markForCheck();\r\n}\r\n  assign(valueForaccId) {\r\n    this.apiService.setAccountId({\r\n      loanAccountId: valueForaccId\r\n    });\r\n    console.log(\"loan\", this.loanAccountId)\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","<div >\r\n    <mat-dialog-content>\r\n      <div fxLayout=\"row\" class=\"contain\">\r\n        <mat-icon style=\"padding-left: 100%;\"class=\"backIcon\" (click)=\"goToClose()\">close</mat-icon>\r\n    </div>\r\n      <h1>Loan Credit Details</h1>\r\n      <form class=\"mt-32\" [formGroup]=\"loanCreditForm\">\r\n        <div fxLayout=\"row wrap\" fxLayout.lt-sm=\"column\" >\r\n          <div fxFlex=\"33.33\" class=\"pr-16\">\r\n            <mat-label>Customer Name </mat-label>\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                <input matInput name=\"customerName\" formControlName=\"customerName\"  \r\n                />\r\n            </mat-form-field>\r\n          </div>\r\n    \r\n          <div fxFlex=\"33.33\" class=\"pr-16\">\r\n            <mat-label>Agency Name</mat-label>\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                <input matInput name=\"agencyName\" formControlName=\"agencyName\"  \r\n               />\r\n            </mat-form-field>\r\n          </div>\r\n          <div fxFlex=\"33.33\" class=\"pr-16\">\r\n            <mat-label>Remarks</mat-label>\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                <input matInput name=\"remarks\" formControlName=\"remarks\"  \r\n                />\r\n            </mat-form-field>\r\n          </div>\r\n       \r\n          \r\n        </div>\r\n    \r\n        <div fxLayout=\"row wrap\">\r\n          \r\n          <div fxFlex=\"33.33\" class=\"pr-16\">\r\n            <mat-label>Ratings</mat-label>\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n          <input matInput name=\"ratings\" formControlName=\"ratings\" >\r\n            </mat-form-field>\r\n          </div>\r\n          <div fxFlex=\"33.33\" class=\"pr-16\">\r\n            <!-- <mat-label>Branch Code </mat-label>\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n              <input matInput name=\"branchCode\" formControlName=\"branchCode\"  \r\n              />\r\n            </mat-form-field> -->\r\n          </div>\r\n    \r\n          <div fxFlex=\"33.33\" class=\"pr-16\">\r\n            <!-- <mat-label>Customer Account</mat-label>\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n              <input matInput name=\"customerAccount\" formControlName=\"customerAccount\"  \r\n              />\r\n            </mat-form-field> -->\r\n          </div>\r\n        </div>\r\n       \r\n  \r\n       \r\n       \r\n      </form>\r\n    </mat-dialog-content>\r\n    <mat-dialog-actions align=\"end\">\r\n      <button mat-button (click)=\"submitForm1()\">\r\n        Update\r\n      </button>\r\n      <button mat-button (click)=\"goToClose()\">Close</button>\r\n    </mat-dialog-actions>\r\n</div>","<br>\r\n<div class=\"search-results1\" infiniteScroll [infiniteScrollDistance]=\"2\" [infiniteScrollThrottle]=\"500\"\r\n(scrolled)=\"onScroll($event)\" [scrollWindow]=\"false\">\r\n<br>\r\n<div class=\"m-333 mt-32\">\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"space-between start\" fxLayoutGap=\"10px\">\r\n      <div fxFlex=\"60\" class=\"heading\">\r\n        <span class=\"task ml-24\">\r\n          Loan Account Task Summary\r\n        </span>\r\n      </div>\r\n  \r\n      <div fxFlex=\"30\" fxLayoutAlign=\"end center\" class=\"topSection\">\r\n        <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n          <mat-label>Search</mat-label>\r\n           <input matInput name=\"search\" [(ngModel)]=\"searchText\" autocomplete=\"off\"\r\n           (keyup)=\"updateSearch($event.target.value)\" placeholder=\"Search Loan Account Id\">\r\n          <mat-icon matPrefix class=\"my-icon\">search</mat-icon>\r\n          <button mat-button *ngIf=\"searchText\" matSuffix mat-icon-button (click)=\"clear()\">\r\n  \r\n            <div fxLayoutAlign=\"center\">\r\n              <mat-spinner *ngIf=\"loading\" [diameter]=\"15\"></mat-spinner> \r\n            </div> \r\n            \r\n           <mat-icon>close</mat-icon> \r\n          </button>\r\n          <mat-hint>Search Loan Account ID</mat-hint>\r\n        </mat-form-field>\r\n    </div>\r\n    </div>\r\n  </div>\r\n\r\n\r\n  <div class=\"content\">\r\n    <!-- <div fxLayout=\"row wrap\"> -->\r\n      <div fxLayout=\"20%\" class=\"screen\">\r\n  \r\n        <mat-card class=\"mat-elevation-z4\">\r\n  \r\n          <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n            <span class=\"pl-6\">\r\n              <h2 class=\"statusFont\">Pending for approval ({{BACKLOGArr?.length}}/{{BACKLOGTotalRecords}})</h2>\r\n            </span>\r\n            <span  class=\"tolltipicon\">\r\n              <mat-icon>more_vert</mat-icon>\r\n            </span>\r\n          </div>\r\n          <!-- <div class=\"search-results\" infiniteScroll [infiniteScrollDistance]=\"2\" [infiniteScrollThrottle]=\"500\"\r\n            (scrolled)=\"onScrollingFinished($event,'ONGOING')\" [scrollWindow]=\"false\"> -->\r\n            <div >\r\n\r\n                <div *ngFor=\"let items of BACKLOGArr ; let i = index\"\r\n                (click)=\"goToLoanAccountSummary(items,'ONGOING', getRandomColor(i+3))\" class=\"colorChange\">\r\n                \r\n                <div >\r\n                  <mat-icon class=\"fill-color-blue bookMark\">bookmark</mat-icon>\r\n                  <span><small>{{items?.createdTime | dateAgo}}</small></span>\r\n                </div>\r\n                \r\n                <mat-card-header class=\"head\">\r\n                  <div mat-card-avatar class=\"circle\">\r\n                  <div *ngIf=\"items.profileImage == 'not_available'; else showAvatar\">\r\n                    <app-photo [name]=\"items?.firstName + ' ' + items.lastName\"></app-photo> \r\n                  </div>\r\n                  <ng-template #showAvatar>\r\n                    <img class=\"profilepic\" [src]=\"items.profileImage\" \r\n                    alt=\"profile\" onerror=\"this.onerror=null;this.src='assets/images/profile-Picture.png';\">\r\n                  </ng-template>\r\n                </div>\r\n                  \r\n                  <mat-card-title class=\"naming\">\r\n                   {{items.prefix}}&nbsp;{{items.firstName}}&nbsp;{{items.middleName}}&nbsp;{{items.lastName}}\r\n                  </mat-card-title>\r\n                  <mat-card-subtitle><span class=\"loanIdText\">#{{items.loanAccountId}}</span></mat-card-subtitle>\r\n                </mat-card-header>\r\n  \r\n                <form class=\"head1\">\r\n  \r\n                  <div class=\"col1\" fxLayout=\"row\" fxLayoutGap=\"40px\">\r\n                    <span>Account Branch </span>\r\n                    <span>Account Type </span>\r\n                    <!-- <span>Product</span> -->\r\n                  </div>\r\n                  <div class=\"col2\" fxLayout=\"row\" fxLayoutGap=\"58px\">\r\n                    <span>{{items.accountBranch}}</span>\r\n                    <span>{{items.accountType}}</span>\r\n                  </div><br />\r\n                  <div class=\"col3\" fxLayout=\"row\" fxLayoutGap=\"40px\">\r\n                    <span>Business Product Name</span>\r\n                    <span>Status</span>\r\n                  </div>\r\n                  <div class=\"col4\" fxLayout=\"row\" fxLayoutGap=\"44px\">\r\n                    <span>{{items.businessProductName }}</span>\r\n                    <span>{{items.status}}</span>\r\n                  </div><br>\r\n                </form>\r\n                </div>             \r\n          </div>\r\n          <br />\r\n  \r\n        </mat-card>\r\n  \r\n        <mat-card class=\"mat-elevation-z4\">\r\n  \r\n          <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n            <span class=\"pl-6\">\r\n              <h2 class=\"statusFont\">Ongoing ({{ONGOINGArr?.length}}/{{ONGOINGTotalRecords}})</h2>\r\n            </span>\r\n            <span  class=\"tolltipicon\">\r\n              <mat-icon>more_vert</mat-icon>\r\n            </span>\r\n          </div>\r\n          <!-- <div class=\"search-results\" infiniteScroll [infiniteScrollDistance]=\"2\" [infiniteScrollThrottle]=\"500\"\r\n            (scrolled)=\"onScrollingFinished($event,'ONGOING')\" [scrollWindow]=\"false\"> -->\r\n            <div >\r\n                <div *ngFor=\"let items of ONGOINGArr ; let i = index\"\r\n                (click)=\"goToLoanAccountSummary(items,'ONGOING', getRandomColor(i+3))\" class=\"colorChange\">\r\n                <div >\r\n                  <mat-icon class=\"fill-color-blue bookMark book2\">bookmark</mat-icon>\r\n                  <span><small>{{items?.createdTime | dateAgo}}</small></span>\r\n                </div>\r\n                <mat-card-header class=\"head\">\r\n                 <div mat-card-avatar class=\"circle\">\r\n                  <div *ngIf=\"items.profileImage == 'not_available'; else showAvatar\">\r\n                    <app-photo [name]=\"items?.firstName + ' ' + items.lastName\"></app-photo> \r\n                  </div>\r\n                  <ng-template #showAvatar>\r\n                    <img class=\"profilepic\" [src]=\"items.profileImage\"\r\n                    alt=\"profile\" onerror=\"this.onerror=null;this.src='assets/images/profile-Picture.png';\">\r\n                  </ng-template>\r\n                </div>\r\n                  <mat-card-title class=\"naming\">\r\n                   {{items.prefix}}&nbsp;{{items.firstName}}&nbsp;{{items.middleName}}&nbsp;{{items.lastName}}\r\n                  </mat-card-title>\r\n                  <mat-card-subtitle><span class=\"loanIdText\">#{{items.loanAccountId}}</span></mat-card-subtitle>\r\n                </mat-card-header>\r\n  \r\n                <form class=\"head1\">\r\n  \r\n                  <div class=\"col1\" fxLayout=\"row\" fxLayoutGap=\"40px\">\r\n                    <span>Account Branch </span>\r\n                    <span>Account Type </span>\r\n                    <!-- <span>Product</span> -->\r\n                  </div>\r\n                  <div class=\"col2\" fxLayout=\"row\" fxLayoutGap=\"58px\">\r\n                    <span>{{items.accountBranch}}</span>\r\n                    <span>{{items.accountType}}</span>\r\n                  </div><br />\r\n                  <div class=\"col3\" fxLayout=\"row\" fxLayoutGap=\"40px\">\r\n                    <span>Business Product Name</span>\r\n                    <span>Status</span>\r\n                  </div>\r\n                  <div class=\"col4\" fxLayout=\"row\" fxLayoutGap=\"44px\">\r\n                    <span>{{items.businessProductName }}</span>\r\n                    <span>{{items.status}}</span>\r\n                  </div><br>\r\n                </form>\r\n              </div>\r\n            </div>\r\n        </mat-card>\r\n        \r\n        <mat-card class=\"mat-elevation-z4\">\r\n          <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n            <span class=\"pl-6\">\r\n              <h2 class=\"statusFont\">Approved ({{APPROVEDArr?.length}}/{{APPROVEDTotalRecords}})</h2>\r\n            </span>\r\n            <span  class=\"tolltipicon\">\r\n              <mat-icon>more_vert</mat-icon>\r\n            </span>\r\n          </div>\r\n          <!-- <div class=\"search-results\" infiniteScroll [infiniteScrollDistance]=\"2\" [infiniteScrollThrottle]=\"500\"\r\n            (scrolled)=\"onScrollingFinished($event,'APPROVED')\" [scrollWindow]=\"false\"> -->\r\n            <div >\r\n              <div *ngFor=\"let items of APPROVEDArr ; let i = index\"\r\n              (click)=\"goToLoanAccountSummary(items,'ONGOING', getRandomColor(i+3))\" class=\"colorChange\">\r\n              <div >\r\n                  <mat-icon class=\"fill-color-blue bookMark book3\">bookmark</mat-icon>\r\n                  <span><small>{{items?.createdTime | dateAgo}}</small></span>\r\n                </div>\r\n              <mat-card-header class=\"head\">\r\n                 \r\n                 <div mat-card-avatar class=\"circle\">\r\n                  <div *ngIf=\"items.profileImage == 'not_available'; else showAvatar\">\r\n                    <app-photo [name]=\"items?.firstName + ' ' + items.lastName\"></app-photo> \r\n                  </div>\r\n                  <ng-template #showAvatar>\r\n                    <img class=\"profilepic\" [src]=\"items.profileImage\"   \r\n                    alt=\"profile\" onerror=\"this.onerror=null;this.src='assets/images/profile-Picture.png';\">\r\n                  </ng-template>\r\n                </div>\r\n                  <mat-card-title class=\"naming\">\r\n                   {{items.prefix}}&nbsp;{{items.firstName}}&nbsp;{{items.middleName}}&nbsp;{{items.lastName}}\r\n                  </mat-card-title>\r\n                  <mat-card-subtitle><span class=\"loanIdText\">#{{items.loanAccountId}}</span></mat-card-subtitle>\r\n              </mat-card-header>\r\n\r\n              <form class=\"head1\">\r\n  \r\n                <div class=\"col1\" fxLayout=\"row\" fxLayoutGap=\"40px\">\r\n                  <span>Account Branch </span>\r\n                  <span>Account Type </span>\r\n                  <!-- <span>Product</span> -->\r\n                </div>\r\n                <div class=\"col2\" fxLayout=\"row\" fxLayoutGap=\"58px\">\r\n                  <span>{{items.accountBranch}}</span>\r\n                  <span>{{items.accountType}}</span>\r\n                </div><br />\r\n                <div class=\"col3\" fxLayout=\"row\" fxLayoutGap=\"40px\">\r\n                  <span>Business Product Name</span>\r\n                  <span>Status</span>\r\n                </div>\r\n                <div class=\"col4\" fxLayout=\"row\" fxLayoutGap=\"44px\">\r\n                  <span>{{items.businessProductName }}</span>\r\n                  <span>{{items.status}}</span>\r\n                </div><br>\r\n              </form>\r\n            </div>\r\n          </div>\r\n          <br />\r\n        </mat-card>\r\n  \r\n        <mat-card class=\"mat-elevation-z4\">\r\n          <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n            <span class=\"pl-6\">\r\n              <h2 class=\"statusFont\">Rejected ({{REJECTEDArr?.length}}/{{REJECTEDTotalRecords}})</h2>\r\n            </span>\r\n            <span  class=\"tolltipicon\">\r\n              <mat-icon>more_vert</mat-icon>\r\n            </span>\r\n          </div>\r\n          <!-- <div class=\"search-results\" infiniteScroll [infiniteScrollDistance]=\"2\" [infiniteScrollThrottle]=\"500\"\r\n          (scrolled)=\"onScrollingFinished($event,'REJECTED')\" [scrollWindow]=\"false\"> -->\r\n          <div>\r\n              <div *ngFor=\"let items of REJECTEDArr ; let i = index\"\r\n              (click)=\"goToLoanAccountSummary(items,'ONGOING', getRandomColor(i+3))\" class=\"colorChange\">\r\n                <div >\r\n                  <mat-icon class=\"fill-color-blue bookMark book4\">bookmark</mat-icon>\r\n                  <span><small>{{items?.createdTime | dateAgo}}</small></span>\r\n                </div>\r\n                <mat-card-header class=\"head\">\r\n                 \r\n                  <div mat-card-avatar class=\"circle\">\r\n                  <div *ngIf=\"items.profileImage == 'not_available'; else showAvatar\">\r\n                    <app-photo [name]=\"items?.firstName + ' ' + items.lastName\"></app-photo> \r\n                  </div>\r\n                  <ng-template #showAvatar>\r\n                    <img class=\"profilepic\" [src]=\"items.profileImage\"                    \r\n                    alt=\"profile\" onerror=\"this.onerror=null;this.src='assets/images/profile-Picture.png';\">\r\n                  </ng-template>\r\n                </div>\r\n                  <mat-card-title class=\"naming\">\r\n                   {{items.prefix}}&nbsp;{{items.firstName}}&nbsp;{{items.middleName}}&nbsp;{{items.lastName}}\r\n                  </mat-card-title>\r\n                  <mat-card-subtitle><span class=\"loanIdText\">#{{items.loanAccountId}}</span></mat-card-subtitle>\r\n                </mat-card-header>\r\n  \r\n                <form class=\"head1\">\r\n  \r\n                  <div class=\"col1\" fxLayout=\"row\" fxLayoutGap=\"40px\">\r\n                    <span>Account Branch </span>\r\n                    <span>Account Type </span>\r\n                    <!-- <span>Product</span> -->\r\n                  </div>\r\n                  <div class=\"col2\" fxLayout=\"row\" fxLayoutGap=\"58px\">\r\n                    <span>{{items.accountBranch}}</span>\r\n                    <span>{{items.accountType}}</span>\r\n                  </div><br />\r\n                  <div class=\"col3\" fxLayout=\"row\" fxLayoutGap=\"40px\">\r\n                    <span>Business Product Name</span>\r\n                    <span>Status</span>\r\n                  </div>\r\n                  <div class=\"col4\" fxLayout=\"row\" fxLayoutGap=\"44px\">\r\n                    <span>{{items.businessProductName }}</span>\r\n                    <span>{{items.status}}</span>\r\n                  </div><br>\r\n                </form>\r\n  \r\n              </div>\r\n          </div>\r\n        </mat-card>\r\n  \r\n      </div>\r\n    <!-- </div> -->\r\n    <br>\r\n  </div>\r\n  </div>","import { ChangeDetectorRef, Component, EventEmitter, HostListener, OnInit, Output } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatRadioChange } from '@angular/material/radio';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { SortCriteria } from 'app/shared/pipes/custom-task-summary-sorting.pipe';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { Subject } from 'rxjs';\r\nimport { debounceTime } from 'rxjs/operators';\r\nimport { TasksummaryService } from '../tasksummary.service';\r\nimport * as _ from 'lodash';\r\nimport { LoanAccountApproverComponent } from '../loan-account-approver/loan-account-approver.component';\r\n\r\n\r\n@Component({\r\n  selector: 'app-loan-account-task-summary',\r\n  templateUrl: './loan-account-task-summary.component.html',\r\n  styleUrls: ['./loan-account-task-summary.component.scss']\r\n})\r\nexport class LoanAccountTaskSummaryComponent implements OnInit {\r\n  accountId: any;\r\n  searchText;\r\n  statusArr: any = ['BACKLOG', 'ONGOING', 'APPROVED', 'REJECTED']\r\n  arr: any = ['BACKLOG', 'ONGOINGArr', 'APPROVEDArr', 'REJECTEDArr']\r\n  BACKLOGArr: any = [];\r\n  ONGOINGArr: any = [];\r\n  REJECTEDArr: any = [];\r\n  APPROVEDArr: any = [];\r\n  \r\n  BACKLOGTotalPages: number = 0\r\n  ONGOINGTotalPages: number = 0\r\n  REJECTEDTotalPages: number = 0\r\n  APPROVEDTotalPages: number = 0\r\n\r\n  BACKLOGCount: number = 0\r\n  ONGOINGCount: number = 0\r\n  REJECTEDCount: number = 0\r\n  APPROVEDCount: number = 0\r\n\r\n  BACKLOGImage: any[] = [];\r\n  ONGOINGImage: any[] = [];\r\n  REJECTEDImage: any[] = [];\r\n  APPROVEDImage: any[] = [];\r\n\r\n  BACKLOGTotalRecords: number = 0;\r\n  ONGOINGTotalRecords: number = 0;\r\n  REJECTEDTotalRecords: number = 0;\r\n  APPROVEDTotalRecords: number = 0;\r\n\r\n  BACKLOGPage: number = 0;\r\n  ONGOINGPage: number = 0;\r\n  REJECTEDPage: number = 0;\r\n  APPROVEDPage: number = 0;\r\n\r\n  loading: boolean;\r\n\r\n  image: Object;\r\n  searchable:boolean=false;\r\n  screenType = \"loan\";\r\n  isScroll:boolean = true;\r\n  //variable for sorting data\r\n  public criteria: SortCriteria;\r\n\r\n  @Output() setValue: EventEmitter<string> = new EventEmitter();\r\n  private _searchSubject: Subject<string> = new Subject();\r\n  radioButtonSelected: any;\r\n\r\n  public listOfOptions: any = [\r\n    { label: 'Corporate ID', value: 'corporateID', checked: true },\r\n    { label: 'Name ', value: 'firstName', checked: false }\r\n  ];\r\n  noDataFound: boolean = false;\r\n\r\n  constructor(public dialog: MatDialog, private ls: LocalStoreService, private taskSumService: TasksummaryService,\r\n    public cdr: ChangeDetectorRef, private apiService: ApiService, private snack: MatSnackBar, private sanitizer: DomSanitizer) { \r\n      this._setSearchSubscription();\r\n    }\r\n    @HostListener('scroll', ['$event'])\r\n    onScroll(event: any) {  \r\n      if(this.isScroll){\r\n        this.BACKLOGPage++;\r\n        this.getDataOnScroll(\"BACKLOG\",this.BACKLOGPage,this.BACKLOGTotalPages);    \r\n        this.ONGOINGPage++;\r\n        this.getDataOnScroll(\"ONGOING\",this.ONGOINGPage, this.ONGOINGTotalPages);\r\n        this.APPROVEDPage++;\r\n        this.getDataOnScroll(\"APPROVED\", this.APPROVEDPage, this.APPROVEDTotalPages);\r\n        this.REJECTEDPage++;\r\n        this.getDataOnScroll(\"REJECTED\", this.REJECTEDPage, this.REJECTEDTotalPages);\r\n      }\r\n    }\r\n  \r\n    ngOnInit(): void {\r\n      var task:boolean=true;\r\n      this.apiService.setTask(task);\r\n    this.accountId = this.ls.getItem('accountId');\r\n\r\n    /* @called :: on screen load */\r\n    this.getDataOnLoad();\r\n\r\n\r\n\r\n    this.listOfOptions.filter(item => {\r\n      if (item.checked) {\r\n        this.radioButtonSelected = item.value;\r\n      }\r\n    });\r\n\r\n    this.criteria = {\r\n      property: this.radioButtonSelected,\r\n      descending: true\r\n    };\r\n  }\r\n  radioChange(event: MatRadioChange, data) {\r\n    this.radioButtonSelected = data.value;\r\n    this.criteria.property=this.radioButtonSelected;\r\n  }\r\n\r\n  public updateSearch(searchTextValue: string) {\r\n    console.log(\"searchTextValue::\",searchTextValue)\r\n    this._searchSubject.next(searchTextValue);\r\n  }\r\n  private _setSearchSubscription() {\r\n    this._searchSubject.pipe(\r\n      debounceTime(1000)\r\n    ).subscribe((searchValue: string) => {\r\n      this.setValue.emit(searchValue);\r\n      console.log('search value :: ', searchValue)\r\n      console.log('search text :: ', this.searchText);\r\n      if (searchValue == null || searchValue == '' || searchValue == \"\") {\r\n        this.noDataFound = false;\r\n        this.searchable=false;\r\n        this.getDataOnLoad();\r\n        return;\r\n      }\r\n      this.searchcorporateID(searchValue);\r\n    });\r\n  }\r\n\r\n  clear(){\r\n    this.searchText = \"\";\r\n    this.isScroll = true;\r\n    this.getDataOnLoad();\r\n  }\r\n\r\n  /* @method :: to load all data on screen load */\r\n  async getDataOnLoad() {\r\n    for (let index = 0; index < this.statusArr.length; index++) {\r\n      const statusItem = this.statusArr[index];\r\n      this.fetchCustomerInfo(statusItem);\r\n    }\r\n  }\r\n  fetchCustomerInfo(status:string){\r\n   \r\n    this.taskSumService.getallLoanAccountData(status)\r\n            .subscribe((custResp:any) => {\r\n              console.log(\"Response\", custResp);\r\n              this.updateStatusResponse(status, custResp);\r\n            });\r\n  }\r\n\r\n  updateStatusResponse(status, data){\r\n    console.log(\"data\", data)\r\n    console.log(\"status\", status)\r\n    if(status == 'BACKLOG'){\r\n      this.BACKLOGArr = data?.loanList;\r\n      this.BACKLOGTotalPages = data?.totalPages;\r\n      this.BACKLOGTotalRecords = data?.totalNoOfElements;\r\n    }else if(status == 'ONGOING'){\r\n      this.ONGOINGArr = data?.loanList;\r\n      this.ONGOINGTotalPages = data?.totalPages;\r\n      this.ONGOINGTotalRecords = data?.totalNoOfElements;\r\n    }else if(status == 'APPROVED'){\r\n      this.APPROVEDArr = data?.loanList;\r\n      this.APPROVEDTotalPages = data?.totalPages;\r\n      this.APPROVEDTotalRecords = data?.totalNoOfElements;\r\n    }else if(status == 'REJECTED'){ \r\n      this.REJECTEDArr = data?.loanList;\r\n      this.REJECTEDTotalPages = data?.totalPages;\r\n      this.REJECTEDTotalRecords = data?.totalNoOfElements;\r\n      console.log(\"this.REJECTEDArr\",this.REJECTEDArr);\r\n    }\r\n\r\n    this.cdr.markForCheck();\r\n}\r\n  \r\n\r\n  /* @method :: to load data on scroll of data*/\r\n  onScrollingFinished(e, status) {\r\n    if(status == 'BACKLOG'){\r\n      this.BACKLOGPage++;\r\n      this.getDataOnScroll(status,this.BACKLOGPage,this.BACKLOGTotalPages);\r\n      \r\n     }else if(status == 'ONGOING'){\r\n     this.ONGOINGPage++;\r\n     this.getDataOnScroll(status,this.ONGOINGPage, this.ONGOINGTotalPages);\r\n       \r\n     }else if(status == 'APPROVED'){\r\n       this.APPROVEDPage++;\r\n       this.getDataOnScroll(status, this.APPROVEDPage, this.APPROVEDTotalPages);\r\n     }else if(status == 'REJECTED'){ \r\n       this.REJECTEDPage++;\r\n       this.getDataOnScroll(status, this.REJECTEDPage, this.REJECTEDTotalPages);\r\n     }\r\n  }\r\n\r\n  /* @method :: to call service ,when scroll method called */\r\n  getDataOnScroll(status,page,totalPage) {\r\n    console.log('---------scrolled----------')\r\n    if (page === totalPage) {\r\n      console.log('No scroll requied')\r\n      return;\r\n    }\r\n\r\n    this.taskSumService.getAllLoanDetailOnScroll(status, page)\r\n      .subscribe(data => {\r\n        console.log('count data :: ', data);\r\n        this.cdr.markForCheck();\r\n        this.updateDataOnScroll(status, data.loanList);\r\n      });\r\n\r\n  }\r\n\r\n  goToLoanAccountSummary(data, status, colCode) {\r\n\r\n      localStorage.setItem('CustomerColorCode', colCode);\r\n    const dialogRef = this.dialog.open(LoanAccountApproverComponent,\r\n      {\r\n        panelClass: 'full-width-dialog',\r\n        data: { dataResp: data, recordStatus: status },\r\n        width: '80%',\r\n        disableClose: false\r\n      });\r\n    dialogRef.afterClosed().subscribe((submit) => {\r\n      console.log('dialog closed:: ', submit)\r\n      if (submit.recordStatus === 'REJECTED' || submit.recordStatus === 'APPROVED'\r\n        || submit.data.kycStatus === 'REJECTED' || submit.data.kycStatus === 'APPROVED') {\r\n        this.getDataOnLoad()\r\n      }\r\n      this.getDataOnLoad()\r\n\r\n    })\r\n  }\r\n\r\n  searchcorporateID(searchTerm) {\r\n    let text:any;\r\n      let params:any;\r\n      if(searchTerm===''){\r\n        console.log('empty')\r\n        this.getDataOnLoad();\r\n        this.isScroll = true\r\n        return;\r\n      }\r\n      if(this.isNum(searchTerm)){\r\n        if(searchTerm.length == 10){\r\n          console.log(\"contact\");\r\n          text=this.searchText.trim();\r\n          params = 'phoneNumber='+text;\r\n        }\r\n        else{\r\n          console.log(\"Id\");\r\n          text=this.searchText.trim();\r\n          // params = 'loanAccountId='+text;\r\n          // params = 'customerId='+text;\r\n          this.taskSumService.getallLoanAccountData2(text)\r\n          .subscribe(data => {\r\n            console.log(data)\r\n            if(data != null){\r\n         \r\n              params = 'loanAccountId='+text;\r\n              console.log('loan',params);\r\n            }\r\n            else{\r\n              console.log('not a loan')\r\n              params = 'customerId='+text;\r\n              console.log('customer',params);\r\n            }\r\n          })\r\n        }\r\n      }\r\n      else if(this.isString(searchTerm)){\r\n        if( /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(searchTerm)){\r\n          console.log(\"email\");\r\n          text=this.searchText.trim();\r\n          params = 'primaryEmailAdress='+text;\r\n        }\r\n        else{\r\n        console.log(\"name\");\r\n        text=this.searchText.trim();\r\n        params = 'customerName='+text;\r\n        }\r\n      }\r\n      setTimeout(() => {\r\n        this.getCustomerData(params);\r\n      }, 100);\r\n      \r\n      this.isScroll = false\r\n  }\r\n\r\n  getCustomerData(params) {\r\n    console.log(params);\r\n    this.loading = true;\r\n    for (let index = 0; index < this.statusArr.length; index++) {\r\n      const statusItem = this.statusArr[index];\r\n     // this.fetchCustomerByStatus(statusItem,params,0);\r\n     if(statusItem == 'BACKLOG'){\r\n    this.taskSumService.getallLoanAccountData1(params,statusItem)\r\n    .subscribe(data => {\r\n      this.BACKLOGTotalPages = data?.totalPages;\r\n      this.loading = false;\r\n      console.log('resp data :: ', data);\r\n      this.BACKLOGArr = [];\r\n      for (let index = 0; index < data?.loanList.length; index++) {\r\n        const element = data?.loanList[index];\r\n        this.BACKLOGArr.push(element);\r\n        \r\n      }\r\n      \r\n    })\r\n  }\r\n  else  if(statusItem == 'ONGOING'){\r\n    this.taskSumService.getallLoanAccountData1(params,statusItem)\r\n    .subscribe(data => {\r\n      this.ONGOINGTotalPages = data?.totalPages;\r\n      this.loading = false;\r\n      console.log('resp data :: ', data);\r\n      this.ONGOINGArr = [];\r\n      for (let index = 0; index < data?.loanList.length; index++) {\r\n        const element = data.loanList[index];\r\n        this.ONGOINGArr.push(element);\r\n        \r\n      }\r\n       \r\n    })\r\n  }\r\n  else  if(statusItem == 'APPROVED'){\r\n    this.taskSumService.getallLoanAccountData1(params,statusItem)\r\n    .subscribe(data => {\r\n      this.APPROVEDTotalPages = data?.totalPages;\r\n      this.loading = false;\r\n      console.log('resp data :: ', data);\r\n      this.APPROVEDArr = [];\r\n      for (let index = 0; index < data?.loanList.length; index++) {\r\n        const element = data.loanList[index];\r\n        this.APPROVEDArr.push(element);\r\n        \r\n      }\r\n       \r\n    })\r\n  }\r\n  else  if(statusItem == 'REJECTED'){\r\n    this.taskSumService.getallLoanAccountData1(params,statusItem)\r\n    .subscribe(data => {\r\n      this.REJECTEDTotalPages = data?.totalPages;\r\n      this.loading = false;\r\n      console.log('resp data :: ', data);\r\n      this.REJECTEDArr = [];\r\n      for (let index = 0; index < data?.loanList.length; index++) {\r\n        const element = data?.loanList[index];\r\n        this.REJECTEDArr.push(element);\r\n        \r\n      }\r\n    })\r\n  }\r\n  }\r\n  }\r\n\r\n  // getCustomerData(params) {\r\n  //   this.loading = true;\r\n  //   console.log(\"params::\",params)\r\n  //   this.apiService.getallLoanAccountData(params)\r\n  //   .subscribe(data => {\r\n  //     this.loading = false;\r\n  //     console.log('resp data :: ', data);\r\n  //    this.resetSearchData();\r\n  //     for (let index = 0; index < data.loanList.length; index++) {\r\n  //       const element = data.loanList[index];\r\n  //       this.searchResponseUpdate(element.status,data.loanList[index]);\r\n        \r\n  //     }\r\n  //   })\r\n  // }\r\n\r\n  resetSearchData(){\r\n    this.BACKLOGArr = [];\r\n    this.ONGOINGArr = [];\r\n    this.APPROVEDArr = [];\r\n    this.REJECTEDArr = [];\r\n    this.cdr.markForCheck();\r\n  }\r\n\r\n  searchResponseUpdate(status:string, data: any) {\r\n    if(status == 'ONGOING'){\r\n      // this.ONGOINGArr = [];\r\n      this.ONGOINGArr.push(data);\r\n     }else if(status == 'BACKLOG'){\r\n      // this.BACKLOGArr = [];\r\n      this.BACKLOGArr.push(data);\r\n     }else if(status == 'APPROVED'){\r\n      // this.APPROVEDArr = [];\r\n      this.APPROVEDArr.push(data);\r\n     }else if(status == 'REJECTED'){ \r\n      // this.REJECTEDArr = [];\r\n      this.REJECTEDArr.push(data);\r\n     }\r\n    this.cdr.markForCheck();\r\n  }\r\n\r\n  getProfileImage(corporateID){\r\n    this.apiService.getProfileDetails(corporateID)\r\n    .subscribe((data:any) => {\r\n      console.log(data);\r\n      console.log(data.profileImage); \r\n      this.searchable=false;\r\n      if(data.profileImage!=null){\r\n      let objectURL = 'data:image/jpeg;base64,' + data.profileImage.fileData;\r\n      this.searchable=true;\r\n      this.image = this.sanitizer.bypassSecurityTrustUrl(objectURL);\r\n      console.log(this.searchable,\"Searchable\");\r\n      }\r\n     \r\n    },(error:any) => {\r\n      console.log(error);\r\n    });\r\n  }\r\n  getcorporateIDData(valueToFilter) {\r\n    console.log('get kyc')\r\n    if (valueToFilter != '' && valueToFilter != undefined && valueToFilter != null) {\r\n      this.apiService.getKycTaskSummaryAll(valueToFilter, this.searchText)\r\n        .subscribe(data => {\r\n          console.log('resp data :: ', data);\r\n          this.cdr.markForCheck();\r\n            this.cdr.detectChanges();\r\n          if (data != null) {\r\n            var value = data[0].customerAdditionalInfo.kycStatus + 'Arr';\r\n            this[value].splice(0, 0, data[0])\r\n            this[value] = this[value].slice();\r\n            console.log('resp value :: ', this[value]);\r\n          } else {\r\n            this.noDataFound = true;\r\n          }\r\n\r\n        })\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this._searchSubject.unsubscribe();\r\n\r\n    this.ONGOINGArr = [];\r\n    this.APPROVEDArr = [];\r\n    this.REJECTEDArr = [];\r\n    this.BACKLOGArr = [];\r\n\r\n    this.BACKLOGPage = 0;\r\n    this.REJECTEDPage = 0;\r\n    this.APPROVEDPage = 0;\r\n    this.ONGOINGPage = 0;\r\n\r\n    this.BACKLOGTotalPages = 0;\r\n    this.REJECTEDTotalPages = 0;\r\n    this.APPROVEDTotalPages = 0;\r\n    this.ONGOINGTotalPages = 0;\r\n  }\r\n\r\n  /* @method :: to update the existing array with scroll api response */\r\n  async updateDataOnScroll(status:string, data: any) {\r\n    if(status == 'BACKLOG'){\r\n      const result = _.unionBy(this.BACKLOGArr, data, 'loanAccountId');\r\n      this.BACKLOGArr = result;\r\n     }else if(status == 'ONGOING'){\r\n      const result = _.unionBy(this.ONGOINGArr, data, 'loanAccountId');\r\n      this.ONGOINGArr = result;\r\n     }else if(status == 'APPROVED'){\r\n      const result = _.unionBy(this.APPROVEDArr, data, 'loanAccountId');\r\n      this.APPROVEDArr = result;\r\n     }else if(status == 'REJECTED'){ \r\n      const result = _.unionBy(this.REJECTEDArr, data, 'loanAccountId');\r\n      this.REJECTEDArr = result;\r\n     }\r\n    this.cdr.markForCheck();\r\n  }\r\n\r\n  \r\n  isNum(val){\r\n    return !isNaN(val)\r\n  }\r\n\r\n  isString(val){\r\n    return val;\r\n  }\r\n\r\n  getRandomColor(idx) {\r\n    var col0 = '#0d856b';\r\n    var col1 = '#d66f1b';\r\n    var col2 = '#9f52e7';\r\n    var col3 = '#e9318d';\r\n    var col4 = '#1175a3';\r\n    var col5 = '#e93131';\r\n    var col6 = '#2316d3';\r\n    var col7 = '#f557f5';\r\n    var col8 = '#d6c31b';\r\n    var col9 = '#40d61b';\r\n\r\n    if ((idx % 10) == 0) return col0;\r\n    if ((idx % 10) == 1) return col1;\r\n    if ((idx % 10) == 2) return col2;\r\n    if ((idx % 10) == 3) return col3;\r\n    if ((idx % 10) == 4) return col4;\r\n    if ((idx % 10) == 5) return col5;\r\n    if ((idx % 10) == 6) return col6;\r\n    if ((idx % 10) == 7) return col7;\r\n    if ((idx % 10) == 8) return col8;\r\n    if ((idx % 10) == 9) return col9;\r\n    return '#d86315';\r\n\r\n  }\r\n\r\n\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { isNumber } from 'highcharts';\r\n\r\n@Pipe({\r\n  name: 'customSearchFilter'\r\n})\r\nexport class CustomSearchFilterPipe implements PipeTransform {\r\n\r\n\r\n  transform(items: any[], keyword: any, properties: string[], radioButtonValue: any): any[] {\r\n\r\n    // console.log('radioButtonValue :: ', radioButtonValue);\r\n    if (!items) return [];\r\n    if (!keyword) return items;\r\n\r\n    if (items != undefined) {\r\n      return items.filter(item => {\r\n        var itemFound: Boolean;\r\n        for (let i = 0; i < properties.length; i++) {\r\n          if (item[properties[i]] != undefined) {\r\n            if (properties[i].includes(radioButtonValue)) {\r\n              // console.log('is present :: ',properties[i].includes(radioButtonValue))\r\n              if (isNumber(item[properties[i]])) {\r\n                 /* when value is number type */\r\n                let str = item[properties[i]].toString();\r\n                if (str.indexOf(keyword.toString()) !== -1) {\r\n                  itemFound = true;\r\n                  break;\r\n                }\r\n              } else {\r\n                /* when value is not a number type */\r\n                if (item[properties[i]].toString().toLowerCase().indexOf(keyword.toString().toLowerCase()) !== -1) {\r\n                  itemFound = true;\r\n                  break;\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n        return itemFound;\r\n      });\r\n    }\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, Inject, ChangeDetectorRef } from '@angular/core';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { AppLoaderService } from 'app/shared/services/app-loader/app-loader.service';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { TasksummaryService } from '../../tasksummary.service';\r\n\r\n@Component({\r\n  selector: 'app-loan-legal-opinion-updates',\r\n  templateUrl: './loan-legal-opinion-updates.component.html',\r\n  styleUrls: ['./loan-legal-opinion-updates.component.scss']\r\n})\r\nexport class LoanLegalOpinionUpdatesComponent implements OnInit {\r\n  loanAccountId: any;\r\n  loanaccountID: any;\r\n  loanLegalForm: FormGroup;\r\n  disbursementDetails: any;\r\n  showEditOption: boolean = false;\r\n  isChecked = true;\r\n  disabled = true;\r\n  disabledToggle = true;\r\n  legalDetails: any;\r\n  statusArr: any = ['BACKLOG', 'ONGOING', 'APPROVED', 'REJECTED']\r\n  arr: any = ['BACKLOG', 'ONGOINGArr', 'APPROVEDArr', 'REJECTEDArr']\r\n  BACKLOGArr: any = [];\r\n  ONGOINGArr: any = [];\r\n  REJECTEDArr: any = [];\r\n  APPROVEDArr: any = [];\r\n  \r\n  BACKLOGTotalPages: number = 0\r\n  ONGOINGTotalPages: number = 0\r\n  REJECTEDTotalPages: number = 0\r\n  APPROVEDTotalPages: number = 0\r\n\r\n  BACKLOGCount: number = 0\r\n  ONGOINGCount: number = 0\r\n  REJECTEDCount: number = 0\r\n  APPROVEDCount: number = 0\r\n\r\n  BACKLOGImage: any[] = [];\r\n  ONGOINGImage: any[] = [];\r\n  REJECTEDImage: any[] = [];\r\n  APPROVEDImage: any[] = [];\r\n\r\n  BACKLOGTotalRecords: number = 0;\r\n  ONGOINGTotalRecords: number = 0;\r\n  REJECTEDTotalRecords: number = 0;\r\n  APPROVEDTotalRecords: number = 0;\r\n\r\n  BACKLOGPage: number = 0;\r\n  ONGOINGPage: number = 0;\r\n  REJECTEDPage: number = 0;\r\n  APPROVEDPage: number = 0;\r\n  \r\n  constructor(private apiService: ApiService, @Inject(MAT_DIALOG_DATA) public data: any, private fb: FormBuilder,\r\n    private loader: AppLoaderService,   private taskSumService: TasksummaryService, private cdr: ChangeDetectorRef,\r\n    private ls: LocalStoreService, public dialogRef: MatDialogRef<LoanLegalOpinionUpdatesComponent>, private snack: MatSnackBar,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.loanaccountID = this.data.loanAccountId;\r\n    console.log('loanaccountID', this.loanaccountID)\r\n    this.buildLegalOpinionForm(this.data)\r\n    //this.gettingLegalOpinionDetail();\r\n  }\r\n  _keyPress(event: any) {\r\n    // console.log(\"key\",event);\r\n    const pattern = /[0-9]/;\r\n    let inputChar = String.fromCharCode(event.charCode);\r\n    console.log(\"inputChar\",inputChar);\r\n    inputChar=inputChar.toString();\r\n    console.log(\"inputChar1\",inputChar);\r\n    inputChar=inputChar\r\n    if (!pattern.test(inputChar)) {\r\n        event.preventDefault();\r\n    }\r\n   }\r\n  //buildDisbursementForm(data?, Response?: boolean)\r\n  buildLegalOpinionForm(data?){\r\n    console.log('item',data)\r\n   \r\n     \r\n    this.loanLegalForm= this.fb.group({\r\n        loanAccountId: [this.loanaccountID],\r\n        opinion:[data ? data?.loanLegalInfo?.opinion:''],\r\n        lawyerName: [data ? data?.loanLegalInfo?.lawyerName : ''],\r\n     // isDecisionFavorable: [data ? data?.loanLegalInfo?.isDecisionFavorable : this.isChecked],\r\n      isDecisionFavorable: [data ? data?.loanLegalInfo?.isDecisionFavorable : ''],\r\n        mktValOfAsset:[data ? data?.loanLegalInfo?.mktValOfAsset:''],\r\n        opinionDate: [data ? data?.loanLegalInfo?.opinionDate : ''],\r\n        validationDate:[data ? data?.loanLegalInfo?.validationDate:''],\r\n        description:[data ? data?.loanLegalInfo?.description:''],\r\n        assetAreaSize: [data ? data?.loanLegalInfo?.assetAreaSize : '']\r\n    });\r\n\r\n \r\n   }\r\n   gettingLegalOpinionDetail() {\r\n    this.loader.open();\r\n    this.apiService.gettingLegalOpinionDetails(this.loanaccountID)\r\n      .subscribe((resp: any) => {\r\n        // if(resp.opinion==\"Favourable\"){\r\n        //   this.isChecked=true;\r\n        // }\r\n        // else{\r\n        //   this.isChecked=false;\r\n        // }\r\n        this.loader.close();\r\n       console.log(resp);\r\n       \r\n      this.buildLegalOpinionForm(resp);;\r\n    }, (err: any) => {\r\n      this.loader.close();\r\n      \r\n    });\r\n   \r\n  }\r\n  toggle(event){\r\n    // let value = event.target.value;\r\n     console.log(\"value\",event);\r\n     if(event==\"Not Favourable\"){\r\n       this.disabled = false;\r\n       this.isChecked = false;\r\n       this.disabledToggle = false;\r\n \r\n     }\r\n     else if(event==\"Favourable\"){\r\n       this.disabled = true;\r\n       this.isChecked = true;\r\n       this.disabledToggle = true;\r\n     }\r\n     else{\r\n       this.isChecked = false;\r\n     }\r\n\r\n     \r\n \r\n   }\r\n  getDisbursementDetails() {\r\n \r\n    this.apiService.loanDisbursementFetchById(this.loanaccountID).subscribe((legalDetails) => {\r\n \r\n      this.legalDetails = legalDetails;\r\n      console.log(\"this.legalDetails::\", this.legalDetails);\r\n    \r\n\r\n      this.buildLegalOpinionForm(this.legalDetails);\r\n      this.loanLegalForm.value.opinion = this.legalDetails.opinion;\r\n      this.loanLegalForm.value.opinionDate = this.legalDetails.opinionDate;\r\n      this.loanLegalForm.value.validationDate = this.legalDetails.validationDate;\r\n      this.loanLegalForm.value.mktValOfAsset = this.legalDetails.mktValOfAsset;\r\n      this.loanLegalForm.value.lawyerName = this.legalDetails.lawyerName;\r\n      this.loanLegalForm.value.description = this.legalDetails.description;\r\n      this.loanLegalForm.value.isDecisionFavorable = this.legalDetails.isDecisionFavorable;\r\n       this.loanLegalForm.value.assetAreaSize = this.legalDetails.assetAreaSize;\r\n    }, (err: any) => {\r\n      this.loader.close();\r\n    });\r\n  }\r\n\r\n  async getDataOnLoad() {\r\n    for (let index = 0; index < this.statusArr.length; index++) {\r\n      const statusItem = this.statusArr[index];\r\n      this.fetchCustomerInfo(statusItem);\r\n    }\r\n\r\n  }\r\n\r\n   fetchCustomerInfo(status:string){\r\n   \r\n    this.taskSumService.getallLoanAccountData(status)\r\n            .subscribe((custResp:any) => {\r\n              console.log(\"Response\", custResp);\r\n              this.updateStatusResponse(status, custResp);\r\n            });\r\n  }\r\n\r\n  updateStatusResponse(status, data){\r\n    console.log(\"data\", data)\r\n    console.log(\"status\", status)\r\n      if (status == 'ONGOING') {\r\n      this.ONGOINGArr = data?.loanList;\r\n      this.ONGOINGTotalPages = data?.totalPages;\r\n      this.ONGOINGTotalRecords = data?.totalNoOfElements;\r\n    }\r\n \r\n\r\n    this.cdr.markForCheck();\r\n  }\r\n\r\n  goToClose(): void {\r\n    this.dialogRef.close();\r\n   \r\n    //  this.loader.open();\r\n   // this.getLoanDetails();\r\n    this.apiService.gettingLegalOpinionDetails(this.loanaccountID).subscribe((legalDetails: any) => {\r\n      console.log(\"All Account Service\", legalDetails);\r\n      this.legalDetails = legalDetails;\r\n      //this.buildformGroup(this.loanAccountDetails);\r\n      console.log(\"this.accountDetails\", this.legalDetails);\r\n      console.log('form',this.loanLegalForm.value)\r\n   });\r\n   \r\n  }\r\n  submitForm1(){\r\n    \r\n   \r\n\r\n    let payload={\r\n      // loanAccountId: this.showEditOption ? this.loanaccountID : null,\r\n      loanAccountId: this.data.loanAccountId,\r\n      description:this.loanLegalForm.value.description,\r\n      mktValOfAsset:this.loanLegalForm.value.mktValOfAsset,\r\n      opinion: this.loanLegalForm.value.opinion,  \r\n      opinionDate:this.loanLegalForm.value.opinionDate,\r\n      valuationDate:this.loanLegalForm.value.valuationDate,\r\n      lawyerName: this.loanLegalForm.value.lawyerName,\r\n      isDecisionFavorable: this.loanLegalForm.value.isDecisionFavorable,\r\n      assetAreaSize: this.loanLegalForm.value.assetAreaSize,\r\n      \r\n  \r\n  \r\n    }\r\n    console.log(\"payload\",payload)\r\n    this.apiService.saveLegalOpinion(payload).subscribe(data => {\r\n      console.log(\"data\",data.loanAccountId);\r\n      this.loanaccountID = this.data.loanAccountId;\r\n      console.log('loanaccountID', this.loanaccountID)\r\n   \r\n      this.assign(this.data.loanAccountId)\r\n      if (data === 200 || data !== null) {\r\n        let statusModel = {\r\n          loanAccountId: this.data.loanAccountId,\r\n          status: \"ONGOING\"\r\n        };\r\n        this.apiService.updateLoanDetailsStatus(statusModel).subscribe(data => {\r\n        });\r\n      //  sessionStorage.setItem('loanAccountId', data.loanAccountid);\r\n        let fundStatus = {\r\n          loanAccountid: this.data.loanAccountId\r\n          \r\n        };\r\n       \r\n\r\n        this.ls.setItem('fundByStatus', fundStatus);\r\n        this.ls.setItem('accountType', data.accountType);\r\n        this.ls.setItem('productName',data.businessProductName);\r\n\r\n        \r\n    this.loanaccountID = this.data.loanAccountId;\r\n    console.log(\"this.productaccountID\",this.loanaccountID);\r\n        this.snack.open('Data Updated!', 'OK', {\r\n          duration: 4000,\r\n          verticalPosition: 'top',\r\n          horizontalPosition: 'right'\r\n        });\r\n        this.getDataOnLoad();\r\n      }\r\n      if( data === 500){\r\n        this.snack.open('Not able to connect to server!', 'INTERNAL SERVER ERROR', {\r\n          duration: 4000,\r\n          verticalPosition: 'top',\r\n          horizontalPosition: 'right'\r\n        });\r\n        console.log(\"500 error\")\r\n      }\r\n      \r\n      this.goToClose();\r\n    })\r\n  }\r\n  assign(valueForaccId) {\r\n    this.apiService.setAccountId({\r\n      loanAccountId: valueForaccId\r\n    });\r\n    console.log(\"loan\", this.loanAccountId)\r\n  }\r\n\r\n}\r\n\r\n","<div >\r\n    <mat-dialog-content>\r\n      <div fxLayout=\"row\" class=\"contain\">\r\n        <mat-icon style=\"padding-left: 100%;\"class=\"backIcon\" (click)=\"goToClose()\">close</mat-icon>\r\n    </div>\r\n      <h1>Loan Legal Opinion Details</h1>\r\n      <form class=\"mt-32\" [formGroup]=\"loanLegalForm\">\r\n        <div fxLayout=\"row wrap\" fxLayout.lt-sm=\"column\" >\r\n          <div fxFlex=\"33.33\" class=\"pr-16\">\r\n            <mat-label>Opinion </mat-label>\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n              <mat-select name=\"opinion\" formControlName=\"opinion\" >\r\n                <mat-option value=\"Favorable\">Favorable</mat-option>\r\n                <mat-option value=\"Non Favorable\">Non Favorable </mat-option>\r\n              </mat-select>\r\n            </mat-form-field>\r\n          </div>\r\n    \r\n          <div fxFlex=\"33.33\" class=\"pr-16\">\r\n            <mat-label>Description</mat-label>\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                <input matInput name=\"description\" formControlName=\"description\"  \r\n                  />\r\n            </mat-form-field>\r\n          </div>\r\n          <div fxFlex=\"33.33\" class=\"pr-16\">\r\n            <mat-label>Asset Area Size</mat-label>\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                <input matInput name=\"assetAreaSize\" formControlName=\"assetAreaSize\"  \r\n                (keypress)=\"_keyPress($event)\" />\r\n            </mat-form-field>\r\n          </div>\r\n       \r\n          \r\n        </div>\r\n    \r\n        <div fxLayout=\"row wrap\">\r\n          \r\n          <div fxFlex=\"33.33\" class=\"pr-16\">\r\n            <mat-label>Lawyer Name</mat-label>\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n             <input matInput name=\"lawyerName\" formControlName=\"lawyerName\" >\r\n            </mat-form-field>\r\n          </div>\r\n          <div fxFlex=\"33.33\" class=\"pr-16\">\r\n            <mat-label>Market Value of Asset </mat-label>\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n              <input matInput name=\"mktValOfAsset\" formControlName=\"mktValOfAsset\"\r\n              (keypress)=\"_keyPress($event)\"\r\n              />\r\n            </mat-form-field>\r\n          </div>\r\n    \r\n          <div fxFlex=\"33.33\" class=\"pr-16\">\r\n            <mat-label>Opinion Date</mat-label>\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n              <input matInput name=\"opinionDate\" formControlName=\"opinionDate\"  \r\n              />\r\n            </mat-form-field>\r\n          </div>\r\n        </div>\r\n        <div fxLayout=\"row wrap\">\r\n          <div fxFlex=\"33.33\" class=\"pr-16\">\r\n            <mat-label>is Decision Favorable?</mat-label>\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n              \r\n              <!-- <mat-slide-toggle formControlName=\"isDecisionFavorable\" [(ngModel)]=\"disabled\"></mat-slide-toggle> -->\r\n              <input matInput name=\"valuationDate\" formControlName=\"isDecisionFavorable\"  \r\n              /> \r\n            </mat-form-field>\r\n          </div>\r\n\r\n          <div fxFlex=\"33.33\" class=\"pr-16\">\r\n            <mat-label>Valuation Date</mat-label>\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n               <input matInput name=\"valuationDate\" formControlName=\"valuationDate\" (keypress)=\"_keyPress($event)\"\r\n              /> \r\n            \r\n            </mat-form-field>\r\n          \r\n          </div>\r\n          <div fxFlex=\"33.33\" class=\"pr-16\">\r\n            <!-- <mat-label>Phone Number</mat-label>\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n              <input matInput name=\"mobileNumber\" formControlName=\"mobileNumber\"  \r\n              maxlength=\"10\"\r\n              (keypress)=_keyPress($event) />\r\n            </mat-form-field> -->\r\n          </div>\r\n    \r\n         \r\n        </div>\r\n  \r\n       \r\n       \r\n      </form>\r\n    </mat-dialog-content>\r\n    <mat-dialog-actions align=\"end\">\r\n      <button mat-button (click)=\"submitForm1()\">\r\n        Update\r\n      </button>\r\n      <button mat-button (click)=\"goToClose()\">Close</button>\r\n    </mat-dialog-actions>\r\n</div>","\r\nimport { ChangeDetectorRef, Component, Inject, Input, OnInit, ViewChild, ViewEncapsulation } from '@angular/core';\r\nimport { FormArray, FormBuilder, FormGroup, NgForm, Validators } from '@angular/forms';\r\nimport { MatTabChangeEvent } from '@angular/material/tabs';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { DialogService } from 'app/shared/services/dialogs/dialog.service';\r\nimport { DOCUMENT } from '@angular/common';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { Router } from '@angular/router';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { TasksummaryService } from '../tasksummary.service';\r\nimport * as moment from 'moment';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { UpdateCorporateBasicInfoComponent } from './update-corporate-basic-info/update-corporate-basic-info.component';\r\nimport { UpdateDirectorDetailsComponent } from './update-director-details/update-director-details.component';\r\nimport { UpdateContactInfoComponent } from '../cust-on-boarding-approver/update-contact-info/update-contact-info.component';\r\nimport { UpdateCorporateIdentityComponent } from './update-corporate-identity/update-corporate-identity.component';\r\nimport { UpdateCorporateAddititonalInfoComponent } from './update-corporate-addititonal-info/update-corporate-addititonal-info.component';\r\nimport { UpdateCorporateContactInfoComponent } from './update-corporate-contact-info/update-corporate-contact-info.component';\r\n\r\n@Component({\r\n  selector: 'app-corporate-approver',\r\n  templateUrl: './corporate-approver.component.html',\r\n  styleUrls: ['./corporate-approver.component.scss'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class CorporateApproverComponent implements OnInit {\r\n  @Input(\"initiatedArr\") initiatedArr: any;\r\n\r\n  // custOnBoardingApprovet:CustOnBoardingApprover;\r\n  selectedIndex: number = 0;\r\n  imgUrl: string | ArrayBuffer;\r\n  profilePicture: any;\r\n  proofDocForm: FormGroup;\r\n  userAddressForm: FormGroup;\r\n  otherDocForm: FormGroup;\r\n  proofDoc_array: FormArray;\r\n  otherDoc_array: FormArray;\r\n  userAddress_array: FormArray;\r\n  directorsInfo_array: FormArray;\r\n  addNewProof: boolean = false;\r\n  arrayPrefix: any[] = [];\r\n  arrayGender: any[] = [];\r\n  arrayMaritalStatus: any[] = [];\r\n  arrayCountry: any[] = [];\r\n  arrayResidence: any[] = [];\r\n  arrayDocumentType: any[] = [];\r\n  arrayEmploymentType: any[] = [];\r\n  arrayEmployerName: any[] = [];\r\n  otherDocumentArray: any[] = [];\r\n  proofDocumentArray: any[] = [];\r\n  accountId: any;\r\n  primaryInfo: any;\r\n\r\n  @ViewChild('ncForm') ncForm: NgForm;\r\n  // image: string | ArrayBuffer;\r\n  image: Object;\r\n  custIdProofs_array: any;\r\n  signatureDetails_array: any;\r\n  status: any;\r\n  rejectedStatus: boolean;\r\n  approvedStatus: boolean;\r\n  statusUpdate: any;\r\n  document_type: string;\r\n  custOtherDoc_array: any;\r\n  custDoc_array:any;\r\n  corporateId: any;\r\n  documentName: any;\r\n  customerColorCode: any;\r\n  phoneNum: any;\r\n  emailID: any;\r\n  errorStatus: any;\r\n  imageUrl: any;\r\n  loading: boolean= true;\r\n  noOFSigns: any;\r\n  newImageurl: any;\r\n  editScreen: boolean;\r\n  isOnGoing : string = \"\";\r\n\r\n  constructor(private tasSumService: TasksummaryService,\r\n    public cdr: ChangeDetectorRef,private router:Router,\r\n    private ls: LocalStoreService,\r\n    private apiService:ApiService,\r\n    public dialogRef: MatDialogRef<CorporateApproverComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public dataResponse: any,private sanitizer: DomSanitizer,\r\n    private snack: MatSnackBar,\r\n    private dialog: MatDialog\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n    setTimeout(() => {\r\n      this.loading = true;\r\n      this.corporateId=this.dataResponse.dataResp.corporateId;\r\n      this.ls.setItem('corporateId',this.corporateId\r\n      )\r\n      this.custDoc_array=this.dataResponse.dataResp.corporateDocs;\r\n      \r\n     // this.getCustomerDocumentsDetails(this.corporateId);\r\n      this.getCustomerDocumentsDetails1(this.corporateId);\r\n    // this.phoneNum = this.dataResponse.dataResp.phoneNumber;\r\n    // this.emailID = this.dataResponse.dataResp.primaryEmailAdress;\r\n    this.phoneNum = this.dataResponse.dataResp.category;\r\n    this.emailID = this.dataResponse.dataResp.companyName;\r\n    \r\n    this.customerColorCode=localStorage.getItem('CustomerColorCode');\r\n    this.apiService.getCoropratedetails(this.corporateId)\r\n    .subscribe((data:any) => {\r\n      this.imageUrl =  data.profileImage;\r\n    });\r\n   \r\n    this.status = this.dataResponse.dataResp.corporateStatus;\r\n    this.errorStatus=this.dataResponse.dataResp.custStatus;\r\n    // this.userAddress_array = this.dataResponse.dataResp.corporateAddress;\r\n    this.userAddress_array = this.dataResponse.dataResp.customerInfo[0].userAddress;\r\n    this.custIdProofs_array = this.dataResponse.dataResp.custIdProofs;\r\n    this.directorsInfo_array = this.dataResponse.dataResp.customerInfo\r\n    console.log(\"result::\",this.custIdProofs_array);\r\n    console.log(\"status::\",this.status)\r\n    if (this.status === 'REJECTED') {\r\n      this.approvedStatus = true;\r\n      this.rejectedStatus = true;\r\n      this.editScreen=false;\r\n    } else if (this.status === 'APPROVED') {\r\n      this.approvedStatus = true;\r\n      this.rejectedStatus = true;\r\n      this.editScreen=true;\r\n    } else if (this.status === 'UNDER_PROCESS') {\r\n      this.approvedStatus = true;\r\n      this.rejectedStatus = false;\r\n      this.isOnGoing = this.status;\r\n      this.editScreen=false;\r\n    } else if (this.status === 'INITIATED') {\r\n      this.approvedStatus = false;\r\n      this.rejectedStatus = false;\r\n      this.editScreen=false;\r\n    }\r\n    // localStorage.setItem('kycStatus',this.customerDetails[0].customerAdditionalInfo.kycStatus);\r\n    // console.log(this.dataResponse.dataResp.corporateId);\r\n    this.getProfileImage(this.dataResponse.dataResp.corporateId);\r\n    // this.fetchSignatureDetails(this.dataResponse.dataResp.corporateId);\r\n    },5000);\r\n  }\r\n  goToCorporate(){\r\n    console.log(\"Navigating to edit screen\");\r\n    this.router.navigateByUrl('/onboardingCorporate/corporate');\r\n    console.log(this.dataResponse);\r\n    this.ls.setItem('EDIT-CORPORATEID', this.dataResponse.dataResp.corporateId);\r\n  //  console.log(this.ls.getItem('EDIT-KYCDETAILS'));\r\n\r\n    // const navigationExtras: NavigationExtras = {\r\n    //   queryParams: {\r\n    //     // 'id': this.modifyUserObject.id,\r\n    //     kyc_Id:this.dataResponse.dataResp.kycReference,\r\n       \r\n    //   },\r\n    // };\r\n\r\n    // this.apiService.sendNavParam(navigationExtras);\r\n    this.dialogRef.close({\r\n      message: 'Confirm',\r\n   });\r\n \r\n  }\r\n  getCustomerDocumentsDetails(corporateId: string) {\r\n    this.document_type= \"3\";\r\n    this.apiService.getCustomerDocuments(corporateId,this.document_type).subscribe((result) => {\r\n      this.loading=false;\r\n      this.custOtherDoc_array = result;\r\n      if(result != null){\r\n      this.documentName = this.custOtherDoc_array[0].fileName;\r\n      // console.log(\"custOtherDoc_array::\",this.custOtherDoc_array)\r\n    }\r\n    });\r\n  }\r\n   \r\n  getCustomerDocumentsDetails1(corporateId: string) {\r\n    this.document_type= \"2\";\r\n    this.apiService.getCustomerDocuments(corporateId,this.document_type).subscribe((result) => {\r\n      this.loading=false;\r\n      this.custOtherDoc_array = result;\r\n      if(result != null){\r\n      this.documentName = this.custOtherDoc_array[0].fileName;\r\n      // console.log(\"custOtherDoc_array::\",this.custOtherDoc_array)\r\n    }\r\n    });\r\n  }\r\n     \r\n\r\n  \r\n  updateApplicationStatus(formData, status, isEdit?) {\r\n    formData.dataResp.corporateStatus = status;\r\n    this.statusUpdate=status;\r\n    this.apiService.updateCorporateSatatus(formData.dataResp.corporateId, status)\r\n      .subscribe(data => {\r\n        if(data != null ){\r\n            this.cdr.markForCheck();\r\n            this.cdr.detectChanges();\r\n            if(isEdit != true){\r\n            this.dialogRef.close({\r\n              message: 'Confirm',\r\n              recordStatus:status,\r\n              data\r\n            });\r\n          }\r\n          this.snack.open(`${status} `, 'OK', {\r\n            duration: 4000,\r\n            verticalPosition: 'top',\r\n            horizontalPosition: 'right'\r\n          });\r\n        }\r\n      },error=>{\r\n        console.log('error resp :: ',error);\r\n        this.errorStatus=status;\r\n        this.snack.open(`${error.error.message} `, 'OK', {\r\n          duration: 4000,\r\n          verticalPosition: 'top',\r\n          horizontalPosition: 'right'\r\n        });\r\n      });\r\n  }\r\n\r\n  close(data) {\r\n    // this.dialogRef.close();\r\n    data.recordStatus=this.statusUpdate\r\n    this.dialogRef.close({\r\n      message: 'Confirm',\r\n      data,\r\n      recordStatus:this.status\r\n   });\r\n  //  console.log(\"conf data\", data);\r\n  }\r\n  getProfileImage(corporateId){\r\n    this.apiService.getCoropratedetails(corporateId)\r\n    .subscribe((data:any) => {\r\n    console.log(data);      \r\n      if(data.profileImage!=null){\r\n        //let objectURL = 'data:image/jpeg;base64,' + data.profileImage.fileData;\r\n        let objectURL = data.profileImage.fileUrl;\r\n        this.image = this.sanitizer.bypassSecurityTrustUrl(objectURL)\r\n        }\r\n      // console.log(this.image,\"Profile Data\");\r\n      // console.log(this.profileData.customerName,\"Profile Data\");\r\n      // const blob = base64StringToBlob(this.profileData.fileData, contentType);\r\n      // console.log(blob);\r\n    },(error:any) => {\r\n      // console.log(error);\r\n    });\r\n  }\r\n  // fetchSignatureDetails(corporateId){\r\n  //   console.log(\"inside fetchSignatureDetails method\");\r\n  //   this.apiService.getSignatureDocuments(corporateId)\r\n  //   .subscribe((data:any) => {\r\n  //      console.log(data);\r\n  //       this.noOFSigns = data[0].noOfSignatures;\r\n  //      this.signatureDetails_array = data;\r\n  //   },(error:any) => {\r\n  //      console.log(error);\r\n  //   });\r\n  // }\r\n\r\nopenEditScreen(screen,data){\r\n  this.status = 'UNDER_PROCESS'\r\n  this.updateApplicationStatus(this.dataResponse, \"UNDER_PROCESS\",true)\r\n  const dialogRef = this.dialog.open(screen, {\r\n    panelClass: 'full-width-dialog',\r\n    data: data,\r\n    width: '80%',\r\n    disableClose: true\r\n  });\r\n  dialogRef.afterClosed().subscribe((submit) => {\r\n    console.log(submit);\r\n    this.status = submit.status;\r\n    if (submit.status == 'INITIATED') {\r\n      this.status = 'INITIATED'\r\n      this.updateApplicationStatus(this.dataResponse, \"INITIATED\",true)\r\n      Object.assign(data,submit.resp)\r\n    }\r\n  })\r\n  \r\n}\r\neditBasicInfo(){\r\nthis.openEditScreen(UpdateCorporateBasicInfoComponent,this.dataResponse.dataResp)\r\n}\r\neditDirectorDetails(){\r\nthis.openEditScreen(UpdateDirectorDetailsComponent,this.directorsInfo_array)\r\n}\r\neditContactInfo(){\r\nthis.openEditScreen(UpdateCorporateContactInfoComponent,this.userAddress_array)\r\n}\r\neditProofOfIdentity(){\r\nthis.openEditScreen(UpdateCorporateIdentityComponent,this.dataResponse.dataResp)\r\n}\r\neditOtherInfo(){\r\nthis.openEditScreen(UpdateCorporateAddititonalInfoComponent,this.dataResponse.dataResp)\r\n}\r\n}","<form>\r\n\r\n    <div fxLayoutAlign=\"center\">\r\n        <mat-spinner *ngIf=\"loading\"></mat-spinner>\r\n     </div>\r\n\r\n    <div fxLayout=\"column wrap\">\r\n        <div class=\"content\">\r\n            <div fxLayout=\"row\" fxLayoutAlign=\"end\">\r\n                <div>\r\n                    <mat-icon class=\"closeIcon\" (click)=\"close(dataResponse)\">\r\n                        close</mat-icon>\r\n                </div>\r\n            </div>\r\n            <!--img row-->\r\n            <div class=\"main\" *ngIf=\"!loading\">\r\n                <!-- <div *ngIf=\"errorStatus == 'REJECTED' || errorStatus == 'APPROVED'\">\r\n                    <h3 style=\"text-align: center; color: red; font-weight: 600;\">Record Already {{errorStatus}}</h3>\r\n                 </div> -->\r\n                <div fxLayout=\"row\" class='imgdiv'>\r\n                    <!-- <div fxLayout=\"row\"> <img class='appimg' src='assets\\images\\personImg.png'></div> -->\r\n                    <div mat-card-avatar>\r\n                        <div fxLayout=\"row\" class=\"defaultImage\" *ngIf=\"imageUrl=='not_available'\"\r\n                            [style.background]=\"customerColorCode\">\r\n                            <h1 class=\"imageText\">{{dataResponse?.dataResp?.companyName  | uppercase |\r\n                                slice:0:1}} </h1>\r\n                        </div>\r\n\r\n                        <div fxLayout=\"row\" class=\"defaultImage\" *ngIf=\"imageUrl!='not_available'\">\r\n                            <img style=\"width: 120px; height: 120px; border-radius: 50%;\" [src]=\"imageUrl\" alt=\"\"\r\n                                *ngIf=\"image!=null\">\r\n                        </div>\r\n                    </div>\r\n                </div><br><br><br><br>\r\n                <div fxLayout=\"row\" class=\"apprdiv\">\r\n                    <h2>{{dataResponse?.dataResp?.companyName}}&nbsp;\r\n                    </h2>\r\n                </div>\r\n                <!-- <div fxLayout=\"row\" fxLayoutAlign=\"center\"><h2>{{dataResponse.dataResp.firstName}} {{dataResponse.dataResp.lastName}}</h2></div> -->\r\n                <!-- end of img row-->\r\n                <!--stage 1 starts-->\r\n\r\n                <div fxLayout=\"row\" class=\"flex-container\" *ngIf=!loading>\r\n                    <div fxFlex=\"15\">\r\n                        <div class='num'>1</div>\r\n                        <div class='bordnum'>&nbsp;</div>\r\n                    </div>\r\n                    <mat-card label=\"Basic Information\" style=\"border-radius: 0px; width: 800px;\">\r\n\r\n                        <div fxLayout=\"column\" class=\"full-width\" fxLayoutAlign=\"space-around start\">\r\n                            <div class=\"full-width\" style=\"padding: 1rem 1rem;\">\r\n                                <div fxLayout=\"row\" fxLayoutAlign=\"space-between end\">\r\n                                    <h2 style=\"font-size: 18px;\">Basic Information</h2>\r\n                                    <span>\r\n                                    <mat-icon class=\"editbtn\" [hidden]=\"editScreen\" (click)=\"editBasicInfo()\">edit</mat-icon>  \r\n                                    </span>\r\n                                </div>\r\n                                <mat-divider class=\"divider1\">\r\n                                </mat-divider>\r\n                            </div>\r\n                            <div fxLayout=\"row wrap\" style=\"padding: 0.5rem 0;\" class=\"full-width\">\r\n                            <div fxFlex=\"100%\" fxFlex.xs=\"100%\">\r\n                            <div class=\"mat-elevation-z0\" style=\"border: 1px solid #f5f5f5;padding: 16px; width: 750px;\">       \r\n                            <div class=\"full-width\">\r\n                                <div fxLayout=\"row wrap\" class=\"full-width\">\r\n\r\n                                    <div fxFlex=\"100%\" fxFlex.xs=\"100%\" style=\"padding-bottom: 1rem;\" class=\"full-width\">\r\n                                        <div fxLayout=\"row wrap\" style=\"padding: 0.5rem;\" class=\"full-width\">\r\n                                            <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                                <mat-hint class=\"hint1\">\r\n                                                    Corporate ID\r\n                                                </mat-hint>\r\n                                                <mat-card class=\"mat1\">\r\n                                                    <div>{{dataResponse.dataResp.corporateId}}</div>\r\n                                                </mat-card>\r\n                                            </div> \r\n                                            <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                                <mat-hint class=\"hint1\">\r\n                                                    Company Name\r\n                                                </mat-hint>\r\n                                                <mat-card class=\"mat1\">\r\n                                                    <div>{{dataResponse.dataResp.companyName}}</div>\r\n                                                </mat-card>\r\n                                            </div>\r\n                                            <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                                <mat-hint class=\"hint1\">\r\n                                                    Category\r\n                                                </mat-hint>\r\n                                                <mat-card class=\"mat1\">\r\n                                                    <div>{{dataResponse.dataResp.category}}</div>\r\n                                                </mat-card>\r\n                                            </div> \r\n                                        </div>\r\n\r\n                                        <div fxLayout=\"row wrap\" style=\"padding: 0.5rem;\" class=\"full-width\">\r\n\r\n                                            <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                                <mat-hint class=\"hint1\">\r\n                                                    Country\r\n                                                </mat-hint>\r\n                                                <mat-card class=\"mat1\">\r\n                                                    <div>{{dataResponse.dataResp.country}}</div>\r\n                                                </mat-card>\r\n                                            </div>\r\n                                            <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                                <mat-hint class=\"hint1\">\r\n                                                    Corporate Status\r\n                                                </mat-hint>\r\n                                                <mat-card class=\"mat1\">\r\n                                                    <div>{{dataResponse.dataResp.corporateStatus}}</div>\r\n                                                </mat-card>\r\n                                            </div>\r\n                                            \r\n                                        </div>\r\n\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            </div>\r\n                            </div>\r\n                            </div>\r\n                        </div>\r\n                    </mat-card>\r\n                </div>\r\n\r\n                <!-- end of Stage-1 -->\r\n\r\n<!-- stage-2 Starts -->\r\n\r\n<div fxLayout=\"row\" class=\"flex-container\" *ngIf=!loading>\r\n    <div fxFlex=\"15\">\r\n        <div class='num'>2</div>\r\n        <div class='bordnum'>&nbsp;</div>\r\n    </div>\r\n    <mat-card label=\"Director Details\" style=\"border-radius: 0px;width: 800px;\">\r\n\r\n        <div class=\"full-width\" style=\"padding: 1rem;\">\r\n            <div style=\"padding-bottom: 1rem\">\r\n                <div fxLayout=\"row\" fxLayoutAlign=\"space-between end\">\r\n                    <h2 style=\"font-size: 18px;\">Director Details</h2>\r\n                    <span>\r\n                    <mat-icon class=\"editbtn\" [hidden]=\"editScreen\" (click)=\"editDirectorDetails()\">edit</mat-icon>  \r\n                    </span>\r\n                </div>\r\n                <mat-divider class=\"divider1\">\r\n                </mat-divider>\r\n            </div>\r\n          \r\n            <div fxLayout=\"row wrap\" *ngFor=\"let items of directorsInfo_array\" style=\"padding: 0.5rem 0;\" class=\"full-width\">\r\n                <div fxFlex=\"100%\" fxFlex.xs=\"100%\">\r\n                <div class=\"mat-elevation-z0\" style=\"border: 1px solid #f5f5f5;padding: 16px; width: 750px;\">       \r\n                <div class=\"full-width\">\r\n                    <div fxLayout=\"row wrap\" class=\"full-width\">\r\n\r\n                        <div fxFlex=\"100%\" fxFlex.xs=\"100%\" style=\"padding-bottom: 1rem;\" class=\"full-width\">\r\n                            <div fxLayout=\"row wrap\" style=\"padding: 0.5rem;\" class=\"full-width\">\r\n                                <div *ngIf=\"dataResponse.dataResp.middleName\" fxFlex=\"40%\" fxFlex.xs=\"100%\">\r\n                                    <mat-hint class=\"hint1\">\r\n                                        No Of Directors\r\n\r\n                                    </mat-hint>\r\n                                    <mat-card class=\"mat1\">\r\n                                        <div>{{dataResponse.dataResp.noOfDirectors}}</div>\r\n                                    </mat-card>\r\n                                </div>\r\n                                <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                    <mat-hint class=\"hint1\">\r\n                                        CIF Number\r\n                                    </mat-hint>\r\n                                    <mat-card class=\"mat1\">\r\n                                        <div>{{items.cifNumber}}</div>\r\n                                    </mat-card>\r\n                                </div> \r\n                                <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                    <mat-hint class=\"hint1\">\r\n                                        Customer ID\r\n                                    </mat-hint>\r\n                                    <mat-card class=\"mat1\">\r\n                                        <div>{{items.custStatus}}</div>\r\n                                    </mat-card>\r\n                                </div> \r\n                            </div>\r\n\r\n                            <div fxLayout=\"row wrap\" style=\"padding: 0.5rem;\" class=\"full-width\">\r\n                                <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                    <mat-hint class=\"hint1\">\r\n                                        Prefix*\r\n                                    </mat-hint>\r\n                                    <mat-card class=\"mat1\">\r\n                                        <div>{{items.prefix}}</div>\r\n                                    </mat-card>\r\n                                </div>\r\n\r\n                                <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                    <mat-hint class=\"hint1\">\r\n                                        First Name*\r\n                                    </mat-hint>\r\n                                    <mat-card class=\"mat1\">\r\n                                        <div>{{items.firstName}}</div>\r\n                                    </mat-card>\r\n                                </div>\r\n\r\n                                <div *ngIf=\"dataResponse.dataResp.middleName\" fxFlex=\"40%\" fxFlex.xs=\"100%\">\r\n                                    <mat-hint class=\"hint1\">\r\n                                        Middle Name\r\n                                    </mat-hint>\r\n                                    <mat-card class=\"mat1\">\r\n                                        <div>{{items.middleName}}</div>\r\n                                    </mat-card>\r\n                                </div>\r\n\r\n                                <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                    <mat-hint class=\"hint1\">\r\n                                        Last Name*\r\n                                    </mat-hint>\r\n                                    <mat-card class=\"mat1\">\r\n                                        <div>{{items.lastName}}</div>\r\n                                    </mat-card>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div fxLayout=\"row wrap\" style=\"padding: 0.5rem;\" class=\"full-width\">\r\n                                <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                    <mat-hint class=\"hint1\">\r\n                                        Gender*\r\n                                    </mat-hint>\r\n                                    <mat-card class=\"mat1\">\r\n                                        <div>{{items.gender}}</div>\r\n                                    </mat-card>\r\n                                </div>\r\n\r\n                                <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                    <mat-hint class=\"hint1\">\r\n                                        Date of Birth*\r\n                                    </mat-hint>\r\n                                    <mat-card class=\"mat1\">\r\n                                        <div>{{items.dateOfBirth}}</div>\r\n                                    </mat-card>\r\n                                </div>\r\n\r\n                                <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                    <mat-hint class=\"hint1\">\r\n                                        Place of Birth*\r\n                                    </mat-hint>\r\n                                    <mat-card class=\"mat1\">\r\n                                        <div>{{items.placeOfBirth}}</div>\r\n                                    </mat-card>\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                            <div fxLayout=\"row wrap\" style=\"padding: 0.5rem 0;\" class=\"full-width\">\r\n\r\n                                    <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                        <mat-hint class=\"hint1\">\r\n                                            Residence type*</mat-hint>\r\n                                        <mat-card class=\"mat1\">\r\n                                            <div>{{items.residenceStatus}}</div>\r\n                                        </mat-card>\r\n                                    </div>\r\n\r\n                                    <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                        <mat-hint class=\"hint1\">\r\n                                            Citizenship*</mat-hint>\r\n                                        <mat-card class=\"mat1\">\r\n                                            <div>{{dataResponse.dataResp.customerInfo[0].citizenship}}</div>\r\n                                        </mat-card>\r\n                                    </div>\r\n\r\n                                    <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                        <mat-hint class=\"hint1\">\r\n                                            Country of Residence*</mat-hint>\r\n                                        <mat-card class=\"mat1\">\r\n                                            <div>{{dataResponse.dataResp.customerInfo[0].countryOfResidence}}</div>\r\n                                        </mat-card>\r\n                                    </div>\r\n\r\n                                    <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                        <mat-hint class=\"hint1\">\r\n                                            ID Type*</mat-hint>\r\n                                        <mat-card class=\"mat1\">\r\n                                            <div>{{dataResponse.dataResp.customerInfo[0].custIdProofs[0].idType}}</div>\r\n                                        </mat-card>\r\n                                    </div>\r\n\r\n                                    <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                        <mat-hint class=\"hint1\">\r\n                                            ID Number*</mat-hint>\r\n                                        <mat-card class=\"mat1\">\r\n                                            <div>{{dataResponse.dataResp.customerInfo[0].custIdProofs[0].idNumber}}</div>\r\n                                        </mat-card>\r\n                                    </div>\r\n                            </div>\r\n\r\n                            <div fxLayout=\"row wrap\"  class=\"full-width\">\r\n                                <!-- <div fxFlex=\"37%\" fxFlex.xs=\"50%\" style=\"padding: 0.5rem 0.5rem;\">\r\n                            \r\n                                </div> -->\r\n                                <div fxFlex=\"40%\" fxFlex.xs=\"50%\" style=\"padding: 0.5rem 0.5rem;\">\r\n                                <h1 style=\"font-size: 16px;\">Communication Address</h1>\r\n                            </div>\r\n                            </div>\r\n                            <hr class=\"margintop\">\r\n                            <div fxLayout=\"row wrap\" style=\"padding: 0.5rem 0;\" class=\"full-width\">\r\n                                <div fxFlex=\"50%\" fxFlex.xs=\"100%\">\r\n                                    <mat-hint class=\"hint1\">\r\n                                        Address Line 1*\r\n                                    </mat-hint>\r\n                                    <mat-card class=\"mat1\">\r\n                                        <div>{{dataResponse.dataResp.customerInfo[0].userAddress[0].address1}}</div>\r\n                                    </mat-card>\r\n                                </div>\r\n                                <div fxFlex=\"50%\" fxFlex.xs=\"100%\">\r\n                                    <mat-hint class=\"hint1\">\r\n                                        Address Line 2*\r\n                                    </mat-hint>\r\n                                    <mat-card class=\"mat1\">\r\n                                        <div>{{dataResponse.dataResp.customerInfo[0].userAddress[0].address2}}</div>\r\n                                    </mat-card>\r\n                                </div>\r\n                            </div>\r\n                            <div fxLayout=\"row wrap\" style=\"padding: 0.5rem 0;\" class=\"full-width\">\r\n                            <div fxFlex=\"25%\" fxFlex.xs=\"100%\">\r\n                                <mat-hint class=\"hint1\">\r\n                                    Country*\r\n                                </mat-hint>\r\n                                <mat-card class=\"mat1\">\r\n                                    <div>{{dataResponse.dataResp.customerInfo[0].userAddress[0].country}}</div>\r\n                                </mat-card>\r\n                            </div>\r\n                            <div fxFlex=\"25%\" fxFlex.xs=\"100%\">\r\n                                <mat-hint class=\"hint1\">\r\n                                    State*\r\n                                </mat-hint>\r\n                                <mat-card class=\"mat1\">\r\n                                    <div>{{dataResponse.dataResp.customerInfo[0].userAddress[0].state}}</div>\r\n                                </mat-card>\r\n                            </div>\r\n                                <div fxFlex=\"25%\" fxFlex.xs=\"100%\">\r\n                                    <mat-hint class=\"hint1\">\r\n                                        City*\r\n                                    </mat-hint>\r\n                                    <mat-card class=\"mat1\">\r\n                                        <div>{{dataResponse.dataResp.customerInfo[0].userAddress[0].city}}</div>\r\n                                    </mat-card>\r\n                                </div>\r\n                                <div fxFlex=\"25%\" fxFlex.xs=\"100%\">\r\n                                    <mat-hint class=\"hint1\">\r\n                                        Zipcode*\r\n                                    </mat-hint>\r\n                                    <mat-card class=\"mat1\">\r\n                                        <div>{{dataResponse.dataResp.customerInfo[0].userAddress[0].zipCode}}</div>\r\n                                    </mat-card>\r\n                                </div>\r\n                            </div>\r\n                            </div>\r\n                            <div fxLayout=\"row wrap\"  class=\"full-width\">\r\n                                <!-- <div fxFlex=\"39%\" fxFlex.xs=\"50%\" style=\"padding: 0.5rem 0.5rem;\">\r\n                            \r\n                                </div> -->\r\n                                <div fxFlex=\"40%\" fxFlex.xs=\"50%\" style=\"padding: 0.5rem 0.5rem;\">\r\n                                <h1 style=\"font-size: 16px;\">Contact Information</h1>\r\n                            </div>\r\n                            </div>\r\n                            <hr class=\"margintop\">\r\n                            \r\n                          \r\n                        <div fxLayout=\"row wrap\" style=\"padding: 0.5rem 0;\" class=\"full-width\">\r\n                            <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                <mat-hint class=\"hint1\">\r\n                                    Mobile Number*\r\n                                </mat-hint>\r\n                                <mat-card class=\"mat1\">\r\n                                    <div>{{dataResponse.dataResp.customerInfo[0].phoneNumber}}</div>\r\n                                </mat-card>\r\n                            </div>\r\n\r\n                            <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                <mat-hint class=\"hint1\">\r\n                                    Landline Number*\r\n                                </mat-hint>\r\n                                <mat-card class=\"mat1\">\r\n                                    <div>{{dataResponse.dataResp.customerInfo[0].landlineNumber}}</div>\r\n                                </mat-card>\r\n                            </div>\r\n\r\n                            <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                <mat-hint class=\"hint1\">\r\n                                    Email*\r\n                                </mat-hint>\r\n                                <mat-card class=\"mat1\">\r\n                                    <div>{{dataResponse.dataResp.customerInfo[0].primaryEmailAdress}}</div>\r\n                                </mat-card>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div fxLayout=\"row wrap\" style=\"padding: 0.5rem 0;\" class=\"full-width\">\r\n                            <!-- <div fxFlex=\"37%\" fxFlex.xs=\"50%\" style=\"padding: 0.5rem 0.5rem;\">\r\n                        \r\n                            </div> -->\r\n                            <div fxFlex=\"40%\" fxFlex.xs=\"50%\" >\r\n                            <h1 style=\"font-size: 16px;\">Additional Tax ID Details</h1>\r\n                        </div>\r\n                        </div>\r\n                        <hr class=\"margintop\">\r\n                        \r\n                        <div fxLayout=\"row wrap\" style=\"padding: 0.5rem 0;\" class=\"full-width\">\r\n                            <div fxFlex=\"50%\" fxFlex.xs=\"100%\">\r\n                                <mat-hint class=\"hint1\">\r\n                                    Tax ID*\r\n                                </mat-hint>\r\n                                <mat-card class=\"mat1\">\r\n                                    <div>{{dataResponse.dataResp.customerInfo[0].custTaxInfo[0].taxId}}</div>\r\n                                </mat-card>\r\n                            </div>\r\n                            <div fxFlex=\"50%\" fxFlex.xs=\"100%\">\r\n                                <mat-hint class=\"hint1\">\r\n                                    Country of Issue*\r\n                                </mat-hint>\r\n                                <mat-card class=\"mat1\">\r\n                                    <div>{{dataResponse.dataResp.customerInfo[0].custTaxInfo[0].countryOfIssue}}</div>\r\n                                </mat-card>\r\n                            </div>\r\n                        </div>\r\n                     </div>\r\n                    </div>\r\n                </div>\r\n\r\n                </div>\r\n                </div>\r\n                </div>\r\n        \r\n    </mat-card>\r\n</div>\r\n\r\n<!-- end of stage 2 -->\r\n\r\n                <!-- Stage-3 Starts -->\r\n                <div fxLayout=\"row\" class=\"flex-container\" *ngIf=!loading>\r\n                    <div fxFlex=\"15\">\r\n                        <div class='num'>3</div>\r\n                        <div class='bordnum'>&nbsp;</div>\r\n                    </div>\r\n                    <mat-card label=\"Contact Information\" style=\"border-radius: 0px;width: 800px;\">\r\n\r\n                        <div fxLayout=\"column\" class=\"full-width\" fxLayoutAlign=\"space-around start\">\r\n                        <div class=\"full-width\" style=\"padding: 1rem;\">\r\n                            <div style=\"padding-bottom: 1rem\">\r\n                                <div fxLayout=\"row\" fxLayoutAlign=\"space-between end\">\r\n                                    <h2 style=\"font-size: 18px;\">Contact Information</h2>\r\n                                    <span>\r\n                                    <mat-icon class=\"editbtn\" [hidden]=\"editScreen\" (click)=\"editContactInfo()\">edit</mat-icon>  \r\n                                    </span>\r\n                                </div>\r\n                                <mat-divider class=\"divider1\">\r\n                                </mat-divider>\r\n                            </div>\r\n\r\n                            <div *ngFor=\"let items of userAddress_array\">\r\n                                <div fxLayout=\"row wrap\" style=\"padding: 0.5rem 0;\" class=\"full-width\">\r\n                                    <div fxFlex=\"100%\" fxFlex.xs=\"100%\">\r\n                                        <div class=\"mat-elevation-z0\" style=\"border: 1px solid #f5f5f5;padding: 16px;\">\r\n                                            <div fxLayout=\"row wrap\"  class=\"full-width\">\r\n                                                <!-- <div fxFlex=\"40%\" fxFlex.xs=\"50%\" style=\"padding: 0.5rem 0.5rem;\">\r\n                                            \r\n                                                </div> -->\r\n                                                <div fxFlex=\"40%\" fxFlex.xs=\"50%\" style=\"padding: 0.5rem 0.5rem;\">\r\n                                                <h1 style=\"font-size: 16px;\">Company Address</h1>\r\n                                            </div>\r\n                                            </div>\r\n                                            <hr class=\"margintop\">\r\n                                            <div fxLayout=\"row wrap\" style=\"padding: 0.5rem 0;\" class=\"full-width\">\r\n                                                <div fxFlex=\"50%\" fxFlex.xs=\"100%\">\r\n                                                    <mat-hint class=\"hint1\">\r\n                                                        Address Line 1*\r\n                                                    </mat-hint>\r\n                                                    <mat-card class=\"mat1\">\r\n                                                        <div>{{dataResponse.dataResp.corporateAddress[0].address1}}</div>\r\n                                                    </mat-card>\r\n                                                </div>\r\n                                                <div fxFlex=\"50%\" fxFlex.xs=\"100%\">\r\n                                                    <mat-hint class=\"hint1\">\r\n                                                        Address Line 2*\r\n                                                    </mat-hint>\r\n                                                    <mat-card class=\"mat1\">\r\n                                                        <div>{{dataResponse.dataResp.corporateAddress[0].address2}}</div>\r\n                                                    </mat-card>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div fxLayout=\"row wrap\" style=\"padding: 0.5rem 0;\" class=\"full-width\">\r\n                                                <div fxFlex=\"25%\" fxFlex.xs=\"100%\">\r\n                                                    <mat-hint class=\"hint1\">\r\n                                                        Country*\r\n                                                    </mat-hint>\r\n                                                    <mat-card class=\"mat1\">\r\n                                                        <div>{{dataResponse.dataResp.corporateAddress[0].country}}</div>\r\n                                                    </mat-card>\r\n                                                </div>\r\n                                                <div fxFlex=\"25%\" fxFlex.xs=\"100%\">\r\n                                                    <mat-hint class=\"hint1\">\r\n                                                        State*\r\n                                                    </mat-hint>\r\n                                                    <mat-card class=\"mat1\">\r\n                                                        <div>{{dataResponse.dataResp.corporateAddress[0].state}}</div>\r\n                                                    </mat-card>\r\n                                                </div>\r\n                                                <div fxFlex=\"25%\" fxFlex.xs=\"100%\">\r\n                                                    <mat-hint class=\"hint1\">\r\n                                                        City*\r\n                                                    </mat-hint>\r\n                                                    <mat-card class=\"mat1\">\r\n                                                        <div>{{dataResponse.dataResp.corporateAddress[0].city}}</div>\r\n                                                    </mat-card>\r\n                                                </div>\r\n                                                <div fxFlex=\"25%\" fxFlex.xs=\"100%\">\r\n                                                    <mat-hint class=\"hint1\">\r\n                                                        Zipcode*\r\n                                                    </mat-hint>\r\n                                                    <mat-card class=\"mat1\">\r\n                                                        <div>{{dataResponse.dataResp.corporateAddress[0].zipCode}}</div>\r\n                                                    </mat-card>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div fxLayout=\"row wrap\"  class=\"full-width\">\r\n                                                <!-- <div fxFlex=\"46%\" fxFlex.xs=\"50%\" style=\"padding: 0.5rem 0.5rem;\">\r\n                                            \r\n                                                </div> -->\r\n                                                <div fxFlex=\"40%\" fxFlex.xs=\"50%\" style=\"padding: 0.5rem 0.5rem; \">\r\n                                                <h1 style=\"font-size: 16px;\">Email</h1>\r\n                                            </div>\r\n                                            </div>\r\n                                            <hr class=\"margintop\">\r\n                                            <div fxLayout=\"row wrap\" style=\"padding: 0.5rem 0;\" class=\"full-width\">\r\n                                                <div fxFlex=\"25%\" fxFlex.xs=\"100%\">\r\n                                                    <mat-hint class=\"hint1\">\r\n                                                        Primary Email*\r\n                                                    </mat-hint>\r\n                                                    <mat-card class=\"mat1\">\r\n                                                        <div>{{dataResponse.dataResp.primaryEmail}}</div>\r\n                                                    </mat-card>\r\n                                                </div>\r\n                                                <div fxFlex=\"25%\" fxFlex.xs=\"100%\">\r\n                                                    <mat-hint class=\"hint1\">\r\n                                                        Secondary Email\r\n                                                    </mat-hint>\r\n                                                    <mat-card class=\"mat1\">\r\n                                                        <div>{{dataResponse.dataResp.secondaryEmail}}</div>\r\n                                                    </mat-card>\r\n                                                </div>\r\n                                            \r\n                                                <div fxLayout=\"row wrap\" class=\"full-width\">\r\n                                                    <!-- <div fxFlex=\"42%\" fxFlex.xs=\"50%\" style=\"padding: 0.5rem 0.5rem;\">\r\n                                                \r\n                                                    </div> -->\r\n                                                    <div fxFlex=\"40%\" fxFlex.xs=\"50%\" style=\"padding: 0.5rem 0.5rem;\">\r\n                                                    <h1 style=\"font-size: 16px;\">Contact Number</h1>\r\n                                                </div>\r\n                                                </div>\r\n                                                <hr class=\"margintop\">\r\n                                                \r\n                                                <div fxFlex=\"25%\" fxFlex.xs=\"100%\">\r\n                                                    <mat-hint class=\"hint1\">\r\n                                                        Mobile Number*\r\n                                                    </mat-hint>\r\n                                                    <mat-card class=\"mat1\">\r\n                                                        <div>{{dataResponse.dataResp.mobileNumber}}</div>\r\n                                                    </mat-card>\r\n                                                </div>\r\n                                                <div fxFlex=\"25%\" fxFlex.xs=\"100%\">\r\n                                                    <mat-hint class=\"hint1\">\r\n                                                        Landline Number*\r\n                                                    </mat-hint>\r\n                                                    <mat-card class=\"mat1\">\r\n                                                        <div>{{dataResponse.dataResp.customerInfo[0].landlineNumber}}</div>\r\n                                                    </mat-card>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <!-- <div fxLayout=\"row wrap\" style=\"padding: 0.5rem 0;\" class=\"full-width\">\r\n                                <div fxFlex=\"40%\" fxFlex.xs=\"50%\" style=\"padding: 0.5rem 0.5rem;\">\r\n                            \r\n                                </div>\r\n                                <div fxFlex=\"40%\" fxFlex.xs=\"50%\" style=\"padding: 0.5rem 0.5rem;\">\r\n                                <h1 style=\"font-size: 16px;\">Registration Address</h1>\r\n                            </div>\r\n                            </div>\r\n                            <div fxLayout=\"row wrap\" style=\"padding: 0.5rem 0;\" class=\"full-width\">\r\n                                <div fxFlex=\"50%\" fxFlex.xs=\"100%\">\r\n                                    <mat-hint class=\"hint1\">\r\n                                        Address Type*\r\n                                    </mat-hint>\r\n                                    <mat-card class=\"mat1\">\r\n                                        <div>{{dataResponse.dataResp.corporateAddress[0].addressType}}</div>\r\n                                    </mat-card>\r\n                                </div>\r\n                                <div fxFlex=\"50%\" fxFlex.xs=\"100%\">\r\n                                    <mat-hint class=\"hint1\">\r\n                                        Address Line 1*\r\n                                    </mat-hint>\r\n                                    <mat-card class=\"mat1\">\r\n                                        <div>{{dataResponse.dataResp.corporateAddress[0].address1}}</div>\r\n                                    </mat-card>\r\n                                </div>\r\n                                <div fxFlex=\"50%\" fxFlex.xs=\"100%\">\r\n                                    <mat-hint class=\"hint1\">\r\n                                        Address Line 2*\r\n                                    </mat-hint>\r\n                                    <mat-card class=\"mat1\">\r\n                                        <div>{{dataResponse.dataResp.corporateAddress[0].address2}}</div>\r\n                                    </mat-card>\r\n                                </div>\r\n                            </div>\r\n                            <div fxLayout=\"row wrap\" style=\"padding: 0.5rem 0;\" class=\"full-width\">\r\n                            <div fxFlex=\"25%\" fxFlex.xs=\"100%\">\r\n                                <mat-hint class=\"hint1\">\r\n                                    Country*\r\n                                </mat-hint>\r\n                                <mat-card class=\"mat1\">\r\n                                    <div>{{dataResponse.dataResp.corporateAddress[0].country}}</div>\r\n                                </mat-card>\r\n                            </div>\r\n                            \r\n                                <div fxFlex=\"25%\" fxFlex.xs=\"100%\">\r\n                                    <mat-hint class=\"hint1\">\r\n                                        State*\r\n                                    </mat-hint>\r\n                                    <mat-card class=\"mat1\">\r\n                                        <div>{{dataResponse.dataResp.corporateAddress[0].state}}</div>\r\n                                    </mat-card>\r\n                                </div>\r\n                                <div fxFlex=\"25%\" fxFlex.xs=\"100%\">\r\n                                    <mat-hint class=\"hint1\">\r\n                                        City*\r\n                                    </mat-hint>\r\n                                    <mat-card class=\"mat1\">\r\n                                        <div>{{dataResponse.dataResp.corporateAddress[0].city}}</div>\r\n                                    </mat-card>\r\n                                </div>\r\n                                <div fxFlex=\"25%\" fxFlex.xs=\"100%\">\r\n                                    <mat-hint class=\"hint1\">\r\n                                        Zipcode*\r\n                                    </mat-hint>\r\n                                    <mat-card class=\"mat1\">\r\n                                        <div>{{dataResponse.dataResp.corporateAddress[0].zipCode}}</div>\r\n                                    </mat-card>\r\n                                </div>\r\n                            </div> -->\r\n                        </div>\r\n                        </div>\r\n                    </mat-card>\r\n                </div><br />\r\n                <!-- end of Stage-3 -->\r\n                <!-- Stage-4 Starts -->\r\n\r\n                <div fxLayout=\"row\" class=\"flex-container\" *ngIf=!loading>\r\n                    <div fxFlex=\"15\">\r\n                        <div class='num'>4</div>\r\n                        <div class='bordnum'>&nbsp;</div>\r\n                    </div>\r\n                    <mat-card label=\"Proof Of Identity\" style=\"border-radius: 0px;width: 800px;\">\r\n                        <div class=\"full-width\" style=\"padding: 1rem;\">\r\n                            <div style=\"padding-bottom: 1rem\">\r\n                                <div fxLayout=\"row\" fxLayoutAlign=\"space-between end\">\r\n                                    <h2 style=\"font-size: 18px;\">Proof Of Identity</h2>\r\n                                    <span>\r\n                                    <mat-icon class=\"editbtn\" [hidden]=\"editScreen\" (click)=\"editProofOfIdentity()\">edit</mat-icon>  \r\n                                    </span>\r\n                                </div>\r\n                                <mat-divider class=\"divider1\"></mat-divider>\r\n                            </div>\r\n                            <div>\r\n                                <div style=\"padding: 1rem 0;\">\r\n                                    <div class=\"mat-elevation-z0\" style=\"border: 1px solid #f5f5f5;padding: 16px;\">\r\n                                        <small *ngIf=\"custDoc_array == null\"  style=\"color: grey;\">No Data\r\n                                            Found</small>\r\n                                        <div *ngIf=\"custDoc_array != null && custDoc_array?.length > 0\">\r\n                                            <!-- <div fxLayout=\"row wrap\" style=\"padding: 0.5rem 0;\" class=\"full-width\">\r\n                                                <div fxFlex=\"40%\" fxFlex.xs=\"50%\" style=\"padding: 0.5rem 0.5rem;\">\r\n                                                    <h2 style=\"font-size: 16px;\">Passport Details</h2>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div *ngFor=\"let items of custIdProofs_array\" style=\"padding: 0.5rem 0;\"\r\n                                                class=\"full-width\">\r\n                                                <div *ngIf=\"items.expiryDate\">\r\n\r\n                                                    <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                                        <mat-hint class=\"hint1\">\r\n                                                            Passport Number*\r\n                                                        </mat-hint>\r\n                                                        <mat-card class=\"mat1\">\r\n                                                            <div>{{items.idNumber}}</div>\r\n                                                        </mat-card>\r\n                                                    </div>\r\n                                                    <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                                        <mat-hint class=\"hint1\">\r\n                                                            Date of Issue*\r\n                                                        </mat-hint>\r\n                                                        <mat-card class=\"mat1\">\r\n                                                            <div>\r\n                                                                <div>{{items.issueDate}}</div>\r\n                                                            </div>\r\n                                                        </mat-card>\r\n                                                    </div>\r\n                                                    <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                                        <mat-hint class=\"hint1\">\r\n                                                            Date of Expiry*\r\n                                                        </mat-hint>\r\n                                                        <mat-card class=\"mat1\">\r\n                                                            <div>\r\n                                                                <div fxLayout=\"row wrap\" style=\"margin-top: -5px;\"\r\n                                                                    class=\"full-width\">\r\n                                                                    <div>{{items.expiryDate}}</div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </mat-card>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div> -->\r\n                                          \r\n\r\n                                            <div fxLayout=\"row wrap\" style=\"padding: 0.5rem;\" class=\"full-width\">\r\n\r\n                                                <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                                    <mat-hint class=\"hint1\">\r\n                                                        Incorporation Number\r\n                                                    </mat-hint>\r\n                                                    <mat-card class=\"mat1\">\r\n                                                        <div>{{dataResponse.dataResp.incorporationNumber}}</div>\r\n                                                    </mat-card>\r\n                                                </div>\r\n\r\n                                                <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                                    <mat-hint class=\"hint1\">\r\n                                                        Date Of Issue\r\n                                                    </mat-hint>\r\n                                                    <mat-card class=\"mat1\">\r\n                                                        <div>{{dataResponse.dataResp.dateOfIssue}}</div>\r\n                                                    </mat-card>\r\n                                                </div>\r\n    \r\n                                                <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                                    <mat-hint class=\"hint1\">\r\n                                                        Date Of Expiry\r\n                                                    </mat-hint>\r\n                                                    <mat-card class=\"mat1\">\r\n                                                        <div>{{dataResponse.dataResp.dateOfExpiry}}</div>\r\n                                                    </mat-card>\r\n                                                </div>\r\n    \r\n                                            </div>\r\n    \r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n\r\n                    </mat-card>\r\n                </div>\r\n                <!-- end of stage 4 -->\r\n\r\n<!-- stage-5 Starts -->\r\n\r\n<div fxLayout=\"row\" class=\"flex-container\" *ngIf=!loading>\r\n    <div fxFlex=\"15\">\r\n        <div class='num'>5</div>\r\n        <div class='bordnum'>&nbsp;</div>\r\n    </div>\r\n    <mat-card label=\"Other Information\" style=\"border-radius: 0px;width: 800px;\">\r\n\r\n        <div class=\"full-width\" style=\"padding: 1rem;\">\r\n            <div style=\"padding-bottom: 1rem\">\r\n                <div fxLayout=\"row\" fxLayoutAlign=\"space-between end\">\r\n                    <h2 style=\"font-size: 18px;\">Other Information</h2>\r\n                    <span>\r\n                    <mat-icon class=\"editbtn\" [hidden]=\"editScreen\" (click)=\"editOtherInfo()\">edit</mat-icon>  \r\n                    </span>\r\n                </div>\r\n                <mat-divider class=\"divider1\">\r\n                </mat-divider>\r\n            </div>\r\n          \r\n                <div fxLayout=\"row wrap\" style=\"padding: 0.5rem 0;\" class=\"full-width\">\r\n                <div fxFlex=\"100%\" fxFlex.xs=\"100%\">\r\n                <div class=\"mat-elevation-z0\" style=\"border: 1px solid #f5f5f5;padding: 16px; width: 750px;\">       \r\n                <div class=\"full-width\">\r\n                        <div fxLayout=\"row wrap\"  class=\"full-width\">\r\n                            <!-- <div fxFlex=\"37%\" fxFlex.xs=\"50%\" style=\"padding: 0.5rem 0.5rem;\">\r\n                        \r\n                            </div> -->\r\n                            <div fxFlex=\"40%\" fxFlex.xs=\"50%\" style=\"padding: 0.5rem 0.5rem;\">\r\n                            <h1 style=\"font-size: 16px;\">Organization Information</h1>\r\n\r\n                        </div>\r\n                        <hr class=\"margintop\">\r\n                        \r\n                        \r\n                        <div fxFlex=\"100%\" fxFlex.xs=\"100%\" style=\"padding-bottom: 1rem;\" class=\"full-width\">\r\n                            <div fxLayout=\"row wrap\" style=\"padding: 0.5rem;\" class=\"full-width\">\r\n                                <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                    <mat-hint class=\"hint1\">\r\n                                        Organization Type\r\n                                    </mat-hint>\r\n                                    <mat-card class=\"mat1\">\r\n                                        <div>{{dataResponse.dataResp.organizationType}}</div>\r\n                                    </mat-card>\r\n                                </div> \r\n                                <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                    <mat-hint class=\"hint1\">\r\n                                        Type of Ownership\r\n                                    </mat-hint>\r\n                                    <mat-card class=\"mat1\">\r\n                                        <div>{{dataResponse.dataResp.typeOfOwnership}}</div>\r\n                                    </mat-card>\r\n                                </div> \r\n                            </div>\r\n                        </div>\r\n                        <!-- <div fxLayout=\"row wrap\" style=\"padding: 0.5rem 0;\" class=\"full-width\">\r\n                            <div fxFlex=\"40%\" fxFlex.xs=\"50%\" style=\"padding: 0.5rem 0.5rem;\">\r\n                        \r\n                            </div>\r\n                            <div fxFlex=\"40%\" fxFlex.xs=\"50%\" style=\"padding: 0.5rem 0.5rem;\">\r\n                            <h1 style=\"font-size: 16px;\">Registration Address</h1>\r\n                        </div>\r\n                        </div>\r\n                        <div fxLayout=\"row wrap\" style=\"padding: 0.5rem 0;\" class=\"full-width\">\r\n                            <div fxFlex=\"50%\" fxFlex.xs=\"100%\">\r\n                                <mat-hint class=\"hint1\">\r\n                                    Address Type*\r\n                                </mat-hint>\r\n                                <mat-card class=\"mat1\">\r\n                                    <div>{{dataResponse.dataResp.corporateAddress[0].addressType}}</div>\r\n                                </mat-card>\r\n                            </div>\r\n                            <div fxFlex=\"50%\" fxFlex.xs=\"100%\">\r\n                                <mat-hint class=\"hint1\">\r\n                                    Address Line 1*\r\n                                </mat-hint>\r\n                                <mat-card class=\"mat1\">\r\n                                    <div>{{dataResponse.dataResp.corporateAddress[0].address1}}</div>\r\n                                </mat-card>\r\n                            </div>\r\n                            <div fxFlex=\"50%\" fxFlex.xs=\"100%\">\r\n                                <mat-hint class=\"hint1\">\r\n                                    Address Line 2*\r\n                                </mat-hint>\r\n                                <mat-card class=\"mat1\">\r\n                                    <div>{{dataResponse.dataResp.corporateAddress[0].address2}}</div>\r\n                                </mat-card>\r\n                            </div>\r\n                        </div>\r\n                        <div fxLayout=\"row wrap\" style=\"padding: 0.5rem 0;\" class=\"full-width\">\r\n                        <div fxFlex=\"25%\" fxFlex.xs=\"100%\">\r\n                            <mat-hint class=\"hint1\">\r\n                                Country*\r\n                            </mat-hint>\r\n                            <mat-card class=\"mat1\">\r\n                                <div>{{dataResponse.dataResp.corporateAddress[0].country}}</div>\r\n                            </mat-card>\r\n                        </div>\r\n                        \r\n                            <div fxFlex=\"25%\" fxFlex.xs=\"100%\">\r\n                                <mat-hint class=\"hint1\">\r\n                                    State*\r\n                                </mat-hint>\r\n                                <mat-card class=\"mat1\">\r\n                                    <div>{{dataResponse.dataResp.corporateAddress[0].state}}</div>\r\n                                </mat-card>\r\n                            </div>\r\n                            <div fxFlex=\"25%\" fxFlex.xs=\"100%\">\r\n                                <mat-hint class=\"hint1\">\r\n                                    City*\r\n                                </mat-hint>\r\n                                <mat-card class=\"mat1\">\r\n                                    <div>{{dataResponse.dataResp.corporateAddress[0].city}}</div>\r\n                                </mat-card>\r\n                            </div>\r\n                            <div fxFlex=\"25%\" fxFlex.xs=\"100%\">\r\n                                <mat-hint class=\"hint1\">\r\n                                    Zipcode*\r\n                                </mat-hint>\r\n                                <mat-card class=\"mat1\">\r\n                                    <div>{{dataResponse.dataResp.corporateAddress[0].zipCode}}</div>\r\n                                </mat-card>\r\n                            </div>\r\n                        </div> -->\r\n\r\n                    </div>\r\n                </div>\r\n\r\n                <div fxLayout=\"row wrap\" class=\"full-width\">\r\n                    <div *ngFor=\"let items of custDoc_array\" class=\"full-width\">\r\n                        <div *ngIf=\"items.documentName != 'Profile'\">\r\n                         <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                            <mat-hint class=\"hint1\">\r\n                                Document Type*\r\n                             </mat-hint>\r\n                                <mat-card class=\"mat1\">\r\n                                    <div>{{items.documentName}}</div>\r\n                                </mat-card>\r\n                        </div>\r\n                            <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                <mat-hint class=\"hint1\" style=\"text-align: center;\">\r\n                                     &nbsp;&nbsp; Document Name*\r\n                                </mat-hint>\r\n                                    <!-- <mat-card > -->\r\n                                    <div style=\"text-align: center;\">  \r\n                                        <img class=\"formImg2\"  required\r\n                                            [src]=\"items.fileUrl\" alt=\"\">\r\n                                        <div >{{items.fileName}}</div>\r\n                                     </div>\r\n                                    <!-- </mat-card> -->\r\n                            </div>\r\n                            <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                <div style=\"margin-top: 35px;\">\r\n                                    <a style=\"color:#4A56E2;\r\n                                        text-decoration: underline; \" href=\"{{items.fileUrl}}\" download>Download \r\n                                    </a>\r\n                                </div>\r\n                            </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                </div>\r\n                </div>\r\n                </div>\r\n        \r\n        </div>\r\n        \r\n    </mat-card>\r\n</div>\r\n\r\n<!-- end of stage 5 -->                \r\n        \r\n               <div *ngIf=\"!loading\">\r\n                <div style=\"float: right;\">\r\n\r\n                    <button type=\"button\"  class=\"rejectbtn\" [hidden]=\"rejectedStatus\"\r\n                       [ngClass]=\"{'disabledbtn':rejectedStatus,'rejectbtn': !rejectedStatus }\"\r\n                       (click)=\"updateApplicationStatus(dataResponse,'REJECTED')\">\r\n                       Reject\r\n                    </button>\r\n                    &nbsp;&nbsp;\r\n                    <button type=\"button\"  class=\"approvebtn\" [hidden]=\"approvedStatus\"\r\n                       [ngClass]=\"{'disabledbtn':approvedStatus,'approvebtn': !approvedStatus }\"\r\n                       (click)=\"updateApplicationStatus(dataResponse,'APPROVED')\">Approve</button> \r\n                          <!-- <button class=\"editbtn\" type=\"button\" [hidden]=\"editScreen\"\r\n                             (click)=\"goToCorporate()\">Edit</button> -->\r\n                   </div>\r\n                <!-- <div fxLayout=\"row\" fxLayoutAlign=\"end\" fxLayoutGap=\"20px\">\r\n\r\n                    <div><button type=\"button\" [hidden]=\"rejectedStatus\"\r\n                            [ngClass]=\"{'disabledbtn':rejectedStatus,'rejectbtn': !rejectedStatus }\"\r\n                            (click)=\"updateApplicationStatus(dataResponse,'REJECTED')\">Reject</button>\r\n                    </div>\r\n                    <div><button type=\"button\" [hidden]=\"approvedStatus\"\r\n                            [ngClass]=\"{'disabledbtn':approvedStatus,'approvebtn': !approvedStatus }\"\r\n                            (click)=\"updateApplicationStatus(dataResponse,'APPROVED')\">Approve</button>\r\n                    </div>\r\n                    <div><button class=\"editbtn\" type=\"button\" [hidden]=\"editScreen\"\r\n                        (click)=\"goToCorporate()\">Edit</button>\r\n                      \r\n                </div>\r\n                </div> -->\r\n               </div>\r\n                <br>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</form>\r\n\r\n","import { Component, OnInit, ChangeDetectorRef, EventEmitter, Output, HostListener } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { SortCriteria } from 'app/shared/pipes/custom-task-summary-sorting.pipe';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { Subject } from 'rxjs';\r\nimport { debounceTime } from 'rxjs/operators';\r\nimport { ApproverComponent } from '../approver/approver.component';\r\nimport { TasksummaryService } from '../tasksummary.service';\r\nimport * as _ from 'lodash';\r\n\r\n@Component({\r\n  selector: 'app-task-summary',\r\n  templateUrl: './task-summary.component.html',\r\n  styleUrls: ['./task-summary.component.scss']\r\n})\r\n\r\nexport class TaskSummaryComponent implements OnInit {\r\n  data: any;\r\n  radioButtonSelected: any;\r\n  searchText;\r\n  statusArr: any = ['ONGOING', 'BACKLOG', 'APPROVED', 'REJECTED'];\r\n\r\n  BACKLOGArr: any = [];\r\n  ONGOINGArr: any = [];\r\n  REJECTEDArr: any = [];\r\n  APPROVEDArr: any = [];\r\n\r\n  BACKLOGTotalPages: number = 0\r\n  ONGOINGTotalPages: number = 0\r\n  REJECTEDTotalPages: number = 0\r\n  APPROVEDTotalPages: number = 0\r\n\r\n  BACKLOGTotalRecords: number = 0;\r\n  ONGOINGTotalRecords: number = 0;\r\n  REJECTEDTotalRecords: number = 0;\r\n  APPROVEDTotalRecords: number = 0;\r\n\r\n  BACKLOGPage: number = 0;\r\n  ONGOINGPage: number = 0;\r\n  REJECTEDPage: number = 0;\r\n  APPROVEDPage: number = 0;\r\n\r\n  loading: boolean;\r\n\r\n  image: Object;\r\n  searchable: boolean = false;\r\n  //variable for sorting data\r\n  isScroll: boolean = true;\r\n  public criteria: SortCriteria;\r\n\r\n\r\n  @Output() setValue: EventEmitter<string> = new EventEmitter();\r\n  private _searchSubject: Subject<string> = new Subject();\r\n  noDataFound: boolean = false;\r\n\r\n  constructor(public dialog: MatDialog, private sanitizer: DomSanitizer, public tasksummaryService: TasksummaryService,\r\n    private apiService: ApiService, public cdr: ChangeDetectorRef) {\r\n    this._setSearchSubscription();\r\n  }\r\n  @HostListener('scroll', ['$event'])\r\n  onScroll(event: any) {  \r\n    if(this.isScroll){\r\n        this.ONGOINGPage++;\r\n        this.getDataOnScroll(\"ONGOING\",this.ONGOINGPage,this.ONGOINGTotalPages);\r\n       \r\n       this.BACKLOGPage++;\r\n       this.getDataOnScroll(\"BACKLOG\",this.BACKLOGPage, this.BACKLOGTotalPages);\r\n      \r\n         this.APPROVEDPage++;\r\n         this.getDataOnScroll(\"APPROVED\", this.APPROVEDPage, this.APPROVEDTotalPages);\r\n     \r\n         this.REJECTEDPage++;\r\n         this.getDataOnScroll(\"REJECTED\", this.REJECTEDPage, this.REJECTEDTotalPages);\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    var task:boolean=true;\r\n    this.apiService.setTask(task);\r\n    /* @called :: on screen load */\r\n    this.getDataOnLoad();\r\n\r\n    /* @called :: to refresh data for every 1min interval */\r\n    // setInterval(() => { this.getDataOnLoad() }, 60000);\r\n\r\n  }\r\n\r\n  /* @method :: on keyup used to search the data */\r\n  public updateSearch(searchTextValue: string) {\r\n    console.log(\"searchTextValue::\",searchTextValue)\r\n    this._searchSubject.next(searchTextValue);\r\n  }\r\n\r\n  /* @method :: on keyup to avoid api calling for each time , using subject from rxjs library and debounce concept */\r\n  private _setSearchSubscription() {\r\n    this._searchSubject.pipe(\r\n      debounceTime(1000)\r\n    ).subscribe((searchValue: string) => {\r\n      this.searchKycid(searchValue);\r\n    });\r\n  }\r\n\r\n  /* @method :: to load all data on screen load */\r\n  getDataOnLoad() {\r\n    for (let index = 0; index < this.statusArr.length; index++) {\r\n      const statusItem = this.statusArr[index];\r\n      this.getAllAccDetails(statusItem, 0, 0);\r\n    }\r\n  }\r\n\r\n  getAllAccDetails(status: string, page: number, size: number) {\r\n    this.tasksummaryService.getAllAccDetails(status)\r\n      .subscribe((data: any) => {\r\n        console.log(\"Response\", data);\r\n        this.updateStatusResponse(status,data);\r\n      });\r\n  }\r\n\r\n  updateStatusResponse(status, data){\r\n    if(status == 'ONGOING'){\r\n      this.ONGOINGArr = data.accountList;\r\n      this.ONGOINGTotalPages = data.totalPages;\r\n      this.ONGOINGTotalRecords = data.totalNoOfElements;\r\n    }else if(status == 'BACKLOG'){\r\n      this.BACKLOGArr = data.accountList;\r\n      this.BACKLOGTotalPages = data.totalPages;\r\n      this.BACKLOGTotalRecords = data.totalNoOfElements;\r\n    }else if(status == 'APPROVED'){\r\n      this.APPROVEDArr = data.accountList;\r\n      this.APPROVEDTotalPages = data.totalPages;\r\n      this.APPROVEDTotalRecords = data.totalNoOfElements;\r\n    }else if(status == 'REJECTED'){ \r\n      this.REJECTEDArr = data.accountList;\r\n      this.REJECTEDTotalPages = data.totalPages;\r\n      this.REJECTEDTotalRecords = data.totalNoOfElements;\r\n      console.log(\"this.REJECTEDArr\",this.REJECTEDArr);\r\n    }\r\n\r\n    this.cdr.markForCheck();\r\n}\r\n\r\n  /* @method :: to load data on scroll of data*/\r\n  onScrollingFinished(e, status) {\r\n    if(status == 'ONGOING'){\r\n      this.ONGOINGPage++;\r\n      this.getDataOnScroll(status,this.ONGOINGPage,this.ONGOINGTotalPages);\r\n     }else if(status == 'BACKLOG'){\r\n     this.BACKLOGPage++;\r\n     this.getDataOnScroll(status,this.BACKLOGPage, this.BACKLOGTotalPages);\r\n     }else if(status == 'APPROVED'){\r\n       this.APPROVEDPage++;\r\n       this.getDataOnScroll(status, this.APPROVEDPage, this.APPROVEDTotalPages);\r\n     }else if(status == 'REJECTED'){ \r\n       this.REJECTEDPage++;\r\n       this.getDataOnScroll(status, this.REJECTEDPage, this.REJECTEDTotalPages);\r\n     }\r\n  }\r\n\r\n  /* @method :: to call service ,when scroll method called */\r\n  getDataOnScroll(status,page,totalPage) {\r\n    console.log('---------scrolled----------')\r\n    if (page === totalPage) {\r\n      console.log('No scroll requied')\r\n      return;\r\n    }\r\n    this.tasksummaryService.getAllAccDetailOnScroll(status, page)\r\n        .subscribe((data:any) => {\r\n          \r\n          this.updateDataOnScroll(status, data.accountList);\r\n          this.cdr.markForCheck();\r\n        });\r\n  }\r\n\r\n  \r\n  \r\n  gotoapproverpage(data, status, colCode) {\r\n    // console.log('data:: ', data);\r\n    this.tasksummaryService.accountStatusData(status);\r\n    localStorage.setItem('CustomerColorCode', colCode);\r\n    const dialogRef = this.dialog.open(ApproverComponent,\r\n      {\r\n        panelClass: 'full-width-dialog',\r\n        data: data,\r\n        width: '80%',\r\n        disableClose: true\r\n      });\r\n    dialogRef.afterClosed().subscribe((submit) => {\r\n      // console.log('submit :: ', submit);\r\n      if (submit.data === 'REJECTED' || submit.data === 'APPROVED' || submit.data == 'ONGOING' || submit.data === 'BACKLOG') {\r\n        this.getDataOnLoad()\r\n      }\r\n    })\r\n  }\r\n  /* @method :: search the data locally on the loaded data array and if no data found in array call api */\r\n  searchKycid(searchTerm) {\r\n    let text:any;\r\n      let params:any;\r\n      if(searchTerm===''){\r\n        console.log('empty')\r\n        this.isScroll = true\r\n        this.getDataOnLoad();\r\n        return;\r\n      }\r\n      if(this.isNum(searchTerm)){\r\n        text=this.searchText.trim();\r\n        params = 'accountId='+text;\r\n      }else{\r\n        text=this.searchText.trim();\r\n        params = 'customerName='+text;\r\n      }\r\n      this.isScroll = false;\r\n      this.getAccountData(params);\r\n  }\r\n\r\n  getAccountData(params) {\r\n    this.loading = true;\r\n    console.log(\"params :: \",params);\r\n    this.tasksummaryService.getSearchData(params)\r\n    .subscribe(data => {\r\n      this.loading = false;\r\n      console.log('resp data :: ', data);\r\n     this.resetSearchData();\r\n      for (let index = 0; index < data.accountList.length; index++) {\r\n        const element = data.accountList[index];\r\n        console.log('element ::',element);\r\n        this.searchResponseUpdate(element.status,data.accountList[index]);\r\n        \r\n      }\r\n    })\r\n  }\r\n\r\n  resetSearchData(){\r\n    this.ONGOINGArr = [];\r\n    this.BACKLOGArr = [];\r\n    this.APPROVEDArr = [];\r\n    this.REJECTEDArr = [];\r\n    this.cdr.markForCheck();\r\n  }\r\n\r\n  clear(){\r\n    this.searchText = \"\";\r\n    this.isScroll = true;\r\n    this.getDataOnLoad();\r\n  }\r\n\r\n  isNum(val){\r\n    return !isNaN(val)\r\n  }\r\n\r\n  searchResponseUpdate(status:string, data: any) {\r\n    if(status == 'ONGOING'){\r\n      // this.ONGOINGArr = [];\r\n      this.ONGOINGArr.push(data);\r\n     }else if(status == 'BACKLOG'){\r\n      // this.BACKLOGArr = [];\r\n      this.BACKLOGArr.push(data);\r\n     }\r\n     \r\n    else  if(status == 'APPROVED'){\r\n      // this.APPROVEDArr = [];\r\n      this.APPROVEDArr.push(data);\r\n     }\r\n    else if(status == 'REJECTED'){ \r\n      // this.REJECTEDArr = [];\r\n      this.REJECTEDArr.push(data);\r\n     }\r\n    this.cdr.markForCheck();\r\n  }\r\n\r\n  updateDataOnScroll(status:string, data: any) {\r\n    if(status == 'ONGOING'){\r\n      console.log(\"sdsklsdk\",data)\r\n      const result = _.unionBy(this.ONGOINGArr, data, 'accountId');\r\n      console.log(\"result--------------->\",result)\r\n      this.ONGOINGArr = result;\r\n    }else if(status == 'BACKLOG'){\r\n      const result = _.unionBy(this.BACKLOGArr, data, 'accountId');\r\n      this.BACKLOGArr = result;\r\n    }else if(status == 'APPROVED'){\r\n      const result = _.unionBy(this.APPROVEDArr, data, 'accountId');\r\n      this.APPROVEDArr = result;\r\n    }else if(status == 'REJECTED'){ \r\n      const result = _.unionBy(this.REJECTEDArr, data, 'accountId');\r\n      this.REJECTEDArr = result;\r\n    }\r\n\r\n    this.cdr.markForCheck();\r\n  }\r\n\r\n\r\n  ngOnDestroy() {\r\n    this._searchSubject.unsubscribe();\r\n    this.BACKLOGArr = [];\r\n    this.APPROVEDArr = [];\r\n    this.REJECTEDArr = [];\r\n    this.ONGOINGArr = [];\r\n\r\n    this.ONGOINGPage = 0;\r\n    this.REJECTEDPage = 0;\r\n    this.APPROVEDPage = 0;\r\n    this.BACKLOGPage = 0;\r\n\r\n    this.ONGOINGTotalPages = 0;\r\n    this.REJECTEDTotalPages = 0;\r\n    this.APPROVEDTotalPages = 0;\r\n    this.BACKLOGTotalPages = 0;\r\n  }\r\n\r\n  getRandomColor(idx) {\r\n    var col0 = '#0d856b';\r\n    var col1 = '#d66f1b';\r\n    var col2 = '#9f52e7';\r\n    var col3 = '#e9318d';\r\n    var col4 = '#1175a3';\r\n    var col5 = '#e93131';\r\n    var col6 = '#2316d3';\r\n    var col7 = '#f557f5';\r\n    var col8 = '#d6c31b';\r\n    var col9 = '#40d61b';\r\n\r\n    if ((idx % 10) == 0) return col0;\r\n    if ((idx % 10) == 1) return col1;\r\n    if ((idx % 10) == 2) return col2;\r\n    if ((idx % 10) == 3) return col3;\r\n    if ((idx % 10) == 4) return col4;\r\n    if ((idx % 10) == 5) return col5;\r\n    if ((idx % 10) == 6) return col6;\r\n    if ((idx % 10) == 7) return col7;\r\n    if ((idx % 10) == 8) return col8;\r\n    if ((idx % 10) == 9) return col9;\r\n    return '#d86315';\r\n\r\n  }\r\n\r\n}\r\n","<!-- Header Starts -->\r\n<br>\r\n<div class=\"search-results1\" infiniteScroll [infiniteScrollDistance]=\"2\" [infiniteScrollThrottle]=\"500\"\r\n(scrolled)=\"onScroll($event)\" [scrollWindow]=\"false\">\r\n<br>\r\n<div class=\"m-333 mt-45\">\r\n  <div fxLayout=\"row\" fxLayoutAlign=\"space-between start\" fxLayoutGap=\"10px\">\r\n    <div fxFlex=\"60\" class=\"headingtext\">\r\n      <span class=\"task ml-24\">\r\n        Create Account Task Summary\r\n      </span>\r\n    </div>\r\n\r\n    <div fxFlex=\"30\" fxLayoutAlign=\"end center\" class=\"searchfield\">\r\n      <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n        <mat-label>Search</mat-label>\r\n        <div fxLayoutAlign=\"center\">\r\n          <input matInput name=\"search\" [(ngModel)]=\"searchText\" autocomplete=\"off\"\r\n          (keyup)=\"updateSearch($event.target.value)\" placeholder=\"Search AccountID or Name\">\r\n          <mat-spinner *ngIf=\"loading\" [diameter]=\"15\"></mat-spinner> \r\n        </div>\r\n        <mat-icon matPrefix class=\"my-icon\">search</mat-icon>\r\n        <button mat-button *ngIf=\"searchText\" matSuffix mat-icon-button (click)=\"clear()\">\r\n\r\n          \r\n          \r\n          <mat-icon>close</mat-icon>\r\n        </button>\r\n        <mat-hint>Search AccountID or Name</mat-hint>\r\n      </mat-form-field>\r\n    </div>\r\n\r\n  </div>\r\n</div>\r\n\r\n<!-- Header Ends -->\r\n\r\n<!-- Body Starts -->\r\n<div class=\"content\">\r\n  <!-- <div fxLayout=\"row wrap\" fxLayoutGap=\"1px grid\"> -->\r\n    <div fxLayout=\"20%\" class=\"screen\">\r\n\r\n      <mat-card class=\"mat-elevation-z4\">\r\n\r\n        <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n          <span class=\"pl-6\">\r\n            <h2 class=\"statusFont\">Pending for approval ({{BACKLOGArr.length}}/{{BACKLOGTotalRecords}})</h2>\r\n          </span>\r\n          <span class=\"tolltipicon\">\r\n            <mat-icon>more_vert</mat-icon>\r\n          </span>\r\n        </div>\r\n\r\n        <!-- <div class=\"search-results\" infiniteScroll [infiniteScrollDistance]=\"2\" [infiniteScrollThrottle]=\"500\"\r\n          (scrolled)=\"onScrollingFinished($event, 'INITIATED')\" [scrollWindow]=\"false\"> -->\r\n          <div>\r\n          <!-- | filter:searchText -->\r\n          <div class=\"matCardbox\" *ngFor=\"let backlogData of BACKLOGArr  ;let i =index\"\r\n            (click)=\"gotoapproverpage(backlogData,'BACKLOG', getRandomColor(i+3))\">\r\n            <mat-icon class=\"fill-color-blue bookMark\">bookmark</mat-icon>\r\n            <mat-card-header class=\"head\">\r\n              <!-- <div mat-card-avatar> <img src=\"assets/images/personImg.png\"></div> -->\r\n              <div mat-card-avatar class=\"circle\">\r\n                <div *ngIf=\"backlogData.profileImage == 'not_available'; else showAvatar\">\r\n                  <app-photo [name]=\"backlogData?.firstName + ' ' + backlogData.lastName\"></app-photo>\r\n                </div>                \r\n                <ng-template #showAvatar>\r\n                  <img class=\"profilepic\" [src]=\"backlogData.profileImage\"\r\n                    alt=\"profile\" onerror=\"this.onerror=null;this.src='assets/images/profile-Picture.png';\">\r\n                </ng-template>              \r\n              </div>\r\n              <mat-card-title style=\"font-size: 16px;\">{{backlogData?.firstName}} {{backlogData?.middleName}}\r\n                {{backlogData?.lastName}}</mat-card-title>\r\n              <mat-card-subtitle style=\"color:green\">{{backlogData?.accountId}}</mat-card-subtitle>\r\n            </mat-card-header>\r\n\r\n            <form class=\"head1\">\r\n              <table>\r\n                <thead class=\"col1\" >\r\n                  <th>Application Date</th>\r\n                  <th>Applicaton Branch</th>\r\n                  <th>Product</th>\r\n                </thead>\r\n                <tbody class=\"col2\" >\r\n                  <tr>\r\n                    <td>{{backlogData?.applicationDate}}</td>\r\n                    <td>{{backlogData?.accountBranch}}</td>\r\n                    <td>{{backlogData?.businessProductName}}</td>\r\n                  </tr>\r\n                </tbody>\r\n\r\n              </table>\r\n              <table>\r\n                <thead class=\"col3\" >\r\n                  <th>Account Type</th>\r\n                  <th>Application By</th>\r\n                </thead>\r\n                <tbody class=\"col4\" >\r\n                  <tr>\r\n                    <td>{{backlogData?.accountType}}</td>\r\n                    <td>{{backlogData?.createdBy}}</td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </form>\r\n\r\n          </div>\r\n        </div>\r\n        <br />\r\n\r\n      </mat-card>\r\n\r\n      <mat-card class=\"mat-elevation-z4\">\r\n        <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n          <span class=\"pl-6\">\r\n            <h2 class=\"statusFont\">Ongoing ({{ONGOINGArr.length}}/{{ONGOINGTotalRecords}})</h2>\r\n          </span>\r\n          <span class=\"tolltipicon\">\r\n            <mat-icon>more_vert</mat-icon>\r\n          </span>\r\n        </div>\r\n        <!-- <div class=\"search-results\" infiniteScroll [infiniteScrollDistance]=\"2\" [infiniteScrollThrottle]=\"500\"\r\n          (scrolled)=\"onScrollingFinished($event,'UNDER_PROCESS')\" [scrollWindow]=\"false\"> -->\r\n          <div >\r\n\r\n          <div class=\"matCardbox\" *ngFor=\"let ongoingData of ONGOINGArr  ; let i =index\"\r\n            (click)=\"gotoapproverpage(ongoingData,'ONGOING', getRandomColor(i+6))\">\r\n            <mat-icon class=\"fill-color-blue bookMark bookMark1\">bookmark</mat-icon>\r\n            <mat-card-header class=\"head\">\r\n              <div mat-card-avatar class=\"circle\">\r\n                <div *ngIf=\"ongoingData.profileImage == 'not_available'; else showAvatar\">\r\n                  <app-photo [name]=\"ongoingData?.firstName + ' ' + ongoingData.lastName\"></app-photo>\r\n                </div>\r\n                <ng-template #showAvatar>\r\n                  <img class=\"profilepic\" [src]=\"ongoingData.profileImage\"\r\n                    alt=\"profile\" onerror=\"this.onerror=null;this.src='assets/images/profile-Picture.png';\">\r\n                </ng-template>\r\n              </div>\r\n\r\n              <mat-card-title style=\"font-size: 16px;\">{{ongoingData.firstName}} {{ongoingData.middleName}}\r\n                {{ongoingData.lastName}}</mat-card-title>\r\n              <mat-card-subtitle style=\"color:green\">{{ongoingData.accountId}}</mat-card-subtitle>\r\n            </mat-card-header>\r\n\r\n            <form class=\"head1\">\r\n              <table>\r\n                <thead class=\"col1\">\r\n                  <th>Application Date</th>\r\n                  <th>Applicaton Branch</th>\r\n                  <th>Product</th>\r\n                </thead>\r\n                <tbody class=\"col2\">\r\n                  <tr>\r\n                    <td>{{ongoingData.applicationDate}}</td>\r\n                    <td>{{ongoingData.accountBranch}}</td>\r\n                    <td>{{ongoingData.businessProductName}}</td>\r\n                  </tr>\r\n                </tbody>\r\n\r\n              </table>\r\n              <table>\r\n                <thead class=\"col3\">\r\n                  <th>Account Type</th>\r\n                  <th>Application By</th>\r\n                </thead>\r\n                <tbody class=\"col4\">\r\n                  <tr>\r\n                    <td>{{ongoingData.accountType}}</td>\r\n                    <td>{{ongoingData.createdBy}}</td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n\r\n            </form>\r\n          </div>\r\n        </div>\r\n        <br />\r\n\r\n      </mat-card>\r\n\r\n      <mat-card class=\"mat-elevation-z4\">\r\n        <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n          <span class=\"pl-6\">\r\n            <h2 class=\"statusFont\">Approved ({{APPROVEDArr.length}}/{{APPROVEDTotalRecords}})</h2>\r\n          </span>\r\n          <span class=\"tolltipicon\">\r\n            <mat-icon>more_vert</mat-icon>\r\n          </span>\r\n        </div>\r\n        <!-- <div class=\"search-results\" infiniteScroll [infiniteScrollDistance]=\"2\" [infiniteScrollThrottle]=\"500\"\r\n          (scrolled)=\"onScrollingFinished($event,'APPROVED')\" [scrollWindow]=\"false\"> -->\r\n          <div >\r\n\r\n          <div class=\"matCardbox\" *ngFor=\"let approvedData of APPROVEDArr ; let i =index\"\r\n            (click)=\"gotoapproverpage(approvedData,'APPROVED', getRandomColor(i+9))\">\r\n            <mat-icon class=\"fill-color-blue bookMark bookMark2\">bookmark</mat-icon>\r\n            <mat-card-header class=\"head\">\r\n              <!-- <div mat-card-avatar> <img src=\"assets/images/personImg.png\"></div> -->\r\n              <div mat-card-avatar class=\"circle\">\r\n                <div *ngIf=\"approvedData.profileImage == 'not_available'; else showAvatar\">\r\n                  <app-photo [name]=\"approvedData?.firstName + ' ' + approvedData.lastName\"></app-photo>\r\n                </div>\r\n                <ng-template #showAvatar>\r\n                  <img class=\"profilepic\" [src]=\"approvedData.profileImage\"\r\n                    alt=\"profile\" onerror=\"this.onerror=null;this.src='assets/images/profile-Picture.png';\">\r\n                </ng-template>\r\n              </div>\r\n\r\n              <mat-card-title style=\"font-size: 16px;\">{{approvedData.firstName}} {{approvedData.middleName}}\r\n                {{approvedData.lastName}}</mat-card-title>\r\n              <mat-card-subtitle style=\"color:green\">{{approvedData.accountId}}</mat-card-subtitle>\r\n            </mat-card-header>\r\n\r\n            <form class=\"head1\">\r\n              <table>\r\n                <thead class=\"col1\">\r\n                  <th>Application Date</th>\r\n                  <th>Applicaton Branch</th>\r\n                  <th>Product</th>\r\n                </thead>\r\n                <tbody class=\"col2\">\r\n                  <tr>\r\n                    <td>{{approvedData.applicationDate}}</td>\r\n                    <td>{{approvedData.accountBranch}}</td>\r\n                    <td>{{approvedData.businessProductName}}</td>\r\n                  </tr>\r\n                </tbody>\r\n\r\n              </table>\r\n              <table>\r\n                <thead class=\"col3\">\r\n                  <th>Account Type</th>\r\n                  <th>Application By</th>\r\n                </thead>\r\n                <tbody class=\"col4\">\r\n                  <tr>\r\n                    <td>{{approvedData.accountType}}</td>\r\n                    <td>{{approvedData.createdBy}}</td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </form>\r\n          </div>\r\n        </div>\r\n        <br />\r\n\r\n      </mat-card>\r\n\r\n      <mat-card class=\"mat-elevation-z4\">\r\n        <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n          <span class=\"pl-6\">\r\n            <h2 class=\"statusFont\">Rejected ({{REJECTEDArr.length}}/{{REJECTEDTotalRecords}})</h2>\r\n          </span>\r\n          <span class=\"tolltipicon\">\r\n            <mat-icon>more_vert</mat-icon>\r\n          </span>\r\n        </div>\r\n        <!-- <div class=\"search-results\" infiniteScroll [infiniteScrollDistance]=\"2\" [infiniteScrollThrottle]=\"500\"\r\n          (scrolled)=\"onScrollingFinished($event,'REJECTED')\" [scrollWindow]=\"false\"> -->\r\n          <div >\r\n\r\n          <div class=\"matCardbox\" *ngFor=\"let rejectedData of REJECTEDArr  ; let i =index\"\r\n            (click)=\"gotoapproverpage(rejectedData,'REJECTED', getRandomColor(i+12))\">\r\n            <mat-icon class=\"fill-color-blue bookMark bookMark3\">bookmark</mat-icon>\r\n            <mat-card-header class=\"head\">\r\n              <!-- <div mat-card-avatar> <img src=\"assets/images/personImg.png\"></div> -->\r\n              <div mat-card-avatar class=\"circle\">\r\n                <div *ngIf=\"rejectedData.profileImage == 'not_available'; else showAvatar\">\r\n                  <app-photo [name]=\"rejectedData?.firstName + ' ' + rejectedData.lastName\"></app-photo>\r\n                </div>\r\n                <ng-template #showAvatar>\r\n                  <img class=\"profilepic\"  [src]=\"rejectedData.profileImage\"\r\n                    alt=\"profile\" onerror=\"this.onerror=null;this.src='assets/images/profile-Picture.png';\">\r\n                </ng-template>\r\n              </div>\r\n              <mat-card-title style=\"font-size: 16px;\">{{rejectedData.firstName}} {{rejectedData.middleName}}\r\n                {{rejectedData.lastName}} </mat-card-title>\r\n              <mat-card-subtitle style=\"color:green\">{{rejectedData.accountId}}</mat-card-subtitle>\r\n            </mat-card-header>\r\n\r\n            <form class=\"head1\">\r\n              <table>\r\n                <thead class=\"col1\">\r\n                  <th>Application Date</th>\r\n                  <th>Applicaton Branch</th>\r\n                  <th>Product</th>\r\n                </thead>\r\n                <tbody class=\"col2\">\r\n                  <tr>\r\n                    <td>{{rejectedData.applicationDate}}</td>\r\n                    <td>{{rejectedData.accountBranch}}</td>\r\n                    <td>{{rejectedData.businessProductName}}</td>\r\n                  </tr>\r\n                </tbody>\r\n\r\n              </table>\r\n              <table>\r\n                <thead class=\"col3\">\r\n                  <th>Account Type</th>\r\n                  <th>Application By</th>\r\n                </thead>\r\n                <tbody class=\"col4\">\r\n                  <tr>\r\n                    <td>{{rejectedData.accountType}}</td>\r\n                    <td>{{rejectedData.createdBy}}</td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </form>\r\n          </div>\r\n        </div>\r\n        <br />\r\n\r\n      </mat-card>\r\n\r\n    </div>\r\n  <!-- </div> -->\r\n  <br>\r\n</div>\r\n</div>\r\n<!-- Body Ends -->","<div >\r\n    <mat-dialog-content>\r\n      <div fxLayout=\"row\" class=\"contain\">\r\n        <mat-icon style=\"padding-left: 100%;\"class=\"backIcon\" (click)=\"goToClose()\">close</mat-icon>\r\n    </div>\r\n      <h1>Loan Repayment Details</h1>\r\n      <form class=\"mt-32\" [formGroup]=\"loanRepaymentForm\">\r\n        <div fxLayout=\"row wrap\" fxLayout.lt-sm=\"column\" >\r\n            <div fxFlex=\"33.33\" class=\"pr-16\">\r\n                <mat-label>Bank Name</mat-label>\r\n                <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                   <input matInput name=\"bankName\" formControlName=\"bankName\"/> \r\n                </mat-form-field>\r\n              </div>\r\n            <div fxFlex=\"33.33\" class=\"pr-16\">\r\n                <mat-label>Branch Code </mat-label>\r\n                <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                  <input matInput name=\"branchCode\" formControlName=\"branchCode\" />\r\n                </mat-form-field>\r\n              </div>\r\n        \r\n              <div fxFlex=\"33.33\" class=\"pr-16\">\r\n                <mat-label>Customer Account</mat-label>\r\n                <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                  <input matInput name=\"customerAccount\" formControlName=\"customerAccount\"/>\r\n                </mat-form-field>\r\n              </div>\r\n        </div>\r\n    \r\n        <div fxLayout=\"row wrap\">\r\n\r\n            <div fxFlex=\"33.33\" class=\"pr-16\">\r\n                <mat-label>First Repayment Date</mat-label>\r\n                <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                    <input matInput [matDatepicker]=\"pickerDOB1\" name=\"firstRepaymentDate\" formControlName=\"firstRepaymentDate\"\r\n                    [max]=\"tomorrow\" >\r\n                        <mat-datepicker-toggle matSuffix [for]=\"pickerDOB1\"></mat-datepicker-toggle>\r\n                        <mat-datepicker #pickerDOB1></mat-datepicker> \r\n                </mat-form-field>\r\n              </div>\r\n              <div fxFlex=\"33.33\" class=\"pr-16\">\r\n                <mat-label>Loan Tenure</mat-label>\r\n                <div class=\"pb-1\">\r\n                  \r\n                \r\n                       <div fxLayout=\"row\" fxLayoutGap=\"5px\" fxLayoutAlign=\"space-between center\" >\r\n                      <div >\r\n                        <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                          <mat-select name=\"year\" placeholder=\"Year\" formControlName=\"year\"  >\r\n                          <mat-option *ngFor=\"let year of years\" [value]=\"year\">{{ year }}</mat-option> \r\n                          </mat-select>\r\n                       </mat-form-field> \r\n                      </div>\r\n        \r\n                      <div>\r\n                        <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                          <mat-select name=\"month\" placeholder=\"Month\" formControlName=\"month\" >\r\n                          <mat-option *ngFor=\"let month of months\" [value]=\"month\">{{ month }}</mat-option> \r\n                           </mat-select>\r\n                        </mat-form-field>\r\n                      </div>\r\n        \r\n                      <div>\r\n                        <mat-form-field class=\"full-width\"  appearance=\"fill\">\r\n                          <mat-select name=\"day\"  placeholder=\"Day\" formControlName=\"day\"  >\r\n                          <mat-option *ngFor=\"let day of days\" [value]=\"day\">{{ day }}</mat-option> \r\n                        </mat-select>\r\n                      </mat-form-field>\r\n                      </div>  \r\n                    </div>\r\n                </div>\r\n              </div>\r\n              <div fxFlex=\"33.33\" class=\"pr-16\">\r\n              </div>\r\n        </div>\r\n\r\n        <div fxLayout=\"row wrap\">\r\n            <div fxFlex=\"33.33\" class=\"pr-16\">\r\n                <mat-label>Moratorium Period</mat-label>\r\n                <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                    <input matInput name=\"moraturioumPeriod\" formControlName=\"moraturioumPeriod\"  \r\n                    maxlength=\"6\"    (keypress)=\"_keyPress($event)\" />\r\n                    <!-- <input matInput [matDatepicker]=\"pickerDOB\" name=\"moraturioumPeriod\" formControlName=\"moraturioumPeriod\"\r\n                    [max]=\"tomorrow\" >\r\n                        <mat-datepicker-toggle matSuffix [for]=\"pickerDOB\"></mat-datepicker-toggle>\r\n                        <mat-datepicker #pickerDOB></mat-datepicker>  -->\r\n                </mat-form-field>\r\n              </div>\r\n          <div fxFlex=\"33.33\" class=\"pr-16\">\r\n            <mat-label>Type Of Repayment </mat-label>\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n              <mat-select name=\"typeOfRepayment\" formControlName=\"typeOfRepayment\">\r\n                <mat-option value=\"EMI\">EMI</mat-option>\r\n              </mat-select>\r\n            </mat-form-field>\r\n          </div>\r\n    \r\n\r\n         \r\n          <div fxFlex=\"33.33\" class=\"pr-16\">\r\n            <mat-label>Repayment Mode</mat-label>\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n              <input matInput name=\"repaymentMode\" formControlName=\"repaymentMode\"/>\r\n            </mat-form-field>\r\n          </div>\r\n        </div>\r\n  \r\n        <div fxLayout=\"row wrap\">\r\n            <div fxFlex=\"33.33\" class=\"pr-16\">\r\n                <mat-label>Repayment Frequency</mat-label>\r\n                <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                    <input matInput name=\"repaymentFrequency\" formControlName=\"repaymentFrequency\" /> \r\n                </mat-form-field>\r\n              </div>\r\n          <!-- <div fxFlex=\"33.33\" class=\"pr-16\">\r\n            <mat-label>Type Of Repayment </mat-label>\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n              <mat-select name=\"typeOfRepayment\" formControlName=\"typeOfRepayment\">\r\n                <mat-option value=\"EMI\">EMI</mat-option>\r\n              </mat-select>\r\n            </mat-form-field>\r\n          </div> -->\r\n    \r\n\r\n<!--          \r\n          <div fxFlex=\"33.33\" class=\"pr-16\">\r\n            <mat-label>Repayment Mode</mat-label>\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n              <input matInput name=\"repaymentMode\" formControlName=\"repaymentMode\"  \r\n              maxlength=\"10\"\r\n              (keypress)=_keyPress($event) />\r\n            </mat-form-field>\r\n          </div>\r\n     -->\r\n         \r\n        </div>\r\n       \r\n      </form>\r\n    </mat-dialog-content>\r\n    <mat-dialog-actions align=\"end\">\r\n      <button mat-button (click)=\"submitForm1()\">\r\n        Update\r\n      </button>\r\n      <button mat-button (click)=\"goToClose()\">Close</button>\r\n    </mat-dialog-actions>\r\n</div>","import { Component, OnInit,Inject, ChangeDetectorRef } from '@angular/core';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { AppLoaderService } from 'app/shared/services/app-loader/app-loader.service';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport * as moment from 'moment';\r\nimport { DatePipe } from '@angular/common';\r\nimport { TasksummaryService } from '../../tasksummary.service';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-loan-repayment-details-update',\r\n  templateUrl: './loan-repayment-details-update.component.html',\r\n  styleUrls: ['./loan-repayment-details-update.component.scss']\r\n})\r\nexport class LoanRepaymentDetailsUpdateComponent implements OnInit {\r\n  loanAccountId: any;\r\n  loanaccountID: any;\r\n  loanRepaymentForm: FormGroup;\r\n  disbursementDetails: any;\r\n  selectedDay: number = 1;\r\n  days: any[] = [];\r\n  months: any[] = [];\r\n  selectedYear: number;\r\n  years: any[] = [];\r\n  day: number;\r\n  year: number;\r\n  repaymentDetails: any;\r\n  tomorrow = new Date();\r\n\r\n  \r\n  statusArr: any = ['BACKLOG', 'ONGOING', 'APPROVED', 'REJECTED']\r\n  arr: any = ['BACKLOG', 'ONGOINGArr', 'APPROVEDArr', 'REJECTEDArr']\r\n  BACKLOGArr: any = [];\r\n  ONGOINGArr: any = [];\r\n  REJECTEDArr: any = [];\r\n  APPROVEDArr: any = [];\r\n  \r\n  BACKLOGTotalPages: number = 0\r\n  ONGOINGTotalPages: number = 0\r\n  REJECTEDTotalPages: number = 0\r\n  APPROVEDTotalPages: number = 0\r\n\r\n  BACKLOGCount: number = 0\r\n  ONGOINGCount: number = 0\r\n  REJECTEDCount: number = 0\r\n  APPROVEDCount: number = 0\r\n\r\n  BACKLOGImage: any[] = [];\r\n  ONGOINGImage: any[] = [];\r\n  REJECTEDImage: any[] = [];\r\n  APPROVEDImage: any[] = [];\r\n\r\n  BACKLOGTotalRecords: number = 0;\r\n  ONGOINGTotalRecords: number = 0;\r\n  REJECTEDTotalRecords: number = 0;\r\n  APPROVEDTotalRecords: number = 0;\r\n\r\n  BACKLOGPage: number = 0;\r\n  ONGOINGPage: number = 0;\r\n  REJECTEDPage: number = 0;\r\n  APPROVEDPage: number = 0\r\n  \r\n\r\n  constructor(private apiService: ApiService, @Inject(MAT_DIALOG_DATA) public data: any, private fb: FormBuilder,\r\n  private loader: AppLoaderService, private taskSumService: TasksummaryService, private cdr: ChangeDetectorRef,\r\n    private ls: LocalStoreService, public dialogRef: MatDialogRef<LoanRepaymentDetailsUpdateComponent>, private snack: MatSnackBar,)\r\n  { \r\n    this.tomorrow.setDate(this.tomorrow.getDate());\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.selectedYear = new Date().getFullYear();\r\n    for (let year = 0; year <= 50; year++) {\r\n      this.years.push(year+ \" year\");\r\n    }\r\n    for (let month = 0; month <= 11; month++) {\r\n      this.months.push(month+ \" month\");\r\n    }\r\n    for (let day = 0; day <= 30; day++) {\r\n      this.days.push(day+ \" day\");\r\n    }\r\n    this.loanaccountID = this.data.loanAccountId;\r\n    console.log('loanaccountID', this.loanaccountID)\r\n    this.buildRepaymentForm(this.data)\r\n  }\r\n\r\n  getRepaymenttDetails() {\r\n      this.loader.open();\r\n      this.apiService.loanRepaymentFetchById(this.loanaccountID).subscribe(\r\n      (repaymentDetails) => {\r\n      this.loader.close();\r\n      this.repaymentDetails = repaymentDetails;\r\n      this.buildRepaymentForm(this.repaymentDetails);\r\n      this.loanRepaymentForm.value.loanTenure = this.repaymentDetails.loanTenure;\r\n      this.loanRepaymentForm.value.maturityeDate = this.repaymentDetails.maturityeDate;\r\n      this.loanRepaymentForm.value.firstRepaymentDate = this.repaymentDetails.firstRepaymentDate;\r\n      this.loanRepaymentForm.value.moratariumPeriod = this.repaymentDetails.moratariumPeriod;\r\n      this.loanRepaymentForm.value.branchCode = this.repaymentDetails.branchCode;\r\n      this.loanRepaymentForm.value.customerAccount = this.repaymentDetails.customerAccount;\r\n      this.loanRepaymentForm.value.bankName = this.repaymentDetails.bankName;\r\n      this.loanRepaymentForm.value.typeOfRepayment = this.repaymentDetails.typeOfRepayment;\r\n      this.loanRepaymentForm.value.repaymentMode = this.repaymentDetails.repaymentMode;\r\n      this.loanRepaymentForm.value.repaymentFrequency = this.repaymentDetails.repaymentFrequency\r\n      },\r\n      (err: any) => {\r\n        this.loader.close();\r\n      }\r\n    );\r\n  }\r\n\r\n  _keyPress(event: any) {\r\n    // console.log(\"key\",event);\r\n    const pattern = /[0-9]/;\r\n    let inputChar = String.fromCharCode(event.charCode);\r\n    console.log(\"inputChar\",inputChar);\r\n    inputChar=inputChar.toString();\r\n    console.log(\"inputChar1\",inputChar);\r\n    inputChar=inputChar\r\n    if (!pattern.test(inputChar)) {\r\n        event.preventDefault();\r\n    }\r\n   }\r\n   buildRepaymentForm(data?) {\r\n    console.log('item',data)\r\n   \r\n     \r\n    this.loanRepaymentForm= this.fb.group({\r\n        loanAccountId: [this.loanaccountID],\r\n        disbursementMode:[data ? data?.loanRepaymentInfo?.disbursementMode:''],\r\n        firstRepaymentDate: [data ? data?.loanRepaymentInfo?.firstRepaymentDate : ''],\r\n        moraturioumPeriod: [data ? data?.loanRepaymentInfo?.moraturioumPeriod : ''],\r\n        typeOfRepayment:[data ? data?.loanRepaymentInfo?.typeOfRepayment:''],\r\n        branchCode: [data ? data?.loanRepaymentInfo?.branchCode : ''],\r\n        customerAccount:[data ? data?.loanRepaymentInfo?.customerAccount:''],\r\n        bankName: [data ? data?.loanRepaymentInfo?.bankName : ''],\r\n        repaymentMode: [data ? data?.loanRepaymentInfo?.repaymentMode : ''],\r\n        repaymentFrequency:[data ? data?.loanRepaymentInfo?.repaymentFrequency:''],\r\n   \r\n    //  firstRepaymentDate: [ data ? data?.loanRepaymentInfo  ? new Date(data?.loanRepaymentInfo.firstRepaymentDate).toISOString().substring(0, 10): ''],\r\n        loanTenure:[data ? data?.loanRepaymentInfo?.loanTenure:''],\r\n        day: [data ? Number(data?.loanRepaymentInfo?.loanTenure.split(\"-\")[2]) : \"\"],\r\n        month: [data ? data?.info?.loanRepaymentInfo.split(\"-\")[1] : \"\"],\r\n        year: [data ? Number(data?.loanRepaymentInfo?.loanTenure.split(\"-\")[0]) : \"\"],\r\n  \r\n \r\n    });\r\n   }\r\n\r\n  goToClose(): void {\r\n    this.dialogRef.close();\r\n    this.apiService.loanRepaymentFetchById(this.loanaccountID).subscribe((repaymentDetails: any) => {\r\n      console.log(\"All Account Service\", repaymentDetails);\r\n      this.repaymentDetails = repaymentDetails;\r\n      console.log(\"this.accountDetails\", this.repaymentDetails);\r\n      console.log('form',this.loanRepaymentForm.value)\r\n   });\r\n   \r\n  }\r\n  submitForm1() {\r\n  \r\n    \r\n    let now = new Date();\r\n    now=this.loanRepaymentForm.value.firstDisbursementDate;\r\n    console.log(\"firstDisbursementDate\",this.loanRepaymentForm.value.firstDisbursementDate);\r\n    \r\n    var dateStringWithTime = moment(now).format('YYYY-MMM-DD HH:MM:SS');\r\n    console.log(\"dateStringWithTime\",dateStringWithTime);\r\n    const renewData =\r\n    this.loanRepaymentForm.value.year +\r\n    \"-\" +\r\n    this.loanRepaymentForm.value.month +\r\n    \"-\" +\r\n    this.loanRepaymentForm.value.day;\r\n  this.loanRepaymentForm.get(\"loanTenure\").setValue(renewData);\r\n  delete this.loanRepaymentForm.value.year;\r\n  delete this.loanRepaymentForm.value.month;\r\n  delete this.loanRepaymentForm.value.day;\r\n\r\n    let payload={\r\n      // loanAccountId: this.showEditOption ? this.loanaccountID : null,\r\n      loanAccountId: this.data.loanAccountId,\r\n      typeOfRepayment:this.loanRepaymentForm.value.typeOfRepayment,\r\n      loanTenure:this.loanRepaymentForm.value.loanTenure,\r\n      maturityeDate: this.loanRepaymentForm.value.maturityeDate,  \r\n      firstRepaymentDate: this.loanRepaymentForm.value.firstRepaymentDate,  \r\n      moratariumPeriod:this.loanRepaymentForm.value.moratariumPeriod,\r\n      branchCode:this.loanRepaymentForm.value.branchCode,\r\n      customerAccount: this.loanRepaymentForm.value.customerAccount,\r\n      bankName: this.loanRepaymentForm.value.bankName,\r\n      repaymentMode: this.loanRepaymentForm.value.repaymentMode,\r\n      repaymentFrequency: this.loanRepaymentForm.value.repaymentFrequency\r\n      \r\n  \r\n  \r\n    }\r\n    console.log(\"payload\",payload)\r\n    this.apiService.loanRepaymentSave(payload).subscribe(data => {\r\n      this.loanaccountID = this.data.loanAccountId;\r\n      console.log('loanaccountID', this.loanaccountID)\r\n      this.assign(this.data.loanAccountId)\r\n      if (data === 200 || data !== null) {\r\n        let statusModel = {\r\n          loanAccountId: this.data.loanAccountId,\r\n          status: \"ONGOING\"\r\n        };\r\n        this.apiService.updateLoanDetailsStatus(statusModel).subscribe(data => {\r\n        });\r\n      //  sessionStorage.setItem('loanAccountId', data.loanAccountid);\r\n        let fundStatus = {\r\n          loanAccountid: this.data.loanAccountId\r\n          \r\n        };\r\n       \r\n\r\n        this.ls.setItem('fundByStatus', fundStatus);\r\n        this.ls.setItem('accountType', data.accountType);\r\n        this.ls.setItem('productName',data.businessProductName);\r\n        \r\n        this.loanaccountID = this.data.loanAccountId;\r\n        console.log(\"this.productaccountID\",this.loanaccountID);\r\n        this.snack.open('Data Updated!', 'OK', {\r\n          duration: 4000,\r\n          verticalPosition: 'top',\r\n          horizontalPosition: 'right'\r\n        });\r\n        this.getDataOnLoad(); \r\n      }\r\n      if( data === 500){\r\n        this.snack.open('Not able to connect to server!', 'INTERNAL SERVER ERROR', {\r\n          duration: 4000,\r\n          verticalPosition: 'top',\r\n          horizontalPosition: 'right'\r\n        });\r\n        console.log(\"500 error\")\r\n      }\r\n      \r\n      this.goToClose();\r\n    })\r\n  }\r\n  assign(valueForaccId) {\r\n    this.apiService.setAccountId({\r\n      loanAccountId: valueForaccId\r\n    });\r\n    console.log(\"loan\", this.loanAccountId)\r\n  }\r\n\r\n    \r\n  async getDataOnLoad() {\r\n    for (let index = 0; index < this.statusArr.length; index++) {\r\n      const statusItem = this.statusArr[index];\r\n      this.fetchCustomerInfo(statusItem);\r\n    }\r\n\r\n  }\r\n\r\n   fetchCustomerInfo(status:string){\r\n   \r\n    this.taskSumService.getallLoanAccountData(status)\r\n            .subscribe((custResp:any) => {\r\n              console.log(\"Response\", custResp);\r\n              this.updateStatusResponse(status, custResp);\r\n            });\r\n  }\r\n\r\n  updateStatusResponse(status, data){\r\n    console.log(\"data\", data)\r\n    console.log(\"status\", status)\r\n      if (status == 'ONGOING') {\r\n      this.ONGOINGArr = data?.loanList;\r\n      this.ONGOINGTotalPages = data?.totalPages;\r\n      this.ONGOINGTotalRecords = data?.totalNoOfElements;\r\n    }\r\n \r\n\r\n    this.cdr.markForCheck();\r\n  }\r\n\r\n}\r\n\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\n\r\n@Component({\r\n  selector: 'app-update-additional-info',\r\n  templateUrl: './update-additional-info.component.html',\r\n  styleUrls: ['./update-additional-info.component.scss']\r\n})\r\nexport class UpdateAdditionalInfoComponent implements OnInit {\r\n  additionalInfoUpdateForm: FormGroup\r\n  arrayEmploymentType: any;\r\n  arrayEmployerName: any;\r\n  kycList: string[] = ['INITIATED', 'UNDER_PROCESS', 'APPROVED', 'REJECTED', 'VERIFIED',];\r\n  othersFlag: boolean;\r\n  customerId: any;\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public additionalInfo: any,\r\n    private dialogRef: MatDialogRef<UpdateAdditionalInfoComponent>,\r\n    private formBuilder: FormBuilder,\r\n    private apiService: ApiService,\r\n    private ls: LocalStoreService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    console.log(this.additionalInfo);\r\n    this.customerId = this.ls.getItem('customerId')\r\n    this.getEmploymentType(\"employment_type\");\r\n    this.getEmployerName(\"employer_name\");\r\n    if (this.additionalInfo) {\r\n      this.buildAdditionalInfoForm(this.additionalInfo)\r\n      this.OnInput(this.additionalInfoUpdateForm.get('salary').value)\r\n    }\r\n    else {\r\n      this.buildAdditionalInfoForm()\r\n    }\r\n  }\r\n  buildAdditionalInfoForm(data?) {\r\n    this.additionalInfoUpdateForm = this.formBuilder.group({\r\n      employmentType: [data ? data.employmentType : '', [Validators.required]],\r\n      employerName: [data ? data.employerName : '', [Validators.required]],\r\n      otherEmployerName: [data ? data.otherEmployerName : ''],\r\n      salary: [data ? data.salary : '', [Validators.required]],\r\n      kycReference: [data ? data.kycReference : '', [Validators.required]],\r\n      kycStatus: [data ? data.kycStatus : '', [Validators.required]]\r\n    })\r\n\r\n  }\r\n  getEmploymentType(key: string) {\r\n    this.apiService.getDropDownValues(key).subscribe((data) => {\r\n      this.arrayEmploymentType = data;\r\n      console.log(this.arrayEmploymentType);\r\n\r\n    });\r\n  }\r\n  getEmployerName(key: string) {\r\n    this.apiService.getDropDownValues(key).subscribe((data) => {\r\n      this.arrayEmployerName = data;\r\n    });\r\n  }\r\n  OnInput(val) {\r\n    let salary = val.toString().replace(/,/g, '').split(\".\");\r\n    salary[0] = salary[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\r\n    let final = salary.join(\".\");\r\n    console.log(\"final\", final);\r\n    this.additionalInfoUpdateForm.controls.salary.setValue(final);\r\n  }\r\n\r\n  letterOnly(event) {\r\n    var charCode = event.keyCode;\r\n    if ((charCode > 64 && charCode < 91) || (charCode > 96 && charCode < 123) || charCode == 8)\r\n      return true;\r\n    else\r\n      return false;\r\n  }\r\n  _keyPress1(event: any) {\r\n    const pattern = /^[0-9]*\\.?[0-9]*$/;\r\n    let inputChar = String.fromCharCode(event.charCode);\r\n    if (!pattern.test(inputChar)) {\r\n      event.preventDefault();\r\n    }\r\n    const input = event.target.value;\r\n    if (input.length === 0 && event.which === 48) {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n  onSubmit() {\r\n    let obj: any = {};\r\n    obj.customerId = this.customerId\r\n    obj.customerAdditionalInfo = this.additionalInfoUpdateForm.value\r\n    obj.customerAdditionalInfo.salary = obj.customerAdditionalInfo.salary.replaceAll(',', '');\r\n    this.apiService.insertNewUserOnboarding(obj).subscribe((result) => {\r\n      console.log(result);\r\n      this.dialogRef.close({\r\n        status: 'INITIATED',\r\n        resp: this.additionalInfoUpdateForm.value\r\n      })\r\n    });\r\n  }\r\n  close() {\r\n    this.dialogRef.close({\r\n      status: \"UNDER_PROCESS\"\r\n    })\r\n  }\r\n}\r\n","<div fxLayout=\"row\" fxLayoutAlign=\"end\">\r\n    <mat-icon class=\"closeIcon\" (click)=\"close()\">close</mat-icon>\r\n</div>\r\n<h1>Additional Information</h1>\r\n<mat-dialog-content>\r\n    <form [formGroup]=\"additionalInfoUpdateForm\">\r\n        <div>\r\n        <h3 style=\"font-size: 18px;\">Employment Information</h3>\r\n            <div>\r\n                <div fxFlex=\"33.33%\" fxFlex.xs=\"100%\" class=\"full-width\">\r\n                    <mat-hint class=\"hintClass\">Employment Type*</mat-hint>\r\n                    <mat-card class=\"inputCard\">\r\n                        <mat-select name=\"employmentType\" required formControlName=\"employmentType\">\r\n                            <mat-option value=\"\">Select</mat-option>\r\n                            <mat-option *ngFor=\"let empType of arrayEmploymentType\" [value]=\"empType\">\r\n                                {{empType}}\r\n                            </mat-option>\r\n                        </mat-select>\r\n                    </mat-card>\r\n                    <mat-error\r\n                        *ngIf=\"additionalInfoUpdateForm.controls['employmentType'] && additionalInfoUpdateForm.controls['employmentType'].touched && !additionalInfoUpdateForm.controls['employmentType'].valid\">\r\n                        &nbsp; &nbsp; Select Employment Type\r\n                    </mat-error>\r\n                </div>\r\n                <div fxFlex=\"33.33%\" fxFlex.xs=\"100%\" class=\"full-width\">\r\n                    <mat-hint class=\"hintClass\">Employer Name*</mat-hint>\r\n                    <mat-card class=\"inputCard\">\r\n                        <mat-select name=\"employerName\" formControlName=\"employerName\" required>\r\n                            <mat-option value=\"\">Select</mat-option>\r\n                            <mat-option *ngFor=\"let emprName of arrayEmployerName \" [value]=\"emprName\">\r\n                                {{emprName}}\r\n                            </mat-option>\r\n                        </mat-select>\r\n                    </mat-card>\r\n                    <mat-error\r\n                        *ngIf=\"additionalInfoUpdateForm.controls['employerName'] && additionalInfoUpdateForm.controls['employerName'].touched && !additionalInfoUpdateForm.controls['employerName'].valid\">\r\n                        &nbsp; &nbsp; Select Employment Name\r\n                    </mat-error>\r\n                </div>\r\n                <div fxFlex=\"33.33%\" fxFlex.xs=\"100%\" class=\"full-width\"\r\n                    *ngIf=\"additionalInfoUpdateForm.controls['employerName']?.value=='Others'\">\r\n                    <mat-hint class=\"hintClass\">\r\n                        Other Employer Name*</mat-hint>\r\n                    <mat-card class=\"inputCard\">\r\n                        <input required type=\"text\" (keypress)=\"letterOnly($event)\" matInput\r\n                            formControlName=\"otherEmployerName\">\r\n                    </mat-card>\r\n                    <mat-error\r\n                        *ngIf=\"additionalInfoUpdateForm.controls['otherEmployerName'] && additionalInfoUpdateForm.controls['otherEmployerName'].touched && !additionalInfoUpdateForm.controls['otherEmployerName'].valid\">\r\n                        &nbsp; &nbsp; Enter the Employer Name\r\n                    </mat-error>\r\n                </div>\r\n                <div fxFlex=\"33.33%\" fxFlex.xs=\"100%\" class=\"full-width\">\r\n                    <mat-hint class=\"hintClass\">Salary*</mat-hint>\r\n                    <mat-card class=\"inputCard\">\r\n                        <input type=\"text\" formControlName=\"salary\" maxLength='14' required (keypress)=\"_keyPress1($event)\" matInput\r\n                        (keyup)=\"OnInput($event.target.value)\"\r\n                            name=\"salary\">\r\n                    </mat-card>\r\n                </div>\r\n            </div>\r\n\r\n            <h3 style=\"font-size: 18px;\">KYC Information</h3>\r\n            <div>\r\n                <div fxFlex=\"33.33%\" fxFlex.xs=\"100%\" class=\"full-width\">\r\n                    <mat-hint class=\"hintClass\">KYC Reference</mat-hint>\r\n                    <mat-card class=\"inputCard\">\r\n                        <input readonly=\"true\" type=\"text\" formControlName=\"kycReference\"\r\n                             matInput name=\"kycReference\" \r\n                             maxLength='4'>\r\n                    </mat-card>\r\n                </div>\r\n                <div fxFlex=\"33.33%\" fxFlex.xs=\"100%\" class=\"full-width\">\r\n                    <mat-hint class=\"hintClass\">KYC Status</mat-hint>\r\n                    <mat-card class=\"inputCard\">\r\n                        <mat-select formControlName=\"kycStatus\" read>\r\n                            <mat-option value=\"\">Select\r\n                            </mat-option>\r\n                            <mat-option *ngFor=\"let kyc of kycList\" [value]=\"kyc\">\r\n                                {{kyc}}\r\n                            </mat-option>\r\n                        </mat-select>\r\n                    </mat-card>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    </form>\r\n</mat-dialog-content>\r\n<div fxLayout=\"row\" fxLayoutAlign=\"end center\" fxLayoutGap=\"25px\">\r\n<button type=\"button\" class=\"editbtn\" mat-raised-button [disabled]=\"additionalInfoUpdateForm.invalid\"\r\n(click)=\"onSubmit()\">Save</button>\r\n&nbsp;&nbsp;&nbsp;\r\n<button type=\"button\" class=\"cancelbtn\" (click)=\"close()\">\r\nCancel\r\n</button>\r\n</div>","import { Component, OnInit, ChangeDetectorRef, EventEmitter, Output, HostListener } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { SortCriteria } from 'app/shared/pipes/custom-task-summary-sorting.pipe';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { Subject } from 'rxjs';\r\nimport { debounceTime } from 'rxjs/operators';\r\nimport { ApproverComponent } from '../approver/approver.component';\r\nimport { CardAccountApproverComponent } from '../card-account-approver/card-account-approver.component';\r\nimport { TasksummaryService } from '../tasksummary.service';\r\nimport * as _ from 'lodash';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-card-origination-task-summary',\r\n  templateUrl: './card-origination-task-summary.component.html',\r\n  styleUrls: ['./card-origination-task-summary.component.scss']\r\n})\r\n\r\nexport class CardOriginationTaskSummaryComponent implements OnInit {\r\n  data: any;\r\n  radioButtonSelected: any;\r\n  searchText;\r\n  statusArr: any = ['ONGOING', 'BACKLOG', 'APPROVED', 'REJECTED'];\r\n\r\n  BACKLOGArr: any = [];\r\n  ONGOINGArr: any = [];\r\n  REJECTEDArr: any = [];\r\n  APPROVEDArr: any = [];\r\n\r\n  BACKLOGTotalPages: number = 0\r\n  ONGOINGTotalPages: number = 0\r\n  REJECTEDTotalPages: number = 0\r\n  APPROVEDTotalPages: number = 0\r\n\r\n  BACKLOGTotalRecords: number = 0;\r\n  ONGOINGTotalRecords: number = 0;\r\n  REJECTEDTotalRecords: number = 0;\r\n  APPROVEDTotalRecords: number = 0;\r\n\r\n  BACKLOGPage: number = 0;\r\n  ONGOINGPage: number = 0;\r\n  REJECTEDPage: number = 0;\r\n  APPROVEDPage: number = 0;\r\n\r\n  loading: boolean;\r\n\r\n  image: Object;\r\n  searchable: boolean = false;\r\n  isScroll: boolean = true;\r\n  //variable for sorting data\r\n  public criteria: SortCriteria;\r\n\r\n\r\n  @Output() setValue: EventEmitter<string> = new EventEmitter();\r\n  private _searchSubject: Subject<string> = new Subject();\r\n  noDataFound: boolean = false;\r\n\r\n  constructor(public dialog: MatDialog, private sanitizer: DomSanitizer, public tasksummaryService: TasksummaryService,\r\n    private apiService: ApiService, public cdr: ChangeDetectorRef,) {\r\n    this._setSearchSubscription();\r\n  }\r\n  @HostListener('scroll', ['$event'])\r\n  onScroll(event: any) {\r\n    if(this.isScroll){\r\n      this.ONGOINGPage++;\r\n      this.getDataOnScroll(\"ONGOING\",this.ONGOINGPage,this.ONGOINGTotalPages);\r\n      this.BACKLOGPage++;\r\n      this.getDataOnScroll(\"BACKLOG\",this.BACKLOGPage, this.BACKLOGTotalPages);\r\n      this.APPROVEDPage++;\r\n      this.getDataOnScroll(\"APPROVED\", this.APPROVEDPage, this.APPROVEDTotalPages);\r\n      this.REJECTEDPage++;\r\n      this.getDataOnScroll(\"REJECTED\", this.REJECTEDPage, this.REJECTEDTotalPages);\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    var task:boolean=true;\r\n    this.apiService.setTask(task);\r\n    /* @called :: on screen load */\r\n    this.getDataOnLoad();\r\n\r\n    /* @called :: to refresh data for every 1min interval */\r\n    // setInterval(() => { this.getDataOnLoad() }, 60000);\r\n\r\n  }\r\n\r\n  /* @method :: on keyup used to search the data */\r\n  public updateSearch(searchTextValue: string) {\r\n    this._searchSubject.next(searchTextValue);\r\n  }\r\n\r\n  /* @method :: on keyup to avoid api calling for each time , using subject from rxjs library and debounce concept */\r\n  private _setSearchSubscription() {\r\n    this._searchSubject.pipe(\r\n      debounceTime(1000)\r\n    ).subscribe((searchValue: string) => {\r\n      this.searchKycid(searchValue);\r\n    });\r\n  }\r\n\r\n  /* @method :: to load all data on screen load */\r\n  getDataOnLoad() {\r\n    for (let index = 0; index < this.statusArr.length; index++) {\r\n      const statusItem = this.statusArr[index];\r\n      this.getAllAccDetails(statusItem, 0, 0);\r\n    }\r\n  }\r\n\r\n  getAllAccDetails(status: string, page: number, size: number) {\r\n    this.tasksummaryService.getCardAccDetails(status)\r\n      .subscribe((data: any) => {\r\n        console.log(\"Response\", data);\r\n        this.updateStatusResponse(status,data);\r\n      });\r\n  }\r\n\r\n  updateStatusResponse(status, data){\r\n    if(status == 'ONGOING'){\r\n      this.ONGOINGArr = data.cardList;\r\n      this.ONGOINGTotalPages = data.totalPages;\r\n      this.ONGOINGTotalRecords = data.totalNoOfElements;\r\n    }\r\n    else if(status == 'BACKLOG'){\r\n      this.BACKLOGArr = data.cardList;\r\n      this.BACKLOGTotalPages = data.totalPages;\r\n      this.BACKLOGTotalRecords = data.totalNoOfElements;\r\n    }\r\n    else if(status == 'APPROVED'){\r\n      this.APPROVEDArr = data.cardList;\r\n      this.APPROVEDTotalPages = data.totalPages;\r\n      this.APPROVEDTotalRecords = data.totalNoOfElements;\r\n    }\r\n    else if(status == 'REJECTED'){ \r\n      this.REJECTEDArr = data.cardList;\r\n      this.REJECTEDTotalPages = data.totalPages;\r\n      this.REJECTEDTotalRecords = data.totalNoOfElements;\r\n      console.log(\"this.REJECTEDArr\",this.REJECTEDArr);\r\n    }\r\n\r\n    this.cdr.markForCheck();\r\n}\r\n\r\n  /* @method :: to load data on scroll of data*/\r\n  onScrollingFinished(e, status) {\r\n    if(status == 'ONGOING'){\r\n      this.ONGOINGPage++;\r\n      this.getDataOnScroll(status,this.ONGOINGPage,this.ONGOINGTotalPages);\r\n     }else if(status == 'BACKLOG'){\r\n     this.BACKLOGPage++;\r\n     this.getDataOnScroll(status,this.BACKLOGPage, this.BACKLOGTotalPages);\r\n     }else if(status == 'APPROVED'){\r\n       this.APPROVEDPage++;\r\n       this.getDataOnScroll(status, this.APPROVEDPage, this.APPROVEDTotalPages);\r\n     }else if(status == 'REJECTED'){ \r\n       this.REJECTEDPage++;\r\n       this.getDataOnScroll(status, this.REJECTEDPage, this.REJECTEDTotalPages);\r\n     }\r\n  }\r\n\r\n  /* @method :: to call service ,when scroll method called */\r\n  getDataOnScroll(status,page,totalPage) {\r\n    console.log('---------scrolled----------')\r\n    if (page === totalPage) {\r\n      console.log('No scroll requied')\r\n      return;\r\n    }\r\n    this.tasksummaryService.getAllCardAccDetailOnScroll(status, page)\r\n        .subscribe((data:any) => {\r\n          this.updateDataOnScroll(status, data.cardList);\r\n          this.cdr.markForCheck();\r\n        });\r\n  }\r\n  \r\n  gotoapproverpage(data, status, colCode) {\r\n    // console.log('data:: ', data);\r\n    this.tasksummaryService.cardStatusData(status);\r\n    localStorage.setItem('CustomerColorCode', colCode);\r\n    const dialogRef = this.dialog.open(CardAccountApproverComponent,\r\n      {\r\n        panelClass: 'full-width-dialog',\r\n        data: data,\r\n        width: '80%',\r\n        disableClose: true\r\n      });\r\n    dialogRef.afterClosed().subscribe((submit) => {\r\n      // console.log('submit :: ', submit);\r\n      if (submit.data === 'REJECTED' || submit.data === 'APPROVED' || submit.data === 'BACKLOG' || submit.data === 'ONGOING') {\r\n        this.getDataOnLoad()\r\n      }\r\n    })\r\n  }\r\n  /* @method :: search the data locally on the loaded data array and if no data found in array call api */\r\n  searchKycid(searchTerm) {\r\n    let text:any;\r\n      let params:any;\r\n      if(searchTerm===''){\r\n        console.log('empty')\r\n        this.getDataOnLoad();\r\n        this.isScroll = true;\r\n        return;\r\n      }\r\n      if(this.isNum(searchTerm)){\r\n        if(searchTerm.length == 10){\r\n          console.log(\"contact\");\r\n          text=this.searchText.trim();\r\n          params = 'phoneNumber='+text;\r\n        }\r\n        else{\r\n          console.log(\"cardId\");\r\n          text=this.searchText.trim();\r\n          this.tasksummaryService.getCardAccSearchData1(text)\r\n          .subscribe(data => {\r\n            console.log(data)\r\n            if(data != null){\r\n              params = 'cardId='+text;\r\n              console.log('loan',params);\r\n            }\r\n            else{\r\n              console.log('not a loan')\r\n              params = 'customerId='+text;\r\n              console.log('customer',params);\r\n            }\r\n          })\r\n        }\r\n      }\r\n      else if(this.isString(searchTerm)){\r\n        if( /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(searchTerm)){\r\n          console.log(\"email\");\r\n          text=this.searchText.trim();\r\n          params = 'primaryEmailAdress='+text;\r\n        }\r\n        else{\r\n        console.log(\"name\");\r\n        text=this.searchText.trim();\r\n        params = 'customerName='+text;\r\n        }\r\n      }\r\n      setTimeout(() => {\r\n        this.getAccountData(params);\r\n      }, 100);\r\n      \r\n      this.isScroll = false;\r\n  }\r\n\r\n  // getAccountData(params) {\r\n  //   this.loading = true;\r\n  //   console.log(\"params :: \",params);\r\n  //   this.tasksummaryService.getCardSeracData(params)\r\n  //   .subscribe(data => {\r\n  //     this.loading = false;\r\n  //     console.log('resp data :: ', data);\r\n  //    this.resetSearchData();\r\n  //     for (let index = 0; index < data?.cardList.length; index++) {\r\n  //       const element = data?.cardList[index];\r\n  //       console.log('element ::',element);\r\n  //       this.searchResponseUpdate(element.status,data?.cardList[index]);\r\n        \r\n  //     }\r\n  //   })\r\n  // }\r\n\r\n  getAccountData(params) {\r\n    this.loading = true;\r\n    for (let index = 0; index < this.statusArr.length; index++) {\r\n      const statusItem = this.statusArr[index];\r\n     // this.fetchCustomerByStatus(statusItem,params,0);\r\n     if(statusItem == 'BACKLOG'){\r\n    this.tasksummaryService.getCardSeracData(params,statusItem)\r\n    .subscribe(data => {\r\n      this.BACKLOGTotalPages = data?.totalPages;\r\n      this.loading = false;\r\n      console.log('resp data :: ', data);\r\n      this.BACKLOGArr = [];\r\n      for (let index = 0; index < data?.cardList.length; index++) {\r\n        const element = data?.cardList[index];\r\n        this.BACKLOGArr.push(element);\r\n        \r\n      }\r\n      \r\n    })\r\n  }\r\n  else  if(statusItem == 'ONGOING'){\r\n    this.tasksummaryService.getCardSeracData(params,statusItem)\r\n    .subscribe(data => {\r\n      this.ONGOINGTotalPages = data?.totalPages;\r\n      this.loading = false;\r\n      console.log('resp data :: ', data);\r\n      this.ONGOINGArr = [];\r\n      for (let index = 0; index < data?.cardList.length; index++) {\r\n        const element = data.cardList[index];\r\n        this.ONGOINGArr.push(element);\r\n        \r\n      }\r\n       \r\n    })\r\n  }\r\n  else  if(statusItem == 'APPROVED'){\r\n    this.tasksummaryService.getCardSeracData(params,statusItem)\r\n    .subscribe(data => {\r\n      this.APPROVEDTotalPages = data?.totalPages;\r\n      this.loading = false;\r\n      console.log('resp data :: ', data);\r\n      this.APPROVEDArr = [];\r\n      for (let index = 0; index < data?.cardList.length; index++) {\r\n        const element = data.cardList[index];\r\n        this.APPROVEDArr.push(element);\r\n        \r\n      }\r\n       \r\n    })\r\n  }\r\n  else  if(statusItem == 'REJECTED'){\r\n    this.tasksummaryService.getCardSeracData(params,statusItem)\r\n    .subscribe(data => {\r\n      this.REJECTEDTotalPages = data?.totalPages;\r\n      this.loading = false;\r\n      console.log('resp data :: ', data);\r\n      this.REJECTEDArr = [];\r\n      for (let index = 0; index < data?.cardList.length; index++) {\r\n        const element = data.cardList[index];\r\n        this.REJECTEDArr.push(element);\r\n        \r\n      }\r\n    })\r\n  }\r\n  }\r\n  }\r\n\r\n  resetSearchData(){\r\n    this.ONGOINGArr = [];\r\n    this.BACKLOGArr = [];\r\n    this.APPROVEDArr = [];\r\n    this.REJECTEDArr = [];\r\n    this.cdr.markForCheck();\r\n  }\r\n\r\n  clear(){\r\n    this.searchText = \"\";\r\n    this.isScroll = true;\r\n    this.getDataOnLoad();\r\n  }\r\n\r\n  isNum(val){\r\n    return !isNaN(val)\r\n  }\r\n\r\n  isString(val){\r\n    return val;\r\n  }\r\n\r\n  searchResponseUpdate(status:string, data: any) {\r\n    console.log(\"status::\",status)\r\n    if(status == 'ONGOING'){\r\n      // this.ONGOINGArr = [];\r\n      this.ONGOINGArr.push(data);\r\n     }else if(status == 'BACKLOG'){\r\n      // this.BACKLOGArr = [];\r\n      this.BACKLOGArr.push(data);\r\n     }else if(status == 'APPROVED'){\r\n      // this.APPROVEDArr = [];\r\n      this.APPROVEDArr.push(data);\r\n     }else if(status == 'REJECTED'){ \r\n      // this.REJECTEDArr = [];\r\n      this.REJECTEDArr.push(data);\r\n     }\r\n    this.cdr.markForCheck();\r\n  }\r\n\r\n  updateDataOnScroll(status:string, data: any) {\r\n    if(status == 'ONGOING'){\r\n      const result = _.unionBy(this.ONGOINGArr, data, 'cardId');\r\n      this.ONGOINGArr = result;\r\n    }else if(status == 'BACKLOG'){\r\n      const result = _.unionBy(this.BACKLOGArr, data, 'cardId');\r\n      this.BACKLOGArr = result;\r\n    }else if(status == 'APPROVED'){\r\n      const result = _.unionBy(this.APPROVEDArr, data, 'cardId');\r\n      this.APPROVEDArr = result;\r\n    }else if(status == 'REJECTED'){ \r\n      const result = _.unionBy(this.REJECTEDArr, data, 'cardId');\r\n      this.REJECTEDArr = result;\r\n    }\r\n\r\n    this.cdr.markForCheck();\r\n  }\r\n\r\n\r\n  ngOnDestroy() {\r\n    this._searchSubject.unsubscribe();\r\n    this.BACKLOGArr = [];\r\n    this.APPROVEDArr = [];\r\n    this.REJECTEDArr = [];\r\n    this.ONGOINGArr = [];\r\n\r\n    this.ONGOINGPage = 0;\r\n    this.REJECTEDPage = 0;\r\n    this.APPROVEDPage = 0;\r\n    this.BACKLOGPage = 0;\r\n\r\n    this.ONGOINGTotalPages = 0;\r\n    this.REJECTEDTotalPages = 0;\r\n    this.APPROVEDTotalPages = 0;\r\n    this.BACKLOGTotalPages = 0;\r\n  }\r\n\r\n  getRandomColor(idx) {\r\n    var col0 = '#0d856b';\r\n    var col1 = '#d66f1b';\r\n    var col2 = '#9f52e7';\r\n    var col3 = '#e9318d';\r\n    var col4 = '#1175a3';\r\n    var col5 = '#e93131';\r\n    var col6 = '#2316d3';\r\n    var col7 = '#f557f5';\r\n    var col8 = '#d6c31b';\r\n    var col9 = '#40d61b';\r\n\r\n    if ((idx % 10) == 0) return col0;\r\n    if ((idx % 10) == 1) return col1;\r\n    if ((idx % 10) == 2) return col2;\r\n    if ((idx % 10) == 3) return col3;\r\n    if ((idx % 10) == 4) return col4;\r\n    if ((idx % 10) == 5) return col5;\r\n    if ((idx % 10) == 6) return col6;\r\n    if ((idx % 10) == 7) return col7;\r\n    if ((idx % 10) == 8) return col8;\r\n    if ((idx % 10) == 9) return col9;\r\n    return '#d86315';\r\n\r\n  }\r\n\r\n}\r\n\r\n","<!-- Header Starts -->\r\n<br>\r\n<div class=\"search-results1\" infiniteScroll [infiniteScrollDistance]=\"2\" [infiniteScrollThrottle]=\"500\"\r\n(scrolled)=\"onScroll($event)\" [scrollWindow]=\"false\"><br>\r\n<div class=\"m-333 mt-45\">\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"space-between start\" fxLayoutGap=\"10px\">\r\n      <div fxFlex=\"60\"  class=\"summaryDetails\">\r\n        <h2 class=\"task ml-24\">\r\n            Card Origination Task Summary\r\n        </h2>\r\n      </div>\r\n  \r\n      <div fxFlex=\"30\" fxLayoutAlign=\"end center\" class=\"searchTopDetails\">\r\n        <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n          <mat-label>Search</mat-label>\r\n          <div fxLayoutAlign=\"center\">\r\n            <input matInput name=\"search\" [(ngModel)]=\"searchText\" autocomplete=\"off\"\r\n            (keyup)=\"updateSearch($event.target.value)\" placeholder=\"Search Card ID or Name\">\r\n            <mat-spinner *ngIf=\"loading\" [diameter]=\"15\"></mat-spinner> \r\n          </div>\r\n          <mat-icon matPrefix class=\"my-icon\">search</mat-icon>\r\n          <button mat-button *ngIf=\"searchText\" matSuffix mat-icon-button (click)=\"clear()\">\r\n            <mat-icon>close</mat-icon>\r\n          </button>\r\n          <mat-hint>Search Card ID or Name</mat-hint>\r\n        </mat-form-field>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  \r\n  <!-- Header Ends -->\r\n  \r\n  <!-- Body Starts -->\r\n  <div class=\"content\">\r\n    <!-- <div fxLayout=\"row wrap\" fxLayoutGap=\"1px grid\"> -->\r\n      <div fxLayout=\"20%\" class=\"screen\">\r\n        <mat-card class=\"mat-elevation-z4\">\r\n          <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n            <span class=\"pl-6\">\r\n              <h2 class=\"statusFont\">Pending for approval ({{BACKLOGArr.length}}/{{BACKLOGTotalRecords}})</h2>\r\n              <!-- <h2>Backlog ({{BACKLOGArr}}/{{BACKLOGTotalRecords}})</h2> -->\r\n            </span>\r\n            <span class=\"more_vert_icon\">\r\n              <mat-icon>more_vert</mat-icon>\r\n            </span>\r\n          </div>\r\n  \r\n          <!-- <div class=\"search-results\" infiniteScroll [infiniteScrollDistance]=\"2\" [infiniteScrollThrottle]=\"500\"\r\n            (scrolled)=\"onScrollingFinished($event, 'INITIATED')\" [scrollWindow]=\"false\"> -->\r\n            <div >\r\n            <!-- | filter:searchText -->\r\n            <div class=\"detailedView\" *ngFor=\"let backlogData of BACKLOGArr  ;let i =index\"\r\n              (click)=\"gotoapproverpage(backlogData,'BACKLOG', getRandomColor(i+3))\">\r\n              <mat-icon class=\"fill-color-blue bookMark\">bookmark</mat-icon>\r\n              <mat-card-header class=\"head\">\r\n                <!-- <div mat-card-avatar> <img src=\"assets/images/personImg.png\"></div> -->\r\n                <div mat-card-avatar class=\"circle\">\r\n                  <div *ngIf=\"backlogData.profileImage == null; else showAvatar\">\r\n                    <app-photo [name]=\"backlogData?.firstName + ' ' + backlogData.lastName\"></app-photo>\r\n                  </div>\r\n                  <ng-template #showAvatar>\r\n                    <img class=\"profilepic\" [src]=\"backlogData.profileImage\"\r\n                      alt=\"profile\" onerror=\"this.onerror=null;this.src='assets/images/profile-Picture.png';\">\r\n                  </ng-template>\r\n                </div>\r\n                <mat-card-title style=\"font-size: 14px;\">{{backlogData?.firstName}} {{backlogData?.middleName}}\r\n                  {{backlogData?.lastName}}</mat-card-title>\r\n                <mat-card-subtitle style=\"color:green\">{{backlogData?.cardId}}</mat-card-subtitle>\r\n              </mat-card-header>\r\n  \r\n              <form class=\"head1\">\r\n                <table>\r\n                  <thead class=\"col1\" >\r\n                    <th class=\"fs-11\">Card Type</th>\r\n                    <th class=\"fs-11\">Applicant name</th>\r\n                  </thead>\r\n                  <tbody class=\"col2\" >\r\n                    <tr>\r\n                      <td class=\"fs-11\">{{backlogData?.cardType}}</td>\r\n                      <td  class=\"fs-11\">{{backlogData?.applicantName}}</td>\r\n                      <!-- <td>{{backlogData?.accountBranch}}</td>\r\n                      <td>{{backlogData?.businessProductName}}</td> -->\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n\r\n                <!-- <table>\r\n                  <thead class=\"col3\" >\r\n                    <th>Card Type</th>\r\n                  </thead>\r\n                  <tbody class=\"col4\" >\r\n                    <tr>\r\n                      <td>{{backlogData?.cardType}}</td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table> -->\r\n              </form>\r\n  \r\n            </div>\r\n          </div>\r\n          <br />\r\n  \r\n        </mat-card>\r\n  \r\n        <mat-card class=\"mat-elevation-z4\">\r\n          <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n            <span class=\"pl-6\">\r\n              <h2 class=\"statusFont\">Ongoing ({{ONGOINGArr.length}}/{{ONGOINGTotalRecords}})</h2>\r\n              <!-- <h2>Ongoing ({{ONGOINGArr}}/{{ONGOINGTotalRecords}})</h2> -->\r\n            </span>\r\n            <span class=\"more_vert_icon\">\r\n              <mat-icon>more_vert</mat-icon>\r\n            </span>\r\n          </div>\r\n          <!-- <div class=\"search-results\" infiniteScroll [infiniteScrollDistance]=\"2\" [infiniteScrollThrottle]=\"500\"\r\n            (scrolled)=\"onScrollingFinished($event,'UNDER_PROCESS')\" [scrollWindow]=\"false\"> -->\r\n            <div >\r\n  \r\n            <div class=\"detailedView\"*ngFor=\"let ongoingData of ONGOINGArr  ; let i =index\"\r\n              (click)=\"gotoapproverpage(ongoingData,'ONGOING', getRandomColor(i+6))\">\r\n              <mat-icon class=\"fill-color-blue bookMark bookMarkOngoing\">bookmark</mat-icon>\r\n              <mat-card-header class=\"head\">\r\n                <div mat-card-avatar class=\"circle\">\r\n                  <div *ngIf=\"ongoingData.profileImage == null; else showAvatar\">\r\n                    <app-photo [name]=\"ongoingData?.firstName + ' ' + ongoingData.lastName\"></app-photo>\r\n                  </div>\r\n                  <ng-template #showAvatar>\r\n                    <img class=\"profilepic\" [src]=\"ongoingData.profileImage\"\r\n                      alt=\"profile\" onerror=\"this.onerror=null;this.src='assets/images/profile-Picture.png';\">\r\n                  </ng-template>\r\n                </div>\r\n  \r\n                <mat-card-title style=\"font-size: 14px;\">{{ongoingData?.prefix}} {{ongoingData.firstName}} {{ongoingData.middleName}}\r\n                  {{ongoingData.lastName}}</mat-card-title>\r\n                <mat-card-subtitle style=\"color:green\">{{ongoingData?.cardId}}</mat-card-subtitle>\r\n                <!-- <mat-card-subtitle>Card Type {{ongoingData.cardType}}</mat-card-subtitle> -->\r\n              </mat-card-header>\r\n  \r\n              <form class=\"head1\">\r\n                <table>\r\n                  <thead class=\"col1\">\r\n                    <th  class=\"fs-10\">Card Type</th>\r\n                    <th  class=\"fs-10\">Applicant name</th>\r\n                    <!-- <th>Card Type</th> -->\r\n                  \r\n                  </thead>\r\n                  <tbody class=\"col2\">\r\n                    <tr>\r\n                      <td  class=\"fs-11\">{{ongoingData?.cardType}}</td>\r\n                      <td  class=\"fs-11\">{{ongoingData?.applicantName}}</td>\r\n                      <!-- <td>{{ongoingData.cardType}}</td> -->\r\n                      <!-- <td>{{ongoingData.firstName}} {{ongoingData.middleName}}\r\n                        {{ongoingData.lastName}}</td> -->\r\n                    </tr>\r\n                  </tbody>\r\n  \r\n                </table>\r\n                <!-- <table>\r\n                  <thead class=\"col3\">\r\n                    <th>Card Type</th>\r\n                    <th>Application By</th>\r\n                  </thead>\r\n                  <tbody class=\"col4\">\r\n                    <tr>\r\n                      <td>{{ongoingData.cardType}}</td>\r\n                      <td>{{ongoingData.createdBy}}</td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table> -->\r\n  \r\n              </form>\r\n            </div>\r\n          </div>\r\n          <br />\r\n  \r\n        </mat-card>\r\n  \r\n        <mat-card class=\"mat-elevation-z4\">\r\n          <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n            <span class=\"pl-6\">\r\n              <h2 class=\"statusFont\">Approved ({{APPROVEDArr.length}}/{{APPROVEDTotalRecords}})</h2>\r\n              <!-- <h2>Approved ({{APPROVEDArr}}/{{APPROVEDTotalRecords}})</h2> -->\r\n            </span>\r\n            <span class=\"more_vert_icon\">\r\n              <mat-icon>more_vert</mat-icon>\r\n            </span>\r\n          </div>\r\n          <!-- <div class=\"search-results\" infiniteScroll [infiniteScrollDistance]=\"2\" [infiniteScrollThrottle]=\"500\"\r\n            (scrolled)=\"onScrollingFinished($event,'APPROVED')\" [scrollWindow]=\"false\"> -->\r\n            <div >\r\n  \r\n            <div class=\"detailedView\" *ngFor=\"let approvedData of APPROVEDArr ; let i =index\"\r\n              (click)=\"gotoapproverpage(approvedData,'APPROVED', getRandomColor(i+9))\">\r\n              <mat-icon class=\"fill-color-blue bookMark bookMarkApproved\">bookmark</mat-icon>\r\n              <mat-card-header class=\"head\">\r\n                <!-- <div mat-card-avatar> <img src=\"assets/images/personImg.png\"></div> -->\r\n                <div mat-card-avatar class=\"circle\">\r\n                  <div *ngIf=\"approvedData.profileImage == null; else showAvatar\">\r\n                    <app-photo [name]=\"approvedData?.firstName + ' ' + approvedData.lastName\"></app-photo>\r\n                  </div>\r\n                  <ng-template #showAvatar>\r\n                    <img class=\"profilepic \" [src]=\"approvedData.profileImage\"\r\n                      alt=\"profile\" onerror=\"this.onerror=null;this.src='assets/images/profile-Picture.png';\">\r\n                  </ng-template>\r\n                </div>\r\n  \r\n                <mat-card-title style=\"font-size: 14px;\">{{approvedData?.prefix}} {{approvedData.firstName}} {{approvedData.middleName}}\r\n                  {{approvedData.lastName}}</mat-card-title>\r\n                <mat-card-subtitle style=\"color:green\"> {{approvedData?.cardId}}</mat-card-subtitle>\r\n                <!-- <mat-card-subtitle>Card Type {{approvedData.cardType}}</mat-card-subtitle> -->\r\n              </mat-card-header>\r\n  \r\n              <form class=\"head1\">\r\n                <table>\r\n                  <thead class=\"col1\">\r\n                    <th  class=\"fs-10\">Card Type</th>\r\n                    <th  class=\"fs-10\">Applicant name</th>\r\n                    <!-- <th>Card Type</th> -->\r\n                  </thead>\r\n                  <tbody class=\"col2\">\r\n                    <tr>\r\n                      <td  class=\"fs-11\">{{approvedData?.cardType}}</td>\r\n                      <td  class=\"fs-11\">{{approvedData?.applicantName}}</td>\r\n                      <!-- <td>{{approvedData.firstName}} {{approvedData.middleName}}\r\n                        {{approvedData.lastName}}</td> -->\r\n                    </tr>\r\n                  </tbody>\r\n  \r\n                </table>\r\n                <!-- <table>\r\n                  <thead class=\"col3\">\r\n                    <th>Card Type</th>\r\n                    <th>Application By</th>\r\n                  </thead>\r\n                  <tbody class=\"col4\">\r\n                    <tr>\r\n                      <td>{{approvedData.cardType}}</td>\r\n                      <td>{{approvedData.createdBy}}</td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table> -->\r\n              </form>\r\n            </div>\r\n          </div>\r\n          <br />\r\n  \r\n        </mat-card>\r\n  \r\n        <mat-card class=\"mat-elevation-z4\">\r\n          <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n            <span class=\"pl-6\">\r\n              <h2  class=\"statusFont\">Rejected ({{REJECTEDArr.length}}/{{REJECTEDTotalRecords}})</h2>\r\n              <!-- <h2>Rejected ({{REJECTEDArr}}/{{REJECTEDTotalRecords}})</h2> -->\r\n            </span>\r\n            <span class=\"more_vert_icon\">\r\n              <mat-icon>more_vert</mat-icon>\r\n            </span>\r\n          </div>\r\n          <!-- <div class=\"search-results\" infiniteScroll [infiniteScrollDistance]=\"2\" [infiniteScrollThrottle]=\"500\"\r\n            (scrolled)=\"onScrollingFinished($event,'REJECTED')\" [scrollWindow]=\"false\"> -->\r\n            <div >\r\n  \r\n            <div class=\"detailedView\" *ngFor=\"let rejectedData of REJECTEDArr  ; let i =index\"\r\n              (click)=\"gotoapproverpage(rejectedData,'REJECTED', getRandomColor(i+12))\">\r\n              <mat-icon class=\"fill-color-blue bookMark bookMarkRejected\">bookmark</mat-icon>\r\n              <mat-card-header class=\"head\">\r\n                <!-- <div mat-card-avatar> <img src=\"assets/images/personImg.png\"></div> -->\r\n                <div mat-card-avatar class=\"circle\">\r\n                  <div *ngIf=\"rejectedData.profileImage == null; else showAvatar\">\r\n                    <app-photo [name]=\"rejectedData?.firstName + ' ' + rejectedData.lastName\"></app-photo>\r\n                  </div>\r\n                  <ng-template #showAvatar>\r\n                    <img class=\"profilepic\" [src]=\"rejectedData.profileImage\"\r\n                      alt=\"profile\" onerror=\"this.onerror=null;this.src='assets/images/profile-Picture.png';\">\r\n                  </ng-template>\r\n                </div>\r\n                <mat-card-title style=\"font-size: 16px;\">{{rejectedData?.firstName}} {{rejectedData.middleName}}\r\n                  {{rejectedData.lastName}} </mat-card-title>\r\n                <mat-card-subtitle style=\"color:green\">{{rejectedData?.cardId}}</mat-card-subtitle>\r\n              </mat-card-header>\r\n  \r\n              <form class=\"head1\">\r\n                <table>\r\n                  <thead class=\"col1\">\r\n                    <!-- <th>Customer Name</th> -->\r\n                    <th  class=\"fs-10\">Card Type</th>\r\n                    <th  class=\"fs-10\">Applicant name</th>\r\n                  </thead>\r\n                  <tbody class=\"col2\">\r\n                    <tr>\r\n                      <!-- <td>{{rejectedData.firstName}} {{rejectedData.middleName}}\r\n                        {{rejectedData.lastName}}</td> -->\r\n                      <td  class=\"fs-11\">{{rejectedData?.cardType}}</td>\r\n                      <td  class=\"fs-11\">{{rejectedData?.applicantName}}</td>\r\n                    </tr>\r\n                  </tbody>\r\n  \r\n                </table>\r\n                <!-- <table>\r\n                  <thead class=\"col3\">\r\n                    <th>Card Type</th>\r\n                    <th>Application By</th>\r\n                  </thead>\r\n                  <tbody class=\"col4\">\r\n                    <tr>\r\n                      <td>{{rejectedData.cardType}}</td>\r\n                      <td>{{rejectedData.createdBy}}</td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table> -->\r\n              </form>\r\n            </div>\r\n          </div>\r\n          <br />\r\n        </mat-card>\r\n  \r\n      </div>\r\n    <!-- </div> -->\r\n  </div>\r\n  </div>\r\n  <!-- Body Ends -->","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { AppConfirmService } from 'app/shared/services/app-confirm/app-confirm.service';\r\nimport { ApplicationEntryStageService } from 'app/shared/services/application-entry-stage.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport * as moment from 'moment';\r\nimport { TasksummaryService } from '../../tasksummary.service';\r\n\r\n@Component({\r\n  selector: 'app-nominee-details-update',\r\n  templateUrl: './nominee-details-update.component.html',\r\n  styleUrls: ['./nominee-details-update.component.scss']\r\n})\r\nexport class NomineeDetailsUpdateComponent implements OnInit {\r\n\r\n  nomineeUpdateForm: FormGroup;\r\n  accountId: any;\r\n  isAllSameDigitVal: boolean;\r\n  arrayState: string[] = [];\r\n  arrayCity: string[] = [];\r\n  expandAddress: any;\r\n  arrayRelationshipType: string[];\r\n  arrayPrefix: string[];\r\n  arrayCountry: any;\r\n  entityName: string;\r\n  address: any;\r\n  cifNumber: any;\r\n  showEditOption: any;\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public data,\r\n    public dialogRef: MatDialogRef<NomineeDetailsUpdateComponent>,\r\n    private apiService: ApiService,\r\n    private formBuilder: FormBuilder,\r\n    private ls: LocalStoreService,\r\n    private appApiService: ApplicationEntryStageService,\r\n    private confirmService: AppConfirmService,\r\n    private snack: MatSnackBar,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    console.log(this.data);\r\n    this.accountId = this.ls.getItem('accountId');\r\n    this.getCountryName(\"country\");\r\n    this.getRelationShipType(\"relationship_type\");\r\n    this.getPrefixValue(\"prefix\");\r\n    if (this.data) {\r\n      this.getStateName(this.data[0].country)\r\n      this.getCityName(this.data[0].state)\r\n      this.buildNomineeForm();\r\n      this.addGroup(this.data);\r\n      this.showEditOption = true\r\n    }\r\n    else {\r\n      this.showEditOption = false\r\n      this.buildNomineeForm();\r\n      this.addGroup();\r\n    }\r\n  }\r\n\r\n  buildNomineeForm() {\r\n    this.nomineeUpdateForm = this.formBuilder.group({\r\n      nominees: this.formBuilder.array([])\r\n    });\r\n  }\r\n\r\n  addGroup(data?) {\r\n    let noOfNominee = data?data.length:1\r\n    for (let i = 0; i < noOfNominee; i++) {\r\n      this.expandAddress = data[i].isAddrSameAsApplicant;\r\n      data[i].dateOfBirth = moment(data[i].dateOfBirth).format();\r\n      if (data[i].isNomineeMinor) {\r\n        data[i].guardianDetails[0].dateOfBirth = moment(data[i].guardianDetails[0].dateOfBirth).format();\r\n      }\r\n      this.n.push(this.formBuilder.group({\r\n        prefix: ['', Validators.required],\r\n        firstName: ['', Validators.required],\r\n        middleName: ['',],\r\n        lastName: ['', Validators.required],\r\n        relationshipType: ['', Validators.required],\r\n        dateOfBirth: ['', Validators.required],\r\n        nomineeId: [''],\r\n        building: ['', Validators.required],\r\n        street: ['', Validators.required],\r\n        locality: ['', Validators.required],\r\n        city: ['', Validators.required],\r\n        state: ['', Validators.required],\r\n        country: ['', Validators.required],\r\n        zipCode: ['', [Validators.required, Validators.minLength(5), Validators.maxLength(10)]],\r\n        phoneNumber: ['', [Validators.required, Validators.pattern(\"^[0-9]{10,12}$\")]],\r\n        mobileNumber: ['', [Validators.pattern(\"^[0-9]{10,12}$\")]],\r\n        isAddrSameAsApplicant: [false, Validators.required],\r\n        isNomineeMinor: [false, Validators.required],\r\n        email: ['', [Validators.required, Validators.pattern('^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\\\.[a-zA-Z]{2,4}$')]],\r\n        guardianDetails: data[i].isNomineeMinor ? [this.formBuilder.group({\r\n          dateOfBirth: ['', Validators.required],\r\n          firstName: ['', Validators.required],\r\n          guardianId: [''],\r\n          lastName: ['', Validators.required],\r\n          middleName: ['',],\r\n          nomineeId: [''],\r\n          prefix: ['', Validators.required],\r\n          relationshipType: ['', Validators.required]\r\n        })] : []\r\n      }));\r\n      this.n.at(i).patchValue(data[i]);\r\n    }\r\n\r\n  }\r\n  get f() { return this.nomineeUpdateForm.controls; }\r\n  get n() { return this.f.nominees as FormArray; }\r\n\r\n  private addGuardian(control): FormGroup {\r\n    return control.push(\r\n      this.formBuilder.group({\r\n        prefix: ['', Validators.required],\r\n        firstName: ['', Validators.required],\r\n        middleName: [''],\r\n        nomineeId: [''],\r\n        guardianId: [''],\r\n        lastName: ['', Validators.required],\r\n        relationshipType: ['', Validators.required],\r\n        dateOfBirth: ['', Validators.required]\r\n      }))\r\n  }\r\n  addevent(controls, event) {\r\n    let now = new Date();\r\n    now = event.target.value;\r\n    console.log(moment(now).format('YYYY-MM-DD'));\r\n    var birthDate = new Date(moment(now).format('YYYY-MM-DD'))\r\n    this.n.controls[0].patchValue({ isNomineeMinor: this.underAgeValidate(birthDate) })\r\n    if (this.underAgeValidate(birthDate)) {\r\n      this.addGuardian(controls);\r\n    } else {\r\n      return controls.removeAt(0)\r\n    }\r\n  }\r\n\r\n  clickToggle(event) {\r\n    this.expandAddress = event.checked;\r\n    if (event.checked == true) {\r\n      this.getApplicantAddress();\r\n    } else {\r\n      let nomineeAddress = <FormArray>this.nomineeUpdateForm.controls['nominees'];\r\n      let nomineeAddress1 = nomineeAddress.controls[nomineeAddress.length - 1];\r\n      nomineeAddress1.get('zipCode').reset();\r\n      nomineeAddress1.get('street').reset();\r\n      nomineeAddress1.get('locality').reset();\r\n      nomineeAddress1.get('building').reset();\r\n      nomineeAddress1.get('country').reset();\r\n      nomineeAddress1.get('state').reset();\r\n      nomineeAddress1.get('city').reset();\r\n    }\r\n\r\n  }\r\n  getApplicantAddress() {\r\n    this.appApiService.fetchByCif(this.cifNumber).subscribe((data: any) => {\r\n      this.address = data.customerInfoList[0].userAddress[0];\r\n      let nomineeAddress = <FormArray>this.nomineeUpdateForm.controls['nominees'];\r\n      let nomineeAddress1 = nomineeAddress.controls[nomineeAddress.length - 1];\r\n      this.getStateName(this.address.country);\r\n      this.getCityName(this.address.state);\r\n\r\n      nomineeAddress1.get('zipCode').setValue(this.address.zipCode);\r\n      nomineeAddress1.get('street').setValue(this.address.address1);\r\n      nomineeAddress1.get('locality').setValue(this.address.address2);\r\n      nomineeAddress1.get('building').setValue(this.address.address1);\r\n      nomineeAddress1.get('country').setValue(this.address.country);\r\n      nomineeAddress1.get('state').setValue(this.address.state);\r\n      nomineeAddress1.get('city').setValue(this.address.city);\r\n    });\r\n  }\r\n  removeNominee(i: number) {\r\n    console.log(\"i\", i);\r\n    let nomineeId = this.n.at(i).get('nomineeId').value;\r\n    console.log(\"nomineeId ::\", nomineeId)\r\n    this.confirmService\r\n      .confirm({ title: \"Confirm\", message: \"Are you sure want to remove?\", ok: \"Yes\", cancel: \"No\" })\r\n      .subscribe(res => {\r\n        console.log(\"res:: removed \", res);\r\n        if (res) {\r\n          this.apiService.deleteNomineeById(nomineeId, 'ADMIN')\r\n            .subscribe((data: any) => {\r\n              console.log(\"data\", data);\r\n            }, err => {\r\n              const control = <FormArray>this.nomineeUpdateForm.controls['nominees'];\r\n              control.removeAt(i);\r\n              if (err.status === 200) {\r\n                this.snack.open('Record Deleted Successfully', 'OK', {\r\n                  duration: 4000,\r\n                  verticalPosition: 'top',\r\n                  horizontalPosition: 'right'\r\n                });\r\n              }\r\n\r\n            });\r\n        } else return;\r\n      });\r\n  }\r\n  onSubmit() {\r\n    for (let i = 0; i < this.nomineeUpdateForm.value.nominees.length; i++) {\r\n      this.nomineeUpdateForm.value.nominees[i].dateOfBirth = this.convertDate(this.nomineeUpdateForm.value.nominees[i].dateOfBirth);\r\n      if (this.nomineeUpdateForm.value.nominees[i].isNomineeMinor) {\r\n        this.nomineeUpdateForm.value.nominees[i].guardianDetails[0].dateOfBirth =\r\n          this.convertDate(this.nomineeUpdateForm.value.nominees[i].guardianDetails[0].dateOfBirth);\r\n      }\r\n    }\r\n\r\n    let payload = {\r\n      \"productAccountId\": this.accountId,\r\n      \"nominees\": this.nomineeUpdateForm.value.nominees\r\n    };\r\n\r\n    if (this.nomineeUpdateForm.invalid) {\r\n      return;\r\n    }\r\n\r\n    if (this.showEditOption) {\r\n      this.apiService.updateNominee(this.accountId, payload)\r\n        .subscribe((data: any) => {\r\n        }, (err: any) => {\r\n          console.log(err);\r\n        });\r\n          this.dialogRef.close({\r\n            status: 'BACKLOG'\r\n          })\r\n    } else {\r\n      this.apiService.createNominee(this.accountId, payload)\r\n        .subscribe((data: any) => {\r\n          console.log(data);\r\n          this.snack.open('Nominee Details Updated!', 'OK', { duration: 4000, verticalPosition: 'top', horizontalPosition: 'right' });\r\n        }, (err: any) => {\r\n          console.log(err);\r\n        });\r\n    }\r\n  }\r\n\r\n\r\n  changeClient(value) {\r\n    console.log(value);\r\n    if (value == \"Mr\") {\r\n      this.arrayRelationshipType = [\"Father\", \"Brother\", \"Spouse\"]\r\n    }\r\n    else if (value == \"Mrs\") {\r\n      this.arrayRelationshipType = [\"Mother\", \"Spouse\"]\r\n    }\r\n    else {\r\n      this.arrayRelationshipType = [\"Sister\"]\r\n    }\r\n  }\r\n  underAgeValidate(birthday) {\r\n    const diff = Date.now() - birthday.getTime();\r\n    const ageDate = new Date(diff);\r\n    let age = Math.abs(ageDate.getUTCFullYear() - 1970);\r\n    return age < 18;\r\n  };\r\n\r\n  getRelationShipType(key: string) {\r\n    this.apiService.getDropDownValues(key).subscribe((data) => {\r\n      this.arrayRelationshipType = data;\r\n    });\r\n  }\r\n  getPrefixValue(key: string) {\r\n    this.apiService.getDropDownValues(key).subscribe((data) => {\r\n      this.arrayPrefix = data;\r\n    });\r\n  }\r\n  getCountryName(key: string) {\r\n    this.apiService.getAllCountries().subscribe((data: any) => {\r\n      for (let i = 0; i < data.length; i++) {\r\n        if (data[i].authStatus === 'A') {\r\n          this.arrayCountry.push(data[i].countryName);\r\n        }\r\n      }\r\n    });\r\n  }\r\n  getStateName(country) {\r\n    this.apiService.getAllCountries().subscribe((data: any) => {\r\n      for (let i = 0; i < data.length; i++) {\r\n        if (data[i].countryName === country) {\r\n          this.apiService.getStateByCountryId(data[i].id).subscribe((resp: any) => {\r\n            for (let i = 0; i < resp.length; i++) {\r\n              if (resp[i].authStatus === 'A') {\r\n                this.arrayState.push(resp[i].stateName);\r\n              }\r\n            }\r\n          })\r\n          break;\r\n        }\r\n      }\r\n    })\r\n  }\r\n  getCityName(state: any) {\r\n    this.entityName = \"city\";\r\n    console.log(state)\r\n    this.apiService.getDropDownValues1(this.entityName, state).subscribe((data) => {\r\n      this.arrayCity = data;\r\n    });\r\n  }\r\n  _keyPress(event: any) {\r\n    const pattern = /[0-9]/;\r\n    let inputChar = String.fromCharCode(event.charCode);\r\n    if (!pattern.test(inputChar)) {\r\n      event.preventDefault();\r\n\r\n    }\r\n  }\r\n  keyPressAlphanumeric(event) {\r\n    var inp = String.fromCharCode(event.keyCode);\r\n    if (/[a-zA-Z0-9]/.test(inp)) {\r\n      return true;\r\n    } else {\r\n      event.preventDefault();\r\n      return false;\r\n    }\r\n  }\r\n  letterOnly(event) {\r\n    var charCode = event.keyCode;\r\n    if ((charCode > 64 && charCode < 91) || (charCode > 96 && charCode < 123) || charCode == 8)\r\n      return true;\r\n    else\r\n      return false;\r\n  }\r\n  isAllSameDigit(event) {\r\n    let count = 0, number = event.target.value;\r\n    if (number != '') {\r\n      for (var i = 0; i < number.length; i++) {\r\n        if (0 == number[i]) {\r\n          count++;\r\n        }\r\n      }\r\n      if (count == number.length) {\r\n        console.log('if loop')\r\n        this.isAllSameDigitVal = true;\r\n      }\r\n      else {\r\n        this.isAllSameDigitVal = false;\r\n      }\r\n    } else {\r\n      this.isAllSameDigitVal = false;\r\n    }\r\n  }\r\n  convertDate(value) {\r\n    let date = moment(value).format('YYYY-MMM-DD'); // ISO 8601 format\r\n    console.log(\"date\", date);\r\n    if (date)\r\n      return date;\r\n  }\r\n  close() {\r\n    this.dialogRef.close({\r\n      status: \"ONGOING\"\r\n    })\r\n  }\r\n\r\n}\r\n","<div fxLayout=\"row\" fxLayoutGap=\"25px\" fxLayout=\"row\" fxLayoutAlign=\"end\" class=\"contain\">\r\n    <mat-icon class=\"closeIcon\" (click)=\"close()\">close</mat-icon>\r\n</div>\r\n<h1 mat-dialog-title>Nominee Details</h1>\r\n<mat-dialog-content>\r\n    <form *ngIf=\"nomineeUpdateForm\" [formGroup]=\"nomineeUpdateForm\">\r\n        <div *ngFor=\"let nominee of n.controls; let i = index\" class=\"mb-3\">\r\n            <mat-accordion>\r\n                <mat-expansion-panel expanded=\"true\" (opened)=\"panelOpenState = true\" (closed)=\"panelOpenState = false\">\r\n                    <mat-expansion-panel-header>\r\n                        <mat-panel-title>\r\n                            {{ showEditOption == true ? 'Edit' :'Create' }} Nominee {{ i + 1 }}\r\n                        </mat-panel-title>\r\n                    </mat-expansion-panel-header>\r\n                    <div [formGroup]=\"nominee\" fxLayout=\"row wrap\" class=\"full-width\">\r\n                        <div fxFlex=\"33.33%\" fxFlex.xs=\"100%\">\r\n                            <mat-hint>Prefix*</mat-hint>\r\n                            <mat-card>\r\n                                <mat-select name=\"prefix\" formControlName=\"prefix\"\r\n                                    (selectionChange)=\"changeClient($event.value)\">\r\n                                    <mat-option *ngFor=\"let prefix of arrayPrefix\" [value]=\"prefix\">\r\n                                        {{prefix}}\r\n                                    </mat-option>\r\n                                </mat-select>\r\n                            </mat-card>\r\n                            <mat-error class=\"errorClass\" *ngIf=\"nominee.get('prefix').hasError('required')\">\r\n                                Prefix is Required!\r\n                            </mat-error>\r\n                        </div>\r\n                        <div fxFlex=\"33.33%\" fxFlex.xs=\"100%\">\r\n                            <mat-hint>First Name*</mat-hint>\r\n                            <mat-card>\r\n                                <input matInput name=\"fname\" formControlName=\"firstName\" placeholder=\"First Name\"\r\n                                    (keypress)=\"letterOnly($event)\" />\r\n                            </mat-card>\r\n                            <mat-error class=\"errorClass\" *ngIf=\"nominee.get('firstName').hasError('required')\">\r\n                                First Name is Required!\r\n                            </mat-error>\r\n                            <mat-error class=\"errorClass\" *ngIf=\"nominee.get('firstName').hasError('pattern')\">\r\n                                Only Alphabets allowed\r\n                            </mat-error>\r\n                        </div>\r\n                        <div fxFlex=\"33.33%\" fxFlex.xs=\"100%\">\r\n                            <mat-hint>Middle Name</mat-hint>\r\n                            <mat-card>\r\n                                <input matInput name=\"mname\" formControlName=\"middleName\" placeholder=\"Middle Name\"\r\n                                    (keypress)=\"letterOnly($event)\" />\r\n                            </mat-card>\r\n                            <mat-error class=\"errorClass\" *ngIf=\"nominee.get('middleName').hasError('pattern')\">\r\n                                Only Alphabets allowed\r\n                            </mat-error>\r\n                        </div>\r\n                        <div fxFlex=\"33.33%\" fxFlex.xs=\"100%\">\r\n                            <mat-hint>Last Name*</mat-hint>\r\n                            <mat-card>\r\n                                <input matInput name=\"lname\" formControlName=\"lastName\" placeholder=\"Last Name\"\r\n                                    (keypress)=\"letterOnly($event)\" />\r\n                            </mat-card>\r\n                            <mat-error class=\"errorClass\" *ngIf=\"nominee.get('lastName').hasError('required')\">\r\n                                Last Name is Required!\r\n                            </mat-error>\r\n                            <mat-error class=\"errorClass\" *ngIf=\"nominee.get('lastName').hasError('pattern')\">\r\n                                Only Alphabets allowed\r\n                            </mat-error>\r\n                        </div>\r\n                        <div fxFlex=\"33.33%\" fxFlex.xs=\"100%\">\r\n                            <mat-hint>Relationship Type*</mat-hint>\r\n                            <mat-card>\r\n                                <mat-select name=\"rtype\" formControlName=\"relationshipType\" [value]=\"relationshipType\">\r\n                                    <mat-option *ngFor=\"let relationshipType of arrayRelationshipType\"\r\n                                        [value]=\"relationshipType\">\r\n                                        {{relationshipType}}\r\n                                    </mat-option>\r\n                                </mat-select>\r\n                            </mat-card>\r\n                            <mat-error class=\"errorClass\" *ngIf=\"nominee.get('relationshipType').hasError('required')\">\r\n                                Relationship Type is Required!\r\n                            </mat-error>\r\n                        </div>\r\n                        <div fxFlex=\"33.33%\" fxFlex.xs=\"100%\">\r\n                            <mat-hint>Date of Birth*</mat-hint>\r\n                            <mat-card>\r\n                                <input matInput name=\"dob\" readonly formControlName=\"dateOfBirth\"\r\n                                    placeholder=\"Date of Birth\" [matDatepicker]=\"appDatepicker\" [max]=\"tomorrow\"\r\n                                    (dateInput)=\"addInput($event)\"\r\n                                    (dateChange)=\"addevent(nominee.controls.guardianDetails,$event)\" />\r\n                                <mat-datepicker-toggle matSuffix [for]=\"appDatepicker\"></mat-datepicker-toggle>\r\n                            </mat-card>\r\n                            <mat-error class=\"errorClass\" *ngIf=\"nominee.get('dateOfBirth').hasError('required')\">\r\n                                Date of Birth is Required!\r\n                            </mat-error>\r\n                            <mat-datepicker #appDatepicker></mat-datepicker>\r\n                        </div>\r\n                        <div class=\"pb-1\">\r\n                            Is the Nominee a Minor?\r\n                            <mat-slide-toggle name=\"isNomineeMinor\" formControlName=\"isNomineeMinor\"\r\n                                (change)=\"onChange(nominee.controls.guardianDetails,$event,i)\">\r\n                            </mat-slide-toggle>\r\n                        </div>\r\n\r\n                        <div formArrayName=\"guardianDetails\">\r\n                            <div *ngFor=\"let guardian of nominee.get('guardianDetails').controls; let j=index\">\r\n                                <div class=\"card-title-text\">\r\n                                    <h3><strong>Guardians Details</strong></h3>\r\n                                </div>\r\n                                <div [formGroupName]=\"j\" fxLayout=\"row\" fxLayoutGap=\"25px\">\r\n                                    <div>\r\n                                        <div fxFlex=\"33.33%\" fxFlex.xs=\"100%\">\r\n                                            <mat-hint>Prefix*</mat-hint>\r\n                                            <mat-card>\r\n                                                <mat-select name=\"g_prefix\" formControlName=\"prefix\">\r\n                                                    <mat-option *ngFor=\"let prefix of arrayPrefix\" [value]=\"prefix\">\r\n                                                        {{prefix}}\r\n                                                    </mat-option>\r\n                                                </mat-select>\r\n                                            </mat-card>\r\n                                            <mat-error class=\"errorClass\" *ngIf=\"guardian.get('prefix').hasError('required')\">\r\n                                                Prefix is Required!\r\n                                            </mat-error>\r\n                                        </div>\r\n                                        <div fxFlex=\"33.33%\" fxFlex.xs=\"100%\">\r\n                                            <mat-hint>First Name*</mat-hint>\r\n                                            <mat-card>\r\n                                                <input matInput name=\"g_fname\" (keypress)=\"letterOnly($event)\"\r\n                                                    formControlName=\"firstName\" placeholder=\"First Name\" />\r\n                                            </mat-card>\r\n                                            <mat-error class=\"errorClass\" *ngIf=\"guardian.get('firstName').hasError('required')\">\r\n                                                First Name is Required!\r\n                                            </mat-error>\r\n                                        </div>\r\n                                        <div fxFlex=\"33.33%\" fxFlex.xs=\"100%\">\r\n                                            <mat-hint>Middle Name</mat-hint>\r\n                                            <mat-card>\r\n                                                <input matInput name=\"g_mname\" formControlName=\"middleName\" placeholder=\"Middle Name\"\r\n                                                (keypress)=\"letterOnly($event)\" />\r\n                                            </mat-card>\r\n                                        </div>\r\n                                        <div fxFlex=\"33.33%\" fxFlex.xs=\"100%\">\r\n                                            <mat-hint>Last Name*</mat-hint>\r\n                                            <mat-card>\r\n                                                <input matInput name=\"g_lname\" (keypress)=\"letterOnly($event)\"\r\n                                                    formControlName=\"lastName\" placeholder=\"Last Name\" />\r\n                                            </mat-card>\r\n                                            <mat-error class=\"errorClass\" *ngIf=\"guardian.get('lastName').hasError('required')\">\r\n                                                Last Name is Required!\r\n                                            </mat-error>\r\n                                        </div>\r\n                                        <div fxFlex=\"33.33%\" fxFlex.xs=\"100%\">\r\n                                            <mat-hint>RelationShip Type*</mat-hint>\r\n                                            <mat-card>\r\n                                                <input matInput name=\"g_rtype\" formControlName=\"relationshipType\"\r\n                                                    placeholder=\"Relation Type\" />\r\n                                            </mat-card>\r\n                                            <mat-error class=\"errorClass\" *ngIf=\"guardian.get('relationshipType').hasError('required')\">\r\n                                                Relationship Type is Required!\r\n                                            </mat-error>\r\n                                        </div>\r\n                                        <div fxFlex=\"33.33%\" fxFlex.xs=\"100%\">\r\n                                            <mat-hint>Date Of Birth*</mat-hint>\r\n                                            <mat-card>\r\n                                                <input matInput readonly name=\"g_dob\" formControlName=\"dateOfBirth\"\r\n                                                    placeholder=\"Date of Birth\" [matDatepicker]=\"appDatepicker1\" [max]=\"tomorrow\" />\r\n            \r\n                                                <mat-datepicker-toggle matSuffix [for]=\"appDatepicker1\">\r\n                                                </mat-datepicker-toggle>\r\n                                            </mat-card>\r\n                                            <mat-error class=\"errorClass\" *ngIf=\"guardian.get('dateOfBirth').hasError('required')\">\r\n                                                Date of Birth is Required!\r\n                                            </mat-error>\r\n                                            <mat-datepicker #appDatepicker1></mat-datepicker>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                           \r\n                        </div>\r\n                        <div class=\"pb-1\">\r\n                            Same address as Applicant?\r\n                            <mat-slide-toggle name=\"isAddrSameAsApplicant\"\r\n                              formControlName=\"isAddrSameAsApplicant\" (change)=\"clickToggle($event)\">\r\n                            </mat-slide-toggle>\r\n                          </div>\r\n                        <mat-accordion>\r\n                            <mat-expansion-panel expanded=\"true\">\r\n                                <mat-expansion-panel-header>\r\n                                    <mat-panel-title>Nominee Address </mat-panel-title>\r\n                                </mat-expansion-panel-header>\r\n                                <div fxLayout=\"row wrap\" class=\"full-width\">\r\n                                    <div fxFlex=\"33.33%\" fxFlex.xs=\"100%\">\r\n                                        <mat-hint>Street*</mat-hint>\r\n                                        <mat-card>\r\n                                            <input matInput name=\"a_street\" formControlName=\"street\"\r\n                                                placeholder=\"Street\" />\r\n                                        </mat-card>\r\n                                        <mat-error class=\"errorClass\" *ngIf=\"nominee.get('street').hasError('required')\">\r\n                                            Street is Required!\r\n                                        </mat-error>\r\n                                    </div>\r\n                                    <div fxFlex=\"33.33%\" fxFlex.xs=\"100%\">\r\n                                        <mat-hint>Locality*</mat-hint>\r\n                                        <mat-card>\r\n                                            <input matInput name=\"a_locality\" formControlName=\"locality\"\r\n                                                placeholder=\"Locality\" />\r\n                                        </mat-card>\r\n                                        <mat-error class=\"errorClass\" *ngIf=\"nominee.get('locality').hasError('required')\">\r\n                                            Locality is Required!\r\n                                        </mat-error>\r\n                                    </div>\r\n                                    <div fxFlex=\"33.33%\" fxFlex.xs=\"100%\">\r\n                                        <mat-hint>Building*</mat-hint>\r\n                                        <mat-card>\r\n                                            <input matInput name=\"a_building\" formControlName=\"building\"\r\n                                                placeholder=\"Building\" />\r\n                                        </mat-card>\r\n                                        <mat-error class=\"errorClass\" *ngIf=\"nominee.get('building').hasError('required')\">\r\n                                            Building is Required!\r\n                                        </mat-error>\r\n                                    </div>\r\n                                    <div fxFlex=\"33.33%\" fxFlex.xs=\"100%\">\r\n                                        <mat-hint>Country*</mat-hint>\r\n                                        <mat-card>\r\n                                            <mat-select name=\"country\" formControlName=\"country\"\r\n                                                (selectionChange)=\"getStateName($event.value)\">\r\n                                                <mat-option *ngFor=\"let country of arrayCountry\" [value]=\"country\">\r\n                                                    {{country}}\r\n                                                </mat-option>\r\n                                            </mat-select>\r\n                                        </mat-card>\r\n                                        <mat-error class=\"errorClass\" *ngIf=\"nominee.get('country').hasError('required')\">\r\n                                            Country is Required!\r\n                                        </mat-error>\r\n                                    </div>\r\n                                    <div fxFlex=\"33.33%\" fxFlex.xs=\"100%\">\r\n                                        <mat-hint>State*</mat-hint>\r\n                                        <mat-card>\r\n                                            <mat-select name=\"state\" formControlName=\"state\"\r\n                                                (selectionChange)=\"getCityName($event.value)\">\r\n                                                <mat-option *ngFor=\"let state of arrayState\"\r\n                                                    [value]=\"state.stateName\">{{state.stateName}}</mat-option>\r\n                                            </mat-select>\r\n                                        </mat-card>\r\n                                        <mat-error class=\"errorClass\" *ngIf=\"nominee.get('state').hasError('required')\">\r\n                                            State is Required!\r\n                                        </mat-error>\r\n                                    </div>\r\n                                    <div fxFlex=\"33.33%\" fxFlex.xs=\"100%\">\r\n                                        <mat-hint>city*</mat-hint>\r\n                                        <mat-card>\r\n                                            <mat-select name=\"city\" formControlName=\"city\">\r\n                                                <mat-option *ngFor=\"let city of arrayCity\"\r\n                                                    [value]=\"city.value1\">{{city.value1}}</mat-option>\r\n                                            </mat-select>\r\n                                        </mat-card>\r\n                                        <mat-error class=\"errorClass\" *ngIf=\"nominee.get('city').hasError('required')\">\r\n                                            City is Required!\r\n                                        </mat-error>\r\n                                    </div>                                    \r\n                                    <div fxFlex=\"33.33%\" fxFlex.xs=\"100%\">\r\n                                        <mat-hint>Zip Code*</mat-hint>\r\n                                        <mat-card>\r\n                                            <input matInput (keypress)=_keyPress($event) name=\"a_zip\"\r\n                                                formControlName=\"zipCode\" placeholder=\"Zip Code\" maxlength=\"10\"\r\n                                                onlyNumber (keyup)=\"isAllSameDigit($event)\" />\r\n                                        </mat-card>\r\n                                        <mat-error class=\"errorClass\"\r\n                                            *ngIf=\"nominee.get('zipCode').hasError('required') && !nominee.controls['zipCode'].valid && nominee.controls['zipCode']?.touched\">\r\n                                            Please enter Zip Code!\r\n                                        </mat-error>\r\n                                        <h5 *ngIf=\"isAllSameDigitVal\" style=\"color: #E74C3C;\">Please enter valid Zip\r\n                                            Code!</h5>\r\n\r\n                                    </div>\r\n                                </div>\r\n                            </mat-expansion-panel>\r\n                        </mat-accordion>\r\n                        <mat-accordion>\r\n                            <mat-expansion-panel expanded=\"true\">\r\n                                <mat-expansion-panel-header>\r\n                                    <mat-panel-title>Contact Information </mat-panel-title>\r\n                                </mat-expansion-panel-header>\r\n                                <div fxLayout=\"row wrap\" class=\"full-width\">\r\n                                    <div fxFlex=\"33.33%\" fxFlex.xs=\"100%\">\r\n                                        <mat-hint>Mobile Number*</mat-hint>\r\n                                        <mat-card>\r\n                                            <input matInput formControlName=\"phoneNumber\" name=\"phone\"\r\n                                                placeholder=\"Mobile Number\" maxlength=\"10\"\r\n                                                (keypress)=_keyPress($event) />\r\n                                        </mat-card>\r\n                                        <mat-error class=\"errorClass\" *ngIf=\"nominee.get('phoneNumber').hasError('required')\">\r\n                                            Mobile number is Required!\r\n                                        </mat-error>\r\n                                        <mat-error class=\"errorClass\" *ngIf=\"nominee.get('phoneNumber').hasError('pattern')\">\r\n                                            Please Enter 10 Digit Mobile Number!\r\n                                        </mat-error>\r\n                                    </div>\r\n                                    <div fxFlex=\"33.33%\" fxFlex.xs=\"100%\">\r\n                                        <mat-hint>E-mail*</mat-hint>\r\n                                        <mat-card>\r\n                                            <input matInput name=\"email\" formControlName=\"email\" placeholder=\"e-mail\" />\r\n                                        </mat-card>\r\n                                        <mat-error class=\"errorClass\" *ngIf=\"nominee.get('email').hasError('required')\">\r\n                                            Email is Required!\r\n                                        </mat-error>\r\n                                        <mat-error class=\"errorClass\" *ngIf=\"nominee.get('email').hasError('pattern')\">\r\n                                            Email must be a valid email address!\r\n                                        </mat-error>\r\n                                    </div>\r\n                                    <div fxFlex=\"33.33%\" fxFlex.xs=\"100%\">\r\n                                        <mat-hint>Landline Number</mat-hint>\r\n                                        <mat-card>\r\n                                            <input matInput formControlName=\"mobileNumber\" maxlength=\"10\"\r\n                                                (keypress)=_keyPress($event)>\r\n                                        </mat-card>\r\n                                        <mat-error class=\"errorClass\" *ngIf=\"nominee.get('mobileNumber').hasError('pattern')\">\r\n                                            It is not a valid Landline number.\r\n                                        </mat-error>\r\n                                    </div>\r\n                                </div>\r\n                            </mat-expansion-panel>\r\n                        </mat-accordion>\r\n                    </div>\r\n                    <button mat-button rounded color=\"primary\" [disabled]=\"nomineeForms?.invalid\" class=\"place\" (click)=\"addNominee()\">\r\n                        <mat-icon>add</mat-icon> ADD NOMINEE\r\n                      </button>\r\n                        <button mat-button color=\"warn\"  (click)=\"removeNominee(i)\">\r\n                          <mat-icon>delete</mat-icon>REMOVE\r\n                        </button>\r\n                </mat-expansion-panel>\r\n            </mat-accordion>\r\n        </div>\r\n    </form>\r\n</mat-dialog-content>\r\n\r\n<div fxLayout=\"row\" fxLayoutAlign=\"end\" fxLayoutGap=\"20px\">\r\n    <button mat-raised-button class=\"editbtn\" (click)=\"onSubmit()\"\r\n        [disabled]=\"nomineeUpdateForm.invalid \">Save</button>\r\n    &nbsp;&nbsp;&nbsp;\r\n    <button type=\"button\" class=\"cancelbtn\" (click)=\"close()\">\r\n        Cancel\r\n    </button>\r\n</div>","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { AppConfirmService } from 'app/shared/services/app-confirm/app-confirm.service';\r\nimport { ApplicationEntryStageService } from 'app/shared/services/application-entry-stage.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { TasksummaryService } from '../../tasksummary.service';\r\n\r\n@Component({\r\n  selector: 'app-mandate-details-update',\r\n  templateUrl: './mandate-details-update.component.html',\r\n  styleUrls: ['./mandate-details-update.component.scss']\r\n})\r\nexport class MandateDetailsUpdateComponent implements OnInit {\r\n\r\n  mandatesUpdateForm: FormGroup;\r\n  accountId: any;\r\n  no_of_sig: any;\r\n  no_of_applicants: any;\r\n  flag: boolean;\r\n  flag1: boolean;\r\n  arrayModeOfOperation: any;\r\n  showEditOption: boolean;\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public data,\r\n    public dialogRef: MatDialogRef<MandateDetailsUpdateComponent>,\r\n    private formBuilder: FormBuilder,\r\n    private apiService: ApplicationEntryStageService,\r\n    public snack: MatSnackBar,\r\n    private ls: LocalStoreService,\r\n    private api: ApiService,\r\n    private confirmService: AppConfirmService,\r\n    private tasksummaryService: TasksummaryService\r\n\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    console.log(this.data);\r\n\r\n    this.accountId = this.ls.getItem('accountId')\r\n    this.getModeOfOperation('opr_mode');\r\n    if (this.data) {\r\n      this.showEditOption = true;\r\n      this.buildMandateForm()\r\n      this.addMandateToFormGroup(this.data)\r\n    } else {\r\n      this.showEditOption = false;\r\n      this.buildMandateForm();\r\n      this.addMandateToFormGroup();\r\n    }\r\n  }\r\n\r\n  buildMandateForm() {\r\n    this.mandatesUpdateForm = this.formBuilder.group({\r\n      mandates: this.formBuilder.array([]),\r\n    });\r\n  }\r\n\r\n  addMandateToFormGroup(data?) {\r\n    const numberOfItems = data? data.length: 1;\r\n    console.log('numberOfItems', numberOfItems);\r\n    for (let i = 0; i < numberOfItems; i++) {\r\n      this.m.push(\r\n        this.formBuilder.group({\r\n          mandateId: [data?data.mandateId:''],\r\n          productAccountId: [this.accountId],\r\n          modeOfOperation: ['', Validators.required],\r\n          amountFrom: ['', Validators.required],\r\n          amountTo: ['', Validators.required],\r\n          totalSignaturesRequired: [''],\r\n          remarks: [''],\r\n        })\r\n      );\r\n      this.m.at(i).patchValue(data[i])\r\n    }\r\n  }\r\n  removeMandate(i: number) {\r\n    let mandateId = this.m.at(i).get('mandateId').value;\r\n    this.confirmService\r\n      .confirm({\r\n        title: 'Confirm',\r\n        message: 'Are you sure want to remove?',\r\n        ok: 'Yes',\r\n        cancel: 'No'\r\n      })\r\n      .subscribe((res) => {\r\n        console.log('res:: removed ', res);\r\n        if (res) {\r\n          this.apiService.deleteMandateById(mandateId, 'ADMIN').subscribe(\r\n            (data: any) => {\r\n              console.log('data', data);\r\n            },\r\n            (err) => {\r\n              const control = <FormArray>(\r\n                this.mandatesUpdateForm.controls['mandates']\r\n              );\r\n              control.removeAt(i);\r\n              if (err.status === 200) {\r\n                this.snack.open('Record Deleted Successfully', 'OK', {\r\n                  duration: 4000,\r\n                  verticalPosition: 'top',\r\n                  horizontalPosition: 'right',\r\n                });\r\n              }\r\n            }\r\n          );\r\n        } else return;\r\n      });\r\n  }\r\n  get f() {\r\n    return this.mandatesUpdateForm.controls;\r\n  }\r\n  get m() {\r\n    return this.f.mandates as FormArray;\r\n  }\r\n  getModeOfOperation(key: string) {\r\n    this.api.getDropDownValues(key).subscribe((data) => {\r\n      this.arrayModeOfOperation = data;\r\n    });\r\n  }\r\n  onSubmit() {\r\n    this.apiService.saveMandateDetails(this.mandatesUpdateForm.value).subscribe(\r\n      (data: any) => {\r\n        console.log(data);\r\n        if (data === 200 || data !== null) {\r\n          this.snack.open(' Mandate Details Updated!', 'OK', {\r\n            duration: 4000,\r\n            verticalPosition: 'top',\r\n            horizontalPosition: 'right',\r\n          });\r\n              this.dialogRef.close({\r\n                status: 'BACKLOG'\r\n              })\r\n        } else if (data === 500) {\r\n          this.snack.open(\r\n            'Not able to connect to server!',\r\n            'INTERNAL SERVER ERROR',\r\n            {\r\n              duration: 4000,\r\n              verticalPosition: 'top',\r\n              horizontalPosition: 'right',\r\n            }\r\n          );\r\n        }\r\n      },\r\n      (err) => {\r\n        console.log(err);\r\n      }\r\n    );\r\n  }\r\n  _keyPress(event: any) {\r\n    const pattern = /[0-9]/;\r\n    let inputChar = String.fromCharCode(event.charCode);\r\n    if (!pattern.test(inputChar)) {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n  _keyPress2(event: any) {\r\n    this.no_of_sig = event.key;\r\n    if (isNaN(event.key)) {\r\n      console.log('input is invalid');\r\n    } else if (event.key > this.no_of_applicants) {\r\n      console.log('no of signatories is more than no of applicants');\r\n      this.flag = true;\r\n    } else if (event.key == 0) {\r\n      this.flag1 = true;\r\n    } else {\r\n      this.flag = false;\r\n      this.flag1 = false;\r\n    }\r\n    const pattern = /[0-9]/;\r\n    let inputChar = String.fromCharCode(event.charCode);\r\n    if (!pattern.test(inputChar)) {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n  close() {\r\n    this.dialogRef.close({\r\n      status: \"ONGOING\"\r\n    })\r\n  }\r\n\r\n}\r\n","<div fxLayout=\"row\" fxLayoutGap=\"25px\" fxLayout=\"row\" fxLayoutAlign=\"end\" class=\"contain\">\r\n    <mat-icon class=\"closeIcon\" (click)=\"close()\">close</mat-icon>\r\n</div>\r\n<h1 mat-dialog-title>Mandate Details</h1>\r\n<mat-dialog-content>\r\n    <form [formGroup]=\"mandatesUpdateForm\" *ngIf=\"mandatesUpdateForm\">\r\n        <div *ngFor=\"let mandate of m.controls; let i = index\">\r\n            <mat-accordion>\r\n                <mat-expansion-panel expanded=\"true\" (opened)=\"panelOpenState = true\" (closed)=\"panelOpenState = false\">\r\n                    <mat-expansion-panel-header>\r\n                        <mat-panel-title>\r\n                            <ng-container *ngIf=\"showEditOption; else createMandate\">\r\n                                Update Mandate {{ i + 1 }}\r\n                            </ng-container>\r\n                            <ng-template #createMandate>\r\n                                Create Mandate {{ i + 1 }}\r\n                            </ng-template>\r\n                        </mat-panel-title>\r\n                    </mat-expansion-panel-header>\r\n                    <div [formGroup]=\"mandate\">\r\n                        <div fxLayout=\"row\" fxLayoutGap=\"25px\">\r\n                            <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-1\">\r\n                                <div>\r\n                                    <mat-hint>\r\n                                        Mode Of Operation\r\n                                    </mat-hint>\r\n                                    <mat-card>\r\n                                        <mat-select formControlName=\"modeOfOperation\" name=\"mod\" required>\r\n                                            <mat-option *ngFor=\"let modeOfOperation of arrayModeOfOperation\"\r\n                                                [value]=\"modeOfOperation\">\r\n                                                {{ modeOfOperation }}\r\n                                            </mat-option>\r\n                                        </mat-select>\r\n                                    </mat-card>\r\n                                    <mat-error *ngIf=\"mandate.get('modeOfOperation').touched && mandate.get('modeOfOperation').hasError('required')\">\r\n                                        Mode Of Operation is Required!\r\n                                    </mat-error>\r\n                                </div>\r\n                                <div fxLayout=\"row\" fxLayoutGap=\"10px\" fxLayoutAlign=\"space-between start\">\r\n                                    <div>\r\n                                        <mat-hint>Amount From*</mat-hint>\r\n                                        <mat-card>\r\n                                            <input matInput maxlength=\"10\" name=\"a_from\" formControlName=\"amountFrom\"\r\n                                                placeholder=\"Amount From\" (keypress)=\"_keyPress($event)\" />\r\n                                        </mat-card>\r\n                                        <mat-error *ngIf=\"mandate.get('amountFrom').touched && mandate.get('amountFrom').hasError('required')\">\r\n                                            Amount From is Required!\r\n                                        </mat-error>\r\n                                    </div>\r\n                                    <div>\r\n                                        <mat-hint>Amount From*</mat-hint>\r\n                                        <mat-card>\r\n                                            <input matInput maxlength=\"10\" name=\"a_to\" formControlName=\"amountTo\"\r\n                                                placeholder=\"Amount To\" (keypress)=\"_keyPress($event)\" />\r\n                                        </mat-card>\r\n                                        <mat-error *ngIf=\"mandate.get('amountTo').touched && mandate.get('amountTo').hasError('required')\">\r\n                                            Amount To is Required!\r\n                                        </mat-error>\r\n                                    </div>\r\n                                </div>\r\n                                <div>\r\n                                    <mat-hint>Required Signatories</mat-hint>\r\n                                    <mat-card>\r\n                                        <input matInput (keypress)=\"_keyPress2($event)\" name=\"a_sig\"\r\n                                            formControlName=\"totalSignaturesRequired\" maxlength=\"1\"\r\n                                            placeholder=\"Required No of Signatories\" />\r\n                                    </mat-card>\r\n                                    <mat-error *ngIf=\"mandate.get('totalSignaturesRequired').touched && mandate.get('totalSignaturesRequired').hasError('required')\">\r\n                                        No of Signatories is Required!\r\n                                    </mat-error>\r\n                                    <div>\r\n                                        <small style=\"color: red\" *ngIf=\"flag\">\r\n                                            No of Signatories can not be more than no of\r\n                                            applicants!\r\n                                        </small>\r\n                                    </div>\r\n                                </div>\r\n                                <div>\r\n                                    <mat-hint>Remarks</mat-hint>\r\n                                    <textarea matInput name=\"remark\" formControlName=\"remarks\"\r\n                                        placeholder=\"Leave a Remarks\"></textarea>\r\n                                </div>\r\n                                <div class=\"pb-1\">\r\n                                    <button mat-button color=\"primary\" class=\"place\" (click)=\"addMandateToFormGroup()\" [disabled]=\"i < m.controls.length-1\">\r\n                                        <mat-icon>add</mat-icon> ADD MANDATE\r\n                                    </button>\r\n                                    <button mat-button color=\"warn\" (click)=\"removeMandate(i)\"\r\n                                        *ngIf=\"mandate.get('mandateId').value != null\">\r\n                                        <mat-icon></mat-icon> REMOVE MANDATE\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </mat-expansion-panel>\r\n            </mat-accordion>\r\n        </div>\r\n    </form>\r\n</mat-dialog-content>\r\n\r\n<div fxLayout=\"row\" fxLayoutAlign=\"end\" fxLayoutGap=\"20px\">\r\n    <button type=\"button\" class=\"editbtn\" mat-raised-button [disabled]=\"flag || !mandatesUpdateForm.valid || flag1\"\r\n        (click)=\"onSubmit()\">Save</button>\r\n    &nbsp;&nbsp;&nbsp;\r\n    <button type=\"button\" class=\"cancelbtn\" (click)=\"close()\">\r\n        Cancel\r\n    </button>\r\n</div>","import { ChangeDetectorRef, Component, Inject, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { flatMap, filter } from 'lodash/fp';\r\nimport { flow } from 'lodash';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { TasksummaryService } from '../../tasksummary.service';\r\n\r\n@Component({\r\n  selector: 'app-service-details-update',\r\n  templateUrl: './service-details-update.component.html',\r\n  styleUrls: ['./service-details-update.component.scss']\r\n})\r\nexport class ServiceDetailsUpdateComponent implements OnInit {\r\n\r\n  accountId: any;\r\n  serviceUpdateForm: FormGroup\r\n  statementList = [\r\n    {\r\n      \"id\": 1,\r\n      \"name\": \"EMAIL\",\r\n      \"checked\": false\r\n    },\r\n    {\r\n      \"id\": 2,\r\n      \"name\": \"POST\",\r\n      \"checked\": false\r\n    }\r\n  ];\r\n  bankList = [\r\n    {\r\n      \"id\": 1,\r\n      \"name\": \"Phone Banking\",\r\n      \"checked\": false\r\n    },\r\n    {\r\n      \"id\": 2,\r\n      \"name\": \"Kiosk Banking\",\r\n      \"checked\": false\r\n    },\r\n    {\r\n      \"id\": 3,\r\n      \"name\": \"Direct Banking\",\r\n      \"checked\": false\r\n    }\r\n  ];\r\n  communicationList = [\r\n    {\r\n      \"id\": 1,\r\n      \"name\": \"EMAIL\",\r\n      \"checked\": false\r\n    },\r\n    {\r\n      \"id\": 2,\r\n      \"name\": \"POST\",\r\n      \"checked\": false\r\n    },\r\n    {\r\n      \"id\": 3,\r\n      \"name\": \"SMS\",\r\n      \"checked\": false\r\n    }\r\n  ];\r\n  bankChannelPreferencesArray: any[] = [];\r\n  arrayCardType = [\"Normal\", \"Silver\", \"Gold\", \"Diamond\", \"Platinum\"];\r\n  arrayModeOfOperation = [\r\n    \"25000\",\r\n    \"50000\",\r\n    \"100000\",];\r\n  isDebitLimit: boolean;\r\n  commChannelPreferencesArray: any = [];\r\n  statementFrncy: string;\r\n  AccStatementPreferenceArray: any = [];\r\n  bankChanlPref: string;\r\n  Platinum: boolean = false;\r\n  Diamond: boolean = false;\r\n  Normal: boolean = false;\r\n  Silver: boolean = false;\r\n  Gold: boolean = false;\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public data,\r\n    public dialogRef: MatDialogRef<ServiceDetailsUpdateComponent>,\r\n    private ls: LocalStoreService,\r\n    private formBuilder: FormBuilder,\r\n    private cdr: ChangeDetectorRef,\r\n    private apiService: ApiService,\r\n    private snack: MatSnackBar,\r\n    private tasksummaryService: TasksummaryService\r\n\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    console.log(this.data);\r\n    this.accountId = this.ls.getItem('accountId')\r\n    if (this.data != undefined && this.data != null) {\r\n      this.buildServiceForm(this.data)\r\n      this.statementList = this.data.statementPref;\r\n      this.communicationList = this.data.commChannelPref;\r\n      this.bankList = this.data.bankChannelPref;\r\n      if (this.data.debitCardRequired) {\r\n        this.isDebitLimit = true;\r\n      }\r\n      // console.log(\"showEditOption\", this.showEditOption);\r\n      this.cdr.markForCheck();\r\n      for (var i = 0; i < this.bankList.length; i++) {\r\n\r\n        if (this.bankList[i].checked) {\r\n          this.bankChannelPreferencesArray.push(this.bankList[i].name);\r\n        }\r\n      }\r\n\r\n      for (var i = 0; i < this.communicationList.length; i++) {\r\n\r\n        if (this.communicationList[i].checked) {\r\n          this.commChannelPreferencesArray.push(this.communicationList[i].name);\r\n        }\r\n      }\r\n      for (var i = 0; i < this.statementList.length; i++) {\r\n        if (this.statementList[i].checked) {\r\n          this.AccStatementPreferenceArray.push(this.statementList[i].name);\r\n        }\r\n      }\r\n\r\n    }\r\n    else {\r\n      this.buildServiceForm()\r\n      this.serviceUpdateForm.controls['statementPref'].patchValue(this.statementList);\r\n      this.serviceUpdateForm.controls['commChannelPref'].patchValue(this.communicationList);\r\n    }\r\n  }\r\n\r\n  buildServiceForm(data?) {\r\n    this.serviceUpdateForm = this.formBuilder.group({\r\n      accServiceId: [data ? data.accServiceId : null],\r\n      productAccountId: [this.accountId != null ? this.accountId : null],\r\n      statementFrequency: [data ? data.statementFrequency : ''],\r\n      statementPref: [data ? this.flattenValues(data.statementPref) : ''],\r\n      bankChannelPref: [data ? data.bankChannelPref : ''],\r\n      commChannelPref: [data ? this.flattenValues(data.commChannelPref) : ''],\r\n      chequebookNeeded: [data ? data.chequebookNeeded : false],\r\n      debitcardNeeded: [data ? data.debitcardNeeded : false],\r\n      passbookNeeded: [data ? data.passbookNeeded : false],\r\n      cardType: [data ? data.cardType : ''],\r\n      modeOfOperation: [data ? data.modeOfOperation : ''],\r\n      debitCardRequired: [data ? data.debitCardRequired : false],\r\n      debitCardLimit: [data ? data.debitCardLimit : 0],\r\n      debitCardType: [data ? data.debitCardType : '']\r\n\r\n    });\r\n  }\r\n  flattenValues(checkboxes) {\r\n    const flattenedValues = flow([\r\n      filter(checkbox => checkbox.checked),\r\n      flatMap(checkbox => checkbox.name)\r\n    ])(checkboxes);\r\n    return flattenedValues.join(',');\r\n  }\r\n  onToggle(event: any) {\r\n    console.log(\"event\", event.checked);\r\n    if (event.checked == true) {\r\n      this.isDebitLimit = true\r\n    }\r\n    else {\r\n      this.isDebitLimit = false;\r\n    }\r\n  }\r\n  cards(event: any) {\r\n    console.log(event.value);\r\n    if (event.value == \"Normal\") {\r\n      console.log(event.value);\r\n      this.Normal = true;\r\n      this.Silver = false;\r\n      this.Gold = false;\r\n      this.Diamond = false;\r\n      this.Platinum = false;\r\n    }\r\n    else if (event.value == \"Silver\") {\r\n      this.Silver = true;\r\n      this.Normal = false;\r\n      this.Gold = false;\r\n      this.Diamond = false;\r\n      this.Platinum = false;\r\n    }\r\n    else if (event.value == \"Gold\") {\r\n      this.Gold = true;\r\n      this.Silver = false;\r\n      this.Normal = false;\r\n      this.Diamond = false;\r\n      this.Platinum = false;\r\n\r\n    }\r\n    else if (event.value == \"Diamond\") {\r\n      this.Diamond = true;\r\n      this.Normal = false;\r\n      this.Silver = false;\r\n      this.Gold = false;\r\n      this.Platinum = false;\r\n    }\r\n    else if (event.value == \"Platinum\") {\r\n      this.Platinum = true;\r\n      this.Normal = false;\r\n      this.Silver = false;\r\n      this.Gold = false;\r\n      this.Diamond = false;\r\n    }\r\n  }\r\n  onChecklistChange(checked, checkbox) {\r\n    checkbox.checked = checked;\r\n    const checklist = this.serviceUpdateForm.get('statementPref');\r\n    checklist.setValue(this.flattenValues(this.statementList));\r\n    if (checked) {\r\n      this.AccStatementPreferenceArray.push(checkbox.name);\r\n    }\r\n    else {\r\n      this.AccStatementPreferenceArray.forEach((item, index) => {\r\n        if (item === checkbox.name) {\r\n          this.AccStatementPreferenceArray.splice(index, 1);\r\n        }\r\n      });\r\n    }\r\n  }\r\n  onCheckComChange(checked, checkbox) {\r\n    console.log(checked);\r\n    console.log(checkbox);\r\n    checkbox.checked = checked;\r\n    const checklist = this.serviceUpdateForm.get('commChannelPref');\r\n    checklist.setValue(this.flattenValues(this.communicationList));\r\n    if (checked) {\r\n      this.commChannelPreferencesArray.push(checkbox.name);\r\n      console.log(\"checked\", checkbox.name);\r\n    }\r\n    else {\r\n      this.commChannelPreferencesArray.forEach((item, index) => {\r\n        if (item === checkbox.name) {\r\n          this.commChannelPreferencesArray.splice(index, 1);\r\n          console.log(\"checked\", checkbox.name);\r\n        }\r\n      });\r\n    }\r\n  }\r\n  onCheckbankChange(checked, checkbox) {\r\n    console.log(checked);\r\n    console.log(checkbox);\r\n    checkbox.checked = checked;\r\n    const checklist = this.serviceUpdateForm.get('bankChannelPref');\r\n    checklist.setValue(this.flattenValues(this.bankList));\r\n    if (checked) {\r\n      this.bankChannelPreferencesArray.push(checkbox.name);\r\n      console.log(\"checked\", checkbox.name);\r\n    }\r\n    else {\r\n      this.bankChannelPreferencesArray.forEach((item, index) => {\r\n        if (item === checkbox.name) {\r\n          this.bankChannelPreferencesArray.splice(index, 1);\r\n          console.log(\"checked\", checkbox.name);\r\n        }\r\n      });\r\n    }\r\n  }\r\n  onSubmit() {\r\n\r\n    let accountPayload = {\r\n      \"productAccountId\": this.accountId,\r\n      \"accServiceId\": this.serviceUpdateForm.value.accServiceId,\r\n      \"statementFrequency\": this.serviceUpdateForm.value.statementFrequency,\r\n      \"statementPref\": this.statementList,\r\n      \"bankChannelPref\": this.bankList,\r\n      \"commChannelPref\": this.communicationList,\r\n      \"chequebookNeeded\": this.serviceUpdateForm.value.chequebookNeeded,\r\n      \"debitCardRequired\": this.serviceUpdateForm.value.debitCardRequired,\r\n      \"passbookNeeded\": this.serviceUpdateForm.value.passbookNeeded,\r\n      \"debitCardLimit\": this.serviceUpdateForm.value.debitCardLimit,\r\n      \"debitCardType\": this.serviceUpdateForm.value.debitCardType,\r\n      \"accountType\": \"createAccount\"\r\n    };\r\n\r\n    if (this.serviceUpdateForm.invalid) {\r\n      return;\r\n    }\r\n\r\n    this.apiService.createAccountService(this.accountId, accountPayload)\r\n      .subscribe((data: any) => {\r\n        console.log(data);\r\n        this.snack.open('Account Service Updated!', 'OK', { duration: 4000, verticalPosition: 'top', horizontalPosition: 'right' });\r\n        this.dialogRef.close({\r\n          status:\"BACKLOG\"\r\n        })\r\n      }, err => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n\r\n  close() {\r\n    this.dialogRef.close({\r\n      status: \"ONGOING\"\r\n    })\r\n  }\r\n}\r\n","<div fxLayout=\"row\" fxLayoutGap=\"25px\" fxLayout=\"row\" fxLayoutAlign=\"end\" class=\"contain\">\r\n    <mat-icon class=\"closeIcon\" (click)=\"close()\">close</mat-icon>\r\n</div>\r\n<h1 mat-dialog-title>Account Service Details</h1>\r\n<mat-dialog-content>\r\n    <mat-card>\r\n        <mat-card-title>\r\n            Account Statement\r\n        </mat-card-title>\r\n        <mat-card-content>\r\n            <form *ngIf=\"serviceUpdateForm\" [formGroup]=\"serviceUpdateForm\">\r\n                <div fxLayout=\"row\" fxLayoutGap=\"20%\">\r\n                    <div>\r\n                        <div>\r\n                            <mat-label>\r\n                                Account Statement Frequency\r\n                            </mat-label>\r\n                        </div>\r\n                        <div>\r\n                            <mat-radio-group name=\"statementFreq\" formControlName=\"statementFrequency\"\r\n                                (change)=\"statementFrequency($event.value)\" required>\r\n                                <mat-radio-button value=\"MONTHLY\" color=\"primary\">\r\n                                    Monthly\r\n                                </mat-radio-button>\r\n                                <mat-radio-button value=\"BIANNUAL\" color=\"primary\">\r\n                                    Bi-Annual\r\n                                </mat-radio-button>\r\n                                <mat-radio-button value=\"QUATERLY\" color=\"primary\">\r\n                                    Quaterly\r\n                                </mat-radio-button>\r\n                                <mat-radio-button value=\"ANNUAL\" color=\"primary\">\r\n                                    Annual\r\n                                </mat-radio-button>\r\n                            </mat-radio-group>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div>\r\n                        <div>\r\n                            <mat-label>\r\n                                Account Statement Preference*\r\n                            </mat-label>\r\n                        </div>\r\n                        <div>\r\n                            <p *ngFor=\"let item of statementList\" formArrayName=\"statementPref\">\r\n                                <mat-checkbox class=\"checkbox-margin\" color=\"primary\"\r\n                                    (change)=\"onChecklistChange($event.checked, item)\" [value]=\"item\"\r\n                                    [checked]=\"item.checked\">{{ item.name }}\r\n                                </mat-checkbox>\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                <div fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"mt-32\">\r\n                    <button mat-button rounded color=\"primary\">\r\n                        MORE PREFERENCE <!--<mat-icon>keyboard_arrow_down</mat-icon>  -->\r\n                        <!--removed event from button  (click)=\"togglePreference()\"-->\r\n                    </button>\r\n                </div>\r\n                <div>\r\n                    <div fxLayout=\"row\" fxLayoutGap=\"20%\">\r\n\r\n                        <div fxLayout=\"row wrap\">\r\n                            <div fxFlex=\"100\">\r\n                                <mat-label>\r\n                                    Banking Channel Preferences*\r\n                                </mat-label>\r\n                            </div>\r\n                            <div fxFlex=\"100\">\r\n                                <div fxFlex=\"60\" *ngFor=\"let item of bankList\" formArrayName=\"bankChannelPref\">\r\n                                    <mat-checkbox color=\"primary\" class=\"checkbox-margin\"\r\n                                        (change)=\"onCheckbankChange($event.checked, item)\" [value]=\"item\"\r\n                                        [checked]=\"item.checked\">{{ item.name }}\r\n                                    </mat-checkbox>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div fxLayout=\"row wrap\">\r\n                            <div fxFlex=\"100\">\r\n                                <mat-label>Communication Channel Preferences*</mat-label>\r\n                            </div>\r\n                            <div fxFlex=\"100\">\r\n                                <div fxFlex=\"25\" *ngFor=\"let item of communicationList\" formArrayName=\"commChannelPref\">\r\n                                    <mat-checkbox color=\"primary\" class=\"checkbox-margin\"\r\n                                        (change)=\"onCheckComChange($event.checked, item)\" [value]=\"item\"\r\n                                        [checked]=\"item.checked\">{{ item.name }}\r\n                                    </mat-checkbox>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div fxLayout=\"row\" fxLayoutGap=\"25px\">\r\n                        <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-1\">\r\n                            <div class=\"m-32\"></div>\r\n                            <div class=\"pb-1 mt-32\">\r\n                                Do you need a cheque book?\r\n                                <mat-slide-toggle color=\"primary\" name=\"checqueBook\"\r\n                                    formControlName=\"chequebookNeeded\"></mat-slide-toggle>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div fxFlex=\"100\" fxFlex.gt-xs=\"50\">\r\n                            <div class=\"pb-1 mt-32\">\r\n                                Do you need a passbook book?\r\n                                <mat-slide-toggle color=\"primary\" name=\"passbook\"\r\n                                    formControlName=\"passbookNeeded\"></mat-slide-toggle>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div fxLayout=\"row\" fxLayoutGap=\"25px\">\r\n                        <div fxFlex=\"100\" fxFlex.gt-xs=\"25\" class=\"pr-1\">\r\n                            <div class=\"m-32\"></div>\r\n                            <div class=\"pb-1 mt-32\">\r\n                                Do you need a debit card?\r\n                                <mat-slide-toggle color=\"primary\" (change)=\"onToggle($event)\" name=\"debitCardRequired\"\r\n                                    formControlName=\"debitCardRequired\"></mat-slide-toggle>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div *ngIf=\"isDebitLimit\" fxFlex=\"100\" style=\"padding-top: 20px;\" fxFlex.gt-xs=\"20\"\r\n                            class=\"pr-1\">\r\n                            <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                <mat-label>Card Type</mat-label>\r\n\r\n                                <mat-select formControlName=\"debitCardType\" name=\"debitCardType\" required\r\n                                    (selectionChange)=\"cards($event)\">\r\n                                    <mat-option *ngFor=\"let cardType of arrayCardType\" [value]=\"cardType\">\r\n                                        {{cardType}}\r\n                                    </mat-option>\r\n                                </mat-select>\r\n\r\n                            </mat-form-field>\r\n                            <div>\r\n                                <div *ngIf=\"Normal\">\r\n                                    <table class=\"table table-bordered\">\r\n                                        <thead style=\"color: #03a9f4;\">\r\n                                            <tr>\r\n                                                <th>Card Type</th>\r\n                                                <th>Daily Limit</th>\r\n                                                <th>Domestic Limit</th>\r\n                                                <th>International Limit</th>\r\n                                                <th>ATM Limit</th>\r\n                                                <th>POS Limit </th>\r\n                                                <th>Internet Limit </th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            <tr>\r\n                                                <td>Normal</td>\r\n                                                <td>20,000</td>\r\n                                                <td>20,000</td>\r\n                                                <td>Nil</td>\r\n                                                <td>10,000</td>\r\n                                                <td> </td>\r\n                                                <td> </td>\r\n                                            </tr>\r\n                                        </tbody>\r\n                                    </table>\r\n                                </div>\r\n                                <div *ngIf=\"Silver\">\r\n                                    <table class=\"table table-bordered\">\r\n                                        <thead style=\"color: #03a9f4;\">\r\n                                            <tr>\r\n                                                <th>Card Type</th>\r\n                                                <th>Daily Limit</th>\r\n                                                <th>Domestic Limit</th>\r\n                                                <th>International Limit</th>\r\n                                                <th>ATM Limit</th>\r\n                                                <th>POS Limit </th>\r\n                                                <th>Internet Limit </th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            <tr>\r\n                                                <td>Silver</td>\r\n                                                <td>40,000</td>\r\n                                                <td>40,000</td>\r\n                                                <td>20,000</td>\r\n                                                <td>40,000</td>\r\n                                                <td> </td>\r\n                                                <td> </td>\r\n                                            </tr>\r\n                                        </tbody>\r\n                                    </table>\r\n                                </div>\r\n\r\n                                <div *ngIf=\"Gold\">\r\n                                    <table class=\"table table-bordered\">\r\n                                        <thead style=\"color: #03a9f4;\">\r\n                                            <tr>\r\n                                                <th>Card Type</th>\r\n                                                <th>Daily Limit</th>\r\n                                                <th>Domestic Limit</th>\r\n                                                <th>International Limit</th>\r\n                                                <th>ATM Limit</th>\r\n                                                <th>POS Limit </th>\r\n                                                <th>Internet Limit </th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            <tr>\r\n                                                <td>Gold</td>\r\n                                                <td>50,000</td>\r\n                                                <td>50,000</td>\r\n                                                <td>30,000</td>\r\n                                                <td>50,000</td>\r\n                                                <td> </td>\r\n                                                <td> </td>\r\n                                            </tr>\r\n                                        </tbody>\r\n                                    </table>\r\n                                </div>\r\n\r\n                                <div *ngIf=\"Diamond\">\r\n                                    <table class=\"table table-bordered\">\r\n                                        <thead style=\"color: #03a9f4;\">\r\n                                            <tr>\r\n                                                <th>Card Type</th>\r\n                                                <th>Daily Limit</th>\r\n                                                <th>Domestic Limit</th>\r\n                                                <th>International Limit</th>\r\n                                                <th>ATM Limit</th>\r\n                                                <th>POS Limit </th>\r\n                                                <th>Internet Limit </th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            <tr>\r\n                                                <td>Diamond</td>\r\n                                                <td>75,000</td>\r\n                                                <td>75,000</td>\r\n                                                <td>50,000</td>\r\n                                                <td>75,000</td>\r\n                                                <td> </td>\r\n                                                <td> </td>\r\n                                            </tr>\r\n                                        </tbody>\r\n                                    </table>\r\n                                </div>\r\n                                <div *ngIf=\"Platinum\">\r\n                                    <table class=\"table table-bordered\">\r\n                                        <thead style=\"color: #03a9f4;\">\r\n                                            <tr>\r\n                                                <th>Card Type</th>\r\n                                                <th>Daily Limit</th>\r\n                                                <th>Domestic Limit</th>\r\n                                                <th>International Limit</th>\r\n                                                <th>ATM Limit</th>\r\n                                                <th>POS Limit </th>\r\n                                                <th>Internet Limit </th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            <tr>\r\n                                                <td>Platinum</td>\r\n                                                <td>1,00,000</td>\r\n                                                <td>1,00,000</td>\r\n                                                <td>1,00,000</td>\r\n                                                <td>1,00,000</td>\r\n                                                <td> </td>\r\n                                                <td> </td>\r\n                                            </tr>\r\n                                        </tbody>\r\n                                    </table>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                    </div>\r\n                </div>\r\n\r\n            </form>\r\n        </mat-card-content>\r\n    </mat-card>\r\n</mat-dialog-content>\r\n<div fxLayout=\"row\" fxLayoutAlign=\"end\" fxLayoutGap=\"20px\">\r\n    <button mat-raised-button class=\"editbtn\" (click)=\"onSubmit()\" [disabled]=\"!serviceUpdateForm.valid || \r\n  bankChannelPreferencesArray.length == 0 ||\r\n  commChannelPreferencesArray.length == 0  || AccStatementPreferenceArray.length == 0 \">Save</button>\r\n    &nbsp;&nbsp;&nbsp;\r\n    <button type=\"button\" class=\"cancelbtn\" (click)=\"close()\">\r\n        Cancel\r\n    </button>\r\n</div>","<div >\r\n    <mat-dialog-content>\r\n      <div fxLayout=\"row\" class=\"contain\">\r\n        <mat-icon style=\"padding-left: 100%;\"class=\"backIcon\" (click)=\"goToClose()\">close</mat-icon>\r\n    </div>\r\n      <h1>Loan Assessment Details</h1>\r\n      <form class=\"mt-32\" [formGroup]=\"loanAssessmentUpdate\">\r\n        <div fxLayout=\"row wrap\" fxLayout.lt-sm=\"column\">\r\n          <div fxFlex=\"33.33\" class=\"pr-16\">\r\n            <mat-label>Approved Loan Amount </mat-label>\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n              <input matInput name=\"approvedLoanAmount\" formControlName=\"approvedLoanAmount\"  \r\n               (keypress)=\"_keyPress($event)\" />\r\n            </mat-form-field>\r\n          </div>\r\n\r\n          <div fxFlex=\"33.33\" class=\"pr-16\">\r\n            <mat-label>Loan Tenure</mat-label>\r\n            <div class=\"pb-1\">\r\n                  <div fxLayout=\"row\" fxLayoutGap=\"5px\" fxLayoutAlign=\"space-between center\" >\r\n                  <div >\r\n                    <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                      <mat-select name=\"year\" placeholder=\"Year\" formControlName=\"year\"  >\r\n                      <mat-option *ngFor=\"let year of years\" [value]=\"year\">{{ year }}</mat-option> \r\n                      </mat-select>\r\n                   </mat-form-field> \r\n                  </div>\r\n    \r\n                  <div>\r\n                    <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                      <mat-select name=\"month\" placeholder=\"Month\" formControlName=\"month\" >\r\n                      <mat-option *ngFor=\"let month of months\" [value]=\"month\">{{ month }}</mat-option> \r\n                       </mat-select>\r\n                    </mat-form-field>\r\n                  </div>\r\n    \r\n                  <div>\r\n                    <mat-form-field class=\"full-width\"  appearance=\"fill\">\r\n                      <mat-select name=\"day\"  placeholder=\"Day\" formControlName=\"day\"  >\r\n                      <mat-option *ngFor=\"let day of days\" [value]=\"day\">{{ day }}</mat-option> \r\n                    </mat-select>\r\n                  </mat-form-field>\r\n                  </div>  \r\n                </div>\r\n            </div>\r\n          </div>\r\n          <div fxFlex=\"33.33\" class=\"pr-16\">\r\n    \r\n          </div>\r\n\r\n\r\n    \r\n        </div>\r\n    \r\n       \r\n        <div fxLayout=\"row wrap\">\r\n\r\n            <div fxFlex=\"33.33\" class=\"pr-16\">\r\n                <mat-label>System Recommendation </mat-label>\r\n                <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                    <mat-select formControlName=\"systemRecommendation\" placeholder=\"Recommended for Approval\" >\r\n                        <mat-option *ngFor=\"let systemRecommendation of arraySystemRecommendation\" [value]=\"systemRecommendation\"> \r\n                          {{systemRecommendation}} \r\n                        </mat-option> \r\n                      </mat-select>\r\n                </mat-form-field>\r\n              </div>\r\n        \r\n              <div fxFlex=\"33.33\" class=\"pr-16\">\r\n                <mat-label>User Recommendation</mat-label>\r\n                <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                    <mat-select formControlName=\"userRecommendation\" placeholder=\"User Recommendation\" >\r\n                        <mat-option *ngFor=\"let userRecommendation of arrayUserRecommendation\" [value]=\"userRecommendation\"> \r\n                          {{userRecommendation}} \r\n                        </mat-option> \r\n                      </mat-select>\r\n                </mat-form-field>\r\n              </div>\r\n         \r\n          <div fxFlex=\"33.33\" class=\"pr-16\">\r\n            <mat-label>Rate Of Interest</mat-label>\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                <input matInput name=\"rateOfInterest\" formControlName=\"rateOfInterest\" \r\n                (keypress)=\"_keyPress($event)\" />\r\n              \r\n            </mat-form-field>\r\n          </div>\r\n          </div>\r\n          <div fxLayout=\"row wrap\">\r\n          <div fxFlex=\"33.33\" class=\"pr-16\">\r\n            <mat-label>Requested Loan Amount</mat-label>\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n              <input matInput name=\"requestedLoanAmount\"  class=\"alignment\"\r\n              formControlName=\"requestedLoanAmount\"\r\n              (keypress)=\"_keyPress($event)\" />\r\n            </mat-form-field>\r\n          </div>\r\n           <div fxFlex=\"33.33\" class=\"pr-16\">\r\n            <mat-label>Loan Amount Recommended</mat-label>\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n              <input matInput name=\"loanAmountRecommendation\"  class=\"alignment\"\r\n              formControlName=\"loanAmountRecommendation\"\r\n              (keypress)=\"_keyPress($event)\"/>\r\n            </mat-form-field>\r\n          </div>\r\n          <div fxFlex=\"33.33\" class=\"pr-16\">\r\n            <!-- <mat-label>Loan Amount Recommended</mat-label>\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n              <input matInput name=\"loanAmountRecommended\"  class=\"alignment\"\r\n              formControlName=\"loanAmountRecommended\" />\r\n            </mat-form-field> -->\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </mat-dialog-content>\r\n    <mat-dialog-actions align=\"end\">\r\n      <button mat-button (click)=\"submitForm1()\">\r\n        Update\r\n      </button>\r\n      <button mat-button (click)=\"goToClose()\">Close</button>\r\n    </mat-dialog-actions>\r\n    </div>","import { Component, OnInit,Inject, ChangeDetectorRef } from '@angular/core';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { AppLoaderService } from 'app/shared/services/app-loader/app-loader.service';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { TasksummaryService } from '../../tasksummary.service';\r\n\r\n@Component({\r\n  selector: 'app-loan-assessment-details-update',\r\n  templateUrl: './loan-assessment-details-update.component.html',\r\n  styleUrls: ['./loan-assessment-details-update.component.scss']\r\n})\r\nexport class LoanAssessmentDetailsUpdateComponent implements OnInit {\r\n  loanAccountId: any;\r\n  loanaccountID: any;\r\n  loanAssessmentUpdate: FormGroup;\r\n  disbursementDetails: any;\r\n  selectedDay: number = 1;\r\n  day: number;\r\n  days: any[] = [];\r\n  months: any[] = [];\r\n  selectedYear: number;\r\n  year: number;\r\n  years: any[] = [];\r\n  arraySystemRecommendation:any[]=['Approved','Rejected'];\r\n  arrayUserRecommendation:any[]=['Approved','Rejected'];\r\n  assessmentDetails: any;\r\n\r\n  statusArr: any = ['BACKLOG', 'ONGOING', 'APPROVED', 'REJECTED']\r\n  arr: any = ['BACKLOG', 'ONGOINGArr', 'APPROVEDArr', 'REJECTEDArr']\r\n  BACKLOGArr: any = [];\r\n  ONGOINGArr: any = [];\r\n  REJECTEDArr: any = [];\r\n  APPROVEDArr: any = [];\r\n  \r\n  BACKLOGTotalPages: number = 0\r\n  ONGOINGTotalPages: number = 0\r\n  REJECTEDTotalPages: number = 0\r\n  APPROVEDTotalPages: number = 0\r\n\r\n  BACKLOGCount: number = 0\r\n  ONGOINGCount: number = 0\r\n  REJECTEDCount: number = 0\r\n  APPROVEDCount: number = 0\r\n\r\n  BACKLOGImage: any[] = [];\r\n  ONGOINGImage: any[] = [];\r\n  REJECTEDImage: any[] = [];\r\n  APPROVEDImage: any[] = [];\r\n\r\n  BACKLOGTotalRecords: number = 0;\r\n  ONGOINGTotalRecords: number = 0;\r\n  REJECTEDTotalRecords: number = 0;\r\n  APPROVEDTotalRecords: number = 0;\r\n\r\n  BACKLOGPage: number = 0;\r\n  ONGOINGPage: number = 0;\r\n  REJECTEDPage: number = 0;\r\n  APPROVEDPage: number = 0;\r\n  \r\n  constructor(private loader: AppLoaderService, public apiService: ApiService, @Inject(MAT_DIALOG_DATA) public data: any,\r\n    private fb: FormBuilder, private ls: LocalStoreService, public dialogRef: MatDialogRef<LoanAssessmentDetailsUpdateComponent>,\r\n    private snack: MatSnackBar,private taskSumService: TasksummaryService, private cdr: ChangeDetectorRef) { }\r\n\r\n  ngOnInit(): void {\r\n  this.selectedYear = new Date().getFullYear();\r\n  \r\n    for (let year = 0; year <= 50; year++) {\r\n      this.years.push(year+ \" year\");\r\n    }\r\n\r\n    for (let month = 0; month <= 11; month++) {\r\n      this.months.push(month+ \" month\");\r\n    }\r\n\r\n    for (let day = 0; day <= 30; day++) {\r\n      this.days.push(day+ \" day\");\r\n    }\r\n    this.loanaccountID = this.data.loanAccountId;\r\n    console.log('loanaccountID', this.loanaccountID)\r\n    this.buildDisbursementForm(this.data)\r\n  }\r\n  _keyPress(event: any) {\r\n    // console.log(\"key\",event);\r\n    const pattern = /[0-9]/;\r\n    let inputChar = String.fromCharCode(event.charCode);\r\n    console.log(\"inputChar\",inputChar);\r\n    inputChar=inputChar.toString();\r\n    console.log(\"inputChar1\",inputChar);\r\n    inputChar=inputChar\r\n    if (!pattern.test(inputChar)) {\r\n        event.preventDefault();\r\n    }\r\n   }\r\n   buildDisbursementForm(data?) {\r\n    console.log('item',data)\r\n   \r\n     \r\n    this.loanAssessmentUpdate= this.fb.group({\r\n        loanAccountId: [this.loanaccountID],\r\n        loanAmountRecommendation: [data ? data?.loanAssessmentInfo?.loanAmountRecommendation : ''],\r\n        approvedLoanAmount: [data ? data?.loanAssessmentInfo?.approvedLoanAmount : ''],\r\n        systemRecommendation: [data ? data?.loanAssessmentInfo?.systemRecommendation : ''],\r\n        userRecommendation:[data ? data?.loanAssessmentInfo?.userRecommendation:''],\r\n        rateOfInterest:[data ? data?.loanAssessmentInfo?.rateOfInterest:''],\r\n        requestedLoanAmount: [data ? data?.loanAssessmentInfo?.requestedLoanAmount : ''],\r\n        loanTenure: [data ? data?.loanAssessmentInfo?.loanTenure : ''],\r\n        day: [data ? (data?.loanAssessmentInfo?.loanTenure.split(\"-\")[2]) : \"\"],\r\n        month: [data ? data?.loanAssessmentInfo?.loanTenure.split(\"-\")[1] : \"\"],\r\n        year: [data ? (data?.loanAssessmentInfo?.loanTenure.split(\"-\")[0]) : \"\"],\r\n  \r\n \r\n    });\r\n\r\n    // console.log('form before',this.loanAssetForm)\r\n    // console.log('form aftr',this.loanAssetForm.value)\r\n  }\r\n  getDisbursementDetails() {\r\n \r\n    this.apiService.fetchLoanAssessment(this.loanaccountID).subscribe((assessmentDetails) => {\r\n \r\n      this.assessmentDetails = assessmentDetails;\r\n      console.log(\"this.assessmentDetails::\", this.assessmentDetails);\r\n    \r\n\r\n      this.buildDisbursementForm(this.disbursementDetails);\r\n      this.loanAssessmentUpdate.value.requestedLoanAmount = this.assessmentDetails.requestedLoanAmount;\r\n      this.loanAssessmentUpdate.value.rateOfInterest = this.assessmentDetails.rateOfInterest;\r\n      this.loanAssessmentUpdate.value.userRecommendation = this.assessmentDetails.userRecommendation;\r\n      this.loanAssessmentUpdate.value.systemRecommendation = this.assessmentDetails.systemRecommendation;\r\n      this.loanAssessmentUpdate.value.loanTenure = this.assessmentDetails.loanTenure;\r\n      this.loanAssessmentUpdate.value.approvedLoanAmount = this.assessmentDetails.approvedLoanAmount;\r\n      this.loanAssessmentUpdate.value.loanAmountRecommendation = this.assessmentDetails.loanAmountRecommendation;\r\n    ;\r\n    }, (err: any) => {\r\n      this.loader.close();\r\n    });\r\n  }\r\n\r\n  goToClose(): void {\r\n    this.dialogRef.close();\r\n\r\n    this.apiService.fetchLoanAssessment(this.loanaccountID).subscribe((assessmentDetails: any) => {\r\n      console.log(\"All Account Service\", assessmentDetails);\r\n      this.assessmentDetails = assessmentDetails;\r\n \r\n      console.log(\"this.assessmentDetails\", this.assessmentDetails);\r\n      console.log('form',this.loanAssessmentUpdate.value)\r\n\r\n   });\r\n   \r\n  }\r\n  submitForm1(){\r\n    \r\n    const renewData =\r\n    this.loanAssessmentUpdate.value.year +\r\n    \"-\" +\r\n    this.loanAssessmentUpdate.value.month +\r\n    \"-\" +\r\n    this.loanAssessmentUpdate.value.day;\r\n  this.loanAssessmentUpdate.get(\"loanTenure\").setValue(renewData);\r\n  delete this.loanAssessmentUpdate.value.year;\r\n  delete this.loanAssessmentUpdate.value.month;\r\n  delete this.loanAssessmentUpdate.value.day;\r\n\r\n    let payload={\r\n      // loanAccountId: this.showEditOption ? this.loanaccountID : null,\r\n      loanAccountId: this.data.loanAccountId,\r\n      rateOfInterest:this.loanAssessmentUpdate.value.rateOfInterest,\r\n      requestedLoanAmount:this.loanAssessmentUpdate.value.requestedLoanAmount,\r\n      loanTenure: this.loanAssessmentUpdate.value.loanTenure,  \r\n      userRecommendation:this.loanAssessmentUpdate.value.userRecommendation,\r\n      systemRecommendation:this.loanAssessmentUpdate.value.systemRecommendation,\r\n      approvedLoanAmount: this.loanAssessmentUpdate.value.approvedLoanAmount,\r\n      loanAmountRecommendation: this.loanAssessmentUpdate.value.loanAmountRecommendation\r\n     \r\n  \r\n  \r\n    }\r\n    console.log(\"payload\",payload)\r\n    this.apiService.updateAssessmentDetails(payload).subscribe(data => {\r\n      console.log(\"data\",data.loanAccountId);\r\n      this.loanaccountID = this.data.loanAccountId;\r\n      console.log('loanaccountID', this.loanaccountID)\r\n      this.assign(this.data.loanAccountId)\r\n      if (data === 200 || data !== null) {\r\n        let statusModel = {\r\n          loanAccountId: this.data.loanAccountId,\r\n          status: \"ONGOING\"\r\n        };\r\n        this.apiService.updateLoanDetailsStatus(statusModel).subscribe(data => {\r\n        });\r\n      //  sessionStorage.setItem('loanAccountId', data.loanAccountid);\r\n        let fundStatus = {\r\n          loanAccountid: this.data.loanAccountId\r\n          \r\n        };\r\n       \r\n\r\n        this.ls.setItem('fundByStatus', fundStatus);\r\n        this.ls.setItem('accountType', data.accountType);\r\n        this.ls.setItem('productName',data.businessProductName);\r\n \r\n    this.loanaccountID = this.data.loanAccountId;\r\n    console.log(\"this.productaccountID\",this.loanaccountID);\r\n        this.snack.open('Data Updated!', 'OK', {\r\n          duration: 4000,\r\n          verticalPosition: 'top',\r\n          horizontalPosition: 'right'\r\n        });\r\n        this.getDataOnLoad();\r\n      }\r\n      if( data === 500){\r\n        this.snack.open('Not able to connect to server!', 'INTERNAL SERVER ERROR', {\r\n          duration: 4000,\r\n          verticalPosition: 'top',\r\n          horizontalPosition: 'right'\r\n        });\r\n        console.log(\"500 error\")\r\n      }\r\n      \r\n      this.goToClose();\r\n    })\r\n  }\r\n  assign(valueForaccId) {\r\n    this.apiService.setAccountId({\r\n      loanAccountId: valueForaccId\r\n    });\r\n    console.log(\"loan\", this.loanAccountId)\r\n  }\r\n\r\n  async getDataOnLoad() {\r\n    for (let index = 0; index < this.statusArr.length; index++) {\r\n      const statusItem = this.statusArr[index];\r\n      this.fetchCustomerInfo(statusItem);\r\n    }\r\n\r\n  }\r\n\r\n   fetchCustomerInfo(status:string){\r\n   \r\n    this.taskSumService.getallLoanAccountData(status)\r\n            .subscribe((custResp:any) => {\r\n              console.log(\"Response\", custResp);\r\n              this.updateStatusResponse(status, custResp);\r\n            });\r\n  }\r\n\r\n  updateStatusResponse(status, data){\r\n    console.log(\"data\", data)\r\n    console.log(\"status\", status)\r\n  \r\n      if (status == 'ONGOING') {\r\n      this.ONGOINGArr = data?.loanList;\r\n      this.ONGOINGTotalPages = data?.totalPages;\r\n      this.ONGOINGTotalRecords = data?.totalNoOfElements;\r\n    }\r\n \r\n\r\n    this.cdr.markForCheck();\r\n}\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { TasksComponent } from './tasks/tasks.component';\r\nimport { TaskSummaryComponent } from './task-summary/task-summary.component';\r\nimport { KycTaskSummaryComponent } from './kyc-task-summary/kyc-task-summary.component';\r\nimport { CustOnBoardingTaskSummaryComponent } from './cust-on-boarding-task-summary/cust-on-boarding-task-summary.component';\r\nimport { CustOnBoardingApproverComponent } from './cust-on-boarding-approver/cust-on-boarding-approver.component';\r\nimport { CorporateTaskSummaryComponent } from './corporate-task-summary/corporate-task-summary.component';\r\nimport { CorporateApproverComponent } from './corporate-approver/corporate-approver.component';\r\nimport { CardOriginationTaskSummaryComponent } from './card-origination-task-summary/card-origination-task-summary.component';\r\nimport { CardAccountApproverComponent } from './card-account-approver/card-account-approver.component';\r\nimport { LoanAccountTaskSummaryComponent } from './loan-account-task-summary/loan-account-task-summary.component';\r\nimport { LoanAccountDetailsUpdateComponent } from './loan-account-approver/loan-account-details-update/loan-account-details-update.component';\r\nexport const TaskRoutes: Routes = [\r\n  {\r\n      path: '',\r\n    // component: TasksComponent,\r\n  },\r\n  {\r\n    path: 'task-summary',\r\n    component: TaskSummaryComponent,\r\n  },\r\n\r\n  {\r\n    path: 'cust-on-boarding-task-summary',\r\n    component: CustOnBoardingTaskSummaryComponent,\r\n  },\r\n  {\r\n    path: 'kyc-task-summary',\r\n    component: KycTaskSummaryComponent,\r\n  },\r\n  {\r\n    path: 'cust-on-boarding-approver',\r\n    component: CustOnBoardingApproverComponent,\r\n  },\r\n  {\r\n    path: 'corporate-task-summary',\r\n    component: CorporateTaskSummaryComponent,\r\n  },\r\n  {\r\n    path: 'loan-account-task-summary',\r\n    component: LoanAccountTaskSummaryComponent,\r\n  },\r\n   {\r\n    path: 'corporate-approver',\r\n    component: CorporateApproverComponent,\r\n  },\r\n  {\r\n    path:'card-account-task-summary',\r\n    component: CardOriginationTaskSummaryComponent,\r\n  },\r\n  {\r\n    path:'card-account-approver',\r\n    component: CardAccountApproverComponent,\r\n  },\r\n  {\r\n    path: 'loan-account-task-summary/loan-account-approver',\r\n    component: LoanAccountDetailsUpdateComponent,\r\n  }\r\n\r\n]\r\n","import { ChangeDetectorRef, Component, Inject, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { ApplicationEntryStageService } from 'app/shared/services/application-entry-stage.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport * as moment from 'moment';\r\n\r\n@Component({\r\n  selector: 'app-account-details-update',\r\n  templateUrl: './account-details-update.component.html',\r\n  styleUrls: ['./account-details-update.component.scss']\r\n})\r\nexport class AccountDetailsUpdateComponent implements OnInit {\r\n\r\n  accountUpdateForm: FormGroup\r\n  listOfCustByCif: any[];\r\n  timer: NodeJS.Timeout;\r\n  disableFundTheAccount: boolean;\r\n  flag: boolean;\r\n  arrayAccountBranch: any;\r\n  arrayAccountType: any;\r\n  onbackSpace: boolean;\r\n  isCifValid: boolean;\r\n  cifNumberPrimary: any;\r\n  showSpinn: boolean;\r\n  currencyData: any;\r\n  branchName: any;\r\n  minDate = new Date();\r\n  maxDate = new Date();\r\n  accountId: any;\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public data,\r\n    private dialogRef: MatDialogRef<AccountDetailsUpdateComponent>,\r\n    private appApiService: ApplicationEntryStageService,\r\n    private formBuilder: FormBuilder,\r\n    private api: ApiService,\r\n    private cdr: ChangeDetectorRef,\r\n    public snack: MatSnackBar,\r\n    private apiService: ApplicationEntryStageService,\r\n    private ls: LocalStoreService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    console.log(this.data);\r\n    this.accountId = this.ls.getItem('accountId')\r\n    this.getAccountBranchDetails();\r\n    this.getAccountType(\"account_type\");\r\n    if (this.data && this.data.accountId) {\r\n      this.buildAccountUpdateForm(this.data)\r\n    }\r\n    else {\r\n      this.buildAccountUpdateForm()\r\n    }\r\n\r\n\r\n  }\r\n  buildAccountUpdateForm(data?) {\r\n    console.log(data);\r\n    let applicationDate = data ? moment(data.applicationDate).format() : '';\r\n    this.flag = (data && data.swiftCodeEnable) ? true : false;\r\n    if (data) {\r\n      if (data.fundTheAccount != null) {\r\n        this.disableFundTheAccount = true;\r\n      }\r\n    }\r\n\r\n    this.accountUpdateForm = this.formBuilder.group({\r\n      cifNumber: [data && data.customerId ? data.customerId : '', [Validators.required, Validators.minLength(5)]],\r\n      customerName: [data ? data.customerName : ''],\r\n      accountId: [this.accountId],\r\n      accountType: [data ? data.accountType : '', Validators.required],\r\n      businessProductName: [data ? data.businessProductName : '', Validators.required],\r\n      productImage: [data ? data.productImage : ''],\r\n      productDescription: [data ? data.productDescription : '', Validators.required],\r\n      accountBranch: [data ? data.accountBranch : '', Validators.required],\r\n      accountCurrency: [data ? data.accountCurrency : '', Validators.required],\r\n      applicationDate: [data ? applicationDate : '', Validators.required],\r\n      fundTheAccount: [data ? data.fundTheAccount : '0'],\r\n      fundBy: [data ? data.fundBy : false],\r\n      amount: [data ? data.amount : '0'],\r\n      overDraftRequested: [data ? data.overDraftRequested : false],\r\n      status: [data ? data.status : ''],\r\n      swiftCodeEnable: [data ? data.swiftCodeEnable : false],\r\n      swiftCode: [data ? data.swiftCode : '', Validators.pattern(\"(?=.*[0-9])(?=.*[a-zA-Z])([a-zA-Z0-9]+){8,8}$\")],\r\n    });\r\n\r\n  }\r\n\r\n  onSubmit() {\r\n    let payload = {\r\n      \"accountId\": this.accountId,\r\n      \"accountType\": this.accountUpdateForm.value.accountType,\r\n      \"businessProductName\": this.accountUpdateForm.value.businessProductName,\r\n      \"customerId\": this.accountUpdateForm.value.customerId,\r\n      \"productImage\": this.accountUpdateForm.value.productImage,\r\n      \"productDescription\": this.accountUpdateForm.value.productDescription,\r\n      \"accountBranch\": this.accountUpdateForm.value.accountBranch,\r\n      \"accountCurrency\": this.accountUpdateForm.value.accountCurrency,\r\n      \"applicationDate\": this.convertDate(this.accountUpdateForm.value.applicationDate),\r\n      \"fundTheAccount\": this.accountUpdateForm.value.fundTheAccount,\r\n      \"fundBy\": this.accountUpdateForm.value.fundBy,\r\n      \"amount\": this.accountUpdateForm.value.amount,\r\n      \"overDraftRequested\": this.accountUpdateForm.value.overDraftRequested,\r\n      \"status\": this.accountUpdateForm.value.status,\r\n      \"swiftCode\": this.accountUpdateForm.value.swiftCode,\r\n      \"swiftCodeEnable\": this.accountUpdateForm.value.swiftCodeEnable,\r\n      \"customerName\": this.accountUpdateForm.value.customerName\r\n    };\r\n    if (this.isCifValid == false) {\r\n      this.snack.open('Kindly Enter Valid CifNumber to proceed!', 'OK', {\r\n        duration: 4000,\r\n        verticalPosition: 'top',\r\n        horizontalPosition: 'right'\r\n      });\r\n      return;\r\n    }\r\n    this.apiService.saveProductAccountInfo(payload).subscribe(response => {\r\n      if (response === 200 || response !== null) {\r\n        this.snack.open('Account Details Saved!', 'OK', {\r\n          duration: 4000,\r\n          verticalPosition: 'top',\r\n          horizontalPosition: 'right'\r\n        });\r\n            this.dialogRef.close({\r\n              status: 'BACKLOG'\r\n            })\r\n      }\r\n      else if (response === 500) {\r\n        this.snack.open('Not able to connect to server!', 'INTERNAL SERVER ERROR', {\r\n          duration: 4000,\r\n          verticalPosition: 'top',\r\n          horizontalPosition: 'right'\r\n        });\r\n        console.log(\"500 error\")\r\n      }\r\n    });\r\n  }\r\n\r\n  fetchByCif(cifNumber) {\r\n    this.showSpinn = true;\r\n    this.apiService.fetchByCif(cifNumber).subscribe((res: any) => {\r\n      if (res.customerInfoList[0].custStatus != \"APPROVED\") {\r\n        this.isCifValid = false;\r\n        this.snack.open(\"CIF Number is not Approved :\" + cifNumber, \"\", {\r\n          duration: 4000,\r\n          verticalPosition: 'top',\r\n          horizontalPosition: 'right'\r\n        });\r\n      }\r\n\r\n      this.accountUpdateForm.controls.cifNumber.setValue(cifNumber);\r\n      this.currencyData = this.arrayAccountBranch.find(x => x.branchName == this.branchName);\r\n      this.accountUpdateForm.get('accountBranch').setValue(this.branchName);\r\n      if (this.currencyData != null || this.currencyData != undefined) {\r\n        this.accountUpdateForm.get('accountCurrency').setValue(this.currencyData.branchCcy);\r\n      }\r\n      this.accountUpdateForm.get('amount').setValue(0);\r\n      this.accountUpdateForm.get('swiftCode').setValue(null);\r\n      this.showSpinn = false;\r\n      if (!res) {\r\n        this.isCifValid = false;\r\n        this.snack.open('Invalid CIF Number', 'OK', {\r\n          duration: 4000,\r\n          verticalPosition: 'top',\r\n          horizontalPosition: 'right'\r\n        });\r\n        return;\r\n      } else {\r\n        if (res.customerInfoList[0].custStatus == \"APPROVED\") {\r\n          this.isCifValid = true;\r\n        }\r\n        if (this.accountUpdateForm.value.swiftCode == null || this.accountUpdateForm.value.swiftCodeEnable == null) {\r\n          console.log(this.accountUpdateForm.value.swiftCode);\r\n          this.flag = false;\r\n        }\r\n        if (res.customerInfoList[0].custStatus == \"APPROVED\") {\r\n          if (res.customerInfoList[0].middleName) {\r\n            this.accountUpdateForm.get('customerName').setValue(res.customerInfoList[0].firstName + ' ' + res.customerInfoList[0].middleName + ' ' + res.customerInfoList[0].lastName);\r\n          }\r\n          else {\r\n            this.accountUpdateForm.get('customerName').setValue(res.customerInfoList[0].firstName + ' ' + res.customerInfoList[0].lastName);\r\n          }\r\n          this.cifNumberPrimary = cifNumber;\r\n        }\r\n        this.cdr.markForCheck();\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n  onToggle(event: any) {\r\n    if (event.checked == true) {\r\n      this.flag = true;\r\n    }\r\n    else {\r\n      this.flag = false;\r\n      this.accountUpdateForm.controls.swiftCode.reset();\r\n      this.cdr.detectChanges();\r\n      this.cdr.markForCheck();\r\n    }\r\n  }\r\n  onKeyPress(event: any) {\r\n    const pattern = /[0-9]/;\r\n    let inputChar = String.fromCharCode(event.charCode);\r\n    if (!pattern.test(inputChar)) {\r\n      event.preventDefault();\r\n    }\r\n    console.log(event.target.value);\r\n    clearTimeout(this.timer)\r\n    if (!event.target.value) {\r\n      this.listOfCustByCif = []\r\n    } else {\r\n      this.timer = setTimeout(() => {\r\n        this.appApiService.fetchByCif(event.target.value).subscribe((res: any) => {\r\n          console.log(res);\r\n          if (res) {\r\n            this.listOfCustByCif = res.customerInfoList\r\n          }\r\n        })\r\n      }, 1000);\r\n    }\r\n  }\r\n  _keyPress(event: any) {\r\n    const pattern = /[0-9]/;\r\n    let inputChar = String.fromCharCode(event.charCode);\r\n    if (!pattern.test(inputChar)) {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n  _keyPress1(event: any) {\r\n    const pattern = /[a-zA-Z0-9]/;\r\n    let inputChar = String.fromCharCode(event.charCode);\r\n    if (!pattern.test(inputChar)) {\r\n      event.preventDefault();\r\n    }\r\n\r\n  }\r\n\r\n  keyUpevent(event) {\r\n    console.log(\"event\", event);\r\n    if (event.keyCode === 8) {\r\n      this.onbackSpace = true;\r\n      this.isCifValid = false;\r\n    }\r\n    else {\r\n      this.onbackSpace = false;\r\n    }\r\n  }\r\n\r\n\r\n  getAccountType(key: string) {\r\n    this.api.getDropDownValues(key).subscribe((data) => {\r\n      this.arrayAccountType = data;\r\n    });\r\n  }\r\n\r\n  getAccountBranchDetails() {\r\n    this.api.getAccountBranch().subscribe((data) => {\r\n      this.arrayAccountBranch = data;\r\n      this.currencyData = this.arrayAccountBranch.find(x => x.branchName == this.branchName);\r\n      console.log(\"Currency\", this.currencyData)\r\n\r\n      if (this.currencyData != null || this.currencyData != undefined) {\r\n        this.accountUpdateForm.get('accountCurrency').setValue(this.currencyData.branchCcy);\r\n      }\r\n\r\n    });\r\n  }\r\n\r\n\r\n  onChangeBranch(value) {\r\n    this.currencyData = this.arrayAccountBranch.find(x => x.branchName == value.value);\r\n    if (this.currencyData != null || this.currencyData != undefined) {\r\n      this.accountUpdateForm.get('accountCurrency').setValue(this.currencyData.branchCcy);\r\n    }\r\n\r\n  }\r\n  convertDate(value) {\r\n    let date = moment(value).format('YYYY-MMM-DD');\r\n    if (date)\r\n      return date;\r\n  }\r\n  close() {\r\n    this.dialogRef.close({\r\n      status: \"ONGOING\"\r\n    })\r\n  }\r\n}\r\n\r\n","<div fxLayout=\"row\" fxLayoutGap=\"25px\" fxLayout=\"row\" fxLayoutAlign=\"end\" class=\"contain\">\r\n  <mat-icon class=\"closeIcon\" (click)=\"close()\">close</mat-icon>\r\n</div>\r\n<h1 mat-dialog-title>Account Details</h1>\r\n<mat-dialog-content>\r\n  <form [formGroup]=\"accountUpdateForm\">\r\n    <div fxLayout=\"row wrap\" class=\"full-width\">\r\n      <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n        <mat-hint class=\"hintClass\">CIF Number</mat-hint>\r\n        <mat-card class=\"inputCard\">\r\n          <input matInput (keypress)=_keyPress($event) (change)=\"fetchByCif(accountUpdateForm.get('cifNumber').value)\"\r\n            formControlName=\"cifNumber\" name=\"cif\" placeholder=\"CIF Number\" (keyup)=\"onKeyPress($event)\" />\r\n        </mat-card>\r\n\r\n      </div>\r\n      <mat-spinner class=\"spinner\" [diameter]=\"80\" *ngIf=\"showSpinn\"></mat-spinner>\r\n\r\n      <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n        <mat-hint class=\"hintClass\">Customer Name</mat-hint>\r\n        <mat-card class=\"inputCard\">\r\n          <input matInput (keypress)=_keyPress($event) (keyup)=keyUpevent($event) required\r\n            formControlName=\"customerName\" name=\"customerName\" placeholder=\"Customer Name\" />\r\n        </mat-card>\r\n      </div>\r\n      <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n        <mat-hint class=\"hintClass\">Account Type*</mat-hint>\r\n        <mat-card class=\"inputCard\">\r\n          <mat-select name=\"accountType\" formControlName=\"accountType\">\r\n            <mat-option *ngFor=\"let accountType of arrayAccountType\" [value]=\"accountType\">\r\n              {{accountType}}\r\n            </mat-option>\r\n          </mat-select>\r\n        </mat-card>\r\n        <mat-error class=\"errorClass\"\r\n          *ngIf=\"accountUpdateForm.get('accountType').hasError('required') && accountUpdateForm.get('accountType').touched\">\r\n          Account Type is Required!\r\n        </mat-error>\r\n      </div>\r\n      <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n        <mat-hint class=\"hintClass\">Account Branch*</mat-hint>\r\n        <mat-card class=\"inputCard\">\r\n          <mat-select name=\"account_branch\" formControlName=\"accountBranch\" (selectionChange)=\"onChangeBranch($event)\">\r\n            <mat-option *ngFor=\"let branch of arrayAccountBranch\" [value]=\"branch.branchName\">\r\n              {{branch.branchName}}\r\n            </mat-option>\r\n          </mat-select>\r\n        </mat-card>\r\n        <mat-error class=\"errorClass\"\r\n          *ngIf=\"accountUpdateForm.get('accountBranch').hasError('required') && accountUpdateForm.get('accountBranch').touched\">\r\n          Account Branch is Required!\r\n        </mat-error>\r\n      </div>\r\n      <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n        <mat-hint class=\"hintClass\">Account Currency*</mat-hint>\r\n        <mat-card class=\"inputCard\">\r\n          <input matInput name=\"currency\" placeholder=\"Account Currency\" formControlName=\"accountCurrency\"\r\n            [readonly]=\"true\" />\r\n        </mat-card>\r\n        <mat-error class=\"errorClass\"\r\n          *ngIf=\"accountUpdateForm.get('accountCurrency').hasError('required') && accountUpdateForm.get('accountCurrency').touched\">\r\n          Account Currency is Required!\r\n        </mat-error>\r\n      </div>\r\n      <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n        <mat-hint class=\"hintClass\">Product Image</mat-hint>\r\n        <mat-card class=\"inputCard\">\r\n          <input matInput name=\"product_image\" formControlName=\"productImage\" placeholder=\"Product Image\" value=\"\" />\r\n        </mat-card>\r\n      </div>\r\n      <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n        <mat-hint class=\"hintClass\">Business Product Name*</mat-hint>\r\n        <mat-card class=\"inputCard\">\r\n          <input matInput name=\"business\" formControlName=\"businessProductName\" placeholder=\"Business Product Name\" />\r\n        </mat-card>\r\n        <mat-error class=\"errorClass\"\r\n          *ngIf=\"accountUpdateForm.get('businessProductName').hasError('required') && accountUpdateForm.get('businessProductName').touched\">\r\n          Business Product Name is Required!\r\n        </mat-error>\r\n      </div>\r\n      <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n        <mat-hint class=\"hintClass\">Product Description*</mat-hint>\r\n        <mat-card class=\"inputCard\">\r\n          <input matInput name=\"business\" placeholder=\"Product Description\" formControlName=\"productDescription\" />\r\n        </mat-card>\r\n        <mat-error class=\"errorClass\"\r\n          *ngIf=\"accountUpdateForm.get('productDescription').hasError('required') && accountUpdateForm.get('productDescription').touched\">\r\n          Product Description is Required!\r\n        </mat-error>\r\n      </div>\r\n      <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n        <mat-hint class=\"hintClass\">Application Date*</mat-hint>\r\n        <mat-card class=\"inputCard\">\r\n          <div fxFlex=\"85%\">\r\n            <input matInput name=\"date\" readonly formControlName=\"applicationDate\" placeholder=\"Application Date\"\r\n            [matDatepicker]=\"appDatepicker\" [min]=\"minDate\" [max]=\"maxDate\" />\r\n          </div>\r\n          <div fxFlex=\"15%\">\r\n            <mat-datepicker-toggle matSuffix [for]=\"appDatepicker\"></mat-datepicker-toggle>\r\n          </div>\r\n        </mat-card>\r\n        <mat-error class=\"errorClass\" *ngIf=\"accountUpdateForm.get('applicationDate').hasError('required') && accountUpdateForm.get('applicationDate').touched \">\r\n          Application Date is Required!\r\n        </mat-error>\r\n        <mat-datepicker #appDatepicker></mat-datepicker>\r\n      </div>\r\n    </div>\r\n    <div>\r\n      <div>\r\n        <div fxFlex=\"33%\" fxFlex.xs=\"100%\" *ngIf=\"flag\">\r\n          <mat-hint class=\"hintClass\">SWIFT Code</mat-hint>\r\n          <mat-card class=\"inputCard\">\r\n            <input (keypress)=_keyPress1($event) minlength=\"8\" maxlength=\"11\" matInput name=\"swift_code\" required\r\n              formControlName=\"swiftCode\" placeholder=\"SWIFT Code\" value=\"\" />\r\n          </mat-card>\r\n          <mat-error class=\"errorClass\" *ngIf=\"accountUpdateForm.get('swiftCode').hasError('required') && accountUpdateForm.get('swiftCode').touched\">\r\n            SWIFT Code is Required!\r\n          </mat-error>\r\n          <mat-error\r\n            *ngIf=\"accountUpdateForm.get('swiftCode').value && !accountUpdateForm.get('swiftCode').hasError('required')\">\r\n            SWIFT Code should be a combination of minimum of 8 alphanumeric characters</mat-error>\r\n        </div>\r\n      </div>\r\n      <div fxLayout=\"row\">\r\n        <div>\r\n          Want to add SWIFT Code ?\r\n          <mat-slide-toggle formControlName=\"swiftCodeEnable\" (change)=\"onToggle($event)\"></mat-slide-toggle>\r\n        </div><br>\r\n      </div>\r\n      <div>\r\n        <div class=\"pb-1\">\r\n          <label>Initial Funding?</label>\r\n          <div class=\"ml-12\"></div>\r\n          <mat-slide-toggle formControlName=\"fundBy\"></mat-slide-toggle>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <div class=\"pb-1\">\r\n          <label>Overdraft Requested?</label>\r\n          <div class=\"ml-12\"></div>\r\n          <mat-slide-toggle formControlName=\"overDraftRequested\"></mat-slide-toggle>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </form>\r\n</mat-dialog-content>\r\n\r\n<div fxLayout=\"row\" fxLayoutAlign=\"end\" fxLayoutGap=\"20px\">\r\n  <button type=\"button\" class=\"editbtn\" mat-raised-button [disabled]=\"accountUpdateForm.invalid\"\r\n    (click)=\"onSubmit()\">Save</button>\r\n  &nbsp;&nbsp;&nbsp;\r\n  <button type=\"button\" class=\"cancelbtn\" (click)=\"close()\">\r\n    Cancel\r\n  </button>\r\n</div>","import { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { ChangeDetectorRef, Component, EventEmitter, Inject, OnInit, Output, ViewChild, } from '@angular/core';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { ApplicationEntryStageService } from 'app/shared/services/application-entry-stage.service';\r\n//import { AppLoaderService } from \"app/shared/services/app-loader/app-loader.service\";\r\n\r\nimport {\r\n  ApexNonAxisChartSeries,\r\n  ApexPlotOptions,\r\n  ApexChart,\r\n  ChartComponent,\r\n  ApexAxisChartSeries,\r\n  ApexFill,\r\n  ApexStroke,\r\n  ApexYAxis,\r\n  ApexTooltip,\r\n  ApexMarkers,\r\n  ApexXAxis\r\n\r\n} from \"ng-apexcharts\";\r\nimport { Router } from '@angular/router';\r\nimport { TasksummaryService } from '../tasksummary.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { AccountDetailsUpdateComponent } from './account-details-update/account-details-update.component';\r\nimport { CustomerInfoUpdateComponent } from './customer-info-update/customer-info-update.component';\r\nimport { ServiceDetailsUpdateComponent } from './service-details-update/service-details-update.component';\r\nimport { NomineeDetailsUpdateComponent } from './nominee-details-update/nominee-details-update.component';\r\nimport { SecuredOverdraftDetailsUpdateComponent } from './secured-overdraft-details-update/secured-overdraft-details-update.component';\r\nimport { UnsecuredOverdraftDetailsUpdateComponent } from './unsecured-overdraft-details-update/unsecured-overdraft-details-update.component';\r\nimport { FinancialDetailsUpdateComponent } from './financial-details-update/financial-details-update.component';\r\nimport { InterestDetailsUpdateComponent } from './interest-details-update/interest-details-update.component';\r\nimport { ChargeDetailsUpdateComponent } from './charge-details-update/charge-details-update.component';\r\nimport { QualitativeDetailsUpdateComponent } from './qualitative-details-update/qualitative-details-update.component';\r\nimport { FundingDetailsUpdateComponent } from './funding-details-update/funding-details-update.component';\r\nimport { ApprovalDetailsUpdateComponent } from './approval-details-update/approval-details-update.component';\r\nimport { UploadSignEsignComponent } from 'app/views/home/digital-signing/upload-sign-esign/upload-sign-esign.component';\r\nimport { MandateDetailsUpdateComponent } from './mandate-details-update/mandate-details-update.component';\r\nexport type ChartOptions = {\r\n  series: ApexNonAxisChartSeries;\r\n  chart: ApexChart;\r\n  labels: string[];\r\n  plotOptions: ApexPlotOptions;\r\n  series1: ApexAxisChartSeries;\r\n\r\n  xaxis: ApexXAxis;\r\n  yaxis: ApexYAxis | ApexYAxis[];\r\n\r\n  stroke: ApexStroke;\r\n  markers: ApexMarkers;\r\n  fill: ApexFill;\r\n  tooltip: ApexTooltip;\r\n\r\n};\r\n\r\n//chart 2\r\nexport type ChartOptions1 = {\r\n  series1: ApexNonAxisChartSeries;\r\n  chart1: ApexChart;\r\n  labels1: string[];\r\n  plotOptions1: ApexPlotOptions;\r\n\r\n\r\n  xaxis1: ApexXAxis;\r\n  yaxis1: ApexYAxis | ApexYAxis[];\r\n\r\n  stroke1: ApexStroke;\r\n  markers1: ApexMarkers;\r\n  fill1: ApexFill;\r\n  tooltip1: ApexTooltip;\r\n\r\n};\r\n\r\n@Component({\r\n  selector: 'app-approver',\r\n  templateUrl: './approver.component.html',\r\n  styleUrls: ['./approver.component.scss']\r\n})\r\nexport class ApproverComponent implements OnInit {\r\n  @ViewChild(\"chart\")\r\n  chart: ChartComponent = new ChartComponent;\r\n  public chartOptions: Partial<ChartOptions> | any;\r\n  public chartOptions1: Partial<ChartOptions1> | any;\r\n  accountdetailsForStatusUpdate: Object;\r\n  appStatus: any;\r\n  accountId: any;\r\n  @Output() submitClicked = new EventEmitter<any>();\r\n  accInfo: any;\r\n  accountInfo: any = [];\r\n  accountDetails: any;\r\n  nomineeDetails: any;\r\n  securedOverdraftDetails: any;\r\n  unsecuredOverdraftDetails: any;\r\n  financialDetails: any;\r\n  intrestDetails: any;\r\n  //chargeDetails: any;\r\n  chargeDetails: any = [];\r\n  qualitativeScorecard: any;\r\n  assessmentReport: any;\r\n  createAccFundingStage: any;\r\n  scoreCardMappingArray: any;\r\n  backlogStatus: boolean;\r\n  rejectedStatus: boolean;\r\n  approvedStatus: boolean;\r\n  ongoingStatus: boolean;\r\n  accStatus: any;\r\n  isOnGoing : string = \"\";\r\nimage: Object;\r\n  customerColorCode: any;\r\n  variable: boolean = true;\r\n  loading: boolean = true;\r\n  loadingApplEnrich: boolean = false;\r\n  errorStatus: any;\r\n  imageUrl: any;\r\n  income: any;\r\n  exepse: any;\r\n  signatureData : any;\r\n  chargeData: any;\r\n  editScreen: boolean;\r\n  customerId: any;\r\n  nameCreater:any[]=['Y','B','','D','E','T','A','E','R','C'];\r\n  cardType: any;\r\n  debitCardDataValue:any;\r\n\r\n  constructor(public dialogRef: MatDialogRef<ApproverComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    private apiService: ApplicationEntryStageService,private api:ApiService,\r\n    private ls: LocalStoreService,\r\n    private router: Router,\r\n    public tasksummaryService: TasksummaryService,\r\n    public cdr: ChangeDetectorRef,\r\n    private snack: MatSnackBar,private sanitizer: DomSanitizer,\r\n    private dialog: MatDialog\r\n    ) {\r\n  \r\n  }\r\n\r\n\r\n  approverName: any;//= 'Thomas Mullar';\r\n  customerInformation: any;//= { ownership: 'Joint', applicantNo: '2' };\r\n  mandate: any;\r\n  accountServiceDetails: any;// { accountStatementFrequency: \"Quaterly\", accountStatementPreferences: \"Email\", bankingChannelPreferences: \"Direct Banking\", communicationChannelPreferences: \"SMS\" }\r\n\r\n  ngOnInit(): void {\r\n    this.loading = true;\r\n    this.loadingApplEnrich = false;\r\n    //this.accountId = this.ls.getItem('accountId');\r\n    this.customerColorCode=localStorage.getItem('CustomerColorCode');\r\n\r\n    this.accInfo = this.data;\r\n    console.log('acc data :: ', this.accInfo);\r\n    this.cardType = this.ls.getItem('cardInfo');\r\n    // console.log(this.cardType.cardType);\r\n    this.accountId=this.accInfo.accountId;\r\n    this.ls.setItem('accountId',this.accountId)\r\n    this.ls.setItem('customerId',this.accInfo.customerId)\r\n    this.ls.setItem('accountType',this.accInfo.accountType)\r\n    console.log('accountId :: ', this.accInfo.accountId);\r\n    this.ls.setItem('CIF_NUM_PRIMARY',this.accInfo.customerId);\r\n    this.ls.setItem(\"NAME\",this.accInfo.firstName + \" \" + this.accInfo.lastName)\r\n    this.tasksummaryService.accountStatus\r\n      .subscribe(status => {\r\n        this.loading = false;\r\n        if (status === 'REJECTED') {\r\n          this.approvedStatus = true;\r\n          this.rejectedStatus = true;\r\n          this.editScreen=false;\r\n        } else if (status === 'APPROVED') {\r\n          this.approvedStatus = true;\r\n          this.rejectedStatus = true;\r\n          this.editScreen=true;\r\n        } else if (status === 'ONGOING') {\r\n          this.approvedStatus = true;\r\n          this.rejectedStatus = false;\r\n          this.isOnGoing = status;\r\n          this.editScreen=false;\r\n        } else if (status === 'BACKLOG') {\r\n          this.approvedStatus = false;\r\n          this.rejectedStatus = false;\r\n          this.editScreen=false;\r\n        }\r\n      }\r\n      );\r\n    this.getAccountInfoByAccountId(this.accInfo.accountId);\r\n    this.getProfileImage(this.accInfo.customerId);\r\n    if(this.cardType){\r\n    this.debitCardData(this.cardType);\r\n    }\r\n    // this.accInfo.customerId == null ? null :this.\r\n  }\r\n\r\n  getAccountInfoByAccountId(accountId) {\r\n    //this.loader.open();\r\n    this.tasksummaryService.getAccountInfoByAccId(accountId)\r\n      .subscribe(accInfo => {\r\n\r\n        //this.loader.close();\r\n\r\n        this.accountInfo = accInfo;\r\n        \r\n        this.intrestDetails=this.accountInfo.intrestDetails;\r\n        this.chargeDetails=this.accountInfo.chargeDetails;\r\n        this.loadingApplEnrich= true;\r\n   \r\n        this.assignValues(this.accountInfo.businessProductAccServices,this.accountInfo.businessProductNominee,this.accountInfo.securedOverdraft,\r\n          this.accountInfo.unsecuredOverdraft,this.accountInfo.financialDetails,this.accountInfo.intrestDetails,this.accountInfo.chargeDetails,\r\n          this.accountInfo.qualitativeScorecard,this.accountInfo.assessmentReport,this.accountInfo.createAccFundingStage);\r\n\r\n        for (const key in this.accountInfo) {\r\n\r\n          if (Object.prototype.hasOwnProperty.call(this.accountInfo, key)) {\r\n            const element = this.accountInfo[key];\r\n\r\n            if (key === 'chargeDetails') {\r\n              this.chargeDetails = element;\r\n              if (this.accountDetails.applicationDate){\r\n              this.accountDetails.applicationDate=this.accountDetails.applicationDate.slice(0,-8);\r\n              }\r\n            }\r\n\r\n            if (key === 'businessProductAccount') {\r\n              this.accountDetails = element;\r\n              if (this.accountDetails.applicationDate){\r\n              this.accountDetails.applicationDate=this.accountDetails.applicationDate.slice(0,-8);\r\n              }\r\n            }\r\n\r\n            if (key === 'businessProductCustomer') {\r\n              this.customerInformation = element;\r\n              for (const custKey in this.customerInformation) {\r\n                if (Object.prototype.hasOwnProperty.call(this.customerInformation, custKey)) {\r\n                  const custEle = this.customerInformation[custKey];\r\n                  if (custKey === 'data') {\r\n                    for (const applicantKey in custEle) {\r\n                      if (Object.prototype.hasOwnProperty.call(custEle, applicantKey)) {\r\n                        const applicantEle = custEle[applicantKey];\r\n                        if (custEle.length > 1) {\r\n                          if (applicantEle.primaryCustomer) {\r\n                            this.approverName = applicantEle.firstName;\r\n                          }\r\n                        } else {\r\n                          this.approverName = applicantEle.firstName;\r\n                        }\r\n                      }\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n            }\r\n\r\n            if (key === 'businessProductMandate') {\r\n              this.mandate = element;\r\n            }\r\n        \r\n            // if (key === 'businessProductNominee') {\r\n            //   this.nomineeDetails = element;\r\n            // }\r\n\r\n            // if (key === 'securedOverdraft') {\r\n            //   this.securedOverdraftDetails = element;\r\n            // }\r\n\r\n            // if (key === 'unsecuredOverdraft') {\r\n            //   this.unsecuredOverdraftDetails = element;\r\n            // }\r\n\r\n            // if (key === 'financialDetails') {\r\n            //   this.financialDetails = element;\r\n            // }\r\n\r\n            // if (key === 'intrestDetails') {\r\n            //   this.intrestDetails = element;\r\n            // }\r\n\r\n            // if (key === 'chargeDetails') {\r\n            //   this.chargeDetails = element;\r\n            // }\r\n\r\n            // if (key === 'qualitativeScorecard') {\r\n            //   this.qualitativeScorecard = element;\r\n            //   if(this.qualitativeScorecard!=null){\r\n            //     this.scoreCardMappingArray = this.qualitativeScorecard.scoreCardMapping;\r\n            //   }\r\n            // }\r\n\r\n            // if (key === 'assessmentReport') {\r\n            //   this.assessmentReport = element;\r\n            // }\r\n\r\n            // if (key === 'createAccFundingStage') {\r\n            //   this.createAccFundingStage = element;\r\n            // }\r\n\r\n          }\r\n        }\r\n        // this.accountDetails= this.accountInfo.businessProductAccount;\r\n        \r\n      });\r\n  }\r\n  goToCreateAccount(accountId:any, cifNumber:any){\r\n    console.log(\"Navigating to edit screen::\",accountId);\r\n  \r\n    this.ls.setItem('EDIT-CREATEACCCIF',this.accountInfo);\r\n    this.ls.setItem('accountId',accountId);\r\n   \r\n    console.log('acc data :: ', this.accountInfo);\r\n    let statusModel = {\r\n      accountId: accountId,\r\n      status: \"ONGOING\"\r\n    };\r\n    this.tasksummaryService.updateCreateAccStatus(statusModel).subscribe(data => {\r\n    });\r\n    setTimeout(() => {\r\n      this.router.navigateByUrl('/home/application/list');\r\n    }, 1000);\r\n  \r\n  \r\n    console.log(this.ls.getItem('EDIT-CREATEACCCIF'));\r\n    this.dialogRef.close({\r\n      message: 'Confirm',\r\n   });\r\n \r\n  }\r\n  assignValues(businessProductAccServices: any,nominee,securedOverdraftDetails,unsecuredOverdraftDetails,financialDetails,intrestDetails,chargeDetails,scoreCardMappingArray,assessmentReport,createAccFundingStage) {\r\n  \r\n   this.accountServiceDetails=businessProductAccServices;\r\n   console.log(this.accountServiceDetails);\r\n  //  this.cardType = this.accountServiceDetails.debitCardType;\r\n  //  console.log(this.cardType);\r\n   this.nomineeDetails=nominee;\r\n   this.securedOverdraftDetails = securedOverdraftDetails;\r\n   this.unsecuredOverdraftDetails = unsecuredOverdraftDetails;\r\n   this.financialDetails = financialDetails;\r\n   this.income = financialDetails.applicantTotalIncome;\r\n   this.exepse = financialDetails.applicantTotalExpense;\r\n   this.intrestDetails = intrestDetails;\r\n   this.chargeDetails=chargeDetails;\r\n\r\n  //  this.qualitativeScorecard=scoreCardMappingArray[0];\r\n  //  if (scoreCardMappingArray[0] && scoreCardMappingArray[0].scoreCardMapping){\r\n  //  this.scoreCardMappingArray=scoreCardMappingArray[0].scoreCardMapping;\r\n  //  }\r\n  \r\n   this.qualitativeScorecard=scoreCardMappingArray;\r\n   this.scoreCardMappingArray=scoreCardMappingArray.scoreCardMapping[0].scoreCardDetails; \r\n\r\n   this.assessmentReport=assessmentReport;\r\n   this.createAccFundingStage = createAccFundingStage;\r\n   this.chartOptions = {\r\n    series: [48],\r\n    chart: {\r\n\r\n      height: 200,\r\n      type: \"radialBar\"\r\n    },\r\n    plotOptions: {\r\n      radialBar: {\r\n        hollow: {\r\n          size: \"70%\"\r\n        }\r\n      }\r\n    },\r\n    labels: ['saved']\r\n  };\r\n  // chart 2\r\n\r\n  this.chartOptions1 = {\r\n    series1: [\r\n      {\r\n        name: \"Income :\"+ this.income,\r\n        type: \"line\",\r\n        data: [40, 55, 50, 70, 65, 68, 50, 45, 35, 30, 38, 40]\r\n      },\r\n\r\n      {\r\n        name: \"Expenses :\"+ this.exepse,\r\n        type: \"line\",\r\n        data: [55, 30, 25, 45, 46, 47, 48, 52, 44, 35, 30]\r\n      }\r\n    ],\r\n    chart1: {\r\n      height: 220,\r\n      type: \"line\"\r\n    },\r\n    stroke1: {\r\n      curve: \"smooth\"\r\n    },\r\n    fill1: {\r\n      type: \"solid\",\r\n      opacity: [0.35, 1]\r\n    },\r\n    labels1: [\r\n      \"JAN\",\r\n      \"\",\r\n      \"FEB\",\r\n      \"\",\r\n      \"MAR\",\r\n      \"\",\r\n      \"APR\",\r\n      \"\",\r\n      \"MAY \",\r\n      \"\",\r\n      \"JUN\"\r\n    ],\r\n    // markers1: {\r\n    // size: 0\r\n    // },\r\n    yaxis1: [\r\n      {\r\n        title: {\r\n          text: \"\"\r\n        }\r\n      },\r\n    ],\r\n    xaxis1: {\r\n      labels: {\r\n        trim: false\r\n      }\r\n    },\r\n\r\n\r\n  }\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n  updateApplicationStatus(formData, status) {\r\n\r\n    console.log('data : ',formData.businessProductAccount.accountId);\r\n    formData.businessProductAccount.status = status;\r\n    //to send status on dialog close \r\n    let data=status;\r\n    this.accInfo.status = status;\r\n    /* TO-DO : call update api here*/\r\n    // const formDt=new FormData();\r\n    // formDt.append('status',status);\r\n    // formDt.append('accountId',formData.businessProductAccount.accountId);\r\n    const formDt={\r\n      status:status,\r\n      accountId:formData.businessProductAccount.accountId\r\n    }\r\n\r\n\r\n    this.tasksummaryService.updateCreateAccStatus(formDt)\r\n      .subscribe(respData => {\r\n        // console.log('respData:: ', respData);\r\n        if (respData.accountId != null || respData.accountId != '' || respData.accountId != \"\") {\r\n            this.close(data);\r\n            this.cdr.markForCheck();\r\n            this.cdr.detectChanges();\r\n            this.dialogRef.close({\r\n              message: 'Confirm',\r\n              data\r\n            });\r\n\r\n          this.snack.open(status + ' !', 'OK', {\r\n            duration: 4000,\r\n            verticalPosition: 'top',\r\n            horizontalPosition: 'right'\r\n          });\r\n          this.cdr.markForCheck();\r\n        } else {\r\n          this.snack.open('Not able to connect to server!', 'INTERNAL SERVER ERROR', {\r\n            duration: 4000,\r\n            verticalPosition: 'top',\r\n            horizontalPosition: 'right'\r\n          });\r\n          // console.log(\"500 error\")\r\n        }\r\n      }, error => {\r\n        // console.log(\"error :: \", error);\r\n       \r\n          console.log('error resp :: ',error);\r\n          this.errorStatus=status;\r\n          this.snack.open(`${error.error.message} `, 'OK', {\r\n            duration: 4000,\r\n            verticalPosition: 'top',\r\n            horizontalPosition: 'right'\r\n          });\r\n        \r\n        // this.snack.open('Not able to connect to server!', 'INTERNAL SERVER ERROR', {\r\n        //   duration: 4000,\r\n        //   verticalPosition: 'top',\r\n        //   horizontalPosition: 'right'\r\n        // });\r\n      });\r\n  }\r\n\r\n  closeClick() {\r\n    // console.log(\"close click\")\r\n    // [routerLink]=\"['/others/kyc']\" \r\n    this.dialogRef.close();\r\n    // this.router.navigateByUrl('/others/kyc'); \r\n  }\r\n  getProfileImage(customerId){\r\n    console.log(customerId);\r\n    this.image=null;\r\n    this.accInfo.customerId == null ? null :this.api.getProfileDetails(customerId)\r\n    .subscribe((data:any) => {\r\n      console.log(data);\r\n      // this.profileData = data;\r\n      // console.log(data.profileImage); \r\n\r\n      if(data.profileImage!=null){\r\n        this.imageUrl=data.profileImage;\r\n        console.log(\"imageurl\",this.imageUrl);\r\n      let objectURL =  data.profileImage.fileUrl;\r\n  \r\n      this.image = this.sanitizer.bypassSecurityTrustUrl(objectURL)\r\n      }\r\n\r\n      if(data.signatures){\r\n         this.signatureData = data.signatures[0];\r\n         this.ls.setItem('signedImage',this.signatureData.fileUrl);\r\n      }\r\n      // console.log(this.image,\"Profile Data\");\r\n      // console.log(this.profileData.customerName,\"Profile Data\");\r\n      // const blob = base64StringToBlob(this.profileData.fileData, contentType);\r\n      // console.log(blob);\r\n    },(error:any) => {\r\n      console.log(error); \r\n    });\r\n  }\r\n\r\n  getByAccountId(accountId: any) {\r\n    this.apiService.getByAccountId(accountId)\r\n      .subscribe(resp => {\r\n        this.accountdetailsForStatusUpdate = resp;\r\n        this.updateAccountStatus(resp);\r\n      });\r\n  }\r\n  updateAccountStatus(accData) {\r\n    accData.status = this.appStatus;\r\n    this.apiService.saveProductAccountInfo(accData)\r\n      .subscribe(updateResp => {\r\n        console.log(\"updateResp:: \", updateResp);\r\n      });\r\n  }\r\n  close(data) {\r\n    this.dialogRef.close({\r\n      message: 'Confirm',\r\n      data:this.accInfo.status\r\n    });\r\n    //  console.log(\"conf data\", data);\r\n  }\r\n\r\n  debitCardData(cardType) {\r\n    console.log('dardType-- ', cardType);\r\n    \r\n    this.api.getCardType(this.cardType.cardType)\r\n      .subscribe(resp => {\r\n        console.log('resp-- ', resp);\r\n        \r\n        this.debitCardDataValue = resp;        \r\n        console.log(resp);\r\n\r\n      }, err => console.log('ERROR: ', err));\r\n  }\r\n\r\n  openEditScreen(screen,data){\r\n    let statusModel = {\r\n      status: \"ONGOING\",\r\n      accountId: this.accountId\r\n    };\r\n    this.tasksummaryService.updateCreateAccStatus(statusModel).subscribe(data => {\r\n      console.log(data);\r\n      if(data != null){\r\n        this.approvedStatus = true;\r\n        this.rejectedStatus = false;\r\n      }\r\n    });\r\n    const dialogRef = this.dialog.open(screen,\r\n      {\r\n        panelClass: 'full-width-dialog',\r\n        data: data,\r\n        width: '80%',\r\n        disableClose: true\r\n      });\r\n    dialogRef.afterClosed().subscribe((submit) => {\r\n      console.log('submit');\r\n\r\n      this.accInfo.status = submit.status\r\n      if (this.accInfo.status == 'BACKLOG') {\r\n        this.getAccountInfoByAccountId(this.accountId)\r\n        let statusModel = {\r\n          status: \"BACKLOG\",\r\n          accountId: this.accountId\r\n        };\r\n        this.tasksummaryService.updateCreateAccStatus(statusModel).subscribe(data => {\r\n          console.log(data);\r\n          if(data != null){\r\n            this.approvedStatus = false;\r\n            this.rejectedStatus = false;\r\n          }\r\n        });\r\n      }    \r\n      if(submit == true){\r\n        this.getProfileImage(this.accInfo.customerId);\r\n      }\r\n      this.cdr.markForCheck();\r\n      })\r\n  }\r\n\r\n  editAccountDetails() {\r\n    this.openEditScreen(AccountDetailsUpdateComponent, this.accountDetails)\r\n  }\r\n\r\n  editCustomerInfo() {\r\n    this.openEditScreen(CustomerInfoUpdateComponent, this.customerInformation)\r\n  }\r\n\r\n  editMandateDetails() {\r\n    this.openEditScreen(MandateDetailsUpdateComponent, this.mandate)\r\n  }\r\n\r\n  editServiceDetails() {\r\n    this.openEditScreen(ServiceDetailsUpdateComponent, this.accountServiceDetails)\r\n  }\r\n\r\n  editNomineeDetails() {\r\n    this.openEditScreen(NomineeDetailsUpdateComponent, this.nomineeDetails)\r\n  }\r\n\r\n  editSecuredOverdraftDetails() {\r\n    this.openEditScreen(SecuredOverdraftDetailsUpdateComponent, this.securedOverdraftDetails)\r\n  }\r\n\r\n  editUnsecuredOverdraftDetails() {\r\n    this.openEditScreen(UnsecuredOverdraftDetailsUpdateComponent, this.unsecuredOverdraftDetails)\r\n  }\r\n\r\n  editFinancialDetails() {\r\n    this.openEditScreen(FinancialDetailsUpdateComponent, this.financialDetails)\r\n  }\r\n\r\n  editInterestDetails() {\r\n    this.openEditScreen(InterestDetailsUpdateComponent, this.intrestDetails)\r\n  }\r\n\r\n  editChargeDetails() {\r\n    this.openEditScreen(ChargeDetailsUpdateComponent, this.chargeDetails)\r\n  }\r\n\r\n  editQualitativeDetails() {\r\n    this.openEditScreen(QualitativeDetailsUpdateComponent, this.qualitativeScorecard)\r\n  }\r\n\r\n  editFundingStage() {\r\n    this.openEditScreen(FundingDetailsUpdateComponent, this.createAccFundingStage)\r\n  }\r\n\r\n  editApprovalDetails() {\r\n    this.openEditScreen(ApprovalDetailsUpdateComponent, this.accountDetails)\r\n  }\r\n\r\n  editDigitalSign() {\r\n    this.openEditScreen(UploadSignEsignComponent, this.signatureData)\r\n  }\r\n\r\n\r\n}\r\n\r\n","\r\n<div >\r\n   \r\n   <div  fxLayout=\"column wrap\">\r\n\r\n   <div class=\"content\">\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"end\">\r\n         <div>\r\n            <mat-icon style=\"color: darkgray;cursor: pointer;margin-right: 5px;\" (click)=\"close(accStatus)\" >\r\n               close</mat-icon>\r\n         </div>\r\n      </div>\r\n      <!--img row-->\r\n      <div fxLayoutAlign=\"center\">\r\n         <mat-spinner  *ngIf=\"loading\"></mat-spinner>\r\n      </div>\r\n    <div class=\"boxing\">     \r\n         <div class=\"main\">\r\n            <div class=\"createdBy\"   fxLayout=\"row end\">\r\n               <div class=\"creater\"  fxLayout=\"column\" >\r\n                <span class=\"word1\"  *ngFor=\"let creater of nameCreater;\">{{creater}}</span>               \r\n               </div>\r\n               <div fxLayout=\"column\" class=\"totalMarin\">\r\n                  <div class=\"parentCreater\" fxLayout=\"row\">              \r\n                     \r\n                     <img  class=\"img1\" src=\"assets/images/face-7.jpg\" alt=\"\"\r\n                           >&nbsp;\r\n                           <div>\r\n                              <span class=\"headName\">{{this.accountInfo?.createdByInfo?.createdBy}}\r\n                              </span><br>\r\n                              <span class=\"idSize\">EID #{{this.accountInfo?.createdByInfo?.creatorId}}</span>\r\n                           </div>\r\n     \r\n               </div>\r\n               <div fxLayout=\"row\" class=\"setSize\">\r\n                  <mat-icon class=\"iconColor\" >phone                    \r\n                  </mat-icon>&nbsp;&nbsp;&nbsp;\r\n                  <span class=\"mobileNo\">\r\n                                {{this.accountInfo?.createdByInfo?.mobile}}\r\n                  </span>                 \r\n               </div>\r\n               <div fxLayout=\"row\" class=\"setSize\">                \r\n                  <mat-icon class=\"iconColor\"  > mail_outline</mat-icon>&nbsp;&nbsp; &nbsp;\r\n                  <span class=\"email\">\r\n                     {{this.accountInfo?.createdByInfo?.email}}\r\n                  </span>\r\n               </div>\r\n               </div>          \r\n              \r\n            </div>\r\n      <!-- <div fxLayout=\"row\" class='imgdiv'>\r\n         <div fxLayout=\"row\"> <img class='appimg' src='assets\\images\\personImg.png'></div>\r\n      </div><br> -->\r\n      <div fxLayout=\"row\" class='imgdiv'>\r\n         <!-- <div fxLayout=\"row\"> <img class='appimg' src='assets\\images\\personImg.png'></div> -->\r\n         <div mat-card-avatar>\r\n           <div  fxLayout=\"row\" class=\"defaultImage\" *ngIf=\"imageUrl=='not_available'\" [style.background]=\"customerColorCode\">\r\n             <h1 class=\"imageText\">{{accInfo.firstName| uppercase | slice:0:1}}{{accInfo.lastName | uppercase | slice:0:1}}</h1>\r\n         </div>\r\n          \r\n           <div  fxLayout=\"row\" class=\"defaultImage\" *ngIf=\"imageUrl!='not_available'\">\r\n              <img style=\"width: 120px; height: 120px; border-radius: 50%;\"\r\n              [src]=\"imageUrl\" alt=\"\" *ngIf=\"imageUrl!='not_available'\">\r\n            </div>\r\n         </div>\r\n      </div><br><br><br><br><br>\r\n      <div fxLayout=\"row\" class=\"apprdiv\">\r\n         <h2><b>{{accInfo.prefix}}&nbsp;{{accInfo.firstName}}&nbsp;{{accInfo.lastName}}</b></h2>\r\n      </div><br><br>\r\n      <!-- end of img row-->\r\n      <!--entry stage row-->\r\n\r\n      <div fxLayout=\"row\" class=\"flex-container\">\r\n         <div fxFlex=\"10\">\r\n            <div class='num'>1</div>\r\n            <div class='bordnum'></div>\r\n         </div>\r\n         <div fxFlex=\"85\"class=\"margin1\">\r\n            <h2>Application Entry Stage</h2>\r\n            <!-- <mat-divider >\r\n            </mat-divider> -->\r\n            <!-- <hr /> -->\r\n            <!-- start of account details-->\r\n            \r\n            <!-- <h3>Account Details</h3> -->\r\n            <div fxLayout=\"row\" fxLayoutAlign=\"space between center\">\r\n               <fieldset>\r\n                  <legend visible=\"true\">Account Details</legend>\r\n               </fieldset>\r\n               <span><mat-icon class=\"editbtn\" [hidden]=\"editScreen\" (click)=\"editAccountDetails()\">edit</mat-icon></span>\r\n            </div>\r\n         \r\n            <mat-card class='mtcd'>\r\n               <mat-card-content>\r\n                  <!--first row-->\r\n                  <div fxLayout=\"row\" class='rowbord'>\r\n                     <div fxFlex='4'></div>\r\n                     <div fxFlex='32'>\r\n                        <div class='label'>CIF Number</div>\r\n                        <div class='labelval'>{{accountDetails?.customerId}}</div>\r\n                     </div>\r\n                     <div fxFlex='32'>\r\n                        <div class='label'>Customer Name</div>\r\n                        <div class='labelval'>{{accInfo.firstName}}&nbsp;{{accInfo.lastName}}</div>\r\n                     </div>\r\n                  <div fxFlex='32'>\r\n                    <div class='label'>Account ID</div>\r\n                    <div class='labelval'>{{accountId}} </div>\r\n                  </div>\r\n\r\n                  </div>\r\n                  <div fxLayout=\"row\" class='rowbord'>\r\n                     <div fxFlex='4'></div>\r\n                     <div fxFlex='32'>\r\n                        <div class='label'>Account Type</div>\r\n                        <div class='labelval'>{{accountDetails?.accountType}}</div>\r\n                     </div>\r\n                     <div fxFlex='32'>\r\n                        <div class='label'>Business Product Name</div>\r\n                        <div class='labelval'>{{accountDetails?.businessProductName}}</div>\r\n                     </div>\r\n                     <div fxFlex='32'>\r\n                        <div class='label'>Account Branch</div>\r\n                        <div class='labelval'>{{accountDetails?.accountBranch}}</div>\r\n                     </div>\r\n                  </div>\r\n                  <!--end of first row-->\r\n                  <!--second row-->\r\n                  <div fxLayout=\"row\" class='rowbord'>\r\n                     <div fxFlex='4'></div>\r\n                     <div fxFlex='32'>\r\n                        <div class='label'>Account Currency</div>\r\n                        <div class='labelval'>{{accountDetails?.accountCurrency}}</div>\r\n                     </div>\r\n                     <div fxFlex='32'>\r\n                        <div class='label'>Application Date</div>\r\n                        <div class='labelval'>{{accountDetails?.applicationDate}}</div>\r\n                     </div>\r\n                     <div fxFlex='32'>\r\n                        <div class='label'>Modification No</div>\r\n                        <div class='labelval'>{{accountDetails?.modificationNo}}</div>\r\n                     </div>\r\n                     <!-- <div fxFlex='32'>\r\n                        <div class='label' *ngIf=\"accountDetails?.swiftCodeEnable\">Swift Code</div>\r\n                        <div class='labelval'>{{accountDetails?.swiftCode}}</div>\r\n                      </div> -->\r\n                     <!-- <div fxFlex='32'>\r\n                        <div class='label'>Fund By</div>\r\n                        <div class='labelval'>{{accountDetails?.fundBy}}</div>\r\n                     </div>\r\n                      -->\r\n                     <!-- <div fxFlex='32'>\r\n                       <div class='label'>Swift Code</div>\r\n                       <div class='labelval'>{{accountDetails?.swiftCode}}</div>\r\n                     </div> -->\r\n                     <!-- <div fxFlex='32' *ngIf=\"accountDetails?.fundBy == 'yes'\" >\r\n                        <div class='label'>Fund the Account</div>\r\n                        <div class='labelval'>{{accountDetails?.fundTheAccount}}</div>\r\n                     </div> -->\r\n                  </div>\r\n                  <!--end of second row-->\r\n                  <!--third row-->\r\n                  <div fxLayout=\"row\" class='rowbord nobord'>\r\n                     <div fxFlex='4'></div>\r\n                    \r\n                     <!-- <div fxFlex='32'>\r\n                        <div class='label'>Amount</div>\r\n                        <div class='labelval'>{{accountDetails?.amount}}</div>\r\n                     </div> -->\r\n                   <div fxFlex='32'>\r\n                        <div class='label'>OverDraft Requested?</div>\r\n                        <div class='labelval'>\r\n                           <mat-slide-toggle [checked]=\"accountDetails?.overDraftRequested\" [disabled]=\"variable\"></mat-slide-toggle>\r\n                        </div>   \r\n                     </div>\r\n                     \r\n                  <div fxFlex='32'>\r\n                         <div class='label'>Swift Code</div>\r\n                          <div class='labelval'>\r\n                        <mat-slide-toggle [checked]=\"accountDetails?.swiftCodeEnable\" [disabled]=\"variable\"></mat-slide-toggle>\r\n                        </div>\r\n                       </div>\r\n                       <!-- <div fxFlex='32'>\r\n                        <div class='label' *ngIf=\"accountDetails?.swiftCodeEnable\">Swift Code</div>\r\n                        <div class='labelval'>{{accountDetails?.swiftCode}}</div>\r\n                      </div> -->\r\n                      <div fxFlex='32'>\r\n                        <div class='label'>Initial Funding </div>\r\n                        <div class='labelval'>\r\n                           <mat-slide-toggle [checked]=\"accountDetails?.fundBy\" [disabled]=\"variable\"></mat-slide-toggle>\r\n                        </div>   \r\n                     </div>\r\n                     \r\n\r\n                  </div>\r\n                 \r\n                  <!--end of third row-->\r\n               </mat-card-content>\r\n            </mat-card>\r\n\r\n            <!--end of account details-->\r\n            <!--customer account details-->\r\n            <div *ngIf='customerInformation != null'>\r\n               <!-- <h3>Customer Information Details</h3>\r\n               <hr /> -->\r\n               <div fxLayout=\"row\" fxLayoutAlign=\"space between center\">\r\n               <fieldset>\r\n                  <legend visible=\"true\">Customer Information Details</legend>\r\n               </fieldset>\r\n                  <span><mat-icon class=\"editbtn\" [hidden]=\"editScreen\" (click)=\"editCustomerInfo()\">edit</mat-icon></span>\r\n               </div>\r\n\r\n               <mat-card class='mtcd'>\r\n\r\n                  <mat-card-content>\r\n                     <div fxLayout=\"row\" class='rowbord nobord'>\r\n                        <div fxFlex='4'></div>\r\n                        <div fxFlex='32'>\r\n                           <div class='label'>Ownership</div>\r\n                           <div class='labelval'>{{customerInformation.data[0].ownership}}</div>\r\n                        </div>\r\n                        <div fxFlex='32'>\r\n                           <div class='label'>Number of Applicant</div>\r\n                           <div class='labelval'>{{customerInformation.data[0].numOfApplicants}}</div>\r\n                        </div>\r\n                     </div>\r\n                  </mat-card-content>\r\n               </mat-card>\r\n               <!--end of customer account details-->\r\n               <!-- applicants info-->\r\n\r\n               <!-- applicants info part-1 -->\r\n               <mat-card *ngFor='let cust of customerInformation.data'>\r\n                  <mat-card-content>\r\n                     <div fxLayout=\"row\">\r\n                        <div class=\"circle\">\r\n                           <!-- <div class=\"content1\">JD</div> -->\r\n                           <h2 class=\"content1\" >{{cust.firstName| uppercase | slice:0:1}}{{cust.lastName | uppercase | slice:0:1}}</h2>\r\n                        </div>\r\n                        <mat-card class='appersoninfocard' >\r\n                           <div fxFlex='200px' class=\"size1\">\r\n                              <div class='namecard' style=\"font-size:20px;\">{{cust.prefix+' '+cust.firstName+' '+cust.lastName}}</div>\r\n                              <div class='cifnum label'>CIF {{ cust.cifNumber != null ? '#' + cust.cifNumber : '- n/a' }}</div>\r\n                              <div class='phoneno label'>\r\n                                 <mat-icon class='maticon'> phone</mat-icon> <div class=\"textsize\">{{cust.phoneNumber}}</div>\r\n                              </div>\r\n                              <div class='email label'>\r\n                                 <mat-icon class='maticon'> email</mat-icon><div class=\"textsize\">{{cust.primaryEmailAdress}}</div>\r\n                              </div>\r\n                              <div class='address label'>\r\n                                 <mat-icon class='maticon'> location_on</mat-icon>\r\n                                 <div class=\"textsize\">\r\n                                 {{cust.userAddress[0].address1}}\r\n                                 {{cust.userAddress[0].address}}\r\n                                 </div>\r\n                              </div>\r\n                           </div>\r\n                        </mat-card>\r\n\r\n                        <mat-card class='appersoninfocard'>\r\n                           <div fxFlex='300px' style=\"font-size: 12px;\">\r\n                              <div style=\"font-size: 20px;\">\r\n                                 <h3>Other Details</h3>\r\n                              </div>\r\n                              <div  style=\"font-size: 12px;\" fxLayout=\"row\" fxLayoutGap=\"40px\">\r\n                                 <div>\r\n                                    <div class='label'>Date Of Birth</div>\r\n                                    <div class='labelval'>{{cust.dateOfBirth}}</div>\r\n                                 </div>\r\n                                 <div>\r\n                                    <div class='label'>Citizenship By</div>\r\n                                    <div class='labelval'>{{cust.countryOfResidence}}</div>\r\n                                 </div>\r\n                                 <div >\r\n                                    <div class='label'>Id Type</div>\r\n                                    <div class='labelval'>{{cust.custIdProofs[0].idType}}</div>\r\n                                 </div>\r\n                              </div>\r\n                              <br />\r\n                              <div  style=\"font-size: 12px;\" fxLayout=\"row\" fxLayoutGap=\"20px\">\r\n                                 <div>\r\n                                    <div class='label'>Residence Status</div>\r\n                                    <div class='labelval'>{{cust.residenceStatus}}</div>\r\n                                 </div>\r\n                                 <div>\r\n                                    <div class='label'>Occupation Type</div>\r\n                                    <div class='labelval'>{{cust.occupationType}}</div>\r\n                                 </div>\r\n                                 <div>\r\n                                    <div class='label'>Unique Id Number</div>\r\n                                    <div class='labelval'>{{cust.custIdProofs[0].idNumber}}</div>\r\n                                 </div>\r\n                              </div>\r\n                           </div>\r\n                        </mat-card>\r\n                     </div>\r\n                  </mat-card-content>\r\n               </mat-card>\r\n            </div>\r\n\r\n\r\n            <div *ngIf=\"mandate?.length > 0\">\r\n               <!-- Mandate Details Start-->\r\n               <!-- <h3>Mandate Details</h3> -->\r\n               <div fxLayout=\"row\" fxLayoutAlign=\"space between center\">\r\n               <fieldset>\r\n                  <legend visible=\"true\">Mandate Details</legend>\r\n               </fieldset>\r\n                  <span><mat-icon class=\"editbtn\" [hidden]=\"editScreen\" (click)=\"editMandateDetails()\">edit</mat-icon></span>\r\n               </div>\r\n               \r\n               \r\n               <mat-card *ngFor='let mandateData of mandate;let i=index'>\r\n                  <!-- <div fxLayout=\"row\" fxLayoutAlign=\" start\">\r\n                   <div class=\"circle1\">\r\n                      <div class=\"content2\"><mat-icon>done</mat-icon></div>\r\n                   </div> -->\r\n                  <h2 class=\"btnleft\"><span class=\"circle3\">\r\n                     <mat-icon class=\"done1\">done</mat-icon>\r\n                  </span>Mandate {{i+1}}</h2>\r\n                  <!-- </div> -->\r\n                  <!-- <div>\r\n                     <div class=\"col\" style=\"font-size: 12px;\" fxLayout=\"row\" fxLayoutGap=\"40px\">\r\n                        <div fxflex=\"\"> -->\r\n                        <div fxLayout=\"row\" >\r\n                           <div fxFlex='5'></div>\r\n                              <div fxFlex='30'>\r\n                                <div class='label'>Mode Of Operation</div>\r\n                                <div class='labelval'>{{mandateData.modeOfOperation}}</div>\r\n                              </div>\r\n                             <div fxFlex='30'>\r\n                                 <div class='label'>Amount From</div>\r\n                                 <div class='labelval'>{{mandateData.amountFrom}}</div>\r\n                             </div>\r\n                              <div fxFlex='30'>\r\n                                 <div class='label'>Amount To</div>\r\n                                 <div class='labelval'>{{mandateData.amountTo}}</div>\r\n                             </div>\r\n                              <div fxFlex='30'>\r\n                                <div class='label'>Required No. of Signatures</div>\r\n                               <div class='labelval'>{{mandateData.totalSignaturesRequired}}</div>\r\n                             </div>\r\n                         \r\n                     </div>\r\n               </mat-card>\r\n            </div>\r\n\r\n            <!-- end of Mandate Details -->\r\n            <div *ngIf='accountServiceDetails  != null'>\r\n\r\n               <!-- Account Service Details Start -->\r\n\r\n               <!-- <h3>Account Service Details</h3> -->\r\n               <!-- <hr /> -->\r\n               <div fxLayout=\"row\" fxLayoutAlign=\"space between center\">\r\n               <fieldset>\r\n                  <legend visible=\"true\">Account Service Details</legend>\r\n               </fieldset>\r\n                  <span><mat-icon class=\"editbtn\" [hidden]=\"editScreen\" (click)=\"editServiceDetails()\">edit</mat-icon></span>\r\n               </div>\r\n               \r\n               <mat-card class=\"mtcd\">\r\n                  <mat-card-content>\r\n                     <!--first row-->\r\n                     <div fxLayout=\"row\" class=\"rowbord\" >\r\n                        <div fxFlex='4'></div>\r\n                        <div fxFlex='30'>\r\n                           <div class='label'>Account Statement Frequency</div>\r\n                           <div class='labelval'>{{accountServiceDetails.statementFrequency}}</div>\r\n                        </div>\r\n                        <div fxFlex='30'>\r\n                           <div class='label'>Account Statement Preferences</div>\r\n                           <div class='labelval' *ngFor='let pref of accountServiceDetails.statementPref;let i=index'>\r\n                             <span *ngIf='pref.checked'> {{pref.name}} </span>  </div> \r\n                        </div>\r\n                        <div fxFlex='30'>\r\n                           <div class='label'>Cheque Book</div>\r\n                           <div class='labelval'>\r\n                              <mat-slide-toggle disabled [checked]=\"accountServiceDetails?.chequebookNeeded\"></mat-slide-toggle>\r\n                           </div>\r\n                        </div>\r\n                        <div fxFlex='30'>\r\n                           <div class='label'>Debit Card</div>\r\n                           <div class='labelval'>\r\n                              <mat-slide-toggle disabled [checked]=\"accountServiceDetails?.debitCardRequired\"></mat-slide-toggle>\r\n                           </div>\r\n                        </div>\r\n                     </div>\r\n                     \r\n                     <!--end of first row-->\r\n                     <!--second row-->\r\n                     <div fxLayout=\"row\" class=\"rowbord\">\r\n                        <div fxFlex='4'></div>\r\n                        <div fxFlex='30'>\r\n                           <div class='label'>Banking Channel Preferences</div>\r\n                           <div class='labelval' *ngFor='let pref of accountServiceDetails.bankChannelPref;let i=index'>\r\n                              <span *ngIf='pref.checked'> {{pref.name}} </span>  </div>\r\n                        </div>\r\n                        <div fxFlex='30'>\r\n                           <div class='label'>Communication Channel Preferences</div>\r\n                           <div class='labelval' *ngFor='let pref of accountServiceDetails.commChannelPref;let i=index'>\r\n                              <span *ngIf='pref.checked'> {{pref.name}} </span>  </div>\r\n                        </div>\r\n                        <div fxFlex='30'>\r\n                           <div class='label'>Pass Book</div>\r\n                           <div class='labelval'>\r\n                              <mat-slide-toggle disabled [checked]=\"accountServiceDetails?.passbookNeeded\"></mat-slide-toggle>\r\n                           </div>\r\n                        </div>\r\n                        <div fxFlex='30' *ngIf=\"cardType\">\r\n                           <div class='label'>Debit Card Type</div>\r\n                           <div class='labelval'>\r\n                              <span> {{debitCardDataValue?.cardType}} </span>\r\n                           </div>\r\n                        </div>\r\n                     </div>\r\n\r\n                     <div fxLayout=\"row\" class=\"rowbord\" *ngIf=\"cardType\">\r\n                        <table class=\"table table-bordered dataStyle\">\r\n                           <thead style=\"color: #03a9f4;\">\r\n                           <tr>\r\n                             \r\n                             <th>Daily Limit</th>\r\n                             <th>Domestic Limit</th>\r\n                             <th>International Limit</th>\r\n                             <th>ATM Limit</th>\r\n                             <th>POS Limit </th>\r\n                             <th>Internet Limit </th>\r\n                           </tr>\r\n                           </thead>\r\n                           <tbody>\r\n                           <tr>\r\n                             \r\n                             <td>{{debitCardDataValue?.dailyLimit}}</td>\r\n                             <td>{{debitCardDataValue?.domesticLimit}}</td>\r\n                             <td>{{debitCardDataValue?.internationalLimit}}</td>\r\n                             <td>{{debitCardDataValue?.atmLimit}}</td>\r\n                             <td>{{debitCardDataValue?.posLimit}}</td>\r\n                             <td>{{debitCardDataValue?.internetLimit}}</td>\r\n                           </tr>\r\n                         </tbody>\r\n                        </table>\r\n                        \r\n                        \r\n                     </div>\r\n                     <!--end of second row-->\r\n                  </mat-card-content>\r\n               </mat-card>\r\n\r\n            </div>\r\n\r\n            <!-- end of Account Service Details -->\r\n\r\n\r\n            <!-- Nominee Details Start -->\r\n\r\n            <div *ngIf=\"nomineeDetails?.length > 0\">\r\n               <!-- <h3>Nominee Details</h3> -->\r\n               <!-- <hr /> -->\r\n               <div fxLayout=\"row\" fxLayoutAlign=\"space between center\">\r\n               <fieldset>\r\n                  <legend visible=\"true\">Nominee Details</legend>\r\n               </fieldset>\r\n                  <span><mat-icon class=\"editbtn\" [hidden]=\"editScreen\" (click)=\"editNomineeDetails()\">edit</mat-icon></span>\r\n               </div>\r\n               \r\n               <!-- Nominee 1 Start -->\r\n               <mat-card *ngFor='let nominee of nomineeDetails;let i=index'>\r\n                  <!-- <div fxLayout=\"row\" fxLayoutAlign=\" start\">\r\n                   <div class=\"circle1\">\r\n                      <div class=\"content2\"><mat-icon>done<h4>Nominee 1</h4></mat-icon></div>\r\n                   </div>-->\r\n                  <h2 class=\"btnleft\" ><span class=\"circle3\"><mat-icon class=\" done1\">done</mat-icon></span>Nominee {{i+1}}</h2>\r\n                  <!-- </div>  -->\r\n                  <div>\r\n\r\n                     <div fxLayout=\"row\">\r\n\r\n                        <mat-card class='appersoninfocard'>\r\n                           <div fxFlex='200px' style=\"font-size: 10px;\">\r\n                              <div class='namecard' style=\"font-size:20px;\">{{nominee.prefix+' '+nominee.firstName+' '+nominee.lastName}}</div>\r\n                              <div class='phoneno label'>\r\n                                 <mat-icon class='maticon'> phone</mat-icon> \r\n                                 <div class=\"textsize\"> {{nominee.phoneNumber}}</div>\r\n                              </div>\r\n                              <div class='email label'>\r\n                                 <mat-icon class='maticon'> email</mat-icon> \r\n                                 <div class=\"textsize\">{{nominee.email}}</div>\r\n                              </div>\r\n                              <div class='address label'>\r\n                                 <mat-icon class='maticon'> location_on</mat-icon>\r\n                                 <div class=\"textsize\">\r\n                                 {{nominee.building}} {{nominee.street}} {{nominee.locality}} {{nominee.city}}\r\n                                 {{nominee.state}}\r\n                                 {{nominee.country}} {{nominee.zipCode}}\r\n                                 </div>\r\n                              </div>\r\n                           </div>\r\n                        </mat-card>\r\n\r\n                        <mat-card class='appersoninfocard'>\r\n                           <div fxFlex='100px' style=\"font-size: 12px;\">\r\n                              <div style=\"font-size: 20px;\"></div>\r\n                              <div style=\"font-size: 12px;\" fxLayout=\"column\" fxLayoutGap=\"10px\">\r\n                                 <div>\r\n                                    <div class='label'>Date Of Birth</div>\r\n                                    <div class='labelval'>{{nominee.dateOfBirth}}</div>\r\n                                 </div>\r\n                                 <div>\r\n                                    <div class='label'>Relationship Type</div>\r\n                                    <div class='labelval'>{{nominee.relationshipType}}</div>\r\n                                 </div>\r\n                                 <!-- <div>\r\n                                    <div class='label'>Percentage</div>\r\n                                    <div class='labelval'>100%</div>\r\n                                 </div> -->\r\n                              </div>\r\n                           </div>\r\n                        </mat-card>\r\n\r\n                        <mat-card class='appersoninfocard' *ngFor='let gardian of nominee.guardianDetails;let i=index'>\r\n\r\n                           <div fxFlex='130px' style=\"font-size: 12px;\">\r\n                              <div style=\"font-size: 20px;\"></div>\r\n                              <div  style=\"font-size: 12px;\" fxLayout=\"column\" fxLayoutGap=\"10px\">\r\n                                 <h4>Guardian Details</h4>\r\n                                 \r\n                                 <div>\r\n                                    <div class='namecard' style=\"font-size:20px;\">{{gardian.prefix+' '+gardian.firstName+' '+gardian.lastName}}</div>\r\n                                 </div>\r\n                                 <div>\r\n                                    <div class='label'>Relationship Type</div>\r\n                                    <div class='labelval'>{{gardian.relationshipType}}</div>\r\n                                 </div>\r\n                                 <div>\r\n                                    <div class='label'>Date Of Birth</div>\r\n                                    <div class='labelval'>{{gardian.dateOfBirth}}</div>\r\n                                 </div>\r\n                              </div>\r\n                           </div>\r\n                        </mat-card>\r\n\r\n                     </div>\r\n\r\n                  </div>\r\n               </mat-card>\r\n               <!-- end of Nominee 1 Start -->\r\n               <!-- end of Nominee Details -->\r\n            </div>\r\n         \r\n         </div>\r\n       \r\n      </div>\r\n\r\n      <!-- end of Stage-1 -->\r\n      <!-- Stage-2 Starts -->\r\n\r\n      <div fxLayout=\"row\" class=\"flex-container\">\r\n         <div fxFlex=\"10\">\r\n            <div class='num'>2</div>\r\n            <div class='bordnum'>&nbsp;</div>\r\n         </div>\r\n                  \r\n         <div fxFlex=\"85\" class=\"margin1\">\r\n            <h2>Limit Entry Stage</h2>\r\n            <!-- <hr /> -->\r\n           \r\n            <!-- Secured Overdraft Details Starts -->\r\n          <div *ngFor='let secured of securedOverdraftDetails;let i=index'>\r\n            <div fxLayout=\"row\" fxLayoutAlign=\"space between center\">\r\n               <fieldset>\r\n            <legend visible= \"true\" *ngIf=\"secured.collateralType !=null && secured.securityReferenceNumber !=null \" >Secured Overdraft Details</legend>\r\n            </fieldset>\r\n               <span><mat-icon class=\"editbtn\" [hidden]=\"editScreen\" (click)=\"editSecuredOverdraftDetails()\">edit</mat-icon></span>\r\n            </div>\r\n            \r\n               <mat-card  *ngIf=\"secured.collateralType !=null && secured.securityReferenceNumber !=null \">\r\n                 \r\n                  <div>\r\n                     <div class='label'>Collateral/Reference Number: {{secured.securityReferenceNumber}}</div>\r\n                  </div><br />\r\n                  <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n                     <div style=\"font-size: 20px;\">\r\n                        <mat-icon class='maticon'> home</mat-icon> {{secured.collateralType}}\r\n                     </div>\r\n                     <div fxLayout=\"row\" fxLayoutGap=\"40px\">\r\n                        <div>\r\n                           <button type=\"button\" class=\"sqftbtn\">{{secured.dimensions}}</button>\r\n                        </div>\r\n                        <div>\r\n                           <button type=\"button\" class=\"acbtn\">{{secured.attributes}}</button>\r\n                        </div>\r\n                     </div>\r\n                  </div><br />\r\n                  <div>\r\n                     <div class=\"col\" style=\"font-size: 24px;\" fxLayout=\"row\" fxLayoutGap=\"80px\">\r\n                        <div>\r\n                           <div class='label'>Collateral Value</div>\r\n                           <div class='labelval'>{{secured.collateralValue}}</div>\r\n                        </div>\r\n                        <div>\r\n                           <div class='label'>Available Linkage Amount</div>\r\n                           <div class='labelval'>{{secured.availableLinkageAccount}}</div>\r\n                        </div>\r\n                        <div>\r\n                           <div class='label'>Overdraft Limit Amount</div>\r\n                           <div class='labelval'>{{secured.overdraftLimitAmount}}</div>\r\n                        </div>\r\n                        <div>\r\n                           <div class='label'>Final Rate</div>\r\n                           <div class='labelval'>{{secured.finalAmount}}</div>\r\n                        </div>\r\n                     </div>\r\n                  </div>\r\n              \r\n               </mat-card>\r\n           </div>\r\n            <br />\r\n\r\n            <!-- end of Secured Overdraft Details -->\r\n\r\n            <div *ngIf=\"unsecuredOverdraftDetails!=null\">\r\n               <!-- UnSecured Overdraft Details Starts -->\r\n\r\n               <!-- <h3>Unsecured Overdraft Details</h3>\r\n               <hr /> -->\r\n               <div fxLayout=\"row\" fxLayoutAlign=\"space between center\">\r\n               <fieldset>\r\n                  <legend visible=\"true\">Unsecured Overdraft Details</legend>\r\n               </fieldset>\r\n                  <span><mat-icon class=\"editbtn\" [hidden]=\"editScreen\" (click)=\"editUnsecuredOverdraftDetails()\">edit</mat-icon></span>\r\n               </div>\r\n               \r\n\r\n               <mat-card>\r\n                  <div>\r\n                     <div class=\"col\" style=\"font-size: 20px;\" fxLayout=\"row\" fxLayoutGap=\"80px\" [hidden]=\"unsecuredOverdraftDetails.renewPeriod == null && unsecuredOverdraftDetails.renewalAmount\">\r\n                        <div>\r\n                           <div class='label'>Limit Id</div>\r\n                           <div class='labelval'>{{unsecuredOverdraftDetails.limitId}}</div>\r\n                        </div>\r\n                        <div>\r\n                           <div class='label'>Overdraft Limit Amount</div>\r\n                           <div class='labelval'>{{unsecuredOverdraftDetails.overdraftLimitAmount}}</div>\r\n                        </div>\r\n                        <div *ngIf=\"unsecuredOverdraftDetails.renewPeriod !=null\" >\r\n                           <div class='label'>Renew Period</div>\r\n                           <div class='labelval'>{{unsecuredOverdraftDetails.renewPeriod}}</div>\r\n                        </div>\r\n                        <div *ngIf=\"unsecuredOverdraftDetails.renewalAmount !=null\" >\r\n                           <div class='label'>Renewal Amount</div>\r\n                           <div class='labelval'>{{unsecuredOverdraftDetails.renewalAmount}}</div>\r\n                        </div>\r\n                     </div>\r\n                  </div>\r\n               </mat-card>\r\n            </div>\r\n            <br />\r\n\r\n\r\n\r\n            <!-- end of UnSecured Overdraft Details -->\r\n            <!-- Financial Details Starts -->\r\n\r\n            <div *ngIf=\"financialDetails!=null\">\r\n               <!-- <h3>Financial Details</h3>\r\n               <hr /> -->\r\n               <div fxLayout=\"row\" fxLayoutAlign=\"space between center\">\r\n               <fieldset>\r\n                  <legend visible=\"true\">Financial Details</legend>\r\n               </fieldset>\r\n                  <span><mat-icon class=\"editbtn\" [hidden]=\"editScreen\" (click)=\"editFinancialDetails()\">edit</mat-icon></span>\r\n               </div>\r\n               \r\n\r\n               <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n                  <mat-card class=\"box\">\r\n                     <h4>Assets and Liabilities</h4>\r\n                     <apx-chart [series]=\"chartOptions.series\" [chart]=\"chartOptions.chart\"\r\n                        [plotOptions]=\"chartOptions.plotOptions\" [labels]=\"chartOptions.labels\"></apx-chart>\r\n\r\n\r\n                     <!-- need to add image -->\r\n\r\n\r\n\r\n                  </mat-card>\r\n                  <!-- end of assets and Liabilities -->\r\n\r\n                  <mat-card class=\"box2\">\r\n                     <h4>Income and Expenses</h4>\r\n                     <apx-chart [series]=\"chartOptions1.series1\" [chart]=\"chartOptions1.chart1\"\r\n                        [yaxis]=\"chartOptions1.yaxis1\" [xaxis]=\"chartOptions1.xaxis1\" [labels]=\"chartOptions1.labels1\"\r\n                        [stroke]=\"chartOptions1.stroke1\" [markers]=\"chartOptions1.markers1\" [fill]=\"chartOptions1.fill1\"\r\n                        [tooltip]=\"chartOptions1.tooltip1\"></apx-chart>\r\n                     <!-- need to add graph -->\r\n\r\n                  </mat-card>\r\n\r\n               </div>\r\n\r\n               <!-- end of charts and graph -->\r\n\r\n               <mat-card>\r\n                  <mat-card-header fxLayout=\"row\" fxLayoutGap=\"70px\">\r\n                     <div fxLayout=\"row\" FxLayoutAlign=\"start\">\r\n                        <div class=\"circle\">\r\n                           <div class=\"content1\">\r\n                              <mat-icon>perm_identity</mat-icon>\r\n                           </div>\r\n                        </div>\r\n                        <div>\r\n                           <mat-card-title style=\"font-size: 16px; padding-top:30px\">{{financialDetails.designation}}</mat-card-title>\r\n                           <mat-card-subtitle style=\"color:grey; font-size: 10px;\">{{financialDetails.employeeNumber}},{{financialDetails.officeName}}\r\n                           </mat-card-subtitle>\r\n                        </div>\r\n                     </div>\r\n                     <div class=\"col\" style=\"font-size: 16px; padding-top:30px\" fxLayout=\"row\" fxLayoutGap=\"80px\">\r\n                        <div>\r\n                           <div class='label'>Employment Type</div>\r\n                           <div class='labelval'>{{financialDetails.employmentType}}</div>\r\n                        </div>\r\n                        <div>\r\n                           <div class='label'>Employment Category</div>\r\n                           <div class='labelval'>{{financialDetails.employmentCategory}}</div>\r\n                        </div>\r\n                     </div>\r\n                  </mat-card-header>\r\n               </mat-card>\r\n               <br />\r\n\r\n               <!-- end of Financial Details -->\r\n            </div>\r\n         </div>\r\n      \r\n      </div><br />\r\n\r\n      <!-- end of Stage-2 -->\r\n      <!-- Stage-3 Starts -->\r\n\r\n      <!-- <div fxLayout=\"row\" class=\"flex-container\" *ngIf=\"loadingApplEnrich && (intrestDetails?.length > 0 || chargeDetails?.length > 0)\"> -->\r\n      <div fxLayout=\"row\" class=\"flex-container\" >\r\n         <div fxFlex=\"10\">\r\n            <div class='num'>3</div>\r\n            <div class='bordnum'>&nbsp;</div>\r\n         </div>\r\n         \r\n         <div fxFlex=\"85\" class=\"margin1\">\r\n            <h2>Application Enrichment</h2>\r\n            <div fxLayout=\"row\" fxLayoutAlign=\"space between center\">\r\n               <fieldset>\r\n               <legend visible=\"true\">Interest Details</legend>\r\n            </fieldset>\r\n               <span><mat-icon class=\"editbtn\" [hidden]=\"editScreen\" (click)=\"editInterestDetails()\">edit</mat-icon></span>\r\n            </div>\r\n            \r\n\r\n            <!-- Interest Details Starts -->\r\n            <mat-card *ngIf=\"intrestDetails?.length > 0\">\r\n               <!-- <h3>Interest Details</h3> -->\r\n               <mat-card *ngFor='let interestData of intrestDetails;let i=index'>\r\n                  <div>\r\n                     <h4>Fixed Interest</h4>\r\n                  </div>\r\n                  <div fxLayout=\"row\" fxLayouutAlign=\"space-between center\">\r\n                     <div>\r\n\r\n                        <mat-card class='interstcard'>\r\n\r\n                           <div>\r\n                              <div class='label'>Interest Type</div>\r\n                              <div class='labelval'>{{interestData.intrestType}}</div>\r\n                              <!-- <div class='labelval'>{{accountInfo.chargeDetails[0].intrestType}}</div> -->\r\n                           </div>\r\n                        </mat-card>\r\n                     </div>\r\n                     <div>\r\n                        <mat-card class='interstcard2' >\r\n\r\n                           <div>\r\n                              <div class='label'>Applicable Interest Rate</div>\r\n                              <div class='labelval'>{{interestData.intrestType}}</div>\r\n                              <!-- <div class='labelval'>{{accountInfo.chargeDetails[0].intrestRateApplicable}}</div> -->\r\n                           </div>\r\n                        </mat-card>\r\n                     </div>\r\n                     <div>\r\n                        <mat-card class='interstcard3' >\r\n\r\n                           <div>\r\n                              <div class='label'>Effective Rate %</div>\r\n                              <div class='labelval'>{{interestData.effectiveRate}}</div>\r\n                           </div>\r\n                        </mat-card>\r\n                     </div>\r\n                     <div>\r\n                        <mat-card class='interstcard4'>\r\n\r\n                           <div>\r\n                              <div class='label'>Margin In %</div>\r\n                              <div class='labelval'>{{interestData.marginIn}}</div>\r\n                           </div>\r\n                        </mat-card>\r\n                     </div>\r\n                  </div>\r\n               </mat-card>\r\n            </mat-card>\r\n            <br />\r\n            <!-- <hr /> -->\r\n            <!-- end of Interest Details -->\r\n            <!-- Charge Details Starts -->\r\n            <div fxLayout=\"row\" fxLayoutAlign=\"space between center\">\r\n               <fieldset>\r\n               <legend visible=\"true\">Charge Details</legend>\r\n            </fieldset>\r\n               <span><mat-icon class=\"editbtn\" [hidden]=\"editScreen\" (click)=\"editChargeDetails()\">edit</mat-icon></span>\r\n            </div>\r\n            \r\n\r\n            <mat-card *ngIf=\"chargeDetails?.length > 0\">\r\n               <!-- <h3>Charge Details</h3> -->\r\n               <mat-card *ngFor=\"let chargeData of chargeDetails;let i=index\">\r\n                  <div>\r\n                     <h4 class=\"nom\">IT Charge</h4>\r\n                  </div>\r\n                  <div>\r\n                     <div>\r\n                        <mat-card class='appersoninfocard' style=\"width:100px\">\r\n                           <div>\r\n                              <div class='label'>Amount</div>\r\n                              <div class='labelval'>{{chargeData.amount}}</div>\r\n                           </div>\r\n                        </mat-card>\r\n                     </div>\r\n                  </div>\r\n               </mat-card>\r\n            </mat-card>\r\n            <!-- end of Charge Details -->\r\n\r\n         </div>\r\n      \r\n      </div>\r\n      <!-- end of stage-3 -->\r\n      <!-- stage-4 Starts -->\r\n\r\n      <div fxLayout=\"row\" class=\"flex-container\" style=\"flex-direction: row; box-sizing: border-box; display: flex;\">\r\n         <div fxFlex=\"10\" style=\"flex: 1 1 100%; box-sizing: border-box; max-width: 15%;\">\r\n            <div class='num'>4</div>\r\n            <div class='bordnum'>&nbsp;</div>\r\n         </div>\r\n         \r\n         <div fxFlex=\"85\" style=\"flex: 1 1 100%; box-sizing: border-box; max-width: 85%;\"class=\"margin1\">\r\n            <h2>Application Assessment</h2>\r\n            <!-- <hr /> -->\r\n            <!-- Application Assessment Starts -->\r\n            <div fxLayout=\"row\" fxLayoutAlign=\"space between center\">\r\n               <fieldset>\r\n               <legend visible=\"true\">Qualitative Scorecard</legend>\r\n            </fieldset>\r\n               <span><mat-icon class=\"editbtn\" [hidden]=\"editScreen\" (click)=\"editQualitativeDetails()\">edit</mat-icon></span>\r\n            </div>\r\n            \r\n\r\n            <!-- <mat-card > -->\r\n            <mat-card class='mtcd'>\r\n               <!-- <h3>Qualitative Scoreboard</h3> -->\r\n               <mat-card-content>\r\n                  <!--first row-->\r\n                  <div>\r\n                     <div fxLayout=\"row\" class='rowbord'>\r\n                        <div fxFlex='32'>\r\n                           <div class=\"label\">Scorecard Id</div>\r\n                           <div class=\"labelval\">{{qualitativeScorecard?.scoreCardId}}</div>\r\n                        </div>\r\n                        <div fxFlex='32'>\r\n                           <div class='label'>Number of Applicants</div>\r\n                           <div class='labelval'>{{qualitativeScorecard?.numberOfApplicant}}</div>\r\n                        </div>\r\n                     </div>\r\n                  </div>\r\n                  <!--end of first row-->\r\n                  <!-- <hr>  -->\r\n                  <!--second row-->\r\n\r\n                  <div >\r\n                  <!-- <div *ngIf=\"scoreCardMappingArray?.length > 0\"> -->\r\n                  \r\n                        <!-- <div fxLayout=\"row\" class='rowbord' *ngFor='let scMapping of scoreCardMappingArray'>\r\n                        <div fxFlex='4'></div>\r\n                        <mat-card class='appersoninfocard'>\r\n                           <div fxFlex='300px'>\r\n                              <div class='label'>{{scMapping.scorecardQuestion}}</div>\r\n                              <div class='label'>{{i+1}}.{{scMapping.scorecardQuestion}}</div>\r\n                              <div class='labelval'>{{scMapping.scorecardAnswer}}</div>\r\n                           </div>\r\n                        </mat-card>\r\n                     </div> -->\r\n                     <div class=\"full-width\" >\r\n                        <div>\r\n                        <div fxLayout=\"row wrap\" class=\"full-width\">\r\n\r\n                           <div *ngFor='let item of qualitativeScorecard?.scoreCardMapping;let k=index'>  \r\n\r\n                            <!-- <mat-card class='appersoninfocard1'> -->\r\n\r\n                           <div fxFlex=\"47\" class='qtncrd' fxFlex.xs=\"100\" \r\n                           *ngFor='let item of qualitativeScorecard?.scoreCardMapping[k].scoreCardDetails;let i=index'>\r\n\r\n                               <div class='label'>{{i+1}}.{{item.scorecardQuestion}}</div>\r\n                               <div class='labelval'>{{item.scorecardAnswer}}</div>\r\n                           </div>\r\n                        <!-- </mat-card> -->\r\n                        </div>\r\n                        </div>\r\n                    </div>\r\n                    </div>\r\n                  </div>\r\n                  <!--end of second row-->\r\n               </mat-card-content>\r\n            </mat-card>\r\n            <br />\r\n            <!-- <hr /> -->\r\n            <!-- end of Application Assessment-->\r\n            <!-- Assessment Report Starts -->\r\n\r\n            <mat-card class='mtcd' *ngIf=\"assessmentReport!=null\">\r\n               <!-- <h3>Assessment Report</h3> -->\r\n               <fieldset>\r\n                  <legend visible=\"true\">Assessment Report</legend>\r\n               </fieldset>\r\n\r\n               <mat-card-content>\r\n                  <!--first row-->\r\n                  <div fxLayout=\"row\" class='rowbord'>\r\n                     <div fxFlex=\"4\"></div>\r\n                        <div fxFlex='32'>\r\n                           <div class=\"label\">Limit Id</div>\r\n                           <div class=\"labelval\">{{assessmentReport?.limitId}}</div>\r\n                        </div>\r\n                        <div fxFlex='32'>\r\n                           <div class=\"label\">Overdraft Limit Amount</div>\r\n                           <div class=\"labelval\">{{assessmentReport?.overdraftLimitAmount}}</div>\r\n                        </div>\r\n                        <div fxFlex='32'>\r\n                           <div class=\"label\">Recommended Overdraft Limit</div>\r\n                           <div class=\"labelval\">{{assessmentReport?.recommendedOverdraftLimit}}</div>\r\n                        </div>\r\n                  </div>\r\n                  <!--end of first row-->\r\n                  <!--second row-->\r\n\r\n                  <div fxLayout=\"row\" class='rowbord'>\r\n                   <div fxFlex='4'></div>\r\n                     <div fxFlex='32'>\r\n                        <div class='label'>Limit Start Date</div>\r\n                        <div class='labelval'>{{assessmentReport?.limitStartDate}}</div>\r\n                     </div>\r\n                    <div fxFlex='32'> \r\n                        <div class='label'>Limit End Date</div>\r\n                        <div class='labelval'>{{assessmentReport?.limitEndDate}}</div>\r\n                     </div><br>\r\n                  </div>\r\n\r\n                  <!--end of second row-->\r\n               </mat-card-content>\r\n            </mat-card>\r\n            <!-- <br />\r\n            <hr /> -->\r\n            <!-- end of Assessment Report  -->\r\n         </div><br><br>\r\n      \r\n      </div>\r\n      <!-- end of stage-4 -->\r\n      <!-- Stage-5 Start -->\r\n      <div fxLayout=\"row\" class=\"flex-container\" style=\"flex-direction: row; box-sizing: border-box; display: flex;\" *ngIf=\"createAccFundingStage!=null\">\r\n      <!-- <div fxLayout=\"row\" class=\"flex-container\" *ngIf=\"createAccFundingStage!=null\"> -->\r\n         <div fxFlex=\"10\" style=\"flex: 1 1 100%; box-sizing: border-box; max-width: 15%;\">\r\n            <div class='num'>5</div>\r\n            <div class='bordnum'>&nbsp;</div>\r\n         </div>\r\n         <!-- <mat-card label=\"Funding Stage\" style=\"border-radius: 0px; width: 900px;\"> -->\r\n         <div fxFlex=\"85\" style=\"flex: 1 1 100%; box-sizing: border-box; max-width: 85%;\">\r\n            <h2 class=\"marginn\">Funding Stage</h2>\r\n            <!-- <hr /> -->\r\n            <!-- Funding Stage Starts -->\r\n            <!-- <h3>Initial Funding Details</h3> -->\r\n            <div fxLayout=\"row\" fxLayoutAlign=\"space between center\">\r\n               <fieldset>\r\n               <legend visible=\"true\">Initial Funding Details</legend>\r\n            </fieldset>\r\n               <span><mat-icon class=\"editbtn\" [hidden]=\"editScreen\" (click)=\"editFundingStage()\">edit</mat-icon></span>\r\n            </div>\r\n            \r\n\r\n            <!-- <mat-card > -->\r\n            <!-- <mat-card *ngIf=\"createAccFundingStage.fundBy == 'Cheque'\"> -->\r\n\r\n\r\n               <!-- <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n                  <button type=\"submit\" class=\"RNbtn\">Cheque Number : {{createAccFundingStage.chequeNumber}}</button>\r\n                  <button type=\"submit\" class=\"btn\"> Fund By Account: {{createAccFundingStage.fundByAccount}}</button>\r\n               </div> -->\r\n               <!-- <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\" class=\"mt-12\">\r\n                  <div fxFlex=\"100\">\r\n                     <div class=\"mat-heading-label ml-48\">Cheque Number : <span class=\"mat-body-1\">{{createAccFundingStage.chequeNumber}}</span></div>\r\n                  </div>\r\n                  <div fxFlex=\"100\">\r\n                     <div class=\"mat-heading-label right-text\">Fund By Account: <span class=\"mat-body-1\"> {{createAccFundingStage.fundByAccount}}</span></div>\r\n                  </div>\r\n               </div> -->\r\n               <!-- <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\" class=\"mt-12\">\r\n                  <div fxFlex=\"100\">\r\n                     <div class=\"mat-heading-label ml-48\">Amount : <span class=\"mat-body-1\">{{createAccFundingStage.amount}}</span></div>\r\n                  </div>\r\n                  <div fxFlex=\"100\">\r\n                     <div class=\"mat-heading-label right-text\">FUND BY : <span class=\"mat-body-1\">{{createAccFundingStage.fundBy}}</span></div>\r\n                  </div>\r\n               </div> -->\r\n            <!-- </mat-card> -->\r\n\r\n\r\n            <!-- <mat-card > -->\r\n            <mat-card *ngIf=\"createAccFundingStage.fundBy == 'Fund Transfer'\">\r\n\r\n\r\n               <!-- <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n                  <button type=\"submit\" class=\"RNbtn\">Branch Code : {{createAccFundingStage.branchCode}}</button>\r\n                  <button type=\"submit\" class=\"btn\"> Fund By Account: {{createAccFundingStage.fundByAccount}}</button>\r\n               </div> -->\r\n               <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\" class=\"mt-12\">\r\n                  <div fxFlex=\"100\">\r\n                     <div class=\"mat-heading-label ml-48\">Branch Code : <span class=\"mat-body-1\">{{createAccFundingStage.branchCode}}</span></div>\r\n                  </div>\r\n                  <div fxFlex=\"100\">\r\n                     <div class=\"mat-heading-label right-text\">Fund By Account: <span class=\"mat-body-1\">{{createAccFundingStage.fundByAccount}}</span></div>\r\n                  </div>\r\n               </div>\r\n               <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\" class=\"mt-12\">\r\n                  <div fxFlex=\"100\">\r\n                     <div class=\"mat-heading-label ml-48\">Amount<span class=\"mat-body-1\">{{createAccFundingStage.amount}}</span></div>\r\n                  </div>\r\n                  <div fxFlex=\"100\">\r\n                     <div class=\"mat-heading-label right-text\">Fund By<span class=\"mat-body-1\">{{createAccFundingStage.fundBy}}</span></div>\r\n                  </div>\r\n               </div>\r\n            </mat-card>\r\n\r\n\r\n\r\n            <!-- <mat-card > -->\r\n            <mat-card *ngIf=\"createAccFundingStage.fundBy == 'Cash'\">\r\n\r\n\r\n               <!-- <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n                  <button type=\"submit\" class=\"RNbtn\">Reference Number : {{createAccFundingStage.tellerTrxnRefNo}}</button>\r\n                  <button type=\"submit\" class=\"RNbtn\">Transaction Reference Number : {{createAccFundingStage.tellerTrxnRefNo}}</button>\r\n                  <button type=\"submit\" class=\"btn\"> Status: {{createAccFundingStage.tellerTrxnStatus}}</button>\r\n               </div> -->\r\n               <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\" class=\"mt-12\">\r\n                  <div fxFlex=\"100\">\r\n                     <!-- <div class=\"mat-heading-label ml-48\">Transaction Reference Number : <span class=\"mat-body-1\">{{createAccFundingStage.tellerTrxnRefNo}}</span></div> -->\r\n                     <button class=\"refnum\" type=\"button\" \r\n                    >Reference Number {{createAccFundingStage.tellerTrxnRefNo}} </button>\r\n                  </div>\r\n                  <div fxFlex=\"100\">\r\n                     <!-- <div class=\"mat-heading-label right-text\">Status: <span class=\"mat-body-1\">{{createAccFundingStage.tellerTrxnStatus}}</span></div> -->\r\n                     <button class=\"suces\" type=\"button\" \r\n                    >{{createAccFundingStage.tellerTrxnStatus}} </button>\r\n                  </div>\r\n               </div>\r\n               <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\" class=\"mt-12\">\r\n                  <div fxFlex=\"100\">\r\n                     <div class=\" ml-48 btttn\" style=\"font-family: Manrope,SemiBold;\">Amount<div class=\"mat-body-1 btttn\"><b>{{createAccFundingStage.amount}}</b></div></div>\r\n                  </div>\r\n                  <div fxFlex=\"100\">\r\n                     <div class=\" right-text btttn\">Fund By<div class=\"mat-body-1\"><b>{{createAccFundingStage.fundBy}}</b></div></div>\r\n                  </div>\r\n               </div>\r\n            </mat-card>\r\n            <!-- end of Funding Stage -->\r\n         </div>\r\n      <!-- </mat-card> -->\r\n      </div>\r\n      <!-- end of Stage-5 -->\r\n        <!-- Stage-6 Start -->\r\n        \r\n      <!-- end of Stage-6 -->\r\n      <!-- Stage-7 Starts -->\r\n\r\n      <div fxLayout=\"row\" class=\"flex-container\" style=\"flex-direction: row; box-sizing: border-box; display: flex;\">\r\n         <!-- <div fxLayout=\"row\" class=\"flex-container\" *ngIf=\"createAccFundingStage!=null\"> -->\r\n         <div fxFlex=\"10\" style=\"flex: 1 1 100%; box-sizing: border-box; max-width: 15%;\">\r\n            <div class='num'>6</div>\r\n            <div class='bordnum'>&nbsp;</div>\r\n         </div>\r\n         \r\n         <div fxFlex=\"85\" style=\"flex: 1 1 100%; box-sizing: border-box; max-width: 85%;\" class=\"margin1\">\r\n            <h2>Approval Stage</h2>\r\n            <!-- <hr /> -->\r\n            <!-- Approval Stage Starts -->\r\n            <!-- <h3>Approval Details</h3> -->\r\n            <div fxLayout=\"row\" fxLayoutAlign=\"space between center\">\r\n               <fieldset>\r\n               <legend visible=\"true\">Approval Details </legend>\r\n            </fieldset>\r\n               <span><mat-icon class=\"editbtn\" [hidden]=\"editScreen\" (click)=\"editApprovalDetails()\">edit</mat-icon></span>\r\n            </div>\r\n            \r\n\r\n\r\n            <mat-card class='mtcd'>\r\n               <mat-card-content>\r\n                  <!--first row-->\r\n                  <div fxLayout=\"row\" class='rowbord'>\r\n                     <div fxFlex='4'></div>\r\n                     <div fxFlex='32'>\r\n                        <div class='label'>Account Type</div>\r\n                        <div class='labelval'>{{accountDetails?.accountType}}</div>\r\n                     </div>\r\n                     <div fxFlex='32'>\r\n                        <div class='label'>Account Branch</div>\r\n                        <div class='labelval'>{{accountDetails?.accountBranch}}</div>\r\n                     </div>\r\n                     <div fxFlex='32'>\r\n                        <div class='label'>Product Code</div>\r\n                        <div class='labelval'>{{accountDetails?.businessProductName}}</div>\r\n                     </div>\r\n                  </div>\r\n                  <!--end of first row-->\r\n                  <!--second row-->\r\n                  <div fxLayout=\"row\" class='rowbord'>\r\n                     <div fxFlex='4'></div>\r\n                    <!--<div fxFlex='32'>\r\n                        <div class='label'>Product Name</div>\r\n                        <div class='labelval'>{{accountDetails.businessProductName}}</div>\r\n                     </div>-->\r\n                     <div fxFlex='32'>\r\n                        <div class='label'>Account Currency</div>\r\n                        <div class='labelval'>{{accountDetails?.accountCurrency}}</div>\r\n                     </div>\r\n                  </div>\r\n                  <!--end of second row-->\r\n                  <!--third row-->\r\n                  <mat-card class='appersoninfocard ' style=\"width:250px\" >\r\n                     <div fxLayout=\"row\" class='rowbord nobord'>\r\n                        <div fxLayout=\"row\" fxLayoutAlign=\" start\">\r\n                           <div class=\"circle1\">\r\n                              <div class=\"content2\">\r\n                                 <mat-icon>done</mat-icon>\r\n                              </div>\r\n                           </div>\r\n                        </div>\r\n                        <div style=\"padding-bottom: 30px;\" >\r\n                           <div class='label'>User Recommendation</div>\r\n                           <div class='labelval' >{{accountDetails?.userRecommendation}}</div>\r\n                        </div>\r\n                     </div>\r\n                  </mat-card>\r\n                  <!--end of third row-->\r\n               </mat-card-content>\r\n            </mat-card>\r\n            <!-- <hr /> -->\r\n            <!--end of account details-->\r\n\r\n            <!-- end of Approval Stage -->\r\n         </div>\r\n      \r\n      </div>\r\n      <div fxLayout=\"row\" class=\"flex-container\" style=\"flex-direction: row; box-sizing: border-box; display: flex;\">\r\n         <div fxFlex=\"10\" style=\"flex: 1 1 100%; box-sizing: border-box; max-width: 15%;\">\r\n            <div class='num'>7</div>\r\n            <!-- <div class='bordnum'>&nbsp;</div> -->\r\n         </div>\r\n      \r\n         <div fxFlex=\"85\" style=\"flex: 1 1 100%; box-sizing: border-box; max-width: 85%;\" class=\"margin1\">\r\n            <h2>Digital Sign</h2>\r\n            <!-- <hr /> -->\r\n            <!-- <h3>Digital Sign</h3> -->\r\n            <div fxLayout=\"row\" fxLayoutAlign=\"space between center\">\r\n               <fieldset>\r\n               <legend visible=\"true\">Digital Sign</legend>\r\n            </fieldset>\r\n               <span><mat-icon class=\"editbtn\" [hidden]=\"editScreen\" (click)=\"editDigitalSign()\">edit</mat-icon></span>\r\n            </div>\r\n            \r\n      \r\n            <mat-card class='mtcd'>\r\n               <mat-card-content>\r\n                  <div fxLayout=\"row\" class='rowbord'>\r\n                     <div fxFlex='4'></div>\r\n                     <div fxFlex='32'>\r\n                        <div class='label'>Document Name</div>\r\n                        <div class='labelval'>{{signatureData?.documentName}}</div>\r\n                     </div>\r\n                     <div fxFlex='32'>\r\n                        <div class='label'>File Type</div>\r\n                        <div class='labelval'>{{signatureData?.fileType}}</div>\r\n                     </div>\r\n                     <div fxFlex='32'>\r\n                        <div class='label'>File Name</div>\r\n                        <div class='labelval'>{{signatureData?.fileName}}</div>\r\n                     </div>\r\n                     <div fxFlex='32'>\r\n                        <div class='label'>Download</div>\r\n                        <div *ngIf=\"signatureData?.fileUrl\" class='labelval'>\r\n                           <a class=\"linkColor\" href={{signatureData.fileUrl}} download>link</a>\r\n                           <link>\r\n                        </div>\r\n                     </div>\r\n                  </div>\r\n               </mat-card-content>\r\n            </mat-card>\r\n            <!-- <hr /> -->\r\n         </div>\r\n      \r\n      </div>\r\n      <br />\r\n      <div >\r\n      <div  fxLayout=\"row\" fxLayoutAlign=\"end\" fxLayoutGap=\"20px\"  *ngIf=\"!loading\">\r\n         <!-- <div><button type=\"button\" class=\"cancelbtn\" (click)=\"close(dataResponse)\">Cancel</button></div> -->\r\n         <div style=\"float: right;\">\r\n\r\n            <button type=\"button\"  class=\"rejectbtn\" [hidden]=\"rejectedStatus\"\r\n               [ngClass]=\"{'disabledbtn':rejectedStatus,'rejectbtn': !rejectedStatus }\"\r\n               (click)=\"updateApplicationStatus(accountInfo,'REJECTED')\">\r\n               Reject\r\n            </button>\r\n            &nbsp;&nbsp;\r\n            <button type=\"button\"  class=\"approvebtn\" [hidden]=\"approvedStatus\"\r\n               [ngClass]=\"{'disabledbtn':approvedStatus,'approvebtn': !approvedStatus }\"\r\n                  (click)=\"updateApplicationStatus(accountInfo,'APPROVED')\">Approve</button> \r\n                  <!-- <button class=\"editbtn\" type=\"button\" [hidden]=\"editScreen\"\r\n                     (click)=\"goToCreateAccount(accountId,customerId)\">Edit</button> -->\r\n           </div>\r\n<!-- </div> -->\r\n      </div>\r\n      </div>\r\n      <br>\r\n   </div>\r\n   </div>\r\n</div>\r\n</div>\r\n</div>\r\n","import { Component, OnInit, Inject, ChangeDetectorRef } from '@angular/core';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { AppLoaderService } from 'app/shared/services/app-loader/app-loader.service';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { TasksummaryService } from '../../tasksummary.service';\r\n\r\n@Component({\r\n  selector: 'app-loan-valuation-of-asset-update',\r\n  templateUrl: './loan-valuation-of-asset-update.component.html',\r\n  styleUrls: ['./loan-valuation-of-asset-update.component.scss']\r\n})\r\nexport class LoanValuationOfAssetUpdateComponent implements OnInit {\r\n  loanAccountId: any;\r\n  loanaccountID: any;\r\n  loanValuationForm: FormGroup;\r\n  creditDetails: any;\r\n  valuationOfAssetDetails: any;\r\n\r\n  \r\n  statusArr: any = ['BACKLOG', 'ONGOING', 'APPROVED', 'REJECTED']\r\n  arr: any = ['BACKLOG', 'ONGOINGArr', 'APPROVEDArr', 'REJECTEDArr']\r\n  BACKLOGArr: any = [];\r\n  ONGOINGArr: any = [];\r\n  REJECTEDArr: any = [];\r\n  APPROVEDArr: any = [];\r\n  \r\n  BACKLOGTotalPages: number = 0\r\n  ONGOINGTotalPages: number = 0\r\n  REJECTEDTotalPages: number = 0\r\n  APPROVEDTotalPages: number = 0\r\n\r\n  BACKLOGCount: number = 0\r\n  ONGOINGCount: number = 0\r\n  REJECTEDCount: number = 0\r\n  APPROVEDCount: number = 0\r\n\r\n  BACKLOGImage: any[] = [];\r\n  ONGOINGImage: any[] = [];\r\n  REJECTEDImage: any[] = [];\r\n  APPROVEDImage: any[] = [];\r\n\r\n  BACKLOGTotalRecords: number = 0;\r\n  ONGOINGTotalRecords: number = 0;\r\n  REJECTEDTotalRecords: number = 0;\r\n  APPROVEDTotalRecords: number = 0;\r\n\r\n  BACKLOGPage: number = 0;\r\n  ONGOINGPage: number = 0;\r\n  REJECTEDPage: number = 0;\r\n  APPROVEDPage: number = 0;\r\n\r\n  constructor(\r\n    private apiService: ApiService, @Inject(MAT_DIALOG_DATA) public data: any, private fb: FormBuilder,\r\n  private loader: AppLoaderService, private taskSumService: TasksummaryService, private cdr: ChangeDetectorRef,\r\n  private ls: LocalStoreService, public dialogRef: MatDialogRef<LoanValuationOfAssetUpdateComponent>, private snack: MatSnackBar\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.loanaccountID = this.data.loanAccountId;\r\n    console.log('loanaccountID', this.loanaccountID)\r\n    this.buildLoanValuationForm(this.data)\r\n  }\r\n\r\n  _keyPress(event: any) {\r\n   \r\n    const pattern = /[0-9]/;\r\n    let inputChar = String.fromCharCode(event.charCode);\r\n    console.log(\"inputChar\",inputChar);\r\n    inputChar=inputChar.toString();\r\n    console.log(\"inputChar1\",inputChar);\r\n    inputChar=inputChar\r\n    if (!pattern.test(inputChar)) {\r\n        event.preventDefault();\r\n    }\r\n   }\r\n   buildLoanValuationForm(data?) {\r\n    console.log('item',data)\r\n   \r\n     \r\n    this.loanValuationForm= this.fb.group({\r\n        loanAccountId: [this.loanaccountID],\r\n      valuationDate: [data ? data?.loanValuationOfAssetInfo?.valuationDate : ''],\r\n      forcedSaleValue:[data ? data?.loanValuationOfAssetInfo?.forcedSaleValue:''],\r\n      propertyAreaSize: [data ? data?.loanValuationOfAssetInfo?.propertyAreaSize : ''],\r\n        bankValuation: [data ? data?.loanValuationOfAssetInfo?.bankValuation : ''],\r\n        assetType:[data ? data?.loanValuationOfAssetInfo?.assetType: ''],\r\n        actualPropertyAreaSize: [data ? data?.loanValuationOfAssetInfo?.actualPropertyAreaSize : ''],\r\n        borrowersMktValOfAsset: [data ? data?.loanValuationOfAssetInfo?.borrowersMktValOfAsset : ''],\r\n        faceValOfAsset: [data ? data?.loanValuationOfAssetInfo?.faceValOfAsset : ''],\r\n      mktValOfAsset: [data ? data?.loanValuationOfAssetInfo?.mktValOfAsset : ''],\r\n      propertyAreaInUnits: [data ? data?.loanValuationOfAssetInfo?.propertyAreaInUnits : ''],\r\n   \r\n      \r\n\r\n    });\r\n\r\n\r\n  }\r\n  getLoanCreditDetails() {\r\n \r\n    this.apiService.gettingValuationDetails(this.loanaccountID).subscribe((valuationOfAssetDetails) => {\r\n \r\n      this.valuationOfAssetDetails = valuationOfAssetDetails;\r\n      console.log(\"this.creditDetails::\", this.valuationOfAssetDetails);\r\n    \r\n\r\n      this.buildLoanValuationForm(this.valuationOfAssetDetails);\r\n      this.loanValuationForm.value.faceValOfAsset = this.valuationOfAssetDetails.faceValOfAsset;\r\n      this.loanValuationForm.value.forcedSaleValue = this.valuationOfAssetDetails.forcedSaleValue;\r\n      this.loanValuationForm.value.bankValuation = this.valuationOfAssetDetails.bankValuation;\r\n      this.loanValuationForm.value.mktValOfAsset = this.valuationOfAssetDetails.mktValOfAsset;\r\n      this.loanValuationForm.value.borrowersMktValOfAsset = this.valuationOfAssetDetails.borrowersMktValOfAsset;\r\n      this.loanValuationForm.value.propertyAreaSize = this.valuationOfAssetDetails.propertyAreaSize;\r\n      this.loanValuationForm.value.propertyAreaInUnits = this.valuationOfAssetDetails.propertyAreaInUnits;\r\n      this.loanValuationForm.value.assetType = this.valuationOfAssetDetails.assetType;\r\n      this.loanValuationForm.value.actualPropertyAreaSize = this.valuationOfAssetDetails.actualPropertyAreaSize;\r\n\r\n      \r\n      \r\n     \r\n    }, (err: any) => {\r\n      this.loader.close();\r\n    });\r\n  }\r\n\r\n  goToClose(): void {\r\n    this.dialogRef.close();\r\n   \r\n  \r\n    this.apiService.gettingValuationDetails(this.loanaccountID).subscribe((valuationOfAssetDetails: any) => {\r\n      console.log(\"All Account Service\", valuationOfAssetDetails);\r\n      this.valuationOfAssetDetails = valuationOfAssetDetails;\r\n\r\n      console.log(\"this.accountDetails\", this.valuationOfAssetDetails);\r\n      console.log('form',this.loanValuationForm.value)\r\n   \r\n    \r\n\r\n   });\r\n   \r\n  }\r\n  submitForm1(){\r\n    \r\n\r\n    let payload={\r\n \r\n      loanAccountId: this.data.loanAccountId,\r\n      bankValuation: this.loanValuationForm.value.bankValuation,\r\n      assetType: this.loanValuationForm.value.assetType,\r\n      propertyAreaSize: this.loanValuationForm.value.propertyAreaSize,\r\n      actualPropertySizeArea: this.loanValuationForm.value.actualPropertySizeArea,\r\n      borrowersMktValOfAsset: this.loanValuationForm.value.borrowersMktValOfAsset,\r\n      faceValOfAsset: this.loanValuationForm.value.faceValOfAsset,\r\n      mktValOfAsset: this.loanValuationForm.value.mktValOfAsset,\r\n      propertyAreaInSize: this.loanValuationForm.value.propertyAreaInSize,\r\n      propertyAreaInUnits: this.loanValuationForm.value.propertyAreaInUnits,\r\n      valuationDate: this.loanValuationForm.value.valuationDate,\r\n      forcedSaleValue: this.loanValuationForm.value.forcedSaleValue,\r\n      actualPropertyAreaSize: this.loanValuationForm.value.actualPropertyAreaSize,\r\n    }\r\n    console.log(\"payload\",payload)\r\n    this.apiService.saveValuationDetails(payload).subscribe(data => {\r\n      console.log(\"data\",data.loanAccountId);\r\n      this.loanaccountID = this.data.loanAccountId;\r\n      console.log('loanaccountID', this.loanaccountID)\r\n\r\n      this.assign(this.data.loanAccountId)\r\n      if (data === 200 || data !== null) {\r\n        let statusModel = {\r\n          loanAccountId: this.data.loanAccountId,\r\n          status: \"ONGOING\"\r\n        };\r\n        this.apiService.updateLoanDetailsStatus(statusModel).subscribe(data => {\r\n        });\r\n      //  sessionStorage.setItem('loanAccountId', data.loanAccountid);\r\n        let fundStatus = {\r\n          loanAccountid: this.data.loanAccountId\r\n          \r\n        };\r\n\r\n        this.ls.setItem('fundByStatus', fundStatus);\r\n        this.ls.setItem('accountType', data.accountType);\r\n        this.ls.setItem('productName',data.businessProductName);\r\n  \r\n        \r\n    this.loanaccountID = this.data.loanAccountId;\r\n    console.log(\"this.productaccountID\",this.loanaccountID);\r\n        this.snack.open('Data Updated!', 'OK', {\r\n          duration: 4000,\r\n          verticalPosition: 'top',\r\n          horizontalPosition: 'right'\r\n        });\r\n        this.getDataOnLoad();\r\n      }\r\n      if( data === 500){\r\n        this.snack.open('Not able to connect to server!', 'INTERNAL SERVER ERROR', {\r\n          duration: 4000,\r\n          verticalPosition: 'top',\r\n          horizontalPosition: 'right'\r\n        });\r\n        console.log(\"500 error\")\r\n      }\r\n      \r\n      this.goToClose();\r\n    })\r\n  }\r\n  assign(valueForaccId) {\r\n    this.apiService.setAccountId({\r\n      loanAccountId: valueForaccId\r\n    });\r\n    console.log(\"loan\", this.loanAccountId)\r\n  }\r\n  async getDataOnLoad() {\r\n    for (let index = 0; index < this.statusArr.length; index++) {\r\n      const statusItem = this.statusArr[index];\r\n      this.fetchCustomerInfo(statusItem);\r\n    }\r\n\r\n  }\r\n\r\n   fetchCustomerInfo(status:string){\r\n   \r\n    this.taskSumService.getallLoanAccountData(status)\r\n            .subscribe((custResp:any) => {\r\n              console.log(\"Response\", custResp);\r\n              this.updateStatusResponse(status, custResp);\r\n            });\r\n  }\r\n\r\n  updateStatusResponse(status, data){\r\n    console.log(\"data\", data)\r\n    console.log(\"status\", status)\r\n      if (status == 'ONGOING') {\r\n      this.ONGOINGArr = data?.loanList;\r\n      this.ONGOINGTotalPages = data?.totalPages;\r\n      this.ONGOINGTotalRecords = data?.totalNoOfElements;\r\n    }\r\n \r\n\r\n    this.cdr.markForCheck();\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","<div >\r\n    <mat-dialog-content>\r\n      <div fxLayout=\"row\" class=\"contain\">\r\n        <mat-icon style=\"padding-left: 100%;\"class=\"backIcon\" (click)=\"goToClose()\">close</mat-icon>\r\n    </div>\r\n      <h1>Loan Credit Details</h1>\r\n      <form class=\"mt-32\" [formGroup]=\"loanValuationForm\">\r\n        <div fxLayout=\"row wrap\" fxLayout.lt-sm=\"column\" >\r\n          <div fxFlex=\"33.33\" class=\"pr-16\">\r\n            <mat-label>Bank Valuation </mat-label>\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                <input matInput name=\"bankValuation\" formControlName=\"bankValuation\"  \r\n                />\r\n            </mat-form-field>\r\n          </div>\r\n    \r\n          <div fxFlex=\"33.33\" class=\"pr-16\">\r\n            <mat-label>Asset Type</mat-label>\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                <input matInput name=\"assetType\" formControlName=\"assetType\"  \r\n               />\r\n            </mat-form-field>\r\n          </div>\r\n          <div fxFlex=\"33.33\" class=\"pr-16\">\r\n            <mat-label>Property Size Area</mat-label>\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                <input matInput name=\"propertyAreaSize\" formControlName=\"propertyAreaSize\"  \r\n                (keypress)=\"_keyPress($event)\" />\r\n            </mat-form-field>\r\n          </div>\r\n       \r\n          \r\n        </div>\r\n    \r\n        <div fxLayout=\"row wrap\">\r\n          \r\n          <div fxFlex=\"33.33\" class=\"pr-16\">\r\n            <mat-label>Actual Property Size Area</mat-label>\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n          <input matInput name=\"actualPropertyAreaSize\" formControlName=\"actualPropertyAreaSize\"\r\n           (keypress)=\"_keyPress($event)\"\r\n          />\r\n            </mat-form-field>\r\n          </div>\r\n          <div fxFlex=\"33.33\" class=\"pr-16\">\r\n            <mat-label>Borrower's Market Value </mat-label>\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n              <input matInput name=\"borrowersMktValOfAsset\" formControlName=\"borrowersMktValOfAsset\"  \r\n              (keypress)=\"_keyPress($event)\"\r\n              />\r\n            </mat-form-field>\r\n          </div>\r\n    \r\n          <div fxFlex=\"33.33\" class=\"pr-16\">\r\n            <mat-label>Face Value Of Asset</mat-label>\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n              <input matInput name=\"faceValOfAsset\" formControlName=\"faceValOfAsset\"  \r\n              (keypress)=\"_keyPress($event)\"\r\n              />\r\n            </mat-form-field>\r\n          </div>\r\n        </div>\r\n       \r\n        <div fxLayout=\"row wrap\">\r\n          \r\n            <div fxFlex=\"33.33\" class=\"pr-16\">\r\n              <mat-label>Market Value of Asset</mat-label>\r\n              <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input matInput name=\"mktValOfAsset\" formControlName=\"mktValOfAsset\" \r\n            (keypress)=\"_keyPress($event)\"\r\n           />\r\n              </mat-form-field>\r\n            </div>\r\n            <div fxFlex=\"33.33\" class=\"pr-16\">\r\n              <mat-label>Property Area In Units </mat-label>\r\n              <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                <input matInput name=\"propertyAreaInUnits\" formControlName=\"propertyAreaInUnits\"  \r\n                (keypress)=\"_keyPress($event)\" />\r\n              </mat-form-field>\r\n            </div>\r\n      \r\n            <div fxFlex=\"33.33\" class=\"pr-16\">\r\n              <mat-label>Valuation Date</mat-label>\r\n              <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                <input matInput name=\"valuationDate\" formControlName=\"valuationDate\"  \r\n                />\r\n              </mat-form-field>\r\n            </div>\r\n          </div>\r\n         \r\n          <div fxLayout=\"row wrap\">\r\n          \r\n            <div fxFlex=\"33.33\" class=\"pr-16\">\r\n              <mat-label>Forced Sale Value</mat-label>\r\n              <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input matInput name=\"forcedSaleValue\" formControlName=\"forcedSaleValue\"\r\n            (keypress)=\"_keyPress($event)\"\r\n            />\r\n              </mat-form-field>\r\n            </div>\r\n            <div fxFlex=\"33.33\" class=\"pr-16\">\r\n              <!-- <mat-label>Property Area In Units </mat-label>\r\n              <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                <input matInput name=\"branchCode\" formControlName=\"branchCode\"  \r\n                />\r\n              </mat-form-field> -->\r\n            </div>\r\n      \r\n            <div fxFlex=\"33.33\" class=\"pr-16\">\r\n              <!-- <mat-label>Property Area Size</mat-label>\r\n              <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                <input matInput name=\"customerAccount\" formControlName=\"customerAccount\"  \r\n                />\r\n              </mat-form-field> -->\r\n            </div>\r\n          </div>\r\n       \r\n      </form>\r\n    </mat-dialog-content>\r\n    <mat-dialog-actions align=\"end\">\r\n      <button mat-button (click)=\"submitForm1()\">\r\n        Update\r\n      </button>\r\n      <button mat-button (click)=\"goToClose()\">Close</button>\r\n    </mat-dialog-actions>\r\n</div>","import { ChangeDetectorRef, Component, Inject, Input, OnInit, ViewChild, ViewEncapsulation } from '@angular/core';\r\nimport { FormArray, FormBuilder, FormGroup, NgForm, Validators } from '@angular/forms';\r\nimport { MatTabChangeEvent } from '@angular/material/tabs';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { DialogService } from 'app/shared/services/dialogs/dialog.service';\r\nimport { DOCUMENT } from '@angular/common';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { NavigationExtras, Router } from '@angular/router';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { TasksummaryService } from '../tasksummary.service';\r\nimport * as moment from 'moment';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { UpdatePrimaryInfoComponent } from './update-primary-info/update-primary-info.component';\r\nimport { UpdateContactInfoComponent } from './update-contact-info/update-contact-info.component';\r\nimport { UpdateProofOfIdentityComponent } from './update-proof-of-identity/update-proof-of-identity.component';\r\nimport { UpdateAdditionalInfoComponent } from './update-additional-info/update-additional-info.component';\r\nimport { UpdateMandateInfoComponent } from './update-mandate-info/update-mandate-info.component';\r\nimport { TextFieldModule } from '@angular/cdk/text-field';\r\n\r\n@Component({\r\n  selector: 'app-cust-on-boarding-approver',\r\n  templateUrl: './cust-on-boarding-approver.component.html',\r\n  styleUrls: ['./cust-on-boarding-approver.component.scss'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class CustOnBoardingApproverComponent implements OnInit {\r\n  @Input(\"initiatedArr\") initiatedArr: any;\r\n\r\n  // custOnBoardingApprovet:CustOnBoardingApprover;\r\n  selectedIndex: number = 0;\r\n  imgUrl: string | ArrayBuffer;\r\n  profilePicture: any;\r\n  proofDocForm: FormGroup;\r\n  userAddressForm: FormGroup;\r\n  otherDocForm: FormGroup;\r\n  proofDoc_array: FormArray;\r\n  otherDoc_array: FormArray;\r\n  userAddress_array: FormArray;\r\n  addNewProof: boolean = false;\r\n  arrayPrefix: any[] = [];\r\n  arrayGender: any[] = [];\r\n  arrayMaritalStatus: any[] = [];\r\n  arrayCountry: any[] = [];\r\n  arrayResidence: any[] = [];\r\n  arrayDocumentType: any[] = [];\r\n  arrayEmploymentType: any[] = [];\r\n  arrayEmployerName: any[] = [];\r\n  otherDocumentArray: any[] = [];\r\n  proofDocumentArray: any[] = [];\r\n  accountId: any;\r\n  primaryInfo: any;\r\n\r\n  @ViewChild('ncForm') ncForm: NgForm;\r\n  // image: string | ArrayBuffer;\r\n  image: Object;\r\n  custIdProofs_array: any;\r\n  signatureDetails_array: any;\r\n  status: any;\r\n  rejectedStatus: boolean;\r\n  approvedStatus: boolean;\r\n  statusUpdate: any;\r\n  document_type: string;\r\n  custOtherDoc_array: any;\r\n  customerId: any;\r\n  documentName: any;\r\n  customerColorCode: any;\r\n  phoneNum: any;\r\n  emailID: any;\r\n  errorStatus: any;\r\n  imageUrl: any;\r\n  loading: boolean= true;\r\n  noOFSigns: any;\r\n  editScreen: boolean;\r\n  kycStatus: any;\r\n  editStatus: boolean;\r\n  nameCreater:any[]=['Y','B','','D','E','T','A','E','R','C'];\r\n\r\n  constructor(private tasSumService: TasksummaryService,\r\n    public cdr: ChangeDetectorRef,private router:Router,\r\n    private apiService:ApiService, private ls: LocalStoreService,\r\n    public dialogRef: MatDialogRef<CustOnBoardingApproverComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public dataResponse: any,private sanitizer: DomSanitizer,\r\n    private snack: MatSnackBar, private dialog: MatDialog\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n    setTimeout(() => {\r\n      this.loading = true;\r\n      console.log(\"dataResponse.dataResp.customerId\",this.dataResponse.dataResp.customerId);\r\n      console.log(\"dataResponse.dataResp.accountId\",this.dataResponse.dataResp.accountId);\r\n      this.customerId = this.dataResponse.dataResp.customerId\r\n      this.ls.setItem('customerId',this.customerId)\r\n      //not required as we are uploading only documentType=2 in new customer onboarding\r\n      this.getCustomerDocumentsDetails(this.customerId)\r\n      console.log(this.customerId);\r\n      this.phoneNum = this.dataResponse.dataResp.phoneNumber;\r\n      this.emailID = this.dataResponse.dataResp.primaryEmailAdress;\r\n      console.log(\"Dataas\", this.dataResponse,this.phoneNum, this.emailID)\r\n      this.customerColorCode = localStorage.getItem('CustomerColorCode');\r\n      // console.log('dataResponse :: ', this.dataResponse.dataResp);\r\n      // console.log('recordStatus :: ', this.dataResponse.recordStatus);\r\n      this.imageUrl = this.dataResponse.dataResp.profileImage;\r\n      this.status = this.dataResponse.dataResp.custStatus;\r\n      this.errorStatus = this.dataResponse.dataResp.custStatus;\r\n      this.userAddress_array = this.dataResponse.dataResp.userAddress;\r\n      this.custIdProofs_array = this.dataResponse.dataResp.custIdProofs;\r\n      console.log(\"result::\", this.custIdProofs_array);\r\n      if (this.status === 'REJECTED') {\r\n        this.rejectedStatus = true;\r\n        this.approvedStatus = true;\r\n        this.editScreen = false;\r\n      } else if (this.status === 'INITIATED') {\r\n        this.rejectedStatus = false;\r\n        this.approvedStatus = false;\r\n        this.editScreen = false;\r\n      } else if (this.status === 'APPROVED') {\r\n        this.rejectedStatus = true;\r\n        this.approvedStatus = true;\r\n        this.editScreen = true;\r\n      } else if (this.status === 'UNDER_PROCESS') {\r\n        this.rejectedStatus = false;\r\n        this.approvedStatus = true;\r\n        this.editScreen = false;\r\n      }\r\n      // localStorage.setItem('kycStatus',this.customerDetails[0].customerAdditionalInfo.kycStatus);\r\n      // console.log(this.dataResponse.dataResp.customerId);\r\n      this.getProfileImage(this.dataResponse.dataResp.customerId);\r\n      this.fetchSignatureDetails(this.dataResponse.dataResp.customerId);\r\n    }, 5000);\r\n    if (this.dataResponse.dataResp.customerAdditionalInfo.kycStatus !== \"NULL\") {\r\n      this.kycStatus = this.dataResponse.dataResp.customerAdditionalInfo.kycStatus;\r\n    }\r\n  }\r\n  goToCustOnboarding() {\r\n    console.log(\"Navigating to edit screen\");\r\n\r\n    this.apiService\r\n      .updateKycStatusByCustId(this.dataResponse.dataResp.customerId, '', 'UNDER_PROCESS').subscribe(data => {\r\n      });\r\n    this.router.navigateByUrl('/others/newCustomerOnboarding');\r\n    console.log(this.dataResponse);\r\n    var splitKyc = this.dataResponse.dataResp.kycReference.split('KYC_');\r\n    console.log(splitKyc[1]);\r\n    this.ls.setItem('EDIT-KYCDETAILS', splitKyc[1]);\r\n    console.log(this.ls.getItem('EDIT-KYCDETAILS'));\r\n\r\n    // const navigationExtras: NavigationExtras = {\r\n    //   queryParams: {\r\n    //     // 'id': this.modifyUserObject.id,\r\n    //     kyc_Id:this.dataResponse.dataResp.kycReference,\r\n\r\n    //   },\r\n    // };\r\n\r\n    // this.apiService.sendNavParam(navigationExtras);\r\n    this.dialogRef.close({\r\n      message: 'Confirm',\r\n    });\r\n\r\n  }\r\n  getCustomerDocumentsDetails(customerId: string) {\r\n    let document_type: number[] = [6, 7, 8];\r\n    // this.document_type= \"6\";\r\n    this.apiService.getCustomerAllDocuments(customerId, document_type).subscribe((result) => {\r\n      this.loading = false;\r\n      this.custOtherDoc_array = result;\r\n      if (result != null) {\r\n        this.documentName = this.custOtherDoc_array[0].fileName;\r\n        console.log(\"custOtherDoc_array::\", this.custOtherDoc_array)\r\n      }\r\n    });\r\n  }\r\n\r\n  updateApplicationStatus(formData, status, isEdit?) {\r\n    // console.log('formData :: ', formData.dataResp);\r\n    // console.log('status :: ', status);\r\n    formData.dataResp.customerAdditionalInfo.kycStatus = status;\r\n\r\n    this.statusUpdate = status;\r\n    // console.log('formData :: ', formData.dataResp);\r\n    /* TO-DO: update correct api this method call */\r\n    // console.log('customerId :: ', formData.dataResp.customerId);\r\n    this.apiService.updateKycStatusByCustId(formData.dataResp.customerId, '', status)\r\n      .subscribe(data => {\r\n        // console.log('update response :: ', data)\r\n        if (data != null) {\r\n          this.cdr.markForCheck();\r\n          this.cdr.detectChanges();\r\n          if (isEdit != true){\r\n            this.dialogRef.close({\r\n              message: 'Confirm',\r\n              recordStatus: status,\r\n              data\r\n            });\r\n          }\r\n          this.snack.open(`${status}`, 'OK', {\r\n            duration: 4000,\r\n            verticalPosition: 'top',\r\n            horizontalPosition: 'right'\r\n          });\r\n        }\r\n      }, error => {\r\n        console.log('error resp :: ', error);\r\n        this.errorStatus = status;\r\n        this.snack.open(`${error.error.message} `, 'OK', {\r\n          duration: 4000,\r\n          verticalPosition: 'top',\r\n          horizontalPosition: 'right'\r\n        });\r\n      });\r\n  }\r\n\r\n  close(data) {\r\n    // this.dialogRef.close();\r\n    data.recordStatus = this.statusUpdate\r\n    this.dialogRef.close({\r\n      message: 'Confirm',\r\n      data,\r\n      recordStatus:this.status\r\n    });\r\n    //  console.log(\"conf data\", data);\r\n  }\r\n  getProfileImage(customerId) {\r\n    this.apiService.getProfileDetails(customerId)\r\n      .subscribe((data: any) => {\r\n        // console.log(data);\r\n        // this.profileData = data;\r\n        // console.log(data.profileImage); \r\n\r\n        if (data.profileImage != null) {\r\n          //let objectURL = 'data:image/jpeg;base64,' + data.profileImage.fileData;\r\n          let objectURL = data.profileImage.fileUrl;\r\n          this.image = this.sanitizer.bypassSecurityTrustUrl(objectURL)\r\n        }\r\n        // console.log(this.image,\"Profile Data\");\r\n        // console.log(this.profileData.customerName,\"Profile Data\");\r\n        // const blob = base64StringToBlob(this.profileData.fileData, contentType);\r\n        // console.log(blob);\r\n      }, (error: any) => {\r\n        // console.log(error);\r\n      });\r\n  }\r\n  fetchSignatureDetails(customerId) {\r\n    console.log(\"inside fetchSignatureDetails method\");\r\n    // this.apiService.fetchSignatureInfo(customerId)\r\n    // .subscribe((data:any) => {\r\n    //    console.log(data);\r\n    // },(error:any) => {\r\n    //    console.log(error);\r\n    // });\r\n    this.apiService.getSignatureDocuments(customerId)\r\n      .subscribe((data: any) => {\r\n        console.log(data);\r\n        console.log(data.length);\r\n        // this.noOFSigns = data[0].noOfSignatures;\r\n        this.noOFSigns = data.length;\r\n        this.signatureDetails_array = data;\r\n      }, (error: any) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n  openEditScreen(screen,data){\r\n    this.status = \"UNDER_PROCESS\"\r\n    this.updateApplicationStatus(this.dataResponse, \"UNDER_PROCESS\",true)\r\n    const dialogRef = this.dialog.open(screen, {\r\n      panelClass: 'full-width-dialog',\r\n      data: data,\r\n      width: '80%',\r\n      disableClose: true\r\n    });\r\n    dialogRef.afterClosed().subscribe((submit) => {\r\n      console.log(submit);\r\n      this.status = submit.status\r\n      if (submit.status == 'INITIATED') {\r\n        this.updateApplicationStatus(this.dataResponse, \"INITIATED\",true)\r\n        if(!submit.screen){\r\n        Object.assign(data,submit.resp)\r\n        }\r\n        if(submit.screen == 'documentUpload'){\r\n          this.getCustomerDocumentsDetails(this.customerId)\r\n        }\r\n        if(submit.screen == \"signatureUpload\"){\r\n          this.fetchSignatureDetails(this.customerId)\r\n        }\r\n      }\r\n      this.cdr.markForCheck();\r\n      this.cdr.detectChanges();\r\n    })\r\n  }\r\n  editPrimaryInfo() {\r\n this.openEditScreen(UpdatePrimaryInfoComponent,this.dataResponse.dataResp)\r\n  }\r\n  editContactInfo() {\r\nthis.openEditScreen(UpdateContactInfoComponent,this.userAddress_array)\r\n  }\r\n  editProofOfIdentity() {\r\nthis.openEditScreen(UpdateProofOfIdentityComponent,this.proofDoc_array)\r\n  }\r\n  editAdditionalInfo() {\r\nthis.openEditScreen(UpdateAdditionalInfoComponent,this.dataResponse.dataResp.customerAdditionalInfo)\r\n  }\r\n  editMandateInfo() {\r\nthis.openEditScreen(UpdateMandateInfoComponent,this.signatureDetails_array)\r\n  }\r\n}","<form>\r\n\r\n    <div fxLayoutAlign=\"center\">\r\n\r\n        <mat-spinner *ngIf=\"loading\"></mat-spinner>\r\n    </div>\r\n\r\n    <div fxLayout=\"column wrap\">\r\n        <div class=\"content\">\r\n            <div fxLayout=\"row\" fxLayoutAlign=\"end\">\r\n                <div>\r\n                    <mat-icon class=\"closeIcon\" (click)=\"close(dataResponse)\">\r\n                        close</mat-icon>\r\n                </div>\r\n            </div>\r\n            <!--img row-->\r\n            <div class=\"boxing\"> \r\n            <div class=\"main\">\r\n                <div class=\"createdBy\"   fxLayout=\"row end\">\r\n                    <div class=\"creater\"  fxLayout=\"column\" >\r\n                     <span class=\"word1\"  *ngFor=\"let creater of nameCreater;\">{{creater}}</span>               \r\n                    </div>\r\n                    <div fxLayout=\"column\" class=\"totalMarin\">\r\n                       <div class=\"parentCreater\" fxLayout=\"row\">              \r\n                          \r\n                          <img  class=\"img1\" src=\"assets/images/face-7.jpg\" alt=\"\"\r\n                                >&nbsp;\r\n                                <div>\r\n                                   <span class=\"headName\">{{dataResponse.dataResp.createdByInfo?.createdBy}}\r\n                                   </span><br>\r\n                                   <span class=\"idSize\">EID #{{dataResponse.dataResp.createdByInfo?.creatorId}}</span>\r\n                                </div>\r\n          \r\n                    </div>\r\n                    <div fxLayout=\"row\" class=\"setSize\">\r\n                       <mat-icon class=\"iconColor\" >phone                    \r\n                       </mat-icon>&nbsp;&nbsp;&nbsp;\r\n                       <span class=\"mobileNo\">\r\n                                     {{dataResponse.dataResp.createdByInfo?.mobile}}\r\n                       </span>                 \r\n                    </div>\r\n                    <div fxLayout=\"row\" class=\"setSize\">                \r\n                       <mat-icon class=\"iconColor\"  > mail_outline</mat-icon>&nbsp;&nbsp; &nbsp;\r\n                       <span class=\"email\">\r\n                          {{dataResponse.dataResp.createdByInfo?.email}}\r\n                       </span>\r\n                    </div>\r\n                    </div>          \r\n                   \r\n                 </div>\r\n                <!-- <div *ngIf=\"errorStatus == 'REJECTED' || errorStatus == 'APPROVED'\">\r\n                    <h3 style=\"text-align: center; color: red; font-weight: 600;\">Record Already {{errorStatus}}</h3>\r\n                 </div> -->\r\n                <div fxLayout=\"row\" class='imgdiv'>\r\n                    <!-- <div fxLayout=\"row\"> <img class='appimg' src='assets\\images\\personImg.png'></div> -->\r\n                    <div mat-card-avatar>\r\n                        <div fxLayout=\"row\" class=\"defaultImage\" *ngIf=\"imageUrl=='not_available'\"\r\n                            [style.background]=\"customerColorCode\">\r\n                            <h1 class=\"imageText\">{{dataResponse.dataResp.firstName | uppercase |\r\n                                slice:0:1}}{{dataResponse.dataResp.lastName | uppercase | slice:0:1}}</h1>\r\n                        </div>\r\n\r\n                        <div fxLayout=\"row\" class=\"defaultImage\" *ngIf=\"imageUrl!='not_available'\">\r\n                            <img style=\"width: 120px; height: 120px; border-radius: 50%;\" [src]=\"imageUrl\" alt=\"\"\r\n                                *ngIf=\"image!=null\">\r\n                        </div>\r\n                    </div>\r\n                </div><br><br><br><br>\r\n                <div fxLayout=\"row\" class=\"apprdiv\">\r\n                    <h2>{{dataResponse.dataResp.prefix}}&nbsp;{{dataResponse.dataResp.firstName}}&nbsp;{{dataResponse.dataResp.middleName}}&nbsp;{{dataResponse.dataResp.lastName}}\r\n                    </h2>\r\n                </div>\r\n                <!-- <div fxLayout=\"row\" fxLayoutAlign=\"center\"><h2>{{dataResponse.dataResp.firstName}} {{dataResponse.dataResp.lastName}}</h2></div> -->\r\n                <!-- end of img row-->\r\n                <!--stage 1 starts-->\r\n\r\n                <div fxLayout=\"row\" class=\"flex-container\" *ngIf=!loading>\r\n                    <div fxFlex=\"15\">\r\n                        <div class='num'>1</div>\r\n                        <div class='bordnum'>&nbsp;</div>\r\n                    </div>\r\n                    <mat-card label=\"Primary Information\" style=\"border-radius: 0px; width: 800px;\">\r\n\r\n                        <div fxLayout=\"column\" class=\"full-width\" fxLayoutAlign=\"space-around start\">\r\n                            <div class=\"full-width\" style=\"padding: 1rem 1rem;\">\r\n                                <div fxLayout=\"row\" fxLayoutAlign=\"space-between end\">\r\n                                    <h2 style=\"font-size: 18px;\">Primary Information</h2>\r\n                                <span>\r\n                                  <mat-icon class=\"editbtn\" [hidden]=\"editScreen\" (click)=\"editPrimaryInfo()\">edit</mat-icon>  \r\n                                </span>\r\n                                </div>\r\n                                \r\n                                <mat-divider class=\"divider1\">\r\n                                </mat-divider>\r\n                            </div>\r\n                            <div fxLayout=\"row wrap\" style=\"padding: 0.5rem 0;\" class=\"full-width\">\r\n\r\n                            <div fxFlex=\"100%\" fxFlex.xs=\"100%\">\r\n                            <div class=\"mat-elevation-z0\" style=\"border: 1px solid #f5f5f5;padding: 16px; width: 750px;\">       \r\n                            <div class=\"full-width\">\r\n                                <div fxLayout=\"row wrap\" class=\"full-width\">\r\n\r\n                                    <div fxFlex=\"100%\" fxFlex.xs=\"100%\" style=\"padding-bottom: 1rem;\" class=\"full-width\">\r\n                                        <div fxLayout=\"row wrap\" style=\"padding: 0.5rem;\" class=\"full-width\">\r\n                                            <!-- <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                                <mat-hint class=\"hint1\">\r\n                                                    KYC Id\r\n                                                </mat-hint>\r\n                                                <mat-card class=\"mat1\">\r\n                                                    <div>{{dataResponse.dataResp.kycReference}}</div>\r\n                                                </mat-card>\r\n                                            </div>  -->\r\n                                            <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                                <mat-hint class=\"hint1\">\r\n                                                    Customer Id\r\n                                                </mat-hint>\r\n                                                <mat-card class=\"mat1\">\r\n                                                    <div>{{dataResponse.dataResp.customerId}}</div>\r\n                                                </mat-card>\r\n                                            </div> \r\n                                            <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                                <mat-hint class=\"hint1\">\r\n                                                    Customer Status\r\n                                                </mat-hint>\r\n                                                <mat-card class=\"mat1\">\r\n                                                    <div>{{dataResponse.dataResp.custStatus}}</div>\r\n                                                </mat-card>\r\n                                            </div> \r\n                                        </div>\r\n\r\n                                                    <div fxLayout=\"row wrap\" style=\"padding: 0.5rem;\"\r\n                                                        class=\"full-width\">\r\n                                                        <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                                            <mat-hint class=\"hint1\">\r\n                                                                Prefix*\r\n                                                            </mat-hint>\r\n                                                            <mat-card class=\"mat1\">\r\n                                                                <div>{{dataResponse.dataResp.prefix}}</div>\r\n                                                            </mat-card>\r\n                                                        </div>\r\n\r\n                                                        <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                                            <mat-hint class=\"hint1\">\r\n                                                                First Name*\r\n                                                            </mat-hint>\r\n                                                            <mat-card class=\"mat1\">\r\n                                                                <div>{{dataResponse.dataResp.firstName}}</div>\r\n                                                            </mat-card>\r\n                                                        </div>\r\n\r\n                                            <div *ngIf=\"dataResponse.dataResp.middleName\" fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                                <mat-hint class=\"hint1\">\r\n                                                    Middle Name\r\n                                                </mat-hint>\r\n                                                <mat-card class=\"mat1\">\r\n                                                    <div>{{dataResponse.dataResp.middleName}}</div>\r\n                                                </mat-card>\r\n                                            </div>\r\n\r\n                                                        <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                                            <mat-hint class=\"hint1\">\r\n                                                                Last Name*\r\n                                                            </mat-hint>\r\n                                                            <mat-card class=\"mat1\">\r\n                                                                <div>{{dataResponse.dataResp.lastName}}</div>\r\n                                                            </mat-card>\r\n                                                        </div>\r\n                                                    </div>\r\n\r\n                                                    <div fxLayout=\"row wrap\" style=\"padding: 0.5rem;\"\r\n                                                        class=\"full-width\">\r\n                                                        <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                                            <mat-hint class=\"hint1\">\r\n                                                                Gender*\r\n                                                            </mat-hint>\r\n                                                            <mat-card class=\"mat1\">\r\n                                                                <div>{{dataResponse.dataResp.gender}}</div>\r\n                                                            </mat-card>\r\n                                                        </div>\r\n\r\n                                                        <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                                            <mat-hint class=\"hint1\">\r\n                                                                Date of Birth*\r\n                                                            </mat-hint>\r\n                                                            <mat-card class=\"mat1\">\r\n                                                                <div>{{dataResponse.dataResp.dateOfBirth}}</div>\r\n                                                            </mat-card>\r\n                                                        </div>\r\n\r\n                                                        <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                                            <mat-hint class=\"hint1\">\r\n                                                                Marital Status*\r\n                                                            </mat-hint>\r\n                                                            <mat-card class=\"mat1\">\r\n                                                                <div>{{dataResponse.dataResp.maritalStatus}}</div>\r\n                                                            </mat-card>\r\n                                                        </div>\r\n                                                    </div>\r\n\r\n\r\n\r\n                                                    <div fxLayout=\"row wrap\" style=\"padding: 0.5rem 0;\"\r\n                                                        class=\"full-width\">\r\n\r\n                                                        <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                                            <mat-hint class=\"hint1\">\r\n                                                                Nationality*</mat-hint>\r\n                                                            <mat-card class=\"mat1\">\r\n                                                                <div>{{dataResponse.dataResp.nationality}}</div>\r\n                                                            </mat-card>\r\n                                                        </div>\r\n\r\n\r\n                                                        <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                                            <mat-hint class=\"hint1\">\r\n                                                                Mobile Number*\r\n                                                            </mat-hint>\r\n                                                            <mat-card class=\"mat1\">\r\n                                                                <div>{{dataResponse.dataResp.phoneNumber}}</div>\r\n                                                            </mat-card>\r\n                                                        </div>\r\n\r\n                                                        <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                                            <mat-hint class=\"hint1\">\r\n                                                                Email*\r\n                                                            </mat-hint>\r\n                                                            <mat-card class=\"mat1\">\r\n                                                                <div>{{dataResponse.dataResp.primaryEmailAdress}}</div>\r\n                                                            </mat-card>\r\n                                                        </div>\r\n\r\n                                                    </div>\r\n                                                    <div fxLayout=\"row wrap\" style=\"padding: 0.5rem 0;\"\r\n                                                    class=\"full-width\">\r\n\r\n                                                    <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                                        <mat-hint class=\"hint1\">\r\n                                                            Modification No</mat-hint>\r\n                                                        <mat-card class=\"mat1\">\r\n                                                            <div>{{dataResponse.dataResp.modificationNo}}</div>\r\n                                                        </mat-card>\r\n                                                    </div>\r\n                                                    </div>\r\n                                                    \r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n\r\n\r\n\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </mat-card>\r\n                </div>\r\n\r\n                <!-- end of Stage-1 -->\r\n                <!-- Stage-2 Starts -->\r\n                <div fxLayout=\"row\" class=\"flex-container\" *ngIf=!loading>\r\n                    <div fxFlex=\"15\">\r\n                        <div class='num'>2</div>\r\n                        <div class='bordnum'>&nbsp;</div>\r\n                    </div>\r\n                    <mat-card label=\"Contact Information\" style=\"border-radius: 0px;width: 800px;\">\r\n\r\n                        <div fxLayout=\"column\" class=\"full-width\" fxLayoutAlign=\"space-around start\">\r\n                            <div class=\"full-width\" style=\"padding: 1rem;\">\r\n                                <div style=\"padding-bottom: 1rem\">\r\n                                    <div fxLayout=\"row\" fxLayoutAlign=\"space-between end\">\r\n                                        <h2 style=\"font-size: 18px;\">Contact Information</h2>                                    <span>\r\n                                      <mat-icon class=\"editbtn\" [hidden]=\"editScreen\" (click)=\"editContactInfo()\">edit</mat-icon>  \r\n                                    </span>\r\n                                    </div>\r\n                                    <mat-divider class=\"divider1\">\r\n                                    </mat-divider>\r\n                                </div>\r\n\r\n                                <div *ngFor=\"let items of userAddress_array\">\r\n                                    <div fxLayout=\"row wrap\" style=\"padding: 0.5rem 0;\" class=\"full-width\">\r\n                                        <div fxFlex=\"100%\" fxFlex.xs=\"100%\">\r\n                                            <div class=\"mat-elevation-z0\"\r\n                                                style=\"border: 1px solid #f5f5f5;padding: 16px;\">\r\n                                                <div fxLayout=\"row wrap\" style=\"padding: 0.5rem 0;\" class=\"full-width\">\r\n                                                    <div fxFlex=\"40%\" fxFlex.xs=\"50%\" style=\"padding: 0.5rem 0.5rem;\">\r\n                                                        <h2 style=\"font-size: 16px;\">{{items.addressType}}</h2>\r\n                                                    </div>\r\n                                                    <!-- <div fxFlex=\"40%\" fxFlex.xs=\"50%\" style=\"padding: 0.5rem 0.5rem;\">\r\n                                                <h2 style=\"font-size: 16px;\">Mailing Address</h2>\r\n                                            </div> -->\r\n                                                </div>\r\n                                                <div fxLayout=\"row wrap\" style=\"padding: 0.5rem 0;\" class=\"full-width\">\r\n                                                    <div fxFlex=\"50%\" fxFlex.xs=\"100%\">\r\n                                                        <mat-hint class=\"hint1\">\r\n                                                            Address Line 1*\r\n                                                        </mat-hint>\r\n                                                        <mat-card class=\"mat1\">\r\n                                                            <div>{{items.address1}}</div>\r\n                                                        </mat-card>\r\n                                                    </div>\r\n                                                    <div fxFlex=\"50%\" fxFlex.xs=\"100%\">\r\n                                                        <mat-hint class=\"hint1\">\r\n                                                            Address Line 2*\r\n                                                        </mat-hint>\r\n                                                        <mat-card class=\"mat1\">\r\n                                                            <div>{{items.address2}}</div>\r\n                                                        </mat-card>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div fxLayout=\"row wrap\" style=\"padding: 0.5rem 0;\" class=\"full-width\">\r\n                                                    <div fxFlex=\"25%\" fxFlex.xs=\"100%\">\r\n                                                        <mat-hint class=\"hint1\">\r\n                                                            Country*\r\n                                                        </mat-hint>\r\n                                                        <mat-card class=\"mat1\">\r\n                                                            <div>{{items.country}}</div>\r\n                                                        </mat-card>\r\n                                                    </div>\r\n                                                    <div fxFlex=\"25%\" fxFlex.xs=\"100%\">\r\n                                                        <mat-hint class=\"hint1\">\r\n                                                            State*\r\n                                                        </mat-hint>\r\n                                                        <mat-card class=\"mat1\">\r\n                                                            <div>{{items.state}}</div>\r\n                                                        </mat-card>\r\n                                                    </div>\r\n                                                    <div fxFlex=\"25%\" fxFlex.xs=\"100%\">\r\n                                                        <mat-hint class=\"hint1\">\r\n                                                            City*\r\n                                                        </mat-hint>\r\n                                                        <mat-card class=\"mat1\">\r\n                                                            <div>{{items.city}}</div>\r\n                                                        </mat-card>\r\n                                                    </div>\r\n                                                    <div fxFlex=\"25%\" fxFlex.xs=\"100%\">\r\n                                                        <mat-hint class=\"hint1\">\r\n                                                            Zipcode*\r\n                                                        </mat-hint>\r\n                                                        <mat-card class=\"mat1\">\r\n                                                            <div>{{items.zipCode}}</div>\r\n                                                        </mat-card>\r\n                                                    </div>\r\n\r\n                                                    <div fxFlex=\"25%\" fxFlex.xs=\"100%\">\r\n                                                        <mat-hint class=\"hint1\">\r\n                                                            Residence Type*\r\n                                                        </mat-hint>\r\n                                                        <mat-card class=\"mat1\">\r\n                                                            <div>{{items.residenceType}}</div>\r\n                                                        </mat-card>\r\n                                                    </div>\r\n                                                </div>\r\n\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </mat-card>\r\n                </div><br />\r\n                <!-- end of Stage-2 -->\r\n                <!-- Stage-3 Starts -->\r\n\r\n                <div fxLayout=\"row\" class=\"flex-container\" *ngIf=!loading>\r\n                    <div fxFlex=\"15\">\r\n                        <div class='num'>3</div>\r\n                        <div class='bordnum'>&nbsp;</div>\r\n                    </div>\r\n                    <mat-card label=\"Proof Of Identity\" style=\"border-radius: 0px;width: 800px;\">\r\n                        <div class=\"full-width\" style=\"padding: 1rem;\">\r\n                            <div style=\"padding-bottom: 1rem\">\r\n                                <div fxLayout=\"row\" fxLayoutAlign=\"space-between end\">\r\n                                    <h2 style=\"font-size: 18px;\">Proof Of Identity</h2>\r\n                                    <span>\r\n                                  <mat-icon class=\"editbtn\" [hidden]=\"editScreen\" (click)=\"editProofOfIdentity()\">edit</mat-icon>  \r\n                                </span>\r\n                                </div>\r\n                                <mat-divider class=\"divider1\"></mat-divider>\r\n                            </div>\r\n                            <div>\r\n                                <div style=\"padding: 1rem 0;\">\r\n                                    <div class=\"mat-elevation-z0\" style=\"border: 1px solid #f5f5f5;padding: 16px;\">\r\n                                        <small *ngIf=\"custOtherDoc_array == null\" style=\"color: grey;\">No Data\r\n                                            Found</small>\r\n                                        <div *ngIf=\"custOtherDoc_array != null && custOtherDoc_array?.length > 0\">\r\n                                            <!-- <div fxLayout=\"row wrap\" style=\"padding: 0.5rem 0;\" class=\"full-width\">\r\n                                                <div fxFlex=\"40%\" fxFlex.xs=\"50%\" style=\"padding: 0.5rem 0.5rem;\">\r\n                                                    <h2 style=\"font-size: 16px;\">Passport Details</h2>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div *ngFor=\"let items of custIdProofs_array\" style=\"padding: 0.5rem 0;\"\r\n                                                class=\"full-width\">\r\n                                                <div *ngIf=\"items.expiryDate\">\r\n\r\n                                                    <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                                        <mat-hint class=\"hint1\">\r\n                                                            Passport Number*\r\n                                                        </mat-hint>\r\n                                                        <mat-card class=\"mat1\">\r\n                                                            <div>{{items.idNumber}}</div>\r\n                                                        </mat-card>\r\n                                                    </div>\r\n                                                    <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                                        <mat-hint class=\"hint1\">\r\n                                                            Date of Issue*\r\n                                                        </mat-hint>\r\n                                                        <mat-card class=\"mat1\">\r\n                                                            <div>\r\n                                                                <div>{{items.issueDate}}</div>\r\n                                                            </div>\r\n                                                        </mat-card>\r\n                                                    </div>\r\n                                                    <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                                        <mat-hint class=\"hint1\">\r\n                                                            Date of Expiry*\r\n                                                        </mat-hint>\r\n                                                        <mat-card class=\"mat1\">\r\n                                                            <div>\r\n                                                                <div fxLayout=\"row wrap\" style=\"margin-top: -5px;\"\r\n                                                                    class=\"full-width\">\r\n                                                                    <div>{{items.expiryDate}}</div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </mat-card>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div> -->\r\n                                            <div *ngFor=\"let items of custOtherDoc_array\" class=\"full-width\">\r\n                                                <!-- <div *ngIf=\"!items.expiryDate\"> -->\r\n                                                <!-- <div *ngIf=\"items.idNumber && items.idType != null \"> -->\r\n                                                <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                                    <mat-hint class=\"hint1\">\r\n                                                        Document type*\r\n                                                    </mat-hint>\r\n                                                    <mat-card class=\"mat1\">\r\n                                                        <div>{{items.documentName}}</div>\r\n                                                    </mat-card>\r\n                                                </div>\r\n                                                <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                                    <!-- <mat-hint class=\"hint1\">\r\n                                                                Document Name*\r\n                                                            </mat-hint> -->\r\n                                                    <!-- <mat-card > -->\r\n                                                    <div style=\"text-align: center;\">\r\n\r\n                                                        <img class=\"formImg2\" required [src]=\"items.fileUrl\" alt=\"\">\r\n                                                        <div>{{items.fileName}}</div>\r\n                                                    </div>\r\n                                                    <!-- </mat-card> -->\r\n                                                </div>\r\n                                                <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                                    <!-- <mat-hint class=\"hint1\">\r\n                                                                Download File*\r\n                                                            </mat-hint> -->\r\n                                                    <!-- <mat-card class=\"mat1\"> -->\r\n                                                    <div style=\"margin-top: 35px;\">\r\n                                                        <a style=\"color:#4A56E2;\r\n                                                                    text-decoration: underline; \"\r\n                                                            href=\"{{items.fileUrl}}\" download>Download </a>\r\n                                                    </div>\r\n                                                    <!-- </mat-card> -->\r\n                                                </div>\r\n                                                <!-- </div> -->\r\n                                                <!-- </div> -->\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n\r\n                    </mat-card>\r\n                </div>\r\n                <!-- end of stage 3 -->\r\n                <!-- stage-4 Starts -->\r\n\r\n                <div fxLayout=\"row\" class=\"flex-container\" *ngIf=!loading>\r\n                    <div fxFlex=\"15\">\r\n                        <div class='num'>4</div>\r\n                        <div class='bordnum'>&nbsp;</div>\r\n                    </div>\r\n                    <mat-card label=\"Other Information\" style=\"border-radius: 0px;width: 800px;\">\r\n\r\n                        <div class=\"full-width\" style=\"padding: 1rem;\">\r\n                            <div style=\"padding-bottom: 1rem\">\r\n                                <div fxLayout=\"row\" fxLayoutAlign=\"space-between end\">\r\n                                    <h2 style=\"font-size: 18px;\">Additional Information</h2>\r\n                                    <span>\r\n                                  <mat-icon class=\"editbtn\" [hidden]=\"editScreen\" (click)=\"editAdditionalInfo()\">edit</mat-icon>  \r\n                                </span>\r\n                                </div>\r\n                                <mat-divider class=\"divider1\">\r\n                                </mat-divider>\r\n                            </div>\r\n                            <div>\r\n                                <div style=\"padding: 1rem 0;\">\r\n                                    <div fxLayout=\"row wrap\" class=\"full-width\">\r\n                                        <div fxFlex=\"59%\" fxFlex.xs=\"100%\" class=\"mat-elevation-z0\"\r\n                                            style=\"border: 1px solid #f5f5f5;padding: 16px;\">\r\n                                            <div fxLayout=\"row wrap\" style=\"padding: 0.5rem 0;\" class=\"full-width\">\r\n                                                <div fxFlex=\"40%\" fxFlex.xs=\"50%\" style=\"padding: 0.5rem 0.5rem;\">\r\n                                                    <h2 style=\"font-size: 16px;\">Employment Information\r\n                                                    </h2>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div fxLayout=\"row wrap\" style=\"padding: 0.5rem 0;\" class=\"full-width\">\r\n                                                <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                                    <mat-hint class=\"hint1\">\r\n                                                        Employment Type*\r\n                                                    </mat-hint>\r\n                                                    <mat-card class=\"mat1\">\r\n                                                        <div>\r\n                                                            {{dataResponse.dataResp.customerAdditionalInfo.employmentType}}\r\n                                                        </div>\r\n                                                    </mat-card>\r\n                                                </div>\r\n                                                <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                                    <mat-hint class=\"hint1\">\r\n                                                        Employer Name*\r\n                                                    </mat-hint>\r\n                                                    <mat-card class=\"mat1\">\r\n                                                        <div>\r\n                                                            {{dataResponse.dataResp.customerAdditionalInfo.employerName}}\r\n                                                        </div>\r\n                                                    </mat-card>\r\n                                                </div>\r\n                                                <div *ngIf=\"dataResponse.dataResp.customerAdditionalInfo.otherEmployerName\"\r\n                                                    fxFlex=\"40%\" fxFlex.xs=\"100%\">\r\n                                                    <mat-hint class=\"hint1\">\r\n                                                        Other Employer name*\r\n                                                    </mat-hint>\r\n                                                    <mat-card class=\"mat1\">\r\n                                                        {{dataResponse.dataResp.customerAdditionalInfo.otherEmployerName}}\r\n                                                    </mat-card>\r\n                                                </div>\r\n                                                <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                                    <mat-hint class=\"hint1\">\r\n                                                        Salary*\r\n                                                    </mat-hint>\r\n                                                    <mat-card class=\"mat1\">\r\n                                                        <div>{{dataResponse.dataResp.customerAdditionalInfo.salary}}\r\n                                                        </div>\r\n                                                    </mat-card>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>&nbsp;&nbsp;&nbsp;&nbsp;\r\n                                        <div fxFlex=\"39%\" fxFlex.xs=\"100%\" class=\"mat-elevation-z0\"\r\n                                            style=\"border: 1px solid #f5f5f5;padding: 16px;\">\r\n                                            <div fxLayout=\"row wrap\" style=\"padding: 0.5rem 0;\" class=\"full-width\">\r\n                                                <div fxFlex=\"40%\" fxFlex.xs=\"50%\" style=\"padding: 0.5rem 0.5rem;\">\r\n                                                    <h2 style=\"font-size: 16px;\">KYC Information</h2>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div fxLayout=\"row wrap\" style=\"padding: 0.5rem 0;\" class=\"full-width\">\r\n                                                <div fxFlex=\"50%\" fxFlex.xs=\"100%\">\r\n                                                    <mat-hint class=\"hint1\">\r\n                                                        KYC Reference*\r\n                                                    </mat-hint>\r\n                                                    <mat-card class=\"mat1\">\r\n                                                        <div>\r\n                                                            {{dataResponse.dataResp.customerAdditionalInfo.kycReference}}\r\n                                                        </div>\r\n                                                    </mat-card>\r\n                                                </div>\r\n                                                <div fxFlex=\"50%\" fxFlex.xs=\"100%\">\r\n                                                    <mat-hint class=\"hint1\">\r\n                                                        KYC Status*\r\n                                                    </mat-hint>\r\n                                                    <mat-card class=\"mat1\" style=\"width:98%\">\r\n                                                        <div class=\"mat11\">\r\n                                                            {{kycStatus}}\r\n                                                        </div>\r\n                                                    </mat-card>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <!--<div style=\"padding: 1rem 0;\">\r\n                                <div fxFlex=\"100%\" fxFlex.xs=\"100%\" class=\"mat-elevation-z0\"\r\n                                    style=\"border: 1px solid #f5f5f5;padding: 16px;\">\r\n\r\n                                    <div style=\"padding: 1rem 0;\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n                                        <div fxFlex=\"15%\" fxFlex.xs=\"50%\">\r\n                                            <h2 style=\"font-size: 16px;\">Document Upload</h2>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div>\r\n                                        <small *ngIf=\"custOtherDoc_array == null\" style=\"color: grey;\">No Documents\r\n                                            Available</small>\r\n                                        <div *ngIf=\"custOtherDoc_array != null && custOtherDoc_array?.length > 0\">\r\n                                            <div>\r\n                                                <div>\r\n                                                    <div>\r\n                                                        <div *ngFor=\"let docs of custOtherDoc_array\" fxLayout=\"row wrap\"\r\n                                                            style=\"padding: 0.5rem 0;\" class=\"full-width\">\r\n                                                            <div fxFlex=\"23%\" fxFlex.xs=\"100%\">\r\n                                                                <mat-hint class=\"hint1\">\r\n                                                                    Document Type*\r\n                                                                </mat-hint>\r\n                                                                <mat-card class=\"mat1\">\r\n                                                                    <div>{{docs.documentName}}</div>\r\n                                                                </mat-card>\r\n                                                            </div>\r\n                                                            <div fxFlex=\"73%\" fxFlex.xs=\"100%\">\r\n                                                                <mat-hint class=\"hint1\">\r\n                                                                    Document Name*\r\n                                                                </mat-hint>\r\n                                                                <mat-card class=\"mat1\">\r\n                                                                    <div>{{docs.fileName}}</div>\r\n                                                                </mat-card>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>-->\r\n                        </div>\r\n\r\n                    </mat-card>\r\n                </div>\r\n\r\n                <!-- end of stage 4 -->\r\n                <!-- stage-5 Starts -->\r\n                <div fxLayout=\"row\" class=\"flex-container\" *ngIf=!loading>\r\n                    <div fxFlex=\"15\">\r\n                        <div class='num'>5</div>\r\n                        <div class='bordnum'>&nbsp;</div>\r\n                    </div>\r\n                    <mat-card label=\"Other Information\" style=\"border-radius: 0px;width: 800px;\">\r\n\r\n                        <div class=\"full-width\" style=\"padding: 1rem;\">\r\n                            <div style=\"padding-bottom: 1rem\">\r\n                                <div fxLayout=\"row\" fxLayoutAlign=\"space-between end\">\r\n                                    <h2 style=\"font-size: 18px;\">Mandate Information</h2>\r\n                                    <span>\r\n                                  <mat-icon class=\"editbtn\" [hidden]=\"editScreen\" (click)=\"editMandateInfo()\">edit</mat-icon>  \r\n                                </span>\r\n                                </div>\r\n                                <mat-divider class=\"divider1\">\r\n                                </mat-divider>\r\n                            </div>\r\n                            <div>\r\n                                <div style=\"padding: 1rem 0;\">\r\n                                    <div fxLayout=\"row wrap\" class=\"full-width\">\r\n                                        <div fxFlex=\"59%\" fxFlex.xs=\"100%\" class=\"mat-elevation-z0\"\r\n                                            style=\"border: 1px solid #f5f5f5;padding: 16px;\">\r\n                                            <div fxLayout=\"row wrap\" style=\"padding: 0.5rem 0;\" class=\"full-width\">\r\n\r\n                                            </div>\r\n                                            <div fxLayout=\"row wrap\" style=\"padding: 0.5rem 0;\" class=\"full-width\">\r\n                                                <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                                    <mat-hint class=\"hint1\">\r\n                                                        No of Signatures*\r\n                                                    </mat-hint>\r\n                                                    <mat-card class=\"mat1\">\r\n                                                        <div>\r\n                                                            {{noOFSigns}}\r\n                                                        </div>\r\n                                                    </mat-card>\r\n                                                </div>\r\n\r\n                                            </div>\r\n                                        </div>&nbsp;&nbsp;&nbsp;&nbsp;\r\n\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div style=\"padding: 1rem 0;\">\r\n                                <div fxFlex=\"100%\" fxFlex.xs=\"100%\" class=\"mat-elevation-z0\"\r\n                                    style=\"border: 1px solid #f5f5f5;padding: 16px;\">\r\n\r\n                                    <div style=\"padding: 1rem 0;\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n                                        <div fxFlex=\"15%\" fxFlex.xs=\"50%\">\r\n                                            <h2 style=\"font-size: 16px;\">Signatures</h2>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div>\r\n                                        <small *ngIf=\"signatureDetails_array == null\" style=\"color: grey;\">No Signatures\r\n                                            Available\r\n                                        </small>\r\n                                        <div\r\n                                            *ngIf=\"signatureDetails_array != null && signatureDetails_array?.length > 0\">\r\n                                            <div>\r\n                                                <div>\r\n                                                    <div>\r\n                                                        <div *ngFor=\"let signs of signatureDetails_array\"\r\n                                                            fxLayout=\"row wrap\" style=\"padding: 0.5rem 0;\"\r\n                                                            class=\"full-width\">\r\n                                                            <div>\r\n                                                                {{signs.signatureType}}\r\n                                                            </div>\r\n                                                            <div class=\"imgCard\">\r\n                                                                <div *ngIf=\"signs.fileUrl == null; else showAvatar\">\r\n                                                                    <img class=\"formImg\"\r\n                                                                        [src]=\"'assets/images/no-image.jpg'\"\r\n                                                                        alt=\"No Image\">\r\n                                                                </div>\r\n                                                                <ng-template #showAvatar>\r\n                                                                    <img class=\"formImg\" required [src]=\"signs.fileUrl\"\r\n                                                                        alt=\"\">\r\n                                                                </ng-template>\r\n                                                            </div>\r\n                                                            <!-- <div fxFlex=\"73%\" fxFlex.xs=\"100%\">\r\n                                                                <mat-hint class=\"hint1\">\r\n                                                                    Signature Document Name*\r\n                                                                </mat-hint>\r\n                                                                <mat-card class=\"mat1\">\r\n                                                                    <div>{{signs.fileName}}</div>\r\n                                                                </mat-card>\r\n                                                            </div> -->\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </mat-card>\r\n                </div>\r\n                <!-- end of stage 5 -->\r\n\r\n                <div *ngIf=\"!loading\">\r\n                    <div fxLayout=\"row\" fxLayoutAlign=\"end\" fxLayoutGap=\"20px\">\r\n                        <!-- <div><button type=\"button\" class=\"cancelbtn\" (click)=\"close(dataResponse)\">Cancel</button></div> -->\r\n                        <!-- <div fxLayout=\"row\" fxLayoutGap=\"40px\"> -->\r\n\r\n                        <div><button type=\"button\" [hidden]=\"rejectedStatus\"\r\n                                [ngClass]=\"{'disabledbtn':rejectedStatus,'rejectbtn': !rejectedStatus }\"\r\n                                (click)=\"updateApplicationStatus(dataResponse,'REJECTED')\">Reject</button>\r\n                        </div>\r\n                        <div><button type=\"button\" [hidden]=\"approvedStatus\"\r\n                                [ngClass]=\"{'disabledbtn':approvedStatus,'approvebtn': !approvedStatus }\"\r\n                                (click)=\"updateApplicationStatus(dataResponse,'APPROVED')\">Approve</button>\r\n                        </div>\r\n                        <!-- <div><button type=\"button\" class=\"editbtn\"  [hidden]=\"editScreen\" (click)=\"goToCustOnboarding()\">Edit</button>\r\n                        </div> -->\r\n                        <!-- </div> -->\r\n                    </div>\r\n                    <!-- <div><button type=\"button\" class=\"editbtn\"  [hidden]=\"editScreen\"\r\n                        (click)=\"goToCustOnboarding()\">Edit</button>\r\n                </div> -->\r\n                    <!-- </div> -->\r\n\r\n                </div>\r\n                <br>\r\n            </div>\r\n        </div>\r\n      </div>  \r\n    </div>\r\n</form>","import { ChangeDetectorRef, Component, Inject, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { AppLoaderService } from 'app/shared/services/app-loader/app-loader.service';\r\nimport { FundingStageService } from 'app/shared/services/funding-stage.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { AccountService } from 'app/views/home/account.service';\r\nimport { TasksummaryService } from '../../tasksummary.service';\r\n@Component({\r\n  selector: 'app-funding-details-update',\r\n  templateUrl: './funding-details-update.component.html',\r\n  styleUrls: ['./funding-details-update.component.scss']\r\n})\r\nexport class FundingDetailsUpdateComponent implements OnInit {\r\n  fundStageUpdateForm: FormGroup;\r\n  accountId: any;\r\n  disableFundByAccount: boolean;\r\n  disablechequeNumber: boolean;\r\n  disabletellerTrxnRefNo: boolean;\r\n  disabletellerTrxnStatus: boolean;\r\n  accountInfo: any;\r\n  \r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public data,\r\n    public dialogRef: MatDialogRef<FundingDetailsUpdateComponent>,\r\n    private formBuilder: FormBuilder,\r\n    private cdr: ChangeDetectorRef,\r\n    private accountService: AccountService,\r\n    private ls: LocalStoreService,\r\n    private fundingStageService: FundingStageService,\r\n    private snack: MatSnackBar,\r\n    private apiService: ApiService,\r\n    private loader: AppLoaderService,\r\n    private tasksummaryService: TasksummaryService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    console.log(this.data);\r\n    this.accountId = this.ls.getItem('accountId')\r\n    this.accountInfo = this.ls.getItem('accountDetails')\r\n    if (this.data) {\r\n      if (this.data.fundBy == \"Fund Transfer\") {\r\n        this.disableFundByAccount = true;\r\n        this.disabletellerTrxnStatus = true;\r\n        this.disabletellerTrxnRefNo = false;\r\n        this.disablechequeNumber = false;\r\n      }\r\n      if (this.data.fundBy == \"Cheque\") {\r\n        this.disableFundByAccount = true;\r\n        this.disablechequeNumber = true;\r\n        this.disabletellerTrxnRefNo = false;\r\n        this.disabletellerTrxnStatus = false;\r\n      }\r\n      if (this.data.fundBy == \"Cash\") {\r\n        this.disabletellerTrxnRefNo = true;\r\n        this.disableFundByAccount = false;\r\n        this.disablechequeNumber = false;\r\n        this.disabletellerTrxnStatus = false;\r\n      }\r\n      this.buildFundFormGroup(this.data);\r\n    }\r\n    else {\r\n      this.buildFundFormGroup()\r\n    }\r\n  }\r\n  buildFundFormGroup(data?) {\r\n    this.fundStageUpdateForm = this.formBuilder.group({\r\n      fundId: [data ? data.fundId : ''],\r\n      fundBy: [data ? data.fundBy : '', [Validators.required]],\r\n      amount: [data ? data.amount : ''],\r\n      tellerTrxnRefNo: [data ? data.tellerTrxnRefNo : ''],\r\n      fundByAccount: [data ? data.fundByAccount : ''],\r\n      chequeNumber: [data ? data.chequeNumber : '', [Validators.maxLength]],\r\n      branchCode: [data ? data.branchCode : ''],\r\n      tellerTrxnStatus: [data ? data.tellerTrxnStatus : ''],\r\n      createdBy: [data ? data.createdBy : ''],\r\n      createdTime: [data ? data.createdTime : ''],\r\n      modifiedBy: [data ? data.modifiedBy : ''],\r\n      modifiedTime: [data ? data.modifiedTime : ''],\r\n      accountId: [this.accountId],\r\n    });\r\n    if (data?.fundByAccount) {\r\n      this.fetchAccountBalance(data.fundByAccount);\r\n    }\r\n  }\r\n  fetchAccountBalance(accountId, isForce?: boolean) {\r\n    this.loader.open();\r\n    this.apiService.fetchAccountBalanceByAccountId(accountId)\r\n      .subscribe(res => {\r\n        console.log(\"RES\", res);\r\n        this.accountInfo = res;\r\n        if (!isForce) {\r\n          if (this.fundStageUpdateForm.get('fundBy').value == \"Fund Transfer\") {\r\n            this.fundStageUpdateForm.get('fundByAccount').patchValue(res.accountId);\r\n            this.fundStageUpdateForm.get('branchCode').patchValue(res.branchCode);\r\n          }\r\n        }\r\n        this.loader.close();\r\n        this.snack.open('Fetched!', 'OK', {\r\n          duration: 4000,\r\n          verticalPosition: 'top',\r\n          horizontalPosition: 'right'\r\n        });\r\n      }, (err: any) => {\r\n        this.loader.close();\r\n        this.snack.open('Invalid AccountId!', 'OK', {\r\n          duration: 4000,\r\n          verticalPosition: 'top',\r\n          horizontalPosition: 'right'\r\n        });\r\n      })\r\n  }\r\n  selected(item) {\r\n    console.log(item);\r\n    if (item == \"Fund Transfer\") {\r\n      this.disableFundByAccount = true;\r\n      this.disabletellerTrxnStatus = true;\r\n      this.disabletellerTrxnRefNo = false;\r\n      this.disablechequeNumber = false;\r\n      if (this.accountInfo != null) {\r\n        this.fundStageUpdateForm.get('branchCode').patchValue(this.accountInfo.branchCode);\r\n        this.fundStageUpdateForm.get('fundByAccount').patchValue(this.accountInfo.accountId);\r\n      }\r\n      this.fundStageUpdateForm.get('chequeNumber').patchValue(\"\");\r\n      this.fundStageUpdateForm.get('tellerTrxnRefNo').patchValue(\"\");\r\n      this.fundStageUpdateForm.get('amount').patchValue(\"\");\r\n      this.fundStageUpdateForm.get('fundByAccount').patchValue(\"\");\r\n    }\r\n    if (item == \"Cheque\") {\r\n      this.disableFundByAccount = true;\r\n      this.disablechequeNumber = true;\r\n      this.disabletellerTrxnRefNo = false;\r\n      this.disabletellerTrxnStatus = false;\r\n      if (this.accountInfo != null) {\r\n        this.fundStageUpdateForm.get('fundByAccount').patchValue(this.accountInfo.accountId);\r\n      }\r\n      this.fundStageUpdateForm.get('branchCode').patchValue(\"\");\r\n      this.fundStageUpdateForm.get('tellerTrxnRefNo').patchValue(\"\");\r\n      this.fundStageUpdateForm.get('amount').patchValue(\"\");\r\n      this.fundStageUpdateForm.get('fundByAccount').patchValue(\"\");\r\n    }\r\n    if (item == \"Cash\") {\r\n      this.disabletellerTrxnRefNo = true;\r\n      this.disableFundByAccount = false;\r\n      this.disablechequeNumber = false;\r\n      this.disabletellerTrxnStatus = false;\r\n      this.fundStageUpdateForm.get('branchCode').patchValue(\"\");\r\n      this.fundStageUpdateForm.get('chequeNumber').patchValue(\"\");\r\n      this.fundStageUpdateForm.get('amount').patchValue(\"\");\r\n      this.fundStageUpdateForm.get('fundByAccount').patchValue(\"\");\r\n    }\r\n    this.fundStageUpdateForm.get('fundBy').setValue(item);\r\n  }\r\n  onSubmit(fundStageUpdateForm) {\r\n\r\n    fundStageUpdateForm.accountId = this.accountId;\r\n    this.fundingStageService.saveOrUpdateFundStageDetails(fundStageUpdateForm)\r\n      .subscribe(fundResp => {\r\n        if (fundResp.accountId != null || fundResp.accountId != '' || fundResp.accountId != \"\") {\r\n          this.fundingStageService.isSubmittedResp(true);\r\n          this.snack.open('Funding Details Updated!', 'OK', {\r\n            duration: 4000,\r\n            verticalPosition: 'top',\r\n            horizontalPosition: 'right'\r\n          });\r\n              this.dialogRef.close({\r\n                status: 'BACKLOG'\r\n              })\r\n          this.cdr.markForCheck();\r\n        } else {\r\n          this.snack.open('Not able to connect to server!', 'INTERNAL SERVER ERROR', {\r\n            duration: 4000,\r\n            verticalPosition: 'top',\r\n            horizontalPosition: 'right'\r\n          });\r\n          console.log(\"500 error\")\r\n        }\r\n      }, error => {\r\n        console.log(\"error :: \", error);\r\n        this.snack.open('Not able to connect to server!', 'INTERNAL SERVER ERROR', {\r\n          duration: 4000,\r\n          verticalPosition: 'top',\r\n          horizontalPosition: 'right'\r\n        });\r\n      });\r\n  }\r\n  _keyPress(event: any) {\r\n    console.log(\"PRessed\", event);\r\n    const pattern = /[0-9]/;\r\n    let inputChar = String.fromCharCode(event.charCode);\r\n    if (!pattern.test(inputChar)) {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n  onChangeEvent(accountId: any) {\r\n    console.log(\"Onchange event\", accountId);\r\n    this.fetchAccountBalance(accountId);\r\n  }\r\n  close() {\r\n    this.dialogRef.close({\r\n      status: \"ONGOING\"\r\n    })\r\n  }\r\n}\r\n","<div fxLayout=\"row\" fxLayoutGap=\"25px\" fxLayout=\"row\" fxLayoutAlign=\"end\" class=\"contain\">\r\n    <mat-icon class=\"closeIcon\" (click)=\"close()\">close</mat-icon>\r\n</div>\r\n<h1 mat-dialog-title>Funding Details</h1>\r\n<mat-dialog-content>\r\n    <form *ngIf=\"fundStageUpdateForm\" [formGroup]=\"fundStageUpdateForm\">\r\n        <div fxLayout=\"row wrap\" class=\"full-width\">\r\n            <div fxFlex=\"33.33%\" fxFlex.xs=\"100%\" class=\"full-width\">\r\n                <mat-hint class=\"hintClass\">Fund By*</mat-hint>\r\n                <mat-card class=\"inputCard\">\r\n                    <mat-select class=\"full-width\" formControlName=\"fundBy\" placeholder=\"Fund By\"\r\n                        style=\"background-color: #FDFDFF; font-size: 16px;border: transparent;\"\r\n                        (selectionChange)=\"selected($event.value)\">\r\n                        <mat-option value=\"Cash\">Cash</mat-option>\r\n                        <mat-option value=\"Cheque\">Cheque</mat-option>\r\n                        <mat-option value=\"Fund Transfer\">Fund Transfer</mat-option>\r\n                    </mat-select>\r\n                </mat-card>\r\n                <mat-error *ngIf=\"fundStageUpdateForm.controls['fundBy'].hasError('required')\">\r\n                    Enter Fund By\r\n                </mat-error>\r\n            </div>\r\n            <div fxFlex=\"33.33%\" fxFlex.xs=\"100%\" class=\"full-width\">\r\n                <mat-hint class=\"hintClass\">Amount</mat-hint>\r\n                <mat-card class=\"inputCard\">\r\n                    <input matInput formControlName=\"amount\" placeholder=\"Amount\"\r\n                        [value]=\"fundStageUpdateForm.controls['amount'].value | removeComma\"\r\n                        (keyup)=\"validateAmount($event)\" (keypress)=_keyPress($event) maxlength=\"10\" minlength=\"0\"\r\n                        required />\r\n                </mat-card>\r\n                <mat-error *ngIf=\"fundStageUpdateForm.controls['amount'].hasError('required')\">\r\n                    Enter Amount\r\n                </mat-error>\r\n            </div>\r\n            <div *ngIf=\"disabletellerTrxnRefNo\" fxFlex=\"33.33%\" fxFlex.xs=\"100%\" class=\"full-width\">\r\n                <mat-hint class=\"hintClass\">Teller Transaction Reference Number</mat-hint>\r\n                <mat-card class=\"inputCard\">\r\n                    <input matInput formControlName=\"tellerTrxnRefNo\" (keypress)=_keyPress($event)\r\n                        placeholder=\"Teller Transaction Reference Number\" maxlength=\"10\" minlength=\"0\" />\r\n                </mat-card>\r\n                <mat-error *ngIf=\"fundStageUpdateForm.controls['tellerTrxnRefNo'].hasError('required')\">\r\n                    Enter Teller Transaction Reference Number\r\n                </mat-error>\r\n            </div>\r\n            <div *ngIf=\"disableFundByAccount\" fxFlex=\"33.33%\" fxFlex.xs=\"100%\" class=\"full-width\">\r\n                <mat-hint class=\"hintClass\">Fund By Account</mat-hint>\r\n                <mat-card class=\"inputCard\">\r\n                    <input (keypress)=\"_keyPress($event)\" (keyup)=\"keyUp($event)\" name=\"account\"\r\n                        formControlName=\"fundByAccount\" matInput placeholder=\"Fund By Account\" maxlength=\"10\"\r\n                        minlength=\"0\" (change)=\"onChangeEvent(fundStageUpdateForm.get('fundByAccount').value)\">\r\n                    <mat-icon matSuffix>search</mat-icon>\r\n                </mat-card>\r\n                <mat-hint class=\"hintClass\" *ngIf=\"accountInfo !== null\">Available Balance : {{ accountInfo?.accBalance\r\n                    | currency:accountInfo?.currency:'symbol':'4.2-2'}}</mat-hint>\r\n                <mat-error *ngIf=\"fundStageUpdateForm.get('fundByAccount').hasError('required')\">\r\n                    Fund By Account is Required!\r\n                </mat-error>\r\n            </div>\r\n            <div *ngIf=\"disabletellerTrxnStatus\" fxFlex=\"33.33%\" fxFlex.xs=\"100%\" class=\"full-width\">\r\n                <mat-hint class=\"hintClass\">Branch Code</mat-hint>\r\n                <mat-card class=\"inputCard\">\r\n                    <input matInput formControlName=\"branchCode\" appUppercaseInput placeholder=\"Branch Code\"\r\n                        maxlength=\"11\" minlength=\"0\" />\r\n                </mat-card>\r\n                <mat-error *ngIf=\"fundStageUpdateForm.controls['branchCode'].hasError('required')\">\r\n                    Enter Branch Code\r\n                </mat-error>\r\n            </div>\r\n            <div *ngIf=\"disablechequeNumber\" fxFlex=\"33.33%\" fxFlex.xs=\"100%\" class=\"full-width\">\r\n                <mat-hint class=\"hintClass\">Cheque Number</mat-hint>\r\n                <mat-card class=\"inputCard\">\r\n                    <input matInput formControlName=\"chequeNumber\" placeholder=\"Cheque Number\" maxlength=\"12\"\r\n                        minlength=\"6\" (keypress)=\"_keyPress($event)\" />\r\n                </mat-card>\r\n                <mat-error *ngIf=\"fundStageUpdateForm.controls['chequeNumber'].hasError('required')\">\r\n                    Enter Cheque Number\r\n                </mat-error>\r\n                <small *ngIf=\"chequeNoLenCheck\" style=\"color: tomato;\">\r\n                    Cheque Number should be minmum 6 digits\r\n                </small>\r\n            </div>\r\n        </div>\r\n        <mat-card *ngIf=\"actionView\">\r\n            <div>\r\n                <div>\r\n                    <button mat-raised-button id=\"referenceNumber\" color=\"primary\">\r\n                        ReferenceNumber : {{fundStageUpdateForm.value.tellerTrxnRefNo}}\r\n                    </button>\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <div>\r\n                    <button mat-raised-button id=\"status\" style=\"background-color: #1ABC9C ;\" type=\"button\">\r\n                        Branch Code : {{fundStageUpdateForm.value.tellerTrxnStatus}}\r\n                    </button>\r\n                </div>\r\n            </div>\r\n            <div fxFlex=\"33.33%\" fxFlex.xs=\"100%\" class=\"full-width\">\r\n                <mat-hint class=\"hintClass\">Amount</mat-hint>\r\n                <mat-card class=\"inputCard\">\r\n                    <span matPrefix>&nbsp;</span>\r\n                    <input matInput formControlName=\"amount\" placeholder=\"Amount\" readonly />\r\n                </mat-card>\r\n            </div>\r\n        </mat-card>\r\n    </form>\r\n\r\n</mat-dialog-content>\r\n<div fxLayout=\"row\" fxLayoutAlign=\"end\" fxLayoutGap=\"20px\">\r\n    <button type=\"button\" class=\"editbtn\" mat-raised-button [disabled]=\"fundStageUpdateForm.invalid\"\r\n        (click)=\"onSubmit(fundStageUpdateForm.value)\">Save</button>\r\n    &nbsp;&nbsp;&nbsp;\r\n    <button type=\"button\" class=\"cancelbtn\" (click)=\"close()\">\r\n        Cancel\r\n    </button>\r\n</div>","import { ChangeDetectorRef, Component, Inject, OnInit } from '@angular/core';\r\nimport { FormArray, FormBuilder, FormGroup } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { AppConfirmService } from 'app/shared/services/app-confirm/app-confirm.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport * as moment from 'moment';\r\nimport { TasksummaryService } from '../../tasksummary.service';\r\n\r\n@Component({\r\n  selector: 'app-secured-overdraft-details-update',\r\n  templateUrl: './secured-overdraft-details-update.component.html',\r\n  styleUrls: ['./secured-overdraft-details-update.component.scss']\r\n})\r\nexport class SecuredOverdraftDetailsUpdateComponent implements OnInit {\r\n\r\n  securedOverdraftUpdateForm: FormGroup;\r\n  accountId: any\r\n  onbackSpace: boolean;\r\n  issecurityValid: boolean;\r\n  finalRatevalue: number;\r\n  linkangePercent: any;\r\n  arrayCollateralType: string[];\r\n  currency: any;\r\n  showSpinner: boolean;\r\n  branchData: any;\r\n  branch: any;\r\n  showSpinn: boolean;\r\n  fileName: any;\r\n  docUrl: string;\r\n  showDelete: boolean;\r\n  loggedInUser: any;\r\n  showEditOption: boolean = false;\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public data,\r\n    public dialogRef: MatDialogRef<SecuredOverdraftDetailsUpdateComponent>,\r\n    private ls: LocalStoreService,\r\n    private formBuilder: FormBuilder,\r\n    private api: ApiService,\r\n    private snack: MatSnackBar,\r\n    private cdr: ChangeDetectorRef,\r\n    private confirmService: AppConfirmService,\r\n    private tasksummaryService: TasksummaryService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    console.log(this.data);\r\n    this.accountId = this.ls.getItem('accountId')\r\n    this.loggedInUser = this.ls.getItem('userName')\r\n    this.getCollateralType(\"collateral_type\");\r\n    this.getCurrencyDetails();\r\n    if (this.data) {\r\n      this.showEditOption = true;\r\n      this.buildSecuredOverdraftForm(this.data)\r\n      this.addFormGroup(this.data);\r\n    }\r\n    else {\r\n      this.showEditOption = false;\r\n      this.buildSecuredOverdraftForm();\r\n      this.addFormGroup();\r\n\r\n    }\r\n  }\r\n\r\n  buildSecuredOverdraftForm(data?) {\r\n    this.securedOverdraftUpdateForm = this.formBuilder.group({\r\n      collaterals: this.formBuilder.array([])\r\n    });\r\n  }\r\n  get f() { return this.securedOverdraftUpdateForm.controls; }\r\n  get c() { return this.f.collaterals as FormArray; }\r\n\r\n  addFormGroup(data?) {\r\n    const numberOfItems = data ? data.length : 1;\r\n    console.log(\"numberOfItems\", numberOfItems);\r\n    for (let i = 0; i < numberOfItems; i++) {\r\n      this.c.push(this.formBuilder.group({\r\n        id: [data[i].id],\r\n        collateralType: [data[i] ? data.collateralType : ''],\r\n        collateralCurrency: [data[i] ? data.collateralCurrency : ''],\r\n        accountId: this.accountId,\r\n        collateralValue: [data[i] ? data[i].collateralValue : ''],\r\n        attributes: [data[i] ? data[i].attributes : ''],\r\n        dimensions: [data[i] ? data[i].dimensions : ''],\r\n        securityReferenceNumber: [data[i] ? data[i].securityReferenceNumber : ''],\r\n        branchCode: [data[i] ? data[i].branchCode : ''],\r\n        availableLinkageAccount: [data[i] ? data[i].availableLinkageAccount : ''],\r\n        linkagePercentage: [data[i] ? data[i].linkagePercentage : ''],\r\n        overdraftLimitAmount: [data[i] ? data[i].overdraftLimitAmount : ''],\r\n        limitStartDate: [data[i] ? data[i].limitStartDate : ''],\r\n        limitEndDate: [data[i] ? data[i].limitEndDate : ''],\r\n        rateValue: [data[i] ? data[i].rateValue : ''],\r\n        rate: [data[i] ? data[i].rate : ''],\r\n        spread: [data[i] ? data[i].spread : ''],\r\n        finalAmount: [data[i] ? data[i].finalAmount : ''],\r\n        documentUrl: [data[i] ? data[i].documentUrl : ''],\r\n        fileName: [data[i] ? data[i].documentUrl : '']\r\n      })\r\n      );\r\n    }\r\n  }\r\n\r\n  addCFormGroup() {\r\n    this.c.push(this.formBuilder.group({\r\n      collateralType: [''],\r\n      collateralCurrency: [''],\r\n      accountId: this.accountId,\r\n      collateralValue: [''],\r\n      attributes: [''],\r\n      dimensions: [''],\r\n      securityReferenceNumber: ['',],\r\n      branchCode: [''],\r\n      availableLinkageAccount: [''],\r\n      linkagePercentage: [''],\r\n      overdraftLimitAmount: [''],\r\n      limitStartDate: [''],\r\n      limitEndDate: [''],\r\n      rateValue: [''],\r\n      rate: [''],\r\n      spread: [''],\r\n      finalAmount: [''],\r\n      documentUrl: [''],\r\n      fileName: ['']\r\n\r\n    }));\r\n  }\r\n  getCollateralType(key: string) {\r\n    this.api.getDropDownValues(key).subscribe((data) => {\r\n      this.arrayCollateralType = data;\r\n    });\r\n  }\r\n  getCurrencyDetails() {\r\n    this.api.fetchCurrencyMaintAuthRecs().subscribe(resp => {\r\n      this.currency = resp\r\n    })\r\n  }\r\n  overDraftCondition(event: any, i) {\r\n    let overDRaftValue: number = event.target.value;\r\n    console.log(overDRaftValue, this.linkangePercent);\r\n    if (overDRaftValue > this.linkangePercent) {\r\n      console.log(\"Bigger\");\r\n      this.confirmService\r\n        .confirm({ title: \"Confirm\", message: \" Overdraft Limit Amount should be less than Available Linkage Amount. Do you want to Proceed?\", ok: \"Yes\", cancel: \"No\" })\r\n        .subscribe(res => {\r\n          console.log(\"Response\", res);\r\n          if (res === true) {\r\n            this.cdr.markForCheck();\r\n          } else {\r\n            this.c.at(i).get('overdraftLimitAmount').setValue('');\r\n          };\r\n        });\r\n    }\r\n  }\r\n  fetchBySecurityNum(securityReferenceNum, i) {\r\n\r\n    if (!!securityReferenceNum) {\r\n      this.showSpinner = true;\r\n      console.log(\"Caling\", securityReferenceNum);\r\n      this.api.fetchBySecurityNumber(securityReferenceNum).subscribe((res: any) => {\r\n        console.log(res);\r\n        this.showSpinner = false;\r\n        if (res == null) {\r\n          this.issecurityValid = false;\r\n          this.snack.open('Invalid Security Reference Number', 'OK', {\r\n            duration: 4000,\r\n            verticalPosition: 'top',\r\n            horizontalPosition: 'right'\r\n          });\r\n          this.c.at(i).get('securityReferenceNumber').setValue('');\r\n          return;\r\n        } else {\r\n          this.issecurityValid = true;\r\n          this.branchData = res.securedOverDrafts;\r\n          console.log(this.branchData);\r\n          this.branchData.forEach((element, index) => {\r\n            this.branch = this.branchData[index].branchCode;\r\n          });\r\n\r\n          this.c.at(i).get('branchCode').setValue(this.branch);\r\n        }\r\n        this.cdr.markForCheck();\r\n\r\n      });\r\n    }\r\n  }\r\n  uploadCollateralType(event, i) {\r\n    this.showSpinn = true;\r\n    const file: File = event.target.files[0];\r\n    this.fileName[i] = file.name;\r\n    const data = {\r\n      accountId: this.accountId,\r\n      documentName: this.fileName[i],\r\n    };\r\n    const uploadData = new FormData();\r\n    uploadData.append(\"data\", JSON.stringify(data));\r\n    uploadData.append(\"file\", file);\r\n    this.api.uploadcollateralDoc(uploadData).subscribe((res: any) => {\r\n      console.log(\"Document Resp\", res, res.url);\r\n      if (res && res.url) {\r\n        this.showSpinn = false;\r\n        this.snack.open('Document Saved Successfully!', 'OK', { duration: 4000, verticalPosition: 'top', horizontalPosition: 'right' });\r\n        this.c.at(i).get('documentUrl').setValue(res.url);\r\n        this.c.at(i).get('fileName').setValue(res.fileName);\r\n      }\r\n    });\r\n\r\n\r\n  }\r\n  deleteDoc(i) {\r\n    this.docUrl = ' ';\r\n    this.fileName = ' ';\r\n    this.c.at(i).get('documentUrl').setValue('');\r\n    this.c.at(i).get('fileName').setValue('');\r\n    this.showDelete = false;\r\n  }\r\n  onSubmit(i) {\r\n    this.c.value.forEach(data => {\r\n      if ((data.linkagePercentage == \"\" || data.securityReferenceNumber == \"\" || data.collateralValue == \"\"\r\n        || data.branchCode == \"\") && this.securedOverdraftUpdateForm.touched == true) {\r\n        this.snack.open('mandatory details are not filled so need to be filled!', 'OK', {\r\n          duration: 4000,\r\n          verticalPosition: 'top',\r\n          horizontalPosition: 'right'\r\n        });\r\n      }\r\n\r\n      if (data.limitStartDate != null && data.limitStartDate._d != undefined && data.limitStartDate._d != null) {\r\n        data.limitStartDate = this.convertDate(data.limitStartDate._d);\r\n      }\r\n\r\n      if (data.limitEndDate != null && data.limitEndDate._d != undefined && data.limitEndDate._d != null) {\r\n        data.limitEndDate = this.convertDate(data.limitEndDate._d);\r\n      }\r\n    }\r\n    )\r\n    let payload = { securedOverDrafts: this.c.value, loggedInUser: this.loggedInUser };\r\n\r\n    if (this.securedOverdraftUpdateForm.invalid) {\r\n      console.log(\"this.securedOverdraftUpdateForm.touched\", this.securedOverdraftUpdateForm.touched)\r\n\r\n      return;\r\n    }\r\n    this.api.securedDraft(payload).subscribe(resp => {\r\n      this.snack.open('Secured Overdraft Details is already filled, click on Next button to continue!', 'OK', {\r\n        duration: 4000,\r\n        verticalPosition: 'top',\r\n        horizontalPosition: 'right'\r\n      });\r\n      this.dialogRef.close({\r\n        status: 'BACKLOG'\r\n      })\r\n    }, err => {\r\n      this.snack.open('Error Unable to Save!', 'OK', {\r\n        duration: 4000,\r\n        verticalPosition: 'top',\r\n        horizontalPosition: 'right'\r\n      });\r\n    })\r\n\r\n  }\r\n  onReset() {\r\n    // reset whole form back to initial state\r\n    this.securedOverdraftUpdateForm.reset();\r\n    this.c.clear();\r\n  }\r\n  removeCollateral(i: number) {\r\n    this.c.controls[i].reset()\r\n  }\r\n  convertDate(value) {\r\n    let date = moment(value).format('YYYY-MM-DDThh:mm:ss'); // ISO 8601 format\r\n    console.log(\"date\", date);\r\n    if (date)\r\n      return date;\r\n  }\r\n\r\n  keyUpevent(event, i) {\r\n    console.log(\"event\", event);\r\n    if (event.keyCode === 8) {\r\n      this.onbackSpace = true;\r\n      this.issecurityValid = false;\r\n      this.c.at(i).get('branchCode').setValue('');\r\n    }\r\n    else {\r\n      this.onbackSpace = false;\r\n    }\r\n  }\r\n  keyPressAlphanumeric(event) {\r\n    var inp = String.fromCharCode(event.keyCode);\r\n    if (/[a-zA-Z0-9]/.test(inp)) {\r\n      return true;\r\n    } else {\r\n      event.preventDefault();\r\n      return false;\r\n    }\r\n  }\r\n  _keyPress(event: any) {\r\n    const pattern = /[0-9]/;\r\n    let inputChar = String.fromCharCode(event.charCode);\r\n    if (!pattern.test(inputChar)) {\r\n      event.preventDefault();\r\n    }\r\n\r\n  }\r\n  calculateLinkagePercent(value, i) {\r\n    this.linkangePercent = value.collateralValue * (value.linkagePercentage / 100);\r\n\r\n    this.c.at(i).get('availableLinkageAccount').setValue(this.linkangePercent.toFixed(2));\r\n  }\r\n  calculateFinalrate(value, i) {\r\n    this.finalRatevalue = value.rate * 1 + value.spread * 1;\r\n    console.log(this.linkangePercent, this.c.controls[i]);\r\n    this.c.at(i).get('finalAmount').setValue(this.finalRatevalue);\r\n\r\n  }\r\n  close() {\r\n    this.dialogRef.close({\r\n      status: \"ONGOING\"\r\n    })\r\n  }\r\n}  ","<div fxLayout=\"row\" fxLayoutGap=\"25px\" fxLayout=\"row\" fxLayoutAlign=\"end\" class=\"contain\">\r\n    <mat-icon class=\"closeIcon\" (click)=\"close()\">close</mat-icon>\r\n</div>\r\n<h1 mat-dialog-title>Secured Overdraft Details</h1>\r\n<mat-dialog-content>\r\n    <div fxLayout=\"row\" fxLayout.lt-sm=\"column\" class=\"app-top-toolbar\">\r\n        <span fxFlex></span>\r\n        <button mat-button color=\"primary\" *ngIf=\"!showEditOption\" (click)=\"addCFormGroup()\">\r\n            <mat-icon>add</mat-icon> Add Collateral\r\n        </button>\r\n    </div>\r\n    <mat-card>\r\n        <form [formGroup]=\"securedOverdraftUpdateForm\">\r\n            <div *ngFor=\"let collateral of c.controls; let i = index\">\r\n                <mat-accordion>\r\n                    <mat-expansion-panel class=\"mb-8\" expanded=\"true\" (opened)=\"panelOpenState = true\"\r\n                        (closed)=\"panelOpenState = false\">\r\n                        <mat-expansion-panel-header>\r\n                            <mat-panel-title>\r\n                                {{ showEditOption == true ? 'Edit' : 'Add' }} Collateral {{ i + 1 }}\r\n                            </mat-panel-title>\r\n                        </mat-expansion-panel-header>\r\n                        <div [formGroup]=\"collateral\">\r\n                            <div fxFlex=\"33.33%\" class=\"full-width\">\r\n                                <mat-hint class=\"hintClass\">Collateral Type</mat-hint>\r\n                                <mat-card class=\"inputCard\">\r\n                                    <mat-select name=\"collateralType\" formControlName=\"collateralType\">\r\n                                        <mat-option *ngFor=\"let collateralType of arrayCollateralType\"\r\n                                            [value]=\"collateralType\">\r\n                                            {{collateralType}}\r\n                                        </mat-option>\r\n                                    </mat-select>\r\n                                </mat-card>\r\n                                <mat-error class=\"errorClass\" *ngIf=\"collateral.get('collateralType').touched && collateral.get('collateralType').hasError('required')\">\r\n                                    Please select Collateral Type\r\n                                </mat-error>\r\n\r\n                            </div>\r\n                            <div fxFlex=\"33.33%\" class=\"full-width\">\r\n                                <mat-hint class=\"hintClass\">Currency</mat-hint>\r\n                                <mat-card class=\"inputCard\">\r\n                                    <mat-select name=\"prefix\" formControlName=\"collateralCurrency\">\r\n                                        <mat-option *ngFor=\"let collateralCurrency of currency\"\r\n                                            [value]=\"collateralCurrency.currencyId.currencyCode\">\r\n                                            {{collateralCurrency.currencyId.currencyCode}}\r\n                                        </mat-option>\r\n                                    </mat-select>\r\n                                </mat-card>\r\n                            </div>\r\n                            <div fxFlex=\"33.33%\" class=\"full-width\">\r\n                                <mat-hint class=\"hintClass\">Collateral Value</mat-hint>\r\n                                <mat-card class=\"inputCard\">\r\n                                    <input (keypress)=_keyPress($event) matInput name=\"a_sig\" id=\"collateralValue\"\r\n                                        formControlName=\"collateralValue\" placeholder=\"Collateral Value\" required\r\n                                        (input)=\"calculateLinkagePercent(collateral.value,i)\" />\r\n                                </mat-card>\r\n                                <mat-error class=\"errorClass\" *ngIf=\"collateral.get('collateralType').touched && collateral.get('collateralValue').hasError('required')\">\r\n                                    Please enter Collateral Value\r\n                                </mat-error>\r\n                            </div>\r\n                            <div fxFlex=\"33.33%\" class=\"full-width\">\r\n                                <mat-hint class=\"hintClass\">Linkage Percentage</mat-hint>\r\n                                <mat-card class=\"inputCard\">\r\n                                    <input matInput (keypress)=_keyPress($event)\r\n                                        (keydown)=\"getCollatrl($event,collateral.get('linkagePercentage'))\" name=\"a_sig\"\r\n                                        formControlName=\"linkagePercentage\" placeholder=\"Linkage Percentage\" required\r\n                                        (input)=\"calculateLinkagePercent(collateral.value,i)\" />\r\n                                </mat-card>\r\n                                <mat-error class=\"errorClass\" *ngIf=\"collateral.get('linkagePercentage').touched && collateral.get('linkagePercentage').hasError('required')\">\r\n                                    Please enter Linkage Percentage\r\n                                </mat-error>\r\n                            </div>\r\n                            <div fxFlex=\"33.33%\" class=\"full-width\">\r\n                                <mat-hint class=\"hintClass\">Available Linkage Amount*</mat-hint>\r\n                                <mat-card class=\"inputCard\">\r\n                                    <input readonly matInput (keypress)=_keyPress($event) name=\"a_sig\"\r\n                                        formControlName=\"availableLinkageAccount\"\r\n                                        placeholder=\"Available Linkage Amount\" />\r\n                                </mat-card>\r\n                                <mat-error class=\"errorClass\" *ngIf=\"collateral.get('availableLinkageAccount').touched && collateral.get('availableLinkageAccount').hasError('required')\">\r\n                                    Please enter Available Linkage Amount\r\n                                </mat-error>\r\n                            </div>\r\n                            <div fxFlex=\"33.33%\" class=\"full-width\">\r\n                                <mat-hint class=\"hintClass\">Overdraft Limit Amount*</mat-hint>\r\n                                <mat-card class=\"inputCard\">\r\n                                    <input matInput (keypress)=_keyPress($event) name=\"a_sig\"\r\n                                        formControlName=\"overdraftLimitAmount\" placeholder=\"Overdraft Limit Amount\"\r\n                                        (keyup)=\"overDraftCondition($event,i)\" />\r\n                                </mat-card>\r\n                                <mat-error class=\"errorClass\" *ngIf=\"collateral.get('overdraftLimitAmount').touched && collateral.get('overdraftLimitAmount').hasError('required')\">\r\n                                    Please enter Overdraft Limit Amount\r\n                                </mat-error>\r\n                            </div>\r\n                            <div fxFlex=\"33.33%\" class=\"full-width\">\r\n                                <mat-hint class=\"hintClass\">Limit Start Date</mat-hint>\r\n                                <mat-card class=\"inputCard\">\r\n                                    <input readonly matInput name=\"dob\"\r\n                                        (selectedChange)=\"getDate(collateral.get('limitStartDate'))\"\r\n                                        formControlName=\"limitStartDate\" placeholder=\"Limit Start Date\"\r\n                                        [matDatepicker]=\"appDatepicker\" [min]=\"minDate\" />\r\n                                    <mat-datepicker-toggle matSuffix [for]=\"appDatepicker\"></mat-datepicker-toggle>\r\n                                </mat-card>\r\n                                <mat-datepicker #appDatepicker></mat-datepicker>\r\n                            </div>\r\n                            <div fxFlex=\"33.33%\" class=\"full-width\">\r\n                                <mat-hint class=\"hintClass\">Limit End Date</mat-hint>\r\n                                <mat-card class=\"inputCard\">\r\n                                    <input readonly matInput name=\"led\" [min]=\"collateral.get('limitStartDate').value \"\r\n                                        formControlName=\"limitEndDate\" placeholder=\"Limit End Date\"\r\n                                        [matDatepicker]=\"appDatepicker1\" />\r\n\r\n                                    <mat-datepicker-toggle matSuffix [for]=\"appDatepicker1\"></mat-datepicker-toggle>\r\n                                </mat-card>\r\n                                <mat-datepicker #appDatepicker1></mat-datepicker>\r\n                            </div>\r\n                            <div fxFlex=\"33.33%\" class=\"full-width\">\r\n                                <mat-hint class=\"hintClass\">Attributes*</mat-hint>\r\n                                <mat-card class=\"inputCard\">\r\n                                    <mat-select name=\"attributes\" formControlName=\"attributes\">\r\n                                        <mat-option value=\"1\">Attributes 1</mat-option>\r\n                                        <mat-option value=\"2\">Attributes 2</mat-option>\r\n                                        <mat-option value=\"3\">Attributes 3</mat-option>\r\n                                    </mat-select>\r\n                                </mat-card>\r\n                                <mat-error class=\"errorClass\" *ngIf=\"collateral.get('attributes').touched && collateral.get('attributes').hasError('required') && collateral.get('attributes').touched\">\r\n                                    Please select Attributes\r\n                                </mat-error>\r\n                            </div>\r\n                            <div fxFlex=\"33.33%\" class=\"full-width\">\r\n                                <mat-hint class=\"hintClass\">Dimensions*</mat-hint>\r\n                                <mat-card class=\"inputCard\">\r\n                                    <mat-select name=\"dimensions\" formControlName=\"dimensions\">\r\n                                        <mat-option value=\"1\">Dimensions 1</mat-option>\r\n                                        <mat-option value=\"2\">Dimensions 2</mat-option>\r\n                                        <mat-option value=\"3\">Dimensions 3</mat-option>\r\n                                    </mat-select>\r\n                                </mat-card>\r\n                                <mat-error class=\"errorClass\" *ngIf=\"collateral.get('dimensions').touched && collateral.get('dimensions').hasError('required')\">\r\n                                    Please select Dimensions\r\n                                </mat-error>\r\n                            </div>\r\n                            <div fxFlex=\"33.33%\" class=\"full-width\">\r\n                                <mat-hint class=\"hintClass\">Security reference Number*</mat-hint>\r\n                                <mat-card class=\"inputCard\">\r\n                                    <input matInput required (keypress)=\"keyPressAlphanumeric($event)\" name=\"a_sig\"\r\n                                        formControlName=\"securityReferenceNumber\"\r\n                                        placeholder=\"Security Reference Number\"\r\n                                        (change)=\"fetchBySecurityNum(collateral.get('securityReferenceNumber').value,i)\"\r\n                                        (keyup)=keyUpevent($event,i) />\r\n                                    <mat-icon\r\n                                        *ngIf=\"issecurityValid && collateral.get('securityReferenceNumber').value.length >0 \"\r\n                                        matSuffix color=\"primary\">check_circle</mat-icon>\r\n                                </mat-card>\r\n                                <mat-error class=\"errorClass\" *ngIf=\"collateral.get('securityReferenceNumber').touched && collateral.get('securityReferenceNumber').hasError('required')\">\r\n                                    Please enter Security Reference Number\r\n                                </mat-error>\r\n                                <mat-hint class=\"hintClass\" class=\"hintColor\" *ngIf=\"!issecurityValid && onbackSpace\">\r\n                                    Enter valid Security Reference Number!</mat-hint>\r\n                            </div>\r\n                            <div fxFlex=\"33.33%\" class=\"full-width\">\r\n                                <mat-hint class=\"hintClass\">Branch Code</mat-hint>\r\n                                <mat-card class=\"inputCard\">\r\n                                    <input (keypress)=_keyPress($event) matInput name=\"a_sig\"\r\n                                        formControlName=\"branchCode\" placeholder=\"Branch Code\" readonly required />\r\n                                </mat-card>\r\n                                <mat-error class=\"errorClass\" *ngIf=\"collateral.get('branchCode').touched && collateral.get('branchCode').hasError('required')\">\r\n                                    Please enter Branch Code\r\n                                </mat-error>\r\n                            </div>\r\n                            <div fxFlex=\"33.33%\" class=\"full-width\">\r\n                                <mat-hint class=\"hintClass\">Rate Value</mat-hint>\r\n                                <mat-card class=\"inputCard\">\r\n                                    <mat-select name=\"rateValue\" formControlName=\"rateValue\">\r\n                                        <mat-option *ngFor=\"let rateValue of arrayRateValue\" [value]=\"rateValue\">\r\n                                            {{rateValue}}\r\n                                        </mat-option>\r\n                                    </mat-select>\r\n                                </mat-card>\r\n                                <mat-error class=\"errorClass\" *ngIf=\"collateral.get('rateValue').touched && collateral.get('rateValue').hasError('required')\">\r\n                                    Please select Rate Value\r\n                                </mat-error>\r\n                            </div>\r\n                            <div fxFlex=\"33.33%\" class=\"full-width\">\r\n                                <mat-hint class=\"hintClass\">Rate in % *</mat-hint>\r\n                                <mat-card class=\"inputCard\">\r\n                                    <input (keypress)=_keyPress($event) matInput name=\"a_sig\" formControlName=\"rate\"\r\n                                        placeholder=\"Rate\" (keydown)=\"getCollatrl($event,collateral.get('rate'))\"\r\n                                        (input)=\"calculateFinalrate(collateral.value,i)\" />\r\n                                </mat-card>\r\n                                <mat-error class=\"errorClass\" *ngIf=\"collateral.get('rate').touched && collateral.get('rate').hasError('required')\">\r\n                                    Please enter Rate\r\n                                </mat-error>\r\n                            </div>\r\n                            <div fxFlex=\"33.33%\" class=\"full-width\">\r\n                                <mat-hint class=\"hintClass\">Spread*</mat-hint>\r\n                                <mat-card class=\"inputCard\">\r\n                                    <input matInput type=\"number\" name=\"a_sig\" formControlName=\"spread\"\r\n                                        placeholder=\"Spread\" (input)=\"calculateFinalrate(collateral.value,i)\" />\r\n                                </mat-card>\r\n                                <mat-error class=\"errorClass\" *ngIf=\"collateral.get('spread').touched && collateral.get('spread').hasError('required')\">\r\n                                    Please enter Spread\r\n                                </mat-error>\r\n                            </div>\r\n\r\n                            <div fxFlex=\"33.33%\" class=\"full-width\">\r\n                                <mat-hint class=\"hintClass\">Final Rate in %</mat-hint>\r\n                                <mat-card class=\"inputCard\">\r\n                                    <input matInput (keypress)=_keyPress($event) name=\"a_sig\"\r\n                                        formControlName=\"finalAmount\" placeholder=\"Rate\"\r\n                                        (keydown)=\"getCollatrl($event,collateral.get('finalAmount'))\" />\r\n                                </mat-card>\r\n                                <mat-error class=\"errorClass\" *ngIf=\"collateral.get('finalAmount').touched && collateral.get('finalAmount').hasError('required')\">\r\n                                    Please enter Final Rate\r\n                                </mat-error>\r\n                            </div>\r\n                            <div class=\"pb-1\">\r\n                                <input style=\"display: none;\"\r\n                                    type=\"file\" name=\"documentUrl\"\r\n                                    #documentUrl \r\n                                    (change)=\"uploadCollateralType($event,i)\">\r\n                                    <div fxLayout=\"row wrap\" class=\"flex-container stretch\">\r\n                                    <a class =\"UploadLink\" \r\n                                    (click)=\"documentUrl.click()\"\r\n                                    [routerLink]=\"\">Collateral Document Upload</a> &nbsp; \r\n                                    <mat-hint class=\"documentHint\">{{fileName[i]}}</mat-hint>\r\n                                    <a class=\"documentlink\" *ngIf=\"docUrl\" href=\"{{docUrl}}\" download>{{fileNam}} </a> &nbsp;\r\n                                    <mat-icon *ngIf=\"docUrl && showDelete\" class=\"docIcon\" (click)=\"deleteDoc(i)\">delete</mat-icon>\r\n                                    <mat-spinner class=\"spinner\" [diameter]=\"30\" *ngIf=\"showSpinn\"></mat-spinner>\r\n                                    </div>\r\n                              </div> \r\n                            <div class=\"pb-1\">\r\n                                <button mat-button color=\"warn\" *ngIf=\"!showEditOption\" (click)=\"removeCollateral(i)\">\r\n                                    <mat-icon>delete</mat-icon> Reset Collateral\r\n                                </button>\r\n                                <button mat-button color=\"warn\" *ngIf=\"showEditOption\"\r\n                                    (click)=\"deleteCollateral(collateral,i)\">\r\n                                    <mat-icon>delete</mat-icon> Remove Collateral\r\n                                </button>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </mat-expansion-panel>\r\n                </mat-accordion>\r\n            </div>\r\n        </form>\r\n    </mat-card>\r\n</mat-dialog-content>\r\n<div fxLayout=\"row\" fxLayoutAlign=\"end\" fxLayoutGap=\"20px\">\r\n    <button mat-raised-button color=\"primary\" (click)=\"onSubmit(securedOverdraftUpdateForm.value)\"\r\n        [disabled]=\" securedOverdraftUpdateForm.invalid \">Save</button>\r\n    &nbsp;&nbsp;&nbsp;\r\n    <button type=\"button\" class=\"cancelbtn\" (click)=\"close()\">\r\n        Cancel\r\n    </button>\r\n</div>","import { HttpEventType } from '@angular/common/http';\r\nimport { ChangeDetectorRef, Component, Inject, OnInit } from '@angular/core';\r\nimport { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { DialogService } from 'app/shared/services/dialogs/dialog.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { CustomerOnboardingMandateEsignComponent } from 'app/views/others/customer-onboarding-mandate-esign/customer-onboarding-mandate-esign.component';\r\nimport { CorporateOnboardingService } from 'app/views/others/onboarding-corporate/corporate-onboarding.service';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-update-mandate-info',\r\n  templateUrl: './update-mandate-info.component.html',\r\n  styleUrls: ['./update-mandate-info.component.scss']\r\n})\r\nexport class UpdateMandateInfoComponent implements OnInit {\r\n  signatureUpdateForm: FormGroup;\r\n  corporateId: any;\r\n  noOfSignSelect: any;\r\n  values: any[] = [1, 2, 3, 4, 5];\r\n  selectedFiles: any;\r\n  signatureimg: any;\r\n  listOfSignatures: any[] = [];\r\n  enableButton: boolean;\r\n  signIndex: any;\r\n  sign_array: any;\r\n  accountSignatureId: number;\r\n  customerId: string;\r\n  signCount: string;\r\n  difference: number;\r\n  show: any;\r\n  uploadSub: Subscription;\r\n  progressValOthers: number = 0;\r\n  deleteRecord: any[] = [];\r\n\r\n\r\n  constructor(\r\n    private dialogRef: MatDialogRef<UpdateMandateInfoComponent>,\r\n    private formBuilder: FormBuilder,\r\n    @Inject(MAT_DIALOG_DATA) private signatures,\r\n    private apiService: ApiService,\r\n    private corporateService: CorporateOnboardingService,\r\n    private ls: LocalStoreService,\r\n    private dialog: MatDialog,\r\n    private dialogService: DialogService,\r\n    private snack: MatSnackBar,\r\n    private cdr: ChangeDetectorRef\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.ls.getItem('corporateId');\r\n    if (this.signatures) {\r\n      this.buildSignatureForm()\r\n      this.noOfSignSelect = this.signatures.length\r\n      this.signatureUpdateForm.get('noOfSignatures').setValue(this.signatures.length)\r\n      for (let i = 0; i < this.signatures.length; i++) {\r\n        (this.signatureUpdateForm.get('sign_array') as FormArray).push(this.createSignatureBoxes(this.signatures[i]))\r\n      }\r\n    }\r\n  }\r\n  buildSignatureForm(data?) {\r\n    this.signatureUpdateForm = this.formBuilder.group({\r\n      noOfSignatures: [data ? data.noOfSignatures : '', [Validators.required]],\r\n      sign_array: this.formBuilder.array([])\r\n    });\r\n  }\r\n  createSignatureBoxes(item): FormGroup {\r\n    return this.formBuilder.group({\r\n      accountSignatureId: item ? item.accountSignatureId : 0,\r\n      imageURL1: [item ? item.fileUrl : 'assets/images/no-image.jpg',Validators.required],\r\n      documentName: item ? item.documentName : \"Signature\",\r\n      documentType: item ? item.documentType : '',\r\n      fileType: item ? item.fileType : item.fileType,\r\n      fileName: item ? item.fileName : item.fileName,\r\n      verificationType: item ? item.verificationType : \"New Customer Signature\"\r\n    }\r\n    );\r\n  }\r\n  get getSignArray() {\r\n    return this.signatureUpdateForm.get('sign_array') as FormArray;\r\n  }\r\n  changeValue(noOfSign) {\r\n    var message = '';\r\n    let arrlength;\r\n    this.noOfSignSelect = noOfSign.value;\r\n    this.enableButton = false;\r\n    if (this.signatureUpdateForm.get('sign_array') as FormArray == undefined || this.getSignArray == null) {\r\n      if ((this.signatureUpdateForm.get('sign_array') as FormArray).length != 0) {\r\n        if (this.noOfSignSelect > (this.signatureUpdateForm.get('sign_array') as FormArray).length) {\r\n          var newSignIndex = this.noOfSignSelect - (this.signatureUpdateForm.get('sign_array') as FormArray).length\r\n          for (let index = 0; index < newSignIndex; index++) {\r\n            (this.signatureUpdateForm.get('sign_array') as FormArray).push(this.createSignatureBoxes(''));\r\n          }\r\n        } else if (this.noOfSignSelect < (this.signatureUpdateForm.get('sign_array') as FormArray).length) {\r\n          var newSignIndex = (this.signatureUpdateForm.get('sign_array') as FormArray).length - this.noOfSignSelect\r\n          for (let index = 0; index < newSignIndex; index++) {\r\n            (this.signatureUpdateForm.get('sign_array') as FormArray).controls.pop();\r\n          }\r\n        }\r\n\r\n      } else {\r\n        for (let index = 0; index < noOfSign.value; index++) {\r\n          (this.signatureUpdateForm.get('sign_array') as FormArray).push(this.createSignatureBoxes(''));\r\n        }\r\n      }\r\n    } else if (this.getSignArray.length == 0) {\r\n      for (let index = 0; index < noOfSign.value; index++) {\r\n        (this.signatureUpdateForm.get('sign_array') as FormArray).push(this.createSignatureBoxes(''));\r\n      }\r\n    } else if (noOfSign.value < this.getSignArray.length) {\r\n      message = 'Are you sure, value is less than no. of signs?'\r\n      this.dialogService.doConfirmDialog(message).subscribe(res => {\r\n        if (res === 'Yes') {\r\n\r\n          arrlength = this.getSignArray.length;\r\n          for (let i = arrlength; i >= noOfSign.value; i--) {\r\n            this.removeSign(i);\r\n            if (i > noOfSign.value) {\r\n              this.deleteSignature(((this.signatureUpdateForm.get('sign_array') as FormArray).at(i - 1) as FormGroup).value, i, 'noOfSignChange', noOfSign.value);\r\n            }\r\n          }\r\n        }\r\n      });\r\n    } else if (noOfSign.value > this.getSignArray.length) {\r\n      console.log('2nd if', noOfSign.value);\r\n      message = 'Are you sure?'\r\n      this.difference = noOfSign.value - this.getSignArray.length;\r\n      for (let i = 0; i < this.difference; i++) {\r\n        ((this.signatureUpdateForm.get('sign_array') as FormArray).push(this.createSignatureBoxes('')));\r\n      }\r\n    }\r\n  }\r\n  removeSign(i) {\r\n    const remove = this.signatureUpdateForm.get('sign_array') as FormArray;\r\n    remove.removeAt(i);\r\n  }\r\n  deleteSignature(report, index, action, noOfSign) {\r\n    if (action === 'delete') {\r\n      this.dialogService.doConfirmDialog('').subscribe(resp => {\r\n        if (resp === 'Yes') {\r\n          console.log('yes => ', resp);\r\n          this.confirmDelete(report, index, action, (this.signatureUpdateForm.controls.noOfSignatures.value - 1));\r\n        } else {\r\n          console.log('no => ', resp);\r\n        }\r\n      });\r\n    } else {\r\n      this.confirmDelete(report, index, action, (this.signatureUpdateForm.controls.noOfSignatures.value - 1));\r\n    }\r\n\r\n  }\r\n  confirmDelete(report, index, action, noOfSign) {\r\n\r\n    this.apiService.fetchSignatureInfo(localStorage.getItem('customerId')).subscribe((resp: any) => {\r\n      console.log(resp);\r\n      this.listOfSignatures = resp ? resp : [];\r\n      this.deleteRecord = resp;\r\n      this.apiService.getSignData().subscribe(data => {\r\n        this.signatureUpdateForm.get('sign_array')['controls'][index].accountSignatureId = data.uploadModel.accountSignatureId\r\n\r\n      })\r\n      var v: string = report.imageURL1;\r\n      if (v.toString().includes('no-image.jpg')) {\r\n        this.signatureUpdateForm.get('sign_array')['controls'].splice(index, 1);\r\n        this.signatureUpdateForm.controls.noOfSignatures.setValue(this.signatureUpdateForm.controls.noOfSignatures.value - 1);\r\n        this.noOfSignSelect = this.signatureUpdateForm.controls.noOfSignatures.value;\r\n        if (this.sign_array.length == this.signatureUpdateForm.controls.noOfSignatures.value) {\r\n          this.enableButton = true;\r\n        } else {\r\n          this.enableButton = false;\r\n        }\r\n        return;\r\n      }\r\n      if (this.deleteRecord[index].accountSignatureId != 0 && this.deleteRecord[index].accountSignatureId != null && this.deleteRecord[index].accountSignatureId != undefined &&\r\n        this.deleteRecord[index].accountSignatureId != '') {\r\n        this.apiService.deleteCustomerSign(this.deleteRecord[index].accountSignatureId).subscribe((data) => {\r\n        }, error => {\r\n\r\n          this.apiService.fetchSignatureInfo(localStorage.getItem('customerId')).subscribe((resp: any) => {\r\n            this.listOfSignatures = resp ? resp : [];\r\n            this.sign_array = resp;\r\n            if (action === 'delete') {\r\n            }\r\n            if (this.sign_array.length == this.signatureUpdateForm.controls.noOfSignatures.value) {\r\n              if ((this.listOfSignatures.length === 0 && this.signatureUpdateForm.controls['noOfSignatures'].value === 0)) {\r\n                this.enableButton = false;\r\n              } else {\r\n                this.enableButton = true;\r\n              }\r\n            } else if (this.sign_array.length == 0) {\r\n              this.enableButton = false;\r\n            }\r\n            else {\r\n              this.enableButton = false;\r\n            }\r\n          })\r\n        }\r\n\r\n\r\n        );\r\n        this.signatureUpdateForm.get('sign_array')['controls'].splice(index, 1);\r\n        this.signatureUpdateForm.controls.noOfSignatures.setValue(this.signatureUpdateForm.controls.noOfSignatures.value - 1);\r\n        this.noOfSignSelect = this.signatureUpdateForm.controls.noOfSignatures.value;\r\n      }\r\n    });\r\n  }\r\n  openPopUp(report, index: any, data?: any) {\r\n    this.signIndex = index;\r\n    this.customerId = localStorage.getItem('customerId');\r\n    this.signCount = localStorage.getItem('noOfSign');\r\n    this.accountSignatureId = report.accountSignatureId ? report.accountSignatureId : null;\r\n    this.enableButton = false;\r\n    if (this.listOfSignatures.length == 1 && index == 0) {\r\n      this.accountSignatureId = this.listOfSignatures[index].accountSignatureId;\r\n    } else if (index >= 0 && this.listOfSignatures.length > 1) {\r\n      if (this.listOfSignatures[index]?.accountSignatureId) {\r\n        this.accountSignatureId = this.listOfSignatures[index].accountSignatureId;\r\n      } else {\r\n        this.accountSignatureId = 0;\r\n      }\r\n    }\r\n    else {\r\n      console.log(\"else\")\r\n      this.accountSignatureId = 0;\r\n    }\r\n    if (!this.show) {\r\n      let dialogRef: MatDialogRef<any> = this.dialog.open(CustomerOnboardingMandateEsignComponent, {\r\n        width: '720px',\r\n        disableClose: true,\r\n\r\n        data: {\r\n          screen: \"NewCustomerOnboarding\", customerId: this.customerId, signCount: this.signatureUpdateForm.get('noOfSignatures').value,\r\n          accountSignatureId: this.accountSignatureId,\r\n          signatureType: \"DigitalSign\"\r\n        },\r\n      });\r\n      dialogRef.afterClosed().subscribe(res => {\r\n        if (res.image !== null && res.image !== undefined) {\r\n          this.enableButton = true;\r\n          ((this.signatureUpdateForm.get('sign_array') as FormArray).at(index) as FormGroup).get('imageURL1').patchValue(res.image);\r\n          this.show = !res.enable;\r\n          this.getListOfSignatures(this.customerId, \"Yes\");\r\n        }\r\n\r\n        else {\r\n          this.enableButton = false;\r\n        }\r\n      });\r\n    }\r\n  }\r\n  getListOfSignatures(customerId: any, popupSign) {\r\n    this.apiService.fetchSignatureInfo(customerId).subscribe((resp: any) => {\r\n      if (popupSign === \"Yes\") {\r\n        this.signatureUpdateForm.get('sign_array')['controls'][this.signIndex].accountSignatureId = resp[resp.length - 1].accountSignatureId;\r\n      }\r\n      this.listOfSignatures = resp ? resp : [];\r\n      this.cdr.detectChanges();\r\n      this.signatureUpdateForm.get('noOfSignatures').setValue(this.noOfSignSelect);\r\n      if (this.listOfSignatures.length == this.noOfSignSelect) {\r\n        this.enableButton = true;\r\n      } else {\r\n        this.enableButton = false;\r\n      }\r\n    });\r\n  }\r\n  onFileSelect(report, event, index) {\r\n    this.apiService.fetchSignatureInfo(this.customerId).subscribe((resp: any) => {\r\n    })\r\n    this.selectedFiles = event.target.files[0];\r\n    if (event.target.files) {\r\n      var reader = new FileReader();\r\n      reader.readAsDataURL(event.target.files[0]);\r\n      reader.onload = (event: any) => {\r\n        this.signatureimg = event.target.result;\r\n        console.log(this.signatureimg, \"Upload image\");\r\n      }\r\n      console.log(this.signatureimg);\r\n      this.uploadDoc(report, event.target.files[0], this.selectedFiles, index, event);\r\n      console.log(\"sign array -- \", this.signatureUpdateForm.get('sign_array'));\r\n    }\r\n  }\r\n  uploadDoc(report, event, url, index, img) {\r\n    if (img.target.files) {\r\n      var reader = new FileReader();\r\n      reader.readAsDataURL(img.target.files[0]);\r\n      reader.onload = (img: any) => {\r\n        this.signatureimg = img.target.result;\r\n        this.customerId = localStorage.getItem('customerId');\r\n        this.signCount = this.signatureUpdateForm.get('noOfSignatures').value;\r\n        const uploadData = new FormData();\r\n        const data = new FormData();\r\n        if (this.listOfSignatures.length == 1 && index == 0) {\r\n          console.log(\"if\");\r\n          this.accountSignatureId = this.listOfSignatures[index].accountSignatureId;\r\n        } else if (index >= 0 && this.listOfSignatures.length != 1) {\r\n          console.log(\" else if\");\r\n          this.accountSignatureId = this.listOfSignatures[index].accountSignatureId;\r\n        } else {\r\n          console.log(\"else\");\r\n          this.accountSignatureId = 0;\r\n        }\r\n        const upload_model = ({\r\n          noOfSignatures: this.signCount,\r\n          accountSignatureId: this.accountSignatureId,\r\n          documentName: \"Signature\",\r\n          customerId: this.customerId,\r\n          documentType: \"10\",\r\n          fileType: event.type,\r\n          fileName: event.name,\r\n          verificationType: \"New Customer Signature\",\r\n          signatureType: \"Uploaded Sign\"\r\n        });\r\n\r\n        uploadData.append(\"noOfSignatures\", this.signCount);\r\n        uploadData.append(\"uploadModel\", JSON.stringify(upload_model));\r\n        uploadData.append(\"file\", url);\r\n\r\n        const txtCont = '{\"noOfSignatures\":' + this.signCount + ', \"uploadModel\":' + JSON.stringify(upload_model) + ' } ';\r\n\r\n        data.append(\"data\", txtCont);\r\n        data.append(\"file\", url);\r\n        ((this.signatureUpdateForm.get('sign_array') as FormArray).at(index) as FormGroup).get('imageURL1').patchValue(this.signatureimg);\r\n        this.uploadSub = this.apiService.uploadSignature(data).subscribe((res: any) => {\r\n          if (res !== null) {\r\n            ((this.signatureUpdateForm.get('sign_array') as FormArray).at(index) as FormGroup).get('accountSignatureId').\r\n              patchValue(res.accountSignatureId);\r\n            ((this.signatureUpdateForm.get('sign_array') as FormArray).at(index) as FormGroup).get('documentName').\r\n              patchValue(res.documentName);\r\n            ((this.signatureUpdateForm.get('sign_array') as FormArray).at(index) as FormGroup).get('documentType').\r\n              patchValue(res.documentType);\r\n            ((this.signatureUpdateForm.get('sign_array') as FormArray).at(index) as FormGroup).get('fileType').\r\n              patchValue(res.fileType);\r\n            ((this.signatureUpdateForm.get('sign_array') as FormArray).at(index) as FormGroup).get('fileName').\r\n              patchValue(res.fileName);\r\n            ((this.signatureUpdateForm.get('sign_array') as FormArray).at(index) as FormGroup).get('verificationType').\r\n              patchValue(res.verificationType);\r\n            ((this.signatureUpdateForm) as FormGroup).get('noOfSignatures').\r\n              patchValue(res.noOfSignatures);\r\n            console.log(this.signatureUpdateForm);\r\n          }\r\n          this.getListOfSignatures(this.customerId, \"No\");\r\n          if (res.type == HttpEventType.UploadProgress) {\r\n            this.progressValOthers = Math.round(100 * (res.loaded / res.total));\r\n          } else if (res.type == HttpEventType.Response) {\r\n            this.progressValOthers = 0;\r\n          }\r\n        }, (error: any) => {\r\n          if (error.status == 201) {\r\n            this.shotToast(\"Document Uploaded!\");\r\n          } else {\r\n            ((this.signatureUpdateForm.get('sign_array') as FormArray).at(index) as FormGroup).get('imageURL1').patchValue('');\r\n            this.shotToast(error.message);\r\n          }\r\n        }\r\n        );\r\n      }\r\n\r\n    }\r\n  }\r\n  onSubmit(){\r\n    this.snack.open('Signature Updated',\"OK\",{\r\n      duration: 4000,\r\n      verticalPosition: \"top\",\r\n      horizontalPosition: \"right\",\r\n    })\r\n    this.dialogRef.close({\r\n      status:'INITIATED',\r\n      resp: this.signatureUpdateForm.get('sign_array').value,\r\n      screen: 'signatureUpload'\r\n    })\r\n  }\r\n  shotToast(msg: string) {\r\n    this.snack.open(`${msg}`, \"OK\", {\r\n      duration: 6000,\r\n      verticalPosition: \"top\",\r\n      horizontalPosition: \"right\",\r\n    });\r\n  }\r\n  close() {\r\n    this.dialogRef.close({\r\n      status: 'UNDER_PROCESS'\r\n    })\r\n  }\r\n}\r\n","<div fxLayout=\"row\" fxLayoutAlign=\"end\">\r\n    <mat-icon class=\"closeIcon\" (click)=\"close()\">close</mat-icon>\r\n</div>\r\n<h1 mat-dialog-title>Mandate Information</h1>\r\n<mat-dialog-content>\r\n    <h3 style=\"font-size: 16px;\"> Signatures </h3>\r\n    <form [formGroup]=\"signatureUpdateForm\">\r\n        <div fxLayout=\"row wrap\" style=\"padding: 0.5rem 0;\" class=\"full-width\">\r\n            <div fxFlex=\"36%\" fxFlex.xs=\"100%\">\r\n                <mat-hint style=\"padding-left: 0.8rem;font-size: 10px;\">\r\n                    No. of Signatures*\r\n                </mat-hint>\r\n                <mat-card class=\"inputCard\">\r\n                    <mat-select class=\"full-width default-background\" name=\"noOfSignatures\" #noOfSignatures\r\n                        formControlName=\"noOfSignatures\" placeholder=\"Choose No. of Signatures\" required\r\n                        (selectionChange)=\"changeValue($event)\" style=\"font-size: 16px;border: transparent;\">\r\n                        <mat-option *ngFor=\"let val of values\" [value]=\"val\">\r\n                            {{ val }}\r\n                        </mat-option>\r\n                    </mat-select>\r\n                </mat-card>\r\n                <mat-error\r\n                    *ngIf=\"signatureUpdateForm.controls['noOfSignatures'] && signatureUpdateForm.controls['noOfSignatures'].touched && !signatureUpdateForm.controls['noOfSignatures'].valid\">\r\n                    &nbsp; &nbsp; Enter No of Signatures\r\n                </mat-error>\r\n            </div>\r\n        </div>\r\n        <div formArrayName=\"sign_array\">\r\n            <div *ngFor=\"let report of signatureUpdateForm.get('sign_array')['controls']; let i=index;\">\r\n                <div [formGroupName]=\"i\">\r\n                    <div fxLayout=\"row wrap\" style=\"padding: 0.5rem;\" class=\"full-width\">\r\n                        <div fxFlex=\"36%\" fxFlex.xs=\"100%\">\r\n                            <div class=\"form\">\r\n                                <div>\r\n                                    <div class=\"flex-grow-2\">\r\n                                        <div>\r\n                                            <button class=\"scanButton\" appearence=\"outline\"\r\n                                                (click)=\"openPopUp(report.value,i)\">Digital\r\n                                                Sign</button>\r\n                                            <button class=\"Upload scanButton\">\r\n\r\n                                                Upload\r\n                                                <input type=\"file\" class=\"changeInput\" accept=\"image/*\" required\r\n                                                    (change)=\"onFileSelect(report.value,$event, i)\">\r\n                                            </button>\r\n\r\n                                        </div>\r\n                                        <div class=\"insertDriveImg\">\r\n                                            <div *ngIf=\"imageURL1 == 'not_available'; else showAvatar\">\r\n                                                <img class=\"formImg\" [src]=\"'assets/images/no-image.jpg'\"\r\n                                                    alt=\"No Image\">\r\n                                            </div>\r\n                                            <ng-template #showAvatar>\r\n                                                <img class=\"formImg\" required [src]=\"report.value.imageURL1\" alt=\"\">\r\n                                            </ng-template>\r\n                                        </div>\r\n                                        <button mat-raised-button style=\"margin-left: 10px;margin-top: 30px;\"\r\n                                            (click)=\"deleteSignature(report.value,i,'delete')\">\r\n                                            <mat-icon style=\"color: red;\">\r\n                                                delete\r\n                                            </mat-icon>\r\n                                        </button>\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </form>\r\n</mat-dialog-content>\r\n<div fxLayout=\"row\" fxLayoutAlign=\"end\" fxLayoutGap=\"20px\">\r\n    <button type=\"button\" class=\"editbtn\" mat-raised-button \r\n      (click)=\"onSubmit()\">Save</button>\r\n    &nbsp;&nbsp;&nbsp;\r\n    <button type=\"button\" class=\"cancelbtn\" (click)=\"close()\">\r\n      Cancel\r\n    </button>\r\n  </div>","import { ChangeDetectorRef, Component, Inject, OnInit, ViewChild } from '@angular/core';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { Router } from '@angular/router';\r\nimport { TasksummaryService } from '../tasksummary.service';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { ApplicationEntryStageService } from 'app/shared/services/application-entry-stage.service';\r\n\r\nimport {\r\n  ApexNonAxisChartSeries,\r\n  ApexPlotOptions,\r\n  ApexChart,\r\n  ChartComponent,\r\n  ApexAxisChartSeries,\r\n  ApexFill,\r\n  ApexStroke,\r\n  ApexYAxis,\r\n  ApexTooltip,\r\n  ApexMarkers,\r\n  ApexXAxis\r\n\r\n} from \"ng-apexcharts\";\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { CardInitiationDetailsUpdateComponent } from './card-initiation-details-update/card-initiation-details-update.component';\r\nimport { CardApprovalDetailsUpdateComponent } from './card-approval-details-update/card-approval-details-update.component';\r\nimport { CardAssessmentReportUpdateComponent } from './card-assessment-report-update/card-assessment-report-update.component';\r\nimport { CardCreditScoreUpdateComponent } from './card-credit-score-update/card-credit-score-update.component';\r\nimport { CardChargeDetailsUpdateComponent } from './card-charge-details-update/card-charge-details-update.component';\r\nimport { CardInterestDetailsUpdateComponent } from './card-interest-details-update/card-interest-details-update.component';\r\nimport { CardFinancialDetailsUpdateComponent } from './card-financial-details-update/card-financial-details-update.component';\r\nimport { CardPreferenceDetailsUpdateComponent } from './card-preference-details-update/card-preference-details-update.component';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\n\r\nexport type ChartOptions = {\r\n  series: ApexNonAxisChartSeries;\r\n  chart: ApexChart;\r\n  labels: string[];\r\n  plotOptions: ApexPlotOptions;\r\n  series1: ApexAxisChartSeries;\r\n\r\n  xaxis: ApexXAxis;\r\n  yaxis: ApexYAxis | ApexYAxis[];\r\n\r\n  stroke: ApexStroke;\r\n  markers: ApexMarkers;\r\n  fill: ApexFill;\r\n  tooltip: ApexTooltip;\r\n\r\n};\r\n\r\n//chart 2\r\nexport type ChartOptions1 = {\r\n  series1: ApexNonAxisChartSeries;\r\n  chart1: ApexChart;\r\n  labels1: string[];\r\n  plotOptions1: ApexPlotOptions;\r\n\r\n\r\n  xaxis1: ApexXAxis;\r\n  yaxis1: ApexYAxis | ApexYAxis[];\r\n\r\n  stroke1: ApexStroke;\r\n  markers1: ApexMarkers;\r\n  fill1: ApexFill;\r\n  tooltip1: ApexTooltip;\r\n\r\n};\r\n@Component({\r\n  selector: 'app-card-account-approver',\r\n  templateUrl: './card-account-approver.component.html',\r\n  styleUrls: ['./card-account-approver.component.scss']\r\n})\r\nexport class CardAccountApproverComponent implements OnInit {\r\n  @ViewChild(\"chart\")\r\n  chart: ChartComponent = new ChartComponent;\r\n  public chartOptions: Partial<ChartOptions> | any;\r\n  public chartOptions1: Partial<ChartOptions1> | any;\r\n  // data:any;\r\n  cardId:any;\r\n  cardAccountInfo:any;\r\n  initiationDetails:any;\r\n  approvalDetails: any;\r\n  assessmentDetails: any;\r\n  financialDetails: any;\r\n  income: any;\r\n  expense: any;\r\n  chargeDetails: any;\r\n  interestDetails: any;\r\n  creditRatingDetails: any;\r\n  documentDetails: any;\r\n  preferenceDetails: any;\r\n  customerName: any;\r\n  intrestDetails: any;\r\n  signatureData : any;\r\n  documentInfo:any;\r\n  agencyName: any;\r\n  ratings:any;\r\n  remarks:any;\r\n  accountServiceDetails: any;\r\n  designation: any;\r\n  employeeNumber: any;\r\n  employmentType: any;\r\n  office: any;\r\n  employmentCategory: any;\r\n  cardInfo: any;\r\n  editScreen: boolean;\r\n  rejectedStatus: boolean;\r\n  approvedStatus: boolean;\r\n  ongoingStatus: boolean;\r\n  accStatus: any;\r\n  isOnGoing : string = \"\";\r\n  errorStatus: any;\r\n  customerInfoDetails: object;\r\n  ownership: string;\r\n  noOfApplicants: number;\r\n  customerId:string;\r\n  profileData:any;\r\n  firstName:string;\r\n  lastName:string;\r\n  prefix:string;\r\n  accInfo:any;\r\n  image:object;\r\n  imageUrl:any;\r\n  nameCreater:any[]=['Y','B','','D','E','T','A','E','R','C'];\r\n  constructor( private router: Router,\r\n    public tasksummaryService: TasksummaryService,private ls:LocalStoreService,\r\n    public dialogRef: MatDialogRef<CardAccountApproverComponent>,\r\n    private appApiService: ApplicationEntryStageService,\r\n    private api: ApiService,private sanitizer: DomSanitizer,\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    public cdr: ChangeDetectorRef,private snack: MatSnackBar,public dialog: MatDialog) { }\r\n\r\n  ngOnInit(): void {\r\n    this.cardInfo = this.data;\r\n    console.log(this.cardInfo);\r\n    this.cardId=this.ls.getItem('');       \r\n    this.ls.setItem('CIF_NUM_PRIMARY',this.cardInfo.customerId);\r\n    this.ls.setItem(\"NAME\",this.cardInfo.firstName + \" \" + this.cardInfo.lastName);  \r\n    this.getProfileImage(this.cardInfo.customerId); \r\n    if (this.cardInfo.status == 'REJECTED') {\r\n      this.approvedStatus = true;\r\n      this.rejectedStatus = true;\r\n      this.editScreen=false;\r\n    } else if (this.cardInfo.status == 'APPROVED') {\r\n      this.approvedStatus = true;\r\n      this.rejectedStatus = true;\r\n      this.editScreen=true;\r\n    } else if (this.cardInfo.status == 'ONGOING') {\r\n      this.approvedStatus = true;\r\n      this.rejectedStatus = false;\r\n      // this.isOnGoing = status;\r\n      this.editScreen=false;\r\n    } else if (this.cardInfo.status == 'BACKLOG') {\r\n      this.approvedStatus = false;\r\n      this.rejectedStatus = false;\r\n      this.editScreen=false;\r\n    }\r\n  this.getAccountInfoByAccountId(this.cardInfo.cardId);\r\n  this.getCustomerInfoDetails(this.cardInfo.cardId);\r\n  \r\n  }\r\n\r\n\r\nclose(data) {\r\n  this.dialogRef.close({\r\n    message: 'Confirm',\r\n    data:this.cardInfo.status\r\n });\r\n}\r\ngetProfileImage(customerId){    \r\n  this.image=null;\r\n  this.cardInfo.customerId == null ? null :this.api.getProfileDetails(customerId)\r\n    .subscribe((data: any) => {        \r\n      if(data.profileImage!=null){\r\n        this.imageUrl=data.profileImage; \r\n            \r\n      let objectURL =  data.profileImage.fileUrl;    \r\n      this.image = this.sanitizer.bypassSecurityTrustUrl(objectURL);\r\n      }   \r\n    }, (error: any) => {\r\n      console.log(error);\r\n    });\r\n\r\n}\r\n\r\ngoToCardAccount(){\r\n  console.log(\"Navigating to edit screen\");\r\n\r\n  this.ls.setItem('EDIT-CARDINFO',this.cardAccountInfo);\r\n  let statusModel = {\r\n    cardId: this.cardInfo.cardId,\r\n    status: \"ONGOING\"\r\n  };\r\n  this.api.updateCardStatus(statusModel).subscribe(data => {\r\n  });\r\n  console.log('acc data :: ', this.cardInfo);\r\n  setTimeout(() => {\r\n    this.router.navigateByUrl('/cardaccount/applicationEntryStage/list');\r\n  }, 1000);\r\n\r\n  this.dialogRef.close({\r\n    message: 'Confirm',\r\n });\r\n\r\n}\r\ngetAccountInfoByAccountId(cardId) {\r\n  this.tasksummaryService.getCardAccountInfoById(cardId).subscribe(cardInfo => {\r\n    if(cardInfo){\r\n      this.cardAccountInfo = cardInfo;\r\n\r\n      console.log(\"backend data\",this.cardAccountInfo)\r\n             // this.loading = false;\r\n           this.initiationDetails=this.cardAccountInfo.initiationInfo;\r\n           console.log(this.initiationDetails);\r\n           if( this.cardAccountInfo.financialInfo){\r\n            this.financialDetails = this.cardAccountInfo.financialInfo[0];\r\n            this.income = this.cardAccountInfo.financialInfo[0].applicantTotalIncome;\r\n            this.expense = this.cardAccountInfo.financialInfo[0].applicantTotalExpense;\r\n            this.designation=this.cardAccountInfo.financialInfo[0].designation;\r\n            this.office=this.cardAccountInfo.financialInfo[0].office;\r\n            this.employeeNumber=this.cardAccountInfo.financialInfo[0].employeeNumber;\r\n            this.employmentType=this.cardAccountInfo.financialInfo[0].employmentType;\r\n            this.employmentCategory=this.cardAccountInfo.financialInfo[0].employmentCategory;\r\n           }\r\n           if(this.cardAccountInfo.creditRatingInfo){\r\n          this.creditRatingDetails=this.cardAccountInfo.creditRatingInfo;\r\n          this.customerName=this.cardAccountInfo.creditRatingInfo.customerName;\r\n          if(this.cardAccountInfo.creditRatingInfo.agencyRating ){\r\n            if(this.cardAccountInfo.creditRatingInfo.agencyRating[0].agencyName){\r\n              this.agencyName=this.cardAccountInfo.creditRatingInfo.agencyRating[0].agencyName;\r\n          }  \r\n          if(this.cardAccountInfo.creditRatingInfo.agencyRating[0].ratings){\r\n            this.ratings=this.cardAccountInfo.creditRatingInfo.agencyRating[0].ratings;\r\n          }\r\n    if(this.cardAccountInfo.creditRatingInfo.agencyRating[0].remarks){\r\n      this.remarks=this.cardAccountInfo.creditRatingInfo.agencyRating[0].remarks;\r\n    }\r\n          }\r\n          }\r\n         \r\n       \r\n          this.intrestDetails=this.cardAccountInfo.interestInfo;\r\n          this.chargeDetails=this.cardAccountInfo.chargeInfo;\r\n          this.signatureData=this.cardAccountInfo.documentInfo;\r\n          this.assessmentDetails=this.cardAccountInfo.assessmentInfo; \r\n          this.approvalDetails=this.cardAccountInfo.approvalInfo;\r\n          this.preferenceDetails=this.cardAccountInfo.preferenceInfo;\r\n    \r\n          //  if(this.cardAccountInfo.documentInfo){\r\n          //   this.signatureData = this.documentInfo.signatures[0];\r\n          //this.cardAccountInfo.financialInfo[0] -> inside assignValues1\r\n          //   }\r\n            \r\n         this.assignValues(this.cardAccountInfo.initiationInfo,this.cardAccountInfo.financialInfo[0],this.cardAccountInfo.creditRatingInfo,\r\n         this.cardAccountInfo.interestInfo,this.cardAccountInfo.chargeInfo, this.cardAccountInfo.documentInfo,this.cardAccountInfo.assessmentInfo,this.cardAccountInfo.approvalInfo,this.cardAccountInfo.preferenceInfo,\r\n         )\r\n        \r\n              for (const key in this.cardAccountInfo) {\r\n                if (Object.prototype.hasOwnProperty.call(this.cardAccountInfo, key)) {\r\n                  const element = this.cardAccountInfo[key];\r\n      \r\n      \r\n                }\r\n              }\r\n            \r\n    }\r\n   //this.accountDetails= this.accountInfo.businessProductAccount;\r\n          \r\n        });\r\n    }\r\n\r\n      assignValues(initiationInfo: any,financialDetails,creditRatingInfo,interestInfo,chargeInfo,documentInfo,assessmentInfo,approvalInfo,preferenceInfo) {\r\n    \r\n     this.approvalDetails=approvalInfo;\r\n     this.assessmentDetails=assessmentInfo;\r\n     this.initiationDetails = initiationInfo;\r\n     this.creditRatingDetails = creditRatingInfo;\r\n     this.financialDetails = financialDetails;\r\n\r\n     this.interestDetails = interestInfo;\r\n     this.chargeDetails = chargeInfo;\r\n    //  this.accountServiceDetails=preferenceInfo;\r\n    //  this.documentDetails = documentInfo;\r\n    this.signatureData=documentInfo;\r\n     this.preferenceDetails = preferenceInfo;\r\n\r\n     this.chartOptions = {\r\n      series: [48],\r\n      chart: {\r\n  \r\n        height: 200,\r\n        type: \"radialBar\"\r\n      },\r\n      plotOptions: {\r\n        radialBar: {\r\n          hollow: {\r\n            size: \"70%\"\r\n          }\r\n        }\r\n      },\r\n      labels: ['saved']\r\n    };\r\n    // chart 2\r\n  \r\n    this.chartOptions1 = {\r\n      series1: [\r\n        {\r\n          name: \"Income :\"+ this.income,\r\n          type: \"line\",\r\n          data: [40, 55, 50, 70, 65, 68, 50, 45, 35, 30, 38, 40]\r\n        },\r\n  \r\n        {\r\n          name: \"Expenses :\"+ this.expense,\r\n          type: \"line\",\r\n          data: [55, 30, 25, 45, 46, 47, 48, 52, 44, 35, 30]\r\n        }\r\n      ],\r\n      chart1: {\r\n        height: 220,\r\n        type: \"line\"\r\n      },\r\n      stroke1: {\r\n        curve: \"smooth\"\r\n      },\r\n      fill1: {\r\n        type: \"solid\",\r\n        opacity: [0.35, 1]\r\n      },\r\n      labels1: [\r\n        \"JAN\",\r\n        \"\",\r\n        \"FEB\",\r\n        \"\",\r\n        \"MAR\",\r\n        \"\",\r\n        \"APR\",\r\n        \"\",\r\n        \"MAY \",\r\n        \"\",\r\n        \"JUN\"\r\n      ],\r\n      // markers1: {\r\n      // size: 0\r\n      // },\r\n      yaxis1: [\r\n        {\r\n          title: {\r\n            text: \"\"\r\n          }\r\n        },\r\n      ],\r\n      xaxis1: {\r\n        labels: {\r\n          trim: false\r\n        }\r\n      },\r\n  \r\n  \r\n    }\r\n  \r\n    }\r\n  \r\n  // close(data) {\r\n//   this.dialogRef.close({\r\n//     message: 'Confirm',\r\n//     data\r\n//   });\r\n//  }\r\n\r\n\r\nupdateApplicationStatus(formData, status) {\r\nconsole.log(\"formData::\",formData)\r\n  // console.log('data : ',formData.businessProductAccount.accountId);\r\n  // formData.businessProductAccount.status = status;\r\n  //to send status on dialog close \r\n  let data=status;\r\n  this.accStatus = status;\r\n  console.log(this.accStatus)\r\n  const formDt={\r\n    status:this.accStatus,\r\n    cardId:formData.cardId\r\n  }\r\n  this.tasksummaryService.updateCardAccountStatus(formDt)\r\n    .subscribe(respData => {\r\n      if (respData.cardId != null || respData.cardId != '' || respData.cardId != \"\") {\r\n          this.close(data);\r\n          this.cdr.markForCheck();\r\n          this.cdr.detectChanges();\r\n          this.dialogRef.close({\r\n            message: 'Confirm',\r\n            data\r\n          });\r\n\r\n        this.snack.open(status + ' !', 'OK', {\r\n          duration: 4000,\r\n          verticalPosition: 'top',\r\n          horizontalPosition: 'right'\r\n        });\r\n        this.cdr.markForCheck();\r\n      } else {\r\n        this.snack.open('Not able to connect to server!', 'INTERNAL SERVER ERROR', {\r\n          duration: 4000,\r\n          verticalPosition: 'top',\r\n          horizontalPosition: 'right'\r\n        });\r\n      }\r\n    }, error => {\r\n        console.log('error resp :: ',error);\r\n        this.errorStatus=status;\r\n        this.snack.open(`${error.error.message} `, 'OK', {\r\n          duration: 4000,\r\n          verticalPosition: 'top',\r\n          horizontalPosition: 'right'\r\n        });\r\n    });\r\n}\r\n\r\nopenEditScreen(screen,data){\r\n  let statusModel = {\r\n    cardId: this.cardInfo.cardId,\r\n    status: \"ONGOING\"\r\n  };\r\n  this.api.updateCardStatus(statusModel).subscribe(data => {\r\n    this.approvedStatus = true;\r\n      this.rejectedStatus = false;\r\n  });\r\n  const dialogRef = this.dialog.open(screen,\r\n    {\r\n      panelClass: 'full-width-dialog',\r\n      data: data,\r\n      width: '80%',\r\n      disableClose: true\r\n    });\r\n  dialogRef.afterClosed().subscribe((submit) => {\r\n    this.cardInfo.status = submit.status\r\n    if (this.cardInfo.status == 'BACKLOG') {\r\n      this.approvedStatus = false;\r\n      this.rejectedStatus = false;\r\n    }\r\n    this.getAccountInfoByAccountId(this.cardInfo.cardId)\r\n    this.cdr.markForCheck();      \r\n    })\r\n\r\n \r\n}\r\neditInitiationDetails() {\r\n  this.openEditScreen(CardInitiationDetailsUpdateComponent,this.initiationDetails)\r\n }\r\n editFinancialDetails(){\r\n  this.openEditScreen(CardFinancialDetailsUpdateComponent,this.cardAccountInfo)\r\n }\r\n\r\n editCardPreferenceDetails(){\r\n  this.openEditScreen(CardPreferenceDetailsUpdateComponent,{preferanceInfo:this.preferenceDetails,cardId:this.cardInfo.cardId})\r\n }\r\n\r\n editInterestDetails(){\r\n  this.openEditScreen(CardInterestDetailsUpdateComponent,{interestInfo:this.interestDetails,cardId:this.cardInfo.cardId})\r\n }\r\n\r\n editChargeDetails(){\r\n  this.openEditScreen(CardChargeDetailsUpdateComponent,{chargeInfo:this.chargeDetails,cardId:this.cardInfo.cardId,currency:this.initiationDetails.currency})\r\n }\r\n\r\n editCreditScoreDetails(){\r\n  this.openEditScreen(CardCreditScoreUpdateComponent,{creditScore:this.creditRatingDetails,cardId:this.cardInfo.cardId})\r\n }\r\n\r\n editAssessmentReport(){\r\n  this.openEditScreen(CardAssessmentReportUpdateComponent,{assessmentInfo:this.assessmentDetails,cardId:this.cardInfo.cardId,currency:this.initiationDetails.currency})\r\n }\r\n \r\n editApprovalDetails(){\r\n  this.openEditScreen(CardApprovalDetailsUpdateComponent,{approvalInfo:this.approvalDetails,cardId:this.cardInfo.cardId,currency:this.initiationDetails.currency});\r\n }\r\n\r\n\r\ngetCustomerInfoDetails(cardId) {\r\n  // this.loader.open();\r\n   this.appApiService.fetchCardCustomersByCardId( cardId,'cardOrigin').subscribe((customerInfoDetails) => {\r\n     if(customerInfoDetails.data){\r\n    //   this.loader.close();\r\n       this.customerInfoDetails = customerInfoDetails.data;\r\n       this.ownership = this.customerInfoDetails[0].ownership;\r\n       this.noOfApplicants = this.customerInfoDetails[0].numOfApplicants;\r\n     }\r\n   }, (err: any) => {\r\n     //this.loader.close();\r\n   });\r\n }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","<div >\r\n   <div  fxLayout=\"column wrap\">\r\n     <div class=\"content\">\r\n       <div fxLayout=\"row\" fxLayoutAlign=\"end\">\r\n          <div class=\"closeIcon\">\r\n             <mat-icon style=\"color: darkgray;cursor: pointer;margin-right: 30px;\" (click)=\"close(data)\" >\r\n               close\r\n            </mat-icon>\r\n          </div>\r\n       </div>\r\n       <!--img row-->\r\n       <div fxLayoutAlign=\"center\">\r\n         <!-- <mat-spinner  *ngIf=\"loading\"></mat-spinner> -->\r\n      </div>\r\n      <div class=\"boxing\"> \r\n      <!-- <div class=\"main\" *ngIf=\"!loading\"> -->\r\n         <div class=\"main\">\r\n            <div class=\"createdBy\"   fxLayout=\"row end\">\r\n               <div class=\"creater\"  fxLayout=\"column\" >\r\n                <span class=\"word1\"  *ngFor=\"let creater of nameCreater;\">{{creater}}</span>               \r\n               </div>\r\n               <div fxLayout=\"column\" class=\"totalMarin\">\r\n                  <div class=\"parentCreater\" fxLayout=\"row\">              \r\n                     \r\n                     <img  class=\"img1\" src=\"assets/images/face-7.jpg\" alt=\"\"\r\n                           >&nbsp;\r\n                           <div>\r\n                              <span class=\"headName\">{{this.cardAccountInfo?.createdByInfo?.createdBy}}\r\n                              </span><br>\r\n                              <span class=\"idSize\">EID #{{this.cardAccountInfo?.createdByInfo?.creatorId}}</span>\r\n                           </div>\r\n     \r\n               </div>\r\n               <div fxLayout=\"row\" class=\"setSize\">\r\n                  <mat-icon class=\"iconColor\" >phone                    \r\n                  </mat-icon>&nbsp;&nbsp;&nbsp;\r\n                  <span class=\"mobileNo\">\r\n                                {{this.cardAccountInfo?.createdByInfo?.mobile}}\r\n                  </span>                 \r\n               </div>\r\n               <div fxLayout=\"row\" class=\"setSize\">                \r\n                  <mat-icon class=\"iconColor\"  > mail_outline</mat-icon>&nbsp;&nbsp; &nbsp;\r\n                  <span class=\"email\">\r\n                     {{this.cardAccountInfo?.createdByInfo?.email}}\r\n                  </span>\r\n               </div>\r\n               </div>          \r\n              \r\n            </div>\r\n         <div fxLayout=\"row\" class='imgdiv'>\r\n            <div mat-card-avatar>\r\n              <div  fxLayout=\"row\" class=\"defaultImage\" *ngIf=\"imageUrl=='not_available'\" [style.background]=\"customerColorCode\">\r\n                <h1 class=\"imageText\">{{cardInfo.firstName| uppercase | slice:0:1}}{{cardInfo.lastName | uppercase | slice:0:1}}</h1>\r\n            </div>\r\n             \r\n              <div  fxLayout=\"row\" class=\"defaultImage\" *ngIf=\"imageUrl!='not_available'\">\r\n                 <img style=\"width: 120px; height: 120px; border-radius: 50%;\"\r\n                 [src]=\"imageUrl\" alt=\"\" *ngIf=\"imageUrl!='not_available'\">\r\n               </div>\r\n            </div>\r\n         </div><br><br><br><br>\r\n         <div fxLayout=\"row\" class=\"apprdiv\">\r\n            <h2>{{cardInfo.prefix}}&nbsp;{{cardInfo.firstName}}&nbsp;{{cardInfo.lastName}}</h2>\r\n         </div>\r\n\r\n          <!-- end of img row-->\r\n      <!--entry stage row-->\r\n\r\n      <div fxLayout=\"row\" class=\"flex-container\">\r\n         <div fxFlex=\"15\">\r\n            <div class='num'>1</div>\r\n            <div class='bordnum'>&nbsp;</div>\r\n         </div>\r\n         <div fxFlex=\"85\">\r\n            <h2>Application Entry Stage</h2>\r\n            <hr />\r\n            <!-- start of card initiation details-->\r\n            <div fxLayout=\"row\" fxLayoutAlign=\"space-between end\">\r\n               <h3>Card Initiation Details</h3>\r\n               <span>\r\n               <mat-icon class=\"editbtn\" [hidden]=\"editScreen\" (click)=\"editInitiationDetails()\">edit</mat-icon>  \r\n               </span>\r\n           </div>\r\n            <mat-card class='mtcd'>\r\n               <mat-card-content>\r\n                  <!--first row-->\r\n                  <div fxLayout=\"row\" class='rowbord'>\r\n                     <div fxFlex='4'></div>\r\n                     <div fxFlex='32'>\r\n                        <div class='label'>Existing Customer</div>\r\n                        <div class='labelval'>{{initiationDetails?.existingCustomer}}</div>\r\n                     </div>\r\n                     <div fxFlex='32'>\r\n                        <div class='label'>Card Type</div>\r\n                        <div class='labelval'>{{initiationDetails?.cardType}}</div>\r\n                     </div>\r\n                  <div fxFlex='32'>\r\n                    <div class='label'>Customer Account</div>\r\n                    <div class='labelval'>{{initiationDetails?.customerAccount}}</div>\r\n              \r\n                  </div>\r\n\r\n                  </div>\r\n                   <!--end of first row-->\r\n\r\n                  <!--second row-->\r\n                  <div fxLayout=\"row\" class='rowbord'>\r\n                     <div fxFlex='4'></div>\r\n                     <div fxFlex='32'>\r\n                        <div class='label'>Applicant Name</div>\r\n                        <div class='labelval'>{{initiationDetails?.applicantName}}</div>\r\n                     </div>\r\n                     <div fxFlex='32'>\r\n                        <div class='label'>Currency</div>\r\n                        <div class='labelval'>{{initiationDetails?.currency}}</div>\r\n                     </div>\r\n                     <div fxFlex='32'>\r\n                        <div class='label'>Employment Type</div>\r\n                        <div class='labelval'>{{initiationDetails?.employmentType}}</div>\r\n                     </div>\r\n                  </div>\r\n                  <!--end of second row-->\r\n\r\n                  <!--third row-->\r\n                  <div fxLayout=\"row\" class='rowbord'>\r\n                     <div fxFlex='4'></div>\r\n                     <div fxFlex='32'>\r\n                        <div class='label'>Affinity Program</div>\r\n                        <div class='labelval'>{{initiationDetails?.affinityProgram}}</div>\r\n                     </div>\r\n                     <div fxFlex='32'>\r\n                        <div class='label'>Status</div>\r\n                        <div class='labelval'>{{initiationDetails?.status}}</div>\r\n                     </div>\r\n                     <div fxFlex='32'>\r\n                        <div class='label'>Modification No</div>\r\n                        <div class='labelval'>{{initiationDetails?.modificationNo}}</div>\r\n                     </div>\r\n                     <!-- <div fxFlex='32'>\r\n                        <div class='label' *ngIf=\"accountDetails?.swiftCodeEnable\">Swift Code</div>\r\n                        <div class='labelval'>{{accountDetails?.swiftCode}}</div>\r\n                      </div> -->\r\n                     <!-- <div fxFlex='32'>\r\n                        <div class='label'>Fund By</div>\r\n                        <div class='labelval'>{{accountDetails?.fundBy}}</div>\r\n                     </div>\r\n                      -->\r\n                     <!-- <div fxFlex='32'>\r\n                       <div class='label'>Swift Code</div>\r\n                       <div class='labelval'>{{accountDetails?.swiftCode}}</div>\r\n                     </div> -->\r\n                     <!-- <div fxFlex='32' *ngIf=\"accountDetails?.fundBy == 'yes'\" >\r\n                        <div class='label'>Fund the Account</div>\r\n                        <div class='labelval'>{{accountDetails?.fundTheAccount}}</div>\r\n                     </div> -->\r\n                  </div>\r\n                  <!--end of third row-->\r\n             \r\n                  <!-- <div fxLayout=\"row\" class='rowbord nobord'>\r\n                     <div fxFlex='4'></div>   \r\n                     <div fxFlex='32'>\r\n                         <div class='label'>Swift Code</div>\r\n                          <div class='labelval'>\r\n                        <mat-slide-toggle [checked]=\"accountDetails?.swiftCodeEnable\" [disabled]=\"variable\"></mat-slide-toggle>\r\n                        </div>\r\n                       </div>\r\n                  </div> -->\r\n                 \r\n               </mat-card-content>\r\n\r\n               \r\n            </mat-card>\r\n            <!--end of card initiation details-->\r\n            <mat-card class=\"mtcd\">\r\n               <div class=\"full-width\">\r\n                  \r\n                  <div class=\"fullcard\">\r\n                      <div fxLayout=\"row\" >\r\n                          <h4 class=\"paraFont\">Customer Information</h4>\r\n                      </div>\r\n                      <div fxLayout=\"row\" fxLayoutAlign=\"center center\">\r\n                          <div fxFlex=\"100%\">\r\n                              <div class=\"full-width\">\r\n                                  <div fxLayout=\"column\" fxLayoutGap=\"2%\" fxLayoutAlign=\"space-between none\" class=\"colAlign\">\r\n                                      <div class=\"pt-16\">\r\n                                          <div>\r\n                                              <mat-card>\r\n                                                  <div fxLayout=\"row wrap\" fxLayoutAlign=\"space-around center\">\r\n                                                      <div fxFlex.xs=\"100%\"> \r\n                                                          <small class=\"headingText\">Holding Pattern</small>\r\n                                                          <h3 class=\"valueText\">{{ownership}}</h3>\r\n                                                      </div>\r\n                                                      <div fxFlex.xs=\"100%\">\r\n                                                          <small class=\"headingText\">Ownership</small>\r\n                                                          <h3 class=\"valueText\">{{ownership}}</h3>\r\n                                                      </div>\r\n                                                      <div fxFlex.xs=\"100%\">\r\n                                                          <small class=\"headingText\">Number of Applicant</small>\r\n                                                          <h3 class=\"valueText\">{{noOfApplicants}}</h3>\r\n                                                      </div>\r\n                                                  </div>\r\n                                              </mat-card>\r\n                                          </div>\r\n                                      </div>\r\n                                      <div fxLayout=\"row wrap\" *ngFor=\"let details of customerInfoDetails;let i=index\"\r\n                                          class=\"full-width\">\r\n                                          <div class=\"full-width\">\r\n                                              <mat-card>\r\n                                                  <div fxLayout=\"row wrap\" class=\"full-width\">\r\n                                                      <div class=\"pb-16\" fxFlex=\"7%\" fxFlex.xs=\"50%\" fxFlex.md=\"10%\" fxFlex.sm=\"15%\">\r\n                                                          <img height=\"50px\" width=\"50px\"\r\n                                                              src=\"assets/images/backgrounds/defaultProfileBackground.png\"\r\n                                                              class=\"rounded-circle\" />\r\n                                                      </div>\r\n                                                      <div class=\"bg-light p-8\" fxFlex=\"93%\" fxFlex.xs=\"100%\" fxFlex.md=\"90%\"\r\n                                                          fxFlex.sm=\"85%\">\r\n                                                          <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n                                                              <div>\r\n                                                                  <div fxLayout=\"row wrap\" class=\"full-width\">\r\n                                                                      <div class=\"pl-16\">\r\n                                                                          <h2 class=\"valueTextName\"><span>{{details?.firstName}}</span>&nbsp;\r\n                                                                              <span>{{details?.middleName}}</span>&nbsp;\r\n                                                                              <span>{{details?.lastName}}</span></h2>\r\n                                                                      </div>\r\n                                                                      <div class=\"pl-16 text-secondary\">|</div>\r\n                                                                      <div class=\"pl-16\">\r\n                                                                          <small class=\"valueText\">Last Updated On\r\n                                                                              {{details?.modifiedTime? details.modifiedTime : details.createdTime }}</small>\r\n                                                                      </div>\r\n                                                                  </div>\r\n                                                              </div>\r\n                                                              <!-- <div>\r\n                                                                  <button #btnEdit mat-icon-button>\r\n                                                                      <mat-icon>edit</mat-icon>\r\n                                                                  </button>\r\n                                                                  <button #btnDelete mat-icon-button>\r\n                                                                      <mat-icon>delete</mat-icon>\r\n                                                                  </button>\r\n                                                              </div> -->\r\n                                                          </div>\r\n                                                          <div fxLayout=\"row wrap\" class=\"full-width\">\r\n                                                              <div class=\"pl-16 pr-16\" *ngIf=\"!isApprovedSreen\" >\r\n                                                                  <small class=\"headingText1\">CIF\r\n                                                                      #{{details?.cifNumber}}</small>\r\n                                                              </div>\r\n                                                              <div class=\"pl-16 pr-16\" (click)=\"goTo360Dashboard()\" *ngIf=\"isApprovedSreen\">\r\n                                                                  <small class=\"headingText1\">CIF\r\n                                                                      #{{details?.cifNumber}}</small>\r\n                                                              </div>\r\n                                                          </div><br>\r\n                                                          <div fxLayout=\"row wrap\" fxLayoutAlign=\"space-between center\">\r\n                                                              <div class=\"pl-16 pr-16\" fxFlex.xs=\"100%\">\r\n                                                                  <small class=\"headingText\">Date of Birth</small><br>\r\n                                                                  <p class=\"valueText\">{{details?.dateOfBirth}}</p>\r\n                                                              </div>\r\n                                                              <div class=\"pl-16 pr-16\" fxFlex.xs=\"100%\">\r\n                                                                  <small class=\"headingText\">Email ID</small><br>\r\n                                                                  <p class=\"valueText\">{{details?.primaryEmailAdress}}</p>\r\n                                                              </div>\r\n                                                              <div class=\"pl-16 pr-16\" fxFlex.xs=\"100%\">\r\n                                                                  <small class=\"headingText\">Mobile Number</small><br>\r\n                                                                  <p class=\"valueText\">{{details?.userAddress[0]?.mobileNumber}}</p>\r\n                                                              </div>\r\n                                                              <div class=\"pl-16 pr-16\" fxFlex.xs=\"100%\">\r\n                                                                  <small class=\"headingText\">Phone Number</small><br>\r\n                                                                  <p class=\"valueText\">{{details?.phoneNumber}}</p>\r\n                                                              </div>\r\n                                                          </div>\r\n                                                      </div>\r\n                                                  </div>\r\n                                              </mat-card>\r\n                                          </div>\r\n                                      </div>\r\n                                  </div>\r\n                              </div>\r\n                              <br>\r\n                              \r\n                          </div>\r\n                      </div>\r\n                  </div>\r\n              </div>\r\n            </mat-card>\r\n        \r\n            <!--financial details-->\r\n            <div *ngIf=\"financialDetails!=null\">\r\n               <div fxLayout=\"row\" fxLayoutAlign=\"space-between end\">\r\n                  <h3>Financial Details</h3>\r\n                  <span>\r\n                  <mat-icon class=\"editbtn\" [hidden]=\"editScreen\" (click)=\"editFinancialDetails()\">edit</mat-icon>  \r\n                  </span>\r\n              </div>\r\n               <hr />\r\n               <mat-card >\r\n               <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n                  <mat-card>\r\n                     <h4>Assets and Liabilities</h4>\r\n                     <apx-chart *ngIf=\"chartOptions\" [series]=\"chartOptions.series\" [chart]=\"chartOptions.chart\"\r\n                        [plotOptions]=\"chartOptions.plotOptions\" [labels]=\"chartOptions.labels\"></apx-chart>\r\n\r\n                     <!-- need to add image -->\r\n\r\n                  </mat-card>\r\n                  <!-- end of assets and Liabilities -->\r\n\r\n                  <mat-card>\r\n                     <h4>Income and Expenses</h4>\r\n                     <apx-chart *ngIf=\"chartOptions1\" [series]=\"chartOptions1.series1\" [chart]=\"chartOptions1.chart1\"\r\n                        [yaxis]=\"chartOptions1.yaxis1\" [xaxis]=\"chartOptions1.xaxis1\" [labels]=\"chartOptions1.labels1\"\r\n                        [stroke]=\"chartOptions1.stroke1\" [markers]=\"chartOptions1.markers1\" [fill]=\"chartOptions1.fill1\"\r\n                        [tooltip]=\"chartOptions1.tooltip1\"></apx-chart>\r\n                     <!-- need to add graph -->\r\n\r\n                  </mat-card>\r\n\r\n               </div>\r\n\r\n               <!-- end of charts and graph -->\r\n\r\n               <mat-card>\r\n                  <mat-card-header fxLayout=\"row\" fxLayoutGap=\"70px\">\r\n                     <div fxLayout=\"row\" FxLayoutAlign=\"start\">\r\n                        <div class=\"circle\">\r\n                           <div class=\"content1\">\r\n                              <mat-icon>perm_identity</mat-icon>\r\n                           </div>\r\n                        </div>\r\n                        <div>\r\n                           <mat-card-title class=\"matCardTitle\" >{{designation}}</mat-card-title>\r\n                           <mat-card-subtitle style=\"color:grey; font-size: 10px;\">{{employeeNumber}},{{officeName}}\r\n                           </mat-card-subtitle>\r\n                        </div>\r\n                     </div>\r\n                     <div  class=\"matCardTitle col\"  fxLayout=\"row\" fxLayoutGap=\"80px\">\r\n                        <div>\r\n                           <div class='label'>Employment Type</div>\r\n                           <div class='labelval'>{{employmentType}}</div>\r\n                        </div>\r\n                        <div>\r\n                           <div class='label'>Employment Category</div>\r\n                           <div class='labelval'>{{employmentCategory}}</div>\r\n                        </div>\r\n                     </div>\r\n                  </mat-card-header>\r\n               </mat-card>\r\n\r\n               </mat-card>\r\n               <br />\r\n            </div>\r\n            <!-- end of Financial Details -->\r\n\r\n            <!-- Account Service Details Start -->\r\n            <div *ngIf='preferenceDetails  != null'>\r\n               <div fxLayout=\"row\" fxLayoutAlign=\"space-between end\">\r\n                  <h3>Card Preferences Details</h3>\r\n                  <span>\r\n                  <mat-icon class=\"editbtn\" [hidden]=\"editScreen\" (click)=\"editCardPreferenceDetails()\">edit</mat-icon>  \r\n                  </span>\r\n              </div>\r\n               <hr />\r\n               <mat-card>\r\n                  <mat-card-content>\r\n                     <!--first row-->\r\n                     <div fxLayout=\"row\" class='rowbord' \r\n                     *ngFor='let pref of preferenceDetails;let i=index'>\r\n                        <div fxFlex='4'></div>\r\n                        <div fxFlex='32'>\r\n                           <div class='label'>Limit Type</div>\r\n                           <div class='labelval'>{{pref.limitType}}</div>\r\n                        </div>\r\n                          <div fxFlex='32'>\r\n                           <div class='label'>Daily Limit</div>\r\n                           <div class='labelval'>{{pref.dailyLimit}}</div>\r\n                        </div>\r\n                           <div fxFlex='32'>\r\n                           <div class='label'>Limit Per Transaction</div>\r\n                           <div class='labelval'>{{pref.limitPerTransaction}}</div>\r\n                        </div>\r\n                      </div>\r\n                      <!--end of first row-->\r\n                  </mat-card-content>\r\n\r\n               </mat-card>\r\n            </div>\r\n         </div>\r\n      </div>\r\n\r\n<!--Document Upload starts here-->\r\n      <!-- <div fxLayout=\"row\" class=\"flex-container\" >\r\n         <div fxFlex=\"15\">\r\n            <div class='num'>2</div>\r\n            <div class='bordnum'>&nbsp;</div>\r\n         </div>\r\n         <div fxFlex=\"85\">\r\n            <h2>Digital Sign</h2>\r\n            <hr />\r\n            <h3>Digital Sign</h3>\r\n\r\n            <mat-card class='mtcd'>\r\n               <mat-card-content>\r\n                  <div fxLayout=\"row\" class='rowbord'>\r\n                     <div fxFlex='4'></div>\r\n                     <div fxFlex='32'>\r\n                        <div class='label'>Document Name</div>\r\n                        <div class='labelval'>{{signatureData?.documentName}}</div>\r\n                     </div>\r\n                     <div fxFlex='32'>\r\n                        <div class='label'>File Type</div>\r\n                        <div class='labelval'>{{signatureData?.fileType}}</div>\r\n                     </div>\r\n                     <div fxFlex='32'>\r\n                        <div class='label'>File Name</div>\r\n                        <div class='labelval'>{{signatureData?.fileName}}</div>\r\n                     </div>\r\n                     <div fxFlex='32'>\r\n                        <div class='label'>Download</div>\r\n                        <div *ngIf=\"signatureData?.fileUrl\" class='labelval'>\r\n                           <a class=\"linkColor\" href={{signatureData.fileUrl}} download>link</a>\r\n                           <link >\r\n                        </div>\r\n                     </div>\r\n                  </div>\r\n               </mat-card-content>\r\n            </mat-card>\r\n            <hr />\r\n         </div>\r\n        </div> -->\r\n\r\n      <div fxLayout=\"row\" class=\"flex-container\" *ngIf=\"intrestDetails?.length > 0 || chargeDetails?.length > 0\">\r\n               <div fxFlex=\"15\">\r\n                  <div class='num'>2</div>\r\n                  <div class='bordnum'>&nbsp;</div>\r\n               </div>\r\n               <div fxFlex=\"85\">\r\n                  <h2>Application Enrichment</h2>\r\n                  <hr />\r\n      \r\n                  <!-- Interest Details Starts -->\r\n                  <mat-card *ngIf=\"intrestDetails?.length > 0\">\r\n                     <div fxLayout=\"row\" fxLayoutAlign=\"space-between end\">\r\n                        <h3>Interest Details</h3>\r\n                        <span>\r\n                        <mat-icon class=\"editbtn\" [hidden]=\"editScreen\" (click)=\"editInterestDetails()\">edit</mat-icon>  \r\n                        </span>\r\n                    </div>\r\n                     <mat-card *ngFor='let interestData of intrestDetails;let i=index'>\r\n                        <div>\r\n                           <h4>Fixed Interest</h4>\r\n                        </div>\r\n                        <div fxLayout=\"row\" fxLayouutAlign=\"space-between center\">\r\n                           <div>\r\n                              <mat-card class='interstcard'>\r\n                                 <div>\r\n                                    <div class='label'>Interest Type</div>\r\n                                    <div class='labelval'>{{interestData.intrestType}}</div>\r\n                                 </div>\r\n                              </mat-card>\r\n                           </div>\r\n                           <div>\r\n                              <mat-card class='interstcard' >\r\n                                 <div>\r\n                                    <div class='label'>Applicable Interest Rate</div>\r\n                                    <div class='labelval'>{{interestData.intrestRateApplicable}}</div>\r\n                                 </div>\r\n                              </mat-card>\r\n                           </div>\r\n                           <div>\r\n                              <mat-card class='interstcard' >\r\n                                 <div>\r\n                                    <div class='label'>Effective Rate %</div>\r\n                                    <div class='labelval'>{{interestData.effectiveRate}}</div>\r\n                                 </div>\r\n                              </mat-card>\r\n                           </div>\r\n                           <div>\r\n                              <mat-card class='interstcard'>\r\n                                 <div>\r\n                                    <div class='label'>Margin In %</div>\r\n                                    <div class='labelval'>{{interestData.marginIn}}</div>\r\n                                 </div>\r\n                              </mat-card>\r\n                           </div>\r\n                        </div>\r\n                     </mat-card>\r\n\r\n                  </mat-card>\r\n                  <br />\r\n                  <hr />\r\n                  <!-- end of Interest Details -->\r\n\r\n                  <!-- Charge Details Starts -->\r\n                  <mat-card *ngIf=\"chargeDetails?.length > 0\">\r\n                     <div fxLayout=\"row\" fxLayoutAlign=\"space-between end\">\r\n                        <h3>Charge Details</h3>\r\n                        <span>\r\n                        <mat-icon class=\"editbtn\" [hidden]=\"editScreen\" (click)=\"editChargeDetails()\">edit</mat-icon>  \r\n                        </span>\r\n                    </div>\r\n                     <mat-card *ngFor='let chargeData of chargeDetails;let i=index'>\r\n                        <div>\r\n                           <h4>IT Charge</h4>\r\n                        </div>\r\n                        <div>\r\n                           <div>\r\n                              <mat-card class='appersoninfocard' style=\"width:100px\">\r\n                                 <div>\r\n                                    <div class='label'>Amount</div>\r\n                                    <div class='labelval'>{{chargeData.amount}}</div>\r\n                                 </div>\r\n                              </mat-card>\r\n                           </div>\r\n                        </div>\r\n                     </mat-card>\r\n\r\n                  </mat-card>\r\n                  <!-- end of Charge Details -->\r\n               </div>\r\n      </div>\r\n       <!-- end of stage 2 -->\r\n\r\n      <!--stage 3-->\r\n      <div fxLayout=\"row\" class=\"flex-container\" *ngIf=\"creditRatingDetails?.agencyRating?.length > 0\">\r\n         <div fxFlex=\"15\">\r\n            <div class='num'>3</div>\r\n            <div class='bordnum'>&nbsp;</div>\r\n         </div>\r\n         <br>\r\n         <div fxFlex=\"85\">\r\n            <h2>Underwriting Stage</h2>\r\n            <hr />\r\n            <div>\r\n               <div fxLayout=\"row\" fxLayoutAlign=\"space-between end\">\r\n                  <h3>Credit Score Details</h3>\r\n                  <span>\r\n                  <mat-icon class=\"editbtn\" [hidden]=\"editScreen\" (click)=\"editCreditScoreDetails()\">edit</mat-icon>  \r\n                  </span>\r\n              </div>\r\n              <div class=\"fullcard\">\r\n                  <div fxLayout=\"row\" fxLayoutAlign=\"center center\">\r\n                      <div fxFlex=\"100%\">\r\n                          <mat-card class=\"chequecard\">\r\n                              <mat-card-content>\r\n                                  <div class=\"full-width\" >\r\n                                       <div fxLayout=\"column\" fxLayoutGap=\"6%\" fxLayoutAlign=\"space-between none\">\r\n                                          <div fxLayout=\"row wrap\" class=\"flex-container stretch\">\r\n                                              <ng-container>\r\n                                                  <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                                      <mat-hint class=\"label\">Customer Name</mat-hint>\r\n                                                              <br>\r\n                                                       <mat-hint class=\"labelval\">{{customerName}}</mat-hint>\r\n                                                  </div>\r\n                                             </ng-container>\r\n                                          </div>\r\n                                       </div>\r\n                                  </div>\r\n                              </mat-card-content>\r\n                          </mat-card>\r\n                      </div>\r\n                  </div>\r\n              </div>\r\n              <div class=\"fullcard\">\r\n                  <div fxLayout=\"row\" fxLayoutAlign=\"center center\">\r\n                      <div fxFlex=\"100%\">\r\n                          <!-- <div *ngFor='let credit of creditRatingDetails.agencyRating; i=index'> -->\r\n                              <mat-card class=\"chequecard\">\r\n                                  <mat-card-content>\r\n                                      <div class=\"full-width\" >\r\n                                          <div fxLayout=\"column\" fxLayoutGap=\"6%\" fxLayoutAlign=\"space-between none\">\r\n                                              <div fxLayout=\"row wrap\" class=\"flex-container stretch\">\r\n                                                   <ng-container>\r\n                                                          <div fxFlex=\"5%\" fxFlex.xs=\"100%\" class=\"inputCardclass\" fxLayoutAlign=\"end start\">\r\n                                                           </div>\r\n                                                          <div fxFlex fxFlex.xs=\"100%\" class=\"inputCardclass\">\r\n                                                              <mat-card class=\"inputCard\">\r\n                                                                  <h3>Score</h3><br>\r\n                                                                      <div fxLayout=\"column\" fxLayoutGap=\"10%\" fxLayoutAlign=\"space-between none\">\r\n                                                                      <div fxLayout=\"row wrap\" class=\"flex-container stretch\">\r\n                                                                          <ng-container>\r\n                                                                              <div fxFlex=\"20%\" fxFlex.xs=\"50%\">\r\n                                                                                  <mat-hint class=\"label\">Agency</mat-hint><br>\r\n                                                                                  <mat-hint class=\"labelval\">{{agencyName}}</mat-hint>\r\n                                                                              </div>\r\n                                                                              <div fxFlex=\"20%\" fxFlex.xs=\"50%\">\r\n                                                                                  <mat-hint class=\"label\">Score</mat-hint><br>\r\n                                                                                  <mat-hint class=\"labelval\">{{ratings}}</mat-hint>\r\n                                                                              </div>   \r\n                                                                          </ng-container>\r\n                                                                      </div>\r\n                                                                      </div><br>\r\n                                                                      <div fxLayout=\"column\" fxLayoutGap=\"6%\" fxLayoutAlign=\"space-between none\">\r\n                                                                          <div fxLayout=\"row wrap\" class=\"flex-container stretch\">\r\n                                                                              <ng-container>\r\n                                                                                  <div fxFlex=\"20%\" fxFlex.xs=\"50%\">\r\n                                                                                      <mat-hint class=\"label\">Remarks</mat-hint><br>\r\n                                                                                      <mat-hint class=\"labelval\">{{remarks}} </mat-hint>\r\n                                                                                  </div>\r\n                                                                              </ng-container>\r\n                                                                          </div>\r\n                                                                      </div>\r\n                                                              </mat-card>\r\n                                                          </div>\r\n                                                  </ng-container>\r\n                                              </div>    \r\n                                          </div>\r\n                                      </div>\r\n                                   </mat-card-content>\r\n\r\n                              </mat-card>\r\n                           <!-- </div> -->\r\n                      </div>\r\n                  </div>\r\n              </div> \r\n            </div>\r\n            <hr />\r\n         </div>\r\n      </div>\r\n      <!--end of stage 3-->\r\n\r\n\r\n      <!--stage 4-->\r\n      <div fxLayout=\"row\" class=\"flex-container\">\r\n         <div fxFlex=\"15\">\r\n            <div class='num'>4</div>\r\n            <div class='bordnum'>&nbsp;</div>\r\n         </div>\r\n         <div fxFlex=\"85\">\r\n            <h2>Assessment Stage</h2>\r\n            <hr />\r\n            <div fxLayout=\"row\" fxLayoutAlign=\"space-between end\">\r\n               <h3>Assessment Report</h3>\r\n               <span>\r\n               <mat-icon class=\"editbtn\" [hidden]=\"editScreen\" (click)=\"editAssessmentReport()\">edit</mat-icon>  \r\n               </span>\r\n           </div>\r\n            <mat-card class='mtcd'>\r\n               <mat-card-content>\r\n                  <div fxLayout=\"row\" class='rowbord'>\r\n                     <div fxFlex='4'></div>\r\n                     <div fxFlex='32'>\r\n                        <div class='label'>Requested Card Limit</div>\r\n                        <div class='labelval'>{{assessmentDetails?.requestedCardLimit}}</div>\r\n                     </div>\r\n                     <div fxFlex='32'>\r\n                        <div class='label'>System Recommendation</div>\r\n                        <div class='labelval'>{{assessmentDetails?.systemRecommendation}}</div>\r\n                     </div>\r\n                  <div fxFlex='32'>\r\n                    <div class='label'>User Recommendation</div>\r\n                    <div class='labelval'>{{assessmentDetails?.userRecommendation}}</div>\r\n                  </div>\r\n                  </div>\r\n\r\n                  <div fxLayout=\"row\" class='rowbord'>\r\n                     <div fxFlex='4'></div>\r\n                     <div fxFlex='32'>\r\n                        <div class='label'>Recommended Card Limit</div>\r\n                        <div class='labelval'>{{assessmentDetails?.recommendedCardLimit}}</div>\r\n                     </div>\r\n                     <div fxFlex='32'>\r\n                        <div class='label'>Approved Card Limit</div>\r\n                        <div class='labelval'>{{assessmentDetails?.approvedCardLimit}}</div>\r\n                     </div>\r\n                     <!-- <div fxFlex='32'>\r\n                        <div class='label'>Employment Type</div>\r\n                        <div class='labelval'>{{initiationDetails?.employmentType}}</div>\r\n                     </div> -->\r\n                  </div>\r\n               </mat-card-content>\r\n\r\n            </mat-card>\r\n         </div>\r\n      </div>\r\n      <!--end of stage 4-->\r\n\r\n      <!--start of stage 5-->\r\n       <div fxLayout=\"row\" class=\"flex-container\">\r\n         <div fxFlex=\"15\">\r\n            <div class='num'>5</div>\r\n            <div class='bordnum'>&nbsp;</div>\r\n         </div>\r\n         <div fxFlex=\"85\">\r\n            <h2>Approval Stage</h2>\r\n            <hr />\r\n            <div fxLayout=\"row\" fxLayoutAlign=\"space-between end\">\r\n               <h3>Approval Details</h3>\r\n               <span>\r\n               <mat-icon class=\"editbtn\" [hidden]=\"editScreen\" (click)=\"editApprovalDetails()\">edit</mat-icon>  \r\n               </span>\r\n           </div>\r\n            <mat-card class='mtcd'>\r\n               <mat-card-content>\r\n                  <!--first row-->\r\n                  <div fxLayout=\"row\" class='rowbord'>\r\n                     <div fxFlex='4'></div>\r\n                     <div fxFlex='32'>\r\n                        <div class='label'>Account Type</div>\r\n                        <div class='labelval'>{{approvalDetails?.accountType}}</div>\r\n                     </div>\r\n                     <div fxFlex='32'>\r\n                        <div class='label'>Account Branch</div>\r\n                        <div class='labelval'>{{approvalDetails?.accountBranch}}</div>\r\n                     </div>\r\n                  <div fxFlex='32'>\r\n                    <div class='label'>Product Code</div>\r\n                    <div class='labelval'>{{approvalDetails?.productCode}}</div>\r\n                  </div>\r\n                  </div>\r\n                   <!--end of first row-->\r\n\r\n                  <!--second row-->\r\n                  <div fxLayout=\"row\" class='rowbord'>\r\n                     <div fxFlex='4'></div>\r\n                     <div fxFlex='32'>\r\n                        <div class='label'>Product Name</div>\r\n                        <div class='labelval'>{{approvalDetails?.productName}}</div>\r\n                     </div>\r\n                     <div fxFlex='32'>\r\n                        <div class='label'>Account Currency</div>\r\n                        <div class='labelval'>{{approvalDetails?.accountCurrency}}</div>\r\n                     </div>\r\n                     <div fxFlex='32'>\r\n                        <div class='label'>Existing Value</div>\r\n                        <div class='labelval'>{{approvalDetails?.existingValues}}</div>\r\n                     </div>\r\n                  </div>\r\n                  <!--end of second row-->\r\n\r\n                  <!--third row-->\r\n                  <div fxLayout=\"row\" class='rowbord'>\r\n                  <div fxFlex='32'>\r\n                  <mat-card class='appersoninfocard' style=\"width:250px\">\r\n                     <div fxLayout=\"row\" class='rowbord nobord'>\r\n                        <div fxLayout=\"row\" fxLayoutAlign=\" start\">\r\n                           <div class=\"circle1\">\r\n                              <div class=\"content2\">\r\n                                 <mat-icon>done</mat-icon>\r\n                              </div>\r\n                           </div>\r\n                        </div>\r\n                        <div style=\"padding-bottom: 20px;\" >\r\n                           <div class='label'>User Recommendation</div>\r\n                           <div class='labelval'>{{approvalDetails?.userRecommendation}}</div>\r\n                        </div>\r\n                     </div>\r\n                  </mat-card>\r\n                  </div>\r\n                  <!-- <div fxLayout=\"row\" class='rowbord'> -->\r\n                     <div fxFlex='4'></div>\r\n                     <!-- <div fxFlex='32'>\r\n                        <div class='label'>User Recommendation</div>\r\n                        <div class='labelval'>{{approvalDetails?.userRecommendation}}</div>\r\n                     </div> -->\r\n                     <div fxFlex='32'>\r\n                        <div class='label'>Remarks</div>\r\n                        <div class='labelval'>{{approvalDetails?.remarks}}</div>\r\n                     </div>\r\n                  </div>\r\n                  <!--end of third row-->\r\n               </mat-card-content>\r\n\r\n            </mat-card>  \r\n            <div fxLayout=\"row\" fxLayoutAlign=\"end\" fxLayoutGap=\"20px\">\r\n               <div>\r\n                   <button type=\"button\"  class=\"rejectbtn\" [hidden]=\"rejectedStatus\"\r\n                   [ngClass]=\"{'disabledbtn':rejectedStatus,'rejectbtn': !rejectedStatus }\"\r\n                          (click)=\"updateApplicationStatus(initiationDetails,'REJECTED')\">\r\n                          Reject\r\n                       </button>\r\n                       &nbsp;&nbsp;\r\n                       <button type=\"button\"  class=\"approvebtn\" [hidden]=\"approvedStatus\"\r\n                       [ngClass]=\"{'disabledbtn':approvedStatus,'approvebtn': !approvedStatus }\"\r\n                             (click)=\"updateApplicationStatus(initiationDetails,'APPROVED')\">Approve</button> \r\n                             &nbsp;&nbsp;\r\n                     <!-- <button type=\"button\" class=\"editbtn\"  [hidden]=\"editScreen\"\r\n                     (click)=\"goToCardAccount()\">Edit</button> \r\n                                   &nbsp;&nbsp;&nbsp; -->\r\n                   \r\n                </div>\r\n               </div>\r\n           \r\n         </div>\r\n      </div>\r\n      <!--end of stage 5-->\r\n            \r\n        </div>\r\n       </div>\r\n      </div>\r\n   </div>\r\n</div>"]}